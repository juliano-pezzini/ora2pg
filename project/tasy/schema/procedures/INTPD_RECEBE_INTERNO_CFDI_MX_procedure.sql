-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE intpd_recebe_interno_cfdi_mx ( nm_usuario_p text, cd_estabelecimento_p bigint, nr_seq_nf_imp_arquivo_p bigint, xml_p text) AS $body$
DECLARE

										
parser_w				DBMS_XMLPARSER.Parser;
document_w				DBMS_XMLDOM.DOMDocument;
root_element_w			DBMS_XMLDOM.DOMElement;
emisor_node_w			DBMS_XMLDOM.DOMNode;
conceptos_node_w		DBMS_XMLDOM.DOMNode;
concepto_node_w			DBMS_XMLDOM.DOMNode;
receptor_node_w			DBMS_XMLDOM.DOMNode;
parte_node_w			DBMS_XMLDOM.DOMNode;
child_list_w			DBMS_XMLDOM.DOMNodeList;
parte_list_w			DBMS_XMLDOM.DOMNodeList;
attribute_list_w		DBMS_XMLDOM.DOMNamedNodeMap;
qt_tamanho_w			integer;
qt_tamanho_ww			integer;
qt_tamanho_conceptos_w	integer;

/*Aux*/

cd_chave_aux_w			nf_imp_chave.cd_chave%type;

/*Nota fiscal*/

nr_seq_nota_w			nf_imp_nota.nr_sequencia%type;
nr_seq_moneda_w			nf_imp_nota.nr_seq_chave_moeda%type;
ds_ident_emisor_w		nf_imp_nota.nr_ident_emissor%type;
ds_nome_emisor_w		nf_imp_nota.ds_nome_emissor%type;
ds_ident_receptor_w		nf_imp_nota.ds_nome_receptor%type;
ds_nome_receptor_w		nf_imp_nota.ds_nome_receptor%type;
nr_seq_forma_pag_w		nf_imp_nota.nr_seq_chave_forma_pag%type;
nr_certificado_w 		nf_imp_nota.nr_certificado%type;
ds_certificado_w		nf_imp_nota.ds_certificado%type;
ds_condicao_pag_w		nf_imp_nota.ds_condicao_pag%type;
ds_versao_w				nf_imp_nota.ds_versao%type;
ds_serie_w				nf_imp_nota.ds_serie%type;
ds_numero_w				nf_imp_nota.ds_numero%type;
ds_selo_w				nf_imp_nota.ds_selo%type;
dt_emissao_w			nf_imp_nota.dt_emissao%type;
vl_subtotal_w			nf_imp_nota.vl_subtotal%type;
vl_total_w				nf_imp_nota.vl_total%type;
vl_desconto_nota_w		nf_imp_nota.vl_desconto%type;
tx_cambio_w				nf_imp_nota.tx_cambio%type;
cd_postal_emissor_w		nf_imp_nota.cd_postal_emitente%type;
nr_confirmacao_w		nf_imp_nota.nr_confirmacao%type;

/*Itens*/

nr_seq_item_w				nf_imp_nota_item.nr_sequencia%type;
nr_seq_parte_w				nf_imp_nota_item.nr_sequencia%type;
qt_item_w           		nf_imp_nota_item.qt_item%type;
nr_seq_chave_unidade_w		nf_imp_nota_item.nr_seq_chave_unidade%type;
nr_seq_chave_prod_serv_w	nf_imp_nota_item.nr_seq_chave_prod_serv%type;
ds_item_w					nf_imp_nota_item.ds_item%type;
vl_unitario_w				nf_imp_nota_item.vl_unitario%type;
vl_item_w					nf_imp_nota_item.vl_item%type;
vl_desconto_item_w			nf_imp_nota_item.vl_desconto%type;
cd_unidade_emissor_w		nf_imp_nota_item.cd_unidade_emissor%type;

/*Impostos*/

nr_seq_imposto_w		nf_imp_nota_imposto.nr_sequencia%type;
nr_seq_chave_imposto_w	nf_imp_nota_imposto.nr_seq_chave_imposto%type;
tipo_fator_w			nf_imp_nota_imposto.ie_fator%type;
taxacota_w				nf_imp_nota_imposto.tx_imposto%type;
importe_w				nf_imp_nota_imposto.vl_base_calculo%type;
vl_base_imposto_w		nf_imp_nota_imposto.vl_imposto%type;
imposto_attrib_list_w   DBMS_XMLDOM.DOMNamedNodeMap;
impostos_list_w			DBMS_XMLDOM.DOMNodeList;
imposto_list_w			DBMS_XMLDOM.DOMNodeList;
tipo_imposto_node_w		DBMS_XMLDOM.DOMNode;
imposto_node_w			DBMS_XMLDOM.DOMNode;
impostos_node_w			DBMS_XMLDOM.DOMNode;
ds_tipo_fator_w			varchar(10);
ds_imposto_w            varchar(10);
ie_traslado_w			varchar(1);
qt_tamanho_impostos_w	integer;
qt_tamanho_impostos_ww	integer;
qt_impostos_w			integer;

/*CFDI Relacionados*/

cfdi_rel_attrib_list_w		DBMS_XMLDOM.DOMNamedNodeMap;
cfdi_relacionados_list_w	DBMS_XMLDOM.DOMNodeList;
cfdi_relacionados_node_w	DBMS_XMLDOM.DOMNode;
cfdi_relacionado_node_w 	DBMS_XMLDOM.DOMNode;
ie_tipo_relacao_w			nf_imp_nota_relacao.nr_seq_chave_tipo_relac%type;
nr_seq_relacao_w			nf_imp_nota_relacao.nr_sequencia%type;
qt_tamanho_relacionados_w	integer;
nr_id_relacao_w				varchar(50);
nr_seq_chave_relacao_w		bigint;

/*Complementos*/

complementos_list_w			DBMS_XMLDOM.DOMNodeList;
complemento_node_w			DBMS_XMLDOM.DOMNode;
complementos_node_w			DBMS_XMLDOM.DOMNode;
nr_uuid_w					varchar(255);

/*nota fiscal*/

nr_seq_nf_w			nota_fiscal.nr_sequencia%type;
vl_total_nota_w		nf_imp_nota.vl_total%type;
cd_serie_nf_w		nf_imp_nota.ds_serie%type;
nr_nota_fiscal_w	nf_imp_nota.ds_numero%type;
nr_seq_nf_imp_w		nf_imp_nota.nr_seq_nf_interno%type;
--dt_emissao_w		nf_imp_nota.dt_emissao%type;
cd_cgc_w			pessoa_juridica.cd_cgc%type;
cd_pessoa_fisica_w	pessoa_fisica.cd_pessoa_fisica%type;
ds_msg_w					varchar(2000);
qtd_w                   bigint;

error_tag_w		varchar(50);

BEGIN
parser_w := DBMS_XMLPARSER.newparser();
DBMS_XMLPARSER.parseclob(parser_w, xml_p);
document_w := DBMS_XMLPARSER.getDocument(parser_w);

/* /cfdi:Comprobante */

root_element_w := DBMS_XMLDOM.GetDocumentElement(document_w);

if not(DBMS_XMLDOM.isNull(root_element_w)) then

	/*Insere cabecalho da nota*/

	select	nextval('nf_imp_nota_seq')
	into STRICT	nr_seq_nota_w
	;
	
	begin
	
		/*Dados do emissor - /cfdi:Emisor */

		error_tag_w := 'Emisor';
		child_list_w := DBMS_XMLDOM.GetChildrenByTagName(root_element_w, 'Emisor');
		emisor_node_w := DBMS_XMLDOM.Item(child_list_w, 0);

		attribute_list_w := DBMS_XMLDOM.GetAttributes(emisor_node_w);
		
		error_tag_w := 'Rfc Emisor';
		ds_ident_emisor_w := coalesce(DBMS_XMLDOM.GetNodeValue(DBMS_XMLDOM.GetNamedItem(attribute_list_w, 'rfc')), DBMS_XMLDOM.GetNodeValue(DBMS_XMLDOM.GetNamedItem(attribute_list_w, 'Rfc')));
		
		error_tag_w := 'Nombre Emisor';
		ds_nome_emisor_w := coalesce(DBMS_XMLDOM.GetNodeValue(DBMS_XMLDOM.GetNamedItem(attribute_list_w, 'nombre')), DBMS_XMLDOM.GetNodeValue(DBMS_XMLDOM.GetNamedItem(attribute_list_w, 'Nombre')));
		/*fim dados do emissor*/

		
	exception when data_exception then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(WHEB_MENSAGEM_PCK.get_texto(1196605, 'DS_TAG='||error_tag_w));
	end;
	
	begin
		/*Dados do receptor - /cfdi:Receptor */

		error_tag_w := 'Receptor';
		child_list_w := DBMS_XMLDOM.GetChildrenByTagName(root_element_w, 'Receptor');
		receptor_node_w := DBMS_XMLDOM.Item(child_list_w, 0);

		attribute_list_w := DBMS_XMLDOM.GetAttributes(receptor_node_w);
		
		error_tag_w := 'Rfc Receptor';
		ds_ident_receptor_w := coalesce(DBMS_XMLDOM.GetNodeValue(DBMS_XMLDOM.GetNamedItem(attribute_list_w, 'rfc')), DBMS_XMLDOM.GetNodeValue(DBMS_XMLDOM.GetNamedItem(attribute_list_w, 'Rfc')));
		
		error_tag_w := 'Nombre Receptor';
		ds_nome_receptor_w := coalesce(DBMS_XMLDOM.GetNodeValue(DBMS_XMLDOM.GetNamedItem(attribute_list_w, 'nombre')), DBMS_XMLDOM.GetNodeValue(DBMS_XMLDOM.GetNamedItem(attribute_list_w, 'Nombre')));
		/*fim dados do receptor*/

		
	exception when data_exception then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(WHEB_MENSAGEM_PCK.get_texto(1196606, 'DS_TAG='||error_tag_w));
	end;
	
	begin
		/*Dados da nota - /cfdi:Comprobante */

		error_tag_w 	:= 'Version';
		ds_versao_w 	:= coalesce(DBMS_XMLDOM.GetAttribute(root_element_w, 'version'), DBMS_XMLDOM.GetAttribute(root_element_w, 'Version'));
		error_tag_w 	:= 'Serie';
		ds_serie_w 	:= coalesce(DBMS_XMLDOM.GetAttribute(root_element_w, 'serie'), DBMS_XMLDOM.GetAttribute(root_element_w, 'Serie'));
		error_tag_w 	:= 'Folio';
		ds_numero_w 	:= coalesce(DBMS_XMLDOM.GetAttribute(root_element_w, 'folio'), DBMS_XMLDOM.GetAttribute(root_element_w, 'Folio'));
		error_tag_w 	:= 'Sello';
		ds_selo_w 	:= coalesce(DBMS_XMLDOM.GetAttribute(root_element_w, 'sello'), DBMS_XMLDOM.GetAttribute(root_element_w, 'Sello'));
		
	exception when data_exception then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(WHEB_MENSAGEM_PCK.get_texto(1196607, 'DS_TAG='||error_tag_w));
	end;	
	
	
	begin
		/*No San Javier a package date_utils apresenta problemas quando executada em um  servidor windows por isso este tratamento especifico para o formato de data mexicano no caso de erro*/

		dt_emissao_w := pkg_date_utils.get_date(substr(coalesce(DBMS_XMLDOM.GetAttribute(root_element_w, 'fecha'), DBMS_XMLDOM.GetAttribute(root_element_w, 'Fecha')), 1, 10));

	exception when data_exception then

		dt_emissao_w := to_date((SUBSTR(coalesce(DBMS_XMLDOM.GetAttribute(root_element_w, 'fecha'), DBMS_XMLDOM.GetAttribute(root_element_w, 'Fecha')), 1, 10)),'yyyy-mm-dd');

	end;

	begin

		vl_subtotal_w 		:= coalesce(DBMS_XMLDOM.GetAttribute(root_element_w, 'subTotal'), DBMS_XMLDOM.GetAttribute(root_element_w, 'SubTotal'));	
		vl_desconto_nota_w 	:= coalesce(DBMS_XMLDOM.GetAttribute(root_element_w, 'descuento'), DBMS_XMLDOM.GetAttribute(root_element_w, 'Descuento'));
		vl_total_w 			:= coalesce(DBMS_XMLDOM.GetAttribute(root_element_w, 'total'), DBMS_XMLDOM.GetAttribute(root_element_w, 'Total'));
		tx_cambio_w 		:= coalesce(DBMS_XMLDOM.GetAttribute(root_element_w, 'tipoCambio'), DBMS_XMLDOM.GetAttribute(root_element_w, 'TipoCambio'));

	exception when data_exception then

		vl_subtotal_w 		:= replace(coalesce(DBMS_XMLDOM.GetAttribute(root_element_w, 'subTotal'), DBMS_XMLDOM.GetAttribute(root_element_w, 'SubTotal')), '.', ',');
		vl_desconto_nota_w 	:= replace(coalesce(DBMS_XMLDOM.GetAttribute(root_element_w, 'descuento'), DBMS_XMLDOM.GetAttribute(root_element_w, 'Descuento')), '.', ',');
		vl_total_w 			:= replace(coalesce(DBMS_XMLDOM.GetAttribute(root_element_w, 'total'), DBMS_XMLDOM.GetAttribute(root_element_w, 'Total')), '.', ',');
		tx_cambio_w 		:= replace(coalesce(DBMS_XMLDOM.GetAttribute(root_element_w, 'tipoCambio'), DBMS_XMLDOM.GetAttribute(root_element_w, 'TipoCambio')), '.', ',');

	end;

	nr_certificado_w 	:=	coalesce(DBMS_XMLDOM.GetAttribute(root_element_w, 'noCertificado'), DBMS_XMLDOM.GetAttribute(root_element_w, 'NoCertificado'));
	ds_certificado_w 	:= coalesce(DBMS_XMLDOM.GetAttribute(root_element_w, 'certificado'), DBMS_XMLDOM.GetAttribute(root_element_w, 'Certificado'));
	ds_condicao_pag_w 	:= coalesce(DBMS_XMLDOM.GetAttribute(root_element_w, 'condicionesDePago'), DBMS_XMLDOM.GetAttribute(root_element_w, 'CondicionesDePago'));	
	cd_postal_emissor_w	:= substr(coalesce(DBMS_XMLDOM.GetAttribute(root_element_w, 'lugarExpedicion'), DBMS_XMLDOM.GetAttribute(root_element_w, 'LugarExpedicion')), 1 , 15);
	nr_confirmacao_w 	:= coalesce(DBMS_XMLDOM.GetAttribute(root_element_w, 'confirmacion'), DBMS_XMLDOM.GetAttribute(root_element_w, 'Confirmacion'));

	cd_chave_aux_w := coalesce(DBMS_XMLDOM.GetAttribute(root_element_w, 'moneda'), DBMS_XMLDOM.GetAttribute(root_element_w, 'Moneda'));

	select	max(nr_sequencia)
	into STRICT	nr_seq_moneda_w
	from	nf_imp_chave
	where	cd_chave = cd_chave_aux_w
	and		ie_tipo_chave = 'MON';

	cd_chave_aux_w := coalesce(DBMS_XMLDOM.GetAttribute(root_element_w, 'formapago'), DBMS_XMLDOM.GetAttribute(root_element_w, 'FormaPago'));

	select	max(nr_sequencia)
	into STRICT	nr_seq_forma_pag_w
	from	nf_imp_chave
	where	cd_chave = cd_chave_aux_w
	and		ie_tipo_chave = 'FP';
	
	--  para nao importar o mesmo mais de uma vez
	select count(*)
	into STRICT   qtd_w
	from   nf_imp_nota
	where  ds_selo = ds_selo_w;

if (qtd_w = 0) then	

	insert into nf_imp_nota(
		nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		ds_versao,
		ds_serie,
		ds_numero,
		nr_numero,
		dt_emissao,
		ds_selo,
		nr_seq_chave_forma_pag,
		nr_certificado,
		ds_certificado,
		ds_condicao_pag,
		vl_subtotal,
		vl_desconto,
		nr_seq_chave_moeda,
		tx_cambio,
		vl_total,
		nr_seq_chave_tipo_comp,
		nr_seq_chave_parcel,
		cd_postal_emitente,
		nr_confirmacao,
		nr_ident_emissor,
		ds_nome_emissor,
		nr_seq_chave_reg_fis_emissor,
		nr_ident_receptor,
		ds_nome_receptor,
		nr_seq_chave_pais_recep,
		nr_reg_id_trib_receptor,
		nr_seq_chave_tp_uso_recep,
		vl_tot_imposto_retido,
		vl_tot_imposto_transf,
		nr_seq_nf_imp_arquivo,
		nr_seq_nf_interno)
	values (
		nr_seq_nota_w,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		ds_versao_w,
		ds_serie_w,
		ds_numero_w,
		obter_somente_numero(ds_numero_w),
		dt_emissao_w,
		ds_selo_w,
		nr_seq_forma_pag_w,
		nr_certificado_w,
		ds_certificado_w,
		ds_condicao_pag_w,
		vl_subtotal_w,
		vl_desconto_nota_w,
		nr_seq_moneda_w,
		tx_cambio_w,
		vl_total_w,
		null, -- nr_seq_chave_tipo_comp
		null, -- nr_seq_chave_parcel
		cd_postal_emissor_w,
		nr_confirmacao_w,
		ds_ident_emisor_w,
		ds_nome_emisor_w,
		null, -- nr_seq_chave_reg_fis_emissor
		ds_ident_receptor_w,
		ds_nome_receptor_w,
		null, --nr_seq_chave_pais_recep_w,
		null, -- nr_reg_id_trib_receptor
		null, --nr_seq_chave_tp_uso_recep_w,   -- nr_seq_chave_tp_uso_recep
		null, -- vl_tot_imposto_retido
		null, -- vl_tot_imposto_transf)
		nr_seq_nf_imp_arquivo_p,
		null);
	
	begin
	
		/*Itens da nota fiscal - /cfdi:Conceptos/Concepto */

		error_tag_w := 'Conceptos';
		child_list_w := DBMS_XMLDOM.GetChildrenByTagName(root_element_w, 'Conceptos');
		conceptos_node_w := DBMS_XMLDOM.Item(child_list_w, 0);

		child_list_w := DBMS_XMLDOM.GetChildNodes(conceptos_node_w);
		qt_tamanho_w := DBMS_XMLDOM.GetLength(child_list_w);
	
	exception when data_exception then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(WHEB_MENSAGEM_PCK.get_texto(1196608, 'DS_TAG='||error_tag_w));
	end;
	
	for i in 0 .. qt_tamanho_w - 1 loop
		begin
			select 	nextval('nf_imp_nota_item_seq')
			into STRICT 	nr_seq_item_w
			;

			concepto_node_w := DBMS_XMLDOM.Item(child_list_w, i);
			attribute_list_w := DBMS_XMLDOM.GetAttributes(concepto_node_w);
			
			error_tag_w 	:= 'claveProdServ/ClaveProdServ Item: ' || i;
			cd_chave_aux_w 	:= coalesce(DBMS_XMLDOM.GetNodeValue(DBMS_XMLDOM.GetNamedItem(attribute_list_w, 'claveProdServ')),
						DBMS_XMLDOM.GetNodeValue(DBMS_XMLDOM.GetNamedItem(attribute_list_w, 'ClaveProdServ')));

			select	max(nr_sequencia)
			into STRICT 	nr_seq_chave_prod_serv_w
			from 	nf_imp_chave
			where 	cd_chave = cd_chave_aux_w;
			
			error_tag_w 		:= 'unidad/ClaveUnidad Item: ' || i;
			cd_unidade_emissor_w 	:= coalesce(DBMS_XMLDOM.GetNodeValue(DBMS_XMLDOM.GetNamedItem(attribute_list_w, 'unidad')),
							DBMS_XMLDOM.GetNodeValue(DBMS_XMLDOM.GetNamedItem(attribute_list_w, 'ClaveUnidad')));

			error_tag_w 	:= 'descripcion/Descripcion Item: ' || i;
			ds_item_w 	:= coalesce(DBMS_XMLDOM.GetNodeValue(DBMS_XMLDOM.GetNamedItem(attribute_list_w, 'descripcion')),
						DBMS_XMLDOM.GetNodeValue(DBMS_XMLDOM.GetNamedItem(attribute_list_w, 'Descripcion')));

		exception when data_exception then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(WHEB_MENSAGEM_PCK.get_texto(1196609, 'DS_TAG='||error_tag_w));
		end;
		
		begin

			vl_unitario_w 			:= 	coalesce(DBMS_XMLDOM.GetNodeValue(DBMS_XMLDOM.GetNamedItem(attribute_list_w, 'valorUnitario')),
											DBMS_XMLDOM.GetNodeValue(DBMS_XMLDOM.GetNamedItem(attribute_list_w, 'ValorUnitario')));
			vl_item_w 				:= 	coalesce(DBMS_XMLDOM.GetNodeValue(DBMS_XMLDOM.GetNamedItem(attribute_list_w, 'importe')),
											DBMS_XMLDOM.GetNodeValue(DBMS_XMLDOM.GetNamedItem(attribute_list_w, 'Importe')));
			vl_desconto_item_w 		:= 	coalesce(DBMS_XMLDOM.GetNodeValue(DBMS_XMLDOM.GetNamedItem(attribute_list_w, 'descuento')),
											DBMS_XMLDOM.GetNodeValue(DBMS_XMLDOM.GetNamedItem(attribute_list_w, 'Descuento')));
			qt_item_w 				:= 	coalesce(DBMS_XMLDOM.GetNodeValue(DBMS_XMLDOM.GetNamedItem(attribute_list_w, 'cantidad')),
										DBMS_XMLDOM.GetNodeValue(DBMS_XMLDOM.GetNamedItem(attribute_list_w, 'Cantidad')));

		exception when data_exception then

			vl_unitario_w 			:= 	replace(coalesce(DBMS_XMLDOM.GetNodeValue(DBMS_XMLDOM.GetNamedItem(attribute_list_w, 'valorUnitario')),
											DBMS_XMLDOM.GetNodeValue(DBMS_XMLDOM.GetNamedItem(attribute_list_w, 'ValorUnitario'))), '.', ',');
			vl_item_w 				:= 	replace(coalesce(DBMS_XMLDOM.GetNodeValue(DBMS_XMLDOM.GetNamedItem(attribute_list_w, 'importe')),
											DBMS_XMLDOM.GetNodeValue(DBMS_XMLDOM.GetNamedItem(attribute_list_w, 'Importe'))), '.', ',');
			vl_desconto_item_w 		:= 	replace(coalesce(DBMS_XMLDOM.GetNodeValue(DBMS_XMLDOM.GetNamedItem(attribute_list_w, 'descuento')),
											DBMS_XMLDOM.GetNodeValue(DBMS_XMLDOM.GetNamedItem(attribute_list_w, 'Descuento'))), '.', ',');
			qt_item_w 				:= 	replace(coalesce(DBMS_XMLDOM.GetNodeValue(DBMS_XMLDOM.GetNamedItem(attribute_list_w, 'cantidad')),
										DBMS_XMLDOM.GetNodeValue(DBMS_XMLDOM.GetNamedItem(attribute_list_w, 'Cantidad'))), '.', ',');

		end;

		select	max(nr_sequencia)
		into STRICT	nr_seq_chave_unidade_w
		from 	nf_imp_chave
		where 	ie_tipo_chave = 'CVU'
		and 	upper(cd_chave) = upper(cd_unidade_emissor_w);

		insert into nf_imp_nota_item(
			nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_chave_prod_serv,
			cd_chave_emissor,
			nr_seq_chave_unidade,
			cd_unidade_emissor,
			ds_item,
			vl_unitario,
			vl_item,
			vl_desconto,
			nr_seq_item_sup,
			nr_seq_nf_imp_nota,
			cd_material_interno,
			qt_item)
		values (
			nr_seq_item_w,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_chave_prod_serv_w,
			null, -- cd_chave_emissor
			nr_seq_chave_unidade_w,
			cd_unidade_emissor_w,
			ds_item_w,
			vl_unitario_w,
			vl_item_w,
			vl_desconto_item_w,
			null, -- nr_seq_item_sup
			nr_seq_nota_w,
			null, -- cd_material_interno
			qt_item_w);

		/*Partes do item - /cfdi:Conceptos/Concepto/Parte */

		parte_list_w := DBMS_XMLDOM.GetChildNodes(concepto_node_w);

		if not(DBMS_XMLDOM.isNull(parte_list_w)) then

			qt_tamanho_ww := DBMS_XMLDOM.GetLength(parte_list_w);

			for j in 0 .. qt_tamanho_ww - 1 loop

				parte_node_w := DBMS_XMLDOM.Item(parte_list_w, j);

				if (DBMS_XMLDOM.GetNodeName(parte_node_w) = 'cfdi:Parte') then

					select 	nextval('nf_imp_nota_item_seq')
					into STRICT 	nr_seq_parte_w
					;

					attribute_list_w := DBMS_XMLDOM.GetAttributes(parte_node_w);
					
					begin
						error_tag_w 	:= 'claveProdServ/ClaveProdServ Item: ' || i;
						cd_chave_aux_w 	:= coalesce(DBMS_XMLDOM.GetNodeValue(DBMS_XMLDOM.GetNamedItem(attribute_list_w, 'claveProdServ')),
									DBMS_XMLDOM.GetNodeValue(DBMS_XMLDOM.GetNamedItem(attribute_list_w, 'ClaveProdServ')));

						select	max(nr_sequencia)
						into STRICT 	nr_seq_chave_prod_serv_w
						from 	nf_imp_chave
						where 	cd_chave = cd_chave_aux_w;
						
						error_tag_w 		:= 'unidad/ClaveUnidad Item: ' || i;
						cd_unidade_emissor_w 	:= coalesce(DBMS_XMLDOM.GetNodeValue(DBMS_XMLDOM.GetNamedItem(attribute_list_w, 'unidad')),
										DBMS_XMLDOM.GetNodeValue(DBMS_XMLDOM.GetNamedItem(attribute_list_w, 'ClaveUnidad')));
						
						error_tag_w 	:= 'descripcion/Descripcion Item: ' || i;
						ds_item_w 	:= coalesce(DBMS_XMLDOM.GetNodeValue(DBMS_XMLDOM.GetNamedItem(attribute_list_w, 'descripcion')),
									DBMS_XMLDOM.GetNodeValue(DBMS_XMLDOM.GetNamedItem(attribute_list_w, 'Descripcion')));
														
					exception when data_exception then
						CALL wheb_mensagem_pck.exibir_mensagem_abort(WHEB_MENSAGEM_PCK.get_texto(1196610, 'DS_TAG='||error_tag_w));
					end;
					
					begin

						vl_unitario_w 			:= 	coalesce(DBMS_XMLDOM.GetNodeValue(DBMS_XMLDOM.GetNamedItem(attribute_list_w, 'valorUnitario')),
														DBMS_XMLDOM.GetNodeValue(DBMS_XMLDOM.GetNamedItem(attribute_list_w, 'ValorUnitario')));
						vl_item_w 				:= 	coalesce(DBMS_XMLDOM.GetNodeValue(DBMS_XMLDOM.GetNamedItem(attribute_list_w, 'importe')),
														DBMS_XMLDOM.GetNodeValue(DBMS_XMLDOM.GetNamedItem(attribute_list_w, 'Importe')));
						vl_desconto_item_w 		:= 	coalesce(DBMS_XMLDOM.GetNodeValue(DBMS_XMLDOM.GetNamedItem(attribute_list_w, 'descuento')),
														DBMS_XMLDOM.GetNodeValue(DBMS_XMLDOM.GetNamedItem(attribute_list_w, 'Descuento')));

					exception when data_exception then

						vl_unitario_w 			:= 	replace(coalesce(DBMS_XMLDOM.GetNodeValue(DBMS_XMLDOM.GetNamedItem(attribute_list_w, 'valorUnitario')),
														DBMS_XMLDOM.GetNodeValue(DBMS_XMLDOM.GetNamedItem(attribute_list_w, 'ValorUnitario'))), '.', ',');
						vl_item_w 				:= 	replace(coalesce(DBMS_XMLDOM.GetNodeValue(DBMS_XMLDOM.GetNamedItem(attribute_list_w, 'importe')),
														DBMS_XMLDOM.GetNodeValue(DBMS_XMLDOM.GetNamedItem(attribute_list_w, 'Importe'))), '.', ',');
						vl_desconto_item_w 		:= 	replace(coalesce(DBMS_XMLDOM.GetNodeValue(DBMS_XMLDOM.GetNamedItem(attribute_list_w, 'descuento')),
														DBMS_XMLDOM.GetNodeValue(DBMS_XMLDOM.GetNamedItem(attribute_list_w, 'Descuento'))), '.', ',');
						qt_item_w 				:= 	replace(coalesce(DBMS_XMLDOM.GetNodeValue(DBMS_XMLDOM.GetNamedItem(attribute_list_w, 'cantidad')),
													DBMS_XMLDOM.GetNodeValue(DBMS_XMLDOM.GetNamedItem(attribute_list_w, 'Cantidad'))), '.', ',');

					end;								

					select	max(nr_sequencia)
					into STRICT	nr_seq_chave_unidade_w
					from 	nf_imp_chave
					where 	ie_tipo_chave = 'CVU'
					and 	upper(cd_chave) = upper(cd_unidade_emissor_w);

					insert into nf_imp_nota_item(
						nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_seq_chave_prod_serv,
						cd_chave_emissor,
						nr_seq_chave_unidade,
						cd_unidade_emissor,
						ds_item,
						vl_unitario,
						vl_item,
						vl_desconto,
						nr_seq_item_sup,
						nr_seq_nf_imp_nota,
						cd_material_interno,
						qt_item)
					values (
						nr_seq_parte_w,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_chave_prod_serv_w,
						null, -- cd_chave_emissor
						nr_seq_chave_unidade_w,
						cd_unidade_emissor_w,
						ds_item_w,
						vl_unitario_w,
						vl_item_w,
						vl_desconto_item_w,
						nr_seq_item_w, -- nr_seq_item_sup
						nr_seq_nota_w,
						null, -- cd_material_interno
						qt_item_w);

				elsif (DBMS_XMLDOM.GetNodeName(parte_node_w) = 'cfdi:Impuestos') then

					/* Impostos do item  */


					/*	/Comprobante/Conceptos/Concepto/Impuestos/Traslados/Traslado	*/


					/* 	/Comprobante/Conceptos/Concepto/Impuestos/Retenciones/Retencion 	*/

					impostos_list_w := DBMS_XMLDOM.GetChildNodes(parte_node_w);

					if not(DBMS_XMLDOM.isNull(impostos_list_w)) then

						qt_tamanho_impostos_w := DBMS_XMLDOM.GetLength(impostos_list_w);

						for k in 0 .. qt_tamanho_impostos_w - 1 loop

							tipo_imposto_node_w := DBMS_XMLDOM.Item(impostos_list_w, k);
							imposto_list_w := DBMS_XMLDOM.GetChildNodes(tipo_imposto_node_w);

							qt_impostos_w := DBMS_XMLDOM.GetLength(imposto_list_w);

							for l in 0 .. qt_impostos_w - 1 loop

								imposto_node_w := DBMS_XMLDOM.Item(imposto_list_w, l);
								imposto_attrib_list_w := DBMS_XMLDOM.GetAttributes(imposto_node_w);

								if not(DBMS_XMLDOM.isNull(imposto_attrib_list_w)) then
									
									begin
										error_tag_w 	:= 'impuesto/Impuesto Item: ' || i;
										ds_imposto_w 	:= coalesce(DBMS_XMLDOM.GetNodeValue(DBMS_XMLDOM.GetNamedItem(imposto_attrib_list_w, 'Impuesto')),
													DBMS_XMLDOM.GetNodeValue(DBMS_XMLDOM.GetNamedItem(imposto_attrib_list_w, 'impuesto')));

										if (ds_versao_w = '3.3') then

											select	max(nr_sequencia)
											into STRICT 	nr_seq_chave_imposto_w
											from 	nf_imp_chave
											where 	ie_tipo_chave = 'IMP'
											and 	cd_chave = (ds_imposto_w)::numeric;

										else

											select	max(nr_sequencia)
											into STRICT 	nr_seq_chave_imposto_w
											from 	nf_imp_chave
											where 	ie_tipo_chave = 'IMP'
											and 	ds_chave = ds_imposto_w;

										end if;
										
										error_tag_w := 'tipofactor/TipoFactor Item: ' || i;
										ds_tipo_fator_w := coalesce(DBMS_XMLDOM.GetNodeValue(DBMS_XMLDOM.GetNamedItem(imposto_attrib_list_w, 'TipoFactor')),
													DBMS_XMLDOM.GetNodeValue(DBMS_XMLDOM.GetNamedItem(imposto_attrib_list_w, 'tipofactor')));

										select	case
										when 	ds_tipo_fator_w = 'Tasa' then 'T'
										when 	ds_tipo_fator_w = 'Cota'  then 'C'
										when 	ds_tipo_fator_w = 'Exento' then 'E'
										else
												'E'
										end
										into STRICT	tipo_fator_w
										;

										if (DBMS_XMLDOM.GetNodeName(imposto_node_w) = 'cfdi:Traslado') then
											ie_traslado_w := 'S';
										else
											ie_traslado_w := 'N';
										end if;
										
									exception when data_exception then
										CALL wheb_mensagem_pck.exibir_mensagem_abort(WHEB_MENSAGEM_PCK.get_texto(1196611, 'DS_TAG='||error_tag_w));
									end;
									
									begin

										vl_base_imposto_w 	:= 	coalesce(DBMS_XMLDOM.GetNodeValue(DBMS_XMLDOM.GetNamedItem(imposto_attrib_list_w, 'Base')),
																	DBMS_XMLDOM.GetNodeValue(DBMS_XMLDOM.GetNamedItem(imposto_attrib_list_w, 'base')));

										importe_w			:= 	coalesce(DBMS_XMLDOM.GetNodeValue(DBMS_XMLDOM.GetNamedItem(imposto_attrib_list_w, 'Importe')),
																	DBMS_XMLDOM.GetNodeValue(DBMS_XMLDOM.GetNamedItem(imposto_attrib_list_w, 'importe')));

									--if (ie_traslado_w = 'S') then
										taxacota_w	:= 	coalesce(DBMS_XMLDOM.GetNodeValue(DBMS_XMLDOM.GetNamedItem(imposto_attrib_list_w, 'tasaocuota')),
															DBMS_XMLDOM.GetNodeValue(DBMS_XMLDOM.GetNamedItem(imposto_attrib_list_w, 'TasaOCuota')));
									/*else
										taxacota_w	:= 	nvl(DBMS_XMLDOM.GetNodeValue(DBMS_XMLDOM.GetNamedItem(imposto_attrib_list_w, 'tasa')),
															DBMS_XMLDOM.GetNodeValue(DBMS_XMLDOM.GetNamedItem(imposto_attrib_list_w, 'Tasa')));
									end if;*/
									exception when data_exception then

										vl_base_imposto_w 	:= 	replace(coalesce(DBMS_XMLDOM.GetNodeValue(DBMS_XMLDOM.GetNamedItem(imposto_attrib_list_w, 'Base')),
																	DBMS_XMLDOM.GetNodeValue(DBMS_XMLDOM.GetNamedItem(imposto_attrib_list_w, 'base'))), '.', ',');

										importe_w			:= 	replace(coalesce(DBMS_XMLDOM.GetNodeValue(DBMS_XMLDOM.GetNamedItem(imposto_attrib_list_w, 'Importe')),
																	DBMS_XMLDOM.GetNodeValue(DBMS_XMLDOM.GetNamedItem(imposto_attrib_list_w, 'importe'))), '.', ',');

										taxacota_w			:= 	replace(coalesce(DBMS_XMLDOM.GetNodeValue(DBMS_XMLDOM.GetNamedItem(imposto_attrib_list_w, 'tasaocuota')),
																	DBMS_XMLDOM.GetNodeValue(DBMS_XMLDOM.GetNamedItem(imposto_attrib_list_w, 'TasaOCuota'))), '.', ',');

									end;

									select	nextval('nf_imp_nota_imposto_seq')
									into STRICT	nr_seq_imposto_w
									;

									insert into nf_imp_nota_imposto(
										nr_sequencia,
										dt_atualizacao,
										nm_usuario,
										dt_atualizacao_nrec,
										nm_usuario_nrec,
										ie_retencao,
										nr_seq_chave_imposto,
										ie_fator,
										vl_base_calculo,
										tx_imposto,
										vl_imposto,
										nr_seq_nf_imp_nota,
										nr_seq_nf_imp_nota_item,
										cd_imposto_interno)
									values (
										nr_seq_imposto_w,
										clock_timestamp(),
										nm_usuario_p,
										clock_timestamp(),
										nm_usuario_p,
										ie_traslado_w,
										nr_seq_chave_imposto_w,
										tipo_fator_w,
										coalesce(vl_base_imposto_w, 0),
										coalesce(taxacota_w, 0),
										coalesce(importe_w, 0),
										nr_seq_nota_w,
										nr_seq_item_w,
										null);

								end if;
							end loop;
						end loop;
					end if;
				end if;
			end loop;
		end if;
		/*Fim das partes do item*/

	end loop;
	/*fim dos itens da nota*/



	/*Impostos da nota*/


	/*	/Comprobante/Impuestos/Traslados/Traslado	*/


	/* 	/Comprobante/Impuestos/Retenciones/Retencion 	*/

	child_list_w := DBMS_XMLDOM.GetChildrenByTagName(root_element_w, 'Impuestos');
	impostos_node_w := DBMS_XMLDOM.Item(child_list_w, 0);

	if not(DBMS_XMLDOM.isNull(impostos_node_w)) then

		impostos_list_w := DBMS_XMLDOM.GetChildNodes(impostos_node_w);
		qt_tamanho_impostos_w := DBMS_XMLDOM.GetLength(impostos_list_w);

		for m in 0 .. qt_tamanho_impostos_w - 1 loop

			impostos_node_w := DBMS_XMLDOM.Item(impostos_list_w, m);

			if not(DBMS_XMLDOM.isNull(impostos_node_w)) then

				imposto_list_w := DBMS_XMLDOM.GetChildNodes(impostos_node_w);
				qt_tamanho_impostos_ww := DBMS_XMLDOM.GetLength(imposto_list_w);

				for q in 0 .. qt_tamanho_impostos_ww loop

					imposto_node_w := DBMS_XMLDOM.Item(imposto_list_w, q); 				
					imposto_attrib_list_w := DBMS_XMLDOM.GetAttributes(imposto_node_w);

					if not(DBMS_XMLDOM.isNull(imposto_attrib_list_w)) then
						
						begin
							error_tag_w 	:= 'impuesto/Impuesto';
							ds_imposto_w 	:= coalesce(DBMS_XMLDOM.GetNodeValue(DBMS_XMLDOM.GetNamedItem(imposto_attrib_list_w, 'Impuesto')),
										DBMS_XMLDOM.GetNodeValue(DBMS_XMLDOM.GetNamedItem(imposto_attrib_list_w, 'impuesto')));

							if (ds_versao_w = '3.3') then

								select	max(nr_sequencia)
								into STRICT 	nr_seq_chave_imposto_w
								from 	nf_imp_chave
								where 	ie_tipo_chave = 'IMP'
								and 	cd_chave = (ds_imposto_w)::numeric;

							else

								select	max(nr_sequencia)
								into STRICT 	nr_seq_chave_imposto_w
								from 	nf_imp_chave
								where 	ie_tipo_chave = 'IMP'
								and 	ds_chave = ds_imposto_w;

							end if;
							
							error_tag_w := 'tipofactor/TipoFactor';
							ds_tipo_fator_w := coalesce(DBMS_XMLDOM.GetNodeValue(DBMS_XMLDOM.GetNamedItem(imposto_attrib_list_w, 'TipoFactor')),
										DBMS_XMLDOM.GetNodeValue(DBMS_XMLDOM.GetNamedItem(imposto_attrib_list_w, 'tipofactor')));

							select	case
							when 	ds_tipo_fator_w = 'Tasa' then 'T'
							when 	ds_tipo_fator_w = 'Cota'  then 'C'
							when 	ds_tipo_fator_w = 'Exento' then 'E'
							else
									'E'
							end
							into STRICT	tipo_fator_w
							;

							if (DBMS_XMLDOM.GetNodeName(imposto_node_w) = 'cfdi:Traslado') then
								ie_traslado_w := 'S';
							else
								ie_traslado_w := 'N';
							end if;
						
						exception when data_exception then
							CALL wheb_mensagem_pck.exibir_mensagem_abort(WHEB_MENSAGEM_PCK.get_texto(1196612, 'DS_TAG='||error_tag_w));
						end;

						begin

							vl_base_imposto_w 	:= 	coalesce(DBMS_XMLDOM.GetNodeValue(DBMS_XMLDOM.GetNamedItem(imposto_attrib_list_w, 'Base')),
														DBMS_XMLDOM.GetNodeValue(DBMS_XMLDOM.GetNamedItem(imposto_attrib_list_w, 'base')));

							importe_w			:= 	coalesce(DBMS_XMLDOM.GetNodeValue(DBMS_XMLDOM.GetNamedItem(imposto_attrib_list_w, 'Importe')),
														DBMS_XMLDOM.GetNodeValue(DBMS_XMLDOM.GetNamedItem(imposto_attrib_list_w, 'importe')));

						--if (ie_traslado_w = 'S') then
							taxacota_w	:= 	coalesce(DBMS_XMLDOM.GetNodeValue(DBMS_XMLDOM.GetNamedItem(imposto_attrib_list_w, 'tasaocuota')),
												DBMS_XMLDOM.GetNodeValue(DBMS_XMLDOM.GetNamedItem(imposto_attrib_list_w, 'TasaOCuota')));
						/*else
							taxacota_w	:= 	nvl(DBMS_XMLDOM.GetNodeValue(DBMS_XMLDOM.GetNamedItem(imposto_attrib_list_w, 'tasa')),
												DBMS_XMLDOM.GetNodeValue(DBMS_XMLDOM.GetNamedItem(imposto_attrib_list_w, 'Tasa')));
						end if;*/
						exception when data_exception then

							vl_base_imposto_w 	:= 	replace(coalesce(DBMS_XMLDOM.GetNodeValue(DBMS_XMLDOM.GetNamedItem(imposto_attrib_list_w, 'Base')),
														DBMS_XMLDOM.GetNodeValue(DBMS_XMLDOM.GetNamedItem(imposto_attrib_list_w, 'base'))), '.', ',');

							importe_w			:= 	replace(coalesce(DBMS_XMLDOM.GetNodeValue(DBMS_XMLDOM.GetNamedItem(imposto_attrib_list_w, 'Importe')),
														DBMS_XMLDOM.GetNodeValue(DBMS_XMLDOM.GetNamedItem(imposto_attrib_list_w, 'importe'))), '.', ',');

							taxacota_w			:= 	replace(coalesce(DBMS_XMLDOM.GetNodeValue(DBMS_XMLDOM.GetNamedItem(imposto_attrib_list_w, 'tasaocuota')),
														DBMS_XMLDOM.GetNodeValue(DBMS_XMLDOM.GetNamedItem(imposto_attrib_list_w, 'TasaOCuota'))), '.', ',');

						end;

						select	nextval('nf_imp_nota_imposto_seq')
						into STRICT	nr_seq_imposto_w
						;

						insert into nf_imp_nota_imposto(
							nr_sequencia,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							ie_retencao,
							nr_seq_chave_imposto,
							ie_fator,
							vl_base_calculo,
							tx_imposto,
							vl_imposto,
							nr_seq_nf_imp_nota,
							nr_seq_nf_imp_nota_item,
							cd_imposto_interno)
						values (
							nr_seq_imposto_w,
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							ie_traslado_w,
							nr_seq_chave_imposto_w,
							tipo_fator_w,
							coalesce(vl_base_imposto_w, 0),
							coalesce(taxacota_w, 0),
							coalesce(importe_w, 0),
							nr_seq_nota_w,
							null,
							null);
					end if;
				end loop;
			end if;
		end loop;
	end if;
	/*Fim impostos nota*/



	/*Notas relacionadas*/


	/*	/CfdiRelacionados/CfdiRelacionado	*/

	child_list_w := DBMS_XMLDOM.GetChildrenByTagName(root_element_w, 'CfdiRelacionados');

	if not(DBMS_XMLDOM.isNull(child_list_w)) then

		qt_tamanho_w := DBMS_XMLDOM.GetLength(child_list_w);

		for n in 0 .. qt_tamanho_w - 1 loop

			cfdi_relacionados_node_w := DBMS_XMLDOM.Item(child_list_w, n);

			if not(DBMS_XMLDOM.isNull(cfdi_relacionados_node_w)) then
				
				begin
				
					attribute_list_w := DBMS_XMLDOM.GetAttributes(cfdi_relacionados_node_w);
					
					error_tag_w 		:= 'tipoRelacion/TipoRelacion';
					ie_tipo_relacao_w 	:= coalesce(DBMS_XMLDOM.GetNodeValue(DBMS_XMLDOM.GetNamedItem(attribute_list_w, 'tipoRelacion')),
									DBMS_XMLDOM.GetNodeValue(DBMS_XMLDOM.GetNamedItem(attribute_list_w, 'TipoRelacion')));

					cfdi_relacionados_list_w := DBMS_XMLDOM.GetChildNodes(cfdi_relacionados_node_w);
					qt_tamanho_relacionados_w := DBMS_XMLDOM.GetLength(cfdi_relacionados_list_w);

					for p in 0 .. qt_tamanho_relacionados_w - 1 loop

						cfdi_relacionado_node_w := DBMS_XMLDOM.Item(cfdi_relacionados_list_w, p);
						cfdi_rel_attrib_list_w := DBMS_XMLDOM.GetAttributes(cfdi_relacionado_node_w);
						
						error_tag_w 	:= 'UUID';
						nr_id_relacao_w := DBMS_XMLDOM.GetNodeValue(DBMS_XMLDOM.GetNamedItem(cfdi_rel_attrib_list_w, 'UUID'));

						select 	max(nr_sequencia )
						into STRICT 	nr_seq_chave_relacao_w
						from 	nf_imp_chave where ie_tipo_chave = 'TPR'
						and 	cd_chave = ie_tipo_relacao_w;

						select	nextval('nf_imp_nota_relacao_seq')
						into STRICT	nr_seq_relacao_w
						;

						insert into nf_imp_nota_relacao(	nr_sequencia,
											dt_atualizacao,
											nm_usuario,
											dt_atualizacao_nrec,
											nm_usuario_nrec,
											nr_seq_chave_tipo_relac,
											nr_identificador,
											nr_seq_nf_imp_nota)
										values (
											nr_seq_relacao_w,
											clock_timestamp(),
											nm_usuario_p,
											clock_timestamp(),
											nm_usuario_p,
											nr_seq_chave_relacao_w, --nr_seq_chave_tipo_relac
											nr_id_relacao_w, --nr_identificador
											nr_seq_nota_w); --nr_seq_nf_imp_nota
					end loop;
					
				exception when data_exception then
					CALL wheb_mensagem_pck.exibir_mensagem_abort(WHEB_MENSAGEM_PCK.get_texto(1196613, 'DS_TAG='||error_tag_w));
				end;
				
			end if;
		end loop;
	end if;
	/*Fim notas relacionadas*/



	/*Complementos*/

	complementos_list_w := DBMS_XMLDOM.GetChildrenByTagName(root_element_w, 'Complemento');
	complementos_node_w := DBMS_XMLDOM.Item(complementos_list_w, 0);

	child_list_w := DBMS_XMLDOM.GetChildNodes(complementos_node_w);
	qt_tamanho_w := DBMS_XMLDOM.GetLength(child_list_w);

	if not(DBMS_XMLDOM.isNull(child_list_w)) then
		begin
			for o in 0 .. qt_tamanho_w - 1 loop

				complemento_node_w := DBMS_XMLDOM.Item(child_list_w, o);

				if ((not DBMS_XMLDOM.isNull(complemento_node_w))
					and (DBMS_XMLDOM.GetNodeName(complemento_node_w) = 'tfd:TimbreFiscalDigital')) then

					attribute_list_w := DBMS_XMLDOM.GetAttributes(complemento_node_w);
					
					error_tag_w 	:= 'UUID';
					nr_uuid_w 	:= DBMS_XMLDOM.GetNodeValue(DBMS_XMLDOM.GetNamedItem(attribute_list_w, 'UUID'));

				end if;

			end loop;
			
		exception when data_exception then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(WHEB_MENSAGEM_PCK.get_texto(1196614, 'DS_TAG='||error_tag_w));
		end;

		if (coalesce(nr_uuid_w, 'XPTO') <> 'XPTO') then

			update	nf_imp_nota
			set		nr_uuid = nr_uuid_w
			where	nr_sequencia = nr_seq_nota_w;
			
			update	nf_imp_arquivo
			set		nr_uuid = nr_uuid_w
			where	nr_sequencia = nr_seq_nf_imp_arquivo_p;
			
			
			
			ds_msg_w := mx_cfdi_vincular_nf(	nr_seq_nota_w, null, 'N', 'N', ds_msg_w, 'N');


		end if;

	end if;
	/*Fim complementos*/

end if;
end if;

update	nf_imp_arquivo
set		nr_ident_emissor = ds_ident_emisor_w,
		ds_nome_emissor = ds_nome_emisor_w
where	nr_sequencia = nr_seq_nf_imp_arquivo_p;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE intpd_recebe_interno_cfdi_mx ( nm_usuario_p text, cd_estabelecimento_p bigint, nr_seq_nf_imp_arquivo_p bigint, xml_p text) FROM PUBLIC;

