-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ptu_gerar_movimento_exc_plano ( nr_seq_movimento_p ptu_movimento_prestador.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


dt_referencia_w			ptu_movimento_prestador.dt_referencia%type;
nr_seq_movto_exc_plano_w	ptu_movimento_exc_plano.nr_sequencia%type;
id_inclu_exclu_w		ptu_movimento_exc_plano.id_inclu_exclu%type;
qt_plan_rede_w			integer;

c01 CURSOR(	nr_seq_movimento_pc		ptu_movimento_prestador.nr_sequencia%type,
		dt_referencia_pc		ptu_movimento_prestador.dt_referencia%type) FOR
	SELECT	c.cd_rede_refer_ptu,
		substr(coalesce(c.nm_fantasia,rr.nm_com_prod),1,60) nm_fantasia,
		rr.nr_reg_plano_ans,
		coalesce(d.ie_permite,'S') ie_permite,
		p.nr_sequencia nr_seq_ptu_prestador,
		p.cd_cgc_cpf,
		l.cd_unimed_prestadora
	from	pls_prestador		l,
		ptu_movimento_rede_ref	rr,
		ptu_prestador		p,
		pls_plano_rede_atend	b,
		pls_plano		c,
		pls_prestador_plano	d
	where	c.nr_sequencia		= b.nr_seq_plano
	and	c.nr_sequencia		= d.nr_seq_plano
	and	rr.cd_rede		= c.cd_rede_refer_ptu
	and	d.nr_seq_prestador	= p.nr_seq_prestador
	and	l.nr_sequencia		= p.nr_seq_prestador
	and	p.nr_seq_movimento	= nr_seq_movimento_pc
	and (dt_referencia_pc between coalesce(d.dt_inicio_vigencia, dt_referencia_pc) and coalesce(d.dt_fim_vigencia, dt_referencia_pc))
	and	substr(pls_obter_se_prest_rede_atend( p.nr_seq_prestador, b.nr_seq_rede),1,255) = 'S'
	and	(rr.nr_reg_plano_ans IS NOT NULL AND rr.nr_reg_plano_ans::text <> '')
	and	(l.cd_unimed_prestadora IS NOT NULL AND l.cd_unimed_prestadora::text <> '')
	group by
		c.cd_rede_refer_ptu,
		c.nm_fantasia,
		rr.nm_com_prod,
		rr.nr_reg_plano_ans,
		d.ie_permite,
		p.cd_cgc_cpf,
		l.cd_unimed_prestadora,
		p.nr_sequencia;

C02 CURSOR(nr_seq_ptu_prestador_pc	ptu_prestador.nr_sequencia%type) FOR
	SELECT	gs.cd_grupo_servico
	from	ptu_prestador_endereco		ed,
		ptu_prestador_grupo_serv	gs
	where	ed.nr_sequencia		= gs.nr_seq_endereco
	and	ed.nr_seq_prestador	= nr_seq_ptu_prestador_pc
	
union

	SELECT	null cd_grupo_servico
	
	where	not exists (select	1
				from	ptu_prestador_endereco		ed,
					ptu_prestador_grupo_serv	gs
				where	ed.nr_sequencia		= gs.nr_seq_endereco
				and	ed.nr_seq_prestador	= nr_seq_ptu_prestador_pc);
BEGIN
select	trunc(dt_referencia)
into STRICT	dt_referencia_w
from	ptu_movimento_prestador
where	nr_sequencia	= nr_seq_movimento_p;

for r_C01_w in C01( nr_seq_movimento_p, dt_referencia_w ) loop

	select	CASE WHEN r_C01_w.ie_permite='S' THEN '1' WHEN r_C01_w.ie_permite='N' THEN '2' END
	into STRICT	id_inclu_exclu_w
	;

	select	max(nr_sequencia)
	into STRICT	nr_seq_movto_exc_plano_w
	from	ptu_movimento_exc_plano
	where	rede_atend		= r_C01_w.cd_rede_refer_ptu
	and	nm_produto		= r_C01_w.nm_fantasia
	and	reg_plano_ans		= r_C01_w.nr_reg_plano_ans
	and	id_inclu_exclu		= id_inclu_exclu_w
	and	nr_seq_movimento	= nr_seq_movimento_p;

	if (coalesce(nr_seq_movto_exc_plano_w::text, '') = '') then
		insert into ptu_movimento_exc_plano(nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			rede_atend,
			nm_produto,
			reg_plano_ans,
			id_inclu_exclu,
			nr_seq_movimento)
		values (nextval('ptu_movimento_exc_plano_seq'),
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			r_C01_w.cd_rede_refer_ptu,
			r_C01_w.nm_fantasia,
			r_C01_w.nr_reg_plano_ans,
			id_inclu_exclu_w,
			nr_seq_movimento_p) returning nr_sequencia into nr_seq_movto_exc_plano_w;
	end if;


	for r_C02_w in C02( r_C01_w.nr_seq_ptu_prestador ) loop

		select	count(1)
		into STRICT	qt_plan_rede_w
		from	ptu_movimento_plan_rede
		where	nr_seq_movto_exc_plano	= nr_seq_movto_exc_plano_w
		and	cd_uni_pre		= r_C01_w.cd_unimed_prestadora
		and	cd_cnpj_cpf		= r_C01_w.cd_cgc_cpf
		and	cd_gr_serv		= r_C02_w.cd_grupo_servico;

		if (qt_plan_rede_w = 0) then
			insert into ptu_movimento_plan_rede(nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_movto_exc_plano,
				cd_uni_pre,
				cd_cnpj_cpf,
				cd_gr_serv)
			values (nextval('ptu_movimento_plan_rede_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_movto_exc_plano_w,
				r_C01_w.cd_unimed_prestadora,
				r_C01_w.cd_cgc_cpf,
				r_C02_w.cd_grupo_servico);
		end if;
	end loop;
end loop;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_gerar_movimento_exc_plano ( nr_seq_movimento_p ptu_movimento_prestador.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;

