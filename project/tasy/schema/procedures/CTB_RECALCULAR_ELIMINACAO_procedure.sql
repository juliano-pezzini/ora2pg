-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ctb_recalcular_eliminacao ( cd_empresa_p empresa.cd_empresa%type, dt_inicial_p timestamp, dt_final_p timestamp, nm_usuario_p text ) AS $body$
DECLARE


nr_sequencia_w  ctb_saldo.nr_sequencia%type;
qt_movto_cc_w   bigint;
ds_erro_w       varchar(2000);

C01 CURSOR FOR
SELECT  'D' ie_deb_cred,
        e.ie_debito_credito,
        c.nr_sequencia nr_seq_movimento,
        c.vl_movimento,
        d.ie_centro_custo,
        b.nr_seq_mes_ref,
        coalesce(c.cd_estabelecimento,b.cd_estabelecimento) cd_estabelecimento,
        d.cd_conta_contabil,
        coalesce(b.ie_encerramento,'N') ie_encerramento
from    ctb_grupo_conta e,
        conta_contabil d,
        ctb_movimento c,
        lote_contabil b,
        ctb_mes_ref a
where   a.cd_empresa = cd_empresa_p
and     b.nr_seq_mes_ref = a.nr_sequencia
and     c.nr_lote_contabil = b.nr_lote_contabil
and     d.cd_conta_contabil = c.cd_conta_debito
and     e.cd_grupo = d.cd_grupo
and     c.ie_eliminacao_lancto = 'S'
and     b.ie_situacao = 'A'
and     a.dt_referencia between dt_inicial_p and dt_final_p

union all

SELECT  'C' ie_deb_cred,
        e.ie_debito_credito,
        c.nr_sequencia nr_seq_movimento,
        c.vl_movimento,
        d.ie_centro_custo,
        b.nr_seq_mes_ref,
        coalesce(c.cd_estabelecimento,b.cd_estabelecimento) cd_estabelecimento,
        d.cd_conta_contabil,
        coalesce(b.ie_encerramento,'N') ie_encerramento
from    conta_contabil d,
        ctb_grupo_conta e,
        ctb_movimento c,
        lote_contabil b,
        ctb_mes_ref a
where   a.cd_empresa = cd_empresa_p
and     b.nr_seq_mes_ref = a.nr_sequencia
and     c.nr_lote_contabil = b.nr_lote_contabil
and     d.cd_conta_contabil = c.cd_conta_credito
and     e.cd_grupo = d.cd_grupo
and     c.ie_eliminacao_lancto = 'S'
and     b.ie_situacao = 'A'
and     a.dt_referencia between dt_inicial_p and dt_final_p;

c01_w   c01%rowtype;

C02 CURSOR FOR
SELECT  cd_centro_custo,
        vl_movimento
from    ctb_movto_centro_custo
where   nr_seq_movimento    = c01_w.nr_seq_movimento
and     c01_w.ie_centro_custo in ('S','O')

union all

SELECT  0 cd_centro_custo,
        c01_w.vl_movimento vl_movimento

where   ((c01_w.ie_centro_custo = 'N') or (qt_movto_cc_w = 0));

c02_w   C02%rowtype;


BEGIN

update  ctb_saldo
set     vl_eliminacao = 0
where   nr_sequencia in (
        SELECT  a.nr_sequencia
        from    ctb_saldo a,
                ctb_mes_ref b
        where   a.nr_seq_mes_ref = b.nr_sequencia
        and     b.dt_referencia between dt_inicial_p and dt_final_p
        and     b.cd_empresa = cd_empresa_p
);

open C01;
loop
fetch   C01 into
        c01_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
        begin

        select  count(nr_sequencia)
        into STRICT    qt_movto_cc_w
        from    ctb_movto_centro_custo
        where   nr_seq_movimento    = c01_w.nr_seq_movimento;

        if (c01_w.ie_encerramento = 'N') and (c01_w.ie_centro_custo = 'O') and (qt_movto_cc_w = 0) then
                c01_w.ie_centro_custo   := 'N';
        end if;

        open    C02;
        loop
        fetch   C02 into
                c02_w;
        EXIT WHEN NOT FOUND; /* apply on C02 */
                begin
                select  coalesce(max(nr_sequencia),0)
                into STRICT    nr_sequencia_w
                from    ctb_saldo
                where   nr_seq_mes_ref          = c01_w.nr_seq_mes_ref
                and     cd_estabelecimento      = c01_w.cd_estabelecimento
                and     cd_conta_contabil       = c01_w.cd_conta_contabil
                and     coalesce(cd_centro_custo,0)  = coalesce(c02_w.cd_centro_custo,0);

                if (c01_w.ie_debito_credito <> c01_w.ie_deb_cred) then
                        c02_w.vl_movimento      := c02_w.vl_movimento * -1;
                end if;

                if (nr_sequencia_w <> 0) then
                        begin
                        update  ctb_saldo
                        set     vl_eliminacao   = vl_eliminacao + c02_w.vl_movimento
                        where   nr_sequencia    = nr_sequencia_w;
                        exception when others then
                            ds_erro_w   := sqlerrm(SQLSTATE);
                            --(-20011,'Erro ao Inserir Saldo: (2)' || chr(13) ||ds_erro_w || '#@#@');
                            CALL wheb_mensagem_pck.exibir_mensagem_abort(269639,'DS_ERRO='||ds_erro_w);
                        end;
                end if;
                end;
        end loop;
        close C02;
        end;
end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_recalcular_eliminacao ( cd_empresa_p empresa.cd_empresa%type, dt_inicial_p timestamp, dt_final_p timestamp, nm_usuario_p text ) FROM PUBLIC;

