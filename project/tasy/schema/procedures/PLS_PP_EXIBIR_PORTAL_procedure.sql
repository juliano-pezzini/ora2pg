-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_pp_exibir_portal ( nr_seq_lote_p pls_pp_lote.nr_sequencia%type, nr_seq_prestador_p pls_pp_prestador.nr_sequencia%type, ie_exibe_portal_p pls_pp_lote.ie_exibe_portal%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


tb_nr_sequencia_w	pls_util_cta_pck.t_number_table;
tp_ie_exibe_portal_w	pls_util_cta_pck.t_varchar2_table_5;
ie_atualiza_lote_w	boolean;
qt_registro_w		integer;

c01 CURSOR(	nr_seq_lote_pc	pls_pp_lote.nr_sequencia%type) FOR
        SELECT	p.nr_sequencia,
		case 	when p.vl_liquido > 0 then ie_exibe_portal_p
			when CASE WHEN(	SELECT	count(1)					from	pls_pp_prest_evento_valor v					where	v.nr_seq_prestador = p.nr_seq_prestador					and	v.nr_seq_lote    = p.nr_seq_lote                                        and     v.vl_liquido    >= 0                                )=0 THEN 'N'  ELSE 'S' END  = 'S' then ie_exibe_portal_p
			else 'N'
		end 
	from	pls_pp_prestador p
	where	p.nr_seq_lote = nr_seq_lote_pc;


BEGIN
-- só faz algo se foi passado o lote
if (nr_seq_lote_p IS NOT NULL AND nr_seq_lote_p::text <> '') then

	-- por padrão não irá atualizar o lote
	ie_atualiza_lote_w := false;

	-- se não foi passado o prestador então atualiza de todos os prestadores do lote
	if (coalesce(nr_seq_prestador_p::text, '') = '') then

		open c01(nr_seq_lote_p);
		loop
			fetch c01 bulk collect into	tb_nr_sequencia_w, tp_ie_exibe_portal_w
			limit pls_util_pck.qt_registro_transacao_w;
			exit when tb_nr_sequencia_w.count = 0;

			forall i in tb_nr_sequencia_w.first..tb_nr_sequencia_w.last
				update	pls_pp_prestador
				set	ie_exibe_portal = tp_ie_exibe_portal_w(i),
					nm_usuario = nm_usuario_p,
					dt_atualizacao = clock_timestamp()
				where	nr_sequencia = tb_nr_sequencia_w(i);
			commit;
		end loop;
		close c01;
	else
		update	pls_pp_prestador
		set	ie_exibe_portal = ie_exibe_portal_p,
			nm_usuario = nm_usuario_p,
			dt_atualizacao = clock_timestamp()
		where	nr_sequencia = nr_seq_prestador_p;
	end if;

	-- quando é para disponibilizar no portal então sempre irá atualizar o lote
	if (ie_exibe_portal_p = 'S') then
		ie_atualiza_lote_w := true;
	-- se não for para disponibilizar, só atualiza se não existir prestador para exibir no portal
	else
		select	count(1)
		into STRICT	qt_registro_w
		from	pls_pp_prestador
		where	nr_seq_lote = nr_seq_lote_p
		and	ie_exibe_portal = 'S';

		ie_atualiza_lote_w := (qt_registro_w = 0);
	end if;

	if (ie_atualiza_lote_w) then
		update	pls_pp_lote
		set	ie_exibe_portal = ie_exibe_portal_p,
			nm_usuario = nm_usuario_p,
			dt_atualizacao = clock_timestamp()
		where	nr_sequencia = nr_seq_lote_p;
	end if;
	commit;
end if;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_pp_exibir_portal ( nr_seq_lote_p pls_pp_lote.nr_sequencia%type, nr_seq_prestador_p pls_pp_prestador.nr_sequencia%type, ie_exibe_portal_p pls_pp_lote.ie_exibe_portal%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;

