-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_interf_sus_bpa_coord ( dt_inicial_p timestamp, dt_final_p timestamp, cd_estabelecimento_p bigint, nr_folha_bpa_p bigint, nr_folha_bpi_p bigint, nm_usuario_p text) AS $body$
DECLARE

			
nr_sequencia_w		bigint;
nr_interno_conta_w		bigint;
nr_atendimento_w		bigint;
cd_pessoa_fisica_w	varchar(10);
dt_mesano_referencia_w	timestamp;
qt_linhas_w		bigint	:= 1;
qt_folha_bpa_w		integer	:= 0;
nm_orgao_responsavel_w	varchar(30);
cd_orgao_responsavel_w	varchar(6);
cd_cgc_responsavel_w	varchar(14);
nm_orgao_destino_w	varchar(40);
ie_orgao_destino_w		varchar(1);
cd_cnes_hospital_w	integer;
cd_registro_w		smallint;
dt_procedimento_w		timestamp;
cd_cns_medico_exec_w	varchar(15);
cd_cns_medico_exec_ww	varchar(15)	:= '0';
cd_cbo_w		varchar(6);
cd_cbo_ww		varchar(6)	:= '0';
dt_atend_proc_w		timestamp;
nr_folha_bpa_w		bigint	:= 0;
nr_folha_bpa_con_w	smallint	:= 0;
nr_folha_bpa_ind_w	smallint	:= 0;
nr_linha_folha_w		bigint	:= 0;
nr_linha_folha_con_w	smallint	:= 0;
nr_linha_folha_ind_w	smallint	:= 0;
cd_procedimento_w	bigint;
ie_origem_proced_w	bigint;
cd_cns_paciente_w	varchar(15);
ie_sexo_pac_w		varchar(1);
cd_municipio_ibge_w	varchar(6);
cd_cid_proc_w		varchar(4);
nr_idade_pac_w		smallint;
qt_procedimento_w		bigint;
cd_carater_atend_w	varchar(2);
ds_autorizacao_w		varchar(13);
nm_paciente_w		varchar(30);
dt_nascimento_w		varchar(10);
ie_tipo_bpa_w		varchar(1);
qt_proc_consolidado_w	bigint	:= 0;
qt_proc_individua_w	bigint	:= 0;
cd_dominio_w		bigint	:= 0;
cd_medico_executor_w	varchar(10);
cd_raca_cor_w		varchar(2)	:= 99;
cd_cnes_hosp_proc_w	integer;
cd_estabelecimento_w	smallint;
cd_exec_exp_w		varchar(10);
cd_cbo_exec_exp_w	varchar(6);
cd_cgc_prestador_w	varchar(14);
cd_cnes_prestador_w	integer;
ie_cnes_prestador_w	varchar(1);
ie_data_ref_proc_w		varchar(2) := 'N';
ie_ordena_paciente_w	varchar(2) := 'N';
ds_ordem_w		varchar(30);
ie_data_entrada_w		varchar(10) := 'N';
cd_etnia_w		varchar(4) := '0000';
cd_nacionalidade_w	varchar(8) := '   ';
nr_seq_regra_w		bigint;
ie_exclui_procedimento_w	varchar(1)	:= 'N';
qt_existe_proc_w		bigint := 0;
cd_cgc_prestador_exp_w	varchar(14);
ie_data_competencia_w	varchar(10) := 'P';
cd_servico_w		varchar(3) := '0';
cd_serv_classif_w		varchar(3) := '0';
cd_equipe_w		varchar(12);
tp_logradouro_w		varchar(3);
cd_cep_w		varchar(8);
ds_logradouro_w		varchar(100);
ds_compl_logradouro_w	varchar(10);
nr_logradouro_w		varchar(5);
ds_bairro_w		varchar(30);
ddd_fone_pac_w		varchar(2);
nr_fone_pac_w		varchar(9);
email_w			varchar(40);
cd_cnpj_fornecedor_w	sus_bpa_opme.cd_cnpj_fornecedor%type;
ie_agrupa_bpai_w	varchar(1) := 'N';
ie_remove_tplogr_end_w	sus_parametros_bpa.ie_remove_tplogr_end%type := 'N';
ds_tipo_logradouro_w	sus_tipo_logradouro.ds_tipo_logradouro%type;

/* Obter dados do detalhe */

c01 CURSOR FOR
	SELECT	CASE WHEN ie_ordena_paciente_w='S' THEN ''  ELSE c.cd_procedimento END  ds_ordem,
		sus_obter_tiporeg_proc(c.cd_procedimento, c.ie_origem_proced, 'C', 1),
		0 nr_interno_conta,
		0 nr_atendimento,
		' ' cd_pessoa_fisica,
		' ' cd_cns_medico_exec,
		to_date(null) dt_atendimento,
		c.cd_procedimento,
		c.ie_origem_proced,
		' ' cd_cns_paciente,
		' ' ie_sexo_pac,
		' ' cd_municipio_ibge,
		'' cd_nacionalidade,
		' ' cd_cid_proc,
		somente_numero(substr(sus_obter_idade_pac_bpa(b.cd_pessoa_fisica, c.cd_procedimento, c.ie_origem_proced, c.dt_procedimento, 'A'),1,3)) nr_idade_pac,
		sum(c.qt_procedimento) qt_procedimento,
		' ' cd_carater_atendimento,
		' ' ds_autorizacao,
		' ' nm_paciente,
		'' dt_nascimento,
		'C' ie_tipo_bpa,
		' ' cd_profissional,
		' ' cd_raca_cor_w,
		'' cd_etnia_w,
		--nvl(c.cd_cbo, sus_obter_cbo_medico(nvl(c.cd_medico_executor,c.cd_pessoa_fisica),c.cd_procedimento,sysdate,0)) cd_cbo,
		substr(coalesce(sus_obter_regra_exp_exec(c.cd_procedimento,
						c.ie_origem_proced,
						coalesce(c.cd_medico_executor,c.cd_pessoa_fisica),
						coalesce(c.cd_cbo, sus_obter_cbo_medico(coalesce(c.cd_medico_executor,c.cd_pessoa_fisica),c.cd_procedimento,clock_timestamp(),0)),
						b.cd_estabelecimento,
						'N','S','N','C'),
						coalesce(c.cd_cbo, sus_obter_cbo_medico(coalesce(c.cd_medico_executor,c.cd_pessoa_fisica),c.cd_procedimento,clock_timestamp(),0))),1,6) cd_cbo,
		sus_obter_substituir_cnes(cd_cnes_hospital_w, c.cd_setor_atendimento, b.cd_estabelecimento,b.ie_tipo_atendimento),
		cd_cgc_prestador,
		'0' cd_servico,
		'0' cd_serv_classif,
		'' cd_equipe,
		'' tp_logradouro,
		'' cd_cep,
		'' ds_logradouro,
		'' ds_compl_logradouro,
		'' nr_logradouro,
		'' ds_bairro,
		'' ddd_fone_pac,
		'' nr_fone_pac,
		'' email,
		'' cd_cnpj_fornecedor
	from	procedimento_paciente	c,
		atendimento_paciente	b,
		conta_paciente		a,
		sus_valor_proc_paciente	s
	where	a.dt_periodo_final between dt_inicial_p and dt_final_p
	and	a.nr_atendimento	= b.nr_atendimento
	and	a.nr_interno_conta	= c.nr_interno_conta
	and	c.nr_sequencia = s.nr_sequencia
	and	c.ie_origem_proced	= 7
	and	a.ie_status_acerto 	= 2
	and	coalesce(c.cd_motivo_exc_conta::text, '') = ''
	and	coalesce(a.ie_cancelamento::text, '') = ''
	and	b.ie_tipo_atendimento <> 1
	and	a.cd_convenio_parametro = obter_dados_param_faturamento(a.cd_estabelecimento,'CSUS')
	and    	sus_obter_tiporeg_proc(c.cd_procedimento, c.ie_origem_proced, 'C', 1) = 1
	and	sus_consiste_proc_comp(b.nr_atendimento, a.nr_interno_conta, c.cd_procedimento) = 'S'
	and	coalesce(sus_obter_regra_expbpa(c.nr_sequencia),'N') = 'N'
	and	coalesce(s.ie_exp_bpa_doa_org, 'S')	= 'S'
	group by	CASE WHEN ie_ordena_paciente_w='S' THEN ''  ELSE c.cd_procedimento END ,
		sus_obter_tiporeg_proc(c.cd_procedimento, c.ie_origem_proced, 'C', 1),
		0, 0, ' ', ' ',
		to_date(null),
		c.cd_procedimento,
		c.ie_origem_proced,
		' ', ' ', ' ', '', ' ',
		somente_numero(substr(sus_obter_idade_pac_bpa(b.cd_pessoa_fisica, c.cd_procedimento, c.ie_origem_proced, c.dt_procedimento, 'A'),1,3)),
		' ', ' ', ' ', '', 'C', ' ', ' ', '',
		--nvl(c.cd_cbo, sus_obter_cbo_medico(nvl(c.cd_medico_executor,c.cd_pessoa_fisica),c.cd_procedimento,sysdate,0)),
		substr(coalesce(sus_obter_regra_exp_exec(c.cd_procedimento,
						c.ie_origem_proced,
						coalesce(c.cd_medico_executor,c.cd_pessoa_fisica),
						coalesce(c.cd_cbo, sus_obter_cbo_medico(coalesce(c.cd_medico_executor,c.cd_pessoa_fisica),c.cd_procedimento,clock_timestamp(),0)),
						b.cd_estabelecimento,
						'N','S','N','C'),
						coalesce(c.cd_cbo, sus_obter_cbo_medico(coalesce(c.cd_medico_executor,c.cd_pessoa_fisica),c.cd_procedimento,clock_timestamp(),0))),1,6),
		sus_obter_substituir_cnes(cd_cnes_hospital_w, c.cd_setor_atendimento, b.cd_estabelecimento,b.ie_tipo_atendimento),
		cd_cgc_prestador,'0','0','','','','','','','','','',''
	
union all

	SELECT	CASE WHEN ie_ordena_paciente_w='S' THEN substr(obter_nome_pf(b.cd_pessoa_fisica),1,30)  ELSE c.cd_procedimento END  ds_ordem,
		sus_obter_tiporeg_proc(c.cd_procedimento, c.ie_origem_proced, 'C', 1),
		a.nr_interno_conta,
		b.nr_atendimento,
		b.cd_pessoa_fisica,
		--substr(obter_dados_pf(nvl(c.cd_medico_executor,c.cd_pessoa_fisica),'CNS'),1,15) cd_cns_medico_exec,
		substr(coalesce(sus_obter_regra_exp_exec(c.cd_procedimento,
						c.ie_origem_proced,
						coalesce(c.cd_medico_executor,c.cd_pessoa_fisica),
						c.cd_cbo,
						b.cd_estabelecimento,
						'N','S','N','CNS'),obter_dados_pf(coalesce(c.cd_medico_executor,c.cd_pessoa_fisica),'CNS')),1,15) cd_cns_medico_exec,
		CASE WHEN ie_data_entrada_w='N' THEN c.dt_procedimento  ELSE b.dt_entrada END  dt_atendimento,
		c.cd_procedimento,
		c.ie_origem_proced,
		substr(obter_dados_pf(b.cd_pessoa_fisica,'CNS'),1,15) cd_cns_paciente,
		substr(obter_sexo_pf(b.cd_pessoa_fisica, 'C'),1,1) ie_sexo_pac,
		substr(obter_compl_pf(b.cd_pessoa_fisica, 1, 'CDM'),1,6) cd_municipio_ibge,
		lpad(substr(obter_compl_pf(b.cd_pessoa_fisica, 1, 'NA'),1,3),'0',3) cd_nacionalidade,
		c.cd_doenca_cid cd_cid_proc,
		somente_numero(substr(obter_idade_pf(b.cd_pessoa_fisica, c.dt_procedimento, 'A'),1,3)) nr_idade_pac,
		c.qt_procedimento,
		coalesce(d.cd_carater_atendimento,ie_carater_inter_sus) ie_carater_inter_sus,
		substr(coalesce(coalesce(d.nr_bpa,c.nr_doc_convenio),' '),1,13) ds_autorizacao,
		sus_elimina_caracteres_esp(substr(obter_nome_pf(b.cd_pessoa_fisica),1,30)) nm_paciente,
		substr(obter_dados_pf(b.cd_pessoa_fisica,'DN'),1,15) dt_nascimento,
		'I' ie_tipo_bpa,
		--nvl(c.cd_medico_executor, c.cd_pessoa_fisica),
		coalesce(sus_obter_regra_exp_exec(c.cd_procedimento,
						c.ie_origem_proced,
						coalesce(c.cd_medico_executor,c.cd_pessoa_fisica),
						c.cd_cbo,
						b.cd_estabelecimento,
						'N','S','N','M'),coalesce(c.cd_medico_executor,c.cd_pessoa_fisica)) cd_medico_executor,
		lpad(sus_obter_cor_pele(b.cd_pessoa_fisica, 'C'),2,'0') cd_raca_cor_w,
		lpad(CASE WHEN sus_obter_cor_pele(b.cd_pessoa_fisica, 'C')='5' THEN sus_obter_etnia(b.cd_pessoa_fisica, 'C')  ELSE '' END ,4,'0') cd_etnia_w,
		--nvl(c.cd_cbo, sus_obter_cbo_medico(nvl(c.cd_medico_executor, c.cd_pessoa_fisica),c.cd_procedimento,c.dt_procedimento,0)) cd_cbo,
		substr(coalesce(sus_obter_regra_exp_exec(c.cd_procedimento,
						c.ie_origem_proced,
						coalesce(c.cd_medico_executor,c.cd_pessoa_fisica),
						coalesce(c.cd_cbo, sus_obter_cbo_medico(coalesce(c.cd_medico_executor,c.cd_pessoa_fisica),c.cd_procedimento,clock_timestamp(),0)),
						b.cd_estabelecimento,
						'N','S','N','C'),
						coalesce(c.cd_cbo, sus_obter_cbo_medico(coalesce(c.cd_medico_executor,c.cd_pessoa_fisica),c.cd_procedimento,clock_timestamp(),0))),1,6) cd_cbo,
		sus_obter_substituir_cnes(cd_cnes_hospital_w, c.cd_setor_atendimento, b.cd_estabelecimento, b.ie_tipo_atendimento),
		cd_cgc_prestador,
		coalesce(sus_obter_dados_servico(c.nr_seq_servico,'C'),'0') cd_servico,
		coalesce(to_char(sus_obter_desc_classif(c.nr_seq_servico_classif,null,'C')),'0') cd_serv_classif,
		'' cd_equipe,
		substr(obter_compl_pf(b.cd_pessoa_fisica, 1, 'TLS'),1,3) tp_logradouro,
		substr(obter_compl_pf(b.cd_pessoa_fisica, 1, 'CEP'),1,8) cd_cep,
		sus_elimina_caracteres_esp(replace(elimina_acentos(upper(substr(obter_compl_pf(b.cd_pessoa_fisica, 1, 'EN'),1,100))),'Ç','C')) ds_logradouro,
		sus_elimina_caracteres_esp(replace(elimina_acentos(upper(substr(obter_compl_pf(b.cd_pessoa_fisica, 1, 'CO'),1,10))),'Ç','C')) ds_compl_logradouro,
		upper(substr(obter_compl_pf(b.cd_pessoa_fisica, 1, 'NR'),1,5)) nr_logradouro,
		sus_elimina_caracteres_esp(replace(elimina_acentos(upper(substr(obter_compl_pf(b.cd_pessoa_fisica, 1, 'B'),1,30))),'Ç','C')) ds_bairro,
		substr(sus_obter_telefone_export(b.cd_pessoa_fisica),1,2) ddd_fone_pac,
		substr(sus_obter_telefone_export(b.cd_pessoa_fisica),3,9) nr_fone_pac,
		substr(obter_compl_pf(b.cd_pessoa_fisica, 1, 'M'),1,40) email,
		e.cd_cnpj_fornecedor
	FROM sus_valor_proc_paciente s, atendimento_paciente b, procedimento_paciente c
LEFT OUTER JOIN sus_bpa_opme e ON (c.nr_sequencia = e.nr_seq_procedimento)
, conta_paciente a
LEFT OUTER JOIN sus_bpa_unif d ON (a.nr_interno_conta = d.nr_interno_conta)
WHERE a.dt_periodo_final between dt_inicial_p and dt_final_p and a.nr_atendimento	= b.nr_atendimento and a.nr_interno_conta	= c.nr_interno_conta   and c.nr_sequencia = s.nr_sequencia and c.ie_origem_proced	= 7 and a.ie_status_acerto 	= 2 and coalesce(c.cd_motivo_exc_conta::text, '') = '' and coalesce(a.ie_cancelamento::text, '') = '' and b.ie_tipo_atendimento <> 1 and a.cd_convenio_parametro = obter_dados_param_faturamento(a.cd_estabelecimento,'CSUS') and sus_obter_tiporeg_proc(c.cd_procedimento, c.ie_origem_proced, 'C', 1) = 2 and coalesce(sus_obter_regra_expbpa(c.nr_sequencia),'N') = 'N' and sus_consiste_proc_comp(b.nr_atendimento, a.nr_interno_conta, c.cd_procedimento) = 'S' and coalesce(s.ie_exp_bpa_doa_org, 'S')	= 'S' order by	cd_cns_medico_exec,
		ds_ordem,
		cd_procedimento,
		cd_cbo,
		nr_idade_pac;

c02 CURSOR FOR
	SELECT	a.nr_interno_conta
	from	procedimento_paciente c,	
		atendimento_paciente e,
		conta_paciente a
	where	a.nr_interno_conta = c.nr_interno_conta
	and	a.cd_convenio_parametro = obter_dados_param_faturamento(a.cd_estabelecimento,'CSUS')
	and     sus_obter_tiporeg_proc(c.cd_procedimento, c.ie_origem_proced, 'C', 1) in (1,2)
	and	e.ie_tipo_atendimento <> 1
	and	a.ie_status_acerto = 2
	and	coalesce(a.ie_cancelamento::text, '') = ''
	and	a.dt_periodo_final between dt_inicial_p and dt_final_p
	and	a.nr_atendimento = e.nr_atendimento;

c03 CURSOR FOR
	SELECT	c.nr_interno_conta
	from	procedimento_paciente	c,
		atendimento_paciente	b,
		conta_paciente		a
	where	a.dt_periodo_final between dt_inicial_p and dt_final_p
	and	a.nr_atendimento	= b.nr_atendimento
	and	a.nr_interno_conta	= c.nr_interno_conta
	and	c.ie_origem_proced	= 7
	and	a.ie_status_acerto 	= 2
	and	coalesce(a.ie_cancelamento::text, '') = ''
	and	b.ie_tipo_atendimento <> 1
	and	a.cd_convenio_parametro = obter_dados_param_faturamento(a.cd_estabelecimento,'CSUS')
	and     	sus_obter_tiporeg_proc(c.cd_procedimento, c.ie_origem_proced, 'C', 1) = 1
	and	sus_consiste_proc_comp(b.nr_atendimento, a.nr_interno_conta, c.cd_procedimento) = 'S'
	and	coalesce(sus_obter_regra_expbpa(c.nr_sequencia),'N') = 'N'
	group by	c.nr_interno_conta
	
union

	SELECT	a.nr_interno_conta
	FROM procedimento_paciente c, atendimento_paciente b, conta_paciente a
LEFT OUTER JOIN sus_bpa_unif d ON (a.nr_interno_conta = d.nr_interno_conta)
WHERE a.dt_periodo_final between dt_inicial_p and dt_final_p and a.nr_atendimento	= b.nr_atendimento and a.nr_interno_conta	= c.nr_interno_conta  and c.ie_origem_proced	= 7 and a.ie_status_acerto 	= 2 and coalesce(a.ie_cancelamento::text, '') = '' and b.ie_tipo_atendimento <> 1 and a.cd_convenio_parametro = obter_dados_param_faturamento(a.cd_estabelecimento,'CSUS') and sus_obter_tiporeg_proc(c.cd_procedimento, c.ie_origem_proced, 'C', 1) = 2 and coalesce(sus_obter_regra_expbpa(c.nr_sequencia),'N') = 'N' and sus_consiste_proc_comp(b.nr_atendimento, a.nr_interno_conta, c.cd_procedimento) = 'S' group by	a.nr_interno_conta
	order by	nr_interno_conta;


BEGIN

ie_ordena_paciente_w := obter_param_usuario(1125, 52, obter_perfil_ativo, nm_usuario_p, 0, ie_ordena_paciente_w);
ie_data_ref_proc_w := obter_param_usuario(1125, 59, obter_perfil_ativo, nm_usuario_p, 0, ie_data_ref_proc_w);
ie_data_entrada_w 	:= coalesce(obter_valor_param_usuario(1125,73,obter_perfil_ativo,nm_usuario_p,0),'N');
ie_data_competencia_w 	:= coalesce(obter_valor_param_usuario(1125,121,obter_perfil_ativo,nm_usuario_p,0),'P');
ie_agrupa_bpai_w	:= coalesce(obter_valor_param_usuario(1125,162,obter_perfil_ativo,nm_usuario_p,0),'N');

/* Limpar tabela */

open c02;
loop
fetch c02 into
	nr_interno_conta_w;
EXIT WHEN NOT FOUND; /* apply on c02 */
	begin
	/* Limpar tabelas transitórias */

	delete	from w_susbpa_interf_coord
	where	nr_interno_conta = nr_interno_conta_w;
	
	delete	from w_susbpa_interf
	where	nr_interno_conta	= nr_interno_conta_w;
	end;
end loop;
commit;
close c02;

/* Obter dados do cabeçalho */

begin
select	add_months(dt_final_p,1),
	substr(obter_nome_estabelecimento(b.cd_estabelecimento),1,30),
	b.cd_orgao_responsavel,
	substr(obter_cgc_estabelecimento(b.cd_estabelecimento),1,14),
	b.nm_orgao_destino,
	b.ie_orgao_destino,
	b.cd_cnes_hospital,
	b.cd_estabelecimento,
	b.ie_cnes_prestador,
	coalesce(b.ie_remove_tplogr_end,'N')
into STRICT	dt_mesano_referencia_w,
	nm_orgao_responsavel_w,
	cd_orgao_responsavel_w,
	cd_cgc_responsavel_w,
	nm_orgao_destino_w,
	ie_orgao_destino_w,
	cd_cnes_hospital_w,
	cd_estabelecimento_w,
	ie_cnes_prestador_w,
	ie_remove_tplogr_end_w
from	sus_parametros_bpa	b
where	b.cd_estabelecimento = cd_estabelecimento_p;
exception
	when others then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(204006);
	/*Não foram encontrados dados na pasta Cadastros da função SUS BPA. Estas informações são necessárias para a exportação.*/

end;

if (ie_data_competencia_w = 'F') then
	dt_mesano_referencia_w := dt_final_p;
end if;

/* Obter o valor do campo DOMINIO, o calculo é feito pelo MOD da soma dos códigos dos procedimentos com suas respectivas quantidades mais 1111 */

select	mod((sum(c.cd_procedimento) + sum(c.qt_procedimento)),1111) + 1111
into STRICT	cd_dominio_w
from	procedimento_paciente	c,
	atendimento_paciente	b,
	conta_paciente		a
where	a.dt_periodo_final between dt_inicial_p and dt_final_p
and	a.nr_atendimento	= b.nr_atendimento
and	a.nr_interno_conta	= c.nr_interno_conta
and	c.ie_origem_proced	= 7
and	b.ie_tipo_atendimento 	<> 1
and	a.ie_status_acerto 	= 2
and	coalesce(c.cd_motivo_exc_conta::text, '') = ''
and	coalesce(a.ie_cancelamento::text, '') = ''
and     sus_obter_tiporeg_proc(c.cd_procedimento, c.ie_origem_proced, 'C', 1) in (1,2)
and	a.cd_convenio_parametro = obter_dados_param_faturamento(a.cd_estabelecimento,'CSUS');

select	nextval('w_susbpa_interf_seq')
into STRICT	nr_sequencia_w
;

/* Inserir o registro do cabecalho */

insert into w_susbpa_interf(
		nr_sequencia,
		nr_seq_protocolo,
		nr_interno_conta,
		nr_atendimento,
		cd_pessoa_fisica,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		ds_registro,
		dt_mesano_referencia,
		qt_linhas,
		qt_folha_bpa,
		nm_orgao_responsavel,
		cd_orgao_responsavel,
		cd_cgc_responsavel,
		nm_orgao_destino,
		ie_orgao_destino,
		ds_versao,
		ie_cabecalho,
		cd_dominio)
	values (	nr_sequencia_w,
		0,
		nr_interno_conta_w,
		nr_atendimento_w,
		cd_pessoa_fisica_w,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		'*BPA*',
		dt_mesano_referencia_w,
		qt_linhas_w,
		qt_folha_bpa_w,
		nm_orgao_responsavel_w,
		cd_orgao_responsavel_w,
		cd_cgc_responsavel_w,
		nm_orgao_destino_w,
		ie_orgao_destino_w,
		'*BPABeta4*',
		'C',
		substr(cd_dominio_w,1,4));

/* Contador de procedimentos consolidados */

select	count(b.cd_procedimento)
into STRICT	qt_proc_consolidado_w
from	atendimento_paciente		d,
	sus_procedimento_registro	c,
	procedimento_paciente		b,
	conta_paciente 			a
where	a.dt_periodo_final between dt_inicial_p and dt_final_p
and	a.nr_interno_conta 	= b.nr_interno_conta
and	a.nr_atendimento	= d.nr_atendimento
and	b.cd_procedimento	= c.cd_procedimento
and	b.ie_origem_proced	= c.ie_origem_proced
and	c.cd_registro		= 1
and	d.ie_tipo_atendimento 	<> 1
and	a.ie_status_acerto 	= 2
and	a.cd_convenio_parametro = obter_dados_param_faturamento(a.cd_estabelecimento,'CSUS')
and	coalesce(sus_obter_reg_proc_bpa(c.cd_procedimento,c.ie_origem_proced),c.cd_registro) = 1;

if (qt_proc_consolidado_w	> 0) then
	nr_folha_bpa_con_w	:= 1;
end if;

/* Contador de procedimentos individualizado */


/*select	count(b.cd_procedimento)
into	qt_proc_individua_w
from	atendimento_paciente		d,
	sus_procedimento_registro	c,
	procedimento_paciente		b,
	conta_paciente 			a
where	a.dt_periodo_final between dt_inicial_p and dt_final_p
and	a.nr_interno_conta 	= b.nr_interno_conta
and	a.nr_atendimento	= d.nr_atendimento
and	b.cd_procedimento	= c.cd_procedimento
and	b.ie_origem_proced	= c.ie_origem_proced
and	c.cd_registro		= 2
and	d.ie_tipo_atendimento 	<> 1
and	a.ie_status_acerto 	= 2
and	a.cd_convenio_parametro = obter_dados_param_faturamento(a.cd_estabelecimento,'CSUS')
and	nvl(sus_obter_reg_proc_bpa(c.cd_procedimento,c.ie_origem_proced),c.cd_registro) = 2;
*/
if (nr_folha_bpa_p > 0) then
	nr_folha_bpa_con_w	:= nr_folha_bpa_p + 1;
end if;
if (nr_folha_bpi_p > 0) then
	nr_folha_bpa_ind_w 	:= nr_folha_bpi_p;
end if;

open c01;
loop
fetch c01 into
	ds_ordem_w,
	cd_registro_w,
	nr_interno_conta_w,
	nr_atendimento_w,
	cd_pessoa_fisica_w,
	cd_cns_medico_exec_w,
	dt_atend_proc_w,
	cd_procedimento_w,
	ie_origem_proced_w,
	cd_cns_paciente_w,
	ie_sexo_pac_w,
	cd_municipio_ibge_w,
	cd_nacionalidade_w,
	cd_cid_proc_w,
	nr_idade_pac_w,
	qt_procedimento_w,
	cd_carater_atend_w,
	ds_autorizacao_w,
	nm_paciente_w,
	dt_nascimento_w,
	ie_tipo_bpa_w,
	cd_medico_executor_w,
	cd_raca_cor_w,
	cd_etnia_w,
	cd_cbo_w,
	cd_cnes_hosp_proc_w,
	cd_cgc_prestador_w,
	cd_servico_w,
	cd_serv_classif_w,
	cd_equipe_w,
	tp_logradouro_w,
	cd_cep_w,
	ds_logradouro_w,
	ds_compl_logradouro_w,
	nr_logradouro_w,
	ds_bairro_w,
	ddd_fone_pac_w,
	nr_fone_pac_w,
	email_w,
	cd_cnpj_fornecedor_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	/* Obter dados da BPA Unificada */

	if (ie_tipo_bpa_w	= 'I') then
		begin
		select	coalesce(nr_bpa, ''),
			coalesce(cd_carater_atendimento, cd_carater_atend_w)
		into STRICT	ds_autorizacao_w,
			cd_carater_atend_w
		from	sus_bpa_unif
		where	nr_interno_conta	= nr_interno_conta_w;
		exception
			when others then
			ds_autorizacao_w		:= ds_autorizacao_w;
			cd_carater_atend_w	:= cd_carater_atend_w;
		end;

		cd_carater_atend_w	:= lpad(cd_carater_atend_w,2,'0');
	end if;

	--sus_obter_exec_exp_aih(cd_procedimento_w, 7, cd_medico_executor_w, cd_cbo_w, cd_estabelecimento_w, 'N', 'S', 'N', cd_exec_exp_w, cd_cbo_exec_exp_w);
	qt_existe_proc_w := 0;

	/*if	(cd_cbo_exec_exp_w is not null) and
		(cd_exec_exp_w is not null) then
		begin
		cd_medico_executor_w	:= cd_exec_exp_w;
		cd_cbo_w		:= cd_cbo_exec_exp_w;

		select	substr(obter_dados_pf(cd_exec_exp_w,'CNS'),1,15)
		into	cd_cns_medico_exec_w
		from	dual;*/


		--OS Angelina Caron, problema para agrupar consolidados com mesmo cbo da regra de exportação. OS 316031
		select 	count(*)
		into STRICT	qt_existe_proc_w
		from	w_susbpa_interf a,
			w_susbpa_interf_coord b
		where	a.cd_procedimento	= cd_procedimento_w
		and	a.ie_tipo_bpa		= 'C'
		and	a.cd_cbo		= cd_cbo_w
		and	a.nr_interno_conta 	= b.nr_interno_conta
		and	b.dt_inicial		= dt_inicial_p
		and 	b.dt_final		= dt_final_p
		and	a.nm_usuario_nrec	= nm_usuario_p;

		if (qt_existe_proc_w > 0) then
			begin
			update	w_susbpa_interf a
			set	a.qt_procedimento 	= qt_procedimento + qt_procedimento_w
			where	a.cd_procedimento 	= cd_procedimento_w
			and	a.cd_cbo 			= cd_cbo_w
			and	a.ie_tipo_bpa 		= 'C'
			and	exists (	SELECT	1
					from	w_susbpa_interf_coord b
					where	b.nr_interno_conta	= a.nr_interno_conta
					and	b.dt_inicial		= dt_inicial_p 
					and 	b.dt_final		= dt_final_p)
			and	a.nm_usuario_nrec	= nm_usuario_p;
			end;
		end if;

		/*end;
	end if;*/
	
	cd_cgc_prestador_exp_w := sus_obter_prest_exp(cd_procedimento_w, ie_origem_proced_w, cd_cgc_prestador_w, cd_estabelecimento_w, 'N', 'S', 'N', cd_cgc_prestador_exp_w);

	if (cd_cgc_prestador_exp_w IS NOT NULL AND cd_cgc_prestador_exp_w::text <> '') then
		cd_cgc_prestador_w	:= cd_cgc_prestador_exp_w;
	end if;
	
	if (coalesce(ie_agrupa_bpai_w,'N') = 'S') and (ie_tipo_bpa_w = 'I') then
		begin
		
		select 	count(1)
		into STRICT	qt_existe_proc_w
		from	w_susbpa_interf a,
			w_susbpa_interf_coord b
		where	a.cd_procedimento		= cd_procedimento_w
		and	a.ie_tipo_bpa			= 'I'
		and	a.cd_cns_medico_exec		= cd_cns_medico_exec_w
		and	a.cd_cbo			= cd_cbo_w
		and	a.cd_ups			= cd_cnes_hosp_proc_w
		and	a.cd_pessoa_fisica		= cd_pessoa_fisica_w
		and	coalesce(a.ds_autorizacao,'X') 	= coalesce(ds_autorizacao_w,'X')
		and	a.nr_interno_conta 		= b.nr_interno_conta
		and	b.dt_inicial			= dt_inicial_p
		and 	b.dt_final			= dt_final_p
		and	a.nm_usuario_nrec	 	= nm_usuario_p  LIMIT 1;
		
		if (qt_existe_proc_w > 0) then
			begin
			update	w_susbpa_interf a
			set	a.qt_procedimento = a.qt_procedimento + qt_procedimento_w
			where	a.cd_procedimento		= cd_procedimento_w
			and	a.ie_tipo_bpa			= 'I'
			and	a.cd_cns_medico_exec		= cd_cns_medico_exec_w
			and	a.cd_cbo			= cd_cbo_w
			and	a.cd_ups			= cd_cnes_hosp_proc_w
			and	a.cd_pessoa_fisica		= cd_pessoa_fisica_w
			and	coalesce(a.ds_autorizacao,'X') 	= coalesce(ds_autorizacao_w,'X')
			and	exists (	SELECT	1
					from	w_susbpa_interf_coord b
					where	b.nr_interno_conta	= a.nr_interno_conta
					and	b.dt_inicial		= dt_inicial_p
					and 	b.dt_final		= dt_final_p)
			and	a.nm_usuario_nrec	 	= nm_usuario_p;										
			end;
		end if;
		
		end;
	end if;

	if (qt_existe_proc_w = 0) then
		begin
		if (ie_tipo_bpa_w	= 'C') then
			begin
			cd_medico_executor_w	:= ' ';
			end;
		end if;

		/* Cada folha possui 99 linhas, se atingir esse limite ou ser outro profissional BPI deve ser criada uma nova folha */

		if (ie_tipo_bpa_w	= 'C') then
			if (nr_linha_folha_w	= 20) then
				nr_linha_folha_con_w	:= 0;
				nr_folha_bpa_con_w	:= nr_folha_bpa_con_w + 1;
			end if;
		elsif (ie_tipo_bpa_w	= 'I') then
			if (nr_linha_folha_w	= 99) or (cd_cns_medico_exec_w	<> cd_cns_medico_exec_ww) or (cd_cbo_w 		<> cd_cbo_ww) then
				nr_linha_folha_ind_w	:= 0;
				if (nr_folha_bpa_ind_w < 98901) then
					nr_folha_bpa_ind_w	:= nr_folha_bpa_ind_w + 1;
				else
					CALL wheb_mensagem_pck.exibir_mensagem_abort(279833);
				end if;
			end if;
		end if;

		/* Contador de linhas do arquivo */

		qt_linhas_w		:= qt_linhas_w + 1; /* Número de linhas do BPA gravadas */


		/* Se o procedimento for consolidado então será inserida as folhas e o numero da linha do consolidado se não do Individualizado */

		if (ie_tipo_bpa_w	= 'C') then
			nr_linha_folha_con_w	:= nr_linha_folha_con_w + 1;
			nr_linha_folha_w		:= nr_linha_folha_con_w;
			nr_folha_bpa_w		:= nr_folha_bpa_con_w;
		elsif (ie_tipo_bpa_w	= 'I') then
			nr_linha_folha_ind_w	:= nr_linha_folha_ind_w + 1;
			nr_linha_folha_w		:= nr_linha_folha_ind_w;
			nr_folha_bpa_w		:= nr_folha_bpa_ind_w;
		end if;

		/* Felipe - 28/02/2008 - OS 80604 - Esse código é feito de 7 em 7 pacientes */

		if (cd_procedimento_w	= 0301080160) then
			qt_procedimento_w		:= trunc(dividir(qt_procedimento_w,7));
		end if;

		if (ie_cnes_prestador_w		= 'S') and (cd_cgc_prestador_w		<> cd_cgc_responsavel_w) then
			begin
			select	coalesce(max(cd_cnes),0)
			into STRICT	cd_cnes_prestador_w
			from	pessoa_juridica
			where	cd_cgc	= cd_cgc_prestador_w;
			exception
			when others then
				cd_cnes_prestador_w := 0;
			end;
			if (coalesce(cd_cnes_prestador_w,0) > 0) then
				cd_cnes_hosp_proc_w	:= cd_cnes_prestador_w;
			end if;
		end if;
		
		if (ie_remove_tplogr_end_w = 'S') and (length(ds_logradouro_w) > 30) then
			begin
			ds_tipo_logradouro_w	:= substr(sus_obter_desc_tipo_logr(tp_logradouro_w),1,40);
			
			--if	(substr(ds_logradouro_w,1,length(ds_tipo_logradouro_w)+1) = ds_tipo_logradouro_w||' ') then
			if (upper(substr(ds_logradouro_w,1,length(ds_tipo_logradouro_w)+1)) = upper(ds_tipo_logradouro_w)||' ') then
				ds_logradouro_w	:= substr(substr(ds_logradouro_w,length(ds_tipo_logradouro_w)+2,length(ds_logradouro_w)),1,30);
			end if;					
			end;
		elsif (ie_remove_tplogr_end_w = 'T') and (tp_logradouro_w IS NOT NULL AND tp_logradouro_w::text <> '') then
			begin
			ds_tipo_logradouro_w	:= substr(sus_obter_desc_tipo_logr(tp_logradouro_w),1,40);
			
			if (upper(substr(ds_logradouro_w,1,length(ds_tipo_logradouro_w)+1)) = upper(ds_tipo_logradouro_w)||' ') then
				ds_logradouro_w	:= substr(substr(ds_logradouro_w,length(ds_tipo_logradouro_w)+2,length(ds_logradouro_w)),1,30);
			end if;					
			end;
		else	
			ds_logradouro_w := substr(ds_logradouro_w,1,30);
		end if;

		select	nextval('w_susbpa_interf_seq')
		into STRICT	nr_sequencia_w
		;
	
		insert into w_susbpa_interf(
				nr_sequencia,
				nr_seq_protocolo,
				nr_interno_conta,
				nr_atendimento,
				cd_pessoa_fisica,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				ds_registro,
				dt_mesano_referencia,
				qt_linhas,
				qt_folha_bpa,
				nm_orgao_responsavel,
				cd_orgao_responsavel,
				cd_cgc_responsavel,
				nm_orgao_destino,
				ie_orgao_destino,
				ds_versao,
				cd_ups,
				dt_competencia,
				cd_cns_medico_exec,
				cd_cbo,
				dt_procedimento,
				nr_folha_bpa,
				nr_linha_folha,
				cd_procedimento,
				cd_cns_paciente,
				ie_sexo_pac,
				cd_municipio_ibge,
				cd_cid_proc,
				nr_idade_pac,
				qt_procedimento,
				cd_carater_atendimento,
				ds_autorizacao,
				ds_origem_informacao,
				nm_paciente,
				dt_nascimento,
				ie_tipo_bpa,
				ie_cabecalho,
				cd_dominio,
				cd_raca_cor,
				cd_etnia,
				cd_nacionalidade,
				cd_servico,
				cd_servico_classif,
				cd_equipe,
				tp_logradouro,
				cd_cep,
				ds_logradouro,
				ds_compl_logradouro,
				nr_logradouro,
				ds_bairro,
				ddd_fone_pac,
				nr_fone_pac,
				ds_email,
				cd_cnpj_fornecedor)
		values (		nr_sequencia_w,
				0,
				nr_interno_conta_w,
				nr_atendimento_w,
				cd_pessoa_fisica_w,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				'*BPA*',
				dt_mesano_referencia_w,
				qt_linhas_w,
				qt_folha_bpa_w,
				nm_orgao_responsavel_w,
				cd_orgao_responsavel_w,
				cd_cgc_responsavel_w,
				nm_orgao_destino_w,
				ie_orgao_destino_w,
				'*BPABeta4*',
				coalesce(cd_cnes_hosp_proc_w, cd_cnes_hospital_w),
				dt_mesano_referencia_w,
				coalesce(cd_cns_medico_exec_w,0),
				cd_cbo_w,
				dt_atend_proc_w,
				nr_folha_bpa_w,
				nr_linha_folha_w,
				cd_procedimento_w,
				cd_cns_paciente_w,
				ie_sexo_pac_w,
				cd_municipio_ibge_w,
				cd_cid_proc_w,
				(nr_idade_pac_w)::numeric ,
				qt_procedimento_w,
				cd_carater_atend_w,
				ds_autorizacao_w,
				'BPA',
				nm_paciente_w,
				to_date(dt_nascimento_w,'dd/mm/yyyy'),
				ie_tipo_bpa_w,
				'P',
				substr(cd_dominio_w,1,4),
				cd_raca_cor_w,
				cd_etnia_w,
				cd_nacionalidade_w,
				cd_servico_w,
				cd_serv_classif_w,
				cd_equipe_w,
				tp_logradouro_w,
				cd_cep_w,
				ds_logradouro_w,
				ds_compl_logradouro_w,
				nr_logradouro_w,
				ds_bairro_w,
				ddd_fone_pac_w,
				nr_fone_pac_w,
				email_w,
				cd_cnpj_fornecedor_w);

		/*Adicionado este IF pois quando o primeiro registro do protocolo é consolidado,
		estava salvando informações no contralador do individualizado e por isso não trocava de folha.
		Geliard 24/06/11, OS 329586*/
		if (ie_tipo_bpa_w	= 'I') then
			cd_cns_medico_exec_ww	:= cd_cns_medico_exec_w;
			cd_cbo_ww		:= cd_cbo_w;
		end if;

		end;
	end if;
	end;
end loop;
close c01;
/*Gravando as conta que foram enviadas*/

open c03;
loop
fetch c03 into
	nr_interno_conta_w;
EXIT WHEN NOT FOUND; /* apply on c03 */
	begin
	insert into w_susbpa_interf_coord(	nr_sequencia,
				nr_interno_conta,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_bpa,
				dt_inicial,
				dt_final,
				dt_mesano_apres,
				dt_envio_coord,
				nm_usuario_envio)
		values (	nextval('w_susbpa_interf_coord_seq'),
				nr_interno_conta_w,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				0,
				dt_inicial_p,
				dt_final_p,
				dt_mesano_referencia_w,
				clock_timestamp(),
				nm_usuario_p);
	end;
end loop;
commit;
close c03;

/* Somatório da quantidade total de folhas do arquivo */

qt_folha_bpa_w	:= nr_folha_bpa_con_w + nr_folha_bpa_ind_w;

/* Atualizar na tabela temporária a quantidade linhas e de folhas do arquivo */

update	w_susbpa_interf a
set	a.qt_linhas		= qt_linhas_w,
	a.qt_folha_bpa	= qt_folha_bpa_w
where	exists (	SELECT	1
		from	w_susbpa_interf_coord b
		where	b.nr_interno_conta	= a.nr_interno_conta
		and	b.dt_inicial		= dt_inicial_p
		and 	b.dt_final		= dt_final_p);

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_interf_sus_bpa_coord ( dt_inicial_p timestamp, dt_final_p timestamp, cd_estabelecimento_p bigint, nr_folha_bpa_p bigint, nr_folha_bpi_p bigint, nm_usuario_p text) FROM PUBLIC;

