-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_ret_lote_audit_rec (nr_seq_retorno_p bigint, nr_seq_lote_audit_rec_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_interno_conta_w	bigint;
cd_autorizacao_w	varchar(255);
nr_seq_ret_item_ant_w	bigint;
nr_seq_ret_item_w	bigint;
cont_w			bigint;
vl_saldo_w		double precision;
nr_seq_retorno_w	bigint;
cd_estabelecimento_w	smallint;
ie_permitecontasoutroretorno_w	varchar(1);

c01 CURSOR FOR
SELECT	distinct b.nr_interno_conta,
	b.cd_autorizacao,
	a.nr_seq_ret_item
from	conta_paciente_retorno b,
	conta_paciente_ret_hist a
where	a.nr_seq_conpaci_ret	= b.nr_sequencia
and	a.nr_seq_lote_recurso	= nr_seq_lote_audit_rec_p;


BEGIN

select	max(nr_seq_retorno)
into STRICT	nr_seq_retorno_w
from	lote_audit_recurso
where	nr_sequencia	= nr_seq_lote_audit_rec_p
and	(nr_seq_retorno IS NOT NULL AND nr_seq_retorno::text <> '');

select 	max(cd_estabelecimento)
into STRICT	cd_estabelecimento_w
from	conta_paciente_retorno b,
	conta_paciente_ret_hist a,
	conta_paciente c
where	a.nr_seq_conpaci_ret	= b.nr_sequencia
and	b.nr_interno_conta	= c.nr_interno_conta
and	a.nr_seq_lote_recurso	= nr_seq_lote_audit_rec_p;

ie_permitecontasoutroretorno_w := obter_param_usuario(27, 100, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_permitecontasoutroretorno_w);

if (nr_seq_retorno_w IS NOT NULL AND nr_seq_retorno_w::text <> '') then
	CALL wheb_mensagem_pck.Exibir_Mensagem_Abort(255907,'nr_seq_retorno_w=' || nr_Seq_retorno_w );
end if;

open c01;
loop
fetch c01 into
	nr_interno_conta_w,
	cd_autorizacao_w,
	nr_seq_ret_item_ant_w;
EXIT WHEN NOT FOUND; /* apply on c01 */

	select	nextval('convenio_retorno_item_seq')
	into STRICT	nr_seq_ret_item_w
	;

	vl_saldo_w	:= obter_valor_pend_guia_data(nr_interno_conta_w, cd_autorizacao_w, clock_timestamp());
	
	if (coalesce(ie_permitecontasoutroretorno_w,'S') = 'N')	and (obter_conta_outro_retorno(nr_seq_retorno_p,nr_interno_conta_w,cd_autorizacao_w) <> 0) then
		/* Esta conta já está vinculada a outro retorno em aberto. Parâmetro [100] */

		CALL wheb_mensagem_pck.exibir_mensagem_abort(255816);
	end if;
	
	insert	into convenio_retorno_item(nr_sequencia,
		nr_seq_retorno,
		vl_pago,
		vl_glosado,
		dt_atualizacao,
		nm_usuario,
		ie_glosa,
		nr_interno_conta,
		cd_autorizacao,
		ds_observacao,
		vl_adicional,
		nr_titulo,
		vl_amenor,
		vl_adequado,
		cd_motivo_glosa,
		ie_libera_repasse,
		ie_analisada,
		vl_desconto,
		cd_autorizacao_conv,
		cd_centro_custo_desc,
		nr_seq_motivo_desc,
		vl_perdas,
		vl_guia,
		ie_autorizacao)
	SELECT	nr_seq_ret_item_w,
		nr_seq_retorno_p,
		0,
		0,
		clock_timestamp(),
		nm_usuario_p,
		'P',
		nr_interno_conta_w,
		cd_autorizacao_w,
		null,
		0,
		null,
		vl_saldo_w,
		0,
		null,
		'N',
		'N',
		0,
		null,
		null,
		null,
		0,
		null,
		null
	;

	insert into convenio_retorno_glosa(nr_sequencia,
		nr_seq_ret_item,
		vl_glosa,
		dt_atualizacao,
		nm_usuario,
		cd_procedimento,
		ie_origem_proced,
		cd_material,
		ds_observacao,
		ie_atualizacao,
		cd_item_convenio,
		cd_motivo_glosa,
		nr_seq_conpaci_ret_hist,
		qt_glosa,
		cd_setor_atendimento,
		dt_execucao,
		cd_resposta,
		nr_seq_propaci,
		nr_seq_matpaci,
		vl_amaior,
		ie_emite_conta,
		vl_cobrado,
		qt_cobrada,
		nr_seq_propaci_partic,
		nr_seq_matpaci_partic,
		cd_setor_responsavel,
		cd_autorizacao_compl,
		nr_seq_partic,
		cd_pessoa_fisica,
		ds_complemento,
		vl_pago_digitado,
		vl_repasse_item)
	SELECT	nextval('convenio_retorno_glosa_seq'),
		nr_seq_ret_item_w,
		vl_glosa,
		clock_timestamp(),
		nm_usuario_p,
		cd_procedimento,
		ie_origem_proced,
		cd_material,
		ds_observacao,
		ie_atualizacao,
		cd_item_convenio,
		cd_motivo_glosa,
		null,
		qt_glosa,
		cd_setor_atendimento,
		dt_execucao,
		cd_resposta,
		nr_seq_propaci,
		nr_seq_matpaci,
		0,
		ie_emite_conta,
		vl_cobrado,
		qt_cobrada,
		null,
		null,
		cd_setor_responsavel,
		cd_autorizacao_compl,
		nr_seq_partic,
		cd_pessoa_fisica,
		ds_complemento,
		0,
		null
	from	convenio_retorno_glosa b
	where	b.nr_seq_ret_item 	= nr_seq_ret_item_ant_w
	and exists (
		SELECT	1
		from	conta_paciente_ret_hist a
		where	a.nr_seq_lote_recurso	= nr_seq_lote_audit_rec_p
		and	a.nr_sequencia		= b.nr_seq_conpaci_ret_hist);

end loop;
close c01;

update	lote_audit_recurso
set	nr_seq_retorno	= nr_seq_retorno_p
where	nr_sequencia	= nr_seq_lote_audit_rec_p;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_ret_lote_audit_rec (nr_seq_retorno_p bigint, nr_seq_lote_audit_rec_p bigint, nm_usuario_p text) FROM PUBLIC;

