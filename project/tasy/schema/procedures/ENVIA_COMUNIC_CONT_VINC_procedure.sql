-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE envia_comunic_cont_vinc ( nr_sequencia_p bigint, nm_usuario_p text, cd_estabelecimento_p text ) AS $body$
DECLARE


    nr_seq_regra_w              regra_envio_comunic_evento.nr_sequencia%type;
    cd_perfil_w                 regra_envio_comunic_evento.cd_perfil%type;
    ds_setor_adicional_w        comunic_interna.ds_setor_adicional%type := '';
    cd_setor_regra_usuario_w    regra_envio_comunic_usu.cd_setor_atendimento%type;
    nr_sequencia_w              comunic_interna.nr_sequencia%type;
    nr_seq_classif_w            comunic_interna_classif.nr_sequencia%type;
    ds_titulo_w                 comunic_interna.ds_titulo%type;
    ds_comunicado_w             comunic_interna.ds_comunicado%type;
    vl_contrato_w               contrato.vl_total_contrato%type;
    dt_fim_contrato_w           contrato.dt_fim%type;
    nm_usuario_resp_contrato_w  usuario.nm_usuario%type;
    nr_contrato_w               contrato.cd_cgc_contratado%type;
    nm_usuario_adic_evento_w    regra_envio_comunic_evento.nm_usuarios_adic%type := '';
    nm_usuarios_destino_w       regra_envio_comunic_evento.nm_usuarios_adic%type := '';
    ie_usuario_w                regra_envio_comunic_usu.ie_usuario%type;

    c01 CURSOR FOR
    SELECT
        b.nr_sequencia,
        b.cd_perfil
    from
        regra_envio_comunic_compra  a,
        regra_envio_comunic_evento  b
    where
            a.nr_sequencia = b.nr_seq_regra
        and a.cd_funcao = 40
        and b.cd_evento = 84
        and b.ie_situacao = 'A'
        and a.cd_estabelecimento = cd_estabelecimento_p
        and substr(obter_se_envia_ci_regra_compra(b.nr_sequencia, nr_sequencia_p, 'NF', obter_perfil_ativo, nm_usuario_p,null),1,1) = 'S';

    c02 CURSOR FOR
    SELECT
        c.nr_sequencia,
        c.dt_fim
    from
        nota_fiscal_item  nfi,
        contrato          c
    where
            nfi.nr_sequencia = nr_sequencia_p
        and c.nr_sequencia = nfi.nr_contrato
    group by
        c.nr_sequencia,
        c.cd_cgc_contratado,
        c.dt_fim;

    c03 CURSOR FOR
    SELECT distinct
        ie_usuario                            ie_usuario,
        coalesce(a.cd_setor_atendimento, 0)        cd_setor_atendimento
    from
        regra_envio_comunic_usu a
    where
        a.nr_seq_evento = nr_seq_regra_w;


BEGIN
    select
        obter_classif_comunic('F')
    into STRICT nr_seq_classif_w
;

    open c01;
    loop
        fetch c01 into
            nr_seq_regra_w,
            cd_perfil_w;
        EXIT WHEN NOT FOUND; /* apply on c01 */
        begin
            select
                nm_usuarios_adic
            into STRICT nm_usuario_adic_evento_w
            from
                regra_envio_comunic_evento a
            where
                    nr_sequencia = nr_seq_regra_w
                and a.ie_situacao = 'A';

            open c02;
            loop
                fetch c02 into
                    nr_contrato_w,
                    dt_fim_contrato_w;
                EXIT WHEN NOT FOUND; /* apply on c02 */
                begin
                    open c03;
                    loop
                        fetch c03 into
                            ie_usuario_w,
                            cd_setor_regra_usuario_w;
                        EXIT WHEN NOT FOUND; /* apply on c03 */
                        begin
                            if ( cd_setor_regra_usuario_w <> 0 )
                                and ( obter_se_contido_char(cd_setor_regra_usuario_w, ds_setor_adicional_w) = 'N' )
                            then
                                ds_setor_adicional_w := substr(ds_setor_adicional_w || cd_setor_regra_usuario_w || ',',1,2000);
                            end if;

                            select
                                obter_usuario_pf(c.cd_pessoa_resp)
                            into STRICT nm_usuario_resp_contrato_w
                            from
                                contrato c
                            where
                                c.nr_sequencia = nr_contrato_w;

                            if ( ie_usuario_w = 'URC' )
                                and (nm_usuario_resp_contrato_w IS NOT NULL AND nm_usuario_resp_contrato_w::text <> '')
                                and ( obter_se_contido_char(nm_usuario_resp_contrato_w, nm_usuarios_destino_w) = 'N' )
                            then
                                nm_usuarios_destino_w := substr(nm_usuarios_destino_w || nm_usuario_resp_contrato_w || ',', 1, 255);
                            end if;

                        end;

                    end loop;

                    close c03;

                    if (nm_usuario_adic_evento_w IS NOT NULL AND nm_usuario_adic_evento_w::text <> '') then
                        if (nm_usuarios_destino_w IS NOT NULL AND nm_usuarios_destino_w::text <> '') then
                            nm_usuarios_destino_w := nm_usuario_adic_evento_w || ',' || nm_usuarios_destino_w;
                        else
                            nm_usuarios_destino_w := nm_usuario_adic_evento_w;
                        end if;
                    end if;

                    if (nm_usuarios_destino_w IS NOT NULL AND nm_usuarios_destino_w::text <> '') then
                        
                        select
                            sum(vl_contrato)
                        into STRICT vl_contrato_w
                        from (
                                SELECT distinct(
                                        SELECT
                                            sum(x.vl_liquido)
                                        from
                                            nota_fiscal_item x
                                        where
                                            x.nr_sequencia = a.nr_sequencia
                                    ) vl_contrato
                                from
                                    nota_fiscal       b,
                                    nota_fiscal_item  a
                                where
                                        a.nr_sequencia = b.nr_sequencia
                                    and a.nr_contrato = nr_contrato_w
                                    and ( b.ie_situacao = '0'
                                          or '0' = '0' )
                            ) alias5;

                        select
                            max(substr(ds_titulo, 1, 80)),
                            max(substr(replace(replace(replace_macro(replace_macro(replace_macro(ds_comunicacao, '@nota', nr_sequencia_p),
                                                                                   '@contrato',
                                                                                   nr_contrato_w),
                                                                     '@fornecedor',
                                                                     CASE WHEN coalesce(nr_contrato_w::text, '') = '' THEN  ''  ELSE substr(obter_descricao_contrato(nr_contrato_w), 1, 255) END ),
                                                       '@valor_contrato',
                                                       CASE WHEN coalesce(vl_contrato_w::text, '') = '' THEN  ''  ELSE formata_casas_decimais(vl_contrato_w, 2) END ),
                                               '@data_fim_contrato',
                                               CASE WHEN coalesce(dt_fim_contrato_w::text, '') = '' THEN  ''  ELSE dt_fim_contrato_w END ),
                                       1,
                                       2000)) ds_comunicacao
                        into STRICT
                            ds_titulo_w,
                            ds_comunicado_w
                        from
                            regra_envio_comunic_evento
                        where
                            nr_sequencia = nr_seq_regra_w;

                        select
                            nextval('comunic_interna_seq')
                        into STRICT nr_sequencia_w
;

                        insert into comunic_interna(
                            dt_comunicado,
                            ds_titulo,
                            ds_comunicado,
                            nm_usuario,
                            dt_atualizacao,
                            ie_geral,
                            nm_usuario_destino,
                            nr_sequencia,
                            ie_gerencial,
                            nr_seq_classif,
                            dt_liberacao,
                            ds_perfil_adicional,
                            ds_setor_adicional
                        ) values (
                            clock_timestamp(),
                            ds_titulo_w,
                            ds_comunicado_w,
                            'tasy',
                            clock_timestamp(),
                            'N',
                            nm_usuarios_destino_w,
                            nr_sequencia_w,
                            'N',
                            nr_seq_classif_w,
                            clock_timestamp(),
                            cd_perfil_w,
                            ds_setor_adicional_w
                        );

                        nm_usuarios_destino_w := '';
                    end if;

                end;

            end loop;

            close c02;
        end;

    end loop;

    close c01;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE envia_comunic_cont_vinc ( nr_sequencia_p bigint, nm_usuario_p text, cd_estabelecimento_p text ) FROM PUBLIC;

