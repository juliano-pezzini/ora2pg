-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gravar_log_acesso_pep ( cd_estabelecimento_p bigint, nr_atendimento_p bigint, cd_pessoa_fisica_p text, ei_autorizado_p text, nm_usuario_p text, ds_maquina_p text, ds_maquina_cliente_p text, nr_seq_justificativa_p bigint, ds_justificativa_p text, dt_logon_p timestamp, nr_seq_acesso_p INOUT bigint, cd_perfil_p bigint, cd_funcao_p bigint default null, nr_seq_lib_acesso_p bigint default null, ie_lib_acesso_p text default null, ie_html_p text default 'N') AS $body$
DECLARE


nr_sequencia_w		bigint;
nr_atendimento_w	bigint;
cd_perfil_w		bigint;
qt_reg_w		bigint;
cd_funcao_w		bigint;
ds_titulo_w				justificativa_acesso_pep.ds_justificativa%type;
ds_justificativa_w		ev_evento_paciente.ds_mensagem%type;
nr_seq_evento_depois_w	justificativa_acesso_pep.nr_seq_evento_depois%type := 0;
ds_maquina_cliente_w  pep_acesso.ds_maquina_cliente%type;



BEGIN

cd_perfil_w	:= cd_perfil_p;
if (cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') then
	nr_atendimento_w	:= nr_atendimento_p;

	if (nr_atendimento_p = 0) then
		nr_atendimento_w	:= null;
	end if;
	
	if (coalesce(cd_perfil_w,0)	<= 0) then
		cd_perfil_w	:= null;
	else
		select	count(*)
		into STRICT	qt_reg_w
		from	perfil where		cd_perfil = cd_perfil_w LIMIT 1;
	
		if (qt_reg_w = 0) then
			cd_perfil_w	:= null;
		end if;
	end if;
	
	cd_funcao_w := coalesce(cd_funcao_p,0);
	if (cd_funcao_w = 0) then
		cd_funcao_w := obter_funcao_ativa;
	end if;

	select	nextval('pep_acesso_seq')
	into STRICT	nr_sequencia_w
	;

	insert into pep_acesso(
		nr_sequencia,
		cd_estabelecimento,
		dt_atualizacao,
		nm_usuario,
		cd_pessoa_fisica,
		nr_atendimento,
		ie_autorizado,
		ds_maquina,
		ds_maquina_cliente,
		nr_seq_justificativa,
		ds_justificativa,
		dt_login,
		cd_perfil,
		cd_funcao,
		nr_seq_lib_acesso,
		ie_tipo_lib_acesso )
	Values (	nr_sequencia_w,
		cd_estabelecimento_p,
		clock_timestamp(),
		nm_usuario_p,
		cd_pessoa_fisica_p,
		nr_atendimento_w,
		ei_autorizado_p,
		substr(ds_maquina_p,1,80),
		substr(ds_maquina_cliente_p,1,80),
		nr_seq_justificativa_p,
		substr(ds_justificativa_p,1,255),
		dt_logon_p,
		cd_perfil_w,
		CASE WHEN coalesce(cd_funcao_w,0)=0 THEN null  ELSE cd_funcao_w END ,
		nr_seq_lib_acesso_p,
		ie_lib_acesso_p );

	commit;
    
    if (cd_funcao_w = 2314 and ie_html_p = 'N') then    
		select max(a.ds_maquina_cliente)
        into STRICT  ds_maquina_cliente_w
        from pep_acesso a
        where a.nm_usuario = nm_usuario_p and a.cd_funcao = 281 order by a.dt_atualizacao desc;
        
        update pep_acesso b
        set   b.ds_maquina_cliente = ds_maquina_cliente_w 
        where b.nr_sequencia = nr_sequencia_w;
            
        commit;
	end if;
	
	select 	max(nr_seq_evento_depois),
			max(ds_justificativa)
	into STRICT	nr_seq_evento_depois_w,
			ds_titulo_w
	from	justificativa_acesso_pep
	where	nr_sequencia = nr_seq_justificativa_p;
	
	if (nr_seq_evento_depois_w > 0) then
		ds_justificativa_w := ds_titulo_w || ': ' || ds_justificativa_p;
		CALL gerar_evento_paciente(nr_seq_evento_depois_w, nr_atendimento_w, obter_pessoa_atendimento(nr_atendimento_w,'C'), null, wheb_usuario_pck.get_nm_usuario, null, null, null, ds_justificativa_w);
	end if;

	nr_seq_acesso_p	:= nr_sequencia_w;
end if;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gravar_log_acesso_pep ( cd_estabelecimento_p bigint, nr_atendimento_p bigint, cd_pessoa_fisica_p text, ei_autorizado_p text, nm_usuario_p text, ds_maquina_p text, ds_maquina_cliente_p text, nr_seq_justificativa_p bigint, ds_justificativa_p text, dt_logon_p timestamp, nr_seq_acesso_p INOUT bigint, cd_perfil_p bigint, cd_funcao_p bigint default null, nr_seq_lib_acesso_p bigint default null, ie_lib_acesso_p text default null, ie_html_p text default 'N') FROM PUBLIC;

