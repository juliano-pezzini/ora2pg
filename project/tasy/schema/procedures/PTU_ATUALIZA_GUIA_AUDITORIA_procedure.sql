-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ptu_atualiza_guia_auditoria ( nr_seq_guia_p pls_guia_plano.nr_sequencia%type, nr_seq_resp_aud_p ptu_resposta_auditoria.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) AS $body$
DECLARE


-- Verificar o parametro na funcao OPS - Gestao de Operadoras / Parametros OPS / Intercambio / Intercambio SCS
ie_gerar_senha_interna_w	pls_param_intercambio_scs.ie_gerar_senha_interna%type;
cd_senha_externa_w		ptu_resposta_auditoria.nr_seq_origem%type;

--Campos de atualizacao PLS_GUIA_PLANO
ie_estagio_w 			pls_guia_plano.ie_estagio%type;
ie_status_w  			pls_guia_plano.ie_status%type;
dt_validade_senha_w		pls_guia_plano.dt_valid_senha_ext%type;
cd_senha_w			pls_guia_plano.cd_senha%type;

--Variavel utilizada para a contagem de itens liberados e negados
qt_proc_liberado_w	bigint;
qt_mat_liberado_w	bigint;
qt_proc_negado_w	bigint;
qt_mat_negado_w		bigint;
qt_itens_liberado_w	bigint;
qt_itens_negado_w	bigint;
nr_seq_segurado_w	pls_guia_plano.nr_seq_segurado%type;
dt_solicitacao_w	pls_guia_plano.dt_solicitacao%type;
ie_tipo_guia_w		varchar(2);
dt_valid_senha_w	varchar(20);
nr_seq_regra_senha_w	pls_aut_regra_gera_senha.nr_sequencia%type;
ie_status_item_w	pls_guia_plano_proc.ie_status%type;
qt_autorizada_w		pls_guia_plano_proc.qt_autorizada%type;

ie_controle_estab_w	varchar(2);

C01 CURSOR( nr_seq_resp_aud_pc 	ptu_resposta_auditoria.nr_sequencia%type ) FOR
	SELECT	a.dt_validade,
		a.nr_seq_origem cd_senha_externa,
		a.cd_unimed_beneficiario,
		a.ds_observacao,
		(SELECT	max(b.nr_sequencia)
		from	pls_auditoria b
		where	b.nr_seq_guia	= a.nr_seq_guia
		and	coalesce(b.dt_liberacao::text, '') = '') nr_seq_auditoria,
		(select	max(ie_gerar_senha_interna)
		from	pls_param_intercambio_scs) ie_gera_senha
	from	ptu_resposta_auditoria a
	where	a.nr_sequencia 	= nr_seq_resp_aud_pc;


C02 CURSOR( nr_seq_auditoria_pc	pls_auditoria.nr_sequencia%type ) FOR
	SELECT	nr_sequencia,
		nr_seq_proc_origem,
		nr_seq_mat_origem
	from	pls_auditoria_item
	where	nr_seq_auditoria = nr_seq_auditoria_pc
	and	ie_status	= 'P'
	order by nr_sequencia;

BEGIN

select	pls_obter_se_controle_estab('RE')
into STRICT	ie_controle_estab_w
;
cd_senha_w := null;

--Carregar as informacoes referente a Guia e a Auditoria
for c01_w in C01( nr_seq_resp_aud_p ) loop

	--Obter as quantidades de itens liberados e itens negados
	select (select	count(1)
		from	pls_guia_plano_proc
		where	nr_seq_guia	= nr_seq_guia_p
		and	ie_status	= 'S') qt_proc_liberado,
		(select	count(1)
		from	pls_guia_plano_mat
		where	nr_seq_guia	= nr_seq_guia_p
		and	ie_status	= 'S') qt_mat_liberado,
		(select	count(1)
		from	pls_guia_plano_proc
		where	nr_seq_guia	= nr_seq_guia_p
		and	ie_status	= 'N') qt_proc_negado,
		(select	count(1)
		from	pls_guia_plano_mat
		where	nr_seq_guia	= nr_seq_guia_p
		and	ie_status	= 'N') qt_mat_negado
	into STRICT	qt_proc_liberado_w,
		qt_mat_liberado_w,
		qt_proc_negado_w,
		qt_mat_negado_w
	;

	qt_itens_liberado_w	:= qt_proc_liberado_w + qt_mat_liberado_w;
	qt_itens_negado_w	:= qt_proc_negado_w + qt_mat_negado_w;

	--Valores ESTAGIO  6-Autorizado sem glosa - 10-Autorizado parcialmente - 4-Negado

	--Valores STATUS 1-Autorizado - 3-Negado
	dt_validade_senha_w  := c01_w.dt_validade;
	cd_senha_externa_w	:= c01_w.cd_senha_externa;
	
	if ( qt_itens_liberado_w	> 0) and (qt_itens_negado_w = 0) then
		ie_estagio_w := 6;
		ie_status_w  := '1';	
	elsif ( qt_itens_liberado_w	> 0) and (qt_itens_negado_w > 0) then
		ie_estagio_w := 10;
		ie_status_w  := '1';
	elsif ( qt_itens_liberado_w	= 0) and (qt_itens_negado_w > 0) then
		ie_estagio_w := 4;
		ie_status_w  := '3';
		dt_validade_senha_w := null;
		cd_senha_externa_w := null;
		cd_senha_w := null;
	end if;
	
	select	nr_seq_segurado,
		dt_solicitacao,
		ie_tipo_guia
	into STRICT	nr_seq_segurado_w,
		dt_solicitacao_w,
		ie_tipo_guia_w
	from	pls_guia_plano
	where	nr_sequencia = nr_seq_guia_p;
	
	--Regra utilizada para gerar a senha na Operadora
	if (coalesce(c01_w.ie_gera_senha,'S')	= 'S') then
		SELECT * FROM pls_gerar_validade_senha(	nr_seq_guia_p, nr_seq_segurado_w, 0/*qt_dias_val_senha_p*/
, dt_solicitacao_w, ie_tipo_guia_w, nm_usuario_p, dt_valid_senha_w, cd_senha_w) INTO STRICT dt_valid_senha_w, cd_senha_w;
	end if;

	update	pls_guia_plano
	set	ie_estagio		= coalesce(ie_estagio_w,ie_estagio),
		ie_status		= coalesce(ie_status_w,ie_status),
		dt_autorizacao		= clock_timestamp(),
		dt_valid_senha_ext	= coalesce(dt_validade_senha_w, dt_valid_senha_ext),
		cd_senha_externa	= coalesce(cd_senha_externa_w,cd_senha_externa),
		nm_usuario_liberacao	= nm_usuario_p,
		cd_senha		= coalesce(cd_senha_w,cd_senha),
		dt_validade_senha 	= to_date(dt_valid_senha_w, 'dd/mm/rrrr')
	where	nr_sequencia		= nr_seq_guia_p;

	if (c01_w.nr_seq_auditoria IS NOT NULL AND c01_w.nr_seq_auditoria::text <> '') then

		update	pls_auditoria
		set	dt_liberacao	= clock_timestamp(),
			ie_status	= 'F',
			dt_atualizacao	= clock_timestamp(),
			nm_usuario	= nm_usuario_p
		where	nr_sequencia	= c01_w.nr_seq_auditoria;

		for c02_w in C02( c01_w.nr_seq_auditoria ) loop

			ie_status_item_w 	:= 'S';
			qt_autorizada_w		:= null;
			ie_status_w		:= 'N';

			if (c02_w.nr_seq_proc_origem IS NOT NULL AND c02_w.nr_seq_proc_origem::text <> '') then
				select	ie_status,
					qt_autorizada
				into STRICT	ie_status_item_w,
					qt_autorizada_w
				from	pls_guia_plano_proc
				where	nr_sequencia = c02_w.nr_seq_proc_origem;
			elsif (c02_w.nr_seq_mat_origem IS NOT NULL AND c02_w.nr_seq_mat_origem::text <> '') then
				select	ie_status,
					qt_autorizada
				into STRICT	ie_status_item_w,
					qt_autorizada_w
				from	pls_guia_plano_mat
				where	nr_sequencia = c02_w.nr_seq_mat_origem;
			end if;


			if (ie_status_item_w in ('S','P')) then
				ie_status_w := 'S';
			elsif (ie_status_item_w in ('N','G','C')) then
				ie_status_w := 'N';
			end if;

			update	pls_auditoria_item
			set	ie_status		= CASE WHEN ie_status_w='S' THEN 'A'  ELSE 'N' END ,
				ie_status_solicitacao	= CASE WHEN ie_status_w='S' THEN 'A'  ELSE 'N' END ,
				dt_atualizacao		= clock_timestamp(),
				qt_ajuste		= coalesce(qt_autorizada_w, qt_ajuste),
				nm_usuario		= nm_usuario_p
			where	nr_sequencia 		= c02_w.nr_sequencia;

		end loop;

		commit;

		--Rotina utilizada para gerar envio de SMS, CI ou Email
		CALL pls_gerar_alerta_evento(1, c01_w.nr_seq_auditoria, null, null, nm_usuario_p);
	end if;
	CALL pls_guia_gravar_historico(nr_seq_guia_p,2,substr('Recebida e processada a resposta de auditoria da Unimed '||c01_w.cd_unimed_beneficiario||' com a mensagem: '||chr(10)||c01_w.ds_observacao,1,4000),'',nm_usuario_p);
end loop;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_atualiza_guia_auditoria ( nr_seq_guia_p pls_guia_plano.nr_sequencia%type, nr_seq_resp_aud_p ptu_resposta_auditoria.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) FROM PUBLIC;

