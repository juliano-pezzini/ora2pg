-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE expo_iss_pf_hui (dt_inicio_p timestamp, dt_fim_p timestamp, cd_estabelecimento_p text, nm_usuario_p text) AS $body$
DECLARE

 
nr_sequencia_nota_w		bigint;
tp_registro_w			smallint;
ds_registro_w			varchar(1);
nr_nota_fiscal_w		varchar(255);
cd_serie_nf_w			varchar(10);
nr_nota_final_w			varchar(255);
dt_emisao_w			varchar(10);
ie_situcao_w			varchar(1);
vl_total_nota_w			varchar(12);
ds_servicos_prestados_w		varchar(10);
nr_tomador_w			smallint;
ie_estabelecido_w		varchar(1);
nm_tomador_w			varchar(100);
nr_insc_muni_w			varchar(10);
cd_dig_insc_muni_w		varchar(2);
cd_cgc_cpf_tomador_w		varchar(14);
ie_isento_insc_est_w		varchar(1);
nr_insc_est_w			varchar(15);
ds_cep_w			varchar(8);
ds_tipo_lo_w			varchar(10);
ds_titulo_lo_w			varchar(5);
ds_lo_w				varchar(50);
ds_compl_w			varchar(40);
nr_endereco_w			varchar(10);
ds_bairro_w			varchar(50);
sg_uf_w				varchar(2);
ds_cidade_w			varchar(50);
ds_local_prestacao_w		varchar(1);
ds_texto_w			varchar(2000);

C01 CURSOR FOR 
SELECT	lpad(substr(n.nr_sequencia,1,10),10,'0'), 
	1 	tp_registro, 
	'C'	ds_registro, 
	lpad(substr(n.nr_nota_fiscal,1,10),10,'0') nr_nota_inicial, 
	rpad(substr(n.cd_serie_nf,1,10),10, ' ') cd_serie_nf, 
	lpad(substr(n.nr_nota_fiscal,1,10),10,'0') nr_nota_final, 
	to_char(n.dt_emissao,'dd/mm/yyyy'), 
	CASE WHEN n.ie_situacao=1 THEN '1'  ELSE '2' END , 
	lpad(substr(elimina_caracteres_especiais(campo_mascara_virgula(vl_total_nota)),1,12),12,'0') vl_total_nota, 
	lpad(substr(coalesce(obter_dados_pf_pj_estab(n.cd_estabelecimento,null,cd_cgc_emitente,'ATIV'),'0'),1,10),10,'0') ds_servicos_prestados, -- verificar este com o cliente o que dever√° ser preenchido. 
	1 nr_tomador, 
	'', 
	'', 
	'', 
	'', 
	'', 
	'', 
	'', 
	'', 
	'', 
	'', 
	'', 
	'', 
	'', 
	'', 
	'', 
	'', 
	CASE WHEN o.ie_tipo_natureza='D' THEN  'D'  ELSE 'F' END  ie_natureza_operacao 
from	nota_fiscal n, 
	natureza_operacao o, 
	operacao_nota p 
where	n.cd_natureza_operacao = o.cd_natureza_operacao 
and	p.cd_operacao_nf = n.cd_operacao_nf 
and	obter_se_nota_entrada_saida(n.nr_sequencia) = 'S' 
and	p.ie_servico = 'S' 
and	n.cd_estabelecimento = cd_estabelecimento_p 
and	(n.cd_pessoa_fisica IS NOT NULL AND n.cd_pessoa_fisica::text <> '') 
and	n.dt_emissao between to_date(to_char(dt_inicio_p,'dd/mm/yyyy'),'dd/mm/yyyy') and fim_dia(to_date(to_char(dt_fim_p,'dd/mm/yyyy'),'dd/mm/yyyy'));

 

BEGIN 
open C01;
loop 
fetch C01 into 
	nr_sequencia_nota_w, 
	tp_registro_w, 
	ds_registro_w, 
	nr_nota_fiscal_w, 
	cd_serie_nf_w, 
	nr_nota_final_w, 
	dt_emisao_w, 
	ie_situcao_w, 
	vl_total_nota_w, 
	ds_servicos_prestados_w, 
	nr_tomador_w, 
	ie_estabelecido_w, 
	nm_tomador_w, 
	nr_insc_muni_w, 
	cd_dig_insc_muni_w, 
	cd_cgc_cpf_tomador_w, 
	ie_isento_insc_est_w, 
	nr_insc_est_w, 
	ds_cep_w, 
	ds_tipo_lo_w, 
	ds_titulo_lo_w, 
	ds_lo_w, 
	ds_compl_w, 
	nr_endereco_w, 
	ds_bairro_w, 
	sg_uf_w, 
	ds_cidade_w, 
	ds_local_prestacao_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	ds_texto_w := 	ds_registro_w			||nr_nota_fiscal_w		|| 
			cd_serie_nf_w			||nr_nota_final_w		|| 
			dt_emisao_w			||ie_situcao_w			|| 
			vl_total_nota_w			||ds_servicos_prestados_w	|| 
			nr_tomador_w			||ie_estabelecido_w		|| 
			nm_tomador_w			||nr_insc_muni_w		|| 
			cd_dig_insc_muni_w		||cd_cgc_cpf_tomador_w		|| 
			ie_isento_insc_est_w		||nr_insc_est_w			|| 
			ds_cep_w			||ds_tipo_lo_w			|| 
			ds_titulo_lo_w			||ds_lo_w			|| 
			ds_compl_w			||nr_endereco_w			|| 
			ds_bairro_w			||sg_uf_w			|| 
			ds_cidade_w			||ds_local_prestacao_w;
 
 
	insert 	into 	w_deiss_arquivo(nr_sequencia, 
					nm_usuario, 
					nr_linha, 
					cd_registro, 
					ds_arquivo) 
				values (nextval('w_deiss_arquivo_seq'), 
					nm_usuario_p, 
					nr_sequencia_nota_w, 
					1, 
					ds_texto_w);
 
	end;
end loop;
close C01;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE expo_iss_pf_hui (dt_inicio_p timestamp, dt_fim_p timestamp, cd_estabelecimento_p text, nm_usuario_p text) FROM PUBLIC;

