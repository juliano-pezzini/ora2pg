-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE man_gravar_security_info ( nr_seq_ordem_serv_p bigint, ie_potencial_privacy_p text, ds_potencial_privacy_p text, ie_potencial_security_p text, ds_potencial_security_p text, nr_customer_requirement_p bigint, ie_potential_harmed_p text, ds_potential_harmed_p text, ie_potencial_safety_p text, ds_potencial_safety_p text, nr_seq_reg_tipo_risco_p text, ie_malfunction_p text, ds_malfunction_p text, ie_severity_harm_p text, ie_probability_harm_p text, ie_market_anomaly_p text, nm_user_safety_p text, nm_usuario_p text) AS $body$
DECLARE

	
	ie_security_event_w		varchar(1);
	ie_harmed_event_w 		varchar(1);
	ie_unacceptable_w 		varchar(1);
	ie_determination_risk_w		varchar(1);
	ie_medical_device_w		reg_customer_requirement.ie_clinico%type;	
	
	alterou_info_w 			varchar(1);
	ie_registro_complaint_w		man_ordem_servico.ie_market_anomaly%type;
	ie_plataforma_w 		man_ordem_servico.ie_plataforma%type;
	nr_versao_cliente_w 		man_ordem_servico.nr_versao_cliente_abertura%type;
	ie_assessment_w			man_ordem_servico.ie_complaint%type;
	ie_complaint_w			man_ordem_servico.ie_complaint%type;
	ie_classificacao_w		man_ordem_servico.ie_classificacao%type;
	ie_classificacao_cliente_w	man_ordem_servico.ie_classificacao_cliente%type;
	ie_market_anomaly_w		man_ordem_servico.ie_market_anomaly%type;

	os_duplicadas_w 		varchar(1000);

	ds_mensagem_segu_w 	varchar(4000);
	ds_mensagem_priv_w 	varchar(4000);
	ds_potential_duplic_w 	varchar(2000);
	
	ds_email_destino_w 	varchar(255) 	:= 'security.emr@philips.com';
	new_line_w 		varchar(2) 	:= chr(13) || chr(10);


BEGIN

if (nr_seq_ordem_serv_p IS NOT NULL AND nr_seq_ordem_serv_p::text <> '') then

	select	mos.ie_classificacao,
		mos.ie_classificacao_cliente
	into STRICT	ie_classificacao_w,
		ie_classificacao_cliente_w
	from	man_ordem_servico mos
	where 	mos.nr_sequencia 	= nr_seq_ordem_serv_p;

	select	coalesce(max('N'), 'S')
	into STRICT	ie_registro_complaint_w
	from	man_ordem_servico a
	where	man_obter_se_loc_terceiro(a.nr_seq_localizacao) <> 'S'
	and	a.ie_classificacao = 'E'
	and	a.ie_plataforma = 'H'
	and	a.ie_classificacao_cliente <> 'A'
	and	a.nr_sequencia = nr_seq_ordem_serv_p;

	ie_medical_device_w	:= man_obter_se_md(nr_customer_requirement_p);
	ie_security_event_w	:= case when coalesce(ie_potencial_privacy_p, 'N') = 'S' or coalesce(ie_potencial_security_p, 'N') = 'S' then 'S' else 'N' end;
	ie_harmed_event_w 	:= case when(coalesce(ie_potential_harmed_p, 'N') = 'S' or coalesce(ie_potencial_safety_p, 'N') = 'S' or coalesce(ie_malfunction_p, 'N') = 'S') and ie_medical_device_w = 'S' then 'S' else 'N' end;
	
	ie_determination_risk_w := man_obter_regra_determ_risco(ie_probability_harm_p, ie_severity_harm_p);
	ie_unacceptable_w 	:= case when ie_determination_risk_w = 'I' then 'S' else 'N' end;
	ie_market_anomaly_w	:= case when ie_classificacao_cliente_w = 'A' and ie_classificacao_w = 'E' and ie_market_anomaly_p = 'S' then 'S' else 'N' end;

	ie_assessment_w		:= case	when		ie_security_event_w = 'S'
						or	ie_harmed_event_w = 'S'
						or	ie_unacceptable_w = 'S'
						or	ie_medical_device_w = 'S'
						or	ie_market_anomaly_w = 'S'
						then 'S'
					else 'N'
				end;
	
	select 	coalesce(max('S'), 'N') alterou_info,
		max(ie_plataforma),
		max(nr_versao_cliente_abertura),
		CASE WHEN max(ie_plataforma)='H' THEN  ie_assessment_w  ELSE 'N' END  ie_complaint /* Only HTML5 can have IE_COMPLAINT = 'S' */
	into STRICT 	alterou_info_w,
		ie_plataforma_w,
		nr_versao_cliente_w,
		ie_complaint_w
	from 	man_ordem_servico
	where 	nr_sequencia 	= nr_seq_ordem_serv_p
	and (	'N' 	= CASE WHEN ie_potencial_privacy=ie_potencial_privacy_p THEN  'S'  ELSE 'N' END
		or 	'N' 	= CASE WHEN ds_potencial_privacy=ds_potencial_privacy_p THEN  'S'  ELSE 'N' END 
		or 	'N' 	= CASE WHEN ie_potencial_security=ie_potencial_security_p THEN  'S'  ELSE 'N' END 
		or 	'N' 	= CASE WHEN ds_potencial_security=ds_potencial_security_p THEN  'S'  ELSE 'N' END 
		or 	'N' 	= CASE WHEN nr_customer_requirement=nr_customer_requirement_p THEN  'S'  ELSE 'N' END 
		or 	'N' 	= CASE WHEN ie_potential_harmed=ie_potential_harmed_p THEN  'S'  ELSE 'N' END 
		or 	'N' 	= CASE WHEN ds_potential_harmed=ds_potential_harmed_p THEN  'S'  ELSE 'N' END 
		or 	'N' 	= CASE WHEN ie_potencial_safety=ie_potencial_safety_p THEN  'S'  ELSE 'N' END 
		or 	'N' 	= CASE WHEN ds_potencial_safety=ds_potencial_safety_p THEN  'S'  ELSE 'N' END 
		or 	'N' 	= CASE WHEN ie_malfunction=ie_malfunction_p THEN  'S'  ELSE 'N' END 
		or 	'N' 	= CASE WHEN ds_malfunction=ds_malfunction_p THEN  'S'  ELSE 'N' END 
		or 	'N' 	= CASE WHEN ie_severity_harm=ie_severity_harm_p THEN  'S'  ELSE 'N' END 
		or 	'N' 	= CASE WHEN ie_probability_harm=ie_probability_harm_p THEN  'S'  ELSE 'N' END 
		or 	'N' 	= CASE WHEN ie_market_anomaly=ie_market_anomaly_p THEN  'S'  ELSE 'N' END 
	);
	
	if ( alterou_info_w = 'S' ) then
		os_duplicadas_w 	:= man_obter_os_complaint_duplic(nr_seq_ordem_serv_p, nr_versao_cliente_w, nr_customer_requirement_p);
		
		if (ie_market_anomaly_p = 'N' and ie_security_event_w = 'N' and ie_classificacao_cliente_w = 'A') then
			ie_complaint_w := 'N';
		end if;
		
		if (ie_market_anomaly_p = 'N' and ie_registro_complaint_w = 'N') then
			ie_complaint_w := 'N';
		end if;

		update 	man_ordem_servico
		set 	ie_potencial_privacy 	= ie_potencial_privacy_p,
			ds_potencial_privacy 	= ds_potencial_privacy_p,
			ie_potencial_security 	= ie_potencial_security_p,
			ds_potencial_security 	= ds_potencial_security_p,
			nr_customer_requirement = nr_customer_requirement_p,
			ie_potential_harmed 	= CASE WHEN ie_medical_device_w='S' THEN  ie_potential_harmed_p  ELSE null END ,
			ds_potential_harmed 	= CASE WHEN ie_medical_device_w='S' THEN  ds_potential_harmed_p  ELSE null END ,
			ie_potencial_safety 	= CASE WHEN ie_medical_device_w='S' THEN  ie_potencial_safety_p  ELSE null END ,
			ds_potencial_safety 	= CASE WHEN ie_medical_device_w='S' THEN  ds_potencial_safety_p  ELSE null END ,
			nr_seq_reg_tipo_risco	= nr_seq_reg_tipo_risco_p,
			ie_malfunction 		= CASE WHEN ie_medical_device_w='S' THEN  ie_malfunction_p  ELSE null END ,
			ds_malfunction 		= CASE WHEN ie_medical_device_w='S' THEN  ds_malfunction_p  ELSE null END ,
			ie_severity_harm 		= CASE WHEN ie_medical_device_w='S' THEN  ie_severity_harm_p  ELSE null END ,
			ie_probability_harm 	= CASE WHEN ie_medical_device_w='S' THEN  ie_probability_harm_p  ELSE null END ,
			nm_user_safety 			= nm_user_safety_p,
			dt_release_safety 		= case when (nm_user_safety_p IS NOT NULL AND nm_user_safety_p::text <> '') then clock_timestamp() else null end,
			ie_complaint 			= ie_complaint_w,
			ie_potential_complaint_duplic 	= case when ie_complaint_w = 'S' and (os_duplicadas_w IS NOT NULL AND os_duplicadas_w::text <> '') then 'S' else 'N' end,
			ie_market_anomaly		= ie_market_anomaly_p
		where 	nr_sequencia = nr_seq_ordem_serv_p;
		commit;

		if ((ie_potencial_privacy_p IS NOT NULL AND ie_potencial_privacy_p::text <> '') or (ie_potencial_security_p IS NOT NULL AND ie_potencial_security_p::text <> '')) then
			CALL generate_history_regulatory(nr_seq_ordem_serv_p, nm_usuario_p, 'S', 'N', 'N', 'N'); -- CH: Potential Security or Privacy Event=
		end if;
		
		if (ie_medical_device_w = 'S' and ((ie_potential_harmed_p IS NOT NULL AND ie_potential_harmed_p::text <> '') or (ie_potencial_safety_p IS NOT NULL AND ie_potencial_safety_p::text <> '') or (ie_malfunction_p IS NOT NULL AND ie_malfunction_p::text <> ''))) then
			CALL generate_history_regulatory(nr_seq_ordem_serv_p, nm_usuario_p, 'N', 'S', 'N', 'N'); -- CH: Potential Patient Harmed Event
		end if;
		
		
		
		/* REGISTRO DE HISTORICOS */

		if (ie_plataforma_w = 'H') then
			CALL generate_history_regulatory(nr_seq_ordem_serv_p, nm_usuario_p, 'N', 'N', 'S', 'N'); -- CH: Complaint identified or CH: Not complaint identified
		end if;
		
		if (ie_security_event_w = 'S') then
			CALL generate_history_regulatory(nr_seq_ordem_serv_p, nm_usuario_p, 'N', 'N', 'N', 'S');
		end if;
	end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE man_gravar_security_info ( nr_seq_ordem_serv_p bigint, ie_potencial_privacy_p text, ds_potencial_privacy_p text, ie_potencial_security_p text, ds_potencial_security_p text, nr_customer_requirement_p bigint, ie_potential_harmed_p text, ds_potential_harmed_p text, ie_potencial_safety_p text, ds_potencial_safety_p text, nr_seq_reg_tipo_risco_p text, ie_malfunction_p text, ds_malfunction_p text, ie_severity_harm_p text, ie_probability_harm_p text, ie_market_anomaly_p text, nm_user_safety_p text, nm_usuario_p text) FROM PUBLIC;

