-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_grupo_aud_pos ( nr_seq_conta_p bigint, nr_seq_analise_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE




ds_conta_w			varchar(4000);
ie_tipo_conta_w			varchar(10);
ie_intercambio_w		varchar(10) := 'N';
ie_conta_medica_w		varchar(10) := 'N';
ie_pre_analise_w		varchar(2);
ie_tipo_item_w			varchar(1);
ie_origem_conta_w		varchar(1);
nr_seq_grupo_w			bigint;
nr_seq_fluxo_w			bigint;
ie_existe_grupo_analise_w	bigint;
nr_seq_grupo_auditor_w		bigint;
nr_ie_tipo_item_w		bigint;
nr_seq_ocorrencia_w		bigint;
nr_seq_conta_pos_estab_w	bigint;

C01 CURSOR FOR
	SELECT	a.nr_sequencia
	from	pls_conta_proc b,
		pls_conta_pos_estabelecido a
	where	a.nr_seq_conta_proc	= b.nr_sequencia
	and	b.nr_seq_conta		= nr_seq_conta_p
	and	((a.ie_situacao	= 'A') or (coalesce(a.ie_situacao::text, '') = ''))
	
union

	SELECT	a.nr_sequencia
	from	pls_conta_mat b,
		pls_conta_pos_estabelecido a
	where	a.nr_seq_conta_mat	= b.nr_sequencia
	and	b.nr_seq_conta		= nr_seq_conta_p
	and	((a.ie_situacao	= 'A') or (coalesce(a.ie_situacao::text, '') = ''))
	order by 1;

C02 CURSOR FOR
	SELECT	nr_seq_grupo,
		nr_seq_fluxo,
		nr_seq_ocorrencia
	from	pls_ocorrencia_grupo
	where	nr_seq_ocorrencia in (SELECT	nr_seq_ocorrencia
					from	pls_ocorrencia_benef
					where	nr_seq_conta_pos_estab	= nr_seq_conta_pos_estab_w)
	and	coalesce(ie_conta_medica,'N')	= 'S'
	and	ie_situacao			= 'A'
	and	((ie_conta_medica		= ie_conta_medica_w)
	or (ie_intercambio			= ie_intercambio_w))
	and	((coalesce(ie_tipo_analise::text, '') = '') or (ie_tipo_analise = 'A') or (ie_tipo_analise = 'P'))
	and	coalesce(ie_origem_conta,coalesce(ie_origem_conta_w,'0'))	= coalesce(ie_origem_conta_w,'0');/*Diego OS 310737*/
 /*Robson - para contas de intercambio, fatura 2320*/
BEGIN
begin
select	ie_origem_conta,
	ie_tipo_conta
into STRICT	ie_origem_conta_w,
	ie_tipo_conta_w
from	pls_conta
where	nr_sequencia	= nr_seq_conta_p;
exception
when others then
	ie_origem_conta_w	:= null;
	ie_tipo_conta_w		:= 'O';
end;

if (ie_tipo_conta_w = 'I') then
	ie_intercambio_w	:= 'S';
	ie_conta_medica_w	:= null;
else
	ie_intercambio_w	:= null;
	ie_conta_medica_w	:= 'S';
end if;

open C01;
loop
fetch C01 into	
	nr_seq_conta_pos_estab_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin	
	/*Obtem os grupos das ocorrencias das contas*/

	open C02;
	loop
	fetch C02 into	
		nr_seq_grupo_w,
		nr_seq_fluxo_w,
		nr_seq_ocorrencia_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		if (coalesce(nr_seq_fluxo_w::text, '') = '') then
			select	max(a.nr_seq_fluxo_padrao)
			into STRICT	nr_seq_fluxo_w
			from	pls_grupo_auditor	a
			where	a.nr_sequencia	= nr_seq_grupo_w;
		end if;		
		
		/*Verifica se existe o grupo na analise*/

		select	count(a.nr_sequencia)
		into STRICT	ie_existe_grupo_analise_w
		from	pls_auditoria_conta_grupo a,
			pls_analise_conta	  b
		where	b.nr_sequencia		= a.nr_seq_analise	
		and	a.nr_seq_grupo		= nr_seq_grupo_w
		and	a.nr_seq_analise	= nr_seq_analise_p;		
			
		if (ie_existe_grupo_analise_w > 0) then
			null;
		else	
			select	nextval('pls_auditoria_conta_grupo_seq')
			into STRICT	nr_seq_grupo_auditor_w
			;
			
			/*Se nao existir cria-se o grupo*/
		
			insert into pls_auditoria_conta_grupo(nr_sequencia,
				nr_seq_analise,
				nr_seq_grupo,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_ordem,
				ds_conta)
			values (nr_seq_grupo_auditor_w,
				nr_seq_analise_p,
				nr_seq_grupo_w,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_fluxo_w,
				to_char(nr_seq_conta_p));	
		end if;
		end;
	end loop;
	close C02;
	end;
end loop;
close C01;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_grupo_aud_pos ( nr_seq_conta_p bigint, nr_seq_analise_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

