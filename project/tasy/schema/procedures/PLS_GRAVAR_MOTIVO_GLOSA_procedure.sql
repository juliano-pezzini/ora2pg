-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gravar_motivo_glosa ( cd_motivo_glosa_p text, nr_seq_guia_p bigint, nr_seq_guia_proc_p bigint, nr_seq_guia_mat_p bigint, ds_observacao_p text, nm_usuario_p text, ie_origem_p text, ie_evento_p text, nr_seq_prestador_p bigint, ds_origem_glosa_p text, nr_seq_ocorrencia_benef_p bigint) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Gravar os motivos de glosas gerados para a guia ou para seus itens.
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[X]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção: Performance.
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
nr_seq_motivo_glosa_w		bigint;
qt_glosa_w			integer;
ie_consistir_w			varchar(1);
nr_seq_outorgante_w		bigint;
ie_acao_pls_w			varchar(10);
qt_registro_w			bigint	:= 0;
nr_seq_guia_w			bigint;
nr_seq_segurado_w		bigint;
ie_auditoria_w			varchar(1);
ie_nivel_liberacao_w		bigint;
nr_seq_ocorrencia_glosa_w	bigint;
ie_fechar_conta_w		varchar(1);
nr_seq_nivel_lib_w		bigint;
nr_seq_glosa_guia_w		bigint;
nr_seq_ocorrencia_w		bigint;
ie_finalizar_analise_w		varchar(1);
ie_plano_w			pls_glosa_evento.ie_plano%type;
ie_tipo_processo_w		pls_guia_plano.ie_tipo_processo%type;
ie_evento_w			pls_glosa_evento.ie_evento%type := ie_evento_p;
ie_ocorrencia_w			pls_controle_estab.ie_ocorrencia%type := 'N';
cd_estabelecimento_w		estabelecimento.cd_estabelecimento%type;

C01 CURSOR(	ie_ocorrencia_pc	pls_controle_estab.ie_ocorrencia%type,
		cd_estabelecimento_pc	estabelecimento.cd_estabelecimento%type) FOR
	SELECT	nr_sequencia
	from	pls_ocorrencia
	where	nr_seq_motivo_glosa = nr_seq_motivo_glosa_w
	and	ie_glosa	= 'S'
	and	ie_situacao	= 'A'
	and	coalesce(nr_seq_ocorrencia_w,0) = 0 --Gerar a ocorrêncioa da glosa internsa somente quando esta for disparada mas não quando for  gerada a partir de uma ocorrência normal com glosa vinculada.
	and	ie_ocorrencia_pc = 'N'
	
union all

	SELECT	nr_sequencia
	from	pls_ocorrencia
	where	nr_seq_motivo_glosa = nr_seq_motivo_glosa_w
	and	ie_glosa	= 'S'
	and	ie_situacao	= 'A'
	and	coalesce(nr_seq_ocorrencia_w,0) = 0 --Gerar a ocorrêncioa da glosa internsa somente quando esta for disparada mas não quando for  gerada a partir de uma ocorrência normal com glosa vinculada.
	and	ie_ocorrencia_pc = 'S'
	and	cd_estabelecimento = cd_estabelecimento_pc
	order by 1;


BEGIN
ie_ocorrencia_w := pls_obter_se_controle_estab('GO');

if (nr_seq_guia_p IS NOT NULL AND nr_seq_guia_p::text <> '') then
	begin
		select	ie_tipo_processo,
			cd_estabelecimento
		into STRICT	ie_tipo_processo_w,
			cd_estabelecimento_w
		from	pls_guia_plano
		where	nr_sequencia =	nr_seq_guia_p;
	exception
	when others then
		ie_tipo_processo_w := null;
		cd_estabelecimento_w := wheb_usuario_pck.get_cd_estabelecimento;
	end;
elsif (nr_seq_guia_mat_p IS NOT NULL AND nr_seq_guia_mat_p::text <> '') then
	select	a.nr_sequencia
	into STRICT 	nr_seq_guia_w
	from	pls_guia_plano a,
		pls_guia_plano_mat b
	where b.nr_seq_guia = a.nr_sequencia
	and   b.nr_sequencia = nr_seq_guia_mat_p;
	begin
		select	ie_tipo_processo,
			cd_estabelecimento
		into STRICT	ie_tipo_processo_w,
			cd_estabelecimento_w
		from	pls_guia_plano
		where	nr_sequencia =	nr_seq_guia_w;
	exception
	when others then
			ie_tipo_processo_w := null;
			cd_estabelecimento_w := wheb_usuario_pck.get_cd_estabelecimento;
	end;
elsif (nr_seq_guia_proc_p IS NOT NULL AND nr_seq_guia_proc_p::text <> '') then
	select	a.nr_sequencia
	into STRICT 	nr_seq_guia_w
	from	pls_guia_plano a,
		pls_guia_plano_proc b
	where b.nr_seq_guia = a.nr_sequencia
	and   b.nr_sequencia = nr_seq_guia_proc_p;

	begin
		select	ie_tipo_processo,
			cd_estabelecimento
		into STRICT	ie_tipo_processo_w,
			cd_estabelecimento_w
		from	pls_guia_plano
		where	nr_sequencia =	nr_seq_guia_w;
	exception
	when others then
			ie_tipo_processo_w := null;
			cd_estabelecimento_w := wheb_usuario_pck.get_cd_estabelecimento;
	end;
end if;

if (coalesce(cd_estabelecimento_w::text, '') = '') then
	cd_estabelecimento_w := wheb_usuario_pck.get_cd_estabelecimento;
end if;

if (coalesce(nr_seq_ocorrencia_benef_p,0) > 0) then
	begin
	select	nr_seq_ocorrencia
	into STRICT	nr_seq_ocorrencia_w
	from	pls_ocorrencia_benef
	where 	nr_sequencia	= nr_seq_ocorrencia_benef_p;
	exception
	when others then
		nr_seq_ocorrencia_w	:= null;
	end;
end if;

begin
select	coalesce(nr_sequencia,0),
	ie_acao_pls
into STRICT	nr_seq_motivo_glosa_w,
	ie_acao_pls_w
from	tiss_motivo_glosa
where	cd_motivo_tiss	= cd_motivo_glosa_p
and	coalesce(cd_convenio::text, '') = '';
exception
when others then
	nr_seq_motivo_glosa_w	:= 0;
end;

select 	max(nr_sequencia)
into STRICT	nr_seq_outorgante_w
from	pls_outorgante;


if (ie_tipo_processo_w = 'E') then
	begin
		if (ie_ocorrencia_w = 'N') then
			select	ie_plano
			into STRICT	ie_plano_w
			from	pls_glosa_evento
			where	nr_seq_motivo_glosa = nr_seq_motivo_glosa_w
			and	ie_evento = 'IG';
		else
			select	ie_plano
			into STRICT	ie_plano_w
			from	pls_glosa_evento
			where	nr_seq_motivo_glosa = nr_seq_motivo_glosa_w
			and	ie_evento = 'IG'
			and	cd_estabelecimento = cd_estabelecimento_w;
		end if;
	exception
	when others then
		ie_plano_w	:= null;
	end;

	if (ie_plano_w in ('S','N')) then
		ie_evento_w := 'IG';
	else
		ie_evento_w := 'CG';
	end if;
end if;




if (nr_seq_motivo_glosa_w <> 0) then
	if (ie_acao_pls_w	= 'S') then

		if (ie_ocorrencia_w = 'S') then
			/* Verificar se a glosa está vinculada a uma ocorrência do tipo "Glosa interna" */

			select	count(*)
			into STRICT	qt_registro_w
			from	pls_ocorrencia
			where	nr_seq_motivo_glosa	= nr_seq_motivo_glosa_w
			and	ie_glosa		= 'S'
			and	ie_situacao		= 'A';
		else
			/* Verificar se a glosa está vinculada a uma ocorrência do tipo "Glosa interna" */

			select	count(*)
			into STRICT	qt_registro_w
			from	pls_ocorrencia
			where	nr_seq_motivo_glosa	= nr_seq_motivo_glosa_w
			and	ie_glosa		= 'S'
			and	ie_situacao		= 'A'
			and	cd_estabelecimento 	= cd_estabelecimento_w;
		end if;

		if (qt_registro_w	> 0) then

			ie_consistir_w := pls_obter_se_evento_glosa(nr_seq_motivo_glosa_w, ie_evento_w, cd_estabelecimento_w);

			/*select  nvl(max('S'),'N')
			into	ie_consistir_w
			from	tiss_motivo_glosa 	a,
				pls_glosa_evento 	b
			where	a.nr_sequencia 		= b.nr_seq_motivo_glosa
			and	ie_evento		= ie_evento_w
			and	a.nr_sequencia	 	= nr_seq_motivo_glosa_w
			and	b.ie_plano		= 'S';*/
		end if;
	else
		begin
		if (ie_ocorrencia_w = 'N') then
			select  coalesce(c.ie_consistir,'S')
			into STRICT	ie_consistir_w
			from	tiss_motivo_glosa a,
				pls_glosa_evento b,
				pls_outorgante_glosa d,
				pls_prestador_glosa c
			where	a.nr_sequencia 		= b.nr_seq_motivo_glosa
			and	d.nr_sequencia		= c.nr_seq_outorg_glosa
			and	d.nr_seq_evento_glosa 	= b.nr_sequencia
			and	nr_seq_prestador	= nr_seq_prestador_p
			and	ie_evento		= ie_evento_w
			and	a.nr_sequencia	 	= nr_seq_motivo_glosa_w
			and	b.ie_plano		= 'S';
		else
			select  coalesce(c.ie_consistir,'S')
			into STRICT	ie_consistir_w
			from	tiss_motivo_glosa a,
				pls_glosa_evento b,
				pls_outorgante_glosa d,
				pls_prestador_glosa c
			where	a.nr_sequencia 		= b.nr_seq_motivo_glosa
			and	d.nr_sequencia		= c.nr_seq_outorg_glosa
			and	d.nr_seq_evento_glosa 	= b.nr_sequencia
			and	nr_seq_prestador	= nr_seq_prestador_p
			and	ie_evento		= ie_evento_w
			and	a.nr_sequencia	 	= nr_seq_motivo_glosa_w
			and	b.ie_plano		= 'S'
			and	b.cd_estabelecimento 	= cd_estabelecimento_w;
		end if;
		exception
		when others then
			begin
			if (ie_ocorrencia_w = 'N') then
				select  coalesce(d.ie_consistir,'S')
				into STRICT	ie_consistir_w
				from	tiss_motivo_glosa a,
					pls_glosa_evento b,
					pls_outorgante_glosa d
				where	a.nr_sequencia 		= b.nr_seq_motivo_glosa
				and	d.nr_seq_evento_glosa 	= b.nr_sequencia
				and	ie_evento		= ie_evento_w
				and	nr_seq_outorgante	= nr_seq_outorgante_w
				and	a.nr_sequencia	 	= nr_seq_motivo_glosa_w
				and	b.ie_plano		= 'S';
			else
				select  coalesce(d.ie_consistir,'S')
				into STRICT	ie_consistir_w
				from	tiss_motivo_glosa a,
					pls_glosa_evento b,
					pls_outorgante_glosa d
				where	a.nr_sequencia 		= b.nr_seq_motivo_glosa
				and	d.nr_seq_evento_glosa 	= b.nr_sequencia
				and	ie_evento		= ie_evento_w
				and	nr_seq_outorgante	= nr_seq_outorgante_w
				and	a.nr_sequencia	 	= nr_seq_motivo_glosa_w
				and	b.ie_plano		= 'S'
				and	b.cd_estabelecimento 	= cd_estabelecimento_w;
			end if;
			exception
			when others then
				begin
				if (ie_ocorrencia_w = 'N') then
					select  'S'
					into STRICT	ie_consistir_w
					from	tiss_motivo_glosa 	a,
						pls_glosa_evento 	b
					where	a.nr_sequencia 		= b.nr_seq_motivo_glosa
					and	ie_evento		= ie_evento_w
					and	a.nr_sequencia	 	= nr_seq_motivo_glosa_w
					and	b.ie_plano		= 'S';
				else
					select  'S'
					into STRICT	ie_consistir_w
					from	tiss_motivo_glosa 	a,
						pls_glosa_evento 	b
					where	a.nr_sequencia 		= b.nr_seq_motivo_glosa
					and	ie_evento		= ie_evento_w
					and	a.nr_sequencia	 	= nr_seq_motivo_glosa_w
					and	b.ie_plano		= 'S'
					and	b.cd_estabelecimento 	= cd_estabelecimento_w;
				end if;
				exception
				when others then
					ie_consistir_w 		:= 'N'; /* Felipe - OS 283878 - Mudei para N e coloquei o select acima, pois quando NÃO tem evento estava gerando glosa */
				end;
			end;
		end;
	end if;

	if (coalesce(nr_seq_ocorrencia_w,0) > 0) then
		ie_consistir_w := 'S';
	end if;

	select	count(*)
	into STRICT	qt_glosa_w
	from	pls_guia_glosa
	where	nr_seq_motivo_glosa	= nr_seq_motivo_glosa_w
	and (nr_seq_guia		= nr_seq_guia_p
	or	nr_seq_guia_proc	= nr_seq_guia_proc_p
	or	nr_seq_guia_mat		= nr_seq_guia_mat_p);

	if	(qt_glosa_w = 0 AND ie_consistir_w = 'S') then
		select	nextval('pls_guia_glosa_seq')
		into STRICT	nr_seq_glosa_guia_w
		;

		insert into pls_guia_glosa(nr_sequencia, nm_usuario, dt_atualizacao,
			nr_seq_guia, nr_seq_guia_proc, nr_seq_guia_mat,
			nr_seq_motivo_glosa, ds_observacao, ie_origem,
			ds_origem_glosa, nr_seq_ocorrencia)
		values (nr_seq_glosa_guia_w, nm_usuario_p, clock_timestamp(),
			nr_seq_guia_p, nr_seq_guia_proc_p, nr_seq_guia_mat_p,
			nr_seq_motivo_glosa_w, ds_observacao_p, ie_origem_p,
			ds_origem_glosa_p, nr_seq_ocorrencia_w);

		if (coalesce(nr_seq_ocorrencia_w,0) > 0) then
			begin
			update	pls_ocorrencia_benef
			set	nr_seq_glosa_guia 	= nr_seq_glosa_guia_w
			where	nr_sequencia		= nr_seq_ocorrencia_benef_p;
			exception
			when others then
				ie_consistir_w	:= 'S';
			end;
		end if;

		/*Inserir as ocorrência de glosa interna*/

		open C01(ie_ocorrencia_w, cd_estabelecimento_w);
		loop
		fetch C01 into
			nr_seq_ocorrencia_glosa_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin
			if (coalesce(nr_seq_guia_proc_p,0) <> 0) then
				select	nr_seq_guia
				into STRICT	nr_seq_guia_w
				from	pls_guia_plano_proc
				where	nr_sequencia	= nr_seq_guia_proc_p;
			elsif (coalesce(nr_seq_guia_mat_p,0) <> 0) then
				select	nr_seq_guia
				into STRICT	nr_seq_guia_w
				from	pls_guia_plano_mat
				where	nr_sequencia	= nr_seq_guia_mat_p;
			else
				nr_seq_guia_w	:= nr_seq_guia_p;
			end if;

			begin
			select	nr_seq_segurado
			into STRICT	nr_seq_segurado_w
			from	pls_guia_plano
			where 	nr_sequencia	= nr_seq_guia_w;
			exception
			when others then
				nr_seq_segurado_w := null;
			end;

			select	ie_auditoria_conta,
				nr_seq_nivel_lib,
				coalesce(ie_fechar_conta,'S'),
				coalesce(ie_finalizar_analise,'S')
			into STRICT	ie_auditoria_w,
				nr_seq_nivel_lib_w,
				ie_fechar_conta_w,
				ie_finalizar_analise_w
			from	pls_ocorrencia
			where	nr_sequencia = nr_seq_ocorrencia_glosa_w;

			select	max(nr_nivel_liberacao)
			into STRICT	ie_nivel_liberacao_w
			from	pls_nivel_liberacao
			where	nr_sequencia = nr_seq_nivel_lib_w;

			insert into pls_ocorrencia_benef(nr_sequencia,
				nr_seq_segurado,
				nr_seq_ocorrencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_requisicao,
				nr_seq_conta,
				nr_seq_proc,
				nr_seq_mat,
				nr_seq_regra,
				nr_seq_guia_plano,
				ie_auditoria,
				nr_nivel_liberacao,
				ds_observacao,
				ie_fechar_conta,
				nr_seq_glosa_guia,
				ie_finalizar_analise,
				ie_situacao)
			values (nextval('pls_ocorrencia_benef_seq'),
				nr_seq_segurado_w,
				nr_seq_ocorrencia_glosa_w,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				null,
				null,
				nr_seq_guia_proc_p,
				nr_seq_guia_mat_p,
				null,
				nr_seq_guia_w,
				ie_auditoria_w,
				ie_nivel_liberacao_w,
				'Ocorrência gerada através da glosa interna: ' || cd_motivo_glosa_p,
				ie_fechar_conta_w,
				nr_seq_glosa_guia_w,
				ie_finalizar_analise_w,
				'A');
			end;

			update	pls_guia_glosa
			set	nr_seq_ocorrencia	= nr_seq_ocorrencia_glosa_w
			where	nr_sequencia		= nr_seq_glosa_guia_w;
		end loop;
		close C01;
	end if;
end if;
--Não é para commit em procedures intermediarias
--commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gravar_motivo_glosa ( cd_motivo_glosa_p text, nr_seq_guia_p bigint, nr_seq_guia_proc_p bigint, nr_seq_guia_mat_p bigint, ds_observacao_p text, nm_usuario_p text, ie_origem_p text, ie_evento_p text, nr_seq_prestador_p bigint, ds_origem_glosa_p text, nr_seq_ocorrencia_benef_p bigint) FROM PUBLIC;

