-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_nota_tit_canc_resc ( nr_seq_tit_rec_cobr_p bigint, nr_seq_trans_fin_p bigint, nr_seq_trans_baixa_p bigint, nr_seq_pagador_p bigint, ie_acao_p text, dt_baixa_p timestamp, ie_gerar_movto_p text, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
nr_conta_w			varchar(20);
cd_cgc_w			varchar(14);
cd_pessoa_fisica_w		varchar(10);
ie_digito_conta_w		varchar(2);
vl_devolver_w			double precision;
vl_credito_w			double precision;
nr_titulo_ret_w			double precision;
vl_saldo_nota_w			double precision;
qt_registro_w			bigint;
nr_seq_nota_credito_w		bigint;
nr_titulo_w			bigint;
nr_titulo_pag_w			bigint;
nr_seq_conta_banco_w		bigint;
nr_seq_baixa_w			bigint;
dt_liquidacao_w			timestamp;
dt_remessa_w			timestamp;


BEGIN 
if (nr_seq_tit_rec_cobr_p IS NOT NULL AND nr_seq_tit_rec_cobr_p::text <> '') then 
	select	trunc(coalesce(a.dt_liquidacao,dt_baixa_p),'dd'), 
		b.cd_pessoa_fisica, 
		b.cd_cgc, 
		a.nr_titulo, 
		c.dt_remessa_retorno, 
		a.vl_liquidacao, 
		coalesce(nr_conta,'0'), 
		ie_digito_conta, 
		c.nr_seq_conta_banco 
	into STRICT	dt_liquidacao_w, 
		cd_pessoa_fisica_w, 
		cd_cgc_w, 
		nr_titulo_w, 
		dt_remessa_w, 
		vl_credito_w, 
		nr_conta_w, 
		ie_digito_conta_w, 
		nr_seq_conta_banco_w 
	from	cobranca_escritural c, 
		titulo_receber b, 
		titulo_receber_cobr a 
	where	a.nr_titulo		= b.nr_titulo 
	and	a.nr_seq_cobranca	= c.nr_sequencia 
	and	a.nr_sequencia		= nr_seq_tit_rec_cobr_p;
 
	/* Se a baixa for de estorno, verificar se já tem nota de crédito */
 
	if (ie_acao_p = 'E') then 
		select	max(nr_sequencia) 
		into STRICT	nr_seq_nota_credito_w 
		from	nota_credito a 
		where	a.nr_seq_tit_rec_cobr	= nr_seq_tit_rec_cobr_p 
		and	a.ie_situacao		<> 'C';
		 
		if (nr_seq_nota_credito_w IS NOT NULL AND nr_seq_nota_credito_w::text <> '') then 
			select	vl_saldo 
			into STRICT	vl_saldo_nota_w 
			from	nota_credito a 
			where	a.nr_sequencia	= nr_seq_nota_credito_w;
 
			insert into nota_credito_baixa(nr_sequencia, 
				nm_usuario, 
				dt_atualizacao, 
				nm_usuario_nrec, 
				dt_atualizacao_nrec, 
				nr_seq_nota_credito, 
				dt_baixa, 
				vl_baixa, 
				ie_cancelamento) 
			values (nextval('nota_credito_baixa_seq'), 
				nm_usuario_p, 
				clock_timestamp(), 
				nm_usuario_p, 
				clock_timestamp(), 
				nr_seq_nota_credito_w, 
				coalesce(dt_baixa_p,dt_liquidacao_w), 
				vl_saldo_nota_w, 
				'S');
 
			CALL atualizar_saldo_nota_credito(nr_seq_nota_credito_w,nm_usuario_p);
			 
			select	max(nr_titulo) 
			into STRICT	nr_titulo_pag_w 
			from	titulo_pagar 
			where	nr_seq_nota_credito	= nr_seq_nota_credito_w;
			 
			CALL cancelar_titulo_pagar(nr_titulo_pag_w, nm_usuario_p, clock_timestamp());
			 
			if (ie_gerar_movto_p = 'S') then -- Diether - OS 309605 - só gerar movimentação caso seja movimentação por cada título da cobrança 
				CALL pls_gerar_movto_bco_baixa_resc(	nr_seq_tit_rec_cobr_p, 
								nr_titulo_w, 
								nr_seq_trans_fin_p, 
								ie_acao_p, 
								dt_baixa_p, 
								cd_estabelecimento_p, 
								nm_usuario_p);
			end if;
		end if;
	else 
		vl_devolver_w	:= abs(vl_credito_w);
 
		select	max(nr_sequencia) 
		into STRICT	nr_seq_baixa_w 
		from	titulo_receber_liq 
		where	nr_titulo	= nr_titulo_w;
		 
		select	count(*) 
		into STRICT	qt_registro_w 
		from	nota_credito a 
		where	a.nr_seq_tit_rec_cobr	= nr_seq_tit_rec_cobr_p 
		and	a.ie_situacao		<> 'C';
 
		if (vl_devolver_w > 0) and (qt_registro_w = 0) then 
			/* Gerar nota de crédito */
 
			select	nextval('nota_credito_seq') 
			into STRICT	nr_seq_nota_credito_w 
			;
			 
			insert into nota_credito(nr_sequencia, 
				cd_estabelecimento, 
				dt_atualizacao, 
				nm_usuario, 
				dt_atualizacao_nrec, 
				nm_usuario_nrec, 
				vl_nota_credito, 
				cd_pessoa_fisica, 
				cd_cgc, 
				dt_nota_credito, 
				dt_vencimento, 
				--cd_moeda, 
				tx_juros, 
				tx_multa, 
				cd_tipo_taxa_juro, 
				cd_tipo_taxa_multa, 
				ie_origem, 
				vl_saldo, 
				nr_lote_contabil, 
				ds_observacao, 
				ie_situacao, 
				nr_seq_tit_rec_cobr, 
				nr_seq_trans_fin_contab, 
				nr_seq_conta_banco, 
				nr_seq_trans_baixa_tit_pagar) 
			values (nr_seq_nota_credito_w, 
				cd_estabelecimento_p, 
				clock_timestamp(), 
				nm_usuario_p, 
				clock_timestamp(), 
				nm_usuario_p, 
				vl_devolver_w, 
				cd_pessoa_fisica_w, 
				cd_cgc_w, 
				dt_liquidacao_w, 
				null, 
				--cd_moeda_cp_w, 
				null, 
				null, 
				null, 
				null, 
				'CE', 
				vl_devolver_w, 
				null, 
				'Nota de crédito gerada devido a pagamento de título de mensalidade cancelada/contrato rescindido', 
				'A', 
				nr_seq_tit_rec_cobr_p, 
				nr_seq_trans_fin_p, 
				nr_seq_conta_banco_w, 
				nr_seq_trans_baixa_p);
			 
			nr_titulo_ret_w := gerar_titulo_pagar_nc(nr_seq_nota_credito_w, nm_usuario_p, vl_devolver_w, nr_titulo_ret_w);
			 
			CALL pls_gerar_hist_fin_pagador(nr_seq_pagador_p,'FF','Cliente pagou o título '|| nr_titulo_w || ' no dia ' || dt_baixa_p || 
									' no valor de R$'||substr(campo_mascara_virgula(vl_devolver_w),1,20) || 
									' na conta ' || nr_conta_w || '-' || ie_digito_conta_w || 
									', porém como já estava liquidado/cancelado foi lançado com a trasação ' || 
									nr_seq_trans_fin_p || '-' || obter_desc_trans_financ(nr_seq_trans_fin_p) 
									,nm_usuario_p,cd_estabelecimento_p);
									 
									 
			if (nr_seq_baixa_w IS NOT NULL AND nr_seq_baixa_w::text <> '') then 
				update	titulo_receber_liq 
				set	vl_rec_maior	 = vl_devolver_w, 
					ds_observacao	= 'Gerada a nota de crédito Nº ' || nr_seq_nota_credito_w || ' para o pagamento a maior.' 
				where	nr_sequencia	= nr_seq_baixa_w 
				and	nr_titulo	= nr_titulo_w;
			end if;
			if (ie_gerar_movto_p = 'S') then -- Diether - OS 309605 - só gerar movimentação caso seja movimentação por cada título da cobrança 
				CALL pls_gerar_movto_bco_baixa_resc(	nr_seq_tit_rec_cobr_p, 
								nr_titulo_w, 
								nr_seq_trans_fin_p, 
								ie_acao_p, 
								dt_baixa_p, 
								cd_estabelecimento_p, 
								nm_usuario_p);
			end if;
		end if; /* Tem valor a devolver */
	end if; /* Estorno */
end if;
/* Não pode ter commit */
 
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_nota_tit_canc_resc ( nr_seq_tit_rec_cobr_p bigint, nr_seq_trans_fin_p bigint, nr_seq_trans_baixa_p bigint, nr_seq_pagador_p bigint, ie_acao_p text, dt_baixa_p timestamp, ie_gerar_movto_p text, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

