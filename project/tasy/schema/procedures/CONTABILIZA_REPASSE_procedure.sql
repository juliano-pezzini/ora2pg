-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE contabiliza_repasse ( nr_lote_contabil_p bigint, nm_usuario_p text, ie_exclusao_p text, ds_retorno_p INOUT text) AS $body$
DECLARE


nm_atrib_agrupador_w            varchar(100);
cd_conta_contabil_w             varchar(20);
cd_estabelecimento_w            smallint;
nr_documento_w                  varchar(255);
vl_transacao_w                  double precision;
vl_transacao_ww                 double precision;
cd_pessoa_fisica_w              varchar(10);
cd_cgc_w                        varchar(14);
nr_seq_trans_fin_w              bigint;
nr_seq_agrupamento_w            w_movimento_contabil.nr_seq_agrupamento%type;
nm_atributo_w                   varchar(50);
dt_contabil_w                   timestamp;
vl_retorno_w                    double precision;
vl_receita_w                    material_atend_paciente.vl_material%type;
ds_benefic_w                    varchar(80);
nr_atendimento_w                procedimento_paciente.nr_atendimento%type;
nr_sequencia_w                  bigint;
ie_proc_mat_w                   varchar(255);
cd_regra_w                      bigint;
cd_setor_w                      bigint;
dt_conta_protocolo_w            timestamp;
cd_centro_custo_w               integer;
ds_conteudo_w                   varchar(4000) := '';
ie_compl_hist_w                 varchar(3);
cd_tipo_lote_contabil_w         bigint;
cd_historico_w                  bigint;
nr_documento_ww                 varchar(255);
nm_beneficiario_w               varchar(80);
cd_convenio_w                   integer;
ds_convenio_w                   varchar(255);
ds_nota_fiscal_w                varchar(255);
ds_mesano_referencia_w          varchar(255);
ds_titulo_w                     varchar(255);
ds_mesano_referencia_abrev_w    varchar(255);
nm_medico_executor_w            varchar(255);
cd_medico_executor_w            varchar(255);
ds_responsavel_credito_w        varchar(255);
ds_setor_atendimento_w          varchar(255);
ds_interno_conta_w              varchar(255);
ie_responsavel_credito_w        varchar(255);
nr_interno_conta_est_w          bigint;
nr_interno_conta_w              bigint;
nr_atend_estorno_w              bigint;
nr_repasse_terceiro_w           bigint;
nr_seq_trans_fin_rep_maior_w    bigint;
nr_seq_mat_proc_w               bigint;
nr_seq_proc_pacote_w            bigint;
ds_status_repasse_w             varchar(100);
ie_status_w                     varchar(1);
ds_titulos_prot_w               varchar(200);
ds_titulos_conta_w              varchar(200);
nm_pessoa_nota_fiscal_w         varchar(200);
nr_seq_protocolo_w              bigint;
nr_seq_nota_fiscal_w            bigint;
ie_tipo_convenio_w              convenio.ie_tipo_convenio%type;
nr_seq_terc_ant_w               bigint;
cd_cgc_ant_w                    varchar(14);
cd_pessoa_fisica_ant_w          varchar(10);
nm_estabelecimento_w            varchar(255);
/*Variaveis para Repasse a maior*/

vl_total_receita_w              double precision;
vl_total_repasse_w              double precision;
vl_diferenca_w                  double precision;
qt_registro_w                   bigint;
ie_contab_diferenca_w           varchar(1)     := 'N';
nm_beneficiario_ant_w           varchar(180);
nr_lote_contabil_ant_w          bigint;
cd_convenio_sus_w               bigint;
ie_contab_sus_receita_w         varchar(1);
ie_contab_rep_estorno_mes_w     varchar(1);
dt_inicial_w                    timestamp;
dt_final_w                      timestamp;
nr_seq_cont_w                   bigint;
ds_estorno_w                    varchar(10);
ie_status_ww                    varchar(1);
ie_origem_documento_w           movimento_contabil.ie_origem_documento%type := null;
nr_documento_www                movimento_contabil.nr_documento%type := null;
/* Cursor para ler Movimento a Ser contabilizado */

nr_nfe_conta_protocolo_w        varchar(255);
ie_regra_w                      varchar(255);
ds_atributos_w                  varchar(4000);
ie_agrup_lote_rec_w             parametro_faturamento.ie_agrup_lote_rec%type;
nm_agrup_rec_w                  varchar(255);
vl_plus_repasse_w               procedimento_repasse.vl_repasse%type;
ie_tipo_w                       varchar(10);
nm_tabela_w                     varchar(100);
nr_seq_info_ctb_w               bigint      := 69;
nr_seq_tab_orig_w               bigint;
nr_seq_lote_w                   lote_protocolo.nr_sequencia%type;
nr_nota_fiscal_w                nota_fiscal.nr_nota_fiscal%type;
nr_seq_terceiro_w               terceiro.nr_sequencia%type;
ie_cancelamento_w               conta_paciente.ie_cancelamento%type;
ie_contab_repasse_prov_w        parametro_repasse.ie_contab_repasse_prov%type;
ie_data_base_contab_w           parametro_repasse.ie_data_base_contab%type;
ds_mes_ano_w                    bigint;
ie_somente_item_repasse_w       varchar(1);
ds_observacao_w                 varchar(4000);
qt_insert_w                     integer := 0;

c010 CURSOR FOR
        SELECT  'P',
                d.nr_sequencia,
                c.nr_sequencia nr_seq_proc,
                c.nr_seq_proc_pacote,
                c.nr_atendimento,
                d.vl_repasse,
                c.vl_procedimento,
                e.cd_pessoa_fisica,
                e.cd_cgc,
                d.nr_seq_trans_fin,
                'VL_REPASSE',
                d.cd_regra,
                c.cd_setor_atendimento,
                null,
                0,
                b.cd_convenio_parametro,
                substr(obter_nota_conta_protocolo(b.nr_seq_protocolo, b.nr_interno_conta),1,255),
                d.nr_interno_conta_est,
                (null)::numeric  nr_atend_estorno,
                d.nr_repasse_terceiro,
                b.nr_interno_conta,
                d.nr_seq_trans_fin_rep_maior,
                c.cd_medico_executor,
                c.ie_responsavel_credito,
                d.ie_status,
                null nr_seq_terc_ant,
                null nr_lote_contabil_ant,
                'PROCEDIMENTO_REPASSE' nm_tabela,
                'N' ie_tipo,
                e.nr_sequencia
        from    terceiro e,
                procedimento_repasse d,
                procedimento_paciente c,
                conta_paciente b
        where   b.nr_lote_repasse               = nr_lote_contabil_p
        and     b.nr_interno_conta              = c.nr_interno_conta
        and     c.nr_sequencia          = d.nr_seq_procedimento
        and     d.nr_seq_terceiro               = e.nr_sequencia
        and     e.cd_estabelecimento    = cd_estabelecimento_w
        and     coalesce(d.nr_interno_conta_est::text, '') = ''
        and     ie_data_base_contab_w = 'C'
        and     ie_somente_item_repasse_w in ('N','X')

union all

        SELECT  'M',
                d.nr_sequencia,
                c.nr_sequencia nr_seq_proc,
                c.nr_seq_proc_pacote,
                c.nr_atendimento,
                d.vl_repasse,
                c.vl_material,
                e.cd_pessoa_fisica,
                e.cd_cgc,
                d.nr_seq_trans_fin,
                'VL_REPASSE',
                d.cd_regra,
                c.cd_setor_atendimento,
                null,
                0,
                b.cd_convenio_parametro,
                substr(obter_nota_conta_protocolo(b.nr_seq_protocolo, b.nr_interno_conta),1,255),
                d.nr_interno_conta_est,
                (null)::numeric  nr_atend_estorno,
                d.nr_repasse_terceiro,
                b.nr_interno_conta,
                d.nr_seq_trans_fin_rep_maior,
                '' cd_medico_executor,
                c.ie_responsavel_credito,
                d.ie_status,
                null nr_seq_terc_ant,
                null nr_lote_contabil_ant,
                'MATERIAL_REPASSE' nm_tabela,
                'N' ie_tipo,
                e.nr_sequencia
        from    terceiro e,
                material_repasse d,
                material_atend_paciente c,
                conta_paciente b
        where   b.nr_lote_repasse               = nr_lote_contabil_p
        and     b.nr_interno_conta              = c.nr_interno_conta
        and     c.nr_sequencia          = d.nr_seq_material
        and     d.nr_seq_terceiro               = e.nr_sequencia
        and     e.cd_estabelecimento    = cd_estabelecimento_w
        and     coalesce(d.nr_interno_conta_est::text, '') = ''
        and ie_data_base_contab_w = 'C'
        and     ie_somente_item_repasse_w in ('N','X')
        
union all

        select  'I',
                d.nr_sequencia,
                null nr_seq_proc,
                null nr_seq_proc_pacote,
                d.nr_atendimento nr_atendimento,
                d.vl_repasse,
                0,
                e.cd_pessoa_fisica,
                e.cd_cgc,
                d.nr_seq_trans_fin_prov,
                'VL_REPASSE',
                0 cd_regra,
                0 cd_setor_atendimento,
                cd_conta_contabil_prov,
                cd_centro_custo_prov,
                0,
                '',
                (null)::numeric ,
                (null)::numeric  nr_atend_estorno,
                d.nr_repasse_terceiro,
                d.nr_interno_conta,
                null,
                '' cd_medico_executor,
                '' ie_responsavel_credito,
                '',
                null nr_seq_terc_ant,
                null nr_lote_contabil_ant,
                'REPASSE_TERCEIRO_ITEM' nm_tabela,
                'N' ie_tipo,
                e.nr_sequencia
        from    terceiro e,
                repasse_terceiro_item d
        where   d.nr_seq_terceiro               = e.nr_sequencia
        and     coalesce(dt_contabil, dt_lancamento) between dt_inicial_w and dt_final_w
        and     e.cd_estabelecimento    = cd_estabelecimento_w
        and     (dt_lancamento IS NOT NULL AND dt_lancamento::text <> '')
        and     (nr_seq_trans_fin_prov IS NOT NULL AND nr_seq_trans_fin_prov::text <> '')
        and     ie_exclusao_p           = 'N'
        and ie_data_base_contab_w = 'C'
        and     ie_somente_item_repasse_w in ('S','X')
        and     coalesce(d.nr_lote_contabil_prov,0) = 0 /* Matheus OS 122779 20/02/2009 Coloquei para nao duplicar se gerado mais de um lote por mes*/
        
union all
       /* Edgar 24/03/2008, OS 88710, inclui os 2 unions abaixo para contabilizar repasse de estorno*/
        select  'P',
                d.nr_sequencia,
                c.nr_sequencia nr_seq_proc,
                c.nr_seq_proc_pacote,
                c.nr_atendimento,
                d.vl_repasse,
                c.vl_procedimento,
                e.cd_pessoa_fisica,
                e.cd_cgc,
                d.nr_seq_trans_fin,
                'VL_REPASSE',
                d.cd_regra,
                c.cd_setor_atendimento,
                null,
                0,
                b.cd_convenio_parametro,
                substr(obter_nota_conta_protocolo(b.nr_seq_protocolo, b.nr_interno_conta),1,255),
                d.nr_interno_conta_est,
                b.nr_atendimento,
                d.nr_repasse_terceiro,
                b.nr_interno_conta,
                d.nr_seq_trans_fin_rep_maior,
                c.cd_medico_executor,
                c.ie_responsavel_credito,
                d.ie_status,
                null nr_seq_terc_ant,
                null nr_lote_contabil_ant,
                'PROCEDIMENTO_REPASSE' nm_tabela,
                'E' ie_tipo,
                e.nr_sequencia
        from    terceiro e,
                procedimento_repasse d,
                procedimento_paciente c,
                conta_paciente b
        where   b.nr_lote_repasse               = nr_lote_contabil_p
        and     b.nr_interno_conta              = d.nr_interno_conta_est        /* Contablizar atraves da conta paciente de estorno*/
        and     c.nr_sequencia          = d.nr_seq_procedimento
        and     d.nr_seq_terceiro               = e.nr_sequencia
        and     e.cd_estabelecimento    = cd_estabelecimento_w
        and     coalesce(d.nr_lote_contabil, 0)      = 0
        and ie_data_base_contab_w = 'C'
        and     ie_somente_item_repasse_w in ('N','X')
        
union all

        select  'M',
                d.nr_sequencia,
                c.nr_sequencia nr_seq_proc,
                c.nr_seq_proc_pacote,
                c.nr_atendimento,
                d.vl_repasse,
                c.vl_material,
                e.cd_pessoa_fisica,
                e.cd_cgc,
                d.nr_seq_trans_fin,
                'VL_REPASSE',
                d.cd_regra,
                c.cd_setor_atendimento,
                null,
                0,
                b.cd_convenio_parametro,
                substr(obter_nota_conta_protocolo(b.nr_seq_protocolo, b.nr_interno_conta),1,255),
                d.nr_interno_conta_est,
                b.nr_atendimento,
                d.nr_repasse_terceiro,
                b.nr_interno_conta,
                d.nr_seq_trans_fin_rep_maior,
                '' cd_medico_executor,
                c.ie_responsavel_credito,
                d.ie_status,
                null nr_seq_terc_ant,
                null nr_lote_contabil_ant,
                'MATERIAL_REPASSE' nm_tabela,
                'E' ie_tipo,
                e.nr_sequencia
        from    terceiro e,
                material_repasse d,
                material_atend_paciente c,
                conta_paciente b
        where   b.nr_lote_repasse               = nr_lote_contabil_p
        and     b.nr_interno_conta              = d.nr_interno_conta_est        /* Contablizar atraves da conta paciente de estorno*/
        and     c.nr_sequencia          = d.nr_seq_material
        and     d.nr_seq_terceiro               = e.nr_sequencia
        and     e.cd_estabelecimento    = cd_estabelecimento_w
        and     coalesce(d.nr_lote_contabil, 0)      = 0
        and ie_data_base_contab_w = 'C'
        and     ie_somente_item_repasse_w in ('N','X')
        
union

        select  'TM',
                a.nr_sequencia,
                c.nr_sequencia nr_seq_proc,
                c.nr_seq_proc_pacote,
                c.nr_atendimento,
                a.vl_repasse,
                c.vl_material,
                e.cd_pessoa_fisica,
                e.cd_cgc,
                a.nr_seq_trans_financ,
                'VL_TROCA_TERC_MAT',
                d.cd_regra,
                c.cd_setor_atendimento,
                null,
                0,
                b.cd_convenio_parametro,
                substr(obter_nota_conta_protocolo(b.nr_seq_protocolo, b.nr_interno_conta),1,255),
                d.nr_interno_conta_est,
                b.nr_atendimento,
                d.nr_repasse_terceiro,
                b.nr_interno_conta,
                d.nr_seq_trans_fin_rep_maior,
                '' cd_medico_executor,
                c.ie_responsavel_credito,
                '',
                a.nr_seq_terc_ant,
                CASE WHEN d.nr_lote_contabil=0 THEN null  ELSE d.nr_lote_contabil END  nr_lote_contabil_ant,
                'PROC_MAT_REPASSE_TERC' nm_tabela,
                'N' ie_tipo,
                e.nr_sequencia
        from    terceiro e,
                conta_paciente b,
                material_atend_paciente c,
                material_repasse d,
                proc_mat_repasse_terc a
        where   a.nr_lote_contabil              = nr_lote_contabil_p
        and     a.nr_seq_mat_repasse            = d.nr_sequencia
        and     d.nr_seq_material               = c.nr_sequencia
        and     c.nr_interno_conta              = b.nr_interno_conta
        and     d.nr_seq_terceiro               = e.nr_sequencia
        and     ie_somente_item_repasse_w in ('N','X')
        
union

        select  'TP',
                a.nr_sequencia,
                c.nr_sequencia nr_seq_proc,
                c.nr_seq_proc_pacote,
                c.nr_atendimento,
                a.vl_repasse,
                c.vl_procedimento,
                e.cd_pessoa_fisica,
                e.cd_cgc,
                a.nr_seq_trans_financ,
                'VL_TROCA_TERC_PROC',
                d.cd_regra,
                c.cd_setor_atendimento,
                null,
                0,
                b.cd_convenio_parametro,
                substr(obter_nota_conta_protocolo(b.nr_seq_protocolo, b.nr_interno_conta),1,255),
                d.nr_interno_conta_est,
                b.nr_atendimento,
                d.nr_repasse_terceiro,
                b.nr_interno_conta,
                d.nr_seq_trans_fin_rep_maior,
                '' cd_medico_executor,
                c.ie_responsavel_credito,
                '',
                a.nr_seq_terc_ant,
                CASE WHEN d.nr_lote_contabil=0 THEN null  ELSE d.nr_lote_contabil END  nr_lote_contabil_ant,
                'PROC_MAT_REPASSE_TERC' nm_tabela,
                'N' ie_tipo,
                e.nr_sequencia
        from    terceiro e,
                conta_paciente b,
                procedimento_paciente c,
                procedimento_repasse d,
                proc_mat_repasse_terc a
        where   a.nr_lote_contabil              = nr_lote_contabil_p
        and     a.nr_seq_proc_repasse           = d.nr_sequencia
        and     d.nr_seq_procedimento           = c.nr_sequencia
        and     c.nr_interno_conta              = b.nr_interno_conta
        and     d.nr_seq_terceiro               = e.nr_sequencia
        and     ie_somente_item_repasse_w in ('N','X')
        
union all
       /*Diferencas de repasse*/
        select  'P',
                d.nr_sequencia,
                c.nr_sequencia nr_seq_proc,
                c.nr_seq_proc_pacote,
                c.nr_atendimento,
                (d.vl_repasse - c.vl_procedimento) vl_transacao,
                c.vl_procedimento,
                e.cd_pessoa_fisica,
                e.cd_cgc,
                d.nr_seq_trans_fin,
                'VL_REPASSE_DIF',
                d.cd_regra,
                c.cd_setor_atendimento,
                null,
                0,
                b.cd_convenio_parametro,
                substr(obter_nota_conta_protocolo(b.nr_seq_protocolo, b.nr_interno_conta),1,255),
                d.nr_interno_conta_est,
                (null)::numeric  nr_atend_estorno,
                d.nr_repasse_terceiro,
                b.nr_interno_conta,
                d.nr_seq_trans_fin_rep_maior,
                c.cd_medico_executor,
                c.ie_responsavel_credito,
                d.ie_status,
                null nr_seq_terc_ant,
                null nr_lote_contabil_ant,
                'PROCEDIMENTO_REPASSE' nm_tabela,
                'N' ie_tipo,
                e.nr_sequencia
        from    terceiro e,
                procedimento_repasse d,
                procedimento_paciente c,
                conta_paciente b
        where   b.nr_lote_repasse               = nr_lote_contabil_p
        and     b.nr_interno_conta              = c.nr_interno_conta
        and     c.nr_sequencia          = d.nr_seq_procedimento
        and     d.nr_seq_terceiro               = e.nr_sequencia
        and     e.cd_estabelecimento    = cd_estabelecimento_w
        and     coalesce(d.nr_interno_conta_est::text, '') = ''
        and     coalesce(c.vl_repasse_calc,0) > c.vl_procedimento
        and     (d.nr_seq_trans_fin_rep_maior IS NOT NULL AND d.nr_seq_trans_fin_rep_maior::text <> '')
        and     ie_somente_item_repasse_w in ('N','X')
        
union all

        select  'P',
                d.nr_sequencia,
                c.nr_sequencia nr_seq_proc,
                c.nr_seq_proc_pacote,
                c.nr_atendimento,
                (abs(d.vl_repasse) - abs(c.vl_procedimento)) vl_transacao,
                c.vl_procedimento,
                e.cd_pessoa_fisica,
                e.cd_cgc,
                d.nr_seq_trans_fin,
                'VL_REPASSE_DIF',
                d.cd_regra,
                c.cd_setor_atendimento,
                null,
                0,
                b.cd_convenio_parametro,
                substr(obter_nota_conta_protocolo(b.nr_seq_protocolo, b.nr_interno_conta),1,255),
                d.nr_interno_conta_est,
                b.nr_atendimento,
                d.nr_repasse_terceiro,
                b.nr_interno_conta,
                d.nr_seq_trans_fin_rep_maior,
                c.cd_medico_executor,
                c.ie_responsavel_credito,
                d.ie_status,
                null nr_seq_terc_ant,
                null nr_lote_contabil_ant,
                'PROCEDIMENTO_REPASSE' nm_tabela,
                'N' ie_tipo,
                e.nr_sequencia
        from    terceiro e,
                procedimento_repasse d,
                procedimento_paciente c,
                conta_paciente b
        where   b.nr_lote_repasse               = nr_lote_contabil_p
        and     b.nr_interno_conta              = d.nr_interno_conta_est        /* Contablizar atraves da conta paciente de estorno*/
        and     c.nr_sequencia          = d.nr_seq_procedimento
        and     d.nr_seq_terceiro               = e.nr_sequencia
        and     e.cd_estabelecimento    = cd_estabelecimento_w
        and     coalesce(d.nr_lote_contabil, 0)      = 0
        and     coalesce(abs(c.vl_repasse_calc),0) > abs(c.vl_procedimento)
        and     (d.nr_seq_trans_fin_rep_maior IS NOT NULL AND d.nr_seq_trans_fin_rep_maior::text <> '')
        and     ie_somente_item_repasse_w in ('N','X')
        
union all

        select  'P',
                d.nr_sequencia,
                c.nr_sequencia nr_seq_proc,
                c.nr_seq_proc_pacote,
                c.nr_atendimento,
                (d.vl_repasse - (d.vl_repasse - c.vl_procedimento)) vl_transacao,
                c.vl_procedimento,
                e.cd_pessoa_fisica,
                e.cd_cgc,
                d.nr_seq_trans_fin,
                'VL_REPASSE_LIQ',
                d.cd_regra,
                c.cd_setor_atendimento,
                null,
                0,
                b.cd_convenio_parametro,
                substr(obter_nota_conta_protocolo(b.nr_seq_protocolo, b.nr_interno_conta),1,255),
                d.nr_interno_conta_est,
                (null)::numeric  nr_atend_estorno,
                d.nr_repasse_terceiro,
                b.nr_interno_conta,
                d.nr_seq_trans_fin_rep_maior,
                c.cd_medico_executor,
                c.ie_responsavel_credito,
                d.ie_status,
                null nr_seq_terc_ant,
                null nr_lote_contabil_ant,
                'PROCEDIMENTO_REPASSE' nm_tabela,
                'N' ie_tipo,
                e.nr_sequencia
        from    terceiro e,
                procedimento_repasse d,
                procedimento_paciente c,
                conta_paciente b
        where   b.nr_lote_repasse               = nr_lote_contabil_p
        and     b.nr_interno_conta              = c.nr_interno_conta
        and     c.nr_sequencia          = d.nr_seq_procedimento
        and     d.nr_seq_terceiro               = e.nr_sequencia
        and     e.cd_estabelecimento    = cd_estabelecimento_w
        and     coalesce(d.nr_interno_conta_est::text, '') = ''
        and     coalesce(c.vl_repasse_calc,0) > c.vl_procedimento
        and     (d.nr_seq_trans_fin_rep_maior IS NOT NULL AND d.nr_seq_trans_fin_rep_maior::text <> '')
        and     ie_somente_item_repasse_w in ('N','X')
        
union all

        select  'P',
                d.nr_sequencia,
                c.nr_sequencia nr_seq_proc,
                c.nr_seq_proc_pacote,
                c.nr_atendimento,
                (d.vl_repasse - abs(abs(d.vl_repasse) - abs(c.vl_procedimento))) vl_transacao,
                c.vl_procedimento,
                e.cd_pessoa_fisica,
                e.cd_cgc,
                d.nr_seq_trans_fin,
                'VL_REPASSE_LIQ',
                d.cd_regra,
                c.cd_setor_atendimento,
                null,
                0,
                b.cd_convenio_parametro,
                substr(obter_nota_conta_protocolo(b.nr_seq_protocolo, b.nr_interno_conta),1,255),
                d.nr_interno_conta_est,
                b.nr_atendimento,
                d.nr_repasse_terceiro,
                b.nr_interno_conta,
                d.nr_seq_trans_fin_rep_maior,
                c.cd_medico_executor,
                c.ie_responsavel_credito,
                d.ie_status,
                null nr_seq_terc_ant,
                null nr_lote_contabil_ant,
                'PROCEDIMENTO_REPASSE' nm_tabela,
                'N' ie_tipo,
                e.nr_sequencia
        from    terceiro e,
                procedimento_repasse d,
                procedimento_paciente c,
                conta_paciente b
        where   b.nr_lote_repasse               = nr_lote_contabil_p
        and     b.nr_interno_conta              = d.nr_interno_conta_est        /* Contablizar atraves da conta paciente de estorno*/
        and     c.nr_sequencia          = d.nr_seq_procedimento
        and     d.nr_seq_terceiro               = e.nr_sequencia
        and     e.cd_estabelecimento    = cd_estabelecimento_w
        and     coalesce(d.nr_lote_contabil, 0)      = 0
        and     coalesce(abs(c.vl_repasse_calc),0) > abs(c.vl_procedimento)
        and     (d.nr_seq_trans_fin_rep_maior IS NOT NULL AND d.nr_seq_trans_fin_rep_maior::text <> '')
        and     ie_somente_item_repasse_w in ('N','X')
        
union all

        select  'P',
                d.nr_sequencia,
                null nr_seq_proc,
                null nr_seq_proc_pacote,
                c.nr_atendimento nr_atendimento,
                d.vl_repasse,
                null vl_procedimento,
                e.cd_pessoa_fisica,
                e.cd_cgc,
                d.nr_seq_trans_fin,
                'VL_REPASSE',
                d.cd_regra,
                c.cd_setor_atendimento,
                null,
                0,
                null cd_convenio_parametro,
                '' nr_nota_fiscal,
                null nr_interno_conta_est,
                (null)::numeric  nr_atend_estorno,
                d.nr_repasse_terceiro,
                null nr_interno_conta,
                null nr_seq_trans_fin_rep_maior,
                '' cd_medico_executor,
                null ie_responsavel_credito,
                d.ie_status,
                null nr_seq_terc_ant,
                null nr_lote_contabil_ant,
                'PROCEDIMENTO_REPASSE' nm_tabela,
                'N' ie_tipo,
                e.nr_sequencia
        from    terceiro e,
                procedimento_paciente c,
                procedimento_repasse d
        where   d.nr_lote_contabil              = nr_lote_contabil_p
        and     d.ie_status             = 'E'
        and     (d.nr_seq_trans_fin IS NOT NULL AND d.nr_seq_trans_fin::text <> '')
        and     d.nr_seq_terceiro               = e.nr_sequencia
        and     d.nr_seq_procedimento   = c.nr_sequencia
        and     e.cd_estabelecimento    = cd_estabelecimento_w
        --and   d.nr_interno_conta_est  is null
        and     ie_contab_rep_estorno_mes_w = 'S'
        and     ie_somente_item_repasse_w in ('N','X')
        
union all

        select  'I',
                d.nr_sequencia,
                null nr_seq_proc,
                null nr_seq_proc_pacote,
                d.nr_atendimento nr_atendimento,
                d.vl_dia_antecipacao,
                0,
                e.cd_pessoa_fisica,
                e.cd_cgc,
                d.nr_seq_trans_fin_prov,
                'VL_DIA_ANTECIPACAO',
                0 cd_regra,
                0 cd_setor_atendimento,
                cd_conta_contabil_prov,
                cd_centro_custo_prov,
                0,
                '',
                (null)::numeric ,
                (null)::numeric  nr_atend_estorno,
                d.nr_repasse_terceiro,
                d.nr_interno_conta,
                null,
                '' cd_medico_executor,
                '' ie_responsavel_credito,
                '',
                null nr_seq_terc_ant,
                null nr_lote_contabil_ant,
                'REPASSE_TERCEIRO_ITEM' nm_tabela,
                'N' ie_tipo,
                e.nr_sequencia
        from    terceiro e,
                repasse_terceiro_item d
        where   d.nr_seq_terceiro               = e.nr_sequencia
        and     coalesce(dt_contabil, dt_lancamento) between dt_inicial_w and dt_final_w
        and     e.cd_estabelecimento    = cd_estabelecimento_w
        and     (dt_lancamento IS NOT NULL AND dt_lancamento::text <> '')
        and     (nr_seq_trans_fin_prov IS NOT NULL AND nr_seq_trans_fin_prov::text <> '')
        and     ie_exclusao_p           = 'N'
        and     coalesce(d.nr_lote_contabil_prov,0) = 0
        and     ie_somente_item_repasse_w in ('S','X')
        
union all

        select  'I',
                d.nr_sequencia,
                null nr_seq_proc,
                null nr_seq_proc_pacote,
                d.nr_atendimento nr_atendimento,
                d.vl_repasse,
                0,
                e.cd_pessoa_fisica,
                e.cd_cgc,
                d.nr_seq_trans_fin_prov,
                'VL_REPASSE',
                0 cd_regra,
                0 cd_setor_atendimento,
                cd_conta_contabil_prov,
                cd_centro_custo_prov,
                0,
                '',
                (null)::numeric ,
                (null)::numeric  nr_atend_estorno,
                d.nr_repasse_terceiro,
                d.nr_interno_conta,
                null,
                '' cd_medico_executor,
                '' ie_responsavel_credito,
                '',
                null nr_seq_terc_ant,
                null nr_lote_contabil_ant,
                'REPASSE_TERCEIRO_ITEM' nm_tabela,
                'N' ie_tipo,
                e.nr_sequencia
        from    terceiro e,
                repasse_terceiro_item d,
                repasse_terceiro a
        where   d.nr_seq_terceiro               = e.nr_sequencia
        and     a.nr_repasse_terceiro   = d.nr_repasse_terceiro
        and     a.dt_mesano_referencia  between dt_inicial_w and dt_final_w
        and     e.cd_estabelecimento    = cd_estabelecimento_w
        and     (dt_lancamento IS NOT NULL AND dt_lancamento::text <> '')
        and     (nr_seq_trans_fin_prov IS NOT NULL AND nr_seq_trans_fin_prov::text <> '')
        and     coalesce(d.nr_lote_contabil_prov,0) = 0
        and     ie_exclusao_p                   = 'N'
        and     ie_data_base_contab_w           = 'R'
        and     ie_somente_item_repasse_w in ('S','X')
        
union all

        select  'P',
                d.nr_sequencia,
                c.nr_sequencia nr_seq_proc,
                c.nr_seq_proc_pacote,
                c.nr_atendimento,
                d.vl_repasse,
                c.vl_procedimento,
                e.cd_pessoa_fisica,
                e.cd_cgc,
                d.nr_seq_trans_fin,
                'VL_REPASSE',
                d.cd_regra,
                c.cd_setor_atendimento,
                null,
                0,
                b.cd_convenio_parametro,
                substr(obter_nota_conta_protocolo(b.nr_seq_protocolo, b.nr_interno_conta),1,255),
                d.nr_interno_conta_est,
                (null)::numeric  nr_atend_estorno,
                d.nr_repasse_terceiro,
                b.nr_interno_conta,
                d.nr_seq_trans_fin_rep_maior,
                c.cd_medico_executor,
                c.ie_responsavel_credito,
                d.ie_status,
                null nr_seq_terc_ant,
                null nr_lote_contabil_ant,
                'PROCEDIMENTO_REPASSE' nm_tabela,
                'N' ie_tipo,
                e.nr_sequencia
        from    terceiro e,
                procedimento_repasse d,
                procedimento_paciente c,
                conta_paciente b,
                repasse_terceiro a
        where   a.nr_lote_contabil      = nr_lote_contabil_p
        and     a.nr_repasse_terceiro   = d.nr_repasse_terceiro
        and     b.nr_interno_conta      = c.nr_interno_conta
        and     c.nr_sequencia          = d.nr_seq_procedimento
        and     d.nr_seq_terceiro       = e.nr_sequencia
        and     e.cd_estabelecimento    = cd_estabelecimento_w
        and     coalesce(d.nr_interno_conta_est::text, '') = ''
        and     ie_data_base_contab_w   = 'R'
        and     ie_exclusao_p           = 'N'
        and     ie_somente_item_repasse_w in ('N','X')
        
union all

        select  'M',
                d.nr_sequencia,
                c.nr_sequencia nr_seq_proc,
                c.nr_seq_proc_pacote,
                c.nr_atendimento,
                d.vl_repasse,
                c.vl_material,
                e.cd_pessoa_fisica,
                e.cd_cgc,
                d.nr_seq_trans_fin,
                'VL_REPASSE',
                d.cd_regra,
                c.cd_setor_atendimento,
                null,
                0,
                b.cd_convenio_parametro,
                substr(obter_nota_conta_protocolo(b.nr_seq_protocolo, b.nr_interno_conta),1,255),
                d.nr_interno_conta_est,
                (null)::numeric  nr_atend_estorno,
                d.nr_repasse_terceiro,
                b.nr_interno_conta,
                d.nr_seq_trans_fin_rep_maior,
                '' cd_medico_executor,
                c.ie_responsavel_credito,
                d.ie_status,
                null nr_seq_terc_ant,
                null nr_lote_contabil_ant,
                'MATERIAL_REPASSE' nm_tabela,
                'N' ie_tipo,
                e.nr_sequencia
        from    terceiro e,
                material_repasse d,
                material_atend_paciente c,
                conta_paciente b,
                repasse_terceiro a
        where   a.nr_lote_contabil      = nr_lote_contabil_p
        and     a.nr_repasse_terceiro   = d.nr_repasse_terceiro
        and     b.nr_interno_conta      = c.nr_interno_conta
        and     c.nr_sequencia          = d.nr_seq_material
        and     d.nr_seq_terceiro       = e.nr_sequencia
        and     e.cd_estabelecimento    = cd_estabelecimento_w
        and     coalesce(d.nr_interno_conta_est::text, '') = ''
        and     ie_data_base_contab_w   = 'R'
        and     ie_exclusao_p           = 'N'
        and     ie_somente_item_repasse_w in ('N','X')
        
union all

        select  'P',
                d.nr_sequencia,
                c.nr_sequencia nr_seq_proc,
                c.nr_seq_proc_pacote,
                c.nr_atendimento,
                d.vl_repasse,
                c.vl_procedimento,
                e.cd_pessoa_fisica,
                e.cd_cgc,
                d.nr_seq_trans_fin,
                'VL_REPASSE',
                d.cd_regra,
                c.cd_setor_atendimento,
                null,
                0,
                b.cd_convenio_parametro,
                substr(obter_nota_conta_protocolo(b.nr_seq_protocolo, b.nr_interno_conta),1,255),
                d.nr_interno_conta_est,
                b.nr_atendimento,
                d.nr_repasse_terceiro,
                b.nr_interno_conta,
                d.nr_seq_trans_fin_rep_maior,
                c.cd_medico_executor,
                c.ie_responsavel_credito,
                d.ie_status,
                null nr_seq_terc_ant,
                null nr_lote_contabil_ant,
                'PROCEDIMENTO_REPASSE' nm_tabela,
                'E' ie_tipo,
                e.nr_sequencia
        from    terceiro e,
                procedimento_repasse d,
                procedimento_paciente c,
                conta_paciente b,
                repasse_terceiro a
        where   a.nr_lote_contabil      = nr_lote_contabil_p
        and     a.nr_repasse_terceiro   = d.nr_repasse_terceiro
        and     b.nr_interno_conta                      = d.nr_interno_conta_est
        and     c.nr_sequencia                          = d.nr_seq_procedimento
        and     d.nr_seq_terceiro                       = e.nr_sequencia
        and     e.cd_estabelecimento            = cd_estabelecimento_w
        and ie_data_base_contab_w               = 'R'
        and     ie_exclusao_p                           = 'N'
        and     ie_somente_item_repasse_w in ('N','X')
        
union all

        select  'M',
                d.nr_sequencia,
                c.nr_sequencia nr_seq_proc,
                c.nr_seq_proc_pacote,
                c.nr_atendimento,
                d.vl_repasse,
                c.vl_material,
                e.cd_pessoa_fisica,
                e.cd_cgc,
                d.nr_seq_trans_fin,
                'VL_REPASSE',
                d.cd_regra,
                c.cd_setor_atendimento,
                null,
                0,
                b.cd_convenio_parametro,
                substr(obter_nota_conta_protocolo(b.nr_seq_protocolo, b.nr_interno_conta),1,255),
                d.nr_interno_conta_est,
                b.nr_atendimento,
                d.nr_repasse_terceiro,
                b.nr_interno_conta,
                d.nr_seq_trans_fin_rep_maior,
                '' cd_medico_executor,
                c.ie_responsavel_credito,
                d.ie_status,
                null nr_seq_terc_ant,
                null nr_lote_contabil_ant,
                'MATERIAL_REPASSE' nm_tabela,
                'E' ie_tipo,
                e.nr_sequencia
        from    terceiro e,
                material_repasse d,
                material_atend_paciente c,
                conta_paciente b,
                repasse_terceiro a
        where   a.nr_lote_contabil              = nr_lote_contabil_p
        and     a.nr_repasse_terceiro   = d.nr_repasse_terceiro
        and     b.nr_interno_conta                      = d.nr_interno_conta_est
        and     c.nr_sequencia                          = d.nr_seq_material
        and     d.nr_seq_terceiro                       = e.nr_sequencia
        and     e.cd_estabelecimento            = cd_estabelecimento_w
        and ie_data_base_contab_w               = 'R'
        and     ie_exclusao_p                           = 'N'
        and     ie_somente_item_repasse_w in ('N','X');


BEGIN
/*Validacao para impedir a geracao em lotes incorretos */

if (ie_exclusao_p <> 'S') then
        select coalesce(max(b.cd_tipo_lote_contabil),0)
        into STRICT cd_tipo_lote_contabil_w
        from lote_contabil b
        where b.nr_lote_contabil = nr_lote_contabil_p;
        if (ie_exclusao_p = 'X' and cd_tipo_lote_contabil_w not in (6,14)) then
                CALL wheb_mensagem_pck.exibir_mensagem_abort(261346);
        end if;
end if;
delete
from    lote_contabil_log
where   nr_lote_contabil = nr_lote_contabil_p
and     cd_log_lote in (9,10);

commit;

select  dt_referencia,
        cd_estabelecimento
into STRICT    dt_contabil_w,
        cd_estabelecimento_w
from    lote_contabil
where   nr_lote_contabil        = nr_lote_contabil_p;

dt_inicial_w    := trunc(dt_contabil_w,'mm');
dt_final_w      := fim_mes(dt_contabil_w);
ds_mes_ano_w    := somente_numero(to_char(dt_contabil_w,'MMYYYY'));



select  max(nm_fantasia_estab)
into STRICT    nm_estabelecimento_w
from    estabelecimento
where   cd_estabelecimento      = cd_estabelecimento_w;

select  obter_se_compl_tipo_lote(cd_estabelecimento, cd_tipo_lote_contabil),
        cd_tipo_lote_contabil
into STRICT    ie_compl_hist_w,
        cd_tipo_lote_contabil_w
from    lote_contabil
where   nr_lote_contabil        = nr_lote_contabil_p;

select  coalesce(max(ie_contab_rep_estorno_mes),'N'),
                coalesce(max(ie_contab_repasse_prov),'N'),
                coalesce(max(ie_data_base_contab),'C')
into STRICT    ie_contab_rep_estorno_mes_w,
                ie_contab_repasse_prov_w,
                ie_data_base_contab_w
from    parametro_repasse
where   cd_estabelecimento      = cd_estabelecimento_w;

if (ie_data_base_contab_w = 'R') then
dt_inicial_w    := inicio_dia(dt_contabil_w);
dt_final_w      := fim_dia(dt_contabil_w);
end if;

select  max(cd_convenio_sus),
        coalesce(max(ie_contab_sus_receita),'S'),
        coalesce(max(ie_agrup_lote_rec),'N')
into STRICT    cd_convenio_sus_w,
        ie_contab_sus_receita_w,
        ie_agrup_lote_rec_w
from    parametro_faturamento
where   cd_estabelecimento      = cd_estabelecimento_w;

select  max(cd_historico)
into STRICT    cd_historico_w
from    evento_contabil_param_estab
where   cd_tipo_lote_contabil   = 14
and     cd_estabelecimento      = cd_estabelecimento_w;

select  substr(coalesce(max(ds_valor_parametro),'X'),1,1)
into STRICT    ie_somente_item_repasse_w
from    lote_contabil_parametro
where   nr_lote_contabil        = nr_lote_contabil_p
and     nr_seq_parametro        = 1;


if (ie_exclusao_p = 'S') then
        CALL ctb_regras_contabil.comprovante_cache_storage(nr_lote_contabil_p, nm_usuario_p);
        delete from movimento_contabil
        where  nr_lote_contabil         = nr_lote_contabil_p;

        update  lote_contabil
        set     vl_credito              = 0,
                vl_debito               = 0
        where   nr_lote_contabil                = nr_lote_contabil_p;

        update  material_repasse
        set     nr_lote_contabil                = 0
        where   nr_lote_contabil                = nr_lote_contabil_p;

        update  procedimento_repasse
        set     nr_lote_contabil                = 0
        where   nr_lote_contabil                = nr_lote_contabil_p;

        update  repasse_terceiro_item
        set     nr_lote_contabil_prov   = 0
        where   nr_lote_contabil_prov   = nr_lote_contabil_p;

        update  conta_paciente
        set     nr_lote_repasse         = 0
        where   nr_lote_repasse         = nr_lote_contabil_p;

        update  protocolo_convenio
        set     nr_seq_lote_repasse     = 0
        where   nr_seq_lote_repasse     = nr_lote_contabil_p;

        update  proc_mat_repasse_terc
        set     nr_lote_contabil                = 0
        where   nr_lote_contabil                = nr_lote_contabil_p;

        update  repasse_terceiro
        set     nr_lote_contabil         = NULL
        where   nr_lote_contabil        = nr_lote_contabil_p;
else
        if (ie_exclusao_p  = 'N') then

                --Obter_Valor_Dinamico('Truncate Table W_Movimento_Contabil', vl_retorno_w);
                delete  FROM w_movimento_contabil
                where   nr_lote_contabil = nr_lote_contabil_p;

                if (ie_data_base_contab_w = 'C') then

                        if (ie_somente_item_repasse_w in ('X','N')) then
                                update  protocolo_convenio
                                set     nr_seq_lote_repasse             = nr_lote_contabil_p
                                where   nr_seq_lote_repasse             = 0
                                and     ie_status_protocolo                     = 2
                                and     cd_estabelecimento                      = cd_estabelecimento_w
                                and     dt_mesano_referencia between dt_inicial_w and dt_final_w;
                                commit;

                                update  protocolo_convenio x
                                set             x.nr_seq_lote_repasse           = nr_lote_contabil_p
                                where   x.nr_seq_lote_repasse           = 0
                                and             x.ie_status_protocolo           = 2
                                and             x.cd_estabelecimento            = cd_estabelecimento_w
                                and             x.dt_mesano_referencia between dt_inicial_w and dt_final_w
                                and             exists ( SELECT  1
                                                                from    conta_paciente c,
                                                                                procedimento_paciente b,
                                                                                procedimento_repasse a
                                                                where   c.nr_interno_conta      = b.nr_interno_conta
                                                                and             b.nr_sequencia          = a.nr_seq_procedimento
                                                                and             c.nr_seq_protocolo      = x.nr_seq_protocolo

union   all

                                                                PERFORM  1
                                                                from    conta_paciente c,
                                                                                material_atend_paciente b,
                                                                                material_repasse a
                                                                where   c.nr_interno_conta      = b.nr_interno_conta
                                                                and             b.nr_sequencia          = a.nr_seq_material
                                                                and             c.nr_seq_protocolo      = x.nr_seq_protocolo);
                                commit;

                                if (ie_contab_sus_receita_w = 'N') and (cd_convenio_sus_w IS NOT NULL AND cd_convenio_sus_w::text <> '') then

                                        update  protocolo_convenio
                                        set     nr_seq_lote_repasse     = 0
                                        where   nr_seq_lote_repasse     = nr_lote_contabil_p
                                        and     cd_convenio             = cd_convenio_sus_w;
                                        commit;
                                end if;


                                update  conta_paciente a
                                set     nr_lote_repasse = nr_lote_contabil_p
                                where   exists ( SELECT  1
                                                from    protocolo_convenio y
                                                where   y.nr_seq_protocolo      = a.nr_seq_protocolo
                                                and     y.nr_seq_lote_repasse   = nr_lote_contabil_p)
                                and     coalesce(nr_lote_repasse,0)  = 0;
                                commit;
                        end if;
                elsif (ie_data_base_contab_w = 'R') then
                        update  repasse_terceiro a
                        set             nr_lote_contabil = nr_lote_contabil_p
                        where   coalesce(nr_lote_contabil::text, '') = ''
                        and     a.dt_mesano_referencia between dt_inicial_w and dt_final_w
                        and     a.ie_status = 'F'
                        and     exists ( SELECT  1
                                                from    terceiro x
                                                where   x.nr_sequencia  = a.nr_seq_terceiro
                                                and     x.cd_estabelecimento    = cd_estabelecimento_w);
                        commit;

                        if (ie_contab_repasse_prov_w = 'S') then

                                update  procedimento_repasse a
                                set     a.nr_lote_contabil              = nr_lote_contabil_p
                                where   coalesce(a.nr_lote_contabil,0)       = 0
                                and     exists ( SELECT  1
                                                from    procedimento_paciente y,
                                                        conta_paciente x
                                                where   y.nr_interno_conta      = x.nr_interno_conta
                                                and     y.nr_sequencia          = a.nr_seq_procedimento
                                                and     x.ie_status_acerto      = 1
                                                and     coalesce(x.nr_lote_repasse,0)= 0
                                                and     x.cd_estabelecimento    = cd_estabelecimento_w)
                                and     exists ( select  1
                                                from    repasse_terceiro b
                                                where   b.nr_repasse_terceiro = a.nr_repasse_terceiro
                                                and     b.dt_mesano_referencia between dt_inicial_w and dt_final_w)
                                and     exists ( select  1
                                                from    terceiro x
                                                where   x.nr_sequencia  = a.nr_seq_terceiro
                                                and     x.cd_estabelecimento    = cd_estabelecimento_w);
                                commit;

                                update  material_repasse a
                                set     a.nr_lote_contabil              = nr_lote_contabil_p
                                where   coalesce(a.nr_lote_contabil,0)       = 0
                                and     exists ( SELECT  1
                                                from    material_atend_paciente y,
                                                        conta_paciente x
                                                where   y.nr_interno_conta      = x.nr_interno_conta
                                                and     y.nr_sequencia          = a.nr_seq_material
                                                and     x.ie_status_acerto      = 1
                                                and     coalesce(x.nr_lote_repasse,0)= 0
                                                and     x.cd_estabelecimento    = cd_estabelecimento_w
                                                and     x.dt_mesano_referencia between dt_inicial_w and dt_final_w)
                                and     exists ( select  1
                                                from    terceiro x
                                                where   x.nr_sequencia  = a.nr_seq_terceiro
                                                and     x.cd_estabelecimento    = cd_estabelecimento_w)
                                and     exists ( select  1
                                                from    repasse_terceiro b
                                                where   b.nr_repasse_terceiro = a.nr_repasse_terceiro
                                                and     b.dt_mesano_referencia between dt_inicial_w and dt_final_w);
                                commit;
                        end if;
                end if;
                if (ie_contab_rep_estorno_mes_w = 'S') then
                        update  procedimento_repasse a
                        set     nr_lote_contabil        = nr_lote_contabil_p
                        where   nr_lote_contabil        = 0
                        and     ie_status               = 'E'
                        and     (nr_seq_trans_fin IS NOT NULL AND nr_seq_trans_fin::text <> '')
                        and     exists ( SELECT  1
                                        from    procedimento_repasse y
                                        where   y.nr_sequencia  = a.nr_seq_origem
                                        and     y.nr_lote_contabil <> 0
                                        and     y.dt_contabil < trunc(dt_contabil_w,'month'));
                        commit;
                end if;
        elsif (ie_exclusao_p          = 'X') then

                update  conta_paciente
                set     nr_lote_repasse         = 0
                where   nr_lote_contabil        = nr_lote_contabil_p;
                commit;

                update  conta_paciente
                set     nr_lote_repasse         = nr_lote_contabil_p
                where   nr_lote_contabil        = nr_lote_contabil_p
                and     coalesce(nr_lote_repasse,0) = 0;
                commit;

        end if;

        update  proc_mat_repasse_terc a
        set     a.nr_lote_contabil      = nr_lote_contabil_p
        where   trunc(a.dt_troca,'month')       = trunc(dt_contabil_w, 'month')
        and     coalesce(nr_lote_contabil,0)         = 0
        and     (a.nr_seq_trans_financ IS NOT NULL AND a.nr_seq_trans_financ::text <> '')
        and     obter_estab_proc_mat_repasse(a.nr_seq_proc_repasse, a.nr_seq_mat_repasse) = cd_estabelecimento_w
        and (exists (SELECT 1                                               -- Edgar 17/11/2008, so contabilizar as trocas de terceiro caso o repasse original tenha sido contabilizado
                        from    procedimento_repasse x
                        where   x.nr_sequencia          = a.nr_seq_proc_repasse
                        and     coalesce(x.nr_lote_contabil, 0) > 0) or
                 exists (select 1
                        from    material_repasse x
                        where   x.nr_sequencia          = a.nr_seq_mat_repasse
                        and     coalesce(x.nr_lote_contabil, 0) > 0));
        commit;

        nm_atrib_agrupador_w    := coalesce(trim(both obter_agrupador_contabil(14)),'NR_ATENDIMENTO');

        open c010;
        loop
        fetch c010 into
                ie_proc_mat_w,
                nr_sequencia_w,
                nr_seq_mat_proc_w,
                nr_seq_proc_pacote_w,
                nr_atendimento_w,
                vl_transacao_w,
                vl_receita_w,
                cd_pessoa_fisica_w,
                cd_cgc_w,
                nr_seq_trans_fin_w,
                nm_atributo_w,
                cd_regra_w,
                cd_setor_w,
                cd_conta_contabil_w,
                cd_centro_custo_w,
                cd_convenio_w,
                ds_nota_fiscal_w,
                nr_interno_conta_est_w,
                nr_atend_estorno_w,
                nr_repasse_terceiro_w,
                nr_interno_conta_w,
                nr_seq_trans_fin_rep_maior_w,
                cd_medico_executor_w,
                ie_responsavel_credito_w,
                ie_status_w,
                nr_seq_terc_ant_w,
                nr_lote_contabil_ant_w,
                nm_tabela_w,
                ie_tipo_w,
                nr_seq_terceiro_w;
        EXIT WHEN NOT FOUND; /* apply on c010 */

                nr_seq_tab_orig_w       := nr_sequencia_w;
                nr_seq_protocolo_w      := null;
                vl_total_receita_w      := 0;
                vl_total_repasse_w      := 0;
                vl_diferenca_w          := 0;
                ie_contab_diferenca_w   := 'N';
                nm_beneficiario_ant_w   := '';
                ds_nota_fiscal_w        := '';

                if (coalesce(nr_repasse_terceiro_w,0) <> 0) then
                        select  a.ds_observacao
                        into STRICT    ds_observacao_w
                        from    repasse_terceiro a
                        where   a.nr_repasse_terceiro = nr_repasse_terceiro_w;
                end if;

                if (coalesce(nr_interno_conta_w,0) <> 0) then
                        select  coalesce(max(nr_seq_protocolo),0),
                                coalesce(max(ie_cancelamento),'')
                        into STRICT    nr_seq_protocolo_w,
                                ie_cancelamento_w
                        from    conta_paciente
                        where   nr_interno_conta        = nr_interno_conta_w;
                end if;

                if (coalesce(cd_setor_w,0) <> 0) and (coalesce(cd_centro_custo_w,0) = 0) then

                        select  max(cd_centro_custo)
                        into STRICT    cd_centro_custo_w
                        from    setor_atendimento
                        where   cd_setor_atendimento    = cd_setor_w;

                end if;

                if (coalesce(nr_seq_trans_fin_w::text, '') = '') and (cd_regra_w IS NOT NULL AND cd_regra_w::text <> '') then
                        select  nr_seq_trans_fin_prod
                        into STRICT    nr_seq_trans_fin_w
                        from    regra_repasse_terceiro
                        where   cd_regra        = cd_regra_w;
                end if;

                select  substr(obter_nome_pf_pj(cd_pessoa_fisica_w, cd_cgc_w),1,80)
                into STRICT    nm_beneficiario_w
;

                ie_tipo_convenio_w      := 0;

                if (coalesce(cd_convenio_w,0) > 0) then

                        select  substr(obter_nome_convenio(cd_convenio_w),1,40)
                        into STRICT    ds_convenio_w
;

                        select  max(ie_tipo_convenio)
                        into STRICT    ie_tipo_convenio_w
                        from    convenio
                        where   cd_convenio     = cd_convenio_w;

                end if;

                ds_nota_fiscal_w        := substr(obter_nota_conta_protocolo(nr_seq_protocolo_w, nr_interno_conta_w),1,255);

                if (ie_tipo_convenio_w = 2) or (coalesce(ds_nota_fiscal_w, 'X') = 'X') then
                        ds_nota_fiscal_w        := substr(obter_nota_conta_protocolo(nr_seq_protocolo_w, 0),1,255);
                end if;

                if (nm_atrib_agrupador_w = 'NR_REPASSE_TERCEIRO') then
                        nr_seq_agrupamento_w    := nr_repasse_terceiro_w;
                elsif (nm_atrib_agrupador_w = 'NR_ATENDIMENTO') then
                        nr_seq_agrupamento_w    := nr_atendimento_w;
                elsif (nm_atrib_agrupador_w = 'NR_SEQ_TERCEIRO') then
                        nr_seq_agrupamento_w    := nr_seq_terceiro_w;
                end if;

                if (coalesce(nr_seq_agrupamento_w,0) = 0)then
                        nr_seq_agrupamento_w    := nr_atendimento_w;
                end if;

                if (ie_exclusao_p = 'X') then

                        if (coalesce(nr_seq_protocolo_w,0) <> 0) then

                                select  coalesce(max(nr_seq_lote_protocolo),0)
                                into STRICT    nr_seq_lote_w
                                from    protocolo_convenio
                                where   nr_seq_protocolo = nr_seq_protocolo_w;
                        end if;

                        select  max(nr_sequencia)
                        into STRICT    nr_seq_nota_fiscal_w
                        from    nota_fiscal
                        where   nr_seq_protocolo = nr_seq_protocolo_w;

                        if (coalesce(nr_seq_nota_fiscal_w::text, '') = '') then
                                select  max(nr_sequencia)
                                into STRICT    nr_seq_nota_fiscal_w
                                from    nota_fiscal
                                where   nr_interno_conta = nr_interno_conta_w;
                        end if;

                        if (coalesce(nr_seq_nota_fiscal_w::text, '') = '') then
                                select  max(nr_sequencia)
                                into STRICT    nr_seq_nota_fiscal_w
                                from    nota_fiscal
                                where   nr_seq_lote_prot = nr_seq_lote_w;
                        end if;

                        nm_agrup_rec_w  := coalesce(trim(both obter_agrupador_contabil(6)),'NR_INTERNO_CONTA');

                        if (coalesce(nr_seq_nota_fiscal_w,0) <> 0) then
                                begin
                                select  nr_nota_fiscal
                                into STRICT    nr_nota_fiscal_w
                                from    nota_fiscal
                                where   nr_sequencia = nr_seq_nota_fiscal_w
                                and     ie_situacao = '1';
                                exception when others then
                                        nr_nota_fiscal_w        := null;
                                end;
                        end if;

                        if (nm_agrup_rec_w = 'NR_INTERNO_CONTA')   then
                                  nr_seq_agrupamento_w  := nr_interno_conta_w;
                        elsif (nm_agrup_rec_w = 'NR_ATENDIMENTO')     then
                                  nr_seq_agrupamento_w  := nr_atendimento_w;
                        elsif (nm_agrup_rec_w = 'NR_SEQ_PROTOCOLO')   then
                                  nr_seq_agrupamento_w  :=      nr_seq_protocolo_w;
                        elsif (nm_agrup_rec_w = 'NR_NOTA_FISCAL')     then
                                  nr_seq_agrupamento_w  :=      nr_nota_fiscal_w;
                        elsif (nm_agrup_rec_w = 'DS_MES_ANO')         then
                                nr_seq_agrupamento_w    := ds_mes_ano_w;
                        end if;

                        if (coalesce(nr_seq_agrupamento_w,0) = 0)then
                                nr_seq_agrupamento_w    := nr_interno_conta_w;
                        end if;

                        if (ie_proc_mat_w = 'M') then

                                select  coalesce(max(vl_material),0)
                                into STRICT    vl_total_receita_w
                                from    material_atend_paciente
                                where   nr_sequencia    = nr_seq_mat_proc_w
                                and     nr_lote_contabil= nr_lote_contabil_p;

                                select  coalesce(sum(vl_repasse),0)
                                into STRICT    vl_total_repasse_w
                                from    material_repasse
                                where   nr_seq_material = nr_seq_mat_proc_w;

                                if (ie_cancelamento_w = 'E') then

                                        select	coalesce(max(vl_material),0)
                                        into STRICT	vl_total_receita_w
                                        from	material_atend_paciente
                                        where	nr_sequencia	= nr_seq_mat_proc_w;


                                        select  coalesce(sum(a.vl_repasse),0)
                                        into STRICT    vl_total_repasse_w
                                        from    material_repasse        a
                                        where   a.nr_seq_material       = nr_seq_mat_proc_w
                                        and     coalesce(nr_lote_contabil,0) = 0
                                        and     (nr_interno_conta_est IS NOT NULL AND nr_interno_conta_est::text <> '');
                                end if;
                        end if;

                        if (ie_proc_mat_w = 'P') then

                                select  coalesce(max(vl_procedimento),0)
                                into STRICT    vl_total_receita_w
                                from    procedimento_paciente
                                where   nr_sequencia    = nr_seq_mat_proc_w
                                and     nr_lote_contabil= nr_lote_contabil_p;

                                select  coalesce(sum(vl_repasse),0)
                                into STRICT    vl_total_repasse_w
                                from    procedimento_repasse
                                where   nr_seq_procedimento     = nr_seq_mat_proc_w;

                                if (ie_cancelamento_w = 'E') then

                                        select  coalesce(max(vl_procedimento),0)
                                        into STRICT    vl_total_receita_w
                                        from    procedimento_paciente
                                        where   nr_sequencia    = nr_seq_mat_proc_w;

                                        select  coalesce(sum(a.vl_repasse),0)
                                        into STRICT    vl_total_repasse_w
                                        from    procedimento_repasse    a
                                        where   a.nr_seq_procedimento   = nr_seq_mat_proc_w
                                        and     coalesce(nr_lote_contabil,0) = 0
                                        and     (nr_interno_conta_est IS NOT NULL AND nr_interno_conta_est::text <> '');

                                end if;
                        end if;
                end if;

                if (ie_exclusao_p = 'X') and (ie_proc_mat_w in ('P','M')) and (nm_atributo_w not in ('VL_REPASSE_LIQ','VL_REPASSE_DIF')) and (coalesce(abs(vl_total_repasse_w),0) > coalesce(abs(vl_total_receita_w),0)) and (nr_seq_trans_fin_rep_maior_w IS NOT NULL AND nr_seq_trans_fin_rep_maior_w::text <> '') then

                        if (vl_total_receita_w >= 0) then

                                if (vl_total_receita_w < vl_total_repasse_w) then

                                        vl_diferenca_w          := coalesce(vl_total_repasse_w,0) - coalesce(vl_total_receita_w,0);
                                end if;

                        elsif (vl_total_receita_w < 0) then

                                if (vl_total_receita_w > vl_total_repasse_w) then

                                        vl_diferenca_w          := coalesce(vl_total_repasse_w,0) - coalesce(vl_total_receita_w,0);
                                end if;
                        end if;

                        if (ie_tipo_w = 'E') and (nr_interno_conta_est_w IS NOT NULL AND nr_interno_conta_est_w::text <> '') and (ie_status_w = 'E') then

                                vl_diferenca_w  := coalesce(vl_total_repasse_w,0) - coalesce(vl_total_receita_w * -1,0);
                        end if;

                        qt_registro_w := 0;
                        if (ie_proc_mat_w = 'P') then
                                select  count(*)
                                into STRICT    qt_registro_w
                                from    procedimento_repasse
                                where   nr_seq_procedimento     = nr_seq_mat_proc_w
                                and     nr_lote_contabil        = nr_lote_contabil_p;
                        else
                                select  count(*)
                                into STRICT    qt_registro_w
                                from    material_repasse
                                where   nr_seq_material         = nr_seq_mat_proc_w
                                and     nr_lote_contabil        = nr_lote_contabil_p;
                        end if;

                        if (qt_registro_w  = 0) or (ie_tipo_w = 'E') then
                                ie_contab_diferenca_w   := 'S';
                        end if;
                end if;

                if (ie_proc_mat_w = 'P') then

                        update  procedimento_repasse
                        set     nr_lote_contabil        = nr_lote_contabil_p,
                                nr_seq_trans_fin        = nr_seq_trans_fin_w,
                                dt_contabil             = dt_contabil_w
                        where   nr_sequencia            = nr_sequencia_w;
                elsif (ie_proc_mat_w = 'M') then


                        update  material_repasse
                        set     nr_lote_contabil        = nr_lote_contabil_p,
                                nr_seq_trans_fin        = nr_seq_trans_fin_w,
                                dt_contabil             = dt_contabil_w
                        where   nr_sequencia            = nr_sequencia_w;
                elsif (ie_proc_mat_w = 'I') then
                        update  repasse_terceiro_item
                        set     nr_lote_contabil_prov   = nr_lote_contabil_p,
                                nr_seq_trans_fin_prov   = nr_seq_trans_fin_w
                        where   nr_sequencia                    = nr_sequencia_w;
                end if;

                if (ie_compl_hist_w = 'S') then

                        ds_titulo_w     := substr(obter_titulo_repasse(nr_repasse_terceiro_w),1,255);

                        select  max(nm_pessoa_fisica)
                        into STRICT    nm_medico_executor_w
                        from    pessoa_fisica
                        where   cd_pessoa_fisica        = cd_medico_executor_w;

                        select  max(ds_regra)
                        into STRICT    ds_responsavel_credito_w
                        from    regra_honorario
                        where   cd_regra        = ie_responsavel_credito_w;

                        select  max(ds_setor_atendimento)
                        into STRICT    ds_setor_atendimento_w
                        from    setor_atendimento
                        where   cd_setor_atendimento    = cd_setor_w;

                        ds_interno_conta_w              := nr_interno_conta_w;
                        if (nr_interno_conta_w = 0) then
                                ds_interno_conta_w      := null;
                        end if;

/*Rotina para obter a conta contabil do terceiro anterior */

                        if (nm_atributo_w in ('VL_TROCA_TERC_MAT', 'VL_TROCA_TERC_PROC')) and (nr_seq_terc_ant_w IS NOT NULL AND nr_seq_terc_ant_w::text <> '') then

                                cd_conta_contabil_w     := '';
                                begin
                                select  cd_cgc,
                                        cd_pessoa_fisica
                                into STRICT    cd_cgc_ant_w,
                                        cd_pessoa_fisica_ant_w
                                from    terceiro
                                where   nr_sequencia            = nr_seq_terc_ant_w;
                                exception when others then
                                        cd_cgc_ant_w            := null;
                                        cd_pessoa_fisica_ant_w  := null;
                                end;

                                if (cd_cgc_ant_w IS NOT NULL AND cd_cgc_ant_w::text <> '') then

                                        select  coalesce(max(cd_conta_contabil),'')
                                        into STRICT    cd_conta_contabil_w
                                        from    terceiro
                                        where   nr_sequencia = nr_seq_terc_ant_w;
                                elsif (cd_pessoa_fisica_ant_w IS NOT NULL AND cd_pessoa_fisica_ant_w::text <> '') then
                                        select  coalesce(max(cd_conta_contabil),'')
                                        into STRICT    cd_conta_contabil_w
                                        from    terceiro
                                        where   nr_sequencia = nr_seq_terc_ant_w;
                                end if;

                                select  substr(obter_nome_pf_pj(cd_pessoa_fisica_ant_w, cd_cgc_ant_w),1,80)
                                into STRICT    nm_beneficiario_ant_w
;
                        end if;

                        if (ie_proc_mat_w = 'M') then
                                select  a.ie_status
                                into STRICT    ie_status_ww
                                from    material_repasse a
                                where   a.nr_sequencia = nr_sequencia_w;
                        elsif (ie_proc_mat_w = 'P') then
                                select  a.ie_status
                                into STRICT    ie_status_ww
                                from    procedimento_repasse a
                                where   a.nr_sequencia = nr_sequencia_w;
                        end if;

                        ds_estorno_w := '';

                        if (coalesce(ie_status_ww,'X') = 'E') then
                                ds_estorno_w := wheb_mensagem_pck.get_texto(799390);
                        end if;

                        if (nr_seq_protocolo_w IS NOT NULL AND nr_seq_protocolo_w::text <> '')then
                                select  max(substr(obter_nfe_conta_protocolo(nr_seq_protocolo,0),1,254))
                                into STRICT    nr_nfe_conta_protocolo_w
                                from    nota_fiscal x
                                where   x.nr_sequencia  =       (SELECT max(nr_sequencia)
                                                                from    nota_fiscal
                                                                where   nr_seq_protocolo        = nr_seq_protocolo_w);
                        elsif (nr_interno_conta_w IS NOT NULL AND nr_interno_conta_w::text <> '')then
                                select  max(substr(obter_nfe_conta_protocolo(0,nr_interno_conta),1,254))
                                into STRICT    nr_nfe_conta_protocolo_w
                                from    nota_fiscal x
                                where   x.nr_sequencia = (
                                        SELECT  max(nr_sequencia)
                                        from    nota_fiscal
                                        where   nr_interno_conta = nr_interno_conta_w);

                        end if;

                        dt_conta_protocolo_w := null;

                       if (nr_interno_conta_w IS NOT NULL AND nr_interno_conta_w::text <> '') then
                                select  to_date(obter_dados_protocolo((nr_seq_protocolo),'DT'), 'dd/mm/yyyy')
                                into STRICT    dt_conta_protocolo_w
                                from    conta_paciente
                                where   nr_interno_conta  = nr_interno_conta_w;
                        end if;

                        ds_conteudo_w   := substr(nm_beneficiario_w                             || '#@' ||
                                                ds_convenio_w                                   || '#@' ||
                                                ds_nota_fiscal_w                                || '#@' ||
                                                nr_atendimento_w                                || '#@' ||
                                                nr_interno_conta_est_w                          || '#@' ||
                                                nr_atend_estorno_w                              || '#@' ||
                                                nr_repasse_terceiro_w                           || '#@' ||
                                                ds_titulo_w                                     || '#@' ||
                                                ds_interno_conta_w                              || '#@' ||
                                                nm_medico_executor_w                            || '#@' ||
                                                cd_regra_w                                      || '#@' ||
                                                ds_responsavel_credito_w                        || '#@' ||
                                                ds_setor_atendimento_w                          || '#@' ||
                                                vl_transacao_w                                  || '#@' ||
                                                nm_beneficiario_ant_w                           || '#@' ||
                                                nr_lote_contabil_ant_w                          || '#@' ||
                                                nm_estabelecimento_w                            || '#@' ||
                                                to_char(dt_conta_protocolo_w, 'mm/yyyy')        || '#@' ||
                                                ds_estorno_w                                    || '#@' ||
                                                nr_nfe_conta_protocolo_w                        || '#@' ||
                                                ds_observacao_w,1,3990);

                        /*Anderson 18/01/2008 - OS 79342 - Contabilizacao pelo lote de receitas - ao criar atributos no lote de receita deve ser incluido nesta estrutura*/

                        if (ie_exclusao_p = 'X') then

                                select  max(substr(obter_mes_extenso(substr(obter_desc_mes_ano(b.dt_mesano_referencia,'N'),1,2),'A'),1,20) || '/' ||
                                                substr(to_char(b.dt_mesano_referencia,'dd/mm/yyyy'),7,4)),
                                        max(substr(obter_desc_mes_ano(b.dt_mesano_referencia,'AB'),1,20))
                                into STRICT    ds_mesano_referencia_w,
                                        ds_mesano_referencia_abrev_w
                                from    protocolo_convenio b,
                                        conta_paciente a
                                where   a.nr_seq_protocolo      = b.nr_seq_protocolo
                                and     a.nr_interno_conta      = nr_interno_conta_w;

                                select  substr(obter_titulos_protocolo(nr_seq_protocolo),1,200),
                                        substr(obter_titulo_conta_protocolo(nr_seq_protocolo,nr_interno_conta),1,200),
                                        substr(obter_dados_protocolo((nr_seq_protocolo),'DT'),1,255)
                                into STRICT    ds_titulos_prot_w,
                                        ds_titulos_conta_w,
                                        dt_conta_protocolo_w
                                from    conta_paciente
                                where   nr_interno_conta        = nr_interno_conta_w;



                                select  max(substr(obter_nome_pf_pj(x.cd_pessoa_fisica, x.cd_cgc),1,80))
                                into STRICT    nm_pessoa_nota_fiscal_w
                                from    nota_fiscal x
                                where   x.nr_sequencia = nr_seq_nota_fiscal_w;

                                if (ie_proc_mat_w in ('P','M')) and (ie_status_w IS NOT NULL AND ie_status_w::text <> '') then
                                        select  substr(obter_valor_dominio(1129,ie_status_w),1,100)
                                        into STRICT    ds_status_repasse_w
;
                                end if;

                                ds_conteudo_w   := substr(      ''                              || '#@' ||
                                                                ds_convenio_w                   || '#@' ||
                                                                nr_atendimento_w                || '#@' ||
                                                                ''                              || '#@' ||
                                                                nr_interno_conta_w              || '#@' ||
                                                                nr_seq_protocolo_w              || '#@' ||
                                                                ''                              || '#@' ||
                                                                ''                              || '#@' ||
                                                                ''                              || '#@' ||
                                                                ds_titulos_conta_w              || '#@' ||
                                                                ds_titulos_prot_w               || '#@' ||
                                                                ds_mesano_referencia_w          || '#@' ||
                                                                ds_mesano_referencia_abrev_w    || '#@' ||
                                                                nm_pessoa_nota_fiscal_w         || '#@' ||
                                                                nm_beneficiario_w               || '#@' ||
                                                                ds_nota_fiscal_w                || '#@' ||
                                                                ''                              || '#@' ||
                                                                ''                              || '#@' ||
                                                                ''                              || '#@' ||
                                                                ''                              || '#@' ||
                                                                ds_status_repasse_w             || '#@' ||
                                                                '' /* DT_MESANO_REFERENCIA*/    || '#@' ||
                                                                ''                              || '#@' ||
                                                                ''                              || '#@' ||
                                                                ''                              || '#@' ||
                                                                ''                              || '#@' ||
                                                                ''                              || '#@' ||
                                                                ''                              || '#@' ||
                                                                ''                              || '#@' ||
                                                                ''                              || '#@' ||
                                                                ''                              || '#@' ||
                                                                ''                              || '#@' ||
                                                                ''                              || '#@' ||
                                                                ''                              || '#@' ||
                                                                nr_nfe_conta_protocolo_w,1,3990);
                        end if;
                        select  substr(obter_compl_historico(cd_tipo_lote_contabil_w, cd_historico_w, ds_conteudo_w),1,255)
                        into STRICT    nr_documento_ww
;

                        nr_documento_w  := substr(coalesce(nr_documento_ww, nr_documento_w),1,255);

                end if;

                nr_documento_www := null;
                ie_origem_documento_w := null;

                if (coalesce(nr_repasse_terceiro_w,'0') <> '0') then

                        ds_atributos_w  :=      'NR_SEQ_REPASSE=' || nr_repasse_terceiro_w || ';' ||
                                                'NR_SEQ_NOTA_FISCAL=' || nr_seq_nota_fiscal_w;

                        ctb_obter_doc_movto(    cd_tipo_lote_contabil_w,
                                                nm_atributo_w,
                                                'VR',
                                                dt_contabil_w,
                                                null,
                                                null,
                                                ds_atributos_w,
                                                nm_usuario_p,
                                                ie_regra_w,
                                                nr_documento_www,
                                                ie_origem_documento_w);
                end if;

                if (ie_exclusao_p = 'X') and (ie_proc_mat_w in ('P','M')) and (ie_contab_diferenca_w = 'S') and (nm_atributo_w not in ('VL_REPASSE_DIF','VL_REPASSE_LIQ')) then

                        vl_transacao_ww := vl_diferenca_w;
                        nr_seq_cont_w := gerar_contab_trans_financ(
                                cd_estabelecimento_w, null, nr_lote_contabil_p, nm_usuario_p, cd_conta_contabil_w, cd_centro_custo_w, nr_documento_w, nr_seq_agrupamento_w, dt_contabil_w, vl_transacao_ww, nr_seq_trans_fin_rep_maior_w, '', nm_atributo_w, cd_pessoa_fisica_w, cd_cgc_w, cd_setor_w, cd_convenio_w, nr_documento_www, null, ds_conteudo_w, null, null, null, null, null, null, null, null, null, null, nr_repasse_terceiro_w, null, null, null, nr_seq_cont_w, nm_tabela_w, null, null, ie_origem_documento_w, nr_seq_tab_orig_w, null, nr_seq_info_ctb_w);
                end if;
                if (ie_exclusao_p = 'X') and (ie_proc_mat_w in ('P','M')) and (nr_seq_trans_fin_rep_maior_w IS NOT NULL AND nr_seq_trans_fin_rep_maior_w::text <> '') and (nr_seq_proc_pacote_w IS NOT NULL AND nr_seq_proc_pacote_w::text <> '') and (nr_seq_proc_pacote_w = nr_seq_mat_proc_w) and (1 = 2) then
                        nr_seq_cont_w := gerar_contab_trans_financ(
                                cd_estabelecimento_w, null, nr_lote_contabil_p, nm_usuario_p, cd_conta_contabil_w, cd_centro_custo_w, nr_documento_w, nr_seq_agrupamento_w, dt_contabil_w, vl_transacao_w, nr_seq_trans_fin_rep_maior_w, '', nm_atributo_w, cd_pessoa_fisica_w, cd_cgc_w, cd_setor_w, cd_convenio_w, nr_documento_www, null, ds_conteudo_w, null, null, null, null, null, null, null, null, null, null, nr_repasse_terceiro_w, null, null, null, nr_seq_cont_w, nm_tabela_w, null, null, ie_origem_documento_w, nr_seq_tab_orig_w, null, nr_seq_info_ctb_w);
                end if;

                nr_seq_cont_w := gerar_contab_trans_financ(
                        cd_estabelecimento_w, null, nr_lote_contabil_p, nm_usuario_p, cd_conta_contabil_w, cd_centro_custo_w, nr_documento_w, nr_seq_agrupamento_w, dt_contabil_w, vl_transacao_w, nr_seq_trans_fin_w, '', nm_atributo_w, cd_pessoa_fisica_w, cd_cgc_w, cd_setor_w, cd_convenio_w, nr_documento_www, null, ds_conteudo_w, null, null, null, null, null, null, null, null, null, null, nr_repasse_terceiro_w, null, null, null, nr_seq_cont_w, nm_tabela_w, null, null, ie_origem_documento_w, nr_seq_tab_orig_w, null, nr_seq_info_ctb_w);

                qt_insert_w := qt_insert_w+1;
                if (qt_insert_w >= 1000) then

                        commit;
                        qt_insert_w := 0;
                end if;
        end loop;
        close c010;
        commit;

        if (ie_exclusao_p = 'N') then
                if (pkg_i18n.get_user_locale = 'es_BO' AND ie_exclusao_p = 'N') then
                        BEGIN
                                CALL ctb_regras_contabil.ctb_gerar_cd_controle_repasse(nr_lote_contabil_p, nm_usuario_p);
                        EXCEPTION WHEN OTHERS THEN
                                CALL ctb_gravar_log_lote(nr_lote_contabil_p, 1, SQLERRM, nm_usuario_p);
                        END;
                end if;

                CALL agrupa_movimento_contabil(nr_lote_contabil_p, nm_usuario_p);
        end if;
end if;

if (ie_exclusao_p          = 'X') then
        ds_retorno_p                    := null;
elsif (coalesce(ds_retorno_p::text, '') = '') then

        update  lote_contabil
        set     ie_situacao     = 'A',
                dt_geracao_lote = clock_timestamp()
        where   nr_lote_contabil        = nr_lote_contabil_p;
        commit;

        if (ie_exclusao_p = 'S') then
                ds_retorno_p            := wheb_mensagem_pck.get_texto(165188);
                CALL ctb_gravar_log_lote( nr_lote_contabil_p, 2, '', nm_usuario_p);
        else
                ds_retorno_p            := wheb_mensagem_pck.get_texto(165187);
                CALL ctb_gravar_log_lote( nr_lote_contabil_p, 1, '', nm_usuario_p);
        end if;
        commit;
else
        rollback;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE contabiliza_repasse ( nr_lote_contabil_p bigint, nm_usuario_p text, ie_exclusao_p text, ds_retorno_p INOUT text) FROM PUBLIC;

