-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE analisar_duplicidade_pf ( nm_usuario_p text, ie_opcao_p text) AS $body$
DECLARE


ds_erro_w			varchar(4000);
qt_registros_w			bigint;
nr_vetor_w			bigint;
nr_seq_w_analise_w		w_analise_duplic_pf.nr_sequencia%type;


registro_erro    integer;

c_pessoa_duplic CURSOR FOR
	SELECT	cd_pessoa_fisica,
		dt_nascimento,
		substr(obter_filiacao(cd_pessoa_fisica, 'M'),1,60) nm_mae,
		substr(obter_filiacao(cd_pessoa_fisica, 'P'),1,60) nm_pai,
		nm_pessoa_fisica,
		nr_cpf,
		nr_identidade
	from	pessoa_fisica	a
	where	exists (SELECT	1
			from	pessoa_fisica	x
			where	a.nr_cpf	= x.nr_cpf
			and	(x.nr_cpf IS NOT NULL AND x.nr_cpf::text <> '')
			group by nr_cpf
			having count(*) > 1);

c_pessoa_duplic_w	c_pessoa_duplic%rowtype;

type vetor_w_analise_duplic_pf is table of w_analise_duplic_pf%RowType index by integer;
w_analise_duplic_pf_w	vetor_w_analise_duplic_pf;
BEGIN

delete
from	w_analise_duplic_pf
where	nm_usuario = nm_usuario_p;

commit;

nr_vetor_w	:= 0;

for reg_pessoa in c_pessoa_duplic loop
	begin
	nr_vetor_w	:= nr_vetor_w + 1;

	select	nextval('w_analise_duplic_pf_seq')
	into STRICT	nr_seq_w_analise_w
	;

	w_analise_duplic_pf_w[nr_vetor_w].nr_sequencia		:= nr_seq_w_analise_w;
	w_analise_duplic_pf_w[nr_vetor_w].cd_pessoa_fisica	:= reg_pessoa.cd_pessoa_fisica;
	w_analise_duplic_pf_w[nr_vetor_w].dt_nascimento		:= reg_pessoa.dt_nascimento;
	w_analise_duplic_pf_w[nr_vetor_w].nm_mae		:= reg_pessoa.nm_mae;
	w_analise_duplic_pf_w[nr_vetor_w].nm_pai		:= reg_pessoa.nm_pai;
	w_analise_duplic_pf_w[nr_vetor_w].nm_pessoa_fisica	:= reg_pessoa.nm_pessoa_fisica;
	w_analise_duplic_pf_w[nr_vetor_w].nr_cpf		:= reg_pessoa.nr_cpf;
	w_analise_duplic_pf_w[nr_vetor_w].nr_identidade		:= reg_pessoa.nr_identidade;
	w_analise_duplic_pf_w[nr_vetor_w].nm_usuario		:= nm_usuario_p;
	w_analise_duplic_pf_w[nr_vetor_w].dt_atualizacao	:= clock_timestamp();

	if (nr_vetor_w = 200) then
		begin
		forall m in w_analise_duplic_pf_w.first..w_analise_duplic_pf_w.last SAVE EXCEPTIONS
			insert into w_analise_duplic_pf values w_analise_duplic_pf_w(m);

		exception when SQLSTATE '50005' then

			FOR l IN 1..SQL%BULK_EXCEPTIONS.COUNT LOOP

				registro_erro	:= SQL%BULK_EXCEPTIONS[l].ERROR_INDEX;

				ds_erro_w	:= substr(SQLERRM(-(SQL%BULK_EXCEPTIONS[l].ERROR_CODE)),1,4000);

				w_analise_duplic_pf_w.delete;
				CALL wheb_mensagem_pck.exibir_mensagem_abort(184609, 'DS_ERRO_W=' || ds_erro_w);
			end loop;

			w_analise_duplic_pf_w.delete;
		end;

		commit;

		w_analise_duplic_pf_w.delete;
		nr_vetor_w	:= 0;
	end if;
	end;
end loop;

if (nr_vetor_w > 0) then
	begin
	-- insere em bloco os movimentos cont√°beis
	forall m in w_analise_duplic_pf_w.first..w_analise_duplic_pf_w.last SAVE EXCEPTIONS
		insert into w_analise_duplic_pf values w_analise_duplic_pf_w(m);

	exception when SQLSTATE '50005' then

		FOR l IN 1..SQL%BULK_EXCEPTIONS.COUNT LOOP

			registro_erro	:= SQL%BULK_EXCEPTIONS[l].ERROR_INDEX;

			ds_erro_w	:= substr(SQLERRM(-(SQL%BULK_EXCEPTIONS[l].ERROR_CODE)),1,4000);

			w_analise_duplic_pf_w.delete;
			CALL wheb_mensagem_pck.exibir_mensagem_abort(184609, 'DS_ERRO_W=' || ds_erro_w);
		end loop;

		w_analise_duplic_pf_w.delete;
	end;

	commit;
	w_analise_duplic_pf_w.delete;
	nr_vetor_w	:= 0;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE analisar_duplicidade_pf ( nm_usuario_p text, ie_opcao_p text) FROM PUBLIC;

