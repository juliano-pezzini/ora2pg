-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_obter_qt_diarias ( nr_seq_conta_p pls_conta.nr_sequencia%type, nr_seq_conta_proc_p pls_conta_proc.nr_sequencia%type, nr_seq_segurado_p pls_conta.nr_seq_segurado%type, dt_procedimento_p pls_conta_proc.dt_procedimento_referencia%type, dt_inicio_p pls_conta_proc.dt_procedimento_referencia%type, dt_final_p pls_conta_proc.dt_procedimento_referencia%type, ie_incidencia_psiquiatria_p pls_regra_coparticipacao.ie_incidencia_psiquiatria%type, ie_recurso_glosa_p text, qt_diarias_p INOUT pls_conta_proc.qt_procedimento%type, qt_diarias_cobradas_p INOUT pls_conta_coparticipacao.qt_liberada_copartic%type) AS $body$
DECLARE


-- Rotina criada para abstrair a complexidade e tamanho da busca
BEGIN


-- A rotina e dividida em duas partes, quando e recurso de glosa, e quando nao e.
-- Quando for recurso de glosa, para contar as diarias sera necessario incluir tambem o proprio procedimento que esta sendo testado, na contagem.
-- isso e necessario para os casos aonde e enviado a diaria de forma acumulada, e como a glosa que originou o recurso pode ser parcial, tem que contar
-- tambem o proprio proc. Para esse fim, a data retornada na function pls_obter_data_preco_item acaba sendo ignorada no where especifico do recurso
-- Toda alteracao em alguma consulta precisa ser verificado se necessita replicar para cada parte do if do recurso
if (coalesce(ie_recurso_glosa_p, 'N') = 'S') then


	select	sum(t.qt_procedimento),
		sum(t.qt_liberada_copartic)
	into STRICT	qt_diarias_p,
		qt_diarias_cobradas_p
	from (	SELECT	sum(a.qt_procedimento) qt_procedimento,
			sum(e.qt_liberada_copartic) qt_liberada_copartic								
		FROM pls_clinica d, pls_segurado c, pls_conta b, pls_conta_proc a
LEFT OUTER JOIN pls_conta_coparticipacao e ON (a.nr_sequencia = e.nr_seq_conta_proc)
WHERE a.nr_seq_conta			= b.nr_sequencia and b.nr_seq_segurado		= c.nr_sequencia  and c.nr_sequencia			= nr_seq_segurado_p and b.ie_status			= 'F' and a.nr_sequencia			<> nr_seq_conta_proc_p and a.dt_procedimento_referencia	< dt_procedimento_p and a.ie_tipo_despesa		= '3' and b.nr_seq_clinica		= d.nr_sequencia and b.nr_sequencia			!= nr_seq_conta_p and pls_obter_data_preco_item(a.nr_sequencia, 'P') between coalesce(dt_inicio_p,pls_obter_data_preco_item(a.nr_sequencia, 'P')) and coalesce(dt_final_p,pls_obter_data_preco_item(a.nr_sequencia, 'P')) and ie_incidencia_psiquiatria_p	= 'A' -- regra aceita todas as diarias
union all

		-- feito o union para pegar a propria conta, pois neste momento ela provavelmente n?o estar? fechada.
		SELECT	sum(a.qt_procedimento) qt_procedimento,
			sum(e.qt_liberada_copartic) qt_liberada_copartic
		FROM pls_clinica d, pls_segurado c, pls_conta b, pls_conta_proc a
LEFT OUTER JOIN pls_conta_coparticipacao e ON (a.nr_sequencia = e.nr_seq_conta_proc)
WHERE a.nr_seq_conta			= b.nr_sequencia and b.nr_seq_segurado		= c.nr_sequencia  and c.nr_sequencia			= nr_seq_segurado_p and b.ie_status			!= 'D' -- deve ignorar o status cancelado apenas, pq ja olha a conta atual
  and a.nr_sequencia			<> nr_seq_conta_proc_p and a.dt_procedimento_referencia	< dt_procedimento_p and a.ie_tipo_despesa		= '3' and b.nr_seq_clinica		= d.nr_sequencia and b.nr_sequencia			= nr_seq_conta_p and pls_obter_data_preco_item(a.nr_sequencia, 'P') between coalesce(dt_inicio_p,pls_obter_data_preco_item(a.nr_sequencia, 'P')) and coalesce(dt_final_p,pls_obter_data_preco_item(a.nr_sequencia, 'P')) and ie_incidencia_psiquiatria_p	= 'A' -- regra aceita todas as diarias
 
union all

		-- feito o union para pegar a propria conta e proprio item, para os casos de recurso de glosa
		select	sum(a.qt_procedimento) qt_procedimento,
			sum(e.qt_liberada_copartic) qt_liberada_copartic
		FROM pls_clinica d, pls_segurado c, pls_conta b, pls_conta_proc a
LEFT OUTER JOIN pls_conta_coparticipacao e ON (a.nr_sequencia = e.nr_seq_conta_proc)
WHERE a.nr_seq_conta			= b.nr_sequencia and b.nr_seq_segurado		= c.nr_sequencia  and c.nr_sequencia			= nr_seq_segurado_p and b.ie_status			!= 'D' -- deve ignorar o status cancelado apenas, pq ja olha a conta atual
  and a.nr_sequencia			= nr_seq_conta_proc_p and a.ie_tipo_despesa		= '3' and b.nr_seq_clinica		= d.nr_sequencia and b.nr_sequencia			= nr_seq_conta_p and ie_incidencia_psiquiatria_p	= 'A' -- regra aceita todas as diarias
 
union all

		select	sum(a.qt_procedimento) qt_procedimento,
			sum(e.qt_liberada_copartic) qt_liberada_copartic								
		FROM pls_clinica d, pls_segurado c, pls_conta b, pls_conta_proc a
LEFT OUTER JOIN pls_conta_coparticipacao e ON (a.nr_sequencia = e.nr_seq_conta_proc)
WHERE a.nr_seq_conta			= b.nr_sequencia and b.nr_seq_segurado		= c.nr_sequencia  and c.nr_sequencia			= nr_seq_segurado_p and b.ie_status			= 'F' and a.nr_sequencia			<> nr_seq_conta_proc_p and a.dt_procedimento_referencia	< dt_procedimento_p and a.ie_tipo_despesa		= '3' and b.nr_seq_clinica		= d.nr_sequencia and b.nr_sequencia			!= nr_seq_conta_p and pls_obter_data_preco_item(a.nr_sequencia, 'P') between coalesce(dt_inicio_p,pls_obter_data_preco_item(a.nr_sequencia, 'P')) and coalesce(dt_final_p,pls_obter_data_preco_item(a.nr_sequencia, 'P')) and ie_incidencia_psiquiatria_p	= 'N' -- regra aceita  somente NAO pisciquiatria
  and d.cd_tiss			!= '5'
		 
union all

		-- feito o union para pegar a propria conta, pois neste momento ela provavelmente n?o estar? fechada.
		select	sum(a.qt_procedimento) qt_procedimento,
			sum(e.qt_liberada_copartic) qt_liberada_copartic
		FROM pls_clinica d, pls_segurado c, pls_conta b, pls_conta_proc a
LEFT OUTER JOIN pls_conta_coparticipacao e ON (a.nr_sequencia = e.nr_seq_conta_proc)
WHERE a.nr_seq_conta			= b.nr_sequencia and b.nr_seq_segurado		= c.nr_sequencia  and c.nr_sequencia			= nr_seq_segurado_p and b.ie_status			!= 'D' -- deve ignorar o status cancelado apenas, pq ja olha a conta atual
  and a.nr_sequencia			<> nr_seq_conta_proc_p and a.dt_procedimento_referencia	< dt_procedimento_p and a.ie_tipo_despesa		= '3' and b.nr_seq_clinica		= d.nr_sequencia and b.nr_sequencia			= nr_seq_conta_p and pls_obter_data_preco_item(a.nr_sequencia, 'P') between coalesce(dt_inicio_p,pls_obter_data_preco_item(a.nr_sequencia, 'P')) and coalesce(dt_final_p,pls_obter_data_preco_item(a.nr_sequencia, 'P')) and ie_incidencia_psiquiatria_p	= 'N' -- regra aceita somente NAO pisciquiatria
  and d.cd_tiss			!= '5'
		 
union all

		-- feito o union para pegar a propria conta e procedimento para os casos de recurso de glosa
		select	sum(a.qt_procedimento) qt_procedimento,
			sum(e.qt_liberada_copartic) qt_liberada_copartic
		FROM pls_clinica d, pls_segurado c, pls_conta b, pls_conta_proc a
LEFT OUTER JOIN pls_conta_coparticipacao e ON (a.nr_sequencia = e.nr_seq_conta_proc)
WHERE a.nr_seq_conta			= b.nr_sequencia and b.nr_seq_segurado		= c.nr_sequencia  and c.nr_sequencia			= nr_seq_segurado_p and b.ie_status			!= 'D' -- deve ignorar o status cancelado apenas, pq ja olha a conta atual
  and a.nr_sequencia			= nr_seq_conta_proc_p and a.ie_tipo_despesa		= '3' and b.nr_seq_clinica		= d.nr_sequencia and b.nr_sequencia			= nr_seq_conta_p and ie_incidencia_psiquiatria_p	= 'N' -- regra aceita somente NAO pisciquiatria
  and d.cd_tiss			!= '5'
		 
union all

		select	sum(a.qt_procedimento) qt_procedimento,
			sum(e.qt_liberada_copartic) qt_liberada_copartic								
		FROM pls_clinica d, pls_segurado c, pls_conta b, pls_conta_proc a
LEFT OUTER JOIN pls_conta_coparticipacao e ON (a.nr_sequencia = e.nr_seq_conta_proc)
WHERE a.nr_seq_conta			= b.nr_sequencia and b.nr_seq_segurado		= c.nr_sequencia  and c.nr_sequencia			= nr_seq_segurado_p and b.ie_status			= 'F' and a.nr_sequencia			<> nr_seq_conta_proc_p and a.dt_procedimento_referencia	< dt_procedimento_p and a.ie_tipo_despesa		= '3' and b.nr_seq_clinica		= d.nr_sequencia and b.nr_sequencia			!= nr_seq_conta_p and pls_obter_data_preco_item(a.nr_sequencia, 'P') between coalesce(dt_inicio_p,pls_obter_data_preco_item(a.nr_sequencia, 'P')) and coalesce(dt_final_p,pls_obter_data_preco_item(a.nr_sequencia, 'P')) and ie_incidencia_psiquiatria_p	= 'S' -- regra aceita somente pisciquiatria
  and d.cd_tiss			= '5'
		 
union all

		-- feito o union para pegar a propria conta, pois neste momento ela provavelmente n?o estar? fechada.
		select	sum(a.qt_procedimento) qt_procedimento,
			sum(e.qt_liberada_copartic) qt_liberada_copartic
		FROM pls_clinica d, pls_segurado c, pls_conta b, pls_conta_proc a
LEFT OUTER JOIN pls_conta_coparticipacao e ON (a.nr_sequencia = e.nr_seq_conta_proc)
WHERE a.nr_seq_conta			= b.nr_sequencia and b.nr_seq_segurado		= c.nr_sequencia  and c.nr_sequencia			= nr_seq_segurado_p and b.ie_status			!= 'D' -- deve ignorar o status cancelado apenas, pq ja olha a conta atual
  and a.nr_sequencia			<> nr_seq_conta_proc_p and a.dt_procedimento_referencia	< dt_procedimento_p and a.ie_tipo_despesa		= '3' and b.nr_seq_clinica		= d.nr_sequencia and b.nr_sequencia			= nr_seq_conta_p and pls_obter_data_preco_item(a.nr_sequencia, 'P') between coalesce(dt_inicio_p,pls_obter_data_preco_item(a.nr_sequencia, 'P')) and coalesce(dt_final_p,pls_obter_data_preco_item(a.nr_sequencia, 'P')) and ie_incidencia_psiquiatria_p	= 'S' -- regra aceita somente pisciquiatria
  and d.cd_tiss			= '5'
		 
union all

		-- feito o union para pegar a propria conta e procedimento, para o caso de recurso de glosa
		select	sum(a.qt_procedimento) qt_procedimento,
			sum(e.qt_liberada_copartic) qt_liberada_copartic
		FROM pls_clinica d, pls_segurado c, pls_conta b, pls_conta_proc a
LEFT OUTER JOIN pls_conta_coparticipacao e ON (a.nr_sequencia = e.nr_seq_conta_proc)
WHERE a.nr_seq_conta			= b.nr_sequencia and b.nr_seq_segurado		= c.nr_sequencia  and c.nr_sequencia			= nr_seq_segurado_p and b.ie_status			!= 'D' -- deve ignorar o status cancelado apenas, pq ja olha a conta atual
  and a.nr_sequencia			= nr_seq_conta_proc_p and a.ie_tipo_despesa		= '3' and b.nr_seq_clinica		= d.nr_sequencia and b.nr_sequencia			= nr_seq_conta_p and ie_incidencia_psiquiatria_p	= 'S' -- regra aceita somente pisciquiatria
  and d.cd_tiss			= '5' ) t;


else

	select	sum(t.qt_procedimento),
		sum(t.qt_liberada_copartic)
	into STRICT	qt_diarias_p,
		qt_diarias_cobradas_p
	from (	SELECT	sum(a.qt_procedimento) qt_procedimento,
			sum(e.qt_liberada_copartic) qt_liberada_copartic								
		FROM pls_clinica d, pls_segurado c, pls_conta b, pls_conta_proc a
LEFT OUTER JOIN pls_conta_coparticipacao e ON (a.nr_sequencia = e.nr_seq_conta_proc)
WHERE a.nr_seq_conta			= b.nr_sequencia and b.nr_seq_segurado		= c.nr_sequencia  and c.nr_sequencia			= nr_seq_segurado_p and b.ie_status			= 'F' and a.nr_sequencia			<> nr_seq_conta_proc_p and a.dt_procedimento_referencia	< dt_procedimento_p and a.ie_tipo_despesa		= '3' and b.nr_seq_clinica		= d.nr_sequencia and b.nr_sequencia			!= nr_seq_conta_p and pls_obter_data_preco_item(a.nr_sequencia, 'P') between coalesce(dt_inicio_p,pls_obter_data_preco_item(a.nr_sequencia, 'P')) and coalesce(dt_final_p,pls_obter_data_preco_item(a.nr_sequencia, 'P')) and ie_incidencia_psiquiatria_p	= 'A' -- regra aceita todas as diarias
union all

		-- feito o union para pegar a propria conta, pois neste momento ela provavelmente n?o estar? fechada.
		SELECT	sum(a.qt_procedimento) qt_procedimento,
			sum(e.qt_liberada_copartic) qt_liberada_copartic
		FROM pls_clinica d, pls_segurado c, pls_conta b, pls_conta_proc a
LEFT OUTER JOIN pls_conta_coparticipacao e ON (a.nr_sequencia = e.nr_seq_conta_proc)
WHERE a.nr_seq_conta			= b.nr_sequencia and b.nr_seq_segurado		= c.nr_sequencia  and c.nr_sequencia			= nr_seq_segurado_p and b.ie_status			!= 'D' -- deve ignorar o status cancelado apenas, pq ja olha a conta atual
  and a.nr_sequencia			<> nr_seq_conta_proc_p and a.dt_procedimento_referencia	< dt_procedimento_p and a.ie_tipo_despesa		= '3' and b.nr_seq_clinica		= d.nr_sequencia and b.nr_sequencia			= nr_seq_conta_p and pls_obter_data_preco_item(a.nr_sequencia, 'P') between coalesce(dt_inicio_p,pls_obter_data_preco_item(a.nr_sequencia, 'P')) and coalesce(dt_final_p,pls_obter_data_preco_item(a.nr_sequencia, 'P')) and ie_incidencia_psiquiatria_p	= 'A' -- regra aceita todas as diarias
 
union all

		select	sum(a.qt_procedimento) qt_procedimento,
			sum(e.qt_liberada_copartic) qt_liberada_copartic								
		FROM pls_clinica d, pls_segurado c, pls_conta b, pls_conta_proc a
LEFT OUTER JOIN pls_conta_coparticipacao e ON (a.nr_sequencia = e.nr_seq_conta_proc)
WHERE a.nr_seq_conta			= b.nr_sequencia and b.nr_seq_segurado		= c.nr_sequencia  and c.nr_sequencia			= nr_seq_segurado_p and b.ie_status			= 'F' and a.nr_sequencia			<> nr_seq_conta_proc_p and a.dt_procedimento_referencia	< dt_procedimento_p and a.ie_tipo_despesa		= '3' and b.nr_seq_clinica		= d.nr_sequencia and b.nr_sequencia			!= nr_seq_conta_p and pls_obter_data_preco_item(a.nr_sequencia, 'P') between coalesce(dt_inicio_p,pls_obter_data_preco_item(a.nr_sequencia, 'P')) and coalesce(dt_final_p,pls_obter_data_preco_item(a.nr_sequencia, 'P')) and ie_incidencia_psiquiatria_p	= 'N' -- regra aceita  somente NAO pisciquiatria
  and d.cd_tiss			!= '5'
		 
union all

		-- feito o union para pegar a propria conta, pois neste momento ela provavelmente n?o estar? fechada.
		select	sum(a.qt_procedimento) qt_procedimento,
			sum(e.qt_liberada_copartic) qt_liberada_copartic
		FROM pls_clinica d, pls_segurado c, pls_conta b, pls_conta_proc a
LEFT OUTER JOIN pls_conta_coparticipacao e ON (a.nr_sequencia = e.nr_seq_conta_proc)
WHERE a.nr_seq_conta			= b.nr_sequencia and b.nr_seq_segurado		= c.nr_sequencia  and c.nr_sequencia			= nr_seq_segurado_p and b.ie_status			!= 'D' -- deve ignorar o status cancelado apenas, pq ja olha a conta atual
  and a.nr_sequencia			<> nr_seq_conta_proc_p and a.dt_procedimento_referencia	< dt_procedimento_p and a.ie_tipo_despesa		= '3' and b.nr_seq_clinica		= d.nr_sequencia and b.nr_sequencia			= nr_seq_conta_p and pls_obter_data_preco_item(a.nr_sequencia, 'P') between coalesce(dt_inicio_p,pls_obter_data_preco_item(a.nr_sequencia, 'P')) and coalesce(dt_final_p,pls_obter_data_preco_item(a.nr_sequencia, 'P')) and ie_incidencia_psiquiatria_p	= 'N' -- regra aceita somente NAO pisciquiatria
  and d.cd_tiss			!= '5'
		 
union all

		select	sum(a.qt_procedimento) qt_procedimento,
			sum(e.qt_liberada_copartic) qt_liberada_copartic								
		FROM pls_clinica d, pls_segurado c, pls_conta b, pls_conta_proc a
LEFT OUTER JOIN pls_conta_coparticipacao e ON (a.nr_sequencia = e.nr_seq_conta_proc)
WHERE a.nr_seq_conta			= b.nr_sequencia and b.nr_seq_segurado		= c.nr_sequencia  and c.nr_sequencia			= nr_seq_segurado_p and b.ie_status			= 'F' and a.nr_sequencia			<> nr_seq_conta_proc_p and a.dt_procedimento_referencia	< dt_procedimento_p and a.ie_tipo_despesa		= '3' and b.nr_seq_clinica		= d.nr_sequencia and b.nr_sequencia			!= nr_seq_conta_p and pls_obter_data_preco_item(a.nr_sequencia, 'P') between coalesce(dt_inicio_p,pls_obter_data_preco_item(a.nr_sequencia, 'P')) and coalesce(dt_final_p,pls_obter_data_preco_item(a.nr_sequencia, 'P')) and ie_incidencia_psiquiatria_p	= 'S' -- regra aceita somente pisciquiatria
  and d.cd_tiss			= '5'
		 
union all

		-- feito o union para pegar a propria conta, pois neste momento ela provavelmente n?o estar? fechada.
		select	sum(a.qt_procedimento) qt_procedimento,
			sum(e.qt_liberada_copartic) qt_liberada_copartic
		FROM pls_clinica d, pls_segurado c, pls_conta b, pls_conta_proc a
LEFT OUTER JOIN pls_conta_coparticipacao e ON (a.nr_sequencia = e.nr_seq_conta_proc)
WHERE a.nr_seq_conta			= b.nr_sequencia and b.nr_seq_segurado		= c.nr_sequencia  and c.nr_sequencia			= nr_seq_segurado_p and b.ie_status			!= 'D' -- deve ignorar o status cancelado apenas, pq ja olha a conta atual
  and a.nr_sequencia			<> nr_seq_conta_proc_p and a.dt_procedimento_referencia	< dt_procedimento_p and a.ie_tipo_despesa		= '3' and b.nr_seq_clinica		= d.nr_sequencia and b.nr_sequencia			= nr_seq_conta_p and pls_obter_data_preco_item(a.nr_sequencia, 'P') between coalesce(dt_inicio_p,pls_obter_data_preco_item(a.nr_sequencia, 'P')) and coalesce(dt_final_p,pls_obter_data_preco_item(a.nr_sequencia, 'P')) and ie_incidencia_psiquiatria_p	= 'S' -- regra aceita somente pisciquiatria
  and d.cd_tiss			= '5' ) t;


end if;



end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_obter_qt_diarias ( nr_seq_conta_p pls_conta.nr_sequencia%type, nr_seq_conta_proc_p pls_conta_proc.nr_sequencia%type, nr_seq_segurado_p pls_conta.nr_seq_segurado%type, dt_procedimento_p pls_conta_proc.dt_procedimento_referencia%type, dt_inicio_p pls_conta_proc.dt_procedimento_referencia%type, dt_final_p pls_conta_proc.dt_procedimento_referencia%type, ie_incidencia_psiquiatria_p pls_regra_coparticipacao.ie_incidencia_psiquiatria%type, ie_recurso_glosa_p text, qt_diarias_p INOUT pls_conta_proc.qt_procedimento%type, qt_diarias_cobradas_p INOUT pls_conta_coparticipacao.qt_liberada_copartic%type) FROM PUBLIC;

