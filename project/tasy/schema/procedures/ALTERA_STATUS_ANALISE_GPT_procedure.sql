-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE altera_status_analise_gpt ( nr_atendimento_p bigint, cd_pessoa_fisica_p text, cd_resp_analise_p text, ie_tipo_usuario_p text, ie_acao_p text, nm_usuario_p text, ds_justificativa_p text default null, ie_lib_farm_p text default null, ie_retorno_cpoe_p text default null, qt_horas_quimio_p bigint default 0) AS $body$
DECLARE


dt_inicio_analise_w 		timestamp;
nr_sequencia_w				bigint;
nm_resp_analise_w			varchar(15);
ie_lib_pendente_w			varchar(1);
ie_commit_w					varchar(1) := 'N';
desfazer_inicio_analise_w 	varchar(1) := 'N';
nr_prescr_analise_w			prescr_medica.nr_prescricao%type;
nr_prescricao_w				prescr_medica.nr_prescricao%type;
ds_alteracao_rastre_w		log_tasy.ds_log%type;
ie_info_rastre_prescr_w		varchar(1);
cd_estabelecimento_ativo_w	estabelecimento.cd_estabelecimento%type;

c01 CURSOR FOR
SELECT	nr_prescricao
from	prescr_medica
where	nr_atendimento = nr_atendimento_p
and		cd_pessoa_fisica = cd_pessoa_fisica_p
and		ie_tipo_usuario_p = 'F'
and 	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
and 	((coalesce(ie_lib_farm_p,'S') = 'N') or (coalesce(ie_lib_farm,'N') = 'S')) 
and 	coalesce(dt_liberacao_farmacia::text, '') = ''
and		((nm_usuario_analise_farm	= nm_usuario_p AND dt_inicio_analise_farm = dt_inicio_analise_w) or (desfazer_inicio_analise_w = 'S'))
and 	dt_prescricao > (clock_timestamp() - interval '7 days')

union

SELECT	nr_prescricao
from	prescr_medica
where	cd_pessoa_fisica = cd_pessoa_fisica_p
and		coalesce(nr_atendimento::text, '') = ''
and		ie_tipo_usuario_p = 'F'
and 	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '') 
and 	((coalesce(ie_lib_farm_p,'S') = 'N') or (coalesce(ie_lib_farm,'N') = 'S'))
and 	coalesce(dt_liberacao_farmacia::text, '') = ''
and		((nm_usuario_analise_farm	= nm_usuario_p AND dt_inicio_analise_farm = dt_inicio_analise_w) or (desfazer_inicio_analise_w = 'S'))
and 	dt_prescricao > (clock_timestamp() - interval '7 days');

c02 CURSOR FOR
SELECT	nr_prescricao
from	prescr_medica
where	nr_atendimento = nr_atendimento_p
and		cd_pessoa_fisica = cd_pessoa_fisica_p
and		(dt_liberacao_medico IS NOT NULL AND dt_liberacao_medico::text <> '')
and		coalesce(dt_liberacao::text, '') = ''
and		coalesce(dt_inicio_analise_farm::text, '') = ''
and		coalesce(nm_usuario_analise_farm::text, '') = ''
and 	dt_prescricao > (clock_timestamp() - interval '7 days')

union

SELECT	nr_prescricao
from	prescr_medica
where	cd_pessoa_fisica = cd_pessoa_fisica_p
and		coalesce(nr_atendimento::text, '') = ''
and		(dt_liberacao_medico IS NOT NULL AND dt_liberacao_medico::text <> '') 
and		coalesce(dt_liberacao::text, '') = ''
and		coalesce(dt_inicio_analise_farm::text, '') = ''
and		coalesce(nm_usuario_analise_farm::text, '') = ''
and 	dt_prescricao > (clock_timestamp() - interval '7 days');

c03 CURSOR FOR
SELECT	a.nr_prescricao
from	prescr_medica a,
		prescr_medica_compl b
where	a.nr_prescricao = b.nr_prescricao
and		a.nr_atendimento = nr_atendimento_p
and		a.cd_pessoa_fisica = cd_pessoa_fisica_p
and		coalesce(a.dt_liberacao::text, '') = ''
and		(a.dt_liberacao_medico IS NOT NULL AND a.dt_liberacao_medico::text <> '')
and		b.nm_usuario_analise_enf	= nm_usuario_p
and		b.dt_inicio_analise_enf = dt_inicio_analise_w
and 	dt_prescricao > (clock_timestamp() - interval '7 days')

union

SELECT	a.nr_prescricao
from	prescr_medica a,
		prescr_medica_compl b
where	a.nr_prescricao = b.nr_prescricao
and		coalesce(a.nr_atendimento::text, '') = ''
and		a.cd_pessoa_fisica = cd_pessoa_fisica_p
and		coalesce(a.dt_liberacao::text, '') = ''
and		(a.dt_liberacao_medico IS NOT NULL AND a.dt_liberacao_medico::text <> '') 
and		b.nm_usuario_analise_enf	= nm_usuario_p
and		b.dt_inicio_analise_enf = dt_inicio_analise_w
and 	dt_prescricao > (clock_timestamp() - interval '7 days');


BEGIN

if (obter_se_usuario_medico(nm_usuario_p) = 'S') then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(1073442);
end if;	

if (coalesce(obter_pf_usuario(nm_usuario_p, 'C')::text, '') = '') then
	-- O usuario utilizado nao possui numero de pessoa fisica vinculado...
	CALL wheb_mensagem_pck.exibir_mensagem_abort(1194237);
end if;

ie_info_rastre_prescr_w 	:= 'N';

cd_estabelecimento_ativo_w := wheb_usuario_pck.get_cd_estabelecimento;

desfazer_inicio_analise_w := coalesce(Obter_Valor_Param_Usuario(252,21, Obter_perfil_Ativo, wheb_usuario_pck.get_nm_usuario, coalesce(cd_estabelecimento_ativo_w, 0)),'N');

ie_info_rastre_prescr_w := obter_se_info_rastre_prescr('AG', nm_usuario_p, wheb_usuario_pck.get_cd_perfil, cd_estabelecimento_ativo_w);

if (ie_info_rastre_prescr_w = 'S') then
	ds_alteracao_rastre_w := substr('01-Gerar log Rastreabilidade Alteracoes / altera_status_analise_gpt'|| pls_util_pck.enter_w ||
		' - nr_atendimento_p: ' || nr_atendimento_p || pls_util_pck.enter_w ||
		' - cd_pessoa_fisica_p: ' || cd_pessoa_fisica_p || pls_util_pck.enter_w ||
		' - cd_resp_analise_p: ' || cd_resp_analise_p || pls_util_pck.enter_w ||
		' - ie_tipo_usuario_p: ' || ie_tipo_usuario_p || pls_util_pck.enter_w ||
		' - ie_acao_p: ' || ie_acao_p || pls_util_pck.enter_w ||
		' - nm_usuario_p: ' || nm_usuario_p || pls_util_pck.enter_w ||
		' - ds_justificativa_p: ' || ds_justificativa_p || pls_util_pck.enter_w ||
		' - ie_lib_farm_p: ' || ie_lib_farm_p || pls_util_pck.enter_w ||
		' - ie_retorno_cpoe_p: ' || ie_retorno_cpoe_p || pls_util_pck.enter_w ||
		' - qt_horas_quimio_p: ' || qt_horas_quimio_p || pls_util_pck.enter_w ||
		' - ds_stack: '||substr(dbms_utility.format_call_stack,1,1800), 1, 2000);

	CALL gravar_log_tasy(cd_log_p => 50, ds_log_p => ds_alteracao_rastre_w, nm_usuario_p => nm_usuario_p);
end if;

select 	max(nr_sequencia),
	max(nm_resp_analise),
	max(dt_inicio_analise)
into STRICT	nr_sequencia_w,
	nm_resp_analise_w,
	dt_inicio_analise_w
from 	gpt_hist_analise_plano
where	((nr_atendimento = nr_atendimento_p) or (cd_pessoa_fisica = cd_pessoa_fisica_p and coalesce(nr_atendimento::text, '') = ''))
and	coalesce(dt_fim_analise::text, '') = ''
and	ie_tipo_usuario = ie_tipo_usuario_p;

if	(nr_sequencia_w > 0 and (nm_resp_analise_w <> nm_usuario_p AND desfazer_inicio_analise_w <> 'S')) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(718533);
else	
	begin
		if	((coalesce(nr_sequencia_w,0) = 0) and ((upper(ie_acao_p) = 'I') or (ie_retorno_cpoe_p = 'S'))) then
			begin
				begin

					insert into gpt_hist_analise_plano(
						nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						dt_inicio_analise,
						nm_resp_analise,
						ie_tipo_usuario,
						nr_atendimento,
						cd_pessoa_fisica,
						cd_resp_analise)
					values (
						nextval('gpt_hist_analise_plano_seq'),
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						ie_tipo_usuario_p,
						nr_atendimento_p,
						cd_pessoa_fisica_p,
						cd_resp_analise_p);

				exception when others then
					ds_alteracao_rastre_w	:= substr(	'02-Exception altera_status_analise_gpt: '||sqlerrm(SQLSTATE)|| pls_util_pck.enter_w ||
														' - ds_stack: '||substr(dbms_utility.format_call_stack,1,1800)|| pls_util_pck.enter_w ||
														' - nr_atendimento_p: '||nr_atendimento_p, 1, 2000);
					CALL gravar_log_tasy(cd_log_p => 50, ds_log_p => ds_alteracao_rastre_w, nm_usuario_p => nm_usuario_p);
				end;

				if (ie_tipo_usuario_p = 'F') then
					begin

						update	prescr_medica
						set		dt_inicio_analise_farm = clock_timestamp(),
								nm_usuario_analise_farm = nm_usuario_p
						where	((nr_atendimento = nr_atendimento_p) or (cd_pessoa_fisica = cd_pessoa_fisica_p and coalesce(nr_atendimento::text, '') = ''))
						and		cd_pessoa_fisica = cd_pessoa_fisica_p
						and		(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
						and 	((coalesce(ie_lib_farm_p,'S') = 'N') or (coalesce(ie_lib_farm,'N') = 'S'))
						and 	coalesce(dt_liberacao_farmacia::text, '') = ''
						and		coalesce(dt_inicio_analise_farm::text, '') = ''
						and		coalesce(nm_usuario_analise_farm::text, '') = ''
						and 	cd_funcao_origem not in (924,950)
						and		((dt_prescricao > (clock_timestamp() - interval '7 days') and coalesce(nr_seq_atend::text, '') = '') or
								 ((nr_seq_atend IS NOT NULL AND nr_seq_atend::text <> '') and dt_prescricao between inicio_dia(clock_timestamp() - interval '3 days') and clock_timestamp() + (qt_horas_quimio_p / 24)));

					exception when others then
						ds_alteracao_rastre_w	:= substr(	'03-Exception altera_status_analise_gpt: '||sqlerrm(SQLSTATE)|| pls_util_pck.enter_w ||
															' - ds_stack: '||substr(dbms_utility.format_call_stack,1,1800)|| pls_util_pck.enter_w ||
															' - nr_atendimento_p: '||nr_atendimento_p, 1, 2000);
						CALL gravar_log_tasy(cd_log_p => 50, ds_log_p => ds_alteracao_rastre_w, nm_usuario_p => nm_usuario_p);
					end;

				elsif (ie_tipo_usuario_p = 'E') then
					begin
						open c02;
						loop
						fetch c02 into
							nr_prescricao_w;
						EXIT WHEN NOT FOUND; /* apply on c02 */
							begin

								CALL gerar_prescr_medica_compl(	nr_prescricao_w, nm_usuario_p, nm_usuario_p, clock_timestamp());

							exception when others then
								ds_alteracao_rastre_w	:= substr(	'04-Exception altera_status_analise_gpt: '||sqlerrm(SQLSTATE)|| pls_util_pck.enter_w ||
																	' - ds_stack: '||substr(dbms_utility.format_call_stack,1,1800)|| pls_util_pck.enter_w ||
																	' - nr_atendimento_p: '||nr_atendimento_p, 1, 2000);
								CALL gravar_log_tasy(cd_log_p => 50, ds_log_p => ds_alteracao_rastre_w, nm_usuario_p => nm_usuario_p);
							end;
						end loop;
						close c02;
					end;
				end if;
			end;
		elsif (upper(ie_acao_p) = 'F') then
			begin
				if (ie_tipo_usuario_p = 'F') then

					/*Condicao similar a consulta de codigo 728796, utilizada para obter as prescricoes a serem liberadas pela farmacia*/

					select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
					into STRICT	ie_lib_pendente_w
					from	prescr_material a left join prescr_medica b ON (a.nr_prescricao = b.nr_prescricao)
					where	((coalesce(dt_lib_farmacia::text, '') = '')	and (dt_lib_enfermagem IS NOT NULL AND dt_lib_enfermagem::text <> '') and
								((coalesce(ie_lib_farm_p,'S') = 'N') or (coalesce(ie_lib_farm,'N') = 'S')) and (coalesce(dt_liberacao_farmacia::text, '') = '') and (dt_inicio_analise_farm IS NOT NULL AND dt_inicio_analise_farm::text <> '') and (nm_usuario_analise_farm = nm_usuario_p))
					and		(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '')
					and		((nr_atendimento = nr_atendimento_p) or (cd_pessoa_fisica = cd_pessoa_fisica_p and coalesce(nr_atendimento::text, '') = ''))
					and		((dt_prescricao between inicio_dia(clock_timestamp() - interval '3 days') and fim_dia(clock_timestamp())) 
							or ((nr_seq_atend IS NOT NULL AND nr_seq_atend::text <> '') and dt_prescricao between inicio_dia(clock_timestamp() - interval '3 days') and clock_timestamp() + (qt_horas_quimio_p / 24)))
					and		coalesce(b.dt_suspensao::text, '') = ''
					and		b.cd_funcao_origem not in (924, 950);

				end if;

				if (ie_lib_pendente_w = 'S') then					
					CALL wheb_mensagem_pck.exibir_mensagem_abort(810132);					
				else	
					begin

						update 	gpt_hist_analise_plano
						set		dt_fim_analise = clock_timestamp()
						where	nr_sequencia = nr_sequencia_w;

					exception when others then
						ds_alteracao_rastre_w	:= substr(	'05-Exception altera_status_analise_gpt: '||sqlerrm(SQLSTATE)|| pls_util_pck.enter_w ||
															' - ds_stack: '||substr(dbms_utility.format_call_stack,1,1800)|| pls_util_pck.enter_w ||
															' - nr_atendimento_p: '||nr_atendimento_p, 1, 2000);
						CALL gravar_log_tasy(cd_log_p => 50, ds_log_p => ds_alteracao_rastre_w, nm_usuario_p => nm_usuario_p);
					end;
				end if;
			end;
		elsif (upper(ie_acao_p) = 'D') then
			begin
				begin

					delete from gpt_hist_analise_plano
					where	nr_sequencia = nr_sequencia_w;

				exception when others then
					ds_alteracao_rastre_w	:= substr(	'06-Exception altera_status_analise_gpt: '||sqlerrm(SQLSTATE)|| pls_util_pck.enter_w ||
														' - ds_stack: '||substr(dbms_utility.format_call_stack,1,1800)|| pls_util_pck.enter_w ||
														' - nr_atendimento_p: '||nr_atendimento_p, 1, 2000);
					CALL gravar_log_tasy(cd_log_p => 50, ds_log_p => ds_alteracao_rastre_w, nm_usuario_p => nm_usuario_p);
				end;

				if (ie_tipo_usuario_p = 'F') then				

					open c01;
					loop
					fetch c01 into
						nr_prescr_analise_w;
					EXIT WHEN NOT FOUND; /* apply on c01 */
					begin
						begin

							update	prescr_medica
							set		dt_inicio_analise_farm 		 = NULL,
									nm_usuario_analise_farm 	 = NULL
							where	nr_prescricao 				= nr_prescr_analise_w;

						exception when others then
							ds_alteracao_rastre_w	:= substr(	'07-Exception altera_status_analise_gpt: '||sqlerrm(SQLSTATE)|| pls_util_pck.enter_w ||
																' - ds_stack: '||substr(dbms_utility.format_call_stack,1,1800)|| pls_util_pck.enter_w ||
																' - nr_atendimento_p: '||nr_atendimento_p|| pls_util_pck.enter_w ||
																' - nr_prescr_analise_w: '||nr_prescr_analise_w, 1, 2000);
							CALL gravar_log_tasy(cd_log_p => 50, ds_log_p => ds_alteracao_rastre_w, nm_usuario_p => nm_usuario_p);
						end;

						begin

							insert into log_analise_prescr(
								nr_sequencia,
								dt_atualizacao,
								nm_usuario,
								nr_prescricao,
								ie_acao,
								dt_acao,
								nm_usuario_acao,
								ds_motivo_acao)
							values (nextval('log_analise_prescr_seq'),
								clock_timestamp(),
								nm_usuario_p,
								nr_prescr_analise_w,
								'D',
								clock_timestamp(),
								nm_usuario_p,
								ds_justificativa_p);

						exception when others then
							ds_alteracao_rastre_w	:= substr(	'08-Exception altera_status_analise_gpt: '||sqlerrm(SQLSTATE)|| pls_util_pck.enter_w ||
																' - ds_stack: '||substr(dbms_utility.format_call_stack,1,1800)|| pls_util_pck.enter_w ||
																' - nr_atendimento_p: '||nr_atendimento_p|| pls_util_pck.enter_w ||
																' - nr_prescr_analise_w: '||nr_prescr_analise_w, 1, 2000);
							CALL gravar_log_tasy(cd_log_p => 50, ds_log_p => ds_alteracao_rastre_w, nm_usuario_p => nm_usuario_p);
						end;

					end;
					end loop;
					close c01;

				elsif (ie_tipo_usuario_p = 'E') then
					
					open c03;
					loop
					fetch c03 into
						nr_prescricao_w;
					EXIT WHEN NOT FOUND; /* apply on c03 */
						begin

						begin

							update	prescr_medica_compl
							set		dt_inicio_analise_enf  = NULL,
									nm_usuario_analise_enf  = NULL
							where	nr_prescricao = nr_prescricao_w;

						exception when others then
							ds_alteracao_rastre_w	:= substr(	'09-Exception altera_status_analise_gpt: '||sqlerrm(SQLSTATE)|| pls_util_pck.enter_w ||
																' - ds_stack: '||substr(dbms_utility.format_call_stack,1,1800)|| pls_util_pck.enter_w ||
																' - nr_atendimento_p: '||nr_atendimento_p|| pls_util_pck.enter_w ||
																' - nr_prescricao_w: '||nr_prescricao_w, 1, 2000);
							CALL gravar_log_tasy(cd_log_p => 50, ds_log_p => ds_alteracao_rastre_w, nm_usuario_p => nm_usuario_p);
						end;

						begin

							insert into log_analise_prescr(
								nr_sequencia,
								dt_atualizacao,
								nm_usuario,
								nr_prescricao,
								ie_acao,
								dt_acao,
								nm_usuario_acao,
								ds_motivo_acao)
							values (nextval('log_analise_prescr_seq'),
								clock_timestamp(),
								nm_usuario_p,
								nr_prescricao_w,
								'D',
								clock_timestamp(),
								nm_usuario_p,
								ds_justificativa_p);

						exception when others then
							ds_alteracao_rastre_w	:= substr(	'10-Exception altera_status_analise_gpt: '||sqlerrm(SQLSTATE)|| pls_util_pck.enter_w ||
																' - ds_stack: '||substr(dbms_utility.format_call_stack,1,1800)|| pls_util_pck.enter_w ||
																' - nr_atendimento_p: '||nr_atendimento_p|| pls_util_pck.enter_w ||
																' - nr_prescricao_w: '||nr_prescricao_w, 1, 2000);
							CALL gravar_log_tasy(cd_log_p => 50, ds_log_p => ds_alteracao_rastre_w, nm_usuario_p => nm_usuario_p);
						end;

						end;
					end loop;
					close c03;					

				end if;

			end;
		end if;
		
		ie_commit_w := 'S';
		
	end;
end if;

if (ie_commit_w = 'S') then
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE altera_status_analise_gpt ( nr_atendimento_p bigint, cd_pessoa_fisica_p text, cd_resp_analise_p text, ie_tipo_usuario_p text, ie_acao_p text, nm_usuario_p text, ds_justificativa_p text default null, ie_lib_farm_p text default null, ie_retorno_cpoe_p text default null, qt_horas_quimio_p bigint default 0) FROM PUBLIC;

