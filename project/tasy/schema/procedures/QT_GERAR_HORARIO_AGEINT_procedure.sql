-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE qt_gerar_horario_ageint ( nr_seq_pendencia_p bigint, nr_seq_agenda_p bigint, dt_agenda_p timestamp, nm_usuario_p text, nr_min_duracao_p bigint, cd_pessoa_fisica_p text, nr_seq_grupo_quimio_p bigint default null, cd_estabelecimento_p bigint default null, nr_seq_local_p bigint default null, nr_seq_ageint_item_p bigint default null, nr_seq_prof_p bigint default null, ds_locais_p text DEFAULT NULL) AS $body$
DECLARE


nr_seq_local_w		bigint;
hr_atual_w		timestamp;
hr_final_dia_w		timestamp;
hr_inicial_dia_w	timestamp;
hr_inicial_truncada_w	timestamp;
ie_status_w		varchar(15);
qt_marcado_w		bigint;
ie_dia_Semana_w		integer;
nr_seq_pend_maracada_w	bigint;
nr_Seq_pend_agenda_w	bigint;
nr_seq_atend_marcado_w	bigint;
nr_seq_pend_agenda_marcado_w	bigint;
nr_minuto_aval_w	bigint;
nr_seq_agequi_w		bigint;
qt_pac_horario_w	bigint;
ie_horario_bloq_w	varchar(1);
nr_seq_agenda_w		bigint;
nr_seq_agenda_marcado_w	bigint;
qt_turno_w		bigint;
dt_agenda_w		timestamp;
nr_duracao_W		bigint;
qt_tempo_entre_hor_W	bigint;
ie_indice_w		integer;
ie_ind_w		integer;
nr_seq_prof_w		bigint;
dt_min_agendamento_w	timestamp;
dt_max_agendamento_w	timestamp;
hr_inicio_turno_w	timestamp;
hr_fim_turno_w		timestamp;
ie_possui_turno_w	varchar(1)	:= 'N';
qt_marcacao_w		bigint;
ie_feriado_w		varchar(1);
cd_estabelecimento_w	smallint;
nr_seq_atendimento_w	bigint;
ie_regra_bloq_medic_w	varchar(1);
cd_estab_pend_w		smallint;
nr_seq_ageint_item_w	bigint;
nr_seq_ageint_item_ww	bigint;
nr_seq_paciente_w	bigint;
nr_seq_atend_sim_w	bigint;
ie_gerado_w		varchar(1);
nr_seq_ageint_item_www	bigint;
ie_status_agenda_w	varchar(15);

hr_quebra_turno_w		varchar(05);
hr_quebra_turno_not_w		varchar(05);
cd_turno_w			bigint := 0;
nr_minuto_duracao_w		bigint;
qt_registros_ag_quimio		bigint;

qt_horario_w		bigint;
ie_Reserva_w		varchar(1);
cd_pac_agenda_w		varchar(10);
qt_gera_horario_w	bigint;
nr_seq_local_ww		bigint;
ie_gerado_marc_w	varchar(1);
dt_vigencia_inicial_w	timestamp;
dt_vigencia_final_w	timestamp;
ie_permite_w		varchar(1);
/*
status
L - Livre
I - Invisivel (utilizado para montar corretamente os panels em caso de inicio em hor√°rios "quebrados")
EA - Em agendamento
M - Marcado
*/
/*cursor dos locais*/

C01 CURSOR FOR
	SELECT	nr_sequencia,
		cd_estabelecimento
	from	qt_local
	where	ie_situacao	= 'A'
	and		((nr_seq_grupo_quimio	= nr_seq_grupo_quimio_p) or (coalesce(nr_seq_grupo_quimio_p::text, '') = ''))
	--and		((cd_estabelecimento	= cd_estabelecimento_p) or (cd_estabelecimento_p is null))
	and		nr_sequencia	= coalesce(nr_Seq_local_p, nr_Sequencia)
	and (obter_se_contido(nr_Sequencia, ds_locais_p)	= 'S' or coalesce(ds_locais_p::text, '') = '')
	and (Qt_Obter_Se_Local_Lib(nr_seq_ageint_item_p, nr_sequencia)	= 'S' or coalesce(nr_seq_ageint_item_p,0) = 0)
	order by 1;

/*cursor dos turnos dos locais*/

C02 CURSOR FOR
	SELECT	hr_inicial,
		hr_final,
		dt_vigencia_inicial,
		dt_vigencia_final
	from	qt_local_turno
	where	nr_seq_local	= nr_seq_local_w
	and	((dt_dia_semana = ie_dia_semana_w) or ((dt_dia_semana = 9) and (ie_dia_Semana_w not in (7,1))))
	and	((ie_feriado_w	<> 'S' and coalesce(ie_feriado,'N') = 'N') or (coalesce(ie_feriado, 'N') = 'S' and ie_feriado_w = 'S'))
	/*and	((dt_vigencia_inicial is null) or (dt_vigencia_inicial <= sysdate))
	and	((dt_vigencia_final is null) or (dt_vigencia_final   >= sysdate))*/
	order by 1;

C03 CURSOR FOR
	SELECT	dt_Agenda,
		nr_seq_pend_Agenda,
		nr_Seq_agenda,
		nr_duracao,
		nr_seq_ageint_item,
		nr_seq_paciente,
		ie_gerado
	from	agenda_quimio_marcacao
	where	nr_seq_local		= nr_Seq_local_w
	and	trunc(dt_agenda)	= trunc(dt_agenda_p);

C04 CURSOR FOR
	SELECT	a.dt_agenda,
			a.nr_minuto_duracao,
			a.nr_seq_local,
			a.nr_seq_pend_agenda,
			a.nr_sequencia,
			a.nr_seq_Ageint_item,
			a.ie_reserva,
			a.cd_pessoa_fisica
	from	agenda_quimio a,
			qt_local b
	where	a.dt_agenda between trunc(dt_Agenda_p) and trunc(dt_Agenda_p) + 86399/86400
	and		a.nr_seq_local	= b.nr_sequencia
	and		a.ie_status_agenda	<> 'C'
	and (coalesce(a.nr_seq_pend_Agenda::text, '') = ''
	or ((a.nr_seq_pend_Agenda IS NOT NULL AND a.nr_seq_pend_Agenda::text <> '')
	and		exists (SELECT 1 from qt_pendencia_Agenda x where x.nr_sequencia = a.nr_seq_pend_Agenda)))
	--and		not exists (select 1 from w_agenda_quimio w where w.nr_seq_pend_agenda = a.nr_seq_pend_agenda)
	and		((b.nr_seq_grupo_quimio	= nr_seq_grupo_quimio_p) or (coalesce(nr_seq_grupo_quimio_p::text, '') = ''))
	and		((b.cd_estabelecimento	= cd_estabelecimento_p) or (coalesce(cd_estabelecimento_p::text, '') = ''))
	and		b.nr_sequencia	= nr_Seq_local_w
	order by dt_Agenda;

C05 CURSOR FOR
	SELECT	dt_agenda,
			nr_duracao,
			nr_seq_local,
			nr_seq_pend_agenda,
			nr_seq_agenda,
			nr_seq_ageint_item
	from	agenda_quimio_marcacao
	where	dt_agenda between trunc(dt_Agenda_p) and trunc(dt_Agenda_p) + 86399/86400
	--and		ie_status_agenda	<> 'B'
	and		nr_seq_local	= nr_Seq_local_w
	and		ie_gerado		= 'N'
	order by dt_Agenda;


BEGIN

/*delete	w_agenda_quimio
where	dt_horario	< trunc(sysdate)
and		ie_status	in ('L','I');*/
select	obter_cod_dia_semana(dt_agenda_p)
into STRICT	ie_dia_semana_w
;

if (nr_seq_prof_p IS NOT NULL AND nr_seq_prof_p::text <> '') then
	nr_seq_prof_w	:= nr_seq_prof_p;
else
	nr_seq_prof_w	:= null;
end if;

ie_regra_bloq_medic_w	:= coalesce(Obter_Valor_Param_Usuario(865, 26, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p), 'S');

open C01;
loop
fetch C01 into
	nr_seq_local_w,
	cd_estabelecimento_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	/*if	(trunc(dt_Agenda_p)	< trunc(sysdate)) then
		qt_gera_horario_w	:= 1;
	else*/
		begin
		select 	1
		into STRICT 	qt_gera_horario_w
		from 	quimio_controle_horario
		where 	nr_seq_local = nr_seq_local_w
		and		dt_agenda = trunc(dt_Agenda_p)  LIMIT 1;
		exception
		when others then
			qt_gera_horario_w	:= 0;
		end;
	--end if;
	if (qt_gera_horario_w	> 0) and (trunc(dt_Agenda_p)	= trunc(clock_timestamp())) then
		delete 	from w_agenda_quimio a
		where 	nr_seq_local	= nr_seq_local_w
		and		dt_horario	< clock_timestamp()
		and		ie_status	= 'L'
		and 	dt_horario between trunc(dt_agenda_p,'dd')
		        	            and trunc(dt_agenda_p,'dd') 	+ (1 - 1/86400);
	end if;
	if (qt_gera_horario_w	= 0) then
		--(dt_Agenda_p >= trunc(sysdate)) then
		begin
		insert into quimio_controle_horario(nr_sequencia,
						nr_seq_local,
						dt_agenda,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec)
				values (nextval('quimio_controle_horario_seq'),
						nr_seq_local_w,
						trunc(dt_agenda_p),
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p);
		commit;
		exception
		when others then
			qt_gera_horario_w	:= 1;
		end;

		if (qt_gera_horario_w	= 0) then
			delete 	FROM w_agenda_quimio
			where	nr_seq_local		= nr_Seq_local_w
			and		ie_status	in ('L','EA')
			and 	dt_horario between trunc(dt_agenda_p,'dd')
		                and trunc(dt_agenda_p,'dd') 	+ (1 - 1/86400);

			select	max(coalesce(hr_quebra_turno, '12')),
					max(hr_quebra_noturno)
			into STRICT	hr_quebra_turno_w,
					hr_quebra_turno_not_w
			from	qt_local
			where	nr_sequencia = nr_seq_local_w;

			select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
			into STRICT	ie_feriado_w
			from 	feriado a
			where 	a.cd_estabelecimento 	= coalesce(cd_estabelecimento_p, cd_estabelecimento_w)
			and	a.dt_feriado between trunc(dt_agenda_p) and trunc(dt_agenda_p) + 86399/86400;

			ie_possui_turno_W	:= 'N';
			select	count(*)
			into STRICT	qt_turno_w
			from	qt_local_turno
			where	nr_seq_local	= nr_seq_local_w
			and		((dt_dia_semana = ie_dia_semana_w) or ((dt_dia_semana = 9) and (ie_dia_Semana_w not in (7,1))));
			/*and	((dt_vigencia_inicial is null) or (dt_vigencia_inicial <= sysdate))
			and	((dt_vigencia_final is null) or (dt_vigencia_final   >= sysdate));*/
			--and	(dt_Agenda_w >= hr_inicial or hr_inicial is null)
			--and	(dt_Agenda_w <= hr_final or hr_final is null);
			--if	(qt_turno_w	= 0) then
				open C03;
				loop
				fetch C03 into
					dt_Agenda_w,
					nr_seq_pend_agenda_w,
					nr_seq_agenda_w,
					nr_duracao_W,
					nr_seq_ageint_item_w,
					nr_seq_paciente_w,
					ie_gerado_marc_w;
				EXIT WHEN NOT FOUND; /* apply on C03 */
					begin

					select	count(*)
					into STRICT	qt_turno_w
					from	qt_local_turno
					where	nr_seq_local	= nr_seq_local_w
					and	((dt_dia_semana = ie_dia_semana_w) or ((dt_dia_semana = 9) and (ie_dia_Semana_w not in (7,1))))
					and (dt_Agenda_w >= to_date(to_char(dt_Agenda_w,'dd/mm/yyyy') ||' '|| to_char(hr_inicial,'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss') or coalesce(hr_inicial::text, '') = '')
					and (dt_Agenda_w <= to_date(to_char(dt_Agenda_w,'dd/mm/yyyy') ||' '|| to_char(hr_final,'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss') - 1/1440 or coalesce(hr_final::text, '') = '')
					and	((ie_feriado_w	<> 'S' and coalesce(ie_feriado,'N') = 'N') or (coalesce(ie_feriado, 'N') = 'S' and ie_feriado_w = 'S'));
					/*and	((dt_vigencia_inicial is null) or (dt_vigencia_inicial <= sysdate))
					and	((dt_vigencia_final is null) or (dt_vigencia_final   >= sysdate));*/
					if (qt_turno_w	= 0) then
						qt_tempo_entre_hor_W	:= OBTER_MIN_ENTRE_DATAS( dt_agenda_w, dt_Agenda_W + (nr_duracao_W - 1) / 1440,1);
						ie_indice_w	:= trunc(qt_tempo_entre_hor_W / nr_min_duracao_p);
						ie_ind_w	:= 0;

						if	(((to_char(hr_atual_w, 'hh24'))::numeric  > somente_numero(hr_quebra_turno_w)) or ((to_char(hr_atual_w, 'hh24'))::numeric  = somente_numero(hr_quebra_turno_w))) then
							cd_turno_w	:= 1;
						else
							cd_turno_w	:= 0;
						end if;
						if (hr_quebra_turno_not_w IS NOT NULL AND hr_quebra_turno_not_w::text <> '') and ((to_char(hr_atual_w, 'hh24'))::numeric  >= somente_numero(hr_quebra_turno_not_w)) then
							cd_turno_w	:= 3;
						end if;

						while ie_ind_w	<= ie_indice_w loop
							begin
							begin
							select	1
							into STRICT	qt_horario_W
							from	w_agenda_quimio
							where (nr_seq_item_marc	= nr_seq_Ageint_item_w
							or 		nr_seq_pend_agenda = nr_seq_pend_agenda_w)
							and	dt_horario		= dt_agenda_w  LIMIT 1;
							exception
								when others then
								qt_horario_W	:= 0;
							end;

							if (qt_horario_W	= 0) then


								select	coalesce(count(*),0)
								into STRICT	qt_registros_ag_quimio
								from	agenda_quimio
								where	nr_sequencia = nr_seq_agenda_w;


								if (qt_registros_ag_quimio = 0) then
									insert into w_agenda_quimio(--nr_sequencia,
										dt_atualizacao,
										nm_usuario,
										dt_atualizacao_nrec,
										nm_usuario_nrec,
										dt_horario,
										ie_status,
										nr_seq_local,
										nr_seq_pend_agenda,
										nr_seq_agequi,
										nr_seq_ageint_item,
										nr_seq_item_marc,
										nr_seq_paciente,
										cd_turno)
									values (--w_agenda_quimio_seq.nextval,
										clock_timestamp(),
										nm_usuario_p,
										clock_timestamp(),
										nm_usuario_p,
										dt_Agenda_w,
										CASE WHEN ie_gerado_marc_w='S' THEN 'AG'  ELSE 'EA' END ,--ie_status_w,
										nr_seq_local_w,
										coalesce(nr_seq_pend_agenda_w, null),
										null,
										nr_seq_ageint_item_p,
										nr_seq_ageint_item_w,
										nr_seq_paciente_w,
										cd_turno_w);
								else
									insert into w_agenda_quimio(--nr_sequencia,
										dt_atualizacao,
										nm_usuario,
										dt_atualizacao_nrec,
										nm_usuario_nrec,
										dt_horario,
										ie_status,
										nr_seq_local,
										nr_seq_pend_agenda,
										nr_seq_agequi,
										nr_seq_ageint_item,
										nr_seq_item_marc,
										nr_seq_paciente,
										cd_turno)
									values (--w_agenda_quimio_seq.nextval,
										clock_timestamp(),
										nm_usuario_p,
										clock_timestamp(),
										nm_usuario_p,
										dt_Agenda_w,
										CASE WHEN ie_gerado_marc_w='S' THEN 'AG'  ELSE 'EA' END ,--ie_status_w,
										nr_seq_local_w,
										coalesce(nr_seq_pend_agenda_w, null),
										nr_seq_agenda_w,
										nr_seq_ageint_item_p,
										nr_seq_ageint_item_w,
										nr_seq_paciente_w,
										cd_turno_w);
								end if;
							end if;

							dt_agenda_w	:= dt_agenda_w + nr_min_duracao_p / 1440;
							ie_ind_w	:= ie_ind_w + 1;
							end;
						end loop;
						nr_seq_agenda_w	:= null;
					end if;
					end;
				end loop;
				close C03;
			--end if;
			open C02;
			loop
			fetch C02 into
				hr_inicial_dia_w,
				hr_final_dia_w,
				dt_vigencia_inicial_w,
				dt_vigencia_final_w;
			EXIT WHEN NOT FOUND; /* apply on C02 */
				begin
				hr_inicial_dia_w	:= to_date(to_char(dt_agenda_p, 'dd/mm/yyyy') || ' ' || to_char(hr_inicial_dia_w, 'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss');
				hr_final_dia_w		:= to_date(to_char(dt_agenda_p, 'dd/mm/yyyy') || ' ' || to_char(hr_final_dia_w, 'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss');

				hr_inicio_turno_w	:= hr_inicial_dia_w;
				hr_fim_turno_w		:= hr_final_dia_w;

				if (dt_max_agendamento_w IS NOT NULL AND dt_max_agendamento_w::text <> '') and (dt_max_agendamento_w > hr_final_dia_w) then
					hr_final_dia_w	:= dt_max_agendamento_w;
				end if;

				if (dt_min_agendamento_w IS NOT NULL AND dt_min_agendamento_w::text <> '') and (dt_min_agendamento_w < hr_inicial_dia_w) then
					hr_inicial_dia_w	:= dt_min_agendamento_w;
				end if;

				hr_inicial_truncada_w	:= to_date(to_char(dt_agenda_p, 'dd/mm/yyyy') || ' ' || to_char(hr_inicial_dia_w, 'hh24') || ':00:00','dd/mm/yyyy hh24:mi:ss');
				if (hr_inicial_truncada_w	<> hr_inicial_dia_w) then
					hr_atual_w	:= hr_inicial_truncada_w;
				else
					hr_atual_w	:= hr_inicial_dia_w;
				end if;
				while(hr_atual_w < hr_final_dia_w) loop
					begin
					ie_possui_turno_w	:= 'S';
						nr_seq_pend_agenda_w	:= nr_seq_pendencia_p;
						if (hr_atual_w	< hr_inicio_turno_w) or (hr_atual_w + nr_min_duracao_p / 1440	> hr_fim_turno_w) or (hr_atual_w	< clock_timestamp()) then
							ie_status_w	:= 'I';
						else
							ie_status_w	:= 'L';
						end if;
						begin
						select	1
						into STRICT	qt_horario_w
						from	w_agenda_quimio
						where	dt_horario	= hr_atual_w
						and		nr_seq_local	= nr_seq_local_w
						--and		(nr_seq_ageint_item	= nr_seq_ageint_item_p or nr_seq_ageint_item_p is null)
						--and		(ie_status	in ('L','B','EA','I','AG','D') or ie_reserva = 'S')
						/*((1 = 1 --nm_usuario		= nm_usuario_p
						and		(ie_status	in ('L','B','EA','I') or ie_reserva = 'S'))
						or		ie_status	in ('AG','D'))*/
  LIMIT 1;
						exception
						when others then
							qt_horario_w	:= 0;
						end;
						if (qt_horario_w	= 0) then
							if (ie_status_w	<> 'I') then



								select	coalesce(obter_agend_quimio_bloq(dt_agenda_p, hr_atual_w, (hr_atual_w + (nr_min_duracao_p / 1440)), nr_seq_local_w),'N')
								into STRICT	ie_horario_bloq_w
								;



								if (ie_horario_bloq_w = 'N') and (cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') then
									if (ie_regra_bloq_medic_w	= 'S') then
										select 	obter_agend_quimio_bloq_prof(dt_agenda_p, hr_atual_w, (hr_atual_w + (nr_min_duracao_p / 1440)),nr_seq_prof_w)
										into STRICT	ie_horario_bloq_w
										;

										select	max(nr_seq_atendimento),
											max(cd_estabelecimento)
										into STRICT	nr_seq_atendimento_w,
											cd_estab_pend_w
										from	paciente_Atendimento
										where	nr_seq_pend_agenda	= nr_seq_pendencia_p
										and		coalesce(dt_suspensao::text, '') = ''
										and	trunc(dt_prevista)	= trunc(hr_atual_w);

										ie_horario_bloq_w	:= Qt_Consistir_Bloq_Medic(hr_atual_w, nr_seq_atendimento_w, nr_seq_local_w, nm_usuario_p, cd_estabelecimento_w);
									end if;
								end if;
								if (ie_horario_bloq_w = 'S') then
									ie_status_w := 'B';
								end if;
							end if;

							ie_status_agenda_w	:= '';

							if	(((to_char(hr_atual_w, 'hh24'))::numeric  > somente_numero(hr_quebra_turno_w)) or ((to_char(hr_atual_w, 'hh24'))::numeric  = somente_numero(hr_quebra_turno_w))) then
								cd_turno_w	:= 1;
							else
								cd_turno_w	:= 0;
							end if;

							if (hr_quebra_turno_not_w IS NOT NULL AND hr_quebra_turno_not_w::text <> '') and ((to_char(hr_atual_w, 'hh24'))::numeric  >= somente_numero(hr_quebra_turno_not_w)) then
								cd_turno_w	:= 3;
							end if;

							/*select	nvl(count(*),0)
							into	qt_registros_ag_quimio
							from	agenda_quimio
							where	nr_sequencia = nr_seq_agenda_w;*/
							qt_registros_ag_quimio	:= 0;
							if (hr_atual_w	< clock_timestamp()) then
								ie_status_w	:= 'I';
							end if;
							--if	--(hr_atual_w	> sysdate) and
								--(ie_status_w	<> 'I') then
							select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
							into STRICT	ie_permite_w
							
							where	((hr_atual_w between coalesce(dt_vigencia_inicial_w, trunc(dt_agenda_p)) and  coalesce(dt_vigencia_final_w, fim_dia(dt_agenda_p))) or (coalesce(dt_vigencia_inicial_w::text, '') = '' and coalesce(dt_vigencia_final_w::text, '') = '')
								);

								if (qt_registros_ag_quimio = 0) and (ie_permite_w = 'S') then
										insert into w_agenda_quimio(--nr_sequencia,
											dt_atualizacao,
											nm_usuario,
											dt_atualizacao_nrec,
											nm_usuario_nrec,
											dt_horario,
											ie_status,
											nr_seq_local,
											nr_seq_pend_agenda,
											nr_seq_agequi,
											nr_seq_ageint_item,
											nr_seq_item_marc,
											nr_seq_paciente,
											ie_status_agenda,
											cd_turno)
										values (--w_agenda_quimio_seq.nextval,
											clock_timestamp(),
											nm_usuario_p,
											clock_timestamp(),
											nm_usuario_p,
											hr_atual_w,
											ie_status_w,
											nr_seq_local_w,
											nr_seq_pend_agenda_w,
											null,
											nr_seq_ageint_item_p,
											coalesce(nr_seq_ageint_item_www, nr_seq_ageint_item_w),
											nr_seq_paciente_w,
											ie_status_agenda_w,
											cd_turno_w);
										else
											insert into w_agenda_quimio(--nr_sequencia,
											dt_atualizacao,
											nm_usuario,
											dt_atualizacao_nrec,
											nm_usuario_nrec,
											dt_horario,
											ie_status,
											nr_seq_local,
											nr_seq_pend_agenda,
											nr_seq_agequi,
											nr_seq_ageint_item,
											nr_seq_item_marc,
											nr_seq_paciente,
											cd_turno)
										values (--w_agenda_quimio_seq.nextval,
											clock_timestamp(),
											nm_usuario_p,
											clock_timestamp(),
											nm_usuario_p,
											dt_Agenda_w,
											'EA',--ie_status_w,
											nr_seq_local_w,
											coalesce(nr_seq_pend_agenda_w, null),
											nr_seq_agenda_w,
											nr_seq_ageint_item_p,
											nr_seq_ageint_item_w,
											nr_seq_paciente_w,
											cd_turno_w);
									end if;
								--end if;
								end if;

					nr_seq_pend_agenda_marcado_w	:= null;
					nr_seq_agequi_w			:= null;
					nr_seq_agenda_w			:= null;
					hr_atual_w	:= hr_atual_w + nr_min_duracao_p / 1440;
					end;
				end loop;
				end;
			end loop;
			close C02;

			open C04;
			loop
			fetch C04 into
				dt_agenda_w,
				nr_minuto_duracao_w,
				nr_seq_local_w,
				nr_seq_pend_agenda_w,
				nr_seq_agenda_w,
				nr_seq_ageint_item_w,
				ie_reserva_w,
				cd_pac_agenda_w;
			EXIT WHEN NOT FOUND; /* apply on C04 */
				begin

				if (ie_reserva_w	= 'S') and (cd_pac_agenda_w	= cd_pessoa_fisica_p) then
					update	w_agenda_quimio
					set	ie_status			= 'AG',
						nr_seq_agequi		= nr_seq_agenda_w,
						nr_seq_item_marc	= nr_seq_ageint_item_w,
						ie_reserva			= ie_reserva_w
					where	dt_horario between  dt_Agenda_w and dt_agenda_w + (nr_minuto_duracao_w - 1) / 1440
					and	nr_seq_local		= nr_seq_local_w;
				else
					update	w_agenda_quimio
					set	ie_status		= 'D',
						nr_seq_pend_agenda	= nr_seq_pend_Agenda_w,
						nr_seq_agequi		= nr_seq_agenda_w,
						nr_seq_item_marc	= nr_seq_ageint_item_w,
						ie_reserva		= ie_reserva_w
					where	dt_horario between  dt_Agenda_w and dt_agenda_w + (nr_minuto_duracao_w - 1) / 1440
					and	nr_seq_local		= nr_seq_local_w
					and	nr_Seq_agequi		<> nr_seq_agenda_W
					and	ie_status		= 'AG';

					commit;

					update	w_agenda_quimio
					set	ie_status		= 'AG',
						nr_seq_pend_agenda	= nr_seq_pend_Agenda_w,
						nr_seq_agequi		= nr_seq_agenda_w,
						nr_seq_item_marc	= nr_seq_ageint_item_w,
						ie_reserva		= ie_reserva_w
					where	dt_horario between  dt_Agenda_w and dt_agenda_w + (nr_minuto_duracao_w - 1) / 1440
					and	nr_seq_local		= nr_seq_local_w
					and	ie_status		in ('L','I');

				end if;
				end;
			end loop;
			close C04;

			open C05;
			loop
			fetch C05 into
				dt_agenda_w,
				nr_minuto_duracao_w,
				nr_seq_local_ww,
				nr_seq_pend_agenda_w,
				nr_seq_agenda_w,
				nr_seq_ageint_item_w;
			EXIT WHEN NOT FOUND; /* apply on C05 */
				begin
				update	w_agenda_quimio
				set		ie_status			= 'EA',
						nr_seq_pend_agenda	= nr_seq_pend_Agenda_w,
						nr_seq_agequi		= nr_seq_agenda_w,
						nr_seq_item_marc	= nr_seq_ageint_item_w
				where	dt_horario between  dt_Agenda_w and dt_agenda_w + (nr_minuto_duracao_w - 1) / 1440
				and		nr_seq_local		= nr_seq_local_ww;
				end;
			end loop;
			close C05;

		end if;
	end if;
	end;
end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE qt_gerar_horario_ageint ( nr_seq_pendencia_p bigint, nr_seq_agenda_p bigint, dt_agenda_p timestamp, nm_usuario_p text, nr_min_duracao_p bigint, cd_pessoa_fisica_p text, nr_seq_grupo_quimio_p bigint default null, cd_estabelecimento_p bigint default null, nr_seq_local_p bigint default null, nr_seq_ageint_item_p bigint default null, nr_seq_prof_p bigint default null, ds_locais_p text DEFAULT NULL) FROM PUBLIC;

