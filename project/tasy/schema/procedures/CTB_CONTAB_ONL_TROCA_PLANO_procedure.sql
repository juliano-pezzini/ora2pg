-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ctb_contab_onl_troca_plano ( nm_usuario_p text, cd_estabelecimento_p bigint, cd_historico_p bigint, nr_seq_mes_ref_p bigint) AS $body$
DECLARE

/*
===============================================================================
Purpose: Indentacao

Remarks: n/a

Who         When            What
----------  -----------     --------------------------------------------------
chjreinert  13/mai/2021     OS 2444975 - Indentacao

===============================================================================
*/
nm_agrupador_w                  varchar(255);
ds_compl_historico_w            varchar(255);
ds_conteudo_w                   varchar(4000);
dt_inicial_w                    timestamp;
dt_final_w                      timestamp;
nr_seq_agrupamento_w            bigint;
dt_referencia_w                 lote_contabil.dt_referencia%type;
cd_estabelecimento_w            lote_contabil.cd_estabelecimento%type;
cd_empresa_w                    estabelecimento.cd_empresa%type;
cd_tipo_lote_contabil_w         lote_contabil.cd_tipo_lote_contabil%type  := 52;/* Lote Troca Plano */
cd_historico_w                  lote_contabil_parametro.vl_parametro%type;
ie_debito_credito_orig_w        ctb_grupo_conta.ie_debito_credito%type;
ie_debito_credito_dest_w        ctb_grupo_conta.ie_debito_credito%type;
nr_lote_contabil_w              lote_contabil.nr_lote_contabil%type;
ctb_movimento_doc_w             ctb_online_pck.ctb_movimento_doc;
dt_atualizacao_saldo_w          timestamp;
qt_registro_w                   bigint;
sequencia_w                     dbms_sql.number_table;
ds_erro_w                       varchar(255)   := null;

c010 CURSOR FOR
    SELECT  b.cd_conta_origem,
            b.cd_conta_destino,
            c.cd_centro_custo,
            c.vl_saldo,
            a.ds_titulo,
            a.ds_troca,
            a.nr_sequencia,
            'CTB_TROCA_PLANO' nm_tabela,
            'VL_SALDO' nm_atributo,
            a.dt_troca_real
    from    ctb_troca_plano a,
            ctb_troca_plano_conta b,
            ctb_saldo c
    where   b.nr_seq_troca          = a.nr_sequencia
    and     c.cd_conta_contabil     = b.cd_conta_origem
    and     c.nr_seq_mes_ref        = nr_seq_mes_ref_p
    and     a.nr_lote_contabil      = nr_lote_contabil_w;

c010_w          c010%rowtype;

procedure get_sequence is

  vet RECORD;

BEGIN

if (sequencia_w.count > 0) then
        ctb_movimento_doc_w.nr_sequencia        := sequencia_w(sequencia_w.count);
        sequencia_w.delete(sequencia_w.count);
end if;
exception when others then
        ctb_movimento_doc_w.nr_sequencia        := null;
end;

begin

cd_empresa_w    := obter_empresa_estab(cd_estabelecimento_p);

select  a.dt_referencia
into STRICT    dt_referencia_w
from    ctb_mes_ref a
where   a.nr_sequencia  = nr_seq_mes_ref_p
and     a.cd_empresa    = cd_empresa_w;

dt_inicial_w    :=      dt_referencia_w;
dt_final_w      :=      fim_mes(dt_referencia_w);

/* Gera Lote Contabil */

nr_lote_contabil_w := ctb_online_pck.get_lote_contabil( cd_tipo_lote_contabil_w,
                                        cd_estabelecimento_p,
                                        dt_referencia_w,
                                        nm_usuario_p);

select  count(nr_sequencia)
into STRICT    qt_registro_w
from    ctb_movimento
where   nr_lote_contabil        = nr_lote_contabil_w;

select  dt_atualizacao_saldo
into STRICT    dt_atualizacao_saldo_w
from    lote_contabil
where   nr_lote_contabil        = nr_lote_contabil_w;

if (dt_atualizacao_saldo_w IS NOT NULL AND dt_atualizacao_saldo_w::text <> '') then
        ds_erro_w := ctb_desatualizar_lote(nr_lote_contabil_w, nm_usuario_p, ds_erro_w);
end if;

if (qt_registro_w > 0) then
        begin
        qt_registro_w   := sequencia_w.count;

        for vet in (SELECT a.nr_sequencia
                    from    ctb_movimento a
                    where   a.nr_lote_contabil      = nr_lote_contabil_w
                    order by 1 desc) loop
                begin
                qt_registro_w   := qt_registro_w + 1;
                sequencia_w(qt_registro_w)      := vet.nr_sequencia;
                end;
        end loop;
        end;
end if;

delete  FROM ctb_movimento
where   nr_lote_contabil        = nr_lote_contabil_w;

commit;

update  ctb_troca_plano a
set     a.nr_lote_contabil              = nr_lote_contabil_w
where   coalesce(a.nr_lote_contabil,0)       = 0
and     a.dt_troca_real between dt_inicial_w and dt_final_w;

commit;

nm_agrupador_w := coalesce(trim(both obter_agrupador_contabil(52)),'NR_SEQ_TROCA');

open c010;
loop
fetch c010 into
        c010_w;
EXIT WHEN NOT FOUND; /* apply on c010 */
        begin

        /* Parametros Historico */

        CALL ctb_online_pck.definir_atrib_compl(cd_tipo_lote_contabil_w);
        CALL ctb_online_pck.set_value_compl_hist('DS_TITULO_TROCA', c010_w.ds_titulo);
        CALL ctb_online_pck.set_value_compl_hist('DS_TROCA_PLANO', c010_w.ds_troca);

        ds_compl_historico_w := ctb_online_pck.ctb_obter_compl_Historico( cd_tipo_lote_contabil_w, c010_w.cd_centro_custo);

        if (nm_agrupador_w = 'NR_SEQ_TROCA') then
                nr_seq_agrupamento_w := c010_w.nr_sequencia;
        end if;

        begin
        select  ie_debito_credito
        into STRICT    ie_debito_credito_orig_w
        from    conta_contabil a,
                ctb_grupo_conta b
        where   b.cd_grupo = a.cd_grupo
        and     cd_conta_contabil = c010_w.cd_conta_origem;
        exception when others then
                c010_w.vl_saldo := 0;
        end;

        if (c010_w.vl_saldo > 0) then
            if (ie_debito_credito_orig_w = 'D') then
                    begin
                    ie_debito_credito_orig_w := 'C';
                    ie_debito_credito_dest_w := 'D';
                    end;
            elsif (ie_debito_credito_orig_w = 'C') then
                    begin
                    ie_debito_credito_orig_w := 'D';
                    ie_debito_credito_dest_w := 'C';
                    end;
            end if;
        else
            if (ie_debito_credito_orig_w = 'D') then
                    begin
                    ie_debito_credito_dest_w := 'C';
                    end;
            elsif (ie_debito_credito_orig_w = 'C') then
                    begin
                    ie_debito_credito_dest_w := 'D';
                    end;
            end if;
        end if;

        /* DEBITO */

        ctb_movimento_doc_w := null;
        get_sequence;
        ctb_movimento_doc_w.nr_lote_contabil            := nr_lote_contabil_w;
        ctb_movimento_doc_w.cd_tipo_lote_contabil       := cd_tipo_lote_contabil_w;
        ctb_movimento_doc_w.cd_estabelecimento          := cd_estabelecimento_p;
        ctb_movimento_doc_w.dt_movimento                := dt_referencia_w;
        ctb_movimento_doc_w.vl_movimento                := c010_w.vl_saldo;
        ctb_movimento_doc_w.cd_conta_debito             := c010_w.cd_conta_origem;
        ctb_movimento_doc_w.cd_historico                := cd_historico_p;
        ctb_movimento_doc_w.nr_seq_agrupamento          := nr_seq_agrupamento_w;
        ctb_movimento_doc_w.ds_compl_historico          := ds_compl_historico_w;
        ctb_movimento_doc_w.cd_centro_custo             := c010_w.cd_centro_custo;
        ctb_movimento_doc_w.nm_tabela                   := c010_w.nm_tabela;
        ctb_movimento_doc_w.nm_atributo                 := c010_w.nm_atributo;
        ctb_movimento_doc_w.ie_transitorio              := 'N';
        ctb_movimento_doc_w.nr_seq_info                 := 70;

         ctb_movimento_doc_w := ctb_online_pck.ctb_gravar_movto( ctb_movimento_doc_w, nm_usuario_p, 'S');
        /* CREDITO */

        ctb_movimento_doc_w := null;
        get_sequence;
        ctb_movimento_doc_w.nr_lote_contabil            := nr_lote_contabil_w;
        ctb_movimento_doc_w.cd_tipo_lote_contabil       := cd_tipo_lote_contabil_w;
        ctb_movimento_doc_w.cd_estabelecimento          := cd_estabelecimento_p;
        ctb_movimento_doc_w.dt_movimento                := dt_referencia_w;
        ctb_movimento_doc_w.vl_movimento                := c010_w.vl_saldo;
        ctb_movimento_doc_w.cd_conta_credito            := c010_w.cd_conta_destino;
        ctb_movimento_doc_w.cd_historico                := cd_historico_p;
        ctb_movimento_doc_w.nr_seq_agrupamento          := nr_seq_agrupamento_w;
        ctb_movimento_doc_w.ds_compl_historico          := ds_compl_historico_w;
        ctb_movimento_doc_w.cd_centro_custo             := c010_w.cd_centro_custo;
        ctb_movimento_doc_w.nm_tabela                   := c010_w.nm_tabela;
        ctb_movimento_doc_w.nm_atributo                 := c010_w.nm_atributo;
        ctb_movimento_doc_w.ie_transitorio              := 'N';
        ctb_movimento_doc_w.nr_seq_info                 := 70;

         ctb_movimento_doc_w := ctb_online_pck.ctb_gravar_movto( ctb_movimento_doc_w, nm_usuario_p, 'S');
        end;
end loop;
close c010;

commit;

update  lote_contabil
set     ie_situacao      = 'A',
        dt_geracao_lote  = clock_timestamp(),
        dt_integracao    = clock_timestamp()
where   nr_lote_contabil = nr_lote_contabil_w;

ds_erro_w := ctb_atualizar_saldo(  nr_lote_contabil_w, 'S', nm_usuario_p, 'N', ds_erro_w, 'S');
commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_contab_onl_troca_plano ( nm_usuario_p text, cd_estabelecimento_p bigint, cd_historico_p bigint, nr_seq_mes_ref_p bigint) FROM PUBLIC;

