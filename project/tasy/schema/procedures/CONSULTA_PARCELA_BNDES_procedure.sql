-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consulta_parcela_bndes (nr_seq_contrato_p bigint, nm_usuario_p text, contratante_jurico_p bigint, contratante_fisico_p bigint, contratado_jurico_p bigint, contratado_fisico_p bigint, cd_estabelecimento_p bigint, data_posicao_p timestamp) AS $body$
DECLARE


nr_seq_ind_reaj_w     contrato_bndes.nr_seq_ind_reaj%type;
tx_ajuste_w           contrato_bndes.tx_ajuste%type;
vl_principal_w        contrato_bndes.vl_principal%type;
dt_credito_w          contrato_bndes.dt_credito%type;
qt_parcelas_w         contrato_bndes.qt_parcelas%type;
ds_formula_w          contrato_bndes.ds_formula%type;

dt_final_w            emprest_financ_parc.dt_final%type;
dt_inicial_w          emprest_financ_parc.dt_inicial%type;
dt_vencimento_w       emprest_financ_parc.dt_vencimento%type;
nr_parcela_w          emprest_financ_parc.nr_parcela%type;
qt_dup_w              emprest_financ_parc.qt_dup%type;
qt_dut_w              emprest_financ_parc.qt_dut%type;
vl_amortizacao_w      emprest_financ_parc.vl_amortizacao%type;
vl_correcao_w         emprest_financ_parc.vl_correcao%type;
vl_indice_reaj_w      emprest_financ_parc.vl_indice_reaj%type;
vl_juros_index_w      emprest_financ_parc.vl_juros_index%type;
vl_juros_w            emprest_financ_parc.vl_juros%type;
vl_parcela_w          emprest_financ_parc.vl_parcela%type;
vl_saldo_dev_index_w  emprest_financ_parc.vl_saldo_dev_index%type;
vl_saldo_dev_w        emprest_financ_parc.vl_saldo_dev%type;
nr_seq_contrato_w     emprest_financ_parc.nr_seq_contrato%type;

vl_correcao_acum_w    w_emprest_financ_parc.vl_correcao_acum%type;
vl_curto_prazo_w      w_emprest_financ_parc.vl_curto_prazo%type;
vl_longo_prazo_w      w_emprest_financ_parc.vl_longo_prazo%type;
vl_pago_w             w_emprest_financ_parc.vl_pago%type;
vl_saldo_corrigido_w  w_emprest_financ_parc.vl_saldo_corrigido%type;
vl_total_w            w_emprest_financ_parc.vl_total%type;

C01 CURSOR FOR
  SELECT
    a.nr_parcela,
    a.dt_vencimento,
    a.dt_inicial,
    a.dt_final,
    a.qt_dup,
    a.vl_indice_reaj,
    a.vl_parcela,
    a.vl_amortizacao,
    a.vl_juros,
    a.vl_juros_index,
    a.vl_correcao,
    b.vl_principal,
    a.vl_saldo_dev,
    a.vl_saldo_dev_index,
    b.dt_credito,
    b.nr_seq_ind_reaj,
    b.qt_parcelas,
    b.tx_ajuste,
    b.ds_formula,
    a.nr_seq_contrato
  from emprest_financ_parc a,
       contrato_bndes b,
       contrato c
  where a.nr_seq_contrato = b.nr_seq_contrato
  and a.nr_seq_contrato = c.nr_sequencia
  and (coalesce(cd_estabelecimento_p::text, '') = '' or a.cd_estabelecimento = cd_estabelecimento_p)
  and (coalesce(nr_seq_contrato_p::text, '') = '' or a.nr_seq_contrato = nr_seq_contrato_p)
  and (coalesce(contratante_jurico_p::text, '') = '' or c.cd_cnpj_contratante = contratante_jurico_p)
  and (coalesce(contratante_fisico_p::text, '') = '' or c.cd_pessoa_contratante = contratante_fisico_p)
  and (coalesce(contratado_jurico_p::text, '') = '' or c.cd_cgc_contratado = contratado_jurico_p)
  and (coalesce(contratado_fisico_p::text, '') = '' or c.cd_pessoa_contratada = contratado_fisico_p)
  and (coalesce(data_posicao_p::text, '') = '' or a.dt_final = data_posicao_p)
  and (a.nr_parcela IS NOT NULL AND a.nr_parcela::text <> '');


BEGIN

  delete from w_emprest_financ_parc where nm_usuario = nm_usuario_p;

  open C01;
  loop
  fetch C01 into
  nr_parcela_w,
  dt_vencimento_w,
  dt_inicial_w,
  dt_final_w,
  qt_dup_w,
  vl_indice_reaj_w,
  vl_parcela_w,
  vl_amortizacao_w,
  vl_juros_w,
  vl_juros_index_w,
  vl_correcao_w,
  vl_principal_w,
  vl_saldo_dev_w,
  vl_saldo_dev_index_w,
  dt_credito_w,
  nr_seq_ind_reaj_w,
  qt_parcelas_w,
  tx_ajuste_w,
  ds_formula_w,
  nr_seq_contrato_w;
  EXIT WHEN NOT FOUND; /* apply on C01 */

   vl_pago_w := vl_principal_w * nr_parcela_w;
   vl_saldo_corrigido_w := vl_saldo_dev_w + vl_juros_w;

  insert into w_emprest_financ_parc(
    nr_sequencia,
    dt_atualizacao,
    dt_atualizacao_nrec,
    dt_final,
    dt_inicial,
    dt_vencimento,
    nm_usuario,
    nm_usuario_nrec,
    nr_parcela,
    nr_seq_contrato,
    qt_dup,
    qt_dut,
    vl_amortizacao,
    vl_correcao,
    vl_correcao_acum,
    vl_curto_prazo,
    vl_indice_reaj,
    vl_juros,
    vl_juros_index,
    vl_longo_prazo,
    vl_pago,
    vl_parcela,
    vl_saldo_corrigido,
    vl_saldo_dev,
    vl_saldo_dev_index,
    vl_total)
  values (
    nextval('w_emprest_financ_parc_seq'),
    clock_timestamp(),
    dt_vencimento_w,
    dt_final_w,
    dt_inicial_w,
    dt_vencimento_w,
    nm_usuario_p,
    nm_usuario_p,
    nr_parcela_w,
    coalesce(nr_seq_contrato_w,0),
    qt_dup_w,
    qt_dut_w,
    coalesce(vl_amortizacao_w,0),
    vl_correcao_w,
    vl_correcao_acum_w,
    vl_curto_prazo_w,
    vl_indice_reaj_w,
    coalesce(vl_juros_w,0),
    vl_juros_index_w,
    vl_longo_prazo_w,
    vl_pago_w,
    coalesce(vl_parcela_w,0),
    vl_saldo_corrigido_w,
    coalesce(vl_saldo_dev_w,0),
    vl_saldo_dev_index_w,
    vl_total_w);

    dt_vencimento_w := last_day(dt_vencimento_w);
    dt_inicial_w := dt_final_w;
    dt_final_w := last_day(dt_final_w);
    qt_dup_w := obter_dias_uteis_periodo(dt_inicial_w, dt_final_w, cd_estabelecimento_p);
    qt_dut_w := obter_dias_uteis_periodo(dt_inicial_w, dt_final_w, cd_estabelecimento_p);
    vl_indice_reaj_w := coalesce(obter_taxa_ajuste(nr_seq_ind_reaj_w, dt_vencimento_w),0);

    if (vl_indice_reaj_w != 0) then
      vl_amortizacao_w := vl_principal_w * coalesce(vl_indice_reaj_w, 1);
    else
      vl_amortizacao_w := vl_principal_w;
    end if;

    vl_juros_index_w := obter_resultado_formula(ds_formula_w, nr_seq_contrato_w, nr_parcela_w, dt_vencimento_w);
    vl_juros_w := (vl_juros_index_w * coalesce(vl_indice_reaj_w, 1));

    vl_correcao_w := 0;
    vl_parcela_w := coalesce(vl_amortizacao_w,0) + coalesce(vl_juros_w,0);
	vl_pago_w := vl_principal_w * nr_parcela_w;										
    vl_curto_prazo_w := vl_principal_w * 12;
    vl_longo_prazo_w := vl_principal_w * qt_parcelas_w;
	vl_saldo_corrigido_w := vl_saldo_dev_w + vl_juros_w;													
    vl_correcao_acum_w := ((vl_saldo_dev_index_w * vl_juros_index_w) - (vl_saldo_dev_index_w * tx_ajuste_w));
    vl_total_w := vl_curto_prazo_w + vl_longo_prazo_w + vl_correcao_acum_w;

    insert into w_emprest_financ_parc(
      nr_sequencia,
      dt_atualizacao,
      dt_atualizacao_nrec,
      dt_final,
      dt_inicial,
      dt_vencimento,
      nm_usuario,
      nm_usuario_nrec,
      nr_parcela,
      nr_seq_contrato,
      qt_dup,
      qt_dut,
      vl_amortizacao,
      vl_correcao,
      vl_correcao_acum,
      vl_curto_prazo,
      vl_indice_reaj,
      vl_juros,
      vl_juros_index,
      vl_longo_prazo,
      vl_pago,
      vl_parcela,
      vl_saldo_corrigido,
      vl_saldo_dev,
      vl_saldo_dev_index,
      vl_total)
    values (
      nextval('w_emprest_financ_parc_seq'),
      clock_timestamp(),
      dt_vencimento_w,
      dt_final_w,
      dt_inicial_w,
      dt_vencimento_w,
      nm_usuario_p,
      nm_usuario_p,
      nr_parcela_w,
      coalesce(nr_seq_contrato_w, 0),
      qt_dup_w,
      qt_dut_w,
      coalesce(vl_amortizacao_w,0),
      vl_correcao_w,
      vl_correcao_acum_w,
      vl_curto_prazo_w,
      vl_indice_reaj_w,
      coalesce(vl_juros_w,0),
      vl_juros_index_w,
      vl_longo_prazo_w,
      vl_pago_w,
      coalesce(vl_parcela_w,0),
      coalesce(vl_saldo_corrigido_w,0),
      coalesce(vl_saldo_dev_w,0),
      vl_saldo_dev_index_w,
      vl_total_w);
  end	loop;
  close	c01;

commit;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consulta_parcela_bndes (nr_seq_contrato_p bigint, nm_usuario_p text, contratante_jurico_p bigint, contratante_fisico_p bigint, contratado_jurico_p bigint, contratado_fisico_p bigint, cd_estabelecimento_p bigint, data_posicao_p timestamp) FROM PUBLIC;

