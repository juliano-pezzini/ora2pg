-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_bloqueto_tit_rec ( nr_titulo_p bigint, ie_origem_via_p text, ie_recalcula_nosso_num text default null) AS $body$
DECLARE


nr_bloqueto_invertido_w			varchar(255);
nr_bloqueto_w				varchar(255);
cd_banco_w				varchar(255);
cd_moeda_w				varchar(255);
cd_agencia_w				varchar(255);
cd_conta_w				varchar(255);
dt_vencimento_w				timestamp;
nr_titulo_w				bigint;
vl_saldo_titulo_w				double precision;
vl_bloqueto_w				bigint	:= 0;
nr_digito_w				bigint;
tp_cobranca_w				bigint	:= 1;
cd_versao_w				bigint	:= 7;
cd_fator_w				bigint	:= 0;
ds_campo_livre_w				varchar(255);
cd_digito_w				bigint;
ie_tipo_cobranca_bloqueto_w			varchar(255);
cd_conta_bloqueto_w			varchar(255);
nr_nosso_w				varchar(255);
Tamanho_w				bigint;
cd_carteira_w				varchar(255);
cd_convenio_banco_w			varchar(255);
nr_dig_nosso_numero_w			varchar(2);
ie_regra_w				varchar(3);
ie_prorrogacao_portal_w			varchar(1);
count_regra_w				bigint;
/* Francisco - 03/04/07 - Digitos verificadores Itau */

ds_dac1_w				varchar(255)	:= '';
ds_dac2_w				varchar(255)	:= '';
cd_cod_banco_w				bigint;
cd_tipo_port_bloq_w			bigint;
cd_portador_bloq_w			bigint;	
nr_atual_w				banco_regra_numero.nr_atual%type;
nr_nosso_numero_w			varchar(20);
cd_estabelecimento_w			bigint;
ie_juros_multa_barras_bloq_w			varchar(5);
ie_juros_multa_barras_bloq_ww		varchar(5);
cd_conv_banco_w				varchar(100);
ie_gerar_nosso_num_bloq_w			varchar(30);
ie_cod_barras_nosso_num_w			varchar(1);
ds_num_titulo_w				varchar(20);
nr_num_titulo_w				varchar(20);
ie_digito_conta_w				varchar(2);
cd_convenio_w				integer;
ie_tit_liquido_w				varchar(1);
vl_liquido_w				double precision;
nr_seq_regra_w				bigint;
nr_seq_carteira_cobr_w			bigint;
nr_bloqueto_ww				varchar(44);
vl_juros_boleto_w				double precision	:= null;
vl_multa_boleto_w				double precision	:= null;
nr_seq_conta_banco_w			bigint;
qt_regra_w				bigint;
qt_dig_numero_w				integer;
nr_fixo_w					bigint;
qt_dig_verif_w				integer;
cd_cedente_w				varchar(10);
cd_estabelecimento_tit_w			bigint;
ds_rotina_digito_w				varchar(15);
ie_atualiza_vl_juros_multa_w			varchar(10) := 'N';
ie_atual_nr_nosso_numero_w			varchar(10) := 'N';
ds_inconsistencia_w			varchar(2000);
ds_banco_w				banco.ds_banco%type;
ds_nosso_numero_w			varchar(20);
ie_cobranca_diretiva_w			banco_estabelecimento.ie_cobranca_diretiva%type;
nr_nosso_numero_atual_w			titulo_receber.nr_nosso_numero%type;
cd_pessoa_fisica_w			titulo_receber.cd_pessoa_fisica%type;
cd_cgc_w				titulo_receber.cd_cgc%type;
nr_seq_regra_dados_w			regra_dados_conta_banco.nr_sequencia%type;
ie_atualiza_numero_w			varchar(1)	:= 'N';
dt_ultima_via_w				timestamp;
dt_alteracao_valor_w			timestamp;
dt_alteracao_venc_w			timestamp;
dt_alteracao_port_w			timestamp;
nr_seq_alt_venc_w				bigint;
ie_zerar_juros_multa_w			varchar(1);
vl_saldo_juros_w				titulo_receber.vl_saldo_juros%type;
vl_saldo_multa_w				titulo_receber.vl_saldo_multa%type;
ie_juros_multa_vazio_w			boolean := false;
nr_seq_mensalidade_w			titulo_receber.nr_seq_mensalidade%type;
ie_regra_nosso_estab_w			banco_regra_numero.ie_regra%type;	
ie_regra_nosso_estab_fin_w			banco_regra_numero.ie_regra%type;
cd_estab_financeiro_w			titulo_receber.cd_estab_financeiro%type;
ie_alt_cart_venc_prorrogado_w		pls_regra_emis_seg_via_bol.ie_alt_cart_venc_prorrogado%type;
dt_vencimento_ww				timestamp;
dt_pagamento_previsto_w			timestamp;
ie_vencimento_prorrogado_w			varchar(1)	:= 'N';
ds_nosso_numero_ww			varchar(20);			
dt_base_juliano_w				timestamp;
dt_base_ult_digito_w			smallint;
cd_fator_juliano_w				bigint;
ie_fator_zerado_w			banco_carteira.ie_fator_zerado%type;
cd_posto_w						banco_estabelecimento.cd_posto%type;
cd_banco_boleto_w				banco.cd_banco_boleto%type;
nr_seq_carteira_cobr_tit_w		titulo_receber.nr_seq_carteira_cobr%type;
ie_lock_handle_w 				varchar(128);
ie_result_lock_w				bigint;




BEGIN


if (nr_titulo_p IS NOT NULL AND nr_titulo_p::text <> '') then -- Verifica regra, para alterar carteira
	select	max(nr_bloqueto),
		trunc(max(dt_vencimento),'dd'),
		trunc(max(dt_pagamento_previsto),'dd'),
		max(cd_estabelecimento)
	into STRICT	nr_bloqueto_ww,
		dt_vencimento_ww,
		dt_pagamento_previsto_w,
		cd_estabelecimento_w
	from	titulo_receber
	where	nr_titulo	= nr_titulo_p;
	
	if (nr_bloqueto_ww IS NOT NULL AND nr_bloqueto_ww::text <> '') then
		select	pls_obter_regra_seg_via_boleto(null,null,null,nr_titulo_p,clock_timestamp(),'PO',cd_estabelecimento_w)
		into STRICT	nr_seq_regra_w
		;
		
		if (dt_pagamento_previsto_w IS NOT NULL AND dt_pagamento_previsto_w::text <> '') and (dt_vencimento_ww IS NOT NULL AND dt_vencimento_ww::text <> '') then
			if (dt_pagamento_previsto_w > dt_vencimento_ww) then
				ie_vencimento_prorrogado_w := 'S';
			else
				ie_vencimento_prorrogado_w := 'N';
			end if;
		end if;
		
		if (nr_seq_regra_w IS NOT NULL AND nr_seq_regra_w::text <> '') then
			-- Verifica a regra (funcao Cadastro de Regras> OPS - Mensalidades> Regra emissao 2 via boleto)
			select	nr_seq_carteira_cobr,	
				coalesce(ie_alt_cart_venc_prorrogado,'N')
			into STRICT	nr_seq_carteira_cobr_w,
				ie_alt_cart_venc_prorrogado_w
			from	pls_regra_emis_seg_via_bol
			where	nr_sequencia = nr_seq_regra_w;

			if (nr_seq_carteira_cobr_w IS NOT NULL AND nr_seq_carteira_cobr_w::text <> '') and (ie_alt_cart_venc_prorrogado_w = 'N') then
				-- Atualizar carteira cobranca
				update	titulo_receber
				set	nr_seq_carteira_cobr	= nr_seq_carteira_cobr_w
				where	nr_titulo		= nr_titulo_p;	
			elsif (ie_vencimento_prorrogado_w = 'S') and (ie_alt_cart_venc_prorrogado_w = 'S') and (nr_seq_carteira_cobr_w IS NOT NULL AND nr_seq_carteira_cobr_w::text <> '') then
				-- Atualizar carteira somente se vencimento prorrogado
				update	titulo_receber
				set	nr_seq_carteira_cobr	= nr_seq_carteira_cobr_w
				where	nr_titulo		= nr_titulo_p;
			end if;
		end if;
	end if;		
end if;

cd_estabelecimento_w := null;

select	max(a.nr_seq_conta_banco),
	max(a.cd_pessoa_fisica),
	max(a.cd_cgc),
	max(a.nr_seq_carteira_cobr)
into STRICT	nr_seq_conta_banco_w,
	cd_pessoa_fisica_w,
	cd_cgc_w,
	nr_seq_carteira_cobr_tit_w
from	titulo_receber a
where	a.nr_titulo	= nr_titulo_p;

if (nr_seq_conta_banco_w IS NOT NULL AND nr_seq_conta_banco_w::text <> '') then

	nr_seq_regra_dados_w	:= OBTER_REGRA_DADOS_BANCO(nr_seq_conta_banco_w,cd_pessoa_fisica_w,cd_cgc_w,nr_seq_carteira_cobr_tit_w);
	
	if (nr_seq_regra_dados_w IS NOT NULL AND nr_seq_regra_dados_w::text <> '') then
		select	max(a.cd_conta_bloqueto)
		into STRICT	cd_conta_bloqueto_w
		from	regra_dados_conta_banco a
		where	a.nr_sequencia	= nr_seq_regra_dados_w;
	end if;

	select	to_char(b.cd_banco,'FM000'),
		coalesce(coalesce(e.cd_bloqueto,e.cd_agencia_bancaria),'0'),
		coalesce(b.cd_conta,'0'),
		coalesce(coalesce(cd_conta_bloqueto_w,cd_conta_bloqueto),'0'),
		coalesce(ie_tipo_cobranca_bloqueto,'003'),
		a.dt_pagamento_previsto, -- Francisco - 54016 - Troquei de dt_vencimento para dt_pagamento_previsto
		a.vl_saldo_titulo, -- Francisco - OS 53218 - Troquei de vl_titulo para vl_saldo_titulo
		a.nr_titulo,
		to_char(c.cd_moeda_banco,'FM0'),
		coalesce(d.cd_carteira, substr(coalesce(b.cd_carteira,'0'), 1,3)),
		d.ie_fator_zerado,
		b.cd_banco,
		coalesce(d.cd_convenio_banco, b.cd_convenio_banco), /* Elton 05/09/2009 OS 149043, incluso campo cd_convenio_banco, referente bloqueto do Banco do Brasil, carteira 17. */
		b.cd_estabelecimento,
		b.cd_convenio_banco,
		coalesce(b.ie_cod_barras_nosso_num,'N'),
		b.ie_digito_conta,
		obter_convenio_tit_rec(a.nr_titulo) cd_convenio,
		(obter_dados_titulo_receber(a.nr_titulo,'VL'))::numeric  vl_liquido,
		coalesce(a.ie_prorrogacao_portal,'N'),
		b.cd_cedente,
		a.cd_estabelecimento,
		f.ds_banco,
		coalesce(b.ie_cobranca_diretiva,'N'),
		a.nr_nosso_numero,
		a.vl_saldo_juros,
		a.vl_saldo_multa,
		a.nr_seq_mensalidade,
		a.cd_estab_financeiro,
		to_char(f.cd_banco_boleto,'FM000'),
		to_char(b.cd_posto,'FM00')
	into STRICT	cd_banco_w,
		cd_agencia_w,
		cd_conta_w,
		cd_conta_bloqueto_w,
		ie_tipo_cobranca_bloqueto_w,
		dt_vencimento_w,
		vl_saldo_titulo_w,
		nr_titulo_w,
		cd_moeda_w,
		cd_carteira_w,
		ie_fator_zerado_w,
		cd_cod_banco_w,
		cd_convenio_banco_w,
		cd_estabelecimento_w,
		cd_conv_banco_w,
		ie_cod_barras_nosso_num_w,
		ie_digito_conta_w,
		cd_convenio_w,
		vl_liquido_w,
		ie_prorrogacao_portal_w,
		cd_cedente_w,
		cd_estabelecimento_tit_w,
		ds_banco_w,
		ie_cobranca_diretiva_w,
		nr_nosso_numero_atual_w,
		vl_saldo_juros_w,
		vl_saldo_multa_w,
		nr_seq_mensalidade_w,
		cd_estab_financeiro_w,
		cd_banco_boleto_w,
		cd_posto_w
	FROM agencia_bancaria e, moeda c, banco_estabelecimento b
LEFT OUTER JOIN banco f ON (b.cd_banco = f.cd_banco)
, titulo_receber a
LEFT OUTER JOIN banco_carteira d ON (a.nr_seq_carteira_cobr = d.nr_sequencia)
WHERE a.nr_seq_conta_banco	= b.nr_sequencia and a.cd_moeda   		= c.cd_moeda  and a.nr_titulo 		= nr_titulo_p and b.cd_banco		= e.cd_banco and b.cd_agencia_bancaria	= e.cd_agencia_bancaria;
	
	ie_zerar_juros_multa_w := obter_param_usuario(801, 191, obter_perfil_ativo, obter_usuario_ativo, cd_estabelecimento_tit_w, ie_zerar_juros_multa_w);
	
	-- OS 597435 - Conta bancaria nem sempre tem CD_ESTABELECIMENTO, pode ter CD_EMPRESA
	if (coalesce(cd_estabelecimento_w::text, '') = '') then
		cd_estabelecimento_w := cd_estabelecimento_tit_w;
	end if;

	select	coalesce(max(ie_juros_multa_barras_bloq),'N'),
		coalesce(max(ie_gerar_nosso_num_bloq),'N')
	into STRICT	ie_juros_multa_barras_bloq_w,
		ie_gerar_nosso_num_bloq_w
	from	parametro_contas_receber
	where	cd_estabelecimento	= cd_estabelecimento_w;

	if (ie_origem_via_p in ('PW','PO')) then
		select	CASE WHEN coalesce(ie_juros_multa_barras_bloq,'R')='N' THEN ie_juros_multa_barras_bloq  ELSE ie_juros_multa_barras_bloq_w END
		into STRICT	ie_juros_multa_barras_bloq_w
		from	pls_web_param_geral
		where	cd_estabelecimento	= cd_estabelecimento_w;				
	end if;
	
	select	max(a.ie_tit_liquido)
	into STRICT	ie_tit_liquido_w
	from	convenio_estabelecimento a
	where	a.cd_estabelecimento	= cd_estabelecimento_w
	and	a.cd_convenio		= cd_convenio_w;

	if (ie_tit_liquido_w = 'S') then
		vl_saldo_titulo_w	:= vl_liquido_w;
	end if;
	
	select	count(*)
	into STRICT	count_regra_w
	from	banco_regra_numero a
	where	a.cd_banco		= cd_banco_w
	and	a.cd_estabelecimento	= cd_estabelecimento_w
	and	a.ie_regra in ('S','FSD','ACS','AFS','PAS','DAC','FAS')
	and	(nr_atual IS NOT NULL AND nr_atual::text <> '');

	if (count_regra_w > 0) then
		select	max(a.nr_atual)
		into STRICT	nr_atual_w
		from	banco_regra_numero a
		where	a.cd_banco		= cd_banco_w
		and	a.cd_estabelecimento	= cd_estabelecimento_w
		and	a.ie_regra in ('S','FSD','ACS','AFS','PAS','DAC','FAS')
		and	(nr_atual IS NOT NULL AND nr_atual::text <> '');
	end if;
	/*aamfrimo OS  876082 - Se nao encontrar regra para nosso numero para o estabelecimento do titulo, deve procurar a regra no estabelecimento financeiro do titulo, que e o que a function Obter_Nosso_Numero_Banco faz para obter o nosso numero*/

	if (count_regra_w = 0) and (cd_estab_financeiro_w IS NOT NULL AND cd_estab_financeiro_w::text <> '') and (coalesce(nr_atual_w::text, '') = '') then
	
		select	count(*)
		into STRICT	count_regra_w
		from	banco_regra_numero a
		where	a.cd_banco		= cd_banco_w
		and	a.cd_estabelecimento	= cd_estab_financeiro_w /*agora verifica a regra para o estabelecimento financeiro do titulo*/
		and	a.ie_regra in ('S','FSD','ACS','AFS','PAS','DAC','FAS')
		and	(nr_atual IS NOT NULL AND nr_atual::text <> '');
		
		if (count_regra_w > 0) then
			select	max(a.nr_atual)
			into STRICT	nr_atual_w
			from	banco_regra_numero a
			where	a.cd_banco		= cd_banco_w
			and	a.cd_estabelecimento	= cd_estab_financeiro_w /*busca o numero atual da regra do estabelecimento financeiro*/
			and	a.ie_regra in ('S','FSD','ACS','AFS','PAS','DAC','FAS')
			and	(nr_atual IS NOT NULL AND nr_atual::text <> '');
		end if;

	end if;
		
	select	max(a.nr_sequencia)
	into STRICT	nr_seq_alt_venc_w
	from	w_alteracao_vencimento a
	where	a.nr_titulo	= nr_titulo_p;

	if (nr_seq_alt_venc_w IS NOT NULL AND nr_seq_alt_venc_w::text <> '') then
		select	max(a.ie_calc_juros_multa),
			max(a.dt_alteracao),
			max(a.vl_juros),
			max(a.vl_multa)
		into STRICT	ie_atualiza_vl_juros_multa_w,
			dt_alteracao_venc_w,
			vl_juros_boleto_w,
			vl_multa_boleto_w
		from	w_alteracao_vencimento a
		where	a.nr_sequencia	= nr_seq_alt_venc_w
		and	a.nr_titulo	= nr_titulo_p;
		
		if (ie_juros_multa_barras_bloq_w <> 'N') and
			((coalesce(vl_juros_boleto_w,0)	<> 0) or (coalesce(vl_multa_boleto_w,0)	<> 0)) then
			if (coalesce(ie_zerar_juros_multa_w,'N')	= 'N') then
				vl_saldo_titulo_w	:= vl_saldo_titulo_w + coalesce(vl_saldo_juros_w,0) + coalesce(vl_saldo_multa_w,0);
			else
				vl_saldo_titulo_w	:= vl_saldo_titulo_w + coalesce(vl_juros_boleto_w,0) + coalesce(vl_multa_boleto_w,0);
			end if;
		else
			ie_juros_multa_vazio_w := true;
		end if;
	end if;

	if (coalesce(nr_seq_alt_venc_w::text, '') = '') or (ie_juros_multa_vazio_w) then
		/* Francisco - OS 394228 - Quando estiver parametrizado para o bloqueto ser gerado
		com os juros e multa embutidos, precisa armazenar os valores para tratar no retorno */
	
		
		if (ie_origem_via_p in ('PW','PO')) then
			select	CASE WHEN coalesce(ie_juros_multa_barras_bloq,'R')='N' THEN ie_juros_multa_barras_bloq  ELSE ie_juros_multa_barras_bloq_w END
			into STRICT	ie_juros_multa_barras_bloq_ww
			from	pls_web_param_geral
			where	cd_estabelecimento	= cd_estabelecimento_w;			
		end if;
	
		/* Ana  Oberziner - 15/01/2012 - Quando executado via portal, ignorar o parametro "ie_juros_multa_barras_bloq_w' e sempre usar o DT_PAGAMENTO_PREVISTO.*/

		if (ie_prorrogacao_portal_w = 'S')  then	
			if (coalesce(ie_juros_multa_barras_bloq_ww,'R') <> 'N') then
				vl_juros_boleto_w	:= pls_obter_juros_multa_portal(nr_titulo_w,dt_vencimento_w,'R','J','S');
				vl_multa_boleto_w	:= pls_obter_juros_multa_portal(nr_titulo_w,dt_vencimento_w,'R','M','S');
				vl_saldo_titulo_w	:= vl_saldo_titulo_w + vl_juros_boleto_w + vl_multa_boleto_w;
			end if;
		elsif (ie_prorrogacao_portal_w = 'N') then			
			/* ebcabral - 04/10/2011 - Alterado o parametro para que seja possivel calcular, o valor de juros e multa, de acordo com a data atual ou a data de pagamento previsto*/

			if (ie_juros_multa_barras_bloq_w <> 'N') then	
				if (ie_juros_multa_barras_bloq_w = 'V') then
					vl_juros_boleto_w	:= obter_juros_multa_titulo(nr_titulo_w, dt_vencimento_w, 'R','J');
					vl_multa_boleto_w	:= obter_juros_multa_titulo(nr_titulo_w, dt_vencimento_w, 'R','M');				
					vl_saldo_titulo_w	:= vl_saldo_titulo_w + vl_juros_boleto_w + vl_multa_boleto_w;
				elsif (ie_juros_multa_barras_bloq_w = 'S') then
					vl_juros_boleto_w	:= obter_juros_multa_titulo(nr_titulo_w, clock_timestamp(), 'R','J');
					vl_multa_boleto_w	:= obter_juros_multa_titulo(nr_titulo_w, clock_timestamp(), 'R','M');				
					vl_saldo_titulo_w	:= vl_saldo_titulo_w + vl_juros_boleto_w + vl_multa_boleto_w;
				elsif (ie_juros_multa_barras_bloq_w = 'A') then /*AAMFIRMO OS 867519 Se o titulo foi prorrogado, verificar isencao de juros e multa*/
					if (nr_seq_alt_venc_w IS NOT NULL AND nr_seq_alt_venc_w::text <> '') and (ie_atualiza_vl_juros_multa_w = 'N') then /*se tiver alteracao de vencimento e isentado juros e multa, considerar apenas o saldo do titulo no bloqueto*/
						vl_saldo_titulo_w := vl_saldo_titulo_w;
				    elsif (nr_seq_alt_venc_w IS NOT NULL AND nr_seq_alt_venc_w::text <> '') and (ie_atualiza_vl_juros_multa_w = 'S') then /*se tiver alteracao de vencimento e NAO for isentando juros e multa, pegar juros e multa do titulo e somar ao saldo*/
						vl_saldo_titulo_w	:= coalesce(vl_saldo_titulo_w,0) + coalesce(vl_saldo_juros_w,0) + coalesce(vl_saldo_multa_w,0);
					end if;	
				end if;	
			end if;	
		end if;

	end if;
	
	if	((coalesce(nr_seq_alt_venc_w::text, '') = '') or (ie_juros_multa_vazio_w)) and
		((vl_juros_boleto_w IS NOT NULL AND vl_juros_boleto_w::text <> '') or (vl_multa_boleto_w IS NOT NULL AND vl_multa_boleto_w::text <> '')) then
		ie_atualiza_vl_juros_multa_w	:= 'S';
	end if;

	vl_bloqueto_w	:= vl_saldo_titulo_w * 100;
	
	cd_fator_w	:= trunc(dt_vencimento_w,'dd') - to_date('07/10/1997','dd/mm/yyyy');
	
	/*OS 2608509 - A partir do vencimento 22/02/2025 em diante o fator de vencimento ultrapassa 9999 e sera 10000, com 5 digitos, ultrapassando o limite de 4 digitos do fator de vencimento no layout codigo de barras.
	Diante disso, precisa retornar a 1000 (4 digitos). Exemplo:
	/*FATOR		VENCIMENTO
	1000		03/07/2000 
	1001 		04/07/2000
	1002		05/07/2000 
	1003 		06/07/2000
	1004		07/07/2000 
	1667 		01/05/2002
	4789		17/11/2010 
	9999 		21/02/2025 
	1000 		22/02/2025 
	1001 		23/02/2025*/
	if (cd_fator_w > 9999) then
		cd_fator_w	:= trunc(dt_vencimento_w,'dd') - to_date('22/02/2025','dd/mm/yyyy') + 1000;
	end if;
	--OS 2608509  fim
	
	if (ie_fator_zerado_w = 'S') then
		cd_fator_w := '0';
	end if;

	/* Francisco - 31/08/2011  - Tratamento para sempre gerar o nr_nosso_numero */

	if (ie_gerar_nosso_num_bloq_w = 'S') or
		((ie_gerar_nosso_num_bloq_w = 'P') and (coalesce(nr_nosso_numero_atual_w::text, '') = '')) or (ie_recalcula_nosso_num = 'S') then


		select	substr(Obter_Nosso_Numero_Banco(cd_banco_w,nr_titulo_w),1,20) nr_nosso_numero
		into STRICT	nr_nosso_numero_w
		;

		if (nr_nosso_numero_w IS NOT NULL AND nr_nosso_numero_w::text <> '') then
			ie_atual_nr_nosso_numero_w	:= 'S';

			if (cd_banco_w <> 33) and (cd_banco_w <> 1) and (cd_banco_w <> 756) and
				((cd_banco_w <> 399) or (cd_conta_w <> 15704)) then
				
				select	max(ie_regra) /*procura a regra pelo estabelecimento do titulo*/
				into STRICT	ie_regra_nosso_estab_w
				from	banco_regra_numero
				where	cd_banco		= cd_banco_w
				and	cd_estabelecimento	= cd_estabelecimento_tit_w;
				
				/*aamfrimo OS  876082 continuacao, aqui faz o update na regra, tb precisa verificar se nao achou do estabecimento, entao procura no estab financeiro*/

				if (coalesce(ie_regra_w::text, '') = '') then /*se nao achou regra para o estabelecimento do titulo, procura pelo estabelecimento financeiro do titulo*/
					
					if (cd_estab_financeiro_w IS NOT NULL AND cd_estab_financeiro_w::text <> '') then
				
						select	max(ie_regra)
						into STRICT	ie_regra_nosso_estab_fin_w
						from	banco_regra_numero
						where	cd_banco		= cd_banco_w
						and	cd_estabelecimento	= cd_estab_financeiro_w;/*busca regra pelo estabelecimento financeiro do titulo*/
					
					end if;
				
				end if;

				update	banco_regra_numero
				set	nr_atual		= coalesce(nr_atual_w,0) + 1
				where	cd_banco		= cd_banco_w
				and	cd_estabelecimento	= cd_estabelecimento_w;

				if (ie_regra_nosso_estab_fin_w IS NOT NULL AND ie_regra_nosso_estab_fin_w::text <> '') and (coalesce(ie_regra_nosso_estab_w::text, '') = '')then /*se achou a regra para o estabelecimento financeiro e nao achou para o estabelecimento, o update deve ocorrer nessa regra do estabelecimento financeiro, */
					update	banco_regra_numero
					set	nr_atual		= coalesce(nr_atual_w,0) + 1
					where	cd_banco		= cd_banco_w
					and	cd_estabelecimento	= cd_estab_financeiro_w;

				end if;

			end if;

		end if;

	else
	
		nr_nosso_numero_w	:= nr_nosso_numero_atual_w;
		
	end if;

	if (ie_cod_barras_nosso_num_w = 'S') then

		ds_num_titulo_w	:= coalesce(nr_nosso_numero_w,to_char(nr_titulo_w));
		nr_num_titulo_w	:= somente_numero(ds_num_titulo_w);
	else
		ds_num_titulo_w	:= nr_titulo_w;
		nr_num_titulo_w	:= nr_titulo_w;
	end if;

	if (cd_banco_w = 104) then

		if (length(ds_num_titulo_w) > 8) and (cd_carteira_w <> 'SR') then
			ds_inconsistencia_w	:=	ds_inconsistencia_w || chr(10) || chr(13) ||
							/*'O nosso numero/titulo nao pode possuir mais de 8 caracteres para este banco.' || chr(10) || chr(13) ||
							'Nosso numero/titulo: ' || ds_num_titulo_w;*/
							wheb_mensagem_pck.get_texto(302175, 'DS_NUM_TITULO_W=' || ds_num_titulo_w);
		end if;
		
		if (coalesce(ds_inconsistencia_w::text, '') = '') then

			/* tratamento conforme o layout de Fevereiro/2014 - OS 740597 */

			if (cd_carteira_w = '24') or (cd_carteira_w = 'SR') then
				select	substr(Obter_Nosso_Numero_Banco(cd_banco_w,nr_titulo_w),1,20) nr_nosso_numero
				into STRICT	ds_nosso_numero_w
				;
				
				--Unimed Blumenau

				--if (cd_carteira_w = 'SR') then

				--	ds_nosso_numero_ww := lpad(substr(nvl(ds_nosso_numero_w,'0'),10,9),9,'0');

				--else
					ds_nosso_numero_ww := lpad(substr(coalesce(ds_nosso_numero_w,'0'),9,9),9,'0');
				--end if;

				/* 
				Nao alterar 'MODULO11','Bloqueto' e 'BLOQUETO', quando dentro da function Calcula_Digito, para expressoes,
				pois servem de codigo dentro da function e portanto nao devem ser alteradas.
				*/
				ds_campo_livre_w :=	lpad(substr(coalesce(cd_convenio_banco_w,'0'),1,6),6,'0') ||
							substr(coalesce(calcula_digito('MODULO11',lpad(substr(coalesce(cd_convenio_banco_w,'0'),1,6),6,'0')),'0'),1,1) ||
							lpad(substr(coalesce(ds_nosso_numero_w,'0'),3,3),3,'0') ||
							substr(coalesce(ds_nosso_numero_w,'0'),1,1) ||
							lpad(substr(coalesce(ds_nosso_numero_w,'0'),6,3),3,'0') ||
							substr(coalesce(ds_nosso_numero_w,'0'),2,1) ||
							ds_nosso_numero_ww;							
							
				nr_digito_w		:= substr(coalesce(Calcula_Digito('MODULO11',ds_campo_livre_w),'0'),1,1);
				nr_bloqueto_w :=	cd_banco_w ||
							cd_moeda_w || '?' || 
							to_char(cd_fator_w,'FM0000') ||
							to_char(vl_bloqueto_w,'FM0000000000')  ||			
							ds_campo_livre_w ||
							nr_digito_w;

				nr_digito_w :=		Calcula_Digito('Bloqueto', nr_bloqueto_w);
				nr_bloqueto_w		:= substr(nr_bloqueto_w,1,4) || nr_digito_w ||
							substr(nr_bloqueto_w,6,39);

			elsif (coalesce(cd_carteira_w, '0') <> '0') then

				ds_campo_livre_w :=	cd_carteira_w || to_char(nr_num_titulo_w,'FM00000000') ||
							to_char(Somente_Numero(substr(cd_agencia_w,1,4)),'FM0000') ||		
							ie_tipo_cobranca_bloqueto_w ||
							to_char(Somente_numero(substr(cd_conta_bloqueto_w,1,8)),'FM00000000');
				nr_bloqueto_w		:= cd_banco_w ||
							cd_moeda_w || '?' || 
							to_char(cd_fator_w,'FM0000') ||
							to_char(vl_bloqueto_w,'FM0000000000')  ||			
							ds_campo_livre_w;			

				nr_digito_w		:= Calcula_Digito('Bloqueto', nr_bloqueto_w);
				nr_bloqueto_w		:= substr(nr_bloqueto_w,1,4) || nr_digito_w ||
							substr(nr_bloqueto_w,6,39);	
			else

				nr_nosso_w		:= '82' || to_char(nr_num_titulo_w,'FM00000000');
				select	calcula_digito('modulo11', nr_nosso_w)
				into STRICT	cd_digito_w
				;

				if (cd_conta_bloqueto_w <> '0') then
					cd_conta_w	:= cd_conta_bloqueto_w;
				end if;

				ds_campo_livre_w	:= nr_nosso_w ||
							to_char(Somente_Numero(substr(cd_agencia_w,1,4)),'FM0000') ||
							ie_tipo_cobranca_bloqueto_w ||
							to_char(Somente_numero(substr(cd_conta_w,1,8)),'FM00000000');

				nr_bloqueto_w		:= cd_banco_w ||
							9 || '?' || 
							to_char(cd_fator_w,'FM0000') ||
							to_char(vl_bloqueto_w,'FM0000000000')  ||			
							ds_campo_livre_w;

				nr_digito_w		:= Calcula_Digito('Bloqueto', nr_bloqueto_w);
				nr_bloqueto_w		:= substr(nr_bloqueto_w,1,4) || nr_digito_w ||
							substr(nr_bloqueto_w,6,39);
			end if;

		end if;

	elsif (cd_banco_w = 409) then
		cd_fator_w	:= 1000 + trunc(dt_vencimento_w,'dd') - to_date('03/07/2000','dd/mm/yyyy');

		if (ie_fator_zerado_w = 'S') then
			cd_fator_w := '0';
		end if;
		
		nr_nosso_w		:= coalesce(substr(lpad(somente_numero(vl_saldo_titulo_w),10,0),10,1),'0') ||
					substr(to_char(04,'FM00'),1,1) || to_char(dt_vencimento_w,'YYMMDD') ||
					substr(to_char(Somente_Numero(substr(cd_agencia_w,1,5)),'FM00000'),1,4);					

		ds_campo_livre_w	:= '04' ||
					to_char(dt_vencimento_w,'YYMMDD') ||
					to_char(Somente_Numero(substr(cd_agencia_w,1,5)),'FM00000') ||
					nr_nosso_w;

		nr_bloqueto_w		:= cd_banco_w ||
					cd_moeda_w || 
					to_char(cd_fator_w,'FM0000') ||
					to_char(vl_bloqueto_w,'FM0000000000')  ||			
					ds_campo_livre_w;

		nr_digito_w		:= Calcula_Digito('MODULO11', nr_bloqueto_w);
		nr_bloqueto_w		:= substr(nr_bloqueto_w,1,4) || nr_digito_w ||
					substr(nr_bloqueto_w,5,39);
	elsif (cd_banco_w = 341) then
		/* Francisco - OS 54016 - Bloqueto do itau */

		ds_dac1_w := 	to_char(Somente_Numero(substr(cd_agencia_w,1,4)),'FM0000') ||
				to_char(Somente_numero(substr(cd_conta_w,1,5)),'FM00000') ||
				to_char(Somente_Numero(substr(cd_carteira_w,1,3)),'FM000') || -- Carteira
				to_char(Somente_numero(substr(ds_num_titulo_w,1,8)),'FM00000000');
		
		if (cd_carteira_w in (104, 112, 115, 147, 126, 131, 145, 150, 168)) then
			ds_dac1_w := 	to_char(Somente_Numero(substr(cd_carteira_w,1,3)),'FM000') || -- Carteira
					to_char(Somente_numero(substr(ds_num_titulo_w,1,8)),'FM00000000');
		end if;

		ds_dac2_w :=	to_char(Somente_Numero(substr(cd_agencia_w,1,4)),'FM0000') ||
				to_char(Somente_numero(substr(cd_conta_w,1,5)),'FM00000');	

		ds_campo_livre_w:= to_char(Somente_Numero(substr(cd_carteira_w,1,3)),'FM000') || -- Carteira
				to_char(Somente_numero(substr(ds_num_titulo_w,1,8)),'FM00000000') ||
				Calcula_Digito('Modulo10',ds_dac1_w) || -- DAC 1 
				to_char(Somente_Numero(substr(cd_agencia_w,1,4)),'FM0000')||	
				to_char(Somente_numero(substr(cd_conta_w,1,5)),'FM00000') ||
				Calcula_Digito('Modulo10',ds_dac2_w) || -- DAC 2
				'000'; -- Zeros
		nr_bloqueto_w		:= cd_banco_w ||
					cd_moeda_w || '?' || 
					to_char(cd_fator_w,'FM0000') ||
					to_char(vl_bloqueto_w,'FM0000000000')  ||			
					ds_campo_livre_w;			

		nr_digito_w		:= Calcula_Digito('Bloqueto', nr_bloqueto_w);
		nr_bloqueto_w		:= substr(nr_bloqueto_w,1,4) || nr_digito_w ||
					substr(nr_bloqueto_w,6,39);
	elsif (cd_banco_w = 001) and (cd_conta_w = 10715) then
		if (cd_carteira_w in (16,18))	then

			if (length(ds_num_titulo_w) > 17) then
				ds_inconsistencia_w	:=	ds_inconsistencia_w || chr(10) || chr(13) ||
								/*'O nosso numero/numero do titulo nao pode possuir mais de 17 caracteres para este banco.' || chr(10) || chr(13) ||
								'Nosso numero/titulo: ' || ds_num_titulo_w;*/
								wheb_mensagem_pck.get_texto(302176, 'DS_NUM_TITULO_W=' || ds_num_titulo_w);
			end if;

			if (coalesce(ds_inconsistencia_w::text, '') = '') then

				nr_bloqueto_w		:= cd_banco_w ||
						cd_moeda_w || '?' || 
						to_char(cd_fator_w,'FM0000') ||
						to_char(vl_bloqueto_w,'FM0000000000')  ||			
						to_char(Somente_numero(substr(cd_conta_bloqueto_w,1,6)),'FM000000') ||
						to_char(nr_num_titulo_w,'FM00000000000000000') ||
						'21'; /* de acordo com documentacao, as carteiras 16 e 18 terao codigo fixo 21*/
			
				nr_digito_w		:= Calcula_Digito('Bloqueto', nr_bloqueto_w);
				nr_bloqueto_w		:= substr(nr_bloqueto_w,1,4) || nr_digito_w ||
						substr(nr_bloqueto_w,6,39);
			
				update	banco_regra_numero
				set	nr_atual		= coalesce(nr_atual_w,0) + 1
				where	cd_banco		= cd_banco_w
				and	cd_estabelecimento	= cd_estabelecimento_w
				and	ie_regra in ('S','FSD','ACS','AFS','PAS','DAC','FAS');
			end if;

		end if;

	/* Francisco - OS 81793 - 05/02/2008 - Banco Real*/

	elsif (cd_banco_w = 356) then

		ds_dac1_w	:=	to_char(Somente_numero(substr(ds_num_titulo_w,1,13)),'FM0000000000000') ||
					to_char(Somente_Numero(substr(cd_agencia_w,1,4)),'FM0000')||
					to_char(Somente_numero(substr(cd_conta_w,1,7)),'FM0000000');

		nr_bloqueto_w	:= 	cd_banco_w ||
					cd_moeda_w || '?' || -- ? sera substituido por digito verificador
					to_char(cd_fator_w,'FM0000') ||
					to_char(vl_bloqueto_w,'FM0000000000')  ||
					to_char(Somente_Numero(substr(cd_agencia_w,1,4)),'FM0000')||
					to_char(Somente_numero(substr(cd_conta_w,1,7)),'FM0000000') ||
					Calcula_Digito('Modulo10',ds_dac1_w) || -- Digito da cobranca
					to_char(Somente_numero(substr(ds_num_titulo_w,1,13)),'FM0000000000000');
					

		nr_digito_w		:= Calcula_Digito('Bloqueto', nr_bloqueto_w);
		nr_bloqueto_w		:= substr(nr_bloqueto_w,1,4) || nr_digito_w ||
					substr(nr_bloqueto_w,6,39);
	
	/* Francisco -  OS 81834 - 15/02/2008  - BANCOOB */

	elsif (cd_banco_w = 756) then

	
		/*OS 1503335 - O sicoob pode usar o bradesco como base para seus boletos e NN. 
		Na OS foi definido pelo analista que a tratativa deve ser dentro do IF do banco 756, ou seja, so para o banco 756.*/
		if (coalesce(cd_banco_boleto_w,0) <> 0)then
		
			if (ltrim(trim(both cd_conta_bloqueto_w),'0')	is null) then
				cd_conta_bloqueto_w	:= lpad(Somente_numero(substr(coalesce(cd_conta_w,'0'),1,7)),7,'0');
			else
				cd_conta_bloqueto_w	:= lpad(Somente_numero(substr(ltrim(trim(both coalesce(cd_conta_bloqueto_w,'0')),'0'),1,7)),7,'0');
			end if;
			
			/*A regra do NN deve estar no banco de origem, ou seja, no sicredi e nao nao externo*/

			select	substr(Obter_Nosso_Numero_Banco(cd_banco_w,nr_titulo_w),1,20) nr_nosso_numero
			into STRICT	ds_nosso_numero_w
			;


			nr_bloqueto_w	:= 	lpad(cd_banco_boleto_w,3,'0') 						|| /*Pos 01 a 03 - Cod banco*/
	
								cd_moeda_w								|| /*Pos 4 - Moeda*/
								'?'										|| /*Pos 5 - Digito verificador*/
								to_char(cd_fator_w,'FM0000') 			|| /*Pos 6 a 9 - Fator vencimento*/
								to_char(vl_bloqueto_w,'FM0000000000')  	|| /*Pos 10 a 19 - Valor*/
								to_char(Somente_Numero(substr(cd_agencia_w,1,4)),'FM0000') || /*Pos 20 a 23 - Agencia*/
								to_char(Somente_Numero(substr(cd_carteira_w,1,2)),'FM00') || /*Pos 24 a 25 - Carteira*/
								to_char(substr(ds_nosso_numero_w,1,11),'FM00000000000') || /*Pos 26 a 36 - NN sem digito verificador*/
								to_char(Somente_numero(substr(cd_conta_bloqueto_w,1,7)),'FM0000000') || /*Pos 37 a 43 */
								'0'; /*Pos 44 - Fixo 0.*/
			nr_digito_w			:= 	Calcula_Digito('Bloqueto', nr_bloqueto_w);
			nr_bloqueto_w		:= 	substr(nr_bloqueto_w,1,4) || nr_digito_w ||
									substr(nr_bloqueto_w,6,39);	
				


			update 	banco_regra_numero
			set		nr_atual 			= to_char((nr_atual)::numeric  + 1)
			where	cd_banco			= cd_banco_w
			and		cd_estabelecimento	= cd_estabelecimento_w
			and	ie_regra in ('S','FSD','ACS','AFS','PAS','DAC','FAS')	;		
								
		else					
		
			select	max(ds_rotina_digito)
			into STRICT	ds_rotina_digito_w
			from	banco_regra_numero
			where	cd_banco		= cd_banco_w
			and (cd_estabelecimento	= cd_estabelecimento_w or coalesce(cd_estabelecimento::text, '') = '')
			and	ie_regra		= 'TD';
			

			if (coalesce(ds_rotina_digito_w,'BANCOOB') = 'SICOOB') then

				ds_nosso_numero_w	:= to_char(Somente_numero(substr(Obter_Nosso_Numero_Banco(cd_banco_w,nr_titulo_w),1,12)));

				if (length(ds_nosso_numero_w) > 8) then
					ds_inconsistencia_w	:=	ds_inconsistencia_w || chr(10) || chr(13) ||
									/*'O nosso numero nao pode possuir mais de 8 caracteres para este banco.' || chr(10) || chr(13) ||

									'Nosso numero: ' || ds_nosso_numero_w;*/
									wheb_mensagem_pck.get_texto(302182, 'DS_NOSSO_NUMERO_W=' || ds_nosso_numero_w);
				end if;


				if (coalesce(ds_inconsistencia_w::text, '') = '') then


					nr_bloqueto_w	:= 	cd_banco_w ||
								cd_moeda_w || '?' || -- ? sera substituido por digito verificador
								to_char(cd_fator_w,'FM0000') ||
								to_char(vl_bloqueto_w,'FM0000000000')  ||
								1 ||
								to_char(Somente_Numero(substr(cd_agencia_w,1,4)),'FM0000') ||
								substr(ie_tipo_cobranca_bloqueto_w,1,2) ||
								to_char(Somente_numero(substr(cd_cedente_w,1,10)),'FM0000000') ||
								to_char(ds_nosso_numero_w,'FM00000000') ||
								'001';
							
		
					nr_digito_w		:= Calcula_Digito('Bloqueto', nr_bloqueto_w);
					nr_bloqueto_w		:= substr(nr_bloqueto_w,1,4) || nr_digito_w ||
								substr(nr_bloqueto_w,6,39);
				
					nr_nosso_numero_w	:= to_char(ds_nosso_numero_w,'FM00000000');

				end if;
			
			else


				if (length(cd_agencia_w) > 4) then
					ds_inconsistencia_w	:=	ds_inconsistencia_w || chr(10) || chr(13) ||
									/*'O numero da agencia nao pode possuir mais de 4 caracteres para este banco.' || chr(10) || chr(13) ||
									'Agencia: ' || cd_agencia_w;*/
									wheb_mensagem_pck.get_texto(302186, 'CD_AGENCIA_W=' || cd_agencia_w);
				end if;

				if (length(cd_convenio_banco_w) > 10) then
					ds_inconsistencia_w	:=	ds_inconsistencia_w || chr(10) || chr(13) ||
									/*'O numero do convenio nao pode possuir mais de 10 caracteres para este banco.' || chr(10) || chr(13) ||
									'Convenio: ' || cd_convenio_banco_w;*/
									wheb_mensagem_pck.get_texto(302191, 'CD_CONVENIO_BANCO_W=' || cd_convenio_banco_w);
				end if;

				if (coalesce(ds_inconsistencia_w::text, '') = '') then
				
					if (ie_gerar_nosso_num_bloq_w = 'S') or ((ie_gerar_nosso_num_bloq_w = 'P') and (coalesce(nr_nosso_numero_atual_w::text, '') = '')) or (ie_recalcula_nosso_num = 'S') then
						dbms_lock.allocate_unique('OBTER_NOSSO_NUMERO_BANCO', ie_lock_handle_w);
						
						ds_nosso_numero_w	:= to_char(substr(Obter_Nosso_Numero_Banco(cd_banco_w,nr_titulo_w,ie_lock_handle_w),1,7),'FM0000000');
						
						update 	banco_regra_numero
						set	nr_atual 		= to_char((nr_atual)::numeric  + 1)
						where	cd_banco		= cd_banco_w
						and	cd_estabelecimento	= cd_estabelecimento_w
						and	ie_regra in ('S','FSD','ACS','AFS','PAS','DAC','FAS');
						commit;
						ie_result_lock_w := DBMS_LOCK.RELEASE(lockhandle => ie_lock_handle_w);
						
					else
						ds_nosso_numero_w	:= nr_nosso_numero_atual_w;
					End if;
					
					select	calcula_digito('BANCOOB', to_char(cd_agencia_w,'FM0000') || to_char(cd_convenio_banco_w,'FM0000000000') || ds_nosso_numero_w) nr_nosso_numero
					into STRICT	nr_dig_nosso_numero_w
					;
			
					nr_bloqueto_w	:= 	cd_banco_w ||
								cd_moeda_w || '?' || -- ? sera substituido por digito verificador
								to_char(cd_fator_w,'FM0000') ||
								to_char(vl_bloqueto_w,'FM0000000000')  ||
								substr(cd_carteira_w,1,1) ||
								to_char(Somente_Numero(substr(cd_agencia_w,1,4)),'FM0000') ||
								substr(ie_tipo_cobranca_bloqueto_w,1,2) ||

								to_char(Somente_numero(substr(cd_convenio_banco_w,1,7)),'FM0000000') ||
								ds_nosso_numero_w ||
								nr_dig_nosso_numero_w ||
								'001'; --Este ultimo e pra ser a parcela, nao vai ser usado por enquanto
							

					nr_digito_w		:= Calcula_Digito('Bloqueto', nr_bloqueto_w);
					nr_bloqueto_w		:= substr(nr_bloqueto_w,1,4) || nr_digito_w ||
							substr(nr_bloqueto_w,6,39);
							
					/* ELton OS157473  02/10/2009 - Incluso o select e update abaixo para preencher o campo Nosso numero no titulo, de acordo com a regra estabelecida no cadastro do banco */

					select (ds_nosso_numero_w || nr_dig_nosso_numero_w) nr_nosso_numero
					into STRICT	nr_nosso_numero_w
					;
				end if;
			end if;

			if (coalesce(ds_inconsistencia_w::text, '') = '') then

				update	titulo_receber
				set	nr_nosso_numero = nr_nosso_numero_w
				where	nr_titulo 	= nr_titulo_w
				and	coalesce(nr_nosso_numero::text, '') = '';

				/*update 	banco_regra_numero
				set	nr_atual 		= to_char(to_number(nr_atual) + 1)
				where	cd_banco		= cd_banco_w
				and	cd_estabelecimento	= cd_estabelecimento_w
				and	ie_regra in ('S','FSD','ACS','AFS','PAS','DAC','FAS');*/
			end if;
			
		end if;	
		
	/* Elton - OS100548 - 28/07/2008 - BRADESCO */

	elsif (cd_banco_w = 237) then
	
		if (ltrim(trim(both cd_conta_bloqueto_w),'0')	is null) then
			cd_conta_bloqueto_w	:= lpad(Somente_numero(substr(coalesce(cd_conta_w,'0'),1,7)),7,'0');
		else
			cd_conta_bloqueto_w	:= lpad(Somente_numero(substr(ltrim(trim(both coalesce(cd_conta_bloqueto_w,'0')),'0'),1,7)),7,'0');
		end if;

		nr_bloqueto_w	:= 	cd_banco_w ||
					cd_moeda_w || '?' || -- ? sera substituido por digito verificador
					to_char(cd_fator_w,'FM0000') ||
					to_char(Somente_Numero(substr(vl_bloqueto_w,1,14)),'FM0000000000') ||
					to_char(Somente_Numero(substr(cd_agencia_w,1,4)),'FM0000') ||
					to_char(Somente_numero(substr(cd_carteira_w,1,2)),'FM00') ||
					to_char(Somente_numero(substr(ds_num_titulo_w,1,11)),'FM00000000000')||
					to_char(Somente_numero(substr(cd_conta_bloqueto_w,1,7)),'FM0000000') ||
					'0';
		
		nr_digito_w		:= Calcula_Digito('Bloqueto', nr_bloqueto_w);
		nr_bloqueto_w		:= substr(nr_bloqueto_w,1,4) || nr_digito_w ||
					substr(nr_bloqueto_w,6,39);

	elsif (cd_banco_w = 041) then

		if (ltrim(trim(both cd_conta_bloqueto_w),'0')	is null) then
			cd_conta_bloqueto_w	:= lpad(Somente_numero(substr(coalesce(cd_conta_w,'0'),1,7)),7,'0');
		else
			cd_conta_bloqueto_w	:= lpad(Somente_numero(substr(ltrim(trim(both coalesce(cd_conta_bloqueto_w,'0')),'0'),1,7)),7,'0');
		end if;

		ds_campo_livre_w :=	'21' ||
					to_char(Somente_Numero(substr(cd_agencia_w,1,4)),'FM0000') ||
					cd_conta_bloqueto_w ||
					to_char(Somente_numero(substr(ds_num_titulo_w,1,9)),'FM00000000')||
					'40';

		nr_bloqueto_w	:= 	'0419' || '?' ||
					to_char(cd_fator_w,'FM0000') ||
					to_char(Somente_Numero(substr(vl_bloqueto_w,1,14)),'FM0000000000') ||
					ds_campo_livre_w ||
					lpad(to_char(calcula_digito('BANRISUL',ds_campo_livre_w)),2,'0');  -- Elton em 20/06/2010 OS 217673, alterado para a nova rotina de geracao de boleto.
		
		nr_digito_w		:= Calcula_Digito('Bloqueto', nr_bloqueto_w);
		nr_bloqueto_w		:= substr(nr_bloqueto_w,1,4) || nr_digito_w ||
					substr(nr_bloqueto_w,6,39);
					
		/* Francisco - 22/06/2010 - OS 226127 - Tratar NR_NOSSO_NUMERO para o Banrisul */

		select	substr(Obter_Nosso_Numero_Banco(cd_banco_w,nr_titulo_w),1,20) nr_nosso_numero
		into STRICT	nr_nosso_numero_w
		;
		
		if (nr_nosso_numero_w IS NOT NULL AND nr_nosso_numero_w::text <> '') then
			ie_atual_nr_nosso_numero_w	:= 'S';
		end if;

	elsif (cd_banco_w = 033) then
		/* Elton - 03/08/2010 - OS 233806 - Tratar NR_NOSSO_NUMERO para o Santander */


		/*wborba 29/10/2013 - Se existir nosso numero no titulo, nao alterar o mesmo, pois pode ser uma regra de nosso numero sequencial gerando assim um novo nosso numero para o boleto o no titulo ficando o antigo*/


		/* jcreddiga - OS 1782024 - Comentado a regra abaixo que buscava  novamente o nosso numero anterior, pois nao estava considerando o parametro ie_gerar_nosso_num_bloq_w */


		/*select	nr_nosso_numero
		into	nr_nosso_numero_w
		from	titulo_receber
		where	nr_titulo = nr_titulo_w;
		
		if	(nr_nosso_numero_w is null) then
			select	substr(Obter_Nosso_Numero_Banco(cd_banco_w,nr_titulo_w),1,20) nr_nosso_numero
			into	nr_nosso_numero_w
			from 	dual;
		end if;*/
		
		if (nr_nosso_numero_w IS NOT NULL AND nr_nosso_numero_w::text <> '') then
			ie_atual_nr_nosso_numero_w	:= 'S';
		end if;
		
		select	max(ie_regra)
		into STRICT	ie_regra_w
		from	banco_regra_numero
		where	cd_banco		= cd_banco_w
		and (cd_estabelecimento	= cd_estabelecimento_w or coalesce(cd_estabelecimento::text, '') = '');
		
		-- wcbernardino - 22/06/2012 - OS 455578 - Tratamento realizado para quando for gerado o digito no nosso numero, nao gerar novamente.
        if (ltrim(trim(both cd_conta_bloqueto_w),'0')  is null) then
            cd_conta_bloqueto_w  := lpad(Somente_numero(substr(coalesce(cd_conta_w,'0'),1,7)),7,'0');
        else
            cd_conta_bloqueto_w  := lpad(Somente_numero(substr(trim(both coalesce(cd_conta_bloqueto_w,'0')),1,7)),7,'0');
        end if;

		if (ie_regra_w = 'TD') or (ie_regra_w = 'FSD') then
			ds_campo_livre_w:=	'9' ||
						to_char(Somente_numero(substr(cd_conta_bloqueto_w,1,7)),'FM0000000') ||
						lpad(to_char(somente_numero(coalesce(nr_nosso_numero_w,ds_num_titulo_w))),13,'0') ||
						'0' ||
						lpad(cd_carteira_w,3,'0');
		else
			ds_campo_livre_w:=	'9' ||
						to_char(Somente_numero(substr(cd_conta_bloqueto_w,1,7)),'FM0000000') ||
						lpad(to_char(somente_numero(coalesce(nr_nosso_numero_w,ds_num_titulo_w))),12,'0') ||
						calcula_digito('MODULO11',LPAD(coalesce(nr_nosso_numero_w,nr_num_titulo_w),12,'0')) ||
						'0' ||
						lpad(cd_carteira_w,3,'0');
		end if;

		nr_bloqueto_w		:= cd_banco_w ||
					'9' || '?' || 
					to_char(cd_fator_w,'FM0000') ||
					to_char(vl_bloqueto_w,'FM0000000000')  ||			
					ds_campo_livre_w;			

		nr_digito_w		:= Calcula_Digito('Bloqueto', nr_bloqueto_w);
		nr_bloqueto_w		:= substr(nr_bloqueto_w,1,4) || nr_digito_w ||
					substr(nr_bloqueto_w,6,39);
					
		/*AAMFIRMO OS 632118 atualizar nr atual na regra nosso numero para sequencia.*/

		update 	banco_regra_numero
		set	nr_atual 		= to_char((nr_atual)::numeric  + 1)
		where	cd_banco		= cd_banco_w
		and	cd_estabelecimento	= cd_estabelecimento_w
		and	ie_regra in ('S','FSD','ACS','AFS','PAS','DAC','FAS');		
					
	elsif (cd_banco_w = 001) and (cd_carteira_w = '017') then

		if	((length(ds_num_titulo_w) > 12) and (cd_agencia_w <> '2857' AND cd_conta_w||ie_digito_conta_w <> '404829')) or
            ((length(ds_num_titulo_w) > 17) and (cd_agencia_w = '2857' AND cd_conta_w||ie_digito_conta_w = '404829')) or (length(ds_num_titulo_w) > 12 and length(cd_convenio_banco_w) > 6)	then
			ds_inconsistencia_w	:=	ds_inconsistencia_w || chr(10) || chr(13) ||
							/*'O nosso numero/numero do titulo nao pode possuir mais de 10 caracteres para este banco.' || chr(10) || chr(13) ||
							'Nosso numero/titulo: ' || ds_num_titulo_w;*/
							wheb_mensagem_pck.get_texto(302195, 'DS_NUM_TITULO_W=' || ds_num_titulo_w);

		end if;

		if (coalesce(ds_inconsistencia_w::text, '') = '') then
			if (cd_agencia_w = '2857') and (cd_conta_w||ie_digito_conta_w = '404829') then
			
				ds_campo_livre_w	:= '000000' ||
										to_char(substr(ds_num_titulo_w,1,17),'FM00000000000000000') ||  --Aqui ja tem o convenio banco + Nosso Numero
										to_char(Somente_Numero(substr(cd_carteira_w,2,2)),'FM00');	
			
			elsif (length(cd_convenio_banco_w) = 6) then
			
				ds_campo_livre_w	:= to_char(substr(ds_num_titulo_w,1,11),'FM00000000000') ||
									to_char(Somente_Numero(substr(cd_agencia_w,1,4)),'FM0000') ||
									to_char(Somente_Numero(substr(cd_conta_w,1,8)),'FM00000000') ||
									to_char(Somente_Numero(substr(cd_carteira_w,2,2)),'FM00');	
				
			else
				ds_campo_livre_w	:= '000000' ||
						to_char(Somente_numero(substr(cd_convenio_banco_w,1,7)),'FM0000000') ||
						to_char(nr_num_titulo_w,'FM0000000000') ||
						to_char(Somente_Numero(substr(cd_carteira_w,2,2)),'FM00');

			end if;	
			
			nr_bloqueto_w		:= cd_banco_w ||
						cd_moeda_w || '?' || 
						to_char(cd_fator_w,'FM0000') ||
						to_char(vl_bloqueto_w,'FM0000000000')  ||			
						ds_campo_livre_w;

			nr_digito_w		:= Calcula_Digito('Bloqueto', nr_bloqueto_w);
			nr_bloqueto_w		:= substr(nr_bloqueto_w,1,4) || nr_digito_w ||
						substr(nr_bloqueto_w,6,39);
		
			update	banco_regra_numero
			set	nr_atual		= coalesce(nr_atual_w,0) + 1
			where	cd_banco		= cd_banco_w
			and	cd_estabelecimento	= cd_estabelecimento_w
			and	ie_regra		in ('S','FSD','ACS','AFS','PAS','DAC', 'FAS');

		end if;

	/* ahoffelder - OS 176448 - 06/11/2009  Banco do Brasil - Carteira 18*/

	elsif (cd_banco_w = 001) and (somente_numero(cd_carteira_w) = 18) and (cd_conta_w <> '4110') then

		if (length(ds_num_titulo_w) > 10) then
			ds_inconsistencia_w	:=	ds_inconsistencia_w || chr(10) || chr(13) ||
							/*'O nosso numero/numero do titulo nao pode possuir mais de 10 caracteres para este banco.' || chr(10) || chr(13) ||
							'Nosso numero/titulo: ' || ds_num_titulo_w;*/
							wheb_mensagem_pck.get_texto(302195, 'DS_NUM_TITULO_W=' || ds_num_titulo_w);
		end if;

		if (coalesce(ds_inconsistencia_w::text, '') = '') then

			ds_campo_livre_w	:= '000000' ||
						to_char(Somente_numero(substr(cd_convenio_banco_w,1,7)),'FM0000000') ||
						to_char(nr_num_titulo_w,'FM0000000000') || '18';

			nr_bloqueto_w 		:= (cd_banco_w ||
						cd_moeda_w || '?' ||
						to_char(cd_fator_w,'FM0000') ||
						to_char(vl_bloqueto_w,'FM0000000000') ||
						ds_campo_livre_w);

			nr_digito_w	:=	calcula_digito('BLOQUETO',nr_bloqueto_w);
			nr_bloqueto_w	:=	substr(nr_bloqueto_w,1,4) || nr_digito_w || substr(nr_bloqueto_w,6,44);
		
			update	banco_regra_numero
			set	nr_atual		= coalesce(nr_atual_w,0) + 1
			where	cd_banco		= cd_banco_w
			and	cd_estabelecimento	= cd_estabelecimento_w
			and	ie_regra in ('S','FSD','ACS','AFS','PAS','DAC','FAS');

		end if;

	elsif (cd_banco_w = 001) and (cd_carteira_w = '18') then
		if (cd_conta_w = '4110') then
			nr_bloqueto_w 		:= (cd_banco_w ||
						cd_moeda_w || '?' ||
						to_char(cd_fator_w,'FM0000') ||
						to_char(vl_bloqueto_w,'FM0000000000') ||
						to_char(Somente_numero(substr(cd_convenio_banco_w,1,6)),'FM000000') ||
						to_char(Somente_numero(substr(Obter_Nosso_Numero_Banco(cd_banco_w,nr_num_titulo_w),1,17)),'FM00000000000000000') ||
						'21');

			nr_digito_w	:=	calcula_digito('BLOQUETO',nr_bloqueto_w);
			nr_bloqueto_w	:=	substr(nr_bloqueto_w,1,4) || nr_digito_w || substr(nr_bloqueto_w,6,44);
			
			update	banco_regra_numero
			set	nr_atual		= coalesce(nr_atual_w,0) + 1
			where	cd_banco		= cd_banco_w
			and	cd_estabelecimento	= cd_estabelecimento_w
			and	ie_regra in ('S','FSD','ACS','AFS','PAS','DAC','FAS');
		end if;

	/* ahoffelder - OS 347852 - 10/08/2011, baseado no Manual Tecnico - Modulo 11, de setembro de 2009 */

	elsif (cd_banco_w = 399) and
		((cd_conta_w = 15704) or coalesce(ie_cobranca_diretiva_w,'N') = 'S') then

		if (cd_conta_w	= 15704) then

			select	count(*),
				max(a.nr_atual),
				max(a.ie_regra),
				max(a.qt_dig_numero),
				max(a.nr_fixo),
				max(a.qt_dig_verif)
			into STRICT	qt_regra_w,
				nr_atual_w,
				ie_regra_w,
				qt_dig_numero_w,
				nr_fixo_w,
				qt_dig_verif_w
			from	banco_regra_numero a
			where	a.cd_banco		= cd_banco_w
			and	a.cd_estabelecimento	= cd_estabelecimento_w;

			if (qt_regra_w = 0) then
				nr_nosso_w	:= lpad(cd_conv_banco_w,5,'0') || lpad(nr_titulo_p,5,'0') || calcula_digito('MODULO11_HSBC',lpad(cd_conv_banco_w,5,'0') || lpad(nr_titulo_p,5,'0'));
			else
				nr_nosso_w	:= substr(obter_nosso_numero_banco(cd_banco_w,nr_titulo_p),1,255);

				/* ahoffelder - OS 420398 - 09/03/2012 - resetar o numero atual da regra se ultrupassar o limite de digitos */

				if (ie_regra_w = 'FSD') and (coalesce(qt_dig_numero_w,0) > 0) and
					(length(nr_atual_w + 1) > (qt_dig_numero_w - length(nr_fixo_w) - coalesce(qt_dig_verif_w,0))) then

					update	banco_regra_numero
					set	nr_atual		= 1
					where	cd_banco		= cd_banco_w
					and	cd_estabelecimento	= cd_estabelecimento_w;

				else

					update	banco_regra_numero
					set	nr_atual		= coalesce(nr_atual_w,0) + 1
					where	cd_banco		= cd_banco_w
					and	cd_estabelecimento	= cd_estabelecimento_w;

				end if;

				update	titulo_receber
				set	nr_nosso_numero	= nr_nosso_w
				where	coalesce(nr_nosso_numero::text, '') = ''
				and	nr_titulo	= nr_titulo_p;
			end if;

			nr_bloqueto_w		:= cd_banco_w ||
						cd_moeda_w || '?' ||
						to_char(cd_fator_w,'FM0000') ||
						to_char(vl_bloqueto_w,'FM0000000000')  ||
						ds_campo_livre_w;

			nr_digito_w		:= Calcula_Digito('Bloqueto', nr_bloqueto_w);

			nr_bloqueto_w		:= substr(nr_bloqueto_w,1,4) || nr_digito_w ||
						substr(nr_bloqueto_w,6,39);

		elsif (coalesce(ie_cobranca_diretiva_w,'N')	= 'S') then

			if (cd_conta_w = '17868') and (ie_digito_conta_w = '18') then /*OS 989029*/
				ds_campo_livre_w	:= 	lpad(coalesce(nr_nosso_numero_w,'0'),11,'0') ||
										to_char(Somente_numero(substr(cd_convenio_banco_w,1,11)),'FM00000000000') ||
										'00' ||
										'1';
			else
		
				ds_campo_livre_w	:= lpad(coalesce(nr_nosso_numero_w,'0'),11,'0') ||
							to_char(Somente_Numero(substr(cd_agencia_w,1,4)),'FM0000') ||
							to_char(Somente_numero(substr(cd_conta_w || ie_digito_conta_w,1,7)),'FM0000000') ||
							'00' ||
							'1';
			end if;

			nr_bloqueto_w		:= cd_banco_w ||
						cd_moeda_w || '?' || 
						to_char(cd_fator_w,'FM0000') ||
						to_char(vl_bloqueto_w,'FM0000000000')  ||
						ds_campo_livre_w;

			nr_digito_w		:= Calcula_Digito('Bloqueto', nr_bloqueto_w);
			nr_bloqueto_w		:= substr(nr_bloqueto_w,1,4) || nr_digito_w ||
						substr(nr_bloqueto_w,6,39);

		end if;
	/*aamfirmo OS 804234 Criado pra atender o layout da versao agosto/13, layout tecnico  - volume 1, para  quando regra do nosso numero for PBV*/
	
	elsif (cd_banco_w = 399) and (coalesce(ie_cobranca_diretiva_w,'N')	= 'N') and ( coalesce(ie_regra_nosso_estab_w,'X') = 'PBV') then
		    /*fator de vencimento em formato juliano*/

			dt_base_juliano_w := to_date(trunc(dt_vencimento_w,'year'),'dd/mm/yyyy');/*pega primeiro dia e mes do ano*/
			cd_fator_juliano_w	:= to_date(dt_vencimento_w,'dd/mm/yyyy') - (to_date(dt_base_juliano_w,'dd/mm/yyyy')-1);/*dias corridos do primeiro dia ate dt vencimento titulo*/
			dt_base_ult_digito_w := (to_char(dt_vencimento_w,'y'))::numeric;/*ultimo digito do ano do vencimento do titulo*/
			cd_fator_juliano_w := substr(cd_fator_juliano_w,1,3) || substr(dt_base_ult_digito_w,1,1); /*concatena */
			
			if (ie_fator_zerado_w = 'S') then
				cd_fator_juliano_w := '0';
			end if;
			
			nr_bloqueto_w := substr(cd_banco_w,1,3) ||
							 cd_moeda_w ||
							 '?' ||
							 to_char(cd_fator_w,'FM0000') ||
							 to_char(vl_bloqueto_w,'FM0000000000')  ||
							 lpad(coalesce(cd_convenio_banco_w,'0'),7,'0') ||
							 lpad(coalesce(nr_nosso_numero_w,'0'),13,'0') ||
							 to_char(cd_fator_juliano_w,'FM0000') ||
							 '2';
			nr_digito_w		:= Calcula_Digito('Bloqueto', nr_bloqueto_w);
			nr_bloqueto_w		:= substr(nr_bloqueto_w,1,4) || nr_digito_w ||
									substr(nr_bloqueto_w,6,39);				

	/* SICREDI*/

	elsif (cd_banco_w = 748) then

			if (ie_gerar_nosso_num_bloq_w = 'S') or ((ie_gerar_nosso_num_bloq_w = 'P') and (coalesce(nr_nosso_numero_atual_w::text, '') = '')) or (ie_recalcula_nosso_num = 'S') then
					nr_nosso_numero_w	:= to_char(Somente_numero(substr(Obter_Nosso_Numero_Banco(cd_banco_w,nr_num_titulo_w),1,9)),'FM000000000');
			else
					nr_nosso_numero_w	:= nr_nosso_numero_atual_w;
			End if;
			
		--if (cd_conta_w in (54600,30147,00218))  then
		if (cd_posto_w <> '00') then --OS 1787672
			/*Isso aqui pois na Unimed Maringa eles tem titulos de importacao de outra conta e posto, e precisa recalcular tb. e como nao existe campo de posto no Tasy... a principio e para ser criado no projeto de de cobranca escritural que ira rever isso, euqnato nao tem fica fixo*/


			/*if (cd_conta_w = 54600) then
				cd_posto_w := '28';
			elsif (cd_conta_w = 30147) then
				cd_posto_w := '29';
			elsif (cd_conta_w = 00218) then	
				cd_posto_w := '02';
			end if;*/


			/*Tem que buscar novamente a agencia aqui sem dar preferencnai para o campo (nvl) cd_bloqueto conforme ocorre no select inicial desta proc para o campo livre. Mas esse campo precisa estar informado para o calculo do DV do nosso numero, por isso nao pode ser retirado do cadastro */

			select	coalesce(max(e.cd_agencia_bancaria),'0')
			into STRICT	cd_agencia_w
			FROM agencia_bancaria e, moeda c, banco_estabelecimento b
LEFT OUTER JOIN banco f ON (b.cd_banco = f.cd_banco)
, titulo_receber a
LEFT OUTER JOIN banco_carteira d ON (a.nr_seq_carteira_cobr = d.nr_sequencia)
WHERE a.nr_seq_conta_banco	= b.nr_sequencia and a.cd_moeda   		= c.cd_moeda  and a.nr_titulo 		= nr_titulo_p and b.cd_banco		= e.cd_banco and b.cd_agencia_bancaria	= e.cd_agencia_bancaria;

			
			ds_campo_livre_w := '1' || /*1 = Com registro, 3 = Sem registro - Pos 20*/
								'1' || /*Carteira - Pos 21*/
								lpad(to_char(somente_numero(coalesce(nr_nosso_numero_w,ds_num_titulo_w))),9,'0') || /*Pos 22 a 30*/

							     -- to_char(Somente_numero(substr(Obter_Nosso_Numero_Banco(cd_banco_w,nr_num_titulo_w),1,9)),'FM000000000') || /*Pos 22 a 30*/
								to_char(Somente_Numero(substr(cd_agencia_w,1,4)),'FM0000') || /*Pos 31 a 34 - Agencia*/
								cd_posto_w || /*Confirmar com o cliente o que seria esse codigo do Posto.*/
								substr(cd_cedente_w,1,5) || /* Pos 37 a 41*/
								'1' ||/*Pos 42 - A principio, sempre tera valor*/
								'0'; /*Pos 43 - Zero fixo*/
			select	calcula_digito('SICREDI', ds_campo_livre_w)
			into STRICT	cd_digito_w
			;

			nr_bloqueto_w :=cd_banco_w || /*Pos 1 a 03*/
							cd_moeda_w || /*Pos 4*/
							'?' || /*Pos 5 = Sera substituido pelo digito verificador*/
							to_char(cd_fator_w,'FM0000') || /*Pos 6 a 9*/
							to_char(vl_bloqueto_w,'FM0000000000')  || /*Pos 10 a 19*/
							ds_campo_livre_w || /*Pos 20 a 43*/
							cd_digito_w;

			nr_digito_w		:= Calcula_Digito('Bloqueto', nr_bloqueto_w);
			nr_bloqueto_w	:= substr(nr_bloqueto_w,1,4) ||
							   nr_digito_w ||
							   substr(nr_bloqueto_w,6,39);


		else		
					
			ds_campo_livre_w :=	'3' ||
						'1' ||
						nr_nosso_numero_w ||
						to_char(Somente_Numero(substr(cd_agencia_w,1,4)),'FM0000') ||
						'04' ||
						substr(cd_cedente_w,1,5) ||
						'1' ||
						'0';

			select	calcula_digito('SICREDI', ds_campo_livre_w)
			into STRICT	cd_digito_w
			;

			nr_bloqueto_w	:= 	cd_banco_w ||
						cd_moeda_w || '?' || -- ? sera substituido por digito verificador
						to_char(cd_fator_w,'FM0000') ||
						to_char(vl_bloqueto_w,'FM0000000000')  ||
						ds_campo_livre_w ||
						cd_digito_w;
			
			nr_digito_w		:= Calcula_Digito('Bloqueto', nr_bloqueto_w);
			nr_bloqueto_w		:= substr(nr_bloqueto_w,1,4) || nr_digito_w ||
						substr(nr_bloqueto_w,6,39);


		end if;
	elsif (cd_banco_w in (090,091,136)) then
	
		if (length(ds_num_titulo_w) > 13) then
			ds_inconsistencia_w	:=	ds_inconsistencia_w || chr(10) || chr(13) ||
							/*'O nosso numero/numero do titulo nao pode possuir mais de 13 caracteres para este banco.' || chr(10) || chr(13) ||
							'Nosso numero/titulo: ' || ds_num_titulo_w;*/
							wheb_mensagem_pck.get_texto(302445, 'DS_NUM_TITULO_W=' || ds_num_titulo_w);
							
		end if;
		
		if (coalesce(ds_inconsistencia_w::text, '') = '') then
				
			if (ltrim(trim(both cd_conta_bloqueto_w),'0')	is null) then
				cd_conta_bloqueto_w	:= lpad(Somente_numero(substr(coalesce(cd_conta_w||ie_digito_conta_w,'0'),1,10)),10,'0');
			else
				cd_conta_bloqueto_w	:= lpad(Somente_numero(substr(trim(both coalesce(cd_conta_bloqueto_w,'0')),1,7)),7,'0');
			end if;

			ds_campo_livre_w	:= to_char(Somente_Numero(substr(cd_agencia_w,1,4)),'FM0000') ||
						to_char(Somente_numero(substr(cd_conta_bloqueto_w,1,10)),'FM0000000000') ||
						to_char(substr(nr_num_titulo_w,1,11),'FM00000000000');

			nr_bloqueto_w		:= cd_banco_w ||
						cd_moeda_w || '?' || 
						to_char(cd_fator_w,'FM0000') ||
						to_char(vl_bloqueto_w,'FM0000000000')  ||
						ds_campo_livre_w;

			nr_digito_w		:= Calcula_Digito('Bloqueto', nr_bloqueto_w);
			nr_bloqueto_w		:= substr(nr_bloqueto_w,1,4) || nr_digito_w ||
						substr(nr_bloqueto_w,6,39);

		end if;
	elsif (cd_banco_w = 087) then
	
		if (length(ds_num_titulo_w) > 13) then
			ds_inconsistencia_w	:=	ds_inconsistencia_w || chr(10) || chr(13) ||
							/*'O nosso numero/numero do titulo nao pode possuir mais de 13 caracteres para este banco.' || chr(10) || chr(13) ||
							'Nosso numero/titulo: ' || ds_num_titulo_w;*/
							wheb_mensagem_pck.get_texto(302445, 'DS_NUM_TITULO_W=' || ds_num_titulo_w);
							
		end if;

		if (coalesce(ds_inconsistencia_w::text, '') = '') then
		
			if (ltrim(trim(both cd_conta_bloqueto_w),'0')	is null) then
				cd_conta_bloqueto_w	:= lpad(Somente_numero(substr(coalesce(cd_conta_w,'0'),1,7)),7,'0');
			else
				cd_conta_bloqueto_w	:= lpad(Somente_numero(substr(trim(both coalesce(cd_conta_bloqueto_w,'0')),1,7)),7,'0');
			end if;

			ds_campo_livre_w	:= 	to_char(Somente_Numero(substr(cd_agencia_w,1,4)),'FM0000') ||
					to_char(Somente_numero(substr(cd_carteira_w,1,2)),'FM00') ||
					to_char(Somente_numero(substr(ds_num_titulo_w,1,11)),'FM00000000000')||
					to_char(Somente_numero(substr(cd_conta_bloqueto_w,1,7)),'FM0000000') ||
					'0';		

			nr_bloqueto_w		:= '237' ||
						cd_moeda_w || '?' || 
						to_char(cd_fator_w,'FM0000') ||
						to_char(vl_bloqueto_w,'FM0000000000')  ||
						ds_campo_livre_w;

			nr_digito_w		:= Calcula_Digito('Bloqueto', nr_bloqueto_w);
			nr_bloqueto_w		:= substr(nr_bloqueto_w,1,4) || nr_digito_w ||
						substr(nr_bloqueto_w,6,39);

		end if;	
		
	/*CITIBANK - OS 1233324 - AAMFIRMO*/
	
	elsif (cd_banco_w = 745) then	
		/*O campo livre representa as posicoes 20 a a 44 do nr_bloqueto*/


		/*Essa tratativa foi desenvolvida para o financeiro interno da Philips
		Sobre o CD_CEDENTE_W no campo livre, que e a Conta Cosmos do Citi, na analise desta OS consta que nao se deve considerar 
		o 0 (zero) a esquerda da conta cosmos, mesmo pq o campo no Tasy e de  9 digitos, e a conta cosmos como exemplo da Philips e 10 digitos (010365001) onde o 0 a esquerda deve ser ignorado (historico 23/09/2016 10:24:47)*/
		begin
		ds_campo_livre_w := '3' || /*Pos 20 -  3 = Cobranca Registrada*/
							to_char(Somente_numero(substr(cd_convenio_banco_w,length(cd_convenio_banco_w)-2,3)),'FM000') || /*Pos 21 a 23 - Portfolio  - Nao existe campo portfolio no Tasy. Vamos considerar aqui o campo cd_convenio_banco_w,  os ultimos 3 digitos, cfme pede no layout.  Na remessa escritural tb busca o portfolio desse campo*/
							to_char(Somente_numero(substr(cd_cedente_w,1,6)),'FM000000') || /*Pos 24 a 29 - Base da conta cosmos (cd cedente no tasy). Posicao 1 a 6 do codigo do cedente*/
							to_char(Somente_numero(substr(cd_cedente_w,7,2)),'FM00') || /*Pos 30 a 31 - Sequencia da conta cosmos (cd cedente no tasy). Poicao 7 a 8 do codigo do cedente*/
							to_char(Somente_numero(substr(cd_cedente_w,9,1)),'FM0') || /*Pos 32 - Digito da conta cosmos (cd cedente no tasy). Posicao 9 do codigo do cedente*/
							to_char(somente_numero(substr(nr_nosso_numero_w,1,12)),'FM000000000000'); /*Pos 33 a 44 - Nosso numero*/
														
		nr_bloqueto_w := 	substr(cd_banco_w,1,3) || /*Pos 1 a 3 Codigo do Banco*/
							substr(cd_moeda_w,1,1) || /*Pos 4 - Codigo da Moeda*/
							'?'					|| /*Pos 5 - Digito verificador. Sera substituido depois no calculo.*/
							to_char(cd_fator_w,'FM0000') || /*Pos 6 a 9 - Fator de vencimento do bloqueto*/
							to_char(vl_bloqueto_w,'FM0000000000')  || /*Pos 10 a 19 - Valor do bloqueto*/
							ds_campo_livre_w; /*Pos 20 a 44*/
		
		nr_digito_w	  := Calcula_Digito('Bloqueto', nr_bloqueto_w);
		nr_bloqueto_w := substr(nr_bloqueto_w,1,4) || nr_digito_w || 
						 substr(nr_bloqueto_w,6,39);
		exception when others then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(784698);
			--Nao foi possivel gerar o bloqueto! Verifique os seguintes campos no cadastro da conta: Codigo convenio e Codigo cedente
		end;	
	elsif (cd_banco_w = 139) then

		if (length(ds_num_titulo_w) > 13) then
			ds_inconsistencia_w  :=  ds_inconsistencia_w || chr(10) || chr(13) ||
						/*'O nosso numero/numero do titulo nao pode possuir mais de 13 caracteres para este banco.' || chr(10) || chr(13) ||
						'Nosso numero/titulo: ' || ds_num_titulo_w;*/
						wheb_mensagem_pck.get_texto(302445, 'DS_NUM_TITULO_W=' || ds_num_titulo_w);
		end if;
		
		if (coalesce(ds_inconsistencia_w::text, '') = '') then
			if (ltrim(trim(both cd_conta_bloqueto_w),'0')  is null) then
				cd_conta_bloqueto_w  := lpad(Somente_numero(substr(coalesce(cd_conta_w,'0'),1,6)),7,'0');
			else
				cd_conta_bloqueto_w  := lpad(Somente_numero(substr(trim(both coalesce(cd_conta_bloqueto_w,'0')),1,6)),7,'0');
			end if;


			ds_campo_livre_w  :=    	to_char(Somente_Numero(substr(cd_agencia_w,1,4)),'FM0000') || --20 a 23
							to_char(Somente_numero(substr(cd_conta_bloqueto_w,1,10)),'FM0000000000') || --24 a33 conta
							to_char(Somente_numero(substr(ds_num_titulo_w,1,11)),'FM00000000000'); -- 34 a 44 NN com digito
			nr_bloqueto_w    		:= lpad(coalesce(cd_banco_boleto_w, cd_banco_w),3,'0') || 
							coalesce(cd_moeda_w,'9') || '?' || 
							to_char(cd_fator_w,'FM0000') ||
							to_char(vl_bloqueto_w,'FM0000000000')  ||
							ds_campo_livre_w;
			
			nr_digito_w    			:= Calcula_Digito('Bloqueto', nr_bloqueto_w);
			nr_bloqueto_w    		:= substr(nr_bloqueto_w,1,4) || nr_digito_w ||
							substr(nr_bloqueto_w,6,39);
		end if;
	elsif (cd_banco_w = 84) then /*OS 1685537 - Uniprime*/
	
	
		if (coalesce(ie_cobranca_diretiva_w,'N') = 'S') then
		
			ds_campo_livre_w := 	to_char(Somente_Numero(substr(cd_agencia_w,1,4)),'FM0000')				|| /*Agencia 20 a 23*/
						to_char(Somente_Numero(substr(cd_conta_w||ie_digito_conta_w,1,10)),'FM0000000000')	|| /*Conta corrente  + digito da conta24 a 33*/
						to_char(Somente_Numero(substr(nr_nosso_numero_w,1,10)),'FM0000000000')			|| /*Nosso numero 34 a 43*/
						'9';											/*Fixo 9*/
	
									
			nr_bloqueto_w	:= 	substr(cd_banco_w,1,3) 					|| /*01 a 03*/
						coalesce(substr(cd_moeda_w,1,1),'9') 			|| /*04 - Moeda*/
						'?' 							|| /*5 - Digito verificador*/
						to_char(cd_fator_w,'FM0000') 				|| /*Pos 6 a 9 - Fator vencimento*/
						to_char(vl_bloqueto_w,'FM0000000000')   		|| /* Pos 10 a 19*/
						ds_campo_livre_w;					/*Pos 20 a 44*/
			nr_digito_w	:= 	Calcula_Digito('Bloqueto', nr_bloqueto_w);	
			nr_bloqueto_w	:= 	substr(nr_bloqueto_w,1,4) || nr_digito_w ||
						substr(nr_bloqueto_w,6,39);		
		
		else
	
			ds_campo_livre_w := 	to_char(Somente_Numero(substr(cd_agencia_w,1,4)),'FM0000') 	 	|| /*Agencia 20 a 23*/
						to_char(Somente_numero(substr(cd_carteira_w,1,2)),'FM00') 		|| /*Carteira 24 a 25*/
						to_char(Somente_Numero(substr(ds_num_titulo_w,1,11)),'FM00000000000') || /*Nosso numero 26 a 36*/
						to_char(Somente_numero(substr(cd_conta_w,1,7)),'FM0000000') 		|| /*Conta 37 a 43*/
						'0';
									
			nr_bloqueto_w	:= 	substr(cd_banco_w,1,3) 					|| /*01 a 03*/
						coalesce(substr(cd_moeda_w,1,1),'9') 		|| /*04 - Moeda*/
						'?' 									|| /*5 - Digito verificador*/
						to_char(cd_fator_w,'FM0000') 			|| /*Pos 6 a 9 - Fator vencimento*/
						to_char(vl_bloqueto_w,'FM0000000000')   || /* Pos 10 a 19*/
						ds_campo_livre_w;						 /*Pos 20 a 44*/
									
			nr_digito_w    	:= 		Calcula_Digito('Bloqueto', nr_bloqueto_w);	
			nr_bloqueto_w    		:=  substr(nr_bloqueto_w,1,4) || nr_digito_w ||
										substr(nr_bloqueto_w,6,39);		
		end if;
		
	elsif (cd_banco_w = 707) then /*OS 2424677 - Daycoval*/
	
		select	coalesce(max(b.cd_posto),'0')
		into STRICT	cd_posto_w
		from	banco_estabelecimento b,
			titulo_Receber a
		where	a.nr_seq_conta_banco	= b.nr_sequencia
		and 	a.nr_titulo 		= nr_titulo_p;

		ds_campo_livre_w := 	to_char(Somente_Numero(substr(cd_agencia_w,1,4)),'FM0000') 		|| /*Agencia 20 a 23*/
					to_char(Somente_numero(substr(cd_carteira_w,1,3)),'FM000') 		|| /*Carteira 24 a 26*/
					to_char(Somente_numero(substr(cd_posto_w,1,7)),'FM0000000') 		|| /*Operacao 27 a 33*/
					to_char(Somente_Numero(substr(nr_nosso_numero_w,1,11)),'FM00000000000');  /*Nosso numero 34 a 44*/
		nr_bloqueto_w	:= 	substr(cd_banco_w,1,3) 							|| /*01 a 03 Banco*/
					coalesce(substr(cd_moeda_w,1,1),'9') 					|| /*04 - Moeda*/
					'?' 									|| /*5 - Digito verificador*/
					to_char(cd_fator_w,'FM0000') 						|| /*Pos 6 a 9 - Fator vencimento*/
					to_char(vl_bloqueto_w,'FM0000000000')   				|| /* Pos 10 a 19*/
					ds_campo_livre_w;						 	/*Pos 20 a 44*/
					
		nr_digito_w    	:= 	Calcula_Digito('Bloqueto', nr_bloqueto_w);
		nr_bloqueto_w    :=  	substr(nr_bloqueto_w,1,4) ||
					nr_digito_w || 
					substr(nr_bloqueto_w,6,39);
					
	elsif (cd_banco_w = 643) then /*OS 2637012 - Pine*/
	
		select	coalesce(max(b.cd_posto),'0')
		into STRICT	cd_posto_w
		from	banco_estabelecimento b,
			titulo_Receber a
		where	a.nr_seq_conta_banco	= b.nr_sequencia
		and 	a.nr_titulo 		= nr_titulo_p;

		ds_campo_livre_w := 	to_char(Somente_Numero(substr(cd_agencia_w,1,4)),'FM0000') 		|| /*Agencia 20 a 23*/
					to_char(Somente_numero(substr(cd_carteira_w,1,3)),'FM000') 		|| /*Carteira 24 a 26*/
					to_char(Somente_numero(substr(cd_posto_w,1,7)),'FM0000000') 		|| /*Operacao 27 a 33*/
					to_char(Somente_Numero(substr(nr_nosso_numero_w,1,11)),'FM00000000000');  /*Nosso numero 34 a 44*/
		nr_bloqueto_w	:= 	substr(cd_banco_w,1,3) 							|| /*01 a 03 Banco*/
					coalesce(substr(cd_moeda_w,1,1),'9') 					|| /*04 - Moeda*/
					'?' 									|| /*5 - Digito verificador*/
					to_char(cd_fator_w,'FM0000') 						|| /*Pos 6 a 9 - Fator vencimento*/
					to_char(vl_bloqueto_w,'FM0000000000')   				|| /* Pos 10 a 19*/
					ds_campo_livre_w;						 	/*Pos 20 a 44*/
					
					
		nr_digito_w    	:= 	Calcula_Digito('Bloqueto', nr_bloqueto_w);
		nr_bloqueto_w    :=  	substr(nr_bloqueto_w,1,4) ||
					nr_digito_w || 
					substr(nr_bloqueto_w,6,39);

	elsif (cd_banco_w = 422) then   --Banco Safra
		ds_campo_livre_w    :=  '7' || /*Fixo posicao 20*/
					to_char(Somente_Numero(substr(cd_agencia_w,1,5)),'FM00000') 		|| /*Agencia 21 a 25*/
					to_char(Somente_Numero(substr(cd_conta_w,1,8)),'FM00000000')		|| /*Conta 26 a 33*/
					to_char(Somente_Numero(substr(ie_digito_conta_w,1,1)),'FM0')		|| /*Digito conta 34 */
					to_char(Somente_Numero(substr(nr_nosso_numero_w,1,9)),'FM000000000')	|| /*Nosso numero 35 a 43*/
					'2'; /*Fixo 44*/
		nr_bloqueto_w   :=  cd_banco_w  ||
				    cd_moeda_w  ||
				    '?' ||
				    to_char(cd_fator_w,'FM0000')    ||
				    to_char(vl_bloqueto_w,'FM0000000000')   ||
				    ds_campo_livre_w;

		nr_digito_w     :=  Calcula_Digito('Bloqueto', nr_bloqueto_w);

		nr_bloqueto_w   :=  substr(nr_bloqueto_w,1,4) ||
				    nr_digito_w ||
				    substr(nr_bloqueto_w,6,39);

    else

		if (length(ds_num_titulo_w) > 13) then
			ds_inconsistencia_w	:=	ds_inconsistencia_w || chr(10) || chr(13) ||
							/*'O nosso numero/numero do titulo nao pode possuir mais de 13 caracteres para este banco.' || chr(10) || chr(13) ||
							'Nosso numero/titulo: ' || ds_num_titulo_w;*/
							wheb_mensagem_pck.get_texto(302445, 'DS_NUM_TITULO_W=' || ds_num_titulo_w);
							
		end if;

		if (coalesce(ds_inconsistencia_w::text, '') = '') then
		
			if (ltrim(trim(both cd_conta_bloqueto_w),'0')	is null) then
				cd_conta_bloqueto_w	:= lpad(Somente_numero(substr(coalesce(cd_conta_w,'0'),1,7)),7,'0');
			else
				cd_conta_bloqueto_w	:= lpad(Somente_numero(substr(trim(both coalesce(cd_conta_bloqueto_w,'0')),1,7)),7,'0');
			end if;

			ds_campo_livre_w	:= to_char(Somente_Numero(substr(cd_agencia_w,1,3)),'FM000') ||
						to_char(Somente_numero(substr(cd_conta_bloqueto_w,1,7)),'FM0000000') ||
						to_char(nr_num_titulo_w,'FM0000000000000') ||
						to_char(tp_cobranca_w,'FM0') ||
						to_char(cd_versao_w,'FM0');

			nr_bloqueto_w		:= cd_banco_w ||
						cd_moeda_w || '?' || 
						to_char(cd_fator_w,'FM0000') ||
						to_char(vl_bloqueto_w,'FM0000000000')  ||
						ds_campo_livre_w;

			nr_digito_w		:= Calcula_Digito('Bloqueto', nr_bloqueto_w);
			nr_bloqueto_w		:= substr(nr_bloqueto_w,1,4) || nr_digito_w ||
						substr(nr_bloqueto_w,6,39);

		end if;

	end if;

	if (ds_inconsistencia_w IS NOT NULL AND ds_inconsistencia_w::text <> '') then

		CALL wheb_mensagem_pck.exibir_mensagem_abort(251658,'DS_MENSAGEM_W=Banco: ' || ds_banco_w || ds_inconsistencia_w);

	end if;

	/* se tiver alteracao de valor ou de vencimento, deve atualizar o "nosso numero" */

	if (ie_atual_nr_nosso_numero_w	= 'S') then

		ie_atualiza_numero_w	:= 'N';

		select	max(a.dt_atualizacao_nrec)
		into STRICT	dt_ultima_via_w
		from	titulo_receber_bloqueto a
		where	a.nr_titulo	= nr_titulo_p;

		if (coalesce(dt_ultima_via_w::text, '') = '') then

			ie_atualiza_numero_w	:= 'S';

		else

			select	max(a.dt_alteracao)
			into STRICT	dt_alteracao_valor_w
			from	alteracao_valor a
			where	a.nr_titulo	= nr_titulo_p;

			if (dt_alteracao_valor_w	> dt_ultima_via_w) then

				ie_atualiza_numero_w	:= 'S';

			elsif (dt_alteracao_venc_w	> dt_ultima_via_w) then

				ie_atualiza_numero_w	:= 'S';

			end if;
			
			if ie_atualiza_numero_w = 'N' then
			
				select	max(a.dt_alteracao)
				into STRICT	dt_alteracao_port_w
				from	alteracao_portador a
				where	a.nr_titulo	= nr_titulo_p;

				if (dt_alteracao_port_w	> dt_ultima_via_w) then

					ie_atualiza_numero_w	:= 'S';

				end if;
			end if;

		end if;
		
		/*1782024/1890277 Se o parametro Gravar "nosso numero" no titulo ao gerar boletos estiver como Sim, e nao Somente primeira via ou Nao, deve sempre atualizar o NN, independente se teve alteracoes de valor, vencimento, portador etc, pois o cliente ja definiu que sempre deve alterar*/

		if (coalesce(ie_gerar_nosso_num_bloq_w,'N') = 'S') then
			ie_atualiza_numero_w := 'S';
		end if;

	end if;

	update	titulo_receber
	set 	nr_bloqueto	= nr_bloqueto_w,
		vl_juros_boleto	= CASE WHEN ie_atualiza_vl_juros_multa_w='N' THEN vl_juros_boleto  ELSE vl_juros_boleto_w END ,
		vl_multa_boleto	= CASE WHEN ie_atualiza_vl_juros_multa_w='N' THEN vl_multa_boleto  ELSE vl_multa_boleto_w END ,
		nr_nosso_numero = CASE WHEN ie_atual_nr_nosso_numero_w='S' THEN CASE WHEN nr_nosso_numero = NULL THEN nr_nosso_numero_w  ELSE CASE WHEN coalesce(ie_atualiza_numero_w,'N')='S' THEN nr_nosso_numero_w  ELSE nr_nosso_numero END  END  WHEN ie_atual_nr_nosso_numero_w='N' THEN nr_nosso_numero END
	where	nr_titulo	= nr_titulo_p;
	
	if (nr_bloqueto_w IS NOT NULL AND nr_bloqueto_w::text <> '') then
		CALL Gerar_Via_Tit_Rec_Bloqueto(nr_titulo_p, ie_origem_via_p, coalesce(obter_usuario_ativo,'Tasy'));
	end if;

	/* Francisco - OS 133240 - Mudar tipo de portador e portador do titulo */

	if (cd_cod_banco_w IS NOT NULL AND cd_cod_banco_w::text <> '') and (coalesce(nr_seq_mensalidade_w::text, '') = '') then

		select	max(cd_tipo_port_bloq),
			max(cd_portador_bloq)
		into STRICT	cd_tipo_port_bloq_w,
			cd_portador_bloq_w
		from	banco
		where	cd_banco	= cd_cod_banco_w;

		if (cd_tipo_port_bloq_w IS NOT NULL AND cd_tipo_port_bloq_w::text <> '') and (cd_portador_bloq_w IS NOT NULL AND cd_portador_bloq_w::text <> '') then

			update	titulo_receber
			set	cd_tipo_portador	= cd_tipo_port_bloq_w,
				cd_portador		= cd_portador_bloq_w
			where	nr_titulo		= nr_titulo_p;
		end if;
	end if;
end if;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_bloqueto_tit_rec ( nr_titulo_p bigint, ie_origem_via_p text, ie_recalcula_nosso_num text default null) FROM PUBLIC;

