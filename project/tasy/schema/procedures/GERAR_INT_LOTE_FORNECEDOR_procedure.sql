-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_int_lote_fornecedor ( nr_seq_lote_fornecedor_p bigint, nm_usuario_p text, ie_status_p INOUT text, ds_erro_p INOUT text) AS $body$
DECLARE



qt_registros_w				bigint;
ie_status_w				varchar(15);
ds_erro_w				varchar(2000);
ds_lote_fornec_int_w			w_int_lote_fornecedor.ds_lote_fornec%type;
cd_material_int_w				w_int_lote_fornecedor.cd_material%type;
cd_cgc_fornec_int_w			w_int_lote_fornecedor.cd_cgc_fornec%type;
cd_estabelecimento_int_w			w_int_lote_fornecedor.cd_estabelecimento%type;
dt_validade_int_w				w_int_lote_fornecedor.dt_validade%type;
qt_material_int_w				w_int_lote_fornecedor.qt_material%type;
nr_seq_marca_int_w			w_int_lote_fornecedor.nr_seq_marca%type;
ie_situacao_int_w				w_int_lote_fornecedor.ie_situacao%type;
nr_seq_local_int_w				w_int_lote_fornecedor.nr_seq_local%type;
nr_sequencia_int_w				w_int_lote_fornecedor.nr_sequencia%type;
dt_atualizacao_int_w			w_int_lote_fornecedor.dt_atualizacao%type;
nm_usuario_int_w				w_int_lote_fornecedor.nm_usuario%type;
dt_atualizacao_nrec_int_w			w_int_lote_fornecedor.dt_atualizacao_nrec%type;
nm_usuario_nrec_int_w			w_int_lote_fornecedor.nm_usuario_nrec%type;
ds_observacao_int_w			w_int_lote_fornecedor.ds_observacao%type;
dt_fabricacao_int_w			w_int_lote_fornecedor.dt_fabricacao%type;
nr_serie_material_int_w			w_int_lote_fornecedor.nr_serie_material%type;
cd_material_tasy_w				material.cd_material%type;
cd_estab_tasy_w				estabelecimento.cd_estabelecimento%type;
nr_seq_marca_tasy_w			marca.nr_sequencia%type;
nr_seq_material_local_tasy_w			material_local.nr_sequencia%type;
nr_seq_lote_w				material_lote_fornec.nr_sequencia%type;
ie_val_indeterminada_w			material_lote_fornec.ie_validade_indeterminada%type;
cd_cnpj_fornec_int_w			pessoa_juridica.cd_cgc%type;


BEGIN

ie_status_w		:= 'OK';
cd_material_tasy_w	:= 0;

select 	count(*)
into STRICT	qt_registros_w
from	w_int_lote_fornecedor
where   nr_sequencia = nr_seq_lote_fornecedor_p;

if (qt_registros_w > 0) then

	select 	ds_lote_fornec,
		cd_material,
		cd_cgc_fornec,
		cd_estabelecimento,
		dt_validade,
		qt_material,
		nr_seq_marca,
		coalesce(ie_situacao,'A'),
		nr_seq_local,
		nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		ds_observacao,
		dt_fabricacao,
		nr_serie_material
	into STRICT	ds_lote_fornec_int_w,
		cd_material_int_w,
		cd_cgc_fornec_int_w,
		cd_estabelecimento_int_w,
		dt_validade_int_w,
		qt_material_int_w,
		nr_seq_marca_int_w,
		ie_situacao_int_w,
		nr_seq_local_int_w,
		nr_sequencia_int_w,
		dt_atualizacao_int_w,
		nm_usuario_int_w,
		dt_atualizacao_nrec_int_w,
		nm_usuario_nrec_int_w,
		ds_observacao_int_w,
		dt_fabricacao_int_w,
		nr_serie_material_int_w
	from 	w_int_lote_fornecedor
	where 	nr_sequencia = nr_seq_lote_fornecedor_p;
else
	ie_status_w	:= 'E';
	ds_erro_w	:= wheb_mensagem_pck.get_Texto(450083,'NR_SEQUENCIA_W='||NR_SEQ_LOTE_FORNECEDOR_P);/*Não existe nenhum registro na tabela de passos com o código #@NR_SEQUENCIA_W#@.*/
end if;


/*DS_LOTE_FORNEC*/

if (ie_status_w = 'OK') AND (coalesce(ds_lote_fornec_int_w::text, '') = '') then

	ie_status_w	:= 'E';
	ds_erro_w	:= wheb_mensagem_pck.get_Texto(450086);/*Favor preencher a descrição do lote fornecedor.*/
end if;




/*CD_MATERIAL*/

if (ie_status_w = 'OK') AND (coalesce(cd_material_int_w::text, '') = '') then

	ie_status_w	:= 'E';
	ds_erro_w	:= wheb_mensagem_pck.get_Texto(450089);/*Favor informar o código do meterial.*/
else
	select	coalesce(max(cd_material),0)
	into STRICT	cd_material_tasy_w
	from	material
	where	cd_sistema_ant = cd_material_int_w
	and	ie_situacao = 'A';

	if (cd_material_tasy_w = 0) then
		ie_status_w	:= 'E';
		ds_erro_w	:= wheb_mensagem_pck.get_Texto(450093,'CD_MATERIAL_INT_W='||CD_MATERIAL_INT_W);/*Não existe no sistema um material cujo o código do sistema externo seja #@CD_MATERIAL_INT_W#@.*/
	end if;
end if;


/*CD_CGC_FORNEC*/

if (ie_status_w = 'OK') AND (coalesce(cd_cgc_fornec_int_w::text, '') = '') then

	ie_status_w	:= 'E';
	ds_erro_w	:= wheb_mensagem_pck.get_Texto(450094);/*Não foi informado o fornecedor do lote.*/
else
	select	count(*)
	into STRICT	qt_registros_w
	from	pessoa_juridica
	where	cd_sistema_ant = cd_cgc_fornec_int_w
	and	ie_situacao = 'A';

	if (qt_registros_w = 0) then
		ie_status_w	:= 'E';
		ds_erro_w	:= wheb_mensagem_pck.get_texto(446538,'CD_CNPJ_W='||cd_cgc_fornec_int_w); /*Não existe no Tasy um fornecedor cadastrado com o código #@CD_CNPJ_W#@.*/
	else
		select	max(cd_cgc)
		into STRICT	cd_cnpj_fornec_int_w
		from	pessoa_juridica
		where	cd_sistema_ant = cd_cgc_fornec_int_w
		and	ie_situacao = 'A';
	end if;
end if;


/*ESTABELECIMENTO*/

if (ie_status_w = 'OK') and (coalesce(cd_estabelecimento_int_w::text, '') = '') then

	ie_status_w	:= 'E';
	ds_erro_w	:= wheb_mensagem_pck.get_Texto(450096);/*Favor informar um estabelecimento.*/
end if;

if (ie_status_w = 'OK') and (cd_estabelecimento_int_w IS NOT NULL AND cd_estabelecimento_int_w::text <> '') then

	select	coalesce(somente_numero(bkf_obter_conv_interna('','ESTABELECIMENTO','CD_ESTABELECIMENTO',CD_ESTABELECIMENTO_INT_W,'BKF')),0)
	into STRICT	cd_estab_tasy_w
	;

	if (cd_estab_tasy_w = 0) then
		ie_status_w	:= 'E';
		ds_erro_w	:= wheb_mensagem_pck.get_Texto(450104,'CD_ESTABELECIMENTO_W='||CD_ESTABELECIMENTO_INT_W);/*Não foi cadastrada a conversão para o estabelecimento código #@CD_ESTABELECIMENTO_W#@ que veio do sistema externo.*/
	else

		select	count(*)
		into STRICT	qt_registros_w
		from	estabelecimento
		where	cd_estabelecimento = cd_estab_tasy_w
		and	ie_situacao = 'A';

		if (qt_registros_w = 0) then
			ie_status_w	:= 'E';
			ds_erro_w	:= wheb_mensagem_pck.get_texto(446447,'CD_ESTAB_TASY_W='|| cd_estab_tasy_w ||';CD_ESTABELECIMENTO_W='|| CD_ESTABELECIMENTO_INT_W);
					/*Não existe no Tasy o estabelecimento com código  #@CD_ESTAB_TASY_W#@.Verifique o cadastro de conversão para o código do estabelecimento #@CD_ESTABELECIMENTO_W#@ que veio do sistema externo.*/

		end if;
	end if;
end if;


/*DT_VALIDADE*/

if (ie_status_w = 'OK') AND (dt_validade_int_w IS NOT NULL AND dt_validade_int_w::text <> '') and (trunc(dt_validade_int_w,'dd') < trunc(clock_timestamp(),'dd')) then

	ie_status_w	:= 'E';
	ds_erro_w	:= wheb_mensagem_pck.get_Texto(450126);/*A data de validade deve ser superior a data atual.*/
end if;


/*QT_MATERIAL*/

if (ie_status_w = 'OK') AND (coalesce(qt_material_int_w,0) = 0) then

	ie_status_w	:= 'E';
	ds_erro_w	:= wheb_mensagem_pck.get_Texto(450127);/*Favor preencher a quantidade do material maior que zero.*/
end if;


/*NR_SEQ_MARCA*/

if (ie_status_w = 'OK') AND (nr_seq_marca_int_w IS NOT NULL AND nr_seq_marca_int_w::text <> '') then

	select	count(*)
	into STRICT	qt_registros_w
	from	marca
	where	cd_sistema_ant = nr_seq_marca_int_w
	and	ie_situacao = 'A';

	if (qt_registros_w = 0) then
		ie_status_w	:= 'E';
		ds_erro_w	:= wheb_mensagem_pck.get_texto(481879,'NR_SEQ_MARCA_W='||nr_seq_marca_int_w); /*Não existe nenhuma marca ativa cadastrada com o código do sistema externo #@NR_SEQ_MARCA_W#@*/
	else
		select	max(nr_sequencia)
		into STRICT	nr_seq_marca_tasy_w
		from	marca
		where	cd_sistema_ant = nr_seq_marca_int_w
		and	ie_situacao = 'A';
	end if;
end if;


/*IE_SITUACAO*/

if (ie_status_w = 'OK') AND (coalesce(ie_situacao_int_w::text, '') = '') then

	ie_status_w	:= 'E';
	ds_erro_w	:= wheb_mensagem_pck.get_Texto(450134);/*Favor informar uma situação para o lote.*/
else
	if (ie_situacao_int_w <> 'A') and (ie_situacao_int_w <> 'I') then

		ie_status_w	:= 'E';
		ds_erro_w	:= wheb_mensagem_pck.get_Texto(450135);/*Favor informar a situação do lote corretamente (A para a situação Ativa, I para a situação Inativa).*/
	end if;
end if;



/*NR_SEQ_LOCAL*/

if (ie_status_w = 'OK') AND (nr_seq_local_int_w IS NOT NULL AND nr_seq_local_int_w::text <> '') then

	select 	coalesce(somente_numero(bkf_obter_conv_interna('','MATERIAL_LOCAL','NR_SEQUENCIA',NR_SEQ_LOCAL_INT_W,'BKF')),0)
	into STRICT	nr_seq_material_local_tasy_w
	;

	if (nr_seq_material_local_tasy_w = 0) then

		ie_status_w	:= 'E';
		ds_erro_w	:= wheb_mensagem_pck.get_Texto(450136); /*Não foi cadastrada a conversão para a sequência do local #@NR_SEQ_LOCAL_INT_W#@ que veio do sistema externo.*/
	else
		select	count(*)
		into STRICT	qt_registros_w
		from	material_local
		where	nr_sequencia = nr_seq_material_local_tasy_w;

		if (qt_registros_w = 0) then

			ie_status_w	:= 'E';
			ds_erro_w	:= wheb_mensagem_pck.get_texto(450137); /*Não existe no Tasy um local com o código #@NR_SEQ_LOCAL_INT_W#@.*/
		END IF;
	END IF;
end if;

if (coalesce(dt_validade_int_w::text, '') = '') then
	ie_val_indeterminada_w := 'S';
else
	ie_val_indeterminada_w := 'N';
end if;


if (ie_status_w = 'OK') then

	select	nextval('material_lote_fornec_seq')
	into STRICT	nr_seq_lote_w
	;

	insert into material_lote_fornec(
		nr_sequencia,
		cd_material,
		nr_digito_verif,
		dt_atualizacao,
		nm_usuario,
		ds_lote_fornec,
		dt_validade,
		cd_cgc_fornec,
		qt_material,
		cd_estabelecimento,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_seq_marca,
		ie_origem_lote,
		ie_validade_indeterminada,
		ie_situacao,
		ie_bloqueio,
		ds_observacao,
		dt_validade_original,
		dt_fabricacao,
		nr_seq_local,
		nr_serie_material)
	values (	nr_seq_lote_w,
		cd_material_tasy_w,
		calcula_digito('Modulo11', nr_seq_lote_w),
		clock_timestamp(),
		nm_usuario_p,
		ds_lote_fornec_int_w,
		dt_validade_int_w,
		cd_cnpj_fornec_int_w,
		qt_material_int_w,
		cd_estab_tasy_w,
		clock_timestamp(),
		nm_usuario_p,
		nr_seq_marca_tasy_w,
		'I',
		ie_val_indeterminada_w,
		ie_situacao_int_w,
		'N',
		ds_observacao_int_w,
		dt_validade_int_w,
		dt_fabricacao_int_w,
		nr_seq_material_local_tasy_w,
		nr_serie_material_int_w);

	if (nr_seq_marca_tasy_w > 0) then

		select	count(*)
		into STRICT	qt_registros_w
		from	material_marca
		where	coalesce(cd_estabelecimento,cd_estab_tasy_w) = cd_estab_tasy_w
		and	cd_material = cd_material_tasy_w
		and	nr_sequencia = nr_seq_marca_tasy_w;

		if (qt_registros_w = 0) then

			insert into material_marca(
				cd_material,
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				ie_situacao,
				cd_cnpj,
				cd_estabelecimento)
			values (	cd_material_tasy_w,
				nr_seq_marca_tasy_w,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				'A',
				cd_cgc_fornec_int_w,
				cd_estab_tasy_w);
		end if;
	end if;
end if;


delete from w_int_lote_fornecedor
where nr_sequencia = nr_seq_lote_fornecedor_p;

commit;

ie_status_p	:= ie_status_w;
ds_erro_p	:= ds_erro_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_int_lote_fornecedor ( nr_seq_lote_fornecedor_p bigint, nm_usuario_p text, ie_status_p INOUT text, ds_erro_p INOUT text) FROM PUBLIC;

