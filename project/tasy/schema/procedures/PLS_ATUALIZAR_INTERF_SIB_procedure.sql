-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_atualizar_interf_sib ( nr_seq_interf_sib_p bigint, nr_seq_lote_sib_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE


nr_seq_segurado_w		bigint;
cd_pessoa_fisica_w		varchar(10);
nm_segurado_w			varchar(255);
dt_nascimento_w			timestamp;
ie_sexo_w			smallint;
nr_pis_pasep_w			varchar(11);
nm_mae_segurado_w		varchar(255);
cd_cns_w			varchar(15);
nr_identidade_w			varchar(15);
ds_orgao_emissor_ci_w		pessoa_fisica.ds_orgao_emissor_ci%type;
cd_nacionalidade_w		varchar(8);
nr_seq_titular_w		bigint;
ie_regulamentacao_w		varchar(2);
cd_plano_ans_w			varchar(20);
cd_plano_ans_pre_w		varchar(20);
dt_liberacao_w			timestamp;
ds_logradouro_w			varchar(50);
ds_numero_w			varchar(5);
ds_complemento_w		varchar(15);
ds_bairro_w			varchar(50);
ds_municipio_w			varchar(50);
uf_w				varchar(10);
cep_w				varchar(15);
dt_mesano_referencia_w		timestamp;
dt_reinclusao_w			timestamp;
nr_seq_portabilidade_w		bigint;
cd_motivo_w			smallint;
nr_prot_ans_origem_w		varchar(20);
nr_cco_w			bigint;
ie_digito_cco_w			smallint;
ie_tipo_reg_w			bigint;
nr_seq_motivo_cancelamento_w	bigint;

cd_pais_sib_w			varchar(30);
cd_usuario_ant_w		varchar(30);
cd_usuario_plano_w		varchar(30);
cd_usuario_plano_tit_w		varchar(30);
cd_cgc_estipulante_w		varchar(14);
nr_cpf_w			varchar(11);
cd_vinculo_benef_w		varchar(2);
ie_carencia_temp_w		smallint;
ie_resid_brasil_w		smallint;
cd_declaracao_nasc_vivo_w	pessoa_fisica.cd_declaracao_nasc_vivo%type;
cd_municipio_ibge_resid_w	varchar(7);
ie_tipo_logradouro_w		varchar(7);
qt_endereco_comercial_w		bigint;
qt_endereco_residencial_w	bigint;
i_w				bigint;
nr_sequencia_w			bigint;
ie_scpa_contrato_w		varchar(10);
nr_seq_contrato_w		bigint;
nr_seq_seq_alt_produto_w	bigint;
cd_scpa_contrato_w		varchar(30);
nr_matricula_cei_w		varchar(30);
dt_movimentacao_w		timestamp;
ie_logradouro_sib_w		pls_parametros.ie_logradouro_sib%type;
ie_tipo_reenvio_w		pls_interf_sib.ie_tipo_reenvio%type;

C01 CURSOR FOR
	SELECT	nr_sequencia,
		nr_seq_segurado,
		ie_tipo_reg,
		ie_tipo_logradouro,
		cd_motivo,
		ie_tipo_reenvio
	from	pls_interf_sib
	where	nr_seq_lote_sib	= nr_seq_lote_sib_p
	and	ie_tipo_reg not in (0,9)
	and	(nr_seq_segurado IS NOT NULL AND nr_seq_segurado::text <> '')
	and 	coalesce(nr_seq_interf_sib_p::text, '') = ''
	
union all

	SELECT	nr_sequencia,
		nr_seq_segurado,
		ie_tipo_reg,
		ie_tipo_logradouro,
		cd_motivo,
		ie_tipo_reenvio
	from	pls_interf_sib
	where	nr_sequencia	= nr_seq_interf_sib_p
	and	nr_seq_lote_sib	= nr_seq_lote_sib_p
	and	ie_tipo_reg not in (0,9)
	and	(nr_seq_segurado IS NOT NULL AND nr_seq_segurado::text <> '');
	
type 		fetch_array is table of c01%rowtype;
s_array 	fetch_array;
i		integer := 1;
type vetor is table of fetch_array index by integer;
vetor_c01_w			vetor;

BEGIN

select	max(ie_scpa_contrato),
	MAX(ie_logradouro_sib)
into STRICT	ie_scpa_contrato_w,
	ie_logradouro_sib_w
from	pls_parametros
where	cd_estabelecimento	= cd_estabelecimento_p;

if (coalesce(ie_scpa_contrato_w::text, '') = '') then
	ie_scpa_contrato_w	:= 'N';
end if;

if (coalesce(ie_logradouro_sib_w::text, '') = '') then
	ie_logradouro_sib_w	:= '1';
end if;

i_w	:= 0;

select	dt_mes_competencia
into STRICT	dt_movimentacao_w
from	pls_lote_sib
where	nr_sequencia	= nr_seq_lote_sib_p;

open c01;
loop
fetch c01 bulk collect into s_array limit 1000;
	vetor_c01_w(i) := s_array;
	i := i + 1;
EXIT WHEN NOT FOUND; /* apply on c01 */
end loop;
close c01;

for i in 1..vetor_c01_w.count loop
	s_array := vetor_c01_w(i);
	for z in 1..s_array.count loop
		begin
		
		nr_sequencia_w		:= s_array[z].nr_sequencia;
		nr_seq_segurado_w	:= s_array[z].nr_seq_segurado;
		ie_tipo_reg_w		:= s_array[z].ie_tipo_reg;
		ie_tipo_logradouro_w	:= s_array[z].ie_tipo_logradouro;
		cd_motivo_w		:= s_array[z].cd_motivo;
		ie_tipo_reenvio_w	:= s_array[z].ie_tipo_reenvio;
		
		nr_prot_ans_origem_w		:= '000000000';
		cd_plano_ans_w			:= '';
		cd_plano_ans_pre_w		:= '';
		ie_tipo_logradouro_w		:= '';
		cd_municipio_ibge_resid_w	:= '';
		nr_matricula_cei_w		:= '';

		i_w	:= i_w + 1;
	
		select	a.cd_pessoa_fisica,
			substr(coalesce(l.nm_pessoa_fisica,b.nm_pessoa_fisica),1,69) nm_beficiario,
			b.dt_nascimento,
			CASE WHEN b.ie_sexo='M' THEN 1  ELSE CASE WHEN b.ie_sexo='F' THEN 3  ELSE 0 END  END ,
			coalesce(b.nr_pis_pasep,'00000000000'),
			coalesce(substr(b.nr_cartao_nac_sus,1,15),'000000000000000') cd_cns,
			b.nr_identidade,
			b.ds_orgao_emissor_ci,
			b.cd_nacionalidade,
			a.nr_seq_titular,
			c.ie_regulamentacao,
			CASE WHEN ie_regulamentacao='P' THEN  coalesce(c.nr_protocolo_ans,'000000000')  ELSE '000000000' END ,
			CASE WHEN ie_regulamentacao='P' THEN  ' '  ELSE CASE WHEN ie_scpa_contrato_w='S' THEN coalesce(e.cd_scpa,c.cd_scpa)  ELSE c.cd_scpa END  END ,
			a.dt_contratacao,
			a.dt_contratacao,
			a.dt_reativacao,
			coalesce(a.nr_seq_portabilidade,0),
			a.nr_cco,
			a.ie_digito_cco,
			b.cd_declaracao_nasc_vivo,
			a.nr_seq_motivo_cancelamento,
			e.nr_sequencia,
			e.cd_scpa
		into STRICT	cd_pessoa_fisica_w,
			nm_segurado_w,
			dt_nascimento_w,
			ie_sexo_w,
			nr_pis_pasep_w,
			cd_cns_w,
			nr_identidade_w,
			ds_orgao_emissor_ci_w,
			cd_nacionalidade_w,
			nr_seq_titular_w,
			ie_regulamentacao_w,
			cd_plano_ans_w,
			cd_plano_ans_pre_w,
			dt_liberacao_w,
			dt_mesano_referencia_w,
			dt_reinclusao_w,
			nr_seq_portabilidade_w,
			nr_cco_w,
			ie_digito_cco_w,
			cd_declaracao_nasc_vivo_w,
			nr_seq_motivo_cancelamento_w,
			nr_seq_contrato_w,
			cd_scpa_contrato_w
		FROM pls_contrato e, pls_plano c, pls_segurado a, pessoa_fisica b
LEFT OUTER JOIN pls_pessoa_fisica l ON (b.cd_pessoa_fisica = l.cd_pessoa_fisica)
WHERE a.cd_pessoa_fisica	= b.cd_pessoa_fisica  and e.nr_sequencia		= a.nr_seq_contrato and c.nr_sequencia		= a.nr_seq_plano and a.nr_sequencia		= nr_seq_segurado_w;
		
		if (length(nr_pis_pasep_w) < 11) then
			nr_pis_pasep_w	:= '00000000000';
		end if;

		SELECT * FROM pls_obter_dados_interf_sib(	nr_seq_segurado_w, cd_pais_sib_w, cd_usuario_ant_w, cd_usuario_plano_w, cd_usuario_plano_tit_w, cd_cgc_estipulante_w, nr_cpf_w, cd_vinculo_benef_w, ie_carencia_temp_w, ie_resid_brasil_w) INTO STRICT cd_pais_sib_w, cd_usuario_ant_w, cd_usuario_plano_w, cd_usuario_plano_tit_w, cd_cgc_estipulante_w, nr_cpf_w, cd_vinculo_benef_w, ie_carencia_temp_w, ie_resid_brasil_w;

		/*verificar se o beneficiario do sib e inclusao ou exclusao antes de buscar o motivo*/

		if (ie_tipo_reg_w	= 1) then
			if (coalesce(nr_seq_portabilidade_w,0) > 0) then /* se for de portabilidade o motivo e o 41 */
				cd_motivo_w	:= 41;

				select	coalesce(to_char(somente_numero(max(nr_prot_ans_origem))),'000000000')
				into STRICT	nr_prot_ans_origem_w
				from	pls_segurado a,
					pls_portab_pessoa b
				where	a.cd_pessoa_fisica	= b.cd_pessoa_fisica
				and	a.nr_sequencia	= nr_seq_segurado_w;
			else
				begin
				select	cd_ans
				into STRICT	cd_motivo_w
				from 	pls_motivo_inclusao_seg a,
					pls_segurado b
				where	b.nr_seq_motivo_inclusao	= a.nr_sequencia
				and	b.nr_sequencia			= nr_seq_segurado_w;
				exception
				when others then
					cd_motivo_w	:= null;
				end;
				
				if (coalesce(cd_motivo_w::text, '') = '') then
					cd_motivo_w	:= 15;
				end if;
			end if;
		elsif (ie_tipo_reg_w	= 7) then
			select	max(cd_motivo_cancelamento)
			into STRICT	cd_motivo_w
			from	pls_motivo_cancelamento
			where	nr_sequencia	= nr_seq_motivo_cancelamento_w;

			if (dt_reinclusao_w IS NOT NULL AND dt_reinclusao_w::text <> '') and (coalesce(cd_motivo_w::text, '') = '') and (ie_tipo_reenvio_w = 4) then
				select	max(nr_seq_motivo_cancelamento)
				into STRICT	nr_seq_motivo_cancelamento_w
				from	pls_segurado_historico
				where	nr_seq_segurado	= nr_seq_segurado_w
				and	ie_tipo_historico	= '1'
				and	trunc(dt_ocorrencia_sib,'Month') = dt_movimentacao_w;
				
				select	max(cd_motivo_cancelamento)
				into STRICT	cd_motivo_w
				from	pls_motivo_cancelamento
				where	nr_sequencia	= nr_seq_motivo_cancelamento_w;
				
			end if;
			
		end if;
		
		/*Tratamento para os tipos de migracao contratual*/

		if (ie_tipo_reg_w = 5) then
			select	max(nr_sequencia)
			into STRICT	nr_seq_seq_alt_produto_w
			from	pls_segurado_alt_plano
			where	nr_seq_segurado			= nr_seq_segurado_w
			and	trunc(dt_alteracao,'Month')	= trunc(dt_movimentacao_w,'month')
			and	ie_regulamentacao_ant		= 'R'
			and	ie_regulamentacao_atual		<> 'R'
			and	ie_situacao 			= 'A';
			
			if (nr_seq_seq_alt_produto_w IS NOT NULL AND nr_seq_seq_alt_produto_w::text <> '') then
				cd_plano_ans_w	:= '000000000';
		
				select	CASE WHEN ie_scpa_contrato_w='S' THEN coalesce(cd_scpa_contrato_w,a.cd_scpa)  ELSE a.cd_scpa END ,
					b.dt_alteracao
				into STRICT	cd_plano_ans_pre_w,
					dt_liberacao_w
				from	pls_segurado_alt_plano	b,
					pls_plano		a
				where	b.nr_seq_plano_ant	= a.nr_sequencia
				and	b.nr_sequencia		= nr_seq_seq_alt_produto_w;
			end if;
		end if;

		if (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then
			SELECT * FROM pls_obter_enderecos_benef_sib(	cd_pessoa_fisica_w, nr_seq_contrato_w, 'S', ie_logradouro_sib_w, ie_tipo_logradouro_w, ds_logradouro_w, ds_numero_w, ds_complemento_w, ds_bairro_w, ds_municipio_w, cd_municipio_ibge_resid_w, uf_w, cep_w) INTO STRICT ie_tipo_logradouro_w, ds_logradouro_w, ds_numero_w, ds_complemento_w, ds_bairro_w, ds_municipio_w, cd_municipio_ibge_resid_w, uf_w, cep_w;
		end if;
		
		select	max(a.nm_pessoa_fisica)
		into STRICT	nm_mae_segurado_w
		from	pessoa_fisica a,
			compl_pessoa_fisica b
		where	b.cd_pessoa_fisica_ref	= a.cd_pessoa_fisica
		and	b.ie_tipo_complemento	= 5
		and	b.cd_pessoa_fisica	= cd_pessoa_fisica_w;

		if (coalesce(nm_mae_segurado_w::text, '') = '') then
			select	max(a.nm_contato)
			into STRICT	nm_mae_segurado_w
			from	compl_pessoa_fisica a
			where	a.cd_pessoa_fisica	= cd_pessoa_fisica_w
			and	a.ie_tipo_complemento	= 5;
		end if;

		nm_mae_segurado_w	:= SUBSTR(nm_mae_segurado_w,1,59);
		
		IF (coalesce(nr_prot_ans_origem_w::text, '') = '') THEN
			nr_prot_ans_origem_w	:= '000000000';
		END IF;

		if (ie_regulamentacao_w = 'R') then
			nr_prot_ans_origem_w	:= '000000000';
			nr_seq_portabilidade_w	:= null;
		end if;
		
		cep_w	:= replace(cep_w,'-','');
		cep_w	:= replace(cep_w,'.','');

		if (coalesce(ds_numero_w::text, '') = '') then
			ds_numero_w	:= 'S/N';
		end if;

		if (dt_nascimento_w < to_date('01/01/2010')) then
			cd_declaracao_nasc_vivo_w	:= '';
		end if;

		if (cd_cgc_estipulante_w IS NOT NULL AND cd_cgc_estipulante_w::text <> '') THEN
			select	max(nr_matricula_cei)
			into STRICT	nr_matricula_cei_w
			from	pessoa_juridica
			where	cd_cgc	= cd_cgc_estipulante_w;
			
			if ((trim(both nr_matricula_cei_w) IS NOT NULL AND (trim(both nr_matricula_cei_w))::text <> '')) then
				cd_cgc_estipulante_w	:= '';
			end if;
		end if;
	
		UPDATE	pls_interf_sib
		SET	cd_usuario_plano	= cd_usuario_plano_w,
			dt_nascimento		= dt_nascimento_w,
			ie_sexo			= ie_sexo_w,
			nr_cpf			= nr_cpf_w,
			nr_pis_pasep		= nr_pis_pasep_w,
			cd_cns			= cd_cns_w,
			nr_identidade		= nr_identidade_w,
			ds_orgao_emissor_ci	= ds_orgao_emissor_ci_w,
			cd_usuario_plano_sup	= cd_usuario_plano_tit_w,
			cd_plano_ans		= cd_plano_ans_w,
			cd_plano_ans_pre	= cd_plano_ans_pre_w,
			dt_adesao_plano		= dt_liberacao_w,
			cd_vinculo_benef	= cd_vinculo_benef_w,
			dt_reinclusao		= dt_reinclusao_w,
			cd_motivo		= cd_motivo_w,
			ie_carencia_temp	= ie_carencia_temp_w,
			cd_cgc_estipulante	= cd_cgc_estipulante_w,
			logradouro		= ds_logradouro_w,
			ds_numero		= coalesce(ds_numero_w,'S/N'),
			ds_complemento		= ds_complemento_w,
			ds_bairro		= ds_bairro_w,
			ds_municipio		= ds_municipio_w,
			uf			= CASE WHEN uf_w='IN' THEN 'EX'  ELSE uf_w END ,
			cep			= REPLACE(REPLACE(cep_w,'-',''),'.',''),
			cd_usuario_ant		= cd_usuario_ant_w,
			cd_pais			= cd_pais_sib_w,
			nr_seq_titular		= nr_seq_titular_w,
			nr_prot_ans_origem	= coalesce(nr_prot_ans_origem_w,000000000),
			ie_resid_brasil		= ie_resid_brasil_w,
			nr_seq_plano_portab	= coalesce(nr_prot_ans_origem_w,000000000),
			nr_seq_portabilidade	= nr_seq_portabilidade_w,
			nr_cco			= nr_cco_w,
			ie_digito_cco		= ie_digito_cco_w,
			cd_nacionalidade	= cd_nacionalidade_w,
			cd_declaracao_nasc_vivo	= cd_declaracao_nasc_vivo_w,
			ie_tipo_logradouro	= ie_tipo_logradouro_w,
			cd_municipio_ibge_resid	= cd_municipio_ibge_resid_w,
			nm_beficiario		= nm_segurado_w,
			nm_mae_benef		= nm_mae_segurado_w,
			CD_CEI			= nr_matricula_cei_w
		where	nr_seq_lote_sib		= nr_seq_lote_sib_p
		and	nr_sequencia		= nr_sequencia_w;
		
		if (i_w	> 1000) then
			commit;
			i_w	:= 0;
		end if;
		end;
	end loop;
end loop;

/*Retirado essa rotina, pois trava ao selecionar varios beneficiarios
if	(ie_consiste_sib_p	= 'S') then
	pls_consistir_lote_sib(nr_seq_lote_sib_p, nr_seq_segurado_w, nm_usuario_p, cd_estabelecimento_p);
end if;
*/
commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_atualizar_interf_sib ( nr_seq_interf_sib_p bigint, nr_seq_lote_sib_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

