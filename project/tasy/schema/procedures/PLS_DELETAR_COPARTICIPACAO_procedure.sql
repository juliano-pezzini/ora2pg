-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_deletar_coparticipacao ( nr_seq_conta_p bigint, nr_seq_conta_copartic_p bigint, ie_commit_p text, ie_rec_glosa_p text, nr_seq_rec_glosa_conta_p pls_rec_glosa_conta.nr_sequencia%type, nr_seq_protocolo_p pls_rec_glosa_protocolo.nr_sequencia%type, nm_usuario_p text, cd_estabelecimento_p text ) AS $body$
DECLARE


qt_lote_liberacao_w		integer;
nr_seq_conta_w			pls_conta_coparticipacao.nr_seq_conta%type;
nr_seq_conta_proc_w		pls_conta_coparticipacao.nr_seq_conta_proc%type;
nr_seq_conta_mat_w		pls_conta_coparticipacao.nr_seq_conta_mat%type;
nr_seq_mensalidade_seg_w	pls_conta_coparticipacao.nr_seq_mensalidade_seg%type;
nr_seq_lote_w			pls_ted_copartic_pagador.nr_seq_lote%type;
nr_seq_ted_benef_w		pls_ted_copartic_item.nr_seq_ted_benef%type;
nr_lote_contabil_estorno_w	pls_conta_coparticipacao.nr_lote_contabil_estorno%type;
nr_lote_contabil_prov_w		pls_conta_coparticipacao.nr_lote_contabil_prov%type;
nr_seq_regra_limite_copartic_w	pls_conta_coparticipacao.nr_seq_regra_limite_copartic%type;
qt_registros_mensalidade_w	bigint;

c_registros_copart CURSOR FOR
	SELECT 	a.nr_sequencia
	from	pls_conta_coparticipacao a,
			pls_rec_glosa_conta b
	where	b.nr_sequencia = a.nr_seq_conta_rec
	and		b.nr_seq_protocolo = nr_seq_protocolo_p;

BEGIN
-- Se ele passar o numero da coparticipação, ele só vai deletar aquela coparticioação, se apenas passar o numero da conta ele vai  deletar todas as contas,
if ( ie_rec_glosa_p = 'S') then

	if (nr_seq_protocolo_p IS NOT NULL AND nr_seq_protocolo_p::text <> '') then
		
		for r_c_registros_copart in  c_registros_copart loop
		
			delete from pls_conta_copartic_aprop
			where	nr_seq_conta_coparticipacao = r_c_registros_copart.nr_sequencia;
		

			delete from 	pls_conta_coparticipacao
			where 	nr_Sequencia = r_c_registros_copart.nr_sequencia;
				
		end loop;
	else
	
		delete from pls_conta_copartic_aprop
		where	nr_seq_conta_coparticipacao in (	SELECT 	nr_sequencia
													from 	pls_conta_coparticipacao 
													where 	nr_seq_conta_rec = nr_seq_rec_glosa_conta_p);
									

		delete from pls_conta_coparticipacao
		where 	nr_seq_conta_rec = nr_seq_rec_glosa_conta_p;
		
	end if;

else

	if (nr_seq_conta_copartic_p IS NOT NULL AND nr_seq_conta_copartic_p::text <> '') then
		select	max(nr_seq_mensalidade_seg),
			coalesce(max(nr_lote_contabil_estorno),0),
			coalesce(max(nr_lote_contabil_prov),0),
			max(nr_seq_regra_limite_copartic)
		into STRICT	nr_seq_mensalidade_seg_w,
			nr_lote_contabil_estorno_w,
			nr_lote_contabil_prov_w,
			nr_seq_regra_limite_copartic_w
		from	pls_conta_coparticipacao
		where	nr_sequencia	= nr_seq_conta_copartic_p;
		
		
		--Utilizei o max para podes exibir um lote na mensagem(Caso tiver).
		select 	max(nr_seq_ted_benef)
		into STRICT	nr_seq_ted_benef_w
		from	pls_ted_copartic_item
		where   nr_seq_conta_copartic = nr_seq_conta_copartic_p;
		
		--Registro de coparticipação com vínculo com lote no TED.
		if (nr_seq_ted_benef_w IS NOT NULL AND nr_seq_ted_benef_w::text <> '') then
			--Busca o lote de controle de copartic da função TED
			select 	max(nr_seq_lote)
			into STRICT	nr_seq_lote_w
			from	pls_ted_copartic_pagador
			where	nr_sequencia =  ( SELECT nr_seq_ted_pagador
						  from	 pls_ted_copartic_benef a
						  where	 nr_sequencia = nr_seq_ted_benef_w);
			
			CALL wheb_mensagem_pck.exibir_mensagem_abort(360130, 'NR_SEQ_LOTE='||nr_seq_lote_w);
		end if;
		
		if	((coalesce(nr_seq_mensalidade_seg_w::text, '') = '') and (coalesce(nr_seq_regra_limite_copartic_w::text, '') = '')) then
			select  count(1)
			into STRICT 	qt_registros_mensalidade_w
			from  	pls_mensalidade_item_conta a
			where  	a.nr_seq_conta_copartic = nr_seq_conta_copartic_p;
		else
			qt_registros_mensalidade_w	:= 0;
		end if;
		
		if	((nr_seq_mensalidade_seg_w IS NOT NULL AND nr_seq_mensalidade_seg_w::text <> '') or (nr_seq_regra_limite_copartic_w IS NOT NULL AND nr_seq_regra_limite_copartic_w::text <> '') or (qt_registros_mensalidade_w > 0)) then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(328665); --Já existe mensalidade para a coparticipação Favor verificar.	
		elsif (nr_lote_contabil_estorno_w = 0) and -- somente pode excluir coparticipação se não foi contabilizada
			(nr_lote_contabil_prov_w = 0) then
			select	count(1)
			into STRICT	qt_lote_liberacao_w
			from	pls_lib_coparticipacao
			where	nr_seq_conta_coparticipacao	= nr_seq_conta_copartic_p;
			
			if (qt_lote_liberacao_w > 0) then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(328668); --Já existe lote de liberação para a coparticipação. Favor verificar na função OPS - Controle de Coparticipações.
			else
				select	nr_seq_conta_mat,
					nr_seq_conta_proc
				into STRICT	nr_seq_conta_mat_w,
					nr_seq_conta_proc_w
				from	pls_conta_coparticipacao
				where	nr_sequencia = nr_seq_conta_copartic_p;
				
				delete	FROM pls_conta_mat_aprop
				where	nr_seq_conta_mat = nr_seq_conta_mat_w;
				
				delete	FROM pls_conta_proc_aprop
				where	nr_seq_conta_proc = nr_seq_conta_proc_w;
				
				delete	FROM pls_conta_copartic_aprop
				where	nr_seq_conta_coparticipacao = nr_seq_conta_copartic_p;
							
				delete	from pls_coparticipacao_critica
				where	nr_seq_lib_copartic in (SELECT 	nr_sequencia
								from 	pls_lib_coparticipacao 
								where	nr_seq_conta_coparticipacao = nr_seq_conta_copartic_p);
				
				delete from pls_lib_coparticipacao
				where	nr_seq_conta_coparticipacao = nr_seq_conta_copartic_p;
				
				delete	FROM pls_conta_coparticipacao
				where	nr_sequencia	= nr_seq_conta_copartic_p;
				
				update	pls_conta_proc set
					vl_coparticipacao  = NULL
				where	nr_sequencia = nr_seq_conta_proc_w;
			end if;
		end if;
	elsif (nr_seq_conta_p IS NOT NULL AND nr_seq_conta_p::text <> '') then
		select	max(nr_seq_mensalidade_seg),
			coalesce(max(nr_lote_contabil_estorno),0),
			coalesce(max(nr_lote_contabil_prov),0),
			max(nr_seq_regra_limite_copartic)
		into STRICT	nr_seq_mensalidade_seg_w,
			nr_lote_contabil_estorno_w,
			nr_lote_contabil_prov_w,
			nr_seq_regra_limite_copartic_w
		from	pls_conta_coparticipacao
		where	nr_seq_conta	= nr_seq_conta_p;
		
		--Utilizei o max para podes exibir um lote na mensagem(Caso tiver).
		select 	max(nr_seq_ted_benef)
		into STRICT	nr_seq_ted_benef_w
		from	pls_ted_copartic_item
		where  nr_seq_conta_copartic in ( SELECT nr_sequencia
								  from	 pls_conta_coparticipacao
								  where	 nr_seq_conta	= nr_seq_conta_p);
		
		--Registro de coparticipação com vínculo com lote no TED.
		if (nr_seq_ted_benef_w IS NOT NULL AND nr_seq_ted_benef_w::text <> '') then
			--Busca o lote de controle de copartic da função TED
			
			select 	max(nr_seq_lote)
			into STRICT	nr_seq_lote_w
			from	pls_ted_copartic_pagador
			where	nr_sequencia =  ( SELECT nr_seq_ted_pagador
						  from	 pls_ted_copartic_benef a
						  where	 nr_sequencia = nr_seq_ted_benef_w);
			
			CALL wheb_mensagem_pck.exibir_mensagem_abort(360130, 'NR_SEQ_LOTE='||nr_seq_lote_w);
			
		end if;
		
		if	((coalesce(nr_seq_mensalidade_seg_w::text, '') = '') and (coalesce(nr_seq_regra_limite_copartic_w::text, '') = '')) then
			select  count(1)
			into STRICT 	qt_registros_mensalidade_w
			from  	pls_mensalidade_item_conta a
			where  	a.nr_seq_conta_copartic = nr_seq_conta_copartic_p;
		else
			qt_registros_mensalidade_w	:= 0;
		end if;

		if	((nr_seq_mensalidade_seg_w IS NOT NULL AND nr_seq_mensalidade_seg_w::text <> '') or (nr_seq_regra_limite_copartic_w IS NOT NULL AND nr_seq_regra_limite_copartic_w::text <> '') or (qt_registros_mensalidade_w > 0)) then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(328665); --Já existe mensalidade para a coparticipaç¿o Favor verificar.
		elsif (nr_lote_contabil_estorno_w = 0) and -- somente pode excluir coparticipação se não foi contabilizada
			(nr_lote_contabil_prov_w = 0) then
			select	count(1)
			into STRICT	qt_lote_liberacao_w
			from	pls_lib_coparticipacao a,
				pls_lote_coparticipacao b
			where	a.nr_seq_conta	= nr_seq_conta_p
			and	a.nr_seq_lote = b.nr_sequencia
			and	b.ie_status = 'D'; --Definitivo
			
			if (qt_lote_liberacao_w > 0) then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(328668); --Já existe lote de liberação para a coparticipação. Favor verificar na função OPS - Controle de Coparticipações.
			else
				delete	FROM pls_conta_copartic_aprop
				where	nr_seq_conta_coparticipacao in (SELECT  nr_sequencia
									from	pls_conta_coparticipacao
									where	nr_seq_conta  = nr_seq_conta_p);
				
				delete	FROM pls_conta_mat_aprop
				where	nr_seq_conta_mat in (	SELECT	nr_sequencia
								from	pls_conta_mat
								where	nr_seq_conta  = nr_seq_conta_p);
				
				delete	FROM pls_conta_proc_aprop
				where	nr_seq_conta_proc in (	SELECT	nr_sequencia
								from	pls_conta_proc
								where	nr_seq_conta  = nr_seq_conta_p);
				
				delete	from pls_coparticipacao_critica
				where	nr_seq_lib_copartic in (SELECT 	a.nr_sequencia
								from 	pls_lib_coparticipacao a,
									pls_conta_coparticipacao b
								where	a.nr_seq_conta_coparticipacao 	= b.nr_sequencia
								and	b.nr_seq_conta 			= nr_seq_conta_p);
				
				delete from pls_lib_coparticipacao
				where	nr_seq_conta_coparticipacao in (SELECT	nr_sequencia 
									from 	pls_conta_coparticipacao 
									where 	nr_seq_conta = nr_seq_conta_p);
				
				
				/*
					Esse update é em caráter temporário, pois será realizado um ajuste ainda em relação a pls_mensalidade_item_conta
					OS1222239
				*/
				update 	pls_mensalidade_item_conta
				set 	nr_seq_conta_copartic  = NULL 
				where  nr_seq_conta_copartic in ( SELECT nr_sequencia
								from	pls_conta_coparticipacao 
								where	nr_seq_conta = nr_seq_conta_p);
				
				delete	FROM pls_conta_coparticipacao
				where	nr_seq_conta	= nr_seq_conta_p;
				
				update	pls_conta_proc set
					vl_coparticipacao  = NULL
				where	nr_seq_conta	= nr_seq_conta_p;
			end if;
		end if;
	end if;
end if;
	
if (ie_commit_p = 'S') then
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_deletar_coparticipacao ( nr_seq_conta_p bigint, nr_seq_conta_copartic_p bigint, ie_commit_p text, ie_rec_glosa_p text, nr_seq_rec_glosa_conta_p pls_rec_glosa_conta.nr_sequencia%type, nr_seq_protocolo_p pls_rec_glosa_protocolo.nr_sequencia%type, nm_usuario_p text, cd_estabelecimento_p text ) FROM PUBLIC;

