-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_trib_venc_lote_pag ( nr_seq_lote_venc_p bigint, nm_usuario_p text) AS $body$
DECLARE

					
cd_estabelecimento_w		integer;
vl_tributo_w			double precision;
vl_base_calculo_w		double precision;
vl_minimo_tributo_w		double precision;
vl_base_retido_outro_w		double precision;
cd_tributo_w			bigint;
dt_emissao_w			timestamp;
dt_vencimento_w			timestamp;
dt_venc_titulo_w		timestamp;
pr_aliquota_w			double precision;
cd_beneficiario_w		varchar(14);
cd_cond_pagto_w			bigint;
ie_tipo_tributacao_w		varchar(255);
cd_cgc_w			varchar(14);
qt_venc_w			integer;
ds_venc_w			varchar(2000);
vl_trib_acum_w			double precision;
nr_seq_trans_reg_w		bigint;
nr_seq_trans_baixa_w		bigint;
cd_conta_financ_w		bigint;
vl_base_calculo_paga_w		double precision;
cd_pessoa_fisica_w		varchar(10);
nr_seq_prestador_w		bigint;
ie_vencimento_w			varchar(01);
ie_tipo_tributo_w		varchar(15);
ie_acumulativo_w		varchar(1);
vl_soma_trib_nao_retido_w	double precision;
vl_soma_base_nao_retido_w	double precision;
vl_soma_trib_adic_w		double precision;
vl_soma_base_adic_w		double precision;
vl_minimo_base_w		double precision;
vl_trib_adic_w			double precision;
vl_trib_nao_retido_w		double precision;
vl_base_adic_w			double precision;
vl_base_nao_retido_w		double precision;
vl_teto_base_w			double precision;
vl_trib_anterior_w		double precision;
vl_vencimento_w			double precision;
vl_total_base_w			double precision;
vl_inss_w			double precision	:= 0;
ie_irpf_w			varchar(3);
ie_apuracao_piso_w		varchar(3);
dt_tributo_w			timestamp;
vl_reducao_w			double precision;
vl_desc_dependente_w		double precision;
qt_dependente_w			smallint;
cd_darf_w			varchar(20);
cd_variacao_w			varchar(50);
ie_periodicidade_w		varchar(50);
ie_cnpj_w			varchar(50);
cd_cnpj_raiz_w			varchar(50);
vl_base_pago_adic_base_w	double precision;
cd_tributo_pf_w			varchar(10);
vl_base_tributo_pf_w		double precision;
vl_tributo_pf_w			double precision;
cd_pessoa_fisica_pf_w		varchar(10);
qt_registro_w			integer;
ie_tipo_data_w			varchar(5);
qt_imposto_mes_w		bigint;
dt_ref_tributo_w		timestamp;
cd_tributo_ret_w		bigint;
vl_base_calculo_ret_w		double precision;
ie_pago_prev_lote_pag_ops_w	varchar(5);
ds_irrelevante_w		varchar(4000);
ie_restringe_estab_w		varchar(1);
cd_empresa_w			smallint;
nr_seq_regra_irpf_w		regra_calculo_irpf.nr_sequencia%type;
nr_seq_tipo_prestador_w		pls_tipo_prestador.nr_sequencia%type;
nr_seq_classificacao_w		pls_prestador.nr_seq_classificacao%type;

C01 CURSOR FOR
	SELECT	cd_tributo,
		ie_vencimento,
		ie_tipo_tributo,
		ie_apuracao_piso,
		ie_cnpj,
		ie_restringe_estab
	from	tributo
	where	ie_conta_pagar = 'S'
	and	ie_situacao = 'A'
	and	((ie_pf_pj = 'A') or (ie_pf_pj = 'PF' AND cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') or (ie_pf_pj = 'PJ' AND cd_cgc_w IS NOT NULL AND cd_cgc_w::text <> ''))
	and	((coalesce(ie_tipo_tributacao_w, 'X') <> '0') or (coalesce(ie_super_simples, 'S') = 'S'))
	and (coalesce(ie_baixa_titulo,'N') = 'N')
	order	by CASE WHEN ie_tipo_tributo='INSS' THEN 1  ELSE 2 END;
	
C02 CURSOR FOR
	SELECT 	b.cd_tributo,
		b.vl_base_calculo,
		b.vl_tributo,
		b.cd_pessoa_fisica,
		b.ie_tipo_data,
		coalesce(b.ie_pago_prev_lote_pag_ops,'R')
	from	pessoa_fisica_trib b,
		tributo	a
	where	b.cd_tributo = a.cd_tributo
	and	b.cd_pessoa_fisica = cd_pessoa_fisica_w
	and	((b.cd_estabelecimento = cd_estabelecimento_w) or (coalesce(b.cd_estabelecimento::text, '') = ''))
	and	CASE WHEN b.ie_tipo_data='E' THEN dt_emissao_w WHEN b.ie_tipo_data='V' THEN dt_venc_titulo_w END  between b.dt_inicio_vigencia and dt_fim_vigencia;
	
c03 CURSOR FOR
	SELECT	trunc(dt_referencia,'dd'),
		cd_tributo,
		vl_base_calculo
	from	pls_prestador_tributo
	where	nr_seq_prestador = nr_seq_prestador_w
	and	trunc(dt_referencia,'month') = trunc(dt_emissao_w, 'month');
	

BEGIN
select	a.vl_vencimento,
	b.cd_estabelecimento,
	a.dt_vencimento,
	coalesce(b.dt_emissao,b.dt_mes_competencia),
	c.cd_cgc,
	c.cd_pessoa_fisica,
	b.nr_seq_prestador,
	a.dt_vencimento,
	obter_cnpj_raiz(c.cd_cgc),
	d.cd_empresa,
	c.nr_seq_tipo_prestador,
	c.nr_seq_classificacao
into STRICT	vl_vencimento_w,
	cd_estabelecimento_w,
	dt_venc_titulo_w,
	dt_emissao_w,
	cd_cgc_w,
	cd_pessoa_fisica_w,
	nr_seq_prestador_w,
	dt_tributo_w,
	cd_cnpj_raiz_w,
	cd_empresa_w,
	nr_seq_tipo_prestador_w,
	nr_seq_classificacao_w
from	estabelecimento d,
	pls_prestador c,
	pls_lote_protocolo b,
	pls_lote_protocolo_venc a
where	b.cd_estabelecimento = d.cd_estabelecimento
and	a.nr_sequencia = nr_seq_lote_venc_p
and	a.nr_seq_lote = b.nr_sequencia
and	b.nr_seq_prestador = c.nr_sequencia;

select	max(ie_tipo_tributacao)
into STRICT	ie_tipo_tributacao_w
from	pessoa_juridica
where	cd_cgc = cd_cgc_w;

open C02;
loop
fetch C02 into
	cd_tributo_pf_w,
	vl_base_tributo_pf_w,
	vl_tributo_pf_w,
	cd_pessoa_fisica_pf_w,
	ie_tipo_Data_w,
	ie_pago_prev_lote_pag_ops_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin
	select	count(*)
	into STRICT	qt_registro_w
	from	pls_lote_prot_venc_trib a,
		pls_lote_protocolo_venc b,
		pls_lote_protocolo c,
		pls_prestador d
	where	a.nr_seq_lote_venc = b.nr_sequencia
	and	b.nr_seq_lote = c.nr_sequencia
	and	c.nr_seq_prestador = d.nr_sequencia
	and	a.cd_tributo = cd_tributo_pf_w
	and	d.cd_pessoa_fisica = cd_pessoa_fisica_pf_w
	and	trunc(a.dt_imposto,'month') = trunc(dt_emissao_w,'month');
	
	if (qt_registro_w = 0) then
		insert into pls_lote_prot_venc_trib(
				nr_sequencia, 				cd_tributo,			dt_atualizacao,
				dt_atualizacao_nrec,			ie_pago_prev,			nm_usuario,
				nm_usuario_nrec,			nr_seq_lote_venc,		dt_imposto,
				pr_tributo,				vl_base_adic,			vl_base_calculo,
				vl_base_nao_retido, 			vl_imposto,			vl_nao_retido,
				vl_trib_adic)	
			values (nextval('pls_lote_prot_venc_trib_seq'), 	cd_tributo_pf_w,		clock_timestamp(),
				clock_timestamp(),				ie_pago_prev_lote_pag_ops_w,	nm_usuario_p,
				nm_usuario_p,				nr_seq_lote_venc_p,		trunc(CASE WHEN ie_tipo_data_w='E' THEN dt_emissao_w WHEN ie_tipo_data_w='V' THEN dt_venc_titulo_w END ,'dd'),
				0,					0,				vl_base_tributo_pf_w,
				0,					vl_tributo_pf_w,		0,
				0);
	end if;
	end;
end loop;
close C02;

/* OS 207298 -  Tratar valores retidos  do prestador */

select	count(*)
into STRICT	qt_imposto_mes_w
from	pls_prestador_tributo
where	nr_seq_prestador = nr_seq_prestador_w
and	trunc(dt_referencia,'month') = trunc(dt_emissao_w, 'month');

if (qt_imposto_mes_w > 0) then
	open c03;
	loop
	fetch c03 into
		dt_ref_tributo_w,
		cd_tributo_ret_w,
		vl_base_calculo_ret_w;
	EXIT WHEN NOT FOUND; /* apply on c03 */
		begin
		insert into pls_lote_prot_venc_trib(nr_sequencia, 				nr_seq_lote_venc,		cd_tributo,
			ie_pago_prev, 				dt_atualizacao, 		nm_usuario,
			dt_imposto, 				vl_base_calculo, 		vl_imposto,
			vl_nao_retido, 				vl_base_nao_retido,		vl_trib_adic,
			vl_base_adic,				pr_tributo) 
		values (nextval('pls_lote_prot_venc_trib_seq'), 	nr_seq_lote_venc_p, 		cd_tributo_ret_w,
			'R', 					clock_timestamp(),			nm_usuario_p,
			dt_ref_tributo_w, 			vl_base_calculo_ret_w, 		0,
			0, 					0,				0, 
			0,					0);
		end;
	end loop;
	close c03;
end if;

vl_trib_acum_w := 0;

open C01;
loop
fetch C01 into
	cd_tributo_w,
	ie_vencimento_w,
	ie_tipo_tributo_w,
	ie_apuracao_piso_w,
	ie_cnpj_w,
	ie_restringe_estab_w;
EXIT WHEN NOT FOUND; /* apply on c01 */

	vl_base_calculo_w := vl_vencimento_w;
	pr_aliquota_w := 0;
	
	SELECT * FROM obter_dados_trib_tit_pagar(	cd_tributo_w, cd_estabelecimento_w, cd_cgc_w, cd_pessoa_fisica_w, cd_beneficiario_w, pr_aliquota_w, cd_cond_pagto_w, cd_conta_financ_w, nr_seq_trans_reg_w, nr_seq_trans_baixa_w, vl_minimo_base_w, vl_minimo_tributo_w, ie_acumulativo_w, vl_teto_base_w, vl_desc_dependente_w, cd_darf_w, dt_tributo_w, cd_variacao_w, ie_periodicidade_w, null, null, null, null, null, null, ds_irrelevante_w, null, 0, ds_irrelevante_w, ds_irrelevante_w, vl_base_calculo_w, 'N', null, null, nr_seq_tipo_prestador_w, nr_seq_classificacao_w) INTO STRICT cd_beneficiario_w, pr_aliquota_w, cd_cond_pagto_w, cd_conta_financ_w, nr_seq_trans_reg_w, nr_seq_trans_baixa_w, vl_minimo_base_w, vl_minimo_tributo_w, ie_acumulativo_w, vl_teto_base_w, vl_desc_dependente_w, cd_darf_w, cd_variacao_w, ie_periodicidade_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w;
					
	if (pr_aliquota_w > 0) then
		ie_irpf_w := 'N';
		if (ie_tipo_tributo_w in ('IR', 'IRPF')) then -- Calcular Redução base IRPF e saldo menos INSS  
			if (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then
				ie_irpf_w := 'S';
				
				select	coalesce(qt_dependente,0)
				into STRICT	qt_dependente_w
				from	pessoa_fisica
				where	cd_pessoa_fisica = cd_pessoa_fisica_w;
				
				select	coalesce(sum(a.vl_imposto),0)
				into STRICT	vl_inss_w
				from	tributo b,
					pls_lote_prot_venc_trib a
				where	a.cd_tributo = b.cd_tributo
				and	b.ie_tipo_tributo = 'INSS'
				and	a.nr_seq_lote_venc = nr_seq_lote_venc_p
				and	a.ie_pago_prev = 'V';
			end if;
			
			vl_base_calculo_w := vl_base_calculo_w - vl_inss_w;
		end if;
		
		vl_tributo_w := vl_base_calculo_w * pr_aliquota_w / 100;
		
		if (ie_vencimento_w = 'V') then
			dt_vencimento_w	:= coalesce(dt_venc_titulo_w,clock_timestamp());
		elsif (ie_vencimento_w = 'C') then
			dt_vencimento_w	:= coalesce(dt_venc_titulo_w,coalesce(dt_emissao_w,clock_timestamp()));
		else
			dt_vencimento_w	:= coalesce(dt_emissao_w,clock_timestamp());
		end if;
		
		dt_tributo_w := dt_vencimento_w;
		
		if (cd_cond_pagto_w IS NOT NULL AND cd_cond_pagto_w::text <> '') then
			SELECT * FROM calcular_vencimento(cd_estabelecimento_w, cd_cond_pagto_w, dt_vencimento_w, qt_venc_w, ds_venc_w) INTO STRICT qt_venc_w, ds_venc_w;
			
			if (qt_venc_w = 1) then
				dt_vencimento_w	:= to_date(substr(ds_venc_w,1,10),'dd/mm/yyyy');
			end if;
		end if;
		
		select	/*+ USE_CONCAT */ -- Edgar 08/09/2009, OS 160898, coloquei o use_concat para transformar os OR em UNION
			coalesce(sum(vl_soma_trib_nao_retido),0),
			coalesce(sum(vl_soma_base_nao_retido),0),
			coalesce(sum(vl_soma_trib_adic),0),
			coalesce(sum(vl_soma_base_adic),0),
			coalesce(sum(vl_tributo),0),
			coalesce(sum(vl_total_base),0),
			coalesce(sum(vl_reducao),0)
		into STRICT	vl_soma_trib_nao_retido_w,
			vl_soma_base_nao_retido_w,
			vl_soma_trib_adic_w,
			vl_soma_base_adic_w,
			vl_trib_anterior_w,
			vl_total_base_w,
			vl_reducao_w
		from	valores_tributo_v
		where	coalesce(cd_empresa,coalesce(cd_empresa_w,0)) = coalesce(cd_empresa_w,0)
		and	cd_tributo = cd_tributo_w
		and (ie_origem_valores = 'LP'  or ie_apuracao_piso_w = 'S')
		and	coalesce(cd_pessoa_fisica, CASE WHEN ie_cnpj_w='Estab' THEN  cd_cgc  ELSE cd_cnpj_raiz END )	= coalesce(cd_pessoa_fisica_w, CASE WHEN ie_cnpj_w='Estab' THEN  cd_cgc_w  ELSE cd_cnpj_raiz_w END )
		and	trunc(dt_tributo, 'month') = trunc(dt_tributo_w, 'month')
		and	((ie_restringe_estab_w = 'N') or (cd_estabelecimento = cd_estabelecimento_w) or (cd_estab_financeiro = cd_estabelecimento_w))
		and	((ie_apuracao_piso_w = 'N') or (ie_apuracao_piso_w = ie_base_calculo))
		and	ie_baixa_titulo	= 'N';
		
		select	coalesce(sum(vl_base_calculo),0)
		into STRICT	vl_base_calculo_paga_w
		from	pls_lote_prot_venc_trib
		where	nr_seq_lote_venc = nr_seq_lote_venc_p
		and	cd_tributo = cd_tributo_w
		and	ie_pago_prev = 'P';
		
		select	coalesce(sum(vl_base_calculo),0)
		into STRICT	vl_base_retido_outro_w
		from	pls_lote_prot_venc_trib
		where	nr_seq_lote_venc = nr_seq_lote_venc_p
		and	cd_tributo = cd_tributo_w
		and	ie_pago_prev = 'R';
		
		select	coalesce(sum(vl_base_calculo),0)
		into STRICT	vl_base_pago_adic_base_w
		from	pls_lote_prot_venc_trib
		where	nr_seq_lote_venc = nr_seq_lote_venc_p
		and	cd_tributo = cd_tributo_w
		and	ie_pago_prev = 'S';
		
		SELECT * FROM obter_valores_tributo(	ie_acumulativo_w, pr_aliquota_w, vl_minimo_base_w, vl_minimo_tributo_w, vl_soma_trib_nao_retido_w, vl_soma_trib_adic_w, vl_soma_base_nao_retido_w, vl_soma_base_adic_w, vl_base_calculo_w, vl_tributo_w, vl_trib_nao_retido_w, vl_trib_adic_w, vl_base_nao_retido_w, vl_base_adic_w, vl_teto_base_w, vl_trib_anterior_w, ie_irpf_w, vl_total_base_w, vl_reducao_w, vl_desc_dependente_w, qt_dependente_w, vl_base_calculo_paga_w, vl_base_pago_adic_base_w, vl_base_retido_outro_w, obter_outras_reducoes_irpf(cd_pessoa_fisica_w, cd_estabelecimento_w, dt_tributo_w), clock_timestamp(), nr_seq_regra_irpf_w) INTO STRICT pr_aliquota_w, vl_base_calculo_w, vl_tributo_w, vl_trib_nao_retido_w, vl_trib_adic_w, vl_base_nao_retido_w, vl_base_adic_w, vl_reducao_w, vl_desc_dependente_w, nr_seq_regra_irpf_w;
					
		if (vl_tributo_w >= 0) then
			insert into pls_lote_prot_venc_trib(nr_sequencia, 				nr_seq_lote_venc, 			cd_tributo,
				dt_atualizacao, 			nm_usuario, 				dt_imposto,
				vl_base_calculo, 			vl_imposto,				pr_tributo, 
				vl_nao_retido,				vl_base_nao_retido, 			vl_trib_adic, 
				vl_base_adic,				ie_pago_prev,				vl_reducao,
				vl_desc_base,				cd_darf,				dt_atualizacao_nrec,
				nm_usuario_nrec,			ie_periodicidade,			cd_variacao,
				nr_seq_trans_reg,			nr_seq_trans_baixa)				
			values (nextval('pls_lote_prot_venc_trib_seq'), 	nr_seq_lote_venc_p, 			cd_tributo_w,
				clock_timestamp(), 				nm_usuario_p, 				dt_vencimento_w, 
				vl_base_calculo_w, 			vl_tributo_w,				pr_aliquota_w, 
				vl_trib_nao_retido_w, 			vl_base_nao_retido_w, 			vl_trib_adic_w, 
				vl_base_adic_w,				'V',					vl_reducao_w,
				vl_desc_dependente_w,			cd_darf_w,				clock_timestamp(),
				nm_usuario_p,				ie_periodicidade_w,			cd_variacao_w,
				nr_seq_trans_reg_w,			nr_seq_trans_baixa_w);
				
			/* Francisco - 09/01/2012 - Tratar tipo de operação do tributo com relação ao vencimento */

			select	coalesce(sum(CASE WHEN coalesce(a.ie_soma_diminui,'D')='S' THEN (coalesce(vl_tributo_w,0) * - 1) WHEN coalesce(a.ie_soma_diminui,'D')='D' THEN  coalesce(vl_tributo_w,0)  ELSE 0 END ),0)
			into STRICT	vl_tributo_w
			from	tributo a
			where	a.cd_tributo = cd_tributo_w;
			vl_trib_acum_w := vl_trib_acum_w + vl_tributo_w;
		end if;
	end if;
end loop;
close C01;

update	pls_lote_protocolo_venc
set	vl_liquido = vl_vencimento - vl_ir - vl_imposto_munic - vl_trib_acum_w
where	nr_sequencia = nr_seq_lote_venc_p;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_trib_venc_lote_pag ( nr_seq_lote_venc_p bigint, nm_usuario_p text) FROM PUBLIC;

