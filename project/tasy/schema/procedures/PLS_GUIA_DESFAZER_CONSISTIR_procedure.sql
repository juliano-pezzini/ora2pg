-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_guia_desfazer_consistir ( nr_seq_guia_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_guia_proc_w		bigint;
nr_seq_guia_mat_w		bigint;
qt_auditoria_w			integer;
qt_reg_liberacao_proc_w		bigint;
qt_reg_liberacao_mat_w		bigint;
qt_auditoria_assumida_w		bigint;
qt_resposta_autorizacao_w	bigint;
ie_tipo_processo_w		varchar(2);
ie_tipo_intercambio_w		varchar(2);
qt_registros_w			integer;

c01 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_guia_plano_proc
	where	nr_seq_guia	= nr_seq_guia_p
	and	coalesce(nr_seq_motivo_exc::text, '') = '';

c02 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_guia_plano_mat
	where	nr_seq_guia	= nr_seq_guia_p
	and	coalesce(nr_seq_motivo_exc::text, '') = '';


BEGIN

if (nr_seq_guia_p IS NOT NULL AND nr_seq_guia_p::text <> '') and (coalesce(nr_seq_guia_p,0) <> 0) then
	
	begin
		select	ie_tipo_processo,
			ie_tipo_intercambio
		into STRICT	ie_tipo_processo_w,
			ie_tipo_intercambio_w
		from	pls_guia_plano
		where	nr_sequencia	= nr_seq_guia_p;
	exception
	when others then
		ie_tipo_processo_w	:= null;
		ie_tipo_intercambio_w	:= null;
	end;

	if (ie_tipo_processo_w	= 'I') and (ie_tipo_intercambio_w	= 'E') then
		-- Você não pode realizar esta ação em uma guia recebida via intercâmbio!
		CALL wheb_mensagem_pck.exibir_mensagem_abort(271396);
	end if;
	
	select	count(1)
	into STRICT	qt_reg_liberacao_proc_w
	from	pls_guia_plano_proc	b,
		pls_guia_motivo_lib	a
	where	a.nr_seq_guia		= nr_seq_guia_p
	and	a.nr_seq_guia_proc	= b.nr_sequencia
	and	coalesce(b.nr_seq_motivo_exc::text, '') = '';
	
	select	count(1)
	into STRICT	qt_reg_liberacao_mat_w
	from	pls_guia_plano_mat	b,
		pls_guia_motivo_lib	a
	where	a.nr_seq_guia		= nr_seq_guia_p
	and	a.nr_seq_guia_mat	= b.nr_sequencia
	and	coalesce(b.nr_seq_motivo_exc::text, '') = '';
	
	if (qt_reg_liberacao_proc_w > 0) or (qt_reg_liberacao_mat_w > 0)  then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(197962,'');
		--Exitem procedimentos liberados pela auditoria. Favor desfazer a autorização do auditor, antes de desfazer a  consistência.
	end if;
						
	select	count(1)
	into STRICT	qt_auditoria_assumida_w
	from	pls_auditoria a,
		pls_auditoria_grupo b
	where	a.nr_seq_guia	= nr_seq_guia_p
	and	a.nr_sequencia	= b.nr_seq_auditoria
	and	(nm_usuario_exec IS NOT NULL AND nm_usuario_exec::text <> '');
	
	if (qt_auditoria_assumida_w	> 0) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(197963,'');
		--Não foi possível desfazer a consistência, a análise desta guia já foi assumida por um grupo de auditores
	end if;
	
	select	count(1)
	into STRICT	qt_resposta_autorizacao_w
	from	ptu_resposta_autorizacao a
	where	a.nr_seq_guia	= nr_seq_guia_p;
	
	if (qt_resposta_autorizacao_w	> 0) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(323301,'');
		--Não é possível desfazer a consistência de guias que já trafegaram no intercâmbio.
	end if;
	
	select	count(1)
	into STRICT	qt_resposta_autorizacao_w
	from	ptu_pedido_autorizacao a
	where	a.nr_seq_guia	= nr_seq_guia_p;
	
	if (qt_resposta_autorizacao_w	> 0) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(323301,'');
		--Não é possível desfazer a consistência de guias que já trafegaram no intercâmbio.
	end if;
	
	select	count(1)
	into STRICT	qt_resposta_autorizacao_w
	from	ptu_pedido_compl_aut a
	where	a.nr_seq_guia	= nr_seq_guia_p;
	
	if (qt_resposta_autorizacao_w	> 0) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(323301,'');
		--Não é possível desfazer a consistência de guias que já trafegaram no intercâmbio.
	end if;
	
	select	count(1)
	into STRICT	qt_auditoria_w
	from	pls_auditoria
	where	nr_seq_guia	= nr_seq_guia_p;
	
	if (qt_auditoria_w > 0) then
		CALL pls_desfazer_auditoria(nr_seq_guia_p);
	end if;

	--Realiza o Delete na tabela PLS_OCOR_AUT_BENEF_LOG
	select	count(1)
	into STRICT	qt_registros_w
	from	pls_ocor_aut_benef_log
	where	nr_seq_guia_plano	= nr_seq_guia_p;
	
	if (qt_registros_w > 0) then
		delete from pls_ocor_aut_benef_log
		where nr_seq_guia_plano	= nr_seq_guia_p;
	end if;

	CALL pls_desfazer_ocorrencia(nr_seq_guia_p,null,null);
	delete from pls_guia_glosa
	where nr_seq_guia	= nr_seq_guia_p;

	open c01;
	loop
	fetch c01 into	
		nr_seq_guia_proc_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		delete from pls_guia_glosa
		where nr_seq_guia_proc	= nr_seq_guia_proc_w;

		update	pls_guia_plano_proc
		set	nr_seq_tipo_limitacao	 = NULL,
			nr_seq_cobertura	 = NULL,
			ie_tipo_cobertura	 = NULL
		where	nr_sequencia		= nr_seq_guia_proc_w;
		
		delete	from pls_guia_motivo_lib
		where	nr_seq_guia_proc = nr_seq_guia_proc_w;
		end;
	end loop;
	close c01;

	open c02;
	loop
	fetch c02 into	
		nr_seq_guia_mat_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin
		delete from pls_guia_glosa
		where nr_seq_guia_mat	= nr_seq_guia_mat_w;
		
		update	pls_guia_plano_mat
		set		ie_cobranca_prevista  = NULL
		where	nr_sequencia = nr_seq_guia_mat_w;
		
		delete	from pls_guia_motivo_lib
		where	nr_seq_guia_mat = nr_seq_guia_mat_w;
		end;
	end loop;
	close c02;

	update	pls_guia_plano_proc
	set	qt_autorizada		= 0,
		ie_status		= 'U',
		dt_atualizacao		= clock_timestamp(),
		nm_usuario		= nm_usuario_p,		
		dt_liberacao		 = NULL,
		nr_seq_regra_liberacao	 = NULL,
		ie_libera_intercambio	 = NULL,
		nm_usuario_liberacao	 = NULL,
		ie_tipo_cobertura	 = NULL,
		nr_seq_cobertura	 = NULL,
		ie_cobranca_prevista	 = NULL
	where	nr_seq_guia	= nr_seq_guia_p
	and	coalesce(nr_seq_motivo_exc::text, '') = '';

	update	pls_guia_plano_mat
	set	qt_autorizada		= 0,
		ie_status		= 'U',
		dt_atualizacao		= clock_timestamp(),
		dt_liberacao		 = NULL,
		nm_usuario		= nm_usuario_p,
		nm_usuario_liberacao	 = NULL,
		ie_tipo_cobertura	 = NULL,
		nr_seq_cobertura	 = NULL
	where	nr_seq_guia		= nr_seq_guia_p
	and	coalesce(nr_seq_motivo_exc::text, '') = '';

	update	pls_guia_plano
	set	ie_status		= '2',
		ie_estagio		= 7,
		dt_atualizacao		= clock_timestamp(),
		nm_usuario		= nm_usuario_p,
		nr_seq_tipo_limitacao	 = NULL,
		nr_seq_regra_liberacao	 = NULL,
		ie_pagamento_automatico  = NULL,
		nr_seq_pgto_aut		 = NULL,
		ie_estagio_complemento	= 3,
		nr_seq_regra_compl	 = NULL,
		cd_senha		 = NULL,
		qt_dia_autorizado	 = NULL
	where	nr_sequencia		= nr_seq_guia_p;

	delete	from pls_guia_glosa
	where	coalesce(nr_seq_guia::text, '') = ''
	and	coalesce(nr_seq_guia_proc::text, '') = ''
	and	coalesce(nr_seq_guia_mat::text, '') = '';
	
	delete	from pls_guia_coparticipacao
	where	nr_seq_guia = nr_seq_guia_p;
	
	delete	FROM pls_segurado_limitacao
	where	nr_seq_guia_plano = nr_seq_guia_p;
	
	delete	from pls_guia_motivo_lib
	where	nr_seq_guia = nr_seq_guia_p;
		
	CALL pls_guia_gravar_historico(nr_seq_guia_p, 4, '', null, nm_usuario_p);
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_guia_desfazer_consistir ( nr_seq_guia_p bigint, nm_usuario_p text) FROM PUBLIC;

