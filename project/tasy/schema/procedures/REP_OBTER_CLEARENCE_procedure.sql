-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE rep_obter_clearence ( nr_prescricao_p bigint, nr_atendimento_p bigint, ie_opcao_p text, cd_empresa_p bigint, cd_estabelecimento_p bigint, ie_result_p INOUT text, nr_clearence_anterior_p INOUT bigint, nr_clearence_novo_p INOUT bigint, qt_creatinina_p INOUT bigint, dt_creatinina_p INOUT timestamp) AS $body$
DECLARE


qt_cockcroft_gault_w	double precision;
qt_schwartz_w			double precision;
qt_creatinina_serica_w	double precision;
qt_peso_w				double precision;
qt_altura_cm_w			smallint;
ie_calculo_clearence_w	varchar(15)	:= 'S';/* Schwartz */
qt_anos_w				bigint;
qt_clearence_w			double precision;
nr_sequencia_cle_ant_w	bigint;
nr_sequencia_cle_novo_w	bigint;
cd_prescritor_w			varchar(10);
dt_liberacao_w			timestamp;
nr_seq_exame_w			bigint;
qt_resultado_w			double precision;
dt_aprovacao_w			timestamp;
ds_resultado_w			varchar(4000);
nr_atendimento_w		bigint;

C01 CURSOR FOR
	SELECT	c.nr_seq_exame
	from	pep_inf_regra c,
			pep_informacao b,
			pep_dest_inf a
	where	a.nm_tabela			= 'PAC_CLEREANCE_CREATININA'
	and		a.nm_atributo		= 'QT_CREATININA_SERICA'
	and		c.cd_empresa		= cd_empresa_p
	and		coalesce(c.cd_estabelecimento,cd_estabelecimento_p)	= cd_estabelecimento_p
	and		a.nr_seq_inf		= b.nr_sequencia
	and		b.nr_sequencia		= c.nr_seq_inf
	and		b.nr_sequencia		= 20
	and (a.nr_sequencia		= c.nr_seq_dest_inf or coalesce(c.nr_seq_dest_inf::text, '') = '')
	order by coalesce(c.nr_seq_dest_inf,0);

c02 CURSOR FOR
	SELECT 	b.qt_resultado,
			b.dt_aprovacao,
			b.ds_resultado
	from 	exame_lab_result_item 	b,
			exame_lab_resultado 	a,
			prescr_procedimento 	x,
			prescr_medica c
	where	a.nr_seq_resultado	= b.nr_seq_resultado
	and		a.nr_prescricao		= c.nr_prescricao
	and		x.nr_sequencia		= b.nr_seq_prescr
	and		x.nr_prescricao		= c.nr_prescricao
	and		b.nr_seq_exame		= nr_seq_exame_w
	and		c.nr_atendimento 	= nr_atendimento_p
	and		x.ie_status_atend	>= 35
	order by b.dt_aprovacao;


BEGIN

if (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') then
	select	max((obter_idade(coalesce(b.dt_nascimento,clock_timestamp()),coalesce(b.dt_obito,clock_timestamp()),'A'))::numeric ),
			max(cd_prescritor),
			coalesce(nr_atendimento_p,max(nr_atendimento))
	into STRICT	qt_anos_w,
			cd_prescritor_w,
			nr_atendimento_w
	from	pessoa_fisica b,
			prescr_medica a
	where	a.cd_pessoa_fisica	= b.cd_pessoa_fisica
	and		a.nr_prescricao		= nr_prescricao_p;

	if (nr_atendimento_p > 0) then
		if (ie_opcao_p = 'SOU') then
			begin

			select	max(qt_cockcroft_gault),
					max(qt_schwartz),
					max(qt_creatinina_serica),
					max(qt_peso),
					max(qt_altura_cm),
					max(nr_sequencia)
			into STRICT	qt_cockcroft_gault_w,
					qt_schwartz_w,
					qt_creatinina_serica_w,
					qt_peso_w,
					qt_altura_cm_w,
					nr_sequencia_cle_novo_w
			from	pac_clereance_creatinina
			where	nr_sequencia	= (	SELECT	max(nr_sequencia)
										from	pac_clereance_creatinina
										where	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
										and		nr_atendimento	= nr_atendimento_p);

			qt_clearence_w		:= qt_schwartz_w;

			if (qt_anos_w >= 16) then
				ie_calculo_clearence_w	:= 'CG'; /* Cockcroft-Galt */
				qt_clearence_w			:= qt_cockcroft_gault_w;
			end if;

			if (qt_clearence_w > 0) then
				update	prescr_medica
				set		qt_altura_cm			= qt_altura_cm_w,
						qt_peso					= qt_peso_w,
						qt_creatinina			= qt_creatinina_serica_w,
						qt_clearence			= qt_clearence_w,
						ie_calculo_clearence	= ie_calculo_clearence_w,
						nr_seq_clearence_pep	= nr_sequencia_cle_novo_w
				where	nr_prescricao			= nr_prescricao_p;
				commit;
			end if;

			ie_result_p	:= 'UCL'; /* Último Clearence */
			end;
		elsif (ie_opcao_p = 'MSN') then

			select	max(nr_seq_clearence_pep)
			into STRICT	nr_sequencia_cle_ant_w
			from	prescr_medica
			where	cd_prescritor	= cd_prescritor_w
			and		nr_atendimento	= nr_atendimento_p;

			select	max(qt_cockcroft_gault),
					max(qt_schwartz),
					max(qt_creatinina_serica),
					max(qt_peso),
					max(qt_altura_cm),
					max(nr_sequencia),
					max(dt_liberacao)
			into STRICT	qt_cockcroft_gault_w,
					qt_schwartz_w,
					qt_creatinina_serica_w,
					qt_peso_w,
					qt_altura_cm_w,
					nr_sequencia_cle_novo_w,
					dt_liberacao_w
			from	pac_clereance_creatinina
			where	nr_sequencia	= (	SELECT	max(nr_sequencia)
										from	pac_clereance_creatinina
										where	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
										and		nr_atendimento	= nr_atendimento_p);

			open c01;
			loop
			fetch c01 into
				nr_seq_exame_w;
			EXIT WHEN NOT FOUND; /* apply on c01 */
			end loop;
			close c01;

			open c02;
			loop
			fetch c02 into
				qt_resultado_w,
				dt_aprovacao_w,
				ds_resultado_w;
			EXIT WHEN NOT FOUND; /* apply on c02 */
			end loop;
			close c02;

			if (dt_aprovacao_w > dt_liberacao_w) then
				begin

				qt_clearence_w		:= qt_schwartz_w;

				if (qt_anos_w >= 16) then
					ie_calculo_clearence_w	:= 'CG'; /* Cockcroft-Galt */
					qt_clearence_w			:= qt_cockcroft_gault_w;
				end if;

				if (qt_clearence_w > 0) then
					update	prescr_medica
					set		qt_altura_cm			= qt_altura_cm_w,
							qt_peso					= qt_peso_w,
							qt_creatinina			= qt_creatinina_serica_w,
							qt_clearence			= qt_clearence_w,
							ie_calculo_clearence	= ie_calculo_clearence_w,
							nr_seq_clearence_pep	= nr_sequencia_cle_novo_w
					where	nr_prescricao			= nr_prescricao_p;
					commit;
				end if;

				if (coalesce(qt_resultado_w::text, '') = '') and (ds_resultado_w IS NOT NULL AND ds_resultado_w::text <> '') then
					begin
						qt_resultado_w	:= (ds_resultado_w)::numeric;
					exception when others then
						qt_resultado_w	:= qt_resultado_w;
					end;
				end if;
				qt_creatinina_p			:= qt_resultado_w;
				dt_creatinina_p			:= dt_aprovacao_w;
				nr_clearence_anterior_p	:= nr_sequencia_cle_ant_w;
				nr_clearence_novo_p		:= nr_sequencia_cle_novo_w;
				ie_result_p				:= 'NCR'; /* Nova Creatinina */
				end;
			elsif (nr_sequencia_cle_novo_w > nr_sequencia_cle_ant_w) then
				begin

				qt_clearence_w		:= qt_schwartz_w;

				if (qt_anos_w >= 16) then
					ie_calculo_clearence_w	:= 'CG'; /* Cockcroft-Galt */
					qt_clearence_w			:= qt_cockcroft_gault_w;
				end if;

				if (qt_clearence_w > 0) then
					update	prescr_medica
					set		qt_altura_cm			= qt_altura_cm_w,
							qt_peso					= qt_peso_w,
							qt_creatinina			= qt_creatinina_serica_w,
							qt_clearence			= qt_clearence_w,
							ie_calculo_clearence	= ie_calculo_clearence_w,
							nr_seq_clearence_pep	= nr_sequencia_cle_novo_w
					where	nr_prescricao			= nr_prescricao_p;
					commit;
				end if;

				if (coalesce(qt_resultado_w::text, '') = '') and (ds_resultado_w IS NOT NULL AND ds_resultado_w::text <> '') then
					begin
						qt_resultado_w	:= (ds_resultado_w)::numeric;
					exception when others then
						qt_resultado_w	:= qt_resultado_w;
					end;
				end if;
				qt_creatinina_p			:= qt_resultado_w;
				dt_creatinina_p			:= dt_aprovacao_w;
				nr_clearence_anterior_p	:= nr_sequencia_cle_ant_w;
				nr_clearence_novo_p		:= nr_sequencia_cle_novo_w;
				ie_result_p				:= 'NCL'; /* Novo Clearence */
				end;
			else
				begin

				qt_clearence_w		:= qt_schwartz_w;

				if (qt_anos_w >= 16) then
					ie_calculo_clearence_w	:= 'CG'; /* Cockcroft-Galt */
					qt_clearence_w			:= qt_cockcroft_gault_w;
				end if;

				if (qt_clearence_w > 0) then
					update	prescr_medica
					set		qt_altura_cm			= qt_altura_cm_w,
							qt_peso					= qt_peso_w,
							qt_creatinina			= qt_creatinina_serica_w,
							qt_clearence			= qt_clearence_w,
							ie_calculo_clearence	= ie_calculo_clearence_w,
							nr_seq_clearence_pep	= nr_sequencia_cle_novo_w
					where	nr_prescricao			= nr_prescricao_p;
					commit;
				end if;

				if (coalesce(qt_resultado_w::text, '') = '') and (ds_resultado_w IS NOT NULL AND ds_resultado_w::text <> '') then
					begin
						qt_resultado_w	:= (ds_resultado_w)::numeric;
					exception when others then
						qt_resultado_w	:= qt_resultado_w;
					end;
				end if;
				qt_creatinina_p			:= qt_resultado_w;
				dt_creatinina_p			:= dt_aprovacao_w;
				nr_clearence_anterior_p	:= nr_sequencia_cle_ant_w;
				nr_clearence_novo_p		:= nr_sequencia_cle_novo_w;
				ie_result_p				:= 'UCL'; /* Último Clearence */
				end;
			end if;
		end if;
	end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE rep_obter_clearence ( nr_prescricao_p bigint, nr_atendimento_p bigint, ie_opcao_p text, cd_empresa_p bigint, cd_estabelecimento_p bigint, ie_result_p INOUT text, nr_clearence_anterior_p INOUT bigint, nr_clearence_novo_p INOUT bigint, qt_creatinina_p INOUT bigint, dt_creatinina_p INOUT timestamp) FROM PUBLIC;

