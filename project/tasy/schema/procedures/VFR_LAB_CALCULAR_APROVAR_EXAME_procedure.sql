-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE vfr_lab_calcular_aprovar_exame ( nr_seq_result_p bigint, nr_prescricao_p bigint, nr_seq_prescr_p bigint, nm_usuario_p text, nr_seq_exame_p bigint default null) AS $body$
DECLARE



nr_seq_material_w		bigint;
nr_seq_exame_w			bigint;
qt_resultado_w			double precision;
pr_resultado_w			double precision;
ds_resultado_w			varchar(2000);
ie_status_receb_w		smallint;
ie_status_novo_receb_w		smallint;
ds_consistencia_w		varchar(4000);
ie_aprovar_todos_interf_w	varchar(1);
qt_exames_consist_w		integer;
ie_status_receb_lote_w		smallint;
qt_resultados_pend_w		bigint;
ie_atualizar_data_digitacao_w	varchar(1);

c02 CURSOR FOR
	SELECT	nr_seq_exame,
		qt_resultado,
		pr_resultado,
		ds_resultado
	from exame_lab_result_item
	where nr_seq_resultado	= nr_seq_result_p
	  and nr_seq_prescr	= nr_seq_prescr_p
	  and nr_seq_exame = coalesce(nr_seq_exame_p,nr_seq_exame)
	  and ((qt_resultado <> 0) or (pr_resultado <> 0) or (ds_resultado IS NOT NULL AND ds_resultado::text <> ''))
	order by nr_sequencia;


BEGIN

select	coalesce(max(b.ie_status_receb),35),
	coalesce(max(b.ie_aprovar_todos_interf),'S'),
	max(b.ie_status_receb_lote_ext),
	coalesce(max(ie_atualizar_data_digitacao),'S')
into STRICT	ie_status_receb_w,
	ie_aprovar_todos_interf_w,
	ie_status_receb_lote_w,
	ie_atualizar_data_digitacao_w
from	lab_parametro b,
	prescr_medica a
where	a.cd_estabelecimento	= b.cd_estabelecimento
  and	a.nr_prescricao		= nr_prescricao_p;


select	max(nr_seq_material)
into STRICT	nr_seq_material_w
from exame_lab_result_item
where nr_seq_resultado	= nr_seq_result_p
  and nr_seq_prescr	= nr_seq_prescr_p
  and (nr_seq_material IS NOT NULL AND nr_seq_material::text <> '');

open c02;
loop
fetch c02 into	nr_seq_exame_w,
		qt_resultado_w,
		pr_resultado_w,
		ds_resultado_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */

	begin
	ds_resultado_w := calcular_valores_exame(nr_seq_result_p, nr_prescricao_p, nr_seq_prescr_p, nr_seq_material_w, nr_seq_exame_w, qt_resultado_w, pr_resultado_w, ds_resultado_w);
	exception
	when others then
		CALL gravar_log_lab(70005,'exception prescr: '||nr_prescricao_p||' seq_prescr: '||nr_seq_prescr_p||' nr_seq_result_p: '||nr_seq_result_p||' nr_seq_exame_w: '||nr_seq_exame_w||' err: '||substr(sqlerrm,1,400),'tasy',nr_prescricao_p,'VFR');
		commit;
	end;

--	dbms_output.put_line(nr_seq_exame_w || '-' || ds_resultado_w);
end loop;
close c02;
ie_status_novo_receb_w := ie_status_receb_w;
ds_consistencia_w := '';
if (ie_aprovar_todos_interf_w = 'N') then
	ds_consistencia_w := Consistir_Aprovacao_Exame(nr_prescricao_p, nr_seq_prescr_p, ds_consistencia_w);
	if (ds_consistencia_w <> '' AND ie_status_receb_w = 35) then
		ie_status_novo_receb_w := 30;
		CALL gravar_log_lab(70005,'VFR - Consistir_Aprovacao_Exame prescr: '||nr_prescricao_p||' seq_prescr: '||nr_seq_prescr_p||' nr_seq_result_p: '||nr_seq_result_p||' ds_consistencia_w: '||substr(ds_consistencia_w,1,400),'tasy',nr_prescricao_p,'VFR');
		commit;
	end if;
end if;

if (ie_status_novo_receb_w = 35) then
	qt_exames_consist_w := consitir_valores_interf_aprov(nr_seq_result_p, nr_seq_prescr_p, qt_exames_consist_w);
	if (qt_exames_consist_w > 0) then
		ie_status_novo_receb_w := 30;
		CALL gravar_log_lab(70005,'VFR - consitir_valores_interf_aprov prescr: '||nr_prescricao_p||' seq_prescr: '||nr_seq_prescr_p||' nr_seq_result_p: '||nr_seq_result_p||' qt_exames_consist_w: '||substr(qt_exames_consist_w,1,400),'tasy',nr_prescricao_p,'VFR');
		commit;
	end if;
end if;

if (ie_atualizar_data_digitacao_w = 'S') then
	select 	count(*)
	into STRICT	qt_resultados_pend_w
	from 	exame_lab_result_item
	where 	nr_seq_resultado	= nr_seq_result_p
	and 	nr_seq_prescr		= nr_seq_prescr_p
	and		coalesce(nr_seq_material::text, '') = ''
	and 	((qt_resultado = 0 or coalesce(qt_resultado::text, '') = '') and (pr_resultado = 0 or coalesce(pr_resultado::text, '') = '') and (coalesce(ds_resultado::text, '') = ''))
	and	((ie_status = 0) or (coalesce(ie_status::text, '') = ''));
else
	select 	count(*)
	into STRICT	qt_resultados_pend_w
	from 	exame_lab_result_item
	where 	nr_seq_resultado	= nr_seq_result_p
	and 	nr_seq_prescr		= nr_seq_prescr_p
	and		coalesce(nr_seq_material::text, '') = ''
	and 	coalesce(dt_digitacao::text, '') = '';
end if;


if (qt_resultados_pend_w = 0) then

	update prescr_procedimento
	set 	ie_status_atend = ie_status_novo_receb_w,
			dt_atualizacao = clock_timestamp(),
			nm_usuario = nm_usuario_p
	where 	nr_prescricao = nr_prescricao_p
	  and 	nr_sequencia = nr_seq_prescr_p
	  and 	ie_status_atend = 30;

	if (ie_status_novo_receb_w >= 35) then
		update 	exame_lab_result_item
		set	dt_aprovacao		= clock_timestamp(),
			nm_usuario_aprovacao	= nm_usuario_p
		where	nr_seq_resultado	= nr_seq_result_p
		  and	nr_seq_prescr		= nr_seq_prescr_p
		  and	(nr_seq_material IS NOT NULL AND nr_seq_material::text <> '');
	end if;

end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE vfr_lab_calcular_aprovar_exame ( nr_seq_result_p bigint, nr_prescricao_p bigint, nr_seq_prescr_p bigint, nm_usuario_p text, nr_seq_exame_p bigint default null) FROM PUBLIC;

