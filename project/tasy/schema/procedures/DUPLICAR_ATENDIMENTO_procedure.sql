-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE duplicar_atendimento (nr_atend_origem_p bigint, nm_usuario_p text, nr_atend_novo_p INOUT bigint) AS $body$
DECLARE


nr_atend_novo_w			bigint;
nr_seq_interno_W		bigint;
nr_seq_interno_unid_w		bigint;


BEGIN

select	nextval('atendimento_paciente_seq')
into STRICT	nr_atend_novo_w
;

/* Gerar atendimento novo */

begin

        insert	into atendimento_paciente(NR_ATENDIMENTO, CD_PESSOA_FISICA, CD_ESTABELECIMENTO, CD_PROCEDENCIA,
                DT_ENTRADA, IE_TIPO_ATENDIMENTO, DT_ATUALIZACAO, NM_USUARIO,
                CD_MEDICO_RESP, CD_MOTIVO_ALTA, DS_SINTOMA_PACIENTE, DS_OBSERVACAO,
                DT_ALTA, IE_CLINICA, NM_USUARIO_ATEND, IE_RESPONSAVEL,
                DT_FIM_CONTA, IE_FIM_CONTA, NR_CAT, DS_CAUSA_EXTERNA,
                CD_CGC_SEGURADORA, NR_BILHETE, NR_SERIE_BILHETE, IE_CARATER_INTER_SUS,
                IE_VINCULO_SUS, IE_TIPO_CONVENIO, IE_TIPO_ATEND_BPA, IE_GRUPO_ATEND_BPA,
                CD_MEDICO_ATENDIMENTO, DT_ALTA_INTERNO, NR_SEQ_UNID_ATUAL, NR_SEQ_UNID_INT,
                NR_ATEND_ORIGINAL, QT_DIA_LONGA_PERM, DT_INICIO_ATENDIMENTO, IE_PERMITE_VISITA,
                IE_STATUS_ATENDIMENTO, DT_PREVISTO_ALTA, NM_USUARIO_ALTA, CD_PESSOA_RESPONSAVEL,
                DT_ATEND_MEDICO, DT_SAIDA_REAL, IE_CLINICA_ALTA, DT_FIM_CONSULTA,
                DT_MEDICACAO, DT_LIB_MEDICO, NR_SEQ_REGRA_FUNCAO, NR_SEQ_LOCAL_PA,
                NR_SEQ_TIPO_ACIDENTE, DT_OCORRENCIA, DS_PEND_AUTORIZACAO, NR_SEQ_CHECK_LIST,
                DT_FIM_TRIAGEM, NR_RESERVA_LEITO, IE_PACIENTE_ISOLADO, IE_PERMITE_VISITA_REL,
                NR_SEQ_CLASSIFICACAO,IE_TIPO_ATEND_TISS,NR_SEQ_INDICACAO,NR_SEQ_FORMA_CHEGADA,NR_SEQ_QUEIXA, NR_SEQ_EPISODIO)
        SELECT	nr_atend_novo_w, cd_pessoa_fisica, cd_estabelecimento, cd_procedencia,
                clock_timestamp(), ie_tipo_atendimento, clock_timestamp(), nm_usuario_p,
                cd_medico_resp, null, DS_SINTOMA_PACIENTE, DS_OBSERVACAO,
                null, ie_clinica, nm_usuario_p, IE_RESPONSAVEL,
                null, null, NR_CAT, DS_CAUSA_EXTERNA,
                CD_CGC_SEGURADORA, NR_BILHETE, NR_SERIE_BILHETE, IE_CARATER_INTER_SUS,
                IE_VINCULO_SUS, IE_TIPO_CONVENIO, IE_TIPO_ATEND_BPA, IE_GRUPO_ATEND_BPA,
                CD_MEDICO_ATENDIMENTO, null, NR_SEQ_UNID_ATUAL, NR_SEQ_UNID_INT,
                null, QT_DIA_LONGA_PERM, clock_timestamp(), IE_PERMITE_VISITA,
                IE_STATUS_ATENDIMENTO, null, null, CD_PESSOA_RESPONSAVEL,
                null, null, IE_CLINICA_ALTA, null,
                null, null, NR_SEQ_REGRA_FUNCAO, NR_SEQ_LOCAL_PA,
                NR_SEQ_TIPO_ACIDENTE, null, DS_PEND_AUTORIZACAO, NR_SEQ_CHECK_LIST,
                null, NR_RESERVA_LEITO, coalesce(IE_PACIENTE_ISOLADO,'N'), IE_PERMITE_VISITA_REL,
                NR_SEQ_CLASSIFICACAO,IE_TIPO_ATEND_TISS,NR_SEQ_INDICACAO,NR_SEQ_FORMA_CHEGADA,NR_SEQ_QUEIXA, NR_SEQ_EPISODIO
        from	atendimento_paciente
        where	nr_atendimento	= nr_atend_origem_p;

exception
when others then
	insert into log_atendimento(dt_atualizacao, nm_usuario, cd_log, ds_log) values (clock_timestamp(), nm_usuario_p, 14, '1 - ' ||
	(SELECT	nr_atend_novo_w || ' - ' || cd_pessoa_fisica || ' - ' || cd_estabelecimento || ' - ' || clock_timestamp() || ' - ' || ie_tipo_atendimento || ' - ' || cd_medico_resp || ' - ' ||
		ie_clinica || ' - ' || IE_TIPO_CONVENIO || ' - ' || nr_atend_origem_p
	from	atendimento_paciente
	where	nr_atendimento	= nr_atend_origem_p));
end;

/* gerar atend_categoria_convenio novo */

select	max(nr_seq_interno)
into STRICT	nr_seq_interno_w
from	atend_categoria_convenio
where	nr_atendimento	= nr_atend_origem_p;

begin
insert	into Atend_Categoria_Convenio(nr_atendimento, cd_convenio, cd_categoria, dt_inicio_vigencia,
	dt_final_vigencia, dt_atualizacao, nm_usuario, cd_usuario_convenio,
	cd_empresa, nr_doc_convenio, cd_tipo_acomodacao, ie_tipo_guia,
	cd_plano_convenio, nr_seq_interno)
SELECT	nr_atend_novo_w, cd_convenio, cd_categoria, clock_timestamp(),
	null, clock_timestamp(), nm_usuario_p, cd_usuario_convenio,
	cd_empresa, nr_doc_convenio, cd_tipo_acomodacao, ie_tipo_guia,
	cd_plano_convenio, nextval('atend_categoria_convenio_seq')
from	atend_categoria_convenio
where	nr_seq_interno	= nr_seq_interno_w;
exception
when others then
	insert into log_atendimento(dt_atualizacao, nm_usuario, cd_log, ds_log) values (clock_timestamp(), nm_usuario_p, 14, '2 - ' ||
		(SELECT	nr_atend_novo_w || ' - ' || cd_convenio || ' - ' || cd_categoria || ' - ' || clock_timestamp() || ' - ' ||
			cd_tipo_acomodacao || ' - ' || ie_tipo_guia || ' - ' || cd_plano_convenio || ' - ' || nr_seq_interno_w
		from	atend_categoria_convenio
		where	nr_seq_interno	= nr_seq_interno_w));
end;

begin
select	min(a.nr_seq_interno)
into STRICT	nr_seq_interno_unid_w
from	setor_atendimento b,
	atend_paciente_unidade a
where	a.nr_atendimento	= nr_atend_origem_p
and	a.cd_setor_atendimento	= b.cd_setor_atendimento
and	b.cd_classif_setor not in (3,4);
exception
when others then
	nr_seq_interno_unid_w	:= null;
end;

if (nr_seq_interno_unid_w IS NOT NULL AND nr_seq_interno_unid_w::text <> '') then
	begin
	insert into atend_paciente_unidade(
		nr_atendimento,
		nr_sequencia,
		cd_setor_atendimento,
		cd_unidade_basica,
		cd_unidade_compl,
		dt_entrada_unidade,
		dt_atualizacao,
		nm_usuario,
		cd_tipo_acomodacao,
		dt_saida_unidade,
		nr_atend_dia,
		ds_observacao,
		nm_usuario_original,
		dt_saida_interno,
		ie_passagem_setor,
		nr_acompanhante,
		nr_seq_interno,
		IE_CALCULAR_DIF_DIARIA)
	SELECT	nr_atend_novo_w,
		1,
		cd_setor_atendimento,
		cd_unidade_basica,
		cd_unidade_compl,
		clock_timestamp(),
		clock_timestamp(),
		nm_usuario_p,
		cd_tipo_acomodacao,
		null,
		null,
		null,
		nm_usuario_p,
		null,
		'N',
		null,
		nextval('atend_paciente_unidade_seq'),
		'S'
	from	atend_paciente_unidade
	where	nr_seq_interno	= nr_seq_interno_unid_w;
	exception
	when others then
		insert into log_atendimento(dt_atualizacao, nm_usuario, cd_log, ds_log) values (clock_timestamp(), nm_usuario_p, 14, '3 - ' ||
		(SELECT	nr_atend_novo_w || ' - ' || cd_setor_atendimento || ' - ' || nm_usuario_p || ' - ' || nr_seq_interno_unid_w
			from	atend_paciente_unidade
			where	nr_seq_interno	= nr_seq_interno_unid_w));
	end;

end if;

nr_atend_novo_p	:= nr_atend_novo_w;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE duplicar_atendimento (nr_atend_origem_p bigint, nm_usuario_p text, nr_atend_novo_p INOUT bigint) FROM PUBLIC;

