-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gravar_carga_preco ( cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


dt_inicio_vigencia_w		timestamp;
nm_tabela_w			varchar(255);
dt_fim_vigencia_w		timestamp;
nr_protocolo_w			varchar(20);
cd_codigo_scpa_w		varchar(20);
nr_seq_plano_w			bigint;
cd_codigo_ant_w			varchar(20);
ie_tabela_base_w		varchar(1);
ie_tabela_contrato_w		varchar(1);
ie_proposta_adesao_w		varchar(1);
ie_simulacao_preco_w		varchar(1);
nr_seq_tabela_w			bigint;
qt_idade_inicial_w		integer;
qt_idade_final_w		integer;
vl_preco_inicial_w		double precision;
vl_preco_atual_w		double precision;
tx_acrescimo_w			double precision;
vl_preco_nao_subsidiado_w	double precision;
vl_preco_nao_subsid_atual_w	double precision;
nr_seq_preco_w			double precision;

C01 CURSOR FOR
	SELECT	dt_inicio_vigencia,
		nm_tabela,
		dt_fim_vigencia,
		nr_protocolo,
		cd_codigo_scpa,
		nr_seq_plano,
		cd_codigo_ant,
		coalesce(ie_tabela_base,'N'),
		ie_tabela_contrato,
		ie_proposta_adesao,
		ie_simulacao_preco,
		nr_seq_tabela,
		qt_idade_inicial,
		qt_idade_final,
		vl_preco_inicial,
		vl_preco_atual,
		tx_acrescimo,
		vl_preco_nao_subsidiado,
		vl_preco_nao_subsid_atual
	from	w_pls_carga_preco;


BEGIN

open C01;
loop
fetch C01 into
	dt_inicio_vigencia_w,
	nm_tabela_w,
	dt_fim_vigencia_w,
	nr_protocolo_w,
	cd_codigo_scpa_w,
	nr_seq_plano_w,
	cd_codigo_ant_w,
	ie_tabela_base_w,
	ie_tabela_contrato_w,
	ie_proposta_adesao_w,
	ie_simulacao_preco_w,
	nr_seq_tabela_w,
	qt_idade_inicial_w,
	qt_idade_final_w,
	vl_preco_inicial_w,
	vl_preco_atual_w,
	tx_acrescimo_w,
	vl_preco_nao_subsidiado_w,
	vl_preco_nao_subsid_atual_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	select	coalesce(max(nr_sequencia),0)
	into STRICT	nr_seq_preco_w
	from	pls_tabela_preco
	where	cd_codigo_ant	= cd_codigo_ant_w;

	if (nr_seq_preco_w	= 0) then
		select	nextval('pls_tabela_preco_seq')
		into STRICT	nr_seq_preco_w
		;

		insert into pls_tabela_preco(nr_sequencia, dt_atualizacao, nm_usuario,
			dt_atualizacao_nrec, nm_usuario_nrec, nm_tabela,
			dt_inicio_vigencia, dt_fim_vigencia, nr_seq_plano,
			dt_liberacao, cd_codigo_ant, ie_tabela_base,
			nr_contrato, ie_tabela_contrato, nr_segurado,
			nr_seq_tabela_origem, ie_proposta_adesao, ie_simulacao_preco)
		values (	nr_seq_preco_w, clock_timestamp(), nm_usuario_p,
			clock_timestamp(), nm_usuario_p, nm_tabela_w,
			dt_inicio_vigencia_w, dt_fim_vigencia_w, nr_seq_plano_w,
			null, cd_codigo_ant_w, ie_tabela_base_w,
			null, ie_tabela_contrato_w, null,
			null, ie_proposta_adesao_w, ie_simulacao_preco_w);
	end if;
	if (nr_seq_plano_w	> 0) then
		insert into pls_plano_preco(nr_sequencia, dt_atualizacao, nm_usuario,
			dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_tabela,
			qt_idade_inicial, qt_idade_final, vl_preco_inicial,
			vl_preco_atual, tx_acrescimo, vl_preco_nao_subsidiado,
			vl_preco_nao_subsid_atual)
		values (	nextval('pls_plano_preco_seq'), clock_timestamp(), nm_usuario_p,
			clock_timestamp(), nm_usuario_p, nr_seq_preco_w,
			qt_idade_inicial_w, qt_idade_final_w, vl_preco_inicial_w,
			vl_preco_atual_w, tx_acrescimo_w, vl_preco_nao_subsidiado_w,
			vl_preco_nao_subsid_atual_w);
	end if;
	end;
end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gravar_carga_preco ( cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

