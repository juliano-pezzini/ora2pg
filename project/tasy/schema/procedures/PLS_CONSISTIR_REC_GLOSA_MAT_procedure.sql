-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_consistir_rec_glosa_mat ( nr_seq_conta_imp_p bigint, nm_usuario_p text, ds_msg_abort_p INOUT text, ie_consid_negados_p pls_parametros_rec_glosa.ie_consid_negado%type default null) AS $body$
DECLARE


qt_registro_glosa_w    bigint := 0;
vl_glosa_w      pls_conta_mat.vl_glosa%type;
vl_recursado_w      pls_rec_glosa_mat.vl_recursado%type;
ds_observacao_w      pls_rec_retorno_glosa.ds_observacao%type;

C01 CURSOR FOR
  SELECT   b.nr_sequencia,
    b.cd_material,
    b.nr_seq_conta,
    b.nr_seq_material,
    b.vl_recursado,
    b.cd_tipo_tabela,
    a.nr_sequencia nr_seq_reg
  from   pls_rec_glosa_conta_imp a,
    pls_rec_glosa_mat_imp b,
    pls_rec_glosa_prot_cta_imp p
  where   a.nr_sequencia = b.nr_seq_conta_imp
  and   a.nr_seq_protocolo_cta = p.nr_sequencia
  and  a.nr_sequencia = nr_seq_conta_imp_p;

BEGIN

for rg01 in C01 loop

  if (rg01.vl_recursado <= 0) then
    ds_msg_abort_p := 'Valor recursado indevido. O valor recursado deve ser maior que zero. Valor recursado: ' || rg01.vl_recursado || '.';

  elsif (coalesce(rg01.nr_seq_material::text, '') = '') then
    ds_observacao_w  :=  obter_desc_expressao( 961137 );
    if (coalesce(rg01.cd_tipo_tabela,'00') = '20') then
      CALL pls_gravar_glosa_recurso_glosa(  '2101', nr_seq_conta_imp_p, null, rg01.nr_sequencia, null, ds_observacao_w, nm_usuario_p);
    else
      CALL pls_gravar_glosa_recurso_glosa(  '2001', nr_seq_conta_imp_p, null, rg01.nr_sequencia, null, ds_observacao_w, nm_usuario_p);
    end if;

  elsif (rg01.nr_seq_conta IS NOT NULL AND rg01.nr_seq_conta::text <> '') then

    vl_recursado_w := pls_obter_saldo_recurso_glosa(rg01.nr_seq_material, 'M', 'R', ie_consid_negados_p);

    select  coalesce(sum(vl_glosa),0)
    into STRICT  vl_glosa_w
    from  pls_conta_mat
    where  nr_sequencia = rg01.nr_seq_material;

    if (vl_glosa_w < vl_recursado_w) then

		vl_recursado_w := vl_recursado_w - rg01.vl_recursado;
		vl_recursado_w := vl_recursado_w - rg01.vl_recursado;
		if (vl_glosa_w  <= vl_recursado_w) then

			CALL pls_gravar_glosa_recurso_glosa(  '2904', nr_seq_conta_imp_p, rg01.nr_sequencia, null, null, ds_observacao_w, nm_usuario_p);

		else

		
			ds_observacao_w :=   'Valor total recursado maior que o valor de glosa do item.' || pls_util_pck.enter_w ||
				'Valor recursado: ' || vl_recursado_w || pls_util_pck.enter_w ||
				'Valor recursando: ' || rg01.vl_recursado || pls_util_pck.enter_w ||
				'Valor glosa do item: ' || vl_glosa_w || '.';

			CALL pls_gravar_glosa_recurso_glosa(  '1705',nr_seq_conta_imp_p, null, rg01.nr_sequencia, null, ds_observacao_w, nm_usuario_p);
			
		end if;
			
    end if;
  end if;
end loop;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_consistir_rec_glosa_mat ( nr_seq_conta_imp_p bigint, nm_usuario_p text, ds_msg_abort_p INOUT text, ie_consid_negados_p pls_parametros_rec_glosa.ie_consid_negado%type default null) FROM PUBLIC;

