-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ptu_importar_servico ( ds_conteudo_p text, cd_estabelecimento_p bigint, nm_usuario_p text, nm_arquivo_p text) AS $body$
DECLARE

					
/*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[  ]  Objetos do dicion?rio [  ] Tasy (Delphi/Java) [  ] Portal [  ]  Relat?rios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de aten??o:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/ 

ds_registro_w			varchar(3);

--'701'
cd_unimed_destino_w		varchar(4);
cd_unimed_origem_w		varchar(10);
dt_inicial_pagto_w		timestamp;
dt_final_pagto_w		timestamp;
dt_geracao_w			timestamp;
nr_versao_transacao_w		smallint;
nr_seq_geracao_w		integer;

--'702'
nr_seq_servico_w		bigint;
nr_lote_w			integer;
nr_nota_w			ptu_nota_cobranca.nr_nota%type;
cd_unimed_w			varchar(4);
cd_usuario_plano_w		varchar(13);
nm_beneficiario_w		varchar(25);
dt_atendimento_w		varchar(14);
dt_atendimento_ww		timestamp;
cd_excecao_w			varchar(1);
ie_carater_atendimento_w	varchar(1);
cd_cid_w			varchar(6);
ie_paciente_w			varchar(1);
ie_tipo_saida_spdat_w		varchar(1);
ie_tipo_atendimento_w		varchar(2);
nr_guia_principal_w		bigint;

--'703'
nr_seq_hospitalar_w		bigint;
nr_seq_cobranca_w		bigint;
nr_lote_703_w			integer;
nr_nota_703_w			ptu_nota_hospitalar.nr_nota%type;
cd_unimed_hospital_w 		varchar(4);
cd_hospital_w			integer;
nm_hospital_w			varchar(25);
ie_tipo_acomodacao_w		varchar(2);
dt_internacao_w			timestamp;
dt_alta_w			timestamp;
tx_mult_amb_w			real;
ie_ind_acidente_w		varchar(1);
cd_motivo_saida_w		varchar(2);
cd_cgc_hospital_w		bigint;
ie_tipo_internacao_w		smallint;
qt_nasc_vivos_w			smallint;
qt_nasc_vivos_pre_w		smallint;
qt_nasc_mortos_w		smallint;
qt_obito_precoce_w		smallint;
qt_obito_tardio_w		smallint;
ie_int_gestacao_w		varchar(1);
ie_int_aborto_w			varchar(1);
ie_int_transtorno_w		varchar(1);
ie_int_puerperio_w		varchar(1);
ie_int_recem_nascido_w		varchar(1);
ie_int_neonatal_w		varchar(1);
ie_int_baixo_peso_w		varchar(1);
ie_int_parto_cesarea_w		varchar(1);
ie_int_parto_normal_w		varchar(1);
ie_faturamento_w		varchar(1);
cd_cid_obito_w			varchar(6);
nr_declara_vivo_1_w		varchar(15);
nr_declara_vivo_2_w		varchar(15);
nr_declara_vivo_3_w		varchar(15);
nr_declara_vivo_4_w		varchar(15);
nr_declara_vivo_5_w		varchar(15);
ie_obito_mulher_w		smallint;
nr_declara_obito_w		varchar(17);
cd_cid_obito_1_w		varchar(6);
cd_cid_obito_2_w		varchar(6);
cd_cid_obito_3_w		varchar(6);
cd_cid_obito_4_w		varchar(6);
cd_cid_obito_5_w		varchar(6);
nr_declara_obito_1_w		varchar(17);
nr_declara_obito_2_w		varchar(17);
nr_declara_obito_3_w		varchar(17);
nr_declara_obito_4_w		varchar(17);
nr_declara_obito_5_w		varchar(17);

--'704'
qt_regra_w			bigint := 0;
qt_material_w			bigint := 0;
ie_material_intercambio_w	varchar(2);
ie_origem_proc_valido_w		pls_parametros.ie_origem_proc_valido%type;
ie_origem_proced_padrao_w	procedimento.ie_origem_proced%type;
cd_mat_number_inter_w		numeric(30) := null;
nr_seq_regra_conv_w		bigint;
qt_proc_valido_w		bigint;
qt_proced_origem_w		bigint;
nr_seq_material_w		bigint;
ie_origem_proced_w		bigint;
nr_lote_704_w			integer;
nr_nota_704_w			ptu_nota_servico.nr_nota%type;
cd_unimed_prestador_w		varchar(3);
cd_prestador_w			integer;
nm_prestador_w			varchar(40);
ie_tipo_participacao_w		varchar(1);
dt_procedimento_w		timestamp;
ie_tipo_tabela_w		smallint;
cd_procedimento_w		integer;
cd_servico_w			integer;
qt_procedimento_w		integer;
vl_procedimento_w		double precision;
vl_custo_operacional_w		double precision;
vl_filme_w			double precision;
cd_porte_anestesico_w		varchar(1);
cd_unimed_pre_req_w		varchar(4);
cd_prestador_req_w		integer;
ie_via_acesso_w			smallint;
vl_adic_procedimento_w		double precision;
vl_adic_co_w			double precision;
vl_adic_filme_w			double precision;
cd_especialidade_w		smallint;
ie_tipo_prestador_w		varchar(2);
ie_rede_propria_w		varchar(1);
ie_tipo_pessoa_prestador_w	varchar(1);
nr_cgc_cpf_w			bigint;
ie_pacote_w			varchar(1);
cd_ato_w			varchar(1);
tx_procedimento_w		smallint;
nr_seq_nota_w			bigint;
ds_hora_procedimento_w		varchar(8);
cd_cnes_prest_w			varchar(7);
nm_profissional_prestador_w 	varchar(40);
sg_cons_prof_prest_w		varchar(12);
nr_cons_prof_prest_w		varchar(15);
sg_uf_cons_prest_w		varchar(2);
nr_cgc_cpf_req_w		varchar(14);
nm_prestador_requisitante_w	varchar(40);
sg_cons_prof_req_w		varchar(12);
nr_cons_prof_req_w		varchar(15);
sg_uf_cons_req_w		varchar(2);
ie_reembolso_w			varchar(1);
nr_autorizacao_w		bigint;

--'705'
nr_lote_705_w			integer;
nr_nota_705_w			ptu_nota_complemento.nr_nota%type;
ie_tipo_complemento_w		smallint;
ds_complemento_w		varchar(100);
cd_servico_mat_w		varchar(50);
ie_somente_codigo_w		pls_regra_conv_mat_interc.ie_somente_codigo%type;
nr_ver_tiss_w			ptu_nota_cobranca.nr_ver_tiss%type := null;
ie_pacote_intercambio_w 	pls_conversao_proc.ie_pacote_intercambio%type := 'N';
ie_priorizar_conv_pct_int_w	pls_parametros.ie_priorizar_conv_pct_int%type;


BEGIN
begin
	select 	coalesce(max(ie_material_intercambio),'S'),
		coalesce(max(ie_origem_proc_valido),'N'),
		coalesce(max(ie_priorizar_conv_pct_int), 'N')
	into STRICT	ie_material_intercambio_w,
		ie_origem_proc_valido_w,
		ie_priorizar_conv_pct_int_w
	from 	pls_parametros
	where 	cd_estabelecimento = cd_estabelecimento_p;
exception
when others then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(182468);
end;

ds_registro_w	:=	substr(ds_conteudo_p,9,3);
if (ds_registro_w	= '701') then
	select	CASE WHEN substr(ds_conteudo_p,12,4)=0 THEN ''  ELSE substr(ds_conteudo_p,12,4) END ,
		CASE WHEN substr(ds_conteudo_p,16,4)=0 THEN ''  ELSE substr(ds_conteudo_p,16,4) END ,
		CASE WHEN (substr(ds_conteudo_p,48,2))::numeric =0 THEN ''  ELSE (substr(ds_conteudo_p,48,2))::numeric  END ,
		(substr(ds_conteudo_p,28,4))::numeric
	into STRICT	cd_unimed_destino_w,
		cd_unimed_origem_w,
		nr_versao_transacao_w,
		nr_seq_geracao_w
	;
	
	dt_geracao_w		:= to_date(substr(ds_conteudo_p,26,2)||substr(ds_conteudo_p,24,2)||substr(ds_conteudo_p,20,4),'dd/mm/yyyy');
	
	dt_inicial_pagto_w	:= to_date(substr(ds_conteudo_p,38,2)||substr(ds_conteudo_p,36,2)||substr(ds_conteudo_p,32,4),'dd/mm/yyyy');

	dt_final_pagto_w	:= to_date(substr(ds_conteudo_p,46,2)||substr(ds_conteudo_p,44,2)||substr(ds_conteudo_p,40,4),'dd/mm/yyyy');

	
	insert into ptu_servico_pre_pagto(nr_sequencia,
		dt_atualizacao, 
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec, 
		cd_estabelecimento,
		cd_unimed_destino, 
		cd_unimed_origem, 
		dt_geracao,
		nr_versao_transacao, 
		dt_inicio_pagto, 
		dt_fim_pagto,
		ie_envio_recebimento, 
		nr_seq_geracao, 
		nm_usuario_importacao,
		dt_importacao_arquivo, 
		nm_arquivo,
		ie_status)
	values (nextval('ptu_servico_pre_pagto_seq'), 
		clock_timestamp(), 
		nm_usuario_p,
		clock_timestamp(), 
		nm_usuario_p, 
		'1',
		cd_unimed_destino_w, 
		cd_unimed_origem_w, 
		dt_geracao_w,
		nr_versao_transacao_w, 
		dt_inicial_pagto_w, 
		dt_final_pagto_w,
		'R',
		nr_seq_geracao_w,
		nm_usuario_p, 
		clock_timestamp(), 
		nm_arquivo_p,
		'R');
end if;

select	max(nr_sequencia)
into STRICT	nr_seq_servico_w
from	ptu_servico_pre_pagto
where	nm_usuario	= nm_usuario_p;

if (ds_registro_w	= '702') then
	select	CASE WHEN (substr(ds_conteudo_p,12,8))::numeric =0 THEN ''  ELSE (substr(ds_conteudo_p,12,8))::numeric  END ,
		CASE WHEN substr(ds_conteudo_p,32,4)=0 THEN ''  ELSE substr(ds_conteudo_p,32,4) END ,
		CASE WHEN (substr(ds_conteudo_p,126,11))::numeric =0 THEN ''  ELSE (substr(ds_conteudo_p,126,11))::numeric  END
	into STRICT	nr_lote_w,
		cd_unimed_w,
		nr_guia_principal_w
	;
	
	nr_nota_w		:= trim(both substr(ds_conteudo_p,20,11));
	cd_excecao_w		:= trim(both substr(ds_conteudo_p,98,1));
	cd_usuario_plano_w	:= trim(both substr(ds_conteudo_p,39,13));
	nm_beneficiario_w	:= trim(both substr(ds_conteudo_p,52,25));
	dt_atendimento_ww	:= to_date(substr(ds_conteudo_p,85,2)||substr(ds_conteudo_p,81,4)||substr(ds_conteudo_p,77,4)|| ' '|| substr(ds_conteudo_p,87,8), 'dd/mm/yyyy hh24:mi:ss');
	ie_carater_atendimento_w := trim(both substr(ds_conteudo_p,99,1));
	cd_cid_w		:= trim(both substr(ds_conteudo_p,102,6));
	ie_paciente_w		:= trim(both substr(ds_conteudo_p,122,1));
	ie_tipo_saida_spdat_w	:= trim(both substr(ds_conteudo_p,123,1));
	ie_tipo_atendimento_w	:= trim(both substr(ds_conteudo_p,124,2));
	
	if (substr(ie_tipo_atendimento_w,1,1) = '0') then
		ie_tipo_atendimento_w	:= substr(ie_tipo_atendimento_w,2,1);
	end if;
	
	insert into ptu_nota_cobranca(nr_sequencia,
		nr_seq_fatura,
		nr_lote,
		nr_nota,
		cd_unimed, 
		cd_usuario_plano,
		dt_atendimento, 
		cd_excecao,
		ie_carater_atendimento,
		ie_paciente, 
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		ie_tipo_saida_spdat,
		ie_tipo_atendimento, 
		nm_beneficiario, 
		cd_cid,
		nr_guia_principal, 
		nr_seq_serv_pre_pagto)
	values (nextval('ptu_nota_cobranca_seq'), 
		null,
		nr_lote_w,
		nr_nota_w, 
		cd_unimed_w,
		cd_usuario_plano_w,
		dt_atendimento_ww, 
		cd_excecao_w, 
		ie_carater_atendimento_w,
		ie_paciente_w, 
		clock_timestamp(), 
		nm_usuario_p,
		clock_timestamp(), 
		nm_usuario_p, 
		ie_tipo_saida_spdat_w,
		ie_tipo_atendimento_w, 
		nm_beneficiario_w, 
		cd_cid_w,
		nr_guia_principal_w, 
		nr_seq_servico_w);
end if;

select	max(nr_sequencia)
into STRICT	nr_seq_cobranca_w
from	ptu_nota_cobranca
where	nm_usuario	= nm_usuario_p;

if (ds_registro_w = '703') then
	select	CASE WHEN (substr(ds_conteudo_p,12,8))::numeric =0 THEN '0'  ELSE (substr(ds_conteudo_p,12,8))::numeric  END ,
		CASE WHEN substr(ds_conteudo_p,31,4)=0 THEN '0'  ELSE substr(ds_conteudo_p,31,4) END ,
		CASE WHEN (substr(ds_conteudo_p,35,8))::numeric =0 THEN '0'  ELSE (substr(ds_conteudo_p,35,8))::numeric  END ,
		CASE WHEN (substr(ds_conteudo_p,133,1))::numeric =0 THEN '0'  ELSE (substr(ds_conteudo_p,133,1))::numeric  END ,
		CASE WHEN (substr(ds_conteudo_p,136,2))::numeric =0 THEN '0'  ELSE (substr(ds_conteudo_p,136,2))::numeric  END ,
		CASE WHEN (substr(ds_conteudo_p,138,2))::numeric =0 THEN '0'  ELSE (substr(ds_conteudo_p,138,2))::numeric  END ,
		CASE WHEN (substr(ds_conteudo_p,140,2))::numeric =0 THEN '0'  ELSE (substr(ds_conteudo_p,140,2))::numeric  END ,
		CASE WHEN (substr(ds_conteudo_p,142,1))::numeric =0 THEN '0'  ELSE (substr(ds_conteudo_p,142,1))::numeric  END ,
		CASE WHEN (substr(ds_conteudo_p,143,1))::numeric =0 THEN '0'  ELSE (substr(ds_conteudo_p,143,1))::numeric  END ,
		CASE WHEN (substr(ds_conteudo_p,153,1))::numeric =0 THEN '0'  ELSE (substr(ds_conteudo_p,153,1))::numeric  END ,
		CASE WHEN (substr(ds_conteudo_p,242,1))::numeric =0 THEN '0'  ELSE (substr(ds_conteudo_p,242,1))::numeric  END
	into STRICT	nr_lote_703_w,
		cd_unimed_hospital_w,
		cd_hospital_w,
		ie_tipo_internacao_w,
		qt_nasc_vivos_w,
		qt_nasc_mortos_w,
		qt_nasc_vivos_pre_w,
		qt_obito_precoce_w,
		qt_obito_tardio_w,
		ie_faturamento_w,
		ie_obito_mulher_w
	;
	
	nr_nota_703_w		:= trim(both substr(ds_conteudo_p,20,11));
	nm_hospital_w		:= trim(both substr(ds_conteudo_p,43,25));
	tx_mult_amb_w		:= trunc(substr(ds_conteudo_p,112,2)||','||substr(ds_conteudo_p,114,2));	
	ie_tipo_acomodacao_w	:= trim(both substr(ds_conteudo_p,68,2));
	dt_internacao_w		:= to_date(substr(ds_conteudo_p,78,2)||substr(ds_conteudo_p,74,4)||substr(ds_conteudo_p,70,4)||substr(ds_conteudo_p,80,2)||substr(ds_conteudo_p,82,4)||substr(ds_conteudo_p,86,2),'dd/mm/yyyy hh24:mi:ss');
	dt_alta_w		:= to_date(substr(ds_conteudo_p,99,2)||substr(ds_conteudo_p,95,4)||substr(ds_conteudo_p,91,4)||substr(ds_conteudo_p,101,2)||substr(ds_conteudo_p,103,4)||substr(ds_conteudo_p,107,2),'dd/mm/yyyy hh24:mi:ss');
	ie_ind_acidente_w	:= trim(both substr(ds_conteudo_p,116,1));
	cd_motivo_saida_w	:= trim(both substr(ds_conteudo_p,117,2));
	cd_cgc_hospital_w	:= trim(both substr(ds_conteudo_p,119,14));
	ie_int_gestacao_w	:= trim(both substr(ds_conteudo_p,144,1));
	ie_int_aborto_w		:= trim(both substr(ds_conteudo_p,145,1));
	ie_int_transtorno_w	:= trim(both substr(ds_conteudo_p,146,1));
	ie_int_puerperio_w	:= trim(both substr(ds_conteudo_p,147,1));
	ie_int_recem_nascido_w	:= trim(both substr(ds_conteudo_p,148,1));
	ie_int_neonatal_w	:= trim(both substr(ds_conteudo_p,149,1));
	ie_int_baixo_peso_w	:= trim(both substr(ds_conteudo_p,150,1));
	ie_int_parto_cesarea_w	:= trim(both substr(ds_conteudo_p,151,1));
	ie_int_parto_normal_w	:= trim(both substr(ds_conteudo_p,152,1));
	cd_cid_obito_w		:= trim(both substr(ds_conteudo_p,154,6));
	nr_declara_vivo_1_w	:= trim(both substr(ds_conteudo_p,167,15));
	nr_declara_vivo_2_w	:= trim(both substr(ds_conteudo_p,182,15));
	nr_declara_vivo_3_w	:= trim(both substr(ds_conteudo_p,197,15));
	nr_declara_vivo_4_w	:= trim(both substr(ds_conteudo_p,212,15));
	nr_declara_vivo_5_w	:= trim(both substr(ds_conteudo_p,227,15));
	nr_declara_obito_w	:= trim(both substr(ds_conteudo_p,243,17));
	cd_cid_obito_1_w	:= trim(both substr(ds_conteudo_p,260,6));
	cd_cid_obito_2_w	:= trim(both substr(ds_conteudo_p,266,6));
	cd_cid_obito_3_w	:= trim(both substr(ds_conteudo_p,272,6));
	cd_cid_obito_4_w	:= trim(both substr(ds_conteudo_p,278,6));
	cd_cid_obito_5_w	:= trim(both substr(ds_conteudo_p,284,6));
	nr_declara_obito_1_w	:= trim(both substr(ds_conteudo_p,290,17));
	nr_declara_obito_2_w	:= trim(both substr(ds_conteudo_p,307,17));
	nr_declara_obito_3_w	:= trim(both substr(ds_conteudo_p,324,17));
	nr_declara_obito_4_w	:= trim(both substr(ds_conteudo_p,341,17));
	nr_declara_obito_5_w	:= trim(both substr(ds_conteudo_p,358,17));
	
	insert into ptu_nota_hospitalar(nr_sequencia,
		nr_seq_nota_cobr,
		nr_lote,
		nr_nota, 
		cd_unimed_hospital, 
		cd_hospital,
		nm_hospital, 
		ie_tipo_acomodacao, 
		dt_internacao,
		dt_alta, 
		dt_atualizacao, 
		nm_usuario,
		dt_atualizacao_nrec, 
		nm_usuario_nrec,
		tx_mult_amb,
		cd_cgc_hospital, 
		ie_tipo_internacao,
		ie_faturamento,
		ie_ind_acidente, 
		cd_motivo_saida, 
		qt_nasc_vivos,
		qt_nasc_mortos, 
		qt_nasc_vivos_pre, 
		qt_obito_precoce,
		qt_obito_tardio, 
		ie_int_gestacao, 
		ie_int_aborto,
		ie_int_transtorno, 
		ie_int_puerperio, 
		ie_int_recem_nascido,
		ie_int_neonatal,
		ie_int_baixo_peso, 
		ie_int_parto_cesarea,
		ie_int_parto_normal, 
		cd_cid_obito, 
		ie_obito_mulher,
		nr_declara_obito)
	values (nextval('ptu_nota_hospitalar_seq'), 
		nr_seq_cobranca_w, 
		nr_lote_703_w,
		nr_nota_703_w, 
		cd_unimed_hospital_w, 
		cd_hospital_w,
		nm_hospital_w, 
		ie_tipo_acomodacao_w, 
		dt_internacao_w,
		dt_alta_w, 
		clock_timestamp(), 
		nm_usuario_p,
		clock_timestamp(), 
		nm_usuario_p,
		tx_mult_amb_w,
		cd_cgc_hospital_w,
		ie_tipo_internacao_w,
		ie_faturamento_w,
		ie_ind_acidente_w,
		cd_motivo_saida_w,
		qt_nasc_vivos_w,
		qt_nasc_mortos_w, 
		qt_nasc_vivos_pre_w, 
		qt_obito_precoce_w,
		qt_obito_tardio_w, 
		ie_int_gestacao_w, 
		ie_int_aborto_w,
		ie_int_transtorno_w, 
		ie_int_puerperio_w, 
		ie_int_recem_nascido_w,
		ie_int_neonatal_w, 
		ie_int_baixo_peso_w, 
		ie_int_parto_cesarea_w,
		ie_int_parto_normal_w, 
		cd_cid_obito_w, 
		ie_obito_mulher_w,
		nr_declara_obito_w);
	
	select	max(nr_sequencia)
	into STRICT	nr_seq_hospitalar_w
	from	ptu_nota_hospitalar
	where	nm_usuario	= nm_usuario_p;
	
	insert into ptu_nota_hosp_compl(nr_sequencia,
		nr_seq_nota_hosp,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_declara_vivo,
		cd_cid_obito,
		nr_declara_obito)
	values (nextval('ptu_nota_hosp_compl_seq'),
		nr_seq_hospitalar_w,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		nr_declara_vivo_1_w,
		cd_cid_obito_1_w,
		nr_declara_obito_1_w);
	
	insert into ptu_nota_hosp_compl(nr_sequencia,
		nr_seq_nota_hosp,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_declara_vivo,
		cd_cid_obito,
		nr_declara_obito)
	values (nextval('ptu_nota_hosp_compl_seq'),
		nr_seq_hospitalar_w ,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		nr_declara_vivo_2_w,
		cd_cid_obito_2_w,
		nr_declara_obito_2_w);
	
	insert into ptu_nota_hosp_compl(nr_sequencia,
		nr_seq_nota_hosp,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_declara_vivo,
		cd_cid_obito,
		nr_declara_obito)
	values (nextval('ptu_nota_hosp_compl_seq'),
		nr_seq_hospitalar_w ,
		clock_timestamp(),
		nm_usuario_p, 
		clock_timestamp(),
		nm_usuario_p,
		nr_declara_vivo_3_w,
		cd_cid_obito_3_w,
		nr_declara_obito_3_w);
	
	insert into ptu_nota_hosp_compl(nr_sequencia,
		nr_seq_nota_hosp,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_declara_vivo,
		cd_cid_obito,
		nr_declara_obito)
	values (nextval('ptu_nota_hosp_compl_seq'),
		nr_seq_hospitalar_w ,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		nr_declara_vivo_4_w,
		cd_cid_obito_4_w,
		nr_declara_obito_4_w);
	
	insert into ptu_nota_hosp_compl(nr_sequencia,
		nr_seq_nota_hosp,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_declara_vivo,
		cd_cid_obito,
		nr_declara_obito)
	values (nextval('ptu_nota_hosp_compl_seq'),
		nr_seq_hospitalar_w ,
		clock_timestamp(),
		nm_usuario_p, 
		clock_timestamp(), 
		nm_usuario_p,
		nr_declara_vivo_5_w, 
		cd_cid_obito_5_w, 
		nr_declara_obito_5_w);
end if;	

if (ds_registro_w = '704') then
	select	CASE WHEN (substr(ds_conteudo_p,12,8))::numeric =0 THEN ''  ELSE (substr(ds_conteudo_p,12,8))::numeric  END ,
		CASE WHEN substr(ds_conteudo_p,32,3)=0 THEN ''  ELSE substr(ds_conteudo_p,32,3) END ,
		CASE WHEN (substr(ds_conteudo_p,35,8))::numeric =0 THEN ''  ELSE (substr(ds_conteudo_p,35,8))::numeric  END ,
		CASE WHEN (substr(ds_conteudo_p,93,8))::numeric =0 THEN ''  ELSE (substr(ds_conteudo_p,93,8))::numeric  END ,
		CASE WHEN (substr(ds_conteudo_p,101,8))::numeric =0 THEN ''  ELSE (substr(ds_conteudo_p,101,8))::numeric  END ,
		CASE WHEN (substr(ds_conteudo_p,109,14))::numeric =0 THEN '0'  ELSE (substr(ds_conteudo_p,109,12)||','|| substr(ds_conteudo_p,121,2))::numeric  END ,
		CASE WHEN (substr(ds_conteudo_p,123,14))::numeric =0 THEN '0'  ELSE (substr(ds_conteudo_p,123,12)||','|| substr(ds_conteudo_p,135,2))::numeric  END ,
		CASE WHEN (substr(ds_conteudo_p,137,14))::numeric =0 THEN '0'  ELSE (substr(ds_conteudo_p,137,12)||','|| substr(ds_conteudo_p,149,2))::numeric  END ,
		CASE WHEN substr(ds_conteudo_p,166,3)=0 THEN ''  ELSE substr(ds_conteudo_p,166,3) END ,
		CASE WHEN (substr(ds_conteudo_p,169,8))::numeric =0 THEN ''  ELSE (substr(ds_conteudo_p,169,8))::numeric  END ,
		CASE WHEN (substr(ds_conteudo_p,177,2))::numeric =0 THEN ''  ELSE (substr(ds_conteudo_p,177,2))::numeric  END ,
		CASE WHEN (substr(ds_conteudo_p,221,2))::numeric =0 THEN ''  ELSE (substr(ds_conteudo_p,221,2))::numeric  END ,
		CASE WHEN substr(ds_conteudo_p,231,2)=0 THEN ''  ELSE substr(ds_conteudo_p,231,2) END ,
		CASE WHEN (substr(ds_conteudo_p,235,14))::numeric =0 THEN ''  ELSE (substr(ds_conteudo_p,235,14))::numeric  END ,
		CASE WHEN (substr(ds_conteudo_p,252,2))::numeric =0 THEN ''  ELSE (substr(ds_conteudo_p,252,2))::numeric  END ,
		CASE WHEN (substr(ds_conteudo_p,255,11))::numeric =0 THEN ''  ELSE (substr(ds_conteudo_p,255,11))::numeric  END
	into STRICT	nr_lote_704_w,
		cd_unimed_prestador_w,
		cd_prestador_w,
		cd_servico_w,
		qt_procedimento_w,
		vl_procedimento_w,
		vl_custo_operacional_w,
		vl_filme_w,
		cd_unimed_pre_req_w,
		cd_prestador_req_w,
		ie_via_acesso_w,
		cd_especialidade_w,
		ie_tipo_prestador_w,
		nr_cgc_cpf_w,
		tx_procedimento_w,
		nr_seq_nota_w
	;
	
	nr_nota_704_w			:= trim(both substr(ds_conteudo_p,20,11));
	ie_tipo_tabela_w		:= trim(both substr(ds_conteudo_p,92,1));
	nm_prestador_w			:= trim(both substr(ds_conteudo_p,43,40));
	ie_tipo_participacao_w		:= trim(both substr(ds_conteudo_p,83,1));
	dt_procedimento_w		:= to_date(substr(ds_conteudo_p,90,2)||substr(ds_conteudo_p,88,2)||substr(ds_conteudo_p,84,4),'dd/mm/yyyy');
	cd_porte_anestesico_w		:= trim(both substr(ds_conteudo_p,151,1));
	ie_rede_propria_w		:= trim(both substr(ds_conteudo_p,233,1));
	ie_tipo_pessoa_prestador_w	:= trim(both substr(ds_conteudo_p,234,1));
	ie_pacote_w			:= trim(both substr(ds_conteudo_p,241,1));
	cd_ato_w			:= trim(both substr(ds_conteudo_p,251,1));
	ds_hora_procedimento_w		:= trim(both substr(ds_conteudo_p,266,8));
	cd_cnes_prest_w			:= trim(both substr(ds_conteudo_p,274,7));
	nm_profissional_prestador_w 	:= trim(both substr(ds_conteudo_p,395,40));
	sg_cons_prof_prest_w		:= trim(both substr(ds_conteudo_p,281,12));
	nr_cons_prof_prest_w		:= trim(both substr(ds_conteudo_p,293,15));
	sg_uf_cons_prest_w		:= trim(both substr(ds_conteudo_p,308,2));
	nr_cgc_cpf_req_w		:= trim(both substr(ds_conteudo_p,312,14));
	nm_prestador_requisitante_w	:= trim(both substr(ds_conteudo_p,326,40));
	sg_cons_prof_req_w		:= trim(both substr(ds_conteudo_p,366,12));
	nr_cons_prof_req_w		:= trim(both substr(ds_conteudo_p,378,15));
	sg_uf_cons_req_w		:= trim(both substr(ds_conteudo_p,393,2));
	ie_reembolso_w			:= trim(both substr(ds_conteudo_p,435,1));
	nr_seq_material_w		:= null;
	cd_procedimento_w		:= null;
	ie_origem_proced_w		:= null;
	if ( ie_tipo_tabela_w= 4) then
		ie_pacote_intercambio_w := 'S';
	else
		ie_pacote_intercambio_w := 'N';
	end if;
	
	if (ie_tipo_tabela_w in (2,3)) then				
		if (coalesce(ie_material_intercambio_w,'S') = 'S') then		
			nr_seq_material_w := cd_servico_w;
		elsif (coalesce(ie_material_intercambio_w,'S') = 'C') then
			select	max(coalesce(nr_sequencia,0))
			into STRICT	nr_seq_material_w
			from	pls_material
			where	cd_material_ops = cd_servico_w;
		elsif (coalesce(ie_material_intercambio_w,'S') = 'CI') then			
			nr_seq_material_w := null;
			
			SELECT * FROM pls_obter_mat_a900_vigente( nr_seq_material_w, clock_timestamp(), cd_servico_w, null) INTO STRICT  nr_seq_material_w, cd_servico_w;
			
			if (coalesce(nr_seq_material_w::text, '') = '') then
				nr_seq_material_w := 0;
			end if;
		end if;
		
		select	count(1)
		into STRICT	qt_regra_w
		from	pls_conversao_proc
		where	(cd_material_imp IS NOT NULL AND cd_material_imp::text <> '')
		and	ie_situacao = 'A'
		and	ie_ptu = 'S';
		
		if (qt_regra_w > 0) then
			cd_mat_number_inter_w := somente_numero(cd_servico_w);
		
			SELECT * FROM pls_obter_proced_conversao(	null, null, null, cd_estabelecimento_p, 4, null, 3, 'R', null, null, null, cd_mat_number_inter_w, null, cd_procedimento_w, ie_origem_proced_w, nr_seq_regra_conv_w, ie_somente_codigo_w, clock_timestamp(), null, null, null, 'null', ie_priorizar_conv_pct_int_w) INTO STRICT cd_procedimento_w, ie_origem_proced_w, nr_seq_regra_conv_w, ie_somente_codigo_w;
		end if;
		
		if ((coalesce(nr_seq_material_w,0))<> 0) then
			select	count(nr_sequencia)
			into STRICT	qt_material_w
			from	pls_material
			where	nr_sequencia	= nr_seq_material_w;
		end if;
		
		if (coalesce(qt_material_w,0) = 0) then
			SELECT * FROM ptu_obter_material_conversao(	cd_servico_w, ie_tipo_tabela_w, dt_procedimento_w, 'R', '7', null, null, nr_seq_material_w, cd_servico_mat_w, ie_somente_codigo_w) INTO STRICT nr_seq_material_w, cd_servico_mat_w, ie_somente_codigo_w;
		end if;		

		if (coalesce(nr_seq_material_w,0) = 0) then
			nr_seq_material_w	:= null;
		end if;
		
		if (coalesce(nr_seq_material_w::text, '') = '') then
			cd_mat_number_inter_w := somente_numero(cd_servico_w);
		
			select	max(x.nr_sequencia)
			into STRICT	nr_seq_material_w
			from	pls_material x,
				pls_material_unimed z
			where	z.nr_sequencia	= x.nr_seq_material_unimed
			and	z.cd_material	= cd_mat_number_inter_w;
		end if;
		
		if (coalesce(nr_seq_material_w::text, '') = '') then
			select	max(x.nr_sequencia)
			into STRICT	nr_seq_material_w
			from	pls_material x,
				pls_mat_unimed_fed_sc z
			where	z.nr_sequencia	= x.nr_seq_mat_uni_fed_sc
			and	z.cd_material	= cd_mat_number_inter_w;
		end if;	
							
		if (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') then
			nr_seq_material_w := null;
		end if;
	else
		/*A origem do procedimento ? buscado por regra existente no cadastro de regras / Procedimentos/ regra origem.*/

		SELECT * FROM pls_obter_proced_conversao(	cd_servico_w, null, null, cd_estabelecimento_p, 4, null, 3, 'R', null, null, null, null, null, cd_procedimento_w, ie_origem_proced_w, nr_seq_regra_conv_w, ie_somente_codigo_w, clock_timestamp(), null, null, null, ie_pacote_intercambio_w, ie_priorizar_conv_pct_int_w) INTO STRICT cd_procedimento_w, ie_origem_proced_w, nr_seq_regra_conv_w, ie_somente_codigo_w;
		
		-- Obter a origem padrao para os itens conforme a regra.
		ie_origem_proced_padrao_w := pls_obter_origem_proced(cd_estabelecimento_p, null, 'R', dt_procedimento_w, null);
		
		if (coalesce(ie_origem_proced_w::text, '') = '') then
			--jjung OS 483853 - 02/10/2012 - adicionado restricao para data de vigencia das regras cadastradas.
			ie_origem_proced_w := ie_origem_proced_padrao_w;
		end if;
		--Criado tratamento para atender as OS 575917 que solicita que seja buscado a ?ltima origem valida e a OS 644869 onde indica que deve ser respeitada a origem padr?o do sistema	
		if (ie_origem_proc_valido_w	= 'S') then
			select	count(1)
			into STRICT	qt_proced_origem_w
			from	procedimento
			where	cd_procedimento = cd_procedimento_w
			and	ie_origem_proced = ie_origem_proced_w
			and	ie_situacao = 'A';
			
			/*Se este procedimento n?o existir na origem padr?o ? selecionado o max origem proced*/

			if (qt_proced_origem_w = 0) then	
				-- Buscar a origem do procedimento ativo
				select	max(ie_origem_proced)
				into STRICT	ie_origem_proced_w
				from	procedimento
				where	cd_procedimento = cd_procedimento_w
				and	ie_situacao = 'A';	
				
				-- Se n?o encontrar a origem em procedimentos ativos, busca em procedimentos que n?o estiverem ativos.
				if (coalesce(ie_origem_proced_w::text, '') = '') then
					select	max(ie_origem_proced)
					into STRICT	ie_origem_proced_w
					from	procedimento
					where	cd_procedimento = cd_procedimento_w;	
				end if;
			end if;
		end if;
		
		select	count(1)
		into STRICT	qt_proc_valido_w
		from	procedimento
		where	cd_procedimento	= cd_procedimento_w
		and	ie_origem_proced = ie_origem_proced_w;
		
		-- Tem que deixar o item como N?O ENCONTRADO
		if (qt_proc_valido_w = 0) then
			cd_procedimento_w := null;
			ie_origem_proced_w := null;
		end if;
	end if;
	
	insert into ptu_nota_servico(nr_sequencia,
		nr_seq_nota_cobr,
		nr_lote,
		nr_nota, 
		cd_unimed_prestador, 
		cd_prestador,
		nm_prestador, 
		ie_tipo_participacao, 
		dt_procedimento,
		ie_tipo_tabela, 
		dt_atualizacao, 
		nm_usuario,
		dt_atualizacao_nrec, 
		nm_usuario_nrec, 
		cd_servico,
		cd_procedimento,
		ie_origem_proced,
		nr_seq_material,
		qt_procedimento, 
		ie_tipo_prestador,
		ie_rede_propria, 
		ie_tipo_pessoa_prestador, 
		vl_procedimento,
		vl_custo_operacional, 
		vl_filme, 
		cd_porte_anestesico,
		cd_unimed_pre_req, 
		cd_prestador_req,
		ie_via_acesso,
		cd_especialidade,
		nr_seq_nota,
		ds_hora_procedimento,
		cd_cnes_prest,
		nm_profissional_prestador,
		sg_cons_prof_prest,
		nr_cons_prof_prest,
		sg_uf_cons_prest,
		nr_cgc_cpf_req,
		nm_prestador_requisitante,
		sg_cons_prof_req,
		nr_cons_prof_req,
		sg_uf_cons_req,
		ie_reembolso,
		nr_autorizacao,
		nr_cgc_cpf,
		ie_pacote,
		cd_ato,
		tx_procedimento,
		vl_adic_procedimento,
		vl_adic_filme,
		vl_adic_co)
	values (nextval('ptu_nota_servico_seq'),
		nr_seq_cobranca_w, 
		nr_lote_704_w,
		nr_nota_704_w,
		cd_unimed_prestador_w,
		cd_prestador_w,
		nm_prestador_w,
		ie_tipo_participacao_w,
		dt_procedimento_w,
		ie_tipo_tabela_w,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		cd_servico_w,
		cd_procedimento_w,
		ie_origem_proced_w,
		nr_seq_material_w,
		qt_procedimento_w,
		ie_tipo_prestador_w,
		ie_rede_propria_w,
		ie_tipo_pessoa_prestador_w,
		vl_procedimento_w,
		vl_custo_operacional_w,
		vl_filme_w,
		cd_porte_anestesico_w,
		cd_unimed_pre_req_w,
		cd_prestador_req_w,
		ie_via_acesso_w,
		cd_especialidade_w,
		nr_seq_nota_w,
		ds_hora_procedimento_w,
		cd_cnes_prest_w,
		nm_profissional_prestador_w,
		sg_cons_prof_prest_w,
		nr_cons_prof_prest_w,
		sg_uf_cons_prest_w,
		nr_cgc_cpf_req_w,
		nm_prestador_requisitante_w,
		sg_cons_prof_req_w,
		nr_cons_prof_req_w,
		sg_uf_cons_req_w,
		ie_reembolso_w,
		nr_autorizacao_w,
		nr_cgc_cpf_w,
		ie_pacote_w,
		cd_ato_w,
		tx_procedimento_w,
		0,
		0,
		0);
end if;

if (ds_registro_w = '705') then
	select	CASE WHEN (substr(ds_conteudo_p,12,8))::numeric =0 THEN ''  ELSE (substr(ds_conteudo_p,12,8))::numeric  END
	into STRICT	nr_lote_705_w
	;
	
	nr_nota_705_w		:= trim(both substr(ds_conteudo_p,20,11));
	ie_tipo_complemento_w	:= (substr(ds_conteudo_p,31,1))::numeric;
	ds_complemento_w	:= trim(both substr(ds_conteudo_p,32,100));
	
	insert into ptu_nota_complemento(nr_sequencia,
		nr_seq_nota_cobr,
		nr_lote,
		nr_nota,
		ie_tipo_complemento,
		ds_complemento,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec)
	values (nextval('ptu_nota_complemento_seq'),
		nr_seq_cobranca_w,
		nr_lote_705_w,
		nr_nota_705_w,
		ie_tipo_complemento_w,
		ds_complemento_w,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p);
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_importar_servico ( ds_conteudo_p text, cd_estabelecimento_p bigint, nm_usuario_p text, nm_arquivo_p text) FROM PUBLIC;

