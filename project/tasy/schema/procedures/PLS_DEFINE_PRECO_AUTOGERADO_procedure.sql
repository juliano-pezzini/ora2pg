-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_define_preco_autogerado ( cd_procedimento_p bigint, ie_origem_proced_p bigint, dt_referencia_p timestamp, cd_estabelecimento_p bigint, nr_seq_segurado_p bigint, ie_internado_p text, ie_tipo_guia_p text, nr_seq_prestador_exec_p bigint, ie_tipo_segurado_p text, nr_seq_regra_p INOUT bigint, vl_autogerado_p INOUT bigint, cd_moeda_p INOUT bigint) AS $body$
DECLARE

 
/* 
	Não é mais utilizada 
	 
*/
 
ie_origem_proced_w		bigint;
nr_seq_regra_w			bigint;
nr_seq_regra_ww			bigint;
cd_grupo_proc_w			bigint;
cd_especialidade_w		bigint;
cd_area_procedimento_w		bigint;
pr_valor_total_w		double precision;
ie_tipo_segurado_w		varchar(10);
ie_preco_w			varchar(2);
qt_procedimento_w		double precision;
qt_procedimento_producao_w	double precision;
cd_moeda_w			bigint;
vl_autogerado_w			double precision;
cd_prestador_exec_w		varchar(30);
nr_seq_classificacao_w		bigint;
nr_seq_grupo_servico_w		bigint;
ie_grupo_servico_w		varchar(1)	:= 'S';
nr_seq_tipo_prestador_w		bigint;
nr_seq_grupo_rec_w		bigint;
dt_referencia_w			timestamp;
dt_referencia_final_w		timestamp;
ie_primeira_vez_w		varchar(1)	:= 'S';
qt_autogerado_w			bigint;
cd_moeda_autogerado_w		smallint;
nr_seq_preco_auto_w		pls_preco_autogerado.nr_sequencia%type;
cd_moeda_regra_w		moeda.cd_moeda%type;

C01 CURSOR FOR 
	SELECT	nr_sequencia, 
		a.nr_seq_grupo_servico 
	from	pls_regra_preco_autogerado	a 
	where	ie_situacao		= 'A' 
	and	cd_estabelecimento	= cd_estabelecimento_p 
	and	((coalesce(a.cd_procedimento::text, '') = '') or ( a.cd_procedimento = cd_procedimento_p)) 
	and	((coalesce(a.ie_origem_proced::text, '') = '') or ( a.ie_origem_proced = ie_origem_proced_w)) 
	and	((coalesce(a.cd_grupo_proc::text, '') = '') or ( a.cd_grupo_proc = cd_grupo_proc_w)) 
	and	((coalesce(a.cd_especialidade::text, '') = '') or ( a.cd_especialidade = cd_especialidade_w)) 
	and	((coalesce(a.cd_area_procedimento::text, '') = '') or (a.cd_area_procedimento = cd_area_procedimento_w)) 
	and	((coalesce(a.nr_seq_prestador_exec::text, '') = '') or (a.nr_seq_prestador_exec = nr_seq_prestador_exec_p)) 
	and	((coalesce(a.cd_prestador_exec::text, '') = '') or (a.cd_prestador_exec = cd_prestador_exec_w)) 
	and	((coalesce(a.ie_preco::text, '') = '') or (a.ie_preco = ie_preco_w)) 
	and	((coalesce(a.ie_tipo_segurado::text, '') = '') or (a.ie_tipo_segurado		= ie_tipo_segurado_w)) 
	and	((a.ie_tipo_guia 	= ie_tipo_guia_p) or (coalesce(a.ie_tipo_guia::text, '') = '')) 
	and	((a.ie_internado	= 'N' ) or (a.ie_internado	= ie_internado_p) or (coalesce(a.ie_internado::text, '') = '')) 
	and	((coalesce(nr_seq_classificacao::text, '') = '') or (a.nr_seq_classificacao = coalesce(nr_seq_classificacao_w,0))) 
	and	((coalesce(a.nr_seq_tipo_prestador::text, '') = '') or (a.nr_seq_tipo_prestador = coalesce(nr_seq_tipo_prestador_w,''))) 
	and	((coalesce(a.nr_seq_grupo_rec::text, '') = '') or (a.nr_seq_grupo_rec = coalesce(nr_seq_grupo_rec_w,0))) 
	order by coalesce(nr_seq_grupo_rec,0), 
		coalesce(ie_tipo_guia,0), 
		coalesce(a.nr_seq_tipo_prestador,0), 
		coalesce(a.nr_seq_classificacao,0), 
		coalesce(a.cd_procedimento,0), 
		coalesce(a.cd_grupo_proc,0), 
		coalesce(a.cd_especialidade,0), 
		coalesce(a.cd_area_procedimento,0);
		
C02 CURSOR FOR 
	SELECT	cd_moeda, 
		nr_sequencia 
	from	pls_preco_autogerado a 
	where	a.ie_situacao = 'A' 
	and	a.nr_seq_regra	= nr_seq_regra_w 
	and	pr_valor_total_w between coalesce(pr_inicio,0) and coalesce(pr_fim,100) 
	and	dt_referencia_p	between a.dt_inicio_vigencia and coalesce(a.dt_fim_vigencia,dt_referencia_p) 
	order by a.dt_inicio_vigencia;
		

BEGIN 
ie_primeira_vez_w	:= 'S';
 
 
/*Obter estrutura do procedimento*/
 
SELECT * FROM pls_obter_estrut_proc(cd_procedimento_p, ie_origem_proced_p, cd_area_procedimento_w, cd_especialidade_w, cd_grupo_proc_w, ie_origem_proced_w) INTO STRICT cd_area_procedimento_w, cd_especialidade_w, cd_grupo_proc_w, ie_origem_proced_w;
/*Obter dados do beneficiário*/
 
ie_tipo_segurado_w := ie_tipo_segurado_p;
 
 
/* William - OS 397802 - Performance, utilizado a variavel dt_referencia_w */
 
dt_referencia_w := trunc(add_months(dt_referencia_p,-1),'month');
dt_referencia_final_w	:= fim_dia(last_day(dt_referencia_w));
 
begin 
 
select	cd_prestador, 
	nr_seq_classificacao, 
	nr_seq_tipo_prestador 
into STRICT	cd_prestador_exec_w, 
	nr_seq_classificacao_w, 
	nr_seq_tipo_prestador_w 
from	pls_prestador 
where	nr_sequencia	= nr_seq_prestador_exec_p;
exception 
when others then 
	cd_prestador_exec_w	:= '';
	nr_seq_classificacao_w	:= null;
	nr_seq_tipo_prestador_w	:= null;
end;
 
/*Buscar o grupo de receita do procedimento OS - 306286*/
 
select	max(nr_seq_grupo_rec) 
into STRICT	nr_seq_grupo_rec_w 
from	procedimento 
where	cd_procedimento		= cd_procedimento_p 
and	ie_origem_proced	= ie_origem_proced_p;
 
open C01;
loop 
fetch C01 into	 
	nr_seq_regra_ww, 
	nr_seq_grupo_servico_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	 
	ie_grupo_servico_w	:= 'S';
	/* Grupo de serviços */
 
	if (coalesce(nr_seq_grupo_servico_w,0) > 0) then 
		ie_grupo_servico_w	:= pls_se_grupo_preco_servico(nr_seq_grupo_servico_w, cd_procedimento_p, ie_origem_proced_p);
	end if;	
	 
	/* Francisco - 11/12/2012 - Fiz esse tratamento para sóp fazer esse select caso encontrou regra de autogerado */
 
	if (ie_grupo_servico_w	= 'S') then 
		nr_seq_regra_w		:= nr_seq_regra_ww;
		 
		if (ie_primeira_vez_w = 'S') then 
			ie_primeira_vez_w	:= 'N';
			 
			begin 
			select	coalesce(qt_procedimento,0), 
				coalesce(qt_procedimento_prod,0) 
			into STRICT	qt_procedimento_w, 
				qt_procedimento_producao_w 
			from	pls_autogerado 
			where	nr_seq_prestador	= nr_seq_prestador_exec_p 
			and	dt_inicio_vigencia	= dt_referencia_w 
			and	dt_fim_vigencia		= dt_referencia_final_w;
			exception 
			when others then 
				qt_procedimento_w 		:= -1;
				qt_procedimento_producao_w 	:= -1;
			end;
			 
			if (qt_procedimento_w = -1) or (qt_procedimento_producao_w = -1) then 
				 
				select 	sum(a.qt_sum_auto_gerado_proc), 
					sum(a.qt_sum_proc) 
				into STRICT	qt_procedimento_w, 
					qt_procedimento_producao_w 
				from 	pls_conta_v a 
				where 	a.nr_seq_prestador_exec = nr_seq_prestador_exec_p 
				and 	a.dt_mes_competencia between dt_referencia_w and dt_referencia_final_w;
				 
				if (coalesce(qt_procedimento_w::text, '') = '') then 
					qt_procedimento_w := 0;
				end if;
				 
				if (coalesce(qt_procedimento_producao_w::text, '') = '') then 
					qt_procedimento_producao_w := 0;
				end if;
				 
				insert into pls_autogerado(	nr_sequencia, dt_inicio_vigencia, dt_fim_vigencia, nm_usuario, 
								dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_prestador, dt_atualizacao, 
								qt_procedimento, qt_procedimento_prod) 
							values (nextval('pls_autogerado_seq'), dt_referencia_w, dt_referencia_final_w, 'Tasy', 
								clock_timestamp(), 'Tasy', nr_seq_prestador_exec_p, clock_timestamp(), 
								qt_procedimento_w, qt_procedimento_producao_w);
			end if;
 
			pr_valor_total_w	:= (dividir(qt_procedimento_w,qt_procedimento_producao_w) * 100);
		end if;
		 
		open C02;
		loop 
		fetch C02 into	 
			cd_moeda_w, 
			nr_seq_preco_auto_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
		end loop;
		close C02;
	end if;
	end;
end loop;
close C01;
 
if (nr_seq_preco_auto_w IS NOT NULL AND nr_seq_preco_auto_w::text <> '') then 
	 
	cd_moeda_regra_w := pls_obter_moeda_auto(nr_seq_preco_auto_w, nr_seq_prestador_exec_p, cd_procedimento_p, ie_origem_proced_p);
	 
	if (cd_moeda_regra_w IS NOT NULL AND cd_moeda_regra_w::text <> '') then 
		cd_moeda_w := cd_moeda_regra_w;
	end if;
end if;
 
vl_autogerado_w	:= obter_valor_cotacao_moeda_data(cd_moeda_w, dt_referencia_p);
nr_seq_regra_p	:= nr_seq_regra_w;
 
vl_autogerado_p	:= vl_autogerado_w;
cd_moeda_p	:= cd_moeda_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_define_preco_autogerado ( cd_procedimento_p bigint, ie_origem_proced_p bigint, dt_referencia_p timestamp, cd_estabelecimento_p bigint, nr_seq_segurado_p bigint, ie_internado_p text, ie_tipo_guia_p text, nr_seq_prestador_exec_p bigint, ie_tipo_segurado_p text, nr_seq_regra_p INOUT bigint, vl_autogerado_p INOUT bigint, cd_moeda_p INOUT bigint) FROM PUBLIC;

