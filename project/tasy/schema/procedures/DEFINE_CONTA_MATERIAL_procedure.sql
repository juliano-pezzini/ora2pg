-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE define_conta_material ( cd_estabelecimento_p bigint, cd_material_p bigint, ie_tipo_conta_p bigint, ie_clinica_p bigint, cd_setor_atendimento_p bigint, ie_classif_convenio_p text, ie_tipo_atendimento_p bigint, ie_tipo_convenio_p bigint, cd_convenio_p bigint, cd_categoria_convenio_p text, cd_local_estoque_p bigint, cd_operacao_estoque_p bigint, dt_vigencia_p timestamp, cd_conta_contabil_p INOUT text, cd_centro_custo_p INOUT bigint, cd_plano_p text, ie_regra_pacote_p text default null, nr_seq_motivo_solic_p bigint default null, ie_complexidade_sus_p text default null, ie_tipo_financ_sus_p text default null, cd_operacao_nf_p bigint default null, ie_cancelamento_p text default null, cd_natureza_operacao_p bigint default null, vl_item_regra_p bigint default null, nr_seq_proj_rec_p bigint default null) AS $body$
DECLARE
				
				

/* -------------- Tipo de Conta -------
	1 - Receita
	2 - Estoque
	3 - Passagem Direta
	4 - Desp pre-faturamento
	5 - Ajuste producao
	6 - Redutora Receita
	7 - Gratuidade
	8 - Pre-faturamento
	9- Subvencao
	10  Conta Estoque Terceiro */
cd_operacao_estoque_w		parametros_conta_contabil.cd_operacao_estoque%type;
CD_CLASSE_MATERIAL_W      	classe_material.cd_classe_material%type		:= 0;
nr_seq_familia_w			parametros_conta_contabil.nr_seq_familia%type;
cd_subgrupo_material_w    	subgrupo_material.cd_subgrupo_material%type	:= 0;
cd_grupo_material_w       	grupo_material.cd_grupo_material%type		:= 0;
cd_conta_receita_w        	parametros_conta_contabil.cd_conta_receita%type;
cd_conta_estoque_w        	parametros_conta_contabil.cd_conta_estoque%type;
cd_conta_passag_direta_w  	parametros_conta_contabil.cd_conta_passag_direta%type;
cd_conta_desp_pre_fatur_w	parametros_conta_contabil.cd_conta_desp_pre_fatur%type;
cd_conta_redut_receita_w	parametros_conta_contabil.cd_conta_redut_receita%type;
cd_conta_rec_pacote_w 		parametros_conta_contabil.cd_conta_rec_pacote%type;
cd_conta_ajuste_prod_w		parametros_conta_contabil.cd_conta_ajuste_prod%type;
ie_tipo_selecao_w		varchar(1);
ie_param19_w			varchar(1);
cd_local_estoque_w		local_estoque.cd_local_estoque%type;
dt_vigencia_w			timestamp;
ie_regra_pacote_w		varchar(1);
ie_tipo_centro_w		centro_custo.ie_tipo_custo%type;
ie_tipo_tributo_item_w		varchar(15);
cd_centro_custo_receita_w	parametros_conta_contabil.cd_centro_custo_receita%type;
cd_empresa_w			empresa.cd_empresa%type;
cd_conta_gratuidade_w		conta_contabil.cd_conta_contabil%type;
cd_conta_subvencao_w		parametros_conta_contabil.cd_conta_subvencao%type;

ie_complexidade_w		sus_procedimento.ie_complexidade%type;
ie_tipo_financiamento_w		sus_procedimento.ie_tipo_financiamento%type;
cd_conta_perda_pre_fat_w	parametros_conta_contabil.cd_conta_perda_pre_fat%type;
cd_sequencia_parametro_w	parametros_conta_contabil.cd_sequencia_parametro%type;
cd_conta_estoque_terc_w		parametros_conta_contabil.cd_conta_estoque_terc%type;
ie_considera_dt_vig_w		varchar(1);

C001 CURSOR FOR
	/* Obter contas do material  */

	SELECT	cd_conta_receita,
		cd_conta_estoque,
		cd_conta_passag_direta,
		cd_conta_rec_pacote,
		cd_centro_custo_receita,
		cd_conta_ajuste_prod,
		cd_conta_desp_pre_fatur,
		CD_CONTA_REDUT_RECEITA,
		cd_conta_gratuidade,
		cd_conta_subvencao,
		cd_conta_perda_pre_fat,
		cd_sequencia_parametro,
		cd_conta_estoque_terc
	from 	parametros_conta_contabil
	where	cd_empresa							= cd_empresa_w
	and	coalesce(cd_estabelecimento, cd_estabelecimento_p)			= cd_estabelecimento_p
	and	coalesce(cd_material,cd_material_p) 					= cd_material_p
	and	coalesce(cd_grupo_material,cd_grupo_material_w)			= cd_grupo_material_w
	and	coalesce(cd_subgrupo_material,cd_subgrupo_material_w)		= cd_subgrupo_material_w
	and	coalesce(cd_classe_material,cd_classe_material_w)			= cd_classe_material_w
	and coalesce(nr_seq_familia, coalesce(nr_seq_familia_w, 0)) 				= coalesce(nr_seq_familia_w, 0)
	and coalesce(ie_tipo_atendimento,coalesce(ie_tipo_atendimento_p,0)) 		= coalesce(ie_tipo_atendimento_p,0)
	and	coalesce(cd_setor_atendimento,coalesce(cd_setor_atendimento_p,0)) 	= coalesce(cd_setor_atendimento_p,0)
	and	coalesce(cd_centro_custo,coalesce(cd_centro_custo_p,0)) 			= coalesce(cd_centro_custo_p,0)
	and	coalesce(ie_classif_convenio,coalesce(ie_classif_convenio_p,0))		= coalesce(ie_classif_convenio_p,0)
	and	coalesce(ie_tipo_convenio,coalesce(ie_tipo_convenio_p,0))			= coalesce(ie_tipo_convenio_p,0)
	and	coalesce(cd_convenio,coalesce(cd_convenio_p,0))				= coalesce(cd_convenio_p,0)
	and	coalesce(cd_local_estoque,coalesce(cd_local_estoque_w,0))			= coalesce(cd_local_estoque_w,0)
	and	coalesce(ie_tipo_tributo_item,coalesce(ie_tipo_tributo_item_w,'N'))	= coalesce(ie_tipo_tributo_item_w,'N')
	and	coalesce(cd_plano,coalesce(cd_plano_p,0))					= coalesce(cd_plano_p,0)
	and	coalesce(cd_categoria_convenio,coalesce(cd_categoria_convenio_p,'0'))	= coalesce(cd_categoria_convenio_p,'0')
	and	coalesce(ie_tipo_centro,coalesce(ie_tipo_centro_w,0)) 			= coalesce(ie_tipo_centro_w,0)
	and	coalesce(ie_clinica, coalesce(ie_clinica_p,0))				= coalesce(ie_clinica_p,0)
	and	coalesce(nr_seq_motivo_solic, coalesce(nr_seq_motivo_solic_p,0))		= coalesce(nr_seq_motivo_solic_p,0)
	and	((ie_param19_w = 'S' and ((coalesce(cd_operacao_estoque_w::text, '') = '') or (coalesce(cd_operacao_estoque::text, '') = '') or (cd_operacao_estoque_w = cd_operacao_estoque)))
		or ( ie_param19_w = 'N' and coalesce(cd_operacao_estoque,coalesce(cd_operacao_estoque_w,0)) 	= coalesce(cd_operacao_estoque_w,0)))
	and	((ie_tipo_conta_p = 1 AND cd_conta_receita IS NOT NULL AND cd_conta_receita::text <> '') or
		(ie_tipo_conta_p = 2 AND cd_conta_estoque IS NOT NULL AND cd_conta_estoque::text <> '') or
		(ie_tipo_conta_p = 5 AND cd_conta_ajuste_prod IS NOT NULL AND cd_conta_ajuste_prod::text <> '') or
		(ie_tipo_conta_p = 3 AND cd_conta_passag_direta IS NOT NULL AND cd_conta_passag_direta::text <> '') or
		(ie_tipo_conta_p = 4 AND cd_conta_desp_pre_fatur IS NOT NULL AND cd_conta_desp_pre_fatur::text <> '') or
		(ie_tipo_conta_p = 6 AND cd_conta_redut_receita IS NOT NULL AND cd_conta_redut_receita::text <> '')  or
		(ie_tipo_conta_p = 7 AND cd_conta_gratuidade IS NOT NULL AND cd_conta_gratuidade::text <> '')	or
		(ie_tipo_conta_p = 9 AND cd_conta_subvencao IS NOT NULL AND cd_conta_subvencao::text <> '') 	or
		(ie_tipo_conta_p = 10 AND cd_conta_estoque_terc IS NOT NULL AND cd_conta_estoque_terc::text <> ''))
	and	coalesce(cd_procedimento::text, '') = ''
	and	coalesce(cd_grupo_proced::text, '') = ''
	and	coalesce(cd_especial_proced::text, '') = ''
	and	coalesce(cd_area_proced::text, '') = ''
	and	coalesce(nr_seq_forma_org::text, '') = ''
	and	coalesce(nr_seq_grupo::text, '') = ''
	and	coalesce(nr_seq_subgrupo::text, '') = ''
	and	coalesce(nr_seq_proc_interno::text, '') = ''
	and (coalesce(dt_inicio_vigencia, dt_vigencia_w) <= dt_vigencia_w and coalesce(dt_fim_vigencia, dt_vigencia_w) >= dt_vigencia_w)
	and	((coalesce(IE_CONSISTE_PROC_PRINC_AIH,'N') = 'N') or (coalesce(ie_complexidade_sus,coalesce(ie_complexidade_sus_p,'0')) 		= coalesce(ie_complexidade_sus_p,'0')))
	and	((coalesce(IE_CONSISTE_PROC_PRINC_AIH,'N') = 'N') or (coalesce(ie_tipo_financ_sus,coalesce(ie_tipo_financ_sus_p,'0'))			= coalesce(ie_tipo_financ_sus_p,'0')))
	and	coalesce(cd_operacao_nf,coalesce(cd_operacao_nf_p,0))		= coalesce(cd_operacao_nf_p, 0)
	and	coalesce(ie_situacao_conta_pac,coalesce(ie_cancelamento_p,'0')) = coalesce(ie_cancelamento_p,'0')
	and	coalesce(cd_natureza_operacao, coalesce(cd_natureza_operacao_p, 0)) = coalesce(cd_natureza_operacao_p, 0)
	and (coalesce(nr_seq_regra_valor::text, '') = '' or pat_obter_se_regra_valor(nr_seq_regra_valor,vl_item_regra_p, dt_vigencia_p) = 'S')
        and    coalesce(nr_seq_proj_rec, coalesce(nr_seq_proj_rec_p, 0)) = coalesce(nr_seq_proj_rec_p, 0)					
	order by
		CASE WHEN ie_considera_dt_vig_w='S' THEN dt_inicio_vigencia  ELSE null END ,
		coalesce(cd_operacao_nf,0),
		coalesce(cd_estabelecimento,0),
		coalesce(ie_tipo_financ_sus,0),
		ie_consiste_proc_princ_aih,
		coalesce(ie_complexidade_sus,0),
		coalesce(ie_tipo_tributo_item,'N'),
		coalesce(cd_categoria_convenio,'0'),
		coalesce(cd_plano,0),
		coalesce(cd_convenio,0),
		coalesce(ie_tipo_convenio,0),
		coalesce(ie_classif_convenio,0),
		coalesce(cd_setor_atendimento,0),
		coalesce(cd_centro_custo,0),
		coalesce(ie_tipo_centro,0),
		coalesce(cd_local_estoque,0),
		CASE WHEN ie_param19_w='S' THEN ((CASE WHEN (cd_operacao_estoque_w IS NOT NULL AND cd_operacao_estoque_w::text <> '') THEN 0 ELSE coalesce(cd_operacao_estoque,0) END))  ELSE (coalesce(cd_operacao_estoque,0)) END ,
		coalesce(ie_tipo_atendimento,0),
		coalesce(ie_clinica,0),
		coalesce(cd_material,0),
		coalesce(cd_classe_material,0),
		coalesce(cd_subgrupo_material,0),
		coalesce(cd_grupo_material,0),
		coalesce(nr_seq_familia, 0),
		coalesce(ie_cancelamento_p,'0'),
		coalesce(nr_seq_regra_valor,0),
		coalesce(nr_seq_proj_rec, 0),
		coalesce(cd_natureza_operacao, 0);


BEGIN

select	CASE WHEN cd_operacao_estoque_p=0 THEN  null  ELSE cd_operacao_estoque_p END
into STRICT	cd_operacao_estoque_w
;

ie_considera_dt_vig_w := coalesce(obter_valor_param_usuario(7050, 20, obter_perfil_ativo, obter_usuario_ativo, obter_estabelecimento_ativo), 'S');
ie_param19_w          := coalesce(obter_valor_param_usuario(7050, 19, obter_perfil_ativo, obter_usuario_ativo, obter_estabelecimento_ativo), 'S');

/*      Obter Estrutura Material */

	begin
	cd_conta_contabil_p	:= null;	/*Anderson 09/03/2007 - OS 52252*/
	dt_vigencia_w		:= ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_vigencia_p);
	ie_tipo_centro_w	:= 0;

	ie_tipo_tributo_item_w	:= coalesce(obter_tipo_tributacao_item(cd_estabelecimento_p,cd_material_p),'N');

	select	cd_classe_material,
		cd_subgrupo_material,
		coalesce(nr_seq_familia,0),
		cd_grupo_material
	into STRICT	cd_classe_material_w,
		cd_subgrupo_material_w,
		nr_seq_familia_w,
		cd_grupo_material_w
	from	estrutura_material_v
	where	cd_material	 = cd_material_p;
	exception when others then
		cd_classe_material_w 	:= 0;
		cd_subgrupo_material_w 	:= 0;
		cd_grupo_material_w 	:= 0;
		nr_seq_familia_w		:= 0;
	end;

begin
select	cd_empresa
into STRICT	cd_empresa_w
from	estabelecimento
where	cd_estabelecimento	= cd_estabelecimento_p;
exception when others then
	cd_empresa_w	:= null;
end;

	begin
	if (coalesce(cd_centro_custo_p,0) <> 0) then
		select	coalesce(ie_tipo_custo,0)
		into STRICT	ie_tipo_centro_w
		from	centro_custo
		where	cd_centro_custo	= cd_centro_custo_p;
	end if;
	exception
	when others then
		ie_tipo_centro_w	:= 0;
	end;

cd_local_estoque_w	:= cd_local_estoque_p;
ie_regra_pacote_w	:= coalesce(ie_regra_pacote_p,'N');

open C001;
loop
fetch C001 into
	cd_conta_receita_w,
	cd_conta_estoque_w,
	cd_conta_passag_direta_w,
	cd_conta_rec_pacote_w,
	cd_centro_custo_receita_w,
	cd_conta_ajuste_prod_w,
	cd_conta_desp_pre_fatur_w,
	cd_conta_redut_receita_w,
	cd_conta_gratuidade_w,
	cd_conta_subvencao_w,
	cd_conta_perda_pre_fat_w,
	cd_sequencia_parametro_w,
	cd_conta_estoque_terc_w;
EXIT WHEN NOT FOUND; /* apply on C001 */
	begin

	If (ie_tipo_conta_p = 1) then
		begin
		cd_conta_Contabil_p	:= cd_conta_receita_w;

		if (ie_regra_pacote_w = 'S') then
			cd_conta_contabil_p	:= coalesce(cd_conta_rec_pacote_w, cd_conta_receita_w);
		end if;

		if (coalesce(cd_centro_custo_receita_w,0) <> 0) then
			cd_centro_custo_p	:= cd_centro_custo_receita_w;
		end if;
		end;
	elsif (ie_tipo_conta_p = 2) then
		cd_conta_contabil_p	:= cd_conta_estoque_w;
	elsif (ie_tipo_conta_p = 3) then
		cd_conta_contabil_p 	:= cd_conta_passag_direta_w;
	elsif (ie_tipo_conta_p = 4) then
		cd_conta_contabil_p := cd_conta_desp_pre_fatur_w;
	elsif (ie_tipo_conta_p = 5) then
		cd_conta_contabil_p	:= cd_conta_ajuste_prod_w;
	elsif (ie_tipo_conta_p = 6) then
		cd_conta_contabil_p := cd_conta_redut_receita_w;
	elsif (ie_tipo_conta_p = 7) then
		cd_conta_contabil_p	:= cd_conta_gratuidade_w;
	elsif (ie_tipo_conta_p = 8) then
		cd_conta_contabil_p	:= cd_conta_perda_pre_fat_w;
	elsif (ie_tipo_conta_p = 9) then
		cd_conta_contabil_p	:= cd_conta_subvencao_w;
	elsif (ie_tipo_conta_p = 10) then
		cd_conta_contabil_p	:= cd_conta_estoque_terc_w;
	end if;
	end;
end loop;
close C001;

CALL philips_contabil_pck.set_cd_sequencia_parametro(cd_sequencia_parametro_w);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE define_conta_material ( cd_estabelecimento_p bigint, cd_material_p bigint, ie_tipo_conta_p bigint, ie_clinica_p bigint, cd_setor_atendimento_p bigint, ie_classif_convenio_p text, ie_tipo_atendimento_p bigint, ie_tipo_convenio_p bigint, cd_convenio_p bigint, cd_categoria_convenio_p text, cd_local_estoque_p bigint, cd_operacao_estoque_p bigint, dt_vigencia_p timestamp, cd_conta_contabil_p INOUT text, cd_centro_custo_p INOUT bigint, cd_plano_p text, ie_regra_pacote_p text default null, nr_seq_motivo_solic_p bigint default null, ie_complexidade_sus_p text default null, ie_tipo_financ_sus_p text default null, cd_operacao_nf_p bigint default null, ie_cancelamento_p text default null, cd_natureza_operacao_p bigint default null, vl_item_regra_p bigint default null, nr_seq_proj_rec_p bigint default null) FROM PUBLIC;

