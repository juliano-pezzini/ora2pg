-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gpi_atualizar_real_projeto (nr_seq_projeto_p bigint, nm_usuario_p text) AS $body$
DECLARE


cd_empresa_w				empresa.cd_empresa%type;
cd_estabelecimento_w			estabelecimento.cd_estabelecimento%type;
ds_material_w				material.ds_material%type;
nr_requisicao_w				bigint;
nr_seq_item_w				bigint;
qt_registro_w				bigint;
vl_orcado_w				double precision;
ie_ratear_orc_nf_item_rateio_w		varchar(15);
qt_rateio_item_nf_w			bigint;
vl_rateio_w				double precision;
ds_macro_w				varchar(500);
nr_sequencia_max_w			bigint;

nr_seq_orc_item_gpi_w			gpi_orc_item.nr_sequencia%type;

/* Oramentos do projeto */

c01 CURSOR FOR
SELECT	a.nr_sequencia nr_seq_orcamento
from	gpi_orcamento a
where	a.nr_seq_projeto	= nr_seq_projeto_p
and	a.ie_situacao		= 'A';

c01_w		c01%rowtype;

/* Notas fiscais que possuam pelo menos um item vinculado ao projeto */

c02 CURSOR FOR
SELECT	a.nr_sequencia nr_seq_nota_fiscal,
	a.ie_acao_nf,
	c.ie_entrada_saida
from	operacao_estoque c,
	operacao_nota b,
	nota_fiscal a
where	a.cd_operacao_nf = b.cd_operacao_nf
and	b.cd_operacao_estoque = c.cd_operacao_estoque
and	coalesce(a.ie_situacao,0) = 1
and	exists (	SELECT	1
		from	nota_fiscal_item y
		where	y.nr_sequencia	= a.nr_sequencia
		and	y.nr_seq_proj_gpi = nr_seq_projeto_p)
order by
	1;

c02_w		c02%rowtype;

/*
Itens das notas que estejam vinculados ao projeto selecionado
Caso o item da nota NO ESTEJA vinculado a um item de oramento
OU
O item da nota ESTEJA vinculado  um item do oramento atual no C01
*/
c03 CURSOR FOR
SELECT	b.nr_item_nf,
	b.cd_material,
	b.cd_unidade_medida_estoque,
	b.nr_seq_conta_gpi,
	b.nr_seq_etapa_gpi,
	b.qt_item_nf,
	b.vl_liquido,
	b.nr_seq_orc_item_gpi
from	nota_fiscal_item b
where	b.nr_seq_proj_gpi = nr_seq_projeto_p
and	((coalesce(b.nr_seq_orc_item_gpi::text, '') = '') or (gpi_obter_orcamento_item(b.nr_seq_orc_item_gpi) = c01_w.nr_seq_orcamento))
and	b.nr_sequencia	= c02_w.nr_seq_nota_fiscal
and	coalesce(b.vl_liquido,0) <> 0
and	(cd_material IS NOT NULL AND cd_material::text <> '')
order by
	1;

c03_w		c03%rowtype;

/* Materiais das requisies vinculadas  etapas do projeto */

c04 CURSOR FOR
SELECT	b.cd_material,
	coalesce(b.qt_material_atendida,0) qt_material_atendida,
	b.dt_atendimento,
	b.nr_seq_etapa_gpi,
	b.cd_unidade_medida_estoque,
	(coalesce(b.qt_material_atendida,0) * coalesce(obter_custo_medio_material(cd_estabelecimento_w,trunc(b.dt_atendimento,'mm'),b.cd_material),0)) vl_liquido,
	(coalesce(gpi_obter_conta(cd_empresa_w,clock_timestamp(),b.cd_material),0)) nr_seq_conta,
    b.nr_seq_orc_item_gpi
from	requisicao_material a,
	item_requisicao_material b
where	a.nr_requisicao	= b.nr_requisicao
and	a.nr_seq_proj_gpi = nr_seq_projeto_p
and	(b.nr_seq_etapa_gpi IS NOT NULL AND b.nr_seq_etapa_gpi::text <> '')

union all

SELECT  b.cd_material,
  coalesce(b.qt_material_atendida,0) qt_material_atendida,
  b.dt_atendimento,
  b.nr_seq_etapa_gpi,
  b.cd_unidade_medida_estoque,
  (coalesce(b.qt_material_atendida,0) * coalesce(obter_custo_medio_material(1,trunc(b.dt_atendimento,'mm'),b.cd_material),0)) vl_liquido,
  (coalesce(gpi_obter_conta(1,clock_timestamp(),b.cd_material),0)) nr_seq_conta,
  b.nr_seq_orc_item_gpi
from  requisicao_material a,
  item_requisicao_material b
where  a.nr_requisicao  = b.nr_requisicao
and  a.nr_seq_proj_gpi = nr_seq_projeto_p
and  coalesce(b.nr_seq_etapa_gpi::text, '') = ''
and  (b.nr_seq_orc_item_gpi IS NOT NULL AND b.nr_seq_orc_item_gpi::text <> '')
order by  1;

c04_w		c04%rowtype;

/* Ordens de servio vinculadas  etapas do projeto */

c05 CURSOR FOR
SELECT	a.nr_seq_etapa_gpi,
	b.nr_seq_conta_gpi,
	coalesce(sum(c.qt_minuto),0) qt_minuto,
	coalesce(sum(c.vl_cobranca),0) vl_realizado
from	man_ordem_serv_ativ c,
	man_tipo_funcao b,
	man_ordem_servico a
where	a.nr_sequencia		= c.nr_seq_ordem_serv
and	b.nr_sequencia		= c.nr_seq_funcao
and	a.nr_seq_proj_gpi	= nr_seq_projeto_p
group by
	a.nr_seq_etapa_gpi,
	b.nr_seq_conta_gpi;

c05_w		c05%rowtype;

/* Rateio do valor dos itens da nota entre centros de custo, Parmetro [86] - Ratear valor realizado no oramento se existir rateio na nota fiscal, da funo Gesto de projetos e investimentos */

c06 CURSOR FOR
SELECT	a.cd_centro_custo,
	a.vl_rateio,
	a.nr_sequencia nr_sequencia_rateio
from	nota_fiscal_item_rateio a
where	a.nr_seq_nota		= c02_w.nr_seq_nota_fiscal
and	a.nr_item_nf		= c03_w.nr_item_nf
order by
	3;

c06_w		c06%rowtype;


BEGIN
/* ************************************************************************* */


/*                                                INICIO DA PROCEDURE                                                        */


/* ************************************************************************* */



/* Zerar o valor realizado de todos os itens dos oramentos do projeto selecionado */

update	gpi_orc_item a
set	a.vl_realizado = 0
where	a.nr_seq_orcamento in (	SELECT	y.nr_sequencia
				from	gpi_orcamento y
				where	y.nr_seq_projeto = nr_seq_projeto_p);

commit;

/* Pegar estabelecimento e empresa do projeto selecionado */

select	cd_estabelecimento,
	obter_empresa_estab(cd_estabelecimento)
into STRICT	cd_estabelecimento_w,
	cd_empresa_w
from	gpi_projeto
where	nr_sequencia = nr_seq_projeto_p;

/* Parmetro [86] - Ratear valor realizado no oramento se existir rateio na nota fiscal, da funo Gesto de projetos e investimentos */

ie_ratear_orc_nf_item_rateio_w	:= coalesce(obter_valor_param_usuario(7027, 86, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w),'N');

/*Oramentos */

open c01;
loop
fetch c01 into
	c01_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	/* Notas fiscais */

	open c02;
	loop
	fetch c02 into
		c02_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin

		/* Itens da nota do projeto */

		open c03;
		loop
		fetch c03 into
			c03_w;
		EXIT WHEN NOT FOUND; /* apply on c03 */
			begin

			nr_seq_orc_item_gpi_w := c03_w.nr_seq_orc_item_gpi;

			/* Seno tiver conta - busca das regras*/

			if (coalesce(c03_w.nr_seq_conta_gpi,0) = 0) then
				begin
				c03_w.nr_seq_conta_gpi	:= coalesce(gpi_obter_conta(cd_empresa_w,clock_timestamp(),c03_w.cd_material),0);
				if (coalesce(c03_w.nr_seq_conta_gpi,0) = 0) then
					begin
					/* No existe conta GPI para o material: CD_MATERIAL - DS_MATERIAL*/

					ds_material_w		:= substr(obter_desc_material(c03_w.cd_material),255);
					ds_macro_w	:= chr(13) || c03_w.cd_material || ' - ' || ds_material_w;
					CALL wheb_mensagem_pck.exibir_mensagem_abort(182105,'DS_MATERIAL='||ds_macro_w);
					end;
				end if;
				end;
			end if;

			select	count(*)
			into STRICT	qt_rateio_item_nf_w
			from	nota_fiscal_item_rateio
			where	nr_seq_nota	= c02_w.nr_seq_nota_fiscal
			and	nr_item_nf	= c03_w.nr_item_nf;

			/* Parmetro [86] habilitado e possuir rateio entre centros de custo do item atual */

			if (qt_rateio_item_nf_w > 0) and (ie_ratear_orc_nf_item_rateio_w = 'S') then
				begin
				/* Ratear valor por centro de custo */

				open c06;
				loop
				fetch c06 into
					c06_w;
				EXIT WHEN NOT FOUND; /* apply on C06 */
					begin
					/*Incio rateio*/

					if (c02_w.ie_entrada_saida = 'S') or (c02_w.ie_acao_nf <> '1') then
						begin
						c06_w.vl_rateio := c06_w.vl_rateio * -1;
						end;
					end if;

					if (coalesce(c03_w.nr_seq_etapa_gpi,0) = 0) and (coalesce(nr_seq_orc_item_gpi_w,0) > 0) then
						begin

						select	max(nr_seq_etapa)
						into STRICT	c03_w.nr_seq_etapa_gpi
						from	gpi_orc_item
						where	nr_sequencia	= nr_seq_orc_item_gpi_w;

						end;
					end if;

					select	max(nr_sequencia)
					into STRICT 	nr_seq_orc_item_gpi_w
					from	gpi_orc_item
					where	nr_seq_orcamento	= c01_w.nr_seq_orcamento
					and	cd_centro_custo		= c06_w.cd_centro_custo
					and	((nr_seq_etapa		= c03_w.nr_seq_etapa_gpi) or (coalesce(c03_w.nr_seq_etapa_gpi::text, '') = ''))
					and	nr_seq_plano		= c03_w.nr_seq_conta_gpi
					and	coalesce(cd_material,c03_w.cd_material)	 = c03_w.cd_material;

					if (coalesce(nr_seq_orc_item_gpi_w,0) > 0) then
						begin
						update	gpi_orc_item
						set	vl_realizado	 	= coalesce(vl_realizado,0) + c06_w.vl_rateio,
							ie_origem_real		= 'NF'
						where	nr_seq_orcamento	= c01_w.nr_seq_orcamento
						and	cd_centro_custo		= c06_w.cd_centro_custo
						and	((nr_seq_etapa		= c03_w.nr_seq_etapa_gpi) or (coalesce(c03_w.nr_seq_etapa_gpi::text, '') = ''))
						and	nr_seq_plano		= c03_w.nr_seq_conta_gpi
						and	c03_w.cd_material	= coalesce(cd_material,c03_w.cd_material);
						end;
					else
						begin

						select	nextval('gpi_orc_item_seq')
						into STRICT	nr_seq_orc_item_gpi_w
						;

						insert into gpi_orc_item(
							nr_sequencia,
							nr_seq_orcamento,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							nr_seq_plano,
							vl_orcado,
							cd_material,
							qt_item,
							vl_unitario,
							cd_unidade_medida,
							nr_seq_etapa,
							cd_centro_custo,
							ds_compl_item,
							ds_modelo,
							ds_fornecedor,
							vl_realizado,
							ie_origem_orc,
							ie_origem_real)
						values ( nr_seq_orc_item_gpi_w,
							c01_w.nr_seq_orcamento,
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							c03_w.nr_seq_conta_gpi,
							0,
							c03_w.cd_material,
							c03_w.qt_item_nf,
							0,
							c03_w.cd_unidade_medida_estoque,
							c03_w.nr_seq_etapa_gpi,
							c06_w.cd_centro_custo,
							'',
							'',
							'',
							c06_w.vl_rateio,
							'',
							'NF');
							end;
					end if;

					update	nota_fiscal_item_rateio c
					set	c.nr_seq_orc_item_gpi = nr_seq_orc_item_gpi_w
					where	c.nr_sequencia = c06_w.nr_sequencia_rateio;

					/* Fim rateio*/

					end;
				end loop;
				close C06;
				end;
			else
				begin
				/* Parmetro [86] desabilitado ou no possuir rateio entre centros de custo */


				/* Nota de estorno ou de devoluo */

				if (c02_w.ie_entrada_saida = 'S') or (c02_w.ie_acao_nf <> '1') then
					begin
					c03_w.vl_liquido := c03_w.vl_liquido * -1;
					end;
				end if;
				qt_registro_w	:= 0;
				if (coalesce(nr_seq_orc_item_gpi_w,0) = 0) then
					begin
					begin

					/* Verificar se existe um item vinculado  conta e etapa */

					select	1
					into STRICT	qt_registro_w
					from	gpi_orcamento a,
						gpi_orc_item b
					where	a.nr_sequencia	= b.nr_seq_orcamento
					and	b.nr_seq_plano	= c03_w.nr_seq_conta_gpi
					and	a.nr_seq_projeto = nr_seq_projeto_p
					--and	nvl(b.nr_seq_etapa, c03_w.nr_seq_etapa_gpi)	= c03_w.nr_seq_etapa_gpi
					and	((coalesce(c03_w.nr_seq_etapa_gpi::text, '') = '') or (coalesce(b.nr_seq_etapa::text, '') = '') or (b.nr_seq_etapa = c03_w.nr_seq_etapa_gpi))
					and	coalesce(b.cd_material,c03_w.cd_material)	 = c03_w.cd_material  LIMIT 1;
					exception
					when others then
						qt_registro_w := 0;
					end;

					end;
				end if;

				if (qt_registro_w = 0) and (coalesce(nr_seq_orc_item_gpi_w,0) = 0) then
					begin

					insert into gpi_orc_item(
						nr_sequencia,
						nr_seq_orcamento,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_seq_plano,
						vl_orcado,
						cd_material,
						qt_item,
						vl_unitario,
						cd_unidade_medida,
						nr_seq_etapa,
						cd_centro_custo,
						ds_compl_item,
						ds_modelo,
						ds_fornecedor,
						vl_realizado,
						ie_origem_orc,
						ie_origem_real)
					values ( nextval('gpi_orc_item_seq'),
						c01_w.nr_seq_orcamento,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						c03_w.nr_seq_conta_gpi,
						0,
						c03_w.cd_material,
						c03_w.qt_item_nf,
						0,
						c03_w.cd_unidade_medida_estoque,
						c03_w.nr_seq_etapa_gpi,
						null,
						'',
						'',
						'',
						c03_w.vl_liquido,
						'',
						'NF');
					end;
				elsif (coalesce(nr_seq_orc_item_gpi_w,0) = 0) and (qt_registro_w = 1) then
					begin
					update	gpi_orc_item
					set	vl_realizado	 = coalesce(vl_realizado,0) + c03_w.vl_liquido,
						ie_origem_real	 = 'NF'
					where	nr_seq_orcamento = c01_w.nr_seq_orcamento
					and	nr_seq_plano	 = c03_w.nr_seq_conta_gpi
					-- and	nvl(nr_seq_etapa,c03_w.nr_seq_etapa_gpi) = c03_w.nr_seq_etapa_gpi
					and	((coalesce(c03_w.nr_seq_etapa_gpi::text, '') = '' ) or (coalesce(nr_seq_etapa::text, '') = '') or (nr_seq_etapa = c03_w.nr_seq_etapa_gpi))
					and	coalesce(cd_material, c03_w.cd_material)	 = c03_w.cd_material;
					end;
				elsif (coalesce(nr_seq_orc_item_gpi_w,0) <> 0) then
					begin

					update	gpi_orc_item
					set	vl_realizado	 = coalesce(vl_realizado,0) + c03_w.vl_liquido,
						ie_origem_real	 = 'NF'
					where	nr_sequencia 	= nr_seq_orc_item_gpi_w;

					end;
				end if;
				end;
			end if;
			end;
		end loop;
		close c03;
		end;
	end loop;
	close c02;

	open c04;
	loop
	fetch c04 into
		c04_w;
	EXIT WHEN NOT FOUND; /* apply on c04 */
		begin

		if (coalesce(c04_w.nr_seq_conta,0) = 0) then
			begin
			/* No existe conta GPI para o material: CD_MATERIAL - DS_MATERIAL */

			ds_material_w	:= obter_desc_material(c04_w.cd_material);
			ds_macro_w	:= chr(13) || 'DS_MATERIAL='||c04_w.cd_material || ' - ' || ds_material_w;
			CALL wheb_mensagem_pck.exibir_mensagem_abort(182105,'DS_MATERIAL='||ds_macro_w);
			end;
		end if;

		begin
        select  1
        into STRICT    qt_registro_w
        from    gpi_orcamento a,
                gpi_orc_item b
        where   a.nr_sequencia          = b.nr_seq_orcamento
        and     a.nr_seq_projeto        = nr_seq_projeto_p
        and     b.nr_seq_plano          = c04_w.nr_seq_conta
        and     coalesce(b.nr_seq_etapa,0)   = coalesce(c04_w.nr_seq_etapa_gpi,0)
        and     c04_w.cd_material       = coalesce(b.cd_material,c04_w.cd_material)
        and     b.nr_sequencia          = coalesce(c04_w.nr_seq_orc_item_gpi,b.nr_sequencia)  LIMIT 1;

		exception
		when others then
			qt_registro_w := 0;
		end;

		if (qt_registro_w = 0) and
			coalesce(c04_w.vl_liquido,0) <> 0 then
			begin
			insert into gpi_orc_item(
				nr_sequencia,
				nr_seq_orcamento,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_plano,
				vl_orcado,
				cd_material,
				qt_item,
				vl_unitario,
				cd_unidade_medida,
				nr_seq_etapa,
				cd_centro_custo,
				ds_compl_item,
				ds_modelo,
				ds_fornecedor,
				vl_realizado,
				ie_origem_orc,
				ie_origem_real)
			values ( nextval('gpi_orc_item_seq'),
				c01_w.nr_seq_orcamento,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				c04_w.nr_seq_conta,
				0,
				c04_w.cd_material,
				c04_w.qt_material_atendida,
				0,
				c04_w.cd_unidade_medida_estoque,
				c04_w.nr_seq_etapa_gpi,
				null,
				'',
				'',
				'',
				c04_w.vl_liquido,
				'',
				'RQ');
			end;
		else
			begin
            update  gpi_orc_item
            set     qt_real          = c04_w.qt_material_atendida,
                    vl_realizado     = coalesce(vl_realizado,0) + c04_w.vl_liquido,
                    ie_origem_real   = 'RQ'
            where   nr_seq_orcamento = c01_w.nr_seq_orcamento
            and     nr_seq_plano     = c04_w.nr_seq_conta
            and     coalesce(nr_seq_etapa,0) = coalesce(c04_w.nr_seq_etapa_gpi,0)
            and     coalesce(cd_material,c04_w.cd_material)  = c04_w.cd_material
            and     nr_sequencia = coalesce(c04_w.nr_seq_orc_item_gpi, nr_sequencia);
			end;
		end if;
		end;
	end loop;
	close c04;

	open c05;
	loop
	fetch c05 into
		c05_w;
	EXIT WHEN NOT FOUND; /* apply on c05 */
		begin

		select	coalesce(max(b.nr_sequencia),0)
		into STRICT	nr_seq_orc_item_gpi_w
		from	gpi_orcamento a,
			gpi_orc_item b
		where	a.nr_sequencia		= b.nr_seq_orcamento
		and	a.nr_sequencia		= c01_w.nr_seq_orcamento
		and	b.nr_seq_plano		= c05_w.nr_seq_conta_gpi
		and	b.nr_seq_etapa		= c05_w.nr_seq_etapa_gpi;

		if (nr_seq_orc_item_gpi_w = 0) and (c05_w.vl_realizado <> 0) then
			begin
			insert into gpi_orc_item(
				nr_sequencia,
				nr_seq_orcamento,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_plano,
				vl_orcado,
				cd_material,
				qt_item,
				vl_unitario,
				cd_unidade_medida,
				nr_seq_etapa,
				cd_centro_custo,
				ds_compl_item,
				ds_modelo,
				ds_fornecedor,
				vl_realizado,
				ie_origem_orc,
				ie_origem_real)
			values ( nextval('gpi_orc_item_seq'),
				c01_w.nr_seq_orcamento,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				c05_w.nr_seq_conta_gpi,
				0,
				null,
				c05_w.qt_minuto,
				0,
				null,
				c05_w.nr_seq_etapa_gpi,
				null,
				'',
				'',
				'',
				c05_w.vl_realizado,
				'',
				'OS');
			end;
		elsif (c05_w.vl_realizado <> 0) then
			begin

			update	gpi_orc_item
			set	vl_realizado	= coalesce(vl_realizado,0) + c05_w.vl_realizado,
				ie_origem_real	= 'OS'
			where	nr_sequencia	= nr_seq_orc_item_gpi_w;

			end;
		end if;
		end;
	end loop;
	close c05;

	/* Ttulos */

	CALL gpi_atualizar_real_proj_titulo(	nr_seq_projeto_p,
				c01_w.nr_seq_orcamento,
				nm_usuario_p);


	begin
		select	1
		into STRICT	qt_registro_w
		from	movto_trans_financ
		where	nr_seq_proj_gpi	= nr_seq_projeto_p  LIMIT 1;
	exception
	when others then
		qt_registro_w := 0;
	end;
	/*Movtos transao financeira*/

	if (qt_registro_w = 1) then
		begin
		CALL gpi_gerar_real_movto_financ(nr_seq_projeto_p,c01_w.nr_seq_orcamento,nm_usuario_p);
		end;
	end if;
	end;
end loop;
close c01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gpi_atualizar_real_projeto (nr_seq_projeto_p bigint, nm_usuario_p text) FROM PUBLIC;

