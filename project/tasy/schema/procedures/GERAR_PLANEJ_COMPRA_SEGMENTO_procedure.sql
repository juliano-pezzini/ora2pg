-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_planej_compra_segmento ( nr_sequencia_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_segmento_w			bigint;
qt_dia_interv_entrega_w			double precision;
qt_dia_compra_w				double precision;
qt_dia_consumo_w			double precision;
qt_entregas_w				double precision;
cd_grupo_material_w			smallint;
cd_classe_material_w			integer;
cd_material_w				integer;
cd_subgrupo_material_w			smallint;
nr_seq_familia_w			bigint;
nr_seq_estrut_mat_w			bigint;
ie_situacao_w				varchar(1);
ie_curva_abc_w				varchar(1);
qt_existe_w				bigint;

c01 CURSOR FOR
SELECT	cd_grupo_material,
	cd_classe_material,
	cd_material,
	cd_subgrupo_material,
	nr_seq_familia,
	nr_seq_estrut_mat,
	coalesce(ie_curva_abc,'T')
from	segmento_compras_estrut
where	nr_seq_segmento = nr_seq_segmento_w;


BEGIN

select	coalesce(max(nr_seq_segmento),0)
into STRICT	nr_seq_segmento_w
from	sup_planejamento_compras
where	nr_sequencia = nr_sequencia_p;

if (nr_seq_segmento_w > 0) then

	select	ie_situacao,
		qt_dia_interv_entrega,
		qt_dia_compra,
		qt_dia_consumo,
		qt_entregas
	into STRICT	ie_situacao_w,
		qt_dia_interv_entrega_w,
		qt_dia_compra_w,
		qt_dia_consumo_w,
		qt_entregas_w
	from	segmento_compras
	where	nr_sequencia = nr_seq_segmento_w;

	if (ie_situacao_w = 'A') then

		update	sup_planejamento_compras
		set	qt_dia_interv_entrega	= CASE WHEN qt_dia_interv_entrega_w = NULL THEN  qt_dia_interv_entrega  ELSE qt_dia_interv_entrega_w END ,
			qt_dia_compra		= CASE WHEN qt_dia_compra_w = NULL THEN  qt_dia_compra  ELSE qt_dia_compra_w END ,
			qt_dia_consumo		= CASE WHEN qt_dia_consumo_w = NULL THEN  qt_dia_consumo  ELSE qt_dia_consumo_w END ,
			qt_entregas		= CASE WHEN qt_entregas_w = NULL THEN  qt_entregas  ELSE qt_entregas_w END
		where	nr_sequencia		= nr_sequencia_p;

		open C01;
		loop
		fetch C01 into
			cd_grupo_material_w,
			cd_classe_material_w,
			cd_material_w,
			cd_subgrupo_material_w,
			nr_seq_familia_w,
			nr_seq_estrut_mat_w,
			ie_curva_abc_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin

			select	count(*)
			into STRICT	qt_existe_w
			from	sup_regra_planej_compras
			where	nr_seq_planejamento = nr_sequencia_p
			and	coalesce(cd_grupo_material,0) = coalesce(cd_grupo_material_w,0)
			and	coalesce(cd_subgrupo_material,0) = coalesce(cd_subgrupo_material_w,0)
			and	coalesce(cd_classe_material,0) = coalesce(cd_classe_material_w,0)
			and	coalesce(cd_material,0) = coalesce(cd_material_w,0);

			if (qt_existe_w = 0) then

				insert into sup_regra_planej_compras(
					nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_seq_planejamento,
					cd_grupo_material,
					cd_subgrupo_material,
					cd_classe_material,
					cd_material,
					ie_padronizado,
					ie_gerar,
					nr_seq_fabric,
					ie_curva_abc,
					ie_material_estoque,
					ie_consignado,
					nr_seq_marca)
				values (	nextval('sup_regra_planej_compras_seq'),
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_sequencia_p,
					cd_grupo_material_w,
					cd_subgrupo_material_w,
					cd_classe_material_w,
					cd_material_w,
					'S',
					'S',
					null,
					ie_curva_abc_w,
					'A',
					null,
					null);
			end if;
			end;
		end loop;
		close C01;
	end if;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_planej_compra_segmento ( nr_sequencia_p bigint, nm_usuario_p text) FROM PUBLIC;

