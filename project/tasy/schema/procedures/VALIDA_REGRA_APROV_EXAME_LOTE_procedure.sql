-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE valida_regra_aprov_exame_lote (nr_prescricao_p bigint, nr_seq_prescr_p bigint, nm_usuario_p text, ie_opcao_p text, cd_perfil_ativo_p bigint, ds_consistencia_p INOUT text) AS $body$
DECLARE

/*
	ie_opcao_p		'A' para aprovação 'L' para liberação do exame
*/
nr_seq_exame_w					exame_laboratorio.nr_seq_exame%type;
ie_tipo_atendimento_w			atendimento_paciente.ie_tipo_atendimento%type;
ie_carater_inter_sus_w			atendimento_paciente.ie_carater_inter_sus%type;
nr_seq_grupo_exame_w			exame_laboratorio.nr_seq_grupo%type;
nr_seq_grupo_imp_w				exame_laboratorio.nr_seq_grupo_imp%type;
ie_valor_referencia_w			varchar(5);
ie_valores_aceitaveis_w2		varchar(5);
cd_perfil_w						integer;
ie_permite_liberar_w			varchar(1);
ie_permite_aprovar_w			varchar(1);
ie_tipo_atendimento_w2			smallint;
ie_formato_resultado_w			varchar(5);
ie_carater_inter_sus_w2			smallint;
nr_seq_grupo_exame_w2			bigint;
nr_seq_grupo_imp_w2				bigint;
nr_seq_exame_w2					bigint;
ds_resultado_w					exame_lab_result_item.ds_resultado%type;
qt_resultado_w					exame_lab_result_item.qt_resultado%type;
pr_resultado_w					exame_lab_result_item.pr_resultado%type;
qt_maxima_w						exame_lab_result_item.qt_maxima%type;
qt_minima_w						exame_lab_result_item.qt_minima%type;
pr_maximo_w						exame_lab_result_item.pr_maximo%type;
pr_minimo_w						exame_lab_result_item.pr_minimo%type;
ds_referencia_w					exame_lab_result_item.ds_referencia%type;
nm_usuario_w					varchar(255);
qt_regra_w						integer;
ie_result_valor_referencia_w	varchar(2);
possui_result_nao_aceit_w		varchar(1);
ie_somente_numero_w				varchar(1);
										

c01 CURSOR FOR
	SELECT	c.nr_seq_grupo_imp,
			c.nr_seq_grupo,
			c.nr_seq_exame,
			f.ie_carater_inter_sus,
			obter_formato_result_exame(b.nr_seq_exame, b.nr_seq_material),
			ds_resultado,
			coalesce(qt_resultado,0),
			coalesce(pr_resultado,0),
			coalesce(qt_maxima,9999999),
			coalesce(qt_minima,-999999),
			coalesce(pr_maximo,100),
			coalesce(pr_minimo,0),
			ds_referencia,
			f.ie_tipo_atendimento
	from	exame_laboratorio c,
			exame_lab_result_item b,
			exame_lab_resultado a,
			prescr_procedimento d,
			prescr_medica	e,
			atendimento_paciente f
	where 	a.nr_seq_resultado	= b.nr_seq_resultado
	  and 	d.nr_seq_exame		= c.nr_seq_exame
	  and	a.nr_prescricao 	= d.nr_prescricao
	  and	d.nr_sequencia 		= b.nr_seq_prescr
	  and	d.nr_prescricao		= e.nr_prescricao
	  and	e.nr_atendimento	= f.nr_atendimento
	  and 	a.nr_prescricao		= nr_prescricao_p
	  and 	((d.nr_sequencia	= nr_seq_prescr_p)or (nr_seq_prescr_p = 0))
	  order by 2;	


BEGIN

ds_consistencia_p := null;

select 	count(*)
into STRICT	qt_regra_w
from 	regra_aprovacao_exame
where	ie_utilizacao = 725 or coalesce(ie_utilizacao, 0) = 0;


if (qt_regra_w > 0)  then
	
	possui_result_nao_aceit_w := verifica_result_nao_aceitavel(nr_prescricao_p, nr_seq_prescr_p, possui_result_nao_aceit_w);
	
	open c01;
	loop
	fetch c01 into
		nr_seq_grupo_imp_w,
		nr_seq_grupo_exame_w,
		nr_seq_exame_w,
		ie_carater_inter_sus_w,
		ie_formato_resultado_w,
		ds_resultado_w,
		qt_resultado_w,
		pr_resultado_w,
		qt_maxima_w,
		qt_minima_w,
		pr_maximo_w,
		pr_minimo_w,
		ds_referencia_w,
		ie_tipo_atendimento_w;
	EXIT WHEN NOT FOUND or (ds_consistencia_p IS NOT NULL AND ds_consistencia_p::text <> '');  /* apply on c01 */
	begin
	
		if (ie_opcao_p = 'A') then
			-- 'exame '||obter_desc_exame(nr_seq_exame_w)||' da prescrição '||nr_prescricao_p||' não pode ser aprovado. verifique regras de aprovação/liberação';
			ds_consistencia_p := wheb_mensagem_pck.get_texto(306446, 'ds_exame='||obter_desc_exame(nr_seq_exame_w)||';nr_prescricao_p='||nr_prescricao_p);
		else
			-- 'exame '||obter_desc_exame(nr_seq_exame_w)||' da prescrição '||nr_prescricao_p||' não pode ser liberado. verifique regras de aprovação/liberação';
			ds_consistencia_p := wheb_mensagem_pck.get_texto(306449, 'ds_exame='||obter_desc_exame(nr_seq_exame_w)||';nr_prescricao_p='||nr_prescricao_p);
		end if;
		
		ie_result_valor_referencia_w := 'N';
		
		begin
			select	ie_tipo_atendimento,
					ie_carater_inter_sus,	
					nr_seq_grupo_exame,	
					nr_seq_grupo_imp,	
					nr_seq_exame,          
					ie_valor_referencia,  
					ie_valores_aceitaveis, 
					nm_usuario_regra,      
					cd_perfil,             
					ie_permite_liberar,    
					ie_permite_aprovar
			into STRICT	ie_tipo_atendimento_w2,
					ie_carater_inter_sus_w2,
					nr_seq_grupo_exame_w2,
					nr_seq_grupo_imp_w2,
					nr_seq_exame_w2,
					ie_valor_referencia_w,
					ie_valores_aceitaveis_w2,
					nm_usuario_w,
					cd_perfil_w,
					ie_permite_liberar_w,
					ie_permite_aprovar_w
			from	(
						SELECT	ie_tipo_atendimento,   
								ie_carater_inter_sus,	
								nr_seq_grupo_exame,	
								nr_seq_grupo_imp,	
								nr_seq_exame,          
								coalesce(ie_valor_referencia,'A') ie_valor_referencia,  
								ie_valores_aceitaveis, 
								nm_usuario_regra,      
								cd_perfil,             
								ie_permite_liberar,    
								ie_permite_aprovar     
						from	regra_aprovacao_exame
						where 	((nm_usuario_regra = nm_usuario_p) or (coalesce(nm_usuario_regra::text, '') = ''))
						and		((ie_tipo_atendimento = ie_tipo_atendimento_w )or (coalesce(ie_tipo_atendimento::text, '') = ''))
						and		((ie_carater_inter_sus = ie_carater_inter_sus_w )or (coalesce(ie_carater_inter_sus::text, '') = ''))
						and		((nr_seq_grupo_exame = nr_seq_grupo_exame_w )or (coalesce(nr_seq_grupo_exame::text, '') = ''))
						and		((nr_seq_grupo_imp = nr_seq_grupo_imp_w )or (coalesce(nr_seq_grupo_imp::text, '') = ''))
						and		((nr_seq_exame = nr_seq_exame_w )or (coalesce(nr_seq_exame::text, '') = ''))
						and		((coalesce(ie_valores_aceitaveis,'A') = 'A') or ( CASE WHEN ie_valores_aceitaveis='S' THEN 'N'  ELSE 'S' END  = possui_result_nao_aceit_w ))
						and		((cd_perfil = cd_perfil_ativo_p )or (coalesce(cd_perfil::text, '') = ''))
						and		((ie_utilizacao = 725) or (coalesce(ie_utilizacao, 0) = 0))
						order 	by nm_usuario_regra,
								coalesce(cd_perfil, 99999),
								coalesce(nr_seq_exame, 9999999999),
								coalesce(nr_seq_grupo_exame, 9999999999),
								coalesce(nr_seq_grupo_imp, 9999999999),
								ie_carater_inter_sus,			
								coalesce(ie_tipo_atendimento, 999),
								ie_permite_aprovar,
								ie_permite_liberar
					) a LIMIT 1;
		exception
			when no_data_found then
				ie_tipo_atendimento_w2 := null;
				ie_carater_inter_sus_w2 := null;
				nr_seq_grupo_exame_w2 := null;
				nr_seq_grupo_imp_w2 := null;
				nr_seq_exame_w2 := null;
				ie_valor_referencia_w := null;
				ie_valores_aceitaveis_w2 := null;
				nm_usuario_w := null;
				cd_perfil_w := null;
				ie_permite_liberar_w := null;
				ie_permite_aprovar_w := null;	
		end;
			
		/* valida os valores de referência do resultado */

		ie_result_valor_referencia_w := 'ok';
		if (ie_valor_referencia_w <> 'A') then
			ie_result_valor_referencia_w := 'D';
			if (ie_formato_resultado_w = 'V') or (ie_formato_resultado_w = 'VP') then
				if	not(qt_resultado_w between qt_minima_w and qt_maxima_w) then
					ie_result_valor_referencia_w := 'F';
				end if;
			end if;

			if (ie_formato_resultado_w = 'P') or (ie_formato_resultado_w = 'VP') then
				if	not(pr_resultado_w between pr_minimo_w and pr_maximo_w) then
					ie_result_valor_referencia_w := 'F';
				end if;
			end if;

			if (ie_formato_resultado_w = 'DV') then
				if (qt_resultado_w IS NOT NULL AND qt_resultado_w::text <> '') then
					if	not(qt_resultado_w between qt_minima_w and qt_maxima_w) then
						ie_result_valor_referencia_w := 'F';
					end if;
				else
					select	lab_obter_se_somente_numero(ds_resultado_w)
					into STRICT	ie_somente_numero_w
					;
					if coalesce(ie_somente_numero_w, 'N') = 'S' then
						qt_resultado_w := (ds_resultado_w)::numeric;
						if	not(qt_resultado_w between qt_minima_w and qt_maxima_w) then
							ie_result_valor_referencia_w := 'F';
						end if;
					else
						if not(upper(elimina_acentos_longo(ds_resultado_w)) like upper(elimina_acentos_longo(ds_referencia_w))) then
							ie_result_valor_referencia_w := 'F';
						end if;
					end if;
				end if;
			end if;
			
			if (ie_formato_resultado_w = 'SM') or (ie_formato_resultado_w = 'SDM') or (ie_formato_resultado_w = 'S') or (ie_formato_resultado_w = 'MS') or (ie_formato_resultado_w = 'MSD') or (ie_formato_resultado_w = 'DL') or (ie_formato_resultado_w = 'D') then
				if not(upper(elimina_acentos_longo(ds_resultado_w)) like upper(elimina_acentos_longo(ds_referencia_w))) then
					ie_result_valor_referencia_w := 'F';
				end if;
			end if;
			if (ie_valor_referencia_w = ie_result_valor_referencia_w) then
				ie_result_valor_referencia_w := 'ok';
			end if;

		end if;
		
		
		if (ie_result_valor_referencia_w = 'ok') then
			if (ie_opcao_p = 'A') then
				if (ie_permite_aprovar_w = 'S') then
					ds_consistencia_p := null;
				end if;
			else
				if (ie_permite_liberar_w = 'S') then
					 ds_consistencia_p := null;
				end if;
			end if;			
		end if;

		if (ie_result_valor_referencia_w = 'N') then
			 ds_consistencia_p := null;
		end if;

	end;
		
		
	end loop;
	close c01;
end if;



end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE valida_regra_aprov_exame_lote (nr_prescricao_p bigint, nr_seq_prescr_p bigint, nm_usuario_p text, ie_opcao_p text, cd_perfil_ativo_p bigint, ds_consistencia_p INOUT text) FROM PUBLIC;

