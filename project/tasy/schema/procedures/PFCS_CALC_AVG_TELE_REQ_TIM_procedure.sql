-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pfcs_calc_avg_tele_req_tim ( nr_seq_indicator_p bigint, cd_estabelecimento_p text, nm_usuario_p text) AS $body$
DECLARE


	nr_total_sequence_w				    bigint := 0;
	nr_average_time_w				    pfcs_panel.vl_indicator%type;
	nr_seq_operational_level_w      	bigint := 0;
	nr_total_time_avg_w			      	bigint := 0;
	nr_seq_panel_w						pfcs_panel_detail.nr_seq_panel%type;
	pfcs_flag_settings          		bigint := 0;

	ie_request_status_w             	varchar(5) := 'R';
    ie_matching_status_w				varchar(5) := 'S';

	ds_active_status_w					varchar(15) := 'ACTIVE';
	ds_planned_status_w					varchar(15) := 'PLANNED';
	ds_arrived_status_w					varchar(15) := 'ARRIVED';

	ds_monitor_dev_type_w 				varchar(10) := 'Monitor';
	ds_service_requested_w				varchar(10) := 'E0404';
	ie_active_w							varchar(1) := '1';

	--Cursor to fetch location
    cur_get_locations_for_pfcs CURSOR FOR
        SELECT loc.nr_sequencia nr_sequencia,
            loc.ds_department ds_department
         from
			pfcs_encounter enc,
            pfcs_patient pat,
			pfcs_encounter_location el,
			pfcs_location loc,
            pfcs_organization org
		where enc.si_status in (ds_planned_status_w, ds_arrived_status_w)
			and enc.nr_seq_patient = pat.nr_sequencia
			and pat.ie_active = ie_active_w
            and pat.nr_seq_organization = org.nr_sequencia
            and org.cd_estabelecimento = (cd_estabelecimento_p)::numeric
			and el.nr_seq_encounter = enc.nr_sequencia
			and el.nr_seq_location = loc.nr_sequencia
            group by loc.nr_sequencia, loc.ds_department;

	/* Cursor to read from pfcs integration tables */

	cur_get_recom_time_pfcs CURSOR(nr_seq_location_p bigint)
	FOR
		SELECT sr.nr_sequencia,
			pfcs_get_tele_time(sr.nr_sequencia, ie_request_status_w) nr_req_wait_time
		from pfcs_service_request sr,
			pfcs_encounter enc,
			pfcs_patient pat,
            pfcs_encounter_location el,
            pfcs_location loc,
            pfcs_organization org
		where
			sr.si_status = ds_active_status_w
			and sr.cd_service = ds_service_requested_w
			and sr.nr_seq_encounter = enc.nr_sequencia
			and enc.si_status in (ds_planned_status_w, ds_arrived_status_w)
			and enc.nr_seq_patient = pat.nr_sequencia
			and pat.ie_active = ie_active_w
            and el.nr_seq_encounter = enc.nr_sequencia
			and el.nr_seq_location = loc.nr_sequencia
			and pat.nr_seq_organization = org.nr_sequencia
            and org.cd_estabelecimento = (cd_estabelecimento_p)::numeric
			and pat.nr_sequencia not in (
				SELECT dev.nr_seq_patient
				from pfcs_device dev
				where dev.si_status = ds_active_status_w
					and dev.ds_device_type = ds_monitor_dev_type_w
					and (dev.nr_seq_patient IS NOT NULL AND dev.nr_seq_patient::text <> '')
			)
            and loc.nr_sequencia = nr_seq_location_p;
BEGIN

	/* Read from PFCS Integration cursor*/

	for cur_get_location_for_pfcs in cur_get_locations_for_pfcs loop
	begin
		nr_total_sequence_w  := 0;
		nr_total_time_avg_w := 0;
		for rec_get_recom_time in cur_get_recom_time_pfcs(cur_get_location_for_pfcs.nr_sequencia) loop
		begin
			/* For pfcs_flag_settings = 2 append to data read from Tasy */

			nr_total_sequence_w  := nr_total_sequence_w + 1;
			nr_total_time_avg_w  := nr_total_time_avg_w + rec_get_recom_time.nr_req_wait_time;
		end;
		end loop;


		if (nr_total_sequence_w = 0) then
			nr_average_time_w := 0;
		else
			nr_average_time_w := round(nr_total_time_avg_w / nr_total_sequence_w);
		end if;

		 := pfcs_pck_v2.pfcs_generate_results(
		vl_indicator_p => nr_average_time_w, ds_reference_value_p => cur_get_location_for_pfcs.ds_department, cd_reference_value_p => cur_get_location_for_pfcs.nr_sequencia, nr_seq_indicator_p => nr_seq_indicator_p, nr_seq_operational_level_p => (cd_estabelecimento_p)::numeric , nm_usuario_p => nm_usuario_p, nr_seq_panel_p => nr_seq_panel_w);
	end;
	end loop;

	CALL pfcs_pck_v2.pfcs_activate_records(
		nr_seq_indicator_p => nr_seq_indicator_p,
		nr_seq_operational_level_p => (cd_estabelecimento_p)::numeric ,
		nm_usuario_p => nm_usuario_p);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pfcs_calc_avg_tele_req_tim ( nr_seq_indicator_p bigint, cd_estabelecimento_p text, nm_usuario_p text) FROM PUBLIC;

