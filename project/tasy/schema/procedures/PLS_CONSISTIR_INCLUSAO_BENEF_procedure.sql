-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_consistir_inclusao_benef ( nr_seq_lote_p bigint, nr_seq_inclusao_p bigint, ie_consiste_sib_p text, ie_consiste_endereco_p text, ie_forma_liberacao_p text, nm_usuario_p text, ie_origem_p text) is /*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:   Consistir a inclusao do beneficiario
----------------------------------------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[  ]  Objetos do dicionario [ x ] Tasy (Delphi/Java) [ x ] Portal [  ] Relatorios [ ] Outros:
 ----------------------------------------------------------------------------------------------------------------------------------------------------

Pontos de atencao:  

ie_origem_p
P 	- Portal
T	- Tasy

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/ ds_email_w varchar(255) RETURNS bigint AS $body$
DECLARE


qt_anexo_w	bigint;
				

BEGIN

select	count(1)
into STRICT	qt_anexo_w
from (SELECT	nr_sequencia
	from	pls_inclusao_anexo
	where	nr_seq_lote_inclusao = nr_seq_lote_inc_p
	
union all

	SELECT	nr_sequencia
	from	pls_inclusao_anexo
	where	nr_seq_inclusao	= nr_seq_inclusao_benef_p) alias1;

return	qt_anexo_w;

end;
	
begin

ie_consiste_endereco_w 	:= ie_consiste_endereco_p;

ie_alt_data_liberacao_w := coalesce(obter_valor_param_usuario(1232, 120, Obter_perfil_Ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento), 'S');

if (nr_seq_lote_p IS NOT NULL AND nr_seq_lote_p::text <> '') then
	--Funcao OPSW - Beneficiario
	ie_consiste_endereco_w	:= pls_obter_param_padrao_funcao(18, 1248);
end if;

select	coalesce(max(qt_idade_proposta_cpf),0)
into STRICT	qt_idade_proposta_cpf_w
from	pls_parametros
where	cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento;

select	max(dt_importacao_arquivo),
	max(nr_seq_contrato),
	max(nr_seq_intercambio)
into STRICT	dt_importacao_arquivo_w,
	nr_seq_contrato_ww,
	nr_seq_intercambio_w
from	pls_lote_inclusao_benef
where	nr_sequencia	= nr_seq_lote_p;

if (coalesce(nr_seq_contrato_ww,0) <> 0) then
	begin
	select	ie_consistir_documento
	into STRICT	ie_consistir_documento_lote_w
	from	pls_regra_contrato_solic
	where	nr_seq_contrato	= nr_seq_contrato_ww
	and	ie_tipo_solicitacao = 'L';
	exception
	when others then
		ie_consistir_documento_lote_w	:= 'S';
	end;
	
	begin
	select	ie_exige_faixa_salarial,
		coalesce(ie_permite_inc_fora_atuacao,'N')
	into STRICT	ie_exige_faixa_salarial_w,
		ie_permite_inc_fora_atuacao_w
	from	pls_regra_benef_contrato
	where	nr_seq_contrato	= nr_seq_contrato_ww;
	exception
	when others then
		ie_exige_faixa_salarial_w	:= 'N';
		ie_permite_inc_fora_atuacao_w	:= 'N';
	end;
	ie_exige_faixa_salarial_w	:= coalesce(ie_exige_faixa_salarial_w,'N');
else
	ie_consistir_documento_lote_w	:= 'S';
	ie_exige_faixa_salarial_w	:= 'N';
	ie_permite_inc_fora_atuacao_w	:= 'N';
end if;

if (coalesce(nr_seq_inclusao_p::text, '') = '') then
	open C01;
	loop
	fetch C01 into
		ds_email_w,
		nr_seq_inclusao_w,
		cd_pessoa_fisica_w,
		nm_pessoa_fisica_w,
		dt_nascimento_w,
		nm_mae_w,
		nr_cpf_w,
		ds_endereco_w,
		nr_telefone_w,
		nr_seq_parentesco_w,
		nr_seq_titular_prop_w,
		nr_seq_titular_contrato_w,
		nr_seq_titular_solic_w,
		nm_titular_inclusao_w,
		ie_sexo_w,
		sg_estado_w,
		nr_seq_congenere_w,
		cd_operadora_congenere_w,
		nr_seq_contrato_w,
		cd_cep_w,
		nr_endereco_w,
		nr_seq_segurado_w,
		ie_tipo_operacao_w,
		nr_seq_motivo_via_adic_w,
		nr_seq_motivo_cancelamento_w,
		cd_nacionalidade_w,
		ie_status_w,
		cd_usuario_plano_w,
		cd_declaracao_nasc_vivo_w,
		nr_seq_plano_w,
		nr_cartao_nac_sus_w,
		cd_cartao_titular_imp_w,
		cd_municipio_ibge_w,
		nr_identidade_w,
		ds_orgao_emissor_ci_w,
		cd_matricula_familia_w,
		cd_cpf_vendedor_vinculado_w,
		nr_seq_vendedor_pf_w,
		dt_emissao_ci_w,
		sg_emissora_ci_w,
		nr_seq_pais_w,
		nr_pis_pasep_w,
		nm_pai_w,
		ds_municipio_nasc_w,
		sg_estado_nasc_w,
		nr_nivel_faixa_salarial_w,
		nr_seq_localizacao_benef_w,
		ie_estado_civil_w,
		dt_contratacao_w,
		nr_reg_geral_estrang_w,
		cd_municipio_ibge_nasc_w,
		dt_admissao_w,
		nr_seq_faixa_salarial_w,
		nr_seq_tabela_w,
		nr_seq_motivo_inclusao_w,
		dt_emissao_cert_casamento_w,
		nr_seq_subestipulante_w,
		ie_inclusao_portabilidade_w,
		nr_protocolo_portabilidade_w,
		dt_emissao_prot_portab_w,
		nr_registro_ops_ans_w,
		nr_registro_plano_origem_w,
		ie_tp_contratacao_plano_orig_w,
		ie_abrangencia_plano_origem_w,
		vl_preco_plano_origem_w,
		dt_inclusao_ops_origem_w,
		dt_inclusao_operadora_w,
		nr_telefone_celular_w,
		dt_rescisao_segurado_w,
		dt_reinclusao_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		nr_seq_lote_w := nr_seq_lote_p;
		
		delete	from pls_inconsist_incl_benef
		where	nr_seq_solic_inclusao = nr_seq_inclusao_w
		and 	coalesce(dt_liberacao::text, '') = '';

		if (ie_tipo_operacao_w <> 'I') then --Para todas movimentacoes, que nao sejam inclusao, deve existir um beneficiario vinculado
			if (coalesce(ie_status_w,'P') not in ('R','RO')) then
				--1 - Beneficiario nao informado
				if (coalesce(nr_seq_segurado_w::text, '') = '') then
					CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,1, nr_seq_lote_w, null, nm_usuario_p);
				end if;
				
				if (ie_tipo_operacao_w = 'C') then --2a via carteirinha
					--2 - Motivo de solicitacao da via adicional da carteirinha nao informado
					if (coalesce(nr_seq_motivo_via_adic_w::text, '') = '') then
						CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w, 2, nr_seq_lote_w, null, nm_usuario_p);
					end if;
				end if;
				
				if (ie_tipo_operacao_w = 'E') then --Exclusao
					--3 - Motivo de rescisao do beneficiario nao informado
					if (coalesce(nr_seq_motivo_cancelamento_w::text, '') = '') then
						CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w, 3, nr_seq_lote_w, null,nm_usuario_p);
					end if;
				end if;
				
				if (ie_tipo_operacao_w = 'RB') then --Reinclusao de beneficiario
					--88 - Beneficiario rescindido a mais de 30 dias
					if (obter_dias_entre(dt_rescisao_segurado_w,dt_reinclusao_w) > 30) then
						CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w, 88, nr_seq_lote_w, null,nm_usuario_p);
					end if;
				end if;
			end if;
		elsif (coalesce(ie_status_w,'P') not in ('R','RO')) then -- Nao consistir as inclusoes canceladas - Inclusoes
			qt_idade_w := obter_idade(dt_nascimento_w,dt_contratacao_w,'A');
			
			if (coalesce(cd_nacionalidade_w,'0') <> '0') then
				begin
				select	coalesce(ie_brasileiro,'N')
				into STRICT	ie_brasileiro_w
				from	nacionalidade
				where	cd_nacionalidade = cd_nacionalidade_w;
				exception
				when others then
					ie_brasileiro_w	:= 'N';
				end;
			end if;
			
			--4 - Inclusao sem pessoa fisica vinculada
			if	((coalesce(cd_pessoa_fisica_w::text, '') = '') and (ie_status_w <> 'R') and (dt_importacao_arquivo_w IS NOT NULL AND dt_importacao_arquivo_w::text <> '')) then
				CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,4, nr_seq_lote_w, null, nm_usuario_p);
			end if;
			
			--5 - Ja existe beneficiario cadastrado no contrato com a pessoa fisica vinculada
			if	((cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') and (ie_status_w not in ('R','RO'))) then
				qt_benef_w := 0;
				if (coalesce(nr_seq_contrato_ww,0) <> 0) then
					select	count(1)
					into STRICT	qt_benef_w
					from	pls_segurado
					where	nr_seq_contrato		= nr_seq_contrato_ww
					and	cd_pessoa_fisica	= cd_pessoa_fisica_w
					and	coalesce(dt_rescisao::text, '') = '';
				elsif (coalesce(nr_seq_intercambio_w,0) <> 0) then
					select	count(1)
					into STRICT	qt_benef_w
					from	pls_segurado
					where	nr_seq_intercambio	= nr_seq_intercambio_w
					and	cd_pessoa_fisica	= cd_pessoa_fisica_w
					and	coalesce(dt_rescisao::text, '') = '';
				end if;
				
				if (qt_benef_w > 0) then
					CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,5, nr_seq_lote_w, null, nm_usuario_p);
				end if;
			end if;
			
			ie_maior_idade_w 	:= pls_obter_pessoa_maior_idade(dt_nascimento_w);
			ie_maior_dezesseis_w 	:= pls_obter_pessoa_maior_16(dt_nascimento_w);
			
			--6 - Operadora utilizada para repasse nao encontrada na base
			if ((cd_operadora_congenere_w IS NOT NULL AND cd_operadora_congenere_w::text <> '') and coalesce(nr_seq_congenere_w::text, '') = '') then
				CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,6, nr_seq_lote_w, null, nm_usuario_p);
			end if;
			
			--7 - Nome de pessoa fisica invalido
			if (coalesce(nm_pessoa_fisica_w::text, '') = '') then
				CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,7, nr_seq_lote_w, null,nm_usuario_p);
			end if;
			
			--8 - Data de nascimento nao informada
			if	((coalesce(dt_nascimento_w::text, '') = '') or (dt_nascimento_w < to_date('01/01/1890','dd/mm/yyyy')) or (dt_nascimento_w > clock_timestamp())) then
				CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,8, nr_seq_lote_w, null, nm_usuario_p);
			end if;
			
			--9 - Nome da mae nao informado
			if (coalesce(nm_mae_w::text, '') = '') then
				CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,9, nr_seq_lote_w, null, nm_usuario_p);
			end if;
			
			--10 - Grau de parentesco nao informado
			if	(coalesce(nr_seq_parentesco_w::text, '') = '' and
				((nr_seq_titular_prop_w IS NOT NULL AND nr_seq_titular_prop_w::text <> '') or (nr_seq_titular_contrato_w IS NOT NULL AND nr_seq_titular_contrato_w::text <> '') or (nm_titular_inclusao_w IS NOT NULL AND nm_titular_inclusao_w::text <> '') or (nr_seq_titular_solic_w IS NOT NULL AND nr_seq_titular_solic_w::text <> ''))) then
				CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,10, nr_seq_lote_w, null, nm_usuario_p);
			end if;
			
			--11 - Titular nao informado
			if (coalesce(nr_seq_titular_prop_w::text, '') = '') and (coalesce(nr_seq_titular_contrato_w::text, '') = '') and (coalesce(nm_titular_inclusao_w::text, '') = '') and (coalesce(nr_seq_titular_solic_w::text, '') = '') and (nr_seq_parentesco_w IS NOT NULL AND nr_seq_parentesco_w::text <> '') then
				CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,11, nr_seq_lote_w, null, nm_usuario_p);
			end if;
			
			--12 - Sexo nao informado
			if (coalesce(ie_sexo_w::text, '') = '') then
				CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w, 12, nr_seq_lote_w,null, nm_usuario_p);
			end if;
			
			--13 - Telefone nao informado
			if	((coalesce(nr_telefone_w::text, '') = '') and (coalesce(dt_importacao_arquivo_w::text, '') = '')) then
				CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w, 13, nr_seq_lote_w, null,nm_usuario_p);
			end if;
			
			--15 - Endereco nao informado
			if (coalesce(ds_endereco_w::text, '') = '') then
				CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,15, nr_seq_lote_w, null, nm_usuario_p);
			end if;
			
			select 	pls_obter_se_uf_existe(sg_estado_w, '1')
			into STRICT 	ie_uf_existe_w
			;
			
			--16 - UF do Beneficiario nao informado ou invalido
			if (coalesce(sg_estado_w::text, '') = '') or (ie_uf_existe_w = 'N')then
				CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,16, nr_seq_lote_w, null, nm_usuario_p);
			end if;
			
			--54 - CPF informado para o mesmo do titular
			if (nr_cpf_w IS NOT NULL AND nr_cpf_w::text <> '') then
				nr_cpf_titular_w := null;
				if (nr_seq_titular_contrato_w IS NOT NULL AND nr_seq_titular_contrato_w::text <> '') then
					select	a.nr_cpf
					into STRICT	nr_cpf_titular_w
					from	pessoa_fisica a,
						pls_segurado b
					where	a.cd_pessoa_fisica = b.cd_pessoa_fisica
					and	b.nr_sequencia = nr_seq_titular_contrato_w;
				elsif (nr_seq_titular_solic_w IS NOT NULL AND nr_seq_titular_solic_w::text <> '')	or (nm_titular_inclusao_w IS NOT NULL AND nm_titular_inclusao_w::text <> '')	then
					select	max(a.nr_cpf)
					into STRICT	nr_cpf_titular_w
					from	pls_inclusao_beneficiario a
					where	a.nr_sequencia = nr_seq_titular_solic_w
					or	upper(a.nm_pessoa_fisica) = upper(nm_titular_inclusao_w);
				end if;
				if (nr_cpf_titular_w IS NOT NULL AND nr_cpf_titular_w::text <> '') and (nr_cpf_titular_w = nr_cpf_w) then
					CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,54, nr_seq_lote_w, null, nm_usuario_p);
				end if;
			end if;	
			
			--Consistir documentos
			if (ie_consistir_documento_lote_w = 'S') then
				--14 - CPF nao informado (Titular e dependente acima de 16 anos)
				if	(coalesce(nr_cpf_w::text, '') = '' and (ie_maior_dezesseis_w = 'S' or ((coalesce(nr_seq_titular_contrato_w::text, '') = '') and (coalesce(nr_seq_titular_solic_w::text, '') = '') and (coalesce(nm_titular_inclusao_w::text, '') = '')))) then
					CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,14,  nr_seq_lote_w, null, nm_usuario_p);
				end if;
				
				--30 - Documento de identificacao nao informado (Somente acima de 18 anos)
				if (coalesce(trim(both nr_identidade_w)::text, '') = '') and (coalesce(trim(both nr_reg_geral_estrang_w)::text, '') = '') and (ie_maior_idade_w = 'S') then
					CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,30, nr_seq_lote_w, null, nm_usuario_p);
				end if;
				
				--31 - Orgao emissor do documento de identificacao nao informado (Sera consistido somente quando o RG estiver informado)
				if ((trim(both nr_identidade_w) IS NOT NULL AND (trim(both nr_identidade_w))::text <> '')) and (coalesce(trim(both ds_orgao_emissor_ci_w)::text, '') = '') then
					CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,31, nr_seq_lote_w, null,nm_usuario_p);
				end if;
				
				--33 - CPF nao informado (Dependente menor de 16 anos)
				if (coalesce(nr_cpf_w::text, '') = '') and (ie_maior_dezesseis_w = 'N') and
					((nr_seq_titular_contrato_w IS NOT NULL AND nr_seq_titular_contrato_w::text <> '') or (nr_seq_titular_solic_w IS NOT NULL AND nr_seq_titular_solic_w::text <> '') or (nm_titular_inclusao_w IS NOT NULL AND nm_titular_inclusao_w::text <> '')) then
					CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,33,  nr_seq_lote_w, null,nm_usuario_p);
				end if;
				
				--49 - Cartao SUS nao informado
				if (coalesce(nr_cartao_nac_sus_w::text, '') = '') then
					CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w, 49, nr_seq_lote_w, null,nm_usuario_p);
				end if;
				
				--60 CPF nao informado (Dependentes menor de @IDADE anos)
				if (ie_titularidade_w = 'D') then
					if (coalesce(nr_cpf_w::text, '') = '') and (qt_idade_w >= qt_idade_proposta_cpf_w) then
						CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w, 60, nr_seq_lote_w, null,nm_usuario_p);
					end if;
				end if;
			end if;
			
			--Nome do Beneficiario ou da mae invalido - Apenas para brasileiros (nao inserir com abreviacoes)
			if (coalesce(ie_brasileiro_w,'S') = 'S') then
				if	(dt_importacao_arquivo_w IS NOT NULL AND dt_importacao_arquivo_w::text <> '' AND cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then
					select	nm_pessoa_fisica
					into STRICT	nm_pessoa_fisica_ww
					from	pessoa_fisica
					where	cd_pessoa_fisica	= cd_pessoa_fisica_w;
					
					select	max(a.nm_pessoa_fisica)
					into STRICT	nm_mae_ww
					from	pessoa_fisica a,
						compl_pessoa_fisica b
					where	b.cd_pessoa_fisica_ref	= a.cd_pessoa_fisica
					and	b.ie_tipo_complemento	= 5
					and	b.cd_pessoa_fisica	= cd_pessoa_fisica_w;
					
					if (coalesce(nm_mae_ww::text, '') = '') then
						select	max(a.nm_contato)
						into STRICT	nm_mae_ww
						from	compl_pessoa_fisica a
						where	a.cd_pessoa_fisica	= cd_pessoa_fisica_w
						and	a.ie_tipo_complemento	= 5;
					end if;
					
					ie_nome_benef_invalido_w		:= pls_consistir_letra_unica_pf(nm_pessoa_fisica_ww);
					ie_nome_mae_invalido_w			:= pls_consistir_letra_unica_pf(nm_mae_ww);
					
					--17 - Nome do Beneficiario ou da mae invalido
					if (ie_nome_mae_invalido_w = 'S') or (ie_nome_benef_invalido_w = 'S') then
						CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,17, nr_seq_lote_w, null,nm_usuario_p);
					end if;
				else
					ie_nome_benef_invalido_w	:= pls_consistir_letra_unica_pf(nm_pessoa_fisica_w);
					ie_nome_mae_invalido_w		:= pls_consistir_letra_unica_pf(nm_mae_w);
					
					--17 -Nome do Beneficiario ou da mae invalido
					if (ie_nome_mae_invalido_w = 'S') or (ie_nome_benef_invalido_w = 'S') then
						CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,17, nr_seq_lote_w, null, nm_usuario_p);
					end if;
				end if;
			end if;
			
			if (cd_cep_w IS NOT NULL AND cd_cep_w::text <> '') and (nr_endereco_w IS NOT NULL AND nr_endereco_w::text <> '') and (nr_seq_contrato_w IS NOT NULL AND nr_seq_contrato_w::text <> '') then
				begin
				select	coalesce(cd_cgc_estipulante,'X')
				into STRICT	cd_cgc_estip_w
				from	pls_contrato
				where	nr_sequencia	= nr_seq_contrato_w;
				exception
				when others then
					cd_cgc_estip_w	:= 'X';
				end;
				
				if (cd_cgc_estip_w	<> 'X') then
					begin
					select	coalesce(cd_cep,'X'),
						coalesce(nr_endereco,'X')
					into STRICT	cd_cep_estip_w,
						nr_endereco_estip_w
					from	pessoa_juridica
					where	cd_cgc	= cd_cgc_estip_w;
					exception
					when others then
						cd_cep_estip_w		:= 'X';
						nr_endereco_estip_w	:= 'X';
					end;
					
					--18 - Beneficiario com o mesmo endereco da empresa
					if (ie_consiste_endereco_w	= 'S') then
						if (cd_cep_w	= cd_cep_estip_w) and (nr_endereco_w	= nr_endereco_estip_w) then
							CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,18,nr_seq_lote_w, null, nm_usuario_p);
						end if;
					end if;
				end if;
			end if;
			
			if	(cd_usuario_plano_w IS NOT NULL AND cd_usuario_plano_w::text <> '' AND dt_importacao_arquivo_w IS NOT NULL AND dt_importacao_arquivo_w::text <> '') then
				if (ie_status_w not in ('R','RO')) then
					select	count(1)
					into STRICT	qt_benef_existentes_w
					from	pls_segurado_carteira	a,
						pls_segurado		b
					where	a.nr_seq_segurado	= b.nr_sequencia
					and	a.cd_usuario_plano	= cd_usuario_plano_w;
					
					--19 - Beneficiario com o numero da carteirinha ja existente na base. O numero da carteirinha deve ser alterado ou a Inclusao rejeitada
					if (qt_benef_existentes_w > 0) then
						CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,19,nr_seq_lote_w, null,nm_usuario_p);
					end if;
					
					if (coalesce(nr_seq_titular_solic_w,0) <> 0) then
						select	count(1)
						into STRICT	qt_inconsist_titular_w
						from	pls_inconsist_incl_benef
						where	nr_seq_solic_inclusao	= nr_seq_titular_solic_w
						and 	coalesce(dt_liberacao::text, '') = '';
						
						--20 - Titular do Beneficiario possui inconsistencia(s)
						if (qt_inconsist_titular_w > 0) then
							CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,20,nr_seq_lote_w,null,nm_usuario_p);
						end if;
					end if;
				end if;
			end if;
			
			--21 - numero da declaracao de nascido vivo nao informado
			if (coalesce(cd_declaracao_nasc_vivo_w::text, '') = '') and (dt_nascimento_w >= to_date('01/01/2010','dd/mm/yyyy')) then
				CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,21, nr_seq_lote_w, null, nm_usuario_p);
			end if;
			--51 - numero da declaracao de nascido vivo invalido
			if	((cd_declaracao_nasc_vivo_w IS NOT NULL AND cd_declaracao_nasc_vivo_w::text <> '') and
				((obter_se_somente_numero(cd_declaracao_nasc_vivo_w) = 'N') or (length(cd_declaracao_nasc_vivo_w) <> 11))) then
				CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,51, nr_seq_lote_w, null, nm_usuario_p);
			end if;
			
			--23 - Contrato do Beneficiario nao possui regra de pagador para importacao de lote
			if (nr_seq_contrato_ww IS NOT NULL AND nr_seq_contrato_ww::text <> '') and (nr_seq_plano_w IS NOT NULL AND nr_seq_plano_w::text <> '') then
				select	ie_regulamentacao,
					ie_tipo_contratacao
				into STRICT	ie_regulamentacao_w,
					ie_tipo_contratacao_w
				from	pls_plano
				where	nr_sequencia	= nr_seq_plano_w;
				
				select	count(1)
				into STRICT	qt_regra_acao_pagador_w
				from	pls_regra_pagador_imp_lote a
				where	((a.ie_tipo_contratacao	= ie_tipo_contratacao_w) or (coalesce(a.ie_tipo_contratacao::text, '') = ''))
				and	((a.ie_regulamentacao = ie_regulamentacao_w) or (coalesce(a.ie_regulamentacao::text, '') = ''))
				and	((a.nr_seq_contrato = nr_seq_contrato_ww) or (coalesce(a.nr_seq_contrato::text, '') = ''));
				
				if (qt_regra_acao_pagador_w = 0) then
					CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,23, nr_seq_lote_w, null, nm_usuario_p);
				end if;
			end if;
			
			--24 - CPF informado invalido
			if ((trim(both nr_cpf_w) IS NOT NULL AND (trim(both nr_cpf_w))::text <> '')) and (obter_se_cpf_valido(nr_cpf_w) = 'N') then
				CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,24, nr_seq_lote_w, null,nm_usuario_p);
			end if;
			
			--25 - Cartao do SUS informado invalido
			if ((trim(both nr_cartao_nac_sus_w) IS NOT NULL AND (trim(both nr_cartao_nac_sus_w))::text <> '')) and (Sus_Obter_Se_CNS_Inconsistente(nr_cartao_nac_sus_w) = 'S') then
				CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,25, nr_seq_lote_w, null, nm_usuario_p);
			end if;
			
			ie_titular_encontrado_w	:= 'S';
			
			--Caso tenha importado o Cartao do titular
			if (cd_cartao_titular_imp_w IS NOT NULL AND cd_cartao_titular_imp_w::text <> '') and (coalesce(nr_seq_titular_contrato_w::text, '') = '') then
				ie_titular_encontrado_w	:= 'N';
			end if;
			
			--Caso tenha importado atraves do nome do titular
			if (ie_titular_encontrado_w = 'S') and ((trim(both nm_titular_inclusao_w) IS NOT NULL AND (trim(both nm_titular_inclusao_w))::text <> '')) then
				select	count(1)
				into STRICT	qt_registros_w
				from	pls_inclusao_beneficiario
				where	upper(nm_pessoa_fisica)	= upper(nm_titular_inclusao_w)
				and	nr_seq_lote_inclusao = nr_seq_lote_p;
				
				if (qt_registros_w	= 0) then
					ie_titular_encontrado_w	:= 'N';
				end if;
			end if;
			
			--26 - Titular nao encontrado na base
			if (ie_titular_encontrado_w = 'N') then
				CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,26, nr_seq_lote_w, null,nm_usuario_p);
			end if;
			
			--27 - Nome do titular informado igual ao nome do proprio Beneficiario
			if (upper(trim(both nm_pessoa_fisica_w)) = upper(trim(both nm_titular_inclusao_w))) and ((trim(both nm_titular_inclusao_w) IS NOT NULL AND (trim(both nm_titular_inclusao_w))::text <> '')) then
				CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,27, nr_seq_lote_w,null, nm_usuario_p);
			end if;
			
			--28 - Codigo do municipio IBGE nao informado
			if (coalesce(cd_municipio_ibge_w::text, '') = '') then
				CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,28, nr_seq_lote_w,null, nm_usuario_p);
			end if;
			
			--29 - Matricula familiar nao informada
			if (coalesce(cd_matricula_familia_w::text, '') = '') then
				CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,29, nr_seq_lote_w,null, nm_usuario_p);
			end if;
			
			--32 - Motivo de rescisao informado para Beneficiario de Inclusao
			if ((trim(both nr_seq_motivo_cancelamento_w) IS NOT NULL AND (trim(both nr_seq_motivo_cancelamento_w))::text <> '')) then
				CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,32, nr_seq_lote_w,null, nm_usuario_p);
			end if;
			
			--34 - CPF do vendedor vinculado nao encontrado
			if ((trim(both cd_cpf_vendedor_vinculado_w) IS NOT NULL AND (trim(both cd_cpf_vendedor_vinculado_w))::text <> '')) and (coalesce(nr_seq_vendedor_pf_w::text, '') = '') then
				CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,34, nr_seq_lote_w,null, nm_usuario_p);
			end if;
			
			--35 - nao foram informados todos os dados referente ao RG (Sera consistido somente quando um dos campos for informado)
			if ((trim(both nr_identidade_w) IS NOT NULL AND (trim(both nr_identidade_w))::text <> '')) or ((trim(both ds_orgao_emissor_ci_w) IS NOT NULL AND (trim(both ds_orgao_emissor_ci_w))::text <> '')) or ((trim(both dt_emissao_ci_w) IS NOT NULL AND (trim(both dt_emissao_ci_w))::text <> '')) or ((trim(both sg_emissora_ci_w) IS NOT NULL AND (trim(both sg_emissora_ci_w))::text <> '')) or ((trim(both nr_seq_pais_w) IS NOT NULL AND (trim(both nr_seq_pais_w))::text <> '')) then
				
				if (coalesce(trim(both nr_identidade_w)::text, '') = '') or (coalesce(trim(both ds_orgao_emissor_ci_w)::text, '') = '') or (coalesce(trim(both dt_emissao_ci_w)::text, '') = '') or (coalesce(trim(both sg_emissora_ci_w)::text, '') = '') or (coalesce(trim(both nr_seq_pais_w)::text, '') = '') then
					CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,35, nr_seq_lote_w,null, nm_usuario_p);
				end if;
			end if;
			
			--36 - Local de atendimento esta bloqueado para repasse
			if (nr_seq_congenere_w IS NOT NULL AND nr_seq_congenere_w::text <> '') then
				select	count(1)
				into STRICT	qt_registros_w
				from	pls_regra_bloqueio_repasse
				where	nr_seq_congenere	= nr_seq_congenere_w
				and	trunc(clock_timestamp(),'dd') between trunc(dt_inicio_bloqueio,'dd') and trunc(coalesce(dt_fim_bloqueio,clock_timestamp()),'dd')
				and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '');
				
				if (qt_registros_w	> 0) then
					CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,36, nr_seq_lote_w, null,nm_usuario_p);
				end if;
			end if;
			
			--37 - Digito do PIS informado incorreto
			if (nr_pis_pasep_w IS NOT NULL AND nr_pis_pasep_w::text <> '') then
				qt_caracteres_pis_w	:= length(nr_pis_pasep_w);
				
				select	calcula_digito('Modulo11',substr(nr_pis_pasep_w, 1, qt_caracteres_pis_w - 1))
				into STRICT	nr_digito_w
				;
				
				cd_pis_pasep_w	:= substr(nr_pis_pasep_w, qt_caracteres_pis_w, qt_caracteres_pis_w);
				
				if (nr_digito_w <> cd_pis_pasep_w) then
					CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,37, nr_seq_lote_w, null,nm_usuario_p);
				end if;
			end if;
			
			if (coalesce(nr_seq_titular_prop_w::text, '') = '') and (coalesce(nr_seq_titular_contrato_w::text, '') = '') and (coalesce(nm_titular_inclusao_w::text, '') = '') and (coalesce(nr_seq_titular_solic_w::text, '') = '') then
				ie_titularidade_w	:= 'T';
			else
				ie_titularidade_w	:= 'D';
			end if;
			
			
			select	count(1)
			into STRICT	qt_registros_w
			from	pls_restricao_inclusao_seg
			where	nr_seq_contrato	= nr_seq_contrato_w
			and	clock_timestamp() between coalesce(dt_inicio_vigencia,clock_timestamp()) and coalesce(dt_fim_vigencia,clock_timestamp())
			and	((ie_titularidade = ie_titularidade_w) or (ie_titularidade = 'A'))
			and 	qt_idade_w  between coalesce(qt_idade_inicial,qt_idade_w) and coalesce(qt_idade_final,qt_idade_w);
			
			--38 - Contrato do Beneficiario possui restricao de Inclusao
			if (qt_registros_w	> 0) then
				CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w, 38, nr_seq_lote_w, null, nm_usuario_p);
			end if;
			
			--39 - Beneficiario titular com grau de parentesco informado
			if (ie_titularidade_w = 'T') and (nr_seq_parentesco_w IS NOT NULL AND nr_seq_parentesco_w::text <> '') then
				CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w, 39, nr_seq_lote_w, null, nm_usuario_p);
			end if;
			
			--40 - Local de atendimento do repasse nao liberado para o contrato
			select	count(1)
			into STRICT	qt_registros_w
			from	pls_contrato_regra_repasse
			where	nr_seq_contrato	= nr_seq_contrato_w
			and	ie_situacao = 'A';
			
			if (qt_registros_w > 0) then
				select	count(1)
				into STRICT	qt_registros_w
				from	pls_contrato_regra_repasse
				where	nr_seq_contrato	= nr_seq_contrato_w
				and	((nr_seq_congenere = nr_seq_congenere_w) or (coalesce(nr_seq_congenere::text, '') = ''))
				and	ie_situacao = 'A';
				
				if (qt_registros_w = 0) then
					CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w, 40, nr_seq_lote_w,null, nm_usuario_p);
				end if;
			end if;
			
			--41 - CPF duplicado na Inclusao (Inclusao por lote)
			select	count(1)
			into STRICT	qt_registros_w
			from	pls_inclusao_beneficiario
			where	nr_seq_lote_inclusao	= nr_seq_lote_p
			and	nr_sequencia	<> nr_seq_inclusao_w
			and	nr_cpf		= nr_cpf_w;
			
			if (qt_registros_w > 0) then
				CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w, 41, nr_seq_lote_w, null, nm_usuario_p);
			end if;
			
			ds_erro_w	:= '';			

			open c02;
			loop
			fetch c02 into
				nr_seq_inclusao_sca_w,
				nr_seq_plano_sca_w,
				ie_lancamento_regra_w;
			EXIT WHEN NOT FOUND; /* apply on c02 */
				begin
				
				--42 - SCA nao pode ser incluida ao Beneficiario, devido a restricao de idade, grau de parentesco ou titularidade
				ds_erro_w := pls_consistir_sca_inclusao(nr_seq_inclusao_w, nr_seq_plano_sca_w, ds_erro_w);
				if (ds_erro_w IS NOT NULL AND ds_erro_w::text <> '') then
					CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w, 42, nr_seq_lote_w, nr_seq_inclusao_sca_w, nm_usuario_p);
				end if;
				
				-- 86 - Municipio de residencia fora da area de atuacao do SCA
				 if    	((ie_permite_inc_fora_atuacao_w = 'N') and (pls_obter_se_area_atuacao_prod(nr_seq_plano_sca_w,cd_municipio_ibge_w) = 'N') and (ie_lancamento_regra_w = 'N')) then
					CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w, 86, nr_seq_lote_w, nr_seq_inclusao_sca_w, nm_usuario_p);
				end if;		
				end;
			end loop;
			close c02;
			
			--43 - Nome do pai invalido
			if (pls_consistir_letra_unica_pf(nm_pai_w) = 'S') then
				CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,43, nr_seq_lote_w, null, nm_usuario_p);
			end if;
			
			--44 - Municipio de nascimento nao encontrado
			if (ie_brasileiro_w = 'S') and (coalesce(cd_municipio_ibge_nasc_w::text, '') = '') then
				select	max(cd_municipio_ibge)
				into STRICT	cd_municipio_ibge_nasc_aux_w
				from	sus_municipio
				where	upper(ds_municipio) = trim(both upper(ds_municipio_nasc_w))
				and	upper(ds_unidade_federacao) = trim(both upper(sg_estado_nasc_w));
				
				if (coalesce(cd_municipio_ibge_nasc_aux_w::text, '') = '') then
					CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,44, nr_seq_lote_w, null, nm_usuario_p);
				end if;
			end if;
			
			--45 - Faixa salarial nao encontrada/informada
			if (ie_exige_faixa_salarial_w = 'S') then
				if (coalesce(nr_nivel_faixa_salarial_w::text, '') = '') then
					CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,45, nr_seq_lote_w, null,nm_usuario_p);
				elsif (coalesce(nr_seq_faixa_salarial_w,0) = 0) then
					CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,45, nr_seq_lote_w, null,nm_usuario_p);
				end if;
			end if;
			
			--46 - Consistir produto dependente com o do titular
			if (nr_seq_titular_contrato_w IS NOT NULL AND nr_seq_titular_contrato_w::text <> '') then
				select 	max(nr_seq_plano)
				into STRICT   	nr_seq_plano_titular_w
				from   	pls_segurado
				where  	nr_sequencia = nr_seq_titular_contrato_w;

				if (nr_seq_plano_w <> nr_seq_plano_titular_w) then
					CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,46, nr_seq_lote_w, null,nm_usuario_p);
				end if;
			elsif (nr_seq_titular_solic_w IS NOT NULL AND nr_seq_titular_solic_w::text <> '') then
				select 	max(nr_seq_plano)
				into STRICT   	nr_seq_plano_titular_w
				from   	pls_inclusao_beneficiario
				where  	nr_sequencia = nr_seq_titular_solic_w;
				
				if (nr_seq_plano_w <> nr_seq_plano_titular_w) then
					CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,46, nr_seq_lote_w, null,nm_usuario_p);
				end if;
			elsif (nm_titular_inclusao_w IS NOT NULL AND nm_titular_inclusao_w::text <> '') then
				select 	max(nr_seq_plano)
				into STRICT   	nr_seq_plano_titular_w
				from   	pls_inclusao_beneficiario
				where  	nm_pessoa_fisica 	= nm_titular_inclusao_w
				and	nr_seq_lote_inclusao 	= nr_seq_lote_w;
				
				if (nr_seq_plano_w <> nr_seq_plano_titular_w) then
					CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,46, nr_seq_lote_w, null,nm_usuario_p);
				end if;
			end if;
			
			--47 - Localizacao do Beneficiario invalida para a empresa
			if (nr_seq_localizacao_benef_w IS NOT NULL AND nr_seq_localizacao_benef_w::text <> '') then
				if (nr_seq_contrato_w IS NOT NULL AND nr_seq_contrato_w::text <> '') then
					select	coalesce(cd_cgc_estipulante,'X'),
						nr_contrato
					into STRICT	cd_cgc_estip_w,
						nr_contrato_w
					from	pls_contrato
					where	nr_sequencia = nr_seq_contrato_w;
					
					nr_registro_localizacao_w := 0;
					
					select	count(1)
					into STRICT	nr_registro_localizacao_w
					from	pls_localizacao_pj a,
						pls_localizacao_benef b
					where (a.cd_cgc = cd_cgc_estip_w or a.nr_contrato = nr_contrato_w)
					and	a.nr_sequencia = b.nr_seq_localizacao_pj
					and	b.nr_sequencia = nr_seq_localizacao_benef_w;
					
					if (nr_registro_localizacao_w = 0) then
						CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,47, nr_seq_lote_w, null, nm_usuario_p);
					end if;
				end if;
			end if;
			
			--48 - nao foi enviado anexo para a inclusao
			select	count(1)
			into STRICT	qt_registros_w
			from	pls_inclusao_anexo
			where	nr_seq_lote_inclusao	= nr_seq_lote_p;
			if (qt_registros_w = 0) then
				CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,48, nr_seq_lote_w, null,nm_usuario_p);
			end if;
			
			--50 - Estado civil nao informado
			if (coalesce(ie_estado_civil_w::text, '') = '') then
				CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,50, nr_seq_lote_w, null, nm_usuario_p);
			end if;
			
			--52 - Data de adesao anterior a data de adesao do titular
			if (nr_seq_titular_contrato_w IS NOT NULL AND nr_seq_titular_contrato_w::text <> '') then
				select 	max(dt_contratacao)
				into STRICT   	dt_contratacao_titular_w
				from   	pls_segurado
				where  	nr_sequencia = nr_seq_titular_contrato_w;
				
				if (trunc(dt_contratacao_w,'dd') < trunc(dt_contratacao_titular_w,'dd')) then
					CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,52, nr_seq_lote_w, null,nm_usuario_p);
				end if;
			elsif (nr_seq_titular_solic_w IS NOT NULL AND nr_seq_titular_solic_w::text <> '') then
				
				select 	max(dt_contratacao)
				into STRICT   	dt_contratacao_titular_w
				from   	pls_inclusao_beneficiario
				where  	nr_sequencia = nr_seq_titular_solic_w;
				
				if (trunc(dt_contratacao_w,'dd') < trunc(dt_contratacao_titular_w,'dd')) then
					CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,52, nr_seq_lote_w, null, nm_usuario_p);
				end if;
			elsif (nm_titular_inclusao_w IS NOT NULL AND nm_titular_inclusao_w::text <> '') then
				select 	max(dt_contratacao)
				into STRICT   	dt_contratacao_titular_w
				from   	pls_inclusao_beneficiario
				where  	nm_pessoa_fisica 	= nm_titular_inclusao_w
				and	nr_seq_lote_inclusao 	= nr_seq_lote_w;
				
				if (trunc(dt_contratacao_w,'dd') < trunc(dt_contratacao_titular_w,'dd')) then
					CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,52, nr_seq_lote_w, null,nm_usuario_p);
				end if;
			end if;	
			
			select	count(1)
			into STRICT	qt_contrato_pj_w
			from	pls_contrato
			where	nr_sequencia = nr_seq_contrato_w
			and 	(cd_cgc_estipulante IS NOT NULL AND cd_cgc_estipulante::text <> '');
			
			if (qt_contrato_pj_w > 0) then
				--53 - Data de admissao do titular nao informada ou invalida
				if (coalesce(nr_seq_titular_contrato_w::text, '') = '') and (coalesce(nr_seq_titular_solic_w::text, '') = '') and (coalesce(nm_titular_inclusao_w::text, '') = '') then
					--Titular
					if (coalesce(dt_admissao_w::text, '') = '') or (dt_admissao_w < dt_nascimento_w) or (dt_admissao_w > dt_contratacao_w) then
						CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,53, nr_seq_lote_w, null, nm_usuario_p);
					end if;
				end if;
			end if;
			
			--55 - Tabela de preco invalida para o plano selecionado ( validacao conforme regra)
			
				if (nr_seq_tabela_w IS NOT NULL AND nr_seq_tabela_w::text <> '') then
					if (nr_seq_plano_w IS NOT NULL AND nr_seq_plano_w::text <> '') then
						select	count(1)
						into STRICT	qt_tabela_plano_w
						from 	pls_tabela_preco
						where	nr_seq_plano = nr_seq_plano_w
						and	nr_sequencia = nr_seq_tabela_w
						and (dt_fim_vigencia > clock_timestamp() or
							coalesce(dt_fim_vigencia::text, '') = '' );
								
						if (qt_tabela_plano_w = 0) then
							CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,55, nr_seq_lote_w, null,nm_usuario_p);
						end if;
					end if;
				end if;
			
			
			--56 - Motivo de inclusao nao informado
			if (coalesce(nr_seq_motivo_inclusao_w::text, '') = '') then
				CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,56, nr_seq_lote_w, null, nm_usuario_p);
			end if;	
			
			--57 - Data de admissao maior que a data de Inclusao
			if	(dt_admissao_w IS NOT NULL AND dt_admissao_w::text <> '' AND dt_contratacao_w IS NOT NULL AND dt_contratacao_w::text <> '' AND dt_admissao_w > dt_contratacao_w ) then
				CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,57, nr_seq_lote_w, null,nm_usuario_p);
			end if;
			
			--58 Beneficiario com CPF informado ja ativo dentro do grupo contratual (Valido apenas para contratos com grupos contratuais)
			if (nr_cpf_w IS NOT NULL AND nr_cpf_w::text <> '') then
				if (pls_consiste_contrato_grupo(nr_seq_contrato_w, nr_cpf_w, dt_nascimento_w)='S') then
					CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w, 58, nr_seq_lote_w, null,nm_usuario_p);
				end if;
			end if;
			
			--61 - Produto nao informado
			if (coalesce(nr_seq_plano_w::text, '') = '') then
				CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,61, nr_seq_lote_w, null, nm_usuario_p);
			end if;
			
			--62 - Data de casamento nao informada
			if (ie_estado_civil_w = '2') and (coalesce(dt_emissao_cert_casamento_w::text, '') = '') then
				CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,62, nr_seq_lote_w,null, nm_usuario_p);
			end if;
			
			--64 - Data de casamento nao informada (Apenas dependentes)
			if (ie_estado_civil_w = '2') and (coalesce(dt_emissao_cert_casamento_w::text, '') = '') and (ie_titularidade_w = 'D') then
				CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,64, nr_seq_lote_w,null, nm_usuario_p);
			end if;
			
			--65 - Produto invalido
			if	(nr_seq_contrato_w IS NOT NULL AND nr_seq_contrato_w::text <> '' AND nr_seq_plano_w IS NOT NULL AND nr_seq_plano_w::text <> '') then
				select	count(1)
				into STRICT	qt_plano_contrato_w
				from	pls_contrato_plano a
				where	a.nr_seq_contrato = nr_seq_contrato_w
				and	a.nr_seq_plano	= nr_seq_plano_w;
				
				if (qt_plano_contrato_w = 0) then
					CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w, 65, nr_seq_lote_w, null,nm_usuario_p);
				end if;
			end if;
			
			--66 - Data de adesao interior a data atual.
			if	((trunc(dt_contratacao_w,'dd') < trunc(clock_timestamp(),'dd')) and (ie_origem_p = 'P')) then
				CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w, 66, nr_seq_lote_w, null,nm_usuario_p);
			end if;
			
			--67 - Nao foi enviado anexo para a inclusao (Beneficiario titular).
			if 	((coalesce(nr_seq_titular_prop_w::text, '') = '') and (coalesce(nr_seq_titular_contrato_w::text, '') = '') and (coalesce(nm_titular_inclusao_w::text, '') = '') and (coalesce(nr_seq_titular_solic_w::text, '') = '')) then
				select	count(1)
				into STRICT	qt_registros_w
				from	pls_inclusao_anexo
				where	nr_seq_lote_inclusao	= nr_seq_lote_p;

				if (qt_registros_w = 0) then
					CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,67, nr_seq_lote_w, null, nm_usuario_p);
				end if;
			end if;
			
			--68 - Subestipulante informado para o beneficiario eh diferente do subestipulante do titular
			if	(ie_titularidade_w = 'D' AND nr_seq_subestipulante_w IS NOT NULL AND nr_seq_subestipulante_w::text <> '') then
				if (nr_seq_titular_contrato_w IS NOT NULL AND nr_seq_titular_contrato_w::text <> '') then
					select 	max(nr_seq_subestipulante)
					into STRICT   	nr_seq_subestipulante_tit_w
					from   	pls_segurado
					where  	nr_sequencia = nr_seq_titular_contrato_w;
				elsif (nr_seq_titular_solic_w IS NOT NULL AND nr_seq_titular_solic_w::text <> '') then
					select 	max(nr_seq_subestipulante)
					into STRICT   	nr_seq_subestipulante_tit_w
					from   	pls_inclusao_beneficiario
					where  	nr_sequencia = nr_seq_titular_solic_w;
				elsif (nm_titular_inclusao_w IS NOT NULL AND nm_titular_inclusao_w::text <> '') then
					select 	max(nr_seq_subestipulante)
					into STRICT   	nr_seq_subestipulante_tit_w
					from   	pls_inclusao_beneficiario
					where  	nm_pessoa_fisica 	= nm_titular_inclusao_w
					and	nr_seq_lote_inclusao 	= nr_seq_lote_w;
				end if;

				nr_seq_subestipulante_ww	:= coalesce(nr_seq_subestipulante_tit_w, 0);
				
				if (nr_seq_subestipulante_w <> nr_seq_subestipulante_ww) then
					CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,68, nr_seq_lote_w, null,nm_usuario_p);
				end if;
			end if;
			
			--87-- E-MAIL nao informado
			if (coalesce(ds_email_w::text, '') = '') then
				CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w, 87, nr_seq_lote_w, null, nm_usuario_p);
			end if;
			
			--69 - CEP nao informado
			if (coalesce(cd_cep_w::text, '') = '') then
				CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,69, nr_seq_lote_w, null,nm_usuario_p);
			elsif (pls_verificar_cep_valido(cd_cep_w) = 'N') then
			--70 - CEP invalido
				CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,70, nr_seq_lote_w, null,nm_usuario_p);
			end if;
			--71 - SCA nao pode ser incluido ao Beneficiario, pois nao esta vinculado ao titular
			if (ie_titularidade_w = 'D') then	
				-- caso titular  for do contrato
				if (nr_seq_titular_contrato_w IS NOT NULL AND nr_seq_titular_contrato_w::text <> '') then
					open c02;
					loop
					fetch c02 into
						nr_seq_inclusao_sca_w,
						nr_seq_plano_sca_w,
						ie_lancamento_regra_w;
					EXIT WHEN NOT FOUND; /* apply on c02 */
					begin
						select	count(1)
						into STRICT	ie_possui_sca_w
						from 	pls_sca_vinculo
						where 	nr_seq_segurado = nr_seq_titular_contrato_w
						and	nr_seq_plano = nr_seq_plano_sca_w;
						
					if (ie_possui_sca_w = 0) then
						CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w, 71, nr_seq_lote_w, nr_seq_inclusao_sca_w, nm_usuario_p);
						exit;
					end if;
					end;
					end loop;
					close c02;
					
				end if;
				-- caso titular  for da proposta
				if (nr_seq_titular_solic_w IS NOT NULL AND nr_seq_titular_solic_w::text <> '') then
					open c02;
					loop
					fetch c02 into
						nr_seq_inclusao_sca_w,
						nr_seq_plano_sca_w,
						ie_lancamento_regra_w;
					EXIT WHEN NOT FOUND; /* apply on c02 */
					begin
						select	count(1)
						into STRICT	ie_possui_sca_w
						from	pls_inclusao_benef_sca
						where	nr_seq_inclusao_benef	= nr_seq_titular_solic_w
						and	ie_selecao		= 'S'
						and	nr_seq_sca = nr_seq_plano_sca_w;
					if (ie_possui_sca_w = 0) then
						CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w, 71, nr_seq_lote_w, nr_seq_inclusao_sca_w, nm_usuario_p);
						exit;
					end if;
					end;
					end loop;
					close c02;
				end if;
			end if;

			--72 - Nao foi enviado anexo de portabilidade
			if (ie_inclusao_portabilidade_w = 'S') then
				select	count(1)
				into STRICT	qt_registros_w
				from	pls_inclusao_anexo a,
					tipo_documentacao b
				where	b.nr_sequencia	= a.nr_seq_tipo_documento
				and	a.nr_seq_inclusao = nr_seq_inclusao_w
				and	coalesce(b.ie_portabilidade_ops,'N') = 'S';
				
				if (qt_registros_w = 0) then
					CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w, 72, nr_seq_lote_w, null, nm_usuario_p);
				end if;

				--73 -  Numero protocolo guia ANS nao informado
				if (coalesce(nr_protocolo_portabilidade_w::text, '') = '') then
					CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w, 73, nr_seq_lote_w, null,nm_usuario_p);
				end if;

				--74 -  Data emissao protocolo de portabilidade nao informada
				if (coalesce(dt_emissao_prot_portab_w::text, '') = '') then
					CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w, 74, nr_seq_lote_w, null,nm_usuario_p);
				end if;
				
				--75 -  Operadora de origem nao informada
				if (coalesce(nr_registro_ops_ans_w::text, '') = '') then
					CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w, 75, nr_seq_lote_w, null,nm_usuario_p);
				end if;
				
				--76 -  Registro do produto de origem nao informado
				if (coalesce(nr_registro_plano_origem_w::text, '') = '') then
					CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w, 76, nr_seq_lote_w, null,nm_usuario_p);
				end if;
				
				--77 - Tipo de contratacao do produto de origem nao informada
				if (coalesce(ie_tp_contratacao_plano_orig_w::text, '') = '') then
					CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w, 77, nr_seq_lote_w,null,nm_usuario_p);
				end if;
				
				--78 - Abrangencia geografica do produto de origem nao informada
				if (coalesce(ie_abrangencia_plano_origem_w::text, '') = '') then
					CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w, 78, nr_seq_lote_w, null,nm_usuario_p);
				end if;
				
				--79 - Preco do plano de origem nao informado
				if (coalesce(vl_preco_plano_origem_w::text, '') = '') then
					CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w, 79, nr_seq_lote_w, null,nm_usuario_p);
				end if;
				
				--80 - Data contratacao do produto de origem nao informada
				if (coalesce(dt_inclusao_ops_origem_w::text, '') = '') then
					CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w, 80, nr_seq_lote_w, null,nm_usuario_p);
				end if;
			end if;
			
			--81 - Data inclusao na operadora nao pode ser informada pela empresa
			if (dt_inclusao_operadora_w IS NOT NULL AND dt_inclusao_operadora_w::text <> '') then
				CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w, 81, nr_seq_lote_w, null,nm_usuario_p);
			end if;
			
			-- 82 - Celular nao informado
			if (coalesce(nr_telefone_celular_w::text, '') = '') then
				CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w, 82, nr_seq_lote_w, null,nm_usuario_p);
			else
				select  sum(qt_cel)
				into STRICT 	qt_celular_w
				from (SELECT count(a.nr_sequencia) qt_cel
					from   pls_segurado a,
						pessoa_fisica b
					where  a.cd_pessoa_fisica     	= b.cd_pessoa_fisica
					and    b.nr_telefone_celular  	= nr_telefone_celular_w
					and    a.nr_seq_contrato      	= nr_seq_contrato_w
					and    b.nr_cpf			<> nr_cpf_w
					
union

					SELECT count(d.cd_cgc) qt_cel
					from   pls_contrato c,
					       pessoa_juridica d
					where  c.cd_cgc_estipulante   	= d.cd_cgc
					and    d.nr_telefone          	= nr_telefone_celular_w
					and    c.nr_sequencia         	= nr_seq_contrato_w
					
union

					select count(e.nr_sequencia) qt_cel
					from   pls_inclusao_beneficiario e
					where  e.nr_seq_contrato	= nr_seq_contrato_w
					and    coalesce(e.nr_seq_proposta::text, '') = ''
					and    e.nr_telefone_celular  	= nr_telefone_celular_w
					and    e.nr_sequencia		<> nr_seq_inclusao_w
					and    e.ie_status not in ('C', 'R', 'RO')
					and    e.nr_cpf 		<> nr_cpf_w) alias6;
				
				--83 - Celular ja informado para empresa ou outro Beneficiario da empresa
				if (qt_celular_w > 0) then
					CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w, 83, nr_seq_lote_w, null,nm_usuario_p);
				end if;
			end if;
			
			select	count(1)
			into STRICT 	qt_titular_ativo_w
			from 	pls_segurado
			where   nr_sequencia = nr_seq_titular_contrato_w
			and 	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
			and (coalesce(dt_rescisao::text, '') = '' or dt_rescisao > dt_contratacao_w)
			and 	coalesce(dt_cancelamento::text, '') = '';

			-- 84 - Municipio de residencia fora da area de atuacao do produto
			if	((ie_permite_inc_fora_atuacao_w = 'N') and (pls_obter_se_area_atuacao_prod(nr_seq_plano_w,cd_municipio_ibge_w) = 'N') and qt_titular_ativo_w = 0) then
				CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w, 84, nr_seq_lote_w, null,nm_usuario_p);
			end if;
			
			-- 85 - Celular nao informado (Titular)
			if (coalesce(nr_telefone_celular_w::text, '') = '') and (ie_titularidade_w = 'T') then
				CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w, 85, nr_seq_lote_w, null,nm_usuario_p);
			end if;
			
		end if;
		
		select	count(1)
		into STRICT	qt_registros_w
		from	pls_inconsist_incl_benef
		where	nr_seq_solic_inclusao	= nr_seq_inclusao_w
		and 	coalesce(dt_liberacao::text, '') = '';
		
		if (nr_seq_intercambio_w IS NOT NULL AND nr_seq_intercambio_w::text <> '') then
			update	pls_inclusao_beneficiario
			set	ie_status_intercambio		= CASE WHEN qt_registros_w=0 THEN 'P'  ELSE 'I' END ,
				dt_liberacao_solic_inclusao 	= CASE WHEN qt_registros_w=0 THEN clock_timestamp()  ELSE null END ,
				nm_usuario 			= nm_usuario_p,
				dt_atualizacao 			= clock_timestamp()
			where	nr_sequencia			= nr_seq_inclusao_w;
		else
			update	pls_inclusao_beneficiario
			set	ie_status			= CASE WHEN qt_registros_w=0 THEN 'P'  ELSE 'I' END ,
				dt_liberacao_solic_inclusao 	= CASE WHEN qt_registros_w=0 THEN clock_timestamp()  ELSE null END ,
				nm_usuario 			= nm_usuario_p,
				dt_atualizacao 			= clock_timestamp()
			where	nr_sequencia			= nr_seq_inclusao_w;
		end if;
		end;
	end loop;
	close C01;
else
	select	a.ds_email,
		a.nr_sequencia,
		a.nm_pessoa_fisica,
		a.dt_nascimento,
		a.nm_mae,
		a.nr_cpf,
		a.ds_endereco,
		CASE WHEN a.nr_telefone='' THEN  a.nr_telefone_celular  ELSE a.nr_telefone END ,
		a.nr_seq_parentesco,
		a.nr_seq_titular_prop,
		a.nr_seq_titular_contrato,
		a.nr_seq_lote_inclusao,
		a.nm_titular_inclusao,
		a.ie_sexo,
		a.sg_estado,
		a.nr_seq_contrato,
		elimina_caracteres_especiais(a.cd_cep),
		obter_somente_numero(a.nr_endereco),
		a.cd_nacionalidade,
		a.nr_seq_titular_solic,
		a.cd_declaracao_nasc_vivo,
		a.nr_cartao_nac_sus,
		a.cd_municipio_ibge,
		a.nr_identidade,
		a.ds_orgao_emissor_ci,
		a.cd_matricula_familia,
		a.nr_seq_motivo_cancelamento,
		a.ie_tipo_operacao,
		a.nr_cpf_vendedor,
		a.nr_seq_vendedor_pf,
		a.dt_emissao_ci,
		a.sg_emissora_ci,
		a.nr_seq_pais,
		a.nr_seq_congenere,
		a.nr_pis_pasep,
		a.nm_pai,
		a.ds_municipio_nasc,
		a.sg_estado_nasc,
		a.nr_nivel_faixa_salarial,
		a.nr_seq_localizacao_benef,
		a.ie_estado_civil,
		a.nr_reg_geral_estrang,
		a.dt_contratacao,
		a.cd_municipio_ibge_nasc,
		a.cd_pessoa_fisica,
		a.nr_seq_intercambio,
		a.dt_admissao,
		a.nr_seq_faixa_salarial,
		a.nr_seq_plano,
		a.nr_seq_tabela,
		a.nr_seq_motivo_inclusao,
		a.dt_emissao_cert_casamento,
		a.nr_seq_subestipulante,
		coalesce((	select	max(x.ie_portabilidade)
			from	pls_motivo_inclusao_seg x
			where	x.nr_sequencia	= a.nr_seq_motivo_inclusao),'N') ie_inclusao_portabilidade,
		a.nr_protocolo_portabilidade,
		a.dt_emissao_prot_portab,
		a.nr_registro_ops_ans,
		a.nr_registro_plano_origem,
		a.ie_tp_contratacao_plano_origem,
		a.ie_abrangencia_plano_origem,
		a.vl_preco_plano_origem,
		a.dt_inclusao_ops_origem,
		a.dt_inclusao_operadora,
		a.nr_telefone_celular
	into STRICT	ds_email_w,
		nr_seq_inclusao_w,
		nm_pessoa_fisica_w,
		dt_nascimento_w,
		nm_mae_w,
		nr_cpf_w,
		ds_endereco_w,
		nr_telefone_w,
		nr_seq_parentesco_w,
		nr_seq_titular_prop_w,
		nr_seq_titular_contrato_w,
		nr_seq_lote_w,
		nm_titular_inclusao_w,
		ie_sexo_w,
		sg_estado_w,
		nr_seq_contrato_w,
		cd_cep_w,
		nr_endereco_w,
		cd_nacionalidade_w,
		nr_seq_titular_solic_w,
		cd_declaracao_nasc_vivo_w,
		nr_cartao_nac_sus_w,
		cd_municipio_ibge_w,
		nr_identidade_w,
		ds_orgao_emissor_ci_w,
		cd_matricula_familia_w,
		nr_seq_motivo_cancelamento_w,
		ie_tipo_operacao_w,
		cd_cpf_vendedor_vinculado_w,
		nr_seq_vendedor_pf_w,
		dt_emissao_ci_w,
		sg_emissora_ci_w,
		nr_seq_pais_w,
		nr_seq_congenere_w,
		nr_pis_pasep_w,
		nm_pai_w,
		ds_municipio_nasc_w,
		sg_estado_nasc_w,
		nr_nivel_faixa_salarial_w,
		nr_seq_localizacao_benef_w,
		ie_estado_civil_w,
		nr_reg_geral_estrang_w,
		dt_contratacao_w,
		cd_municipio_ibge_nasc_w,
		cd_pessoa_fisica_w,
		nr_seq_intercambio_w,
		dt_admissao_w,
		nr_seq_faixa_salarial_w,
		nr_seq_plano_w,
		nr_seq_tabela_w,
		nr_seq_motivo_inclusao_w,
		dt_emissao_cert_casamento_w,
		nr_seq_subestipulante_w,
		ie_inclusao_portabilidade_w,
		nr_protocolo_portabilidade_w,
		dt_emissao_prot_portab_w,
		nr_registro_ops_ans_w,
		nr_registro_plano_origem_w,
		ie_tp_contratacao_plano_orig_w,
		ie_abrangencia_plano_origem_w,
		vl_preco_plano_origem_w,
		dt_inclusao_ops_origem_w,
		dt_inclusao_operadora_w,
		nr_telefone_celular_w
	from	pls_inclusao_beneficiario a
	where	a.nr_sequencia = nr_seq_inclusao_p;
	
	delete	from pls_inconsist_incl_benef
	where	nr_seq_solic_inclusao = nr_seq_inclusao_w
	and 	coalesce(dt_liberacao::text, '') = '';
	
	qt_idade_w := obter_idade(dt_nascimento_w,dt_contratacao_w,'A');
	
	if (coalesce(nr_seq_titular_prop_w::text, '') = '') and (coalesce(nr_seq_titular_contrato_w::text, '') = '') and (coalesce(nm_titular_inclusao_w::text, '') = '' )  and (coalesce(nr_seq_titular_solic_w::text, '') = '')then
		ie_titularidade_w	:= 'T';
	else
		ie_titularidade_w	:= 'D';
	end if;
	
	begin
	select	ie_consistir_documento
	into STRICT	ie_consistir_documento_w
	from	pls_regra_contrato_solic
	where	nr_seq_contrato	= nr_seq_contrato_w
	and	ie_tipo_solicitacao = 'L';
	exception
	when others then
		ie_consistir_documento_w	:= 'S';
	end;
	
	begin
	select	ie_exige_faixa_salarial,
		coalesce(ie_permite_inc_fora_atuacao,'N')
	into STRICT	ie_exige_faixa_salarial_w,
		ie_permite_inc_fora_atuacao_w
	from	pls_regra_benef_contrato
	where	nr_seq_contrato	= nr_seq_contrato_w;
	exception
	when others then
		ie_exige_faixa_salarial_w	:= 'N';
		ie_permite_inc_fora_atuacao_w	:= 'N';
	end;
	
	ie_exige_faixa_salarial_w	:= coalesce(ie_exige_faixa_salarial_w,'N');
	
	if (coalesce(cd_nacionalidade_w,'0') <> '0') then
		begin
		select	coalesce(ie_brasileiro,'N')
		into STRICT	ie_brasileiro_w
		from	nacionalidade
		where	cd_nacionalidade = cd_nacionalidade_w;
		exception
		when others then
			ie_brasileiro_w	:= 'N';
		end;
	end if;
	
	ie_maior_idade_w 	:= pls_obter_pessoa_maior_idade(dt_nascimento_w);
	ie_maior_dezesseis_w 	:= pls_obter_pessoa_maior_16(dt_nascimento_w);
	
	if (ie_consistir_documento_w = 'S') then
		--14 - CPF nao informado (Titular e dependente acima de 16 anos)
		if	(coalesce(nr_cpf_w::text, '') = '' and (ie_maior_dezesseis_w = 'S' or ((coalesce(nr_seq_titular_contrato_w::text, '') = '') and (coalesce(nr_seq_titular_solic_w::text, '') = '') and (coalesce(nm_titular_inclusao_w::text, '') = '')))) then
			CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,14, nr_seq_lote_w, null,nm_usuario_p);
		end if;
		
		--30 - Documento de identificacao nao informado (Somente acima de 18 anos)
		if (coalesce(trim(both nr_identidade_w)::text, '') = '') and (coalesce(trim(both nr_reg_geral_estrang_w)::text, '') = '') and (ie_maior_idade_w = 'S') then
			CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,30, nr_seq_lote_w, null,nm_usuario_p);
		end if;
		
		--31 - Orgao emissor do documento de identificacao nao informado (Sera consistido somente quando o RG estiver informado)
		if ((trim(both nr_identidade_w) IS NOT NULL AND (trim(both nr_identidade_w))::text <> '')) and (coalesce(trim(both ds_orgao_emissor_ci_w)::text, '') = '') then
			CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,31, nr_seq_lote_w, null,nm_usuario_p);
		end if;
		
		--33 - CPF nao informado (Dependente menor de 16 anos)
		if (coalesce(nr_cpf_w::text, '') = '') and (ie_maior_dezesseis_w = 'N') and
			((nr_seq_titular_contrato_w IS NOT NULL AND nr_seq_titular_contrato_w::text <> '') or (nr_seq_titular_solic_w IS NOT NULL AND nr_seq_titular_solic_w::text <> '') or (nm_titular_inclusao_w IS NOT NULL AND nm_titular_inclusao_w::text <> '')) then
			CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,33, nr_seq_lote_w, null,nm_usuario_p);
		end if;
		
		--49 - Cartao SUS nao informado
		if (coalesce(nr_cartao_nac_sus_w::text, '') = '') then
			CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w, 49, nr_seq_lote_w, null,nm_usuario_p);
		end if;
		
		--60 CPF nao informado (Dependentes menor de @IDADE anos)
		if (ie_titularidade_w = 'D') then
			if (coalesce(nr_cpf_w::text, '') = '') and (qt_idade_w >= qt_idade_proposta_cpf_w) then
				CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w, 60, nr_seq_lote_w, null,nm_usuario_p);
			end if;
		end if;
	end if;
	
	--5 - ja existe Beneficiario cadastrado no contrato com a pessoa fisica vinculada
	if (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then
	
		qt_benef_w := 0;
		
		if (coalesce(nr_seq_contrato_w,0) <> 0) then
			select	count(1)
			into STRICT	qt_benef_w
			from	pls_segurado
			where	nr_seq_contrato		= nr_seq_contrato_w
			and	cd_pessoa_fisica	= cd_pessoa_fisica_w
			and	coalesce(dt_rescisao::text, '') = '';
		elsif (coalesce(nr_seq_intercambio_w,0) <> 0) then
			select	count(1)
			into STRICT	qt_benef_w
			from	pls_segurado
			where	nr_seq_intercambio	= nr_seq_intercambio_w
			and	cd_pessoa_fisica	= cd_pessoa_fisica_w
			and	coalesce(dt_rescisao::text, '') = '';
		end if;
		
		if (qt_benef_w > 0) then
			CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,5, nr_seq_lote_w, null,nm_usuario_p);
		end if;
	end if;
	
	--7 - Nome de pessoa fisica invalido
	if (coalesce(nm_pessoa_fisica_w::text, '') = '') then
		CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,7, nr_seq_lote_w,null,nm_usuario_p);
	end if;
	
	--8 - Data de nascimento nao informada
	if	((coalesce(dt_nascimento_w::text, '') = '') or (dt_nascimento_w < to_date('01/01/1890','dd/mm/yyyy')) or (dt_nascimento_w > clock_timestamp())) then
		CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,8, nr_seq_lote_w, null,nm_usuario_p);
	end if;
	
	--9 -Nome da mae nao informado
	if (coalesce(nm_mae_w::text, '') = '') then
		CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,9, nr_seq_lote_w, null,nm_usuario_p);
	end if;
	
	--54 - CPF informado eh o mesmo do titular
	if (nr_cpf_w IS NOT NULL AND nr_cpf_w::text <> '') then
		nr_cpf_titular_w := null;
		if (nr_seq_titular_contrato_w IS NOT NULL AND nr_seq_titular_contrato_w::text <> '') then
			select	a.nr_cpf
			into STRICT	nr_cpf_titular_w
			from	pessoa_fisica a,
				pls_segurado b
			where	a.cd_pessoa_fisica = b.cd_pessoa_fisica
			and	b.nr_sequencia = nr_seq_titular_contrato_w;
		elsif (nr_seq_titular_solic_w IS NOT NULL AND nr_seq_titular_solic_w::text <> '')	or (nm_titular_inclusao_w IS NOT NULL AND nm_titular_inclusao_w::text <> '')	then
			select	max(a.nr_cpf)
			into STRICT	nr_cpf_titular_w
			from	pls_inclusao_beneficiario a
			where	a.nr_sequencia = nr_seq_titular_solic_w
			or	upper(a.nm_pessoa_fisica) = upper(nm_titular_inclusao_w);
		end if;
		if (nr_cpf_titular_w IS NOT NULL AND nr_cpf_titular_w::text <> '') and (nr_cpf_titular_w = nr_cpf_w) then
			CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,54, nr_seq_lote_w,null, nm_usuario_p);
		end if;
	end if;	
	
	--15 - Endereco nao informado
	if (coalesce(ds_endereco_w::text, '') = '') then
		CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,15, nr_seq_lote_w, null,nm_usuario_p);
	end if;
	
	--13 - Telefone nao informado
	if (coalesce(nr_telefone_w::text, '') = '') then
		CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,13,  nr_seq_lote_w, null,nm_usuario_p);
	end if;
	
	--10 - Grau de parentesco nao informado
	if (coalesce(nr_seq_parentesco_w::text, '') = '' and ((nr_seq_titular_prop_w IS NOT NULL AND nr_seq_titular_prop_w::text <> '') or (nr_seq_titular_contrato_w IS NOT NULL AND nr_seq_titular_contrato_w::text <> ''))) then
		CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,10, nr_seq_lote_w, null,nm_usuario_p);
	end if;
	
	--11 - Titular nao informado
	if	((coalesce(nr_seq_titular_prop_w::text, '') = '' and coalesce(nr_seq_titular_contrato_w::text, '') = '' and coalesce(nm_titular_inclusao_w::text, '') = '' ) and (nr_seq_parentesco_w IS NOT NULL AND nr_seq_parentesco_w::text <> '') ) then
		CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,11, nr_seq_lote_w, null,nm_usuario_p);
	end if;
	
	--12 - Sexo nao informado
	if (coalesce(ie_sexo_w::text, '') = '') then
		CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,12, nr_seq_lote_w, null,nm_usuario_p);
	end if;
	
	select 	pls_obter_se_uf_existe(sg_estado_w, '1')
	into STRICT 	ie_uf_existe_w
	;
	
	--16 - UF do beneficiario nao informado ou invalido
	if (coalesce(sg_estado_w::text, '') = '') or (ie_uf_existe_w = 'N')then
		CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,16, nr_seq_lote_w, null,nm_usuario_p);
	end if;
	
	-- Nome do beneficiario ou da mae invalido - Apenas para brasileiros (nao inserir com abreviacoes)
	if (coalesce(ie_brasileiro_w,'S') = 'S') then
		ie_nome_benef_invalido_w	:= pls_consistir_letra_unica_pf(nm_pessoa_fisica_w);
		ie_nome_mae_invalido_w		:= pls_consistir_letra_unica_pf(nm_mae_w);
		
		--17 - Nome do Beneficiario ou da mae invalido
		if (ie_nome_mae_invalido_w = 'S') or (ie_nome_benef_invalido_w = 'S') then
			CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,17, nr_seq_lote_w, null,nm_usuario_p);
		end if;
	end if;
	
	--21 - Numero da declaracao de nascido vivo nao informado
	if (coalesce(cd_declaracao_nasc_vivo_w::text, '') = '') and (dt_nascimento_w >= to_date('01/01/2010','dd/mm/yyyy')) then
		CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,21, nr_seq_lote_w,null,nm_usuario_p);
	end if;
	
	--51 - Numero da declaracao de nascido vivo invalido
	if	((cd_declaracao_nasc_vivo_w IS NOT NULL AND cd_declaracao_nasc_vivo_w::text <> '') and
		((obter_se_somente_numero(cd_declaracao_nasc_vivo_w) = 'N') or (length(cd_declaracao_nasc_vivo_w) <> 11))) then
		CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,51, nr_seq_lote_w, null,nm_usuario_p);
	end if;
	
	if (cd_cep_w IS NOT NULL AND cd_cep_w::text <> '') and (nr_endereco_w IS NOT NULL AND nr_endereco_w::text <> '') and (nr_seq_contrato_w IS NOT NULL AND nr_seq_contrato_w::text <> '') then
		begin
		select	coalesce(cd_cgc_estipulante,'X')
		into STRICT	cd_cgc_estip_w
		from	pls_contrato
		where	nr_sequencia	= nr_seq_contrato_w;
		exception
		when others then
			cd_cgc_estip_w	:= 'X';
		end;
		
		if (cd_cgc_estip_w	<> 'X') then
			begin
			select	coalesce(cd_cep,'X'),
				coalesce(nr_endereco,'X')
			into STRICT	cd_cep_estip_w,
				nr_endereco_estip_w
			from	pessoa_juridica
			where	cd_cgc	= cd_cgc_estip_w;
			exception
			when others then
				cd_cep_estip_w		:= 'X';
				nr_endereco_estip_w	:= 'X';
			end;
			
			--18 - Beneficiario com o mesmo endereco da empresa
			if (ie_consiste_endereco_w	= 'S') then
				if (cd_cep_w	= cd_cep_estip_w) and (nr_endereco_w	= nr_endereco_estip_w) then
					CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,18,nr_seq_lote_w,null,nm_usuario_p);
				end if;
			end if;
		end if;
	end if;
	
	ds_erro_w	:= '';
	
	ds_erro_w := pls_consistir_grau_paren_max(nr_seq_inclusao_w, 'I', null, nm_usuario_p, ds_erro_w);
	
	--22 - Grau de parentesco do beneficiario ultrapassou o limite permitido por familia
	if (ds_erro_w IS NOT NULL AND ds_erro_w::text <> '') then
		CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,22,nr_seq_lote_w,null,nm_usuario_p);
	end if;
	
	--24 - CPF informado invalido
	if ((trim(both nr_cpf_w) IS NOT NULL AND (trim(both nr_cpf_w))::text <> '')) and (obter_se_cpf_valido(nr_cpf_w) = 'N') then
		CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,24, nr_seq_lote_w, null,nm_usuario_p);
	end if;
	
	--25 - Cartao do SUS informado invalido
	if ((trim(both nr_cartao_nac_sus_w) IS NOT NULL AND (trim(both nr_cartao_nac_sus_w))::text <> '')) and (sus_obter_se_cns_inconsistente(nr_cartao_nac_sus_w) = 'S') then
		CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,25, nr_seq_lote_w, null,nm_usuario_p);
	end if;
	
	ie_titular_encontrado_w	:= 'S';
	
	--Caso tenha importado o Cartao do titular
	if (cd_cartao_titular_imp_w IS NOT NULL AND cd_cartao_titular_imp_w::text <> '') and (coalesce(nr_seq_titular_contrato_w::text, '') = '') then
		ie_titular_encontrado_w	:= 'N';
	end if;
	
	--inconsistencias destinas apenas para inclusoes por lote
	if (nr_seq_lote_w IS NOT NULL AND nr_seq_lote_w::text <> '') then
		--Caso tenha importado atraves do nome do titular
		if (ie_titular_encontrado_w = 'S') and ((trim(both nm_titular_inclusao_w) IS NOT NULL AND (trim(both nm_titular_inclusao_w))::text <> '')) then
			select	count(1)
			into STRICT	qt_registros_w
			from	pls_inclusao_beneficiario
			where	upper(nm_pessoa_fisica)	= upper(nm_titular_inclusao_w)
			and	nr_seq_lote_inclusao = nr_seq_lote_w;
			
			if (qt_registros_w	= 0) then
				ie_titular_encontrado_w	:= 'N';
			end if;
		end if;
		
		--26 - Titular nao encontrado na base
		if (ie_titular_encontrado_w = 'N') then
			CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,26, nr_seq_lote_w, null,nm_usuario_p);
		end if;
		
		--29 - Matricula familiar nao informada
		if (coalesce(cd_matricula_familia_w::text, '') = '') then
			CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,29, nr_seq_lote_w, null,nm_usuario_p);
		end if;
	end if;
	
	--27 - Nome do titular informado igual ao nome do proprio Beneficiario
	if ((trim(both nm_titular_inclusao_w) IS NOT NULL AND (trim(both nm_titular_inclusao_w))::text <> '')) and (upper(trim(both nm_pessoa_fisica_w)) = upper(trim(both nm_titular_inclusao_w))) then
		CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,27, nr_seq_lote_w, null,nm_usuario_p);
	end if;
	
	--28 - Codigo do municipio IBGE nao informado
	if (coalesce(cd_municipio_ibge_w::text, '') = '') then
		CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,28, nr_seq_lote_w, null,nm_usuario_p);
	end if;
	
	--32 - Motivo de rescisao informado para Beneficiario de Inclusao
	if ((trim(both nr_seq_motivo_cancelamento_w) IS NOT NULL AND (trim(both nr_seq_motivo_cancelamento_w))::text <> '')) and (ie_tipo_operacao_w = 'I') then
		CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,32, nr_seq_lote_w, null,nm_usuario_p);
	end if;
	
	--34 - CPF do vendedor vinculado nao encontrado
	if ((trim(both cd_cpf_vendedor_vinculado_w) IS NOT NULL AND (trim(both cd_cpf_vendedor_vinculado_w))::text <> '')) and (coalesce(nr_seq_vendedor_pf_w::text, '') = '') then
		CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,34, nr_seq_lote_w, null,nm_usuario_p);
	end if;
	
	--35 - Nao foram informados todos os dados referente ao RG (Sera consistido somente quando um dos campos for informado)
	if ((trim(both nr_identidade_w) IS NOT NULL AND (trim(both nr_identidade_w))::text <> '')) or ((trim(both ds_orgao_emissor_ci_w) IS NOT NULL AND (trim(both ds_orgao_emissor_ci_w))::text <> '')) or ((trim(both dt_emissao_ci_w) IS NOT NULL AND (trim(both dt_emissao_ci_w))::text <> '')) or ((trim(both sg_emissora_ci_w) IS NOT NULL AND (trim(both sg_emissora_ci_w))::text <> '')) or ((trim(both nr_seq_pais_w) IS NOT NULL AND (trim(both nr_seq_pais_w))::text <> '')) then
		
		if (coalesce(trim(both nr_identidade_w)::text, '') = '') or (coalesce(trim(both ds_orgao_emissor_ci_w)::text, '') = '') or (coalesce(trim(both dt_emissao_ci_w)::text, '') = '') or (coalesce(trim(both sg_emissora_ci_w)::text, '') = '') or (coalesce(trim(both nr_seq_pais_w)::text, '') = '') then
			CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,35, nr_seq_lote_w, null,nm_usuario_p);
		end if;
	end if;
	
	--36 - Local de atendimento esta bloqueado para repasse
	if (nr_seq_congenere_w IS NOT NULL AND nr_seq_congenere_w::text <> '') then
		select	count(1)
		into STRICT	qt_registros_w
		from	pls_regra_bloqueio_repasse
		where	nr_seq_congenere	= nr_seq_congenere_w
		and	trunc(clock_timestamp(),'dd') between trunc(dt_inicio_bloqueio,'dd') and trunc(coalesce(dt_fim_bloqueio,clock_timestamp()),'dd')
		and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '');
		
		if (qt_registros_w	> 0) then
			CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,36, nr_seq_lote_w, null,nm_usuario_p);
		end if;
	end if;
	
	--37 - Digito do PIS informado incorreto
	if (nr_pis_pasep_w IS NOT NULL AND nr_pis_pasep_w::text <> '') then
		qt_caracteres_pis_w	:= length(nr_pis_pasep_w);
		
		select	calcula_digito('Modulo11',substr(nr_pis_pasep_w, 1, qt_caracteres_pis_w - 1))
		into STRICT	nr_digito_w
		;
		
		cd_pis_pasep_w	:= substr(nr_pis_pasep_w, qt_caracteres_pis_w, qt_caracteres_pis_w);
		
		if (nr_digito_w <> cd_pis_pasep_w) then
			CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,37, nr_seq_lote_w, null,nm_usuario_p);
		end if;
	end if;
	
	select	count(1)
	into STRICT	qt_registros_w
	from	pls_restricao_inclusao_seg
	where	nr_seq_contrato	= nr_seq_contrato_w
	and	clock_timestamp() between coalesce(dt_inicio_vigencia,clock_timestamp()) and coalesce(dt_fim_vigencia,clock_timestamp())
	and	((ie_titularidade	= ie_titularidade_w) or (ie_titularidade = 'A'));
	
	--38 - Contrato do Beneficiario possui restricao de Inclusao
	if (qt_registros_w	> 0) then
		CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,38, nr_seq_lote_w, null,nm_usuario_p);
	end if;
	
	--39 - Beneficiario titular com grau de parentesco informado
	if (ie_titularidade_w = 'T') and (nr_seq_parentesco_w IS NOT NULL AND nr_seq_parentesco_w::text <> '') then
		CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,39, nr_seq_lote_w, null,nm_usuario_p);
	end if;
	
	--40 - Local de atendimento do repasse nao liberado para o contrato
	select	count(1)
	into STRICT	qt_registros_w
	from	pls_contrato_regra_repasse
	where	nr_seq_contrato	= nr_seq_contrato_w
	and	ie_situacao = 'A';
	
	if (qt_registros_w > 0 and (nr_seq_congenere_w IS NOT NULL AND nr_seq_congenere_w::text <> '')) then
		select	count(1)
		into STRICT	qt_registros_w
		from	pls_contrato_regra_repasse
		where	nr_seq_contrato	= nr_seq_contrato_w
		and	((nr_seq_congenere = nr_seq_congenere_w) or (coalesce(nr_seq_congenere::text, '') = ''))
		and	ie_situacao = 'A';
		
		if (qt_registros_w = 0) then
			CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w, 40, nr_seq_lote_w, null,nm_usuario_p);
		end if;
	end if;
	
	ds_erro_w	:= '';
	
	open c02;
	loop
	fetch c02 into
		nr_seq_inclusao_sca_w,
		nr_seq_plano_sca_w,
		ie_lancamento_regra_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin
		
		--42 - SCA nao pode ser incluida ao Beneficiario, devido a restricao de idade, grau de parentesco ou titularidade
		ds_erro_w := pls_consistir_sca_inclusao(nr_seq_inclusao_w, nr_seq_plano_sca_w, ds_erro_w);
		if (ds_erro_w IS NOT NULL AND ds_erro_w::text <> '') then
			CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w, 42, nr_seq_lote_w, nr_seq_inclusao_sca_w, nm_usuario_p);
		end if;

		-- 86 - Municipio de residencia fora da area de atuacao do SCA
		if    	((ie_permite_inc_fora_atuacao_w = 'N') and (pls_obter_se_area_atuacao_prod(nr_seq_plano_sca_w,cd_municipio_ibge_w) = 'N') and (ie_lancamento_regra_w = 'N')) then
			CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w, 86, nr_seq_lote_w, nr_seq_inclusao_sca_w, nm_usuario_p);
		end if;
		end;
	end loop;
	close c02;
	
	--43 - Nome do pai invalido
	if (pls_consistir_letra_unica_pf(nm_pai_w) = 'S') then
		CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,43, nr_seq_lote_w, null,nm_usuario_p);
	end if;
	
	--44 - Municipio de nascimento nao encontrado
	if (ie_brasileiro_w = 'S') and (coalesce(cd_municipio_ibge_nasc_w::text, '') = '') then
		select	max(cd_municipio_ibge)
		into STRICT	cd_municipio_ibge_nasc_aux_w
		from	sus_municipio
		where	upper(ds_municipio) = trim(both upper(ds_municipio_nasc_w))
		and	upper(ds_unidade_federacao) = trim(both upper(sg_estado_nasc_w));
		
		if (coalesce(cd_municipio_ibge_nasc_aux_w::text, '') = '') then
			CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,44, nr_seq_lote_w, null,nm_usuario_p);
		end if;
	end if;
	
	--45 - Faixa salarial nao encontrada/informada
	if (ie_exige_faixa_salarial_w = 'S') then
		if (coalesce(nr_nivel_faixa_salarial_w::text, '') = '') then
			CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,45, nr_seq_lote_w, null,nm_usuario_p);
		elsif (coalesce(nr_seq_faixa_salarial_w,0) = 0) then
			CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,45, nr_seq_lote_w, null,nm_usuario_p);
		end if;
	end if;
	
	--46 - Consistir produto dependente com o do titular
	if (nr_seq_titular_contrato_w IS NOT NULL AND nr_seq_titular_contrato_w::text <> '') then
		select	max(nr_seq_plano)
		into STRICT	nr_seq_plano_titular_w
		from	pls_segurado
		where	nr_sequencia = nr_seq_titular_contrato_w;
		
		if (nr_seq_plano_w <> nr_seq_plano_titular_w) then
			CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,46, nr_seq_lote_w, null,nm_usuario_p);
		end if;
	elsif (nr_seq_titular_solic_w IS NOT NULL AND nr_seq_titular_solic_w::text <> '') then
		select	max(nr_seq_plano)
		into STRICT	nr_seq_plano_titular_w
		from	pls_inclusao_beneficiario
		where	nr_sequencia = nr_seq_titular_solic_w;
		
		if (nr_seq_plano_w <> nr_seq_plano_titular_w) then
			CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,46, nr_seq_lote_w, null,nm_usuario_p);
		end if;
	elsif (nm_titular_inclusao_w IS NOT NULL AND nm_titular_inclusao_w::text <> '') then
		select	max(nr_seq_plano)
		into STRICT	nr_seq_plano_titular_w
		from	pls_inclusao_beneficiario
		where	nm_pessoa_fisica = nm_titular_inclusao_w
		and	nr_seq_lote_inclusao = nr_seq_lote_w;
		
		if (nr_seq_plano_w <> nr_seq_plano_titular_w) then
			CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,46, nr_seq_lote_w, null,nm_usuario_p);
		end if;
	end if;
	
	--47 - Localizacao do Beneficiario invalida para a empresa
	if (nr_seq_localizacao_benef_w IS NOT NULL AND nr_seq_localizacao_benef_w::text <> '') then
		if (nr_seq_contrato_w IS NOT NULL AND nr_seq_contrato_w::text <> '') then
			select	coalesce(cd_cgc_estipulante,'X'),
				nr_contrato
			into STRICT	cd_cgc_estip_w,
				nr_contrato_w
			from	pls_contrato
			where	nr_sequencia = nr_seq_contrato_w;
			
			nr_registro_localizacao_w := 0;

			select	count(1)
			into STRICT	nr_registro_localizacao_w
			from	pls_localizacao_pj a,
				pls_localizacao_benef b
			where (a.cd_cgc = cd_cgc_estip_w or a.nr_contrato = nr_contrato_w)
			and	a.nr_sequencia = b.nr_seq_localizacao_pj
			and	b.nr_sequencia = nr_seq_localizacao_benef_w;
			
			if (nr_registro_localizacao_w  = 0) then
				CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,47, nr_seq_lote_w, null,nm_usuario_p);
			end if;
		end if;
	end if;
	
	--48 - nao foi enviado anexo para a Inclusao
	if (verificar_anexo_inclusao(nr_seq_inclusao_w, nr_seq_lote_w) = 0) then
		CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,48, nr_seq_lote_w, null,nm_usuario_p);
	end if;
	
	--50 - Estado civil nao informado
	if (coalesce(ie_estado_civil_w::text, '') = '') then
		CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,50, nr_seq_lote_w, null,nm_usuario_p);
	end if;
	
	--52 - Data de adesao anterior a data de adesao do titular
	if (nr_seq_titular_contrato_w IS NOT NULL AND nr_seq_titular_contrato_w::text <> '') then
		select 	max(dt_contratacao)
		into STRICT   	dt_contratacao_titular_w
		from   	pls_segurado
		where  	nr_sequencia = nr_seq_titular_contrato_w;
		
		if (trunc(dt_contratacao_w,'dd') < trunc(dt_contratacao_titular_w,'dd')) then
			CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,52, nr_seq_lote_w, null,nm_usuario_p);
		end if;
	elsif (nr_seq_titular_solic_w IS NOT NULL AND nr_seq_titular_solic_w::text <> '') then
		
		select 	max(dt_contratacao)
		into STRICT   	dt_contratacao_titular_w
		from   	pls_inclusao_beneficiario
		where  	nr_sequencia = nr_seq_titular_solic_w;
		
		if (trunc(dt_contratacao_w,'dd') < trunc(dt_contratacao_titular_w,'dd')) then
			CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,52, nr_seq_lote_w,null, nm_usuario_p);
		end if;
	elsif (nm_titular_inclusao_w IS NOT NULL AND nm_titular_inclusao_w::text <> '') then
		select 	max(dt_contratacao)
		into STRICT   	dt_contratacao_titular_w
		from   	pls_inclusao_beneficiario
		where  	nm_pessoa_fisica 	= nm_titular_inclusao_w
		and	nr_seq_lote_inclusao 	= nr_seq_lote_w;
		
		if (trunc(dt_contratacao_w,'dd') < trunc(dt_contratacao_titular_w,'dd')) then
			CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,52, nr_seq_lote_w, null,nm_usuario_p);
		end if;
	end if;
	
	select	count(1)
	into STRICT	qt_contrato_pj_w
	from	pls_contrato
	where	nr_sequencia = nr_seq_contrato_w
	and 	(cd_cgc_estipulante IS NOT NULL AND cd_cgc_estipulante::text <> '');
	
	if (qt_contrato_pj_w > 0) then
		--53 - Data de admissao do titular nao informada ou invalida
		if (coalesce(nr_seq_titular_contrato_w::text, '') = '') and (coalesce(nr_seq_titular_solic_w::text, '') = '') and (coalesce(nm_titular_inclusao_w::text, '') = '') then
			--Titular
			if (coalesce(dt_admissao_w::text, '') = '') or (dt_admissao_w < dt_nascimento_w) or (dt_admissao_w > dt_contratacao_w) then
				CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,53, nr_seq_lote_w,null,nm_usuario_p);
			end if;
		end if;
	end if;	
	
	--55 - Tabela de preco invalida para o plano selecionado ( validacao conforme regra)
	
		qt_tabela_plano_w := 0;
		if (nr_seq_tabela_w IS NOT NULL AND nr_seq_tabela_w::text <> '') and (nr_seq_plano_w IS NOT NULL AND nr_seq_plano_w::text <> '') then
				select	count(1)
				into STRICT	qt_tabela_plano_w
				from 	pls_tabela_preco
				where	nr_seq_plano = nr_seq_plano_w
				and	nr_sequencia = nr_seq_tabela_w
				and (dt_fim_vigencia > clock_timestamp() or
					coalesce(dt_fim_vigencia::text, '') = '' );
		end if;
		if (qt_tabela_plano_w = 0 and (nr_seq_tabela_w IS NOT NULL AND nr_seq_tabela_w::text <> '')) then
			CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,55, nr_seq_lote_w, null,nm_usuario_p);
		end if;
	
	--56 - Motivo de Inclusao nao informado
	if (coalesce(nr_seq_motivo_inclusao_w::text, '') = '') then
		CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,56, nr_seq_lote_w, null,nm_usuario_p);
	end if;
	
	--57 - Data de admissao maior que a data de Inclusao
	if	(dt_admissao_w IS NOT NULL AND dt_admissao_w::text <> '' AND dt_contratacao_w IS NOT NULL AND dt_contratacao_w::text <> '' AND dt_admissao_w > dt_contratacao_w ) then
		CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,57, nr_seq_lote_w, null,nm_usuario_p);
	end if;
	
	--58 Beneficiario com CPF informado ja ativo dentro do grupo contratual (Valido apenas para contratos com grupos contratuais)
	if (nr_cpf_w IS NOT NULL AND nr_cpf_w::text <> '') then
		if (pls_consiste_contrato_grupo(nr_seq_contrato_w, nr_cpf_w, dt_nascimento_w)='S') then
			CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w, 58, nr_seq_lote_w, null,nm_usuario_p);
		end if;
	end if;
	
	--61 - Produto nao informado
	if (coalesce(nr_seq_plano_w::text, '') = '') then
		CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,61, nr_seq_lote_w, null,nm_usuario_p);
	end if;
	
	--62 - Data de casamento nao informada
	if (ie_estado_civil_w = '2') and (coalesce(dt_emissao_cert_casamento_w::text, '') = '') then
		CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,62, nr_seq_lote_w, null,nm_usuario_p);
	end if;
	
	--64 - Data de casamento nao informada (Apenas dependentes)
	begin
	select	ie_grau_parentesco
	into STRICT 	ie_grau_parentesco_w
	from 	grau_parentesco
	where 	nr_sequencia = nr_seq_parentesco_w;
	exception
	when others then
		ie_grau_parentesco_w := null;
	end;

	if (ie_estado_civil_w = '2') and (coalesce(dt_emissao_cert_casamento_w::text, '') = '') and (ie_titularidade_w = 'D') and (ie_grau_parentesco_w = 4) then
		CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w, 64, nr_seq_lote_w, null,nm_usuario_p);
	end if;
	
	--65 - Produto invalido
	if	(nr_seq_contrato_w IS NOT NULL AND nr_seq_contrato_w::text <> '' AND nr_seq_plano_w IS NOT NULL AND nr_seq_plano_w::text <> '') then
		select	count(1)
		into STRICT	qt_plano_contrato_w
		from	pls_contrato_plano a
		where	a.nr_seq_contrato = nr_seq_contrato_w
		and	a.nr_seq_plano	= nr_seq_plano_w;
		
		if (qt_plano_contrato_w = 0) then
			CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w, 65, nr_seq_lote_w, null,nm_usuario_p);
		end if;
	end if;

	--66 - Data de adesao interior a data atual.
	if	((trunc(dt_contratacao_w,'dd') < trunc(clock_timestamp(),'dd')) and (ie_origem_p = 'P')) then
		CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w, 66, nr_seq_lote_w, null,nm_usuario_p);
	end if;
	
	--67 - nao foi enviado anexo para a Inclusao (Beneficiario titular).
	if 	((coalesce(nr_seq_titular_prop_w::text, '') = '') and (coalesce(nr_seq_titular_contrato_w::text, '') = '') and (coalesce(nm_titular_inclusao_w::text, '') = '') and (coalesce(nr_seq_titular_solic_w::text, '') = '')) then
		if (verificar_anexo_inclusao(nr_seq_inclusao_w, nr_seq_lote_w) = 0) then
			CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,67, nr_seq_lote_w, null,nm_usuario_p);
		end if;
	end if;
		
	--68 - Subestipulante informado para o Beneficiario eh diferente do subestipulante do titular
	if	(ie_titularidade_w = 'D' AND nr_seq_subestipulante_w IS NOT NULL AND nr_seq_subestipulante_w::text <> '') then
		if (nr_seq_titular_contrato_w IS NOT NULL AND nr_seq_titular_contrato_w::text <> '') then
			select 	max(nr_seq_subestipulante)
			into STRICT   	nr_seq_subestipulante_tit_w
			from   	pls_segurado
			where  	nr_sequencia = nr_seq_titular_contrato_w;
		elsif (nr_seq_titular_solic_w IS NOT NULL AND nr_seq_titular_solic_w::text <> '') then
			select 	max(nr_seq_subestipulante)
			into STRICT   	nr_seq_subestipulante_tit_w
			from   	pls_inclusao_beneficiario
			where  	nr_sequencia = nr_seq_titular_solic_w;
		elsif (nm_titular_inclusao_w IS NOT NULL AND nm_titular_inclusao_w::text <> '') then
			select 	max(nr_seq_subestipulante)
			into STRICT   	nr_seq_subestipulante_tit_w
			from   	pls_inclusao_beneficiario
			where  	nm_pessoa_fisica 	= nm_titular_inclusao_w
			and	nr_seq_lote_inclusao 	= nr_seq_lote_w;
		end if;

		nr_seq_subestipulante_ww	:= coalesce(nr_seq_subestipulante_tit_w, 0);
		
		if (nr_seq_subestipulante_w <> nr_seq_subestipulante_ww) then
			CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,68, nr_seq_lote_w, null,nm_usuario_p);
		end if;
	end if;
	
	--87-- E-MAIL nao informado
	if (coalesce(ds_email_w::text, '') = '') then
		CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w, 87, nr_seq_lote_w, null, nm_usuario_p);
	end if;

	--69 - CEP nao informado
	if (coalesce(cd_cep_w::text, '') = '') then
		CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,69, nr_seq_lote_w, null,nm_usuario_p);
	elsif (pls_verificar_cep_valido(cd_cep_w) = 'N') then
	--70 - CEP invalido
		CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w,70, nr_seq_lote_w, null,nm_usuario_p);
	end if;
	
	--71 - SCA nao pode ser incluido ao Beneficiario, pois nao esta vinculado ao titular
	if (ie_titularidade_w = 'D') then	
		-- caso titular  for do contrato
		if (nr_seq_titular_contrato_w IS NOT NULL AND nr_seq_titular_contrato_w::text <> '') then
			open c02;
			loop
			fetch c02 into
				nr_seq_inclusao_sca_w,
				nr_seq_plano_sca_w,
				ie_lancamento_regra_w;
			EXIT WHEN NOT FOUND; /* apply on c02 */
			begin
				select	count(1)
				into STRICT	ie_possui_sca_w
				from 	pls_sca_vinculo
				where 	nr_seq_segurado = nr_seq_titular_contrato_w
				and	nr_seq_plano = nr_seq_plano_sca_w;

			if (ie_possui_sca_w = 0) then
				CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w, 71, nr_seq_lote_w, nr_seq_inclusao_sca_w, nm_usuario_p);
				exit;
			end if;
			end;
			end loop;
			close c02;
			
		end if;
		-- caso titular  for da proposta
		if (nr_seq_titular_solic_w IS NOT NULL AND nr_seq_titular_solic_w::text <> '') then
			open c02;
			loop
			fetch c02 into
				nr_seq_inclusao_sca_w,
				nr_seq_plano_sca_w,
				ie_lancamento_regra_w;
			EXIT WHEN NOT FOUND; /* apply on c02 */
			begin
				select	count(1)
				into STRICT	ie_possui_sca_w
				from	pls_inclusao_benef_sca
				where	nr_seq_inclusao_benef	= nr_seq_titular_solic_w
				and	ie_selecao		= 'S'
				and	nr_seq_sca = nr_seq_plano_sca_w;
				
			if (ie_possui_sca_w = 0) then
				CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w, 71, nr_seq_lote_w, nr_seq_inclusao_sca_w, nm_usuario_p);
				exit;
			end if;
			end;
			end loop;
			close c02;
		end if;
	end if;

	--72 - Nao foi enviado anexo de portabilidade
	if (ie_inclusao_portabilidade_w = 'S') then
		select	count(1)
		into STRICT	qt_registros_w
		from	pls_inclusao_anexo a,
			tipo_documentacao b
		where	b.nr_sequencia	= a.nr_seq_tipo_documento
		and	a.nr_seq_inclusao = nr_seq_inclusao_w
		and	coalesce(b.ie_portabilidade_ops,'N') = 'S';
		
		if (qt_registros_w = 0) then
			CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w, 72, nr_seq_lote_w, null,nm_usuario_p);
		end if;
		
		--73 -  Numero protocolo guia ANS nao informado
		if (coalesce(nr_protocolo_portabilidade_w::text, '') = '') then
			CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w, 73, nr_seq_lote_w, null,nm_usuario_p);
		end if;
		
		--74 -  Data emissao protocolo de portabilidade nao informada
		if (coalesce(dt_emissao_prot_portab_w::text, '') = '') then
			CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w, 74, nr_seq_lote_w, null,nm_usuario_p);
		end if;
		
		--75-  Operadora de origem nao informada
		if (coalesce(nr_registro_ops_ans_w::text, '') = '') then
			CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w, 75, nr_seq_lote_w, null,nm_usuario_p);
		end if;
		
		--76-  Registro do produto de origem nao informado
		if (coalesce(nr_registro_plano_origem_w::text, '') = '') then
			CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w, 76, nr_seq_lote_w, null,nm_usuario_p);
		end if;
		
		--77 - Tipo de contratacao do produto de origem nao informada
		if (coalesce(ie_tp_contratacao_plano_orig_w::text, '') = '') then
			CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w, 77, nr_seq_lote_w,null, nm_usuario_p);
		end if;
		
		--78 - Abrangencia geografica do produto de origem nao informada
		if (coalesce(ie_abrangencia_plano_origem_w::text, '') = '') then
			CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w, 78, nr_seq_lote_w,null, nm_usuario_p);
		end if;
		
		--79 - Preco do plano de origem nao informado
		if (coalesce(vl_preco_plano_origem_w::text, '') = '') then
			CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w, 79, nr_seq_lote_w, null,nm_usuario_p);
		end if;
		
		--80 - Data contratacao do produto de origem nao informada
		if (coalesce(dt_inclusao_ops_origem_w::text, '') = '') then
			CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w, 80, nr_seq_lote_w, null,nm_usuario_p);
		end if;
	end if;
	
	--81 - Data Inclusao na operadora nao pode ser informada pela empresa
	if (dt_inclusao_operadora_w IS NOT NULL AND dt_inclusao_operadora_w::text <> '') then
		CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w, 81, nr_seq_lote_w, null,nm_usuario_p);
	end if;
	
	-- 82 - Celular nao informado
	if (coalesce(nr_telefone_celular_w::text, '') = '') then
		CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w, 82, nr_seq_lote_w, null,nm_usuario_p);
	else
		select  sum(qt_cel)
		into STRICT 	qt_celular_w
		from (   SELECT  count(a.nr_sequencia) qt_cel
			from    pls_segurado a,
				pessoa_fisica b
			where   a.cd_pessoa_fisica     	= b.cd_pessoa_fisica
			and     b.nr_telefone_celular  	= nr_telefone_celular_w
			and     a.nr_seq_contrato      	= nr_seq_contrato_w
			and   	b.nr_cpf		<> nr_cpf_w
			
union

			SELECT 	count(d.cd_cgc) qt_cel
			from   	pls_contrato c,
				pessoa_juridica d
			where   c.cd_cgc_estipulante   	= d.cd_cgc
			and     d.nr_telefone          	= nr_telefone_celular_w
			and     c.nr_sequencia         	= nr_seq_contrato_w
			
union

			select  count(e.nr_sequencia) qt_cel
			from    pls_inclusao_beneficiario e
			where   e.nr_seq_contrato 	= nr_seq_contrato_w
			and     e.nr_telefone_celular 	= nr_telefone_celular_w
			and    	e.nr_sequencia 		<> nr_seq_inclusao_w
			and     coalesce(e.nr_seq_proposta::text, '') = ''
			and    	e.ie_status not in ('C', 'R', 'RO')
			and     e.nr_cpf 		<> nr_cpf_w) alias6;
				
		--83 - Celular ja informado para empresa ou outro Beneficiario da empresa
		if (qt_celular_w > 0) then
			CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w, 83, nr_seq_lote_w, null,nm_usuario_p);
		end if;
	end if;
	
	select	count(1)
	into STRICT 		qt_titular_ativo_w
	from 		pls_segurado
	where   nr_sequencia = nr_seq_titular_contrato_w
  and 		(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
	and (coalesce(dt_rescisao::text, '') = '' or dt_rescisao > dt_contratacao_w)
	and 		coalesce(dt_cancelamento::text, '') = '';

	-- 84 - Municipio de residencia fora da area de atuacao do produto
	if	((ie_permite_inc_fora_atuacao_w = 'N') and (pls_obter_se_area_atuacao_prod(nr_seq_plano_w,cd_municipio_ibge_w) = 'N') and qt_titular_ativo_w = 0) then
		CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w, 84, nr_seq_lote_w, null,nm_usuario_p);
	end if;
	
	-- 85 - Celular nao informado (Titular)
	if (coalesce(nr_telefone_celular_w::text, '') = '') and (ie_titularidade_w = 'T') then
		CALL pls_gravar_inconsist_inclusao(nr_seq_inclusao_w, 85, nr_seq_lote_w, null,nm_usuario_p);
	end if;	
	
	select	count(1)
	into STRICT	qt_registros_w
	from	pls_inconsist_incl_benef
	where	nr_seq_solic_inclusao	= nr_seq_inclusao_w
	and 	coalesce(dt_liberacao::text, '') = '';
	
	if (coalesce(ie_forma_liberacao_p, '1') = '1') then
		if (qt_registros_w = 0 and coalesce(nr_seq_titular_solic_w::text, '') = '') then
			if (ie_alt_data_liberacao_w = 'S') then
				update	pls_inclusao_beneficiario
				set	ie_status 			= 'P',
					ie_status_intercambio   	= CASE WHEN nr_seq_intercambio = NULL THEN  ie_status_intercambio  ELSE 'P' END ,
					dt_liberacao_solic_inclusao 	= clock_timestamp(),
					nm_usuario 			= nm_usuario_p,
					dt_atualizacao 			= clock_timestamp()
				where	nr_sequencia			= nr_seq_inclusao_w;
			else
				update	pls_inclusao_beneficiario
				set	ie_status 			= 'P',
					ie_status_intercambio   	= CASE WHEN nr_seq_intercambio = NULL THEN  ie_status_intercambio  ELSE 'P' END ,
					nm_usuario 			= nm_usuario_p,
					dt_atualizacao 			= clock_timestamp()
				where	nr_sequencia			= nr_seq_inclusao_w;
			end if;
		elsif (qt_registros_w = 0 and (nr_seq_titular_solic_w IS NOT NULL AND nr_seq_titular_solic_w::text <> '')) then
			select	max(ie_status)
			into STRICT	ie_status_titular_w
			from	pls_inclusao_beneficiario
			where	nr_sequencia = nr_seq_titular_solic_w;
			
			if (ie_status_titular_w = 'P') then
				if (ie_alt_data_liberacao_w = 'S') then
					update	pls_inclusao_beneficiario
					set	ie_status 			= 'P',
						ie_status_intercambio   	= CASE WHEN nr_seq_intercambio = NULL THEN  ie_status_intercambio  ELSE 'P' END ,
						dt_liberacao_solic_inclusao 	= clock_timestamp(),
						nm_usuario 			= nm_usuario_p,
						dt_atualizacao 			= clock_timestamp()
					where	nr_sequencia			= nr_seq_inclusao_w;
				else
					update	pls_inclusao_beneficiario
					set	ie_status 			= 'P',
						ie_status_intercambio   	= CASE WHEN nr_seq_intercambio = NULL THEN  ie_status_intercambio  ELSE 'P' END ,
						nm_usuario 			= nm_usuario_p,
						dt_atualizacao 			= clock_timestamp()
					where	nr_sequencia			= nr_seq_inclusao_w;
				end if;
			end if;	
		elsif (qt_registros_w > 0) then
			update	pls_inclusao_beneficiario
			set	ie_status			= 'I',
				ie_status_intercambio   	= CASE WHEN nr_seq_intercambio = NULL THEN  ie_status_intercambio  ELSE 'I' END ,
				dt_liberacao_solic_inclusao 	 = NULL,
				nm_usuario 			= nm_usuario_p,
				dt_atualizacao 			= clock_timestamp()
			where	nr_sequencia			= nr_seq_inclusao_w;
		end if;
	else
		-- Aguardando liberacao
		update	pls_inclusao_beneficiario
		set	ie_status			= CASE WHEN qt_registros_w=0 THEN  'AL'  ELSE 'I' END ,
			ie_status_intercambio   	= CASE WHEN nr_seq_intercambio = NULL THEN  ie_status_intercambio  ELSE CASE WHEN qt_registros_w=0 THEN  ie_status_intercambio  ELSE 'I' END  END ,
			dt_liberacao_solic_inclusao 	 = NULL,
			nm_usuario 			= nm_usuario_p,
			dt_atualizacao 			= clock_timestamp()
		where	nr_sequencia			= nr_seq_inclusao_w;
	end if;
	
end if;

select	count(1)
into STRICT	qt_registros_w	
from	pls_inconsist_incl_benef
where	nr_seq_lote = nr_seq_lote_w
and 	coalesce(dt_liberacao::text, '') = '';

if (qt_registros_w > 0) then
	update	pls_lote_inclusao_benef
	set	ie_situacao	= 'I',
		dt_atualizacao	= clock_timestamp(),
		dt_liberacao_lote_inclusao  = NULL,
		nm_usuario	=  nm_usuario_p
	where	nr_sequencia	= nr_seq_lote_w;
else
	update	pls_lote_inclusao_benef
	set	ie_situacao	= CASE WHEN ie_situacao='L' THEN ie_situacao  ELSE 'P' END , -- Se ja estiver liberado, nao volta o status
		dt_atualizacao	= clock_timestamp(),
		nm_usuario	=  nm_usuario_p
	where	nr_sequencia	= nr_seq_lote_w;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_consistir_inclusao_benef ( nr_seq_lote_p bigint, nr_seq_inclusao_p bigint, ie_consiste_sib_p text, ie_consiste_endereco_p text, ie_forma_liberacao_p text, nm_usuario_p text, ie_origem_p text) is  ds_email_w varchar(255) FROM PUBLIC;

