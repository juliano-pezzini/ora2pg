-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE agrupar_cotacao_item ( nr_cot_compra_p bigint, nr_item_cot_compra_p bigint, vl_unit_previsto_p bigint, nm_usuario_p text) AS $body$
DECLARE


cd_material_w			integer;
qt_material_w			double precision;
nr_item_cot_compra_w		integer;
nr_solic_compra_w		bigint;
nr_item_solic_compra_w		integer;
qt_material_solic_w		double precision;
qt_agrupa_w			integer;
qt_agrupado_w			boolean := false;
nr_item_agrupado_w			integer;
cd_estabelecimento_w		smallint;
nr_item_cot_compra_ww		integer;
nr_solic_compra_ww		bigint;
nr_item_solic_compra_ww		integer;
qt_material_ww			double precision;
dt_limite_entrega_w		timestamp;
qt_estab_w			integer;
ds_observacao_w			varchar(255);
nr_seq_central_compra_item_w	bigint;
nr_seq_entrega_w		bigint;
nr_seq_agrup_w			bigint;
nr_item_solic_compra_entr_w	cot_compra_item.nr_item_solic_compra_entr%type;
qt_solic_w              integer;

c01 CURSOR FOR
SELECT	a.nr_item_cot_compra,
	b.cd_estabelecimento,
	a.qt_material,
	a.dt_limite_entrega,
	a.nr_item_solic_compra_entr
from	cot_compra b,
	cot_compra_item a
where	a.nr_cot_compra	= b.nr_cot_compra
and	a.nr_cot_compra	= nr_cot_compra_p
and	a.cd_material	= cd_material_w;

/*busca os outros registros que forao agrupados*/

c02 CURSOR FOR
SELECT	nr_item_cot_compra
from	cot_compra_item
where	nr_cot_compra	= nr_cot_compra_p
and	cd_material	= cd_material_w
and	nr_item_cot_compra <> nr_item_agrupado_w;


BEGIN

select	coalesce(max(cd_material), 0)
into STRICT	cd_material_w
from	cot_compra_item
where	nr_cot_compra	= nr_cot_compra_p
and	nr_item_cot_compra = nr_item_cot_compra_p;

select	count(*)
into STRICT	qt_agrupa_w
from	cot_compra_item
where	nr_cot_compra	= nr_cot_compra_p
and	cd_material	= cd_material_w;

if (qt_agrupa_w > 1) then
	begin
	
	select coalesce(max(a.nr_item_cot_compra),0)
	  into STRICT nr_item_agrupado_w
	  from cot_compra_item a,
	       cot_compra_solic_agrup b
	 where a.nr_cot_compra = b.nr_cot_compra
	   and a.nr_item_cot_compra = b.nr_item_cot_compra
	   and a.nr_cot_compra = nr_cot_compra_p
	   and a.cd_material in (SELECT cd_material
							  from cot_compra_item
							 where nr_cot_compra = nr_cot_compra_p
     						   and nr_item_cot_compra = nr_item_cot_compra_p);

	if (nr_item_agrupado_w = 0) then
		nr_item_agrupado_w := nr_item_cot_compra_p;
	else
		qt_agrupado_w := true;
	end if;
	
	if (not qt_agrupado_w) then
		delete	FROM cot_compra_item_entrega
		where	nr_cot_compra		= nr_cot_compra_p
		and	nr_item_cot_compra	= nr_item_agrupado_w;
	end if;

	open c01;
	loop
	fetch c01 into
		nr_item_cot_compra_w,
		cd_estabelecimento_w,
		qt_material_ww,
		dt_limite_entrega_w,
		nr_item_solic_compra_entr_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		
		if ((nr_item_cot_compra_w = nr_item_agrupado_w and not qt_agrupado_w) or nr_item_cot_compra_w <> nr_item_agrupado_w) then
		
			select	coalesce(obter_estab_solic_compra(nr_solic_compra), cd_estabelecimento_w),
				nr_solic_compra,
				nr_item_solic_compra,
				qt_material,
				nr_seq_central_compra_item
			into STRICT	cd_estabelecimento_w,
				nr_solic_compra_w,
				nr_item_solic_compra_w,
				qt_material_solic_w,
				nr_seq_central_compra_item_w
			from	cot_compra_item b
			where	nr_cot_compra		= nr_cot_compra_p
			and	nr_item_cot_compra	= nr_item_cot_compra_w;	
			
			if (nr_solic_compra_w > 0) then
				cd_estabelecimento_w := coalesce(obter_estab_solic_compra(nr_solic_compra_w), cd_estabelecimento_w);
			elsif (nr_seq_central_compra_item_w > 0) then
				select	coalesce(max(cd_estabelecimento),cd_estabelecimento_w)
				into STRICT	cd_estabelecimento_w
				from	sup_central_compra_item a,
					ordem_compra b
				where	a.nr_ordem_compra = b.nr_ordem_compra
				and	a.nr_sequencia = nr_seq_central_compra_item_w;
			end if;
			
			select	nextval('cot_compra_solic_agrup_seq')
			into STRICT	nr_seq_agrup_w
			;
					
			insert into cot_compra_solic_agrup(
				nr_sequencia,
				cd_estabelecimento,
				dt_atualizacao,
				nm_usuario,
				nr_cot_compra,
				nr_item_cot_compra,
				nr_solic_compra,
				nr_item_solic_compra,
				qt_material,
				nr_seq_central_compra_item,
				nr_item_solic_compra_entr)
			values (	nr_seq_agrup_w,
				cd_estabelecimento_w,
				clock_timestamp(),
				nm_usuario_p,
				nr_cot_compra_p,
				nr_item_agrupado_w,
				nr_solic_compra_w,
				nr_item_solic_compra_w,
				qt_material_solic_w,
				nr_seq_central_compra_item_w,
				nr_item_solic_compra_entr_w);
			
			select	coalesce(max(nr_sequencia),0)
			into STRICT	nr_seq_entrega_w
			from	cot_compra_item_entrega
			where	nr_item_cot_compra	= nr_item_agrupado_w
			and	nr_cot_compra		= nr_cot_compra_p
			and	trunc(dt_entrega,'dd')	= trunc(dt_limite_entrega_w,'dd');
		
			if (nr_Seq_entrega_w = 0) then
				begin
				select	max(ds_observacao)
				into STRICT	ds_observacao_w
				from	solic_compra_item_entrega
				where	nr_solic_compra		= nr_solic_compra_w
				and	nr_item_solic_compra	= nr_item_solic_compra_w
				and	dt_entrega_solicitada	= dt_limite_entrega_w;
				
				select	nextval('cot_compra_item_entrega_seq')
				into STRICT	nr_seq_entrega_w
				;
				
				insert into cot_compra_item_entrega(
					nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_cot_compra,
					nr_item_cot_compra,
					dt_entrega,
					qt_entrega,
					ds_observacao)
				values (	nr_seq_entrega_w,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_cot_compra_p,
					nr_item_agrupado_w,
					dt_limite_entrega_w,
					qt_material_ww,
					ds_observacao_w);
				end;
			else		
				update	cot_compra_item_entrega
				set	qt_entrega		= qt_entrega + qt_material_ww
				where	nr_sequencia		= nr_seq_entrega_w;
			end if;

			insert into cot_compra_solic_agrup_en(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_entrega,
				nr_seq_agrup,
				qt_entrega,
				dt_entrega)
			values (	nextval('cot_compra_solic_agrup_en_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_entrega_w,
				nr_seq_agrup_w,
				qt_material_ww,
				dt_limite_entrega_w);
		
		end if;
		
		end;
	end loop;
	close c01;

	select	sum(qt_material)
	into STRICT	qt_material_w
	from	cot_compra_item
	where	nr_cot_compra	= nr_cot_compra_p
	and	cd_material	= cd_material_w;

	update	cot_compra_item
	set	qt_material		= qt_material_w,
		vl_unit_previsto	= vl_unit_previsto_p,
		nm_usuario		= nm_usuario_p
	where	nr_cot_compra		= nr_cot_compra_p
	and	nr_item_cot_compra	= nr_item_agrupado_w;
	
	update	cot_compra_anexo
	set		nr_cot_compra		= nr_cot_compra_p,
			nr_item_cot_compra	= nr_item_agrupado_w
	where	nr_cot_compra		= nr_cot_compra_p
	and		nr_item_cot_compra  in (SELECT	nr_item_cot_compra
									from	cot_compra_item
									where	nr_cot_compra	= nr_cot_compra_p
									and		cd_material	= cd_material_w);

	/*exclui os registros agrupados e atualiza a informacao na solicitacao*/

	open c02;
	loop
	fetch c02 into
		nr_item_cot_compra_ww;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin

		select	coalesce(max(nr_solic_compra),0),
			coalesce(max(nr_item_solic_compra),0)
		into STRICT	nr_solic_compra_ww,
			nr_item_solic_compra_ww
		from	solic_compra_item
		where	nr_cot_compra		= nr_cot_compra_p
		and	nr_item_cot_compra	= nr_item_cot_compra_ww;

		delete	FROM cot_compra_item
		where	nr_cot_compra		= nr_cot_compra_p
		and	nr_item_cot_compra	= nr_item_cot_compra_ww;

		/*deve ser feito o update, por que na trigger cot_compra_item_delete. limpa estas informacoes*/

		update	solic_compra_item
		set	nr_cot_compra		= nr_cot_compra_p,
			nr_item_cot_compra	= nr_item_agrupado_w
		where	nr_solic_compra		= nr_solic_compra_ww
		and	nr_item_solic_compra	= nr_item_solic_compra_ww;

		end;
	end loop;
	close c02;

	/*verifico se agrupou para mais de um estabelecimento. se sim, limpo o estabelecimento do item*/

	select	count(*)
	into STRICT	qt_estab_w
	from (	SELECT	count(*),
			cd_estabelecimento
		from	cot_compra_solic_agrup
		where	nr_cot_compra = nr_cot_compra_p
		and	nr_item_cot_compra = nr_item_agrupado_w
		group by cd_estabelecimento) alias2;
	if (qt_estab_w > 1) then
		update	cot_compra_item
		set	cd_estab_item		 = NULL
		where	nr_cot_compra		= nr_cot_compra_p
		and	nr_item_cot_compra	= nr_item_agrupado_w;
	end if;

	/*verifico se agrupou para mais de uma solicitacao. se sim, limpo a solicitacao do item*/

    select	count(*)
	into STRICT	qt_solic_w
	from (	SELECT	distinct nr_solic_compra
		from	cot_compra_solic_agrup
		where	nr_cot_compra		= nr_cot_compra_p
		and	nr_item_cot_compra	= nr_item_agrupado_w) alias1;
		
	if (qt_solic_w > 1) then
		update	cot_compra_item
		set	nr_solic_compra		 = NULL,
			nr_item_solic_compra	 = NULL,
			nr_seq_central_compra_item	 = NULL
		where	nr_cot_compra		= nr_cot_compra_p
		and	nr_item_cot_compra 	= nr_item_agrupado_w;
	end if;

	commit;
	end;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE agrupar_cotacao_item ( nr_cot_compra_p bigint, nr_item_cot_compra_p bigint, vl_unit_previsto_p bigint, nm_usuario_p text) FROM PUBLIC;

