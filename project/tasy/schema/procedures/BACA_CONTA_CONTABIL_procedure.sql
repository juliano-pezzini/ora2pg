-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE campos AS (nr_seq_protocolo bigint);


CREATE OR REPLACE PROCEDURE baca_conta_contabil (dt_parametro_P timestamp, nr_seq_protocolo_p bigint) AS $body$
DECLARE

type Vetor is table of campos index by integer;

dt_parametro_inicio_w		timestamp;
dt_parametro_fim_w		timestamp;
nr_seq_protocolo_w		bigint;
i					integer;
k					integer;
Vetor_Proc_w			Vetor;

 
C01 CURSOR FOR 
SELECT distinct a.nr_seq_protocolo 
from 	conta_paciente a 
where a.dt_mesano_referencia between dt_parametro_inicio_w and dt_parametro_fim_w 
and a.ie_status_acerto 		= 2 
and nr_seq_protocolo_p		= 0 
and	(a.nr_seq_protocolo IS NOT NULL AND a.nr_seq_protocolo::text <> '') 

union
 
SELECT distinct a.nr_seq_protocolo 
from 	conta_paciente a 
where a.ie_status_acerto 		= 2 
 and a.nr_seq_protocolo	 	= nr_seq_protocolo_p 
 and nr_seq_protocolo_p		<> 0;


BEGIN 
 
dt_parametro_fim_w         := last_day(Trunc(dt_parametro_p,'dd')) + 86399/86400;
dt_parametro_Inicio_w		 	:= trunc(dt_parametro_p,'month');
 
i	:= 1;
OPEN C01;
LOOP 
FETCH C01 into	nr_seq_protocolo_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	Vetor_Proc_w[i].nr_seq_protocolo := nr_seq_protocolo_w;
	i := i + 1;
	end;
END LOOP;
close c01;
 
i := Vetor_Proc_w.count;
commit;
 
for k in 1.. i loop 
	begin 
	nr_seq_protocolo_w	:= Vetor_Proc_w[k].nr_seq_protocolo;
	/*if	(trunc(k /100,0) = (k / 100)) then 
		insert into logxxxx_tasy values(sysdate, 'Tasy', 999, k); 
	end if;*/
 
	update procedimento_paciente 
	set cd_conta_contabil  = NULL 
	where nr_interno_conta in (SELECT nr_interno_conta 
		from conta_paciente 
		where nr_seq_protocolo = nr_seq_protocolo_w);
 
	update Material_Atend_Paciente 
	set cd_conta_contabil  = NULL 
	where nr_interno_conta in (SELECT nr_interno_conta 
		from conta_paciente 
		where nr_seq_protocolo = nr_seq_protocolo_w);
 
	CALL atualizar_Conta_Contabil(nr_seq_protocolo_w, 'N');
	commit;
	end;
end loop;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE baca_conta_contabil (dt_parametro_P timestamp, nr_seq_protocolo_p bigint) FROM PUBLIC;

