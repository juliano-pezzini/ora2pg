-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_autor_conv_quimioterapia (nr_seq_paciente_setor_p bigint, nr_ciclo_p bigint, nm_usuario_p text, ie_commit_p text, cd_perfil_p bigint default null, cd_estab_p bigint default null) AS $body$
DECLARE


cd_convenio_w		integer;
cd_categoria_w		varchar(10);
cd_plano_w		varchar(10);
cd_usuario_convenio_w	varchar(30);
cd_medico_resp_w		varchar(10);
nr_sequencia_autor_w	bigint;
cd_estabelecimento_w	smallint;
dt_inicio_trat_w		timestamp;
cd_material_w		integer;
qt_dose_w		double precision;
ie_regra_w		varchar(3)	:= null;
ds_retorno_w		varchar(255)	:= null;
ie_bloqueia_agenda_w	varchar(2)	:= 'N';
nr_seq_regra_w		bigint;
nr_seq_estagio_w		bigint;
nr_seq_fabricante_w	bigint;
nr_ciclo_w		smallint;
ds_dia_ciclo_w		varchar(5);
qt_autor_ciclo_w		integer;
dt_prevista_ciclo_w		timestamp;
dt_prevista_w		timestamp;
ds_observacao_w		varchar(2000);
cd_pessoa_fisica_w	varchar(10);
cd_protocolo_w		bigint;
nr_seq_medicacao_w	bigint;
ie_forma_autor_ciclo_w	varchar(255);
ds_observacao_dia_w	varchar(4000);
ds_observacao_ww		varchar(4000);
nr_seq_atendimento_w	bigint;
ie_dt_prev_autor_quimio_w	varchar(255);
ie_dt_vigencia_quimio_w	varchar(255);
nr_seq_classif_w		bigint;
ie_gerar_autor_w		varchar(255)	:= 'S';
ie_tipo_autorizacao_w	varchar(1)	:= '4';
nr_seq_estagio_autor_w	bigint;
ie_gera_data_obs_w	varchar(10)	:= 'S';
cd_estab_usuario_w	smallint;
ie_tipo_guia_padrao_w	varchar(5);
cd_procedimento_w	bigint;
ie_origem_proced_w	bigint;
nr_seq_proc_interno_w	bigint;
qt_procedimento_w	double precision;
ie_gerar_autor_proc_w	varchar(10)	:= 'N';
ie_tipo_autor_proc_w	varchar(1)	:= '3';
nr_seq_autor_proc_w	bigint;
nr_seq_est_autor_pro_w	bigint;
qt_proc_ciclo_w		bigint;
ie_gerar_autor_quimioterapia_w	varchar(5);
qt_mat_autor_w		bigint;
qt_proc_autor_w		bigint;
ie_autor_onc_sem_mat_w	varchar(5);
nr_doc_convenio_w	varchar(20);
nr_seq_estabio_param_w	bigint	:= 0;
cd_unidade_medida_w	varchar(30);
qt_conversao_w		double precision;
ie_via_aplicacao_w	varchar(5);
ie_guia_autor_quimio_w	varchar(1);
ie_conv_medida_autor_quimio_w	convenio_estabelecimento.ie_conv_medida_autor_quimio%type;
ie_regra_apres_autor_quimio_w	convenio_estabelecimento.ie_regra_apres_autor_quimio%type; --OS 768137
qt_lote_anexo_w		integer;
ie_carater_int_quimio_w	varchar(2);
cd_intervalo_w		varchar(7);
ie_glosa_w		regra_ajuste_proc.ie_glosa%type;
nr_seq_regra_preco_w	regra_ajuste_proc.nr_sequencia%type;
ie_autor_mat_conta_w	convenio_estabelecimento.ie_autor_mat_conta%type;
cd_setor_atendimento_w	setor_atendimento.cd_setor_atendimento%type;
cd_estab_pac_atend_w	estabelecimento.cd_estabelecimento%type;
cd_setor_pac_atend_w	setor_atendimento.cd_setor_atendimento%type;
cd_mat_informado_w	material_autorizado.cd_material_informado%type;
ie_tipo_atendimento_w	paciente_setor_convenio.ie_tipo_atendimento%type;
qt_dose_total_quimio_w	double precision;
qt_dose_quimio_w	double precision;
qt_dose_prescr_quimio_w	double precision;
qt_dias_quimio_w	double precision;
IE_REMUN_POR_DIAGNOSTICO_w	convenio_estabelecimento.IE_REMUN_POR_DIAGNOSTICO%type;
dt_parametro_w		timestamp := clock_timestamp();

c01 CURSOR FOR
	SELECT	a.cd_material,
		sum(coalesce(calcula_dose_total_quimio(a.qt_dose_prescricao,a.qt_dias_util,a.cd_intervalo),coalesce(a.qt_dose_prescricao,a.qt_dose))),
		coalesce(a.cd_unid_med_prescr,a.cd_unid_med_dose),
		coalesce(a.ie_via_aplicacao,d.ie_via_aplicacao),
		a.cd_intervalo,
		b.cd_estabelecimento,
		b.cd_setor_atendimento,
		sum(a.qt_dose),
		sum(a.qt_dose_prescricao),
		sum(a.qt_dias_util)
	from	paciente_atendimento b,
		paciente_atend_medic a,
		material	d
	where	a.cd_material		= d.cd_material
	and	coalesce(b.dt_cancelamento::text, '') = ''
	and	coalesce(a.ie_cancelada,'N') <> 'S'
	and	a.nr_seq_atendimento	= b.nr_seq_atendimento
	and	b.nr_seq_paciente		= nr_seq_paciente_setor_p
	and	((ie_forma_autor_ciclo_w	= 'D' and a.nr_seq_atendimento	= nr_seq_atendimento_w) or (ie_forma_autor_ciclo_w	= 'C'))
	and	b.nr_ciclo			= nr_ciclo_p
	and	not exists (	SELECT	1
				from	material_autorizado x
				where	x.nr_sequencia_autor 	= nr_sequencia_autor_w
				and (x.cd_material = a.cd_material or x.cd_material_informado = a.cd_material))
	group by a.cd_material,a.cd_unid_med_prescr,a.cd_unid_med_dose, coalesce(a.ie_via_aplicacao,d.ie_via_aplicacao),a.cd_intervalo,b.cd_estabelecimento,b.cd_setor_atendimento;

c02 CURSOR FOR
	SELECT	ds_dia_ciclo,
		dt_prevista,
		nr_seq_atendimento,
		cd_estabelecimento,
		cd_setor_atendimento
	from	paciente_atendimento
	where	nr_seq_paciente			= nr_seq_paciente_setor_p
	and	nr_ciclo				= nr_ciclo_p
	and 	coalesce(dt_cancelamento::text, '') = ''
	order by	dt_prevista;

c03 CURSOR FOR
	SELECT 	cd_convenio,
		cd_categoria,
		cd_plano_convenio,
		cd_usuario_convenio
	from 	atendimento_paciente_v
	where	cd_pessoa_fisica		= cd_pessoa_fisica_w;

c04 CURSOR FOR
	SELECT	a.cd_procedimento,
		a.ie_origem_proced,
		a.nr_seq_proc_interno,
		CASE WHEN ie_forma_autor_ciclo_w='D' THEN  max(a.qt_procedimento)  ELSE Obter_qt_dias_aplicacao(c.ds_dias_aplicacao) * max(a.qt_procedimento) END ,
		b.cd_estabelecimento,
		b.cd_setor_atendimento
	from	paciente_atendimento b,
		paciente_atend_proc a,
		paciente_protocolo_proc c
	where	a.nr_seq_atendimento		= b.nr_seq_atendimento
	and	b.nr_seq_paciente		= c.nr_seq_paciente
	and	coalesce(a.nr_seq_proc_interno,0)	= coalesce(a.nr_seq_proc_interno,coalesce(c.nr_seq_proc_interno,0))
	and	a.cd_procedimento		= c.cd_procedimento
	and	a.ie_origem_proced		= c.ie_origem_proced
	and	b.nr_seq_paciente		= nr_seq_paciente_setor_p
	and 	coalesce(dt_cancelamento::text, '') = ''
	and	((ie_forma_autor_ciclo_w	= 'D' and a.nr_seq_atendimento	= nr_seq_atendimento_w) or (ie_forma_autor_ciclo_w	= 'C'))
	and	b.nr_ciclo			= nr_ciclo_p
	and	not exists (	SELECT	1
				from	procedimento_autorizado x
				where	x.nr_sequencia_autor 	= nr_seq_autor_proc_w
				and	x.cd_procedimento	= a.cd_procedimento)
	group by a.cd_procedimento,a.ie_origem_proced,a.nr_seq_proc_interno,
		b.cd_estabelecimento,b.cd_setor_atendimento,c.ds_dias_aplicacao;
	
C05 CURSOR FOR
	SELECT	nr_sequencia
	from	autorizacao_convenio
	where	nr_seq_paciente_setor = nr_seq_paciente_setor_p
	and	(ie_tiss_tipo_anexo_autor IS NOT NULL AND ie_tiss_tipo_anexo_autor::text <> '');
	



BEGIN

cd_estab_usuario_w	:= coalesce(cd_estab_p, wheb_usuario_pck.get_cd_estabelecimento);

select	max(a.cd_convenio),
	max(a.cd_categoria),
	max(a.cd_plano),
	max(a.cd_usuario_convenio),
	max(b.cd_medico_resp),
	max(b.cd_estabelecimento),
	max(b.dt_inicio_trat),
	max(b.cd_pessoa_fisica),
	max(b.cd_protocolo),
	max(b.nr_seq_medicacao),
	max(b.cd_setor_atendimento),
	max(a.ie_tipo_atendimento)
into STRICT	cd_convenio_w,
	cd_categoria_w,
	cd_plano_w,
	cd_usuario_convenio_w,
	cd_medico_resp_w,
	cd_estabelecimento_w,
	dt_inicio_trat_w,
	cd_pessoa_fisica_w,
	cd_protocolo_w,
	nr_seq_medicacao_w,
	cd_setor_atendimento_w,
	ie_tipo_atendimento_w
from	paciente_setor b,
	paciente_setor_convenio a
where	a.nr_seq_paciente	= b.nr_seq_paciente
and	a.nr_seq_paciente	= nr_seq_paciente_setor_p;



select	coalesce(max(ie_forma_autor_quimioterapia),'C'),
	coalesce(max(ie_dt_prev_autor_quimio),'N'),
	coalesce(max(ie_dt_vigencia_autor_quimio),'S'),
	coalesce(max(ie_gerar_autor_quimioterapia),'S'),
	coalesce(max(ie_guia_autor_quimio),'S'),
	coalesce(max(ie_conv_medida_autor_quimio),'S'),
	coalesce(max(ie_autor_mat_conta),'N'),
	coalesce(max(ie_regra_apres_autor_quimio),'N'),
	coalesce(max(IE_REMUN_POR_DIAGNOSTICO),'N')
into STRICT	ie_forma_autor_ciclo_w,
	ie_dt_prev_autor_quimio_w,
	ie_dt_vigencia_quimio_w,
	ie_gerar_autor_quimioterapia_w,
	ie_guia_autor_quimio_w,
	ie_conv_medida_autor_quimio_w,
	ie_autor_mat_conta_w,
	ie_regra_apres_autor_quimio_w,
	IE_REMUN_POR_DIAGNOSTICO_w
from	convenio_estabelecimento
where	cd_convenio		= cd_convenio_w
and	cd_estabelecimento	= cd_estabelecimento_w;

select	coalesce(max(ie_autor_onc_sem_mat),'N'),
	max(ie_carater_int_quimio)
into STRICT	ie_autor_onc_sem_mat_w,
	ie_carater_int_quimio_w
from	parametro_faturamento
where	cd_estabelecimento	= cd_estabelecimento_w;

--OS 380178
if (coalesce(ie_dt_prev_autor_quimio_w,'N') = 'X') then
	dt_inicio_trat_w := null;
end if;

/*lhalves OS262197 10/11/2010*/

if (cd_protocolo_w IS NOT NULL AND cd_protocolo_w::text <> '') then
	select 	coalesce(max(ie_forma_autor_quimio),ie_forma_autor_ciclo_w)
	into STRICT 	ie_forma_autor_ciclo_w
	from 	protocolo
	where	cd_protocolo	= cd_protocolo_w;
end if;

if (coalesce(cd_convenio_w::text, '') = '') then
	open c03;
	loop
	fetch c03 into
		cd_convenio_w,
		cd_categoria_w,
		cd_plano_w,
		cd_usuario_convenio_w;
	EXIT WHEN NOT FOUND; /* apply on c03 */
	end loop;
	close c03;
end if;


if (cd_convenio_w IS NOT NULL AND cd_convenio_w::text <> '') and (nr_ciclo_p IS NOT NULL AND nr_ciclo_p::text <> '') and (coalesce(ie_gerar_autor_quimioterapia_w,'S') = 'S')then


	nr_seq_classif_w := obter_param_usuario(281, 824, coalesce(cd_perfil_p, obter_perfil_ativo), nm_usuario_p, cd_estab_usuario_w, nr_seq_classif_w);
	ie_gerar_autor_w := obter_param_usuario(281, 385, coalesce(cd_perfil_p, obter_perfil_ativo), nm_usuario_p, cd_estab_usuario_w, ie_gerar_autor_w);
	ie_tipo_autorizacao_w := obter_param_usuario(281, 854, coalesce(cd_perfil_p, obter_perfil_ativo), nm_usuario_p, cd_estab_usuario_w, ie_tipo_autorizacao_w);
	ie_gera_data_obs_w := obter_param_usuario(281, 1077, coalesce(cd_perfil_p, obter_perfil_ativo), nm_usuario_p, cd_estab_usuario_w, ie_gera_data_obs_w);
	ie_tipo_guia_padrao_w := obter_param_usuario(281, 1098, coalesce(cd_perfil_p, obter_perfil_ativo), nm_usuario_p, cd_estab_usuario_w, ie_tipo_guia_padrao_w);
	ie_gerar_autor_proc_w := obter_param_usuario(281, 1168, coalesce(cd_perfil_p, obter_perfil_ativo), nm_usuario_p, cd_estab_usuario_w, ie_gerar_autor_proc_w);
	
	nr_seq_estabio_param_w := obter_param_usuario(3004, 176, coalesce(cd_perfil_p, obter_perfil_ativo), nm_usuario_p, cd_estab_usuario_w, nr_seq_estabio_param_w);
	
	
	if	ie_remun_por_diagnostico_w = 'S' then
	
		
		select	max(x.nr_seq_estagio)
		into STRICT	nr_seq_estagio_w
		from	autorizacao_convenio x,
			estagio_autorizacao y
		where	x.cd_pessoa_fisica 	= cd_pessoa_fisica_w
		and	x.cd_estabelecimento    = cd_estab_usuario_w
		and	x.nr_seq_estagio 	= y.nr_sequencia
		and	y.ie_interno     	= '10'
		and	x.ie_tipo_autorizacao   = '7'
		and	y.ie_utiliza_modelo_remun = 'S'
		and	dt_parametro_w between x.dt_inicio_vigencia and coalesce(x.dt_fim_vigencia,dt_parametro_w);
	
	end if;
	
	if	coalesce(nr_seq_estagio_w::text, '') = '' then
	
		select	min(nr_sequencia)
		into STRICT	nr_seq_estagio_w
		from	estagio_autorizacao a
		where	a.cd_empresa	= obter_empresa_estab(cd_estabelecimento_w)
		and	a.ie_situacao	= 'A'
		and	a.ie_interno	= '1';		
		
		if (coalesce(nr_seq_estabio_param_w,0) > 0) then	
			nr_seq_estagio_w	:= nr_seq_estabio_param_w;
		end if;
	
	end if;
	
	ds_observacao_w	:= Wheb_mensagem_pck.get_texto(308492) || ' ' /*'Protocolo: '*/||substr(obter_desc_protocolo(cd_protocolo_w),1,255)||chr(13)
					|| Wheb_mensagem_pck.get_texto(308493) || ': ' /*'Medicacao: '*/||substr(obter_desc_protocolo_medic(nr_seq_medicacao_w,cd_protocolo_w),1,50)||chr(13);
	ds_observacao_w	:= ds_observacao_w|| Wheb_mensagem_pck.get_texto(308494) || ' ' /*'Quimioterapia - Ciclo:'*/ || nr_ciclo_p;

	-- dsantos em 15/10/2009 -> quando a autorizacao do ciclo for gerada por dia, precisa do Prot., medicacao, nro de ciclo, e o dia referente apenas a aquela autorizacao.
	ds_observacao_ww	:= ds_observacao_w;

	open c02;
	loop
	fetch c02 into
		ds_dia_ciclo_w,
		dt_prevista_w,
		nr_seq_atendimento_w,
		cd_estab_pac_atend_w,
		cd_setor_pac_atend_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
	
			if (coalesce(cd_estab_pac_atend_w,cd_estabelecimento_w) <> cd_estabelecimento_w) then
							
				cd_estabelecimento_w := cd_estab_pac_atend_w;
				
			end if;
			
			if (coalesce(ie_gera_data_obs_w,'S') = 'S') then
				begin
				ds_observacao_w		:= substr(ds_observacao_w || chr(13) || ' ' || Wheb_mensagem_pck.get_texto(308496) || ' '/*' Dia: '*/ || ds_dia_ciclo_w ||  ' ' || dt_prevista_w,1,2000);
				-- dsantos em 15/10/2009 -> quando a autorizacao do ciclo for gerada por dia, precisa do Prot., medicacao, nro de ciclo, e o dia referente apenas a aquela autorizacao.
				ds_observacao_dia_w	:= substr(ds_observacao_ww || chr(13) || ' ' || Wheb_mensagem_pck.get_texto(308496) || ' ' /*' Dia: '*/ || ds_dia_ciclo_w ||  ' ' || dt_prevista_w,1,4000);
				end;
			else
				begin
				ds_observacao_w		:= substr(ds_observacao_w || chr(13) || ' ' || Wheb_mensagem_pck.get_texto(308496) || ' ' /*' Dia: '*/ || ds_dia_ciclo_w,1,2000);
				ds_observacao_dia_w	:= substr(ds_observacao_ww || chr(13) || ' ' || Wheb_mensagem_pck.get_texto(308496) || ' ' /*' Dia: '*/ || ds_dia_ciclo_w,1,4000);
				end;
			end if;
			-- dsantos  em 28/09/2009 - OS168773 -> para gerar autorizacao por dia, nao por ciclo.
			if (coalesce(ie_forma_autor_ciclo_w,'C') = 'D') then

				if (ie_dt_prev_autor_quimio_w = 'S') then
					dt_inicio_trat_w	:= dt_prevista_w;
				end if;

				if (ie_dt_vigencia_quimio_w = 'N') then
					dt_prevista_ciclo_w	:= null;
				else
					dt_prevista_ciclo_w	:= dt_prevista_w;
				end if;
				
				select	coalesce(max(a.nr_sequencia),0),
					coalesce(max(a.nr_seq_estagio),0)
				into STRICT	nr_sequencia_autor_w,
					nr_seq_estagio_autor_w
				from	autorizacao_convenio a,
					estagio_autorizacao b
				where	a.nr_seq_estagio		= b.nr_sequencia
				and	b.ie_interno 			not in ('70','90')
				and	a.nr_ciclo 			= nr_ciclo_p
				and	a.nr_seq_paciente_setor 	= nr_seq_paciente_setor_p
				and	((a.nr_seq_paciente 		= nr_seq_atendimento_w) or (coalesce(nr_seq_atendimento_w::text, '') = ''));
				
				if (nr_sequencia_autor_w = 0) then
					begin
					select	nextval('autorizacao_convenio_seq')
					into STRICT	nr_sequencia_autor_w
					;
					
					if (ie_guia_autor_quimio_w = 'S') then
						nr_doc_convenio_w := obter_guia_conv_pac_quimio(nr_seq_paciente_setor_p, nr_doc_convenio_w);
					end if;
	
					insert	into autorizacao_convenio(nr_seq_paciente,		nr_seq_autorizacao,	cd_convenio,		cd_autorizacao,
						dt_autorizacao,			dt_inicio_vigencia,	dt_atualizacao,		nm_usuario,
						dt_fim_vigencia,		nm_responsavel,		ds_observacao,		cd_senha,
						cd_procedimento_principal,	ie_origem_proced,	dt_pedido_medico,	cd_medico_solicitante,
						ie_tipo_guia,			qt_dia_autorizado,	nr_prescricao,		dt_envio,
						dt_retorno,			nr_seq_estagio,		ie_tipo_autorizacao,	ie_tipo_dia,
						cd_tipo_acomodacao,		nr_sequencia,		qt_dia_solicitado,	nr_atendimento,
						dt_entrada_prevista,		nr_ciclo,		nr_seq_paciente_setor,	ds_dia_ciclo,
						nr_seq_classif,			cd_pessoa_fisica,	cd_estabelecimento,	ie_tiss_tipo_anexo_autor,
						ie_carater_int_tiss,		cd_setor_origem, dt_atualizacao_nrec, nm_usuario_nrec)
					values (nr_seq_atendimento_w,		null,			cd_convenio_w,		nr_doc_convenio_w,
						clock_timestamp(),			dt_prevista_ciclo_w,	clock_timestamp(),		nm_usuario_p,
						null,				null,			ds_observacao_dia_w,	null,
						null,				null,			null,			cd_medico_resp_w,
						ie_tipo_guia_padrao_w,		null,			null,			null,
						null,				nr_seq_estagio_w,	ie_tipo_autorizacao_w, ie_forma_autor_ciclo_w,
						null,				nr_sequencia_autor_w,	null,			null,
						dt_inicio_trat_w,		nr_ciclo_p,		nr_seq_paciente_setor_p,ds_dia_ciclo_w,
						nr_seq_classif_w,		cd_pessoa_fisica_w, 	cd_estabelecimento_w,	'2',
						ie_carater_int_quimio_w,	coalesce(cd_setor_pac_atend_w,cd_setor_atendimento_w), clock_timestamp(), nm_usuario_p);
						
					nr_seq_estagio_autor_w := nr_seq_estagio_w;
					
					if (nr_seq_estagio_autor_w IS NOT NULL AND nr_seq_estagio_autor_w::text <> '') then
						CALL atualizar_autorizacao_convenio(nr_sequencia_autor_w,nm_usuario_p,nr_seq_estagio_autor_w,'N','N','S');
					end if;
					
					end;
				end if;
				
				/* Consistir e gerar materiais */

				if (coalesce(nr_sequencia_autor_w,0) > 0) then
					begin	

					if (coalesce(ie_regra_apres_autor_quimio_w,'N') = 'N') then
					
						open c01;
						loop
						fetch c01 into
							cd_material_w,
							qt_dose_w,
							cd_unidade_medida_w,
							ie_via_aplicacao_w,
							cd_intervalo_w,
							cd_estab_pac_atend_w,
							cd_setor_pac_atend_w,
							qt_dose_quimio_w,
							qt_dose_prescr_quimio_w,
							qt_dias_quimio_w;
						EXIT WHEN NOT FOUND; /* apply on c01 */
						
						qt_dose_total_quimio_w := qt_dose_w;
						
						if (coalesce(cd_estab_pac_atend_w,cd_estabelecimento_w) <> cd_estabelecimento_w) then
							
							cd_estabelecimento_w := cd_estab_pac_atend_w;
							
						end if;
						
							
							
							if (ie_autor_mat_conta_w = 'S') and (cd_material_w IS NOT NULL AND cd_material_w::text <> '') then								
								cd_mat_informado_w:= cd_material_w;								
								cd_material_w	:= obter_material_conta(cd_estabelecimento_w,
													cd_convenio_w,
													cd_categoria_w,
													cd_material_w,
													cd_material_w,
													cd_material_w,
													cd_plano_w,
													coalesce(cd_setor_pac_atend_w,cd_setor_atendimento_w),
													clock_timestamp(),
													null, --Local estoque
													null);
							end if;
						
						
						
							if (ie_conv_medida_autor_quimio_w = 'S') then
							
								select	coalesce(max(qt_conversao),1)
								into STRICT	qt_conversao_w
								from	material_conversao_unidade
								where	cd_material		= cd_material_w
								and	cd_unidade_medida	= cd_unidade_medida_w;						
								
								qt_dose_w	:= dividir(qt_dose_w,qt_conversao_w);
								
							end if;
							
																		
							
							SELECT * FROM consiste_mat_plano_convenio(	cd_convenio_w, cd_plano_w, cd_material_w, null, coalesce(cd_setor_pac_atend_w,cd_setor_atendimento_w), ds_retorno_w, ie_bloqueia_agenda_w, ie_regra_w, nr_seq_regra_w, qt_dose_w, coalesce(dt_inicio_trat_w,clock_timestamp()), null, cd_estabelecimento_w, null, ie_tipo_atendimento_w) INTO STRICT ds_retorno_w, ie_bloqueia_agenda_w, ie_regra_w, nr_seq_regra_w;
		
							if	((ie_regra_w in (3,6)) or (ie_gerar_autor_w = 'T')) and (coalesce(nr_seq_estagio_autor_w,0) = coalesce(nr_seq_estagio_w,0))	then
								
		
								select	max(nr_seq_fabric)
								into STRICT	nr_seq_fabricante_w
								from	material
								where	cd_material = cd_material_w;
		
								insert	into material_autorizado(nr_sequencia,
									dt_atualizacao,
									nm_usuario,
									dt_atualizacao_nrec,
									nm_usuario_nrec,
									nr_sequencia_autor,
									cd_material,
									qt_solicitada,
									nr_seq_fabricante,
									qt_autorizada,
									ie_via_aplicacao,
									cd_intervalo_medic_quimio,
									cd_material_informado,
									qt_dose_quimio,
									qt_dose_total_quimio,
									qt_dose_prescr_quimio,
									qt_dias_quimio)
								values (nextval('material_autorizado_seq'),
									clock_timestamp(),
									nm_usuario_p,
									clock_timestamp(),
									nm_usuario_p,
									nr_sequencia_autor_w,
									cd_material_w,
									qt_dose_w,
									nr_seq_fabricante_w,
									0,
									ie_via_aplicacao_w,
									cd_intervalo_w,
									cd_mat_informado_w,
									qt_dose_quimio_w,
									qt_dose_total_quimio_w,
									qt_dose_prescr_quimio_w,
									qt_dias_quimio_w);
							end if;
						end loop;
						close c01;
					else											
						CALL GERAR_APRESENT_AUTOR_ONC(nr_seq_paciente_setor_p,
									nr_seq_atendimento_w,
									nr_ciclo_p,
									ie_forma_autor_ciclo_w,
									nr_sequencia_autor_w,
									cd_convenio_w,
									cd_estabelecimento_w,
									nm_usuario_p);						
					end if;					
					
					end;
					
					if (ie_autor_onc_sem_mat_w = 'S') then
					
						begin
						select	count(*)
						into STRICT	qt_proc_autor_w
						from	procedimento_autorizado
						where	nr_sequencia_autor = nr_sequencia_autor_w;
						exception
						when others then
							qt_proc_autor_w := 0;
						end;
						
						begin
						select	count(*)
						into STRICT	qt_mat_autor_w
						from	material_autorizado
						where	nr_sequencia_autor = nr_sequencia_autor_w;
						exception
						when others then
							qt_mat_autor_w := 0;
						end;
						
						if (coalesce(qt_mat_autor_w,0) + coalesce(qt_proc_autor_w,0) = 0) then
							
							delete
							from	autorizacao_convenio
							where	nr_sequencia = nr_sequencia_autor_w;
							
						end if;
					
					end if;
					
				end if;
				
				if (coalesce(ie_gerar_autor_proc_w,'N') = 'S') then
					begin
					
					select	coalesce(max(nr_sequencia),0),
						coalesce(max(nr_seq_estagio),0)
					into STRICT	nr_seq_autor_proc_w,
						nr_seq_est_autor_pro_w
					from	autorizacao_convenio
					where	nr_ciclo 			= nr_ciclo_p
					and	nr_seq_paciente_setor 	= nr_seq_paciente_setor_p
					and	((nr_seq_paciente 		= nr_seq_atendimento_w) or (coalesce(nr_seq_atendimento_w::text, '') = ''))
					and	ie_tipo_autorizacao = 3;
					
					begin
					select	count(*)
					into STRICT	qt_proc_ciclo_w
					from	paciente_atendimento b,
						paciente_atend_proc a
					where	a.nr_seq_atendimento	= b.nr_seq_atendimento
					and	b.nr_seq_paciente		= nr_seq_paciente_setor_p
					and	((ie_forma_autor_ciclo_w	= 'D' and a.nr_seq_atendimento	= nr_seq_atendimento_w) or (ie_forma_autor_ciclo_w	= 'C'))
					and	b.nr_ciclo			= nr_ciclo_p
					and	not exists (	SELECT	1
								from	procedimento_autorizado x
								where	x.nr_sequencia_autor 	= nr_seq_autor_proc_w
								and	x.cd_procedimento	= a.cd_procedimento);
					exception
					when others then
						qt_proc_ciclo_w := 0;
					end;					
					
					if (nr_seq_autor_proc_w = 0) and (qt_proc_ciclo_w > 0) then
						begin
						select	nextval('autorizacao_convenio_seq')
						into STRICT	nr_seq_autor_proc_w
						;
						
						if (ie_guia_autor_quimio_w = 'S') then
							nr_doc_convenio_w := obter_guia_conv_pac_quimio(nr_seq_paciente_setor_p, nr_doc_convenio_w);
						end if;
						
						insert	into autorizacao_convenio(nr_seq_paciente,		nr_seq_autorizacao,	cd_convenio,		cd_autorizacao,
							dt_autorizacao,			dt_inicio_vigencia,	dt_atualizacao,		nm_usuario,
							dt_fim_vigencia,		nm_responsavel,		ds_observacao,		cd_senha,
							cd_procedimento_principal,	ie_origem_proced,	dt_pedido_medico,	cd_medico_solicitante,
							ie_tipo_guia,			qt_dia_autorizado,	nr_prescricao,		dt_envio,
							dt_retorno,			nr_seq_estagio,		ie_tipo_autorizacao,	ie_tipo_dia,
							cd_tipo_acomodacao,		nr_sequencia,		qt_dia_solicitado,	nr_atendimento,
							dt_entrada_prevista,		nr_ciclo,		nr_seq_paciente_setor,	ds_dia_ciclo,
							nr_seq_classif,			cd_pessoa_fisica, 	cd_estabelecimento,	ie_tiss_tipo_anexo_autor,
							ie_carater_int_tiss,		cd_setor_origem, dt_atualizacao_nrec, nm_usuario_nrec)
						values (nr_seq_atendimento_w,		null,			cd_convenio_w,		nr_doc_convenio_w,
							clock_timestamp(),			dt_prevista_ciclo_w,	clock_timestamp(),		nm_usuario_p,
							null,				null,			ds_observacao_dia_w,	null,
							null,				null,			null,			cd_medico_resp_w,
							ie_tipo_guia_padrao_w,		null,			null,			null,
							null,				nr_seq_estagio_w,	ie_tipo_autor_proc_w, ie_forma_autor_ciclo_w,
							null,				nr_seq_autor_proc_w,	null,			null,
							dt_inicio_trat_w,		nr_ciclo_p,		nr_seq_paciente_setor_p,ds_dia_ciclo_w,
							nr_seq_classif_w,		cd_pessoa_fisica_w, 	cd_estabelecimento_w,	'2',
							ie_carater_int_quimio_w,	coalesce(cd_setor_pac_atend_w,cd_setor_atendimento_w), clock_timestamp(), nm_usuario_p);
							
						nr_seq_est_autor_pro_w := nr_seq_estagio_w;
						
						if (nr_seq_estagio_w IS NOT NULL AND nr_seq_estagio_w::text <> '') then
							CALL atualizar_autorizacao_convenio(nr_seq_autor_proc_w,nm_usuario_p,nr_seq_est_autor_pro_w,'N','N','S');
						end if;
						end;
					end if;
					
					open C04;
					loop
					fetch C04 into	
						cd_procedimento_w,
						ie_origem_proced_w,
						nr_seq_proc_interno_w,
						qt_procedimento_w,
						cd_estab_pac_atend_w,
						cd_setor_pac_atend_w;
					EXIT WHEN NOT FOUND; /* apply on C04 */
						begin
						
						if (coalesce(cd_estab_pac_atend_w,cd_estabelecimento_w) <> cd_estabelecimento_w) then
							
							cd_estabelecimento_w := cd_estab_pac_atend_w;
				
						end if;
						
						SELECT * FROM consiste_plano_convenio(null, cd_convenio_w, cd_procedimento_w, ie_origem_proced_w, coalesce(dt_inicio_trat_w,clock_timestamp()), qt_procedimento_w, null, cd_plano_w, null, ds_retorno_w, coalesce(cd_setor_pac_atend_w,cd_setor_atendimento_w), null, ie_regra_w, null, nr_seq_regra_w, nr_seq_proc_interno_w, null, cd_estabelecimento_w, null, null, cd_pessoa_fisica_w, ie_glosa_w, nr_seq_regra_preco_w) INTO STRICT ds_retorno_w, ie_regra_w, nr_seq_regra_w, ie_glosa_w, nr_seq_regra_preco_w;
						
						if (ie_regra_w in ('3','6','7')) and (coalesce(nr_seq_est_autor_pro_w,0) = coalesce(nr_seq_estagio_w,0))	then
		
							insert	into procedimento_autorizado(cd_procedimento,
									ie_origem_proced,
									qt_solicitada,
									qt_autorizada,
									dt_atualizacao,
									nm_usuario,
									nr_sequencia_autor,
									nr_sequencia,
									nr_seq_proc_interno,
									ds_observacao)
								values (cd_procedimento_w,
									ie_origem_proced_w,
									qt_procedimento_w,
									0,
									clock_timestamp(),
									nm_usuario_p,
									nr_seq_autor_proc_w,
									nextval('procedimento_autorizado_seq'),
									nr_seq_proc_interno_w,
									Wheb_mensagem_pck.get_texto(308498) || ' ' /*'Procedimento gerado para o ciclo '*/||nr_ciclo_p);
									
						end if;
						end;
					end loop;
					close C04;
					
					if (ie_autor_onc_sem_mat_w = 'S') then
						
						begin
						select	count(*)
						into STRICT	qt_proc_autor_w
						from	procedimento_autorizado
						where	nr_sequencia_autor = nr_seq_autor_proc_w;
						exception
						when others then
							qt_proc_autor_w := 0;
						end;
						
						begin
						select	count(*)
						into STRICT	qt_mat_autor_w
						from	material_autorizado
						where	nr_sequencia_autor = nr_seq_autor_proc_w;
						exception
						when others then
							qt_mat_autor_w := 0;
						end;
						
						if (coalesce(qt_mat_autor_w,0) + coalesce(qt_proc_autor_w,0) = 0) then
							
							delete
							from	autorizacao_convenio
							where	nr_sequencia = nr_seq_autor_proc_w;
							
						end if;
					
					end if;
					
					
					end;
				end if;
			
			end if;

	end loop;
	close c02;

	if (coalesce(ie_forma_autor_ciclo_w,'C') = 'C') then

		select	min(dt_prevista)
		into STRICT	dt_prevista_ciclo_w
		from	paciente_atendimento
		where	nr_seq_paciente	= nr_seq_paciente_setor_p
		and	nr_ciclo		= nr_ciclo_p
		and 	coalesce(dt_cancelamento::text, '') = '';

		if (ie_dt_prev_autor_quimio_w = 'S') then
			dt_inicio_trat_w	:= dt_prevista_ciclo_w;
		end if;

		if (ie_dt_vigencia_quimio_w = 'N') then
			dt_prevista_ciclo_w	:= null;
		else
			dt_prevista_ciclo_w	:= dt_prevista_ciclo_w;
		end if;
		
		select	coalesce(max(a.nr_sequencia),0),
			coalesce(max(a.nr_seq_estagio),0)
		into STRICT	nr_sequencia_autor_w,
			nr_seq_estagio_autor_w
		from	autorizacao_convenio a,
			estagio_autorizacao b
		where	a.nr_seq_estagio		= b.nr_sequencia
		and	b.ie_interno	not in ('70','90')
		and	a.nr_ciclo 			= nr_ciclo_p
		and	a.nr_seq_paciente_setor 	= nr_seq_paciente_setor_p
		and	a.ie_tipo_autorizacao		= ie_tipo_autorizacao_w;
		
		if (nr_sequencia_autor_w = 0) then
			begin
			select	nextval('autorizacao_convenio_seq')
			into STRICT	nr_sequencia_autor_w
			;
			
			if (ie_guia_autor_quimio_w = 'S') then
				nr_doc_convenio_w := obter_guia_conv_pac_quimio(nr_seq_paciente_setor_p, nr_doc_convenio_w);
			end if;
	
			insert	into autorizacao_convenio(nr_seq_paciente_setor,		nr_seq_autorizacao,	cd_convenio,		cd_autorizacao,
				dt_autorizacao,			dt_inicio_vigencia,	dt_atualizacao,		nm_usuario,
				dt_fim_vigencia,		nm_responsavel,		ds_observacao,		cd_senha,
				cd_procedimento_principal,	ie_origem_proced,	dt_pedido_medico,	cd_medico_solicitante,
				ie_tipo_guia,			qt_dia_autorizado,	nr_prescricao,		dt_envio,
				dt_retorno,			nr_seq_estagio,		ie_tipo_autorizacao,	ie_tipo_dia,
				cd_tipo_acomodacao,		nr_sequencia,		qt_dia_solicitado,	nr_atendimento,
				dt_entrada_prevista,		nr_ciclo,		nr_seq_classif,
				cd_pessoa_fisica, 		cd_estabelecimento,	ie_tiss_tipo_anexo_autor,
				ie_carater_int_tiss,		cd_setor_origem, dt_atualizacao_nrec, nm_usuario_nrec)
			values (nr_seq_paciente_setor_p,	null,			cd_convenio_w,		nr_doc_convenio_w,
				clock_timestamp(),			dt_prevista_ciclo_w,	clock_timestamp(),		nm_usuario_p,
				null,				null,			ds_observacao_w,	null,
				null,				null,			null,			cd_medico_resp_w,
				ie_tipo_guia_padrao_w,		null,			null,			null,
				null,				nr_seq_estagio_w,	ie_tipo_autorizacao_w, ie_forma_autor_ciclo_w,
				null,				nr_sequencia_autor_w,	null,			null,
				dt_inicio_trat_w,		nr_ciclo_p,		nr_seq_classif_w,
				cd_pessoa_fisica_w,		cd_estabelecimento_w,	'2',
				ie_carater_int_quimio_w,	cd_setor_atendimento_w, clock_timestamp(), nm_usuario_p);
			
			nr_seq_estagio_autor_w := nr_seq_estagio_w;
			if (nr_seq_estagio_autor_w IS NOT NULL AND nr_seq_estagio_autor_w::text <> '') then
				CALL atualizar_autorizacao_convenio(nr_sequencia_autor_w,nm_usuario_p,nr_seq_estagio_autor_w,'N','N','S');
			end if;
			end;
		end if;
		
		/* Consistir e gerar materiais */

		if (coalesce(nr_sequencia_autor_w,0) > 0) then
			begin			
			if (coalesce(ie_regra_apres_autor_quimio_w,'N') = 'N') then
				open c01;
				loop
				fetch c01 into
					cd_material_w,
					qt_dose_w,
					cd_unidade_medida_w,
					ie_via_aplicacao_w,
					cd_intervalo_w,
					cd_estab_pac_atend_w,
					cd_setor_pac_atend_w,
					qt_dose_quimio_w,
					qt_dose_prescr_quimio_w,
					qt_dias_quimio_w;
				EXIT WHEN NOT FOUND; /* apply on c01 */
				
					qt_dose_total_quimio_w := qt_dose_w;
				
					if (coalesce(cd_estab_pac_atend_w,cd_estabelecimento_w) <> cd_estabelecimento_w) then
							
						cd_estabelecimento_w := cd_estab_pac_atend_w;
				
					end if;
				
					if (ie_autor_mat_conta_w = 'S') and (cd_material_w IS NOT NULL AND cd_material_w::text <> '') then						
						cd_mat_informado_w:= cd_material_w;
						cd_material_w	:= obter_material_conta(cd_estabelecimento_w,
											cd_convenio_w,
											cd_categoria_w,
											cd_material_w,
											cd_material_w,
											cd_material_w,
											cd_plano_w,
											coalesce(cd_setor_pac_atend_w,cd_setor_atendimento_w),
											clock_timestamp(),
											null, --Local estoque
											null);
					end if;
					
					
					if (ie_conv_medida_autor_quimio_w = 'S') then
							
						select	coalesce(max(qt_conversao),1)
						into STRICT	qt_conversao_w
						from	material_conversao_unidade
						where	cd_material		= cd_material_w
						and	cd_unidade_medida	= cd_unidade_medida_w;						
						
						qt_dose_w	:= dividir(qt_dose_w,qt_conversao_w);
						
					end if;
										
					SELECT * FROM consiste_mat_plano_convenio(	cd_convenio_w, cd_plano_w, cd_material_w, null, coalesce(cd_setor_pac_atend_w,cd_setor_atendimento_w), ds_retorno_w, ie_bloqueia_agenda_w, ie_regra_w, nr_seq_regra_w, qt_dose_w, coalesce(dt_inicio_trat_w,clock_timestamp()), null, cd_estabelecimento_w, null, ie_tipo_atendimento_w) INTO STRICT ds_retorno_w, ie_bloqueia_agenda_w, ie_regra_w, nr_seq_regra_w;
		
					if	((ie_regra_w in (3,6)) or (ie_gerar_autor_w = 'T')) and (coalesce(nr_seq_estagio_autor_w,0) = coalesce(nr_seq_estagio_w,0)) then
		
						select	max(nr_seq_fabric)
						into STRICT	nr_seq_fabricante_w
						from	material
						where	cd_material = cd_material_w;
		
						insert	into material_autorizado(nr_sequencia,
								dt_atualizacao,
								nm_usuario,
								dt_atualizacao_nrec,
								nm_usuario_nrec,
								nr_sequencia_autor,
								cd_material,
								qt_solicitada,
								nr_seq_fabricante,
								qt_autorizada,
								ie_via_aplicacao,
								cd_intervalo_medic_quimio,
								cd_material_informado,
								qt_dose_quimio,
								qt_dose_total_quimio,
								qt_dose_prescr_quimio,
								qt_dias_quimio)
							values (nextval('material_autorizado_seq'),
								clock_timestamp(),
								nm_usuario_p,
								clock_timestamp(),
								nm_usuario_p,
								nr_sequencia_autor_w,
								cd_material_w,
								qt_dose_w,
								nr_seq_fabricante_w,
								0,
								ie_via_aplicacao_w,
								cd_intervalo_w,
								cd_mat_informado_w,
								qt_dose_quimio_w,
								qt_dose_total_quimio_w,
								qt_dose_prescr_quimio_w,
								qt_dias_quimio_w);
					end if;
				end loop;
				close c01;
			
			else
						
				CALL GERAR_APRESENT_AUTOR_ONC(nr_seq_paciente_setor_p,
							nr_seq_atendimento_w,
							nr_ciclo_p,
							ie_forma_autor_ciclo_w,
							nr_sequencia_autor_w,
							cd_convenio_w,
							cd_estabelecimento_w,
							nm_usuario_p);
			
			end if;
			
			end;
			
			if (ie_autor_onc_sem_mat_w = 'S') then
			
				begin
				select	count(*)
				into STRICT	qt_proc_autor_w
				from	procedimento_autorizado
				where	nr_sequencia_autor = nr_sequencia_autor_w;
				exception
				when others then
					qt_proc_autor_w := 0;
				end;
				
				begin
				select	count(*)
				into STRICT	qt_mat_autor_w
				from	material_autorizado
				where	nr_sequencia_autor = nr_sequencia_autor_w;
				exception
				when others then
					qt_mat_autor_w := 0;
				end;
				
				if (coalesce(qt_mat_autor_w,0) + coalesce(qt_proc_autor_w,0) = 0) then
					
					delete
					from	autorizacao_convenio
					where	nr_sequencia = nr_sequencia_autor_w;
					
				end if;
			
			end if;			
		end if;
		
		if (coalesce(ie_gerar_autor_proc_w,'N') = 'S') then
			begin
			
			select	coalesce(max(a.nr_sequencia),0),
				coalesce(max(a.nr_seq_estagio),0)
			into STRICT	nr_seq_autor_proc_w,
				nr_seq_est_autor_pro_w
			from	autorizacao_convenio a,
				estagio_autorizacao b
			where	a.nr_seq_estagio		= b.nr_sequencia
			and	b.ie_interno			not in ('70','90')
			and	a.nr_ciclo 			= nr_ciclo_p
			and	a.nr_seq_paciente_setor 	= nr_seq_paciente_setor_p
			and	a.ie_tipo_autorizacao = 3;
			
			begin
				select	count(*)
				into STRICT	qt_proc_ciclo_w
				from	paciente_atendimento b,
					paciente_atend_proc a
				where	a.nr_seq_atendimento	= b.nr_seq_atendimento
				and	b.nr_seq_paciente		= nr_seq_paciente_setor_p
				and	((ie_forma_autor_ciclo_w	= 'D' and a.nr_seq_atendimento	= nr_seq_atendimento_w) or (ie_forma_autor_ciclo_w	= 'C'))
				and	b.nr_ciclo			= nr_ciclo_p
				and	not exists (	SELECT	1
							from	procedimento_autorizado x
							where	x.nr_sequencia_autor 	= nr_seq_autor_proc_w
							and	x.cd_procedimento	= a.cd_procedimento);
			exception
			when others then
				qt_proc_ciclo_w := 0;
			end;
			
			if (nr_seq_autor_proc_w = 0) and (qt_proc_ciclo_w > 0) then
				begin
				select	nextval('autorizacao_convenio_seq')
				into STRICT	nr_seq_autor_proc_w
				;
				
				if (ie_guia_autor_quimio_w = 'S') then
					nr_doc_convenio_w := obter_guia_conv_pac_quimio(nr_seq_paciente_setor_p, nr_doc_convenio_w);	
				end if;
					
				insert	into autorizacao_convenio(nr_seq_paciente,		nr_seq_autorizacao,	cd_convenio,		cd_autorizacao,
					dt_autorizacao,			dt_inicio_vigencia,	dt_atualizacao,		nm_usuario,
					dt_fim_vigencia,		nm_responsavel,		ds_observacao,		cd_senha,
					cd_procedimento_principal,	ie_origem_proced,	dt_pedido_medico,	cd_medico_solicitante,
					ie_tipo_guia,			qt_dia_autorizado,	nr_prescricao,		dt_envio,
					dt_retorno,			nr_seq_estagio,		ie_tipo_autorizacao,	ie_tipo_dia,
					cd_tipo_acomodacao,		nr_sequencia,		qt_dia_solicitado,	nr_atendimento,
					dt_entrada_prevista,		nr_ciclo,		nr_seq_paciente_setor,	ds_dia_ciclo,
					nr_seq_classif,			cd_pessoa_fisica,	cd_estabelecimento,	ie_tiss_tipo_anexo_autor,
					ie_carater_int_tiss,		cd_setor_origem, dt_atualizacao_nrec, nm_usuario_nrec)
				values (nr_seq_atendimento_w,		null,			cd_convenio_w,		nr_doc_convenio_w,
					clock_timestamp(),			dt_prevista_ciclo_w,	clock_timestamp(),		nm_usuario_p,
					null,				null,			ds_observacao_dia_w,	null,
					null,				null,			null,			cd_medico_resp_w,
					ie_tipo_guia_padrao_w,		null,			null,			null,
					null,				nr_seq_estagio_w,	ie_tipo_autor_proc_w, ie_forma_autor_ciclo_w,
					null,				nr_seq_autor_proc_w,	null,			null,
					dt_inicio_trat_w,		nr_ciclo_p,		nr_seq_paciente_setor_p,NULL,
					nr_seq_classif_w,		cd_pessoa_fisica_w,	cd_estabelecimento_w,	'2',
					ie_carater_int_quimio_w,	coalesce(cd_setor_pac_atend_w,cd_setor_atendimento_w), clock_timestamp(), nm_usuario_p);
					
				nr_seq_est_autor_pro_w := nr_seq_estagio_w;
				if (nr_seq_est_autor_pro_w IS NOT NULL AND nr_seq_est_autor_pro_w::text <> '') then
					CALL atualizar_autorizacao_convenio(nr_seq_autor_proc_w,nm_usuario_p,nr_seq_est_autor_pro_w,'N','N','S');
				end if;
				end;
			end if;
			
			open C04;
			loop
			fetch C04 into	
				cd_procedimento_w,
				ie_origem_proced_w,
				nr_seq_proc_interno_w,
				qt_procedimento_w,
				cd_estab_pac_atend_w,
				cd_setor_pac_atend_w;
			EXIT WHEN NOT FOUND; /* apply on C04 */
				begin
				
				if (coalesce(cd_estab_pac_atend_w,cd_estabelecimento_w) <> cd_estabelecimento_w) then
							
					cd_estabelecimento_w := cd_estab_pac_atend_w;
				
				end if;
				
				SELECT * FROM consiste_plano_convenio(null, cd_convenio_w, cd_procedimento_w, ie_origem_proced_w, coalesce(dt_inicio_trat_w,clock_timestamp()), qt_procedimento_w, null, cd_plano_w, null, ds_retorno_w, coalesce(cd_setor_pac_atend_w,cd_setor_atendimento_w), null, ie_regra_w, null, nr_seq_regra_w, nr_seq_proc_interno_w, null, cd_estabelecimento_w, null, null, cd_pessoa_fisica_w, ie_glosa_w, nr_seq_regra_preco_w) INTO STRICT ds_retorno_w, ie_regra_w, nr_seq_regra_w, ie_glosa_w, nr_seq_regra_preco_w;
				
				if (ie_regra_w in ('3','6','7')) and (coalesce(nr_seq_est_autor_pro_w,0) = coalesce(nr_seq_estagio_w,0))	then

					insert	into procedimento_autorizado(cd_procedimento,
							ie_origem_proced,
							qt_solicitada,
							qt_autorizada,
							dt_atualizacao,
							nm_usuario,
							nr_sequencia_autor,
							nr_sequencia,
							nr_seq_proc_interno,
							ds_observacao)
						values (cd_procedimento_w,
							ie_origem_proced_w,
							qt_procedimento_w,
							0,
							clock_timestamp(),
							nm_usuario_p,
							nr_seq_autor_proc_w,
							nextval('procedimento_autorizado_seq'),
							nr_seq_proc_interno_w,
							Wheb_mensagem_pck.get_texto(308498) || ' ' /*'Procedimento gerado para o ciclo '*/||nr_ciclo_p);
							
				end if;
				end;
			end loop;
			close C04;
			
				if (ie_autor_onc_sem_mat_w = 'S') then
			
					begin
					select	count(*)
					into STRICT	qt_proc_autor_w
					from	procedimento_autorizado
					where	nr_sequencia_autor = nr_seq_autor_proc_w;
					exception
					when others then
						qt_proc_autor_w := 0;
					end;
					
					begin
					select	count(*)
					into STRICT	qt_mat_autor_w
					from	material_autorizado
					where	nr_sequencia_autor = nr_seq_autor_proc_w;
					exception
					when others then
						qt_mat_autor_w := 0;
					end;
					
					if (coalesce(qt_mat_autor_w,0) + coalesce(qt_proc_autor_w,0) = 0) then
						
						delete
						from	autorizacao_convenio
						where	nr_sequencia = nr_seq_autor_proc_w;
						
					end if;
			end if;
			
			
			end;
		end if;
	end if;

end if;

open C05;
loop
fetch C05 into	
	nr_sequencia_autor_w;
EXIT WHEN NOT FOUND; /* apply on C05 */

	select	count(1)
	into STRICT	qt_lote_anexo_w
	from	tiss_anexo_guia
	where	nr_sequencia_autor	= nr_sequencia_autor_w
	and	(nr_seq_lote_anexo IS NOT NULL AND nr_seq_lote_anexo::text <> '');

	if (qt_lote_anexo_w = 0) then
		CALL TISS_GERAR_ANEXO_GUIA(nr_sequencia_autor_w,nm_usuario_p);
	end if;

end loop;
close C05;

if (ie_commit_p = 'S') then
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_autor_conv_quimioterapia (nr_seq_paciente_setor_p bigint, nr_ciclo_p bigint, nm_usuario_p text, ie_commit_p text, cd_perfil_p bigint default null, cd_estab_p bigint default null) FROM PUBLIC;

