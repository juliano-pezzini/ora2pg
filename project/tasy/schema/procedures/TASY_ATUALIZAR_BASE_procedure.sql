-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE tasy_atualizar_base (nm_usuario_p text,nm_owner_origem_p text) AS $body$
DECLARE

-- ==================================================================================

--			Esta procedure e compilada sempre antes da atualizac?o da vers?o

-- 						portanto, cuidado ao altera-la

-- ==================================================================================
ds_comando_w		varchar(2000);
qt_registro_w		bigint;
qt_ops_w			bigint;
nm_owner_origem_w 	varchar(15);
qt_objeto_w		bigint;
nm_owner_atual_w		varchar(30);
Nr_seq_log_w		bigint;
ds_erro_w			varchar(2000);
vl_retorno_w		bigint;
ie_executar_trigger_w	varchar(10);

BEGIN
select	user
into STRICT	nm_owner_atual_w
;
select  	max(nr_sequencia)
into STRICT	Nr_seq_log_w
from 	log_atualizacao;
nm_owner_origem_w := nm_owner_origem_p;
if ( coalesce(nm_owner_origem_p::text, '') = '' ) or ( nm_owner_origem_p = '') then
	nm_owner_origem_w := 'TASY_VERSAO';
end if;
CALL gravar_processo_longo('','TASY_ATUALIZAR_BASE',0);
/* Dicionario de Objetos */

begin
/*Tasy_Atualizar_Tabela(nm_owner_origem_p, 'DIC_MASCARA', 'DIC_MASCARA', 'where a.dt_atualizacao > (select b.dt_atualizacao from DIC_MASCARA b where a.cd_mascara = b.cd_mascara)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'DIC_MASCARA', 'N', 'S', 'where not exists (select b.dt_atualizacao from DIC_MASCARA b where a.cd_mascara = b.cd_mascara)');
exception
	when others then
		ds_erro_w := substr(SQLERRM,1,2000);
		insert into log_atualizacao_erro values (log_atualizacao_erro_seq.nextval, 'Erro na proc Tasy_Atualizar_Base na tabela DIC_MASCARA - Tasy_Copiar_Tabela',ds_erro_w,Nr_seq_log_w, SYSDATE, 'Tasy_Versao' );
		commit;
end;
begin
*/
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'DIC_OBJETO', 'DIC_OBJETO', 'where a.dt_atualizacao > (select b.dt_atualizacao from DIC_OBJETO b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'DIC_OBJETO', 'N', 'S', 'where not exists (select 1 from DIC_OBJETO b where a.nr_sequencia = b.nr_sequencia)');
exception
	when others then
		ds_erro_w := substr(SQLERRM,1,2000);
		insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela DIC_OBJETOS - Tasy_Copiar_Tabela',ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
		commit;
end;
begin
/*Francisco - 15/12/2015 */

tasy_Atualizar_Tabela(nm_owner_origem_p,'DIC_OBJETO_FILTRO_GRUPO','DIC_OBJETO_FILTRO_GRUPO',' where a.dt_atualizacao > (select b.dt_atualizacao from DIC_OBJETO_FILTRO_GRUPO b where  a.nr_sequencia = b.nr_sequencia)');
tasy_copiar_tabela(nm_owner_origem_p,'DIC_OBJETO_FILTRO_GRUPO','N','S','where not exists(select 1 from DIC_OBJETO_FILTRO_GRUPO b where  a.nr_sequencia = b.nr_sequencia)');
exception
	when others then
		ds_erro_w := substr(SQLERRM,1,2000);
		insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela DIC_OBJETO_FILTRO_GRUPO - Tasy_Copiar_Tabela',ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
		commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'DIC_OBJETO_FILTRO', 'DIC_OBJETO_FILTRO', 'where a.dt_atualizacao > (select b.dt_atualizacao from DIC_OBJETO_FILTRO b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'DIC_OBJETO_FILTRO', 'N', 'S', 'where not exists (select 1 from DIC_OBJETO_FILTRO b where a.nr_sequencia = b.nr_sequencia)');
exception
	when others then
		ds_erro_w := substr(SQLERRM,1,2000);
		insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela DIC_OBJETO_FILTRO - Tasy_Copiar_Tabela',ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
		commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'funcao','funcao',
	' where a.dt_atualizacao > (select b.dt_atualizacao from funcao b where a.cd_funcao = b.cd_funcao)');
Tasy_Copiar_tabela(nm_owner_origem_p,'funcao','N','N',
	' where not exists (select 1 from funcao b where a.cd_funcao = b.cd_funcao)');
exception
	when others then
		ds_erro_w := substr(SQLERRM,1,2000);
		insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela FUNCAO - Tasy_Copiar_Tabela',ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
		commit;
end;
begin
	Tasy_Atualizar_Tabela(nm_owner_origem_p,'funcao_item','funcao_item',
	' where a.dt_atualizacao > (select b.dt_atualizacao from funcao_item b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'funcao_item','N','N',
	' where not exists (select 1 from funcao_item b where a.nr_sequencia = b.nr_sequencia)');
exception
	when others then
		ds_erro_w := substr(SQLERRM,1,2000);
		insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela FUNCAO_ITEM - Tasy_Copiar_Tabela',ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
		commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'evento_tasy','evento_tasy',
	' where a.dt_atualizacao > (select b.dt_atualizacao from evento_tasy b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'evento_tasy','S','S','where not exists (select 1 from evento_tasy b ' ||
	' where a.nr_sequencia = b.nr_sequencia)');
exception
	when others then
		ds_erro_w := substr(SQLERRM,1,2000);
		insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela EVENTO_TASY - Tasy_Copiar_Tabela',ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
		commit;
end;
begin
/* Liberac?o de parametros do tipo 'Somente liberar com autorizac?o oficial Wheb' */

Tasy_Atualizar_Tabela(nm_owner_origem_p, 'FUNCAO_PARAM_AUTOR_USO', 'FUNCAO_PARAM_AUTOR_USO', 'where a.dt_atualizacao > (select b.dt_atualizacao from FUNCAO_PARAM_AUTOR_USO b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'FUNCAO_PARAM_AUTOR_USO', 'N', 'S', 'where not exists (select 1 from FUNCAO_PARAM_AUTOR_USO b where a.nr_sequencia = b.nr_sequencia)');
exception
	when others then
		ds_erro_w := substr(SQLERRM,1,2000);
		insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela FUNCAO_PARAM_AUTOR_USO - Tasy_Copiar_Tabela',ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
		commit;
end;
begin
/* Almir - 15/04/2011 */

Tasy_Atualizar_Tabela(nm_owner_origem_p, 'FUNCAO_PARAMETRO', 'FUNCAO_PARAMETRO', 'where NVL(a.dt_atualizacao_philips, sysdate) <> (select nvl(b.dt_atualizacao_philips, sysdate) from FUNCAO_PARAMETRO b where a.cd_funcao = b.cd_funcao and a.nr_sequencia = b.nr_sequencia)','N');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'FUNCAO_PARAMETRO', 'N', 'S', 'where not exists (select 1 from FUNCAO_PARAMETRO b where a.cd_funcao = b.cd_funcao and a.nr_sequencia = b.nr_sequencia)');exception
	when others then
		ds_erro_w := substr(SQLERRM,1,2000);
		insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela FUNCAO_PARAMETRO - Tasy_Copiar_Tabela',ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
		commit;
end;
begin
/* dicionario principal */

Tasy_Atualizar_Tabela(nm_owner_origem_p,'tipo_localizar','tipo_localizar',
	' where a.dt_atualizacao > (select b.dt_atualizacao from tipo_localizar b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'tipo_localizar','N','S','where not exists (select 1 from tipo_localizar b ' ||
	' where a.nr_sequencia = b.nr_sequencia)');
exception
	when others then
		ds_erro_w := substr(SQLERRM,1,2000);
		insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela TIPO_LOCALIZAR - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
		commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'TIPO_LOCALIZAR_ATRIB_GRUP','TIPO_LOCALIZAR_ATRIB_GRUP',
	' where a.dt_atualizacao > (select b.dt_atualizacao from TIPO_LOCALIZAR_ATRIB_GRUP b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'TIPO_LOCALIZAR_ATRIB_GRUP','N','S',' where not exists ( select 1 from TIPO_LOCALIZAR_ATRIB_GRUP b '||
	' where a.nr_sequencia = b.nr_sequencia)');
exception
	when others then
		ds_erro_w := substr(SQLERRM,1,2000);
		insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela TIPO_LOCALIZAR_ATRIB_GRUP - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
		commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'tipo_localizar_atributo','tipo_localizar_atributo',
	' where a.dt_atualizacao > (select b.dt_atualizacao from tipo_localizar_atributo b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'tipo_localizar_atributo','N','S',' where not exists ( select 1 from tipo_localizar_atributo b '||
	' where a.nr_sequencia = b.nr_sequencia)');
exception
	when others then
		ds_erro_w := substr(SQLERRM,1,2000);
		insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela TIPO_LOCALIZAR_ATRIBUTO - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
		commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'funcao_tabela','funcao_tabela',
	' where a.dt_atualizacao > (select b.dt_atualizacao from funcao_tabela b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'funcao_tabela','N','S','where not exists (select 1 from funcao_tabela b ' ||
	' where a.nr_sequencia = b.nr_sequencia)');
exception
	when others then
		ds_erro_w := substr(SQLERRM,1,2000);
		insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela FUNCAO_TABELA - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
		commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'tasy_legenda','tasy_legenda',
	' where a.dt_atualizacao > (select b.dt_atualizacao from tasy_legenda b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'tasy_legenda','N','S',' where not exists (select 1 from tasy_legenda b '||
	' where a.nr_sequencia = b.nr_sequencia)');
exception
	when others then
		ds_erro_w := substr(SQLERRM,1,2000);
		insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela TASY_LEGENDA - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
		commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'OBJETO_SISTEMA','OBJETO_SISTEMA',
	' where a.dt_atualizacao > (select b.dt_atualizacao from OBJETO_SISTEMA b where a.nm_objeto = b.nm_objeto and a.ie_banco = b.ie_banco)');
Tasy_Copiar_tabela(nm_owner_origem_p,'OBJETO_SISTEMA','N','S',' where not exists (select 1 from OBJETO_SISTEMA b '||
	' where a.nm_objeto = b.nm_objeto)');
exception
	when others then
		ds_erro_w := substr(SQLERRM,1,2000);
		insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela OBJETO_SISTEMA - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
		commit;
end;
begin
EXECUTE  'truncate table OBJETO_SISTEMA_PARAM';
Tasy_Atualizar_Tabela(nm_owner_origem_p,'OBJETO_SISTEMA_PARAM','OBJETO_SISTEMA_PARAM',
	' where a.dt_atualizacao > (select b.dt_atualizacao from OBJETO_SISTEMA_PARAM b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'OBJETO_SISTEMA_PARAM','N','S',' where not exists (select 1 from OBJETO_SISTEMA_PARAM b '||
	' where a.nr_sequencia = b.nr_sequencia)');
exception
	when others then
		ds_erro_w := substr(SQLERRM,1,2000);
		insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela OBJETO_SISTEMA_PARAM - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
		commit;
end;
begin
Tasy_Copiar_tabela(nm_owner_origem_p,'funcao_grupo_param','N','S','where not exists (select 1
		from funcao_grupo_param b where	a.nr_sequencia = b.nr_sequencia) ');
exception
	when others then
		ds_erro_w := substr(SQLERRM,1,2000);
		insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Copiar_Tabela na tabela FUNCAO_GRUPO_PARAM',ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
		commit;
end;
begin
/* Tipo Consulta */

Tasy_atualizar_tabela(nm_owner_origem_p,'med_tipo_consulta','med_tipo_consulta',
	' where a.dt_atualizacao > (select b.dt_atualizacao from med_tipo_consulta b where a.nr_sequencia = b.nr_sequencia)' );
Tasy_Copiar_tabela(nm_owner_origem_p,'med_tipo_consulta','N','S','where not exists (select 1 from med_tipo_consulta b '||
	' where a.nr_sequencia = b.nr_sequencia)' );
exception
	when others then
		ds_erro_w := substr(SQLERRM,1,2000);
		insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela MED_TIPO_CONSULTA - Tasy_Copiar_Tabela',ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
		commit;
end;
begin
/* dicionario base */

Tasy_Copiar_tabela(nm_owner_origem_p,'aplicacao_tasy','N','S','where not exists (select 1 from aplicacao_tasy b ' ||
	' where a.cd_aplicacao_tasy = b.cd_aplicacao_tasy)');
exception
	when others then
		ds_erro_w := substr(SQLERRM,1,2000);
		insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Copiar_Tabela na tabela APLICACAO_TASY',ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
		commit;
end;
begin
Tasy_atualizar_tabela(nm_owner_origem_p,'modulo_tasy','modulo_tasy',
	' where a.dt_atualizacao > (select b.dt_atualizacao from modulo_tasy b where a.nr_sequencia = b.nr_sequencia)' );
Tasy_Copiar_tabela(nm_owner_origem_p,'modulo_tasy','N','S','where not exists (select 1 from modulo_tasy b ' ||
	' where a.nr_sequencia = b.nr_sequencia)');
exception
	when others then
		ds_erro_w := substr(SQLERRM,1,2000);
		insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela MODULO_TASY - Tasy_Copiar_Tabela',ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
		commit;
end;
begin
Tasy_atualizar_tabela(nm_owner_origem_p,'modulo_implantacao','modulo_implantacao',
	' where a.dt_atualizacao > (select b.dt_atualizacao from modulo_implantacao b where a.nr_sequencia = b.nr_sequencia)' );
Tasy_Copiar_tabela(nm_owner_origem_p,'modulo_implantacao','N','S','where not exists (select 1 from modulo_implantacao b ' ||
	' where a.nr_sequencia = b.nr_sequencia)');
exception
	when others then
		ds_erro_w := substr(SQLERRM,1,2000);
		insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela MODULO_IMPLANTACAO - Tasy_Copiar_Tabela',ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
		commit;
end;
begin
/* Tabela Sistema Ativac?o */

Tasy_Atualizar_Tabela(nm_owner_origem_p, 'TABELA_SISTEMA_ATIVACAO', 'TABELA_SISTEMA_ATIVACAO', 'where a.dt_atualizacao > (select b.dt_atualizacao from TABELA_SISTEMA_ATIVACAO b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'TABELA_SISTEMA_ATIVACAO', 'N', 'S', 'where not exists (select 1 from TABELA_SISTEMA_ATIVACAO b where a.nr_sequencia = b.nr_sequencia)');
exception
	when others then
		ds_erro_w := substr(SQLERRM,1,2000);
		insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela TABELA_SISTEMA_ATIVACAO - Tasy_Copiar_Tabela',ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
		commit;
end;
begin
/* Funcc?es em Desenvolvimento */

Tasy_Atualizar_Tabela(nm_owner_origem_p, 'FUNCAO_DESENV', 'FUNCAO_DESENV', 'where a.dt_atualizacao > (select b.dt_atualizacao from FUNCAO_DESENV b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'FUNCAO_DESENV', 'N', 'S', 'where not exists (select 1 from FUNCAO_DESENV b where a.nr_sequencia = b.nr_sequencia)');
exception
	when others then
		ds_erro_w := substr(SQLERRM,1,2000);
		insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela FUNCAO_DESENV - Tasy_Copiar_Tabela',ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
		commit;
end;
begin
/* FUnc?o Parametro Uso */


/* Dicionario de Objetos (Dicionario de Dados) */
	
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'FUNCAO_PARAM_USO', 'FUNCAO_PARAM_USO', 'where a.dt_atualizacao > (select b.dt_atualizacao from FUNCAO_PARAM_USO b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'FUNCAO_PARAM_USO', 'N', 'S', 'where not exists (select 1 from FUNCAO_PARAM_USO b where a.nr_sequencia = b.nr_sequencia)');
exception
	when others then
		ds_erro_w := substr(SQLERRM,1,2000);
		insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela FUNCAO_PARAM_USO - Tasy_Copiar_Tabela',ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
		commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'dominio','dominio',
	'where a.dt_atualizacao > (select b.dt_atualizacao from dominio b where a.cd_dominio = b.cd_dominio)');
Tasy_Copiar_tabela(nm_owner_origem_p,'dominio','N','S', 'where not exists (select 1 from dominio b where	a.cd_dominio	= b.cd_dominio)');
exception
	when others then
		ds_erro_w := substr(SQLERRM,1,2000);
		insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela DOMINIO - Tasy_Copiar_Tabela',ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
		commit;
end;
begin
Tasy_Copiar_tabela('TASY_VERSAO','valor_dominio','N','S','where not exists (select 1 from valor_dominio b where	a.cd_dominio = b.cd_dominio and a.vl_dominio = b.vl_dominio) ');
/* Tasy_Copiar_tabela(nm_owner_origem_p,'onc_parametro','N','S','where not exists	(select 1
		from onc_parametro b where a.nr_sequencia = b.nr_sequencia) ');*/
CALL exec_sql_dinamico('ldneto',	'	delete from VALOR_DOMINIO a ' ||
								'	where not exists ( select 1 ' ||
								'						from DOMINIO b ' ||
								'						where 1 = 1 ' ||
								'						and a.CD_DOMINIO = b.CD_DOMINIO) ' ||
								'	and a.CD_DOMINIO is not null ');
CALL exec_sql_dinamico('cetrentin',	'	update 	valor_dominio a ' ||
								' 	set		a.CD_EXP_VALOR_DOMINIO = 	(	select	b.CD_EXP_VALOR_DOMINIO ' ||
								'											from	tasy_versao.valor_dominio b  ' ||
								'											where	b.cd_dominio = a.cd_dominio  ' ||
								'											and		b.vl_dominio = a.vl_dominio)  ' ||
								' 	where exists (	select	1  ' ||
								'					from	tasy_versao.valor_dominio c ' ||
								' 					where	c.cd_dominio = a.cd_dominio ' ||
								'					and		c.vl_dominio = a.vl_dominio ' ||
								'					and		nvl(c.CD_EXP_VALOR_DOMINIO,0) <> nvl(a.CD_EXP_VALOR_DOMINIO,0) ' ||
								'					and		c.dt_Atualizacao > a.dt_atualizacao)');
commit;
exception
	when others then
		ds_erro_w := substr(SQLERRM,1,2000);
		insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela VALOR_DOMINIO - Tasy_Copiar_Tabela',ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
		commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'TASY_PADRAO_COR_HTML','TASY_PADRAO_COR_HTML',
	'where a.dt_atualizacao > (select b.dt_atualizacao from TASY_PADRAO_COR_HTML b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'TASY_PADRAO_COR_HTML','N','S','where not exists	(select 1
		from TASY_PADRAO_COR_HTML b where	a.nr_sequencia	= b.nr_sequencia) ');
exception
	when others then
		ds_erro_w := substr(SQLERRM,1,2000);
		insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela TASY_PADRAO_COR_HTML - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
		commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'TASY_PADRAO_IMAGEM_HTML','TASY_PADRAO_IMAGEM_HTML',
	'where a.dt_atualizacao > (select b.dt_atualizacao from TASY_PADRAO_IMAGEM_HTML b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'TASY_PADRAO_IMAGEM_HTML','N','S','where not exists	(select 1
		from TASY_PADRAO_IMAGEM_HTML b where	a.nr_sequencia	= b.nr_sequencia) ');
exception
	when others then
		ds_erro_w := substr(SQLERRM,1,2000);
		insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela TASY_PADRAO_IMAGEM_HTML - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
		commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'TASY_PADRAO_CONCEITO_HTML','TASY_PADRAO_CONCEITO_HTML',
	'where a.dt_atualizacao > (select b.dt_atualizacao from TASY_PADRAO_CONCEITO_HTML b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'TASY_PADRAO_CONCEITO_HTML','S','S','where not exists	(select 1
		from TASY_PADRAO_CONCEITO_HTML b where	a.nr_sequencia	= b.nr_sequencia) ');
exception
	when others then
		ds_erro_w := substr(SQLERRM,1,2000);
		insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela TASY_PADRAO_CONCEITO_HTML - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
		commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'tasy_padrao_cor','tasy_padrao_cor',
	'where a.dt_atualizacao > (select b.dt_atualizacao from tasy_padrao_cor b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'tasy_padrao_cor','N','S','where not exists	(select 1
		from tasy_padrao_cor b where	a.nr_sequencia	= b.nr_sequencia) ');
exception
	when others then
		ds_erro_w := substr(SQLERRM,1,2000);
		insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela TASY_PADRAO_COR - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
		commit;
end;
begin
/* Help */

Tasy_Atualizar_Tabela(nm_owner_origem_p,'tasy_faq','tasy_faq',
	' where a.dt_atualizacao > (select b.dt_atualizacao from tasy_faq b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'tasy_faq','N','S','where not exists ( select 1 from tasy_faq b' ||
	' where a.nr_sequencia = b.nr_sequencia)');
exception
	when others then
		ds_erro_w := substr(SQLERRM,1,2000);
		insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela TASY_FAQ - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
		commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'tasy_help','tasy_help',
	' where a.dt_atualizacao > (select b.dt_atualizacao from tasy_help b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'tasy_help','S','S','where not exists ( select 1 from tasy_help b' ||
	' where a.nr_sequencia = b.nr_sequencia)');
exception
	when others then
		ds_erro_w := substr(SQLERRM,1,2000);
		insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela TASY_HELP - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
		commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'tasy_objeto_help','tasy_objeto_help',
	' where a.dt_atualizacao > (select b.dt_atualizacao from tasy_objeto_help b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'tasy_objeto_help','N','S',' where not exists ( select 1 from tasy_objeto_help b '||
	' where a.nr_sequencia = b.nr_sequencia)');
exception
	when others then
		ds_erro_w := substr(SQLERRM,1,2000);
		insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela TASY_OBJETO_HELP - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
		commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'tasy_tipo_help','tasy_tipo_help',
	' where a.dt_atualizacao > (select b.dt_atualizacao from tasy_tipo_help b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'tasy_tipo_help','N','S',' where not exists ( select 1 from tasy_tipo_help b ' ||
	' where a.nr_sequencia = b.nr_sequencia)');
exception
	when others then
		ds_erro_w := substr(SQLERRM,1,2000);
		insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela TASY_TIPO_HELP - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
		commit;
end;
begin
/* Relatorios */

CALL exec_sql_dinamico('coelho','begin tasy_ajustar_base_relatorio; end;');
exception
	when others then
		ds_erro_w := substr(SQLERRM,1,2000);
		insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc tasy_ajustar_base_relatorio', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
		commit;
end;
begin
/* Outras tabelas */

Tasy_Atualizar_Tabela(nm_owner_origem_p,'alteracao_tasy','alteracao_tasy',
	' where a.dt_atualizacao > (select b.dt_atualizacao from alteracao_tasy b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'alteracao_tasy','N','S',' where not exists ( select 1 from alteracao_tasy b ' ||
	' where a.nr_sequencia = b.nr_sequencia)');
exception
	when others then
		ds_erro_w := substr(SQLERRM,1,2000);
		insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela ALTERACAO_TASY - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
		commit;
end;	
/*Tasy_Atualizar_Tabela(nm_owner_origem_p,'relatorio_documentacao','relatorio_documentacao',
	' where a.dt_atualizacao > (select b.dt_atualizacao from relatorio_documentacao b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'relatorio_documentacao','N','N',' where not exists ( select 1 from relatorio_documentacao b ' ||
	' where a.nr_sequencia = b.nr_sequencia)');*/
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'MED_MASCARA_PROTOCOLO','MED_MASCARA_PROTOCOLO',
	' WHERE A.DT_ATUALIZACAO > (SELECT B.DT_ATUALIZACAO FROM MED_MASCARA_PROTOCOLO B WHERE A.NR_SEQUENCIA = B.NR_SEQUENCIA)');
Tasy_Copiar_tabela(nm_owner_origem_p,'MED_MASCARA_PROTOCOLO','N','S','WHERE NOT EXISTS ( SELECT 1 FROM MED_MASCARA_PROTOCOLO B ' ||
	' WHERE A.NR_SEQUENCIA = B.NR_SEQUENCIA)');
exception
	when others then
		ds_erro_w := substr(SQLERRM,1,2000);
		insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela MED_MASCARA_PROTOCOLO - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
		commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'aih_regra','aih_regra',
	' where a.dt_atualizacao > (select b.dt_atualizacao from aih_regra b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'aih_regra','N','S','where not exists (select 1 from aih_regra b' ||
	' where a.nr_sequencia = b.nr_sequencia)');
exception
	when others then
		ds_erro_w := substr(SQLERRM,1,2000);
		insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela AIH_REGRA - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
		commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'aih_regra_proc','aih_regra_proc',
	' where a.dt_atualizacao > (select b.dt_atualizacao from aih_regra_proc b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'aih_regra_proc','N','S',' where not exists (select 1 from aih_regra_proc b ' ||
	' where a.nr_sequencia = b.nr_sequencia)');
exception
	when others then
		ds_erro_w := substr(SQLERRM,1,2000);
		insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela AIH_REGRA_PROC - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
		commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'xml_projeto','xml_projeto',
	' where a.dt_atualizacao > (select b.dt_atualizacao from xml_projeto b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'xml_projeto','N','S',' where not exists (select 1 from xml_projeto b ' ||
	' where a.nr_sequencia = b.nr_sequencia)');
exception
	when others then
		ds_erro_w := substr(SQLERRM,1,2000);
		insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela XML_PROJETO - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
		commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'xml_elemento','xml_elemento',
	' where a.dt_atualizacao > (select b.dt_atualizacao from xml_elemento b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'xml_elemento','N','S',' where not exists (select 1 from xml_elemento b '||
	' where a.nr_sequencia = b.nr_sequencia)');
exception
	when others then
		ds_erro_w := substr(SQLERRM,1,2000);
		insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela XML_ELEMENTO - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
		commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'xml_atributo','xml_atributo',
	' where a.dt_atualizacao > (select b.dt_atualizacao from xml_atributo b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'xml_atributo','N','S',' where not exists (select 1 from xml_atributo b ' ||
	' where a.nr_sequencia = b.nr_sequencia)');
exception
	when others then
		ds_erro_w := substr(SQLERRM,1,2000);
		insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela XML_ATRIBUTO - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
		commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'json_projeto','json_projeto',
	' where a.dt_atualizacao > (select b.dt_atualizacao from json_projeto b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'json_projeto','N','S',' where not exists (select 1 from json_projeto b ' ||
	' where a.nr_sequencia = b.nr_sequencia)');
  begin
  Tasy_Atualizar_Tabela(nm_owner_origem_p,'json_elemento','json_elemento',
	' where a.dt_atualizacao > (select b.dt_atualizacao from json_elemento b where a.nr_sequencia = b.nr_sequencia)');
  Tasy_Copiar_tabela(nm_owner_origem_p,'json_elemento','N','S',' where not exists (select 1 from json_elemento b '||
	' where a.nr_sequencia = b.nr_sequencia)');
  exception
	when others then
		ds_erro_w := substr(SQLERRM,1,2000);
		insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela JSON_ELEMENTO - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
		commit;
  end;
exception
	when others then
		ds_erro_w := substr(SQLERRM,1,2000);
		insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela JSON_PROJETO (Dependentes n?o atualizadas) - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
		commit;
end;
begin
/* Valor Dominio Pais */
		
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'VALOR_DOMINIO_PAIS', 'VALOR_DOMINIO_PAIS', 'where a.dt_atualizacao > (select b.dt_atualizacao from VALOR_DOMINIO_PAIS b where a.cd_pais = b.cd_pais and a.cd_dominio = b.cd_dominio and a.vl_dominio = b.vl_dominio)');		
Tasy_Copiar_Tabela(nm_owner_origem_p, 'VALOR_DOMINIO_PAIS', 'N', 'S', 'where not exists (select 1 from VALOR_DOMINIO_PAIS b where a.cd_pais = b.cd_pais and a.cd_dominio = b.cd_dominio and a.vl_dominio = b.vl_dominio)');
exception
	when others then
		ds_erro_w := substr(SQLERRM,1,2000);
		insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela VALOR_DOMINIO_PAIS - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
		commit;
end;
begin
/* Dic Objeto Pais*/

Tasy_Atualizar_Tabela(nm_owner_origem_p, 'DIC_OBJETO_PAIS', 'DIC_OBJETO_PAIS', 'where a.dt_atualizacao > (select b.dt_atualizacao from DIC_OBJETO_PAIS b where a.cd_pais = b.cd_pais and a.nr_seq_objeto = b.nr_seq_objeto)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'DIC_OBJETO_PAIS', 'N', 'S', 'where not exists (select 1 from DIC_OBJETO_PAIS b where a.cd_pais = b.cd_pais and a.nr_seq_objeto = b.nr_seq_objeto)');
exception
	when others then
		ds_erro_w := substr(SQLERRM,1,2000);
		insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela DIC_OBJETO_PAIS - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
		commit;
end;
begin
/* Atualizac?o dos idiomas  */

Tasy_Atualizar_Tabela(nm_owner_origem_p, 'TASY_IDIOMA', 'TASY_IDIOMA', 'where a.dt_atualizacao > (select b.dt_atualizacao from TASY_IDIOMA b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'TASY_IDIOMA', 'N', 'S', 'where not exists (select 1 from TASY_IDIOMA b where a.nr_sequencia = b.nr_sequencia)');
exception
	when others then
		ds_erro_w := substr(SQLERRM,1,2000);
		insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela TASY_IDIOMA - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
		commit;
end;
begin
/* Dic Panel Pais*/

Tasy_Atualizar_Tabela(nm_owner_origem_p, 'DIC_PANEL_PAIS', 'DIC_PANEL_PAIS', 'where a.dt_atualizacao > (select b.dt_atualizacao from DIC_PANEL_PAIS b where a.NR_SEQ_PANEL = b.NR_SEQ_PANEL and a.CD_PAIS = b.CD_PAIS)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'DIC_PANEL_PAIS', 'N', 'S', 'where not exists (select 1 from DIC_PANEL_PAIS b where a.NR_SEQ_PANEL = b.NR_SEQ_PANEL and a.CD_PAIS = b.CD_PAIS)');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela DIC_PANEL_PAIS', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;
begin
/* Atualizac?o dos paises */

Tasy_Atualizar_Tabela(nm_owner_origem_p, 'TASY_PAIS', 'TASY_PAIS', 'where a.dt_atualizacao > (select b.dt_atualizacao from TASY_PAIS b where a.cd_pais = b.cd_pais)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'TASY_PAIS', 'N', 'S', 'where not exists (select 1 from TASY_PAIS b where a.cd_pais = b.cd_pais)');
exception
	when others then
		ds_erro_w := substr(SQLERRM,1,2000);
		insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela TASY_PAIS - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
		commit;
end;
begin
/* Atualizac?o da classificac?o dos parametro */

Tasy_Atualizar_Tabela(nm_owner_origem_p, 'FUNCAO_PARAM_PAIS', 'FUNCAO_PARAM_PAIS', 'where a.dt_atualizacao > (select b.dt_atualizacao from FUNCAO_PARAM_PAIS b where a.cd_pais = b.cd_pais and a.nr_seq_param = b.nr_seq_param and 
a.cd_funcao = b.cd_funcao)');		
Tasy_Copiar_Tabela(nm_owner_origem_p, 'FUNCAO_PARAM_PAIS', 'N', 'S', 'where not exists (select 1 from FUNCAO_PARAM_PAIS b where a.cd_pais = b.cd_pais and a.nr_seq_param = b.nr_seq_param and a.cd_funcao = b.cd_funcao)');
exception
	when others then
		ds_erro_w := substr(SQLERRM,1,2000);
		insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela FUNCAO_PARAM_PAIS - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
		commit;
end;
begin
/* Atualizac?o as vis?es dos paises */

Tasy_Atualizar_Tabela(nm_owner_origem_p, 'TABELA_VISAO_PAIS', 'TABELA_VISAO_PAIS', 'where a.dt_atualizacao > (select b.dt_atualizacao from TABELA_VISAO_PAIS b where a.cd_pais = b.cd_pais and a.nr_seq_visao = b.nr_seq_visao)');		
Tasy_Copiar_Tabela(nm_owner_origem_p, 'TABELA_VISAO_PAIS', 'N', 'S', 'where not exists (select 1 from TABELA_VISAO_PAIS b where a.cd_pais = b.cd_pais and a.nr_seq_visao = b.nr_seq_visao)');
exception
	when others then
		ds_erro_w := substr(SQLERRM,1,2000);
		insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela TABELA_VISAO_PAIS - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
		commit;
end;
Tasy_Copiar_tabela(nm_owner_origem_p,'inconsistencia','N','S','where not exists (select 1 
		from inconsistencia b where	a.nr_sequencia = b.nr_sequencia)');
Tasy_Atualizar_Tabela(nm_owner_origem_p,'escala_documentacao','escala_documentacao',
	' where a.dt_atualizacao > (select b.dt_atualizacao from escala_documentacao b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'escala_documentacao','N','S',' where not exists (select 1 from escala_documentacao b '||
	' where a.nr_sequencia = b.nr_sequencia)');
Tasy_Atualizar_Tabela(nm_owner_origem_p,'ESCALA_LIBERACAO','ESCALA_LIBERACAO',
	' where a.dt_atualizacao > (select b.dt_atualizacao from ESCALA_LIBERACAO b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'ESCALA_LIBERACAO','N','S',' where not exists (select 1 from ESCALA_LIBERACAO b '||
	' where a.nr_sequencia = b.nr_sequencia)');
Tasy_Atualizar_Tabela(nm_owner_origem_p,'ITEM_PRONTUARIO_LIBERACAO','ITEM_PRONTUARIO_LIBERACAO',
	' where a.dt_atualizacao > (select b.dt_atualizacao from ITEM_PRONTUARIO_LIBERACAO b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'ITEM_PRONTUARIO_LIBERACAO','N','S',' where not exists (select 1 from ITEM_PRONTUARIO_LIBERACAO b '||
	' where a.nr_sequencia = b.nr_sequencia)');
/*Tasy_Copiar_tabela(nm_owner_origem_p,'xml_parametro','N','S',' where not exists (select 1 from xml_parametro b ' ||
	' where a.nr_sequencia = b.nr_sequencia)');
Tasy_Atualizar_Tabela(nm_owner_origem_p,'xml_parametro','xml_parametro',
	' where a.dt_atualizacao > (select b.dt_atualizacao from xml_parametro b where a.nr_sequencia = b.nr_sequencia)');*/

/* Tabelas contabeis */

Tasy_Copiar_tabela(nm_owner_origem_p,'tipo_lote_contabil','N','S','where not exists (select 1 from tipo_lote_contabil b ' ||
		' where a.cd_tipo_lote_contabil = b.cd_tipo_lote_contabil)');
Tasy_Atualizar_Tabela(nm_owner_origem_p,'atributo_contab','atributo_contab',
	' where a.dt_atualizacao > (select b.dt_atualizacao from atributo_contab b where a.nm_atributo = b.nm_atributo and a.cd_tipo_lote_contab = b.cd_tipo_lote_contab)');
Tasy_Copiar_tabela(nm_owner_origem_p,'atributo_contab','N','S',' where not exists (select 1 from atributo_contab b ' ||
	' where a.nm_atributo = b.nm_atributo and a.cd_tipo_lote_contab = b.cd_tipo_lote_contab)');
Tasy_Copiar_tabela(nm_owner_origem_p,'atributo_compl_hist','N','S','where not exists (select 1 from atributo_compl_hist b ' ||
		' where a.nr_sequencia = b.nr_sequencia)');
Tasy_Atualizar_Tabela(nm_owner_origem_p,'ATRIBUTO_DOC_MOVTO','ATRIBUTO_DOC_MOVTO',
	' where a.dt_atualizacao > (select b.dt_atualizacao from ATRIBUTO_DOC_MOVTO b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'ATRIBUTO_DOC_MOVTO','N','S',' where not exists (select 1 from ATRIBUTO_DOC_MOVTO b ' ||
	' where a.nr_sequencia = b.nr_sequencia)');		
/* FISCAL */

Tasy_Atualizar_Tabela(nm_owner_origem_p,'FIS_EFD_CAD_REGISTRO','FIS_EFD_CAD_REGISTRO',
	' where a.dt_atualizacao > (select b.dt_atualizacao from FIS_EFD_CAD_REGISTRO b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'FIS_EFD_CAD_REGISTRO','N','S',' where not exists (select 1 from FIS_EFD_CAD_REGISTRO b ' ||
	' where a.nr_sequencia = b.nr_sequencia)');
/*Marcio - DIOPS*/

Tasy_Atualizar_Tabela(nm_owner_origem_p,'DIOPS_TIPO_MOVTO_REC','DIOPS_TIPO_MOVTO_REC',
	' where a.dt_atualizacao > (select b.dt_atualizacao from DIOPS_TIPO_MOVTO_REC b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'DIOPS_TIPO_MOVTO_REC','N','S',' where not exists (select 1 from DIOPS_TIPO_MOVTO_REC b ' ||
	' where a.nr_sequencia = b.nr_sequencia)');
Tasy_Atualizar_Tabela(nm_owner_origem_p,'DIOPS_TIPO_MOVTO_PEL','DIOPS_TIPO_MOVTO_PEL',
	' where a.dt_atualizacao > (select b.dt_atualizacao from DIOPS_TIPO_MOVTO_PEL b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'DIOPS_TIPO_MOVTO_PEL','N','S',' where not exists (select 1 from DIOPS_TIPO_MOVTO_PEL b ' ||
	' where a.nr_sequencia = b.nr_sequencia)');
/*FANEP*/

Tasy_Atualizar_Tabela(nm_owner_origem_p,'fanep_item','fanep_item',
	' where a.dt_atualizacao > (select b.dt_atualizacao from fanep_item b where a.nr_sequencia = b.nr_sequencia)');
tasy_copiar_tabela(nm_owner_origem_p,'fanep_item','N','S','where not exists	(select 1
		from fanep_item b where	a.nr_sequencia	= b.nr_sequencia)');
/*FANEP*/

Tasy_Copiar_tabela(nm_owner_origem_p,'agrupador_contabil','N','S','where not exists (select 1 from agrupador_contabil b ' ||
		' where a.nr_sequencia = b.nr_sequencia)');
/* Sinais vitais PEPO */


/*Tasy_Atualizar_Tabela(nm_owner_origem_p,'pepo_sinal_vital','pepo_sinal_vital',
	' where a.dt_atualizacao > (select b.dt_atualizacao from pepo_sinal_vital b where a.nr_sequencia = b.nr_sequencia)');
tasy_copiar_tabela(nm_owner_origem_p,'pepo_sinal_vital','N','S','where not exists	(select 1
		from pepo_sinal_vital b where	a.nr_sequencia	= b.nr_sequencia)');*/

/* Sinais vitais PEPO */


/* PEPO */

Tasy_Atualizar_Tabela(nm_owner_origem_p,'pepo_item','pepo_item',
	' where a.dt_atualizacao > (select b.dt_atualizacao from pepo_item b where a.nr_sequencia = b.nr_sequencia)');
tasy_copiar_tabela(nm_owner_origem_p,'pepo_item','N','S','where not exists	(select 1
		from pepo_item b where	a.nr_sequencia	= b.nr_sequencia)');
tasy_copiar_tabela(nm_owner_origem_p,'pepo_sv','N','S','where not exists	(select 1
		from pepo_sv b where	a.nr_sequencia	= b.nr_sequencia)');
/* Tasy_Atualizar_Tabela(nm_owner_origem_p,'pepo_sv','pepo_sv',
		' where a.dt_atualizacao > (select b.dt_atualizacao from pepo_sv b where a.nr_sequencia = b.nr_sequencia)'); OS 118852 */
Tasy_Copiar_tabela(nm_owner_origem_p,'pepo_acao','N','S','where not exists (select 1 
		from pepo_acao b where	a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'pepo_item_acao','N','S','where not exists (select 1 
		from pepo_item_acao b where	a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'CONSISTENCIA_LIB_PEPO','N','S','where not exists (select 1
		from CONSISTENCIA_LIB_PEPO b where a.nr_sequencia = b.nr_sequencia) ');
/* Tasy_Atualizar_Tabela(nm_owner_origem_p,'REGRA_CONSISTE_PRESCR','REGRA_CONSISTE_PRESCR',
	'where a.dt_atualizacao > (select b.dt_atualizacao from REGRA_CONSISTE_PRESCR b where a.nr_sequencia = b.nr_sequencia)'); */
Tasy_Atualizar_Tabela(nm_owner_origem_p,'PEPO_CONFIG_CHART_HTML','PEPO_CONFIG_CHART_HTML',
	' where a.dt_atualizacao > (select b.dt_atualizacao from PEPO_CONFIG_CHART_HTML b where a.nr_sequencia = b.nr_sequencia)');
tasy_copiar_tabela(nm_owner_origem_p,'PEPO_CONFIG_CHART_HTML','N','S','where not exists	(select 1
		from PEPO_CONFIG_CHART_HTML b where	a.nr_sequencia	= b.nr_sequencia)');
/* SAEP */

Tasy_Atualizar_Tabela(nm_owner_origem_p,'saep_item','saep_item',
	' where a.dt_atualizacao > (select b.dt_atualizacao from saep_item b where a.nr_sequencia = b.nr_sequencia)');
tasy_copiar_tabela(nm_owner_origem_p,'saep_item','N','S','where not exists	(select 1
		from saep_item b where	a.nr_sequencia	= b.nr_sequencia)');
/* Oftalmologia */

Tasy_Atualizar_Tabela(nm_owner_origem_p,'oftalmologia_item','oftalmologia_item','where a.dt_atualizacao > (select b.dt_atualizacao from oftalmologia_item b where a.nr_sequencia = b.nr_sequencia)');
tasy_copiar_tabela(nm_owner_origem_p,'oftalmologia_item','N','S','where not exists	(select 1
		from oftalmologia_item b where	a.nr_sequencia	= b.nr_sequencia)');
/* Parametros assistencias */

Tasy_Atualizar_Tabela(nm_owner_origem_p,'REGRA_CONSISTE_PRESCR','REGRA_CONSISTE_PRESCR',
	'where a.dt_atualizacao > (select b.dt_atualizacao from REGRA_CONSISTE_PRESCR b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'REGRA_CONSISTE_PRESCR','N','S','where not exists (select 1
		from REGRA_CONSISTE_PRESCR b where a.nr_sequencia = b.nr_sequencia) ');
/*SAE */

begin
Tasy_Copiar_tabela(nm_owner_origem_p,'REGRA_CONSISTE_ONC','N','S','where not exists (select 1
		from REGRA_CONSISTE_ONC b where a.nr_sequencia = b.nr_sequencia) ');
exception
	when others then
		ds_erro_w := substr(SQLERRM,1,2000);
		insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela XML_ATRIBUTO - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
		commit;
end;
/*TEV */

begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'TEV_RESPOSTA','TEV_RESPOSTA',
	'where a.dt_atualizacao > (select b.dt_atualizacao from TEV_RESPOSTA b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'TEV_RESPOSTA','N','S','where not exists (select 1
		from TEV_RESPOSTA b where a.nr_sequencia = b.nr_sequencia) ');
exception
	when others then
		ds_erro_w := substr(SQLERRM,1,2000);
		insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela XML_ATRIBUTO - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
		commit;
end;
/*SEPSE */

begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'SEPSE_ATRIBUTO','SEPSE_ATRIBUTO',
	'where a.dt_atualizacao > (select b.dt_atualizacao from SEPSE_ATRIBUTO b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'SEPSE_ATRIBUTO','N','S','where not exists (select 1
		from SEPSE_ATRIBUTO b where a.nr_sequencia = b.nr_sequencia) ');
exception
	when others then
		ds_erro_w := substr(SQLERRM,1,2000);
		insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela XML_ATRIBUTO - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
		commit;
end;
/*WHO*/

begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'W_AVAL_WHO','W_AVAL_WHO',
	'where a.dt_atualizacao > (select b.dt_atualizacao from W_AVAL_WHO b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'W_AVAL_WHO','N','S','where not exists (select 1
		from W_AVAL_WHO b where a.nr_sequencia = b.nr_sequencia) ');
exception
	when others then
		ds_erro_w := substr(SQLERRM,1,2000);
		insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela XML_ATRIBUTO - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
		commit;
end;
/*CIAP_VERSAO_PHILIPS" e "CIAP_CAPITULO_PHILIPS*/

begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'CIAP_VERSAO_PHILIPS','CIAP_VERSAO_PHILIPS',
	'where a.dt_atualizacao > (select b.dt_atualizacao from CIAP_VERSAO_PHILIPS b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'CIAP_VERSAO_PHILIPS','N','S','where not exists (select 1
		from CIAP_VERSAO_PHILIPS b where a.nr_sequencia = b.nr_sequencia) ');
Tasy_Atualizar_Tabela(nm_owner_origem_p,'CIAP_CAPITULO_PHILIPS','CIAP_CAPITULO_PHILIPS',
	'where a.dt_atualizacao > (select b.dt_atualizacao from CIAP_CAPITULO_PHILIPS b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'CIAP_CAPITULO_PHILIPS','N','S','where not exists (select 1
		from CIAP_CAPITULO_PHILIPS b where a.nr_sequencia = b.nr_sequencia) ');	
exception
	when others then
		ds_erro_w := substr(SQLERRM,1,2000);
		insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela XML_ATRIBUTO - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
		commit;
end;
/*PRONTUARIO_ITEM_SOAP*/

begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'PRONTUARIO_ITEM_SOAP','PRONTUARIO_ITEM_SOAP',
	'where a.dt_atualizacao > (select b.dt_atualizacao from PRONTUARIO_ITEM_SOAP b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'PRONTUARIO_ITEM_SOAP','N','S','where not exists (select 1
		from PRONTUARIO_ITEM_SOAP b where a.nr_sequencia = b.nr_sequencia) ');
exception
	when others then
		ds_erro_w := substr(SQLERRM,1,2000);
		insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela XML_ATRIBUTO - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
		commit;
end;
/*ONCOGOLIA */

Tasy_Copiar_tabela(nm_owner_origem_p,'REGRA_CONSISTE_SAE','N','S','where not exists (select 1
		from REGRA_CONSISTE_SAE b where a.nr_sequencia = b.nr_sequencia) ');
		
Tasy_Atualizar_Tabela(nm_owner_origem_p,'REGRA_CONSISTE_SAE','REGRA_CONSISTE_SAE',
	'where a.dt_atualizacao > (select b.dt_atualizacao from REGRA_CONSISTE_SAE b where a.nr_sequencia = b.nr_sequencia)');
	
/* Somente Adicionar */


/*
N?o invertar a ordem das procedure TASY_COPIAR_TABELA e TASY_ATUALIZAR_TABELA
O comando de update (exec_sql_dinamico) e para alterar a data de atualizac?o dos registros com imagem no tasy_versao e n?o no tasy (novos registros) para que possa ser atualizado a imagem ataves da procedure TASY_ATUALIZAR_TABELA
*/
begin
	Tasy_Copiar_tabela(nm_owner_origem_p,'tasy_padrao_imagem','N','S','where not exists	(select 1 from tasy_padrao_imagem b where	a.nr_sequencia	= b.nr_sequencia) ');
	CALL exec_sql_dinamico('TASY','update tasy_padrao_imagem a set a.dt_atualizacao = a.dt_atualizacao - 1 where exists (select 1 from tasy_versao.tasy_padrao_imagem b where a.nr_sequencia = b.nr_sequencia and a.ie_imagem is null and b.ie_imagem is not null)');
	Tasy_Atualizar_Tabela(nm_owner_origem_p,'tasy_padrao_imagem','tasy_padrao_imagem','where a.dt_atualizacao > (select b.dt_atualizacao from tasy_padrao_imagem b where a.nr_sequencia = b.nr_sequencia)');
exception
	when others then
		ds_erro_w := substr(SQLERRM,1,2000);
		insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela TASY_PADRAO_IMAGEM - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
		commit;
end;	
Tasy_Atualizar_Tabela(nm_owner_origem_p,'med_parametro','med_parametro',
	'where a.dt_atualizacao > (select b.dt_atualizacao from med_parametro b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'med_parametro','N','S','where not exists (select 1 
		from med_parametro b where	a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'MACRO_PRONTUARIO','N','S','where not exists (select 1 
		from macro_prontuario b where	a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'MED_MACRO_TEXTO','N','S','where not exists (select 1 
		from med_macro_texto b where	a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'macro_avaliacao','N','S','where not exists (select 1 
		from macro_avaliacao b where	a.nr_sequencia = b.nr_sequencia)');
Tasy_Atualizar_Tabela(nm_owner_origem_p,'same_operacao','same_operacao',
	'where a.dt_atualizacao > (select b.dt_atualizacao from same_operacao b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'same_operacao','N','S','where not exists (select 1 
		from same_operacao b where	a.nr_sequencia = b.nr_sequencia)');		
Tasy_Atualizar_Tabela(nm_owner_origem_p,'regra_dose_terap','regra_dose_terap',
	'where a.dt_atualizacao > (select b.dt_atualizacao from regra_dose_terap b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'regra_dose_terap','N','S','where not exists (select 1 
		from regra_dose_terap b where	a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'tabela_sistema_proc','N','S','where not exists (select 1 
		from tabela_sistema_proc b where	a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'nivel_capac_funcional_ecog','N','S','where not exists (select 1 
		from nivel_capac_funcional_ecog b where	a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'pep_acao','N','S','where not exists (select 1 
		from pep_acao b where	a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'prontuario_item_acao','N','S','where not exists (select 1 
		from prontuario_item_acao b where	a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'oft_acao','N','S','where not exists (select 1 
		from oft_acao b where	a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'oft_item_acao','N','S','where not exists (select 1 
		from oft_item_acao b where a.nr_sequencia = b.nr_sequencia)');
if (coalesce(philips_param_pck.get_nr_seq_idioma,1) = 1) or (philips_param_pck.get_nr_seq_idioma = 0) then		
	Tasy_Atualizar_Tabela(nm_owner_origem_p,'ANVISA_VIA_ADMINISTRACAO','ANVISA_VIA_ADMINISTRACAO',
		'where a.dt_atualizacao > (select b.dt_atualizacao from ANVISA_VIA_ADMINISTRACAO b where a.nr_sequencia = b.nr_sequencia)');
	Tasy_Copiar_tabela(nm_owner_origem_p,'ANVISA_VIA_ADMINISTRACAO','N','S','where not exists (select 1
			from ANVISA_VIA_ADMINISTRACAO b where	a.nr_sequencia = b.nr_sequencia) ');
	Tasy_Atualizar_Tabela(nm_owner_origem_p,'ANVISA_FORMA_FORMACEUTICA','ANVISA_FORMA_FORMACEUTICA',
		'where a.dt_atualizacao > (select b.dt_atualizacao from ANVISA_FORMA_FORMACEUTICA b where a.nr_sequencia = b.nr_sequencia)');
	Tasy_Copiar_tabela(nm_owner_origem_p,'ANVISA_FORMA_FORMACEUTICA','N','S','where not exists (select 1
			from ANVISA_FORMA_FORMACEUTICA b where	a.nr_sequencia = b.nr_sequencia) ');
	Tasy_Atualizar_Tabela(nm_owner_origem_p,'ANVISA_FORMA_FARM_VIA','ANVISA_FORMA_FARM_VIA',
		'where a.dt_atualizacao > (select b.dt_atualizacao from ANVISA_FORMA_FARM_VIA b where a.nr_sequencia = b.nr_sequencia)');
	Tasy_Copiar_tabela(nm_owner_origem_p,'ANVISA_FORMA_FARM_VIA','N','S','where not exists (select 1 from ANVISA_FORMA_FARM_VIA b where	a.nr_sequencia = b.nr_sequencia) ');
	Tasy_Atualizar_Tabela(nm_owner_origem_p,'ANVISA_FORMA_LOCALIZADA','ANVISA_FORMA_LOCALIZADA',
		'where a.dt_atualizacao > (select b.dt_atualizacao from ANVISA_FORMA_LOCALIZADA b where a.nr_sequencia = b.nr_sequencia)');
	Tasy_Copiar_tabela(nm_owner_origem_p,'ANVISA_FORMA_LOCALIZADA','N','S','where not exists (select 1
			from ANVISA_FORMA_LOCALIZADA b where	a.nr_sequencia = b.nr_sequencia) ');
end if;	
Tasy_Atualizar_Tabela(nm_owner_origem_p,'pep_informacao','pep_informacao',
	'where a.dt_atualizacao > (select b.dt_atualizacao from pep_informacao b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'PEP_INFORMACAO','N','S','where not exists (select 1
		from PEP_INFORMACAO b where a.nr_sequencia = b.nr_sequencia) ');
Tasy_Copiar_tabela(nm_owner_origem_p,'PEP_DEST_INF','S','S','where not exists (select 1
		from PEP_DEST_INF b where a.nr_sequencia = b.nr_sequencia) ');
Tasy_Copiar_tabela(nm_owner_origem_p,'interface_tipo','N','S','where not exists (select 1 
		from interface_tipo b where a.cd_tipo_interface = b.cd_tipo_interface)');
Tasy_Atualizar_Tabela(nm_owner_origem_p,'PRONTUARIO_PASTA','PRONTUARIO_PASTA',
	'where a.dt_atualizacao > (select b.dt_atualizacao from PRONTUARIO_PASTA b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'PRONTUARIO_PASTA','N','S','where not exists (select 1
		from PRONTUARIO_PASTA b where a.nr_sequencia = b.nr_sequencia) ');
begin
select 	count(*)
into STRICT	qt_objeto_w
from 	user_objects
where 	object_name = 'ATUALIZAR_PRONT_ITEM_PASTA';
exception
when others then
		qt_objeto_w	:= 0;
end;
if (qt_objeto_w = 0) then
	Tasy_Atualizar_Tabela(nm_owner_origem_p,'PRONTUARIO_ITEM_PASTA','PRONTUARIO_ITEM_PASTA',
		'where a.dt_atualizacao > (select b.dt_atualizacao from PRONTUARIO_ITEM_PASTA b where a.nr_sequencia = b.nr_sequencia)');
end if;
Tasy_Copiar_tabela(nm_owner_origem_p,'PRONTUARIO_ITEM_PASTA','N','S','where not exists (select 1
		from PRONTUARIO_ITEM_PASTA b where a.nr_sequencia = b.nr_sequencia) ');
if (qt_objeto_w > 0) then
	CALL exec_sql_dinamico('Dalcastagne','begin ATUALIZAR_PRONT_ITEM_PASTA; end;');
end if;
begin
	Tasy_Atualizar_Tabela(nm_owner_origem_p,'VICE_ESCALA','VICE_ESCALA',
	'where a.dt_atualizacao > (select b.dt_atualizacao from VICE_ESCALA b where a.nr_sequencia = b.nr_sequencia)');
	Tasy_Copiar_tabela(nm_owner_origem_p,'VICE_ESCALA','N','S','where not exists (select 1
		from VICE_ESCALA b where a.nr_sequencia = b.nr_sequencia) ');
exception
	when others then
		ds_erro_w := substr(SQLERRM,1,2000);
		insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela XML_ATRIBUTO - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
		commit;
end;
Tasy_Atualizar_Tabela(nm_owner_origem_p,'TIPO_HISTORICO_SAUDE','TIPO_HISTORICO_SAUDE',
	'where a.dt_atualizacao > (select b.dt_atualizacao from TIPO_HISTORICO_SAUDE b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'TIPO_HISTORICO_SAUDE','N','S','where not exists (select 1
		from TIPO_HISTORICO_SAUDE b where a.nr_sequencia = b.nr_sequencia) ');
/* Tabelas do TISS*/

Tasy_Copiar_tabela(nm_owner_origem_p,'tiss_inconsistencia','N','S','where not exists (select 1 
		from tiss_inconsistencia b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'TISS_LISTA_CAMPO_PREST','N','S','where not exists (select 1 
		from TISS_LISTA_CAMPO_PREST b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'TISS_CAMPO_PREST_ORIGEM','N','S','where not exists (select 1 
		from TISS_CAMPO_PREST_ORIGEM b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'INCONSISTENCIA_ESCRIT','N','S','where not exists (select 1 
		from INCONSISTENCIA_ESCRIT b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'TISS_CONSELHO_PROFISSIONAL','N','S','where not exists (select 1 
		from TISS_CONSELHO_PROFISSIONAL b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'TISS_UNIDADE_FEDERATIVA','N','S','where not exists (select 1 
		from TISS_UNIDADE_FEDERATIVA b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'TISS_UNIDADE_MEDIDA','N','S','where not exists (select 1 
		from TISS_UNIDADE_MEDIDA b where a.nr_sequencia = b.nr_sequencia)');
/* Edgar 25/01/2010, OS 191376, esta tabela n?o deve mais ir com a vers?o.
   Se necessario, o cliente pode solicitar a carga inicial da tabela
   Esta tabela n?o pode mais ir com a vers?o porque o usuario pode cadastrar motivos de glosa adicionais
Tasy_Copiar_tabela(nm_owner_origem_p,'TISS_MOTIVO_GLOSA','N','S','where cd_convenio is null and not exists (select 1 
		from TISS_MOTIVO_GLOSA b where a.nr_sequencia = b.nr_sequencia)');
tasy_atualizar_tabela(nm_owner_origem_p,'TISS_MOTIVO_GLOSA','TISS_MOTIVO_GLOSA',
	'WHERE	a.dt_atualizacao > (select b.dt_atualizacao from tiss_motivo_glosa b where a.nr_sequencia = b.nr_sequencia)');
*/
Tasy_Copiar_tabela(nm_owner_origem_p,'TISS_MOTIVO_SAIDA_INT','N','S','where not exists (select 1 
		from TISS_MOTIVO_SAIDA_INT b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'TISS_TIPO_SAIDA_CONSULTA','N','S','where not exists (select 1 
		from TISS_TIPO_SAIDA_CONSULTA b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'TISS_TIPO_SAIDA_SPSADT','N','S','where not exists (select 1 
		from TISS_TIPO_SAIDA_SPSADT b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'TISS_TIPO_TABELA','N','S','where not exists (select 1 
		from TISS_TIPO_TABELA b where a.nr_sequencia = b.nr_sequencia)');		
Tasy_atualizar_tabela(nm_owner_origem_p,'TISS_TIPO_TABELA','TISS_TIPO_TABELA',
	'WHERE	a.dt_atualizacao > (select b.dt_atualizacao from TISS_TIPO_TABELA b where a.nr_sequencia = b.nr_sequencia)');	
Tasy_Copiar_tabela(nm_owner_origem_p,'TISS_LISTA_CAMPO','N','S','where not exists (select 1 
		from TISS_LISTA_CAMPO b where a.nr_sequencia = b.nr_sequencia)');
Tasy_atualizar_tabela(nm_owner_origem_p,'TISS_LISTA_CAMPO','TISS_LISTA_CAMPO',
	'WHERE	a.dt_atualizacao > (select b.dt_atualizacao from TISS_LISTA_CAMPO b where a.nr_sequencia = b.nr_sequencia)');	
Tasy_Copiar_tabela(nm_owner_origem_p,'TISS_LISTA_CAMPO_VERSAO','N','S','where not exists (select 1 
		from TISS_LISTA_CAMPO_VERSAO b where a.nr_sequencia = b.nr_sequencia)');
Tasy_atualizar_tabela(nm_owner_origem_p,'TISS_LISTA_CAMPO_VERSAO','TISS_LISTA_CAMPO_VERSAO',
	'WHERE	a.dt_atualizacao > (select b.dt_atualizacao from TISS_LISTA_CAMPO_VERSAO b where a.nr_sequencia = b.nr_sequencia)');		
Tasy_Copiar_tabela(nm_owner_origem_p,'CNS_TIPO_LOGRADOURO','N','S','where not exists (select 1 
		from CNS_TIPO_LOGRADOURO b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'sus_inconsistencia','N','S','where not exists (select 1 
		from sus_inconsistencia b where	a.cd_inconsistencia = b.cd_inconsistencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'sus_inconsistencia_laudo','N','S','where not exists (select 1 
		from sus_inconsistencia_laudo b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'sus_regra','N','S','where not exists (select 1 
		from sus_regra b where a.nr_sequencia = b.nr_sequencia)');
/*
Tasy_Copiar_tabela(nm_owner_origem_p,'sus_regra_proc','N','S','where not exists (select 1 
		from sus_regra_proc b where a.nr_sequencia = b.nr_sequencia)');
*/
Tasy_Copiar_tabela(nm_owner_origem_p,'sus_doc_carga','S','S','');
/* Tabelas do Plano -
	Felipe - 09/02/2011 - Coloquei o count abaixo para so copiar as tabelas da OPS caso o cliente possua registro de operadora no sistema
*/
begin
select	count(*)
into STRICT	qt_ops_w
from	pls_outorgante;
exception
when others then
	qt_ops_w	:= 0;
end;
/* LEPINSKI - As tabelas abaixo foram tiradas do IF da operadora, pois as informac?es s?o utilizadas na func?o Gest?o de Produtos Philips, na base CORP */

tasy_atualizar_tabela(nm_owner_origem_p,'pls_dossie_item','pls_dossie_item',
	'WHERE	a.dt_atualizacao > (select b.dt_atualizacao from pls_dossie_item b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'pls_dossie_item','N','S','where not exists (select 1 
			from pls_dossie_item b where a.nr_sequencia = b.nr_sequencia)');
tasy_atualizar_tabela(nm_owner_origem_p,'pls_cadastro_regra_item','pls_cadastro_regra_item',
	'WHERE	a.dt_atualizacao > (select b.dt_atualizacao from pls_cadastro_regra_item b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'pls_cadastro_regra_item','N','S','where not exists (select 1 
			from pls_cadastro_regra_item b where a.nr_sequencia = b.nr_sequencia)');
tasy_atualizar_tabela(nm_owner_origem_p,'pls_itens_contrato_benef','pls_itens_contrato_benef',
	'WHERE	a.dt_atualizacao > (select b.dt_atualizacao from pls_itens_contrato_benef b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'pls_itens_contrato_benef','N','S','where not exists (select 1 
			from pls_itens_contrato_benef b where a.nr_sequencia = b.nr_sequencia)');
tasy_atualizar_tabela(nm_owner_origem_p,'pls_itens_contrato_regra','pls_itens_contrato_regra',
	'WHERE	a.dt_atualizacao > (select b.dt_atualizacao from pls_itens_contrato_regra b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'pls_itens_contrato_regra','N','S','where not exists (select 1 
			from pls_itens_contrato_regra b where a.nr_sequencia = b.nr_sequencia)');
tasy_atualizar_tabela(nm_owner_origem_p,'pls_itens_produto_regra','pls_itens_produto_regra',
	'WHERE	a.dt_atualizacao > (select b.dt_atualizacao from pls_itens_produto_regra b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'pls_itens_produto_regra','N','S','where not exists (select 1 
			from pls_itens_produto_regra b where a.nr_sequencia = b.nr_sequencia)');
tasy_atualizar_tabela(nm_owner_origem_p,'pls_item_criterios_contab','pls_item_criterios_contab',
	'WHERE	a.dt_atualizacao > (select b.dt_atualizacao from pls_item_criterios_contab b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'pls_item_criterios_contab','N','S','where not exists (select 1 
			from pls_item_criterios_contab b where a.nr_sequencia = b.nr_sequencia)');
tasy_atualizar_tabela(nm_owner_origem_p,'pls_parametros_item','pls_parametros_item',
	'WHERE	a.dt_atualizacao > (select b.dt_atualizacao from pls_parametros_item b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'pls_parametros_item','N','S','where not exists (select 1 
			from pls_parametros_item b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'PLS_SIB_INCONSISTENCIA','N','S','where not exists (select 1 from PLS_SIB_INCONSISTENCIA b ' ||
		' where	a.cd_inconsistencia = b.cd_inconsistencia) ' ||
		' and not exists (select	1 from PLS_SIB_INCONSISTENCIA b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'PLS_SIB_DIVERGENCIA_CONF','N','S','where not exists (select 1 from PLS_SIB_DIVERGENCIA_CONF b ' ||
		' where	a.cd_divergencia = b.cd_divergencia) ' ||
		' and not exists (select	1 from PLS_SIB_DIVERGENCIA_CONF b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'pls_consistencia_reajuste','N','S','where not exists (select 1 
			from pls_consistencia_reajuste b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'sib_inconsistencia_conf','N','S','where not exists (select 1 from sib_inconsistencia_conf b ' ||
		' where	a.cd_inconsistencia = b.cd_inconsistencia) ' ||
		' and not exists (select	1 from sib_inconsistencia_conf b where a.nr_sequencia = b.nr_sequencia)');
if (qt_ops_w > 0) then
	/* Felipe - 21/01/2011 - Coloquei a copia da pls_glosa_evento pelos campos NR_SEQ_MOTIVO_GLOSA e IE_EVENTO.
		Pois  ao deletar um evento e criar novamente, estava dando erro com a UK da tabela
	Tasy_Copiar_tabela(nm_owner_origem_p,'pls_glosa_evento','N','S',' where not exists ( select 1 from pls_glosa_evento b ' ||
		' where a.nr_sequencia = b.nr_sequencia)');
	 Felipe - 21/01/2011 - Tirei a atualizac?o da pls_glosa_evento. Pois os clientes v?o poder cadastrar novos eventos
	Tasy_Atualizar_tabela(nm_owner_origem_p,'pls_glosa_evento','pls_glosa_evento',
		'WHERE A.DT_ATUALIZACAO > (select b.dt_atualizacao from pls_glosa_evento b where a.nr_sequencia = b.nr_sequencia)');
	Tasy_Copiar_tabela(nm_owner_origem_p,'pls_glosa_evento','N','S',' where not exists ( select 1 from pls_glosa_evento b ' ||
		' where a.nr_seq_motivo_glosa = b.nr_seq_motivo_glosa and a.ie_evento = b.ie_evento) ' ||
		' and not exists ( select 1 from pls_glosa_evento b where a.nr_sequencia = b.nr_sequencia) '); 
	Francisco - 06/05/2014 - OS 730121 
	 ----------------------------------------------------------------------------------------------------------

	*******************************
	Inicio copia PLS_GLOSA_EVENTO
	*******************************
	-------------------------------------------------------------------------------------------------------------

	 Excluir os eventos que n?o tem integridade atualmente */
	ds_comando_w := 'delete from pls_glosa_evento a where not exists (select 1 from tiss_motivo_glosa x where x.nr_sequencia = a.nr_seq_motivo_glosa)';
	vl_retorno_w := Obter_Valor_Dinamico(ds_comando_w, vl_retorno_w);
	/* Atualizar o campo novo CD_MOTIVO_TISS nos registros ja existentes  e que ainda esta vazio */

	ds_comando_w := 'update	pls_glosa_evento a ' ||
			'set	cd_motivo_tiss =	(select	max(x.cd_motivo_tiss) ' ||
			'				from	tiss_motivo_glosa x ' ||
			'				where	x.nr_sequencia = a.nr_seq_motivo_glosa) ' ||
			'where	a.cd_motivo_tiss is null';
	vl_retorno_w := Obter_Valor_Dinamico(ds_comando_w, vl_retorno_w);
	/* Desabilitar integridade com motivo de glosa */

	ds_comando_w := 'alter table pls_glosa_evento disable' ||' constraint PLSGLEV_TISSMGL_FK';
	vl_retorno_w := Obter_Valor_Dinamico(ds_comando_w, vl_retorno_w);
	/*Tasy_Copiar_tabela(nm_owner_origem_p,'pls_glosa_evento','N','N','where (a.ie_vai_versao = ' || chr(39) || 'S' || chr(39) || ' or a.ie_vai_versao is null) ' || So o que esta pronto para ir na vers?o 
									' and	a.cd_motivo_tiss >= ' || chr(39) || '1001' || chr(39) || ' ' ||  So glosas validas 
									' and	not exists (select 1 from pls_glosa_evento b where b.nr_sequencia = a.nr_sequencia) ' || N?o violar pk 
									' and	not exists (	select	1 ' ||
									'			from	pls_glosa_evento b ' ||
									'			where	b.ie_evento = a.ie_evento ' ||
									'			and	b.cd_motivo_tiss = a.cd_motivo_tiss)');*/

	/* Gravar o Seq do Motivo de glosa conforme base do cliente */

	ds_comando_w := 'update	pls_glosa_evento a ' ||
			'set	nr_seq_motivo_glosa =	(select	min(x.nr_sequencia) ' ||
			'				from	tiss_motivo_glosa x ' ||
			'				where	x.cd_motivo_tiss = a.cd_motivo_tiss) ' ||
			'where	a.cd_motivo_tiss is not null ' ||
			'and	not exists (select 1 from tiss_motivo_glosa x where x.nr_sequencia = a.nr_seq_motivo_glosa)';
	vl_retorno_w := Obter_Valor_Dinamico(ds_comando_w, vl_retorno_w);
	/* Reabilitar integridade com motivo de glosa */

	ds_comando_w := 'alter table pls_glosa_evento enable' ||' constraint PLSGLEV_TISSMGL_FK';
	vl_retorno_w := Obter_Valor_Dinamico(ds_comando_w, vl_retorno_w);
	/* ----------------------------------------------------------------------------------------------------------
	*******************************
	Termino copia PLS_GLOSA_EVENTO
	*******************************
	*/
	tasy_atualizar_tabela(nm_owner_origem_p,'pls_web_param_outorgante','pls_web_param_outorgante',
		'WHERE	a.dt_atualizacao > (select b.dt_atualizacao from pls_web_param_outorgante b where a.nr_sequencia = b.nr_sequencia)');
	tasy_copiar_tabela(nm_owner_origem_p,'pls_web_param_outorgante','N','S',
		'where not exists (select 1 from pls_web_param_outorgante b where a.nr_sequencia = b.nr_sequencia)');
	Tasy_Copiar_tabela(nm_owner_origem_p,'pls_inconsistencia','N','S','where not exists (select 1 
			from pls_inconsistencia b where	a.nr_sequencia = b.nr_sequencia)');
	/*Tasy_Copiar_tabela(nm_owner_origem_p,'pls_plano_item','N','S','where not exists (select 1 
			from pls_plano_item b where a.nr_sequencia = b.nr_sequencia)');*/
	Tasy_Copiar_tabela(nm_owner_origem_p,'pls_macro_plano','N','S','where not exists (select 1 
			from pls_macro_plano b where a.nr_sequencia = b.nr_sequencia)');
	Tasy_Copiar_tabela(nm_owner_origem_p,'pls_portab_inconsistencia','N','S','where not exists (select 1 
			from pls_portab_inconsistencia b where a.nr_sequencia = b.nr_sequencia)');
	Tasy_Copiar_tabela(nm_owner_origem_p,'diops_inconsistencia','N','S','where not exists (select 1 
			from diops_inconsistencia b where a.nr_sequencia = b.nr_sequencia)');
	Tasy_Copiar_tabela(nm_owner_origem_p,'sib_inconsistencia','N','S','where not exists (select 1 from sib_inconsistencia b ' ||
		' where	a.cd_inconsistencia = b.cd_inconsistencia and a.cd_estabelecimento = b.cd_estabelecimento) ' ||
		' and not exists (select	1 from sib_inconsistencia b where a.nr_sequencia = b.nr_sequencia)');
	Tasy_Copiar_tabela(nm_owner_origem_p,'ptu_inconsistencia','N','S','where not exists (select 1 
			from ptu_inconsistencia b where a.cd_inconsistencia = b.cd_inconsistencia)');
	Tasy_Copiar_tabela(nm_owner_origem_p,'pls_cad_inconsist_pessoa','N','S','where not exists (select 1 
			from pls_cad_inconsist_pessoa b where a.cd_inconsistencia = b.cd_inconsistencia)');
	Tasy_Copiar_tabela(nm_owner_origem_p,'ptu_inconsistencia_prest','N','S','where not exists (select 1 
			from ptu_inconsistencia_prest b where a.cd_inconsistencia = b.cd_inconsistencia)');
	Tasy_Copiar_tabela(nm_owner_origem_p,'ptu_inconsistencia_a700','N','S','where not exists (select 1 
			from ptu_inconsistencia_a700 b where a.cd_inconsistencia = b.cd_inconsistencia)');
	Tasy_Copiar_tabela(nm_owner_origem_p,'ptu_inconsistencia_mat','N','S','where not exists (select 1 
			from ptu_inconsistencia_mat b where a.nr_sequencia = b.nr_sequencia)');
	Tasy_Copiar_tabela(nm_owner_origem_p,'pls_macro_mensalidade','N','S','where not exists (select 1 
			from pls_macro_mensalidade b where a.nr_sequencia = b.nr_sequencia)');
	Tasy_Copiar_tabela(nm_owner_origem_p,'sib_conferencia_diverg','N','S','where not exists (select 1 
			from sib_conferencia_diverg b where a.nr_sequencia = b.nr_sequencia)');
	Tasy_Copiar_tabela(nm_owner_origem_p,'pls_macro_carteira','N','S','where not exists (select 1 
			from pls_macro_carteira b where a.nr_sequencia = b.nr_sequencia)');
	Tasy_Copiar_tabela(nm_owner_origem_p,'pls_macro_analise_aut','N','S','where not exists (select 1 
			from pls_macro_analise_aut b where a.nr_sequencia = b.nr_sequencia)');
	Tasy_Copiar_tabela(nm_owner_origem_p,'pls_grupo_relatorio','N','S','where not exists (select 1 
			from pls_grupo_relatorio b where a.nr_sequencia = b.nr_sequencia)');
	Tasy_Copiar_tabela(nm_owner_origem_p,'PLS_MACRO_ALERTAS_EVENTOS','N','S','where not exists (select 1 
			from pls_macro_alertas_eventos b where a.nr_sequencia = b.nr_sequencia)');
	Tasy_Copiar_tabela(nm_owner_origem_p,'pls_inconsistencia_inc_seg','N','S','where not exists (select 1 from pls_inconsistencia_inc_seg b ' ||
		' where	a.cd_inconsistencia = b.cd_inconsistencia and a.cd_estabelecimento = b.cd_estabelecimento) ' ||
		' and not exists (select	1 from pls_inconsistencia_inc_seg b where a.nr_sequencia = b.nr_sequencia)');
	Tasy_Copiar_tabela(nm_owner_origem_p,'pls_atributos_web','N','S','where not exists (select 1 
			from pls_atributos_web b where a.nr_sequencia = b.nr_sequencia)');
	Tasy_Copiar_tabela(nm_owner_origem_p,'pls_inconsistencia_int','N','S','where not exists (select 1 
			from pls_inconsistencia_int b where a.nr_sequencia = b.nr_sequencia)');
	Tasy_Copiar_tabela(nm_owner_origem_p,'pls_inconsist_processo','N','S','where not exists (select 1 
			from pls_inconsist_processo b where a.nr_sequencia = b.nr_sequencia)');
	Tasy_Copiar_tabela(nm_owner_origem_p,'pls_inconsistencia_contab','N','S','where not exists (select 1 
			from pls_inconsistencia_contab b where a.cd_inconsistencia = b.cd_inconsistencia)');
	Tasy_Copiar_tabela(nm_owner_origem_p,'pls_inconsist_contab_lote','N','S','where not exists (select 1 
			from pls_inconsist_contab_lote b where a.nr_sequencia = b.nr_sequencia)');
	Tasy_Copiar_tabela(nm_owner_origem_p,'pls_inconsist_cancel_rec','N','S','where not exists (select 1 
			from pls_inconsist_cancel_rec b where a.cd_inconsistencia = b.cd_inconsistencia)');
	Tasy_Copiar_tabela(nm_owner_origem_p,'PLS_ITENS_RELAC_CLIENTE','N','S','where not exists (select 1 
			from PLS_ITENS_RELAC_CLIENTE b where a.nr_sequencia = b.nr_sequencia)');
	Tasy_Copiar_tabela(nm_owner_origem_p,'SIP_INCONSISTENCIA_SISTEMA','N','S','where not exists (select 1 
			from SIP_INCONSISTENCIA_SISTEMA b where a.nr_sequencia = b.nr_sequencia)');
	Tasy_Copiar_tabela(nm_owner_origem_p,'SIP_INCONSISTENCIA','N','S','where not exists (select 1 
			from SIP_INCONSISTENCIA b where a.nr_sequencia = b.nr_sequencia)');
	Tasy_Copiar_tabela(nm_owner_origem_p,'PLS_ITENS_SOLICITACAO_LEAD','N','S','where not exists (select 1 
			from PLS_ITENS_SOLICITACAO_LEAD b where a.nr_sequencia = b.nr_sequencia)');
	Tasy_Copiar_tabela(nm_owner_origem_p,'PLS_ITENS_PROSPECCAO','N','S','where not exists (select 1 
			from PLS_ITENS_PROSPECCAO b where a.nr_sequencia = b.nr_sequencia)');
	Tasy_Copiar_tabela(nm_owner_origem_p,'PLS_ITENS_PROPOSTA','N','S','where not exists (select 1 
			from PLS_ITENS_PROPOSTA b where a.nr_sequencia = b.nr_sequencia)');
	Tasy_Copiar_tabela(nm_owner_origem_p,'PLS_ITENS_ANALISE_ADESAO','N','S','where not exists (select 1 
			from PLS_ITENS_ANALISE_ADESAO b where a.nr_sequencia = b.nr_sequencia)');
	tasy_atualizar_tabela(nm_owner_origem_p,'PLS_OC_CTA_TIPO_VALIDACAO','PLS_OC_CTA_TIPO_VALIDACAO',
	'WHERE	a.dt_atualizacao > (select b.dt_atualizacao from PLS_OC_CTA_TIPO_VALIDACAO b where a.nr_sequencia = b.nr_sequencia)');
	Tasy_Copiar_tabela(nm_owner_origem_p,'PLS_OC_CTA_TIPO_VALIDACAO','N','S','where not exists (select 1 
			from PLS_OC_CTA_TIPO_VALIDACAO b where a.nr_sequencia = b.nr_sequencia)');
	Tasy_Copiar_tabela(nm_owner_origem_p,'PLS_OC_CTA_TIPO_VAL_GLOSA','N','S','where not exists (select 1 
			from PLS_OC_CTA_TIPO_VAL_GLOSA b where a.nr_sequencia = b.nr_sequencia)');
	Tasy_Copiar_tabela(nm_owner_origem_p,'PLS_ACAO_ANALISE','N','S','where not exists (select 1 
			from PLS_ACAO_ANALISE b where a.nr_sequencia = b.nr_sequencia)');
	Tasy_Copiar_tabela(nm_owner_origem_p,'PLS_MACRO_MENSAGEM_GUIA','N','S','where not exists (select 1 
			from PLS_MACRO_MENSAGEM_GUIA b where a.nr_sequencia = b.nr_sequencia)');
	Tasy_Copiar_tabela(nm_owner_origem_p,'PLS_MACRO_ANALISE_ADESAO','N','S','where not exists (select 1 
			from PLS_MACRO_ANALISE_ADESAO b where a.nr_sequencia = b.nr_sequencia)');
	Tasy_Copiar_tabela(nm_owner_origem_p,'PLS_RP_CTA_TIPO_VALIDACAO','N','S','where not exists (select 1 
			from PLS_RP_CTA_TIPO_VALIDACAO b where a.nr_sequencia = b.nr_sequencia)');
	tasy_atualizar_tabela(nm_owner_origem_p,'PLS_RP_CTA_TIPO_VALIDACAO','PLS_RP_CTA_TIPO_VALIDACAO',
	'WHERE	a.dt_atualizacao > (select b.dt_atualizacao from PLS_RP_CTA_TIPO_VALIDACAO b where a.nr_sequencia = b.nr_sequencia)');
	Tasy_Copiar_tabela(nm_owner_origem_p,'PLS_CTA_TIPO_PROCESSO','N','S','where not exists (select 1 
			from PLS_CTA_TIPO_PROCESSO b where a.nr_sequencia = b.nr_sequencia)');
	tasy_atualizar_tabela(nm_owner_origem_p,'PLS_CTA_TIPO_PROCESSO','PLS_CTA_TIPO_PROCESSO',
	'WHERE	a.dt_atualizacao > (select b.dt_atualizacao from PLS_CTA_TIPO_PROCESSO b where a.nr_sequencia = b.nr_sequencia)');
	Tasy_Copiar_tabela(nm_owner_origem_p,'PLS_TIPO_INFORMACAO_BOLETO','N','S','where not exists (select 1 
			from PLS_TIPO_INFORMACAO_BOLETO b where a.nr_sequencia = b.nr_sequencia)');
	tasy_atualizar_tabela(nm_owner_origem_p,'PLS_TIPO_INFORMACAO_BOLETO','PLS_TIPO_INFORMACAO_BOLETO',
	'WHERE	a.dt_atualizacao > (select b.dt_atualizacao from PLS_TIPO_INFORMACAO_BOLETO b where a.nr_sequencia = b.nr_sequencia)');
	Tasy_Copiar_tabela(nm_owner_origem_p,'PLS_CRITICA_MENSALIDADE','N','S','where not exists (select 1 
			from PLS_CRITICA_MENSALIDADE b where a.nr_sequencia = b.nr_sequencia)');
	Tasy_Copiar_tabela(nm_owner_origem_p,'PLS_CRITICA_COPARTICIPACAO','N','S','where not exists (select 1 
			from PLS_CRITICA_COPARTICIPACAO b where a.nr_sequencia = b.nr_sequencia)');
	Tasy_Copiar_tabela(nm_owner_origem_p,'PLS_OCOR_AUT_TIPO_VALID','N','S','where not exists (select 1 
			from PLS_OCOR_AUT_TIPO_VALID b where a.nr_sequencia = b.nr_sequencia)');
	Tasy_Copiar_tabela(nm_owner_origem_p,'PLS_INCONS_LANC_PROG_IMP','N','S','where not exists (select 1 
			from PLS_INCONS_LANC_PROG_IMP b where a.nr_sequencia = b.nr_sequencia)');
	Tasy_Copiar_tabela(nm_owner_origem_p,'PLS_TISS_ORIGEM_EVENTO','N','S','where not exists (select 1 
			from PLS_TISS_ORIGEM_EVENTO b where a.nr_sequencia = b.nr_sequencia)');
	Tasy_atualizar_tabela(nm_owner_origem_p,'PLS_TISS_ORIGEM_EVENTO','PLS_TISS_ORIGEM_EVENTO',
			'WHERE	a.dt_atualizacao > (select b.dt_atualizacao from PLS_TISS_ORIGEM_EVENTO b where a.nr_sequencia = b.nr_sequencia)');
	Tasy_Copiar_tabela(nm_owner_origem_p,'PLS_CTA_PROCESSO','N','S','where not exists (select 1 
			from PLS_CTA_PROCESSO b where a.nr_sequencia = b.nr_sequencia)');
	Tasy_atualizar_tabela(nm_owner_origem_p,'PLS_CTA_PROCESSO','PLS_CTA_PROCESSO',
			'WHERE	a.dt_atualizacao > (select b.dt_atualizacao from PLS_CTA_PROCESSO b where a.nr_sequencia = b.nr_sequencia)');
	Tasy_Copiar_tabela(nm_owner_origem_p,'PLS_INCONSISTENCIA_LIB_FAT','N','S', 'where not exists (select 1 
			from PLS_INCONSISTENCIA_LIB_FAT b where b.nr_sequencia = a.nr_sequencia)');
	Tasy_Copiar_tabela(nm_owner_origem_p,'PLS_MONITOR_TISS_GPO_PROC','N','S','where not exists (select 1 
			from PLS_MONITOR_TISS_GPO_PROC b where a.nr_sequencia = b.nr_sequencia)');
	Tasy_atualizar_tabela(nm_owner_origem_p,'PLS_MONITOR_TISS_GPO_PROC','PLS_MONITOR_TISS_GPO_PROC',
			'WHERE	a.dt_atualizacao > (select b.dt_atualizacao from PLS_MONITOR_TISS_GPO_PROC b where a.nr_sequencia = b.nr_sequencia)');
	Tasy_Copiar_tabela(nm_owner_origem_p,'PLS_MONITOR_TISS_INC','N','S','where not exists (select 1 
			from PLS_MONITOR_TISS_INC b where a.nr_sequencia = b.nr_sequencia)');
	Tasy_atualizar_tabela(nm_owner_origem_p,'PLS_MONITOR_TISS_INC','PLS_MONITOR_TISS_INC',
			'WHERE	a.dt_atualizacao > (select b.dt_atualizacao from PLS_MONITOR_TISS_INC b where a.nr_sequencia = b.nr_sequencia)');	
	Tasy_Copiar_tabela(nm_owner_origem_p,'PLS_ARQUIVOS_BI_TIPOS','N','S','where not exists (select 1 
			from PLS_ARQUIVOS_BI_TIPOS b where a.nr_sequencia = b.nr_sequencia)');
	Tasy_Copiar_tabela(nm_owner_origem_p,'PLS_ARQUIVOS_BI_LIBERACAO','N','S','where not exists (select 1 
			from PLS_ARQUIVOS_BI_LIBERACAO b where a.nr_sequencia = b.nr_sequencia)');
	Tasy_Copiar_tabela(nm_owner_origem_p,'PLS_FAT_CAMPO','N','S','where not exists (select 1 
			from PLS_FAT_CAMPO b where a.nr_sequencia = b.nr_sequencia)');
	Tasy_Copiar_tabela(nm_owner_origem_p,'PLS_PROCESSO_ADIC_VERSAO','N','S','where not exists (select 1 
			from PLS_PROCESSO_ADIC_VERSAO b where a.nr_sequencia = b.nr_sequencia) and dt_liberacao is not null');
	Tasy_Copiar_tabela(nm_owner_origem_p,'PTU_INCONSISTENCIA_A300','N','S','where not exists (select 1 from PTU_INCONSISTENCIA_A300 b ' ||
		' where	a.cd_inconsistencia = b.cd_inconsistencia) ' ||
		' and not exists (select 1 from PTU_INCONSISTENCIA_A300 b where a.nr_sequencia = b.nr_sequencia)');
	Tasy_Atualizar_Tabela(nm_owner_origem_p,'pls_tiss_termo_cred_deb','pls_tiss_termo_cred_deb',
	' where a.dt_atualizacao > (select b.dt_atualizacao from pls_tiss_termo_cred_deb b where a.nr_sequencia = b.nr_sequencia)');
	Tasy_Copiar_tabela(nm_owner_origem_p,'pls_tiss_termo_cred_deb','N','S',' where not exists (select 1 from pls_tiss_termo_cred_deb b '||
		' where a.nr_sequencia = b.nr_sequencia)');
	Tasy_Copiar_Tabela(nm_owner_origem_p, 'PLS_CAD_DUPLICIDADE_LEAD','N','S','where not exists (select 1 from PLS_CAD_DUPLICIDADE_LEAD b where a.nr_sequencia = b.nr_sequencia)');
	Tasy_Copiar_tabela(nm_owner_origem_p,'pls_atrib_qualif_prest','N','S','where not exists (select 1 
			from pls_atrib_qualif_prest b where a.nr_sequencia = b.nr_sequencia)');	
	Tasy_Atualizar_Tabela(nm_owner_origem_p,'pls_atrib_qualif_prest','pls_atrib_qualif_prest',
	' where a.dt_atualizacao > (select b.dt_atualizacao from pls_atrib_qualif_prest b where a.nr_sequencia = b.nr_sequencia)');
	Tasy_Copiar_tabela(nm_owner_origem_p,'pls_cg_tab_tasy','N','S','where not exists (select 1 
			from pls_cg_tab_tasy b where a.nr_sequencia = b.nr_sequencia)');	
	Tasy_Atualizar_Tabela(nm_owner_origem_p,'pls_cg_tab_tasy','pls_cg_tab_tasy',
	' where a.dt_atualizacao > (select b.dt_atualizacao from pls_cg_tab_tasy b where a.nr_sequencia = b.nr_sequencia)');
end if;
tasy_atualizar_tabela(nm_owner_origem_p,'prontuario_item','prontuario_item',
	'WHERE	a.dt_atualizacao > (select b.dt_atualizacao from prontuario_item b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'prontuario_item','N','S','where not exists	(select 1
			from prontuario_item b where	a.nr_sequencia	= b.nr_sequencia) ');
/*Atualizar_prontuario_item;*/

tasy_atualizar_tabela(nm_owner_origem_p,'sinal_vital','sinal_vital',
	'WHERE	a.dt_atualizacao > (select b.dt_atualizacao from sinal_vital b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'sinal_vital','N','S','where not exists	(select 1
		from sinal_vital b where	a.nr_sequencia	= b.nr_sequencia) ');
CALL Atualizar_sinal_vital();
/*Tabelas dos modulos Web*/

tasy_atualizar_tabela(nm_owner_origem_p,'web_componente','web_componente',
	'WHERE	a.dt_atualizacao > (select b.dt_atualizacao from web_componente b where a.nr_sequencia = b.nr_sequencia)');
tasy_copiar_tabela(nm_owner_origem_p,'web_componente','N','S',
	'where not exists (select 1 from web_componente b where a.nr_sequencia = b.nr_sequencia)');
tasy_atualizar_tabela(nm_owner_origem_p,'web_css_atributo','web_css_atributo',
	'WHERE	a.dt_atualizacao > (select b.dt_atualizacao from web_css_atributo b where a.nr_sequencia = b.nr_sequencia)');
tasy_copiar_tabela(nm_owner_origem_p,'web_css_atributo','N','S',
	'where not exists (select 1 from web_css_atributo b where a.nr_sequencia = b.nr_sequencia)');
tasy_atualizar_tabela(nm_owner_origem_p,'web_css_elemento','web_css_elemento',
	'WHERE	a.dt_atualizacao > (select b.dt_atualizacao from web_css_elemento b where a.nr_sequencia = b.nr_sequencia)');
tasy_copiar_tabela(nm_owner_origem_p,'web_css_elemento','N','S',
	'where not exists (select 1 from web_css_elemento b where a.nr_sequencia = b.nr_sequencia)');
tasy_atualizar_tabela(nm_owner_origem_p,'web_css_elemento_atrib','web_css_elemento_atrib',
	'WHERE	a.dt_atualizacao > (select b.dt_atualizacao from web_css_elemento_atrib b where a.nr_sequencia = b.nr_sequencia)');
tasy_copiar_tabela(nm_owner_origem_p,'web_css_elemento_atrib','N','S',
	'where not exists (select 1 from web_css_elemento_atrib b where a.nr_sequencia = b.nr_sequencia)');
tasy_atualizar_tabela(nm_owner_origem_p,'web_css_grupo','web_css_grupo',
	'WHERE	a.dt_atualizacao > (select b.dt_atualizacao from web_css_grupo b where a.nr_sequencia = b.nr_sequencia)');
tasy_copiar_tabela(nm_owner_origem_p,'web_css_grupo','N','S',
	'where not exists (select 1 from web_css_grupo b where a.nr_sequencia = b.nr_sequencia)');
/*HL7*/

tasy_atualizar_tabela(nm_owner_origem_p,'HL7_PROJETO','HL7_PROJETO',
	'WHERE	a.dt_atualizacao > (select b.dt_atualizacao from HL7_PROJETO b where a.nr_sequencia = b.nr_sequencia)');
tasy_copiar_tabela(nm_owner_origem_p,'HL7_PROJETO','N','S',
	'where not exists (select 1 from HL7_PROJETO b where a.nr_sequencia = b.nr_sequencia)');
tasy_atualizar_tabela(nm_owner_origem_p,'HL7_MENSAGEM','HL7_MENSAGEM',
	'WHERE	a.dt_atualizacao > (select b.dt_atualizacao from HL7_MENSAGEM b where a.nr_sequencia = b.nr_sequencia)');
tasy_copiar_tabela(nm_owner_origem_p,'HL7_MENSAGEM','N','S',
	'where not exists (select 1 from HL7_MENSAGEM b where a.nr_sequencia = b.nr_sequencia)');
tasy_atualizar_tabela(nm_owner_origem_p,'HL7_SEGMENTO','HL7_SEGMENTO',
	'WHERE	a.dt_atualizacao > (select b.dt_atualizacao from HL7_SEGMENTO b where a.nr_sequencia = b.nr_sequencia)');
tasy_copiar_tabela(nm_owner_origem_p,'HL7_SEGMENTO','N','S',
	'where not exists (select 1 from HL7_SEGMENTO b where a.nr_sequencia = b.nr_sequencia)');
tasy_atualizar_tabela(nm_owner_origem_p,'HL7_ATRIBUTO','HL7_ATRIBUTO',
	'WHERE	a.dt_atualizacao > (select b.dt_atualizacao from HL7_ATRIBUTO b where a.nr_sequencia = b.nr_sequencia)');
tasy_copiar_tabela(nm_owner_origem_p,'HL7_ATRIBUTO','N','S',
	'where not exists (select 1 from HL7_ATRIBUTO b where a.nr_sequencia = b.nr_sequencia)');
tasy_atualizar_tabela(nm_owner_origem_p,'HL7_TIPO_MENSAGEM','HL7_TIPO_MENSAGEM',
	'WHERE	a.dt_atualizacao > (select b.dt_atualizacao from HL7_TIPO_MENSAGEM b where a.nr_sequencia = b.nr_sequencia)');
tasy_copiar_tabela(nm_owner_origem_p,'HL7_TIPO_MENSAGEM','N','S',
	'where not exists (select 1 from HL7_TIPO_MENSAGEM b where a.nr_sequencia = b.nr_sequencia)');
tasy_atualizar_tabela(nm_owner_origem_p,'HL7_TABELA','HL7_TABELA',
	'WHERE	a.dt_atualizacao > (select b.dt_atualizacao from HL7_TABELA b where a.nr_sequencia = b.nr_sequencia)');
tasy_copiar_tabela(nm_owner_origem_p,'HL7_TABELA','N','S',
	'where not exists (select 1 from HL7_TABELA b where a.nr_sequencia = b.nr_sequencia)');
tasy_atualizar_tabela(nm_owner_origem_p,'HL7_TABELA_VALOR','HL7_TABELA_VALOR',
	'WHERE	a.dt_atualizacao > (select b.dt_atualizacao from HL7_TABELA_VALOR b where a.nr_sequencia = b.nr_sequencia)');
tasy_copiar_tabela(nm_owner_origem_p,'HL7_TABELA_VALOR','N','S',
	'where not exists (select 1 from HL7_TABELA_VALOR b where a.nr_sequencia = b.nr_sequencia)');
/*Tabelas para integracao entre sistema*/

tasy_atualizar_tabela(nm_owner_origem_p,'EMPRESA_INTEGRACAO','EMPRESA_INTEGRACAO',
	'WHERE	a.dt_atualizacao > (select b.dt_atualizacao from EMPRESA_INTEGRACAO b where a.nr_sequencia = b.nr_sequencia)');
tasy_copiar_tabela(nm_owner_origem_p,'EMPRESA_INTEGRACAO','N','S',
	'where not exists (select 1 from EMPRESA_INTEGRACAO b where a.nr_sequencia = b.nr_sequencia)');
tasy_atualizar_tabela(nm_owner_origem_p,'SISTEMA_INTEGRACAO','SISTEMA_INTEGRACAO',
	'WHERE	a.dt_atualizacao > (select b.dt_atualizacao from SISTEMA_INTEGRACAO b where a.nr_sequencia = b.nr_sequencia)');
tasy_copiar_tabela(nm_owner_origem_p,'SISTEMA_INTEGRACAO','N','S',
	'where not exists (select 1 from SISTEMA_INTEGRACAO b where a.nr_sequencia = b.nr_sequencia)');
tasy_atualizar_tabela(nm_owner_origem_p,'EVENTO_INTEGRACAO','EVENTO_INTEGRACAO',
	'WHERE	a.dt_atualizacao > (select b.dt_atualizacao from EVENTO_INTEGRACAO b where a.nr_sequencia = b.nr_sequencia)');
tasy_copiar_tabela(nm_owner_origem_p,'EVENTO_INTEGRACAO','N','S',
	'where not exists (select 1 from EVENTO_INTEGRACAO b where a.nr_sequencia = b.nr_sequencia)');
tasy_atualizar_tabela(nm_owner_origem_p,'INFORMACAO_INTEGRACAO','INFORMACAO_INTEGRACAO',
	'WHERE	a.dt_atualizacao > (select b.dt_atualizacao from INFORMACAO_INTEGRACAO b where a.nr_sequencia = b.nr_sequencia)');
tasy_copiar_tabela(nm_owner_origem_p,'INFORMACAO_INTEGRACAO','N','S',
	'where not exists (select 1 from INFORMACAO_INTEGRACAO b where a.nr_sequencia = b.nr_sequencia)');	
/*Tabelas EHR*/

tasy_atualizar_tabela(nm_owner_origem_p,'ehr_unidade_medida','ehr_unidade_medida',
	'WHERE	a.dt_atualizacao > (select b.dt_atualizacao from ehr_unidade_medida b where a.nr_sequencia = b.nr_sequencia)');
tasy_copiar_tabela(nm_owner_origem_p,'ehr_unidade_medida','N','S',
	'where not exists (select 1 from ehr_unidade_medida b where a.nr_sequencia = b.nr_sequencia)');
tasy_atualizar_tabela(nm_owner_origem_p,'EHR_ESPECIALIDADE','EHR_ESPECIALIDADE',
	'WHERE	a.dt_atualizacao > (select b.dt_atualizacao from EHR_ESPECIALIDADE b where a.nr_sequencia = b.nr_sequencia)');
tasy_copiar_tabela(nm_owner_origem_p,'EHR_ESPECIALIDADE','N','S',
	'where not exists (select 1 from EHR_ESPECIALIDADE b where a.nr_sequencia = b.nr_sequencia)');
tasy_atualizar_tabela(nm_owner_origem_p,'EHR_DOENCA','EHR_DOENCA',
	'WHERE	a.dt_atualizacao > (select b.dt_atualizacao from EHR_DOENCA b where a.nr_sequencia = b.nr_sequencia)');
tasy_copiar_tabela(nm_owner_origem_p,'EHR_DOENCA','N','S',
	'where not exists (select 1 from EHR_DOENCA b where a.nr_sequencia = b.nr_sequencia)');
tasy_atualizar_tabela(nm_owner_origem_p,'EHR_TIPO_DADO','EHR_TIPO_DADO',
	'WHERE	a.dt_atualizacao > (select b.dt_atualizacao from EHR_TIPO_DADO b where a.nr_sequencia = b.nr_sequencia)');
tasy_copiar_tabela(nm_owner_origem_p,'EHR_TIPO_DADO','N','S',
	'where not exists (select 1 from EHR_TIPO_DADO b where a.nr_sequencia = b.nr_sequencia)');
tasy_atualizar_tabela(nm_owner_origem_p,'EHR_ENTIDADE_TASY','EHR_ENTIDADE_TASY',
	'WHERE	a.dt_atualizacao > (select b.dt_atualizacao from EHR_ENTIDADE_TASY b where a.nr_sequencia = b.nr_sequencia)');
tasy_copiar_tabela(nm_owner_origem_p,'EHR_ENTIDADE_TASY','N','S',
	'where not exists (select 1 from EHR_ENTIDADE_TASY b where a.nr_sequencia = b.nr_sequencia)');
tasy_atualizar_tabela(nm_owner_origem_p,'EHR_GRUPO_ELEMENTO','EHR_GRUPO_ELEMENTO',
	'WHERE	a.dt_atualizacao > (select b.dt_atualizacao from EHR_GRUPO_ELEMENTO b where a.nr_sequencia = b.nr_sequencia)');
tasy_copiar_tabela(nm_owner_origem_p,'EHR_GRUPO_ELEMENTO','N','S',
	'where not exists (select 1 from EHR_GRUPO_ELEMENTO b where a.nr_sequencia = b.nr_sequencia)');
tasy_copiar_tabela(nm_owner_origem_p,'EHR_SUBGRUPO_ELEMENTO','N','S',
	'where not exists (select 1 from EHR_SUBGRUPO_ELEMENTO b where a.nr_sequencia = b.nr_sequencia)');
tasy_copiar_tabela(nm_owner_origem_p,'EHR_CEFALOCAUDAL','N','S',
	'where not exists (select 1 from EHR_CEFALOCAUDAL b where a.nr_sequencia = b.nr_sequencia)');
tasy_atualizar_tabela(nm_owner_origem_p,'EHR_ELEMENTO','EHR_ELEMENTO',
	'WHERE	a.dt_atualizacao > (select b.dt_atualizacao from EHR_ELEMENTO b where a.nr_sequencia = b.nr_sequencia)');
tasy_copiar_tabela(nm_owner_origem_p,'EHR_ELEMENTO','N','S',
	'where not exists (select 1 from EHR_ELEMENTO b where a.nr_sequencia = b.nr_sequencia) and a.dt_liberacao is not null');
tasy_atualizar_tabela(nm_owner_origem_p,'EHR_ELEMENTO_RESULT','EHR_ELEMENTO_RESULT',
	'WHERE	a.dt_atualizacao > (select b.dt_atualizacao from EHR_ELEMENTO_RESULT b where a.nr_sequencia = b.nr_sequencia) 	'||
	' and exists (	select	1 from ehr_elemento x where x.nr_sequencia = a.NR_SEQ_ELEMENTO)');
tasy_copiar_tabela(nm_owner_origem_p,'EHR_ELEMENTO_RESULT','N','S',
	'where not exists (select 1 from EHR_ELEMENTO_RESULT b where a.nr_sequencia = b.nr_sequencia) '||
	' and exists (	select	1 from ehr_elemento x where x.nr_sequencia = a.NR_SEQ_ELEMENTO)');
tasy_atualizar_tabela(nm_owner_origem_p,'EHR_ELEMENTO_DOENCA','EHR_ELEMENTO_DOENCA',
	'WHERE	a.dt_atualizacao > (select b.dt_atualizacao from EHR_ELEMENTO_DOENCA b where a.nr_sequencia = b.nr_sequencia)','N');
tasy_copiar_tabela(nm_owner_origem_p,'EHR_ELEMENTO_DOENCA','N','S',
	'where not exists (select 1 from EHR_ELEMENTO_DOENCA b where a.nr_sequencia = b.nr_sequencia)');
tasy_atualizar_tabela(nm_owner_origem_p,'EHR_ELEMENTO_ESPECIALIDADE','EHR_ELEMENTO_ESPECIALIDADE',
	'WHERE	a.dt_atualizacao > (select b.dt_atualizacao from EHR_ELEMENTO_ESPECIALIDADE b where a.nr_sequencia = b.nr_sequencia) '||
	' and exists (	select	1 from ehr_elemento x where x.nr_sequencia = a.NR_SEQ_ELEMENTO)');
tasy_copiar_tabela(nm_owner_origem_p,'EHR_ELEMENTO_ESPECIALIDADE','N','S',
	'where not exists (select 1 from EHR_ELEMENTO_ESPECIALIDADE b where a.nr_sequencia = b.nr_sequencia)'||
	' and exists (	select	1 from ehr_elemento x where x.nr_sequencia = a.NR_SEQ_ELEMENTO)');
begin
tasy_atualizar_tabela(nm_owner_origem_p,'EHR_ELEMENTO_VISUAL','EHR_ELEMENTO_VISUAL',
	'WHERE	a.dt_atualizacao > (select b.dt_atualizacao from EHR_ELEMENTO_VISUAL b where a.nr_sequencia = b.nr_sequencia)');
tasy_copiar_tabela(nm_owner_origem_p,'EHR_ELEMENTO_VISUAL','N','S',
	'where not exists (select 1 from EHR_ELEMENTO_VISUAL b where a.nr_sequencia = b.nr_sequencia)');
/*    FAVOR N?O ALTERAR ESSE CODIGO,  PROBLEMA DE IMPORTAC?O DE TEMPLATES SOBRE TEMPLATES DO CLIENTE - OS 854643
tasy_atualizar_tabela(nm_owner_origem_p,'EHR_TEMPLATE','EHR_TEMPLATE',
	'WHERE	a.dt_atualizacao > (select b.dt_atualizacao from EHR_TEMPLATE b where a.nr_sequencia = b.nr_sequencia) and nvl(a.ie_exportar,''S'') = ''S''');
tasy_copiar_tabela(nm_owner_origem_p,'EHR_TEMPLATE','N','S',
	'where not exists (select 1 from EHR_TEMPLATE b where a.nr_sequencia = b.nr_sequencia) and nvl(a.ie_exportar,''S'') = ''S''');	
tasy_atualizar_tabela(nm_owner_origem_p,'EHR_TEMPLATE_CONTEUDO','EHR_TEMPLATE_CONTEUDO',
	'WHERE	a.dt_atualizacao > (select b.dt_atualizacao from EHR_TEMPLATE_CONTEUDO b where a.nr_sequencia = b.nr_sequencia)' ||
	' and	exists (select 1 from EHR_TEMPLATE c where a.nr_seq_template = c.nr_sequencia and nvl(c.ie_exportar,''S'') = ''S'')');
tasy_copiar_tabela(nm_owner_origem_p,'EHR_TEMPLATE_CONTEUDO','N','S',
	' where not exists (select 1 from EHR_TEMPLATE_CONTEUDO b where a.nr_sequencia = b.nr_sequencia)' ||
	' and	exists (select 1 from EHR_TEMPLATE c where a.nr_seq_template = c.nr_sequencia and nvl(c.ie_exportar,''S'') = ''S'')');
*/
	
/*Targets of Care*/


/*tasy_atualizar_tabela(nm_owner_origem_p,'TOF_META','TOF_META',
	'WHERE	a.dt_atualizacao > (select b.dt_atualizacao from TOF_META b where a.nr_sequencia = b.nr_sequencia) and nvl(a.ie_exportar,''S'') = ''S''');
tasy_copiar_tabela(nm_owner_origem_p,'TOF_META','N','S',
	'where not exists (select 1 from TOF_META b where a.nr_sequencia = b.nr_sequencia) and nvl(a.ie_exportar,''S'') = ''S''');*/
exception
	when others then
		ds_erro_w := substr(SQLERRM,1,2000);
		insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela XML_ATRIBUTO - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
		commit;
end;


begin
Tasy_Copiar_tabela(nm_owner_origem_p,'FICHA_FINANC_ITEM','N','S','where not exists (select 1 from FICHA_FINANC_ITEM b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'FICHA_FINANC_ITEM', 'FICHA_FINANC_ITEM', 'where a.dt_atualizacao > (select b.dt_atualizacao from FICHA_FINANC_ITEM b where a.nr_sequencia = b.nr_sequencia)');
exception
	when others then
		ds_erro_w := substr(SQLERRM,1,2000);
		insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela FICHA_FINANC_ITEM - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
		commit;
end;		
				
/* Fluxo O2 */

Tasy_Copiar_tabela(nm_owner_origem_p,'fluxo_oxigenio','N','S','where not exists (select 1 
		from fluxo_oxigenio b where	a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'UNIDADE_FEDERACAO','N','S','where not exists (select 1 
		from UNIDADE_FEDERACAO b where	a.cd_unidade_federacao = b.cd_unidade_federacao)');
/* Regra Unidade Medida Atributo - Elemar - 13/02/2010 */

Tasy_Atualizar_Tabela(nm_owner_origem_p, 'TAB_ATRIB_REGRA_UNID_MED', 'TAB_ATRIB_REGRA_UNID_MED', 'where a.dt_atualizacao > (select b.dt_atualizacao from TAB_ATRIB_REGRA_UNID_MED b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'TAB_ATRIB_REGRA_UNID_MED', 'N', 'S', 'where not exists (select 1 from TAB_ATRIB_REGRA_UNID_MED b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'TAB_ATRIB_REGRA_ITEM', 'TAB_ATRIB_REGRA_ITEM', 'where a.dt_atualizacao > (select b.dt_atualizacao from TAB_ATRIB_REGRA_ITEM b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'TAB_ATRIB_REGRA_ITEM', 'N', 'S', 'where not exists (select 1 from TAB_ATRIB_REGRA_ITEM b where a.nr_sequencia = b.nr_sequencia)');
/* Inicio - Luciano Wilbert - 19/05/2010 - OS 212722 */

Tasy_Atualizar_Tabela(nm_owner_origem_p,'tasy_projeto_assinatura','tasy_projeto_assinatura',
					' where a.dt_atualizacao > (select b.dt_atualizacao from tasy_projeto_assinatura b where a.nr_sequencia = b.nr_sequencia)', 'N');
tasy_copiar_tabela(nm_owner_origem_p,	'tasy_projeto_assinatura','N','S','where not exists	(select 1
					from tasy_projeto_assinatura b where	a.nr_sequencia	= b.nr_sequencia)');
/* Jerusa - 10/07/2010 */

Tasy_Atualizar_Tabela(nm_owner_origem_p, 'MED_CONFIG_PARAM_RELAT', 'MED_CONFIG_PARAM_RELAT', 'where a.dt_atualizacao > (select b.dt_atualizacao from MED_CONFIG_PARAM_RELAT b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'MED_CONFIG_PARAM_RELAT', 'N', 'S', 'where not exists (select 1 from MED_CONFIG_PARAM_RELAT b where a.nr_sequencia = b.nr_sequencia)');
/*Maicon*/

tasy_Atualizar_Tabela(nm_owner_origem_p,'SUP_INT_CONV_TABELA','SUP_INT_CONV_TABELA',' where a.dt_atualizacao > (select b.dt_atualizacao from SUP_INT_CONV_TABELA b where a.nr_sequencia = b.nr_sequencia)');
tasy_copiar_tabela(nm_owner_origem_p,'SUP_INT_CONV_TABELA','N','S','where not exists(select 1 from SUP_INT_CONV_TABELA b where a.nr_sequencia = b.nr_sequencia)');
/*Maicon*/

tasy_Atualizar_Tabela(nm_owner_origem_p,'MAT_REGRA_CODIGO_BARRAS','MAT_REGRA_CODIGO_BARRAS',' where a.dt_atualizacao > (select b.dt_atualizacao from MAT_REGRA_CODIGO_BARRAS b where a.nr_sequencia = b.nr_sequencia)');
tasy_copiar_tabela(nm_owner_origem_p,'MAT_REGRA_CODIGO_BARRAS','N','S','where not exists(select 1 from MAT_REGRA_CODIGO_BARRAS b where a.nr_sequencia = b.nr_sequencia)');
/*Almir*/

tasy_Atualizar_Tabela(nm_owner_origem_p,'PERGUNTA_RECUP_SENHA','PERGUNTA_RECUP_SENHA',' where a.dt_atualizacao > (select b.dt_atualizacao from PERGUNTA_RECUP_SENHA b where a.nr_sequencia = b.nr_sequencia)');
tasy_copiar_tabela(nm_owner_origem_p,'PERGUNTA_RECUP_SENHA','N','S','where not exists(select 1 from PERGUNTA_RECUP_SENHA b where a.nr_sequencia = b.nr_sequencia)');
/*Anderson*/

tasy_Atualizar_Tabela(nm_owner_origem_p,'MAN_SEVERIDADE','MAN_SEVERIDADE',' where a.dt_atualizacao > (select b.dt_atualizacao from MAN_SEVERIDADE b where a.nr_sequencia = b.nr_sequencia)');
tasy_copiar_tabela(nm_owner_origem_p,'MAN_SEVERIDADE','N','S','where not exists(select 1 from MAN_SEVERIDADE b where a.nr_sequencia = b.nr_sequencia)');
/*Bruna*/

tasy_Atualizar_Tabela(nm_owner_origem_p,'CLASSIFICACAO_PARAMETRO','CLASSIFICACAO_PARAMETRO',' where a.dt_atualizacao > (select b.dt_atualizacao from CLASSIFICACAO_PARAMETRO b where a.nr_sequencia = b.nr_sequencia)');
tasy_copiar_tabela(nm_owner_origem_p,'CLASSIFICACAO_PARAMETRO','N','S','where not exists(select 1 from CLASSIFICACAO_PARAMETRO b where a.nr_sequencia = b.nr_sequencia)');
/*Elemar - 02/05/2012*/

tasy_Atualizar_Tabela(nm_owner_origem_p,'TABELA_LIMPEZA','TABELA_LIMPEZA',' where a.dt_atualizacao > (select b.dt_atualizacao from TABELA_LIMPEZA b where a.nm_tabela = b.nm_tabela)');
tasy_copiar_tabela(nm_owner_origem_p,'TABELA_LIMPEZA','N','S','where not exists(select 1 from TABELA_LIMPEZA b where a.nm_tabela = b.nm_tabela)');
/*Takano - 06/09/2013*/

tasy_Atualizar_Tabela(nm_owner_origem_p,'TABELA_VISAO_GRUPO','TABELA_VISAO_GRUPO',' where a.dt_atualizacao > (select b.dt_atualizacao from TABELA_VISAO_GRUPO b where  a.nr_sequencia = b.nr_sequencia)');
tasy_copiar_tabela(nm_owner_origem_p,'TABELA_VISAO_GRUPO','N','S','where not exists(select 1 from TABELA_VISAO_GRUPO b where  a.nr_sequencia = b.nr_sequencia)');
/*Takano - 12/11/2013*/

tasy_Atualizar_Tabela(nm_owner_origem_p,'LISTENER_INTEGRACAO_CAD','LISTENER_INTEGRACAO_CAD',' where a.dt_atualizacao > (select b.dt_atualizacao from LISTENER_INTEGRACAO_CAD b where  a.nr_sequencia = b.nr_sequencia)');
tasy_copiar_tabela(nm_owner_origem_p,'LISTENER_INTEGRACAO_CAD','N','S','where not exists(select 1 from LISTENER_INTEGRACAO_CAD b where  a.nr_sequencia = b.nr_sequencia)');
/* Atualizac?o dos Tipos de Log Tasy */

Tasy_Atualizar_Tabela(nm_owner_origem_p, 'TIPO_LOG_TASY', 'TIPO_LOG_TASY', 'where a.dt_atualizacao > (select b.dt_atualizacao from TIPO_LOG_TASY b where a.cd_log = b.cd_log)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'TIPO_LOG_TASY', 'N', 'S', 'where not exists (select 1 from TIPO_LOG_TASY b where a.cd_log = b.cd_log)');
/* Atualizac?o dos Tipos de Log Lab */

Tasy_Atualizar_Tabela(nm_owner_origem_p, 'LAB_TIPO_LOG', 'LAB_TIPO_LOG', 'where a.dt_atualizacao > (select b.dt_atualizacao from LAB_TIPO_LOG b where a.cd_log = b.cd_log)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'LAB_TIPO_LOG', 'N', 'S', 'where not exists (select 1 from LAB_TIPO_LOG b where a.cd_log = b.cd_log)');
/* Atualizac?o dos registro de busca de informac?es do cliente */

Tasy_Atualizar_Tabela(nm_owner_origem_p, 'BUSCA_INF_BASE_CLIENTE', 'BUSCA_INF_BASE_CLIENTE', 'where a.dt_atualizacao > (select b.dt_atualizacao from BUSCA_INF_BASE_CLIENTE b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'BUSCA_INF_BASE_CLIENTE', 'N', 'S', 'where not exists (select 1 from BUSCA_INF_BASE_CLIENTE b where a.nr_sequencia = b.nr_sequencia)');
/* Atualizac?o das express?es  */


/*Movido para o tasy_atualizar_base_versao OS 763053*/


/*Tasy_Atualizar_Tabela(nm_owner_origem_p, 'DIC_EXPRESSAO', 'DIC_EXPRESSAO', 'where a.dt_atualizacao > (select b.dt_atualizacao from DIC_EXPRESSAO b where a.cd_expressao = b.cd_expressao)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'DIC_EXPRESSAO', 'N', 'S', 'where not exists (select 1 from DIC_EXPRESSAO b where a.cd_expressao = b.cd_expressao)');*/

/*Anderson - atualizar as integrac?es na base dos clientes*/

if (nm_owner_atual_w <> 'CORP') then
	tasy_Atualizar_Tabela(nm_owner_origem_p,'INT_EMPRESA','INT_EMPRESA',' where a.dt_atualizacao > (select b.dt_atualizacao from INT_EMPRESA b where a.nr_sequencia = b.nr_sequencia)');
	tasy_copiar_tabela(nm_owner_origem_p,'INT_EMPRESA','N','S','where not exists(select 1 from INT_EMPRESA b where a.nr_sequencia = b.nr_sequencia)');
	tasy_Atualizar_Tabela(nm_owner_origem_p,'INT_SISTEMA','INT_SISTEMA',' where a.dt_atualizacao > (select b.dt_atualizacao from INT_SISTEMA b where a.nr_sequencia = b.nr_sequencia)');
	tasy_copiar_tabela(nm_owner_origem_p,'INT_SISTEMA','N','S','where not exists(select 1 from INT_SISTEMA b where a.nr_sequencia = b.nr_sequencia)');
	tasy_Atualizar_Tabela(nm_owner_origem_p,'INT_TIPO','INT_TIPO',' where a.dt_atualizacao > (select b.dt_atualizacao from INT_TIPO b where a.nr_sequencia = b.nr_sequencia)');
	tasy_copiar_tabela(nm_owner_origem_p,'INT_TIPO','N','S','where not exists(select 1 from INT_TIPO b where a.nr_sequencia = b.nr_sequencia)');
	tasy_Atualizar_Tabela(nm_owner_origem_p,'INT_INTEGRACAO','INT_INTEGRACAO',' where a.dt_atualizacao > (select b.dt_atualizacao from INT_INTEGRACAO b where a.nr_sequencia = b.nr_sequencia)');
	tasy_copiar_tabela(nm_owner_origem_p,'INT_INTEGRACAO','N','S','where not exists(select 1 from INT_INTEGRACAO b where a.nr_sequencia = b.nr_sequencia)');
end if;
tasy_Atualizar_Tabela(nm_owner_origem_p,'INFORMACAO_CONTABIL','INFORMACAO_CONTABIL',' where a.dt_atualizacao > (select b.dt_atualizacao from INFORMACAO_CONTABIL b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'INFORMACAO_CONTABIL','N','S','where not exists (select 1 from informacao_contabil b ' ||
		' where a.nr_sequencia = b.nr_sequencia)');
/* Manchester  */

begin
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'MANCHESTER_CATEGORIA_FLUXO', 'MANCHESTER_CATEGORIA_FLUXO', 'where a.dt_atualizacao > (select b.dt_atualizacao from MANCHESTER_CATEGORIA_FLUXO b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'MANCHESTER_CATEGORIA_FLUXO', 'N', 'S', 'where not exists (select 1 from MANCHESTER_CATEGORIA_FLUXO b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'MANCHESTER_LEITURA_OBRIG', 'MANCHESTER_LEITURA_OBRIG', 'where a.dt_atualizacao > (select b.dt_atualizacao from MANCHESTER_LEITURA_OBRIG b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'MANCHESTER_LEITURA_OBRIG', 'N', 'S', 'where not exists (select 1 from MANCHESTER_LEITURA_OBRIG b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'MANCHESTER_ITEM', 'MANCHESTER_ITEM', 'where a.dt_atualizacao > (select b.dt_atualizacao from MANCHESTER_ITEM b where a.nr_sequencia = b.nr_sequencia) and a.ie_tipo_cadastro = ''P''');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'MANCHESTER_ITEM', 'N', 'S', 'where not exists (select 1 from MANCHESTER_ITEM b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'MANCHESTER_FLUXOGRAMA', 'MANCHESTER_FLUXOGRAMA', 'where a.dt_atualizacao > (select b.dt_atualizacao from MANCHESTER_FLUXOGRAMA b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'MANCHESTER_FLUXOGRAMA', 'N', 'S', 'where not exists (select 1 from MANCHESTER_FLUXOGRAMA b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'MANCHESTER_FLUXOGRAMA_ITEM', 'MANCHESTER_FLUXOGRAMA_ITEM', 'where a.dt_atualizacao > (select b.dt_atualizacao from MANCHESTER_FLUXOGRAMA_ITEM b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'MANCHESTER_FLUXOGRAMA_ITEM', 'N', 'S', 'where not exists (select 1 from MANCHESTER_FLUXOGRAMA_ITEM b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'MANCHESTER_FLUXO_RELAC', 'MANCHESTER_FLUXO_RELAC', 'where a.dt_atualizacao > (select b.dt_atualizacao from MANCHESTER_FLUXO_RELAC b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'MANCHESTER_FLUXO_RELAC', 'N', 'S', 'where not exists (select 1 from MANCHESTER_FLUXO_RELAC b where a.nr_sequencia = b.nr_sequencia)');
/* Escalas vinculadas a SAE*/

Tasy_Atualizar_Tabela(nm_owner_origem_p, 'PE_ESCALA', 'PE_ESCALA', 'where a.dt_atualizacao > (select b.dt_atualizacao from PE_ESCALA b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'PE_ESCALA', 'N', 'S', 'where not exists (select 1 from PE_ESCALA b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'PE_ESCALA_ITEM', 'PE_ESCALA_ITEM', 'where a.dt_atualizacao > (select b.dt_atualizacao from PE_ESCALA_ITEM b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'PE_ESCALA_ITEM', 'N', 'S', 'where not exists (select 1 from PE_ESCALA_ITEM b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'PE_RESULT_ITEM', 'PE_RESULT_ITEM', 'where a.dt_atualizacao > (select b.dt_atualizacao from PE_RESULT_ITEM b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'PE_RESULT_ITEM', 'N', 'S', 'where not exists (select 1 from PE_RESULT_ITEM b where a.nr_sequencia = b.nr_sequencia)');
/* Juliane - Syntax Score */

Tasy_Atualizar_Tabela(nm_owner_origem_p, 'HEM_SEGMENTO_SYNTAX', 'HEM_SEGMENTO_SYNTAX', 'where a.dt_atualizacao > (select b.dt_atualizacao from HEM_SEGMENTO_SYNTAX b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'HEM_SEGMENTO_SYNTAX', 'N', 'S', 'where not exists (select 1 from HEM_SEGMENTO_SYNTAX b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'HEM_SEGMENTO_RETROGRADA', 'HEM_SEGMENTO_RETROGRADA', 'where a.dt_atualizacao > (select b.dt_atualizacao from HEM_SEGMENTO_RETROGRADA b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'HEM_SEGMENTO_RETROGRADA', 'N', 'S', 'where not exists (select 1 from HEM_SEGMENTO_RETROGRADA b where a.nr_sequencia = b.nr_sequencia)');
/* Johnny - TISS Odontologia*/

Tasy_Atualizar_Tabela(nm_owner_origem_p, 'TISS_DENTE', 'TISS_DENTE', 'where a.dt_atualizacao > (select b.dt_atualizacao from TISS_DENTE b where a.cd_dente = b.cd_dente)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'TISS_DENTE', 'N', 'S', 'where not exists (select 1 from TISS_DENTE b where a.cd_dente = b.cd_dente)');
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'TISS_REGIAO_BOCA', 'TISS_REGIAO_BOCA', 'where a.dt_atualizacao > (select b.dt_atualizacao from TISS_REGIAO_BOCA b where a.cd_regiao = b.cd_regiao)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'TISS_REGIAO_BOCA','N','S', 'where not exists (select 1 from TISS_REGIAO_BOCA b where a.cd_regiao = b.cd_regiao)');
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'TISS_FACE_DENTE', 'TISS_FACE_DENTE', 'where a.dt_atualizacao > (select b.dt_atualizacao from TISS_FACE_DENTE b where a.cd_face = b.cd_face)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'TISS_FACE_DENTE', 'N','S', 'where not exists (select 1 from TISS_FACE_DENTE b where a.cd_face = b.cd_face)');
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'TISS_TIPO_ATEND_ODONT', 'TISS_TIPO_ATEND_ODONT', 'where a.dt_atualizacao > (select b.dt_atualizacao from TISS_TIPO_ATEND_ODONT b where a.cd_tipo = b.cd_tipo)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'TISS_TIPO_ATEND_ODONT', 'N', 'S', 'where not exists (select b.dt_atualizacao from TISS_TIPO_ATEND_ODONT b where a.cd_tipo = b.cd_tipo)');
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'TISS_SIT_DENTE_INICIAL', 'TISS_SIT_DENTE_INICIAL', 'where a.dt_atualizacao > (select b.dt_atualizacao from TISS_SIT_DENTE_INICIAL b where a.cd_situacao = b.cd_situacao)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'TISS_SIT_DENTE_INICIAL', 'N', 'S', 'where not exists (select b.dt_atualizacao from TISS_SIT_DENTE_INICIAL b where a.cd_situacao = b.cd_situacao)');
/*Matheus - TEV Contraindicac?es*/

Tasy_Atualizar_Tabela(nm_owner_origem_p, 'TEV_CONTRAINDICACAO', 'TEV_CONTRAINDICACAO', 'where a.dt_atualizacao > (select b.dt_atualizacao from TEV_CONTRAINDICACAO b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'TEV_CONTRAINDICACAO', 'N', 'S', 'where not exists (select b.dt_atualizacao from TEV_CONTRAINDICACAO b where a.nr_sequencia = b.nr_sequencia)');
/*Matheus - Liberac?o de acesso link externo*/

Tasy_Atualizar_Tabela(nm_owner_origem_p, 'LIBERACAO_ACESSO_EXT_PEP', 'LIBERACAO_ACESSO_EXT_PEP', 'where a.dt_atualizacao > (select b.dt_atualizacao from LIBERACAO_ACESSO_EXT_PEP b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'LIBERACAO_ACESSO_EXT_PEP', 'N', 'S', 'where not exists (select b.dt_atualizacao from LIBERACAO_ACESSO_EXT_PEP b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'FIS_REGISTROS_ECF', 'FIS_REGISTROS_ECF', 'where a.dt_atualizacao > (select b.dt_atualizacao from fis_registros_ecf b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'FIS_REGISTROS_ECF', 'N', 'S', 'where not exists (select b.dt_atualizacao from fis_registros_ecf b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'FIS_TABELA_ECF_210', 'FIS_TABELA_ECF_210', 'where a.dt_atualizacao > (select b.dt_atualizacao from FIS_TABELA_ECF_210 b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'FIS_TABELA_ECF_210', 'N', 'S', 'where not exists (select b.dt_atualizacao from FIS_TABELA_ECF_210 b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'FIS_LIVROS_ESTR_PADRAO', 'FIS_LIVROS_ESTR_PADRAO', 'where a.dt_atualizacao > (select b.dt_atualizacao from FIS_LIVROS_ESTR_PADRAO b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'FIS_LIVROS_ESTR_PADRAO', 'N', 'S', 'where not exists (select b.dt_atualizacao from FIS_LIVROS_ESTR_PADRAO b where a.nr_sequencia = b.nr_sequencia)');
/* htneto - Tabela de configurac?o do processo de ajuste automatizado de inconsistencias */

Tasy_Atualizar_Tabela(nm_owner_origem_p, 'TASY_CONFIG_INCONSISTENCIA', 'TASY_CONFIG_INCONSISTENCIA', 'where a.dt_atualizacao > (select b.dt_atualizacao from TASY_CONFIG_INCONSISTENCIA b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'TASY_CONFIG_INCONSISTENCIA', 'S', 'S', 'where not exists (select b.dt_atualizacao from TASY_CONFIG_INCONSISTENCIA b where a.nr_sequencia = b.nr_sequencia)');
/* htneto - Tabela de scripts do processo de ajuste automatizado de inconsistencias */

Tasy_Atualizar_Tabela(nm_owner_origem_p, 'TASY_AJUSTE_BASE', 'TASY_AJUSTE_BASE', 'where a.dt_atualizacao > (select b.dt_atualizacao from TASY_AJUSTE_BASE b where a.cd_ajuste_base = b.cd_ajuste_base)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'TASY_AJUSTE_BASE', 'S', 'S', 'where not exists (select b.dt_atualizacao from TASY_AJUSTE_BASE b where a.cd_ajuste_base = b.cd_ajuste_base)');
exception
	when others then
		ds_erro_w := substr(SQLERRM,1,2000);
		insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela XML_ATRIBUTO - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
		commit;
end;
--################

--INICIO DO EXPORT DAS TABELAS DO HTML5 - SCHEMATICS

--#################
select	coalesce(wheb_usuario_pck.get_ie_executar_trigger,'S')
into STRICT	ie_executar_trigger_w
;
CALL wheb_usuario_pck.set_ie_executar_trigger('N');
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'BUSINESS_OBJECT_CLASSIF', 'BUSINESS_OBJECT_CLASSIF', 'where a.dt_atualizacao > (select b.dt_atualizacao from BUSINESS_OBJECT_CLASSIF b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'BUSINESS_OBJECT_CLASSIF', 'S', 'S', 'where not exists (select b.dt_atualizacao from BUSINESS_OBJECT_CLASSIF b where a.nr_sequencia = b.nr_sequencia)');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela BUSINESS_OBJECT_CLASSIF', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'BUSINESS_OBJECT', 'BUSINESS_OBJECT', 'where a.dt_atualizacao > (select b.dt_atualizacao from BUSINESS_OBJECT b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'BUSINESS_OBJECT', 'S', 'S', 'where not exists (select b.dt_atualizacao from BUSINESS_OBJECT b where a.nr_sequencia = b.nr_sequencia)');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela BUSINESS_OBJECT', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'BUSINESS_OBJECT_PARAMETER', 'BUSINESS_OBJECT_PARAMETER', 'where a.dt_atualizacao > (select b.dt_atualizacao from BUSINESS_OBJECT_PARAMETER b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'BUSINESS_OBJECT_PARAMETER', 'S', 'S', 'where not exists (select b.dt_atualizacao from BUSINESS_OBJECT_PARAMETER b where a.nr_sequencia = b.nr_sequencia)');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela BUSINESS_OBJECT_PARAMETER', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'BUSINESS_OBJECT_PROPERTY', 'BUSINESS_OBJECT_PROPERTY', 'where a.dt_atualizacao > (select b.dt_atualizacao from BUSINESS_OBJECT_PROPERTY b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'BUSINESS_OBJECT_PROPERTY', 'S', 'S', 'where not exists (select b.dt_atualizacao from BUSINESS_OBJECT_PROPERTY b where a.nr_sequencia = b.nr_sequencia)');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela BUSINESS_OBJECT_PROPERTY', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'FUNCAO_SCHEMATIC', 'FUNCAO_SCHEMATIC', 'where a.dt_atualizacao > (select b.dt_atualizacao from FUNCAO_SCHEMATIC b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'FUNCAO_SCHEMATIC', 'S', 'S', 'where not exists (select b.dt_atualizacao from FUNCAO_SCHEMATIC b where a.nr_sequencia = b.nr_sequencia)');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela FUNCAO_SCHEMATIC', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'FUNCAO_CHAMADA_EXTERNA', 'FUNCAO_CHAMADA_EXTERNA', 'where a.dt_atualizacao > (select b.dt_atualizacao from FUNCAO_CHAMADA_EXTERNA b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'FUNCAO_CHAMADA_EXTERNA', 'S', 'S', 'where not exists (select b.dt_atualizacao from FUNCAO_CHAMADA_EXTERNA b where a.nr_sequencia = b.nr_sequencia)');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela FUNCAO_CHAMADA_EXTERNA', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'FUNCAO_CHAMADA_EXT_PARAM', 'FUNCAO_CHAMADA_EXT_PARAM', 'where a.dt_atualizacao > (select b.dt_atualizacao from FUNCAO_CHAMADA_EXT_PARAM b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'FUNCAO_CHAMADA_EXT_PARAM', 'S', 'S', 'where not exists (select b.dt_atualizacao from FUNCAO_CHAMADA_EXT_PARAM b where a.nr_sequencia = b.nr_sequencia)');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela FUNCAO_CHAMADA_EXT_PARAM', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'OBJETO_SCHEMATIC', 'OBJETO_SCHEMATIC', 'where a.dt_atualizacao > (select b.dt_atualizacao from OBJETO_SCHEMATIC b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'OBJETO_SCHEMATIC', 'S', 'S', 'where not exists (select b.dt_atualizacao from OBJETO_SCHEMATIC b where a.nr_sequencia = b.nr_sequencia)');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela OBJETO_SCHEMATIC', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'OBJETO_SCHEMATIC_PROP', 'OBJETO_SCHEMATIC_PROP', 'where a.dt_atualizacao > (select b.dt_atualizacao from OBJETO_SCHEMATIC_PROP b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'OBJETO_SCHEMATIC_PROP', 'S', 'S', 'where not exists (select b.dt_atualizacao from OBJETO_SCHEMATIC_PROP b where a.nr_sequencia = b.nr_sequencia)');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela OBJETO_SCHEMATIC_PROP', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'OBJ_SCHEMATIC_VISAO', 'OBJ_SCHEMATIC_VISAO', 'where a.dt_atualizacao > (select b.dt_atualizacao from OBJ_SCHEMATIC_VISAO b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'OBJ_SCHEMATIC_VISAO', 'S', 'S', 'where not exists (select b.dt_atualizacao from OBJ_SCHEMATIC_VISAO b where a.nr_sequencia = b.nr_sequencia)');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela BUSINESS_OBJECT_PROPERTY', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'OBJ_SCHEMATIC_BO_PROPERTY', 'OBJ_SCHEMATIC_BO_PROPERTY', 'where a.dt_atualizacao > (select b.dt_atualizacao from OBJ_SCHEMATIC_BO_PROPERTY b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'OBJ_SCHEMATIC_BO_PROPERTY', 'S', 'S', 'where not exists (select b.dt_atualizacao from OBJ_SCHEMATIC_BO_PROPERTY b where a.nr_sequencia = b.nr_sequencia)');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela BUSINESS_OBJECT_PROPERTY', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'OBJETO_SCHEMATIC_LEGENDA', 'OBJETO_SCHEMATIC_LEGENDA', 'where a.dt_atualizacao > (select b.dt_atualizacao from OBJETO_SCHEMATIC_LEGENDA b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'OBJETO_SCHEMATIC_LEGENDA', 'S', 'S', 'where not exists (select b.dt_atualizacao from OBJETO_SCHEMATIC_LEGENDA b where a.nr_sequencia = b.nr_sequencia)');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela OBJETO_SCHEMATIC_LEGENDA', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'OPCOES_CRUD', 'OPCOES_CRUD', 'where a.dt_atualizacao > (select b.dt_atualizacao from OPCOES_CRUD b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'OPCOES_CRUD', 'S', 'S', 'where not exists (select b.dt_atualizacao from OPCOES_CRUD b where a.nr_sequencia = b.nr_sequencia)');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela OPCOES_CRUD', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'REGRA_CONDICAO', 'REGRA_CONDICAO', 'where a.dt_atualizacao > (select b.dt_atualizacao from REGRA_CONDICAO b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'REGRA_CONDICAO', 'S', 'S', 'where not exists (select b.dt_atualizacao from REGRA_CONDICAO b where a.nr_sequencia = b.nr_sequencia)');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela REGRA_CONDICAO', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'REGRA_CONDICAO_ITEM', 'REGRA_CONDICAO_ITEM', 'where a.dt_atualizacao > (select b.dt_atualizacao from REGRA_CONDICAO_ITEM b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'REGRA_CONDICAO_ITEM', 'S', 'S', 'where not exists (select b.dt_atualizacao from REGRA_CONDICAO_ITEM b where a.nr_sequencia = b.nr_sequencia)');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela REGRA_CONDICAO_ITEM', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'SCHEMATIC_RELATORIO', 'SCHEMATIC_RELATORIO', 'where a.dt_atualizacao > (select b.dt_atualizacao from SCHEMATIC_RELATORIO b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'SCHEMATIC_RELATORIO', 'S', 'S', 'where not exists (select b.dt_atualizacao from SCHEMATIC_RELATORIO b where a.nr_sequencia = b.nr_sequencia)');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela SCHEMATIC_RELATORIO', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'OBJETO_SCHEMATIC_ATIV', 'OBJETO_SCHEMATIC_ATIV', 'where a.dt_atualizacao > (select b.dt_atualizacao from OBJETO_SCHEMATIC_ATIV b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'OBJETO_SCHEMATIC_ATIV', 'S', 'S', 'where not exists (select b.dt_atualizacao from OBJETO_SCHEMATIC_ATIV b where a.nr_sequencia = b.nr_sequencia)');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela OBJETO_SCHEMATIC_ATIV', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'OBJETO_SCHEMATIC_COND_ATIV', 'OBJETO_SCHEMATIC_COND_ATIV', 'where a.dt_atualizacao > (select b.dt_atualizacao from OBJETO_SCHEMATIC_COND_ATIV b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'OBJETO_SCHEMATIC_COND_ATIV', 'S', 'S', 'where not exists (select b.dt_atualizacao from OBJETO_SCHEMATIC_COND_ATIV b where a.nr_sequencia = b.nr_sequencia)');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela OBJETO_SCHEMATIC_COND_ATIV', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'OBJ_SCHEMATIC_EVENTO', 'OBJ_SCHEMATIC_EVENTO', 'where a.dt_atualizacao > (select b.dt_atualizacao from OBJ_SCHEMATIC_EVENTO b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'OBJ_SCHEMATIC_EVENTO', 'S', 'S', 'where not exists (select b.dt_atualizacao from OBJ_SCHEMATIC_EVENTO b where a.nr_sequencia = b.nr_sequencia)');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela OBJ_SCHEMATIC_EVENTO', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'OBJ_SCHEMATIC_EVENTO_ACAO', 'OBJ_SCHEMATIC_EVENTO_ACAO', 'where a.dt_atualizacao > (select b.dt_atualizacao from OBJ_SCHEMATIC_EVENTO_ACAO b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'OBJ_SCHEMATIC_EVENTO_ACAO', 'S', 'S', 'where not exists (select b.dt_atualizacao from OBJ_SCHEMATIC_EVENTO_ACAO b where a.nr_sequencia = b.nr_sequencia)');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela OBJ_SCHEMATIC_EVENTO_ACAO', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'OBJ_SCHEMATIC_ATIV_PARAM', 'OBJ_SCHEMATIC_ATIV_PARAM', 'where a.dt_atualizacao > (select b.dt_atualizacao from OBJ_SCHEMATIC_ATIV_PARAM b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'OBJ_SCHEMATIC_ATIV_PARAM', 'S', 'S', 'where not exists (select b.dt_atualizacao from OBJ_SCHEMATIC_ATIV_PARAM b where a.nr_sequencia = b.nr_sequencia)');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela OBJ_SCHEMATIC_ATIV_PARAM', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'COMPONENT_TYPE', 'COMPONENT_TYPE', 'where a.dt_atualizacao > (select b.dt_atualizacao from COMPONENT_TYPE b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'COMPONENT_TYPE', 'S', 'S', 'where not exists (select b.dt_atualizacao from COMPONENT_TYPE b where a.nr_sequencia = b.nr_sequencia)');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela COMPONENT_TYPE', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'COMPONENT_PROPERTY', 'COMPONENT_PROPERTY', 'where a.dt_atualizacao > (select b.dt_atualizacao from COMPONENT_PROPERTY b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'COMPONENT_PROPERTY', 'S', 'S', 'where not exists (select b.dt_atualizacao from COMPONENT_PROPERTY b where a.nr_sequencia = b.nr_sequencia)');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela COMPONENT_PROPERTY', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'TAB_VISAO_SCHEMATIC', 'TAB_VISAO_SCHEMATIC', 'where a.dt_atualizacao > (select b.dt_atualizacao from TAB_VISAO_SCHEMATIC b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'TAB_VISAO_SCHEMATIC', 'S', 'S', 'where not exists (select b.dt_atualizacao from TAB_VISAO_SCHEMATIC b where a.nr_sequencia = b.nr_sequencia)');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela TAB_VISAO_SCHEMATIC', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'DIC_OBJETO_PROPERTY', 'DIC_OBJETO_PROPERTY', 'where a.dt_atualizacao > (select b.dt_atualizacao from DIC_OBJETO_PROPERTY b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'DIC_OBJETO_PROPERTY', 'S', 'S', 'where not exists (select b.dt_atualizacao from DIC_OBJETO_PROPERTY b where a.nr_sequencia = b.nr_sequencia)');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela DIC_OBJETO_PROPERTY', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'DIC_PANEL', 'DIC_PANEL', 'where a.dt_atualizacao > (select b.dt_atualizacao from DIC_PANEL b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'DIC_PANEL', 'S', 'S', 'where not exists (select b.dt_atualizacao from DIC_PANEL b where a.nr_sequencia = b.nr_sequencia)');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela DIC_PANEL', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'DIC_PANEL_ELEMENT', 'DIC_PANEL_ELEMENT', 'where a.dt_atualizacao > (select b.dt_atualizacao from DIC_PANEL_ELEMENT b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'DIC_PANEL_ELEMENT', 'S', 'S', 'where not exists (select b.dt_atualizacao from DIC_PANEL_ELEMENT b where a.nr_sequencia = b.nr_sequencia)');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela DIC_PANEL_ELEMENT', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'TASY_PADRAO_IMAGEM_HTML', 'TASY_PADRAO_IMAGEM_HTML', 'where a.dt_atualizacao > (select b.dt_atualizacao from TASY_PADRAO_IMAGEM_HTML b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'TASY_PADRAO_IMAGEM_HTML', 'S', 'S', 'where not exists (select b.dt_atualizacao from TASY_PADRAO_IMAGEM_HTML b where a.nr_sequencia = b.nr_sequencia)');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela TASY_PADRAO_IMAGEM_HTML', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'OBJETO_SCHEMATIC_PARAM', 'OBJETO_SCHEMATIC_PARAM', 'where a.dt_atualizacao > (select b.dt_atualizacao from OBJETO_SCHEMATIC_PARAM b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'OBJETO_SCHEMATIC_PARAM', 'N', 'S', 'where not exists (select b.dt_atualizacao from OBJETO_SCHEMATIC_PARAM b where a.nr_sequencia = b.nr_sequencia)');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela OBJETO_SCHEMATIC_PARAM', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;
--##### FIM DO EXPORT DAS TABELAS DO HTML5 - SCHEMATICS
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'FUNCAO_MACRO', 'FUNCAO_MACRO', 'where a.dt_atualizacao > (select b.dt_atualizacao from FUNCAO_MACRO b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'FUNCAO_MACRO', 'S', 'S', 'where not exists (select b.dt_atualizacao from FUNCAO_MACRO b where a.nr_sequencia = b.nr_sequencia)');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela FUNCAO_MACRO', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'FUNCAO_MACRO_INICIAL', 'FUNCAO_MACRO_INICIAL', 'where a.dt_atualizacao > (select b.dt_atualizacao from FUNCAO_MACRO_INICIAL b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'FUNCAO_MACRO_INICIAL', 'S', 'S', 'where not exists (select b.dt_atualizacao from FUNCAO_MACRO_INICIAL b where a.nr_sequencia = b.nr_sequencia)');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela FUNCAO_MACRO_INICIAL', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'FIS_ENQUADRAMENTO_IPI', 'FIS_ENQUADRAMENTO_IPI', 'where a.dt_atualizacao > (select b.dt_atualizacao from FIS_ENQUADRAMENTO_IPI b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'FIS_ENQUADRAMENTO_IPI', 'S', 'S', 'where not exists (select b.dt_atualizacao from FIS_ENQUADRAMENTO_IPI b where a.nr_sequencia = b.nr_sequencia)');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela FIS_ENQUADRAMENTO_IPI', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'SUBTIPO_SANGUINEO', 'SUBTIPO_SANGUINEO', 'where a.dt_atualizacao > (select b.dt_atualizacao from SUBTIPO_SANGUINEO b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'SUBTIPO_SANGUINEO', 'S', 'S', 'where not exists (select b.dt_atualizacao from SUBTIPO_SANGUINEO b where a.nr_sequencia = b.nr_sequencia)');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Copiar_Tabela na tabela SUBTIPO_SANGUINEO', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'LOCALE_FORMATS', 'LOCALE_FORMATS', 'where a.dt_atualizacao > (select b.dt_atualizacao from LOCALE_FORMATS b where a.id_locale = b.id_locale and a.id_mask = b.id_mask)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'LOCALE_FORMATS', 'S', 'S', 'where not exists (select b.dt_atualizacao from LOCALE_FORMATS b where a.id_locale = b.id_locale and a.id_mask = b.id_mask)');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Copiar_Tabela na tabela LOCALE_FORMATS', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'PERSON_NAME_FORMAT', 'PERSON_NAME_FORMAT', 'where a.dt_atualizacao > (select b.dt_atualizacao from PERSON_NAME_FORMAT b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'PERSON_NAME_FORMAT', 'S', 'S', 'where not exists (select b.dt_atualizacao from PERSON_NAME_FORMAT b where a.nr_sequencia = b.nr_sequencia)');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Copiar_Tabela na tabela PERSON_NAME_FORMAT', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'CALENDAR', 'CALENDAR', 'where a.dt_atualizacao > (select b.dt_atualizacao from CALENDAR b where a.ds_calendar = b.ds_calendar)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'CALENDAR', 'S', 'S', 'where not exists (select b.dt_atualizacao from CALENDAR b where a.ds_calendar = b.ds_calendar)');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela CALENDAR', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'TASY_CONFIG_INCONSISTENCIA', 'TASY_CONFIG_INCONSISTENCIA', 'where a.dt_atualizacao > (select b.dt_atualizacao from TASY_CONFIG_INCONSISTENCIA b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'TASY_CONFIG_INCONSISTENCIA', 'S', 'S', 'where not exists (select b.dt_atualizacao from TASY_CONFIG_INCONSISTENCIA b where a.nr_sequencia = b.nr_sequencia)');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Copiar_Tabela na tabela TASY_CONFIG_INCONSISTENCIA', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'TASY_AJUSTE_BASE', 'TASY_AJUSTE_BASE', 'where a.dt_atualizacao > (select b.dt_atualizacao from TASY_AJUSTE_BASE b where a.CD_AJUSTE_BASE = b.CD_AJUSTE_BASE)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'TASY_AJUSTE_BASE', 'S', 'S', 'where not exists (select b.dt_atualizacao from TASY_AJUSTE_BASE b where a.CD_AJUSTE_BASE = b.CD_AJUSTE_BASE)');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Copiar_Tabela na tabela TASY_AJUSTE_BASE', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'INTPD_CONFIG_EVENTOS', 'INTPD_CONFIG_EVENTOS', 'where a.dt_atualizacao > (select b.dt_atualizacao from INTPD_CONFIG_EVENTOS b where a.nr_Sequencia = b.nr_Sequencia)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'INTPD_CONFIG_EVENTOS', 'S', 'S', 'where not exists (select b.dt_atualizacao from INTPD_CONFIG_EVENTOS b where a.nr_Sequencia = b.nr_sequencia)');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Copiar_Tabela na tabela TASY_AJUSTE_BASE', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'PLSQL_OBJECT_VARIANT', 'PLSQL_OBJECT_VARIANT', 'where a.dt_atualizacao > (select b.dt_atualizacao from PLSQL_OBJECT_VARIANT b where a.DS_ID = b.DS_ID and a.NM_OBJECT = b.NM_OBJECT)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'PLSQL_OBJECT_VARIANT', 'S', 'S', 'where not exists (select b.dt_atualizacao from PLSQL_OBJECT_VARIANT b where a.DS_ID = b.DS_ID and a.NM_OBJECT = b.NM_OBJECT)');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela PLSQL_OBJECT_VARIANT', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'ARQUIVO_EXTERNO', 'ARQUIVO_EXTERNO', 'where a.dt_atualizacao > (select b.dt_atualizacao from ARQUIVO_EXTERNO b where a.CD_ARQUIVO = b.CD_ARQUIVO)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'ARQUIVO_EXTERNO', 'S', 'S', 'where not exists (select b.dt_atualizacao from ARQUIVO_EXTERNO b where a.CD_ARQUIVO = b.CD_ARQUIVO)');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela ARQUIVO_EXTERNO', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'W_REF_COMP_JAVA', 'W_REF_COMP_JAVA', 'where a.dt_atualizacao > (select b.dt_atualizacao from W_REF_COMP_JAVA b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p, 'W_REF_COMP_JAVA', 'S', 'S', 'where not exists (select 1 from W_REF_COMP_JAVA b where	a.nr_sequencia	= b.nr_sequencia)');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela W_REF_COMP_JAVA - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'ARQUIVO_EXTERNO_VERSAO', 'ARQUIVO_EXTERNO_VERSAO', 'where a.dt_atualizacao > (select b.dt_atualizacao from ARQUIVO_EXTERNO_VERSAO b where a.CD_ARQUIVO = b.CD_ARQUIVO and a.CD_VERSAO = b.CD_VERSAO)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'ARQUIVO_EXTERNO_VERSAO', 'S', 'S', 'where not exists (select b.dt_atualizacao from ARQUIVO_EXTERNO_VERSAO b where a.CD_ARQUIVO = b.CD_ARQUIVO and a.CD_VERSAO = b.CD_VERSAO)');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela ARQUIVO_EXTERNO_VERSAO', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'RULE_INDEXED_SELECT', 'RULE_INDEXED_SELECT', 'where a.dt_atualizacao > (select b.dt_atualizacao from RULE_INDEXED_SELECT b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p, 'RULE_INDEXED_SELECT', 'S', 'S', 'where not exists (select 1 from RULE_INDEXED_SELECT b where	a.nr_sequencia	= b.nr_sequencia)');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela RULE_INDEXED_SELECT - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'PRIVACY', 'PRIVACY', 'where a.dt_atualizacao > (select b.dt_atualizacao from PRIVACY b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p, 'PRIVACY', 'S', 'S', 'where not exists (select 1 from PRIVACY b where	a.nr_sequencia	= b.nr_sequencia)');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela PRIVACY - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'PRIVACY_VERSION', 'PRIVACY_VERSION', 'where a.dt_atualizacao > (select b.dt_atualizacao from PRIVACY_VERSION b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p, 'PRIVACY_VERSION', 'S', 'S', 'where not exists (select 1 from PRIVACY_VERSION b where	a.nr_sequencia	= b.nr_sequencia)');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela PRIVACY_VERSION - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'PRIVACY_PROPERTY', 'PRIVACY_PROPERTY', 'where a.dt_atualizacao > (select b.dt_atualizacao from PRIVACY_PROPERTY b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p, 'PRIVACY_PROPERTY', 'S', 'S', 'where not exists (select 1 from PRIVACY_PROPERTY b where	a.nr_sequencia	= b.nr_sequencia)');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela PRIVACY_PROPERTY - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'USER_GUIDE', 'USER_GUIDE', 'where a.dt_atualizacao > (select b.dt_atualizacao from USER_GUIDE b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p, 'USER_GUIDE', 'S', 'S', 'where not exists (select 1 from USER_GUIDE b where	a.nr_sequencia	= b.nr_sequencia)');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela USER_GUIDE - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'USER_GUIDE_ITEM', 'USER_GUIDE_ITEM', 'where a.dt_atualizacao > (select b.dt_atualizacao from USER_GUIDE_ITEM b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p, 'USER_GUIDE_ITEM', 'S', 'S', 'where not exists (select 1 from USER_GUIDE_ITEM b where	a.nr_sequencia	= b.nr_sequencia)');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela USER_GUIDE_ITEM - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'USER_GUIDE_IDIOMA', 'USER_GUIDE_IDIOMA', 'where a.dt_atualizacao > (select b.dt_atualizacao from USER_GUIDE_IDIOMA b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p, 'USER_GUIDE_IDIOMA', 'S', 'S', 'where not exists (select 1 from USER_GUIDE_IDIOMA b where	a.nr_sequencia	= b.nr_sequencia)');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela USER_GUIDE_IDIOMA - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'PAT_OPERACAO', 'PAT_OPERACAO', 'where a.dt_atualizacao > (select b.dt_atualizacao from PAT_OPERACAO b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'PAT_OPERACAO', 'S', 'S', 'where not exists (select b.dt_atualizacao from PAT_OPERACAO b where a.nr_sequencia = b.nr_sequencia)');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela PAT_OPERACAO - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'PAT_TIPO_AVALIACAO', 'PAT_TIPO_AVALIACAO', 'where a.dt_atualizacao > (select b.dt_atualizacao from PAT_TIPO_AVALIACAO b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'PAT_TIPO_AVALIACAO', 'S', 'S', 'where not exists (select b.dt_atualizacao from PAT_TIPO_AVALIACAO b where a.nr_sequencia = b.nr_sequencia)');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela PAT_TIPO_AVALIACAO - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'FILE_STORAGE', 'FILE_STORAGE', 'where a.dt_atualizacao > (select b.dt_atualizacao from file_storage b where a.nm_storage = b.nm_storage)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'FILE_STORAGE', 'S', 'S', 'where not exists (select b.dt_atualizacao from file_storage b where a.nm_storage = b.nm_storage)');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela FILE_STORAGE - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'SIP_ITEM_ASSISTENCIAL', 'SIP_ITEM_ASSISTENCIAL', 'where a.dt_atualizacao > (select b.dt_atualizacao from SIP_ITEM_ASSISTENCIAL b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'SIP_ITEM_ASSISTENCIAL','N','S',' where not exists ( select 1 from SIP_ITEM_ASSISTENCIAL b where a.nr_sequencia = b.nr_sequencia)');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela SIP_ITEM_ASSISTENCIAL - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;
/*ESCALA_DOCUMENTACAO_PAIS*/

begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'ESCALA_DOCUMENTACAO_PAIS','ESCALA_DOCUMENTACAO_PAIS',
'where a.dt_atualizacao > (select b.dt_atualizacao from ESCALA_DOCUMENTACAO_PAIS b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'ESCALA_DOCUMENTACAO_PAIS','N','S','where not exists (select 1
from ESCALA_DOCUMENTACAO_PAIS b where a.nr_sequencia = b.nr_sequencia) ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela XML_ATRIBUTO - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
--TABELAS CAT - NOM M?ICO
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'CAT_ENTIDADE','CAT_ENTIDADE','where a.dt_atualizacao > (select b.dt_atualizacao from CAT_ENTIDADE b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'CAT_ENTIDADE','N','S','where not exists (select 1 from CAT_ENTIDADE b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''es_MX'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela CAT_ENTIDADE - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'CAT_MUNICIPIO','CAT_MUNICIPIO','where a.dt_atualizacao > (select b.dt_atualizacao from CAT_MUNICIPIO b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'CAT_MUNICIPIO','N','S','where not exists (select 1 from CAT_MUNICIPIO b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''es_MX'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela CAT_MUNICIPIO - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'CAT_LOCALIDADE','CAT_LOCALIDADE','where a.dt_atualizacao > (select b.dt_atualizacao from CAT_LOCALIDADE b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'CAT_LOCALIDADE','N','S','where not exists (select 1 from CAT_LOCALIDADE b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''es_MX'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela CAT_LOCALIDADE - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'CAT_ETNIA','CAT_ETNIA','where a.dt_atualizacao > (select b.dt_atualizacao from CAT_ETNIA b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'CAT_ETNIA','N','S','where not exists (select 1 from CAT_ETNIA b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''es_MX'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela CAT_ETNIA - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'CAT_TRAT_NAO_FARMACOLOGICO','CAT_TRAT_NAO_FARMACOLOGICO','where a.dt_atualizacao > (select b.dt_atualizacao from CAT_TRAT_NAO_FARMACOLOGICO b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'CAT_TRAT_NAO_FARMACOLOGICO','N','S','where not exists (select 1 from CAT_TRAT_NAO_FARMACOLOGICO b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''es_MX'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela CAT_TRAT_NAO_FARMACOLOGICO - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'CAT_COMPLICACOES','CAT_COMPLICACOES','where a.dt_atualizacao > (select b.dt_atualizacao from CAT_COMPLICACOES b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'CAT_COMPLICACOES','N','S','where not exists (select 1 from CAT_COMPLICACOES b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''es_MX'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela CAT_COMPLICACOES - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'CAT_ASSENTAMENTO','CAT_ASSENTAMENTO','where a.dt_atualizacao > (select b.dt_atualizacao from CAT_ASSENTAMENTO b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'CAT_ASSENTAMENTO','N','S','where not exists (select 1 from CAT_ASSENTAMENTO b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''es_MX'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela CAT_ASSENTAMENTO - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'CAT_ANESTESIA','CAT_ANESTESIA','where a.dt_atualizacao > (select b.dt_atualizacao from CAT_ANESTESIA b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'CAT_ANESTESIA','N','S','where not exists (select 1 from CAT_ANESTESIA b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''es_MX'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela CAT_ANESTESIA - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'CAT_CONDICAO_ALTA','CAT_CONDICAO_ALTA','where a.dt_atualizacao > (select b.dt_atualizacao from CAT_CONDICAO_ALTA b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'CAT_CONDICAO_ALTA','N','S','where not exists (select 1 from CAT_CONDICAO_ALTA b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''es_MX'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela CAT_CONDICAO_ALTA - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'CAT_CONDICAO_NASCIMENTO','CAT_CONDICAO_NASCIMENTO','where a.dt_atualizacao > (select b.dt_atualizacao from CAT_CONDICAO_NASCIMENTO b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'CAT_CONDICAO_NASCIMENTO','N','S','where not exists (select 1 from CAT_CONDICAO_NASCIMENTO b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''es_MX'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela CAT_CONDICAO_NASCIMENTO - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'CAT_DERECHOHABIENCIA','CAT_DERECHOHABIENCIA','where a.dt_atualizacao > (select b.dt_atualizacao from CAT_DERECHOHABIENCIA b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'CAT_DERECHOHABIENCIA','N','S','where not exists (select 1 from CAT_DERECHOHABIENCIA b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''es_MX'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela CAT_DERECHOHABIENCIA - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'CAT_LINGUA_INDIGENA','CAT_LINGUA_INDIGENA','where a.dt_atualizacao > (select b.dt_atualizacao from CAT_LINGUA_INDIGENA b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'CAT_LINGUA_INDIGENA','N','S','where not exists (select 1 from CAT_LINGUA_INDIGENA b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''es_MX'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela CAT_LINGUA_INDIGENA - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'CAT_LUGAR_ACC','CAT_LUGAR_ACC','where a.dt_atualizacao > (select b.dt_atualizacao from CAT_LUGAR_ACC b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'CAT_LUGAR_ACC','N','S','where not exists (select 1 from CAT_LUGAR_ACC b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''es_MX'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela CAT_LUGAR_ACC - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'CAT_MOTIVO_EGRESO','CAT_MOTIVO_EGRESO','where a.dt_atualizacao > (select b.dt_atualizacao from CAT_MOTIVO_EGRESO b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'CAT_MOTIVO_EGRESO','N','S','where not exists (select 1 from CAT_MOTIVO_EGRESO b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''es_MX'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela CAT_MOTIVO_EGRESO - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'CAT_PLAN_FAMILIAR','CAT_PLAN_FAMILIAR','where a.dt_atualizacao > (select b.dt_atualizacao from CAT_PLAN_FAMILIAR b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'CAT_PLAN_FAMILIAR','N','S','where not exists (select 1 from CAT_PLAN_FAMILIAR b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''es_MX'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela CAT_PLAN_FAMILIAR - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'CAT_SERVICOS','CAT_SERVICOS','where a.dt_atualizacao > (select b.dt_atualizacao from CAT_SERVICOS b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'CAT_SERVICOS','N','S','where not exists (select 1 from CAT_SERVICOS b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''es_MX'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela CAT_SERVICOS - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'CAT_TIPO_SERVICO','CAT_TIPO_SERVICO','where a.dt_atualizacao > (select b.dt_atualizacao from CAT_TIPO_SERVICO b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'CAT_TIPO_SERVICO','N','S','where not exists (select 1 from CAT_TIPO_SERVICO b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''es_MX'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela CAT_TIPO_SERVICO - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'CAT_CLUES','CAT_CLUES','where a.dt_atualizacao > (select b.dt_atualizacao from CAT_CLUES b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'CAT_CLUES','N','S','where not exists (select 1 from CAT_CLUES b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''es_MX'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela CAT_CLUES - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'CAT_CODIGO_POSTAL','CAT_CODIGO_POSTAL','where a.dt_atualizacao > (select b.dt_atualizacao from CAT_CODIGO_POSTAL b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'CAT_CODIGO_POSTAL','N','S','where not exists (select 1 from CAT_CODIGO_POSTAL b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''es_MX'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela CAT_CODIGO_POSTAL - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'CAT_VIALIDADE','CAT_VIALIDADE','where a.dt_atualizacao > (select b.dt_atualizacao from CAT_VIALIDADE b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'CAT_VIALIDADE','N','S','where not exists (select 1 from CAT_VIALIDADE b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''es_MX'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela CAT_VIALIDADE - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'CAT_PROFISSIONAL_PARTO','CAT_PROFISSIONAL_PARTO','where a.dt_atualizacao > (select b.dt_atualizacao from CAT_PROFISSIONAL_PARTO b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'CAT_PROFISSIONAL_PARTO','N','S','where not exists (select 1 from CAT_PROFISSIONAL_PARTO b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''es_MX'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela CAT_PROFISSIONAL_PARTO - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'CAT_CERT_PARTO','CAT_CERT_PARTO','where a.dt_atualizacao > (select b.dt_atualizacao from CAT_CERT_PARTO b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'CAT_CERT_PARTO','N','S','where not exists (select 1 from CAT_CERT_PARTO b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''es_MX'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela CAT_CERT_PARTO - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'CAT_LUGAR_CERT_NASC','CAT_LUGAR_CERT_NASC','where a.dt_atualizacao > (select b.dt_atualizacao from CAT_LUGAR_CERT_NASC b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'CAT_LUGAR_CERT_NASC','N','S','where not exists (select 1 from CAT_LUGAR_CERT_NASC b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''es_MX'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela CAT_LUGAR_CERT_NASC - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'CAT_PAIS','CAT_PAIS','where a.dt_atualizacao > (select b.dt_atualizacao from CAT_PAIS b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'CAT_PAIS','N','S','where not exists (select 1 from CAT_PAIS b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''es_MX'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela CAT_PAIS - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'CAT_GRAU_PARENTESCO','CAT_GRAU_PARENTESCO','where a.dt_atualizacao > (select b.dt_atualizacao from CAT_GRAU_PARENTESCO b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'CAT_GRAU_PARENTESCO','N','S','where not exists (select 1 from CAT_GRAU_PARENTESCO b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''es_MX'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela CAT_GRAU_PARENTESCO - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'CAT_PROCEDIMENTO','CAT_PROCEDIMENTO','where a.dt_atualizacao > (select b.dt_atualizacao from CAT_PROCEDIMENTO b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'CAT_PROCEDIMENTO','N','S','where not exists (select 1 from CAT_PROCEDIMENTO b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''es_MX'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela CAT_PROCEDIMENTO - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'CAT_MEDICAMENTO','CAT_MEDICAMENTO','where a.dt_atualizacao > (select b.dt_atualizacao from CAT_MEDICAMENTO b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'CAT_MEDICAMENTO','N','S','where not exists (select 1 from CAT_MEDICAMENTO b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''es_MX'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela CAT_MEDICAMENTO - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'CAT_SITIOS','CAT_SITIOS','where a.dt_atualizacao > (select b.dt_atualizacao from CAT_SITIOS b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'CAT_SITIOS','N','S','where not exists (select 1 from CAT_SITIOS b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''es_MX'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela CAT_SITIOS - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'CAT_JURISDICAO','CAT_JURISDICAO','where a.dt_atualizacao > (select b.dt_atualizacao from CAT_JURISDICAO b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'CAT_JURISDICAO','N','S','where not exists (select 1 from CAT_JURISDICAO b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''es_MX'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela CAT_JURISDICAO - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'VIA_ADM_LOCALIZADA','VIA_ADM_LOCALIZADA','where a.dt_atualizacao > (select b.dt_atualizacao from VIA_ADM_LOCALIZADA b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'VIA_ADM_LOCALIZADA','N','S','where not exists (select 1 from VIA_ADM_LOCALIZADA b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''es_MX'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela VIA_ADM_LOCALIZADA - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'CAT_TIPO_ASSENTAMENTO','CAT_TIPO_ASSENTAMENTO','where a.dt_atualizacao > (select b.dt_atualizacao from CAT_TIPO_ASSENTAMENTO b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'CAT_TIPO_ASSENTAMENTO','N','S','where not exists (select 1 from CAT_TIPO_ASSENTAMENTO b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''es_MX'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela CAT_TIPO_ASSENTAMENTO - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'CAT_TIPO_VIA','CAT_TIPO_VIA','where a.dt_atualizacao > (select b.dt_atualizacao from CAT_TIPO_VIA b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'CAT_TIPO_VIA','N','S','where not exists (select 1 from CAT_TIPO_VIA b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''es_MX'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela CAT_TIPO_VIA - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
/*Validador NOM */

begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'VALIDADOR_NOM','VALIDADOR_NOM','where a.dt_atualizacao > (select b.dt_atualizacao from VALIDADOR_NOM b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'VALIDADOR_NOM','N','S','where not exists (select 1 from VALIDADOR_NOM b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''es_MX'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela VALIDADOR_NOM - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'VALIDADOR_NOM_CAMPO','VALIDADOR_NOM_CAMPO','where a.dt_atualizacao > (select b.dt_atualizacao from VALIDADOR_NOM_CAMPO b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'VALIDADOR_NOM_CAMPO','N','S','where not exists (select 1 from VALIDADOR_NOM_CAMPO b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''es_MX'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela VALIDADOR_NOM_CAMPO - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
/*Validador NOM */


/*IMAGEM_BANCO_PHILIPS*/

begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'IMAGEM_BANCO_PHILIPS','IMAGEM_BANCO_PHILIPS',
'where a.dt_atualizacao > (select b.dt_atualizacao from IMAGEM_BANCO_PHILIPS b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'IMAGEM_BANCO_PHILIPS','N','S','where not exists (select 1
from IMAGEM_BANCO_PHILIPS b where a.nr_sequencia = b.nr_sequencia) ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela IMAGEM_BANCO_PHILIPS - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
/*AREA_IMAGEM_PHILIPS*/

begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'AREA_IMAGEM_PHILIPS','AREA_IMAGEM_PHILIPS',
'where a.dt_atualizacao > (select b.dt_atualizacao from AREA_IMAGEM_PHILIPS b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'AREA_IMAGEM_PHILIPS','N','S','where not exists (select 1
from AREA_IMAGEM_PHILIPS b where a.nr_sequencia = b.nr_sequencia) ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela AREA_IMAGEM_PHILIPS - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
/*AREA_IMAGEM_ITEM_PHILIPS*/

begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'AREA_IMAGEM_ITEM_PHILIPS','AREA_IMAGEM_ITEM_PHILIPS',
'where a.dt_atualizacao > (select b.dt_atualizacao from AREA_IMAGEM_ITEM_PHILIPS b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'AREA_IMAGEM_ITEM_PHILIPS','N','S','where not exists (select 1
from AREA_IMAGEM_ITEM_PHILIPS b where a.nr_sequencia = b.nr_sequencia) ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela AREA_IMAGEM_ITEM_PHILIPS - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'C301_1_MOTIVO_ADM_MOTIVO','C301_1_MOTIVO_ADM_MOTIVO',
'where a.dt_atualizacao > (select b.dt_atualizacao from C301_1_MOTIVO_ADM_MOTIVO b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
Tasy_Copiar_tabela(nm_owner_origem_p,'C301_1_MOTIVO_ADM_MOTIVO','N','S','where not exists (select 1
from C301_1_MOTIVO_ADM_MOTIVO b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela C301_1_MOTIVO_ADM_MOTIVO - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'C301_1_MOTIVO_ADM_TIPO','C301_1_MOTIVO_ADM_TIPO',
'where a.dt_atualizacao > (select b.dt_atualizacao from C301_1_MOTIVO_ADM_TIPO b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
Tasy_Copiar_tabela(nm_owner_origem_p,'C301_1_MOTIVO_ADM_TIPO','N','S','where not exists (select 1
from C301_1_MOTIVO_ADM_TIPO b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela C301_1_MOTIVO_ADM_TIPO - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'C301_2_MEDIDA_REABILITACAO','C301_2_MEDIDA_REABILITACAO',
'where a.dt_atualizacao > (select b.dt_atualizacao from C301_2_MEDIDA_REABILITACAO b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
Tasy_Copiar_tabela(nm_owner_origem_p,'C301_2_MEDIDA_REABILITACAO','N','S','where not exists (select 1
from C301_2_MEDIDA_REABILITACAO b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela C301_2_MEDIDA_REABILITACAO - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'C301_3_REMUNERACAO_IND','C301_3_REMUNERACAO_IND',
'where a.dt_atualizacao > (select b.dt_atualizacao from C301_3_REMUNERACAO_IND b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
Tasy_Copiar_tabela(nm_owner_origem_p,'C301_3_REMUNERACAO_IND','N','S','where not exists (select 1
from C301_3_REMUNERACAO_IND b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela C301_3_REMUNERACAO_IND - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'C301_4_CODIGO_AMBULATORIAL','C301_4_CODIGO_AMBULATORIAL',
'where a.dt_atualizacao > (select b.dt_atualizacao from C301_4_CODIGO_AMBULATORIAL b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
Tasy_Copiar_tabela(nm_owner_origem_p,'C301_4_CODIGO_AMBULATORIAL','N','S','where not exists (select 1
from C301_4_CODIGO_AMBULATORIAL b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela C301_4_CODIGO_AMBULATORIAL - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'C301_4_CODIGO_INTERNADO','C301_4_CODIGO_INTERNADO',
'where a.dt_atualizacao > (select b.dt_atualizacao from C301_4_CODIGO_INTERNADO b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
Tasy_Copiar_tabela(nm_owner_origem_p,'C301_4_CODIGO_INTERNADO','N','S','where not exists (select 1
from C301_4_CODIGO_INTERNADO b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela C301_4_CODIGO_INTERNADO - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'C301_4_CODIGO_PSIQUIATRIA','C301_4_CODIGO_PSIQUIATRIA',
'where a.dt_atualizacao > (select b.dt_atualizacao from C301_4_CODIGO_PSIQUIATRIA b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
Tasy_Copiar_tabela(nm_owner_origem_p,'C301_4_CODIGO_PSIQUIATRIA','N','S','where not exists (select 1
from C301_4_CODIGO_PSIQUIATRIA b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela C301_4_CODIGO_PSIQUIATRIA - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'C301_4_SUBTIPO_COBRANCA','C301_4_SUBTIPO_COBRANCA',
'where a.dt_atualizacao > (select b.dt_atualizacao from C301_4_SUBTIPO_COBRANCA b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
Tasy_Copiar_tabela(nm_owner_origem_p,'C301_4_SUBTIPO_COBRANCA','N','S','where not exists (select 1
from C301_4_SUBTIPO_COBRANCA b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela C301_4_SUBTIPO_COBRANCA - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'C301_4_TIPO_COBRANCA','C301_4_TIPO_COBRANCA',
'where a.dt_atualizacao > (select b.dt_atualizacao from C301_4_TIPO_COBRANCA b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
Tasy_Copiar_tabela(nm_owner_origem_p,'C301_4_TIPO_COBRANCA','N','S','where not exists (select 1
from C301_4_TIPO_COBRANCA b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela C301_4_TIPO_COBRANCA - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'C301_5_MOT_ALTA_TRANSF','C301_5_MOT_ALTA_TRANSF',
'where a.dt_atualizacao > (select b.dt_atualizacao from C301_5_MOT_ALTA_TRANSF b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
Tasy_Copiar_tabela(nm_owner_origem_p,'C301_5_MOT_ALTA_TRANSF','N','S','where not exists (select 1
from C301_5_MOT_ALTA_TRANSF b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela C301_5_MOT_ALTA_TRANSF - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'C301_5_MOT_ALTA_TRANSF_TR','C301_5_MOT_ALTA_TRANSF_TR',
'where a.dt_atualizacao > (select b.dt_atualizacao from C301_5_MOT_ALTA_TRANSF_TR b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
Tasy_Copiar_tabela(nm_owner_origem_p,'C301_5_MOT_ALTA_TRANSF_TR','N','S','where not exists (select 1
from C301_5_MOT_ALTA_TRANSF_TR b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela C301_5_MOT_ALTA_TRANSF_TR - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'C301_6_DEPARTAMENTO','C301_6_DEPARTAMENTO',
'where a.dt_atualizacao > (select b.dt_atualizacao from C301_6_DEPARTAMENTO b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
Tasy_Copiar_tabela(nm_owner_origem_p,'C301_6_DEPARTAMENTO','N','S','where not exists (select 1
from C301_6_DEPARTAMENTO b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela C301_6_DEPARTAMENTO - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'C301_7_PAIS','C301_7_PAIS',
'where a.dt_atualizacao > (select b.dt_atualizacao from C301_7_PAIS b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
Tasy_Copiar_tabela(nm_owner_origem_p,'C301_7_PAIS','N','S','where not exists (select 1
from C301_7_PAIS b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela C301_7_PAIS - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'C301_8_STATUS_CUSTO','C301_8_STATUS_CUSTO',
'where a.dt_atualizacao > (select b.dt_atualizacao from C301_8_STATUS_CUSTO b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
Tasy_Copiar_tabela(nm_owner_origem_p,'C301_8_STATUS_CUSTO','N','S','where not exists (select 1
from C301_8_STATUS_CUSTO b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela C301_8_STATUS_CUSTO - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'C301_8_STATUS_CUSTO_CONV','C301_8_STATUS_CUSTO_CONV',
'where a.dt_atualizacao > (select b.dt_atualizacao from C301_8_STATUS_CUSTO_CONV b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
Tasy_Copiar_tabela(nm_owner_origem_p,'C301_8_STATUS_CUSTO_CONV','N','S','where not exists (select 1
from C301_8_STATUS_CUSTO_CONV b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela C301_8_STATUS_CUSTO_CONV - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'C301_9_IDENT_PROCESSO','C301_9_IDENT_PROCESSO',
'where a.dt_atualizacao > (select b.dt_atualizacao from C301_9_IDENT_PROCESSO b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
Tasy_Copiar_tabela(nm_owner_origem_p,'C301_9_IDENT_PROCESSO','N','S','where not exists (select 1
from C301_9_IDENT_PROCESSO b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela C301_9_IDENT_PROCESSO - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'C301_10_RESPOSTA_AUDIT','C301_10_RESPOSTA_AUDIT',
'where a.dt_atualizacao > (select b.dt_atualizacao from C301_10_RESPOSTA_AUDIT b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
Tasy_Copiar_tabela(nm_owner_origem_p,'C301_10_RESPOSTA_AUDIT','N','S','where not exists (select 1
from C301_10_RESPOSTA_AUDIT b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela C301_10_RESPOSTA_AUDIT - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'C301_11_INDIC_COBR','C301_11_INDIC_COBR',
'where a.dt_atualizacao > (select b.dt_atualizacao from C301_11_INDIC_COBR b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
Tasy_Copiar_tabela(nm_owner_origem_p,'C301_11_INDIC_COBR','N','S','where not exists (select 1
from C301_11_INDIC_COBR b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela C301_11_INDIC_COBR - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'C301_11_INDIC_COBR_PEDIDO','C301_11_INDIC_COBR_PEDIDO',
'where a.dt_atualizacao > (select b.dt_atualizacao from C301_11_INDIC_COBR_PEDIDO b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
Tasy_Copiar_tabela(nm_owner_origem_p,'C301_11_INDIC_COBR_PEDIDO','N','S','where not exists (select 1
from C301_11_INDIC_COBR_PEDIDO b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela C301_11_INDIC_COBR_PEDIDO - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'C301_12_DOENCA_CRONICA','C301_12_DOENCA_CRONICA',
'where a.dt_atualizacao > (select b.dt_atualizacao from C301_12_DOENCA_CRONICA b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
Tasy_Copiar_tabela(nm_owner_origem_p,'C301_12_DOENCA_CRONICA','N','S','where not exists (select 1
from C301_12_DOENCA_CRONICA b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela C301_12_DOENCA_CRONICA - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'C301_12_GRUPO_PESSOA','C301_12_GRUPO_PESSOA',
'where a.dt_atualizacao > (select b.dt_atualizacao from C301_12_GRUPO_PESSOA b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
Tasy_Copiar_tabela(nm_owner_origem_p,'C301_12_GRUPO_PESSOA','N','S','where not exists (select 1
from C301_12_GRUPO_PESSOA b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela C301_12_GRUPO_PESSOA - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'C301_12_STATUS_SEGURADO','C301_12_STATUS_SEGURADO',
'where a.dt_atualizacao > (select b.dt_atualizacao from C301_12_STATUS_SEGURADO b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
Tasy_Copiar_tabela(nm_owner_origem_p,'C301_12_STATUS_SEGURADO','N','S','where not exists (select 1
from C301_12_STATUS_SEGURADO b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela C301_12_STATUS_SEGURADO - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'C301_13_SUGEST_TRAT_FUT','C301_13_SUGEST_TRAT_FUT',
'where a.dt_atualizacao > (select b.dt_atualizacao from C301_13_SUGEST_TRAT_FUT b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
Tasy_Copiar_tabela(nm_owner_origem_p,'C301_13_SUGEST_TRAT_FUT','N','S','where not exists (select 1
from C301_13_SUGEST_TRAT_FUT b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela C301_13_SUGEST_TRAT_FUT - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'C301_15_INDIC_PAGAMENTO','C301_15_INDIC_PAGAMENTO',
'where a.dt_atualizacao > (select b.dt_atualizacao from C301_15_INDIC_PAGAMENTO b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
Tasy_Copiar_tabela(nm_owner_origem_p,'C301_15_INDIC_PAGAMENTO','N','S','where not exists (select 1
from C301_15_INDIC_PAGAMENTO b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela C301_15_INDIC_PAGAMENTO - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'C301_16_LOCALIZACAO','C301_16_LOCALIZACAO',
'where a.dt_atualizacao > (select b.dt_atualizacao from C301_16_LOCALIZACAO b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
Tasy_Copiar_tabela(nm_owner_origem_p,'C301_16_LOCALIZACAO','N','S','where not exists (select 1
from C301_16_LOCALIZACAO b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela C301_16_LOCALIZACAO - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'C301_17_CONFIANCA_DIAG','C301_17_CONFIANCA_DIAG',
'where a.dt_atualizacao > (select b.dt_atualizacao from C301_17_CONFIANCA_DIAG b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
Tasy_Copiar_tabela(nm_owner_origem_p,'C301_17_CONFIANCA_DIAG','N','S','where not exists (select 1
from C301_17_CONFIANCA_DIAG b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela C301_17_CONFIANCA_DIAG - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'C301_18_MOEDA','C301_18_MOEDA',
'where a.dt_atualizacao > (select b.dt_atualizacao from C301_18_MOEDA b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
Tasy_Copiar_tabela(nm_owner_origem_p,'C301_18_MOEDA','N','S','where not exists (select 1
from C301_18_MOEDA b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela C301_18_MOEDA - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'C301_19_INDIC_ADIC_EBM','C301_19_INDIC_ADIC_EBM',
'where a.dt_atualizacao > (select b.dt_atualizacao from C301_19_INDIC_ADIC_EBM b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
Tasy_Copiar_tabela(nm_owner_origem_p,'C301_19_INDIC_ADIC_EBM','N','S','where not exists (select 1
from C301_19_INDIC_ADIC_EBM b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela C301_19_INDIC_ADIC_EBM - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'C301_21_SEXO','C301_21_SEXO',
'where a.dt_atualizacao > (select b.dt_atualizacao from C301_21_SEXO b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
Tasy_Copiar_tabela(nm_owner_origem_p,'C301_21_SEXO','N','S','where not exists (select 1
from C301_21_SEXO b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela C301_21_SEXO - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'C301_22_AREA_ATUACAO','C301_22_AREA_ATUACAO',
'where a.dt_atualizacao > (select b.dt_atualizacao from C301_22_AREA_ATUACAO b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
Tasy_Copiar_tabela(nm_owner_origem_p,'C301_22_AREA_ATUACAO','N','S','where not exists (select 1
from C301_22_AREA_ATUACAO b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela C301_22_AREA_ATUACAO - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'C301_23_SERVICO_PIA','C301_23_SERVICO_PIA',
'where a.dt_atualizacao > (select b.dt_atualizacao from C301_23_SERVICO_PIA b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
Tasy_Copiar_tabela(nm_owner_origem_p,'C301_23_SERVICO_PIA','N','S','where not exists (select 1
from C301_23_SERVICO_PIA b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela C301_23_SERVICO_PIA - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'C301_24_REGIAO_ATUACAO','C301_24_REGIAO_ATUACAO',
'where a.dt_atualizacao > (select b.dt_atualizacao from C301_24_REGIAO_ATUACAO b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
Tasy_Copiar_tabela(nm_owner_origem_p,'C301_24_REGIAO_ATUACAO','N','S','where not exists (select 1
from C301_24_REGIAO_ATUACAO b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela C301_24_REGIAO_ATUACAO - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'C301_24_TIPO_SERVICO','C301_24_TIPO_SERVICO',
'where a.dt_atualizacao > (select b.dt_atualizacao from C301_24_TIPO_SERVICO b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
Tasy_Copiar_tabela(nm_owner_origem_p,'C301_24_TIPO_SERVICO','N','S','where not exists (select 1
from C301_24_TIPO_SERVICO b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela C301_24_TIPO_SERVICO - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'C301_26_DISTRITO_KV','C301_26_DISTRITO_KV',
'where a.dt_atualizacao > (select b.dt_atualizacao from C301_26_DISTRITO_KV b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
Tasy_Copiar_tabela(nm_owner_origem_p,'C301_26_DISTRITO_KV','N','S','where not exists (select 1
from C301_26_DISTRITO_KV b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela C301_26_DISTRITO_KV - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'C301_27_ESPEC_EQUIPE','C301_27_ESPEC_EQUIPE',
'where a.dt_atualizacao > (select b.dt_atualizacao from C301_27_ESPEC_EQUIPE b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
Tasy_Copiar_tabela(nm_owner_origem_p,'C301_27_ESPEC_EQUIPE','N','S','where not exists (select 1
from C301_27_ESPEC_EQUIPE b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela C301_27_ESPEC_EQUIPE - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'C301_28_TNM_RECORRENCIA','C301_28_TNM_RECORRENCIA',
'where a.dt_atualizacao > (select b.dt_atualizacao from C301_28_TNM_RECORRENCIA b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
Tasy_Copiar_tabela(nm_owner_origem_p,'C301_28_TNM_RECORRENCIA','N','S','where not exists (select 1
from C301_28_TNM_RECORRENCIA b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela C301_28_TNM_RECORRENCIA - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'C301_28_TNM_CLASSIF_TUMOR','C301_28_TNM_CLASSIF_TUMOR',
'where a.dt_atualizacao > (select b.dt_atualizacao from C301_28_TNM_CLASSIF_TUMOR b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
Tasy_Copiar_tabela(nm_owner_origem_p,'C301_28_TNM_CLASSIF_TUMOR','N','S','where not exists (select 1
from C301_28_TNM_CLASSIF_TUMOR b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela C301_28_TNM_CLASSIF_TUMOR - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'C301_28_TNM_METASTASE_LINF','C301_28_TNM_METASTASE_LINF',
'where a.dt_atualizacao > (select b.dt_atualizacao from C301_28_TNM_METASTASE_LINF b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
Tasy_Copiar_tabela(nm_owner_origem_p,'C301_28_TNM_METASTASE_LINF','N','S','where not exists (select 1
from C301_28_TNM_METASTASE_LINF b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela C301_28_TNM_METASTASE_LINF - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'C301_28_TNM_METASTASE_DIST','C301_28_TNM_METASTASE_DIST',
'where a.dt_atualizacao > (select b.dt_atualizacao from C301_28_TNM_METASTASE_DIST b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
Tasy_Copiar_tabela(nm_owner_origem_p,'C301_28_TNM_METASTASE_DIST','N','S','where not exists (select 1
from C301_28_TNM_METASTASE_DIST b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela C301_28_TNM_METASTASE_DIST - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'C301_28_TNM_GRAU','C301_28_TNM_GRAU',
'where a.dt_atualizacao > (select b.dt_atualizacao from C301_28_TNM_GRAU b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
Tasy_Copiar_tabela(nm_owner_origem_p,'C301_28_TNM_GRAU','N','S','where not exists (select 1
from C301_28_TNM_GRAU b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela C301_28_TNM_GRAU - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'C301_28_TNM_TUMOR_RESID','C301_28_TNM_TUMOR_RESID',
'where a.dt_atualizacao > (select b.dt_atualizacao from C301_28_TNM_TUMOR_RESID b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
Tasy_Copiar_tabela(nm_owner_origem_p,'C301_28_TNM_TUMOR_RESID','N','S','where not exists (select 1
from C301_28_TNM_TUMOR_RESID b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela C301_28_TNM_TUMOR_RESID - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'C301_29_PROGRESSAO_TUMOR','C301_29_PROGRESSAO_TUMOR',
'where a.dt_atualizacao > (select b.dt_atualizacao from C301_29_PROGRESSAO_TUMOR b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
Tasy_Copiar_tabela(nm_owner_origem_p,'C301_29_PROGRESSAO_TUMOR','N','S','where not exists (select 1
from C301_29_PROGRESSAO_TUMOR b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela C301_29_PROGRESSAO_TUMOR - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'C301_30_INFO_AUDIT','C301_30_INFO_AUDIT',
'where a.dt_atualizacao > (select b.dt_atualizacao from C301_30_INFO_AUDIT b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
Tasy_Copiar_tabela(nm_owner_origem_p,'C301_30_INFO_AUDIT','N','S','where not exists (select 1
from C301_30_INFO_AUDIT b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela C301_30_INFO_AUDIT - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
/* DALE - UV */

begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'DUV_VERSAO','DUV_VERSAO',
'where a.dt_atualizacao > (select b.dt_atualizacao from DUV_VERSAO b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
Tasy_Copiar_tabela(nm_owner_origem_p,'DUV_VERSAO','N','S','where not exists (select 1
from DUV_VERSAO b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela DUV_VERSAO - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'DUV_TIPO_MENSAGEM','DUV_TIPO_MENSAGEM',
'where a.dt_atualizacao > (select b.dt_atualizacao from DUV_TIPO_MENSAGEM b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
Tasy_Copiar_tabela(nm_owner_origem_p,'DUV_TIPO_MENSAGEM','N','S','where not exists (select 1
from DUV_TIPO_MENSAGEM b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela DUV_TIPO_MENSAGEM - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'DUV_VERSAO_MENSAGEM','DUV_VERSAO_MENSAGEM',
'where a.dt_atualizacao > (select b.dt_atualizacao from DUV_VERSAO_MENSAGEM b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
Tasy_Copiar_tabela(nm_owner_origem_p,'DUV_VERSAO_MENSAGEM','N','S','where not exists (select 1
from DUV_VERSAO_MENSAGEM b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela DUV_VERSAO_MENSAGEM - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'DUV_TIPO_MENS_SEGMENTO','DUV_TIPO_MENS_SEGMENTO',
'where a.dt_atualizacao > (select b.dt_atualizacao from DUV_TIPO_MENS_SEGMENTO b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
Tasy_Copiar_tabela(nm_owner_origem_p,'DUV_TIPO_MENS_SEGMENTO','N','S','where not exists (select 1
from DUV_TIPO_MENS_SEGMENTO b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela DUV_TIPO_MENS_SEGMENTO - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'DUV_TIPO_MENS_SEG_CAMPO','DUV_TIPO_MENS_SEG_CAMPO',
'where a.dt_atualizacao > (select b.dt_atualizacao from DUV_TIPO_MENS_SEG_CAMPO b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
Tasy_Copiar_tabela(nm_owner_origem_p,'DUV_TIPO_MENS_SEG_CAMPO','N','S','where not exists (select 1 from DUV_TIPO_MENS_SEG_CAMPO b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela DUV_TIPO_MENS_SEG_CAMPO - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'DUV_TIPO_LESAO','DUV_TIPO_LESAO',
'where a.dt_atualizacao > (select b.dt_atualizacao from DUV_TIPO_LESAO b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
Tasy_Copiar_tabela(nm_owner_origem_p,'DUV_TIPO_LESAO','N','S','where not exists (select 1
from DUV_TIPO_LESAO b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela DUV_TIPO_LESAO - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'C301_ESTRUTURA_ARQ','C301_ESTRUTURA_ARQ',
'where a.dt_atualizacao > (select b.dt_atualizacao from C301_ESTRUTURA_ARQ b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
Tasy_Copiar_tabela(nm_owner_origem_p,'C301_ESTRUTURA_ARQ','N','S','where not exists (select 1
from C301_ESTRUTURA_ARQ b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela C301_ESTRUTURA_ARQ - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'C301_ESTRUTURA_SEG_DATASET','C301_ESTRUTURA_SEG_DATASET',
'where a.dt_atualizacao > (select b.dt_atualizacao from C301_ESTRUTURA_SEG_DATASET b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
Tasy_Copiar_tabela(nm_owner_origem_p,'C301_ESTRUTURA_SEG_DATASET','N','S','where not exists (select 1
from C301_ESTRUTURA_SEG_DATASET b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela C301_ESTRUTURA_SEG_DATASET - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'C301_ESTRUTURA_CAMPO_SEG','C301_ESTRUTURA_CAMPO_SEG',
'where a.dt_atualizacao > (select b.dt_atualizacao from C301_ESTRUTURA_CAMPO_SEG b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
Tasy_Copiar_tabela(nm_owner_origem_p,'C301_ESTRUTURA_CAMPO_SEG','N','S','where not exists (select 1
from C301_ESTRUTURA_CAMPO_SEG b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela C301_ESTRUTURA_CAMPO_SEG - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'PATIENT_BAR_PAIS','PATIENT_BAR_PAIS','where a.dt_atualizacao > (select b.dt_atualizacao from PATIENT_BAR_PAIS b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
Tasy_Copiar_tabela(nm_owner_origem_p,'PATIENT_BAR_PAIS','N','S','where not exists (select 1 from PATIENT_BAR_PAIS b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''de_DE'') = ''S'' ');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela PATIENT_BAR_PAIS - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'PRONTUARIO_ITEM_LOCALE','PRONTUARIO_ITEM_LOCALE','where a.dt_atualizacao > (select b.dt_atualizacao from PRONTUARIO_ITEM_LOCALE b where a.nr_sequencia = b.nr_sequencia) ');
Tasy_Copiar_tabela(nm_owner_origem_p,'PRONTUARIO_ITEM_LOCALE','N','S','where not exists (select 1 from PRONTUARIO_ITEM_LOCALE b where a.nr_sequencia = b.nr_sequencia) ');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela PRONTUARIO_ITEM_LOCALE - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'PATIENT_DELETION_TABLE','PATIENT_DELETION_TABLE','where a.dt_atualizacao > (select b.dt_atualizacao from PATIENT_DELETION_TABLE b where a.nr_Sequencia = b.nr_Sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'PATIENT_DELETION_TABLE','N','S','where not exists (select b.dt_atualizacao from PATIENT_DELETION_TABLE b where a.nr_Sequencia = b.nr_sequencia)');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela PATIENT_DELETION_TABLE - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'PATIENT_DELETION_ATTRIBUTE','PATIENT_DELETION_ATTRIBUTE','where a.dt_atualizacao > (select b.dt_atualizacao from PATIENT_DELETION_ATTRIBUTE b where a.nr_Sequencia = b.nr_Sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'PATIENT_DELETION_ATTRIBUTE','N','S','where not exists (select b.dt_atualizacao from PATIENT_DELETION_ATTRIBUTE b where a.nr_Sequencia = b.nr_sequencia)');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela PATIENT_DELETION_ATTRIBUTE - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'PATIENT_DELETION_TRIGGER','PATIENT_DELETION_TRIGGER','where a.dt_atualizacao > (select b.dt_atualizacao from PATIENT_DELETION_TRIGGER b where a.nr_Sequencia = b.nr_Sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'PATIENT_DELETION_TRIGGER','N','S','where not exists (select b.dt_atualizacao from PATIENT_DELETION_TRIGGER b where a.nr_Sequencia = b.nr_sequencia)');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela PATIENT_DELETION_TRIGGER - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;
/*
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'ANVISA_FORMA_LOCALIZADA','ANVISA_FORMA_LOCALIZADA','where a.dt_atualizacao > (select b.dt_atualizacao from ANVISA_FORMA_LOCALIZADA b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'ANVISA_FORMA_LOCALIZADA','N','S','where not exists (select 1 from ANVISA_FORMA_LOCALIZADA b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''es_MX'') = ''S'' ');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (log_atualizacao_erro_seq.nextval, 'Erro na proc Tasy_Atualizar_Base na tabela PATIENT_DELETION_TRIGGER - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, SYSDATE, 'Tasy_Versao' );
	commit;
end;
*/
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'ALTERACAO_TASY_LOC','ALTERACAO_TASY_LOC','where a.dt_atualizacao > (select b.dt_atualizacao from ALTERACAO_TASY_LOC b where a.nr_Sequencia = b.nr_Sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'ALTERACAO_TASY_LOC','N','S','where not exists (select b.dt_atualizacao from ALTERACAO_TASY_LOC b where a.nr_Sequencia = b.nr_sequencia)');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela ALTERACAO_TASY_LOC - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'CONFIG_IMP_SUMARIO','CONFIG_IMP_SUMARIO','where a.dt_atualizacao > (select b.dt_atualizacao from CONFIG_IMP_SUMARIO b where a.nr_Sequencia = b.nr_Sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'CONFIG_IMP_SUMARIO','N','S','where not exists (select b.dt_atualizacao from CONFIG_IMP_SUMARIO b where a.nr_Sequencia = b.nr_sequencia)');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela CONFIG_IMP_SUMARIO - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'FIS_EFD_ICMSIPI_REGISTROS','FIS_EFD_ICMSIPI_REGISTROS','where a.dt_atualizacao > (select b.dt_atualizacao from FIS_EFD_ICMSIPI_REGISTROS b where a.nr_Sequencia = b.nr_Sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'FIS_EFD_ICMSIPI_REGISTROS','N','S','where not exists (select b.dt_atualizacao from FIS_EFD_ICMSIPI_REGISTROS b where a.nr_Sequencia = b.nr_sequencia)');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela FIS_EFD_ICMSIPI_REGISTROS - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'INTPD_CONFIG_EVENTO_TAB','INTPD_CONFIG_EVENTO_TAB','where a.dt_atualizacao > (select b.dt_atualizacao from INTPD_CONFIG_EVENTO_TAB b where a.nr_Sequencia = b.nr_Sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'INTPD_CONFIG_EVENTO_TAB','N','S','where not exists (select b.dt_atualizacao from INTPD_CONFIG_EVENTO_TAB b where a.nr_Sequencia = b.nr_sequencia)');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela INTPD_CONFIG_EVENTO_TAB - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'TAB_PAIS','TAB_PAIS','where a.dt_atualizacao > (select b.dt_atualizacao from TAB_PAIS b where a.nr_Sequencia = b.nr_Sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'TAB_PAIS','N','S','where not exists (select b.dt_atualizacao from TAB_PAIS b where a.nr_Sequencia = b.nr_sequencia)');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela TAB_PAIS - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;
begin
	Tasy_Atualizar_Tabela(nm_owner_origem_p,'WSUITE_GRUPO_RELATORIO','WSUITE_GRUPO_RELATORIO',' where a.dt_atualizacao > (select b.dt_atualizacao from WSUITE_GRUPO_RELATORIO b where a.nr_sequencia = b.nr_sequencia)');
	Tasy_Copiar_tabela(nm_owner_origem_p,'WSUITE_GRUPO_RELATORIO','N','S',' where not exists (select 1 from WSUITE_GRUPO_RELATORIO b where a.nr_sequencia = b.nr_sequencia)');
exception
	when others then
		ds_erro_w := substr(SQLERRM,1,2000);
		insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela WSUITE_GRUPO_RELATORIO - Tasy_Copiar_Tabela',ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
		commit;
end;
/*begin
tasy_Atualizar_Tabela(nm_owner_origem_p,'EVENTOS_ADVERSOS_GRADE','EVENTOS_ADVERSOS_GRADE',' where a.dt_atualizacao > (select b.dt_atualizacao from EVENTOS_ADVERSOS_GRADE b where  a.cd_grade = b.cd_grade)');
tasy_copiar_tabela(nm_owner_origem_p,'EVENTOS_ADVERSOS_GRADE','N','S','where not exists(select 1 from EVENTOS_ADVERSOS_GRADE b where  a.cd_grade = b.cd_grade)');
exception
	when others then
		ds_erro_w := substr(SQLERRM,1,2000);
		insert into log_atualizacao_erro values (log_atualizacao_erro_seq.nextval, 'Erro na proc Tasy_Atualizar_Base na tabela EVENTOS_ADVERSOS_GRADE - Tasy_Copiar_Tabela',ds_erro_w,Nr_seq_log_w, SYSDATE, 'Tasy_Versao' );
		commit;
end;
*/
begin
tasy_Atualizar_Tabela(nm_owner_origem_p,'ESCALA_DOR_DOCUMENTACAO','ESCALA_DOR_DOCUMENTACAO',' where a.dt_atualizacao > (select b.dt_atualizacao from ESCALA_DOR_DOCUMENTACAO b where  a.nr_sequencia = b.nr_sequencia)');
tasy_copiar_tabela(nm_owner_origem_p,'ESCALA_DOR_DOCUMENTACAO','N','S','where not exists(select 1 from ESCALA_DOR_DOCUMENTACAO b where  a.nr_sequencia = b.nr_sequencia)');
exception
	when others then
		ds_erro_w := substr(SQLERRM,1,2000);
		insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela ESCALA_DOR_DOCUMENTACAO - Tasy_Copiar_Tabela',ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
		commit;
end;
begin
tasy_Atualizar_Tabela(nm_owner_origem_p,'ESCALA_DOR_DOCUMENTACAO','ESCALA_DOR_DOCUMENTACAO',' where a.dt_atualizacao > (select b.dt_atualizacao from ESCALA_DOR_DOCUMENTACAO b where  a.nr_sequencia = b.nr_sequencia)');
tasy_copiar_tabela(nm_owner_origem_p,'ESCALA_DOR_DOCUMENTACAO','N','S','where not exists(select 1 from ESCALA_DOR_DOCUMENTACAO b where  a.nr_sequencia = b.nr_sequencia)');
exception
	when others then
		ds_erro_w := substr(SQLERRM,1,2000);
		insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela ESCALA_DOR_DOCUMENTACAO - Tasy_Copiar_Tabela',ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
		commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'SYSTEM_OID','SYSTEM_OID', 'where a.dt_atualizacao > (select b.dt_atualizacao from SYSTEM_OID b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'SYSTEM_OID','N','S','where not exists (select 1 from SYSTEM_OID b where a.nr_sequencia = b.nr_sequencia)');
exception
	when others then
		ds_erro_w := substr(SQLERRM,1,2000);
		insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela SYSTEM_OID - Tasy_Copiar_Tabela',ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
		commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'GER_TIPO_CARGA','GER_TIPO_CARGA','where a.dt_atualizacao > (select b.dt_atualizacao from GER_TIPO_CARGA b where a.nr_sequencia = b.nr_sequencia) ');
Tasy_Copiar_tabela(nm_owner_origem_p,'GER_TIPO_CARGA','S','S','where not exists (select 1 from GER_TIPO_CARGA b where a.nr_sequencia = b.nr_sequencia) ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela GER_TIPO_CARGA - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'GER_TIPO_CARGA_ARQ','GER_TIPO_CARGA_ARQ','where a.dt_atualizacao > (select b.dt_atualizacao from GER_TIPO_CARGA_ARQ b where a.nr_sequencia = b.nr_sequencia) ');
Tasy_Copiar_tabela(nm_owner_origem_p,'GER_TIPO_CARGA_ARQ','S','S','where not exists (select 1 from GER_TIPO_CARGA_ARQ b where a.nr_sequencia = b.nr_sequencia) ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela GER_TIPO_CARGA_ARQ - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'GER_TIPO_CARGA_CAMPO','GER_TIPO_CARGA_CAMPO','where a.dt_atualizacao > (select b.dt_atualizacao from GER_TIPO_CARGA_CAMPO b where a.nr_sequencia = b.nr_sequencia) ');
Tasy_Copiar_tabela(nm_owner_origem_p,'GER_TIPO_CARGA_CAMPO','S','S','where not exists (select 1 from GER_TIPO_CARGA_CAMPO b where a.nr_sequencia = b.nr_sequencia) ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela GER_TIPO_CARGA_CAMPO - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'QHAPDC_DATASET_STRUCTURE','QHAPDC_DATASET_STRUCTURE',
'where a.dt_atualizacao > (select b.dt_atualizacao from QHAPDC_DATASET_STRUCTURE b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''en_AU'') = ''S'' ');
Tasy_Copiar_tabela(nm_owner_origem_p,'QHAPDC_DATASET_STRUCTURE','N','S','where not exists (select 1
from QHAPDC_DATASET_STRUCTURE b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''en_AU'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela QHAPDC_DATASET_STRUCTURE - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'QHAPDC_FIELD_MAPPING','QHAPDC_FIELD_MAPPING',
'where a.dt_atualizacao > (select b.dt_atualizacao from QHAPDC_FIELD_MAPPING b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''en_AU'') = ''S'' ');
Tasy_Copiar_tabela(nm_owner_origem_p,'QHAPDC_FIELD_MAPPING','N','S','where not exists (select 1
from QHAPDC_FIELD_MAPPING b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''en_AU'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela QHAPDC_FIELD_MAPPING - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'QHAPDC_SEGMENT_STRUCT','QHAPDC_SEGMENT_STRUCT',
'where a.dt_atualizacao > (select b.dt_atualizacao from QHAPDC_SEGMENT_STRUCT b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''en_AU'') = ''S'' ');
Tasy_Copiar_tabela(nm_owner_origem_p,'QHAPDC_SEGMENT_STRUCT','N','S','where not exists (select 1
from QHAPDC_SEGMENT_STRUCT b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''en_AU'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela QHAPDC_SEGMENT_STRUCT - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'QHAPDC_BAND_TYPE','QHAPDC_BAND_TYPE',
'where a.dt_atualizacao > (select b.dt_atualizacao from QHAPDC_BAND_TYPE b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''en_AU'') = ''S'' ');
Tasy_Copiar_tabela(nm_owner_origem_p,'QHAPDC_BAND_TYPE','N','S','where not exists (select 1
from QHAPDC_BAND_TYPE b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''en_AU'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela QHAPDC_BAND_TYPE - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'QHAPDC_CARE_TYPE','QHAPDC_CARE_TYPE',
'where a.dt_atualizacao > (select b.dt_atualizacao from QHAPDC_CARE_TYPE b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''en_AU'') = ''S'' ');
Tasy_Copiar_tabela(nm_owner_origem_p,'QHAPDC_CARE_TYPE','N','S','where not exists (select 1
from QHAPDC_CARE_TYPE b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''en_AU'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela QHAPDC_CARE_TYPE - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'QHAPDC_CHARGABLE_STATUS','QHAPDC_CHARGABLE_STATUS',
'where a.dt_atualizacao > (select b.dt_atualizacao from QHAPDC_CHARGABLE_STATUS b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''en_AU'') = ''S'' ');
Tasy_Copiar_tabela(nm_owner_origem_p,'QHAPDC_CHARGABLE_STATUS','N','S','where not exists (select 1
from QHAPDC_CHARGABLE_STATUS b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''en_AU'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela QHAPDC_CHARGABLE_STATUS - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'QHAPDC_COMPENSABLE_STATUS','QHAPDC_COMPENSABLE_STATUS',
'where a.dt_atualizacao > (select b.dt_atualizacao from QHAPDC_COMPENSABLE_STATUS b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''en_AU'') = ''S'' ');
Tasy_Copiar_tabela(nm_owner_origem_p,'QHAPDC_COMPENSABLE_STATUS','N','S','where not exists (select 1
from QHAPDC_COMPENSABLE_STATUS b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''en_AU'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela QHAPDC_COMPENSABLE_STATUS - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'QHAPDC_EMPLOYMENT_STATUS','QHAPDC_EMPLOYMENT_STATUS',
'where a.dt_atualizacao > (select b.dt_atualizacao from QHAPDC_EMPLOYMENT_STATUS b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''en_AU'') = ''S'' ');
Tasy_Copiar_tabela(nm_owner_origem_p,'QHAPDC_EMPLOYMENT_STATUS','N','S','where not exists (select 1
from QHAPDC_EMPLOYMENT_STATUS b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''en_AU'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela QHAPDC_EMPLOYMENT_STATUS - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'QHAPDC_FUNDING_SOURCE','QHAPDC_FUNDING_SOURCE',
'where a.dt_atualizacao > (select b.dt_atualizacao from QHAPDC_FUNDING_SOURCE b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''en_AU'') = ''S'' ');
Tasy_Copiar_tabela(nm_owner_origem_p,'QHAPDC_FUNDING_SOURCE','N','S','where not exists (select 1
from QHAPDC_FUNDING_SOURCE b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''en_AU'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela QHAPDC_FUNDING_SOURCE - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'QHAPDC_PRIN_REF_SERVICE','QHAPDC_PRIN_REF_SERVICE',
'where a.dt_atualizacao > (select b.dt_atualizacao from QHAPDC_PRIN_REF_SERVICE b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''en_AU'') = ''S'' ');
Tasy_Copiar_tabela(nm_owner_origem_p,'QHAPDC_PRIN_REF_SERVICE','N','S','where not exists (select 1
from QHAPDC_PRIN_REF_SERVICE b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''en_AU'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela QHAPDC_PRIN_REF_SERVICE - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'QHAPDC_SEPARATION_MODE','QHAPDC_SEPARATION_MODE',
'where a.dt_atualizacao > (select b.dt_atualizacao from QHAPDC_SEPARATION_MODE b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''en_AU'') = ''S'' ');
Tasy_Copiar_tabela(nm_owner_origem_p,'QHAPDC_SEPARATION_MODE','N','S','where not exists (select 1
from QHAPDC_SEPARATION_MODE b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''en_AU'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela QHAPDC_SEPARATION_MODE - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'HCP_DATASET_STRUCT','HCP_DATASET_STRUCT',
'where a.dt_atualizacao > (select b.dt_atualizacao from HCP_DATASET_STRUCT b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''en_AU'') = ''S'' ');
Tasy_Copiar_tabela(nm_owner_origem_p,'HCP_DATASET_STRUCT','N','S','where not exists (select 1
from HCP_DATASET_STRUCT b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''en_AU'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela HCP_DATASET_STRUCT - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'HCP_SEGMENT_STRUCT','HCP_SEGMENT_STRUCT',
'where a.dt_atualizacao > (select b.dt_atualizacao from HCP_SEGMENT_STRUCT b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''en_AU'') = ''S'' ');
Tasy_Copiar_tabela(nm_owner_origem_p,'HCP_SEGMENT_STRUCT','N','S','where not exists (select 1
from HCP_SEGMENT_STRUCT b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''en_AU'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela HCP_SEGMENT_STRUCT - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'HCP_FIELD_MAPPING','HCP_FIELD_MAPPING',
'where a.dt_atualizacao > (select b.dt_atualizacao from HCP_FIELD_MAPPING b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''en_AU'') = ''S'' ');
Tasy_Copiar_tabela(nm_owner_origem_p,'HCP_FIELD_MAPPING','N','S','where not exists (select 1
from HCP_FIELD_MAPPING b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''en_AU'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela HCP_FIELD_MAPPING - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'HCP_SEPARATION_MODE','HCP_SEPARATION_MODE',
'where a.dt_atualizacao > (select b.dt_atualizacao from HCP_SEPARATION_MODE b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''en_AU'') = ''S'' ');
Tasy_Copiar_tabela(nm_owner_origem_p,'HCP_SEPARATION_MODE','N','S','where not exists (select 1
from HCP_SEPARATION_MODE b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''en_AU'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela HCP_SEPARATION_MODE - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'HCP_REF_SOURCE','HCP_REF_SOURCE',
'where a.dt_atualizacao > (select b.dt_atualizacao from HCP_REF_SOURCE b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''en_AU'') = ''S'' ');
Tasy_Copiar_tabela(nm_owner_origem_p,'HCP_REF_SOURCE','N','S','where not exists (select 1
from HCP_REF_SOURCE b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''en_AU'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela HCP_REF_SOURCE - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'HCP_DISCHARGE_INTENTION','HCP_DISCHARGE_INTENTION',
'where a.dt_atualizacao > (select b.dt_atualizacao from HCP_DISCHARGE_INTENTION b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''en_AU'') = ''S'' ');
Tasy_Copiar_tabela(nm_owner_origem_p,'HCP_DISCHARGE_INTENTION','N','S','where not exists (select 1
from HCP_DISCHARGE_INTENTION b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''en_AU'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela HCP_DISCHARGE_INTENTION - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'HCP_CARE_TYPE','HCP_CARE_TYPE',
'where a.dt_atualizacao > (select b.dt_atualizacao from HCP_CARE_TYPE b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''en_AU'') = ''S'' ');
Tasy_Copiar_tabela(nm_owner_origem_p,'HCP_CARE_TYPE','N','S','where not exists (select 1
from HCP_CARE_TYPE b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''en_AU'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela HCP_CARE_TYPE - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'QHAPDC_DVA_CARD_TYPE','QHAPDC_DVA_CARD_TYPE',
'where a.dt_atualizacao > (select b.dt_atualizacao from QHAPDC_DVA_CARD_TYPE b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''en_AU'') = ''S'' ');
Tasy_Copiar_tabela(nm_owner_origem_p,'QHAPDC_DVA_CARD_TYPE','N','S','where not exists (select 1
from QHAPDC_DVA_CARD_TYPE b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''en_AU'') = ''S'' ');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela QHAPDC_DVA_CARD_TYPE - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_atualizar_tabela(nm_owner_origem_p,'PLS_AUTOMATIZACAO_PROCESSO','PLS_AUTOMATIZACAO_PROCESSO',
'WHERE	a.dt_atualizacao > (select b.dt_atualizacao from PLS_AUTOMATIZACAO_PROCESSO b where a.CD_PROCESSO = b.CD_PROCESSO)');
Tasy_Copiar_tabela(nm_owner_origem_p,'PLS_AUTOMATIZACAO_PROCESSO','N','S','where not exists (select 1 
from PLS_AUTOMATIZACAO_PROCESSO b where a.CD_PROCESSO = b.CD_PROCESSO)');
exception
when others then
ds_erro_w := substr(SQLERRM,1,2000);
insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela PLS_AUTOMATIZACAO_PROCESSO - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'PROJETO_INTERFACE', 'PROJETO_INTERFACE', 'where a.dt_atualizacao > (select b.dt_atualizacao from PROJETO_INTERFACE b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'PROJETO_INTERFACE', 'S', 'S', 'where not exists (select b.dt_atualizacao from PROJETO_INTERFACE b where a.nr_sequencia = b.nr_sequencia)');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela PROJETO_INTERFACE', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'INTERF_MENSAGEM', 'INTERF_MENSAGEM', 'where a.dt_atualizacao > (select b.dt_atualizacao from INTERF_MENSAGEM b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'INTERF_MENSAGEM', 'S', 'S', 'where not exists (select b.dt_atualizacao from INTERF_MENSAGEM b where a.nr_sequencia = b.nr_sequencia)');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela INTERF_MENSAGEM', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'INTERF_TAB_DOMINIO', 'INTERF_TAB_DOMINIO', 'where a.dt_atualizacao > (select b.dt_atualizacao from INTERF_TAB_DOMINIO b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'INTERF_TAB_DOMINIO', 'S', 'S', 'where not exists (select b.dt_atualizacao from INTERF_TAB_DOMINIO b where a.nr_sequencia = b.nr_sequencia)');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela INTERF_TAB_DOMINIO', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'INTERF_DOMINIO_VALOR', 'INTERF_DOMINIO_VALOR', 'where a.dt_atualizacao > (select b.dt_atualizacao from INTERF_DOMINIO_VALOR b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'INTERF_DOMINIO_VALOR', 'S', 'S', 'where not exists (select b.dt_atualizacao from INTERF_DOMINIO_VALOR b where a.nr_sequencia = b.nr_sequencia)');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela INTERF_DOMINIO_VALOR', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'INTERF_BANDA', 'INTERF_BANDA', 'where a.dt_atualizacao > (select b.dt_atualizacao from INTERF_BANDA b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'INTERF_BANDA', 'S', 'S', 'where not exists (select b.dt_atualizacao from INTERF_BANDA b where a.nr_sequencia = b.nr_sequencia)');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela INTERF_BANDA', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'INTERF_CAMPO', 'INTERF_CAMPO', 'where a.dt_atualizacao > (select b.dt_atualizacao from INTERF_CAMPO b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'INTERF_CAMPO', 'S', 'S', 'where not exists (select b.dt_atualizacao from INTERF_CAMPO b where a.nr_sequencia = b.nr_sequencia)');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela INTERF_CAMPO', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'INTERF_CAMPO_ORIGEM', 'INTERF_CAMPO_ORIGEM', 'where a.dt_atualizacao > (select b.dt_atualizacao from INTERF_CAMPO_ORIGEM b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'INTERF_CAMPO_ORIGEM', 'S', 'S', 'where not exists (select b.dt_atualizacao from INTERF_CAMPO_ORIGEM b where a.nr_sequencia = b.nr_sequencia)');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela INTERF_CAMPO_ORIGEM', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'PEPA_ACAO', 'PEPA_ACAO', 'where a.dt_atualizacao > (select b.dt_atualizacao from PEPA_ACAO b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'PEPA_ACAO', 'S', 'S', 'where not exists (select b.dt_atualizacao from PEPA_ACAO b where a.nr_sequencia = b.nr_sequencia)');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela PEPA_ACAO', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'PEPA_ITEM_ACAO', 'PEPA_ITEM_ACAO', 'where a.dt_atualizacao > (select b.dt_atualizacao from PEPA_ITEM_ACAO b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'PEPA_ITEM_ACAO', 'S', 'S', 'where not exists (select b.dt_atualizacao from PEPA_ITEM_ACAO b where a.nr_sequencia = b.nr_sequencia)');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela PEPA_ITEM_ACAO', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'HCP_DEPART_TYPE','HCP_DEPART_TYPE',
'where a.dt_atualizacao > (select b.dt_atualizacao from HCP_DEPART_TYPE b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''en_AU'') = ''S'' ');
Tasy_Copiar_tabela(nm_owner_origem_p,'HCP_DEPART_TYPE','N','S','where not exists (select 1
from HCP_DEPART_TYPE b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''en_AU'') = ''S'' ');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela HCP_DEPART_TYPE - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'QHAPDC_COUNTRY_CODE','QHAPDC_COUNTRY_CODE',
'where a.dt_atualizacao > (select b.dt_atualizacao from QHAPDC_COUNTRY_CODE b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''en_AU'') = ''S'' ');
Tasy_Copiar_tabela(nm_owner_origem_p,'QHAPDC_COUNTRY_CODE','N','S','where not exists (select 1
from QHAPDC_COUNTRY_CODE b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''en_AU'') = ''S'' ');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela QHAPDC_COUNTRY_CODE - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'QHAPDC_ELECTIVE_STATUS','QHAPDC_ELECTIVE_STATUS',
'where a.dt_atualizacao > (select b.dt_atualizacao from QHAPDC_ELECTIVE_STATUS b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''en_AU'') = ''S'' ');
Tasy_Copiar_tabela(nm_owner_origem_p,'QHAPDC_ELECTIVE_STATUS','N','S','where not exists (select 1
from QHAPDC_ELECTIVE_STATUS b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''en_AU'') = ''S'' ');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela QHAPDC_ELECTIVE_STATUS - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'QHAPDC_FURTHER_CARE','QHAPDC_FURTHER_CARE',
'where a.dt_atualizacao > (select b.dt_atualizacao from QHAPDC_FURTHER_CARE b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''en_AU'') = ''S'' ');
Tasy_Copiar_tabela(nm_owner_origem_p,'QHAPDC_FURTHER_CARE','N','S','where not exists (select 1
from QHAPDC_FURTHER_CARE b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''en_AU'') = ''S'' ');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela QHAPDC_FURTHER_CARE - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'QHAPDC_MARITAL_STATUS','QHAPDC_MARITAL_STATUS',
'where a.dt_atualizacao > (select b.dt_atualizacao from QHAPDC_MARITAL_STATUS b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''en_AU'') = ''S'' ');
Tasy_Copiar_tabela(nm_owner_origem_p,'QHAPDC_MARITAL_STATUS','N','S','where not exists (select 1
from QHAPDC_MARITAL_STATUS b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''en_AU'') = ''S'' ');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela QHAPDC_MARITAL_STATUS - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'QHAPDC_SOURCE_OF_REFERRAL','QHAPDC_SOURCE_OF_REFERRAL',
'where a.dt_atualizacao > (select b.dt_atualizacao from QHAPDC_SOURCE_OF_REFERRAL b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''en_AU'') = ''S'' ');
Tasy_Copiar_tabela(nm_owner_origem_p,'QHAPDC_SOURCE_OF_REFERRAL','N','S','where not exists (select 1
from QHAPDC_SOURCE_OF_REFERRAL b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''en_AU'') = ''S'' ');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela QHAPDC_SOURCE_OF_REFERRAL - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'QHAPDC_STANDARD_UNIT_CODE','QHAPDC_STANDARD_UNIT_CODE',
'where a.dt_atualizacao > (select b.dt_atualizacao from QHAPDC_STANDARD_UNIT_CODE b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''en_AU'') = ''S'' ');
Tasy_Copiar_tabela(nm_owner_origem_p,'QHAPDC_STANDARD_UNIT_CODE','N','S','where not exists (select 1
from QHAPDC_STANDARD_UNIT_CODE b where a.nr_sequencia = b.nr_sequencia) and IS_COPY_BASE_LOCALE(''en_AU'') = ''S'' ');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela QHAPDC_STANDARD_UNIT_CODE - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;
begin
Tasy_Copiar_Tabela(nm_owner_origem_p, 'PLS_MOV_BENEF_REGRA_INCONS', 'N', 'S', 'where not exists (select 1 from PLS_MOV_BENEF_REGRA_INCONS b where a.nr_sequencia = b.nr_sequencia)');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela QHAPDC_STANDARD_UNIT_CODE - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'ANZICS_VERSION','ANZICS_VERSION', 'where a.dt_atualizacao > (select b.dt_atualizacao from ANZICS_VERSION b where a.nr_sequencia = b.nr_sequencia) ');
Tasy_Copiar_tabela(nm_owner_origem_p,'ANZICS_VERSION','N','S','where not exists (select 1 from ANZICS_VERSION b where a.nr_sequencia = b.nr_sequencia) ');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela ANZICS_VERSION - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'ANZICS_GROUP','ANZICS_GROUP', 'where a.dt_atualizacao > (select b.dt_atualizacao from ANZICS_GROUP b where a.nr_sequencia = b.nr_sequencia) ');
Tasy_Copiar_tabela(nm_owner_origem_p,'ANZICS_GROUP','N','S','where not exists (select 1 from ANZICS_GROUP b where a.nr_sequencia = b.nr_sequencia) ');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela ANZICS_GROUP - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'ANZICS_ITEM','ANZICS_ITEM', 'where a.dt_atualizacao > (select b.dt_atualizacao from ANZICS_ITEM b where a.nr_sequencia = b.nr_sequencia) ');
Tasy_Copiar_tabela(nm_owner_origem_p,'ANZICS_ITEM','N','S','where not exists (select 1 from ANZICS_ITEM b where a.nr_sequencia = b.nr_sequencia) ');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela ANZICS_ITEM - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;
begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'ANZICS_ITEM_RESULT','ANZICS_ITEM_RESULT', 'where a.dt_atualizacao > (select b.dt_atualizacao from ANZICS_ITEM_RESULT b where a.nr_sequencia = b.nr_sequencia) ');
Tasy_Copiar_tabela(nm_owner_origem_p,'ANZICS_ITEM_RESULT','N','S','where not exists (select 1 from ANZICS_ITEM_RESULT b where a.nr_sequencia = b.nr_sequencia) ');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela ANZICS_ITEM_RESULT - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;

begin
Tasy_Atualizar_Tabela(nm_owner_origem_p,'ESCALA_DOR_DOC_LOCALE','ESCALA_DOR_DOC_LOCALE',
	' where a.dt_atualizacao > (select b.dt_atualizacao from ESCALA_DOR_DOC_LOCALE b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'ESCALA_DOR_DOC_LOCALE','N','S',' where not exists ( select 1 from ESCALA_DOR_DOC_LOCALE b '||
	' where a.nr_sequencia = b.nr_sequencia)');
	exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela ESCALA_DOR_DOC_LOCALE - Tasy_Copiar_Tabela', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;

begin
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'PEPO_ITEM_LOCALE', 'PEPO_ITEM_LOCALE', 'where a.dt_atualizacao > (select b.dt_atualizacao from PEPO_ITEM_LOCALE b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'PEPO_ITEM_LOCALE', 'N', 'S', 'where not exists (select 1 from PEPO_ITEM_LOCALE b where a.nr_sequencia = b.nr_sequencia)');
exception
	when others then
		ds_erro_w := substr(SQLERRM,1,2000);
		insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela PEPO_ITEM_LOCALE - Tasy_Copiar_Tabela',ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
		commit;
end;

begin
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'ECLIPSE_ATTRIBUTE', 'ECLIPSE_ATTRIBUTE', 'where a.dt_atualizacao > (select b.dt_atualizacao from ECLIPSE_ATTRIBUTE b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'ECLIPSE_ATTRIBUTE', 'S', 'S', 'where not exists (select b.dt_atualizacao from ECLIPSE_ATTRIBUTE b where a.nr_sequencia = b.nr_sequencia)');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela ECLIPSE_ATTRIBUTE', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;

begin
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'ECLIPSE_VALUE', 'ECLIPSE_VALUE', 'where a.dt_atualizacao > (select b.dt_atualizacao from ECLIPSE_VALUE b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'ECLIPSE_VALUE', 'S', 'S', 'where not exists (select b.dt_atualizacao from ECLIPSE_VALUE b where a.nr_sequencia = b.nr_sequencia)');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela ECLIPSE_VALUE', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;

begin
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'PFCS_INDICATOR', 'PFCS_INDICATOR', 'where a.dt_atualizacao > (select b.dt_atualizacao from PFCS_INDICATOR b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'PFCS_INDICATOR', 'S', 'S', 'where not exists (select b.dt_atualizacao from PFCS_INDICATOR b where a.nr_sequencia = b.nr_sequencia)');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela PFCS_INDICATOR', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;

begin
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'PFCS_INDICATOR_TARGET_DEF', 'PFCS_INDICATOR_TARGET_DEF', 'where a.dt_atualizacao > (select b.dt_atualizacao from PFCS_INDICATOR_TARGET_DEF b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'PFCS_INDICATOR_TARGET_DEF', 'S', 'S', 'where not exists (select b.dt_atualizacao from PFCS_INDICATOR_TARGET_DEF b where a.nr_sequencia = b.nr_sequencia)');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela PFCS_INDICATOR_TARGET_DEF', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;

begin
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'ECLIPSE_INCONSISTENCY', 'ECLIPSE_INCONSISTENCY', 'where a.dt_atualizacao > (select b.dt_atualizacao from ECLIPSE_INCONSISTENCY b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'ECLIPSE_INCONSISTENCY', 'S', 'S', 'where not exists (select b.dt_atualizacao from ECLIPSE_INCONSISTENCY b where a.nr_sequencia = b.nr_sequencia)');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela ECLIPSE_INCONSISTENCY', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;

begin
Tasy_Copiar_tabela(nm_owner_origem_p,'PLS_SOLIC_PROP_VALIDACAO','N','N','where not exists (select 1 from PLS_SOLIC_PROP_VALIDACAO b where a.nr_sequencia = b.nr_sequencia)');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela PLS_SOLIC_PROP_VALIDACAO', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;

begin

Tasy_Atualizar_Tabela(nm_owner_origem_p, 'SECURITY_LEVEL_RULE', 'SECURITY_LEVEL_RULE', 'where a.dt_atualizacao > (select b.dt_atualizacao from SECURITY_LEVEL_RULE b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'SECURITY_LEVEL_RULE', 'S', 'S', 'where not exists (select b.dt_atualizacao from SECURITY_LEVEL_RULE b where a.nr_sequencia = b.nr_sequencia)');

exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela SECURITY_LEVEL_RULE', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;

end;

begin

Tasy_Atualizar_Tabela(nm_owner_origem_p, 'SYSTEM_TIMEZONE', 'SYSTEM_TIMEZONE', 'where a.dt_atualizacao > (select b.dt_atualizacao from SYSTEM_TIMEZONE b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'SYSTEM_TIMEZONE', 'S', 'S', 'where not exists (select b.dt_atualizacao from SYSTEM_TIMEZONE b where a.nr_sequencia = b.nr_sequencia)');

exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela SYSTEM_TIMEZONE', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;

end;


begin

Tasy_Copiar_tabela(nm_owner_origem_p,'PLS_REGRA_ATRIB_INC_BENEF','N','N','where not exists (select 1 from PLS_REGRA_ATRIB_INC_BENEF b where a.nr_sequencia = b.nr_sequencia)');

exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela PLS_REGRA_ATRIB_INC_BENEF', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;

end;


begin

Tasy_Copiar_tabela(nm_owner_origem_p,'HPC_EPISODE_START','N','N','where not exists (select 1 from HPC_EPISODE_START b where a.nr_sequencia = b.nr_sequencia)');

exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela HPC_EPISODE_START', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;

end;

begin

Tasy_Copiar_tabela(nm_owner_origem_p,'HPC_EPISODE_END','N','N','where not exists (select 1 from HPC_EPISODE_END b where a.nr_sequencia = b.nr_sequencia)');

exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela HPC_EPISODE_END', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;

end;

begin

Tasy_Atualizar_Tabela(nm_owner_origem_p, 'LINKED_DATA', 'LINKED_DATA', 'where a.dt_atualizacao > (select b.dt_atualizacao from LINKED_DATA b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'LINKED_DATA','N','S','where not exists (select 1 from LINKED_DATA b where a.nr_sequencia = b.nr_sequencia)');

exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela LINKED_DATA', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;

end;

begin

Tasy_Atualizar_Tabela(nm_owner_origem_p, 'LINKED_DATA_ATRIBUTO', 'LINKED_DATA_ATRIBUTO', 'where a.dt_atualizacao > (select b.dt_atualizacao from LINKED_DATA_ATRIBUTO b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'LINKED_DATA_ATRIBUTO','N','S','where not exists (select 1 from LINKED_DATA_ATRIBUTO b where a.nr_sequencia = b.nr_sequencia)');

exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela LINKED_DATA_ATRIBUTO', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;

end;

begin

Tasy_Atualizar_Tabela(nm_owner_origem_p, 'LINKED_DATA_LEGENDAS', 'LINKED_DATA_LEGENDAS', 'where a.dt_atualizacao > (select b.dt_atualizacao from LINKED_DATA_LEGENDAS b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'LINKED_DATA_LEGENDAS','N','S','where not exists (select 1 from LINKED_DATA_LEGENDAS b where a.nr_sequencia = b.nr_sequencia)');

exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela LINKED_DATA_LEGENDAS', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;

end;

begin

Tasy_Atualizar_Tabela(nm_owner_origem_p, 'LINKED_DATA_ATIVACAO', 'LINKED_DATA_ATIVACAO', 'where a.dt_atualizacao > (select b.dt_atualizacao from LINKED_DATA_ATIVACAO b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'LINKED_DATA_ATIVACAO','N','S','where not exists (select 1 from LINKED_DATA_ATIVACAO b where a.nr_sequencia = b.nr_sequencia)');

exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela LINKED_DATA_ATIVACAO', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;

end;

begin

Tasy_Copiar_tabela(nm_owner_origem_p,'DOCUMENTO_ATRIBUTO_REF','N','N','where not exists (select 1 from DOCUMENTO_ATRIBUTO_REF b where a.nr_sequencia = b.nr_sequencia)');

exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela DOCUMENTO_ATRIBUTO_REF', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;

end;

begin

Tasy_Atualizar_Tabela(nm_owner_origem_p, 'LINKED_DATA_ATRIB_COMP', 'LINKED_DATA_ATRIB_COMP', 'where a.dt_atualizacao > (select b.dt_atualizacao from LINKED_DATA_ATRIB_COMP b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'LINKED_DATA_ATRIB_COMP','N','S','where not exists (select 1 from LINKED_DATA_ATRIB_COMP b where a.nr_sequencia = b.nr_sequencia)');

exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela LINKED_DATA_ATRIB_COMP', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;

end;

begin

Tasy_Atualizar_Tabela(nm_owner_origem_p, 'LINKED_DATA_VINCULO', 'LINKED_DATA_VINCULO', 'where a.dt_atualizacao > (select b.dt_atualizacao from LINKED_DATA_VINCULO b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'LINKED_DATA_VINCULO','N','S','where not exists (select 1 from LINKED_DATA_VINCULO b where a.nr_sequencia = b.nr_sequencia)');

exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela LINKED_DATA_VINCULO', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;

end;

begin

Tasy_Copiar_tabela(nm_owner_origem_p,'W_APAP_LEGENDA','N','N','where not exists (select 1 from W_APAP_LEGENDA b where a.nr_sequencia = b.nr_sequencia)');

exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela W_APAP_LEGENDA', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;

end;


begin
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'FUNCAO_MACRO_PAIS', 'FUNCAO_MACRO_PAIS', 'where a.dt_atualizacao > (select b.dt_atualizacao from FUNCAO_MACRO_PAIS b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'FUNCAO_MACRO_PAIS', 'S', 'S', 'where not exists (select b.dt_atualizacao from FUNCAO_MACRO_PAIS b where a.nr_sequencia = b.nr_sequencia)');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela FUNCAO_MACRO_PAIS', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;


begin
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'SAN_GRUPO_SANG_BARCODE', 'SAN_GRUPO_SANG_BARCODE', 'where a.dt_atualizacao > (select b.dt_atualizacao from SAN_GRUPO_SANG_BARCODE b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'SAN_GRUPO_SANG_BARCODE', 'S', 'S', 'where not exists (select b.dt_atualizacao from SAN_GRUPO_SANG_BARCODE b where a.nr_sequencia = b.nr_sequencia)');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela SAN_GRUPO_SANG_BARCODE', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;


begin
Tasy_Atualizar_Tabela(nm_owner_origem_p, 'DAR_TABLES_FK', 'DAR_TABLES_FK', 'where a.dt_atualizacao > (select b.dt_atualizacao from DAR_TABLES_FK b where a.nr_sequencia = b.nr_sequencia)','N');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'DAR_TABLES_FK', 'N', 'S', 'where not exists (select b.dt_atualizacao from DAR_TABLES_FK b where a.nr_sequencia = b.nr_sequencia)');
exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela DAR_TABLES_FK', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;
end;


begin

Tasy_Atualizar_Tabela(nm_owner_origem_p, 'PFCS_INDICATOR_TARGET_DEF', 'PFCS_INDICATOR_TARGET_DEF', 'where a.dt_atualizacao > (select b.dt_atualizacao from PFCS_INDICATOR_TARGET_DEF b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'PFCS_INDICATOR_TARGET_DEF', 'S', 'S', 'where not exists (select b.dt_atualizacao from PFCS_INDICATOR_TARGET_DEF b where a.nr_sequencia = b.nr_sequencia)');

exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela PFCS_INDICATOR_TARGET_DEF', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;

end;


begin

Tasy_Atualizar_Tabela(nm_owner_origem_p, 'PFCS_SETTING', 'PFCS_SETTING', 'where a.dt_atualizacao > (select b.dt_atualizacao from PFCS_SETTING b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'PFCS_SETTING', 'S', 'S', 'where not exists (select b.dt_atualizacao from PFCS_SETTING b where a.nr_sequencia = b.nr_sequencia)');

exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela PFCS_SETTING', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;

end;

begin

Tasy_Atualizar_Tabela(nm_owner_origem_p, 'PFCS_SPECIAL_REQUEST_MAP', 'PFCS_SPECIAL_REQUEST_MAP', 'where a.dt_atualizacao > (select b.dt_atualizacao from PFCS_SPECIAL_REQUEST_MAP b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'PFCS_SPECIAL_REQUEST_MAP', 'S', 'S', 'where not exists (select b.dt_atualizacao from PFCS_SPECIAL_REQUEST_MAP b where a.nr_sequencia = b.nr_sequencia)');

exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela PFCS_SPECIAL_REQUEST_MAP', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;

end;

begin

Tasy_Atualizar_Tabela(nm_owner_origem_p, 'PFCS_CONTRIBUTOR_METADATA', 'PFCS_CONTRIBUTOR_METADATA', 'where a.dt_atualizacao > (select b.dt_atualizacao from PFCS_CONTRIBUTOR_METADATA b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'PFCS_CONTRIBUTOR_METADATA', 'S', 'S', 'where not exists (select b.dt_atualizacao from PFCS_CONTRIBUTOR_METADATA b where a.nr_sequencia = b.nr_sequencia)');

exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela PFCS_CONTRIBUTOR_METADATA', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;

end;


begin

Tasy_Atualizar_Tabela(nm_owner_origem_p, 'PFCS_MODULE', 'PFCS_MODULE', 'where a.dt_atualizacao > (select b.dt_atualizacao from PFCS_MODULE b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'PFCS_MODULE', 'S', 'S', 'where not exists (select b.dt_atualizacao from PFCS_MODULE b where a.nr_sequencia = b.nr_sequencia)');

exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela PFCS_MODULE', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;

end;

begin

Tasy_Atualizar_Tabela(nm_owner_origem_p, 'LINKED_DATA_ACESSO_LOC', 'LINKED_DATA_ACESSO_LOC', 'where a.dt_atualizacao > (select b.dt_atualizacao from LINKED_DATA_ACESSO_LOC b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'LINKED_DATA_ACESSO_LOC','N','S','where not exists (select 1 from LINKED_DATA_ACESSO_LOC b where a.nr_sequencia = b.nr_sequencia)');

exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela LINKED_DATA_ACESSO_LOC', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;

end;

begin

Tasy_Atualizar_Tabela(nm_owner_origem_p, 'LINKED_DATA_HISTORICO', 'LINKED_DATA_HISTORICO', 'where a.dt_atualizacao > (select b.dt_atualizacao from LINKED_DATA_HISTORICO b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'LINKED_DATA_HISTORICO','N','S','where not exists (select 1 from LINKED_DATA_HISTORICO b where a.nr_sequencia = b.nr_sequencia)');

exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela LINKED_DATA_HISTORICO', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;

end;

begin

Tasy_atualizar_tabela(nm_owner_origem_p,'TIPO_ATENDIMENTO_TISS','TIPO_ATENDIMENTO_TISS', 'WHERE	a.dt_atualizacao > (select b.dt_atualizacao from TIPO_ATENDIMENTO_TISS b where a.nr_sequencia = b.nr_sequencia)');	
Tasy_Copiar_tabela(nm_owner_origem_p,'TIPO_ATENDIMENTO_TISS','N','S','where not exists (select 1 from TIPO_ATENDIMENTO_TISS b where a.nr_sequencia = b.nr_sequencia) ');	

exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela TIPO_ATENDIMENTO_TISS', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;

end;

begin

Tasy_Atualizar_Tabela(nm_owner_origem_p,'PLS_CAD_ATRIBUTOS_WEB','PLS_CAD_ATRIBUTOS_WEB',' where a.dt_atualizacao > (select b.dt_atualizacao from PLS_CAD_ATRIBUTOS_WEB b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_tabela(nm_owner_origem_p,'PLS_CAD_ATRIBUTOS_WEB','N','S',' where not exists (select 1 from PLS_CAD_ATRIBUTOS_WEB b where a.nr_sequencia = b.nr_sequencia)');

exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela PLS_CAD_ATRIBUTOS_WEB', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;

end;

begin

Tasy_Atualizar_Tabela(nm_owner_origem_p, 'PFCS_DYNAMIC_MODULE', 'PFCS_DYNAMIC_MODULE', 'where a.dt_atualizacao > (select b.dt_atualizacao from PFCS_DYNAMIC_MODULE b where a.nr_sequencia = b.nr_sequencia and a.ie_export = ''Y'')');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'PFCS_DYNAMIC_MODULE', 'S', 'S', 'where not exists (select b.dt_atualizacao from PFCS_DYNAMIC_MODULE b where a.nr_sequencia = b.nr_sequencia) and a.ie_export = ''Y''');

exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela PFCS_DYNAMIC_MODULE', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;

end;

begin

Tasy_Atualizar_Tabela(nm_owner_origem_p, 'PFCS_CARD', 'PFCS_CARD', 'where a.dt_atualizacao > (select b.dt_atualizacao from PFCS_CARD b, PFCS_DYNAMIC_MODULE c where a.nr_sequencia = b.nr_sequencia and a.nr_seq_dynamic_module = c.nr_sequencia and c.ie_export = ''Y'')');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'PFCS_CARD', 'S', 'S', 'where not exists (select b.dt_atualizacao from PFCS_CARD b where a.nr_sequencia = b.nr_sequencia) and exists(select ie_export from PFCS_DYNAMIC_MODULE c where c.nr_sequencia = a.nr_seq_dynamic_module and c.ie_export = ''Y'')');

exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela PFCS_CARD', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;

end;

begin

Tasy_Atualizar_Tabela(nm_owner_origem_p, 'PFCS_COMMUNICATION_MACROS', 'PFCS_COMMUNICATION_MACROS', 'where a.dt_atualizacao > (select b.dt_atualizacao from PFCS_COMMUNICATION_MACROS b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'PFCS_COMMUNICATION_MACROS', 'S', 'S', 'where not exists (select b.dt_atualizacao from PFCS_COMMUNICATION_MACROS b where a.nr_sequencia = b.nr_sequencia)');

exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela PFCS_COMMUNICATION_MACROS', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;

end;

begin

Tasy_Atualizar_Tabela(nm_owner_origem_p, 'COD_CON_REGISTRO', 'COD_CON_REGISTRO', 'where a.dt_atualizacao > (select b.dt_atualizacao from COD_CON_REGISTRO b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'COD_CON_REGISTRO', 'S', 'S', 'where not exists (select b.dt_atualizacao from COD_CON_REGISTRO b where a.nr_sequencia = b.nr_sequencia)');

exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela COD_CON_REGISTRO', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;

end;

begin

Tasy_Atualizar_Tabela(nm_owner_origem_p, 'EHR_TEMPLATE_PHILIPS', 'EHR_TEMPLATE_PHILIPS', 'where a.dt_atualizacao > (select b.dt_atualizacao from EHR_TEMPLATE_PHILIPS b where a.nr_sequencia = b.nr_sequencia)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'EHR_TEMPLATE_PHILIPS', 'S', 'S', 'where not exists (select b.dt_atualizacao from EHR_TEMPLATE_PHILIPS b where a.nr_sequencia = b.nr_sequencia)');

exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela EHR_TEMPLATE_PHILIPS', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;

end;


begin

Tasy_Atualizar_Tabela(nm_owner_origem_p, 'TABELA_SISTEMA_PAIS', 'TABELA_SISTEMA_PAIS', 'where a.dt_atualizacao > (select b.dt_atualizacao from TABELA_SISTEMA_PAIS b where a.nm_tabela = b.nm_tabela and a.ds_locale = a.ds_locale)');
Tasy_Copiar_Tabela(nm_owner_origem_p, 'TABELA_SISTEMA_PAIS', 'N', 'S', 'where not exists (select 1 from TABELA_SISTEMA_PAIS b where a.nm_tabela = b.nm_tabela and a.ds_locale = b.ds_locale)');

exception
when others then
	ds_erro_w := substr(SQLERRM,1,2000);
	insert into log_atualizacao_erro values (nextval('log_atualizacao_erro_seq'), 'Erro na proc Tasy_Atualizar_Base na tabela TABELA_SISTEMA_PAIS', ds_erro_w,Nr_seq_log_w, clock_timestamp(), 'Tasy_Versao' );
	commit;

end;

CALL wheb_usuario_pck.set_ie_executar_trigger(ie_executar_trigger_w);
/*
As procedure TASY_ELIMINAR_FUNCAO e TASY_ENABLE_CONSTRAINT SEMPRE devem ficar no final desta procedure
*/

/* Excluir perfis, relatorios e parametros de func?es eliminadas do sistema */

CALL Tasy_eliminar_funcao(nm_usuario_p);
/* Habilitar constraints */

CALL tasy_enable_constraint();
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE tasy_atualizar_base (nm_usuario_p text,nm_owner_origem_p text) FROM PUBLIC;

