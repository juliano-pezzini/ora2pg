-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE cpoe_shoppingcart_dose_max_min ((nr_atendimento_p atendimento_paciente.nr_atendimento%type, nr_seq_cpoe_p cpoe_material.nr_sequencia%type, ie_tipo_item_p text, cd_material_p material.cd_material%type, qt_dose_p cpoe_material.qt_dose%type, ds_dose_diferenciada_p cpoe_material.ds_dose_diferenciada%type, cd_unidade_medida_p cpoe_material.cd_unidade_medida%type, ie_via_aplicacao_p cpoe_material.ie_via_aplicacao%type, cd_pessoa_fisica_p pessoa_fisica.cd_pessoa_fisica%type, cd_intervalo_p intervalo_prescricao.cd_intervalo%type, nr_etapas_p cpoe_material.nr_etapas%type, hr_min_aplicacao_p cpoe_material.hr_min_aplicacao%type, qt_tempo_aplicacao_p cpoe_material.qt_tempo_aplicacao%type, ie_controle_tempo_p cpoe_material.ie_controle_tempo%type, ie_tipo_solucao_p cpoe_material.ie_tipo_solucao%type, qt_hora_fase_p cpoe_material.qt_hora_fase%type, qt_solucao_p cpoe_material.qt_solucao%type, qt_volume_final_p bigint, dt_inicio_p timestamp, dt_fim_p timestamp, ie_duracao_p cpoe_material.ie_duracao%type, ds_horarios_p cpoe_material.ds_horarios%type, ie_urgencia_p cpoe_material.ie_urgencia%type, ie_tipo_consistencia_p text, nr_seq_material_prescr_p OUT text, active_ingred_consist_p OUT text, qt_dose_adicional_p cpoe_material.qt_dose_adicional%type default null, qt_dose_ataque_p cpoe_material.qt_dose_ataque%type default null, dt_adm_adicional_p cpoe_material.dt_adm_adicional%type default null) is cd_prescritor_w pessoa_fisica.cd_pessoa_fisica%type) AS $body$
DECLARE

	qt_horas_w	double precision;
	qt_hora_w	varchar(30);
	qt_minutos_w	varchar(30);
BEGIN

if (ie_controle_tempo_p = 'S' and qt_tempo_aplicacao_p > 0 and (ie_tipo_solucao_p = 'C' or ie_tipo_solucao_p = 'V')) then
	qt_horas_w := qt_tempo_aplicacao_p;
elsif (ie_controle_tempo_p = 'N') then
	qt_horas_w := 0;

	if (length(hr_min_aplicacao_p) > 1) then
		qt_hora_w := substr(hr_min_aplicacao_p, 0, 2);
		qt_minutos_w := '0';

		if (length(hr_min_aplicacao_p) > 4) then
			qt_minutos_w := substr(hr_min_aplicacao_p, 4, 5);
		end if;

		qt_horas_w := ((qt_horas_w)::numeric  + ((qt_minutos_w)::numeric  / 60));

	end if;

elsif (ie_controle_tempo_p = 'S' and ie_tipo_solucao_p = 'I') then
	qt_horas_w := 0;

	if (qt_hora_fase_p IS NOT NULL AND qt_hora_fase_p::text <> '') then

		qt_hora_w := substr(qt_hora_fase_p, 0, 2);
		qt_minutos_w := '0';

		if (length(qt_hora_fase_p) > 4) then
			qt_minutos_w := substr(qt_hora_fase_p, 4, 5);
		end if;

		qt_horas_w := ((qt_horas_w)::numeric  + ((qt_minutos_w)::numeric  / 60));

	end if;	

end if;
return;
end;

function cpoe_obter_qt_minutos_aplic
				return;
	qt_hora_w	varchar2(30 char);
	qt_minutos_w	varchar2(30 char);
begin

if (ie_controle_tempo_p = 'S' and qt_tempo_aplicacao_p > 0 and (ie_tipo_solucao_p = 'C' or ie_tipo_solucao_p = 'V')) then
	qt_horas_w := qt_tempo_aplicacao_p * 60;
elsif (ie_controle_tempo_p = 'N') then
	qt_horas_w := 0;

	if (length(hr_min_aplicacao_p) > 1) then

		qt_hora_w := substr(hr_min_aplicacao_p, 0, 2);
		qt_minutos_w := '0';

		if (length(hr_min_aplicacao_p) > 4) then
			qt_minutos_w := substr(hr_min_aplicacao_p, 4, 5);
		end if;

		qt_horas_w := (((qt_horas_w)::numeric  * 60) + (qt_minutos_w)::numeric );
	end if;
elsif (ie_controle_tempo_p = 'S' and ie_tipo_solucao_p = 'I') then
	qt_horas_w := 0;

	if (qt_hora_fase_p IS NOT NULL AND qt_hora_fase_p::text <> '') then

		qt_hora_w := substr(qt_hora_fase_p, 0, 2);
		qt_minutos_w := '0';

		if (length(qt_hora_fase_p) > 4) then
			qt_minutos_w := substr(qt_hora_fase_p, 4, 5);
		end if;

		qt_horas_w := (((qt_horas_w)::numeric  * 60) + (qt_minutos_w)::numeric );
	end if;	

end if;

return;

end;

function obter_maior_dose(	qt_dose_conv_p				IN cpoe_material.qt_dose%type,
							qt_dose_adicional_conv_p	IN cpoe_material.qt_dose_adicional%type,
							qt_dose_ataque_conv_p		IN cpoe_material.qt_dose_ataque%type)
				return;

begin

	qt_retorno_w := coalesce(qt_dose_conv_p, 0);

	if (qt_dose_adicional_conv_p > qt_retorno_w) then
		qt_retorno_w := qt_dose_adicional_conv_p;
	end if;

	if (qt_dose_ataque_conv_p > qt_retorno_w) then
		qt_retorno_w := qt_dose_ataque_conv_p;
	end if;

	return;

end;

function obter_menor_dose(	qt_dose_conv_p				IN cpoe_material.qt_dose%type,
							qt_dose_adicional_conv_p	IN cpoe_material.qt_dose_adicional%type,
							qt_dose_ataque_conv_p		IN cpoe_material.qt_dose_ataque%type)
				return;

begin

	qt_retorno_w := coalesce(qt_dose_conv_p, 0);

	if (qt_dose_adicional_conv_p < qt_retorno_w and (qt_dose_adicional_p IS NOT NULL AND qt_dose_adicional_p::text <> '')) then
		qt_retorno_w := qt_dose_adicional_conv_p;
	end if;

	if (qt_dose_ataque_conv_p < qt_retorno_w and (qt_dose_ataque_p IS NOT NULL AND qt_dose_ataque_p::text <> '')) then
		qt_retorno_w := qt_dose_ataque_conv_p;
	end if;

	return;

end;

begin
if ((cd_material_p IS NOT NULL AND cd_material_p::text <> '') and (coalesce(qt_dose_p, 0) > 0 or (ds_dose_diferenciada_p IS NOT NULL AND ds_dose_diferenciada_p::text <> ''))) then
	cd_prescritor_w	:= obter_pessoa_fisica_usuario(wheb_usuario_pck.get_nm_usuario, 'C');
	qt_peso_w	:=	coalesce(obter_ultimo_sinal_vital_pf(cd_pessoa_fisica_p,'Peso'), 0);

	cd_setor_atendimento_w :=	obter_setor_atendimento(nr_atendimento_p);
	nr_seq_agrupamento_w := obter_agrupamento_setor(cd_setor_atendimento_w);
	nr_ocorrencia_w	:=	obter_ocorrencia_intervalo(cd_intervalo_p, 24, 'O');

	if (ds_dose_diferenciada_p IS NOT NULL AND ds_dose_diferenciada_p::text <> '') then
		ie_dose_diferenciada_w := 'S';
	end if;

	for rule_w in c01 loop
		if (coalesce(nr_seq_material_prescr_p::text, '') = '') then
			for dose_w in c02 loop
				qt_dose_w := dose_w.qt_dose;
				qt_dose_total_w := dose_w.qt_dose_total;
				if (ie_dose_diferenciada_w = 'N') then
					if ((nr_etapas_p IS NOT NULL AND nr_etapas_p::text <> '') and  coalesce(cd_intervalo_p::text, '') = '') then
						qt_dose_total_w := qt_dose_w * nr_etapas_p;
					elsif (cd_intervalo_p IS NOT NULL AND cd_intervalo_p::text <> '') then
						qt_dose_total_w := qt_dose_w * obter_ocorrencia_intervalo(cd_intervalo_p, coalesce(qt_tempo_aplicacao_p, 24), 'O');
					end if;
				end if;
				
				qt_dose_conv_w := obter_dose_convertida(cd_material_p, qt_dose_w, cd_unidade_medida_p, rule_w.cd_unid_med_limite);
				qt_dose_total_conv_w := obter_dose_convertida(cd_material_p, qt_dose_total_w, cd_unidade_medida_p, rule_w.cd_unid_med_limite);
			end loop;

			qt_dose_adicional_w := coalesce(qt_dose_adicional_p, 0);
			qt_dose_adic_conv_w := obter_dose_convertida(cd_material_p, qt_dose_adicional_w, cd_unidade_medida_p, rule_w.cd_unid_med_limite);

			qt_dose_ataque_w := coalesce(qt_dose_ataque_p, 0);
			qt_dose_ataque_conv_w := obter_dose_convertida(cd_material_p, qt_dose_ataque_w, cd_unidade_medida_p, rule_w.cd_unid_med_limite);

			if (ie_tipo_consistencia_p in ('MAX', 'A')) then
			
				if (rule_w.ie_dose_limite = 'DOSE') then
					qt_dose_compare_w := obter_maior_dose(qt_dose_conv_w, qt_dose_adic_conv_w, qt_dose_ataque_conv_w);
				elsif (rule_w.ie_dose_limite = 'DIA') then				
					SELECT * FROM cpoe_consiste_dose_dia(nr_atendimento_p, cd_material_p, qt_dose_w, cd_unidade_medida_p, ds_horarios_p, ie_urgencia_p, rule_w.qt_limite_pessoa, rule_w.cd_unid_med_limite, dt_inicio_p, nr_seq_cpoe_p, ie_tipo_item_p, nr_ocorrencia_w, qt_dose_adicional_w, null, dt_adm_adicional_p, qt_dose_ataque_w) INTO STRICT ie_consiste_dose_limite_w, qt_dose_compare_w;
				elsif (rule_w.ie_dose_limite = 'AT') then
					if ((ie_duracao_p IS NOT NULL AND ie_duracao_p::text <> '') and ie_duracao_p = 'C') then
						ie_consiste_dose_limite_w := 'S';
					else
						select	coalesce(sum(x.dose_total),0)
						into STRICT	qt_dose_aux_w
						from (	SELECT	coalesce(sum(obter_dose_convertida(cd_material, qt_dose, cd_unidade_medida, cd_unidade_medida_p)),0) dose_total
								from	cpoe_material_vig_v
								where	nr_atendimento	= nr_atendimento_p
								and	cd_material	= cd_material_p
								and	((dt_liberacao IS NOT NULL AND dt_liberacao::text <> '') or (nm_usuario = wheb_usuario_pck.get_nm_usuario))
								and	coalesce(dt_lib_suspensao::text, '') = ''
								and	coalesce(dt_suspensao::text, '') = ''
								
union

								SELECT	coalesce(sum(obter_dose_convertida(b.cd_material, c.qt_dose, c.cd_unidade_medida, cd_unidade_medida_p)),0) dose_total
								from	prescr_mat_hor c,
									prescr_material b,
									prescr_medica a
								where	a.nr_prescricao	= b.nr_prescricao
								and	a.nr_atendimento	= nr_atendimento_p
								and	b.cd_material	= cd_material_p
								and	b.nr_prescricao	= c.nr_prescricao
								and	b.nr_sequencia	= c.nr_seq_material
								and	coalesce(a.dt_suspensao::text, '') = ''
								and	coalesce(b.ie_suspenso,'N') = 'N'
								and	coalesce(c.dt_suspensao::text, '') = '') x;

						qt_dose_compare_w := qt_dose_total_conv_w + qt_dose_aux_w + qt_dose_adic_conv_w + qt_dose_ataque_conv_w;
					end if;
				elsif (rule_w.ie_dose_limite = 'PF') then
					if ((ie_duracao_p IS NOT NULL AND ie_duracao_p::text <> '') and ie_duracao_p = 'C') then
						ie_consiste_dose_limite_w := 'S';
					else
						select	coalesce(sum(obter_dose_convertida(a.cd_material, a.qt_dose, a.cd_unidade_medida, cd_unidade_medida_p)),0)
						into STRICT	qt_dose_aux_w
						from	cpoe_pac_dose_material a
						where	a.cd_pessoa_fisica	= cd_pessoa_fisica_p
						and		a.cd_material		= cd_material_p;

						qt_dose_compare_w := qt_dose_total_conv_w + qt_dose_aux_w + qt_dose_adic_conv_w + qt_dose_ataque_conv_w;
					end if;
				elsif (qt_peso_w > 0) then
					if (rule_w.ie_dose_limite = 'KG/D' and ie_dose_diferenciada_w = 'N') then
						qt_dose_compare_w := (qt_dose_conv_w + qt_dose_adic_conv_w + qt_dose_ataque_conv_w) / qt_peso_w;
					elsif (rule_w.ie_dose_limite = 'KG' or rule_w.ie_dose_limite = 'KG/D') then
						qt_dose_compare_w := (qt_dose_total_conv_w + qt_dose_adic_conv_w + qt_dose_ataque_conv_w) / qt_peso_w;
					elsif (rule_w.ie_dose_limite = 'KG/DIA') then
						select	coalesce(sum(obter_dose_convertida(b.cd_material, c.qt_dose, c.cd_unidade_medida_dose, cd_unidade_medida_p)),0)
						into STRICT	qt_dose_aux_w
						from	prescr_mat_hor c,
								prescr_material b,
								prescr_medica a
						where	a.nr_prescricao		= b.nr_prescricao
						and		a.nr_atendimento	= nr_atendimento_p
						and		b.cd_material		= cd_material_p
						and		b.nr_prescricao		= c.nr_prescricao
						and		b.nr_sequencia		= c.nr_seq_material
						and		coalesce(a.dt_suspensao::text, '') = ''
						and		coalesce(b.ie_suspenso,'N')	= 'N'
						and		a.dt_inicio_prescr between clock_timestamp() - interval '1 days' and clock_timestamp()
						and		coalesce(c.dt_suspensao::text, '') = '';

						qt_dose_compare_w := (qt_dose_total_conv_w + qt_dose_aux_w + qt_dose_adic_conv_w + qt_dose_ataque_conv_w) / qt_peso_w;
					elsif (rule_w.ie_dose_limite = 'KG/H' and cpoe_obter_qt_horas_aplic > 0) then
						qt_dose_compare_w := (qt_dose_total_conv_w + qt_dose_adic_conv_w + qt_dose_ataque_conv_w) / (qt_peso_w  * cpoe_obter_qt_horas_aplic);
					elsif (rule_w.ie_dose_limite = 'KG/MIN' and cpoe_obter_qt_minutos_aplic > 0) then
						qt_dose_compare_w := (qt_dose_total_conv_w + qt_dose_adic_conv_w + qt_dose_ataque_conv_w) / (qt_peso_w * cpoe_obter_qt_minutos_aplic);
					end if;
				end if;
			end if;

			/* Tratamento que existia no backend antes de migrar para o PL */

			if (ie_controle_tempo_p = 'S') then
				qt_dose_compare_w := coalesce(qt_dose_compare_w, 0);
			else
				qt_dose_compare_w := coalesce(qt_dose_compare_w, qt_dose_total_conv_w);
			end if;

			if (ie_tipo_consistencia_p in ('MAX', 'A') and rule_w.qt_limite_pessoa > -1 and (qt_dose_compare_w > rule_w.qt_limite_pessoa or ie_consiste_dose_limite_w = 'S')) then
				active_ingred_consist_p := 'M';
				nr_seq_material_prescr_p := rule_w.nr_sequencia;
			end if;

			if (ie_tipo_consistencia_p in ('MIN', 'A') and rule_w.qt_dose_min > 0 and obter_menor_dose(qt_dose_conv_w, qt_dose_adic_conv_w, qt_dose_ataque_conv_w) < rule_w.qt_dose_min) then
				active_ingred_consist_p := 'M';
				nr_seq_material_prescr_p := rule_w.nr_sequencia;
			end if;
		end if;
	end loop;
end if;


exception when others then
	ds_erro_w	:= substr(to_char(sqlerrm),1,2000);
	
	CALL gravar_log_cpoe(10007,
					substr('CPOE_SHOPPINGCART_DOSE_MAX_MIN EXCEPTION: '||ds_erro_w
										||' STACK ' || dbms_utility.format_call_stack
										||' nr_seq_cpoe_p: '||nr_seq_cpoe_p||' qt_tempo_aplicacao_p :'||qt_tempo_aplicacao_p
									    ||' qt_dose_p: '||qt_dose_p||' ds_dose_diferenciada_p: '||ds_dose_diferenciada_p||' ie_controle_tempo_p :'||ie_controle_tempo_p
									    ||' cd_unidade_medida_p:'||cd_unidade_medida_p|| ' ie_via_aplicacao_p: '||ie_via_aplicacao_p||' cd_pessoa_fisica_p:'||cd_pessoa_fisica_p
									    ||' cd_intervalo_p :'||cd_intervalo_p||' nr_etapas_p :'||nr_etapas_p||' hr_min_aplicacao_p :'||hr_min_aplicacao_p
										||' ie_tipo_solucao_p :'||ie_tipo_solucao_p||' qt_hora_fase_p :'||qt_hora_fase_p||' qt_solucao_p :'||qt_solucao_p
										||' qt_volume_final_p :'||qt_volume_final_p||' ie_duracao_p :'||ie_duracao_p||' ds_horarios_p :'||ds_horarios_p
									    ||' dt_inicio_p :'||to_char(dt_inicio_p,'dd/mm/yyyy hh24:mi:ss')||' dt_fim_p :'||to_char(dt_fim_p,'dd/mm/yyyy hh24:mi:ss')
										||' ie_urgencia_p'||ie_urgencia_p,1,2000),
					nr_atendimento_p);		
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE cpoe_shoppingcart_dose_max_min ((nr_atendimento_p atendimento_paciente.nr_atendimento%type, nr_seq_cpoe_p cpoe_material.nr_sequencia%type, ie_tipo_item_p text, cd_material_p material.cd_material%type, qt_dose_p cpoe_material.qt_dose%type, ds_dose_diferenciada_p cpoe_material.ds_dose_diferenciada%type, cd_unidade_medida_p cpoe_material.cd_unidade_medida%type, ie_via_aplicacao_p cpoe_material.ie_via_aplicacao%type, cd_pessoa_fisica_p pessoa_fisica.cd_pessoa_fisica%type, cd_intervalo_p intervalo_prescricao.cd_intervalo%type, nr_etapas_p cpoe_material.nr_etapas%type, hr_min_aplicacao_p cpoe_material.hr_min_aplicacao%type, qt_tempo_aplicacao_p cpoe_material.qt_tempo_aplicacao%type, ie_controle_tempo_p cpoe_material.ie_controle_tempo%type, ie_tipo_solucao_p cpoe_material.ie_tipo_solucao%type, qt_hora_fase_p cpoe_material.qt_hora_fase%type, qt_solucao_p cpoe_material.qt_solucao%type, qt_volume_final_p bigint, dt_inicio_p timestamp, dt_fim_p timestamp, ie_duracao_p cpoe_material.ie_duracao%type, ds_horarios_p cpoe_material.ds_horarios%type, ie_urgencia_p cpoe_material.ie_urgencia%type, ie_tipo_consistencia_p text, nr_seq_material_prescr_p OUT text, active_ingred_consist_p OUT text, qt_dose_adicional_p cpoe_material.qt_dose_adicional%type default null, qt_dose_ataque_p cpoe_material.qt_dose_ataque%type default null, dt_adm_adicional_p cpoe_material.dt_adm_adicional%type default null) is cd_prescritor_w pessoa_fisica.cd_pessoa_fisica%type) FROM PUBLIC;

