-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE copia_taxa_convenio (CD_CONVENIO_ORIGEM_P bigint, CD_CATEGORIA_ORIGEM_P text, CD_CONVENIO_DESTINO_P bigint, CD_CATEGORIA_DESTINO_P text, IE_COPIA_SERVICO_P text, IE_COPIA_CIRURGIA_P text, IE_COPIA_EXAME_P text, CD_ESTABELECIMENTO_ORIG_P bigint, CD_ESTABELECIMENTO_DEST_P bigint, NM_USUARIO_P text) AS $body$
DECLARE



CD_ESTABELECIMENTO_w	    	smallint;
NR_PORTE_ANESTESICO_w	    	smallint;
CD_TAXA_CIRURGIA_w		bigint;
IE_ORIGEM_PROCED_w       	bigint;
CD_SETOR_ATENDIMENTO_w		integer;
IE_TIPO_ATENDIMENTO_w		smallint;
nr_sequencia_w			bigint;
cd_tipo_acomodacao_w		smallint;
ie_tipo_regra_w			varchar(3);
nr_seq_proc_interno_w		convenio_taxa_cirurgia.nr_seq_proc_interno%type;
qt_procedimento_w		convenio_taxa_cirurgia.qt_procedimento%type;


c01 CURSOR FOR
	SELECT	CD_ESTABELECIMENTO,
		NR_PORTE_ANESTESICO,
		CD_TAXA_CIRURGIA,
		IE_ORIGEM_PROCED,
		CD_SETOR_ATENDIMENTO,
		IE_TIPO_ATENDIMENTO,
		cd_tipo_acomodacao,
		ie_tipo_regra,
		nr_seq_proc_interno,
		qt_procedimento
	from convenio_taxa_CIRURGIA
	where cd_convenio  = cd_convenio_origem_p
	  and cd_categoria = cd_categoria_origem_p
	  and cd_estabelecimento = cd_estabelecimento_orig_p;


BEGIN


if (IE_COPIA_SERVICO_P = 'S') then
	begin
	delete FROM CONVENIO_TAXA_SERVICO
	where cd_convenio = cd_convenio_destino_p
	  and cd_categoria = cd_categoria_destino_p
     	  and cd_estabelecimento = cd_estabelecimento_dest_p;

	insert into CONVENIO_TAXA_SERVICO(
			CD_ESTABELECIMENTO,
			CD_CONVENIO,
			CD_CATEGORIA,
			IE_TAXA_SERVICO,
			CD_TAXA_SERVICO,
			DT_ATUALIZACAO,
			NM_USUARIO,
			QT_MIN_SEGHR_CIRURGIA,
			QT_MIN_TOLERANCIA,
			IE_ORIGEM_PROCED,
			NR_SEQ_EVENTO,
			nr_seq_proc_interno,
			ie_situacao)
		(SELECT cd_estabelecimento_dest_p,
			CD_CONVENIO_DESTINO_P,
			CD_CATEGORIA_DESTINO_P,
			IE_TAXA_SERVICO,
			CD_TAXA_SERVICO,
			clock_timestamp(),
			NM_USUARIO_p,
			QT_MIN_SEGHR_CIRURGIA,
			QT_MIN_TOLERANCIA,
			IE_ORIGEM_PROCED,
			NR_SEQ_EVENTO,
			nr_seq_proc_interno,
			ie_situacao
		 from convenio_taxa_servico
		 where cd_convenio  = cd_convenio_origem_p
		   and cd_categoria = cd_categoria_origem_p
		   and cd_estabelecimento = cd_estabelecimento_orig_p);
	end;
end if;

if (IE_COPIA_cirurgia_P = 'S') then
	begin
	delete FROM CONVENIO_TAXA_cirurgia
	where cd_convenio = cd_convenio_destino_p
	  and cd_categoria = cd_categoria_destino_p
	  and cd_estabelecimento = cd_estabelecimento_dest_p;

	open c01;
	loop
	fetch c01 into
		cd_estabelecimento_w,
		NR_PORTE_ANESTESICO_w,
		CD_TAXA_CIRURGIA_w,
		IE_ORIGEM_PROCED_w,
		CD_SETOR_ATENDIMENTO_w,
		IE_TIPO_ATENDIMENTO_w,
		cd_tipo_acomodacao_w,
		ie_tipo_regra_w,
		nr_seq_proc_interno_w,
		qt_procedimento_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		select nextval('convenio_taxa_cirurgia_seq')
		into STRICT  nr_sequencia_w
		;

	insert into CONVENIO_TAXA_cirurgia(
			CD_ESTABELECIMENTO,
			CD_CONVENIO,
			CD_CATEGORIA,
			NR_PORTE_ANESTESICO,
			CD_TAXA_CIRURGIA,
			DT_ATUALIZACAO,
			NM_USUARIO,
			IE_ORIGEM_PROCED,
			CD_SETOR_ATENDIMENTO,
			IE_TIPO_ATENDIMENTO,
			NR_SEQUENCIA,
			cd_tipo_acomodacao,
			ie_tipo_regra,
			nr_seq_proc_interno,
			qt_procedimento)
		values (
			CD_ESTABELECIMENTO_dest_p,
			CD_CONVENIO_destino_p,
			CD_CATEGORIA_destino_p,
			NR_PORTE_ANESTESICO_w,
			CD_TAXA_CIRURGIA_w,
			clock_timestamp(),
			NM_USUARIO_p,
			IE_ORIGEM_PROCED_w,
			CD_SETOR_ATENDIMENTO_w,
			IE_TIPO_ATENDIMENTO_w,
			NR_SEQUENCIA_w,
			cd_tipo_acomodacao_w,
			ie_tipo_regra_w,
			nr_seq_proc_interno_w,
			qt_procedimento_w);
		end;
	end loop;
	close c01;
	end;
end if;

if (IE_COPIA_exame_P = 'S') then
	begin

	delete FROM CONVENIO_TAXA_exame
	where cd_convenio = cd_convenio_destino_p
	  and cd_categoria = cd_categoria_destino_p
	  and cd_estabelecimento = cd_estabelecimento_dest_p;

	insert into CONVENIO_TAXA_exame(
			CD_ESTABELECIMENTO,
			CD_CONVENIO,
			CD_CATEGORIA,
			CD_PROCEDIMENTO,
			CD_TAXA_EXAME,
			DT_ATUALIZACAO,
			NM_USUARIO,
			IE_ORIGEM_PROCED,
			TX_PROCEDIMENTO,
			IE_CRITERIO_TAXA,
			IE_EVENTO_CALCULO,
			IE_ORIGEM_TAXA,
			ie_regra_filme,
			nr_sequencia,
			cd_especialidade,
			cd_grupo_proc,
			cd_area_procedimento,
			ie_situacao)
		(SELECT CD_ESTABELECIMENTO_DEST_p,
			CD_CONVENIO_destino_p,
			CD_CATEGORIA_destino_p,
			CD_PROCEDIMENTO,
			CD_TAXA_EXAME,
			clock_timestamp(),
			NM_USUARIO_p,
			IE_ORIGEM_PROCED,
			TX_PROCEDIMENTO,
			IE_CRITERIO_TAXA,
			IE_EVENTO_CALCULO,
			IE_ORIGEM_TAXA,
			ie_regra_filme,
			nextval('convenio_taxa_exame_seq'),
			cd_especialidade,
			cd_grupo_proc,
			cd_area_procedimento,
			ie_situacao
		from convenio_taxa_exame
		 where cd_convenio  = cd_convenio_origem_p
		   and cd_categoria = cd_categoria_origem_p
		   and cd_estabelecimento = cd_estabelecimento_orig_p);
	end;
end if;

commit;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE copia_taxa_convenio (CD_CONVENIO_ORIGEM_P bigint, CD_CATEGORIA_ORIGEM_P text, CD_CONVENIO_DESTINO_P bigint, CD_CATEGORIA_DESTINO_P text, IE_COPIA_SERVICO_P text, IE_COPIA_CIRURGIA_P text, IE_COPIA_EXAME_P text, CD_ESTABELECIMENTO_ORIG_P bigint, CD_ESTABELECIMENTO_DEST_P bigint, NM_USUARIO_P text) FROM PUBLIC;

