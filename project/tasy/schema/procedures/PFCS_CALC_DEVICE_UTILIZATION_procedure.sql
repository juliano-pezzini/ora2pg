-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pfcs_calc_device_utilization ( nr_seq_indicator_p bigint, cd_estabelecimento_p text, nm_usuario_p text) AS $body$
DECLARE


	pfcs_panel_detail_seq_w			pfcs_panel_detail.nr_sequencia%type;
	nr_seq_panel_w					    pfcs_panel_detail.nr_seq_panel%type;
	qt_total_in_use_w           pfcs_panel.vl_indicator%type := 0;
	ie_started_status_w 			  varchar(5) := 'S';
	ds_pat_w                    varchar(15) := 'Patient';
	ds_prac_w             			varchar(15) := 'Practitioner';
	ds_room_bed_code_w				  varchar(10) := 'Room-Bed';
	ds_department_const_w			  varchar(20) := 'Department';
	ds_complete_status_w			  varchar(15) := 'COMPLETED';
	ds_active_status_w				  varchar(15) := 'ACTIVE';
	ds_planned_status_w				  varchar(15) := 'PLANNED';
	ds_arrived_status_w				  varchar(15) := 'ARRIVED';
	ds_monitor_dev_type_w 			varchar(10) := 'Monitor';
	ds_service_requested_w      varchar(10) := 'E0403';
	ds_service_completed_w			varchar(10) := 'E0404';
	ds_red_alarm_code_w				  varchar(10) := 'A0401';
	ds_yellow_alarm_code_w			varchar(10) := 'A0402';
	cd_attending_role_w				  varchar(20) := '405279007';
    ie_active_w						      varchar(1) := '1';
    qt_total_aux_w              pfcs_panel.vl_indicator_aux%type := 0;
	qt_time_alarms_rule_w			  pfcs_telemetry_config.qt_time_alarm_trend_rule%type;
    qt_available_beds_w         bigint := 0;
    qt_total_brkn_pfcs_w          bigint := 0;

    c01_fhir_status CURSOR FOR
        SELECT 'U' cd_status_fhir
        
union
 SELECT 'I' cd_status_fhir 
        
union
 select 'C' cd_status_fhir 
        
union
 select 'K' cd_status_fhir 
        
union
 select 'H' cd_status_fhir;

	/* Cursor to read from pfcs integration tables */

	c01_inuse_from_pfcs CURSOR FOR
		SELECT eid.ds_value nr_encounter,
			pat.patient_id id_patient,
			pfcs_get_human_name(enc.nr_seq_patient, ds_pat_w) nm_patient,
			pfcs_get_tele_time(dev.nr_sequencia, ie_started_status_w) nr_tele_time,
			enc.ds_reason diagnosis,
			pat.birthdate dob_patiente,
             trunc(months_between(coalesce(pat.deceased_date, clock_timestamp()), pat.birthdate)/12) qt_idade_paciente,
			pat.gender gender,
			enc.ds_classification ds_classification,
			enc.period_start dt_entrance,
			pfcs_get_human_name(pfcs_get_practitioner_seq(enc.nr_sequencia, cd_attending_role_w), ds_prac_w) ds_attending_physician,
			pfcs_get_code_status_tl(pat.nr_sequencia,'S')  ds_dnr_status,
			pfcs_get_location(enc.nr_sequencia, ds_department_const_w) ds_department,
			pfcs_get_location(enc.nr_sequencia, ds_room_bed_code_w) ds_bed,
			dev.id_device cd_equipamento,
			dev.ds_device_name ds_equipamento,
			pfcs_get_alarms_count(pat.nr_sequencia, ds_yellow_alarm_code_w, qt_time_alarms_rule_w) nr_yellow_alarm_count,
			pfcs_get_alarms_count(pat.nr_sequencia, ds_red_alarm_code_w, qt_time_alarms_rule_w) nr_red_alarm_count,
			pfcs_get_battery_status(pat.nr_sequencia) battery_status,
			pfcs_get_discharge_status(enc.nr_sequencia, cd_estabelecimento_p) ie_discharge_status,
			pfcs_get_alarms_trends(pat.nr_sequencia, enc.nr_sequencia, 'TREND') ds_alarms_trends,
			pfcs_get_edi_score(enc.nr_sequencia) as nr_edi_score
		from pfcs_service_request sr,
			pfcs_encounter enc,
			pfcs_patient pat,
			pfcs_encounter_identifier eid,
			pfcs_device dev,
		    pfcs_organization org,
		    pfcs_location loc
		where
			( (sr.si_status = ds_complete_status_w and sr.cd_service = ds_service_completed_w) or (sr.si_status = ds_active_status_w and sr.cd_service = ds_service_requested_w))
			and sr.nr_seq_encounter = enc.nr_sequencia
			and enc.si_status in (ds_planned_status_w, ds_arrived_status_w)
			and eid.nr_seq_encounter = enc.nr_sequencia
			and enc.nr_seq_patient = pat.nr_sequencia
			and pat.ie_active = ie_active_w
			and pat.nr_seq_organization = org.nr_sequencia
            and org.cd_estabelecimento = (cd_estabelecimento_p)::numeric
			and dev.nr_seq_patient = pat.nr_sequencia
			and dev.si_status = ds_active_status_w
			and dev.ds_device_type = ds_monitor_dev_type_w
			and dev.nr_seq_location = loc.nr_sequencia
			and (loc.si_status in ('ACTIVE') and loc.cd_operational_status not in ('K', 'C'));
BEGIN
	-- Get hours configurable from telemetry settings
	select	qt_time_alarm_trend_rule into STRICT qt_time_alarms_rule_w from pfcs_telemetry_config;

    for c01_w in c01_fhir_status loop
        if (pfcs_get_bed_status(c01_w.cd_status_fhir, 'C', cd_estabelecimento_p, 'Y') = 'A') then
            qt_available_beds_w := qt_available_beds_w + pfcs_get_tele_device_intg_v2(ds_monitor_dev_type_w, replace(c01_w.cd_status_fhir, 'U', 'Unoccupied'), cd_estabelecimento_p);
        end if;
    end loop;

   	qt_total_in_use_w := pfcs_get_tele_device_intg_v2(ds_monitor_dev_type_w, 'U', cd_estabelecimento_p);
   	qt_total_brkn_pfcs_w :=  pfcs_get_tele_device_intg_v2(ds_monitor_dev_type_w, 'BorkenLostDevice', cd_estabelecimento_p);
	qt_total_aux_w :=  qt_available_beds_w + qt_total_in_use_w + qt_total_brkn_pfcs_w;

	for r_c01 in c01_inuse_from_pfcs loop
		select nextval('pfcs_panel_detail_seq') into STRICT pfcs_panel_detail_seq_w;
		CALL pfcs_pck_v2.pfcs_insert_details(
			nr_seq_indicator_p => nr_seq_indicator_p,
			nr_seq_operational_level_p	=> (cd_estabelecimento_p)::numeric ,
			nm_usuario_p => nm_usuario_p,
			nr_panel_detail_seq_p => pfcs_panel_detail_seq_w,
			nr_encounter_p => r_c01.nr_encounter,
			id_patient_p => r_c01.id_patient,
			nm_patient_p => r_c01.nm_patient,
			dt_birthdate_p => r_c01.dob_patiente,
			ds_primary_diagnosis_p => r_c01.diagnosis,
			ds_gender_p => r_c01.gender,
			ds_dnr_status_p => r_c01.ds_dnr_status,
			qt_time_telemetry_p => r_c01.nr_tele_time,
			ds_classification_p => r_c01.ds_classification,
			dt_entrance_p => r_c01.dt_entrance,
			ds_service_line_p => r_c01.ds_attending_physician,
			cd_department_p => r_c01.ds_department,
			ds_department_p => r_c01.ds_department,
			ds_bed_location_p => r_c01.ds_bed,
			qt_red_alarms_p => r_c01.nr_red_alarm_count,
			qt_yellow_alarms_p => r_c01.nr_yellow_alarm_count,
			cd_equipamento_p => r_c01.cd_equipamento,
			ds_device_p => r_c01.ds_equipamento,
			ds_battery_status_p => r_c01.battery_status,
			ie_discharge_status_p =>  r_c01.ie_discharge_status,
			ds_age_range_p => r_c01.qt_idade_paciente,
			ds_alarms_trends_p => r_c01.ds_alarms_trends,
			nr_edi_score_p =>  r_c01.nr_edi_score
			);
	end loop;


	 := pfcs_pck_v2.pfcs_generate_results(
		vl_indicator_p => qt_total_in_use_w, ds_reference_value_p => '', vl_indicator_aux_p => qt_total_aux_w, nr_seq_indicator_p => nr_seq_indicator_p, nr_seq_operational_level_p => (cd_estabelecimento_p)::numeric , nm_usuario_p => nm_usuario_p, nr_seq_panel_p => nr_seq_panel_w);

	CALL pfcs_pck_v2.pfcs_update_detail(
		nr_seq_indicator_p => nr_seq_indicator_p,
		nr_seq_panel_p => nr_seq_panel_w,
		nr_seq_operational_level_p => (cd_estabelecimento_p)::numeric ,
		nm_usuario_p => nm_usuario_p);

	commit;


	CALL pfcs_pck_v2.pfcs_activate_records(
			nr_seq_indicator_p => nr_seq_indicator_p,
			nr_seq_operational_level_p => (cd_estabelecimento_p)::numeric ,
			nm_usuario_p => nm_usuario_p);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pfcs_calc_device_utilization ( nr_seq_indicator_p bigint, cd_estabelecimento_p text, nm_usuario_p text) FROM PUBLIC;

