-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualizar_medico_conta (nr_atendimento_p bigint, cd_medico_p text, cd_medico_novo_p text, nm_usuario_p text) AS $body$
DECLARE


nr_interno_conta_w				bigint;
cd_estabelecimento_w			bigint;	
IE_ALTERA_MEDICO_PROC_CTA_w		varchar(01);
qt_proc_medico_conta_w			bigint;
cd_cgc_prestador_w 				varchar(14);	
cd_cgc_w						varchar(14);
ie_medico_executor_w			varchar(1);
cd_medico_executor_w			varchar(10);
cd_pessoa_fisica_w				varchar(10);
cd_estabelecimento_ww			smallint;
cd_convenio_w					integer;
ie_tipo_atendimento_w			smallint;
nr_seq_classificacao_w			bigint;
nr_seq_proc_interno_w			bigint;
nr_seq_exame_w					bigint;
dt_procedimento_w				timestamp;
cd_setor_atendimento_w			integer;
cd_procedimento_w				bigint;
ie_origem_proced_w				bigint;
nr_sequencia_w					bigint;
ie_entrou_w						varchar(1);
ie_altera_medico_w                      varchar(1);

c01 CURSOR FOR
	SELECT	nr_interno_conta,
			cd_estabelecimento,
			cd_convenio_parametro
	from	conta_paciente
	where	nr_atendimento		= nr_atendimento_P
	and 	IE_ALTERA_MEDICO_PROC_CTA_w <> 'N'
	and	ie_status_acerto	= 1;
	
C02 CURSOR FOR
		SELECT	cd_setor_atendimento,
				cd_procedimento,
				ie_origem_proced,
				nr_seq_exame,
				nr_seq_proc_interno,
				dt_procedimento,
				nr_sequencia
		from	procedimento_paciente
		where	nr_interno_conta = nr_interno_conta_w;



BEGIN

if (cd_medico_p IS NOT NULL AND cd_medico_p::text <> '') and (cd_medico_novo_p IS NOT NULL AND cd_medico_novo_p::text <> '') and (cd_medico_p <> cd_medico_novo_p) then

	select	coalesce(max(cd_estabelecimento), 0)
	into STRICT	cd_estabelecimento_w
	from	atendimento_paciente
	where	nr_atendimento		= nr_atendimento_p;

	begin
	select	coalesce(max(IE_ALTERA_MEDICO_PROC_CTA), 'N')
	into STRICT	IE_ALTERA_MEDICO_PROC_CTA_w
	from	parametro_faturamento
	where	cd_estabelecimento	= cd_estabelecimento_w;
	exception
		when others then
		IE_ALTERA_MEDICO_PROC_CTA_w	:= 'N';
	end;

	
	ie_entrou_w:= 'N';
			
	open c01;
	loop
	fetch c01 into
			nr_interno_conta_w,
			cd_estabelecimento_ww,
			cd_convenio_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
			begin
		
			open C02;
			loop
			fetch C02 into	
				cd_setor_atendimento_w,
					cd_procedimento_w,
					ie_origem_proced_w,
					nr_seq_exame_w,
					nr_seq_proc_interno_w,
					dt_procedimento_w,
					nr_sequencia_w;
			EXIT WHEN NOT FOUND; /* apply on C02 */
				begin

				ie_entrou_w:= 'S';

                                ie_altera_medico_w      := obter_se_proc_altera_medico(cd_procedimento_w, ie_origem_proced_w);
			
				select	count(*)
				into STRICT	qt_proc_medico_conta_w
				from	procedimento_paciente
				where	nr_interno_conta = nr_interno_conta_w
				and	cd_medico_executor = cd_medico_p
				and	((IE_ALTERA_MEDICO_PROC_CTA_w = 'S') or (ie_altera_medico_w = 'S'));

				select	ie_tipo_atendimento,
						nr_seq_classificacao
				into STRICT	ie_tipo_atendimento_w,
						nr_seq_classificacao_w
				from    atendimento_paciente
				where 	nr_atendimento = nr_atendimento_p;
				
				cd_cgc_prestador_w := null;
				
				SELECT * FROM consiste_medico_executor(cd_estabelecimento_ww, cd_convenio_w, cd_setor_atendimento_w, cd_procedimento_w, ie_origem_proced_w, ie_tipo_atendimento_w, nr_seq_exame_w, nr_seq_proc_interno_w, ie_medico_executor_w, cd_cgc_w, cd_medico_executor_w, cd_pessoa_fisica_w, cd_medico_novo_p, dt_procedimento_w, nr_seq_classificacao_w, null, null, null) INTO STRICT ie_medico_executor_w, cd_cgc_w, cd_medico_executor_w, cd_pessoa_fisica_w;
						
				if (coalesce(cd_cgc_w,'0') <> '0') then
					cd_cgc_prestador_w	:= cd_cgc_w;
				end if;		
				
				
				if (qt_proc_medico_conta_w > 0) then
					update	procedimento_paciente
					set	cd_medico_executor	= cd_medico_novo_p,
						nm_usuario		= nm_usuario_p,
						dt_atualizacao		= clock_timestamp(),
						cd_cgc_prestador = CASE WHEN cd_cgc_prestador_w = NULL THEN  cd_cgc_prestador  ELSE cd_cgc_prestador_w END
					where	nr_interno_conta	= nr_interno_conta_w
					and		nr_sequencia 		= nr_sequencia_w
					and	cd_medico_executor	= cd_medico_p
					and	((IE_ALTERA_MEDICO_PROC_CTA_w = 'S') or (ie_altera_medico_w = 'S'));
					
				end if;
				end;
			end loop;
			close C02;		
			
			if (ie_entrou_w = 'S') then
				CALL Recalcular_Conta_Paciente(nr_interno_conta_w,nm_usuario_p);
				ie_entrou_w:= 'N';
			end if;
			
			end;
	end loop;
	close c01;
	
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualizar_medico_conta (nr_atendimento_p bigint, cd_medico_p text, cd_medico_novo_p text, nm_usuario_p text) FROM PUBLIC;

