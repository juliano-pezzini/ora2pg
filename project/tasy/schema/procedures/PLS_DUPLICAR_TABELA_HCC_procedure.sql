-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_duplicar_tabela_hcc ( nm_usuario_p text) AS $body$
DECLARE

 
nr_seq_contrato_wlano_w		bigint;
nr_seq_tabela_w			bigint;
nr_seq_plano_w			bigint;
nr_seq_contrato_w		bigint;

dt_contrato_w			timestamp;
nr_seq_tabela_ww		bigint;
qt_idade_inicial_w		integer;
qt_idade_final_w		integer;
vl_preco_atual_w		double precision;
tx_acrescimo_w			double precision;
qt_registros_w			bigint;
ie_tabela_contrato_w		varchar(1);
nm_estipulante_w		varchar(80);
ie_tipo_contratacao_w		varchar(3);
vl_preco_nao_subsidiado_w	double precision;
ie_preco_w			varchar(2);
nr_seq_contrato_tabela_w	bigint;

C01 CURSOR FOR 
	SELECT	nr_sequencia, 
		nr_seq_tabela, 
		nr_seq_plano, 
		nr_seq_contrato 
	from	pls_contrato_plano 
	where	nr_seq_contrato <> 884 
	and	((nr_seq_plano	= 48 and nr_seq_tabela(19710,19719)) 
	or (nr_seq_plano	= 49 and nr_seq_tabela in (19712,19720)) 
	or (nr_seq_plano	= 50 and nr_seq_tabela in (19713,19721)) 
	or (nr_seq_plano	= 51 and nr_seq_tabela in (19714,19722)));

c02 CURSOR FOR 
	SELECT	qt_idade_inicial, 
		qt_idade_final, 
		vl_preco_atual, 
		tx_acrescimo, 
		vl_preco_nao_subsidiado 
	from	pls_plano_preco 
	where	nr_seq_tabela	= nr_seq_tabela_w 
	order by qt_idade_inicial;
	

BEGIN 
 
open C01;
loop 
fetch C01 into	 
	nr_seq_contrato_wlano_w, 
	nr_seq_tabela_w, 
	nr_seq_plano_w, 
	nr_seq_contrato_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	select	coalesce(max(ie_preco),0) 
	into STRICT	ie_preco_w 
	from	pls_plano 
	where	nr_sequencia	= nr_seq_plano_w;
	 
	if (ie_preco_w in (1,4)) then 
		select	coalesce(dt_contrato,clock_timestamp()), 
			substr(obter_nome_pf_pj(cd_pf_estipulante,cd_cgc_estipulante),1,80) 
		into STRICT	dt_contrato_w, 
			nm_estipulante_w 
		from	pls_contrato 
		where	nr_sequencia	= nr_seq_contrato_w;
		 
		select	coalesce(max(nr_contrato),0) 
		into STRICT	nr_seq_contrato_tabela_w 
		from	pls_tabela_preco 
		where	nr_sequencia	= nr_seq_tabela_w;
		 
		if (nr_seq_plano_w IS NOT NULL AND nr_seq_plano_w::text <> '') and (nr_seq_tabela_w IS NOT NULL AND nr_seq_tabela_w::text <> '') and (nr_seq_contrato_tabela_w = 0) then 
			 
			select	nextval('pls_tabela_preco_seq') 
			into STRICT	nr_seq_tabela_ww 
			;
			 
			insert into pls_tabela_preco(nr_sequencia, 
				dt_atualizacao, 
				nm_usuario, 
				nm_tabela, 
				dt_inicio_vigencia, 
				dt_fim_vigencia, 
				nr_seq_plano, 
				dt_liberacao, 
				ie_tabela_base, 
				nr_contrato, 
				nr_seq_tabela_origem) 
			SELECT	nr_seq_tabela_ww, 
				clock_timestamp(), 
				nm_usuario_p, 
				'Tabela para o contrato ' || to_char(nr_seq_contrato_w) || ' - ' || nm_estipulante_w, 
				dt_contrato_w, 
				clock_timestamp(), 
				nr_seq_plano_w, 
				clock_timestamp(), 
				'N', 
				nr_seq_contrato_w, 
				nr_sequencia 
			from	pls_tabela_preco 
			where	nr_sequencia	= nr_seq_tabela_w;
			 
			open c02;
			loop 
			fetch c02 into	qt_idade_inicial_w, 
					qt_idade_final_w, 
					vl_preco_atual_w, 
					tx_acrescimo_w, 
					vl_preco_nao_subsidiado_w;
			EXIT WHEN NOT FOUND; /* apply on c02 */
				 
				insert into pls_plano_preco(nr_sequencia, 
					dt_atualizacao, 
					nm_usuario, 
					nr_seq_tabela, 
					qt_idade_inicial, 
					qt_idade_final, 
					vl_preco_inicial, 
					vl_preco_atual, 
					tx_acrescimo, 
					vl_preco_nao_subsidiado) 
				values (nextval('pls_plano_preco_seq'), 
					clock_timestamp(), 
					nm_usuario_p, 
					nr_seq_tabela_ww, 
					qt_idade_inicial_w, 
					qt_idade_final_w, 
					vl_preco_atual_w, 
					vl_preco_atual_w, 
					tx_acrescimo_w, 
					vl_preco_nao_subsidiado_w);
			end loop;
			close c02;
			 
			update	pls_contrato_plano 
			set	nr_seq_tabela	= nr_seq_tabela_ww, 
				nm_usuario	= nm_usuario_p, 
				dt_atualizacao	= clock_timestamp(), 
				nr_seq_tabela_origem = nr_seq_tabela_w 
			where	nr_seq_contrato	= nr_seq_contrato_w 
			and	nr_seq_plano	= nr_seq_plano_w;
			 
			update	pls_segurado 
			set	nr_seq_tabela	= nr_seq_tabela_ww 
			where	nr_seq_contrato	= nr_seq_contrato_w 
			and	nr_seq_plano	= nr_seq_plano_w 
			and	nr_seq_tabela	= nr_seq_tabela_w;
		end if;
	end if;
	 
	end;
end loop;
close C01;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_duplicar_tabela_hcc ( nm_usuario_p text) FROM PUBLIC;

