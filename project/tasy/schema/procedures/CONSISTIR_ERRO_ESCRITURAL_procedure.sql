-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consistir_erro_escritural ( ds_erro_p titulo_pagar_escrit.ds_erro%type, nr_seq_escrit_p banco_escritural.nr_sequencia%type, cd_banco_p banco_escritural.cd_banco%type, nr_titulo_p titulo_pagar.nr_titulo%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type, ie_bloquear_titulo_p INOUT erro_escritural.ie_bloquear_titulo%type, ie_excluir_titulo_p INOUT erro_escritural.ie_excluir_titulo%type) AS $body$
DECLARE


ie_bloquear_titulo_w            erro_escritural.ie_bloquear_titulo%type;
ie_excluir_titulo_w             erro_escritural.ie_excluir_titulo%type;
qt_tamanho_erro_w               banco_retorno_cp.qt_tamanho_erro%type;
nr_seq_banco_escrit_segundo_w   titulo_pagar_escrit.nr_seq_escrit%type;
ie_titulo_multi_remessa_w       varchar(1);
qt_titulo_w                     integer;

  ds RECORD;

BEGIN

    select	coalesce(max(a.ie_bloquear_titulo),'N'),
        coalesce(max(a.ie_excluir_titulo),'N')
    into STRICT	ie_bloquear_titulo_w,
        ie_excluir_titulo_w
    from	erro_escritural a
    where	position(a.cd_erro in ds_erro_p) > 0
    and     a.cd_banco = cd_banco_p;

    ie_bloquear_titulo_p := ie_bloquear_titulo_w;
    ie_excluir_titulo_p := ie_excluir_titulo_w;

    -- ahoffelder - OS 404352 - 14/01/2012 
    if (coalesce(ie_bloquear_titulo_w,'N') = 'S') then

      update	titulo_pagar
      set	ie_situacao	= 'B',
        dt_atualizacao	= clock_timestamp(),
        nm_usuario	= nm_usuario_p
      where	nr_titulo	= nr_titulo_p;

    end if;

    if (coalesce(ie_excluir_titulo_w,'N')	= 'S') then

    ie_titulo_multi_remessa_w := obter_param_usuario(857, 35, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_titulo_multi_remessa_w);

      select 
        case when exists (select nr_titulo from titulo_pagar_escrit_exc where nr_titulo = nr_titulo_p and nr_seq_escrit = nr_seq_escrit_p) 
          then 1 else 0 
        end
      into STRICT qt_titulo_w;

      if (qt_titulo_w = 0) then

        select 	coalesce(max(qt_tamanho_erro),2)
        into STRICT 	qt_tamanho_erro_w
        from 	banco_retorno_cp
        where 	cd_banco = cd_banco_p;

        if (ds_erro_p IS NOT NULL AND ds_erro_p::text <> '') then

          for ds in (WITH RECURSIVE cte AS (
SELECT trim(both regexp_substr(ds_erro_p,'.{1,'||qt_tamanho_erro_w||'}',1,rownum)) erro_w
             row_number() OVER () <= ceil(length(ds_erro_p)/qt_tamanho_erro_w)  UNION ALL
SELECT trim(both regexp_substr(ds_erro_p,'.{1,'||qt_tamanho_erro_w||'}',1,rownum)) erro_w
             row_number() OVER () <= ceil(length(ds_erro_p)/qt_tamanho_erro_w) JOIN cte c ON ()

) SELECT * FROM cte;
)
          loop

            insert	into titulo_pagar_escrit_exc --NOSONAR
              (cd_erro,
              dt_atualizacao,
              dt_atualizacao_nrec,
              nm_usuario,
              nm_usuario_nrec,
              nr_seq_escrit,
              nr_sequencia,
              nr_titulo)
            values (ds.erro_w,
              clock_timestamp(),
              clock_timestamp(),
              nm_usuario_p,
              nm_usuario_p,
              nr_seq_escrit_p,
              nextval('titulo_pagar_escrit_exc_seq'),
              nr_titulo_p);

            ie_titulo_multi_remessa_w := obter_param_usuario(857, 35, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_titulo_multi_remessa_w);

            if (coalesce(ie_titulo_multi_remessa_w, 'S') = 'N') then

              select max(nr_seq_escrit)
              into STRICT nr_seq_banco_escrit_segundo_w
              from titulo_pagar_escrit
              where	nr_titulo	= nr_titulo_p
              and	nr_seq_escrit	<> nr_seq_escrit_p;

              if (nr_seq_banco_escrit_segundo_w IS NOT NULL AND nr_seq_banco_escrit_segundo_w::text <> '') then

                insert	into titulo_pagar_escrit_exc --NOSONAR
                  (cd_erro,
                  dt_atualizacao,
                  dt_atualizacao_nrec,
                  nm_usuario,
                  nm_usuario_nrec,
                  nr_seq_escrit,
                  nr_sequencia,
                  nr_titulo)
                values (ds.erro_w,
                  clock_timestamp(),
                  clock_timestamp(),
                  nm_usuario_p,
                  nm_usuario_p,
                 nr_seq_banco_escrit_segundo_w,
                  nextval('titulo_pagar_escrit_exc_seq'),
                  nr_titulo_p);

              end if;

              delete	from titulo_pagar_escrit
              where	nr_titulo	= nr_titulo_p;

            else

              delete	from titulo_pagar_escrit
              where	nr_titulo	= nr_titulo_p
              and	nr_seq_escrit	= nr_seq_escrit_p;

            end if;

          end loop;

        end if;

    end if;

end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consistir_erro_escritural ( ds_erro_p titulo_pagar_escrit.ds_erro%type, nr_seq_escrit_p banco_escritural.nr_sequencia%type, cd_banco_p banco_escritural.cd_banco%type, nr_titulo_p titulo_pagar.nr_titulo%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type, ie_bloquear_titulo_p INOUT erro_escritural.ie_bloquear_titulo%type, ie_excluir_titulo_p INOUT erro_escritural.ie_excluir_titulo%type) FROM PUBLIC;

