-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE lista AS (
		ds varchar(50));


CREATE OR REPLACE PROCEDURE autor_conv_enviar_email_html ( ds_assunto_p text, ds_mensagem_p text, ds_email_origem_p text, ds_email_destino_p text, nm_usuario_p text, ie_prioridade_p text, ds_email_cco_p text default null) AS $body$
DECLARE

/*
ie_prioriadade_p
A - Alta
M - Média
B - Baixa
*/
ds_email_origem_w			varchar(50);
ds_smtp_w			varchar(50);
ds_user_id_w			varchar(50);
ds_senha_smtp_w			varchar(50);
ds_assunto_w			varchar(255);
ds_assunto_aux_w			varchar(2000);
ds_parametro_w			varchar(255);
ds_versao_w			varchar(10);
cabecalho_mensagem_w		varchar(4000);
ds_user_raw_w			bytea;
ds_pwd_raw_w			bytea;
qt_reg_w				integer       := 0;
cd_setor_w			varchar(255);
ds_email_destino_w			varchar(32000);
ds_email_destino_w2		varchar(32000);
ds_email_cco_w			varchar(32000);
ds_email_cco_w2			varchar(32000);
vl_pos_w				smallint;
qt_prioridade_w			smallint;
c001				integer;
ds_comando_w			varchar(255);
retorno_w				integer;
ie_solic_receb_email_w 		varchar(1);
ie_autenticar_w			boolean;
nr_porta_w			bigint;
ie_ssl_w				varchar(1);

ds_senha_email_usuario_w		varchar(100);
ds_conta_email_w		varchar(50);
ds_servidor_envio2_w		varchar(60);
ds_user_id2_w			varchar(60);
ds_senha_smtp2_w		varchar(60);
ds_porta_serial_envio2_w	varchar(60);
ie_utilizar_ssl2_w		varchar(60);
ie_email_resposta2_w		varchar(60);
ie_metodo_autenticacao_w	varchar(5);
ie_ssl_param_w			varchar(5);
ds_mensagem_ww			varchar(32766);
ds_assunto_ww			varchar(32766);
ie_tratar_crlf_w 		varchar(1);
type myArray is table of lista index by integer;
/*Contem os parametros do SQL*/

ds_assuntos_w myArray;

/* Abre conexão SMTP e HTTP */

CONEXAO	UTL_SMTP.CONNECTION;
BEGIN


ds_servidor_envio2_w		:= substr(obter_parametro_funcao(0,20,nm_usuario_p),1,60);
ds_user_id2_w				:= substr(obter_parametro_funcao(0,38,nm_usuario_p),1,60);
ds_senha_smtp2_w			:= substr(obter_parametro_funcao(0,40,nm_usuario_p),1,60);
ds_porta_serial_envio2_w	:= substr(obter_parametro_funcao(0,109,nm_usuario_p),1,60);
ie_utilizar_ssl2_w			:= substr(obter_parametro_funcao(0,110,nm_usuario_p),1,60);
ie_metodo_autenticacao_w 	:= substr(obter_parametro_funcao(0,125,nm_usuario_p),1,60);

ie_autenticar_w := ('S' = OBTER_VALOR_PARAM_USUARIO(0,96,Obter_perfil_Ativo,nm_usuario_p,1));

if (coalesce(ds_email_destino_p::text, '') = '') then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(189136);
elsif (coalesce(ds_email_origem_p::text, '') = '') then
	begin
		select	max(ds_email)
		into STRICT	ds_email_origem_w
		from	usuario
		where	nm_usuario	= nm_usuario_p;
		if (coalesce(ds_email_origem_w::text, '') = '') then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(189137,'NM_USUARIO='||nm_usuario_p);
		end if;
	end;
else
	ds_email_origem_w	:= ds_email_origem_p;
end if;

/* Busca a senha do e-mail do cadastro de usuario*/

select	max(ds_senha_email),
	max(ds_conta_email)
into STRICT	ds_senha_email_usuario_w,
	ds_conta_email_w
from	usuario
where	nm_usuario	= nm_usuario_p;

if (ds_senha_email_usuario_w IS NOT NULL AND ds_senha_email_usuario_w::text <> '') then
	ds_senha_email_usuario_w := wheb_seguranca.decrypt(ds_senha_email_usuario_w);
end if;

if (ds_servidor_envio2_w IS NOT NULL AND ds_servidor_envio2_w::text <> '') then -- Piccini - 04/02/2011
	ds_smtp_w	:= ds_servidor_envio2_w;
else
	ds_smtp_w := OBTER_VALOR_PARAM_USUARIO(0,20,0,nm_usuario_p,1);
	if (coalesce(ds_smtp_w::text, '') = '') then
		select	ds_parametro
		into STRICT	ds_parametro_w
		from	funcao_parametro
		where	cd_funcao	= 0
		and	nr_sequencia	= 20;
		CALL wheb_mensagem_pck.exibir_mensagem_abort(189138,'DS_PARAMETRO='||ds_parametro_w);
	end if;
end	if;

/*Busca o ID de autenticação do parametro*/

if (ds_conta_email_w IS NOT NULL AND ds_conta_email_w::text <> '') then
	ds_user_id_w := ds_conta_email_w;
elsif (ds_user_id2_w IS NOT NULL AND ds_user_id2_w::text <> '') then
	ds_user_id_w := ds_user_id2_w;
else
	ds_user_id_w := OBTER_VALOR_PARAM_USUARIO(0,38,Obter_perfil_Ativo,nm_usuario_p,1);
	if (coalesce(ds_user_id_w::text, '') = '') and ( ie_autenticar_w ) then
		select	ds_parametro
		into STRICT	ds_parametro_w
		from	funcao_parametro
		where	cd_funcao	= 0
		and	nr_sequencia	= 38;
		CALL wheb_mensagem_pck.exibir_mensagem_abort(189138,'DS_PARAMETRO='||ds_parametro_w);
	end if;
end	if;

/*Busca senha do parametro somente se não tiver senha cadastrada para o usuario*/

if (ds_senha_smtp2_w IS NOT NULL AND ds_senha_smtp2_w::text <> '') then
	ds_senha_smtp_w := ds_senha_smtp2_w;
elsif ( coalesce(ds_senha_email_usuario_w::text, '') = '') then
	ds_senha_smtp_w := OBTER_VALOR_PARAM_USUARIO(0,40,Obter_perfil_Ativo,nm_usuario_p,1);
	if (coalesce(ds_senha_smtp_w::text, '') = '') and ( ie_autenticar_w ) then
		select	ds_parametro
		into STRICT	ds_parametro_w
		from	funcao_parametro
		where	cd_funcao	= 0
		and	nr_sequencia	= 40;
		CALL wheb_mensagem_pck.exibir_mensagem_abort(189138,'DS_PARAMETRO='||ds_parametro_w);
	end if;
else
	ds_senha_smtp_w := ds_senha_email_usuario_w;
end if;

if (ie_prioridade_p = 'A') then
	qt_prioridade_w := 1;
elsif (ie_prioridade_p = 'M') then
	qt_prioridade_w := 3;
else
	qt_prioridade_w := 5;
end if;

ie_solic_receb_email_w 	:= OBTER_VALOR_PARAM_USUARIO(0,44,0,nm_usuario_p,1);
if (ds_porta_serial_envio2_w IS NOT NULL AND ds_porta_serial_envio2_w::text <> '') then
	nr_porta_w	:= ds_porta_serial_envio2_w;
else
	nr_porta_w	:= OBTER_VALOR_PARAM_USUARIO(0,109,0,nm_usuario_p,1);
end	if;

if (ie_utilizar_ssl2_w IS NOT NULL AND ie_utilizar_ssl2_w::text <> '') then
	ie_ssl_w	:= ie_utilizar_ssl2_w;
else
	ie_ssl_w	:= OBTER_VALOR_PARAM_USUARIO(0,110,0,nm_usuario_p,1);
end	if;

if ( ie_ssl_w = 'S') then

	ie_ssl_param_w := 'S';

	if (ie_metodo_autenticacao_w = '4') then
		ie_ssl_param_w := 'T';
	end if;

	CALL enviar_email_ssl(ds_assunto_p,ds_mensagem_p,ds_email_origem_w,replace(ds_email_destino_p,',',';'),ds_user_id_w,ds_senha_smtp_w,ds_smtp_w,nr_porta_w,ie_ssl_param_w,ie_solic_receb_email_w,qt_prioridade_w);
else
	/* Para pegar a versão do banco */

	SELECT	SUBSTR(value,1,1)
	INTO STRICT	ds_versao_w
	FROM	NLS_DATABASE_PARAMETERS
	WHERE	parameter = 'NLS_RDBMS_VERSION';
	/* Abre conexão com um Servidor SMTP(Simple Mail Transfer Protocol), porta padrão SMTP é 25 */

	CONEXAO	:= utl_smtp.open_connection(ds_smtp_w,nr_porta_w);
	begin
		UTL_SMTP.HELO(CONEXAO, ds_smtp_w);			/* Endereço do servidor de SMTP	*/
	exception
		when others then
			UTL_SMTP.EHLO(CONEXAO, ds_smtp_w);
	end;
	if (ie_autenticar_w ) then
		utl_smtp.command(CONEXAO, 'AUTH LOGIN');
		if	((ds_versao_w	= '9') or (ds_versao_w	= '1')) then
			begin
		 	C001 := DBMS_SQL.OPEN_CURSOR;
			ds_comando_w := 'select utl_encode.base64_encode(utl_raw.cast_to_raw('|| chr(39) || ds_user_id_w || chr(39) ||')) from dual';
			DBMS_SQL.PARSE(C001, ds_comando_w, dbms_sql.native);
			DBMS_SQL.DEFINE_COLUMN_RAW(c001, 1, ds_user_raw_w, 32767);
			retorno_w := DBMS_SQL.execute(c001);
			retorno_w := DBMS_SQL.fetch_rows(c001);
			DBMS_SQL.COLUMN_VALUE_RAW(C001, 1, ds_user_raw_w);
			DBMS_SQL.CLOSE_CURSOR(C001);
			exception
			when others then
				DBMS_SQL.CLOSE_CURSOR(C001);
			end;
			begin
			C001 := DBMS_SQL.OPEN_CURSOR;
			ds_comando_w := 'select utl_encode.base64_encode(utl_raw.cast_to_raw('|| chr(39) || ds_senha_smtp_w || chr(39) ||')) from dual';
			DBMS_SQL.PARSE(C001, ds_comando_w, dbms_sql.native);
			DBMS_SQL.DEFINE_COLUMN_RAW(c001, 1, ds_pwd_raw_w, 32767);
			retorno_w := DBMS_SQL.execute(c001);
			retorno_w := DBMS_SQL.fetch_rows(c001);
			DBMS_SQL.COLUMN_VALUE_RAW(C001, 1, ds_pwd_raw_w);
			DBMS_SQL.CLOSE_CURSOR(C001);
			exception
			when others then
				DBMS_SQL.CLOSE_CURSOR(C001);
			end;
			utl_smtp.command(CONEXAO, utl_raw.cast_to_varchar2(ds_user_raw_w));
			utl_smtp.command(CONEXAO, utl_raw.cast_to_varchar2(ds_pwd_raw_w));
		else
			EXECUTE 'utl_smtp.command (CONEXAO, demo_base64.encode(utl_raw.cast_to_raw((ds_user_id_w))))';
			EXECUTE 'utl_smtp.command (CONEXAO, demo_base64.encode(utl_raw.cast_to_raw((ds_senha_smtp_w))))';
		end if;
	end if;
	UTL_SMTP.MAIL(CONEXAO, ('<' || ds_email_origem_w || '>'));		/* E-mail de quem está mandando	*/
	/* Trata mais de um e-mail de destino separado por vírgula ou ponto e virgula*/

	if (position(',' in ds_email_destino_p) > 0) or (position(';' in ds_email_destino_p) > 0) then
	   ds_email_destino_w      := substr(ds_email_destino_p,1,32000);
	   while(qt_reg_w = 0) and (length(ds_email_destino_w) > 0) loop
	           begin
	           vl_pos_w        := position(',' in ds_email_destino_w);
		   if (vl_pos_w <= 0 ) then
			vl_pos_w        := position(';' in ds_email_destino_w);
		   end if;
	           if (vl_pos_w > 0)  then
	                   ds_email_destino_w2     := substr(ds_email_destino_w, 1,                (vl_pos_w - 1));
	                   ds_email_destino_w      := substr(ds_email_destino_w, (vl_pos_w + 1),   length(ds_email_destino_w));
	           else
	                   ds_email_destino_w2     := ds_email_destino_w;
	                   ds_email_destino_w      := '';
	           end     if;
	           utl_smtp.RCPT(conexao, ('<' || ds_email_destino_w2 || '>'));
	           end;
	   end loop;
	else
		UTL_SMTP.RCPT(CONEXAO, ('<' || ds_email_destino_p  || '>'));		/* Para quem vou mandar */
	end	if;

	/* Trata mais de um e-mail de cco separado por vírgula ou ponto e virgula*/

	if (ds_email_cco_p IS NOT NULL AND ds_email_cco_p::text <> '') then
		if (position(',' in ds_email_cco_p) > 0) or (position(';' in ds_email_cco_p) > 0) then
		   ds_email_cco_w      := substr(ds_email_cco_p,1,32000);
		   while(qt_reg_w = 0) and (length(ds_email_cco_w) > 0) loop
			   begin
			   vl_pos_w        := position(',' in ds_email_cco_w);
			   if (vl_pos_w <= 0 ) then
				vl_pos_w        := position(';' in ds_email_cco_w);
			   end if;
			   if (vl_pos_w > 0)  then
				   ds_email_cco_w2     := substr(ds_email_cco_w, 1,                (vl_pos_w - 1));
				   ds_email_cco_w      := substr(ds_email_cco_w, (vl_pos_w + 1),   length(ds_email_cco_w));
			   else
				   ds_email_cco_w2     := ds_email_cco_w;
				   ds_email_cco_w      := '';
			   end     if;
			   utl_smtp.RCPT(conexao, ('<' || ds_email_cco_w2 || '>'));
			   end;
		   end loop;
		else
			UTL_SMTP.RCPT(CONEXAO, ('<' || ds_email_cco_p  || '>'));		/* Para quem vou mandar */
		end	if;
	end if;

	if	((ds_versao_w	= '9') or (ds_versao_w	= '1')) then
		begin


		ds_assunto_aux_w := ds_assunto_p;
		qt_reg_w := 0;
		/*Coelho 28/10/2009 OS171924*/

		while(length(ds_assunto_aux_w) > 0) and ( qt_reg_w < 100 ) loop
			begin
			ds_comando_w := 'select UTL_RAW.CAST_TO_VARCHAR2(UTL_ENCODE.QUOTED_PRINTABLE_ENCODE(UTL_RAW.CAST_TO_RAW('|| chr(39) || substr(ds_assunto_aux_w,1,20) ||chr(39) ||'))) from dual';
			C001 := DBMS_SQL.OPEN_CURSOR;
			DBMS_SQL.PARSE(C001, ds_comando_w, dbms_sql.native);
			DBMS_SQL.DEFINE_COLUMN(c001, 1, ds_assunto_w, 255);
			retorno_w := DBMS_SQL.execute(c001);
			retorno_w := DBMS_SQL.fetch_rows(c001);
			DBMS_SQL.COLUMN_VALUE(C001, 1, ds_assunto_w);
			DBMS_SQL.CLOSE_CURSOR(C001);

			ds_assuntos_w[qt_reg_w].ds := ds_assunto_w;
			qt_reg_w := qt_reg_w + 1;
			ds_assunto_aux_w := substr(ds_assunto_aux_w,21,length(ds_assunto_aux_w));

			end;
		end loop;

		exception
		when others then
			DBMS_SQL.CLOSE_CURSOR(C001);
		end;

	else
		ds_assunto_w := ds_assunto_p;
	end if;

	/*Coelho 04/09/2007 OS60447*/
 /*Formato da data OS162024*/

	cabecalho_mensagem_w :='Date : ' || to_char(CURRENT_TIMESTAMP, 'Dy, dd Mon yyyy hh24:mi:ss tzhtzm','NLS_DATE_LANGUAGE=American') || utl_tcp.CRLF ||
				'From: ' || ds_email_origem_w						|| utl_tcp.CRLF ||
				'To: '	 || ds_email_destino_p						|| utl_tcp.CRLF ||
				'X-Priority: ' || qt_prioridade_w					|| utl_tcp.CRLF ||
				'X-MSMail-Priority: Hight' 						|| utl_tcp.CRLF ||
				'Subject:';
	/*Coelho 28/10/2009 OS171924*/

	for i in 0..ds_assuntos_w.count-1 loop
		begin
			cabecalho_mensagem_w := cabecalho_mensagem_w || ' =?ISO-8859-1?Q?' || ds_assuntos_w[i].ds || '?=' || utl_tcp.CRLF;
		end;
	end loop;

	cabecalho_mensagem_w := cabecalho_mensagem_w ||
				'MIME-version: 1.0' 					|| utl_tcp.CRLF ||
				'Content-Type: text/html; charset=ISO-8859-1' 		|| utl_tcp.CRLF ||
				'Content-Transfer-Encoding: 8bit'			|| utl_tcp.CRLF ||
				'X-Mailer: WhebSistemas' 				|| utl_tcp.CRLF ||
				'X-MimeOLE: WhebSistemas'				|| utl_tcp.CRLF;
	/*Coelho 18/03/2008  OS85935*/

	if (ie_solic_receb_email_w = 'S') then
				cabecalho_mensagem_w := cabecalho_mensagem_w ||
					'Disposition-Notification-To: '||nm_usuario_p||' <'||ds_email_origem_w||'>' || utl_tcp.CRLF;
	end if;
	UTL_SMTP.OPEN_DATA(CONEXAO);
	UTL_SMTP.WRITE_DATA(CONEXAO,cabecalho_mensagem_w ); /* A cabecalho_mensagem_w precisa terminar com utl_tcp.CRLF */
	UTL_SMTP.WRITE_RAW_DATA(CONEXAO,encode(utl_tcp.CRLF|| ds_mensagem_p || utl_tcp.CRLF::bytea, 'hex')::bytea);
	UTL_SMTP.CLOSE_DATA(CONEXAO);
	UTL_SMTP.QUIT(CONEXAO);
end if;
Exception
	WHEN OTHERS THEN
	   utl_smtp.quit(conexao);
	   CALL wheb_mensagem_pck.exibir_mensagem_abort(189139,'SQLERRM='||sqlerrm);
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE autor_conv_enviar_email_html ( ds_assunto_p text, ds_mensagem_p text, ds_email_origem_p text, ds_email_destino_p text, nm_usuario_p text, ie_prioridade_p text, ds_email_cco_p text default null) FROM PUBLIC;

