-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE hd_dialisador_montar_dialse ( cd_pessoa_fisica_p text, nr_seq_lote_fornecedor_p bigint, cd_material_p bigint, nr_atendimento_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, nr_seq_dialisador_p INOUT bigint, nr_digito_verif_p bigint, nr_dialisador_p bigint, ie_baixa_conta_p text default 'S') AS $body$
DECLARE

					
nr_sequencia_w		bigint;
nr_seq_unid_dialise_w	bigint;	
nr_seq_modelo_w		bigint;
nr_lote_w		varchar(20);	
qt_priming_w		double precision;	
cd_profissional_w	varchar(10);
ie_baixa_estoque_w	varchar(1);
nr_seq_material_w	bigint;	
nr_capilar_prc_w	bigint;
qt_dialisador_desc_w	bigint;
ie_insere_dial_desc_w	varchar(1);
nr_dialisador_w		bigint;
					

BEGIN

if (cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') and (nr_seq_lote_fornecedor_p IS NOT NULL AND nr_seq_lote_fornecedor_p::text <> '') and (cd_material_p IS NOT NULL AND cd_material_p::text <> '') then
	
	ie_baixa_estoque_w := obter_param_usuario(7009, 85, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_baixa_estoque_w);
	ie_insere_dial_desc_w := obter_param_usuario(7009, 156, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_insere_dial_desc_w);
	
	Select 	max(nr_seq_modelo_dialisador)
	into STRICT	nr_seq_modelo_w
	from 	material 
	where 	cd_material = cd_material_p;
	
	Select 	max(ds_lote_fornec)
	into STRICT	nr_lote_w
	from 	material_lote_fornec 
	where 	nr_sequencia = nr_seq_lote_fornecedor_p;

	select 	hd_obter_priming_fabrica(nr_seq_modelo_w)
	into STRICT	qt_priming_w
	;	
	
	
	if (ie_insere_dial_desc_w = 'N') then
		select	count(*)
		into STRICT	qt_dialisador_desc_w
		from	hd_dializador
		where	coalesce(dt_descarte::text, '') = ''
		and	cd_pessoa_fisica = cd_pessoa_fisica_p;
		
		if (qt_dialisador_desc_w > 0) then
			CALL WHEB_MENSAGEM_PCK.Exibir_Mensagem_Abort(66112);
		end if;
	elsif (ie_insere_dial_desc_w = 'M') then
		select	count(*)
		into STRICT	qt_dialisador_desc_w
		from	hd_dializador
		where	coalesce(dt_descarte::text, '') = ''
		and	cd_pessoa_fisica = cd_pessoa_fisica_p
		and	ie_tipo <> 'M';
		
		if (qt_dialisador_desc_w > 0) then
			CALL WHEB_MENSAGEM_PCK.Exibir_Mensagem_Abort(66112);
		end if;
	end if;
	
	
	cd_profissional_w := obter_pf_usuario(nm_usuario_p,'C');
	
	nr_seq_unid_dialise_w := (HD_Obter_Unidade_PRC(cd_pessoa_fisica_p,'C'))::numeric;	
				
	if (coalesce(nr_seq_modelo_w::text, '') = '') or (coalesce(nr_lote_w::text, '') = '') then
		CALL WHEB_MENSAGEM_PCK.Exibir_Mensagem_Abort(247005);
	end if;
	
	CALL hd_consiste_modelo_dialisador(nr_seq_modelo_w,cd_pessoa_fisica_p,nm_usuario_p);
	CALL hd_consistir_cad_dialisador(cd_material_p,cd_pessoa_fisica_p,obter_perfil_ativo,nm_usuario_p,cd_estabelecimento_p);
	
	select 	coalesce(max(nr_capilar_prc),0) +1
	into STRICT	nr_capilar_prc_w
	from 	hd_dializador
	where 	cd_pessoa_fisica = cd_pessoa_fisica_p;
	
	if (coalesce(nr_capilar_prc_w::text, '') = '') or (nr_capilar_prc_w = 0) then
		nr_capilar_prc_w := 1;
	end if;
	
	select	nextval('hd_dializador_seq')
	into STRICT	nr_sequencia_w
	;	
	
	insert into hd_dializador(	
		nr_sequencia,
		nr_dializador,
		ie_tipo,
		nr_seq_unid_dialise,
		nr_seq_modelo,
		nr_lote,
		dt_priming,
		qt_priming,
		qt_reuso,
		nr_max_reuso,
		cd_estabelecimento,
		dt_atualizacao,
		nm_usuario,
		cd_pessoa_fisica,
		cd_material,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		ie_status,
		dt_prim_lavagem,
		cd_profissional,
		nr_seq_lote_fornecedor,
		dt_definido_paciente,
		nr_capilar_prc,
		nr_digito_verif)
	values (	nr_sequencia_w,
		nr_dialisador_p,
		'U',
		nr_seq_unid_dialise_w,
		nr_seq_modelo_w,
		nr_lote_w,
		clock_timestamp(),		
		qt_priming_w,
		0,
		1,
		cd_estabelecimento_p,
		clock_timestamp(),
		nm_usuario_p,
		cd_pessoa_fisica_p,
		cd_material_p,
		clock_timestamp(),
		nm_usuario_p,
		'O',
		clock_timestamp(),
		cd_profissional_w,
		nr_seq_lote_fornecedor_p,
		clock_timestamp(),
		nr_capilar_prc_w,
		nr_digito_verif_p);
		
	begin
		if (ie_baixa_conta_p = 'S') then
			nr_seq_material_w := HD_Inserir_Material_Dialisador(nr_atendimento_p, cd_material_p, nm_usuario_p, 1, wheb_usuario_pck.get_cd_setor_atendimento, nr_seq_lote_fornecedor_p, nr_seq_material_w, nr_sequencia_w);
		end if;
		
	exception when others then
		null;
	end;	
	nr_seq_dialisador_p := 	nr_sequencia_w;
end if;
commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE hd_dialisador_montar_dialse ( cd_pessoa_fisica_p text, nr_seq_lote_fornecedor_p bigint, cd_material_p bigint, nr_atendimento_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, nr_seq_dialisador_p INOUT bigint, nr_digito_verif_p bigint, nr_dialisador_p bigint, ie_baixa_conta_p text default 'S') FROM PUBLIC;

