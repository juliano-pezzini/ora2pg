-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualiza_preparo_ordem_quimio ( ie_opcao_p text, nr_seq_ordem_p bigint, nr_seq_etapa_p bigint, ie_consiste_perfil_p text, cd_pessoa_fisica_p text, nm_usuario_p text, cd_estabelecimento_p bigint, ie_finaliza_funcao_p INOUT text, ds_pergunta_p INOUT text, ds_erro_p INOUT text) AS $body$
DECLARE


/*	ie_opcao_p
	I - iniciar
	FD - obter dados para finalizar
	F - finalizar
	*/
ie_perfil_liberado_w		varchar(1);
ie_consiste_medic_disp_w	varchar(1);
ie_permite_prep_ordem_prep_w	varchar(1);
ie_itens_cabine_preparo_w	varchar(1);
ie_valida_w			varchar(1);
ie_atualiza_data_validade_w	varchar(1);
ie_altera_manipulador_w		varchar(1);
ie_informa_manipulador_w     varchar(1);
cd_manipulador_w		varchar(10);
co_registra_usuario_logado constant varchar(1) := 'L';
co_exibe_escolha_manipulador constant varchar(1) := 'S';


BEGIN

ie_altera_manipulador_w := obter_param_usuario(3130, 248, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_altera_manipulador_w);
ie_informa_manipulador_w := obter_param_usuario(3130, 303, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_informa_manipulador_w);

ie_finaliza_funcao_p	:= 'N';

if (ie_consiste_perfil_p = 'S') then
	begin
	ie_perfil_liberado_w	:= obter_se_perfil_liberado(obter_perfil_ativo, 3130, nm_usuario_p);

	if (ie_perfil_liberado_w = 'N') then
		ie_finaliza_funcao_p	:= 'S';
	end if;
	end;
end if;

if (ie_finaliza_funcao_p = 'N') then
	begin
	if (ie_opcao_p = 'I') then
		begin
		/* Quimioterapia - Parametro [43] - Permite iniciar o preparo para a ordem, mesmo tendo outra ordem em preparo na etapa */

		ie_permite_prep_ordem_prep_w := obter_param_usuario(3130, 43, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_permite_prep_ordem_prep_w);

		if (ie_permite_prep_ordem_prep_w = 'N') then
			begin
			select	CASE WHEN count(*)=0 THEN  'N'  ELSE 'S' END
			into STRICT	ie_itens_cabine_preparo_w
			from	can_ordem_prod
			where	(dt_inicio_preparo IS NOT NULL AND dt_inicio_preparo::text <> '')
			and	coalesce(dt_fim_preparo::text, '') = ''
			and	nr_seq_etapa_prod = nr_seq_etapa_p;

			if (ie_itens_cabine_preparo_w = 'S') then
				begin
				ds_erro_p	:= substr(obter_texto_tasy(63929, wheb_usuario_pck.get_nr_seq_idioma),1,255);
				end;
			end if;

			end;
		end if;

		if (coalesce(ds_erro_p::text, '') = '') then
			begin
			update	can_ordem_prod
			set	dt_inicio_preparo	= clock_timestamp(),
				nm_usuario	= nm_usuario_p,
				nm_usuario_inic_prep = nm_usuario_p
			where	nr_sequencia	= nr_seq_ordem_p;

			if (ie_informa_manipulador_w = co_registra_usuario_logado
			or ie_informa_manipulador_w = co_exibe_escolha_manipulador) then
				update can_ordem_prod
				set cd_manipulador	= cd_pessoa_fisica_p
				where nr_sequencia = nr_seq_ordem_p;
			end if;
			
			if (ie_atualiza_data_validade_w = 'S') then
				CALL atualizar_validade_rotulo(nr_seq_ordem_p);
			end if;	
			end;
		end if;
		end;

	elsif (ie_opcao_p = 'FD') then
		begin
		ie_valida_w := valida_dose_mistura(nr_seq_ordem_p, ie_valida_w);

		if (ie_valida_w = 'N') then
			ds_pergunta_p	:= substr(obter_texto_tasy(63939, wheb_usuario_pck.get_nr_seq_idioma),1,255);
		end if;
		end;

	elsif (ie_opcao_p = 'F') then
		begin
		/* Quimioterapia - Parametro [170] - Consistir de todos os medicamentos foram lancados ao dispensar ordem */

		ie_consiste_medic_disp_w := obter_param_usuario(3130, 170, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_consiste_medic_disp_w);

		if (ie_consiste_medic_disp_w = 'S') then
			ie_consiste_medic_disp_w	:= obter_se_medic_manip_quimio(nr_seq_ordem_p);
		end if;

		CALL atualizar_validade_rotulo(nr_seq_ordem_p);
		
		select 	max(cd_manipulador)
		into STRICT	cd_manipulador_w
		from 	can_ordem_prod
		where	nr_sequencia	= nr_seq_ordem_p;

		if (ie_altera_manipulador_w = 'N') or (coalesce(cd_manipulador_w,0) = 0) then
			update	can_ordem_prod
			set	dt_fim_preparo	= clock_timestamp(),
				nm_usuario	= nm_usuario_p,
				cd_manipulador	= cd_pessoa_fisica_p,
				nm_usuario_fim_prep = nm_usuario_p
			where	nr_sequencia	= nr_seq_ordem_p;
		else
			update	can_ordem_prod
			set	dt_fim_preparo	= clock_timestamp(),
				nm_usuario	= nm_usuario_p
			where	nr_sequencia	= nr_seq_ordem_p;
		end if;
		end;
	end if;
	end;
end if;

ie_atualiza_data_validade_w := obter_param_usuario(3130, 214, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_atualiza_data_validade_w);

if (ie_atualiza_data_validade_w = 'S') and (ie_opcao_p <> 'I') then
	begin
	update 	can_ordem_prod
	set 	dt_validade_ordem = obter_menor_validade(nr_sequencia),
		dt_validade_rotulo = obter_menor_validade(nr_sequencia),
		dt_fim_preparo = clock_timestamp()
	where	nr_sequencia	= nr_seq_ordem_p;
	end;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualiza_preparo_ordem_quimio ( ie_opcao_p text, nr_seq_ordem_p bigint, nr_seq_etapa_p bigint, ie_consiste_perfil_p text, cd_pessoa_fisica_p text, nm_usuario_p text, cd_estabelecimento_p bigint, ie_finaliza_funcao_p INOUT text, ds_pergunta_p INOUT text, ds_erro_p INOUT text) FROM PUBLIC;

