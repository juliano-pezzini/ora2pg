-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_relat_preco_prest (nm_usuario_p text, nr_seq_prestador_p bigint, cd_prestador_p text, cd_especialidade_p bigint, cd_procedimento_p bigint, cd_grupo_proc_p bigint, cd_especialidade_proc_p bigint, cd_edicao_amb_p bigint, cd_municipio_ibge_p text, sg_estado_p text) AS $body$
DECLARE

 
/*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
Finalidade: 
------------------------------------------------------------------------------------------------------------------- 
Locais de chamada direta: 
[ ] Objetos do dicionário [ ] Tasy (Delphi/Java) [ ] Portal [ ] Relatórios [ ] Outros: 
 ------------------------------------------------------------------------------------------------------------------ 
Pontos de atenção: 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/ 
 
nr_seq_prestador_w		bigint;
cd_prestador_w			varchar(30);
nm_fantasia_w			varchar(255);
nr_seq_regra_w			bigint;
dt_inicio_vigencia_w		timestamp;
cd_area_procedimento_w		bigint;
cd_especialidade_w		bigint;
cd_grupo_proc_w			bigint;
cd_procedimento_w		bigint;
nr_seq_grupo_rec_w		bigint;
cd_edicao_amb_w			integer;
ds_procedimento_w		varchar(255);
cd_item_w			numeric(20);
cd_lancamento_w			numeric(20);
ds_item_w			varchar(255);
ie_tipo_w			varchar(2);
ie_origem_proced_w		bigint;
ie_origem_item_w		bigint;
nr_seq_relatorio_w		bigint;
ds_edicao_amb_w			varchar(255);
vl_procedimento_w		double precision;
qt_commit_w			bigint := 0;
ie_insere_w			varchar(1);
cd_pessoa_fisica_w		varchar(10);
cd_cgc_w			varchar(14);
ie_tipo_endereco_w		varchar(4);
nr_seq_compl_pf_tel_adic_w	bigint;

C01 CURSOR FOR 
	SELECT	a.nr_sequencia, 
		a.cd_prestador, 
		x.nr_sequencia, 
		x.dt_inicio_vigencia, 
		x.cd_area_procedimento, 
		x.cd_especialidade, 
		x.cd_grupo_proc, 
		x.cd_procedimento, 
		x.nr_seq_grupo_rec, 
		x.cd_edicao_amb, 
		substr((SELECT	coalesce(max(z.ds_edicao_amb),' ') from edicao_amb z where z.cd_edicao_amb = x.cd_edicao_amb),1,255), 
		x.ie_origem_proced, 
		a.cd_pessoa_fisica, 
		a.cd_cgc, 
		a.ie_tipo_endereco, 
		a.nr_seq_compl_pf_tel_adic 
	from	pls_prestador		a, 
		pls_regra_preco_proc	x 
	where	a.nr_sequencia		= x.nr_seq_prestador 
	and	a.nr_sequencia 		= coalesce(nr_seq_prestador_p,a.nr_sequencia) 
	and (a.cd_prestador		= cd_prestador_p or coalesce(cd_prestador_p::text, '') = '') 
	and (x.cd_procedimento	= cd_procedimento_p or coalesce(cd_procedimento_p::text, '') = '') 
	and (x.cd_grupo_proc	= cd_grupo_proc_p or coalesce(cd_grupo_proc_p::text, '') = '') 
	and (x.cd_especialidade	= cd_especialidade_proc_p or coalesce(cd_especialidade_proc_p::text, '') = '') 
	and (x.cd_edicao_amb	= cd_edicao_amb_p or coalesce(cd_edicao_amb_p::text, '') = '') 
	and (coalesce(cd_especialidade_p::text, '') = '' or exists (	select	1 
							from	pls_prestador_med_espec e 
							where	a.nr_sequencia		= e.nr_seq_prestador 
							and	clock_timestamp() between trunc(coalesce(e.dt_inicio_vigencia, clock_timestamp())) and fim_dia(coalesce(e.dt_fim_vigencia, clock_timestamp())) 
							and	e.cd_especialidade	= cd_especialidade_p)) 
	order by 
		a.nr_sequencia, 
		x.nr_sequencia;
	
C02 CURSOR FOR 
	-- AREA PROCEDIMENTO 
	SELECT	cd_procedimento, 
		ds_procedimento, 
		ie_origem_proced 
	from	estrutura_procedimento_v 
	where	cd_area_procedimento	= cd_area_procedimento_w 
	and	ie_tipo_w		= 'AP' 
	
union
 
	-- ESPECIALIDADE PROCEDIMENTO 
	SELECT	cd_procedimento, 
		ds_procedimento, 
		ie_origem_proced 
	from	estrutura_procedimento_v 
	where	cd_especialidade	= cd_especialidade_w 
	and	ie_tipo_w		= 'EP' 
	
union
 
	-- GRUPO PROCEDIMENTO 
	select	cd_procedimento, 
		ds_procedimento, 
		ie_origem_proced 
	from	estrutura_procedimento_v 
	where	cd_grupo_proc	= cd_grupo_proc_w 
	and	ie_tipo_w	= 'GP' 
	
union
 
	-- GRUPO RECEITA PROCEDIMENTO 
	select	cd_procedimento, 
		ds_procedimento, 
		ie_origem_proced 
	from	procedimento 
	where	nr_seq_grupo_rec	= nr_seq_grupo_rec_w 
	and	ie_tipo_w		= 'GR' 
	
union
 
	-- PROCEDIMENTO 
	select	cd_procedimento, 
		ds_procedimento, 
		ie_origem_proced 
	from	procedimento 
	where	cd_procedimento		= cd_procedimento_w 
	and	ie_origem_proced	= ie_origem_proced_w 
	and	ie_tipo_w		= 'PR';


BEGIN 
delete	FROM w_pls_relat_preco_prest 
where	nm_usuario	= nm_usuario_p 
or	trunc(dt_atualizacao) < trunc(clock_timestamp());
 
commit;
 
open C01;
loop 
fetch C01 into	 
	nr_seq_prestador_w, 
	cd_prestador_w, 
	nr_seq_regra_w, 
	dt_inicio_vigencia_w, 
	cd_area_procedimento_w, 
	cd_especialidade_w, 
	cd_grupo_proc_w, 
	cd_procedimento_w, 
	nr_seq_grupo_rec_w, 
	cd_edicao_amb_w, 
	ds_edicao_amb_w, 
	ie_origem_proced_w, 
	cd_pessoa_fisica_w, 
	cd_cgc_w, 
	ie_tipo_endereco_w, 
	nr_seq_compl_pf_tel_adic_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	if (cd_municipio_ibge_p IS NOT NULL AND cd_municipio_ibge_p::text <> '') or (sg_estado_p IS NOT NULL AND sg_estado_p::text <> '') then 
		ie_insere_w	:=	pls_obter_se_prest_endereco(	cd_pessoa_fisica_w, 
									cd_cgc_w, 
									ie_tipo_endereco_w, 
									nr_seq_compl_pf_tel_adic_w, 
									cd_municipio_ibge_p, 
									sg_estado_p, 
									null, 
									null, 
									null);
	else 
		ie_insere_w	:= 'S';
	end if;
	 
	if (ie_insere_w = 'S') then 
		if (cd_area_procedimento_w IS NOT NULL AND cd_area_procedimento_w::text <> '') then 
			cd_lancamento_w := cd_area_procedimento_w;
			ie_tipo_w	:= 'AP';
		 
		elsif (cd_especialidade_w IS NOT NULL AND cd_especialidade_w::text <> '') then 
			cd_lancamento_w := cd_especialidade_w;
			ie_tipo_w	:= 'EP';
		 
		elsif (cd_grupo_proc_w IS NOT NULL AND cd_grupo_proc_w::text <> '') then 
			cd_lancamento_w := cd_grupo_proc_w;
			ie_tipo_w	:= 'GP';
		 
		elsif (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') then 
			cd_lancamento_w := cd_procedimento_w;
			ie_tipo_w	:= 'PR';
		 
		elsif (nr_seq_grupo_rec_w IS NOT NULL AND nr_seq_grupo_rec_w::text <> '') then 
			cd_lancamento_w := nr_seq_grupo_rec_w;
			ie_tipo_w	:= 'GR';
		end if;	
		 
		if (ie_tipo_w IS NOT NULL AND ie_tipo_w::text <> '') then 
			nm_fantasia_w	:= substr(obter_dados_pf_pj(cd_pessoa_fisica_w, cd_cgc_w, 'F'),1,255);
			 
			open C02;
			loop 
			fetch C02 into	 
				cd_item_w, 
				ds_item_w, 
				ie_origem_item_w;
			EXIT WHEN NOT FOUND; /* apply on C02 */
				begin 
				select	nextval('w_pls_relat_preco_prest_seq') 
				into STRICT	nr_seq_relatorio_w 
				;
				 
				select	coalesce(max(vl_procedimento),0) 
				into STRICT	vl_procedimento_w 
				from	preco_amb 
				where	cd_edicao_amb		= cd_edicao_amb_w 
				and	cd_procedimento		= cd_item_w 
				and	ie_origem_proced	= ie_origem_item_w;
				 
				insert into w_pls_relat_preco_prest(nr_sequencia, 
					nm_usuario, 
					dt_atualizacao, 
					nm_usuario_nrec, 
					dt_atualizacao_nrec, 
					cd_prestador, 
					nm_fantasia, 
					dt_inicio_vigencia, 
					cd_lancamento, 
					nr_seq_regra, 
					cd_item, 
					ds_item, 
					ds_edicao_amb, 
					vl_procedimento) 
				values (nr_seq_relatorio_w, 
					nm_usuario_p, 
					clock_timestamp(), 
					nm_usuario_p, 
					clock_timestamp(), 
					cd_prestador_w, 
					nm_fantasia_w, 
					dt_inicio_vigencia_w, 
					cd_lancamento_w, 
					nr_seq_regra_w, 
					cd_item_w, 
					ds_item_w, 
					substr(to_char(cd_edicao_amb_w) || ' - ' || ds_edicao_amb_w,1,255), 
					vl_procedimento_w);	
					 
				qt_commit_w	:= qt_commit_w + 1;
				 
				if (qt_commit_w > 300) then 
					commit;
					 
					qt_commit_w	:= 0;
				end if;
				end;
			end loop;
			close C02;
		end if;	
	end if;
	end;
end loop;
close C01;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_relat_preco_prest (nm_usuario_p text, nr_seq_prestador_p bigint, cd_prestador_p text, cd_especialidade_p bigint, cd_procedimento_p bigint, cd_grupo_proc_p bigint, cd_especialidade_proc_p bigint, cd_edicao_amb_p bigint, cd_municipio_ibge_p text, sg_estado_p text) FROM PUBLIC;

