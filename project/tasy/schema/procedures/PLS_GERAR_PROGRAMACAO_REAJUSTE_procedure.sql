-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_programacao_reajuste ( nr_seq_lote_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


dt_reajuste_w			timestamp;
dt_reajuste_ano_w		timestamp;
dt_reajuste_mes_w		varchar(10);
tx_sinistro_inicial_w		double precision;
tx_sinistro_final_w		double precision;
nr_seq_grupo_lote_w		bigint;
nr_seq_lote_equipe_w		bigint;

nr_seq_grupo_w			bigint;
nr_seq_contrato_w		bigint;
nr_seq_equipe_w			bigint;
qt_registros_w			bigint;

vl_resultado_mensalidade_w	double precision;
vl_tot_resultado_mensalidade_w	double precision;

vl_resultado_despesa_w		double precision;
vl_tot_resultado_despesa_w	double precision;

tx_grupo_sinistro_w		double precision;


C01 CURSOR FOR
	SELECT	d.nr_sequencia
	from	pls_contrato			a,
		pls_contrato_grupo		b,
		pls_grupo_contrato_equipe	c,
		pls_grupo_contrato		d,
		pls_equipe_grupo_contrato	f
	where	b.nr_seq_grupo			= d.nr_sequencia
	and	b.nr_seq_contrato		= a.nr_sequencia
	and	c.nr_seq_grupo_contrato		= d.nr_sequencia
	and	c.nr_seq_equipe			= f.nr_sequencia
	and	to_char(d.dt_reajuste,'mm')	= dt_reajuste_mes_w
	and	((f.nr_sequencia		= nr_seq_lote_equipe_w and (nr_seq_lote_equipe_w IS NOT NULL AND nr_seq_lote_equipe_w::text <> '')) or (coalesce(nr_seq_lote_equipe_w::text, '') = ''))
	and	((d.nr_sequencia		= nr_seq_grupo_lote_w and (nr_seq_grupo_lote_w IS NOT NULL AND nr_seq_grupo_lote_w::text <> '')) or (coalesce(nr_seq_grupo_lote_w::text, '') = ''))
	group by d.nr_sequencia;

C02 CURSOR FOR
	SELECT	a.nr_sequencia
	from	pls_contrato		a,
		pls_contrato_grupo	b,
		pls_grupo_contrato	c
	where	b.nr_seq_grupo		= c.nr_sequencia
	and	b.nr_seq_contrato	= a.nr_sequencia
	and	c.nr_sequencia		= nr_seq_grupo_w;


BEGIN



select	dt_reajuste,
	tx_sinistro_inicial,
	tx_sinistro_final,
	nr_seq_grupo_contrato,
	nr_seq_equipe
into STRICT	dt_reajuste_w,
	tx_sinistro_inicial_w,
	tx_sinistro_final_w,
	nr_seq_grupo_lote_w,
	nr_seq_lote_equipe_w
from	pls_prog_reajuste_lote
where	nr_sequencia	= nr_seq_lote_p;

dt_reajuste_mes_w	:= to_char(dt_reajuste_w,'mm');
dt_reajuste_ano_w	:= add_months(dt_reajuste_w,-12);


open C01;
loop
fetch C01 into
	nr_seq_grupo_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	vl_tot_resultado_mensalidade_w	:= 0;
	vl_tot_resultado_despesa_w	:= 0;

	select	max(nr_seq_equipe)
	into STRICT	nr_seq_equipe_w
	from	pls_grupo_contrato_equipe
	where	nr_seq_grupo_contrato	= nr_seq_grupo_w
	and	clock_timestamp() between coalesce(dt_inicio_vigencia,clock_timestamp()) and fim_dia(dt_fim_vigencia);

	open C02;
	loop
	fetch C02 into
		nr_seq_contrato_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin

		begin
		select	sum(vl_resultado)
		into STRICT	vl_resultado_mensalidade_w
		from	pls_resultado
		where	nr_seq_contrato	= nr_seq_contrato_w
		and	dt_mes_referencia	> dt_reajuste_ano_w
		and	dt_mes_referencia	<= dt_reajuste_w
		and	ie_tipo_valor	= '1';
		exception
		when others then
			vl_resultado_mensalidade_w	:= 0;
		end;

		if (coalesce(vl_resultado_mensalidade_w::text, '') = '') then
			vl_resultado_mensalidade_w	:= 0;
		end if;

		begin
		select	sum(vl_resultado)
		into STRICT	vl_resultado_despesa_w
		from	pls_resultado
		where	nr_seq_contrato	= nr_seq_contrato_w
		and	dt_mes_referencia	> dt_reajuste_ano_w
		and	dt_mes_referencia	<= dt_reajuste_w
		and	ie_tipo_valor	= '2';
		exception
		when others then
			vl_resultado_despesa_w	:= 0;
		end;

		if (coalesce(vl_resultado_despesa_w::text, '') = '') then
			vl_resultado_despesa_w	:= 0;
		end if;

		vl_tot_resultado_mensalidade_w	:= vl_tot_resultado_mensalidade_w + vl_resultado_mensalidade_w;
		vl_tot_resultado_despesa_w	:= vl_tot_resultado_despesa_w + vl_resultado_despesa_w;

		end;
	end loop;
	close C02;

	tx_grupo_sinistro_w	:= (dividir(vl_tot_resultado_despesa_w,vl_tot_resultado_mensalidade_w) * 100);

	if (tx_grupo_sinistro_w between coalesce(tx_sinistro_inicial_w,tx_grupo_sinistro_w) and coalesce(tx_sinistro_final_w,tx_grupo_sinistro_w)) then

		insert into pls_prog_reajuste(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
				nr_seq_lote,nr_seq_grupo,nr_seq_equipe,vl_receita,vl_despesas,tx_resultado_grupo)
		values (	nextval('pls_prog_reajuste_seq'),clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,
				nr_seq_lote_p,nr_seq_grupo_w,nr_seq_equipe_w,vl_tot_resultado_mensalidade_w,vl_tot_resultado_despesa_w,tx_grupo_sinistro_w);

	end if;

	end;
end loop;
close C01;

select	count(*)
into STRICT	qt_registros_w
from	pls_prog_reajuste
where	nr_seq_lote	= nr_seq_lote_p;

if (qt_registros_w	> 0) then
	update	pls_prog_reajuste_lote
	set	dt_geracao_lote	= clock_timestamp()
	where	nr_sequencia	= nr_seq_lote_p;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_programacao_reajuste ( nr_seq_lote_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

