-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE lfpd_registro_0000 ( nr_seq_controle_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, dt_inicio_p timestamp, dt_fim_p timestamp, ds_separador_p text, qt_linha_p INOUT bigint, nr_sequencia_p INOUT bigint) AS $body$
DECLARE

 
contador_w		bigint := 0;
ds_arquivo_w		varchar(4000);
ds_arquivo_compl_w	varchar(4000);
ds_linha_w		varchar(8000);
nr_linha_w		bigint := qt_linha_p;
nr_seq_registro_w	bigint := nr_sequencia_p;
sep_w			varchar(1) := ds_separador_p;

cd_cgc_w		varchar(14);
cd_municipio_w		varchar(10);

c01 CURSOR FOR 
	SELECT	'0000'					cd_registro, 
		'LFPD'					ie_lfpd, 
		lpad(c.cd_versao,3,0)				cd_versao, 
		c.cd_versao				cd_versao_srp, 
		c.cd_finalidade				cd_finalidade, 
		to_char(c.dt_inicial,'ddmmyyyy')	dt_inicial, 
		to_char(c.dt_final,'ddmmyyyy')	dt_final, 
		r.ie_entrada_dados			ie_entrada_dados, 
		r.ie_centralizacao			ie_centralizada, 
		j.ds_razao_social			ds_razao_social, 
		j.cd_cgc				cd_cgc, 
		''					cd_cpf, 
		''					cd_inscricao_pis, 
		j.sg_estado				sg_estado, 
		j.nr_inscricao_estadual			nr_inscricao_estadual, 
		obter_dados_pf_pj('',j.cd_cgc,'CDMDV')	cd_municipio_ibge, 
		j.nr_inscricao_municipal		nr_inscricao_municipal, 
		''					nr_suframa 
	from	pessoa_juridica j, 
		fis_lfpd_regra r, 
		fis_lfpd_controle c 
	where	j.cd_cgc = cd_cgc_w 
	and	c.nr_seq_regra_lfpd = r.nr_sequencia 
	and	c.nr_sequencia = nr_seq_controle_p 
	and	r.cd_estabelecimento = cd_estabelecimento_p;

vet01	c01%rowtype;


BEGIN 
 
select	cd_cgc 
into STRICT	cd_cgc_w 
from	estabelecimento 
where	cd_estabelecimento = cd_estabelecimento_p;
 
open c01;
loop 
fetch c01 into 
	vet01;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin 
	 
	cd_municipio_w := vet01.cd_municipio_ibge;
	 
	if (vet01.sg_estado = 'DF') then 
		cd_municipio_w := '5300108';
	end if;
	 
	contador_w := contador_w + 1;
 
	ds_linha_w	:= substr(	sep_w || vet01.cd_registro 		|| 
					sep_w || vet01.ie_lfpd 			|| 
					sep_w || vet01.cd_versao 		|| 
					sep_w || vet01.cd_versao_srp 		|| 
					sep_w || vet01.cd_finalidade 		|| 
					sep_w || vet01.dt_inicial 		|| 
					sep_w || vet01.dt_final 		|| 
					sep_w || vet01.ie_entrada_dados 	|| 
					sep_w || vet01.ie_centralizada 		|| 
					sep_w || vet01.ds_razao_social 		|| 
					sep_w || vet01.cd_cgc 			|| 
					sep_w || vet01.cd_cpf 			|| 
					sep_w || vet01.cd_inscricao_pis 	|| 
					sep_w || vet01.sg_estado 		|| 
					sep_w || vet01.nr_inscricao_estadual 	|| 
					sep_w || cd_municipio_w		 	|| 
					sep_w || vet01.nr_inscricao_municipal 	|| 
					sep_w || vet01.nr_suframa 		|| sep_w, 1, 8000);
 
	ds_arquivo_w		:= substr(ds_linha_w,1,4000);
	ds_arquivo_compl_w	:= substr(ds_linha_w,4001,4000);
	nr_seq_registro_w	:= nr_seq_registro_w + 1;
	nr_linha_w		:= nr_linha_w + 1;
 
	insert into fis_lfpd_arquivo(	nr_sequencia, 
					dt_atualizacao, 
					nm_usuario, 
					dt_atualizacao_nrec, 
					nm_usuario_nrec, 
					nr_linha, 
					ds_arquivo, 
					ds_arquivo_compl, 
					cd_registro, 
					nr_seq_controle_lfpd) 
			values (	nextval('fis_lfpd_arquivo_seq'), 
					clock_timestamp(), 
					nm_usuario_p, 
					clock_timestamp(), 
					nm_usuario_p, 
					nr_linha_w, 
					ds_arquivo_w, 
					ds_arquivo_compl_w, 
					vet01.cd_registro, 
					nr_seq_controle_p);
 
	if (mod(contador_w,100) = 0) then 
		commit;
	end if;
 
	end;
end loop;
close c01;
 
commit;
 
qt_linha_p	:= nr_linha_w;
nr_sequencia_p	:= nr_seq_registro_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE lfpd_registro_0000 ( nr_seq_controle_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, dt_inicio_p timestamp, dt_fim_p timestamp, ds_separador_p text, qt_linha_p INOUT bigint, nr_sequencia_p INOUT bigint) FROM PUBLIC;

