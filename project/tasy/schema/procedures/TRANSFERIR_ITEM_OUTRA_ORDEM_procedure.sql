-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE transferir_item_outra_ordem ( nr_ordem_compra_p bigint, nr_item_oci_p bigint, nr_sequencia_p bigint, nr_seq_motivo_cancel_p bigint, ds_observacao_p text, ie_pendentes_p text, nr_ordem_transf_p bigint, vl_unitario_material_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
					 
dt_prevista_entrega_w			timestamp;
nr_sequencia_w				bigint;
nr_documento_externo_w			bigint;
ds_motivo_w				varchar(100);
ds_observacao_w				varchar(255);
qt_registro_w				bigint;
nr_solic_compra_w				bigint;
nr_item_solic_compra_w			integer;
ie_solic_exportada_w			integer;
dt_baixa_w				timestamp;
nr_seq_motivo_cancel_w			bigint;
cd_material_w				integer;
ds_material_w				varchar(255);
ie_primeira_vez_w				varchar(1) := 'S';
cd_pessoa_solicitante_w			varchar(10);
nr_item_oci_w				integer;

c01 CURSOR FOR 
SELECT	nr_sequencia, 
	trunc(dt_prevista_entrega,'dd') 
from	ordem_compra_item_entrega 
where	nr_ordem_compra = nr_ordem_compra_p 
and	nr_item_oci = nr_item_oci_p 
and	ie_pendentes_p = '0' 
and	coalesce(dt_cancelamento::text, '') = '' 
and	coalesce(qt_real_entrega,0) = 0 

union
 
SELECT	nr_sequencia, 
	trunc(dt_prevista_entrega,'dd') 
from	ordem_compra_item_entrega 
where	nr_ordem_compra = nr_ordem_compra_p 
and	nr_item_oci = nr_item_oci_p 
and	nr_Sequencia = nr_sequencia_p 
and	ie_pendentes_p = '1';


BEGIN 
 
if (nr_ordem_transf_p > 0) then 
 
	if (nr_ordem_transf_p = nr_ordem_compra_p) then 
		CALL wheb_mensagem_pck.exibir_mensagem_abort(266352);
		--'A ordem de compra à ser transferida não pode ser igual a ordem de compra origem.'); 
	end if;
 
	select	count(*) 
	into STRICT	qt_registro_w 
	from	ordem_compra 
	where	nr_ordem_compra = nr_ordem_transf_p;
	 
	if (qt_registro_w = 0) then 
		CALL wheb_mensagem_pck.exibir_mensagem_abort(266353,'NR_ORDEM_TRANSF=' || nr_ordem_transf_p);
		--'A ordem de compra informada (' || nr_ordem_transf_p || ') não existe no sistema.'); 
	end if;
	 
	select	dt_baixa, 
		nr_seq_motivo_cancel 
	into STRICT	dt_baixa_w, 
		nr_seq_motivo_cancel_w 
	from	ordem_compra 
	where	nr_ordem_compra = nr_ordem_transf_p;
	 
	if (dt_baixa_w IS NOT NULL AND dt_baixa_w::text <> '') then 
		CALL wheb_mensagem_pck.exibir_mensagem_abort(266354,'NR_ORDEM_TRANSF=' || nr_ordem_transf_p);
		--'A ordem de compra (' || nr_ordem_transf_p || ') está baixada.'); 
	end if;
	 
	if (nr_seq_motivo_cancel_w IS NOT NULL AND nr_seq_motivo_cancel_w::text <> '') then 
		CALL wheb_mensagem_pck.exibir_mensagem_abort(266356,'NR_ORDEM_TRANSF=' || nr_ordem_transf_p);
		--'A ordem de compra (' || nr_ordem_transf_p || ') está cancelada.'); 
	end if;	
end if;
 
select	coalesce(max(nr_documento_externo),0) nr_documento_externo, 
	substr(obter_motivo_cancel_oc(nr_seq_motivo_cancel_p),1,100) ds_motivo 
into STRICT	nr_documento_externo_w, 
	ds_motivo_w 
from	ordem_compra 
where	nr_ordem_compra = nr_ordem_compra_p 
and	coalesce(nr_seq_agenda_pac::text, '') = '';
 
select	cd_material, 
	substr(obter_desc_material(cd_material),1,255) 
into STRICT	cd_material_w, 
	ds_material_w 
from	ordem_compra_item 
where	nr_ordem_compra = nr_ordem_compra_p 
and	nr_item_oci = nr_item_oci_p;
 
select	cd_pessoa_solicitante 
into STRICT	cd_pessoa_solicitante_w 
from	ordem_compra 
where	nr_ordem_compra = nr_ordem_transf_p;
 
open C01;
loop 
fetch C01 into	 
	nr_sequencia_w, 
	dt_prevista_entrega_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	 
	/*A nota fiscal não está calculada, pois está pegando somente as entregas da ordem de compra que ainda não tem nenhuma quantidade real entrega, isso quer dizer que a NF nao esta calculada*/
 
	delete	FROM nota_fiscal_item 
	where	nr_ordem_compra 		= nr_ordem_compra_p 
	and	nr_item_oci		= nr_item_oci_p 
	and	trunc(dt_entrega_ordem,'dd')	= dt_prevista_entrega_w;
	 
	if (nr_documento_externo_w > 0) then 
		update	ordem_compra_item_entrega 
		set	ie_status_exportar = '0' 
		where	nr_sequencia = nr_sequencia_p;
	end if;
 
	ds_observacao_w := substr(WHEB_MENSAGEM_PCK.get_texto(298006,'DS_MOTIVO_W='||ds_motivo_w||';DS_OBSERVACAO_P='||ds_observacao_p),1,255);
 
	update	ordem_compra_item_entrega 
	set	dt_cancelamento	= clock_timestamp(), 
		ds_observacao	= substr(CASE WHEN ds_observacao = NULL THEN  ds_observacao_w  ELSE ds_observacao || chr(13) || chr(10) || ds_observacao_w END ,1,255) 
	where	nr_ordem_compra	= nr_ordem_compra_p 
	and	nr_item_oci	= nr_item_oci_p 
	and	nr_sequencia	= nr_sequencia_w;
	 
	select	count(*) 
	into STRICT	qt_registro_w 
	from	ordem_compra_item_entrega 
	where	coalesce(dt_cancelamento::text, '') = '' 
	and	coalesce(qt_prevista_entrega,0) > coalesce(qt_real_entrega,0) 
	and	nr_ordem_compra = nr_ordem_compra_p 
	and	nr_item_oci = coalesce(nr_item_oci_p,nr_item_oci);
 
	if (qt_registro_w = 0) then 
		select	count(*) 
		into STRICT	qt_registro_w 
		from	ordem_compra_item_entrega 
		where	nr_ordem_compra = nr_ordem_compra_p 
		and	coalesce(dt_cancelamento::text, '') = '' 
		and	coalesce(qt_prevista_entrega,0) > coalesce(qt_real_entrega,0);		
		 
		if (qt_registro_w = 0) then 
			CALL baixar_ordem_compra(nr_ordem_compra_p, null, null, nm_usuario_p);
		end if;		
	end if;
	 
	select	max(coalesce(nr_solic_compra, 0)), 
		max(coalesce(nr_item_solic_compra, 0)) 
	into STRICT	nr_solic_compra_w, 
		nr_item_solic_compra_w 
	from	ordem_compra_item 
	where	nr_ordem_compra = nr_ordem_compra_p 
	and	nr_item_oci = nr_item_oci_p;
	 
	if (nr_solic_compra_w > 0) and (nr_item_solic_compra_w > 0) then 
		select	count(*) 
		into STRICT	ie_solic_exportada_w 
		from	solic_compra 
		where	nr_solic_compra = nr_solic_compra_w 
		and	ie_forma_exportar = '1';
		 
		if (ie_solic_exportada_w > 0) then 
			update	ordem_compra_item_entrega 
			set	ie_status_exportar = '0' 
			where	nr_sequencia = nr_sequencia_p;
		end if;
	end if;
	 
	CALL inserir_historico_ordem_compra( 
		nr_ordem_compra_p, 
		'S', 
		WHEB_MENSAGEM_PCK.get_texto(298008), 
		substr(WHEB_MENSAGEM_PCK.get_texto(298015,'DT_PREVISTA_ENTREGA_W='||dt_prevista_entrega_w|| 
						';NR_ITEM_OCI_P='||nr_item_oci_p|| 
						';CD_MATERIAL_W='||cd_material_w|| 
						';DS_MATERIAL_W='||ds_material_w|| 
						';NR_ORDEM_TRANSF_P='||nr_ordem_transf_p),1,4000), 
		nm_usuario_p);
	 
	if (ie_primeira_vez_w = 'S') then 
		select	coalesce(max(nr_item_oci),0) +1 
		into STRICT	nr_item_oci_w 
		from	ordem_compra_item 
		where	nr_ordem_compra = nr_ordem_transf_p;
		 
		insert into ordem_compra_item( 
			nr_ordem_compra,			nr_item_oci,			cd_material, 
			cd_unidade_medida_compra,		vl_unitario_material,			qt_material, 
			dt_atualizacao,			nm_usuario,			ie_situacao, 
			cd_pessoa_solicitante,		qt_material_entregue,		pr_descontos, 
			cd_local_estoque,			ds_material_direto,			ds_observacao, 
			nr_cot_compra,			nr_item_cot_compra,		ds_marca, 
			vl_item_liquido,			nr_seq_aprovacao,			dt_aprovacao, 
			cd_centro_custo,			cd_conta_contabil,			nr_solic_compra, 
			nr_item_solic_compra,		qt_conv_unid_fornec,		ie_geracao_solic, 
			nr_seq_proj_rec,			pr_desc_financ,			nr_seq_lic_item, 
			nr_seq_conta_financ,		qt_original,			dt_validade, 
			nr_seq_marca,			dt_reprovacao,			nr_seq_ordem_serv, 
			vl_ultima_compra,			vl_dif_ultima_compra,		pr_dif_ultima_compra, 
			nr_seq_unidade_adic,		nr_seq_criterio_rateio,		nr_serie_material, 
			nr_solic_compra_cancel,		vl_desconto,			nr_seq_lote_fornec, 
			nr_seq_proj_gpi,			nr_seq_etapa_gpi,			nr_seq_conta_gpi, 
			dt_aprovacao_orig,			dt_reprovacao_orig,			nr_contrato, 
			dt_inicio_garantia,			dt_fim_garantia,			nr_id_integracao, 
			nr_seq_reg_lic_item,		nr_seq_conta_bco,			nr_seq_prescr_item, 
			nr_empenho,			dt_empenho,			nr_ordem_agrup, 
			nr_seq_orc_item_gpi,		vl_unit_mat_original,		nr_atendimento, 
			qt_dias_garantia,			vl_total_item) 
		SELECT	nr_ordem_transf_p,			nr_item_oci_w,			cd_material, 
			cd_unidade_medida_compra,		vl_unitario_material_p,		qt_material, 
			clock_timestamp(),				nm_usuario_p,			'A', 
			cd_pessoa_solicitante_w,		qt_material_entregue,		pr_descontos, 
			cd_local_estoque,			ds_material_direto,			ds_observacao, 
			nr_cot_compra,			nr_item_cot_compra,		ds_marca, 
			(qt_material * vl_unitario_material_p),	nr_seq_aprovacao,			dt_aprovacao, 
			cd_centro_custo,			cd_conta_contabil,			nr_solic_compra, 
			nr_item_solic_compra,		qt_conv_unid_fornec,		ie_geracao_solic, 
			nr_seq_proj_rec,			pr_desc_financ,			nr_seq_lic_item, 
			nr_seq_conta_financ,		qt_material,			dt_validade, 
			nr_seq_marca,			dt_reprovacao,			nr_seq_ordem_serv, 
			vl_ultima_compra,			vl_dif_ultima_compra,		pr_dif_ultima_compra, 
			nr_seq_unidade_adic,		nr_seq_criterio_rateio,		nr_serie_material, 
			nr_solic_compra_cancel,		vl_desconto,			nr_seq_lote_fornec, 
			nr_seq_proj_gpi,			nr_seq_etapa_gpi,			nr_seq_conta_gpi, 
			dt_aprovacao_orig,			dt_reprovacao_orig,			nr_contrato, 
			dt_inicio_garantia,			dt_fim_garantia,			nr_id_integracao, 
			nr_seq_reg_lic_item,		nr_seq_conta_bco,			nr_seq_prescr_item, 
			nr_empenho,			dt_empenho,			nr_ordem_agrup, 
			nr_seq_orc_item_gpi,		vl_unit_mat_original,		nr_atendimento, 
			qt_dias_garantia,			(vl_unitario_material_p * qt_material) 
		from	ordem_compra_item 
		where	nr_ordem_compra = nr_ordem_compra_p 
		and	nr_item_oci = nr_item_oci_p;
		 
		CALL inserir_historico_ordem_compra( 
			nr_ordem_transf_p, 
			'S', 
			WHEB_MENSAGEM_PCK.get_texto(298017), 
			substr(WHEB_MENSAGEM_PCK.get_texto(298019,'NR_ITEM_OCI_W='||nr_item_oci_w|| 
							';CD_MATERIAL_W='||cd_material_w|| 
							';DS_MATERIAL_W='||ds_material_w|| 
							';NR_ORDEM_COMPRA_P='||nr_ordem_compra_p),1,4000), 
			nm_usuario_p);
		 
		ie_primeira_vez_w := 'N';
	end if;
	 
	insert into ordem_compra_item_entrega( 
		nr_ordem_compra, 
		nr_item_oci, 
		dt_prevista_entrega, 
		dt_real_entrega, 
		qt_prevista_entrega, 
		qt_real_entrega, 
		dt_atualizacao, 
		nm_usuario, 
		nr_sequencia, 
		ie_status_exportar, 
		dt_entrega_original, 
		dt_entrega_limite, 
		dt_confirma_entrega, 
		hr_prevista_entrega) 
	SELECT	nr_ordem_transf_p, 
		nr_item_oci_w, 
		dt_prevista_entrega, 
		dt_real_entrega, 
		qt_prevista_entrega, 
		qt_real_entrega, 
		clock_timestamp(), 
		nm_usuario_p, 
		nextval('ordem_compra_item_entrega_seq'), 
		ie_status_exportar, 
		dt_entrega_original, 
		dt_entrega_limite, 
		dt_confirma_entrega, 
		hr_prevista_entrega 
	from	ordem_compra_item_entrega 
	where	nr_sequencia = nr_sequencia_w;
	 
	end;
end loop;
close C01;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE transferir_item_outra_ordem ( nr_ordem_compra_p bigint, nr_item_oci_p bigint, nr_sequencia_p bigint, nr_seq_motivo_cancel_p bigint, ds_observacao_p text, ie_pendentes_p text, nr_ordem_transf_p bigint, vl_unitario_material_p bigint, nm_usuario_p text) FROM PUBLIC;

