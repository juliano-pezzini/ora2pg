-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE campos AS (nr_seq_pacote bigint);
CREATE TYPE campos_Original AS (nr_sequencia		bigint,
		nr_seq_pacote 		bigint,
		ie_valor_informado 	varchar(1),
		vl_anestesista 		double precision,
		vl_auxiliares		double precision,
		vl_custo_operacional   	double precision,
		vl_materiais		double precision,
		vl_medico		double precision,
		vl_procedimento		double precision);
CREATE TYPE campos_Original_partic AS (nr_sequencia		bigint,
		nr_seq_partic		bigint,
		ie_valor_informado 	varchar(1),
		vl_conta 		double precision,
		vl_participante		double precision);
CREATE TYPE campos_regra_CH AS (nr_seq_propaci	bigint,
		vl_ponto  	double precision,
		nr_seq_regra 	bigint,
		vl_minimo_ch	double precision,
		vl_maximo_ch   	double precision,
		nr_seq_pacote	bigint,
		cd_area_proced	bigint,
		qt_procedimento double precision);
CREATE TYPE campos_regra_CH_dia AS (nr_seq_propaci	bigint,
		vl_ponto  	double precision,
		nr_seq_regra 	bigint,
		vl_minimo_ch	double precision,
		vl_maximo_ch   	double precision,
		nr_seq_pacote	bigint,
		cd_area_proced	bigint,
		qt_procedimento double precision,
		dt_procedimento	timestamp);
CREATE TYPE campos_regra_CH_Total_dia AS (nr_seq_propaci	bigint,
		vl_ponto  	double precision,
		nr_seq_regra 	bigint,
		vl_minimo_ch	double precision,
		vl_maximo_ch   	double precision,
		nr_seq_pacote	bigint,
		cd_area_proced	bigint,
		qt_procedimento double precision,
		dt_procedimento	timestamp);
CREATE TYPE campos_regra_QTDE_dia AS (nr_seq_propaci	 bigint,
		qt_procedimento	 double precision,
		nr_seq_regra 	 bigint,
		vl_minimo_qtde	 double precision,
		vl_maximo_qtde 	 double precision,
		nr_seq_pacote	 bigint,
		cd_procedimento	 bigint,
		ie_origem_proced bigint,
		dt_procedimento	timestamp);
CREATE TYPE proc_pacote_regra_rec AS (
	nr_seq_regra	pacote_procedimento.nr_sequencia%type,
	qt_limite	pacote_procedimento.qt_limite%type,
	qt_acumulado	bigint
);


CREATE OR REPLACE PROCEDURE atualizar_procedimento_pacote ( nr_atendimento_p bigint, nr_interno_conta_p bigint, cd_convenio_p bigint, nm_usuario_p text) AS $body$
DECLARE



----------------------------------------------------------------------------------------------------
type Vetor is
	table of campos index by integer;

i				integer := 1;
Vetor_Pacote_w			Vetor;


----------------------------------------------------------------------------------------------------
type Vetor_Original is
	table of campos_original index by integer;

--i				Integer := 1;
x				integer	:= 1;
Vetor_Pacote_Original_w		Vetor_Original;

--------------------------------------------------------------------------------------------------------
type Vetor_Original_partic is
	table of campos_original_partic index by integer;

j				integer := 1;
z				integer	:= 1;
Vetor_Pacote_Original_partic_w		Vetor_Original_partic;


----------------------------------------------------------------------------------------------------
type Vetor_regra_CH is
	table of campos_regra_CH index by integer;

y				integer := 1;
Vetor_regra_CH_w		Vetor_regra_CH;

---------------------------------------------------------------------------------------------------
type Vetor_regra_CH_dia is
	table of campos_regra_CH_dia index by integer;

t				integer := 1;
h				integer := 1;
f				integer := 1;
g				integer := 1;
Vetor_regra_CH_dia_w		Vetor_regra_CH_dia;

------------------------------------------------------------------------------------------------------
type Vetor_regra_CH_Total_dia is
	table of campos_regra_CH_Total_dia index by integer;

Vetor_regra_CH_Total_dia_w		Vetor_regra_CH_Total_dia;

------------------------------------------------------------------------------------------------------
type Vetor_regra_QTDE_dia is
	table of campos_regra_QTDE_dia index by integer;

a				integer := 1;
b				integer := 1;
c				integer := 1;
d				integer := 1;
Vetor_regra_QTDE_dia_w		Vetor_regra_QTDE_dia;


------------------------------------------------------------------------------------------------------------
--ARMAZENA AS REGRAS DE PROCEDIMENTO PACOTE QUE TEM CONTROLE DE QUANTIDADE
type regras_proc_pacote_tab is table of proc_pacote_regra_rec INDEX BY integer;

regras_qt_limite_tab regras_proc_pacote_tab;

------------------------------------------------------------------------------------------------------------
ie_proced_ok_w			boolean;
nr_seq_proc_pac_w		bigint;
nr_sequencia_w			bigint;
dt_conta_w			timestamp;
cd_estabelecimento_w		smallint;
cd_Procedimento_w		bigint;
ie_origem_proced_w		bigint;
cd_area_proc_w			bigint;
cd_grupo_proc_w			bigint;
cd_espec_proc_w			bigint;
ie_tipo_acomod_w		varchar(2);
nr_seq_pacote_w			bigint;
ie_excedente_w			smallint;
ie_inclui_exclui_w		varchar(01);
dt_inicio_pacote_w		timestamp;
dt_final_pacote_w		timestamp;
nr_seq_procedimento_w		bigint;
nr_seq_proc_origem_w		bigint;
cd_convenio_w			integer;
cd_categoria_w			varchar(10);
qt_Limite_w			double precision;
qt_acumulado_w			double precision := 0;
qt_Procedimento_w		double precision;
ie_considera_honorario_w	varchar(01)	:= 'S';
ie_calcula_honorario_w		varchar(01)	:= 'S';
ie_calcula_custo_oper_w		varchar(01)	:= 'S';
nr_seq_gerada_w			bigint;
ie_emite_conta_w		varchar(03);
ie_emite_conta_honor_w		varchar(03);
vl_medico_w			double precision;
cd_setor_atendimento_w		integer;
ie_tipo_atendimento_w		smallint;
cd_setor_pacote_w		integer;
nr_seq_tipo_acomod_w		bigint;
ie_exige_gabarito_w		varchar(01);
nr_sequencia_pacote_w		bigint;
cd_motivo_exc_conta_w		smallint;
nr_conta_compl_w		bigint	:= null;
nr_interno_conta_w		bigint;
pr_desconto_w			double precision;
qt_idade_paciente_w		smallint;
nr_seq_proc_pacote_w		bigint;
ie_valor_informado_w		varchar(1);
cd_proced_ant_w			bigint	:= 0;
vl_participante_w		double precision;
ie_responsavel_credito_w	varchar(10);
ie_repassa_medico_w		varchar(3);
ie_entra_conta_w		varchar(3);
VL_ANESTESISTA_inform_w		double precision;
VL_AUXILIARES_inform_w		double precision;
VL_CUSTO_OPERACIONAL_inform_w	double precision;
VL_MATERIAIS_inform_w		double precision;
VL_MEDICO_inform_w		double precision;
VL_PROCEDIMENTO_inform_w	double precision;
vl_proc_informado_w		double precision;
cd_proc_w			bigint;
nr_conta_w			bigint;
vl_procedimento_w		double precision;
vl_dia_w			double precision;
vl_ponto_w			double precision;
ds_erro_w			varchar(2000);
nr_seq_proc_interno_w		bigint;
ie_atualizar_itens_pcte_w	varchar(1);
ie_exclui_proc_orig_pcte_w	varchar(1);
qt_regra_proc_orig_w		bigint;
ie_ratear_item_w		varchar(1);

ie_tipo_valor_w			varchar(3);
nr_seq_regra_pacote_proc_w	bigint;
vl_maximo_w			double precision;
vl_minimo_w			double precision;
cd_area_proc_regra_w		bigint;
vl_ponto_acumulado_w		double precision:=0;
ie_regra_pacote_proc_w		varchar(1):= 'N';
vl_ponto_aux_qtde_w		double precision;
qt_proc_aux_w			bigint;
dt_procedimento_w		timestamp;
qt_partic_w			bigint;
ie_valor_inf_partic_w		varchar(1);
nr_seq_partic_w			bigint;
vl_conta_original_w		double precision;
vl_partic_original_w		double precision;
cd_proc_regra_w			double precision;
ie_origem_proc_regra_w		bigint;
cd_classif_setor_w		varchar(2);
ie_consiste_dias_setores_uti_w	varchar(1);
qt_dias_uti_w			integer;
qt_dias_hospital_w		integer;
pr_desc_w			double precision;
vl_negociado_w			double precision;

dt_inicio_pacote_orig_w		timestamp;
dt_final_pacote_orig_w		timestamp;
ie_sexo_w			varchar(1);
cd_medico_w			varchar(10);
cd_cgc_prestador_w		varchar(14);
ie_inserir_item_zerado_w	varchar(1);
cd_setor_pacote_aux_w		bigint;
qt_regra_setor_exclusivo_w	bigint;
ie_setor_exclusivo_w		varchar(1);
cd_centro_custo_w		integer;
dt_limite_uti_w			timestamp;
dt_limite_setores_w		timestamp;
ds_texto_w			varchar(2000);
cd_situacao_glosa_w		procedimento_paciente.cd_situacao_glosa%type;

vl_item_convertido_w  		double precision;
cd_moeda_pacote_w			double precision;
vl_cotacao_w				cotacao_moeda.vl_cotacao%type;
nr_seq_classif_w			bigint;

ie_resp_cred_manual_w		procedimento_paciente.ie_resp_cred_manual%type;

vl_proc_orig_w			procedimento_paciente.vl_procedimento%type;
vl_medic_orig_w			procedimento_paciente.vl_medico%type;
vl_anest_orig_w			procedimento_paciente.vl_anestesista%type;
vl_materiais_orig_w		procedimento_paciente.vl_materiais%type;
vl_aux_orig_w			procedimento_paciente.vl_auxiliares%type;
vl_custo_oper_orig_w		procedimento_paciente.vl_custo_operacional%type;

nr_seq_proc_int_ant_w		procedimento_paciente.nr_seq_proc_interno%type;
nr_seq_proc_int_regra_w		procedimento_paciente.nr_seq_proc_interno%type;
cd_setor_atend_ant_w		procedimento_paciente.cd_setor_atendimento%type;
cd_setor_atend_regra_w		procedimento_paciente.cd_setor_atendimento%type;
ds_mae_w			varchar(4);
ie_valida_limite_proc_w		pacote_procedimento.ie_valida_limite_proc%type := 'N';

ie_clinica_w			atendimento_paciente.ie_clinica%type;
ie_tipo_convenio_aux2_w		convenio.ie_tipo_convenio%type;
ie_classif_contabil_w		convenio.ie_classif_contabil%type;
dt_entrada_w			atendimento_paciente.dt_entrada%type;
cd_conta_contabil_w		material_atend_paciente.cd_conta_contabil%type;
cd_plano_w			atend_categoria_convenio_v.cd_plano_convenio%type;
ie_complexidade_sus_w		sus_procedimento.ie_complexidade%type;
ie_tipo_financ_sus_w		sus_procedimento.ie_tipo_financiamento%type;
ie_tipo_convenio_w          	convenio.ie_tipo_convenio%type;
ie_classif_convenio_w      	convenio.ie_classif_contabil%type;
nr_seq_estrutura_w		pacote_procedimento.nr_seq_estrutura%type;

c010 CURSOR FOR
SELECT	nr_seq_pacote,
	dt_inicio_pacote,
	dt_final_pacote,
	ie_excedente,
	nr_seq_procedimento,
	nr_seq_proc_origem,
	ie_tipo_acomod,
	cd_setor_exclusivo,
	nr_seq_tipo_acomod,
	coalesce(ie_exige_gabarito,'N'),
	a.nr_sequencia,
	b.ie_responsavel_credito,
	a.qt_dias_uti,
	a.qt_dias_hospital
from	conta_paciente c,
	procedimento_paciente b,
	Atendimento_Pacote a
where	a.nr_atendimento	= nr_atendimento_p
  and	c.nr_interno_conta	= nr_interno_conta_p
  and	a.cd_convenio		= cd_convenio_p
  and	a.nr_seq_procedimento	= b.nr_sequencia
  and	b.nr_interno_conta	= c.nr_interno_conta
  and	c.ie_status_acerto	= 1 /* Elemar 03/02/04 - Inclui as duas linhas */
order by nr_seq_alocacao, dt_inicio_pacote;

/*SO-2220426*/

c020 CURSOR FOR
SELECT	nr_sequencia,
	cd_procedimento,
	ie_origem_proced,
	dt_conta,
	qt_procedimento,
	ie_emite_conta,
	ie_emite_conta_honor,
	vl_medico,
	c.ie_tipo_atendimento,
	a.cd_setor_atendimento,
	a.nr_seq_proc_pacote,
	a.vl_procedimento,
	OBTER_PROC_PACIENTE_VALOR(a.nr_sequencia, 2, 1) vl_ponto,
	Obter_Total_Proc_Dia(a.dt_procedimento, a.nr_interno_conta, a.cd_procedimento, a.ie_origem_proced) vl_dia,
	a.dt_procedimento,
	coalesce(a.nr_seq_proc_interno,0),
	a.cd_medico_executor,
	a.cd_cgc_prestador
from 	Atendimento_paciente c,
	Conta_Paciente b,
	Procedimento_paciente a
where ((a.nr_atendimento = nr_atendimento_p) or ((c.nr_atendimento_mae = nr_atendimento_p) and (c.ie_trat_conta_rn = obter_desc_expressao(962487)))) --OS 171875
  and a.nr_atendimento		= c.nr_atendimento
  and a.nr_interno_conta	= b.nr_interno_conta
  and b.nr_interno_conta	= nr_interno_conta_p
  and a.cd_convenio		= cd_convenio_p
  and ((coalesce(cd_setor_pacote_w::text, '') = '') or (a.cd_setor_atendimento = cd_setor_pacote_w))
  and a.dt_conta between dt_inicio_pacote_w and dt_final_pacote_w
  and coalesce(a.cd_motivo_exc_conta::text, '') = ''
  and b.ie_status_acerto	= 1
 and ((ie_atualizar_itens_pcte_w = 'S') or ((ie_atualizar_itens_pcte_w = 'N') and (coalesce(a.nr_seq_proc_pacote::text, '') = '')))
 and ((ie_inserir_item_zerado_w = 'S') or ((	select	sum(x.qt_procedimento)
						from	procedimento_paciente x
						where	x.nr_interno_conta = a.nr_interno_conta
						and	x.cd_procedimento = a.cd_procedimento
						and	x.ie_origem_proced = a.ie_origem_proced
						and	coalesce(x.nr_seq_proc_pacote::text, '') = ''	) <> 0))
  and not exists (select 1
			from atendimento_pacote x
			where x.nr_seq_procedimento = a.nr_sequencia)
  and not exists (	select 1
			from	atend_pacote_regra y,
				procedimento_paciente x
			where y.nr_seq_pacote		= nr_sequencia_pacote_w
			  and y.nr_atendimento		= nr_atendimento_p
			  and x.nr_interno_conta	= nr_interno_conta_p
			  and x.nr_sequencia		= a.nr_sequencia
			  and ((coalesce(y.cd_setor_atendimento::text, '') = '') or (x.cd_setor_atendimento = y.cd_setor_atendimento))
			  and x.dt_procedimento between y.dt_inicio_pacote and y.dt_final_pacote)
order by cd_procedimento, nr_seq_proc_interno, cd_setor_atendimento, ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_conta), qt_procedimento;

c030 CURSOR FOR
SELECT	ie_inclui_exclui,
	ie_excedente,
	coalesce(qt_limite,0),
	coalesce(ie_considera_honorario,'S'),
	coalesce(ie_calcula_honorario,'S'),
	coalesce(ie_calcula_custo_oper,'S'),
	dividir(coalesce(pr_desconto,0),100),
	coalesce(ie_ratear_item,'S'),
	ie_tipo_valor,
	nr_sequencia,
	vl_minimo,
	vl_maximo,
	coalesce(a.cd_area_proced,0),
	cd_procedimento,
	ie_origem_proced,
	dividir(coalesce(pr_desc,0),100),
	vl_negociado,
	ie_setor_exclusivo,
	a.nr_seq_proc_interno,
	a.cd_setor_atendimento,
	coalesce(a.ie_valida_limite_proc,'S')
from	Pacote_Procedimento a
where	a.nr_seq_pacote		= nr_seq_pacote_w
and 	coalesce(a.cd_setor_atendimento,cd_setor_atendimento_w)	= cd_setor_atendimento_w
and 	coalesce(a.ie_tipo_atendimento,ie_tipo_atendimento_w)	= ie_tipo_atendimento_w
and 	coalesce(a.cd_procedimento,cd_procedimento_w)	= cd_procedimento_w
and 	coalesce(a.ie_origem_proced,ie_origem_proced_w)	= ie_origem_proced_w
and 	coalesce(a.cd_grupo_proced, cd_grupo_Proc_w)		= cd_grupo_proc_w
and 	coalesce(a.cd_especial_proced,cd_espec_proc_w)	= cd_espec_proc_w
and 	coalesce(a.cd_area_proced, cd_area_proc_w)		= cd_area_proc_w
and 	coalesce(a.cd_medico, coalesce(cd_medico_w,'0'))		= coalesce(cd_medico_w,'0')
and 	coalesce(a.nr_seq_proc_interno, nr_seq_proc_interno_w) = nr_seq_proc_interno_w
and	qt_idade_paciente_w			between coalesce(qt_idade_min, 0) and coalesce(qt_idade_max, 999)	-- Edgar 06/10/2005 OS 23079
and 	((ie_exige_gabarito_w = 'N') or (nr_seq_pac_acomod = nr_seq_tipo_acomod_w))
and		((ie_tipo_valor <> 'P') or (vl_procedimento_w between coalesce(vl_minimo, vl_procedimento_w) and coalesce(vl_maximo, vl_procedimento_w)))
and		((ie_tipo_valor <> 'PP') or (vl_ponto_w between coalesce(vl_minimo, vl_ponto_w) and coalesce(vl_maximo, vl_ponto_w)))
and		((ie_tipo_valor <> 'T') or (vl_dia_w between coalesce(vl_minimo, vl_dia_w) and coalesce(vl_maximo, vl_dia_w)))
and	coalesce(a.ie_sexo, coalesce(ie_sexo_w,'A')) = coalesce(ie_sexo_w,'A')
and	coalesce(a.cd_cgc_prestador, coalesce(cd_cgc_prestador_w,'0')) = coalesce(cd_cgc_prestador_w,'0')
and	coalesce(a.cd_centro_custo, coalesce(cd_centro_custo_w, 0)) = coalesce(cd_centro_custo_w, 0)
and 	coalesce(a.nr_seq_classif, coalesce(nr_seq_classif_w, 0)) = coalesce(nr_seq_classif_w, 0)
and	((coalesce(nr_seq_estrutura::text, '') = '') or (nr_seq_estrutura = nr_seq_estrutura_w))
order by  coalesce(a.nr_seq_proc_interno,0),
	coalesce(a.cd_procedimento, 0),
	coalesce(a.ie_origem_proced, 0),
	coalesce(nr_seq_estrutura, 0),
	coalesce(a.cd_grupo_proced, 0),
	coalesce(a.cd_especial_proced, 0),
	coalesce(a.cd_area_proced, 0),
	coalesce(a.cd_setor_atendimento,0),
	coalesce(a.ie_sexo, 'A'),
	coalesce(a.cd_cgc_prestador,'0'),
	coalesce(a.cd_centro_custo, 0),
	coalesce(nr_seq_classif, 0);

c040 CURSOR FOR
	SELECT	nr_sequencia,
		ie_valor_informado,
		nr_seq_proc_pacote,
		VL_ANESTESISTA,
		VL_AUXILIARES,
		VL_CUSTO_OPERACIONAL,
		VL_MATERIAIS,
		VL_MEDICO,
		VL_PROCEDIMENTO,
		CD_SITUACAO_GLOSA,
		a.ie_resp_cred_manual
	from 	conta_paciente b,
		procedimento_paciente a
	where	a.nr_atendimento	= nr_atendimento_p
	  and	a.nr_interno_conta	= nr_interno_conta_p
	  and	a.cd_convenio		= cd_convenio_p
	  and	a.nr_interno_conta	= b.nr_interno_conta
	  and	a.nr_sequencia		<> coalesce(a.nr_seq_proc_pacote, 0)
	  and	b.ie_status_acerto	= 1
	  and	coalesce(a.cd_motivo_exc_conta::text, '') = '';

c045 CURSOR FOR
	SELECT	ie_valor_informado,
		nr_seq_partic,
		vl_conta,
		vl_participante
	from 	procedimento_participante
	where	nr_sequencia = nr_sequencia_w;


c050 CURSOR FOR
	SELECT	nr_sequencia
	from 	conta_paciente b,
		procedimento_paciente a
	where	a.nr_atendimento	= nr_atendimento_p
	  and	a.nr_interno_conta	= nr_interno_conta_p
	  and	a.cd_convenio		= cd_convenio_p
	  and	a.nr_interno_conta	= b.nr_interno_conta
	  and	coalesce(a.nr_seq_proc_pacote::text, '') = ''
	  and	b.ie_status_acerto	= 1
	  and	coalesce(a.cd_motivo_exc_conta::text, '') = '';

/*SO-2220426*/

c060 CURSOR FOR
	SELECT 	cd_area_procedimento
	from 	area_procedimento
	order by 1;

c070 CURSOR FOR
	SELECT 	distinct
		cd_procedimento,
		ie_origem_proced
	from 	procedimento_paciente
	where 	nr_interno_conta = nr_interno_conta_p
	and 	ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_procedimento) = ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_inicio_pacote_w)
	order by 1;



BEGIN

ds_mae_w := substr(wheb_mensagem_pck.get_texto(1110241,''),1,3);

select	a.cd_estabelecimento,
	obter_idade(b.dt_nascimento, clock_timestamp(), 'A'),
	coalesce(ie_sexo,'A'),
	a.ie_clinica,
	dt_entrada
into STRICT	cd_estabelecimento_w,
	qt_idade_paciente_w,
	ie_sexo_w,
	ie_clinica_w,
	dt_entrada_w
from	pessoa_fisica b,
	atendimento_paciente a
where	a.nr_atendimento	= nr_atendimento_p
and	a.cd_pessoa_fisica	= b.cd_pessoa_fisica;

ie_atualizar_itens_pcte_w 	:=	obter_valor_param_usuario(67,228,Obter_Perfil_ativo, nm_usuario_p, cd_estabelecimento_w);
ie_exclui_proc_orig_pcte_w	:=	obter_valor_param_usuario(67,241,Obter_Perfil_ativo, nm_usuario_p, cd_estabelecimento_w);
ie_consiste_dias_setores_uti_w	:= 	obter_valor_param_usuario(67,304,Obter_Perfil_ativo, nm_usuario_p, cd_estabelecimento_w);
ie_inserir_item_zerado_w	:=	coalesce(obter_valor_param_usuario(67,630,Obter_Perfil_ativo, nm_usuario_p, cd_estabelecimento_w),'S');

SELECT * FROM obter_convenio_particular(cd_estabelecimento_w, cd_convenio_w, cd_categoria_w) INTO STRICT cd_convenio_w, cd_categoria_w;

select	max(cd_motivo_exc_conta)
into STRICT	cd_motivo_exc_conta_w
from	parametro_faturamento
where	cd_estabelecimento	= cd_estabelecimento_w;



OPEN C040;
LOOP
FETCH C040 into nr_sequencia_w,
		ie_valor_informado_w,
		nr_seq_proc_pacote_w,
		VL_ANESTESISTA_inform_w,
		VL_AUXILIARES_inform_w,
		VL_CUSTO_OPERACIONAL_inform_w,
		VL_MATERIAIS_inform_w,
		VL_MEDICO_inform_w,
		VL_PROCEDIMENTO_inform_w,
		cd_situacao_glosa_w,
		ie_resp_cred_manual_w;
EXIT WHEN NOT FOUND; /* apply on C040 */
	begin
	x	:= coalesce(Vetor_Pacote_Original_w.Count,0) + 1;

	Vetor_Pacote_Original_w[x].nr_seq_pacote 	:= nr_seq_proc_pacote_w;
	Vetor_Pacote_Original_w[x].nr_sequencia  	:= nr_sequencia_w;

	Vetor_Pacote_Original_w[x].ie_valor_informado  	:= ie_valor_informado_w;
	Vetor_Pacote_Original_w[x].vl_anestesista  	:= vl_anestesista_inform_w;
	Vetor_Pacote_Original_w[x].vl_auxiliares  	:= vl_auxiliares_inform_w;
	Vetor_Pacote_Original_w[x].vl_custo_operacional	:= vl_custo_operacional_inform_w;
	Vetor_Pacote_Original_w[x].vl_materiais  	:= vl_materiais_inform_w;
	Vetor_Pacote_Original_w[x].vl_medico 		:= vl_medico_inform_w;
	Vetor_Pacote_Original_w[x].vl_procedimento  	:= vl_procedimento_inform_w;

	select 	count(*)
	into STRICT 	qt_partic_w
	from 	procedimento_participante
	where 	nr_sequencia = nr_sequencia_w;

	-- Se tiver participantes, armazenar os valores do vetor
	if (qt_partic_w > 0) then

		open C045;
		loop
		fetch C045 into
			ie_valor_inf_partic_w,
			nr_seq_partic_w,
			vl_conta_original_w,
			vl_partic_original_w;
		EXIT WHEN NOT FOUND; /* apply on C045 */
			begin

			z	:= coalesce(Vetor_Pacote_Original_partic_w.Count,0) + 1;

			Vetor_Pacote_Original_partic_w[z].nr_sequencia  	:= nr_sequencia_w;
			Vetor_Pacote_Original_partic_w[z].nr_seq_partic  	:= nr_seq_partic_w;
			Vetor_Pacote_Original_partic_w[z].ie_valor_informado  	:= ie_valor_inf_partic_w;
			Vetor_Pacote_Original_partic_w[z].vl_conta 		:= vl_conta_original_w;
			Vetor_Pacote_Original_partic_w[z].vl_participante  	:= vl_partic_original_w;

			end;
		end loop;
		close C045;

	end if;

	if ((coalesce(cd_situacao_glosa_w,0) not in (8,10,23)) and (coalesce(ie_resp_cred_manual_w,'N') = 'N')) then

		update	procedimento_paciente
		set	nr_seq_proc_pacote  = NULL,
			ie_valor_informado = 'N'
		where	nr_sequencia	= nr_sequencia_w;

		if (ie_valor_informado_w = 'S') then
			begin
			CALL atualiza_preco_procedimento(nr_sequencia_w, cd_convenio_p, nm_usuario_p);

			select	coalesce(max(vl_procedimento), 0)
			into STRICT	vl_proc_informado_w
			from	procedimento_paciente
			where	nr_sequencia		= nr_sequencia_w;

			if (vl_proc_informado_w = 0) then
				update	procedimento_paciente
				set	nr_seq_proc_pacote	 = NULL,
					ie_valor_informado	= 'S',
					vl_anestesista		= VL_ANESTESISTA_inform_w,
					VL_AUXILIARES		= VL_AUXILIARES_inform_w,
					VL_CUSTO_OPERACIONAL	= VL_CUSTO_OPERACIONAL_inform_w,
					VL_MATERIAIS		= VL_MATERIAIS_inform_w,
					VL_MEDICO		= VL_MEDICO_inform_w,
					VL_PROCEDIMENTO		= VL_PROCEDIMENTO_inform_w
				where	nr_sequencia	= nr_sequencia_w;
			end if;

			end;
		end if;

	end if;

	end;
END LOOP;
CLOSE C040;

OPEN C010;
LOOP
FETCH C010 into
 	nr_seq_pacote_w,
	dt_inicio_pacote_w,
	dt_final_pacote_w,
	ie_excedente_w,
	nr_seq_procedimento_w,
	nr_seq_proc_origem_w,
	ie_tipo_acomod_w,
	cd_setor_pacote_w,
	nr_seq_tipo_acomod_w,
	ie_exige_gabarito_w,
	nr_sequencia_pacote_w,
	ie_responsavel_credito_w,
	qt_dias_uti_w,
	qt_dias_hospital_w;
EXIT WHEN NOT FOUND; /* apply on C010 */

	regras_qt_limite_tab.delete;
	qt_acumulado_w		:= 0;
	ie_inclui_exclui_w 	:= 'E';

	select	count(*)
	into STRICT	qt_regra_setor_exclusivo_w
	from	pacote_procedimento
	where	nr_seq_pacote = nr_seq_pacote_w
	and	coalesce(ie_setor_exclusivo,'N') = 'S';

	cd_setor_pacote_aux_w	:= null;

	if (qt_regra_setor_exclusivo_w > 0) then
		cd_setor_pacote_aux_w	:= cd_setor_pacote_w;
		cd_setor_pacote_w	:= null;
	end if;

	OPEN C020;--PROCEDIMENTO_PACIENTE
	LOOP
	FETCH C020 into
		nr_sequencia_w,
		cd_procedimento_w,
		ie_origem_proced_w,
		dt_conta_w,
		qt_procedimento_w,
		ie_emite_conta_w,
		ie_emite_conta_honor_w,
		vl_medico_w,
		ie_tipo_atendimento_w,
		cd_setor_atendimento_w,
		nr_seq_proc_pac_w,
		vl_procedimento_w,
		vl_ponto_w,
		vl_dia_w,
		dt_procedimento_w,
		nr_seq_proc_interno_w,
		cd_medico_w,
		cd_cgc_prestador_w;
	EXIT WHEN NOT FOUND; /* apply on C020 */

		ie_proced_ok_w := False;
		if (nr_seq_proc_pac_w IS NOT NULL AND nr_seq_proc_pac_w::text <> '') and (Vetor_Pacote_w.count >= 1) then
			for i in 1..Vetor_Pacote_w.count loop
				if (nr_seq_proc_pac_w = Vetor_Pacote_w[i].nr_seq_pacote) then
					ie_proced_ok_w := True;
					exit;
				end if;
			end loop;
		end if;
		if (not ie_proced_ok_w) then
			ie_inclui_exclui_w 	:= 'I';
			if (cd_proced_ant_w <> cd_procedimento_w) then
				select 		cd_area_procedimento,
						cd_especialidade,
						cd_grupo_Proc
				into STRICT		cd_area_proc_w,
						cd_espec_proc_w,
						cd_grupo_Proc_w
				from estrutura_Procedimento_v
				where cd_procedimento		= cd_procedimento_w
				  and ie_origem_proced		= ie_origem_proced_w;

				--qt_acumulado_w		:= 0;
			end if;

			ie_considera_honorario_w	:= 'S';
			/*Elemar - 30/09/2005 - OS23663 - inclui o if */

			ie_inclui_exclui_w 		:= 'I';
			if (nr_sequencia_w <> nr_seq_proc_origem_w) then
				ie_inclui_exclui_w 		:= 'E';
			end if;

			qt_limite_w			:= 0;
			qt_regra_proc_orig_w		:= 0;
			ie_excedente_w			:= null;
			ie_ratear_item_w		:= 'S';
			ie_regra_pacote_proc_w		:= 'N';

			select	max(cd_centro_custo)
			into STRICT	cd_centro_custo_w
			from	setor_atendimento
			where	cd_setor_atendimento = cd_setor_atendimento_w;


			if (coalesce(nr_interno_conta_p,0) > 0) then
				/*SE TEM MOEDA NO PACOTE, ENTAO VERIFICA SE TEM VALOR DE COTACAO*/

				/* CASO EXISTA VALOR, ENTAO CONVERTE OS VALORES DO PROCEDIMENTO */

				begin
					select 	cd_moeda
					into STRICT 	cd_moeda_pacote_w
					from 	pacote
					where   nr_seq_pacote = nr_seq_pacote_w;
				exception
				when others then
					cd_moeda_pacote_w := null;
				end;

				 /*GRAVAR_LOG_CLIENTE('***ATUALIZA PROC*** INICIO');*/

				if (coalesce(cd_moeda_pacote_w,0) > 0) then
					/*obtem a cotacao mais atual*/

					vl_cotacao_w 		:= obter_valor_convertido_cotacao(nr_interno_conta_p,cd_moeda_pacote_w);

					 /*GRAVAR_LOG_CLIENTE('Valor cotacao = '||vl_cotacao_w);*/

					if (vl_cotacao_w > 0) then
						if (coalesce(vl_procedimento_w,0) >0) then
							vl_procedimento_w 	:= (vl_procedimento_w / vl_cotacao_w);
						end if;

						if (coalesce(vl_ponto_w,0) >0) then
							vl_ponto_w 	:= (vl_ponto_w/vl_cotacao_w);
						end if;

						if (coalesce(vl_dia_w,0) >0) then
							vl_dia_w	:= (vl_dia_w/vl_cotacao_w);
						end if;
					 end if;
					 /*GRAVAR_LOG_CLIENTE('vl_procedimento_w convertido= '||vl_procedimento_w);
					 GRAVAR_LOG_CLIENTE('vl_ponto_w convertido= '||vl_ponto_w);
					 GRAVAR_LOG_CLIENTE('vl_dia_w convertido= '||vl_dia_w);*/
				end if;
				/*GRAVAR_LOG_CLIENTE('***ATUALIZA PROC*** FIM');*/

			end if;

			if (nr_seq_proc_interno_w <> 0) then

				select 	coalesce(max(nr_seq_classif),0)
				into STRICT	nr_seq_classif_w
				from 	proc_interno
				where 	nr_sequencia = nr_seq_proc_interno_w;

			end if;

			nr_seq_proc_int_regra_w	:= null;

			select	coalesce(max(nr_seq_estrutura),0)
			into STRICT	nr_seq_estrutura_w
			from	pi_estrutura_cad
			where	nr_seq_proc_int = nr_seq_proc_interno_w;

			OPEN C030;--pacote_procedimento (regras de procedimento para entrar no pacote)
			LOOP
			FETCH C030 into
				ie_inclui_exclui_w,
				ie_excedente_w,
				qt_limite_w,
				ie_considera_honorario_w,
				ie_calcula_honorario_w,
				ie_calcula_custo_oper_w,
				pr_desconto_w,
				ie_ratear_item_w,
				ie_tipo_valor_w,
				nr_seq_regra_pacote_proc_w,
				vl_minimo_w,
				vl_maximo_w,
				cd_area_proc_regra_w,
				cd_proc_regra_w,
				ie_origem_proc_regra_w,
				pr_desc_w,
				vl_negociado_w,
				ie_setor_exclusivo_w,
				nr_seq_proc_int_regra_w,
				cd_setor_atend_regra_w,
				ie_valida_limite_proc_w;
			EXIT WHEN NOT FOUND; /* apply on C030 */

				ie_inclui_exclui_w	:= ie_inclui_exclui_w;

				if (nr_sequencia_w = nr_seq_proc_origem_w) then
					qt_regra_proc_orig_w:= qt_regra_proc_orig_w + 1;
				end if;

				ie_regra_pacote_proc_w:= 'S';

			END LOOP;
			CLOSE C030;

			if	(ie_tipo_valor_w = 'A') and  -- Total de CH's por Area
				(nvl(cd_area_proc_regra_w,0) > 0) and
				(ie_regra_pacote_proc_w = 'S') then

				y					:= nvl(Vetor_regra_CH_w.Count,0) + 1;
				Vetor_regra_CH_w(y).nr_seq_propaci 	:= nr_sequencia_w;
				Vetor_regra_CH_w(y).vl_ponto  		:= vl_ponto_w;
				Vetor_regra_CH_w(y).nr_seq_regra  	:= nr_seq_regra_pacote_proc_w;
				Vetor_regra_CH_w(y).vl_minimo_ch  	:= vl_minimo_w;
				Vetor_regra_CH_w(y).vl_maximo_ch	:= vl_maximo_w;
				Vetor_regra_CH_w(y).nr_seq_pacote	:= nr_seq_pacote_w;
				Vetor_regra_CH_w(y).cd_area_proced	:= cd_area_proc_regra_w;
				Vetor_regra_CH_w(y).qt_procedimento	:= qt_procedimento_w;

			end if;

			if	(ie_tipo_valor_w = 'D') and  -- Total de "CHs Area" por dia
				(nvl(cd_area_proc_regra_w,0) > 0) and
				(ie_regra_pacote_proc_w = 'S') then

				t					:= nvl(Vetor_regra_CH_dia_w.Count,0) + 1;
				Vetor_regra_CH_dia_w(t).nr_seq_propaci 	:= nr_sequencia_w;
				Vetor_regra_CH_dia_w(t).vl_ponto  	:= vl_ponto_w;
				Vetor_regra_CH_dia_w(t).nr_seq_regra  	:= nr_seq_regra_pacote_proc_w;
				Vetor_regra_CH_dia_w(t).vl_minimo_ch  	:= vl_minimo_w;
				Vetor_regra_CH_dia_w(t).vl_maximo_ch	:= vl_maximo_w;
				Vetor_regra_CH_dia_w(t).nr_seq_pacote	:= nr_seq_pacote_w;
				Vetor_regra_CH_dia_w(t).cd_area_proced	:= cd_area_proc_regra_w;
				Vetor_regra_CH_dia_w(t).qt_procedimento	:= qt_procedimento_w;
				Vetor_regra_CH_dia_w(t).dt_procedimento	:= dt_procedimento_w;

			end if;

			if	(ie_tipo_valor_w = 'X') and  -- Total de "CHs Area" TOTAL por dia   (Se todos estao dentro do limite min/maxs CH, entao todos entraram no pacote, caso contrario todos ficam de fora do paocte
				(nvl(cd_area_proc_regra_w,0) > 0) and
				(ie_regra_pacote_proc_w = 'S') then

				t					:= nvl(Vetor_regra_CH_Total_dia_w.Count,0) + 1;
				Vetor_regra_CH_Total_dia_w(t).nr_seq_propaci 	:= nr_sequencia_w;
				Vetor_regra_CH_Total_dia_w(t).vl_ponto  	:= vl_ponto_w;
				Vetor_regra_CH_Total_dia_w(t).nr_seq_regra  	:= nr_seq_regra_pacote_proc_w;
				Vetor_regra_CH_Total_dia_w(t).vl_minimo_ch  	:= vl_minimo_w;
				Vetor_regra_CH_Total_dia_w(t).vl_maximo_ch	:= vl_maximo_w;
				Vetor_regra_CH_Total_dia_w(t).nr_seq_pacote	:= nr_seq_pacote_w;
				Vetor_regra_CH_Total_dia_w(t).cd_area_proced	:= cd_area_proc_regra_w;
				Vetor_regra_CH_Total_dia_w(t).qt_procedimento	:= qt_procedimento_w;
				Vetor_regra_CH_Total_dia_w(t).dt_procedimento	:= dt_procedimento_w;

			end if;

			if	(ie_tipo_valor_w = 'Q') and  -- Qtde Total do procedimento por dia  (OS 167934)
				(nvl(cd_proc_regra_w,0) > 0) and (nvl(ie_origem_proc_regra_w,0) > 0) and
				(ie_regra_pacote_proc_w = 'S') then

				a						:= nvl(Vetor_regra_QTDE_dia_w.Count,0) + 1;
				Vetor_regra_QTDE_dia_w(a).nr_seq_propaci 	:= nr_sequencia_w;
				Vetor_regra_QTDE_dia_w(a).qt_procedimento	:= qt_procedimento_w;
				Vetor_regra_QTDE_dia_w(a).nr_seq_regra  	:= nr_seq_regra_pacote_proc_w;
				Vetor_regra_QTDE_dia_w(a).vl_minimo_qtde  	:= vl_minimo_w;
				Vetor_regra_QTDE_dia_w(a).vl_maximo_qtde	:= vl_maximo_w;
				Vetor_regra_QTDE_dia_w(a).nr_seq_pacote		:= nr_seq_pacote_w;
				Vetor_regra_QTDE_dia_w(a).cd_procedimento	:= cd_proc_regra_w;
				Vetor_regra_QTDE_dia_w(a).ie_origem_proced	:= ie_origem_proc_regra_w;
				Vetor_regra_QTDE_dia_w(a).dt_procedimento	:= dt_procedimento_w;

			end if;

			/* Fabricio em 11/09/2008 - Excluir o procedimento de origem do pacote quando a opcao exige gabarito estiver marcado e nao tiver regra para o procedimento */

			if	(ie_exige_gabarito_w = 'S') and
				(nr_sequencia_w = nr_seq_proc_origem_w) and
				(ie_exclui_proc_orig_pcte_w = 'S') and
				(qt_regra_proc_orig_w = 0) then

				ie_inclui_exclui_w 		:= 'E';

				select	cd_procedimento,
					nr_interno_conta
				into	cd_proc_w,
					nr_conta_w
				from	procedimento_paciente
				where	nr_sequencia	= nr_sequencia_w;

				--Retirada do proc. origem pacote (Parametro [241]) - #@CD_PROC#@ Seq. #@NR_SEQUENCIA#@
				ds_texto_w := substr(wheb_mensagem_pck.get_texto(301270,'CD_PROC='|| cd_proc_w || ';NR_SEQUENCIA='|| nr_sequencia_w ),1,2000);

				Gerar_Log_Pacote(nr_conta_w,
						nr_seq_procedimento_w,
						ds_texto_w ,
						nm_usuario_p,
						null,
						null);
			end if;

			if	(nvl(cd_setor_pacote_aux_w,0) > 0) and
				(nvl(ie_setor_exclusivo_w,'N') = 'N') and
				(cd_setor_pacote_aux_w <> cd_setor_atendimento_w) then
				goto proximo;
			end if;

			select 	nvl(max(cd_classif_setor),3)
			into	cd_classif_setor_w
			from 	setor_atendimento
			where 	cd_setor_atendimento = cd_setor_atendimento_w;

			if	(ie_consiste_dias_setores_uti_w = 'R') then

				select 	Obter_Data_UTI_Setor(nr_atendimento_p, dt_inicio_pacote_w, dt_final_pacote_w, nvl(qt_dias_uti_w,0), 'UTI'),
					Obter_Data_UTI_Setor(nr_atendimento_p, dt_inicio_pacote_w, dt_final_pacote_w, nvl(qt_dias_hospital_w,0), 'SETOR')
				into	dt_limite_uti_w,
					dt_limite_setores_w
				from 	dual;

				if	((cd_classif_setor_w = 4) and ((nvl(qt_dias_uti_w,0) = 0) or (dt_conta_w  > dt_limite_uti_w))) then
					ie_inclui_exclui_w:= 'E';
				elsif	((cd_classif_setor_w <> 4) and ((nvl(qt_dias_hospital_w,0) = 0) or (dt_conta_w  > dt_limite_setores_w))) then
					ie_inclui_exclui_w:= 'E';
				end if;

			elsif	(ie_consiste_dias_setores_uti_w = 'S') then

				/*SO-2220426*/

				if	((cd_classif_setor_w = 4) and (((ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_conta_w) - ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_inicio_pacote_w)) > qt_dias_uti_w) or (qt_dias_uti_w = 0))) then
					ie_inclui_exclui_w:= 'E';
				elsif	((cd_classif_setor_w = 1) and (((ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_conta_w) - ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_inicio_pacote_w)) > nvl(qt_dias_hospital_w,0)))) then
					ie_inclui_exclui_w:= 'E';
				elsif	((cd_classif_setor_w not in (1,4)) and (((ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_conta_w) - ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_inicio_pacote_w)) > nvl(qt_dias_hospital_w,0)))) then
					ie_inclui_exclui_w:= 'E';
				end if;

			end if;

			------Verifica os criterios pela quantidade
			if	(ie_inclui_exclui_w = 'I') and
				(qt_limite_w > 0) then

				/* forma nova para verificar a quantidade limite */

				if (ie_valida_limite_proc_w = 'N') then
					if (not regras_qt_limite_tab.EXISTS(nr_seq_regra_pacote_proc_w)) then
						regras_qt_limite_tab(nr_seq_regra_pacote_proc_w).nr_seq_regra 	:= nr_seq_regra_pacote_proc_w;
						regras_qt_limite_tab(nr_seq_regra_pacote_proc_w).qt_limite 	:= nvl(qt_limite_w,0);
						regras_qt_limite_tab(nr_seq_regra_pacote_proc_w).qt_acumulado 	:= 0;
					end if;
					qt_acumulado_w := nvl(regras_qt_limite_tab(nr_seq_regra_pacote_proc_w).qt_acumulado,0);

				elsif (cd_proced_ant_w <> cd_procedimento_w) then
					/*forma antiga da verificacao de quantidade limite*/

					qt_acumulado_w := 0;
				end if;

				if	(nvl(nr_seq_proc_int_regra_w,0) > 0) and
					(nvl(nr_seq_proc_int_ant_w,0) <> nvl(nr_seq_proc_interno_w,0)) then
					qt_acumulado_w	:= 0;
				end if;

				if	(nvl(cd_setor_atend_regra_w,0) > 0) and
					(nvl(cd_setor_atend_ant_w,0) <> nvl(cd_setor_atendimento_w,0)) then
					qt_acumulado_w	:= 0;
				end if;

				/* Ricardo - 05/09/2006 - Incluido o qt_limite_w no if do gabarito - OS35209 */

				if	(qt_acumulado_w + qt_procedimento_w > qt_limite_w) then
					if	(ie_exige_gabarito_w = 'S') or (qt_limite_w > 0) then
						if	(qt_limite_w - qt_acumulado_w > 0) then

							delete procedimento_repasse
							where nr_seq_procedimento = nr_sequencia_w;

							Duplicar_Proc_Pac_Pacote (nr_sequencia_w, nm_usuario_p, nr_seq_gerada_w);

							select	cd_procedimento,
								nr_interno_conta
							into	cd_proc_w,
								nr_conta_w
							from	procedimento_paciente
							where	nr_sequencia	= nr_sequencia_w;

							/*AJUSTA O PROCEDIMENTO COM A PARTE DA QUANTIDADE QUE NAO EXCEDE O LIMITE*/

							update	procedimento_paciente
							set	qt_procedimento		= (qt_limite_w - qt_acumulado_w),
								nr_seq_proc_pacote	= nr_seq_procedimento_w,
								vl_procedimento		= (vl_procedimento / qt_procedimento) * (qt_limite_w - qt_acumulado_w)
							where	nr_sequencia = nr_sequencia_w;

							--Atualizacao do procedimento - #@CD_PROC#@ Seq. #@NR_SEQUENCIA#@
							ds_texto_w := substr(wheb_mensagem_pck.get_texto(301274,'CD_PROC='|| cd_proc_w || ';NR_SEQUENCIA='|| nr_sequencia_w),1,2000);

							Gerar_Log_Pacote(nr_conta_w,
									nr_seq_procedimento_w,
									ds_texto_w,
									nm_usuario_p,
									null,
									null);

							/*AJUSTA O PROCEDIMENTO DUPLICADO COM A PARTE DA QUANTIDADE QUE EXCEDEU O LIMITE (ESTE FICA FORA DO PACOTE)*/

							update	procedimento_paciente
							set qt_procedimento    = ((qt_acumulado_w + qt_procedimento_w) - qt_limite_w),
								vl_procedimento    = (vl_procedimento / qt_procedimento) * ((qt_acumulado_w + qt_procedimento_w) - qt_limite_w),
								nr_seq_proc_pacote = null
							where	nr_sequencia 	   = nr_seq_gerada_w;

							nr_sequencia_w	:= nr_seq_gerada_w;
						end if;
						qt_acumulado_w	:= qt_acumulado_w + qt_procedimento_w;
						regras_qt_limite_tab(nr_seq_regra_pacote_proc_w).qt_acumulado	:= qt_acumulado_w;
					end if;
					ie_inclui_exclui_w	:= 'E';
				else
					qt_acumulado_w := qt_acumulado_w + qt_procedimento_w;
					regras_qt_limite_tab(nr_seq_regra_pacote_proc_w).qt_acumulado	:= qt_acumulado_w;
				end if;
			end if;

			------Define acao sistema
			if	(ie_inclui_exclui_w = 'I') then

				-- Edgar 25/03/2006, OS 30564, inclui vl_participante_w no if, se tiver participante e
				-- a regra excluir honorario, deve colocar fora do pacote
				select	nvl(sum(vl_conta),0)
				into	vl_participante_w
				from	procedimento_participante
				where	nr_sequencia	= nr_sequencia_w;

				begin
				select	ie_repassa_medico,
					ie_entra_conta
				into	ie_repassa_medico_w,
					ie_entra_conta_w
				from	regra_honorario
				where	cd_regra	= ie_responsavel_credito_w;
				exception
				when others then
					ie_repassa_medico_w	:= 'X';
					ie_entra_conta_w	:= 'X';
				end;
				/* obter o tipo de acomodacao do convenio */

				begin
					select	cd_plano_convenio
					into	cd_plano_w
					from	atend_categoria_convenio_v
					where	nr_atendimento	= nr_atendimento_p
					and	cd_convenio	= cd_convenio_p
					and	cd_categoria	= cd_categoria_w;
					exception
							when others then
							begin
							select	cd_plano_convenio
							into	cd_plano_w
							from	atend_categoria_convenio_v
							where	nr_atendimento	= nr_atendimento_p
							and	cd_convenio	= cd_convenio_p;
							exception
								when others then
								cd_plano_w		:= null;
							end;
				end;

				select	nvl(max(ie_tipo_convenio),0),
					max(ie_classif_contabil)
				into	ie_tipo_convenio_w,
					ie_classif_convenio_w
				from	convenio
				where	cd_convenio	= cd_convenio_p;

				if	(ie_tipo_convenio_w = 3) and
					(ie_origem_proced_w <> 7) then

					begin
					/*APAC*/

					ie_complexidade_sus_w	:= substr(sus_obter_dados_apac_conta(nr_interno_conta_w, 'CX','C'),1,2);
					ie_tipo_financ_sus_w	:= substr(sus_obter_dados_apac_conta(nr_interno_conta_w, 'TF','C'),1,4);
					/*AIH*/

					if	(ie_complexidade_sus_w is null) and
						(ie_tipo_financ_sus_w is null) then

						sus_obter_complex_financ_aih(nr_interno_conta_w, ie_complexidade_sus_w,ie_tipo_financ_sus_w);

						/*ie_complexidade_sus_w	:= substr(sus_obter_complexidade_aih(nr_interno_conta_w),1,2);
						ie_tipo_financ_sus_w	:= substr(sus_obter_tipo_financ_aih(nr_interno_conta_w),1,4); */
						if	(ie_complexidade_sus_w is null) and
							(ie_tipo_financ_sus_w is null) then

							select	max(ie_complexidade),
								max(ie_tipo_financiamento)
							into	ie_complexidade_sus_w,
								ie_tipo_financ_sus_w
							from	sus_aih_unif
							where	nr_interno_conta	= nr_interno_conta_w;

						end if;


					end if;
					/*Demais procedimentos*/

					if	(ie_complexidade_sus_w is null) and
						(ie_tipo_financ_sus_w is null) then
							select	ie_complexidade,
								ie_tipo_financiamento
							into	ie_complexidade_sus_w,
								ie_tipo_financ_sus_w
							from	sus_procedimento
							where	cd_procedimento		= cd_procedimento_w
							and	ie_origem_proced	= ie_origem_proced_w
							and	rownum = 1;
					end if;
					exception when others then
						ie_complexidade_sus_w	:= null;
						ie_tipo_financ_sus_w	:= null;
					end;

				end if;

				select	cd_procedimento,
					nr_interno_conta
				into	cd_proc_w,
					nr_conta_w
				from	procedimento_paciente
				where	nr_sequencia	= nr_sequencia_w;

				define_conta_procedimento(
					cd_estabelecimento_w,
					cd_procedimento_w,
					ie_origem_proced_w,
					1,
					ie_clinica_w,
					cd_setor_atendimento_w,
					ie_classif_convenio_w,
					ie_tipo_atendimento_w,
					ie_tipo_convenio_w,
					cd_convenio_p,
					cd_categoria_w,
					dt_entrada_w,
					cd_conta_contabil_w,
					cd_centro_custo_w,
					cd_plano_w,
					'S',
					ie_complexidade_sus_w,
					ie_tipo_financ_sus_w,
					null,
					null,
					null,
					null,
					null,
					nr_seq_proc_interno_w);
				-- Edgar 29/06/2006 OS 36205, tratei ie_repassa_medico_w e ie_entra_conta_w
				-- se for tudo zero mas nao entra na conta e nao repassa, entao o convenio vai pagar
				-- e deve sair no rel da conta zerado
				if	(ie_considera_honorario_w = 'S') or
					((vl_medico_w	= 0) and (vl_participante_w = 0) and ((ie_repassa_medico_w <> 'N') or (ie_entra_conta_w <> 'N'))) or
					(nr_sequencia_w	= nr_seq_procedimento_w) then
					begin

					for 	i in 1..Vetor_Pacote_Original_w.count loop
						if	(Vetor_Pacote_Original_w(i).nr_sequencia = nr_sequencia_w) then
							nr_seq_proc_pacote_w	:= Vetor_Pacote_Original_w(i).nr_seq_pacote;
							exit;
						end if;
					end loop;

					select	cd_procedimento,
						nr_interno_conta
					into	cd_proc_w,
						nr_conta_w
					from	procedimento_paciente
					where	nr_sequencia	= nr_sequencia_w;


					if	(nvl(nr_seq_proc_pacote_w,0) = 0) then
						begin

						update	Procedimento_paciente
						set	nr_seq_proc_pacote 	= nr_seq_procedimento_w,
							cd_conta_contabil	= cd_conta_contabil_w,
							cd_centro_custo_receita	= decode(cd_centro_custo_w,0,null,cd_centro_custo_w),
							ie_ratear_item		= ie_ratear_item_w,
							cd_sequencia_parametro = philips_contabil_pck.get_parametro_conta_contabil
						where	nr_sequencia		= nr_sequencia_w;

						--Atualizacao do procedimento - #@CD_PROC#@ Seq. #@NR_SEQUENCIA#@
						ds_texto_w := substr(wheb_mensagem_pck.get_texto(301274,'CD_PROC='|| cd_proc_w || ';NR_SEQUENCIA='|| nr_sequencia_w ),1,2000);

						Gerar_Log_Pacote(nr_conta_w,
								nr_seq_procedimento_w,
								ds_texto_w,
								nm_usuario_p,
								null,
								null);

						end;
					else
						begin

						update	Procedimento_paciente
						set	nr_seq_proc_pacote 	= nr_seq_proc_pacote_w,
							cd_conta_contabil	= cd_conta_contabil_w,
							cd_centro_custo_receita	= decode(cd_centro_custo_w,0,null,cd_centro_custo_w),
							ie_ratear_item		= ie_ratear_item_w
						where	nr_sequencia		= nr_sequencia_w;

						--Atualizacao do procedimento - #@CD_PROC#@ Seq. #@NR_SEQUENCIA#@
						ds_texto_w := substr(wheb_mensagem_pck.get_texto(301274,'CD_PROC='|| cd_proc_w || ';NR_SEQUENCIA='|| nr_sequencia_w ),1,2000);

						Gerar_Log_Pacote(nr_conta_w,
								nr_seq_proc_pacote_w,
								ds_texto_w,
								nm_usuario_p,
								null,
								null);

						end;
					end if;

					-- Incluido esse if OS 241933
					if	(vl_negociado_w is not null) then
						update	Procedimento_paciente
						set	vl_medico		= decode(vl_negociado_w,0,0,vl_medico),
							vl_custo_operacional	= decode(vl_negociado_w,0,0,vl_custo_operacional),
							vl_procedimento		= vl_negociado_w,
							ie_valor_informado	= 'S'
						where	nr_sequencia		= nr_sequencia_w;

						update	procedimento_participante
						set	vl_conta 		= decode(vl_negociado_w,0,0,vl_conta),
							vl_participante 	= decode(vl_negociado_w,0,0,vl_participante),
							ie_valor_informado	= 'S'
						where	nr_sequencia		= nr_sequencia_w
						and	vl_negociado_w		= 0;
					end if;
					vl_negociado_w:= null;

					-- Incluido esse if OS 236181
					if	(nvl(pr_desc_w,0) > 0) then
						update	Procedimento_paciente
						set	vl_procedimento		= vl_procedimento - (vl_procedimento * pr_desc_w),
							ie_valor_informado	= 'S'
						where	nr_sequencia		= nr_sequencia_w;
					end if;
					pr_desc_w:= null;

					end;
				else
					Duplicar_Proc_Pac_Pacote(	nr_sequencia_w, nm_usuario_p, nr_seq_gerada_w);

					if	(ie_emite_conta_honor_w is not null) then
						ie_emite_conta_w	:= ie_emite_conta_honor_w;
						ie_emite_conta_honor_w	:= null;
					end if;

					update Procedimento_paciente
					set 	vl_custo_operacional	= 0,
						vl_materiais		= 0,
						vl_procedimento		= vl_procedimento -
									vl_custo_operacional -
									vl_materiais,
						ie_valor_informado	= 'S',
						ie_emite_conta		= ie_emite_conta_w,
						ie_emite_conta_honor	= ie_emite_conta_honor_w
					where nr_sequencia		= nr_sequencia_w;

					update Procedimento_paciente
					set 	nr_seq_proc_pacote 	= nr_seq_procedimento_w,
						cd_conta_contabil     	= cd_conta_contabil_w,
						cd_centro_custo_receita	= decode(cd_centro_custo_w,0,null,cd_centro_custo_w),
						vl_procedimento		= vl_custo_operacional + vl_materiais,
						qt_procedimento		= 0,
						vl_medico		= 0,
						vl_auxiliares		= 0,
						vl_adic_plant		= 0,
						ie_valor_informado	= 'S',
						ie_responsavel_credito	= null,
						ie_emite_conta_honor	= null
					where nr_sequencia		= nr_seq_gerada_w;


					select	cd_procedimento,
						nr_interno_conta
					into	cd_proc_w,
						nr_conta_w
					from	procedimento_paciente
					where	nr_sequencia	= nr_seq_gerada_w;

					--Atualizacao do procedimento - #@CD_PROC#@ Seq. #@NR_SEQUENCIA#@
					ds_texto_w := substr(wheb_mensagem_pck.get_texto(301274,'CD_PROC='|| cd_proc_w || ';NR_SEQUENCIA='|| nr_seq_gerada_w ),1,2000);

					Gerar_Log_Pacote(nr_conta_w,
							nr_seq_procedimento_w,
							ds_texto_w,
							nm_usuario_p,
							null,
							null);

				end if;
			else
				if	(ie_calcula_honorario_w = 'N') then
					update	Procedimento_paciente
					set 	vl_medico		= 0,
						vl_anestesista		= 0,
						vl_procedimento		= vl_procedimento - vl_medico - vl_anestesista,
						ie_valor_informado	= 'S'
					where	nr_sequencia		= nr_sequencia_w;
				end if;
				if	(ie_calcula_custo_oper_w = 'N') then

					update	Procedimento_paciente
					set 	vl_custo_operacional	= 0,
						vl_materiais		= 0,
						vl_procedimento		= vl_procedimento - vl_custo_operacional - vl_materiais,
						ie_valor_informado	= 'S'
					where	nr_sequencia		= nr_sequencia_w;
				end if;
				pr_desconto_w := nvl(pr_desconto_w,0);

				if	(ie_excedente_w = 1) then /* Conta Particular */
					update Procedimento_paciente
					set 	nr_seq_proc_pacote 	= null,
						nr_interno_conta		= null,
						cd_convenio			= cd_convenio_w,
						cd_categoria		= cd_categoria_w,
						vl_procedimento		= vl_procedimento - (vl_procedimento * pr_desconto_w),
						ie_valor_informado	= decode(pr_desconto_w,0,ie_valor_informado,'S')
					where nr_sequencia		= nr_sequencia_w
					  and nr_sequencia		<> nr_seq_proc_origem_w;
					atualiza_preco_Procedimento(nr_sequencia_w, cd_convenio_p, nm_usuario_p);
				elsif (ie_excedente_w = 2) then /* Conta Normal */
					update Procedimento_paciente
					set 	nr_seq_proc_pacote 	= null,
						vl_procedimento		= vl_procedimento - (vl_procedimento * pr_desconto_w),
						ie_valor_informado	= decode(pr_desconto_w,0,ie_valor_informado,'S')
					where nr_sequencia		= nr_sequencia_w; -- OS 461462
					  --and nr_sequencia		<> nr_seq_proc_origem_w;
				elsif	(ie_excedente_w = 3) then /* Outra Conta Normal */
					select	nr_interno_conta
					into	nr_interno_conta_W
					from	procedimento_paciente
					where	nr_sequencia	= nr_sequencia_w;

					Obter_Conta_Pac_Complementar(nr_interno_conta_w, nr_conta_compl_w);

					update procedimento_paciente
					set 	nr_seq_proc_pacote 	= null,
						nr_interno_conta	= nr_conta_compl_w,
						vl_procedimento		= vl_procedimento - (vl_procedimento * pr_desconto_w),
						ie_valor_informado	= decode(pr_desconto_w,0,ie_valor_informado,'S')
					where nr_sequencia		= nr_sequencia_w;
				elsif	(ie_excedente_w = 6) then /* Outra Conta Normal  - Status em definitivo*/
					begin

					select	nr_interno_conta
					into	nr_interno_conta_W
					from	procedimento_paciente
					where	nr_sequencia	= nr_sequencia_w;

					Obter_Conta_Pac_Complementar(nr_interno_conta_w, nr_conta_compl_w);


					update procedimento_paciente
					set 	nr_seq_proc_pacote 	= null,
						nr_interno_conta	= nr_conta_compl_w,
						vl_procedimento		= vl_procedimento - (vl_procedimento * pr_desconto_w),
						vl_medico		= decode(vl_medico, null, null, vl_medico - (vl_medico * pr_desconto_w)),
						vl_anestesista		= decode(vl_anestesista, null, null, vl_anestesista - (vl_anestesista * pr_desconto_w)),
						vl_auxiliares		= decode(vl_auxiliares, null, null, vl_auxiliares - (vl_auxiliares * pr_desconto_w)),
						vl_custo_operacional	= decode(vl_custo_operacional, null, null, vl_custo_operacional - (vl_custo_operacional * pr_desconto_w)),
						vl_materiais		= decode(vl_materiais, null, null, vl_materiais - (vl_materiais * pr_desconto_w)),
						ie_valor_informado	= decode(pr_desconto_w,0,ie_valor_informado,'S')
					where nr_sequencia		= nr_sequencia_w;

					recalcular_conta_paciente(nr_conta_compl_w, nm_usuario_p);
					atualizar_resumo_conta(nr_conta_compl_w, 2);

					update	conta_paciente
					set	ie_status_acerto	= 2
					where	nr_interno_conta	= nr_conta_compl_w;

					end;
				elsif	(ie_excedente_w = 4) then /* Mover item para excluido */
					if	(cd_motivo_exc_conta_w is null) then

						update procedimento_paciente
						set 	nr_seq_proc_pacote 	= null
						where nr_sequencia		= nr_sequencia_w;
					else
						begin

						select	nr_interno_conta
						into	nr_interno_conta_w
						from	procedimento_paciente
						where	nr_sequencia	= nr_sequencia_w;

						--Regra pacote - Conta: #@NR_INTERNO_CONTA#@ - Pacote: #@NR_SEQ_PROCEDIMENTO#@
						ds_texto_w := substr(wheb_mensagem_pck.get_texto(301282,'NR_INTERNO_CONTA='|| nr_interno_conta_w || ';NR_SEQ_PROCEDIMENTO='|| nr_seq_procedimento_w ),1,2000);

						update procedimento_paciente
						set 	nr_seq_proc_pacote 	= null,
							nr_interno_conta	= null,
							dt_acerto_conta		= null,
							cd_motivo_exc_conta	= cd_motivo_exc_conta_w,
							ds_observacao		= substr(ds_observacao || chr(13) || chr(10) || ds_texto_w,1,254)
						where nr_sequencia		= nr_sequencia_w;

						end;
					end if;
				elsif	(ie_excedente_w = 5) then /* Dispersao */
					update procedimento_paciente
					set 	nr_seq_proc_pacote 	= nr_seq_procedimento_w,
						ie_dispersao		= 'S'
					where nr_sequencia		= nr_sequencia_w;

					select	cd_procedimento,
						nr_interno_conta
					into	cd_proc_w,
						nr_conta_w
					from	procedimento_paciente
					where	nr_sequencia	= nr_sequencia_w;

					--Atualizacao do procedimento - #@CD_PROC#@ Seq. #@NR_SEQUENCIA#@
					ds_texto_w := substr(wheb_mensagem_pck.get_texto(301274,'CD_PROC='|| cd_proc_w || ';NR_SEQUENCIA='|| nr_sequencia_w ),1,2000);

					Gerar_Log_Pacote(nr_conta_w,
							nr_seq_procedimento_w,
							ds_texto_w,
							nm_usuario_p,
							null,
							null);
				end if;

				if	(ie_excedente_w in (1,2,3,6)) and
					(pr_desconto_w > 0) then

					select	max(vl_procedimento),
						max(vl_medico),
						max(vl_anestesista),
						max(vl_materiais),
						max(vl_auxiliares),
						max(vl_custo_operacional)
					into	vl_proc_orig_w,
						vl_medic_orig_w,
						vl_anest_orig_w,
						vl_materiais_orig_w,
						vl_aux_orig_w,
						vl_custo_oper_orig_w
					from	procedimento_paciente
					where	nr_sequencia = nr_sequencia_w;

					insert into proc_pac_desc_pacote( nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_propaci, nr_seq_proc_pacote,
						vl_original, pr_desconto, vl_medico, vl_anestesista, vl_materiais, vl_auxiliares, vl_custo_operacional)
					values ( mat_atend_pac_desc_pacote_seq.NextVal, sysdate, nm_usuario_p, sysdate, nm_usuario_p, nr_sequencia_w, nr_seq_procedimento_w,
						vl_proc_orig_w, pr_desconto_w, vl_medic_orig_w, vl_anest_orig_w, vl_materiais_orig_w, vl_aux_orig_w, vl_custo_oper_orig_w
					);

				end if;
			end if;
			<<proximo>>
			null;
		end if;

		nr_seq_proc_int_ant_w	:= nr_seq_proc_interno_w;
		cd_setor_atend_ant_w	:= cd_setor_atendimento_w;
		cd_proced_ant_w		:= cd_procedimento_w;
	END LOOP;
	CLOSE C020;
	Vetor_Pacote_w(nvl(Vetor_Pacote_w.Count,0) + 1).nr_seq_pacote := nr_seq_procedimento_w;
END LOOP;
close c010;

/* OS 109675  Fabricio  em  07/10/2008, coloquei esse Cursor para pegar os itens que estavam como valor informado e que nao entraram no pacote,  para manter os valores informados alterados pelo C040 */

OPEN C050;
LOOP
FETCH C050 into nr_sequencia_w;
EXIT WHEN C050%NOTFOUND;
	begin

	for 	i in 1..Vetor_Pacote_Original_w.count loop
		if	(Vetor_Pacote_Original_w(i).nr_sequencia = nr_sequencia_w) then
			if	(Vetor_Pacote_Original_w(i).ie_valor_informado = 'S')	then

				update	procedimento_paciente
				set	nr_seq_proc_pacote	= null,
					ie_valor_informado	= 'S',
					vl_anestesista		= Vetor_Pacote_Original_w(i).vl_anestesista,
					VL_AUXILIARES		= Vetor_Pacote_Original_w(i).vl_auxiliares,
					VL_CUSTO_OPERACIONAL	= Vetor_Pacote_Original_w(i).vl_custo_operacional,
					VL_MATERIAIS		= Vetor_Pacote_Original_w(i).vl_materiais,
					VL_MEDICO		= Vetor_Pacote_Original_w(i).vl_medico,
					VL_PROCEDIMENTO		= Vetor_Pacote_Original_w(i).vl_procedimento
				where	nr_sequencia		= nr_sequencia_w;

				-- Incluido Tratamento para quando os participantes do procedimento estavam com valor informado, porem o procedimento nao entrava no pacote, voltar o valor original informado
				for 	j in 1..Vetor_Pacote_Original_partic_w.count loop
					if	(Vetor_Pacote_Original_partic_w(j).nr_sequencia = nr_sequencia_w) then
						if	(Vetor_Pacote_Original_partic_w(j).ie_valor_informado = 'S')	then

							update	procedimento_participante
							set	ie_valor_informado	= 'S',
								vl_participante		= Vetor_Pacote_Original_partic_w(j).vl_participante,
								vl_conta		= Vetor_Pacote_Original_partic_w(j).vl_conta
							where	nr_sequencia		= nr_sequencia_w
							and 	nr_seq_partic		= Vetor_Pacote_Original_partic_w(j).nr_seq_partic;

						end if;

					end if;

				end loop;

			end if;
			exit;
		end if;
	end loop;

	end;
END LOOP;
CLOSE C050;

/* OS 128605 Fabricio em 24/03/2009. Cursor para tratar a opcao de Tipo Valor = Qtde CH Area */

OPEN C060;
LOOP
FETCH C060 into
	cd_area_proc_regra_w;
EXIT WHEN C060%NOTFOUND;
	begin

	vl_ponto_acumulado_w	:= 0;
	vl_ponto_aux_qtde_w	:= 0;

	for 	y in 1..Vetor_regra_CH_w.count loop
		if	(Vetor_regra_CH_w(y).cd_area_proced = cd_area_proc_regra_w) then

			if	(Vetor_regra_CH_w(y).qt_procedimento > 1) then

				vl_ponto_aux_qtde_w:=  Vetor_regra_CH_w(y).vl_ponto / Vetor_regra_CH_w(y).qt_procedimento;
				qt_proc_aux_w:= 0;

				for 	i in 1..Vetor_regra_CH_w(y).qt_procedimento loop

					vl_ponto_acumulado_w:= vl_ponto_acumulado_w + vl_ponto_aux_qtde_w;

					if	not ((vl_ponto_acumulado_w >= Vetor_regra_CH_w(y).vl_minimo_ch) and
						     (vl_ponto_acumulado_w <= Vetor_regra_CH_w(y).vl_maximo_ch)) then

						qt_proc_aux_w:= qt_proc_aux_w + 1;

					end if;

				end loop;

				Duplicar_Proc_Pac_Pacote(Vetor_regra_CH_w(y).nr_seq_propaci, nm_usuario_p, nr_seq_gerada_w);

				update	procedimento_paciente
				set	qt_procedimento		= Vetor_regra_CH_w(y).qt_procedimento - qt_proc_aux_w
				where	nr_sequencia		= Vetor_regra_CH_w(y).nr_seq_propaci;

				--Regra de pacote (Qtde CH Area), Seq.Original = #@NR_SEQ_PROPACI#@
				ds_texto_w := substr(wheb_mensagem_pck.get_texto(301285,'NR_SEQ_PROPACI='|| Vetor_regra_CH_w(y).nr_seq_propaci ),1,254);

				update	procedimento_paciente
				set	nr_seq_proc_pacote	= null,
					qt_procedimento		= qt_proc_aux_w,
					ds_observacao		= ds_texto_w
				where	nr_sequencia		= nr_seq_gerada_w;

				atualiza_preco_procedimento(nr_seq_gerada_w, cd_convenio_p, nm_usuario_p);
				atualiza_preco_procedimento(Vetor_regra_CH_w(y).nr_seq_propaci, cd_convenio_p, nm_usuario_p);

			else

				vl_ponto_acumulado_w:= vl_ponto_acumulado_w + Vetor_regra_CH_w(y).vl_ponto;

				if	not ((vl_ponto_acumulado_w >= Vetor_regra_CH_w(y).vl_minimo_ch) and
					    (vl_ponto_acumulado_w <= Vetor_regra_CH_w(y).vl_maximo_ch)) then

					update	procedimento_paciente
					set	nr_seq_proc_pacote	= null
					where	nr_sequencia		= Vetor_regra_CH_w(y).nr_seq_propaci;

					atualiza_preco_procedimento(Vetor_regra_CH_w(y).nr_seq_propaci, cd_convenio_p, nm_usuario_p);

				end if;

			end if;

		end if;
	end loop;

	end;
END LOOP;
CLOSE C060;

dt_inicio_pacote_orig_w	:=  dt_inicio_pacote_w;
dt_final_pacote_orig_w	:=  dt_final_pacote_w;

/* OS 139113 Fabricio em 11/05/2009. Cursor para tratar a opcao de Tipo Valor = Qtde "CH Area" por dia */

/*SO-2220426*/

while ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_final_pacote_w) > ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_inicio_pacote_w) loop
	begin

	/*  Ordenar os vetores de registros em ordem de valores */

	for  f in 1..Vetor_regra_CH_dia_w.count loop
		for  g in f+1..Vetor_regra_CH_dia_w.count loop

			if	(Vetor_regra_CH_dia_w(g).vl_ponto <  Vetor_regra_CH_dia_w(f).vl_ponto) then

				nr_sequencia_w			:= Vetor_regra_CH_dia_w(g).nr_seq_propaci;
				vl_ponto_w			:= Vetor_regra_CH_dia_w(g).vl_ponto;
				nr_seq_regra_pacote_proc_w	:= Vetor_regra_CH_dia_w(g).nr_seq_regra;
				vl_minimo_w			:= Vetor_regra_CH_dia_w(g).vl_minimo_ch;
				vl_maximo_w			:= Vetor_regra_CH_dia_w(g).vl_maximo_ch;
				nr_seq_pacote_w			:= Vetor_regra_CH_dia_w(g).nr_seq_pacote;
				cd_area_proc_regra_w		:= Vetor_regra_CH_dia_w(g).cd_area_proced;
				qt_procedimento_w		:= Vetor_regra_CH_dia_w(g).qt_procedimento;
				dt_procedimento_w		:= Vetor_regra_CH_dia_w(g).dt_procedimento;

				Vetor_regra_CH_dia_w(g).nr_seq_propaci 	:= Vetor_regra_CH_dia_w(f).nr_seq_propaci;
				Vetor_regra_CH_dia_w(g).vl_ponto  	:= Vetor_regra_CH_dia_w(f).vl_ponto;
				Vetor_regra_CH_dia_w(g).nr_seq_regra  	:= Vetor_regra_CH_dia_w(f).nr_seq_regra;
				Vetor_regra_CH_dia_w(g).vl_minimo_ch  	:= Vetor_regra_CH_dia_w(f).vl_minimo_ch;
				Vetor_regra_CH_dia_w(g).vl_maximo_ch	:= Vetor_regra_CH_dia_w(f).vl_maximo_ch;
				Vetor_regra_CH_dia_w(g).nr_seq_pacote	:= Vetor_regra_CH_dia_w(f).nr_seq_pacote;
				Vetor_regra_CH_dia_w(g).cd_area_proced	:= Vetor_regra_CH_dia_w(f).cd_area_proced;
				Vetor_regra_CH_dia_w(g).qt_procedimento	:= Vetor_regra_CH_dia_w(f).qt_procedimento;
				Vetor_regra_CH_dia_w(g).dt_procedimento	:= Vetor_regra_CH_dia_w(f).dt_procedimento;

				Vetor_regra_CH_dia_w(f).nr_seq_propaci 	:= nr_sequencia_w;
				Vetor_regra_CH_dia_w(f).vl_ponto  	:= vl_ponto_w;
				Vetor_regra_CH_dia_w(f).nr_seq_regra  	:= nr_seq_regra_pacote_proc_w;
				Vetor_regra_CH_dia_w(f).vl_minimo_ch  	:= vl_minimo_w;
				Vetor_regra_CH_dia_w(f).vl_maximo_ch	:= vl_maximo_w;
				Vetor_regra_CH_dia_w(f).nr_seq_pacote	:= nr_seq_pacote_w;
				Vetor_regra_CH_dia_w(f).cd_area_proced	:= cd_area_proc_regra_w;
				Vetor_regra_CH_dia_w(f).qt_procedimento	:= qt_procedimento_w;
				Vetor_regra_CH_dia_w(f).dt_procedimento	:= dt_procedimento_w;

			end if;

		end loop;
	end loop;

	OPEN C060;
	LOOP
	FETCH C060 into
		cd_area_proc_regra_w;
	EXIT WHEN C060%NOTFOUND;
		begin

		vl_ponto_acumulado_w	:= 0;
		vl_ponto_aux_qtde_w	:= 0;

		for 	t in 1..Vetor_regra_CH_dia_w.count loop
			if	((Vetor_regra_CH_dia_w(t).cd_area_proced = cd_area_proc_regra_w) and
				(to_char(Vetor_regra_CH_dia_w(t).dt_procedimento,'dd/mm/yyyy') = to_char(dt_inicio_pacote_w,'dd/mm/yyyy'))) then

				if	(Vetor_regra_CH_dia_w(t).qt_procedimento > 1) then

					vl_ponto_aux_qtde_w:=  Vetor_regra_CH_dia_w(t).vl_ponto / Vetor_regra_CH_dia_w(t).qt_procedimento;
					qt_proc_aux_w:= 0;

					for 	i in 1..Vetor_regra_CH_dia_w(t).qt_procedimento loop

						vl_ponto_acumulado_w:= vl_ponto_acumulado_w + vl_ponto_aux_qtde_w;

						if	not ((vl_ponto_acumulado_w >= Vetor_regra_CH_dia_w(t).vl_minimo_ch) and
							     (vl_ponto_acumulado_w <= Vetor_regra_CH_dia_w(t).vl_maximo_ch)) then

							qt_proc_aux_w:= qt_proc_aux_w + 1;

						end if;

					end loop;

					Duplicar_Proc_Pac_Pacote(Vetor_regra_CH_dia_w(t).nr_seq_propaci, nm_usuario_p, nr_seq_gerada_w);

					update	procedimento_paciente
					set	qt_procedimento		= Vetor_regra_CH_dia_w(t).qt_procedimento - qt_proc_aux_w
					where	nr_sequencia		= Vetor_regra_CH_dia_w(t).nr_seq_propaci;

					--Regra de pacote (Qtde CH Area por dia), Seq. Original = #@NR_SEQ_PROPACI#@
					ds_texto_w := substr(wheb_mensagem_pck.get_texto(301295,'NR_SEQ_PROPACI='|| Vetor_regra_CH_dia_w(t).nr_seq_propaci ),1,254);

					update	procedimento_paciente
					set	nr_seq_proc_pacote	= null,
						qt_procedimento		= qt_proc_aux_w,
						ds_observacao		= ds_texto_w
					where	nr_sequencia		= nr_seq_gerada_w;

					atualiza_preco_procedimento(nr_seq_gerada_w, cd_convenio_p, nm_usuario_p);
					atualiza_preco_procedimento(Vetor_regra_CH_dia_w(t).nr_seq_propaci, cd_convenio_p, nm_usuario_p);

				else

					vl_ponto_acumulado_w:= vl_ponto_acumulado_w + Vetor_regra_CH_dia_w(t).vl_ponto;

					if	not ((vl_ponto_acumulado_w >= Vetor_regra_CH_dia_w(t).vl_minimo_ch) and
						    (vl_ponto_acumulado_w <= Vetor_regra_CH_dia_w(t).vl_maximo_ch)) then

						update	procedimento_paciente
						set	nr_seq_proc_pacote	= null
						where	nr_sequencia		= Vetor_regra_CH_dia_w(t).nr_seq_propaci;

						atualiza_preco_procedimento(Vetor_regra_CH_dia_w(t).nr_seq_propaci, cd_convenio_p, nm_usuario_p);

					end if;

				end if;

			end if;
		end loop;

		end;
	END LOOP;
	CLOSE C060;

	dt_inicio_pacote_w:= dt_inicio_pacote_w + 1;

	end;

end loop;

dt_inicio_pacote_w	:= dt_inicio_pacote_orig_w;
dt_final_pacote_w	:= dt_final_pacote_orig_w;


/* OS 167934 Fabricio em 08/12/2009. Cursor para tratar a opcao de Tipo Valor = Qtde proc. por dia */

/*SO-2220426*/

while ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_final_pacote_w) > ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_inicio_pacote_w) loop
	begin

	/*  Ordenar os vetores de registros em ordem de valores */

	for  b in 1..Vetor_regra_QTDE_dia_w.count loop
		for  c in b+1..Vetor_regra_QTDE_dia_w.count loop

			if	(Vetor_regra_QTDE_dia_w(c).qt_procedimento <  Vetor_regra_QTDE_dia_w(b).qt_procedimento) then

				nr_sequencia_w			:= Vetor_regra_QTDE_dia_w(c).nr_seq_propaci;
				qt_procedimento_w		:= Vetor_regra_QTDE_dia_w(c).qt_procedimento;
				nr_seq_regra_pacote_proc_w	:= Vetor_regra_QTDE_dia_w(c).nr_seq_regra;
				vl_minimo_w			:= Vetor_regra_QTDE_dia_w(c).vl_minimo_qtde;
				vl_maximo_w			:= Vetor_regra_QTDE_dia_w(c).vl_maximo_qtde;
				nr_seq_pacote_w			:= Vetor_regra_QTDE_dia_w(c).nr_seq_pacote;
				cd_procedimento_w		:= Vetor_regra_QTDE_dia_w(c).cd_procedimento;
				ie_origem_proced_w		:= Vetor_regra_QTDE_dia_w(c).ie_origem_proced;
				dt_procedimento_w		:= Vetor_regra_QTDE_dia_w(c).dt_procedimento;

				Vetor_regra_QTDE_dia_w(c).nr_seq_propaci 	:= Vetor_regra_QTDE_dia_w(b).nr_seq_propaci;
				Vetor_regra_QTDE_dia_w(c).qt_procedimento	:= Vetor_regra_QTDE_dia_w(b).qt_procedimento;
				Vetor_regra_QTDE_dia_w(c).nr_seq_regra  	:= Vetor_regra_QTDE_dia_w(b).nr_seq_regra;
				Vetor_regra_QTDE_dia_w(c).vl_minimo_qtde  	:= Vetor_regra_QTDE_dia_w(b).vl_minimo_qtde;
				Vetor_regra_QTDE_dia_w(c).vl_maximo_qtde	:= Vetor_regra_QTDE_dia_w(b).vl_maximo_qtde;
				Vetor_regra_QTDE_dia_w(c).nr_seq_pacote		:= Vetor_regra_QTDE_dia_w(b).nr_seq_pacote;
				Vetor_regra_QTDE_dia_w(c).cd_procedimento	:= Vetor_regra_QTDE_dia_w(b).cd_procedimento;
				Vetor_regra_QTDE_dia_w(c).ie_origem_proced	:= Vetor_regra_QTDE_dia_w(b).ie_origem_proced;
				Vetor_regra_QTDE_dia_w(c).dt_procedimento	:= Vetor_regra_QTDE_dia_w(b).dt_procedimento;


				Vetor_regra_QTDE_dia_w(b).nr_seq_propaci 	:= nr_sequencia_w;
				Vetor_regra_QTDE_dia_w(b).qt_procedimento	:= qt_procedimento_w;
				Vetor_regra_QTDE_dia_w(b).nr_seq_regra  	:= nr_seq_regra_pacote_proc_w;
				Vetor_regra_QTDE_dia_w(b).vl_minimo_qtde  	:= vl_minimo_w;
				Vetor_regra_QTDE_dia_w(b).vl_maximo_qtde	:= vl_maximo_w;
				Vetor_regra_QTDE_dia_w(b).nr_seq_pacote		:= nr_seq_pacote_w;
				Vetor_regra_QTDE_dia_w(b).cd_procedimento	:= cd_procedimento_w;
				Vetor_regra_QTDE_dia_w(b).ie_origem_proced	:= ie_origem_proced_w;
				Vetor_regra_QTDE_dia_w(b).dt_procedimento	:= dt_procedimento_w;

			end if;

		end loop;
	end loop;

	OPEN C070;
	LOOP
	FETCH C070 into
		cd_procedimento_w,
		ie_origem_proced_w;
	EXIT WHEN C070%NOTFOUND;
		begin

		qt_acumulado_w		:= 0;

		for 	d in 1..Vetor_regra_QTDE_dia_w.count loop
			if	((Vetor_regra_QTDE_dia_w(d).cd_procedimento = cd_procedimento_w) and
				 (Vetor_regra_QTDE_dia_w(d).ie_origem_proced = ie_origem_proced_w) and
				(to_char(Vetor_regra_QTDE_dia_w(d).dt_procedimento,'dd/mm/yyyy') = to_char(dt_inicio_pacote_w,'dd/mm/yyyy'))) then

				if	(Vetor_regra_QTDE_dia_w(d).qt_procedimento > 1) then

					qt_proc_aux_w:= 0;

					for 	i in 1..Vetor_regra_QTDE_dia_w(d).qt_procedimento loop

						qt_acumulado_w:= qt_acumulado_w + 1;

						if	not ((qt_acumulado_w >= Vetor_regra_QTDE_dia_w(d).vl_minimo_qtde) and
							     (qt_acumulado_w <= Vetor_regra_QTDE_dia_w(d).vl_maximo_qtde)) then

							qt_proc_aux_w:= qt_proc_aux_w + 1;

						end if;

					end loop;

					Duplicar_Proc_Pac_Pacote(Vetor_regra_QTDE_dia_w(d).nr_seq_propaci, nm_usuario_p, nr_seq_gerada_w);

					update	procedimento_paciente
					set	qt_procedimento		= Vetor_regra_QTDE_dia_w(d).qt_procedimento - qt_proc_aux_w
					where	nr_sequencia		= Vetor_regra_QTDE_dia_w(d).nr_seq_propaci;

					--Regra de pacote (Qtde proc. dia), Seq. Original = #@NR_SEQ_PROPACI#@
					ds_texto_w := substr(wheb_mensagem_pck.get_texto(301309,'NR_SEQ_PROPACI='|| Vetor_regra_QTDE_dia_w(d).nr_seq_propaci ),1,2000);

					update	procedimento_paciente
					set	nr_seq_proc_pacote	= null,
						qt_procedimento		= qt_proc_aux_w,
						ds_observacao		= ds_texto_w
					where	nr_sequencia		= nr_seq_gerada_w;

					atualiza_preco_procedimento(nr_seq_gerada_w, cd_convenio_p, nm_usuario_p);
					atualiza_preco_procedimento(Vetor_regra_QTDE_dia_w(d).nr_seq_propaci, cd_convenio_p, nm_usuario_p);

				else

					qt_acumulado_w:= qt_acumulado_w + Vetor_regra_QTDE_dia_w(d).qt_procedimento;

					if	not ((qt_acumulado_w >= Vetor_regra_QTDE_dia_w(d).vl_minimo_qtde) and
						    (qt_acumulado_w <= Vetor_regra_QTDE_dia_w(d).vl_maximo_qtde)) then

						update	procedimento_paciente
						set	nr_seq_proc_pacote	= null
						where	nr_sequencia		= Vetor_regra_QTDE_dia_w(d).nr_seq_propaci;

						atualiza_preco_procedimento(Vetor_regra_QTDE_dia_w(d).nr_seq_propaci, cd_convenio_p, nm_usuario_p);

					end if;

				end if;

			end if;
		end loop;

		end;
	END LOOP;
	CLOSE C070;

	dt_inicio_pacote_w:= dt_inicio_pacote_w + 1;

	end;

end loop;

dt_inicio_pacote_w	:= dt_inicio_pacote_orig_w;
dt_final_pacote_w	:= dt_final_pacote_orig_w;

/* OS 244152 Fabricio em 25/08/2010. Cursor para tratar a opcao de Tipo Valor = Qtde "CH Area" por dia  TOTAL  Se a soma dos CH's da area estiverem dentro do limite da regra entao todos entram no pacote, caso contrario, todos ficam de fora (Tudo ou Nada)*/

/*SO-2220426*/

while ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_final_pacote_w) > ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_inicio_pacote_w) loop
	begin

	OPEN C060;
	LOOP
	FETCH C060 into
		cd_area_proc_regra_w;
	EXIT WHEN C060%NOTFOUND;
		begin

		if (Vetor_regra_CH_Total_dia_w.count > 0) then

			vl_ponto_acumulado_w	:= 0;
			vl_ponto_aux_qtde_w	:= 0;

			for 	t in 1..Vetor_regra_CH_Total_dia_w.count loop
				if	((Vetor_regra_CH_Total_dia_w(t).cd_area_proced = cd_area_proc_regra_w) and
					(to_char(Vetor_regra_CH_Total_dia_w(t).dt_procedimento,'dd/mm/yyyy') = to_char(dt_inicio_pacote_w,'dd/mm/yyyy'))) then

					vl_ponto_acumulado_w:= vl_ponto_acumulado_w + Vetor_regra_CH_Total_dia_w(t).vl_ponto;

				end if;
			end loop;

			if	not ((vl_ponto_acumulado_w >= Vetor_regra_CH_Total_dia_w(t).vl_minimo_ch) and (vl_ponto_acumulado_w <= Vetor_regra_CH_Total_dia_w(t).vl_maximo_ch)) then

				for 	t in 1..Vetor_regra_CH_Total_dia_w.count loop
					if	((Vetor_regra_CH_Total_dia_w(t).cd_area_proced = cd_area_proc_regra_w) and
						(to_char(Vetor_regra_CH_Total_dia_w(t).dt_procedimento,'dd/mm/yyyy') = to_char(dt_inicio_pacote_w,'dd/mm/yyyy'))) then

						update	procedimento_paciente
						set	nr_seq_proc_pacote	= null
						where	nr_sequencia		= Vetor_regra_CH_Total_dia_w(t).nr_seq_propaci;

						atualiza_preco_procedimento(Vetor_regra_CH_Total_dia_w(t).nr_seq_propaci, cd_convenio_p, nm_usuario_p);

					end if;
				end loop;

			end if;
		end if;
		end;
	END LOOP;
	CLOSE C060;

	dt_inicio_pacote_w:= dt_inicio_pacote_w + 1;

	end;

end loop;

if	(2 = philips_param_pck.get_cd_pais) and -- 2 = Mexico
	(nr_interno_conta_p is not null) then
	atualizar_vl_conta_excedente(nr_interno_conta_p,'N',nm_usuario_p);
end if;

if (nvl(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualizar_procedimento_pacote ( nr_atendimento_p bigint, nr_interno_conta_p bigint, cd_convenio_p bigint, nm_usuario_p text) FROM PUBLIC;

