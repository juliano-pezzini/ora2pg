-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE cbhpm_carga_proc_preco ( cd_proc_p bigint, ds_proc_p text, tx_porte_p bigint, cd_porte_p text, qt_custo_oper_p bigint, qt_aux_p bigint, qt_porte_anes_P bigint, qt_filme_p bigint, qt_indic_p bigint, qt_Unid_Radio_p text, dt_vigencia_p timestamp, nm_usuario_p text, ds_erro_p INOUT text) AS $body$
DECLARE


qt_registros_w	bigint;
qt_reg_proced_w	bigint;
qt_reg_estrut_w	bigint;
ds_erro_w		varchar(2000);
nr_sequencia_w	bigint;
ie_permite_update_w	varchar(1) := 'N';


BEGIN

qt_registros_w	:= 0;
ds_erro_w		:= 'OK';
ie_permite_update_w	:= coalesce(Obter_Valor_Param_Usuario(705,7, Obter_perfil_Ativo, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento),'N');

/* Carga do procedimento */

begin
select count(*)
into STRICT	 qt_registros_w
from	 procedimento
where	 cd_procedimento	= cd_proc_p
and	 ie_origem_proced = 5;

select	count(*)
into STRICT	qt_reg_estrut_w
from	grupo_proc
where	to_char(cd_grupo_proc) = substr(to_char(cd_proc_p),1,5);

/*
if	(qt_registros_w	= 0) and
	(qt_reg_estrut_w = 0) then
	insert into log_XXXXXXtasy values(sysdate, 'CBHPM', 99586,
			 'Erro insert grupo : ' || substr(to_char(cd_proc_p),1,5));
end	if;
*/
/* Update dos procedimentos --- Heckmann OS 201188 13/03/2010   Depende do parâmetro [7] da função Cargas*/

if (ie_permite_update_w = 'S') then

	if (qt_registros_w	> 0) and (qt_reg_estrut_w <> 0) then
		begin
		update procedimento
		set	ds_procedimento		= InitCap(substr(ds_proc_p,1,240)),
			ie_situacao		= 'A',
			cd_grupo_proc		= substr(to_char(cd_proc_p),1,5),
			dt_atualizacao		= clock_timestamp(),
			nm_usuario		= 'Tasy',
			ie_classificacao	= 1,
			ie_origem_proced	= 5,
			ds_proc_interno		= InitCap(substr(ds_proc_p,1,80)),
			nr_proc_interno		= cd_proc_p
		where	cd_procedimento		= cd_proc_p
		and	ie_origem_proced	= 5;
		exception
	  	when others then
	    		ds_erro_w	:= SQLERRM(SQLSTATE);
	    	/*	insert into log_xxxtasy values(sysdate, 'CBHPM', 88888,
				 'Erro insert proc : ' || to_char(cd_proc_p) || ds_erro_w); */
		end;
	end if;
end if;

if (qt_registros_w	= 0) and (qt_reg_estrut_w <> 0) then
	 begin
	 insert into procedimento(
		CD_PROCEDIMENTO,
		DS_PROCEDIMENTO,
		DS_COMPLEMENTO,
		IE_SITUACAO,
		CD_GRUPO_PROC,
		DT_ATUALIZACAO,
		NM_USUARIO,
		CD_TIPO_PROCEDIMENTO,
		IE_CLASSIFICACAO,
		CD_LAUDO_PADRAO,
		CD_SETOR_EXCLUSIVO,
		IE_ORIGEM_PROCED,
		QT_DIA_INTERNACAO_SUS,
			 QT_IDADE_MINIMA_SUS,
			 QT_IDADE_MAXIMA_SUS                ,
			 IE_SEXO_SUS                        ,
			 IE_INREAL_SUS                      ,
			 IE_INATOM_SUS                      ,
			 CD_GRUPO_SUS                       ,
			 CD_DOENCA_CID                      ,
			 CD_CID_SECUNDARIO                  ,
			 DS_PROC_INTERNO                    ,
			 NR_PROC_INTERNO                    ,
			 IE_UTIL_PRESCRICAO                 ,
			 CD_KIT_MATERIAL                    ,
			 DS_ORIENTACAO                      ,
			 IE_VALOR_ESPECIAL                  ,
			 DT_CARGA                           ,
			 QT_MAX_PROCEDIMENTO                ,
			 IE_EXIGE_LAUDO                     ,
			 IE_FORMA_APRESENTACAO              ,
			 IE_APURACAO_CUSTO                  ,
			 QT_HORA_BAIXAR_PRESCR              ,
			 NR_SEQ_GRUPO_REC                   ,
			 DS_PRESCRICAO                      ,
			 IE_EXIGE_AUTOR_SUS                 ,
			 QT_EXEC_BARRA                      ,
			 DS_PROCEDIMENTO_PESQUISA           ,
			 IE_ATIV_PROF_BPA			  ,
			 IE_ALTA_COMPLEXIDADE		  ,
			 IE_IGNORA_ORIGEM,
			IE_CLASSIF_CUSTO,
			ie_localizador)
	values (cd_proc_p,
			InitCap(substr(ds_proc_p,1,240)),
			null,
			'A',
			substr(to_char(cd_proc_p),1,5),
			clock_timestamp(),
			nm_usuario_p,
			 null,
			 '1',
			 null,
			 null,
			 5,
			 null,
			 null,
			 null,
			 null,
			 null,
			 null,
			 null,
			 null,
			 null,
			 InitCap(substr(ds_proc_p,1,80)),
			 cd_proc_p,
			 null,
			 null,
			 null,
			 null,
			 null,
			 null,
			 null,
			 null,
			 null,
			 null,
			 null,
			 null,
			 'N',
			 1,
			 null,
			'N',
			'N',
			'N',
			'B',
			'S');
	exception
  	when others then
    		ds_erro_w	:= SQLERRM(SQLSTATE);
    	/*	insert into logxxxx_tasy values(sysdate, 'CBHPM', 88888,
			 'Erro insert proc : ' || to_char(cd_proc_p) || ds_erro_w); log_xxxtasy */
	end;
end if;
end;

/* Carga de preços */

begin
select count(*)
into STRICT	 qt_registros_w
from	 cbhpm_preco
where	 cd_procedimento	= cd_proc_p
and	 ie_origem_proced 	= 5
and	 dt_vigencia		= dt_vigencia_p;

select count(*)
into STRICT	 qt_reg_proced_w
from	 procedimento
where	 cd_procedimento	= cd_proc_p
and	 ie_origem_proced = 5;

if (qt_registros_w	= 0) and (qt_reg_proced_w <> 0) then
	 begin
	 select nextval('cbhpm_preco_seq')
	 into STRICT	  nr_sequencia_w
	;

	 insert into cbhpm_preco(
			 NR_SEQUENCIA           ,
			 DT_ATUALIZACAO         ,
			 NM_USUARIO             ,
			 CD_PROCEDIMENTO        ,
			 IE_ORIGEM_PROCED       ,
			 DT_VIGENCIA            ,
			 CD_PORTE               ,
			 TX_PORTE               ,
			 QT_UCO                 ,
			 NR_PORTE_ANEST         ,
			 NR_AUXILIAR            ,
			 QT_FILME               ,
			 QT_INCIDENCIA          ,
			 IE_UNID_RA             )
	values (
			 nr_sequencia_w,
			 clock_timestamp(),
			 nm_usuario_p,
			 cd_proc_p,
			 5,
			 dt_vigencia_p,
			 cd_porte_p,
			 tx_porte_p,
			 qt_custo_oper_p,
			 qt_porte_anes_P,
			 qt_aux_p,
			 qt_filme_p,
			 qt_indic_p,
			 qt_Unid_Radio_p);
	exception
  	when others then
    		ds_erro_w	:= SQLERRM(SQLSTATE);
    /*		insert into log_xxxxtasy values(sysdate, 'CBHPM', 88888,
			 'Erro insert preço proc : ' || to_char(cd_proc_p) || ds_erro_w); */
	end;
end if;
end;

commit;
ds_erro_p	:= ds_erro_w;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE cbhpm_carga_proc_preco ( cd_proc_p bigint, ds_proc_p text, tx_porte_p bigint, cd_porte_p text, qt_custo_oper_p bigint, qt_aux_p bigint, qt_porte_anes_P bigint, qt_filme_p bigint, qt_indic_p bigint, qt_Unid_Radio_p text, dt_vigencia_p timestamp, nm_usuario_p text, ds_erro_p INOUT text) FROM PUBLIC;

