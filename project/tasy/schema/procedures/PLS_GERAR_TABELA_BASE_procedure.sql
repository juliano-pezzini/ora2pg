-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_tabela_base (nr_seq_segurado_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
vl_informado_w			double precision;
vl_atual_w			double precision;
nr_seq_tabela_w			bigint;
nr_seq_plano_w			bigint;
cd_pessoa_fisica_w		varchar(10);
nr_seq_contrato_w		bigint;
dt_contratacao_w		timestamp;
nm_beneficiario_w		varchar(255);
ie_tabela_base_w		varchar(1);
qt_idade_w			integer;
qt_registros_w			bigint;
nr_seq_tabela_nova_w		bigint;
nr_seq_preco_base_w		bigint;
tx_acrescimo_w			double precision;
nr_seq_preco_novo_w		bigint;
ie_anterior_w			varchar(1)	:= 'S';
ie_atualizando_w		varchar(1)	:= 'S';
ie_posterior_w			varchar(1)	:= 'S';
vl_anterior_w			double precision;
nr_seq_preco_anterior_w		bigint;
qt_idade_inicial_w		integer;
qt_idade_final_w		integer;
tx_acrescimo_base_w		double precision;
nr_seq_preco_w			bigint;
ie_reajuste_w			varchar(1);
dt_contrato_w			timestamp;

c01 CURSOR FOR 
	SELECT	qt_idade_inicial, 
		qt_idade_final, 
		tx_acrescimo 
	from	pls_plano_preco 
	where	nr_seq_tabela	= nr_seq_tabela_w 
	order by qt_idade_inicial;

BEGIN
 
if (nr_seq_segurado_p IS NOT NULL AND nr_seq_segurado_p::text <> '') or (coalesce(nr_seq_segurado_p,0) <> 0) then 
 
	select	nr_seq_tabela, 
		nr_seq_plano, 
		vl_analise, 
		cd_pessoa_fisica, 
		nr_seq_contrato, 
		substr(obter_nome_pf(cd_pessoa_fisica),1,255) nm_beneficiario, 
		dt_contratacao 
	into STRICT	nr_seq_tabela_w, 
		nr_seq_plano_w, 
		vl_informado_w, 
		cd_pessoa_fisica_w, 
		nr_seq_contrato_w, 
		nm_beneficiario_w, 
		dt_contratacao_w 
	from	pls_segurado 
	where	nr_sequencia	= nr_seq_segurado_p;
 
	if (vl_informado_w = 0) then 
		CALL wheb_mensagem_pck.exibir_mensagem_abort(265785,'chr(13)= '||chr(13));
		--Mensagem: O valor informado deve ser diferente de zero! || chr(13) || 
		--Mensagem: Informe o valor que o beneficiário paga atualmente. 
	end if;
 
	select	coalesce(max(ie_tabela_base),'N') 
	into STRICT	ie_tabela_base_w 
	from	pls_tabela_preco 
	where	nr_sequencia	= nr_seq_tabela_w;
 
	RAISE NOTICE 'passou01';
 
	if (ie_tabela_base_w = 'S') then 
 
		select	coalesce(max(somente_numero(obter_idade(dt_nascimento,clock_timestamp(),'A'))),999) 
		into STRICT	qt_idade_w 
		from	pessoa_fisica 
		where	cd_pessoa_fisica	= cd_pessoa_fisica_w 
		and	(dt_nascimento IS NOT NULL AND dt_nascimento::text <> '');
 
		RAISE NOTICE 'passou02';
 
		if (qt_idade_w <> 999) then 
			begin 
			select	count(*) 
			into STRICT	qt_registros_w 
			from	pls_plano_preco 
			where	qt_idade_w	>= qt_idade_inicial 
			and	qt_idade_w	<= qt_idade_final 
			and	nr_seq_tabela	= nr_seq_tabela_w;
			exception 
				when others then 
					CALL wheb_mensagem_pck.exibir_mensagem_abort(265786,'chr(13)='||chr(13)|| 'seq_contrato='||nr_seq_contrato_w|| 'chr(13=)'||chr(13)|| 'seq_segurado='||nr_seq_segurado_p|| 'beneficiario='||nm_beneficiario_w);
					--Menasgem: Faixa etária incompatível com idade do beneficiário. ||chr(13)|| 
					--Contrato: || nr_seq_contrato_w||chr(13)|| 
					--Beneficiário: ||nr_seq_segurado_p|| ||nm_beneficiario_w 
			end;
 
			select	dt_contrato, 
				ie_reajuste 
			into STRICT	dt_contrato_w, 
				ie_reajuste_w 
			from	pls_contrato 
			where	nr_sequencia	= nr_seq_contrato_w;
 
			if (coalesce(ie_reajuste_w,'C') = 'C') then 
				dt_contratacao_w	:= dt_contrato_w;
			end if;
 
			select	nextval('pls_tabela_preco_seq') 
			into STRICT	nr_seq_tabela_nova_w 
			;
 
			insert into pls_tabela_preco(nr_sequencia, 
				dt_atualizacao, 
				nm_usuario, 
				nm_tabela, 
				dt_inicio_vigencia, 
				dt_fim_vigencia, 
				nr_seq_plano, 
				dt_liberacao, 
				ie_tabela_base, 
				nr_contrato, 
				nr_segurado) 
			values (nr_seq_tabela_nova_w, 
				clock_timestamp(), 
				nm_usuario_p, 
				'Tabela para o beneficiário: '||nr_seq_segurado_p||' - '|| nm_beneficiario_w||' / Contrato: '|| nr_seq_contrato_w, 
				dt_contratacao_w, 
				clock_timestamp(), 
				nr_seq_plano_w, 
				clock_timestamp(), 
				'N', 
				nr_seq_contrato_w, 
				nr_seq_segurado_p);
 
			open c01;
			loop 
			fetch c01 into	qt_idade_inicial_w, 
					qt_idade_final_w, 
					tx_acrescimo_base_w;
			EXIT WHEN NOT FOUND; /* apply on c01 */
				begin 
 
				select	nextval('pls_plano_preco_seq') 
				into STRICT	nr_seq_preco_w 
				;
 
				insert into pls_plano_preco(nr_sequencia, 
					dt_atualizacao, 
					nm_usuario, 
					nr_seq_tabela, 
					qt_idade_inicial, 
					qt_idade_final, 
					vl_preco_inicial, 
					vl_preco_atual, 
					tx_acrescimo) 
				values (nextval('pls_plano_preco_seq'), 
					clock_timestamp(), 
					nm_usuario_p, 
					nr_seq_tabela_nova_w, 
					qt_idade_inicial_w, 
					qt_idade_final_w, 
					0, 
					0, 
					tx_acrescimo_base_w);
				end;
			end loop;
			close c01;
 
			update	pls_plano_preco 
			set	vl_preco_inicial	= vl_informado_w, 
				vl_preco_atual		= vl_informado_w 
			where	nr_seq_tabela		= nr_seq_tabela_nova_w 
			and	qt_idade_w		>= qt_idade_inicial 
			and	qt_idade_w		<= qt_idade_final;
 
			select	nr_sequencia, 
				tx_acrescimo 
			into STRICT	nr_seq_preco_base_w, 
				tx_acrescimo_w 
			from	pls_plano_preco 
			where	qt_idade_w	>= qt_idade_inicial 
			and	qt_idade_w	<= qt_idade_final 
			and	nr_seq_tabela	= nr_seq_tabela_nova_w;
 
			vl_anterior_w	:= vl_informado_w;
 
			while(ie_atualizando_w	= 'S') or (ie_anterior_w		= 'S') or (ie_posterior_w		= 'S') loop 
				begin 
 
				vl_atual_w	:= 0;
 
				RAISE NOTICE 'passou05';
 
				select	coalesce(max(nr_sequencia),0) 
				into STRICT	nr_seq_preco_novo_w 
				from	pls_plano_preco 
				where	nr_seq_tabela		= nr_seq_tabela_nova_w 
				and	qt_idade_final		< qt_idade_w 
				and	nr_sequencia		<> nr_seq_preco_base_w 
				and	coalesce(vl_preco_inicial,0)	= 0;
 
				if (nr_seq_preco_novo_w	<> 0) and (ie_anterior_w		= 'S') then 
 
					select	dividir_sem_round(vl_anterior_w,(tx_acrescimo_w + 100)) * 100 
					into STRICT	vl_atual_w 
					;
 
					update	pls_plano_preco 
					set	vl_preco_inicial	= vl_atual_w, 
						vl_preco_atual		= vl_atual_w 
					where	nr_sequencia		= nr_seq_preco_novo_w;
 
					ie_anterior_w	:= 'N';
					vl_anterior_w	:= vl_atual_w;
 
					RAISE NOTICE 'passou1';
 
				elsif (nr_seq_preco_novo_w	<> 0) then 
 
					select	min(nr_sequencia) 
					into STRICT	nr_seq_preco_anterior_w 
					from	pls_plano_preco 
					where	nr_sequencia	> nr_seq_preco_novo_w;
 
					select	tx_acrescimo 
					into STRICT	tx_acrescimo_w 
					from	pls_plano_preco 
					where	nr_sequencia	= nr_seq_preco_anterior_w;
 
					select	dividir_sem_round(vl_anterior_w,(tx_acrescimo_w + 100)) * 100 
					into STRICT	vl_atual_w 
					;
 
					update	pls_plano_preco 
					set	vl_preco_inicial	= vl_atual_w, 
						vl_preco_atual		= vl_atual_w 
					where	nr_sequencia		= nr_seq_preco_novo_w;
 
					vl_anterior_w	:= vl_atual_w;
 
					RAISE NOTICE 'passou2';
 
				elsif (nr_seq_preco_novo_w = 0) then 
 
					select	coalesce(min(nr_sequencia),0) 
					into STRICT	nr_seq_preco_novo_w 
					from	pls_plano_preco 
					where	nr_seq_tabela		= nr_seq_tabela_nova_w 
					and	qt_idade_final		> qt_idade_w 
					and	nr_sequencia		<> nr_seq_preco_base_w 
					and	coalesce(vl_preco_inicial,0)	= 0;
 
					if (nr_seq_preco_novo_w > 0) then 
 
						if (ie_posterior_w = 'S') then 
							vl_anterior_w	:= vl_informado_w;
						end if;
 
						select	tx_acrescimo 
						into STRICT	tx_acrescimo_w 
						from	pls_plano_preco 
						where	nr_sequencia	= nr_seq_preco_novo_w;
 
						select (dividir_sem_round((vl_anterior_w)::numeric, 100) * tx_acrescimo_w) + vl_anterior_w 
						into STRICT	vl_atual_w 
						;
 
						update	pls_plano_preco 
						set	vl_preco_inicial	= vl_atual_w, 
							vl_preco_atual		= vl_atual_w 
						where	nr_sequencia		= nr_seq_preco_novo_w;
 
						vl_anterior_w	:= vl_atual_w;
						ie_posterior_w	:= 'N';
						ie_anterior_w	:= 'N';
 
						RAISE NOTICE 'passou3';
 
					else 
						ie_atualizando_w	:= 'N';
						ie_posterior_w		:= 'N';
						ie_anterior_w		:= 'N';
					end if;
				else 
					ie_atualizando_w	:= 'N';
				end if;
				end;
			end loop;
		else 
			CALL wheb_mensagem_pck.exibir_mensagem_abort(265787,'chr(23)= '||chr(13)||'seq_contrato= '||nr_seq_contrato_w||' chr(13)= '||chr(13)||'seq_segurado= '||nr_seq_segurado_p||'beneficiario= '||nm_beneficiario_w);
			--Mensagem: Data de nascimento inválida. ||chr(13)|| 
			--Mensagem: Contrato: ||nr_seq_contrato_w||chr(13)|| 
			--Mensagem: Beneficiário: ||nr_seq_segurado_p|| - ||nm_beneficiario_w 
		end if;
	end if;
 
	update	pls_segurado 
	set	nr_seq_tabela	= nr_seq_tabela_nova_w, 
		dt_atualizacao	= clock_timestamp(), 
		nm_usuario	= nm_usuario_p 
	where	nr_sequencia	= nr_seq_segurado_p;
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_tabela_base (nr_seq_segurado_p bigint, nm_usuario_p text) FROM PUBLIC;

