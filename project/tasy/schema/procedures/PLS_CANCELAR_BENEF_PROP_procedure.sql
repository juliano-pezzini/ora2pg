-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_cancelar_benef_prop ( nr_seq_benef_p bigint, nr_seq_motivo_canc_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE


nm_beneficiario_w		varchar(255);
nr_seq_proposta_w		bigint;
qt_dependentes_w		bigint;
ds_mensagem_w			varchar(255) := '';
nr_seq_inclusao_benef_w		pls_inclusao_beneficiario.nr_sequencia%type;
nr_seq_motivo_reprov_inclusa_w	pls_motivo_cancelamento.nr_seq_motivo_reprov_inclusao%type;
ie_contratacao_concluida_w	pls_motivo_cancelamento.ie_contratacao_concluida%type;

C01 CURSOR FOR
	SELECT	nr_sequencia,
		nr_seq_inclusao_benef
	from	pls_proposta_beneficiario
	where	nr_seq_titular	= nr_seq_benef_p;

BEGIN

if (nr_seq_benef_p IS NOT NULL AND nr_seq_benef_p::text <> '') and (nr_seq_motivo_canc_p IS NOT NULL AND nr_seq_motivo_canc_p::text <> '') then
	select	substr(obter_nome_pf(cd_beneficiario),1,255),
		nr_seq_proposta,
		nr_seq_inclusao_benef
	into STRICT	nm_beneficiario_w,
		nr_seq_proposta_w,
		nr_seq_inclusao_benef_w
	from	pls_proposta_beneficiario
	where	nr_sequencia	= nr_seq_benef_p;
	
	select	max(nr_seq_motivo_reprov_inclusao),
		coalesce(max(ie_contratacao_concluida),'N')
	into STRICT	nr_seq_motivo_reprov_inclusa_w,
		ie_contratacao_concluida_w
	from	pls_motivo_cancelamento
	where	nr_sequencia	= nr_seq_motivo_canc_p;
	
	update	pls_proposta_beneficiario
	set	dt_cancelamento	= clock_timestamp(),
		nr_seq_motivo_cancelamento	= nr_seq_motivo_canc_p
	where	nr_sequencia	= nr_seq_benef_p;
	
	if (nr_seq_inclusao_benef_w IS NOT NULL AND nr_seq_inclusao_benef_w::text <> '') then
		if (ie_contratacao_concluida_w = 'S') then
			update	pls_inclusao_beneficiario
			set	ie_status		= CASE WHEN nr_seq_contrato = NULL THEN ie_status  ELSE 'C' END ,
				ie_status_intercambio	= CASE WHEN nr_seq_intercambio = NULL THEN ie_status_intercambio  ELSE 'C' END
			where	nr_sequencia		= nr_seq_inclusao_benef_w;
		elsif (nr_seq_motivo_reprov_inclusa_w IS NOT NULL AND nr_seq_motivo_reprov_inclusa_w::text <> '') then
			CALL pls_reprovar_inclusao_benef(nr_seq_inclusao_benef_w, nr_seq_motivo_reprov_inclusa_w, '', 'T', 'N', nm_usuario_p);
		end if;
	end if;
	
	select	count(1)
	into STRICT	qt_dependentes_w
	from	pls_proposta_beneficiario
	where	nr_seq_titular	= nr_seq_benef_p;
	
	if (qt_dependentes_w	> 0) then
		for r_c01_w in C01 loop
			begin
			update	pls_proposta_beneficiario
			set	dt_cancelamento	= clock_timestamp(),
				nr_seq_motivo_cancelamento	= nr_seq_motivo_canc_p
			where	nr_sequencia	= r_c01_w.nr_sequencia;
			
			if (r_c01_w.nr_seq_inclusao_benef IS NOT NULL AND r_c01_w.nr_seq_inclusao_benef::text <> '') then
				if (ie_contratacao_concluida_w = 'S') then
					update	pls_inclusao_beneficiario
					set	ie_status		= CASE WHEN nr_seq_contrato = NULL THEN ie_status  ELSE 'C' END ,
						ie_status_intercambio	= CASE WHEN nr_seq_intercambio = NULL THEN ie_status_intercambio  ELSE 'C' END
					where	nr_sequencia		= nr_seq_inclusao_benef_w;
				elsif (nr_seq_motivo_reprov_inclusa_w IS NOT NULL AND nr_seq_motivo_reprov_inclusa_w::text <> '') then
					CALL pls_reprovar_inclusao_benef(r_c01_w.nr_seq_inclusao_benef, nr_seq_motivo_reprov_inclusa_w, '', 'T', 'N', nm_usuario_p);
				end if;
			end if;
			end;
		end loop;
		
		ds_mensagem_w	:= ' e seus dependentes ';
	end if;
	
	insert into pls_proposta_historico(	nr_sequencia,
						nr_seq_proposta,
						dt_historico,
						ds_historico,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						ie_origem_historico)
					values (	nextval('pls_proposta_historico_seq'),
						nr_seq_proposta_w,
						clock_timestamp(),
						'Realizado o cancelamento do beneficiário ' || nm_beneficiario_w || ds_mensagem_w || ' pelo usuário ' || nm_usuario_p || '.',
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						1);
	
	CALL pls_gerar_simulacao_proposta(nr_seq_proposta_w, nm_usuario_p, cd_estabelecimento_p);
	
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_cancelar_benef_prop ( nr_seq_benef_p bigint, nr_seq_motivo_canc_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

