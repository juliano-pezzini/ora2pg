-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_avaliacao_prescricao (nr_prescricao_p bigint, nm_usuario_p text, nr_seq_avaliacao_p INOUT bigint) AS $body$
DECLARE


cd_procedimento_w	bigint;
cd_especialidade_w	bigint;	
cd_area_procedimento_w	bigint;	
cd_grupo_proc_w		bigint;	
ie_origem_proced_w	bigint;
nr_seq_proc_interno_w	bigint;
nr_seq_exame_w		bigint;
nr_atendimento_w	bigint;
cd_pessoa_fisica_w	varchar(10);
cd_medico_w		varchar(10);
nr_seq_tipo_aval_w	bigint;
nr_seq_avaliacao_w	bigint := 0;
nr_seq_grupo_w		bigint;
nr_seq_subgrupo_w	bigint;
nr_seq_forma_org_w	bigint;
nr_sequencia_w		bigint;
cd_material_exame_w	varchar(20);


c02 CURSOR FOR
	SELECT nr_sequencia from prescr_procedimento where nr_prescricao = nr_prescricao_p;

c01 CURSOR FOR
	SELECT  nr_seq_tipo_aval
	from	med_tipo_aval_proc
	where (coalesce(cd_procedimento,cd_procedimento_w) 		= cd_procedimento_w or coalesce(cd_procedimento_w::text, '') = '')			
	  and (coalesce(cd_area_procedimento,cd_area_procedimento_w) 	= cd_area_procedimento_w or coalesce(cd_area_procedimento_w::text, '') = '')
	  and (coalesce(cd_especialidade,cd_especialidade_w) 		= cd_especialidade_w or coalesce(cd_especialidade_w::text, '') = '')
	  and (coalesce(cd_grupo_proc,cd_grupo_proc_w) 			= cd_grupo_proc_w or coalesce(cd_grupo_proc_w::text, '') = '')
	  and (coalesce(nr_seq_exame,nr_seq_exame_w) 			= nr_seq_exame_w or coalesce(nr_seq_exame_w::text, '') = '')	
	  and (coalesce(nr_seq_proc_interno,nr_seq_proc_interno_w) 	= nr_seq_proc_interno_w or coalesce(nr_seq_proc_interno_w::text, '') = '')
	  and (coalesce(nr_seq_forma_org, nr_seq_forma_org_w)		= nr_seq_forma_org_w or coalesce(nr_seq_forma_org_w::text, '') = '')	
	  and (coalesce(nr_seq_grupo, nr_seq_grupo_w)			= nr_seq_grupo_w or coalesce(nr_seq_grupo_w::text, '') = '')	
	  and (coalesce(nr_seq_subgrupo, nr_seq_subgrupo_w)		= nr_seq_subgrupo_w or coalesce(nr_seq_subgrupo_w::text, '') = '')
	  and (coalesce(coalesce(nr_seq_proc_interno,nr_seq_proc_interno_w),0) 	= coalesce(nr_seq_proc_interno_w,0))
	  and (coalesce(Obter_Material_Exame_Lab(nr_seq_material,null,2),cd_material_exame_w) = cd_material_exame_w or coalesce(cd_material_exame_w::text, '') = '')
	  and	exists (SELECT 1 from med_tipo_avaliacao n where n.nr_sequencia = nr_seq_tipo_aval and coalesce(ie_situacao,'A') = 'A')
          and (nr_seq_tipo_aval not in (select nr_seq_tipo_avaliacao from med_avaliacao_paciente where nr_prescricao = nr_prescricao_p))
	order by 	
		coalesce(cd_procedimento,0),
		coalesce(cd_grupo_proc,0),
		coalesce(cd_especialidade,0),
		coalesce(cd_area_procedimento,0),
		coalesce(nr_seq_exame,0),
		coalesce(nr_seq_proc_interno,0),
		coalesce(nr_seq_grupo,0),
		coalesce(nr_seq_subgrupo,0),
		coalesce(nr_seq_forma_org,0);



BEGIN

open c02;
loop
fetch c02 into nr_sequencia_w;
EXIT WHEN NOT FOUND; /* apply on c02 */
	begin
	select	a.nr_atendimento,
		a.cd_pessoa_fisica,
		a.cd_medico,
		b.cd_procedimento,
		b.ie_origem_proced,
		b.nr_seq_proc_interno,
		b.nr_seq_exame,
		b.cd_material_exame,
		obter_Especialidade_Proced(b.cd_procedimento,b.ie_origem_proced) cd_especialidade,	
		obter_area_procedimento(b.cd_procedimento,b.ie_origem_proced) cd_area_procedimento,
		obter_grupo_procedimento(b.cd_procedimento,b.ie_origem_proced,'C') cd_grupo_proc,
		coalesce(Sus_Obter_seq_Estrut_Proc(Sus_Obter_Estrut_Proc(b.cd_procedimento,b.ie_origem_proced,'C','G'),'G'),0) nr_seq_grupo,
		coalesce(Sus_Obter_seq_Estrut_Proc(Sus_Obter_Estrut_Proc(b.cd_procedimento,b.ie_origem_proced,'C','S'),'S'),0) nr_seq_subgrupo,
		coalesce(Sus_Obter_seq_Estrut_Proc(Sus_Obter_Estrut_Proc(b.cd_procedimento,b.ie_origem_proced,'C','F'),'F'),0) nr_seq_forma_org
	into STRICT	nr_atendimento_w,
		cd_pessoa_fisica_w,
		cd_medico_w,
		cd_procedimento_w,
		ie_origem_proced_w,
		nr_seq_proc_interno_w,
		nr_seq_exame_w,
		cd_material_exame_w,
		cd_especialidade_w,
		cd_area_procedimento_w,
		cd_grupo_proc_w,
		nr_seq_grupo_w,
		nr_seq_subgrupo_w,
		nr_seq_forma_org_w
	from	prescr_medica a,
		prescr_procedimento b,
		procedimento c
	where	a.nr_prescricao		= b.nr_prescricao
	and	b.cd_procedimento	= c.cd_procedimento
	and 	b.ie_origem_proced	= c.ie_origem_proced
	and	b.nr_prescricao		= nr_prescricao_p
	and	b.nr_sequencia		= nr_sequencia_w;
	open c01;
	loop
	fetch c01 into nr_seq_tipo_aval_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin

		select	nextval('med_avaliacao_paciente_seq')
		into STRICT	nr_seq_avaliacao_w
		;		

		insert	into med_avaliacao_paciente(nr_sequencia,
			cd_pessoa_fisica,
			cd_medico,
			dt_avaliacao,
			dt_atualizacao,
			nm_usuario,
			ds_observacao,
			nr_seq_tipo_avaliacao,
			ie_avaliacao_parcial,
			nr_atendimento,
			nr_prescricao,
      ie_situacao
		) values (
			nr_seq_avaliacao_w,
			cd_pessoa_fisica_w,
			cd_medico_w,
			clock_timestamp(),
			clock_timestamp(),
			nm_usuario_p,
			null,
			nr_seq_tipo_aval_w,
			'N',
			nr_atendimento_w,
			nr_prescricao_p,
      'A'
		);

		end;	
	end loop;
	close c01;
	end;
end loop;
close c02;

nr_seq_avaliacao_p	:= nr_seq_avaliacao_w;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_avaliacao_prescricao (nr_prescricao_p bigint, nm_usuario_p text, nr_seq_avaliacao_p INOUT bigint) FROM PUBLIC;

