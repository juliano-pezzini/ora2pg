-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_liberar_segurado ( nr_seq_segurado_p pls_segurado.nr_sequencia%type, ie_acao_contrato_p text, nm_usuario_p usuario.nm_usuario%type, ie_commit_p text) AS $body$
DECLARE


ds_acao_contrato_w		varchar(255);
dt_contratacao_w		pls_segurado.dt_contratacao%type;
ie_situacao_atend_w		pls_segurado.ie_situacao_atend%type;
nr_seq_pagador_w		pls_segurado.nr_seq_pagador%type;
dt_liberacao_w			pls_segurado.dt_liberacao%type;
nr_seq_tabela_w			pls_segurado.nr_seq_tabela%type;
nr_idade_w			bigint;
nr_seq_tabela_nova_w		pls_segurado.nr_seq_tabela%type;
nr_seq_segurado_ant_w		pls_segurado.nr_seq_segurado_ant%type;
dt_reajuste_w			pls_segurado.dt_reajuste%type;
nr_seq_contrato_w		pls_contrato.nr_sequencia%type;
ie_reajuste_w			pls_contrato.ie_reajuste%type;
nr_mes_reajuste_w		pls_contrato.nr_mes_reajuste%type;
ie_tipo_segurado_w		pls_segurado.ie_tipo_segurado%type;
nr_telefone_celular_w		pessoa_fisica.nr_telefone_celular%type;
ie_exige_celular_w		varchar(10);
ie_inclusao_portabilidade_w	varchar(1);
ie_titular_remido_w		varchar(1);
nr_seq_portabilidade_w		pls_portab_pessoa.nr_sequencia%type;
nm_beneficiario_w		varchar(255);
qt_portabilidade_w		integer;
ie_benef_remido_w		pls_contrato.ie_exclusivo_benef_remido%type;
nr_seq_titular_w		pls_segurado.nr_seq_titular%type;
ie_tab_preco_diferente_w	varchar(10);
nr_seq_tabela_titular_w		pls_segurado.nr_seq_tabela%type;


BEGIN
ie_exige_celular_w		:= coalesce(obter_valor_param_usuario(1202, 165, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento), 'N');
ie_benef_remido_w		:= coalesce(obter_valor_param_usuario(1202, 168, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento), 'N');
ie_tab_preco_diferente_w	:= coalesce(obter_valor_param_usuario(1202, 171, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento), 'S');

select	a.dt_contratacao,
	a.dt_liberacao,
	a.nr_seq_tabela,
	a.nr_seq_segurado_ant,
	a.nr_seq_pagador,
	a.dt_reajuste,
	a.nr_seq_contrato,
	a.ie_tipo_segurado,
	a.nr_seq_portabilidade,
	coalesce((	select	max(x.ie_portabilidade)
		from	pls_motivo_inclusao_seg x
		where	x.nr_sequencia	= a.nr_seq_motivo_inclusao),'N') ie_inclusao_portabilidade,
	obter_nome_pf(a.cd_pessoa_fisica) nm_pessoa_fisica,
	coalesce((	select	pls_obter_se_benef_remido(nr_sequencia,clock_timestamp())
		from	pls_segurado x
		where	x.nr_sequencia = a.nr_seq_titular),'N') ie_titular_remido,
	nr_seq_titular
into STRICT	dt_contratacao_w,
	dt_liberacao_w,
	nr_seq_tabela_w,
	nr_seq_segurado_ant_w,
	nr_seq_pagador_w,
	dt_reajuste_w,
	nr_seq_contrato_w,
	ie_tipo_segurado_w,
	nr_seq_portabilidade_w,
	ie_inclusao_portabilidade_w,
	nm_beneficiario_w,
	ie_titular_remido_w,
	nr_seq_titular_w
from	pls_segurado a
where	a.nr_sequencia	= nr_seq_segurado_p;

if (coalesce(dt_liberacao_w::text, '') = '') then
	if (coalesce(dt_contratacao_w::text, '') = '') then
		dt_contratacao_w	:= clock_timestamp();
	end if;
	
	ie_situacao_atend_w	:= 'A';
	
	if	((trunc(dt_contratacao_w,'dd') > trunc(clock_timestamp(),'dd')) and (ie_tipo_segurado_w <> 'H')) then
		ie_situacao_atend_w	:= 'F';
	end if;
	
	select	obter_idade(b.dt_nascimento,dt_contratacao_w,'A'),
		b.nr_telefone_celular
	into STRICT	nr_idade_w,
		nr_telefone_celular_w
	from	pessoa_fisica	b,
		pls_segurado	a
	where	a.cd_pessoa_fisica	= b.cd_pessoa_fisica
	and	a.nr_sequencia		= nr_seq_segurado_p;
	
	if (ie_exige_celular_w = 'S') and (coalesce(nr_telefone_celular_w::text, '') = '') then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(1095679, 'DS_BENEFICIARIO=' || pls_obter_dados_segurado(nr_seq_segurado_p, 'N'));
	end if;
	
	select	max(b.nr_sequencia)
	into STRICT	nr_seq_tabela_nova_w
	from	pls_plano_preco a,
		pls_tabela_preco b
	where	a.nr_seq_tabela	= b.nr_seq_principal
	and	a.nr_sequencia	= b.nr_seq_faixa_etaria_princ
	and	nr_idade_w between a.qt_idade_inicial and a.qt_idade_final
	and	a.nr_seq_tabela = nr_seq_tabela_w;
	
	select	max(ie_reajuste)
	into STRICT	ie_reajuste_w
	from	pls_contrato
	where	nr_sequencia = nr_seq_contrato_w;
	
	if (ie_titular_remido_w = 'S') and (ie_benef_remido_w= 'N')then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(1106138);
	end if;
	
	if (ie_tab_preco_diferente_w = 'N') and (nr_seq_titular_w IS NOT NULL AND nr_seq_titular_w::text <> '') then
		select	nr_seq_tabela
		into STRICT	nr_seq_tabela_titular_w
		from	pls_segurado
		where	nr_sequencia = nr_seq_titular_w;
		
		if (nr_seq_tabela_w <> nr_seq_tabela_titular_w) then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(1158074);
		end if;
	end if;
	
	if (ie_reajuste_w = 'A') then
		nr_mes_reajuste_w	:= (to_char(coalesce(dt_reajuste_w, dt_contratacao_w),'mm'))::numeric;
	else
		nr_mes_reajuste_w	:= null;
	end if;
	
	update	pls_segurado
	set	dt_liberacao		= clock_timestamp(),
		ie_acao_contrato	= ie_acao_contrato_p,
		nm_usuario		= nm_usuario_p,
		dt_atualizacao		= clock_timestamp(),
		ie_situacao_atend	= ie_situacao_atend_w,
		nr_seq_tabela		= coalesce(nr_seq_tabela_nova_w,nr_seq_tabela_w),
		nr_mes_reajuste		= nr_mes_reajuste_w
	where	nr_sequencia		= nr_seq_segurado_p;
	
	if (nr_seq_pagador_w IS NOT NULL AND nr_seq_pagador_w::text <> '') then
		insert into pls_segurado_pagador(nr_sequencia, dt_atualizacao, nm_usuario,
			nr_seq_segurado, nr_seq_pagador, dt_inicio_vigencia)
		values (nextval('pls_segurado_pagador_seq'), clock_timestamp(), nm_usuario_p,
			 nr_seq_segurado_p, nr_seq_pagador_w, trunc(dt_contratacao_w,'month'));
	end if;
	
	ds_acao_contrato_w	:= substr(obter_valor_dominio(2115, ie_acao_contrato_p),1,255);
	
	CALL pls_gerar_segurado_historico(nr_seq_segurado_p, '22', clock_timestamp(),
				ds_acao_contrato_w, wheb_mensagem_pck.get_texto(1106151), null,
				null, null, null,
				dt_contratacao_w, null, null,
				null, null, null,
				null, nm_usuario_p, ie_commit_p);
	
	mprev_tratar_reativacao_seg(nr_seq_segurado_p, nm_usuario_p, ie_commit_p);
	
	if (nr_seq_segurado_ant_w IS NOT NULL AND nr_seq_segurado_ant_w::text <> '') then
		CALL pls_sib_segurado_pck.inserir_sib_segurado_migracao(nr_seq_segurado_p, nr_seq_segurado_ant_w, ie_commit_p, nm_usuario_p);
	end if;
	
	if (ie_inclusao_portabilidade_w = 'S') then
		if (coalesce(nr_seq_portabilidade_w::text, '') = '') then --Nao foi gerada solicitacao de portabilidade para o beneficiario #@NM_BENEF#@. Favor verificar.
			CALL wheb_mensagem_pck.exibir_mensagem_abort(1071467, 'NM_BENEF='||nm_beneficiario_w);
		end if;
		
		select	count(1)
		into STRICT	qt_portabilidade_w
		from	pls_portab_pessoa
		where	nr_sequencia = nr_seq_portabilidade_w
		and	ie_status = 'U';
		
		if (qt_portabilidade_w > 0) then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(1071468, 'NM_BENEF=' ||nm_beneficiario_w);--A solicitacao de portabilidade do beneficiario #@NM_BENEF#@ esta pendente. Favor verificar.
		end if;
	elsif (nr_seq_portabilidade_w IS NOT NULL AND nr_seq_portabilidade_w::text <> '') then --Nao foi gerado o motivo de inclusao da portabilidade para o beneficiario #@NM_BENEF#@. Favor verificar.
			CALL wheb_mensagem_pck.exibir_mensagem_abort(1097094, 'NM_BENEF='||nm_beneficiario_w);
	end if;
end if;

if (ie_commit_p = 'S') then
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_liberar_segurado ( nr_seq_segurado_p pls_segurado.nr_sequencia%type, ie_acao_contrato_p text, nm_usuario_p usuario.nm_usuario%type, ie_commit_p text) FROM PUBLIC;

