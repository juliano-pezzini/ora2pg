-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_evento_infeccao_trig ( nm_usuario_p text, nr_atendimento_p bigint, cd_estabelecimento_p bigint, cd_topografia_p bigint, cd_caso_infeccao_p bigint, cd_clinica_p bigint, nr_seq_evento_infeccao_p bigint) AS $body$
DECLARE


			
nr_seq_evento_w			bigint;
cd_setor_atendimento_w		bigint;
ds_desc_tmp_w			varchar(255);
mensagem_w			varchar(1000) := '';


BEGIN

select	max(nr_seq_evento_infeccao)
into STRICT	nr_seq_evento_w
from	cih_parametros
where	cd_caso_infeccao = cd_caso_infeccao_p
and	nr_seq_evento_infeccao = nr_seq_evento_infeccao_p
and (cd_estabelecimento = cd_estabelecimento_p
or (coalesce(cd_estabelecimento::text, '') = ''
and not exists (SELECT	1
		from	cih_parametros
		where	cd_estabelecimento = cd_estabelecimento_p)));

select	obter_setor_atendimento(nr_atendimento_p)
into STRICT	cd_setor_atendimento_w
;

if (cd_topografia_p IS NOT NULL AND cd_topografia_p::text <> '') then

	ds_desc_tmp_w := null;

	select	obter_cih_topografia(cd_topografia_p)
	into STRICT	ds_desc_tmp_w
	;
	
	if (ds_desc_tmp_w IS NOT NULL AND ds_desc_tmp_w::text <> '') then
		mensagem_w	:= mensagem_w || chr(13) || wheb_mensagem_pck.get_texto(797021) ||' : ' || ds_desc_tmp_w;
	end if;

end if;

if (cd_caso_infeccao_p IS NOT NULL AND cd_caso_infeccao_p::text <> '') then

	ds_desc_tmp_w := null;

	select	obter_desc_caso_infeccao(cd_caso_infeccao_p)
	into STRICT	ds_desc_tmp_w
	;
	
	if (ds_desc_tmp_w IS NOT NULL AND ds_desc_tmp_w::text <> '') then
		mensagem_w	:= mensagem_w || chr(13) || wheb_mensagem_pck.get_texto(797022) ||' : ' || ds_desc_tmp_w;
	end if;
	
end if;


if (cd_clinica_p IS NOT NULL AND cd_clinica_p::text <> '') then

	ds_desc_tmp_w := null;

	select	obter_nome_clinica(cd_clinica_p)
	into STRICT	ds_desc_tmp_w
	;
	
	if (ds_desc_tmp_w IS NOT NULL AND ds_desc_tmp_w::text <> '') then
		mensagem_w	:= mensagem_w || chr(13) || wheb_mensagem_pck.get_texto(797023) ||' : ' || ds_desc_tmp_w;
	end if;
	
end if;


if (nr_seq_evento_w IS NOT NULL AND nr_seq_evento_w::text <> '') then
insert into qua_evento_paciente(
	nr_sequencia,
	cd_estabelecimento,
	dt_atualizacao,
	nm_usuario,
	nr_atendimento,
	nr_seq_evento,
	dt_evento,
	ds_evento,
	cd_setor_atendimento,
	dt_cadastro,
	nm_usuario_origem,
	dt_atualizacao_nrec,
	nm_usuario_nrec,
	nm_usuario_reg,
	nr_seq_classif_evento,
	dt_liberacao,
	cd_pessoa_fisica,
	ie_status,
	ie_origem,
	ie_situacao,
	cd_funcao_ativa
	)
values (
	nextval('qua_evento_paciente_seq'),
	cd_estabelecimento_p,
	clock_timestamp(),
	nm_usuario_p,
	nr_atendimento_p,
	nr_seq_evento_w,
	clock_timestamp(),
	wheb_mensagem_pck.get_texto(797027) ||' ' || mensagem_w,
	cd_setor_atendimento_w,
	clock_timestamp(),
	nm_usuario_p,
	clock_timestamp(),
	nm_usuario_p,
	nm_usuario_p,
	null,
	clock_timestamp(),
	obter_pessoa_atendimento(nr_atendimento_p,'C'),
	'1',
	'S',
	'A',
	obter_funcao_ativa
	);
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_evento_infeccao_trig ( nm_usuario_p text, nr_atendimento_p bigint, cd_estabelecimento_p bigint, cd_topografia_p bigint, cd_caso_infeccao_p bigint, cd_clinica_p bigint, nr_seq_evento_infeccao_p bigint) FROM PUBLIC;

