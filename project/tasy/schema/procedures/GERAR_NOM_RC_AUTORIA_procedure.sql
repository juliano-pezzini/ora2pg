-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_nom_rc_autoria ( nr_seq_cabecalho_p bigint, nm_usuario_p text) AS $body$
DECLARE


/* Autoría del documento */

nr_atendimento_w			atendimento_paciente.nr_atendimento%type;
nr_seq_episodio_w			episodio_paciente.nr_sequencia%type;
cd_estabelecimento_w		estabelecimento.cd_estabelecimento%type;
cd_versao_atual_w			aplicacao_tasy.cd_versao_atual%type;

nr_seq_pessoa_endereco_w	pessoa_endereco.nr_sequencia%type;
ds_endereco_completo_w		varchar(2000);
cd_tipo_vialidade_w			varchar(255);
ds_rua_vialidade_w			varchar(255);
nr_numero_externo_w			varchar(255);
nr_numero_interno_w			varchar(255);
cd_tipo_asentamento_w		varchar(255);
nm_assentamento_w		    varchar(255);
cd_localidade_w				varchar(255);
cd_municipio_w				varchar(255);
cd_entidade_w				varchar(255);
cd_postal_w					varchar(255);
cd_pais_w					varchar(255);
num_ext_alfa_w				varchar(255);
num_int_w					varchar(255);

dt_autoria_w		        timestamp;
nr_telefone_w			    nom_rc_pessoa_juridica.nr_telefone%type;
ds_email_w				    pessoa_juridica.ds_email%type;
cd_cgc_w				    pessoa_juridica.cd_cgc%type;
ds_razao_social_w		    pessoa_juridica.ds_razao_social%type;

ds_oid_sistema_w			varchar(255);
nm_oid_sistema_w			varchar(255);
ds_oid_estab_w				varchar(255);
nm_oid_estab_w				varchar(255);

ds_tipo_w			        varchar(255);
nr_seq_catalogo_w		    end_catalogo.nr_sequencia%type;


BEGIN
delete from nom_rc_pessoa_juridica
where nr_seq_cabecalho = nr_seq_cabecalho_p
and	ie_tipo = 'AUT';

select	a.nr_atendimento,
		a.nr_seq_episodio,
		a.cd_estabelecimento
into STRICT	nr_atendimento_w,
		nr_seq_episodio_w,
		cd_estabelecimento_w
from	nom_rc_cabecalho a
where	a.nr_sequencia	= nr_seq_cabecalho_p;

if (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') then
	null;
elsif (nr_seq_episodio_w IS NOT NULL AND nr_seq_episodio_w::text <> '') then
	select	min(nr_atendimento)
	into STRICT	nr_atendimento_w
	from	atendimento_paciente a
	where	a.nr_seq_episodio = nr_seq_episodio_w;
end if;

if (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') then
	/*Pessoa jurídica*/

	select	x.cd_cgc,
			clock_timestamp(), /*id_114*/
			h.ds_razao_social /*id_135*/
,
			obter_nom_rc_telefone(null, h.cd_cgc, null) nr_telefone, /*id_118*/
			coalesce(pe.ds_email,h.ds_email) ds_email /*id_119*/
	into STRICT	cd_cgc_w,
			dt_autoria_w,
			ds_razao_social_w ,
			nr_telefone_w,
			ds_email_w
	FROM pessoa_juridica h, estabelecimento x
LEFT OUTER JOIN pessoa_juridica_estab pe ON (x.cd_cgc = pe.cd_cgc AND x.cd_estabelecimento = pe.cd_estabelecimento)
WHERE x.cd_cgc = h.cd_cgc   and x.cd_estabelecimento = cd_estabelecimento_w;

	ds_oid_sistema_w := get_oid_details(5,'OID_NUMBER','NOM',cd_estabelecimento_w); /*id_115 */
	nm_oid_sistema_w := get_oid_details(5,'OID_SHORTNAME', 'NOM',cd_estabelecimento_w); /*id_116 */
	if (coalesce(ds_oid_sistema_w::text, '') = '') then
		ds_tipo_w	:= obter_valor_dominio(8657,'S');
		CALL wheb_mensagem_pck.exibir_mensagem_abort(1062931,'DS_TIPO=' || ds_tipo_w);
	end if;

	SELECT * FROM obter_oid_nom(cd_estabelecimento_w, null, 'E', ds_oid_estab_w, nm_oid_estab_w) INTO STRICT ds_oid_estab_w, nm_oid_estab_w; /*id_134 and id_135*/
	if (coalesce(ds_oid_estab_w::text, '') = '') then
		ds_tipo_w	:= obter_valor_dominio(8657,'E');
		CALL wheb_mensagem_pck.exibir_mensagem_abort(1062931,'DS_TIPO=' || ds_tipo_w);
	end if;

	select	substr(cd_versao_atual,1,4) /*id_117*/
	into STRICT	cd_versao_atual_w
	from	aplicacao_tasy
	where	cd_aplicacao_tasy = 'Tasy';

	/* Endereço */

	select	nr_seq_pessoa_endereco,
			get_complete_address_desc(a.nr_seq_pessoa_endereco,null,null,null,null,'Y') ds_endereco_completo,  /*id_120*/
			get_info_end_endereco(a.nr_seq_pessoa_endereco,'TIPO_LOGRAD','C') cd_tipo_vialidade,  /*id_121*/
			get_info_end_endereco(a.nr_seq_pessoa_endereco,'RUA_VIALIDADE','D') ds_rua_vialidade,  /*id_122*/
			get_info_end_endereco(a.nr_seq_pessoa_endereco,'NUMERO','D') nr_numero_externo,  /*id_123*/
			get_info_end_endereco(a.nr_seq_pessoa_endereco,'COMPLEMENTO','D') nr_numero_interno,  /*id_126*/
			get_info_end_endereco(a.nr_seq_pessoa_endereco,'TIPO_BAIRRO','C') cd_tipo_asentamento,  /*id_127*/
			get_info_end_endereco(a.nr_seq_pessoa_endereco,'BAIRRO_VILA','CD') nm_assentamento,  /*id_128*/
			get_info_end_endereco(a.nr_seq_pessoa_endereco,'LOCALIDADE_AREA','C') cd_localidade, /*id_129*/
			get_info_end_endereco(a.nr_seq_pessoa_endereco,'MUNICIPIO','C') cd_municipio, /*id_130*/
			get_info_end_endereco(a.nr_seq_pessoa_endereco,'ESTADO_PROVINCI','C') cd_entidade, /*id_131*/
			get_info_end_endereco(a.nr_seq_pessoa_endereco,'CODIGO_POSTAL','D') cd_postal, /*id_132*/
			get_info_end_endereco(a.nr_seq_pessoa_endereco,'PAIS','C') cd_pais, /*id_133*/
			get_info_end_endereco(a.nr_seq_pessoa_endereco,'NUM_EXT_ALFA','D') num_ext_alfa,
			get_info_end_endereco(a.nr_seq_pessoa_endereco,'NUMERO_INT','D') numero_int
	into STRICT	nr_seq_pessoa_endereco_w,
			ds_endereco_completo_w,
			cd_tipo_vialidade_w,
			ds_rua_vialidade_w,
			nr_numero_externo_w,
			nr_numero_interno_w,
			cd_tipo_asentamento_w,
			nm_assentamento_w,
			cd_localidade_w,
			cd_municipio_w,
			cd_entidade_w,
			cd_postal_w,
			cd_pais_w,
			num_ext_alfa_w,
			num_int_w
	from	pessoa_juridica a
	where	a.cd_cgc = cd_cgc_w;

	select	max(b.nr_seq_catalogo)
	into STRICT	nr_seq_catalogo_w
	from	end_endereco b,
			pessoa_endereco_item a
	where	b.nr_sequencia = a.nr_seq_end_endereco
	and		a.nr_seq_pessoa_endereco = nr_seq_pessoa_endereco_w;


	insert into nom_rc_pessoa_juridica(nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		ie_tipo,
		ds_domicilio,
		cd_tipo_vialidade,
		nm_vialidade,
		nr_domicilio_ext,
		nr_domicilio_int_alfa,
		cd_tipo_assentamento,
		nm_assentamento,
		cd_localidade,
		cd_municipio,
		cd_entidade_fed,
		cd_postal,
		cd_pais,
		nr_telefone,
		ds_email,
		ds_oid_sistema,
		nm_sistema,
		ds_oid_estab_salud,
		nm_estab_salud,
		dt_autoria,
		nr_versao_sistema,
		nr_seq_cabecalho,
		nr_seq_catalogo,
		nr_domicilio_ext_alfa,
		nr_domicilio_int)
	values (nextval('nom_rc_pessoa_juridica_seq'),
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		'AUT',
		ds_endereco_completo_w,
		cd_tipo_vialidade_w,
		ds_rua_vialidade_w,
		nr_numero_externo_w,
		nr_numero_interno_w,
		cd_tipo_asentamento_w,
		nm_assentamento_w,
		cd_localidade_w,
		cd_municipio_w,
		cd_entidade_w,
		cd_postal_w,
		cd_pais_w,
		nr_telefone_w,
		ds_email_w,
		ds_oid_sistema_w,
		nm_oid_sistema_w,
		ds_oid_estab_w,
		coalesce(nm_oid_estab_w,ds_razao_social_w),
		dt_autoria_w,
		cd_versao_atual_w,
		nr_seq_cabecalho_p,
		nr_seq_catalogo_w,
		num_ext_alfa_w,
		num_int_w);
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_nom_rc_autoria ( nr_seq_cabecalho_p bigint, nm_usuario_p text) FROM PUBLIC;

