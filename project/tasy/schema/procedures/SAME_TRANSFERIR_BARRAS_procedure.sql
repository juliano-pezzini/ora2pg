-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE same_transferir_barras ( nm_usuario_p text, cd_pessoa_origem_p text, cd_pessoa_destino_p text, cd_setor_origem_p bigint, cd_setor_destino_p bigint, dt_recebimento_p timestamp, nr_prontuario_p bigint, nr_atendimento_p bigint, cd_pessoa_fisica_p bigint, cd_pessoa_receb_p bigint, ds_observacao_p text, dt_periodo_inicial_p timestamp, dt_periodo_final_p timestamp, dt_cancelamento_p timestamp, nm_usuario_cancelamento_p text, cd_estabelecimento_p bigint, ie_digitalizado_p text, ie_consider_stored_p text default 'N') AS $body$
DECLARE

							
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Transferir por barras
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[  ]  Objetos do dicionario [ X ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao:
-------------------------------------------------------------------------------------------------------------------

Referencias:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
nr_seq_transf_w		bigint;
ie_transfere_lote_w	varchar(1);
nr_seq_lote_transf_w	bigint := null;
cd_estabelecimento_w	bigint;
ie_opcao_w		varchar(5);
cd_estab_origem_w	setor_atendimento.cd_estabelecimento%type;
cd_estab_destino_w	setor_atendimento.cd_estabelecimento%type;


BEGIN


cd_estabelecimento_w := coalesce(cd_estabelecimento_p, obter_estabelecimento_ativo);
ie_transfere_lote_w := obter_param_usuario(3111, 133, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_transfere_lote_w);

if (ie_transfere_lote_w = 'S') then
	select	nextval('transf_lote_prontuario_seq')
	into STRICT	nr_seq_lote_transf_w
	;

	insert into transf_lote_prontuario(	nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			dt_lote,
			dt_fim_lote,
			cd_estabelecimento)
	values (	nr_seq_lote_transf_w,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			clock_timestamp(),
			cd_estabelecimento_w);
end if;

select	nextval('transf_prontuario_seq')
into STRICT	nr_seq_transf_w
;

if (cd_setor_destino_p IS NOT NULL AND cd_setor_destino_p::text <> '') then
	cd_estab_origem_w := obter_estabelecimento_setor(cd_setor_origem_p);
	cd_estab_destino_w := obter_estabelecimento_setor(cd_setor_destino_p);
		
	if (cd_estab_origem_w <> cd_estab_destino_w) then
		cd_estabelecimento_w := cd_estab_destino_w;
	end if;
end if;

insert into transf_prontuario(	nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		cd_pessoa_origem,
		cd_pessoa_destino,
		cd_setor_origem,
		cd_setor_destino,
		dt_envio,
		dt_recebimento,
		nr_prontuario,
		nr_atendimento,
		cd_pessoa_fisica,
		cd_pessoa_receb,
		ds_observacao,
		dt_periodo_inicial,
		dt_periodo_final,
		dt_cancelamento,
		nm_usuario_cancelamento,
		nr_seq_lote_transf,
		cd_estabelecimento,
		ie_digitalizado)
values (	nr_seq_transf_w,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		cd_pessoa_origem_p,
		cd_pessoa_destino_p,
		cd_setor_origem_p,
		cd_setor_destino_p,
		clock_timestamp(),
		dt_recebimento_p,
		nr_prontuario_p,
		nr_atendimento_p,
		cd_pessoa_fisica_p,
		cd_pessoa_receb_p,
		ds_observacao_p,
		dt_periodo_inicial_p,
		dt_periodo_final_p,
		dt_cancelamento_p,
		nm_usuario_cancelamento_p,
		nr_seq_lote_transf_w,
		cd_estabelecimento_w,
		ie_digitalizado_p);

select	coalesce(max(ie_move_prontuario),'S')
into STRICT	ie_opcao_w
from	setor_atendimento
where	cd_setor_atendimento = cd_setor_destino_p;

if (ie_opcao_w = 'S') then
	CALL transferir_prontuario_setores( nr_seq_transf_w, nm_usuario_p, 1, cd_estabelecimento_p, ie_consider_stored_p);
elsif (ie_opcao_w = 'T') then
	CALL transferir_prontuario_setores( nr_seq_transf_w, nm_usuario_p, 2, cd_estabelecimento_p, ie_consider_stored_p);
end if;

if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE same_transferir_barras ( nm_usuario_p text, cd_pessoa_origem_p text, cd_pessoa_destino_p text, cd_setor_origem_p bigint, cd_setor_destino_p bigint, dt_recebimento_p timestamp, nr_prontuario_p bigint, nr_atendimento_p bigint, cd_pessoa_fisica_p bigint, cd_pessoa_receb_p bigint, ds_observacao_p text, dt_periodo_inicial_p timestamp, dt_periodo_final_p timestamp, dt_cancelamento_p timestamp, nm_usuario_cancelamento_p text, cd_estabelecimento_p bigint, ie_digitalizado_p text, ie_consider_stored_p text default 'N') FROM PUBLIC;

