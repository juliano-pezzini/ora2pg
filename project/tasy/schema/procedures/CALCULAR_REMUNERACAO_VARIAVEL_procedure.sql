-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE calcular_remuneracao_variavel (nr_seq_remuneracao_p bigint, nm_usuario_p text) AS $body$
DECLARE


dt_referencia_w			timestamp;
cd_estabelecimento_w		bigint;
cd_empresa_w			bigint;
cd_cnpj_w			varchar(14);
ie_funcao_w			varchar(15);
cd_pessoa_fisica_w		varchar(15);

pr_rem_ger_w			double precision;
pr_rem_coord_w			double precision;
vl_margem_w			double precision;
qt_escore_w			bigint;
vl_base_calculo_w			double precision;
vl_gerentes_w			double precision;
vl_coordenadores_w		double precision;
vl_gerente_w			double precision;
vl_coordenador_w			double precision;
vl_fixo_w				double precision	:= 0;
vl_variavel_w			double precision	:= 0;
nr_sequencia_w			bigint	:= 0;

qt_gerente_w			bigint;
qt_coordenador_w			bigint;


C01 CURSOR FOR
	SELECT 	b.cd_pessoa_fisica,
		b.ie_funcao_exec
	from 	com_canal_consultor b,
		com_canal a
	where	a.cd_cnpj	= cd_cnpj_w
	and	a.nr_sequencia	= b.nr_seq_canal
	and	b.ie_funcao_exec in ('GERENTE','COORD')
	and	exists (SELECT	1
		from	proj_consultor_nivel x
		where	x.cd_empresa		= cd_empresa_w
		and	x.cd_consultor		= b.cd_pessoa_fisica
		and	x.dt_avaliacao		<= last_day(dt_referencia_w)
		and	coalesce(x.vl_fixo,0)	> 0);

C02 CURSOR FOR
	SELECT	coalesce(vl_fixo,0)
	from	proj_consultor_nivel
	where	cd_empresa	= cd_empresa_w
	and	cd_consultor	= cd_pessoa_fisica_w
	and	dt_avaliacao	<= last_day(dt_referencia_w)
	order by dt_avaliacao;


BEGIN

delete 	from proj_rem_pf
where	nr_seq_remuneracao	= nr_seq_remuneracao_p;

select	dt_referencia,
	cd_estabelecimento
into STRICT	dt_referencia_w,
	cd_estabelecimento_w
from	proj_remuneracao
where	nr_sequencia 		= nr_seq_remuneracao_p;

select	cd_cgc,
	cd_empresa
into STRICT	cd_cnpj_w,
	cd_empresa_w
from	estabelecimento
where	cd_estabelecimento		= cd_estabelecimento_w;

pr_rem_ger_w			:= Proj_obter_perc_rem_var(dt_referencia_w, 1);
pr_rem_coord_w			:= Proj_obter_perc_rem_var(dt_referencia_w, 2);
qt_escore_w			:= Proj_Obter_Media_Escore(dt_referencia_w);
vl_margem_w			:= proj_obter_margem_mes(dt_referencia_w);
vl_base_calculo_w			:= vl_margem_w * qt_escore_w / 100;
vl_gerentes_w			:= vl_base_calculo_w * pr_rem_ger_w / 100;
vl_coordenadores_w		:= vl_base_calculo_w * pr_rem_coord_w / 100;

select 	sum(CASE WHEN ie_funcao_exec='GERENTE' THEN 1  ELSE 0 END ),
	sum(CASE WHEN ie_funcao_exec='COORD' THEN 1  ELSE 0 END )
into STRICT	qt_gerente_w,
	qt_coordenador_w
from 	com_canal_consultor b,
	com_canal a
where	a.cd_cnpj	= cd_cnpj_w
and	a.nr_sequencia	= b.nr_seq_canal
and	b.ie_funcao_exec in ('GERENTE','COORD')
and	exists (SELECT	1
	from	proj_consultor_nivel x
	where	x.cd_empresa		= cd_empresa_w
	and	x.cd_consultor		= b.cd_pessoa_fisica
	and	x.dt_avaliacao		<= last_day(dt_referencia_w)
	and	coalesce(x.vl_fixo,0)	> 0);

vl_gerente_w				:= dividir(vl_gerentes_w,qt_gerente_w);
vl_coordenador_w			:= dividir(vl_coordenadores_w, qt_coordenador_w);

update	proj_remuneracao
set	dt_calculo	= clock_timestamp(),
 	nm_usuario	= nm_usuario_p,
	pr_gerente	= pr_rem_ger_w,
	pr_coordenador	= pr_rem_coord_w,
	vl_margem	= vl_margem_w,
 	qt_escore		= qt_escore_w,
	vl_base_calculo	= vl_base_calculo_w,
	vl_gerente	= vl_gerente_w,
	vl_coordenador	= vl_coordenador_w,
	vl_gerentes	= vl_gerentes_w,
	vl_coordenadores	= vl_coordenadores_w
where 	nr_sequencia = nr_seq_remuneracao_p;


open c01;
loop
fetch c01 into
	cd_pessoa_fisica_w,
	ie_funcao_w;
EXIT WHEN NOT FOUND; /* apply on C01 */


	if (ie_funcao_w = 'GERENTE') then
		vl_variavel_w	:= vl_gerente_w;
	else
		vl_variavel_w	:= vl_coordenador_w;
	end if;

	vl_fixo_w			:= 0;
	open c02;
	loop
	fetch c02 into vl_fixo_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		vl_fixo_w		:= vl_fixo_w;
	end loop;
	close c02;

	select	nextval('proj_rem_pf_seq')
	into STRICT	nr_sequencia_w
	;

	if (vl_fixo_w > 0) then
		insert into proj_rem_pf(
			nr_sequencia,
			nr_seq_remuneracao,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			cd_pessoa_fisica,
			vl_fixo,
			vl_variavel)
		values (
			nr_sequencia_w,
			nr_seq_remuneracao_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			cd_pessoa_fisica_w,
			vl_fixo_w,
			vl_variavel_w);
	end if;

end loop;
close c01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE calcular_remuneracao_variavel (nr_seq_remuneracao_p bigint, nm_usuario_p text) FROM PUBLIC;

