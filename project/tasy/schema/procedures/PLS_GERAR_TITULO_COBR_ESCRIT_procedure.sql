-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_titulo_cobr_escrit ( nr_seq_cobranca_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
cd_cgc_w			varchar(14);
ds_razao_social_w		varchar(255);
vl_comissao_empresa_w		double precision;
nr_seq_conta_banco_w		bigint;
cd_tipo_taxa_juros_w		bigint;
cd_tipo_taxa_multa_w		bigint;
tx_juros_w			double precision;
tx_multa_w			double precision;
cd_tipo_portador_w		integer;
cd_portador_w			integer;
cd_tipo_taxa_juro_par_w		bigint;
cd_tipo_taxa_multa_par_w	bigint;
pr_juro_padrao_par_w		double precision;
pr_multa_padrao_par_w		double precision;
cd_moeda_w			integer;
dt_vencimento_w			timestamp;
nr_titulo_w			bigint;
ds_observacao_w			varchar(255);
nr_seq_empresa_w		bigint;
vl_total_w			double precision;
vl_cobranca_w			double precision;


BEGIN 
 
select	nr_seq_empresa, 
	nr_seq_conta_banco, 
	vl_comissao_empresa 
into STRICT	nr_seq_empresa_w, 
	nr_seq_conta_banco_w, 
	vl_comissao_empresa_w 
from	cobranca_escritural 
where	nr_sequencia = nr_seq_cobranca_p;
 
select	sum(vl_cobranca) 
into STRICT	vl_cobranca_w 
from	titulo_receber_cobr 
where	nr_seq_cobranca = nr_seq_cobranca_p;
 
vl_total_w	:= coalesce(vl_cobranca_w,0) - coalesce(vl_comissao_empresa_w,0);
 
if (vl_total_w > 0) then 
	select	cd_cgc, 
		substr(obter_razao_social(cd_cgc),1,255) 
	into STRICT	cd_cgc_w, 
		ds_razao_social_w 
	from	pls_desc_empresa 
	where	nr_sequencia = nr_seq_empresa_w;
	 
	--ds_observacao_w := 'Título gerado para a cobrança escritural '||nr_seq_cobranca_p|| ' para a empresa '||ds_razao_social_w; 
	ds_observacao_w := wheb_mensagem_pck.get_texto(303992,'NR_SEQ_COBRANCA_P='||nr_seq_cobranca_p||';DS_RAZAO_SOCIAL_W='||ds_razao_social_w);
	 
	begin 
	select	cd_tipo_taxa_juro, 
		pr_juro_padrao, 
		cd_tipo_taxa_multa, 
		pr_multa_padrao 
	into STRICT	cd_tipo_taxa_juros_w, 
		tx_juros_w, 
		cd_tipo_taxa_multa_w, 
		tx_multa_w 
	from	pls_parametros 
	where	cd_estabelecimento = cd_estabelecimento_p;
	exception 
		when no_data_found then 
		CALL wheb_mensagem_pck.exibir_mensagem_abort( 239937, null );
		/* Cadastro de juros e multa não informados nos parâmetros do Plano de Saúde!' */
 
	end;
	 
	select	cd_tipo_portador, 
		cd_portador, 
		cd_tipo_taxa_juro, 
		cd_tipo_taxa_multa, 
		pr_juro_padrao, 
		pr_multa_padrao 
	into STRICT	cd_tipo_portador_w, 
		cd_portador_w, 
		cd_tipo_taxa_juro_par_w, 
		cd_tipo_taxa_multa_par_w, 
		pr_juro_padrao_par_w, 
		pr_multa_padrao_par_w 
	from	parametro_contas_receber 
	where	cd_estabelecimento	= cd_estabelecimento_p;
	 
	select	obter_moeda_padrao(cd_estabelecimento_p,'R') 
	into STRICT	cd_moeda_w 
	;
	 
	select	trunc(add_months(clock_timestamp(),1),'month') 
	into STRICT	dt_vencimento_w 
	;
	 
	select	nextval('titulo_seq') 
	into STRICT	nr_titulo_w 
	;
	 
	insert	into	titulo_receber(nr_titulo, 
		cd_pessoa_fisica, 
		cd_cgc, 
		dt_atualizacao, 
		nm_usuario, 
		cd_estabelecimento, 
		dt_emissao, 
		dt_vencimento, 
		dt_pagamento_previsto, 
		vl_titulo, 
		vl_saldo_titulo, 
		vl_saldo_juros, 
		vl_saldo_multa, 
		cd_tipo_taxa_juro, 
		cd_tipo_taxa_multa, 
		cd_moeda, 
		tx_desc_antecipacao, 
		tx_juros, 
		tx_multa, 
		cd_tipo_portador, 
		cd_portador, 
		ie_tipo_inclusao, 
		ie_tipo_titulo, 
		ie_origem_titulo, 
		ie_tipo_emissao_titulo, 
		ie_situacao, 
		nr_lote_contabil, 
		nr_seq_mensalidade, 
		nr_seq_mens_segurado, 
		nr_seq_conta_banco, 
		ie_pls, 
		ds_observacao_titulo, 
		nm_usuario_orig, 
		dt_inclusao) 
	values (nr_titulo_w, 
		null, 
		cd_cgc_w, 
		clock_timestamp(), 
		nm_usuario_p, 
		cd_estabelecimento_p, 
		clock_timestamp(), 
		dt_vencimento_w, 
		dt_vencimento_w, 
		vl_total_w, 
		vl_total_w, 
		0, 
		0, 
		coalesce(cd_tipo_taxa_juros_w,cd_tipo_taxa_juro_par_w), 
		coalesce(cd_tipo_taxa_multa_w,cd_tipo_taxa_multa_par_w), 
		cd_moeda_w, 
		0, 
		coalesce(tx_juros_w,pr_juro_padrao_par_w), 
		coalesce(tx_multa_w,pr_multa_padrao_par_w), 
		cd_tipo_portador_w, 
		cd_portador_w, 
		'2', 
		'1', 
		9, 
		2, 
		'1', 
		0, 
		null, 
		null, 
		nr_seq_conta_banco_w, 
		'S', 
		ds_observacao_w, 
		nm_usuario_p, 
		clock_timestamp());
	 
	update	cobranca_escritural 
	set	nr_titulo = nr_titulo_w, 
		dt_atualizacao = clock_timestamp(), 
		nm_usuario = nm_usuario_p 
	where	nr_sequencia = nr_seq_cobranca_p;
	 
	CALL gerar_bloqueto_tit_rec(nr_titulo_w, 'OPSDF');
else 
	CALL wheb_mensagem_pck.exibir_mensagem_abort( 239936, null);
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_titulo_cobr_escrit ( nr_seq_cobranca_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

