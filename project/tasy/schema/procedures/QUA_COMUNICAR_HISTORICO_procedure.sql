-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE qua_comunicar_historico ( nr_sequencia_p bigint, ie_comunicar_p text, nm_usuario_p text) AS $body$
DECLARE


/* ie_comunicar_p
RA: Responsável abertura
RR: Receptor responsável
AE: Responsável análise eficácia
SE: Setores envolvidos
*/
ds_titulo_w			varchar(255);
ds_comunicado_w			varchar(4000);
nr_seq_nao_conform_w		bigint;
vl_parametro_w			varchar(255);
nm_pf_abertura_w			varchar(60);
nm_pf_resp_ocorrencia_w		varchar(60);
nm_pessoa_eficacia_w		varchar(60);
nm_resp_setor_w			varchar(60);
nr_seq_classif_w			bigint;
nr_sequencia_w			bigint;
nm_usuario_w			varchar(2000);

c01 CURSOR FOR
	SELECT	substr(obter_usuario_pessoa(c.cd_pessoa_resp),1,60)
	from	setor_atendimento c,
		qua_nao_conform_setor b,
		qua_nao_conformidade a
	where	a.nr_sequencia = b.nr_seq_nao_conform
	and	c.cd_setor_atendimento = b.cd_setor_atendimento
	and	a.nr_sequencia = nr_seq_nao_conform_w;


BEGIN

select	nr_seq_nao_conform,
	ds_historico
into STRICT	nr_seq_nao_conform_w,
	ds_comunicado_w
from	qua_nao_conform_hist
where	nr_sequencia	= nr_sequencia_p;

select	substr(obter_Valor_Param_Usuario(4000, 12, null, nm_usuario_p, null),1,255)
into STRICT	vl_parametro_w
;

nm_usuario_w	:= '';
ds_titulo_w	:= substr(wheb_mensagem_pck.get_texto(305607,
						'VL_PARAMETRO=' || vl_parametro_w ||
						';NR_SEQ_NAO_CONF=' || nr_seq_nao_conform_w),1,255);

select	obter_classif_comunic('F')
into STRICT	nr_seq_classif_w
;

select	substr(obter_usuario_pessoa(coalesce(max(a.cd_pf_abertura),'')),1,60),
	substr(obter_usuario_pessoa(coalesce(max(a.cd_pf_resp_ocorrencia),'')),1,60),
	substr(obter_usuario_pessoa(coalesce(max(a.cd_pf_resp_eficacia),'')),1,60)
into STRICT	nm_pf_abertura_w,
	nm_pf_resp_ocorrencia_w,
	nm_pessoa_eficacia_w
from	qua_nao_conformidade a
where	a.nr_sequencia = nr_seq_nao_conform_w;

if (ie_comunicar_p = 'RA') then
	if (nm_pf_abertura_w IS NOT NULL AND nm_pf_abertura_w::text <> '') then
		nm_usuario_w	:= nm_pf_abertura_w || ', ' || nm_usuario_w;
	end if;
elsif (ie_comunicar_p = 'RR') then
	if (nm_pf_resp_ocorrencia_w IS NOT NULL AND nm_pf_resp_ocorrencia_w::text <> '') then
		nm_usuario_w	:= nm_pf_resp_ocorrencia_w || ', ' || nm_usuario_w;
	end if;
elsif (ie_comunicar_p = 'AE') then
	if (nm_pessoa_eficacia_w IS NOT NULL AND nm_pessoa_eficacia_w::text <> '') then
		nm_usuario_w	:= nm_pessoa_eficacia_w || ', ' || nm_usuario_w;
	end if;
elsif (ie_comunicar_p = 'SE') then
	begin
	open c01;
	loop
	fetch c01 into
		nm_resp_setor_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		nm_usuario_w	:= nm_resp_setor_w || ', ' || nm_usuario_w;
	end loop;
	close c01;
	end;
end if;

if (nm_usuario_w IS NOT NULL AND nm_usuario_w::text <> '') then
	begin
	select nextval('comunic_interna_seq')
	into STRICT nr_sequencia_w
	;

	insert into comunic_interna(
		dt_comunicado,
		ds_titulo,
		ds_comunicado,
		nm_usuario,
		dt_atualizacao,
		ie_geral,
		nm_usuario_destino,
		nr_sequencia,
		ie_gerencial,
		nr_seq_classif,
		dt_liberacao)
	values (	clock_timestamp(),
		ds_titulo_w,
		ds_comunicado_w,
		nm_usuario_p,
		clock_timestamp(),
		'N',
		nm_usuario_w,
		nr_sequencia_w,
		'N',
		nr_seq_classif_w,
		clock_timestamp());

	CALL inserir_qua_nao_conform_envio( nr_seq_nao_conform_w, '', nm_usuario_p, 'I', substr(nm_usuario_w,1,255));

	commit;
	end;
end if;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE qua_comunicar_historico ( nr_sequencia_p bigint, ie_comunicar_p text, nm_usuario_p text) FROM PUBLIC;

