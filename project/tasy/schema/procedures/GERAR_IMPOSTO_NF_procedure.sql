-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_imposto_nf ( nr_seq_nota_p bigint, nm_usuario_p text, nr_seq_sit_trib_p bigint, cd_tributo_p bigint, ie_previa_p text default 'N', ie_gerar_corpo_item_p text default 'A') AS $body$
DECLARE


cd_tributo_w			smallint;
pr_imposto_w			double precision;
pr_desc_base_w			double precision;
cd_estabelecimento_w	smallint;
cd_cgc_emitente_w		varchar(14);
cd_serie_nf_w			nota_fiscal.cd_serie_nf%type;
ie_tipo_tributacao_w	varchar(255);
nr_nota_fiscal_w		varchar(255);
nr_sequencia_nf_w		bigint;
nr_item_nf_w			integer;
nr_venc_nf_w			bigint;
vl_total_nota_w			double precision;
vl_total_item_w			double precision;
vl_total_imposto_nota_w	double precision := 0;
vl_total_imposto_item_w	double precision := 0;
vl_minimo_tributo_w		double precision;
vl_reducao_base_w		double precision;
ie_considera_desc_w		varchar(1);
vl_desconto_nf_w		double precision;
vl_minimo_base_w		double precision;
vl_teto_base_w			double precision;
vl_desc_dependente_w	double precision;
vl_trib_anterior_w		double precision;
vl_total_base_w			double precision;
vl_reducao_w			double precision;
vl_mercadoria_w			double precision;
ie_soma_diminui_w		varchar(01);
cd_convenio_w			integer;
nr_interno_conta_w		bigint;
nr_seq_protocolo_w		bigint;
dt_emissao_w			timestamp;
vl_trib_nao_retido_w	double precision;
vl_base_nao_retido_w	double precision;
vl_trib_adic_w			double precision;
vl_base_adic_w			double precision;
vl_soma_trib_nao_retido_w	double precision;
vl_soma_base_nao_retido_w	double precision;
vl_tributo_w				double precision;
vl_minimo_base_calculo_w	double precision;
vl_tributo_a_reter_w	double precision;
vl_base_a_reter_w		double precision;
vl_soma_trib_adic_w		double precision;
vl_soma_base_adic_w		double precision;
vl_descontos_w			double precision;
cd_pessoa_fisica_w		varchar(10);
ie_acumulativo_w		varchar(10);
cd_cgc_w				varchar(14);
nr_seq_sit_trib_w		bigint;
vl_mercadoria_liq_ww	double precision;
cd_condicao_pagamento_w	bigint;
ie_forma_pagamento_w	smallint;
vl_vencimento_w			double precision;
qt_venctos_w			bigint;
qt_existe_w				bigint;
nr_ccm_w				bigint	:= null;
ie_vago_w				varchar(255);
nr_seq_regra_w			bigint;
nr_seq_lote_protocolo_w	bigint;
nr_seq_eme_fatura_w		bigint;
qt_regra_rps_w			bigint;
nr_seq_item_serv_w		bigint;
nr_seq_item_serv_item_w	bigint;
ie_tipo_tributo_w		varchar(15);
nr_seq_mensalidade_w	bigint;
ie_origem_trib_w        varchar(2);
ie_isento_w				tributo.ie_isento%type;
ie_retencao_w			regra_calculo_imposto.ie_retencao%type;
ie_exporta_xml_w		regra_calculo_imposto.ie_exporta_xml%type;
ie_corpo_item_w			tributo.ie_corpo_item%type;
ie_saldo_tit_rec_w		varchar(1);
vl_imposto_ipi_w		double precision := 0;
ie_base_calc_icms_w		varchar(1);
ie_tipo_tributo_ww		tributo.ie_tipo_tributo%type;
dt_vencimento_w			timestamp;
ie_origem_w				nota_fiscal_venc.ie_origem%type;
nr_seq_regra_irpf_w		regra_calculo_irpf.nr_sequencia%type;
nr_seq_pls_fatura_w		pls_fatura.nr_sequencia%type;
ie_origem_titulo_w		titulo_receber.ie_origem_titulo%type := null;
cd_material_w				nota_fiscal_item.cd_material%type;
ie_tributa_mat_monofasico_w	tributo.ie_tributa_mat_monofasico%type;
ie_tributar_monofasico_w	varchar(1);
vl_total_item_ww			nota_fiscal_item.vl_total_item_nf%type;
ie_reducao_base_nf_w		pls_fatura_trib.ie_reducao_base_nf%type;
vl_base_total_fat_w			pls_fatura_trib.vl_base_total%type;
vl_reducao_base_fat_w		pls_fatura_trib.vl_reducao_base%type;
ie_min_reter_w			regra_calculo_imposto.ie_min_reter%type;
vl_min_reter_w			regra_calculo_imposto.vl_min_reter%type;
cd_darf_w				regra_calculo_imposto.cd_darf%type;
cd_operacao_nf_w		nota_fiscal.cd_operacao_nf%type;
cd_natureza_operacao_w	nota_fiscal.cd_natureza_operacao%type;

/* Impostos da nota fiscal */

C01 CURSOR FOR
	SELECT	b.cd_tributo,
		coalesce(b.ie_isento,'N'),
		coalesce(ie_tributa_mat_monofasico,'S')
	from	tributo b
	where	b.ie_corpo_item	= ie_corpo_item_w
	and	coalesce(ie_gerar_corpo_item_p,'A') in ('A',ie_corpo_item_w)
	and	b.ie_situacao	= 'A'
	and	b.ie_pf_pj in ('A',CASE WHEN coalesce(cd_pessoa_fisica_w::text, '') = '' THEN 'PJ'  ELSE 'PF' END )
	and	(((coalesce(ie_previa_p,'N') = 'N') and (not exists (	SELECT	1
				from	nota_fiscal_trib x
				where	x.nr_sequencia	= nr_seq_nota_p
				and	x.cd_tributo	= b.cd_tributo))) or
		((coalesce(ie_previa_p,'N') = 'S') and (not exists (	select	1
				from	nota_fiscal_trib_prev x
				where	x.nr_seq_nota	= nr_seq_nota_p
				and	x.cd_tributo	= b.cd_tributo))))
	and (coalesce(nr_ccm_w::text, '') = '' or coalesce(b.ie_ccm,'S') = 'S')
	and	((coalesce(ie_tipo_tributacao_w, 'X') <> '0') or (coalesce(ie_super_simples, 'S') = 'S'))
	and	((coalesce(b.ie_gera_nf_devolucao,'S') = 'S') or (coalesce(b.ie_gera_nf_devolucao,'S') = 'N' and sup_obter_se_nf_devolucao(nr_seq_nota_p) = 'N'))
	and	not exists (select	1
				from	pls_mensalidade_trib	y,
					pls_mensalidade		z,
					nota_fiscal 		x
				where	y.cd_tributo		= b.cd_tributo
				and	z.nr_sequencia		= y.nr_seq_mensalidade
				and	z.nr_sequencia		= x.nr_seq_mensalidade
				and	x.nr_sequencia		= nr_seq_nota_p)
	and	((exists (select	1
				from	pls_fatura_trib	t,
					pls_fatura	f,
					nota_fiscal	n
				where	t.cd_tributo	= b.cd_tributo
				and	f.nr_sequencia	= n.nr_seq_fatura
				and	f.nr_sequencia	= t.nr_seq_fatura
				and	n.nr_sequencia	= nr_seq_nota_p
				
union all

				select	1
				from	pls_fatura_trib	t,
					pls_fatura	f,
					nota_fiscal	n
				where	t.cd_tributo	= b.cd_tributo
				and	f.nr_sequencia	= n.nr_seq_fatura_ndc
				and	f.nr_sequencia	= t.nr_seq_fatura
				and	n.nr_sequencia	= nr_seq_nota_p)) or (coalesce(nr_seq_pls_fatura_w::text, '') = ''))
	order 	by b.cd_tributo;

C02 CURSOR FOR /* Impostos dos itens da nota fiscal */
	SELECT	a.pr_imposto,
		a.cd_tributo,
		b.ie_soma_diminui,
		a.vl_minimo_tributo,
		a.vl_minimo_base_calculo,
		a.nr_seq_sit_trib,
		coalesce(b.ie_isento,'N'),
		coalesce(a.ie_exporta_xml,'S')
	from	regra_calculo_imposto	a,
		tributo			b
	where	a.cd_tributo		= b.cd_tributo
	and	b.ie_corpo_item		= 'I'
	and	b.ie_situacao		= 'A'
	and	((coalesce(b.ie_gera_nf_devolucao,'S') = 'S') or (coalesce(b.ie_gera_nf_devolucao,'S') = 'N' and sup_obter_se_nf_devolucao(nr_seq_nota_p) = 'N'))
	and	coalesce(a.nr_seq_item_serv, coalesce(nr_seq_item_serv_w,0))	= coalesce(nr_seq_item_serv_w, 0)
	and	coalesce(a.ie_nota_fiscal,'N')	= 'S' /* Matheus OS 101021*/
	and (coalesce(a.cd_estabelecimento, cd_estabelecimento_w)	= cd_estabelecimento_w)
	and	coalesce(a.cd_convenio, coalesce(cd_convenio_w,0))= coalesce(cd_convenio_w,0)
	and	b.ie_pf_pj in ('A',CASE WHEN coalesce(cd_pessoa_fisica_w::text, '') = '' THEN 'PJ'  ELSE 'PF' END )
	and (coalesce(nr_ccm_w::text, '') = '' or coalesce(b.ie_ccm,'S') = 'S')
	and	a.dt_vigencia	=	(SELECT max(x.dt_vigencia)
					from	regra_calculo_imposto x
					where	x.cd_tributo		= a.cd_tributo
					and	coalesce(x.cd_convenio, coalesce(cd_convenio_w,0)) = coalesce(cd_convenio_w,0)
					and	x.dt_vigencia		<= dt_emissao_w)
	and	fim_dia(coalesce(a.dt_fim_vigencia, dt_emissao_w)) >= dt_emissao_w
	order 	by coalesce(a.cd_convenio, 0), coalesce(a.nr_seq_item_serv, 0);

C03 CURSOR FOR
	SELECT	nr_item_nf,
		vl_total_item_nf - vl_desconto,
		max((	SELECT	r.nr_seq_item_serv
			from	procedimento		r
			where	a.cd_procedimento	= r.cd_procedimento
			and	a.ie_origem_proced	= r.ie_origem_proced
			
union all

			select	r.nr_seq_item_serv
			from	material_fiscal		r
			where	a.cd_material	= r.cd_material)) nr_seq_item_serv,
		cd_material
	from	nota_fiscal_item	a
	where	nr_sequencia	= nr_seq_nota_p
	group by
		nr_item_nf,
		vl_total_item_nf - vl_desconto,
		cd_material;

C04 CURSOR FOR
	SELECT	dt_vencimento,
			ie_origem,
			vl_base_venc
	from	nota_fiscal_venc	a
	where	nr_sequencia	= nr_seq_nota_p
	order by	dt_vencimento asc;


BEGIN

if (coalesce(ie_previa_p, 'N') = 'S') then
	delete	from nota_fiscal_trib_prev
	where	nr_seq_nota	= nr_seq_nota_p;

	delete	from nota_fiscal_item_trib_prev
	where	nr_seq_nota	= nr_seq_nota_p;

end if;

select	cd_estabelecimento,
		vl_total_nota,
		cd_cgc_emitente,
		cd_serie_nf,
		nr_nota_fiscal,
		nr_sequencia_nf,
		dt_emissao,
		coalesce(nr_interno_conta,0),
		coalesce(nr_seq_protocolo,0),
		coalesce(nr_seq_lote_prot,0),
		coalesce(vl_mercadoria,0),
		cd_cgc,
		cd_pessoa_fisica,
		coalesce(vl_descontos,0),
		cd_condicao_pagamento,
		coalesce(nr_seq_eme_fatura,0),
		nr_seq_mensalidade,
		coalesce(nr_seq_fatura,nr_seq_fatura_ndc),
		cd_operacao_nf,
		cd_natureza_operacao
into STRICT	cd_estabelecimento_w,
		vl_total_nota_w,
		cd_cgc_emitente_w,
		cd_serie_nf_w,
		nr_nota_fiscal_w,
		nr_sequencia_nf_w,
		dt_emissao_w,
		nr_interno_conta_w,
		nr_seq_protocolo_w,
		nr_seq_lote_protocolo_w,
		vl_mercadoria_w,
		cd_cgc_w,
		cd_pessoa_fisica_w,
		vl_descontos_w,
		cd_condicao_pagamento_w,
		nr_seq_eme_fatura_w,
		nr_seq_mensalidade_w,
		nr_seq_pls_fatura_w,
		cd_operacao_nf_w,
		cd_natureza_operacao_w
from	nota_fiscal
where	nr_sequencia	= nr_seq_nota_p;

select count(*)
into STRICT	qt_regra_rps_w
from (SELECT 1
	from	nota_fiscal_item	i,
		procedimento		r
	where	i.cd_procedimento	= r.cd_procedimento
	and	i.ie_origem_proced = r.ie_origem_proced
	and	(r.nr_seq_item_serv IS NOT NULL AND r.nr_seq_item_serv::text <> '')
	and	i.nr_sequencia = nr_seq_nota_p
	
union all

	SELECT	1
	from	nota_fiscal_item i,
		material_fiscal r
	where	i.cd_material = r.cd_material
	and	(r.nr_seq_item_serv IS NOT NULL AND r.nr_seq_item_serv::text <> '')
	and	i.nr_sequencia = nr_seq_nota_p) alias3;

if (qt_regra_rps_w > 0) then
	select max(nr_seq_item_serv)
	into STRICT	nr_seq_item_serv_w
	from (SELECT	r.nr_seq_item_serv
		from	nota_fiscal_item	i,
			procedimento		r
		where	i.cd_procedimento	= r.cd_procedimento
		and	i.ie_origem_proced	= r.ie_origem_proced
		and	(r.nr_seq_item_serv IS NOT NULL AND r.nr_seq_item_serv::text <> '')
		and	i.nr_sequencia		= nr_seq_nota_p
		
union all

		SELECT	r.nr_seq_item_serv
		from	nota_fiscal_item	i,
			material_fiscal		r
		where	i.cd_material	= r.cd_material
		and	(r.nr_seq_item_serv IS NOT NULL AND r.nr_seq_item_serv::text <> '')
		and	i.nr_sequencia	= nr_seq_nota_p) alias4;
end if;

select	max(ie_tipo_tributacao)
into STRICT	ie_tipo_tributacao_w
from	pessoa_juridica
where	cd_cgc	= cd_cgc_w;

if (nr_interno_conta_w > 0) then
	select	max(a.cd_convenio_parametro)
	into STRICT	cd_convenio_w
	from	atendimento_paciente	b,
		conta_paciente		a
	where	a.nr_interno_conta	= nr_interno_conta_w
	  and	a.nr_atendimento	= b.nr_atendimento;
elsif (nr_seq_protocolo_w > 0) then
	select	max(cd_convenio)
	into STRICT	cd_convenio_w
	from	protocolo_convenio
	where	nr_seq_protocolo	= nr_seq_protocolo_w;
elsif (nr_seq_lote_protocolo_w > 0) then
	select	max(cd_convenio)
	into STRICT	cd_convenio_w
	from	lote_protocolo
	where	nr_sequencia = nr_seq_lote_protocolo_w;
elsif (nr_seq_eme_fatura_w > 0) then
	select	max(a.cd_convenio)
	into STRICT	cd_convenio_w
	from	eme_contrato	a,
		eme_faturamento	b
	where	a.nr_sequencia	= b.nr_seq_contrato
	and	b.nr_sequencia	= nr_seq_eme_fatura_w;
else
	select	max(cd_convenio)
	into STRICT	cd_convenio_w
	from	convenio_retorno	b,
		convenio_retorno_nf	a
	where	a.nr_seq_retorno	= b.nr_sequencia
	and	a.nr_seq_nota_fiscal	= nr_seq_nota_p;
end if;

if (coalesce(cd_convenio_w::text, '') = '') then
	select	max(a.cd_conv_integracao)
	into STRICT	cd_convenio_w
	from	nota_fiscal a
	where	a.nr_sequencia	= nr_seq_nota_p;
end if;

select	max(ie_forma_pagamento)
into STRICT	ie_forma_pagamento_w
from	condicao_pagamento
where	cd_condicao_pagamento	= cd_condicao_pagamento_w;

begin
	select	coalesce(o.ie_base_calc_icms	,'N')
	into STRICT	ie_base_calc_icms_w
	from	nota_fiscal 		n,
		natureza_operacao 	o
	where	n.cd_natureza_operacao  = o.cd_natureza_operacao
	and 	n.nr_sequencia		= nr_seq_nota_p;
exception
when others then
	ie_base_calc_icms_w := null;
end;

ie_corpo_item_w		:= 'C';
ie_origem_titulo_w 	:= null;
if (nr_seq_pls_fatura_w IS NOT NULL AND nr_seq_pls_fatura_w::text <> '') then
	ie_origem_titulo_w := '13'; -- Origem de OPS - Faturamento
end if;

open C01;
loop
fetch C01 into
	cd_tributo_w,
	ie_isento_w,
	ie_tributa_mat_monofasico_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	select	max(ie_tipo_tributo)
	into STRICT	ie_tipo_tributo_w
	from	tributo
	where	cd_tributo	= cd_tributo_w;

	SELECT * FROM obter_dados_trib_tit_rec(cd_tributo_w, cd_estabelecimento_w, cd_convenio_w, dt_emissao_w, 'N', pr_imposto_w, vl_minimo_base_w, vl_minimo_tributo_w, ie_acumulativo_w, vl_teto_base_w, vl_desc_dependente_w, cd_pessoa_fisica_w, cd_cgc_w, ie_vago_w, ie_origem_titulo_w, nr_seq_item_serv_w, nr_seq_regra_w, cd_darf_w, null, null, cd_operacao_nf_w, cd_natureza_operacao_w) INTO STRICT pr_imposto_w, vl_minimo_base_w, vl_minimo_tributo_w, ie_acumulativo_w, vl_teto_base_w, vl_desc_dependente_w, nr_seq_regra_w, cd_darf_w;

	if (nr_seq_regra_w IS NOT NULL AND nr_seq_regra_w::text <> '') then
		select  coalesce(max(pr_desc_base), 0),
		coalesce(max(ie_saldo_tit_rec), 'N'),
		max(obter_operacao_tributo(nr_sequencia, cd_tributo_w)),
		coalesce(max(ie_exporta_xml),'S'),
		coalesce(ie_min_reter, 'N'),
		coalesce(max(vl_min_reter),0)
		into STRICT  pr_desc_base_w,
		ie_saldo_tit_rec_w,
		ie_retencao_w,
		ie_exporta_xml_w,
		ie_min_reter_w,
		vl_min_reter_w
		from  regra_calculo_imposto
		where  nr_sequencia  = nr_seq_regra_w
		group by ie_min_reter;
	end if;

	if (ie_base_calc_icms_w = 'I') and (ie_tipo_tributo_w   = 'ICMS') then
		select	coalesce(sum(vl_tributo),0)
		into STRICT	vl_imposto_ipi_w
		from 	nota_fiscal_trib n,
			tributo t
		where	n.cd_tributo 		= t.cd_tributo
		and	n.nr_sequencia		= nr_seq_nota_p
		and	t.ie_tipo_tributo 	= 'IPI';
	else
		vl_imposto_ipi_w := 0;
	end if;

	select	coalesce(ie_desc_nf,'N')
	into STRICT	ie_considera_desc_w
	from	tributo
	where	cd_tributo	= cd_tributo_w;

	if (ie_considera_desc_w = 'S') then
		vl_desconto_nf_w	:= vl_descontos_w;
	else
		vl_desconto_nf_w	:= 0;
	end if;
		vl_mercadoria_liq_ww	:= 0;

	if (coalesce(nr_seq_mensalidade_w::text, '') = '') then
		vl_mercadoria_liq_ww	:= (vl_mercadoria_w - vl_desconto_nf_w);	/*Anderson 12/09/2007 - OS66018 - Considerar o desconto ao gerar o valor do tributo*/
	else
		vl_mercadoria_liq_ww := pls_obter_base_calc_mens(nr_seq_mensalidade_w, null, cd_tributo_w, ie_tipo_tributo_w, vl_mercadoria_liq_ww);
	end if;

	vl_reducao_base_w := 0;

	-- Para geracao dos tributos conforme a fatura (ops - faturamento)
	if (nr_seq_pls_fatura_w IS NOT NULL AND nr_seq_pls_fatura_w::text <> '') then
		select	max(vl_base_calculo),
			max(vl_base_calculo),
			coalesce(max(ie_reducao_base_nf),'N'),
			max(vl_base_total),
			max(vl_reducao_base)
		into STRICT	vl_mercadoria_liq_ww,
			vl_mercadoria_w,
			ie_reducao_base_nf_w,
			vl_base_total_fat_w,
			vl_reducao_base_fat_w
		from	pls_fatura_trib
		where	nr_seq_fatura	= nr_seq_pls_fatura_w
		and	cd_tributo	= cd_tributo_w;

		if (coalesce(vl_mercadoria_w::text, '') = '') then
			select	coalesce(vl_fatura,0) + coalesce(vl_total_ndc,0)
			into STRICT	vl_mercadoria_w
			from	pls_fatura
			where	nr_sequencia	= nr_seq_pls_fatura_w;

			vl_mercadoria_liq_ww := vl_mercadoria_w;
		end if;

		-- Considerar reducao da base no tributo da nota fiscal da OPS - Faturamento
		if (ie_reducao_base_nf_w = 'S') then
			--vl_mercadoria_liq_ww	:= vl_base_total_fat_w; -- Considera o valor total da base
			vl_mercadoria_w		:= vl_base_total_fat_w; -- Considera o valor total da base
			vl_reducao_base_w	:= vl_reducao_base_fat_w; -- Considera a diferenca entre o valor total e a base para o valor de reducao
		end if;
	end if;

	if (pr_desc_base_w <> 0) then
		vl_reducao_base_w	:= vl_mercadoria_liq_ww * (pr_desc_base_w / 100);
		vl_mercadoria_liq_ww	:= vl_mercadoria_liq_ww - vl_reducao_base_w;
	end if;

	if (pr_imposto_w > 0) then
		vl_trib_nao_retido_w	:= 0;
		vl_base_nao_retido_w	:= 0;
		vl_trib_adic_w		:= 0;
		vl_base_adic_w		:= 0;

		vl_soma_trib_nao_retido_w 	:= 0;
		vl_soma_base_nao_retido_w 	:= 0;
		vl_soma_trib_adic_w 		:= 0;
		vl_soma_base_adic_w 		:= 0;
		vl_trib_anterior_w 		:= 0;
		vl_total_base_w			:= 0;
		vl_reducao_w			:= 0;

		if (coalesce(ie_acumulativo_w,'N') = 'S') then
			if (coalesce(ie_previa_p,'N') = 'N') then
				select	coalesce(sum(a.vl_trib_nao_retido), 0),
					coalesce(sum(a.vl_base_nao_retido), 0),
					coalesce(sum(a.vl_trib_adic), 0),
					coalesce(sum(a.vl_base_adic), 0),
					coalesce(sum(a.vl_tributo),0),
					coalesce(sum(a.vl_base_calculo),0),
					coalesce(sum(a.vl_reducao),0)
				into STRICT	vl_soma_trib_nao_retido_w,
					vl_soma_base_nao_retido_w,
					vl_soma_trib_adic_w,
					vl_soma_base_adic_w,
					vl_trib_anterior_w,
					vl_total_base_w,
					vl_reducao_w
				from	operacao_nota		o,
					nota_fiscal		b,
					nota_fiscal_trib	a
				where	a.nr_sequencia			= b.nr_sequencia
				and	trunc(b.dt_emissao, 'month')	= trunc(dt_emissao_w, 'month')
				and	a.cd_tributo			= cd_tributo_w
				and	b.cd_cgc_emitente		= cd_cgc_emitente_w
				and	coalesce(b.ie_situacao,1)		= 1
				and	b.cd_operacao_nf		= o.cd_operacao_nf
				and	o.ie_operacao_fiscal		= 'S'
				and (cd_cgc				= cd_cgc_w or
					cd_pessoa_fisica		= cd_pessoa_fisica_w);
			else
				select	coalesce(sum(a.vl_trib_nao_retido), 0),
					coalesce(sum(a.vl_base_nao_retido), 0),
					coalesce(sum(a.vl_trib_adic), 0),
					coalesce(sum(a.vl_base_adic), 0),
					coalesce(sum(a.vl_tributo),0),
					coalesce(sum(a.vl_base_calculo),0),
					coalesce(sum(a.vl_reducao),0)
				into STRICT	vl_soma_trib_nao_retido_w,
					vl_soma_base_nao_retido_w,
					vl_soma_trib_adic_w,
					vl_soma_base_adic_w,
					vl_trib_anterior_w,
					vl_total_base_w,
					vl_reducao_w
				from	operacao_nota		o,
					nota_fiscal		b,
					nota_fiscal_trib_prev	a
				where	a.nr_seq_nota			= b.nr_sequencia
				and	trunc(b.dt_emissao, 'month')	= trunc(dt_emissao_w, 'month')
				and	a.cd_tributo			= cd_tributo_w
				and	b.cd_cgc_emitente		= cd_cgc_emitente_w
				and	coalesce(b.ie_situacao,1)		= 1
				and	b.cd_operacao_nf		= o.cd_operacao_nf
				and	o.ie_operacao_fiscal		= 'S'
				and (cd_cgc				= cd_cgc_w or
					cd_pessoa_fisica		= cd_pessoa_fisica_w);
			end if;
		elsif (coalesce(ie_acumulativo_w,'N') = 'D') then
			if (coalesce(ie_previa_p,'N') = 'N') then
				begin
					select	coalesce(sum(a.vl_trib_nao_retido), 0),
						coalesce(sum(a.vl_base_nao_retido), 0),
						coalesce(sum(a.vl_trib_adic), 0),
						coalesce(sum(a.vl_base_adic), 0),
						coalesce(sum(a.vl_tributo),0),
						coalesce(sum(a.vl_base_calculo),0),
						coalesce(sum(a.vl_reducao),0)
					into STRICT	vl_soma_trib_nao_retido_w,
						vl_soma_base_nao_retido_w,
						vl_soma_trib_adic_w,
						vl_soma_base_adic_w,
						vl_trib_anterior_w,
						vl_total_base_w,
						vl_reducao_w
					from	operacao_nota		o,
						nota_fiscal		b,
						nota_fiscal_trib	a
					where	a.nr_sequencia			= b.nr_sequencia
					and	trunc(b.dt_emissao, 'day')	= trunc(dt_emissao_w, 'day')
					and	a.cd_tributo			= cd_tributo_w
					and	b.cd_cgc_emitente		= cd_cgc_emitente_w
					and	coalesce(b.ie_situacao,1)		= 1
					and	b.cd_operacao_nf		= o.cd_operacao_nf
					and	o.ie_operacao_fiscal		= 'S'
					and (cd_cgc				= cd_cgc_w or
						cd_pessoa_fisica		= cd_pessoa_fisica_w);
				exception
				when others then
					vl_soma_trib_nao_retido_w 	:= 0;
					vl_soma_base_nao_retido_w 	:= 0;
					vl_soma_trib_adic_w 		:= 0;
					vl_soma_base_adic_w 		:= 0;
					vl_trib_anterior_w 		:= 0;
					vl_total_base_w			:= 0;
					vl_reducao_w			:= 0;
				end;
			else
				begin
					select	coalesce(sum(a.vl_trib_nao_retido), 0),
						coalesce(sum(a.vl_base_nao_retido), 0),
						coalesce(sum(a.vl_trib_adic), 0),
						coalesce(sum(a.vl_base_adic), 0),
						coalesce(sum(a.vl_tributo),0),
						coalesce(sum(a.vl_base_calculo),0),
						coalesce(sum(a.vl_reducao),0)
					into STRICT	vl_soma_trib_nao_retido_w,
						vl_soma_base_nao_retido_w,
						vl_soma_trib_adic_w,
						vl_soma_base_adic_w,
						vl_trib_anterior_w,
						vl_total_base_w,
						vl_reducao_w
					from	operacao_nota		o,
						nota_fiscal		b,
						nota_fiscal_trib_prev	a
					where	a.nr_seq_nota			= b.nr_sequencia
					and	trunc(b.dt_emissao, 'day')	= trunc(dt_emissao_w, 'day')
					and	a.cd_tributo			= cd_tributo_w
					and	b.cd_cgc_emitente		= cd_cgc_emitente_w
					and	coalesce(b.ie_situacao,1)		= 1
					and	b.cd_operacao_nf		= o.cd_operacao_nf
					and	o.ie_operacao_fiscal		= 'S'
					and (cd_cgc				= cd_cgc_w or
						cd_pessoa_fisica		= cd_pessoa_fisica_w);
				exception
				when others then
					vl_soma_trib_nao_retido_w 	:= 0;
					vl_soma_base_nao_retido_w 	:= 0;
					vl_soma_trib_adic_w 		:= 0;
					vl_soma_base_adic_w 		:= 0;
					vl_trib_anterior_w 		:= 0;
					vl_total_base_w			:= 0;
					vl_reducao_w			:= 0;
				end;
			end if;
		end if;

		SELECT * FROM obter_valores_tributo(	ie_acumulativo_w, pr_imposto_w, vl_minimo_base_w, vl_minimo_tributo_w, vl_soma_trib_nao_retido_w, vl_soma_trib_adic_w, vl_soma_base_nao_retido_w, vl_soma_base_adic_w, vl_mercadoria_liq_ww, vl_tributo_w, vl_trib_nao_retido_w, vl_trib_adic_w, vl_base_nao_retido_w, vl_base_adic_w, vl_teto_base_w, vl_trib_anterior_w, 'N', vl_total_base_w, vl_reducao_w, vl_desc_dependente_w, 0, 0, null, null, 0, clock_timestamp(), nr_seq_regra_irpf_w, 0, 'N', ie_min_reter_w) INTO STRICT pr_imposto_w, vl_mercadoria_liq_ww, vl_tributo_w, vl_trib_nao_retido_w, vl_trib_adic_w, vl_base_nao_retido_w, vl_base_adic_w, vl_reducao_w, vl_desc_dependente_w, nr_seq_regra_irpf_w;

		select CASE WHEN ie_saldo_tit_rec_w='S' THEN  'CD'  ELSE null END  into STRICT ie_origem_trib_w;

		if  ((ie_retencao_w <> 'N') and (ie_min_reter_w = 'S') and (vl_min_reter_w > vl_tributo_w)) then
			ie_retencao_w := 'N';
			ie_origem_trib_w := null;
		end if;

		if (coalesce(ie_previa_p,'N') = 'N') then

				insert	into nota_fiscal_trib(nr_sequencia,
					cd_tributo,
					vl_tributo,
					dt_atualizacao,
					nm_usuario,
					vl_base_calculo,
					tx_tributo,
					vl_reducao_base,
					vl_trib_nao_retido,
					vl_base_nao_retido,
					vl_trib_adic,
					vl_base_adic,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_seq_interno,
					vl_reducao,
					ie_origem_trib,
					ie_retencao,
					ie_exporta_xml,
					nr_seq_regra_trib,
					cd_darf)
				values (nr_seq_nota_p,
					cd_tributo_w,
					vl_tributo_w,
					clock_timestamp(),
					nm_usuario_p,
					CASE WHEN coalesce(nr_seq_mensalidade_w::text, '') = '' THEN  vl_mercadoria_w - vl_desconto_nf_w - vl_reducao_base_w  ELSE vl_mercadoria_liq_ww END +vl_imposto_ipi_w,
					pr_imposto_w,
					0,
					vl_trib_nao_retido_w,
					vl_base_nao_retido_w,
					vl_trib_adic_w,
					vl_base_adic_w,
					clock_timestamp(),
					nm_usuario_p,
					nextval('nota_fiscal_trib_seq'),
					vl_reducao_base_w,
					ie_origem_trib_w,
					ie_retencao_w,
					ie_exporta_xml_w,
					nr_seq_regra_w,
					cd_darf_w);

			if (ie_soma_diminui_w = 'S') then
				vl_total_imposto_nota_w	:= vl_total_imposto_nota_w + vl_tributo_w;
			elsif (ie_soma_diminui_w = 'D') then
				vl_total_imposto_nota_w	:= vl_total_imposto_nota_w - vl_tributo_w;
			end if;
		else
			insert into nota_fiscal_trib_prev(nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_nota,
				cd_tributo,
				vl_tributo,
				vl_base_calculo,
				tx_tributo,
				vl_reducao_base,
				vl_trib_nao_retido,
				vl_base_nao_retido,
				vl_trib_adic,
				vl_base_adic,
				vl_reducao,
				nr_seq_regra_trib)
			values (nextval('nota_fiscal_trib_prev_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_nota_p,
				cd_tributo_w,
				vl_tributo_w,
				CASE WHEN coalesce(nr_seq_mensalidade_w::text, '') = '' THEN  vl_mercadoria_w - vl_desconto_nf_w - vl_reducao_base_w  ELSE vl_mercadoria_liq_ww END +vl_imposto_ipi_w,
				pr_imposto_w,
				0,
				vl_trib_nao_retido_w,
				vl_base_nao_retido_w,
				vl_trib_adic_w,
				vl_base_adic_w,
				vl_reducao_base_w,
				nr_seq_regra_w);
		end if;
	else
		if (coalesce(ie_previa_p,'N') = 'N') then
			if (ie_isento_w = 'S') and (pr_imposto_w = 0) then
				insert	into nota_fiscal_trib(nr_sequencia,
					cd_tributo,
					vl_tributo,
					dt_atualizacao,
					nm_usuario,
					vl_base_calculo,
					tx_tributo,
					vl_reducao_base,
					vl_trib_nao_retido,
					vl_base_nao_retido,
					vl_trib_adic,
					vl_base_adic,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_seq_interno,
					vl_reducao,
					ie_origem_trib,
					ie_retencao,
					ie_exporta_xml,
					nr_seq_regra_trib)
				values (nr_seq_nota_p,
					cd_tributo_w,
					0,
					clock_timestamp(),
					nm_usuario_p,
					CASE WHEN coalesce(nr_seq_mensalidade_w::text, '') = '' THEN  vl_mercadoria_w - vl_desconto_nf_w - vl_reducao_base_w  ELSE vl_mercadoria_liq_ww END +vl_imposto_ipi_w,
					0,
					0,
					0,
					0,
					0,
					0,
					clock_timestamp(),
					nm_usuario_p,
					nextval('nota_fiscal_trib_seq'),
					0,
					ie_origem_trib_w,
					ie_retencao_w,
					ie_exporta_xml_w,
					nr_seq_regra_w);
			end if;
		end if;
	end if;
	end;
end loop;
close C01;

ie_corpo_item_w	:= 'I';

open C01;
loop
fetch C01 into
	cd_tributo_w,
	ie_isento_w,
	ie_tributa_mat_monofasico_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	select	ie_soma_diminui
	into STRICT	ie_soma_diminui_w
	from	tributo
	where	cd_tributo	= cd_tributo_w;

	open C03;
	loop
	fetch c03 into
		nr_item_nf_w,
		vl_total_item_w,
		nr_seq_item_serv_item_w,
		cd_material_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin

		vl_total_item_ww := 0;

		SELECT * FROM obter_dados_trib_tit_rec(cd_tributo_w, cd_estabelecimento_w, cd_convenio_w, dt_emissao_w, 'N', pr_imposto_w, vl_minimo_base_w, vl_minimo_tributo_w, ie_acumulativo_w, vl_teto_base_w, vl_desc_dependente_w, cd_pessoa_fisica_w, cd_cgc_w, ie_vago_w, ie_origem_titulo_w, coalesce(nr_seq_item_serv_item_w,nr_seq_item_serv_w), nr_seq_regra_w, cd_darf_w, nr_seq_nota_p, nr_item_nf_w, cd_operacao_nf_w, cd_natureza_operacao_w) INTO STRICT pr_imposto_w, vl_minimo_base_w, vl_minimo_tributo_w, ie_acumulativo_w, vl_teto_base_w, vl_desc_dependente_w, nr_seq_regra_w, cd_darf_w;

		if (pr_imposto_w > 0) then
			if (nr_seq_regra_w IS NOT NULL AND nr_seq_regra_w::text <> '') then
				select	vl_minimo_tributo,
					vl_minimo_base_calculo,
					nr_seq_sit_trib
				into STRICT	vl_minimo_tributo_w,
					vl_minimo_base_calculo_w,
					nr_seq_sit_trib_w
				from	regra_calculo_imposto
				where	nr_sequencia	= nr_seq_regra_w;
			end if;
			delete	from nota_fiscal_item_trib
			where	nr_sequencia	= nr_seq_nota_p
			and	nr_item_nf	= nr_item_nf_w
			and	cd_tributo	= cd_tributo_w;

			select	max(o.ie_base_calc_icms)
			into STRICT	ie_base_calc_icms_w
			from	nota_fiscal_item i,
				natureza_operacao o
			where	i.cd_natureza_operacao  = o.cd_natureza_operacao
			and 	i.nr_sequencia	= nr_seq_nota_p
			and	i.nr_item_nf	= nr_item_nf_w;

			ie_tributar_monofasico_w := obter_param_usuario(40, 481, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_tributar_monofasico_w);

			if ((ie_tributar_monofasico_w = 'S') or (ie_tributa_mat_monofasico_w = 'S')) or
			   ((ie_tributar_monofasico_w = 'N') and (ie_tributa_mat_monofasico_w = 'N') and (obter_tipo_tributacao_item(cd_estabelecimento_w, cd_material_w) = 'N')) then
				vl_total_item_ww  := vl_total_item_w;
			end if;

			if (ie_base_calc_icms_w = 'I') then

				select	sum(vl_tributo)
				into STRICT	vl_imposto_ipi_w
				from 	nota_fiscal_item_trib n,
					tributo t
				where	n.cd_tributo = t.cd_tributo
				and	n.nr_sequencia	= nr_seq_nota_p
				and	n.nr_item_nf	= nr_item_nf_w
				and	t.ie_tipo_tributo = 'IPI';

				select	ie_tipo_tributo
				into STRICT	ie_tipo_tributo_ww
				from	tributo
				where	cd_tributo = cd_tributo_w;

				if (ie_tipo_tributo_ww = 'ICMS') then
					vl_total_item_ww := coalesce(vl_imposto_ipi_w,0) + vl_total_item_ww;
				end if;
			end if;
			vl_tributo_w	:= (vl_total_item_ww * pr_imposto_w) / 100;

			if (vl_tributo_w >= coalesce(vl_minimo_tributo_w, 0)) and (vl_total_item_ww >= vl_minimo_base_calculo_w) then
				if (coalesce(ie_previa_p,'N') = 'N') then
					select	count(*)
					into STRICT	qt_existe_w
					from	nota_fiscal_item_trib
					where	nr_sequencia = nr_seq_nota_p
					and	nr_item_nf = nr_item_nf_w
					and	cd_tributo = cd_tributo_w;

					if (qt_existe_w = 0) then
						insert	into nota_fiscal_item_trib(nr_sequencia,
							cd_estabelecimento,
							cd_cgc_emitente,
							cd_serie_nf,
							nr_nota_fiscal,
							nr_sequencia_nf,
							nr_item_nf,
							cd_tributo,
							vl_tributo,
							dt_atualizacao,
							nm_usuario,
							vl_base_calculo,
							tx_tributo,
							vl_reducao_base,
							vl_trib_nao_retido,
							vl_base_nao_retido,
							vl_trib_adic,
							vl_base_adic,
							ie_rateio,
							nr_seq_sit_trib,
							nr_seq_regra_trib)
						values (nr_seq_nota_p,
							cd_estabelecimento_w,
							cd_cgc_emitente_w,
							cd_serie_nf_w,
							nr_nota_fiscal_w,
							nr_sequencia_nf_w,
							nr_item_nf_w,
							cd_tributo_w,
							vl_tributo_w,
							clock_timestamp(),
							nm_usuario_p,
							vl_total_item_ww,
							pr_imposto_w,
							0,
							0,
							0,
							0,
							0,
							'N',
							nr_seq_sit_trib_w,
							nr_seq_regra_w);

							if (ie_soma_diminui_w = 'S') then
								vl_total_imposto_item_w	:= vl_total_imposto_item_w + vl_tributo_w;
							elsif (ie_soma_diminui_w = 'D') then
								vl_total_imposto_item_w	:= vl_total_imposto_item_w - vl_tributo_w;
							end if;
					end if;
				else
					select	count(*)
					into STRICT	qt_existe_w
					from	nota_fiscal_item_trib_prev
					where	nr_seq_nota = nr_seq_nota_p
					and	nr_item_nf = nr_item_nf_w
					and	cd_tributo = cd_tributo_w;

					if (qt_existe_w = 0) then
						insert into nota_fiscal_item_trib_prev(nr_sequencia,
							cd_estabelecimento,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							nr_seq_nota,
							nr_item_nf,
							cd_tributo,
							vl_tributo,
							vl_base_calculo,
							tx_tributo,
							vl_reducao_base,
							nr_seq_regra_trib)
						values (nextval('nota_fiscal_item_trib_prev_seq'),
							cd_estabelecimento_w,
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							nr_seq_nota_p,
							nr_item_nf_w,
							cd_tributo_w,
							vl_tributo_w,
							vl_total_item_ww,
							pr_imposto_w,
							0,
							nr_seq_regra_w);
					end if;
				end if;
			end if;
		end if;
		end;
	end loop;
	close C03;
	end;
end loop;
close C01;

ie_corpo_item_w	:= 'V';

open C01;
loop
fetch C01 into
	cd_tributo_w,
	ie_isento_w,
	ie_tributa_mat_monofasico_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	select	ie_soma_diminui
	into STRICT	ie_soma_diminui_w
	from	tributo
	where	cd_tributo	= cd_tributo_w;

	open C04;
	loop
	fetch c04 into
		dt_vencimento_w,
		ie_origem_w,
		vl_total_item_w;
	EXIT WHEN NOT FOUND; /* apply on C04 */
		begin
		SELECT * FROM obter_dados_trib_tit_rec(cd_tributo_w, cd_estabelecimento_w, cd_convenio_w, dt_emissao_w, 'N', pr_imposto_w, vl_minimo_base_w, vl_minimo_tributo_w, ie_acumulativo_w, vl_teto_base_w, vl_desc_dependente_w, cd_pessoa_fisica_w, cd_cgc_w, ie_vago_w, ie_origem_titulo_w, coalesce(nr_seq_item_serv_item_w,nr_seq_item_serv_w), nr_seq_regra_w, cd_darf_w, null, null, cd_operacao_nf_w, cd_natureza_operacao_w) INTO STRICT pr_imposto_w, vl_minimo_base_w, vl_minimo_tributo_w, ie_acumulativo_w, vl_teto_base_w, vl_desc_dependente_w, nr_seq_regra_w, cd_darf_w;

		if (pr_imposto_w > 0) then
			if (nr_seq_regra_w IS NOT NULL AND nr_seq_regra_w::text <> '') then
				select	vl_minimo_tributo,
					vl_minimo_base_calculo,
					nr_seq_sit_trib
				into STRICT	vl_minimo_tributo_w,
					vl_minimo_base_calculo_w,
					nr_seq_sit_trib_w
				from	regra_calculo_imposto
				where	nr_sequencia	= nr_seq_regra_w;
			end if;

			delete	from nota_fiscal_venc_trib
			where	nr_sequencia	= nr_seq_nota_p
			and	dt_vencimento	= dt_vencimento_w
			and	ie_origem	= ie_origem_w
			and	cd_tributo	= cd_tributo_w;

			vl_tributo_w	:= (vl_total_item_w * pr_imposto_w) / 100;

			if (vl_tributo_w >= coalesce(vl_minimo_tributo_w, 0)) and (vl_total_item_w >= vl_minimo_base_calculo_w) then
				select	count(*)
				into STRICT	qt_existe_w
				from	nota_fiscal_venc_trib
				where	nr_sequencia	= nr_seq_nota_p
				and	dt_vencimento	= dt_vencimento_w
				and	ie_origem	= ie_origem_w
				and	cd_tributo	= cd_tributo_w;

				if (qt_existe_w = 0) then
					insert	into nota_fiscal_venc_trib(nr_sequencia,
						cd_tributo,
						vl_tributo,
						dt_atualizacao,
						nm_usuario,
						vl_base_calculo,
						tx_tributo,
						vl_trib_nao_retido,
						vl_base_nao_retido,
						vl_trib_adic,
						vl_base_adic,
						vl_reducao,
						vl_desc_base,
						nr_seq_regra_trib,
						ie_origem,
						dt_vencimento)
					values (nr_seq_nota_p,
						cd_tributo_w,
						vl_tributo_w,
						clock_timestamp(),
						nm_usuario_p,
						vl_total_item_w,
						pr_imposto_w,
						0,
						0,
						0,
						0,
						0,
						0,
						nr_seq_regra_w,
						ie_origem_w,
						dt_vencimento_w);

					if (ie_soma_diminui_w = 'S') then
						vl_total_imposto_item_w	:= vl_total_imposto_item_w + vl_tributo_w;
					elsif (ie_soma_diminui_w = 'D') then
						vl_total_imposto_item_w	:= vl_total_imposto_item_w - vl_tributo_w;
					end if;
				end if;
			end if;
		end if;
		end;
	end loop;
	close C04;
	end;
end loop;
close C01;

CALL atualiza_total_nota_fiscal(	nr_seq_nota_p,
				nm_usuario_p);

select	count(1)
into STRICT	qt_venctos_w
from	nota_fiscal_venc
where	nr_sequencia	= nr_seq_nota_p;

if (ie_forma_pagamento_w <> 10) and (coalesce(ie_previa_p,'N') = 'N') then
	select	coalesce(vl_total_nota,0)
	into STRICT	vl_total_nota_w
	from	nota_fiscal
	where	nr_sequencia	= nr_seq_nota_p;

	select	coalesce(sum(vl_vencimento),0)
	into STRICT	vl_vencimento_w
	from	nota_fiscal_venc
	where	nr_sequencia	= nr_seq_nota_p;

	if (coalesce(vl_vencimento_w,0) <> coalesce(vl_total_nota_w,0)) then
		begin
		if (qt_venctos_w = 1) then
			update	nota_fiscal_venc
			set	vl_vencimento	= vl_vencimento + vl_total_nota_w - vl_vencimento_w
			where	nr_sequencia	= nr_seq_nota_p;
		elsif (qt_venctos_w > 1) then
			update	nota_fiscal_venc
			set	vl_vencimento	= vl_vencimento + vl_total_nota_w - vl_vencimento_w
			where	nr_sequencia	= nr_seq_nota_p
			and	dt_vencimento	= dt_emissao_w;
		end if;
		end;
	end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_imposto_nf ( nr_seq_nota_p bigint, nm_usuario_p text, nr_seq_sit_trib_p bigint, cd_tributo_p bigint, ie_previa_p text default 'N', ie_gerar_corpo_item_p text default 'A') FROM PUBLIC;

