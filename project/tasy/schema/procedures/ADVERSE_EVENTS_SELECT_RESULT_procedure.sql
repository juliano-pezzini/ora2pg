-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE adverse_events_select_result ( nr_seq_registro_p bigint, cd_grade_p bigint, nr_seq_result_out_p INOUT bigint) AS $body$
DECLARE


nr_seq_result_w         bigint;
qt_result_w			    bigint;
ds_descricao_cliente_w	varchar(255);


BEGIN

select  ds_descricao_cliente
into STRICT    ds_descricao_cliente_w
from    eventos_adversos_grade
where   cd_grade = cd_grade_p;

select  count(*)
into STRICT    qt_result_w
from    eventos_adversos_termos termos,
        eventos_adversos_grade grade
where   termos.cd_termo = grade.cd_termo
and     grade.cd_grade = cd_grade_p
and     termos.cd_termo in (
                                    SELECT  grade2.cd_termo
                                    from    eventos_adversos_result result,
                                            eventos_adversos_grade grade2
                                    where   result.nr_seq_registro = nr_seq_registro_p
                                    and     result.nr_resultado = grade2.cd_grade
                           );

if (qt_result_w > 0) then
    CALL exibir_erro_abortar(Wheb_mensagem_pck.get_texto(387890)/*'Esse item permite a selecao de apenas um resultado! #@#@'*/
,null);
else
	insert into eventos_adversos_result(
        nr_sequencia,
        nr_seq_registro,
        dt_atualizacao,
        ds_resultado,
        nr_resultado,
        dt_resultado,
        nm_usuario,
        ie_situacao)
    
        SELECT nextval('eventos_adversos_result_seq'),
        nr_seq_registro_p,
		    clock_timestamp(),
        ds_descricao_cliente_w,
        cd_grade_p,
        clock_timestamp(),
        wheb_usuario_pck.get_nm_usuario,
        'A'
	
	where not exists (SELECT 1
                     from   eventos_adversos_result result
                     where	nr_seq_registro = nr_seq_registro_p
                     and	nr_resultado = cd_grade_p
                    );
end if;

select	coalesce(max(nr_sequencia),0)
into STRICT	nr_seq_result_w
from	eventos_adversos_result
where	nr_seq_registro = nr_seq_registro_p;

nr_seq_result_out_p := nr_seq_result_w;

commit;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE adverse_events_select_result ( nr_seq_registro_p bigint, cd_grade_p bigint, nr_seq_result_out_p INOUT bigint) FROM PUBLIC;

