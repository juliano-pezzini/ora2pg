-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE inserir_protocolo_adic_medic (nr_seq_pac_p bigint, ds_lista_protocolo_p text, nm_usuario_p text) AS $body$
DECLARE


lista_informacao_w		varchar(32000);
ie_contador_w			bigint	:= 0;
tam_lista_w			bigint;
ie_pos_virgula_w		smallint;
ie_pos_traco_w			bigint;
lista_inf_w			varchar(100);
CD_PROTOCOLO_w			bigint;
nr_seq_medicao_w		integer;
nr_seq_material_w		integer;
nr_agrupamento_w		integer;
qt_registro_null_w		smallint;
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
nr_seq_solucao_w		bigint;
nr_agrupamento_soluc_w		bigint;
ie_recalcula_dose_prot_w	varchar(1);
nr_seq_proced_w			bigint;
nr_agrupamento_proced_w	bigint;
ie_gerar_pend_quimio_w		varchar(1);


C01 CURSOR FOR
	SELECT	*
	from	PROTOCOLO_MEDIC_PROC
	where	CD_PROTOCOLO = CD_PROTOCOLO_w
	AND	NR_SEQUENCIA = nr_seq_medicao_w
	and	(DS_DIAS_APLICACAO IS NOT NULL AND DS_DIAS_APLICACAO::text <> '');
	
c01_w c01%rowtype;


BEGIN

lista_informacao_w	:= ds_lista_protocolo_p;
ie_recalcula_dose_prot_w	:= Obter_Valor_Param_Usuario(281, 657, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento);
ie_gerar_pend_quimio_w := obter_param_usuario(865, 255, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_gerar_pend_quimio_w);

while	(lista_informacao_w IS NOT NULL AND lista_informacao_w::text <> '') or
	ie_contador_w > 200 loop
	begin
	tam_lista_w			:= length(lista_informacao_w);
	ie_pos_virgula_w		:= position(',' in lista_informacao_w);
	ie_pos_traco_w			:= position('-' in lista_informacao_w);
	lista_inf_w			:= substr(lista_informacao_w,1,ie_pos_virgula_w - 1);
	
	/* Obter a sequencia lida */

	if (ie_pos_virgula_w <> 0) then
		begin
		cd_protocolo_w		:= substr(lista_inf_w,1,(ie_pos_traco_w - 1));
		lista_inf_w		:= substr(lista_inf_w,ie_pos_traco_w + 1,100);
		nr_seq_medicao_w	:= lista_inf_w;
		lista_informacao_w	:= substr(lista_informacao_w,(ie_pos_virgula_w + 1),tam_lista_w);
		end;
	end if;

	if (nr_seq_pac_p > 0) then
		
		--Verificar se existe algum medicamento onde os dias de aplicacao nao foram informados.
		select	count(*)
		into STRICT	qt_registro_null_w
		from 	protocolo_medic_material
		where	cd_protocolo = cd_protocolo_w
		and	nr_sequencia = nr_seq_medicao_w
		and	coalesce(nr_seq_diluicao::text, '') = ''
		and	ie_agrupador = 1
		and	coalesce(ds_dias_aplicacao::text, '') = '';

		if (qt_registro_null_w > 0) then
			-- Existem medicamentos onde o campo DS_DIAS_APLICACAO nao foi informado! #@#@
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(264639);
		end if;
	
		select 	coalesce(max(nr_seq_material),0),
			coalesce(max(nr_agrupamento),0)
		into STRICT	nr_seq_material_w,
			nr_agrupamento_w
		from 	paciente_protocolo_medic
		where 	nr_seq_paciente = nr_seq_pac_p;
			
		insert into paciente_protocolo_medic(
			nr_seq_paciente,
			nr_seq_material,
			cd_material,
			qt_dose,
			cd_unidade_medida,
			ds_dias_aplicacao,
			dt_atualizacao,
			nm_usuario,
			nr_agrupamento,
			ds_recomendacao,
			ie_via_aplicacao,
			nr_seq_diluicao,
			qt_min_aplicacao,
			ie_bomba_infusao,
			cd_intervalo,
			qt_hora_aplicacao,
			qt_dias_util,
			nr_seq_interno,
			ie_se_necessario,
			ie_aplic_lenta,
			ie_urgencia,
			ie_aplic_bolus,
			cd_protocolo,
			nr_seq_medicacao,
			ie_pre_medicacao,
			ie_gerar_solucao,
			ie_local_adm,
			ds_ciclos_aplicacao)
		SELECT 	nr_seq_pac_p,
			nr_seq_material_w + nr_seq_material,
			cd_material,
			qt_dose,
			cd_unidade_medida,
			ds_dias_aplicacao,
			clock_timestamp(),
			nm_usuario_p,
			nr_agrupamento_w + nr_agrupamento,
			ds_recomendacao,
			ie_via_aplicacao,
			nr_seq_diluicao,
			qt_minuto_aplicacao,
			ie_bomba_infusao,
			cd_intervalo,
			qt_hora_aplicacao,
			qt_dias_util,
			nextval('paciente_protocolo_medic_seq'),
			ie_se_necessario,
			ie_aplic_lenta,
			ie_urgencia,
			ie_aplic_bolus,
			cd_protocolo_w,
			nr_seq_medicao_w,
			ie_pre_medicacao,
			coalesce(IE_GERAR_SOLUCAO,'N'),
			CASE WHEN ie_gerar_pend_quimio_w='S' THEN  coalesce(IE_LOCAL_ADM,'H')  ELSE coalesce(IE_LOCAL_ADM,'') END ,
			ds_ciclos_aplicacao
		from 	protocolo_medic_material
		where	cd_protocolo = cd_protocolo_w
		  and	nr_sequencia = nr_seq_medicao_w
		  and	coalesce(nr_seq_diluicao::text, '') = ''
		  and	ie_agrupador = 1;

		insert into paciente_protocolo_medic(
			nr_seq_paciente,
			nr_seq_material,
			cd_material,
			qt_dose,
			cd_unidade_medida,
			ds_dias_aplicacao,
			dt_atualizacao,
			nm_usuario,
			nr_agrupamento,
			ds_recomendacao,
			ie_via_aplicacao,
			nr_seq_diluicao,
			qt_min_aplicacao,
			ie_bomba_infusao,
			cd_intervalo,
			qt_hora_aplicacao,
			qt_dias_util,
			nr_seq_interno,
			ie_se_necessario,
			ie_aplic_lenta,
			ie_urgencia,
			ie_aplic_bolus,
			cd_protocolo,
			nr_seq_medicacao,
			ie_pre_medicacao,
			ie_gerar_solucao,
			ie_local_adm,
			ds_ciclos_aplicacao)
		SELECT 	nr_seq_pac_p,
			nr_seq_material_w + b.nr_seq_material,
			b.cd_material,
			b.qt_dose,
			b.cd_unidade_medida,
			coalesce(b.ds_dias_aplicacao, a.ds_dias_aplicacao),
			clock_timestamp(),
			nm_usuario_p,
			nr_agrupamento_w + b.nr_agrupamento,
			b.ds_recomendacao,
			b.ie_via_aplicacao,
			nr_seq_material_w + b.nr_seq_diluicao,
			b.qt_minuto_aplicacao,
			b.ie_bomba_infusao,
			b.cd_intervalo,
			b.qt_hora_aplicacao,
			b.qt_dias_util,
			nextval('paciente_protocolo_medic_seq'),
			b.ie_se_necessario,
			b.ie_aplic_lenta,
			b.ie_urgencia,
			b.ie_aplic_bolus,
			cd_protocolo_w,
			nr_seq_medicao_w,
			b.ie_pre_medicacao,
			coalesce(a.IE_GERAR_SOLUCAO,'N'),
			CASE WHEN ie_gerar_pend_quimio_w='S' THEN  coalesce(b.IE_LOCAL_ADM,'H')  ELSE coalesce(b.IE_LOCAL_ADM,'') END ,
			coalesce(b.ds_ciclos_aplicacao,a.ds_ciclos_aplicacao)
		from 	protocolo_medic_material b,
			protocolo_medic_material a
		where 	a.cd_protocolo = cd_protocolo_w
		  and	a.nr_sequencia = nr_seq_medicao_w
		  and 	a.cd_protocolo = b.cd_protocolo
		  and 	a.nr_sequencia = b.nr_sequencia
		  and 	b.nr_seq_diluicao = a.nr_seq_material
		  and	b.ie_agrupador in (3,7);
		
	
		open C01;
		loop
		fetch C01 into	
			c01_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin
			
			
			cd_procedimento_w	:= c01_w.cd_procedimento;
			ie_origem_proced_w	:= c01_w.ie_origem_proced;
			
			if (c01_w.nr_seq_proc_interno IS NOT NULL AND c01_w.nr_seq_proc_interno::text <> '') then
				SELECT * FROM obter_proc_tab_interno(	c01_w.nr_seq_proc_interno, null, null, null, cd_procedimento_w, ie_origem_proced_w, null, null) INTO STRICT cd_procedimento_w, ie_origem_proced_w;
							
				
			end if;
			
			select 	coalesce(max(NR_SEQ_PROCEDIMENTO),0),
			coalesce(max(nr_agrupamento),0)
			into STRICT	nr_seq_proced_w,
					nr_agrupamento_proced_w
			from 	PACIENTE_PROTOCOLO_PROC
			where 	nr_seq_paciente = nr_seq_pac_p;
			
			
			insert into PACIENTE_PROTOCOLO_PROC(
				NR_SEQ_PACIENTE,
				NR_SEQ_PROCEDIMENTO,
				CD_PROCEDIMENTO,
				IE_ORIGEM_PROCED,
				QT_PROCEDIMENTO,      
				DS_DIAS_APLICACAO,
				DT_ATUALIZACAO,     
				NM_USUARIO,        
				DT_ATUALIZACAO_NREC,
				CD_INTERVALO,   
				NM_USUARIO_NREC,
				NR_AGRUPAMENTO,
				IE_SE_NECESSARIO,
				IE_ACM,      
				NR_SEQ_PROC_INTERNO,
				IE_LADO,
				cd_protocolo_adic,
				NR_SEQ_MEDICACAO_ADIC,
				IE_LOCAL_ADM)
			values (NR_SEQ_PAC_P,
				nr_seq_proced_w + 1, 
				cd_procedimento_w,
				ie_origem_proced_w,
				c01_w.qt_procedimento,
				c01_w.DS_DIAS_APLICACAO,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				c01_w.cd_intervalo,
				nm_usuario_p,
				nr_agrupamento_proced_w + 1,
				c01_w.ie_se_necessario,
				c01_w.ie_acm,
				c01_w.nr_seq_proc_interno,
				c01_w.ie_lado,
				cd_protocolo_w,
				nr_seq_medicao_w,
				CASE WHEN ie_gerar_pend_quimio_w='S' THEN  coalesce(c01_w.IE_LOCAL_ADM,'H')  ELSE coalesce(c01_w.IE_LOCAL_ADM,'') END );
			
			
			
			
			end;
		end loop;
		close C01;	

		
		select 	coalesce(max(NR_SEQ_SOLUCAO),0),
			coalesce(max(nr_agrupamento),0)
		into STRICT	nr_seq_solucao_w,
			nr_agrupamento_soluc_w
		from 	PACIENTE_PROTOCOLO_SOLUC
		where 	nr_seq_paciente = nr_seq_pac_p;
		
		
		INSERT INTO PACIENTE_PROTOCOLO_SOLUC(
			NR_SEQ_PACIENTE, 
			NR_SEQ_SOLUCAO, 
			NR_AGRUPAMENTO, 
			DS_DIAS_APLICACAO, 
			DT_ATUALIZACAO, 
			NM_USUARIO, 
			DT_ATUALIZACAO_NREC, 
			NM_USUARIO_NREC, 
			IE_TIPO_DOSAGEM, 
			QT_DOSAGEM, 
			QT_SOLUCAO_TOTAL, 
			QT_TEMPO_APLICACAO, 
			NR_ETAPAS, 
			IE_BOMBA_INFUSAO, 
			IE_ESQUEMA_ALTERNADO, 
			IE_CALC_AUT, 
			IE_ACM, 
			QT_HORA_FASE, 
			DS_SOLUCAO, 
			DS_ORIENTACAO, 
			IE_SE_NECESSARIO, 
			IE_SOLUCAO_PCA, 
			IE_TIPO_ANALGESIA, 
			IE_PCA_MODO_PROG, 
			QT_DOSE_INICIAL_PCA, 
			QT_VOL_INFUSAO_PCA, 
			QT_BOLUS_PCA, 
			QT_INTERVALO_BLOQUEIO, 
			QT_LIMITE_QUATRO_HORA, 
			QT_DOSE_ATAQUE, 
			IE_TIPO_SOL,
			DS_CICLOS_APLICACAO,
			cd_protocolo_adic,
			nr_seq_medicacao_adic,
			IE_LOCAL_ADM)
		SELECT	NR_SEQ_PAC_P,
			NR_SEQ_SOLUCAO + nr_seq_solucao_w, 
			NR_AGRUPAMENTO + nr_agrupamento_soluc_w, 
			DS_DIAS_APLICACAO, 
			clock_timestamp(), 
			nm_usuario_p, 
			clock_timestamp(), 
			nm_usuario_p, 
			IE_TIPO_DOSAGEM, 
			QT_DOSAGEM, 
			QT_SOLUCAO_TOTAL, 
			QT_TEMPO_APLICACAO, 
			NR_ETAPAS, 
			IE_BOMBA_INFUSAO, 
			IE_ESQUEMA_ALTERNADO, 
			IE_CALC_AUT, 
			IE_ACM, 
			QT_HORA_FASE, 
			DS_SOLUCAO, 
			DS_ORIENTACAO, 
			IE_SE_NECESSARIO, 
			IE_SOLUCAO_PCA, 
			IE_TIPO_ANALGESIA, 
			IE_PCA_MODO_PROG, 
			QT_DOSE_INICIAL_PCA, 
			QT_VOL_INFUSAO_PCA, 
			QT_BOLUS_PCA, 
			QT_INTERVALO_BLOQUEIO, 
			QT_LIMITE_QUATRO_HORA, 
			QT_DOSE_ATAQUE, 
			IE_TIPO_SOL,
			DS_CICLOS_APLICACAO,
			cd_protocolo_w,
			nr_seq_medicao_w,
			CASE WHEN ie_gerar_pend_quimio_w='S' THEN  coalesce(IE_LOCAL_ADM,'H')  ELSE coalesce(IE_LOCAL_ADM,'') END 
		from	PROTOCOLO_MEDIC_SOLUCAO
		where	CD_PROTOCOLO = CD_PROTOCOLO_w
		 AND	NR_SEQUENCIA = nr_seq_medicao_w
		and	(DS_DIAS_APLICACAO IS NOT NULL AND DS_DIAS_APLICACAO::text <> '');			
		
		INSERT INTO PACIENTE_PROTOCOLO_MEDIC(
			NR_SEQ_PACIENTE,
			NR_SEQ_MATERIAL,
			CD_MATERIAL,
			qt_dose,
			CD_UNIDADE_MEDIDA,
			DS_DIAS_APLICACAO,
			DT_ATUALIZACAO,
			NM_USUARIO,
			NR_AGRUPAMENTO,
			DS_RECOMENDACAO,
			IE_VIA_APLICACAO,
			NR_SEQ_SOLUCAO,
			QT_MIN_APLICACAO,
			IE_BOMBA_INFUSAO,
			CD_INTERVALO,
			QT_HORA_APLICACAO,
			QT_DIAS_UTIL,
			NR_SEQ_INTERNO,
			IE_SE_NECESSARIO,
			IE_APLIC_LENTA,
			IE_URGENCIA,            
			IE_APLIC_BOLUS,
			ie_pre_medicacao,
			IE_LOCAL_ADM)
		SELECT 	NR_SEQ_PAC_P, 
			B.NR_SEQ_MATERIAL + nr_seq_material_w, 
			B.CD_MATERIAL,
			B.QT_DOSE,
			B.CD_UNIDADE_MEDIDA,
			coalesce(B.DS_DIAS_APLICACAO, A.DS_DIAS_APLICACAO),
			clock_timestamp(),
			NM_USUARIO_P,
			B.NR_AGRUPAMENTO +nr_agrupamento_w,
			B.DS_RECOMENDACAO,
			B.IE_VIA_APLICACAO,
			B.NR_SEQ_SOLUCAO + nr_seq_solucao_w,
			B.QT_MINUTO_APLICACAO,
			B.IE_BOMBA_INFUSAO,
			B.CD_INTERVALO,
			B.QT_HORA_APLICACAO,
			B.QT_DIAS_UTIL,
			nextval('paciente_protocolo_medic_seq'),
			B.IE_SE_NECESSARIO,
			B.IE_APLIC_LENTA,         
			B.IE_URGENCIA,            
			B.IE_APLIC_BOLUS,
			b.ie_pre_medicacao,
			CASE WHEN ie_gerar_pend_quimio_w='S' THEN  coalesce(b.IE_LOCAL_ADM,'H')  ELSE coalesce(B.IE_LOCAL_ADM,'') END 
		FROM 	PROTOCOLO_MEDIC_MATERIAL B,
			PROTOCOLO_MEDIC_SOLUCAO A
		WHERE 	A.CD_PROTOCOLO = CD_PROTOCOLO_w
		  AND	A.NR_SEQUENCIA = nr_seq_medicao_w
		  AND 	A.CD_PROTOCOLO = B.CD_PROTOCOLO
		  AND 	A.NR_SEQUENCIA = B.NR_SEQUENCIA
		  AND 	B.NR_SEQ_SOLUCAO = A.NR_SEQ_SOLUCAO
		  and	(a.DS_DIAS_APLICACAO IS NOT NULL AND a.DS_DIAS_APLICACAO::text <> '')
		  AND	B.IE_AGRUPADOR IN (4);
		
		
		
	end if;
	end;

end loop;

if (ie_recalcula_dose_prot_w <> 'N') then
	CALL atualizar_dose_onc_protocolo(nr_seq_pac_p);
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE inserir_protocolo_adic_medic (nr_seq_pac_p bigint, ds_lista_protocolo_p text, nm_usuario_p text) FROM PUBLIC;

