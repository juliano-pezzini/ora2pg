-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_movimento_cpm ( nr_seq_lote_p bigint, ie_opcao_p text, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Gerar e desfazer o lote de CPM
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[  ]  Objetos do dicionário [ X ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
	ie_opcao_p:
		G - Gerar
		D - Desfazer
-------------------------------------------------------------------------------------------------------------------
Referências:
	OPS - Envio de Informações Cadastrais de Prestadores Médicos (CPM)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
ie_ptu_a400_w			varchar(255);
ie_prefixo_guia_medico_w	varchar(255);
ds_prefixo_w			varchar(255);
ie_envio_w			varchar(255)	:= 'S';
ie_possui_titulo_w		varchar(255);
ds_logradouro_w			varchar(100);
ds_municipio_w			varchar(100);
nm_prestador_w			varchar(60);
nm_adic_prest_w			varchar(60);
ds_email_w			varchar(40);
nm_adic_guia_medico_w		varchar(40);
nr_crm_w			varchar(20);
nr_cns_w			varchar(20);
nr_endereco_w			varchar(20);
ds_complemento_w		varchar(20);
cd_cpm_w			varchar(15);
ie_tipo_certif_w		varchar(15);
nr_telefone_w			varchar(14);
nr_cpf_w			varchar(11);
cd_pessoa_fisica_w		varchar(10);
ie_tipo_endereco_w		varchar(4);
uf_crm_w			medico.uf_crm%type;
sg_estado_w			compl_pessoa_fisica.sg_estado%type;
ie_sexo_w			varchar(1);
ie_titulo_amb_w			varchar(1);
ie_titulo_cnrm_w		varchar(1);
nr_seq_prestador_w		bigint;
nr_sequencia_w			bigint;
nr_seq_cpm_prest_w		bigint;
nr_seq_compl_pf_tel_adic_w	bigint;
nr_seq_titulacao_w		bigint;
nr_seq_tit_espec_w		bigint;
cd_especialidade_w		integer;
dt_cadastro_w			timestamp;
dt_nascimento_w			timestamp;
dt_referencia_w			timestamp;
dt_titulo_amb_w			timestamp;
dt_titulo_cnrm_w		timestamp;
dt_titulacao_w			timestamp;

C01 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.cd_pessoa_fisica,
		a.dt_cadastro,
		a.ie_tipo_endereco,
		a.nr_seq_compl_pf_tel_adic
	from	pls_prestador	a
	where	a.ie_situacao	= 'A'
	and	((ie_ptu_a400_w = 'S' and a.ie_ptu_a400	= 'S') or (ie_ptu_a400_w = 'N'))
	and	a.ie_tipo_relacao <> 'F'
	and	(a.cd_pessoa_fisica IS NOT NULL AND a.cd_pessoa_fisica::text <> '')
	and	a.cd_estabelecimento	= cd_estabelecimento_p
	and	trunc(dt_referencia_w,'dd') between trunc(coalesce(a.dt_cadastro,dt_referencia_w),'dd') and trunc(coalesce(a.dt_exclusao,dt_referencia_w),'dd')
	and	exists (SELECT	1
			from	medico	x
			where	x.cd_pessoa_fisica	= a.cd_pessoa_fisica)
	order by
		a.nr_sequencia;

C02 CURSOR FOR
	SELECT	a.nr_sequencia
	from	pls_cpm_prestador	a
	where	a.nr_seq_lote	= nr_seq_lote_p;

C03 CURSOR FOR
	SELECT	a.cd_especialidade,
		a.dt_titulo_amb,
		a.dt_titulo_cnrm,
		a.ie_titulo_amb,
		a.ie_titulo_cnrm
	from	pls_prestador_med_espec	a
	where	a.nr_seq_prestador	= nr_seq_prestador_w
	and	a.cd_pessoa_fisica	= cd_pessoa_fisica_w
	and	((ie_ptu_a400_w = 'S' and a.ie_publicacao = 'PE') or (ie_ptu_a400_w = 'N'))
	and	dt_referencia_w between trunc(coalesce(a.dt_inicio_vigencia, dt_referencia_w)) and fim_dia(coalesce(a.dt_fim_vigencia, dt_referencia_w));

C04 CURSOR FOR
	SELECT	/* + USE_CONCAT */
		substr(b.ds_endereco, 1, 100),
		substr(b.nr_endereco, 1, 20),
		substr(elimina_caractere_especial(b.ds_complemento), 1, 20),
		substr(obter_desc_municipio_ibge(b.cd_municipio_ibge), 1, 100),
		substr(b.sg_estado,1,2)
	from	compl_pessoa_fisica	b,
		pessoa_fisica		a
	where	a.cd_pessoa_fisica	= cd_pessoa_fisica_w
	and	b.cd_pessoa_fisica	= a.cd_pessoa_fisica
	and	b.ie_tipo_complemento	= 1
	and	ie_tipo_endereco_w	= 'PFR'
	and	coalesce(nr_seq_compl_pf_tel_adic_w::text, '') = ''
	
union all

	SELECT	substr(b.ds_endereco, 1, 100),
		substr(b.nr_endereco, 1, 20),
		substr(elimina_caractere_especial(b.ds_complemento), 1, 20),
		substr(obter_desc_municipio_ibge(b.cd_municipio_ibge), 1, 100),
		substr(b.sg_estado,1,2)
	from	compl_pf_tel_adic	b,
		pessoa_fisica		a
	where	a.cd_pessoa_fisica	= cd_pessoa_fisica_w
	and	b.cd_pessoa_fisica	= a.cd_pessoa_fisica
	and	ie_tipo_endereco_w	= 'PFR'
	and	(nr_seq_compl_pf_tel_adic_w IS NOT NULL AND nr_seq_compl_pf_tel_adic_w::text <> '')
	and	b.nr_sequencia		= nr_seq_compl_pf_tel_adic_w
	
union all

	select	substr(b.ds_endereco, 1, 100),
		substr(b.nr_endereco, 1, 20),
		substr(elimina_caractere_especial(b.ds_complemento), 1, 20),
		substr(obter_desc_municipio_ibge(b.cd_municipio_ibge), 1, 100),
		substr(b.sg_estado,1,2)
	from	compl_pessoa_fisica	b,
		pessoa_fisica		a
	where	a.cd_pessoa_fisica	= cd_pessoa_fisica_w
	and	b.cd_pessoa_fisica	= a.cd_pessoa_fisica
	and	b.ie_tipo_complemento	= 2
	and	ie_tipo_endereco_w	= 'PFC'
	and	coalesce(nr_seq_compl_pf_tel_adic_w::text, '') = ''
	
union all

	select	substr(b.ds_endereco, 1, 100),
		substr(b.nr_endereco, 1, 20),
		substr(elimina_caractere_especial(b.ds_complemento), 1, 20),
		substr(obter_desc_municipio_ibge(b.cd_municipio_ibge), 1, 100),
		substr(b.sg_estado,1,2)
	from	compl_pf_tel_adic b,
		pessoa_fisica a
	where	a.cd_pessoa_fisica	= cd_pessoa_fisica_w
	and	b.cd_pessoa_fisica	= a.cd_pessoa_fisica
	and	ie_tipo_endereco_w	= 'PFC'
	and	(nr_seq_compl_pf_tel_adic_w IS NOT NULL AND nr_seq_compl_pf_tel_adic_w::text <> '')
	and	b.nr_sequencia		= nr_seq_compl_pf_tel_adic_w;

C05 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.ie_tipo_certif,
		a.dt_titulacao,
		a.nr_seq_titulacao,
		'S' ie_possui_titulo
	from	medico_titulacao	a
	where	a.cd_pessoa_fisica	= cd_pessoa_fisica_w
	
union all

	SELECT	null,
		null,
		null,
		null,
		'N'
	
	where	not exists (select	1
				from	medico_titulacao	a
				where	a.cd_pessoa_fisica	= cd_pessoa_fisica_w);


BEGIN
if (ie_opcao_p = 'G') then
	select	max(a.dt_referencia),
		coalesce(max(a.ie_ptu_a400), 'N')
	into STRICT	dt_referencia_w,
		ie_ptu_a400_w
	from	pls_lote_cpm	a
	where	a.nr_sequencia	= nr_seq_lote_p;

	open C01;
	loop
	fetch C01 into
		nr_seq_prestador_w,
		cd_pessoa_fisica_w,
		dt_cadastro_w,
		ie_tipo_endereco_w,
		nr_seq_compl_pf_tel_adic_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		ie_envio_w := pls_obter_se_prest_envio(nr_seq_prestador_w, dt_referencia_w, ie_envio_w);

		if (ie_envio_w = 'S') then
			uf_crm_w	:= substr(obter_dados_medico(cd_pessoa_fisica_w, 'UFCRM'), 1, 2);
			nr_crm_w	:= substr(obter_dados_medico(cd_pessoa_fisica_w, 'CRM'), 1, 20);

			select	trim(both substr(max(a.nm_adic_guia_medico),1,40))
			into STRICT	nm_adic_guia_medico_w
			from	pls_prestador	a
			where	a.nr_sequencia	= nr_seq_prestador_w;

			if (nm_adic_guia_medico_w IS NOT NULL AND nm_adic_guia_medico_w::text <> '') then
				nm_adic_prest_w	:= substr(nm_adic_guia_medico_w, 1, 60);
			else
				nm_adic_prest_w	:= null;
			end if;

			select	a.nr_cpf,
				a.dt_nascimento,
				a.ie_sexo,
				substr(replace(replace(elimina_caractere_especial(elimina_acentuacao(coalesce(nm_adic_prest_w, a.nm_pessoa_fisica))), '(', ''), ')', ''), 1, 60),
				substr(a.nr_cartao_nac_sus, 1, 20)
			into STRICT	nr_cpf_w,
				dt_nascimento_w,
				ie_sexo_w,
				nm_prestador_w,
				nr_cns_w
			from	pessoa_fisica	a
			where	a.cd_pessoa_fisica	= cd_pessoa_fisica_w;

			nr_telefone_w	:= substr(replace(pls_obter_dados_prest_end(nr_seq_prestador_w, null, null, 'DDD')
						|| pls_obter_dados_prest_end(nr_seq_prestador_w, null, null, 'T'), ' ', ''), 1, 14);

			select	substr(max(cpta.ds_email), 1, 40)
			into STRICT	ds_email_w
			from	compl_pessoa_fisica	cpf,
				compl_pf_tel_adic	cpta
			where	cpf.cd_pessoa_fisica	= cd_pessoa_fisica_w
			and	cpf.cd_pessoa_fisica	= cpta.cd_pessoa_fisica
			and	cpf.nr_sequencia	= cpta.nr_seq_compl
			and	cpf.ie_tipo_complemento	= '30'
			and	cpta.ie_email_princ	= 'S'
			and	(cpta.ds_email IS NOT NULL AND cpta.ds_email::text <> '')
			and	coalesce(cpta.nr_telefone::text, '') = '';

			if (coalesce(ds_email_w::text, '') = '') then
				ds_email_w	:= substr(pls_obter_dados_prest_end(nr_seq_prestador_w, null, null, 'EM'), 1, 40);
			end if;

			select	nextval('pls_cpm_prestador_seq')
			into STRICT	nr_seq_cpm_prest_w
			;

			insert into pls_cpm_prestador(nr_sequencia,
				dt_atualizacao,
				dt_atualizacao_nrec,
				nm_usuario,
				nm_usuario_nrec,
				ds_email,
				dt_nascimento,
				dt_vinculo_operadora,
				ie_sexo,
				nm_prestador,
				nr_cns,
				nr_cpf,
				nr_crm,
				nr_seq_lote,
				nr_seq_prestador,
				nr_telefone,
				uf_crm)
			values (nr_seq_cpm_prest_w,
				clock_timestamp(),
				clock_timestamp(),
				nm_usuario_p,
				nm_usuario_p,
				ds_email_w,
				dt_nascimento_w,
				dt_cadastro_w,
				ie_sexo_w,
				nm_prestador_w,
				nr_cns_w,
				nr_cpf_w,
				nr_crm_w,
				nr_seq_lote_p,
				nr_seq_prestador_w,
				nr_telefone_w,
				uf_crm_w);

			open C03;
			loop
			fetch C03 into
				cd_especialidade_w,
				dt_titulo_amb_w,
				dt_titulo_cnrm_w,
				ie_titulo_amb_w,
				ie_titulo_cnrm_w;
			EXIT WHEN NOT FOUND; /* apply on C03 */
				begin
				select	max(a.cd_cpm)
				into STRICT	cd_cpm_w
				from	pls_espec_medica_cpm	a
				where	a.cd_especialidade	= cd_especialidade_w
				and	dt_referencia_w between trunc(coalesce(a.dt_inicio_vigencia, dt_referencia_w)) and fim_dia(coalesce(a.dt_fim_vigencia, dt_referencia_w));

				insert into pls_cpm_prest_espec(nr_sequencia,
					dt_atualizacao,
					dt_atualizacao_nrec,
					nm_usuario,
					nm_usuario_nrec,
					cd_cpm_espec,
					cd_especialidade,
					nr_seq_cpm_prest)
				values (nextval('pls_cpm_prest_espec_seq'),
					clock_timestamp(),
					clock_timestamp(),
					nm_usuario_p,
					nm_usuario_p,
					cd_cpm_w,
					cd_especialidade_w,
					nr_seq_cpm_prest_w);
				end;
			end loop;
			close C03;

			open C05;
			loop
			fetch C05 into
				nr_seq_titulacao_w,
				ie_tipo_certif_w,
				dt_titulacao_w,
				nr_seq_tit_espec_w,
				ie_possui_titulo_w;
			EXIT WHEN NOT FOUND; /* apply on C05 */
				begin
				if (ie_possui_titulo_w = 'S') then
					select	max(a.cd_cpm)
					into STRICT	cd_cpm_w
					from	pf_tit_espec_cpm	a
					where	a.nr_seq_titulacao	= nr_seq_tit_espec_w
					and	dt_referencia_w between trunc(coalesce(a.dt_inicio_vigencia, dt_referencia_w)) and fim_dia(coalesce(a.dt_fim_vigencia, dt_referencia_w));

					if (cd_cpm_w IS NOT NULL AND cd_cpm_w::text <> '') then
						insert into pls_cpm_prest_tit(nr_sequencia,
							dt_atualizacao,
							dt_atualizacao_nrec,
							nm_usuario,
							nm_usuario_nrec,
							cd_cpm_espec,
							cd_especialidade,
							dt_titulo_amb,
							dt_titulo_cnrm,
							ie_titulo_amb,
							ie_titulo_cnrm,
							nr_seq_cpm_prest)
						values (nextval('pls_cpm_prest_tit_seq'),
							clock_timestamp(),
							clock_timestamp(),
							nm_usuario_p,
							nm_usuario_p,
							cd_cpm_w,
							null,
							CASE WHEN ie_tipo_certif_w='CON' THEN  dt_titulacao_w  ELSE null END ,
							CASE WHEN ie_tipo_certif_w='RES' THEN  dt_titulacao_w  ELSE null END ,
							CASE WHEN ie_tipo_certif_w='CON' THEN  1  ELSE 0 END ,
							CASE WHEN ie_tipo_certif_w='RES' THEN  1  ELSE 0 END ,
							nr_seq_cpm_prest_w);
					end if;
				else
					insert into pls_cpm_prest_tit(nr_sequencia,
						dt_atualizacao,
						dt_atualizacao_nrec,
						nm_usuario,
						nm_usuario_nrec,
						cd_cpm_espec,
						cd_especialidade,
						dt_titulo_amb,
						dt_titulo_cnrm,
						ie_titulo_amb,
						ie_titulo_cnrm,
						nr_seq_cpm_prest)
					values (nextval('pls_cpm_prest_tit_seq'),
						clock_timestamp(),
						clock_timestamp(),
						nm_usuario_p,
						nm_usuario_p,
						-2,
						null,
						null,
						null,
						0,
						0,
						nr_seq_cpm_prest_w);
				end if;
				end;
			end loop;
			close C05;

			open C04;
			loop
			fetch C04 into
				ds_logradouro_w,
				nr_endereco_w,
				ds_complemento_w,
				ds_municipio_w,
				sg_estado_w;
			EXIT WHEN NOT FOUND; /* apply on C04 */
				begin
				ds_logradouro_w	:= substr(elimina_acentuacao(ds_logradouro_w), 1, 100);

				insert into pls_cpm_prest_end(nr_sequencia,
					dt_atualizacao,
					dt_atualizacao_nrec,
					nm_usuario,
					nm_usuario_nrec,
					ds_endereco,
					nr_endereco,
					ds_complemento,
					ds_municipio,
					uf_endereco,
					nr_seq_cpm_prest)
				values (nextval('pls_cpm_prest_end_seq'),
					clock_timestamp(),
					clock_timestamp(),
					nm_usuario_p,
					nm_usuario_p,
					ds_logradouro_w,
					nr_endereco_w,
					ds_complemento_w,
					ds_municipio_w,
					sg_estado_w,
					nr_seq_cpm_prest_w);
				end;
			end loop;
			close C04;
		end if;
		end;
	end loop;
	close C01;

	update	pls_lote_cpm
	set	dt_geracao	= clock_timestamp()
	where	nr_sequencia	= nr_seq_lote_p;
elsif (ie_opcao_p = 'D') then
	open C02;
	loop
	fetch C02 into
		nr_sequencia_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		delete	from pls_cpm_prest_espec
		where	nr_seq_cpm_prest	= nr_sequencia_w;

		delete	from pls_cpm_prest_end
		where	nr_seq_cpm_prest	= nr_sequencia_w;

		delete	from pls_cpm_prest_tit
		where	nr_seq_cpm_prest	= nr_sequencia_w;

		delete	from pls_cpm_prestador
		where	nr_sequencia	= nr_sequencia_w;
		end;
	end loop;
	close C02;

	update	pls_lote_cpm
	set	dt_geracao	 = NULL
	where	nr_sequencia	= nr_seq_lote_p;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_movimento_cpm ( nr_seq_lote_p bigint, ie_opcao_p text, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

