-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_alterar_dt_fechamento_cta ( nr_seq_conta_p pls_conta.nr_sequencia%type, dt_fechamento_p pls_conta.dt_fechamento_conta%type, nm_usuario_p usuario.nm_usuario%type, ds_erro_p INOUT text) AS $body$
DECLARE


dt_fechamento_conta_w		pls_conta.dt_fechamento_conta%type;
qt_lote_monitor_w		integer;
tb_nr_sequencia_w		pls_util_cta_pck.t_number_table;
ds_log_call_w			varchar(1500);
ds_parecer_w			varchar(1500);
nr_seq_protocolo_w		pls_protocolo_conta.nr_sequencia%type;
qt_protocolo_alt_w		integer;
qt_protocolo_tot_w		integer;
dt_atendimento_referencia_w	pls_conta.dt_atendimento_referencia%type;

C01 CURSOR(	nr_seq_conta_pc		pls_conta.nr_sequencia%type) FOR
	SELECT	nr_sequencia
	from	pls_monitor_tiss_alt
	where	nr_seq_conta = nr_seq_conta_pc
	and	ie_tipo_evento = 'FC';


BEGIN

begin
	if (nr_seq_conta_p IS NOT NULL AND nr_seq_conta_p::text <> '') then

		select	dt_fechamento_conta,
			nr_seq_protocolo,
			dt_atendimento_referencia
		into STRICT	dt_fechamento_conta_w,
			nr_seq_protocolo_w,
			dt_atendimento_referencia_w
		from	pls_conta
		where	nr_sequencia = nr_seq_conta_p;

		if (trunc(dt_atendimento_referencia_w)	> trunc(dt_fechamento_p)) then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(1032593);
		end if;

		select	count(1)
		into STRICT	qt_lote_monitor_w
		from	pls_monitor_tiss_lote
		where	dt_mes_competencia between trunc(dt_fechamento_conta_w, 'mm') and fim_mes(dt_fechamento_conta_w)
		and	ie_status <> 'U';

		if (qt_lote_monitor_w > 0) then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(878924);
		end if;

		select	count(1)
		into STRICT	qt_lote_monitor_w
		from	pls_monitor_tiss_lote
		where	dt_mes_competencia between trunc(dt_fechamento_p, 'mm') and fim_mes(dt_fechamento_p)
		and	ie_status <> 'U';

		if (qt_lote_monitor_w > 0) then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(878925);
		end if;

		select	count(1)
		into STRICT	qt_lote_monitor_w
		from	pls_monitor_tiss_alt
		where	nr_seq_conta = nr_seq_conta_p
		and	ie_status not in ('D', 'P');

		if (qt_lote_monitor_w > 0) then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(878926);
		end if;

		ds_log_call_w := substr(	' Função ativa : '|| obter_funcao_ativa || chr(13) ||chr(10)||
						' CallStack: '|| chr(13) || chr(10)|| dbms_utility.format_call_stack,1,1500);

		update	pls_conta
		set	dt_fechamento_conta 	= dt_fechamento_p,
			nm_usuario		= nm_usuario_p,
			dt_atualizacao		= clock_timestamp()
		where	nr_sequencia 		= nr_seq_conta_p;

		open C01(nr_seq_conta_p);
		loop
			fetch C01 bulk collect into tb_nr_sequencia_w
			limit pls_util_pck.qt_registro_transacao_w;

			exit when tb_nr_sequencia_w.count = 0;

			forall i in tb_nr_sequencia_w.first .. tb_nr_sequencia_w.last
				update	pls_monitor_tiss_alt
				set	dt_evento 	= dt_fechamento_p,
					nm_usuario	= nm_usuario_p,
					dt_atualizacao	= clock_timestamp(),
					ds_call_stack	= ds_log_call_w
				where	nr_sequencia 	= tb_nr_sequencia_w(i);
			commit;
		end loop;
		close C01;

		ds_parecer_w := 'Alterado a data de fechamento da conta. Data anterior: ' || dt_fechamento_conta_w || '. Data nova: ' || dt_fechamento_p;


		insert	into	pls_conta_log(	nr_sequencia, nm_usuario, dt_atualizacao,
				nm_usuario_nrec, dt_atualizacao_nrec, nm_usuario_alteracao,
				dt_alteracao, nr_seq_conta, ds_alteracao)
		values (	nextval('pls_conta_log_seq'), nm_usuario_p, clock_timestamp(),
				nm_usuario_p,clock_timestamp(),nm_usuario_p,
				clock_timestamp(),nr_seq_conta_p, ds_parecer_w);

		commit;

		select	count(1)
		into STRICT	qt_protocolo_alt_w
		from	pls_conta
		where	nr_seq_protocolo	= nr_seq_protocolo_w
		and	trunc(dt_fechamento_conta) = trunc(dt_fechamento_p);

		select	count(1)
		into STRICT	qt_protocolo_tot_w
		from	pls_conta
		where	nr_seq_protocolo	= nr_seq_protocolo_w
		and	trunc(dt_fechamento_conta) = trunc(dt_fechamento_p);

		if (qt_protocolo_alt_w	= qt_protocolo_tot_w) then
			update	pls_protocolo_conta
			set	dt_fechamento_contas = dt_fechamento_p
			where	nr_sequencia	= nr_seq_protocolo_w;
		end if;

	end if;
exception
when others then
	ds_erro_p := substr(sqlerrm, 0, 4000);
end;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_alterar_dt_fechamento_cta ( nr_seq_conta_p pls_conta.nr_sequencia%type, dt_fechamento_p pls_conta.dt_fechamento_conta%type, nm_usuario_p usuario.nm_usuario%type, ds_erro_p INOUT text) FROM PUBLIC;

