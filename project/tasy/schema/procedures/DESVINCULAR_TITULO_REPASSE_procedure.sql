-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE desvincular_titulo_repasse (nr_repasse_terceiro_p bigint, nm_usuario_p text, ie_commit_p text) AS $body$
DECLARE



qt_titulo_w			bigint;
qt_titulo_escritural_w		bigint;
qt_cheque_cancelado_w		bigint;
cd_estabelecimento_w		bigint;
nr_titulo_w			bigint;
nr_escritural_w			bigint;
ie_desvincular_w		varchar(255);
ie_delete_w			varchar(1);
ie_permite_desv_tit_baixa_w	varchar(1);

nr_titulo_repasse_w		titulo_pagar.nr_titulo%type;
qt_movto_trans_financ_w		bigint;
vl_movto_trans_financ_w		double precision;
dt_transacao_w			timestamp;
qt_titulo_pagar_w		integer;

vl_baixa_w			titulo_pagar_baixa.vl_baixa%type;
qt_adiant_w			bigint;

c01 CURSOR FOR
SELECT	a.nr_titulo
from	titulo_pagar a
where	a.nr_repasse_terceiro	= nr_repasse_terceiro_p;


BEGIN

select	max(cd_estabelecimento)
into STRICT	cd_estabelecimento_w
from	repasse_terceiro
where	nr_repasse_terceiro	= nr_repasse_terceiro_p;

ie_desvincular_w := obter_param_usuario(89, 58, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_desvincular_w);
ie_delete_w := obter_param_usuario(89, 123, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_delete_w);
begin
ie_permite_desv_tit_baixa_w	:= substr(coalesce(obter_valor_param_usuario(89, 102, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w),'N'),1,1);
exception when others then
	ie_permite_desv_tit_baixa_w	:= 'N';
end;

select	max(nr_titulo)
into STRICT	nr_titulo_w
from	titulo_pagar
where	nr_repasse_terceiro		= nr_repasse_terceiro_p
and	coalesce(nr_lote_contabil, 0)	<> 0;

if (nr_titulo_w IS NOT NULL AND nr_titulo_w::text <> '') and (ie_desvincular_w = 'N') then
	--O título #@NR_TITULO#@ já está contabilizado!
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(196521,'NR_TITULO='||nr_titulo_w);
end if;

select	count(*)
into STRICT	qt_titulo_w
from	Titulo_pagar a
where	a.nr_repasse_terceiro	= nr_repasse_terceiro_p
and	(dt_liquidacao IS NOT NULL AND dt_liquidacao::text <> '')
and	a.ie_situacao <> 'C';
if (qt_titulo_w > 0) then
	--Existem titulos baixados neste repasse!
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(196520);
end if;

select	count(*)
into STRICT	qt_titulo_w
from	Titulo_pagar a
where	a.nr_repasse_terceiro	= nr_repasse_terceiro_p
and	vl_titulo <> vl_saldo_titulo
and	a.ie_situacao <> 'C';
if (qt_titulo_w > 0) then
	--Existem titulos com saldo diferente do titulo!
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(196519);
end if;

select	count(*)
into STRICT	qt_titulo_w
from	Titulo_pagar_bordero_v a
where	a.nr_repasse_terceiro	= nr_repasse_terceiro_p
and	(nr_bordero IS NOT NULL AND nr_bordero::text <> '');
if (qt_titulo_w > 0) then
	--Existem títulos vinculados a um borderô neste repasse!
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(196518);
end if;

select	sum(coalesce(b.vl_baixa,0))
into STRICT	qt_titulo_w
from	titulo_pagar_baixa b,
		titulo_pagar a
where	a.nr_titulo				= b.nr_titulo
and		a.nr_repasse_terceiro	= nr_repasse_terceiro_p;

if (ie_permite_desv_tit_baixa_w	= 'N') and (qt_titulo_w			<> 0) then

	CALL wheb_mensagem_pck.exibir_mensagem_abort(240780);

end if;


select	count(*)
into STRICT	qt_titulo_w
from	cheque b,
	cheque_bordero_titulo a
where	a.nr_seq_cheque		= b.nr_sequencia
and	coalesce(b.dt_cancelamento::text, '') = ''
and	a.nr_titulo in (SELECT	x.nr_titulo
	from	titulo_pagar x
	where	x.nr_repasse_terceiro	= nr_repasse_terceiro_p);

if (qt_titulo_w > 0) then
	--Existem cheques vinculados aos títulos deste repasse!
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(196517);
end if;

if (ie_delete_w = 'N') then
	select	max(c.nr_sequencia)
	into STRICT	nr_escritural_w
	from	titulo_pagar a,
		titulo_pagar_escrit b,
		banco_escritural c
	where	a.nr_titulo   = b.nr_titulo
	and	b.nr_seq_escrit = c.nr_sequencia
	and	a.nr_repasse_terceiro = nr_repasse_terceiro_p;

	if (coalesce(nr_escritural_w,0) > 0) then
		--Existem títulos vinculados ao escritural #@NR_ESCRITURAL#@!
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(196516,'NR_ESCRITURAL='||nr_escritural_w);
	end if;
end if;

select	count(*)
into STRICT	qt_cheque_cancelado_w
from	cheque b,
	cheque_bordero_titulo a
where	a.nr_seq_cheque		= b.nr_sequencia
and	(b.dt_cancelamento IS NOT NULL AND b.dt_cancelamento::text <> '')
and	a.nr_titulo in (SELECT	x.nr_titulo
	from	titulo_pagar x
	where	x.nr_repasse_terceiro	= nr_repasse_terceiro_p);

update	titulo_pagar
set	nr_seq_tributo		 = NULL
where	nr_repasse_terceiro	= nr_repasse_terceiro_p;

delete	from titulo_pagar_imposto
where	nr_titulo in (SELECT	nr_titulo
	from	titulo_pagar
	where	nr_repasse_terceiro	= nr_repasse_terceiro_p);

update	repasse_terceiro_venc
set	nr_titulo		 = NULL,
	dt_atualizacao		= clock_timestamp(),
	nm_usuario		= nm_usuario_p
where	nr_repasse_terceiro	= nr_repasse_terceiro_p;

open	c01;
loop
fetch	c01 into
	nr_titulo_repasse_w;
EXIT WHEN NOT FOUND; /* apply on c01 */

	--Verifica se o título do repasse possui as movimentações necessárias para desvincular o título
	select	count(*) qt_movto_trans_financ,
		coalesce(sum(a.vl_transacao),0) vl_movto_trans_financ,
		max(a.dt_transacao)
	into STRICT	qt_movto_trans_financ_w,
		vl_movto_trans_financ_w,
		dt_transacao_w
	from	movto_trans_financ a
	where	a.nr_seq_titulo_pagar	= nr_titulo_repasse_w;

	--Verifica se as baixas (Positivas e negativas) possuem as movimentações necessárias para devincular o título
	--Esta opção foi criada, pois no pagamento escritural pode ocorrer de o estorno ser do lote
	--Desta forma o sistema só vincula os registros da TITULO_PAGAR_BAIXA a MOVTO_TRANS_FINANC
	--E não a TITULO_PAGAR com a MOVTO_TRANS_FINANC.
	select	coalesce(sum(a.vl_baixa),0)
	into STRICT	vl_baixa_w
	from	titulo_pagar_baixa a
	where	a.nr_titulo = nr_titulo_repasse_w
	and	exists (	SELECT	1
			from	movto_trans_financ x
			where	x.nr_sequencia = a.nr_seq_movto_trans_fin);

	select	count(1)
	into STRICT	qt_adiant_w
	from	titulo_pagar_adiant a
	where	a.nr_titulo = nr_titulo_repasse_w;

	if	((qt_cheque_cancelado_w > 0) and (nr_titulo_w IS NOT NULL AND nr_titulo_w::text <> '') and (nr_titulo_w = nr_titulo_repasse_w)) or
		((qt_movto_trans_financ_w > 0) and ((coalesce(vl_movto_trans_financ_w,0) = 0) or (coalesce(vl_baixa_w,0) = 0))) or (qt_adiant_w > 0) then

		CALL cancelar_titulo_pagar(nr_titulo_repasse_w,nm_usuario_p,clock_timestamp()); /*lhalves OS299701 em 23/03/2011 - Cancelar o título se existe cheque cancelado para o título*/
	elsif (qt_movto_trans_financ_w	> 0) then

		/* O título nr_titulo_w não pode ser excluído pois já gerou uma movimentação bancária no dia dt_transacao_w! */

		CALL Wheb_mensagem_pck.exibir_mensagem_abort(282123,	'NR_TITULO_W='||nr_titulo_repasse_w||
								';DT_TRANSACAO_W='||dt_transacao_w);

	else
		/*OS 936822 -------------------------------*/

		/*verifica se o titulo a ser excluido na tabela titulo a pagar tem regsitro na tabela  lote_encontro_contas_hist*/

		/* a tabela lote_encontro_contas_hist se econtra na função encontro de contas / Histórico alteração*/

		select count(*)
		into STRICT qt_titulo_pagar_w
		from lote_encontro_contas_hist
		where NR_TITULO_PAGAR = nr_titulo_repasse_w;


		/*caso tenha registro é preciso excluir na tabela lote_encontro_contas_hist, pois existe um relacionamento de chave estrangeira entre as tabelas lote_encontro_contas_hist e titlo_pagar*/

		if (qt_titulo_pagar_w > 0)then
			delete	from lote_encontro_contas_hist
			where	NR_TITULO_PAGAR	= nr_titulo_repasse_w;
		end if;
		/*OS 936822 -------------------------------*/

		delete	from titulo_pagar
		where	nr_titulo	= nr_titulo_repasse_w;

	end if;

end	loop;
close	c01;

if (ie_commit_p <> 'N') then
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE desvincular_titulo_repasse (nr_repasse_terceiro_p bigint, nm_usuario_p text, ie_commit_p text) FROM PUBLIC;

