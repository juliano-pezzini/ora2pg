-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE can_reaproveitamento_op ( nr_ordem_origem_p bigint, nr_ordem_destino_p bigint, cd_pessoa_fisica_p text, nm_usuario_p text) AS $body$
DECLARE


nr_sequencia_w		bigint;
dt_inicio_preparo_w	timestamp;
nm_usuario_inic_prep_w	varchar(15);
nr_seq_etapa_prod_w	bigint;
nr_seq_ordem_w		bigint;
cd_material_w		integer;
cd_unidade_medida_w	varchar(30);
ie_medic_diluente_w	varchar(01);
nr_seq_lote_fornec_w	bigint;
qt_dose_real_w		double precision;
qt_perda_w		double precision;
qt_dose_prescr_w	double precision;
cd_unidade_medida_real_w	varchar(30);
cd_motivo_baixa_w	varchar(1);
nr_seq_item_prescr_w	bigint;
nr_prescricao_w		bigint;

C01 CURSOR FOR
	SELECT	cd_material,
		cd_unidade_medida,
		ie_medic_diluente,
		nr_seq_lote_fornec,
		qt_dose_real,
		qt_perda,
		cd_unidade_medida_real,
		cd_motivo_baixa,
		nr_seq_item_prescr
	from	can_ordem_prod_mat
	where	nr_seq_ordem	= nr_ordem_origem_p;


BEGIN

select	max(dt_inicio_preparo),
	max(nm_usuario_inic_prep),
	max(nr_sequencia)
into STRICT	dt_inicio_preparo_w,
	nm_usuario_inic_prep_w,
	nr_seq_ordem_w
from	can_ordem_prod
where	nr_sequencia	= nr_ordem_origem_p;

select	max(nr_seq_etapa_prod),
	max(nr_sequencia)
into STRICT	nr_seq_etapa_prod_w,
	nr_seq_ordem_w
from	can_ordem_prod
where	nr_sequencia	= nr_ordem_destino_p;

if (coalesce(nr_seq_etapa_prod_w::text, '') = '') then
	CALL wheb_mensagem_pck.Exibir_Mensagem_Abort(206944);
end if;

update	can_ordem_prod
set	dt_inicio_preparo	= dt_inicio_preparo_w,
	nm_usuario_inic_prep	= nm_usuario_inic_prep_w
where	nr_sequencia		= nr_ordem_destino_p;


select	nextval('can_reaproveitamento_seq')
into STRICT	nr_sequencia_w
;

if (coalesce(nr_ordem_origem_p,0) > 0) then
	insert into can_reaproveitamento(
		nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_seq_ordem_origem,
		nr_seq_ordem_destino,
		cd_pessoa_fisica)
	values (	nr_sequencia_w,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		nr_ordem_origem_p,
		nr_ordem_destino_p,
		cd_pessoa_fisica_p);
	commit;
end if;

open C01;
loop
fetch C01 into
	cd_material_w,
	cd_unidade_medida_w,
	ie_medic_diluente_w,
	nr_seq_lote_fornec_w,
	qt_dose_real_w,
	qt_perda_w,
	cd_unidade_medida_real_w,
	cd_motivo_baixa_w,
	nr_seq_item_prescr_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	select 	nextval('can_ordem_prod_mat_seq')
	into STRICT 	nr_sequencia_w
	;

	select 	max(qt_dose),
	 	max(cd_unidade_medida),
	 	--max(nr_seq_prescricao),
		max(nr_prescricao),
		max(nr_sequencia)
	into STRICT	qt_dose_prescr_w,
		cd_unidade_medida_w,
		--nr_seq_item_prescr_w,
		nr_prescricao_w,
		nr_seq_item_prescr_w
	from	can_ordem_item_prescr
	where 	nr_seq_ordem = nr_ordem_destino_p
	and 	obter_ficha_tecnica_medic(cd_material) = obter_ficha_tecnica_medic(cd_material_w);

	insert into can_ordem_prod_mat(
		nr_sequencia,
		nr_seq_ordem,
		dt_atualizacao,
		nm_usuario,
		cd_material,
		qt_dose,
		cd_unidade_medida,
		ie_medic_diluente,
		nr_seq_lote_fornec,
		qt_dose_real,
		qt_perda,
		cd_unidade_medida_real,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		cd_motivo_baixa,
		nr_seq_item_prescr,
		nr_seq_ordem_origem,
		ie_reaproveitado)
	values (nr_sequencia_w,
		nr_ordem_destino_p,
		clock_timestamp(),
		nm_usuario_p,
		cd_material_w,
		coalesce(qt_dose_prescr_w,1),
		coalesce(cd_unidade_medida_w,'un'),
		ie_medic_diluente_w,
		nr_seq_lote_fornec_w,
		qt_dose_real_w,
		qt_perda_w,
		cd_unidade_medida_real_w,
		clock_timestamp(),
		nm_usuario_p,
		cd_motivo_baixa_w,
		nr_seq_item_prescr_w,
		nr_ordem_origem_p,
		'S');

	commit;

	end;
end loop;
close C01;

commit;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE can_reaproveitamento_op ( nr_ordem_origem_p bigint, nr_ordem_destino_p bigint, cd_pessoa_fisica_p text, nm_usuario_p text) FROM PUBLIC;

