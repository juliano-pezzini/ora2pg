-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_excluir_protocolo_lote ( nr_seq_protocolo_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE


nr_seq_conta_w      bigint;
nr_seq_conta_mat_w    bigint;
nr_seq_conta_proc_w    bigint;
qt_mensalidade_w    integer;
qt_prot_contab_w    integer;
qt_conta_autor_w    integer;
qt_atu_conta_item    integer;
qt_conta_proc_plant    integer;
qt_diagnostico_conta    integer;
qt_monitor_tiss_cta_val    integer;
qt_recalc_copartic_conta    integer;
ie_mes_fechado_w    varchar(5);
ie_situacao_w      varchar(3);
nr_seq_mensalidade_w    bigint;
nr_titulo_w      bigint;
nr_seq_item_analise_w    bigint; --Glosas e ocorrências na análise
qt_analise_conta_item_w    bigint;
nr_seq_analise_w    bigint;
nr_seq_aud_conta_grupo_w  bigint;
cd_guia_w      varchar(20);
nr_seq_segurado_w    bigint;
nr_seq_lote_apres_autom_w  pls_log_apresent_autom.nr_seq_lote_apresentacao%type;
ds_motivo_w      pls_log_apresent_autom.ds_motivo%type;
nr_seq_analise_pos_estab_w  bigint;

c01 CURSOR FOR
  SELECT  nr_sequencia
  from  pls_conta
  where   nr_seq_protocolo = nr_seq_protocolo_p;

c02 CURSOR FOR
  SELECT a.nr_sequencia
  from   pls_conta_proc a
  where  a.nr_seq_conta = nr_seq_conta_w;

c03 CURSOR FOR
  SELECT a.nr_sequencia
  from   pls_conta_mat a
  where  a.nr_seq_conta = nr_seq_conta_w;

C05 CURSOR FOR
  SELECT  b.nr_titulo
  from  pls_protocolo_conta  a,
    titulo_pagar    b
  where  a.nr_sequencia    = b.nr_seq_reembolso
  and  a.nr_sequencia     = nr_seq_protocolo_p;

C06 CURSOR FOR
  SELECT  nr_sequencia
  from  pls_analise_conta_item
  where  nr_seq_conta = nr_seq_conta_w;

C07 CURSOR FOR
  SELECT  nr_sequencia
  from  pls_auditoria_conta_grupo
  where  nr_seq_analise   = nr_seq_analise_w;


BEGIN

select  count(1)
into STRICT  qt_mensalidade_w
from  pls_mensalidade a,
  pls_mensalidade_segurado b,
  pls_mensalidade_seg_item c
where  a.nr_sequencia  = b.nr_seq_mensalidade
and  b.nr_sequencia  = c.nr_seq_mensalidade_seg
and  c.nr_seq_conta in (  SELECT  nr_sequencia
        from  pls_conta
        where   nr_seq_protocolo = nr_seq_protocolo_p)
and  coalesce(a.ie_cancelamento::text, '') = '';

if (qt_mensalidade_w > 0 ) then
  --Se alguma conta presente no protocolo estiver em mensalidade, então deverá abortar a exclusão do mesmo.

  --wheb_mensagem_pck.exibir_mensagem_abort('Já existe mensalidade gerada para o protocolo '||nr_seq_protocolo_p||'  Nao é possível excluir o mesmo.');
  CALL wheb_mensagem_pck.exibir_mensagem_abort(739804, 'NR_SEQ_PROTOCOLO=' || nr_seq_protocolo_p);
end if;


select  count(1)
into STRICT  qt_prot_contab_w
from  pls_protocolo_conta
where  nr_sequencia  = nr_seq_protocolo_p
and  coalesce(nr_lote_contabil,0) <> 0;

if (qt_prot_contab_w > 0) then
  --'O protocolo não pode ser excluído pois foi contabilizado.#@#@');
  CALL wheb_mensagem_pck.exibir_mensagem_abort(196061);
end if;

select  pls_obter_se_mes_fechado(dt_mes_competencia,'T', cd_estabelecimento_p),
  ie_situacao
into STRICT  ie_mes_fechado_w,
  ie_situacao_w
from  pls_protocolo_conta
where  nr_sequencia  = nr_seq_protocolo_p;

if (ie_mes_fechado_w = 'S') and (ie_situacao_w in ('D','T')) then
  --'O mês de competência ou contabilidade do mês está fechado. Verifique!#@#@');
  CALL wheb_mensagem_pck.exibir_mensagem_abort(196062);
end if;

select  count(1)
into STRICT  qt_conta_autor_w
from  pls_conta_autor
where  nr_seq_conta in (  SELECT  nr_sequencia
        from  pls_conta
        where   nr_seq_protocolo = nr_seq_protocolo_p);

if (qt_conta_autor_w > 0 ) then
  CALL wheb_mensagem_pck.exibir_mensagem_abort(1069985);
end if;

select  count(1)
into STRICT  qt_atu_conta_item
from  pls_atu_conta_item
where  nr_seq_protocolo = nr_seq_protocolo_p;

if (qt_atu_conta_item > 0 ) then
  CALL wheb_mensagem_pck.exibir_mensagem_abort(1069986);
end if;

select  count(1)
into STRICT  qt_conta_proc_plant
from  pls_conta_proc a,
      pls_conta b,
      pls_conta_proc_plant c
where  a.nr_seq_conta = b.nr_sequencia
and  c.nr_seq_conta_proc = a.nr_sequencia
and  b.nr_seq_protocolo = nr_seq_protocolo_p;

if (qt_conta_proc_plant > 0 ) then
  CALL wheb_mensagem_pck.exibir_mensagem_abort(1069988);
end if;

select  count(1)
into STRICT  qt_diagnostico_conta
from  w_pls_diagnostico_conta
where  nr_seq_conta in (  SELECT  nr_sequencia
        from  pls_conta
        where  nr_seq_protocolo = nr_seq_protocolo_p);	
	
if (qt_diagnostico_conta > 0 ) then
  CALL wheb_mensagem_pck.exibir_mensagem_abort(1070509);
end if;

select  count(1)
into STRICT  qt_monitor_tiss_cta_val
from  pls_monitor_tiss_cta_val
where  nr_seq_conta in (  SELECT  nr_sequencia
        from  pls_conta
        where  nr_seq_protocolo = nr_seq_protocolo_p);
	
if (qt_monitor_tiss_cta_val > 0 ) then
  CALL wheb_mensagem_pck.exibir_mensagem_abort(1070512);
end if;

select  count(1)
into STRICT  qt_recalc_copartic_conta
from  pls_recalc_copartic_conta
where  nr_seq_conta in (  SELECT  nr_sequencia
        from  pls_conta
        where  nr_seq_protocolo = nr_seq_protocolo_p);
	
if (qt_recalc_copartic_conta > 0 ) then
  CALL wheb_mensagem_pck.exibir_mensagem_abort(1070513);
end if;

select  max(nr_seq_lote_apres_autom)
into STRICT  nr_seq_lote_apres_autom_w
from  pls_protocolo_conta
where  nr_sequencia = nr_seq_protocolo_p;

update  pls_apres_automatica_guia
set  nr_seq_conta   = NULL
where  nr_seq_conta in (SELECT  nr_sequencia
      from  pls_conta
      where  nr_seq_protocolo = nr_seq_protocolo_p);
CALL pls_excluir_protocolo_imp(  nr_seq_protocolo_p,nm_usuario_p  ,cd_estabelecimento_p  );
open c01;
loop
fetch c01 into
  nr_seq_conta_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
  begin
  cd_guia_w := '';
  nr_seq_segurado_w := 0;
  select   coalesce(cd_guia,''),
    coalesce(nr_seq_segurado,0)
  into STRICT  cd_guia_w,
    nr_seq_segurado_w
  from   pls_conta
  where  nr_sequencia = nr_seq_conta_w;

  update  pls_guia_plano
  set  ie_pagamento_automatico = 'PA',
    ie_status = '1'
  where  cd_guia    = cd_guia_w
  and  nr_seq_segurado  = nr_seq_segurado_w;

  select  count(1)
  into STRICT  qt_mensalidade_w
  from  pls_mensalidade_seg_item
  where  nr_seq_conta  = nr_seq_conta_w;

  open C06;
  loop
  fetch C06 into
    nr_seq_item_analise_w;
  EXIT WHEN NOT FOUND; /* apply on C06 */
    begin

    delete  FROM pls_analise_parecer_item
    where  nr_seq_item  = nr_seq_item_analise_w;

    delete   FROM pls_analise_conta_item
    where  nr_sequencia   = nr_seq_item_analise_w;

    end;
  end loop;
  close C06;

  delete  FROM w_pls_resumo_conta
  where  nr_seq_conta = nr_seq_conta_w;

  select  max(nr_seq_analise)
  into STRICT  nr_seq_analise_w
  from  pls_conta
  where  nr_sequencia = nr_seq_conta_w;

  select  count(1)
  into STRICT  qt_analise_conta_item_w
  from  w_pls_resumo_conta
  where  nr_seq_analise = nr_seq_analise_w;

  if (qt_analise_conta_item_w = 0) then

    open C07;
    loop
    fetch C07 into
      nr_seq_aud_conta_grupo_w;
    EXIT WHEN NOT FOUND; /* apply on C07 */
      begin

      delete  FROM pls_tempo_conta_grupo
      where  nr_seq_auditoria = nr_seq_aud_conta_grupo_w;

      delete  FROM pls_auditoria_conta_grupo
      where  nr_sequencia    = nr_seq_aud_conta_grupo_w;

      end;
    end loop;
    close C07;

    update  pls_conta
    set  nr_seq_analise   = NULL
    where  nr_sequencia = nr_seq_conta_w;

    delete  FROM pls_hist_analise_conta
    where  nr_seq_analise = nr_seq_analise_w;

    delete  FROM pls_analise_conta
    where  nr_sequencia   = nr_seq_analise_w;
  end if;

  select  max(nr_seq_analise)
  into STRICT  nr_seq_analise_pos_estab_w
  from  pls_conta_pos_estabelecido
  where  nr_seq_conta  = nr_seq_conta_w;

  nr_seq_analise_w := nr_seq_analise_pos_estab_w;

  select  count(1)
  into STRICT  qt_analise_conta_item_w
  from  w_pls_resumo_conta
  where  nr_seq_analise = nr_seq_analise_w;

  if (qt_analise_conta_item_w = 0) then

    open C07;
    loop
    fetch C07 into
      nr_seq_aud_conta_grupo_w;
    EXIT WHEN NOT FOUND; /* apply on C07 */
      begin

      delete  FROM pls_tempo_conta_grupo
      where  nr_seq_auditoria = nr_seq_aud_conta_grupo_w;

      delete  FROM pls_auditoria_conta_grupo
      where  nr_sequencia    = nr_seq_aud_conta_grupo_w;

      end;
    end loop;
    close C07;

    delete  FROM pls_hist_analise_conta
    where  nr_seq_analise = nr_seq_analise_w;

    delete  FROM pls_analise_conta
    where  nr_sequencia   = nr_seq_analise_w;
  end if;

  delete  FROM pls_conta_pos_estabelecido
  where  nr_seq_conta  = nr_seq_conta_w;

  open c02;
  loop
  fetch c02 into
    nr_seq_conta_proc_w;
  EXIT WHEN NOT FOUND; /* apply on c02 */
    begin
    delete  FROM pls_ocorrencia_benef
    where  nr_seq_proc = nr_seq_conta_proc_w;

    delete  FROM pls_conta_proc_aprop
    where  nr_seq_conta_proc = nr_seq_conta_proc_w;

    delete  FROM pls_conta_glosa
    where  nr_seq_conta_proc = nr_seq_conta_proc_w;

    end;
  end loop;
  close c02;

  open c03;
  loop
  fetch c03 into
    nr_seq_conta_mat_w;
  EXIT WHEN NOT FOUND; /* apply on c03 */
    begin
    delete  FROM pls_ocorrencia_benef
    where  nr_seq_mat = nr_seq_conta_mat_w;

    delete  FROM pls_conta_mat_aprop
    where  nr_seq_conta_mat = nr_seq_conta_mat_w;

    delete  FROM pls_conta_glosa
    where  nr_seq_conta_mat = nr_seq_conta_mat_w;

    end;
  end loop;
  close c03;

  delete  FROM pls_ocorrencia_benef
  where  nr_seq_conta = nr_seq_conta_w;

  delete  FROM pls_conta_glosa
  where  nr_seq_conta = nr_seq_conta_w;

  delete  FROM pls_diagnostico_conta
  where  nr_seq_conta = nr_seq_conta_w;

  delete  FROM pls_resumo_conta
  where  nr_seq_conta = nr_seq_conta_w;

  delete  FROM pls_conta_copartic_aprop
  where  NR_SEQ_CONTA_COPARTICIPACAO in (SELECT  nr_sequencia
            from  pls_conta_coparticipacao
            where  nr_seq_conta  = nr_seq_conta_w);

  CALL pls_deletar_coparticipacao(nr_seq_conta_w,null,'S', 'N', null, null, nm_usuario_p,cd_estabelecimento_p);

  delete  FROM pls_beneficiario_internado
  where  nr_seq_conta = nr_seq_conta_w;

  delete   from pls_diagnost_conta_obito
  where  nr_seq_conta  = nr_seq_conta_w;

  delete   from pls_diagnostico_nasc_vivo
  where  nr_seq_conta  = nr_seq_conta_w;

  update  pls_conta
  set  nr_seq_prot_conta  = NULL
  where  nr_sequencia  = nr_seq_conta_w;

  CALL pls_delete_conta_medica_resumo(nr_seq_conta_w,null,null,nm_usuario_P);

  end;
end loop;
close c01;

delete  FROM pls_prot_conta_titulo
where  nr_seq_protocolo = nr_seq_protocolo_p;
commit;


commit;

delete  FROM pls_conta
where  nr_seq_protocolo = nr_seq_protocolo_p;

delete   FROM pls_protocolo_reg_doc
where  nr_seq_protocolo = nr_seq_protocolo_p;

open C05;
loop
fetch C05 into
  nr_titulo_w;
EXIT WHEN NOT FOUND; /* apply on C05 */
  begin
  CALL Cancelar_Titulo_Pagar(nr_titulo_w, nm_usuario_p, clock_timestamp());
  end;
end loop;
close C05;

delete  FROM pls_protocolo_conta
where  nr_sequencia = nr_seq_protocolo_p;

ds_motivo_w := 'Protocolo: ' || nr_seq_protocolo_p || ' excluído através da funcionalidade ''BD - Excluir protocolo''.';

insert  into pls_log_apresent_autom(nm_usuario,
  dt_atualizacao,
  nm_usuario_nrec,
  dt_atualizacao_nrec,
  nr_seq_lote_apresentacao,
  ds_motivo,
  nr_sequencia)
values (nm_usuario_p,
  clock_timestamp(),
  nm_usuario_p,
  clock_timestamp(),
  nr_seq_lote_apres_autom_w,
  ds_motivo_w,
  nextval('pls_log_apresent_autom_seq'));

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_excluir_protocolo_lote ( nr_seq_protocolo_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

