-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE enviar_email_aviso_chegada_mat ( nm_usuario_p text, cd_estabelecimento_p bigint, nr_sequencia_p bigint) AS $body$
DECLARE



qt_existe_regra_w		bigint;
nr_solic_compra_w		solic_compra.nr_solic_compra%type;
cd_pessoa_solicitante_w		solic_compra.cd_pessoa_solicitante%type;
ds_local_estoque_w		local_Estoque.ds_local_estoque%type;
ds_centro_custo_w		centro_custo.ds_centro_custo%type;
cd_material_w			material.cd_material%type;
dt_validade_w			nota_fiscal_item.dt_validade%type;
qt_item_nf_w			nota_fiscal_item.qt_item_nf%type;
ds_material_w			material.ds_material%type;
ds_email_destino_w		varchar(2255);
ds_email_origem_w		usuario.ds_email%type;
nm_usuario_destino_w		usuario.nm_usuario%type;
nm_solicitante_w		pessoa_fisica.nm_pessoa_fisica%type;
ds_lista_material_w		varchar(4000);
ds_lista_solic_w		varchar(4000);
ds_lista_solic_cc_w		varchar(4000);
ds_lista_solic_local_w		varchar(4000);
nm_usuario_origem_w		varchar(255);
nr_seq_regra_w			regra_envio_email_compra.nr_sequencia%type;
ds_email_remetente_w		regra_envio_email_compra.ds_email_remetente%type;
ds_email_adicional_w		regra_envio_email_compra.ds_email_adicional%type;
cd_perfil_disparar_w		regra_envio_email_compra.cd_perfil_disparar%type;
ie_momento_envio_w		regra_envio_email_compra.ie_momento_envio%type;
ie_usuario_w			regra_envio_email_compra.ie_usuario%type;
qt_existe_filtro_w		bigint;
qt_existe_w			bigint;
ie_envia_email_w		varchar(1);
cd_local_estoque_w		envio_email_compra_filtro.cd_local_estoque%type;
cd_centro_custo_w		envio_email_compra_filtro.cd_centro_custo%type;
cd_grupo_material_w		envio_email_compra_filtro.cd_grupo_material%type;
cd_subgrupo_material_w		envio_email_compra_filtro.cd_subgrupo_material%type;
cd_classe_material_w		envio_email_compra_filtro.cd_classe_material%type;
ie_consignado_w			envio_email_compra_filtro.ie_consignado%type;
ie_email_w			envio_email_compra_filtro.ie_envia_email%type;
nr_ordem_compra_w		ordem_compra.nr_ordem_compra%type;
ds_assunto_w			regra_envio_email_compra.ds_assunto%type;
ds_mensagem_w			varchar(4000);
nr_nota_fiscal_w		nota_fiscal.nr_nota_fiscal%type;
cd_perfil_w			perfil.cd_perfil%type;
ds_lista_material_compl_w	varchar(4000);


c01 CURSOR FOR
SELECT	a.cd_pessoa_solicitante
from	solic_compra a,
	solic_compra_item_agrup_v b,
	ordem_compra_item c,
	nota_fiscal_item n
where	a.nr_solic_compra = b.nr_solic_compra
and	c.nr_cot_compra = b.nr_cot_compra
and	c.nr_item_cot_compra = b.nr_item_cot_compra
and	c.nr_ordem_compra = n.nr_ordem_compra
and	c.nr_item_oci = n.nr_item_oci
and	n.nr_sequencia = nr_sequencia_p
group by	a.cd_pessoa_solicitante;


c02 CURSOR FOR
SELECT	a.nr_solic_compra,
	substr(obter_desc_local_estoque(a.cd_local_estoque),1,255) ds_local_estoque,
	substr(obter_desc_centro_custo(a.cd_centro_custo),1,255) ds_centro_custo
from	solic_compra a,
	solic_compra_item_agrup_v b,
	ordem_compra_item c,
	nota_fiscal_item n
where	a.nr_solic_compra = b.nr_solic_compra
and	c.nr_cot_compra = b.nr_cot_compra
and	c.nr_item_cot_compra = b.nr_item_cot_compra
and	c.nr_ordem_compra = n.nr_ordem_compra
and	c.nr_item_oci = n.nr_item_oci
and	n.nr_sequencia = nr_sequencia_p
and	a.cd_pessoa_solicitante = cd_pessoa_solicitante_w
group by	a.nr_solic_compra,
	a.cd_local_estoque,
	a.cd_centro_custo;
	
	
c03 CURSOR FOR	
SELECT	n.cd_material,
	n.dt_validade,
	sum(n.qt_item_nf)
from	solic_compra a,
	solic_compra_item_agrup_v b,
	ordem_compra_item c,
	nota_fiscal_item n
where	a.nr_solic_compra = b.nr_solic_compra
and	c.nr_cot_compra = b.nr_cot_compra
and	c.nr_item_cot_compra = b.nr_item_cot_compra
and	c.nr_ordem_compra = n.nr_ordem_compra
and	c.nr_item_oci = n.nr_item_oci
and	n.nr_sequencia = nr_sequencia_p
and	a.cd_pessoa_solicitante = cd_pessoa_solicitante_w
group by
	n.cd_material,
	n.dt_validade;	
	
c04 CURSOR FOR
SELECT	nr_sequencia,
	coalesce(ds_email_remetente,'X'),
	replace(ds_email_adicional,',',';'),
	cd_perfil_disparar,
	coalesce(ie_momento_envio,'I'),
	coalesce(ie_usuario,'U')
from	regra_envio_email_compra
where	ie_tipo_mensagem = 100
and	ie_situacao = 'A'
and	cd_estabelecimento = cd_estabelecimento_p;

c05 CURSOR FOR
SELECT 	cd_local_estoque,
	cd_centro_custo,
	cd_grupo_material,
	cd_subgrupo_material,
	cd_classe_material,
	cd_material,
	ie_consignado,
	ie_envia_email
from	envio_email_compra_filtro
where	nr_seq_regra = nr_seq_regra_w;


BEGIN

cd_perfil_w	:= 1799;
--obter_perfil_ativo;
select	count(*)
into STRICT	qt_existe_regra_w
from	regra_envio_email_compra
where	cd_estabelecimento = cd_estabelecimento_p
and	ie_tipo_mensagem = 100
and	ie_situacao = 'A';

select	nr_nota_fiscal,
	nr_ordem_compra
into STRICT	nr_nota_fiscal_w,
	nr_ordem_compra_w
from	nota_fiscal
where	nr_sequencia = nr_sequencia_p;

if (qt_existe_regra_w > 0) then
	begin

	open c01;
	loop
	fetch c01 into
		cd_pessoa_solicitante_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		
		select	substr(obter_usuario_pessoa(cd_pessoa_solicitante_w),1,255),
			substr(obter_nome_pf(cd_pessoa_solicitante_w),1,255)
		into STRICT	nm_usuario_destino_w,
			nm_solicitante_w
		;
		
		if (nm_usuario_destino_w IS NOT NULL AND nm_usuario_destino_w::text <> '') then
			select	ds_email
			into STRICT	ds_email_destino_w
			from	usuario
			where	nm_usuario = nm_usuario_destino_w;
		end if;
		
		if (ds_email_destino_w IS NOT NULL AND ds_email_destino_w::text <> '') then

			open c02;
			loop
			fetch c02 into
				nr_solic_compra_w,
				ds_local_estoque_w,
				ds_centro_custo_w;
			EXIT WHEN NOT FOUND; /* apply on c02 */
				begin

				ds_lista_solic_w	:= substr(ds_lista_solic_w || nr_solic_compra_w || chr(10),1,4000);
				
				if (ds_centro_custo_w IS NOT NULL AND ds_centro_custo_w::text <> '') then
					ds_lista_solic_cc_w	:= substr(ds_lista_solic_cc_w || nr_solic_compra_w || ' - ' || ds_centro_custo_w || chr(10),1,4000);
				end if;
				
				if (ds_local_estoque_w IS NOT NULL AND ds_local_estoque_w::text <> '') then
					ds_lista_solic_local_w	:= substr(ds_lista_solic_cc_w || nr_solic_compra_w || ' - ' || ds_local_estoque_w || chr(10),1,4000);
				end if;
				
				end;
			end loop;
			close c02;
		
			open c03;
			loop
			fetch c03 into
				cd_material_w,
				dt_validade_w,
				qt_item_nf_w;
			EXIT WHEN NOT FOUND; /* apply on c03 */
				begin

				select	ds_material
				into STRICT	ds_material_w
				from	material
				where	cd_material = cd_material_w;
				
				ds_lista_material_w		:= substr(ds_lista_material_w	|| cd_material_w || ' - ' || ds_material_w || chr(10),1,4000);
			
		                ds_lista_material_compl_w	:= substr(ds_lista_material_w	|| cd_material_w || ' - ' || ds_material_w
		                ||' - '|| wheb_mensagem_pck.get_texto(409240) ||':  '|| qt_item_nf_w ||'  -  ' || wheb_mensagem_pck.get_texto(409242) ||': '|| dt_validade_w || chr(10),1,4000);

				end;
			end loop;
			close c03;		
			
			open c04;
			loop
			fetch c04 into
				nr_seq_regra_w,
				ds_email_remetente_w,
				ds_email_adicional_w,
				cd_perfil_disparar_w,
				ie_momento_envio_w,
				ie_usuario_w;
			EXIT WHEN NOT FOUND; /* apply on c04 */
				begin

				if (coalesce(cd_perfil_disparar_w::text, '') = '') or
					(cd_perfil_disparar_w IS NOT NULL AND cd_perfil_disparar_w::text <> '' AND cd_perfil_disparar_w = cd_perfil_w) then
					begin

					select	count(*)
					into STRICT	qt_existe_filtro_w
					from	envio_email_compra_filtro
					where	nr_seq_regra = nr_seq_regra_w;

					if (qt_existe_filtro_w > 0) then
						begin

						ie_envia_email_w := 'N';

						open c05;
						loop
						fetch c05 into
							cd_local_estoque_w,
							cd_centro_custo_w,
							cd_grupo_material_w,
							cd_subgrupo_material_w,
							cd_classe_material_w,
							cd_material_w,
							ie_consignado_w,
							ie_email_w;
						EXIT WHEN NOT FOUND; /* apply on c05 */
							begin

							if (ie_envia_email_w = 'N') then
								begin
		
								select	count(*)
								into STRICT	qt_existe_w
								from	nota_fiscal_item a,
									estrutura_material_v e
								where	a.nr_sequencia = nr_sequencia_p
								and	a.nr_ordem_compra = nr_ordem_compra_w
								and	((coalesce(cd_local_estoque_w::text, '') = '') or (a.cd_local_estoque = coalesce(cd_local_estoque_w,a.cd_local_estoque)))
								and	((coalesce(cd_centro_custo_w::text, '') = '') or (a.cd_centro_custo = coalesce(cd_centro_custo_w,a.cd_centro_custo)))
								and	a.cd_material = e.cd_material
								and	e.cd_material = coalesce(cd_material_w,e.cd_material)
								and	e.cd_grupo_material = coalesce(cd_grupo_material_w,e.cd_grupo_material)
								and	e.cd_subgrupo_material = coalesce(cd_subgrupo_material_w,e.cd_subgrupo_material)
								and	e.cd_classe_material = coalesce(cd_classe_material_w,e.cd_classe_material)
								and ((ie_consignado_w = 'A' and e.ie_consignado in (0,1,2)) or (ie_consignado_w = 'S' and e.ie_consignado in (1,2)) or (ie_consignado_w = 'N' and e.ie_consignado in (0,2)));
							
								if (qt_existe_w > 0) and (ie_email_w = 'S') then
									ie_envia_email_w := 'S';
								end if;
		
								end;
							end if;
	
							end;
						end loop;
						close c05;

						end;
					else
						ie_envia_email_w := 'S';
					end if;
					
					
					if (ie_envia_email_w = 'S') then
						begin
	
						select	ds_assunto,
							ds_mensagem_padrao
						into STRICT	ds_assunto_w,
							ds_mensagem_w
						from	regra_envio_email_compra
						where	nr_sequencia = nr_seq_regra_w;
						
						if (ds_email_adicional_w IS NOT NULL AND ds_email_adicional_w::text <> '') then
							if (ds_email_destino_w IS NOT NULL AND ds_email_destino_w::text <> '') then
								ds_email_destino_w := ds_email_destino_w || '; ' || ds_email_adicional_w;
							else
								ds_email_destino_w := ds_email_adicional_w;
							end if;
						end if;

						ds_assunto_w	:=	substr(ds_assunto_w,1,255);
						
						ds_mensagem_w	:=	substr(replace_macro(ds_mensagem_w, '@nr_solic_compra', ds_lista_solic_w),1,4000);
						ds_mensagem_w	:=	substr(replace_macro(ds_mensagem_w, '@nm_solicitante', nm_solicitante_w),1,4000);
						ds_mensagem_w	:=	substr(replace_macro(ds_mensagem_w, '@nr_ordem_compra', nr_ordem_compra_w),1,4000);
						ds_mensagem_w	:=	substr(replace_macro(ds_mensagem_w, '@nr_solic_centro_custo', ds_lista_solic_cc_w),1,4000);
						ds_mensagem_w	:=	substr(replace_macro(ds_mensagem_w, '@nr_solic_local_estoque', ds_lista_solic_local_w),1,4000);
						ds_mensagem_w	:=	substr(replace_macro(ds_mensagem_w, '@nr_seq_nota', nr_sequencia_p),1,4000);
						ds_mensagem_w	:=	substr(replace_macro(ds_mensagem_w, '@nr_nota_fiscal', nr_nota_fiscal_w),1,4000);
						ds_mensagem_w	:=	substr(replace_macro(ds_mensagem_w, '@ds_material', ds_lista_material_w),1,4000);
						ds_mensagem_w	:=	substr(replace_macro(ds_mensagem_w, '@ds_material_compl', ds_lista_material_compl_w),1,4000);
						
						select	ds_email,
							nm_usuario
						into STRICT	ds_email_origem_w,
							nm_usuario_origem_w
						from	usuario
						where	nm_usuario = nm_usuario_p;
						
						if (ds_email_remetente_w <> 'X') then
							ds_email_origem_w	:= ds_email_remetente_w;
						end if;

						if (ie_momento_envio_w = 'A') then
							begin

							CALL sup_grava_envio_email(
								'NF',
								'100',
								nr_sequencia_p,
								null,
								null,
								ds_email_adicional_w,
								nm_usuario_origem_w,
								ds_email_origem_w,
								ds_assunto_w,
								ds_mensagem_w,
								cd_estabelecimento_p,
								nm_usuario_p);

							end;
						else
							
							begin
							CALL enviar_email(ds_assunto_w,ds_mensagem_w,ds_email_origem_w,ds_email_destino_w,nm_usuario_origem_w,'M');
							exception
							when others then
								CALL gerar_historico_nota_fiscal(
									nr_sequencia_p,
									nm_usuario_p,
									54,
									wheb_mensagem_pck.get_texto(300304,'DS_RETORNO='||nr_seq_regra_w));
							end;
						end if;

						end;
					end if; /*End do envia_email = 'S'*/
					end;
				end if;
				end;
			end loop;
			close c04;	
		end if;
		end;
	end loop;
	close c01;

	end;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE enviar_email_aviso_chegada_mat ( nm_usuario_p text, cd_estabelecimento_p bigint, nr_sequencia_p bigint) FROM PUBLIC;

