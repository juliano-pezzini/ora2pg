-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ageint_obter_medico_resp (CD_AGENDA_P bigint, IE_TIPO_AGENDA_P bigint, NR_SEQ_AGENDA_P bigint, CD_MEDICO_RESP_P INOUT bigint) AS $body$
DECLARE

  cd_medico_resp_w bigint := null;
  ds_resp_agenda_w varchar(255);
  ie_nresp_eup_p varchar(1);
  ie_nresp_agecons_p varchar(1);
  cd_medico_cons_w bigint;


BEGIN
 	
  if (ie_tipo_agenda_p in (3,4) and (NR_SEQ_AGENDA_P IS NOT NULL AND NR_SEQ_AGENDA_P::text <> '')) then
  
	ie_nresp_agecons_p := obter_param_usuario(821, 485, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_nresp_agecons_p);
	ie_nresp_eup_p := obter_param_usuario(916, 789, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_nresp_eup_p);
	
	  select max(m.cd_pessoa_fisica) cd_medico
		into STRICT cd_medico_cons_w
		from agenda a,
			 medico m
	   where a.cd_pessoa_fisica = m.cd_pessoa_fisica
		 and cd_agenda = CD_AGENDA_P;
	
	if (coalesce(cd_medico_cons_w::text, '') = '' and ie_nresp_agecons_p = 'S' and ie_nresp_eup_p = 'S') then		
		cd_medico_resp_w := substr(obter_medico_agecons(CD_AGENDA_P,'C'),1,10);		
	else	
		cd_medico_resp_w := cd_medico_cons_w;	
	end if;

  elsif (ie_tipo_agenda_p = 2  and (NR_SEQ_AGENDA_P IS NOT NULL AND NR_SEQ_AGENDA_P::text <> '')) then

	ds_resp_agenda_w := obter_resp_atend_agenda_param(wheb_usuario_pck.get_cd_estabelecimento,'E');
	
	if (ds_resp_agenda_w = 'CD_MEDICO') then
		
		select max(CD_MEDICO)
		  INTO STRICT cd_medico_resp_w
		  FROM AGENDA_PACIENTE
		 WHERE NR_SEQUENCIA = NR_SEQ_AGENDA_P;
		
	elsif (ds_resp_agenda_w = 'CD_MEDICO_EXEC') then
	
		select max(CD_MEDICO_EXEC)
		  INTO STRICT cd_medico_resp_w
		  FROM AGENDA_PACIENTE
		 WHERE NR_SEQUENCIA = NR_SEQ_AGENDA_P;
		
	end if;
	
  elsif (ie_tipo_agenda_p = 5  and (NR_SEQ_AGENDA_P IS NOT NULL AND NR_SEQ_AGENDA_P::text <> '')) then

	ds_resp_agenda_w := obter_resp_atend_agenda_param(wheb_usuario_pck.get_cd_estabelecimento,'S');

	if (ds_resp_agenda_w = 'CD_MEDICO_SOLIC') then
	
		SELECT max(CD_MEDICO_SOLIC)
		  INTO STRICT cd_medico_resp_w
		  FROM AGENDA_CONSULTA
		 WHERE NR_SEQUENCIA = NR_SEQ_AGENDA_P;
		
	elsif (ds_resp_agenda_w = 'CD_MEDICO') then
	
		SELECT max(CD_MEDICO)
		  INTO STRICT cd_medico_resp_w
		  FROM AGENDA_CONSULTA
		 WHERE NR_SEQUENCIA = NR_SEQ_AGENDA_P;
		
	end if;

  end if;

  CD_MEDICO_RESP_P := cd_medico_resp_w;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ageint_obter_medico_resp (CD_AGENDA_P bigint, IE_TIPO_AGENDA_P bigint, NR_SEQ_AGENDA_P bigint, CD_MEDICO_RESP_P INOUT bigint) FROM PUBLIC;

