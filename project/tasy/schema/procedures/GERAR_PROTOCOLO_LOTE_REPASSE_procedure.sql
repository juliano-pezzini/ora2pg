-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_protocolo_lote_repasse ( nr_seq_lote_protocolo_p bigint, nm_usuario_p text, ie_gerar_repasse_p text) AS $body$
DECLARE


ie_repasse_mat_w		varchar(1);
ie_repasse_proc_w		varchar(1);
ie_repasse_mat_conv_w		varchar(1)	:= null;
ie_repasse_proc_conv_w		varchar(1)	:= null;
nr_seq_procedimento_w		bigint;
nr_seq_material_w		bigint;
vl_material_w			double precision;
cd_estabelecimento_w		smallint;
cd_medico_resp_w		varchar(10);
cd_convenio_w			integer;
cd_convenio_protocolo_w		integer;
cd_edicao_amb_w			integer;
ie_tipo_atendimento_w		smallint;
cd_categoria_w			varchar(10);
dt_entrada_w			timestamp;
nr_interno_conta_w		bigint;
ie_tipo_convenio_w		integer;

vl_repasse_proc_w		double precision;
vl_repasse_mat_w		double precision;

cd_regra_w			bigint;
cd_medico_exec_w		varchar(100);
cd_prestador_w			varchar(100);
ie_funcao_w			varchar(100);
ie_responsavel_credito_w	varchar(100);
ie_tipo_ato_sus_w		bigint;
ie_tipo_servico_sus_w		bigint;
nr_seq_etapa_checkup_w		bigint;
ie_pagto_w			varchar(1);
nr_titulo_w			varchar(255);
nr_nota_fiscal_w		varchar(255);
nr_seq_protocolo_w		bigint;

ds_log_repasse_w		varchar(4000) := '';
ie_gravar_log_w			varchar(1) := 'N';
ie_gravar_log_proc_w		parametro_repasse.ie_gravar_log_proc%type;
ie_gravar_log_mat_w		parametro_repasse.ie_gravar_log_mat%type;

c00 CURSOR FOR
SELECT	a.nr_interno_conta,
	b.cd_medico_resp,
	ie_tipo_atendimento,
	cd_convenio_parametro,
	cd_categoria_parametro,
	dt_entrada
from	atendimento_paciente b,
	conta_paciente a
where	a.nr_atendimento	= b.nr_atendimento
and	a.nr_seq_protocolo	= nr_seq_protocolo_w;

c01 CURSOR FOR
SELECT	nr_sequencia,
	coalesce(a.cd_medico_exec_conta, a.cd_medico_executor),
	a.cd_cgc_prestador,
	coalesce(ie_funcao_medico,'0') ie_funcao,
	a.ie_responsavel_credito,
	coalesce(a.ie_tipo_ato_sus,0),
	coalesce(a.ie_tipo_servico_sus,0),
	OBTER_ETAPA_CHECKUP_PROC(a.nr_sequencia)
from	procedimento_paciente a
where	nr_interno_conta	= nr_interno_conta_w
and 	coalesce(cd_motivo_exc_conta::text, '') = '';

c02 CURSOR FOR
SELECT	nr_sequencia
from	material_atend_paciente
where	nr_interno_conta	= nr_interno_conta_w
and 	coalesce(cd_motivo_exc_conta::text, '') = '';

c03 CURSOR FOR
SELECT	nr_seq_protocolo
from	protocolo_convenio
where	nr_seq_lote_protocolo	= nr_seq_lote_protocolo_p;


BEGIN

open c03;
loop
fetch	c03 into
	nr_seq_protocolo_w;
EXIT WHEN NOT FOUND; /* apply on c03 */

	select 	max(coalesce(c.ie_repasse_mat,'N')),
		max(coalesce(c.ie_repasse_proc,'N')),
		max(a.cd_estabelecimento),
		max(OBTER_TIPO_CONVENIO(a.cd_convenio))
	into STRICT	ie_repasse_mat_w,
		ie_repasse_proc_w,
		cd_estabelecimento_w,
		ie_tipo_convenio_w
	from	parametro_faturamento c,
		protocolo_convenio a
	where	a.cd_estabelecimento	= c.cd_estabelecimento
	and	a.nr_seq_protocolo	= nr_seq_protocolo_w;

	begin
	select	ie_gravar_log_proc,
		ie_gravar_log_mat
	into STRICT	ie_gravar_log_proc_w,
		ie_gravar_log_mat_w
	from	parametro_repasse
	where	cd_estabelecimento = cd_estabelecimento_w;
	exception
	when others then
		ie_gravar_log_proc_w	:= 'N';
		ie_gravar_log_mat_w	:= 'N';
	end;

	select 	max(cd_estabelecimento),
		max(cd_convenio),
		max(substr(obter_titulo_conta_protocolo(a.nr_seq_protocolo,0),1,254)),
		max(substr(obter_nota_conta_prot_conv(a.nr_seq_protocolo,0,'S'),1,254))
	into STRICT	cd_estabelecimento_w,
		cd_convenio_protocolo_w,
		nr_titulo_w,
		nr_nota_fiscal_w
	from	protocolo_convenio a
	where	a.nr_seq_protocolo	= nr_seq_protocolo_w;

	if (coalesce(nr_titulo_w::text, '') = '') then
		nr_titulo_w	:= substr(obter_titulo_lote_protocolo(nr_seq_lote_protocolo_p),1,255);
	end if;
	select	Obter_Valor_Conv_Estab(cd_convenio_protocolo_w,cd_estabelecimento_w,'IE_REPASSE_PROC'),
		Obter_Valor_Conv_Estab(cd_convenio_protocolo_w,cd_estabelecimento_w,'IE_REPASSE_MAT')
	into STRICT	ie_repasse_proc_conv_w,
		ie_repasse_mat_conv_w
	;

	if (ie_repasse_proc_conv_w IS NOT NULL AND ie_repasse_proc_conv_w::text <> '') then
		ie_repasse_proc_w := ie_repasse_proc_conv_w;
	end if;

	if (ie_repasse_mat_conv_w IS NOT NULL AND ie_repasse_mat_conv_w::text <> '') then
		ie_repasse_mat_w := ie_repasse_mat_conv_w;
	end if;

	open	c00;
	loop
	fetch	c00 into
		nr_interno_conta_w,
		cd_medico_resp_w,
		ie_tipo_atendimento_w,
		cd_convenio_w,
		cd_categoria_w,
		dt_entrada_w;
	EXIT WHEN NOT FOUND; /* apply on c00 */

		begin

			select	obter_edicao(cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, dt_entrada_w, null)
			into STRICT	cd_edicao_amb_w
			;

		exception
		when others then

			select	max(cd_edicao_amb)
			into STRICT	cd_edicao_amb_w
			from	convenio_amb
			where	cd_estabelecimento	= cd_estabelecimento_w
			and	cd_convenio		= cd_convenio_w
			and	cd_categoria		= cd_categoria_w
			and (coalesce(ie_situacao,'A')	= 'A')
			and	dt_inicio_vigencia	=
				(SELECT	max(dt_inicio_vigencia)
				from	convenio_amb a
				where	a.cd_estabelecimento  = cd_estabelecimento_w
				and	a.cd_convenio         = cd_convenio_w
				and	a.cd_categoria        = cd_categoria_w
				and (coalesce(a.ie_situacao,'A')= 'A')
				and	a.dt_inicio_vigencia <=  dt_entrada_w);
		end;

		ds_log_repasse_w := '';

		OPEN	C01;
		LOOP
		FETCH	C01 into
			nr_seq_procedimento_w,
			cd_medico_exec_w,
			cd_prestador_w,
			ie_funcao_w,
			ie_responsavel_credito_w,
			ie_tipo_ato_sus_w,
			ie_tipo_servico_sus_w,
			nr_seq_etapa_checkup_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */

			ie_gravar_log_w := 'N';

			if	((ie_repasse_proc_w = 'P') and (coalesce(ie_gerar_repasse_p,'P') <> 'T')) or
				(ie_repasse_proc_w  = 'T' AND nr_nota_fiscal_w IS NOT NULL AND nr_nota_fiscal_w::text <> '' AND nr_titulo_w IS NOT NULL AND nr_titulo_w::text <> '') or
				(ie_repasse_proc_w = 'G' AND nr_titulo_w IS NOT NULL AND nr_titulo_w::text <> '') then

				CALL gerar_procedimento_repasse(	nr_seq_procedimento_w,
								cd_estabelecimento_w,
								cd_medico_resp_w,
								nm_usuario_p,
								cd_edicao_amb_w,
								cd_convenio_w,
								ie_tipo_atendimento_w,
								null,
								null,
								null);

				select	max(a.cd_regra)
				into STRICT	cd_regra_w
				from	procedimento_repasse a
				where	a.nr_seq_procedimento	= nr_seq_procedimento_w;

				begin
				select	a.ie_pagto
				into STRICT	ie_pagto_w
				from	regra_repasse_terceiro a
				where	a.cd_regra	= cd_regra_w  LIMIT 1;
				exception
				when others then
					ie_pagto_w	:= null;
				end;

				if (ie_pagto_w	= 'F') then

					update	procedimento_repasse
					set	vl_liberado	= vl_repasse,
						dt_liberacao	= clock_timestamp(),
						nm_usuario_lib	= nm_usuario_p,
						ie_status	= 'S'
					where	nr_seq_procedimento	= nr_seq_procedimento_w;

				end if;
			else
				if (ie_gravar_log_proc_w = 'S') then
					ds_log_repasse_w := substr(ds_log_repasse_w||';cd_edicao_amb_w='|| cd_edicao_amb_w ||
										';ie_repasse_proc_w='|| ie_repasse_proc_w ||
										';ie_gerar_repasse_p='|| ie_gerar_repasse_p ||
										';nr_nota_fiscal_w='|| nr_nota_fiscal_w ||
										';nr_titulo_w='|| nr_titulo_w ||
										';cd_convenio_parametro='|| cd_convenio_w ||
										';cd_estabelecimento_w='|| cd_estabelecimento_w,1,4000);
					ie_gravar_log_w := 'S';
				end if;
			end if;

			if (ie_gravar_log_w = 'S') and (ie_gravar_log_proc_w = 'S') then
				begin
				ds_log_repasse_w := substr(ds_log_repasse_w||';cd_regra_w='|| cd_regra_w ||';ie_pagto_w='|| ie_pagto_w ,1,4000);
				CALL grava_log_geracao_repasse(null,nr_interno_conta_w,nr_seq_procedimento_w,null,null,null,null,null,ds_log_repasse_w,nm_usuario_p,nr_seq_protocolo_w);
				end;
			end if;

		END	LOOP;
		Close	C01;

		OPEN	C02;
		LOOP
		FETCH	C02 into
			nr_seq_material_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */


			if	((ie_repasse_mat_w	= 'P') and (coalesce(ie_gerar_repasse_p,'P') <> 'T')) or
				(ie_repasse_mat_w	= 'T' AND nr_nota_fiscal_w IS NOT NULL AND nr_nota_fiscal_w::text <> '' AND nr_titulo_w IS NOT NULL AND nr_titulo_w::text <> '') or
				(ie_repasse_mat_w = 'G' AND nr_titulo_w IS NOT NULL AND nr_titulo_w::text <> '') then

				CALL gerar_material_repasse(		nr_seq_material_w,
								cd_estabelecimento_w,
								cd_medico_resp_w,
								nm_usuario_p,
								cd_edicao_amb_w,
								cd_convenio_w,
								ie_tipo_atendimento_w,
								null,
								null);

				select	max(a.cd_regra)
				into STRICT	cd_regra_w
				from	material_repasse a
				where	a.nr_seq_material	= nr_seq_material_w;

				begin
				select	a.ie_pagto
				into STRICT	ie_pagto_w
				from	regra_repasse_terceiro a
				where	a.cd_regra	= cd_regra_w  LIMIT 1;
				exception
				when others then
					ie_pagto_w	:= null;
				end;

				if (ie_pagto_w	= 'F') then

					update	material_repasse
					set	vl_liberado	= vl_repasse,
						dt_liberacao	= clock_timestamp(),
						nm_usuario_lib	= nm_usuario_p,
						ie_status	= 'S'
					where	nr_seq_material	= nr_seq_material_w;

				end if;
			else
				if (ie_gravar_log_mat_w = 'S') then
					ds_log_repasse_w := substr(ds_log_repasse_w||';cd_edicao_amb_w='|| cd_edicao_amb_w ||
										';ie_repasse_mat_w='|| ie_repasse_mat_w ||
										';ie_gerar_repasse_p='|| ie_gerar_repasse_p ||
										';nr_nota_fiscal_w='|| nr_nota_fiscal_w ||
										';nr_titulo_w='|| nr_titulo_w ||
										';cd_convenio_parametro='|| cd_convenio_w ||
										';cd_estabelecimento_w='|| cd_estabelecimento_w,1,4000);
					ie_gravar_log_w := 'S';
				end if;
			end if;

			if (ie_gravar_log_w = 'S') and (ie_gravar_log_mat_w = 'S') then
				begin
				ds_log_repasse_w := substr(ds_log_repasse_w||';cd_regra_w='|| cd_regra_w ||';ie_pagto_w='|| ie_pagto_w ,1,4000);
				CALL grava_log_geracao_repasse(null,nr_interno_conta_w,null,null,null,null,nr_seq_material_w,null,ds_log_repasse_w,nm_usuario_p,nr_seq_protocolo_w);
				end;
			end if;
		END LOOP;
		Close C02;

		if	(((ie_repasse_mat_w = 'P') and (coalesce(ie_gerar_repasse_p,'P') <> 'T')) or
			(ie_repasse_mat_w	= 'T' AND nr_nota_fiscal_w IS NOT NULL AND nr_nota_fiscal_w::text <> '' AND nr_titulo_w IS NOT NULL AND nr_titulo_w::text <> '') or
			(ie_repasse_mat_w = 'G' AND nr_titulo_w IS NOT NULL AND nr_titulo_w::text <> '')) or
			(((ie_repasse_proc_w = 'P') and (coalesce(ie_gerar_repasse_p,'P') <> 'T')) or
			(ie_repasse_proc_w  = 'T' AND nr_nota_fiscal_w IS NOT NULL AND nr_nota_fiscal_w::text <> '' AND nr_titulo_w IS NOT NULL AND nr_titulo_w::text <> '') or
			(ie_repasse_mat_w = 'G' AND nr_titulo_w IS NOT NULL AND nr_titulo_w::text <> '')) then

			select	sum(vl_repasse)
			into STRICT	vl_repasse_proc_w
			from	procedimento_repasse a,
				procedimento_paciente b
			where	a.nr_seq_procedimento	= b.nr_sequencia
			and	b.nr_interno_conta		= nr_interno_conta_w;

			select	sum(vl_repasse)
			into STRICT	vl_repasse_mat_w
			from	material_repasse a,
				material_atend_paciente b
			where	a.nr_seq_material		= b.nr_sequencia
			and	b.nr_interno_conta		= nr_interno_conta_w;

			update	conta_paciente
			set	vl_repasse_conta	= coalesce(vl_repasse_mat_w,0) + coalesce(vl_repasse_proc_w,0)
			where	nr_interno_conta	= nr_interno_conta_w;

			CALL atualizar_resumo_conta(nr_interno_conta_w,2);

			if (nr_interno_conta_w IS NOT NULL AND nr_interno_conta_w::text <> '') then
				CALL gerar_procmat_repasse_nf(nr_interno_conta_w, nm_usuario_p, 'S');
			end if;

		end if;

	end	loop;
	close	c00;
	CALL LIBERAR_REPASSE_PROT_CONTA(cd_estabelecimento_w,nr_seq_protocolo_w,null,nm_usuario_p);
end loop;
close c03;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_protocolo_lote_repasse ( nr_seq_lote_protocolo_p bigint, nm_usuario_p text, ie_gerar_repasse_p text) FROM PUBLIC;

