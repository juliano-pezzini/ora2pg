-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE registrar_ciencia_dieta (nr_atendimento_p bigint, ie_tipo_item_p text, cd_item_p text, nr_prescricoes_p text, nr_prescricao_p bigint, nr_seq_item_p bigint, ie_alteracao_p bigint, ie_qualidade_p bigint, ds_justificativa_p text, ds_observacao_p text, nm_usuario_p text, cd_medico_solic_p text, nr_seq_horario_p bigint, ie_todos_p text, nr_seq_cpoe_p bigint default null, cd_estabelecimento_p registro_validacao_adep.cd_estabelecimento%type default null) AS $body$
DECLARE


dt_horario_w		timestamp;
nr_prescricao_w		bigint;
nr_sequencia_w		bigint;
nr_seq_item_w		bigint;
nr_seq_alteracao_w	bigint;
nr_prescr_w			bigint;

c01 CURSOR FOR /*Dietas Orais*/
SELECT	c.nr_sequencia,
	a.nr_prescricao
FROM	prescr_dieta_hor c,
	prescr_medica a
WHERE	c.nr_prescricao = a.nr_prescricao
AND	coalesce(c.ie_situacao,'A') = 'A'
AND	a.nr_atendimento = nr_atendimento_p
AND	((obter_se_contido(a.nr_prescricao, '(' || nr_prescricoes_p || ')') = 'S' and coalesce(nr_seq_cpoe_p::text, '') = '') or ((nr_seq_cpoe_p IS NOT NULL AND nr_seq_cpoe_p::text <> '') and nr_seq_cpoe_p = obter_nr_sequencia_cpoe(c.nr_seq_dieta, a.nr_prescricao, ie_tipo_item_p)))
AND	a.dt_validade_prescr > clock_timestamp() - interval '3 days'
AND	((ie_todos_p = 'S') or (ie_todos_p = 'N' AND nr_seq_horario_p = c.nr_sequencia))
AND	ie_tipo_item_p = 'D'
AND	Obter_se_horario_liberado(c.dt_lib_horario, c.dt_horario) = 'S'

union
	
SELECT	c.nr_sequencia,
	a.nr_prescricao
FROM	prescr_medica a,
	prescr_dieta b,
	prescr_dieta_hor c
WHERE	c.nr_prescricao = a.nr_prescricao
and	b.nr_prescricao = a.nr_prescricao
and	b.nr_sequencia	= c.nr_seq_dieta
and	coalesce(c.cd_refeicao::text, '') = ''
AND	coalesce(c.ie_situacao,'A') = 'A'
AND	a.nr_atendimento = nr_atendimento_p
AND	obter_se_contido(a.nr_prescricao, '(' || nr_prescricoes_p || ')') = 'S'
AND	a.dt_validade_prescr > clock_timestamp() - interval '3 days'
AND	to_char(b.cd_dieta) = cd_item_p
AND	(ie_todos_p = 'N' AND nr_seq_horario_p = c.nr_sequencia)
AND	ie_tipo_item_p = 'D'
AND	Obter_se_horario_liberado(c.dt_lib_horario, c.dt_horario) = 'S';



c02 CURSOR FOR
SELECT	b.nr_sequencia, /* suplementos orais e Leites e derivados*/
	a.nr_prescricao
FROM	prescr_material b,
	prescr_medica a
WHERE	b.nr_prescricao = a.nr_prescricao
AND	((b.ie_agrupador = 12 and ie_tipo_item_p = 'S') or (b.ie_agrupador = 16 and ie_tipo_item_p = 'LD'))
AND	((obter_se_contido(a.nr_prescricao, '(' || nr_prescricoes_p || ')') = 'S' and coalesce(nr_seq_cpoe_p::text, '') = '') or ((nr_seq_cpoe_p IS NOT NULL AND nr_seq_cpoe_p::text <> '') and nr_seq_cpoe_p = coalesce(b.nr_seq_mat_cpoe, b.nr_seq_dieta_cpoe)))
AND	a.nr_atendimento = nr_atendimento_p
AND	a.dt_validade_prescr > clock_timestamp() - interval '3 days'
AND	b.cd_material = cd_item_p
and	ie_todos_p = 'S'
AND (ie_tipo_item_p = 'S' or ie_tipo_item_p = 'LD')

union
	
SELECT	b.nr_sequencia, /* suplementos orais e Leites e derivados*/
	a.nr_prescricao
FROM	prescr_material b,
	prescr_medica a,
	prescr_mat_hor c
WHERE	b.nr_prescricao = a.nr_prescricao
and	c.nr_prescricao = b.nr_prescricao
and	c.nr_seq_material = b.nr_sequencia
AND	((b.ie_agrupador = 12 and ie_tipo_item_p = 'S') or (b.ie_agrupador = 16 and ie_tipo_item_p = 'LD'))
AND	obter_se_contido(a.nr_prescricao, '(' || nr_prescricoes_p || ')') = 'S'
AND	a.nr_atendimento = nr_atendimento_p
AND	a.dt_validade_prescr > clock_timestamp() - interval '3 days'
AND	b.cd_material = cd_item_p
AND	(ie_todos_p = 'N' AND c.nr_sequencia = nr_seq_horario_p)
AND (ie_tipo_item_p = 'S' or ie_tipo_item_p = 'LD');

c03 CURSOR FOR
SELECT	b.nr_sequencia, /* SNE */
	a.nr_prescricao
FROM	prescr_material b,
	prescr_medica a
WHERE	b.nr_prescricao = a.nr_prescricao
AND	b.ie_agrupador = 8
AND	a.nr_atendimento = nr_atendimento_p
AND	((obter_se_contido(a.nr_prescricao, '(' || nr_prescricoes_p || ')') = 'S' and coalesce(nr_seq_cpoe_p::text, '') = '') or ((nr_seq_cpoe_p IS NOT NULL AND nr_seq_cpoe_p::text <> '') and nr_seq_cpoe_p = coalesce(b.nr_seq_mat_cpoe, b.nr_seq_dieta_cpoe)))
AND	a.dt_validade_prescr > clock_timestamp() - interval '3 days'
AND	b.cd_material = cd_item_p
AND	ie_tipo_item_p = 'SNE'
and	ie_todos_p     = 'S'

union

SELECT	b.nr_sequencia, /* SNE */
	a.nr_prescricao
FROM	prescr_material b,
	prescr_medica a,
	prescr_mat_hor c
WHERE	b.nr_prescricao = a.nr_prescricao
and	c.nr_prescricao = b.nr_prescricao
and	c.nr_seq_material = b.nr_sequencia
AND	b.ie_agrupador = 8
AND	a.nr_atendimento = nr_atendimento_p
AND	obter_se_contido(a.nr_prescricao, '(' || nr_prescricoes_p || ')') = 'S'
AND	a.dt_validade_prescr > clock_timestamp() - interval '3 days'
AND	b.cd_material = cd_item_p
AND	ie_tipo_item_p = 'SNE'
and	(ie_todos_p = 'N' AND c.nr_sequencia = nr_seq_horario_p);


BEGIN

IF (ie_tipo_item_p = 'D') THEN /* dietas orais */
	SELECT	max(dt_horario)
	INTO STRICT	dt_horario_w
	FROM	prescr_dieta_hor
	WHERE	nr_sequencia = nr_seq_horario_p
	and	obter_se_contido(nr_prescricao, '(' || nr_prescricoes_p || ')') = 'S'
	and	Obter_se_horario_liberado(dt_lib_horario, dt_horario) = 'S';
ELSIF (ie_tipo_item_p in ('S','SNE', 'LD')) THEN /* suplementos orais, SNE */
	select	max(dt_horario)
	into STRICT	dt_horario_w
	from	prescr_mat_hor
	where	nr_sequencia = nr_seq_horario_p
	and	obter_se_contido(nr_prescricao, '(' || nr_prescricoes_p || ')') = 'S'
	and	Obter_se_horario_liberado(dt_lib_horario, dt_horario) = 'S';
end if;

IF (ie_tipo_item_p = 'D') THEN
	
	OPEN c01;
	LOOP
	FETCH	c01 INTO
		nr_seq_item_w,
		nr_prescr_w;
			
	EXIT WHEN NOT FOUND; /* apply on c01 */
		
		update	prescr_dieta_hor
		set	ie_ciente	= 'S'
		where	nr_sequencia	= nr_seq_item_w
		and	nr_prescricao	= nr_prescr_w;

		SELECT	nextval('prescr_mat_alteracao_seq')
		INTO STRICT	nr_seq_alteracao_w
		;

		INSERT	INTO	prescr_mat_alteracao(
			nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_prescricao,
			nr_seq_horario_dieta,
			dt_alteracao,
			cd_pessoa_fisica,
			ie_alteracao,
			nr_seq_qualidade,
			ds_justificativa,
			ds_observacao,
			ie_tipo_item,
			dt_horario,
			nr_atendimento,
			cd_item,
			cd_medico_solic
			)
		VALUES (
			nr_seq_alteracao_w,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_prescr_w,
			nr_seq_horario_p,
			clock_timestamp(),
			obter_dados_usuario_opcao(nm_usuario_p,'C'),
			ie_alteracao_p,
			ie_qualidade_p,
			ds_justificativa_p,
			ds_observacao_p,
			ie_tipo_item_p,
			dt_horario_w,
			nr_atendimento_p,
			cd_item_p,
			cd_medico_solic_p
			);
	END LOOP;
	CLOSE c01;
	
ELSIF (ie_tipo_item_p in ('S', 'LD') ) THEN
	
	open c02;
	loop
	fetch	c02 into	
			nr_seq_item_w,
			nr_prescr_w;
			
	EXIT WHEN NOT FOUND; /* apply on c02 */
	
		if (ie_todos_p = 'S') then
			update	prescr_mat_hor
			set	ie_ciente	= 'S'
			where	nr_seq_material	= nr_seq_item_w
			and	nr_prescricao	= nr_prescr_w;
		else
			update	prescr_mat_hor
			set	ie_ciente	= 'S'
			where	nr_seq_material	= nr_seq_item_w
			and	nr_prescricao	= nr_prescr_w
			and	nr_sequencia	= nr_seq_horario_p;
		end if;
	
		select	nextval('prescr_mat_alteracao_seq')
		into STRICT	nr_seq_alteracao_w
		;

		INSERT	INTO	prescr_mat_alteracao(
			nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_prescricao,
			nr_seq_prescricao,
			nr_seq_horario,
			dt_alteracao,
			cd_pessoa_fisica,
			ie_alteracao,
			ds_justificativa,
			ie_tipo_item,
			dt_horario,
			nr_atendimento,
			cd_item,
			cd_medico_solic,
			ds_observacao
			)
		VALUES (
			nr_seq_alteracao_w,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_prescr_w,--nr_prescricoes_p,
			nr_seq_item_w,
			nr_seq_horario_p,
			clock_timestamp(),
			obter_dados_usuario_opcao(nm_usuario_p,'C'),
			ie_alteracao_p,
			ds_justificativa_p,
			ie_tipo_item_p,
			dt_horario_w,
			nr_atendimento_p,
			cd_item_p,
			cd_medico_solic_p,
			ds_observacao_p
			);
			
	END LOOP;
	CLOSE c02;

elsif (ie_tipo_item_p	= 'SNE') then

	open c03;
	loop
	fetch 	c03 into	
		nr_seq_item_w,
		nr_prescr_w;
			
	EXIT WHEN NOT FOUND; /* apply on c03 */
		
		if (ie_todos_p = 'S') then
			update	prescr_mat_hor
			set	ie_ciente	= 'S'
			where	nr_seq_material	= nr_seq_item_w
			and	nr_prescricao	= nr_prescr_w;
		else
			update	prescr_mat_hor
			set	ie_ciente	= 'S'
			where	nr_seq_material	= nr_seq_item_w
			and	nr_prescricao	= nr_prescr_w
			and	nr_sequencia	= nr_seq_horario_p;
		end if;
	
		/* obter sequencia */

		select	nextval('prescr_solucao_evento_seq')
		into STRICT	nr_sequencia_w
		;

		/* gerar evento */

		insert into prescr_solucao_evento(
			nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_prescricao,
			nr_seq_solucao,
			nr_seq_material,
			nr_seq_procedimento,
			nr_seq_nut,
			nr_seq_nut_neo,
			ie_forma_infusao,
			ie_tipo_dosagem,
			qt_dosagem,
			qt_vol_infundido,
			qt_vol_desprezado,
			cd_pessoa_fisica,
			ie_alteracao,
			dt_alteracao,
			ie_evento_valido,
			nr_seq_motivo,
			ds_observacao,
			ie_tipo_solucao,
			qt_volume_parcial)
		values (
			nr_sequencia_w,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_prescr_w,--nr_prescricoes_p,
			null,
			nr_seq_item_w,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			obter_dados_usuario_opcao(nm_usuario_p, 'C'),
			30,
			clock_timestamp(),
			'S',
			null,
			ds_observacao_p,
			2,
			null);

	end loop;
	close c03;

end if;

if (ie_todos_p = 'S' and
    (nr_seq_cpoe_p IS NOT NULL AND nr_seq_cpoe_p::text <> '') and
    (cd_estabelecimento_p IS NOT NULL AND cd_estabelecimento_p::text <> '')) then

    select	nextval('registro_validacao_adep_seq')
    into STRICT	nr_sequencia_w
;

    insert into registro_validacao_adep(
        nr_sequencia,
        cd_estabelecimento,
        dt_atualizacao,
        ie_tipo_item,
        nm_usuario,
        nr_seq_cpoe)
    values (
        nr_sequencia_w,
        cd_estabelecimento_p,
        clock_timestamp(),
        ie_tipo_item_p,
        nm_usuario_p,
        nr_seq_cpoe_p
    );

end if;

if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE registrar_ciencia_dieta (nr_atendimento_p bigint, ie_tipo_item_p text, cd_item_p text, nr_prescricoes_p text, nr_prescricao_p bigint, nr_seq_item_p bigint, ie_alteracao_p bigint, ie_qualidade_p bigint, ds_justificativa_p text, ds_observacao_p text, nm_usuario_p text, cd_medico_solic_p text, nr_seq_horario_p bigint, ie_todos_p text, nr_seq_cpoe_p bigint default null, cd_estabelecimento_p registro_validacao_adep.cd_estabelecimento%type default null) FROM PUBLIC;

