-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ageint_gravar_contato_pac_sms ( nr_seq_log_p bigint, dt_inicial_p timestamp, dt_final_p timestamp, ds_obs_contato_p text, nm_usuario_p text) AS $body$
DECLARE

 
qt_log_existe_w		bigint;
qt_log_envio_w		bigint;
qt_log_retorno_w	bigint;
ds_erro_w			varchar(255);
nm_paciente_w		varchar(60);
nr_seq_log_semelhante_w	bigint;

--Registros de log's semelhantes(Envio/Retorno) dos SMS's 
C01 CURSOR FOR 
	--Envios 
	SELECT	a.nr_sequencia 
	from	ageint_log_envio_sms_v a 
	where	a.nr_sequencia 	<> nr_seq_log_p 
	and		pkg_date_utils.start_of(a.dt_envio,'DD',0) between pkg_date_utils.start_of(dt_inicial_p,'DD',0) and pkg_date_utils.start_of(dt_final_p, 'DD',0) 
	and		a.ie_tipo	= 1 
	and (obter_se_contido_char(a.nm_pac, nm_paciente_w) = 'S') 
	and		coalesce(a.dt_contato::text, '') = '' 
	
union
 
	--Retornos 
	SELECT	a.nr_sequencia 
	from	ageint_log_envio_sms_v a 
	where	a.nr_sequencia 	<> nr_seq_log_p 
	and		pkg_date_utils.start_of(a.dt_envio, 'DD',0) between pkg_date_utils.start_of(dt_inicial_p,'DD',0) and pkg_date_utils.start_of(dt_final_p,'DD',0) 
	and		a.ie_tipo	= 2 
	and (obter_se_contido_char(a.nm_pac, nm_paciente_w) = 'S') 
	and		coalesce(a.dt_contato::text, '') = '' 
	order by 1;


BEGIN 
 
if (nr_seq_log_p IS NOT NULL AND nr_seq_log_p::text <> '') and (ds_obs_contato_p IS NOT NULL AND ds_obs_contato_p::text <> '')then 
	begin 
	--Buscar pacientes dos SMS's semelhantes para alteração do DT_CONTATO 
	select	max(coalesce(a.nm_pac,'X')) 
	into STRICT	nm_paciente_w 
	from	ageint_log_envio_sms_v a 
	where	a.nr_sequencia = nr_seq_log_p;
	 
	select	coalesce(count(*),0) 
	into STRICT	qt_log_existe_w 
	from	log_envio_sms 
	where	nr_sequencia = nr_seq_log_p 
	and		not exists (	SELECT	1 
						from	log_retorno_sms 
						where	nr_sequencia = nr_seq_log_p);	
	 
	if (qt_log_existe_w > 0)then		 
		--Envio 
		update	log_envio_sms 
		set		ds_obs_contato 		= ds_obs_contato_p, 
				nm_usuario_contato	= nm_usuario_p, 
				dt_contato			= clock_timestamp() 
		where	nr_sequencia		= nr_seq_log_p;
	else 
		select	coalesce(count(*),0) 
		into STRICT	qt_log_existe_w 
		from	log_retorno_sms 
		where	nr_sequencia = nr_seq_log_p;
		 
		if (qt_log_existe_w > 0)then 
			--Retorno 
			update	log_retorno_sms 
			set		dt_contato 		= clock_timestamp(), 
					ds_obs_contato 	= ds_obs_contato_p 
			where	nr_sequencia	= nr_seq_log_p;
		 
		end if;	
	end if;
	 
	if (nm_paciente_w <> 'X')then 
	 
		open C01;
		loop 
		fetch C01 into	 
			nr_seq_log_semelhante_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin 
			 
			if (nr_seq_log_semelhante_w IS NOT NULL AND nr_seq_log_semelhante_w::text <> '')then 
				 
				select	count(*) 
				into STRICT	qt_log_envio_w 
				from	log_envio_sms 
				where	nr_sequencia = nr_seq_log_semelhante_w;
				 
				select	count(*) 
				into STRICT	qt_log_retorno_w 
				from	log_retorno_sms 
				where	nr_sequencia = nr_seq_log_semelhante_w;
				--Log enviados 
				if (qt_log_envio_w > 0)then 
					update	log_envio_sms 
					set		ds_obs_contato 		= ds_obs_contato_p, 
							nm_usuario_contato	= nm_usuario_p, 
							dt_contato			= clock_timestamp() 
					where	nr_sequencia		= nr_seq_log_semelhante_w;
				end if;
				 
				--Log retornados 
				if (qt_log_retorno_w > 0)then 
					update	log_retorno_sms 
					set		dt_contato 		= clock_timestamp(), 
							ds_obs_contato 		= ds_obs_contato_p 
					where	nr_sequencia	= nr_seq_log_semelhante_w;
				end if;
			commit;
			end if;
			 
			end;
		end loop;
		close C01;
	 
	end if;
	 
	exception 
	when others then 
		ds_erro_w	:= substr(sqlerrm,1,255);
		 
	end;
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ageint_gravar_contato_pac_sms ( nr_seq_log_p bigint, dt_inicial_p timestamp, dt_final_p timestamp, ds_obs_contato_p text, nm_usuario_p text) FROM PUBLIC;

