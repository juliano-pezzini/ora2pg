-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_procedimento_cih_atend ( nr_atendimento_p bigint, nm_usuario_p text) AS $body$
DECLARE

cont_w			smallint;
cd_procedimento_w	bigint;
ie_origem_proced_w	bigint;
cd_procedimento_sus_w	bigint;
ie_origem_proced_sus_w	bigint;
cd_cid_primario_w	varchar(10);
cd_cid_secundario_w	varchar(10);
nr_seq_proc_princ_w	bigint;
cd_estabelecimento_w	smallint;
cd_origem_proc_princ_w	bigint;
ie_gera_proc_cih_w	varchar(1)	:= 'N';
ie_tipo_atendimento_w	smallint;
cd_convenio_w		integer;
ie_clinica_w		integer;

ie_origem_CID_w		varchar(1)	:= 'D';


BEGIN

ie_origem_CID_w := Obter_param_Usuario(0, 179, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_origem_CID_w);

select 	coalesce(count(*),0)
into STRICT	cont_w
from	procedimento_paciente_cih
where 	nr_atendimento = nr_atendimento_p;

if (cont_w = 0)	then
	begin
	select	cd_estabelecimento
	into STRICT	cd_estabelecimento_w
	from	atendimento_paciente
	where	nr_atendimento	= nr_atendimento_p;
	exception
		when others then
    --457925 = Parâmetros do estabelecimento não cadastrado!
		CALL wheb_mensagem_pck.exibir_mensagem_abort(457927);
	end;

	select 	min(nr_sequencia)
	into STRICT 	nr_seq_proc_princ_w
	from 	procedimento_paciente
	where 	nr_atendimento = nr_atendimento_p
        and   	ie_proc_princ_atend = 'S';

	select 	coalesce(max(a.cd_procedimento),0),
		coalesce(max(a.ie_origem_proced),0)
	into STRICT	cd_procedimento_w,
		ie_origem_proced_w
	from 	procedimento_paciente a
	where 	a.nr_atendimento = nr_atendimento_p
	and	ie_proc_princ_atend = 'S'
	and	a.nr_sequencia = nr_seq_proc_princ_w;

	select	coalesce(max(ie_gera_proc_princ_cih),'N')
	into STRICT	ie_gera_proc_cih_w
	from	parametro_faturamento
	where	cd_estabelecimento	= cd_estabelecimento_w;

	select	ie_tipo_atendimento,
		obter_convenio_atendimento(nr_atendimento) cd_convenio_w,
		coalesce(ie_clinica,0)
	into STRICT	ie_tipo_atendimento_w,
		cd_convenio_w,
		ie_clinica_w
	from	atendimento_paciente
	where	nr_atendimento	= nr_atendimento_p;

	if (ie_gera_proc_cih_w	= 'S') and (cd_procedimento_w	= 0) then


		ie_origem_proced_w	:= (obter_proc_principal(nr_atendimento_p, cd_convenio_w, ie_tipo_atendimento_w, 0, 'IO'))::numeric;
		cd_procedimento_w	:= (obter_proc_principal(nr_atendimento_p, cd_convenio_w, ie_tipo_atendimento_w, 0, 'CD'))::numeric;
	end if;

	if (cd_procedimento_w <> 0) then

		select  coalesce(max(cd_procedimento_sus),0),
			coalesce(max(ie_origem_proced_sus),0)
		into STRICT	cd_procedimento_sus_w,
			ie_origem_proced_sus_w
		from	procedimento_conv_sus
		where	cd_procedimento  = cd_procedimento_w
		and	ie_origem_proced = ie_origem_proced_w
		and	coalesce(ie_tipo_atendimento,ie_tipo_atendimento_w) = ie_tipo_atendimento_w
		and	coalesce(ie_clinica,ie_clinica_w) = ie_clinica_w;

		if (cd_procedimento_sus_w <> 0) then

			If (ie_origem_CID_w = 'D') then

				select 	max(cd_doenca)
				into STRICT 	cd_cid_primario_w
				from	diagnostico_doenca
				where 	ie_classificacao_doenca = 'P'
				and	nr_atendimento = nr_atendimento_p;

				select 	max(cd_doenca)
				into STRICT	cd_cid_secundario_w
				from	diagnostico_doenca
				where 	ie_classificacao_doenca = 'S'
				and	nr_atendimento = nr_atendimento_p;

			else
				select 	max(cd_doenca_cid),
					max(cd_cid_secundario)
				into STRICT 	cd_cid_primario_w,
					cd_cid_secundario_w
				from	procedimento
				where 	cd_procedimento = cd_procedimento_sus_w
				and	ie_origem_proced = ie_origem_proced_sus_w;

			end if;

insert into procedimento_paciente_cih(nr_atendimento, nr_sequencia, cd_procedimento, ie_origem_proced,
							dt_atualizacao, nm_usuario, cd_cid_primario, cd_cid_secundario)
			values (nr_atendimento_p, 1, cd_procedimento_sus_w,ie_origem_proced_sus_W,
							clock_timestamp(), nm_usuario_p, cd_cid_primario_w, cd_cid_secundario_w);

		end if;

	end if;
end if;


end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_procedimento_cih_atend ( nr_atendimento_p bigint, nm_usuario_p text) FROM PUBLIC;

