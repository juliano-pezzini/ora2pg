-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_inserir_proximo_grupo_aud ( nr_seq_analise_p bigint, nr_seq_grupo_p bigint, ds_observacao_p text, nr_seq_grupo_atual_p bigint, ie_encaminhar_p text, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE


nm_grupo_w			varchar(255);
ie_status_w			varchar(1);
nr_seq_ordem_w			bigint;
nr_seq_ordem_ww			bigint;
nr_seq_grupo_w			bigint;
nr_seq_grupo_ww			bigint;
qt_grupos_finalizados_w		bigint;
qt_grupo_ordem_w		integer;
dt_liberacao_w			timestamp;

C01 CURSOR FOR
	SELECT 	nr_seq_grupo,
		nr_seq_ordem
	from   	pls_auditoria_conta_grupo
	where  	nr_Seq_analise 	= nr_seq_analise_p
	and	nr_seq_ordem	> nr_seq_ordem_w;


BEGIN
if (coalesce( ie_encaminhar_p, 'N') = 'S')then
	/*Obtem a maior ordem do grupo com a  auditoria encerrada */

	select	max(nr_seq_ordem),
		max(dt_liberacao),
		max(nr_seq_grupo)
	into STRICT	nr_seq_ordem_w,
		dt_liberacao_w,
		nr_seq_grupo_w
	from	pls_auditoria_conta_grupo
	where	nr_seq_analise	= nr_seq_analise_p
	and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '');
	/*ie_encaminhar é quando for chamado pelo botão direito da OPS - Gestão de análise de produção médica */

	/*Se existir grupo com analise encerrada*/

	if (dt_liberacao_w IS NOT NULL AND dt_liberacao_w::text <> '') and (nr_seq_ordem_w IS NOT NULL AND nr_seq_ordem_w::text <> '') then
		/*Tratar se esta ordem vai existir no fluxo, nao pode existir ordens iguais*/

		/*Obtem se existe este grupo  na analise com mesma ordem do novo grupo a ser inserido*/

		select	max(nr_seq_grupo)
		into STRICT	nr_seq_grupo_ww
		from	pls_auditoria_conta_grupo
		where	nr_seq_analise	= nr_seq_analise_p
		and	nr_seq_grupo 	= nr_seq_grupo_p
		and	nr_seq_ordem	= nr_seq_ordem_w; -- verificando se o que esta inserindo é o mesmo que foi encerrado
		if (coalesce(nr_seq_grupo_ww,0) > 0) then
			nm_grupo_w := pls_obter_nome_grupo_auditor(nr_seq_grupo_p);

			--'O grupo '||nm_grupo_w||' já existe na análise com a ordem '||nr_seq_ordem_w||'. Não é possivel inserir um grupo sequencial a ele mesmo.'
			CALL wheb_mensagem_pck.exibir_mensagem_abort(181113, 'nm_grupo_w='||nm_grupo_w||';nr_seq_ordem_w='||nr_seq_ordem_w);
		end if;

		select	max(nr_seq_grupo)
		into STRICT	nr_seq_grupo_ww
		from	pls_auditoria_conta_grupo
		where	nr_seq_analise	= nr_seq_analise_p
		and	nr_seq_ordem	= nr_seq_ordem_w;

		if (coalesce(nr_seq_grupo_ww,0) > 0) then
			update 	pls_auditoria_conta_grupo
			set	nr_seq_ordem 	= (nr_seq_ordem + 1),
				dt_atualizacao	= clock_timestamp(),
				nm_usuario	= nm_usuario_p
			where	nr_Seq_analise  = nr_seq_analise_p
			and	nr_seq_ordem 	> nr_Seq_ordem_w;
		end if;

		nr_seq_ordem_ww	:= coalesce(nr_seq_ordem_w,0) + 1;

		select	nextval('pls_auditoria_conta_grupo_seq')
		into STRICT	nr_seq_grupo_w
		;

		insert into pls_auditoria_conta_grupo(nr_sequencia,
			nr_seq_analise,
			nr_seq_grupo,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_ordem,
			ie_manual,
			ds_observacao)
		values (nr_seq_grupo_w,
			nr_seq_analise_p,
			nr_seq_grupo_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_ordem_ww,
			'S',
			ds_observacao_p);
	else
		/* AQUI VAI INSERIR O GRUPO AUDITOR POR ULTIMO NO FLUXO, como foi idealizado*/

		/*Obtem a maior ordem que existe na analise*/

		select	max(nr_seq_ordem)
		into STRICT	nr_seq_ordem_w
		from	pls_auditoria_conta_grupo
		where	nr_seq_analise = nr_seq_analise_p;

		/*Obtem se existe este mesmo grupo  na analise, com a  mesma ordem */

		select	max(nr_seq_grupo)
		into STRICT	nr_seq_grupo_ww
		from	pls_auditoria_conta_grupo
		where	nr_seq_analise	= nr_seq_analise_p
		and	nr_seq_ordem	= nr_seq_ordem_w
		and	nr_seq_grupo	= nr_seq_grupo_p;

		if (coalesce(nr_seq_grupo_ww,0) > 0) then
			nm_grupo_w	:= pls_obter_nome_grupo_auditor(nr_seq_grupo_p);

			--'O grupo '||nm_grupo_w||' já existe na análise com a ordem '||nr_seq_ordem_w||'. Não é possivel inserir um grupo sequencial a ele mesmo.'
			CALL wheb_mensagem_pck.exibir_mensagem_abort(181113, 'NM_GRUPO_W=' || nm_grupo_w || ';NR_SEQ_ORDEM_W=' || nr_seq_ordem_w);
		end if;

		nr_seq_ordem_ww	:= coalesce(nr_seq_ordem_w,0) + 1;

		select	nextval('pls_auditoria_conta_grupo_seq')
		into STRICT	nr_seq_grupo_w
		;

		insert into pls_auditoria_conta_grupo(nr_sequencia,
			nr_seq_analise,
			nr_seq_grupo,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_ordem,
			ie_manual,
			ds_observacao)
		values (nr_seq_grupo_w,
			nr_seq_analise_p,
			nr_seq_grupo_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_ordem_ww,
			'S',
			ds_observacao_p);
	end if;

	select 	count(nr_sequencia)
	into STRICT	qt_grupos_finalizados_w
	from 	pls_auditoria_conta_grupo
	where	nr_Seq_analise = nr_seq_analise_p
	and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '');

	/*Se existir um grupo finalizado (ou seja com data de liberação) se coloca a análise em em auditoria senão em aguardando auditoria*/

	if (qt_grupos_finalizados_w = 0) then
		ie_status_w	:= 'G';
	else
		ie_status_w	:= 'A';
	end if;

	CALL pls_alterar_status_analise_cta(nr_seq_analise_p, ie_status_w, 'PLS_INSERIR_PROXIMO_GRUPO_AUD', nm_usuario_p, cd_estabelecimento_p);

	update	pls_analise_conta
	set	ie_auditoria	= 'S'
	where	nr_sequencia	= nr_seq_analise_p;
end if;

CALL pls_atualizar_grupo_penden(nr_seq_analise_p, cd_estabelecimento_p, nm_usuario_p);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_inserir_proximo_grupo_aud ( nr_seq_analise_p bigint, nr_seq_grupo_p bigint, ds_observacao_p text, nr_seq_grupo_atual_p bigint, ie_encaminhar_p text, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

