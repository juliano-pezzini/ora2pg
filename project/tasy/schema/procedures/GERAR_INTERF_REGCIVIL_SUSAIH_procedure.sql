-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_interf_regcivil_susaih ( nr_interno_conta_p bigint, nm_usuario_p text) AS $body$
DECLARE



nr_sequencia_w			bigint;
nr_registro_dn_w		bigint;
nm_recem_nato_w			varchar(70);
cd_cgc_cartorio_w		varchar(14);
nr_livro_w			varchar(8);
nr_folha_w			varchar(4);
nr_termo_w			varchar(8);
dt_emissao_rn_w			timestamp;
nr_aih_w			bigint;
ds_registro_w			varchar(1008)	:= '';
ds_razao_social_w		varchar(20)	:= '';
qt_registro_w			smallint	:= 0;
nr_seq_reg_civil_w		smallint	:= 1;
nr_linha_proced_w		varchar(3)	:= '0';
nr_matricula_rn_w		varchar(32);
ie_matricula_w			varchar(1);

/* Obter os Registro Civil da AIH, máximo 8*/

C01 CURSOR FOR
SELECT	nr_registro_dn,
	coalesce(nm_recem_nato,' ') nm_recem_nato,
	coalesce(cd_cgc_cartorio,' ') cd_cgc_cartorio,
	nr_livro,
	nr_folha,
	nr_termo,
	coalesce(dt_emissao_rn, clock_timestamp()) dt_emissao_rn,
	nr_matricula_rn
from	sus_registro_civil
where	nr_aih	= nr_aih_w;

type 		fetch_array is table of c01%rowtype;
s_array 	fetch_array;
i		integer := 1;
type vetor is table of fetch_array index by integer;
vetor_c01_w			vetor;


BEGIN

ie_matricula_w :=	obter_valor_param_usuario(1123,111,obter_perfil_ativo,nm_usuario_p,0); --sus aih, seq parametro aih, cd_perfil sus unificado, usuario, estabelecimento
select	nr_aih
into STRICT	nr_aih_w
from	sus_aih_unif
where	nr_interno_conta	= nr_interno_conta_p;

open c01;
loop
fetch c01 bulk collect into s_array limit 1000;
	vetor_c01_w(i) := s_array;
	i := i + 1;
EXIT WHEN NOT FOUND; /* apply on c01 */
end loop;
close c01;

for i in 1..vetor_c01_w.count loop
	begin
	s_array := vetor_c01_w(i);
	for z in 1..s_array.count loop
		begin
		nr_registro_dn_w	:= s_array[z].nr_registro_dn;
		nm_recem_nato_w		:= s_array[z].nm_recem_nato;
		cd_cgc_cartorio_w	:= s_array[z].cd_cgc_cartorio;
		nr_livro_w		:= s_array[z].nr_livro;
		nr_folha_w		:= s_array[z].nr_folha;
		nr_termo_w		:= s_array[z].nr_termo;
		dt_emissao_rn_w		:= s_array[z].dt_emissao_rn;
		nr_matricula_rn_w	:= s_array[z].nr_matricula_rn;

		/* Flag de controle da quantidade de registros */

		qt_registro_w	:= qt_registro_w + 1;

		begin
		select	nr_linha_proc
		into STRICT	nr_linha_proced_w
		from	w_susaih_interf_item
		where	cd_procedimento		= 801010047
		and	nr_interno_conta	= nr_interno_conta_p  LIMIT 1;
		exception
			when others then
			--R.aise_Application_Error(-20011, 'Falta a informação do procedimento de incentivo civil para a conta: ' || nr_interno_conta_p || ' - ' || sqlerrm);
			CALL wheb_mensagem_pck.exibir_mensagem_abort(263374,'nr_interno_conta_p='||nr_interno_conta_p);
		end;

		begin
		select	substr(coalesce(max(ds_razao_social),' '),1,20)
		into STRICT	ds_razao_social_w
		from	pessoa_juridica
		where	cd_cgc	= cd_cgc_cartorio_w;
		exception
			when others then
			ds_razao_social_w := ' ';
		end;

		nr_linha_proced_w	:= lpad(nr_linha_proced_w,3,'0');

		if (ie_matricula_w = 'S') then
			begin
			nm_recem_nato_w := ' ';
			ds_razao_social_w := ' ';
			ds_registro_w	:= 	ds_registro_w || rpad(nr_registro_dn_w,11,' ') || rpad(nm_recem_nato_w,70,' ') || rpad(ds_razao_social_w,40,' ') ||
								to_char(dt_emissao_rn_w, 'yyyymmdd') ||	nr_linha_proced_w || rpad(nr_matricula_rn_w,32,' ');
			end;
		else
			begin
			ds_registro_w	:= 	ds_registro_w || rpad(nr_registro_dn_w,11,' ') || rpad(nm_recem_nato_w,70,' ') || rpad(ds_razao_social_w,20,' ') ||
								rpad(nr_livro_w,8,' ') || rpad(nr_folha_w,4,' ') || rpad(nr_termo_w,8,' ') || to_char(dt_emissao_rn_w, 'yyyymmdd') ||
								nr_linha_proced_w;
			end;
		end if;

		/* Obter a sequence da tabela*/

		select	nextval('w_susaih_interf_regcivil_seq')
		into STRICT	nr_sequencia_w
		;

		insert into w_susaih_interf_regcivil(
			nr_sequencia,
			nr_registro_dn,
			nm_recem_nato,
			cd_cgc_cartorio,
			nr_livro,
			nr_folha,
			nr_termo,
			dt_emissao_rn,
			nr_aih,
			nr_interno_conta,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			ds_registro_civil,
			ds_razao_social,
			nr_seq_reg_civil,
			nr_linha_proced,
			nr_matricula_rn)
		values (	nr_sequencia_w,
			nr_registro_dn_w,
			nm_recem_nato_w,
			cd_cgc_cartorio_w,
			nr_livro_w,
			nr_folha_w,
			nr_termo_w,
			dt_emissao_rn_w,
			nr_aih_w,
			nr_interno_conta_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			ds_registro_w,
			ds_razao_social_w,
			nr_seq_reg_civil_w,
			nr_linha_proced_w,
			nr_matricula_rn_w);

		update	w_susaih_interf_regcivil
		set	ds_registro_civil	= rpad(ds_registro_w,1312,0)
		where	nr_aih			= nr_aih_w
		and	nr_seq_reg_civil	= nr_seq_reg_civil_w;

		if (qt_registro_w	= 8) then
			qt_registro_w		:= 0;
			ds_registro_w		:= '';
			nr_seq_reg_civil_w	:= nr_seq_reg_civil_w + 1;
		end if;

		end;
	end loop;
	end;
end loop;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_interf_regcivil_susaih ( nr_interno_conta_p bigint, nm_usuario_p text) FROM PUBLIC;

