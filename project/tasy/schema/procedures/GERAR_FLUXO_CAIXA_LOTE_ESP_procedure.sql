-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_fluxo_caixa_lote_esp ( nr_seq_lote_fluxo_p bigint, cd_estabelecimento_p bigint, dt_inicial_p timestamp, dt_final_p timestamp, nm_usuario_p text, cd_empresa_p bigint, ie_restringe_estab_p text) AS $body$
DECLARE

 
/*--------------------------------------------------------------- ATENÇÃO ----------------------------------------------------------------*/
 
/* Cuidado ao realizar alterações no fluxo de caixa em lote. Toda e qualquer alteração realizada em qualquer uma */
 
/* das procedures do fluxo de caixa em lote deve ser cuidadosamente verificada e realizada no fluxo de caixa   */
 
/* convencional. Devemos garantir que os dois fluxos de caixa tragam os mesmos valores no resultado, evitando   */
 
/* assim que existam diferenças entre os fluxos de caixa.                                                */
 
/*--------------- AO ALTERAR O FLUXO DE CAIXA EM LOTE ALTERAR TAMBÉM O FLUXO DE CAIXA ---------------*/
 
 
ie_regra_origem_w        varchar(255);
ie_regra_data_w         varchar(255);
ie_acumular_fluxo_w       varchar(255);
nr_dia_fixo_w          bigint;
qt_mes_anterior_w        bigint;
vl_fixo_w            double precision;
cd_conta_financ_w        bigint;
nr_seq_regra_w         bigint;
dt_vigencia_inicial_w      timestamp;
dt_vigencia_final_w       timestamp;
dt_inicial_w          timestamp;
dt_final_w           timestamp;
ie_media_regra_w		varchar(1);
ie_classif_regra_w		regra_fluxo_caixa.ie_classif_fluxo%type;
ie_classif_fluxo_w		regra_fluxo_caixa.ie_classif_fluxo%type;
cd_moeda_w			fluxo_caixa_lote.cd_moeda%type;

 
C01 CURSOR FOR 
SELECT nr_sequencia, 
	cd_conta_financ, 
	ie_regra_origem, 
	ie_regra_data, 
	nr_dia_fixo, 
	qt_mes_anterior, 
	vl_fixo, 
	dt_vigencia_inicial, 
	dt_vigencia_final, 
	ie_acumular_fluxo, 
	coalesce(ie_classif_fluxo,'R') 
from  regra_fluxo_caixa 
where (cd_estabelecimento = cd_estabelecimento_p or ie_restringe_estab_p = 'N') 
and	coalesce(ie_classif_fluxo,'R') = ie_classif_fluxo_w;


BEGIN 
 
select	CASE WHEN ie_classif_fluxo='T' THEN 'R'  ELSE ie_classif_fluxo END , 
	cd_moeda 
into STRICT	ie_classif_fluxo_w, 
	cd_moeda_w 
from	fluxo_caixa_lote 
where	nr_sequencia = nr_seq_lote_fluxo_p;
 
open C01;
loop 
fetch C01 into 
    nr_seq_regra_w, 
    cd_conta_financ_w, 
    ie_regra_origem_w, 
    ie_regra_data_w, 
    nr_dia_fixo_w, 
    qt_mes_anterior_w, 
    vl_fixo_w, 
    dt_vigencia_inicial_w, 
    dt_vigencia_final_w, 
    ie_acumular_fluxo_w, 
	ie_classif_regra_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
    dt_inicial_w      := dt_inicial_p;
    if (dt_vigencia_inicial_w IS NOT NULL AND dt_vigencia_inicial_w::text <> '') and (dt_vigencia_inicial_w > dt_inicial_p) then 
        dt_inicial_w  := dt_vigencia_inicial_w;
    end if;
 
    dt_final_w       := dt_final_p;
    if (dt_vigencia_final_w IS NOT NULL AND dt_vigencia_final_w::text <> '') and (dt_vigencia_final_w < dt_final_p) then 
        dt_final_w   := dt_vigencia_final_w;
    end if;
 
    if (ie_regra_origem_w = 'FS') and (ie_classif_regra_w = 'R') then 
		CALL GERAR_FLUXO_CAIXA_LOTE_SUS(	nr_seq_lote_fluxo_p, 
						nr_seq_regra_w, 
						cd_estabelecimento_p, 
						cd_conta_financ_w, 
						ie_regra_data_w, 
						nr_dia_fixo_w, 
						qt_mes_anterior_w, 
						dt_inicial_w, 
						dt_final_w, 
						nm_usuario_p, 
						cd_empresa_p);
    elsif (ie_regra_origem_w = 'RP') and (ie_classif_regra_w = 'R') then 
        CALL GERAR_FLUXO_CAIXA_LOTE_REPASSE(	nr_seq_lote_fluxo_p, 
						nr_seq_regra_w, 
						cd_estabelecimento_p, 
						cd_conta_financ_w, 
						ie_regra_data_w, 
						nr_dia_fixo_w, 
						qt_mes_anterior_w, 
						dt_inicial_w, 
						dt_final_w, 
						nm_usuario_p, 
						cd_empresa_p);
    elsif (ie_regra_origem_w = 'VF') then 
 
		select coalesce(ie_media_regra,'N') 
		into STRICT	ie_media_regra_w 
		from  conta_financeira 
		where  cd_conta_financ = cd_conta_financ_w;
 
			if (ie_media_regra_w = 'N') then 
			CALL GERAR_FLUXO_CAIXA_LOTE_VL_FIXO(	nr_seq_lote_fluxo_p, 
							cd_conta_financ_w, 
							nr_dia_fixo_w, 
							vl_fixo_w, 
							dt_inicial_w, 
							dt_final_w, 
							cd_empresa_p, 
							nr_seq_regra_w, 
							cd_estabelecimento_p, 
							nm_usuario_p);
			elsif (ie_media_regra_w = 'S') then 
			CALL GERAR_FLUXO_CAIXA_LOTE_VL_REGR(	nr_seq_lote_fluxo_p, 
							cd_conta_financ_w, 
							nr_dia_fixo_w, 
							vl_fixo_w, 
							dt_inicial_w, 
							dt_final_w, 
							cd_empresa_p, 
							nr_seq_regra_w, 
							cd_estabelecimento_p, 
							nm_usuario_p);
		end if;
    elsif (ie_regra_origem_w = 'MA') and (ie_classif_regra_w = 'R') then		 
		CALL GERAR_FLUXO_CAIXA_LOTE_MES_ANT(	nr_seq_lote_fluxo_p, 
						cd_estabelecimento_p, 
						cd_conta_financ_w, 
						ie_regra_data_w, 
						nr_dia_fixo_w, 
						qt_mes_anterior_w, 
						dt_inicial_w, 
						dt_final_w, 
						ie_acumular_fluxo_w, 
						nm_usuario_p, 
						cd_empresa_p, 
						nr_seq_regra_w);
	elsif (ie_regra_origem_w = 'TC') and (ie_classif_regra_w = 'P') then 
		GERAR_FLUXO_REGRA_SALDO(cd_conta_financ_w, 
					nr_seq_regra_w, 
					dt_inicial_w, 
					dt_final_w, 
					cd_empresa_p, 
					cd_estabelecimento_p, 
					nm_usuario_p, 
					ie_classif_regra_w, 
					ie_restringe_estab_p, 
					'L', 
					nr_seq_lote_fluxo_p, 
					cd_moeda_w);
    end if;
end loop;
close C01;
 
/*NAO COLOCAR COMMIT NESTA PROCEDURE*/
 
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_fluxo_caixa_lote_esp ( nr_seq_lote_fluxo_p bigint, cd_estabelecimento_p bigint, dt_inicial_p timestamp, dt_final_p timestamp, nm_usuario_p text, cd_empresa_p bigint, ie_restringe_estab_p text) FROM PUBLIC;

