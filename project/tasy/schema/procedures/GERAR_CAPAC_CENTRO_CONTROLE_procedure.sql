-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_capac_centro_controle ( cd_estabelecimento_p bigint, cd_tabela_custo_p bigint, cd_centro_controle_p bigint, nr_seq_tabela_p bigint, nm_usuario_p text) AS $body$
DECLARE


cd_nivel_capacidade_w			integer	:=0;
cd_redutor_capacidade_w			integer	:=0;
ie_tipo_redutor_w				varchar(2);
nr_sequencia_nivel_w			smallint	:=0;
nr_max_sequencia_nivel_w			smallint	:=0;
nr_registros_desc_w			smallint	:=0;
cd_centro_controle_w			bigint	:= cd_centro_controle_p;
cd_estabelecimento_w			bigint;
cd_estab_centro_w			bigint;
cd_empresa_w				bigint;

c00 CURSOR FOR
SELECT	a.cd_estabelecimento,
	a.cd_centro_controle
from	estabelecimento b,
	centro_controle a
where	a.cd_estabelecimento	= b.cd_estabelecimento
--and	a.cd_estabelecimento	= nvl(cd_estabelecimento_w, a.cd_estabelecimento)

--and	b.cd_empresa		= cd_empresa_w
and	a.ie_situacao		= 'A'
and	a.ie_tipo_centro_controle in ('2','5','3')
and	a.cd_centro_controle	= coalesce(cd_centro_controle_w, a.cd_centro_controle)
/*OS1992919 - Jean - Projeto Da vita - Inicio */

and	exists (	SELECT	1
		from	tabela_custo_acesso_v tca
		where	tca.nr_sequencia	= nr_seq_tabela_p
		and	tca.cd_empresa		= b.cd_empresa
		and	tca.cd_estabelecimento	= a.cd_estabelecimento);
/*OS1992919 - Jean - Projeto Da vita - Final*/

c01 CURSOR FOR
SELECT	cd_nivel_capacidade
from	nivel_capacidade
where	ie_situacao 		= 'A';

c02 CURSOR FOR
SELECT	cd_redutor_capacidade
from	redutor_capacidade
where	cd_nivel_capacidade	= cd_nivel_capacidade_w
and	ie_situacao		= 'A';


BEGIN

if (cd_centro_controle_p = 0) then
	cd_centro_controle_w	:= null;
end if;
	
/*select	max(cd_empresa),
	max(cd_estabelecimento)
into	cd_empresa_w,
	cd_estabelecimento_w
from	tabela_custo
where	nr_sequencia	= nr_seq_tabela_p;*/
		
open C00;
loop
fetch C00 into
	cd_estab_centro_w,
	cd_centro_controle_w;
EXIT WHEN NOT FOUND; /* apply on C00 */
	begin
	
	open c01;
	loop
	fetch c01 into
		cd_nivel_capacidade_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
			
		select	coalesce(max(nr_sequencia_nivel),0),
			coalesce(max(CASE WHEN 	cd_nivel_capacidade=cd_nivel_capacidade_w THEN					nr_sequencia_nivel  ELSE 0 END ),0)
		into STRICT	nr_max_sequencia_nivel_w,
			nr_sequencia_nivel_w	
		from	capac_centro_controle
		where	cd_estabelecimento	= cd_estab_centro_w
		and	nr_seq_tabela		= nr_seq_tabela_p
		and	cd_centro_controle	= cd_centro_controle_w;
		
		if (nr_sequencia_nivel_w = 0) then
			nr_sequencia_nivel_w	:= nr_max_sequencia_nivel_w + 1;
		end if;
		
		begin
		insert into capac_centro_controle(
			cd_estabelecimento,
			cd_tabela_custo,
			cd_centro_controle,
			nr_sequencia_nivel,
			cd_nivel_capacidade,
			qt_disponibilidade,
			qt_base_ponto_equil,
			dt_atualizacao,
			dt_atualizacao_nrec,
			nm_usuario,
			nm_usuario_nrec,
			nr_seq_tabela)
		values (	cd_estab_centro_w,
			cd_tabela_custo_p,
			cd_centro_controle_w,
			nr_sequencia_nivel_w,
			cd_nivel_capacidade_w,
			0,
			0,
			clock_timestamp(),
			clock_timestamp(),
			nm_usuario_p,
			nm_usuario_p,
			nr_seq_tabela_p);
		exception when others then
			nr_registros_desc_w	:= nr_registros_desc_w + 1;	
		end;
		
		open c02;
		loop
		fetch c02 into
			cd_redutor_capacidade_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			begin
			insert into reduc_capac_centro_controle(
				cd_estabelecimento,
				cd_tabela_custo,
				cd_centro_controle,
				nr_sequencia_nivel,
				cd_redutor_capacidade,
				qt_reducao,
				dt_atualizacao,
				dt_atualizacao_nrec,
				nm_usuario,
				nm_usuario_nrec,
				nr_seq_tabela)
			values (	cd_estab_centro_w,
				cd_tabela_custo_p,
				cd_centro_controle_w,
				nr_sequencia_nivel_w,
				cd_redutor_capacidade_w,
				0,
				clock_timestamp(),
				clock_timestamp(),
				nm_usuario_p,
				nm_usuario_p,
				nr_seq_tabela_p);
			exception when others then
				nr_registros_desc_w	:= nr_registros_desc_w + 1;	
			end;
		end loop;
		close c02;
	end loop;
	close c01;
end;
end loop;
close C00;

commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_capac_centro_controle ( cd_estabelecimento_p bigint, cd_tabela_custo_p bigint, cd_centro_controle_p bigint, nr_seq_tabela_p bigint, nm_usuario_p text) FROM PUBLIC;

