-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_retorno_titulo ( nr_titulo_p bigint, nr_seq_retorno_p bigint, nr_convenio_p bigint, nm_usuario_p text, ds_mensagem_p INOUT text) AS $body$
DECLARE

 
cd_convenio_w			integer;
cd_estabelecimento_w		integer;

nr_interno_conta_w		bigint;
cd_autorizacao_w		varchar(20);
vl_guia_w			double precision;

nr_sequencia_w			bigint;
vl_pago_w			double precision;
vl_glosado_w			double precision;

cd_convenio_retorno_w		integer;
vl_conta_w			double precision;
nr_seq_protocolo_w		bigint;
nr_interno_conta_titulo_w	bigint;
vl_saldo_titulo_w		double precision;
qt_item_retorno_w		integer;
vl_total_pago_w			double precision;
vl_pago_grg_w			double precision;
vl_glosa_grg_w			double precision;
nr_titulo_w			bigint;
ie_libera_repasse_w		varchar(5);
nr_mes_ant_w			bigint;
vl_total_guias_w		double precision;
vl_pago_guia_w			double precision;
vl_saldo_guia_w			double precision;
ie_permitecontasoutroretorno_w	varchar(1);

C01 CURSOR FOR 
SELECT	b.nr_interno_conta, 
	b.cd_autorizacao, 
	b.vl_guia, 
	a.vl_conta, 
	obter_titulo_conta_guia(a.nr_interno_conta,b.cd_autorizacao,nr_seq_retorno_p,a.nr_seq_protocolo) nr_titulo, 
	obter_saldo_conpaci(b.nr_interno_conta,b.cd_autorizacao) vl_saldo_guia 
from	conta_paciente_guia b, 
	conta_paciente a 
where	coalesce(b.dt_convenio,clock_timestamp())	>= clock_timestamp() - coalesce(nr_mes_ant_w,3) * 30 
and	a.nr_interno_conta	= b.nr_interno_conta 
and	coalesce(a.nr_conta_convenio,0)	= CASE WHEN coalesce(nr_convenio_p,0)=0 THEN  coalesce(a.nr_conta_convenio,0)  ELSE nr_convenio_p END  
and	a.ie_status_acerto	= 2 
and	coalesce(a.ie_cancelamento::text, '') = '' 
and	a.cd_estabelecimento	= cd_estabelecimento_w 
and	a.nr_seq_protocolo	= nr_seq_protocolo_w;

C02 CURSOR FOR 
SELECT	b.nr_interno_conta, 
	b.cd_autorizacao, 
	b.vl_guia, 
	a.vl_conta, 
	obter_titulo_conta_guia(a.nr_interno_conta,b.cd_autorizacao,nr_seq_retorno_p,null) nr_titulo, 
	obter_saldo_conpaci(b.nr_interno_conta,b.cd_autorizacao) vl_saldo_guia 
from	conta_paciente_guia b, 
	conta_paciente a 
where	coalesce(b.dt_convenio,clock_timestamp())	>= clock_timestamp() - coalesce(nr_mes_ant_w,3) * 30 
and	a.nr_interno_conta	= b.nr_interno_conta 
and	coalesce(a.nr_conta_convenio,0)	= CASE WHEN coalesce(nr_convenio_p,0)=0 THEN  coalesce(a.nr_conta_convenio,0)  ELSE nr_convenio_p END  
and	a.ie_status_acerto	= 2 
and	coalesce(a.ie_cancelamento::text, '') = '' 
and	a.cd_estabelecimento	= cd_estabelecimento_w 
and	a.nr_interno_conta	= nr_interno_conta_titulo_w;


BEGIN 
 
select	coalesce(CD_CONVENIO_PARTICULAR, cd_convenio) -- Edgar 17/06/2008, OS 82370 
into STRICT	cd_convenio_retorno_w 
from	convenio_retorno 
where	nr_sequencia	= nr_seq_retorno_p;
 
begin 
select 	nr_seq_protocolo, 
	nr_interno_conta 
into STRICT	nr_seq_protocolo_w, 
	nr_interno_conta_titulo_w 
from 	titulo_receber 
where 	nr_titulo = nr_titulo_p;
exception 
when no_data_found then 
	/* Título não encontrado no sistema! */
	 
	CALL wheb_mensagem_pck.exibir_mensagem_abort(188815);
end;
 
 
ie_permitecontasoutroretorno_w := obter_param_usuario(27, 100, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_permitecontasoutroretorno_w);
 
 
select 	coalesce(sum(vl_saldo_titulo),0) 
into STRICT	vl_saldo_titulo_w 
from	titulO_receber 
where 	nr_titulo = nr_titulo_p;
 
vl_total_pago_w	  := 0;
 
if (nr_seq_protocolo_w IS NOT NULL AND nr_seq_protocolo_w::text <> '') then 
	 
	select	cd_estabelecimento, 
		cd_convenio 
	into STRICT	cd_estabelecimento_w, 
		cd_convenio_w 
	from	protocolo_convenio 
	where	nr_seq_protocolo	= nr_seq_protocolo_w;
 
	if (cd_convenio_retorno_w <> cd_convenio_w) then 
		/* Convênio do retorno não confere com convênio do titulo! */
 
		CALL wheb_mensagem_pck.exibir_mensagem_abort(188816);
	end if;
 
	nr_mes_ant_w := obter_param_usuario(27, 9, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, nr_mes_ant_w);
 
	select	sum(vl_saldo_guia) 
	into STRICT	vl_total_guias_w 
	from (SELECT	obter_saldo_conpaci(b.nr_interno_conta,b.cd_autorizacao) vl_saldo_guia, 
			b.vl_guia 
		from	conta_paciente_guia b, 
			conta_paciente a 
		where	coalesce(b.dt_convenio,clock_timestamp())	>= clock_timestamp() - coalesce(nr_mes_ant_w,3) * 30 
		and	a.nr_interno_conta	= b.nr_interno_conta 
		and	coalesce(a.nr_conta_convenio,0)	= CASE WHEN coalesce(nr_convenio_p,0)=0 THEN  coalesce(a.nr_conta_convenio,0)  ELSE nr_convenio_p END  
		and	a.ie_status_acerto	= 2 
		and	coalesce(a.ie_cancelamento::text, '') = '' 
		and	a.cd_estabelecimento	= cd_estabelecimento_w 
		and	a.nr_seq_protocolo	= nr_seq_protocolo_w) alias10 
	where (vl_saldo_guia > 0) or (vl_guia < 0 and ((coalesce(vl_guia,0) - coalesce(vl_saldo_guia,0)) = 0));
 
	open c01;
	loop 
	fetch c01 into 
		nr_interno_conta_w, 
		cd_autorizacao_w, 
		vl_guia_w, 
		vl_conta_w, 
		nr_titulo_w, 
		vl_saldo_guia_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
 
		select	count(*) 
		into STRICT	qt_item_retorno_w 
		from	convenio_retorno a, 
			convenio_retorno_item b 
		where	a.cd_convenio		= cd_convenio_w 
		and	a.cd_estabelecimento	= cd_estabelecimento_w 
		and	b.nr_seq_retorno	= a.nr_sequencia 
		and	b.nr_titulo		= nr_titulo_w 
		and	b.cd_autorizacao	= cd_autorizacao_w 
		and	b.nr_interno_conta	= nr_interno_conta_w;
 
		if	((vl_saldo_guia_w > 0) or 
			((vl_guia_w < 0) and ((coalesce(vl_guia_w,0) - coalesce(vl_saldo_guia_w,0)) = 0))) and (coalesce(vl_total_guias_w,0) <> 0) and (coalesce(vl_saldo_titulo_w,0) <> 0) then 
 
			/* ahoffelder - OS 433342 - 02/05/2012 - coloquei proporcional porque o título pode ser proveniente de desdobramento, 
			sendo que várias guias podem estar vinculadas a vários títulos (N para N) */
 
			vl_pago_guia_w	:= coalesce(vl_saldo_guia_w,0) / coalesce(vl_total_guias_w,0) * coalesce(vl_saldo_titulo_w,0);
 
			select	coalesce(max(a.ie_libera_repasse),'S') 
			into STRICT	ie_libera_repasse_w 
			from	regra_campo_lib_rep a 
			where	a.cd_estabelecimento		= cd_estabelecimento_w 
			and	coalesce(a.cd_convenio,cd_convenio_w) = cd_convenio_w 
			and	a.ie_regra	= 1;
			 
			if (coalesce(ie_permitecontasoutroretorno_w,'S') = 'N')	and (obter_conta_outro_retorno(nr_seq_retorno_p,nr_interno_conta_w,cd_autorizacao_w) <> 0) then 
				/* Esta conta já está vinculada a outro retorno em aberto. Parâmetro [100] */
 
				CALL wheb_mensagem_pck.exibir_mensagem_abort(255816);
			end if;
			 
			select	nextval('convenio_retorno_item_seq') 
			into STRICT	nr_sequencia_w 
			;
			 
			insert into convenio_retorno_item(nr_sequencia, 
				nr_seq_retorno, 
				vl_pago, 
				vl_glosado, 
				dt_atualizacao,	 
				nm_usuario, 
				ie_glosa, 
				nr_interno_conta, 
				cd_autorizacao,	 
				vl_adicional, 
				vl_amenor, 
				ie_libera_repasse, 
				ie_analisada, 
				nr_titulo, 
				vl_guia) 
			values (	nr_sequencia_w,	 
				nr_seq_retorno_p, 
				coalesce(vl_pago_guia_w,0), 
				0, 
				clock_timestamp(), 
				nm_usuario_p, 
				'N', 
				nr_interno_conta_w, 
				cd_autorizacao_w, 
				0, 
				0, 
				ie_libera_repasse_w, 
				'N', 
				coalesce(nr_titulo_p,nr_titulo_w), 
				coalesce(vl_guia_w,0));
 
		end if;
 
		vl_total_pago_w :=	coalesce(vl_total_pago_w,0) + coalesce(vl_pago_guia_w,0);
 
 
		if	((vl_saldo_titulo_w = 0) or (vl_total_pago_w > vl_saldo_titulo_w)) and (qt_item_retorno_w = 0) then 
 
			if (coalesce(ds_mensagem_p::text, '') = '') then 
							--'Guias não possuem saldo: ' || cd_autorizacao_w; 
				ds_mensagem_p	:= wheb_mensagem_pck.get_texto(304128,'cd_autorizacao='||cd_autorizacao_w);					
 
			else 
				ds_mensagem_p	:= substr((substr(ds_mensagem_p,1,234) || ',' || substr(cd_autorizacao_w,1,20)),1,254);
			end if;
 
		end if;
 
 
	end loop;
	close c01;
 
	if (vl_total_pago_w < vl_saldo_titulo_w) then 
 
		update	convenio_retorno_item 
		set	vl_pago		= coalesce(vl_pago,0) + coalesce(vl_saldo_titulo_w,0) - coalesce(vl_total_pago_w,0) 
		where	nr_sequencia	= nr_sequencia_w;
 
	end if;
 
elsif (nr_interno_conta_titulo_w IS NOT NULL AND nr_interno_conta_titulo_w::text <> '') then 
 
	select	cd_estabelecimento, 
		cd_convenio_parametro 
	into STRICT	cd_estabelecimento_w, 
		cd_convenio_w 
	from	conta_paciente 
	where	nr_interno_conta	= nr_interno_conta_titulo_w;
 
	if (cd_convenio_retorno_w <> cd_convenio_w) then 
		/* Convênio do retorno não confere com convênio do titulo! */
 
		CALL wheb_mensagem_pck.exibir_mensagem_abort(188816);
	end if;
 
	nr_mes_ant_w := obter_param_usuario(27, 9, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, nr_mes_ant_w);
 
	select	sum(vl_saldo_guia) 
	into STRICT	vl_total_guias_w 
	from (SELECT	obter_saldo_conpaci(b.nr_interno_conta,b.cd_autorizacao) vl_saldo_guia, 
			b.vl_guia 
		from	conta_paciente_guia b, 
			conta_paciente a 
		where	coalesce(b.dt_convenio,clock_timestamp())	>= clock_timestamp() - coalesce(nr_mes_ant_w,3) * 30 
		and	a.nr_interno_conta	= b.nr_interno_conta 
		and	coalesce(a.nr_conta_convenio,0)	= CASE WHEN coalesce(nr_convenio_p,0)=0 THEN  coalesce(a.nr_conta_convenio,0)  ELSE nr_convenio_p END  
		and	a.ie_status_acerto	= 2 
		and	coalesce(a.ie_cancelamento::text, '') = '' 
		and	a.cd_estabelecimento	= cd_estabelecimento_w 
		and	a.nr_interno_conta	= nr_interno_conta_titulo_w) alias10 
	where (vl_saldo_guia > 0) or (vl_guia < 0 and ((coalesce(vl_guia,0) - coalesce(vl_saldo_guia,0)) = 0));
 
	open c02;
	loop 
	fetch c02 into 
		nr_interno_conta_w, 
		cd_autorizacao_w, 
		vl_guia_w, 
		vl_conta_w, 
		nr_titulo_w, 
		vl_saldo_guia_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
 
		select	count(*) 
		into STRICT	qt_item_retorno_w 
		from	convenio_retorno_item b, 
			convenio_retorno a 
		where	a.nr_sequencia		= b.nr_seq_retorno 
		and	a.cd_convenio		= cd_convenio_w 
		and	a.cd_estabelecimento	= cd_estabelecimento_w 
		and	b.nr_interno_conta	= nr_interno_conta_w 
		and	b.cd_autorizacao	= cd_autorizacao_w;
 
		if	((vl_saldo_guia_w > 0) or 
			((vl_guia_w < 0) and ((coalesce(vl_guia_w,0) - coalesce(vl_saldo_guia_w,0)) = 0))) and (coalesce(vl_total_guias_w,0) <> 0) and (coalesce(vl_saldo_titulo_w,0) <> 0) then 
 
			/* ahoffelder - OS 433342 - 02/05/2012 - coloquei proporcional porque o título pode ser proveniente de desdobramento, 
			sendo que várias guias podem estar vinculadas a vários títulos (N para N) */
 
			vl_pago_guia_w	:= coalesce(vl_saldo_guia_w,0) / coalesce(vl_total_guias_w,0) * coalesce(vl_saldo_titulo_w,0);
 
			select	coalesce(max(a.ie_libera_repasse),'S') 
			into STRICT	ie_libera_repasse_w 
			from	regra_campo_lib_rep a 
			where	a.cd_estabelecimento		= cd_estabelecimento_w 
			and	coalesce(a.cd_convenio,cd_convenio_w) = cd_convenio_w 
			and	a.ie_regra	= 1;
 
			if (coalesce(ie_permitecontasoutroretorno_w,'S') = 'N')	and (obter_conta_outro_retorno(nr_seq_retorno_p,nr_interno_conta_w,cd_autorizacao_w) <> 0) then 
				/* Esta conta já está vinculada a outro retorno em aberto. Parâmetro [100] */
 
				CALL wheb_mensagem_pck.exibir_mensagem_abort(255816);
			end if;	
			select	nextval('convenio_retorno_item_seq') 
			into STRICT	nr_sequencia_w 
			;
 
			insert into convenio_retorno_item(nr_sequencia, 
				nr_seq_retorno, 
				vl_pago, 
				vl_glosado, 
				dt_atualizacao,	 
				nm_usuario, 
				ie_glosa, 
				nr_interno_conta, 
				cd_autorizacao,	 
				vl_adicional, 
				vl_amenor, 
				ie_libera_repasse, 
				ie_analisada, 
				nr_titulo, 
				vl_guia) 
			values (	nr_sequencia_w,	 
				nr_seq_retorno_p, 
				coalesce(vl_pago_guia_w,0), 
				0, 
				clock_timestamp(), 
				nm_usuario_p, 
				'N', 
				nr_interno_conta_w, 
				cd_autorizacao_w, 
				0, 
				0, 
				ie_libera_repasse_w, 
				'N', 
				coalesce(nr_titulo_p,nr_titulo_w), 
				coalesce(vl_guia_w,0));
		end if;
 
		vl_total_pago_w :=	coalesce(vl_total_pago_w,0) + coalesce(vl_pago_guia_w,0);
 
		if	((vl_saldo_titulo_w = 0) or (vl_total_pago_w > vl_saldo_titulo_w)) and (qt_item_retorno_w = 0) then 
 
			if (coalesce(ds_mensagem_p::text, '') = '') then 
						--'Guias não possuem saldo: ' || cd_autorizacao_w; 
				ds_mensagem_p	:= wheb_mensagem_pck.get_texto(304128,'cd_autorizacao='||cd_autorizacao_w);	
 
			else 
				ds_mensagem_p	:= substr((substr(ds_mensagem_p,1,234) || ',' || substr(cd_autorizacao_w,1,20)),1,254);
			end if;
 
		end if;
 
 
	end loop;
	close c02;
 
	if (vl_total_pago_w < vl_saldo_titulo_w) then 
 
		update	convenio_retorno_item 
		set	vl_pago		= coalesce(vl_pago,0) + coalesce(vl_saldo_titulo_w,0) - coalesce(vl_total_pago_w,0) 
		where	nr_sequencia	= nr_sequencia_w;
 
	end if;
 
else 
	/* Conta ou protocolo não encontrado. */
 
	CALL wheb_mensagem_pck.exibir_mensagem_abort(188817);
end if;
 
commit;
 
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_retorno_titulo ( nr_titulo_p bigint, nr_seq_retorno_p bigint, nr_convenio_p bigint, nm_usuario_p text, ds_mensagem_p INOUT text) FROM PUBLIC;

