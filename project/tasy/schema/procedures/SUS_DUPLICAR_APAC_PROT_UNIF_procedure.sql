-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE sus_duplicar_apac_prot_unif ( nr_seq_protocolo_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_atendimento_w		conta_paciente.nr_atendimento%type;
nr_sequencia_w			sus_apac_unif.nr_sequencia%type;
nr_apac_w			sus_apac_unif.nr_apac%type;
qt_apac_w			integer;
cd_motivo_cobranca_w		sus_apac_unif.cd_motivo_cobranca%type;
ie_consis_final_valid_w		varchar(1) := 'N';
ie_fora_validade_w		varchar(1) := 'N';
ds_erro_w			varchar(255);
dt_fim_validade_w		sus_apac_unif.dt_fim_validade%type;

cursor01 CURSOR(nr_seq_protocolo_pp	conta_paciente.nr_seq_protocolo%type,
		cd_motivo_cobranca_pp	sus_apac_unif.cd_motivo_cobranca%type) FOR
	SELECT	a.nr_atendimento,
		b.nr_sequencia,
		b.nr_apac,
		b.dt_fim_validade
	from	sus_apac_unif	b,
		conta_paciente	a
	where	a.nr_interno_conta	= b.nr_interno_conta
	and	a.nr_seq_protocolo	= nr_seq_protocolo_pp
	and	b.ie_tipo_apac		not in (3,4)
	and	((coalesce(cd_motivo_cobranca_pp,0)	= 0) or ( b.cd_motivo_cobranca	= cd_motivo_cobranca_pp));
	
cursor01_w	cursor01%rowtype;


BEGIN

cd_motivo_cobranca_w := obter_param_usuario(1124, 30, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, cd_motivo_cobranca_w);
ie_consis_final_valid_w := obter_param_usuario(1124, 57, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_consis_final_valid_w);

for cursor01_w in cursor01(nr_seq_protocolo_p,cd_motivo_cobranca_w) loop
	begin	
	nr_atendimento_w	:= cursor01_w.nr_atendimento;
	nr_sequencia_w 		:= cursor01_w.nr_sequencia;
	nr_apac_w 		:= cursor01_w.nr_apac;
	dt_fim_validade_w	:= cursor01_w.dt_fim_validade;
	ie_fora_validade_w 	:= 'N';
	
	if (ie_consis_final_valid_w = 'S') and (trunc(clock_timestamp(),'month') > trunc(dt_fim_validade_w,'month')) then
		ie_fora_validade_w := 'S';
	end if;
	
	select	count(*)
	into STRICT	qt_apac_w
	from	sus_apac_unif
	where	nr_apac	= nr_apac_w;
	
	if (qt_apac_w < 3) and (ie_fora_validade_w = 'N') then
		ds_erro_w := sus_duplicar_apac(nr_atendimento_w, nr_sequencia_w, nm_usuario_p, null, null, ds_erro_w);
	end if;

	end;	
end loop;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE sus_duplicar_apac_prot_unif ( nr_seq_protocolo_p bigint, nm_usuario_p text) FROM PUBLIC;

