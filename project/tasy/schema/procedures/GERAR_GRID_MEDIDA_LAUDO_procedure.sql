-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE colunas AS (nm_coluna_w varchar(255),
			dt_laudo_w	timestamp);


CREATE OR REPLACE PROCEDURE gerar_grid_medida_laudo ( nr_seq_laudo_p bigint, cd_pessoa_fisica_p text, nm_usuario_p text) AS $body$
DECLARE

					
					
/* vetor */

type vetor is table of colunas index by integer;

/* globais */

vetor_w			vetor;	
ivet			bigint := 0;	
ind			integer;		
dt_laudo_w		timestamp;		
nr_sequencia_w		bigint;
ds_medida_w		laudo_paciente_medida.ds_valor_medida%TYPE;
nr_seq_medida_w		bigint;
qt_medida_w		double precision;
ds_valor_medida_w	varchar(500);
ds_comando_w		varchar(3000);
ds_parametro_w		varchar(3000);

					
					
c01 CURSOR FOR
	SELECT	trunc(a.dt_laudo) dt_laudo
	from	laudo_paciente a,
		laudo_paciente_medida c,
		atendimento_paciente b
	where	a.nr_atendimento	= b.nr_atendimento
	and	a.nr_sequencia		= c.nr_seq_laudo
	and	b.cd_pessoa_fisica	= cd_pessoa_fisica_p
	and	exists (	SELECT	1
				from	laudo_paciente_medida x
				where	x.nr_seq_laudo	= nr_seq_laudo_p
				and	c.nr_seq_medida	= x.nr_seq_medida)
	group by trunc(a.dt_laudo)
	order by 1;					
			
c02 CURSOR FOR
	SELECT	c.nr_seq_medida,
		d.ds_medida
	from	medida_exame_laudo d,
		laudo_paciente_medida c,
		laudo_paciente a,
		atendimento_paciente b
	where	a.nr_atendimento	= b.nr_atendimento
	and	a.nr_sequencia		= c.nr_seq_laudo
	and	c.nr_seq_medida		= d.nr_sequencia
	and	b.cd_pessoa_fisica	= cd_pessoa_fisica_p
	and	exists (	SELECT	1
				from	laudo_paciente_medida x
				where	x.nr_seq_laudo	= nr_seq_laudo_p
				and	c.nr_seq_medida	= x.nr_seq_medida)
	group by c.nr_seq_medida ,
		d.ds_medida
	order by 1;
			
			
c03 CURSOR FOR
	SELECT	c.nr_seq_medida,
		c.ds_valor_medida,
		c.qt_medida
	from	laudo_paciente a,
		laudo_paciente_medida c,
		atendimento_paciente b
	where	a.nr_atendimento	= b.nr_atendimento
	and	a.nr_sequencia		= c.nr_seq_laudo
	and	b.cd_pessoa_fisica	= cd_pessoa_fisica_p
	and	trunc(a.dt_laudo)	= dt_laudo_w
	and	exists (	SELECT	1
				from	laudo_paciente_medida x
				where	x.nr_seq_laudo	= nr_seq_laudo_p
				and	c.nr_seq_medida	= x.nr_seq_medida)
	
	order by 1;			
			

BEGIN

delete from w_result_laudo_medida
where nm_usuario	= nm_usuario_p;

commit;
ivet	:= 0;
open C01;
loop
fetch C01 into	
	dt_laudo_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	
	ivet := ivet + 1;
	vetor_w[ivet].nm_coluna_w 	:= dt_laudo_w;
	vetor_w[ivet].dt_laudo_w   	:= dt_laudo_w;
	end;
end loop;
close C01;

/* completar vetor se necess√°rio  */

ind := ivet;
while(ind < 50) loop
	begin
	ind := ind + 1;
	vetor_w[ind].nm_coluna_w := null;
	vetor_w[ind].dt_laudo_w	:= null;
	end;
end loop;

select	nextval('w_result_laudo_medida_seq')
into STRICT	nr_sequencia_w
;

insert into w_result_laudo_medida(
	nr_sequencia,
	nm_usuario,
	dt_atualizacao,
	ie_ordem,
	ds_result1,
	ds_result2,
	ds_result3,
	ds_result4,
	ds_result5,
	ds_result6,
	ds_result7,
	ds_result8,
	ds_result9,
	ds_result10,
	ds_result11,
	ds_result12,
	ds_result13,
	ds_result14,
	ds_result15,
	ds_result16,
	ds_result17,
	ds_result18,
	ds_result19,
	ds_result20,
	ds_result21,
	ds_result22,
	ds_result23,
	ds_result24,
	ds_result25,
	ds_result26,
	ds_result27,
	ds_result28,
	ds_result29,
	ds_result30,
	ds_result31,
	ds_result32,
	ds_result33,
	ds_result34,
	ds_result35,
	ds_result36,
	ds_result37,
	ds_result38,
	ds_result39,
	ds_result40,
	ds_result41,
	ds_result42,
	ds_result43,
	ds_result44,
	ds_result45,
	ds_result46,
	ds_result47,
	ds_result48,
	ds_result49,
	ds_result50)
Values ( nr_sequencia_w,
	nm_usuario_p,
	clock_timestamp(),
	-3,
	vetor_w[1].nm_coluna_w,
	vetor_w[2].nm_coluna_w,
	vetor_w[3].nm_coluna_w,
	vetor_w[4].nm_coluna_w,
	vetor_w[5].nm_coluna_w,
	vetor_w[6].nm_coluna_w,
	vetor_w[7].nm_coluna_w,
	vetor_w[8].nm_coluna_w,
	vetor_w[9].nm_coluna_w,
	vetor_w[10].nm_coluna_w,
	vetor_w[11].nm_coluna_w,
	vetor_w[12].nm_coluna_w,
	vetor_w[13].nm_coluna_w,
	vetor_w[14].nm_coluna_w,
	vetor_w[15].nm_coluna_w,
	vetor_w[16].nm_coluna_w,
	vetor_w[17].nm_coluna_w,
	vetor_w[18].nm_coluna_w,
	vetor_w[19].nm_coluna_w,
	vetor_w[20].nm_coluna_w,
	vetor_w[21].nm_coluna_w,
	vetor_w[22].nm_coluna_w,
	vetor_w[23].nm_coluna_w,
	vetor_w[24].nm_coluna_w,
	vetor_w[25].nm_coluna_w,
	vetor_w[26].nm_coluna_w,
	vetor_w[27].nm_coluna_w,
	vetor_w[28].nm_coluna_w,
	vetor_w[29].nm_coluna_w,
	vetor_w[30].nm_coluna_w,
	vetor_w[31].nm_coluna_w,
	vetor_w[32].nm_coluna_w,
	vetor_w[33].nm_coluna_w,
	vetor_w[34].nm_coluna_w,
	vetor_w[35].nm_coluna_w,
	vetor_w[36].nm_coluna_w,
	vetor_w[37].nm_coluna_w,
	vetor_w[38].nm_coluna_w,
	vetor_w[39].nm_coluna_w,
	vetor_w[40].nm_coluna_w,
	vetor_w[41].nm_coluna_w,
	vetor_w[42].nm_coluna_w,
	vetor_w[43].nm_coluna_w,
	vetor_w[44].nm_coluna_w,
	vetor_w[45].nm_coluna_w,
	vetor_w[46].nm_coluna_w,
	vetor_w[47].nm_coluna_w,
	vetor_w[48].nm_coluna_w,
	vetor_w[49].nm_coluna_w,
	vetor_w[50].nm_coluna_w);

commit;

open C02;
loop
fetch C02 into	
	nr_seq_medida_w,
	ds_medida_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin
	
	select	nextval('w_result_laudo_medida_seq')
	into STRICT	nr_sequencia_w
	;	
	insert into w_result_laudo_medida(
		nr_sequencia,
		nm_usuario,
		dt_atualizacao,
		ie_ordem,
		nr_seq_medida,
		ds_medida)
	values (	nr_sequencia_w,
		nm_usuario_p,
		clock_timestamp(),
		1,
		nr_seq_medida_w,
		ds_medida_w);
	
	
	end;
end loop;
close C02;	


ind := 0;
while(ind < 50) loop
	begin
	ind := ind + 1;
	dt_laudo_w	:= vetor_w[ind].dt_laudo_w;
	open C03;
	loop
	fetch C03 into	
		nr_seq_medida_w,
		ds_valor_medida_w,
		qt_medida_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin
		
		ds_comando_w	:= ' update w_result_laudo_medida ' ||
				  ' set ds_result' || to_char(ind) ||'= :ds_valor '||
				  ' where nm_usuario = :nm_usuario ' ||
				  ' and   nr_seq_medida = :nr_seq_medida ';
				
		if (qt_medida_w IS NOT NULL AND qt_medida_w::text <> '') then	  
			ds_parametro_w	:= 'ds_valor='||qt_medida_w||'#@#@nm_usuario='||nm_usuario_p||'#@#@nr_seq_medida='||nr_seq_medida_w||'#@#@';
		else
			ds_parametro_w	:= 'ds_valor='||coalesce(ds_valor_medida_w,' ')||'#@#@nm_usuario='||nm_usuario_p||'#@#@nr_seq_medida='||nr_seq_medida_w||'#@#@';
		end if;

		CALL exec_sql_dinamico_bv('TASY', ds_comando_w,ds_parametro_w);
		end;
	end loop;
	close C03;
	
	end;
end loop;	

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_grid_medida_laudo ( nr_seq_laudo_p bigint, cd_pessoa_fisica_p text, nm_usuario_p text) FROM PUBLIC;

