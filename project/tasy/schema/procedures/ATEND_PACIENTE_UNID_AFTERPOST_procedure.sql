-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atend_paciente_unid_afterpost ( nr_seq_interno_p bigint, ie_insert_edit_p text, nm_usuario_p text) AS $body$
DECLARE


nr_atendimento_w			bigint;
cd_setor_atendimento_w			integer;
cd_setor_atendimento_ant_w		integer;
nr_seq_unid_atual_W			bigint;
cd_classif_setor_w			varchar(02);
dt_entrada_unidade_w			timestamp;
dt_atualizacao_w			timestamp;
ie_passagem_setor_w			varchar(01);
ie_tipo_passagem_w			varchar(01);
nr_seq_same_w				bigint;
cd_pessoa_fisica_w			varchar(10);

cd_pessoa_fisica_atend_w		varchar(10);
nr_prontuario_w				bigint;
cd_estabelecimento_w			integer;
ie_gerar_receb_same_w			varchar(01);
nr_seq_transf_w				bigint;
ie_itens_w				varchar(01);
ie_regra_geracao_w			varchar(01);
cd_medico_resp_w			varchar(10);
nr_seq_interno_old_w			bigint;
ds_sep_bv_w				varchar(100);
ds_param_integ_hl7_w			varchar(4000);
cd_unidade_basica_w			varchar(10);
cd_unidade_compl_w			varchar(10);
ie_ajustar_mapa_dt_ref_w		varchar(1);
ie_tipo_atendimento_w			smallint;
ie_leito_monit				varchar(1);
ie_leito_monit_ant_w			varchar(1);
ie_clinica_w				integer;
ie_util_integra_informatec_w		varchar(1);
ie_gerar_saida_trans_servico_w		varchar(1);
ie_arq_pyxis_w				varchar(1);
qt_existe_regra_w			bigint;
dt_fim_conta_w				timestamp;
ie_gerar_saida_pa_w			varchar(1);
ie_mostra_gestao_nutricao_w		varchar(1);
ie_somente_setores_intern_w		varchar(1);
ie_transf_serv_nutricao_w		varchar(1);
ie_setor_rothman_w				varchar(1);
ie_setor_rothman_ant_w				varchar(1);
ds_log_w				varchar(2000);
qt_reg_w				bigint;
ie_observacao_pa_w			varchar(1);
ie_observacao_pa_ant_w			varchar(1);
ie_att_data_fim_w			varchar(1);
ie_existe_atend_w			bigint;
qt_idade_w bigint;
nr_idade_w bigint;
ie_anzics_generated_w varchar(1) := 'N';
nr_seq_interno_old_anzics_w bigint;
ie_gerar_inpatient_w varchar(1) := 'N';
cd_unidade_basica_old_w			atend_paciente_unidade.cd_unidade_basica%type;
cd_unidade_compl_old_w			atend_paciente_unidade.cd_unidade_compl%type;
cd_departamento_old_w            atend_paciente_unidade.cd_departamento%type;
cd_departamento_w            atend_paciente_unidade.cd_setor_atendimento%type;
cd_setor_atendimento_old_w      atend_paciente_unidade.cd_setor_atendimento%type;
cd_evolucao_w                evolucao_paciente.cd_evolucao%type;
cd_setor_atendimento_ww  atend_paciente_unidade.cd_setor_atendimento%type;
is_admission_w varchar(1) := 'N';
json_data_w text;
ds_param_integration_w varchar(500);

C21 CURSOR(nr_seq_interno_old_p bigint) FOR
	SELECT	max(a.nr_atendimento) nr_atendimento,
		max(a.NR_SEQ_INTERNO) nr_seq_atepacu
        from	atend_paciente_unidade a,
		setor_atendimento b
        where	a.nr_atendimento = nr_atendimento_w
        and	a.cd_setor_atendimento = b.cd_setor_atendimento
        and	b.CD_CLASSIF_SETOR = 4
        and	a.ie_passagem_setor = 'N'
        and 	a.NR_SEQ_INTERNO = nr_seq_interno_old_p
        order by  a.dt_entrada_unidade;
BEGIN

ds_sep_bv_w := obter_separador_bv;

begin
	if (nr_seq_interno_p > 0) then
		select	coalesce(a.nr_seq_unid_atual,0),
			b.nr_atendimento,
			b.cd_setor_atendimento,
			b.dt_entrada_unidade,
			c.cd_classif_setor,
			b.dt_atualizacao,
			coalesce(b.ie_passagem_setor,'N'),
			Obter_Tipo_Unidade_Atend(b.nr_atendimento, b.nr_seq_interno, b.ie_passagem_setor),
			OBTER_PESSOA_FISICA_USUARIO(nm_usuario_p,'C'),
			obter_prontuario_pf(a.cd_estabelecimento, a.cd_pessoa_fisica) nr_prontuario, /* OBTER_PRONTUARIO_PACIENTE(a.cd_pessoa_fisica), */
			a.cd_pessoa_fisica,
			a.cd_estabelecimento,
			a.cd_medico_resp,
			b.cd_unidade_basica,
			b.cd_unidade_compl,
			a.ie_tipo_atendimento,
			dt_fim_conta,
			coalesce(ie_mostra_gestao_nutricao,'S')
		into STRICT	nr_seq_unid_atual_w,
			nr_atendimento_w,
			cd_setor_atendimento_w,
			dt_entrada_unidade_w,
			cd_classif_setor_w,
			dt_atualizacao_w,
			ie_passagem_setor_w,
			ie_tipo_passagem_w,
			cd_pessoa_fisica_w,
			nr_prontuario_w,
			cd_pessoa_fisica_atend_w,
			cd_estabelecimento_w,
			cd_medico_resp_w,
			cd_unidade_basica_w,
			cd_unidade_compl_w,
			ie_tipo_atendimento_w,
			dt_fim_conta_w,
			ie_mostra_gestao_nutricao_w
		from	setor_atendimento c,
			atend_paciente_unidade b,
			atendimento_paciente a
		where	a.nr_atendimento		= b.nr_atendimento
		and	b.cd_setor_atendimento		= c.cd_setor_atendimento
		and	b.nr_seq_interno		= nr_seq_interno_p;

	end if;
exception
when others then
	nr_seq_unid_atual_w 	:= null;
	nr_atendimento_w  	:= null;
	cd_setor_atendimento_w 	:= null;
	dt_entrada_unidade_w 	:= null;
	cd_classif_setor_w 	:= null;
	dt_atualizacao_w 	:= null;
	ie_passagem_setor_w 	:= null;
	ie_tipo_passagem_w 	:= null;
	cd_pessoa_fisica_w 	:= null;
	nr_prontuario_w 	:= null;
	cd_pessoa_fisica_atend_w := null;
	cd_estabelecimento_w 	:= null;
	cd_medico_resp_w 	:= null;
	cd_unidade_basica_w 	:= null;
	cd_unidade_compl_w 	:= null;
	ie_tipo_atendimento_w 	:= null;
	dt_fim_conta_w 		:= null;
	ie_mostra_gestao_nutricao_w := null;
end;

ie_gerar_receb_same_w := Obter_Param_Usuario(916, 348, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_gerar_receb_same_w);
ie_itens_w := Obter_Param_Usuario(941, 53, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_itens_w);
ie_ajustar_mapa_dt_ref_w := Obter_Param_Usuario(3111, 84, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_ajustar_mapa_dt_ref_w);
ie_util_integra_informatec_w := obter_param_usuario(3111, 139, Obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_util_integra_informatec_w);
ie_transf_serv_nutricao_w := obter_param_usuario(3111, 222, Obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_transf_serv_nutricao_w);
ie_somente_setores_intern_w := obter_param_usuario(1003, 51, Obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_somente_setores_intern_w);
ie_att_data_fim_w := obter_param_usuario(3111, 273, Obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_att_data_fim_w);
ie_gerar_inpatient_w := obter_param_usuario(281, 1594, Obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_gerar_inpatient_w);

qt_idade_w	:= coalesce(obter_idade_pf(cd_pessoa_fisica_atend_w,clock_timestamp(),'A'),0);

select	 coalesce(max(ie_gerar_saida_trans_servico),'N'),
        coalesce(max(ie_gerar_saida_pa),'N')
into STRICT	ie_gerar_saida_trans_servico_w,
	ie_gerar_saida_pa_w
from	parametro_atendimento
where	cd_estabelecimento = cd_estabelecimento_w;

if	((cd_classif_setor_w in (3,4,8,9,11,12)) or
         (ie_gerar_saida_trans_servico_w = 'S' AND cd_classif_setor_w = 5) or
	 (ie_gerar_saida_pa_w = 'S' AND cd_classif_setor_w = 1)) and (ie_passagem_setor_w <> 'S') then
	begin
-- Nao alterado para traducao por ser log interno, nao apresentado em tela, e gravar variaries de dominio como texto 'S' / 'N'
ds_log_w	:=		'Classificacao Setor :'||cd_classif_setor_w||','||'Transf Servico :'||ie_gerar_saida_trans_servico_w||','||'Saida PA :'||ie_gerar_saida_pa_w||
				','||'Pasagem Setor :'||ie_passagem_setor_w;

insert into	log_mov(
		dt_atualizacao,
		nm_usuario,
		cd_log,
		ds_log)
	values (
		clock_timestamp(),
		nm_usuario_p,
		99756,
		ds_log_w
		);

		
	if ( (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') and obter_se_case_atend_planejado(nr_atendimento_w) = 'S') then		
	
		update	atend_paciente_unidade
		set		dt_saida_unidade	= dt_entrada_unidade,
				nm_usuario              = nm_usuario_p,
				dt_atualizacao		= clock_timestamp()
		where	nr_atendimento		= nr_atendimento_w
		and		dt_entrada_unidade	<> dt_entrada_unidade_w
		and		coalesce(dt_saida_unidade::text, '') = ''
		and (obter_classif_setor(cd_setor_atendimento) <> 2 or ie_att_data_fim_w = 'N');
		
	else
	
		update	atend_paciente_unidade
		set	dt_saida_unidade	= dt_entrada_unidade_w,
			nm_usuario              = nm_usuario_p,
			dt_atualizacao		= clock_timestamp()
		where	nr_atendimento		= nr_atendimento_w
		and	dt_entrada_unidade	<> dt_entrada_unidade_w
		and	coalesce(dt_saida_unidade::text, '') = ''
		and (obter_classif_setor(cd_setor_atendimento) <> 2 or ie_att_data_fim_w = 'N');
	
	
	end if;
	

	if (ie_ajustar_mapa_dt_ref_w = 'S') then
		
		CALL Transferir_dietas_paciente(dt_entrada_unidade_w,nr_atendimento_w,cd_setor_atendimento_w,cd_unidade_basica_w,cd_unidade_compl_w,nm_usuario_p);
	
	else
		CALL ajustar_mapa_dieta(nr_atendimento_w,nm_usuario_p);

	end if;
	CALL Transferir_dietas_servico(dt_entrada_unidade_w,nr_atendimento_w,cd_setor_atendimento_w,nm_usuario_p);

	end;
end if;

if (ie_transf_serv_nutricao_w = 'S') and
	((ie_somente_setores_intern_w = 'N' and cd_classif_setor_w in (3,4)) or (ie_somente_setores_intern_w = 'S')) and (ie_mostra_gestao_nutricao_w = 'S') and (ie_passagem_setor_w <> 'S') then
	CALL Nut_transferir_setor_servicos(nr_atendimento_w,cd_setor_atendimento_w,dt_entrada_unidade_w,nm_usuario_p);
end if;

CALL atualizar_atendimento_paciente(nr_atendimento_w);

if (ie_insert_edit_p = 'I') and (coalesce(dt_fim_conta_w::text, '') = '') then
	CALL gerar_lancamento_automatico(nr_atendimento_w, null, 40, nm_usuario_p, nr_seq_interno_p,null,null,null,null,null);
end if;

if (nr_seq_unid_atual_w = 0) and (coalesce(dt_fim_conta_w::text, '') = '') then
	CALL gerar_lancamento_automatico(nr_atendimento_w,
		null, 26, nm_usuario_p, null,null,null,null,null,null);		
end if;

if (ie_gerar_receb_same_w = 'S') and (ie_tipo_passagem_w = 'P') then

	select 	coalesce(max(nr_sequencia),0)
	into STRICT	nr_seq_same_w
	from 	same_prontuario
	where 	nr_atendimento = nr_atendimento_w;
	
	if (nr_seq_same_w > 0) then
	
		select	nextval('transf_prontuario_seq')
		into STRICT	nr_seq_transf_w
		;

		insert into transf_prontuario(	
			nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			cd_pessoa_origem,
			cd_pessoa_destino,
			cd_setor_origem,
			cd_setor_destino,
			dt_envio,
			dt_recebimento,
			nr_prontuario,
			nr_atendimento,
			cd_pessoa_fisica,
			cd_pessoa_receb,
			ds_observacao,
			cd_estabelecimento)
		values (nr_seq_transf_w,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			cd_pessoa_fisica_w,
			cd_pessoa_fisica_w,
			cd_setor_atendimento_w,
			cd_setor_atendimento_w,
			clock_timestamp(),
			null,
			nr_prontuario_w,
			nr_atendimento_w,
			cd_pessoa_fisica_atend_w,
			cd_pessoa_fisica_w,
			obter_desc_expressao(726798),
			cd_estabelecimento_w);
		
		if (ie_itens_w = 'S') then
		
			insert	into transf_prontuario_envelope(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_transf,
				nr_seq_prontuario)
			values (nextval('transf_prontuario_envelope_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_transf_w,
				nr_seq_same_w);		
		end if;
	end if;
end if;

select 	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
into STRICT	ie_regra_geracao_w
from	regra_geracao_ccih_alta
where 	cd_estabelecimento = cd_estabelecimento_w
and	cd_setor_atendimento = cd_setor_atendimento_w
and	coalesce(ie_tipo_atendimento,ie_tipo_atendimento_w) = ie_tipo_atendimento_w
and	ie_gerar_ficha_alta = 'T';

if (ie_regra_geracao_w = 'S') then	
	CALL ccih_regra_gerar_ficha_ocorr(nr_atendimento_w,cd_medico_resp_w,cd_estabelecimento_w,'T',cd_setor_atendimento_w,nm_usuario_p);
end if;

select 	coalesce(max(ie_arq_pyxis),'S')
into STRICT	ie_arq_pyxis_w
from	parametro_atendimento
where	cd_estabelecimento = cd_estabelecimento_w;

if (ie_arq_pyxis_w = 'S') and (cd_classif_setor_w <> 2) then
	begin
	select 	count(*)
	into STRICT	qt_existe_regra_w
	from	dis_regra_local
	where	cd_estabelecimento = cd_estabelecimento_w;		

	if (coalesce(qt_existe_regra_w,0) > 0) then
		CALL dis_gerar_arq_moviment(nr_atendimento_w);
	end if;

	end;	
end if;

select	coalesce(max(nr_seq_interno),0)
into STRICT	nr_seq_interno_old_w
from	setor_atendimento a,
	atend_paciente_unidade b
where	b.nr_atendimento = nr_atendimento_w
and	a.cd_setor_atendimento = b.cd_setor_atendimento
and	coalesce(b.ie_passagem_setor,'N') = 'N'
and	b.nr_seq_interno < nr_seq_interno_p
and (a.cd_classif_setor    <> 5 or pkg_i18n.get_user_locale <> 'en_AU');

if (nr_seq_interno_old_w = 0) and (ie_insert_edit_p = 'I') then	
	CALL gerar_regra_prontuario_gestao(ie_tipo_atendimento_w, cd_estabelecimento_w, nr_atendimento_w, cd_pessoa_fisica_atend_w, nm_usuario_p, null, null, null, ie_clinica_w, cd_setor_atendimento_w , null, 99999);
	
end if;

select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
into STRICT	ie_leito_monit
from	atend_paciente_unidade a,
	unidade_atendimento b
where	a.cd_setor_atendimento 	= b.cd_setor_atendimento
and	a.cd_unidade_compl	= b.cd_unidade_compl
and	a.cd_unidade_basica	= b.cd_unidade_basica
and	b.ie_leito_monitorado	= 'S'
and	a.nr_seq_interno	= nr_Seq_interno_p;

select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END ,
		max(b.cd_setor_atendimento)
into STRICT	ie_leito_monit_ant_w,
		cd_setor_atendimento_ant_w
from	atend_paciente_unidade a,
	unidade_atendimento b
where	a.cd_setor_atendimento 	= b.cd_setor_atendimento
and	a.cd_unidade_compl	= b.cd_unidade_compl
and	a.cd_unidade_basica	= b.cd_unidade_basica
and	b.ie_leito_monitorado	= 'S'
and	a.nr_seq_interno	= nr_seq_interno_old_w;



select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
into STRICT	ie_setor_rothman_w
from	atend_paciente_unidade a,
	setor_atendimento b
where	a.cd_setor_atendimento 	= b.cd_setor_atendimento
and	b.IE_SETOR_ROTHMAN	= 'S'
and	a.nr_seq_interno	= nr_Seq_interno_p;


select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
into STRICT	ie_setor_rothman_ant_w
from	atend_paciente_unidade a,
	setor_atendimento b
where	a.cd_setor_atendimento 	= b.cd_setor_atendimento
and	b.IE_SETOR_ROTHMAN	= 'S'
and	a.nr_seq_interno	= nr_seq_interno_old_w;


select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
into STRICT	IE_OBSERVACAO_PA_w
from	atend_paciente_unidade a,
	unidade_atendimento b
where	a.cd_setor_atendimento 	= b.cd_setor_atendimento
and	a.cd_unidade_compl	= b.cd_unidade_compl
and	a.cd_unidade_basica	= b.cd_unidade_basica
and	b.IE_OBSERVACAO_PA	= 'S'
and	a.nr_seq_interno	= nr_Seq_interno_p;


select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
into STRICT	IE_OBSERVACAO_PA_ant_w
from	atend_paciente_unidade a,
	unidade_atendimento b
where	a.cd_setor_atendimento 	= b.cd_setor_atendimento
and	a.cd_unidade_compl	= b.cd_unidade_compl
and	a.cd_unidade_basica	= b.cd_unidade_basica
and	b.IE_OBSERVACAO_PA	= 'S'
and	a.nr_seq_interno	= nr_seq_interno_old_w;

if (nr_seq_interno_old_w = 0) then /*  mirth*/
	select 	count(*)
	into STRICT 	ie_existe_atend_w
	from	atendimento_paciente
	where 	cd_pessoa_fisica = cd_pessoa_fisica_atend_w;
		
	
	
	ds_param_integ_hl7_w := 'nr_atendimento=' || nr_atendimento_w || ds_sep_bv_w ||
				'nr_seq_interno=' || nr_seq_interno_p || ds_sep_bv_w||
				'cd_pessoa_fisica=' || cd_pessoa_fisica_atend_w || ds_sep_bv_w;	
				
	if (ie_existe_atend_w = 1) then --primeiro atendimento  -> Incluir paciente
		CALL gravar_agend_integracao(425, ds_param_integ_hl7_w);
	end if;
	
			
	CALL gravar_agend_integracao(420, ds_param_integ_hl7_w, cd_setor_atendimento_w); --> admitir paciente
	
	CALL gravar_agend_integracao(710, ds_param_integ_hl7_w, cd_setor_atendimento_w); --> admitir paciente
	
	CALL gravar_agend_integracao(779, ds_param_integ_hl7_w, cd_setor_atendimento_w); /* Tasy -> SCC (ADT_A01) - Patient admission */

	
	--Migrated from tasy-interface to PL/SQL Packages.
	CALL call_bifrost_content('patient.admission','encounter_json_pck.get_encounter_message_clob('||nr_atendimento_w||')', nm_usuario_p);
	
	/* (Germany) Standard */

	if (ie_tipo_atendimento_w = '1') then
		ds_param_integ_hl7_w := 'nr_atendimento=' || nr_atendimento_w || ds_sep_bv_w ||
					'nr_seq_interno=' || nr_seq_interno_p || ds_sep_bv_w||
					'cd_pessoa_fisica=' || cd_pessoa_fisica_atend_w || ds_sep_bv_w;
	
	    if (substr(l10nger_integrar_adt_orm(cd_pessoa_fisica_atend_w, nr_atendimento_w, null, null),1,1) = 'S') then
			CALL gravar_agend_integracao(644, ds_param_integ_hl7_w, cd_setor_atendimento_w);/*Tasy -> Third-party (ADT_A01)*/
	    end if;
		
	else
		ds_param_integ_hl7_w := 'nr_atendimento=' || nr_atendimento_w || ds_sep_bv_w ||
					'nr_seq_interno=' || nr_seq_interno_p || ds_sep_bv_w||
					'cd_pessoa_fisica=' || cd_pessoa_fisica_atend_w || ds_sep_bv_w;
					
		if (substr(l10nger_integrar_adt_orm(cd_pessoa_fisica_atend_w, nr_atendimento_w, null, null),1,1) = 'S') then
		    CALL gravar_agend_integracao(651, ds_param_integ_hl7_w, cd_setor_atendimento_w);/*Tasy -> Third-party (ADT_A04)*/
		end if;
		
		CALL call_bifrost_content('outpatient.admission','encounter_json_pck.get_encounter_message_clob('||nr_atendimento_w||')', nm_usuario_p);
		
		ds_param_integ_hl7_w := 'nr_atendimento=' || nr_atendimento_w || ds_sep_bv_w ||
					'nr_seq_interno=' || nr_seq_interno_p || ds_sep_bv_w||
					'cd_pessoa_fisica=' || cd_pessoa_fisica_atend_w || ds_sep_bv_w;
					
		CALL gravar_agend_integracao(687, ds_param_integ_hl7_w, cd_setor_atendimento_w);/*Tasy -> Third-party (ADT_A05)*/
	end if;
else
	
	ds_param_integ_hl7_w := 'nr_atendimento=' || nr_atendimento_w || ds_sep_bv_w ||
				'nr_seq_interno=' || nr_seq_interno_p || ds_sep_bv_w ||
				'nr_seq_interno_old=' || nr_seq_interno_old_w || ds_sep_bv_w||
				'cd_pessoa_fisica=' || cd_pessoa_fisica_atend_w || ds_sep_bv_w;
	CALL gravar_agend_integracao(421, ds_param_integ_hl7_w, cd_setor_atendimento_w); --> movimentar paciente
	
	CALL gravar_agend_integracao(711, ds_param_integ_hl7_w, cd_setor_atendimento_w);
	
  if ie_passagem_setor_w = 'N' then
	   CALL gravar_agend_integracao(780, ds_param_integ_hl7_w, cd_setor_atendimento_w); /* Tasy -> SCC (ADT_A02) - Patient transfer */
  end if;

	--Migrated from tasy-interface to PL/SQL Packages.
	CALL call_bifrost_content('patient.transfer','encounter_json_pck.get_transf_message_clob('||nr_seq_interno_old_w||')', nm_usuario_p);
	
	if (coalesce(pkg_i18n.get_user_locale, 'pt_BR') = 'ja_JP') then 		-- Locale Japan Check
        ds_param_integration_w := '{"recordId" : "' || nr_seq_interno_p|| '"' || '}';
        json_data_w := bifrost.send_integration_content('nais.patient.transfer', ds_param_integration_w, wheb_usuario_pck.get_nm_usuario);
    end if;
	
	ds_param_integ_hl7_w := 'nr_atendimento=' || nr_atendimento_w || ds_sep_bv_w ||
				'nr_seq_interno=' || nr_seq_interno_p || ds_sep_bv_w||
				'cd_pessoa_fisica=' || cd_pessoa_fisica_atend_w || ds_sep_bv_w;
    if (substr(l10nger_integrar_adt_orm(cd_pessoa_fisica_atend_w, nr_atendimento_w, null, null),1,1) = 'S') then				
        CALL gravar_agend_integracao(645, ds_param_integ_hl7_w, cd_setor_atendimento_w);/*Tasy -> Third-party (ADT_A02)*/
    end if;

	CALL call_interface_file(932, 'carestream_ris_japan_l10n_pck.patient_ward_transfer_info ('|| nr_seq_interno_p || ', 1, ''' || nm_usuario_p || ''' , 0, null, ' || cd_estabelecimento_w || ', ''N'');' , nm_usuario_p);
	CALL call_interface_file(948, 'tosho_pck.patient_ward_transfer_info ('|| nr_seq_interno_p || ', 1, ''' || nm_usuario_p || ''' , 0, null, ' || cd_estabelecimento_w || ', ''N'');' , nm_usuario_p);
   
end if;

if (cd_classif_setor_w <> 2) then

	if (nr_seq_interno_old_w = 0) then /*  Dixtal */
		if (ie_leito_monit = 'S') or (ie_setor_rothman_w = 'S') then	
			ds_param_integ_hl7_w := 'nr_atendimento=' || nr_atendimento_w || ds_sep_bv_w ||
						'nr_seq_interno=' || nr_seq_interno_p || ds_sep_bv_w||
						'cd_pessoa_fisica=' || cd_pessoa_fisica_atend_w || ds_sep_bv_w;
			CALL gravar_agend_integracao(67, ds_param_integ_hl7_w, cd_setor_atendimento_w);
			
		end if;	
	elsif	((ie_leito_monit = 'S') or (ie_leito_monit_ant_w = 'S') or (ie_setor_rothman_w = 'S') or (ie_setor_rothman_ant_w = 'S')) and (((ie_passagem_setor_w <> 'S') or (cd_classif_setor_w = 2) or (ie_setor_rothman_w = 'S'))) then /*  Dixtal */
		ds_param_integ_hl7_w := 'nr_atendimento=' || nr_atendimento_w || ds_sep_bv_w ||
					'nr_seq_interno=' || nr_seq_interno_p || ds_sep_bv_w ||
					'nr_seq_interno_old=' || nr_seq_interno_old_w || ds_sep_bv_w||
					'cd_pessoa_fisica=' || cd_pessoa_fisica_atend_w || ds_sep_bv_w;
		CALL gravar_agend_integracao(68, ds_param_integ_hl7_w, cd_setor_atendimento_w);

		if (ie_leito_monit_ant_w = 'S')  then
			ds_param_integ_hl7_w := 'nr_atendimento=' || nr_atendimento_w || ds_sep_bv_w ||
						'nr_seq_interno=' || nr_seq_interno_p || ds_sep_bv_w ||
						'nr_seq_interno_old=' || nr_seq_interno_old_w || ds_sep_bv_w||
						'cd_pessoa_fisica=' || cd_pessoa_fisica_atend_w || ds_sep_bv_w;
			CALL gravar_agend_integracao(908, ds_param_integ_hl7_w, cd_setor_atendimento_ant_w);
		else
			ds_param_integ_hl7_w := 'nr_atendimento=' || nr_atendimento_w || ds_sep_bv_w ||
						'nr_seq_interno=' || nr_seq_interno_p || ds_sep_bv_w ||
						'nr_seq_interno_old=' || nr_seq_interno_old_w || ds_sep_bv_w||
						'cd_pessoa_fisica=' || cd_pessoa_fisica_atend_w || ds_sep_bv_w;
			CALL gravar_agend_integracao(908, ds_param_integ_hl7_w, cd_setor_atendimento_w);
		end if;
		
		ds_param_integ_hl7_w := 'nr_atendimento=' || nr_atendimento_w || ds_sep_bv_w ||
					'nr_seq_interno=' || nr_seq_interno_p || ds_sep_bv_w ||
					'nr_seq_interno_old=' || nr_seq_interno_old_w || ds_sep_bv_w||
					'cd_pessoa_fisica=' || cd_pessoa_fisica_atend_w || ds_sep_bv_w;
		CALL gravar_agend_integracao(72, ds_param_integ_hl7_w, cd_setor_atendimento_w);	

	end if;
end if;

if (cd_classif_setor_w in (3,4)) then
	begin
	select	coalesce(max(nr_seq_interno),0)
	into STRICT	nr_seq_interno_old_w
	from	setor_atendimento a,
		atend_paciente_unidade b
	where	b.nr_atendimento = nr_atendimento_w
	and	a.cd_setor_atendimento = b.cd_setor_atendimento
	and	a.cd_classif_setor in (3,4)
	and	b.nr_seq_interno < nr_seq_interno_p;

	select	coalesce(obter_se_leito_atual_monit(nr_atendimento_w),'N')
	into STRICT	ie_leito_monit
	;
	
	if (nr_seq_interno_old_w = 0) and (ie_insert_edit_p = 'I') then /*  GE */
		begin
		/*if (ie_leito_monit = 'S') then
			begin
			ds_param_integ_hl7_w := 'nr_atendimento=' || nr_atendimento_w || ds_sep_bv_w ||
						'nr_seq_interno=' || nr_seq_interno_p || ds_sep_bv_w;
			gravar_agend_integracao(67, ds_param_integ_hl7_w);
			end;
		else*/
		ds_param_integ_hl7_w := 'nr_atendimento=' || nr_atendimento_w || ds_sep_bv_w ||
								'nr_seq_interno=' || nr_seq_interno_p || ds_sep_bv_w||
								'cd_pessoa_fisica=' || cd_pessoa_fisica_atend_w || ds_sep_bv_w;
		CALL gravar_agend_integracao(2, ds_param_integ_hl7_w, cd_setor_atendimento_w);
		end;
	elsif (nr_seq_interno_old_w > 0) then /*  GE */
		begin
/*		if (ie_leito_monit = 'S') then
			begin
			ds_param_integ_hl7_w := 'nr_atendimento=' || nr_atendimento_w || ds_sep_bv_w ||
						'nr_seq_interno=' || nr_seq_interno_p || ds_sep_bv_w ||
						'nr_seq_interno_old=' || nr_seq_interno_old_w || ds_sep_bv_w;
			gravar_agend_integracao(68, ds_param_integ_hl7_w);
			ds_param_integ_hl7_w :=	'cd_pessoa_fisica=' || cd_pessoa_fisica_atend_w || ds_sep_bv_w ||
						'nr_atendimento=0' || ds_sep_bv_w ||
						'nr_seq_interno=0' || ds_sep_bv_w;
			gravar_agend_integracao(72, ds_param_integ_hl7_w);
		end;
		else
			begin*/
		ds_param_integ_hl7_w := 'nr_atendimento=' || nr_atendimento_w || ds_sep_bv_w ||
					'nr_seq_interno=' || nr_seq_interno_p || ds_sep_bv_w ||
					'nr_seq_interno_old=' || nr_seq_interno_old_w || ds_sep_bv_w;
		CALL gravar_agend_integracao(3, ds_param_integ_hl7_w, cd_setor_atendimento_w);
		end;
		
	if (ie_util_integra_informatec_w = 'S') then
		CALL informatec_cinout_leitos('CIN',nr_atendimento_w);
	end if;	
	end if;
	end;
end if;



select	count(1)
into STRICT	qt_reg_w
from	atend_paciente_unidade a,
		setor_atendimento b
where	a.cd_setor_atendimento 	= b.cd_setor_atendimento
and		a.nr_atendimento		= nr_atendimento_w
and		a.nr_seq_interno	<> nr_Seq_interno_p
and		b.cd_classif_setor	in ('3','4');

if (qt_reg_w	= 0) and (ie_tipo_atendimento_w	= 1)then --Primeira passagem por um setor de internacao/UTI
	begin

	CALL GQA_GERAR_PROTOCOLO_ASSIST(nr_atendimento_w,1,nm_usuario_p);
	
	exception
		when others then
		
		null;
	end;

end if;

select	count(1)
into STRICT	qt_reg_w
from	atend_paciente_unidade a,
		setor_atendimento b
where	a.cd_setor_atendimento 	= b.cd_setor_atendimento
and		a.nr_atendimento		= nr_atendimento_w
and		a.nr_seq_interno	<> nr_Seq_interno_p;
if (qt_reg_w	= 0)  then -- Primeira vez em um setor
	begin

	CALL GQA_GERAR_PROTOCOLO_ASSIST(nr_atendimento_w,6,nm_usuario_p);

  CALL ATUALIZAR_EV_LINHA_CUIDADO('AT', 'ATENDIMENTO_PACIENTE', nr_atendimento_w, nr_atendimento_w, obter_pessoa_atendimento(nr_atendimento_w, 'C'), nm_usuario_p);
	exception
		when others then
		
		null;
	end;

end if;

if (cd_classif_setor_w	= 4) and (ie_tipo_atendimento_w	= 1) and (ie_tipo_passagem_w not in ('A', 'L', 'S')) then
	begin
	CALL GQA_GERAR_PROTOCOLO_ASSIST(nr_atendimento_w,2,nm_usuario_p);
	exception
		when others then
		null;
	end;
end if;

if (ie_tipo_passagem_w not in ('A', 'L', 'S')) then
begin
	CALL GQA_GERAR_PROTOCOLO_ASSIST(nr_atendimento_w,5,nm_usuario_p);
	exception
		when others then
		null;
	end;
end if;

if (IE_OBSERVACAO_PA_w	= 'S') and (IE_OBSERVACAO_PA_ant_w	= 'N') then
	
	update	atendimento_paciente
	set	dt_inicio_observacao = clock_timestamp()
	where 	nr_atendimento = nr_atendimento_w;

end if;


if (IE_OBSERVACAO_PA_w	= 'N') and (IE_OBSERVACAO_PA_ant_w	= 'S') then
	
	update	atendimento_paciente
	set	dt_fim_observacao = clock_timestamp()
	where 	nr_atendimento = nr_atendimento_w;
	
end if;

if (ie_tipo_atendimento_w	in (3,8)) and (nr_seq_interno_old_w = 0)then
	ds_param_integ_hl7_w := 'nr_atendimento=' || nr_atendimento_w || ';';
	CALL gravar_agend_integracao(372, ds_param_integ_hl7_w, cd_setor_atendimento_w);
end if;

if (coalesce(nr_atendimento_w,0) > 0) then
	CALL gerar_tof_meta_atend(nr_atendimento_w , nm_usuario_p);
end if;
if (coalesce(pkg_i18n.get_user_locale, 'pt_BR')='en_AU') then

	nr_idade_w := Obter_param_Usuario(281, 1542, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, nr_idade_w);
	if (qt_idade_w >= nr_idade_w) then
		for r_C21 in C21(nr_seq_interno_old_w) loop
		begin
		CALL GENERATE_ATEND_ANZICS(r_C21.nr_atendimento,r_C21.nr_seq_atepacu,nm_usuario_p);
		exception
			when others then
			null;
		end;
		end loop;
		
		for r_C21 in C21(nr_Seq_interno_p) loop
		begin
		CALL GENERATE_ATEND_ANZICS(r_C21.nr_atendimento,r_C21.nr_seq_atepacu,nm_usuario_p);
		exception
			when others then
			null;
		end;
		end loop;
	  end if;
end if;
select CASE WHEN count(1)=1 THEN 'S'  ELSE 'N' END
into STRICT is_admission_w
from atendimento_paciente a, atend_paciente_unidade b
where a.nr_atendimento = b.nr_atendimento
and a.nr_atendimento = (SELECT nr_atendimento from atend_paciente_unidade where nr_seq_interno = nr_seq_interno_p);

if (ie_gerar_inpatient_w = 'S' and  is_admission_w ='S') then
cd_evolucao_w := clinical_notes_pck.gerar_soap(nr_atendimento_w, null, 'INPATIENT', null, 'P', 1, cd_evolucao_w);
CALL gerar_atend_pac_inf_evol(nr_atendimento_w,cd_evolucao_w);
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atend_paciente_unid_afterpost ( nr_seq_interno_p bigint, ie_insert_edit_p text, nm_usuario_p text) FROM PUBLIC;

