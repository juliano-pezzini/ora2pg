-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualizar_inf_atend_alta ( nr_atendimento_p bigint, ie_gerar_alta_p text, cd_estabelecimento_p bigint, ie_necropsia_p text, ie_divulgar_obito_p text, cd_motivo_permanencia_p bigint, ie_inserir_motivo_perm_p text, nm_medico_contato_p text, crm_medico_contato_p text, nm_usuario_p text) AS $body$
DECLARE

 
cd_setor_atend_w		integer;
cd_unidade_basica_w		varchar(10);
cd_unidade_compl_w		varchar(10);
ie_inserir_motivo_perm_w	varchar(1);

BEGIN
if (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') and (cd_estabelecimento_p IS NOT NULL AND cd_estabelecimento_p::text <> '') and (ie_gerar_alta_p IS NOT NULL AND ie_gerar_alta_p::text <> '') and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') then 
	begin	 
	ie_inserir_motivo_perm_w := Obter_param_Usuario(3111, 261, obter_perfil_ativo, obter_usuario_ativo, obter_estabelecimento_ativo, ie_inserir_motivo_perm_w);
	update	parametro_atendimento 
	set	ie_gerar_alta_atend_rn	= ie_gerar_alta_p, 
		nm_usuario		= nm_usuario_p 
	where	cd_estabelecimento	= cd_estabelecimento_p;
	 
	if (ie_necropsia_p IS NOT NULL AND ie_necropsia_p::text <> '') then 
		begin 
		 
		update	atendimento_paciente 
		set	ie_necropsia	= ie_necropsia_p, 
			nm_usuario	= nm_usuario_p 
		where	nr_atendimento	= nr_atendimento_p;
		end;
	end if;
	 
	if (ie_divulgar_obito_p IS NOT NULL AND ie_divulgar_obito_p::text <> '') then 
		begin 
		 
		update	atendimento_paciente 
		set	ie_divulgar_obito	= ie_divulgar_obito_p, 
			nm_usuario		= nm_usuario_p 
		where	nr_atendimento		= nr_atendimento_p;
		end;
	end if;
	 
	if	((ie_inserir_motivo_perm_p = 'S') or (ie_inserir_motivo_perm_w = 'S')) and (cd_motivo_permanencia_p IS NOT NULL AND cd_motivo_permanencia_p::text <> '') then 
		begin 
		 
		cd_setor_atend_w	:= obter_unidade_atendimento(nr_atendimento_p,'A','CS');
		cd_unidade_basica_w	:= obter_unidade_atendimento(nr_atendimento_p,'A','UB');
		cd_unidade_compl_w	:= obter_unidade_atendimento(nr_atendimento_p,'A','UC');
		 
		CALL inserir_motivo_permanencia( 
			nm_usuario_p, 
			nr_atendimento_p, 
			cd_setor_atend_w, 
			cd_unidade_basica_w, 
			cd_unidade_compl_w, 
			cd_motivo_permanencia_p);
		end;
	end if;
	 
	if (nm_medico_contato_p IS NOT NULL AND nm_medico_contato_p::text <> '') or (crm_medico_contato_p IS NOT NULL AND crm_medico_contato_p::text <> '')then 
		begin 
		 
		CALL atualiza_medico_externo(	nm_medico_contato_p, 
					crm_medico_contato_p, 
					nr_atendimento_p, 
					nm_usuario_p);
		 
		end;
	end if;
	 
	end;
end if;
commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualizar_inf_atend_alta ( nr_atendimento_p bigint, ie_gerar_alta_p text, cd_estabelecimento_p bigint, ie_necropsia_p text, ie_divulgar_obito_p text, cd_motivo_permanencia_p bigint, ie_inserir_motivo_perm_p text, nm_medico_contato_p text, crm_medico_contato_p text, nm_usuario_p text) FROM PUBLIC;

