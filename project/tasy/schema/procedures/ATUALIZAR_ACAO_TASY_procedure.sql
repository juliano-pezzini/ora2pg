-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualizar_acao_tasy ( nr_seq_unidade_p bigint, nr_seq_acao_p bigint, nm_usuario_p text, ds_erro_p INOUT text) AS $body$
DECLARE


dt_inicio_hig_w					timestamp;
dt_fim_hig_w					timestamp;
cd_perfil_w						integer;
cd_setor_Atendimento_w			integer;
cd_motivo_interd_unid_w			bigint;
cd_motivo_interdicao_w			bigint;
cd_pausa_serv_w					bigint;
nr_atendimento_w				bigint;
nr_sequencia_w					bigint;
ie_parametro_restringe_w		varchar(1);
ie_fim_hig_antes_inicar_hig		varchar(1);
ie_aguarda_higie_w				varchar(1);
ie_status_unidade_w				varchar(3);
cd_paciente_reserva_w			varchar(10);
nm_usuario_w					varchar(255);
ds_erro_w						varchar(255);
nm_pac_reserva_w				varchar(255);

/*
 2 Interditar o leito
 4 Liberar o leito
 5 Iniciar higienização
 6 pausar serviço
 9 Finalizar higienização
13 Registro da chamada do paciente
14 Registro do atendimento do chamado
15 finalizar pausa do serviço
*/
BEGIN

ds_erro_w	:= '';
nm_usuario_w := wheb_usuario_pck.get_nm_usuario;

begin

select		a.nr_atendimento,
			dt_inicio_higienizacao,
			dt_higienizacao,
			cd_paciente_reserva,
			nm_pac_reserva,
			ie_status_unidade,
			cd_motivo_interdicao,
			cd_setor_Atendimento
into STRICT		nr_atendimento_w,
			dt_inicio_hig_w,
			dt_fim_hig_w,
			cd_paciente_reserva_w,
			nm_pac_reserva_w,
			ie_status_unidade_w,
			cd_motivo_interd_unid_w,
			cd_setor_Atendimento_w
from 		unidade_atendimento a
where  		nr_seq_interno	= nr_seq_unidade_p;
exception
	when no_data_found then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(218310);
end;

cd_perfil_w		:= obter_valor_param_usuario(3111, 244, obter_perfil_ativo, 'Telefonia', 0);

cd_motivo_interdicao_w	:= obter_valor_param_usuario(3111, 245, obter_perfil_ativo, 'Telefonia', 0);

ie_parametro_restringe_w	:= obter_valor_param_usuario(3120, 4, obter_perfil_ativo, 'Telefonia', 0);

ie_fim_hig_antes_inicar_hig := Obter_param_Usuario(44, 294, obter_perfil_ativo, nm_usuario_p, obter_estabelecimento_ativo, ie_fim_hig_antes_inicar_hig);


if (coalesce(nr_atendimento_w::text, '') = '') and (nr_seq_acao_p in (13,14)) then
	ds_erro_w	:= WHEB_MENSAGEM_PCK.get_texto(279724,null);
end if;

if (coalesce(dt_inicio_hig_w::text, '') = '') and (nr_seq_acao_p in (6)) then
	ds_erro_w	:= WHEB_MENSAGEM_PCK.get_texto(445255,null);
end if;

select	coalesce(max(nr_sequencia),0)
into STRICT	cd_pausa_serv_w
from	sl_unid_atend
where	nr_seq_unidade = nr_seq_unidade_p
and		(dt_pausa_servico IS NOT NULL AND dt_pausa_servico::text <> '')
and		ie_status_serv = 'IP';

if (cd_pausa_serv_w = 0) and (nr_seq_acao_p in (15)) then
	ds_erro_w	:= WHEB_MENSAGEM_PCK.get_texto(445262,null);
end if;

if (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') and (nr_seq_acao_p in (2,4,5,9)) then
	ds_erro_w	:= WHEB_MENSAGEM_PCK.get_texto(279726,null);
end if;

if (nr_seq_acao_p = 5) and (ie_status_unidade_w = 'H') then
	ds_erro_w	:= WHEB_MENSAGEM_PCK.get_texto(279728,null);
end if;

if (nr_seq_acao_p = 9) then
	if (ie_status_unidade_w in ('L','R')) then
		ds_erro_w	:= WHEB_MENSAGEM_PCK.get_texto(279729,null);
	elsif (ie_status_unidade_w = 'I') then
		ds_erro_w	:= WHEB_MENSAGEM_PCK.get_texto(279730,null);
	end if;

end if;

if (nr_seq_acao_p	= 5) and (ie_status_unidade_w = 'I') and (ie_parametro_restringe_w = 'N') then
	ds_erro_w	:= WHEB_MENSAGEM_PCK.get_texto(279731,null);
end if;

if	((nr_seq_acao_p = 4) or (nr_seq_acao_p = 9 and (cd_motivo_interd_unid_w IS NOT NULL AND cd_motivo_interd_unid_w::text <> ''))) and (obter_se_regra_lib_interd(cd_motivo_interd_unid_w,'0',cd_perfil_w,cd_setor_Atendimento_w)	= 'N') then
	ds_erro_w	:= WHEB_MENSAGEM_PCK.get_texto(279732,null);
end if;

if (coalesce(ie_fim_hig_antes_inicar_hig,'S') = 'N') and (nr_seq_acao_p = 9) and (ie_status_unidade_w <> 'H') then

	ds_erro_w	:= WHEB_MENSAGEM_PCK.get_texto(279733,null);

	end if;

SELECT	obter_valor_param_usuario(44, 165, obter_perfil_ativo, 'Telefonia', 0)
into STRICT	ie_aguarda_higie_w
;

if (coalesce(ds_erro_w::text, '') = '') then
	if (nr_seq_acao_p = 13) then
		select	nextval('atend_pac_chamado_seq')
		into STRICT	nr_sequencia_w	;
		insert into atend_pac_chamado(nr_sequencia, nr_atendimento,
			dt_atualizacao, nm_usuario,
			dt_chamado,	nm_usuario_chamado)
		values (nr_sequencia_w, nr_atendimento_w,
			clock_timestamp(), nm_usuario_p,
			clock_timestamp(), nm_usuario_p);
	elsif (nr_seq_acao_p = 14) then
		update	atend_pac_chamado
		set	dt_atendimento	= clock_timestamp(),
			nm_usuario_atend	= nm_usuario_p
		where	nr_atendimento	= nr_atendimento_w
		and	coalesce(dt_atendimento::text, '') = '';
	elsif (nr_seq_acao_p = 5) then
		update	unidade_atendimento
		set	ie_status_unidade	= 'H',
			dt_higienizacao	 = NULL,
			dt_inicio_higienizacao= clock_timestamp(),
			nm_usuario_higienizacao = nm_usuario_p,
			nm_usuario		= nm_usuario_p
		where	nr_seq_interno	= nr_seq_unidade_p;
	elsif (nr_seq_acao_p = 9) then
		update	unidade_atendimento
		set	ie_status_unidade	= CASE WHEN coalesce(cd_paciente_reserva_w,nm_pac_reserva_w) = NULL THEN  'L'  ELSE 'R' END ,
			dt_higienizacao		= clock_timestamp(),
			dt_inicio_higienizacao	= coalesce(dt_inicio_higienizacao,clock_timestamp()),
			nm_usuario_fim_higienizacao = nm_usuario_p,
			nm_usuario		= nm_usuario_p
		where	nr_seq_interno	= nr_seq_unidade_p;
	elsif (nr_seq_acao_p = 2) then
		update	unidade_atendimento
		set	ie_status_unidade 	= 'I',
			nm_usuario		= nm_usuario_p,
			dt_atualizacao		= clock_timestamp(),
			cd_motivo_interdicao	= cd_motivo_interdicao_w
		where	nr_seq_interno = nr_seq_unidade_p;
	elsif (nr_seq_acao_p = 4) and (ie_aguarda_higie_w = 'N') then
		update	unidade_atendimento
		set	ie_status_unidade 	= 'L',
			nm_usuario		= nm_usuario_p,
			dt_atualizacao		= clock_timestamp()
		where	nr_seq_interno = nr_seq_unidade_p;
	elsif (nr_seq_acao_p = 4) and (ie_aguarda_higie_w = 'S') then
		update	unidade_atendimento
		set	ie_status_unidade 	= 'G',
			nm_usuario		= nm_usuario_p,
			dt_atualizacao		= clock_timestamp()
		where	nr_seq_interno = nr_seq_unidade_p;
	elsif (nr_seq_acao_p = 6) then
		update	sl_unid_atend
		set		dt_pausa_servico 	= clock_timestamp(),
				ds_obs_pausa_leito	= OBTER_DESC_EXPRESSAO(630814),
				ie_status_serv		= 'IP',
				cd_executor			= coalesce(nm_usuario_p,nm_usuario_w),
				cd_executor_pausa_serv = coalesce(nm_usuario_p,nm_usuario_w),
				dt_atualizacao		= clock_timestamp(),
				nm_usuario			= coalesce(nm_usuario_p,nm_usuario_w)
		where	nr_seq_unidade 		= nr_seq_unidade_p
		and		nr_sequencia		= (SELECT	max(nr_sequencia)
										from	sl_unid_atend
										where	nr_seq_unidade = nr_seq_unidade_p
										and		ie_status_serv <> 'IP');
	elsif (nr_seq_acao_p = 15) then
		update	sl_unid_atend
		set		dt_fim_pausa_servico 	= clock_timestamp(),
				dt_pausa_servico		 = NULL,
				ie_status_serv			= 'FP',
				cd_executor				= coalesce(nm_usuario_p,nm_usuario_w),
				dt_atualizacao			= clock_timestamp(),
				nm_usuario				= coalesce(nm_usuario_p,nm_usuario_w)
		where	nr_seq_unidade 			= nr_seq_unidade_p
		and		nr_sequencia		= (SELECT	max(nr_sequencia)
										from	sl_unid_atend
										where	nr_seq_unidade = nr_seq_unidade_p
										and		ie_status_serv <> 'FP');

	end if;
end if;
ds_erro_p	:= ds_erro_w;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualizar_acao_tasy ( nr_seq_unidade_p bigint, nr_seq_acao_p bigint, nm_usuario_p text, ds_erro_p INOUT text) FROM PUBLIC;

