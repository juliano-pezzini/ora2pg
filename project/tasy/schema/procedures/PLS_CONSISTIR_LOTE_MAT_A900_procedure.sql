-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_consistir_lote_mat_a900 ( nr_seq_lote_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE

 
 
nr_seq_mat_unimed_w		bigint;
ie_inconsistente_w		bigint;
ie_unidade_utilizacao_w		varchar(255);
cd_unidade_medida_w		varchar(255);
cd_unidade_medida_tasy_w	varchar(255);
cd_cgc_w			varchar(14);
nr_seq_marca_w			bigint;
ie_consiste_w			varchar(10) := 'N';
qt_pacote_w			bigint;
ie_situacao_w			varchar(1);
nr_seq_imp_mat_uni_reg_w	bigint;

C01 CURSOR FOR 
	SELECT	b.nr_sequencia, 
		b.nr_seq_mat_unimed, 
		trim(both a.cd_unidade_medida), 
		a.cd_cnpj, 
		a.ie_situacao 
	from	pls_lote_imp_mat_uni_reg	b, 
		pls_material_unimed		a 
	where	b.nr_seq_mat_unimed	= a.nr_sequencia 
	and	b.nr_seq_lote		= nr_seq_lote_p;


BEGIN 
 
open C01;
loop 
fetch C01 into 
	nr_seq_imp_mat_uni_reg_w, 
	nr_seq_mat_unimed_w, 
	ie_unidade_utilizacao_w, 
	cd_cgc_w, 
	ie_situacao_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	ie_inconsistente_w	:= 0;
	 
	delete FROM pls_mat_unimed_inc 
	where	nr_seq_material	= nr_seq_mat_unimed_w;
	 
	select	max(cd_unidade_medida) 
	into STRICT	cd_unidade_medida_w 
	from	unidade_medida 
	where	ie_situacao	= 'A' 
	and	upper(cd_sistema_ant)	= upper(ie_unidade_utilizacao_w);
	 
	if (coalesce(cd_unidade_medida_w::text, '') = '') then 
		select	max(cd_unidade_medida) 
		into STRICT	cd_unidade_medida_w 
		from	unidade_medida 
		where	ie_situacao	= 'A' 
		and (upper(cd_unidade_medida)	= upper(ie_unidade_utilizacao_w) 
		or	upper(cd_unidade_ptu)		= upper(ie_unidade_utilizacao_w));
	end if;
	 
	select	max(nr_seq_marca) 
	into STRICT	nr_seq_marca_w 
	from	marca_pessoa_juridica 
	where	cd_cgc	= cd_cgc_w;
	 
	select	count(1) 
	into STRICT	qt_pacote_w 
	from	pls_material	x, 
		pls_pacote_material z 
	where	x.nr_sequencia		 = z.nr_seq_material 
	and	x.nr_seq_material_unimed = nr_seq_mat_unimed_w  LIMIT 1;
		 
	-- 7 - A unidade de medida não está cadastrada no sistema. 
	if (coalesce(cd_unidade_medida_w::text, '') = '') then 
		ie_consiste_w := ptu_obter_se_consiste_mat(7, ie_consiste_w);
		if (coalesce(ie_consiste_w,'N') = 'S') then 
			CALL ptu_inserir_inconsistencia_mat(nr_seq_mat_unimed_w,7,nm_usuario_p);
			ie_inconsistente_w	:= 1;	
		end if;		
	end if;
 
	-- 8 - A unidade de medida importada é diferente da cadastrada para o material no Tasy. 
	if (cd_unidade_medida_w IS NOT NULL AND cd_unidade_medida_w::text <> '') then 
		select	max(cd_unidade_medida) 
		into STRICT	cd_unidade_medida_tasy_w 
		from	pls_material 
		where	nr_seq_material_unimed	= nr_seq_mat_unimed_w;
 
		if (cd_unidade_medida_tasy_w IS NOT NULL AND cd_unidade_medida_tasy_w::text <> '') and (upper(cd_unidade_medida_tasy_w) <> upper(cd_unidade_medida_w)) then 
			ie_consiste_w := ptu_obter_se_consiste_mat(8, ie_consiste_w);
			if (coalesce(ie_consiste_w,'N') = 'S') then 
				CALL ptu_inserir_inconsistencia_mat(nr_seq_mat_unimed_w,8,nm_usuario_p);
				ie_inconsistente_w	:= 1;	
			end if;			
		end if;
	end if;
	 
	-- 12 - A marca informada não está cadastrada no sistema. 
	if (coalesce(nr_seq_marca_w::text, '') = '') then 
		ie_consiste_w := ptu_obter_se_consiste_mat(12, ie_consiste_w);
		if (coalesce(ie_consiste_w,'N') = 'S') then 
			CALL ptu_inserir_inconsistencia_mat(nr_seq_mat_unimed_w,12,nm_usuario_p);
			ie_inconsistente_w	:= 1;	
		end if;	
	end if;
	 
	-- 13 - O material inativado esta vinculado a um pacote. 
	if (qt_pacote_w > 0) and (ie_situacao_w = 'I') then 
		ie_consiste_w := ptu_obter_se_consiste_mat(13, ie_consiste_w);	
		if (coalesce(ie_consiste_w,'N') = 'S') then 
			CALL ptu_inserir_inconsistencia_mat(nr_seq_mat_unimed_w,13,nm_usuario_p);
			ie_inconsistente_w	:= 1;	
		end if;	
	end if;
 
	--Cadastra o status de consistência 
	if (ie_inconsistente_w = 1) then	 
		update	pls_lote_imp_mat_uni_reg 
		set	ie_inconsistente	= 'S' 
		where	nr_sequencia		= nr_seq_imp_mat_uni_reg_w;
		 
		update	pls_material_unimed 
		set	ie_inconsistente	= 'S' 
		where	nr_sequencia		= nr_seq_mat_unimed_w;
	else 
		update	pls_lote_imp_mat_uni_reg 
		set	ie_inconsistente	= 'N' 
		where	nr_sequencia		= nr_seq_imp_mat_uni_reg_w;	
		 
		update	pls_material_unimed 
		set	ie_inconsistente	= 'N' 
		where	nr_sequencia		= nr_seq_mat_unimed_w;
	end if;	
	 
	if (mod(C01%rowCount,100) = 0) then 
		commit;
	end if;
	 
	end;
end loop;
close C01;
 
update	pls_lote_imp_mat_unimed 
set	nm_usuario_consist	= nm_usuario_p, 
	dt_atualizacao		= clock_timestamp(), 
	nm_usuario		= nm_usuario_p 
where	nr_sequencia		= nr_seq_lote_p;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_consistir_lote_mat_a900 ( nr_seq_lote_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

