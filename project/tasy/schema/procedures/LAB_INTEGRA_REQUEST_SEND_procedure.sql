-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE lab_integra_request_send ( nr_prescricao_p prescr_procedimento.nr_prescricao%TYPE, nr_sequencia_p prescr_procedimento.nr_sequencia%TYPE, nm_usuario_p prescr_procedimento.nm_usuario%TYPE) AS $body$
DECLARE


    json_data_w                     philips_json;
    json_patient_w                  philips_json;
    json_orcdata_w                  philips_json;
    json_medicalorder_w             philips_json;
    json_prescriptionprocedures_w   philips_json_list;
    data_w                          text;
    patient_w                       text;
    orcdata_w                       text;
    medicalorder_w                  text;
    prescriptionprocedures_w        text;

BEGIN
    json_data_w := philips_json();
    BEGIN
        SELECT lab_integra_patient_data_hl7(nr_prescricao_p)
        INTO STRICT patient_w
;

        json_patient_w := philips_json(patient_w);
        json_data_w.put('patient', json_patient_w.to_json_value());
    EXCEPTION
        WHEN OTHERS THEN
            json_patient_w := philips_json();
            CALL gravar_log_lab_pragma(6644, 'ERRO lab_integra_request_send - patient - '+sqlerrm,'TASY', nr_prescricao_p);
    END;

    BEGIN
        SELECT lab_integra_orc_data_hl7(nr_prescricao_p, nr_sequencia_p)
        INTO STRICT orcdata_w
;

        json_orcdata_w := philips_json(orcdata_w);
        json_data_w.put('orcData', json_orcdata_w.to_json_value());
    EXCEPTION
        WHEN OTHERS THEN
            json_orcdata_w := philips_json();
            CALL gravar_log_lab_pragma(6644, 'ERRO lab_integra_request_send - orcData - '+sqlerrm,'TASY', nr_prescricao_p);
    END;

    BEGIN
        SELECT lab_integra_obr_data_hl7(nr_prescricao_p, nr_sequencia_p)
        INTO STRICT medicalorder_w
;

        json_medicalorder_w := philips_json(medicalorder_w);
        json_data_w.put('medicalOrder', json_medicalorder_w.to_json_value());
    EXCEPTION
        WHEN OTHERS THEN
            json_medicalorder_w := philips_json();
            CALL gravar_log_lab_pragma(6644, 'ERRO lab_integra_request_send - medicalOrder - '+sqlerrm,'TASY', nr_prescricao_p);
    END;

    BEGIN
        SELECT lab_integra_obx_data_hl7(nr_prescricao_p, nr_sequencia_p)
        INTO STRICT prescriptionprocedures_w
;

        json_prescriptionprocedures_w := philips_json_list(prescriptionprocedures_w);
        json_data_w.put('prescriptionProcedures', json_prescriptionprocedures_w);
    EXCEPTION
        WHEN OTHERS THEN
            json_prescriptionprocedures_w := philips_json_list();
            CALL gravar_log_lab_pragma(6644, 'ERRO lab_integra_request_send - prescriptionProcedures - '+sqlerrm,'TASY', nr_prescricao_p);
    END;

    dbms_lob.createtemporary(data_w, true);
    json_data_w.(data_w);
    data_w := bifrost.send_integration_content('lab.send.request', data_w, nm_usuario_p);
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE lab_integra_request_send ( nr_prescricao_p prescr_procedimento.nr_prescricao%TYPE, nr_sequencia_p prescr_procedimento.nr_sequencia%TYPE, nm_usuario_p prescr_procedimento.nm_usuario%TYPE) FROM PUBLIC;

