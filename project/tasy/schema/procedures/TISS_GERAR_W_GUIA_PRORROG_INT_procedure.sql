-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE tiss_gerar_w_guia_prorrog_int (nr_sequencia_autor_p bigint, ds_dir_padrao_p text, nm_usuario_p text) AS $body$
DECLARE


cd_pessoa_fisica_w	varchar(10);
nm_pessoa_fisica_w	varchar(150);
nr_cartao_nac_sus_w	numeric(22);
ds_plano_w		varchar(40);
dt_validade_carteira_w	timestamp;
cd_usuario_convenio_w	varchar(30);
cd_ans_w		varchar(100);
nr_seq_protocolo_w	bigint;
nr_atendimento_w		bigint;
nr_interno_conta_w	bigint;
cd_autorizacao_w		varchar(100);
cd_procedimento_w	varchar(200);
qt_proc_guia_w		smallint;
cd_senha_w		varchar(100);
cd_medico_executor_w	varchar(10);
dt_inicio_vigencia_w	timestamp;
dt_final_vigencia_w	timestamp;
nr_seq_guia_w		bigint;
nr_cpf_w			varchar(15);
nm_medico_executor_w	varchar(255);
sg_conselho_w		varchar(15);
nr_crm_w		varchar(20);
uf_crm_w		varchar(2);
cd_cbo_saude_w		varchar(20);
ie_tipo_atendimento_w	varchar(20);
ie_tipo_saida_w		varchar(20);
cd_edicao_amb_w		varchar(100);
qt_procedimento_w	double precision;
vl_reducao_acrescimo_w	double precision;
ds_observacao_w		varchar(4000);
ds_obs_w		varchar(4000);
vl_procedimento_w		double precision;
cd_categoria_conv_w	varchar(20);
dt_entrada_w		timestamp;
dt_alta_w			timestamp;
ie_via_acesso_w		varchar(20);
vl_unitario_w		double precision;
ds_procedimento_w	varchar(255);
dt_procedimento_w		timestamp;
vl_total_w			double precision := 0;
cont_w				integer := 0;
ds_razao_social_w		varchar(255);
cd_cnes_w			varchar(20);
cd_cgc_w			varchar(20);
qt_solicitada_w			double precision;
qt_autorizada_w			double precision;
dt_autorizacao_w		timestamp;
cd_doenca_cid_w			varchar(20);
cd_doenca_cid_autor_w		varchar(20);
ds_indicacao_w			varchar(500);
ie_tipo_autorizacao_w		varchar(3);
ds_arquivo_logo_w		varchar(140);
cd_opm_w			varchar(20);
cd_edicao_w			varchar(20);
ds_opm_w			varchar(255);
cont_proced_W			bigint;
nr_seq_apresentacao_w		bigint;
nr_seq_guia_prorrog_w		bigint;
nr_sequencia_autor_w		bigint;
cont_opm_w			bigint;
cont_proc_w			bigint;
qt_prorrog_guia_w		smallint;
cd_interno_w			varchar(15);
cd_convenio_w			integer;
cd_medico_convenio_w		varchar(20);
ie_tipo_doenca_w		varchar(40);
ie_unidade_tempo_w		varchar(40);
qt_tempo_w			bigint;
ie_tipo_acidente_w		varchar(40);
cd_estabelecimento_w		bigint;
cd_cgc_fabricante_w		varchar(14);
ie_clinica_w			bigint;
ds_arquivo_logo_comp_w		varchar(255);
cd_medico_solic_tiss_w		varchar(10);
ie_gerar_tiss_w			varchar(10);
nr_seq_classif_atend_w		bigint;
vl_opm_w			double precision;
cd_setor_entrada_w		bigint;
ie_guia_solic_inte_proc_w	varchar(255);
ds_versao_w			varchar(20);
ie_atendimento_rn_w		varchar(10);
nr_seq_autor_origem_w		bigint;
cd_autorizacao_princ_w		varchar(20);
cd_autorizacao_prest_w		autorizacao_convenio.cd_autorizacao_prest%type;
ordem_w				smallint;
im_logo_convenio_w	tiss_logo_convenio.im_logo_convenio%type;

c01 CURSOR FOR
SELECT	cd_procedimento_convenio,
	ds_procedimento,
	qt_solicitada,
	qt_autorizada,
	cd_edicao_relat,
	1 ordem
from	tiss_proc_solicitado_v
where	nr_sequencia_autor	= nr_sequencia_autor_w
and	ds_versao		= '2.01.01'

union

SELECT	to_char(coalesce(a.cd_material_tuss,coalesce(CASE WHEN a.cd_material_convenio='0' THEN null  ELSE a.cd_material_convenio END ,a.cd_material))) cd_procedimento_convenio,
	substr(coalesce(a.ds_material_tuss,coalesce(a.ds_mat_convenio,obter_desc_material(a.cd_material))),1,255) ds_procedimento,
	coalesce(a.qt_solicitada,0) qt_solicitada,
	coalesce(a.qt_autorizada,0) qt_autorizada,
	substr(TISS_OBTER_ORIGEM_PRECO_MAT(null, a.cd_material, b.cd_estabelecimento, b.cd_convenio, cd_categoria_conv_w, null, b.dt_autorizacao,null,'X',null,null, a.cd_material_tuss),1,20) cd_edicao_relat,
	2 ordem
from	material_autorizado a,
	autorizacao_convenio b
where	b.nr_sequencia		= a.nr_sequencia_autor
and	b.nr_sequencia		= nr_sequencia_autor_w
order by ordem,ds_procedimento;



BEGIN

delete	from w_tiss_guia
where	nm_usuario		= nm_usuario_p;

delete	from w_tiss_dados_atendimento
where	nm_usuario		= nm_usuario_p;

delete	from w_tiss_beneficiario
where	nm_usuario		= nm_usuario_p;

delete	from w_tiss_proc_solic
where	nm_usuario		= nm_usuario_p;

delete	from w_tiss_solicitacao
where	nm_usuario		= nm_usuario_p;

delete	from w_tiss_contratado_solic
where	nm_usuario		= nm_usuario_p;

delete	from w_tiss_totais
where	nm_usuario		= nm_usuario_p;

delete	from w_tiss_relatorio
where	nm_usuario		= nm_usuario_p;

delete	from w_tiss_opm
where	nm_usuario		= nm_usuario_p;

delete	from w_tiss_autorizacao
where	nm_usuario		= nm_usuario_p;

delete	from w_tiss_contratado_exec
where	nm_usuario		= nm_usuario_p;

commit;

nr_sequencia_autor_w	:= nr_sequencia_autor_p;

select	coalesce(max(a.IE_TIPO_AUTORIZACAO),'0'),
	max(b.ie_tipo_atendimento),
	max(c.cd_categoria)
into STRICT	ie_tipo_autorizacao_w,
	ie_tipo_atendimento_w,
	cd_categoria_conv_w
from	autorizacao_convenio a,
	atendimento_paciente b,
	atend_categoria_convenio c
where	a.nr_sequencia	= nr_sequencia_autor_p
and	a.nr_atendimento	= b.nr_atendimento
and	c.nr_atendimento	= b.nr_atendimento;


select	max(cd_convenio),
	max(coalesce(cd_estabelecimento,obter_dados_autor_convenio(a.nr_sequencia, 'E')))
into STRICT	cd_convenio_w,
	cd_estabelecimento_w
from	autorizacao_convenio a
where	nr_sequencia	= nr_sequencia_autor_p;	


if (cd_convenio_w IS NOT NULL AND cd_convenio_w::text <> '') and (cd_estabelecimento_w IS NOT NULL AND cd_estabelecimento_w::text <> '') then
	
	select	coalesce(max(ie_guia_solic_inte_proc), 'N')
	into STRICT	ie_guia_solic_inte_proc_w
	from	tiss_parametros_convenio
	where	cd_estabelecimento	= cd_estabelecimento_w
	and	cd_convenio		= cd_convenio_w;
	
end if;

if (coalesce(nr_sequencia_autor_p,0) > 0) and
	((ie_tipo_autorizacao_w = '2') or (ie_tipo_autorizacao_w in ('3','5','4') and ie_guia_solic_inte_proc_w = 'S')) then	
	
	nr_sequencia_autor_w	:= nr_sequencia_autor_p;	

	select	coalesce(d.cd_ans,c.cd_ans),
		b.ds_arquivo_logo_tiss,
		b.cd_convenio,
		obter_dados_autor_convenio(a.nr_sequencia, 'E')		
	into STRICT	cd_ans_w,
		ds_arquivo_logo_w,
		cd_convenio_w,
		cd_estabelecimento_w		
	from	pessoa_juridica c,			
		convenio_estabelecimento d,
		convenio b,
		autorizacao_convenio a
	where	a.cd_convenio		= b.cd_convenio
	and	d.cd_convenio		= b.cd_convenio
	and	d.cd_estabelecimento	= (obter_dados_autor_convenio(a.nr_sequencia, 'E'))::numeric
	and	b.cd_cgc		= c.cd_cgc
	and	a.nr_sequencia		= nr_sequencia_autor_w;

	select	max(ds_arquivo_logo_comp),
		coalesce(max(ie_gerar_tiss), 'S')
	into STRICT	ds_arquivo_logo_comp_w,
		ie_gerar_tiss_w
	from	tiss_parametros_convenio
	where	cd_estabelecimento	= cd_estabelecimento_w
	and	cd_convenio		= cd_convenio_w;
	
	select	coalesce(max(ds_versao),'2.02.03')
	into STRICT	ds_versao_w
	from	tiss_convenio a,
		xml_projeto b
	where	a.nr_seq_xml_projeto	= b.nr_sequencia
	and	a.nr_sequencia		= OBTER_TISS_CONVENIO(cd_convenio_w,cd_estabelecimento_w,'1');
	
		begin
			select	im_logo_convenio
			into STRICT	im_logo_convenio_w
			from	tiss_logo_convenio
			where	cd_convenio	   = cd_convenio_w
			and 	coalesce(ie_situacao,'N') = 'A';
		exception
		when others then
			im_logo_convenio_w := null;
		end;
		
		if (coalesce(im_logo_convenio_w::text, '') = '') and (ds_arquivo_logo_w IS NOT NULL AND ds_arquivo_logo_w::text <> '') then
			ds_arquivo_logo_w := tiss_diretorio_logo(ds_arquivo_logo_comp_w, ds_dir_padrao_p) || ds_arquivo_logo_w;
		end if;

	if (coalesce(ie_gerar_tiss_w,'S') = 'S') then

		if (ds_arquivo_logo_w IS NOT NULL AND ds_arquivo_logo_w::text <> '') and (coalesce(im_logo_convenio_w::text, '') = '') then

			insert	into w_tiss_relatorio(nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				ds_arquivo_logo,
				im_logo_convenio)
			values (nextval('w_tiss_relatorio_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				ds_arquivo_logo_w,
				null);
		else
			insert	into w_tiss_relatorio(nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				ds_arquivo_logo,
				im_logo_convenio)
			values (nextval('w_tiss_relatorio_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				null,
				im_logo_convenio_w);
		end if;

		select	max(cd_autorizacao),
			max(dt_autorizacao),
			max(cd_senha),
			max(dt_fim_vigencia),
			max(nr_atendimento),
			substr(max(ds_indicacao), 1, 500),
			max(ds_observacao),
			max(tiss_obter_se_atend_rn(nr_atendimento)),
			max(nr_seq_autor_origem),
			max(cd_autorizacao_prest)
		into STRICT	cd_autorizacao_w,
			dt_autorizacao_w,
			cd_senha_w,
			dt_final_vigencia_w,
			nr_atendimento_w,
			ds_indicacao_w,
			ds_obs_w,
			ie_atendimento_rn_w,
			nr_seq_autor_origem_w,
			cd_autorizacao_prest_w
		from	autorizacao_convenio
		where	nr_sequencia		= nr_sequencia_autor_w;
		
		if (coalesce(nr_atendimento_w::text, '') = '') then
			select	coalesce(max(tiss_obter_se_autor_rn(b.ie_cod_usuario_mae_resp, a.nr_sequencia,a.nr_seq_agenda, a.nr_seq_agenda_consulta)),'N')
			into STRICT	ie_atendimento_rn_w
			from	autorizacao_convenio_tiss b,
				autorizacao_convenio a
			where	b.nr_sequencia_autor	= a.nr_sequencia
			and	a.nr_sequencia		= nr_sequencia_autor_w;
		end if;
		
		if (nr_seq_autor_origem_w IS NOT NULL AND nr_seq_autor_origem_w::text <> '') then
			select	cd_autorizacao
			into STRICT	cd_autorizacao_princ_w
			from	autorizacao_convenio
			where	nr_sequencia	= nr_seq_autor_origem_w;
		end if;

		select	max((obter_clinica_atend(nr_atendimento_w, 'C'))::numeric ),
			max((Obter_Classificacao_Atend(nr_atendimento_w,'C'))::numeric ),
			max(obter_setor_atendimento(nr_atendimento_w))
		into STRICT	ie_clinica_w,
			nr_seq_classif_atend_w,
			cd_setor_entrada_w
		;

		select	count(*)
		into STRICT	cont_proced_w
		from	tiss_proc_solicitado_v
		where	nr_sequencia_autor	= nr_sequencia_autor_w
		and	ds_versao		= '2.01.01';

		if (cont_proced_W = 0)	then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(188276);
		end if;

		qt_proc_guia_w 	:= 0;
		open c01;
		loop
		fetch c01 into
			cd_procedimento_w,
			ds_procedimento_w,
			qt_solicitada_w,
			qt_autorizada_w,
			cd_edicao_amb_w,
			ordem_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */

			qt_proc_guia_w		:= qt_proc_guia_w + 1;
			if (qt_proc_guia_w = 1) then

				select	nextval('w_tiss_guia_seq')
				into STRICT	nr_seq_guia_w
				;		
			
				insert	into w_tiss_guia(nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					cd_ans,
					cd_autorizacao,
					dt_autorizacao,
					cd_senha,
					dt_validade_senha,
					dt_emissao_guia,
					nr_interno_conta,
					nr_seq_protocolo,
					nr_sequencia_autor,
					nr_atendimento,
					ie_tiss_tipo_guia,
					ds_observacao,
					ds_versao,
					ie_atendimento_rn,
					cd_autorizacao_princ,
					nr_guia_prestador)
				values (nr_seq_guia_w,
					clock_timestamp(),
					nm_usuario_p,
					cd_ans_w,
					cd_autorizacao_w,
					coalesce(dt_inicio_vigencia_w, dt_autorizacao_w),
					cd_senha_w,
					dt_final_vigencia_w,
					dt_autorizacao_w,
					null,
					null,
					nr_sequencia_autor_w,
					nr_atendimento_w,
					'8',
					coalesce(tiss_obter_regra_campo(1, 'DS_OBSERVACAO', CD_CONVENIO_W, ds_observacao_w, ie_tipo_atendimento_w, cd_categoria_conv_w,'N',0, cd_estabelecimento_w, ie_clinica_w, nr_seq_classif_atend_w, cd_setor_entrada_w, null), ds_obs_w),
					ds_versao_w,
					ie_atendimento_rn_w,
					cd_autorizacao_princ_w,
					coalesce(cd_autorizacao_prest_w, nr_sequencia_autor_w));

				select	max(cd_pessoa_fisica),
					max(nm_pessoa_fisica),
					max(nr_cartao_nac_sus),
					max(ds_plano),
					max(dt_validade_carteira),
					max(cd_usuario_convenio)
				into STRICT	cd_pessoa_fisica_w,
					nm_pessoa_fisica_w,
					nr_cartao_nac_sus_w,
					ds_plano_w,
					dt_validade_carteira_w,
					cd_usuario_convenio_w
				from (	SELECT	cd_pessoa_fisica,
						nm_pessoa_fisica,
						nr_cartao_nac_sus,
						ds_plano,
						dt_validade_carteira,
						cd_usuario_convenio
					from	tiss_dados_paciente_v
					where	ds_versao		= '2.01.01'
					and	nr_sequencia_autor	= nr_sequencia_autor_p					
					and	ie_origem		= 'AC') alias6;

				insert	into w_tiss_beneficiario(nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					nr_seq_guia,
					cd_pessoa_fisica,
					nm_pessoa_fisica,
					nr_cartao_nac_sus,
					ds_plano,
					dt_validade_carteira,
					cd_usuario_convenio)
				values (nextval('w_tiss_beneficiario_seq'),
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_guia_w,
					cd_pessoa_fisica_w,
					nm_pessoa_fisica_w,
					nr_cartao_nac_sus_w,
					ds_plano_w,
					dt_validade_carteira_w,
					cd_usuario_convenio_w);

				select 	max(cd_medico_solic_tiss)
				into STRICT 	cd_medico_solic_tiss_w
				from 	tiss_dados_solicitante_v
				where	nr_sequencia_autor	= nr_sequencia_autor_w
					and	ds_versao		= '2.01.01'
					and	ie_origem		= 'AC';

				if (cd_medico_solic_tiss_w IS NOT NULL AND cd_medico_solic_tiss_w::text <> '') then

					insert into w_tiss_contratado_solic(nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						nr_seq_guia,
						cd_cgc,
						cd_interno,
						nr_cpf,
						nm_contratado,
						nm_solicitante,
						cd_cnes,
						sg_conselho,
						nr_crm,
						uf_crm,
						cd_cbo_saude,
						cd_interno_internacao,
						cd_cgc_internacao,
						nm_contratado_internacao)
					SELECT	nextval('w_tiss_contratado_solic_seq'),
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_guia_w,
						null,
						cd_medico_solic_tiss,
						nr_cpf,
						obter_nome_pf_pj(cd_medico_solic_tiss,null),
						nm_medico_solicitante,
						null,
						sg_conselho,
						nr_crm,
						uf_crm,
						cd_cbo_saude,
						cd_interno,
						cd_cgc,
						ds_razao_social
					from	tiss_dados_solicitante_v
					where	nr_sequencia_autor	= nr_sequencia_autor_w
					and	ds_versao		= '2.01.01'
					and	ie_origem		= 'AC';

				else

					insert into w_tiss_contratado_solic(nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						nr_seq_guia,
						cd_cgc,
						cd_interno,
						nr_cpf,
						nm_contratado,
						nm_solicitante,
						cd_cnes,
						sg_conselho,
						nr_crm,
						uf_crm,
						cd_cbo_saude,
						cd_interno_internacao,
						cd_cgc_internacao,
						nm_contratado_internacao)
					SELECT	nextval('w_tiss_contratado_solic_seq'),
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_guia_w,
						cd_cgc,
						cd_interno,
						nr_cpf,
						ds_razao_social,
						nm_medico_solicitante,
						cd_cnes,
						sg_conselho,
						nr_crm,
						uf_crm,
						cd_cbo_saude,
						cd_interno,
						cd_cgc,
						ds_razao_social
					from	tiss_dados_solicitante_v
					where	nr_sequencia_autor	= nr_sequencia_autor_w
					and	ds_versao		= '2.01.01'
					and	ie_origem		= 'AC';

				end if;

				select	max(cd_doenca_cid)
				into STRICT	cd_doenca_cid_autor_w
				from	tiss_diagnostico_v
				where	ds_versao		= '2.01.01'
				and	ie_origem		= 'ACD'
				and	nr_sequencia_autor 	= nr_sequencia_autor_p
				and	ie_classificacao_doenca 	= 'P';
				
				if (coalesce(cd_doenca_cid_autor_w::text, '') = '') then
					select	max(cd_doenca_cid),
						max(ie_tipo_doenca),
						max(ie_unidade_tempo),
						max(qt_tempo)
					into STRICT	cd_doenca_cid_w,
						ie_tipo_doenca_w,
						ie_unidade_tempo_w,
						qt_tempo_w
					from	tiss_diagnostico_v
					where	ds_versao		= '2.01.01'
					and	ie_origem		= 'AC'
					and	nr_sequencia_autor 	= nr_sequencia_autor_w
					and	ie_classificacao_doenca = 'P';
				else
					cd_doenca_cid_w	:= cd_doenca_cid_autor_w;
				end if;

				select	max(c.ie_tipo_acidente)
				into STRICT	ie_tipo_acidente_w
				from	atendimento_paciente a,
					tipo_acidente b,
					tiss_tipo_acidente c
				where	a.nr_seq_tipo_acidente	= b.nr_sequencia
				and	b.nr_sequencia		= c.nr_seq_acidente
				and	a.nr_atendimento		= nr_atendimento_w;

				insert into w_tiss_solicitacao(nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					nr_seq_guia,
					dt_solicitacao,
					ie_carater_solic,
					cd_cid,
					ds_indicacao,
					ie_tipo_internacao,
					ie_regime_internacao,
					qt_dia_solicitado,
					ie_tipo_doenca,
					ie_unidade_tempo,
					qt_tempo,
					ie_tipo_acidente
					)
				SELECT	nextval('w_tiss_solicitacao_seq'),
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_guia_w,
					dt_autorizacao,
					ie_carater_inter_sus,
					cd_doenca_cid_w,
					ds_indicacao_w,
					substr(IE_TIPO_INTERNACAO,1,2),
					IE_REGIME_INTERNACAO,
					QT_DIA_SOLICITADO,
					ie_tipo_doenca_w,
					ie_unidade_tempo_w,
					qt_tempo_w,
					ie_tipo_acidente_w
				from	tiss_dados_solicitacao_v a
				where	a.nr_sequencia_autor	= nr_sequencia_autor_w
				and	ie_origem		= 'AC'
				and	ds_versao		= '2.01.01';

				select	coalesce(max(Obter_Valor_Conv_Estab(a.cd_convenio, cd_estabelecimento_w, 'CD_INTERNO')), 0)
				into STRICT	cd_interno_w
				from	convenio a,
					autorizacao_convenio b
				where	a.cd_convenio	= b.cd_convenio
				and	b.nr_sequencia	= nr_sequencia_autor_w;

				select	max(ds_razao_social),
					max(cd_cnes),
					max(cd_cgc)
				into STRICT	ds_razao_social_w,
					cd_cnes_w,
					cd_cgc_w
				from	tiss_dados_solicitante_v
				where	nr_sequencia_autor	= nr_sequencia_autor_w
				and	ds_versao		= '2.01.01'
				and	ie_origem		= 'AC';

				insert into w_tiss_autorizacao(nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					nr_seq_guia,
					dt_admissao,
					qt_dia_autorizado,
					ds_tipo_acomodacao,
					cd_cgc,
					nm_contratado,
					cd_cnes,
					cd_interno)
				SELECT	nextval('w_tiss_autorizacao_seq'),
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_guia_w,
					dt_entrada_prevista,
					qt_dia_autorizado,
					cd_tipo_acomod_autor,
					cd_cgc_w,
					ds_razao_social_w,
					cd_cnes_w,
					cd_interno_w
				from	tiss_dados_solicitacao_v a
				where	a.nr_sequencia_autor	= nr_sequencia_autor_w
				and	ie_origem		= 'AC'
				and	ds_versao		= '2.01.01';

			end if;

			insert into w_tiss_proc_solic(nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				nr_seq_guia,
				cd_procedimento,
				cd_edicao_amb,
				ds_procedimento,
				qt_solicitada,
				qt_autorizada,
				nr_seq_apresentacao)
			values (nextval('w_tiss_proc_solic_seq'),
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_guia_w,
				cd_procedimento_w,
				cd_edicao_amb_w,
				ds_procedimento_w,
				qt_solicitada_w,
				qt_autorizada_w,
				qt_proc_guia_w);

			if (qt_proc_guia_w = 9) then

				insert into w_tiss_contratado_exec(NR_SEQUENCIA,
					dt_ATUALIZACAO,
					nm_usUARIO,
					nr_seq_GUIA)
				values (nextval('w_tiss_contratado_exec_seq'),
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_guia_w);
	
				insert	into w_tiss_totais(nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					nr_seq_guia)
				values (nextval('w_tiss_totais_seq'),
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_guia_w);

				qt_proc_guia_w	:= 0;
			end if;

		end loop;
		close c01;

		if (qt_proc_guia_w > 0) and (qt_proc_guia_w < 9) then
	
			insert into w_tiss_contratado_exec(nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				nr_seq_guia)
			values (nextval('w_tiss_contratado_exec_seq'),
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_guia_w);
	
			insert	into w_tiss_totais(nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				nr_seq_guia)
			values (nextval('w_tiss_totais_seq'),
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_guia_w);

		end if;		

		CALL TISS_COMPLETAR_GUIA(nr_seq_guia_w, nm_usuario_p);		
	
	end if;
	
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE tiss_gerar_w_guia_prorrog_int (nr_sequencia_autor_p bigint, ds_dir_padrao_p text, nm_usuario_p text) FROM PUBLIC;

