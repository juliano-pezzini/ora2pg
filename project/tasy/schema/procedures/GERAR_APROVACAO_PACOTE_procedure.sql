-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_aprovacao_pacote (Nr_Interno_Conta_p bigint, Nm_Usuario_p text, Ie_Gerou_Aprovacao_p INOUT text) AS $body$
DECLARE

 
Qt_Regra_w			bigint;
Qt_Aprovacao_Pacote_w		bigint;
Qt_Aprovacao_Pacote_Aprov_w	bigint;
Ie_Gerou_Aprovacao_w		varchar(1) :='N';
cd_area_procedimento_w		bigint;
cd_especialidade_w		bigint;
cd_grupo_proc_w			bigint;
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;

Vl_Diferenca_w			Procedimento_Paciente.Vl_Procedimento%Type;

Cd_Estabelecimento_w		Estabelecimento.Cd_Estabelecimento%Type;

Nr_Atendimento_w		Atendimento_Paciente.Nr_Atendimento%Type;
Ie_Tipo_Atendimento_w		Atendimento_Paciente.Ie_Tipo_Atendimento%Type;

Cd_Convenio_w			Conta_Paciente.Cd_Convenio_Parametro%Type;
Dt_Mesano_Referencia_w		Conta_Paciente.Dt_Mesano_Referencia%Type;

--Pacotes								 
C01 CURSOR FOR 
	SELECT	sum(coalesce(vl_pacote,0)) vl_pacote, 
		sum(coalesce(vl_original,0)) vl_original, 
		nr_seq_proc_pacote 
	from (SELECT 	a.vl_procedimento vl_pacote, 
		coalesce(b.vl_procedimento,0) vl_original, 
		a.nr_seq_proc_pacote 
		FROM procedimento_paciente a
LEFT OUTER JOIN proc_paciente_valor b ON (a.nr_sequencia = b.nr_seq_procedimento AND 1 = b.ie_tipo_valor)
WHERE a.nr_seq_proc_pacote <> a.nr_sequencia and a.nr_interno_conta = nr_interno_conta_p and coalesce(a.cd_motivo_exc_conta::text, '') = '' 
		 
union all
 
		select	a.vl_material vl_pacote, 
			a.vl_tabela_original vl_original, 
			a.nr_seq_proc_pacote 
		from	material_atend_paciente a 
		where 	a.nr_interno_conta = nr_interno_conta_p 
		and		coalesce(a.cd_motivo_exc_conta::text, '') = '') alias7 
	group by nr_seq_proc_pacote;

--Regras 
C02 CURSOR FOR 
	SELECT	nr_sequencia, 
		ie_tipo_responsavel, 
		cd_cargo, 
		nm_usuario_aprov 
	from	regra_aprovacao_pacote 
	where	coalesce(cd_estabelecimento, coalesce(cd_estabelecimento_w,0)) = coalesce(cd_estabelecimento_w,0) 
	and	dt_mesano_referencia_w between trunc(dt_vigencia_inicial) and fim_dia(coalesce(dt_vigencia_final, dt_mesano_referencia_w)) 
	and	coalesce(vl_diferenca_w,0) between vl_minimo and vl_maximo 
	and	coalesce(cd_convenio,cd_convenio_w) = cd_convenio_w 
	and	coalesce(ie_tipo_atendimento,ie_tipo_atendimento_w) = ie_tipo_atendimento_w  
	and	ie_situacao = 'A' 
	and	coalesce(cd_area_procedimento, coalesce(cd_area_procedimento_w,0)) = coalesce(cd_area_procedimento_w,0) 
	and	coalesce(cd_especialidade, coalesce(cd_especialidade_w,0)) = coalesce(cd_especialidade_w,0) 
	and	coalesce(cd_grupo_proc, coalesce(cd_grupo_proc_w,0)) = coalesce(cd_grupo_proc_w,0);

--Aprovadores Regra	 
C03 CURSOR(Nr_Seq_Regra_Aprov_p	bigint) FOR 
	SELECT	nm_usuario_aprov, 
		nr_nivel_aprov 
	from	regra_aprov_pacote_regra 
	where	nr_seq_regra_aprov = Nr_Seq_Regra_Aprov_p 
	order by nr_nivel_aprov;
	
BEGIN 
 
If (coalesce(nr_interno_Conta_p,0) > 0) Then 
 
	Select	count(1) 
	Into STRICT	Qt_Regra_w 
	From	Regra_Aprovacao_Pacote;
 
	Select	Count(1) 
	Into STRICT	Qt_Aprovacao_Pacote_w 
	From	Pacote_Aprovacao 
	Where	Nr_Interno_Conta = nr_interno_Conta_p;
 
	If (Qt_Regra_w > 0) And (Qt_Aprovacao_Pacote_w = 0) Then	 
			 
		Select	c.Cd_Convenio_Parametro, 
			b.Ie_Tipo_Atendimento, 
			c.Cd_Estabelecimento, 
			c.Dt_Mesano_Referencia, 
			c.Nr_Atendimento 
		Into STRICT	Cd_Convenio_w, 
			Ie_Tipo_Atendimento_w, 
			Cd_Estabelecimento_w, 
			Dt_Mesano_Referencia_w, 
			Nr_Atendimento_w 
		From	Conta_Paciente c, 
			Atendimento_Paciente b 
		Where	c.Nr_Atendimento  = b.Nr_Atendimento 
		And	c.Nr_Interno_Conta = Nr_Interno_Conta_p;
		 
		For R1 In C01 Loop --Pacotes 
		 
			Vl_Diferenca_w := R1.Vl_Original - R1.Vl_Pacote;
						 
			If Vl_Diferenca_w > 0 Then 
			 
				select	coalesce(max(cd_procedimento),0), 
					coalesce(max(ie_origem_proced),0) 
				into STRICT	cd_procedimento_w, 
					ie_origem_proced_w 
				from	procedimento_paciente				 
				where	nr_sequencia = r1.nr_seq_proc_pacote;
				 
				select	coalesce(max(cd_area_procedimento),0), 
					coalesce(max(cd_especialidade),0), 
					coalesce(max(cd_grupo_proc),0) 
				into STRICT	cd_area_procedimento_w, 
					cd_especialidade_w, 
					cd_grupo_proc_w 
				from	estrutura_procedimento_v 
				where	cd_procedimento = cd_procedimento_w 
				and	ie_origem_proced = ie_origem_proced_w;
			 
				For R2 In C02 Loop --Regras 
				 
					Ie_Gerou_Aprovacao_w	:= 'S';
					 
					If (R2.Ie_Tipo_Responsavel = 'U') or (R2.Ie_Tipo_Responsavel = 'C') then 
				 
						Insert Into Pacote_Aprovacao(nr_sequencia, 
								nr_interno_conta, 
								nr_atendimento, 
								dt_atualizacao, 
								nm_usuario, 
								dt_atualizacao_nrec, 
								nm_usuario_nrec, 
								nr_seq_proc_pacote, 
								nr_nivel, 
								nm_usuario_aprovador, 
								cd_cargo_aprovador, 
								nr_seq_regra_aprovacao) 
							Values (nextval('pacote_aprovacao_seq'), 
								Nr_Interno_Conta_p, 
								Nr_Atendimento_w, 
								clock_timestamp(), 
								nm_usuario_p, 
								clock_timestamp(), 
								nm_usuario_p, 
								r1.nr_seq_proc_pacote, 
								1, 
								r2.nm_usuario_aprov, 
								r2.cd_cargo, 
								r2.nr_sequencia);
					Elsif (R2.Ie_tipo_Responsavel = 'R') then 
						For R3 In C03(r2.nr_sequencia) Loop 
						 
							Insert Into Pacote_Aprovacao(nr_sequencia, 
									nr_interno_conta, 
									nr_atendimento, 
									dt_atualizacao, 
									nm_usuario, 
									dt_atualizacao_nrec, 
									nm_usuario_nrec, 
									nr_seq_proc_pacote, 
									nr_nivel, 
									nm_usuario_aprovador, 
									cd_cargo_aprovador, 
									nr_seq_regra_aprovacao) 
								Values (nextval('pacote_aprovacao_seq'), 
									Nr_Interno_Conta_p, 
									Nr_Atendimento_w, 
									clock_timestamp(), 
									nm_usuario_p, 
									clock_timestamp(), 
									nm_usuario_p, 
									r1.nr_seq_proc_pacote, 
									r3.nr_nivel_aprov, 
									r3.nm_usuario_aprov, 
									r2.cd_cargo, 
									r2.nr_sequencia);						
						 
						End Loop;
					End If;					
				End Loop;				
			End If;						
		End Loop;	
	Else 
	 
		If (Qt_Aprovacao_Pacote_w > 0) Then 
			Ie_Gerou_Aprovacao_w	:= 'A';
		End If;
		 
		select	count(1) 
		into STRICT	Qt_Aprovacao_Pacote_Aprov_w 
		From	Pacote_Aprovacao 
		Where	Nr_Interno_Conta = nr_interno_Conta_p 
		and	coalesce(dt_aprovacao::text, '') = '';
		 
		if (Qt_Aprovacao_Pacote_Aprov_w = 0) then 
			ie_gerou_aprovacao_w	:= 'N';
		end if;
		 
	 
	End If;
	 
End If;
 
Ie_Gerou_Aprovacao_p	:= Ie_Gerou_Aprovacao_w;
 
Commit;
 
End;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_aprovacao_pacote (Nr_Interno_Conta_p bigint, Nm_Usuario_p text, Ie_Gerou_Aprovacao_p INOUT text) FROM PUBLIC;

