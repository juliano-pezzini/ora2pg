-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE obter_regra_qtde_proc (nr_atendimento_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, nr_sequencia_p bigint, ie_acao_excesso_p INOUT text, ds_erro_p INOUT text, qt_excedida_p INOUT bigint) AS $body$
DECLARE

 
 
/*	ie_tipo_qtde =		D - Dia 
				H - Horas (período) 
				A - Atendimento 	*/
 
 
/*	ie_acao_excesso = 	I - Impede Execução 
				P - Conta Particular 
				J - Exige Justificativa	*/
 
 
 
 
cd_convenio_w			integer;
ie_tipo_atendimento_w		smallint;
qt_permitida_w			double precision;
ie_acao_excesso_w		varchar(10);
qt_horas_intervalo_w		integer;
qt_registros_w			integer;

dt_procedimento_w		timestamp;
qt_executada_aih_w			double precision;
qt_executada_dia_w		double precision;
qt_executada_ano_w		double precision;
qt_executada_atend_w		double precision;
qt_executada_periodo_w		double precision;
qt_excedida_w			double precision	:= 0;
ds_erro_w			varchar(255);
ds_procedimento_w		varchar(254);
ie_tipo_qtde_w			varchar(1);

CD_AREA_PROCEDIMENTO_w		bigint;
CD_ESPECIALIDADE_w       bigint;
CD_GRUPO_PROC_w			bigint;
cd_estabelecimento_w		smallint;
qt_dias_internacao_w		bigint;
cd_tipo_acomod_w		smallint;
ds_mensagem_w			varchar(255);
cd_pessoa_fisica_w		varchar(10);
qt_idade_w			double precision;
qt_executado_w		bigint;
nr_seq_grupo_w		sus_grupo.nr_sequencia%type;
nr_seq_subgrupo_w	sus_subgrupo.nr_sequencia%type;
nr_seq_forma_org_w	sus_forma_organizacao.nr_sequencia%type;

c02 CURSOR FOR 
SELECT 	a.qt_permitida, 
	a.ie_acao_excesso, 
	a.qt_horas_intervalo, 
	a.ie_tipo_qtde, 
	a.ds_mensagem 
from 	convenio_regra_qtde_proc a 
where	coalesce(a.cd_procedimento, cd_procedimento_p) = cd_procedimento_p 
and	coalesce(a.ie_origem_proced, ie_origem_proced_p) = ie_origem_proced_p 
and	coalesce(cd_area_procedimento, cd_area_procedimento_w) = cd_area_procedimento_w 
and	coalesce(cd_especialidade, cd_especialidade_w) = cd_especialidade_w 
and	coalesce(cd_grupo_proc, cd_grupo_proc_w) = cd_grupo_proc_w 
and	coalesce(nr_seq_grupo, coalesce(nr_seq_grupo_w,0)) = coalesce(nr_seq_grupo_w,0) 
and	coalesce(nr_seq_subgrupo, coalesce(nr_seq_subgrupo_w,0)) = coalesce(nr_seq_subgrupo_w,0) 
and	coalesce(nr_seq_forma_org, coalesce(nr_seq_forma_org_w,0)) = coalesce(nr_seq_forma_org_w,0) 
and	a.cd_convenio = cd_convenio_w 
and	coalesce(a.ie_tipo_atendimento,ie_tipo_atendimento_w) = ie_tipo_atendimento_w 
and	coalesce(cd_tipo_acomodacao, coalesce(cd_tipo_acomod_w,0)) = coalesce(cd_tipo_acomod_w,0) 
and	coalesce(a.cd_estabelecimento, coalesce(cd_estabelecimento_w,0)) = coalesce(cd_estabelecimento_w,0) 
and	qt_dias_internacao_w between coalesce(qt_dias_inter_inicio, qt_dias_internacao_w) and coalesce(qt_dias_inter_final, qt_dias_internacao_w) 
and	coalesce(qt_idade_w,1) between coalesce(obter_idade_regra_uso(a.nr_sequencia,'MIN','P'),0) and coalesce(obter_idade_regra_uso(a.nr_sequencia,'MAX', 'P'),9999999) 
and	coalesce(a.ie_situacao,'A') = 'A' 
and	coalesce(cd_perfil, coalesce(obter_perfil_ativo, 0)) = coalesce(obter_perfil_ativo, 0) 
order by coalesce(cd_procedimento,0), 
	 coalesce(cd_grupo_proc,0), 
	 coalesce(cd_especialidade,0), 
	 coalesce(cd_area_procedimento,0), 
	 coalesce(cd_estabelecimento,0), 
	 coalesce(cd_perfil, 0);


BEGIN 
 
ds_erro_w		:= '';
ie_acao_excesso_w	:= '';
 
select	cd_area_procedimento, 
	cd_especialidade, 
	cd_grupo_proc 
into STRICT	cd_area_procedimento_w, 
	cd_especialidade_w, 
	cd_grupo_proc_w 
from	estrutura_procedimento_v 
where	cd_procedimento = cd_procedimento_p 
and	ie_origem_proced = ie_origem_proced_p;
 
/* Obter a estrutura de procedimento SUS Unificado*/
 
begin 
select	nr_seq_grupo, 
	nr_seq_subgrupo, 
	nr_seq_forma_org 
into STRICT	nr_seq_grupo_w, 
	nr_seq_subgrupo_w, 
	nr_seq_forma_org_w 
from	sus_estrutura_procedimento_v 
where	cd_procedimento		= cd_procedimento_p 
and	ie_origem_proced	= ie_origem_proced_p;
exception 
	when others then 
	nr_seq_grupo_w		:= 0;
	nr_seq_subgrupo_w	:= 0;
	nr_seq_forma_org_w	:= 0;
end;
 
select	count(*) 
into STRICT	qt_registros_w 
from	convenio_regra_qtde_proc 
where	coalesce(cd_procedimento, cd_procedimento_p)			= cd_procedimento_p 
and	coalesce(cd_area_procedimento, cd_area_procedimento_w)	= cd_area_procedimento_w 
and	coalesce(cd_especialidade, cd_especialidade_w)		= cd_especialidade_w 
and	coalesce(cd_grupo_proc, cd_grupo_proc_w)			= cd_grupo_proc_w 
and	coalesce(ie_situacao,'A') = 'A';
 
 
if (qt_registros_w	> 0) then 
 
	begin 
	select	coalesce(max(obter_convenio_atendimento(nr_atendimento_p)),0), 
		coalesce(max((obter_tipo_acomod_atend(nr_atendimento_p,'C'))::numeric ),0) 
	into STRICT	cd_convenio_w, 
		cd_tipo_acomod_w 
	;
 
	select 	coalesce(ie_tipo_atendimento,0), 
		coalesce(cd_estabelecimento,0), 
		coalesce(trunc(coalesce(dt_alta, clock_timestamp()) - dt_entrada),0), 
		cd_pessoa_fisica 
	into STRICT	ie_tipo_atendimento_w, 
		cd_estabelecimento_w, 
		qt_dias_internacao_w, 
		cd_pessoa_fisica_w 
	from	atendimento_paciente 
	where	nr_atendimento	= nr_atendimento_p;
	 
	begin 
	select	max(obter_idade(b.dt_nascimento,coalesce(b.dt_obito,clock_timestamp()),'DIA'))	 
	into STRICT	qt_idade_w	 
	from	pessoa_fisica b 
	where	b.cd_pessoa_fisica	= cd_pessoa_fisica_w;
	exception 
	when others then 
		qt_idade_w	:= 0;
	end;
 
 
	ie_tipo_qtde_w := 'X';
 
	open	c02;
	loop 
	fetch	c02 into 
		qt_permitida_w, 
		ie_acao_excesso_w, 
		qt_horas_intervalo_w, 
		ie_tipo_qtde_w, 
		ds_mensagem_w;
		begin 
 
		qt_permitida_w	:= qt_permitida_w;
 
		end;
	end loop;
	close c02;
 
	if (ie_tipo_qtde_w <> 'X') then 
 
		select 	coalesce(a.qt_procedimento,0), 
			a.dt_procedimento, 
			b.ds_procedimento 
		into STRICT	qt_executada_aih_w, 
			dt_procedimento_w, 
			ds_procedimento_w 
		from	procedimento b, 
			procedimento_paciente a 
		where	a.cd_procedimento	= b.cd_procedimento 
		and	a.ie_origem_proced	= b.ie_origem_proced 
		and	nr_sequencia		= nr_sequencia_p;
 
	end if;
 
 
	if (ie_tipo_qtde_w = 'D') then 
 
		select 	coalesce(sum(qt_procedimento),0) 
		into STRICT	qt_executada_dia_w 
		from	procedimento_paciente 
		where	nr_atendimento		= nr_atendimento_p 
		and	cd_procedimento		= cd_procedimento_p 
		and	ie_origem_proced	= ie_origem_proced_p 
		and	trunc(dt_procedimento)	= trunc(dt_procedimento_w);
 
		if (qt_executada_dia_w > qt_permitida_w) then 
			qt_excedida_w	:= qt_executada_dia_w - qt_permitida_w;
			ds_erro_w 	:= WHEB_MENSAGEM_PCK.get_texto(280441);
		end if;
 
	end if;
	 
	if (ie_tipo_qtde_w = 'Y') then 
 
		select 	coalesce(sum(qt_procedimento),0) 
		into STRICT	qt_executada_ano_w 
		from	procedimento_paciente 
		where	nr_atendimento		= nr_atendimento_p 
		and	cd_procedimento		= cd_procedimento_p 
		and	ie_origem_proced	= ie_origem_proced_p 
		and	trunc(dt_procedimento, 'year')	= trunc(dt_procedimento_w, 'year');
 
		if (qt_executada_ano_w > qt_permitida_w) then 
			qt_excedida_w	:= qt_executada_ano_w - qt_permitida_w;
			ds_erro_w 	:= WHEB_MENSAGEM_PCK.get_texto(280442);
		end if;
 
	end if;
	 
	if (ie_tipo_qtde_w = 'A') then 
 
		select 	coalesce(sum(qt_procedimento),0) 
		into STRICT	qt_executada_atend_w 
		from	procedimento_paciente 
		where	nr_atendimento		= nr_atendimento_p 
		and	cd_procedimento		= cd_procedimento_p 
		and	ie_origem_proced	= ie_origem_proced_p;
 
		if (qt_executada_atend_w > qt_permitida_w ) then 
 
			qt_excedida_w	:= qt_executada_atend_w - qt_permitida_w;
			ds_erro_w 	:= WHEB_MENSAGEM_PCK.get_texto(280443);
 
		end if;
 
	end if;
 
 
	if (ie_tipo_qtde_w = 'H') then 
 
		select 	coalesce(sum(qt_procedimento),0) 
		into STRICT	qt_executada_periodo_w 
		from	procedimento_paciente 
		where	nr_atendimento		= nr_atendimento_p 
		and	cd_procedimento		= cd_procedimento_p 
		and	ie_origem_proced	= ie_origem_proced_p 
		and	dt_procedimento between 
			(dt_procedimento_w - (qt_horas_intervalo_w * 60 /1440)) and dt_procedimento_w;
 
		if (qt_executada_periodo_w > qt_permitida_w) then 
			qt_excedida_w	:= qt_executada_periodo_w - qt_permitida_w;
			ds_erro_w 	:= WHEB_MENSAGEM_PCK.get_texto(280444);
		end if;
 
	end if;
 
	if (ie_tipo_qtde_w = 'I') then 
	 
		if	((obter_dados_atendimento(nr_atendimento_p, 'TA') = 1) and (obter_tipo_convenio_atend(nr_atendimento_p) = 3)) then 
			begin 
			 
			select	coalesce(sum(p.qt_procedimento),0) 
			into STRICT	qt_executada_aih_w		 
			from	sus_aih_unif a, 
					conta_paciente c, 
					procedimento_paciente p 
			where	c.nr_interno_conta = a.nr_interno_conta		 
			and	p.nr_interno_conta = c.nr_interno_conta 
			and	coalesce(p.cd_motivo_exc_conta::text, '') = '' 
			and	c.nr_atendimento = nr_atendimento_p 
			and	p.cd_procedimento = cd_procedimento_p 
			and	p.ie_origem_proced = ie_origem_proced_p 
			and	c.ie_status_acerto = 1;
			 
			if (qt_executada_aih_w = 0) then 
				 
				select	coalesce(sum(p.qt_procedimento),0) 
				into STRICT	qt_executada_aih_w		 
				from	conta_paciente c, 
						procedimento_paciente p 
				where	p.nr_interno_conta = c.nr_interno_conta 
				and	coalesce(p.cd_motivo_exc_conta::text, '') = '' 
				and	c.nr_atendimento = nr_atendimento_p 
				and	p.cd_procedimento = cd_procedimento_p 
				and	p.ie_origem_proced = ie_origem_proced_p 
				and	c.ie_status_acerto = 1;
				 
			end if;
			 
			if (qt_executada_aih_w > qt_permitida_w ) then 
 
				qt_excedida_w	:= qt_executada_aih_w - qt_permitida_w;
				ds_erro_w 	:= WHEB_MENSAGEM_PCK.get_texto(280445);
 
			end if;	
			 
			end;
		end if;
		 
	end if;	
	 
	if (ds_mensagem_w IS NOT NULL AND ds_mensagem_w::text <> '') and (ds_erro_w IS NOT NULL AND ds_erro_w::text <> '') then 
		ds_erro_w := ds_mensagem_w;
	end if;
	 
	ds_erro_p := ds_erro_w;
 
	ie_acao_excesso_p	:= ie_acao_excesso_w;
	if (coalesce(ds_erro_w::text, '') = '') then 
		ie_acao_excesso_p	:= '';
	end if;
 
	qt_excedida_p		:= qt_excedida_w;
 
	end;
 
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE obter_regra_qtde_proc (nr_atendimento_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, nr_sequencia_p bigint, ie_acao_excesso_p INOUT text, ds_erro_p INOUT text, qt_excedida_p INOUT bigint) FROM PUBLIC;

