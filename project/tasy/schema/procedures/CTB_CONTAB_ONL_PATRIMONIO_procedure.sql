-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ctb_contab_onl_patrimonio ( dt_referencia_p timestamp, cd_estabelecimento_p bigint, nm_usuario_p text, ie_exclusao_p text default 'N') AS $body$
DECLARE

/*
===============================================================================
Purpose: Indentacao

Remarks: n/a

Who         When            What
----------  -----------     --------------------------------------------------
chjreinert  13/mai/2021     OS 2444975 - Indentacao

===============================================================================
*/
cd_bem_externo_w                pat_bem.cd_bem_externo%type;
cd_bem_w                        pat_bem.cd_bem%type;
cd_centro_credito_w             centro_custo.cd_centro_custo%type;
cd_centro_custo_rateio_w        centro_custo.cd_centro_custo%type;
cd_centro_debito_w              centro_custo.cd_centro_custo%type;
cd_conta_ajuste_pat_w           pat_conta_contabil.cd_conta_ajuste_pat%type;
cd_conta_baixa_tipo_w           pat_tipo_historico.cd_conta_baixa%type;
cd_conta_baixa_w                pat_conta_contabil.cd_conta_baixa%type;
cd_conta_cap_social_w           pat_conta_contabil.cd_conta_cap_social%type;
cd_conta_credito_w              ctb_movimento.cd_conta_credito%type;
cd_conta_debito_w               ctb_movimento.cd_conta_debito%type;
cd_conta_deprec_acum_w          pat_conta_contabil.cd_conta_deprec_acum%type;
cd_conta_deprec_res_w           pat_conta_contabil.cd_conta_deprec_res%type;
cd_conta_entrada_aval_w         pat_conta_contabil.cd_conta_entrada_aval%type;
cd_conta_rec_baixa_dep_w        pat_tipo_historico.cd_conta_rec_baixa_dep%type;
cd_conta_transitoria_w          ctb_regra_estab_dif.cd_conta_contabil%type;
cd_empresa_w                    empresa.cd_empresa%type;
cd_estabelecimento_w            estabelecimento.cd_estabelecimento%type;
cd_hist_ajuste_pat_w            pat_conta_contabil.cd_hist_ajuste_pat%type;
cd_hist_baixa_tipo_w            pat_tipo_historico.cd_conta_baixa%type;
cd_hist_entrada_aval_w          pat_conta_contabil.cd_hist_entrada_aval%type;
cd_historico_baixa_w            pat_conta_contabil.cd_hist_baixa%type;
cd_historico_ct_w               ctb_regra_estab_dif.cd_historico%type;
cd_historico_w                  pat_conta_contabil.cd_historico%type;
cd_tipo_lote_contabil_w         lote_contabil.cd_tipo_lote_contabil%type;
ctb_movimento_doc_w             ctb_online_pck.ctb_movimento_doc;
ctb_movimento_w                 ctb_movimento%rowtype;
ctb_param_lote_patrimonio_w     ctb_param_lote_patrimonio%rowtype;
dados_contab_tf_w               ctb_contab_onl_lote_fin_pck.dados_contab_tf;
ds_atributos_w                  varchar(4000);
ds_bem_w                        pat_bem.ds_bem%type;
ds_compl_historico_w            ctb_movimento.ds_compl_historico%type;
ds_erro_w                       varchar(255) := null;
ds_estorno_w                    varchar(50);
ds_mesano_referencia_w          varchar(40);
ds_mesano_w                     varchar(10);
dt_atualizacao_saldo_w          lote_contabil.dt_atualizacao_saldo%type;
dt_movimento_w                  timestamp;
dt_ref_final_w                  timestamp;
dt_ref_inicial_w                timestamp;
dt_referencia_w                 timestamp;
ie_D_C_deprec_transit_w         varchar(1);
ie_D_C_deprec_w                 varchar(1);
ie_D_C_pat_transit_w            varchar(1);
ie_D_C_pat_w                    varchar(1);
ie_D_C_rat_transit_w            varchar(1);
ie_D_C_rat_w                    varchar(1);
ie_centro_custo_w               conta_contabil.ie_centro_custo%type;
ie_devolucao_w                  varchar(1);
ie_forma_contab_w               varchar(1);
ie_forma_contab_ww              varchar(1);
ie_origem_documento_w           bigint;
ie_permite_estab_dif_w          ctb_regra_estab_dif.ie_permite%type;
ie_rateio_deprec_transf_w       varchar(255);
ie_regra_w                      varchar(1);
ie_situacao_w                   centro_custo.ie_situacao%type;
ie_tipo_valor_w                 pat_bem.ie_tipo_valor%type;
nm_agrupador_w                  agrupador_contabil.nm_atributo%type;
nm_agrupador_ww                 agrupador_contabil.nm_atributo%type;
nr_doc_aux_w                    ctb_movimento.nr_documento%type;
nr_lote_contabil_w              lote_contabil.nr_lote_contabil%type;
nr_seq_agrupamento_w            ctb_movimento.nr_seq_agrupamento%type;
nr_seq_agrupamento_ww           ctb_movimento.nr_seq_agrupamento%type;
nr_seq_regra_conta_w            pat_bem.nr_seq_regra_conta%type;
nr_seq_tab_orig_w               ctb_documento.nr_documento%type;
qt_registro_w                   bigint;
qt_registros_w                  bigint;
sequencia_w                     dbms_sql.number_table;
vl_baixa_deprec_w               pat_valor_bem.vl_baixa_deprec%type;

c_valor_bem CURSOR FOR
    /* Contabilizar depreciacao normal */

    SELECT  1 ie_movimento,
            a.cd_conta_contabil,
            a.cd_centro_custo cd_centro_custo,
            sum(a.vl_deprec_mes) vl_movimento,
            b.nr_sequencia nr_seq_bem,
            'PAT_VALOR_BEM' nm_tabela,
            'VL_DEPREC_MES' nm_atributo,
            11 nr_seq_info_ctb,
            b.cd_bem cd_bem_docto
    from    pat_bem         b,
            pat_valor_bem   a
    where   a.nr_seq_bem            = b.nr_sequencia
    and     a.nr_lote_contabil      = nr_lote_contabil_w
    and     a.cd_estabelecimento    = cd_estabelecimento_w
    and     coalesce(b.nr_seq_crit_rateio::text, '') = ''
    and     ((coalesce(ctb_param_lote_patrimonio_w.ie_contab_rateio_deprec,'N') = 'N') or
            not exists (SELECT 1
                            from    pat_valor_bem_rateio y
                            where   y.nr_seq_valor = a.nr_sequencia))
    and     ((ctb_param_lote_patrimonio_w.ie_taxa_depreciacao = 'N') and (a.tx_depreciacao <> 0) or (ctb_param_lote_patrimonio_w.ie_taxa_depreciacao = 'S'))
    group by
            b.nr_sequencia,
            a.cd_conta_contabil,
            a.cd_centro_custo,
            b.cd_bem

union all

    /* Contabilizar baixa do bem */

    select 2 ie_movimento,
            a.cd_conta_contabil,
            coalesce(c.cd_centro_custo,a.cd_centro_custo) cd_centro_custo,
            coalesce(c.vl_rateio_baixa_bem,a.vl_baixa_bem) vl_movimento,
            a.nr_seq_bem,
            substr(CASE WHEN coalesce(c.cd_centro_custo::text, '') = '' THEN 'PAT_VALOR_BEM'  ELSE 'PAT_VALOR_BEM_RATEIO' END ,1,50) nm_tabela,
            substr(CASE WHEN coalesce(c.cd_centro_custo::text, '') = '' THEN 'VL_BAIXA_BEM'  ELSE 'VL_RATEIO_BAIXA_BEM' END ,1,255) nm_atributo,
            12 nr_seq_info_ctb,
            b.cd_bem cd_bem_docto
    FROM pat_bem b, pat_valor_bem a
LEFT OUTER JOIN pat_valor_bem_rateio c ON (a.nr_sequencia = c.nr_seq_valor)
WHERE a.nr_seq_bem            = b.nr_sequencia  and a.nr_lote_contabil      = nr_lote_contabil_w and coalesce(coalesce(c.vl_rateio_baixa_bem,a.vl_baixa_bem),0) > 0 and a.cd_estabelecimento    = cd_estabelecimento_w and ((ctb_param_lote_patrimonio_w.ie_taxa_depreciacao = 'N') and (a.tx_depreciacao <> 0) or (ctb_param_lote_patrimonio_w.ie_taxa_depreciacao = 'S'))
     
union all

    /* Contabilizar baixa de depreciacao */

    select 3 ie_movimento,
            a.cd_conta_contabil,
            coalesce(c.cd_centro_custo,a.cd_centro_custo) cd_centro_custo,
            coalesce(c.vl_rateio_baixa_deprec,a.vl_baixa_deprec) vl_movimento,
            a.nr_seq_bem,
            substr(CASE WHEN coalesce(c.cd_centro_custo::text, '') = '' THEN 'PAT_VALOR_BEM'  ELSE 'PAT_VALOR_BEM_RATEIO' END ,1,50) nm_tabela,
            substr(CASE WHEN coalesce(c.cd_centro_custo::text, '') = '' THEN 'VL_BAIXA_DEPREC'  ELSE 'VL_RATEIO_BAIXA_DEPREC' END ,1,255) nm_atributo,
            12 nr_seq_info_ctb,
            b.cd_bem cd_bem_docto
    FROM pat_bem b, pat_valor_bem a
LEFT OUTER JOIN pat_valor_bem_rateio c ON (a.nr_sequencia = c.nr_seq_valor)
WHERE a.nr_seq_bem            = b.nr_sequencia  and a.cd_estabelecimento    = cd_estabelecimento_w and a.nr_lote_contabil      = nr_lote_contabil_w and coalesce(coalesce(c.vl_rateio_baixa_deprec, a.vl_baixa_deprec),0) > 0 and ((ctb_param_lote_patrimonio_w.ie_taxa_depreciacao = 'N') and (a.tx_depreciacao <> 0) or (ctb_param_lote_patrimonio_w.ie_taxa_depreciacao = 'S'))
     
union all

    /* Contabilizar o rateio da depreciacao por criterio ou transferencia entre CC */

    select  4 ie_movimento,
            c.cd_conta_contabil,
            c.cd_centro_custo,
            sum(c.vl_rateio_deprec) vl_movimento,
            b.nr_sequencia nr_seq_bem,
            'PAT_VALOR_BEM_RATEIO' nm_tabela,
            'VL_RATEIO_DEPREC' nm_atributo,
            11 nr_seq_info_ctb,
            b.cd_bem cd_bem_docto
    from    pat_bem                 b,
            pat_valor_bem           a,
            pat_valor_bem_rateio    c
    where   a.nr_seq_bem            = b.nr_sequencia
    and     a.nr_sequencia          = c.nr_seq_valor
    and     a.nr_lote_contabil      = nr_lote_contabil_w
    and     a.cd_estabelecimento    = cd_estabelecimento_w
    and     ((b.nr_seq_crit_rateio IS NOT NULL AND b.nr_seq_crit_rateio::text <> '') or (ie_rateio_deprec_transf_w = 'S'))
    and     ((ctb_param_lote_patrimonio_w.ie_taxa_depreciacao = 'N') and (a.tx_depreciacao <> 0) or (ctb_param_lote_patrimonio_w.ie_taxa_depreciacao = 'S'))
    and     not exists ( /* Transferencia entre estabelecimentos */
            select  1
            from    pat_tipo_historico y,
                    pat_historico_bem x
            where   x.nr_seq_bem = b.nr_sequencia
            and     x.nr_seq_tipo = y.nr_sequencia
            and     y.ie_transferencia = 'S'
            and     x.cd_estab_origem <> x.cd_estab_destino
            and     trunc(last_day(x.dt_historico)) = a.dt_valor
            )
    group by
            b.nr_sequencia,
            c.cd_conta_contabil,
            c.cd_centro_custo,
            b.cd_bem
    
union all

    /* Contabiliza depreciacao de bens que sao subvencao governamental */

    select  5 ie_movimento,
            a.cd_conta_contabil,
            a.cd_centro_custo,
            sum(a.vl_deprec_mes) vl_movimento,
            b.nr_sequencia,
            'PAT_VALOR_BEM' nm_tabela,
            'VL_DEPREC_MES' nm_atributo,
            11 nr_seq_info_ctb,
            b.cd_bem cd_bem_docto
    from    pat_bem         b,
            pat_valor_bem   a
    where   a.nr_seq_bem            = b.nr_sequencia
    and     a.nr_lote_contabil      = nr_lote_contabil_w
    and     a.cd_estabelecimento    = cd_estabelecimento_w
    and     coalesce(b.nr_seq_crit_rateio::text, '') = ''
    and     coalesce(ie_subvencao,'N')   = 'S'
    and     not exists (select 1
                            from    pat_valor_bem_rateio y
                            where   y.nr_seq_valor = a.nr_sequencia)
    and     exists (select 1
                    from    pat_bem_subvencao y
                    where   y.nr_seq_bem    = b.nr_sequencia)
    and     ((ctb_param_lote_patrimonio_w.ie_taxa_depreciacao = 'N') and (a.tx_depreciacao <> 0) or (ctb_param_lote_patrimonio_w.ie_taxa_depreciacao = 'S'))
    group by
            a.cd_conta_contabil,
            a.cd_centro_custo,
            b.nr_sequencia,
            b.cd_bem
    
union all

    /* Contabilizar o rateio da depreciacao de bens que sao subvencao governamental */

    select  6 ie_movimento,
            c.cd_conta_contabil,
            c.cd_centro_custo,
            sum(c.vl_rateio_deprec) vl_movimento,
            b.nr_sequencia,
            'PAT_VALOR_BEM_RATEIO' nm_tabela,
            'VL_RATEIO_DEPREC' nm_atributo,
            11 nr_seq_info_ctb,
            b.cd_bem cd_bem_docto
    from    pat_bem                 b,
            pat_valor_bem           a,
            pat_valor_bem_rateio    c
    where   a.nr_seq_bem            = b.nr_sequencia
    and     a.nr_sequencia          = c.nr_seq_valor
    and     a.nr_lote_contabil      = nr_lote_contabil_w
    and     a.cd_estabelecimento    = cd_estabelecimento_w
    and     ((b.nr_seq_crit_rateio IS NOT NULL AND b.nr_seq_crit_rateio::text <> '') or (ie_rateio_deprec_transf_w = 'S'))
    and     coalesce(ie_subvencao,'N')   = 'S'
    and     exists (select 1
                    from    pat_bem_subvencao y
                    where   y.nr_seq_bem    = b.nr_sequencia)
    and     ((ctb_param_lote_patrimonio_w.ie_taxa_depreciacao = 'N') and (a.tx_depreciacao <> 0) or (ctb_param_lote_patrimonio_w.ie_taxa_depreciacao = 'S'))
    and     not exists (
                    select  1
                    from    pat_tipo_historico y,
                            pat_historico_bem x
                    where   x.nr_seq_bem = b.nr_sequencia
                    and     x.nr_seq_tipo = y.nr_sequencia
                    and     y.ie_transferencia = 'S'
                    and     x.cd_estab_origem <> x.cd_estab_destino
                    and     trunc(last_day(x.dt_historico)) = a.dt_valor
                    )
    group by
            c.cd_conta_contabil,
            c.cd_centro_custo,
            b.nr_sequencia,
            b.cd_bem
    
union all

    /* Contabilizar o valor de ajuste, sai do ATIVO entra na DEPREC ACUM - SEM RATEIO */

    select  7 ie_movimento,
            b.cd_conta_contabil,
            b.cd_centro_custo,
            b.vl_deprec_acum_ant vl_movimento,
            a.nr_sequencia,
            'PAT_VALOR_BEM' nm_tabela,
            'VL_DEPREC_ACUM_ANT' nm_atributo,
            84 nr_seq_info_ctb, /* Reavaliacao - Ajuste de valor */
            a.cd_bem cd_bem_docto
    from    pat_bem_avaliacao c,
            pat_valor_bem b,
            pat_bem a
    where   c.nr_seq_bem = a.nr_sequencia
    and     b.nr_seq_bem = a.nr_sequencia
    and     c.nr_lote_contabil = nr_lote_contabil_w
    and     b.nr_lote_contabil = nr_lote_contabil_w
    
union all

    /* Contabilizar o valor ADICIONAL da reavaliacao POSITIVA */

    select  8 ie_movimento,
            a.cd_conta_contabil,
            a.cd_centro_custo,
            a.vl_original vl_movimento,
            a.nr_sequencia,
            'PAT_BEM' nm_tabela,
            'VL_ORIGINAL' nm_atributo,
            82 nr_seq_info_ctb, /* Patrimonio - Aumento de valor */
            a.cd_bem cd_bem_docto
    from    pat_bem a
    where   a.nr_lote_contabil      = nr_lote_contabil_w
    
union all

    /* Contabilizar o valor ah BAIXAR da reavaliacao NEGATIVA */

    select  9 ie_movimento,
            b.cd_conta_contabil,
            b.cd_centro_custo,
            c.vl_ajuste vl_movimento,
            a.nr_sequencia,
            'PAT_BEM_AVALIACAO' nm_tabela,
            'VL_AJUSTE' nm_atributo,
            83 nr_seq_info_ctb, /* Reavaliacao - Diminuicao de valor */
            a.cd_bem cd_bem_docto
    from    pat_bem_avaliacao c,
            pat_valor_bem b,
            pat_bem a
    where   c.nr_seq_bem = a.nr_sequencia
    and     b.nr_seq_bem = a.nr_sequencia
    and     c.nr_lote_contabil = nr_lote_contabil_w
    and     b.nr_lote_contabil = nr_lote_contabil_w
    and     c.nr_seq_tipo_aval = 2;

type c_valor_bem_type   is table of c_valor_bem%rowtype;
c_valor_bem_regs_w      c_valor_bem_type;
c_valor_bem_w                   c_valor_bem%rowtype;

c02 CURSOR FOR
    /* Quando o estabelecimento eh ORIGEM */

    SELECT  b.nr_sequencia nr_seq_bem,
            b.cd_conta_contabil cd_conta_contabil_bem,
            b.cd_centro_custo cd_centro_custo_bem,
            b.cd_bem,
            substr(trim(both b.ds_bem),1,50) ds_bem,
            b.cd_bem_externo,
            a.cd_estab_origem cd_estab_origem,
            a.cd_estab_destino cd_estab_destino,
            a.vl_transf_deprec_mes vl_transf_bem,
            a.vl_transf_deprec_acum vl_transf_deprec_acum,
            a.dt_historico dt_historico_transf,
            'PAT_HISTORICO_BEM' nm_tabela,
            85 nr_seq_info_ctb,
            a.nr_sequencia nr_seq_hist_transf,
            CASE WHEN cd_estabelecimento_w=a.cd_estab_destino THEN 'D' WHEN cd_estabelecimento_w=a.cd_estab_origem THEN 'O' END  ie_origem_destino,
            a.cd_centro_custo_ant,
            a.cd_centro_custo_atual,
            b.nr_seq_regra_conta
    from    pat_tipo_historico c,
            pat_bem b,
            pat_historico_bem a
    where   b.nr_sequencia          = a.nr_seq_bem
    and     a.nr_seq_tipo           = c.nr_sequencia
    and     c.ie_transferencia      = 'S'
    --OS 1803272
    --and   nvl(ie_contab_rateio_deprec_w,'N') = 'S'
    and     ((a.nr_lote_contabil_orig = nr_lote_contabil_w) or (a.nr_lote_contabil = nr_lote_contabil_w))
    and     ((a.cd_estab_origem = a.cd_estab_destino) or
            (ie_permite_estab_dif_w = 'PCCT' AND cd_conta_transitoria_w IS NOT NULL AND cd_conta_transitoria_w::text <> ''));

type c02_type is table of c02%rowtype;
c02_regs_w      c02_type;
c02_w           c02%rowtype;

c03 CURSOR FOR
    /* Rateio do estabelecimento ORIGEM */

    SELECT  a.vl_rateio_deprec,
            a.cd_conta_contabil,
            a.nr_sequencia nr_seq_pat_valor_rateio,
            a.cd_centro_custo cd_centro_custo_rateio,
            11 nr_seq_info_ctb,
            'O' ie_origem_destino,
            c.cd_estabelecimento,
            a.nr_seq_hist_orig,
            a.nr_seq_hist_dest
    from    pat_valor_bem_rateio    a,
            centro_custo            c
    where   a.cd_centro_custo       = c.cd_centro_custo
    and     a.nr_seq_hist_dest      = c02_w.nr_seq_hist_transf
    and     ctb_param_lote_patrimonio_w.ie_contab_rateio_deprec = 'S'

union all

    /* Rateio do estabelecimento DESTINO */

    SELECT  a.vl_rateio_deprec,
            a.cd_conta_contabil,
            a.nr_sequencia nr_seq_pat_valor_rateio,
            a.cd_centro_custo cd_centro_custo_rateio,
            11 nr_seq_info_ctb,
            'D' ie_origem_destino,
            c.cd_estabelecimento,
            a.nr_seq_hist_orig,
            a.nr_seq_hist_dest
    from    pat_valor_bem_rateio    a,
            centro_custo            c
    where   a.cd_centro_custo       = c.cd_centro_custo
    and     a.nr_seq_hist_orig      = c02_w.nr_seq_hist_transf
    and     ctb_param_lote_patrimonio_w.ie_contab_rateio_deprec = 'S';

type c03_type is table of c03%rowtype;
c03_regs_w              c03_type;
c03_w                   c03%rowtype;

c_pat_contab_transf_bem CURSOR FOR
    SELECT  1 ie_movimento,
            a.nr_seq_bem nr_seq_bem,
            a.dt_transacao dt_contabil,
            a.cd_conta_antiga cd_conta_contabil,
            a.nr_seq_trans_financ nr_seq_trans_financ,
            'VL_BEM_TRANSF_CONTA_ANT' nm_atributo,
            sum(a.vl_original) vl_movimento
    from    pat_conta_alteracao a
    where   a.nr_lote_contabil = nr_lote_contabil_w
    group by
            a.nr_seq_bem,
            a.dt_transacao,
            a.cd_conta_antiga,
            a.nr_seq_trans_financ

union all

    SELECT  1,
            a.nr_seq_bem,
            a.dt_transacao,
            a.cd_conta_nova,
            a.nr_seq_trans_financ,
            'VL_BEM_TRANSF_CONTA',
            sum(a.vl_original)
    from    pat_conta_alteracao a
    where   a.nr_lote_contabil = nr_lote_contabil_w
    group by
            a.nr_seq_bem,
            a.dt_transacao,
            a.cd_conta_nova,
            a.nr_seq_trans_financ
    
union all

    select  2,
            a.nr_seq_bem,
            a.dt_transacao,
            substr(pat_obter_conta_deprec_acum(a.cd_conta_antiga,a.nr_seq_regra_conta_ant),1,20),
            a.nr_seq_trans_financ,
            'VL_DEPREC_TRANSF_CONTA_ANT',
            sum(a.vl_deprec_acum)
    from    pat_conta_alteracao a
    where   a.nr_lote_contabil      = nr_lote_contabil_w
    and     pat_obter_conta_deprec_acum(a.cd_conta_antiga,a.nr_seq_regra_conta_ant) <> pat_obter_conta_deprec_acum(a.cd_conta_nova,a.nr_seq_regra_conta_nova)
    group by
            a.nr_seq_bem,
            a.dt_transacao,
            a.cd_conta_antiga,
            a.nr_seq_trans_financ,
            a.nr_seq_regra_conta_ant
    
union all

    select  2,
            a.nr_seq_bem,
            a.dt_transacao,
            substr(pat_obter_conta_deprec_acum(a.cd_conta_nova,a.nr_seq_regra_conta_nova),1,20),
            a.nr_seq_trans_financ,
            'VL_DEPREC_TRANSF_CONTA',
            sum(a.vl_deprec_acum)
    from    pat_conta_alteracao a
    where   a.nr_lote_contabil      = nr_lote_contabil_w
    and     pat_obter_conta_deprec_acum(a.cd_conta_antiga,a.nr_seq_regra_conta_ant) <> pat_obter_conta_deprec_acum(a.cd_conta_nova,a.nr_seq_regra_conta_nova)
    group by
            a.nr_seq_bem,
            a.dt_transacao,
            a.cd_conta_nova,
            a.nr_seq_trans_financ,
            a.nr_seq_regra_conta_nova;

c_pat_contab_transf_bem_w c_pat_contab_transf_bem%rowtype;

procedure get_sequence is

  vet RECORD;
BEGIN

ctb_movimento_doc_w.nr_sequencia        := null;

if (sequencia_w.count > 0) then
        ctb_movimento_doc_w.nr_sequencia        := sequencia_w(sequencia_w.count);
        sequencia_w.delete(sequencia_w.count);
end if;
exception when others then
        ctb_movimento_doc_w.nr_sequencia        := null;
end;

begin

cd_tipo_lote_contabil_w := 17;
cd_estabelecimento_w    := cd_estabelecimento_p;
cd_empresa_w            := obter_empresa_estab(cd_estabelecimento_w);
dt_referencia_w         := dt_referencia_p;
nr_lote_contabil_w      := ctb_online_pck.get_lote_contabil(cd_tipo_lote_contabil_w,cd_estabelecimento_w,dt_referencia_w,nm_usuario_p);

select  count(nr_sequencia)
into STRICT    qt_registro_w
from    ctb_movimento
where   nr_lote_contabil = nr_lote_contabil_w;

begin
select  dt_atualizacao_saldo
into STRICT    dt_atualizacao_saldo_w
from    lote_contabil
where   nr_lote_contabil = nr_lote_contabil_w;
exception
when others then
        dt_atualizacao_saldo_w := null;
end;

if (dt_atualizacao_saldo_w IS NOT NULL AND dt_atualizacao_saldo_w::text <> '') then
        ds_erro_w := ctb_desatualizar_lote(nr_lote_contabil_w, nm_usuario_p, ds_erro_w);
end if;

if (qt_registro_w > 0) then
    begin
    qt_registro_w   := sequencia_w.count;

    for vet in (    SELECT a.nr_sequencia
                    from    ctb_movimento a
                    where   a.nr_lote_contabil = nr_lote_contabil_w
                    order by 1 desc) loop
            begin
            qt_registro_w   := qt_registro_w + 1;
            sequencia_w(qt_registro_w)      := vet.nr_sequencia;
            end;
    end loop;
    end;
end if;

delete  FROM ctb_movimento
where   nr_lote_contabil = nr_lote_contabil_w;
commit;

/* Identifica se eh exclusao do lote */

if (ie_exclusao_p = 'S') then
    begin
    delete  from movimento_contabil
    where   nr_lote_contabil        = nr_lote_contabil_w;

    update  lote_contabil
    set             vl_credito              = 0,
                    vl_debito               = 0
    where   nr_lote_contabil        = nr_lote_contabil_w;

    update  pat_valor_bem
    set             nr_lote_contabil        = 0
    where   nr_lote_contabil        = nr_lote_contabil_w;

    update  pat_historico_bem
    set             nr_lote_contabil        = 0
    where   nr_lote_contabil        = nr_lote_contabil_w;

    update  pat_historico_bem
    set             nr_lote_contabil_orig   = 0
    where   nr_lote_contabil_orig   = nr_lote_contabil_w;

    update  pat_bem
    set             nr_lote_contabil        = 0
    where   nr_lote_contabil        = nr_lote_contabil_w;

    update  pat_bem_avaliacao
    set             nr_lote_contabil        = 0
    where   nr_lote_contabil        = nr_lote_contabil_w;

    commit;
    end;
else
    begin
    select  x.*
    into STRICT    ctb_param_lote_patrimonio_w
    from (SELECT  a.*
        from    ctb_param_lote_patrimonio a
        where   a.cd_empresa    = cd_empresa_w
        and     coalesce(a.cd_estab_exclusivo, cd_estabelecimento_w) = cd_estabelecimento_w
        order   by coalesce(a.cd_estab_exclusivo, 0) desc
        ) x LIMIT 1;

    dt_movimento_w := last_day(dt_referencia_w);

    /*
    A - Analatica
    S - Sintetica
    G - Grupo do tipo de bem
    */
    --depreciado na contabilidade online
    --ie_forma_contab_w       := substr(nvl(obter_valor_param_usuario(135, 15, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w),'S'),1,1);
    CALL ctb_online_pck.definir_regra_lote_esta_dif(cd_tipo_lote_contabil_w, cd_estabelecimento_w);
    ie_permite_estab_dif_w  := ctb_online_pck.get_permite_estab_dif(cd_tipo_lote_contabil_w, cd_estabelecimento_w);
    cd_conta_transitoria_w  := ctb_online_pck.get_conta_transitoria_estab(cd_tipo_lote_contabil_w, cd_estabelecimento_w);
    cd_historico_ct_w       := ctb_online_pck.get_historico_transit_estab(cd_tipo_lote_contabil_w, cd_estabelecimento_w);

    dt_ref_inicial_w        := trunc(dt_referencia_w,'month');
    dt_ref_final_w          := (last_day(trunc(dt_referencia_w,'month')) + 86399/86400);

    update  pat_valor_bem a
    set     a.nr_lote_contabil = nr_lote_contabil_w
    where   a.cd_estabelecimento = cd_estabelecimento_w
    and     a.dt_valor between trunc(dt_referencia_w,'month') and last_day(trunc(dt_referencia_w,'month')) + 86399/86400;

    update  pat_historico_bem a
    set     nr_lote_contabil_orig   = nr_lote_contabil_w
    where   a.dt_historico  between trunc(dt_referencia_w,'month') and fim_mes(dt_referencia_w)
    and     coalesce(a.cd_estab_origem,0)        = cd_estabelecimento_w;

    update  pat_historico_bem a
    set     nr_lote_contabil        = nr_lote_contabil_w
    where   a.dt_historico  between trunc(dt_referencia_w,'month') and fim_mes(dt_referencia_w)
    and     a.cd_estab_destino      = cd_estabelecimento_w
    and     coalesce(nr_lote_contabil,0) = 0;


    /* PAT_BEM_AVALIACAO */

    update  pat_bem_avaliacao a
    set     a.nr_lote_contabil = nr_lote_contabil_w
    where   coalesce(a.nr_lote_contabil,0) = 0
    and     a.dt_avaliacao = pkg_date_utils.start_of(dt_referencia_w, 'MONTH', 0)
    and     a.nr_seq_tipo_aval in (1,2) /* 1 - Avaliacao positiva | 2 - Avaliacao negativa */
    and     (a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '');


    /* PAT_BEM */

    update  pat_bem a
    set     a.nr_lote_contabil = nr_lote_contabil_w
    where   coalesce(a.nr_lote_contabil,0) = 0
    and     a.ie_tipo_valor = 'C' /* Custo atribuido - Usado para o bem com valor adicional da reavaliacao */
    and     exists (SELECT  1
                                    from    pat_bem_avaliacao b
                                    where   b.nr_seq_bem_aval = a.nr_sequencia
                                    and     b.nr_lote_contabil = nr_lote_contabil_w);

    commit;

    /* Identifica se deve ratear o valor de depreciacao do mes em transferencias entre centros de custo */

    ie_rateio_deprec_transf_w       := coalesce(substr(Obter_valor_Param_Usuario(937,104,obter_perfil_ativo,nm_usuario_p,cd_estabelecimento_w),1,1),'N');
    nm_agrupador_w                  := coalesce(trim(both obter_agrupador_contabil(cd_tipo_lote_contabil_w)),'DS_MES_ANO');

    ds_mesano_referencia_w  := substr(obter_mes_extenso(substr(obter_desc_mes_ano(dt_referencia_w,'N'),1,2),'A'),1,20) || '/' || substr(to_char(dt_referencia_w,'dd/mm/yyyy'),7,4);

    CALL ctb_online_pck.definir_atrib_compl(cd_tipo_lote_contabil_w);
    CALL ctb_online_pck.set_value_compl_hist('DT_REFERENCIA',dt_referencia_w);
    CALL ctb_online_pck.set_value_compl_hist('DS_MESANO_REFERENCIA',ds_mesano_referencia_w);

    open c_valor_bem;
    loop
    fetch c_valor_bem bulk collect into c_valor_bem_regs_w limit 1000;
        for idx03 in 1..c_valor_bem_regs_w.count loop
        begin

        c_valor_bem_w   := c_valor_bem_regs_w(idx03);

        ds_compl_historico_w            := '';
        ds_estorno_w                    := '';
        cd_conta_rec_baixa_dep_w        := '';
        ctb_movimento_doc_w             := null;

        if (c_valor_bem_w.nm_tabela = 'PAT_VALOR_BEM') then
                        begin
                        select  a.nr_sequencia
                        into STRICT    nr_seq_tab_orig_w
                        from    pat_valor_bem   a
                        where   a.nr_seq_bem    = c_valor_bem_w.nr_seq_bem
                        and     a.dt_valor between dt_ref_inicial_w and dt_ref_final_w;
                        exception when others then
                                        nr_seq_tab_orig_w := null;
                        end;
        elsif (c_valor_bem_w.nm_tabela = 'PAT_VALOR_BEM_RATEIO') then
                        begin
                        select  a.nr_sequencia
                        into STRICT    nr_seq_tab_orig_w
                        from    pat_valor_bem   a
                        where   a.nr_seq_bem    = c_valor_bem_w.nr_seq_bem
                        and     a.dt_valor between dt_ref_inicial_w and dt_ref_final_w;
                        exception when others then
                                        nr_seq_tab_orig_w := null;
                        end;

                        if (nr_seq_tab_orig_w IS NOT NULL AND nr_seq_tab_orig_w::text <> '') then
                                        begin
                                        select  a.nr_sequencia
                                        into STRICT    nr_seq_tab_orig_w
                                        from    pat_valor_bem_rateio    a
                                        where   a.nr_seq_valor  = nr_seq_tab_orig_w;
                                        exception when others then
                                                        nr_seq_tab_orig_w := null;
                                        end;
                        end if;
        end if;

        begin
        select  nr_seq_regra_conta,
                        ie_tipo_valor
        into STRICT    nr_seq_regra_conta_w,
                        ie_tipo_valor_w
        from    pat_bem
        where   nr_sequencia    = c_valor_bem_w.nr_seq_bem;
        exception when others then
                nr_seq_regra_conta_w    := 0;
                ie_tipo_valor_w         := null;
        end;

        select  count(*)
        into STRICT    qt_registros_w
        from    pat_conta_alteracao
        where   nr_seq_bem = c_valor_bem_w.nr_seq_bem;

        if (qt_registros_w > 0) then
                        nr_seq_regra_conta_w    := coalesce(pat_obter_regra_conta_bem(c_valor_bem_w.nr_seq_bem, dt_referencia_w), nr_seq_regra_conta_w);
        end if;

       --retirado pois a depreciacao eh feita na contabilidade online - Matheus
       /* if      (c_valor_bem_w.ie_movimento in(1,4)) then
                            if      (ie_forma_contab_w = 'S') then
                                            c_valor_bem_w.nr_seq_bem        := 0;
                            end if;
            end if;

            if      (ie_forma_contab_w = 'G') then
                            begin
                            select  c.nr_sequencia
                            into    c_valor_bem_w.nr_seq_bem
                            from    pat_tipo_bem    b,
                                            pat_grupo_tipo  c,
                                            pat_bem         a
                            where   b.nr_sequencia  = a.nr_seq_tipo
                            and     c.nr_sequencia  = b.nr_seq_grupo
                            and     a.nr_sequencia  = c_valor_bem_w.nr_seq_bem;
                            exception when others then
                                            c_valor_bem_w.nr_seq_bem        := null;
                            end;
            end if;*/
            if (nr_seq_regra_conta_w = 0) then
                begin
                select  cd_conta_deprec_acum,
                                cd_conta_deprec_res,
                                cd_conta_baixa,
                                cd_historico,
                                cd_hist_baixa,
                                cd_conta_ajuste_pat,
                                cd_conta_cap_social,
                                cd_hist_ajuste_pat,
                                cd_hist_entrada_aval,
                                cd_conta_entrada_aval
                into STRICT    cd_conta_deprec_acum_w,
                                cd_conta_deprec_res_w,
                                cd_conta_baixa_w,
                                cd_historico_w,
                                cd_historico_baixa_w,
                                cd_conta_ajuste_pat_w,
                                cd_conta_cap_social_w,
                                cd_hist_ajuste_pat_w,
                                cd_hist_entrada_aval_w,
                                cd_conta_entrada_aval_w
                from    pat_conta_contabil a
                where   a.nr_sequencia =        (SELECT min(y.nr_sequencia)
                                                                                from    pat_conta_contabil y
                                                                                where   coalesce(y.cd_estabelecimento,cd_estabelecimento_w)  = cd_estabelecimento_w
                                                                                and     y.cd_conta_contabil     = c_valor_bem_w.cd_conta_contabil
                                                                                and     coalesce(y.cd_empresa,cd_empresa_w)  = cd_empresa_w
                                                                                and     y.dt_vigencia           <= dt_referencia_w
                                                                                and     y.ie_situacao = 'A')
                and     a.ie_situacao = 'A';
                exception
                when no_data_found then
                                --'nao existe conta contabil: ' || c_valor_bem_w.cd_conta_contabil ||
                                --' no cadastro de contas do patrimonio (funcoes/cadastros/patrimonio/contas) nesta vigencia');
                                CALL wheb_mensagem_pck.exibir_mensagem_abort(189845, 'c_valor_bem_w.cd_conta_contabil='||c_valor_bem_w.cd_conta_contabil);
                end;
            else
                begin
                select  cd_conta_deprec_acum,
                                cd_conta_deprec_res,
                                cd_conta_baixa,
                                cd_historico,
                                cd_hist_baixa,
                                cd_conta_ajuste_pat,
                                cd_conta_cap_social,
                                cd_hist_ajuste_pat,
                                cd_hist_entrada_aval,
                                cd_conta_entrada_aval
                into STRICT    cd_conta_deprec_acum_w,
                                cd_conta_deprec_res_w,
                                cd_conta_baixa_w,
                                cd_historico_w,
                                cd_historico_baixa_w,
                                cd_conta_ajuste_pat_w,
                                cd_conta_cap_social_w,
                                cd_hist_ajuste_pat_w,
                                cd_hist_entrada_aval_w,
                                cd_conta_entrada_aval_w
                from    pat_conta_contabil
                where   nr_sequencia    = nr_seq_regra_conta_w
                and     ie_situacao = 'A';
                exception
                when no_data_found then
                                --'Nao existe conta contabil: ' || c_valor_bem_w.cd_conta_contabil ||
                                --' no cadastro de contas do patrimonio (funcoes/cadastros/patrimonio/contas) nesta vigencia');
                                CALL wheb_mensagem_pck.exibir_mensagem_abort(189845, 'c_valor_bem_w.cd_conta_contabil='||c_valor_bem_w.cd_conta_contabil);
                end;
            end if;

            cd_centro_debito_w              := null;
            cd_centro_credito_w             := null;
            ie_devolucao_w                  := 'N';

            if (c_valor_bem_w.ie_movimento in (2,3)) then
                begin
                select  b.cd_conta_baixa,
                                b.cd_hist_baixa,
                                b.ie_devolucao,
                                b.cd_conta_rec_baixa_dep
                into STRICT    cd_conta_baixa_tipo_w,
                                cd_hist_baixa_tipo_w,
                                ie_devolucao_w,
                                cd_conta_rec_baixa_dep_w
                from    pat_tipo_historico b,
                                pat_historico_bem a
                where   b.nr_sequencia  = a.nr_seq_tipo
                and     b.ie_transferencia = 'N'
                and     b.ie_valor in ('B','V')
                and     a.nr_seq_bem    = c_valor_bem_w.nr_seq_bem
                and     dt_historico between trunc(dt_referencia_w,'mm') and fim_mes(dt_referencia_w);
                exception when others then
                                cd_conta_baixa_tipo_w    := '';
                                cd_hist_baixa_tipo_w     := '';
                                ie_devolucao_w           := 'N';
                                cd_conta_rec_baixa_dep_w := '';
                end;

                cd_conta_baixa_w        := coalesce(cd_conta_baixa_tipo_w, cd_conta_baixa_w);
                cd_historico_baixa_w    := coalesce(cd_hist_baixa_tipo_w, cd_historico_baixa_w);
            end if;

            if (c_valor_bem_w.ie_movimento in (1,4)) then
                            cd_conta_debito_w       := cd_conta_deprec_res_w;
                            cd_conta_credito_w      := cd_conta_deprec_acum_w;
                            cd_centro_debito_w      := c_valor_bem_w.cd_centro_custo;
            elsif (c_valor_bem_w.ie_movimento = 2) then
                            cd_conta_debito_w       := cd_conta_baixa_w;
                            cd_conta_credito_w      := c_valor_bem_w.cd_conta_contabil;
                            cd_historico_w          := cd_historico_baixa_w;
                            if (Obter_ie_centro_conta(cd_conta_baixa_w) = 'S') then
                                cd_centro_debito_w := c_valor_bem_w.cd_centro_custo;
                            else
                                cd_centro_debito_w := null;
                            end if;
                            if (Obter_ie_centro_conta(c_valor_bem_w.cd_conta_contabil) = 'S') then
                                cd_centro_credito_w := c_valor_bem_w.cd_centro_custo;
                            else
                                cd_centro_credito_w := null;
                            end if;
            elsif (c_valor_bem_w.ie_movimento = 3) then
                            cd_conta_debito_w       := cd_conta_deprec_acum_w;
                            cd_conta_credito_w      := coalesce(cd_conta_rec_baixa_dep_w,cd_conta_baixa_w);
                            cd_historico_w          := cd_historico_baixa_w;
                            cd_centro_credito_w     := c_valor_bem_w.cd_centro_custo;
                            ds_estorno_w            := wheb_mensagem_pck.get_texto(798657);
            elsif (c_valor_bem_w.ie_movimento in (5,6)) then

                begin
                select  cd_conta_subvencao,
                                cd_historico,
                                cd_centro_custo_rec,
                                cd_conta_receita_sub
                into STRICT    cd_conta_debito_w,
                                cd_historico_w,
                                cd_centro_credito_w,
                                cd_conta_credito_w
                from    pat_bem_subvencao
                where   nr_sequencia    = ( SELECT  min(nr_sequencia)
                                            from    pat_bem_subvencao
                                            where   nr_seq_bem              = c_valor_bem_w.nr_seq_bem
                                            and     dt_inicio_vigencia      <= dt_referencia_w
                                            and     coalesce(dt_fim_vigencia,clock_timestamp())    >= dt_referencia_w);
                exception when no_data_found then
                    select  ds_bem
                    into STRICT    ds_bem_w
                    from    pat_bem
                    where   nr_sequencia    = c_valor_bem_w.nr_seq_bem;

                    --'Falta cadastrar as contas para a contabilizacao da subvencao' || chr(13) ||
                    --'do bem ' || ds_bem_w || ' ( ' || c_valor_bem_w.nr_seq_bem ||')#@#@');
                    CALL wheb_mensagem_pck.exibir_mensagem_abort(189846,'ds_bem_w='||ds_bem_w||';'|| 'c_valor_bem_w.nr_seq_bem'||c_valor_bem_w.nr_seq_bem);

                end;

                if (c_valor_bem_w.ie_movimento = 6) then
                                cd_centro_credito_w     := c_valor_bem_w.cd_centro_custo;
                end if;

            elsif (c_valor_bem_w.ie_movimento = 7) then
                begin
                cd_conta_debito_w       := cd_conta_deprec_acum_w;
                cd_conta_credito_w      := c_valor_bem_w.cd_conta_contabil;
                cd_historico_w          := cd_hist_ajuste_pat_w;

                cd_centro_debito_w      := null;
                cd_centro_credito_w     := null;
                end;
            elsif (c_valor_bem_w.ie_movimento = 8) then
                begin
                cd_conta_debito_w       := c_valor_bem_w.cd_conta_contabil;
                cd_conta_credito_w      := cd_conta_entrada_aval_w;
                cd_historico_w          := cd_hist_entrada_aval_w;
                cd_centro_debito_w      := null;
                cd_centro_credito_w     := null;

                end;
            elsif (c_valor_bem_w.ie_movimento = 9) then
                begin
                cd_conta_debito_w       := cd_conta_entrada_aval_w;
                cd_conta_credito_w      := c_valor_bem_w.cd_conta_contabil;
                cd_historico_w          := cd_hist_entrada_aval_w;
                cd_centro_debito_w      := null;
                cd_centro_credito_w     := null;
                end;
            end if;

            if (c_valor_bem_w.ie_movimento = 2) and (ie_devolucao_w = 'S') then
                c_valor_bem_w.vl_movimento      := 0;
            end if;
            ds_mesano_w     := to_char(dt_referencia_w,'mmyyyy');

            if (nm_agrupador_w = 'NR_SEQ_BEM')then
                nr_seq_agrupamento_w    := c_valor_bem_w.nr_seq_bem;
            elsif (nm_agrupador_w = 'DS_MES_ANO')then
                nr_seq_agrupamento_w    := ds_mesano_w;
            end if;

            if (coalesce(nr_seq_agrupamento_w,0) = 0)then
                            nr_seq_agrupamento_w := ds_mesano_w;
            end if;

            begin
            select  cd_bem,
                    trim(both substr(ds_bem,1,50)),
                    cd_bem_externo
            into STRICT    cd_bem_w,
                    ds_bem_w,
                    cd_bem_externo_w
            from    pat_bem
            where   nr_sequencia = c_valor_bem_w.nr_seq_bem;
            exception when others then
                        cd_bem_w        := null;
                        ds_bem_w        := null;
                        cd_bem_externo_w := null;
            end;

            CALL ctb_online_pck.set_value_compl_hist('CD_BEM',cd_bem_w);
            CALL ctb_online_pck.set_value_compl_hist('DS_BEM',ds_bem_w);
            CALL ctb_online_pck.set_value_compl_hist('DS_ESTORNO',ds_estorno_w);
            CALL ctb_online_pck.set_value_compl_hist('CD_BEM_EXTERNO',cd_bem_externo_w);

            ds_compl_historico_w := ctb_online_pck.ctb_obter_compl_historico(cd_tipo_lote_contabil_w, cd_historico_w);

            if (coalesce(cd_centro_debito_w,0) <> 0) then
                begin
                select  ie_situacao
                into STRICT    ie_situacao_w
                from    centro_custo
                where   cd_centro_custo = cd_centro_debito_w;
                exception when others then
                                ie_situacao_w := 'I';
                end;

                if (ie_situacao_w = 'I') then
                                --'o centro de custo: ' || cd_centro_debito_w || ' esta inativo!');
                                CALL wheb_mensagem_pck.exibir_mensagem_abort(189847,'cd_centro_w='||cd_centro_debito_w);
                end if;
            end if;

            if (coalesce(cd_centro_credito_w,0) <> 0) then
                begin
                select  ie_situacao
                into STRICT    ie_situacao_w
                from    centro_custo
                where   cd_centro_custo = cd_centro_credito_w;
                exception when others then
                                ie_situacao_w := 'I';
                end;

                if (ie_situacao_w = 'I') then
                                --'o centro de custo: ' || cd_centro_credito_w || ' esta inativo!');
                                CALL wheb_mensagem_pck.exibir_mensagem_abort(189847,'cd_centro_w='||cd_centro_credito_w);
                end if;
            end if;

            begin
            select  ie_centro_custo
            into STRICT    ie_centro_custo_w
            from    conta_contabil
            where   cd_conta_contabil       = cd_conta_debito_w;
            exception when others then
                            ie_centro_custo_w := 'S';
            end;

            if (ie_centro_custo_w = 'N') then
                            cd_centro_debito_w      := null;
            end if;

            if (coalesce(c_valor_bem_w.nr_seq_bem,'0') <> '0') then
                ds_atributos_w  := null;

                ds_atributos_w  :=      'NR_SEQ_BEM='   || c_valor_bem_w.nr_seq_bem || ';' ||
                                                                'CD_BEM='       || c_valor_bem_w.cd_bem_docto;
                ctb_obter_doc_movto(    cd_tipo_lote_contabil_w,
                                                                c_valor_bem_w.nm_atributo,
                                                                'VR',
                                                                dt_movimento_w,
                                                                null,
                                                                null,
                                                                ds_atributos_w,
                                                                nm_usuario_p,
                                                                ie_regra_w,
                                                                nr_doc_aux_w,
                                                                ie_origem_documento_w);
            end if;

            ctb_movimento_doc_w.nr_lote_contabil    := nr_lote_contabil_w;
            ctb_movimento_doc_w.dt_movimento        := dt_movimento_w;
            ctb_movimento_doc_w.vl_movimento        := c_valor_bem_w.vl_movimento;
            ctb_movimento_doc_w.cd_historico        := cd_historico_w;
            ctb_movimento_doc_w.nr_seq_agrupamento  := nr_seq_agrupamento_w;
            ctb_movimento_doc_w.ds_compl_historico  := ds_compl_historico_w;
            ctb_movimento_doc_w.nr_documento        := nr_doc_aux_w;
            ctb_movimento_doc_w.ie_origem_documento := ie_origem_documento_w;
            ctb_movimento_doc_w.ie_transitorio      := 'N';
            ctb_movimento_doc_w.nr_seq_info         := c_valor_bem_w.nr_seq_info_ctb;
            ctb_movimento_doc_w.nm_tabela           := c_valor_bem_w.nm_tabela;
            ctb_movimento_doc_w.nm_atributo         := c_valor_bem_w.nm_atributo;
            ctb_movimento_doc_w.nr_seq_tab_orig     := nr_seq_tab_orig_w;

            if (coalesce(cd_conta_debito_w,'X') <> 'X') then
                begin
                cd_estabelecimento_w                    := cd_estabelecimento_p;
                if (coalesce(cd_centro_debito_w, 0) <> 0) then
                                cd_estabelecimento_w := obter_estab_centro_custo(cd_centro_debito_w);
                end if;

                get_sequence;
                ctb_movimento_doc_w.cd_estabelecimento  := cd_estabelecimento_w;
                ctb_movimento_doc_w.cd_conta_debito     := cd_conta_debito_w;
                ctb_movimento_doc_w.cd_conta_credito    := null;
                ctb_movimento_doc_w.cd_centro_custo     := cd_centro_debito_w;

                ctb_movimento_doc_w := ctb_online_pck.ctb_gravar_movto(ctb_movimento_doc_w, nm_usuario_p, 'N', 'N', 'N');
                end;
            end if;

            begin
            select  ie_centro_custo
            into STRICT    ie_centro_custo_w
            from    conta_contabil
            where   cd_conta_contabil = cd_conta_credito_w;
            exception when others then
                            ie_centro_custo_w := 'S';
            end;

            if (ie_centro_custo_w = 'N') then
                            cd_centro_credito_w     := null;
            end if;

            if (coalesce(cd_conta_credito_w,'X') <> 'X') then
                begin
                cd_estabelecimento_w                    := cd_estabelecimento_p;
                if (coalesce(cd_centro_credito_w, 0) <> 0) then
                                cd_estabelecimento_w := obter_estab_centro_custo(cd_centro_credito_w);
                end if;

                get_sequence;
                ctb_movimento_doc_w.cd_estabelecimento  := cd_estabelecimento_w;
                ctb_movimento_doc_w.cd_conta_debito     := null;
                ctb_movimento_doc_w.cd_conta_credito    := cd_conta_credito_w;
                ctb_movimento_doc_w.cd_centro_custo     := cd_centro_credito_w;

                ctb_movimento_doc_w := ctb_online_pck.ctb_gravar_movto(ctb_movimento_doc_w, nm_usuario_p, 'N', 'N', 'N');
                end;
            end if;

            if (c_valor_bem_w.ie_movimento in (1,2,3,4)) and (ie_tipo_valor_w = 'C') and (coalesce(cd_conta_ajuste_pat_w,'X') <> 'X') and (coalesce(cd_conta_cap_social_w,'X') <> 'X') and (coalesce(cd_hist_ajuste_pat_w,0) <> 0) then

                if (c_valor_bem_w.ie_movimento in (2,3)) then
                                cd_hist_ajuste_pat_w    := cd_historico_baixa_w;
                end if;

                ctb_movimento_doc_w.cd_estabelecimento  := cd_estabelecimento_p;
                ctb_movimento_doc_w.cd_centro_custo     := null;
                ctb_movimento_doc_w.cd_historico        := cd_hist_ajuste_pat_w;

                if (c_valor_bem_w.ie_movimento in (1,4)) then
                    get_sequence;
                    ctb_movimento_doc_w.cd_conta_debito     := cd_conta_ajuste_pat_w;
                    ctb_movimento_doc_w.cd_conta_credito    := null;

                    ctb_movimento_doc_w := ctb_online_pck.ctb_gravar_movto(ctb_movimento_doc_w, nm_usuario_p, 'N', 'N', 'N');

                    get_sequence;
                    ctb_movimento_doc_w.cd_conta_debito     := null;
                    ctb_movimento_doc_w.cd_conta_credito    := cd_conta_cap_social_w;

                    ctb_movimento_doc_w := ctb_online_pck.ctb_gravar_movto(ctb_movimento_doc_w, nm_usuario_p, 'N', 'N', 'N');

                elsif (c_valor_bem_w.ie_movimento = 2) then
                    begin
                    select  vl_baixa_deprec
                    into STRICT    vl_baixa_deprec_w
                    from    pat_valor_bem
                    where   nr_seq_bem              = c_valor_bem_w.nr_seq_bem
                    and     nr_lote_contabil        = nr_lote_contabil_w;
                    exception when others then
                                    vl_baixa_deprec_w       := 0;
                    end;

                    ctb_movimento_doc_w.vl_movimento        := c_valor_bem_w.vl_movimento - vl_baixa_deprec_w;

                    get_sequence;
                    ctb_movimento_doc_w.cd_conta_debito     := cd_conta_ajuste_pat_w;
                    ctb_movimento_doc_w.cd_conta_credito    := null;

                    ctb_movimento_doc_w := ctb_online_pck.ctb_gravar_movto(ctb_movimento_doc_w, nm_usuario_p, 'N', 'N', 'N');

                    get_sequence;
                    ctb_movimento_doc_w.cd_conta_debito     := null;
                    ctb_movimento_doc_w.cd_conta_credito    := cd_conta_cap_social_w;

                    ctb_movimento_doc_w := ctb_online_pck.ctb_gravar_movto(ctb_movimento_doc_w, nm_usuario_p, 'N', 'N', 'N');
                end if;
            end if;
            end;
            end loop;
    EXIT WHEN NOT FOUND; /* apply on c_valor_bem */
    end loop;
    close c_valor_bem;

    begin
    cd_estabelecimento_w    := cd_estabelecimento_p;
    ie_forma_contab_ww      := substr(coalesce(obter_valor_param_usuario(135,22,obter_perfil_ativo,nm_usuario_p,cd_estabelecimento_w),'S'),1,1);

    update  pat_conta_alteracao a
    set     a.nr_lote_contabil = nr_lote_contabil_w
    where   a.dt_transacao between trunc(dt_referencia_w,'month') and fim_dia(last_day(trunc(dt_referencia_w,'month')))
    and     exists ( SELECT  1
                    from    pat_bem b
                    where   b.nr_sequencia = a.nr_seq_bem
                    and     b.cd_estabelecimento = cd_estabelecimento_w);
    commit;

    nm_agrupador_ww  := coalesce(trim(both obter_agrupador_contabil(17)),'');

    if (coalesce(nm_agrupador_ww,'X') = 'X') then
        begin
        if (ie_forma_contab_ww = 'A') then
                        nm_agrupador_ww := 'NR_SEQ_BEM';
        elsif (ie_forma_contab_ww = 'S') then
                        nm_agrupador_ww := 'DS_MES_ANO';
        end if;
        end;
    end if;


    open c_pat_contab_transf_bem;
    loop
    fetch c_pat_contab_transf_bem into
                    c_pat_contab_transf_bem_w;
    EXIT WHEN NOT FOUND; /* apply on c_pat_contab_transf_bem */
        begin

        if (c_pat_contab_transf_bem_w.nr_seq_bem IS NOT NULL AND c_pat_contab_transf_bem_w.nr_seq_bem::text <> '') then
            begin
            select  cd_bem,
                            ds_bem
            into STRICT    cd_bem_w,
                            ds_bem_w
            from    pat_bem
            where   nr_sequencia = c_pat_contab_transf_bem_w.nr_seq_bem;
            end;
        end if;


        CALL ctb_online_pck.set_value_compl_hist('CD_BEM',cd_bem_w);
        CALL ctb_online_pck.set_value_compl_hist('DS_BEM',ds_bem_w);

        if (coalesce(c_pat_contab_transf_bem_w.nr_seq_bem,'0') <> '0') then
            dados_contab_tf_w.nr_doc_movto := c_pat_contab_transf_bem_w.nr_seq_bem;
            dados_contab_tf_w.ie_origem_documento := 6;
        end if;

        if (nm_agrupador_ww = 'NR_SEQ_BEM')then
            nr_seq_agrupamento_ww := c_pat_contab_transf_bem_w.nr_seq_bem;
        elsif (nm_agrupador_ww = 'DS_MES_ANO')then
            nr_seq_agrupamento_ww := ds_mesano_w;
        end if;

        if (coalesce(nr_seq_agrupamento_ww,0) = 0)then
            nr_seq_agrupamento_ww := ds_mesano_w;
        end if;

        dados_contab_tf_w.nr_lote_contabil      := nr_lote_contabil_w;
        dados_contab_tf_w.cd_conta_contabil     := c_pat_contab_transf_bem_w.cd_conta_contabil;
        dados_contab_tf_w.nr_seq_agrupamento    := nr_seq_agrupamento_ww;
        dados_contab_tf_w.nr_seq_trans_fin      := c_pat_contab_transf_bem_w.nr_seq_trans_financ;
        dados_contab_tf_w.nm_atributo           := c_pat_contab_transf_bem_w.nm_atributo;

        dados_contab_tf_w.doc.cd_estabelecimento        := cd_estabelecimento_w;
        dados_contab_tf_w.doc.dt_competencia            := c_pat_contab_transf_bem_w.dt_contabil;
        dados_contab_tf_w.doc.cd_tipo_lote_contabil     := cd_tipo_lote_contabil_w;
        dados_contab_tf_w.doc.nr_seq_trans_financ       := c_pat_contab_transf_bem_w.nr_seq_trans_financ;
        dados_contab_tf_w.doc.nr_documento              := c_pat_contab_transf_bem_w.nr_seq_bem;
        dados_contab_tf_w.doc.vl_movimento              := c_pat_contab_transf_bem_w.vl_movimento;
        dados_contab_tf_w.doc.nm_atributo               := c_pat_contab_transf_bem_w.nm_atributo;
        dados_contab_tf_w.doc.nr_lote_contabil          := nr_lote_contabil_w;

        ctb_contab_onl_lote_fin_pck.contabiliza_trans_financ(dados_contab_tf_w, nm_usuario_p);

        end;
    end loop;
    close c_pat_contab_transf_bem;

    end;


    /* *************************************************************************************************************
    INICIO Contabilizacao entre estabelecimentos COM CONTA TRANSITORIA
    ************************************************************************************************************* */
    /* Mes para complemento historico no formato Jan/2016, Fev/2016, Mar/2016, etc. */

    ds_mesano_referencia_w  := substr(obter_mes_extenso(to_char(dt_referencia_w,'mm'),'A') || '/' || to_char(dt_referencia_w,'yyyy'),1,10);

    /* Percorrer os bens que tiveram transferencia */

    CALL ctb_online_pck.set_value_compl_hist('DT_REFERENCIA',to_char(dt_referencia_w,'dd/mm/yyyy'));
    CALL ctb_online_pck.set_value_compl_hist('DS_MESANO_REFERENCIA',ds_mesano_referencia_w);
    CALL ctb_online_pck.set_value_compl_hist('CD_ESTAB_TRANS',cd_estabelecimento_w);

    open c02;
    loop
    fetch c02 bulk collect into c02_regs_w limit 1000;
        for idx02 in 1..c02_regs_w.count loop
        begin
        c02_w   := c02_regs_w(idx02);

        if (nm_agrupador_w = 'NR_SEQ_BEM') then
            begin
            --Depreciacao feita pela contabilidade online - Matheus
            /*if      (ie_forma_contab_w = 'S') then
                            begin
                            nr_seq_agrupamento_w := 0;
                            end;
            elsif   (ie_forma_contab_w = 'G') then
                            begin
                            select  c.nr_sequencia
                            into    nr_seq_agrupamento_w
                            from    pat_tipo_bem    b,
                                            pat_grupo_tipo  c,
                                            pat_bem         a
                            where   b.nr_sequencia  = a.nr_seq_tipo
                            and     c.nr_sequencia  = b.nr_seq_grupo
                            and     a.nr_sequencia  = c02_w.nr_seq_bem;
                            exception when others then
                                            nr_seq_agrupamento_w := 0;
                            end;
            else
                            begin
                            nr_seq_agrupamento_w := c02_w.nr_seq_bem;
                            end;
            end if;*/
            if (coalesce(nr_seq_agrupamento_w,0) = 0) then
                            begin
                            nr_seq_agrupamento_w := c02_w.nr_seq_bem;
                            end;
            end if;

            end;
        else
            begin
            nr_seq_agrupamento_w := (ds_mesano_w)::numeric;
            end;
        end if;

        begin
        select  cd_conta_deprec_acum,
                        cd_conta_deprec_res,
                        cd_conta_baixa,
                        cd_historico,
                        cd_hist_baixa,
                        cd_conta_ajuste_pat,
                        cd_conta_cap_social,
                        cd_hist_ajuste_pat,
                        cd_hist_entrada_aval,
                        cd_conta_entrada_aval
        into STRICT    cd_conta_deprec_acum_w,
                        cd_conta_deprec_res_w,
                        cd_conta_baixa_w,
                        cd_historico_w,
                        cd_historico_baixa_w,
                        cd_conta_ajuste_pat_w,
                        cd_conta_cap_social_w,
                        cd_hist_ajuste_pat_w,
                        cd_hist_entrada_aval_w,
                        cd_conta_entrada_aval_w
        from    pat_conta_contabil
        where   nr_sequencia = c02_w.nr_seq_regra_conta
        and     ie_situacao = 'A';
        exception
        when no_data_found then
                        --'Nao existe conta contabil: ' || c_valor_bem_w.cd_conta_contabil ||
                        --' no cadastro de contas do patrimonio (funcoes/cadastros/patrimonio/contas) nesta vigencia');
                        CALL wheb_mensagem_pck.exibir_mensagem_abort(189845, 'c_valor_bem_w.cd_conta_contabil='||c02_w.cd_conta_contabil_bem);
        end;

        /* INICIO montar complemento historico */

        CALL ctb_online_pck.set_value_compl_hist('CD_BEM',c02_w.cd_bem);
        CALL ctb_online_pck.set_value_compl_hist('DS_BEM',c02_w.ds_bem);
        CALL ctb_online_pck.set_value_compl_hist('CD_BEM_EXTERNO',c02_w.cd_bem_externo);

        ds_compl_historico_w    := coalesce(ctb_online_pck.ctb_obter_compl_historico(cd_tipo_lote_contabil_w, cd_historico_w), substr(
                                                                        wheb_mensagem_pck.get_texto(455389,'NR_SEQ_BEM='||c02_w.nr_seq_bem),1,255));
        end;
        /* FINAL montar complemento historico */

        /* Pegar a data do historico caso a contabilizacao considere o rateio de depreciacao */

        if (ctb_param_lote_patrimonio_w.ie_contab_rateio_deprec = 'S') then
            begin
            dt_movimento_w := c02_w.dt_historico_transf;
            end;
        end if;

        /* Se for transferencia entre estabelecimentos deve realizar os lancamentos do valor do bem contra a conta transitoria
        DEPRECIACAO ACUMULADA ate o final do mes anterior
        VALOR ORIGINAL do bem */
        if (true) and (c02_w.cd_estab_origem <> c02_w.cd_estab_destino) then
            begin
            /* Contabilizar entrada ou saida do estabelecimento contra a conta transitoria */

            if (c02_w.ie_origem_destino = 'O') then
                begin
                ie_D_C_pat_w            := 'C';
                ie_D_C_pat_transit_w    := 'D';
                ie_D_C_deprec_w         := 'D';
                ie_D_C_deprec_transit_w := 'C';
                end;
            else
                begin
                ie_D_C_pat_w            := 'D';
                ie_D_C_pat_transit_w    := 'C';
                ie_D_C_deprec_w         := 'C';
                ie_D_C_deprec_transit_w := 'D';
                end;
            end if;

            /* *************************************************************************************************************
            INICIO CREDITO - origem /DEBITO - destino VALOR BEM
            ************************************************************************************************************** */
            c_valor_bem_w.nm_atributo               := 'VL_TRANSF_DEPREC_MES';
            ds_atributos_w          := 'NR_SEQ_BEM=' || c02_w.nr_seq_bem || ';' || 'CD_BEM=' || c02_w.cd_bem;

            /* Obter documento e origem com base no atributo */

            ctb_obter_doc_movto(    cd_tipo_lote_contabil_w,
                                                            c_valor_bem_w.nm_atributo,
                                                            'VR',
                                                            dt_movimento_w,
                                                            null,
                                                            null,
                                                            ds_atributos_w,
                                                            nm_usuario_p,
                                                            ie_regra_w,
                                                            nr_doc_aux_w,
                                                            ie_origem_documento_w);

            ctb_movimento_doc_w := null;
            get_sequence;
            ctb_movimento_doc_w.cd_estabelecimento  := cd_estabelecimento_w;
            ctb_movimento_doc_w.nr_lote_contabil    := nr_lote_contabil_w;
            ctb_movimento_doc_w.dt_movimento        := dt_movimento_w;
            ctb_movimento_doc_w.vl_movimento        := c02_w.vl_transf_bem;
            ctb_movimento_doc_w.cd_historico        := cd_historico_w;
            ctb_movimento_doc_w.nr_seq_agrupamento  := nr_seq_agrupamento_w;
            ctb_movimento_doc_w.ds_compl_historico  := ds_compl_historico_w;
            ctb_movimento_doc_w.nr_documento        := nr_doc_aux_w;
            ctb_movimento_doc_w.ie_origem_documento := ie_origem_documento_w;
            ctb_movimento_doc_w.ie_transitorio      := 'N';
            ctb_movimento_doc_w.nr_seq_info         := c02_w.nr_seq_info_ctb;
            ctb_movimento_doc_w.nm_tabela           := c02_w.nm_tabela;
            ctb_movimento_doc_w.nm_atributo         := c_valor_bem_w.nm_atributo;
            ctb_movimento_doc_w.nr_seq_tab_orig     := c02_w.nr_seq_hist_transf;

            if (ie_D_C_pat_w = 'D') then
                ctb_movimento_doc_w.cd_conta_debito     := c02_w.cd_conta_contabil_bem;
                ctb_movimento_doc_w.cd_conta_credito    := null;
            else
                ctb_movimento_doc_w.cd_conta_debito     := null;
                ctb_movimento_doc_w.cd_conta_credito    := c02_w.cd_conta_contabil_bem;
            end if;

            /* CREDITAR/DEBITAR bem no estabelecimento no estabelecimento atual - ORIGEM */

            ctb_movimento_doc_w := ctb_online_pck.ctb_gravar_movto(ctb_movimento_doc_w, nm_usuario_p, 'N', 'N', 'N');
            /* *************************************************************************************************************
            FIM CREDITO - origem /DEBITO - destino VALOR BEM
            ************************************************************************************************************** */
            /* *************************************************************************************************************
            DEBITAR - origem / CREDITAR - destino O VALOR DO BEM NA CONTA TRANSITORIA
            ************************************************************************************************************** */
            ctb_movimento_w := null;
            get_sequence;
            ctb_movimento_w.nr_sequencia            := ctb_movimento_doc_w.nr_sequencia;
            ctb_movimento_w.nr_lote_contabil        := nr_lote_contabil_w;
            ctb_movimento_w.cd_estabelecimento      := cd_estabelecimento_w;
            ctb_movimento_w.cd_historico            := cd_historico_ct_w;
            ctb_movimento_w.ds_compl_historico      := ds_compl_historico_w;
            ctb_movimento_w.nr_documento            := c02_w.nr_seq_bem;
            ctb_movimento_w.dt_movimento            := dt_movimento_w;
            ctb_movimento_w.vl_movimento            := c02_w.vl_transf_bem;
            ctb_movimento_w.ie_origem_documento     := ie_origem_documento_w;
            ctb_movimento_w.nr_seq_agrupamento      := nr_seq_agrupamento_w;

            if (ie_D_C_pat_transit_w = 'D') then
                ctb_movimento_w.cd_conta_debito  := cd_conta_transitoria_w;
                ctb_movimento_w.cd_conta_credito := null;
            else
                ctb_movimento_w.cd_conta_debito  := null;
                ctb_movimento_w.cd_conta_credito := cd_conta_transitoria_w;
            end if;

            ctb_movimento_w := ctb_online_pck.ctb_gerar_movto_conta_transit(ctb_movimento_w, nm_usuario_p, 'N', 'N');

            /* *************************************************************************************************************
            INICIO DEBITO - origem / CREDITO - destino VALOR DEPRECIACAO ACUMULADA
            ************************************************************************************************************** */
            c_valor_bem_w.nm_atributo               := 'VL_TRANSF_DEPREC_ACUM';
            ds_atributos_w          := 'NR_SEQ_BEM=' || c02_w.nr_seq_bem || ';' || 'CD_BEM=' || c02_w.cd_bem;

            /* Obter documento e origem com base no atributo */

            ctb_obter_doc_movto(    cd_tipo_lote_contabil_w,
                                                            c_valor_bem_w.nm_atributo,
                                                            'VR',
                                                            dt_movimento_w,
                                                            null,
                                                            null,
                                                            ds_atributos_w,
                                                            nm_usuario_p,
                                                            ie_regra_w,
                                                            nr_doc_aux_w,
                                                            ie_origem_documento_w);

            /* Atributos para inserir */

            get_sequence;
            ctb_movimento_doc_w.vl_movimento        := c02_w.vl_transf_deprec_acum;

            if (ie_D_C_deprec_w = 'D') then
                ctb_movimento_doc_w.cd_conta_debito     := cd_conta_deprec_acum_w;
                ctb_movimento_doc_w.cd_conta_credito    := null;
            else
                ctb_movimento_doc_w.cd_conta_debito     := null;
                ctb_movimento_doc_w.cd_conta_credito    := cd_conta_deprec_acum_w;
            end if;

            ctb_movimento_doc_w := ctb_online_pck.ctb_gravar_movto(ctb_movimento_doc_w, nm_usuario_p, 'N', 'N', 'N');
            /* *************************************************************************************************************
            FIM DEBITO - origem / CREDITO - destino VALOR DEPRECIACAO ACUMULADA
            ************************************************************************************************************** */
            /* *************************************************************************************************************
            CREDITAR - origem / DEBITAR - destino O VALOR DE DEPRECIACAO ACUMULADA NA CONTA TRANSITORIA
            ************************************************************************************************************** */
            get_sequence;
            ctb_movimento_w.nr_sequencia    := ctb_movimento_doc_w.nr_sequencia;
            ctb_movimento_w.vl_movimento    := c02_w.vl_transf_deprec_acum;

            if (ie_D_C_deprec_transit_w = 'D') then
                ctb_movimento_w.cd_conta_debito         := cd_conta_transitoria_w;
                ctb_movimento_w.cd_conta_credito        := null;
            else
                ctb_movimento_w.cd_conta_debito         := null;
                ctb_movimento_w.cd_conta_credito        := cd_conta_transitoria_w;
            end if;

            ctb_movimento_w := ctb_online_pck.ctb_gerar_movto_conta_transit(ctb_movimento_w, nm_usuario_p, 'N', 'N');

            /* *************************************************************************************************************
            INICIO
            DEBITAR - origem / CREDITAR - destino O VALOR DO BEM NA CONTA DE AJUSTE DE PATRIMONIAL
            DEBITAR - origem / CREDITAR - destino A DEPRECIACAO  ACUMULADA DA CONTA DE CAPITAL SOCIAL
            CREDITAR - origem / DEBITAR - destino A DEPRECIACAO  ACUMULADA DA CONTA DE AJUSTE AVALIACAO PATRIMONIAL
            ************************************************************************************************************** */
            if (coalesce(cd_conta_entrada_aval_w,'X') != 'X') and (coalesce(cd_conta_ajuste_pat_w, 'X') != 'X') and (coalesce(cd_conta_cap_social_w, 'X') != 'X') then
                begin
                /*
                - Debitar o valor do bem no estabelecimento ORIGEM na conta de ajuste que foi o credito de contrapartida
                do valor reavaliado do bem

                Ambas contra a transitoria, no caso eh so transferencia de valor
                */
                get_sequence;
                ctb_movimento_doc_w.vl_movimento        := c02_w.vl_transf_bem;
                ctb_movimento_doc_w.cd_historico        := cd_hist_ajuste_pat_w;

                if (ie_D_C_deprec_w = 'D') then
                    ctb_movimento_doc_w.cd_conta_debito     := cd_conta_entrada_aval_w;
                    ctb_movimento_doc_w.cd_conta_credito    := null;
                else
                    ctb_movimento_doc_w.cd_conta_debito     := null;
                    ctb_movimento_doc_w.cd_conta_credito    := cd_conta_entrada_aval_w;
                end if;

                ctb_movimento_doc_w := ctb_online_pck.ctb_gravar_movto(ctb_movimento_doc_w, nm_usuario_p, 'N', 'N', 'N');

                /*
                Contabilizacao transitoria
                Creditar origem
                Debitar destino
                */
                get_sequence;
                ctb_movimento_w.nr_sequencia    := ctb_movimento_doc_w.nr_sequencia;
                ctb_movimento_w.vl_movimento    := c02_w.vl_transf_bem;

                ctb_movimento_w := ctb_online_pck.ctb_gerar_movto_conta_transit(ctb_movimento_w, nm_usuario_p, 'N', 'N');

                /*
                Debitar a depreciacao acumulada no estabelecimento ORIGEM da conta de capital social
                Cretitar transitoria

                Creditar conta de capital social no estabelecimento destino
                                        Transferencia de deprec acumulada
                Debitar transitoria
                */
                get_sequence;
                ctb_movimento_doc_w.vl_movimento        := c02_w.vl_transf_deprec_acum;

                if (ie_D_C_deprec_w = 'D') then
                    ctb_movimento_doc_w.cd_conta_debito     := cd_conta_cap_social_w;
                    ctb_movimento_doc_w.cd_conta_credito    := null;
                else
                    ctb_movimento_doc_w.cd_conta_debito     := null;
                    ctb_movimento_doc_w.cd_conta_credito    := cd_conta_cap_social_w;
                end if;

                ctb_movimento_doc_w := ctb_online_pck.ctb_gravar_movto(ctb_movimento_doc_w, nm_usuario_p, 'N', 'N', 'N');

                get_sequence;
                ctb_movimento_w.nr_sequencia    := ctb_movimento_doc_w.nr_sequencia;
                ctb_movimento_w.vl_movimento    := c02_w.vl_transf_deprec_acum;

                ctb_movimento_w := ctb_online_pck.ctb_gerar_movto_conta_transit(ctb_movimento_w, nm_usuario_p, 'N', 'N');

                /*
                Creditar no estabelecimento origem o valor de deprec acumulada (ajuste de avaliacao patrimonial)
                */
                get_sequence;
                if (ie_D_C_pat_w = 'D') then
                    ctb_movimento_doc_w.cd_conta_debito     := cd_conta_ajuste_pat_w;
                    ctb_movimento_doc_w.cd_conta_credito    := null;
                else
                    ctb_movimento_doc_w.cd_conta_debito     := null;
                    ctb_movimento_doc_w.cd_conta_credito    := cd_conta_ajuste_pat_w;
                end if;

                ctb_movimento_doc_w := ctb_online_pck.ctb_gravar_movto(ctb_movimento_doc_w, nm_usuario_p, 'N', 'N', 'N');

                get_sequence;
                ctb_movimento_w.nr_sequencia    := ctb_movimento_doc_w.nr_sequencia;

                if (ie_D_C_pat_transit_w = 'D') then
                    ctb_movimento_w.cd_conta_debito  := cd_conta_transitoria_w;
                    ctb_movimento_w.cd_conta_credito := null;
                else
                    ctb_movimento_w.cd_conta_debito  := null;
                    ctb_movimento_w.cd_conta_credito := cd_conta_transitoria_w;
                end if;

                ctb_movimento_w := ctb_online_pck.ctb_gerar_movto_conta_transit(ctb_movimento_w, nm_usuario_p, 'N', 'N');
                end;
            end if;
            /* *************************************************************************************************************
            FIM
            DEBITAR - origem / CREDITAR - destino O VALOR DO BEM NA CONTA DE AJUSTE DE PATRIMONIAL
            DEBITAR - origem / CREDITAR - destino A DEPRECIACAO  ACUMULADA DA CONTA DE CAPITAL SOCIAL
            CREDITAR - origem / DEBITAR - destino A DEPRECIACAO  ACUMULADA DA CONTA DE AJUSTE AVALIACAO PATRIMONIAL
            ************************************************************************************************************** */
            /* *************************************************************************************************************
            INICIO CONTABILIZACAO DO RATEIO / DEPREC MES POR TRANSF ENTRE ESTABELECIMENTOS
            ************************************************************************************************************* */
            /* ctb_param_lote_patrimonio_w.ie_contab_rateio_deprec - Contabilizar o rateio da depreciacao, no estabelecimento origem e destino ou somente no destino */

            if (ctb_param_lote_patrimonio_w.ie_contab_rateio_deprec = 'S') then
                begin
                c_valor_bem_w.nm_tabela         := 'PAT_VALOR_BEM_RATEIO';
                c_valor_bem_w.nm_atributo               := 'VL_RATEIO_DEPREC';
                end;
            else
                begin
                c_valor_bem_w.nm_tabela         := 'PAT_VALOR_BEM';
                c_valor_bem_w.nm_atributo               := 'VL_DEPREC_MES';
                end;
            end if;

            ds_atributos_w          := 'NR_SEQ_BEM=' || c02_w.nr_seq_bem || ';' || 'CD_BEM=' || c02_w.cd_bem;
            ctb_obter_doc_movto(    cd_tipo_lote_contabil_w,
                                                            c_valor_bem_w.nm_atributo,
                                                            'VR',
                                                            dt_movimento_w,
                                                            null,
                                                            null,
                                                            ds_atributos_w,
                                                            nm_usuario_p,
                                                            ie_regra_w,
                                                            nr_doc_aux_w,
                                                            ie_origem_documento_w);
            end;
        end if;
        open c03;
        loop
        fetch c03 bulk collect into c03_regs_w;
            for idx01 in 1..c03_regs_w.count loop
            begin
            c03_w := c03_regs_w(idx01);
            /* *************************************************************************************************************
            INICIO O ORIGEM TEM QUE CONTABILIZAR A DEPRECIACAO QUE FICOU AQUI PARA DEPOIS ZERAR CONTRA A CONTA TRANSITERIA
            ************************************************************************************************************* */
            if (true) and
                (((c03_w.ie_origem_destino = 'O') and (c02_w.cd_estab_origem = c03_w.cd_estabelecimento) and (c03_w.cd_estabelecimento = cd_estabelecimento_w)) or
                ((c03_w.ie_origem_destino = 'D') and (c02_w.cd_estab_destino = c03_w.cd_estabelecimento) and (c03_w.cd_estabelecimento = cd_estabelecimento_w) and (coalesce(c03_w.nr_seq_hist_dest::text, '') = ''))) then
                begin
                if (c03_w.ie_origem_destino = 'D') then
                                begin
                                dt_movimento_w := last_day(c02_w.dt_historico_transf);
                                end;
                end if;

                /*
                Verificar se a conta exige centro de custo
                */
                begin
                select  ie_centro_custo
                into STRICT    ie_centro_custo_w
                from    conta_contabil
                where   cd_conta_contabil = cd_conta_deprec_acum_w;
                exception
                when others then
                                ie_centro_custo_w := 'N';
                end;
                if (coalesce(ie_centro_custo_w,'N') <> 'S') then
                                begin
                                cd_centro_custo_rateio_w := null;
                                end;
                else
                                begin
                                cd_centro_custo_rateio_w := c03_w.cd_centro_custo_rateio;
                                end;
                end if;

                /* *************************************************************************************************************
                INSERIR O CREDITO NA CONTA DE DEPRECIACAO ACUMULADA
                ************************************************************************************************************* */
                ctb_movimento_doc_w     := null;
                get_sequence;
                ctb_movimento_doc_w.cd_estabelecimento  := cd_estabelecimento_w;
                ctb_movimento_doc_w.nr_lote_contabil    := nr_lote_contabil_w;
                ctb_movimento_doc_w.cd_conta_credito    := cd_conta_deprec_acum_w;
                ctb_movimento_doc_w.dt_movimento        := dt_movimento_w;
                ctb_movimento_doc_w.vl_movimento        := c03_w.vl_rateio_deprec;
                ctb_movimento_doc_w.cd_centro_custo     := cd_centro_custo_rateio_w;
                ctb_movimento_doc_w.cd_historico        := cd_historico_w;
                ctb_movimento_doc_w.nr_seq_agrupamento  := nr_seq_agrupamento_w;
                ctb_movimento_doc_w.ds_compl_historico  := ds_compl_historico_w;
                ctb_movimento_doc_w.nr_documento        := nr_doc_aux_w;
                ctb_movimento_doc_w.ie_origem_documento := ie_origem_documento_w;
                ctb_movimento_doc_w.ie_transitorio      := 'N';
                ctb_movimento_doc_w.nr_seq_info         := c03_w.nr_seq_info_ctb;
                ctb_movimento_doc_w.nm_tabela           := c_valor_bem_w.nm_tabela;
                ctb_movimento_doc_w.nm_atributo         := c_valor_bem_w.nm_atributo;
                ctb_movimento_doc_w.nr_seq_tab_orig     := c03_w.nr_seq_pat_valor_rateio;

                ctb_movimento_doc_w := ctb_online_pck.ctb_gravar_movto(ctb_movimento_doc_w, nm_usuario_p, 'N', 'N', 'N');

                /*
                Verificar se a conta exige centro de custo
                */
                begin
                                select  ie_centro_custo
                                into STRICT    ie_centro_custo_w
                                from    conta_contabil
                                where   cd_conta_contabil = cd_conta_deprec_res_w;
                exception
                when others then
                                ie_centro_custo_w := 'N';
                end;
                if (coalesce(ie_centro_custo_w,'N') <> 'S') then
                                begin
                                cd_centro_custo_rateio_w := null;
                                end;
                else
                                begin
                                cd_centro_custo_rateio_w := c03_w.cd_centro_custo_rateio;
                                end;
                end if;

                /* *************************************************************************************************************
                INSERIR O DEBITO NA CONTA DE RECEITA
                ************************************************************************************************************* */
                get_sequence;
                ctb_movimento_doc_w.cd_conta_credito    := null;
                ctb_movimento_doc_w.cd_conta_debito     := cd_conta_deprec_res_w;
                ctb_movimento_doc_w.cd_centro_custo     := cd_centro_custo_rateio_w;

                ctb_movimento_doc_w := ctb_online_pck.ctb_gravar_movto(ctb_movimento_doc_w, nm_usuario_p, 'N', 'N', 'N');

                /* *************************************************************************************************************
                INICIO - CREDITAR - Patrimonio social / DEBITAR - Ajuste avaliacao patrimonial O VALOR DO RATEIO DA DEPRECIACAO
                ************************************************************************************************************* */
                if (coalesce(cd_conta_ajuste_pat_w, 'X') != 'X') and (coalesce(cd_conta_cap_social_w, 'X') != 'X') then
                                begin
                                /*
                                CREDITAR a conta de patrimonio social
                                */
                                get_sequence;
                                ctb_movimento_doc_w.cd_conta_credito    := cd_conta_cap_social_w;
                                ctb_movimento_doc_w.cd_conta_debito     := null;
                                ctb_movimento_doc_w.cd_centro_custo     := null;
                                ctb_movimento_doc_w.cd_historico        := cd_hist_ajuste_pat_w;
                                ctb_movimento_doc_w.nr_seq_info         := c02_w.nr_seq_info_ctb;
                                ctb_movimento_doc_w.nr_seq_tab_orig     := c02_w.nr_seq_hist_transf;
                                ctb_movimento_doc_w.nm_tabela           := c02_w.nm_tabela;
                                ctb_movimento_doc_w.nm_atributo         := c_valor_bem_w.nm_atributo;

                                ctb_movimento_doc_w := ctb_online_pck.ctb_gravar_movto(ctb_movimento_doc_w, nm_usuario_p, 'N', 'N', 'N');

                                /*
                                DEBITAR a conta de ajuste avaliacao patrimonial
                                */
                                get_sequence;
                                ctb_movimento_doc_w.cd_conta_credito    := null;
                                ctb_movimento_doc_w.cd_conta_debito     := cd_conta_ajuste_pat_w;

                                ctb_movimento_doc_w := ctb_online_pck.ctb_gravar_movto(ctb_movimento_doc_w, nm_usuario_p, 'N', 'N', 'N');

                                end;
                end if;
                /* *************************************************************************************************************
                FIM - CREDITAR - Patrimonio social / DEBITAR - Ajuste avaliacao patrimonial O VALOR DO RATEIO DA DEPRECIACAO
                ************************************************************************************************************* */
                if (c02_w.cd_estab_origem = cd_estabelecimento_w) and (c02_w.cd_estab_origem <> c02_w.cd_estab_destino) then
                    begin

                    ie_D_C_rat_w            := 'D';
                    ie_D_C_rat_transit_w    := 'C';

                    /* *************************************************************************************************************
                    INICIO CONTABILIZAR DEBITO - origem / CREDITO - destino RATEIO DEPREC CONTRA CONTA TRANSITORIA
                    ************************************************************************************************************* */
                    /*
                    Verificar se a conta exige centro de custo
                    */
                    begin
                    select  ie_centro_custo
                    into STRICT    ie_centro_custo_w
                    from    conta_contabil
                    where   cd_conta_contabil = cd_conta_deprec_acum_w;
                    exception
                    when others then
                                    ie_centro_custo_w := 'N';
                    end;
                    if (coalesce(ie_centro_custo_w,'N') <> 'S') then
                                    begin
                                    cd_centro_custo_rateio_w := null;
                                    end;
                    else
                                    begin
                                    cd_centro_custo_rateio_w := c03_w.cd_centro_custo_rateio;
                                    end;
                    end if;

                    /* *************************************************************************************************************
                    INSERIR DEBITO - origem / CREDITO - destino  DO VALOR DE RATEIO NA CONTA DE DEPREC ACUMULADA
                    ************************************************************************************************************* */
                    ctb_movimento_doc_w     := null;
                    get_sequence;
                    ctb_movimento_doc_w.nr_lote_contabil            := nr_lote_contabil_w;
                    ctb_movimento_doc_w.cd_historico                := cd_historico_w;
                    ctb_movimento_doc_w.dt_movimento                := dt_movimento_w;
                    ctb_movimento_doc_w.vl_movimento                := c03_w.vl_rateio_deprec;
                    ctb_movimento_doc_w.cd_centro_custo             := cd_centro_custo_rateio_w;
                    ctb_movimento_doc_w.ds_compl_historico          := ds_compl_historico_w;
                    ctb_movimento_doc_w.nr_seq_agrupamento          := nr_seq_agrupamento_w;
                    ctb_movimento_doc_w.nr_documento                := nr_doc_aux_w;
                    ctb_movimento_doc_w.ie_transitorio              := 'N';
                    ctb_movimento_doc_w.cd_estabelecimento          := cd_estabelecimento_w;
                    ctb_movimento_doc_w.ie_origem_documento         := ie_origem_documento_w;
                    ctb_movimento_doc_w.nr_seq_info                 := c03_w.nr_seq_info_ctb;
                    ctb_movimento_doc_w.nr_seq_tab_orig             := c03_w.nr_seq_pat_valor_rateio;
                    ctb_movimento_doc_w.nm_tabela                   := c_valor_bem_w.nm_tabela;
                    ctb_movimento_doc_w.nm_atributo                 := c_valor_bem_w.nm_atributo;

                    if (ie_D_C_rat_w = 'D') then
                                    ctb_movimento_doc_w.cd_conta_debito      := cd_conta_deprec_acum_w;
                                    ctb_movimento_doc_w.cd_conta_credito := null;
                    else
                                    ctb_movimento_doc_w.cd_conta_debito      := null;
                                    ctb_movimento_doc_w.cd_conta_credito := cd_conta_deprec_acum_w;
                    end if;

                    ctb_movimento_doc_w := ctb_online_pck.ctb_gravar_movto(ctb_movimento_doc_w, nm_usuario_p, 'N', 'N', 'N');

                    /* *************************************************************************************************************
                    INSERIR CREDITO - origem / DEBITO - destino DO VALOR DE RATEIO NA CONTA TRANSITORIA
                    ************************************************************************************************************** */
                    ctb_movimento_w := null;
                    get_sequence;
                    ctb_movimento_w.nr_sequencia            := ctb_movimento_doc_w.nr_sequencia;
                    ctb_movimento_w.nr_lote_contabil        := nr_lote_contabil_w;
                    ctb_movimento_w.cd_estabelecimento      := cd_estabelecimento_w;
                    ctb_movimento_w.cd_historico            := cd_historico_ct_w;
                    ctb_movimento_w.ds_compl_historico      := ds_compl_historico_w;
                    ctb_movimento_w.nr_documento            := c02_w.nr_seq_bem;
                    ctb_movimento_w.dt_movimento            := dt_movimento_w;
                    ctb_movimento_w.vl_movimento            := c03_w.vl_rateio_deprec;
                    ctb_movimento_w.ie_origem_documento     := ie_origem_documento_w;
                    ctb_movimento_w.nr_seq_agrupamento      := nr_seq_agrupamento_w;

                    if (ie_D_C_rat_transit_w = 'D') then
                                    ctb_movimento_w.cd_conta_debito         := cd_conta_transitoria_w;
                                    ctb_movimento_w.cd_conta_credito        := null;
                    else
                                    ctb_movimento_w.cd_conta_debito         := null;
                                    ctb_movimento_w.cd_conta_credito        := cd_conta_transitoria_w;
                    end if;

                    ctb_movimento_w := ctb_online_pck.ctb_gerar_movto_conta_transit(ctb_movimento_w, nm_usuario_p, 'N', 'N');
                    /* *************************************************************************************************************
                    FINAL CONTABILIZAR DEBITO - origem / CREDITO - destino RATEIO DEPREC CONTRA CONTA TRANSITORIA
                    ************************************************************************************************************* */
                    /* *************************************************************************************************************
                    INICIO
                    DEBITAR - origem / CREDITAR - destino O VALOR DO RATEIO DA DEPRECIACAO CONTRA A TRANSITORIA DO PATRIMONIO SOCIAL
                    CREDITAR - origem / DEBITAR - destino O VALOR DO RATEIO DA DEPRECIACAO CONTRA A TRANSITORIA DO AJUSTE AVALIACAO PATRIMONIAL
                    ************************************************************************************************************* */
                    if (true) and (coalesce(cd_conta_ajuste_pat_w, 'X') != 'X') and (coalesce(cd_conta_cap_social_w, 'X') != 'X') then
                        begin
                        /*
                        Valor do rateio que sera transferido da conta de capital social
                        */
                        get_sequence;
                        ctb_movimento_doc_w.cd_historico        := cd_hist_ajuste_pat_w;
                        ctb_movimento_doc_w.cd_centro_custo     := null;
                        ctb_movimento_doc_w.nr_seq_info         := c02_w.nr_seq_info_ctb;
                        ctb_movimento_doc_w.nr_seq_tab_orig     := c02_w.nr_seq_hist_transf;
                        ctb_movimento_doc_w.nm_tabela           := c02_w.nm_tabela;
                        ctb_movimento_doc_w.nm_atributo         := c_valor_bem_w.nm_atributo;

                        if (ie_D_C_rat_w = 'D') then
                                        ctb_movimento_doc_w.cd_conta_debito     := cd_conta_cap_social_w;
                                        ctb_movimento_doc_w.cd_conta_credito    := null;
                        else
                                        ctb_movimento_doc_w.cd_conta_debito     := null;
                                        ctb_movimento_doc_w.cd_conta_credito    := cd_conta_cap_social_w;
                        end if;

                        ctb_movimento_doc_w := ctb_online_pck.ctb_gravar_movto(ctb_movimento_doc_w, nm_usuario_p, 'N', 'N', 'N');

                        get_sequence;
                        ctb_movimento_w.nr_sequencia    := ctb_movimento_doc_w.nr_sequencia;

                        if (ie_D_C_rat_transit_w = 'D') then
                                        ctb_movimento_w.cd_conta_debito         := cd_conta_transitoria_w;
                                        ctb_movimento_w.cd_conta_credito        := null;
                        else
                                        ctb_movimento_w.cd_conta_debito         := null;
                                        ctb_movimento_w.cd_conta_credito        := cd_conta_transitoria_w;
                        end if;

                        ctb_movimento_w := ctb_online_pck.ctb_gerar_movto_conta_transit(ctb_movimento_w, nm_usuario_p, 'N', 'N');

                        /*
                        Valor do rateio que sera transferido da conta de ajuste availacao patrimonial
                        */
                        get_sequence;

                        if (ie_D_C_rat_w = 'D') then
                                        ctb_movimento_doc_w.cd_conta_debito     := cd_conta_ajuste_pat_w;
                                        ctb_movimento_doc_w.cd_conta_credito    := null;
                        else
                                        ctb_movimento_doc_w.cd_conta_debito     := null;
                                        ctb_movimento_doc_w.cd_conta_credito    := cd_conta_ajuste_pat_w;
                        end if;

                        ctb_movimento_doc_w := ctb_online_pck.ctb_gravar_movto(ctb_movimento_doc_w, nm_usuario_p, 'N', 'N', 'N');

                        get_sequence;
                        ctb_movimento_w.nr_sequencia    := ctb_movimento_doc_w.nr_sequencia;

                        if (ie_D_C_rat_w = 'D') then
                                        ctb_movimento_w.cd_conta_debito         := cd_conta_transitoria_w;
                                        ctb_movimento_w.cd_conta_credito        := null;
                        else
                                        ctb_movimento_w.cd_conta_debito         := null;
                                        ctb_movimento_w.cd_conta_credito        := cd_conta_transitoria_w;
                        end if;

                        ctb_movimento_w := ctb_online_pck.ctb_gerar_movto_conta_transit(ctb_movimento_w, nm_usuario_p, 'N', 'N');

                        end;
                    end if;
                    /* *************************************************************************************************************
                    FIM
                    DEBITAR - origem / CREDITAR - destino O VALOR DO RATEIO DA DEPRECIACAO CONTRA A TRANSITORIA DO PATRIMONIO SOCIAL
                    CREDITAR - origem / DEBITAR - destino O VALOR DO RATEIO DA DEPRECIACAO CONTRA A TRANSITORIA DO AJUSTE AVALIACAO PATRIMONIAL
                    ************************************************************************************************************* */
                    end;
                end if;
                end;
                end if;
                /* *************************************************************************************************************
                FINAL O ORIGEM TEM QUE CONTABILIZAR A DEPRECIACAO QUE FICOU AQUI PARA DEPOIS ZERAR CONTRA A CONTA TRANSITORIA
                ************************************************************************************************************* */
                if (true) and (c03_w.ie_origem_destino = 'O') and (c02_w.cd_estab_origem = c03_w.cd_estabelecimento) and (c02_w.cd_estab_destino = cd_estabelecimento_w) and (c02_w.cd_estab_origem <> c02_w.cd_estab_destino) then
                    begin
                    ie_D_C_rat_w            := 'C';
                    ie_D_C_rat_transit_w    := 'D';

                    /* *************************************************************************************************************
                    INICIO CONTABILIZAR DEBITO - origem / CREDITO - destino RATEIO DEPREC CONTRA CONTA TRANSITORIA
                    ************************************************************************************************************* */
                    /*
                    Verificar se a conta exige centro de custo
                    */
                    begin
                    select  ie_centro_custo
                    into STRICT    ie_centro_custo_w
                    from    conta_contabil
                    where   cd_conta_contabil = cd_conta_deprec_acum_w;
                    exception
                    when others then
                                    ie_centro_custo_w := 'N';
                    end;

                    if (coalesce(ie_centro_custo_w,'N') <> 'S') then
                                    begin
                                    cd_centro_custo_rateio_w := null;
                                    end;
                    else
                                    begin
                                    cd_centro_custo_rateio_w := c03_w.cd_centro_custo_rateio;
                                    end;
                    end if;

                    /* *************************************************************************************************************
                    INSERIR DEBITO - origem / CREDITO - destino  DO VALOR DE RATEIO NA CONTA DE DEPREC ACUMULADA
                    ************************************************************************************************************* */
                    ctb_movimento_doc_w     := null;
                    get_sequence;
                    ctb_movimento_doc_w.nr_lote_contabil            := nr_lote_contabil_w;
                    ctb_movimento_doc_w.cd_historico                := cd_historico_w;
                    ctb_movimento_doc_w.dt_movimento                := dt_movimento_w;
                    ctb_movimento_doc_w.vl_movimento                := c03_w.vl_rateio_deprec;
                    ctb_movimento_doc_w.cd_centro_custo             := cd_centro_custo_rateio_w;
                    ctb_movimento_doc_w.ds_compl_historico          := ds_compl_historico_w;
                    ctb_movimento_doc_w.nr_seq_agrupamento          := nr_seq_agrupamento_w;
                    ctb_movimento_doc_w.nr_documento                := nr_doc_aux_w;
                    ctb_movimento_doc_w.ie_transitorio              := 'N';
                    ctb_movimento_doc_w.cd_estabelecimento          := cd_estabelecimento_w;
                    ctb_movimento_doc_w.ie_origem_documento         := ie_origem_documento_w;
                    ctb_movimento_doc_w.nr_seq_info                 := c03_w.nr_seq_info_ctb;
                    ctb_movimento_doc_w.nr_seq_tab_orig             := c03_w.nr_seq_pat_valor_rateio;
                    ctb_movimento_doc_w.nm_tabela                   := c_valor_bem_w.nm_tabela;
                    ctb_movimento_doc_w.nm_atributo                 := c_valor_bem_w.nm_atributo;

                    if (ie_D_C_rat_w = 'D') then
                                    ctb_movimento_doc_w.cd_conta_debito      := cd_conta_deprec_acum_w;
                                    ctb_movimento_doc_w.cd_conta_credito := null;
                    else
                                    ctb_movimento_doc_w.cd_conta_debito      := null;
                                    ctb_movimento_doc_w.cd_conta_credito := cd_conta_deprec_acum_w;
                    end if;

                    ctb_movimento_doc_w := ctb_online_pck.ctb_gravar_movto(ctb_movimento_doc_w, nm_usuario_p, 'N', 'N', 'N');

                    /* *************************************************************************************************************
                    INSERIR CREDITO - origem / DEBITO - destino DO VALOR DE RATEIO NA CONTA TRANSITORIA
                    ************************************************************************************************************** */
                    ctb_movimento_w := null;
                    get_sequence;
                    ctb_movimento_w.nr_sequencia            := ctb_movimento_doc_w.nr_sequencia;
                    ctb_movimento_w.nr_lote_contabil        := nr_lote_contabil_w;
                    ctb_movimento_w.cd_estabelecimento      := cd_estabelecimento_w;
                    ctb_movimento_w.cd_historico            := cd_historico_ct_w;
                    ctb_movimento_w.ds_compl_historico      := ds_compl_historico_w;
                    ctb_movimento_w.nr_documento            := c02_w.nr_seq_bem;
                    ctb_movimento_w.dt_movimento            := dt_movimento_w;
                    ctb_movimento_w.vl_movimento            := c03_w.vl_rateio_deprec;
                    ctb_movimento_w.ie_origem_documento     := ie_origem_documento_w;
                    ctb_movimento_w.nr_seq_agrupamento      := nr_seq_agrupamento_w;

                    if (ie_D_C_rat_transit_w = 'D') then
                                    ctb_movimento_w.cd_conta_debito         := cd_conta_transitoria_w;
                                    ctb_movimento_w.cd_conta_credito        := null;
                    else
                                    ctb_movimento_w.cd_conta_debito         := null;
                                    ctb_movimento_w.cd_conta_credito        := cd_conta_transitoria_w;
                    end if;

                    ctb_movimento_w := ctb_online_pck.ctb_gerar_movto_conta_transit(ctb_movimento_w, nm_usuario_p, 'N', 'N');

                    /* *************************************************************************************************************
                    FINAL CONTABILIZAR DEBITO - origem / CREDITO - destino RATEIO DEPREC CONTRA CONTA TRANSITORIA
                    ************************************************************************************************************* */
                    /* *************************************************************************************************************
                    INICIO
                    DEBITAR - origem / CREDITAR - destino O VALOR DO RATEIO DA DEPRECIACAO CONTRA A TRANSITORIA DO PATRIMONIO SOCIAL
                    CREDITAR - origem / DEBITAR - destino O VALOR DO RATEIO DA DEPRECIACAO CONTRA A TRANSITORIA DO AJUSTE AVALIACAO PATRIMONIAL
                    ************************************************************************************************************* */
                    if (true) and (coalesce(cd_conta_ajuste_pat_w, 'X') != 'X') and (coalesce(cd_conta_cap_social_w, 'X') != 'X') then
                        begin
                        /*
                        Valor do rateio que sera transferido da conta de capital social
                        */
                        get_sequence;

                        ctb_movimento_doc_w.cd_historico        := cd_hist_ajuste_pat_w;
                        ctb_movimento_doc_w.cd_centro_custo     := null;
                        ctb_movimento_doc_w.nr_seq_info         := c02_w.nr_seq_info_ctb;
                        ctb_movimento_doc_w.nr_seq_tab_orig     := c02_w.nr_seq_hist_transf;
                        ctb_movimento_doc_w.nm_tabela           := c02_w.nm_tabela;

                        if (ie_D_C_rat_w = 'D') then
                                        ctb_movimento_doc_w.cd_conta_debito     := cd_conta_cap_social_w;
                                        ctb_movimento_doc_w.cd_conta_credito    := null;
                        else
                                        ctb_movimento_doc_w.cd_conta_debito     := null;
                                        ctb_movimento_doc_w.cd_conta_credito    := cd_conta_cap_social_w;
                        end if;

                        ctb_movimento_doc_w := ctb_online_pck.ctb_gravar_movto(ctb_movimento_doc_w, nm_usuario_p, 'N', 'N', 'N');

                        get_sequence;
                        ctb_movimento_w.nr_sequencia    := ctb_movimento_doc_w.nr_sequencia;

                        ctb_movimento_w := ctb_online_pck.ctb_gerar_movto_conta_transit(ctb_movimento_w, nm_usuario_p, 'N', 'N');

                        /*
                        Valor do rateio que sera transferido da conta de ajuste availacao patrimonial
                        */
                        get_sequence;

                        if (ie_D_C_rat_transit_w = 'D') then
                                        ctb_movimento_doc_w.cd_conta_debito     := cd_conta_ajuste_pat_w;
                                        ctb_movimento_doc_w.cd_conta_credito    := null;
                        else
                                        ctb_movimento_doc_w.cd_conta_debito     := null;
                                        ctb_movimento_doc_w.cd_conta_credito    := cd_conta_ajuste_pat_w;
                        end if;

                        ctb_movimento_doc_w := ctb_online_pck.ctb_gravar_movto(ctb_movimento_doc_w, nm_usuario_p, 'N', 'N', 'N');

                        get_sequence;
                        ctb_movimento_w.nr_sequencia    := ctb_movimento_doc_w.nr_sequencia;

                        if (ie_D_C_rat_w = 'D') then
                                        ctb_movimento_w.cd_conta_debito         := cd_conta_transitoria_w;
                                        ctb_movimento_w.cd_conta_credito        := null;
                        else
                                        ctb_movimento_w.cd_conta_debito         := null;
                                        ctb_movimento_w.cd_conta_credito        := cd_conta_transitoria_w;
                        end if;

                        ctb_movimento_w := ctb_online_pck.ctb_gerar_movto_conta_transit(ctb_movimento_w, nm_usuario_p, 'N', 'N');

                        end;
                    end if;
                    /* *************************************************************************************************************
                    FIM
                    DEBITAR - origem / CREDITAR - destino O VALOR DO RATEIO DA DEPRECIACAO CONTRA A TRANSITORIA DO PATRIMONIO SOCIAL
                    CREDITAR - origem / DEBITAR - destino O VALOR DO RATEIO DA DEPRECIACAO CONTRA A TRANSITORIA DO AJUSTE AVALIACAO PATRIMONIAL
                    ************************************************************************************************************* */
                    end;
            end if;
        end loop;
        end loop;
    EXIT WHEN NOT FOUND; /* apply on c03 */
    end loop;
    close c03;
    end loop;
EXIT WHEN NOT FOUND; /* apply on c02 */
end loop;
close c02;
    /* *************************************************************************************************************
    FINAL Contabilizacao entre estabelecimentos COM CONTA TRANSITORIA
    ************************************************************************************************************* */
    update  lote_contabil
    set     dt_integracao   = clock_timestamp(),
                    dt_geracao_lote = clock_timestamp()
    where   nr_lote_contabil = nr_lote_contabil_w
    and     cd_estabelecimento = cd_estabelecimento_p;

    begin
    ds_erro_w := ctb_atualizar_saldo(nr_lote_contabil_w, 'S', nm_usuario_p, 'N', ds_erro_w, 'S');
    exception
    when others then
                    null;
    end;

    end;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_contab_onl_patrimonio ( dt_referencia_p timestamp, cd_estabelecimento_p bigint, nm_usuario_p text, ie_exclusao_p text default 'N') FROM PUBLIC;

