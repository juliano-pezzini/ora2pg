-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_atualizar_contab_val_adic ( dt_mes_competencia_p timestamp, nm_usuario_p text, ds_tipo_lote_contabil_p INOUT tipo_lote_contabil.ds_tipo_lote_contabil%type, nr_seq_protocolo_p pls_protocolo_conta.nr_sequencia%type default null, nr_seq_conta_p pls_conta.nr_sequencia%type default null) AS $body$
DECLARE

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Purpose:
Update the additional accounting accounts
-------------------------------------------------------------------------------------------------------------------
Direct call locations: 
[ ]  Dictionary of objects [  X] Tasy (Delphi/Java) [  ] Portal [  ]  Reports [ ] Others:
 ------------------------------------------------------------------------------------------------------------------
Attention points:
-------------------------------------------------------------------------------------------------------------------
Refferences:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
 		
ie_opcao_w			varchar(10);		
ds_tipo_lote_contabil_w		tipo_lote_contabil.ds_tipo_lote_contabil%type;
qt_reg_w			integer;
nr_seq_conta_tb_w		pls_util_cta_pck.t_number_table;
nr_seq_conta_resumo_tb_w	pls_util_cta_pck.t_number_table;
nr_seq_conta_pos_contab_tb_w	pls_util_cta_pck.t_number_table;
nr_seq_conta_co_contab_tb_w	pls_util_cta_pck.t_number_table;
ie_opcao_tb_w			pls_util_cta_pck.t_varchar2_table_10;
index_w				integer	:= 0;
dt_ref_inicial_w		timestamp;
dt_ref_final_w			timestamp;
nr_seq_conta_resumo_w		pls_conta_pos_estab_contab.nr_seq_conta_resumo%type;
cd_estabelecimento_w		estabelecimento.cd_estabelecimento%type;
nr_seq_prestador_pgto_w		pls_conta_medica_resumo.nr_seq_prestador_pgto%type;
nr_seq_prest_pgto_tb_w		pls_util_cta_pck.t_number_table;
			
C01 CURSOR(	dt_ref_inicial_pc	timestamp,
		dt_ref_final_pc		timestamp,
		nr_seq_protocolo_pc	pls_protocolo_conta.nr_sequencia%type,
		nr_seq_conta_pc		pls_conta.nr_sequencia%type)	 FOR
	SELECT	a.nr_sequencia nr_seq_conta
	from	pls_protocolo_conta	b,
		pls_conta		a
	where	a.nr_seq_protocolo	= b.nr_sequencia
	and	a.ie_status		in ('F','C')
	and	b.nr_sequencia = nr_seq_protocolo_p
	
union all

	SELECT	a.nr_sequencia nr_seq_conta
	from	pls_protocolo_conta	b,
		pls_conta		a
	where	a.nr_seq_protocolo	= b.nr_sequencia
	and	b.dt_mes_competencia 	between dt_ref_inicial_pc and dt_ref_final_pc
	and	a.ie_status		in ('F','C')
	and	coalesce(nr_seq_protocolo_pc::text, '') = ''
	and	coalesce(nr_seq_conta_pc::text, '') = ''
	
union all
 
	select	a.nr_sequencia nr_seq_conta
	from	pls_conta		a
	where	a.nr_sequencia	= nr_seq_conta_pc
	and	a.ie_status		in ('F','C');
	
C02 CURSOR(	dt_ref_inicial_pc	timestamp,
		dt_ref_final_pc		timestamp,
		nr_seq_protocolo_pc	pls_protocolo_conta.nr_sequencia%type,
		nr_seq_conta_pc		pls_conta.nr_sequencia%type)	 FOR
	SELECT  x.nr_sequencia,
		x.nr_seq_conta,
		x.nr_seq_conta_proc,
		x.nr_seq_conta_mat,
		z.ie_origem_protocolo
	from	pls_conta_pos_estab_contab  x,
		pls_conta      y,
		pls_protocolo_conta    z
	where	x.nr_seq_conta  = y.nr_sequencia
	and	z.nr_sequencia  = y.nr_seq_protocolo
	and	y.ie_status = 'F'
	and	z.dt_mes_competencia between dt_ref_inicial_pc and dt_ref_final_pc
	and	not exists ( 	SELECT  1
				from 	pls_conta_medica_resumo  a
				where	a.nr_sequencia	= x.nr_seq_conta_resumo
				and	a.nr_seq_conta  = x.nr_seq_conta)
	and	(x.nr_seq_conta_resumo IS NOT NULL AND x.nr_seq_conta_resumo::text <> '')
	and	z.nr_sequencia = nr_seq_protocolo_pc
	
union all

	select  x.nr_sequencia,
		x.nr_seq_conta,
		x.nr_seq_conta_proc,
		x.nr_seq_conta_mat,
		z.ie_origem_protocolo
	from	pls_conta_pos_estab_contab  x,
		pls_conta      y,
		pls_protocolo_conta    z
	where	x.nr_seq_conta  = y.nr_sequencia
	and	z.nr_sequencia  = y.nr_seq_protocolo
	and	y.ie_status = 'F'
	and	z.dt_mes_competencia between dt_ref_inicial_pc and dt_ref_final_pc
	and	not exists ( 	select  1
				from 	pls_conta_medica_resumo  a
				where	a.nr_sequencia	= x.nr_seq_conta_resumo
				and	a.nr_seq_conta  = x.nr_seq_conta)
	and	(x.nr_seq_conta_resumo IS NOT NULL AND x.nr_seq_conta_resumo::text <> '')
	and	y.nr_sequencia = nr_seq_conta_pc
	
union all

	select  x.nr_sequencia,
		x.nr_seq_conta,
		x.nr_seq_conta_proc,
		x.nr_seq_conta_mat,
		z.ie_origem_protocolo
	from	pls_conta_pos_estab_contab  x,
		pls_conta      y,
		pls_protocolo_conta    z
	where	x.nr_seq_conta  = y.nr_sequencia
	and	z.nr_sequencia  = y.nr_seq_protocolo
	and	y.ie_status = 'F'
	and	z.dt_mes_competencia between dt_ref_inicial_pc and dt_ref_final_pc
	and	not exists ( 	select  1
				from 	pls_conta_medica_resumo  a
				where	a.nr_sequencia	= x.nr_seq_conta_resumo
				and	a.nr_seq_conta  = x.nr_seq_conta)
	and	(x.nr_seq_conta_resumo IS NOT NULL AND x.nr_seq_conta_resumo::text <> '')
	and	coalesce(nr_seq_protocolo_pc::text, '') = ''
	and	coalesce(nr_seq_conta_pc::text, '') = '';
	
C03 CURSOR(	dt_ref_inicial_pc	timestamp,
		dt_ref_final_pc		timestamp,
		nr_seq_protocolo_pc	pls_protocolo_conta.nr_sequencia%type,
		nr_seq_conta_pc		pls_conta.nr_sequencia%type)	 FOR
	SELECT  x.nr_sequencia,
		x.nr_seq_conta,
		a.nr_seq_conta_proc,
		a.nr_seq_conta_mat,
		z.ie_origem_protocolo
	from	pls_conta_copartic_contab  x,
		pls_conta_coparticipacao a,
		pls_conta      y,
		pls_protocolo_conta    z
	where	x.nr_seq_conta  = y.nr_sequencia
	and	a.nr_sequencia = x.nr_seq_conta_copartic
	and	a.nr_seq_conta = y.nr_sequencia
	and	z.nr_sequencia  = y.nr_seq_protocolo
	and	y.ie_status = 'F'
	and	z.dt_mes_competencia between dt_ref_inicial_pc and dt_ref_final_pc
	and	not exists ( 	SELECT  1
				from 	pls_conta_medica_resumo  a
				where	a.nr_sequencia	= x.nr_seq_conta_resumo
				and	a.nr_seq_conta  = x.nr_seq_conta)
	and	(x.nr_seq_conta_resumo IS NOT NULL AND x.nr_seq_conta_resumo::text <> '')
	and	z.nr_sequencia = nr_seq_protocolo_pc
	
union all

	select  x.nr_sequencia,
		x.nr_seq_conta,
		a.nr_seq_conta_proc,
		a.nr_seq_conta_mat,
		z.ie_origem_protocolo
	from	pls_conta_copartic_contab  x,
		pls_conta_coparticipacao a,
		pls_conta      y,
		pls_protocolo_conta    z
	where	x.nr_seq_conta  = y.nr_sequencia
	and	a.nr_sequencia = x.nr_seq_conta_copartic
	and	a.nr_seq_conta = y.nr_sequencia
	and	z.nr_sequencia  = y.nr_seq_protocolo
	and	y.ie_status = 'F'
	and	z.dt_mes_competencia between dt_ref_inicial_pc and dt_ref_final_pc
	and	not exists ( 	select  1
				from 	pls_conta_medica_resumo  a
				where	a.nr_sequencia	= x.nr_seq_conta_resumo
				and	a.nr_seq_conta  = x.nr_seq_conta)
	and	(x.nr_seq_conta_resumo IS NOT NULL AND x.nr_seq_conta_resumo::text <> '')
	and	y.nr_sequencia = nr_seq_conta_pc
	
union all

	select  x.nr_sequencia,
		x.nr_seq_conta,
		a.nr_seq_conta_proc,
		a.nr_seq_conta_mat,
		z.ie_origem_protocolo
	from	pls_conta_copartic_contab  x,
		pls_conta_coparticipacao a,
		pls_conta      y,
		pls_protocolo_conta    z
	where	x.nr_seq_conta  = y.nr_sequencia
	and	a.nr_sequencia = x.nr_seq_conta_copartic
	and	a.nr_seq_conta = y.nr_sequencia
	and	z.nr_sequencia  = y.nr_seq_protocolo
	and	y.ie_status = 'F'
	and	z.dt_mes_competencia between dt_ref_inicial_pc and dt_ref_final_pc
	and	not exists ( 	select  1
				from 	pls_conta_medica_resumo  a
				where	a.nr_sequencia	= x.nr_seq_conta_resumo
				and	a.nr_seq_conta  = x.nr_seq_conta)
	and	(x.nr_seq_conta_resumo IS NOT NULL AND x.nr_seq_conta_resumo::text <> '')
	and	coalesce(nr_seq_protocolo_pc::text, '') = ''
	and	coalesce(nr_seq_conta_pc::text, '') = '';
	
C04 CURSOR(	dt_ref_inicial_pc	timestamp,
		dt_ref_final_pc		timestamp,
		nr_seq_protocolo_pc	pls_protocolo_conta.nr_sequencia%type,
		nr_seq_conta_pc		pls_conta.nr_sequencia%type)	 FOR
	SELECT  x.nr_sequencia,
		x.nr_seq_conta,
		(SELECT	max(a.nr_seq_conta_proc)
		 from	pls_conta_pos_estabelecido a,
			pls_conta_pos_estab_taxa b
		 where	a.nr_sequencia = b.nr_seq_conta_pos_estab
		 and	b.nr_sequencia = x.nr_seq_pos_estab_taxa) nr_seq_conta_proc,
		(select	max(a.nr_seq_conta_mat)
		 from	pls_conta_pos_estabelecido a,
			pls_conta_pos_estab_taxa b
		 where	a.nr_sequencia = b.nr_seq_conta_pos_estab
		 and	b.nr_sequencia = x.nr_seq_pos_estab_taxa) nr_seq_conta_mat,
		z.ie_origem_protocolo
	from	pls_conta_pos_taxa_contab  x,
		pls_conta      y,
		pls_protocolo_conta    z
	where	x.nr_seq_conta  = y.nr_sequencia
	and	z.nr_sequencia  = y.nr_seq_protocolo
	and	y.ie_status = 'F'
	and	z.dt_mes_competencia between dt_ref_inicial_pc and dt_ref_final_pc
	and	not exists ( 	select  1
				from 	pls_conta_medica_resumo  a
				where	a.nr_sequencia	= x.nr_seq_conta_resumo
				and	a.nr_seq_conta  = x.nr_seq_conta)
	and	(x.nr_seq_conta_resumo IS NOT NULL AND x.nr_seq_conta_resumo::text <> '')
	and	z.nr_sequencia = nr_seq_protocolo_pc
	
union all

	select  x.nr_sequencia,
		x.nr_seq_conta,
		(select	max(a.nr_seq_conta_proc)
		 from	pls_conta_pos_estabelecido a,
			pls_conta_pos_estab_taxa b
		 where	a.nr_sequencia = b.nr_seq_conta_pos_estab
		 and	b.nr_sequencia = x.nr_seq_pos_estab_taxa) nr_seq_conta_proc,
		(select	max(a.nr_seq_conta_mat)
		 from	pls_conta_pos_estabelecido a,
			pls_conta_pos_estab_taxa b
		 where	a.nr_sequencia = b.nr_seq_conta_pos_estab
		 and	b.nr_sequencia = x.nr_seq_pos_estab_taxa) nr_seq_conta_mat,
		z.ie_origem_protocolo
	from	pls_conta_pos_taxa_contab  x,
		pls_conta      y,
		pls_protocolo_conta    z
	where	x.nr_seq_conta  = y.nr_sequencia
	and	z.nr_sequencia  = y.nr_seq_protocolo
	and	y.ie_status = 'F'
	and	z.dt_mes_competencia between dt_ref_inicial_pc and dt_ref_final_pc
	and	not exists ( 	select  1
				from 	pls_conta_medica_resumo  a
				where	a.nr_sequencia	= x.nr_seq_conta_resumo
				and	a.nr_seq_conta  = x.nr_seq_conta)
	and	(x.nr_seq_conta_resumo IS NOT NULL AND x.nr_seq_conta_resumo::text <> '')
	and	y.nr_sequencia = nr_seq_conta_pc
	
union all

	select  x.nr_sequencia,
		x.nr_seq_conta,
		(select	max(a.nr_seq_conta_proc)
		 from	pls_conta_pos_estabelecido a,
			pls_conta_pos_estab_taxa b
		 where	a.nr_sequencia = b.nr_seq_conta_pos_estab
		 and	b.nr_sequencia = x.nr_seq_pos_estab_taxa) nr_seq_conta_proc,
		(select	max(a.nr_seq_conta_mat)
		 from	pls_conta_pos_estabelecido a,
			pls_conta_pos_estab_taxa b
		 where	a.nr_sequencia = b.nr_seq_conta_pos_estab
		 and	b.nr_sequencia = x.nr_seq_pos_estab_taxa) nr_seq_conta_mat,
		z.ie_origem_protocolo
	from	pls_conta_pos_taxa_contab  x,
		pls_conta      y,
		pls_protocolo_conta    z
	where	x.nr_seq_conta  = y.nr_sequencia
	and	z.nr_sequencia  = y.nr_seq_protocolo
	and	y.ie_status = 'F'
	and	z.dt_mes_competencia between dt_ref_inicial_pc and dt_ref_final_pc
	and	not exists ( 	select  1
				from 	pls_conta_medica_resumo  a
				where	a.nr_sequencia	= x.nr_seq_conta_resumo
				and	a.nr_seq_conta  = x.nr_seq_conta)
	and	(x.nr_seq_conta_resumo IS NOT NULL AND x.nr_seq_conta_resumo::text <> '')
	and	coalesce(nr_seq_protocolo_pc::text, '') = ''
	and	coalesce(nr_seq_conta_pc::text, '') = '';
BEGIN

CALL gravar_processo_longo(obter_desc_expressao(957538) ,'PLS_ATUALIZAR_CONTAB_VAL_ADIC',0);

dt_ref_inicial_w	:= trunc(trunc(dt_mes_competencia_p,'month'),'dd');
dt_ref_final_w		:= fim_dia(fim_mes(dt_mes_competencia_p));

cd_estabelecimento_w	:= wheb_usuario_pck.get_cd_estabelecimento;

select	max(b.ds_tipo_lote_contabil)
into STRICT	ds_tipo_lote_contabil_w
from	lote_contabil		a,
	tipo_lote_contabil	b
where	a.cd_tipo_lote_contabil	= b.cd_tipo_lote_contabil
and	b.cd_tipo_lote_contabil	in (43,44) /* HPMS - Billing forecast / HPMS - Revenues with billing */
and	coalesce(a.cd_estabelecimento, cd_estabelecimento_w) = cd_estabelecimento_w
and	a.dt_referencia between dt_ref_inicial_w and dt_ref_final_w
and	(a.dt_geracao_lote IS NOT NULL AND a.dt_geracao_lote::text <> '');

if (coalesce(ds_tipo_lote_contabil_w::text, '') = '') then
	for r_c01_w in C01(dt_ref_inicial_w, dt_ref_final_w, nr_seq_protocolo_p, nr_seq_conta_p) loop
		begin
		
		ie_opcao_w	:= '';
		
		select	count(1)
		into STRICT	qt_reg_w
		from	pls_conta_coparticipacao
		where	nr_seq_conta	= r_c01_w.nr_seq_conta  LIMIT 1;
		
		if (qt_reg_w	> 0) then
			ie_opcao_w	:= 'C';
		else
			select	count(1)
			into STRICT	qt_reg_w
			from	pls_conta_pos_estabelecido
			where	nr_seq_conta	= r_c01_w.nr_seq_conta  LIMIT 1;
			
			if (qt_reg_w	> 0) then
				-- Check if the account is not in an billing batch
				select	count(1)
				into STRICT	qt_reg_w
				from	pls_conta_pos_estab_contab a,
						pls_conta b,
						pls_lote_faturamento c
				where	a.nr_seq_lote_fat = c.nr_sequencia
				and a.nr_seq_conta	= r_c01_w.nr_seq_conta
				and	(a.nr_seq_lote_fat IS NOT NULL AND a.nr_seq_lote_fat::text <> '')				
				and	c.ie_tipo_lote <> 'A';

				if (qt_reg_w	= 0) then
				
					select	count(1)
					into STRICT	qt_reg_w
					from	pls_fatura_proc		a,
						pls_conta_proc		b
					where	a.nr_seq_conta_proc	= b.nr_sequencia
					and	b.nr_seq_conta		= r_c01_w.nr_seq_conta
					and	(a.nr_seq_conta_pos_contab IS NOT NULL AND a.nr_seq_conta_pos_contab::text <> '');
				
					if (qt_reg_w = 0) then
					
						select	count(1)
						into STRICT	qt_reg_w
						from	pls_fatura_mat		a,
							pls_conta_mat		b
						where	a.nr_seq_conta_mat	= b.nr_sequencia
						and	b.nr_seq_conta		= r_c01_w.nr_seq_conta
						and	(a.nr_seq_conta_pos_contab IS NOT NULL AND a.nr_seq_conta_pos_contab::text <> '');
					
						if (qt_reg_w	= 0) then
							ie_opcao_w	:= 'P';
						end if;
					end if;
				end if;
			end if;
		end if;
		
		if (ie_opcao_w IS NOT NULL AND ie_opcao_w::text <> '') then
		
			nr_seq_conta_tb_w(index_w)	:= r_c01_w.nr_seq_conta;
			ie_opcao_tb_w(index_w)		:= ie_opcao_w;	
			index_w	:= index_w + 1;
		
			if (index_w	>= pls_util_cta_pck.qt_registro_transacao_w) then
				for i in nr_seq_conta_tb_w.first..nr_seq_conta_tb_w.last loop
					begin	
					CALL gravar_processo_longo(obter_desc_expressao(957540) || ' ' || nr_seq_conta_tb_w(i) ,'PLS_ATUALIZAR_CONTAB_VAL_ADIC',-1);
					CALL pls_gerar_contab_val_adic(nr_seq_conta_tb_w(i),null,null,null,null,null,null,ie_opcao_tb_w(i),'N',nm_usuario_p);				
					end;
				end loop;
				commit;
				nr_seq_conta_tb_w.delete;
				ie_opcao_tb_w.delete;
				index_w	:= 0;
			end if;		
		end if;
		end;
	end loop;

	if (nr_seq_conta_tb_w.count > 0) then
		for i in nr_seq_conta_tb_w.first..nr_seq_conta_tb_w.last loop
			begin	
			CALL gravar_processo_longo(obter_desc_expressao(957540) || ' '  || nr_seq_conta_tb_w(i) ,'PLS_ATUALIZAR_CONTAB_VAL_ADIC',-1);
			CALL pls_gerar_contab_val_adic(nr_seq_conta_tb_w(i),null,null,null,null,null,null,ie_opcao_tb_w(i),'N',nm_usuario_p);				
			end;
		end loop;
		commit;
	end if;
end if;

nr_seq_conta_tb_w.delete;
ie_opcao_tb_w.delete;
index_w	:= 0;	

for r_c02_w in C02(dt_ref_inicial_w, dt_ref_final_w, nr_seq_protocolo_p, nr_seq_conta_p) loop
	begin
	
	nr_seq_conta_resumo_w	:= null;
	
	if (r_c02_w.nr_seq_conta_proc IS NOT NULL AND r_c02_w.nr_seq_conta_proc::text <> '') then
		select	max(nr_sequencia)
		into STRICT	nr_seq_conta_resumo_w
		from	pls_conta_medica_resumo
		where	nr_seq_conta		= r_c02_w.nr_seq_conta
		and	nr_seq_conta_proc	= r_c02_w.nr_seq_conta_proc
		and	ie_situacao		= 'A';
	elsif (r_c02_w.nr_seq_conta_mat IS NOT NULL AND r_c02_w.nr_seq_conta_mat::text <> '') then
		select	max(nr_sequencia)
		into STRICT	nr_seq_conta_resumo_w
		from	pls_conta_medica_resumo
		where	nr_seq_conta		= r_c02_w.nr_seq_conta
		and	nr_seq_conta_mat	= r_c02_w.nr_seq_conta_mat
		and	ie_situacao		= 'A';
	end if;
	
	-- Only update if there is the information, or it is an A500 account
	if	((nr_seq_conta_resumo_w IS NOT NULL AND nr_seq_conta_resumo_w::text <> '') or (r_c02_w.ie_origem_protocolo = 'A')) then
	
		select	max(nr_seq_prestador_pgto)
		into STRICT	nr_seq_prestador_pgto_w
		from	pls_conta_medica_resumo
		where 	nr_seq_conta = r_c02_w.nr_seq_conta
		and 	nr_sequencia = nr_seq_conta_resumo_w;
	
		nr_seq_prest_pgto_tb_w(index_w) 	:= nr_seq_prestador_pgto_w;
		nr_seq_conta_resumo_tb_w(index_w)	:= nr_seq_conta_resumo_w;
		nr_seq_conta_pos_contab_tb_w(index_w)	:= r_c02_w.nr_sequencia;
		index_w	:= index_w + 1;
		
		if (index_w	>= pls_util_cta_pck.qt_registro_transacao_w) then
			forall i in nr_seq_conta_resumo_tb_w.first..nr_seq_conta_resumo_tb_w.last
				update	pls_conta_pos_estab_contab
				set	nr_seq_conta_resumo	= nr_seq_conta_resumo_tb_w(i),
					nr_seq_prestador_pgto	= nr_seq_prest_pgto_tb_w(i)
				where	nr_sequencia		= nr_seq_conta_pos_contab_tb_w(i);

			nr_seq_conta_resumo_tb_w.delete;
			nr_seq_conta_pos_contab_tb_w.delete;
			nr_seq_prest_pgto_tb_w.delete;
			index_w	:= 0;
			commit;
		end if;	
	end if;
		
	end;
end loop;

if (nr_seq_conta_resumo_tb_w.count > 0) then
	forall i in nr_seq_conta_resumo_tb_w.first..nr_seq_conta_resumo_tb_w.last
		update	pls_conta_pos_estab_contab
		set	nr_seq_conta_resumo	= nr_seq_conta_resumo_tb_w(i),
			nr_seq_prestador_pgto	= nr_seq_prest_pgto_tb_w(i)
		where	nr_sequencia		= nr_seq_conta_pos_contab_tb_w(i);

	nr_seq_conta_resumo_tb_w.delete;
	nr_seq_conta_pos_contab_tb_w.delete;
	nr_seq_prest_pgto_tb_w.delete;
	index_w	:= 0;
	commit;
end if;

for r_c03_w in C03(dt_ref_inicial_w, dt_ref_final_w, nr_seq_protocolo_p, nr_seq_conta_p) loop
	begin
	
	nr_seq_conta_resumo_w	:= null;
	
	if (r_c03_w.nr_seq_conta_proc IS NOT NULL AND r_c03_w.nr_seq_conta_proc::text <> '') then
		select	max(nr_sequencia)
		into STRICT	nr_seq_conta_resumo_w
		from	pls_conta_medica_resumo
		where	nr_seq_conta		= r_c03_w.nr_seq_conta
		and	nr_seq_conta_proc	= r_c03_w.nr_seq_conta_proc
		and	ie_situacao		= 'A';
	elsif (r_c03_w.nr_seq_conta_mat IS NOT NULL AND r_c03_w.nr_seq_conta_mat::text <> '') then
		select	max(nr_sequencia)
		into STRICT	nr_seq_conta_resumo_w
		from	pls_conta_medica_resumo
		where	nr_seq_conta		= r_c03_w.nr_seq_conta
		and	nr_seq_conta_mat	= r_c03_w.nr_seq_conta_mat
		and	ie_situacao		= 'A';
	end if;
	
	-- Only update if there is the information, or it is an A500 account
	if	((nr_seq_conta_resumo_w IS NOT NULL AND nr_seq_conta_resumo_w::text <> '') or (r_c03_w.ie_origem_protocolo = 'A')) then
	
		select	max(nr_seq_prestador_pgto)
		into STRICT	nr_seq_prestador_pgto_w
		from	pls_conta_medica_resumo
		where 	nr_seq_conta = r_c03_w.nr_seq_conta
		and 	nr_sequencia = nr_seq_conta_resumo_w;
	
		nr_seq_prest_pgto_tb_w(index_w) 	:= nr_seq_prestador_pgto_w;
		nr_seq_conta_resumo_tb_w(index_w)	:= nr_seq_conta_resumo_w;
		nr_seq_conta_co_contab_tb_w(index_w)	:= r_c03_w.nr_sequencia;
		index_w	:= index_w + 1;
		
		if (index_w	>= pls_util_cta_pck.qt_registro_transacao_w) then
			forall i in nr_seq_conta_resumo_tb_w.first..nr_seq_conta_resumo_tb_w.last
				update	pls_conta_copartic_contab
				set	nr_seq_conta_resumo	= nr_seq_conta_resumo_tb_w(i),
					nr_seq_prestador_pgto	= nr_seq_prest_pgto_tb_w(i)
				where	nr_sequencia		= nr_seq_conta_co_contab_tb_w(i);

			nr_seq_conta_resumo_tb_w.delete;
			nr_seq_conta_co_contab_tb_w.delete;
			nr_seq_prest_pgto_tb_w.delete;
			index_w	:= 0;
			commit;
		end if;	
	end if;
		
	end;
end loop;

if (nr_seq_conta_resumo_tb_w.count > 0) then
	forall i in nr_seq_conta_resumo_tb_w.first..nr_seq_conta_resumo_tb_w.last
		update	pls_conta_copartic_contab
		set	nr_seq_conta_resumo	= nr_seq_conta_resumo_tb_w(i),
			nr_seq_prestador_pgto	= nr_seq_prest_pgto_tb_w(i)
		where	nr_sequencia		= nr_seq_conta_co_contab_tb_w(i);

	nr_seq_conta_resumo_tb_w.delete;
	nr_seq_conta_co_contab_tb_w.delete;
	nr_seq_prest_pgto_tb_w.delete;
	index_w	:= 0;
	commit;
end if;

for r_c04_w in C04(dt_ref_inicial_w, dt_ref_final_w, nr_seq_protocolo_p, nr_seq_conta_p) loop
	begin
	
	nr_seq_conta_resumo_w	:= null;
	
	if (r_c04_w.nr_seq_conta_proc IS NOT NULL AND r_c04_w.nr_seq_conta_proc::text <> '') then
		select	max(nr_sequencia)
		into STRICT	nr_seq_conta_resumo_w
		from	pls_conta_medica_resumo
		where	nr_seq_conta		= r_c04_w.nr_seq_conta
		and	nr_seq_conta_proc	= r_c04_w.nr_seq_conta_proc
		and	ie_situacao		= 'A';
	elsif (r_c04_w.nr_seq_conta_mat IS NOT NULL AND r_c04_w.nr_seq_conta_mat::text <> '') then
		select	max(nr_sequencia)
		into STRICT	nr_seq_conta_resumo_w
		from	pls_conta_medica_resumo
		where	nr_seq_conta		= r_c04_w.nr_seq_conta
		and	nr_seq_conta_mat	= r_c04_w.nr_seq_conta_mat
		and	ie_situacao		= 'A';
	end if;
	
	-- Only update if there is the information, or it is an A500 account
	if	((nr_seq_conta_resumo_w IS NOT NULL AND nr_seq_conta_resumo_w::text <> '') or (r_c04_w.ie_origem_protocolo = 'A')) then
	
		select	max(nr_seq_prestador_pgto)
		into STRICT	nr_seq_prestador_pgto_w
		from	pls_conta_medica_resumo
		where 	nr_seq_conta = r_c04_w.nr_seq_conta
		and 	nr_sequencia = nr_seq_conta_resumo_w;
	
		nr_seq_prest_pgto_tb_w(index_w) 	:= nr_seq_prestador_pgto_w;
		nr_seq_conta_resumo_tb_w(index_w)	:= nr_seq_conta_resumo_w;
		nr_seq_conta_pos_contab_tb_w(index_w)	:= r_c04_w.nr_sequencia;
		index_w	:= index_w + 1;
		
		if (index_w	>= pls_util_cta_pck.qt_registro_transacao_w) then
			forall i in nr_seq_conta_resumo_tb_w.first..nr_seq_conta_resumo_tb_w.last
				update	pls_conta_pos_taxa_contab
				set	nr_seq_conta_resumo	= nr_seq_conta_resumo_tb_w(i),
					nr_seq_prestador_pgto	= nr_seq_prest_pgto_tb_w(i)
				where	nr_sequencia		= nr_seq_conta_pos_contab_tb_w(i);

			nr_seq_conta_resumo_tb_w.delete;
			nr_seq_conta_pos_contab_tb_w.delete;
			nr_seq_prest_pgto_tb_w.delete;
			index_w	:= 0;
			commit;
		end if;	
	end if;
		
	end;
end loop;


if (nr_seq_conta_resumo_tb_w.count > 0) then
	forall i in nr_seq_conta_resumo_tb_w.first..nr_seq_conta_resumo_tb_w.last
		update	pls_conta_pos_taxa_contab
		set	nr_seq_conta_resumo	= nr_seq_conta_resumo_tb_w(i),
			nr_seq_prestador_pgto	= nr_seq_prest_pgto_tb_w(i)
		where	nr_sequencia		= nr_seq_conta_pos_contab_tb_w(i);

	nr_seq_conta_resumo_tb_w.delete;
	nr_seq_conta_pos_contab_tb_w.delete;
	nr_seq_prest_pgto_tb_w.delete;
	index_w	:= 0;
	commit;
end if;

ds_tipo_lote_contabil_p := ds_tipo_lote_contabil_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_atualizar_contab_val_adic ( dt_mes_competencia_p timestamp, nm_usuario_p text, ds_tipo_lote_contabil_p INOUT tipo_lote_contabil.ds_tipo_lote_contabil%type, nr_seq_protocolo_p pls_protocolo_conta.nr_sequencia%type default null, nr_seq_conta_p pls_conta.nr_sequencia%type default null) FROM PUBLIC;

