-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ageint_consistir_solic_imc (nr_seq_ageint_p bigint, nr_seq_item_grupo_p bigint, ie_regra_p INOUT text, qt_peso_p INOUT bigint, qt_altura_p INOUT bigint, qt_imc_p INOUT bigint) AS $body$
DECLARE


cd_estabelecimento_w	bigint;	
ie_tipo_agendamento_w	agenda_int_grupo.ie_tipo_agendamento%type;	
cd_espec_medica_w		agenda_int_grupo_item.cd_especialidade%type;
cd_procedimento_w		ageint_regra_solic_imc.nr_seq_proc_interno%type;
nr_seq_proc_interno_w	agenda_int_grupo_item.nr_seq_proc_interno%type;	
cd_area_procedimento_w	estrutura_procedimento_v.cd_area_procedimento%type;	
cd_especialidade_w		estrutura_procedimento_v.cd_especialidade%type;
cd_grupo_proc_w			estrutura_procedimento_v.cd_grupo_proc%type;
ie_origem_proced_w		agenda_integrada_item.ie_origem_proced%type;
nr_seq_regra_w			ageint_regra_solic_imc.nr_sequencia%type;
qt_peso_w				agenda_integrada.qt_peso%type;
qt_altura_cm_w			agenda_integrada.qt_altura_cm%type;
qt_imc_w				double precision;

C01 CURSOR FOR
	SELECT	 b.ie_tipo_agendamento,
		a.nr_seq_proc_interno
	from 	agenda_int_grupo_item a,
		agenda_int_grupo b
	where 	a.nr_seq_grupo = b.nr_sequencia
	and 	a.nr_Sequencia = nr_seq_item_grupo_p;

C02 CURSOR FOR
	SELECT	nr_sequencia
	from	ageint_regra_solic_imc
	where	ie_tipo_agendamento = ie_tipo_agendamento_w
	and	((cd_estabelecimento = cd_estabelecimento_w) or (coalesce(cd_estabelecimento::text, '') = ''))
	and	((cd_especialidade_medica = cd_espec_medica_w) or (coalesce(cd_especialidade_medica::text, '') = ''))
	and	((cd_procedimento = cd_procedimento_w) or (coalesce(cd_procedimento::text, '') = ''))
	and	((nr_seq_proc_interno = nr_seq_proc_interno_w) or (coalesce(nr_seq_proc_interno::text, '') = ''))
	and	((cd_area_procedimento = cd_area_procedimento_w) or (coalesce(cd_area_procedimento::text, '') = ''))
	and	((cd_especialidade = cd_especialidade_w) or (coalesce(cd_especialidade::text, '') = ''))
	and	((cd_grupo_proc = cd_grupo_proc_w) or (coalesce(cd_grupo_proc::text, '') = ''))
	order by coalesce(cd_procedimento,0),
		coalesce(nr_seq_proc_interno,0),
		coalesce(cd_grupo_proc,0),
		coalesce(cd_especialidade,0),
		coalesce(cd_area_procedimento,0);

C03 CURSOR FOR
	SELECT	a.cd_procedimento,
		a.ie_origem_proced,
		b.qt_peso,
		b.qt_altura_cm
	from	agenda_integrada_item a,
		agenda_integrada b
	where	a.nr_seq_agenda_int	= b.nr_sequencia
	and	b.nr_sequencia	= nr_seq_ageint_p
	
union

	SELECT	null,
		null,
		b.qt_peso,
		b.qt_altura_cm
	from	agenda_integrada b
	where	b.nr_sequencia	= nr_seq_ageint_p;


BEGIN

ie_regra_p	:= 'N';
qt_peso_p	:= 0;
qt_altura_p	:= 0;
qt_imc_p	:= 0;
cd_estabelecimento_w	:= wheb_usuario_pck.get_cd_estabelecimento;	

if (coalesce(nr_seq_ageint_p,0) > 0) then
	
	open C03;
	loop
	fetch C03 into
		cd_procedimento_w,
		ie_origem_proced_w,
		qt_peso_w,
		qt_altura_cm_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
	begin
	
		if ((coalesce(cd_procedimento_w,0) > 0) and (coalesce(ie_origem_proced_w,0) > 0)) then
			begin	

			select	coalesce(max(cd_area_procedimento),0),
				coalesce(max(cd_especialidade),0),
				coalesce(max(cd_grupo_proc),0)
			into STRICT	cd_area_procedimento_w,
				cd_especialidade_w,
				cd_grupo_proc_w
			from	estrutura_procedimento_v
			where	cd_procedimento = cd_procedimento_w
			and	ie_origem_proced = ie_origem_proced_w;

			end;
		end if;
		
		if (qt_peso_w IS NOT NULL AND qt_peso_w::text <> '') then
			qt_peso_p	:= qt_peso_w;
		end if;
		
		if (qt_altura_cm_w IS NOT NULL AND qt_altura_cm_w::text <> '') then
			qt_altura_p	:= qt_altura_cm_w;
		end if;	

		if (qt_peso_w IS NOT NULL AND qt_peso_w::text <> '' AND qt_altura_cm_w IS NOT NULL AND qt_altura_cm_w::text <> '') then
			qt_imc_w	:=	obter_imc(qt_peso_w,qt_altura_cm_w);

			if (qt_imc_w > 0) then
				qt_imc_p	:=	qt_imc_w;
			end if;
		end if;
		
	end;
	end loop;
	close C03;
end if;

if (coalesce(nr_seq_item_grupo_p,0) > 0) then
	
	open C01;
	loop
	fetch C01 into
		ie_tipo_agendamento_w,
		nr_seq_proc_interno_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	
	if (ie_tipo_agendamento_w IS NOT NULL AND ie_tipo_agendamento_w::text <> '') then
	
		if (ie_tipo_agendamento_w = 'C') then
			select	 a.cd_especialidade
			into STRICT	cd_espec_medica_w
			from	agenda_int_grupo_item a,
				agenda_int_grupo b
			where 	a.nr_seq_grupo = b.nr_sequencia
			and 	a.nr_Sequencia = nr_seq_item_grupo_p;
		end if;
	
		open C02;
		loop
		fetch C02 into
			nr_seq_regra_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
			if (nr_seq_regra_w IS NOT NULL AND nr_seq_regra_w::text <> '') then
				ie_regra_p	:= 'S';
			end if;
		end;
		end loop;
		close C02;
	end if;
	
	end;
	end loop;
	close C01;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ageint_consistir_solic_imc (nr_seq_ageint_p bigint, nr_seq_item_grupo_p bigint, ie_regra_p INOUT text, qt_peso_p INOUT bigint, qt_altura_p INOUT bigint, qt_imc_p INOUT bigint) FROM PUBLIC;

