-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_valores_protocolo ( nr_seq_protocolo_p bigint, nm_usuario_p text) AS $body$
DECLARE


vl_cobrado_w			double precision	:= 0;
vl_coparticipacao_w		double precision	:= 0;
vl_total_w			double precision	:= 0;
vl_total_imp_w			double precision	:= 0;
vl_glosa_w			double precision	:= 0;
vl_total_beneficiario_w		double precision	:= 0;
vl_contabil_w			double precision	:= 0;
vl_proc_pendente_w		double precision	:= 0;
vl_mat_pendente_w		double precision	:= 0;
vl_pendente_w			double precision	:= 0;
vl_proc_liberado_w		double precision	:= 0;
vl_mat_liberado_w		double precision	:= 0;
vl_liberado_w			double precision	:= 0;
vl_proc_lib_usuario_w		double precision	:= 0;
vl_mat_lib_usuario_w		double precision	:= 0;
vl_liberado_usuario_w		double precision	:= 0;
qt_procedimento_w		bigint	:= 0;
qt_material_w			bigint	:= 0;
qt_ocorrencia_w			bigint	:= 0;
vl_apresentado_proc_w		double precision	:= 0;
vl_apresentado_mat_w		double precision	:= 0;


BEGIN

/* Obter os valores das contas */

select	sum(vl_total),
	sum(vl_total_imp),
	sum(vl_glosa),
	sum(vl_total_beneficiario)
into STRICT	vl_total_w,
	vl_total_imp_w,
	vl_glosa_w,
	vl_total_beneficiario_w
from	pls_conta
where	nr_seq_protocolo	= nr_seq_protocolo_p;

/* Valores dos procedimentos */

select	sum(vl_apresentado),
	sum(vl_pendente),
	sum(vl_lib_sistema),
	sum(vl_lib_usuario),
	sum(qt_procedimento)
into STRICT	vl_apresentado_proc_w,
	vl_proc_pendente_w,
	vl_proc_liberado_w,
	vl_proc_lib_usuario_w,
	qt_procedimento_w
from (
	SELECT	CASE WHEN a.ie_status='D' THEN 0  ELSE coalesce(a.vl_procedimento_imp,0) END  vl_apresentado,			/* Apresentado = a.ie_status <> 'D' */
		CASE WHEN a.ie_status='D' THEN 0 WHEN a.ie_status='L' THEN 0 WHEN a.ie_status='S' THEN 0  ELSE coalesce(a.vl_procedimento_imp,0) END  vl_pendente, 	/* Pendente = a.ie_status not in ('L','S','D') */
		CASE WHEN a.ie_status='S' THEN coalesce(a.vl_liberado,0)  ELSE 0 END  vl_lib_sistema,				/* Liberado pelo sistema = a.ie_status = 'S' */
		CASE WHEN a.ie_status='L' THEN coalesce(a.vl_liberado,0)  ELSE 0 END  vl_lib_usuario,				/* Liberado pelo usuário = a.ie_status = 'L' */
		CASE WHEN a.ie_status='D' THEN 0  ELSE coalesce(a.qt_procedimento_imp,0) END  qt_procedimento			/* Quantidade de procedimentos = ie_status <> 'D' */
	from	pls_conta_proc	a,
		pls_conta b
	where	a.nr_seq_conta	= b.nr_sequencia
	and	b.nr_seq_protocolo = nr_seq_protocolo_p) alias11;

/* Valores dos procedimentos */

select	sum(vl_apresentado),
	sum(vl_pendente),
	sum(vl_lib_sistema),
	sum(vl_lib_usuario),
	sum(qt_material)
into STRICT	vl_apresentado_mat_w,
	vl_mat_pendente_w,
	vl_mat_liberado_w,
	vl_mat_lib_usuario_w,
	qt_material_w
from (
	SELECT	CASE WHEN a.ie_status='D' THEN 0  ELSE coalesce(a.vl_material_imp,0) END  vl_apresentado,			/* Apresentado = a.ie_status <> 'D' */
		CASE WHEN a.ie_status='D' THEN 0 WHEN a.ie_status='L' THEN 0 WHEN a.ie_status='S' THEN 0  ELSE coalesce(a.vl_material_imp,0) END  vl_pendente, 		/* Pendente = a.ie_status not in ('L','S','D') */
		CASE WHEN a.ie_status='S' THEN coalesce(a.vl_liberado,0)  ELSE 0 END  vl_lib_sistema,				/* Liberado pelo sistema = a.ie_status = 'S' */
		CASE WHEN a.ie_status='L' THEN coalesce(a.vl_liberado,0)  ELSE 0 END  vl_lib_usuario,				/* Liberado pelo usuário = a.ie_status = 'L' */
		CASE WHEN a.ie_status='D' THEN 0  ELSE coalesce(a.qt_material_imp,0) END  qt_material			/* Quantidade de materiais = ie_status <> 'D' */
	from	pls_conta_mat	a,
		pls_conta b
	where	a.nr_seq_conta	= b.nr_sequencia
	and	b.nr_seq_protocolo = nr_seq_protocolo_p) alias11;

vl_cobrado_w := (coalesce(vl_apresentado_proc_w,0) + coalesce(vl_apresentado_mat_w,0));
vl_contabil_w	:= coalesce(vl_total_w,0) + coalesce(vl_glosa_w,0) + coalesce(vl_glosa_w,0);

select	sum(b.vl_coparticipacao)
into STRICT	vl_coparticipacao_w
from	pls_conta_coparticipacao	b,
	pls_conta			a
where	a.nr_seq_protocolo	= nr_seq_protocolo_p
and	a.nr_sequencia		= b.nr_seq_conta
and	(b.vl_coparticipacao IS NOT NULL AND b.vl_coparticipacao::text <> '');

vl_pendente_w	:= coalesce(vl_proc_pendente_w,0) + coalesce(vl_mat_pendente_w,0);

vl_liberado_w	:= coalesce(vl_proc_liberado_w,0) + coalesce(vl_mat_liberado_w,0);

vl_liberado_usuario_w	:= coalesce(vl_proc_lib_usuario_w,0) + coalesce(vl_mat_lib_usuario_w,0);

qt_ocorrencia_w	:= coalesce(qt_procedimento_w,0) + coalesce(qt_material_w,0);

update	pls_protocolo_conta
set	vl_cobrado		= coalesce(vl_cobrado_w,0),
	vl_coparticipacao 	= coalesce(vl_coparticipacao_w,0),
	vl_glosa		= coalesce(vl_glosa_w,0),
	vl_total		= coalesce(vl_total_w,0),
	vl_total_beneficiario	= coalesce(vl_total_beneficiario_w,0),
	vl_total_imp		= coalesce(vl_total_imp_w,0),
	vl_contabil		= coalesce(vl_contabil_w,0),
	vl_pendente		= coalesce(vl_pendente_w,0),
	vl_lib_sistema		= coalesce(vl_liberado_w,0),
	vl_lib_usuario		= coalesce(vl_liberado_usuario_w,0),
	qt_ocorrencias		= coalesce(qt_ocorrencia_w,0)
where	nr_sequencia		= nr_seq_protocolo_p;

--commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_valores_protocolo ( nr_seq_protocolo_p bigint, nm_usuario_p text) FROM PUBLIC;

