-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_ocor_aut_cid ( nr_seq_ocor_filtro_p bigint, nr_seq_guia_p bigint, nr_seq_requisicao_p bigint, nr_seq_execucao_p bigint, nr_seq_param1_p bigint, nr_seq_param2_p bigint, nr_seq_param3_p bigint, nr_seq_param4_p bigint, nr_seq_param5_p bigint, nm_usuario_p text, ie_gerar_ocorrencia_p INOUT text, ie_tipo_ocorrencia_p INOUT text) AS $body$
DECLARE


/*
IE_TIPO_OCORRENCIA_W	= C - Gera a ocorrência para o cabeçalho
			= I - Gera ocorrência para os itens
*/
cd_doenca_w			varchar(10);
nr_seq_grupo_doenca_w		bigint;
nr_seq_requisicao_w		bigint;
ie_grupo_doenca_w		varchar(1) := 'N';
ie_gerar_ocorrencia_w		varchar(2)	:= 'N';
ie_regra_com_itens_w		varchar(1);
ie_indicacao_acidente_w		pls_ocor_aut_filtro_cid.ie_indicacao_acidente%type;

C00 CURSOR FOR
	SELECT	nr_seq_grupo_doenca
	from	pls_ocor_aut_filtro_cid
	where	nr_seq_ocor_aut_filtro	= nr_seq_ocor_filtro_p
	and	ie_situacao		= 'A'
	and (coalesce(cd_doenca_cid::text, '') = ''	or cd_doenca_cid	= cd_doenca_w)
	and (coalesce(ie_indicacao_acidente::text, '') = '' or ie_indicacao_acidente = ie_indicacao_acidente_w);

C01 CURSOR FOR
	SELECT	cd_doenca,
		ie_indicacao_acidente
	from	pls_diagnostico
	where	nr_seq_guia = nr_seq_guia_p;

C02 CURSOR FOR
	SELECT	cd_doenca,
		ie_indicacao_acidente
	from	pls_requisicao_diagnostico
	where	nr_seq_requisicao = nr_seq_requisicao_w;


BEGIN
if (nr_seq_guia_p IS NOT NULL AND nr_seq_guia_p::text <> '') then
	open C01;
	loop
	fetch C01 into
		cd_doenca_w,
		ie_indicacao_acidente_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		open C00;
		loop
		fetch C00 into
			nr_seq_grupo_doenca_w;
		EXIT WHEN NOT FOUND; /* apply on C00 */
			begin
			ie_grupo_doenca_w := 'S';

			if (coalesce(nr_seq_grupo_doenca_w,0) > 0) then
				ie_grupo_doenca_w	:= pls_se_grupo_preco_doenca(nr_seq_grupo_doenca_w, cd_doenca_w);
			end if;

			if (ie_grupo_doenca_w = 'S') then
				ie_gerar_ocorrencia_w	:= 'S';
				--ie_tipo_ocorrencia_p	:= 'C';
				goto final1;
			end if;
			end;
		end loop;
		close C00;
		end;
	end loop;
	close C01;
	<<final1>>
	nr_seq_grupo_doenca_w := 0;
elsif (nr_seq_requisicao_p IS NOT NULL AND nr_seq_requisicao_p::text <> '') then

	nr_seq_requisicao_w	:= nr_seq_requisicao_p;

	open C02;
	loop
	fetch C02 into
		cd_doenca_w,
		ie_indicacao_acidente_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		open C00;
		loop
		fetch C00 into
			nr_seq_grupo_doenca_w;
		EXIT WHEN NOT FOUND; /* apply on C00 */
			begin
			ie_grupo_doenca_w := 'S';

			if (coalesce(nr_seq_grupo_doenca_w,0) > 0) then
				ie_grupo_doenca_w	:= pls_se_grupo_preco_doenca(nr_seq_grupo_doenca_w, cd_doenca_w);
			end if;

			if (ie_grupo_doenca_w = 'S') then
				ie_gerar_ocorrencia_w	:= 'S';
				--ie_tipo_ocorrencia_p	:= 'C';
				goto final2;
			end if;
			end;
		end loop;
		close C00;
		end;
	end loop;
	close C02;
	<<final2>>
	nr_seq_grupo_doenca_w := 0;
elsif (nr_seq_execucao_p IS NOT NULL AND nr_seq_execucao_p::text <> '') then
	begin
		select	nr_seq_requisicao
		into STRICT	nr_seq_requisicao_w
		from	pls_execucao_requisicao
		where	nr_sequencia	= nr_seq_execucao_p;
	exception
	when others then
		nr_seq_requisicao_w	:= null;
	end;

	if (nr_seq_requisicao_w IS NOT NULL AND nr_seq_requisicao_w::text <> '') then
		open C02;
		loop
		fetch C02 into
			cd_doenca_w,
			ie_indicacao_acidente_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin
			open C00;
			loop
			fetch C00 into
				nr_seq_grupo_doenca_w;
			EXIT WHEN NOT FOUND; /* apply on C00 */
				begin
				ie_grupo_doenca_w := 'S';

				if (coalesce(nr_seq_grupo_doenca_w,0) > 0) then
					ie_grupo_doenca_w	:= pls_se_grupo_preco_doenca(nr_seq_grupo_doenca_w, cd_doenca_w);
				end if;

				if (ie_grupo_doenca_w = 'S') then
					ie_gerar_ocorrencia_w	:= 'S';
					--ie_tipo_ocorrencia_p	:= 'C';
					goto final3;
				end if;
				end;
			end loop;
			close C00;
			end;
		end loop;
		close C02;
		<<final3>>
		nr_seq_grupo_doenca_w := 0;
	end if;
end if;

if (ie_gerar_ocorrencia_w = 'S') then
	ie_regra_com_itens_w  :=  pls_obter_se_oco_aut_fil_itens(nr_seq_ocor_filtro_p);

	if (ie_regra_com_itens_w = 'S') then
		ie_tipo_ocorrencia_p := 'I';
	else
		ie_tipo_ocorrencia_p := 'C';
	end if;
end if;

ie_gerar_ocorrencia_p	:= ie_gerar_ocorrencia_w;

--commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_ocor_aut_cid ( nr_seq_ocor_filtro_p bigint, nr_seq_guia_p bigint, nr_seq_requisicao_p bigint, nr_seq_execucao_p bigint, nr_seq_param1_p bigint, nr_seq_param2_p bigint, nr_seq_param3_p bigint, nr_seq_param4_p bigint, nr_seq_param5_p bigint, nm_usuario_p text, ie_gerar_ocorrencia_p INOUT text, ie_tipo_ocorrencia_p INOUT text) FROM PUBLIC;

