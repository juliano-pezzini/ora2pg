-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE fa_inserir_medic_item_lote ( ds_seq_medic_item_p text, nr_seq_lote_p bigint, qt_item_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
dt_validade_w			timestamp;
lista_itens_w			dbms_sql.varchar2_table;
nr_seq_medic_item_w		bigint;
nr_seq_fa_entrega_w		bigint;
cd_material_w			bigint;
qt_item_w			double precision;
qt_item_atual_w			double precision;
qt_total_item_lote_w		double precision;
qt_dispensar_w			integer;
ie_existe_outro_igual_w		varchar(1);
ie_existe_item_menos_lote_w	varchar(1);
i				integer;
				

BEGIN 
if (ds_seq_medic_item_p IS NOT NULL AND ds_seq_medic_item_p::text <> '') and (nr_seq_lote_p IS NOT NULL AND nr_seq_lote_p::text <> '') then 
 
	qt_item_atual_w	:= qt_item_p;
	lista_itens_w 	:= obter_lista_string(ds_seq_medic_item_p, ',');
	dt_validade_w 	:= to_date(Obter_dados_lote_fornec(nr_seq_lote_p,'V'),'dd/mm/yyyy');
	 
	for	i in lista_itens_w.first..lista_itens_w.last loop 
		 
		nr_seq_medic_item_w 		:= lista_itens_w(i);
		qt_item_w			:= qt_item_atual_w;
		ie_existe_item_menos_lote_w	:= 'N';
		 
		if (qt_item_w > 0) then 
			select	nr_seq_fa_entrega, 
				cd_material, 
				qt_dispensar 
			into STRICT	nr_seq_fa_entrega_w, 
				cd_material_w, 
				qt_dispensar_w 
			from	fa_entrega_medicacao_item 
			where	nr_sequencia = nr_seq_medic_item_w;
			 
			select	CASE WHEN count(a.nr_sequencia)=0 THEN 'N'  ELSE 'S' END  
			into STRICT	ie_existe_outro_igual_w 
			from	fa_entrega_medicacao_item a 
			where	a.nr_seq_fa_entrega 	= nr_seq_fa_entrega_w 
			and	a.cd_material		= cd_material_w 
			and	a.nr_sequencia		<> nr_seq_medic_item_w 
			and not exists (	SELECT	1 
					from	fa_entrega_medic_item_lote b 
					where	b.nr_seq_medic_item = a.nr_sequencia);
			 
			if (ie_existe_outro_igual_w = 'S') and (qt_dispensar_w < qt_item_atual_w) then 
				qt_item_w := qt_dispensar_w;
			end if;
			 
			select	coalesce(sum(b.qt_item),0) 
			into STRICT	qt_total_item_lote_w	 
			from	fa_entrega_medic_item_lote b, 
				fa_entrega_medicacao_item a 
			where	b.nr_seq_medic_item 	= a.nr_sequencia 
			and	a.nr_sequencia		= nr_seq_medic_item_w;
 
			select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END  
			into STRICT	ie_existe_item_menos_lote_w 
			from	fa_entrega_medicacao_item a 
			where	a.nr_sequencia 		<> nr_seq_medic_item_w 
			and	a.nr_seq_fa_entrega 	= nr_seq_fa_entrega_w 
			and	a.cd_material		= cd_material_w 
			and	a.qt_dispensar > (	SELECT	coalesce(sum(b.qt_item),0) 
							from	fa_entrega_medic_item_lote b 
							where	b.nr_seq_medic_item = a.nr_sequencia);
			 
			if (ie_existe_item_menos_lote_w = 'S') and (qt_total_item_lote_w < qt_dispensar_w) then 
				qt_item_w := qt_item_w - qt_total_item_lote_w;
			end if;
			 
			if (ie_existe_item_menos_lote_w = 'N') or (qt_total_item_lote_w < qt_dispensar_w) then 
				insert into fa_entrega_medic_item_lote(	 
					nr_sequencia, 
					dt_atualizacao, 
					nm_usuario, 
					dt_atualizacao_nrec, 
					nm_usuario_nrec, 
					qt_item, 
					nr_lote, 
					dt_validade_lote, 
					nr_seq_medic_item, 
					ie_indeterminado, 
					nr_seq_lote) 
				values (	nextval('fa_entrega_medic_item_lote_seq'), 
					clock_timestamp(), 
					nm_usuario_p, 
					clock_timestamp(), 
					nm_usuario_p, 
					coalesce(qt_item_w,1), 
					nr_seq_lote_p, 
					dt_validade_w, 
					nr_seq_medic_item_w, 
					'N', 
					nr_seq_lote_p);
					 
				qt_item_atual_w := qt_item_atual_w - coalesce(qt_item_w,1);
			end if;
		end if;
	end loop;
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE fa_inserir_medic_item_lote ( ds_seq_medic_item_p text, nr_seq_lote_p bigint, qt_item_p bigint, nm_usuario_p text) FROM PUBLIC;

