-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_etapa_alta_paciente ( nr_atendimento_p bigint, nr_seq_protocolo_p bigint, nm_usuario_p text, nr_seq_lote_protocolo_p bigint default 0) AS $body$
DECLARE


qt_existe_w		bigint;
qt_regra_prejuizo_w	bigint;
nr_seq_etapa_w		bigint;
nr_interno_conta_w		bigint;
ie_tipo_atendimento_w	smallint;
cd_convenio_w		integer;
ie_evento_w		varchar(1);
cd_estabelecimento_w	bigint;
nr_seq_classificacao_w	bigint;
nr_interno_conta_w2	bigint;
ie_ultima_conta_w		varchar(1);
cd_setor_atendimento_w	integer;
vl_pacote_w		double precision;
vl_original_mat_w	double precision;
vl_original_proc_w	double precision;
vl_original_w		double precision;
pr_prejuizo_w		double precision;
pr_prejuizo_permitido_w	double precision;
qt_pacote_w		double precision;
cd_categoria_w		varchar(10);
nr_seq_motivo_dev_w	bigint;
ie_tipo_convenio_w	smallint;
ie_regra_restrita_etapa_w	varchar(1);
ie_encontrou_regra_w	varchar(1);
ds_observacao_w		varchar(255);
nr_titulo_w		bigint;
nm_usuario_geracao_w	varchar(15);
dt_geracao_w		timestamp;
cd_setor_atend_etapa_w	fatur_etapa_alta.cd_setor_atend_etapa%type;

C01 CURSOR FOR
	SELECT	nr_seq_etapa,
		ie_ultima_conta,
		pr_prejuizo,
		nr_seq_motivo_dev,
		cd_setor_atend_etapa
	from	fatur_etapa_alta
	where	((coalesce(cd_convenio::text, '') = '') or (coalesce(cd_convenio, coalesce(cd_convenio_w,0)) = coalesce(cd_convenio_w,0)))
	and	((coalesce(cd_categoria::text, '') = '') or (coalesce(cd_categoria, coalesce(cd_categoria_w,'0')) = coalesce(cd_categoria_w,'0')))
	and	((coalesce(ie_tipo_atendimento::text, '') = '') or (coalesce(ie_tipo_atendimento, coalesce(ie_tipo_atendimento_w,0)) = coalesce(ie_tipo_atendimento_w,0)))
	and 	coalesce(cd_estabelecimento, coalesce(cd_estabelecimento_w,1)) = coalesce(cd_estabelecimento_w,1)
	and 	coalesce(nr_seq_classificacao, coalesce(nr_seq_classificacao_w,0)) = coalesce(nr_seq_classificacao_w,0)
	and	coalesce(cd_setor_atendimento, coalesce(cd_setor_atendimento_w,0)) = coalesce(cd_setor_atendimento_w,0)
	and (coalesce(ie_evento,'A') = coalesce(ie_evento_w,'A'))
	and	coalesce(cd_perfil, coalesce(obter_perfil_ativo,0)) = coalesce(obter_perfil_ativo,0)
	and	coalesce(ie_tipo_convenio, coalesce(ie_tipo_convenio_w,0)) = coalesce(ie_tipo_convenio_w,0)
	and	ie_situacao = 'A'
	order by	coalesce(cd_convenio,0),
		coalesce(cd_categoria,'0'),
		coalesce(cd_setor_atendimento,0),
		coalesce(ie_tipo_atendimento,0),
		coalesce(ie_tipo_convenio,0),
		coalesce(nr_seq_classificacao,0),
		coalesce(cd_perfil,0),
		coalesce(cd_estabelecimento,0);

C02 CURSOR FOR
	SELECT	nr_interno_conta,
		cd_convenio_parametro,
		cd_categoria_parametro,
		obter_tipo_convenio(cd_convenio_parametro)
	from	conta_paciente
	where	nr_atendimento = nr_atendimento_p
	and	ie_status_acerto = '1';

C03 CURSOR FOR
	SELECT	nr_interno_conta,
		cd_convenio_parametro,
		cd_categoria_parametro,
		obter_tipo_convenio(cd_convenio_parametro),
		cd_estabelecimento
	from	conta_paciente
	where	nr_seq_protocolo = nr_seq_protocolo_p
	and	ie_status_acerto = '2'
	and	coalesce(nr_seq_lote_protocolo_p,0) = 0
	
union

	SELECT	a.nr_interno_conta,
		a.cd_convenio_parametro,
		a.cd_categoria_parametro,
		obter_tipo_convenio(a.cd_convenio_parametro),
		a.cd_estabelecimento
	from	conta_paciente a,
		protocolo_convenio b
	where	a.nr_seq_protocolo = b.nr_seq_protocolo
	and	b.nr_seq_lote_protocolo = nr_seq_lote_protocolo_p
	and	ie_status_acerto = '2'
	and	coalesce(nr_seq_protocolo_p,0) = 0;


BEGIN

select	count(*)
into STRICT	qt_existe_w
from	fatur_etapa_alta;

select	coalesce(max(ie_tipo_atendimento),0),
	coalesce(max(cd_estabelecimento),1),
	coalesce(max(nr_seq_classificacao),0),
	coalesce(max(obter_setor_atendimento(nr_atendimento)),0)
into STRICT	ie_tipo_atendimento_w,
	cd_estabelecimento_w,
	nr_seq_classificacao_w,
	cd_setor_atendimento_w
from	atendimento_paciente
where	nr_atendimento = nr_atendimento_p;

select	coalesce(max(ie_regra_restrita_etapa),'N')
into STRICT	ie_regra_restrita_etapa_w
from	parametro_faturamento
where	cd_estabelecimento = cd_estabelecimento_w;

if (coalesce(qt_existe_w,0) > 0) then

	if (coalesce(nr_atendimento_p,0) > 0) then

		ie_evento_w := 'A';

		select	max(nr_interno_conta)
		into STRICT	nr_interno_conta_w2
		from	conta_paciente
		where	nr_atendimento = nr_atendimento_p
		and		ie_status_acerto = '1';

		open C02;
		loop
		fetch C02 into
			nr_interno_conta_w,
			cd_convenio_w,
			cd_categoria_w,
			ie_tipo_convenio_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin
			ie_encontrou_regra_w	:= 'N';

			open C01;
			loop
			fetch C01 into
				nr_seq_etapa_w,
				ie_ultima_conta_w,
				pr_prejuizo_permitido_w,
				nr_seq_motivo_dev_w,
				cd_setor_atend_etapa_w;
			EXIT WHEN NOT FOUND; /* apply on C01 */
				begin
				ie_encontrou_regra_w	:= 'S';

				if (ie_regra_restrita_etapa_w = 'N') and
					(((nr_interno_conta_w = nr_interno_conta_w2) and (coalesce(ie_ultima_conta_w, 'N') = 'S')) or (coalesce(ie_ultima_conta_w,'N') = 'N')) then
					CALL gerar_conta_etapa(nr_interno_conta_w, nm_usuario_p, nr_seq_etapa_w, nr_seq_motivo_dev_w, cd_setor_atend_etapa_w, null);
				end if;
				end;
			end loop;
			close C01;

			if (ie_regra_restrita_etapa_w = 'S') and (ie_encontrou_regra_w = 'S') and
				(((nr_interno_conta_w = nr_interno_conta_w2) and (coalesce(ie_ultima_conta_w, 'N') = 'S')) or (coalesce(ie_ultima_conta_w,'N') = 'N')) then
				CALL gerar_conta_etapa(nr_interno_conta_w, nm_usuario_p, nr_seq_etapa_w, nr_seq_motivo_dev_w, cd_setor_atend_etapa_w, null);
			end if;

			end;
		end loop;
		close C02;

		select	count(*)
		into STRICT	qt_regra_prejuizo_w
		from	fatur_etapa_alta
		where	((coalesce(cd_convenio::text, '') = '') or (coalesce(cd_convenio, coalesce(cd_convenio_w,0)) = coalesce(cd_convenio_w,0)))
		and	((coalesce(cd_categoria::text, '') = '') or (coalesce(cd_categoria, coalesce(cd_categoria_w,'0')) = coalesce(cd_categoria_w,'0')))
		and	((coalesce(ie_tipo_atendimento::text, '') = '') or (coalesce(ie_tipo_atendimento, coalesce(ie_tipo_atendimento_w,0)) = coalesce(ie_tipo_atendimento_w,0)))
		and 	coalesce(cd_estabelecimento, coalesce(cd_estabelecimento_w,1)) = coalesce(cd_estabelecimento_w,1)
		and 	coalesce(nr_seq_classificacao, coalesce(nr_seq_classificacao_w,0)) = coalesce(nr_seq_classificacao_w,0)
		and	coalesce(cd_setor_atendimento, coalesce(cd_setor_atendimento_w,0)) = coalesce(cd_setor_atendimento_w,0)
		and	coalesce(ie_evento,'A') = 'P'
		and	coalesce(cd_perfil, coalesce(obter_perfil_ativo,0)) = coalesce(obter_perfil_ativo,0)
		and	coalesce(ie_tipo_convenio, coalesce(ie_tipo_convenio_w,0)) = coalesce(ie_tipo_convenio_w,0)
		and	ie_situacao = 'A';

		if (qt_regra_prejuizo_w > 0) then

			ie_evento_w := 'P';

			select	max(nr_interno_conta)
			into STRICT	nr_interno_conta_w2
			from	conta_paciente
			where	nr_atendimento = nr_atendimento_p
			and	ie_status_acerto = '1';

			open C02;
			loop
			fetch C02 into
				nr_interno_conta_w,
				cd_convenio_w,
				cd_categoria_w,
				ie_tipo_convenio_w;
			EXIT WHEN NOT FOUND; /* apply on C02 */
				begin
				ie_encontrou_regra_w	:= 'N';

				open C01;
				loop
				fetch C01 into
					nr_seq_etapa_w,
					ie_ultima_conta_w,
					pr_prejuizo_permitido_w,
					nr_seq_motivo_dev_w,
					cd_setor_atend_etapa_w;
				EXIT WHEN NOT FOUND; /* apply on C01 */
					ie_encontrou_regra_w	:= 'S';

					select 	sum(coalesce(vl_tabela_original, coalesce(vl_material,0))) vl_original
					into STRICT	vl_original_mat_w
					from	material_atend_paciente
					where	nr_interno_conta =  nr_interno_conta_w
					and 	(nr_seq_proc_pacote IS NOT NULL AND nr_seq_proc_pacote::text <> '')
					and 	coalesce(cd_motivo_exc_conta::text, '') = '';


					select 	sum(coalesce(Obter_valor_Orig_Proc(nr_sequencia, 0),0)) vl_original
					into STRICT	vl_original_proc_w
					from	procedimento_paciente
					where	nr_interno_conta =  nr_interno_conta_w
					and 	(nr_seq_proc_pacote IS NOT NULL AND nr_seq_proc_pacote::text <> '')
					and 	nr_seq_proc_pacote <> nr_sequencia
					and 	coalesce(cd_motivo_exc_conta::text, '') = '';


					vl_original_w :=  vl_original_proc_w + vl_original_mat_w;

					select	count(*)
					into STRICT	qt_pacote_w
					from 	procedimento_paciente
					where 	nr_interno_conta =  nr_interno_conta_w
					and 	coalesce(nr_seq_proc_pacote, 0) = nr_sequencia
					and	coalesce(cd_motivo_exc_conta::text, '') = '';


					select	coalesce(sum(obter_valor_pacote(nr_sequencia)),0)
					into STRICT	vl_pacote_w
					from 	procedimento_paciente
					where 	nr_interno_conta =  nr_interno_conta_w
					and 	coalesce(nr_seq_proc_pacote, 0) = nr_sequencia
					and	coalesce(cd_motivo_exc_conta::text, '') = '';

					pr_prejuizo_w := obter_pr_prejuizo_pac(vl_pacote_w,vl_original_w);

					begin

					if (ie_regra_restrita_etapa_w = 'N') and (pr_prejuizo_w > pr_prejuizo_permitido_w) and (qt_pacote_w > 0) and
						(((nr_interno_conta_w = nr_interno_conta_w2) and (coalesce(ie_ultima_conta_w, 'N') = 'S')) or (coalesce(ie_ultima_conta_w,'N') = 'N')) then
						CALL gerar_conta_etapa(nr_interno_conta_w, nm_usuario_p, nr_seq_etapa_w, nr_seq_motivo_dev_w, cd_setor_atend_etapa_w,
							substr(wheb_mensagem_pck.get_texto(306377),1,255)||pr_prejuizo_w ||' %' );
					end if;
					end;
				end loop;
				close C01;

				if (ie_regra_restrita_etapa_w = 'S') and (ie_encontrou_regra_w = 'S') and (pr_prejuizo_w > pr_prejuizo_permitido_w) and (qt_pacote_w > 0) and
					(((nr_interno_conta_w = nr_interno_conta_w2) and (coalesce(ie_ultima_conta_w, 'N') = 'S')) or (coalesce(ie_ultima_conta_w,'N') = 'N')) then
					CALL gerar_conta_etapa(nr_interno_conta_w, nm_usuario_p, nr_seq_etapa_w, nr_seq_motivo_dev_w, cd_setor_atend_etapa_w,
						substr(wheb_mensagem_pck.get_texto(306377),1,255)||pr_prejuizo_w ||' %' );
				end if;

				end;
			end loop;
			close C02;
		end if;
	end if;

	if ((coalesce(nr_seq_protocolo_p, 0) > 0) or (nr_seq_lote_protocolo_p > 0))then

		ie_evento_w := 'T';

		select	max(nr_interno_conta)
		into STRICT	nr_interno_conta_w2
		from	conta_paciente
		where	nr_atendimento = nr_atendimento_p
		and		ie_status_acerto = '2';

		ds_observacao_w:= null;

		begin
		select 	max(nr_titulo),
			max(nm_usuario_orig),
			max(dt_emissao)
		into STRICT	nr_titulo_w,
			nm_usuario_geracao_w,
			dt_geracao_w
		from 	titulo_receber
		where 	nr_seq_protocolo = nr_seq_protocolo_p;
		exception
		when others then
			nr_titulo_w		:= null;
			nm_usuario_geracao_w	:= null;
			dt_geracao_w		:= null;
		end;

		if (nr_titulo_w IS NOT NULL AND nr_titulo_w::text <> '') and (nm_usuario_geracao_w IS NOT NULL AND nm_usuario_geracao_w::text <> '') and (dt_geracao_w IS NOT NULL AND dt_geracao_w::text <> '') then
			ds_observacao_w:= substr(wheb_mensagem_pck.get_texto(306381,'NR_TITULO=' || nr_titulo_w ||
						';NM_USUARIO_GERACAO=' || nm_usuario_geracao_w || ';DT_GERACAO=' || dt_geracao_w),1,255);
		end if;

		open C03;
		loop
		fetch C03 into
			nr_interno_conta_w,
			cd_convenio_w,
			cd_categoria_w,
			ie_tipo_convenio_w,
			cd_estabelecimento_w;
		EXIT WHEN NOT FOUND; /* apply on C03 */
			begin
			ie_encontrou_regra_w	:= 'N';

			open C01;
			loop
			fetch C01 into
				nr_seq_etapa_w,
				ie_ultima_conta_w,
				pr_prejuizo_permitido_w,
				nr_seq_motivo_dev_w,
				cd_setor_atend_etapa_w;
			EXIT WHEN NOT FOUND; /* apply on C01 */
				begin
				ie_encontrou_regra_w	:= 'S';

				if (ie_regra_restrita_etapa_w = 'N') and
					(((nr_interno_conta_w = nr_interno_conta_w2) and (coalesce(ie_ultima_conta_w, 'N') = 'S')) or (coalesce(ie_ultima_conta_w,'N') = 'N')) then
					CALL gerar_conta_etapa(nr_interno_conta_w, nm_usuario_p, nr_seq_etapa_w, nr_seq_motivo_dev_w,cd_setor_atend_etapa_w, ds_observacao_w);
				end if;
				end;
			end loop;
			close C01;

			if (ie_regra_restrita_etapa_w = 'S') and (ie_encontrou_regra_w = 'S') and
				(((nr_interno_conta_w = nr_interno_conta_w2) and (coalesce(ie_ultima_conta_w, 'N') = 'S')) or (coalesce(ie_ultima_conta_w,'N') = 'N')) then
				CALL gerar_conta_etapa(nr_interno_conta_w, nm_usuario_p, nr_seq_etapa_w, nr_seq_motivo_dev_w,cd_setor_atend_etapa_w, ds_observacao_w);
			end if;

			end;
		end loop;
		close C03;

	end if;

end if;

if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_etapa_alta_paciente ( nr_atendimento_p bigint, nr_seq_protocolo_p bigint, nm_usuario_p text, nr_seq_lote_protocolo_p bigint default 0) FROM PUBLIC;

