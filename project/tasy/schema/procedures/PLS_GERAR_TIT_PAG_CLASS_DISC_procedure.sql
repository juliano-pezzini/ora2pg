-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_tit_pag_class_disc ( nr_titulo_p titulo_pagar.nr_titulo%type, nm_usuario_p usuario.nm_usuario%type, ie_commit_p text ) AS $body$
DECLARE


dt_atual_w			timestamp := trunc(clock_timestamp());
nr_seq_classif_w		titulo_pagar_classif.nr_sequencia%type;
nr_seq_lote_disc_w		pls_lote_discussao.nr_sequencia%type;
nr_seq_lote_contest_w		pls_lote_contestacao.nr_sequencia%type;
cd_estabelecimento_w		estabelecimento.cd_estabelecimento%type;
cd_conta_financ_w		pls_conta_financ_regra.cd_conta_financ%type;
nr_seq_camara_w			pls_camara_compensacao.nr_sequencia%type;
ie_tipo_intercambio_w		pls_conta_financ_regra.ie_tipo_intercambio%type := 'T';
nr_seq_pls_fatura_w		pls_fatura.nr_sequencia%type;
nr_seq_ptu_fatura_w		ptu_fatura.nr_sequencia%type;
nr_seq_congenere_w		pls_congenere.nr_sequencia%type;
ie_tipo_congenere_w		pls_congenere.ie_tipo_congenere%type;
cd_unimed_origem_w		ptu_fatura.cd_unimed_origem%type;
vl_classif_w			titulo_pagar_classif.vl_titulo%type := 0;
vl_titulo_w			titulo_pagar.vl_titulo%type;

c01 CURSOR(	nr_seq_lote_disc_pc	pls_lote_discussao.nr_sequencia%type ) FOR
	SELECT	sum(coalesce(dp.vl_ndc,0)) 	vl_classif,
		dp.cd_conta_negado_cred	cd_conta_credito
	from	pls_discussao_proc 		dp,
		pls_contestacao_discussao	ds
	where	ds.nr_sequencia	= dp.nr_seq_discussao
	and	ds.nr_seq_lote	= nr_seq_lote_disc_pc
	and	(dp.cd_conta_negado_cred IS NOT NULL AND dp.cd_conta_negado_cred::text <> '')
	group by dp.cd_conta_negado_cred
	
union all

	SELECT	sum(coalesce(dm.vl_ndc,0)) vl_classif,
		dm.cd_conta_negado_cred cd_conta_credito
	from	pls_discussao_mat 		dm,
		pls_contestacao_discussao	ds
	where	ds.nr_sequencia	= dm.nr_seq_discussao
	and	ds.nr_seq_lote	= nr_seq_lote_disc_pc
	and	(dm.cd_conta_negado_cred IS NOT NULL AND dm.cd_conta_negado_cred::text <> '')
	group by dm.cd_conta_negado_cred;

BEGIN
if (nr_titulo_p IS NOT NULL AND nr_titulo_p::text <> '') then
	select	max(l.nr_sequencia),
		max(l.nr_seq_lote_contest),
		max(t.vl_titulo)
	into STRICT	nr_seq_lote_disc_w,
		nr_seq_lote_contest_w,
		vl_titulo_w
	from	pls_lote_discussao	l,
		titulo_pagar		t
	where	t.nr_titulo		= l.nr_titulo_pagar
	and	l.nr_titulo_pagar	= nr_titulo_p;

	if (coalesce(nr_seq_lote_disc_w::text, '') = '') then
		select	max(nr_sequencia),
			max(nr_seq_lote_contest)
		into STRICT	nr_seq_lote_disc_w,
			nr_seq_lote_contest_w
		from	pls_lote_discussao
		where	nr_titulo_pagar_ndr	= nr_titulo_p;
	end if;

	-- Obter dados do lote de contestação
	if (nr_seq_lote_contest_w IS NOT NULL AND nr_seq_lote_contest_w::text <> '') then
		select	max(cd_estabelecimento),
			max(nr_seq_pls_fatura),
			max(nr_seq_ptu_fatura)
		into STRICT	cd_estabelecimento_w,
			nr_seq_pls_fatura_w,
			nr_seq_ptu_fatura_w
		from	pls_lote_contestacao
		where	nr_sequencia	= nr_seq_lote_contest_w;
	end if;

	-- Se for contestação de OPS - Faturamento
	if (nr_seq_pls_fatura_w IS NOT NULL AND nr_seq_pls_fatura_w::text <> '') then
		select	max(nr_seq_congenere)
		into STRICT	nr_seq_congenere_w
		from	pls_fatura
		where	nr_sequencia	= nr_seq_pls_fatura_w;

	-- Se for contestação de OPS - Contas de Intercâmbio (A500)
	elsif (nr_seq_ptu_fatura_w IS NOT NULL AND nr_seq_ptu_fatura_w::text <> '') then
		select	max(p.cd_unimed_origem)
		into STRICT	cd_unimed_origem_w
		from	ptu_fatura	p
		where	p.nr_sequencia		= nr_seq_ptu_fatura_w;

		cd_unimed_origem_w := somente_numero(cd_unimed_origem_w);

		select	max(c.nr_sequencia)
		into STRICT	nr_seq_congenere_w
		from	pls_congenere	c
		where	c.cd_cooperativa_number	= cd_unimed_origem_w;
	end if;

	-- Obter dados da congenere
	if (nr_seq_congenere_w IS NOT NULL AND nr_seq_congenere_w::text <> '') then
		select	max(a.nr_seq_camara)
		into STRICT	nr_seq_camara_w
		from	pls_congenere_camara a
		where	a.nr_seq_congenere = nr_seq_congenere_w
		and	dt_atual_w between a.dt_inicio_vigencia_ref and a.dt_fim_vigencia_ref;

		select	max(ie_tipo_congenere)
		into STRICT	ie_tipo_congenere_w
		from	pls_congenere
		where	nr_sequencia = nr_seq_congenere_w;

		-- Obtém se o tipo do congenere é operadora (fundação)
		if (ie_tipo_congenere_w = 'OP') then
			ie_tipo_intercambio_w := 'F'; -- Fundação
		else
			ie_tipo_intercambio_w := pls_obter_tipo_intercambio( nr_seq_congenere_w, cd_estabelecimento_w); -- Nacional ou Estadual
		end if;
	end if;

	-- Obter conta financeira
	cd_conta_financ_w := pls_obter_conta_financ_regra(	'ICP', null, cd_estabelecimento_w, null, null, nr_seq_camara_w, null, null, null, null, null, null, null, null, ie_tipo_intercambio_w, null, null, cd_conta_financ_w);

	for r_c01_w in C01( nr_seq_lote_disc_w )  loop
		select	coalesce(max(nr_sequencia),0) + 1
		into STRICT	nr_seq_classif_w
		from	titulo_pagar_classif
		where	nr_titulo	= nr_titulo_p;

		insert into titulo_pagar_classif(nr_titulo,
			nr_sequencia,
			nm_usuario,
			dt_atualizacao,
			cd_conta_contabil,
			vl_original,
			vl_titulo,
			vl_desconto,
			nr_seq_conta_financ)
		values (nr_titulo_p,
			nr_seq_classif_w,
			nm_usuario_p,
			clock_timestamp(),
			r_c01_w.cd_conta_credito,
			0,
			r_c01_w.vl_classif,
			0,
			cd_conta_financ_w);

		vl_classif_w := vl_classif_w + r_c01_w.vl_classif;
	end loop;

	vl_titulo_w := vl_titulo_w - vl_classif_w;

	if (cd_conta_financ_w IS NOT NULL AND cd_conta_financ_w::text <> '') and (vl_titulo_w > 0) then

		select	coalesce(max(nr_sequencia),0) + 1
		into STRICT	nr_seq_classif_w
		from	titulo_pagar_classif
		where	nr_titulo	= nr_titulo_p;

		insert into titulo_pagar_classif(nr_titulo,
			nr_sequencia,
			nm_usuario,
			dt_atualizacao,
			cd_conta_contabil,
			vl_original,
			vl_titulo,
			vl_desconto,
			nr_seq_conta_financ)
		values (nr_titulo_p,
			nr_seq_classif_w,
			nm_usuario_p,
			clock_timestamp(),
			null,
			0,
			vl_titulo_w,
			0,
			cd_conta_financ_w);
	end if;


	if (coalesce(ie_commit_p,'N') = 'S') then
		commit;
	end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_tit_pag_class_disc ( nr_titulo_p titulo_pagar.nr_titulo%type, nm_usuario_p usuario.nm_usuario%type, ie_commit_p text ) FROM PUBLIC;

