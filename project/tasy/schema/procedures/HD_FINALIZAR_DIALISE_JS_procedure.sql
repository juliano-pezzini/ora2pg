-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE hd_finalizar_dialise_js ( nr_seq_dialise_p bigint, qt_pa_sist_pos_pe_p bigint, qt_pa_diast_pos_pe_p bigint, qt_pa_sist_pos_deit_p bigint, qt_pa_diast_pos_deit_p bigint, qt_peso_pos_p bigint, dt_fim_p timestamp, nr_seq_motivo_peso_pos_p bigint, nr_seq_motivo_pa_deitado_pos_p bigint, nr_seq_motivo_pa_pe_pos_p bigint, qt_freq_cardiaca_p bigint, nm_usuario_p text, nr_atendimento_p bigint, cd_setor_atendimento_p bigint, qt_temp_axilar_p bigint, ds_erro_p INOUT text ) AS $body$
DECLARE

 
ds_erro_w			varchar(255);	
ds_erro_ww			varchar(255);	
ds_retorno_w			varchar(255);
cd_local_estoque_w		bigint;
nr_seq_dialise_dialisador_w 	varchar(255);
nr_seq_dialisador_w 		varchar(255);	
ie_permite_retirar_dialis_w	varchar(1);
ie_possui_soluc_w		varchar(1);
nr_lista_concentrado_ret_w	varchar(255);
					

BEGIN 
ds_erro_w := null;
ds_erro_ww := null;
nr_seq_dialise_dialisador_w := hd_obter_dados_dialise(nr_seq_dialise_p,'DS');
nr_seq_dialisador_w := hd_obter_dados_dialise(nr_seq_dialise_p,'DA');
ie_permite_retirar_dialis_w := obter_param_usuario(7009, 206, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_permite_retirar_dialis_w);
 
if (ie_permite_retirar_dialis_w <> 'S') then 
	begin 
	select	substr(hd_obter_se_possui_solucao(nr_seq_dialise_p),1,1) 
	into STRICT	ie_possui_soluc_w 
	;
 
	if (ie_possui_soluc_w = 'N') then 
		CALL wheb_mensagem_pck.exibir_mensagem_abort(204262);
	end if;
	end;
end if;
 
SELECT * FROM hd_retirar_dialisador(nr_seq_dialise_dialisador_w, nr_seq_dialisador_w, clock_timestamp(), nm_usuario_p, '', ds_retorno_w, ds_erro_w) INTO STRICT ds_retorno_w, ds_erro_w;
 
if (ds_erro_w IS NOT NULL AND ds_erro_w::text <> '') then		 
	ds_erro_p := ds_erro_w;
end if;
 
SELECT * FROM HD_Finalizar_Dialise(nr_seq_dialise_p, qt_pa_sist_pos_pe_p, qt_pa_diast_pos_pe_p, qt_pa_sist_pos_deit_p, qt_pa_diast_pos_deit_p, qt_peso_pos_p, dt_fim_p, nr_seq_motivo_peso_pos_p, nr_seq_motivo_pa_deitado_pos_p, nr_seq_motivo_pa_pe_pos_p, nm_usuario_p, qt_freq_cardiaca_p, qt_temp_axilar_p, 0, 0, null, null, null, null, null, 'S', ds_erro_ww, nr_lista_concentrado_ret_w) INTO STRICT ds_erro_ww, nr_lista_concentrado_ret_w;
 
 
if (ds_erro_ww IS NOT NULL AND ds_erro_ww::text <> '') then	 
	CALL wheb_mensagem_pck.exibir_mensagem_abort(185045,'DS_TEXTO='||ds_erro_ww);
end if;
			 
select	cd_local_estoque 
into STRICT	cd_local_estoque_w 
from 	setor_atendimento 
where 	cd_setor_atendimento = cd_setor_atendimento_p;
 
if (nr_atendimento_p > 0) and (cd_local_estoque_w > 0) then 
	CALL Hd_executar_mat_concentrado(nr_atendimento_p, nr_seq_dialise_p, nm_usuario_p, cd_setor_atendimento_p, cd_local_estoque_w);
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE hd_finalizar_dialise_js ( nr_seq_dialise_p bigint, qt_pa_sist_pos_pe_p bigint, qt_pa_diast_pos_pe_p bigint, qt_pa_sist_pos_deit_p bigint, qt_pa_diast_pos_deit_p bigint, qt_peso_pos_p bigint, dt_fim_p timestamp, nr_seq_motivo_peso_pos_p bigint, nr_seq_motivo_pa_deitado_pos_p bigint, nr_seq_motivo_pa_pe_pos_p bigint, qt_freq_cardiaca_p bigint, nm_usuario_p text, nr_atendimento_p bigint, cd_setor_atendimento_p bigint, qt_temp_axilar_p bigint, ds_erro_p INOUT text ) FROM PUBLIC;

