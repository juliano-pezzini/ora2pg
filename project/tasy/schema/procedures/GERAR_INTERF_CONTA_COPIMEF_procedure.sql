-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_interf_conta_copimef (cd_estabelecimento_p bigint, cd_cgc_prestador_p text, dt_inicial_p timestamp, dt_final_p timestamp, nr_seq_protocolo_p bigint, cd_convenio_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_protocolo_w			bigint		:= 0;
nr_seq_envio_convenio_w			bigint		:= 0;
dt_mesano_referencia_w			timestamp;
dt_vencimento_w				timestamp;
cd_convenio_w				bigint		:= 0;
cd_cgc_hospital_w			varchar(100);
nm_hospital_w				varchar(100);
ds_convenio_w				varchar(255);
cd_cgc_convenio_w			varchar(100);
cd_interno_w				varchar(100);
cd_regional_w				varchar(100);
nr_sequencia_w				bigint		:= 0;
nr_interno_conta_w			bigint		:= 0;
nr_atendimento_w			bigint		:= 0;
ie_tipo_protocolo_w			bigint		:= 0;
ie_tipo_atendimento_w			bigint		:= 0;
ie_excluir_hon_med_w			varchar(100);
ie_excluir_hon_terc_w			varchar(100);
QT_ITENS_CONTA_W			bigint		:= 0;
nr_seq_registro_w			bigint		:= 0;
vl_material_w				double precision		:= 0;
nr_protocolo_w				varchar(40);
dt_inicio_protocolo_w			timestamp;
dt_fim_protocolo_w			timestamp;
nr_primeira_guia_w			varchar(100);
nr_ultima_guia_w			varchar(100);
qt_guia_w				bigint := 0;
ie_agrup_item_interf_w			varchar(100);
w_tot_trailler_w			bigint := 0;
qt_documento_w				bigint;
vl_procedimento_w			double precision;
nm_usuario_w				varchar(100);
nr_nota_inicial_w			bigint;
msg_w					varchar(255);

c01 CURSOR FOR
SELECT	/*+ index(a conta_paciente a) */ distinct a.nr_seq_protocolo
from	protocolo_convenio c,
	procedimento_paciente b,
	conta_paciente a
where	(a.dt_mesano_referencia IS NOT NULL AND a.dt_mesano_referencia::text <> '')
and	a.ie_status_acerto = 2
and	a.nr_seq_protocolo	= c.nr_seq_protocolo
and	c.ie_status_protocolo	= 2
and	a.dt_mesano_referencia		between dt_inicial_p and dt_final_p
and	a.cd_estabelecimento		= cd_estabelecimento_p
and	b.nr_interno_conta		= a.nr_interno_conta
and	((coalesce(nr_seq_protocolo_p, 0)	= 0) or (a.nr_seq_protocolo = nr_seq_protocolo_p))
and	((coalesce(cd_convenio_p, 0)	= 0) or (c.cd_convenio = cd_convenio_p))
and	coalesce(b.cd_motivo_exc_conta::text, '') = ''
and	b.cd_cgc_prestador		= cd_cgc_prestador_p;

C02 CURSOR FOR
SELECT	a.nr_interno_conta,
	a.nr_atendimento,
	b.ie_tipo_atendimento
from	conta_paciente a,
	atendimento_paciente b
where	a.nr_atendimento		= b.nr_atendimento
and 	a.nr_seq_protocolo	 	= nr_seq_protocolo_w
and	coalesce(a.ie_cancelamento::text, '') = ''
order	by 1;



BEGIN

open c01;
loop
fetch c01 into
	nr_seq_protocolo_w;
EXIT WHEN NOT FOUND; /* apply on c01 */

	/* Limpar tabelas transitórias */

	delete	from w_interf_conta_header
	where	nr_seq_protocolo	= nr_seq_protocolo_w;
	delete	from w_interf_conta_cab
	where	nr_seq_protocolo	= nr_seq_protocolo_w;
	delete	from w_interf_conta_autor
	where	nr_seq_protocolo	= nr_seq_protocolo_w;
	delete	from w_interf_conta_item
	where	nr_seq_protocolo	= nr_seq_protocolo_w;
	delete	from w_interf_conta_item_ipe
	where	nr_seq_protocolo	= nr_seq_protocolo_w;
	delete	from w_interf_conta_total
	where	nr_seq_protocolo	= nr_seq_protocolo_w;
	delete	from w_interf_conta_trailler
	where	nr_seq_protocolo	= nr_seq_protocolo_w;

	commit;

	delete from w_interf_conta_cab
	where nr_interno_conta in (	SELECT nr_interno_conta
					from conta_paciente
					where nr_seq_protocolo = nr_seq_protocolo_w);
	delete from w_interf_conta_autor
	where nr_interno_conta in (	SELECT nr_interno_conta
					from conta_paciente
					where nr_seq_protocolo = nr_seq_protocolo_w);
	delete from w_interf_conta_item
	where nr_interno_conta in (	SELECT nr_interno_conta
					from conta_paciente
					where nr_seq_protocolo = nr_seq_protocolo_w);
	delete from w_interf_conta_total
	where nr_interno_conta in (	SELECT nr_interno_conta
					from conta_paciente
					where nr_seq_protocolo = nr_seq_protocolo_w);
	delete from w_interf_conta_item_ipe
	where nr_interno_conta in (	SELECT nr_interno_conta
					from conta_paciente
					where nr_seq_protocolo = nr_seq_protocolo_w);
	commit;

end loop;
close c01;

open c01;
loop
fetch c01 into
	nr_seq_protocolo_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin

	/* Buscar sequence */

	select	nextval('w_interf_conta_header_seq')
	into STRICT	nr_sequencia_w
	;

	/* Dados do protocolo */

	select	a.nr_seq_protocolo,
	 	mod(a.nr_seq_envio_convenio, coalesce(nr_multiplo_envio,0)),
	 	a.dt_mesano_referencia,
	 	a.dt_vencimento,
	 	a.cd_convenio,
	 	a.ie_tipo_protocolo,
	 	a.nr_protocolo,
	 	a.dt_periodo_inicial,
	 	a.dt_periodo_final,
	 	coalesce(somente_numero(nr_seq_doc_convenio),0),
		coalesce(a.nm_usuario_envio,a.nm_usuario)
	into STRICT	nr_seq_protocolo_w,
	 	nr_seq_envio_convenio_w,
	 	dt_mesano_referencia_w,
	 	dt_vencimento_w,
	 	cd_convenio_w,
	 	ie_tipo_protocolo_w,
	 	nr_protocolo_w,
	 	dt_inicio_protocolo_w,
	 	dt_fim_protocolo_w,
		nr_nota_inicial_w,
		nm_usuario_w
	from	convenio b,
		protocolo_convenio a
	where	a.cd_convenio		= b.cd_convenio
	and	a.nr_seq_protocolo	= nr_seq_protocolo_w;


	/* Dados do estabelecimento */

	select		a.cd_cgc,
			Elimina_Acentuacao(b.ds_razao_social)
	into STRICT		cd_cgc_hospital_w,
			nm_hospital_w
	from		estabelecimento a,
			pessoa_juridica b
	where		a.cd_estabelecimento		= cd_estabelecimento_p
	and		b.cd_cgc				= a.cd_cgc;

	/* Dados do convenio */

	select		Elimina_Acentuacao(ds_convenio),
			cd_cgc,
			Obter_Valor_Conv_Estab(cd_convenio, cd_estabelecimento_P, 'CD_INTERNO'),
			Obter_Valor_Conv_Estab(cd_convenio, cd_estabelecimento_P, 'CD_REGIONAL'),
			ie_agrup_item_interf
	into STRICT		ds_convenio_w,
			cd_cgc_convenio_w,
			cd_interno_w,
			cd_regional_w,
			ie_agrup_item_interf_w
	from		convenio
	where		cd_convenio				= cd_convenio_w;


	/* Chamada especial do convênio IPE */

	if (ie_agrup_item_interf_w = 'E') then

		delete from w_interf_conta_item_ipe
		where nr_seq_protocolo	= nr_seq_protocolo_w;
		commit;

	end if;


	/* Gravar conta_header */

	msg_w		:= 'Insert no w_interf_conta_header';
	insert into w_interf_conta_header(
	 	nr_sequencia,
	 	cd_tipo_registro,
	 	nr_seq_registro,
	 	nr_seq_interface,
	 	cd_interno,
	 	cd_regional,
	 	nm_convenio,
	 	cd_cgc_convenio,
	 	nm_hospital,
	 	cd_cgc_hospital,
	 	nr_remessa,
	 	dt_remessa,
	 	dt_vencimento,
	 	nr_seq_protocolo,
	 	cd_convenio,
	 	ie_tipo_protocolo,
	 	nr_protocolo,
	 	dt_inicio_protocolo,
		dt_fim_protocolo)
	values (nr_sequencia_w,
		0,
		1,
		1,
		cd_interno_w,
		cd_regional_w,
		ds_convenio_w,
		cd_cgc_convenio_w,
		nm_hospital_w,
		cd_cgc_hospital_w,
		nr_seq_envio_convenio_w,
		dt_mesano_referencia_w,
		dt_vencimento_w,
		nr_seq_protocolo_w,
		cd_convenio_w,
		ie_tipo_protocolo_w,
		nr_protocolo_w,
		dt_inicio_protocolo_w,
		dt_fim_protocolo_w);


	commit;

	/* selecionar as contas do protocolo */

	open c02;
	loop
	fetch c02 into
		nr_interno_conta_w,
		nr_atendimento_w,
		ie_tipo_atendimento_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
     		begin
		begin
		/* selecionar regra de exclusao de honorários */

		/* IE_EXCLUIR_HON_MED exclui regra honorário direto do médico 'M' */

		/* IE_EXCLUIR_HON_TERC exclui regra honorário terceiros 'COOP' */

		select	coalesce(ie_excluir_hon_med,'N'),
			coalesce(ie_excluir_hon_terc,'N')
		into STRICT	ie_excluir_hon_med_w,
			ie_excluir_hon_terc_w
		from	param_interface
		where	cd_convenio	= cd_convenio_w
		and	coalesce(ie_tipo_atendimento,ie_tipo_atendimento_w)	= ie_tipo_atendimento_w
		and	coalesce(cd_estabelecimento,cd_estabelecimento_p)	= cd_estabelecimento_p;
		exception
			when others then
			begin
		 	ie_excluir_hon_med_w	:= 'N';
			ie_excluir_hon_terc_w	:= 'N';
			end;
		end;

		nr_sequencia_w := Gerar_Interf_Conta_Cab(	nr_seq_protocolo_w, nr_seq_envio_convenio_w, cd_convenio_w, nr_atendimento_w, nr_interno_conta_w, cd_cgc_hospital_w, cd_cgc_convenio_w, cd_interno_w, nr_sequencia_w);
		nr_seq_registro_w		:= nr_seq_registro_w + 1;
		update w_interf_conta_cab
		set nr_seq_registro	= nr_seq_registro_w
		where nr_sequencia	= nr_sequencia_w;

		CALL Gerar_Interf_Conta_Aut( nr_seq_protocolo_w,
						nr_seq_envio_convenio_w,
						cd_convenio_w,
						nr_atendimento_w,
						nr_interno_conta_w,
						cd_cgc_hospital_w,
						cd_cgc_convenio_w,
						cd_interno_w);

		CALL Gerar_Interf_Conta_Item(nr_seq_protocolo_w,
						nr_seq_envio_convenio_w,
						cd_convenio_w,
						nr_atendimento_w,
						nr_interno_conta_w,
						cd_cgc_hospital_w,
						cd_cgc_convenio_w,
						cd_interno_w,
		 	 			ie_excluir_hon_med_w,
			 			ie_excluir_hon_terc_w);

		/* Chamada especial do convênio IPE - Internados */

		if (ie_agrup_item_interf_w = 'E') and
			((nr_nota_inicial_w = 0) 	or (ie_tipo_protocolo_w = 1))	then
			CALL Gerar_Interf_Conta_Item_IPE(nr_seq_protocolo_w,
						nr_interno_conta_w);
		end if;


		CALL Gerar_Interf_Conta_Total(nr_seq_protocolo_w,
						nr_seq_envio_convenio_w,
						cd_convenio_w,
						nr_atendimento_w,
						nr_interno_conta_w,
						cd_cgc_hospital_w,
						cd_cgc_convenio_w,
						cd_interno_w,
		 	 			ie_excluir_hon_med_w,
			 			ie_excluir_hon_terc_w);


		/* Excluir contas sem item - excluidos pela regra honorários */

		begin
		qt_itens_conta_w	:= 0;
		Select	count(*)
		into STRICT		qt_itens_conta_w
		from		w_interf_conta_item
		where		nr_interno_conta	= nr_interno_conta_w;
		exception
				when others then
				qt_itens_conta_w := 0;
		end;
		if (qt_itens_conta_w = 0) then
			begin
			delete from w_interf_conta_cab
			where nr_interno_conta	= nr_interno_conta_w;
			delete from w_interf_conta_autor
			where nr_interno_conta	= nr_interno_conta_w;
			delete from w_interf_conta_item
			where nr_interno_conta	= nr_interno_conta_w;
			delete from w_interf_conta_total
			where nr_interno_conta	= nr_interno_conta_w;
			end;
		end if;
		commit;
		END;
	END LOOP;
	close C02;
	commit;

	/* Chamada especial do convênio IPE - Exames */

	if (ie_agrup_item_interf_w = 'E') and (nr_nota_inicial_w > 0) 	 and (ie_tipo_atendimento_w	= 7)	 then
		CALL Gerar_Interf_Item_Exames_IPE(nr_seq_protocolo_w);
	end if;
	/* Chamada especial do convênio IPE - PA */

	if (ie_agrup_item_interf_w = 'E') 	and (nr_nota_inicial_w > 0) 	 	and (ie_tipo_atendimento_w in (3,8))	then
		Gerar_Interf_Item_PA_IPE(nr_seq_protocolo_w);
	end if;
	commit;

	/* Tratar registro tipo TRAILLER */

	/* Buscar sequence */

	select nextval('w_interf_conta_trailler_seq')
	into STRICT	 nr_sequencia_w
	;

	select 	coalesce(sum(vl_material),0)
	into STRICT 	vl_material_w
	from 	material_atend_paciente b,
		conta_paciente a
	where 	a.nr_interno_conta	= b.nr_interno_conta
	and	a.nr_seq_protocolo	= nr_seq_protocolo_w
	and	CASE WHEN coalesce(b.NR_SEQ_PROC_PACOTE::text, '') = '' THEN b.NR_SEQUENCIA  ELSE b.NR_SEQ_PROC_PACOTE END  = b.NR_SEQUENCIA
	and	coalesce(a.ie_cancelamento::text, '') = '';

	begin
	select	coalesce(a.cd_autorizacao,'0')
	into STRICT	nr_primeira_guia_w
	from	w_interf_conta_autor a
	where	a.nr_seq_protocolo	= nr_seq_protocolo_w
	and	a.nr_interno_conta	=
		(SELECT min(x.nr_interno_conta) from w_interf_conta_autor x
			where x.nr_seq_protocolo = nr_seq_protocolo_w);
	exception
		when others then
		nr_primeira_guia_w := '0';
	end;

	begin
	select	coalesce(a.cd_autorizacao,'0')
	into STRICT	nr_ultima_guia_w
	from	w_interf_conta_autor a
	where	a.nr_seq_protocolo	= nr_seq_protocolo_w
	and	a.nr_interno_conta	=
		(SELECT max(x.nr_interno_conta) from w_interf_conta_autor x
		where	x.nr_seq_protocolo = nr_seq_protocolo_w);
	exception
		when others then
		nr_ultima_guia_w := '0';
	end;

	begin
	select	count(*)
	into STRICT	qt_guia_w
	from	w_interf_conta_autor a
	where	a.nr_seq_protocolo	= nr_seq_protocolo_w;
	exception
		when others then
		qt_guia_w := 0;
	end;

	select coalesce(sum(b.vl_procedimento),0)
	into STRICT	vl_procedimento_w
	from	 conta_paciente_honorario_v b
	where	 b.nr_seq_protocolo		= nr_seq_protocolo_w
	and	coalesce(b.ie_cancelamento::text, '') = ''
	and	 CASE WHEN coalesce(b.NR_SEQ_PROC_PACOTE::text, '') = '' THEN b.NR_SEQUENCIA  ELSE b.NR_SEQ_PROC_PACOTE END  = b.NR_SEQUENCIA
	and	 ((ie_excluir_hon_med_w		= 'N') 		 or (b.ie_responsavel_credito 	<> 'M')		 or (coalesce(b.ie_responsavel_credito::text, '') = ''))
	and	 ((ie_excluir_hon_terc_w	= 'N') 		 or (b.ie_responsavel_credito 	in ('H','RM','M')) or (coalesce(b.ie_responsavel_credito::text, '') = ''));

	select count(*)
	into STRICT	qt_documento_w
	from	w_interf_conta_cab
	where	nr_seq_protocolo	= nr_seq_protocolo_w;

	begin
	msg_w		:= 'Insert no w_interf_conta_trailler';
	insert into w_interf_conta_trailler(
	 		nr_sequencia,
 			cd_tipo_registro,
 			nr_seq_registro,
	 		nr_seq_interface,
 			nr_remessa,
 			qt_total_conta,
	 		vl_total_conta,
 			nr_seq_protocolo,
 			cd_convenio,
	 		cd_cgc_hospital,
 			cd_cgc_convenio,
 			cd_interno,
	 		nr_primeira_guia,
 			nr_ultima_guia,
 			qt_guia)
	values (
			nr_sequencia_w,
			9,
			1,
			1,
			nr_seq_envio_convenio_w,
			qt_documento_w,
			vl_material_w + vl_procedimento_w,
 			nr_seq_protocolo_w,
 			cd_convenio_w,
	 		cd_cgc_hospital_w,
 			cd_cgc_convenio_w,
 			substr(cd_interno_w,1,14),
	 		nr_primeira_guia_w,
 			nr_ultima_guia_w,
 			qt_guia_w);
	commit;
	exception
		when others then
			/*rai-se_application_error(-20011, msg_w || ' - ' || sqlerrm || chr(13) ||
			 			'cd_convenio_w = ' || cd_convenio_w || chr(13) ||
	 					'cd_cgc_hospital_w = ' || cd_cgc_hospital_w || chr(13) ||
			 			'cd_cgc_convenio_w = ' || cd_cgc_convenio_w || chr(13) ||
 						'cd_interno_w = ' || cd_interno_w || chr(13) ||
				 		'nr_primeira_guia_w = ' || nr_primeira_guia_w || chr(13) ||
 						'nr_ultima_guia_w = ' || nr_ultima_guia_w || chr(13) ||
			 			'qt_guia_w = ' || qt_guia_w);*/
						null;
	end;

	/* Chamada especial do convênio IPE - Resumo das contas */

	if (ie_agrup_item_interf_w = 'E') then
		CALL Atualiza_Resumo_Conta_IPE(nr_seq_protocolo_w,nm_usuario_w);
	end if;

	exception
		when others then
			--rai-se_application_error(-20011, sqlerrm);
			null;
	end;

end loop;
close c01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_interf_conta_copimef (cd_estabelecimento_p bigint, cd_cgc_prestador_p text, dt_inicial_p timestamp, dt_final_p timestamp, nr_seq_protocolo_p bigint, cd_convenio_p bigint, nm_usuario_p text) FROM PUBLIC;

