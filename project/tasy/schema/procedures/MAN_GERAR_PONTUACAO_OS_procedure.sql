-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE man_gerar_pontuacao_os ( qt_os_dia_p bigint, nm_usuario_p text, nm_usuario_analista_p text, ie_prever_p text, ie_somente_nao_prev_p text default 'N') is c01 CURSOR FOR SELECT a.ie_classificacao, nvl(a.ie_prioridade_cliente,a.ie_prioridade) ie_prioridade DEFAULT NULL, nvl(a.nr_seq_severidade,a.nr_seq_severidade_wheb) nr_seq_severidade DEFAULT NULL, substr(nvl(man_obter_curva_abc(a.nr_seq_cliente,c.nr_seq_gerencia) DEFAULT NULL,'C') DEFAULT NULL,1 DEFAULT NULL,5) ds_curva_abc DEFAULT NULL, a.nr_seq_cliente DEFAULT NULL, a.nr_sequencia DEFAULT NULL, a.dt_ordem_servico DEFAULT NULL, c.nm_usuario_lider DEFAULT NULL, c.nr_seq_gerencia from man_ordem_servico a DEFAULT NULL, man_estagio_processo b DEFAULT NULL, grupo_desenvolvimento c where a.nr_seq_estagio = b.nr_sequencia and a.nr_seq_grupo_des = c.nr_sequencia(+) and (b.ie_desenv = 'S' or b.ie_tecnologia = 'S') and exists( select 1 from man_ordem_servico_exec x where x.nr_seq_ordem = a.nr_sequencia and x.nm_usuario_exec = nm_usuario_analista_p and x.dt_fim_execucao is null) and not exists( select 1 from proj_projeto x where x.nr_seq_ordem_serv = a.nr_sequencia) and a.nr_seq_proj_cron_etapa is null and ( (c.nr_seq_gerencia <> 60) or ( (a.dt_externa_acordo is null) and not exists( select 1 from desenv_acordo_os x where x.nr_seq_ordem_servico = a.nr_sequencia and nvl(ie_status_acordo,'X') <> 'R')) DEFAULT NULL) RETURNS bigint AS $body$
DECLARE

		
	qt_retorno_w	bigint	:= 0;
	
BEGIN

	select	count(*)
	into STRICT	qt_retorno_w
	from	man_ordem_ativ_prev a,
		man_ordem_servico b,
		man_estagio_processo c
	where	a.nr_seq_ordem_serv = b.nr_sequencia
	and	a.nm_usuario_prev	= nm_usuario_analista_p
	and	a.dt_prevista	between trunc(dt_referencia_p) and fim_dia(trunc(dt_referencia_p))
	and	b.nr_seq_estagio =  c.nr_sequencia
	and 	c.ie_desenv = 'S';

	return	qt_retorno_w;

	end;

begin
if (ie_prever_p = 'N') then
	delete	FROM w_man_score_ordem
	where	nm_usuario_analista = nm_usuario_analista_p;

	open c01;
	loop
	fetch c01 into
		c01_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		inserir_w	:= true;

		if (ie_somente_nao_prev_p	= 'S') then
			select	count(*)
			into STRICT	qt_reg_w
			from	man_ordem_ativ_prev a
			where	a.nr_seq_ordem_serv = c01_w.nr_sequencia
			and	a.nm_usuario_prev	= nm_usuario_analista_p
			and	a.dt_prevista >= trunc(clock_timestamp());
			
			inserir_w	:= (qt_reg_w = 0);
		end if;

		qt_pontuacao_w	:= 0;
		qt_dias_os_w	:= 0;
		
		


		if (c01_w.ie_prioridade = 'E') then
			qt_pontuacao_w	:= qt_pontuacao_w + 6;
		elsif (c01_w.ie_prioridade = 'U') then
			qt_pontuacao_w	:= qt_pontuacao_w + 4;
		elsif (c01_w.ie_prioridade = 'A') then
			qt_pontuacao_w	:= qt_pontuacao_w + 3;
		elsif (c01_w.ie_prioridade = 'M') then
			qt_pontuacao_w	:= qt_pontuacao_w + 2;
		else
			qt_pontuacao_w	:= qt_pontuacao_w + 1;
		end if;

		if (c01_w.ie_classificacao = 'E') then -- erro
			if (c01_w.nr_seq_severidade = 1) then
				qt_pontuacao_w	:= qt_pontuacao_w + 30;
			elsif (c01_w.nr_seq_severidade = 2) then
				qt_pontuacao_w	:= qt_pontuacao_w + 25;
			elsif (c01_w.nr_seq_severidade = 3) then
				qt_pontuacao_w	:= qt_pontuacao_w + 20;
			elsif (c01_w.nr_seq_severidade = 4) then
				qt_pontuacao_w	:= qt_pontuacao_w + 15;
			else
				qt_pontuacao_w	:= qt_pontuacao_w + 10;
			end if;
		elsif (c01_w.ie_classificacao = 'D') then -- duvida
			qt_pontuacao_w	:= qt_pontuacao_w + 2;
		end if;
		
		
		if (c01_w.ds_curva_abc = 'S') then
			qt_pontuacao_w	:= qt_pontuacao_w + 15;
		elsif (c01_w.ds_curva_abc = 'A') then
			qt_pontuacao_w	:= qt_pontuacao_w + 10;
		elsif (c01_w.ds_curva_abc = 'B') then
			qt_pontuacao_w	:= qt_pontuacao_w + 7;
		elsif (c01_w.ds_curva_abc = 'C') then
			qt_pontuacao_w	:= qt_pontuacao_w + 4;
		end if;

		qt_dias_os_w	:= trunc(clock_timestamp() - c01_w.dt_ordem_servico);

		if (qt_dias_os_w	> 90) then
			qt_pontuacao_w	:= qt_pontuacao_w + 5;
		elsif (qt_dias_os_w	> 60) then
			qt_pontuacao_w	:= qt_pontuacao_w + 4;
		elsif (qt_dias_os_w	> 30) then
			qt_pontuacao_w	:= qt_pontuacao_w + 2;
		end if;

		
		
		select	max(qt_ponto_adicional)
		into STRICT	qt_ponto_adicional_w
		from	gerencia_s_cliente a
		where	a.nr_seq_cliente	= c01_w.nr_seq_cliente
		and	((a.nr_seq_gerencia	= c01_w.nr_seq_gerencia) or (coalesce(a.nr_seq_gerencia::text, '') = ''))
		and	clock_timestamp() between dt_inicial and dt_final + 86399/86400;
		
		if (qt_ponto_adicional_w IS NOT NULL AND qt_ponto_adicional_w::text <> '') then
			qt_pontuacao_w	:=  qt_pontuacao_w + qt_ponto_adicional_w;
		end if;
		
		select max(IE_TIPO_ACORDO)
		into STRICT	IE_TIPO_ACORDO_w
		from	desenv_acordo_os
		where	nr_seq_ordem_servico = c01_w.nr_sequencia;

		if (IE_TIPO_ACORDO_w	= 4) then --Obrig.Legal
			qt_pontuacao_w	:= qt_pontuacao_w + 35;
		elsif (IE_TIPO_ACORDO_w	= 2) then --Virada
			qt_pontuacao_w	:= qt_pontuacao_w + 30;
		elsif (IE_TIPO_ACORDO_w	= 3) then --Receita
			qt_pontuacao_w	:= qt_pontuacao_w + 25;
		elsif (IE_TIPO_ACORDO_w	= 1) then --Priorizacao
			qt_pontuacao_w	:= qt_pontuacao_w + 20;
		end if;
			
		if (inserir_w) then
			insert into w_man_score_ordem(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_ordem_servico,
				dt_ordem_servico,
				ie_curva_abc,
				qt_pontuacao,
				nm_usuario_analista,
				ie_classificacao,
				nr_seq_severidade,
				ie_prioridade)
			values (	nextval('w_man_score_ordem_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				c01_w.nr_sequencia,
				c01_w.dt_ordem_servico,
				c01_w.ds_curva_abc,
				qt_pontuacao_w,
				nm_usuario_analista_p,
				c01_w.ie_classificacao,
				c01_w.nr_seq_severidade,
				c01_w.ie_prioridade);
		end if;
		end;
	end loop;
	close c01;

	commit;
end if;

open c02;
loop
fetch c02 into
	c02_w;
EXIT WHEN NOT FOUND; /* apply on c02 */
	begin

	if (ie_prever_p = 'S')  then
		delete	FROM man_ordem_ativ_prev a
		where	a.nr_seq_ordem_serv = c02_w.nr_seq_ordem_servico
		and	a.nm_usuario_prev = nm_usuario_analista_p
		and	not exists (	SELECT	1
				from	man_ordem_serv_ativ x
				where	x.nr_seq_ativ_prev = a.nr_sequencia);
		commit;
	end if;

	if (ie_somente_nao_prev_p = 'N') then
		if (qt_os_dia_w	>= qt_os_dia_p) then
			qt_os_dia_w	:= 0;
			dt_previsao_w	:= dt_previsao_w+1;
		end if;

		qt_os_dia_w	:= qt_os_dia_w + 1;
	else
		qt_os_dia_w	:= qt_os_dia_w + 1;
		
		while(qt_os_dia_w > qt_os_dia_p)  loop
			begin
			dt_previsao_w	:= obter_proximo_dia_util(1,dt_previsao_w+1);
			qt_os_dia_w	:= obterqtosprevdia(dt_previsao_w)+1;
			end;
		end loop;		
	end if;

	dt_previsao_w	:= obter_proximo_dia_util(1,dt_previsao_w);

	update	w_man_score_ordem
	set	dt_previsao = dt_previsao_w
	where	nr_sequencia = c02_w.nr_sequencia;

	if (ie_prever_p	=  'S') then
		insert into man_ordem_ativ_prev(	
			nr_sequencia,
			nr_seq_ordem_serv,
			dt_atualizacao,
			nm_usuario,
			nm_usuario_prev,
			nr_seq_ativ_exec,
			dt_prevista,
			ie_prioridade_desen,
			qt_min_prev)
		values (	nextval('man_ordem_ativ_prev_seq'),
			c02_w.nr_seq_ordem_servico,
			clock_timestamp(),
			nm_usuario_p,
			nm_usuario_analista_p,
			28,
			dt_previsao_w,
			1,
			120);

		delete
		from	man_ordem_ativ_prev moap
		where	moap.nr_seq_ordem_serv = c02_w.nr_seq_ordem_servico
		and	moap.nm_usuario_prev = nm_usuario_analista_p
		and	coalesce(moap.dt_prevista::text, '') = ''
		and	not exists (
				SELECT	1
				from	man_ordem_serv_ativ mosa
				where	mosa.nr_seq_ativ_prev = moap.nr_sequencia
				);
		
		CALL man_gerar_previsao_dia(dt_previsao_w, nm_usuario_analista_p);
	end if;
	end;
end loop;
close c02;

commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE man_gerar_pontuacao_os ( qt_os_dia_p bigint, nm_usuario_p text, nm_usuario_analista_p text, ie_prever_p text, ie_somente_nao_prev_p text default 'N') is c01 CURSOR FOR SELECT a.ie_classificacao, nvl(a.ie_prioridade_cliente,a.ie_prioridade) ie_prioridade DEFAULT NULL, nvl(a.nr_seq_severidade,a.nr_seq_severidade_wheb) nr_seq_severidade DEFAULT NULL, substr(nvl(man_obter_curva_abc(a.nr_seq_cliente,c.nr_seq_gerencia) DEFAULT NULL,'C') DEFAULT NULL,1 DEFAULT NULL,5) ds_curva_abc DEFAULT NULL, a.nr_seq_cliente DEFAULT NULL, a.nr_sequencia DEFAULT NULL, a.dt_ordem_servico DEFAULT NULL, c.nm_usuario_lider DEFAULT NULL, c.nr_seq_gerencia from man_ordem_servico a DEFAULT NULL, man_estagio_processo b DEFAULT NULL, grupo_desenvolvimento c where a.nr_seq_estagio = b.nr_sequencia and a.nr_seq_grupo_des = c.nr_sequencia(+) and (b.ie_desenv = 'S' or b.ie_tecnologia = 'S') and exists( select 1 from man_ordem_servico_exec x where x.nr_seq_ordem = a.nr_sequencia and x.nm_usuario_exec = nm_usuario_analista_p and x.dt_fim_execucao is null) and not exists( select 1 from proj_projeto x where x.nr_seq_ordem_serv = a.nr_sequencia) and a.nr_seq_proj_cron_etapa is null and ( (c.nr_seq_gerencia <> 60) or ( (a.dt_externa_acordo is null) and not exists( select 1 from desenv_acordo_os x where x.nr_seq_ordem_servico = a.nr_sequencia and nvl(ie_status_acordo,'X') <> 'R')) DEFAULT NULL) FROM PUBLIC;

