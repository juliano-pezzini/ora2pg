-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_copia_param_prest_lista ( nr_seq_pres_origem_p bigint, nr_seq_pres_destino_p bigint, ds_lista_tabela_p text, ie_excluir_p text, nm_usuario_p text, ds_erro_p INOUT text, qt_copiadas_p INOUT bigint, qt_com_erro_p INOUT bigint) AS $body$
DECLARE

 
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
Finalidade: Copiar parâmetros do prestador 
------------------------------------------------------------------------------------------------------------------- 
Locais de chamada direta: 
[ ] Objetos do dicionário [ X ] Tasy (Delphi/Java) [ ] Portal [ ] Relatórios [ ] Outros: 
 ------------------------------------------------------------------------------------------------------------------ 
Pontos de atenção: 
------------------------------------------------------------------------------------------------------------------- 
Referências: 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
 
 
lista_tabelas_w		varchar(255);
nm_tabela_w		varchar(50);
tam_lista_w		bigint;
ie_pos_virgula_w	smallint;
ie_contador_w		smallint;
ie_tabela_w		smallint;
	

BEGIN 
if (nr_seq_pres_origem_p IS NOT NULL AND nr_seq_pres_origem_p::text <> '') and (nr_seq_pres_destino_p IS NOT NULL AND nr_seq_pres_destino_p::text <> '') and (ds_lista_tabela_p IS NOT NULL AND ds_lista_tabela_p::text <> '') and (ie_excluir_p IS NOT NULL AND ie_excluir_p::text <> '') and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') then 
	begin 
	lista_tabelas_w	:= ds_lista_tabela_p;
	qt_copiadas_p	:= 0;
	qt_com_erro_p	:= 0;
	ie_contador_w	:= 0;
	 
	while(lista_tabelas_w IS NOT NULL AND lista_tabelas_w::text <> '') and (ie_contador_w < 200)loop 
		begin 
		tam_lista_w		:= length(lista_tabelas_w);
		ie_pos_virgula_w	:= position(',' in lista_tabelas_w);
		 
		if (ie_pos_virgula_w <> 0 ) then 
			begin 
			ie_tabela_w	:= (substr(lista_tabelas_w, 1 , (ie_pos_virgula_w - 1)))::numeric;
			lista_tabelas_w	:= substr(lista_tabelas_w, (ie_pos_virgula_w + 1), tam_lista_w);
			 
			if (ie_tabela_w =	0) then 
				begin 
				nm_tabela_w	:= 'PLS_PRESTADOR_PROC';
				end;
			elsif (ie_tabela_w =	1) then 
				begin 
				nm_tabela_w	:= 'PLS_REGRA_PRECO_PROC';
				end;
			elsif (ie_tabela_w =	2) then 
				begin 
				nm_tabela_w	:= 'PLS_REGRA_PRECO_MAT';
				end;
			elsif (ie_tabela_w =	3) then 
				begin 
				nm_tabela_w	:= 'PLS_REGRA_PRECO_SERVICO';
				end;
			elsif (ie_tabela_w =	4) then 
				begin 
				nm_tabela_w	:= 'PLS_PRESTADOR_AREA';
				end;
			elsif (ie_tabela_w =	5) then 
				begin 
				nm_tabela_w	:= 'PLS_PRESTADOR_PLANO';
				end;
			elsif (ie_tabela_w =	6) then 
				begin 
				nm_tabela_w	:= 'PLS_PRESTADOR_MEDICO';
				end;
			elsif (ie_tabela_w =	7) then 
				begin 
				nm_tabela_w	:= 'PLS_PRESTADOR_TRIBUTO';
				end;
			elsif (ie_tabela_w =	8) then 
				begin 
				nm_tabela_w	:= 'PLS_PRESTADOR_MED_ESPEC';
				end;
			elsif (ie_tabela_w =	9) then 
				begin 
				nm_tabela_w	:= 'PLS_PACOTE';
				end;
			elsif (ie_tabela_w =	10) then 
				begin 
				nm_tabela_w	:= 'PLS_PRESTADOR_PAGTO';
				end;
			elsif (ie_tabela_w =	11) then 
				begin 
				nm_tabela_w	:= 'PLS_PRESTADOR_GRUPO_SERV';
				end;
			elsif (ie_tabela_w =	12) then 
				begin 
				nm_tabela_w	:= 'PLS_PRESTADOR_REDE_REF';
				end;
			elsif (ie_tabela_w =	13) then 
				begin 
				nm_tabela_w	:= 'PLS_PRESTADOR_TIPO';
				end;
			end if;
			 
			begin 
			CALL pls_copia_parametro_prestador(	nr_seq_pres_origem_p, 
							nr_seq_pres_destino_p, 
							nm_tabela_w, 
							ie_excluir_p, 
							nm_usuario_p);
				 
			exception 
			when others then 
				begin 
				qt_com_erro_p	:= qt_com_erro_p + 1;
				ds_erro_p	:= nm_tabela_w;
				end;
			end;	
			 
			if (ds_erro_p IS NOT NULL AND ds_erro_p::text <> '') then 
				begin 
				qt_copiadas_p	:= 0;
				end;
			elsif (coalesce(ds_erro_p::text, '') = '') then 
				begin 
				qt_copiadas_p	:= coalesce(qt_copiadas_p, 0) + 1;	
				end;
			end if; 					
			end;
		end if;
		 
		ie_contador_w	:= ie_contador_w + 1;
		end;
	end loop;
	end;
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_copia_param_prest_lista ( nr_seq_pres_origem_p bigint, nr_seq_pres_destino_p bigint, ds_lista_tabela_p text, ie_excluir_p text, nm_usuario_p text, ds_erro_p INOUT text, qt_copiadas_p INOUT bigint, qt_com_erro_p INOUT bigint) FROM PUBLIC;

