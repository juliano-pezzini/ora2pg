-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_valor_segurado ( nr_seq_contrato_p bigint, nr_seq_segurado_p bigint, ie_opcao_p text, cd_estabelecimento_p bigint, nm_usuario_p text, ie_atualizar_desconto_p text, dt_envio_sib_p timestamp, ie_permite_tab_dif_p text, ie_consiste_tab_contr_p text, ie_gerar_cartao_p text, ie_commit_p text) AS $body$
DECLARE


/*	ie_opcao_p
	S - Liberacao do benf. ao liberar o sub - estipulante
	C - Liberacao de todos o benf. do contrato
	L - Liberacao beneficiario
	A - Alteracao da tabela de preco do beneficiario
	P - Alteracao do produto do beneficiario
	T - Calculo por alteracao de titularidade
	D - Alteracao do produto adaptado 
*/
dt_migracao_w			timestamp;
dt_contratacao_w		timestamp;
dt_liberacao_titular_w		timestamp;
dt_idade_w			timestamp;
dt_contrato_w			timestamp;
dt_validade_w			timestamp;
dt_liberacao_w			timestamp;
dt_inicio_plano_w		timestamp;
qt_idade_w			bigint;
qt_dias_validade_w		integer;
nr_seq_segurado_w		bigint;
nr_seq_plano_w			bigint;
nr_seq_tabela_w			bigint;
nr_seq_pagador_w		bigint;
nr_seq_vendedor_pf_w		bigint;
nr_seq_vendedor_canal_w		bigint;
nr_seq_contrato_w		bigint;
nr_seq_titular_w		bigint;
nr_seq_carteira_w		bigint;
nr_seq_emissor_w		bigint;
nr_contrato_w			bigint;
nr_seq_segurado_ant_w		bigint;
qt_registros_w			bigint	:= 0;
ie_preco_w			varchar(2);
ie_tipo_contratacao_w		varchar(3);
cd_pessoa_fisica_w		varchar(10);
cd_usuario_plano_w		varchar(30);
nm_segurado_w			varchar(255);
ds_observacao_w			varchar(255)	:= '';
nr_seq_parentesco_w		bigint;
dt_rescisao_w			timestamp;
nr_seq_inclusao_benef_w		bigint;
nr_seq_subestipulante_w		bigint;
dt_rescisao_sub_estipulante_w	timestamp;
ie_acao_contrato_w		varchar(2)	:= 'L';
ie_consistir_sib_w		varchar(1);
dt_val_cart_ant_w		timestamp;
nr_seq_motivo_inclusao_w	bigint;
ie_motivo_inclusao_w		varchar(1);
ie_importacao_base_w		varchar(1);
dt_validade_cart_parmetros_w	varchar(1);
ie_gerar_validade_cartao_w	varchar(1);
ie_abrangencia_w		varchar(3);
nr_seq_regra_empresa_w		bigint;
cd_empresa_w			bigint;
qt_dependete_w			bigint;
ie_permite_matricula_dif_w	varchar(2);
cd_matricula_estipulante_w	varchar(30);
cd_matricula_titular_w		varchar(30);
ie_titular_familia_w		varchar(1);
nr_seq_seg_titular_w		bigint;
cd_matricula_familia_w		bigint;
nm_segurado_titular_w		varchar(255);
ie_dt_adesao_w			varchar(10);
dt_contratacao_titular_w	timestamp;
nr_seg_vin_tabela_w		bigint;
nr_seq_tabela_origem_w		bigint;
ie_pcmso_w			varchar(10);
ie_benef_limite_depen_w		varchar(10);
ie_data_inic_vig_cart_w		varchar(10);
dt_inicio_vig_cart_w		timestamp;
dt_limite_dependencia_w		timestamp;
nr_segurado_tabela_w		bigint;
ie_reajuste_w			varchar(1);
nr_seq_pessoa_proposta_w	bigint;
ds_erro_w			varchar(255);
dt_nascimento_w			timestamp;
ie_alteracao_carteira_w		varchar(1);
dt_rescisao_titular_w		timestamp;
dt_limite_utilizacao_tit_w	timestamp;
nr_seq_motivo_can_tit_w		bigint;
ie_situacao_trabalhista_tit_w	varchar(10);
ie_liberar_benef_w		varchar(10);
ie_alterar_data_resc_benef_w	varchar(10);
dt_base_carteira_w		timestamp;
ie_acao_contrato_aux_w		varchar(2);
dt_reajuste_w			timestamp;
ie_produto_diferente_w		varchar(1);
qt_dias_w			bigint;
qt_benef_proposta_pendente_w	bigint;
dt_casamento_w			pessoa_fisica.dt_emissao_cert_casamento%type;
ie_titularidade_w		pls_segurado.ie_titularidade%type;
ie_grau_parentesco_benef_w	grau_parentesco.ie_grau_parentesco%type;
ie_permite_incl_dep_sit_trab_w	pls_parametros.ie_permite_incl_dep_sit_trab%type;
nr_protocolo_ans_w		pls_plano.nr_protocolo_ans%type;
ie_permite_lib_benef_plano_w	varchar(1);
nr_contrato_mesmo_plano_w	pls_contrato.nr_contrato%type;
qt_cons_dias_incl_cong_filho_w	pls_parametros.qt_cons_dias_incl_cong_filho%type;
ie_duplicar_tabela_comerc_w	varchar(1);
nr_seq_tabela_atual_w		pls_tabela_preco.nr_sequencia%type;
qt_tabela_contrato_w		integer;
qt_registro_w			integer;
ie_acao_w			pls_segurado_preco.cd_motivo_reajuste%type;
ie_consistir_matricula_est_w	varchar(1);
dt_reajuste_contrato_w		timestamp;
nr_mes_reajuste_contrato_w	pls_contrato.nr_mes_reajuste%type;
dt_reajuste_benef_w		pls_segurado.dt_reajuste%type;
ie_consistir_titularidade_w	varchar(1);
nr_proposta_adesao_w		pls_proposta_adesao.nr_sequencia%type;
nr_seq_processo_reaj_w		pls_processo_judicial_reaj.nr_sequencia%type;
nr_seq_nova_tabela_w		pls_tabela_preco.nr_sequencia%type;
nr_seq_titular_ww		pls_segurado.nr_seq_titular%type;
dt_recebimento_contrato_w	pls_contrato.dt_recebimento%type;
dt_recebimento_w		pls_segurado.dt_recebimento%type;
ie_exige_data_recebimento_w	varchar(1);
ie_titular_pagador_w		varchar(1);
nr_seq_titular_pagador_w	bigint;
cd_usuario_plano_ww		pls_segurado_carteira.cd_usuario_plano%type;
ie_validar_area_atuacao_prod_w	varchar(1);
cd_municipio_ibge_w		compl_pessoa_fisica.cd_municipio_ibge%type;
ie_permite_inc_fora_atuacao_w	pls_regra_benef_contrato.ie_permite_inc_fora_atuacao%type;
ie_cartao_definitivo_w		pls_param_proposta_online.ie_cartao_definitivo%type;
ie_status_cartao_w		pls_segurado_carteira.ie_situacao%type;
nr_seq_prop_benef_online_w	pls_proposta_benef_online.nr_sequencia%type;
qt_titular_ativo_w 		bigint;
ie_tipo_pessoa_contrato_w	varchar(2);
nr_contrato_ww			pls_contrato.nr_contrato%type;
ds_erro_prod_dif_w		varchar(4000);
ie_validar_pagador_sit_trab_w	varchar(1);
cd_pf_pagador_trab_w		pessoa_fisica.cd_pessoa_fisica%type;
cd_cgc_estipulante_w		pessoa_juridica.cd_cgc%type;

c01 CURSOR FOR
	SELECT	a.nr_sequencia,
		b.cd_pessoa_fisica,
		a.nr_seq_plano,
		a.nr_seq_tabela,
		a.dt_contratacao,
		a.nr_seq_pagador,
		a.nr_seq_vendedor_pf,
		a.nr_seq_vendedor_canal,
		a.nr_seq_titular,
		a.nr_seq_contrato,
		a.dt_migracao,
		a.nr_seq_segurado_ant,
		b.nm_pessoa_fisica,
		a.nr_seq_parentesco,
		a.dt_rescisao,
		a.nr_seq_subestipulante,
		coalesce(a.dt_migracao,a.dt_rescisao),
		a.ie_importacao_base,
		a.cd_matricula_estipulante,
		a.cd_matricula_familia,
		a.nr_seq_tabela_origem,
		a.nr_seq_pessoa_proposta,
		b.dt_nascimento,
		ie_acao_contrato,
		a.ie_titularidade,
		b.dt_emissao_cert_casamento,
		a.dt_reajuste,
		a.nr_proposta_adesao,
		coalesce(a.nr_seq_titular, a.nr_sequencia),
		a.dt_recebimento,
		a.nr_seq_prop_benef_online
	from	pessoa_fisica	b,
		pls_segurado	a
	where	b.cd_pessoa_fisica	= a.cd_pessoa_fisica
	and	((a.nr_seq_contrato	= coalesce(nr_seq_contrato_p,0))
	or (a.nr_sequencia		= coalesce(nr_seq_segurado_p,0)));

c02 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_carteira_controle_iden
	where	nr_seq_plano	= nr_seq_plano_w
	and	ie_situacao	= 'A'
	and	ie_tipo_regra	= 'E'
	and	coalesce(ie_abrangencia,coalesce(ie_abrangencia_w,'0'))	= coalesce(ie_abrangencia_w,'0')
	and	cd_estabelecimento	= cd_estabelecimento_p
	and	((ie_tipo_contrato = 'O') or (coalesce(ie_tipo_contrato::text, '') = ''))
	and	((coalesce(ie_tipo_contratacao::text, '') = '') or (ie_tipo_contratacao = ie_tipo_contratacao_w))
	and	((coalesce(ie_tipo_pessoa,'A') = ie_tipo_pessoa_contrato_w) or (coalesce(ie_tipo_pessoa,'A') = 'A'))
	order by
		coalesce(ie_abrangencia,coalesce(ie_abrangencia_w,'0')),
		ie_tipo_contrato,
		ie_tipo_contratacao,
		coalesce(ie_tipo_pessoa,'A');
	
C04 CURSOR FOR
	SELECT	nr_sequencia nr_seq_segurado_sca
	from	pls_segurado
	where	nr_seq_contrato	= nr_seq_contrato_w
	and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '');

C05 CURSOR(	nr_seq_segurado_sca_pc	pls_segurado.nr_sequencia%type) FOR
	SELECT	a.nr_sequencia nr_seq_sca_vinculo
	from	pls_sca_vinculo a,
		pls_tabela_preco b
	where	a.nr_seq_tabela = b.nr_sequencia
	and	coalesce(b.ie_preco_vidas_contrato,'N') = 'S'
	and	a.nr_seq_segurado = nr_seq_segurado_sca_pc;

BEGIN

ie_consistir_sib_w		:= coalesce(obter_valor_param_usuario(1202, 24, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p), 'N');
ie_motivo_inclusao_w		:= coalesce(obter_valor_param_usuario(1202, 46, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p),'S');
ie_produto_diferente_w		:= coalesce(obter_valor_param_usuario(1202, 65, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p),'S');
ie_titular_familia_w		:= coalesce(obter_valor_param_usuario(1202, 82, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p),'N');
ie_dt_adesao_w			:= coalesce(obter_valor_param_usuario(1202, 88, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p),'S');
ie_benef_limite_depen_w		:= coalesce(obter_valor_param_usuario(1202, 105, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p),'N');
ie_data_inic_vig_cart_w		:= coalesce(obter_valor_param_usuario(1202, 111, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p),'S');
ie_permite_lib_benef_plano_w	:= coalesce(obter_valor_param_usuario(1202, 143, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p),'S');
ie_duplicar_tabela_comerc_w	:= coalesce(obter_valor_param_usuario(1202, 152, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p),'N');
ie_consistir_titularidade_w	:= coalesce(obter_valor_param_usuario(1202, 160, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p),'N');
ie_consistir_matricula_est_w	:= coalesce(obter_valor_param_usuario(1202, 162, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p),'N');
ie_exige_data_recebimento_w	:= coalesce(obter_valor_param_usuario(1202, 164, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p),'N');
ie_titular_pagador_w		:= coalesce(obter_valor_param_usuario(1202, 166, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p),'N');
ie_validar_area_atuacao_prod_w	:= coalesce(obter_valor_param_usuario(1202, 167, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p),'N');
ie_validar_pagador_sit_trab_w	:= coalesce(obter_valor_param_usuario(1202, 173, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p),'N');

begin
select	coalesce(dt_base_validade_carteira,'B'),
	coalesce(ie_gerar_validade_cartao,'S'),
	coalesce(ie_permite_incl_dep_sit_trab,'N')
into STRICT	dt_validade_cart_parmetros_w,
	ie_gerar_validade_cartao_w,
	ie_permite_incl_dep_sit_trab_w
from	pls_parametros
where	cd_estabelecimento	= cd_estabelecimento_p;
exception
when others then
	CALL wheb_mensagem_pck.exibir_mensagem_abort( 418372, null);
end;

begin
select	coalesce(ie_cartao_definitivo,'N')
into STRICT	ie_cartao_definitivo_w
from	pls_param_proposta_online
where	cd_estabelecimento = cd_estabelecimento_p;
exception
when others then
	ie_cartao_definitivo_w	:= 'N';
end;

ie_liberar_benef_w	:= 'N';

if (ie_opcao_p in ('S','C','L')) then
	ie_liberar_benef_w	:= 'S';
end if;

open c01;
loop
fetch c01 into
	nr_seq_segurado_w,
	cd_pessoa_fisica_w,
	nr_seq_plano_w,
	nr_seq_tabela_w,
	dt_contratacao_w,
	nr_seq_pagador_w,
	nr_seq_vendedor_pf_w,
	nr_seq_vendedor_canal_w,
	nr_seq_titular_w,
	nr_seq_contrato_w,
	dt_migracao_w,
	nr_seq_segurado_ant_w,
	nm_segurado_w,
	nr_seq_parentesco_w,
	dt_rescisao_w,
	nr_seq_subestipulante_w,
	dt_val_cart_ant_w,
	ie_importacao_base_w,
	cd_matricula_estipulante_w,
	cd_matricula_familia_w,
	nr_seq_tabela_origem_w,
	nr_seq_pessoa_proposta_w,
	dt_nascimento_w,
	ie_acao_contrato_aux_w,
	ie_titularidade_w,
	dt_casamento_w,
	dt_reajuste_benef_w,
	nr_proposta_adesao_w,
	nr_seq_titular_ww,
	dt_recebimento_w,
	nr_seq_prop_benef_online_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	select	dt_contrato,
		coalesce(qt_dias_valid_cart,0),
		coalesce(dt_base_validade_carteira,dt_validade_cart_parmetros_w),
		ie_reajuste,
		coalesce(dt_base_carteira,dt_contrato),
		nr_mes_reajuste,
		coalesce(dt_reajuste, dt_contrato) dt_reajuste_contrato,
		dt_recebimento,
		CASE WHEN coalesce(cd_pf_estipulante::text, '') = '' THEN  'PJ'  ELSE 'PF' END ,
		nr_contrato,
		cd_cgc_estipulante
	into STRICT	dt_contrato_w,
		qt_dias_validade_w,
		dt_validade_cart_parmetros_w,
		ie_reajuste_w,
		dt_base_carteira_w,
		nr_mes_reajuste_contrato_w,
		dt_reajuste_contrato_w,
		dt_recebimento_contrato_w,
		ie_tipo_pessoa_contrato_w,
		nr_contrato_ww,
		cd_cgc_estipulante_w
	from	pls_contrato
	where	nr_sequencia	= nr_seq_contrato_w;
	
	if (ie_exige_data_recebimento_w = 'S') then
		if (coalesce(dt_recebimento_contrato_w::text, '') = '' and ie_opcao_p = 'C') then --Se estiver aprovando o contrato, exige que a data de recebimento esteja informada no contrato
			CALL wheb_mensagem_pck.exibir_mensagem_abort(1075744,null);
		elsif (coalesce(dt_recebimento_w::text, '') = '' and ie_opcao_p in ('L','S')) then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(1076716, 'DS_SEGURADO=' || nr_seq_segurado_w || ' - ' || nm_segurado_w);
		end if;
	end if;
	
	if	((ie_opcao_p = 'L') and coalesce(dt_contratacao_w::text, '') = '') then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(1069725);
	end if;
	
	/* Parametro [173] - Validar pagador de beneficiario pessoa fisica com situacao trabalhista */

	if (ie_validar_pagador_sit_trab_w = 'S') then
		select	max(cd_pessoa_fisica)
		into STRICT	cd_pf_pagador_trab_w
		from	pls_contrato_pagador
		where	nr_sequencia	= nr_seq_pagador_w
		and	(ie_situacao_trabalhista IS NOT NULL AND ie_situacao_trabalhista::text <> '');
		
		if (cd_pf_pagador_trab_w IS NOT NULL AND cd_pf_pagador_trab_w::text <> '') and (cd_pessoa_fisica_w <> cd_pf_pagador_trab_w) then
			select	count(1)
			into STRICT	qt_registros_w
			from	pls_segurado
			where	nr_sequencia		= nr_seq_titular_ww
			and	cd_pessoa_fisica	= cd_pf_pagador_trab_w;
			
			if (qt_registros_w = 0) then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(1164729, 'NM_BENEFICIARIO='||nm_segurado_w );
			end if;
		end if;
	end if;
	
	if (ie_opcao_p in ('P', 'A', 'D')) then
		dt_reajuste_w := dt_envio_sib_p;
	elsif (ie_opcao_p in ('L', 'C')) then
		dt_reajuste_w := dt_contratacao_w;
		
		if	((ie_opcao_p = 'L') and (dt_reajuste_benef_w IS NOT NULL AND dt_reajuste_benef_w::text <> '') and (ie_reajuste_w = 'C')) then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(886460, 'NR_SEQ_SEGURADO='||nr_seq_segurado_w);
		elsif	(ie_opcao_p = 'L' AND nr_seq_titular_ww IS NOT NULL AND nr_seq_titular_ww::text <> '') then
			select	max(b.nr_sequencia)
			into STRICT	nr_seq_processo_reaj_w
			from	processo_judicial_liminar a,
				pls_processo_judicial_reaj b
			where	a.nr_sequencia		= b.nr_seq_processo
			and	(a.nr_seq_segurado in (	SELECT	x.nr_sequencia
							from	pls_segurado x
							where	((x.nr_seq_titular = nr_seq_titular_ww) or (x.nr_sequencia = nr_seq_titular_ww))))
			and	b.ie_considerar_dependente = 'S'
			and	a.ie_estagio = 2;

			if	(nr_seq_processo_reaj_w IS NOT NULL AND nr_seq_processo_reaj_w::text <> '' AND nr_seq_tabela_w IS NOT NULL AND nr_seq_tabela_w::text <> '') then
				nr_seq_nova_tabela_w	:= null;
			
				nr_seq_nova_tabela_w := pls_duplicar_tab_preco_benef(	nr_seq_segurado_w, nr_seq_tabela_w, nr_seq_nova_tabela_w, cd_estabelecimento_p, nm_usuario_p, 'N');
				
				if (nr_seq_nova_tabela_w IS NOT NULL AND nr_seq_nova_tabela_w::text <> '') then

					update	pls_segurado
					set	nr_seq_tabela	= nr_seq_nova_tabela_w,
						dt_atualizacao	= clock_timestamp(),
						nm_usuario	= nm_usuario_p
					where	nr_sequencia	= nr_seq_segurado_w;
					
					CALL pls_gerar_segurado_historico(
						nr_seq_segurado_p, '3', clock_timestamp(),						
						wheb_mensagem_pck.get_texto(1116174,'NR_SEQ_TABELA_ANT='||nr_seq_tabela_w || ';NR_SEQ_TABELA='||nr_seq_nova_tabela_w),
						wheb_mensagem_pck.get_texto(1116173), null, null,
						null, null, clock_timestamp(), 
						null, null, null, 
						null, null, null, 
						nm_usuario_p, 'N');
					
					nr_seq_tabela_w		:= nr_seq_nova_tabela_w;
				end if;
			end if;
		end if;
	else
		dt_reajuste_w := trunc(clock_timestamp(),'dd');
	end if;
	
	if (dt_migracao_w IS NOT NULL AND dt_migracao_w::text <> '') then
		ie_acao_contrato_w	:= 'M';
		ds_observacao_w		:= wheb_mensagem_pck.get_texto(1116172);
	end if;
	
	if (ie_liberar_benef_w = 'S') then
		if (coalesce(ie_acao_contrato_w,'A') <> 'M') then
			if (ie_opcao_p = 'C') then
				ie_acao_contrato_w := 'A';
			elsif (ie_opcao_p = 'S') then
				ie_acao_contrato_w := 'S';
			end if;
		end if;
	else
		ie_acao_contrato_w	:= coalesce(ie_acao_contrato_aux_w,'L');
	end if;
	
	update	pls_segurado
	set	ie_acao_contrato	= ie_acao_contrato_w,
		dt_recebimento		= CASE WHEN ie_opcao_p='C' THEN coalesce(dt_recebimento, dt_recebimento_contrato_w)  ELSE dt_recebimento END 
	where	nr_sequencia		= nr_seq_segurado_w;
	
	/*Altera as datas de adesao, inclusao operadora e inicio vigencia do cartao conforme as regras de inclusao*/

	CALL pls_consiste_inclusao_benef(null,nr_seq_segurado_w,nm_usuario_p);
	select	dt_contratacao
	into STRICT	dt_contratacao_w
	from	pls_segurado
	where	nr_sequencia	= nr_seq_segurado_w;
	
	dt_rescisao_titular_w		:= null;
	dt_limite_utilizacao_tit_w	:= null;
	nr_seq_motivo_can_tit_w		:= null;
	ie_alterar_data_resc_benef_w	:= 'N';
	ie_situacao_trabalhista_tit_w	:= '';
	
	if (coalesce(nr_seq_pagador_w::text, '') = '') then /* Falta informar o pagador no cadastro do beneficiario */
		CALL wheb_mensagem_pck.exibir_mensagem_abort( 188971, 'NM_PESSOA_FISICA='||nm_segurado_w||';'||'NR_SEQ_CONTRATO='||nr_seq_contrato_w );
	elsif (coalesce(nr_seq_vendedor_canal_w::text, '') = '') then /* Falta informar o canal de venda no cadastro do beneficiario */
		CALL wheb_mensagem_pck.exibir_mensagem_abort( 188976, 'NM_PESSOA_FISICA='||nm_segurado_w||';'||'NR_SEQ_CONTRATO='||nr_seq_contrato_w );
	elsif (coalesce(nr_seq_plano_w::text, '') = '') then /* Falta informar o produto no cadastro do beneficiario */
		CALL wheb_mensagem_pck.exibir_mensagem_abort( 188977, 'NM_PESSOA_FISICA='||nm_segurado_w||';'||'NR_SEQ_CONTRATO='||nr_seq_contrato_w );
	elsif (coalesce(nr_seq_contrato_w::text, '') = '') then /* O beneficiario nao esta incluido em um contrato. Verifique! */
		CALL wheb_mensagem_pck.exibir_mensagem_abort( 188980, null );
	end if;
	
	if	((nr_seq_titular_w IS NOT NULL AND nr_seq_titular_w::text <> '') and (coalesce(nr_seq_parentesco_w::text, '') = '')) then /* Falta informar o grau de parentesco do beneficiario */
		CALL wheb_mensagem_pck.exibir_mensagem_abort( 188981, 'NM_SEGURADO='||nm_segurado_w||';'||'NR_SEQ_CONTRATO='||nr_seq_contrato_w );
	end if;
	
	if (ie_opcao_p <> 'P') then
		ds_erro_prod_dif_w := pls_consistir_produto_diferent(	nr_seq_segurado_w, nr_seq_titular_w, nr_contrato_ww, nr_seq_plano_w, ie_produto_diferente_w, dt_envio_sib_p, 'N', nm_usuario_p, cd_estabelecimento_p, ds_erro_prod_dif_w);
	end if;
	
	if (ie_motivo_inclusao_w = 'N') then
		begin
		select	nr_seq_motivo_inclusao
		into STRICT	nr_seq_motivo_inclusao_w
		from	pls_segurado
		where	nr_sequencia	= nr_seq_segurado_w;
		exception
		when others then
			nr_seq_motivo_inclusao_w := 0;
		end;
		
		if (coalesce(nr_seq_motivo_inclusao_w,0) = 0) then /* Nao foi informado o motivo de inclusao para o beneficiario */
			CALL wheb_mensagem_pck.exibir_mensagem_abort( 189005, 'NR_SEQ_SEGURADO='||nr_seq_segurado_w||';'||'NM_SEGURADO='||nm_segurado_w );
		end if;
	end if;
	
	select	count(1)
	into STRICT	qt_registros_w
	from	pls_contrato_plano a
	where	a.nr_seq_contrato	= nr_seq_contrato_w
	and	a.nr_seq_plano		= nr_seq_plano_w  LIMIT 1;
	
	if (qt_registros_w = 0) then /*Beneficiario com produto diferente dos produtos especificados para o contrato.*/
		CALL wheb_mensagem_pck.exibir_mensagem_abort( 189014, 'NR_SEQ_SEGURADO='||nr_seq_segurado_w||';'||'NM_SEGURADO='||nm_segurado_w );
	end if;
	
	select	trunc(max(dt_inicio_vigencia), 'dd')
	into STRICT	dt_inicio_plano_w
	from	pls_contrato_plano a
	where	a.nr_seq_contrato	= nr_seq_contrato_w
	and	a.nr_seq_plano		= nr_seq_plano_w
	and	coalesce(a.nr_seq_tabela, nr_seq_tabela_w) = nr_seq_tabela_w;
	
	if (dt_inicio_plano_w > trunc(dt_reajuste_w,'dd')) then	
		CALL wheb_mensagem_pck.exibir_mensagem_abort(328373, 'NR_SEQ_SEGURADO='||nr_seq_segurado_w||';'||'NM_SEGURADO='||nm_segurado_w );
	end if;
	
	if (coalesce(nr_seq_subestipulante_w,0) > 0) then
		select	max(dt_rescisao)
		into STRICT	dt_rescisao_sub_estipulante_w
		from	pls_sub_estipulante
		where	nr_sequencia	= nr_seq_subestipulante_w;
		
		if (dt_rescisao_sub_estipulante_w IS NOT NULL AND dt_rescisao_sub_estipulante_w::text <> '') then
			CALL wheb_mensagem_pck.exibir_mensagem_abort( 189015, 'NR_SEQ_SEGURADO='||nr_seq_segurado_w||';'||'NM_SEGURADO='||nm_segurado_w );
		end if;
	end if;
	
	select	ie_preco,
		ie_abrangencia,
		ie_tipo_contratacao,
		coalesce(ie_pcmso,'N'),
		nr_protocolo_ans
	into STRICT	ie_preco_w,
		ie_abrangencia_w,
		ie_tipo_contratacao_w,
		ie_pcmso_w,
		nr_protocolo_ans_w
	from	pls_plano
	where	nr_sequencia	= nr_seq_plano_w;
	
	if (ie_permite_lib_benef_plano_w <> 'S') and (ie_liberar_benef_w = 'S') then
		if (ie_permite_lib_benef_plano_w = 'C') and (cd_cgc_estipulante_w IS NOT NULL AND cd_cgc_estipulante_w::text <> '') then
			select	max(c.nr_contrato)
			into STRICT	nr_contrato_mesmo_plano_w
			from	pls_contrato	c,
				pls_segurado	b,
				pls_plano	a
			where	a.nr_sequencia		= b.nr_seq_plano
			and	c.nr_sequencia		= b.nr_seq_contrato
			and	b.cd_pessoa_fisica	= cd_pessoa_fisica_w
			and	b.nr_sequencia <> nr_seq_segurado_w
			and	trim(both a.nr_protocolo_ans) = trim(both nr_protocolo_ans_w)
			and	c.cd_cgc_estipulante = cd_cgc_estipulante_w
			and (coalesce(b.dt_rescisao::text, '') = '' or b.dt_rescisao	> dt_contratacao_w)
			and	(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '');

			if (coalesce(nr_contrato_mesmo_plano_w::text, '') = '') then
				select	max(c.nr_contrato)
				into STRICT	nr_contrato_mesmo_plano_w
				from	pls_contrato	c,
					pls_segurado	b,
					pls_plano	a
				where	a.nr_sequencia		= b.nr_seq_plano
				and	c.nr_sequencia		= b.nr_seq_contrato
				and	b.cd_pessoa_fisica	= cd_pessoa_fisica_w
				and	b.nr_sequencia <> nr_seq_segurado_w
				and	trim(both a.nr_protocolo_ans) = trim(both nr_protocolo_ans_w)
				and	(c.cd_pf_estipulante IS NOT NULL AND c.cd_pf_estipulante::text <> '')
				and (coalesce(b.dt_rescisao::text, '') = '' or b.dt_rescisao	> dt_contratacao_w)
				and	(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '');
			end if;
		else
			select	max(c.nr_contrato)
			into STRICT	nr_contrato_mesmo_plano_w
			from	pls_contrato	c,
				pls_segurado	b,
				pls_plano	a
			where	a.nr_sequencia		= b.nr_seq_plano
			and	c.nr_sequencia		= b.nr_seq_contrato
			and	b.cd_pessoa_fisica	= cd_pessoa_fisica_w
			and	b.nr_sequencia <> nr_seq_segurado_w
			and	trim(both a.nr_protocolo_ans) = trim(both nr_protocolo_ans_w)
			and (coalesce(b.dt_rescisao::text, '') = '' or b.dt_rescisao	> dt_contratacao_w)
			and	(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '');
		end if;
		
		if (nr_contrato_mesmo_plano_w IS NOT NULL AND nr_contrato_mesmo_plano_w::text <> '') then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(1046930,'NR_CONTRATO='||nr_contrato_mesmo_plano_w||';'||
									'DS_BENEFICIARIO='||nr_seq_segurado_w||' - '||nm_segurado_w);
									--O beneficiario #@DS_BENEFICIARIO#@ ja esta ativo com o mesmo produto no contrato #@NR_CONTRATO#@. Favor verificar o parametro [143].
		end if;
	end if;

	if (ie_preco_w = '1') then
		select	count(1)
		into STRICT	qt_registros_w
		from	pls_segurado
		where	nr_sequencia	= nr_seq_segurado_w
		and	coalesce(nr_seq_tabela::text, '') = ''  LIMIT 1;
		if (qt_registros_w > 0) then /* Existem beneficiarios sem tabela de preco informada. */
			CALL wheb_mensagem_pck.exibir_mensagem_abort( 189016, null );
		end if;
	end if;
	
	if (ie_importacao_base_w = 'S') then
		dt_idade_w	:= trunc(clock_timestamp(),'dd');
	else
		if (ie_opcao_p	in ('L','C')) then
			dt_idade_w	:= trunc(dt_contratacao_w,'dd');
		elsif (dt_contratacao_w > clock_timestamp()) then
			dt_idade_w	:= trunc(dt_contratacao_w,'dd');
		else
			dt_idade_w	:= trunc(clock_timestamp(),'dd');
		end if;
	end if;
	
	qt_idade_w	:= trunc(months_between(dt_idade_w,dt_nascimento_w) / 12);
	
	if (qt_idade_w > 200) then /* Idade invalida. Verifique a data de nascimento */
		CALL wheb_mensagem_pck.exibir_mensagem_abort( 189017, 'NM_PESSOA_FISICA='||nm_segurado_w );
	end if;
	
	if (ie_opcao_p <> 'T') then
		CALL pls_consistir_titular_benef(nr_seq_contrato_w,nm_usuario_p);
	end if;

	ds_erro_w := pls_consistir_grau_paren_max(nr_seq_segurado_w, 'C', cd_estabelecimento_p, nm_usuario_p, ds_erro_w);
	
	if (ds_erro_w IS NOT NULL AND ds_erro_w::text <> '') then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(182314,'DS_ERRO='||ds_erro_w);
	end if;
	
	CALL pls_consistir_regra_benef(nr_seq_contrato_w,nr_seq_segurado_w);
	
	select	count(1)
	into STRICT	qt_dependete_w
	from	pls_segurado
	where	nr_sequencia	= nr_seq_segurado_w
	and	(nr_seq_titular IS NOT NULL AND nr_seq_titular::text <> '')  LIMIT 1;
	
	if (qt_dependete_w > 0) then
		CALL pls_consistir_parenteco_plano(nr_seq_plano_w,nr_seq_segurado_w,'C',nm_usuario_p);
	end if;
	
	if (ie_opcao_p <> 'A') then --Alteracao de tabela de preco nao e enviada no SIB
		CALL pls_consiste_data_sib(coalesce(dt_envio_sib_p,dt_contratacao_w), nm_usuario_p, cd_estabelecimento_p);
	end if;
	
	/*Gerar as SCA's do contrato para beneficiario*/

	CALL pls_gerar_sca_contrato_benef(nr_seq_segurado_w,dt_envio_sib_p, nm_usuario_p, ie_opcao_p);
	/*Gerar as SCA's do produto para o beneficiario*/

	CALL pls_gerar_sca_plano_benef(nr_seq_segurado_w,dt_envio_sib_p,nm_usuario_p,ie_opcao_p);
	
	select	count(1)
	into STRICT	qt_registro_w
	from	pls_sca_vinculo
	where	nr_seq_segurado		= nr_seq_segurado_w
	and	dt_inicio_vigencia	< trunc(dt_contratacao_w,'dd');
	
	if (qt_registro_w > 0) then
		update	pls_sca_vinculo
		set	dt_inicio_vigencia	= dt_contratacao_w
		where	nr_seq_segurado		= nr_seq_segurado_w
		and	dt_inicio_vigencia	< trunc(dt_contratacao_w,'dd');
	end if;
	
	CALL pls_liberar_vinculo_sca(null, nr_seq_segurado_w, null, 'L', 'N', 'N', nm_usuario_p, cd_estabelecimento_p);
	
	CALL pls_att_classif_dependencia(coalesce(nr_seq_titular_w,nr_seq_segurado_w),nm_usuario_p,'N');
	
	CALL pls_liberar_segurado(nr_seq_segurado_w, ie_acao_contrato_w, nm_usuario_p, 'N');
	
	if (coalesce(nr_seq_tabela_w,0) <> 0) then

		if (ie_opcao_p <> 'T') then
			CALL pls_valida_tabela_preco(nr_seq_tabela_w, nr_seq_tabela_origem_w, nr_seq_segurado_w,
						nr_seq_contrato_w, null, null,
						ie_permite_tab_dif_p, null);
		end if;
		
		if (ie_opcao_p in ('S','C','L')) then
			if (nr_seq_contrato_w IS NOT NULL AND nr_seq_contrato_w::text <> '') then
				select	max(b.nr_segurado)
				into STRICT	nr_segurado_tabela_w
				from	pls_tabela_preco	b,
					pls_segurado		a
				where	a.nr_seq_tabela	= b.nr_sequencia
				and	a.nr_sequencia	= nr_seq_segurado_w;
				
				if (ie_reajuste_w = 'A') and (coalesce(nr_segurado_tabela_w,0) <> nr_seq_segurado_w) then
					if (coalesce(nr_seq_pessoa_proposta_w,0) <> 0) then /* 450484 - sideker - A tabela do beneficiario so sera duplicada automaticamente se o beneficiario for originado de uma proposta de adesao */
						CALL pls_gerar_tabela_segurado(nr_seq_segurado_w, nm_usuario_p,'N');
					else
						CALL wheb_mensagem_pck.exibir_mensagem_abort(187735, 'NM_BENEFICIARIO=' || nm_segurado_w);
					end if;
				end if;
			end if;
		end if;
		
		select	max(nr_seq_tabela)
		into STRICT	nr_seq_tabela_atual_w
		from	pls_segurado
		where	nr_sequencia	= nr_seq_segurado_w;
		
		nr_seq_tabela_w	:= nr_seq_tabela_atual_w;
		
		if (ie_duplicar_tabela_comerc_w = 'S') then
			select	count(1)
			into STRICT	qt_tabela_contrato_w
			from	pls_tabela_preco
			where	nr_sequencia	= nr_seq_tabela_atual_w
			and ((nr_contrato IS NOT NULL AND nr_contrato::text <> '') or (nr_segurado IS NOT NULL AND nr_segurado::text <> ''));
			
			if (qt_tabela_contrato_w = 0) then
				nr_seq_tabela_w := pls_duplicar_tab_preco_benef(nr_seq_segurado_w, nr_seq_tabela_atual_w, nr_seq_tabela_w, cd_estabelecimento_p, nm_usuario_p, ie_commit_p);
				
				update	pls_segurado
				set	nr_seq_tabela	= nr_seq_tabela_w
				where	nr_sequencia	= nr_seq_segurado_w;
			end if;
		end if;
		
		select	coalesce(nr_contrato,0),
			dt_liberacao
		into STRICT	nr_contrato_w,
			dt_liberacao_w
		from	pls_tabela_preco
		where	nr_sequencia	= nr_seq_tabela_w;

		if (coalesce(dt_liberacao_w::text, '') = '') then
			CALL wheb_mensagem_pck.exibir_mensagem_abort( 189013, 'NR_SEQ_SEGURADO='||nr_seq_segurado_w||';'||'NM_SEGURADO='||nm_segurado_w );
			/* Tabela nao foi liberada para comercializacao. Verifique! */

		end if;
		
		if (ie_opcao_p <> 'T') then
			CALL pls_valida_tabela_preco(null, null, nr_seq_segurado_w,
						nr_seq_contrato_w, nr_contrato_w, ie_tipo_contratacao_w, 
						null, ie_consiste_tab_contr_p);
		end if;
		
		--O ie_acao_w sera inserido no atributo pls_segurado_preco.cd_motivo_reajuste
		select	CASE WHEN ie_opcao_p='L' THEN 'C' WHEN ie_opcao_p='C' THEN 'C' WHEN ie_opcao_p='P' THEN 'P' WHEN ie_opcao_p='A' THEN 'A' WHEN ie_opcao_p='T' THEN 'T' WHEN ie_opcao_p='C' THEN 'D'  ELSE 'P' END
		into STRICT	ie_acao_w
		;
		
		CALL pls_preco_beneficiario_pck.gravar_preco_benef(nr_seq_segurado_p, ie_acao_w, 'S', dt_reajuste_w, 'N', null, nm_usuario_p, cd_estabelecimento_p);
		
		CALL pls_gerar_valor_sca_segurado(nr_seq_segurado_w, 'C', null, nm_usuario_p, cd_estabelecimento_p);
	end if;
	
	if (nr_seq_titular_w IS NOT NULL AND nr_seq_titular_w::text <> '') and
		(ie_opcao_p <> 'A' AND ie_opcao_p <> 'C') then
		select	dt_liberacao,
			dt_rescisao,
			dt_limite_utilizacao,
			nr_seq_motivo_cancelamento,
			ie_situacao_trabalhista
		into STRICT	dt_liberacao_titular_w,
			dt_rescisao_titular_w,
			dt_limite_utilizacao_tit_w,
			nr_seq_motivo_can_tit_w,
			ie_situacao_trabalhista_tit_w
		from	pls_segurado
		where	nr_sequencia	= nr_seq_titular_w;
		
		if (ie_permite_incl_dep_sit_trab_w = 'N') and (ie_situacao_trabalhista_tit_w IS NOT NULL AND ie_situacao_trabalhista_tit_w::text <> '') then
			begin
			select	max(ie_grau_parentesco)
			into STRICT	ie_grau_parentesco_benef_w
			from	grau_parentesco
			where	nr_sequencia = nr_seq_parentesco_w;
			exception
			when others then
				ie_grau_parentesco_benef_w := 0;
			end;
			
			begin
			select	coalesce(qt_cons_dias_incl_cong_filho,0)
			into STRICT	qt_cons_dias_incl_cong_filho_w
			from	pls_parametros
			where	cd_estabelecimento = cd_estabelecimento_p;
			exception
			when others then
				qt_cons_dias_incl_cong_filho_w := 0;
			end;
			
			if (ie_grau_parentesco_benef_w = 3) then
				if (qt_cons_dias_incl_cong_filho_w > 0) then
					qt_dias_w	:= dt_contratacao_w - dt_nascimento_w;
					if (qt_dias_w > qt_cons_dias_incl_cong_filho_w) then
						ds_erro_w	:= ds_erro_w || wheb_mensagem_pck.get_texto(280629, 'QT_DIAS_P=' || qt_dias_w);
					end if;
				end if;
			elsif (ie_grau_parentesco_benef_w = 4) then
				if (qt_cons_dias_incl_cong_filho_w > 0) then
					qt_dias_w	:= dt_contratacao_w - dt_casamento_w;
					if (qt_dias_w > qt_cons_dias_incl_cong_filho_w) then
						ds_erro_w	:= ds_erro_w || wheb_mensagem_pck.get_texto(280632, 'QT_DIAS_P=' || qt_dias_w);
					elsif (coalesce(dt_casamento_w::text, '') = '') then
						ds_erro_w	:= ds_erro_w || wheb_mensagem_pck.get_texto(280633);
					end if;
				end if;
			else
				ds_erro_w	:= ds_erro_w || wheb_mensagem_pck.get_texto(280636);
			end if;
			
			if (ds_erro_w IS NOT NULL AND ds_erro_w::text <> '') then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(182314,'DS_ERRO='||ds_erro_w);
			end if;
		end if;
		
		if (coalesce(dt_liberacao_titular_w::text, '') = '') then /* e necessario liberar o titular antes da liberacao do dependente */
			CALL wheb_mensagem_pck.exibir_mensagem_abort( 188986, null);
		end if;
		
		if (dt_contratacao_w > dt_rescisao_titular_w) then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(1159050,'DT_RESCISAO_TITULAR='||TO_CHAR(dt_rescisao_titular_w, 'dd/mm/yyyy')); -- A data de contratacao nao pode ser posterior a data de rescisao do beneficiario titular: DT_RESCISAO_TITULAR.
		end if;
	end if;
	
	select	max(cd_usuario_plano)
	into STRICT	cd_usuario_plano_w
	from	pls_segurado_carteira
	where	nr_seq_segurado	= nr_seq_segurado_w
	and	coalesce(dt_validade_carteira,clock_timestamp()) >= clock_timestamp();
	
	if (coalesce(ie_gerar_cartao_p,'S') = 'N') and (coalesce(cd_usuario_plano_w,'0') = '0') and (coalesce(dt_rescisao_w::text, '') = '') then /* Beneficiario sem cartao de identificacao ou com validade vencida. Verifique! */
		CALL wheb_mensagem_pck.exibir_mensagem_abort( 188987, 'NR_SEQ_SEGURADO='||nr_seq_segurado_w||';'||'NM_SEGURADO='||nm_segurado_w );
	end if;
	
	nr_seq_regra_empresa_w	:= null;
	
	if (ie_opcao_p in ('L','C','S')) then
		begin
		select	cd_operadora_empresa
		into STRICT	cd_empresa_w
		from	pls_contrato
		where	nr_sequencia	= nr_seq_contrato_w;
		exception
		when others then
			cd_empresa_w	:= null;
		end;

		if (coalesce(cd_empresa_w::text, '') = '') then
			for r_c02_w in c02 loop
				begin
				nr_seq_regra_empresa_w := r_c02_w.nr_sequencia;
				end;
			end loop;

			if (nr_seq_regra_empresa_w IS NOT NULL AND nr_seq_regra_empresa_w::text <> '') then
				select	max(cd_fixo)
				into STRICT	cd_empresa_w
				from	pls_carteira_controle_iden
				where	nr_sequencia	= nr_seq_regra_empresa_w;
			end if;
		end if;
	end if;

	if (ie_liberar_benef_w	= 'S') and (dt_rescisao_titular_w IS NOT NULL AND dt_rescisao_titular_w::text <> '') then
		ie_alterar_data_resc_benef_w	:= 'S';
	end if;
	
	/*Update unico na PLS_SEGURADO no Cursor01 "GANHO DE PERFORMACE"*/

	update	pls_segurado
	set	cd_operadora_empresa		= CASE WHEN ie_opcao_p='L' THEN cd_empresa_w WHEN ie_opcao_p='C' THEN cd_empresa_w WHEN ie_opcao_p='S' THEN cd_empresa_w  ELSE cd_operadora_empresa END ,
		ie_pcmso			= ie_pcmso_w,
		dt_rescisao			= CASE WHEN ie_alterar_data_resc_benef_w='S' THEN dt_rescisao_titular_w  ELSE dt_rescisao END ,
		dt_limite_utilizacao		= CASE WHEN ie_alterar_data_resc_benef_w='S' THEN dt_limite_utilizacao_tit_w  ELSE dt_limite_utilizacao END ,
		nr_seq_motivo_cancelamento	= CASE WHEN ie_alterar_data_resc_benef_w='S' THEN nr_seq_motivo_can_tit_w  ELSE nr_seq_motivo_cancelamento END ,
		ie_situacao_trabalhista		= coalesce(ie_situacao_trabalhista,ie_situacao_trabalhista_tit_w)
	where	nr_sequencia		= nr_seq_segurado_w;
	
	CALL pls_atualizar_familia_pf(nr_seq_segurado_w,cd_estabelecimento_p,nm_usuario_p);
	
	select	a.cd_matricula_familia
	into STRICT	cd_matricula_familia_w
	from	pessoa_fisica	b,
		pls_segurado	a
	where	b.cd_pessoa_fisica	= a.cd_pessoa_fisica
	and	((a.nr_seq_contrato	= coalesce(nr_seq_contrato_p,0))
	or (a.nr_sequencia		= coalesce(nr_seq_segurado_p,0)));
	
	if (ie_consistir_titularidade_w = 'S') then
		select	count(1)
		into STRICT	qt_registro_w
		from	pls_segurado
		where	cd_matricula_familia = cd_matricula_familia_w
		and	nr_sequencia <> nr_seq_segurado_w
		and	ie_titularidade = ie_titularidade_w;
		
		if (qt_registro_w > 0) then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(1116175);
		end if;
	end if;
	
	if (ie_consistir_matricula_est_w = 'S') then
		select	count(1)
		into STRICT	qt_registros_w
		from	pls_segurado
		where	nr_seq_contrato = nr_seq_contrato_w
		and	cd_matricula_familia <> cd_matricula_familia_w
		and	cd_matricula_estipulante = cd_matricula_estipulante_w
		and	nr_sequencia <> nr_seq_segurado_w;
		
		if (qt_registros_w > 0) then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(1003947);
		end if;
	end if;
	
	/* Consistir o parametro [82] - Permite apenas 1 titular por familia no contrato */

	if	((coalesce(ie_titular_familia_w,'N') = 'S') and (coalesce(nr_seq_titular_w::text, '') = '') and (ie_opcao_p <> 'T')) then
		select	max(nr_sequencia)
		into STRICT	nr_seq_seg_titular_w
		from	pls_segurado
		where	nr_seq_contrato		= nr_seq_contrato_w
		and	cd_matricula_familia	= cd_matricula_familia_w
		and	nr_sequencia	<> nr_seq_segurado_w
		and	coalesce(nr_seq_titular::text, '') = ''
		and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
		and	coalesce(dt_rescisao::text, '') = '';
		
		if (nr_seq_seg_titular_w IS NOT NULL AND nr_seq_seg_titular_w::text <> '') then
			select	max(b.nm_pessoa_fisica)
			into STRICT	nm_segurado_titular_w
			from	pls_segurado	a,
				pessoa_fisica	b
			where	a.cd_pessoa_fisica	= b.cd_pessoa_fisica
			and	a.nr_sequencia		= nr_seq_seg_titular_w;
			
			if (nm_segurado_titular_w IS NOT NULL AND nm_segurado_titular_w::text <> '') then
				CALL wheb_mensagem_pck.exibir_mensagem_abort( 188989, 'NR_SEQ_SEG_TITULAR='||nr_seq_seg_titular_w||';'||'NM_SEGURADO_TITULAR='||nm_segurado_titular_w );
				/*E permitido apenas 1 titular ativo por matricula familiar!
				Verifique parametro [82] - Permite apenas 1 titular por familia no contrato.*/
			end if;
		end if;
	end if;
	
	if (ie_titular_pagador_w = 'S') and (coalesce(nr_seq_titular_w::text, '') = '') then
		select	max(a.nr_sequencia)
		into STRICT	nr_seq_titular_pagador_w
		from	pls_segurado a
		where	a.nr_seq_contrato = nr_seq_contrato_w
		and	a.nr_seq_pagador = nr_seq_pagador_w
		and	coalesce(a.nr_seq_titular::text, '') = ''
		and	a.nr_sequencia <> nr_seq_segurado_w
		and	coalesce(a.dt_rescisao::text, '') = ''
		and	exists (SELECT	1
				from	pls_contrato_pagador x
				where	x.nr_sequencia = a.nr_seq_pagador
				and	(x.cd_pessoa_fisica IS NOT NULL AND x.cd_pessoa_fisica::text <> ''))
		and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '');
		
		if (nr_seq_titular_pagador_w IS NOT NULL AND nr_seq_titular_pagador_w::text <> '') then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(1095554); --E permitido apenas 1 titular ativo por pagador pessoa fisica!
		end if;
	end if;
	
	select	count(1)
	into STRICT 	qt_titular_ativo_w
	from 	pls_segurado
	where	nr_sequencia = nr_seq_titular_w
	and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
	and (coalesce(dt_rescisao::text, '') = '' or dt_rescisao > dt_contratacao_w)
	and	coalesce(dt_cancelamento::text, '') = '';

	/* Parametro [167] - Validar area de atuacao do produto. */

	if (ie_validar_area_atuacao_prod_w = 'S') and (ie_opcao_p in ('S','C','L')) and (qt_titular_ativo_w = 0) then
	
		select	coalesce(max(a.ie_permite_inc_fora_atuacao),'N')
		into STRICT	ie_permite_inc_fora_atuacao_w
		from	pls_regra_benef_contrato a
		where	a.nr_seq_contrato	= nr_seq_contrato_w;
		
		select	max(a.cd_municipio_ibge)
		into STRICT	cd_municipio_ibge_w
		from	compl_pessoa_fisica a
		where	a.cd_pessoa_fisica = cd_pessoa_fisica_w
		and	a.ie_tipo_complemento = 1;
		
		if	((ie_permite_inc_fora_atuacao_w = 'N') and (pls_obter_se_area_atuacao_prod(nr_seq_plano_w,cd_municipio_ibge_w) = 'N')) then
			/* Nao e permitido um municipio de residencia fora da area de atuacao do produto. Verifique! */

			CALL wheb_mensagem_pck.exibir_mensagem_abort(1098669, 'NR_SEQ_SEGURADO='||nr_seq_segurado_w||';'||'NM_SEGURADO='||nm_segurado_w );
		end if;
	end if;
	
	if (coalesce(ie_titularidade_w::text, '') = '') then
		CALL pls_gerar_regra_titularidade(nr_seq_segurado_w,cd_estabelecimento_p,nm_usuario_p);
	end if;
	
	if (coalesce(ie_gerar_cartao_p,'S') = 'S') and (ie_opcao_p in ('L','C','S','P')) then
		dt_validade_w	:= null;
		
		if (ie_gerar_validade_cartao_w = 'S') then
			dt_validade_w := pls_obter_validade_cart_benef(dt_contratacao_w, dt_contrato_w, dt_base_carteira_w, dt_validade_cart_parmetros_w, cd_estabelecimento_p);
		end if;
		
		dt_inicio_vig_cart_w	:= dt_contratacao_w;
		
		if (ie_data_inic_vig_cart_w = 'B') then
			dt_inicio_vig_cart_w	:= dt_contratacao_w;
		elsif (ie_data_inic_vig_cart_w = 'C') then
			dt_inicio_vig_cart_w	:= dt_contrato_w;
		end if;
		
		if (ie_opcao_p = 'P') then
			ie_alteracao_carteira_w	:= 'S';
		else
			ie_alteracao_carteira_w	:= 'N';
		end if;
		
		if (ie_opcao_p = 'C') and (nr_seq_prop_benef_online_w IS NOT NULL AND nr_seq_prop_benef_online_w::text <> '') and (ie_cartao_definitivo_w = 'S') then
			ie_status_cartao_w := 'D';
		else
			ie_status_cartao_w := 'P';
		end if;
		
		CALL pls_gerar_carteira_usuario(nr_seq_segurado_w, nr_seq_titular_w, dt_inicio_vig_cart_w, dt_validade_w, ie_status_cartao_w, ie_alteracao_carteira_w,null, nm_usuario_p);
	end if;
	
	/* A data de validade da carteira anterior sera determinada pela data de migracao ao novo contrato.*/

	if (nr_seq_segurado_ant_w IS NOT NULL AND nr_seq_segurado_ant_w::text <> '') then
		update	pls_segurado_carteira
		set	dt_validade_carteira	= coalesce(dt_val_cart_ant_w,clock_timestamp()) - 1
		where	nr_seq_segurado		= nr_seq_segurado_ant_w
		and	coalesce(dt_validade_carteira::text, '') = '';
	end if;
	
	if (ie_opcao_p in ('S','C','L')) then
		if (ie_dt_adesao_w = 'N') and (nr_seq_titular_w IS NOT NULL AND nr_seq_titular_w::text <> '') then
			select	dt_contratacao
			into STRICT	dt_contratacao_titular_w
			from	pls_segurado
			where	nr_sequencia	= nr_seq_titular_w;
			
			if (trunc(dt_contratacao_titular_w,'dd') > trunc(dt_contratacao_w,'dd')) then /* Beneficiario possui data adesao menor do que a do titular */
				CALL wheb_mensagem_pck.exibir_mensagem_abort( 189020, 'NM_PESSOA_FISICA='||nm_segurado_w );
			end if;
		end if;
		
		if (ie_benef_limite_depen_w = 'S') and (nr_seq_titular_w IS NOT NULL AND nr_seq_titular_w::text <> '') then
			begin
			dt_limite_dependencia_w	:= pls_obter_dt_limite_depend(nr_seq_segurado_w);
			exception
			when others then
				dt_limite_dependencia_w	:= null;
			end;
			
			if (trunc(dt_limite_dependencia_w,'dd')	< trunc(dt_contratacao_w,'dd')) then /* Beneficiario ultrapassou seu limite dependencia. Favor verificar o parametro[105] */
				CALL wheb_mensagem_pck.exibir_mensagem_abort( 189021, 'NM_PESSOA_FISICA='||nm_segurado_w );
			end if;
		end if;
		
		ds_erro_w := pls_cons_inclusao_benef_contr(nr_seq_segurado_w, null, nr_seq_contrato_w, dt_contratacao_w, cd_estabelecimento_p, nm_usuario_p, ds_erro_w);
		
		if (ds_erro_w IS NOT NULL AND ds_erro_w::text <> '') then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(182314,'DS_ERRO='||ds_erro_w);
		end if;
		
		/*Gerar renovacao do cartao de identificacao*/

		CALL pls_gerar_renovacao_carteira(nr_seq_contrato_w,nr_seq_segurado_w,ie_acao_contrato_w,nm_usuario_p);
		
		CALL pls_insentar_carencias_benef(nr_seq_segurado_w,cd_estabelecimento_p,nm_usuario_p);
		
		CALL pls_lanc_bonificacao_plano_sca(nr_seq_segurado_w,null,'4',nm_usuario_p);
		
		CALL pls_gerar_valor_cart_benef(nr_seq_segurado_w,cd_estabelecimento_p,nm_usuario_p);
		
		if (ie_opcao_p = 'L') then
			if (ie_acao_contrato_w = 'M') then
				CALL pls_desbloquear_auto_cartao(nr_seq_segurado_w, 'M', nm_usuario_p, cd_estabelecimento_p);
			else
				CALL pls_desbloquear_auto_cartao(nr_seq_segurado_w, 'L', nm_usuario_p, cd_estabelecimento_p);
			end if;
		end if;
	elsif (ie_opcao_p = 'P') and (ie_gerar_cartao_p = 'S') then
		/*Gerar renovacao do cartao de identificacao*/

		CALL pls_gerar_renovacao_carteira(nr_seq_contrato_w,nr_seq_segurado_w,'',nm_usuario_p);
	end if;
	
	select	max(b.nr_seq_inclusao_benef)
	into STRICT	nr_seq_inclusao_benef_w
	from	pls_proposta_beneficiario	b,
		pls_segurado			a
	where	a.nr_seq_pessoa_proposta	= b.nr_sequencia
	and	a.nr_sequencia			= nr_seq_segurado_w;
	
	if (coalesce(nr_seq_inclusao_benef_w,0) > 0) then
		update	pls_inclusao_beneficiario
		set	ie_status	= 'C'
		where	nr_sequencia	= nr_seq_inclusao_benef_w;
	end if;
	
	-- Verificar se todos os beneficiarios da proposta estao liberados
	if (nr_proposta_adesao_w IS NOT NULL AND nr_proposta_adesao_w::text <> '') then
		select	count(1)
		into STRICT	qt_benef_proposta_pendente_w
		from	pls_segurado
		where	nr_proposta_adesao	= nr_proposta_adesao_w
		and	coalesce(dt_liberacao::text, '') = '';
		
		if (qt_benef_proposta_pendente_w = 0) then
			update	pls_proposta_adesao
			set	ie_liberado = 'S'
			where	nr_sequencia	= nr_proposta_adesao_w;
		end if;
	end if;
	
	if (nr_seq_titular_w IS NOT NULL AND nr_seq_titular_w::text <> '') then
		begin
		select	ie_permite_matricula_dif
		into STRICT	ie_permite_matricula_dif_w
		from	pls_contrato
		where	nr_sequencia = nr_seq_contrato_w;
		exception
		when others then
			ie_permite_matricula_dif_w	:= 'S';
		end;
		
		if (ie_permite_matricula_dif_w = 'N') then
			select	cd_matricula_estipulante
			into STRICT	cd_matricula_titular_w
			from	pls_segurado
			where	nr_sequencia = nr_seq_titular_w;
			
			update	pls_segurado
			set	cd_matricula_estipulante = cd_matricula_titular_w
			where	nr_sequencia	= nr_seq_segurado_w;
		end if;
	end if;
	
	--Recalcula o preco do SCA dos beneficiarios do contrato pela quantidade de vidas
	for r_c04_w in C04 loop
		begin
		
		for r_c05_w in C05(r_c04_w.nr_seq_segurado_sca) loop
			begin
			CALL pls_recalcular_preco_sca(r_c04_w.nr_seq_segurado_sca, 'C', cd_estabelecimento_p, clock_timestamp(), r_c05_w.nr_seq_sca_vinculo, nm_usuario_p);
			end;
		end loop;
		
		end;
	end loop; --C04
	
	if (ie_opcao_p in ('S', 'L')) then
		CALL pls_atualizar_mes_reaj_pck.liberar_beneficiario(nr_seq_segurado_w, ie_reajuste_w, coalesce(nr_mes_reajuste_contrato_w, (to_char(dt_reajuste_contrato_w,'mm'))::numeric ),
								nm_usuario_p, cd_estabelecimento_p);
	end if;
	
	if (ie_opcao_p in ('S','C','L')) then
		CALL pls_atualiza_segurado_status(nr_seq_segurado_p, 1, dt_contratacao_w, null, nr_seq_plano_w, null, nm_usuario_p, cd_estabelecimento_p,'N');
	end if;

	select	max(cd_usuario_plano)
	into STRICT	cd_usuario_plano_ww
	from	pls_segurado_carteira
	where	nr_seq_segurado = nr_seq_segurado_w;
	
	CALL pls_gerar_link_ged(	nr_seq_contrato_w, cd_matricula_familia_w, cd_matricula_estipulante_w,
				cd_empresa_w, 'B', cd_usuario_plano_ww,
				nm_usuario_p);
	
	if (ie_opcao_p = 'C') then
		CALL pls_gerar_link_ged(	nr_seq_contrato_w, null, null,
					cd_empresa_w, 'C', null,
					nm_usuario_p);
	end if;
	
	end;
end loop;
close c01;

if (ie_opcao_p = 'L') then
	CALL pls_preco_beneficiario_pck.atualizar_preco_beneficiarios(nr_seq_segurado_p, null, null, null, clock_timestamp(), null, 'N', nm_usuario_p, cd_estabelecimento_p);
end if;

if (coalesce(nr_seq_segurado_p,0) > 0) and (coalesce(nr_seq_tabela_w,0) <> 0) and (coalesce(ie_atualizar_desconto_p,'N') = 'S') then
	if (ie_opcao_p = 'L') then /*Se estiver liberando um beneficiario, deve calcular a regra de desconto de acordo com a data de adesao do mesmo */
		CALL pls_preco_beneficiario_pck.atualizar_desconto_benef(nr_seq_contrato_w, dt_contratacao_w, null, 'N', nm_usuario_p, cd_estabelecimento_p);
	else
		CALL pls_preco_beneficiario_pck.atualizar_desconto_benef(nr_seq_contrato_w, clock_timestamp(), null, 'N', nm_usuario_p, cd_estabelecimento_p);
	end if;
end if;

if (coalesce(ie_commit_p,'N') = 'S') then
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_valor_segurado ( nr_seq_contrato_p bigint, nr_seq_segurado_p bigint, ie_opcao_p text, cd_estabelecimento_p bigint, nm_usuario_p text, ie_atualizar_desconto_p text, dt_envio_sib_p timestamp, ie_permite_tab_dif_p text, ie_consiste_tab_contr_p text, ie_gerar_cartao_p text, ie_commit_p text) FROM PUBLIC;

