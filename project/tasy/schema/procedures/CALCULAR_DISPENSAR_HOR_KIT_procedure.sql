-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE calcular_dispensar_hor_kit (nr_prescricao_p bigint, nr_seq_horario_p bigint, qt_dose_p bigint, cd_unidade_medida_p text) AS $body$
DECLARE


cd_um_consumo_w		varchar(30);
qt_dose_consumo_w		double precision;
cd_um_prescricao_w		varchar(30);
qt_dose_prescricao_w		double precision;
qt_unitaria_w			double precision;
nr_seq_material_w		integer;
nr_seq_horario_w		bigint;
dt_horario_w			timestamp;
cd_um_paciente_w		varchar(30);
qt_dose_paciente_w		double precision;
cd_um_farmacia_w		varchar(30);
qt_dose_farmacia_w		double precision;
qt_dose_total_farmacia_w	double precision;
qt_conversao_dose_w			double precision;
nr_seq_material_ww		integer	:= 0;
cd_material_w				integer;
qt_dispensar_w		double precision;
qt_dispensar_parcial_w	double precision;
qt_dose_disponivel_w		double precision	:= 0;
qt_dose_total_disp_w		double precision;

ie_cursor_w			varchar(1);
nm_usuario_w			prescr_medica.nm_usuario%type;

c01 CURSOR FOR
SELECT	d.cd_unidade_medida_consumo,
	d.qt_conv_estoque_consumo,
	coalesce(cd_unidade_medida_p,b.cd_unidade_medida_dose),
	coalesce(qt_dose_p,b.qt_dose),
	b.qt_unitaria,
	a.nr_seq_material,
	a.nr_sequencia,
	a.dt_horario,
	a.cd_unidade_medida_dose,
	a.qt_dose,
	a.cd_unidade_medida,
	a.qt_dispensar_hor,
	a.qt_dispensar,
	d.cd_material,
	c.nm_usuario
from	material d,
	prescr_mat_hor a,
	prescr_material b,
	prescr_medica c
where	d.cd_material		= b.cd_material
and	a.nr_prescricao	= b.nr_prescricao
and	a.nr_seq_material	= b.nr_sequencia
and	b.qt_total_dispensar	>= b.qt_material
and	b.nr_prescricao	= c.nr_prescricao
and	c.nr_prescricao	= nr_prescricao_p
and	coalesce(b.cd_motivo_baixa,0) = 0
and	((coalesce(nr_seq_horario_p,0) = 0) or (a.nr_sequencia	= nr_seq_horario_p))
and	Obter_se_horario_liberado(a.dt_lib_horario, a.dt_horario) = 'S'
order by
	a.nr_seq_material,
	a.nr_sequencia;


BEGIN

/*delete from rep;

create table rep (
p number(14,0),
i number(6,0),
s number(1,0),
h varchar2(19),
r number(15,4),
d number(15,4),
f number(15,4),
c varchar2(1)
);

prescricoes teste:
216270 / 216283 / 216274 / 216271
*/
if (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') then
	open c01;
	loop
	fetch c01 into	cd_um_consumo_w,
				qt_dose_consumo_w,
				cd_um_prescricao_w,
				qt_dose_prescricao_w,
				qt_unitaria_w,
				nr_seq_material_w,
				nr_seq_horario_w,
				dt_horario_w,
				cd_um_paciente_w,
				qt_dose_paciente_w,
				cd_um_farmacia_w,
				qt_dose_farmacia_w,
				qt_dose_total_farmacia_w,
				cd_material_w,
				nm_usuario_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin

		/*
		insert into rep values
				(
				nr_prescricao_p,
				nr_seq_material_w,
				1,
				to_char(dt_horario_w,'dd/mm/yyyy hh24:mi:ss'),
				qt_dose_disponivel_w,
				qt_unitaria_w,
				qt_dispensar_w,
				null
				);
		*/
		
		

		if (cd_um_consumo_w = cd_um_prescricao_w) then
			
			/* atualizar dose disponivel */

			if (nr_seq_material_w <> nr_seq_material_ww) then
				qt_dose_disponivel_w := 0;
				qt_dose_total_disp_w := qt_dose_total_farmacia_w;
			end if;
			/* gerar dose dispensar */


			/* dose consumo nao supre dose necessaria */

			if (qt_dose_prescricao_w > qt_dose_consumo_w) and (qt_dose_disponivel_w < qt_unitaria_w) and (qt_dose_disponivel_w + qt_dose_consumo_w < qt_unitaria_w) then
        --select	qt_dose_consumo_w + trunc(dividir(qt_dose_prescricao_w,qt_dose_consumo_w)) * qt_dose_consumo_w

			 	--OS  261696 - Caldas/PH
				select	trunc(dividir(qt_dose_prescricao_w,qt_dose_consumo_w)) * qt_dose_consumo_w
				into STRICT	qt_dispensar_w
				;

				ie_cursor_w := '1';

			/* dose disponivel supre dose necessaria */

			elsif (qt_dose_disponivel_w > qt_unitaria_w) then

				qt_dispensar_w := null;

				ie_cursor_w := '2';

			/* dose consumo supre dose necessaria */

			else
				qt_dispensar_w	:= qt_dose_farmacia_w;

				ie_cursor_w := '3';

			end if;
			
			/* atualizar dispensacao horario */

			update	prescr_mat_hor
			set	qt_dispensar_hor	= qt_dispensar_w
			where	nr_sequencia		= nr_seq_horario_w
			and	coalesce(cd_motivo_baixa,0)	= 0;

			/* atualizar doses disponiveis */

			qt_dose_disponivel_w := qt_dose_disponivel_w + qt_dispensar_w - qt_unitaria_w;
			qt_dose_total_disp_w := qt_dose_total_disp_w - qt_dispensar_w;
			
		else
	
			qt_conversao_dose_w	:= 0;
			
			/* atualizar dose disponivel */

			if (nr_seq_material_w <> nr_seq_material_ww) then
				qt_dose_disponivel_w := 0;			
			end if;
	
			if (qt_dose_p IS NOT NULL AND qt_dose_p::text <> '') and (cd_unidade_medida_p IS NOT NULL AND cd_unidade_medida_p::text <> '') then
					select	coalesce(max(qt_conversao),1)
					into STRICT	qt_conversao_dose_w
					from	material_conversao_unidade
					where	cd_material			= cd_material_w
					and		cd_unidade_medida	= cd_unidade_medida_p;
					
					qt_unitaria_w	:= trunc(qt_dose_p / qt_conversao_dose_w,6);
			end if;
	
			/* gerar dose dispensar */

			if (qt_conversao_dose_w = 1) then			
				qt_dispensar_w := trunc(qt_unitaria_w);
			else

				if (cd_um_consumo_w = obter_unid_med_usua('ml')) then
					qt_dispensar_w := qt_unitaria_w;
				else
					if (mod(qt_unitaria_w,1) = 0) then
						qt_dispensar_w := trunc(qt_unitaria_w);	
					else
						qt_dispensar_w := trunc(qt_unitaria_w) + 1;
					end if;
				
				end if;

			if (qt_dispensar_w = 0) then
			  qt_dispensar_w := 1;
			end if;
        									
			end if;

			/* primeiro horario item */
		
			if (qt_dose_disponivel_w = 0) then
      
				update	prescr_mat_hor
				set	qt_dispensar_hor	= qt_dispensar_w
				where	nr_sequencia		= nr_seq_horario_w
				and	coalesce(cd_motivo_baixa,0)	= 0;

				qt_dose_disponivel_w := qt_dispensar_w - qt_unitaria_w;
	
				ie_cursor_w := '1';
	
			/* dose disponivel supre dose necessaria */

			elsif (qt_dose_disponivel_w >= qt_unitaria_w) then

				update	prescr_mat_hor
				set	qt_dispensar_hor	 = NULL
				where	nr_sequencia		= nr_seq_horario_w;

				qt_dose_disponivel_w := qt_dose_disponivel_w - qt_unitaria_w;
	
				ie_cursor_w := '2';

			/* dose disponivel supre parcialmente dose necessaria */

			elsif (qt_dose_disponivel_w >= 1) and (qt_dose_disponivel_w < qt_unitaria_w) then

				qt_dispensar_parcial_w	:= qt_dispensar_w - trunc(qt_dose_disponivel_w);

				update	prescr_mat_hor
				set	qt_dispensar_hor	= qt_dispensar_parcial_w
				where	nr_sequencia		= nr_seq_horario_w
				and	coalesce(cd_motivo_baixa,0)	= 0;

				qt_dose_disponivel_w	:= qt_dose_disponivel_w - trunc(qt_dose_disponivel_w) + qt_dispensar_w - qt_unitaria_w;

				ie_cursor_w := '3';

			/* dose disponivel nao supre dose necessaria */

			elsif (qt_dose_disponivel_w < qt_unitaria_w) then

				update	prescr_mat_hor
				set	qt_dispensar_hor	= qt_dispensar_w
				where	nr_sequencia		= nr_seq_horario_w
				and	coalesce(cd_motivo_baixa,0)	= 0;

				qt_dose_disponivel_w := qt_dose_disponivel_w + qt_dispensar_w - qt_unitaria_w;

				ie_cursor_w := '4';

			end if;
		end if;

    /*
		insert into rep values
				(
				nr_prescricao_p,
				nr_seq_material_w,
				2,
				to_char(dt_horario_w,'dd/mm/yyyy hh24:mi:ss'),
				qt_dose_disponivel_w,
				qt_unitaria_w,
				qt_dispensar_w,
				ie_cursor_w
				);
		*/
		nr_seq_material_ww := nr_seq_material_w;

		end;
	end loop;
	close c01;
end if;

if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE calcular_dispensar_hor_kit (nr_prescricao_p bigint, nr_seq_horario_p bigint, qt_dose_p bigint, cd_unidade_medida_p text) FROM PUBLIC;

