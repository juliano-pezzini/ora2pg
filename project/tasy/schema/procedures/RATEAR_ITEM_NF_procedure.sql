-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ratear_item_nf ( nr_seq_nota_p bigint, nr_seq_item_p bigint, nr_seq_criterio_p bigint, nm_usuario_p text, dt_vigencia_p timestamp) AS $body$
DECLARE


cd_centro_custo_w		integer;
cd_conta_contabil_w	varchar(20);
cd_conta_financ_w		bigint;
cd_material_w	bigint;
ds_erro_w		varchar(2000);
pr_rateio_w		double precision;
nr_item_nf_w		integer;
vl_total_item_nf_w		double precision;
vl_rateio_w		double precision;
vl_rateio_ww		double precision;
vl_total_rateio_w		double precision;
nr_sequencia_w		bigint;
vl_soma_itens_w		double precision;
vl_despesa_acessoria_w	double precision := 0;
ie_somar_despesa_w	varchar(1);
cd_estabelecimento_w	bigint;
vl_adicional_w		double precision := 0;
qt_registros_w		bigint;
dt_entrada_saida_w	timestamp;
ie_tipo_conta_w		bigint := 3;
ie_busca_conta_receita_w	varchar(1);
ie_operacao_bonif_w			varchar(1);
cd_operacao_nf_w		numeric(20);
cd_local_estoque_w		smallint;
cd_operacao_estoque_w	smallint;
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
cd_convenio_w			integer;
ie_tipo_convenio_w		smallint;
nr_interno_conta_w		bigint;
nr_seq_protocolo_w		bigint;
ie_regra_param_conta_w	varchar(1);

nr_seq_proc_interno_w		procedimento_paciente.nr_seq_proc_interno%type;

c00 CURSOR FOR
SELECT	nr_item_nf,
	vl_total_item_nf
from	nota_fiscal_item
where	nr_sequencia		= nr_seq_nota_p
and (nr_item_nf = nr_seq_item_p or nr_seq_item_p = 0);

c01 CURSOR FOR
SELECT	cd_centro_custo,
	cd_conta_contabil,
	cd_conta_financ,
	pr_rateio
from	ctb_criterio_rateio_item
where	nr_seq_criterio = nr_seq_criterio_p
and	coalesce(pr_rateio,0) > 0
and (dt_vigencia_p >= coalesce(dt_inicio_vigencia,dt_vigencia_p) and dt_vigencia_p <= coalesce(dt_fim_vigencia,dt_vigencia_p))
order by	pr_rateio;


BEGIN

select	cd_estabelecimento,
		dt_entrada_saida,
		cd_operacao_nf
into STRICT	cd_estabelecimento_w,
		dt_entrada_saida_w,
		cd_operacao_nf_w
from	nota_fiscal
where	nr_sequencia  = nr_seq_nota_p;

if (coalesce(nr_seq_protocolo_w,0) <> 0)  then

	select	b.ie_tipo_convenio
	into STRICT	ie_tipo_convenio_w
	from	convenio b,
			protocolo_convenio a
	where	a.cd_convenio	= b.cd_convenio
	and		a.nr_seq_protocolo	= nr_seq_protocolo_w;
	
elsif (coalesce(nr_interno_conta_w,0) <> 0) then

	select	b.ie_tipo_convenio
	into STRICT	ie_tipo_convenio_w
	from	convenio b,
			conta_paciente a
	where	a.cd_convenio_parametro	= b.cd_convenio
	and		a.nr_interno_conta		= nr_interno_conta_w;

end if;


select	obter_convenio_nf(nr_seq_nota_p)
into STRICT	cd_convenio_w
;

select 	cd_operacao_estoque
into STRICT	cd_operacao_estoque_w
from 	operacao_nota 
where 	cd_operacao_nf = cd_operacao_nf_w;

ie_busca_conta_receita_w := obter_param_usuario(40, 349, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_busca_conta_receita_w);
ie_regra_param_conta_w := obter_param_usuario(40, 364, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_regra_param_conta_w);

select 	obter_se_operacao_bonif(cd_operacao_nf_w)
into STRICT	ie_operacao_bonif_w
;

if (ie_busca_conta_receita_w = 'S') and (ie_operacao_bonif_w = 'S') then
	ie_tipo_conta_w := 2;
end if;

ie_somar_despesa_w	:= coalesce((obter_valor_param_usuario(40, 331, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w)), 'N');

select	sum(vl_total_item_nf)
into STRICT	vl_soma_itens_w
from	nota_fiscal_item
where	nr_sequencia		= nr_seq_nota_p;

if (ie_somar_despesa_w = 'S') then
	select	coalesce(vl_despesa_acessoria,0)
	into STRICT	vl_despesa_acessoria_w
	from	nota_fiscal
	where	nr_sequencia		= nr_seq_nota_p;
end if;

open c00;
loop
fetch c00 into
	nr_item_nf_w,
	vl_total_item_nf_w;
EXIT WHEN NOT FOUND; /* apply on c00 */
	begin

	vl_total_rateio_w	:= 0;
	vl_rateio_w		:= 0;
	
	delete	from nota_fiscal_item_rateio
	where	nr_seq_nota	= nr_seq_nota_p
	and		nr_item_nf	= nr_item_nf_w;

	select	count(*)
	into STRICT	qt_registros_w
	from	nota_fiscal_item
	where	nr_sequencia = nr_seq_nota_p
	and		nr_item_nf = nr_item_nf_w
	and		(cd_material IS NOT NULL AND cd_material::text <> '');
	
	open c01;
	loop
	fetch c01 into
		cd_centro_custo_w,
		cd_conta_contabil_w,
		cd_conta_financ_w,
		pr_rateio_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin

		select	nextval('nota_fiscal_item_rateio_seq')
		into STRICT	nr_sequencia_w
		;		
		
		if (ie_somar_despesa_w = 'S') and (vl_despesa_acessoria_w > 0) then
			
			if (vl_total_item_nf_w > 0) then
				vl_rateio_ww	:= ((dividir(vl_despesa_acessoria_w,100)) * (dividir((vl_total_item_nf_w * 100),vl_soma_itens_w))) + vl_total_item_nf_w;
				vl_rateio_w	:= dividir((vl_rateio_ww * pr_rateio_w), 100);
				vl_adicional_w	:= ((dividir(vl_despesa_acessoria_w,100)) * (dividir((vl_total_item_nf_w * 100),vl_soma_itens_w)));
				
			else
				vl_rateio_w	:= 0;
			end if;
			
		else
			if (vl_total_item_nf_w	> 0) then
				vl_rateio_w	:= dividir((vl_total_item_nf_w* pr_rateio_w), 100);
			else
				vl_rateio_w	:= 0;	
			end if;
			
		end if;

		begin
		
		if (coalesce(cd_conta_contabil_w,'0') = '0') and (ie_regra_param_conta_w = 'S') then
		
			if (qt_registros_w > 0) then -- Há material no item da nota
			
				select	cd_material,
						cd_local_estoque
				into STRICT	cd_material_w,
						cd_local_estoque_w
				from	nota_fiscal_item
				where	nr_sequencia = nr_seq_nota_p
				and		nr_item_nf = nr_item_nf_w;
			
				SELECT * FROM Define_Conta_Material(	cd_estabelecimento_w, cd_material_w, ie_tipo_conta_w, null, null, '', null, null, null, '', cd_local_estoque_w, cd_operacao_estoque_w, dt_entrada_saida_w, cd_conta_contabil_w, cd_centro_custo_w, '', '') INTO STRICT cd_conta_contabil_w, cd_centro_custo_w;
		
			else	-- Não há material, ou seja, há procedimento na nota
				
				ie_tipo_conta_w := 3;
				
				select	cd_procedimento,
						ie_origem_proced,
						nr_seq_proc_interno
				into STRICT	cd_procedimento_w,
						ie_origem_proced_w,
					nr_seq_proc_interno_w
				from	nota_fiscal_item
				where	nr_sequencia = nr_seq_nota_p
				and		nr_item_nf = nr_item_nf_w;
				
				SELECT * FROM Define_Conta_Procedimento(	cd_estabelecimento_w, cd_procedimento_w, ie_origem_proced_w, ie_tipo_conta_w, null, null, '', null, ie_tipo_convenio_w, cd_convenio_w, '', dt_entrada_saida_w, cd_conta_contabil_w, cd_centro_custo_w, '', '', '', '', null, null, null, null, null, nr_seq_proc_interno_w) INTO STRICT cd_conta_contabil_w, cd_centro_custo_w;
			end if;
		end if;
		
		insert	into nota_fiscal_item_rateio(
			nr_sequencia,
			nr_seq_nota,
			nr_item_nf,
			nr_seq_criterio,
			dt_atualizacao,
			nm_usuario,
			cd_centro_custo,
			cd_conta_contabil,
			cd_conta_financ,
			vl_rateio,
			ie_situacao,
			vl_desconto,
			vl_frete,
			vl_seguro,
			vl_despesa_acessoria,
			vl_tributo)
		values (nr_sequencia_w,
			nr_seq_nota_p,
			nr_item_nf_w,
			nr_seq_criterio_p,
			clock_timestamp(),
			nm_usuario_p,
			cd_centro_custo_w,
			cd_conta_contabil_w,
			cd_conta_financ_w,
			vl_rateio_w,
			'A',
			0,
			0,
			0,
			0,
			0);
		exception when others then
			ds_erro_w	:= SQLERRM(SQLSTATE);
			/*(-20011,'Erro ao gravar o rateio do item! ' || chr(13) || 'Seq: ' || nr_sequencia_w || chr(13) || ds_erro_w);*/

			CALL wheb_mensagem_pck.exibir_mensagem_abort(190145, 'NR_SEQUENCIA_W=' || nr_sequencia_w || ';' || 'DS_ERRO_W=' || ds_erro_w);
		end;
		end;
	end loop;
	close c01;

	select	sum(vl_rateio)
	into STRICT	vl_total_rateio_w
	from	nota_fiscal_item_rateio
	where	nr_seq_nota	= nr_seq_nota_p
	and	nr_item_nf	= nr_item_nf_w;

	if	(vl_total_rateio_w <> (vl_total_item_nf_w + vl_adicional_w)) then
	
		update	nota_fiscal_item_rateio
		set	vl_rateio	= vl_rateio + vl_total_item_nf_w - vl_total_rateio_w + vl_adicional_w
		where	nr_sequencia	= nr_sequencia_w;
	end if;
	end;
end loop;
close c00;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ratear_item_nf ( nr_seq_nota_p bigint, nr_seq_item_p bigint, nr_seq_criterio_p bigint, nm_usuario_p text, dt_vigencia_p timestamp) FROM PUBLIC;

