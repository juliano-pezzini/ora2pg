-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_interf_cab_susaih ( nr_seq_protocolo_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE



nr_sequencia_w			bigint;
qt_aih_protocolo_w			integer	:= 0;
qt_aih_lote_w			smallint	:= 0;
dt_mesano_apres_w		timestamp;
nr_seq_aih_prot_w			smallint	:= 0;
nr_seq_lote_w			bigint	:= 1;
cd_orgao_emissor_w		varchar(10);
cd_orgao_emissor_aih_w		varchar(10);
cd_cnes_hospital_w		varchar(7);
cd_mun_ibge_hosp_w		varchar(6);
nr_aih_w				bigint;
ie_identificacao_aih_w		varchar(2);
cd_especialidade_aih_w		smallint;
nr_interno_conta_w			bigint;
nm_paciente_w			varchar(60);
qt_contador_pb_w			bigint;
nr_seq_aih_w			bigint;
dt_emissao_w			sus_aih_unif.dt_emissao%type;
qt_reg_civil_w			bigint := 0;
qt_reg_opme_w			bigint := 0;


/* Obter AIH's do protocolo*/

c01 CURSOR FOR
SELECT	b.nr_aih,
	b.ie_identificacao_aih,
	b.cd_especialidade_aih,
	max(a.nr_interno_conta) nr_interno_conta,
	coalesce(cd_orgao_emissor_aih, cd_orgao_emissor_w) cd_orgao_emissor_aih,
	obter_pessoa_atendimento(a.nr_atendimento,'C') nm_paciente,
	sus_obter_se_agrupa_aih(b.cd_procedimento_real,b.nr_sequencia) nr_sequencia,
	trunc(b.dt_emissao,'month') dt_emissao
from	sus_aih_unif	b,
	conta_paciente	a
where	a.nr_seq_protocolo	= nr_seq_protocolo_p
and	a.nr_interno_conta	= b.nr_interno_conta
and	coalesce(a.ie_cancelamento::text, '') = ''
group by	b.nr_aih,
	b.ie_identificacao_aih,
	b.cd_especialidade_aih,
	coalesce(cd_orgao_emissor_aih, cd_orgao_emissor_w),
	obter_pessoa_atendimento(a.nr_atendimento,'C'),
	sus_obter_se_agrupa_aih(b.cd_procedimento_real,b.nr_sequencia),
	trunc(b.dt_emissao,'month');

type 		fetch_array is table of c01%rowtype;
s_array 	fetch_array;
i		integer := 1;
type vetor is table of fetch_array index by integer;
vetor_c01_w			vetor;

c02 CURSOR FOR
	SELECT	nr_interno_conta
	from 	conta_paciente
	where	nr_seq_protocolo = nr_seq_protocolo_p;

BEGIN
qt_contador_pb_w := 0;
--gravar_processo_longo('Exportar dados SUS' ,'GERAR_INTERF_CAB_SUSAIH',qt_contador_pb_w);
CALL gravar_processo_longo( wheb_mensagem_pck.get_texto(306693) ,'GERAR_INTERF_CAB_SUSAIH',qt_contador_pb_w);

/* Limpar tabelas transitórias */

delete	from w_susaih_interf_cab
where	nr_seq_protocolo = nr_seq_protocolo_p;

open c02;
loop
fetch c02 into
	nr_interno_conta_w;
EXIT WHEN NOT FOUND; /* apply on c02 */
	begin
	delete	from w_susaih_interf_conta
	where 	nr_interno_conta = nr_interno_conta_w;

	delete	from w_susaih_interf_item
	where 	nr_interno_conta = nr_interno_conta_w;

	delete	from w_susaih_interf_regcivil
	where 	nr_interno_conta = nr_interno_conta_w;

	delete	from w_susaih_interf_opm
	where 	nr_interno_conta = nr_interno_conta_w;
	end;
end loop;
close c02;

commit;

/* Obter quantidade de contas do protocolo */

select	count(distinct b.nr_aih)
into STRICT	qt_aih_protocolo_w
from	sus_aih_unif	b,
	conta_paciente	a
where	a.nr_seq_protocolo	= nr_seq_protocolo_p
and	a.nr_interno_conta	= b.nr_interno_conta;

/* Dados do protocolo*/

select	add_months(dt_mesano_referencia,1)
into STRICT	dt_mesano_apres_w
from	protocolo_convenio
where	nr_seq_protocolo	= nr_seq_protocolo_p;

/* Obter dados dos parametros da AIH*/

if	((coalesce(sus_parametros_aih_pck.get_cd_estabelecimento,0) <> cd_estabelecimento_p) or (coalesce(sus_parametros_aih_pck.get_dt_atualizacao,clock_timestamp()) > coalesce(sus_parametros_aih_pck.get_dt_geracao,clock_timestamp()))) then
	begin
	CALL gerar_sus_parametros_aih_pck(cd_estabelecimento_p);

	cd_orgao_emissor_w	:= sus_parametros_aih_pck.get_cd_orgao_emissor_aih;
	cd_cnes_hospital_w	:= lpad(sus_parametros_aih_pck.get_cd_cnes_hospital,7,'0');
	cd_mun_ibge_hosp_w	:= sus_parametros_aih_pck.get_cd_municipio_ibge;

	end;
else
	begin
	cd_orgao_emissor_w	:= sus_parametros_aih_pck.get_cd_orgao_emissor_aih;
	cd_cnes_hospital_w	:= lpad(sus_parametros_aih_pck.get_cd_cnes_hospital,7,'0');
	cd_mun_ibge_hosp_w	:= sus_parametros_aih_pck.get_cd_municipio_ibge;
	end;
end if;

/* Atualizar o Órgaão Emissor nas AIH's */

CALL baca_atualiza_org_emissor_aih(nr_seq_protocolo_p);

open c01;
loop
fetch c01 bulk collect into s_array limit 1000;
	vetor_c01_w(i) := s_array;
	i := i + 1;
EXIT WHEN NOT FOUND; /* apply on c01 */
end loop;
close c01;

for i in 1..vetor_c01_w.count loop
	begin
	s_array := vetor_c01_w(i);
	for z in 1..s_array.count loop
		begin

		nr_aih_w			:= s_array[z].nr_aih;
		ie_identificacao_aih_w		:= s_array[z].ie_identificacao_aih;
		cd_especialidade_aih_w		:= s_array[z].cd_especialidade_aih;
		nr_interno_conta_w		:= s_array[z].nr_interno_conta;
		cd_orgao_emissor_aih_w		:= s_array[z].cd_orgao_emissor_aih;
		nm_paciente_w			:= s_array[z].nm_paciente;
		nr_seq_aih_w			:= s_array[z].nr_sequencia;
		dt_emissao_w			:= s_array[z].dt_emissao;

		qt_contador_pb_w	:= qt_contador_pb_w + 1;
		CALL gravar_processo_longo(nm_paciente_w ||' - '||nr_interno_conta_w,'GERAR_INTERF_CAB_SUSAIH',qt_contador_pb_w);
		nr_seq_aih_prot_w	:= nr_seq_aih_prot_w + 1;
		/* qt_aih_lote_w	:= qt_aih_lote_w + 1; */

		/* Obter a sequence da tabela*/

		select	nextval('w_susaih_interf_cab_seq')
		into STRICT	nr_sequencia_w
		;

		insert into w_susaih_interf_cab(
			nr_sequencia,
			cd_estabelecimento,
			nr_seq_protocolo,
			qt_aih_protocolo,
			dt_mesano_apres,
			nr_seq_aih_prot,
			cd_orgao_emissor_aih,
			cd_cnes_hospital,
			cd_mun_ibge_hosp,
			nr_aih,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			ie_identificacao_aih,
			ie_especialidade_aih,
			nr_interno_conta,
			nr_seq_lote)
		values (	nr_sequencia_w,
			cd_estabelecimento_p,
			nr_seq_protocolo_p,
			qt_aih_protocolo_w,
			dt_mesano_apres_w,
			nr_seq_aih_prot_w,
			cd_orgao_emissor_aih_w,
			cd_cnes_hospital_w,
			cd_mun_ibge_hosp_w,
			nr_aih_w,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			ie_identificacao_aih_w,
			cd_especialidade_aih_w,
			nr_interno_conta_w,
			nr_seq_lote_w);

		CALL gerar_interf_item_susaih(nr_interno_conta_w, nm_usuario_p);
		CALL gerar_interf_conta_susaih(nr_interno_conta_w, nm_usuario_p);

		select	count(1)
		into STRICT	qt_reg_civil_w
		from	sus_registro_civil
		where	nr_aih	= nr_aih_w  LIMIT 1;

		if (qt_reg_civil_w > 0) then
			CALL gerar_interf_regcivil_susaih(nr_interno_conta_w, nm_usuario_p);
		end if;

		select	count(1)
		into STRICT	qt_reg_opme_w
		from	sus_aih_opm		b,
			procedimento_paciente	a
		where	a.nr_sequencia		= b.nr_seq_procedimento
		and	nr_interno_conta	= nr_interno_conta_w
		and	coalesce(a.cd_motivo_exc_conta::text, '') = ''  LIMIT 1;

		if (qt_reg_opme_w > 0) then
			CALL gerar_interf_opm_susaih(nr_interno_conta_w, nm_usuario_p);
		end if;

		commit;

		end;
	end loop;
	end;
end loop;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_interf_cab_susaih ( nr_seq_protocolo_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

