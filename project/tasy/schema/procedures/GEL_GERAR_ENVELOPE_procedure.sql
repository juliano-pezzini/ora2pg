-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gel_gerar_envelope ( cd_funcao_p bigint , nr_seq_prescricao_p bigint, nr_prescricao_p bigint, nr_seq_regra_p bigint, nr_seq_envelope_p INOUT bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_result_lab_w    bigint;
nr_seq_envelope_w    bigint;
nr_seq_item_w      bigint;
nr_seq_laudo_w      bigint;
ie_anatomia_w      varchar(1) := 'N';
nr_seq_exame_w      bigint;
ie_atualizar_status_w    varchar(2);
ie_confere_envelope_w    varchar(2);
ds_titulo_w      varchar(2000);
nr_seq_evento_w      bigint;
cd_funcao_w    bigint;
ie_integracao_ativa_w bigint;
nr_acesso_dicom_w varchar(20);
reg_integracao_w gerar_int_padrao.reg_integracao;
c03 CURSOR FOR
SELECT  a.nr_seq_evento
from  regra_envio_sms a
where  a.ie_evento_disp = 'AELP'
and  coalesce(a.ie_situacao,'A') = 'A';


BEGIN
if coalesce(cd_funcao_p,0) = 0 then
     cd_funcao_w := coalesce(obter_funcao_ativa,99050);
end if;

if (cd_funcao_w = 99050) then
ie_atualizar_status_w  :=  'S';
else
ie_atualizar_status_w  :=  coalesce(obter_valor_param_usuario(9047, 28, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento),'N');
ie_confere_envelope_w  :=  coalesce(obter_valor_param_usuario(9047, 29, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento),'N');
end if;

select  max(a.nr_sequencia)
into STRICT  nr_seq_result_lab_w
from  result_laboratorio a
where  a.nr_prescricao = nr_prescricao_p
and  a.nr_seq_prescricao = nr_seq_prescricao_p;

select  max(nr_sequencia)
into STRICT  nr_seq_laudo_w
from  laudo_paciente
where  nr_seq_prescricao = nr_seq_prescricao_p
and    nr_prescricao = nr_prescricao_p
and ((dt_liberacao IS NOT NULL AND dt_liberacao::text <> '') or obter_param_usuario_logado(9047,23) = 'S');

if (coalesce(nr_seq_laudo_w::text, '') = '') then
  select  max(a.nr_laudo)
  into STRICT  nr_seq_laudo_w
  from  procedimento_paciente a
  where  a.nr_sequencia_prescricao = nr_seq_prescricao_p
  and  a.nr_prescricao = nr_prescricao_p
  and  exists (
  SELECT 1 from laudo_paciente b
   where b.nr_sequencia = a.nr_laudo
   and ((b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '') or obter_param_usuario_logado(9047,23) = 'S'));
end if;

select  max(nr_seq_exame)
into STRICT  nr_seq_exame_w
from  prescr_procedimento
where  nr_prescricao = nr_prescricao_p
and  nr_sequencia = nr_seq_prescricao_p;

select   max(coalesce(ie_anatomia_patologica,'N'))
into STRICT  ie_anatomia_w
from  exame_laboratorio
where   nr_seq_exame = nr_seq_exame_w;


if (nr_seq_laudo_w IS NOT NULL AND nr_seq_laudo_w::text <> '') or (nr_seq_result_lab_w IS NOT NULL AND nr_seq_result_lab_w::text <> '') then

  if (nr_seq_envelope_p = 0) then

    select  nextval('envelope_laudo_seq')
    into STRICT  nr_seq_envelope_w
;

    insert into envelope_laudo(  nr_sequencia,
          dt_atualizacao,
          nm_usuario,
          dt_atualizacao_nrec,
          nm_usuario_nrec,
          dt_geracao,
          nr_seq_regra_envelope,
          nr_seq_status_envelope)
        values (nr_seq_envelope_w,
          clock_timestamp(),
          nm_usuario_p,
          clock_timestamp(),
          nm_usuario_p,
          clock_timestamp(),
          nr_seq_regra_p,
          10);


    if (ie_confere_envelope_w  = 'S') then
      begin
      CALL gel_confere_envelope(nr_seq_envelope_w,nm_usuario_p);
      end;
    end if;

    nr_seq_envelope_p := nr_seq_envelope_w;

  end if;

   select  nextval('envelope_laudo_item_seq')
  into STRICT  nr_seq_item_w
;
end if;

if (nr_seq_result_lab_w IS NOT NULL AND nr_seq_result_lab_w::text <> '') and (ie_anatomia_w <> 'S') then

  insert into envelope_laudo_item(nr_sequencia,
        dt_atualizacao,
        nm_usuario,
        dt_atualizacao_nrec,
        nm_usuario_nrec,
        nr_seq_result_lab,
        nr_seq_envelope,
        nr_prescricao,
        nr_seq_prescr)
      values (nr_seq_item_w,
        clock_timestamp(),
        nm_usuario_p,
        clock_timestamp(),
        nm_usuario_p,
        nr_seq_result_lab_w,
        nr_seq_envelope_p,
        nr_prescricao_p,
        nr_seq_prescricao_p);

  CALL gel_gravar_historico_envelope(null, nr_seq_result_lab_w, nr_seq_envelope_p, null, 'GE', nm_usuario_p);

elsif (nr_seq_laudo_w IS NOT NULL AND nr_seq_laudo_w::text <> '') then

  insert into envelope_laudo_item(nr_sequencia,
        dt_atualizacao,
        nm_usuario,
        dt_atualizacao_nrec,
        nm_usuario_nrec,
        nr_seq_laudo,
        nr_seq_envelope,
        nr_prescricao,
        nr_seq_prescr)
      values (nr_seq_item_w,
        clock_timestamp(),
        nm_usuario_p,
        clock_timestamp(),
        nm_usuario_p,
        nr_seq_laudo_w,
        nr_seq_envelope_p,
        nr_prescricao_p,
        nr_seq_prescricao_p);

  CALL gel_gravar_historico_envelope(nr_seq_laudo_w, null, nr_seq_envelope_p, null, 'GE', nm_usuario_p);

  if (ie_atualizar_status_w = 'S') then

    update   prescr_procedimento
    set  ie_status_execucao = '45'
    where  nr_prescricao = nr_prescricao_p
    and  nr_sequencia = nr_seq_prescricao_p;

  end if;

  select   a.ds_titulo_laudo
  into STRICT  ds_titulo_w
  from  laudo_paciente a
  where   a.nr_sequencia = nr_seq_laudo_w;

  open c03;
  loop
  fetch c03 into
    nr_seq_evento_w;
  EXIT WHEN NOT FOUND; /* apply on c03 */
    begin
    CALL gerar_evento_laudo_lab(nr_seq_evento_w,nm_usuario_p,nr_prescricao_p,null,null,'N',ds_titulo_w,'L');
    end;
  end loop;
  close c03;

end if;


select count(1) into STRICT ie_integracao_ativa_w
  from intpd_eventos
 where ie_evento = 200 and ie_situacao = 'A';

if (ie_integracao_ativa_w > 0) then
  select  max(nr_acesso_dicom)
    into STRICT  nr_acesso_dicom_w
    from  prescr_procedimento
   where  nr_prescricao = nr_prescricao_p
     and  nr_sequencia = nr_seq_prescricao_p;
    reg_integracao_w := gerar_int_padrao.gravar_integracao(200, nr_acesso_dicom_w, nm_usuario_p, reg_integracao_w);
end if;

ie_integracao_ativa_w := 0;

select count(1) into STRICT ie_integracao_ativa_w
  from intpd_eventos
 where ie_evento = 201 and ie_situacao = 'A';

if ( ie_integracao_ativa_w > 0) then
  select  coalesce(max(nr_acesso_dicom), 0)
    into STRICT  nr_acesso_dicom_w
    from  prescr_procedimento
   where  nr_prescricao = nr_prescricao_p
     and  nr_sequencia = nr_seq_prescricao_p;
   if (nr_acesso_dicom_w <> 0) then
      reg_integracao_w := gerar_int_padrao.gravar_integracao(201, nr_acesso_dicom_w, nm_usuario_p, reg_integracao_w);
   end if;
end if;

update   prescr_procedimento
set  ie_controle_envelope = 'N'
where  nr_prescricao = nr_prescricao_p
and  nr_sequencia = nr_seq_prescricao_p;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gel_gerar_envelope ( cd_funcao_p bigint , nr_seq_prescricao_p bigint, nr_prescricao_p bigint, nr_seq_regra_p bigint, nr_seq_envelope_p INOUT bigint, nm_usuario_p text) FROM PUBLIC;

