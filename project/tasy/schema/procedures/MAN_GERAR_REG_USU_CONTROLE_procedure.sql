-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE man_gerar_reg_usu_controle ( nr_seq_ordem_serv_p bigint, nm_usuario_p text, nr_sequencia_p INOUT bigint) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[ X ]  Objetos do dicionário [ X ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atenção:
-------------------------------------------------------------------------------------------------------------------

Referências:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
dt_saida_w			timestamp;
dt_entrada_w			timestamp;
qt_min_intervalo_w		integer;
qt_min_lanche_w			integer;
qt_min_normal_w			integer;
qt_min_extra_w			integer;
cd_estabelecimento_w		smallint	:= wheb_usuario_pck.get_cd_estabelecimento;
cd_perfil_w			integer	:= obter_perfil_ativo;
cd_funcao_w			integer	:= obter_funcao_ativa;
ie_gerar_horario_man_w		varchar(15)	:= 'N';
ie_permite_saida_dia_w		varchar(15)	:= 'N';
nr_seq_regra_horario_w		bigint;
hr_inicio_w			varchar(04);
hr_final_w			varchar(04);
nr_grupo_trabalho_w		bigint;
nr_grupo_planej_w		bigint;


BEGIN
ie_gerar_horario_man_w := obter_param_usuario(299, 243, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_gerar_horario_man_w);
ie_permite_saida_dia_w := obter_param_usuario(296, 69, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_permite_saida_dia_w);

begin
if (ie_gerar_horario_man_w = 'S') then

	select	coalesce(max(nr_grupo_trabalho),0),
		coalesce(max(nr_grupo_planej),0)
	into STRICT	nr_grupo_trabalho_w,
		nr_grupo_planej_w
	from	man_ordem_servico
	where	nr_sequencia = nr_seq_ordem_serv_p;

	select	coalesce(max(nr_sequencia),0)
	into STRICT	nr_seq_regra_horario_w
	from	man_horario_trabalho
	where	pkg_date_utils.get_WeekDay(clock_timestamp()) = ie_dia_semana
	and	substr(man_obter_se_hor_trab_lib(nr_sequencia, nr_grupo_planej_w, nr_grupo_trabalho_w,nm_usuario_p),1,1) = 'S';

	if (nr_seq_regra_horario_w > 0) then
		select	lpad(hr_inicio,4,0),
			lpad(hr_fim,4,0),
			qt_min_intervalo,
			qt_min_lanche
		into STRICT	hr_inicio_w,
			hr_final_w,
			qt_min_intervalo_w,
			qt_min_lanche_w
		from	man_horario_trabalho
		where	nr_sequencia	= nr_seq_regra_horario_w;

		if (coalesce(hr_inicio_w,'0000') <> '0000') then
			select	to_date(
				to_char(clock_timestamp(),'dd/mm/yyyy') || ' ' || substr(hr_inicio_w,1,2) || ':' || substr(hr_inicio_w,3,2) || ':' || '00',
					'dd/mm/yyyy hh24:mi:ss')
			into STRICT	dt_entrada_w
			;
		end if;

		if (coalesce(hr_final_w,'0000') <> '0000') then
			select	to_date(
				to_char(clock_timestamp(),'dd/mm/yyyy') || ' ' || substr(hr_final_w,1,2) || ':' || substr(hr_final_w,3,2) || ':' || '00',
					'dd/mm/yyyy hh24:mi:ss')
			into STRICT	dt_saida_w
			;
		end if;
		
		if (ie_permite_saida_dia_w = 'S') and (dt_entrada_w IS NOT NULL AND dt_entrada_w::text <> '') and (dt_saida_w IS NOT NULL AND dt_saida_w::text <> '') and (dt_entrada_w > dt_saida_w) then
			dt_saida_w := dt_saida_w + 1;
		end if;
	end if;
end if;

if (coalesce(qt_min_intervalo_w::text, '') = '') then
	select	Obter_Regra_Atributo2(	'USUARIO_CONTROLE',
					'QT_MIN_INTERVALO',
					0,
					'VLD',
					cd_estabelecimento_w,
					cd_perfil_w,
					cd_funcao_w,
					nm_usuario_p)
	into STRICT	qt_min_intervalo_w
	;
end if;

if (coalesce(qt_min_lanche_w::text, '') = '') then
	select	Obter_Regra_Atributo2(	'USUARIO_CONTROLE',
					'QT_MIN_LANCHE',
					0,
					'VLD',
					cd_estabelecimento_w,
					cd_perfil_w,
					cd_funcao_w,
					nm_usuario_p)
	into STRICT	qt_min_lanche_w
	;
end if;

select	Obter_Regra_Atributo2(	'USUARIO_CONTROLE',
				'QT_MIN_NORMAL',
				0,
				'VLD',
				cd_estabelecimento_w,
				cd_perfil_w,
				cd_funcao_w,
				nm_usuario_p)
into STRICT	qt_min_normal_w
;

select	Obter_Regra_Atributo2(	'USUARIO_CONTROLE',
				'QT_MIN_NORMAL',
				0,
				'VLD',
				cd_estabelecimento_w,
				cd_perfil_w,
				cd_funcao_w,
				nm_usuario_p)
into STRICT	qt_min_normal_w
;

select	Obter_Regra_Atributo2(	'USUARIO_CONTROLE',
				'QT_MIN_EXTRA',
				0,
				'VLD',
				cd_estabelecimento_w,
				cd_perfil_w,
				cd_funcao_w,
				nm_usuario_p)
into STRICT	qt_min_extra_w
;

select	nextval('usuario_controle_seq')
into STRICT	nr_sequencia_p
;

insert into usuario_controle(	nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_entrada,
		dt_saida,
		qt_min_intervalo,
		qt_min_os,
		qt_min_atividade,
		qt_min_total,
		qt_min_nreg,
		dt_referencia,
		qt_min_lanche,
		qt_min_normal,
		qt_min_extra)
values (	nr_sequencia_p,
		clock_timestamp(),
		nm_usuario_p,
		coalesce(dt_entrada_w,clock_timestamp()),
		dt_saida_w,
		coalesce(qt_min_intervalo_w,0),
		0,
		0,
		0,
		0,
		trunc(clock_timestamp()),
		coalesce(qt_min_lanche_w,0),
		coalesce(qt_min_normal_w,0),
		coalesce(qt_min_extra_w,0));
exception
when others then
	null;
end;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE man_gerar_reg_usu_controle ( nr_seq_ordem_serv_p bigint, nm_usuario_p text, nr_sequencia_p INOUT bigint) FROM PUBLIC;

