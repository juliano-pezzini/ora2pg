-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consiste_se_gera_ciclo ( nr_seq_paciente_p bigint, nr_ciclo_inicial_p bigint, nr_ciclo_final_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, ds_consistencia_p INOUT text) AS $body$
DECLARE


qt_dia_w		varchar(10);
dt_liberacao_w		timestamp;
ie_liberacao_mes_w	varchar(1)	:= 'N';
nr_ciclo_w		smallint;
qt_ciclo_mes_w		integer	:= 0;
ie_exige_calculo_w	varchar(1)	:= 'N';
qt_registro_w		bigint;
ie_exige_loco_reg_w	varchar(1)	:= 'N';


BEGIN

ds_consistencia_p := '';

select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
into STRICT	ie_exige_loco_reg_w
from	paciente_setor a,
	protocolo_medicacao b
where	a.nr_seq_paciente = nr_seq_paciente_p
and	b.cd_protocolo = a.cd_protocolo
and	b.nr_sequencia = a.nr_seq_medicacao
and	coalesce(a.nr_seq_loco_regional::text, '') = ''
and	coalesce(b.ie_exigir_loco_regional,'N') = 'S';

if (ie_exige_loco_reg_w = 'S') then
		ds_consistencia_p := ds_consistencia_p || 'É obrigatório selecionar o Loco regional para este subtipo de protocolo' || chr(13);
end if;

qt_dia_w := Obter_Param_Usuario(281, 311, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, qt_dia_w);
ie_liberacao_mes_w := Obter_Param_Usuario(281, 342, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_liberacao_mes_w);
ie_exige_calculo_w := Obter_Param_Usuario(281, 443, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_exige_calculo_w);
if (campo_numerico(qt_dia_w) > 0) then
	select	min(dt_liberacao)
	into STRICT	dt_liberacao_w
	from	paciente_setor_lib
	where	nr_seq_paciente = nr_seq_paciente_p
	and	nr_ciclo between coalesce(nr_ciclo_inicial_p,0) and coalesce(nr_ciclo_final_p,999)
	and	coalesce(dt_cancelamento::text, '') = '';

	if	((dt_liberacao_w + campo_numerico(qt_dia_w)) < clock_timestamp()) then
		ds_consistencia_p := ds_consistencia_p || 'A data limite para geração do ciclo era ' || to_char(dt_liberacao_w + campo_numerico(qt_dia_w),'dd/mm/yyyy hh24:mi:ss') || chr(13);
	end if;
end if;

if (ie_liberacao_mes_w	= 'S') then
	nr_ciclo_w	:= nr_ciclo_inicial_p;
	while nr_ciclo_w <= nr_ciclo_final_p loop
		begin
		select	count(*)
		into STRICT	qt_ciclo_mes_w
		from	paciente_setor_lib
		where	nr_seq_paciente	= nr_seq_paciente_p
		and	nr_ciclo	= coalesce(nr_ciclo_w,0)
		and	trunc(dt_liberacao,'month') = trunc(clock_timestamp(),'month')
		and	coalesce(dt_cancelamento::text, '') = '';
		nr_ciclo_w	:= nr_ciclo_w + 1;

		if (qt_ciclo_mes_w	= 0) then
			ds_consistencia_p	:= ds_consistencia_p || 'Ciclo não liberado no mesmo mês da geração [342]' || chr(13);
			nr_ciclo_w		:= nr_ciclo_final_p + 1; /* para sair do while */
		end if;
		end;
	end loop;
end if;

if (ie_exige_calculo_w	= 'S') then
	select	count(*)
	into STRICT	qt_registro_w
	from	paciente_protocolo_medic
	where	nr_seq_paciente	= nr_seq_paciente_p
	and	((coalesce(cd_unid_med_prescr::text, '') = '') or (coalesce(qt_dose_prescr::text, '') = ''));

	if (qt_registro_w	> 0) then
		ds_consistencia_p	:= ds_consistencia_p || obter_desc_expressao(711976) || chr(13);
	end if;
end if;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consiste_se_gera_ciclo ( nr_seq_paciente_p bigint, nr_ciclo_inicial_p bigint, nr_ciclo_final_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, ds_consistencia_p INOUT text) FROM PUBLIC;

