-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_event_copart ( nr_seq_reg_auxiliar_p ctb_livro_auxiliar.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) AS $body$
DECLARE

					
nr_contador_w 		                bigint := 0;
cd_conta_contabil_w	                conta_contabil.cd_conta_contabil%type;
dt_pagamento_w		                timestamp;
dt_vencimento_w		                timestamp;
dt_contabil_w		                timestamp;
nr_titulo_w		                bigint;
nr_nota_fiscal_w	                nota_fiscal.nr_nota_fiscal%type;
ie_tipo_relacao_w	                pls_prestador.ie_tipo_relacao%type;
cd_classif_w		                varchar(5) := '4.1.1';
dt_inicial_w		                timestamp;
dt_final_w		                timestamp;
dt_liberacao_w	                        ctb_livro_auxiliar.dt_liberacao%type;
ie_tipo_segurado_w                      ctb_livro_auxiliar.ie_tipo_segurado%type;
ie_tipo_protocolo_w	                ctb_livro_auxiliar.ie_tipo_protocolo%type;
ie_gerar_ind_classif_w                  ctb_livro_auxiliar.ie_gerar_ind_classif%type;
ie_copartic_faturar_w	                ctb_livro_auxiliar.ie_copartic_faturar%type;
ie_tipo_compartilhamento_w		pls_segurado_repasse.ie_tipo_compartilhamento%type;
ie_tipo_repasse_w			pls_segurado_repasse.ie_tipo_repasse%type;
dt_repasse_w				pls_segurado_repasse.dt_repasse%type;
dt_fim_repasse_w			pls_segurado_repasse.dt_fim_repasse%type;
ds_observacao_w		                varchar(255);
ds_observacao_item_w	                varchar(255);
ie_data_tipo_segurado_w			pls_parametros.ie_data_tipo_segurado%type;
dt_ref_repasse_w			pls_conta_proc.dt_procedimento%type;

c_medica CURSOR FOR
 	SELECT 	z.nr_sequencia,
		c.nr_sequencia nr_documento,
		t.nr_sequencia nr_seq_contrato,
		c.dt_emissao dt_emissao,
		coalesce(b.ie_ato_cooperado,a.ie_ato_cooperado) ie_ato_cooperado,
		p.ie_preco ie_modalidade_contrat,
		p.ie_tipo_contratacao ie_tipo_contratacao,
		p.ie_segmentacao ie_segmentacao,
		a.dt_procedimento dt_ocorrencia,
		z.dt_mes_competencia dt_conhecimento,
		r.nr_sequencia nr_seq_protocolo,
		null nr_seq_material,
		coalesce(b.cd_procedimento,a.cd_procedimento) cd_procedimento,
		coalesce(b.ie_origem_proced,a.ie_origem_proced) ie_origem_proced,
		substr(pls_obter_dados_segurado(s.nr_sequencia,'C'),1,255) cd_beneficiario,
		z.cd_conta_deb_provisao cd_conta_contrapartida,
		z.cd_conta_cred_provisao cd_conta_contabil,
		sum(a.vl_provisao) vl_evento,
		sum(z.vl_coparticipacao) vl_coparticipacao,
		s.nr_sequencia	nr_seq_segurado,
		b.nr_seq_prestador_pgto nr_seq_prestador,
		a.nr_seq_grupo_ans nr_seq_grupo_ans,
		y.nr_sequencia	nr_seq_coparticipacao,
		CASE WHEN p.ie_tipo_operacao='A' THEN  'SCA'  ELSE coalesce(p.nr_protocolo_ans, p.cd_scpa) END  nr_protocolo_ans,
		c.ie_tipo_segurado,
		'CM' ie_tipo_documento,
		s.nr_seq_pagador,
		e.nr_titulo,
		e.dt_liquidacao,
		c.nr_sequencia nr_seq_conta,
		t.nr_contrato,
		r.ie_tipo_protocolo,
		e.dt_pagamento_previsto,
		k.ie_tipo_grupo_ans,
		r.nr_seq_congenere,
		r.dt_mes_competencia
	FROM pls_conta_copartic_contab z, pls_protocolo_conta r, pls_conta_medica_resumo b, pls_conta c
LEFT OUTER JOIN pls_plano p ON (c.nr_seq_plano = p.nr_sequencia)
LEFT OUTER JOIN pls_segurado s ON (c.nr_seq_segurado = s.nr_sequencia)
LEFT OUTER JOIN pls_contrato t ON (s.nr_seq_contrato = t.nr_sequencia)
, pls_conta_proc a
LEFT OUTER JOIN ans_grupo_despesa k ON (a.nr_seq_grupo_ans = k.nr_sequencia)
, pls_conta_coparticipacao y
LEFT OUTER JOIN pls_mensalidade_segurado g ON (y.nr_seq_mensalidade_seg = g.nr_sequencia)
LEFT OUTER JOIN pls_mensalidade m ON (g.nr_seq_mensalidade = m.nr_sequencia)
LEFT OUTER JOIN pls_lote_mensalidade l ON (m.nr_seq_lote = l.nr_sequencia)
LEFT OUTER JOIN titulo_receber e ON (m.nr_sequencia = e.nr_seq_mensalidade)
WHERE c.nr_seq_protocolo 	= r.nr_sequencia   and c.nr_sequencia		= a.nr_seq_conta and a.nr_seq_conta 		= b.nr_seq_conta and a.nr_sequencia 		= b.nr_seq_conta_proc and c.nr_sequencia		= y.nr_seq_conta and y.nr_sequencia		= z.nr_seq_conta_copartic and a.nr_sequencia		= y.nr_seq_conta_proc and z.nr_seq_conta_resumo	= b.nr_sequencia      and z.dt_mes_competencia between dt_inicial_w and dt_final_w and (((ie_copartic_faturar_w = 'S')
	or (z.dt_mes_competencia between dt_inicial_w and dt_final_w))
	or (ie_copartic_faturar_w = 'S'
	and (coalesce(y.nr_seq_mensalidade_seg::text, '') = ''
	or ((y.nr_seq_mensalidade_seg IS NOT NULL AND y.nr_seq_mensalidade_seg::text <> '')
	and	l.dt_mesano_referencia > dt_final_w)))) and ((coalesce(ie_tipo_segurado_w,'X') = coalesce(c.ie_tipo_segurado,'X'))
	or (coalesce(ie_tipo_segurado_w,'X') = 'X')) and coalesce(ie_tipo_protocolo_w,r.ie_tipo_protocolo) = r.ie_tipo_protocolo and coalesce(ie_tipo_protocolo_w,'X') in ('C','X') and r.ie_tipo_protocolo = 'C' and (ie_gerar_ind_classif_w = 'S'
	or	z.cd_conta_cred_provisao in (	SELECT 	cd_conta_contabil
						from	conta_contabil
						where	ie_tipo = 'A'
						and	substr(ctb_obter_classif_conta(cd_conta_contabil, cd_classificacao, dt_inicio_vigencia),1,5) = cd_classif_w)) and ((r.ie_tipo_protocolo		in ('C','I','F')
	and	y.ie_status_coparticipacao	in ('D','S'))
	or (r.ie_tipo_protocolo		= 'R'
	and	y.ie_status_coparticipacao	<> 'N')) and y.ie_status_mensalidade <> 'C' and z.vl_coparticipacao <> 0 and c.ie_status = 'F' and not exists (	select	1
				from 	titulo_receber_desdob w
				where	w.nr_titulo_dest = e.nr_titulo)  -- Nao apresentar os titulos a receber originados do desdobramento. Ira trazer apenas o original.
 group by z.nr_sequencia,
		c.nr_sequencia,
		t.nr_sequencia,
		c.dt_emissao,
		coalesce(b.ie_ato_cooperado,a.ie_ato_cooperado),
		p.ie_preco,
		p.ie_tipo_contratacao,
		p.ie_segmentacao,
		a.dt_procedimento,
		z.dt_mes_competencia,
		r.nr_sequencia,
		coalesce(b.cd_procedimento,a.cd_procedimento),
		coalesce(b.ie_origem_proced,a.ie_origem_proced),
		substr(pls_obter_dados_segurado(s.nr_sequencia,'C'),1,255),
		z.cd_conta_deb_provisao,
		z.cd_conta_cred_provisao,
		s.nr_sequencia,
		b.nr_seq_prestador_pgto,
		a.nr_seq_grupo_ans,
		y.nr_sequencia,
		p.ie_tipo_operacao,
		p.nr_protocolo_ans,
		p.cd_scpa,
		c.ie_tipo_segurado,
		s.nr_seq_pagador,
		e.nr_titulo,
		e.dt_liquidacao,
		c.nr_sequencia,
		t.nr_contrato,
		r.ie_tipo_protocolo,
		e.dt_pagamento_previsto,
		k.ie_tipo_grupo_ans,
		r.nr_seq_congenere,
		r.dt_mes_competencia
	
union all

	select 	z.nr_sequencia,
		c.nr_sequencia nr_documento,
		t.nr_sequencia nr_seq_contrato,
		c.dt_emissao dt_emissao,
		coalesce(b.ie_ato_cooperado,a.ie_ato_cooperado) ie_ato_cooperado,
		p.ie_preco ie_modalidade_contrat,
		p.ie_tipo_contratacao ie_tipo_contratacao,
		p.ie_segmentacao ie_segmentacao,
		a.dt_atendimento dt_ocorrencia,
		z.dt_mes_competencia dt_conhecimento,
		r.nr_sequencia nr_seq_protocolo,
		a.nr_seq_material,
		null cd_procedimento,
		null ie_origem_proced,
		substr(pls_obter_dados_segurado(s.nr_sequencia,'C'),1,255) cd_beneficiario,
		z.cd_conta_deb_provisao cd_conta_contrapartida,
		z.cd_conta_cred_provisao cd_conta_contabil,
		sum(a.vl_provisao) vl_evento,
		sum(z.vl_coparticipacao) vl_coparticipacao,
		s.nr_sequencia	nr_seq_segurado,
		b.nr_seq_prestador_pgto nr_seq_prestador,
		a.nr_seq_grupo_ans nr_seq_grupo_ans,
		y.nr_sequencia	nr_seq_coparticipacao,
		CASE WHEN p.ie_tipo_operacao='A' THEN  'SCA'  ELSE coalesce(p.nr_protocolo_ans, p.cd_scpa) END  nr_protocolo_ans,
		c.ie_tipo_segurado,
		'CM' ie_tipo_documento,
		s.nr_seq_pagador,
		e.nr_titulo,
		e.dt_liquidacao,
		c.nr_sequencia nr_seq_conta,
		t.nr_contrato,
		r.ie_tipo_protocolo,
		e.dt_pagamento_previsto,
		k.ie_tipo_grupo_ans,
		r.nr_seq_congenere,
		r.dt_mes_competencia
	FROM pls_conta_copartic_contab z, pls_protocolo_conta r, pls_conta_medica_resumo b, pls_conta c
LEFT OUTER JOIN pls_plano p ON (c.nr_seq_plano = p.nr_sequencia)
LEFT OUTER JOIN pls_segurado s ON (c.nr_seq_segurado = s.nr_sequencia)
LEFT OUTER JOIN pls_contrato t ON (s.nr_seq_contrato = t.nr_sequencia)
, pls_conta_mat a
LEFT OUTER JOIN ans_grupo_despesa k ON (a.nr_seq_grupo_ans = k.nr_sequencia)
, pls_conta_coparticipacao y
LEFT OUTER JOIN pls_mensalidade_segurado g ON (y.nr_seq_mensalidade_seg = g.nr_sequencia)
LEFT OUTER JOIN pls_mensalidade m ON (g.nr_seq_mensalidade = m.nr_sequencia)
LEFT OUTER JOIN pls_lote_mensalidade l ON (m.nr_seq_lote = l.nr_sequencia)
LEFT OUTER JOIN titulo_receber e ON (m.nr_sequencia = e.nr_seq_mensalidade)
WHERE c.nr_seq_protocolo 	= r.nr_sequencia   and c.nr_sequencia		= a.nr_seq_conta and a.nr_seq_conta 		= b.nr_seq_conta and a.nr_sequencia 		= b.nr_seq_conta_mat and c.nr_sequencia		= y.nr_seq_conta and y.nr_sequencia		= z.nr_seq_conta_copartic and a.nr_sequencia		= y.nr_seq_conta_mat and z.nr_seq_conta_resumo	= b.nr_sequencia      and z.dt_mes_competencia between dt_inicial_w and dt_final_w and (((ie_copartic_faturar_w = 'S')
	or (z.dt_mes_competencia between dt_inicial_w and dt_final_w))
	or (ie_copartic_faturar_w = 'S'
	and (coalesce(y.nr_seq_mensalidade_seg::text, '') = ''
	or ((y.nr_seq_mensalidade_seg IS NOT NULL AND y.nr_seq_mensalidade_seg::text <> '')
	and	l.dt_mesano_referencia > dt_final_w)))) and ((coalesce(ie_tipo_segurado_w,'X') = coalesce(c.ie_tipo_segurado,'X'))
	or (coalesce(ie_tipo_segurado_w,'X') = 'X')) and coalesce(ie_tipo_protocolo_w,r.ie_tipo_protocolo) = r.ie_tipo_protocolo and coalesce(ie_tipo_protocolo_w,'X') in ('C','X') and r.ie_tipo_protocolo = 'C' and (ie_gerar_ind_classif_w = 'S'
	or	z.cd_conta_cred_provisao in (	select 	cd_conta_contabil
						from	conta_contabil
						where	ie_tipo = 'A'
						and	substr(ctb_obter_classif_conta(cd_conta_contabil, cd_classificacao, dt_inicio_vigencia),1,5) = cd_classif_w)) and z.vl_coparticipacao <> 0 and ((r.ie_tipo_protocolo		in ('C','I','F')
	and	y.ie_status_coparticipacao	in ('D','S'))
	or (r.ie_tipo_protocolo		= 'R'
	and	y.ie_status_coparticipacao	<> 'N')) and y.ie_status_mensalidade <> 'C' and c.ie_status = 'F' and not exists (	select	1
				from 	titulo_receber_desdob w
				where	w.nr_titulo_dest = e.nr_titulo)  -- Nao apresentar os titulos a receber originados do desdobramento. Ira trazer apenas o original.
 group by z.nr_sequencia,
		c.nr_sequencia,
		t.nr_sequencia,
		c.dt_emissao,
		coalesce(b.ie_ato_cooperado,a.ie_ato_cooperado),
		p.ie_preco,
		p.ie_tipo_contratacao,
		p.ie_segmentacao,
		a.dt_atendimento,
		z.dt_mes_competencia,
		r.nr_sequencia,
		a.nr_seq_material,
		substr(pls_obter_dados_conta_mat(coalesce(b.nr_seq_conta_mat,a.nr_sequencia),'O'),1,255),
		substr(pls_obter_dados_segurado(s.nr_sequencia,'C'),1,255),
		z.cd_conta_deb_provisao,
		z.cd_conta_cred_provisao,
		s.nr_sequencia,
		b.nr_seq_prestador_pgto,
		a.nr_seq_grupo_ans,
		y.nr_sequencia,
		p.ie_tipo_operacao,
		p.nr_protocolo_ans,
		p.cd_scpa,
		c.ie_tipo_segurado,
		s.nr_seq_pagador,
		e.nr_titulo,
		e.dt_liquidacao,
		c.nr_sequencia,
		t.nr_contrato,
		r.ie_tipo_protocolo,
		e.dt_pagamento_previsto,
		k.ie_tipo_grupo_ans,
		r.nr_seq_congenere,
		r.dt_mes_competencia
	
union all

	select 	z.nr_sequencia,
		c.nr_sequencia nr_documento,
		t.nr_sequencia nr_seq_contrato,
		c.dt_emissao dt_emissao,
		a.ie_ato_cooperado ie_ato_cooperado,
		p.ie_preco ie_modalidade_contrat,
		p.ie_tipo_contratacao ie_tipo_contratacao,
		p.ie_segmentacao ie_segmentacao,
		b.dt_procedimento dt_ocorrencia,
		z.dt_mes_competencia dt_conhecimento,
		r.nr_sequencia nr_seq_protocolo,
		null nr_seq_material,
		coalesce(a.cd_procedimento_internacao,b.cd_procedimento) cd_procedimento,
		coalesce(a.ie_origem_proced_internacao,b.ie_origem_proced) ie_origem_proced,
		substr(pls_obter_dados_segurado(s.nr_sequencia,'C'),1,255) cd_beneficiario,
		z.cd_conta_deb_provisao cd_conta_contrapartida,
		z.cd_conta_cred_provisao cd_conta_contabil,
		sum(b.vl_provisao) vl_evento,
		sum(z.vl_coparticipacao) vl_coparticipacao,
		s.nr_sequencia	nr_seq_segurado,
		c.nr_seq_prestador_exec nr_seq_prestador,
		a.nr_seq_grupo_ans nr_seq_grupo_ans,
		a.nr_sequencia	nr_seq_coparticipacao,
		CASE WHEN p.ie_tipo_operacao='A' THEN  'SCA'  ELSE coalesce(p.nr_protocolo_ans, p.cd_scpa) END  nr_protocolo_ans,
		c.ie_tipo_segurado,
		'CM' ie_tipo_documento,
		s.nr_seq_pagador,
		e.nr_titulo,
		e.dt_liquidacao,
		c.nr_sequencia nr_seq_conta,
		t.nr_contrato,
		r.ie_tipo_protocolo,
		e.dt_pagamento_previsto,
		k.ie_tipo_grupo_ans,
		r.nr_seq_congenere,
		r.dt_mes_competencia
	FROM pls_conta_copartic_contab z, pls_protocolo_conta r, pls_conta c
LEFT OUTER JOIN pls_plano p ON (c.nr_seq_plano = p.nr_sequencia)
LEFT OUTER JOIN pls_segurado s ON (c.nr_seq_segurado = s.nr_sequencia)
LEFT OUTER JOIN pls_contrato t ON (s.nr_seq_contrato = t.nr_sequencia)
, pls_conta_coparticipacao a
LEFT OUTER JOIN pls_mensalidade_segurado g ON (a.nr_seq_mensalidade_seg = g.nr_sequencia)
LEFT OUTER JOIN pls_mensalidade m ON (g.nr_seq_mensalidade = m.nr_sequencia)
LEFT OUTER JOIN pls_lote_mensalidade l ON (m.nr_seq_lote = l.nr_sequencia)
LEFT OUTER JOIN titulo_receber e ON (m.nr_sequencia = e.nr_seq_mensalidade)
, pls_conta_proc b
LEFT OUTER JOIN ans_grupo_despesa k ON (b.nr_seq_grupo_ans = k.nr_sequencia)
WHERE c.nr_seq_protocolo 	= r.nr_sequencia   and c.nr_sequencia		= a.nr_seq_conta and a.nr_seq_conta_proc	= b.nr_sequencia and a.nr_sequencia		= z.nr_seq_conta_copartic and b.nr_sequencia		= a.nr_seq_conta_proc and z.nr_seq_conta		= a.nr_seq_conta      and z.dt_mes_competencia between dt_inicial_w and dt_final_w and (((ie_copartic_faturar_w = 'S')
	or (z.dt_mes_competencia between dt_inicial_w and dt_final_w))
	or (ie_copartic_faturar_w = 'S'
	and (coalesce(a.nr_seq_mensalidade_seg::text, '') = ''
	or ((a.nr_seq_mensalidade_seg IS NOT NULL AND a.nr_seq_mensalidade_seg::text <> '')
	and	l.dt_mesano_referencia > dt_final_w)))) and ((coalesce(ie_tipo_segurado_w,'X') = coalesce(c.ie_tipo_segurado,'X'))
	or (coalesce(ie_tipo_segurado_w,'X') = 'X')) and coalesce(ie_tipo_protocolo_w,r.ie_tipo_protocolo) = r.ie_tipo_protocolo and coalesce(ie_tipo_protocolo_w,'X') in ('I','R','X') and r.ie_tipo_protocolo in ('I','R') and (ie_gerar_ind_classif_w = 'S'
	or	z.cd_conta_cred_provisao  in (	select 	cd_conta_contabil
						from	conta_contabil
						where	ie_tipo = 'A'
						and	substr(ctb_obter_classif_conta(cd_conta_contabil, cd_classificacao, dt_inicio_vigencia),1,5) = cd_classif_w)) and z.vl_coparticipacao <> 0 and ((r.ie_tipo_protocolo		in ('C','I','F')
	and	a.ie_status_coparticipacao	in ('D','S'))
	or (r.ie_tipo_protocolo		= 'R'
	and	a.ie_status_coparticipacao	<> 'N')) and a.ie_status_mensalidade <> 'C' and c.ie_status = 'F' and not exists (	select	1
				from 	titulo_receber_desdob w
				where	w.nr_titulo_dest = e.nr_titulo)  -- Nao apresentar os titulos a receber originados do desdobramento. Ira trazer apenas o original.
 group by z.nr_sequencia,
		c.nr_sequencia,
		t.nr_sequencia,
		c.dt_emissao,
		a.ie_ato_cooperado,
		p.ie_preco,
		p.ie_tipo_contratacao,
		p.ie_segmentacao,
		b.dt_procedimento,
		z.dt_mes_competencia,
		r.nr_sequencia,
		coalesce(a.cd_procedimento_internacao,b.cd_procedimento),
		coalesce(a.ie_origem_proced_internacao,b.ie_origem_proced),
		substr(pls_obter_dados_segurado(s.nr_sequencia,'C'),1,255),
		z.cd_conta_deb_provisao,
		z.cd_conta_cred_provisao,
		s.nr_sequencia,
		c.nr_seq_prestador_exec,
		a.nr_seq_grupo_ans,
		a.nr_sequencia,
		p.ie_tipo_operacao,
		p.nr_protocolo_ans,
		p.cd_scpa,
		c.ie_tipo_segurado,
		s.nr_seq_pagador,
		e.nr_titulo,
		e.dt_liquidacao,
		c.nr_sequencia,
		t.nr_contrato,
		r.ie_tipo_protocolo,
		e.dt_pagamento_previsto,
		k.ie_tipo_grupo_ans,
		r.nr_seq_congenere,
		r.dt_mes_competencia
	
union all

	select 	z.nr_sequencia,
		c.nr_sequencia nr_documento,
		t.nr_sequencia nr_seq_contrato,
		c.dt_emissao dt_emissao,
		a.ie_ato_cooperado ie_ato_cooperado,
		p.ie_preco ie_modalidade_contrat,
		p.ie_tipo_contratacao ie_tipo_contratacao,
		p.ie_segmentacao ie_segmentacao,
		b.dt_atendimento dt_ocorrencia,
		z.dt_mes_competencia dt_conhecimento,
		r.nr_sequencia nr_seq_protocolo,
		b.nr_seq_material,
		null cd_procedimento,
		null ie_origem_proced,
		substr(pls_obter_dados_segurado(s.nr_sequencia,'C'),1,255) cd_beneficiario,
		z.cd_conta_deb_provisao cd_conta_contrapartida,
		z.cd_conta_cred_provisao cd_conta_contabil,
		sum(b.vl_provisao) vl_evento,
		sum(z.vl_coparticipacao) vl_coparticipacao,
		s.nr_sequencia	nr_seq_segurado,
		c.nr_seq_prestador_exec nr_seq_prestador,
		a.nr_seq_grupo_ans nr_seq_grupo_ans,
		a.nr_sequencia	nr_seq_coparticipacao,
		CASE WHEN p.ie_tipo_operacao='A' THEN  'SCA'  ELSE coalesce(p.nr_protocolo_ans, p.cd_scpa) END  nr_protocolo_ans,
		c.ie_tipo_segurado,
		'CM' ie_tipo_documento,
		s.nr_seq_pagador,
		e.nr_titulo,
		e.dt_liquidacao,
		c.nr_sequencia nr_seq_conta,
		t.nr_contrato,
		r.ie_tipo_protocolo,
		e.dt_pagamento_previsto,
		k.ie_tipo_grupo_ans,
		r.nr_seq_congenere,
		r.dt_mes_competencia
	FROM pls_conta_copartic_contab z, pls_protocolo_conta r, pls_conta c
LEFT OUTER JOIN pls_plano p ON (c.nr_seq_plano = p.nr_sequencia)
LEFT OUTER JOIN pls_segurado s ON (c.nr_seq_segurado = s.nr_sequencia)
LEFT OUTER JOIN pls_contrato t ON (s.nr_seq_contrato = t.nr_sequencia)
, pls_conta_coparticipacao a
LEFT OUTER JOIN pls_mensalidade_segurado g ON (a.nr_seq_mensalidade_seg = g.nr_sequencia)
LEFT OUTER JOIN pls_mensalidade m ON (g.nr_seq_mensalidade = m.nr_sequencia)
LEFT OUTER JOIN pls_lote_mensalidade l ON (m.nr_seq_lote = l.nr_sequencia)
LEFT OUTER JOIN titulo_receber e ON (m.nr_sequencia = e.nr_seq_mensalidade)
, pls_conta_mat b
LEFT OUTER JOIN ans_grupo_despesa k ON (b.nr_seq_grupo_ans = k.nr_sequencia)
WHERE c.nr_seq_protocolo 	= r.nr_sequencia   and c.nr_sequencia		= a.nr_seq_conta and a.nr_seq_conta_mat	= b.nr_sequencia and a.nr_sequencia		= z.nr_seq_conta_copartic and z.nr_seq_conta		= a.nr_seq_conta and b.nr_sequencia		= a.nr_seq_conta_mat      and z.dt_mes_competencia between dt_inicial_w and dt_final_w and (((ie_copartic_faturar_w = 'S')
	or (z.dt_mes_competencia between dt_inicial_w and dt_final_w))
	or (ie_copartic_faturar_w = 'S'
	and (coalesce(a.nr_seq_mensalidade_seg::text, '') = ''
	or ((a.nr_seq_mensalidade_seg IS NOT NULL AND a.nr_seq_mensalidade_seg::text <> '')
	and	l.dt_mesano_referencia > dt_final_w)))) and ((coalesce(ie_tipo_segurado_w,'X') = coalesce(c.ie_tipo_segurado,'X'))
	or (coalesce(ie_tipo_segurado_w,'X') = 'X')) and coalesce(ie_tipo_protocolo_w,r.ie_tipo_protocolo) = r.ie_tipo_protocolo and coalesce(ie_tipo_protocolo_w,'X') in ('I','R','X') and r.ie_tipo_protocolo in ('I','R') and (ie_gerar_ind_classif_w = 'S'
	or	z.cd_conta_cred_provisao  in (	select 	cd_conta_contabil
						from	conta_contabil
						where	ie_tipo = 'A'
						and	substr(ctb_obter_classif_conta(cd_conta_contabil, cd_classificacao, dt_inicio_vigencia),1,5) = cd_classif_w)) and z.vl_coparticipacao <> 0 and c.ie_status = 'F' and ((r.ie_tipo_protocolo		in ('C','I','F')
	and	a.ie_status_coparticipacao	in ('D','S'))
	or (r.ie_tipo_protocolo		= 'R'
	and	a.ie_status_coparticipacao	<> 'N')) and a.ie_status_mensalidade <> 'C' and not exists (	select	1
				from 	titulo_receber_desdob w
				where	w.nr_titulo_dest = e.nr_titulo)  -- Nao apresentar os titulos a receber originados do desdobramento. Ira trazer apenas o original.
 group by z.nr_sequencia,
		c.nr_sequencia,
		t.nr_sequencia,
		c.dt_emissao,
		a.ie_ato_cooperado,
		p.ie_preco,
		p.ie_tipo_contratacao,
		p.ie_segmentacao,
		b.dt_atendimento,
		z.dt_mes_competencia,
		r.nr_sequencia,
		b.nr_seq_material,
		substr(pls_obter_dados_conta_mat(a.nr_sequencia,'O'),1,255),
		substr(pls_obter_dados_segurado(s.nr_sequencia,'C'),1,255),
		z.cd_conta_deb_provisao,
		z.cd_conta_cred_provisao,
		s.nr_sequencia,
		c.nr_seq_prestador_exec,
		a.nr_seq_grupo_ans,
		a.nr_sequencia,
		p.ie_tipo_operacao,
		p.nr_protocolo_ans,
		p.cd_scpa,
		c.ie_tipo_segurado,
		s.nr_seq_pagador,
		e.nr_titulo,
		e.dt_liquidacao,
		c.nr_sequencia,
		t.nr_contrato,
		r.ie_tipo_protocolo,
		e.dt_pagamento_previsto,
		k.ie_tipo_grupo_ans,
		r.nr_seq_congenere,
		r.dt_mes_competencia
	order by nr_documento;

vet_medica 	c_medica%rowtype;


BEGIN

CALL wheb_usuario_pck.set_ie_executar_trigger('N');

select	trunc(dt_inicial,'dd'),
	fim_dia(dt_final), 
	dt_liberacao, 
	ie_tipo_segurado, 
	ie_tipo_protocolo, 
	ie_gerar_ind_classif, 
	ie_copartic_faturar
into STRICT	dt_inicial_w,
	dt_final_w,
	dt_liberacao_w,
	ie_tipo_segurado_w,
	ie_tipo_protocolo_w,
	ie_gerar_ind_classif_w,
	ie_copartic_faturar_w
from 	ctb_livro_auxiliar
where   nr_sequencia = nr_seq_reg_auxiliar_p;

select	coalesce(max(a.ie_data_tipo_segurado),'A')
into STRICT	ie_data_tipo_segurado_w
from	pls_parametros a
where	a.cd_estabelecimento = cd_estabelecimento_p;

select	substr(obter_desc_expressao(922923),1,255)
into STRICT	ds_observacao_w
;

delete
from	pls_aux_event_copart a
where	nr_seq_reg_auxiliar = nr_seq_reg_auxiliar_p;

commit;

open c_medica;
loop
fetch c_medica into
	vet_medica;
EXIT WHEN NOT FOUND; /* apply on c_medica */
	begin
	nr_contador_w 		:= nr_contador_w + 1;
	dt_contabil_w		:= vet_medica.dt_conhecimento;
	
	if (ie_data_tipo_segurado_w = 'A') then
		dt_ref_repasse_w	:= vet_medica.dt_ocorrencia;
	else
		dt_ref_repasse_w	:= vet_medica.dt_mes_competencia;
	end if;
	
	SELECT * FROM pls_obter_dados_repasse(	dt_ref_repasse_w, vet_medica.nr_seq_segurado, vet_medica.nr_seq_congenere, ie_tipo_repasse_w, ie_tipo_compartilhamento_w, dt_repasse_w, dt_fim_repasse_w) INTO STRICT ie_tipo_repasse_w, ie_tipo_compartilhamento_w, dt_repasse_w, dt_fim_repasse_w;

	select	max(a.ie_tipo_relacao)
	into STRICT	ie_tipo_relacao_w
	from	pls_prestador	a
	where	a.nr_sequencia	= vet_medica.nr_seq_prestador;
		
	ds_observacao_item_w	:= null;

	if (vet_medica.ie_tipo_segurado in ('C','I','T')) then
		ds_observacao_item_w	:= ds_observacao_w;
	end if;

	insert into pls_aux_event_copart(
			nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_titulo,
			nr_documento,
			nr_seq_contrato,
			nr_contrato,
			dt_emissao,
			dt_realizacao,
			dt_aviso,
			dt_contabil,
			nr_seq_material,
			cd_procedimento,
			ie_origem_proced,
			nr_seq_segurado,
			ie_tipo_vinculo,
			ie_ato_cooperado,
			ie_tipo_modalidade,
			ie_tipo_contratacao,
			ie_tipo_segmentacao,
			vl_evento,
			vl_coparticipacao,
			cd_conta_debito,
			cd_conta_credito,
			nr_seq_reg_auxiliar,
			nr_seq_prestador,
			nr_seq_grupo_ans,
			nr_registro_produto,
			ie_tipo_documento,
			ie_tipo_segurado,
			nr_seq_protocolo,
			nr_seq_pagador,
			nr_seq_conta,
			dt_pagamento,
			dt_vencimento,
			ie_tipo_protocolo,
			ie_tipo_evento,
			ds_observacao,
			ie_tipo_compartilhamento,
			ie_tipo_repasse,
			dt_inicio_compartilhamento,
			dt_fim_compartilhamento)
		values (	nextval('pls_aux_event_copart_seq'),
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			vet_medica.nr_titulo,
			vet_medica.nr_documento,
			vet_medica.nr_seq_contrato,
			vet_medica.nr_contrato,
			vet_medica.dt_emissao,
			vet_medica.dt_ocorrencia,
			vet_medica.dt_conhecimento,
			dt_contabil_w,
			vet_medica.nr_seq_material,
			vet_medica.cd_procedimento,
			vet_medica.ie_origem_proced,
			vet_medica.nr_seq_segurado,
			ie_tipo_relacao_w,
			vet_medica.ie_ato_cooperado,
			vet_medica.ie_modalidade_contrat,
			vet_medica.ie_tipo_contratacao,
			vet_medica.ie_segmentacao,
			vet_medica.vl_evento,
			vet_medica.vl_coparticipacao,
			vet_medica.cd_conta_contrapartida,
			vet_medica.cd_conta_contabil,
			nr_seq_reg_auxiliar_p,
			vet_medica.nr_seq_prestador,
			vet_medica.nr_seq_grupo_ans,
			vet_medica.nr_protocolo_ans,
			vet_medica.ie_tipo_documento,
			vet_medica.ie_tipo_segurado,
			vet_medica.nr_seq_protocolo,
			vet_medica.nr_seq_pagador,
			vet_medica.nr_seq_conta,
			vet_medica.dt_liquidacao,
			vet_medica.dt_pagamento_previsto,
			vet_medica.ie_tipo_protocolo,
			vet_medica.ie_tipo_grupo_ans,
			ds_observacao_item_w,
			ie_tipo_compartilhamento_w,
			ie_tipo_repasse_w,
			dt_repasse_w,
			dt_fim_repasse_w);

	if (mod(nr_contador_w, 1000) = 0) then
		commit;
	end if;

	end;
end loop;
close c_medica;

update	ctb_livro_auxiliar
set	qt_registros	= nr_contador_w
where	nr_sequencia	= nr_seq_reg_auxiliar_p;

commit;

CALL wheb_usuario_pck.set_ie_executar_trigger('S');

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_event_copart ( nr_seq_reg_auxiliar_p ctb_livro_auxiliar.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) FROM PUBLIC;

