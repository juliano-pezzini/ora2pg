-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualiza_cnes_prof ( nr_cpf_p text, nr_pis_p text, dt_nascimento_p text, cd_pessoa_fisica_p text, nm_mae_p text, cd_mun_p text, ie_sexo_p text, nr_livro_certidao_p text, nr_folha_certidao_p text, nr_termo_cert_nasc_p text, dt_emissao_certidao_p text, nr_identidade_p text, dt_emissao_identidade_p text, dt_chegada_brasil_p text, nr_ctps_p text, nr_serie_ctps_p text, sg_uf_ctps_p text, dt_emissao_ctps_p text, ds_endereco_p text, nr_endereco_p text, ds_complemento_p text, ds_bairro_p text, cd_cep_p text, sg_uf_p text, sg_estado_nasc_p text, ds_certidao_p text, ds_nacionalidade_p text, cd_agencia_p text, nr_conta_p text, nr_cns_p text, nm_usuario_p text, nm_pai_p text, nr_telefone_p text, cd_tipo_logradouro_p text, nr_portaria_nat_p text, dt_naturalizacao_pf_p text, cd_mun_ibge_residencia_p text, ds_email_p text, nr_cnh_p text, nm_profissional_p text, nr_seq_identificacao_p bigint, dt_atualizacao_p text, ie_sus_p text) AS $body$
DECLARE


dt_nascimento_w			pessoa_fisica.dt_nascimento%type 		:= to_date(dt_nascimento_p,'yyyy/mm/dd');
dt_emissao_certidao_w		pessoa_fisica.dt_emissao_cert_casamento%type 	:= to_date(dt_emissao_certidao_p,'yyyy/mm/dd');
dt_emissao_identidade_w		pessoa_fisica.dt_emissao_cert_casamento%type 	:= to_date(dt_emissao_identidade_p,'yyyy/mm/dd');
dt_chegada_brasil_w		pessoa_fisica.dt_chegada_brasil%type 		:= to_date(dt_chegada_brasil_p,'yyyy/mm/dd');
dt_emissao_ctps_w		pessoa_fisica.dt_emissao_ctps%type 		:= to_date(dt_emissao_ctps_p,'yyyy/mm/dd');
dt_naturalizacao_pf_w		pessoa_fisica.dt_naturalizacao_pf%type 		:= to_date(dt_naturalizacao_pf_p,'yyyy/mm/dd');
dt_atualizacao_w		pessoa_fisica.dt_atualizacao%type 		:= to_date(dt_atualizacao_p,'yyyy/mm/dd');
tag_pais_w	varchar(15);


BEGIN

if (ie_sus_p IS NOT NULL AND ie_sus_p::text <> '') then
    update  cnes_profissional
    set	dt_atualizacao 		= dt_atualizacao_w,
        nm_usuario		= nm_usuario_p,
        ie_sus  = ie_sus_p
    where	nr_seq_identificacao	= nr_seq_identificacao_p
    and	cd_pessoa_fisica	= cd_pessoa_fisica_p;
end if;

if (nr_cpf_p <> '' or
	(nr_cpf_p IS NOT NULL AND nr_cpf_p::text <> '')) then
	update	pessoa_fisica
	set	nr_cpf = nr_cpf_p
	where	cd_pessoa_fisica = cd_pessoa_fisica_p;
end if;

if (nr_pis_p <> '' or
	(nr_pis_p IS NOT NULL AND nr_pis_p::text <> '')) then
	update	pessoa_fisica
	set	nr_pis_pasep = nr_pis_p
	where	cd_pessoa_fisica = cd_pessoa_fisica_p;
end if;

if (dt_nascimento_p <> '' or
	(dt_nascimento_p IS NOT NULL AND dt_nascimento_p::text <> '')) then
	update	pessoa_fisica
	set	dt_nascimento = dt_nascimento_w
	where	cd_pessoa_fisica = cd_pessoa_fisica_p;
end if;

if ( nm_mae_p <> '' or
	(nm_mae_p IS NOT NULL AND nm_mae_p::text <> '')) then
	update	compl_pessoa_fisica
	set	nm_contato  = nm_mae_p
	where	cd_pessoa_fisica = cd_pessoa_fisica_p
	and	ie_tipo_complemento = 5;
end if;	

if ( cd_mun_p <> '' or
	(cd_mun_p IS NOT NULL AND cd_mun_p::text <> '')) then
	update	pessoa_fisica
	set	cd_municipio_ibge = cd_mun_p
	where	cd_pessoa_fisica = cd_pessoa_fisica_p;
end if;

if ( ie_sexo_p <> '' or
	(ie_sexo_p IS NOT NULL AND ie_sexo_p::text <> '')) then
	update	pessoa_fisica
	set	ie_sexo = ie_sexo_p
	where	cd_pessoa_fisica = cd_pessoa_fisica_p;
end if;

if ( nr_livro_certidao_p <> '' or
	(nr_livro_certidao_p IS NOT NULL AND nr_livro_certidao_p::text <> '')) then
	update	pessoa_fisica
	set	nr_livro_cert_nasc = nr_livro_certidao_p
	where	cd_pessoa_fisica = cd_pessoa_fisica_p;
end if;

if ( nr_folha_certidao_p <> '' or
	(nr_folha_certidao_p IS NOT NULL AND nr_folha_certidao_p::text <> '')) then
	update	pessoa_fisica
	set	nr_folha_cert_nasc = nr_folha_certidao_p
	where	cd_pessoa_fisica = cd_pessoa_fisica_p;
end if;

if ( nr_termo_cert_nasc_p <> '' or
	(nr_termo_cert_nasc_p IS NOT NULL AND nr_termo_cert_nasc_p::text <> '')) then
	update	pessoa_fisica
	set	nr_termo_cert_nasc = nr_termo_cert_nasc_p
	where	cd_pessoa_fisica = cd_pessoa_fisica_p;
end if;

if ( dt_emissao_certidao_p <> '' or
	(dt_emissao_certidao_p IS NOT NULL AND dt_emissao_certidao_p::text <> '')) then
	update	pessoa_fisica
	set	dt_emissao_cert_casamento = dt_emissao_certidao_w
	where	cd_pessoa_fisica = cd_pessoa_fisica_p;
end if;

if ( nr_identidade_p <> '' or
	(nr_identidade_p IS NOT NULL AND nr_identidade_p::text <> '')) then
	update	pessoa_fisica
	set	nr_identidade = nr_identidade_p
	where	cd_pessoa_fisica = cd_pessoa_fisica_p;
end if;

if ( dt_emissao_identidade_p <> '' or
	(dt_emissao_identidade_p IS NOT NULL AND dt_emissao_identidade_p::text <> '')) then
	update	pessoa_fisica
	set	dt_emissao_ci = dt_emissao_identidade_w
	where	cd_pessoa_fisica = cd_pessoa_fisica_p;
end if;

if ( dt_chegada_brasil_p <> '' or
	(dt_chegada_brasil_p IS NOT NULL AND dt_chegada_brasil_p::text <> '')) then
	update	pessoa_fisica
	set	dt_chegada_brasil = dt_chegada_brasil_w
	where	cd_pessoa_fisica = cd_pessoa_fisica_p;
end if;

if ( nr_ctps_p <> '' or
	(nr_ctps_p IS NOT NULL AND nr_ctps_p::text <> '')) then
	update	pessoa_fisica
	set	nr_ctps = nr_ctps_p
	where	cd_pessoa_fisica = cd_pessoa_fisica_p;
end if;

if ( nr_serie_ctps_p <> '' or
	(nr_serie_ctps_p IS NOT NULL AND nr_serie_ctps_p::text <> '')) then
	update	pessoa_fisica
	set	nr_serie_ctps = nr_serie_ctps_p
	where	cd_pessoa_fisica = cd_pessoa_fisica_p;
end if;

if ( sg_uf_ctps_p <> '' or
	(sg_uf_ctps_p IS NOT NULL AND sg_uf_ctps_p::text <> '')) then
	update	pessoa_fisica
	set	uf_emissora_ctps = sg_uf_ctps_p
	where	cd_pessoa_fisica = cd_pessoa_fisica_p;
end if;

if ( dt_emissao_ctps_p <> '' or
	(dt_emissao_ctps_p IS NOT NULL AND dt_emissao_ctps_p::text <> '')) then
	update	pessoa_fisica
	set	dt_emissao_ctps = dt_emissao_ctps_w
	where	cd_pessoa_fisica = cd_pessoa_fisica_p;
end if;

if ( ds_endereco_p <> '' or
	(ds_endereco_p IS NOT NULL AND ds_endereco_p::text <> '')) then
	update	compl_pessoa_fisica
	set	ds_endereco = ds_endereco_p
	where	cd_pessoa_fisica = cd_pessoa_fisica_p
	and	ie_tipo_complemento = 1;
end if;		

if ( nr_endereco_p <> '' or
	(nr_endereco_p IS NOT NULL AND nr_endereco_p::text <> '')) then
		select	max(ds_locale)
		into STRICT	tag_pais_w
		from	user_locale 
		where	nm_user = nm_usuario_p;

		if (tag_pais_w = 'de_DE')then
			update	compl_pessoa_fisica
			set	ds_compl_end = nr_endereco_p
			where	cd_pessoa_fisica = cd_pessoa_fisica_p
			and	ie_tipo_complemento = 1;
		else
			update	compl_pessoa_fisica
			set	nr_endereco = nr_endereco_p
			where	cd_pessoa_fisica = cd_pessoa_fisica_p
			and	ie_tipo_complemento = 1;
		end if;	
end if;	

if ( ds_complemento_p <> '' or
	(ds_complemento_p IS NOT NULL AND ds_complemento_p::text <> '')) then
	update	compl_pessoa_fisica
	set	ds_complemento = ds_complemento_p
	where	cd_pessoa_fisica = cd_pessoa_fisica_p
	and	ie_tipo_complemento = 1;
end if;	

if ( ds_bairro_p <> '' or
	(ds_bairro_p IS NOT NULL AND ds_bairro_p::text <> '')) then
	update	compl_pessoa_fisica
	set	ds_bairro = ds_bairro_p
	where	cd_pessoa_fisica = cd_pessoa_fisica_p
	and	ie_tipo_complemento = 1;
end if;

if ( cd_cep_p <> '' or
	(cd_cep_p IS NOT NULL AND cd_cep_p::text <> '')) then
	update	compl_pessoa_fisica
	set	cd_cep = cd_cep_p
	where	cd_pessoa_fisica = cd_pessoa_fisica_p
	and	ie_tipo_complemento = 1;
end if;

if ( sg_uf_p <> '' or
	(sg_uf_p IS NOT NULL AND sg_uf_p::text <> '')) then
	update	compl_pessoa_fisica
	set	sg_estado = sg_uf_p
	where	cd_pessoa_fisica = cd_pessoa_fisica_p
	and	ie_tipo_complemento = 1;
end if;

if ( ds_nacionalidade_p <> '' or
	(ds_nacionalidade_p IS NOT NULL AND ds_nacionalidade_p::text <> '')) then
	update	pessoa_fisica
	set	cd_nacionalidade = ds_nacionalidade_p
	where	cd_pessoa_fisica = cd_pessoa_fisica_p;
end if;

if ( cd_agencia_p <> '' or
	(cd_agencia_p IS NOT NULL AND cd_agencia_p::text <> '')) then
	update	pessoa_fisica_conta
	set	cd_agencia_bancaria = cd_agencia_p
	where	cd_pessoa_fisica = cd_pessoa_fisica_p;
end if;

if ( nr_conta_p <> '' or
	(nr_conta_p IS NOT NULL AND nr_conta_p::text <> '')) then
	update	pessoa_fisica_conta
	set	nr_conta = nr_conta_p
	where	cd_pessoa_fisica = cd_pessoa_fisica_p;
end if;

if ( nr_cns_p <> '' or
	(nr_cns_p IS NOT NULL AND nr_cns_p::text <> '')) then
	update	pessoa_fisica
	set	nr_cartao_nac_sus = nr_cns_p
	where	cd_pessoa_fisica = cd_pessoa_fisica_p;
end if;

if ( nm_pai_p <> '' or
	(nm_pai_p IS NOT NULL AND nm_pai_p::text <> '')) then
	update	compl_pessoa_fisica
	set	nm_contato  = nm_pai_p
	where	cd_pessoa_fisica = cd_pessoa_fisica_p
	and	ie_tipo_complemento = 4;
end if;	

if ( nr_telefone_p <> '' or
	(nr_telefone_p IS NOT NULL AND nr_telefone_p::text <> '')) then
	update	compl_pessoa_fisica
	set	nr_telefone  = nr_telefone_p
	where	cd_pessoa_fisica = cd_pessoa_fisica_p
	and	ie_tipo_complemento = 1;
end if;	

if ( cd_tipo_logradouro_p <> '' or
	(cd_tipo_logradouro_p IS NOT NULL AND cd_tipo_logradouro_p::text <> '')) then
	update	compl_pessoa_fisica
	set	cd_tipo_logradouro  = cd_tipo_logradouro_p
	where	cd_pessoa_fisica = cd_pessoa_fisica_p
	and	ie_tipo_complemento = 1;
end if;	

if ( nr_portaria_nat_p <> '' or
	(nr_portaria_nat_p IS NOT NULL AND nr_portaria_nat_p::text <> '')) then
	update	pessoa_fisica
	set	nr_portaria_nat = nr_portaria_nat_p
	where	cd_pessoa_fisica = cd_pessoa_fisica_p;
end if;

if ( sg_estado_nasc_p <> '' or
	(sg_estado_nasc_p IS NOT NULL AND sg_estado_nasc_p::text <> '')) then
	update	pessoa_fisica
	set	sg_estado_nasc = sg_estado_nasc_p
	where	cd_pessoa_fisica = cd_pessoa_fisica_p;
end if;

if ( dt_emissao_identidade_p <> '' or
	(dt_emissao_identidade_p IS NOT NULL AND dt_emissao_identidade_p::text <> '')) then
	update	pessoa_fisica
	set	dt_naturalizacao_pf = dt_naturalizacao_pf_w
	where	cd_pessoa_fisica = cd_pessoa_fisica_p;
end if;

if ( cd_mun_ibge_residencia_p <> '' or
	(cd_mun_ibge_residencia_p IS NOT NULL AND cd_mun_ibge_residencia_p::text <> '')) then
	update	compl_pessoa_fisica
	set	cd_municipio_ibge  = cd_mun_ibge_residencia_p
	where	cd_pessoa_fisica = cd_pessoa_fisica_p
	and	ie_tipo_complemento = 1;
end if;	

if ( ds_email_p <> '' or
	(ds_email_p IS NOT NULL AND ds_email_p::text <> '')) then
	update	compl_pessoa_fisica
	set	ds_email  = ds_email_p
	where	cd_pessoa_fisica = cd_pessoa_fisica_p
	and	ie_tipo_complemento = 1;
end if;	

if ( nr_cnh_p <> '' or
	(nr_cnh_p IS NOT NULL AND nr_cnh_p::text <> '')) then
	update	pessoa_fisica
	set	nr_cnh = nr_cnh_p
	where	cd_pessoa_fisica = cd_pessoa_fisica_p;
end if;

if ( nm_profissional_p <> '' or
	(nm_profissional_p IS NOT NULL AND nm_profissional_p::text <> '')) then
	update	pessoa_fisica
	set	nm_pessoa_fisica = nm_profissional_p
	where	cd_pessoa_fisica = cd_pessoa_fisica_p;
end if;


commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualiza_cnes_prof ( nr_cpf_p text, nr_pis_p text, dt_nascimento_p text, cd_pessoa_fisica_p text, nm_mae_p text, cd_mun_p text, ie_sexo_p text, nr_livro_certidao_p text, nr_folha_certidao_p text, nr_termo_cert_nasc_p text, dt_emissao_certidao_p text, nr_identidade_p text, dt_emissao_identidade_p text, dt_chegada_brasil_p text, nr_ctps_p text, nr_serie_ctps_p text, sg_uf_ctps_p text, dt_emissao_ctps_p text, ds_endereco_p text, nr_endereco_p text, ds_complemento_p text, ds_bairro_p text, cd_cep_p text, sg_uf_p text, sg_estado_nasc_p text, ds_certidao_p text, ds_nacionalidade_p text, cd_agencia_p text, nr_conta_p text, nr_cns_p text, nm_usuario_p text, nm_pai_p text, nr_telefone_p text, cd_tipo_logradouro_p text, nr_portaria_nat_p text, dt_naturalizacao_pf_p text, cd_mun_ibge_residencia_p text, ds_email_p text, nr_cnh_p text, nm_profissional_p text, nr_seq_identificacao_p bigint, dt_atualizacao_p text, ie_sus_p text) FROM PUBLIC;

