-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_comunic_iniciativa ( ie_opcao_p text, nr_seq_obj_bsc_p bigint, nr_sequencia_p bigint, nm_usuario_p text) AS $body$
DECLARE

--VARIAVEIS CURSOR 01 									
ds_mensagem_w		varchar(4000);	
ie_email_w		varchar(1);
ie_comunicacao_interna_w	varchar(1);
ds_titulo			varchar(80);
nr_seq_regra_w		bigint;

--VARIAVEIS CURSOR 02
ie_responsavel_2		varchar(5);

--VARIAVEIS DE SUBSTITUIÇÃO
nr_iniciativa_w		bigint;		
nm_solicitante_w		varchar(255);
nm_responsavel_w		varchar(255);
ds_descricao_w		varchar(255);
ds_estagio_w		varchar(255);
dt_fim_previsto_w		timestamp;
dt_inicio_previsto_w	timestamp;
nm_resp_indicador_w	varchar(255);
nm_indicador_vinculado_w	varchar(255);
cd_solicitante_w		varchar(10);
cd_pf_resp_bsc_w		varchar(10);
ds_historico_w		varchar(4000);
qt_historico_w		bigint;
nr_seq_conv_w		varchar(50);
cd_responsavel_indicador_w	varchar(10);

ds_email_destino_w		varchar(255);
ds_email_origem_w		varchar(255);
ds_titulo_w		bsc_regra_envio_ci.ds_titulo%type;
ds_email_w		usuario.ds_email%type;
ie_responsavel_w		bsc_usuario_comunicacao.ie_responsavel%type;
nr_seq_indicador_w		bigint;
ds_dano_w		varchar(4000);
cd_executor_resp_w	varchar(10);

--Variaveis para controle
ds_cod_pf_util_ci_w	varchar(4000);
ie_enviou_ci_w		varchar(1);
ds_cod_pf_util_email_w	varchar(4000);
ie_enviou_email_w	varchar(1);
cd_pf_resp_w	ple_objetivo.cd_pf_resp%type;
nr_seq_obj_bsc_w	man_ordem_servico.nr_seq_obj_bsc%type;
ds_executores_w		varchar(4000);

C01 CURSOR FOR  --BUSCA SE O EVENTO ENVIA E-MAIL/CI
	SELECT 	ds_titulo,		
		ie_email,
		ie_comunicacao_interna,
		nr_sequencia
	from 	bsc_regra_envio_ci
	where 	1 = 1
	and	ie_situacao = 'A'		
	and	ie_evento = ie_opcao_p;	

	
C02 CURSOR FOR   --BUSCA O TIPO DE RESPONSÁVEL QUE RECEBERÁ O AVISO
	SELECT 	ie_responsavel
	from   	bsc_usuario_comunicacao
	where  	1 = 1
	and	ie_situacao = 'A'
	and    	nr_seq_regra = nr_seq_regra_w;	
	
	
C03 CURSOR FOR  --BUSCA OS RESPONSÁVEIS PELO INDICADOR
	SELECT	a.cd_pessoa_fisica
	from	bsc_ind_resp a,
		bsc_indicador b,
		man_ordem_servico c
	where	1 = 1
	and	b.ie_situacao = 'A'
	and	b.nr_sequencia = a.nr_seq_indicador
	and	b.nr_sequencia = c.nr_seq_indicador_bsc
	and	b.nr_sequencia = nr_seq_indicador_w;

	
C04 CURSOR FOR  --BUSCA OS EXECUTOR
	SELECT	distinct substr(Obter_Pessoa_Fisica_Usuario(e.nm_usuario_exec, 'C'),1,255) cd_pessoa_fisica
	from	man_ordem_servico c,
		MAN_ORDEM_SERVICO_EXEC e
	where	1 = 1
	and   c.nr_sequencia = e.nr_seq_ordem
	and	c.nr_sequencia = nr_iniciativa_w;
	

BEGIN
if (nr_seq_obj_bsc_p IS NOT NULL AND nr_seq_obj_bsc_p::text <> '') and (ie_opcao_p IS NOT NULL AND ie_opcao_p::text <> '') then

	select  nr_sequencia,
		substr(obter_nome_pf(cd_pessoa_solicitante),1,255), --SOLICITANTE
		substr(obter_nome_pf(cd_pf_resp_bsc),1,255), --INICIATIVA
		ds_dano_breve,
		substr(obter_desc_estagio_proc(nr_seq_estagio),1,60),
		dt_fim_previsto,
		dt_inicio_previsto,
		substr(obter_desc_bsc_indicador(nr_seq_indicador_bsc),1,80),
		cd_pessoa_solicitante,
		cd_pf_resp_bsc,
		nr_seq_indicador_bsc,
		ds_dano,
		nr_seq_obj_bsc
	into STRICT	nr_iniciativa_w,
		nm_solicitante_w,
		nm_responsavel_w,
		ds_descricao_w,
		ds_estagio_w,
		dt_fim_previsto_w,
		dt_inicio_previsto_w,			
		nm_indicador_vinculado_w,			
		cd_solicitante_w,
		cd_pf_resp_bsc_w,
		nr_seq_indicador_w,
		ds_dano_w,
		nr_seq_obj_bsc_w
	from 	man_ordem_servico 	
	where 	1 = 1
	and 	nr_sequencia = nr_sequencia_p;

open C01;
loop
fetch C01 into
	ds_titulo_w,	
	ie_email_w,
	ie_comunicacao_interna_w,
	nr_seq_regra_w;
EXIT WHEN NOT FOUND; /* apply on C01 */

	begin
	
	select	max(ds_email)
	into STRICT	ds_email_w
	from	usuario
	where	nm_usuario = nm_usuario_p;
	
	nr_seq_conv_w := converte_rtf_string('	select	x.ds_relat_tecnico
			from	man_ordem_serv_tecnico x
			where	x.nr_sequencia = (	select	max(a.nr_sequencia)
						from	man_ordem_serv_tecnico a
						where	a.dt_liberacao is not null
						and	a.nr_seq_ordem_serv = :nr_seq_ordem)', nr_sequencia_p, nm_usuario_p, nr_seq_conv_w);

	select 	count(*)
	into STRICT	qt_historico_w
	from	tasy_conversao_rtf
	where	nr_sequencia = nr_seq_conv_w;
	
	if (qt_historico_w > 0) then
	
	begin
	select 	ds_texto
	into STRICT	ds_historico_w
	from	tasy_conversao_rtf
	where	nr_sequencia = nr_seq_conv_w;
	exception when others then
		/*Este tratamento de exceção é necessário devido ao estouro de tamanho de long */

		ds_historico_w	:= null;
	end;
	end if;
	ds_executores_w	:= '';
	open C04;
	loop
	fetch C04 into
		cd_executor_resp_w;
	EXIT WHEN NOT FOUND; /* apply on C04 */
		begin																
		ds_executores_w := substr(ds_executores_w || obter_nome_pf(cd_executor_resp_w) || chr(13) || chr(10),1,4000);
		end;
	end loop;
	close C04;	
	--obter_texto_tasy(262537, wheb_usuario_pck.get_nr_seq_idioma)
	
nr_seq_conv_w := converte_rtf_html('	select	ds_comunicado
			from 	bsc_regra_envio_ci
			where 	nr_sequencia = :nr_sequencia', nr_seq_regra_w, nm_usuario_p, nr_seq_conv_w);

select 	count(*)
into STRICT	qt_historico_w
from	tasy_conversao_rtf
where	nr_sequencia = nr_seq_conv_w;

if (qt_historico_w > 0) then
	begin
	select 	ds_texto
	into STRICT	ds_mensagem_w
	from	tasy_conversao_rtf
	where	nr_sequencia = nr_seq_conv_w;
	exception when others then
		/*Este tratamento de exceção é necessário devido ao estouro de tamanho de long */

		ds_mensagem_w	:= null;
	end;
end if;	
	
ds_mensagem_w	:= replace_macro(ds_mensagem_w,'@NR_INICIATIVA',obter_texto_tasy(353798, wheb_usuario_pck.get_nr_seq_idioma) || ' '||nr_iniciativa_w);
ds_mensagem_w	:= replace_macro(ds_mensagem_w,'@NM_SOLICITANTE',obter_texto_tasy(353792, wheb_usuario_pck.get_nr_seq_idioma) || ' '||nm_solicitante_w);
ds_mensagem_w	:= replace_macro(ds_mensagem_w,'@NM_RESPONSAVEL',obter_texto_tasy(353794, wheb_usuario_pck.get_nr_seq_idioma) || ' '||nm_responsavel_w);
ds_mensagem_w	:= replace_macro(ds_mensagem_w,'@DS_DESCRICAO',obter_texto_tasy(353795, wheb_usuario_pck.get_nr_seq_idioma) || ' '||ds_descricao_w);
ds_mensagem_w	:= replace_macro(ds_mensagem_w,'@DS_ESTAGIO',obter_texto_tasy(353809, wheb_usuario_pck.get_nr_seq_idioma) || ' '||ds_estagio_w);
ds_mensagem_w	:= replace_macro(ds_mensagem_w,'@DT_FIM_PREVISTO',obter_texto_tasy(353810, wheb_usuario_pck.get_nr_seq_idioma) || ' '||dt_fim_previsto_w);
ds_mensagem_w	:= replace_macro(ds_mensagem_w,'@DT_INICIO_PREVISTO',obter_texto_tasy(353811, wheb_usuario_pck.get_nr_seq_idioma) || ' '||dt_inicio_previsto_w);
ds_mensagem_w	:= replace_macro(ds_mensagem_w,'@NM_INDICADOR_VINCULADO',obter_texto_tasy(353812, wheb_usuario_pck.get_nr_seq_idioma) || ' '||nm_indicador_vinculado_w);
ds_mensagem_w	:= replace_macro(ds_mensagem_w,'@DS_HISTORICO', coalesce(ds_historico_w,''));
ds_mensagem_w	:= replace_macro(ds_mensagem_w,'@DS_DANO', obter_texto_tasy(353813, wheb_usuario_pck.get_nr_seq_idioma) || ' '||ds_dano_w);
ds_mensagem_w	:= replace_macro(ds_mensagem_w,'@DS_EXECUTORES', obter_texto_tasy(353814, wheb_usuario_pck.get_nr_seq_idioma) || chr(10) ||ds_executores_w);
		
	--INÍCIO DA ROTINA DE ENVIO DE E-MAIL
	if ( ie_email_w ='S') and (ds_email_w IS NOT NULL AND ds_email_w::text <> '') then
	
		open C02;
		loop
		fetch C02 into	
			ie_responsavel_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin
			if (((ie_responsavel_w = 'R') or (ie_responsavel_w = 'RRI') or (ie_responsavel_w = 'SR') or (ie_responsavel_w = 'SRRI'))
							and ((obter_compl_pf(cd_pf_resp_bsc_w,2,'M') IS NOT NULL AND (obter_compl_pf(cd_pf_resp_bsc_w,2,'M'))::text <> ''))) then						
				select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END 
				into STRICT	ie_enviou_email_w
				
				where	ds_cod_pf_util_email_w like '%'||cd_pf_resp_bsc_w||',%';
				
				if (ie_enviou_email_w = 'N') then
					CALL enviar_email(ds_titulo_w,ds_mensagem_w, ds_email_w, obter_compl_pf(cd_pf_resp_bsc_w,2,'M'),nm_usuario_p,'M');				
					ds_cod_pf_util_email_w := cd_pf_resp_bsc_w ||','||ds_cod_pf_util_email_w;
				end if;					
			end if;

			if ((ie_responsavel_w = 'S') or (ie_responsavel_w = 'SR') or (ie_responsavel_w = 'SRI') or (ie_responsavel_w = 'SRRI'))
						and ((obter_compl_pf(cd_solicitante_w,2,'M') IS NOT NULL AND (obter_compl_pf(cd_solicitante_w,2,'M'))::text <> '')) then				
				select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
				into STRICT	ie_enviou_email_w
				
				where	ds_cod_pf_util_email_w like '%'||cd_solicitante_w||',%';
				
				if (ie_enviou_email_w = 'N') then				
					CALL enviar_email(ds_titulo_w,ds_mensagem_w, ds_email_w, obter_compl_pf(cd_solicitante_w,2,'M'),nm_usuario_p,'M');
					ds_cod_pf_util_email_w := cd_solicitante_w ||','||ds_cod_pf_util_email_w;
				end if;	
			end if;
			
			if ((ie_responsavel_w = 'RI') or (ie_responsavel_w = 'RRI') or (ie_responsavel_w = 'SRI') or (ie_responsavel_w = 'SRRI')) then			
				open C03;
				loop
				fetch C03 into	
					cd_responsavel_indicador_w;
				EXIT WHEN NOT FOUND; /* apply on C03 */
					begin
					if ((obter_compl_pf(cd_responsavel_indicador_w,2,'M') IS NOT NULL AND (obter_compl_pf(cd_responsavel_indicador_w,2,'M'))::text <> '')) then						
						select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
						into STRICT	ie_enviou_email_w
						
						where	ds_cod_pf_util_email_w like '%'||cd_responsavel_indicador_w||',%';
						
						if (ie_enviou_email_w = 'N') then				
							CALL enviar_email(ds_titulo_w,ds_mensagem_w, ds_email_w,obter_compl_pf(cd_responsavel_indicador_w,2,'M'),nm_usuario_p,'M');		
							ds_cod_pf_util_email_w := 	cd_responsavel_indicador_w ||','||ds_cod_pf_util_email_w;
						end if;	
					end if;
					end;			
				end loop;
				close C03;						
			end if;	
			
			if (ie_responsavel_w = 'EP') then
				open C04;
				loop
				fetch C04 into
					cd_executor_resp_w;
				EXIT WHEN NOT FOUND; /* apply on C04 */
					begin																
					if ((obter_compl_pf(cd_executor_resp_w,2,'M') IS NOT NULL AND (obter_compl_pf(cd_executor_resp_w,2,'M'))::text <> '')) then						
						select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
						into STRICT	ie_enviou_email_w
						
						where	ds_cod_pf_util_email_w like '%'||cd_executor_resp_w||',%';
						if (ie_enviou_email_w = 'N') then							
							CALL enviar_email(ds_titulo_w,ds_mensagem_w, ds_email_w,obter_compl_pf(cd_executor_resp_w,2,'M'),nm_usuario_p,'M');
							ds_cod_pf_util_email_w := 	cd_executor_resp_w ||','||ds_cod_pf_util_email_w;
						end if;						
					end if;
					end;
				end loop;
				close C04;
			end if;
			end;
			
			if (ie_responsavel_w = 'RO') then
				select	max(p.cd_pf_resp)
				into STRICT	cd_pf_resp_w
				from	ple_objetivo p
				where 	p.nr_sequencia = nr_seq_obj_bsc_w;					
				if ((obter_compl_pf(cd_pf_resp_w,2,'M') IS NOT NULL AND (obter_compl_pf(cd_pf_resp_w,2,'M'))::text <> '')) then										
					CALL enviar_email(ds_titulo_w,ds_mensagem_w, ds_email_w,obter_compl_pf(cd_pf_resp_w,2,'M'),nm_usuario_p,'M');
					ds_cod_pf_util_email_w := 	cd_pf_resp_w ||','||ds_cod_pf_util_email_w;
				end if;
			end if;
			
		end loop;
		close C02;		
	end if;	 --FINALIZA ROTINA DE E-MAIL	
	
	--INICIO ROTINA CI	
	if (ie_comunicacao_interna_w = 'S') then
	
		open C02;
		loop
		fetch C02 into	
			ie_responsavel_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin
			if 	((ie_responsavel_w = 'R') or (ie_responsavel_w = 'RRI') or (ie_responsavel_w = 'SRRI')) and ((obter_usuario_pessoa(cd_pf_resp_bsc_w) IS NOT NULL AND (obter_usuario_pessoa(cd_pf_resp_bsc_w))::text <> '')) then					
				select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
				into STRICT	ie_enviou_ci_w
				
				where	ds_cod_pf_util_ci_w like '%'||cd_pf_resp_bsc_w||',%';
				
				if (ie_enviou_ci_w = 'N') then
					insert  into	comunic_interna(
									DT_LIBERACAO,
									dt_comunicado,
									ds_titulo,
									ds_comunicado,
									nm_usuario,
									dt_atualizacao,
									nr_sequencia,
									ie_gerencial,
									nm_usuario_destino)
								values (
									clock_timestamp(),
									clock_timestamp(),			
									ds_titulo_w,			
									ds_mensagem_w,			
									nm_usuario_p,
									clock_timestamp(),		
									nextval('comunic_interna_seq'),
									'N',
									obter_usuario_pessoa(cd_pf_resp_bsc_w));			
					ds_cod_pf_util_ci_w := 	cd_pf_resp_bsc_w ||','||ds_cod_pf_util_ci_w;
				end if;	
			end if;

			if (((ie_responsavel_w = 'S') or (ie_responsavel_w = 'SR') or (ie_responsavel_w = 'SRI') or (ie_responsavel_w = 'SRRI')) and ((obter_usuario_pessoa(cd_solicitante_w) IS NOT NULL AND (obter_usuario_pessoa(cd_solicitante_w))::text <> '')))then
				select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
				into STRICT	ie_enviou_ci_w
				
				where	ds_cod_pf_util_ci_w like '%'||cd_solicitante_w||',%';	
				
				if (ie_enviou_ci_w = 'N') then				
					insert  into	comunic_interna(	
									dt_liberacao,
									dt_comunicado,
									ds_titulo,
									ds_comunicado,
									nm_usuario,
									dt_atualizacao,
									nr_sequencia,
									ie_gerencial,
									nm_usuario_destino)
								values (	
									clock_timestamp(),
									clock_timestamp(),			
									ds_titulo_w,			
									ds_mensagem_w,
									nm_usuario_p,
									clock_timestamp(),		
									nextval('comunic_interna_seq'),
									'N',
									obter_usuario_pessoa(cd_solicitante_w));	
					ds_cod_pf_util_ci_w := 	cd_solicitante_w ||','||ds_cod_pf_util_ci_w;				
				end if;	
			end if;
			
			if (((ie_responsavel_w = 'RI') or (ie_responsavel_w = 'RRI') or (ie_responsavel_w = 'SRI') or (ie_responsavel_w = 'SRRI'))) then				
				open c03;
				loop
				fetch C03 into	
					cd_responsavel_indicador_w;
				EXIT WHEN NOT FOUND; /* apply on C03 */
					begin
					if ((obter_usuario_pessoa(cd_responsavel_indicador_w) IS NOT NULL AND (obter_usuario_pessoa(cd_responsavel_indicador_w))::text <> '')) then
						select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
						into STRICT	ie_enviou_ci_w
						
						where	ds_cod_pf_util_ci_w like '%'||cd_responsavel_indicador_w||',%';	
						
						if (ie_enviou_ci_w = 'N') then
							insert  into	comunic_interna(	
											dt_liberacao,
											dt_comunicado,
											ds_titulo,
											ds_comunicado,
											nm_usuario,
											dt_atualizacao,
											nr_sequencia,
											ie_gerencial,
											nm_usuario_destino)
										values (	
											clock_timestamp(),
											clock_timestamp(),			
											ds_titulo_w,			
											ds_mensagem_w,
											nm_usuario_p,
											clock_timestamp(),		
											nextval('comunic_interna_seq'),
											'N',
											obter_usuario_pessoa(cd_responsavel_indicador_w));
							ds_cod_pf_util_ci_w := 	cd_responsavel_indicador_w ||','||ds_cod_pf_util_ci_w;				
						end if;	
					end if;
					end;			
				end loop;
				close C03;
			end if;		
			end;
			if (ie_responsavel_w = 'EP') then
				open C04;
				loop
				fetch C04 into
					cd_executor_resp_w;
				EXIT WHEN NOT FOUND; /* apply on C04 */
					begin										
					if ((obter_usuario_pessoa(cd_executor_resp_w) IS NOT NULL AND (obter_usuario_pessoa(cd_executor_resp_w))::text <> '')) then
						select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
						into STRICT	ie_enviou_ci_w
						
						where	ds_cod_pf_util_ci_w like '%'||cd_responsavel_indicador_w||',%';	
						
						if (ie_enviou_ci_w = 'N') then
					
							insert  into	comunic_interna(
								dt_liberacao,
								dt_comunicado,
								ds_titulo,
								ds_comunicado,
								nm_usuario,
								dt_atualizacao,
								nr_sequencia,
								ie_gerencial,
								nm_usuario_destino)
							values (
								clock_timestamp(),
								clock_timestamp(),			
								ds_titulo_w,			
								ds_mensagem_w,			
								nm_usuario_p,
								clock_timestamp(),		
								nextval('comunic_interna_seq'),
								'N',
								substr(obter_usuario_pessoa(cd_executor_resp_w),1,255));
							ds_cod_pf_util_ci_w := 	cd_executor_resp_w ||','||ds_cod_pf_util_ci_w;
						end if;						
					end if;
					end;
				end loop;
				close C04;
			end if;
			
			if (ie_responsavel_w = 'RO') then
				select	max(p.cd_pf_resp)
				into STRICT	cd_pf_resp_w
				from	ple_objetivo p
				where 	p.nr_sequencia = nr_seq_obj_bsc_w;
			
				if ((obter_usuario_pessoa(cd_pf_resp_w) IS NOT NULL AND (obter_usuario_pessoa(cd_pf_resp_w))::text <> '')) then
					insert  into	comunic_interna(
						dt_liberacao,
						dt_comunicado,
						ds_titulo,
						ds_comunicado,
						nm_usuario,
						dt_atualizacao,
						nr_sequencia,
						ie_gerencial,
						nm_usuario_destino)
					values (
						clock_timestamp(),
						clock_timestamp(),			
						ds_titulo_w,			
						ds_mensagem_w,			
						nm_usuario_p,
						clock_timestamp(),		
						nextval('comunic_interna_seq'),
						'N',
						substr(obter_usuario_pessoa(cd_pf_resp_w),1,255));
					
				end if;
			end if;
			
		end loop;
		close C02;		
	end if;	
	end;
	end loop;
	close C01;	
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_comunic_iniciativa ( ie_opcao_p text, nr_seq_obj_bsc_p bigint, nr_sequencia_p bigint, nm_usuario_p text) FROM PUBLIC;

