-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



--
-- dblink wrapper to call function intdisp_gerar_movto_estor as an autonomous transaction
--
CREATE EXTENSION IF NOT EXISTS dblink;

CREATE OR REPLACE PROCEDURE intdisp_gerar_movto_estor ( nr_atendimento_p bigint) AS $body$
DECLARE
	-- Change this to reflect the dblink connection string
	v_conn_str  text := format('port=%s dbname=%s user=%s', current_setting('port'), current_database(), current_user);
	v_query     text;

BEGIN
	v_query := 'CALL intdisp_gerar_movto_estor_atx ( ' || quote_nullable(nr_atendimento_p) || ' )';
	PERFORM * FROM dblink(v_conn_str, v_query) AS p (ret boolean);

END;
$body$ LANGUAGE plpgsql SECURITY DEFINER;




CREATE OR REPLACE PROCEDURE intdisp_gerar_movto_estor_atx ( nr_atendimento_p bigint) AS $body$
DECLARE


nm_pessoa_fisica_w      	varchar(60);
nr_atendimento_w       		bigint;
ds_setor_atendimento_w		varchar(100);
ds_unidade_atendimento_w	varchar(100);
dt_entrada_w           		timestamp;
ie_sexo_w               	varchar(1);
dt_nascimento_w			timestamp;
cd_estabelecimento_w		smallint;
nm_usuario_w			varchar(15);
cd_setor_atendimento_w		integer;
cd_unidade_basica_w		varchar(20);
cd_medico_atendimento_w		varchar(10);
nr_crm_medico_w			varchar(20);
cd_pessoa_usuario_w		varchar(10);
nm_pessoa_usuario_w		varchar(60);
nr_prontuario_w			bigint;
dt_entrada_unidade_w		timestamp;
nr_sequencia_w			bigint;
cd_setor_atend_w		bigint;c02 CURSOR FOR
	SELECT	substr(c.nm_pessoa_fisica,1,60) nm_pessoa_fisica,
			a.nr_atendimento,
			cd_setor_atend_w cd_setor_atendimento,
			substr(obter_ds_descricao_setor(cd_setor_atend_w),1,100) ds_setor_atendimento,
			a.cd_unidade_basica,
			b.dt_entrada,
			c.ie_sexo,
			c.dt_nascimento,
			b.cd_medico_atendimento,
			obter_crm_medico(b.cd_medico_atendimento),
			obter_prontuario_atendimento(a.nr_atendimento),
			a.dt_entrada_unidade
	from    ocupacao_hospitalar a,
			atendimento_paciente b,
			pessoa_fisica c
	where   a.nr_atendimento = b.nr_atendimento
	and     a.nr_atendimento = nr_atendimento_p
	and     b.cd_pessoa_fisica = c.cd_pessoa_fisica
	and 	a.cd_setor_atendimento = cd_setor_atend_w
	order by c.nm_pessoa_fisica;
	

BEGIN

select	coalesce(max(cd_estabelecimento),wheb_usuario_pck.get_cd_estabelecimento),
		max(nm_usuario)
into STRICT	cd_estabelecimento_w,
		nm_usuario_w
from	atendimento_paciente
where 	nr_atendimento = nr_atendimento_p;

cd_pessoa_usuario_w := obter_pessoa_fisica_usuario(nm_usuario_w,'C');
nm_pessoa_usuario_w := obter_pessoa_fisica_usuario(nm_usuario_w,'X');
cd_setor_atend_w	:= obter_setor_atendimento(nr_atendimento_p);

select	coalesce(max(nr_sequencia),0) + 1
into STRICT	nr_sequencia_w
from	int_disp_movt_pac;


open c02;
loop
fetch c02 into	
	nm_pessoa_fisica_w,
	nr_atendimento_w,
	cd_setor_atendimento_w,
	ds_setor_atendimento_w,
	cd_unidade_basica_w,
	dt_entrada_w,
	ie_sexo_w,
	dt_nascimento_w,
	cd_medico_atendimento_w,
	nr_crm_medico_w,
	nr_prontuario_w,
	dt_entrada_unidade_w;
EXIT WHEN NOT FOUND; /* apply on c02 */
	begin
	
	insert into int_disp_movt_pac(
		nr_sequencia,
		nr_atendimento,
		nm_pessoa_fisica,
		cd_setor_internacao,
		cd_unidade_basica,
		cd_estabelecimento,
		dt_entrada,
		ie_tipo_movimentacao,
		dt_movimento,
		ie_sexo,
		dt_nascimento,
		cd_medico,
		crm_medico,
		cd_usuario,
		nm_usuario,
		ds_setor,
		dt_atendimento,
		nr_prontuario,
		dt_entrada_unidade)
	values (nr_sequencia_w,
		nr_atendimento_w,
		nm_pessoa_fisica_w,
		cd_setor_atendimento_w,
		cd_unidade_basica_w,
		cd_estabelecimento_w,
		dt_entrada_w,
		'EPD',
		clock_timestamp(),
		ie_sexo_w,
		dt_nascimento_w,
		cd_medico_atendimento_w,
		nr_crm_medico_w,
		cd_pessoa_usuario_w,
		nm_pessoa_usuario_w,
		ds_setor_atendimento_w,
		clock_timestamp(),
		nr_prontuario_w,
		dt_entrada_unidade_w);
		
	end;
end loop;
close c02;

commit;
	
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE intdisp_gerar_movto_estor ( nr_atendimento_p bigint) FROM PUBLIC; -- REVOKE ALL ON PROCEDURE intdisp_gerar_movto_estor_atx ( nr_atendimento_p bigint) FROM PUBLIC;

