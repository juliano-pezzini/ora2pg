-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pcs_gerar_segmento_rel ( nm_usuario_p text, cd_empresa_p bigint) AS $body$
DECLARE

 
 
nr_seq_seg_compras_rel_w		bigint;
nr_seq_segmento_w			bigint;
cd_estab_segmento_w			smallint;
cd_estabelecimento_w			smallint;
cd_grupo_material_w			bigint;
cd_subgrupo_material_w			bigint;
cd_classe_material_w			bigint;
cd_material_w				bigint;
cd_materiais_subs_w			varchar(255);
cd_material_substituido_w		bigint;
cd_material_substituto_w		bigint;
ds_material_substituido_w		varchar(255);
nr_seq_familia_w				bigint;
qt_existe_w				bigint;
nr_ordem_compra_w			bigint;
nr_solic_compra_w				bigint;
nr_solic_compra_ww				bigint;
ds_segmento_w				varchar(255);
ds_grupo_segmento_w			varchar(255);
dt_emissao_oc_w				timestamp;
cd_cgc_fornecedor_w			varchar(14);
cd_pessoa_fisica_w			varchar(10);
ie_aprovada_w				varchar(1);
qt_material_w				double precision;
dt_prevista_Entrega_w			timestamp;
cd_comprador_oc_w			varchar(10);
qt_consumo_dia_ant_w			double precision;
qt_consumo_7_dias_w			double precision;
qt_consumo_15_dias_w			double precision;
qt_consumo_30_dias_w			double precision;
qt_consumo_60_dias_w			double precision;
qt_consumo_90_dias_w			double precision;
qt_consumo_120_dias_w			double precision;
qt_consumo_150_dias_w			double precision;
qt_consumo_180_dias_w			double precision;
qt_media_consumo_mes01_w			double precision;
qt_media_consumo_mes02_w			double precision;
qt_media_consumo_mes03_w			double precision;
qt_media_maior_w				double precision;
ie_consignado_w				varchar(15);
qt_consumo_base_calculo_w			double precision;
qt_saldo_almoxarifado_w			double precision;
qt_saldo_farmacia_w			double precision;
qt_saldo_farm_cc_w			double precision;
qt_saldo_total_w				double precision;
qt_saldo_regra_w			double precision;
qt_cobertura_almoxarifado_w			double precision;
qt_cobertura_farmacia_w			double precision;
qt_cobertura_regra_w			double precision;
qt_dias_cobertura_agrup_w			double precision;
qt_dias_cobertura_param_w			double precision;
vl_custo_medio_w				double precision;
vl_estoque_w				double precision;
vl_estoque_regra_w				double precision;
qt_ordem_total_w				double precision;
qt_compra_melhor_w			double precision;
qt_dia_compra_w				double precision;
qt_dia_ressup_forn_w			smallint;
qt_dia_frequencia_w			double precision;
qt_estoque_minimo_w			double precision;
qt_eseg_w				double precision;
ds_motivo_w				varchar(255);
ie_solucao_w				varchar(1);
ds_mat_substituto_w			varchar(255);
ds_lista_mat_subst_w			varchar(4000);
qt_saldo_externo_w			double precision;
nr_seq_grupo_seg_w			bigint;
dt_falta_w				timestamp;
ie_consistencia_w			varchar(15);

nr_seq_parecer_origem_w			bigint;
cd_pessoa_parecer_w			varchar(10);
cd_setor_parecer_w			integer;
nr_seq_item_rel_par_w			bigint;
dt_liberacao_w				timestamp;
ds_parecer_w				varchar(4000);
dt_liberacao_parec_w			timestamp;
nm_usuario_lib_parec_w			varchar(15);
nr_seq_item_rel_orig_w			bigint;
nr_seq_parec_orig_w			bigint;
dt_atualizacao_nrec_w			timestamp;
nm_usuario_nrec_w			varchar(15);
nr_seq_item_w				bigint;
qt_dias_parecer_w				integer;
nr_seq_parecer_w				bigint;
nr_seq_rel_anterior_w			bigint;
ds_modalidade_w				varchar(255);
ie_modalidade_w				varchar(15);
vl_fatur_minimo_w			double precision;
cd_cnpj_contratado_w			varchar(14);
cd_comprador_regra_w			varchar(10);
qt_pendente_oc_w			double precision;
dt_prevista_solic_w			timestamp;
dt_prevista_ordem_w			timestamp;
nr_documento_w				bigint;
tp_documento_w				varchar(14);
qt_pendente_w				double precision;
cd_local_estoque_w			smallint;
ds_local_estoque_w			varchar(40);
qt_saldo_w				double precision;
qt_pedido_w				double precision;
qt_lead_time_w				double precision;
qt_dias_corte_mlc_w			pcs_grupamentos.qt_dias_corte_mlc%type;
qt_dias_corte_lc_w			pcs_grupamentos.qt_dias_corte_lc%type;
qt_margem_dias_w			pcs_grupamentos.qt_margem_dias%type;
cd_pessoa_resp_lc_w			pcs_grupamentos.cd_responsavel%type;
cd_empresa_w				pcs_grupamentos.cd_empresa%type;
nr_seq_regional_controlador_w		pcs_regionais.nr_sequencia%type;
ie_lc_w					pcs_seg_compras_rel_item.ie_lc%type;
ie_mlc_w				pcs_seg_compras_rel_item.ie_mlc%type;
ie_pv_w					pcs_seg_compras_rel_item.ie_pv%type;
qt_politica_w				pcs_grupamentos.qt_politica%type;
cd_grupo_material_ww			smallint;

c00 CURSOR FOR 
SELECT	a.nr_sequencia, 
	ds_grupamento 
from	pcs_grupamentos a 
where	pcs_obter_se_possui_politica(nr_sequencia) = 'N' 
and	exists (SELECT	1 
		from	pcs_segmento x 
		where	x.ie_situacao = 'A' 
		and	exists (select	1 
				from	pcs_estrutura_segmento y 
				where	y.nr_seq_segmento = x.nr_sequencia)) 

union
 
select	a.nr_seq_grupamento, 
	b.ds_grupamento 
from	pcs_politicas_grupamento a, 
	pcs_grupamentos b 
where	b.nr_sequencia = a.nr_seq_grupamento 
and	pcs_obter_se_possui_politica(nr_seq_grupamento) = 'S' 
and	exists (select	1 
		from	pcs_segmento x 
		where	x.ie_situacao = 'A' 
		and	x.nr_seq_grupamento = a.nr_seq_grupamento 
		and	exists (select	1 
				from	pcs_estrutura_segmento y 
				where	y.nr_seq_segmento = x.nr_sequencia));

c01 CURSOR FOR 
SELECT	cd_estabelecimento 
from	estabelecimento 
where	ie_situacao = 'A';

 
/*Cursor C02 is 
	select 	distinct x.cd_responsavel 
	from	(select	a.cd_responsavel 
		from		pcs_grupamentos a 
		where	a.nr_sequencia = nr_seq_grupo_seg_w 
		and	nr_seq_grupo_seg_w is not null 
		and	obter_usuario_ativo_pf(a.cd_responsavel) is not null	 
		and	a.cd_empresa = nvl(cd_empresa_w,a.cd_empresa)	 
		and	pcs_obter_se_possui_politica(a.nr_sequencia) = 'N' 
		union all 
		select	pcs_obter_responsavel_politica(d.nr_seq_grupamento,cd_estabelecimento_w,cd_empresa_w,nm_usuario_p)--Quando tiver política		 
		from	pcs_grupamentos a,	 
			pcs_politicas_grupamento d 
		where	a.nr_sequencia = d.nr_seq_grupamento 
		and	a.nr_sequencia = nr_seq_grupo_seg_w 
		and	obter_empresa_estab(cd_estabelecimento_w) = a.cd_empresa 
		and	pcs_obter_se_possui_politica(a.nr_sequencia) = 'S') x;	*/
 
	 
c03 CURSOR FOR 
SELECT	b.nr_sequencia, 
	c.cd_estabelecimento, 
	b.ds_segmento, 
	coalesce(a.qt_margem_dias,0),--a.qt_politica a.qt_dia_compra 
	coalesce(a.qt_frequencia,0), 
	coalesce(a.qt_politica,0), 
	coalesce(a.qt_dias_corte_mlc,0), 
	coalesce(a.qt_dias_corte_lc,0), 
	coalesce(a.qt_margem_dias,0), 
	a.cd_responsavel, 
	a.cd_empresa 
from	pcs_grupamentos a, 
	pcs_segmento b, 
	pcs_estrutura_segmento c 
where	a.nr_sequencia = b.nr_seq_grupamento 
and	a.nr_sequencia = c.nr_seq_grupamento 
and	b.nr_sequencia = c.nr_seq_segmento 
and	substr(pcs_obter_se_possui_politica(a.nr_sequencia),1,1) = 'N' 
and	obter_empresa_estab(cd_estabelecimento_w) = a.cd_empresa 
and	c.cd_estabelecimento = cd_estabelecimento_w 
and	a.nr_sequencia = nr_seq_grupo_seg_w 
and	(a.cd_responsavel IS NOT NULL AND a.cd_responsavel::text <> '') 

union
 
SELECT	c.nr_seq_segmento, 
	c.cd_estabelecimento, 
	b.ds_segmento, 
	coalesce(d.qt_margem_dias,0), --d.qt_politica a.qt_dia_compra 
	coalesce(d.qt_frequencia,0), 
	coalesce(d.qt_politica,0), 
	coalesce(d.qt_dias_corte_mlc,0), 
	coalesce(d.qt_dias_corte_lc,0), 
	coalesce(d.qt_margem_dias,0), 
	pcs_obter_responsavel_politica(d.nr_seq_grupamento,cd_estabelecimento_w,cd_empresa_w,nm_usuario_p),--Quando tiver política	 
	a.cd_empresa	 
from	pcs_grupamentos a, 
	pcs_segmento b, 
	pcs_estrutura_segmento c, 
	pcs_politicas_grupamento d 
where	a.nr_sequencia = b.nr_seq_grupamento 
and	a.nr_sequencia = c.nr_seq_grupamento 
and	b.nr_sequencia = c.nr_seq_segmento 
and	a.nr_sequencia = d.nr_seq_grupamento 
and	a.nr_sequencia = nr_seq_grupo_seg_w 
and	c.cd_estabelecimento = cd_estabelecimento_w 
and	obter_empresa_estab(cd_estabelecimento_w) = a.cd_empresa 
and	substr(pcs_obter_se_possui_politica(a.nr_sequencia),1,1) = 'S' 
and	(pcs_obter_responsavel_politica(d.nr_seq_grupamento,cd_estabelecimento_w,cd_empresa_w,nm_usuario_p) IS NOT NULL AND (pcs_obter_responsavel_politica(d.nr_seq_grupamento,cd_estabelecimento_w,cd_empresa_w,nm_usuario_p))::text <> '') 
and	((coalesce(cd_estab_regra::text, '') = '' and (nr_seq_regional IS NOT NULL AND nr_seq_regional::text <> '') and pcs_obter_se_estab_regional(cd_estabelecimento_w,nr_seq_regional) = 'S') or ((cd_estab_regra IS NOT NULL AND cd_estab_regra::text <> '') and cd_estab_regra = cd_estabelecimento_w));
/*union 
select	c.nr_seq_segmento, 
	c.cd_estabelecimento, 
	b.ds_segmento, 
	a.qt_margem_dias, --d.qt_politica a.qt_dia_compra 
	a.qt_frequencia, 
	a.qt_politica 
from	pcs_grupamentos a, 
	pcs_segmento b, 
	pcs_estrutura_segmento c, 
	pcs_politicas_grupamento d 
where	a.nr_sequencia = b.nr_seq_grupamento 
and	a.nr_sequencia = c.nr_seq_grupamento 
and	b.nr_sequencia = c.nr_seq_segmento 
and	a.nr_sequencia = d.nr_seq_grupamento 
and	a.nr_sequencia = nr_seq_grupo_seg_w 
and	c.cd_estabelecimento = cd_estabelecimento_w 
and	obter_empresa_estab(cd_estabelecimento_w) = a.cd_empresa 
and	substr(pcs_obter_se_possui_politica(c.nr_seq_grupamento),1,1) = 'S';*/
 
 
c04 CURSOR FOR 
SELECT	cd_material, 
	(obter_dados_material(cd_material,'MC'))::numeric  -- tinha mais dados como classe, familia, mas não é utilizado em lugal algum 
from	pcs_estrutura_segmento 
where	nr_seq_segmento = nr_seq_segmento_w 
and	cd_estabelecimento = cd_estabelecimento_w 
and	(cd_material IS NOT NULL AND cd_material::text <> '');

c05 CURSOR FOR 
SELECT	a.cd_material,--substituido 
	b.cd_material, --substituto 
	substr(substr(obter_desc_material(a.cd_material),1,80) || substr(wheb_mensagem_pck.get_Texto(456005, 'cod='|| a.cd_material ),1,20),1,100) 
from	pcs_substituicao_material a, 
	pcs_material_substituto b 
where	a.nr_sequencia = b.nr_seq_regra 
and	a.cd_material = cd_material_w 
and	coalesce(a.ie_situacao,'N') = 'A' 
and	coalesce(b.ie_situacao,'N') = 'A' 
and	nr_prioridade = (SELECT min(nr_prioridade) 
			from	pcs_material_substituto x 
			where	x.nr_seq_regra = a.nr_sequencia 
			and	x.ie_situacao = 'A');

/*Para buscar a ordem de compra pendente de entrega mais antiga*/
 
c06 CURSOR FOR 
SELECT	a.nr_ordem_compra, 
	PKG_DATE_UTILS.start_of(b.dt_prevista_entrega,'dd', 0), 
	coalesce(Obter_Dias_Entre_Datas(pkg_date_utils.start_of(b.dt_prevista_entrega,'DD',0),pkg_date_utils.start_of(clock_timestamp(),'DD',0)),0) --QT_LEAD_TIME_W 
from	ordem_compra a, 
	ordem_compra_v b 
where	a.nr_ordem_compra = b.nr_ordem_compra 
and	coalesce(a.dt_baixa::text, '') = '' 
and	coalesce(a.nr_seq_motivo_cancel::text, '') = '' 
and	a.cd_estabelecimento = cd_estabelecimento_w 
and	b.cd_material = cd_material_substituto_w 
and	coalesce(b.dt_cancelamento::text, '') = '' 
and	coalesce(b.qt_real_entrega,0) < b.qt_prevista_entrega 
order by dt_prevista_entrega desc;

c07 CURSOR FOR 
SELECT	a.nr_solic_compra, 
	PKG_DATE_UTILS.start_of(c.dt_entrega_solicitada,'dd', 0) 
from	solic_compra a, 
	solic_compra_item b, 
	solic_compra_item_entrega c 
where	a.nr_solic_compra = b.nr_solic_compra 
and	b.nr_solic_compra = c.nr_solic_compra 
and	b.nr_item_solic_compra = c.nr_item_solic_compra 
and	coalesce(a.nr_seq_motivo_cancel::text, '') = '' 
and	a.cd_estabelecimento = cd_estabelecimento_w 
and	b.cd_material = cd_material_substituto_w 
and	coalesce(b.dt_baixa::text, '') = '' 
order by dt_entrega_solicitada desc;

c10 CURSOR FOR 
SELECT	a.nr_solic_compra 
from	solic_compra a, 
	solic_compra_item b, 
	solic_compra_item_entrega c 
where	a.nr_solic_compra = b.nr_solic_compra 
and	b.nr_solic_compra = c.nr_solic_compra 
and	b.nr_item_solic_compra = c.nr_item_solic_compra 
and	coalesce(a.nr_seq_motivo_cancel::text, '') = '' 
and	a.cd_estabelecimento = cd_estabelecimento_w 
and	b.cd_material = cd_material_w 
and	coalesce(b.dt_baixa::text, '') = '' 
order by dt_entrega_solicitada desc;

C11 CURSOR FOR 
SELECT	b.cd_local_estoque, 
	b.ds_local_estoque 
from	pcs_local_estoque_grup a, 
	local_estoque b 
where	a.cd_local_estoque = b.cd_local_estoque 
and	a.cd_estab_regra = cd_estabelecimento_w 
and	a.nr_seq_grupamento = nr_seq_grupo_seg_w;

 

BEGIN 
 
select	nextval('pcs_segmento_compras_rel_seq') 
into STRICT	nr_seq_seg_compras_rel_w
;
 
insert into pcs_segmento_compras_rel( 
	nr_sequencia, 
	dt_atualizacao, 
	nm_usuario, 
	dt_atualizacao_nrec, 
	nm_usuario_nrec, 
	dt_geracao) 
values (	nr_seq_seg_compras_rel_w, 
	clock_timestamp(), 
	nm_usuario_p, 
	clock_timestamp(), 
	nm_usuario_p, 
	clock_timestamp());
 
select	coalesce(max(nr_sequencia),0) 
into STRICT	nr_seq_rel_anterior_w 
from	pcs_segmento_compras_rel a 
where	nr_sequencia <> nr_seq_seg_compras_rel_w 
and	exists (SELECT	1 
		from	pcs_seg_compras_rel_item x 
		where	x.cd_empresa = cd_empresa_p);
 
open C00;
loop 
fetch C00 into 
	nr_seq_grupo_seg_w, 
	ds_grupo_segmento_w;
EXIT WHEN NOT FOUND; /* apply on C00 */
	begin 
 
	open C01;
	loop 
	fetch C01 into 
		cd_estabelecimento_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin 
		 
		select	max(nr_sequencia) 
		into STRICT	nr_seq_regional_controlador_w 
		from	pcs_regionais 
		where 	cd_estab_controlador = cd_estabelecimento_w;		
 
		open c03;
		loop 
		fetch c03 into 
			nr_seq_segmento_w, 
			cd_estab_segmento_w, 
			ds_Segmento_w, 
			qt_dia_compra_w, 
			qt_dia_frequencia_w, 
			qt_politica_w, 
			qt_dias_corte_mlc_w, 
			qt_dias_corte_lc_w, 
			qt_margem_dias_w, 
			cd_pessoa_resp_lc_w, 
			cd_empresa_w;
		EXIT WHEN NOT FOUND; /* apply on c03 */
			begin 
 
			select	coalesce(max(qt_dias_cobertura),0) 
			into STRICT	qt_dias_cobertura_param_w 
			from	parametro_compras 
			where	cd_estabelecimento = cd_estabelecimento_w;
 
			open c04;
			loop 
			fetch c04 into 
				cd_material_w, 
				qt_compra_melhor_w;
			EXIT WHEN NOT FOUND; /* apply on c04 */
				begin 
 
				dt_prevista_entrega_w 		:= null;
				nr_ordem_compra_w		:= null;
				dt_emissao_oc_w			:= null;
				nr_solic_compra_w			:= null;
				cd_cgc_fornecedor_w		:= '';
				cd_pessoa_fisica_w		:= '';
				ie_aprovada_w			:= 'N';
				cd_comprador_oc_w		:= '';
				qt_material_w			:= 0;
				qt_consumo_dia_ant_w		:= 0;
				qt_consumo_7_dias_w		:= 0;
				qt_consumo_15_dias_w		:= 0;
				qt_consumo_30_dias_w		:= 0;
				qt_consumo_60_dias_w		:= 0;
				qt_consumo_90_dias_w		:= 0;
				qt_consumo_120_dias_w		:= 0;
				qt_consumo_150_dias_w		:= 0;
				qt_consumo_180_dias_w		:= 0;
				qt_media_maior_w			:= 0;
				qt_cobertura_almoxarifado_w		:= 0;
				qt_cobertura_farmacia_w		:= 0;
				qt_cobertura_regra_w		:= 0;
				qt_saldo_almoxarifado_w		:= 0;
				qt_saldo_farmacia_w		:= 0;
				qt_saldo_farm_cc_w		:= 0;
				qt_saldo_total_w			:= 0;
				qt_saldo_regra_w		:= 0;
				vl_estoque_w			:= 0;
				vl_estoque_regra_w		:= 0;
				vl_custo_medio_w			:= 0;
				qt_ordem_total_w			:= 0;
				qt_dia_ressup_forn_w		:= 0;
				qt_estoque_minimo_w		:= 0;
				qt_eseg_w			:= 0;
 
				cd_materiais_subs_w := cd_material_w;
				cd_material_substituto_w := cd_material_w;
					 
				open c05;
				loop 
				fetch c05 into	 
					cd_material_substituido_w, 
					cd_material_substituto_w,					 
					ds_material_substituido_w;
				EXIT WHEN NOT FOUND; /* apply on c05 */
					begin 
					cd_materiais_subs_w := cd_material_w || ',' || cd_material_substituto_w;
					end;
				end loop;
				close c05;
				 
				select	count(*) 
				into STRICT	qt_existe_w 
				from	pcs_seg_compras_rel_item 
				where	nr_seq_relatorio = nr_seq_seg_compras_rel_w 
				and	cd_estabelecimento = cd_estabelecimento_w 
				and	cd_material = cd_material_substituto_w;
 
				if (qt_existe_w = 0) then 
 
					select	count(*) 
					into STRICT	qt_existe_w 
					from	material_estab 
					where	cd_material = cd_material_substituto_w 
					and	cd_estabelecimento = cd_estabelecimento_w;
 
					if (qt_existe_w > 0) then 
						select	coalesce(qt_dia_ressup_forn,0), 
							coalesce(qt_dia_estoque_minimo,0) 
						into STRICT	qt_dia_ressup_forn_w, 
							qt_estoque_minimo_w 
						from	material_estab 
						where	cd_material = cd_material_substituto_w 
						and	cd_estabelecimento = cd_estabelecimento_w;
					end if;
 
					open c06;
					loop 
					fetch c06 into 
						nr_ordem_compra_w, 
						dt_prevista_entrega_w, 
						qt_lead_time_w;
					EXIT WHEN NOT FOUND; /* apply on c06 */
						begin 
						nr_ordem_compra_w 	:= nr_ordem_compra_w;
						dt_prevista_entrega_w	:= dt_prevista_entrega_w;
						qt_lead_time_w		:= qt_lead_time_w;
						end;
					end loop;
					close c06;
 
					dt_prevista_ordem_w		:= dt_prevista_entrega_w;
 
					if (nr_ordem_compra_w > 0) then 
						qt_material_w := 0;
						select	PKG_DATE_UTILS.start_of(a.dt_ordem_compra,'dd', 0), 
							a.cd_cgc_fornecedor, 
							a.cd_pessoa_fisica, 
							CASE WHEN a.dt_aprovacao='' THEN 'N'  ELSE 'S' END , 
							a.cd_comprador 
						into STRICT	dt_emissao_oc_w, 
							cd_cgc_fornecedor_w, 
							cd_pessoa_fisica_w, 
							ie_aprovada_w, 
							cd_comprador_oc_w 
						from	ordem_Compra a 
						where	nr_ordem_compra = nr_ordem_Compra_w;
 
						select	sum(qt_material) 
						into STRICT	qt_material_w 
						from	ordem_compra_item a 
						where	nr_ordem_compra = nr_ordem_compra_w 
						and	cd_Material = cd_material_substituto_w;
					else 
						qt_material_w		:= 0;
						dt_prevista_entrega_w	:= null;
						open c07;
						loop 
						fetch c07 into 
							nr_solic_compra_w, 
							dt_prevista_entrega_w;
						EXIT WHEN NOT FOUND; /* apply on c07 */
							begin 
							nr_solic_compra_w	:= nr_solic_compra_w;
							dt_prevista_entrega_w	:= dt_prevista_entrega_w;
							end;
						end loop;
						close c07;
 
						if (nr_solic_compra_w > 0) then 
 
							select	sum(qt_material) 
							into STRICT	qt_material_w 
							from	solic_compra_item 
							where	nr_solic_compra = nr_solic_compra_w 
							and	cd_material	= cd_material_substituto_w;
						end if;
					end if;
 
					nr_documento_w	:= null;
					tp_documento_w	:= '';
					qt_pendente_w	:= null;
 
					open c07;
					loop 
					fetch c07 into 
						nr_solic_compra_w, 
						dt_prevista_solic_w;
					EXIT WHEN NOT FOUND; /* apply on c07 */
						begin 
						nr_solic_compra_w	:= nr_solic_compra_w;
						dt_prevista_solic_w	:= dt_prevista_solic_w;
						end;
					end loop;
					close c07;
 
					if	((coalesce(dt_prevista_ordem_w::text, '') = '') or (dt_prevista_ordem_w > dt_prevista_solic_w)) then 
 
						nr_documento_w	:= nr_solic_compra_w;
 
						if (nr_documento_w > 0) then 
 
							tp_documento_w	:= 'SC';
 
							select	sum(qt_material) 
							into STRICT	qt_pendente_w 
							from	solic_compra_item 
							where	nr_solic_compra = nr_solic_compra_w 
							and	cd_material	= cd_material_substituto_w;
 
						end if;
 
					else 
 
						nr_documento_w	:= nr_ordem_compra_w;
 
						if (nr_documento_w > 0) then 
 
							tp_documento_w	:= 'OC';
 
							select	sum(qt_material) 
							into STRICT	qt_material_w 
							from	ordem_compra_item a 
							where	nr_ordem_compra = nr_ordem_compra_w 
							and	cd_Material = cd_material_substituto_w;
						end if;
 
					end if;
 
 
 
					/*CONSUMO DIA ANTERIOR*/
 
					select	coalesce(sum(qt_consumo),0) qt_consumo_ant 
					into STRICT	qt_consumo_dia_ant_w 
					from  	movimento_estoque_v a, 
						material m 
					where 	a.cd_material_estoque	= m.cd_material_estoque 
					and 	m.cd_material     	in (cd_materiais_subs_w) 
					and 	a.cd_estabelecimento 	= cd_estabelecimento_w 
					and 	PKG_DATE_UTILS.start_of(dt_movimento_estoque,'dd', 0) = PKG_DATE_UTILS.start_of(clock_timestamp() - interval '1 days','dd', 0) 
					and 	((not exists ( 
							SELECT  1 
							from	operacao_nota x 
							where	x.cd_operacao_estoque = a.cd_operacao_estoque 
							and	coalesce(x.ie_transferencia_estab, 'N') = 'S')) 
							and (a.cd_centro_custo IS NOT NULL AND a.cd_centro_custo::text <> ''));
					/*CONSUMO 7 DIAS*/
 
					select	dividir(coalesce(sum(qt_consumo),0),7) qt_consumo_ant 
					into STRICT	qt_consumo_7_dias_w 
					from  	movimento_estoque_v a, 
						material m 
					where 	a.cd_material_estoque	= m.cd_material_estoque 
					and 	m.cd_material     	in (cd_materiais_subs_w) 
					and 	a.cd_estabelecimento 	= cd_estabelecimento_w 
					and 	PKG_DATE_UTILS.start_of(dt_movimento_estoque,'dd', 0) between PKG_DATE_UTILS.start_of(clock_timestamp() - interval '6 days','dd', 0) and PKG_DATE_UTILS.start_of(clock_timestamp(),'dd', 0) 
					and 	((not exists ( 
							SELECT  1 
							from	operacao_nota x 
							where	x.cd_operacao_estoque = a.cd_operacao_estoque 
							and	coalesce(x.ie_transferencia_estab, 'N') = 'S')) 
							and (a.cd_centro_custo IS NOT NULL AND a.cd_centro_custo::text <> ''));
 
					/*CONSUMO 15 DIAS*/
 
					select	dividir(coalesce(sum(qt_consumo),0),15) qt_consumo_ant 
					into STRICT	qt_consumo_15_dias_w 
					from  	movimento_estoque_v a, 
						material m 
					where 	a.cd_material_estoque	= m.cd_material_estoque 
					and 	m.cd_material     	in (cd_materiais_subs_w) 
					and 	a.cd_estabelecimento 	= cd_estabelecimento_w 
					and 	PKG_DATE_UTILS.start_of(dt_movimento_estoque,'dd', 0) between PKG_DATE_UTILS.start_of(clock_timestamp() - interval '14 days','dd', 0) and PKG_DATE_UTILS.start_of(clock_timestamp(),'dd', 0) 
					and 	((not exists ( 
							SELECT	1 
							from	operacao_nota x 
							where	x.cd_operacao_estoque = a.cd_operacao_estoque 
							and	coalesce(x.ie_transferencia_estab, 'N') = 'S')) 
							and (a.cd_centro_custo IS NOT NULL AND a.cd_centro_custo::text <> ''));
 
					/*cONSUMO 30 DIAS*/
 
					select	dividir(coalesce(sum(qt_consumo),0),30) qt_consumo_ant 
					into STRICT	qt_consumo_30_dias_w 
					from  	movimento_estoque_v a, 
						material m 
					where 	a.cd_material_estoque	= m.cd_material_estoque 
					and 	m.cd_material     	in (cd_materiais_subs_w) 
					and 	a.cd_estabelecimento 	= cd_estabelecimento_w 
					and 	PKG_DATE_UTILS.start_of(dt_movimento_estoque,'dd', 0) between PKG_DATE_UTILS.start_of(clock_timestamp() - interval '29 days','dd', 0) and PKG_DATE_UTILS.start_of(clock_timestamp(),'dd', 0) 
					and 	((not exists ( 
							SELECT 1 
							from	operacao_nota x 
							where	x.cd_operacao_estoque = a.cd_operacao_estoque 
							and	coalesce(x.ie_transferencia_estab, 'N') = 'S')) 
							and (a.cd_centro_custo IS NOT NULL AND a.cd_centro_custo::text <> ''));
 
					/*CONSUMO 60 DIAS*/
 
					select	dividir(coalesce(sum(qt_consumo),0),60) qt_consumo_ant 
					into STRICT	qt_consumo_60_dias_w 
					from  	movimento_estoque_v a, 
						material m 
					where 	a.cd_material_estoque	= m.cd_material_estoque 
					and 	m.cd_material     	in (cd_materiais_subs_w) 
					and 	a.cd_estabelecimento 	= cd_estabelecimento_w 
					and 	PKG_DATE_UTILS.start_of(dt_movimento_estoque,'dd', 0) between PKG_DATE_UTILS.start_of(clock_timestamp() - interval '59 days','dd', 0) and PKG_DATE_UTILS.start_of(clock_timestamp(),'dd', 0) 
					and 	((not exists ( 
							SELECT	1 
							from	operacao_nota x 
							where	x.cd_operacao_estoque = a.cd_operacao_estoque 
							and	coalesce(x.ie_transferencia_estab, 'N') = 'S')) 
							and (a.cd_centro_custo IS NOT NULL AND a.cd_centro_custo::text <> ''));
 
					/*CONSUMO 90 DIAS*/
 
					select	dividir(coalesce(sum(qt_consumo),0),90) qt_consumo_ant 
					into STRICT	qt_consumo_90_dias_w 
					from  	movimento_estoque_v a, 
						material m 
					where 	a.cd_material_estoque	= m.cd_material_estoque 
					and 	m.cd_material     	in (cd_materiais_subs_w) 
					and 	a.cd_estabelecimento 	= cd_estabelecimento_w 
					and 	PKG_DATE_UTILS.start_of(dt_movimento_estoque,'dd', 0) between PKG_DATE_UTILS.start_of(clock_timestamp() - interval '89 days','dd', 0) and PKG_DATE_UTILS.start_of(clock_timestamp(),'dd', 0) 
					and 	((not exists ( 
							SELECT	1 
							from	operacao_nota x 
							where	x.cd_operacao_estoque = a.cd_operacao_estoque 
							and	coalesce(x.ie_transferencia_estab, 'N') = 'S')) 
							and (a.cd_centro_custo IS NOT NULL AND a.cd_centro_custo::text <> ''));
 
 
					/*CONSUMO 120 DIAS*/
 
					select	dividir(coalesce(sum(qt_consumo),0),120) qt_consumo_ant 
					into STRICT	qt_consumo_120_dias_w 
					from  	movimento_estoque_v a, 
						material m 
					where 	a.cd_material_estoque	= m.cd_material_estoque 
					and 	m.cd_material     	in (cd_materiais_subs_w) 
					and 	a.cd_estabelecimento 	= cd_estabelecimento_w 
					and 	PKG_DATE_UTILS.start_of(dt_movimento_estoque,'dd', 0) between PKG_DATE_UTILS.start_of(clock_timestamp() - interval '119 days','dd', 0) and PKG_DATE_UTILS.start_of(clock_timestamp(),'dd', 0) 
					and 	((not exists ( 
							SELECT	1 
							from	operacao_nota x 
							where	x.cd_operacao_estoque = a.cd_operacao_estoque 
							and	coalesce(x.ie_transferencia_estab, 'N') = 'S')) 
							and (a.cd_centro_custo IS NOT NULL AND a.cd_centro_custo::text <> ''));
 
					/*CONSUMO 150 DIAS*/
 
					select	dividir(coalesce(sum(qt_consumo),0),150) qt_consumo_ant 
					into STRICT	qt_consumo_150_dias_w 
					from  	movimento_estoque_v a, 
						material m 
					where 	a.cd_material_estoque	= m.cd_material_estoque 
					and 	m.cd_material     	in (cd_materiais_subs_w) 
					and 	a.cd_estabelecimento 	= cd_estabelecimento_w 
					and 	PKG_DATE_UTILS.start_of(dt_movimento_estoque,'dd', 0) between PKG_DATE_UTILS.start_of(clock_timestamp() - interval '149 days','dd', 0) and PKG_DATE_UTILS.start_of(clock_timestamp(),'dd', 0) 
					and 	((not exists ( 
							SELECT	1 
							from	operacao_nota x 
							where	x.cd_operacao_estoque = a.cd_operacao_estoque 
							and	coalesce(x.ie_transferencia_estab, 'N') = 'S')) 
							and (a.cd_centro_custo IS NOT NULL AND a.cd_centro_custo::text <> ''));
 
					/*CONSUMO 180 DIAS*/
 
					select	dividir(coalesce(sum(qt_consumo),0),180) qt_consumo_ant 
					into STRICT	qt_consumo_180_dias_w 
					from  	movimento_estoque_v a, 
						material m 
					where 	a.cd_material_estoque	= m.cd_material_estoque 
					and 	m.cd_material     	in (cd_materiais_subs_w) 
					and 	a.cd_estabelecimento 	= cd_estabelecimento_w 
					and 	PKG_DATE_UTILS.start_of(dt_movimento_estoque,'dd', 0) between PKG_DATE_UTILS.start_of(clock_timestamp() - interval '179 days','dd', 0) and PKG_DATE_UTILS.start_of(clock_timestamp(),'dd', 0) 
					and 	((not exists ( 
							SELECT	1 
							from	operacao_nota x 
							where	x.cd_operacao_estoque = a.cd_operacao_estoque 
							and	coalesce(x.ie_transferencia_estab, 'N') = 'S')) 
							and (a.cd_centro_custo IS NOT NULL AND a.cd_centro_custo::text <> ''));
 
 
					/*MEDIA DO CONSUMO DO MES ANTERIOR*/
 
					select	dividir(coalesce(sum(qt_consumo),0),obter_qt_dias_mes(PKG_DATE_UTILS.ADD_MONTH(PKG_DATE_UTILS.start_of(clock_timestamp(), 'MONTH', 0),-1, 0))) 
					into STRICT	qt_media_consumo_mes01_w 
					from  	movimento_estoque_v a, 
						material m 
					where 	a.cd_material_estoque	= m.cd_material_estoque 
					and 	m.cd_material     	in (cd_materiais_subs_w) 
					and 	a.cd_estabelecimento 	= cd_estabelecimento_w 
					and 	a.dt_mesano_referencia = PKG_DATE_UTILS.ADD_MONTH(PKG_DATE_UTILS.start_of(clock_timestamp(), 'MONTH', 0),-1, 0) 
					and 	((not exists ( 
								SELECT 1 
								from	operacao_nota x 
								where	x.cd_operacao_estoque = a.cd_operacao_estoque 
								and	coalesce(x.ie_transferencia_estab, 'N') = 'S')) 
								and (a.cd_centro_custo IS NOT NULL AND a.cd_centro_custo::text <> ''));
 
					/*MEDIA DO CONSUMO DO 2º MES ANTERIOR*/
 
					select	dividir(coalesce(sum(qt_consumo),0),obter_qt_dias_mes(PKG_DATE_UTILS.ADD_MONTH(PKG_DATE_UTILS.start_of(clock_timestamp(), 'MONTH', 0),-2, 0))) 
					into STRICT	qt_media_consumo_mes02_w 
					from  	movimento_estoque_v a, 
						material m 
					where 	a.cd_material_estoque	= m.cd_material_estoque 
					and 	m.cd_material     	in (cd_materiais_subs_w) 
					and 	a.cd_estabelecimento 	= cd_estabelecimento_w 
					and 	a.dt_mesano_referencia = PKG_DATE_UTILS.ADD_MONTH(PKG_DATE_UTILS.start_of(clock_timestamp(), 'MONTH', 0),-2, 0) 
					and 	((not exists ( 
							SELECT	1 
							from	operacao_nota x 
							where	x.cd_operacao_estoque = a.cd_operacao_estoque 
							and	coalesce(x.ie_transferencia_estab, 'N') = 'S')) 
							and (a.cd_centro_custo IS NOT NULL AND a.cd_centro_custo::text <> ''));
 
					/*MEDIA DO CONSUMO DO 3º MES ANTERIOR*/
 
					select	dividir(coalesce(sum(qt_consumo),0),obter_qt_dias_mes(PKG_DATE_UTILS.ADD_MONTH(PKG_DATE_UTILS.start_of(clock_timestamp(), 'MONTH', 0),-3, 0))) 
					into STRICT	qt_media_consumo_mes03_w 
					from  	movimento_estoque_v a, 
						material m 
					where 	a.cd_material_estoque	= m.cd_material_estoque 
					and 	m.cd_material     	in (cd_materiais_subs_w) 
					and 	a.cd_estabelecimento 	= cd_estabelecimento_w 
					and 	a.dt_mesano_referencia = PKG_DATE_UTILS.ADD_MONTH(PKG_DATE_UTILS.start_of(clock_timestamp(), 'MONTH', 0),-3, 0) 
					and 	((not exists ( 
							SELECT 1 
							from	operacao_nota x 
							where	x.cd_operacao_estoque = a.cd_operacao_estoque 
							and	coalesce(x.ie_transferencia_estab, 'N') = 'S')) 
							and (a.cd_centro_custo IS NOT NULL AND a.cd_centro_custo::text <> ''));
 
					qt_media_maior_w	:= qt_media_consumo_mes01_w;
 
					if (qt_media_consumo_mes02_w > qt_media_maior_w) then 
						qt_media_maior_w := qt_media_consumo_mes02_w;
					end if;
 
					if (qt_media_consumo_mes03_w > qt_media_maior_w) then 
						qt_media_maior_w := qt_media_consumo_mes03_w;
					end if;
 
					qt_consumo_base_calculo_w := qt_consumo_7_dias_w;
					if (qt_consumo_base_calculo_w = 0) then 
						qt_consumo_base_calculo_w := qt_consumo_15_dias_w;
					elsif (qt_consumo_base_calculo_w = 0) then 
						qt_consumo_base_calculo_w := qt_consumo_30_dias_w;
					elsif (qt_consumo_base_calculo_w = 0) then 
						qt_consumo_base_calculo_w := qt_consumo_60_dias_w;
					elsif (qt_consumo_base_calculo_w = 0) then 
						qt_consumo_base_calculo_w := qt_consumo_90_dias_w;
					elsif (qt_consumo_base_calculo_w = 0) then 
						qt_consumo_base_calculo_w := qt_consumo_120_dias_w;
					elsif (qt_consumo_base_calculo_w = 0) then 
						qt_consumo_base_calculo_w := qt_consumo_150_dias_w;
					elsif (qt_consumo_base_calculo_w = 0) then 
						qt_consumo_base_calculo_w := qt_consumo_180_dias_w;
					end if;
 
					 
					select	sum(qt_saldo_regra) 
					into STRICT	qt_saldo_regra_w 
					from (SELECT	coalesce(sum(obter_saldo_disp_estoque(cd_estabelecimento_w, cd_material_w, a.cd_local_estoque, PKG_DATE_UTILS.start_of(clock_timestamp(), 'MONTH', 0))),0) qt_saldo_regra 
						from	local_estoque a 
						where	exists (select	1 
										  from	pcs_local_estoque_grup x 
										  where x.cd_local_estoque = a.cd_local_estoque 
										  and	x.nr_seq_grupamento = nr_seq_grupo_seg_w 
										  and	x.cd_estab_regra = cd_estabelecimento_w) 
						and	a.cd_estabelecimento = cd_estabelecimento_w	 
						
union all
 
						SELECT	coalesce(sum(obter_saldo_disp_estoque(cd_estabelecimento_w, cd_material_substituto_w, a.cd_local_estoque, PKG_DATE_UTILS.start_of(clock_timestamp(), 'MONTH', 0))),0) qt_saldo_regra 
						from	local_estoque a 
						where	 exists (select	1 
								from	pcs_local_estoque_grup x 
								where	x.cd_local_estoque = a.cd_local_estoque 
								and	x.nr_seq_grupamento = nr_seq_grupo_seg_w 
								and	x.cd_estab_regra = cd_estabelecimento_w) 
						and	a.cd_estabelecimento = cd_estabelecimento_w 
						and	cd_material_substituto_w <> cd_material_w) alias13;						
					 
					select	sum(qt_saldo_almoxarifado) 
					into STRICT	qt_saldo_almoxarifado_w					 
					from (SELECT	coalesce(sum(obter_saldo_disp_estoque(cd_estabelecimento_w, cd_material_w, cd_local_estoque, PKG_DATE_UTILS.start_of(clock_timestamp(), 'MONTH', 0))),0) qt_saldo_almoxarifado 
						from	local_estoque 
						where	ie_tipo_local = 4 
						and	cd_estabelecimento = cd_estabelecimento_w						 
						
union all
 
						SELECT	coalesce(sum(obter_saldo_disp_estoque(cd_estabelecimento_w, cd_material_substituto_w, cd_local_estoque, PKG_DATE_UTILS.start_of(clock_timestamp(), 'MONTH', 0))),0) qt_saldo_almoxarifado 
						from	local_estoque 
						where	ie_tipo_local = 4 
						and	cd_estabelecimento = cd_estabelecimento_w 
						and	cd_material_substituto_w <> cd_material_w) alias11;
						 
					select	sum(qt_saldo_farmacia) 
					into STRICT	qt_saldo_farmacia_w 
					from (SELECT	coalesce(sum(obter_saldo_disp_estoque(cd_estabelecimento_w, cd_material_w, cd_local_estoque, PKG_DATE_UTILS.start_of(clock_timestamp(), 'MONTH', 0))),0) qt_saldo_farmacia 
						from	local_estoque 
						where	ie_tipo_local in (1,2) 
						and	cd_estabelecimento = cd_estabelecimento_w 
						
union all
 
						SELECT	coalesce(sum(obter_saldo_disp_estoque(cd_estabelecimento_w, cd_material_substituto_w, cd_local_estoque, PKG_DATE_UTILS.start_of(clock_timestamp(), 'MONTH', 0))),0) qt_saldo_farmacia 
						from	local_estoque 
						where	ie_tipo_local in (1,2) 
						and	cd_estabelecimento = cd_estabelecimento_w 
						and	cd_material_substituto_w <> cd_material_w) alias13;						
					 
					select sum(qt_saldo_farm_cc) 
					into STRICT	qt_saldo_farm_cc_w 
					from (SELECT	coalesce(sum(obter_saldo_disp_estoque(cd_estabelecimento_w, cd_material_w, cd_local_estoque, PKG_DATE_UTILS.start_of(clock_timestamp(), 'MONTH', 0))),0) qt_saldo_farm_cc 
						from	local_estoque 
						where	ie_tipo_local = 2 
						and	cd_estabelecimento = cd_estabelecimento_w 
						
union all
 
						SELECT	coalesce(sum(obter_saldo_disp_estoque(cd_estabelecimento_w, cd_material_substituto_w, cd_local_estoque, PKG_DATE_UTILS.start_of(clock_timestamp(), 'MONTH', 0))),0) qt_saldo_farm_cc 
						from	local_estoque 
						where	ie_tipo_local = 2 
						and	cd_estabelecimento = cd_estabelecimento_w 
						and	cd_material_substituto_w <> cd_material_w) alias11;						
 
						 
					select	sum(qt_saldo_externo) 
					into STRICT	qt_saldo_externo_w 
					from (SELECT	coalesce(sum(obter_saldo_disp_estoque(cd_estabelecimento_w, cd_material_w, cd_local_estoque, PKG_DATE_UTILS.start_of(clock_timestamp(), 'MONTH', 0))),0) qt_saldo_externo 
						from	local_estoque 
						where	coalesce(ie_externo,'N') = 'S' 
						and	cd_estabelecimento = cd_estabelecimento_w 
						
union all
 
						SELECT	coalesce(sum(obter_saldo_disp_estoque(cd_estabelecimento_w, cd_material_substituto_w, cd_local_estoque, PKG_DATE_UTILS.start_of(clock_timestamp(), 'MONTH', 0))),0) qt_saldo_externo 
						from	local_estoque 
						where	coalesce(ie_externo,'N') = 'S' 
						and	cd_estabelecimento = cd_estabelecimento_w 
						and	cd_material_substituto_w <> cd_material_w) alias13;		
 
					if (qt_consumo_base_calculo_w = 0) then 
						qt_cobertura_regra_w := -1;
					end if;
					 
					if (qt_saldo_regra_w = 0) then 
						qt_cobertura_regra_w := 0;
					elsif (qt_consumo_30_dias_w > 0) then 
						qt_cobertura_regra_w := dividir(qt_saldo_regra_w,qt_consumo_30_dias_w);
					elsif (qt_consumo_base_calculo_w > 0) then 
						qt_cobertura_regra_w := dividir(qt_saldo_regra_w,qt_consumo_base_calculo_w);									
					end if;						
 
					vl_custo_medio_w := coalesce(obter_custo_medio_material(cd_Estabelecimento_w, PKG_DATE_UTILS.start_of(clock_timestamp(), 'MONTH', 0), cd_material_w),0);
										 
					if (vl_custo_medio_w = 0) then 
						vl_custo_medio_w := coalesce(obter_ult_custo_medio_mat(cd_estabelecimento_w,cd_material_w),0);					
					end if;
					 
					select 	sum(qt_saldo_total) 
					into STRICT	qt_saldo_total_w 
					from (SELECT	coalesce(sum(obter_saldo_disp_estoque(a.cd_estabelecimento, cd_material, cd_local_estoque, dt_mesano_referencia)),0) qt_saldo_total 
						from	saldo_estoque a 
						where	a.dt_mesano_referencia = PKG_DATE_UTILS.start_of(clock_timestamp(), 'MONTH', 0) 
						and	a.cd_estabelecimento = cd_Estabelecimento_w 
						and	a.cd_material = cd_material_w 
						
union all
 
						SELECT	coalesce(sum(obter_saldo_disp_estoque(a.cd_estabelecimento, cd_material, cd_local_estoque, dt_mesano_referencia)),0) qt_saldo_total 
						from	saldo_estoque a 
						where	a.dt_mesano_referencia = PKG_DATE_UTILS.start_of(clock_timestamp(), 'MONTH', 0) 
						and	a.cd_estabelecimento = cd_Estabelecimento_w 
						and	a.cd_material = cd_material_substituto_w					 
						and	cd_material_substituto_w <> cd_material_w) alias11;
					 
					vl_estoque_w := qt_saldo_total_w * vl_custo_medio_w;
					vl_estoque_regra_w := qt_saldo_regra_w * vl_custo_medio_w;
 
					select	coalesce(sum(qt_compra),0) 
					into STRICT	qt_ordem_total_w 
					from	compra_pendente_v2 
					where	cd_material = cd_material_substituto_w 
					and	cd_estabelecimento = cd_estabelecimento_w 
					and	nr_documento > 0;
 
					select	coalesce(sum(qt_compra),0) 
					into STRICT	qt_pendente_oc_w 
					from	compra_pendente_v2 
					where	cd_material = cd_material_substituto_w 
					and	cd_estabelecimento = cd_estabelecimento_w 
					and	nr_documento > 0 
					and	ie_tipo_documento = 'O';
 
					/*QT PEDIDO*/
 
 
					/*select	nvl(sum(qt_compra),0) 
					into	qt_pedido_w 
					from	compra_pendente_v2 
					where	cd_material = cd_material_w 
					and	cd_estabelecimento = cd_estabelecimento_w 
					and	nr_documento > 0 
					and	ie_tipo_documento = 'O';*/
 
 
					ie_solucao_w		:= '';
					ds_motivo_w		:= '';
					ds_lista_mat_subst_w	:= '';
					dt_falta_w		:= null;
 
					select	max(ie_solucao), 
						max(ds_motivo), 
						max(dt_falta) 
					into STRICT	ie_solucao_w, 
						ds_motivo_w, 
						dt_falta_w 
					from	material_falta 
					where	cd_material		= cd_material_substituto_w 
					and	cd_estabelecimento	= cd_Estabelecimento_w 
					and	coalesce(ie_solucao,'N')	= 'N';
 
 
					qt_cobertura_almoxarifado_w		:= coalesce(dividir(qt_saldo_almoxarifado_w,qt_consumo_base_calculo_w),0);
				 
					qt_cobertura_farmacia_w		:= coalesce(dividir(qt_saldo_farmacia_w,qt_consumo_base_calculo_w),0); --aqui 
					
					qt_lead_time_w			:= qt_dia_ressup_forn_w; -- Na OS 939942 foi solicitado que o ESEG e o Dias Fornecedor devem conter as mesmas informações. O qt_lead_time deve ter o mesmo valor que o Dias fornecedor; 
					qt_eseg_w			:= qt_politica_w - (qt_dia_frequencia_w + qt_dia_ressup_forn_w);
 
 
					ie_consistencia_w		:= '';
					ie_lc_w				:= 'N';
					ie_mlc_w			:= 'N';
					ie_pv_w				:= 'N';
					--qt_saldo_regra_w 
					 
					 
					if (dt_prevista_Entrega_w IS NOT NULL AND dt_prevista_Entrega_w::text <> '') and (dt_prevista_Entrega_w < clock_timestamp()) then 
						begin 
						ie_consistencia_w := 'PV';
						ie_pv_w := 'S';
						end;
						 
					end if;
						 
					if (qt_dias_corte_lc_w > 0) and 
						--(nvl(qt_cobertura_almoxarifado_w,0) < qt_dias_cobertura_param_w) then 
						(coalesce(qt_cobertura_regra_w,0) <= qt_dias_corte_lc_w) then						 
						begin 
						ie_consistencia_w := 'LC';
						ie_lc_w := 'S';
						end;
						 
					end if;
					 
					if	(coalesce(qt_cobertura_regra_w,0) <= (qt_dias_corte_mlc_w)) or 
						(coalesce(qt_cobertura_regra_w,0) < (qt_eseg_w))then 
						begin 
						ie_consistencia_w := 'MLC';
						ie_mlc_w := 'S';						
						end;
					end if;
					 
					ie_modalidade_w		:= '';
					ds_modalidade_w 	:= '';
					vl_fatur_minimo_w	:= 0;
					cd_cnpj_contratado_w	:= '';
					cd_comprador_regra_w	:= '';
 
					select	obter_item_contrato_mercado(cd_material_w, cd_Estabelecimento_w) 
					into STRICT	ie_modalidade_w 
					;
 
					if (ie_modalidade_w = 'C') then 
						ds_modalidade_w	:= wheb_mensagem_pck.get_texto(306382) /*'Contrato'*/
;
 
						select	(obter_dados_contrato_item(cd_material_substituto_w, 'FM'))::numeric , 
							obter_dados_contrato_item(cd_material_substituto_w, 'PJ') 
						into STRICT	vl_fatur_minimo_w, 
							cd_cnpj_contratado_w 
						;
 
 
					elsif (ie_modalidade_w = 'M') then 
						ds_modalidade_w	:= wheb_mensagem_pck.get_texto(302240) /*'Mercado'*/
;
					end if;
					nr_solic_compra_ww := null;
					open c10;
					loop 
					fetch C10 into 
						nr_solic_compra_ww;
					EXIT WHEN NOT FOUND; /* apply on C10 */
						begin 
						nr_solic_compra_ww := nr_solic_compra_ww;
						end;
					end loop;
					close C10;
					 
					select	cd_grupo_material 
					into STRICT	cd_grupo_material_ww 
					from	estrutura_material_v 
					where	cd_material = cd_material_substituto_w;
 
					select	obter_comprador_material(cd_material_substituto_w, 'N', cd_estabelecimento_w) 
					into STRICT	cd_comprador_regra_w 
					;
 
					select	nextval('pcs_seg_compras_rel_item_seq') 
					into STRICT	nr_seq_item_w 
					;
 
					insert into pcs_seg_compras_rel_item( 
						nr_sequencia, 
						dt_atualizacao, 
						nm_usuario, 
						dt_atualizacao_nrec, 
						nm_usuario_nrec, 
						nr_seq_relatorio, 
						nr_seq_segmento, 
						nr_Seq_grupamento, 
						cd_empresa, 
						cd_estabelecimento, 
						cd_material, 
						ds_segmento, 
						ds_grupamento, 
						nr_ordem_compra, 
						dt_emissao_oc, 
						cd_cgc_fornec_oc, 
						ie_aprovacao_oc, 
						cd_pessoa_fisica_oc, 
						qt_prevista_entrega_oc, 
						dt_entrega_prevista_oc, 
						cd_comprador_oc, 
						qt_consumo_dia_ant, 
						qt_consumo_7_dias, 
						qt_consumo_15_dias, 
						qt_consumo_30_dias, 
						qt_consumo_60_dias, 
						qt_consumo_90_dias, 
						qt_consumo_120_dias, 
						qt_consumo_150_dias, 
						qt_consumo_180_dias, 
						qt_maior_media_cons_3_meses, 
						qt_cobertura_almox, 
						qt_cobertura_farmacia, 
						qt_saldo_almox, 
						qt_saldo_farmacia, 
						qt_saldo_farm_cc, 
						qt_saldo_total, 
						qt_saldo_regra, 
						vl_estoque, 
						vl_custo_medio, 
						vl_estoque_regra, 
						qt_ordem_total, 
						qt_compra_melhor, 
						qt_dia_compra, 
						qt_dia_ressup_forn, 
						qt_dia_frequencia, 
						qt_estoque_minimo, 
						qt_eseg, 
						ie_falta_solucionada, 
						ds_motivo_falta, 
						ds_mat_substituto, 
						qt_saldo_externo, 
						dt_inicio_falta, 
						ie_consistencia, 
						ds_modalidade, 
						vl_fatur_minimo, 
						cd_cnpj_contratado, 
						cd_comprador_regra, 
						nr_solic_compra, 
						qt_pendente_oc, 
						nr_documento, 
						tp_documento, 
						qt_pendente, 
						qt_politica, 
						qt_lead_time, 
						qt_frequencia, 
						qt_dias_corte_mlc, 
						qt_dias_corte_lc, 
						qt_margem_dias, 
						cd_pessoa_resp_lc, 
						nr_seq_regional, 
						qt_cobertura_regra, 
						ie_lc, 
						ie_mlc, 
						ie_pv, 
						cd_grupo_material) 
					values (	nr_seq_item_w, 
						clock_timestamp(), 
						nm_usuario_p, 
						clock_timestamp(), 
						nm_usuario_p, 
						nr_seq_seg_compras_rel_w, 
						nr_seq_segmento_w, 
						CASE WHEN nr_seq_grupo_seg_w=0 THEN null  ELSE nr_seq_grupo_seg_w END , 
						cd_empresa_p, 
						cd_estabelecimento_w, 
						cd_material_substituto_w, 
						ds_segmento_w, 
						ds_grupo_segmento_w, 
						CASE WHEN nr_ordem_compra_w=0 THEN null  ELSE nr_ordem_Compra_w END , 
						dt_emissao_oc_w, 
						cd_cgc_fornecedor_w, 
						ie_aprovada_w, 
						cd_pessoa_fisica_w, 
						qt_material_w, 
						dt_prevista_Entrega_w, 
						cd_comprador_oc_w, 
						qt_consumo_dia_ant_w, 
						qt_consumo_7_dias_w, 
						qt_consumo_15_dias_w, 
						qt_consumo_30_dias_w, 
						qt_consumo_60_dias_w, 
						qt_consumo_90_dias_w, 
						qt_consumo_120_dias_w, 
						qt_consumo_150_dias_w, 
						qt_consumo_180_dias_w, 
						qt_media_maior_w, 
						qt_cobertura_almoxarifado_w, 
						qt_cobertura_farmacia_w, 
						qt_saldo_almoxarifado_w, 
						qt_saldo_farmacia_w, 
						qt_saldo_farm_cc_w, 
						qt_saldo_total_w, 
						qt_saldo_regra_w, 
						vl_estoque_w, 
						vl_custo_medio_w, 
						vl_estoque_regra_w, 
						qt_ordem_total_w, 
						qt_compra_melhor_w, 
						qt_dia_compra_w, 
						qt_dia_ressup_forn_w, 
						qt_dia_frequencia_w, 
						qt_estoque_minimo_w, 
						qt_eseg_w, 
						ie_solucao_w, 
						ds_motivo_w, 
						ds_material_substituido_w, 
						qt_saldo_externo_w, 
						dt_falta_w, 
						ie_consistencia_w, 
						ds_modalidade_w, 
						vl_fatur_minimo_w, 
						cd_cnpj_contratado_w, 
						cd_comprador_regra_w, 
						nr_solic_compra_ww, 
						qt_pendente_oc_w, 
						nr_documento_w, 
						tp_documento_w, 
						qt_pendente_w, 
						qt_politica_w, 
						qt_lead_time_w, 
						qt_dia_frequencia_w, 
						qt_dias_corte_mlc_w, 
						qt_dias_corte_lc_w, 
						qt_margem_dias_w, 
						cd_pessoa_resp_lc_w, 
						nr_seq_regional_controlador_w, 
						qt_cobertura_regra_w, 
						ie_lc_w, 
						ie_mlc_w, 
						ie_pv_w, 
						cd_grupo_material_ww);
 
					open c11;
					loop 
					fetch c11 into 
						cd_local_estoque_w, 
						ds_local_estoque_w;
					EXIT WHEN NOT FOUND; /* apply on c11 */
						begin 
 
						select	coalesce(max(qt_estoque),0) 
						into STRICT	qt_saldo_w 
						from	saldo_estoque 
						where	cd_local_estoque = cd_local_estoque_w 
						and	cd_material = cd_material_substituto_w 
						and	cd_estabelecimento = cd_estabelecimento_w 
						and	dt_mesano_referencia = PKG_DATE_UTILS.start_of(clock_timestamp(), 'MONTH', 0);
 
						insert into w_pcs_saldo_estoque( 
							cd_local_estoque, 
							ds_local_Estoque, 
							nr_Seq_relatorio, 
							nr_seq_item_relat, 
							qt_saldo) 
						values (	cd_local_Estoque_w, 
							ds_local_estoque_w, 
							nr_seq_seg_compras_rel_w, 
							nr_seq_item_w, 
							qt_saldo_w);
 
						end;
					end loop;
					close c11;
 
 
					select	coalesce(max(qt_dias_parecer),0) 
					into STRICT	qt_dias_parecer_w 
					from	parametro_compras 
					where	cd_estabelecimento = cd_estabelecimento_w;
 
					 
				end if;
				end;
 
			end loop;
			close c04;
			end;
		end loop;
		close c03;
		end;
	end loop;
	close C01;
	end;
end loop;
close C00;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pcs_gerar_segmento_rel ( nm_usuario_p text, cd_empresa_p bigint) FROM PUBLIC;

