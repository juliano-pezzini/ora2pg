-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE transfer_surgical_appointments (ds_lista_p text, cd_agenda_p bigint, dt_agenda_p timestamp, nm_usuario_p text, cd_estabelecimento_p bigint, nr_seq_origem_p bigint, nr_seq_motivo_p bigint, ds_motivo_p text, nr_seq_motivo_prazo_p bigint, ds_motivo_prazo_p text, ds_erro_p INOUT text) AS $body$
DECLARE


ds_lista_w				varchar(4000);
tam_lista_w				bigint;
ie_pos_virgula_w		smallint;
nr_seq_agendamento_w	bigint;

nr_seq_livre_w			bigint;
nr_seq_encaixe_w		bigint;
hr_agenda_w				timestamp;
dt_agenda_w				timestamp;
nr_minuto_duracao_w		bigint;
ds_erro_w				varchar(255);
ds_horarios_w   		varchar(4000);
nm_paciente_w   		varchar(4000);

				

BEGIN

ds_lista_w 	:= ds_lista_p;
ds_erro_p	:= '';

while(ds_lista_w IS NOT NULL AND ds_lista_w::text <> '')  loop
	begin
	tam_lista_w		:= length(ds_lista_w);
	ie_pos_virgula_w	:= position(',' in ds_lista_w);

	if (ie_pos_virgula_w <> 0) then
		nr_seq_agendamento_w	:= (substr(ds_lista_w,1,(ie_pos_virgula_w - 1)))::numeric;
		ds_lista_w				:= substr(ds_lista_w,(ie_pos_virgula_w + 1),tam_lista_w);
	end if;
			
     ds_horarios_w := Obter_Horarios_Livres_Lista(
			cd_estabelecimento_p, cd_agenda_p, dt_agenda_p, dt_agenda_p, 0, '', '', '', nm_usuario_p, 'S', ds_horarios_w);			
			
	
	select	max(hr_inicio),
			max(hr_inicio),
			max(nr_minuto_duracao),
			max(nm_paciente)
	into STRICT	dt_agenda_w,
			hr_agenda_w,
			nr_minuto_duracao_w,
			nm_paciente_w
	from	agenda_paciente
	where	nr_sequencia = nr_seq_agendamento_w;

  
	select	max(nr_sequencia)
	into STRICT	nr_seq_livre_w
	from	agenda_paciente
	where	cd_agenda 			= cd_agenda_p
	and		hr_inicio 			= to_date(to_char(dt_agenda_p,'dd/mm/yyyy') || ' ' || coalesce(to_char(dt_agenda_w,'hh24:mi:ss'),'00:00:00'),'dd/mm/yyyy hh24:mi:ss')
	and		ie_status_agenda 	= 'L';

  	if (nr_seq_livre_w > 0) then
	
     CALL transferir_agenda_pac_html(
	                nr_seq_agendamento_w,
					nr_seq_livre_w,
					nr_seq_motivo_p,
					ds_motivo_p,
	                nr_seq_motivo_prazo_p,
					ds_motivo_prazo_p);
	else
		ds_erro_w := ds_erro_w || chr(10) || to_char(hr_agenda_w,'hh24:mi') ||'-' || nm_paciente_w;		
	end if;

	end;
	end loop;
	
commit;


ds_erro_p	:= ds_erro_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE transfer_surgical_appointments (ds_lista_p text, cd_agenda_p bigint, dt_agenda_p timestamp, nm_usuario_p text, cd_estabelecimento_p bigint, nr_seq_origem_p bigint, nr_seq_motivo_p bigint, ds_motivo_p text, nr_seq_motivo_prazo_p bigint, ds_motivo_prazo_p text, ds_erro_p INOUT text) FROM PUBLIC;

