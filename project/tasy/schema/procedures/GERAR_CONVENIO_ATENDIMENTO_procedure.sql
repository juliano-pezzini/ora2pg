-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_convenio_atendimento ( nr_atendimento_p bigint, cd_convenio_agenda_p bigint, nm_usuario_p text, nr_seq_interno_p INOUT bigint) AS $body$
DECLARE


ie_tipo_convenio_w		smallint;
cd_pessoa_fisica_w		varchar(10);
dt_entrada_w			timestamp;
cd_localidade_w		integer;
cd_convenio_w			integer := null;
cd_categoria_w		varchar(10);
dt_inicio_vigencia_w		timestamp;
dt_final_vigencia_w		timestamp;
cd_usuario_convenio_w	varchar(30);
cd_empresa_w			bigint;
nr_doc_convenio_w		varchar(20);
nr_doc_conv_regra_w		varchar(20);
cd_tipo_acomodacao_w		smallint;
cd_tipo_acomodacao_regra_w	smallint;
cd_municipio_convenio_w	integer;
cd_convenio_glosa_w		integer;
cd_categoria_glosa_w		varchar(10);
dt_validade_carteira_w	timestamp;
nr_acompanhante_w		smallint;
cd_plano_convenio_w		varchar(10);
cd_dependente_w		smallint;
nr_seq_interno_w		bigint;
nr_seq_origem_w		bigint;
cd_senha_w			varchar(20);
ie_tipo_guia_w		varchar(2);
ds_observacao_w		varchar(255);
qt_dia_internacao_w		smallint;
qt_dia_internacao_ww		smallint;
dt_ultimo_pagto_w		timestamp;
ds_parametro_w		varchar(255);
ie_tipo_atendimento_w	smallint;
IE_REP_COD_USUARIO_w		varchar(10);
cd_complemento_w		varchar(30);
cd_plano_padrao_w		varchar(10);
ie_gerar_cep_cadastro_w		varchar(05) 	:= 'N';
ds_procedure_validacao_w	varchar(255)	:= null;
cd_estabelecimento_w		smallint;
cd_estabelecimento_ww		smallint;
ie_tipo_acomodacao_w		varchar(10);
ie_opcao_w			varchar(10);
cd_plano_eup_w			varchar(10);
ie_situacao_plano_w		varchar(01);
ds_erro_w			varchar(255);
ie_Bloquear_Atend_w		varchar(1);
ie_gerar_data_validade_w	varchar(1);
ie_grava_localidade_w		varchar(1);
ie_tipo_atend_lib_categ_w	varchar(1);
ie_gera_guia_regra_w		varchar(1);
ie_tipo_guia_regra_w		varchar(1);
ie_tipo_guia_atend_w		varchar(5);
qt_dieta_acomp_w		smallint;
ie_lib_dieta_w			varchar(15);
ie_exige_cpf_w			varchar(1);
ie_exige_cpf_paciente_w		varchar(1);
ie_calcula_dt_vigencia_w	varchar(1);
qt_idade_w			smallint;
cd_pessoa_responsavel_w		varchar(10);
cd_pf_menor_w			varchar(10);
nr_cpf_w			varchar(11);
ie_clinica_w			integer;
ie_atualiza_dias_internacao_w	varchar(1);
ie_aplica_digito_padrao_w	varchar(1);
ds_digitos_padrao_w		varchar(30);
cd_convenio_old_w		bigint;
nr_seq_regra_acomp_w		bigint;
ie_padrao_dados_conv_w	varchar(2);
nr_seq_episodio_w 		bigint;
ie_tipo_conveniado_w		atend_categoria_convenio.ie_tipo_conveniado%type;
ie_autoriza_envio_convenio_w	atend_categoria_convenio.ie_autoriza_envio_convenio%type;
qtd_encounters_w        smallint := 0;
ie_regime_internacao_w      atend_categoria_convenio.ie_regime_internacao%TYPE;
nr_seq_abrangencia_w        atend_categoria_convenio.nr_seq_abrangencia%TYPE;
nr_seq_tipo_lib_guia_w      atend_categoria_convenio.nr_seq_tipo_lib_guia%TYPE;
nr_doc_conv_principal_w     atend_categoria_convenio.nr_doc_conv_principal%TYPE;
cd_senha_provisoria_w       atend_categoria_convenio.cd_senha_provisoria%TYPE;
ie_cod_usuario_mae_resp_w   atend_categoria_convenio.ie_cod_usuario_mae_resp%TYPE;
cd_plano_glosa_w            atend_categoria_convenio.cd_plano_glosa%TYPE;
cd_usuario_conv_glosa_w     atend_categoria_convenio.cd_usuario_conv_glosa%TYPE;
cd_complemento_glosa_w      atend_categoria_convenio.cd_complemento_glosa%TYPE;
dt_validade_cart_glosa_w    atend_categoria_convenio.dt_validade_cart_glosa%TYPE;
nr_seq_lib_dieta_conv_w     atend_categoria_convenio.nr_seq_lib_dieta_conv%TYPE;
nr_seq_interno_ww		    atend_categoria_convenio.nr_seq_interno%TYPE;
nr_prioridade_w			    atend_categoria_convenio.nr_prioridade%type;
nr_seq_categoria_iva_w		atend_categoria_convenio.nr_seq_categoria_iva%type;

C01 CURSOR FOR
	SELECT	a.cd_convenio
	FROM convenio a
LEFT OUTER JOIN convenio_estabelecimento b ON (a.cd_convenio = b.cd_convenio AND cd_estabelecimento_w = b.cd_estabelecimento)
WHERE a.ie_tipo_convenio	= 3 and substr(upper(a.ds_convenio),1,3) = 'SUS' order by coalesce(b.cd_estabelecimento,0),
		a.cd_convenio desc;

C02 CURSOR FOR
	SELECT	a.cd_convenio
	FROM convenio a
LEFT OUTER JOIN convenio_estabelecimento b ON (a.cd_convenio = b.cd_convenio AND cd_estabelecimento_w = b.cd_estabelecimento)
WHERE a.ie_tipo_convenio	= 1 and substr(upper(a.ds_convenio),1,10) = 'PARTICULAR' order by coalesce(b.cd_estabelecimento,0),
		a.cd_convenio desc;

C03 CURSOR FOR
	SELECT  a.cd_convenio,
            a.cd_categoria,
            a.cd_usuario_convenio,
            a.cd_empresa,
            a.cd_tipo_acomodacao, 
            coalesce(a.cd_municipio_convenio, cd_localidade_w),
            a.cd_convenio_glosa, 
            a.cd_categoria_glosa,
            a.dt_validade_carteira, 
            a.nr_acompanhante,
            a.cd_plano_convenio, 
            a.cd_dependente,
            a.nr_seq_origem,
            a.ie_tipo_guia,
            a.cd_complemento,
            a.qt_dia_internacao,
			a.ie_tipo_conveniado,
			a.ie_autoriza_envio_convenio,
            --
            a.dt_ultimo_pagto,
            a.ie_regime_internacao,
            a.nr_seq_abrangencia,
            a.nr_seq_tipo_lib_guia,
            a.nr_doc_conv_principal,
            a.cd_senha_provisoria,
            a.ie_cod_usuario_mae_resp,
            a.cd_plano_glosa,
            a.cd_usuario_conv_glosa,
            a.cd_complemento_glosa,
            a.dt_validade_cart_glosa,
            a.nr_seq_lib_dieta_conv,
            a.ie_lib_dieta,
            a.nr_seq_regra_acomp,
            a.qt_dieta_acomp,
            a.nr_doc_convenio,
            a.nr_seq_interno,
	    a.dt_inicio_vigencia,
            a.dt_final_vigencia,
	    a.nr_prioridade,
		a.nr_seq_categoria_iva
    from    atend_categoria_convenio a,
            (SELECT x.nr_atendimento  
            from ATENDIMENTO_PACIENTE x, atendimento_paciente b  
            where b.nr_atendimento = nr_atendimento_p 
            and x.NR_SEQ_EPISODIO = b.NR_SEQ_EPISODIO 
            and x.NR_SEQ_EPISODIO <> 0
            and (x.NR_SEQ_EPISODIO IS NOT NULL AND x.NR_SEQ_EPISODIO::text <> '')
            and coalesce(x.DT_CANCELAMENTO::text, '') = ''
            and x.NR_ATENDIMENTO <> nr_atendimento_p  
            order by x.DT_ATUALIZACAO_NREC desc LIMIT 1) c
    where  a.nr_atendimento = c.nr_atendimento;


BEGIN
cd_estabelecimento_ww := coalesce(wheb_usuario_pck.get_cd_estabelecimento, 0);
select	coalesce(max(obter_valor_param_usuario(916,   1, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_ww)), 'N'),
	coalesce(max(obter_valor_param_usuario(916,  86, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_ww)), 'N'),
	coalesce(max(obter_valor_param_usuario(916,  93, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_ww)), 'N'),
	coalesce(max(obter_valor_param_usuario(916, 112, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_ww)), 'N'),
	coalesce(max(obter_valor_param_usuario(916, 128, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_ww)), 'N'),
	coalesce(max(obter_valor_param_usuario(916, 295, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_ww)), 'S'),
	coalesce(max(obter_valor_param_usuario(916, 363, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_ww)), 'S'),
	coalesce(max(obter_valor_param_usuario(916, 375, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_ww)), 'N'),
	coalesce(max(obter_valor_param_usuario(916, 480, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_ww)), 'N'),
	coalesce(max(obter_valor_param_usuario(916, 501, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_ww)), 'N'),
	coalesce(max(obter_valor_param_usuario(916, 749, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_ww)), 'S'),
	coalesce(max(obter_valor_param_usuario(916, 716, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_ww)), 'N'),
	coalesce(max(obter_valor_param_usuario(916, 145, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_ww)), 'S')
into STRICT	ie_calcula_dt_vigencia_w,
	ie_gerar_cep_cadastro_w,
	ie_Bloquear_Atend_w,
	ie_tipo_acomodacao_w,
	ie_opcao_w,
	ie_gerar_data_validade_w,
	ie_grava_localidade_w,
	ie_gera_guia_regra_w,
	ie_tipo_guia_regra_w,
	ie_exige_cpf_w,
	ie_atualiza_dias_internacao_w,
	ie_aplica_digito_padrao_w,
	ie_padrao_dados_conv_w
;



nr_seq_interno_p		:= 0;

select	max(ie_tipo_convenio),
	max(cd_pessoa_fisica),
	max(dt_entrada),
	max(cd_localidade),
	max(ie_tipo_atendimento),
	max(a.cd_estabelecimento),
	coalesce(max(a.ie_clinica),0)
into STRICT	ie_tipo_convenio_w,
	cd_pessoa_fisica_w,
	dt_entrada_w,
	cd_localidade_w,
	ie_tipo_atendimento_w,
	cd_estabelecimento_w,
	ie_clinica_w
from 	estabelecimento b,
	Atendimento_paciente a
where	a.cd_estabelecimento	= b.cd_estabelecimento
and	a.nr_atendimento	= nr_atendimento_p;

if (ie_grava_localidade_w = 'N') then
	cd_localidade_w	:= null;
end if;

select	coalesce(max(b.nr_seq_interno),0)
into STRICT	nr_seq_interno_w
from	atend_categoria_convenio b,
	Atendimento_paciente a
where	a.cd_pessoa_fisica	= cd_pessoa_fisica_w
and	a.nr_atendimento	= b.nr_atendimento
and	a.cd_estabelecimento	= cd_estabelecimento_w
and	a.ie_tipo_convenio	= ie_tipo_convenio_w;

select	coalesce(max(nr_seq_interno),0)
into STRICT	nr_seq_interno_w
from	convenio y,
	atend_categoria_convenio x
where	x.cd_convenio = y.cd_convenio
and	y.ie_situacao = 'A'
and	x.nr_seq_interno           = nr_seq_interno_w;

cd_complemento_w			:= '';


select	coalesce(max(a.nr_seq_episodio),0)
into STRICT	nr_seq_episodio_w
from	atendimento_paciente	a
where	a.nr_atendimento	= nr_atendimento_p;

IF (pkg_i18n.get_user_locale in ('de_DE', 'de_AT')) THEN
    qtd_encounters_w := obter_qtd_atend_episodio(nr_seq_episodio_w, nr_atendimento_p);
END IF;

if (ie_padrao_dados_conv_w = 'C' and nr_seq_episodio_w > 0) OR (ie_padrao_dados_conv_w = 'P' and qtd_encounters_w > 0) then 
    OPEN C03;
	LOOP
	FETCH C03 into	
		cd_convenio_w,
		cd_categoria_w,
		cd_usuario_convenio_w,
		cd_empresa_w,
		cd_tipo_acomodacao_w, 
		cd_municipio_convenio_w,
		cd_convenio_glosa_w, 
		cd_categoria_glosa_w,
		dt_validade_carteira_w, 
		nr_acompanhante_w,
		cd_plano_convenio_w, 
		cd_dependente_w,
		nr_seq_origem_w,
		ie_tipo_guia_w,
		cd_complemento_w,
		qt_dia_internacao_ww,
		ie_tipo_conveniado_w,
		ie_autoriza_envio_convenio_w,
        dt_ultimo_pagto_w,
        ie_regime_internacao_w,
        nr_seq_abrangencia_w,
        nr_seq_tipo_lib_guia_w,
        nr_doc_conv_principal_w,
        cd_senha_provisoria_w,
        ie_cod_usuario_mae_resp_w,
        cd_plano_glosa_w,
        cd_usuario_conv_glosa_w,
        cd_complemento_glosa_w,
        dt_validade_cart_glosa_w,
        nr_seq_lib_dieta_conv_w,
        ie_lib_dieta_w,
        nr_seq_regra_acomp_w,
        qt_dieta_acomp_w,
        nr_doc_convenio_w,
        nr_seq_interno_ww,
	dt_inicio_vigencia_w,
	dt_final_vigencia_w,
	nr_prioridade_w,
	nr_seq_categoria_iva_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		BEGIN
		nr_seq_interno_w := INSERIR_CONVENIO_ATENDIMENTO(
			nr_atendimento_p, cd_convenio_agenda_p, nm_usuario_p, cd_pessoa_fisica_w, dt_entrada_w, cd_convenio_w, cd_categoria_w, dt_inicio_vigencia_w, dt_final_vigencia_w, cd_usuario_convenio_w, cd_empresa_w, nr_doc_convenio_w, nr_doc_conv_regra_w, cd_tipo_acomodacao_w, cd_tipo_acomodacao_regra_w, cd_municipio_convenio_w, cd_convenio_glosa_w, cd_categoria_glosa_w, dt_validade_carteira_w, nr_acompanhante_w, cd_plano_convenio_w, cd_dependente_w, nr_seq_origem_w, cd_senha_w, ie_tipo_guia_w, ds_observacao_w, qt_dia_internacao_w, qt_dia_internacao_ww, dt_ultimo_pagto_w, ie_tipo_atendimento_w, IE_REP_COD_USUARIO_w, cd_complemento_w, cd_plano_padrao_w, ie_gerar_cep_cadastro_w, ds_procedure_validacao_w, cd_estabelecimento_w, ie_tipo_acomodacao_w, ie_opcao_w, cd_plano_eup_w, ie_situacao_plano_w, ds_erro_w, ie_Bloquear_Atend_w, ie_gerar_data_validade_w, ie_tipo_atend_lib_categ_w, ie_gera_guia_regra_w, ie_tipo_guia_regra_w, ie_tipo_guia_atend_w, qt_dieta_acomp_w, ie_lib_dieta_w, ie_exige_cpf_w, ie_calcula_dt_vigencia_w, qt_idade_w, cd_pessoa_responsavel_w, cd_pf_menor_w, ie_clinica_w, ie_atualiza_dias_internacao_w, ie_aplica_digito_padrao_w, ds_digitos_padrao_w, cd_convenio_old_w, nr_seq_regra_acomp_w, ie_padrao_dados_conv_w, ie_tipo_conveniado_w, ie_autoriza_envio_convenio_w, nr_seq_interno_w, ie_regime_internacao_w, nr_seq_abrangencia_w, nr_seq_tipo_lib_guia_w, nr_doc_conv_principal_w, cd_senha_provisoria_w, ie_cod_usuario_mae_resp_w, cd_plano_glosa_w, cd_usuario_conv_glosa_w, cd_complemento_glosa_w, dt_validade_cart_glosa_w, nr_seq_lib_dieta_conv_w, nr_seq_interno_ww, nr_prioridade_w, nr_seq_categoria_iva_w);
		END;
	END LOOP;
	CLOSE C03;
RETURN;

elsif (nr_seq_interno_w > 0)  then
	select 	cd_convenio,
		cd_categoria,
		cd_usuario_convenio,
		cd_empresa,
		cd_tipo_acomodacao, 
		coalesce(cd_municipio_convenio,cd_localidade_w),
		cd_convenio_glosa, 
		cd_categoria_glosa,
		dt_validade_carteira, 
		nr_acompanhante,
		cd_plano_convenio, 
		cd_dependente,
		nr_seq_origem,
		ie_tipo_guia,
		cd_complemento,
		qt_dia_internacao,
		ie_tipo_conveniado,
		ie_autoriza_envio_convenio,
        dt_ultimo_pagto,
        ie_regime_internacao,
        nr_seq_abrangencia,
        nr_seq_tipo_lib_guia,
        nr_doc_conv_principal,
        cd_senha_provisoria,
        ie_cod_usuario_mae_resp,
        cd_plano_glosa,
        cd_usuario_conv_glosa,
        cd_complemento_glosa,
        dt_validade_cart_glosa,
        nr_seq_lib_dieta_conv,
        nr_seq_interno,
        nr_seq_categoria_iva
	into STRICT	cd_convenio_w,
		cd_categoria_w,
		cd_usuario_convenio_w,
		cd_empresa_w, 
		cd_tipo_acomodacao_w, 
		cd_municipio_convenio_w,
		cd_convenio_glosa_w, 
		cd_categoria_glosa_w,
		dt_validade_carteira_w, 
		nr_acompanhante_w,
		cd_plano_convenio_w, 
		cd_dependente_w,
		nr_seq_origem_w,
		ie_tipo_guia_w,
		cd_complemento_w,
		qt_dia_internacao_ww,
		ie_tipo_conveniado_w,
		ie_autoriza_envio_convenio_w,
        dt_ultimo_pagto_w,
        ie_regime_internacao_w,
        nr_seq_abrangencia_w,
        nr_seq_tipo_lib_guia_w,
        nr_doc_conv_principal_w,
        cd_senha_provisoria_w,
        ie_cod_usuario_mae_resp_w,
        cd_plano_glosa_w,
        cd_usuario_conv_glosa_w,
        cd_complemento_glosa_w,
        dt_validade_cart_glosa_w,
        nr_seq_lib_dieta_conv_w,
        nr_seq_interno_ww,
        nr_seq_categoria_iva_w
	from 	atend_categoria_convenio
	where	nr_seq_interno	= nr_seq_interno_w;

elsif (ie_tipo_convenio_w = 3) then

	OPEN C01;
	LOOP
	FETCH C01 into	
		cd_convenio_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		BEGIN
		cd_convenio_w	:= cd_convenio_w;
		END;
	END LOOP;
	CLOSE c01;
	
	select	min(cd_categoria)
	into STRICT	cd_categoria_w
	from 	categoria_convenio
	where	cd_convenio		= cd_convenio_w
	and	(cd_categoria IS NOT NULL AND cd_categoria::text <> '')
	and	ie_situacao = 'A'
	and	Obter_Se_Categoria_Lib_Estab(cd_estabelecimento_ww,cd_convenio,cd_categoria) = 'S';

	select	coalesce(max(a.cd_localidade),cd_localidade_w)
	into STRICT	cd_municipio_convenio_w
	from	sus_municipio b,
		cep_localidade a, 
		compl_pessoa_fisica c
	where	a.nr_localidade 	= b.nr_localidade
	  and	b.cd_municipio_ibge	= c.cd_municipio_ibge
	  and	c.ie_tipo_complemento	= 1
	  and	c.cd_pessoa_fisica 	= cd_pessoa_fisica_w;

	if (ie_tipo_atendimento_w = 1) then
		ie_tipo_guia_w		:= 'I';
	elsif (ie_tipo_atendimento_w = 3) then
		ie_tipo_guia_w		:= 'C';
	elsif (ie_tipo_atendimento_w = 8) then

		if (ie_tipo_convenio_w = 3) then
			ie_tipo_guia_w		:= 'A';
		else
				ie_tipo_guia_w		:= 'C';
		end if;

	else
		ie_tipo_guia_w		:= 'E';
	end if;
	
	

elsif (ie_tipo_convenio_w = 1) then

	OPEN C02;
	LOOP
	FETCH C02 into	
			cd_convenio_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		BEGIN
		cd_convenio_w	:= cd_convenio_w;
		END;
	END LOOP;
	CLOSE c02;
	
/*	select	min(cd_convenio)
	into	cd_convenio_w
	from	Convenio
	where	ie_tipo_convenio = 1
	and	substr(upper(ds_convenio),1,10) = 'PARTICULAR';*/
	select	min(cd_categoria)
	into STRICT	cd_categoria_w
	from 	categoria_convenio
	where	cd_convenio = cd_convenio_w
	and	substr(upper(ds_categoria),1,10) = 'PARTICULAR'
	and 	ie_situacao = 'A';

	if (coalesce(cd_categoria_w::text, '') = '') then
		select	min(cd_categoria)
		into STRICT	cd_categoria_w
		from 	categoria_convenio
		where	cd_convenio = cd_convenio_w
		and 	ie_situacao = 'A';
	end if;
	
	select	coalesce(max(a.cd_localidade),cd_localidade_w)
	into STRICT	cd_municipio_convenio_w
	from	sus_municipio b,
		cep_localidade a, 
		compl_pessoa_fisica c
	where	a.nr_localidade 	= b.nr_localidade
	  and	b.cd_municipio_ibge	= c.cd_municipio_ibge
	  and	c.ie_tipo_complemento	= 1
	  and	c.cd_pessoa_fisica 	= cd_pessoa_fisica_w;

	if (ie_tipo_atendimento_w = 1) then
		ie_tipo_guia_w		:= 'I';
	elsif (ie_tipo_atendimento_w = 3) then
		ie_tipo_guia_w		:= 'C';
	elsif (ie_tipo_atendimento_w = 8) then

		if (ie_tipo_convenio_w = 3) then
		ie_tipo_guia_w := 'A';
		else
		ie_tipo_guia_w := 'C';
		end if;

	else
		ie_tipo_guia_w := 'E';
	end if;
	
	
end if;

nr_seq_interno_w := INSERIR_CONVENIO_ATENDIMENTO(
			nr_atendimento_p, cd_convenio_agenda_p, nm_usuario_p, cd_pessoa_fisica_w, dt_entrada_w, cd_convenio_w, cd_categoria_w, dt_inicio_vigencia_w, dt_final_vigencia_w, cd_usuario_convenio_w, cd_empresa_w, nr_doc_convenio_w, nr_doc_conv_regra_w, cd_tipo_acomodacao_w, cd_tipo_acomodacao_regra_w, cd_municipio_convenio_w, cd_convenio_glosa_w, cd_categoria_glosa_w, dt_validade_carteira_w, nr_acompanhante_w, cd_plano_convenio_w, cd_dependente_w, nr_seq_origem_w, cd_senha_w, ie_tipo_guia_w, ds_observacao_w, qt_dia_internacao_w, qt_dia_internacao_ww, dt_ultimo_pagto_w, ie_tipo_atendimento_w, IE_REP_COD_USUARIO_w, cd_complemento_w, cd_plano_padrao_w, ie_gerar_cep_cadastro_w, ds_procedure_validacao_w, cd_estabelecimento_w, ie_tipo_acomodacao_w, ie_opcao_w, cd_plano_eup_w, ie_situacao_plano_w, ds_erro_w, ie_Bloquear_Atend_w, ie_gerar_data_validade_w, ie_tipo_atend_lib_categ_w, ie_gera_guia_regra_w, ie_tipo_guia_regra_w, ie_tipo_guia_atend_w, qt_dieta_acomp_w, ie_lib_dieta_w, ie_exige_cpf_w, ie_calcula_dt_vigencia_w, qt_idade_w, cd_pessoa_responsavel_w, cd_pf_menor_w, ie_clinica_w, ie_atualiza_dias_internacao_w, ie_aplica_digito_padrao_w, ds_digitos_padrao_w, cd_convenio_old_w, nr_seq_regra_acomp_w, ie_padrao_dados_conv_w, ie_tipo_conveniado_w, ie_autoriza_envio_convenio_w, nr_seq_interno_w, ie_regime_internacao_w, nr_seq_abrangencia_w, nr_seq_tipo_lib_guia_w, nr_doc_conv_principal_w, cd_senha_provisoria_w, ie_cod_usuario_mae_resp_w, cd_plano_glosa_w, cd_usuario_conv_glosa_w, cd_complemento_glosa_w, dt_validade_cart_glosa_w, nr_seq_lib_dieta_conv_w, nr_seq_interno_ww, null, nr_seq_categoria_iva_w);

		nr_seq_interno_p		:= nr_seq_interno_w;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_convenio_atendimento ( nr_atendimento_p bigint, cd_convenio_agenda_p bigint, nm_usuario_p text, nr_seq_interno_p INOUT bigint) FROM PUBLIC;

