-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_atualizar_tributo_fat ( nm_usuario_p text, cd_estabelecimento_p bigint, nr_seq_fatura_p bigint, nr_seq_atualizacao_p bigint) AS $body$
DECLARE


dt_mes_competencia_w				timestamp;
nr_seq_fatura_proc_mat_w			bigint;
ie_codificacao_w				varchar(2);
ie_debito_credito_w				varchar(1);
cd_conta_contabil_w				varchar(20);
ds_mascara_w					varchar(30);

nr_seq_fatura_w					pls_fatura.nr_sequencia%type;
nr_seq_fatura_trib_w				pls_fatura_trib.nr_sequencia%type;
nr_seq_item_trib_w				pls_fatura_item_trib.nr_sequencia%type;
cd_tributo_w					pls_fatura_trib.cd_tributo%type;
nr_seq_evento_w					pls_fatura_evento.nr_seq_evento%type;
ie_tipo_valor_fat_w				pls_fatura_item_trib.ie_tipo_valor_fat%type;
nr_seq_pagador_w				pls_fatura.nr_seq_pagador%type;
nr_seq_esquema_w				pls_esquema_contabil.nr_sequencia%type;
nr_seq_esquema_ww				pls_esquema_contabil.nr_sequencia%type;
cd_historico_padrao_w				pls_esquema_contabil.cd_historico_padrao%type;
cd_historico_padrao_ww				pls_esquema_contabil.cd_historico_padrao%type;
ie_prestador_codificacao_w			pls_esquema_contabil.ie_prestador_codificacao%type;
cd_conta_credito_w				conta_contabil.cd_conta_contabil%type;
cd_conta_debito_w				conta_contabil.cd_conta_contabil%type;
cd_classificacao_credito_w			conta_contabil.cd_classificacao_atual%type;
cd_classificacao_debito_w			conta_contabil.cd_classificacao_atual%type;
cd_conta_cred_ndc_tx_w				conta_contabil.cd_conta_contabil%type;
cd_conta_deb_ndc_tx_w                           conta_contabil.cd_conta_contabil%type;
cd_classif_cred_ndc_tx_w                        conta_contabil.cd_classificacao_atual%type;
cd_classif_deb_ndc_tx_w                         conta_contabil.cd_classificacao_atual%type;
nr_seq_pos_estab_contab_w			pls_conta_pos_estab_contab.nr_sequencia%type;
nr_id_trib_item_w				oid;

c_itens_tributo CURSOR FOR
	SELECT	f.nr_sequencia,
		t.nr_sequencia,
		i.oid,
		i.nr_sequencia,
		t.cd_tributo,
		e.nr_seq_evento,
		i.ie_tipo_valor_fat,
		f.nr_seq_pagador,
		f.dt_mes_competencia
	FROM pls_fatura_trib t, pls_fatura_item_trib i, pls_fatura_evento e
LEFT OUTER JOIN pls_fatura f ON (e.nr_seq_fatura = f.nr_sequencia)
WHERE f.nr_sequencia	= t.nr_seq_fatura and t.nr_sequencia	= i.nr_seq_fatura_trib  and f.nr_sequencia	= nr_seq_fatura_p;

c_esquema CURSOR FOR
	SELECT	a.nr_sequencia,
		a.cd_historico_padrao,
		a.ie_prestador_codificacao
	from	pls_esquema_contabil	a
	where	a.ie_tipo_regra 	= 'TF'
	and	a.cd_estabelecimento	= cd_estabelecimento_p
	and	dt_mes_competencia_w between a.dt_inicio_vigencia and coalesce(a.dt_fim_vigencia,dt_mes_competencia_w)
	and	((a.cd_tributo 	= cd_tributo_w) or (coalesce(a.cd_tributo::text, '') = ''))
	and	((a.nr_seq_evento_fat = nr_seq_evento_w) or (coalesce(a.nr_seq_evento_fat::text, '') = ''))
	and	((a.ie_tipo_valor_rec_fatur = ie_tipo_valor_fat_w) or (a.ie_tipo_valor_rec_fatur = 'A'))
	and	((a.nr_seq_pagador = nr_seq_pagador_w) or (coalesce(a.nr_seq_pagador::text, '') = ''));

c_segmentacao CURSOR FOR
	SELECT	ie_codificacao,
		cd_conta_contabil,
		ie_debito_credito,
		ds_mascara
	from	pls_esquema_contabil_seg
	where	nr_seq_regra_esquema	= nr_seq_esquema_w
	order by
		ie_debito_credito,
		nr_seq_apresentacao;


BEGIN

open c_itens_tributo;
loop
fetch c_itens_tributo into
	nr_seq_fatura_w,
	nr_seq_fatura_trib_w,
	nr_id_trib_item_w,
	nr_seq_item_trib_w,
	cd_tributo_w,
	nr_seq_evento_w,
	ie_tipo_valor_fat_w,
	nr_seq_pagador_w,
	dt_mes_competencia_w;
EXIT WHEN NOT FOUND; /* apply on c_itens_tributo */
	begin

	cd_conta_credito_w		:= null;
	cd_conta_debito_w		:= null;
	cd_classificacao_credito_w	:= null;
	cd_classificacao_debito_w	:= null;
	nr_seq_esquema_w		:= null;
	cd_historico_padrao_w		:= null;

	open c_esquema;
	loop
	fetch c_esquema into
		nr_seq_esquema_ww,
		cd_historico_padrao_ww,
		ie_prestador_codificacao_w;
	EXIT WHEN NOT FOUND; /* apply on c_esquema */
		begin

		nr_seq_esquema_w	:= nr_seq_esquema_ww;
		cd_historico_padrao_w	:= cd_historico_padrao_ww;

		end;
	end loop;
	close c_esquema;

	select	max(CASE WHEN ie_tipo_valor_fat_w='F' THEN cd_conta_cred_taxa  ELSE cd_conta_cred_ndc END ),
		max(CASE WHEN ie_tipo_valor_fat_w='F' THEN cd_conta_deb_taxa  ELSE cd_conta_deb_ndc END ),
		max(CASE WHEN ie_tipo_valor_fat_w='F' THEN cd_classif_cred_taxa  ELSE cd_classif_cred_ndc END ),
		max(CASE WHEN ie_tipo_valor_fat_w='F' THEN cd_classif_cred_taxa  ELSE cd_classif_cred_ndc END ),
		max(nr_seq_pos_estab_contab)
	into STRICT	cd_conta_cred_ndc_tx_w,
		cd_conta_deb_ndc_tx_w,
		cd_classif_cred_ndc_tx_w,
		cd_classif_deb_ndc_tx_w,
		nr_seq_pos_estab_contab_w
	from (
		SELECT	e.cd_conta_cred_ndc,
			e.cd_conta_deb_ndc,
			e.cd_classif_cred_ndc,
			e.cd_classif_deb_ndc,
			e.cd_conta_cred_taxa,
			e.cd_conta_deb_taxa,
			e.cd_classif_cred_taxa,
			e.cd_classif_deb_taxa,
			e.nr_sequencia nr_seq_pos_estab_contab
		from	pls_conta 			t,
			pls_conta_pos_estabelecido 	a,
			pls_conta_pos_estab_contab 	e,
			pls_fatura 			f,
			pls_fatura_proc 		p,
			pls_fatura_conta 		c,
			pls_fatura_evento 		d,
			pls_plano			l,
			pls_segurado			s
		where	t.nr_sequencia 		= a.nr_seq_conta
		and	a.nr_sequencia 		= e.nr_seq_conta_pos
		and	a.nr_sequencia 		= p.nr_seq_conta_pos_estab
		and	c.nr_sequencia 		= p.nr_seq_fatura_conta
		and	d.nr_sequencia 		= c.nr_seq_fatura_evento
		and	f.nr_sequencia 		= d.nr_seq_fatura
		and	s.nr_sequencia		= t.nr_seq_segurado
		and	l.nr_sequencia		= t.nr_seq_plano
		and	f.nr_sequencia		= nr_seq_fatura_w
		
union all

		SELECT	e.cd_conta_cred_ndc,
			e.cd_conta_deb_ndc,
			e.cd_classif_cred_ndc,
			e.cd_classif_deb_ndc,
			e.cd_conta_cred_taxa,
			e.cd_conta_deb_taxa,
			e.cd_classif_cred_taxa,
			e.cd_classif_deb_taxa,
			e.nr_sequencia
		from	pls_conta 			t,
			pls_conta_pos_estabelecido 	a,
			pls_conta_pos_estab_contab 	e,
			pls_fatura 			f,
			pls_fatura_mat	 		p,
			pls_fatura_conta 		c,
			pls_fatura_evento 		d,
			pls_plano			l,
			pls_segurado			s
		where	t.nr_sequencia 		= a.nr_seq_conta
		and	a.nr_sequencia 		= e.nr_seq_conta_pos
		and	a.nr_sequencia 		= p.nr_seq_conta_pos_estab
		and	c.nr_sequencia 		= p.nr_seq_fatura_conta
		and	d.nr_sequencia 		= c.nr_seq_fatura_evento
		and	f.nr_sequencia 		= d.nr_seq_fatura
		and	s.nr_sequencia		= t.nr_seq_segurado
		and	l.nr_sequencia		= t.nr_seq_plano
		and	f.nr_sequencia		= nr_seq_fatura_w) alias5;

	open c_segmentacao;
	loop
	fetch c_segmentacao into
		ie_codificacao_w,
		cd_conta_contabil_w,
		ie_debito_credito_w,
		ds_mascara_w;
	EXIT WHEN NOT FOUND; /* apply on c_segmentacao */
		begin

		if (ie_debito_credito_w = 'C') then
			if (ie_codificacao_w = 'CR') then
				select	cd_classificacao_atual
				into STRICT	cd_classificacao_credito_w
				from	conta_contabil
				where	cd_conta_contabil	= cd_conta_contabil_w;

				cd_conta_credito_w		:= cd_conta_contabil_w;
			elsif (ie_codificacao_w = 'CC') then
				cd_conta_credito_w		:= cd_conta_cred_ndc_tx_w;
				cd_classificacao_credito_w	:= cd_classif_cred_ndc_tx_w;
			elsif (ie_codificacao_w = 'CD') then
				cd_conta_credito_w		:= cd_conta_deb_ndc_tx_w;
				cd_classificacao_credito_w	:= cd_classif_deb_ndc_tx_w;
			end if;
		elsif (ie_debito_credito_w = 'D') then
			if (ie_codificacao_w = 'CR') then
				select	cd_classificacao_atual
				into STRICT	cd_classificacao_debito_w
				from	conta_contabil
				where	cd_conta_contabil	= cd_conta_contabil_w;

				cd_conta_debito_w		:= cd_conta_contabil_w;
			elsif (ie_codificacao_w = 'CC') then
				cd_conta_debito_w		:= cd_conta_cred_ndc_tx_w;
				cd_classificacao_debito_w	:= cd_classif_cred_ndc_tx_w;
			elsif (ie_codificacao_w = 'CD') then
				cd_conta_debito_w		:= cd_conta_deb_ndc_tx_w;
				cd_classificacao_debito_w	:= cd_classif_deb_ndc_tx_w;
			end if;
		end if;

		end;
	end loop;
	close c_segmentacao;

	if (substr(cd_classificacao_credito_w,length(cd_classificacao_credito_w),length(cd_classificacao_credito_w)) = '.') then
		cd_classificacao_credito_w	:= substr(cd_classificacao_credito_w,1,length(cd_classificacao_credito_w)-1);
	end if;

	if (substr(cd_classificacao_debito_w,length(cd_classificacao_debito_w),length(cd_classificacao_debito_w)) = '.') then
		cd_classificacao_debito_w	:= substr(cd_classificacao_debito_w,1,length(cd_classificacao_debito_w)-1);
	end if;

	if (ie_tipo_valor_fat_w = 'NDC') then
		update	pls_fatura_item_trib
		set	nr_seq_esquema_prov 	= nr_seq_esquema_w,
			cd_historico_prov       = cd_historico_padrao_w,
			cd_conta_prov_cred      = cd_conta_credito_w,
			cd_conta_prov_deb       = cd_conta_debito_w,
			cd_classif_prov_cred    = cd_classificacao_credito_w,
			cd_classif_prov_deb     = cd_classificacao_debito_w
		where	rowid			= nr_id_trib_item_w;
	elsif (ie_tipo_valor_fat_w = 'F') then
		update	pls_fatura_item_trib
		set	nr_seq_esquema 		= nr_seq_esquema_w,
			cd_historico       	= cd_historico_padrao_w,
			cd_conta_cred      	= cd_conta_credito_w,
			cd_conta_deb       	= cd_conta_debito_w,
			cd_classif_cred    	= cd_classificacao_credito_w,
			cd_classif_deb     	= cd_classificacao_debito_w
		where	rowid			= nr_id_trib_item_w;
	end if;

	if (nr_seq_atualizacao_p IS NOT NULL AND nr_seq_atualizacao_p::text <> '') then
		if (coalesce(nr_seq_esquema_w::text, '') = '') then

			CALL pls_gravar_mov_contabil(nr_seq_atualizacao_p,
						1,
						null,
						null,
						null,
						null,
						null,
						null,
						null,
						null,
						null,
						null,
						null,
						null,
						null,
						null,
						null,
						nm_usuario_p,
						nr_seq_esquema_w,
						null,
						null,
						null,
						null,
						nr_seq_item_trib_w);
		elsif	((coalesce(cd_conta_credito_w::text, '') = '') or (coalesce(cd_conta_debito_w::text, '') = '')) then

			CALL pls_gravar_mov_contabil(nr_seq_atualizacao_p,
						2,
						null,
						null,
						null,
						null,
						null,
						null,
						null,
						null,
						null,
						null,
						null,
						null,
						null,
						null,
						null,
						nm_usuario_p,
						nr_seq_esquema_w,
						null,
						null,
						null,
						null,
						nr_seq_item_trib_w);
		end if;
	end if;
	end;
end loop;
close c_itens_tributo;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_atualizar_tributo_fat ( nm_usuario_p text, cd_estabelecimento_p bigint, nr_seq_fatura_p bigint, nr_seq_atualizacao_p bigint) FROM PUBLIC;

