-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE fis_gerar_reg_0150_efd ( nr_seq_controle_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, dt_inicio_p timestamp, dt_fim_p timestamp, cd_empresa_p bigint, ds_separador_p text, qt_linha_p INOUT bigint, nr_sequencia_p INOUT bigint) AS $body$
DECLARE


nr_seq_regra_efd_w		bigint;
nr_versao_efd_w			varchar(5);
tp_registro_w			varchar(4);
cd_municipio_ibge_w		varchar(7);
nr_linha_w			bigint 	:= qt_linha_p;
nr_seq_registro_w			bigint 	:= nr_sequencia_p;
ds_arquivo_w			varchar(4000);
ds_arquivo_compl_w		varchar(4000);
ds_linha_w			varchar(8000);
sep_w				varchar(1)	:= ds_separador_p;
ie_consistir_cpf_cnpj_w		varchar(1);
ie_buscar_data_w			varchar(1);
ie_nota_entrada_w			varchar(1);
ie_local_gerar_sped_w		varchar(1);
nr_cnpj_w 			varchar(15);
nr_cpf_w				varchar(11);
nr_inscricao_estadual_w		varchar(20);
ie_nota_cancelada_w		varchar(1);

c01 CURSOR FOR
SELECT	'0150' tp_registro,
	a.cd_pessoa_fisica cd_participante,
	substr(obter_nome_pf_pj(a.cd_pessoa_fisica, ''), 1, 80) nm_participante,
	CASE WHEN coalesce(a.nr_cpf,'0')='0' THEN  coalesce(n.cd_bacen,CASE WHEN n.ie_brasileiro='S' THEN  '1058'  ELSE coalesce(obter_compl_pf(a.cd_pessoa_fisica,'1','CBPAIS'),'8451') END )  ELSE '1058' END  cd_pais,
	'' nr_cnpj,
	a.nr_cpf,
	'' nr_inscricao_estadual,
	CASE WHEN n.ie_brasileiro='N' THEN CASE WHEN coalesce(a.nr_cpf,'0')='0' THEN ''  ELSE substr((obter_compl_pf(a.cd_pessoa_fisica, 1, 'UF')),1,7) END   ELSE substr((obter_compl_pf(a.cd_pessoa_fisica, 1, 'UF')),1,7) END  sg_uf,
	CASE WHEN n.ie_brasileiro='N' THEN CASE WHEN coalesce(a.nr_cpf,'0')='0' THEN ''  ELSE substr((obter_compl_pf(a.cd_pessoa_fisica, 1, 'CDMDV')),1,7) END   ELSE substr((obter_compl_pf(a.cd_pessoa_fisica, 1, 'CDMDV')),1,7) END  cd_municipio_ibge,
	'' nr_suframa,
	CASE WHEN n.ie_brasileiro='N' THEN CASE WHEN coalesce(a.nr_cpf,'0')='0' THEN ''  ELSE substr(obter_dados_pf_pj(a.cd_pessoa_fisica, null, 'EN'),1,60) END   ELSE substr(obter_dados_pf_pj(a.cd_pessoa_fisica, null, 'EN'),1,60) END  ds_endereco,
	CASE WHEN n.ie_brasileiro='N' THEN CASE WHEN coalesce(a.nr_cpf,'0')='0' THEN ''  ELSE substr(obter_dados_pf_pj(a.cd_pessoa_fisica, null, 'NR'),1,255) END   ELSE substr(obter_dados_pf_pj(a.cd_pessoa_fisica, null, 'NR'),1,255) END  nr_endereco,
	CASE WHEN n.ie_brasileiro='N' THEN CASE WHEN coalesce(a.nr_cpf,'0')='0' THEN ''  ELSE substr(obter_dados_pf_pj(a.cd_pessoa_fisica, null, 'CO'),1,60) END   ELSE substr(obter_dados_pf_pj(a.cd_pessoa_fisica, null, 'CO'),1,60) END  ds_complemento,
	CASE WHEN n.ie_brasileiro='N' THEN CASE WHEN coalesce(a.nr_cpf,'0')='0' THEN ''  ELSE substr(obter_dados_pf_pj(a.cd_pessoa_fisica, null, 'B'),1,255) END   ELSE substr(obter_dados_pf_pj(a.cd_pessoa_fisica, null, 'B'),1,255) END  ds_bairro
FROM pessoa_fisica a
LEFT OUTER JOIN nacionalidade n ON (a.cd_nacionalidade = n.cd_nacionalidade)
WHERE a.cd_pessoa_fisica in (	SELECT	c.cd_pessoa_fisica
				FROM estabelecimento e, operacao_nota b, nota_fiscal c
LEFT OUTER JOIN lote_protocolo p ON (c.nr_seq_lote_prot = p.nr_sequencia)
LEFT OUTER JOIN conta_paciente x ON (c.nr_interno_conta = x.nr_interno_conta)
LEFT OUTER JOIN protocolo_convenio w ON (c.nr_seq_protocolo = w.nr_seq_protocolo)
LEFT OUTER JOIN protocolo_convenio z ON (x.nr_seq_protocolo = z.nr_seq_protocolo)
WHERE c.cd_estabelecimento = e.cd_estabelecimento and c.cd_operacao_nf	= b.cd_operacao_nf and c.vl_total_nota > 0 and obter_empresa_estab(c.cd_estabelecimento) = cd_empresa_p and coalesce(e.ie_gerar_sped,'S') = 'S' and c.cd_estabelecimento	= cd_estabelecimento_p and ((b.ie_operacao_fiscal = 'S' AND ie_nota_entrada_w = 'N')
				or (ie_nota_entrada_w = 'S')) AND ((c.dt_emissao BETWEEN dt_inicio_p AND fim_dia(dt_fim_p) AND (ie_buscar_data_w = 'N'))
				OR	((c.nr_seq_lote_prot IS NOT NULL AND c.nr_seq_lote_prot::text <> '') AND (TRUNC(p.dt_mesano_referencia,'mm') = TRUNC(dt_inicio_p,'mm') AND (ie_buscar_data_w = 'P')))
				OR	((x.nr_seq_protocolo IS NOT NULL AND x.nr_seq_protocolo::text <> '') AND (TRUNC(z.dt_mesano_referencia,'mm') = TRUNC(dt_inicio_p,'mm') AND (ie_buscar_data_w = 'P')))
				OR	((c.nr_seq_protocolo IS NOT NULL AND c.nr_seq_protocolo::text <> '') AND (TRUNC(w.dt_mesano_referencia,'mm') = TRUNC(dt_inicio_p,'mm') AND (ie_buscar_data_w = 'P')))
				or	(((coalesce(c.nr_seq_lote_prot::text, '') = '') and (coalesce(x.nr_seq_protocolo::text, '') = '') and (coalesce(c.nr_seq_protocolo::text, '') = '')) and (c.dt_emissao BETWEEN dt_inicio_p AND fim_dia(dt_fim_p)) and (ie_buscar_data_w = 'P'))) and (b.ie_servico = 'S') and (c.dt_atualizacao_estoque IS NOT NULL AND c.dt_atualizacao_estoque::text <> '') and (c.cd_pessoa_fisica IS NOT NULL AND c.cd_pessoa_fisica::text <> '') AND ((c.ie_situacao = 1 AND ie_nota_cancelada_w = 'N')
				OR	((c.ie_situacao IN (1, 3)) AND (ie_nota_cancelada_w = 'S'))) and (((ie_consistir_cpf_cnpj_w = 'S') and (CASE WHEN c.cd_pessoa_fisica='' THEN obter_dados_pf_pj(null,c.cd_cgc,'C')  ELSE obter_dados_pf(c.cd_pessoa_fisica,'CPF') (END IS NOT NULL AND END::text <> '')))
				or (ie_consistir_cpf_cnpj_w = 'N')) )

union all

select	'0150' tp_registro,
	d.cd_cgc cd_participante,
	substr(obter_nome_pf_pj('', d.cd_cgc), 1, 80) nm_participante,
	coalesce(p.cd_bacen, '1058') cd_pais,
	d.cd_cgc nr_cnpj,
	'' nr_cpf,
	substr(CASE WHEN upper(d.nr_inscricao_estadual)='ISENTA' THEN  '' WHEN upper(d.nr_inscricao_estadual)='ISENTO' THEN  ''  ELSE elimina_caractere_especial(d.nr_inscricao_estadual) END , 1, 14) nr_inscricao_estadual,
	substr(obter_dados_pf_pj(null, d.cd_cgc, 'UF'),1,255) sg_uf,
	substr(d.cd_municipio_ibge || substr(calcula_digito('MODULO10', d.cd_municipio_ibge),1,1),1,7) cd_municipio_ibge,
	'' nr_suframa,
	substr(obter_dados_pf_pj(null, d.cd_cgc, 'R'),1,60) ds_endereco,
	substr(obter_dados_pf_pj(null, d.cd_cgc, 'NR'),1,255) nr_endereco,
	substr(obter_dados_pf_pj(null, d.cd_cgc, 'CO'),1,60) ds_complemento,
	substr(obter_dados_pf_pj(null, d.cd_cgc, 'B'),1,255) ds_bairro
FROM pessoa_juridica d
LEFT OUTER JOIN pais p ON (d.nr_seq_pais = p.nr_sequencia)
WHERE d.cd_cgc in (	select	c.cd_cgc
			FROM estabelecimento e, operacao_nota b, nota_fiscal c
LEFT OUTER JOIN lote_protocolo p ON (c.nr_seq_lote_prot = p.nr_sequencia)
LEFT OUTER JOIN conta_paciente x ON (c.nr_interno_conta = x.nr_interno_conta)
LEFT OUTER JOIN protocolo_convenio w ON (c.nr_seq_protocolo = w.nr_seq_protocolo)
LEFT OUTER JOIN protocolo_convenio z ON (x.nr_seq_protocolo = z.nr_seq_protocolo)
WHERE c.cd_operacao_nf	= b.cd_operacao_nf and c.cd_estabelecimento = e.cd_estabelecimento and c.vl_total_nota > 0 and obter_empresa_estab(c.cd_estabelecimento) = cd_empresa_p and coalesce(e.ie_gerar_sped,'S') = 'S' and c.cd_estabelecimento	= cd_estabelecimento_p and ((b.ie_operacao_fiscal = 'S' AND ie_nota_entrada_w = 'N')
			or (ie_nota_entrada_w = 'S')) AND ((c.dt_emissao BETWEEN dt_inicio_p AND fim_dia(dt_fim_p) AND (ie_buscar_data_w = 'N'))
			OR	((c.nr_seq_lote_prot IS NOT NULL AND c.nr_seq_lote_prot::text <> '') AND (TRUNC(p.dt_mesano_referencia,'mm') = TRUNC(dt_inicio_p,'mm') AND (ie_buscar_data_w = 'P')))
			OR	((x.nr_seq_protocolo IS NOT NULL AND x.nr_seq_protocolo::text <> '') AND (TRUNC(z.dt_mesano_referencia,'mm') = TRUNC(dt_inicio_p,'mm') AND (ie_buscar_data_w = 'P')))
			OR	((c.nr_seq_protocolo IS NOT NULL AND c.nr_seq_protocolo::text <> '') AND (TRUNC(w.dt_mesano_referencia,'mm') = TRUNC(dt_inicio_p,'mm') AND (ie_buscar_data_w = 'P')))
			or	(((coalesce(c.nr_seq_lote_prot::text, '') = '') and (coalesce(x.nr_seq_protocolo::text, '') = '') and (coalesce(c.nr_seq_protocolo::text, '') = '')) and (c.dt_emissao BETWEEN dt_inicio_p AND fim_dia(dt_fim_p)) and (ie_buscar_data_w = 'P'))) and (b.ie_servico = 'S') and (c.dt_atualizacao_estoque IS NOT NULL AND c.dt_atualizacao_estoque::text <> '') and (c.cd_cgc IS NOT NULL AND c.cd_cgc::text <> '') AND ((c.ie_situacao = 1 AND ie_nota_cancelada_w = 'N')
			OR	((c.ie_situacao IN (1, 3)) AND (ie_nota_cancelada_w = 'S'))) and (((ie_consistir_cpf_cnpj_w = 'S') and (CASE WHEN c.cd_pessoa_fisica='' THEN obter_dados_pf_pj(null,c.cd_cgc,'C')  ELSE obter_dados_pf(c.cd_pessoa_fisica,'CPF') (END IS NOT NULL AND END::text <> '')))
			or (ie_consistir_cpf_cnpj_w = 'N')) );

c02 CURSOR FOR
	SELECT	'0150' tp_registro,
		a.cd_pessoa_fisica cd_participante,
		substr(obter_nome_pf_pj(a.cd_pessoa_fisica, ''), 1, 80) nm_participante,
		CASE WHEN coalesce(a.nr_cpf,'0')='0' THEN  CASE WHEN n.ie_brasileiro='S' THEN  '1058'  ELSE coalesce(obter_compl_pf(a.cd_pessoa_fisica,'1','CBPAIS'),'8451') END   ELSE '1058' END  cd_pais,
		'' nr_cnpj,
		a.nr_cpf,
		'' nr_inscricao_estadual,
		CASE WHEN n.ie_brasileiro='N' THEN CASE WHEN coalesce(a.nr_cpf,'0')='0' THEN ''  ELSE substr((obter_compl_pf(a.cd_pessoa_fisica, 1, 'UF')),1,7) END   ELSE substr((obter_compl_pf(a.cd_pessoa_fisica, 1, 'UF')),1,7) END  sg_estado,
		CASE WHEN n.ie_brasileiro='N' THEN CASE WHEN coalesce(a.nr_cpf,'0')='0' THEN ''  ELSE substr((obter_compl_pf(a.cd_pessoa_fisica, 1, 'CDMDV')),1,7) END   ELSE substr((obter_compl_pf(a.cd_pessoa_fisica, 1, 'CDMDV')),1,7) END  cd_municipio_ibge,
		'' nr_suframa,
		CASE WHEN n.ie_brasileiro='N' THEN CASE WHEN coalesce(a.nr_cpf,'0')='0' THEN ''  ELSE substr(obter_dados_pf_pj(a.cd_pessoa_fisica, null, 'EN'),1,60) END   ELSE substr(obter_dados_pf_pj(a.cd_pessoa_fisica, null, 'EN'),1,60) END  ds_endereco,
		CASE WHEN n.ie_brasileiro='N' THEN CASE WHEN coalesce(a.nr_cpf,'0')='0' THEN ''  ELSE substr(obter_dados_pf_pj(a.cd_pessoa_fisica, null, 'NR'),1,255) END   ELSE substr(obter_dados_pf_pj(a.cd_pessoa_fisica, null, 'NR'),1,255) END  nr_endereco,
		CASE WHEN n.ie_brasileiro='N' THEN CASE WHEN coalesce(a.nr_cpf,'0')='0' THEN ''  ELSE substr(obter_dados_pf_pj(a.cd_pessoa_fisica, null, 'CO'),1,60) END   ELSE substr(obter_dados_pf_pj(a.cd_pessoa_fisica, null, 'CO'),1,60) END  ds_complemento,
		CASE WHEN n.ie_brasileiro='N' THEN CASE WHEN coalesce(a.nr_cpf,'0')='0' THEN ''  ELSE substr(obter_dados_pf_pj(a.cd_pessoa_fisica, null, 'B'),1,255) END   ELSE substr(obter_dados_pf_pj(a.cd_pessoa_fisica, null, 'B'),1,255) END  ds_bairro
	FROM pessoa_fisica a
LEFT OUTER JOIN nacionalidade n ON (a.cd_nacionalidade = n.cd_nacionalidade)
WHERE exists (	SELECT	c.cd_pessoa_fisica
			from	nota_fiscal c,
				operacao_nota b
			where	c.cd_operacao_nf	= b.cd_operacao_nf
			and (c.cd_estabelecimento = cd_estabelecimento_p)
			--or	(c.cd_estabelecimento = 13))
			and	c.cd_pessoa_fisica = a.cd_pessoa_fisica
			and	c.dt_emissao between dt_inicio_p and fim_dia(dt_fim_p)
			and	b.ie_operacao_fiscal = 'S'
			and	((ie_consistir_cpf_cnpj_w = 'S' AND a.nr_cpf IS NOT NULL AND a.nr_cpf::text <> '')
			or (ie_consistir_cpf_cnpj_w = 'N')))
	
union all

	select	'0150' tp_registro,
		d.cd_cgc cd_participante,
		substr(obter_nome_pf_pj('', d.cd_cgc), 1, 80) nm_participante,
		'1058' cd_pais,
		d.cd_cgc nr_cnpj,
		'' nr_cpf,
		substr(CASE WHEN upper(d.nr_inscricao_estadual)='ISENTA' THEN  '' WHEN upper(d.nr_inscricao_estadual)='ISENTO' THEN  ''  ELSE elimina_caractere_especial(d.nr_inscricao_estadual) END , 1, 14) nr_inscricao_estadual,
		substr(obter_dados_pf_pj(null, d.cd_cgc, 'UF'),1,255) sg_estado,
		substr(d.cd_municipio_ibge || substr(calcula_digito('MODULO10', d.cd_municipio_ibge),1,1),1,7) cd_municipio_ibge,
		'' nr_suframa,
		substr(obter_dados_pf_pj(null, d.cd_cgc, 'R'),1,255) ds_endereco,
		substr(obter_dados_pf_pj(null, d.cd_cgc, 'NR'),1,255) nr_endereco,
		substr(obter_dados_pf_pj(null, d.cd_cgc, 'CO'),1,60) ds_complemento,
		substr(obter_dados_pf_pj(null, d.cd_cgc, 'B'),1,255) ds_bairro
	from	pessoa_juridica d	
	where	exists (	select	c.cd_cgc_emitente
			from	nota_fiscal c,
				operacao_nota b
			where	c.cd_operacao_nf	= b.cd_operacao_nf
			and (c.cd_estabelecimento = cd_estabelecimento_p)
			--or	(c.cd_estabelecimento = 13))
			and	((c.cd_cgc_emitente = d.cd_cgc)
			or (c.cd_cgc = d.cd_cgc))
			and	b.ie_operacao_fiscal = 'S'
			and	c.dt_emissao between dt_inicio_p and fim_dia(dt_fim_p)
			and	((ie_consistir_cpf_cnpj_w = 'S' AND c.cd_cgc IS NOT NULL AND c.cd_cgc::text <> '')
			or (ie_consistir_cpf_cnpj_w = 'N')));

vet01	C01%RowType;
vet02	C02%RowType;


BEGIN

select	ie_consistir_cpf_cnpj
into STRICT	ie_consistir_cpf_cnpj_w
from	fis_efd_controle
where	nr_sequencia = nr_seq_controle_p;

select	nr_seq_regra_efd
into STRICT	nr_seq_regra_efd_w
from	fis_efd_controle
where	nr_sequencia = nr_seq_controle_p;

select	coalesce(max(ie_nota_entrada),'N'),
	coalesce(max(ie_buscar_data),'N'),
	coalesce(MAX(ie_nota_cancelada),'N')
into STRICT	ie_nota_entrada_w,
	ie_buscar_data_w,
	ie_nota_cancelada_w
from	fis_regra_efd_a100
where	nr_seq_regra_efd = nr_seq_regra_efd_w;

ie_local_gerar_sped_w := obter_param_usuario(5500, 25, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_local_gerar_sped_w);

if (ie_local_gerar_sped_w = 'N') or (ie_local_gerar_sped_w = 'A') then

	open C01;
	loop
	fetch C01 into	
		vet01;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		
		cd_municipio_ibge_w	:= vet01.cd_municipio_ibge;
		
		if (cd_municipio_ibge_w	= '0') then
			cd_municipio_ibge_w	:= '';
		end if;
		
		if (vet01.sg_uf = 'DF') then
			cd_municipio_ibge_w := '5300108';
		end if;
		
		if (vet01.cd_pais <> '1058') then
			
			nr_cnpj_w 				:= '';
			nr_cpf_w				:= '';
			nr_inscricao_estadual_w	:= '';
			cd_municipio_ibge_w		:= '';
			
		else

			nr_cnpj_w 				:= vet01.nr_cnpj;
			nr_cpf_w				:= vet01.nr_cpf;
			nr_inscricao_estadual_w	:= vet01.nr_inscricao_estadual;
			cd_municipio_ibge_w		:= cd_municipio_ibge_w;
		
		end if;
		
		ds_linha_w	:= substr(	sep_w || vet01.tp_registro	 		||
						sep_w || vet01.cd_participante	||
						sep_w || vet01.nm_participante	||
						sep_w || vet01.cd_pais		||
						sep_w || nr_cnpj_w		||
						sep_w || nr_cpf_w		||
						sep_w || nr_inscricao_estadual_w	||
						sep_w || cd_municipio_ibge_w 	||
						sep_w || vet01.nr_suframa		||
						sep_w || vet01.ds_endereco		||
						sep_w || vet01.nr_endereco		||
						sep_w || vet01.ds_complemento	||
						sep_w || vet01.ds_bairro		|| sep_w,1,8000);
		
		
		ds_arquivo_w		:= substr(ds_linha_w,1,4000);
		ds_arquivo_compl_w	:= substr(ds_linha_w,4001,4000);
		nr_seq_registro_w		:= nr_seq_registro_w + 1;
		nr_linha_w		:= nr_linha_w + 1;

		insert into fis_efd_arquivo(
			nr_sequencia,
			nm_usuario,
			dt_atualizacao,
			nm_usuario_nrec,
			dt_atualizacao_nrec,
			nr_seq_controle_efd,
			nr_linha,
			cd_registro,
			ds_arquivo,
			ds_arquivo_compl)
		values (	nr_seq_registro_w,
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nr_seq_controle_p,
			nr_linha_w,
			vet01.tp_registro,
			ds_arquivo_w,
			ds_arquivo_compl_w);
		end;
	end loop;
	close C01;
	
elsif (ie_local_gerar_sped_w = 'C') then

	open C02;
	loop
	fetch C02 into	
		vet02;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin

		cd_municipio_ibge_w	:= vet02.cd_municipio_ibge;
		
		if (cd_municipio_ibge_w	= '0') then
			cd_municipio_ibge_w	:= '';
		end if;
		
		if (vet02.sg_estado = 'DF') then
			cd_municipio_ibge_w := '5300108';
		end if;
		
		ds_linha_w	:= substr(	sep_w || vet02.tp_registro	 			||
						sep_w || vet02.cd_participante		||
						sep_w || vet02.nm_participante		||
						sep_w || vet02.cd_pais			||
						sep_w || vet02.nr_cnpj			||
						sep_w || vet02.nr_cpf			||
						sep_w || vet02.nr_inscricao_estadual		||
						sep_w || cd_municipio_ibge_w 		||
						sep_w || vet02.nr_suframa			||
						sep_w || vet02.ds_endereco			||
						sep_w || vet02.nr_endereco			||
						sep_w || vet02.ds_complemento		||
						sep_w || vet02.ds_bairro			|| sep_w,1,8000);
		
		
		ds_arquivo_w		:= substr(ds_linha_w,1,4000);
		ds_arquivo_compl_w	:= substr(ds_linha_w,4001,4000);
		nr_seq_registro_w	:= nr_seq_registro_w + 1;
		nr_linha_w		:= nr_linha_w + 1;

		insert into fis_efd_arquivo(
			nr_sequencia,
			nm_usuario,
			dt_atualizacao,
			nm_usuario_nrec,
			dt_atualizacao_nrec,
			nr_seq_controle_efd,
			nr_linha,
			cd_registro,
			ds_arquivo,
			ds_arquivo_compl)
		values (	nr_seq_registro_w,
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nr_seq_controle_p,
			nr_linha_w,
			vet02.tp_registro,
			ds_arquivo_w,
			ds_arquivo_compl_w);
		end;
	end loop;
	close C02;

elsif (ie_local_gerar_sped_w = 'P') then
	SELECT * FROM fis_pre_fat_0150_efd(nr_seq_controle_p, nm_usuario_p, cd_estabelecimento_p, dt_inicio_p, dt_fim_p, cd_empresa_p, ds_separador_p, nr_linha_w, nr_seq_registro_w) INTO STRICT nr_linha_w, nr_seq_registro_w;
end if;
	
commit;

qt_linha_p	:= nr_linha_w;
nr_sequencia_p	:= nr_seq_registro_w;	

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE fis_gerar_reg_0150_efd ( nr_seq_controle_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, dt_inicio_p timestamp, dt_fim_p timestamp, cd_empresa_p bigint, ds_separador_p text, qt_linha_p INOUT bigint, nr_sequencia_p INOUT bigint) FROM PUBLIC;

