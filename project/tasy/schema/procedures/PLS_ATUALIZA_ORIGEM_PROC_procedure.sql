-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_atualiza_origem_proc ( cd_procedimento_p bigint, nr_seq_prestador_p bigint, nm_usuario_p text, ie_origem_proced_p INOUT bigint) AS $body$
DECLARE


ie_origem_proced_w	bigint;
cd_area_procedimento_w	bigint;
cd_especialidade_w	bigint;
cd_grupo_proc_w		bigint;
nr_seq_regra_w		bigint;
cd_area_procedimento_ww	integer;
cd_especialidade_ww	integer;
cd_grupo_proc_ww	bigint;
cd_procedimento_ww	bigint;
ie_origem_proced_ww	bigint;
ie_liberar_w		varchar(1);
qt_procedimento_w	integer	:= 0;

C01 CURSOR FOR
	SELECT	nr_sequencia,
		cd_area_procedimento,
		cd_especialidade_proc,
		cd_grupo_proc,
		cd_procedimento,
		ie_origem_proced,
		ie_liberar
	from	pls_prestador_proc
	where	coalesce(cd_area_procedimento, cd_area_procedimento_w)	= cd_area_procedimento_w
	and	coalesce(cd_especialidade_proc, cd_especialidade_w) = cd_especialidade_w
	and	coalesce(cd_grupo_proc, cd_grupo_proc_w) = cd_grupo_proc_w
	and	coalesce(cd_procedimento, cd_procedimento_p) = cd_procedimento_p
	and	nr_seq_prestador = nr_seq_prestador_p;


BEGIN

/* Obter a estrutura do procedimento */

begin
select	cd_area_procedimento,
	cd_especialidade,
	cd_grupo_proc
into STRICT	cd_area_procedimento_w,
	cd_especialidade_w,
	cd_grupo_proc_w
from	estrutura_procedimento_v
where	cd_procedimento		= cd_procedimento_p;
exception
	when others then
	cd_area_procedimento_w	:= '';
	cd_especialidade_w	:= '';
	cd_grupo_proc_w		:= '';
end;

open C01;
loop
fetch C01 into
	nr_seq_regra_w,
	cd_area_procedimento_ww,
	cd_especialidade_ww,
	cd_grupo_proc_ww,
	cd_procedimento_ww,
	ie_origem_proced_ww,
	ie_liberar_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	if (ie_liberar_w	= 'N') then
		nr_seq_regra_w		:= 0;
		cd_area_procedimento_ww	:= 0;
		cd_especialidade_ww	:= 0;
		cd_grupo_proc_ww	:= 0;
		cd_procedimento_ww	:= 0;
		ie_origem_proced_ww	:= 0;
	end if;
	end;
end loop;
close C01;

if (nr_seq_regra_w	= 0) then
	ie_origem_proced_w	:= 0;
elsif (nr_seq_regra_w	> 0) then
	if (ie_origem_proced_ww	> 0) then
		ie_origem_proced_w	:= ie_origem_proced_ww;
	elsif (cd_grupo_proc_ww	> 0) then
		select	coalesce(max(ie_origem_proced),1)
		into STRICT	ie_origem_proced_w
		from	grupo_proc
		where	cd_grupo_proc	= cd_grupo_proc_ww;
	elsif (cd_especialidade_ww	> 0) then
		select	coalesce(max(ie_origem_proced),1)
		into STRICT	ie_origem_proced_w
		from	especialidade_proc
		where	cd_especialidade	= cd_especialidade_ww;
	elsif (cd_area_procedimento_ww	> 0) then
		select	coalesce(max(ie_origem_proced),1)
		into STRICT	ie_origem_proced_w
		from	area_procedimento
		where	cd_area_procedimento	= cd_area_procedimento_ww;
	end if;

	select	count(*)
	into STRICT	qt_procedimento_w
	from	procedimento
	where	cd_procedimento		= cd_procedimento_p
	and	ie_origem_proced	= ie_origem_proced_w;

	if (qt_procedimento_w	= 0) then
		select	coalesce(max(ie_origem_proced),0)
		into STRICT	ie_origem_proced_w
		from	procedimento
		where	cd_procedimento		= cd_procedimento_p;
	end if;
end if;

ie_origem_proced_w	:= -1;
ie_origem_proced_p	:= ie_origem_proced_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_atualiza_origem_proc ( cd_procedimento_p bigint, nr_seq_prestador_p bigint, nm_usuario_p text, ie_origem_proced_p INOUT bigint) FROM PUBLIC;

