-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_eis_audit_conta (cd_estabelecimento_p bigint, dt_mes_referencia_p timestamp, nm_usuario_p text) AS $body$
DECLARE


dt_inicial_w			timestamp;
dt_final_w			timestamp;
cd_auditor_w			varchar(10);
ie_tipo_auditoria_w		varchar(01);
cd_auditor_externo_w		varchar(10);
cd_setor_atendimento_w		bigint;
cd_local_estoque_w		bigint;
nr_seq_motivo_w			bigint;
nr_sequencia_w			eis_auditoria_conta.nr_sequencia%type;
ie_proc_mat_w			varchar(01);
nr_interno_conta_w		bigint;
cd_convenio_w			bigint;
cd_categoria_w			varchar(20);
ie_tipo_audit_item_w		varchar(01);
qt_ch_w				bigint;
dt_auditoria_w			timestamp;
cd_material_w			integer;
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
qt_original_w			double precision;
qt_ajuste_w			double precision;
vl_original_w			double precision;
vl_ajuste_w			double precision;
nm_usuario_original_w		varchar(15);

qt_amenor_w			double precision;
qt_amaior_w			double precision;
vl_amenor_w			double precision;
vl_amaior_w			double precision;
vl_unitario_w			double precision;
nr_seq_audit_ext_w		bigint;
vl_proc_w			double precision;
vl_mat_w			double precision;
cd_responsavel_w		varchar(10);
qt_orig_excl_w			bigint:= null; -- Usado para o parm 57
nr_sequencia_ww			bigint;
ie_tipo_atendimento_w		smallint;
dt_liberacao_w			timestamp;
nm_auditor_w			varchar(60);
ie_contra_auditoria_w		varchar(1);
ds_contra_auditoria_w		varchar(30);
ie_externa_agrup_w		varchar(1);
		
C01 CURSOR FOR
	SELECT	a.cd_auditor,
		a.ie_tipo_auditoria,
		a.cd_auditor_externo,
		c.cd_setor_atendimento,
		c.cd_local_estoque,
		b.nr_seq_motivo,
		'M' ie_proc_mat,
		d.nr_interno_conta,
		d.cd_convenio_parametro,
		d.cd_categoria_parametro,
		b.ie_tipo_auditoria,
		null,
		a.dt_auditoria,
		c.cd_material,
		null,
		null,
		CASE WHEN coalesce(b.ie_original,'N')='S' THEN  b.qt_original  ELSE 0 END  qt_original,
		b.qt_ajuste,
		c.vl_material vl_ajuste,
		CASE WHEN coalesce(b.ie_original,'N')='S' THEN  b.vl_material  ELSE 0 END  vl_original,
		c.nm_usuario_original,
		c.vl_unitario,
		null,
		a.cd_responsavel,
		null,
		obter_tipo_atendimento(d.nr_atendimento) ie_tipo_atendimento,
		a.dt_liberacao,
		coalesce(a.ie_contra_auditoria,'N'),
		'N' ie_externa_agrup
	from	auditoria_conta_paciente a,
		auditoria_matpaci b,
		material_atend_paciente c,
		conta_paciente d
	where	a.nr_sequencia		= b.nr_seq_auditoria
	and	b.nr_seq_matpaci	= c.nr_sequencia
	and	a.nr_interno_conta	= d.nr_interno_conta
	and	d.cd_estabelecimento	= cd_estabelecimento_p
	and	a.dt_auditoria between dt_inicial_w and dt_final_w
	and	coalesce(c.nr_seq_proc_pacote,0)	<> c.nr_sequencia
	
union all

	SELECT	a.cd_auditor,
		a.ie_tipo_auditoria,
		a.cd_auditor_externo,
		c.cd_setor_atendimento,
		0,
		b.nr_seq_motivo,
		'P' ie_proc_mat,
		d.nr_interno_conta,
		d.cd_convenio_parametro,
		d.cd_categoria_parametro,
		b.ie_tipo_auditoria,
		obter_proc_paciente_valor(c.nr_sequencia,2,1),
		a.dt_auditoria,
		null,
		c.cd_procedimento,
		c.ie_origem_proced,
		CASE WHEN coalesce(b.ie_original,'N')='S' THEN  b.qt_original  ELSE 0 END  qt_original,
		b.qt_ajuste,
		c.vl_procedimento vl_ajuste,
		CASE WHEN coalesce(b.ie_original,'N')='S' THEN  b.vl_procedimento  ELSE 0 END  vl_original,
		c.nm_usuario_original,
		dividir(b.vl_procedimento, b.qt_original),
		null,
		a.cd_responsavel,
		null,
		obter_tipo_atendimento(d.nr_atendimento) ie_tipo_atendimento,
		a.dt_liberacao,
		coalesce(a.ie_contra_auditoria,'N'),
		'N' ie_externa_agrup
	from	auditoria_conta_paciente a,
		auditoria_propaci b,
		procedimento_paciente c,
		conta_paciente d
	where	a.nr_sequencia		= b.nr_seq_auditoria
	and	b.nr_seq_propaci	= c.nr_sequencia
	and	a.nr_interno_conta	= d.nr_interno_conta
	and	d.cd_estabelecimento	= cd_estabelecimento_p
	and	a.dt_auditoria between dt_inicial_w and dt_final_w
	and 	coalesce(c.cd_motivo_exc_conta::text, '') = ''
	and	coalesce(c.nr_seq_proc_pacote,0)	<> c.nr_sequencia
	
union all
  --Esse union e devido ao parametro [57] da auditoria que exclui o proc. e faz um novo lancamento,
	select	a.cd_auditor,
		a.ie_tipo_auditoria,
		a.cd_auditor_externo,
		c.cd_setor_atendimento,
		0,
		b.nr_seq_motivo,
		'P' ie_proc_mat,
		d.nr_interno_conta,
		d.cd_convenio_parametro,
		d.cd_categoria_parametro,
		b.ie_tipo_auditoria,
		obter_proc_paciente_valor(c.nr_sequencia,2,1),
		a.dt_auditoria,
		null,
		c.cd_procedimento,
		c.ie_origem_proced,
		CASE WHEN coalesce(b.ie_original,'N')='S' THEN   b.qt_original  ELSE 0 END  qt_original, 
		b.qt_ajuste,
		c.vl_procedimento vl_ajuste,		
		CASE WHEN coalesce(b.ie_original,'N')='S' THEN  b.vl_procedimento  ELSE 0 END  vl_original,
		c.nm_usuario_original,
		dividir(b.vl_procedimento, b.qt_original),
		null,
		a.cd_responsavel,
		b.qt_original - b.qt_ajuste,
		obter_tipo_atendimento(d.nr_atendimento) ie_tipo_atendimento,
		a.dt_liberacao,
		coalesce(a.ie_contra_auditoria,'N'),
		'N' ie_externa_agrup
	FROM procedimento_paciente c, auditoria_propaci b, auditoria_conta_paciente a
LEFT OUTER JOIN conta_paciente d ON (a.nr_interno_conta = d.nr_interno_conta)
WHERE a.nr_sequencia          = b.nr_seq_auditoria and b.nr_seq_propaci        = c.nr_sequencia  and d.cd_estabelecimento	= cd_estabelecimento_p and a.dt_auditoria between dt_inicial_w and dt_final_w and (c.cd_motivo_exc_conta IS NOT NULL AND c.cd_motivo_exc_conta::text <> '') and substr(c.ds_compl_motivo_excon,1,4) = '999#'
	 
union all

	select	e.cd_auditor,
		e.ie_tipo_auditoria,
		e.cd_auditor_externo,
		b.cd_setor_atendimento,
		0,
		b.nr_seq_motivo,
		'M',
		e.nr_interno_conta,
		d.cd_convenio_parametro,
		d.cd_categoria_parametro,
		'',
		null,
		e.dt_auditoria,
		b.cd_item,
		null,
		null,
		null, --a.qt_material,
		b.qt_ajuste,
		null, --nvl(a.vl_material,0),
		null, --nvl(c.vl_material_original,0),
		null, --a.nm_usuario_original,
		null, --a.vl_unitario,
		b.nr_sequencia,
		e.cd_responsavel,
		null,
		obter_tipo_atendimento(d.nr_atendimento) ie_tipo_atendimento,
		e.dt_liberacao,
		coalesce(e.ie_contra_auditoria,'N'),
		'S' ie_externa_agrup
	from	conta_paciente  	 d,
		
		auditoria_externa 	 b,
		auditoria_conta_paciente e
	where 	--a.nr_sequencia	    = c.nr_seq_item
	/*and*/
 	e.nr_sequencia      = b.nr_seq_auditoria
	--and 	c.nr_seq_audit_ext  = b.nr_sequencia
	and 	d.nr_interno_conta = e.nr_interno_conta
	and 	d.cd_estabelecimento = cd_estabelecimento_p
	and 	b.ie_tipo_item = 'M'
	--and	a.cd_motivo_exc_conta is null

	--and	nvl(a.nr_seq_proc_pacote,0)	<> a.nr_sequencia
	and	e.dt_auditoria between dt_inicial_w and dt_final_w
	
union all

	select	e.cd_auditor,
		e.ie_tipo_auditoria,
		e.cd_auditor_externo,
		b.cd_setor_atendimento,
		0,
		b.nr_seq_motivo,
		'P',
		e.nr_interno_conta,
		d.cd_convenio_parametro,
		d.cd_categoria_parametro,
		'',
		null,
		e.dt_auditoria,
		null,
		b.cd_item,
		b.ie_origem_proced,
		null, --a.qt_procedimento,
		b.qt_ajuste,
		null, --nvl(a.vl_procedimento,0),
		null, --nvl(c.vl_procedimento_orig,0),
		null, --a.nm_usuario_original,
		null, --dividir(nvl(c.vl_procedimento_orig,0),b.qt_original)
		b.nr_sequencia,
		e.cd_responsavel,
		null,
		obter_tipo_atendimento(d.nr_atendimento) ie_tipo_atendimento,
		e.dt_liberacao,
		coalesce(e.ie_contra_auditoria,'N'),
		'S' ie_externa_agrup
	from	conta_paciente		 d,
		
		auditoria_externa 	 b,
		auditoria_conta_paciente e
	where 	--c.nr_seq_audit_ext  = b.nr_sequencia
	--and 	a.nr_sequencia	    = c.nr_seq_item

	/*and*/
 	d.cd_estabelecimento = cd_estabelecimento_p
	and 	b.ie_tipo_item = 'P'
	and 	d.nr_interno_conta = e.nr_interno_conta
	and 	e.nr_sequencia = b.nr_seq_auditoria
	--and	a.cd_motivo_exc_conta is null

	--and	nvl(a.nr_seq_proc_pacote,0)	<> a.nr_sequencia
	and	e.dt_auditoria between dt_inicial_w and dt_final_w;		
		

BEGIN

nr_sequencia_ww := Gravar_Log_Indicador(607, Wheb_mensagem_pck.get_Texto(305934), clock_timestamp(), trunc(dt_mes_referencia_p), nm_usuario_p, nr_sequencia_ww);
			/*'Auditoria conta paciente'*/

dt_inicial_w		:= trunc(dt_mes_referencia_p, 'month');
dt_final_w		:= trunc(last_day(dt_mes_referencia_p)) + 86399/86400;

delete	from eis_auditoria_conta
where	cd_estabelecimento	= cd_estabelecimento_p
and	dt_referencia		= dt_inicial_w;

open C01;
loop
fetch 	C01 into	
	cd_auditor_w,
	ie_tipo_auditoria_w,
	cd_auditor_externo_w,
	cd_setor_atendimento_w,
	cd_local_estoque_w,
	nr_seq_motivo_w,
	ie_proc_mat_w,
	nr_interno_conta_w,
	cd_convenio_w,
	cd_categoria_w,
	ie_tipo_audit_item_w,
	qt_ch_w,
	dt_auditoria_w,
	cd_material_w,
	cd_procedimento_w,
	ie_origem_proced_w,
	qt_original_w,
	qt_ajuste_w,	
	vl_ajuste_w,
	vl_original_w,
	nm_usuario_original_w,
	vl_unitario_w,
	nr_seq_audit_ext_w,
	cd_responsavel_w,
	qt_orig_excl_w,
	ie_tipo_atendimento_w,
	dt_liberacao_w,
	ie_contra_auditoria_w,
	ie_externa_agrup_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin	
	
	
	if (ie_tipo_auditoria_w = 'E') and (ie_externa_agrup_w = 'S') then
	
		if (ie_proc_mat_w = 'M') then
		
			begin						
			select 	sum(b.qt_material),
				coalesce(sum(a.vl_material_original),0),
				max(b.nm_usuario_original),
				coalesce(max(b.vl_unitario),0),
				coalesce(sum(b.vl_material),0)
			into STRICT	qt_original_w,
				vl_original_w,
				nm_usuario_original_w,
				vl_unitario_w,
				vl_mat_w
			from 	auditoria_externa_item a,
				material_atend_paciente b
			where 	a.nr_seq_audit_ext = nr_seq_audit_ext_w
			and 	a.nr_seq_item = b.nr_sequencia
			and 	b.nr_interno_conta = nr_interno_conta_w
			and	coalesce(b.cd_motivo_exc_conta::text, '') = ''
			and	coalesce(b.nr_seq_proc_pacote,0)	<> b.nr_sequencia;
			exception
				when others then
				qt_original_w	:= 0;
				vl_ajuste_w	:= 0;
				vl_original_w	:= 0;
				nm_usuario_original_w := 0;
				vl_unitario_w 	:= 0;
				vl_ajuste_w	:= 0;
				vl_mat_w	:= 0;
			end;
			
			if (coalesce(qt_ajuste_w::text, '') = '') then
				vl_ajuste_w:= vl_mat_w;
			else
				vl_ajuste_w:= vl_mat_w + ((qt_ajuste_w - qt_original_w) * vl_unitario_w);
			end if;
		
		elsif (ie_proc_mat_w = 'P') then
		
			begin						
			select 	sum(b.qt_procedimento),
				coalesce(sum(0),0),
				coalesce(sum(a.vl_procedimento_orig),0),
				max(b.nm_usuario_original),
				coalesce(max(dividir(coalesce(a.vl_procedimento_orig,0),b.qt_procedimento)),0),
				coalesce(sum(b.vl_procedimento),0)
			into STRICT	qt_original_w,
				vl_ajuste_w,
				vl_original_w,
				nm_usuario_original_w,
				vl_unitario_w,
				vl_proc_w
			from 	auditoria_externa_item a,
				procedimento_paciente b
			where 	a.nr_seq_audit_ext = nr_seq_audit_ext_w
			and 	a.nr_seq_item = b.nr_sequencia
			and 	b.nr_interno_conta = nr_interno_conta_w
			and	coalesce(b.cd_motivo_exc_conta::text, '') = ''
			and	coalesce(b.nr_seq_proc_pacote,0)	<> b.nr_sequencia;
			exception
				when others then
				qt_original_w	:= 0;
				vl_ajuste_w	:= 0;
				vl_original_w	:= 0;
				nm_usuario_original_w := 0;
				vl_unitario_w := 0;
				vl_ajuste_w	:= 0;
				vl_proc_w	:= 0;
			end;
			
			
			if (coalesce(qt_ajuste_w::text, '') = '') then
				vl_ajuste_w:= vl_proc_w;
			else
				if (vl_proc_w < 0) then
					vl_proc_w:= vl_proc_w * -1;
				end if;					
				
				vl_unitario_w:=  dividir(vl_proc_w, qt_original_w);												
				vl_ajuste_w:=  vl_proc_w + ((qt_ajuste_w - qt_original_w) * vl_unitario_w);
			end if;
			
		
		end if;
		
	elsif	((ie_tipo_auditoria_w = 'I') or (ie_externa_agrup_w = 'N')) then
	
		if (ie_proc_mat_w = 'M') then
		
			if (coalesce(qt_ajuste_w::text, '') = '') then
				vl_ajuste_w:= vl_ajuste_w;
			else
				if (vl_ajuste_w < 0) then
					vl_ajuste_w:= vl_ajuste_w * -1;
				end if;				
				vl_ajuste_w:= vl_ajuste_w + ((qt_ajuste_w - qt_original_w) * vl_unitario_w);
			end if;
			
		elsif (ie_proc_mat_w = 'P') then
		
			if (coalesce(qt_ajuste_w::text, '') = '') then
				vl_ajuste_w:= vl_ajuste_w;
			else
				if (vl_ajuste_w < 0) then
					vl_ajuste_w:= vl_ajuste_w * -1;
				end if;					
				
				vl_ajuste_w:=  vl_ajuste_w + ((qt_ajuste_w - qt_original_w) * vl_unitario_w);
			end if;
		
		end if;
	
	end if;	
	
	
	--Qtde a menor		OS 342811
	qt_amenor_w:= 0;	
	if (qt_ajuste_w IS NOT NULL AND qt_ajuste_w::text <> '') and (qt_original_w > qt_ajuste_w) then
		qt_amenor_w:= qt_original_w - qt_ajuste_w;
	end if;

	--Qtde a maior		OS 342811
	qt_amaior_w:= 0;
	if (qt_ajuste_w IS NOT NULL AND qt_ajuste_w::text <> '') and (qt_original_w < qt_ajuste_w) then
		qt_amaior_w:= qt_ajuste_w - qt_original_w;
	end if;
	
	--Valor a menor		OS 342811
	vl_amenor_w:= 0;
	if (qt_amenor_w > 0) and (vl_unitario_w IS NOT NULL AND vl_unitario_w::text <> '') then
		vl_amenor_w:= vl_unitario_w * qt_amenor_w;
	elsif (vl_original_w > vl_ajuste_w) and (ie_tipo_auditoria_w = 'E') then
		vl_amenor_w:= vl_original_w - vl_ajuste_w;
	end if;
	
	--Valor a maior		OS 342811
	vl_amaior_w:= 0;
	if (qt_amaior_w > 0) and (vl_unitario_w IS NOT NULL AND vl_unitario_w::text <> '') then
		vl_amaior_w:= vl_unitario_w * qt_amaior_w;
	elsif (vl_original_w < vl_ajuste_w) and (ie_tipo_auditoria_w = 'E') then
		vl_amaior_w:= vl_ajuste_w - vl_original_w;
	end if;	
	
	select	nextval('eis_auditoria_conta_seq')
	into STRICT	nr_sequencia_w
	;
	
	select 	obter_nome_pf(cd_auditor_w)
	into STRICT	nm_auditor_w
	;
	
	ds_contra_auditoria_w:= Wheb_mensagem_pck.get_texto(798786);
	if (ie_contra_auditoria_w = 'S') then
		ds_contra_auditoria_w:= Wheb_mensagem_pck.get_texto(798785);
	end if;
	
	insert into eis_auditoria_conta(nr_sequencia,
		cd_estabelecimento,
		dt_referencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		cd_auditor,
		ie_tipo_auditoria,
		cd_auditor_externo,
		cd_setor_atendimento,
		cd_local_estoque,
		nr_seq_motivo,
		ie_proc_mat,
		cd_convenio,
		cd_categoria,
		ie_tipo_audit_item,
		qt_ch,
		nr_interno_conta,
		dt_auditoria,
		cd_material,
		cd_procedimento,
		ie_origem_proced,
		qt_original,
		qt_ajuste,
		vl_ajuste,
		vl_original,
		nm_usuario_orig_item,
		qt_amenor,
		qt_amaior,
		vl_amenor,
		vl_amaior,
		cd_responsavel,
		ie_tipo_atendimento,
		dt_liberacao,
		nm_auditor_audit,
		ie_contra_auditoria,
		ds_contra_auditoria)
	values (nr_sequencia_w,
		cd_estabelecimento_p,
		dt_inicial_w,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		cd_auditor_w,
		ie_tipo_auditoria_w,
		cd_auditor_externo_w,
		cd_setor_atendimento_w,
		cd_local_estoque_w,
		nr_seq_motivo_w,
		ie_proc_mat_w,
		cd_convenio_w,
		cd_categoria_w,
		ie_tipo_audit_item_w,
		coalesce(qt_ch_w,0),
		nr_interno_conta_w,
		dt_auditoria_w,
		cd_material_w,
		cd_procedimento_w,
		ie_origem_proced_w,
		CASE WHEN coalesce(qt_orig_excl_w::text, '') = '' THEN  qt_original_w  ELSE qt_orig_excl_w END ,
		qt_ajuste_w,
		CASE WHEN coalesce(qt_orig_excl_w::text, '') = '' THEN  vl_ajuste_w  ELSE 0 END ,
		coalesce(vl_original_w,0),
		nm_usuario_original_w,
		qt_amenor_w,
		qt_amaior_w,
		vl_amenor_w,
		vl_amaior_w,
		cd_responsavel_w,
		ie_tipo_atendimento_w,
		dt_liberacao_w,
		nm_auditor_w,
		ie_contra_auditoria_w,
		ds_contra_auditoria_w);	
	end;
end loop;
close C01;

CALL Atualizar_Log_Indicador(clock_timestamp(), nr_sequencia_ww);

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_eis_audit_conta (cd_estabelecimento_p bigint, dt_mes_referencia_p timestamp, nm_usuario_p text) FROM PUBLIC;

