-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_cargo_perfil_setor ( cd_cargo_p bigint, cd_pessoa_fisica_p text, ie_opcao_p text, cd_setor_atendimento_p bigint, nm_usuario_p text, nm_usuario_atual_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE

 
cd_perfil_w			integer;
cd_setor_atendimento_w		integer;
NR_SEQ_REGRA_CARGO_w		bigint;
qt_registro_w			bigint;
ie_liberar_cargos_w		varchar(1);
ie_limpar_perfil_w		varchar(1);
ie_limpar_setor_w		varchar(1);
ie_tipo_evolucao_w		varchar(3);
cd_estabelecimento_w  		integer;
cd_setor_padrao_w  		integer;
nr_seq_perfil_w  		integer;
cd_estabelecimento_principal_w integer;

C01 CURSOR FOR 
	SELECT	cd_perfil 
	from	cargo_perfil 
	where	cd_cargo = cd_cargo_p;

C02 CURSOR FOR 
	SELECT	cd_setor_atendimento 
	from	cargo_setor 
	where	cd_cargo = cd_cargo_p;
	
c03 CURSOR FOR 
	SELECT	cd_setor_atendimento 
	from	regra_cargo_setor_lib 
	where	nr_seq_regra_cargo	= nr_seq_regra_cargo_w;
	
c04 CURSOR FOR 
	SELECT	cd_perfil 
	from	regra_cargo_perfil_lib 
	where	nr_seq_regra_cargo	= nr_seq_regra_cargo_w;
	
c05 CURSOR FOR 
	 SELECT cd_estabelecimento, 
		cd_setor_padrao, 
		nr_seq_perfil 
	 from 	cargo_estabelecimento 
	 where 	cd_cargo			= cd_cargo_p 
	 and 	ie_estabelecimento_principal	= 'N';	
 

BEGIN 
 
if (coalesce(nm_usuario_atual_p::text, '') = '') then 
	CALL wheb_mensagem_pck.exibir_mensagem_abort(189463);
end if;
 
select	max(nr_sequencia) 
into STRICT	nr_seq_regra_cargo_w 
from	regra_cargo_setor 
where	cd_cargo			= cd_cargo_p 
and	cd_setor_atendimento	= cd_setor_atendimento_p;
 
ie_limpar_perfil_w := obter_param_usuario(230, 31, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_limpar_perfil_w);
ie_limpar_setor_w := obter_param_usuario(230, 32, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_limpar_setor_w);
 
if (coalesce(nr_seq_regra_cargo_w,0) <> 0) or (coalesce(ie_limpar_perfil_w,'S') = 'S') then 
	delete	from usuario_perfil 
	where	nm_usuario	= nm_usuario_atual_p;
end if;
 
if (coalesce(nr_seq_regra_cargo_w,0) <> 0) or (coalesce(ie_limpar_setor_w,'S') = 'S') then 
	delete	from usuario_setor 
	where 	nm_usuario_param = nm_usuario_atual_p;
end if;
 
ie_liberar_cargos_w := obter_param_usuario(230, 29, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_liberar_cargos_w);
 
if	not (nr_seq_regra_cargo_w IS NOT NULL AND nr_seq_regra_cargo_w::text <> '' AND ie_liberar_cargos_w = 'N') then 
 
	open C01;
	loop 
	fetch C01 into cd_perfil_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin 
	 
		select count(*) 
		into STRICT	qt_registro_w 
		from	usuario_perfil 
		where	nm_usuario = nm_usuario_atual_p 
		and	cd_perfil = cd_perfil_w;
		 
		if (qt_registro_w = 0) then 
			insert into usuario_perfil(nm_usuario, 
				cd_perfil, 
				dt_atualizacao, 
				nm_usuario_atual) 
			values (nm_usuario_atual_p, 
				cd_perfil_w, 
				clock_timestamp(), 
				nm_usuario_p);
		end if;
		 
		end;
	end loop;
	close C01;
	 
	open C02;
	loop 
	fetch C02 into cd_setor_atendimento_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin 
		 
		select	count(*) 
		into STRICT	qt_registro_w 
		from	usuario_setor 
		where	nm_usuario_param = nm_usuario_atual_p 
		and	cd_setor_atendimento = cd_setor_atendimento_w;
		 
		if (qt_registro_w = 0) then 
		 
			insert into usuario_setor(	nm_usuario_param, 
						cd_setor_atendimento, 
						dt_atualizacao, 
						nm_usuario) 
				values (	nm_usuario_atual_p, 
						cd_setor_atendimento_w, 
						clock_timestamp(), 
						nm_usuario_p);
			end if;
		end;
	end loop;
	close C02;
 
end if;
 
if (nr_seq_regra_cargo_w IS NOT NULL AND nr_seq_regra_cargo_w::text <> '') then 
	 
	open C03;
	loop 
	fetch C03 into	 
		cd_setor_atendimento_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin 
		 
		select	count(*) 
		into STRICT	qt_registro_w 
		from	usuario_setor 
		where	nm_usuario_param	= nm_usuario_atual_p 
		and	cd_setor_Atendimento	= cd_setor_atendimento_w;
	 
		if (qt_registro_w	= 0) then 
			insert into usuario_setor(nm_usuario_param, 
				cd_setor_atendimento, 
				dt_atualizacao, 
				nm_usuario) 
			values (nm_usuario_atual_p, 
				cd_setor_atendimento_w, 
				clock_timestamp(), 
				nm_usuario_p);
			 
		end if;
		end;
	end loop;
	close C03;
	 
	open C04;
	loop 
	fetch C04 into	 
		cd_perfil_w;
	EXIT WHEN NOT FOUND; /* apply on C04 */
		begin 
		 
		select	count(*) 
		into STRICT	qt_registro_w 
		from	usuario_perfil 
		where	cd_perfil		= cd_perfil_w 
		and	nm_usuario	= nm_usuario_atual_p;
		if (qt_registro_w	= 0) then 
			insert into usuario_perfil(nm_usuario, 
				cd_perfil, 
				dt_atualizacao, 
				nm_usuario_atual) 
			values (nm_usuario_atual_p, 
				cd_perfil_w, 
				clock_timestamp(), 
				nm_usuario_p);
		end if;
		end;
	end loop;
	close C04;
	 
end if;
 
select 	max(cd_estabelecimento) 
into STRICT 	cd_estabelecimento_principal_w 
from 	cargo_estabelecimento 
where 	cd_cargo			= cd_cargo_p 
and 	ie_estabelecimento_principal	= 'S';
 
if (cd_estabelecimento_principal_w IS NOT NULL AND cd_estabelecimento_principal_w::text <> '') then 
	UPDATE	usuario 
	SET	cd_estabelecimento	= cd_estabelecimento_principal_w 
	where	nm_usuario		= nm_usuario_atual_p 
	and	cd_pessoa_fisica	= cd_pessoa_fisica_p;
end if;
 
open c05;
loop 
fetch c05 into 
	cd_estabelecimento_w, 
	cd_setor_padrao_w, 
	nr_seq_perfil_w;
EXIT WHEN NOT FOUND; /* apply on c05 */
	begin 
	select	count(*) 
	into STRICT	qt_registro_w 
	from	usuario_estabelecimento 
	where	nm_usuario_param	= nm_usuario_atual_p 
	and	cd_estabelecimento	= cd_estabelecimento_w;
	 
	if (qt_registro_w = 0) then 
		insert into usuario_estabelecimento(	nm_usuario_param, 
				cd_estabelecimento, 
				dt_atualizacao, 
				nm_usuario, 
				dt_atualizacao_nrec, 
				nm_usuario_nrec, 
				cd_setor_padrao, 
				nr_seq_perfil) 
		values (	nm_usuario_atual_p, 
				cd_estabelecimento_w, 
				clock_timestamp(), 
				nm_usuario_p, 
				clock_timestamp(), 
				nm_usuario_p, 
				cd_setor_padrao_w, 
				nr_seq_perfil_w);
	end if;
	end;
end loop;
close C05;
 
 
begin 
select	ie_tipo_evolucao 
into STRICT	ie_tipo_evolucao_w 
from	cargo 
where	cd_cargo		= cd_cargo_p;
exception 
when others then 
	ie_tipo_evolucao_w	:= '';
end;
 
update	usuario 
set	ie_tipo_evolucao	= coalesce(ie_tipo_evolucao_w,ie_tipo_evolucao) 
where	nm_usuario		= nm_usuario_atual_p 
and	cd_pessoa_fisica	= cd_pessoa_fisica_p 
and	cd_estabelecimento	= cd_estabelecimento_p;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_cargo_perfil_setor ( cd_cargo_p bigint, cd_pessoa_fisica_p text, ie_opcao_p text, cd_setor_atendimento_p bigint, nm_usuario_p text, nm_usuario_atual_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

