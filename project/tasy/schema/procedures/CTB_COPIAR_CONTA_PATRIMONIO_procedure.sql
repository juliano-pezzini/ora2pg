-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ctb_copiar_conta_patrimonio (cd_empresa_origem_p pat_conta_contabil.cd_empresa%type default null, cd_empresa_destino_p pat_conta_contabil.cd_empresa%type default null, cd_estab_origem_p pat_conta_contabil.cd_estabelecimento%type default null, cd_estab_destino_p pat_conta_contabil.cd_estabelecimento%type default null, nm_usuario_p pat_conta_contabil.nm_usuario%type DEFAULT NULL) AS $body$
DECLARE



nr_seq_grupo_w			historico_padrao.nr_seq_grupo_emp%type;
cd_estab_matriz_origem_w	estabelecimento.cd_estabelecimento%type;
cd_estab_matriz_destino_w	estabelecimento.cd_estabelecimento%type;
cd_empresa_destino_w		pat_conta_contabil.cd_empresa%type;
nr_sequencia_w			pat_conta_contabil.nr_sequencia%type;
qt_origem_w			bigint;
qt_destino_w			bigint;

c01 CURSOR FOR
	SELECT	nr_sequencia,
		cd_conta_contabil,
		dt_vigencia,
		pr_depreciacao,
		cd_conta_deprec_acum,
		cd_conta_deprec_res,
		cd_historico,
		cd_conta_baixa,
		cd_hist_baixa,
		cd_hist_transf,
		pr_deprec_fiscal,
		ie_situacao,
		cd_conta_ajuste_pat,
		cd_conta_cap_social,
		cd_hist_ajuste_pat,
		ds_regra,
		ie_contab_entrada_aval,
		cd_hist_entrada_aval,
		cd_conta_entrada_aval,
		cd_estabelecimento
	from	pat_conta_contabil
	where	cd_empresa = coalesce(cd_empresa_origem_p, obter_empresa_estab(cd_estab_origem_p))
	and	((cd_estabelecimento = cd_estab_matriz_origem_w) or (coalesce(cd_estabelecimento::text, '') = ''));
c01_w		c01%rowtype;


BEGIN

nr_seq_grupo_w	:= holding_pck.get_grupo_emp_estrut_vigente(coalesce(cd_empresa_origem_p, obter_empresa_estab(cd_estab_origem_p)));

begin

select  a.cd_estabelecimento
into STRICT	cd_estab_matriz_origem_w
from    estabelecimento a
where   a.cd_empresa = coalesce(cd_empresa_origem_p, a.cd_empresa)
and	a.cd_estabelecimento = coalesce(cd_estab_origem_p, a.cd_estabelecimento)
and	a.ie_tipo_estab = 'M';
exception
when no_data_found then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(1116521);
when too_many_rows then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(1116523);
end;

begin
select  a.cd_estabelecimento
into STRICT	cd_estab_matriz_destino_w
from    estabelecimento a
where   a.cd_empresa = coalesce(cd_empresa_destino_p, a.cd_empresa)
and	a.cd_estabelecimento = coalesce(cd_estab_destino_p, a.cd_estabelecimento)
and	a.ie_tipo_estab = 'M';	
exception
when no_data_found then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(1116520);
when too_many_rows then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(1116523);
end;

if (cd_estab_origem_p IS NOT NULL AND cd_estab_origem_p::text <> '') then
	cd_estab_matriz_origem_w := cd_estab_origem_p;
end if;

cd_empresa_destino_w := obter_empresa_estab(cd_estab_matriz_destino_w);

select 	count(*)
into STRICT		qt_origem_w
from  	pat_conta_contabil
where  cd_empresa = coalesce(cd_empresa_origem_p, obter_empresa_estab(cd_estab_origem_p))
and  		((cd_estabelecimento = cd_estab_matriz_origem_w) or (coalesce(cd_estabelecimento::text, '') = ''));

select 	count(*)
into STRICT		qt_destino_w
from  	pat_conta_contabil
where  cd_empresa = coalesce(cd_empresa_destino_p, obter_empresa_estab(cd_estab_destino_p))
and  		((cd_estabelecimento = cd_estab_matriz_destino_w) or (coalesce(cd_estabelecimento::text, '') = ''));

if (dividir((qt_destino_w * 100),  qt_origem_w) <= 10 and qt_origem_w > 0) then
	open c01;
	loop
	fetch c01 into	
		c01_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
	
		if (coalesce(c01_w.cd_estabelecimento::text, '') = '') then
			cd_estab_matriz_destino_w := null;
		end if;
	
		if (cd_estab_destino_p IS NOT NULL AND cd_estab_destino_p::text <> '') then
			cd_estab_matriz_destino_w := cd_estab_destino_p;
		end if;
	
		select	coalesce(max(nr_sequencia),0) + 1
		into STRICT	nr_sequencia_w
		from	pat_conta_contabil;
		
		if (nr_seq_grupo_w > 0) then
			begin
	
			insert into pat_conta_contabil(nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						cd_conta_contabil,
						dt_vigencia,
						pr_depreciacao,
						cd_estabelecimento,
						cd_conta_deprec_acum,
						cd_conta_deprec_res,
						cd_historico,
						cd_conta_baixa,
						cd_hist_baixa,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						cd_hist_transf,
						pr_deprec_fiscal,
						ie_situacao,
						cd_conta_ajuste_pat,
						cd_conta_cap_social,
						cd_hist_ajuste_pat,
						cd_empresa,
						ds_regra,
						ie_contab_entrada_aval,
						cd_hist_entrada_aval,
						cd_conta_entrada_aval,
						nr_seq_conta_ref)
					values (nr_sequencia_w,
						clock_timestamp(),
						nm_usuario_p,
						holding_pck.get_conta_contab_ref(coalesce(cd_empresa_destino_p, cd_empresa_destino_w), c01_w.cd_conta_contabil),
						c01_w.dt_vigencia,
						c01_w.pr_depreciacao,
						cd_estab_matriz_destino_w,
						holding_pck.get_conta_contab_ref(coalesce(cd_empresa_destino_p, cd_empresa_destino_w), c01_w.cd_conta_deprec_acum),
						holding_pck.get_conta_contab_ref(coalesce(cd_empresa_destino_p, cd_empresa_destino_w), c01_w.cd_conta_deprec_res),
						holding_pck.get_hist_padrao_ref(coalesce(cd_empresa_destino_p, cd_empresa_destino_w), c01_w.cd_historico),
						holding_pck.get_conta_contab_ref(coalesce(cd_empresa_destino_p, cd_empresa_destino_w), c01_w.cd_conta_baixa),
						holding_pck.get_hist_padrao_ref(coalesce(cd_empresa_destino_p, cd_empresa_destino_w), c01_w.cd_hist_baixa),
						clock_timestamp(),
						nm_usuario_p,
						holding_pck.get_hist_padrao_ref(coalesce(cd_empresa_destino_p, cd_empresa_destino_w), c01_w.cd_hist_transf),
						c01_w.pr_deprec_fiscal,
						c01_w.ie_situacao,
						holding_pck.get_conta_contab_ref(coalesce(cd_empresa_destino_p, cd_empresa_destino_w), c01_w.cd_conta_ajuste_pat),
						holding_pck.get_conta_contab_ref(coalesce(cd_empresa_destino_p, cd_empresa_destino_w), c01_w.cd_conta_cap_social),
						holding_pck.get_hist_padrao_ref(coalesce(cd_empresa_destino_p, cd_empresa_destino_w), c01_w.cd_hist_ajuste_pat),
						coalesce(cd_empresa_destino_p, cd_empresa_destino_w),
						c01_w.ds_regra,
						c01_w.ie_contab_entrada_aval,
						holding_pck.get_hist_padrao_ref(coalesce(cd_empresa_destino_p, cd_empresa_destino_w), c01_w.cd_hist_entrada_aval),
						holding_pck.get_conta_contab_ref(coalesce(cd_empresa_destino_p, cd_empresa_destino_w), c01_w.cd_conta_entrada_aval),
						c01_w.nr_sequencia);
			end;
		elsif (nr_seq_grupo_w = 0) then
			begin
	
			insert into pat_conta_contabil(nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						cd_conta_contabil,
						dt_vigencia,
						pr_depreciacao,
						cd_estabelecimento,
						cd_conta_deprec_acum,
						cd_conta_deprec_res,
						cd_historico,
						cd_conta_baixa,
						cd_hist_baixa,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						cd_hist_transf,
						pr_deprec_fiscal,
						ie_situacao,
						cd_conta_ajuste_pat,
						cd_conta_cap_social,
						cd_hist_ajuste_pat,
						cd_empresa,
						ds_regra,
						ie_contab_entrada_aval,
						cd_hist_entrada_aval,
						cd_conta_entrada_aval,
						nr_seq_conta_ref)
					values (nr_sequencia_w,
						clock_timestamp(),
						nm_usuario_p,
						c01_w.cd_conta_contabil,
						c01_w.dt_vigencia,
						c01_w.pr_depreciacao,
						cd_estab_matriz_destino_w,
						c01_w.cd_conta_deprec_acum,
						c01_w.cd_conta_deprec_res,
						c01_w.cd_historico,
						c01_w.cd_conta_baixa,
						c01_w.cd_hist_baixa,
						clock_timestamp(),
						nm_usuario_p,
						c01_w.cd_hist_transf,
						c01_w.pr_deprec_fiscal,
						c01_w.ie_situacao,
						c01_w.cd_conta_ajuste_pat,
						c01_w.cd_conta_cap_social,
						c01_w.cd_hist_ajuste_pat,
						coalesce(cd_empresa_destino_p, cd_empresa_destino_w),
						c01_w.ds_regra,
						c01_w.ie_contab_entrada_aval,
						c01_w.cd_hist_entrada_aval,
						c01_w.cd_conta_entrada_aval,
						null);
	
			end;
		end if;
	
		end;
	end loop;
close c01;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_copiar_conta_patrimonio (cd_empresa_origem_p pat_conta_contabil.cd_empresa%type default null, cd_empresa_destino_p pat_conta_contabil.cd_empresa%type default null, cd_estab_origem_p pat_conta_contabil.cd_estabelecimento%type default null, cd_estab_destino_p pat_conta_contabil.cd_estabelecimento%type default null, nm_usuario_p pat_conta_contabil.nm_usuario%type DEFAULT NULL) FROM PUBLIC;

