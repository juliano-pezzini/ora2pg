-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_sca_contrato_benef ( nr_seq_segurado_p bigint, dt_alt_produto_p timestamp, nm_usuario_p text, ie_opcao_p text default null) AS $body$
DECLARE


/*	ie_opcao_p
	S - Liberação do benf. ao liberar o sub - estipulante
	C - Liberação de todos o benf. do contrato
	L - Liberação  beneficiário
	A - Alteração da tabela de preço do beneficiário
	P - Alteração do produto do beneficiário
	T - Cálculo por alteração de titularidade
	D - Alteração do produto adaptado
*/
nr_seq_contrato_w		bigint;
dt_adesao_w			timestamp;
nr_seq_regra_contrato_w		bigint;
nr_seq_vinculo_w		bigint;
nr_seq_plano_w			bigint;
nr_seq_tabela_w			bigint;
ie_grau_dependencia_w		varchar(2);
ie_titularidade_seg_w		varchar(2);
qt_idade_benef_w		integer;
qt_idade_sca_w			integer;
dt_inicio_vigencia_w		timestamp;
ie_acao_contrato_w		varchar(2);
ie_geracao_valores_w		varchar(1);
qt_sca_beneficiario_w		bigint;
nr_seq_vendedor_canal_w		bigint;
nr_seq_vendedor_pf_w		bigint;
ie_lancamento_mensalidade_w	varchar(2);
dt_fim_vigencia_w		timestamp;
dt_fim_vigencia_tab_w		timestamp;
ie_incluir_sca_w		varchar(10);
dt_nascimento_w			timestamp;
dt_liberacao_w			timestamp;
qt_idade_min_sca_w		bigint;
nr_seq_plano_benef_w		bigint;
nr_seq_segurado_ant_w		bigint;
ie_desconsiderar_idade_w	varchar(10);
ie_regulamentacao_ant_w		varchar(10);
ie_regulamentacao_nova_w	varchar(10);
ie_inclusao_sca_portal_w	varchar(10);
nr_seq_pessoa_proposta_w	bigint;
nr_seq_classificacao_w		pls_plano.nr_seq_classificacao%type;
nr_seq_sca_ant_w		pls_sca_vinculo.nr_sequencia%type;
ie_rescindir_sca_classif_w	pls_sca_classificacao.ie_rescindir_sca_classif%type;
qt_regras_parentesco_w		integer;
qt_parentesco_sca_w		integer;
nr_seq_parentesco_w		pls_segurado.nr_seq_parentesco%type;
qt_idade_w			bigint;
dt_rescisao_titular_w		pls_segurado.dt_rescisao%type;
nr_seq_titular_w		pls_segurado.nr_seq_titular%type;


C01 CURSOR FOR
	SELECT	nr_sequencia,
		coalesce(ie_geracao_valores,'B'),
		nr_seq_vendedor_canal,
		nr_seq_vendedor_pf
	from	pls_sca_regra_contrato
	where	nr_seq_contrato	= nr_seq_contrato_w
	and	dt_adesao_w between coalesce(dt_inicio_vigencia,dt_adesao_w) and fim_dia(coalesce(dt_fim_vigencia,dt_adesao_w))
	and	((nr_seq_plano_benef	= nr_seq_plano_benef_w) or (coalesce(nr_seq_plano_benef::text, '') = ''))
	and	coalesce(ie_lancar_sca_benef,'S') = 'S';

BEGIN

select	b.nr_seq_contrato,
	b.dt_contratacao,
	CASE WHEN coalesce(b.nr_seq_titular::text, '') = '' THEN 'T'  ELSE 'D' END ,
	b.ie_acao_contrato,
	a.dt_nascimento,
	b.dt_liberacao,
	b.dt_rescisao,
	b.nr_seq_plano,
	b.nr_seq_segurado_ant,
	b.nr_seq_pessoa_proposta,
	b.nr_seq_titular
into STRICT	nr_seq_contrato_w,
	dt_adesao_w,
	ie_titularidade_seg_w,
	ie_acao_contrato_w,
	dt_nascimento_w,
	dt_liberacao_w,
	dt_fim_vigencia_w,
	nr_seq_plano_benef_w,
	nr_seq_segurado_ant_w,
	nr_seq_pessoa_proposta_w,
	nr_seq_titular_w
from	pessoa_fisica		a,
	pls_segurado		b
where	a.cd_pessoa_fisica	= b.cd_pessoa_fisica
and	b.nr_sequencia		= nr_seq_segurado_p;

--Se for liberação do beneficiário dependente, verifica se o titular tem data de rescisão
if (ie_opcao_p = 'L') and (ie_titularidade_seg_w = 'D') then

	select	dt_rescisao
	into STRICT	dt_rescisao_titular_w
	from	pls_segurado
	where	nr_sequencia	= nr_seq_titular_w;

	dt_fim_vigencia_w := dt_rescisao_titular_w;
end if;

/*Foi adicionado tratamento para se o ie_opção_p for 'A' considerar a data de alteração da tabela de preço */

if (ie_opcao_p = 'A') then
	dt_adesao_w	:= dt_alt_produto_p;
end if;

/*aaschlote 11/12/2012 - Apenas pegar a data do contrato ou beneficiário caso não esteja liberado*/

if (coalesce(dt_liberacao_w::text, '') = '') then
	/*if	(ie_acao_contrato_w = 'A') then
		select	max(dt_contrato)
		into	dt_inicio_vigencia_w
		from	pls_contrato
		where	nr_sequencia	= nr_seq_contrato_w;
	else
	LEPINSKi - COMENTEI AS LINHAS ACIMA, pois a data do contrato pode ser menor que a data de adesão do beneficiário, e da erro na rotina PLS_LIBERAR_VINCULO_SCA. OS 537548
	*/
	select	max(dt_contratacao)
	into STRICT	dt_inicio_vigencia_w
	from	pls_segurado
	where	nr_sequencia	= nr_seq_segurado_p;
end if;

if (coalesce(dt_inicio_vigencia_w::text, '') = '') then
	dt_inicio_vigencia_w	:= clock_timestamp();
end if;

if (dt_alt_produto_p IS NOT NULL AND dt_alt_produto_p::text <> '') then
	dt_inicio_vigencia_w := dt_alt_produto_p;
end if;

qt_idade_benef_w	:= trunc(months_between(clock_timestamp(),dt_nascimento_w) / 12);

if (nr_seq_segurado_ant_w IS NOT NULL AND nr_seq_segurado_ant_w::text <> '') and (nr_seq_plano_benef_w IS NOT NULL AND nr_seq_plano_benef_w::text <> '') then
	select	max(ie_regulamentacao)
	into STRICT	ie_regulamentacao_nova_w
	from	pls_plano
	where	nr_sequencia	= nr_seq_plano_benef_w;

	select	max(b.ie_regulamentacao)
	into STRICT	ie_regulamentacao_ant_w
	from	pls_plano	b,
		pls_segurado	a
	where	a.nr_seq_plano	= b.nr_sequencia
	and	a.nr_sequencia	= nr_seq_segurado_ant_w;
end if;

open C01;
loop
fetch C01 into
	nr_seq_regra_contrato_w,
	ie_geracao_valores_w,
	nr_seq_vendedor_canal_w,
	nr_seq_vendedor_pf_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	ie_incluir_sca_w		:= 'S';
	ie_desconsiderar_idade_w	:= 'N';

	select	nr_seq_plano,
		nr_seq_tabela,
		ie_lancamento_mensalidade
	into STRICT	nr_seq_plano_w,
		nr_seq_tabela_w,
		ie_lancamento_mensalidade_w
	from	pls_sca_regra_contrato
	where	nr_sequencia	= nr_seq_regra_contrato_w;

	/*aaschlote 28/05/2012 - OS 445840*/

	ie_incluir_sca_w := pls_consisti_sca_cumpriu_ant(nr_seq_segurado_p, nr_seq_plano_w, dt_inicio_vigencia_w, nm_usuario_p, ie_incluir_sca_w);

	if (ie_incluir_sca_w = 'N') then
		goto final;
	end if;


	ie_inclusao_sca_portal_w	:= substr(pls_obter_se_sca_incl_contr(nr_seq_pessoa_proposta_w,nr_seq_plano_w),1,1);

	/*aaschlote 06/03/2014 - OS 635409 */

	if (ie_inclusao_sca_portal_w = 'N') then
		goto final;
	end if;

	/*aaschlote 03/12/2013 OS 646773*/

	if (ie_regulamentacao_nova_w IS NOT NULL AND ie_regulamentacao_nova_w::text <> '') and (ie_regulamentacao_ant_w IS NOT NULL AND ie_regulamentacao_ant_w::text <> '') then
		ie_desconsiderar_idade_w	:= pls_obter_se_desc_idade_sca(nr_seq_plano_w,ie_regulamentacao_ant_w,ie_regulamentacao_nova_w,nr_seq_segurado_ant_w);
	end if;

	select	qt_idade_sca,
		qt_idade_min_sca,
		nr_seq_classificacao
	into STRICT	qt_idade_sca_w,
		qt_idade_min_sca_w,
		nr_seq_classificacao_w
	from	pls_plano
	where	nr_sequencia	= nr_seq_plano_w;

	select	count(1)
	into STRICT	qt_sca_beneficiario_w
	from	pls_sca_vinculo
	where	nr_seq_plano	= nr_seq_plano_w
	and	nr_seq_segurado	= nr_seq_segurado_p  LIMIT 1;

	if (nr_seq_tabela_w IS NOT NULL AND nr_seq_tabela_w::text <> '') then
		select	dt_fim_vigencia
		into STRICT	dt_fim_vigencia_tab_w
		from	pls_tabela_preco
		where	nr_sequencia	= nr_seq_tabela_w;
	end if;

	qt_parentesco_sca_w := 1;

	if (ie_titularidade_seg_w = 'D') then
		select	count(*)
		into STRICT	qt_regras_parentesco_w
		from	pls_plano_parentesco
		where	nr_seq_plano	= nr_seq_plano_w
		and	ie_situacao	= 'A';

		if (qt_regras_parentesco_w > 0) then
			select	nr_seq_parentesco,
				obter_idade_pf(cd_pessoa_fisica,clock_timestamp(),'A') qt_idade
			into STRICT	nr_seq_parentesco_w,
				qt_idade_w
			from	pls_segurado
			where	nr_sequencia = nr_seq_segurado_p;

			select	count(*)
			into STRICT	qt_parentesco_sca_w
			from	pls_plano_parentesco
			where	nr_seq_plano		= nr_seq_plano_w
			and	nr_seq_parentesco	= nr_seq_parentesco_w
			and	qt_idade_w between coalesce(qt_idade_min,0) and coalesce(qt_idade_max,999)
			and	ie_situacao		= 'A';
		end if;
	end if;

	if	(((qt_idade_benef_w <= coalesce(qt_idade_sca_w,qt_idade_benef_w)) and (qt_idade_benef_w >= coalesce(qt_idade_min_sca_w,qt_idade_benef_w))) or (ie_desconsiderar_idade_w = 'S')) and (clock_timestamp() > coalesce(dt_fim_vigencia_tab_w+1,clock_timestamp() - interval '1 days'))/* aaschlote 04/03/2011 OS - 288806 */
 and (qt_parentesco_sca_w > 0) then

		select	ie_grau_dependencia
		into STRICT	ie_grau_dependencia_w
		from	pls_plano
		where	nr_sequencia	= nr_seq_plano_w;

		if	((ie_grau_dependencia_w = ie_titularidade_seg_w) or (coalesce(ie_grau_dependencia_w,'A') = 'A')) and (qt_sca_beneficiario_w = 0) then
			select	nextval('pls_sca_vinculo_seq')
			into STRICT	nr_seq_vinculo_w
			;

			insert into pls_sca_vinculo(	nr_sequencia,dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
							nr_seq_plano, nr_seq_segurado, nr_seq_tabela, dt_inicio_vigencia, dt_fim_vigencia, ie_dependente,ie_embutido_produto,
							ie_geracao_valores, nr_seq_vendedor_canal, nr_seq_vendedor_pf,ie_lancamento_mensalidade)
						values (	nr_seq_vinculo_w, clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p,
							nr_seq_plano_w, nr_seq_segurado_p, nr_seq_tabela_w, dt_inicio_vigencia_w, dt_fim_vigencia_w, 'N','N',
							ie_geracao_valores_w, nr_seq_vendedor_canal_w, nr_seq_vendedor_pf_w,ie_lancamento_mensalidade_w);

			if (nr_seq_classificacao_w IS NOT NULL AND nr_seq_classificacao_w::text <> '') then
				select	coalesce(max(ie_rescindir_sca_classif),'N')
				into STRICT	ie_rescindir_sca_classif_w
				from	pls_sca_classificacao
				where	nr_sequencia = nr_seq_classificacao_w;

				if (ie_rescindir_sca_classif_w = 'S') then
					select	max(a.nr_sequencia)
					into STRICT	nr_seq_sca_ant_w
					from	pls_plano	b,
						pls_sca_vinculo	a
					where	b.nr_sequencia 		= a.nr_seq_plano
					and	b.nr_seq_classificacao	= nr_seq_classificacao_w
					and	a.nr_seq_segurado	= nr_seq_segurado_p
					and	a.nr_sequencia 		<> nr_seq_vinculo_w;

					if (nr_seq_sca_ant_w IS NOT NULL AND nr_seq_sca_ant_w::text <> '') then
						update 	pls_sca_vinculo
						set	dt_fim_vigencia	= dt_inicio_vigencia_w - 1,
							nm_usuario	= nm_usuario_p,
							dt_atualizacao	= clock_timestamp()
						where	nr_sequencia 	= nr_seq_sca_ant_w;
					end if;
				end if;
			end if;

			CALL pls_duplicar_tabela_preco_sca(nr_seq_contrato_w, nr_seq_vinculo_w, nr_seq_tabela_w, 'N', nm_usuario_p);
		end if;
	end if;
	<<final>>
	nr_seq_regra_contrato_w	:= nr_seq_regra_contrato_w;
	end;
end loop;
close C01;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_sca_contrato_benef ( nr_seq_segurado_p bigint, dt_alt_produto_p timestamp, nm_usuario_p text, ie_opcao_p text default null) FROM PUBLIC;

