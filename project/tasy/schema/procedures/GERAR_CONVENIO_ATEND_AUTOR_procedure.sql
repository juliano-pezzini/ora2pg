-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_convenio_atend_autor (nr_atendimento_p bigint, nr_seq_autor_p bigint, nm_usuario_p text) AS $body$
DECLARE


cd_convenio_w		integer;
cd_categoria_w		varchar(10);
cd_tipo_acomodacao_w	smallint;
cd_usuario_convenio_w	varchar(30);
dt_validade_carteira_w	timestamp;
nr_doc_convenio_w	varchar(20);
cd_senha_w		varchar(20)	:= null;
qt_diaria_prev_w		smallint 	:= null;
nr_seq_interno_w		bigint;
cd_plano_w		varchar(10);
cd_doenca_cid_w		varchar(10);
ie_gerar_cid_w		varchar(01)	:= 'N';
ie_gerar_cid_nova_w	varchar(01)	:= 'N';
cd_estabelecimento_w	bigint;
cd_medico_w		varchar(10);
dt_inicio_vigencia_w	timestamp;
ie_opcao_w		varchar(10);
cd_pessoa_fisica_w	varchar(10);
cd_empresa_w		integer;
ie_tipo_atendimento_w	smallint;
ie_sugerir_acomodacao_w	varchar(2);
ie_gerar_guia_w		varchar(03);
ie_tipo_retorno_w		varchar(2);
ie_classif_agenda_w	varchar(5);
nr_seq_classif_agenda_w	bigint;
cd_senha_aut_conv_w	varchar(20);
cd_autorizacao_conv_w	varchar(20);
ie_tipo_guia_w		varchar(2);
qt_existe_cid_w		bigint;
ie_dias_autorizados_w	varchar(10);
cd_senha_prov_autor_w	varchar(20);
cd_senha_provisoria_w	varchar(20);
nr_seq_atendimento_w	bigint;
nr_seq_paciente_w	bigint;
ie_gerar_empresa_w	varchar(1) := 'N';


BEGIN

select	cd_pessoa_fisica
into STRICT	cd_pessoa_fisica_w
from	atendimento_paciente
where	nr_atendimento	= nr_atendimento_p;

if (coalesce(nr_seq_autor_p,0) > 0) then

	select	a.cd_convenio,
		coalesce(a.dt_inicio_vigencia,clock_timestamp()),
		a.cd_autorizacao,
		a.cd_tipo_acomodacao,
		b.cd_categoria,
		b.cd_usuario_convenio,
		b.dt_validade_carteira,
		a.cd_senha,
		a.qt_dia_autorizado,
		a.ie_tipo_guia,
		a.cd_senha_provisoria,
		coalesce(a.cd_estabelecimento,b.cd_estabelecimento),
		b.cd_plano_convenio
	into STRICT	cd_convenio_w,
		dt_inicio_vigencia_w,
		nr_doc_convenio_w,
		cd_tipo_acomodacao_w,
		cd_categoria_w,
		cd_usuario_convenio_w,
		dt_validade_carteira_w,
		cd_senha_w,
		qt_diaria_prev_w,
		ie_tipo_guia_w,
		cd_senha_provisoria_w,
		cd_estabelecimento_w,
		cd_plano_w
	FROM autorizacao_convenio a
LEFT OUTER JOIN autorizacao_convenio_tiss b ON (a.nr_sequencia = b.nr_sequencia_autor)
WHERE a.nr_sequencia = nr_seq_autor_p;
end if;

if (coalesce(cd_estabelecimento_w::text, '') = '') then
	cd_estabelecimento_w := wheb_usuario_pck.Get_cd_estabelecimento;
end if;

ie_opcao_w := Obter_Param_Usuario(916, 128, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_opcao_w);

if (ie_opcao_w <> '0') then
	begin
	select	obter_empresa_paciente(cd_pessoa_fisica_w,(ie_opcao_w)::numeric )
	into STRICT	cd_empresa_w
	;
	exception
	when others then
		cd_empresa_w	:= null;
	end;
end if;

if (coalesce(cd_categoria_w::text, '') = '') then
	begin
	select	min(cd_categoria)
	into STRICT	cd_categoria_w
	from	categoria_convenio
	where	cd_convenio = cd_convenio_w
	and 	ie_situacao = 'A';
	end;
end if;

if (cd_convenio_w IS NOT NULL AND cd_convenio_w::text <> '') and (cd_categoria_w IS NOT NULL AND cd_categoria_w::text <> '') then
	begin

	select	ie_tipo_atendimento
	into STRICT	ie_tipo_atendimento_w
	from	atendimento_paciente
	where	nr_atendimento	=	nr_atendimento_p;	

	if (coalesce(nr_doc_convenio_W::text, '') = '') then
		nr_doc_convenio_W := obter_guia_conv_atend(nr_atendimento_p, cd_convenio_w, cd_categoria_w, ie_tipo_atendimento_w, cd_estabelecimento_w, null, nr_doc_convenio_W);
	end if;
	
	select	nextval('atend_categoria_convenio_seq')
	into STRICT	nr_seq_interno_w
	;
	
	insert	into 	atend_categoria_convenio(	nr_atendimento,
			cd_convenio,
			cd_categoria,
			dt_inicio_vigencia,
			dt_atualizacao,
			nm_usuario,
			cd_usuario_convenio,
			nr_doc_convenio,
			cd_tipo_acomodacao,
			dt_validade_carteira,
			cd_senha,
			qt_dia_internacao,
			nr_seq_interno,
			cd_empresa,
			ie_tipo_guia,
			cd_senha_provisoria,
			cd_plano_convenio
		)
	values (
			nr_atendimento_p,
			cd_convenio_w,
			cd_categoria_w,
			dt_inicio_vigencia_w,
			clock_timestamp(),
			nm_usuario_p,
			cd_usuario_convenio_w,
			nr_doc_convenio_w,
			CASE WHEN cd_tipo_acomodacao_w=0 THEN null  ELSE cd_tipo_acomodacao_w END ,
			dt_validade_carteira_w,
			cd_Senha_w,
			qt_diaria_prev_w,
			nr_seq_interno_w,
			cd_empresa_w, 
			ie_tipo_guia_w,
			cd_senha_provisoria_w,
			cd_plano_w
		);

	end;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_convenio_atend_autor (nr_atendimento_p bigint, nr_seq_autor_p bigint, nm_usuario_p text) FROM PUBLIC;

