-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE inativar_lote_fornec_devol_nf (nr_seq_nota_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_item_nf_w			bigint;
nr_seq_lote_fornec_w		bigint;
nr_nota_fiscal_w		bigint;
ds_historico_w			varchar(255);
nr_seq_nota_origem_w		bigint;
qt_mov_estq_w			integer;
ds_item_nf_w			varchar(255);
cd_estabelecimento_w		smallint;
ie_avisar_inat_lote_w		varchar(1);

c01 CURSOR FOR
SELECT	coalesce(nr_seq_nf_orig,0),
	coalesce(nr_seq_item_nf_orig,0)
from	nota_fiscal_item
where	nr_sequencia = nr_seq_nota_p;

c02 CURSOR FOR
SELECT	nr_sequencia
from	material_lote_fornec
where	nr_sequencia_nf = nr_seq_nota_origem_w
and	nr_item_nf = nr_item_nf_w

union

SELECT	nr_seq_lote_fornec nr_sequencia
from	material_lote_fornec_nf
where	nr_sequencia_nf = nr_seq_nota_origem_w
and	nr_item_nf = nr_item_nf_w;


BEGIN

select	cd_estabelecimento
into STRICT	cd_estabelecimento_w
from	nota_fiscal
where	nr_sequencia = nr_seq_nota_p;

ie_avisar_inat_lote_w := Obter_Param_Usuario(40, 381, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_avisar_inat_lote_w);

open c01;
loop
fetch c01 into
	nr_seq_nota_origem_w,
	nr_item_nf_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	if (nr_seq_nota_origem_w > 0) and (nr_item_nf_w > 0) then
		select	nr_nota_fiscal
		into STRICT	nr_nota_fiscal_w
		from	nota_fiscal
		where	nr_sequencia = nr_seq_nota_origem_w;

		ds_historico_w	:= substr(wheb_mensagem_pck.get_texto(313982,'NR_NOTA_FISCAL=' || nr_nota_fiscal_w ||
						';NR_SEQ_NOTA_ORIGEM=' || nr_seq_nota_origem_w),1,255);

		open c02;
		loop
		fetch c02 into
			nr_seq_lote_fornec_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			begin

			if (ie_avisar_inat_lote_w = 'S') then
				
				qt_mov_estq_w := 0;
				select	count(*)
				into STRICT	qt_mov_estq_w
				from	movimento_estoque a,
					operacao_estoque b
				where	a.cd_operacao_estoque = b.cd_operacao_estoque
				and	a.nr_seq_lote_fornec = nr_seq_lote_fornec_w
				and	b.ie_tipo_requisicao <> 6;

				if (qt_mov_estq_w > 0) then
					CALL wheb_mensagem_pck.exibir_mensagem_abort(228064,'NR_SEQ_LOTE='||nr_seq_lote_fornec_w||'NR_ITEM_NF='||nr_item_nf_w);
				end if;
			end if;

			update	material_lote_fornec
			set	ie_situacao = 'I'
			where	nr_sequencia = nr_seq_lote_fornec_w;

			insert into material_lote_fornec_hist(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_lote_fornec,
				ds_titulo,
				ds_historico,
				ie_tipo,
				dt_liberacao,
				nm_usuario_lib)
			values (	nextval('material_lote_fornec_hist_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_lote_fornec_w,
				substr(wheb_mensagem_pck.get_texto(313983),1,255),
				ds_historico_w,
				'S',
				clock_timestamp(),
				nm_usuario_p);

			end;
		end loop;
		close c02;
	end if;
	end;
end loop;
close c01;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE inativar_lote_fornec_devol_nf (nr_seq_nota_p bigint, nm_usuario_p text) FROM PUBLIC;

