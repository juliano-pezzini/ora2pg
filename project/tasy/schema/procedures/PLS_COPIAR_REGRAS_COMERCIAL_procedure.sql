-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_copiar_regras_comercial ( cd_estab_origem_p bigint, cd_estab_destino_p bigint, nm_usuario_p text) AS $body$
DECLARE


qt_agente_mot_w		bigint;
qt_analise_parecer_w	bigint;
qt_mot_cancel_w		bigint;
qt_mot_reprovacao_w	bigint;
qt_tp_atividadade_w	bigint;
nr_seq_agente_mot_w	bigint;
nr_seq_analis_parecer_w	bigint;
nr_seq_mot_cancel_w	bigint;
nr_seq_mot_reprovacao_w	bigint;
nr_seq_tipo_atividade_w	bigint;

C01 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_agente_motivador
	where	cd_estabelecimento	= cd_estab_origem_p;

C02 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_analise_parecer
	where	cd_estabelecimento	= cd_estab_origem_p;

C03 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_motivo_cancel_prospect
	where	cd_estabelecimento	= cd_estab_origem_p;

C04 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_motivo_reprovacao_lead
	where	cd_estabelecimento	= cd_estab_origem_p;

C05 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_tipo_atividade
	where	cd_estabelecimento	= cd_estab_origem_p;


BEGIN

open C01;
loop
fetch C01 into
	nr_seq_agente_mot_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	select	count(*)
	into STRICT	qt_agente_mot_w
	from	pls_agente_motivador
	where	nr_seq_agente_motiv_ant	= nr_seq_agente_mot_w;

	if (qt_agente_mot_w = 0) then
		insert into pls_agente_motivador(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
								cd_estabelecimento,ds_agente_motivador,ie_situacao,nr_seq_apresentacao,nr_seq_agente_motiv_ant	)
							(SELECT	nextval('pls_agente_motivador_seq'),clock_timestamp(),nm_usuario_p,dt_atualizacao_nrec,nm_usuario_nrec,
								cd_estab_destino_p,ds_agente_motivador,ie_situacao,nr_seq_apresentacao,nr_seq_agente_mot_w
							from	pls_agente_motivador
							where	nr_sequencia	= nr_seq_agente_mot_w);
	end if;
	end;
end loop;
close C01;


open C02;
loop
fetch C02 into
	nr_seq_analis_parecer_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin

	select	count(*)
	into STRICT	qt_analise_parecer_w
	from	pls_analise_parecer
	where	nr_seq_analise_ant	= nr_seq_analis_parecer_w;

	if (qt_analise_parecer_w = 0) then
		insert into pls_analise_parecer(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
								cd_estabelecimento,ds_parecer,ie_situacao,nr_seq_analise_ant)
							(SELECT	nextval('pls_analise_parecer_seq'),clock_timestamp(),nm_usuario_p,dt_atualizacao_nrec,nm_usuario_nrec,
								cd_estab_destino_p,ds_parecer,ie_situacao,nr_seq_analis_parecer_w
							from	pls_analise_parecer
							where	nr_sequencia	= nr_seq_analis_parecer_w);
	end if;
	end;
end loop;
close C02;

open C03;
loop
fetch C03 into
	nr_seq_mot_cancel_w;
EXIT WHEN NOT FOUND; /* apply on C03 */
	begin

	select	count(*)
	into STRICT	qt_mot_cancel_w
	from	pls_motivo_cancel_prospect
	where	nr_seq_motivo_ant	= nr_seq_mot_cancel_w;

	if (qt_mot_cancel_w = 0) then
		insert into	pls_motivo_cancel_prospect(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
									cd_estabelecimento,ds_motivo_cancelamento,ie_situacao,nr_seq_motivo_ant)
								(SELECT	nextval('pls_motivo_cancel_prospect_seq'),clock_timestamp(),nm_usuario_p,dt_atualizacao_nrec,nm_usuario_nrec,
									cd_estab_destino_p,ds_motivo_cancelamento,ie_situacao,nr_seq_mot_cancel_w
								from	pls_motivo_cancel_prospect
								where	nr_sequencia	= nr_seq_mot_cancel_w);
	end if;
	end;
end loop;
close C03;

open C04;
loop
fetch C04 into
	nr_seq_mot_reprovacao_w;
EXIT WHEN NOT FOUND; /* apply on C04 */
	begin

	select	count(*)
	into STRICT	qt_mot_reprovacao_w
	from	pls_motivo_reprovacao_lead
	where	nr_seq_motivo_ant	= nr_seq_mot_reprovacao_w;

	if (qt_mot_reprovacao_w = 0) then
		insert into	pls_motivo_reprovacao_lead(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
									cd_estabelecimento,ds_motivo,ie_situacao,nr_seq_motivo_ant)
								(SELECT	nextval('pls_motivo_reprovacao_lead_seq'),clock_timestamp(),nm_usuario_p,dt_atualizacao_nrec,nm_usuario_nrec,
									cd_estab_destino_p,ds_motivo,ie_situacao,nr_seq_mot_reprovacao_w
								from	pls_motivo_reprovacao_lead
								where	nr_sequencia	= nr_seq_mot_reprovacao_w);
	end if;
	end;
end loop;
close C04;

open C05;
loop
fetch C05 into
	nr_seq_tipo_atividade_w;
EXIT WHEN NOT FOUND; /* apply on C05 */
	begin

	select	count(*)
	into STRICT	qt_tp_atividadade_w
	from	pls_tipo_atividade
	where	nr_seq_tipo_ativ_ant	 = nr_seq_tipo_atividade_w;

	if (qt_tp_atividadade_w	= 0) then
		insert into	 pls_tipo_atividade(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
								cd_estabelecimento,ds_atividade,ie_situacao,ie_prorrogacao_efetivacao,ie_fase_venda,
								ie_status,ie_programacao,nr_seq_tipo_ativ_ant)
							(SELECT	nextval('pls_tipo_atividade_seq'),clock_timestamp(),nm_usuario_p,dt_atualizacao_nrec,nm_usuario_nrec,
								cd_estab_destino_p,ds_atividade,ie_situacao,ie_prorrogacao_efetivacao,ie_fase_venda,
								ie_status,ie_programacao,nr_seq_tipo_atividade_w
							from	pls_tipo_atividade
							where	nr_sequencia	= nr_seq_tipo_atividade_w);
	end if;
	end;
end loop;
close C05;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_copiar_regras_comercial ( cd_estab_origem_p bigint, cd_estab_destino_p bigint, nm_usuario_p text) FROM PUBLIC;

