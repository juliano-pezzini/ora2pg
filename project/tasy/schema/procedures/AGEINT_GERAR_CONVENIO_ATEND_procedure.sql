-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ageint_gerar_convenio_atend (nr_atendimento_p bigint, ds_lista_agendas_p text, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


cd_convenio_w		integer;
cd_categoria_w		varchar(10);
cd_tipo_acomodacao_w	smallint;
cd_usuario_convenio_w	varchar(30);
cd_complemento_w		varchar(30)	:= null;
dt_validade_carteira_w	timestamp;
nr_doc_convenio_w	varchar(20);
cd_senha_w		varchar(20)	:= null;
qt_diaria_prev_w	smallint 	:= null;
nr_seq_interno_w		bigint;
cd_plano_w		varchar(10);
cd_doenca_cid_w		varchar(10);
ie_gerar_cid_w		varchar(01)	:= 'N';
ie_gerar_cid_nova_w	varchar(01)	:= 'N';
cd_estabelecimento_w	bigint;
cd_medico_w		varchar(10);
ie_gerar_senha_w		varchar(10);
dt_inicio_vigencia_w	timestamp;
ie_opcao_w		varchar(10);
cd_pessoa_fisica_w	varchar(10);
cd_empresa_w		integer;
ie_tipo_atendimento_w	smallint;
ie_sugerir_acomodacao_w	varchar(2);
ie_salvar_observacao_w	varchar(1);
ds_observacao_w		varchar(4000);
ie_gerar_guia_w		varchar(03);
ie_tipo_retorno_w	varchar(2);
ie_classif_agenda_w	varchar(5);
nr_seq_classif_agenda_w	bigint;
cd_senha_aut_conv_w	varchar(20);
cd_autorizacao_conv_w	varchar(20);
ie_tipo_guia_w		varchar(2);
ds_lista_agendas_w	varchar(255);
ds_ultimo_caracter_w	varchar(255);
nr_pos_separador_w	bigint;
nr_pos_sep_itens_w	bigint;
nr_seq_agenda_w		agenda_consulta.nr_sequencia%type;
qt_controle_w		bigint;


BEGIN

select	cd_pessoa_fisica
into STRICT	cd_pessoa_fisica_w
from	atendimento_paciente
where	nr_atendimento	= nr_atendimento_p;

ds_lista_agendas_w	:= ds_lista_agendas_p;

if (position('(' in ds_lista_agendas_w) > 0 ) and (position(')' in ds_lista_agendas_w) > 0 ) then
	ds_lista_agendas_w	:= substr(ds_lista_agendas_p,(position('(' in ds_lista_agendas_p)+1),(position(')' in ds_lista_agendas_p)-2));
end if;

select	substr(ds_lista_agendas_w, length(ds_lista_agendas_w), length(ds_lista_agendas_w))
into STRICT	ds_ultimo_caracter_w
;

if (ds_ultimo_caracter_w	<> ',') then
	ds_lista_agendas_w	:= ds_lista_agendas_w || ',';
end if;

qt_controle_w 		:= 0;
nr_pos_separador_w	:= position(',' in ds_lista_agendas_w);
nr_pos_sep_itens_w	:= position('-' in ds_lista_agendas_w);
nr_seq_agenda_w		:= substr(ds_lista_agendas_w,1,nr_pos_sep_itens_w - 1);

begin
select	a.cd_convenio,
	a.cd_categoria,
	a.cd_tipo_acomodacao,
	a.cd_usuario_convenio,
	a.dt_validade_carteira,
	a.nr_doc_convenio,
	a.cd_plano,
	a.ds_senha,
	a.qt_diaria_prev,
	a.cd_doenca_cid,
	a.cd_medico,
	b.cd_estabelecimento,
	a.ds_observacao
into STRICT	cd_convenio_w,
	cd_categoria_w,
	cd_tipo_acomodacao_w,
	cd_usuario_convenio_w,
	dt_validade_carteira_w,
	nr_doc_convenio_w,
	cd_plano_w,
	cd_senha_w,
	qt_diaria_prev_w,
	cd_doenca_cid_w,
	cd_medico_w,
	cd_estabelecimento_w,
	ds_observacao_w
from	agenda b,
	agenda_paciente a
where 	a.cd_agenda	= b.cd_agenda
and	a.nr_sequencia	= nr_seq_agenda_w;
exception
when others then
	begin
	select	a.cd_convenio,
			a.cd_categoria,
			a.cd_tipo_acomodacao,
			a.cd_usuario_convenio,
			a.dt_validade_carteira,
			a.nr_doc_convenio,
			a.cd_plano,
			a.ds_senha,
			a.qt_diaria_prev,
			a.cd_cid,
			a.cd_medico,
			b.cd_estabelecimento,
			a.ds_observacao
	into STRICT	cd_convenio_w,
			cd_categoria_w,
			cd_tipo_acomodacao_w,
			cd_usuario_convenio_w,
			dt_validade_carteira_w,
			nr_doc_convenio_w,
			cd_plano_w,
			cd_senha_w,
			qt_diaria_prev_w,
			cd_doenca_cid_w,
			cd_medico_w,
			cd_estabelecimento_w,
			ds_observacao_w
	from	agenda b,
			agenda_consulta a
	where 	a.cd_agenda	= b.cd_agenda
	and	a.nr_sequencia	= nr_seq_agenda_w;
	exception
	when others then
		cd_convenio_w	:= null;
		cd_categoria_w	:= null;
	end;
end;
begin
select	nr_seq_classif_agenda
into STRICT	nr_seq_classif_agenda_w
from	agenda_paciente
where	nr_sequencia = nr_seq_agenda_w;
exception
when others then
	nr_seq_classif_agenda_w	:= null;
end;
if (nr_seq_classif_agenda_w IS NOT NULL AND nr_seq_classif_agenda_w::text <> '') then
	select	max(ie_tipo_guia)
	into STRICT	ie_tipo_retorno_w
	from	agenda_paciente_classif
	where	nr_sequencia = nr_seq_classif_agenda_w;
end if;	

select	obter_data_entrada(nr_atendimento_p)
into STRICT	dt_inicio_vigencia_w
;

if (cd_convenio_w IS NOT NULL AND cd_convenio_w::text <> '') and (cd_categoria_w IS NOT NULL AND cd_categoria_w::text <> '') then
	begin

	select	ie_tipo_atendimento
	into STRICT	ie_tipo_atendimento_w
	from	atendimento_paciente
	where	nr_atendimento	=	nr_atendimento_p;	

	if (coalesce(nr_doc_convenio_w::text, '') = '') then
		nr_doc_convenio_w := obter_guia_conv_atend(nr_atendimento_p, cd_convenio_w, cd_categoria_w, ie_tipo_atendimento_w, cd_estabelecimento_w, null, nr_doc_convenio_w);
	end if;

	
	select	nextval('atend_categoria_convenio_seq')
	into STRICT	nr_seq_interno_w
	;
	
	select	max(cd_senha),
		max(cd_autorizacao),
		max(ie_tipo_guia)
	into STRICT	cd_senha_aut_conv_w,
		cd_autorizacao_conv_w,
		ie_tipo_guia_w
	from	autorizacao_convenio
	where	nr_seq_agenda	= nr_seq_agenda_w;
	
	if (coalesce(cd_senha_w::text, '') = '')then
		
		select	max(a.cd_senha)
		into STRICT	cd_senha_w
		from	autorizacao_convenio a,
			procedimento_autorizado b
		where	a.nr_sequencia = b.nr_sequencia_autor
		and	b.nr_seq_agenda = nr_seq_agenda_w;
		
		if (coalesce(cd_senha_w::text, '') = '') then
			select	max(a.cd_senha)
			into STRICT	cd_senha_w
			from	autorizacao_convenio a,
				procedimento_autorizado b
			where	a.nr_sequencia = b.nr_sequencia_autor
			and	b.nr_seq_agenda_consulta = nr_seq_agenda_w;
		end if;
	end if;
	
	insert	into atend_categoria_convenio(nr_atendimento, cd_convenio, cd_categoria, dt_inicio_vigencia,
		dt_atualizacao, nm_usuario, cd_usuario_convenio, nr_doc_convenio,
		cd_tipo_acomodacao, dt_validade_carteira, cd_senha, qt_dia_internacao,
		cd_complemento, nr_seq_interno, cd_plano_convenio, cd_empresa, ds_observacao,
		ie_tipo_guia)
	values (nr_atendimento_p, cd_convenio_w, cd_categoria_w, dt_inicio_vigencia_w,
		clock_timestamp(), nm_usuario_p, cd_usuario_convenio_w, nr_doc_convenio_w,
		cd_tipo_acomodacao_w, dt_validade_carteira_w, cd_senha_w, qt_diaria_prev_w,
		cd_complemento_w,nr_seq_interno_w, cd_plano_w, cd_empresa_w, substr(ds_observacao_w, 1, 2000), 
		coalesce(ie_tipo_retorno_w, ie_tipo_guia_w));

	end;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ageint_gerar_convenio_atend (nr_atendimento_p bigint, ds_lista_agendas_p text, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

