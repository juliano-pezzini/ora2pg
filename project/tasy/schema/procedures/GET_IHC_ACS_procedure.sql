-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE get_ihc_acs ( nr_seq_claim_p ihc_claim.nr_sequencia%type, nm_usuario_p ihc_claim.nm_usuario%type) AS $body$
DECLARE

		
nr_episode_w				conta_paciente.nr_atendimento%type;
nr_last_seq_intern_w		atend_paciente_unidade.nr_seq_interno%type;
nr_first_seq_intern_w		atend_paciente_unidade.nr_seq_interno%type;
dt_return_temp_leave_w		atend_paciente_unidade.dt_retorno_saida_temporaria%type;
dt_temporary_leave_w		atend_paciente_unidade.dt_saida_temporaria%type;
vl_procedimento_w			procedimento_paciente.vl_procedimento%type;
qt_accommodation_w			ihc_acs.qt_accommodation%type;
dt_from_w					ihc_acs.dt_from%type;
dt_end_w					ihc_acs.dt_end%type;
qt_leave_w					ihc_acs.qt_leave%type;
qt_days_w					ihc_acs.qt_days%type;
nr_account_w				ihc_claim.nr_account%type;
nr_records_w				ihc_claim.nr_sequencia%type;
nr_sequencia_w          	ihc_acs.nr_sequencia%type;
vl_charge_acd_w				ihc_acd.vl_charge%type;
vl_hospital_cid_w			ihc_claim.vl_hospital%type;
vl_charge_cid_w				ihc_claim.vl_charge%type;
	

BEGIN

select	max(nr_account)
into STRICT	nr_account_w
from	ihc_claim
where	nr_sequencia = nr_seq_claim_p;

select 	max(nr_atendimento)
into STRICT	nr_episode_w
from 	conta_paciente
where 	nr_interno_conta = nr_account_w;

if (nr_episode_w IS NOT NULL AND nr_episode_w::text <> '') then
	select	max(nr_seq_interno),
			min(nr_seq_interno)
	into STRICT	nr_last_seq_intern_w,
			nr_first_seq_intern_w
	from	atend_paciente_unidade
	where	nr_atendimento = nr_episode_w;
	
	select	max(dt_entrada_unidade),
			max(dt_saida_temporaria)
	into STRICT	dt_from_w,
			dt_temporary_leave_w
	from	atend_paciente_unidade
	where	nr_seq_interno = nr_first_seq_intern_w;
			
	select	max(dt_saida_unidade),
			max(dt_retorno_saida_temporaria)
	into STRICT	dt_end_w,
			dt_return_temp_leave_w
	from	atend_paciente_unidade
	where	nr_seq_interno = nr_last_seq_intern_w;
	
	if (coalesce(dt_end_w::text, '') = '') then
		CALL generate_inco_eclipse(nr_account_w, 1, obter_desc_expressao(570828) || ': ' || nr_last_seq_intern_w || ' (ACS1)',nm_usuario_p);
	end if;
	
	if (dt_from_w IS NOT NULL AND dt_from_w::text <> '') and (dt_end_w IS NOT NULL AND dt_end_w::text <> '') then
		qt_accommodation_w := obter_dias_entre(dt_from_w, dt_end_w);
		if (qt_accommodation_w	= 0) then /* NumberOfDays: Cannot be set to zero */
			qt_accommodation_w	:= 1;
		end if;
	end if;
	
	if (coalesce(qt_accommodation_w::text, '') = '') then
		CALL generate_inco_eclipse(nr_account_w, 1, obter_desc_expressao(570828) || ': ' || nr_last_seq_intern_w || ' (ACS2)',nm_usuario_p);
	end if;
	
	qt_leave_w	:= obter_dias_entre(dt_temporary_leave_w, dt_return_temp_leave_w);
	qt_days_w	:= obter_dias_entre(dt_from_w, dt_end_w);
	
	if (coalesce(qt_days_w::text, '') = '') or (qt_days_w = 0) then
		qt_days_w := '1';
	end if;
	
	--will insert ACD because need to check the ACD, CCG and LPD inconsistencies
	--if (billing_i18n_pck.get_validate_eclipse() = 'N') and (nr_records_w = 0) then	
	
	select  nextval('ihc_acs_seq')
	into STRICT 	nr_sequencia_w
	;
	
	insert into ihc_acs(
			nr_sequencia,
			nr_seq_claim,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			qt_accommodation,
			ie_charge_raised,
			dt_from,
			qt_leave,
			qt_days,
			dt_end,
			vl_charge,
			ie_situation)
		values (
			nr_sequencia_w,
			nr_seq_claim_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			qt_accommodation_w,
			'I',
			dt_from_w,
			qt_leave_w,
			qt_days_w,
			dt_end_w,
			0,
			'I');
	
	CALL get_ihc_acd(nr_sequencia_w,nm_usuario_p);		
	CALL get_ihc_ccg(nr_sequencia_w,nm_usuario_p);
	CALL get_ihc_lpd(nr_sequencia_w,nm_usuario_p);
			
	select	sum(vl_charge)
	into STRICT	vl_charge_acd_w
	from	ihc_acd
	where	nr_seq_acs = nr_sequencia_w
	and		ie_charge_raised = 'C';
	
	if (vl_charge_acd_w IS NOT NULL AND vl_charge_acd_w::text <> '') then
	
		update	ihc_acs
		set		vl_charge = vl_charge_acd_w,
				ie_charge_raised = 'C'
		where	nr_sequencia = nr_sequencia_w;

		select 	vl_hospital,
				vl_charge
		into STRICT 	vl_hospital_cid_w,
				vl_charge_cid_w
		from 	ihc_claim
		where 	nr_sequencia = nr_seq_claim_p;
	
		update 	ihc_claim
		set 	vl_hospital 	= vl_hospital_cid_w + vl_charge_acd_w,
				vl_charge 		= vl_charge_cid_w + vl_charge_acd_w
		where 	nr_sequencia 	= nr_seq_claim_p;
	
	end if;
		
	--end if;
			
end if;
			
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE get_ihc_acs ( nr_seq_claim_p ihc_claim.nr_sequencia%type, nm_usuario_p ihc_claim.nm_usuario%type) FROM PUBLIC;

