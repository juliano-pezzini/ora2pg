-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE cp_finalizar_meta (nr_seq_goal_p bigint) AS $body$
DECLARE

    qt_indic_w					bigint;
    nr_seq_pat_cp_problem_w		patient_cp_problem.nr_sequencia%type;
    nr_seq_pat_care_plan_w		patient_care_plan.nr_sequencia%type;
    nm_usuario_p				varchar(50);
    nr_seq_prescr_w		        bigint;
    nr_seq_prescr_diag_w        pe_prescr_diag.nr_sequencia%type;


BEGIN
    if (nr_seq_goal_p IS NOT NULL AND nr_seq_goal_p::text <> '') then
        update	patient_cp_goal
        set		dt_end = clock_timestamp()
        where	nr_sequencia = nr_seq_goal_p;

        update	tof_meta_atend		
        set		dt_finalizacao		= clock_timestamp(),
                ie_finalizacao 		= '0'
        where	nr_seq_pat_cp_goal	= nr_seq_goal_p;

        update	patient_cp_indicator
        set		dt_end = clock_timestamp()
        where	nr_seq_pat_cp_goal = nr_seq_goal_p;

        select	max(nr_seq_pat_cp_problem),
                max(nr_seq_pat_care_plan),
                max(nr_seq_prescr_diag)
        into STRICT	nr_seq_pat_cp_problem_w,
                nr_seq_pat_care_plan_w,
                nr_seq_prescr_diag_w
        from 	patient_cp_goal
        where 	nr_sequencia = nr_seq_goal_p;

        if (obter_param_funcao_html5(281, 1614) = 'N') then

            select count(*)
            into STRICT	qt_indic_w
            from    patient_cp_goal pcg
            where   coalesce(pcg.dt_end::text, '') = '' 
            and     pcg.nr_seq_prescr_diag = (SELECT pg.nr_seq_prescr_diag
                                                from patient_cp_goal pg
                                                where pg.nr_sequencia = nr_seq_goal_p);

            if (qt_indic_w = 0) then
                update  patient_cp_intervention pci
                set     pci.dt_end = clock_timestamp()
                where   coalesce(pci.dt_end::text, '') = ''
                and     pci.nr_seq_pat_cp_interv_plan in (SELECT pip.nr_sequencia
                                                            from    patient_cp_interv_plan pip
                                                            where   pip.nr_seq_prescr_diag = nr_seq_prescr_diag_w);

                update  patient_cp_interv_plan
                set     dt_end = clock_timestamp()
                where   coalesce(dt_end::text, '') = ''
                and     nr_seq_prescr_diag = nr_seq_prescr_diag_w;

                update  pe_prescr_proc
                set     dt_fim = clock_timestamp()
                where   coalesce(dt_fim::text, '') = ''
                and     ie_related_problem = nr_seq_prescr_diag_w;

                select 	count(*)
                into STRICT	qt_indic_w
                from	patient_cp_goal
                where	nr_seq_prescr_diag = nr_seq_prescr_diag_w
                and		(nr_seq_cp_goal IS NOT NULL AND nr_seq_cp_goal::text <> '')
                and 	coalesce(dt_end::text, '') = '';

                if (qt_indic_w = 0) then
                    update  pe_prescr_diag
                    set     dt_end = clock_timestamp()
                    where   nr_sequencia = nr_seq_prescr_diag_w;
                end if;
            end if;
        else
            select 	count(*)
            into STRICT	qt_indic_w
            from	patient_cp_goal
            where	nr_seq_pat_cp_problem = nr_seq_pat_cp_problem_w
            and		(nr_seq_cp_goal IS NOT NULL AND nr_seq_cp_goal::text <> '')
            and 	coalesce(dt_end::text, '') = ''
            and 	si_selected = 'Y';

            if (qt_indic_w = 0) then
                update	patient_cp_problem
                set		dt_end = clock_timestamp()
                where	nr_sequencia = nr_seq_pat_cp_problem_w;

                select 	count(*)
                into STRICT	qt_indic_w
                from 	patient_cp_problem
                where 	coalesce(dt_end::text, '') = ''
                and 	si_selected = 'Y'
                and 	nr_seq_pat_care_plan = nr_seq_pat_care_plan_w;

                if (qt_indic_w = 0) then
                    select 	count(*)
                    into STRICT	qt_indic_w
                    from 	patient_cp_goal
                    where 	(nr_seq_cp_goal IS NOT NULL AND nr_seq_cp_goal::text <> '')
                    and 	coalesce(dt_end::text, '') = ''
                    and 	si_selected = 'Y'
                    and 	nr_seq_pat_care_plan = nr_seq_pat_care_plan_w;

                    if (qt_indic_w = 0) then
                        update	patient_care_plan
                        set		dt_end 			= clock_timestamp()
                        where	nr_sequencia 	= nr_seq_pat_care_plan_w;
                    end if;
                end if;
            end if;
        end if;
    end if;

    commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE cp_finalizar_meta (nr_seq_goal_p bigint) FROM PUBLIC;

