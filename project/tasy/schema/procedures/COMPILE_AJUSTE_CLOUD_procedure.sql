-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE compile_ajuste_cloud (nm_usuario_p text, nr_seq_ajuste_versao_p text, ie_base_p text, cd_versao_p text, nr_release_p bigint) AS $body$
DECLARE




ds_consulta_w	    varchar(512);
ds_erro_w			varchar(32767);
ds_comando_w	    text;
c02              	integer;
retorno_w        	integer;
nr_pacote_w         bigint;
nr_seq_script_w     numeric(20);
nr_service_pack_w   bigint;
ds_encode_w 		varchar(100);
obj_command_w       boolean := false;
ds_command_starts_w varchar(4000);
nm_object_w         varchar(200);
ds_erro_plsql_w     text;
nm_fase_w               cloud_upgrade_log.ds_mensagem%type := 'COMPILE_AJUSTE_CLOUD';
pos_last_char_w integer;

  cerror RECORD;

BEGIN

select	value
into STRICT	ds_encode_w
from	nls_database_parameters
where	parameter = 'NLS_CHARACTERSET';

if (ds_encode_w = 'AL32UTF8') then
	EXECUTE 'ALTER SESSION SET NLS_LENGTH_SEMANTICS=CHAR';
end if;

-- Rotina de Compilacao dos comandos
if (ie_base_p = 'W') then
	-- Bases internas ao liberar o script
	CALL Exec_Sql_Dinamico('Tasy','drop table ajuste_versao_comando');
	CALL Exec_Sql_Dinamico('Tasy','create table ajuste_versao_comando as select * from ajuste_versao_comando@wheb where nr_seq_ajuste_versao = '||nr_seq_ajuste_versao_p);

	ds_consulta_w := ' SELECT       ds_comando ' 	||
			' FROM  ajuste_versao_comando ' ||
			' ORDER BY nr_ordem';
else
	-- Base dos clientes
	ds_consulta_w := ' SELECT       ds_comando, nr_pacote, nr_sequencia, nr_service_pack ' 	||
			' FROM  ajuste_versao_cliente ' ||
			' where  cd_versao = '||chr(39)||cd_versao_p||chr(39)||
			' and   nr_release = '|| nr_release_p ||
			' ORDER BY nr_ordem, nr_sequencia';
end if;

C02 := DBMS_SQL.OPEN_CURSOR;
DBMS_SQL.PARSE(C02, ds_consulta_w, dbms_sql.Native);
DBMS_SQL.DEFINE_COLUMN(C02,1,ds_comando_w);
if (ie_base_p <> 'W' ) then
    DBMS_SQL.DEFINE_COLUMN(C02,2,nr_pacote_w);
    DBMS_SQL.DEFINE_COLUMN(C02,3,nr_seq_script_w);
    DBMS_SQL.DEFINE_COLUMN(C02,4,nr_service_pack_w);
end if;
retorno_w := DBMS_SQL.execute(C02);

while( DBMS_SQL.FETCH_ROWS(C02) > 0 ) loop
        DBMS_SQL.COLUMN_VALUE(C02, 1, ds_comando_w);
        begin
        if (ie_base_p <> 'W') then
            DBMS_SQL.COLUMN_VALUE(C02, 2, nr_pacote_w);
            DBMS_SQL.COLUMN_VALUE(C02,3,nr_seq_script_w);
            DBMS_SQL.COLUMN_VALUE(C02,4,nr_service_pack_w);
        end if;

        obj_command_w := (REGEXP_INSTR(ds_comando_w, '^(create)|(create or replace)$',1,1,0,'i') > 0);

        if (obj_command_w) then
          ds_command_starts_w := substr(regexp_replace(regexp_replace(regexp_replace(ds_comando_w,'('||chr(13)||')',' '),'('||chr(10)||')',' '),'( ){2,}',' '),1,4000);
          nm_object_w := upper(regexp_substr(ds_command_starts_w,'\S*\s',1,5,'im'));
          if (nm_object_w = 'BODY' or length(nm_object_w) <= 0) then
            nm_object_w := upper(regexp_substr(ds_command_starts_w,'\S*\s',1,6,'im'));
          end if;

          pos_last_char_w := position('(' in nm_object_w);
          if (pos_last_char_w > 0) then
            nm_object_w := substr(nm_object_w,1,pos_last_char_w-1);
          end if;
        end if;

        EXECUTE ds_comando_w;
	CALL insert_log_cloud(cd_versao_p,null, nm_usuario_p, nm_fase_w||' - command performed with success', ds_comando_W, null, false,ie_base_p,nr_seq_script_w,nr_pacote_w,nr_release_p, nr_service_pack_w);

		exception
        when others then
            begin
                ds_erro_w := substr(SQLERRM,1,32000);
                -- Inserindo alerta da base
                insert into log_ajuste_versao( nr_sequencia,
                dt_atualizacao,
                nm_usuario,
                dt_atualizacao_nrec,
                nm_usuario_nrec,
                nr_seq_ajuste_versao,
                ds_erro,
                ie_tipo_alerta)
                values (nextval('log_ajuste_versao_seq'),
                clock_timestamp(),
                nm_usuario_p,
                clock_timestamp(),
                nm_usuario_p,
                nr_seq_ajuste_versao_p,
                substr(ds_erro_w,1,1000),
                'A');

		ds_erro_plsql_w := null;
                if (obj_command_w) then
                    ds_erro_plsql_w := ds_erro_plsql_w||nm_object_w||chr(13);
                    for cerror in (SELECT er.line, er.position, er.attribute, er.text from user_errors er where name = nm_object_w) loop
                        ds_erro_plsql_w := ds_erro_plsql_w||chr(13)||cerror.line||'/'||cerror.position||' - '||cerror.attribute||' - '||cerror.text;
                    end loop;
                else
                    ds_erro_plsql_w := ds_erro_w;
                end if;
                CALL insert_log_cloud(cd_versao_p,null, nm_usuario_p, nm_fase_w||' - '||ds_erro_plsql_w, ds_comando_W, null, false,ie_base_p,nr_seq_script_w,nr_pacote_w,nr_release_p, nr_service_pack_w);
            end;
        end;

END LOOP;
commit;
DBMS_SQL.CLOSE_CURSOR(C02);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE compile_ajuste_cloud (nm_usuario_p text, nr_seq_ajuste_versao_p text, ie_base_p text, cd_versao_p text, nr_release_p bigint) FROM PUBLIC;

