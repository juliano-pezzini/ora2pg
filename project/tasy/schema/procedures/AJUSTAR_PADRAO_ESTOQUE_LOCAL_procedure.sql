-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ajustar_padrao_estoque_local ( cd_estabelecimento_p bigint) AS $body$
DECLARE

 
 
cd_local_estoque_w		smallint;
cd_material_w			integer;
qt_estoque_maximo_ant_w		double precision;
qt_estoque_minimo_ant_w		double precision;
qt_estoque_maximo_w		double precision;
qt_estoque_minimo_w		double precision;
qt_minimo_ajuste_w		double precision;
qt_consumo_ww			double precision;
qt_consumo_w			double precision;
qt_transferencia_w		double precision;
qt_consumo_dia_w		double precision;
qt_mes_consumo_w		smallint;
ie_considera_transf_padrao_w	varchar(1);

 
dt_mesano_vigente_w		timestamp;

qt_dia_consumo_w		integer;
qt_dia_ajuste_minimo_w		integer;
qt_dia_ajuste_maximo_w		integer;

qt_dia_consumo_ww		integer;
qt_dia_ajuste_minimo_ww		integer;
qt_dia_ajuste_maximo_ww		integer;

qt_dia_ajuste_min_loc_w		integer;
qt_dia_ajuste_max_loc_w		integer;
ie_arred_padrao_local_w		varchar(1);
ie_zera_padrao_loc_sem_cons_w 	varchar(1);

/*utilizado para regra da semana*/
 
qt_estoque_maximo_ant_ww	double precision;
qt_estoque_minimo_ant_ww	double precision;
qt_estoque_maximo_ww		double precision;
qt_estoque_minimo_ww		double precision;
qt_dia_ajuste_minimo_www	integer;
qt_dia_ajuste_maximo_www	integer;
nr_sequencia_w			bigint;

dt_inicio_consulta_w		timestamp;
dt_fim_consulta_w		timestamp;
ie_tipo_w			varchar(1);

c00 CURSOR FOR 
SELECT	a.cd_local_estoque, 
	b.qt_dia_ajuste_minimo, 
	b.qt_dia_ajuste_maximo, 
	b.qt_dia_consumo, 
	b.ie_considera_transf_padrao 
from	padrao_estoque_local a, 
	local_estoque b 
where	a.cd_local_estoque 	= b.cd_local_estoque 
and	a.cd_estabelecimento	= cd_estabelecimento_p 
and	a.ie_situacao		= 'A' 
and	coalesce(ie_atualiza_padrao_local, 'N') = 'S' 
group by a.cd_local_estoque, 
	b.qt_dia_ajuste_minimo, 
	b.qt_dia_ajuste_maximo, 
	b.qt_dia_consumo, 
	ie_considera_transf_padrao 

union
 
SELECT	a.cd_local_estoque, 
	b.qt_dia_ajuste_minimo, 
	b.qt_dia_ajuste_maximo, 
	b.qt_dia_consumo, 
	b.ie_considera_transf_padrao 
from	REGRA_RESSUP_ESTAB a, 
	local_estoque b 
where	a.cd_local_estoque 	= b.cd_local_estoque 
and	a.cd_estabelecimento	= cd_estabelecimento_p 
and	a.ie_situacao		= 'A' 
and	coalesce(ie_atualiza_padrao_local, 'N') = 'S' 
group by a.cd_local_estoque, 
	b.qt_dia_ajuste_minimo, 
	b.qt_dia_ajuste_maximo, 
	b.qt_dia_consumo, 
	ie_considera_transf_padrao;

c01 CURSOR FOR 
SELECT	'L' ie_tipo, 
	cd_material, 
	coalesce(qt_estoque_minimo,0), 
	coalesce(qt_estoque_maximo,0), 
	qt_dia_consumo, 
	qt_dia_ajuste_minimo, 
	qt_dia_ajuste_maximo, 
	coalesce(qt_minimo_ajuste,0) 
from	padrao_estoque_local 
where	cd_estabelecimento	= cd_estabelecimento_p 
and	cd_local_estoque	= cd_local_estoque_w 
and	ie_situacao	= 'A' 
and	coalesce(ie_atualiza_padrao_local, 'N') = 'S' 

union all
 
SELECT	'E' ie_tipo, 
	cd_material, 
	coalesce(qt_estoque_minimo,0), 
	coalesce(qt_estoque_maximo,0), 
	qt_dia_consumo, 
	qt_dia_ajuste_minimo, 
	qt_dia_ajuste_maximo, 
	coalesce(qt_minimo_ajuste,0) 
from	REGRA_RESSUP_ESTAB 
where	cd_estabelecimento	= cd_estabelecimento_p 
and	cd_local_estoque	= cd_local_estoque_w 
and	ie_situacao	= 'A' 
and	coalesce(ie_atualiza_padrao_local, 'N') = 'S';

c02 CURSOR FOR 
SELECT	nr_sequencia, 
	coalesce(qt_estoque_minimo,0), 
	coalesce(qt_estoque_maximo,0), 
	qt_dia_ajuste_minimo, 
	qt_dia_ajuste_maximo 
from	padrao_estoque_local_regra 
where	cd_local_estoque	= cd_local_estoque_w 
and	cd_material		= cd_material_w 
and	coalesce(ie_atualiza_padrao_local, 'N') = 'S';


BEGIN 
 
select	dt_mesano_vigente, 
	coalesce(qt_dia_ajuste_minimo,2), 
	coalesce(qt_dia_ajuste_maximo,5), 
	coalesce(ie_arred_padrao_local,'N'), 
	coalesce(ie_zera_padrao_loc_sem_cons,'N') 
into STRICT	dt_mesano_vigente_w, 
	qt_dia_ajuste_minimo_w, 
	qt_dia_ajuste_maximo_w, 
	ie_arred_padrao_local_w, 
	ie_zera_padrao_loc_sem_cons_w 
from	parametro_estoque 
where	cd_estabelecimento		= cd_estabelecimento_p;
 
begin 
select	qt_mes_consumo 
into STRICT	qt_mes_consumo_w 
from	parametro_compras 
where	cd_estabelecimento		= cd_estabelecimento_p;
exception 
	when others then 
		qt_mes_consumo_w	:= 3;
end;
 
open c00;
loop 
fetch c00 into 
	cd_local_estoque_w, 
	qt_dia_ajuste_min_loc_w, 
	qt_dia_ajuste_max_loc_w, 
	qt_dia_consumo_w, 
	ie_considera_transf_padrao_w;
EXIT WHEN NOT FOUND; /* apply on c00 */
	begin 
	open c01;
	loop 
	fetch c01 into 
		ie_tipo_w, 
		cd_material_w, 
		qt_estoque_minimo_ant_w, 
		qt_estoque_maximo_ant_w, 
		qt_dia_consumo_ww, 
		qt_dia_ajuste_minimo_ww, 
		qt_dia_ajuste_maximo_ww, 
		qt_minimo_ajuste_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin 
		qt_dia_consumo_ww 	:= coalesce(qt_dia_consumo_ww, qt_dia_consumo_w);
		qt_dia_ajuste_minimo_ww	:= coalesce(coalesce(qt_dia_ajuste_minimo_ww, qt_dia_ajuste_min_loc_w), qt_dia_ajuste_minimo_w);
		qt_dia_ajuste_maximo_ww	:= coalesce(coalesce(qt_dia_ajuste_maximo_ww, qt_dia_ajuste_max_loc_w), qt_dia_ajuste_maximo_w);
 
		if (coalesce(qt_dia_consumo_ww,0) > 0) then 
			begin 
			dt_inicio_consulta_w	:= PKG_DATE_UTILS.start_of(clock_timestamp() - qt_dia_consumo_ww,'dd',0);
			dt_fim_consulta_w		:= PKG_DATE_UTILS.END_OF(clock_timestamp() - interval '1 days','DAY', 0);
 
			select	coalesce(sum(a.qt_consumo),0) 
			into STRICT	qt_consumo_w 
			from	movimento_estoque_v a, 
				operacao_estoque b 
			where	a.cd_operacao_estoque = b.cd_operacao_estoque 
			and	(a.cd_centro_custo IS NOT NULL AND a.cd_centro_custo::text <> '') 
			and	coalesce(b.ie_desconsidera_cons_padrao,'N') = 'N' 
			and	a.dt_movimento_estoque between dt_inicio_consulta_w and dt_fim_consulta_w 
			and	a.cd_material_estoque	= cd_material_w 
			and	a.cd_local_estoque	= cd_local_estoque_w 
			and	a.cd_estabelecimento	= cd_estabelecimento_p;
 
			if (ie_considera_transf_padrao_w = 'S') then 
				select	coalesce(sum(a.qt_estoque),0) 
				into STRICT	qt_transferencia_w 
				from	movimento_estoque_v a, 
					operacao_estoque b 
				where	a.cd_operacao_estoque = b.cd_operacao_estoque 
				and	b.ie_tipo_requisicao in (2,21) 
				and	b.ie_entrada_saida = 'S' 
				and	coalesce(b.ie_desconsidera_cons_padrao,'N') = 'N' 
				and	a.dt_movimento_estoque between dt_inicio_consulta_w and dt_fim_consulta_w 
				and	a.cd_material_estoque	= cd_material_w 
				and	a.cd_local_estoque		= cd_local_estoque_w 
				and	a.cd_estabelecimento	= cd_estabelecimento_p;
 
				qt_consumo_w := qt_consumo_w + qt_transferencia_w;
			end if;
 
			qt_consumo_dia_w	:= dividir(qt_consumo_w, qt_dia_consumo_ww);
			end;
		else 
			begin 
			select	coalesce(sum(a.qt_consumo),0) 
			into STRICT	qt_consumo_w 
			from	movto_estoque_operacao_v a, 
				operacao_estoque b 
			where	a.cd_operacao_estoque = b.cd_operacao_estoque 
			and	(a.cd_centro_custo IS NOT NULL AND a.cd_centro_custo::text <> '') 
			and	coalesce(b.ie_desconsidera_cons_padrao,'N') = 'N' 
			and	a.dt_mesano_referencia between PKG_DATE_UTILS.ADD_MONTH(dt_mesano_vigente_w, - (qt_mes_consumo_w - 1), 0) and dt_mesano_vigente_w 
			and	a.cd_material		= cd_material_w 
			and	a.cd_local_estoque		= cd_local_estoque_w 
			and	a.cd_estabelecimento	= cd_estabelecimento_p;
 
			if (ie_considera_transf_padrao_w = 'S') then 
				select	coalesce(sum(a.qt_estoque),0) 
				into STRICT	qt_transferencia_w 
				from	movimento_estoque_v a, 
					operacao_estoque b 
				where	a.cd_operacao_estoque = b.cd_operacao_estoque 
				and	b.ie_tipo_requisicao in (2,21) 
				and	b.ie_entrada_saida = 'S' 
				and	coalesce(b.ie_desconsidera_cons_padrao,'N') = 'N' 
				and	a.dt_mesano_referencia between PKG_DATE_UTILS.ADD_MONTH(dt_mesano_vigente_w, - (qt_mes_consumo_w - 1), 0) and dt_mesano_vigente_w 
				and	a.cd_material_estoque	= cd_material_w 
				and	a.cd_local_estoque		= cd_local_estoque_w 
				and	a.cd_estabelecimento	= cd_estabelecimento_p;
 
				qt_consumo_w := qt_consumo_w + qt_transferencia_w;
			end if;
 
			qt_consumo_dia_w	:= dividir(dividir(qt_consumo_w, qt_mes_consumo_w),30);
			end;
		end if;
 
		qt_estoque_minimo_w	:= qt_consumo_dia_w * qt_dia_ajuste_minimo_ww;
		qt_estoque_maximo_w	:= qt_consumo_dia_w * qt_dia_ajuste_maximo_ww;
 
		if (ie_zera_padrao_loc_sem_cons_w = 'S') and (coalesce(qt_consumo_w,0) <= 0) then 
			begin 
			qt_estoque_minimo_w := 0;
			qt_estoque_maximo_w := 0;
			end;
		end if;
 
		if	((qt_consumo_w > 0) or (ie_zera_padrao_loc_sem_cons_w = 'S')) then 
			begin 
			if (ie_arred_padrao_local_w = 'S') then 
				begin 
				if (qt_estoque_minimo_w < 1) then 
					qt_estoque_minimo_w := ceil(qt_estoque_minimo_w);
				else 
					qt_estoque_minimo_w := round(qt_estoque_minimo_w);
				end if;
				if (qt_estoque_maximo_w < 1) then 
					qt_estoque_maximo_w := ceil(qt_estoque_maximo_w);
				else 
					qt_estoque_maximo_w := round(qt_estoque_maximo_w);
				end if;
				end;
			end if;
 
			if (qt_minimo_ajuste_w > 0) and (qt_minimo_ajuste_w > qt_estoque_minimo_w) then 
				qt_estoque_minimo_w := qt_minimo_ajuste_w;
			end if;
			 
			if (qt_estoque_minimo_w > qt_estoque_maximo_w) then 
				qt_estoque_maximo_w := qt_estoque_minimo_w;
			end if;
			 
			if (ie_tipo_w = 'L') then 
				begin 
				update	padrao_estoque_local 
				set	qt_estoque_maximo	= qt_estoque_maximo_w, 
					qt_estoque_minimo	= qt_estoque_minimo_w, 
					nm_usuario	= 'Job', 
					qt_consumo	= coalesce(qt_consumo_w,0) 
				where	cd_material	= cd_material_w 
				and	cd_local_estoque	= cd_local_estoque_w;
 
				if (qt_estoque_minimo_ant_w <> coalesce(qt_estoque_minimo_w,0)) or (qt_estoque_maximo_ant_w <> coalesce(qt_estoque_maximo_w,0)) then 
					insert into padrao_estoque_local_log( 
						nr_sequencia, 
						cd_local_estoque, 
						cd_material, 
						qt_maximo_antes, 
						qt_maximo_depois, 
						qt_minimo_antes, 
						qt_minimo_depois, 
						nm_usuario, 
						dt_atualizacao) 
					values (nextval('padrao_estoque_local_log_seq'), 
						cd_local_estoque_w, 
						cd_material_w, 
						qt_estoque_maximo_ant_w, 
						coalesce(qt_estoque_maximo_w,0), 
						qt_estoque_minimo_ant_w, 
						coalesce(qt_estoque_minimo_w,0), 
						'Job', 
						clock_timestamp());
				end if;
				end;
			else	 
				begin 
				update	REGRA_RESSUP_ESTAB 
				set	qt_estoque_maximo	= qt_estoque_maximo_w, 
					qt_estoque_minimo	= qt_estoque_minimo_w, 
					nm_usuario	= 'Job', 
					qt_consumo	= coalesce(qt_consumo_w,0) 
				where	cd_material	= cd_material_w 
				and	cd_local_estoque	= cd_local_estoque_w;
				end;
			end if;
			end;
		end if;
 
		if (ie_tipo_w = 'L') then 
			begin 
			open c02;
			loop 
			fetch c02 into 
				nr_sequencia_w, 
				qt_estoque_minimo_ant_ww, 
				qt_estoque_maximo_ant_ww, 
				qt_dia_ajuste_minimo_www, 
				qt_dia_ajuste_maximo_www;
			EXIT WHEN NOT FOUND; /* apply on c02 */
				begin 
				qt_dia_ajuste_minimo_www := coalesce(qt_dia_ajuste_minimo_www,qt_dia_ajuste_minimo_ww);
				qt_dia_ajuste_maximo_www := coalesce(qt_dia_ajuste_maximo_www,qt_dia_ajuste_maximo_ww);
 
				qt_estoque_minimo_ww	:= qt_consumo_dia_w * qt_dia_ajuste_minimo_www;
				qt_estoque_maximo_ww	:= qt_consumo_dia_w * qt_dia_ajuste_maximo_www;
 
				if (ie_zera_padrao_loc_sem_cons_w = 'S') and (coalesce(qt_consumo_w,0) <= 0) then 
					begin 
					qt_estoque_minimo_ww	:= 0;
					qt_estoque_maximo_ww	:= 0;
					end;
				end if;
 
				if	((qt_consumo_w > 0) or (ie_zera_padrao_loc_sem_cons_w = 'S')) then 
					begin 
					if (ie_arred_padrao_local_w = 'S') then 
						begin 
						if (qt_estoque_minimo_w < 1) then 
							qt_estoque_minimo_ww := ceil(qt_estoque_minimo_ww);
						else 
							qt_estoque_minimo_ww := round(qt_estoque_minimo_ww);
						end if;
						if (qt_estoque_maximo_ww < 1) then 
							qt_estoque_maximo_ww := ceil(qt_estoque_maximo_ww);
						else 
							qt_estoque_maximo_ww := round(qt_estoque_maximo_ww);
						end if;
						end;
					end if;
 
					if (qt_minimo_ajuste_w > 0) and (qt_minimo_ajuste_w > qt_estoque_minimo_ww) then 
						qt_estoque_minimo_ww := qt_minimo_ajuste_w;
					end if;
					 
					if (qt_estoque_minimo_w > qt_estoque_maximo_w) then 
						qt_estoque_maximo_w := qt_estoque_minimo_w;
					end if;
 
					update	padrao_estoque_local_regra 
					set	qt_estoque_maximo	= qt_estoque_maximo_ww, 
						qt_estoque_minimo	= qt_estoque_minimo_ww, 
						nm_usuario	= 'Job', 
						dt_atualizacao = clock_timestamp() 
					where	nr_sequencia = nr_sequencia_w;
					end;
				end if;
				end;
			end loop;
			close c02;
			end;
		end if;
		 
		commit;
		end;
	end loop;
	close c01;
	end;
end loop;
close c00;
 
commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ajustar_padrao_estoque_local ( cd_estabelecimento_p bigint) FROM PUBLIC;

