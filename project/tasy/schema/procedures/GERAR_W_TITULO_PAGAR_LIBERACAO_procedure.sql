-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_w_titulo_pagar_liberacao ( cd_pessoa_fisica_p text, cd_cgc_p text, ie_filtrar_data_p bigint, dt_inicial_p timestamp, dt_final_p timestamp, nr_lote_contabil_p bigint, vl_inicial_p bigint, vl_final_p bigint, ie_tipo_titulo_p text, nr_titulo_p bigint, ie_liberacao_p bigint, cd_tipo_baixa_neg_p bigint, ie_situacao_p text, ie_origem_titulo_p text, nr_seq_classe_p bigint, ds_lista_classe_p text, ie_coluna_aprov_p text, cd_centro_custo_p bigint, ie_estab_adicional_p text, cd_estabelecimento_p bigint, cd_estab_filtro_p bigint, nr_nota_fiscal_p text, cd_setor_atendimento_p bigint, cd_perfil_p bigint, nm_usuario_p text, cd_conta_financeira_p bigint, cd_tributo_p bigint, cd_retencao_p text, ie_aprov_nivel_inferior_p text, ie_status_p text default null) AS $body$
DECLARE


/*	ie_filtrar_data_p

0	Nenhuma
1	Vencimento
2	Emissao

*/


/*	ie_liberacao_p

0	Nao liberados
1	Liberados
2	Todos

*/
ds_select_w		varchar(4000);
ds_from_w		varchar(4000);
ds_where_w		varchar(4000);

var_cur_w		integer;
var_exec_w		integer;
var_retorno_w		integer;

dt_inicial_w		timestamp;
dt_final_w		timestamp;
qt_estab_adic_w		bigint;
ie_centro_custo_w	varchar(1);
ie_liberado_w		varchar(1);
cd_classificacao_w	centro_custo.cd_classificacao%type;

nr_nota_fiscal_w	nota_fiscal.nr_nota_fiscal%type;
nm_usuario_nota_w	nota_fiscal.nm_usuario%type;
cd_operacao_nf_w	nota_fiscal.cd_operacao_nf%type;
vl_total_nota_w		nota_fiscal.vl_total_nota%type;
nr_ordem_compra_w	nota_fiscal.nr_ordem_compra%type;
nr_titulo_w		titulo_pagar.nr_titulo%type;
cd_pessoa_fisica_w	titulo_pagar.cd_pessoa_fisica%type;
cd_cgc_w		titulo_pagar.cd_cgc%type;
nr_seq_nota_fiscal_w	titulo_pagar.nr_seq_nota_fiscal%type;
dt_vencimento_atual_w	titulo_pagar.dt_vencimento_atual%type;
dt_inclusao_w		titulo_pagar.dt_inclusao%type;
cd_estabelecimento_w	titulo_pagar.cd_estabelecimento%type;
cd_tipo_baixa_neg_w	titulo_pagar.cd_tipo_baixa_neg%type;
nm_usuario_w		titulo_pagar.nm_usuario%type;
vl_titulo_w		titulo_pagar.vl_titulo%type;
dt_emissao_w		titulo_pagar.dt_emissao%type;
nr_seq_proj_rec_w	titulo_pagar.nr_seq_proj_rec%type;
ie_tipo_titulo_w	titulo_pagar.ie_tipo_titulo%type;
nr_seq_classe_w		titulo_pagar.nr_seq_classe%type;
ie_origem_titulo_w	titulo_pagar.ie_origem_titulo%type;

cd_setor_atendimento_w	usuario.cd_setor_atendimento%type;
qt_usuario_w		bigint;
nm_usuario_upper_w	titulo_pagar.nm_usuario%type;
ds_beneficiario_w	w_titulo_pagar_liberacao.ds_beneficiario%type;
ds_dados_aprov_w	w_titulo_pagar_liberacao.ds_dados_aprov%type;
ie_razao_fantasia_w	estabelecimento.ie_razao_fantasia%type;
ds_razao_social_w	pessoa_juridica.ds_razao_social%type;
nm_fantasia_w		pessoa_juridica.nm_fantasia%type;
nm_fantasia_estab_w	estabelecimento.nm_fantasia_estab%type;
ds_estab_w		w_titulo_pagar_liberacao.ds_estab%type;
ds_tipo_baixa_cpa_w	w_titulo_pagar_liberacao.ds_tipo_baixa_cpa%type;
nm_usuario_nf_w		nota_fiscal.nm_usuario%type;
nr_nf_w			nota_fiscal.nr_nota_fiscal%type;
qt_dias_vencto_real_w	w_titulo_pagar_liberacao.qt_dias_vencto_real%type;
qt_centro_custo_w	bigint;
qt_regra_w		bigint;
ie_tipo_pessoa_w	varchar(1);
cd_tipo_pessoa_w	pessoa_juridica.cd_tipo_pessoa%type;


BEGIN

delete	from w_titulo_pagar_liberacao
where	nm_usuario		= nm_usuario_p
and	coalesce(cd_estabelecimento,cd_estabelecimento_p)	= cd_estabelecimento_p;

/* Se o usuario tiver informado pessoa fisica e pessoa juridica ao mesmo tempo ou
   Se o usuario tiver informado um valor inicial maior do que o valor final ou
   Se o usuario tiver informado uma classe que nao consta entre as classes permidas (parametro 114),
   Nao vai retornar nada. Portanto nao e necessario continuar o processo */
if	((coalesce(cd_pessoa_fisica_p::text, '') = '') or (coalesce(cd_cgc_p::text, '') = '')) and
	((coalesce(vl_inicial_p::text, '') = '') or (coalesce(vl_final_p::text, '') = '') or (vl_inicial_p		< vl_final_p)) and
	((coalesce(nr_seq_classe_p::text, '') = '') or (coalesce(ds_lista_classe_p::text, '') = '') or (position(',' || nr_seq_classe_p || ',' in ',' || ds_lista_classe_p || ',') > 0)) then

	/* O cursor desta procedure e dinamico por questao de performance */



	/* Tratar para o caso do usuario informar apenas o filtro de nota fiscal */

	if (coalesce(nr_nota_fiscal_p::text, '') = '') then

		ds_select_w	:= 	'select	null nr_nota_fiscal, ' ||
					'	null nm_usuario_nota, ' ||
					'	null cd_operacao_nf, ' ||
					'	null vl_nota_fiscal, ' ||
					'	null nr_ordem_compra, ';
		ds_from_w	:= 	'from	titulo_pagar a ';
		ds_where_w	:= 	'where	1 = 1 ';

	else

		ds_select_w	:= 	'select	b.nr_nota_fiscal, ' ||
					'	b.nm_usuario nm_usuario_nota, ' ||
					'	b.cd_operacao_nf, ' ||
					'	b.vl_total_nota vl_nota_fiscal, ' ||
					'	b.nr_ordem_compra, ';
		ds_from_w	:= 	'from	nota_fiscal b, ' ||
					'	titulo_pagar a ';
		ds_where_w	:=	'where	b.nr_nota_fiscal	= :nr_nota_fiscal ' ||
					'and	a.nr_seq_nota_fiscal	= b.nr_sequencia ';

	end if;

	if (cd_setor_atendimento_p IS NOT NULL AND cd_setor_atendimento_p::text <> '') then

		ds_from_w	:=	ds_from_w || 	', usuario c ';
		ds_where_w	:=	ds_where_w ||	'and	c.cd_setor_atendimento	= :cd_setor_atendimento ' ||
							'and	upper(a.nm_usuario)	= upper(c.nm_usuario) ';

	end if;
	
	if (cd_conta_financeira_p IS NOT NULL AND cd_conta_financeira_p::text <> '') then
	
		ds_from_w	:=	ds_from_w || ', titulo_pagar_classif tpc ';
		ds_where_w	:=	ds_where_w || ' and	a.nr_titulo = tpc.nr_titulo ' ||
								    ' and   tpc.nr_seq_conta_financ = :cd_conta_financeira ';
	
	end if;
	
	if (cd_tributo_p IS NOT NULL AND cd_tributo_p::text <> '') then
	
		ds_from_w	:= ds_from_w || ', titulo_pagar_imposto tpi ';
		ds_where_w	:= ds_where_w || ' and a.nr_seq_tributo = tpi.nr_sequencia(+) ' ||
									 ' and tpi.cd_tributo = :cd_tributo ';
									
		
	end if;
	
	if (cd_retencao_p IS NOT NULL AND cd_retencao_p::text <> '') then
		
		if (coalesce(cd_tributo_p::text, '') = '') then /*Se cd_tributo_p for nulo, significa que nao caiu no IF de cima, e nao add no ds_from e ds_where a tabela e a ligacao, ai precisa fazer aqui*/
	
			ds_from_w	:= ds_from_w || ', titulo_pagar_imposto tpi ';
			ds_where_w	:= ds_where_w || ' and a.nr_seq_tributo = tpi.nr_sequencia(+) ' ||
										 ' and obter_dados_tit_pagar(a.nr_titulo, ''DARF'') = :cd_retencao ';
										
		elsif (cd_tributo_p IS NOT NULL AND cd_tributo_p::text <> '') then /*Se o cd_tributo_p nao for nulo, ja caiu no IF de cima, ja add  a tabela no ds_from e ligacao no ds_where, ai n deve adicionar d novo, deve apenas restringir o DARF com a function*/
		
			ds_where_w	:= ds_where_w || ' and obter_dados_tit_pagar(a.nr_titulo, ''DARF'') = :cd_retencao ';
										
		end if;
	
	end if;

	ds_select_w	:= ds_select_w ||	'	a.nr_titulo, ' ||
						'	a.cd_pessoa_fisica, ' ||
						'	a.cd_cgc, ' ||
						'	a.nr_seq_nota_fiscal, ' ||
						'	a.dt_vencimento_atual, ' ||
						'	a.dt_inclusao, ' ||
						'	a.cd_estabelecimento, ' ||
						'	a.cd_tipo_baixa_neg, ' ||
						'	a.nm_usuario, ' ||
						'	a.vl_titulo, ' ||
						'	a.dt_emissao, ' ||
						'	a.nr_seq_proj_rec, ' ||
						'	a.ie_tipo_titulo, ' ||
						'	a.nr_seq_classe, ' ||
						'	a.ie_origem_titulo ';

	if (cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') then

		ds_where_w	:= ds_where_w ||	'and	a.cd_pessoa_fisica	= :cd_pessoa_fisica ';

	end if;

	if (cd_cgc_p IS NOT NULL AND cd_cgc_p::text <> '') then

		ds_where_w	:= ds_where_w ||	'and	a.cd_cgc		= :cd_cgc ';

	end if;

	if (ie_filtrar_data_p	= 1) then

		ds_where_w	:= ds_where_w ||	'and	a.dt_vencimento_atual	between :dt_inicial and :dt_final ';

	elsif (ie_filtrar_data_p	= 2) then

		ds_where_w	:= ds_where_w ||	'and	a.dt_emissao		between :dt_inicial and :dt_final ';

	end if;

	if (nr_lote_contabil_p IS NOT NULL AND nr_lote_contabil_p::text <> '') then

		ds_where_w	:= ds_where_w ||	'and	a.nr_lote_contabil	= :nr_lote_contabil ';

	end if;

	if (vl_inicial_p IS NOT NULL AND vl_inicial_p::text <> '') then

		ds_where_w	:= ds_where_w ||	'and	a.vl_titulo		> :vl_inicial ';

	end if;

	if (vl_final_p IS NOT NULL AND vl_final_p::text <> '') then

		ds_where_w	:= ds_where_w ||	'and	a.vl_titulo		< :vl_final ';

	end if;

	if (ie_tipo_titulo_p IS NOT NULL AND ie_tipo_titulo_p::text <> '') then

		ds_where_w	:= ds_where_w ||	'and	a.ie_tipo_titulo	= :ie_tipo_titulo ';

	end if;

	if (nr_titulo_p IS NOT NULL AND nr_titulo_p::text <> '') then

		ds_where_w	:= ds_where_w ||	'and	a.nr_titulo		= :nr_titulo ';

	end if;

	if (ie_liberacao_p		= 0) then

		ds_where_w	:= ds_where_w ||	'and	a.dt_liberacao		is null ';

	elsif (ie_liberacao_p		= 1) then

		ds_where_w	:= ds_where_w ||	'and	a.dt_liberacao		is not null ';

	end if;

	if (cd_tipo_baixa_neg_p IS NOT NULL AND cd_tipo_baixa_neg_p::text <> '') then

		ds_where_w	:= ds_where_w ||	'and	a.cd_tipo_baixa_neg	= :cd_tipo_baixa_neg ';

	end if;

	if (ie_situacao_p IS NOT NULL AND ie_situacao_p::text <> '') then

		ds_where_w	:= ds_where_w ||	'and	a.ie_situacao		= :ie_situacao ';

	end if;

	if (ie_origem_titulo_p IS NOT NULL AND ie_origem_titulo_p::text <> '') then

		ds_where_w	:= ds_where_w ||	'and	a.ie_origem_titulo	= :ie_origem_titulo ';

	end if;

	if (nr_seq_classe_p IS NOT NULL AND nr_seq_classe_p::text <> '') then

		ds_where_w	:= ds_where_w ||	'and	a.nr_seq_classe		= :nr_seq_classe ';

	elsif (ds_lista_classe_p IS NOT NULL AND ds_lista_classe_p::text <> '') then

		ds_where_w	:= ds_where_w ||	'and	instr(' || chr(39) || ',' || chr(39) || ' || :ds_lista_classe || ' || chr(39) || ',' || chr(39) || ',' || chr(39) || ',' || chr(39) || ' || a.nr_seq_classe || ' || chr(39) || ',' || chr(39) || ') > 0 ';

	end if;
	
	if (coalesce(ie_aprov_nivel_inferior_p,'N') = 'S') then
		
		ds_where_w	:= ds_where_w ||	'and	obter_se_lib_nivel_inferior(a.nr_titulo , :nm_usuario , :cd_perfil ) =  ''S'' ';
		
	end if;
	
	if (ie_status_p IS NOT NULL AND ie_status_p::text <> '') then
		/*OS 1615737 - Coloquei nvl no status pois na query de ativacao do titulo na funcao Titulo a pagar (titulo_pagar_q, faz select da titulo_pagar_v, e nessa view, o ie_status traz por padrao D para titulos com esse campo nulo.*/

		ds_where_w	:= ds_where_w ||	'and	nvl(a.ie_status,''D'') = :ie_status ';		
	
	end if;

	if (ie_estab_adicional_p	= 'N') then

		if (cd_estab_filtro_p IS NOT NULL AND cd_estab_filtro_p::text <> '') then

			ds_where_w	:= ds_where_w ||	'and	a.cd_estabelecimento	= :cd_estabelecimento ';

		else

			ds_where_w	:= ds_where_w ||	'and	(a.cd_estabelecimento = :cd_estabelecimento or a.cd_estab_financeiro = :cd_estabelecimento) ';

		end if;

	else

		if (cd_estab_filtro_p IS NOT NULL AND cd_estab_filtro_p::text <> '') then

			select	count(*)
			into STRICT	qt_estab_adic_w
			from	usuario_estabelecimento a
			where	a.cd_estabelecimento	<> cd_estab_filtro_p
			and	a.nm_usuario_param	= nm_usuario_p;

			if (qt_estab_adic_w	= 0) then

				ds_where_w	:= ds_where_w ||	'and	a.cd_estabelecimento	= :cd_estabelecimento ';

			else

				ds_where_w	:= ds_where_w ||	'and	a.cd_estabelecimento	in ' ||
									'	(select	x.cd_estabelecimento ' ||
									'	from	usuario_estabelecimento x ' ||
									'	where	x.nm_usuario_param	= :nm_usuario ' ||
									'	union ' ||
									'	select	:cd_estabelecimento ' ||
									'	from	dual) ';

			end if;

		else

			select	count(*)
			into STRICT	qt_estab_adic_w
			from	usuario_estabelecimento a
			where	a.cd_estabelecimento	<> cd_estabelecimento_p
			and	a.nm_usuario_param	= nm_usuario_p;

			if (qt_estab_adic_w	= 0) then

				ds_where_w	:= ds_where_w ||	'and	(a.cd_estabelecimento = :cd_estabelecimento or a.cd_estab_financeiro = :cd_estabelecimento) ';

			else

				ds_where_w	:= ds_where_w ||	'and	(a.cd_estab_financeiro = :cd_estabelecimento or ' ||
									'	a.cd_estabelecimento	in ' ||
									'	(select	x.cd_estabelecimento ' ||
									'	from	usuario_estabelecimento x ' ||
									'	where	x.nm_usuario_param	= :nm_usuario ' ||
									'	union ' ||
									'	select	:cd_estabelecimento ' ||
									'	from	dual)) ';

			end if;

		end if;

	end if;

	var_cur_w	:= dbms_sql.open_cursor;

	dbms_sql.parse(var_cur_w, ds_select_w || ds_from_w || ds_where_w, 1);

	if (nr_nota_fiscal_p IS NOT NULL AND nr_nota_fiscal_p::text <> '') then

		dbms_sql.bind_variable(var_cur_w, ':nr_nota_fiscal', nr_nota_fiscal_p);

	end if;

	if (cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') then

		dbms_sql.bind_variable(var_cur_w, ':cd_pessoa_fisica', cd_pessoa_fisica_p);

	end if;

	if (cd_cgc_p IS NOT NULL AND cd_cgc_p::text <> '') then

		dbms_sql.bind_variable(var_cur_w, ':cd_cgc', cd_cgc_p);

	end if;

	if (ie_filtrar_data_p	<> 0) then

		dt_inicial_w	:= trunc(dt_inicial_p,'dd');
		dt_final_w	:= fim_dia(dt_final_p);
		dbms_sql.bind_variable(var_cur_w, ':dt_inicial', dt_inicial_w);
		dbms_sql.bind_variable(var_cur_w, ':dt_final', dt_final_w);

	end if;

	if (nr_lote_contabil_p IS NOT NULL AND nr_lote_contabil_p::text <> '') then

		dbms_sql.bind_variable(var_cur_w, ':nr_lote_contabil', nr_lote_contabil_p);

	end if;

	if (vl_inicial_p IS NOT NULL AND vl_inicial_p::text <> '') then

		dbms_sql.bind_variable(var_cur_w, ':vl_inicial', vl_inicial_p);

	end if;

	if (vl_final_p IS NOT NULL AND vl_final_p::text <> '') then

		dbms_sql.bind_variable(var_cur_w, ':vl_final', vl_final_p);

	end if;

	if (ie_tipo_titulo_p IS NOT NULL AND ie_tipo_titulo_p::text <> '') then

		dbms_sql.bind_variable(var_cur_w, ':ie_tipo_titulo', ie_tipo_titulo_p);

	end if;

	if (nr_titulo_p IS NOT NULL AND nr_titulo_p::text <> '') then

		dbms_sql.bind_variable(var_cur_w, ':nr_titulo', nr_titulo_p);

	end if;

	if (cd_tipo_baixa_neg_p IS NOT NULL AND cd_tipo_baixa_neg_p::text <> '') then

		dbms_sql.bind_variable(var_cur_w, ':cd_tipo_baixa_neg', cd_tipo_baixa_neg_p);

	end if;

	if (ie_situacao_p IS NOT NULL AND ie_situacao_p::text <> '') then

		dbms_sql.bind_variable(var_cur_w, ':ie_situacao', ie_situacao_p);

	end if;

	if (ie_origem_titulo_p IS NOT NULL AND ie_origem_titulo_p::text <> '') then

		dbms_sql.bind_variable(var_cur_w, ':ie_origem_titulo', ie_origem_titulo_p);

	end if;

	if (nr_seq_classe_p IS NOT NULL AND nr_seq_classe_p::text <> '') then

		dbms_sql.bind_variable(var_cur_w, ':nr_seq_classe', nr_seq_classe_p);

	elsif (ds_lista_classe_p IS NOT NULL AND ds_lista_classe_p::text <> '') then

		dbms_sql.bind_variable(var_cur_w, ':ds_lista_classe', ds_lista_classe_p);

	end if;

	if (ie_estab_adicional_p	= 'N') then

		if (cd_estab_filtro_p IS NOT NULL AND cd_estab_filtro_p::text <> '') then

			dbms_sql.bind_variable(var_cur_w, ':cd_estabelecimento', cd_estab_filtro_p);

		else

			dbms_sql.bind_variable(var_cur_w, ':cd_estabelecimento', cd_estabelecimento_p);

		end if;

	else

		if (cd_estab_filtro_p IS NOT NULL AND cd_estab_filtro_p::text <> '') then

			if (qt_estab_adic_w	= 0) then

				dbms_sql.bind_variable(var_cur_w, ':cd_estabelecimento', cd_estab_filtro_p);

			else

				dbms_sql.bind_variable(var_cur_w, ':cd_estabelecimento', cd_estab_filtro_p);
				dbms_sql.bind_variable(var_cur_w, ':nm_usuario', nm_usuario_p);

			end if;

		else

			if (qt_estab_adic_w	= 0) then

				dbms_sql.bind_variable(var_cur_w, ':cd_estabelecimento', cd_estabelecimento_p);

			else

				dbms_sql.bind_variable(var_cur_w, ':cd_estabelecimento', cd_estabelecimento_p);
				dbms_sql.bind_variable(var_cur_w, ':nm_usuario', nm_usuario_p);

			end if;

		end if;

	end if;

	if (cd_setor_atendimento_p IS NOT NULL AND cd_setor_atendimento_p::text <> '') then

		dbms_sql.bind_variable(var_cur_w, ':cd_setor_atendimento', cd_setor_atendimento_p);

	end if;
	
	if (cd_conta_financeira_p IS NOT NULL AND cd_conta_financeira_p::text <> '') then
	
		dbms_sql.bind_variable(var_cur_w, ':cd_conta_financeira', cd_conta_financeira_p);
		
	end if;
	
	if (cd_tributo_p IS NOT NULL AND cd_tributo_p::text <> '') then
	
		dbms_sql.bind_variable(var_cur_w, ':cd_tributo', cd_tributo_p);
		
	end if;
	
	if (cd_retencao_p IS NOT NULL AND cd_retencao_p::text <> '') then
	
		dbms_sql.bind_variable(var_cur_w, ':cd_retencao', cd_retencao_p);
		
	end if;
	
	if (coalesce(ie_aprov_nivel_inferior_p,'N') = 'S') then
	
		dbms_sql.bind_variable(var_cur_w, ':nm_usuario', nm_usuario_p);
		dbms_sql.bind_variable(var_cur_w, ':cd_perfil', cd_perfil_p);
	
	end if;
	
	if (ie_status_p IS NOT NULL AND ie_status_p::text <> '') then
	
		dbms_sql.bind_variable(var_cur_w, ':ie_status', ie_status_p);
	
	end if;

	if (cd_centro_custo_p IS NOT NULL AND cd_centro_custo_p::text <> '') then

		select	max(a.cd_classificacao)
		into STRICT	cd_classificacao_w
		from	centro_custo a
		where	a.cd_centro_custo	= cd_centro_custo_p;

	end if;

	dbms_sql.define_column(var_cur_w, 1, nr_nota_fiscal_w,255);
	dbms_sql.define_column(var_cur_w, 2, nm_usuario_nota_w,15);
	dbms_sql.define_column(var_cur_w, 3, cd_operacao_nf_w);
	dbms_sql.define_column(var_cur_w, 4, vl_total_nota_w);
	dbms_sql.define_column(var_cur_w, 5, nr_ordem_compra_w);
	dbms_sql.define_column(var_cur_w, 6, nr_titulo_w);
	dbms_sql.define_column(var_cur_w, 7, cd_pessoa_fisica_w,10);
	dbms_sql.define_column(var_cur_w, 8, cd_cgc_w,14);
	dbms_sql.define_column(var_cur_w, 9, nr_seq_nota_fiscal_w);
	dbms_sql.define_column(var_cur_w, 10, dt_vencimento_atual_w);
	dbms_sql.define_column(var_cur_w, 11, dt_inclusao_w);
	dbms_sql.define_column(var_cur_w, 12, cd_estabelecimento_w);
	dbms_sql.define_column(var_cur_w, 13, cd_tipo_baixa_neg_w);
	dbms_sql.define_column(var_cur_w, 14, nm_usuario_w,15);
	dbms_sql.define_column(var_cur_w, 15, vl_titulo_w);
	dbms_sql.define_column(var_cur_w, 16, dt_emissao_w);
	dbms_sql.define_column(var_cur_w, 17, nr_seq_proj_rec_w);
	dbms_sql.define_column(var_cur_w, 18, ie_tipo_titulo_w,2);
	dbms_sql.define_column(var_cur_w, 19, nr_seq_classe_w);
	dbms_sql.define_column(var_cur_w, 20, ie_origem_titulo_w,10);

	var_exec_w	:= dbms_sql.execute(var_cur_w);
	

	loop
	var_retorno_w := dbms_sql.fetch_rows(var_cur_w);
	exit	when var_retorno_w = 0;

		dbms_sql.column_value(var_cur_w, 1, nr_nota_fiscal_w);
		dbms_sql.column_value(var_cur_w, 2, nm_usuario_nota_w);
		dbms_sql.column_value(var_cur_w, 3, cd_operacao_nf_w);
		dbms_sql.column_value(var_cur_w, 4, vl_total_nota_w);
		dbms_sql.column_value(var_cur_w, 5, nr_ordem_compra_w);
		dbms_sql.column_value(var_cur_w, 6, nr_titulo_w);
		dbms_sql.column_value(var_cur_w, 7, cd_pessoa_fisica_w);
		dbms_sql.column_value(var_cur_w, 8, cd_cgc_w);
		dbms_sql.column_value(var_cur_w, 9, nr_seq_nota_fiscal_w);
		dbms_sql.column_value(var_cur_w, 10, dt_vencimento_atual_w);
		dbms_sql.column_value(var_cur_w, 11, dt_inclusao_w);
		dbms_sql.column_value(var_cur_w, 12, cd_estabelecimento_w);
		dbms_sql.column_value(var_cur_w, 13, cd_tipo_baixa_neg_w);
		dbms_sql.column_value(var_cur_w, 14, nm_usuario_w);
		dbms_sql.column_value(var_cur_w, 15, vl_titulo_w);
		dbms_sql.column_value(var_cur_w, 16, dt_emissao_w);
		dbms_sql.column_value(var_cur_w, 17, nr_seq_proj_rec_w);
		dbms_sql.column_value(var_cur_w, 18, ie_tipo_titulo_w);
		dbms_sql.column_value(var_cur_w, 19, nr_seq_classe_w);
		dbms_sql.column_value(var_cur_w, 20, ie_origem_titulo_w);

		if (coalesce(cd_centro_custo_p::text, '') = '') then

			ie_centro_custo_w	:= 'S';

		else

			ie_centro_custo_w	:= 'N';

			select	count(*)
			into STRICT	qt_centro_custo_w
			from	titulo_pagar_classif a
			where	(a.cd_centro_custo IS NOT NULL AND a.cd_centro_custo::text <> '')
			and	a.nr_titulo		= nr_titulo_w;

			/* se o titulo nao tiver nenhum centro de custo, nao precisa verificar o resto */

			if (qt_centro_custo_w	> 0) then

				select	coalesce(max('S'),'N')
				into STRICT	ie_centro_custo_w
				from	titulo_pagar_classif a
				where	a.cd_centro_custo	= cd_centro_custo_p
				and	a.nr_titulo		= nr_titulo_w;

				if (ie_centro_custo_w	= 'N') then
				
					if (cd_classificacao_w IS NOT NULL AND cd_classificacao_w::text <> '') then

						select	coalesce(max('S'),'N')
						into STRICT	ie_centro_custo_w
						from	centro_custo b,
							titulo_pagar_classif a
						where	b.cd_classificacao	like cd_classificacao_w || '%'
						and	a.cd_centro_custo	= b.cd_centro_custo
						and	a.nr_titulo		= nr_titulo_w;

					end if;
				
					if (ie_centro_custo_w	= 'N') then

						select	coalesce(max('S'),'N')
						into STRICT	ie_centro_custo_w
						from	centro_custo_lib_titulo b,
							titulo_pagar_classif a
						where	b.cd_centro_custo	= cd_centro_custo_p
						and	a.cd_centro_custo	= b.cd_centro_custo_lib
						and	(a.cd_centro_custo IS NOT NULL AND a.cd_centro_custo::text <> '')
						and	a.nr_titulo		= nr_titulo_w;

						if (ie_centro_custo_w	= 'N') then

							select	coalesce(max('S'),'N')
							into STRICT	ie_centro_custo_w
							from	centro_custo d,
								centro_custo_lib_titulo c,
								centro_custo b,
								titulo_pagar_classif a
							where	b.cd_classificacao	like d.cd_classificacao || '%'
							and	c.cd_centro_custo	= cd_centro_custo_p
							and	d.cd_centro_custo	= c.cd_centro_custo_lib
							and	a.cd_centro_custo	= b.cd_centro_custo
							and	a.nr_titulo		= nr_titulo_w;

						end if;

					end if;

				end if;

			end if;

		end if;

		if (ie_centro_custo_w	= 'S') then

				select	count(*)
				into STRICT	qt_regra_w
				from	regra_lib_tit_pagar a;

				if (qt_regra_w	= 0) then

					ie_liberado_w	:= 'S';

				else

					if (coalesce(cd_pessoa_fisica_w,'0')	= '0') then

						ie_tipo_pessoa_w	:= 'J';
						select	max(a.cd_tipo_pessoa)
						into STRICT	cd_tipo_pessoa_w
						from	pessoa_juridica a
						where	a.cd_cgc	= cd_cgc_w;

					else

						ie_tipo_pessoa_w	:= 'F';
						cd_tipo_pessoa_w	:= null;

					end if;

				end if;
			
				ie_liberado_w	:= substr(obter_se_regra_lib_tit(	nr_titulo_w,
											nm_usuario_p,
											cd_perfil_p,
											cd_estabelecimento_w,
											ie_tipo_pessoa_w,
											coalesce(vl_titulo_w,0),
											cd_tipo_pessoa_w,
											nr_seq_nota_fiscal_w,
											coalesce(cd_cgc_w,'0'),
											coalesce(dt_emissao_w,clock_timestamp()),
											nr_seq_proj_rec_w,
											ie_tipo_titulo_w,
											nr_seq_classe_w,
											ie_origem_titulo_w,
											cd_operacao_nf_w,
											vl_total_nota_w,
											nr_ordem_compra_w),1,1);

		end if;

		if (ie_centro_custo_w	= 'S') and (coalesce(ie_liberado_w,'S')	= 'S') then

			select	max(a.cd_setor_atendimento),
				count(*) qt_usuario
			into STRICT	cd_setor_atendimento_w,
				qt_usuario_w
			from	usuario a
			where	a.nm_usuario	= nm_usuario_w;

			if (qt_usuario_w	= 0) then

				nm_usuario_upper_w	:= upper(nm_usuario_w);

				select	max(a.cd_setor_atendimento)
				into STRICT	cd_setor_atendimento_w
				from	usuario a
				where	upper(a.nm_usuario)	= nm_usuario_upper_w;

			end if;

			if (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then

				select	substr(obter_nome_pf(a.cd_pessoa_fisica),1,200)
				into STRICT	ds_beneficiario_w
				from	pessoa_fisica a
				where	a.cd_pessoa_fisica	= cd_pessoa_fisica_w;

			elsif (cd_cgc_w IS NOT NULL AND cd_cgc_w::text <> '') then

				select	max(a.ds_razao_social)
				into STRICT	ds_beneficiario_w
				from	pessoa_juridica a
				where	a.cd_cgc		= cd_cgc_w;

			else

				ds_beneficiario_w	:= null;

			end if;

			if (coalesce(nr_seq_nota_fiscal_w::text, '') = '') then

				ds_dados_aprov_w	:= null;
				nm_usuario_nf_w		:= null;
				nr_nf_w			:= null;

			else

				if (ie_coluna_aprov_p	= 'S') then

					ds_dados_aprov_w	:= substr(obter_dados_aprov_tit_pagar(nr_titulo_w),1,4000);

				else

					ds_dados_aprov_w	:= null;

				end if;

				if (coalesce(nr_nota_fiscal_p::text, '') = '') then

					select	max(a.nm_usuario),
						max(a.nr_nota_fiscal)
					into STRICT	nm_usuario_nf_w,
						nr_nf_w
					from	nota_fiscal a
					where	a.nr_sequencia	= nr_seq_nota_fiscal_w;

				else

					nm_usuario_nf_w	:= nm_usuario_nota_w;
					nr_nf_w		:= nr_nota_fiscal_w;

				end if;

			end if;

			if (coalesce(cd_estabelecimento_w::text, '') = '') then

				ds_estab_w		:= null;

			else

				select	coalesce(a.ie_razao_fantasia,'R'),
					b.ds_razao_social,
					b.nm_fantasia,
					a.nm_fantasia_estab
				into STRICT	ie_razao_fantasia_w,
					ds_razao_social_w,
					nm_fantasia_w,
					nm_fantasia_estab_w
				from	pessoa_juridica b,
					estabelecimento a
				where	a.cd_cgc		= b.cd_cgc
				and	a.cd_estabelecimento	= cd_estabelecimento_w;

				if (ie_razao_fantasia_w = 'R') then

					ds_estab_w	:= ds_razao_social_w;

				elsif (ie_razao_fantasia_w = 'F') then

					ds_estab_w	:= nm_fantasia_w;

				elsif (ie_razao_fantasia_w = 'E') then

					ds_estab_w	:= nm_fantasia_estab_w;

				else

					ds_estab_w	:= null;

				end if;

			end if;

			if (coalesce(cd_tipo_baixa_neg_w::text, '') = '') then

				ds_tipo_baixa_cpa_w	:= null;

			else

				select	max(a.ds_tipo_baixa)
				into STRICT	ds_tipo_baixa_cpa_w
				from	tipo_baixa_cpa a
				where	a.cd_tipo_baixa	= cd_tipo_baixa_neg_w;

			end if;

			qt_dias_vencto_real_w	:= trunc(dt_vencimento_atual_w) - trunc(dt_inclusao_w);

			insert	into w_titulo_pagar_liberacao(cd_setor_atendimento,
				ds_beneficiario,
				ds_dados_aprov,
				ds_estab,
				ds_tipo_baixa_cpa,
				dt_atualizacao,
				dt_atualizacao_nrec,
				nm_usuario,
				nm_usuario_nota,
				nm_usuario_nrec,
				nr_nota_fiscal,
				nr_titulo,
				qt_dias_vencto_real,
				cd_estabelecimento)
			values (cd_setor_atendimento_w,
				ds_beneficiario_w,
				ds_dados_aprov_w,
				ds_estab_w,
				ds_tipo_baixa_cpa_w,
				clock_timestamp(),
				clock_timestamp(),
				nm_usuario_p,
				nm_usuario_nf_w,
				nm_usuario_p,
				nr_nf_w,
				nr_titulo_w,
				qt_dias_vencto_real_w,
				cd_estabelecimento_p);

		end if;

	end	loop;
	dbms_sql.close_cursor(var_cur_w);

end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_w_titulo_pagar_liberacao ( cd_pessoa_fisica_p text, cd_cgc_p text, ie_filtrar_data_p bigint, dt_inicial_p timestamp, dt_final_p timestamp, nr_lote_contabil_p bigint, vl_inicial_p bigint, vl_final_p bigint, ie_tipo_titulo_p text, nr_titulo_p bigint, ie_liberacao_p bigint, cd_tipo_baixa_neg_p bigint, ie_situacao_p text, ie_origem_titulo_p text, nr_seq_classe_p bigint, ds_lista_classe_p text, ie_coluna_aprov_p text, cd_centro_custo_p bigint, ie_estab_adicional_p text, cd_estabelecimento_p bigint, cd_estab_filtro_p bigint, nr_nota_fiscal_p text, cd_setor_atendimento_p bigint, cd_perfil_p bigint, nm_usuario_p text, cd_conta_financeira_p bigint, cd_tributo_p bigint, cd_retencao_p text, ie_aprov_nivel_inferior_p text, ie_status_p text default null) FROM PUBLIC;

