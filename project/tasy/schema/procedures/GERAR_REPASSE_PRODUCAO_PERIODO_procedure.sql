-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_repasse_producao_periodo (nr_repasse_terceiro_p bigint, nm_usuario_p text) AS $body$
DECLARE


cd_medico_w		varchar(10);
nr_seq_terceiro_w	bigint;
nr_sequencia_w		bigint;
vl_repasse_regra_w	double precision;
hr_inicial_w		timestamp;
hr_final_w		timestamp;
ie_dia_semana_w		integer;
vl_repasse_w		double precision;
dt_procedimento_w	timestamp;
cd_estabelecimento_w	smallint;
dt_periodo_inicial_w	timestamp;
dt_periodo_final_w	timestamp;
dt_mesano_ref_w		timestamp;
dt_inicio_vigencia_w	timestamp;
dt_fim_vigencia_w	timestamp;
qt_regra_w		bigint;
nr_sequencia_item_w	bigint;
nr_seq_terc_rep_w	bigint;
vl_total_w		double precision;
dt_texto_w		varchar(255);

c01 CURSOR FOR
SELECT	a.cd_medico,
	a.nr_seq_terceiro,
	a.nr_sequencia,
	a.vl_repasse,
	a.dt_inicio_vigencia,
	a.dt_fim_vigencia
from	REGRA_REPASSE_PROD_PERIODO a
where	a.cd_estabelecimento	= cd_estabelecimento_w;

c02 CURSOR FOR
SELECT	a.dt_inicial,
	a.dt_final,
	a.ie_dia_semana
from	REGRA_REP_PROD_PERIODO_DIA a
where	a.nr_seq_regra	= nr_sequencia_w;

c03 CURSOR FOR
SELECT	coalesce(sum(a.vl_repasse),0),
	PKG_DATE_UTILS.start_of(b.dt_procedimento,'dd',0)
from	procedimento_paciente b,
	procedimento_repasse a
where	a.nr_seq_procedimento	= b.nr_sequencia
and	a.nr_repasse_terceiro	= nr_repasse_terceiro_p
and	coalesce(a.cd_medico,'X')		= coalesce(coalesce(cd_medico_w,a.cd_medico),'X')
and	coalesce(a.nr_seq_terceiro,0)	= coalesce(coalesce(nr_seq_terceiro_w,a.nr_seq_terceiro),0)
and	b.dt_procedimento	between dt_inicio_vigencia_w and fim_dia(coalesce(dt_fim_vigencia_w,b.dt_procedimento))
and (coalesce(ie_dia_semana_w::text, '') = '' or PKG_DATE_UTILS.get_WeekDay(b.dt_procedimento) = ie_dia_semana_w)
and	b.dt_procedimento	between PKG_DATE_UTILS.get_DateTime(b.dt_procedimento, coalesce(hr_inicial_w, PKG_DATE_UTILS.GET_TIME('00:00:00')))
						and PKG_DATE_UTILS.get_DateTime(b.dt_procedimento, coalesce(hr_final_w, PKG_DATE_UTILS.GET_TIME('00:00:00')))
group	by PKG_DATE_UTILS.start_of(b.dt_procedimento,'dd',0)
order by 2;


BEGIN

select	max(a.cd_estabelecimento),
	max(a.dt_periodo_inicial),
	max(a.dt_periodo_final),
	max(a.dt_mesano_referencia),
	max(a.nr_seq_terceiro)
into STRICT	cd_estabelecimento_w,
	dt_periodo_inicial_w,
	dt_periodo_final_w,
	dt_mesano_ref_w,
	nr_seq_terc_rep_w
from	repasse_terceiro a
where	a.nr_repasse_terceiro	= nr_repasse_terceiro_p;

select	count(*)
into STRICT	qt_regra_w
from	REGRA_REPASSE_PROD_PERIODO a
where	a.cd_estabelecimento	= cd_estabelecimento_w;

if (coalesce(qt_regra_w,0) > 0) then
	open c01;
	loop
	fetch c01 into
		cd_medico_w,
		nr_seq_terceiro_w,
		nr_sequencia_w,
		vl_repasse_regra_w,
		dt_inicio_vigencia_w,
		dt_fim_vigencia_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */

		open c02;
		loop
		fetch c02 into
			hr_inicial_w,
			hr_final_w,
			ie_dia_semana_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */

			open c03;
			loop
			fetch c03 into
				vl_repasse_w,
				dt_procedimento_w;
			EXIT WHEN NOT FOUND; /* apply on c03 */

				if (coalesce(vl_repasse_regra_w,0) > coalesce(vl_repasse_w,0)) then

					vl_total_w	:= coalesce(vl_repasse_regra_w,0) - coalesce(vl_repasse_w,0);

					select	coalesce(max(nr_sequencia_item),0) + 1
					into STRICT	nr_sequencia_item_w
					from	repasse_terceiro_item
					where	nr_repasse_terceiro	= nr_repasse_terceiro_p;
					--Item de repasse gerado a partir da Regra repasse per√≠odo! Hora inicial: #@HR_INICIAL_P#@ Hora final: #@HR_FINAL_P#@
					dt_texto_w := substr(wheb_mensagem_pck.get_texto(307555,'HR_INICIAL_P='||to_char(hr_inicial_w,'hh24:mi:ss')||';HR_FINAL_P='||to_char(hr_final_w,'hh24:mi:ss')),1,255);

					insert	into	repasse_terceiro_item(
								nr_sequencia,
								nr_sequencia_item,
								nm_usuario,
								dt_atualizacao,
								vl_repasse,
								cd_medico,
								nr_seq_terceiro,
								dt_lancamento,
								ds_observacao,
								nr_repasse_terceiro)
						values (	nextval('repasse_terceiro_item_seq'),
								nr_sequencia_item_w,
								nm_usuario_p,
								clock_timestamp(),
								coalesce(vl_total_w,0),
								cd_medico_w,
								nr_seq_terc_rep_w,
								dt_procedimento_w,
								dt_texto_w,
								nr_repasse_terceiro_p
								);

				end if;
			end loop;
			close c03;

		end loop;
		close c02;

	end loop;
	close c01;
end if;


end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_repasse_producao_periodo (nr_repasse_terceiro_p bigint, nm_usuario_p text) FROM PUBLIC;

