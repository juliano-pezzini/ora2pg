-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE get_ovs_claim ( nr_seq_account_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, ie_resubmission_p text default 'N', ie_validate_p text DEFAULT NULL, ie_imc_type text default 'N') AS $body$
DECLARE


cd_medico_convenio_w 		medico_convenio.cd_medico_convenio%type;
nr_sequencia_w			ovs_claim.nr_sequencia%type;
ie_claim_type_w			eclipse_parameters.ie_claim_type%type;
cd_facility_w 			eclipse_parameters.cd_facility%type;
cd_externo_w			convenio.cd_externo%type;
ie_accident_w 			ovs_claim.ie_accident%type;
ie_benefit_w            	ovs_claim.ie_benefit%TYPE := NULL;
ie_account_paid_w       	ovs_claim.ie_account_paid%TYPE := 'false';
nr_seq_transaction_w		ovs_claim.nr_seq_transaction%type;
ie_authorised_w 		varchar(10);
nr_seq_account_w 		bigint;
ie_validate_w   varchar(1);

c_claim CURSOR FOR
	SELECT	a.nr_seq_tipo_acidente,
            b.nr_interno_conta,
			a.nr_atendimento,
			c.nr_provider,
			e.nr_seq_person_name,
			d.nr_telefone,
			e.nm_pessoa_fisica,
			f.nr_seq_estagio,
			f.dt_retorno dt_retorno,
			obter_convenio_atendimento(a.nr_atendimento) as cd_convenio,
		(SELECT x.nr_provider from medical_provider_number x, PF_MEDICO_EXTERNO z where x.cd_medico = z.cd_medico and z.cd_pessoa_fisica = e.cd_pessoa_fisica) as billing_agent,
		(select CASE WHEN z.IE_BENEFIT_AUTH='S' THEN  'true'   ELSE 'false' END  from PF_MEDICO_EXTERNO z where z.cd_pessoa_fisica = e.cd_pessoa_fisica) as claim_auth_ind
		FROM pessoa_fisica e, compl_pessoa_fisica d, medical_provider_number c, atendimento_paciente a, conta_paciente b
LEFT OUTER JOIN autorizacao_convenio f ON (b.nr_atendimento = f.nr_atendimento)
WHERE a.nr_atendimento = b.nr_atendimento and c.cd_medico = a.CD_MEDICO_RESP and a.cd_pessoa_fisica = d.cd_pessoa_fisica and d.cd_pessoa_fisica = e.cd_pessoa_fisica  and b.nr_interno_conta = nr_seq_account_p   LIMIT 1;

	c_voucher CURSOR(nr_seq_claim_p bigint) FOR
		SELECT  nr_sequencia
		from    ovs_voucher
		where   nr_seq_claim = nr_seq_claim_p;
	
BEGIN

	CALL billing_i18n_pck.set_validate_eclipse(ie_validate_p);
	nr_seq_account_w := nr_seq_account_p;

	delete  FROM eclipse_inco_account
	where   nr_interno_conta = nr_seq_account_p;

	select  coalesce(max(nr_sequencia),0)
	into STRICT    nr_sequencia_w
	from    ovs_claim
	where   nr_seq_account = nr_seq_account_p;

	for r_voucher in c_voucher(nr_sequencia_w) loop
		delete	FROM ovs_service
		where	nr_seq_voucher = r_voucher.nr_sequencia;
	end loop;

	delete	FROM ovs_voucher
	where	nr_seq_claim = nr_sequencia_w;


ie_claim_type_w := ie_imc_type;
select   max(cd_facility)
into STRICT     cd_facility_w
from     eclipse_parameters;

--ie_claim_type_w := 'PC';
	
	IF (ie_claim_type_w = 'PC') THEN
        ie_account_paid_w := 'true';
	end if;

	for r_claim in c_claim loop
	if (r_claim.nr_seq_tipo_acidente IS NOT NULL AND r_claim.nr_seq_tipo_acidente::text <> '') then
		ie_accident_w := get_eclipse_conversion('NR_SEQ_TIPO_ACIDENTE', r_claim.nr_seq_tipo_acidente, 'OVS', null, nr_seq_account_p, ie_accident_w);
	end if;
	
	if (r_claim.dt_retorno IS NOT NULL AND r_claim.dt_retorno::text <> '') then
		ie_authorised_w :='True';
	end if;

	select  max(cd_medico_convenio)
        into STRICT 	cd_medico_convenio_w
        from    medico_convenio a
        where   a.cd_convenio = r_claim.cd_convenio;

        select 	cd_externo
        into STRICT 	cd_externo_w
        from	convenio
        where 	cd_convenio = r_claim.cd_convenio;


			ie_benefit_w := 'true';
        if (coalesce(r_claim.nr_seq_estagio::text, '') = '') then
            ie_benefit_w := 'false';
        end if;

        if (ie_resubmission_p = 'N') then
            nr_seq_transaction_w := generateRandomNumber();
        end if;

	if (nr_sequencia_w = 0 and ie_validate_p = 'N') then

		select	nextval('ovs_claim_seq')
		into STRICT 	nr_sequencia_w
		;

		insert into ovs_claim(
				nr_sequencia,
        cd_estabelecimento,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				ie_accident,
				ie_account_paid,
				NR_SEQ_ACCOUNT,
				nr_account,
				ie_benefit,
				cd_billing_agent,
				ie_authorised,
				ie_claim_type,
				cd_facility,
				cd_fund_brand,
				cd_fund_payee,
				cd_principal_provider,
				nr_phone,
				nm_contact,
				ie_status_tasy,
				nr_seq_transaction)
			values (
				nr_sequencia_w,
        wheb_usuario_pck.get_cd_estabelecimento,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				ie_accident_w,
				ie_account_paid_w,
				nr_seq_account_w ,
				nr_seq_account_w,
				ie_benefit_w,
				r_claim.billing_agent,
				r_claim.claim_auth_ind,
				ie_claim_type_w,
				cd_facility_w,
				cd_externo_w,
				cd_medico_convenio_w,
				r_claim.nr_provider,
				r_claim.nr_telefone,
				r_claim.nm_pessoa_fisica,
				null,
				nr_seq_transaction_w);
	else

		update 	ovs_claim
		set
			dt_atualizacao = clock_timestamp(),
			nm_usuario = nm_usuario_p,
			dt_atualizacao_nrec = clock_timestamp(),
			nm_usuario_nrec = nm_usuario_p,
			ie_accident = ie_accident_w,
			ie_account_paid = ie_account_paid_w,
			NR_SEQ_ACCOUNT = r_claim.nr_interno_conta,
			ie_benefit = ie_benefit_w,
			cd_billing_agent = r_claim.billing_agent,
			ie_authorised = r_claim.claim_auth_ind,
			ie_claim_type = ie_claim_type_w,
			cd_facility = cd_facility_w,
			cd_fund_brand = cd_externo_w,	
			cd_fund_payee = cd_medico_convenio_w,
			cd_principal_provider = r_claim.nr_provider,
			nr_phone = r_claim.nr_telefone,
			nm_contact = r_claim.nm_pessoa_fisica,
			nr_seq_transaction = nr_seq_transaction_w
		where nr_sequencia = nr_sequencia_w;
		end if;
		
	select CASE WHEN ie_validate_p='N' THEN  'F' WHEN ie_validate_p='Y' THEN  'Y' WHEN coalesce(ie_validate_p::text, '') = '' THEN  'F'  ELSE 'F' END
	into STRICT ie_validate_w
	;
		CALL get_ovs_voucher(nr_sequencia_w, nm_usuario_p, ie_validate_w,nr_seq_account_p, 'O');
	end loop;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE get_ovs_claim ( nr_seq_account_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, ie_resubmission_p text default 'N', ie_validate_p text DEFAULT NULL, ie_imc_type text default 'N') FROM PUBLIC;

