-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE envia_email_compra_agrupado ( ie_tipo_mensagem_p bigint, ie_manual_p text, cd_estabelecimento_p bigint, nm_usuario_p text default null) AS $body$
DECLARE

 
ds_destino_w			varchar(255);
nr_seq_envio_w			bigint;
ds_assunto_w			varchar(255);
ds_mensagem_w			varchar(4000);
ds_email_origem_w			varchar(255);
nm_usuario_origem_w		varchar(255);
ie_agrupa_email_dest_w		varchar(1);
ie_cancela_email_aprov_w		varchar(1);
qt_maximo_w			bigint;
ds_mensagem_agrupada_w		varchar(32000);
ds_mensagem_unica_w		varchar(32000);
ds_parte_mensagem_w		varchar(32000);
ds_mensagem_envio_w		varchar(32000);
qt_pendente_w			bigint;
ie_divide_mensagem_w		varchar(1);
nr_seq_aprovacao_w		bigint;
nr_seq_proc_aprov_w		bigint;
ie_aprov_reprov_w			varchar(1);
ie_enviar_mensagem_w		varchar(1);
ie_erro_w			varchar(1);

c01 CURSOR FOR 
SELECT	nr_sequencia, 
	ds_assunto, 
	ds_mensagem, 
	ds_email_origem, 
	nm_usuario_origem, 
	coalesce(nr_seq_aprovacao,0), 
	coalesce(nr_seq_proc_aprov,0) 
from	envio_email_compra_agrup a 
where	ie_tipo_mensagem = ie_tipo_mensagem_p 
and	coalesce(ie_cancelado,'N') = 'N' 
and	ie_agrupa_email_dest_w = 'N' 
and	exists (SELECT	1 
		from	email_compra_agrup_dest x 
		where	x.nr_seq_envio = a.nr_sequencia 
		and	coalesce(x.ie_enviado,'N') = 'N');

c02 CURSOR FOR 
SELECT	ds_destino 
from	email_compra_agrup_dest 
where	nr_seq_envio = nr_seq_envio_w 
and	coalesce(ie_enviado,'N') = 'N' 
group by	ds_destino;

c03 CURSOR FOR 
SELECT	distinct 
	b.ds_destino 
from	envio_email_compra_agrup a, 
	email_compra_agrup_dest b 
where	a.nr_sequencia = b.nr_seq_envio 
and	a.ie_tipo_mensagem = ie_tipo_mensagem_p 
and	a.cd_estabelecimento = cd_estabelecimento_p 
and	coalesce(a.ie_cancelado,'N') = 'N' 
and	ie_agrupa_email_dest_w = 'S' 
and	coalesce(b.ie_enviado,'N') = 'N' 
order by 1;

c04 CURSOR FOR 
SELECT	nr_sequencia, 
	ds_assunto, 
	ds_mensagem, 
	ds_email_origem, 
	nm_usuario_origem, 
	coalesce(nr_seq_aprovacao,0), 
	coalesce(nr_seq_proc_aprov,0) 
from	envio_email_compra_agrup a 
where	ie_tipo_mensagem = ie_tipo_mensagem_p 
and	coalesce(ie_cancelado,'N') = 'N' 
and	ie_agrupa_email_dest_w = 'S' 
and	exists (SELECT	1 
		from	email_compra_agrup_dest x 
		where	x.nr_seq_envio = a.nr_sequencia 
		and	coalesce(x.ie_enviado,'N') = 'N' 
		and	x.ds_destino = ds_destino_w);

c05 CURSOR FOR 
SELECT	nr_sequencia, 
	coalesce(nr_seq_aprovacao,0), 
	coalesce(nr_seq_proc_aprov,0) 
from	envio_email_compra_agrup a 
where	ie_tipo_mensagem = ie_tipo_mensagem_p 
and	coalesce(ie_cancelado,'N') = 'N' 
and	ie_agrupa_email_dest_w = 'S' 
and	exists (SELECT	1 
		from	email_compra_agrup_dest x 
		where	x.nr_seq_envio = a.nr_sequencia 
		and	coalesce(x.ie_enviado,'N') = 'N' 
		and	x.ds_destino = ds_destino_w);


BEGIN 
 
select	coalesce(max(qt_maximo_pendente),0) 
into STRICT	qt_maximo_w 
from	regra_envio_compra_agrup 
where	cd_estabelecimento = cd_estabelecimento_p 
and	ie_tipo_mensagem = ie_tipo_mensagem_p;
 
select	coalesce(max(ie_agrupa_email_dest),'N'), 
	coalesce(max(ie_cancela_email_aprov),'N') 
into STRICT	ie_agrupa_email_dest_w, 
	ie_cancela_email_aprov_w 
from	parametro_compras 
where	cd_estabelecimento = cd_estabelecimento_p;
 
open c01;
loop 
fetch c01 into 
	nr_seq_envio_w, 
	ds_assunto_w, 
	ds_mensagem_w, 
	ds_email_origem_w, 
	nm_usuario_origem_w, 
	nr_seq_aprovacao_w, 
	nr_seq_proc_aprov_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin 
 
	open c02;
	loop 
	fetch c02 into 
		ds_destino_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin 
 
		ie_erro_w	:= 'N';
 
		begin 
		ds_mensagem_w	:= replace(ds_mensagem_w,'%','');
		CALL enviar_email(ds_assunto_w,ds_mensagem_w,ds_email_origem_w,ds_destino_w,nm_usuario_p,'M');
		exception 
		when others then 
			ie_erro_w := 'S';
			/*gravar__log__tasy(17711,'Falha ao enviar da Gestão de Envio do Compras - Seq. Men.: ' || nr_seq_envio_w || ' Destino: ' || ds_destino_w,'TASY');*/
 
		end;
 
		if (ie_erro_w = 'N') and 
			((nr_seq_aprovacao_w = 0 AND nr_seq_proc_aprov_w = 0) or (ie_tipo_mensagem_p in (66)) or (ie_cancela_email_aprov_w = 'N')) then 
			begin 
 
			update	email_compra_agrup_dest 
			set	dt_envio = clock_timestamp(), 
				ie_enviado = 'S' 
			where	nr_seq_envio = nr_seq_envio_w 
			and	ds_destino = ds_destino_w;
 
			end;
		end if;
 
		end;
	end loop;
	close c02;
 
	end;
end loop;
close c01;
 
open C03;
loop 
fetch C03 into 
	ds_destino_w;
EXIT WHEN NOT FOUND; /* apply on C03 */
	begin 
 
	select	count(*) 
	into STRICT	qt_pendente_w 
	from	envio_email_compra_agrup a 
	where	cd_estabelecimento = cd_estabelecimento_p 
	and	ie_tipo_mensagem = ie_tipo_mensagem_p 
	and	coalesce(ie_cancelado,'N') = 'N' 
	and	exists (SELECT	1 
			from	email_compra_agrup_dest x 
			where	x.nr_seq_envio = a.nr_sequencia 
			and	coalesce(x.ie_enviado,'N') = 'N' 
			and	x.ds_destino = ds_destino_w);
 
 
 
	if	((qt_pendente_w >= qt_maximo_w) or (ie_manual_p = 'S')) then 
		begin 
 
		ds_mensagem_unica_w	:= '';
		ds_parte_mensagem_w	:= '';
		ie_divide_mensagem_w	:= 'N';
		ie_enviar_mensagem_w	:= 'N';
		ds_mensagem_agrupada_w	:= '';
		ds_mensagem_envio_w   := '';
 
		open c04;
		loop 
		fetch c04 into 
			nr_seq_envio_w, 
			ds_assunto_w, 
			ds_mensagem_w, 
			ds_email_origem_w, 
			nm_usuario_origem_w, 
			nr_seq_aprovacao_w, 
			nr_seq_proc_aprov_w;
		EXIT WHEN NOT FOUND; /* apply on c04 */
			begin 
 
			ie_enviar_mensagem_w	:= 'S';
 
			if (position('%' in ds_mensagem_w) > 0) and (ie_divide_mensagem_w = 'N') then 
				ie_divide_mensagem_w := 'S';
			end if;
 
			if (ie_divide_mensagem_w = 'S') then 
 
				/*Pega o pedaço que está entre % */
 
				ds_parte_mensagem_w	:= substr(substr(ds_mensagem_w,position('%' in ds_mensagem_w)+1,32000),1,position('%' in substr(ds_mensagem_w,position('%' in ds_mensagem_w)+1,32000))-1);
 
				/*Vai concatenando os pedaços das mensagens que estão entre %*/
 
				ds_mensagem_agrupada_w	:= ds_mensagem_agrupada_w || ds_parte_mensagem_w || chr(13) || chr(10) || chr(13) || chr(10);
 
				if (coalesce(ds_mensagem_unica_w::text, '') = '') then 
					/*Essa é a mensagem que está fora dos %*/
 
					ds_mensagem_unica_w	:= 	substr(replace(replace(ds_mensagem_w, ds_parte_mensagem_w, '#@#@'),'%',''),1,32000);
				end if;
			else 
				ds_mensagem_envio_w := ds_mensagem_envio_w || ds_mensagem_w || chr(13) || chr(10) || chr(13) || chr(10) || chr(13) || chr(10);
			end if;
 
			end;
		end loop;
		close c04;
 
		if (ie_enviar_mensagem_w = 'S') then 
			begin 
 
			if (ie_divide_mensagem_w = 'S') then 
				ds_mensagem_envio_w	:= substr(replace(ds_mensagem_unica_w,'#@#@',ds_mensagem_agrupada_w),1,32000);
			end if;
 
			ie_erro_w := 'N';
 
			begin 
			CALL enviar_email(ds_assunto_w, ds_mensagem_envio_w, ds_email_origem_w, ds_destino_w, nm_usuario_p, 'M');
			exception 
			when others then 
				/*rollback; Não pode ter rollback/commit pois é chamado em Trigger*/
 
				ie_erro_w := 'S';
				/*gravar__log__tasy(17711,'Falha ao enviar e-mail agrupado da Gestão de Envio do Compras - Destino: ' || ds_destino_w,'TASY');*/
 
			end;
 
			if (ie_erro_w = 'N') then 
				begin 
 
				open c05;
				loop 
				fetch c05 into 
					nr_seq_envio_w, 
					nr_seq_aprovacao_w, 
					nr_seq_proc_aprov_w;
				EXIT WHEN NOT FOUND; /* apply on c05 */
					begin 
 
					if	(nr_seq_aprovacao_w = 0 AND nr_seq_proc_aprov_w = 0) or (ie_tipo_mensagem_p in (66)) or (ie_cancela_email_aprov_w = 'N') then 
						begin 
 
						update	email_compra_agrup_dest 
						set	dt_envio = clock_timestamp(), 
							ie_enviado = 'S' 
						where	nr_seq_envio = nr_seq_envio_w 
						and	ds_destino = ds_destino_w;
 
						end;
					end if;
 
					end;
				end loop;
				close c05;
 
				end;
			end if; /*Fim IF erro*/
 
			end;
		end if; /*Fim IF ie_enviar_mensagem*/
 
		end;
	end if; /*Fim IF qt_pendente*/
 
	end;
end loop;
close C03;
 
/*Não pode ter rollback/commit pois é chamado em trigger*/
 
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE envia_email_compra_agrupado ( ie_tipo_mensagem_p bigint, ie_manual_p text, cd_estabelecimento_p bigint, nm_usuario_p text default null) FROM PUBLIC;

