-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE lic_desfazer_rodada ( nr_seq_licitacao_p bigint, nr_seq_lic_item_p bigint, nr_seq_lance_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
nr_seq_fornec_w			bigint;
nr_seq_lance_w			bigint;
vl_item_w				double precision;
nr_seq_lance_anterior_w		bigint;
nr_seq_lic_item_fornec_w		bigint;
ie_qualificado_w			varchar(1);
				
c01 CURSOR FOR 
SELECT	nr_seq_fornec 
from	reg_lic_fornec_lance 
where	nr_seq_licitacao	= nr_seq_licitacao_p 
and	nr_seq_lic_item	= nr_seq_lic_item_p 
and	nr_seq_lance	= nr_seq_lance_p;
				

BEGIN 
 
/*select para verificar o ultimo lance.*/
 
select	max(nr_seq_lance) 
into STRICT	nr_seq_lance_w 
from	reg_lic_fornec_lance 
where	nr_seq_licitacao	= nr_seq_licitacao_p 
and	nr_seq_lic_item	= nr_seq_lic_item_p;
 
if (nr_seq_lance_w <> nr_seq_lance_p) then 
	CALL wheb_mensagem_pck.exibir_mensagem_abort(266182,'NR_SEQ_LANCE=' || nr_seq_lance_p);
	--'Não é permitido desfazer a ' || nr_seq_lance_p || 'ª rodada porque existem rodadas posteriores a ela. ' || 
	--'Só é permitido desfazer a rodada se  ela for a última.'); 
end if;
 
open C01;
loop 
fetch C01 into	 
	nr_seq_fornec_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	 
	nr_seq_lance_anterior_w := nr_seq_lance_p - 1;
	 
	select	coalesce(max(nr_seq_lic_item_fornec),0) 
	into STRICT	nr_seq_lic_item_fornec_w 
	from	reg_lic_fornec_lance 
	where	nr_seq_lance		= nr_seq_lance_p 
	and	nr_seq_lic_item		= nr_seq_lic_item_p 
	and	nr_seq_licitacao		= nr_seq_licitacao_p 
	and	nr_seq_fornec		= nr_seq_fornec_w;
	 
	 
	select	coalesce(max(ie_qualificado),'S') 
	into STRICT	ie_qualificado_w 
	from	reg_lic_fornec_lance 
	where	nr_seq_lance		= nr_seq_lance_p 
	and	nr_seq_lic_item		= nr_seq_lic_item_p 
	and	nr_seq_licitacao		= nr_seq_licitacao_p 
	and	nr_seq_fornec		= nr_seq_fornec_w;
	 
	if (ie_qualificado_w = 'N') and (nr_seq_lic_item_fornec_w > 0) then 
		CALL lic_ativa_item_fornec(nr_seq_lic_item_fornec_w, nm_usuario_p);
	end if;
	 
	if (nr_seq_lance_anterior_w > 0) then 
		/*select para obter o menor preço do lance anterior para atualizar o preço final na tabela REG_LIC_ITEM_FORNEC*/
 
		select	coalesce(min(vl_item),0) 
		into STRICT	vl_item_w 
		from	reg_lic_fornec_lance 
		where	nr_seq_licitacao	= nr_seq_licitacao_p 
		and	nr_seq_lic_item	= nr_seq_lic_item_p 
		and	nr_seq_lance	= nr_seq_lance_anterior_w;
		 
		/*Para obter o preço que o fornecedor lançou na rodada anterior, que será utilizado para atualizar o preço final na tabela REG_LIC_ITEM_FORNEC*/
 
		select	coalesce(min(vl_item),0) 
		into STRICT	vl_item_w 
		from	reg_lic_fornec_lance 
		where	nr_seq_licitacao	= nr_seq_licitacao_p 
		and	nr_seq_lic_item	= nr_seq_lic_item_p 
		and	nr_seq_lance	= nr_seq_lance_anterior_w 
		and	nr_seq_fornec	= nr_seq_fornec_w;
		 
		/*Atualizar o preço final na tabela REG_LIC_ITEM_FORNEC*/
 
		update	reg_lic_item_fornec 
		set	vl_item		= vl_item_w 
		where	nr_seq_licitacao	= nr_seq_licitacao_p 
		and	nr_seq_lic_item	= nr_seq_lic_item_p 
		and	nr_seq_fornec	= nr_seq_fornec_w;
	else 
		/*select para obter o a proposta inicial quando não tem mais rodada anterior*/
 
		select	coalesce(min(vl_original),0) 
		into STRICT	vl_item_w 
		from	reg_lic_item_fornec 
		where	nr_seq_licitacao	= nr_seq_licitacao_p 
		and	nr_seq_lic_item	= nr_seq_lic_item_p;
		 
		/*Atualizar o preço final na tabela REG_LIC_ITEM_FORNEC*/
 
		update	reg_lic_item_fornec 
		set	vl_item		= 0 
		where	nr_seq_licitacao	= nr_seq_licitacao_p 
		and	nr_seq_lic_item	= nr_seq_lic_item_p 
		and	nr_seq_fornec	= nr_seq_fornec_w;
	end if;
	 
	CALL lic_calcular_licitacao(nr_seq_licitacao_p, 'N', nm_usuario_p);
	 
	/*Deleta todos os lances da rodada.*/
 
	delete from reg_lic_fornec_lance 
	where	nr_seq_fornec		= nr_seq_fornec_w 
	and	nr_seq_lic_item		= nr_seq_lic_item_p 
	and	nr_seq_lance		= nr_seq_lance_p;
	 
	if (nr_seq_lance_anterior_w > 0) then 
	 
		update	reg_lic_fornec_lance 
		set	dt_fechamento_rodada	= '', 
			nm_usuario_fechamento	= '' 
		where	nr_seq_licitacao		= nr_seq_licitacao_p 
		and	nr_seq_lic_item		= nr_seq_lic_item_p 
		and	nr_seq_lance		= nr_seq_lance_anterior_w;
	end if;			
	end;
end loop;
close C01;
 
insert into reg_lic_historico( 
	nr_sequencia, 
	dt_atualizacao, 
	nm_usuario, 
	ie_tipo_historico, 
	ds_observacao, 
	nr_seq_licitacao) 
values(	nextval('reg_lic_historico_seq'), 
	clock_timestamp(), 
	nm_usuario_p, 
	'DR', 
	WHEB_MENSAGEM_PCK.get_texto(312583, 'NR_SEQ_LANCE_P=' || nr_seq_lance_p || ';NR_SEQ_LIC_ITEM_P=' || nr_seq_lic_item_p), --'A rodada ' || nr_seq_lance_p || ' do item ' || nr_seq_lic_item_p || ' foi desfeita (através da opção Desfazer rodada).' 
	nr_seq_licitacao_p);
 
CALL lic_calcular_licitacao(	nr_seq_licitacao_p, 'N', nm_usuario_p);
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE lic_desfazer_rodada ( nr_seq_licitacao_p bigint, nr_seq_lic_item_p bigint, nr_seq_lance_p bigint, nm_usuario_p text) FROM PUBLIC;

