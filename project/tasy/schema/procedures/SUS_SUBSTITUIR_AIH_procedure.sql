-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE sus_substituir_aih (nr_interno_conta_p bigint, nr_aih_nova_p bigint, nm_usuario_p text, ie_consiste_aih_p text) AS $body$
DECLARE

 
nr_aih_antiga_w		bigint;
nr_seq_aih_antiga_w	bigint;
nr_aih_nova_w		bigint;
nr_seq_aih_nova_w	bigint;
nr_atendimento_w		bigint;
nr_interno_conta_w	bigint;
ie_digito_aih_w		varchar(1);
qt_registro_w		bigint;
qt_registro_total_w	bigint;
ds_erro_w		varchar(255);
qt_reg_controle_w	bigint	:= 0;

 

BEGIN 
 
nr_aih_nova_w	:= nr_aih_nova_p;
 
/* consiste digito nova AIH */
 
select 	consistir_digito('AIH',to_char(nr_aih_nova_p)) 
into STRICT	ie_digito_aih_w
;
if (ie_consiste_aih_p	= 'S') and (ie_digito_aih_w	= 'N') then 
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(277615);
end if;
 
/* busca dados da AIH antiga */
 
select	coalesce(max(nr_aih),null), 
	coalesce(max(nr_sequencia),null) 
into STRICT	nr_aih_antiga_w, 
	nr_seq_aih_antiga_w 
from 	sus_aih 
where 	nr_interno_conta = nr_interno_conta_p;
if (coalesce(nr_aih_antiga_w::text, '') = '') then 
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(277616);
end if;
 
 
/* Avaliar se pode substituir esta AIH */
 
qt_registro_total_w	:= 0;
select	count(*) 
into STRICT	qt_registro_w 
from	sus_aih_rejeitada 
where	nr_aih	= nr_aih_antiga_w;
qt_registro_total_w	:= qt_registro_total_w + qt_registro_w;
 
select	count(*) 
into STRICT	qt_registro_w 
from	sus_aih_historico 
where	nr_aih		= nr_aih_antiga_w 
and	nr_seq_aih	= nr_seq_aih_antiga_w;
qt_registro_total_w	:= qt_registro_total_w + qt_registro_w;
 
select	count(*) 
into STRICT	qt_registro_w 
from	sus_aih_paga 
where	nr_aih	= nr_aih_antiga_w;
qt_registro_total_w	:= qt_registro_total_w + qt_registro_w;
 
select	count(*) 
into STRICT	qt_registro_w 
from	sus_aih_opm_paga 
where	nr_aih	= nr_aih_antiga_w;
qt_registro_total_w	:= qt_registro_total_w + qt_registro_w;
 
if (qt_registro_total_w	> 0) then 
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(277617);
end if;
 
/* Verificar se já foi feito o retorno dessa AIH */
 
select	count(*) 
into STRICT	qt_reg_controle_w 
from	sus_aih_controle_proc 
where	nr_aih		= nr_aih_antiga_w 
and	(nr_processo IS NOT NULL AND nr_processo::text <> '');
if (qt_reg_controle_w	> 0) then 
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(277618);
end if;
 
 
/* Verificar se nova AIH já existe, senão criar a mesma */
 
select	coalesce(max(nr_sequencia),null), 
	coalesce(max(nr_interno_conta),null) 
into STRICT	nr_seq_aih_nova_w, 
	nr_interno_conta_w 
from	sus_aih 
where	nr_aih	= nr_aih_nova_p;
 
if (nr_interno_conta_w IS NOT NULL AND nr_interno_conta_w::text <> '')		and (nr_interno_conta_w <> nr_interno_conta_p)	then 
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(277619);
end if;
 
 
/* Criar nova aih */
	 
if (coalesce(nr_seq_aih_nova_w::text, '') = '') then 
	begin 
	nr_seq_aih_nova_w	:= 0;
	insert into sus_aih( 
			NR_AIH,NR_ATENDIMENTO,DT_EMISSAO,CD_ORGAO_EMISSOR,IE_IDENTIFICACAO,CD_MEDICO_RESPONSAVEL, 
			CD_PROCEDIMENTO_SOLIC,IE_ORIGEM_PROCED,DT_ATUALIZACAO,NM_USUARIO,NR_PROTOCOLO,VL_TOTAL_AIH, 
			CD_MOTIVO_COBRANCA,IE_ESPECIALIDADE_AIH,QT_DIA_UTI_MES_INI,QT_DIA_UTI_MES_ANT,QT_DIA_UTI_MES_ALTA, 
			QT_NASCIDOS_VIVOS,QT_NASCIDOS_MORTOS,NR_ANTERIOR_AIH,CD_CID_NOTIFICACAO,IE_GESTACAO_RISCO, 
			IE_INFECCAO_HOSPITALAR,QT_DIA_ACOMPANHANTE,DT_AUTORIZACAO_ACOMP,QT_NASC_SAI_ALTA, 
			QT_NASC_SAI_TRANS,QT_NASC_SAI_OBITO,VL_PONTO_SP,CD_MEDICO_GESTOR,DT_AUTORIZACAO_GESTOR, 
			IE_AUTORIZACAO_GESTOR,QT_PERMANENCIA_SUS,QT_PERMANENCIA_REAL,QT_LONGA_PERMANENCIA, 
			NR_GESTANTE_PRE_NATAL,NR_PROXIMA_AIH,QT_FILHO,IE_GRAU_INSTRUCAO,IE_CONTRACEPTIVO_UM, 
			IE_CONTRACEPTIVO_DOIS,IE_MOTIVO_ALTA_UTI_NEO,QT_PESO_GRAMA,QT_MES_GESTACAO,NR_INTERNO_CONTA, 
			CD_MOTIVO_ALTA,NR_CAT,DT_INICIAL,DT_FINAL,IE_CLINICA,IE_CARATER_INTER_SUS,CD_CID_PRINCIPAL, 
			CD_CID_SECUNDARIO,NR_SEQUENCIA,NR_SEQ_FAEC,QT_PONTO_SP,VL_TOT_SP,CD_CID_CAUSAS_ASSOC,CD_CID_CAUSA_MORTE) 
	SELECT 
			nr_aih_nova_w,b.NR_ATENDIMENTO,b.DT_EMISSAO,b.CD_ORGAO_EMISSOR,b.IE_IDENTIFICACAO,b.CD_MEDICO_RESPONSAVEL, 
			b.CD_PROCEDIMENTO_SOLIC,b.IE_ORIGEM_PROCED,clock_timestamp(),nm_usuario_p,b.NR_PROTOCOLO,b.VL_TOTAL_AIH, 
			b.CD_MOTIVO_COBRANCA,b.IE_ESPECIALIDADE_AIH,b.QT_DIA_UTI_MES_INI,b.QT_DIA_UTI_MES_ANT,b.QT_DIA_UTI_MES_ALTA, 
			b.QT_NASCIDOS_VIVOS,b.QT_NASCIDOS_MORTOS,CASE WHEN b.NR_ANTERIOR_AIH='' THEN ''  ELSE nr_aih_nova_w END ,b.CD_CID_NOTIFICACAO,b.IE_GESTACAO_RISCO, 
			b.IE_INFECCAO_HOSPITALAR,b.QT_DIA_ACOMPANHANTE,b.DT_AUTORIZACAO_ACOMP,b.QT_NASC_SAI_ALTA, 
			b.QT_NASC_SAI_TRANS,b.QT_NASC_SAI_OBITO,b.VL_PONTO_SP,b.CD_MEDICO_GESTOR,b.DT_AUTORIZACAO_GESTOR, 
			b.IE_AUTORIZACAO_GESTOR,b.QT_PERMANENCIA_SUS,b.QT_PERMANENCIA_REAL,b.QT_LONGA_PERMANENCIA, 
			b.NR_GESTANTE_PRE_NATAL,b.NR_PROXIMA_AIH,b.QT_FILHO,b.IE_GRAU_INSTRUCAO,b.IE_CONTRACEPTIVO_UM, 
			b.IE_CONTRACEPTIVO_DOIS,b.IE_MOTIVO_ALTA_UTI_NEO,b.QT_PESO_GRAMA,b.QT_MES_GESTACAO,b.NR_INTERNO_CONTA, 
			b.CD_MOTIVO_ALTA,b.NR_CAT,b.DT_INICIAL,b.DT_FINAL,b.IE_CLINICA,b.IE_CARATER_INTER_SUS,b.CD_CID_PRINCIPAL, 
			b.CD_CID_SECUNDARIO,B.NR_SEQUENCIA,b.NR_SEQ_FAEC,b.QT_PONTO_SP,b.VL_TOT_SP,b.CD_CID_CAUSAS_ASSOC,b.CD_CID_CAUSA_MORTE 
	from		sus_aih b 
	where		b.nr_aih		= nr_aih_antiga_w;
--	and		b.nr_sequencia	= nr_seq_aih_antiga_w; 
	exception 
		when others then 
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(277622);
	end;
end if;
 
/* Atualizar tabelas dependentes */
 
begin 
update	sus_laudo_paciente 
set	nr_aih		= nr_aih_nova_w, 
	nr_seq_aih	= nr_seq_aih_nova_w 
where	nr_aih		= nr_aih_antiga_w;
exception 
	when no_data_found then 
		nr_aih_antiga_w	:= nr_aih_antiga_w;
	when others then 
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(277623);
end;	
 
begin 
update	sus_aih_reg_civil 
set	nr_aih		= nr_aih_nova_w, 
	nr_seq_aih	= nr_seq_aih_nova_w 
where	nr_aih		= nr_aih_antiga_w;
exception 
	when no_data_found then 
		nr_aih_antiga_w	:= nr_aih_antiga_w;
	when others then 
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(277625);
end;	
 
begin 
update	procedimento_paciente 
set	nr_aih		= nr_aih_nova_w, 
	nr_seq_aih	= nr_seq_aih_nova_w 
where	nr_aih		= nr_aih_antiga_w;
exception 
	when no_data_found then 
		nr_aih_antiga_w	:= nr_aih_antiga_w;
	when others then 
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(277627);
end;	
 
begin 
update	material_atend_paciente 
set	nr_aih		= nr_aih_nova_w, 
	nr_seq_aih	= nr_seq_aih_nova_w 
where	nr_aih		= nr_aih_antiga_w;
exception 
	when no_data_found then 
		nr_aih_antiga_w	:= nr_aih_antiga_w;
	when others then 
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(277628);
end;	
 
begin 
update	sus_leito_movto 
set	nr_aih		= nr_aih_nova_w, 
	nr_seq_aih	= nr_seq_aih_nova_w 
where	nr_aih		= nr_aih_antiga_w;
exception 
	when no_data_found then 
		nr_aih_antiga_w	:= nr_aih_antiga_w;
	when others then 
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(277632);
end;
 
begin 
update	sus_aih_controle_proc 
set	nr_aih		= nr_aih_nova_w, 
	nr_seq_aih	= nr_seq_aih_nova_w 
where	nr_aih		= nr_aih_antiga_w 
and	nr_seq_aih	= nr_seq_aih_antiga_w 
and	coalesce(nr_processo::text, '') = '';	
exception 
	when no_data_found then 
		nr_aih_antiga_w	:= nr_aih_antiga_w;
	when others then 
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(277634);
end;
 
 
/* Excluir AIH antiga */
 
begin 
delete	from sus_aih 
where	nr_aih		= nr_aih_antiga_w;
exception 
	when others then 
		ds_erro_w	:= SQLERRM(SQLSTATE);
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(277635, 'DS_ERRO_P=' || ds_erro_w);		
end;	
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE sus_substituir_aih (nr_interno_conta_p bigint, nr_aih_nova_p bigint, nm_usuario_p text, ie_consiste_aih_p text) FROM PUBLIC;

