-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consultar_eleg_mod_remun (nr_seq_dados_clinicos_p DADOS_CLINICOS_MOD_REMUN.nr_sequencia%type default null) AS $body$
DECLARE


c_sucesso constant  varchar(15) := 'sucesso';
SUBTYPE one_char IS varchar(1);
SUBTYPE sixteen_char IS varchar(16);
SUBTYPE eighteen_char IS varchar(18);
data_w                  text;
c_nr_integration_code   CONSTANT integer := 1172;
char_s_c                CONSTANT one_char := 'S';
codigoprestador_c       CONSTANT eighteen_char := '"codigoPrestador":';
codigocliente_c         CONSTANT sixteen_char := '"codigoCliente":';
one_number_c            CONSTANT integer := 1;
json_open_brace_c       CONSTANT one_char := '{';
json_closed_brace_c     CONSTANT one_char := '}';
json_comma_c            CONSTANT one_char := ',';
quotation_mark_c        CONSTANT one_char := '"';

NR_SEQ_DADO_CLINICO_W	DADOS_CLINICOS_MOD_REMUN.NR_SEQUENCIA%TYPE;

C_PEND CURSOR FOR
	SELECT	A.NR_SEQUENCIA,
		A.NR_CARTEIRA nr_carteira,
		A.CD_PRESTADOR cd_prestador,
		R.NR_ATENDIMENTO
	FROM dados_clinicos_mod_retorno a, dados_clinicos_mod_remun m
LEFT OUTER JOIN can_loco_regional r ON (M.NR_SEQ_LOCO_REGIONAL = R.NR_SEQUENCIA)
WHERE M.NR_SEQUENCIA = A.NR_SEQ_DADOS_CLINICOS and (NR_SEQ_DADO_CLINICO_W = 0 OR
		M.NR_SEQUENCIA = NR_SEQ_DADO_CLINICO_W)  and coalesce(A.IE_SITUACAO_ELEG::text, '') = '' and (a.nr_carteira IS NOT NULL AND a.nr_carteira::text <> '') and (a.cd_prestador IS NOT NULL AND a.cd_prestador::text <> '') and r.IE_SITUACAO = 'A' AND position(C_SUCESSO in A.DS_STATUS) > 0 AND NOT EXISTS (	SELECT	1
				FROM	DADOS_CLIN_MOD_RET_CLASSIF X
				where	x.NR_SEQ_DADOS_RETORNO = A.nr_sequencia);


C_PEND_W	C_PEND%ROWTYPE;

/*

PROCEDURE PARA LER TODOS OS REGISTROS GERADOS PELO POST NA FUNCAO PEPA, QUE AINDA
NAO POSSUEM STATUS DE ELEGIBILIDADE PARA ENTAO FAZER O (GET TIE).


AINDA FALTA FAZER O PR DESTA PROCEDURE.

*/
BEGIN
NR_SEQ_DADO_CLINICO_W := 	COALESCE(nr_seq_dados_clinicos_p,0);

open C_PEND;
loop
fetch C_PEND into
	C_PEND_W;
EXIT WHEN NOT FOUND; /* apply on C_PEND */
	BEGIN
	
	
	IF 	(C_PEND_W.nr_carteira IS NOT NULL AND C_PEND_W.nr_carteira::text <> '') and
		(C_PEND_W.cd_prestador IS NOT NULL AND C_PEND_W.cd_prestador::text <> '') THEN
	
	
		data_w := json_open_brace_c;
		data_w := data_w
			  || codigoprestador_c
			  || quotation_mark_c
			  || C_PEND_W.cd_prestador
			  || quotation_mark_c
			  || json_comma_c;

		data_w := data_w
			  || codigocliente_c
			  || quotation_mark_c
			  || C_PEND_W.nr_carteira
			  || quotation_mark_c;

		data_w := data_w || json_closed_brace_c;
		CALL execute_bifrost_integration(c_nr_integration_code, data_w);
	END IF;


	EXCEPTION
	WHEN 	no_data_found THEN
		NULL;
	END;
end loop;
close C_PEND;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consultar_eleg_mod_remun (nr_seq_dados_clinicos_p DADOS_CLINICOS_MOD_REMUN.nr_sequencia%type default null) FROM PUBLIC;

