-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE fis_gerar_reg_f700_efd ( nr_seq_controle_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, dt_inicio_p timestamp, dt_fim_p timestamp, cd_empresa_p bigint, ds_separador_p text, qt_linha_p INOUT bigint, nr_sequencia_p INOUT bigint) AS $body$
DECLARE

 
aliquota_pis_w			varchar(255);
aliquota_cofins_w		varchar(255);
cd_tributo_pis_w		smallint;
cd_tributo_cofins_w		smallint;					
cd_cgc_w			varchar(14);
nr_seq_regra_efd_w		bigint;
nr_versao_efd_w			varchar(5);
tp_registro_w			varchar(4);
cd_municipio_ibge_w		varchar(7);
nr_linha_w			bigint 	:= qt_linha_p;
nr_seq_registro_w		bigint 	:= nr_sequencia_p;
ds_arquivo_w			varchar(4000);
ds_arquivo_compl_w		varchar(4000);
ds_linha_w			varchar(8000);
sep_w				varchar(1)	:= ds_separador_p;
ie_local_gerar_sped_w		varchar(1);
nr_seq_data_w			bigint;
qt_registros_w			bigint;
cd_empresa_w			smallint;

c01 CURSOR FOR 
	SELECT	y.dt_movimento	dt_retencao, 
			y.ie_origem_deducao_div, 
			y.ie_natureza_deducao, 
			round((sum(y.vl_base_calculo))::numeric,2) vl_base_calculo 
	from (	SELECT	round((CASE WHEN coalesce(c.ie_tipo_valor,'VM')='VM' THEN a.vl_movimento WHEN coalesce(c.ie_tipo_valor,'VM')='VC' THEN a.vl_credito WHEN coalesce(c.ie_tipo_valor,'VM')='VD' THEN  a.vl_debito END )::numeric,2)	vl_base_calculo, 
						0				vl_cofins, 
						dt_inicio_p	dt_movimento, 
						c.ie_origem_deducao_div, 
						c.ie_natureza_deducao 
			from 	ctb_balancete_v a, 
					fis_efd_conta_contabil c, 
					fis_efd_regra_tipo_ct r 
			where	a.cd_conta_contabil = c.cd_conta_contabil 
			and		r.nr_sequencia = c.nr_seq_tipo_ct 
			and		a.nr_seq_mes_ref = nr_seq_data_w 
			and		r.ie_tipo_ct = 'DD' 
			and		a.cd_estabelecimento = coalesce(c.cd_estabelecimento, cd_estabelecimento_p) 
			and		obter_empresa_estab(a.cd_estabelecimento) = coalesce(c.cd_empresa, cd_empresa_p) 
			and		a.ie_normal_encerramento = 'N') y 
	group by y.dt_movimento, 
		 	 y.ie_origem_deducao_div, 
		 	 y.ie_natureza_deducao;
	
c02 CURSOR FOR 
	SELECT	r.cd_cgc cd_cgc, 
		sum(vl_glosa) vl_glosa 
	from	titulo_receber r, 
		titulo_receber_liq l 
	where	r.nr_titulo = l.nr_titulo 
	and	dt_recebimento between dt_inicio_p and dt_fim_p 
	having	sum(vl_glosa) > 0 
	group by r.cd_cgc;
	
vet01	C01%RowType;
vet02	C02%RowType;


BEGIN 
 
select	a.cd_cgc 
into STRICT	cd_cgc_w 
from	estabelecimento a 
where	a.cd_estabelecimento = cd_estabelecimento_p;
 
select	cd_empresa 
into STRICT	cd_empresa_w 
from	estabelecimento 
where	cd_estabelecimento = cd_estabelecimento_p;
 
select	nr_seq_regra_efd 
into STRICT	nr_seq_regra_efd_w 
from	fis_efd_controle 
where	nr_sequencia = nr_seq_controle_p;
 
select 	cd_tributo_pis, 
	cd_tributo_cofins 
into STRICT	cd_tributo_pis_w, 
	cd_tributo_cofins_w 
from	fis_regra_efd 
where	nr_sequencia = nr_seq_regra_efd_w;
 
select	count(*) 
into STRICT	qt_registros_w 
from	ctb_mes_ref 
where	trunc(dt_referencia,'mm') = trunc(dt_inicio_p,'mm') 
and		cd_empresa = cd_empresa_w;
 
if (qt_registros_w = 1) then 
 
	select	nr_sequencia 
	into STRICT	nr_seq_data_w 
	from 	ctb_mes_ref 
	where 	trunc(dt_referencia,'mm') = trunc(dt_inicio_p,'mm') 
	and	cd_empresa = cd_empresa_w;
	 
end if;
 
aliquota_pis_w := obter_pr_imposto(cd_tributo_pis_w);
aliquota_cofins_w := obter_pr_imposto(cd_tributo_cofins_w);
 
ie_local_gerar_sped_w := obter_param_usuario(5500, 25, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_local_gerar_sped_w);
 
if (ie_local_gerar_sped_w = 'N') then 
 
	open C01;
	loop 
	fetch C01 into	 
		vet01;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin 
		 
		if (vet01.vl_base_calculo IS NOT NULL AND vet01.vl_base_calculo::text <> '') then 
		 
			ds_linha_w	:= substr(	sep_w || 'F700'								|| 	--texto fixo 
							sep_w || vet01.ie_origem_deducao_div				|| 	-- indicador de deduções diversas 
							sep_w ||vet01.ie_natureza_deducao					|| 	-- indicador dedução 
							sep_w || replace(campo_mascara((vet01.vl_base_calculo*aliquota_pis_w/100),2),'.',',')		|| 	-- valor a deduzir PIS 
							sep_w || replace(campo_mascara((vet01.vl_base_calculo*aliquota_cofins_w/100),2),'.',',')		|| 	-- valor a deduzir COFINS 
							sep_w || replace(campo_mascara(vet01.vl_base_calculo,2),'.',',')		|| 	-- valor a deduzir COFINS 
							sep_w || cd_cgc_w							|| 	-- cgc 
							sep_w || ''								|| sep_w,1,8000); 	-- informações complementares 
			
			ds_arquivo_w		:= substr(ds_linha_w,1,4000);
			ds_arquivo_compl_w	:= substr(ds_linha_w,4001,4000);
			nr_seq_registro_w	:= nr_seq_registro_w + 1;
			nr_linha_w		:= nr_linha_w + 1;
 
			insert into fis_efd_arquivo( 
				nr_sequencia, 
				nm_usuario, 
				dt_atualizacao, 
				nm_usuario_nrec, 
				dt_atualizacao_nrec, 
				nr_seq_controle_efd, 
				nr_linha, 
				cd_registro, 
				ds_arquivo, 
				ds_arquivo_compl) 
			values (	nr_seq_registro_w, 
				nm_usuario_p, 
				clock_timestamp(), 
				nm_usuario_p, 
				clock_timestamp(), 
				nr_seq_controle_p, 
				nr_linha_w, 
				'F700', 
				ds_arquivo_w, 
				ds_arquivo_compl_w);
		end if;
		end;
	end loop;
	close C01;
 
elsif (ie_local_gerar_sped_w = 'C') then 
	 
	open C02;
	loop 
	fetch C02 into	 
		vet02;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin 
 
		ds_linha_w	:= substr(	sep_w || 'F700'											|| 	--texto fixo 
						sep_w || 99											|| 	-- indicador de deduções diversas 
						sep_w || 1											|| 	-- indicador dedução 
						sep_w || replace(campo_mascara(abs((vet02.vl_glosa * aliquota_pis_w) / 100),2),'.',',')		|| 	-- valor a deduzir PIS 
						sep_w || replace(campo_mascara(abs((vet02.vl_glosa * aliquota_cofins_w) / 100),2),'.',',')		|| 	-- valor a deduzir COFINS 
						sep_w || replace(campo_mascara(abs(vet02.vl_glosa),2),'.',',')					|| 	-- valor a deduzir COFINS 
						sep_w || vet02.cd_cgc										|| 	-- cgc 
						sep_w || ''	|| sep_w,1,8000); 	-- informações complementares 
		
		ds_arquivo_w		:= substr(ds_linha_w,1,4000);
		ds_arquivo_compl_w	:= substr(ds_linha_w,4001,4000);
		nr_seq_registro_w	:= nr_seq_registro_w + 1;
		nr_linha_w		:= nr_linha_w + 1;
 
		insert into fis_efd_arquivo( 
			nr_sequencia, 
			nm_usuario, 
			dt_atualizacao, 
			nm_usuario_nrec, 
			dt_atualizacao_nrec, 
			nr_seq_controle_efd, 
			nr_linha, 
			cd_registro, 
			ds_arquivo, 
			ds_arquivo_compl) 
		values (	nr_seq_registro_w, 
			nm_usuario_p, 
			clock_timestamp(), 
			nm_usuario_p, 
			clock_timestamp(), 
			nr_seq_controle_p, 
			nr_linha_w, 
			'F700', 
			ds_arquivo_w, 
			ds_arquivo_compl_w);
		end;
	end loop;
	close C02;
 
elsif (ie_local_gerar_sped_w = 'P') then 
	SELECT * FROM fis_pre_fat_F700_efd(nr_seq_controle_p, nm_usuario_p, cd_estabelecimento_p, dt_inicio_p, dt_fim_p, cd_empresa_p, ds_separador_p, nr_linha_w, nr_seq_registro_w) INTO STRICT nr_linha_w, nr_seq_registro_w;
end if;
	 
commit;
 
qt_linha_p	:= nr_linha_w;
nr_sequencia_p	:= nr_seq_registro_w;	
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE fis_gerar_reg_f700_efd ( nr_seq_controle_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, dt_inicio_p timestamp, dt_fim_p timestamp, cd_empresa_p bigint, ds_separador_p text, qt_linha_p INOUT bigint, nr_sequencia_p INOUT bigint) FROM PUBLIC;

