-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_obter_vidas_canal_inferior ( nr_seq_lote_p bigint, nr_seq_canal_venda_p bigint, nr_seq_comissao_p bigint, qt_vidas_p INOUT bigint, dt_referencia_p timestamp, nr_seq_equipe_p bigint, ie_tipo_contrato_p text, nr_seq_sca_vidas_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE

				 
/* Campos do cursor C01 */
 
nr_seq_inferior_w		bigint;

qt_vidas_w			bigint;
dt_ref_comissao_w		timestamp;
qt_vidas_canal_w		bigint;
nr_seq_regra_mens_w		bigint;
qt_vidas_sca_w			bigint;
benef_vigente_w			bigint;
retorno_w			varchar(255);
ie_dt_ref_comissao_equipe_w	pls_parametros.ie_dt_ref_comissao_equipe%type;

C01 CURSOR FOR 
	SELECT	nr_seq_vendedor 
	from	pls_equipe_vend_vinculo 
	where	nr_seq_canal_superior = nr_seq_canal_venda_p 
	and	nr_seq_equipe = nr_seq_equipe_p;
	

BEGIN 
 
begin 
select	coalesce(ie_dt_ref_comissao_equipe,'L') 
into STRICT	ie_dt_ref_comissao_equipe_w 
from	pls_parametros 
where	cd_estabelecimento = cd_estabelecimento_p;
exception 
when others then 
	ie_dt_ref_comissao_equipe_w	:= 'L';
end;
 
open C01;
loop 
fetch C01 into	 
	nr_seq_inferior_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	 
	select	count(*) 
	into STRICT	benef_vigente_w 
	from	pls_equipe_vend_vinculo		b, 
		pls_equipe_vendedor		a 
	where	a.nr_sequencia = b.nr_seq_equipe 
	and	b.nr_seq_vendedor = nr_seq_inferior_w 
	and	dt_referencia_p between coalesce(dt_inicio_vigencia,dt_referencia_p) and coalesce(dt_fim_vigencia,dt_referencia_p);
	 
	if (benef_vigente_w > 0) then 
		if (coalesce(nr_seq_sca_vidas_p,0) = 0) then 
			select	count(*) /* Quantidade de vidas */
 
			into STRICT	qt_vidas_canal_w 
			from	pls_mensalidade			a, 
				pls_mensalidade_segurado	b, 
				pls_segurado			c, 
				pls_plano			d, 
				pls_contrato			e, 
				titulo_receber			f 
			where	a.nr_sequencia		= b.nr_seq_mensalidade 
			and	c.nr_sequencia		= b.nr_seq_segurado 
			and	d.nr_sequencia		= c.nr_seq_plano 
			and	c.nr_seq_contrato	= e.nr_sequencia 
			and	f.nr_seq_mensalidade	= a.nr_sequencia 
			and	coalesce(a.ie_cancelamento::text, '') = '' 
			and	f.ie_situacao	= '2' /* O título precisa estar liquidado */
			 
			and	(((ie_dt_ref_comissao_equipe_w = 'C') and (trunc(c.dt_contratacao,'month') = dt_referencia_p)) or 
				((ie_dt_ref_comissao_equipe_w = 'L') and (trunc(f.dt_liquidacao,'month') = dt_referencia_p)))	 
			and	c.nr_seq_vendedor_canal = nr_seq_inferior_w 
			and	((CASE WHEN coalesce(e.cd_pf_estipulante::text, '') = '' THEN 'PJ'  ELSE 'PF' END  = ie_tipo_contrato_p) or (ie_tipo_contrato_p = 'A')) 
			and	b.nr_parcela = 1;
			 
			qt_vidas_w := pls_obter_vidas_canal_inferior(nr_seq_lote_p, nr_seq_inferior_w, nr_seq_comissao_p, qt_vidas_w, dt_referencia_p, nr_seq_equipe_p, ie_tipo_contrato_p, nr_seq_sca_vidas_p, nm_usuario_p, cd_estabelecimento_p);	
			qt_vidas_canal_w := coalesce(qt_vidas_canal_w,0) + coalesce(qt_vidas_w,0);		
		else 
			select	count(*) 
			into STRICT	qt_vidas_sca_w 
			from	pls_mensalidade_seg_item 	g, 
				pls_mensalidade			a, 
				pls_mensalidade_segurado 	b, 
				pls_segurado			c, 
				pls_plano			d, 
				pls_contrato			e, 
				titulo_receber			f, 
				pls_sca_vinculo			h 
			where	g.nr_seq_mensalidade_seg 	= b.nr_sequencia 
			and	a.nr_sequencia			= b.nr_seq_mensalidade 
			and	c.nr_sequencia			= b.nr_seq_segurado 
			and	d.nr_sequencia			= c.nr_seq_plano 
			and	c.nr_seq_contrato		= e.nr_sequencia 
			and	f.nr_seq_mensalidade		= a.nr_sequencia 
			and	g.nr_seq_vinculo_sca		= h.nr_sequencia 
			and	coalesce(a.ie_cancelamento::text, '') = '' 
			and	g.ie_tipo_item	= '15' 
			and	f.ie_situacao	= '2' /* O título precisa estar liquidado */
 
			and	b.nr_parcela	= 1 
			and	(((ie_dt_ref_comissao_equipe_w = 'C') and (trunc(c.dt_contratacao,'month') = dt_referencia_p)) or 
				((ie_dt_ref_comissao_equipe_w = 'L') and (trunc(f.dt_liquidacao,'month') = dt_referencia_p)))	 
			and	c.nr_seq_vendedor_canal = nr_seq_inferior_w 
			and	((CASE WHEN coalesce(e.cd_pf_estipulante::text, '') = '' THEN 'PJ'  ELSE 'PF' END  = ie_tipo_contrato_p) or (ie_tipo_contrato_p = 'A')) 
			and	h.nr_seq_plano	= nr_seq_sca_vidas_p;	
 
			qt_vidas_w := pls_obter_vidas_canal_inferior(nr_seq_lote_p, nr_seq_inferior_w, nr_seq_comissao_p, qt_vidas_w, dt_referencia_p, nr_seq_equipe_p, ie_tipo_contrato_p, nr_seq_sca_vidas_p, nm_usuario_p, cd_estabelecimento_p);	
			qt_vidas_sca_w := coalesce(qt_vidas_sca_w,0) + coalesce(qt_vidas_w,0);				
		end if;
	end if;
 
	end;
end loop;
close C01;
 
qt_vidas_p := coalesce(qt_vidas_canal_w,0);
 
--commit; 
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_obter_vidas_canal_inferior ( nr_seq_lote_p bigint, nr_seq_canal_venda_p bigint, nr_seq_comissao_p bigint, qt_vidas_p INOUT bigint, dt_referencia_p timestamp, nr_seq_equipe_p bigint, ie_tipo_contrato_p text, nr_seq_sca_vidas_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

