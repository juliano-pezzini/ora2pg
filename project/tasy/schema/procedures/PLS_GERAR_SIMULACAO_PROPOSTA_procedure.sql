-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_simulacao_proposta ( nr_seq_proposta_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE

 
nr_seq_plano_w			bigint;
nr_seq_plano_ww			bigint;
nr_seq_tabela_w			bigint;
nr_seq_tabela_ww		bigint;
nr_seq_segurado_w		bigint;
cd_pessoa_fisica_w		varchar(10);
nr_seq_titular_w		bigint;
qt_idade_benef_w		bigint;
vl_preco_atual_w		double precision;
vl_proposta_w			double precision;
tx_desconto_w			double precision;
nr_seq_regra_desconto_w		bigint;
vl_inscricao_w			double precision;
vl_bonificacao_w		double precision;
vl_bonific_total_w		double precision	:= 0;
--qt_vidas_w			Number(5); 
vl_benef_proposta_w		bigint;
nr_seq_sca_vinculo_w		bigint;
vl_tot_sca_w			double precision := 0;
vl_sca_w			double precision := 0;
ie_calcula_valor_sca_contr_w	varchar(10);
nr_contrato_w			bigint;
nr_seq_contrato_w		bigint;
nr_seq_tabela_sca_w		bigint;
vl_proposta_sca_w		double precision := 0;
ie_beneficiario_titular_w	varchar(10);
ie_grau_parentesco_w		varchar(10);
dt_inicio_proposta_w		timestamp;
qt_registros_w			bigint;
nr_seq_bonificacao_w		bigint;
vl_via_carteira_w		double precision;

C01 CURSOR FOR 
	SELECT	b.nr_sequencia, 
		b.cd_beneficiario, 
		coalesce(b.nr_seq_titular,0), 
		coalesce(b.nr_seq_plano, nr_seq_plano_ww), 
		coalesce(b.nr_seq_tabela, nr_seq_tabela_ww), 
		CASE WHEN coalesce(b.nr_seq_titular::text, '') = '' THEN CASE WHEN coalesce(b.nr_seq_titular_contrato::text, '') = '' THEN 'T'  ELSE 'D' END   ELSE 'D' END , 
		trunc(months_between(clock_timestamp(), a.dt_nascimento) / 12) 
	from	pessoa_fisica			a, 
		pls_proposta_beneficiario	b 
	where	a.cd_pessoa_fisica	= b.cd_beneficiario 
	and	b.nr_seq_proposta	= nr_seq_proposta_p 
	and	coalesce(b.dt_cancelamento::text, '') = '' 
	order by b.nr_sequencia;

C02 CURSOR FOR 
	SELECT	nr_seq_bonificacao 
	from	pls_bonificacao_vinculo 
	where	nr_seq_segurado_prop	= nr_seq_segurado_w;

C03 CURSOR FOR 
	SELECT	nr_seq_bonificacao 
	from	pls_bonificacao_vinculo 
	where	nr_seq_proposta	= nr_seq_proposta_p;

C04 CURSOR FOR 
	SELECT	nr_sequencia 
	from	pls_sca_vinculo 
	where	nr_seq_benef_proposta = nr_seq_segurado_w;

C05 CURSOR FOR 
	SELECT	a.nr_seq_tabela 
	from	pls_sca_regra_contrato	a 
	where	a.nr_seq_contrato	= nr_seq_contrato_w 
	and	(a.nr_seq_tabela IS NOT NULL AND a.nr_seq_tabela::text <> '') 
	and	dt_inicio_proposta_w between coalesce(a.dt_inicio_vigencia,dt_inicio_proposta_w) and fim_dia(coalesce(a.dt_fim_vigencia,dt_inicio_proposta_w)) 
	and	((coalesce(a.ie_geracao_valores,'B') = ie_beneficiario_titular_w) or coalesce(a.ie_geracao_valores,'B') = 'B') 
	and	substr(pls_obter_se_sca_incl_contr(nr_seq_segurado_w,a.nr_seq_plano),1,1) = 'S' 
	and	((a.nr_seq_plano_benef	= nr_seq_plano_w) or (coalesce(a.nr_seq_plano_benef::text, '') = '')) 
	and	not exists (	SELECT	1 
					from	pls_sca_vinculo		x 
					where	x.nr_seq_benef_proposta	= nr_seq_segurado_w 
					and	a.nr_seq_plano		= x.nr_seq_plano);

C06 CURSOR FOR 
	SELECT	coalesce(vl_preco_atual,0) 
	from	pls_plano_preco 
	where	nr_seq_tabela	= nr_seq_tabela_sca_w 
	and	qt_idade_benef_w between qt_idade_inicial and qt_idade_final 
	and	coalesce(ie_grau_titularidade,ie_grau_parentesco_w)	= ie_grau_parentesco_w 
	order	by	coalesce(ie_grau_titularidade,' ');


BEGIN 
 
select	coalesce(max(nr_seq_plano),0), 
	coalesce(max(nr_seq_tabela),0) 
into STRICT	nr_seq_plano_ww, 
	nr_seq_tabela_ww 
from	pls_plano		b, 
	pls_proposta_plano	a 
where	a.nr_seq_plano		= b.nr_sequencia 
and	nr_seq_proposta		= nr_seq_proposta_p 
and	b.ie_preco		= '1';
 
select	nr_seq_contrato, 
	dt_inicio_proposta 
into STRICT	nr_contrato_w, 
	dt_inicio_proposta_w 
from	pls_proposta_adesao 
where	nr_sequencia	= nr_seq_proposta_p;
 
ie_calcula_valor_sca_contr_w	:= coalesce(obter_valor_param_usuario(1232, 77, Obter_Perfil_Ativo, nm_usuario_p, cd_estabelecimento_p), 'N');
 
if (nr_contrato_w IS NOT NULL AND nr_contrato_w::text <> '') then 
	select	max(nr_sequencia) 
	into STRICT	nr_seq_contrato_w 
	from	pls_contrato 
	where	nr_contrato	= nr_contrato_w;
end if;
 
--qt_vidas_w	:= pls_obter_qt_vidas_proposta(nr_seq_proposta_p); 
 
if (nr_seq_plano_ww > 0) then 
	open C01;
	loop 
	fetch C01 into 
		nr_seq_segurado_w, 
		cd_pessoa_fisica_w, 
		nr_seq_titular_w, 
		nr_seq_plano_w, 
		nr_seq_tabela_w, 
		ie_beneficiario_titular_w, 
		qt_idade_benef_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin 
		 
		qt_registros_w		:= 0;
		 
		ie_grau_parentesco_w	:= coalesce(substr(pls_obter_garu_dependencia_seg(nr_seq_segurado_w,'P'),1,2),'X');
		vl_preco_atual_w	:= coalesce(pls_obter_valores_propostas(nr_seq_segurado_w,null,'P'),0);
		vl_via_carteira_w	:= coalesce(pls_obter_valores_propostas(nr_seq_segurado_w,null,'VC'),0);
		 
		vl_inscricao_w		:= 0;
		 
		if (nr_seq_contrato_w IS NOT NULL AND nr_seq_contrato_w::text <> '') then 
			select	count(1) 
			into STRICT	qt_registros_w 
			from	pls_regra_inscricao 
			where	nr_seq_contrato	= nr_seq_contrato_w;
		end if;
		 
		if (qt_registros_w = 0) then 
			select	count(1) 
			into STRICT	qt_registros_w 
			from	pls_regra_inscricao 
			where	nr_seq_proposta	= nr_seq_proposta_p;
			 
			if (qt_registros_w = 0) then 
				/*Taxa de inscrição no produto*/
 
				vl_inscricao_w	:= coalesce(pls_obter_valores_propostas(nr_seq_segurado_w,null,'IP'),0);
			else 
				/*Taxa de inscrição proposta*/
 
				vl_inscricao_w	:= coalesce(pls_obter_valores_propostas(nr_seq_segurado_w,null,'I'),0);
			end if;
		else 
			/*Taxa de inscrição contrato*/
 
			vl_inscricao_w	:= coalesce(pls_obter_valores_propostas(nr_seq_segurado_w,null,'IC'),0);
		end if;
		 
		SELECT * FROM pls_obter_regra_desconto(nr_seq_segurado_w, 2, cd_estabelecimento_p, tx_desconto_w, nr_seq_regra_desconto_w) INTO STRICT tx_desconto_w, nr_seq_regra_desconto_w;
		 
		vl_bonific_total_w := 0;
		 
		/*Bonificação do beneficiário*/
 
		open c02;
		loop 
		fetch c02 into 
			nr_seq_bonificacao_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			begin 
			vl_bonific_total_w	:= coalesce(vl_bonific_total_w,0) + coalesce(pls_obter_valores_propostas(nr_seq_segurado_w,nr_seq_bonificacao_w,'B'),0);
			end;
		end loop;
		close c02;
		 
		/*Bonificação da proposta*/
 
		open c03;
		loop 
		fetch c03 into 
			nr_seq_bonificacao_w;
		EXIT WHEN NOT FOUND; /* apply on c03 */
			begin 
			vl_bonific_total_w	:= coalesce(vl_bonific_total_w,0) + coalesce(pls_obter_valor_bonif_tot_prop(nr_seq_proposta_p,nr_seq_bonificacao_w,nr_seq_segurado_w),0);
			end;
		end loop;
		close c03;
		 
		if (vl_bonific_total_w < 0) then 
			vl_bonific_total_w	:= vl_bonific_total_w * -1;
		end if;
		 
		vl_tot_sca_w	:= 0;
		 
		open C04;
		loop 
		fetch C04 into 
			nr_seq_sca_vinculo_w;
		EXIT WHEN NOT FOUND; /* apply on C04 */
			begin 
			select	pls_obter_valores_propostas(nr_seq_segurado_w,nr_seq_sca_vinculo_w,'S') 
			into STRICT	vl_sca_w 
			;
			 
			vl_tot_sca_w	:= vl_tot_sca_w + vl_sca_w;
			end;
		end loop;
		close C04;
		 
		if (ie_calcula_valor_sca_contr_w = 'S') and (nr_seq_contrato_w IS NOT NULL AND nr_seq_contrato_w::text <> '') then 
			open C05;
			loop 
			fetch C05 into 
				nr_seq_tabela_sca_w;
			EXIT WHEN NOT FOUND; /* apply on C05 */
				begin 
				open c06;
				loop 
				fetch c06 into 
					vl_proposta_sca_w;
				EXIT WHEN NOT FOUND; /* apply on c06 */
				end loop;
				close c06;
				 
				vl_tot_sca_w	:= vl_tot_sca_w + vl_proposta_sca_w;
				end;
			end loop;
			close C05;
		end if;
		 
		update	pls_proposta_beneficiario 
		set	vl_mensalidade		= vl_preco_atual_w, 
			vl_via_carteira		= vl_via_carteira_w, 
			vl_inscricao		= vl_inscricao_w, 
			nr_seq_regra_desconto	= nr_seq_regra_desconto_w, 
			tx_desconto		= tx_desconto_w, 
			vl_bonificacao		= vl_bonific_total_w, 
			vl_sca			= vl_tot_sca_w 
		where	nr_sequencia		= nr_seq_segurado_w;
		 
		end;
	end loop;
	close C01;
	CALL pls_atualiza_vl_tot_proposta(nr_seq_proposta_p,'N');
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_simulacao_proposta ( nr_seq_proposta_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

