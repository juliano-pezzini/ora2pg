-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consistir_arquivo_ipasgo ( dt_mesano_referencia_p protocolo_convenio.dt_mesano_referencia%type, cd_convenio_p convenio.cd_convenio%type, ie_tipo_protocolo_p protocolo_convenio.ie_tipo_protocolo%type, ie_tipo_atendimento_p atendimento_paciente.ie_tipo_atendimento%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


dt_mesano_referencia_w			timestamp := trunc(dt_mesano_referencia_p,'mm');
nr_interno_conta_w      		w_ipasgo_dados_gerais_at.nr_interno_conta%type;
qt_guia_w       				w_ipasgo_dados_gerais_fat.qt_guia%type;
ds_detalhe_w    				varchar(1000);
qt_existe_w     				bigint;
nr_guia_w       				w_ipasgo_dados_gerais_at.nr_guia%type;
nr_linha_ato_w  				w_ipasgo_dados_ato_trat.nr_linha_ato%type;
ds_guias_w      				varchar(1000) := '';
nr_linha_matmed_w       		w_ipasgo_dados_matmed_trat.nr_linha_matmed%type;
nr_dados_exame_trat_w   		bigint;
nr_dados_desp_trat_w    		bigint;
cd_matmed_w     				w_ipasgo_dados_matmed_trat.cd_matmed%type;
cd_local_util_matmed_w  		w_ipasgo_dados_matmed_trat.cd_local_util_matmed%type;
nr_conselho_w   				w_ipasgo_dados_prof_trat.nr_conselho%type;
aux_vl_honorario_gravado_w  	bigint;
nr_atendimento_w        		w_ipasgo_dados_gerais_at.nr_atendimento%type;
cd_tipo_fatura_w        		w_ipasgo_dados_gerais_at.cd_tipo_fatura%type;
nr_linha_ato_matmed_w   		w_ipasgo_dados_matmed_trat.nr_linha_ato%type;
nr_linha_ato_exame_w    		w_ipasgo_dados_exame_trat.nr_linha_ato%type;
nr_linha_despesa_w      		w_ipasgo_dados_desp_trat.nr_linha_despesa%type;
cd_procedimento_linha_w 		w_ipasgo_dados_proc_trat.cd_procedimento%type;
cd_procedimento_w       		w_ipasgo_dados_proc_trat.cd_procedimento%type;
aux_nr_matricula_prestador_w    w_ipasgo_dados_gerais_pr.nr_matricula_prestador%type;
nr_linha_ato_prof_w     		w_ipasgo_dados_exame_trat.nr_linha_ato%type;
qt_servico_gravado_w    		w_ipasgo_dados_desp_trat.qt_servico_gravado%type;
cd_funcao_w     				w_ipasgo_dados_prof_trat.cd_funcao%type;
aux_cd_matmed_w 				w_ipasgo_dados_matmed_trat.cd_matmed%type;
vl_matmed_gravado_w     		w_ipasgo_dados_matmed_trat.vl_matmed_gravado%type;
cd_conselho_w   				w_ipasgo_dados_prof_trat.cd_conselho%type;
aux_nr_guia_w   				bigint;
nr_max_linha_exame_w    		w_ipasgo_dados_exame_trat.nr_linha_exame%type;
nr_linha_ato_proc_w     		w_ipasgo_dados_proc_trat.nr_linha_ato%type;
vl_exame_gravado_w      		w_ipasgo_dados_exame_trat.vl_exame_gravado%type;
cd_exame_w      				w_ipasgo_dados_exame_trat.cd_exame%type;
ds_tipo_tratamento_w    		w_ipasgo_dados_trat.ds_tipo_tratamento%type;
vl_atendimento_w        		w_ipasgo_dados_gerais_at.vl_atendimento%type;
vl_honorario_w  				w_ipasgo_dados_prof_trat.vl_honorario%type;
vl_servico_w    				w_ipasgo_dados_desp_trat.vl_servico%type;
vl_matmed_w     				w_ipasgo_dados_matmed_trat.vl_matmed%type;
vl_exame_w      				w_ipasgo_dados_exame_trat.vl_exame%type;
nr_sequencia_w					w_ipasgo_dados_exame_trat.nr_sequencia%type;
nr_matricula_prestador_w		w_ipasgo_dados_desp_trat.nr_matricula_prestador%type;

c01 CURSOR FOR
	SELECT	nr_atendimento,
			nr_guia,
			nr_interno_conta
	from	w_ipasgo_dados_gerais_at
	where	nm_usuario = nm_usuario_p
	and		dt_mesano_referencia = dt_mesano_referencia_w;

c02 CURSOR(nm_usuario_p				usuario.nm_usuario%type,
               dt_mesano_refer_p	protocolo_convenio.dt_mesano_referencia%type) FOR
	SELECT  nr_guia
    from    w_ipasgo_dados_gerais_at
    where   nm_usuario = nm_usuario_p
    and     dt_mesano_referencia = dt_mesano_refer_p
    having  count(1) > 1
    group by        nr_guia;

c03 CURSOR FOR
	SELECT	nr_linha_ato
	from	w_ipasgo_dados_ato_trat
	where	nm_usuario = nm_usuario_p
	and	dt_mesano_referencia = dt_mesano_referencia_w
	and     nr_interno_conta = nr_interno_conta_w;

c04 CURSOR FOR
	SELECT	cd_matmed
    from    w_ipasgo_dados_matmed_trat
    where   nr_interno_conta = nr_interno_conta_w
    and     nm_usuario = nm_usuario_p
    and     dt_mesano_referencia = dt_mesano_referencia_w
	and		(cd_matmed IS NOT NULL AND cd_matmed::text <> '');

c05 CURSOR FOR
	SELECT	nr_guia
    from    w_ipasgo_dados_gerais_at
    where	nm_usuario = nm_usuario_p
    and		dt_mesano_referencia = dt_mesano_referencia_w;

c06 CURSOR FOR
	SELECT	vl_matmed_gravado
	from    w_ipasgo_dados_matmed_trat
	where	nr_interno_conta = nr_interno_conta_w
	and		nm_usuario = nm_usuario_p
	and		dt_mesano_referencia = dt_mesano_referencia_w;

c07 CURSOR FOR
	SELECT	replace(vl_honorario_gravado,'.',',')
	from    w_ipasgo_dados_prof_trat
	where	nr_interno_conta = nr_interno_conta_w
	and		nm_usuario = nm_usuario_p
	and		dt_mesano_referencia = dt_mesano_referencia_w;

c08 CURSOR FOR
	SELECT  distinct cd_funcao
    from    w_ipasgo_dados_prof_trat
    where   cd_funcao between 1 and 15
    and		nr_interno_conta = nr_interno_conta_w
    and		nm_usuario = nm_usuario_p
    and		dt_mesano_referencia = dt_mesano_referencia_w;

c09 CURSOR FOR
	SELECT	replace(qt_servico_gravado,'.',',')
	from    w_ipasgo_dados_desp_trat
	where	nr_interno_conta = nr_interno_conta_w
	and		nm_usuario = nm_usuario_p
	and		dt_mesano_referencia = dt_mesano_referencia_w;

c10 CURSOR FOR
	SELECT	replace(vl_exame_gravado,'.',','),
			nr_sequencia
	from    w_ipasgo_dados_exame_trat
	where	nr_interno_conta = nr_interno_conta_w
	and		nm_usuario = nm_usuario_p
	and		dt_mesano_referencia = dt_mesano_referencia_w;

c11 CURSOR FOR
	SELECT  cd_conselho
	from    w_ipasgo_dados_prof_trat
	where   cd_conselho < 1
	and 	cd_conselho > 6
	and		nr_interno_conta = nr_interno_conta_w
	and		nm_usuario = nm_usuario_p
	and		dt_mesano_referencia = dt_mesano_referencia_w;

c12 CURSOR FOR
	SELECT	nr_linha_ato
	from	w_ipasgo_dados_desp_trat
	where	nr_interno_conta  = nr_interno_conta_w
	and	nm_usuario = nm_usuario_p
	and	dt_mesano_referencia = dt_mesano_referencia_w
	group by nr_linha_ato
	order by nr_linha_ato;

c13 CURSOR FOR
	SELECT	nr_linha_ato
	from	w_ipasgo_dados_exame_trat
	where	nr_interno_conta  = nr_interno_conta_w
	and	nm_usuario = nm_usuario_p
	and	dt_mesano_referencia = dt_mesano_referencia_w
	group by nr_linha_ato
	order by nr_linha_ato;

c14 CURSOR FOR
	SELECT	nr_linha_ato
	from	w_ipasgo_dados_proc_trat
	where	nr_interno_conta  = nr_interno_conta_w
	and	nm_usuario = nm_usuario_p
	and	dt_mesano_referencia = dt_mesano_referencia_w
	group by nr_linha_ato
	order by nr_linha_ato;


BEGIN

	-- OS 645845 - RF 02 - Excluir os registros da tabela ipasgo_consistencia_conta
    begin
		delete	from	ipasgo_consistencia_conta
        where	cd_convenio = cd_convenio_p
        and	dt_mesano_referencia = dt_mesano_referencia_w
        and	nm_usuario = nm_usuario_p;
    exception
    when others then
        CALL wheb_mensagem_pck.exibir_mensagem_abort(343570, 'consistir_arquivo_ipasgo: erro ao excluir ipasgo_consistencia_conta erro=' || sqlerrm);
    end;


    -- OS 645845 - RF 04 - Consistência 1 - quantidade de atendimentos (guias)
    if	obter_se_con_ativa_ipasgo(1) then
		qt_guia_w       := 0;
        qt_existe_w     := 0;

        begin
			select  coalesce(qt_guia,0)
            into STRICT    qt_guia_w
            from    w_ipasgo_dados_gerais_fat
            where   nm_usuario = nm_usuario_p
            and     dt_mesano_referencia = dt_mesano_referencia_w;
        exception
        when no_data_found then
            null;
        end;

        begin
            select  count(1)
            into STRICT    qt_existe_w
            from    w_ipasgo_dados_gerais_at
            where   nm_usuario = nm_usuario_p
            and     dt_mesano_referencia = dt_mesano_referencia_w;
        exception
        when no_data_found then
            null;
        end;

        if	qt_guia_w <> qt_existe_w then
			ds_detalhe_w    := '';
            ds_detalhe_w    := wheb_mensagem_pck.get_texto(345968);
			ds_detalhe_w    := ds_detalhe_w || ' ' || qt_guia_w;
			ds_detalhe_w    := ds_detalhe_w || ' ' || wheb_mensagem_pck.get_texto(345969);
			ds_detalhe_w    := ds_detalhe_w || ' ' || qt_existe_w;
            ds_detalhe_w    := substr(ds_detalhe_w,1,255);

            CALL gravar_consist_conta_ipasgo( dt_mesano_referencia_w,
                                         cd_convenio_p,
                                         null,
                                         1,
                                         ds_detalhe_w,
                                         cd_estabelecimento_p,
                                         nm_usuario_p);
		end if;

    end if;

    -- OS 645845 - RF 05 - Consistência 2 - Número do atendimento principal repetido.
    if	obter_se_con_ativa_ipasgo(2) then
		nr_guia_w := 0;

        open c02(   nm_usuario_p,
					dt_mesano_referencia_w);
        loop
        fetch c02 into
			nr_guia_w;
            EXIT WHEN NOT FOUND; /* apply on c02 */
            if ds_guias_w = '' then
                    ds_guias_w := nr_guia_w;
            else
                    ds_guias_w := ' '||nr_guia_w;
            end if;
        end loop;
        close c02;

        if	ds_guias_w <> '' then
			ds_detalhe_w := wheb_mensagem_pck.get_texto(346007);
            ds_detalhe_w := ds_detalhe_w || ' ' || ds_guias_w;
            ds_detalhe_w := substr(ds_detalhe_w,1,255);

            CALL gravar_consist_conta_ipasgo( 	dt_mesano_referencia_w,
											cd_convenio_p,
											null,
											2,
											ds_detalhe_w,
											cd_estabelecimento_p,
											nm_usuario_p);
		end if;
    end if;

	open c01;
    loop
	fetch c01 into
		nr_atendimento_w,
		nr_guia_w,
		nr_interno_conta_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */

		-- OS 645845 - RF 06 - Consistencia 3 - Para cada atendimento o sequencial do ato deve iniciar com um.
		if (obter_se_con_ativa_ipasgo(3)) then
			nr_linha_ato_w := 0;

            begin
				select	min(coalesce(nr_linha_ato,0))
                into STRICT	nr_linha_ato_w
                from	w_ipasgo_dados_ato_trat
                where	nr_interno_conta = nr_interno_conta_w
                and		nm_usuario = nm_usuario_p
                and		dt_mesano_referencia = dt_mesano_referencia_w;
            exception
            when no_data_found THEN
				null;
            end;

			if (nr_linha_ato_w <> 1) then
				ds_detalhe_w    := '';
				ds_detalhe_w    := wheb_mensagem_pck.get_texto(346041);
				ds_detalhe_w    := ds_detalhe_w || ' ' || nr_guia_w;
				ds_detalhe_w    := ds_detalhe_w || ' ' || wheb_mensagem_pck.get_texto(346043);
				ds_detalhe_w    := ds_detalhe_w || ' ' || nr_linha_ato_w;
                ds_detalhe_w    := substr(ds_detalhe_w,1,255);

				CALL gravar_consist_conta_ipasgo(	dt_mesano_referencia_w,
												cd_convenio_p,
												nr_interno_conta_w,
												3,
												ds_detalhe_w,
												cd_estabelecimento_p,
												nm_usuario_p);
			end if;

		end if;

		-- OS 645845 - RF07 - Consistencia 4 - O código do procedimento em serviços profissionais deve ser preenchido.
		if (obter_se_con_ativa_ipasgo(4)) then
			qt_existe_w     := 0;

            begin
				select	count(1)
                into STRICT	qt_existe_w
                from	w_ipasgo_dados_proc_trat
                where	nr_interno_conta = nr_interno_conta_w
                and	nm_usuario = nm_usuario_p
                and	dt_mesano_referencia = dt_mesano_referencia_w  LIMIT 1;
            exception
            when no_data_found then
				null;
            end;

			if (qt_existe_w = 0) then

                ds_detalhe_w    := '';
				ds_detalhe_w    := wheb_mensagem_pck.get_texto(346041);
				ds_detalhe_w    := ds_detalhe_w || ' ' || nr_guia_w;
				ds_detalhe_w    := ds_detalhe_w || ' ' || wheb_mensagem_pck.get_texto(346054);
				ds_detalhe_w    := substr(ds_detalhe_w,1,255);

				CALL gravar_consist_conta_ipasgo(	dt_mesano_referencia_w,
                                                 cd_convenio_p,
                                                 nr_interno_conta_w,
                                                 4,
                                                 ds_detalhe_w,
                                                 cd_estabelecimento_p,
                                                 nm_usuario_p);
			end if;

		end if;

        -- OS 645845 - RF 08 - Consistencia 05 - O valor máximo do campo sequencial do procedimento
        --                     não confere com a quantidade de linhas do registro tipo 6.
        if (obter_se_con_ativa_ipasgo(5)) then
			qt_existe_w := 0;

            begin
				select  count(1)
                into STRICT    qt_existe_w
                from    w_ipasgo_dados_proc_trat
                where   nr_linha_proc > 99
                and     nr_interno_conta   = nr_interno_conta_w
                and     dt_mesano_referencia = dt_mesano_referencia_w  LIMIT 1;
            exception
            when no_data_found then
                null;
            end;

            -- Se a consulta retornar um valor maior que zero, insere na consistencia
            if (qt_existe_w > 0) then
                ds_detalhe_w    := '';
                ds_detalhe_w    := wheb_mensagem_pck.get_texto(346041);
                ds_detalhe_w    := ds_detalhe_w||' '||nr_guia_w;
                ds_detalhe_w    := ds_detalhe_w||' '||wheb_mensagem_pck.get_texto(346110);
                ds_detalhe_w    := substr(ds_detalhe_w,1,255);

                CALL gravar_consist_conta_ipasgo(    dt_mesano_referencia_w,
                                                cd_convenio_p,
                                                nr_interno_conta_w,
                                                5,
                                                ds_detalhe_w,
                                                cd_estabelecimento_p,
                                                nm_usuario_p);
            end if;

        end if;

        -- OS 645845 - RF 09 - Consistencia 06 - Para cada ato o se sequencial identificador do
        -- procedimento deve iniciar em zero
        if (obter_se_con_ativa_ipasgo(6)) then
            qt_existe_w := 0;

            begin
				select  min(nr_linha_proc)
                into STRICT    qt_existe_w
                from    w_ipasgo_dados_proc_trat
                where   nr_interno_conta     = nr_interno_conta_w
                and     dt_mesano_referencia = dt_mesano_referencia_w  LIMIT 1;
            exception
            when no_data_found then
				null;
            end;

            -- Se a consulta retornar um valor maior que zero, insere na consistencia
            if (qt_existe_w > 0) then
                ds_detalhe_w    := '';
                ds_detalhe_w    := wheb_mensagem_pck.get_texto(346041);
                ds_detalhe_w    := ds_detalhe_w||' '||nr_guia_w;
                ds_detalhe_w    := ds_detalhe_w||' '||wheb_mensagem_pck.get_texto(346140);
                ds_detalhe_w    := ds_detalhe_w||' '||qt_existe_w;
                ds_detalhe_w    := substr(ds_detalhe_w,1,255);

                CALL gravar_consist_conta_ipasgo(    dt_mesano_referencia_w,
                                                cd_convenio_p,
                                                nr_interno_conta_w,
                                                6,
                                                ds_detalhe_w,
                                                cd_estabelecimento_p,
                                                nm_usuario_p);
            end if;

        end if;

        -- OS 645845 - RF 10 - Consistencia 7 - O valor máximo do campo sequencial do ato não confere
        --                     com a quantidade de atos apresentada
        if (obter_se_con_ativa_ipasgo(7)) then
			nr_linha_ato_w  := 0;
            qt_existe_w     := 0;

            begin
				select	max(nr_linha_ato)
                into STRICT	nr_linha_ato_w
                from	w_ipasgo_dados_ato_trat
                where	nr_interno_conta = nr_interno_conta_w
                and	nm_usuario = nm_usuario_p
                and	dt_mesano_referencia = dt_mesano_referencia_w;
            exception
            when no_data_found then
                null;
            end;

            begin
				select	count(1)
                into STRICT	qt_existe_w
                from	w_ipasgo_dados_ato_trat
                where	nr_interno_conta = nr_interno_conta_w
                and	nm_usuario = nm_usuario_p
                and	dt_mesano_referencia = dt_mesano_referencia_w;
            exception
            when no_data_found then
				null;
            end;

            if (nr_linha_ato_w <> qt_existe_w) then
                ds_detalhe_w    := '';
                ds_detalhe_w    := wheb_mensagem_pck.get_texto(346041);
                ds_detalhe_w    := ds_detalhe_w || ' ' || nr_guia_w;
                ds_detalhe_w    := ds_detalhe_w || ' ' || wheb_mensagem_pck.get_texto(346339);
                ds_detalhe_w    := ds_detalhe_w || ' ' || nr_linha_ato_w;
                ds_detalhe_w    := ds_detalhe_w || ' ' || wheb_mensagem_pck.get_texto(346340);
                ds_detalhe_w    := ds_detalhe_w || ' ' || qt_existe_w;
                ds_detalhe_w    := substr(ds_detalhe_w,1,255);

                CALL gravar_consist_conta_ipasgo(	dt_mesano_referencia_w,
												cd_convenio_p,
												nr_interno_conta_w,
												7,
                                                ds_detalhe_w,
                                                cd_estabelecimento_p,
                                                nm_usuario_p);
            end if;

        end if;

        -- OS 645845 - RF 11 - Consistencia 8 - Ultrapassado o valor máximo do campo sequencial do material ou medicamento no registro tipo 9.
        if (obter_se_con_ativa_ipasgo(8)) then
			nr_linha_matmed_w       := 0;

            begin
				select	max(nr_linha_matmed)
                into STRICT	nr_linha_matmed_w
                from	w_ipasgo_dados_matmed_trat
                where	nr_interno_conta = nr_interno_conta_w
                and	nm_usuario = nm_usuario_p
                and	dt_mesano_referencia = dt_mesano_referencia_w;
			exception
            when no_data_found then
				null;
            end;

            if (nr_linha_matmed_w > 99999) then
                ds_detalhe_w    := '';
                ds_detalhe_w    := wheb_mensagem_pck.get_texto(346041);
                ds_detalhe_w    := ds_detalhe_w || ' ' || nr_guia_w;
                ds_detalhe_w    := ds_detalhe_w || ' ' || wheb_mensagem_pck.get_texto(346387);
                ds_detalhe_w    := ds_detalhe_w || ' ' || nr_linha_matmed_w;
                ds_detalhe_w    := substr(ds_detalhe_w,1,255);

                CALL gravar_consist_conta_ipasgo(	dt_mesano_referencia_w,
												cd_convenio_p,
												nr_interno_conta_w,
												8,
                                                ds_detalhe_w,
                                                cd_estabelecimento_p,
                                                nm_usuario_p);
            end if;
		end if;

        -- OS 645845 - RF 12 - Consistencia 9 - As despesas devem ser apresentadas no primeiro ato.
        if (obter_se_con_ativa_ipasgo(9)) then
			nr_dados_exame_trat_w   := 0;
            nr_linha_matmed_w       := 0;
            nr_dados_desp_trat_w    := 0;

            begin
				select	count(1)
                into STRICT	nr_dados_exame_trat_w
                from	w_ipasgo_dados_exame_trat a,
					procedimento_paciente b
                where	a.nr_linha_ato > 1
                and	a.cd_exame <> 999999
				and b.nr_interno_conta = a.nr_interno_conta
				and b.cd_procedimento = a.cd_exame
				and coalesce(b.nr_seq_proc_princ::text, '') = ''
                and	a.nr_interno_conta = nr_interno_conta_w
                and	a.nm_usuario = nm_usuario_p
                and	a.dt_mesano_referencia = dt_mesano_referencia_w;
            exception
            when no_data_found then
                null;
            end;

            begin
                select	count(1)
                into STRICT	nr_linha_matmed_w
                from	w_ipasgo_dados_matmed_trat a,
					material_atend_paciente b
                where	a.nr_linha_ato > 1
				and a.nr_interno_conta = b.nr_interno_conta
				and substr(elimina_caracteres_especiais(coalesce(b.cd_material_convenio,b.cd_material)),1,6) = a.cd_matmed
				and coalesce(b.nr_seq_proc_princ::text, '') = ''
                and	a.nr_interno_conta = nr_interno_conta_w
                and	a.nm_usuario = nm_usuario_p
                and	a.dt_mesano_referencia = dt_mesano_referencia_w;
            exception
            when no_data_found then
                null;
            end;

            begin
                select	count(1)
                into STRICT	nr_dados_desp_trat_w
                from	w_ipasgo_dados_desp_trat a,
					procedimento_paciente b
                where	a.nr_linha_ato > 1
                and	a.cd_servico <> 999999
				and b.nr_interno_conta = a.nr_interno_conta
				and b.cd_procedimento = a.cd_servico
				and coalesce(b.nr_seq_proc_princ::text, '') = ''
                and	a.nr_interno_conta = nr_interno_conta_w
                and	a.nm_usuario = nm_usuario_p
                and	a.dt_mesano_referencia = dt_mesano_referencia_w;
			exception
            when no_data_found then
                null;
            end;

            if (nr_dados_exame_trat_w > 0 or nr_linha_matmed_w > 0 or nr_dados_desp_trat_w > 0) then
                ds_detalhe_w    := '';
                ds_detalhe_w    := wheb_mensagem_pck.get_texto(346041);
                ds_detalhe_w    := ds_detalhe_w || ' ' || nr_guia_w;
                ds_detalhe_w    := ds_detalhe_w || ' ' || wheb_mensagem_pck.get_texto(346445);
                ds_detalhe_w    := ds_detalhe_w || ' ' || nr_dados_exame_trat_w;
                ds_detalhe_w    := ds_detalhe_w || ' ' || wheb_mensagem_pck.get_texto(346446);
                ds_detalhe_w    := ds_detalhe_w || ' ' || nr_linha_matmed_w;
                ds_detalhe_w    := ds_detalhe_w || ' ' || wheb_mensagem_pck.get_texto(346447);
                ds_detalhe_w    := ds_detalhe_w || ' ' || nr_dados_desp_trat_w;
                ds_detalhe_w    := substr(ds_detalhe_w,1,255);

                CALL gravar_consist_conta_ipasgo(	dt_mesano_referencia_w,
												cd_convenio_p,
												nr_interno_conta_w,
												9,
                                                ds_detalhe_w,
                                                cd_estabelecimento_p,
                                                nm_usuario_p);
            end if;
		end if;

        -- OS 645845 - RF 13 - Consistencia 10 - Local de utilizacao do material ou medicamento invalido.
		if (obter_se_con_ativa_ipasgo(10)) then
			begin
				cd_matmed_w     := 0;
                cd_local_util_matmed_w  := 0;

				select	cd_matmed,
						cd_local_util_matmed
				into STRICT	cd_matmed_w,
						cd_local_util_matmed_w
				from	w_ipasgo_dados_matmed_trat
				where	nm_usuario = nm_usuario_p
				and	dt_mesano_referencia = dt_mesano_referencia_w
				and	nr_interno_conta = nr_interno_conta_w
				and	cd_local_util_matmed not in (1,2,3,4,5)  LIMIT 1;

                ds_detalhe_w    := '';
				ds_detalhe_w    := wheb_mensagem_pck.get_texto(346041);
				ds_detalhe_w    := ds_detalhe_w || ' ' || nr_guia_w;
				ds_detalhe_w    := ds_detalhe_w || ' ' || wheb_mensagem_pck.get_texto(346567);
                ds_detalhe_w    := ds_detalhe_w || ' ' || cd_matmed_w;
				ds_detalhe_w    := ds_detalhe_w || ' ' || wheb_mensagem_pck.get_texto(346568);
				ds_detalhe_w    := ds_detalhe_w || ' ' || cd_local_util_matmed_w;
				ds_detalhe_w    := substr(ds_detalhe_w,1,255);

				CALL gravar_consist_conta_ipasgo(	dt_mesano_referencia_w,
												cd_convenio_p,
												nr_interno_conta_w,
												10,
												ds_detalhe_w,
												cd_estabelecimento_p,
												nm_usuario_p);

			exception
			when no_data_found then
				null;
			end;

		end if;

        -- OS 645845 - RF 14 - Consistencia 11 - Para este tipo do atendimento deve apresentar o registro tipo 6.
		if (obter_se_con_ativa_ipasgo(11)) then
			begin
				cd_tipo_fatura_w        := 0;
                qt_existe_w     := 0;

                begin
					select	cd_tipo_fatura
                    into STRICT	cd_tipo_fatura_w
                    from	w_ipasgo_dados_gerais_at
                    where	cd_tipo_fatura in (3,4,5,6,8,12,13,14,17)
                    and	nr_interno_conta = nr_interno_conta_w
                    and	nm_usuario = nm_usuario_p
                    and	dt_mesano_referencia = dt_mesano_referencia_w  LIMIT 1;
                exception
                when no_data_found then
                    null;
                end;

                begin
                    select	count(1)
                    into STRICT	qt_existe_w
                    from	w_ipasgo_dados_proc_trat
                    where	nm_usuario = nm_usuario_p
                    and	dt_mesano_referencia = dt_mesano_referencia_w
                    and	nr_interno_conta = nr_interno_conta_w;
				exception
                when no_data_found then
                    null;
                end;

				if (qt_existe_w = 0) then
                    ds_detalhe_w    := '';
					ds_detalhe_w    := wheb_mensagem_pck.get_texto(346041);
					ds_detalhe_w    := ds_detalhe_w || ' ' || nr_guia_w;
					ds_detalhe_w    := ds_detalhe_w || ' ' || wheb_mensagem_pck.get_texto(346738);
					ds_detalhe_w    := ds_detalhe_w || ' ' || cd_tipo_fatura_w;
					ds_detalhe_w    := substr(ds_detalhe_w,1,255);

					CALL gravar_consist_conta_ipasgo(	dt_mesano_referencia_w,
                                                    cd_convenio_p,
                                                    nr_interno_conta_w,
                                                    11,
                                                    ds_detalhe_w,
                                                    cd_estabelecimento_p,
                                                    nm_usuario_p);
				end if;
            exception
            when too_many_rows then
				null;
			end;

		end if;

		-- OS 645845 - RF 15 - Consistencia 12 - Indicador de registro repetido
		if (obter_se_con_ativa_ipasgo(12)) then
            qt_existe_w     := 0;
			begin
				select	count(*)
				into STRICT	qt_existe_w
				from	w_ipasgo_dados_gerais_at
				where	nr_interno_conta = nr_interno_conta_w
				and	nm_usuario = nm_usuario_p
				and	dt_mesano_referencia = dt_mesano_referencia_w
				GROUP BY nr_linha_atend,nr_interno_conta;
            exception
			when others then
				qt_existe_w := 0;
            end;
            /*
            if 	(qt_existe_w = 0) then
                begin
					select	count(*)
					into	qt_existe_w
					from	w_ipasgo_dados_guia_sec
					where	nr_interno_conta = nr_interno_conta_w
					and	nm_usuario = nm_usuario_p
					and	dt_mesano_referencia = dt_mesano_referencia_w
					having count(*) > 1
					group by nr_linha_atend,nr_guia,nr_linha_ato,nr_interno_conta;
				exception
				when others then
					qt_existe_w := 0;
				end;
			end if;

            if 	(qt_existe_w = 0) then
                begin
					select	count(*)
					into	qt_existe_w
					from    w_ipasgo_dados_trat
					where	nr_interno_conta = nr_interno_conta_w
					and	nm_usuario = nm_usuario_p
					and	dt_mesano_referencia = dt_mesano_referencia_w
					having count(*) > 1
					group by nr_linha_atend,nr_interno_conta;
				exception
				when others then
					qt_existe_w := 0;
				end;
            end if;

            if 	(qt_existe_w = 0) then
                begin
					select	count(*)
					into	qt_existe_w
					from	w_ipasgo_dados_ato_trat
					where	nr_interno_conta = nr_interno_conta_w
					and	nm_usuario = nm_usuario_p
					and	dt_mesano_referencia = dt_mesano_referencia_w
					having count(*) > 1
					group by nr_linha_atend,nr_linha_ato,nr_interno_conta;
				exception
				when others then
					qt_existe_w := 0;
				end;
            end if;

            if 	(qt_existe_w  = 0) then
                begin
					select	count(*)
                    into	qt_existe_w
                    from	w_ipasgo_dados_proc_trat
                    where	nr_interno_conta = nr_interno_conta_w
                    and	nm_usuario = nm_usuario_p
                    and	dt_mesano_referencia = dt_mesano_referencia_w
                    having count(*) > 1
                    group by nr_linha_atend,nr_linha_ato,nr_linha_proc,nr_interno_conta;
				exception
				when others then
					qt_existe_w := 0;
				end;
            end if;

            if 	(qt_existe_w = 0) then
                begin
					select	count(*)
                    into	qt_existe_w
                    from	w_ipasgo_dados_prof_trat
                    where	nr_interno_conta = nr_interno_conta_w
                    and	nm_usuario = nm_usuario_p
                    and	dt_mesano_referencia = dt_mesano_referencia_w
                    having count(*) > 1
                    group by nr_linha_atend,nr_linha_ato,cd_tipo_prestador,cd_conselho,nr_conselho,cd_funcao,nr_interno_conta;
				exception
				when others then
					qt_existe_w := 0;
				end;
            end if;

            if 	(qt_existe_w = 0) then
                begin
					select	count(*)
					into	qt_existe_w
					from	w_ipasgo_dados_desp_trat
					where	nr_interno_conta = nr_interno_conta_w
					and	nm_usuario = nm_usuario_p
					and	dt_mesano_referencia = dt_mesano_referencia_w
					having count(*) > 1
					group by nr_linha_atend,nr_linha_ato,nr_linha_despesa,nr_interno_conta;
				exception
				when others then
					qt_existe_w := 0;
				end;
            end if;

            if 	(qt_existe_w = 0) then
                begin
					select	count(*)
					into	qt_existe_w
					from	w_ipasgo_dados_matmed_trat
					where	nr_interno_conta = nr_interno_conta_w
					and	nm_usuario = nm_usuario_p
					and	dt_mesano_referencia = dt_mesano_referencia_w
					having count(*) > 1
					group by nr_linha_atend,nr_linha_ato,nr_linha_matmed,nr_interno_conta;
				exception
				when others then
					qt_existe_w := 0;
				end;
            end if;

            if  (qt_existe_w = 0) then
                begin
					select	count(*)
					into	qt_existe_w
					from	w_ipasgo_dados_exame_trat
					where	nr_interno_conta = nr_interno_conta_w
					and	nm_usuario = nm_usuario_p
					and	dt_mesano_referencia = dt_mesano_referencia_w
					having count(*) > 1
					group by nr_linha_atend,nr_linha_ato,nr_linha_exame,nr_interno_conta;
				exception
				when others then
					qt_existe_w := 0;
				end;
            end if;
			*/
            -- Se achou algum inconsistencia
            if (qt_existe_w > 0 HAVING count(*) > 1
				) then
				ds_detalhe_w    := '';
				ds_detalhe_w    := wheb_mensagem_pck.get_texto(346041);
				ds_detalhe_w    := ds_detalhe_w || ' ' || nr_guia_w;
				ds_detalhe_w    := substr(ds_detalhe_w,1,255);

				CALL gravar_consist_conta_ipasgo(	dt_mesano_referencia_w,
                                                cd_convenio_p,
                                                nr_interno_conta_w,
                                                12,
                                                ds_detalhe_w,
                                                cd_estabelecimento_p,
                                                nm_usuario_p);
			end if;

		end if;

        -- OS 645845 - RF 16 - Consistencia 13 - Para este tipo do atendimento deve apresentar o registro tipo 5.
		if (obter_se_con_ativa_ipasgo(13)) then
			begin
            cd_tipo_fatura_w        := 0;
            qt_existe_w     := 0;

            begin
				select	cd_tipo_fatura
				into STRICT	cd_tipo_fatura_w
				from	w_ipasgo_dados_gerais_at
				where	cd_tipo_fatura in (3,4,5,6,8,12,13,14,17)
				and	nr_interno_conta = nr_interno_conta_w
				and	nm_usuario = nm_usuario_p
				and	dt_mesano_referencia = dt_mesano_referencia_w  LIMIT 1;
            exception
            when no_data_found then
                null;
            end;

            begin
				select	count(1)
				into STRICT	qt_existe_w
				from	w_ipasgo_dados_ato_trat
				where	nm_usuario = nm_usuario_p
				and	dt_mesano_referencia = dt_mesano_referencia_w
				and	nr_interno_conta = nr_interno_conta_w;
			exception
            when no_data_found then
				null;
            end;

			if (qt_existe_w = 0) then
                ds_detalhe_w    := '';
				ds_detalhe_w    := wheb_mensagem_pck.get_texto(346041);
				ds_detalhe_w    := ds_detalhe_w || ' ' || nr_guia_w;
				ds_detalhe_w    := ds_detalhe_w || ' ' || wheb_mensagem_pck.get_texto(346738);
				ds_detalhe_w    := ds_detalhe_w || ' ' || cd_tipo_fatura_w;
				ds_detalhe_w    := substr(ds_detalhe_w,1,255);

				CALL gravar_consist_conta_ipasgo(	dt_mesano_referencia_w,
                                                cd_convenio_p,
                                                nr_interno_conta_w,
                                                13,
                                                ds_detalhe_w,
                                                cd_estabelecimento_p,
                                                nm_usuario_p);
			end if;
			exception
			when too_many_rows then
				null;
			end;

		end if;

        -- OS 645845 - RF 17 - Consistencia 14 - Arquivo não processado: o tipo do prestador deve ser númerico.
        if (obter_se_con_ativa_ipasgo(14)) then
            aux_nr_matricula_prestador_w    := 0;

            begin
				select  (nr_matricula_prestador)::numeric
				into STRICT	aux_nr_matricula_prestador_w
				from    w_ipasgo_dados_gerais_pr
				where   nm_usuario = nm_usuario_p
				and     dt_mesano_referencia = dt_mesano_referencia_w;
            exception
            when others then
				ds_detalhe_w    := '';
				ds_detalhe_w    := wheb_mensagem_pck.get_texto(346041);
				ds_detalhe_w    := ds_detalhe_w || ' ' || nr_guia_w;
				ds_detalhe_w    := substr(ds_detalhe_w,1,255);

				CALL gravar_consist_conta_ipasgo(	dt_mesano_referencia_w,
												cd_convenio_p,
												nr_interno_conta_w,
												14,
												ds_detalhe_w,
												cd_estabelecimento_p,
												nm_usuario_p);
            end;

        end if;

		--OS 645845 - RF 18 - consistência 15 - Arquivo não processado: o valor do honorário em serviços profissionais deve ser numérico.
        if (obter_se_con_ativa_ipasgo(15)) then
			aux_vl_honorario_gravado_w       := 0;

			open C07;
			loop
			fetch C07 into
				aux_vl_honorario_gravado_w;
			EXIT WHEN NOT FOUND; /* apply on C07 */
				begin

				aux_vl_honorario_gravado_w := (aux_vl_honorario_gravado_w)::numeric;

				exception
				when data_exception then

					ds_detalhe_w    := '';
					ds_detalhe_w    := wheb_mensagem_pck.get_texto(346041);
					ds_detalhe_w    := ds_detalhe_w || ' ' || nr_guia_w;
					ds_detalhe_w    := ds_detalhe_w || ' ' || wheb_mensagem_pck.get_texto(346791);
					ds_detalhe_w    := ds_detalhe_w || ' ' || nr_conselho_w;
					ds_detalhe_w    := substr(ds_detalhe_w,1,255);

					CALL gravar_consist_conta_ipasgo(    dt_mesano_referencia_w,
													cd_convenio_p,
													nr_interno_conta_w,
													15,
													ds_detalhe_w,
													cd_estabelecimento_p,
													nm_usuario_p);
				when no_data_found then
					null;
				end;
			end loop;
			close C07;

		end if;

       -- OS 645845 - RF 19 - consistência 16 - O código 999999 do serviço hospitalar deve ser apresentado somente uma vez.
       if (obter_se_con_ativa_ipasgo(16)) then
            qt_existe_w     := 0;

            begin
				select  count(1) qt_existe
				into STRICT    qt_existe_w
				from    w_ipasgo_dados_desp_trat
				where   cd_servico = 999999
				and     nr_interno_conta = nr_interno_conta_w
				and     nm_usuario = nm_usuario_p
				and     dt_mesano_referencia = dt_mesano_referencia_w
				group by nr_linha_ato
				having count(*) > 1;
            exception
            when no_data_found then
				null;
            end;

            if (qt_existe_w > 1) then
                ds_detalhe_w    := '';
                ds_detalhe_w    := wheb_mensagem_pck.get_texto(346041);
                ds_detalhe_w    := ds_detalhe_w || ' ' || nr_guia_w;
                ds_detalhe_w    := substr(ds_detalhe_w,1,255);

                CALL gravar_consist_conta_ipasgo(    dt_mesano_referencia_w,
                                                cd_convenio_p,
                                                nr_interno_conta_w,
                                                16,
                                                ds_detalhe_w,
                                                cd_estabelecimento_p,
                                                nm_usuario_p);
            end if;
       end if;

       -- OS 645845 - RF 20 - Consistência 17 - Quantidade de atos do registro tipo 10 não pode ser maior que a quantidade de atos do registro tipo 5.
       if (obter_se_con_ativa_ipasgo(17)) then
            nr_linha_ato_w  := 0;
            nr_linha_ato_exame_w    := 0;

            begin
				select  max(nr_linha_ato)
				into STRICT    nr_linha_ato_w
				from    w_ipasgo_dados_ato_trat
				where   nr_interno_conta = nr_interno_conta_w
				and     nm_usuario = nm_usuario_p
				and     dt_mesano_referencia = dt_mesano_referencia_w;
            exception
            when no_data_found then
				null;
            end;

            begin
				select  max(nr_linha_ato)
				into STRICT    nr_linha_ato_exame_w
				from    w_ipasgo_dados_exame_trat
				where   nr_interno_conta = nr_interno_conta_w
				and     nm_usuario = nm_usuario_p
				and     dt_mesano_referencia = dt_mesano_referencia_w;
            exception
            when no_data_found then
                null;
            end;

            if (nr_linha_ato_exame_w > nr_linha_ato_w) then
                ds_detalhe_w    := wheb_mensagem_pck.get_texto(346041);
                ds_detalhe_w    := ds_detalhe_w || ' ' || nr_guia_w;
                ds_detalhe_w    := ds_detalhe_w || ' ' || wheb_mensagem_pck.get_texto(346340);
                ds_detalhe_w    := ds_detalhe_w || ' ' || nr_linha_ato_w;
                ds_detalhe_w    := ds_detalhe_w || ' ' || wheb_mensagem_pck.get_texto(346794);
                ds_detalhe_w    := ds_detalhe_w || ' ' || nr_linha_ato_exame_w;
                ds_detalhe_w    := substr(ds_detalhe_w,1,255);

                CALL gravar_consist_conta_ipasgo(    dt_mesano_referencia_w,
                                                cd_convenio_p,
                                                nr_interno_conta_w,
                                                17,
                                                ds_detalhe_w,
                                                cd_estabelecimento_p,
                                                nm_usuario_p);
            end if;

		end if;

		-- OS 645845 - RF 21 - Consistencia 18 - Para este tipo do atendimento não pode apresentar o registro tipo 4
		if (obter_se_con_ativa_ipasgo(18)) then
			cd_tipo_fatura_w        := 0;
            qt_existe_w     := 0;

            begin
				select	cd_tipo_fatura
				into STRICT	cd_tipo_fatura_w
				from	w_ipasgo_dados_gerais_at
				where	cd_tipo_fatura in (1,2,7)
				and	nr_interno_conta = nr_interno_conta_w
				and	nm_usuario = nm_usuario_p
				and	dt_mesano_referencia = dt_mesano_referencia_w;

				select	coalesce(count(*),0)
				into STRICT	qt_existe_w
				from	w_ipasgo_dados_trat
				where	nr_interno_conta = nr_interno_conta_w
				and	dt_mesano_referencia = dt_mesano_referencia_w
				and	nm_usuario = nm_usuario_p;

				if (qt_existe_w > 0) then
                    ds_detalhe_w    := '';
					ds_detalhe_w    := wheb_mensagem_pck.get_texto(346041);
					ds_detalhe_w    := ds_detalhe_w || ' ' || nr_guia_w;
					ds_detalhe_w    := ds_detalhe_w || ' ' || wheb_mensagem_pck.get_texto(346738);
					ds_detalhe_w    := ds_detalhe_w || ' ' || cd_tipo_fatura_w;
					ds_detalhe_w    := substr(ds_detalhe_w,1,255);

					CALL gravar_consist_conta_ipasgo(	dt_mesano_referencia_w,
                                                    cd_convenio_p,
                                                    nr_interno_conta_w,
                                                    18,
                                                    ds_detalhe_w,
                                                    cd_estabelecimento_p,
                                                    nm_usuario_p);
				end if;
			exception
			when no_data_found then
				null;
			when too_many_rows then
				null;
			end;

		end if;

        -- OS 645845 - RF 22 - Consistencia 19 - A quantidade de atos do registro tipo 9 não pode ser
		--                                  	maior que a quantidade de atos do registro tipo 5.
		if (obter_se_con_ativa_ipasgo(19)) then
			nr_linha_ato_w  := 0;
            nr_linha_ato_matmed_w   := 0;

            begin
				select	max(nr_linha_ato)
				into STRICT	nr_linha_ato_w
				from	w_ipasgo_dados_ato_trat
				where	nr_interno_conta = nr_interno_conta_w
				and	nm_usuario = nm_usuario_p
				and	dt_mesano_referencia = dt_mesano_referencia_w;
			exception
            when no_data_found then
				null;
            end;

            begin
				select	max(nr_linha_ato)
				into STRICT	nr_linha_ato_matmed_w
				from	w_ipasgo_dados_matmed_trat
				where	nr_interno_conta = nr_interno_conta_w
				and	nm_usuario = nm_usuario_p
				and	dt_mesano_referencia = dt_mesano_referencia_w;
			exception
            when no_data_found then
				null;
            end;

			if (nr_linha_ato_matmed_w > nr_linha_ato_w) then
                ds_detalhe_w    := '';
				ds_detalhe_w    := wheb_mensagem_pck.get_texto(346041);
				ds_detalhe_w    := ds_detalhe_w || ' '|| nr_guia_w;
				ds_detalhe_w    := ds_detalhe_w || ' '|| wheb_mensagem_pck.get_texto(346340);
				ds_detalhe_w    := ds_detalhe_w || ' '|| nr_linha_ato_w;
				ds_detalhe_w    := ds_detalhe_w || ' '|| wheb_mensagem_pck.get_texto(346796);
				ds_detalhe_w    := ds_detalhe_w || ' '|| nr_linha_ato_matmed_w;
				ds_detalhe_w    := substr(ds_detalhe_w,1,255);

				CALL gravar_consist_conta_ipasgo(	dt_mesano_referencia_w,
												cd_convenio_p,
												nr_interno_conta_w,
												19,
												ds_detalhe_w,
												cd_estabelecimento_p,
												nm_usuario_p);

			end if;
		end if;

		-- OS 645845 - RF 23 - Consistencia 20 - Para este tipo não pode apresentar o registro tipo 10
		if (obter_se_con_ativa_ipasgo(20)) then
			cd_tipo_fatura_w        := 0;
			qt_existe_w     := 0;

			begin
				select	cd_tipo_fatura
				into STRICT	cd_tipo_fatura_w
				from	w_ipasgo_dados_gerais_at
				where	cd_tipo_fatura not in (4,9,17)
				and	nr_interno_conta = nr_interno_conta_w
				and	nm_usuario = nm_usuario_p
				and	dt_mesano_referencia = dt_mesano_referencia_w;

				select	count(1)
				into STRICT	qt_existe_w
				from	w_ipasgo_dados_exame_trat
				where	nr_interno_conta = nr_interno_conta_w
				and	nm_usuario = nm_usuario_p
				and	dt_mesano_referencia = dt_mesano_referencia_w;

				if (qt_existe_w > 0) then
                                        ds_detalhe_w    := '';
					ds_detalhe_w    := wheb_mensagem_pck.get_texto(346041);
					ds_detalhe_w    := ds_detalhe_w || ' '|| nr_guia_w;
					ds_detalhe_w    := ds_detalhe_w || ' '|| wheb_mensagem_pck.get_texto(346738);
					ds_detalhe_w    := ds_detalhe_w || ' '|| cd_tipo_fatura_w;
					ds_detalhe_w    := substr(ds_detalhe_w,1,255);

					CALL gravar_consist_conta_ipasgo(	dt_mesano_referencia_w,
									cd_convenio_p,
									nr_interno_conta_w,
									20,
									ds_detalhe_w,
									cd_estabelecimento_p,
									nm_usuario_p);
				end if;
			exception
			when no_data_found then
				null;
			when too_many_rows then
				null;
			end;
		end if;

		-- OS 645845 - RF 24 - Consistencia 21 - Para cada ato o sequencial do material ou medicamento deve iniciar com zero
		if (obter_se_con_ativa_ipasgo(21)) then
			nr_linha_matmed_w       := 0;

			begin
				select	min(nr_linha_matmed)
				into STRICT	nr_linha_matmed_w
				from	w_ipasgo_dados_matmed_trat
				where	nr_interno_conta = nr_interno_conta_w
				and	nm_usuario = nm_usuario_p
				and	dt_mesano_referencia = dt_mesano_referencia_w;
			exception
            when no_data_found then
				null;
            end;

			if (nr_linha_matmed_w > 0) then
                                ds_detalhe_w    := '';
				ds_detalhe_w    := wheb_mensagem_pck.get_texto(346041);
				ds_detalhe_w    := ds_detalhe_w || ' '|| nr_guia_w;
				ds_detalhe_w    := ds_detalhe_w || ' '|| wheb_mensagem_pck.get_texto(346800);
				ds_detalhe_w    := ds_detalhe_w || ' '|| nr_linha_matmed_w;
				ds_detalhe_w    := substr(ds_detalhe_w,1,255);

				CALL gravar_consist_conta_ipasgo(	dt_mesano_referencia_w,
								cd_convenio_p,
								nr_interno_conta_w,
								21,
								ds_detalhe_w,
								cd_estabelecimento_p,
								nm_usuario_p);
			end if;

		end if;

		-- OS 645845 - RF 25 - Consistencia 22 - Função do prestador repetida dentro do mesmo ato.
		if (obter_se_con_ativa_ipasgo(22)) then
			qt_existe_w     := 0;

            begin
				select	count(*)
				into STRICT	qt_existe_w
				from	w_ipasgo_dados_prof_trat
				where	nr_interno_conta = nr_interno_conta_w
				and	nm_usuario = nm_usuario_p
				and	dt_mesano_referencia = dt_mesano_referencia_w
				GROUP BY        cd_funcao,nr_linha_ato,nr_interno_conta;

				if (qt_existe_w > 0 HAVING  count(*) > 1
				) then
                    ds_detalhe_w    := '';
					ds_detalhe_w    := wheb_mensagem_pck.get_texto(346041);
					ds_detalhe_w    := ds_detalhe_w || ' '|| nr_guia_w;
					ds_detalhe_w    := substr(ds_detalhe_w,1,255);

					CALL gravar_consist_conta_ipasgo(	dt_mesano_referencia_w,
													cd_convenio_p,
													nr_interno_conta_w,
													22,
													ds_detalhe_w,
													cd_estabelecimento_p,
													nm_usuario_p);
				end if;
			exception
			when no_data_found then
				null;
			when too_many_rows then
				null;
			end;

		end if;

		-- OS 645845 - RF 26 - Consistencia 23 - Para este ato não foi apresentado o registro tipo 6
		if (obter_se_con_ativa_ipasgo(23)) then
			qt_existe_w     := 0;

			open c03;
			loop
            fetch c03 into
				nr_linha_ato_w;
			EXIT WHEN NOT FOUND; /* apply on c03 */
				select	coalesce(count(1),0)
				into STRICT	qt_existe_w
				from	w_ipasgo_dados_proc_trat
				where	nm_usuario = nm_usuario_p
				and	dt_mesano_referencia = dt_mesano_referencia_w
				and	nr_interno_conta = nr_interno_conta_w;

				if qt_existe_w = 0 then
					ds_detalhe_w    := '';
					ds_detalhe_w    := wheb_mensagem_pck.get_texto(346041);
					ds_detalhe_w    := ds_detalhe_w || ' '|| nr_guia_w;
					ds_detalhe_w    := substr(ds_detalhe_w,1,255);

					CALL gravar_consist_conta_ipasgo(	dt_mesano_referencia_w,
													cd_convenio_p,
													nr_interno_conta_w,
													23,
													ds_detalhe_w,
													cd_estabelecimento_p,
													nm_usuario_p);
                end if;
             end loop;
			 close c03;
		end if;

		-- OS 645845 - RF 27 - Consistencia 24 - Para este tipo do atendimento não pode apresentar o registro tipo 7.
		if (obter_se_con_ativa_ipasgo(24)) then
			cd_tipo_fatura_w        := 0;
			qt_existe_w     := 0;
			begin
				select	count(1)
				into STRICT	qt_existe_w
				from	w_ipasgo_dados_gerais_at
				where	nm_usuario = nm_usuario_p
				and	dt_mesano_referencia = dt_mesano_referencia_w
				and	nr_interno_conta = nr_interno_conta_w
				and	cd_tipo_fatura in (1,2,7,8,9);
            exception
            when no_data_found then
                qt_existe_w := 0;
            end;

			if (qt_existe_w > 0) then
				begin
					select	count(1)
					into STRICT	qt_existe_w
					from	w_ipasgo_dados_prof_trat
					where	nm_usuario = nm_usuario_p
					and	dt_mesano_referencia = dt_mesano_referencia_w
					and nr_interno_conta = nr_interno_conta_w;
				exception
				when no_data_found then
					qt_existe_w := 0;
				end;

				if (qt_existe_w > 0) then
					ds_detalhe_w    := '';
					ds_detalhe_w    := wheb_mensagem_pck.get_texto(346041);
					ds_detalhe_w    := ds_detalhe_w || ' '|| nr_guia_w;
					ds_detalhe_w    := ds_detalhe_w || ' '|| wheb_mensagem_pck.get_texto(346738);
					ds_detalhe_w    := substr(ds_detalhe_w,1,255);

					CALL gravar_consist_conta_ipasgo(	dt_mesano_referencia_w,
													cd_convenio_p,
													nr_interno_conta_w,
													24,
													ds_detalhe_w,
													cd_estabelecimento_p,
													nm_usuario_p);

				end if;
			end if;
		end if;



        -- OS 645845 - RF 28 - Consistencia 25 - O valor máximo do campo sequencial da despesa
        --                     não confere com a quantidade de linhas do registro tipo 8
        if (obter_se_con_ativa_ipasgo(25)) then

			open c12;
			loop
			fetch c12 into
				nr_linha_ato_w;
			EXIT WHEN NOT FOUND; /* apply on c12 */
				begin

				nr_linha_despesa_w      := 0;
				qt_existe_w     := 0;

				begin
					select	max(nr_linha_despesa) + 1
					into STRICT	nr_linha_despesa_w
					from	w_ipasgo_dados_desp_trat
					where	nr_interno_conta  = nr_interno_conta_w
					and	nm_usuario = nm_usuario_p
					and	dt_mesano_referencia = dt_mesano_referencia_w
					and	nr_linha_ato = nr_linha_ato_w;
				exception
				when no_data_found then
					null;
				end;

				begin
					select	count(1)
					into STRICT	qt_existe_w
					from	w_ipasgo_dados_desp_trat
					where	nr_interno_conta  = nr_interno_conta_w
					and	nm_usuario = nm_usuario_p
					and	dt_mesano_referencia = dt_mesano_referencia_w
					and	nr_linha_ato = nr_linha_ato_w;
				exception
				when no_data_found then
					null;
				end;

				if (qt_existe_w <> nr_linha_despesa_w) then
					ds_detalhe_w    := '';
					ds_detalhe_w    := wheb_mensagem_pck.get_texto(346041);
					ds_detalhe_w    := ds_detalhe_w || ' ' || nr_guia_w;
					ds_detalhe_w    := ds_detalhe_w || ' ' || wheb_mensagem_pck.get_texto(346822);
					ds_detalhe_w    := ds_detalhe_w || ' ' || nr_linha_despesa_w;
					ds_detalhe_w    := ds_detalhe_w || ' ' || wheb_mensagem_pck.get_texto(346823);
					ds_detalhe_w    := ds_detalhe_w || ' ' || qt_existe_w;
					ds_detalhe_w    := substr(ds_detalhe_w,1,255);

					CALL gravar_consist_conta_ipasgo(	dt_mesano_referencia_w,
													cd_convenio_p,
													nr_interno_conta_w,
													25,
													ds_detalhe_w,
													cd_estabelecimento_p,
													nm_usuario_p);
				end if;
			end;
			end loop;
			close c12;
        end if;

        -- OS 645845 - RF 29 - Consistencia 26 - Sequencial do procedimento em dados do procedimento deve ser em ordem crescente
        --                     obedecendo a ordem do mario ch para o menor
		if (obter_se_con_ativa_ipasgo(26)) then

			open c14;
			loop
			fetch c14 into
				nr_linha_ato_w;
			EXIT WHEN NOT FOUND; /* apply on c14 */
				begin

				cd_procedimento_w       := 0;
				cd_procedimento_linha_w := 0;
				begin
					select  cd_procedimento
					into STRICT	cd_procedimento_w
					from    w_ipasgo_dados_proc_trat
					where   nr_interno_conta = nr_interno_conta_w
					and	nm_usuario = nm_usuario_p
					and	dt_mesano_referencia = dt_mesano_referencia_w
					and nr_linha_ato = nr_linha_ato_w
					and     vl_ch_medico = (SELECT  max(vl_ch_medico)
											from    w_ipasgo_dados_proc_trat
											where   nr_interno_conta = nr_interno_conta_w
											and	nm_usuario = nm_usuario_p
											and	dt_mesano_referencia = dt_mesano_referencia_w
											and nr_linha_ato = nr_linha_ato_w);
				exception
				when others then
						null;
				end;

				begin
					select	cd_procedimento
					into STRICT	cd_procedimento_linha_w
					from	w_ipasgo_dados_proc_trat
					where	nr_interno_conta  = nr_interno_conta_w
					and	nm_usuario = nm_usuario_p
					and	dt_mesano_referencia = dt_mesano_referencia_w
					and nr_linha_ato = nr_linha_ato_w
					and	nr_linha_proc = 0;
				exception
				when others then
					null;
				end;

				if (cd_procedimento_w <> cd_procedimento_linha_w) then
					ds_detalhe_w    := '';
					ds_detalhe_w    := wheb_mensagem_pck.get_texto(346041);
					ds_detalhe_w    := ds_detalhe_w || ' ' || nr_guia_w;
					ds_detalhe_w    := ds_detalhe_w || ' ' || wheb_mensagem_pck.get_texto(346824);
					ds_detalhe_w    := ds_detalhe_w || ' ' || cd_procedimento_w;
					ds_detalhe_w    := ds_detalhe_w || ' ' || wheb_mensagem_pck.get_texto(346825);
					ds_detalhe_w    := ds_detalhe_w || ' ' || cd_procedimento_linha_w;
					ds_detalhe_w    := substr(ds_detalhe_w,1,255);

					CALL gravar_consist_conta_ipasgo(	dt_mesano_referencia_w,
													cd_convenio_p,
													nr_interno_conta_w,
													26,
													ds_detalhe_w,
													cd_estabelecimento_p,
													nm_usuario_p);
				end if;
			end;
			end loop;
			close c14;

		end if;

        -- OS 645845 - RF 30 - Consistencia 27 - A quantidade de atos do registro tipo 7 não pode ser maior
        --                                       do que a quantidade de atos do registro tipo 5.
        if (obter_se_con_ativa_ipasgo(27)) then
			nr_linha_ato_w  := 0;
            nr_linha_ato_prof_w     := 0;

            begin
				select	max(nr_linha_ato)
				into STRICT	nr_linha_ato_w
				from	w_ipasgo_dados_ato_trat
				where	nr_interno_conta = nr_interno_conta_w
				and     nm_usuario = nm_usuario_p
				and     dt_mesano_referencia = dt_mesano_referencia_w;
            exception
            when no_data_found then
                null;
            end;

            begin
                select  max(nr_linha_ato)
                into STRICT    nr_linha_ato_prof_w
                from    w_ipasgo_dados_prof_trat
                where   nr_interno_conta = nr_interno_conta_w
                and     nm_usuario = nm_usuario_p
                and     dt_mesano_referencia = dt_mesano_referencia_w;
			exception
            when no_data_found then
                null;
            end;

            if (nr_linha_ato_prof_w > nr_linha_ato_w) then
				ds_detalhe_w    := '';
				ds_detalhe_w    := wheb_mensagem_pck.get_texto(346041);
				ds_detalhe_w    := ds_detalhe_w || ' '|| nr_guia_w;
				ds_detalhe_w    := ds_detalhe_w || ' '|| wheb_mensagem_pck.get_texto(346340);
				ds_detalhe_w    := ds_detalhe_w || ' '|| nr_linha_ato_w;
				ds_detalhe_w    := ds_detalhe_w || ' '|| wheb_mensagem_pck.get_texto(346826);
				ds_detalhe_w    := ds_detalhe_w || ' '|| nr_linha_ato_prof_w;
				ds_detalhe_w    := substr(ds_detalhe_w,1,255);

				CALL gravar_consist_conta_ipasgo(	dt_mesano_referencia_w,
												cd_convenio_p,
												nr_interno_conta_w,
												27,
												ds_detalhe_w,
												cd_estabelecimento_p,
												nm_usuario_p);
			end if;
		end if;

        -- OS 645845 - RF 31 - Consistencia 28 - Arquivo não processado: o código do material ou medicamento deve ser númerico.
        if (obter_se_con_ativa_ipasgo(28)) then
            aux_cd_matmed_w := 0;

			open C04;
			loop
			fetch C04 into
				aux_cd_matmed_w;
			EXIT WHEN NOT FOUND; /* apply on C04 */
				begin

				aux_cd_matmed_w := (aux_cd_matmed_w)::numeric;

				exception
                when others then

					aux_cd_matmed_w := aux_cd_matmed_w;

					ds_detalhe_w    := '';
                    ds_detalhe_w    := wheb_mensagem_pck.get_texto(346041);
                    ds_detalhe_w    := ds_detalhe_w || ' ' || nr_guia_w;
                    ds_detalhe_w    := ds_detalhe_w || ' ' || wheb_mensagem_pck.get_texto(346567);
                    ds_detalhe_w    := ds_detalhe_w || ' ' || aux_cd_matmed_w;
                    ds_detalhe_w    := substr(ds_detalhe_w,1,255);

                    CALL gravar_consist_conta_ipasgo(	dt_mesano_referencia_w,
													cd_convenio_p,
                                                    nr_interno_conta_w,
                                                    28,
                                                    ds_detalhe_w,
                                                    cd_estabelecimento_p,
                                                    nm_usuario_p);
                end;
			end loop;
			close C04;

        end if;

        -- OS 645845 - RF 32 - Consistencia 29 - A data do atendimento deve ser preenchido
		if (obter_se_con_ativa_ipasgo(29)) then
			qt_existe_w     := 0;

            begin
				select	coalesce(count(*),0)
				into STRICT	qt_existe_w
				from	w_ipasgo_dados_gerais_at
				where	coalesce(dt_atendimento::text, '') = ''
				and	nr_interno_conta = nr_interno_conta_w
				and	dt_mesano_referencia = dt_mesano_referencia_w
				and nm_usuario = nm_usuario_p;
			exception
            when no_data_found then
				null;
            end;

			if (qt_existe_w > 0) then
				ds_detalhe_w    := '';
				ds_detalhe_w    := wheb_mensagem_pck.get_texto(346041);
				ds_detalhe_w    := ds_detalhe_w || ' ' || nr_guia_w;
				ds_detalhe_w    := substr(ds_detalhe_w,1,255);

				CALL gravar_consist_conta_ipasgo(	dt_mesano_referencia_w,
                                                cd_convenio_p,
                                                nr_interno_conta_w,
                                                29,
                                                ds_detalhe_w,
                                                cd_estabelecimento_p,
                                                nm_usuario_p);
			end if;
		end if;

		-- OS 645845 - RF 33 - Consistencia 30 - O tipo do atendimento deve ser preenchido
		if (obter_se_con_ativa_ipasgo(30)) then
			qt_existe_w     := 0;

			begin
				select	coalesce(count(*),0)
				into STRICT	qt_existe_w
				from	w_ipasgo_dados_gerais_at
				where	coalesce(cd_tipo_fatura::text, '') = ''
				and	nr_interno_conta = nr_interno_conta_w
				and	dt_mesano_referencia = dt_mesano_referencia_w
				and     nm_usuario = nm_usuario_p;
			exception
			when no_data_found then
				null;
			end;

			if (qt_existe_w > 0) then
                ds_detalhe_w    := '';
				ds_detalhe_w    := wheb_mensagem_pck.get_texto(346041);
				ds_detalhe_w    := ds_detalhe_w || ' ' || nr_guia_w;
				ds_detalhe_w    := substr(ds_detalhe_w,1,255);

				CALL gravar_consist_conta_ipasgo(	dt_mesano_referencia_w,
                                                cd_convenio_p,
                                                nr_interno_conta_w,
                                                30,
                                                ds_detalhe_w,
                                                cd_estabelecimento_p,
                                                nm_usuario_p);
			end if;
		end if;

		-- OS 645845 - RF 34 - Consistencia 31 - Arquivo não processado: o tipo do campo quantidade em serviços hospitalares deve ser valor monetário
		if (obter_se_con_ativa_ipasgo(31)) then
			qt_servico_gravado_w    := 0;

			open C09;
			loop
			fetch C09 into
				qt_servico_gravado_w;
			EXIT WHEN NOT FOUND; /* apply on C09 */
				begin

					qt_servico_gravado_w := (qt_servico_gravado_w)::numeric;

				exception
				when data_exception then
					qt_servico_gravado_w    := 0;

					select	qt_servico_gravado
					into STRICT	qt_servico_gravado_w
					from    w_ipasgo_dados_desp_trat
					where	nr_interno_conta = nr_interno_conta_w
					and		nm_usuario = nm_usuario_p
					and		dt_mesano_referencia = dt_mesano_referencia_w;

					ds_detalhe_w    := '';
					ds_detalhe_w    := wheb_mensagem_pck.get_texto(346041);
					ds_detalhe_w    := ds_detalhe_w || ' ' || nr_guia_w;
					ds_detalhe_w    := ds_detalhe_w || ' ' || wheb_mensagem_pck.get_texto(346859);
					ds_detalhe_w    := ds_detalhe_w || ' ' || qt_servico_gravado_w;
					ds_detalhe_w    := substr(ds_detalhe_w,1,255);

					CALL gravar_consist_conta_ipasgo(	dt_mesano_referencia_w,
													cd_convenio_p,
													nr_interno_conta_w,
													31,
													ds_detalhe_w,
													cd_estabelecimento_p,
													nm_usuario_p);
				when no_data_found then
					null;
				end;

			end loop;
			close C09;

		end if;

        -- OS 645845 - RF 35 - Consistencia 32 - Para este tipo de atendimento deve apresentar o registro tipo 8.
        if (obter_se_con_ativa_ipasgo(32)) then
            qt_existe_w     := 0;

            begin
				select	count(1)
				into STRICT	qt_existe_w
				from	w_ipasgo_dados_gerais_at
				where	cd_tipo_fatura not in (3,4,8,9,12,13,14,17)
				and	nr_interno_conta = nr_interno_conta_w
				and	nm_usuario = nm_usuario_p
				and	dt_mesano_referencia = dt_mesano_referencia_w;
            exception
            when no_data_found then
				qt_existe_w := 0;
            end;

            if (qt_existe_w > 0) then
				begin
					select	count(1)
					into STRICT	qt_existe_w
					from	w_ipasgo_dados_desp_trat
					where	nr_interno_conta = nr_interno_conta_w
					and	nm_usuario = nm_usuario_p
					and	dt_mesano_referencia = dt_mesano_referencia_w;
                exception
                when no_data_found then
                    qt_existe_w := 0;
                end;

                if (qt_existe_w < 1) then
					ds_detalhe_w    := '';
					ds_detalhe_w    := wheb_mensagem_pck.get_texto(346041);
					ds_detalhe_w    := ds_detalhe_w || ' ' || nr_guia_w;
					ds_detalhe_w    := substr(ds_detalhe_w,1,255);

					CALL gravar_consist_conta_ipasgo(	dt_mesano_referencia_w,
													cd_convenio_p,
													nr_interno_conta_w,
													32,
													ds_detalhe_w,
													cd_estabelecimento_p,
													nm_usuario_p);
                end if;
            end if;
        end if;

        -- OS 645845 - RF 36 - Consistencia 33 - Valor do material ou medicamento invalido
		if (obter_se_con_ativa_ipasgo(33)) then
			vl_matmed_gravado_w     := 0;

			open C06;
			loop
			fetch C06 into
				vl_matmed_gravado_w;
			EXIT WHEN NOT FOUND; /* apply on C06 */
				begin

				vl_matmed_gravado_w	:= (replace(vl_matmed_gravado_w,'.',','))::numeric;

				exception
				when data_exception then
					vl_matmed_gravado_w     := vl_matmed_gravado_w;

					ds_detalhe_w    := '';
					ds_detalhe_w    := wheb_mensagem_pck.get_texto(346041);
					ds_detalhe_w    := ds_detalhe_w || ' ' || nr_guia_w;
					ds_detalhe_w    := ds_detalhe_w || ' ' || wheb_mensagem_pck.get_texto(346865);
					ds_detalhe_w    := ds_detalhe_w || ' ' || vl_matmed_gravado_w;
					ds_detalhe_w    := substr(ds_detalhe_w,1,255);

					CALL gravar_consist_conta_ipasgo(	dt_mesano_referencia_w,
													cd_convenio_p,
													nr_interno_conta_w,
													33,
													ds_detalhe_w,
													cd_estabelecimento_p,
													nm_usuario_p);
				end;
			end loop;
			close C06;


		end if;

        -- OS 645845 - RF 37 - Consistencia 34 - Arquivo não processado: a função do prestador deve ser númerica
		if (obter_se_con_ativa_ipasgo(34)) then
			cd_funcao_w     := 0;

            open C08;
            loop
            fetch C08 into
            	cd_funcao_w;
            EXIT WHEN NOT FOUND; /* apply on C08 */
            	begin

					cd_funcao_w	:= (cd_funcao_w)::numeric;

				exception
				when others then
					ds_detalhe_w    := '';
                    ds_detalhe_w    := wheb_mensagem_pck.get_texto(346041);
                    ds_detalhe_w    := ds_detalhe_w || ' ' || nr_guia_w;
                    ds_detalhe_w    := ds_detalhe_w || ' ' || wheb_mensagem_pck.get_texto(346869);
                    ds_detalhe_w    := ds_detalhe_w || ' ' || cd_funcao_w;
                    ds_detalhe_w    := substr(ds_detalhe_w,1,255);

                    CALL gravar_consist_conta_ipasgo(	dt_mesano_referencia_w,
													cd_convenio_p,
                                                    nr_interno_conta_w,
                                                    34,
                                                    ds_detalhe_w,
                                                    cd_estabelecimento_p,
                                                    nm_usuario_p);
				end;
            end loop;
            close C08;

		end if;

		-- OS 645845 - RF 38 - Consistencia 35 - Arquivo não processado: o número do conselho deve ser numérico
		if (obter_se_con_ativa_ipasgo(35)) then
            cd_conselho_w   := 0;

			open c11;
			loop
			fetch c11 into
				cd_conselho_w;
			EXIT WHEN NOT FOUND; /* apply on c11 */
				begin

					cd_conselho_w	:= (cd_conselho_w)::numeric;

				exception
				when others then

					ds_detalhe_w    := '';
					ds_detalhe_w    := wheb_mensagem_pck.get_texto(346041);
					ds_detalhe_w    := ds_detalhe_w || ' ' || nr_guia_w;
					ds_detalhe_w    := ds_detalhe_w || ' ' || wheb_mensagem_pck.get_texto(346871);
					ds_detalhe_w    := ds_detalhe_w || ' ' || cd_conselho_w;
					ds_detalhe_w    := substr(ds_detalhe_w,1,255);

					CALL gravar_consist_conta_ipasgo(	dt_mesano_referencia_w,
													cd_convenio_p,
													nr_interno_conta_w,
													35,
													ds_detalhe_w,
													cd_estabelecimento_p,
													nm_usuario_p);

				end;
			end loop;
			close c11;

		end if;

       -- OS 645845 - RF 39 - Consistencia 36 - A quantidade de atos do registro tipo 8 não pode
       --                                       ser maior do que a quantidade de atos do registro tipo 5
       if (obter_se_con_ativa_ipasgo(36)) then
            nr_linha_ato_w  := 0;
            nr_linha_despesa_w      := 0;

            begin
				select	max(nr_linha_ato)
				into STRICT	nr_linha_ato_w
				from	w_ipasgo_dados_ato_trat
				where	nr_interno_conta  = nr_interno_conta_w
				and	nm_usuario = nm_usuario_p
				and	dt_mesano_referencia = dt_mesano_referencia_w;
            exception
            when no_data_found then
                null;
            end;

            begin
				select	max(nr_linha_ato)
				into STRICT	nr_linha_despesa_w
				from	w_ipasgo_dados_desp_trat
				where	nr_interno_conta  = nr_interno_conta_w
				and	nm_usuario = nm_usuario_p
				and	dt_mesano_referencia = dt_mesano_referencia_w;
            exception
            when no_data_found then
                null;
            end;

            if (nr_linha_despesa_w > nr_linha_ato_w) then
            	ds_detalhe_w := '';
                ds_detalhe_w := wheb_mensagem_pck.get_texto(346041);
                ds_detalhe_w := ds_detalhe_w || ' ' || nr_guia_w;
                ds_detalhe_w := ds_detalhe_w || ' ' || wheb_mensagem_pck.get_texto(346340);
                ds_detalhe_w := ds_detalhe_w || ' ' || nr_linha_ato_w;
                ds_detalhe_w := ds_detalhe_w || ' ' || wheb_mensagem_pck.get_texto(346873);
                ds_detalhe_w := ds_detalhe_w || ' ' || nr_linha_despesa_w;
                ds_detalhe_w := substr(ds_detalhe_w,1,255);

                CALL gravar_consist_conta_ipasgo(	dt_mesano_referencia_w,
												cd_convenio_p,
												nr_interno_conta_w,
                                               	36,
                                                ds_detalhe_w,
                                                cd_estabelecimento_p,
                                                nm_usuario_p);
            end if;
       end if;

       -- OS 645845 - RF 40 - Consistência 37 - Arquivo não processado: o número do atendimento deve ser numérico.
       if	obter_se_con_ativa_ipasgo(37) then
			aux_nr_guia_w   := 0;

			open C05;
			loop
			fetch C05 into
				aux_nr_guia_w;
			EXIT WHEN NOT FOUND; /* apply on C05 */
				begin

				aux_nr_guia_w := (replace(aux_nr_guia_w,'.',','))::numeric;

				exception
               when data_exception then

					aux_nr_guia_w := aux_nr_guia_w;

					ds_detalhe_w    := '';
                   ds_detalhe_w    := wheb_mensagem_pck.get_texto(346041);
                   ds_detalhe_w    := ds_detalhe_w || ' ' || nr_guia_w;
                   ds_detalhe_w    := substr(ds_detalhe_w,1,255);

                   CALL gravar_consist_conta_ipasgo(    dt_mesano_referencia_w,
                                                   cd_convenio_p,
                                                   nr_interno_conta_w,
                                                   37,
                                                   ds_detalhe_w,
                                                   cd_estabelecimento_p,
                                                   nm_usuario_p);
               when no_data_found then
					null;
               end;

			end loop;
			close C05;
       end if;

       -- OS 645845 - RF 41 - Consistência 38 - para este tipo do atendimento deve apresentar o registro tipo 9 (ver orientações gerais: item 6.8 do layout).
       if	obter_se_con_ativa_ipasgo(38) then
            qt_existe_w := 0;

            begin
				select	count(1)
				into STRICT	qt_existe_w
				from    w_ipasgo_dados_gerais_at
				where	nr_interno_conta = nr_interno_conta_w
				and	nm_usuario = nm_usuario_p
				and	dt_mesano_referencia = dt_mesano_referencia_w
				and	cd_tipo_fatura = 8;
            exception
            when no_data_found then
                    null;
            end;

            if qt_existe_w > 0 then
				qt_existe_w := 0;

				begin
					select	count(1)
					into STRICT	qt_existe_w
					from    w_ipasgo_dados_matmed_trat
					where	nr_interno_conta = nr_interno_conta_w
					and	nm_usuario = nm_usuario_p
					and	dt_mesano_referencia = dt_mesano_referencia_w;
				exception
				when no_data_found then
					null;
				end;

				if	qt_existe_w < 1 then
					ds_detalhe_w    := '';
					ds_detalhe_w    := wheb_mensagem_pck.get_texto(346041);
					ds_detalhe_w    := ds_detalhe_w || ' ' || nr_guia_w;
					ds_detalhe_w    := ds_detalhe_w || ' ' || wheb_mensagem_pck.get_texto(346738);
					ds_detalhe_w    := ds_detalhe_w || ' ' || '8';
					ds_detalhe_w    := substr(ds_detalhe_w,1,255);

					CALL gravar_consist_conta_ipasgo( dt_mesano_referencia_w,
												cd_convenio_p,
												nr_interno_conta_w,
												38,
												ds_detalhe_w,
												cd_estabelecimento_p,
												nm_usuario_p);
				end if;

            end if;
       end if;

		-- OS 645845 - RF 42 - Consistencia 39 - A quantidade de atos do registro tipo 6 não pode ser maior do que
		--                                       a quantidade de atos do registro tipo 5.
		if (obter_se_con_ativa_ipasgo(39)) then
			nr_linha_ato_w := 0;
			nr_linha_ato_proc_w := 0;

            begin
				select  max(nr_linha_ato)
				into STRICT    nr_linha_ato_w
				from    w_ipasgo_dados_ato_trat
				where   nr_interno_conta = nr_interno_conta_w
				and     nm_usuario = nm_usuario_p
				and     dt_mesano_referencia = dt_mesano_referencia_w;
            exception
            when no_data_found then
                null;
            end;

            begin
				select  max(nr_linha_ato)
				into STRICT    nr_linha_ato_proc_w
				from    w_ipasgo_dados_proc_trat
				where   nr_interno_conta = nr_interno_conta_w
				and     nm_usuario = nm_usuario_p
				and     dt_mesano_referencia = dt_mesano_referencia_w;
            exception
            when no_data_found then
                null;
            end;

            if (nr_linha_ato_proc_w > nr_linha_ato_w) then
				ds_detalhe_w    := ' ';
				ds_detalhe_w    := wheb_mensagem_pck.get_texto(346041);
				ds_detalhe_w    := ds_detalhe_w || ' ' || nr_guia_w;
				ds_detalhe_w    := ds_detalhe_w || ' ' || wheb_mensagem_pck.get_texto(346340);
				ds_detalhe_w    := ds_detalhe_w || ' ' || nr_linha_ato_w;
				ds_detalhe_w    := ds_detalhe_w || ' ' || wheb_mensagem_pck.get_texto(346878);
				ds_detalhe_w    := ds_detalhe_w || ' ' || nr_linha_ato_proc_w;
				ds_detalhe_w    := substr(ds_detalhe_w,1,255);

				CALL gravar_consist_conta_ipasgo( 	dt_mesano_referencia_w,
												cd_convenio_p,
												nr_interno_conta_w,
												39,
												ds_detalhe_w,
												cd_estabelecimento_p,
												nm_usuario_p);
			end if;
		end if;


		-- OS 645845 - RF 43 - Consistencia 40 - Para cada ato o sequencial da despesa deve iniciar com zero
		if (obter_se_con_ativa_ipasgo(40)) then
			nr_linha_despesa_w      := 0;

            begin
				select	coalesce(min(nr_linha_despesa),0)
				into STRICT	nr_linha_despesa_w
				from	w_ipasgo_dados_desp_trat
				where	nr_interno_conta = nr_interno_conta_w
				and     nm_usuario = nm_usuario_p
				and     dt_mesano_referencia = dt_mesano_referencia_w;
			exception
            when no_data_found then
				null;
            end;

			if nr_linha_despesa_w > 0 then
				ds_detalhe_w    := '';
				ds_detalhe_w    := wheb_mensagem_pck.get_texto(346041);
				ds_detalhe_w    := ds_detalhe_w || ' ' || nr_guia_w;
				ds_detalhe_w    := ds_detalhe_w || ' ' || wheb_mensagem_pck.get_texto(346880);
				ds_detalhe_w    := ds_detalhe_w || ' ' || nr_linha_despesa_w;
				ds_detalhe_w    := substr(ds_detalhe_w,1,255);

				CALL gravar_consist_conta_ipasgo( 	dt_mesano_referencia_w,
												cd_convenio_p,
												nr_interno_conta_w,
												40,
												ds_detalhe_w,
												cd_estabelecimento_p,
												nm_usuario_p);
			end if;
		end if;


        -- OS 645845 - RF 44 - Consistencia 41 - Quantidade do procedimento em serviços profissionais é inválida
        if (obter_se_con_ativa_ipasgo(41)) then
            qt_existe_w := 0;

            begin
				select	count(1)
				into STRICT	qt_existe_w
				from	w_ipasgo_dados_desp_trat
				where	nr_interno_conta  = nr_interno_conta_w
				and	nm_usuario = nm_usuario_p
				and	dt_mesano_referencia = dt_mesano_referencia_w
				and	coalesce(qt_servico_gravado,0) = 0;
            exception
            when others then
                qt_existe_w := 0;
            end;


            if (qt_existe_w > 0) then
                ds_detalhe_w    := '';
                ds_detalhe_w    := wheb_mensagem_pck.get_texto(346041);
                ds_detalhe_w    := ds_detalhe_w || ' ' || nr_guia_w;
                ds_detalhe_w    := substr(ds_detalhe_w,1,255);

                CALL gravar_consist_conta_ipasgo(	dt_mesano_referencia_w,
												cd_convenio_p,
												nr_interno_conta_w,
                                               	41,
                                                ds_detalhe_w,
                                                cd_estabelecimento_p,
                                                nm_usuario_p);
            end if;
        end if;

        -- OS 645845 - RF 45 - Consistencia 42 - O valor máximo do campo sequencial do exame não confere
        --					com a quantidade de linhas do registro tipo 10
        if (obter_se_con_ativa_ipasgo(42)) then

			open c13;
			loop
			fetch c13 into
				nr_linha_ato_w;
			EXIT WHEN NOT FOUND; /* apply on c13 */
				begin

				nr_max_linha_exame_w := 0;
				qt_existe_w := 0;

				begin
					select	max(nr_linha_exame) + 1
					into STRICT	nr_max_linha_exame_w
					from	w_ipasgo_dados_exame_trat
					where	nr_interno_conta  = nr_interno_conta_w
					and	nm_usuario = nm_usuario_p
					and	dt_mesano_referencia = dt_mesano_referencia_w
					and	nr_linha_ato = nr_linha_ato_w;
				exception
				when no_data_found then
					null;
				end;

				begin
					select	count(1)
					into STRICT	qt_existe_w
					from	w_ipasgo_dados_exame_trat
					where	nr_interno_conta  = nr_interno_conta_w
					and	nm_usuario = nm_usuario_p
					and	dt_mesano_referencia = dt_mesano_referencia_w
					and	nr_linha_ato = nr_linha_ato_w;
				exception
				when no_data_found then
					null;
				end;

				if (nr_max_linha_exame_w <> qt_existe_w) then
					ds_detalhe_w    := '';
					ds_detalhe_w    := wheb_mensagem_pck.get_texto(346041);
					ds_detalhe_w    := ds_detalhe_w || ' ' || nr_guia_w;
					ds_detalhe_w    := ds_detalhe_w || ' ' || wheb_mensagem_pck.get_texto(346913);
					ds_detalhe_w    := ds_detalhe_w || ' ' || nr_max_linha_exame_w;
					ds_detalhe_w    := ds_detalhe_w || ' ' || wheb_mensagem_pck.get_texto(346915);
					ds_detalhe_w    := ds_detalhe_w || ' ' || qt_existe_w;
					ds_detalhe_w    := substr(ds_detalhe_w,1,255);

					CALL gravar_consist_conta_ipasgo(	dt_mesano_referencia_w,
													cd_convenio_p,
													nr_interno_conta_w,
													42,
													ds_detalhe_w,
													cd_estabelecimento_p,
													nm_usuario_p);
				end if;

				end;
			end loop;
			close c13;
        end if;

        -- OS 645845 - RF 46 - Consistencia 43 - Valor do exame interno inválido
        if (obter_se_con_ativa_ipasgo(43)) then
			vl_exame_gravado_w      := 0;
            cd_exame_w      := 0;

			open C10;
			loop
			fetch C10 into
				vl_exame_gravado_w,
				nr_sequencia_w;
			EXIT WHEN NOT FOUND; /* apply on C10 */
				begin

					vl_exame_gravado_w := 	(vl_exame_gravado_w)::numeric;

				exception
				when data_exception then
					select	cd_exame
					into STRICT	cd_exame_w
					from    w_ipasgo_dados_exame_trat
					where	nr_interno_conta = nr_interno_conta_w
					and	nm_usuario = nm_usuario_p
					and	dt_mesano_referencia = dt_mesano_referencia_w
					and	nr_sequencia = nr_sequencia_w;

					ds_detalhe_w := wheb_mensagem_pck.get_texto(346041);
					ds_detalhe_w := ds_detalhe_w || ' ' || nr_guia_w;
					ds_detalhe_w := ds_detalhe_w || ' ' || wheb_mensagem_pck.get_texto(346924);
					ds_detalhe_w := ds_detalhe_w || ' ' || cd_exame_w;
					ds_detalhe_w := substr(ds_detalhe_w,1,255);

					CALL gravar_consist_conta_ipasgo(	dt_mesano_referencia_w,
													cd_convenio_p,
													nr_interno_conta_w,
													43,
													ds_detalhe_w,
													cd_estabelecimento_p,
													nm_usuario_p);
				when no_data_found then
					null;
				end;
			end loop;
			close C10;
        end if;

		-- OS 645845 - RF 47 - Consistencia 44 - Nenhum médico poderá ter duas funções no mesmo ato
		if (obter_se_con_ativa_ipasgo(44)) then
			nr_conselho_w   := 0;

			begin
				select	nr_conselho
				into STRICT	nr_conselho_w
				from	w_ipasgo_dados_prof_trat
				where	nr_interno_conta = nr_interno_conta_w
				and	nm_usuario = nm_usuario_p
				and	dt_mesano_referencia = dt_mesano_referencia_w
				GROUP BY nr_linha_ato,nr_conselho,nr_interno_conta;

				ds_detalhe_w    := '';
				ds_detalhe_w    := wheb_mensagem_pck.get_texto(346041);
				ds_detalhe_w    := ds_detalhe_w || ' ' || nr_guia_w;
				ds_detalhe_w    := ds_detalhe_w || ' ' || wheb_mensagem_pck.get_texto(346791);
				ds_detalhe_w    := ds_detalhe_w || ' ' || nr_conselho_w;
				ds_detalhe_w    := substr(ds_detalhe_w,1,255);

				CALL gravar_consist_conta_ipasgo(    dt_mesano_referencia_w,
                                                cd_convenio_p,
                                                nr_interno_conta_w,
                                                44,
                                                ds_detalhe_w,
                                                cd_estabelecimento_p,
                                                nm_usuario_p);


			exception
			when no_data_found then
				null;
			when too_many_rows then
				null;
			end;

		end if;

		-- OS 645845 - RF 48 - Consistencia 45 - Sempre que tipo do atendimento for cirurgico é necessário informar uma ato
		if (obter_se_con_ativa_ipasgo(45) HAVING count(*) > 1
				) then
			ds_tipo_tratamento_w    := '';
			qt_existe_w     := 0;

			begin
				select	ds_tipo_tratamento
				into STRICT	ds_tipo_tratamento_w
				from	w_ipasgo_dados_trat
				where	ds_tipo_tratamento in (2,4)  LIMIT 1;

				select	count(1)
				into STRICT	qt_existe_w
				from	w_ipasgo_dados_trat
                where   nr_interno_conta = nr_interno_conta_w
				and	nm_usuario = nm_usuario_p
				and	dt_mesano_referencia = dt_mesano_referencia_w;

				if qt_existe_w = 0 then
					ds_detalhe_w    := '';
                    ds_detalhe_w    := wheb_mensagem_pck.get_texto(346041);
					ds_detalhe_w    := ds_detalhe_w || ' ' || nr_guia_w;
					ds_detalhe_w    := ds_detalhe_w || ' ' || wheb_mensagem_pck.get_texto(346941);
					ds_detalhe_w    := ds_detalhe_w || ' ' || ds_tipo_tratamento_w;
					ds_detalhe_w    := substr(ds_detalhe_w,1,255);

					CALL gravar_consist_conta_ipasgo(    dt_mesano_referencia_w,
                                                    cd_convenio_p,
                                                    nr_interno_conta_w,
                                                    45,
                                                    ds_detalhe_w,
                                                    cd_estabelecimento_p,
                                                    nm_usuario_p);
				end if;
			exception
			when no_data_found then
				null;
			end;

		end if;

        -- OS 645845 - RF 49 - Consistência 46 - Guias de autorização repetidas em atos diferentes
        if	obter_se_con_ativa_ipasgo(46) then
            qt_existe_w := 0;

            begin
                select	count(1)
                into STRICT	qt_existe_w
                from    w_ipasgo_dados_guia_sec a
                where	a.nr_interno_conta = nr_interno_conta_w
                and	a.nm_usuario = nm_usuario_p
                and	a.dt_mesano_referencia = dt_mesano_referencia_w
                group by a.nr_linha_ato, a.nr_guia
				having count(*) > 1;
            exception
            when others then
                qt_existe_w := 0;
            end;

            if (qt_existe_w > 0) then
                ds_detalhe_w    := '';
                ds_detalhe_w    := wheb_mensagem_pck.get_texto(346041);
                ds_detalhe_w    := ds_detalhe_w || ' ' || nr_guia_w;
                ds_detalhe_w    := ds_detalhe_w || ' ' || wheb_mensagem_pck.get_texto(346007);
                ds_detalhe_w    := ds_detalhe_w || ' ' || qt_existe_w;
                ds_detalhe_w    := substr(ds_detalhe_w,1,255);

                CALL gravar_consist_conta_ipasgo(    dt_mesano_referencia_w,
                                                cd_convenio_p,
                                                nr_interno_conta_w,
                                                46,
                                                ds_detalhe_w,
                                                cd_estabelecimento_p,
                                                nm_usuario_p);
            end if;
        end if;

		/*
        -- OS 645845 - RF 50 - consistência 47 - Valor do atendimento diferente da soma dos valores de honorários, despesas, mat/med e exames
        if	obter_se_con_ativa_ipasgo(47) then
            vl_atendimento_w := 0;
            vl_honorario_w  := 0;
            vl_servico_w    := 0;
            vl_matmed_w     := 0;
            vl_exame_w      := 0;

            begin
				select	vl_atendimento
				into	vl_atendimento_w
				from    w_ipasgo_dados_gerais_at
				where	nr_interno_conta = nr_interno_conta_w
				and	nm_usuario = nm_usuario_p
				and	dt_mesano_referencia = dt_mesano_referencia_w;
            exception
            when others then
                vl_atendimento_w := 0;
            end;

            begin
                select	sum(vl_honorario)
                into	vl_honorario_w
                from    w_ipasgo_dados_prof_trat
                where	nr_interno_conta = nr_interno_conta_w
                and	nm_usuario = nm_usuario_p
                and	dt_mesano_referencia = dt_mesano_referencia_w;
            exception
            when others then
                vl_honorario_w := 0;
            end;

            begin
                select	sum(vl_servico)
                into	vl_servico_w
                from    w_ipasgo_dados_desp_trat
                where	nr_interno_conta = nr_interno_conta_w
                and	nm_usuario = nm_usuario_p
                and	dt_mesano_referencia = dt_mesano_referencia_w;
            exception
            when others then
                vl_servico_w := 0;
            end;
            begin
                select	sum(vl_matmed)
                into	vl_matmed_w
                from    w_ipasgo_dados_matmed_trat
                where	nr_interno_conta = nr_interno_conta_w
                and	nm_usuario = nm_usuario_p
                and	dt_mesano_referencia = dt_mesano_referencia_w;
            exception
            when others then
                vl_matmed_w := 0;
            end;
            begin
                select	sum(vl_exame)
                into	vl_exame_w
                from    w_ipasgo_dados_exame_trat
                where	nr_interno_conta = nr_interno_conta_w
                and	nm_usuario = nm_usuario_p
                and	dt_mesano_referencia = dt_mesano_referencia_w;
            exception
            when others then
                vl_exame_w := 0;
            end;

            if	(vl_atendimento_w <> (vl_honorario_w + vl_servico_w + vl_matmed_w + vl_exame_w)) then

                ds_detalhe_w := '';
                ds_detalhe_w := wheb_mensagem_pck.get_texto(346041);
                ds_detalhe_w := ds_detalhe_w || ' ' || nr_guia_w;
                ds_detalhe_w := ds_detalhe_w || ' ' || wheb_mensagem_pck.get_texto(346949);
                ds_detalhe_w := ds_detalhe_w || ' ' || vl_atendimento_w;
                ds_detalhe_w := ds_detalhe_w || ' ' || wheb_mensagem_pck.get_texto(346950);
                ds_detalhe_w := ds_detalhe_w || ' ' || vl_honorario_w;
                ds_detalhe_w := ds_detalhe_w || ' ' || wheb_mensagem_pck.get_texto(346951);
                ds_detalhe_w := ds_detalhe_w || ' ' || vl_servico_w;
                ds_detalhe_w := ds_detalhe_w || ' ' || wheb_mensagem_pck.get_texto(346957);
                ds_detalhe_w := ds_detalhe_w || ' ' || vl_matmed_w;
                ds_detalhe_w := ds_detalhe_w || ' ' || wheb_mensagem_pck.get_texto(346958);
                ds_detalhe_w := ds_detalhe_w || ' ' || vl_exame_w;
                ds_detalhe_w := substr(ds_detalhe_w,1,255);

                gravar_consist_conta_ipasgo(    dt_mesano_referencia_w,
                                                cd_convenio_p,
                                                nr_interno_conta_w,
                                                47,
                                                ds_detalhe_w,
                                                cd_estabelecimento_p,
                                                nm_usuario_p);
            end if;
        end if;
		*/
	end loop;
    close c01;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consistir_arquivo_ipasgo ( dt_mesano_referencia_p protocolo_convenio.dt_mesano_referencia%type, cd_convenio_p convenio.cd_convenio%type, ie_tipo_protocolo_p protocolo_convenio.ie_tipo_protocolo%type, ie_tipo_atendimento_p atendimento_paciente.ie_tipo_atendimento%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;

