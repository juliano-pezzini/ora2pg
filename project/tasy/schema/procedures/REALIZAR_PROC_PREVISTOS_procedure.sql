-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE realizar_proc_previstos ( nr_cirurgia_p bigint, nr_prescricao_p bigint, nm_usuario_p text, ie_java_html_p text default 'N') AS $body$
DECLARE


cd_convenio_glosa_w	integer;
cd_categoria_glosa_w	varchar(10);
ie_acao_excesso_w	varchar(5);
qt_lancamento_w		bigint;
qt_excedida_w		bigint;
dt_execucao_w		timestamp;
cd_medico_executor_w	varchar(10);
nr_cirurgia_propaci_w	bigint;
nr_interno_conta_ww	bigint;				
ie_regra_uso_w		varchar(1);
nr_atendimento_ww	bigint;
cd_categoria_www		varchar(10);				
ie_consiste_categoria_w 	varchar(1);
cd_procedimento_w	bigint;
ie_origem_proced_w	bigint;
dt_prescricao_w		timestamp;
qt_procedimento_w		double precision;
nr_prescricao_w		bigint;
nr_sequencia_w		integer;
cd_convenio_w		integer;
cd_convenio_ww		integer;
cd_categoria_w		varchar(10);
cd_categoria_ww		varchar(10);
cd_estabelecimento_w	smallint;
ie_funcao_medico_w	varchar(10);
ie_proced_hor_atual_w	varchar(1);
dt_inicio_real_w		timestamp;
dt_procedimento_w		timestamp;
dt_entrada_unidade_w	timestamp;
cd_setor_atendimento_w	integer;
nr_seq_interno_w		bigint;
nr_doc_convenio_w	varchar(20);
ie_tipo_guia_w		varchar(2);
cd_senha_w		varchar(20);
ie_classificao_w		varchar(1);
cd_tipo_procedimento_w	smallint;
nr_seq_proc_w		bigint;
varie_tipo_lancto_w		varchar(10);
nr_seq_proc_interno_w	bigint;
nr_atendimento_w		bigint;
ie_classificacao_w		varchar(1);
cd_pessoa_fisica_w	varchar(10);
ds_erro_w		varchar(255);
cd_medico_cirurgiao_w	varchar(10);
varie_data_conta_w	varchar(10);
dt_termino_w		timestamp;
cd_medico_anestesista_w	varchar(10);
varie_medico_anestesista_w	varchar(10);
cd_medico_exec_w		varchar(10);
ie_anest_medico_w		varchar(1);
ie_gerar_partic_w		varchar(1);
ie_funcao_medico_prescr_w	varchar(10);
ie_via_acesso_w		varchar(1);
ie_tipo_atendimento_w	smallint;
ie_medico_executor_w   	varchar(1);
cd_cgc_retorno_w		varchar(14);
cd_medico_retorno_w	varchar(10);
cd_pessoa_fisica_ww	varchar(10);
ie_vinc_medic_w		varchar(1);
ie_medico_nulo_w		varchar(1):='N';
ie_cons_forma_reg_qtd_w	varchar(1):='N';
ie_forma_apresentacao_w	smallint;
dt_inicio_procedimento_w	timestamp;
ie_doc_convenio_w	varchar(3);
varpermite_setor_exlusivo	varchar(1);
ie_setor_exclusivo_w	bigint;
tx_procedimento_w		double precision;
varrealizarprocprinc		varchar(1);
ie_vinc_proc_pric_w	varchar(10) := 'N';
qt_proc_opm_w		bigint;
nr_sequencia_real_w	bigint;
nr_seq_proc_princ_w	bigint;
ie_gerar_convenio_w	varchar(1);
ie_gerar_partic_ww		varchar(1);
cd_funcao_w		smallint;
nr_seq_classificacao_w	bigint;
ie_gerar_via_w		varchar(1);
ie_medico_exec_regra_w	varchar(1);
cd_medico_exec_regra_w	varchar(10):= null;
ie_perm_proc_atend_fec_w	varchar(1);
dt_fim_conta_w		timestamp;
ie_calc_porte_w		varchar(1);
dt_final_cirurgia_w		timestamp;
ie_funcao_medico_part_w	varchar(1);
ie_funcao_medic_partic_w	varchar(10) := null;
ie_proc_princ_video_w	varchar(1);
qt_equip_video_w		bigint;
cd_procedimento_princ_w	bigint;
ie_origem_proced_princ_w	bigint;
ie_glosa_partic_autor_negada_w	varchar(15) := 'N';
qt_reg_w			bigint;
ie_tipo_procedimento_w		varchar(1);
ie_origem_inf_w			varchar(1);
cd_cgc_laboratorio_w		varchar(14);
ie_executa_proc_princ_adic_w	varchar(1):= 'N';
ie_vincula_medic_proc_w			varchar(1);
ie_preenche_funcao_medico_w	varchar(1);
ie_funcao_nula_w		varchar(1) := 'N';
cd_medico_executor_ww		varchar(10) 	:= null;
cd_especialidade_w		integer 	:= null;
ie_espec_medico_w		varchar(1);
cd_convenio_excesso_w		integer;
cd_categoria_excesso_w		varchar(10);
ie_carater_cirurgia_w		varchar(1);
ds_historico_proc_prev_w	varchar(4000);
ie_tipo_entrada_w		varchar(255);
cd_setor_proc_w			integer;
cd_setor_prescricao_w		integer;
qt_regra_tx_porte_w		bigint := 0;
cd_perfil_ativo_w		integer;
ds_texto_w			varchar(2000) := null;
ie_lado_w			varchar(15);
ds_texto_aux_w			varchar(255);
cd_motivo_exc_conta_w		parametro_faturamento.cd_motivo_exc_conta%type;
cd_medico_prescricao_w		varchar(10) := null;
ie_medico_prescr_w		varchar(1);
ie_gera_taxa_porte_w		varchar(1);
ie_registro_w			bigint;
cd_estabelecimento_ww		resp_credito_cir.cd_estabelecimento%type;
ie_responsavel_credito_ww	resp_credito_cir.ie_responsavel_credito%type;
nr_seq_partic_anest_w	procedimento_participante.nr_seq_partic%type;
nr_seq_partic_anest_ww	procedimento_participante.nr_seq_partic%type;


c01 CURSOR FOR
	SELECT	'N',
		a.cd_procedimento,
		a.ie_origem_proced,
		c.dt_prescricao ,
	       	b.qt_procedimento,
	       	b.nr_prescricao,
	       	b.nr_sequencia,
	      	b.cd_convenio,
	      	b.cd_categoria,
		b.nr_seq_proc_interno,
		b.cd_medico_exec,
		b.ie_funcao_medico,
		b.ie_via_acesso,
		b.ie_lado,
		CASE WHEN ie_medico_prescr_w='S' THEN c.cd_medico  ELSE null END
	from 	prescr_procedimento b,  
		procedimento a,  
		prescr_medica c
	where 	a.cd_procedimento	= b.cd_procedimento
	and	a.ie_origem_proced 	= b.ie_origem_proced
	and	c.nr_prescricao     	= nr_prescricao_p
	and	coalesce(b.cd_motivo_baixa,0)   = 0
	and	b.nr_prescricao 	= c.nr_prescricao
	and	coalesce(b.dt_suspensao::text, '') = ''
	and (substr(obter_se_proc_lib_exec_pepo(cd_perfil_ativo_w,b.nr_seq_proc_interno,b.ie_origem_proced,''),1,1) = 'S')
	
union

	SELECT	'S',
		x.cd_procedimento_princ,
	       	y.ie_origem_proced,
	       	z.dt_prescricao,
	       	1 qt_procedimento,
	       	x.nr_prescricao,
	       	0 nr_sequencia,
	       	0,
	       	null,
		x.nr_seq_proc_interno,
		null,
		null,
		null,
		x.ie_lado,
		CASE WHEN ie_medico_prescr_w='S' THEN z.cd_medico  ELSE null END 
	from	cirurgia x, 
		procedimento y, 
		prescr_medica z
	where	x.cd_procedimento_princ	= y.cd_procedimento
	and	x.ie_origem_proced	= y.ie_origem_proced
	and	x.nr_prescricao   	= z.nr_prescricao
	and	x.nr_prescricao		= nr_prescricao_p
	and	varrealizarprocprinc	= 'S'
	and 	ie_executa_proc_princ_adic_w = 'N'
	and (substr(obter_se_proc_lib_exec_pepo(cd_perfil_ativo_w,x.nr_seq_proc_interno,x.ie_origem_proced,''),1,1) = 'S')
	and not exists (	select	w.cd_procedimento
        	          	from	procedimento_paciente w
                	  	where	x.cd_procedimento_princ 	= w.cd_procedimento
						and		x.ie_origem_proced			= w.ie_origem_proced
						and		coalesce(x.nr_seq_proc_interno,0)= coalesce(w.nr_seq_proc_interno,0)
                    	and		w.nr_prescricao 			= nr_prescricao_p
						and		coalesce(w.cd_motivo_exc_conta::text, '') = '')
	and not exists (	select	v.cd_procedimento
        	          	from	prescr_procedimento v
                	  	where	x.cd_procedimento_princ	 	= v.cd_procedimento
				and	x.ie_origem_proced		= v.ie_origem_proced
				and	coalesce(x.nr_seq_proc_interno,0)	= coalesce(v.nr_seq_proc_interno,0)
				and	coalesce(v.dt_suspensao::text, '') = ''
                    		and	v.nr_prescricao 		= nr_prescricao_p)
	
union

	select	'S',
		x.cd_procedimento_princ,
	       	y.ie_origem_proced,
	       	z.dt_prescricao,
	       	1 qt_procedimento,
	       	x.nr_prescricao,
	       	0 nr_sequencia,
	       	0,
	       	null,
		x.nr_seq_proc_interno,
		null,
		null,
		null,
		x.ie_lado,
		CASE WHEN ie_medico_prescr_w='S' THEN z.cd_medico  ELSE null END 
	from	cirurgia x, 
		procedimento y, 
		prescr_medica z
	where	x.cd_procedimento_princ	= y.cd_procedimento
	and	x.ie_origem_proced	= y.ie_origem_proced
	and	x.nr_prescricao   	= z.nr_prescricao
	and	x.nr_prescricao		= nr_prescricao_p
	and	varrealizarprocprinc	= 'S'
	and	ie_executa_proc_princ_adic_w = 'S'
	and (substr(obter_se_proc_lib_exec_pepo(cd_perfil_ativo_w,x.nr_seq_proc_interno,x.ie_origem_proced,''),1,1) = 'S')
	and not exists (	select	w.cd_procedimento
        	          	from	procedimento_paciente w
                	  	where	x.cd_procedimento_princ 	= w.cd_procedimento
						and		x.ie_origem_proced		= w.ie_origem_proced
						and		coalesce(x.nr_seq_proc_interno,0)	= coalesce(w.nr_seq_proc_interno,0)
                    	and		w.nr_prescricao 		= nr_prescricao_p
						and		coalesce(w.cd_motivo_exc_conta::text, '') = '')
	order by nr_sequencia;



c02 CURSOR FOR
	SELECT	nr_sequencia
	from	procedimento_paciente
	where 	nr_cirurgia	=	nr_cirurgia_p;
	
c03 CURSOR FOR
	SELECT
		a.nr_seq_partic
	FROM
		procedimento_participante   a,
		funcao_medico               b
	WHERE
		a.ie_funcao = b.cd_funcao
		AND a.nr_sequencia = nr_seq_proc_w
		AND coalesce(b.ie_anestesista, 'N') = 'S'
		and a.nr_seq_partic <> nr_seq_partic_anest_w;
							

BEGIN

if (nr_cirurgia_p > 0) then
	select	max(nr_atendimento),
		max(cd_pessoa_fisica),
		max(dt_inicio_real),
		max(dt_entrada_unidade),
		max(cd_medico_cirurgiao),
		max(cd_medico_anestesista),
		max(dt_termino),
		max(ie_carater_cirurgia)
	into STRICT	nr_atendimento_w,
		cd_pessoa_fisica_w,
		dt_inicio_real_w,
		dt_entrada_unidade_w,
		cd_medico_cirurgiao_w,
		cd_medico_anestesista_w,
		dt_termino_w,
		ie_carater_cirurgia_w
	from	cirurgia
	where	nr_cirurgia	=	nr_cirurgia_p;
else
	CALL gerar_cirurgia_hist(nr_cirurgia_p,'RP',wheb_usuario_pck.get_nm_usuario,OBTER_DESC_EXPRESSAO(510692));				-- 510692: 'Nao ha cirurgia selecionada!'
	CALL WHEB_MENSAGEM_PCK.Exibir_Mensagem_Abort(185233);
end if;


cd_perfil_ativo_w := obter_perfil_ativo;

select 	max(dt_fim_conta)
into STRICT	dt_fim_conta_w
from 	atendimento_paciente
where 	nr_atendimento = nr_atendimento_w;

ie_perm_proc_atend_fec_w := obter_param_usuario(900, 196, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_perm_proc_atend_fec_w);

if (ie_perm_proc_atend_fec_w = 'N') and (dt_fim_conta_w IS NOT NULL AND dt_fim_conta_w::text <> '') then
	CALL gerar_cirurgia_hist(nr_cirurgia_p,'RP',wheb_usuario_pck.get_nm_usuario,OBTER_DESC_EXPRESSAO(510693));				-- 510693: 'O atendimento ja esta fechado!'
	CALL WHEB_MENSAGEM_PCK.Exibir_Mensagem_Abort(185234);
end if;


select	coalesce(max(cd_estabelecimento),1),
	max(ie_tipo_atendimento),
	max(nr_seq_classificacao)
into STRICT	cd_estabelecimento_w,
	ie_tipo_atendimento_w,
	nr_seq_classificacao_w
from	atendimento_paciente
where	nr_atendimento	=	nr_atendimento_w;	

ie_funcao_medico_w := obter_param_usuario(900, 230, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_funcao_medico_w);
if (coalesce(ie_funcao_medico_w::text, '') = '') then
	ie_funcao_medico_w := obter_param_usuario(901, 8, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_funcao_medico_w);
end if;
ie_proced_hor_atual_w := obter_param_usuario(901, 92, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_proced_hor_atual_w);
varie_tipo_lancto_w := obter_param_usuario(901, 86, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, varie_tipo_lancto_w);
varie_data_conta_w := obter_param_usuario(900, 34, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, varie_data_conta_w);
varie_medico_anestesista_w := obter_param_usuario(900, 79, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, varie_medico_anestesista_w);
ie_gerar_partic_w := obter_param_usuario(900, 109, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_gerar_partic_w);
ie_vinc_medic_w := obter_param_usuario(900, 176, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_vinc_medic_w);
ie_cons_forma_reg_qtd_w := obter_param_usuario(900, 201, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_cons_forma_reg_qtd_w);
varpermite_setor_exlusivo := obter_param_usuario(900, 218, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, varpermite_setor_exlusivo);
varrealizarprocprinc := obter_param_usuario(900, 223, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, varrealizarprocprinc);
ie_gerar_convenio_w := obter_param_usuario(900, 227, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_gerar_convenio_w);
ie_gerar_partic_ww := obter_param_usuario(900, 20, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_gerar_partic_ww);
ie_gerar_via_w := obter_param_usuario(900, 276, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_gerar_via_w);
ie_medico_exec_regra_w := obter_param_usuario(900, 288, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_medico_exec_regra_w);
ie_consiste_categoria_w := obter_param_usuario(900, 355, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_consiste_categoria_w);
ie_proc_princ_video_w := obter_param_usuario(900, 376, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_proc_princ_video_w);
ie_glosa_partic_autor_negada_w := obter_param_usuario(900, 388, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_glosa_partic_autor_negada_w);	
ie_vinc_Proc_Pric_w := obter_param_usuario(900, 436, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_vinc_Proc_Pric_w);
ie_executa_proc_princ_adic_w := obter_param_usuario(900, 439, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_executa_proc_princ_adic_w);
ie_vincula_medic_proc_w := obter_param_usuario(900, 440, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_vincula_medic_proc_w);
ie_preenche_funcao_medico_w := obter_param_usuario(900, 441, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_preenche_funcao_medico_w);
ie_espec_medico_w := obter_param_usuario(900, 442, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_espec_medico_w);
ie_medico_prescr_w := obter_param_usuario(900, 556, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_medico_prescr_w);
ie_gera_taxa_porte_w := obter_param_usuario(872, 536, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_gera_taxa_porte_w);

if (ie_gerar_partic_ww = 'P') then
	if (cd_medico_anestesista_w IS NOT NULL AND cd_medico_anestesista_w::text <> '') then
		select	min(cd_funcao)
		into STRICT	cd_funcao_w
		from	funcao_medico
		where	ie_anestesista	=	'S';
		
		if (cd_funcao_w > 0) then
			CALL gerar_participante_cirurgia(cd_medico_anestesista_w, nr_cirurgia_p,cd_funcao_w,'A',nm_usuario_p);
		end if;
	ie_tipo_entrada_w := ie_tipo_entrada_w || ',' ||'1';
	end if;
	
	if (cd_medico_cirurgiao_w IS NOT NULL AND cd_medico_cirurgiao_w::text <> '') then
		select	min(cd_funcao)
		into STRICT	cd_funcao_w
		from	funcao_medico
		where	ie_cirurgiao	=	'S';
		
		if (cd_funcao_w > 0) then
			CALL gerar_participante_cirurgia(cd_medico_cirurgiao_w, nr_cirurgia_p,cd_funcao_w,'C',nm_usuario_p);
		end if;
	ie_tipo_entrada_w := ie_tipo_entrada_w || ',' ||'2';
	end if;
end if;

dt_procedimento_w :=	dt_inicio_real_w;	
if (ie_proced_hor_atual_w = 'S') then
	dt_procedimento_w := clock_timestamp();
end if;

if (dt_procedimento_w < dt_entrada_unidade_w) then
	dt_procedimento_w	:= dt_entrada_unidade_w;
	ie_tipo_entrada_w := ie_tipo_entrada_w || ',' ||'3';
end if;

begin
select	cd_setor_atendimento,
	nr_seq_interno
into STRICT	cd_setor_atendimento_w,
	nr_seq_interno_w
from	atend_paciente_unidade
where	dt_entrada_unidade	=	dt_entrada_unidade_w
and	nr_atendimento		=	nr_atendimento_w;
exception
when others then
	CALL gerar_cirurgia_hist(nr_cirurgia_p,'RP',wheb_usuario_pck.get_nm_usuario,OBTER_DESC_EXPRESSAO(510690));				-- 510690: 'Nao foi gerado passagem de setor para esta cirurgia!'
	CALL WHEB_MENSAGEM_PCK.Exibir_Mensagem_Abort(185231);
end;

update	prescr_procedimento
set	cd_setor_atendimento	=	cd_setor_atendimento_w
where	nr_prescricao		=	nr_prescricao_p
and	coalesce(cd_setor_atendimento::text, '') = '';	
		
select	CASE WHEN count(*)=0 THEN  'N'  ELSE 'S' END
into STRICT	ie_anest_medico_w
from	medico
where	cd_pessoa_fisica	= cd_medico_anestesista_w;
		
if (varie_medico_anestesista_w	= 'S') and (ie_anest_medico_w = 'S') then
	cd_medico_cirurgiao_w	:= cd_medico_anestesista_w;
	ie_tipo_entrada_w := ie_tipo_entrada_w || ',' ||'4';
end if;

open c01;
loop
fetch c01 into
	ie_tipo_procedimento_w,
	cd_procedimento_w,
	ie_origem_proced_w,
	dt_prescricao_w,
	qt_procedimento_w,
	nr_prescricao_w,
	nr_sequencia_w,
	cd_convenio_ww,
	cd_categoria_ww,
	nr_seq_proc_interno_w,
	cd_medico_exec_w,
	ie_funcao_medico_prescr_w,
	ie_via_acesso_w,
	ie_lado_w,
	cd_medico_prescricao_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	if (coalesce(cd_convenio_ww,0) = 0) and (coalesce(cd_categoria_ww,'XPTO') = 'XPTO') and (ie_gerar_convenio_w = 'S') then
		select	max(cd_convenio),
			max(cd_categoria)
		into STRICT	cd_convenio_ww,
			cd_categoria_ww
		from	cirurgia
		where	nr_cirurgia	=	nr_cirurgia_p;
		ie_tipo_entrada_w := ie_tipo_entrada_w || ',' ||'5';
	end if;
	
	if (coalesce(cd_categoria_ww::text, '') = '') and (ie_consiste_categoria_w = 'S') then
		CALL gerar_cirurgia_hist(nr_cirurgia_p,'RP',wheb_usuario_pck.get_nm_usuario,OBTER_DESC_EXPRESSAO(512320));		--	512320: 'e obrigatorio informar a categoria do convenio na cirurgia!'
		CALL WHEB_MENSAGEM_PCK.Exibir_Mensagem_Abort(185232);
	end if;
	
	if (varpermite_setor_exlusivo = 'N') then
		ie_setor_exclusivo_w := verifica_setor_exclusivo(cd_procedimento_w, ie_origem_proced_w, cd_setor_atendimento_w, nr_seq_proc_interno_w, nm_usuario_p);
		if (ie_setor_exclusivo_w = 0) then
			CALL gerar_cirurgia_hist(nr_cirurgia_p,'RP',wheb_usuario_pck.get_nm_usuario,OBTER_DESC_EXPRESSAO(510694));	-- 510694: 'O usuario nao esta autorizado a executar este procedimento/setor do paciente. Parametro[218]'
			CALL WHEB_MENSAGEM_PCK.Exibir_Mensagem_Abort(185235);
		end if;
		ie_tipo_entrada_w := ie_tipo_entrada_w || ',' ||'6';
	end if;
	
	ds_erro_w := consiste_paciente_proc(nr_seq_proc_interno_w, nr_atendimento_w, cd_pessoa_fisica_w, cd_procedimento_w, ie_origem_proced_w, ds_erro_w);

	if (ds_erro_w IS NOT NULL AND ds_erro_w::text <> '') then
		CALL gerar_cirurgia_hist(nr_cirurgia_p,'RP',wheb_usuario_pck.get_nm_usuario,OBTER_DESC_EXPRESSAO(729636)); 		-- 729636: 'Favor verificar as inconsistencias em: Cadastros gerais/Aplicacao Principal/Faturamento/Inconsistencia'
		CALL WHEB_MENSAGEM_PCK.Exibir_Mensagem_Abort(185236,'DS_ERRO_W='|| ds_erro_w	);
	end if;	
	
	/*
	Dalcastagne em 03/04/2009 - OS 140262
	
	if	(nvl(cd_convenio_ww,0) = 0) then
		Obter_Convenio_Execucao(nr_atendimento_w, dt_procedimento_w, cd_convenio_w, cd_categoria_w,nr_doc_convenio_w,ie_tipo_guia_w,cd_senha_w);
	else
		cd_convenio_w	:= cd_convenio_ww;
		cd_categoria_w	:= cd_categoria_ww;
	end if;	
	*/

	--Obter_Convenio_Execucao(nr_atendimento_w, dt_procedimento_w, cd_convenio_w, cd_categoria_w,nr_doc_convenio_w,ie_tipo_guia_w,cd_senha_w);
	if (coalesce(cd_convenio_ww,0) = 0) then
		SELECT * FROM obter_convenio_execucao(nr_atendimento_w, dt_procedimento_w, cd_convenio_w, cd_categoria_w, nr_doc_convenio_w, ie_tipo_guia_w, cd_senha_w) INTO STRICT cd_convenio_w, cd_categoria_w, nr_doc_convenio_w, ie_tipo_guia_w, cd_senha_w;
		ie_tipo_entrada_w := ie_tipo_entrada_w || ',' ||'7';
	else
		cd_convenio_w	:= cd_convenio_ww;
		cd_categoria_w	:= cd_categoria_ww;
		
		select	max(nr_doc_convenio),
			max(ie_tipo_guia),
			max(cd_senha),
			max(cd_categoria)
		into STRICT	nr_doc_convenio_w,
			ie_tipo_guia_w,
			cd_senha_w,
			cd_categoria_ww
		from 	atend_categoria_convenio
		where	nr_atendimento	= nr_atendimento_w
		and	nr_seq_interno	=
				(	SELECT	max(nr_seq_interno)
					from	atend_categoria_convenio
					where	nr_atendimento		= nr_atendimento_w
					and	dt_inicio_vigencia	<= dt_procedimento_w
					and	cd_convenio		= coalesce(cd_convenio_w,cd_categoria)
					and	cd_categoria		= coalesce(cd_categoria_w,cd_categoria));
					
		select	obter_valor_conv_estab(cd_convenio, cd_estabelecimento_w, 'IE_DOC_CONVENIO')
		into STRICT 	ie_doc_convenio_w
		from 	convenio
		where	cd_convenio	= cd_convenio_w;

		if (ie_doc_convenio_w = 'S') then
			nr_doc_convenio_w := coalesce(cd_senha_w, nr_doc_convenio_w);
			ie_tipo_entrada_w := ie_tipo_entrada_w || ',' ||'8';
		elsif (ie_doc_convenio_w in ('N','T')) then
			nr_doc_convenio_w := null;
		end if;

		if (ie_doc_convenio_w	<> 'A') then
			cd_senha_w		:= null;
		end if;
		ie_tipo_entrada_w := ie_tipo_entrada_w || ',' ||'9';
	end if;	
	
	if (coalesce(nr_prescricao_w,0) > 0) then
	
		select	max(cd_setor_atendimento)
		into STRICT	cd_setor_prescricao_w
		from	prescr_medica
		where	nr_prescricao = nr_prescricao_w;
	
		if (coalesce(nr_sequencia_w,0) > 0) then
			select	max(ie_origem_inf),
				max(cd_cgc_laboratorio)
			into STRICT	ie_origem_inf_w,
				cd_cgc_laboratorio_w
			from	prescr_procedimento
			where	nr_prescricao = nr_prescricao_w
			and	nr_sequencia = nr_sequencia_w;
			ie_tipo_entrada_w := ie_tipo_entrada_w || ',' ||'10';
		end if;
		
	end if;
	
	SELECT * FROM consiste_medico_executor(	cd_estabelecimento_w, cd_convenio_w, cd_setor_atendimento_w, cd_procedimento_w, ie_origem_proced_w, ie_tipo_atendimento_w, null, nr_seq_proc_interno_w, ie_medico_executor_w, cd_cgc_retorno_w, cd_medico_retorno_w, cd_pessoa_fisica_ww, coalesce(cd_medico_exec_w,cd_medico_cirurgiao_w), dt_procedimento_w, nr_seq_classificacao_w, ie_origem_inf_w, cd_cgc_laboratorio_w, cd_setor_prescricao_w) INTO STRICT ie_medico_executor_w, cd_cgc_retorno_w, cd_medico_retorno_w, cd_pessoa_fisica_ww;
				
	select	nextval('procedimento_paciente_seq')
	into STRICT	nr_seq_proc_w
	;
	
	select	max(ie_classificacao),
		max(cd_tipo_procedimento),
		max(ie_forma_apresentacao)
	into STRICT	ie_classificacao_w,
		cd_tipo_procedimento_w,
		ie_forma_apresentacao_w
	from	procedimento
	where	cd_procedimento		= cd_procedimento_w
	and	ie_origem_proced	= ie_origem_proced_w;
	
	if	(ie_vinc_medic_w = 'N' AND ie_classificacao_w <> 1) or
		(ie_vincula_medic_proc_w = 'N' AND ie_classificacao_w = 1)		then
		ie_medico_nulo_w := 'S';
		ie_tipo_entrada_w := ie_tipo_entrada_w || ',' ||'11';
	else		
		ie_medico_nulo_w := 'N';
	end if;	
	
			
	if (ie_cons_forma_reg_qtd_w = 'S') then
		if (ie_forma_apresentacao_w in (2,3,10,11,12,13)) then		
			select	coalesce(obter_qte_proced_cirurgia(cd_procedimento_w, ie_origem_proced_w, dt_termino_w, dt_inicio_real_w),0)
			into STRICT	qt_procedimento_w
			;
		ie_tipo_entrada_w := ie_tipo_entrada_w || ',' ||'12';
		end if;
	end if;	
	
	if (ie_gerar_via_w = 'S') then
		ie_via_acesso_w := obter_regra_via_acesso(cd_procedimento_w, ie_origem_proced_w, cd_estabelecimento_w, cd_convenio_w);
	end if;
	
	tx_procedimento_w:= 100;
	if (ie_via_acesso_w IS NOT NULL AND ie_via_acesso_w::text <> '') then
		select 	obter_tx_proc_via_acesso(ie_via_acesso_w)
		into STRICT	tx_procedimento_w
		;
	end if;


	if (ie_medico_exec_regra_w = 'S') then
		cd_medico_exec_regra_w := cd_medico_retorno_w;
	end if;	
	
	ie_funcao_medico_part_w := obter_param_usuario(900, 368, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_funcao_medico_part_w);
	if (ie_funcao_medico_part_w = 'S') then
		select max(ie_funcao)
		into STRICT   ie_funcao_medic_partic_w
		from   cirurgia_participante
		where  nr_cirurgia = nr_cirurgia_p
		and    cd_pessoa_fisica = CASE WHEN ie_medico_nulo_w='N' THEN coalesce(cd_medico_exec_regra_w,coalesce(cd_medico_exec_w,cd_medico_cirurgiao_w))  ELSE null END;
	end if;		

	if (coalesce(ie_glosa_partic_autor_negada_w,'N') in ('S','P')) then
		begin
		ie_tipo_entrada_w := ie_tipo_entrada_w || ',' ||'13';
		select	sum(a.qt_reg)
		into STRICT	qt_reg_w
		from	(
		SELECT	count(*) qt_reg
		from	procedimento_autorizado a,
			autorizacao_convenio b,
			estagio_autorizacao c
		where	a.nr_prescricao		= nr_prescricao_w
		and	a.nr_seq_prescricao	= nr_sequencia_w
		and	a.nr_sequencia_autor	= b.nr_sequencia
		and	b.nr_seq_estagio	= c.nr_sequencia
		and	((c.ie_interno		= '90' and ie_glosa_partic_autor_negada_w = 'S') or (c.ie_interno		in ('90','1') and ie_glosa_partic_autor_negada_w = 'P'))	

		
union

		SELECT	count(*) qt_reg
		from	procedimento_autorizado a,
			autorizacao_convenio b,
			estagio_autorizacao c
		where	obter_cirurgia_autor_convenio(b.nr_sequencia,'NR') = nr_cirurgia_p
		and	a.cd_procedimento	= cd_procedimento_w
		and	a.nr_sequencia_autor	= b.nr_sequencia
		and	b.nr_seq_estagio	= c.nr_sequencia
		and	((c.ie_interno		= '90' and ie_glosa_partic_autor_negada_w = 'S') or (c.ie_interno		in ('90','1') and ie_glosa_partic_autor_negada_w = 'P'))) a;

		if (qt_reg_w > 0) then
			SELECT * FROM obter_convenio_particular_pf( cd_estabelecimento_w, cd_convenio_w, null, dt_procedimento_w, cd_convenio_w, cd_categoria_w) INTO STRICT cd_convenio_w, cd_categoria_w;
			ie_tipo_entrada_w := ie_tipo_entrada_w || ',' ||'14';
		end if;
		end;
	end if;			
	
	if (ie_preenche_funcao_medico_w = 'N') and (ie_funcao_medico_prescr_w IS NOT NULL AND ie_funcao_medico_prescr_w::text <> '') then
		ie_funcao_nula_w := 'S';
		ie_tipo_entrada_w := ie_tipo_entrada_w || ',' ||'15';
	end if;
	
	select	CASE WHEN ie_medico_nulo_w='N' THEN coalesce(cd_medico_exec_regra_w,coalesce(cd_medico_exec_w,cd_medico_cirurgiao_w))  ELSE null END
	into STRICT	cd_medico_executor_ww
	;
	
	if (ie_espec_medico_w = 'S') then
		cd_especialidade_w := obter_especialidade_medico(cd_medico_executor_ww,'X');
		ie_tipo_entrada_w := ie_tipo_entrada_w || ',' ||'16';
	end if;	
		
	begin
	insert into procedimento_paciente(
		nr_sequencia,
		cd_procedimento,
		ie_origem_proced,
		dt_prescricao,
		qt_procedimento,
		cd_pessoa_fisica,
		ie_funcao_medico,
		cd_convenio,
		cd_categoria,
		ie_proc_princ_atend,
		ie_video,
		tx_medico,
		tx_anestesia,
		tx_procedimento,
		ie_valor_informado,
		ie_guia_informada,
		cd_situacao_glosa,
		nm_usuario_original,
		nr_atendimento,
		cd_setor_atendimento,
		dt_entrada_unidade,
		nr_seq_atepacu,
		ie_auditoria,
		ie_emite_conta,
		cd_cgc_prestador,
		nr_seq_proc_interno,
		dt_procedimento,
		dt_atualizacao,
		nm_usuario,
		nr_cirurgia,
		nr_prescricao,
		nr_sequencia_prescricao,
		cd_medico_executor,
		cd_medico_req,
		dt_conta,
		nr_doc_convenio,
		ie_tipo_guia,
		cd_senha,
		ie_via_acesso,
		cd_especialidade,
		ie_carater_cirurgia,
		ie_lado)
	values (
		nr_seq_proc_w,
		cd_procedimento_w,
		ie_origem_proced_w,
		dt_prescricao_w,
		CASE WHEN qt_procedimento_w=0 THEN  1  ELSE qt_procedimento_w END ,
		CASE WHEN ie_origem_proced_w=7 THEN null  ELSE obter_pessoa_fisica_usuario(nm_usuario_p,'C') END ,
		CASE WHEN ie_funcao_nula_w='S' THEN  null  ELSE coalesce(coalesce(ie_funcao_medic_partic_w,ie_funcao_medico_prescr_w),coalesce(ie_funcao_medico_w,'1')) END ,
		cd_convenio_w,
		cd_categoria_w,	
		'N',
		'N',
		100,
		100,
		coalesce(tx_procedimento_w,100),
		'N',
		'N',
		0,
		nm_usuario_p,
		nr_atendimento_w,
		cd_setor_atendimento_w,
		dt_entrada_unidade_w,
		nr_seq_interno_w,
		'N',
		'N',
		coalesce(cd_cgc_retorno_w, obter_cgc_estabelecimento(cd_estabelecimento_w)),
		nr_seq_proc_interno_w,
		dt_procedimento_w,
		clock_timestamp(),
		nm_usuario_p,
		nr_cirurgia_p,
		nr_prescricao_w,
		CASE WHEN nr_sequencia_w=0 THEN null  ELSE nr_sequencia_w END ,
		cd_medico_executor_ww,
		CASE WHEN ie_medico_nulo_w='N' THEN coalesce(cd_medico_prescricao_w,coalesce(cd_medico_exec_w,cd_medico_cirurgiao_w))  ELSE null END ,
		CASE WHEN varie_data_conta_w='S' THEN  dt_procedimento_w WHEN varie_data_conta_w='F' THEN  dt_termino_w  ELSE null END ,
		nr_doc_convenio_w,
		ie_tipo_guia_w,
		cd_senha_w,
		ie_via_acesso_w,
		cd_especialidade_w,
		ie_carater_cirurgia_w,
		ie_lado_w);
		
	commit;
	
	exception
	when others then
	ie_tipo_entrada_w := ie_tipo_entrada_w || ',' ||'17';
	ds_historico_proc_prev_w := 	substr(OBTER_DESC_EXPRESSAO(330290) || ' '||obter_perfil_ativo|| chr(13) || chr(10) ||		-- 330290: 'Perfil:'
							OBTER_DESC_EXPRESSAO(345366)||wheb_usuario_pck.get_cd_funcao|| chr(13) || chr(10) ||				-- 345366: 'Funcao: '
							OBTER_DESC_EXPRESSAO(325814)||nr_prescricao_p|| CHR(13) || CHR(10) ||								-- 325814: 'Prescricao: '
							'cd_procedimento: '|| cd_procedimento_w|| CHR(13) || CHR(10) ||
							'nr_seq_proc_interno: '|| nr_seq_proc_interno_w|| CHR(13) || CHR(10) ||
							'ie_origem_proced: '|| ie_origem_proced_w|| CHR(13) || CHR(10) ||
							'qt_procedimento: '|| qt_procedimento_w || CHR(13) || CHR(10) ||
							'cd_convenio: '|| cd_convenio_w|| CHR(13) || CHR(10) ||
							'cd_categoria: '|| cd_categoria_w|| CHR(13) || CHR(10) ||
							'tx_procedimento: '|| coalesce(tx_procedimento_w,100)|| CHR(13) || CHR(10) ||
							'nm_usuario_original: '|| nm_usuario_p|| CHR(13) || CHR(10) ||
							'nr_atendimento: '|| nr_atendimento_w|| CHR(13) || CHR(10) ||
							'cd_setor_atendimento: '|| cd_setor_atendimento_w|| CHR(13) || CHR(10) ||
							'dt_entrada_unidade: '|| dt_entrada_unidade_w|| CHR(13) || CHR(10) || 
							'nr_seq_atepacu: '|| nr_seq_interno_w|| CHR(13) || CHR(10) ||  
							'nr_cirurgia: '|| nr_cirurgia_p|| CHR(13) || CHR(10) ||
							'ie_funcao_medico_part_w: '|| ie_funcao_medico_part_w|| CHR(13) || CHR(10) || 
							'qt_reg_w: '|| qt_reg_w|| CHR(13) || CHR(10) ||	
							'ie_funcao_medico_w: '|| ie_funcao_medico_w|| CHR(13) || CHR(10) ||
							'dt_procedimento_w: '|| dt_procedimento_w|| CHR(13) || CHR(10) || 
							'varie_data_conta_w: '|| varie_data_conta_w|| CHR(13) || CHR(10) ||
							'dt_termino_w: '|| dt_termino_w|| CHR(13) || CHR(10) ||	
							'cd_medico_anestesista_w: '|| cd_medico_anestesista_w|| CHR(13) || CHR(10) || 
							'cd_medico_cirurgiao_w: '|| cd_medico_cirurgiao_w|| CHR(13) || CHR(10) ||
							'nr_doc_convenio_w: '|| nr_doc_convenio_w|| CHR(13) || CHR(10) ||
							'ie_tipo_guia_w: '|| ie_tipo_guia_w|| CHR(13) || CHR(10) ||
							'cd_senha_w: '|| cd_senha_w|| CHR(13) || CHR(10) ||
							'cd_categoria_ww: '|| cd_categoria_ww|| CHR(13) || CHR(10) || 
							'cd_convenio_ww: '|| cd_convenio_ww|| CHR(13) || CHR(10) ||
							'ie_anest_medico_w: '|| ie_anest_medico_w|| CHR(13) || CHR(10) || 
							'ie_forma_apresentacao_w: '||ie_forma_apresentacao_w|| CHR(13) || CHR(10) || 
							'cd_medico_exec_regra_w: '||cd_medico_exec_regra_w|| CHR(13) || CHR(10) ||
							'ie_glosa_partic_autor_negada_w: '||ie_glosa_partic_autor_negada_w|| CHR(13) || CHR(10) ||
							'cd_especialidade_w: '||cd_especialidade_w|| CHR(13) || CHR(10) ||
							'ie_carater_cirurgia_w: '||ie_carater_cirurgia_w|| CHR(13) || CHR(10) ||
							OBTER_DESC_EXPRESSAO(729644)||ie_tipo_entrada_w,1,3000);											-- 729644: 'Entradas: '
					
	CALL gerar_cirurgia_hist(nr_cirurgia_p,'RP',wheb_usuario_pck.get_nm_usuario,ds_historico_proc_prev_w);					
	CALL WHEB_MENSAGEM_PCK.Exibir_Mensagem_Abort(191586,'DS_ERRO='|| substr(SQLERRM(SQLSTATE),1,255));
	end;

	
	if (ie_gerar_partic_w = 'S') then
		CALL gravar_partic_proced(nr_seq_proc_w, nm_usuario_p);
		ie_tipo_entrada_w := ie_tipo_entrada_w || ',' ||'18';
	end if;

	if (ie_classificacao_w in (1,8)) then 		
		CALL atualiza_preco_procedimento(nr_seq_proc_w,cd_convenio_w,nm_usuario_p);
		if ((coalesce(ie_gera_taxa_porte_w, 'S') = 'S') or (coalesce(ie_java_html_p,'N') = 'N')) then
			CALL gerar_taxa_sala_porte(nr_atendimento_w,dt_entrada_unidade_w,dt_procedimento_w,cd_procedimento_w,nr_seq_proc_w,nm_usuario_p);
		end if;
		ie_tipo_entrada_w := ie_tipo_entrada_w || ',' ||'19';
	else
		CALL atualiza_preco_servico(nr_seq_proc_w,nm_usuario_p);
	end if;
	
	CALL gerar_gatilho_pacote(nr_seq_proc_w,cd_convenio_w,'N',nm_usuario_p);

	if (coalesce(varie_tipo_lancto_w,'0') = '0') then
	--	Gerar_Lanc_Automatico_mat(nr_atendimento_w,null,132,nm_usuario_p,nr_seq_proc_w,null,null);
		CALL gerar_lancamento_automatico(nr_atendimento_w,null,34,nm_usuario_p,nr_seq_proc_w,null,null,null,nr_cirurgia_p,null);/*Anderson em 16/05/2011 - retirei o parametro do numero de cirurgia que passava errado para o numero da conta.. Conversado com Dalcastagne*/
		ie_tipo_entrada_w := ie_tipo_entrada_w || ',' ||'20';
	end if;

	CALL gerar_autor_regra(nr_atendimento_w,null,nr_seq_proc_w,null,null,null,'EP',nm_usuario_p,null,nr_seq_proc_interno_w,null,null,null,null,'','','');
	
	ie_regra_uso_w := obter_param_usuario(900, 400, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_regra_uso_w);
	
	if (ie_regra_uso_w = 'S') then
	
		ie_tipo_entrada_w := ie_tipo_entrada_w || ',' ||'18';
		select	max(nr_atendimento),
			max(qt_procedimento),
			max(dt_procedimento),
			max(cd_medico_executor),
			max(cd_categoria),
			max(nr_cirurgia),
			max(nr_interno_conta),
			max(cd_setor_atendimento)
		into STRICT	nr_atendimento_ww,
			qt_lancamento_w,
			dt_execucao_w,
			cd_medico_executor_w,
			cd_categoria_www,
			nr_cirurgia_propaci_w,
			nr_interno_conta_ww,
			cd_setor_proc_w
		from	procedimento_paciente
		where	nr_sequencia = nr_seq_proc_w;
					
		SELECT * FROM obter_regra_qtde_proc_exec(nr_atendimento_ww, cd_procedimento_w, ie_origem_proced_w, qt_lancamento_w, dt_execucao_w, cd_medico_executor_w, ie_acao_excesso_w, qt_excedida_w, ds_erro_w, cd_convenio_excesso_w, cd_categoria_excesso_w, nr_seq_proc_interno_w, cd_categoria_www, NULL, 0, nr_cirurgia_propaci_w, null, cd_setor_proc_w, null) INTO STRICT ie_acao_excesso_w, qt_excedida_w, ds_erro_w, cd_convenio_excesso_w, cd_categoria_excesso_w;
									
		if (ie_acao_excesso_w = 'E') then
			if (qt_excedida_w   > 0) then

					--Excluido pela regra de uso da funcao Cadastro de Convenios
					ds_texto_aux_w := substr(wheb_mensagem_pck.get_texto(300556),1,255);
					
					select	max(cd_motivo_exc_conta)
					into STRICT	cd_motivo_exc_conta_w
					from	parametro_faturamento
					where	cd_estabelecimento = cd_estabelecimento_w;			
					
				CALL excluir_matproc_conta(nr_seq_proc_w, nr_interno_conta_ww, coalesce(cd_motivo_exc_conta_w, 12), ds_texto_aux_w, 'P', nm_usuario_p);				
						
			end if;
			ie_tipo_entrada_w := ie_tipo_entrada_w || ',' ||'19';
		elsif (ie_acao_excesso_w = 'P') then
			if (qt_excedida_w   > 0) then
				
				 SELECT * FROM obter_convenio_particular_pf(cd_estabelecimento_w, cd_convenio_w, '', dt_execucao_w, cd_convenio_glosa_w, cd_categoria_glosa_w) INTO STRICT cd_convenio_glosa_w, cd_categoria_glosa_w;
					
				update	procedimento_paciente
				set	nr_interno_conta	 = NULL,
					cd_convenio		= cd_convenio_glosa_w,
					cd_categoria		= cd_categoria_glosa_w
				where	nr_sequencia 		= nr_seq_proc_w;
				
				commit;
				
				CALL atualiza_preco_procedimento(nr_seq_proc_w, cd_convenio_w, nm_usuario_p);
				CALL Ajustar_Conta_Vazia(nr_atendimento_ww, nm_usuario_p);
				
			end if;
			ie_tipo_entrada_w := ie_tipo_entrada_w || ',' ||'20';
		elsif (ie_acao_excesso_w = 'Z') then
			if (qt_excedida_w   > 0) then
			
				update	procedimento_paciente
				set	vl_anestesista		= 0,
					vl_auxiliares		= 0,           
					vl_custo_operacional	= 0,    
					vl_materiais		= 0,            
					vl_medico		= 0,   
					vl_procedimento		= 0,
					ie_valor_informado	= 'S'
				where	nr_sequencia 		= nr_seq_proc_w;
				
				commit;
			
			end if;
			ie_tipo_entrada_w := ie_tipo_entrada_w || ',' ||'21';	
		elsif (ie_acao_excesso_w = 'C') then
		
			if (qt_excedida_w   > 0) and
				(cd_convenio_excesso_w IS NOT NULL AND cd_convenio_excesso_w::text <> '' AND cd_categoria_excesso_w IS NOT NULL AND cd_categoria_excesso_w::text <> '') then
				update	procedimento_paciente
				set	nr_interno_conta	 = NULL,
					cd_convenio		= cd_convenio_excesso_w,
					cd_categoria		= cd_categoria_excesso_w
				where	nr_sequencia 		= nr_sequencia_w;
				
				
				CALL atualiza_preco_procedimento(nr_sequencia_w, cd_convenio_excesso_w, nm_usuario_p);
				
				CALL Ajustar_Conta_Vazia(nr_atendimento_w, nm_usuario_p);
			end if;
			ie_tipo_entrada_w := ie_tipo_entrada_w || ',' ||'22';
		end if;
		
	end if;
	
	end;
	ie_tipo_entrada_w := ie_tipo_entrada_w || ',' ||'23';	
	ds_historico_proc_prev_w := 	substr(OBTER_DESC_EXPRESSAO(330290) || ' '||obter_perfil_ativo|| chr(13) || chr(10) ||					-- 330290: 'Perfil:'
							OBTER_DESC_EXPRESSAO(345366)||wheb_usuario_pck.get_cd_funcao|| chr(13) || chr(10) ||							-- 345366: 'Funcao: '
							OBTER_DESC_EXPRESSAO(325814)||nr_prescricao_p|| CHR(13) || CHR(10) ||											-- 325814: 'Prescricao: '
							'cd_procedimento: '|| cd_procedimento_w|| CHR(13) || CHR(10) ||
							'nr_seq_proc_interno: '|| nr_seq_proc_interno_w|| CHR(13) || CHR(10) ||
							'ie_origem_proced: '|| ie_origem_proced_w|| CHR(13) || CHR(10) ||
							'qt_procedimento: '|| qt_procedimento_w || CHR(13) || CHR(10) ||
							'cd_convenio: '|| cd_convenio_w|| CHR(13) || CHR(10) ||
							'cd_categoria: '|| cd_categoria_w|| CHR(13) || CHR(10) ||
							'tx_procedimento: '|| coalesce(tx_procedimento_w,100)|| CHR(13) || CHR(10) ||
							'nm_usuario_original: '|| nm_usuario_p|| CHR(13) || CHR(10) ||
							'nr_atendimento: '|| nr_atendimento_w|| CHR(13) || CHR(10) ||
							'cd_setor_atendimento: '|| cd_setor_atendimento_w|| CHR(13) || CHR(10) || 
							'dt_entrada_unidade: '|| dt_entrada_unidade_w|| CHR(13) || CHR(10) || 
							'nr_seq_atepacu: '|| nr_seq_interno_w|| CHR(13) || CHR(10) || 
							'nr_cirurgia: '|| nr_cirurgia_p|| CHR(13) || CHR(10) ||
							'ie_funcao_medico_part_w: '|| ie_funcao_medico_part_w|| CHR(13) || CHR(10) || 
							'qt_reg_w: '|| qt_reg_w|| CHR(13) || CHR(10) ||	
							'ie_funcao_medico_w: '|| ie_funcao_medico_w|| CHR(13) || CHR(10) ||
							'dt_procedimento_w: '|| dt_procedimento_w|| CHR(13) || CHR(10) || 
							'varie_data_conta_w: '|| varie_data_conta_w|| CHR(13) || CHR(10) ||
							'dt_termino_w: '|| dt_termino_w|| CHR(13) || CHR(10) ||	
							'cd_medico_anestesista_w: '|| cd_medico_anestesista_w|| CHR(13) || CHR(10) || 
							'cd_medico_cirurgiao_w: '|| cd_medico_cirurgiao_w|| CHR(13) || CHR(10) ||
							'nr_doc_convenio_w: '|| nr_doc_convenio_w|| CHR(13) || CHR(10) ||
							'ie_tipo_guia_w: '|| ie_tipo_guia_w|| CHR(13) || CHR(10) ||
							'cd_senha_w: '|| cd_senha_w|| CHR(13) || CHR(10) ||
							'cd_categoria_ww: '|| cd_categoria_ww|| CHR(13) || CHR(10) || 
							'cd_convenio_ww: '|| cd_convenio_ww|| CHR(13) || CHR(10) ||
							'ie_anest_medico_w: '|| ie_anest_medico_w|| CHR(13) || CHR(10) || 
							'ie_forma_apresentacao_w: '||ie_forma_apresentacao_w|| CHR(13) || CHR(10) || 
							'cd_medico_exec_regra_w: '||cd_medico_exec_regra_w|| CHR(13) || CHR(10) ||
							'ie_glosa_partic_autor_negada_w: '||ie_glosa_partic_autor_negada_w|| CHR(13) || CHR(10) ||
							'cd_especialidade_w: '||cd_especialidade_w|| CHR(13) || CHR(10) ||
							'ie_carater_cirurgia_w: '||ie_carater_cirurgia_w|| CHR(13) || CHR(10) ||
							'ie_classificacao_w: '||ie_classificacao_w|| CHR(13) || CHR(10) ||
							'varie_tipo_lancto_w: '||varie_tipo_lancto_w|| CHR(13) || CHR(10) ||
							'ie_regra_uso_w: '||ie_regra_uso_w|| CHR(13) || CHR(10) ||
							'ie_acao_excesso_w: '||ie_acao_excesso_w|| CHR(13) || CHR(10) || 
							'qt_excedida_w: '||qt_excedida_w|| CHR(13) || CHR(10) ||
							OBTER_DESC_EXPRESSAO(729644)||ie_tipo_entrada_w,1,3000);														-- 729644: 'Entradas: '
					
	CALL gerar_cirurgia_hist(nr_cirurgia_p,'RP',wheb_usuario_pck.get_nm_usuario,ds_historico_proc_prev_w);	
	ie_tipo_entrada_w := null;

	
	select	count(1)
	into STRICT 	ie_registro_w
	from 	resp_credito_cir
	where 	nr_cirurgia = nr_cirurgia_p
	and 	cd_pessoa_fisica = coalesce(cd_medico_executor_ww, cd_pessoa_fisica);
	
	if (ie_registro_w > 0) then	
		select	max(ie_responsavel_credito), max(cd_estabelecimento)
		into STRICT 	ie_responsavel_credito_ww, cd_estabelecimento_ww
		from 	resp_credito_cir
		where 	nr_cirurgia = nr_cirurgia_p
		and 	cd_pessoa_fisica = coalesce(cd_medico_executor_ww, cd_pessoa_fisica);

		if ( coalesce(ie_responsavel_credito_ww, 'xpto')  <> 'xpto' ) then
			CALL Atualizar_Resp_Credito_Conta( nr_seq_proc_w, 0, cd_estabelecimento_ww, ie_responsavel_credito_ww, 'S', nm_usuario_p);
		end if;
	end if;
	
	ie_responsavel_credito_ww := null;
	
	SELECT
		max(a.ie_responsavel_credito),
		max(b.nr_seq_partic),
		max(a.cd_estabelecimento)
	INTO STRICT
		ie_responsavel_credito_ww,
		nr_seq_partic_anest_w,
		cd_estabelecimento_ww
	FROM
		resp_credito_cir            a,
		procedimento_participante   b,
		procedimento_paciente		c,
		funcao_medico               d
	WHERE
		a.cd_pessoa_fisica = b.cd_pessoa_fisica
		AND b.ie_funcao = d.cd_funcao
		AND b.nr_sequencia = c.nr_sequencia
		AND a.nr_cirurgia = c.nr_cirurgia
		AND a.nr_cirurgia = nr_cirurgia_p
		AND coalesce(a.ie_funcao, 'C') = 'A'
		AND coalesce(d.ie_anestesista, 'N') = 'S';
		
	if (ie_responsavel_credito_ww IS NOT NULL AND ie_responsavel_credito_ww::text <> '' AND nr_seq_partic_anest_w IS NOT NULL AND nr_seq_partic_anest_w::text <> '') then
		CALL Atualizar_Resp_Credito_Partic(nr_seq_proc_w, nr_seq_partic_anest_w, cd_estabelecimento_ww, ie_responsavel_credito_ww, nm_usuario_p);
		
		open c03;
		loop
		fetch c03 into	
			nr_seq_partic_anest_ww;
		EXIT WHEN NOT FOUND; /* apply on c03 */
			begin
				CALL Atualizar_Resp_Credito_Partic(nr_seq_proc_w, nr_seq_partic_anest_ww, cd_estabelecimento_ww, ie_responsavel_credito_ww, nm_usuario_p);
			end;
		end loop;
		close c03;
	end if;
	
end loop;
close c01;

select 	max(cd_convenio)
into STRICT	cd_convenio_w
from 	cirurgia
where 	nr_cirurgia = nr_cirurgia_p;

if (coalesce(cd_convenio_w,0) <> 0) then
	select	coalesce(max(ie_calc_porte),'N')
	into STRICT	ie_calc_porte_w
	from	convenio
	where	cd_convenio = cd_convenio_w;
	
	begin
	select 	max(coalesce(ie_calc_porte_estab, ie_calc_porte_w))
	into STRICT	ie_calc_porte_w
	from 	convenio_estabelecimento
	where 	cd_convenio = cd_convenio_w
	and 	cd_estabelecimento = cd_estabelecimento_w;
	exception
		when others then
		ie_calc_porte_w:= ie_calc_porte_w;
	end;

	select	max(dt_termino)
	into STRICT	dt_final_cirurgia_w
	from	cirurgia
	where	nr_cirurgia	= nr_cirurgia_p;	
	
	if 	((ie_calc_porte_w = 'B') and (dt_final_cirurgia_w IS NOT NULL AND dt_final_cirurgia_w::text <> '')
	and ((coalesce(ie_gera_taxa_porte_w, 'S') = 'S') or (coalesce(ie_java_html_p,'N') = 'N'))) then
		CALL gerar_tx_cirur_porte_tempo(cd_estabelecimento_w,nr_atendimento_w,nr_cirurgia_p,nm_usuario_p);
	end if;

	if (ie_calc_porte_w = 'C') then
		
		select	count(*)
		into STRICT	qt_regra_tx_porte_w
		from	regra_tx_porte_cirurgia
		where	cd_convenio = cd_convenio_w
		and	cd_estabelecimento = cd_estabelecimento_w;
		
		if (qt_regra_tx_porte_w > 0) then
			CALL define_percentual_taxa_sala(nr_atendimento_w,nr_cirurgia_p,nm_usuario_p);
		end if;
		
	end if;
end if;


if (ie_proc_princ_video_w = 'S') then
	select count(*)
	into STRICT   qt_equip_video_w
	from    equipamento b,
		equipamento_cirurgia a
	where  a.cd_equipamento = b.cd_equipamento
	and    a.nr_cirurgia =   nr_cirurgia_p
	and    b.ie_video = 'S'
	and    a.ie_situacao = 'A';


	if (qt_equip_video_w > 0) then
		 select max(a.cd_procedimento_princ),
			max(a.ie_origem_proced)
		 into STRICT   cd_procedimento_princ_w,
			ie_origem_proced_princ_w
		 from   cirurgia a
		 where  a.nr_cirurgia = nr_cirurgia_p;
		
		 
		if (cd_procedimento_princ_w IS NOT NULL AND cd_procedimento_princ_w::text <> '') and (ie_origem_proced_princ_w IS NOT NULL AND ie_origem_proced_princ_w::text <> '') then	
			update procedimento_paciente
			set    ie_video = 'S'
			where  cd_procedimento  =  cd_procedimento_princ_w
			and    ie_origem_proced =  ie_origem_proced_princ_w
			and    nr_cirurgia      =  nr_cirurgia_p;
			commit;
		end if;
	end if;
end if;

if (coalesce(ie_vinc_Proc_Pric_w,'N') = 'S') then
	select  max(a.nr_sequencia),
		max(b.cd_procedimento_princ)
	into STRICT	nr_seq_proc_princ_w,
		cd_procedimento_w
	from	cirurgia b,
		procedimento_paciente a
	where	a.cd_procedimento 	= b.cd_procedimento_princ
	and 	a.ie_origem_proced 	= b.ie_origem_proced
	and 	b.nr_cirurgia 		= nr_cirurgia_p;		
	
	if (coalesce(nr_seq_proc_princ_w,0) > 0) then
		update 	procedimento_paciente
		set 	nr_seq_proc_princ 	= nr_seq_proc_princ_w
		where 	nr_cirurgia 		= nr_cirurgia_p
		and 	coalesce(nr_seq_proc_princ::text, '') = '';
	end if;
	commit;
end if;	

open c02;
loop
fetch c02 into	
	nr_seq_proc_w;
EXIT WHEN NOT FOUND; /* apply on c02 */
	begin
	CALL atualizar_seq_agenda_propaci(nr_seq_proc_w,nm_usuario_p,cd_estabelecimento_w);
	end;
end loop;
close c02;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE realizar_proc_previstos ( nr_cirurgia_p bigint, nr_prescricao_p bigint, nm_usuario_p text, ie_java_html_p text default 'N') FROM PUBLIC;

