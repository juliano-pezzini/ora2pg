-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE cpoe_gerar_proc_glic_assoc ( nr_atendimento_p atendimento_paciente.nr_atendimento%type, nr_seq_cpoe_proc_p cpoe_procedimento.nr_sequencia%type, nr_seq_prot_glic_p pep_protocolo_glicemia.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


i						integer	:= 1;
ds_log_w				log_cpoe.ds_log%type;
hr_prim_horario_w		cpoe_procedimento.hr_prim_horario%type;
dt_inicio_w				cpoe_procedimento.dt_inicio%type;
ie_administracao_w		cpoe_procedimento.ie_administracao%type;
cd_intervalo_w			cpoe_procedimento.cd_intervalo%type;
qt_min_intervalo_w		intervalo_prescricao.qt_min_intervalo%type;
ds_horarios_w			cpoe_procedimento.ds_horarios%type;
ds_horarios_aux_w		cpoe_procedimento.ds_horarios%type;
nr_ocorrencia_w			bigint := 0;

C01 CURSOR(	ie_administracao_pc		cpoe_procedimento.ie_administracao%type	) FOR
	SELECT	a.cd_intervalo,
			a.cd_material,
			a.cd_unidade_medida,
			a.ds_horarios,
			a.ie_checar_adep,
			a.ie_glicemia,
			a.ie_intervalo_dif,
			CASE WHEN coalesce(a.ie_se_necessario,'N')='N' THEN ie_administracao_pc  ELSE 'N' END  ie_se_necessario,
			a.ie_via_aplicacao,
			a.qt_dose
	from	protocolo_glic_mat_med	a
	where	a.nr_seq_protocolo_glic = nr_seq_prot_glic_p;

BEGIN

begin
select	max(a.hr_prim_horario),
		max(a.dt_inicio),
		max(a.ie_administracao),
		max(a.cd_intervalo)
into STRICT	hr_prim_horario_w,
		dt_inicio_w,
		ie_administracao_w,
		cd_intervalo_w
from	cpoe_procedimento	a
where	a.nr_sequencia	= nr_seq_cpoe_proc_p;

/*Abertura de cursor*/

for c01_w in c01(ie_administracao_w) loop
	begin

	if (coalesce(c01_w.cd_intervalo::text, '') = '' and coalesce(c01_w.ie_intervalo_dif,'N') = 'N') then
		c01_w.cd_intervalo	:= cd_intervalo_w;
	end if;

	if (coalesce(c01_w.ds_horarios::text, '') = '' and ie_administracao_w = 'P') then
		select	 max(coalesce(qt_min_intervalo,0))
		into STRICT	 qt_min_intervalo_w
		from	 intervalo_prescricao
		where	 cd_intervalo = c01_w.cd_intervalo;

		SELECT * FROM cpoe_calcular_horario_prescr(	nr_atendimento_p, c01_w.cd_intervalo, c01_w.cd_material, dt_inicio_w, 0, qt_min_intervalo_w, nr_ocorrencia_w, ds_horarios_w, ds_horarios_aux_w, nm_usuario_p, obter_estabelecimento_ativo, obter_perfil_ativo, null) INTO STRICT nr_ocorrencia_w, ds_horarios_w, ds_horarios_aux_w;

		c01_w.ds_horarios	:= ds_horarios_w || ds_horarios_aux_w;
	end if;

	CALL exec_sql_dinamico_bv(
				'CPOE',
					' update	cpoe_procedimento ' ||
					' set		cd_mat_proc'||i||' = :cd_mat_proc_w, ' ||
					' 			ie_via_mat_proc'||i||' = :ie_via_mat_proc_w, ' ||
					' 			qt_dose_mat'||i||' = :qt_dose_mat_w, ' ||
					' 			cd_unid_medida_dose_mat'||i||' = :cd_unid_medida_dose_mat_w, ' ||
					' 			cd_interv_proc'||i||' = :cd_interv_proc_w, ' ||
					' 			ds_hor_proc'||i||' = :ds_hor_proc_w, ' ||
					' 			dt_inicio_proc'||i||' = :dt_inicio_proc_w, ' ||
					' 			hr_prim_hor_proc'||i||' = :hr_prim_hor_proc_w, ' ||					
					' 			ie_adm_mat'||i||' = :ie_adm_mat_w, ' ||
					' 			ie_dur_proc'||i||' = :ie_dur_proc_w, ' ||
					'			ie_assoc_adep'||i||' = :ie_checar_adep_w ' ||
					' where		nr_atendimento = :nr_atendimento_p ' ||
					' and		nr_sequencia = :nr_seq_procedimento_p ',
				'cd_mat_proc_w=' || c01_w.cd_material ||
				'#@#@ie_via_mat_proc_w=' || c01_w.ie_via_aplicacao ||
				'#@#@qt_dose_mat_w=' || c01_w.qt_dose ||
				'#@#@cd_unid_medida_dose_mat_w=' || c01_w.cd_unidade_medida ||
				'#@#@cd_interv_proc_w=' || c01_w.cd_intervalo ||
				'#@#@ds_hor_proc_w=' || c01_w.ds_horarios ||
				'#@#@dt_inicio_proc_w='||to_char(dt_inicio_w,'dd/mm/yyyy hh24:mi:ss')||
				'#@#@hr_prim_hor_proc_w=' || hr_prim_horario_w ||				
				'#@#@ie_adm_mat_w=' || c01_w.ie_se_necessario ||
				'#@#@ie_dur_proc_w=' || 'C' ||
				'#@#@ie_checar_adep_w=' || c01_w.ie_checar_adep ||
				'#@#@nr_atendimento_p=' || nr_atendimento_p ||
				'#@#@nr_seq_procedimento_p=' || nr_seq_cpoe_proc_p ||
				'#@#@');

	i	:= i + 1;

	if (i = 8) then
		exit;
	end if;
	end;
end loop;

exception
when others then
	rollback;

	ds_log_w := substr('CPOE_GERAR_PROT_MAT_ASSOC_PROC ' || chr(10) ||
		' nr_atendimento_p: '	|| nr_atendimento_p || chr(10) ||
	    ' nr_seq_cpoe_proc_p: ' || nr_seq_cpoe_proc_p || chr(10) ||
	    ' nr_seq_prot_glic_p: ' || nr_seq_prot_glic_p || chr(10) ||
	    ' nm_usuario_p: ' || nm_usuario_p || chr(10) ||
		' i: ' || i || chr(10) ||
		' ERRO: ' || sqlerrm || chr(10) ||
		' FUNCAO('||to_char(obter_funcao_ativa)||'); PERFIL('||to_char(obter_perfil_ativo)||')',1,2000);

	insert into log_cpoe(
		nr_sequencia,
		nr_atendimento,
		dt_atualizacao,
		nm_usuario,
		ds_log,
		ds_stack)
	values (
		nextval('log_cpoe_seq'),
		nr_atendimento_p,
		clock_timestamp(),
		nm_usuario_p,
		ds_log_w,
		substr(dbms_utility.format_call_stack,1,2000));

		commit;
end;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE cpoe_gerar_proc_glic_assoc ( nr_atendimento_p atendimento_paciente.nr_atendimento%type, nr_seq_cpoe_proc_p cpoe_procedimento.nr_sequencia%type, nr_seq_prot_glic_p pep_protocolo_glicemia.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;

