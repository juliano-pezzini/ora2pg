-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_vinc_tit_rec_lote_evento ( nr_seq_lote_p bigint, nm_usuario_p text, ie_commit_p text) AS $body$
DECLARE


cd_conta_contabil_w		varchar(20);
cd_cgc_w			varchar(14);
cd_pessoa_fisica_w		varchar(10);
ie_insere_w			varchar(1) := 'N';
ie_data_ref_titulo_w		varchar(1) := 'E';
vl_saldo_titulo_w		double precision;
nr_titulo_w			bigint;
nr_seq_evento_w			bigint;
nr_seq_prestador_w		bigint;
nr_seq_periodo_w		bigint;
qt_regra_w			bigint;
nr_seq_lote_pagamento_w		bigint;
nr_seq_evento_movto_w		bigint;
qt_pf_pj_w			integer;
qt_tit_rec_w			integer;
cd_estabelecimento_w		smallint;
dt_competencia_w		timestamp;
dt_competencia_fim_w		timestamp;
dt_vencimento_w			timestamp;
dt_fim_comp_w			timestamp;
nr_seq_evento_lote_w		bigint;
cd_centro_custo_w		centro_custo.cd_centro_custo%type;
nr_seq_classificacao_w		pls_prestador.nr_seq_classificacao%type;
nr_seq_tipo_prestador_w		pls_prestador.nr_seq_tipo_prestador%type;
ie_natureza_w			pls_evento.ie_natureza%type;

C01 CURSOR FOR
	SELECT	a.nr_titulo,
		a.dt_pagamento_previsto,
		a.vl_saldo_titulo,
		a.cd_pessoa_fisica,
		null cd_cgc
	from	titulo_receber a
	where	exists (SELECT	1
			from	pls_prestador x
			where	x.cd_pessoa_fisica = a.cd_pessoa_fisica)
	and	CASE WHEN ie_data_ref_titulo_w='E' THEN a.dt_emissao  ELSE a.dt_pagamento_previsto END  <= dt_competencia_fim_w
	and (CASE WHEN ie_data_ref_titulo_w='E' THEN a.dt_emissao  ELSE a.dt_pagamento_previsto END  <= dt_fim_comp_w or coalesce(dt_fim_comp_w::text, '') = '')
	and	a.ie_situacao = '1'
	and	a.vl_saldo_titulo > 0
	
union all

	select	a.nr_titulo,
		a.dt_pagamento_previsto,
		a.vl_saldo_titulo,
		null cd_pessoa_fisica,
		a.cd_cgc
	from	titulo_receber a
	where	exists (select	1
			from	pls_prestador x
			where	x.cd_cgc = a.cd_cgc)
	and	a.ie_situacao = '1'
	and	CASE WHEN ie_data_ref_titulo_w='E' THEN a.dt_emissao  ELSE a.dt_pagamento_previsto END  <= dt_competencia_fim_w
	and (CASE WHEN ie_data_ref_titulo_w='E' THEN a.dt_emissao  ELSE a.dt_pagamento_previsto END  <= dt_fim_comp_w or coalesce(dt_fim_comp_w::text, '') = '')
	and	a.vl_saldo_titulo > 0;


BEGIN
select	max(dt_competencia),
	max(cd_estabelecimento),
	max(nr_seq_lote_pagamento),
	max(dt_fim_comp),
	max(nr_seq_evento)
into STRICT	dt_competencia_w,
	cd_estabelecimento_w,
	nr_seq_lote_pagamento_w,
	dt_fim_comp_w,
	nr_seq_evento_lote_w
from	pls_lote_evento
where	nr_sequencia = nr_seq_lote_p;

dt_fim_comp_w := trunc(dt_fim_comp_w,'dd');
dt_competencia_fim_w := last_day(dt_competencia_w);

if (nr_seq_lote_pagamento_w IS NOT NULL AND nr_seq_lote_pagamento_w::text <> '') then
	select	max(nr_seq_periodo)
	into STRICT	nr_seq_periodo_w
	from	pls_lote_pagamento
	where	nr_sequencia = nr_seq_lote_pagamento_w;
end if;

select	max(ie_data_ref_titulo)
into STRICT	ie_data_ref_titulo_w
from	pls_parametro_pagamento
where	cd_estabelecimento = cd_estabelecimento_w;

open C01;
loop
fetch C01 into
	nr_titulo_w,
	dt_vencimento_w,
	vl_saldo_titulo_w,
	cd_pessoa_fisica_w,
	cd_cgc_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	SELECT * FROM pls_obter_regra_tit_rec_evento(nr_titulo_w, dt_competencia_w, ie_insere_w, nr_seq_evento_w, nr_seq_prestador_w, cd_centro_custo_w) INTO STRICT ie_insere_w, nr_seq_evento_w, nr_seq_prestador_w, cd_centro_custo_w;

	--colocado para cima pois não estava vinculando titulos a receber nos lotes não complementares.
	if (coalesce(nr_seq_prestador_w::text, '') = '') then
		if (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then
			select	max(nr_sequencia)
			into STRICT	nr_seq_prestador_w
			from	pls_prestador
			where	cd_pessoa_fisica = cd_pessoa_fisica_w
			and	cd_estabelecimento = cd_estabelecimento_w
			and	ie_situacao = 'A'
			and (coalesce(dt_exclusao::text, '') = '' or dt_exclusao > dt_competencia_w);
		elsif (cd_cgc_w IS NOT NULL AND cd_cgc_w::text <> '') then
			select	max(nr_sequencia)
			into STRICT	nr_seq_prestador_w
			from	pls_prestador
			where	cd_cgc = cd_cgc_w
			and	cd_estabelecimento = cd_estabelecimento_w
			and	ie_situacao = 'A'
			and (coalesce(dt_exclusao::text, '') = '' or dt_exclusao > dt_competencia_w);
		end if;
	end if;

	if (ie_insere_w = 'S') and (nr_seq_periodo_w IS NOT NULL AND nr_seq_periodo_w::text <> '') and (coalesce(pls_obter_se_lote_pgto_compl(nr_seq_lote_pagamento_w), 'N') = 'N')	then
		ie_insere_w := pls_obter_se_evento_inside_per(nr_seq_periodo_w, nr_seq_evento_w, nr_seq_prestador_w, dt_competencia_w, dt_vencimento_w);
	end if;

	if (ie_insere_w = 'S') and (coalesce(qt_regra_w,1) > 0) and
		((coalesce(nr_seq_evento_lote_w::text, '') = '') or (nr_seq_evento_lote_w = nr_seq_evento_w)) then

		select	count(1)
		into STRICT	qt_tit_rec_w
		from	pls_evento_movimento
		where	nr_tit_rec_vinculado = nr_titulo_w
		and	coalesce(ie_cancelamento::text, '') = ''  LIMIT 1;

		select	max(nr_seq_classificacao),
			max(nr_seq_tipo_prestador)
		into STRICT	nr_seq_classificacao_w,
			nr_seq_tipo_prestador_w
		from	pls_prestador
		where	nr_sequencia = nr_seq_prestador_w;

		-- Edgar 26/05/2014, OS 740405, se o lote de pagamento for complementar, verificar se o evento está cadastrado no mesmo
		if (ie_insere_w = 'S') and (pls_obter_se_lote_pgto_compl(nr_seq_lote_pagamento_w) = 'S') then
			ie_insere_w := pls_obter_se_entra_pgto_compl(nr_seq_lote_pagamento_w, nr_seq_evento_w, nr_seq_prestador_w, nr_seq_tipo_prestador_w, nr_seq_classificacao_w);
		end if;

		if (ie_insere_w = 'S') and (qt_tit_rec_w = 0) and (nr_seq_prestador_w IS NOT NULL AND nr_seq_prestador_w::text <> '') then

			select	coalesce(max(ie_natureza),'P')
			into STRICT	ie_natureza_w
			from	pls_evento
			where	nr_sequencia = nr_seq_evento_w;

			if (ie_natureza_w = 'D') then
				vl_saldo_titulo_w := abs(vl_saldo_titulo_w) * -1;
			else
				vl_saldo_titulo_w := abs(vl_saldo_titulo_w);
			end if;

			insert into pls_evento_movimento(nr_sequencia,
				nm_usuario,
				dt_atualizacao,
				nm_usuario_nrec,
				dt_atualizacao_nrec,
				dt_movimento,
				nr_seq_evento,
				nr_seq_lote,
				nr_seq_prestador,
				nr_tit_rec_vinculado,
				vl_movimento,
				ie_forma_pagto,
				cd_centro_custo)
			values (nextval('pls_evento_movimento_seq'),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				dt_vencimento_w,
				nr_seq_evento_w,
				nr_seq_lote_p,
				nr_seq_prestador_w,
				nr_titulo_w,
				vl_saldo_titulo_w,
				'P',
				cd_centro_custo_w) returning nr_sequencia into nr_seq_evento_movto_w;

			cd_conta_contabil_w := pls_obter_conta_contab_eve_fin(nr_seq_evento_movto_w, cd_conta_contabil_w);

			update	pls_evento_movimento
			set	cd_conta_contabil = cd_conta_contabil_w
			where	nr_sequencia = nr_seq_evento_movto_w;
		end if;
	end if;
	end;
end loop;
close C01;

if (coalesce(ie_commit_p,'S') = 'S') then
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_vinc_tit_rec_lote_evento ( nr_seq_lote_p bigint, nm_usuario_p text, ie_commit_p text) FROM PUBLIC;

