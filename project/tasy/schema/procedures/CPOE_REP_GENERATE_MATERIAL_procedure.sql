-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE cpoe_rep_generate_material ( nr_prescricao_p prescr_medica.nr_prescricao%type, nr_atendimento_p atendimento_paciente.nr_atendimento%type, dt_inicio_prescr_p prescr_medica.dt_inicio_prescr%type, dt_validade_prescr_p prescr_medica.dt_validade_prescr%type, dt_liberacao_p cpoe_material.dt_liberacao%type, nm_usuario_p usuario.nm_usuario%type, cd_pessoa_fisica_p cpoe_material.cd_pessoa_fisica%type, cd_funcao_origem_p funcao.cd_funcao%type, ie_tipo_pessoa_p text default 'N', cd_setor_atendimento_p prescr_medica.cd_setor_atendimento%type default null, nr_seq_agenda_p prescr_medica.nr_seq_agenda%type default null) AS $body$
DECLARE

					
nr_seq_material_w				prescr_material.nr_sequencia%type;
cd_material_w					prescr_material.cd_material%type;
cd_unidade_medida_dose_w		prescr_material.cd_unidade_medida_dose%type;
qt_dose_w						prescr_material.qt_dose%type;
ie_acm_w						prescr_material.ie_acm%type;
ie_se_necessario_w				prescr_material.ie_se_necessario%type;
ie_urgencia_w					prescr_material.ie_urgencia%type;
ds_horarios_w					prescr_material.ds_horarios%type;
hr_prim_horario_w				prescr_material.hr_prim_horario%type;
cd_intervalo_w					prescr_material.cd_intervalo%type;
nr_dia_util_w					prescr_material.nr_dia_util%type;
ds_justificativa_w				prescr_material.ds_justificativa%type;
ds_observacao_w					prescr_material.ds_observacao%type;
nr_ocorrencia_w					prescr_material.nr_ocorrencia%type;
nr_agrupamento_w				prescr_material.nr_agrupamento%type;
nr_agrupamento_ww				prescr_material.nr_agrupamento%type := 0;
cd_perfil_ativo_w				prescr_material.cd_perfil_ativo%type;
qt_dia_prim_hor_w				prescr_material.qt_dia_prim_hor%type;
cd_funcao_origem_w				prescr_medica.cd_funcao_origem%type;
nr_seq_atend_w					prescr_medica.nr_seq_atend%type;

nr_sequencia_w					cpoe_material.nr_sequencia%type;
ie_administracao_w				cpoe_material.ie_administracao%type;
dt_prim_horario_w				cpoe_material.dt_inicio%type;
ie_oncologia_w					cpoe_material.ie_oncologia%type;
ds_retorno_w					varchar(255);
ie_libera_cpoe_w				varchar(1);

ie_retrogrado_w			prescr_medica.ie_prescr_emergencia%type;
dt_liberacao_enf_w		timestamp;
nm_usuario_lib_enf_w	prescr_medica.nm_usuario_lib_enf%type;
cd_medico_w					prescr_medica.cd_medico%type;

material_cursor CURSOR FOR
SELECT	nr_sequencia,
		cd_material,
		cd_unidade_medida_dose,
		qt_dose,
		coalesce(ie_acm,'N'),
		coalesce(ie_se_necessario,'N'),
		coalesce(ie_urgencia,'N'),
		ds_horarios,
		hr_prim_horario,
		cd_intervalo,
		nr_dia_util,
		nr_ocorrencia,
		ds_justificativa,
		ds_observacao,
		nr_agrupamento,
		cd_perfil_ativo,
		coalesce(qt_dia_prim_hor,0)
from	prescr_material
where	nr_prescricao = nr_prescricao_p
and	ie_agrupador = 2
and	upper(ie_origem_inf) not in ('K')
and    	coalesce(nr_seq_kit::text, '') = '';



BEGIN

select	max(cd_funcao_origem),
		max(coalesce(ie_prescr_emergencia,'N')),
		max(nr_seq_atend),
		max(dt_liberacao),
		max(nm_usuario_lib_enf),
		max(cd_medico)
into STRICT	cd_funcao_origem_w,
		ie_retrogrado_w,
		nr_seq_atend_w,
		dt_liberacao_enf_w,
		nm_usuario_lib_enf_w,
		cd_medico_w
from	prescr_medica
where	nr_prescricao = nr_prescricao_p;

ie_libera_cpoe_w := 'N';
if (cd_funcao_origem_w = 924) or (cd_funcao_origem_w = 950) or (cd_funcao_origem_w = 281) or (cd_funcao_origem_w = 900) or (cd_funcao_origem_w = -9) or (cd_funcao_origem_w = -2025) or (cd_funcao_origem_w = 99072) or (ie_tipo_pessoa_p = 'S') then
	ie_libera_cpoe_w := 'S';
end if;


open material_cursor;
loop
fetch material_cursor into	nr_seq_material_w,
				cd_material_w,
				cd_unidade_medida_dose_w,
				qt_dose_w,				
				ie_acm_w,
				ie_se_necessario_w,
				ie_urgencia_w,
				ds_horarios_w,
				hr_prim_horario_w,
				cd_intervalo_w,
				nr_dia_util_w,
				nr_ocorrencia_w,
				ds_justificativa_w,
				ds_observacao_w,
				nr_agrupamento_w,
				cd_perfil_ativo_w,
				qt_dia_prim_hor_w;
EXIT WHEN NOT FOUND; /* apply on material_cursor */
	begin
	ie_administracao_w := 'P';
	if (ie_acm_w = 'S') then
		ie_administracao_w := 'C';
		hr_prim_horario_w := '';
		ds_horarios_w := '';
	elsif (ie_se_necessario_w = 'S') then
		ie_administracao_w := 'N';
		hr_prim_horario_w := '';
		ds_horarios_w := '';
	else
		-- Clear out the text inside the line and adds the sufix of ":00" as needed, fitting it 		
		ds_horarios_w := REPLACE(Padroniza_horario_prescr(ds_horarios_w,NULL),'A','');
	end if;


	dt_prim_horario_w := dt_inicio_prescr_p + qt_dia_prim_hor_w;
	
	select	nextval('cpoe_material_seq')
	into STRICT	nr_sequencia_w
	;
	
	ds_retorno_w := formatar_primeiro_horario(hr_prim_horario_w, ds_retorno_w);
	hr_prim_horario_w := ds_retorno_w;
	if (ds_retorno_w = 'N') then
		hr_prim_horario_w := '';
	end if;
	
	if (hr_prim_horario_w IS NOT NULL AND hr_prim_horario_w::text <> '') then
		begin
		dt_prim_horario_w	:= ESTABLISHMENT_TIMEZONE_UTILS.dateAtTime(dt_prim_horario_w, hr_prim_horario_w);
		exception
		when others then
			dt_prim_horario_w	:= dt_prim_horario_w;
		end;
	end if;
	
	if (coalesce(cd_unidade_medida_dose_w::text, '') = '') then
		select max(cd_unidade_medida_consumo)
		into STRICT	cd_unidade_medida_dose_w
		from	material
		where	cd_material = cd_material_w;
	end if;

	insert into cpoe_material(
				nr_sequencia,
				nr_atendimento,					
				ie_administracao,
				ie_duracao,
				dt_inicio,
				dt_fim,
				dt_prox_geracao,
				dt_liberacao,
				cd_material,
				cd_unidade_medida,
				qt_dose,
				ie_acm,
				ie_se_necessario,
				ie_urgencia,
				ds_horarios,
				hr_prim_horario,
				cd_intervalo,					
				nr_dia_util,
				nr_ocorrencia,
				ds_justificativa,
				ds_observacao,
				nm_usuario,
				nm_usuario_nrec,
				dt_atualizacao,
				dt_atualizacao_nrec,
				cd_perfil_ativo,
				ie_material,
				cd_pessoa_fisica,
				cd_funcao_origem,
				cd_setor_atendimento,
				ie_retrogrado,
				ie_oncologia,
				dt_liberacao_enf,
				nm_usuario_lib_enf,
				nr_seq_agenda,
				cd_medico)
			values (
				nr_sequencia_w,
				nr_atendimento_p,
				ie_administracao_w,
				'P',
				dt_prim_horario_w,
				dt_validade_prescr_p,
				dt_prim_horario_w + 12/24,
				CASE WHEN ie_libera_cpoe_w='S' THEN  dt_liberacao_p  ELSE null END ,
				cd_material_w,
				cd_unidade_medida_dose_w,
				qt_dose_w,
				ie_acm_w,
				ie_se_necessario_w,
				CASE WHEN ie_urgencia_w='S' THEN '0'  ELSE null END ,
				ds_horarios_w,
				hr_prim_horario_w,
				cd_intervalo_w,					
				nr_dia_util_w,
				nr_ocorrencia_w,
				ds_justificativa_w,
				ds_observacao_w,
				nm_usuario_p,
				nm_usuario_p,
				clock_timestamp(),
				clock_timestamp(),
				cd_perfil_ativo_w,
				'S',
				cd_pessoa_fisica_p,
				cd_funcao_origem_p,
				cd_setor_atendimento_p,
				ie_retrogrado_w,
				CASE WHEN coalesce(nr_seq_atend_w::text, '') = '' THEN 'N'  ELSE 'S' END ,
				dt_liberacao_enf_w,
				nm_usuario_lib_enf_w,
				nr_seq_agenda_p,
				cd_medico_w);
				
	update	prescr_material
	set		nr_seq_mat_cpoe = nr_sequencia_w
	where	nr_sequencia = nr_seq_material_w
	and		nr_prescricao = nr_prescricao_p;
	
	if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;
	end;
end loop;
close material_cursor;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE cpoe_rep_generate_material ( nr_prescricao_p prescr_medica.nr_prescricao%type, nr_atendimento_p atendimento_paciente.nr_atendimento%type, dt_inicio_prescr_p prescr_medica.dt_inicio_prescr%type, dt_validade_prescr_p prescr_medica.dt_validade_prescr%type, dt_liberacao_p cpoe_material.dt_liberacao%type, nm_usuario_p usuario.nm_usuario%type, cd_pessoa_fisica_p cpoe_material.cd_pessoa_fisica%type, cd_funcao_origem_p funcao.cd_funcao%type, ie_tipo_pessoa_p text default 'N', cd_setor_atendimento_p prescr_medica.cd_setor_atendimento%type default null, nr_seq_agenda_p prescr_medica.nr_seq_agenda%type default null) FROM PUBLIC;

