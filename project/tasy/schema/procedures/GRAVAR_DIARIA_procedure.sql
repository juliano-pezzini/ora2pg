-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gravar_diaria (nr_atendimento_p bigint, dt_entrada_unidade_p timestamp, cd_procedimento_p bigint, ie_origem_proced_p bigint, dt_procedimento_p timestamp, cd_convenio_p bigint, cd_categoria_p text, nr_doc_convenio_p text, dt_acerto_conta_p timestamp, nr_interno_conta_p bigint, nm_usuario_p text, cd_setor_atendimento_p bigint, vl_procedimento_p bigint, qt_procedimento_p bigint, ie_evento_diaria_p text, nr_seq_proc_interno_p bigint) AS $body$
DECLARE


dt_atualizacao_w        timestamp       := clock_timestamp();
cd_estabelecimento_w    smallint  := 0;
cd_procedimento_w    	bigint  := 0;
cd_taxa_servico_w       bigint  := 0;
nr_sequencia_w       	bigint  := 0;
ie_origem_proced_w	bigint;
nr_seq_atepacu_w		bigint;
dt_diaria_w			timestamp;
dt_alta_w			timestamp;
cd_cgc_prestador_w	varchar(14);
ds_observacao_w		varchar(255)	:= null;

ie_tipo_convenio_w	integer;
nr_interno_conta_w	bigint;
cd_situacao_glosa_w	bigint;
nr_seq_glosa_w		bigint;
cd_medico_executor_w	varchar(10);
ie_tipo_atendimento_w	smallint;
ie_medico_executor_w	varchar(2);
cd_profissional_w	varchar(10);
cd_pessoa_fisica_w	varchar(10);
nr_seq_classificacao_w	bigint;
cd_cgc_prestador_regra_w varchar(14);
nr_seq_proc_interno_w	bigint;
cd_proc_int_w		bigint;
ie_origem_proc_int_w	bigint;
cd_plano_convenio_w	varchar(10);
cd_tipo_acomodacao_w	smallint;
ie_situacao_w		varchar(1);
nr_seq_propaci_w    procedimento_paciente.nr_sequencia%type;


BEGIN

if (ie_evento_diaria_p IS NOT NULL AND ie_evento_diaria_p::text <> '') then
	ds_observacao_w	:= substr(wheb_mensagem_pck.get_texto(300033) || ': ' || ie_evento_diaria_p,1,255);--Evento diaria
end if;

select 	max(cd_estabelecimento),
	max(ie_tipo_atendimento),
	max(nr_seq_classificacao),
	max(obter_plano_atendimento(nr_atendimento,'C')),
	max(obter_tipo_acomod_atend(nr_atendimento,'C'))
into STRICT  	cd_estabelecimento_w,
	ie_tipo_atendimento_w,
	nr_seq_classificacao_w,
	cd_plano_convenio_w,
	cd_tipo_acomodacao_w
from	atendimento_paciente
where	nr_atendimento = nr_atendimento_p;

select 	 max(cd_cgc)
into STRICT	 cd_cgc_prestador_w
from	 estabelecimento
where	 cd_estabelecimento = cd_estabelecimento_w;

select	max(dt_alta)
into STRICT	dt_alta_w
from	atendimento_paciente
where	nr_atendimento	= nr_atendimento_p;

if (coalesce(dt_alta_w::text, '') = '') or (ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_alta_w) <> ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_procedimento_p)) then
	dt_diaria_w		:= dt_procedimento_p;
else
	dt_diaria_w		:= dt_alta_w;
end if;

select	coalesce(max(nr_seq_interno),0)
into STRICT	nr_seq_atepacu_w
from 	atend_paciente_unidade
where 	nr_atendimento 		= nr_atendimento_p
and 	dt_entrada_unidade	= dt_entrada_unidade_p;

if (coalesce(pkg_i18n.get_user_locale, 'pt_BR') = 'en_AU')then
    select	coalesce(max(nr_sequencia),0)
    into STRICT	nr_seq_propaci_w	
    from	procedimento_paciente
    where	nr_atendimento		= nr_atendimento_p
    and	dt_entrada_unidade	= dt_entrada_unidade_p
    and	dt_procedimento		= dt_diaria_w
    and	coalesce(cd_motivo_exc_conta::text, '') = ''
    and	PKG_DATE_FORMATERS.TO_VARCHAR(dt_procedimento,'shortDate', WHEB_USUARIO_PCK.GET_CD_ESTABELECIMENTO, WHEB_USUARIO_PCK.get_nm_usuario) = PKG_DATE_FORMATERS.TO_VARCHAR(dt_diaria_w,'shortDate', WHEB_USUARIO_PCK.GET_CD_ESTABELECIMENTO, WHEB_USUARIO_PCK.get_nm_usuario)
    and ds_observacao= ds_observacao_w
    and cd_procedimento <> cd_procedimento_p;

    if (nr_seq_propaci_w > 0)then
        delete from procedimento_paciente
        where nr_sequencia= nr_seq_propaci_w;
    end if;
end if;
/* Gravar diarias */

select	coalesce(max(cd_procedimento),0)
into STRICT	cd_procedimento_w	
from	procedimento_paciente
where	nr_atendimento		= nr_atendimento_p
and	dt_entrada_unidade	= dt_entrada_unidade_p
and	cd_procedimento		= cd_procedimento_p
and	dt_procedimento		= dt_diaria_w
and	coalesce(cd_motivo_exc_conta::text, '') = ''
and	PKG_DATE_FORMATERS.TO_VARCHAR(dt_procedimento,'shortDate', WHEB_USUARIO_PCK.GET_CD_ESTABELECIMENTO, WHEB_USUARIO_PCK.get_nm_usuario) = PKG_DATE_FORMATERS.TO_VARCHAR(dt_diaria_w,'shortDate', WHEB_USUARIO_PCK.GET_CD_ESTABELECIMENTO, WHEB_USUARIO_PCK.get_nm_usuario);

select	max(ie_tipo_convenio)
into STRICT	ie_tipo_convenio_w
from	convenio
where	cd_convenio	= cd_convenio_p;
		
nr_interno_conta_w	:= nr_interno_conta_p;		
		
if (ie_tipo_convenio_w		= 1) and (coalesce(nr_interno_conta_w,0)	= 0) then
		
	/* OS93634 - Ricardo (Sirio) - Obter a conta em caso de diferenca particular */

	begin
	select	/*+ INDEX(A CONPACI_ATEPACI_FK_I) */	 	coalesce(max(a.nr_interno_conta),0)
	into STRICT	nr_interno_conta_w
	FROM convenio c, conta_paciente a
LEFT OUTER JOIN conta_paciente_guia b ON (a.nr_interno_conta = b.nr_interno_conta)
WHERE a.nr_atendimento	= nr_atendimento_p and a.cd_convenio_calculo	= c.cd_convenio and a.cd_estabelecimento	= cd_estabelecimento_w and a.cd_convenio_parametro	= cd_convenio_p and a.ie_status_acerto		= 1 and coalesce(a.nr_seq_protocolo::text, '') = '' 	--edilson em 06/08/05
  and dt_diaria_w between	a.dt_periodo_inicial and a.dt_periodo_final;
	exception
	when others then
		nr_interno_conta_w	:= 0;
	end;

	if (coalesce(nr_interno_conta_w,0)	= 0) then
		nr_interno_conta_w		:= null;
	end if;
end if;

-- obter medico executor 
SELECT * FROM consiste_medico_executor(cd_estabelecimento_w, cd_convenio_p, cd_setor_atendimento_p, cd_procedimento_p, ie_origem_proced_p, ie_tipo_atendimento_w, null, nr_seq_proc_interno_p, ie_medico_executor_w, cd_cgc_prestador_regra_w, cd_medico_executor_w, cd_profissional_w, cd_pessoa_fisica_w, trunc(dt_diaria_w,'hh'), nr_seq_classificacao_w, 'N', null, null) INTO STRICT ie_medico_executor_w, cd_cgc_prestador_regra_w, cd_medico_executor_w, cd_profissional_w;
				
if (coalesce(ie_medico_executor_w,'Z') <> 'F') then
	cd_medico_executor_w:= '';
end if;

if (coalesce(ie_medico_executor_w,'Z') = 'A') then
	select	max(cd_medico_resp)
	into STRICT	cd_medico_executor_w
	from	atendimento_paciente
	where	nr_atendimento = nr_atendimento_p;
end if;

		
if (cd_procedimento_w = 0) then
	begin

	select 	nextval('procedimento_paciente_seq')
     	into STRICT 	nr_sequencia_w
     	;

	
	insert into procedimento_paciente(nr_sequencia, 		nr_atendimento, 	dt_entrada_unidade,	cd_procedimento,
			dt_procedimento,	qt_procedimento, 	dt_atualizacao, 	nm_usuario, 
			cd_convenio,		cd_categoria, 		vl_procedimento, 	vl_medico,	
			vl_anestesista, 	vl_materiais,		dt_acerto_conta, 	nr_interno_conta, 
			vl_auxiliares, 		vl_custo_operacional,	tx_medico, 		tx_anestesia, 
			nr_doc_convenio, 	dt_conta, 		cd_setor_atendimento, 	ie_origem_proced, 
			ie_valor_informado, 	nr_seq_atepacu, 	ie_auditoria,		cd_cgc_prestador, 
			ds_observacao, 		tx_procedimento, 	nr_seq_proc_interno, 	cd_medico_executor) 
	values (nr_sequencia_w,	nr_atendimento_p, 	dt_entrada_unidade_p, 	cd_procedimento_p, 
 			dt_diaria_w, 		qt_procedimento_p, 	dt_atualizacao_w, 	nm_usuario_p, 
			cd_convenio_p, 		cd_categoria_p, 	vl_procedimento_p, 	0, 
			0, 			0, 			dt_acerto_conta_p, 	nr_interno_conta_w, 
			0, 			0, 			0, 			0, 
			nr_doc_convenio_p, 	dt_diaria_w, 		cd_setor_atendimento_p, ie_origem_proced_p, 
			CASE WHEN coalesce(vl_procedimento_p,0)=0 THEN 'N'  ELSE 'S' END , nr_seq_atepacu_w, 'N',	cd_cgc_prestador_w, 
			ds_observacao_w, 	100, 			nr_seq_proc_interno_p, 	cd_medico_executor_w);
			
			CALL atualiza_preco_servico(nr_sequencia_w,nm_usuario_p);
							
		
	select	coalesce(max(cd_situacao_glosa),0)
	into STRICT	cd_situacao_glosa_w
	from 	Procedimento_Paciente
	where 	nr_sequencia 	= nr_sequencia_w;
			
	if (cd_situacao_glosa_w in (8,10,11)) then
		begin
		select 	coalesce(max(nr_sequencia),0)
		into STRICT	nr_seq_glosa_w
		from	procedimento_paciente
		where	nr_seq_proc_princ = nr_sequencia_w;

		if (nr_seq_glosa_w	> 0) then
			CALL Atualiza_preco_servico(nr_seq_glosa_w, nm_usuario_p);
		end if;
		end;
	end if;
		
					
	/*lhalves OS233832 em 21/09/2010*/

	CALL gerar_autor_regra(nr_atendimento_p,null,nr_sequencia_w,null,null,null,'CD',nm_usuario_p,null,null,null,null,null,null,'','','');

	exception
		when others then
			DT_ATUALIZACAO_W := clock_timestamp();
	end;
end if;

if (vl_procedimento_p IS NOT NULL AND vl_procedimento_p::text <> '') and (vl_procedimento_p = 0) then
	begin
/* Gravar taxa enfermagem */




/* Obter o codigo do servico da taxa de enfermagem */

	begin
	select	cd_taxa_servico,
		coalesce(ie_origem_proced,ie_origem_proced_p),
		nr_seq_proc_interno
	into STRICT	cd_taxa_servico_w,
		ie_origem_proced_w,
		nr_seq_proc_interno_w
	from	convenio_taxa_servico
	where	cd_estabelecimento	= cd_estabelecimento_w
	and	cd_convenio		= cd_convenio_p
	and	cd_categoria		= cd_categoria_p
	and	ie_taxa_servico		= 2
	and	coalesce(ie_situacao, 'A')	= 'A';
	exception
	     when others then
	          cd_taxa_servico_w := 0;
	end;
	
	if (coalesce(nr_seq_proc_interno_w,0) > 0) then
		cd_proc_int_w		:= null;
		ie_origem_proc_int_w	:= null;	
	
		SELECT * FROM Obter_Proc_Tab_Interno_Conv(	nr_seq_proc_interno_w, cd_estabelecimento_w, cd_convenio_p, cd_categoria_p, cd_plano_convenio_w, cd_setor_atendimento_p, cd_proc_int_w, ie_origem_proc_int_w, cd_setor_atendimento_p, dt_diaria_w, cd_tipo_acomodacao_w, null, null, null, ie_tipo_atendimento_w, null, null, null) INTO STRICT cd_proc_int_w, ie_origem_proc_int_w;
			
		if (coalesce(cd_proc_int_w,0) > 0) and (coalesce(ie_origem_proc_int_w,0) > 0) then
			cd_taxa_servico_w	:= cd_proc_int_w;
			ie_origem_proced_w	:= ie_origem_proc_int_w;
		end if;

	end if;
	
	if (cd_taxa_servico_w > 0) then
	     	begin
		select	cd_procedimento
		into STRICT	cd_procedimento_w	
		from	procedimento_paciente
		where	nr_atendimento		= nr_atendimento_p
		and	dt_entrada_unidade	= dt_entrada_unidade_p
		and	cd_procedimento		= cd_taxa_servico_w
		and	coalesce(cd_motivo_exc_conta::text, '') = ''
		and	PKG_DATE_FORMATERS.TO_VARCHAR(dt_procedimento,'shortDate', WHEB_USUARIO_PCK.GET_CD_ESTABELECIMENTO, WHEB_USUARIO_PCK.get_nm_usuario) = PKG_DATE_FORMATERS.TO_VARCHAR(dt_diaria_w,'shortDate', WHEB_USUARIO_PCK.GET_CD_ESTABELECIMENTO, WHEB_USUARIO_PCK.get_nm_usuario);
		exception
	     		when others then
				begin
			    	
				select 	nextval('procedimento_paciente_seq')
	     			into STRICT 	nr_sequencia_w
	     			;

	     			insert into procedimento_paciente(nr_sequencia,		nr_atendimento, 	dt_entrada_unidade,		cd_procedimento,	
					dt_procedimento, 	qt_procedimento, 	dt_atualizacao,			nm_usuario,
					cd_convenio, 		cd_categoria, 		vl_procedimento,		vl_medico, 
					vl_anestesista, 	vl_materiais, 		dt_acerto_conta,		nr_interno_conta, 
					vl_auxiliares, 		vl_custo_operacional, 	tx_medico,			tx_anestesia, 
					nr_doc_convenio, 	dt_conta,		cd_setor_atendimento, 		ie_origem_proced, 
					nr_seq_atepacu, 	ie_auditoria,		cd_cgc_prestador, 		ds_observacao, 
					tx_procedimento) 
     				values (nr_sequencia_w,	nr_atendimento_p, 	dt_entrada_unidade_p,		cd_taxa_servico_w, 
					dt_diaria_w, 		1, 			dt_atualizacao_w,		nm_usuario_p,
					cd_convenio_p, 		cd_categoria_p, 	0, 				0, 
					0, 			0, 			dt_acerto_conta_p, 		nr_interno_conta_w, 
					0, 			0, 			0, 				0, 
					nr_doc_convenio_p,	dt_diaria_w, 		cd_setor_atendimento_p, 	ie_origem_proced_w, 
					nr_seq_atepacu_w, 	'N',			cd_cgc_prestador_w, 		ds_observacao_w, 
					100);

    				CALL atualiza_preco_servico(nr_sequencia_w,nm_usuario_p);
				
	     			exception
	          			when others then
	               			dt_atualizacao_w := clock_timestamp();
     				end;
		end;
	end if;

	CALL Gerar_Taxa_Exame(cd_estabelecimento_w,
			nr_atendimento_p,
			dt_entrada_unidade_p,
			cd_procedimento_p,
			dt_diaria_w,
			1,
			cd_setor_atendimento_p,
			nr_doc_convenio_p,
			cd_convenio_p,
			cd_categoria_p);
	end;
end if;

if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gravar_diaria (nr_atendimento_p bigint, dt_entrada_unidade_p timestamp, cd_procedimento_p bigint, ie_origem_proced_p bigint, dt_procedimento_p timestamp, cd_convenio_p bigint, cd_categoria_p text, nr_doc_convenio_p text, dt_acerto_conta_p timestamp, nr_interno_conta_p bigint, nm_usuario_p text, cd_setor_atendimento_p bigint, vl_procedimento_p bigint, qt_procedimento_p bigint, ie_evento_diaria_p text, nr_seq_proc_interno_p bigint) FROM PUBLIC;

