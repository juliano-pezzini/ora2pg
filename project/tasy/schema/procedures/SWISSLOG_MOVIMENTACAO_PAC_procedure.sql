-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE swisslog_movimentacao_pac ( nr_atendimento_p bigint, cd_setor_new_p bigint, cd_setor_old_p bigint, nr_opcao_p bigint, nm_usuario_p text) AS $body$
DECLARE


/*
nr_opcao_p
1 - Transferência
2 - Alta
3 - Internação
*/
ie_setor_new_swisslog_w		varchar(1) := 'N';
ie_setor_old_swisslog_w		varchar(1) := 'N';
ie_prescr_vigente_w		varchar(1) := 'N';
ds_param_integ_hl7_w		varchar(4000) := '';
qt_registro_w			integer;
dt_entrada_unidade_w		timestamp;
cd_setor_w			setor_atendimento.cd_setor_atendimento%type;
nr_seq_empresa_w		empresa_integracao.nr_sequencia%type;
nr_prescricao_w			prescr_medica.nr_prescricao%type;
cd_setor_function		setor_atendimento.cd_setor_atendimento%type;

c01 CURSOR FOR
	SELECT	nr_prescricao
	from	prescr_medica
	where	dt_validade_prescr > clock_timestamp()
	and	cd_setor_atendimento = cd_setor_old_p
	and	nr_atendimento = nr_atendimento_p;

c02 CURSOR FOR
	SELECT	a.nr_prescricao
	from	prescr_medica a,
		prescr_mat_hor b,
		(SELECT	coalesce(nr_seq_estrut_int,0) nr_seq_estrut_int,
			cd_estabelecimento
		from	parametros_farmacia) c
	where	(b.nr_seq_lote IS NOT NULL AND b.nr_seq_lote::text <> '')
	and	a.dt_validade_prescr > clock_timestamp()
	and	consistir_se_mat_contr_estrut(c.nr_seq_estrut_int,b.cd_material) = 'S'
	and	obter_status_processo(b.nr_seq_processo) in ('G','X')
	and exists ( select 1 from ap_lote x where x.nr_sequencia = b.nr_seq_lote and coalesce(x.dt_atend_farmacia::text, '') = '')
	and	b.qt_dispensar_hor > 0
	and	a.cd_setor_atendimento = cd_setor_old_p
	and	a.nr_atendimento = nr_atendimento_p
	and	a.cd_estabelecimento = c.cd_estabelecimento
	and	a.nr_prescricao = b.nr_prescricao
	group by a.nr_prescricao;

c03 CURSOR FOR
	SELECT	a.nr_prescricao
	from	prescr_medica a,
		prescr_mat_hor b,
		(SELECT	coalesce(nr_seq_estrut_int,0) nr_seq_estrut_int,
			cd_estabelecimento
		from	parametros_farmacia) c
	where	(b.nr_seq_lote IS NOT NULL AND b.nr_seq_lote::text <> '')
	and	a.dt_validade_prescr > clock_timestamp()
	and	consistir_se_mat_contr_estrut(c.nr_seq_estrut_int,b.cd_material) = 'S'
	and	obter_status_processo(b.nr_seq_processo) in ('G','X')
	and exists ( select 1 from ap_lote x where x.nr_sequencia = b.nr_seq_lote and coalesce(x.dt_atend_farmacia::text, '') = '')
	and	b.qt_dispensar_hor > 0
	and	a.cd_setor_atendimento = cd_setor_new_p
	and	a.nr_atendimento = nr_atendimento_p
	and	a.cd_estabelecimento = c.cd_estabelecimento
	and	a.nr_prescricao = b.nr_prescricao
	group by a.nr_prescricao;


BEGIN
begin
select	nr_sequencia
into STRICT	nr_seq_empresa_w
from	empresa_integracao
where	upper(nm_empresa) = 'SWISSLOG'  LIMIT 1;

select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
into STRICT	ie_setor_new_swisslog_w
from	far_setores_integracao
where	nr_seq_empresa_int = nr_seq_empresa_w
and	cd_setor_atendimento = cd_setor_new_p  LIMIT 1;

select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
into STRICT	ie_setor_old_swisslog_w
from	far_setores_integracao
where	nr_seq_empresa_int = nr_seq_empresa_w
and	cd_setor_atendimento = cd_setor_old_p  LIMIT 1;
exception
when others then
	nr_seq_empresa_w := 0;
	ie_setor_new_swisslog_w := 'N';
	ie_setor_old_swisslog_w := 'N';
end;

/*insert into log_tasy values (sysdate, nm_usuario_p, -55, '1 SMP - At='||nr_atendimento_p||' | Setor new='||cd_setor_new_p||
							 ' | Setor old='||cd_setor_old_p||' | Op='||nr_opcao_p);*/


-- Opção 4 > Gera prescrição no novo setor do paciente.
if (nr_opcao_p = 4) then --Movimentação > ATUALIZAR_SETOR_PRESCRICAO
	begin
	select	count(*)
	into STRICT	qt_registro_w
	from	w_swisslog_mensagem
	where	dt_atualizacao < (clock_timestamp() - interval '1 days');
	
	if (qt_registro_w > 0) then
		delete	FROM w_swisslog_mensagem
		where	dt_atualizacao < (clock_timestamp() - interval '1 days');
		if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;
	end if;
	
	/*insert into log_tasy values (sysdate, nm_usuario_p, -55, '2 SMP - At='||nr_atendimento_p||' | ie_setor_old_swisslog_w='||ie_setor_old_swisslog_w||
							 ' | ie_setor_new_swisslog_w='||ie_setor_new_swisslog_w||' | Op='||nr_opcao_p);*/

	
	-- Swisslog X Swisslog
	if (ie_setor_old_swisslog_w = 'S') and (ie_setor_new_swisslog_w = 'S') then
		begin
		select	'S'
		into STRICT	ie_prescr_vigente_w
		from	prescr_medica a,
			prescr_mat_hor b,
			(SELECT	coalesce(nr_seq_estrut_int,0) nr_seq_estrut_int,
				cd_estabelecimento
			from	parametros_farmacia) c
		where	(b.nr_seq_lote IS NOT NULL AND b.nr_seq_lote::text <> '')
		and	a.dt_validade_prescr > clock_timestamp()
		and	consistir_se_mat_contr_estrut(c.nr_seq_estrut_int,b.cd_material) = 'S'
		and	obter_status_processo(b.nr_seq_processo) in ('G','X')
		and exists ( select 1 from ap_lote x where x.nr_sequencia = b.nr_seq_lote and coalesce(x.dt_atend_farmacia::text, '') = '')
		and	b.qt_dispensar_hor > 0
		and	a.cd_setor_atendimento = cd_setor_new_p
		and	a.nr_atendimento = nr_atendimento_p
		and	a.cd_estabelecimento = c.cd_estabelecimento
		and	a.nr_prescricao = b.nr_prescricao  LIMIT 1;
		exception
		when others then
			ie_prescr_vigente_w := 'N';
		end;
		
		if (ie_prescr_vigente_w = 'S') then
			open c03;
			loop
			fetch c03 into	
				nr_prescricao_w;
			EXIT WHEN NOT FOUND; /* apply on c03 */
				begin
				/*insert into log_tasy values (sysdate, nm_usuario_p, -55, '3 SMP - At='||nr_atendimento_p||
							' | nr_prescricao_w='||nr_prescricao_w||' | Op='||nr_opcao_p);*/
							
				insert into w_swisslog_mensagem(nr_evento, nr_prescricao, nm_usuario) values (434,nr_prescricao_w,'Swisslog');
				if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;
				
				ds_param_integ_hl7_w := 'nr_prescricao=' || nr_prescricao_w || obter_separador_bv ||
							'nr_atendimento=' || nr_atendimento_p || obter_separador_bv ||
							'ie_aprazado=' || 'GPMH' || obter_separador_bv ||
							'ie_movimento=' || 'MVP' ||  obter_separador_bv ||
							'ie_origem=' || 'SMP' || obter_separador_bv || 
							'nr_seq_horario_p=' || null || obter_separador_bv;
				
				-- Geração da prescrição com os itens pendentes
				CALL swisslog_gerar_integracao(434, ds_param_integ_hl7_w);
				end;
			end loop;
			close c03;
		else
			-- Envio as informações do paciente
			ds_param_integ_hl7_w := 'nr_atendimento=' || nr_atendimento_p || obter_separador_bv ||
									'ie_movimento=' || 'MVP' ||  obter_separador_bv;
			CALL swisslog_gerar_integracao(432, ds_param_integ_hl7_w);
		end if;
	end if;
	-- Swisslog X Swisslog

	
	-- Não Swisslog X Swisslog
	if (ie_setor_old_swisslog_w = 'N') and (ie_setor_new_swisslog_w = 'S') then
		begin
		select	'S'
		into STRICT	ie_prescr_vigente_w
		from	prescr_medica a,
			prescr_mat_hor b,
			(SELECT	coalesce(nr_seq_estrut_int,0) nr_seq_estrut_int,
				cd_estabelecimento
			from	parametros_farmacia) c
		where	(b.nr_seq_lote IS NOT NULL AND b.nr_seq_lote::text <> '')
		and	a.dt_validade_prescr > clock_timestamp()
		and	consistir_se_mat_contr_estrut(c.nr_seq_estrut_int,b.cd_material) = 'S'
		and	obter_status_processo(b.nr_seq_processo) in ('G','X')
		and exists ( select 1 from ap_lote x where x.nr_sequencia = b.nr_seq_lote and coalesce(x.dt_atend_farmacia::text, '') = '')
		and	b.qt_dispensar_hor > 0
		and	a.cd_setor_atendimento = cd_setor_new_p
		and	a.nr_atendimento = nr_atendimento_p
		and	a.cd_estabelecimento = c.cd_estabelecimento
		and	a.nr_prescricao = b.nr_prescricao  LIMIT 1;
		exception
		when others then
			ie_prescr_vigente_w := 'N';
		end;
		
		if (ie_prescr_vigente_w = 'S') then
			open c03;
			loop
			fetch c03 into
				nr_prescricao_w;
			EXIT WHEN NOT FOUND; /* apply on c03 */
				begin
				select	cd_setor_atendimento
				into STRICT	cd_setor_function
				from	prescr_medica
				where	nr_prescricao = nr_prescricao_w;
				
				/*insert into log_tasy values (sysdate, nm_usuario_p, -55, '4 SMP - At='||nr_atendimento_p||' | Op='||nr_opcao_p||
											 ' | Setor pr='||cd_setor_function);*/
				
				insert into w_swisslog_mensagem(nr_evento, nr_prescricao, nm_usuario) values (434,nr_prescricao_w,'Swisslog');
				if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;
				
				ds_param_integ_hl7_w := 'nr_prescricao=' || nr_prescricao_w || obter_separador_bv ||
							'nr_atendimento=' || nr_atendimento_p || obter_separador_bv ||
							'ie_aprazado=' || 'GPMH' || obter_separador_bv ||
							'ie_movimento=' || 'MVP' ||  obter_separador_bv ||
							'ie_origem=' || 'SMP' || obter_separador_bv;
				
				-- Geração da prescrição com os itens pendentes
				CALL swisslog_gerar_integracao(434, ds_param_integ_hl7_w);
				end;
			end loop;
			close c03;
		end if;
	end if;
	-- Não Swisslog X Swisslog
	end;
-- Opção 1 > Gera cancelamento das prescrições no antigo setor do paciente.
elsif (nr_opcao_p = 1) then --Movimentação > GERAR_TRANSFERENCIA_PACIENTE
	begin
	/*insert into log_tasy values (sysdate, nm_usuario_p, -55, '2 SMP - At='||nr_atendimento_p||' | ie_setor_old_swisslog_w='||ie_setor_old_swisslog_w||
							 ' | ie_setor_new_swisslog_w='||ie_setor_new_swisslog_w||' | Op='||nr_opcao_p);*/

	
	-- Swisslog X Não Swisslog
	if (ie_setor_old_swisslog_w = 'S') and (ie_setor_new_swisslog_w = 'N') then
		ds_param_integ_hl7_w := 'nr_atendimento=' || nr_atendimento_p || obter_separador_bv ||
								'ie_movimento=' || 'MVP' ||  obter_separador_bv;
							
		-- Envio das informações do paciente para gerar a alta
		CALL swisslog_gerar_integracao(435, ds_param_integ_hl7_w);
	end if;
	-- Swisslog X Não Swisslog

	
	-- Swisslog X Swisslog
	if (ie_setor_old_swisslog_w = 'S') and (ie_setor_new_swisslog_w = 'S') then
		begin
		select	'S'
		into STRICT	ie_prescr_vigente_w
		from	prescr_medica a,
			prescr_mat_hor b,
			(SELECT	coalesce(nr_seq_estrut_int,0) nr_seq_estrut_int,
				cd_estabelecimento
			from	parametros_farmacia) c
		where	(b.nr_seq_lote IS NOT NULL AND b.nr_seq_lote::text <> '')
		and	a.dt_validade_prescr > clock_timestamp()
		and	consistir_se_mat_contr_estrut(c.nr_seq_estrut_int,b.cd_material) = 'S'
		and	obter_status_processo(b.nr_seq_processo) in ('G','X')
		and exists ( select 1 from ap_lote x where x.nr_sequencia = b.nr_seq_lote and coalesce(x.dt_atend_farmacia::text, '') = '')
		and	b.qt_dispensar_hor > 0
		and	a.cd_setor_atendimento = cd_setor_old_p
		and	a.nr_atendimento = nr_atendimento_p
		and	a.cd_estabelecimento = c.cd_estabelecimento
		and	a.nr_prescricao = b.nr_prescricao  LIMIT 1;
		exception
		when others then
			ie_prescr_vigente_w := 'N';
		end;
		
		if (ie_prescr_vigente_w = 'S') then
			open c02;
			loop
			fetch c02 into	
				nr_prescricao_w;
			EXIT WHEN NOT FOUND; /* apply on c02 */
				begin
				ds_param_integ_hl7_w := 'nr_prescricao=' || nr_prescricao_w || obter_separador_bv ||
										'ie_movimento=' || 'MVP' ||  obter_separador_bv;
				
				/*insert into log_tasy values (sysdate, nm_usuario_p, -55, '3 SMP - At='||nr_atendimento_p||
							' | nr_prescricao_w='||nr_prescricao_w||' | Op='||nr_opcao_p);*/

				
				-- Cancelamento da prescrição
				CALL swisslog_gerar_integracao(431, ds_param_integ_hl7_w);
				end;
			end loop;
			close c02;
		end if;
	end if;
	-- Swisslog X Swisslog
	end;
-- Opção 3 > Gera admissão do paciente na integração.
elsif (nr_opcao_p = 3) and (ie_setor_old_swisslog_w = 'N') and (ie_setor_new_swisslog_w = 'S') then --Internação > ATEND_PACIENTE_UNIDADE_INSERT
	begin
	begin
	cd_setor_w := obter_setor_atendimento(nr_atendimento_p);
	
	select	nr_sequencia
	into STRICT	nr_seq_empresa_w
	from	empresa_integracao
	where	upper(nm_empresa) = 'SWISSLOG'  LIMIT 1;
	
	select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
	into STRICT	ie_setor_old_swisslog_w
	from	far_setores_integracao
	where	nr_seq_empresa_int = nr_seq_empresa_w
	and	cd_setor_atendimento = cd_setor_w  LIMIT 1;
	exception
	when others then
		ie_setor_old_swisslog_w := 'N';
	end;
	
	if (ie_setor_old_swisslog_w = 'N') then
		begin
		select	'S'
		into STRICT	ie_prescr_vigente_w
		from	prescr_medica a,
			prescr_mat_hor b,
			(SELECT	coalesce(nr_seq_estrut_int,0) nr_seq_estrut_int,
				cd_estabelecimento
			from	parametros_farmacia) c
		where	(b.nr_seq_lote IS NOT NULL AND b.nr_seq_lote::text <> '')
		and	a.dt_validade_prescr > clock_timestamp()
		and	consistir_se_mat_contr_estrut(c.nr_seq_estrut_int,b.cd_material) = 'S'
		and	obter_status_processo(b.nr_seq_processo) in ('G','X')
		and exists ( select 1 from ap_lote x where x.nr_sequencia = b.nr_seq_lote and coalesce(x.dt_atend_farmacia::text, '') = '')
		and	b.qt_dispensar_hor > 0
		and	a.cd_setor_atendimento = cd_setor_w
		and	a.nr_atendimento = nr_atendimento_p
		and	a.cd_estabelecimento = c.cd_estabelecimento
		and	a.nr_prescricao = b.nr_prescricao  LIMIT 1;
		exception
		when others then
			ie_prescr_vigente_w := 'N';
		end;
		
		if (ie_prescr_vigente_w = 'N') then
			ds_param_integ_hl7_w := 'nr_atendimento=' || nr_atendimento_p || obter_separador_bv ||
									'ie_movimento=' || 'MVP' ||  obter_separador_bv;
			
			-- Envio das informações do paciente (Admissão)
			CALL swisslog_gerar_integracao(430, ds_param_integ_hl7_w);
		end if;
	end if;
	end;
-- Opção 2 > Gera alta do paciente na integração.
elsif (nr_opcao_p = 2) and (ie_setor_old_swisslog_w = 'S') then --Alta > GERAR_ESTORNAR_ALTA
	begin
	ds_param_integ_hl7_w := 'nr_atendimento=' || nr_atendimento_p || obter_separador_bv ||
							'ie_movimento=' || 'MVP' ||  obter_separador_bv;
	
	-- Envio das informações do paciente para gerar a alta
	CALL swisslog_gerar_integracao(435, ds_param_integ_hl7_w);
	end;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE swisslog_movimentacao_pac ( nr_atendimento_p bigint, cd_setor_new_p bigint, cd_setor_old_p bigint, nr_opcao_p bigint, nm_usuario_p text) FROM PUBLIC;

