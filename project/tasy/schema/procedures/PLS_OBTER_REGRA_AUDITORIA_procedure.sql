-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_obter_regra_auditoria ( cd_estabelecimento_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, ie_tipo_regra_p text, ie_tipo_guia_p text, ie_tipo_processo_p text, vl_procedimento_p bigint, qt_dias_vencido_p bigint, ie_tipo_pagador_p text, nr_seq_material_p bigint, nr_seq_regra_p INOUT bigint, ie_status_p INOUT text, qt_executada_regra_p INOUT bigint, qt_liberada_regra_p INOUT bigint, ie_tipo_qtde_p INOUT text, qt_tipo_quantidade_p INOUT bigint, ie_tipo_guia_conta_regra_p INOUT text, ie_valida_ano_contratual_p INOUT text) AS $body$
DECLARE


nr_seq_regra_w			bigint;
ie_status_w			varchar(2);
qt_liberada_regra_w		double precision	:= 0;
qt_executada_regra_w		double precision	:= 0;
ie_tipo_qtde_w			varchar(2);
qt_tipo_quantidade_w		double precision;
ie_tipo_guia_conta_regra_w	varchar(2);
cd_area_w			bigint := 0;
cd_especialidade_w		bigint := 0;
cd_grupo_w			bigint := 0;
nr_seq_estrutura_mat_w		bigint := 0;
ie_valida_ano_contratual_w	varchar(2);
nr_seq_estrut_regra_w		bigint;

C01 CURSOR FOR
	SELECT	nr_sequencia,
		ie_status,
		coalesce(qt_executada, 0),
		coalesce(qt_liberada, 0),
		ie_tipo_qtde,
		coalesce(qt_tipo_quantidade,1),
		coalesce(ie_tipo_guia_conta,0),
		ie_valida_ano_contratual,
		nr_seq_estrut_mat
	from	pls_regra_liberacao
	where	cd_estabelecimento				= cd_estabelecimento_p
	and	((coalesce(cd_procedimento::text, '') = '') or (cd_procedimento = coalesce(cd_procedimento_p,0)))
	and	((coalesce(ie_origem_proced::text, '') = '') or (ie_origem_proced = coalesce(ie_origem_proced_p,0)))
	and	coalesce(cd_grupo_proc,cd_grupo_w)			= cd_grupo_w
	and	coalesce(cd_especialidade, cd_especialidade_w)	= cd_especialidade_w
	and	coalesce(cd_area_procedimento, cd_area_w) 		= cd_area_w
	and	((coalesce(nr_seq_material::text, '') = '') or (nr_seq_material 	= coalesce(nr_seq_material_p,0)))
	and	ie_tipo_regra	= ie_tipo_regra_p
	and	coalesce(ie_tipo_guia_conta, ie_tipo_guia_p)		= ie_tipo_guia_p
	and	ie_situacao	= 'A'
	and	coalesce(ie_tipo_processo, ie_tipo_processo_p)	= ie_tipo_processo_p
	and	((coalesce(vl_procedimento,0) = 0) or (vl_procedimento_p > coalesce(vl_procedimento,0)))
	and	((coalesce(qt_dias_mensal_vencido,0) = 0) or (coalesce(qt_dias_vencido_p,0) >= coalesce(qt_dias_mensal_vencido,0)))
	and	((ie_tipo_pagador = 'A') or (ie_tipo_pagador = ie_tipo_pagador_p))
	order by
		coalesce(qt_dias_mensal_vencido,0) desc,
		coalesce(ie_tipo_guia_conta,'0'),
		coalesce(qt_dias_mensal_vencido,0),
		coalesce(cd_procedimento,0),
		coalesce(cd_grupo_proc,0),
		coalesce(cd_especialidade,0),
		coalesce(cd_area_procedimento,0);


BEGIN

begin
select	coalesce(cd_area_procedimento,0),
	coalesce(cd_especialidade,0),
	coalesce(cd_grupo_proc,0)
into STRICT	cd_area_w,
	cd_especialidade_w,
	cd_grupo_w
from	estrutura_procedimento_v
where	cd_procedimento		= cd_procedimento_p
and	ie_origem_proced	= ie_origem_proced_p;
exception
	when others then
	cd_area_w		:= 0;
	cd_especialidade_w	:= 0;
	cd_grupo_w		:= 0;
end;

begin
select	coalesce(nr_seq_estrut_mat,0)
into STRICT	nr_seq_estrutura_mat_w
from	pls_material
where	nr_sequencia = nr_seq_material_p;
exception
	when others then
	nr_seq_estrutura_mat_w := 0;
end;

open c01;
loop
fetch c01 into
	nr_seq_regra_w,
	ie_status_w,
	qt_executada_regra_w,
	qt_liberada_regra_w,
	ie_tipo_qtde_w,
	qt_tipo_quantidade_w,
	ie_tipo_guia_conta_regra_w,
	ie_valida_ano_contratual_w,
	nr_seq_estrut_regra_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	if (nr_seq_estrut_regra_w IS NOT NULL AND nr_seq_estrut_regra_w::text <> '') then
		if (pls_obter_se_mat_estrutura(nr_seq_material_p, nr_seq_estrut_regra_w) = 'N') then
			nr_seq_regra_w			:= null;
			ie_status_w			:= null;
			qt_executada_regra_w		:= null;
			qt_liberada_regra_w		:= null;
			ie_tipo_qtde_w			:= null;
			qt_tipo_quantidade_w		:= null;
			ie_tipo_guia_conta_regra_w	:= null;
			ie_valida_ano_contratual_w	:= null;
		end if;
	end if;
	end;
end loop;
close c01;

nr_seq_regra_p			:= nr_seq_regra_w;
ie_status_p			:= ie_status_w;
qt_executada_regra_p		:= qt_executada_regra_w;
qt_liberada_regra_p		:= qt_liberada_regra_w;
ie_tipo_qtde_p			:= ie_tipo_qtde_w;
qt_tipo_quantidade_p		:= qt_tipo_quantidade_w;
ie_tipo_guia_conta_regra_p	:= ie_tipo_guia_conta_regra_w;
ie_valida_ano_contratual_p	:= ie_valida_ano_contratual_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_obter_regra_auditoria ( cd_estabelecimento_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, ie_tipo_regra_p text, ie_tipo_guia_p text, ie_tipo_processo_p text, vl_procedimento_p bigint, qt_dias_vencido_p bigint, ie_tipo_pagador_p text, nr_seq_material_p bigint, nr_seq_regra_p INOUT bigint, ie_status_p INOUT text, qt_executada_regra_p INOUT bigint, qt_liberada_regra_p INOUT bigint, ie_tipo_qtde_p INOUT text, qt_tipo_quantidade_p INOUT bigint, ie_tipo_guia_conta_regra_p INOUT text, ie_valida_ano_contratual_p INOUT text) FROM PUBLIC;

