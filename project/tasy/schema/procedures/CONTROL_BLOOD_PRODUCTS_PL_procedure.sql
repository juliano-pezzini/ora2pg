-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE control_blood_products_pl (nr_seq_pepo_blood_prod_p text default null, nr_seq_modelo_secao_p bigint DEFAULT NULL, nm_usuario_p text  DEFAULT NULL) AS $body$
WITH RECURSIVE cte AS (
DECLARE


bloodList CURSOR FOR
SELECT (regexp_substr(nr_seq_pepo_blood_prod_p,'[^,]+', 1, level))::numeric  as nr_seq_hemod, row_number() OVER () as seq
  (regexp_substr(nr_seq_pepo_blood_prod_p, '[^,]+', 1, level) IS NOT NULL AND (regexp_substr(nr_seq_pepo_blood_prod_p, '[^,]+', 1, level))::text <> '')
  UNION ALL
DECLARE


bloodList CURSOR FOR
SELECT (regexp_substr(nr_seq_pepo_blood_prod_p,'[^,]+', 1, level))::numeric  as nr_seq_hemod, row_number() OVER () as seq 
  (regexp_substr(nr_seq_pepo_blood_prod_p, '[^,]+', 1, level) IS NOT NULL AND (regexp_substr(nr_seq_pepo_blood_prod_p, '[^,]+', 1, level))::text <> '')
 JOIN cte c ON ()

) SELECT * FROM cte
union

select nr_seq_hemod, 0 as seq from pepo_modelo_secao_hemod
where nr_seq_modelo_secao = nr_seq_modelo_secao_p and nr_seq_hemod not in (WITH RECURSIVE cte AS (

select regexp_substr(nr_seq_pepo_blood_prod_p,'[^,]+', 1, level)  
  (regexp_substr(nr_seq_pepo_blood_prod_p, '[^,]+', 1, level) IS NOT NULL AND (regexp_substr(nr_seq_pepo_blood_prod_p, '[^,]+', 1, level))::text <> '')
  UNION ALL

select regexp_substr(nr_seq_pepo_blood_prod_p,'[^,]+', 1, level) JOIN cte c ON ()

) SELECT * FROM cte;
)
order by seq;
;

type nr_seq_apres_w is table of pepo_modelo_secao_hemod.nr_seq_apresentacao%type index by integer;
type nr_seq_hemod_w is table of pepo_modelo_secao_hemod.nr_seq_hemod%type index by integer;

array_nr_seq_apres nr_seq_apres_w;
array_nr_seq_hemod nr_seq_hemod_w;


BEGIN

if (coalesce(nr_seq_pepo_blood_prod_p::text, '') = '') then
  delete
	from pepo_modelo_secao_hemod
   where nr_seq_modelo_secao = nr_seq_modelo_secao_p;
else

	open bloodlist;
	fetch bloodlist bulk collect into array_nr_seq_hemod, array_nr_seq_apres limit 1000;
	close bloodlist;

	  forall i in array_nr_seq_hemod.first..array_nr_seq_hemod.last
      merge into pepo_modelo_secao_hemod a using(SELECT 
          nr_seq_modelo_secao_p nr_seq_modelo_secao,
          array_nr_seq_hemod(i) nr_seq_hemod
          ) b on (
            a.nr_seq_modelo_secao = b.nr_seq_modelo_secao
            and a.nr_seq_hemod = b.nr_seq_hemod
          )
          when matched then update set nr_seq_apresentacao = array_nr_seq_apres(i)
          when not matched then insert(
          nr_sequencia,
            dt_atualizacao,
            nm_usuario,
            dt_atualizacao_nrec,
            nm_usuario_nrec,
            nr_seq_apresentacao,
            nr_seq_modelo_secao,
            nr_seq_fav,
            nr_seq_hemod)
          values (
            nextval('pepo_modelo_secao_hemod_seq'),
            clock_timestamp(),
            nm_usuario_p,
            clock_timestamp(),
            nm_usuario_p,
            array_nr_seq_apres(i),
            nr_seq_modelo_secao_p,
            null,
            array_nr_seq_hemod(i)
          );
    commit;

    forall i in array_nr_seq_hemod.first..array_nr_seq_hemod.last
			delete
			  from pepo_modelo_secao_hemod
			 where nr_seq_modelo_secao = nr_seq_modelo_secao_p
			   and nr_seq_hemod = array_nr_seq_hemod(i)
         and array_nr_seq_apres(i) = 0;
    commit;


end if;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE control_blood_products_pl (nr_seq_pepo_blood_prod_p text default null, nr_seq_modelo_secao_p bigint DEFAULT NULL, nm_usuario_p text  DEFAULT NULL) FROM PUBLIC;

