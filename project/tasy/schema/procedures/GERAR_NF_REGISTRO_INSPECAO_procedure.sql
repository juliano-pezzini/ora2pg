-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_nf_registro_inspecao ( nr_nota_fiscal_p nota_fiscal.nr_nota_fiscal%type, cd_serie_nf_p text, nm_usuario_p text, cd_operacao_nota_p bigint, cd_natureza_operacao_p bigint, cd_local_estoque_p bigint, cd_centro_custo_p bigint, cd_condicao_pagamento_p text, vl_cotacao_p bigint, dt_emissao_p timestamp, ie_retorna_frete_p text, nr_sequencia_p INOUT bigint, ie_venc_ordem_p text, cd_setor_digitacao_p bigint, nr_nota_frete_p text, nr_seq_registro_p bigint, nr_danfe_p text, nr_senha_p text, cd_control_code_p NOTA_FISCAL.CD_CONTROL_CODE%type default null, nr_autorizacao_p NOTA_FISCAL.NR_AUTORIZACAO%type default null) AS $body$
DECLARE


cd_estabelecimento_w			smallint;
nr_seq_inspecao_w				bigint;
nr_seq_inspecao_ww			bigint;
cd_pessoa_fisica_w			varchar(10);
cd_condicao_pagamento_w			bigint;
ie_frete_w				varchar(1);
cd_moeda_w				bigint;
ds_observacao_w				varchar(4000);
vl_frete_w				double precision := 0;
vl_despesa_doc_w				nota_fiscal.vl_despesa_doc%type := 0;
vl_despesa_acessoria_w			double precision := 0;
ie_tipo_ordem_w				varchar(1);
cd_estab_transf_w				smallint;
nr_item_oci_w				bigint;
cd_material_w				integer;
cd_unidade_medida_compra_w		varchar(30);
vl_unitario_item_nf_w			double precision := 0;
qt_prevista_entrega_w			double precision;
qt_lote_w					double precision;
pr_descontos_w				double precision;
cd_local_estoque_w			integer;
ds_material_direto_w			varchar(255);
cd_centro_custo_w				integer;
cd_conta_contabil_w			varchar(20)	:= null;
cd_conta_contabil_ww			varchar(20)	:= null;
cd_conta_ordem_w				varchar(20)	:= null;
nr_seq_proj_rec_w				bigint;
pr_desc_financ_w				double precision;
nr_solic_compra_w				bigint;
nr_seq_unidade_adic_w			bigint;
nr_seq_criterio_rateio_w			bigint;
vl_desconto_oci_w				double precision;
nr_seq_ordem_serv_w			bigint;
nr_seq_proj_gpi_w				bigint;
nr_seq_etapa_gpi_w			bigint;
nr_seq_conta_gpi_w			bigint;
nr_contrato_w				bigint;
ds_observacao_item_w			varchar(255);
dt_prevista_entrega_w			timestamp;
ie_com_ordem_w				varchar(1) := 'N';
cd_natureza_operacao_w			smallint;
cd_natureza_operacao_ne_w			smallint;
cd_natureza_operacao_fe_w			smallint;
cd_natureza_operacao_cad_w		smallint;
cd_condicao_pagamento_padrao_w		bigint;
vl_cotacao_w				cotacao_moeda.vl_cotacao%type;
cd_cgc_estabelecimento_w			varchar(14);
sg_estado_estab_w				pessoa_juridica.sg_estado%type;
cd_local_direto_w				integer;
nr_sequencia_w				bigint;
nr_ordem_compra_w			bigint;
sg_estado_fornec_w			pessoa_juridica.sg_estado%type;
cd_natureza_op_nf_w			smallint;
nr_sequencia_nf_w				bigint;
vl_descontos_total_OC_w			double precision := 0;
vl_descontos_w				double precision := 0;
nr_seq_nota_transf_w			bigint;
qt_existe_w				bigint;
cd_unidade_medida_estoque_w		varchar(30);
qt_conv_compra_estoque_w			double precision;
cd_material_estoque_w			integer := null;
qt_conversao_w				double precision;
vl_total_item_nf_w				double precision := 0;
vl_desconto_w				double precision := 0;
vl_liquido_w				double precision := 0;
nr_item_nf_w				integer;
nr_seq_conta_financeira_w			bigint	:= null;
cd_cgc_emitente_w			varchar(14);
ie_tipo_conta_w				integer := 2;
dt_atualizacao_w           			timestamp 	:= clock_timestamp();
qt_registro_lote_w				integer;
dt_validade_lote_w				timestamp;
nr_seq_marca_w				bigint;
nr_seq_marca_ww				bigint;
ds_lote_fornecedor_w			varchar(20);
qt_material_lote_w				double precision;
cd_tributo_w				integer;
pr_tributo_w				double precision;
vl_tributo_w				double precision;
ie_forma_pagamento_w			smallint;
vl_desc_financ_w				double precision;
vl_tot_venc_w				double precision;
dt_vencimento_w				timestamp;
vl_vencimento_w				double precision;
ds_observacao_venc_w			varchar(255);
vl_liquido_ordem_w				double precision;
vl_total_item_ordem_w			double precision;
vl_vencto_w				double precision;
vl_desc_fin_venc_w			double precision;
qt_item_estoque_w				double precision := 0;
cd_centro_conta_w				integer;
ds_erro_w				varchar(500);
ie_indeterminada_w				varchar(1);
nr_atendimento_w				bigint;
dt_inicio_garantia_w			timestamp;
dt_fim_garantia_w				timestamp;
ie_busca_qt_lote_w				varchar(1) := 'N';
ie_busca_vl_ordem_w			varchar(1) := 'N';
cd_barra_material_w			inspecao_recebimento_lote.cd_barra_material%type;
ds_barras_w				varchar(4000);
dt_fabricacao_w				timestamp;
ie_conta_contabil_w			varchar(15);
cd_perfil_w				bigint;
vl_total_itens_oc_w				ordem_compra_item.vl_total_item%type;
vl_total_itens_insp_w			inspecao_recebimento.vl_unitario_material%type;
nr_item_solic_compra_w			solic_compra_item.nr_item_solic_compra%type;
nr_ordem_compra_adiant_w			ordem_compra.nr_ordem_compra%type;
nr_adiant_oc_w				ordem_compra_adiant_pago.nr_adiantamento%type;
vl_vinculado_oc_w				ordem_compra_adiant_pago.vl_vinculado%type;
ie_gerar_adiant_oc_w			varchar(1) := 'N';
qt_dias_garantia_w				bigint;
nr_seq_regra_contrato_w			inspecao_recebimento.nr_seq_regra_contrato%type;
cd_operacao_estoque_w			operacao_estoque.cd_operacao_estoque%type;
dt_registro_w				inspecao_registro.dt_registro%type;
ie_situacao_fornecedor_w		pessoa_juridica.ie_situacao%type;
cd_sequencia_parametro_w nota_fiscal_item.cd_sequencia_parametro%type;

c01 CURSOR FOR
SELECT	nr_sequencia
from	inspecao_recebimento
where	nr_seq_registro = nr_seq_registro_p;

c02 CURSOR FOR
SELECT	a.cd_cgc_fornecedor,	
	a.cd_pessoa_fisica,
	a.cd_condicao_pagamento,
	coalesce(a.ie_frete,'F'),
	a.cd_moeda,
	a.ds_observacao,
	CASE WHEN ie_retorna_frete_p='S' THEN a.vl_frete  ELSE 0 END  vl_frete,
	coalesce(a.vl_despesa_acessoria, 0),
	coalesce(a.ie_tipo_ordem,'N'),
	a.cd_estab_transf,		
	b.nr_item_oci,
	c.cd_material,
	b.cd_unidade_medida_compra,
	c.vl_unitario_material,
	c.qt_inspecao,
	coalesce(c.pr_desconto,0),
	coalesce(b.cd_local_estoque,cd_local_direto_w),
	substr(b.ds_material_direto,1,255),
	coalesce(CASE WHEN cd_centro_custo_p=0 THEN  null  ELSE cd_centro_custo_p END , b.cd_centro_custo),
	b.cd_conta_contabil,
	b.nr_seq_proj_rec,
	coalesce(b.pr_desc_financ,0),
	b.nr_solic_compra,
	b.nr_item_solic_compra,
	b.nr_seq_unidade_adic,
	b.nr_seq_criterio_rateio,
	coalesce(c.vl_desconto,0),
	b.nr_seq_ordem_serv,
	b.nr_seq_proj_gpi,
	b.nr_seq_etapa_gpi,
	b.nr_seq_conta_gpi,
	b.nr_contrato,
	b.nr_seq_regra_contrato,
	b.ds_observacao,
	obter_dt_prev_oci_inspecao(c.nr_sequencia),
	a.nr_atendimento,
	b.dt_inicio_garantia,
	b.dt_fim_garantia,
	coalesce(c.nr_seq_marca, b.nr_Seq_marca) nr_seq_marca,
	b.qt_dias_garantia
from	ordem_compra a,
	ordem_compra_item b,
	inspecao_recebimento c
where	a.nr_ordem_compra = b.nr_ordem_compra
and	a.nr_ordem_compra = c.nr_ordem_compra
and	b.nr_item_oci = c.nr_item_oci
and	c.nr_sequencia = nr_seq_inspecao_w
and	((coalesce(c.nr_seq_tipo_nao_conf::text, '') = '') or
	((c.nr_seq_tipo_nao_conf IS NOT NULL AND c.nr_seq_tipo_nao_conf::text <> '') and (obter_se_nao_conf_gera_nf(c.nr_seq_tipo_nao_conf) = 'S')))

union

SELECT	a.cd_cgc,
	a.cd_pessoa_fisica,
	(obter_dados_pf_pj_estab(cd_estabelecimento_w ,null,a.cd_cgc,'ECP'))::numeric  cd_condicao_pagamento,
	'F',
	(obter_dados_parametro_compras(cd_estabelecimento_w,1))::numeric ,   
	'',
	0,
	0,
	'N',
	0,
	1,
	a.cd_material,
	obter_dados_material(a.cd_material,'UMP'),
	coalesce(a.vl_unitario_material,0),
	coalesce(a.qt_inspecao,0),
	coalesce(a.pr_desconto,0),
	(CASE WHEN cd_local_estoque_p=0 THEN null  ELSE cd_local_estoque_p END )::numeric ,
	'',
	coalesce(CASE WHEN cd_centro_custo_p=0 THEN  null  ELSE cd_centro_custo_p END , null),
	'',
	null,
	0,
	null,
	null,
	null,
	null,
	coalesce(a.vl_desconto,0),
	null,
	null,
	null,
	null,
	null,
	a.nr_seq_regra_contrato,
	'',
	null,
	null,
	null,
	null,
	null,
	null
from	inspecao_recebimento a
where	nr_sequencia = nr_seq_inspecao_w
and	((coalesce(a.nr_seq_tipo_nao_conf::text, '') = '') or 
	((a.nr_seq_tipo_nao_conf IS NOT NULL AND a.nr_seq_tipo_nao_conf::text <> '') and (obter_se_nao_conf_gera_nf(a.nr_seq_tipo_nao_conf) = 'S')))
and	coalesce(a.nr_ordem_compra::text, '') = '';

c03 CURSOR FOR
SELECT	b.dt_validade,
	b.dt_fabricacao,
	b.cd_lote_fabricacao,
	b.qt_material,
	b.nr_seq_marca,
	ie_indeterminada,
	b.cd_barra_material,
	b.ds_barras
from	inspecao_recebimento_lote b,
	inspecao_recebimento a
where	a.nr_sequencia = b.nr_seq_inspecao
and	nr_seq_inspecao = nr_seq_inspecao_w;

c04 CURSOR FOR
SELECT	cd_tributo,
	pr_tributo,
	vl_tributo
from	ordem_compra_item_trib
where	nr_ordem_compra	= nr_ordem_compra_w
and	nr_item_oci = nr_item_oci_w;

c05 CURSOR FOR
SELECT	a.dt_vencimento,
	a.vl_vencimento,
	a.ds_observacao
from	ordem_compra_venc a
where	a.nr_ordem_compra = nr_ordem_compra_w;

c06 CURSOR FOR
SELECT	distinct nr_ordem_compra
from	nota_fiscal_item a
where	a.nr_sequencia = nr_sequencia_w
and	a.nr_ordem_compra > 0;

C07 CURSOR FOR
SELECT	nr_adiantamento,
	vl_vinculado
from	ordem_compra_adiant_pago
where	nr_ordem_compra = nr_ordem_compra_adiant_w;

c08 CURSOR(nr_seq_registro_c bigint) FOR
SELECT nr_sequencia
  from inspecao_recebimento
 where nr_seq_registro = nr_seq_registro_c;

c09 CURSOR(nr_seq_inspecao_c bigint) FOR
SELECT ds_arquivo
  from inspecao_recebimento_anexo
 where nr_seq_inspecao = nr_seq_inspecao_c;

BEGIN

select	max(dt_registro)
into STRICT	dt_registro_w
from	inspecao_registro
where	nr_sequencia = nr_seq_registro_p;

/*Consistencia para nao gerar a nota fiscal sem itens*/

select	coalesce(max(nr_sequencia),0)
into STRICT	nr_seq_inspecao_ww
from	(
	SELECT	max(c.nr_sequencia) nr_sequencia
	from	ordem_compra a,
		ordem_compra_item b,
		inspecao_recebimento c,
		inspecao_registro d
	where	a.nr_ordem_compra = b.nr_ordem_compra
	and	a.nr_ordem_compra = c.nr_ordem_compra
	and	b.nr_item_oci = c.nr_item_oci
	and	c.nr_seq_registro = d.nr_sequencia
	and	d.nr_sequencia = nr_seq_registro_p
	and	((coalesce(c.nr_seq_tipo_nao_conf::text, '') = '') or
		((c.nr_seq_tipo_nao_conf IS NOT NULL AND c.nr_seq_tipo_nao_conf::text <> '') and (obter_se_nao_conf_gera_nf(c.nr_seq_tipo_nao_conf) = 'S')))
	
union

	SELECT	max(a.nr_sequencia)
	from	inspecao_recebimento a,
		inspecao_registro b
	where	a.nr_seq_registro = b.nr_sequencia
	and	b.nr_sequencia = nr_seq_registro_p
	and	((coalesce(a.nr_seq_tipo_nao_conf::text, '') = '') or 
		((a.nr_seq_tipo_nao_conf IS NOT NULL AND a.nr_seq_tipo_nao_conf::text <> '') and (obter_se_nao_conf_gera_nf(a.nr_seq_tipo_nao_conf) = 'S')))
	and	coalesce(a.nr_ordem_compra::text, '') = '') alias19;
	
if (nr_seq_inspecao_ww = 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(199167);
end if;
/*Fim*/

select	cd_estabelecimento
into STRICT	cd_estabelecimento_w
from	inspecao_registro
where	nr_Sequencia = nr_seq_registro_p;

cd_perfil_w	:= obter_perfil_ativo;

/*Parametros da inspecao*/

select	Obter_Valor_Param_Usuario(270, 31, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w),
	Obter_Valor_Param_Usuario(270, 32, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w)
into STRICT	ie_busca_qt_lote_w,
	ie_busca_vl_ordem_w
;

/*Parametros da NF*/

select	Obter_Valor_Param_Usuario(40, 41, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w),
	Obter_Valor_Param_Usuario(40, 441, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w)
into STRICT	ie_conta_contabil_w,
	ie_gerar_adiant_oc_w
;

select	coalesce(max(cd_nat_oper_compra_ne),1102),
	coalesce(max(cd_nat_oper_compra_fe),2102),
	max(cd_condicao_pagamento_padrao)
into STRICT	cd_natureza_operacao_ne_w,
	cd_natureza_operacao_fe_w,
	cd_condicao_pagamento_padrao_w
from	parametro_compras
where	cd_estabelecimento	= cd_estabelecimento_w;

select	coalesce(max(vl_cotacao_p),1)
into STRICT	vl_cotacao_w
;

select	a.cd_cgc,
	b.sg_estado
into STRICT	cd_cgc_estabelecimento_w,
	sg_estado_estab_w
from	estabelecimento a,
	pessoa_juridica b
where	a.cd_estabelecimento 	= cd_estabelecimento_w
and	a.cd_cgc		= b.cd_cgc;

begin
select	min(cd_local_estoque)
into STRICT	cd_local_direto_w
from	local_estoque
where	ie_tipo_local = 8
and	cd_estabelecimento = cd_estabelecimento_w; -- rfoliveira 05/05/2011 OS 314583
exception
	when others then
		cd_local_direto_w := 1;
end;

select	coalesce(max(cd_operacao_estoque),0)
into STRICT	cd_operacao_estoque_w
from	operacao_nota
where	cd_operacao_nf = cd_operacao_nota_p;

select	nextval('nota_fiscal_seq')
into STRICT	nr_sequencia_w
;

open c01;
loop
fetch c01 into	
	nr_seq_inspecao_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	select	nr_ordem_compra
	into STRICT	nr_ordem_compra_w
	from	inspecao_recebimento
	where	nr_sequencia = nr_seq_inspecao_w;
	
	if (nr_ordem_compra_w IS NOT NULL AND nr_ordem_compra_w::text <> '') then
		ie_com_ordem_w := 'S';
	end if;
	
	open C02;
	loop
	fetch C02 into	
		cd_cgc_emitente_w,
		cd_pessoa_fisica_w,
		cd_condicao_pagamento_w,
		ie_frete_w,
		cd_moeda_w,
		ds_observacao_w,
		vl_frete_w,
		vl_despesa_acessoria_w,
		ie_tipo_ordem_w,
		cd_estab_transf_w,
		nr_item_oci_w,
		cd_material_w,
		cd_unidade_medida_compra_w,
		vl_unitario_item_nf_w,
		qt_prevista_entrega_w,
		pr_descontos_w,
		cd_local_estoque_w,
		ds_material_direto_w,
		cd_centro_custo_w,
		cd_conta_ordem_w,
		nr_seq_proj_rec_w,
		pr_desc_financ_w,
		nr_solic_compra_w,
		nr_item_solic_compra_w,
		nr_seq_unidade_adic_w,
		nr_seq_criterio_rateio_w,
		vl_desconto_oci_w,
		nr_seq_ordem_serv_w,
		nr_seq_proj_gpi_w,
		nr_seq_etapa_gpi_w,
		nr_seq_conta_gpi_w,
		nr_contrato_w,
		nr_seq_regra_contrato_w,
		ds_observacao_item_w,
		dt_prevista_entrega_w,
		nr_atendimento_w,
		dt_inicio_garantia_w,
		dt_fim_garantia_w,
		nr_Seq_marca_ww,
		qt_dias_garantia_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		cd_sequencia_parametro_w := null;
						
		cd_natureza_operacao_w := cd_natureza_operacao_ne_w;
		
		if (cd_condicao_pagamento_p IS NOT NULL AND cd_condicao_pagamento_p::text <> '') then
			cd_condicao_pagamento_w := cd_condicao_pagamento_p;
		end if;
		
		if (coalesce(cd_condicao_pagamento_w::text, '') = '') then
			cd_condicao_pagamento_w := cd_condicao_pagamento_padrao_w;
		end if;	
		
		if (coalesce(cd_condicao_pagamento_w::text, '') = '') then							
			CALL wheb_mensagem_pck.exibir_mensagem_abort(180484);
		end if;
		
		if (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then
			cd_cgc_estabelecimento_w := '';
		end if;
		
		if (cd_cgc_emitente_w IS NOT NULL AND cd_cgc_emitente_w::text <> '') then
			select	sg_estado,
				ie_situacao
			into STRICT	sg_estado_fornec_w,
				ie_situacao_fornecedor_w
			from	pessoa_juridica
			where	cd_cgc = cd_cgc_emitente_w;
			
			if (ie_situacao_fornecedor_w = 'I') then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(159190);
			end if;

			if (sg_estado_fornec_w <> sg_estado_estab_w) then
				cd_natureza_operacao_w := cd_natureza_operacao_fe_w;
			end if;
		end if;
		
		select	coalesce(max(cd_natureza_operacao),0)
		into STRICT	cd_natureza_operacao_cad_w
		from	natureza_operacao
		where	cd_natureza_operacao = cd_natureza_operacao_w;

		if (cd_natureza_operacao_cad_w = 0) then
			begin
			if (ie_com_ordem_w = 'S') then
				CALL gravar_log_processo(926, clock_timestamp(), nm_usuario_p, WHEB_MENSAGEM_PCK.get_texto(301567,'CD_NATUREZA_OPERACAO_W='||cd_natureza_operacao_w||
												';NR_NOTA_FISCAL_P='||nr_nota_fiscal_p||
												';NR_ORDEM_COMPRA_W='||nr_ordem_compra_w));
			else
				CALL gravar_log_processo(926, clock_timestamp(), nm_usuario_p, WHEB_MENSAGEM_PCK.get_texto(301574,'CD_NATUREZA_OPERACAO_W='||cd_natureza_operacao_w||
												';NR_NOTA_FISCAL_P='||nr_nota_fiscal_p));
			end if;
			cd_natureza_operacao_w	:= 111;
			end;
		end if;
		
		select	coalesce(max(cd_natureza_operacao), 0)
		into STRICT	cd_natureza_op_nf_w
		from	operacao_nota
		where	cd_operacao_nf = cd_operacao_nota_p;
		
		if (cd_natureza_op_nf_w > 0) then
			cd_natureza_operacao_w	:= cd_natureza_op_nf_w;
		end if;

		select (coalesce(max(nr_sequencia_nf),0)+1)
		into STRICT	nr_sequencia_nf_w
		from	nota_fiscal
		where	cd_estabelecimento = cd_estabelecimento_w
		and	cd_cgc_emitente = coalesce(cd_cgc_emitente_w,cd_cgc_estabelecimento_w)
		and	nr_nota_fiscal = to_char(nr_nota_fiscal_p)
		and	cd_serie_nf = cd_serie_nf_p;
		
		if (nr_seq_registro_p > 0) and (ie_retorna_frete_p = 'S') then
			
			select	coalesce(sum(a.vl_frete),0)
			into STRICT	vl_frete_w
			from	ordem_compra a
			where	a.ie_frete = 'F'
			and	nr_ordem_compra in (	SELECT distinct x.nr_ordem_compra
							from	inspecao_recebimento x
							where	x.nr_ordem_compra = a.nr_ordem_compra
							and	x.nr_seq_registro = nr_seq_registro_p
							and	((coalesce(x.nr_seq_tipo_nao_conf::text, '') = '') or
								((x.nr_seq_tipo_nao_conf IS NOT NULL AND x.nr_seq_tipo_nao_conf::text <> '') and (obter_se_nao_conf_gera_nf(x.nr_seq_tipo_nao_conf) = 'S'))));
		end if;

        if (nr_seq_registro_p > 0) then
			select	coalesce(sum(a.vl_despesa_doc),0)
			into STRICT	vl_despesa_doc_w
			from	ordem_compra a
			where	nr_ordem_compra in (	SELECT distinct x.nr_ordem_compra
							from	inspecao_recebimento x
							where	x.nr_ordem_compra = a.nr_ordem_compra
							and	x.nr_seq_registro = nr_seq_registro_p
							and	((coalesce(x.nr_seq_tipo_nao_conf::text, '') = '') or 
								((x.nr_seq_tipo_nao_conf IS NOT NULL AND x.nr_seq_tipo_nao_conf::text <> '') and (obter_se_nao_conf_gera_nf(x.nr_seq_tipo_nao_conf) = 'S'))));
		end if;

		/* buscar o valor do desconto para lancar na nota fiscal */

		if (ie_com_ordem_w = 'S') then
			
			select	coalesce(obter_valor_desconto_ordem(nr_ordem_compra_w),0)
			into STRICT	vl_descontos_total_OC_w
			;
			
			select	sum(qt_material * vl_unitario_material)
			into STRICT	vl_total_itens_oc_w
			from	ordem_compra_item
			where	nr_ordem_compra = nr_ordem_compra_w;
			
			select	sum(QT_INSPECAO * VL_UNITARIO_MATERIAL)
			into STRICT	vl_total_itens_insp_w
			from	inspecao_recebimento
			where	nr_ordem_compra = nr_ordem_compra_w
			and	nr_seq_registro = nr_seq_registro_p;
			
			vl_descontos_w	:= 0;
			
			if (vl_descontos_total_OC_w > 0) then				
				vl_descontos_w	:= dividir((vl_descontos_total_OC_w * vl_total_itens_insp_w),vl_total_itens_oc_w);			
			end if;
			
			
			if (ie_tipo_ordem_w = 'T') and (cd_estab_transf_w IS NOT NULL AND cd_estab_transf_w::text <> '') then
				select	max(nr_sequencia)
				into STRICT	nr_seq_nota_transf_w
				from	nota_fiscal
				where	cd_estabelecimento	= cd_estab_transf_w
				and	nr_ordem_compra		= nr_ordem_compra_w;
			end if;
		end if;
		
		select	count(*)
		into STRICT	qt_existe_w
		from	nota_fiscal
		where	nr_sequencia = nr_sequencia_w;
		
		if (qt_existe_w = 0) then
		
			CALL consiste_nota_mesmo_numero(cd_estabelecimento_w, coalesce(cd_cgc_emitente_w, cd_cgc_estabelecimento_w),cd_pessoa_fisica_w,cd_serie_nf_p,nr_nota_fiscal_p,nm_usuario_p);
		
			insert into nota_fiscal(
				cd_estabelecimento,
				cd_cgc_emitente,
				cd_serie_nf,
				nr_nota_fiscal,
				nr_sequencia_nf,
				cd_operacao_nf,
				dt_emissao,
				dt_entrada_saida,
				ie_acao_nf,
				ie_emissao_nf,
				ie_tipo_frete,
				vl_mercadoria,
				vl_total_nota,
				qt_peso_bruto,
				qt_peso_liquido,
				dt_atualizacao,
				nm_usuario,
				cd_condicao_pagamento,
				dt_contabil,
				cd_cgc,
				cd_pessoa_fisica,
				vl_ipi,
				vl_descontos,
				vl_frete,
				vl_seguro,
				vl_despesa_acessoria,
				ds_observacao,
				nr_nota_referencia,
				cd_serie_referencia,
				cd_natureza_operacao,
				dt_atualizacao_estoque,
				vl_desconto_rateio,
				ie_situacao,
				nr_ordem_compra,
				nr_lote_contabil,
				nr_sequencia,
				nr_sequencia_ref,
				cd_moeda,
				vl_conv_moeda,
				ie_entregue_bloqueto,
				ie_tipo_nota,
				cd_setor_digitacao,
				nr_nota_frete,
				nr_danfe,
				nr_senha,
				cd_control_code,
				nr_autorizacao,
                		vl_despesa_doc)
			values (	cd_estabelecimento_w,
			 	coalesce(cd_cgc_emitente_w, cd_cgc_estabelecimento_w),
			 	cd_serie_nf_p,
			 	nr_nota_fiscal_p,
				nr_sequencia_nf_w,
			 	cd_operacao_nota_p,
			 	coalesce(dt_emissao_p, trunc(clock_timestamp())),
			 	coalesce(dt_registro_w, dt_atualizacao_w),
			 	'1',
			 	'0',
			 	ie_frete_w,
			 	0,
			 	0,
			 	0,
			 	0,
			 	dt_atualizacao_w,
			 	nm_usuario_p,
			 	cd_condicao_pagamento_w,
			 	null,
			 	cd_cgc_emitente_w,
			 	cd_pessoa_fisica_w,
			 	0,
			 	vl_descontos_w,
				vl_frete_w,
			 	0,
			 	coalesce(vl_despesa_acessoria_w,0),
			 	ds_observacao_w,
			 	null,
			 	null,
				CASE WHEN cd_natureza_operacao_p=0 THEN  cd_natureza_operacao_w  ELSE cd_natureza_operacao_p END ,
			 	null,
			 	0,
			 	'1',
			 	nr_ordem_compra_w,
			 	0,
			 	nr_sequencia_w,
				null,
				cd_moeda_w,
				vl_cotacao_w,
				'N',
				CASE WHEN coalesce(cd_pessoa_fisica_w::text, '') = '' THEN  'EN'  ELSE 'EF' END ,
				cd_setor_digitacao_p,
				nr_nota_frete_p,
				nr_danfe_p,
				nr_senha_p,
				cd_control_code_p,
				nr_autorizacao_p,
                		vl_despesa_doc_w);
		end if;
	
		select	substr(obter_dados_material_estab(cd_material,cd_estabelecimento_w,'UME'),1,30) cd_unidade_medida_estoque,
			qt_conv_compra_estoque,
			cd_material_estoque
		into STRICT	cd_unidade_medida_estoque_w,
			qt_conv_compra_estoque_w,
			cd_material_estoque_w
		from 	material
		where	cd_material = cd_material_w;
		
		if (ie_busca_qt_lote_w = 'S') then
			select	sum(qt_material)
			into STRICT	qt_lote_w
			from	inspecao_recebimento_lote
			where	nr_seq_inspecao = nr_seq_inspecao_w;
			
			if (qt_lote_w > 0) then
				qt_prevista_entrega_w := qt_lote_w;
			end if;			
		end if;
		
		if (cd_unidade_medida_compra_w = cd_unidade_medida_estoque_w) then
			qt_item_estoque_w	:= qt_prevista_entrega_w;
		else
			qt_item_estoque_w	:= qt_prevista_entrega_w * qt_conv_compra_estoque_w;
		end if;

		if (coalesce(nr_seq_unidade_adic_w, 0) > 0) then
			select	qt_conversao
			into STRICT	qt_conversao_w
			from	unidade_medida_adic_compra
			where	nr_sequencia = nr_seq_unidade_adic_w;
			qt_item_estoque_w	:= qt_prevista_entrega_w * qt_conversao_w;
		end if;
		
				
		if (nr_seq_nota_transf_w IS NOT NULL AND nr_seq_nota_transf_w::text <> '') then /*Matheus OS 100334 04/08/2008*/
			select	coalesce(max(vl_unitario_item_nf),0)
			into STRICT	vl_unitario_item_nf_w
			from	nota_fiscal_item
			where	nr_sequencia	= nr_seq_nota_transf_w
			and	nr_item_oci	= nr_item_oci_w;
		end if;
		
		if (ie_busca_vl_ordem_w = 'S') and (nr_ordem_compra_w > 0) and (nr_item_oci_w > 0) then
			select	coalesce(vl_unitario_material,0)
			into STRICT	vl_unitario_item_nf_w
			from	ordem_compra_item
			where	nr_ordem_compra = nr_ordem_compra_w
			and	nr_item_oci = nr_item_oci_w;
		end if;			
		
		vl_unitario_item_nf_w	:= (coalesce(vl_unitario_item_nf_w,0) * coalesce(vl_cotacao_w,0));
		vl_total_item_nf_w	:= (coalesce(qt_prevista_entrega_w,0) * coalesce(vl_unitario_item_nf_w,0));
		
		
		if (vl_desconto_oci_w > 0) then
			vl_desconto_w		:= vl_desconto_oci_w;
		else
			vl_desconto_w		:= (vl_total_item_nf_w * pr_descontos_w) / 100 + coalesce(vl_desconto_oci_w,0);
		end if;
			
		vl_liquido_w		:=  vl_total_item_nf_w - vl_desconto_w;

		select (coalesce(max(nr_item_nf),0)+1)
		into STRICT	nr_item_nf_w
		from	nota_fiscal_item
		where nr_sequencia = nr_sequencia_w;

		nr_seq_conta_financeira_w := obter_conta_financeira(	'S', cd_estabelecimento_w, cd_material_w, null, null, null, null, cd_cgc_emitente_w, cd_centro_custo_w, nr_seq_conta_financeira_w, null, cd_operacao_nota_p, null, null, null, null, null, null, null, null, null, null, cd_local_estoque_w, null, null, null, null, null, null);

		if (nr_seq_conta_financeira_w = 0) then
			nr_seq_conta_financeira_w := null;
		end if;


		ie_tipo_conta_w	:= 3;
		if (coalesce(cd_centro_custo_w::text, '') = '') then
			ie_tipo_conta_w	:= 2;
		end if;
		
		SELECT * FROM define_conta_material(
				cd_estabelecimento_w, cd_material_w, ie_tipo_conta_w, 0, 0, 0, 0, 0, 0, 0, cd_local_estoque_w, cd_operacao_estoque_w, trunc(dt_atualizacao_w), cd_conta_contabil_ww, cd_centro_custo_w, null) INTO STRICT cd_conta_contabil_ww, cd_centro_custo_w;
		
		cd_sequencia_parametro_w := philips_contabil_pck.get_parametro_conta_contabil();

		if (ie_conta_contabil_w = 'N') then /*N - Nao atualiza conta contabil*/
			cd_conta_contabil_w := '';
			cd_sequencia_parametro_w:= null;
			
		elsif (ie_conta_contabil_w = 'OP') then /* OP - Atualiza c/ conta da OC, se nao tiver busca dos parametros contabil*/
			
			cd_conta_contabil_w := cd_conta_ordem_w;
			cd_sequencia_parametro_w:= null;
			if (coalesce(cd_conta_contabil_w,'X') = 'X') then
				cd_conta_contabil_w := cd_conta_contabil_ww;
			end if;
			
		elsif (ie_conta_contabil_w = 'O') then /*O - Atualiza c/ conta da Ordem de Compra (somente)*/
			cd_conta_contabil_w := cd_conta_ordem_w;
			cd_sequencia_parametro_w:= null;
			
		elsif (ie_conta_contabil_w = 'S') then /*S - Atualiza c/ conta dos parametros contabil, se nao tiver busca da OC*/
			
			cd_conta_contabil_w := cd_conta_contabil_ww;
			if (coalesce(cd_conta_contabil_w,'X') = 'X') then
				cd_conta_contabil_w := cd_conta_ordem_w;
				cd_sequencia_parametro_w:= null;
			end if;
		
		elsif (ie_conta_contabil_w = 'P') then /*P - Atualiza c/ conta dos parametros contabil (somente)*/
			cd_conta_contabil_w := cd_conta_contabil_ww;
		end if;
		

		if (nr_solic_compra_w IS NOT NULL AND nr_solic_compra_w::text <> '') and (coalesce(nr_seq_ordem_serv_w::text, '') = '') then
			select	nr_seq_ordem_serv
			into STRICT	nr_seq_ordem_serv_w
			from	solic_compra
			where	nr_solic_compra	= nr_solic_compra_w;
		end if;
		
		if (qt_dias_garantia_w IS NOT NULL AND qt_dias_garantia_w::text <> '') then
			dt_inicio_garantia_w	:= coalesce(dt_emissao_p, trunc(clock_timestamp()));
			dt_fim_garantia_w 		:= (coalesce(dt_emissao_p, trunc(clock_timestamp())) + qt_dias_garantia_w);
		end if;
		
		if (nr_seq_regra_contrato_w > 0) and (coalesce(nr_seq_proj_rec_w,0) = 0) then		
			select	nr_seq_proj_rec
			into STRICT	nr_seq_proj_rec_w
			from	contrato_regra_nf
			where	nr_sequencia = nr_seq_regra_contrato_w;		
		end if;
		
		insert into nota_fiscal_item(
			cd_estabelecimento,
			cd_cgc_emitente,
			cd_serie_nf,
			nr_nota_fiscal,
			nr_sequencia_nf,
			nr_item_nf,
			cd_natureza_operacao,
			qt_item_nf,
			vl_unitario_item_nf,
			vl_total_item_nf,
			dt_atualizacao,
			nm_usuario,
			vl_frete,
			vl_desconto,
			vl_despesa_acessoria,
			cd_material,
			cd_procedimento,
			cd_setor_atendimento,
			cd_conta,
			cd_local_estoque,
			ds_observacao,
			ds_complemento,
			qt_peso_bruto,
			qt_peso_liquido,
			cd_unidade_medida_compra,
			qt_item_estoque,
			cd_unidade_medida_estoque,
			cd_lote_fabricacao,
			dt_validade,
			dt_atualizacao_estoque,
			cd_conta_contabil,
			vl_desconto_rateio,
			vl_seguro,
			cd_centro_custo,
			cd_material_estoque,
			ie_origem_proced,
			nr_ordem_compra,
			nr_sequencia,
			vl_liquido,
			pr_desconto,
			nr_item_oci,
			dt_entrega_ordem,
			nr_seq_conta_financ,
			nr_seq_proj_rec,
			pr_desc_financ,
			nr_seq_ordem_serv,
			nr_atendimento,
			nr_seq_unidade_adic,
			nr_seq_proj_gpi,
			nr_seq_etapa_gpi,
			nr_seq_conta_gpi,
			nr_contrato,
			nr_seq_regra_contrato,
			nr_seq_inspecao,
			dt_inicio_garantia,
			dt_fim_garantia,
			nr_Seq_marca,
			nr_solic_compra,
			nr_item_solic_compra,
			cd_sequencia_parametro)
		values (	cd_estabelecimento_w,
			coalesce(cd_cgc_emitente_w,cd_cgc_estabelecimento_w),
			cd_serie_nf_p,
			nr_nota_fiscal_p,
			nr_sequencia_nf_w,
			nr_item_nf_w,
			CASE WHEN cd_natureza_operacao_p=0 THEN  cd_natureza_operacao_w  ELSE cd_natureza_operacao_p END ,
			coalesce(qt_prevista_entrega_w,0),
			coalesce(vl_unitario_item_nf_w,0),
			coalesce(vl_total_item_nf_w,0),
			dt_atualizacao_w,
			nm_usuario_p,
			coalesce(vl_frete_w,0),
			coalesce(vl_desconto_w,0),
			coalesce(vl_despesa_acessoria_w,0),
			cd_material_w,
			null,
			null,
			null,
			cd_local_estoque_w,
			ds_observacao_item_w,
			ds_material_direto_w,
			null,
			null,
			cd_unidade_medida_compra_w,
			coalesce(qt_item_estoque_w,0),
			cd_unidade_medida_estoque_w,
			'',
			null,
			null,
			cd_conta_contabil_w,
			0,
			0,
			cd_centro_custo_w,
			cd_material_estoque_w,
			null,
			nr_ordem_compra_w,
			nr_sequencia_w,
			coalesce(vl_liquido_w,0),
			pr_descontos_w,
			nr_item_oci_w,
			dt_prevista_entrega_w,
			nr_seq_conta_financeira_w,
			nr_seq_proj_rec_w,
			pr_desc_financ_w,
			nr_seq_ordem_serv_w,
			nr_atendimento_w,
			nr_seq_unidade_adic_w,
			nr_seq_proj_gpi_w,
			nr_seq_etapa_gpi_w,
			nr_seq_conta_gpi_w,
			nr_contrato_w,
			nr_seq_regra_contrato_w,
			nr_seq_inspecao_w,
			dt_inicio_garantia_w,
			dt_fim_garantia_w,
			nr_Seq_marca_ww,
			nr_solic_compra_w,
			nr_item_solic_compra_w,
			cd_sequencia_parametro_w);
		commit;

		update	inspecao_recebimento
		set	nr_nota_fiscal 	   = nr_nota_fiscal_p,
			nr_seq_nota_fiscal = nr_sequencia_w,
			nr_seq_item_nf	   = nr_item_nf_w
		where	nr_sequencia = nr_seq_inspecao_w;

		if (nr_seq_criterio_rateio_w IS NOT NULL AND nr_seq_criterio_rateio_w::text <> '') then
			CALL ratear_item_nf(nr_sequencia_w, nr_item_nf_w, nr_seq_criterio_rateio_w, nm_usuario_p, trunc(dt_atualizacao_w));
		end if;

		select	count(*)
		into STRICT	qt_registro_lote_w
		from	inspecao_recebimento_lote
		where	nr_seq_inspecao = nr_seq_inspecao_w;
		
		open c03;
		loop
		fetch c03 into
			dt_validade_lote_w,
			dt_fabricacao_w,
			ds_lote_fornecedor_w,
			qt_material_lote_w,
			nr_seq_marca_w,
			ie_indeterminada_w,
			cd_barra_material_w,
			ds_barras_w;
		EXIT WHEN NOT FOUND; /* apply on c03 */
			begin				
			if (qt_registro_lote_w > 1) then
				
				insert into nota_fiscal_item_lote(
					nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					nr_seq_nota,
					nr_item_nf,
					dt_validade,
					qt_material,
					cd_lote_fabricacao,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_seq_marca,
					nr_seq_lote_fornec,
					ie_indeterminado,
					cd_barra_material,
					ds_barras,
					dt_fabricacao)
				values (	nextval('nota_fiscal_item_lote_seq'),
					clock_timestamp(),
					nm_usuario_p,
					nr_sequencia_w,
					nr_item_nf_w,
					dt_validade_lote_w,
					qt_material_lote_w,
					ds_lote_fornecedor_w,
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_marca_w,
					null,
					ie_indeterminada_w,
					cd_barra_material_w,
					ds_barras_w,
					dt_fabricacao_w);
				
				/*tem que gravar a marca que esta no lote, senao fica com a marca que esta na ordem de compra, mas isso esta errado. Tem que ser aquilo que esta inspecionado*/

				if (nr_seq_marca_w > 0) then
					update	nota_fiscal_item
					set	nr_seq_marca	= nr_seq_marca_w
					where	nr_sequencia	= nr_sequencia_w
					and	nr_item_nf	= nr_item_nf_w;
				end if;
					
			else
				update	nota_fiscal_item
				set	dt_validade		= dt_validade_lote_w,
					cd_lote_fabricacao	= ds_lote_fornecedor_w,
					ie_indeterminado	= ie_indeterminada_w,
					cd_barra_material	= cd_barra_material_w,
					ds_barras			= ds_barras_w,
					dt_fabricacao		= dt_fabricacao_w,
					nr_seq_marca		= nr_seq_marca_w
				where	nr_sequencia = nr_sequencia_w
				and	nr_item_nf = nr_item_nf_w;
			end if;
			end;
		end loop;
		close c03;
		
		if (ie_com_ordem_w = 'S') then
		
			open c04;
			loop
			fetch c04 into
				cd_tributo_w,
				pr_tributo_w,
				vl_tributo_w;
			EXIT WHEN NOT FOUND; /* apply on c04 */
				begin
				insert into nota_fiscal_item_trib(
					cd_estabelecimento,
					cd_cgc_emitente,
					cd_serie_nf,
					nr_nota_fiscal,
					nr_sequencia_nf,
					nr_item_nf,
					cd_tributo,
					vl_tributo,
					dt_atualizacao,
					nm_usuario,
					vl_base_calculo,
					tx_tributo,
					vl_reducao_base,
					nr_sequencia,
					ie_rateio,
					vl_trib_nao_retido,
					vl_base_nao_retido,
					vl_trib_adic,
					vl_base_adic)
				values (	cd_estabelecimento_w,
					coalesce(cd_cgc_emitente_w,cd_cgc_estabelecimento_w),
					cd_serie_nf_p,
					nr_nota_fiscal_p,
					nr_sequencia_nf_w,
					nr_item_nf_w,
					cd_tributo_w,
					vl_tributo_w,
					dt_atualizacao_w,
					nm_usuario_p,
					vl_liquido_w,
					pr_tributo_w,
					0,
					nr_sequencia_w,
					'N',
					0,
					0,
					0,
					0);
				end;
			end loop;
			close c04;
		end if;
		
		if (ie_com_ordem_w = 'S') then
	
			/* para gerar os vencimentos na nota */

			select	ie_forma_pagamento
			into STRICT	ie_forma_pagamento_w
			from	condicao_pagamento
			where	cd_condicao_pagamento = cd_condicao_pagamento_w;

			select	coalesce(sum(vl_desc_financ),0)
			into STRICT	vl_desc_financ_w
			from	nota_fiscal_item
			where	nr_sequencia	= nr_sequencia_w;

			select	coalesce(sum(a.vl_vencimento),0)
			into STRICT	vl_tot_venc_w
			from	ordem_compra_venc a
			where	a.nr_ordem_compra = nr_ordem_compra_w;
			
			if (ie_forma_pagamento_w <> 1) and (ie_venc_ordem_p = 'S') then
				open c05;
				loop
				fetch	c05 into
					dt_vencimento_w,
					vl_vencimento_w,
					ds_observacao_venc_w;
				EXIT WHEN NOT FOUND; /* apply on c05 */
					begin
					select	coalesce(sum(obter_valor_liquido_ordem(nr_ordem_compra)),0)
					into STRICT	vl_liquido_ordem_w
					from	ordem_compra
					where	nr_ordem_compra = nr_ordem_compra_w;

					select	coalesce(sum(vl_item_liquido),0)
					into STRICT	vl_total_item_ordem_w
					from 	ordem_compra_item
					where	nr_ordem_compra	= nr_ordem_compra_w
				  	and	coalesce(qt_material,0) > coalesce(qt_material_entregue,0);

					vl_vencto_w		:= ((vl_vencimento_w * vl_total_item_ordem_w) / vl_liquido_ordem_w);
					vl_desc_fin_venc_w	:=  dividir_sem_round(vl_vencto_w,vl_tot_venc_w) * vl_desc_financ_w;					

					if (vl_vencto_w <> 0) then
						begin
						insert into nota_fiscal_venc(
							nr_sequencia,
							cd_estabelecimento,
							cd_cgc_emitente,
							cd_serie_nf,
							nr_nota_fiscal,
							nr_sequencia_nf,
							dt_vencimento,
							vl_vencimento,
							dt_atualizacao,
							nm_usuario,
							vl_desc_financ,
							ds_observacao,
							ie_origem)
						values ( nr_sequencia_w,
							cd_estabelecimento_w,
							coalesce(cd_cgc_emitente_w, cd_cgc_estabelecimento_w),
							cd_serie_nf_p,
							nr_nota_fiscal_p,
							nr_sequencia_nf_w,
							dt_vencimento_w,
							vl_vencto_w,
							clock_timestamp(),
							nm_usuario_p,
							vl_desc_fin_venc_w,
							ds_observacao_venc_w,
							'N');
						exception when others then
							ds_erro_w	:= sqlerrm(SQLSTATE);
									
							CALL wheb_mensagem_pck.exibir_mensagem_abort(180485,	'NR_ORDEM_COMPRA_W='||nr_ordem_compra_w||';'||
													'DT_VENCIMENTO_W='||dt_vencimento_w||';'||
													'VL_VENCIMENTO_W='||vl_vencimento_w||';'||
													'DS_ERRO_W='||ds_erro_w);
						end;
					end if;
					end;
				end loop;
				close c05;
			end if;
		end if;
		
		if (coalesce(ie_gerar_adiant_oc_w,'N') = 'S' ) then
		
			open C06;
			loop
			fetch C06 into	
				nr_ordem_compra_adiant_w;
			EXIT WHEN NOT FOUND; /* apply on C06 */
				begin
				
				open C07;
				loop
				fetch C07 into
					nr_adiant_oc_w,
					vl_vinculado_oc_w;
				EXIT WHEN NOT FOUND; /* apply on C07 */
					begin

					if (nr_adiant_oc_w IS NOT NULL AND nr_adiant_oc_w::text <> '') and (vl_vinculado_oc_w IS NOT NULL AND vl_vinculado_oc_w::text <> '') then

						insert into nota_fiscal_adiant_pago(
							nr_sequencia,
							dt_atualizacao,
							dt_atualizacao_nrec,
							nm_usuario,
							nm_usuario_nrec,
							nr_adiantamento,
							nr_seq_trans_financ,
							nr_sequencia_nf,
							vl_vinculado)
						values (	nextval('nota_fiscal_adiant_pago_seq'),
							clock_timestamp(),
							clock_timestamp(),
							nm_usuario_p,
							nm_usuario_p,
							nr_adiant_oc_w,
							null,
							nr_sequencia_w,
							vl_vinculado_oc_w);
					end if;
					end;
				end loop;
				close C07;
				end;
			end loop;
			close C06;
		end if;
		
	end;
	end loop;
	close C02;
	end;
end loop;
close c01;

update	inspecao_registro
set	nr_seq_nf = nr_sequencia_w
where	nr_sequencia = nr_seq_registro_p;

CALL gerar_historico_nota_fiscal(nr_sequencia_w, nm_usuario_p, '19', WHEB_MENSAGEM_PCK.get_texto(301581,'NR_SEQ_REGISTRO_P='||nr_seq_registro_p));

nr_sequencia_p := nr_sequencia_w;

if (Obter_Param_Usuario_padrao(270,112,wheb_usuario_pck.get_cd_perfil,wheb_usuario_pck.get_nm_usuario,wheb_usuario_pck.get_cd_estabelecimento) = 'S') then
    For r01 in c08(nr_seq_registro_p) loop
        For r02 in c09(r01.nr_sequencia) loop
            INSERT INTO NOTA_FISCAL_ANEXO(
                                            nr_sequencia,
                                            dt_atualizacao,
                                            nm_usuario,
                                            dt_atualizacao_nrec, 
                                            nm_usuario_nrec,
                                            nr_seq_nota,
                                            ds_arquivo,
                                            ds_arquivo_html
                                           )  
                                     VALUES (
                                            nextval('nota_fiscal_anexo_seq'),
                                            clock_timestamp(), 
                                            nm_usuario_p,
                                            clock_timestamp(),
                                            nm_usuario_p,
                                            nr_sequencia_p,
                                            r02.ds_arquivo,
                                            r02.ds_arquivo
                                           );
            end loop;
		end loop;
    end if;

commit;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_nf_registro_inspecao ( nr_nota_fiscal_p nota_fiscal.nr_nota_fiscal%type, cd_serie_nf_p text, nm_usuario_p text, cd_operacao_nota_p bigint, cd_natureza_operacao_p bigint, cd_local_estoque_p bigint, cd_centro_custo_p bigint, cd_condicao_pagamento_p text, vl_cotacao_p bigint, dt_emissao_p timestamp, ie_retorna_frete_p text, nr_sequencia_p INOUT bigint, ie_venc_ordem_p text, cd_setor_digitacao_p bigint, nr_nota_frete_p text, nr_seq_registro_p bigint, nr_danfe_p text, nr_senha_p text, cd_control_code_p NOTA_FISCAL.CD_CONTROL_CODE%type default null, nr_autorizacao_p NOTA_FISCAL.NR_AUTORIZACAO%type default null) FROM PUBLIC;

