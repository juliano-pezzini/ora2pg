-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE sus_rateio_sp_bpa ( nr_interno_conta_p bigint, cd_estabelecimento_p bigint) AS $body$
DECLARE


nr_sequencia_w		bigint	:= 0;
nr_seq_partic_w		bigint	:= 0;
vl_amb_unif_w		double precision	:= 0;
vl_anestesista_w		double precision	:= 0;
vl_medico_w		double precision	:= 0;
cd_procedimento_w	bigint;
ie_origem_proced_w	bigint;
pr_anestesista_w		real	:= 0;
pr_medico_w		real	:= 0;
nr_seq_regra_w		bigint;
nr_seq_forma_org_w	bigint;
nr_seq_grupo_w		bigint;
nr_seq_subgrupo_w	bigint;
ie_funcao_w		varchar(10);

C01 CURSOR FOR
	SELECT	a.nr_sequencia,
		coalesce(c.nr_seq_partic,0),
		coalesce(c.ie_funcao,'0'),
		coalesce(b.vl_amb_unif,0),
		a.cd_procedimento,
		a.ie_origem_proced
	FROM sus_valor_proc_paciente b, procedimento_paciente a
LEFT OUTER JOIN procedimento_participante c ON (a.nr_sequencia = c.nr_sequencia)
WHERE a.nr_interno_conta		= nr_interno_conta_p and a.nr_sequencia		= b.nr_sequencia  and coalesce(b.vl_amb_unif,0)		> 0 and coalesce(a.cd_motivo_exc_conta::text, '') = '';

C02 CURSOR FOR
	SELECT	nr_sequencia
	from	sus_regra_rateio_sp_bpa
	where	coalesce(cd_procedimento,cd_procedimento_w) 	= cd_procedimento_w
	and	coalesce(ie_origem_proced,ie_origem_proced_w)	= ie_origem_proced_w
	and	coalesce(nr_seq_forma_org,nr_seq_forma_org_w)	= nr_seq_forma_org_w
	and	coalesce(nr_seq_subgrupo,nr_seq_subgrupo_w) 	= nr_seq_subgrupo_w
	and	coalesce(nr_seq_grupo,nr_seq_grupo_w) 		= nr_seq_grupo_w
	and	cd_estabelecimento = cd_estabelecimento_p
	and	ie_situacao = 'A'
	order by	nr_seq_grupo,
		nr_seq_subgrupo,
		nr_seq_forma_org,
		cd_procedimento;


BEGIN

open C01;
loop
fetch C01 into
	nr_sequencia_w,
	nr_seq_partic_w,
	ie_funcao_w,
	vl_amb_unif_w,
	cd_procedimento_w,
	ie_origem_proced_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	begin
	select	nr_seq_forma_org,
		nr_seq_subgrupo,
		nr_seq_grupo
	into STRICT	nr_seq_forma_org_w,
		nr_seq_subgrupo_w,
		nr_seq_grupo_w
	from	sus_estrutura_procedimento_v
	where	cd_procedimento	= cd_procedimento_w
	and	ie_origem_proced	= ie_origem_proced_w;
	exception
	when others then
		nr_seq_forma_org_w	:= 0;
		nr_seq_subgrupo_w	:= 0;
		nr_seq_grupo_w		:= 0;
	end;

	open C02;
	loop
	fetch C02 into
		nr_seq_regra_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
	end loop;
	close C02;

	begin
	select	pr_anestesista,
		pr_medico
	into STRICT	pr_anestesista_w,
		pr_medico_w
	from	sus_regra_rateio_sp_bpa
	where	nr_sequencia = nr_seq_regra_w;
	exception
	when others then
		pr_anestesista_w := 0;
		pr_medico_w	 := 0;
	end;

	if (pr_anestesista_w > 0) and (coalesce(nr_seq_partic_w,0) <> 0) and (Sus_Obter_Indicador_Equipe(ie_funcao_w) = 6) then
		begin

		vl_anestesista_w := vl_amb_unif_w * (pr_anestesista_w/100);

		if (vl_anestesista_w > 0) then
			begin

			update	procedimento_participante
			set	vl_participante	= vl_anestesista_w,
				vl_conta		= vl_anestesista_w
			where	nr_sequencia	= nr_sequencia_w
			and	nr_seq_partic	= nr_seq_partic_w;

			update	sus_valor_proc_paciente
			set	vl_ato_anestesista	= vl_anestesista_w,
				vl_sadt		= (vl_sadt - vl_anestesista_w),
				vl_sadt_unif	= (vl_sadt_unif - vl_anestesista_w)
			where	nr_sequencia	= nr_sequencia_w;

			update	procedimento_paciente
			set	vl_anestesista		= vl_anestesista_w,
				vl_custo_operacional	= (vl_custo_operacional - vl_anestesista_w)
			where	nr_sequencia		= nr_sequencia_w;

			end;
		end if;

		end;
	end if;

	if (pr_medico_w > 0) then
		begin

		vl_medico_w := vl_amb_unif_w * (pr_medico_w/100);

		if (vl_medico_w > 0) then
			begin

			update	sus_valor_proc_paciente
			set	vl_medico	= vl_medico_w,
				vl_medico_rateio	= vl_medico_w,
				vl_sadt		= (vl_sadt - vl_medico_w),
				vl_sadt_unif	= (vl_sadt_unif - vl_medico_w)
			where	nr_sequencia	= nr_sequencia_w;

			update	procedimento_paciente
			set	vl_medico		= vl_medico_w,
				vl_custo_operacional	= (vl_custo_operacional - vl_medico_w)
			where	nr_sequencia		= nr_sequencia_w;

			end;
		end if;

		end;
	end if;

	end;
end loop;
close C01;

if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE sus_rateio_sp_bpa ( nr_interno_conta_p bigint, cd_estabelecimento_p bigint) FROM PUBLIC;

