-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ctb_calcular_tributo ( cd_empresa_p bigint, nr_seq_tributo_p bigint, nm_usuario_p text) AS $body$
DECLARE


cd_conta_contabil_w		varchar(20);
cd_estabelecimento_w		bigint;
cd_tributo_w			bigint;
dt_mesano_ref_w			timestamp;
nr_seq_mes_ref_w		bigint;
nr_seq_tributo_w		bigint;
vl_saldo_w			double precision;
vl_base_calculo_w		double precision;
pr_aliquota_w			double precision;
ie_acumulativo_w		varchar(255);
vl_tributo_w			double precision;
cd_beneficiario_w		varchar(255);
cd_cond_pagto_w			bigint;
cd_conta_financ_w		bigint;
nr_seq_trans_reg_w		bigint;
nr_seq_trans_baixa_w		bigint;
vl_minimo_base_w		double precision;
vl_minimo_tributo_w		double precision;
vl_teto_base_calculo_w		double precision;
vl_desc_dependente_w		double precision;
cd_darf_w			varchar(255);
cd_variacao_w			varchar(255);
nr_seq_regra_w			bigint;
ie_periodicidade_w		varchar(255);
vl_trib_nao_retido_w		double precision;
vl_trib_adic_w			double precision;
vl_base_nao_retido_w		double precision;
vl_base_adic_w			double precision;
vl_reducao_w			double precision;
cd_cgc_w			varchar(14);
nr_seq_classe_w			bigint;
cd_tipo_baixa_neg_w		integer;
vl_deducao_base_w		double precision;
vl_adicional_w			double precision;
vl_deducao_trib_calc_w		double precision;
pr_reducao_base_w		double precision;
nr_seq_estrut_calc_w		ctb_tributo.nr_seq_estrut_calc%type;
cd_estab_regra_w		estabelecimento.cd_estabelecimento%TYPE;
nr_seq_regra_irpf_w		regra_calculo_irpf.nr_sequencia%type;

c01 CURSOR FOR
SELECT	a.cd_conta_contabil,
	coalesce(sum(ctb_obter_vl_tributo(a.cd_conta_contabil,a.ie_soma_diminui,a.ie_tipo_valor,a.cd_tributo,cd_estabelecimento_w,nr_seq_mes_ref_w)),0)
from	tributo_regra_ctb a
where	a.cd_empresa			= cd_empresa_p
and	a.cd_tributo			= cd_tributo_w
and 	coalesce(a.ie_retencao_tributo, 'N')	= 'N'
group by a.cd_conta_contabil;


BEGIN
cd_estab_regra_w := wheb_usuario_pck.get_cd_estabelecimento;

select	coalesce(max(a.dt_mesano_ref),clock_timestamp()),
	max(a.cd_tributo),
	max(a.cd_estabelecimento),
	max(b.cd_cgc),
	coalesce(max(a.vl_deducao_base), 0),
	coalesce(max(a.vl_adicional), 0),
	coalesce(max(a.vl_deducao_trib_calc), 0),
	max(a.nr_seq_estrut_calc)
into STRICT	dt_mesano_ref_w,
	cd_tributo_w,
	cd_estabelecimento_w,
	cd_cgc_w,
	vl_deducao_base_w,
	vl_adicional_w,
	vl_deducao_trib_calc_w,
	nr_seq_estrut_calc_w
from	estabelecimento b,
	ctb_tributo a
where	b.cd_estabelecimento	= coalesce(a.cd_estabelecimento,cd_estab_regra_w)
and	a.nr_sequencia		= nr_seq_tributo_p;

if (coalesce(nr_seq_estrut_calc_w,0) = 0) then

	select	max(nr_sequencia)
	into STRICT	nr_seq_mes_ref_w
	from	ctb_mes_ref
	where	cd_empresa	= cd_empresa_p
	and	dt_referencia	= trunc(dt_mesano_ref_w,'mm');

	delete	FROM ctb_tributo_saldo
	where	nr_seq_tributo	= nr_seq_tributo_p;

	open C01;
	loop
	fetch C01 into	
		cd_conta_contabil_w,
		vl_saldo_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		
		insert into ctb_tributo_saldo(
			nr_sequencia,
			nm_usuario,
			dt_atualizacao,
			nm_usuario_nrec,
			dt_atualizacao_nrec,
			nr_seq_tributo,
			cd_conta_contabil,
			vl_saldo)
		values (	nextval('ctb_tributo_saldo_seq'),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nr_seq_tributo_p,
			cd_conta_contabil_w,
			vl_saldo_w);
		
		end;
	end loop;
	close C01;

	select	coalesce(sum(ctb_obter_vl_tributo(a.cd_conta_contabil,a.ie_soma_diminui,a.ie_tipo_valor,a.cd_tributo,cd_estabelecimento_w,nr_seq_mes_ref_w)),0)
	into STRICT	vl_base_calculo_w
	from	tributo_regra_ctb a
	where	a.cd_empresa		= cd_empresa_p
	and 	coalesce(a.ie_retencao_tributo, 'N')	= 'N'
	and	a.cd_tributo		= cd_tributo_w;

	SELECT * FROM obter_dados_trib_tit_pagar(	cd_tributo_w, coalesce(cd_estabelecimento_w,cd_estab_regra_w), cd_cgc_w, null, cd_beneficiario_w, pr_aliquota_w, cd_cond_pagto_w, cd_conta_financ_w, nr_seq_trans_reg_w, nr_seq_trans_baixa_w, vl_minimo_base_w, vl_minimo_tributo_w, ie_acumulativo_w, VL_TETO_BASE_CALCULO_w, vl_desc_dependente_w, cd_darf_w, dt_mesano_ref_w, cd_variacao_w, ie_periodicidade_w, 'AT', null, null, null, null, null, nr_seq_regra_w, null, 0, nr_seq_classe_w, cd_tipo_baixa_neg_w, vl_base_calculo_w, 'N', null, '0', null, null) INTO STRICT cd_beneficiario_w, pr_aliquota_w, cd_cond_pagto_w, cd_conta_financ_w, nr_seq_trans_reg_w, nr_seq_trans_baixa_w, vl_minimo_base_w, vl_minimo_tributo_w, ie_acumulativo_w, VL_TETO_BASE_CALCULO_w, vl_desc_dependente_w, cd_darf_w, cd_variacao_w, ie_periodicidade_w, nr_seq_regra_w, nr_seq_classe_w, cd_tipo_baixa_neg_w;
	
	if (nr_seq_regra_w IS NOT NULL AND nr_seq_regra_w::text <> '') then /*AAMFIRMO OS 59462601/06/2013 */
		
		select	coalesce(max(pr_reducao_base),0)
		into STRICT	pr_reducao_base_w
		from 	tributo_conta_pagar
		where	nr_sequencia	= nr_seq_regra_w;
		
		if ( coalesce(pr_reducao_base_w,0) > 0 ) then
			vl_base_calculo_w := ( vl_base_calculo_w - ( (pr_reducao_base_w/100) * vl_base_calculo_w ) );
		end if;
	end if;	
	--Ao calcular o tributo o Vl base calculo devera somar o valor digitado no Vl.adicional e subtrair o valor digitado em Vl deducao.
	if ((vl_base_calculo_w + vl_adicional_w) > 0) then
		if ((vl_base_calculo_w + vl_adicional_w) < vl_deducao_base_w) then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(224447);
		end if;
	end if;

	SELECT * FROM obter_valores_tributo(		coalesce(ie_acumulativo_w,'N'), pr_aliquota_w, null, null, null, null, null, null, vl_base_calculo_w, vl_tributo_w, vl_trib_nao_retido_w, vl_trib_adic_w, vl_base_nao_retido_w, vl_base_adic_w, null, null, null, null, vl_reducao_w, vl_desc_dependente_w, null, vl_deducao_base_w, vl_adicional_w, null, null, null, nr_seq_regra_irpf_w) INTO STRICT pr_aliquota_w, vl_base_calculo_w, vl_tributo_w, vl_trib_nao_retido_w, vl_trib_adic_w, vl_base_nao_retido_w, vl_base_adic_w, vl_reducao_w, vl_desc_dependente_w, nr_seq_regra_irpf_w;

	if (vl_deducao_trib_calc_w = 0) then				
		select	coalesce(sum(ctb_obter_vl_tributo(a.cd_conta_contabil,a.ie_soma_diminui,a.ie_tipo_valor,a.cd_tributo,cd_estabelecimento_w,nr_seq_mes_ref_w)),0)
		into STRICT 	vl_deducao_trib_calc_w
		from	tributo_regra_ctb a
		where	a.cd_empresa		= cd_empresa_p
		and 	coalesce(a.ie_retencao_tributo, 'N')	= 'S'
		and	a.cd_tributo		= cd_tributo_w;
	end if;

	if ((vl_tributo_w - vl_deducao_trib_calc_w) < 0) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(240303);
	end if;

	vl_tributo_w := vl_tributo_w - vl_deducao_trib_calc_w;
	
	update	ctb_tributo
	set	vl_base_calculo		= vl_base_calculo_w,
		vl_deducao_trib_calc	= vl_deducao_trib_calc_w,
		vl_tributo		= vl_tributo_w,
		nm_usuario		= nm_usuario_p,
		dt_atualizacao		= clock_timestamp()
	where	nr_sequencia		= nr_seq_tributo_p;
elsif (coalesce(nr_seq_estrut_calc_w,0) > 0) then
	
	select	sum(CASE WHEN b.ie_base_calculo='S' THEN  a.vl_item END ),
		sum(CASE WHEN b.ie_base_adicional='S' THEN  a.vl_item END ),
		sum(CASE WHEN b.ie_resultado='S' THEN  a.vl_item END ),
		sum(CASE WHEN b.ie_deducao_base='S' THEN  a.vl_item END )
	into STRICT	vl_base_calculo_w,
		vl_adicional_w,
		vl_tributo_w,
		vl_deducao_base_w
	from	fis_calculo_estrut a,
		fis_estrutura_item b
	where	a.nr_seq_item		= b.nr_sequencia
	and	a.nr_seq_tributo	= nr_seq_tributo_p;
	
	vl_tributo_w	:= vl_tributo_w - coalesce(vl_deducao_trib_calc_w,0);
	
	update	ctb_tributo
	set	vl_base_calculo		= vl_base_calculo_w,
		vl_adicional		= vl_adicional_w,
		vl_deducao_base		= vl_deducao_base_w,
		vl_tributo		= vl_tributo_w,
		nm_usuario		= nm_usuario_p,
		dt_atualizacao		= clock_timestamp()
	where	nr_sequencia		= nr_seq_tributo_p;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_calcular_tributo ( cd_empresa_p bigint, nr_seq_tributo_p bigint, nm_usuario_p text) FROM PUBLIC;

