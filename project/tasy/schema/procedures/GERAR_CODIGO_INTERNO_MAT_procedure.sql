-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_codigo_interno_mat ( cd_convenio_p bigint, nm_usuario_p text) AS $body$
DECLARE



nr_seq_w		bigint;
nr_seq_conv_w		bigint := 0;
nr_seq_conv_prox_w	bigint := 0;
cd_item_convenio_w	varchar(20);
cd_item_convenio_ww	varchar(20);
cd_material_w		bigint;
qt_update_w		smallint := 0;
nr_seq_ant_w		bigint := 0;
cd_mat_simpro_w		integer;
cd_mat_brasindice_w	integer;
ds_item_conv_carga_w		varchar(150);
ds_item_conv_conversao_w	varchar(200);
ie_atualiza_desc_w		varchar(1);
dt_vigencia_w		timestamp;
cd_estabelecimento_w	bigint := wheb_usuario_pck.get_cd_estabelecimento;

c01 CURSOR FOR
SELECT	NR_SEQUENCIA,
	CD_ITEM_CONVENIO,
	ds_item_convenio
from	convenio_carga_preco
where	cd_convenio = cd_convenio_p
and	ie_status = 'C'
order by cd_item_convenio,
	nr_sequencia;

c02 CURSOR FOR
SELECT	cd_material,
	cd_material_convenio,
	nr_sequencia,
	ds_material_convenio
from	conversao_material_convenio a
where	a.cd_convenio		= cd_convenio_p
and	a.cd_material_convenio	= cd_item_convenio_w
and 	a.ie_situacao = 'A'
and	dt_vigencia_w between coalesce(dt_inicio_vigencia,dt_vigencia_w) and coalesce(dt_final_vigencia,dt_vigencia_w)
and	coalesce(a.cd_estabelecimento,cd_estabelecimento_w)	= cd_estabelecimento_w
and	not exists (select	1
	from 	convenio_carga_preco x
	where	x.cd_convenio		= cd_convenio_p
	and	x.ie_status 		= 'V'
	and	x.CD_ITEM_CONVENIO	= cd_item_convenio_w
	and	x.cd_material		= a.cd_material)
order by nr_sequencia,
	cd_material_convenio;


BEGIN

dt_vigencia_w		:= clock_timestamp();
ie_atualiza_desc_w	:= coalesce(Obter_Valor_Param_Usuario(921,125,obter_perfil_ativo,nm_usuario_P,wheb_usuario_pck.get_cd_estabelecimento),'N');

open c01;
loop
fetch c01 into
	nr_seq_w,
	cd_item_convenio_w,
	ds_item_conv_carga_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	open c02;
	loop
	fetch c02 into
		cd_material_w,
		cd_item_convenio_ww,
		nr_seq_conv_w,
		ds_item_conv_conversao_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin
		if (nr_seq_ant_w <> nr_seq_w) then

			if (ie_atualiza_desc_w = 'S') and (ds_item_conv_carga_w <> ds_item_conv_conversao_w) then

				update  conversao_material_convenio
				set 	ds_material_convenio = ds_item_conv_carga_w
				where	nr_sequencia = nr_seq_conv_w;

			end if;

			update	convenio_carga_preco
			set	cd_material	= cd_material_w,
				ie_status	= 'V',
				nm_usuario	= nm_usuario_p,
				dt_atualizacao	= clock_timestamp(),
				nr_seq_regra_conv = nr_seq_conv_w
			where	nr_sequencia	= nr_seq_w;
			nr_seq_ant_w	:= nr_seq_w;
		else
			CALL duplica_carga_preco(nr_seq_w, cd_material_w, nm_usuario_p, nr_seq_conv_w);
		end if;
		end;
	end loop;
	close c02;
	end;
	qt_update_w := 0;
end loop;
close c01;


if (Obter_Valor_Param_Usuario(obter_funcao_Ativa,33,obter_perfil_ativo,nm_usuario_P,0)	= 'S') then
	open C01;
	loop
	fetch C01 into
		nr_seq_w,
		cd_item_convenio_w,
		ds_item_conv_carga_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		cd_material_w		:= null;
		cd_mat_simpro_w		:= obter_material_simpro(somente_numero(cd_item_convenio_w));
		cd_mat_brasindice_w	:= obter_material_brasindice(cd_item_convenio_w,null,null);
		if (cd_mat_simpro_w IS NOT NULL AND cd_mat_simpro_w::text <> '') then
			cd_material_w		:= cd_mat_simpro_w;
		elsif (cd_mat_brasindice_w IS NOT NULL AND cd_mat_brasindice_w::text <> '') then
			cd_material_w		:= cd_mat_brasindice_w;
		end if;

		if (cd_material_w IS NOT NULL AND cd_material_w::text <> '') then

			update	convenio_carga_preco
			set	cd_material	= cd_material_w,
				ie_status	= 'V',
				nm_usuario	= nm_usuario_p,
				dt_atualizacao	= clock_timestamp()
			where	nr_sequencia	= nr_seq_w;

		end if;
		end;
	end loop;
	close C01;
end if;


commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_codigo_interno_mat ( cd_convenio_p bigint, nm_usuario_p text) FROM PUBLIC;

