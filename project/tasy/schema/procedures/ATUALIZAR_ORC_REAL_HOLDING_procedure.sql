-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualizar_orc_real_holding ( nr_seq_mes_ref_p bigint, cd_empresa_p bigint, nm_usuario_p text) AS $body$
DECLARE



vl_movimento_w				double precision;
cd_conta_contabil_w			varchar(40);
cd_centro_custo_w				bigint;
cd_estabelecimento_w			smallint;
nr_sequencia_w				bigint	:= 0;
vl_empenho_w				double precision	:= 0;
ie_empenho_orcamento_w			varchar(1);
ie_real_orc_detalhe_w			varchar(1);
ie_desconsidera_lote_encerr_w		varchar(1);
cd_estab_atual_w			estabelecimento.cd_estabelecimento%type;
dt_referencia_w				ctb_mes_ref.dt_referencia%type;

c01 CURSOR FOR
	SELECT	a.cd_conta_contabil,
		a.cd_centro_custo,
		(a.vl_movimento - a.vl_encerramento) vl_movimento,
		a.cd_estabelecimento
	from 	ctb_grupo_conta c,
		conta_contabil b,
		ctb_saldo a,
		grupo_emp_estrutura d
	where 	nr_seq_mes_ref 		= nr_seq_mes_ref_p
	and	a.cd_conta_contabil	= b.cd_conta_contabil
	and	c.cd_empresa = d.cd_empresa
	and d.nr_seq_grupo = holding_pck.get_grupo_emp_usuario_vigente(cd_empresa_p)
	and	b.cd_grupo		= c.cd_grupo
	and	(a.cd_centro_custo IS NOT NULL AND a.cd_centro_custo::text <> '')
	and (a.vl_movimento - a.vl_encerramento) <> 0
	and	c.ie_tipo			in ('R','C','D')
	and	coalesce(b.ie_tipo,'A')		= 'A'
	and	ie_desconsidera_lote_encerr_w	= 'S'
	
union all

	SELECT	a.cd_conta_contabil,
		a.cd_centro_custo,
		a.vl_movimento vl_movimento,
		a.cd_estabelecimento
	from 	ctb_grupo_conta c,
		conta_contabil b,
		ctb_saldo a, 
		grupo_emp_estrutura d
	where 	nr_seq_mes_ref 		= nr_seq_mes_ref_p
	and	a.cd_conta_contabil	= b.cd_conta_contabil
	and	c.cd_empresa = d.cd_empresa
	and d.nr_seq_grupo = holding_pck.get_grupo_emp_usuario_vigente(cd_empresa_p)
	and	b.cd_grupo		= c.cd_grupo
	and	(a.cd_centro_custo IS NOT NULL AND a.cd_centro_custo::text <> '')
	and	a.vl_movimento <> 0
	and	c.ie_tipo			in ('R','C','D')
	and	coalesce(b.ie_tipo,'A')		= 'A'
	and	ie_desconsidera_lote_encerr_w	= 'N';



BEGIN
cd_estab_atual_w		:= wheb_usuario_pck.get_cd_estabelecimento;

ie_real_orc_detalhe_w		:= coalesce(substr(obter_valor_param_usuario(925, 96, obter_perfil_ativo, nm_usuario_p, cd_estab_atual_w), 1, 1), 'N');

ie_desconsidera_lote_encerr_w	:= coalesce(substr(obter_valor_param_usuario(925, 119, obter_perfil_ativo, nm_usuario_p, cd_estab_atual_w), 1, 1), 'N');

update	ctb_orcamento
set	vl_realizado 	= 0,
	vl_empenho	= 0
where 	nr_seq_mes_ref 	= nr_seq_mes_ref_p;

commit;



open c01;
loop
fetch c01 into
	cd_conta_contabil_w,
	cd_centro_custo_w,
	vl_movimento_w,
	cd_estabelecimento_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin

	vl_empenho_w	:= 0;
	
	select	coalesce(max(ie_empenho_orcamento),'N')
	into STRICT	ie_empenho_orcamento_w
	from	parametro_estoque
	where	cd_estabelecimento = cd_estabelecimento_w;
	
	if (ie_empenho_orcamento_w = 'S') then
		select	ctb_obter_empenho_orcamento(
				nr_seq_mes_ref_p,
				cd_conta_contabil_w,
				cd_centro_custo_w,
				cd_estabelecimento_w)
		into STRICT	vl_empenho_w
		;
	end if;

	select	coalesce(max(nr_sequencia),0)
	into STRICT	nr_sequencia_w
	from 	ctb_orcamento
	where	cd_conta_contabil	= cd_conta_contabil_w
  	and	cd_centro_custo	= cd_centro_custo_w
  	and	nr_seq_mes_ref	= nr_seq_mes_ref_p
  	and	cd_estabelecimento	= cd_estabelecimento_w;

	if (nr_sequencia_w <> 0) then
		update ctb_orcamento
		set	vl_realizado	= vl_movimento_w,
			vl_empenho	= vl_empenho_w
		where 	nr_sequencia	= nr_sequencia_w
		and 	nr_seq_mes_ref	= nr_seq_mes_ref_p;

	else
		begin

		select	nextval('ctb_orcamento_seq')
		into STRICT	nr_sequencia_w
		;

		insert into ctb_orcamento(
			nr_sequencia,
			nr_seq_mes_ref,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			cd_estabelecimento,
			cd_conta_contabil,
			cd_centro_custo,
			vl_original,
			vl_orcado,
			vl_realizado,
			vl_empenho,
			ie_cenario,
			ie_origem_orc)
		values (nr_sequencia_w,
			nr_seq_mes_ref_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			cd_estabelecimento_w,
			cd_conta_contabil_w,
			cd_centro_custo_w,
			0,0,
			vl_movimento_w,
			vl_empenho_w,'N',
			'SIS');
		end;

	end if;

	/*Atualizar realizado do orcamento detalhado*/

	if (ie_real_orc_detalhe_w = 'S') then

		CALL ctb_atualizar_real_orc_detalhe(	cd_estabelecimento_w,
						nr_seq_mes_ref_p,
						cd_centro_custo_w,
						cd_conta_contabil_w,
						nm_usuario_p);

	end if;

	commit;
	end;
end loop;
close c01;

begin

select	count(*)
into STRICT	nr_sequencia_w
from	ctb_orc_cenario
where	ie_tipo_cenario	= 'P';

if (nr_sequencia_w > 0) then
	CALL ctb_atualizar_capex_realizado(nr_seq_mes_ref_p, null, nm_usuario_p);
end if;
exception when others then
	nr_sequencia_w	:= null;
end;

select	coalesce(max(ie_empenho_orcamento),'N')
into STRICT	ie_empenho_orcamento_w
from	parametro_estoque
where	cd_estabelecimento = cd_estab_atual_w;

if (ie_empenho_orcamento_w = 'S') then
	begin

	SELECT 	max(dt_referencia)
	into STRICT	dt_referencia_w
	FROM 	ctb_mes_ref 
	where 	nr_sequencia = nr_seq_mes_ref_p;
	
	
	ctb_atualizar_empenho_orc(cd_estab_atual_w, dt_referencia_w , 'N', nm_usuario_p);
	
	commit;
	end;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualizar_orc_real_holding ( nr_seq_mes_ref_p bigint, cd_empresa_p bigint, nm_usuario_p text) FROM PUBLIC;

