-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE exportar_solicitacao_exame_ext ( nr_pedido_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
cont_lab_w			bigint;
cont_nao_lab_w			bigint;
nr_seq_resultado_w		bigint;
nr_seq_pac_prot_externo_w	bigint;
nr_seq_exame_externo_item_w	bigint;
nr_seq_exame_lab_w		bigint;
nr_atendimento_w		bigint;
nr_laudo_w			bigint;
cd_pessoa_fisica_w		varchar(20);
ds_solicitacao_w		text;

NR_SEQ_LAUDO_W			bigint;
ie_regra_importacao_w		varchar(10);

C01 CURSOR FOR 
	SELECT  a.nr_sequencia, 
		 a.nr_seq_exame_lab 
	from   pedido_exame_externo_item a 
	where  a.nr_seq_pedido = nr_pedido_p 
	and   (a.nr_seq_exame_lab IS NOT NULL AND a.nr_seq_exame_lab::text <> '');
C02 CURSOR FOR
	SELECT  a.nr_sequencia, 
		 a.nr_seq_exame_lab 
	from   pedido_exame_externo_item a 
	where  a.nr_seq_pedido = nr_pedido_p 
	and   coalesce(a.nr_seq_exame_lab::text, '') = '';

BEGIN
 
if (nr_pedido_p IS NOT NULL AND nr_pedido_p::text <> '') then 
	begin 
	 
	select	count(*) 
	into STRICT	cont_lab_w 
	from  pedido_exame_externo_item a 
	where  a.nr_seq_pedido = nr_pedido_p 
	and   (a.nr_seq_exame_lab IS NOT NULL AND a.nr_seq_exame_lab::text <> '');
	 
	select	count(*) 
	into STRICT	cont_nao_lab_w 
	from  pedido_exame_externo_item a 
	where  a.nr_seq_pedido = nr_pedido_p 
	and   coalesce(a.nr_seq_exame_lab::text, '') = '';
	 
--Exames laboratóriais 
	 
	if (cont_lab_w > 0) then 
		select	e.nr_atendimento, 
			a.cd_pessoa_fisica 
		into STRICT	nr_atendimento_w, 
			cd_pessoa_fisica_w 
		from	pedido_exame_externo e, 
			atendimento_paciente a 
		where	e.nr_atendimento = a.nr_atendimento 
		and	e.nr_sequencia = nr_pedido_p;
			 
		select	coalesce(max(nr_seq_resultado),0)+1 
		into STRICT	nr_seq_resultado_w 
		from	exame_lab_resultado;
			 
		insert	into exame_lab_resultado( 
			nr_seq_resultado, 
			dt_resultado, 
			dt_atualizacao, 
			nm_usuario, 
			nr_prescricao, 
			nr_atendimento, 
			cd_medico, 
			nr_seq_protocolo, 
			dt_liberacao, 
			cd_pessoa_fisica 
			) 
			SELECT	nr_seq_resultado_w, 
				clock_timestamp(), 
				clock_timestamp(), 
				nm_usuario_p, 
				null, 
				e.nr_atendimento, 
				e.cd_profissional, 
				null, 
				null, 
				cd_pessoa_fisica_w 
			from	pedido_exame_externo e 
			where	e.nr_sequencia = nr_pedido_p;
		commit;
		 
		open C01;
		loop 
		fetch C01 into	 
			nr_seq_exame_externo_item_w, 
			nr_seq_exame_lab_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin 
			 
			select obter_se_regra_ped_exame(nr_seq_exame_externo_item_w) 
			into STRICT  ie_regra_importacao_w 
			;
		 
			if (ie_regra_importacao_w = 'S') then 
			 
				nr_seq_exame_lab_w := nr_seq_exame_lab_w + 1;
 
				insert 	into exame_lab_result_item( 
					nr_seq_resultado, 
					nr_sequencia, 
					nr_seq_exame, 
					dt_atualizacao, 
					nm_usuario 
					) 
					SELECT	nr_seq_resultado_w, 
						nr_seq_exame_lab_w, 
						i.nr_seq_exame_lab, 
						clock_timestamp(), 
						nm_usuario_p 
					from	pedido_exame_externo_item i, 
						pedido_exame_externo e 
					where	i.nr_sequencia 	= nr_seq_exame_externo_item_w 
					and	i.nr_seq_pedido = e.nr_sequencia;	
			 
				commit;
				 
			end if;
			end;
			end loop;
			close C01;
	end if;	
--cursor 02	Exame não laboratórial 
	if (cont_nao_lab_w > 0) then 
		select	e.nr_atendimento, 
			a.cd_pessoa_fisica 
		into STRICT	nr_atendimento_w, 
			cd_pessoa_fisica_w 
		from	pedido_exame_externo e, 
			atendimento_paciente a 
		where	e.nr_atendimento = a.nr_atendimento 
		and	e.nr_sequencia = nr_pedido_p;
		 
		select	nextval('imagem_pac_prot_externo_seq') 
		into STRICT	nr_seq_pac_prot_externo_w 
		;
		 
		insert 	into imagem_pac_prot_externo( 
			nr_sequencia, 
			nr_atendimento, 
			dt_atualizacao, 
			nm_usuario, 
			dt_atualizacao_nrec, 
			nm_usuario_nrec, 
			dt_exame, 
			cd_pessoa_fisica, 
			cd_medico 
			) 
			SELECT	nr_seq_pac_prot_externo_w, 
				e.nr_atendimento, 
				clock_timestamp(), 
				nm_usuario_p, 
				clock_timestamp(), 
				nm_usuario_p, 
				clock_timestamp(), 
				cd_pessoa_fisica_w, 
				e.cd_profissional 
			from	pedido_exame_externo e 
			where	e.nr_sequencia = nr_pedido_p;
		commit;
		 
		open C02;
		loop 
		fetch C02 into	 
			nr_seq_exame_externo_item_w, 
			nr_seq_exame_lab_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin 
			 
			select obter_se_regra_ped_exame(nr_seq_exame_externo_item_w) 
			into STRICT  ie_regra_importacao_w 
			;
		 
			if (ie_regra_importacao_w = 'S') then 
		 
				select (coalesce(max(nr_laudo),0) + 1) 
				into STRICT	nr_laudo_w 
				from	laudo_paciente 
				where	nr_atendimento = nr_atendimento_w;
				/* 
				select	ds_solicitacao 
				into	ds_solicitacao_w 
				from	pedido_exame_externo_item i, 
					PEDIDO_EXAME_EXTERNO e 
				where	i.nr_sequencia 	= nr_seq_exame_externo_item_w 
				and	i.nr_seq_pedido = e.nr_sequencia; 
				*/
 
				SELECT	nextval('laudo_paciente_seq') 
				INTO STRICT	NR_SEQ_LAUDO_W 
				;
				insert 	into laudo_paciente( 
					nr_sequencia, 
					nr_seq_pac_prot_ext, 
					nr_atendimento, 
					ds_laudo, 
					dt_entrada_unidade, 
					nr_laudo, 
					nm_usuario, 
					dt_atualizacao, 
					cd_medico_resp, 
					qt_imagem, 
					cd_pessoa_fisica, 
					ds_titulo_laudo, 
					dt_laudo 
					) 
					SELECT	NR_SEQ_LAUDO_W, 
						nr_seq_pac_prot_externo_w, 
						e.nr_atendimento, 
						' ', 
						clock_timestamp(), 
						nr_laudo_w, 
						nm_usuario_p, 
						clock_timestamp(), 
						e.cd_profissional, 
						0, 
						cd_pessoa_fisica_w, 
						Obter_Desc_Proc_Interno(i.nr_proc_interno), 
						clock_timestamp() 
					from	pedido_exame_externo_item i, 
						pedido_exame_externo e 
					where	i.nr_sequencia 	= nr_seq_exame_externo_item_w 
					and	i.nr_seq_pedido = e.nr_sequencia;
				commit;	
				 
				begin 
				CALL copia_campo_long_de_para('PEDIDO_EXAME_EXTERNO','DS_SOLICITACAO','WHERE NR_SEQUENCIA = :nr_seq_solic','nr_seq_solic='||nr_pedido_p, 
								'LAUDO_PACIENTE','DS_LAUDO','WHERE NR_SEQUENCIA = :nr_seq_laudo','nr_seq_laudo='||NR_SEQ_LAUDO_W);
				exception 
					when others then 
					null;
				end;
				commit;
			end if;
			end;
		end loop;
		close C02;
	end if;
	end;
end if;	
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE exportar_solicitacao_exame_ext ( nr_pedido_p bigint, nm_usuario_p text) FROM PUBLIC;

