-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE com_gravar_comunicado_dest ( nr_seq_comunicado_p bigint, ds_lista_seq_pessoa_p text, cd_cnpj_p text, ds_lista_cnpj_p text, cd_tipo_complemento_p text, ie_tipo_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
-- opcoes ie_tipo_p: 
-- 1 = somente para a lista de sequencia de pessoas; 
-- 2 = para a lista de clientes; 
	 
ds_lista_w 		varchar(2000);
nr_seq_pessoa_w		bigint;
nr_pos_virgula_w	bigint;
cd_cnpj_w		varchar(14) := '';
c01 CURSOR FOR
	SELECT	nr_sequencia 
	from	pessoa_juridica_compl a 
	where	cd_cgc	= cd_cnpj_w 
	and	((cd_tipo_complemento_p = '0') or (ie_tipo_complemento = cd_tipo_complemento_p)) 
	and	not exists (	SELECT	1 
				from	comercial_comunicado_dest x 
				where	x.ds_email = a.ds_email 
				and	x.nr_seq_comunicado = nr_seq_comunicado_p);
	

BEGIN 
if (nr_seq_comunicado_p IS NOT NULL AND nr_seq_comunicado_p::text <> '') and (ie_tipo_p IS NOT NULL AND ie_tipo_p::text <> '') and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') then 
	begin 
	 
	if (ie_tipo_p = 1) and (cd_cnpj_p IS NOT NULL AND cd_cnpj_p::text <> '') then 
		begin 
		ds_lista_w	:= ds_lista_seq_pessoa_p;
		 
		while(ds_lista_w IS NOT NULL AND ds_lista_w::text <> '') loop 
			begin 
			nr_pos_virgula_w	:= position(',' in ds_lista_w);
			if (nr_pos_virgula_w > 0) then 
				begin 
				nr_seq_pessoa_w		:= substr(ds_lista_w,0,nr_pos_virgula_w-1);
				ds_lista_w		:= substr(ds_lista_w,nr_pos_virgula_w+1,length(ds_lista_w));			
				end;
			else 
				begin 
				nr_seq_pessoa_w		:= (ds_lista_w)::numeric;
				ds_lista_w		:= null;
				end;
			end if;	
			 
			if (coalesce(nr_seq_pessoa_w,0) > 0) then 
				begin 
				CALL comercial_gravar_destinatario(nr_seq_comunicado_p,nr_seq_pessoa_w,cd_cnpj_p,nm_usuario_p);
				end;
			end if;
			end;
		end loop;
		end;
	else if (ie_tipo_p = 2) and (ds_lista_cnpj_p IS NOT NULL AND ds_lista_cnpj_p::text <> '') then 
		begin 
		ds_lista_w	:= ds_lista_cnpj_p;
		while(ds_lista_w IS NOT NULL AND ds_lista_w::text <> '') loop 
			begin 
			 
			nr_pos_virgula_w	:= position(',' in ds_lista_w);
			if (nr_pos_virgula_w > 0) then 
				begin 
				cd_cnpj_w		:= substr(ds_lista_w,0,nr_pos_virgula_w-1);
				ds_lista_w		:= substr(ds_lista_w,nr_pos_virgula_w+1,length(ds_lista_w));			
				end;
			else 
				begin 
				cd_cnpj_w		:= (ds_lista_w)::numeric;
				ds_lista_w		:= null;
				end;
			end if;	
			 
			open C01;
			loop 
				fetch C01 into	 
					nr_seq_pessoa_w;
				EXIT WHEN NOT FOUND; /* apply on c01 */
				begin 
				if (coalesce(nr_seq_pessoa_w,0) > 0) then 
					begin 
					CALL comercial_gravar_destinatario( 
						nr_seq_comunicado_p, 
						nr_seq_pessoa_w, 
						cd_cnpj_w, 
						nm_usuario_p);
					end;
				end if;
				end;
			end loop;
			close c01;
			end;
		end loop;
		end;
	end if;
	end if;	
	end;
end if;
commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE com_gravar_comunicado_dest ( nr_seq_comunicado_p bigint, ds_lista_seq_pessoa_p text, cd_cnpj_p text, ds_lista_cnpj_p text, cd_tipo_complemento_p text, ie_tipo_p bigint, nm_usuario_p text) FROM PUBLIC;

