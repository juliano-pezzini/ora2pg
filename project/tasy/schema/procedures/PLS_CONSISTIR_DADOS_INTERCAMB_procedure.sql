-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_consistir_dados_intercamb (nr_sequencia_p bigint, ie_opcao_p text, ie_inconsistencia_p INOUT text, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type, nr_seq_lote_p pls_fatura.nr_seq_lote%type) AS $body$
DECLARE

					
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Efetuar chamada das rotinas de consistencia do intercambio
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[  ]  Objetos do dicionario [X] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao:	IE_OPCAO_P
	FAT - OPS - Faturamento - A500 TXT - XML TISS
	A550 - OPS - Controle de Contestacoes - A550 TXT
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
cd_cooperativa_w			pls_congenere.cd_cooperativa%type;

c01 CURSOR(	nr_seq_lote_pc	pls_lote_faturamento.nr_sequencia%type) FOR
	SELECT	nr_sequencia
	from	pls_fatura
	where	nr_seq_lote = nr_seq_lote_pc;
	
BEGIN

if (ie_opcao_p = 'FAT') then

--obtem o codigo da coop para identificar se e unimed(not null) ou fundacao(null) 
select 	substr(pls_obter_dados_cooperativa((select max(a.nr_seq_congenere) from pls_fatura a where a.nr_sequencia= nr_sequencia_p),'C'),1,255)
into STRICT	cd_cooperativa_w
;
	
	if (cd_cooperativa_w IS NOT NULL AND cd_cooperativa_w::text <> '') then
		-- A500
		CALL pls_consistir_dados_inter_a500(nr_sequencia_p, cd_estabelecimento_p, nm_usuario_p, 'PTU');
	else
		-- XML
		CALL pls_consistir_dados_inter_tiss(nr_sequencia_p, cd_estabelecimento_p, nm_usuario_p, 'TISS');
	end if;
	
	select	CASE WHEN count(1)=0 THEN  'N'  ELSE 'S' END
	into STRICT	ie_inconsistencia_p
	from	w_pls_inconsistencia_int
	where	nr_seq_fatura = nr_sequencia_p  LIMIT 1;
end if;

if (ie_opcao_p = 'A550') then
	CALL pls_consistir_dados_inter_a550( nr_sequencia_p, cd_estabelecimento_p, nm_usuario_p, 'PTU');
	
	select	CASE WHEN count(1)=0 THEN  'N'  ELSE 'S' END
	into STRICT	ie_inconsistencia_p
	from	w_pls_inconsistencia_int
	where	nr_seq_contestacao = nr_sequencia_p  LIMIT 1;
end if;

if (ie_opcao_p = 'LOTE') then
	for r_c01_w in c01( nr_seq_lote_p ) loop
	
	--obtem o codigo da coop para identificar se e unimed(not null) ou fundacao(null)
	select 	substr(pls_obter_dados_cooperativa((select max(a.nr_seq_congenere) from pls_fatura a where a.nr_sequencia= r_c01_w.nr_sequencia),'C'),1,255)
	into STRICT	cd_cooperativa_w
	;
		if (cd_cooperativa_w IS NOT NULL AND cd_cooperativa_w::text <> '') then
			-- A500
			CALL pls_consistir_dados_inter_a500(r_c01_w.nr_sequencia, cd_estabelecimento_p, nm_usuario_p, 'PTU');
		else		
			-- XML
			CALL pls_consistir_dados_inter_tiss(r_c01_w.nr_sequencia, cd_estabelecimento_p, nm_usuario_p, 'TISS');
		end if;
		
		if (coalesce(ie_inconsistencia_p, 'N') = 'N') then
			select	CASE WHEN count(1)=0 THEN  'N'  ELSE 'S' END
			into STRICT	ie_inconsistencia_p
			from	w_pls_inconsistencia_int
			where	nr_seq_fatura = r_c01_w.nr_sequencia  LIMIT 1;
		end if;
	end loop;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_consistir_dados_intercamb (nr_sequencia_p bigint, ie_opcao_p text, ie_inconsistencia_p INOUT text, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type, nr_seq_lote_p pls_fatura.nr_seq_lote%type) FROM PUBLIC;

