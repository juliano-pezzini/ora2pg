-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_recalcular_coparticipacao ( nr_seq_lote_p bigint, nr_seq_conta_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE


nr_seq_lib_copartic_w		pls_lib_coparticipacao.nr_sequencia%type;
nr_seq_conta_coparticipacao_w	pls_conta_coparticipacao.nr_sequencia%type;
vl_coparticipacao_w		pls_conta_coparticipacao.vl_coparticipacao%type;
nr_seq_regra_copartic_w		pls_conta_proc.nr_seq_regra_copartic%type;
nr_seq_lote_ted_w		pls_lote_ted_copartic.nr_sequencia%type;
nm_beneficiario_w		varchar(255);

C01 CURSOR FOR
	SELECT	b.nr_seq_segurado,
		d.nr_seq_conta,
		d.nr_seq_conta_proc,
		d.nr_seq_conta_mat,
		d.nr_sequencia nr_seq_conta_coparticipacao,
		b.nm_usuario,
		b.dt_atualizacao,
		b.nr_seq_lote,
		b.nr_seq_prestador_exec,
		b.nr_seq_prestador_atend,
		b.dt_atualizacao_nrec,
		b.nm_usuario_nrec,
		b.tx_coparticipacao,
		b.vl_coparticipacao,
		b.vl_coparticipacao_unit,
		b.vl_base_copartic,
		b.qt_liberada_copartic,
		coalesce(b.vl_liberado,0) vl_liberado,
		b.nr_seq_material,
		b.dt_emissao,
		b.cd_procedimento,
		b.ie_origem_proced,
		b.dt_mes_competencia,
		d.ie_status_coparticipacao,
		(SELECT	coalesce(vl_liberado, 0)
		from	pls_conta_proc
		where	nr_sequencia = d.nr_seq_conta_proc
		
union

		select	coalesce(vl_liberado, 0)
		from	pls_conta_mat
		where	nr_sequencia = d.nr_seq_conta_mat) vl_lib_item,
		coalesce(d.nr_lote_contabil_estorno,0) nr_lote_contabil_estorno,
		coalesce(d.nr_lote_contabil_prov,0) nr_lote_contabil_prov
	from	pls_conta_coparticipacao	d,
		pls_lib_coparticipacao		b
	where	b.nr_seq_conta_coparticipacao   = d.nr_sequencia
	and	b.nr_seq_lote			= nr_seq_lote_p
	and	b.nr_seq_conta			= nr_seq_conta_p
	and	exists (select	1
			from	pls_coparticipacao_critica x
			where	x.nr_seq_lib_copartic = b.nr_sequencia)
	and	not exists (	select	1
				from	pls_conta_coparticipacao x,
					pls_regra_coparticipacao y
				where	x.nr_seq_regra = y.nr_sequencia
				and	x.nr_seq_conta = d.nr_seq_conta
				and	x.nr_sequencia <> d.nr_sequencia
				and	y.ie_forma_cobr_internacao = 'G'
				and	y.vl_coparticipacao > 0
				and	x.vl_coparticipacao > 0);

type 		fetch_array is table of C01%rowtype;
s_array 	fetch_array;
i		integer := 1;
type vetor is table of fetch_array index by integer;
vetor_c01_w			vetor;

BEGIN

select	max(c.nr_seq_lote)
into STRICT	nr_seq_lote_ted_w
from	pls_conta_coparticipacao x,
	pls_ted_copartic_item	a,
	pls_ted_copartic_benef	b,
	pls_ted_copartic_pagador c
where	x.nr_sequencia	= a.nr_seq_conta_copartic
and	b.nr_sequencia	= a.nr_seq_ted_benef
and	c.nr_sequencia	= b.nr_seq_ted_pagador
and	x.nr_seq_conta	= nr_seq_conta_p;

if (nr_seq_lote_ted_w IS NOT NULL AND nr_seq_lote_ted_w::text <> '') then -- Não é possível realizar o recálculo, pois já existe coparticipação vinculada ao lote #@NR_SEQ_LOTE#@ na função OPS - Transferência Eletrônica de Dados (TED) / Controle de coparticipações
	CALL wheb_mensagem_pck.exibir_mensagem_abort(336374,'NR_SEQ_LOTE='||nr_seq_lote_ted_w);
end if;

open c01;
loop
fetch c01 bulk collect into s_array limit 1000;
	vetor_c01_w(i) := s_array;
	i := i + 1;
EXIT WHEN NOT FOUND; /* apply on c01 */
end loop;
close c01;


delete  FROM pls_coparticipacao_critica
where	nr_seq_lib_copartic in (	SELECT nr_sequencia
					from	pls_lib_coparticipacao
					where	nr_seq_conta_coparticipacao in (select nr_sequencia
										from	pls_conta_coparticipacao
										where	nr_seq_conta	= nr_seq_conta_p));
					
delete	FROM pls_lib_coparticipacao
where	nr_seq_conta_coparticipacao in (SELECT nr_sequencia
					from	pls_conta_coparticipacao
					where	nr_seq_conta	= nr_seq_conta_p);
									
CALL pls_deletar_coparticipacao(nr_seq_conta_p,null,'S', 'N', null, null, nm_usuario_p,cd_estabelecimento_p);
commit;

for i in 1..Vetor_c01_w.count loop
	s_array := Vetor_c01_w(i);
	for z in 1..s_array.count loop
		begin
		if (s_array[z].vl_lib_item > 0) and (s_array[z].nr_lote_contabil_estorno = 0) and -- não pode ta contabilizado
			(s_array[z].nr_lote_contabil_prov = 0) then -- não pode ta contabilizado
			
			if (s_array[z](.nr_seq_conta_proc IS NOT NULL AND .nr_seq_conta_proc::text <> '')) then
				CALL pls_gerar_coparticipacao_proc(s_array[z].nr_seq_conta_proc,'N',nm_usuario_p);
				
				CALL pls_gerar_coparticipacao(s_array[z].nr_seq_conta_proc,  s_array[z].nr_seq_segurado,  s_array[z].nr_seq_conta,
							cd_estabelecimento_p, nm_usuario_p, 0,
							null,null,null,
							null,null,'',
							null,null,null,
							null);
				
				select	max(nr_sequencia)
				into STRICT	nr_seq_conta_coparticipacao_w
				from	pls_conta_coparticipacao
				where	nr_seq_conta_proc =  s_array[z].nr_seq_conta_proc;
				
				update	pls_conta_coparticipacao
				set	ie_status_coparticipacao	=  s_array[z].ie_status_coparticipacao
				where	nr_seq_conta_proc		=  s_array[z].nr_seq_conta_proc;
				
				select 	max(nr_seq_regra_copartic)
				into STRICT	nr_seq_regra_copartic_w
				from	pls_conta_proc
				where	nr_sequencia =  s_array[z].nr_seq_conta_proc;
			elsif (s_array[z](.nr_seq_conta_mat IS NOT NULL AND .nr_seq_conta_mat::text <> '')) then

				CALL pls_gerar_coparticipacao(null,  s_array[z].nr_seq_segurado,  s_array[z].nr_seq_conta,
							cd_estabelecimento_p, nm_usuario_p,  s_array[z].nr_seq_conta_mat,
							null,null,null,
							null,null,'',
							null,null,null,
							null);
				
				select	max(nr_sequencia)
				into STRICT	nr_seq_conta_coparticipacao_w
				from	pls_conta_coparticipacao
				where	nr_seq_conta_mat = s_array[z].nr_seq_conta_mat;
				
				update	pls_conta_coparticipacao
				set	ie_status_coparticipacao	=  s_array[z].ie_status_coparticipacao
				where	nr_seq_conta_mat		=  s_array[z].nr_seq_conta_mat;
				
				select 	max(nr_seq_regra_copartic)
				into STRICT	nr_seq_regra_copartic_w
				from	pls_conta_mat
				where	nr_sequencia = s_array[z].nr_seq_conta_mat;
			end if;
			
			select	nextval('pls_lib_coparticipacao_seq')
			into STRICT	nr_seq_lib_copartic_w
			;
			
			select	coalesce(max(vl_coparticipacao),0)
			into STRICT	vl_coparticipacao_w
			from	pls_conta_coparticipacao
			where	nr_sequencia = nr_seq_conta_coparticipacao_w;
			
			insert	into	pls_lib_coparticipacao(	nr_sequencia, nm_usuario, dt_atualizacao,
				nr_seq_lote, nr_seq_prestador_exec, nr_seq_prestador_atend,
				nr_seq_conta_coparticipacao, dt_atualizacao_nrec, nm_usuario_nrec,
				tx_coparticipacao, vl_coparticipacao, vl_coparticipacao_unit,
				vl_base_copartic, qt_liberada_copartic, nr_seq_segurado,
				vl_liberado, nr_seq_material, dt_emissao,
				cd_procedimento, ie_origem_proced, dt_mes_competencia,
				nr_seq_conta, nr_seq_regra_copartic)
			values (	nr_seq_lib_copartic_w, s_array[z].nm_usuario, s_array[z].dt_atualizacao,
				s_array[z].nr_seq_lote, s_array[z].nr_seq_prestador_exec, s_array[z].nr_seq_prestador_atend,
				nr_seq_conta_coparticipacao_w, s_array[z].dt_atualizacao_nrec, s_array[z].nm_usuario_nrec,
				s_array[z].tx_coparticipacao, vl_coparticipacao_w, s_array[z].vl_coparticipacao_unit,
				s_array[z].vl_base_copartic, s_array[z].qt_liberada_copartic, s_array[z].nr_seq_segurado,
				s_array[z].vl_liberado, s_array[z].nr_seq_material, s_array[z].dt_emissao,
				s_array[z].cd_procedimento, s_array[z].ie_origem_proced, s_array[z].dt_mes_competencia,
				s_array[z].nr_seq_conta, nr_seq_regra_copartic_w);
			
			CALL pls_criticar_coparticipacao(nr_seq_lib_copartic_w, nm_usuario_p, cd_estabelecimento_p);
			
			nm_beneficiario_w	:= substr(pls_obter_dados_segurado(s_array[z].nr_seq_segurado, 'N'),1,255);
			
			CALL pls_gravar_hist_lote_copartic(	nr_seq_lote_p,
						substr('Realizado recálculo da(s) coparticipação(ões) da conta ' || nr_seq_conta_p || ' do beneficiário: ' || s_array[z].nr_seq_segurado ||' - '|| nm_beneficiario_w,1,4000),
						nm_usuario_p,
						cd_estabelecimento_p);
		end if;
		end;
	end loop;
end loop;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_recalcular_coparticipacao ( nr_seq_lote_p bigint, nr_seq_conta_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

