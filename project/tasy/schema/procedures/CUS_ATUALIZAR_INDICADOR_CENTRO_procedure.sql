-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE cus_atualizar_indicador_centro ( nr_seq_tabela_p bigint, cd_estabelecimento_p bigint, cd_centro_controle_p bigint, nr_seq_indicador_p bigint, nm_usuario_p text, ie_manter_informado_p text default 'N') AS $body$
DECLARE


cd_empresa_w					EMPRESA.CD_EMPRESA%Type;
cd_sequencia_criterio_w				CRITERIO_DISTR_ORC.CD_SEQUENCIA_CRITERIO%Type;
cd_tabela_custo_w				TABELA_CUSTO.CD_TABELA_CUSTO%Type;
dt_mes_referencia_w				timestamp;
nr_seq_indicador_w				RESULTADO_INDICADOR.NR_SEQUENCIA%Type;
qt_criterio_w					bigint;
qt_divisor_w					resultado_ind_cen_cont.qt_divisor%Type;
qt_indicador_w					RESULTADO_IND_CEN_CONT.QT_INDICADOR%Type;
vl_indicador_w					RESULTADO_IND_CEN_CONT.VL_INDICADOR%Type;
vl_custo_total_w				RESULTADO_CENTRO_CONTROLE.VL_MES%Type;
cd_estabelecimento_w			RESULTADO_IND_CEN_CONT.cd_estabelecimento%type;

c01 CURSOR FOR
SELECT	a.cd_estabelecimento,
	a.nr_seq_indicador nr_seq_indicador,
	a.qt_indicador qt_indicador,
	b.ie_forma_obtencao ie_forma_obtencao,
	b.ie_rotina_obtencao ie_rotina_obtencao,
	coalesce(b.ie_calcula_total,'N') ie_calcula_total
from 	resultado_indicador b,
	resultado_ind_cen_cont a
where	a.nr_seq_indicador 	= b.nr_sequencia
and	a.nr_seq_tabela		= nr_seq_tabela_p
and	a.cd_centro_controle	= cd_centro_controle_p
--and	a.cd_estabelecimento	= cd_estabelecimento_p
and	b.nr_sequencia		= coalesce(nr_seq_indicador_p, b.nr_sequencia)
/*OS1992919 - Jean - Projeto Da vita - Inicio */

and	exists (	SELECT	1
		from	tabela_custo_acesso_v tca
		where	tca.nr_sequencia	= nr_seq_tabela_p
		and	tca.cd_estabelecimento	= a.cd_estabelecimento);
/*OS1992919 - Jean - Projeto Da vita - Final*/

vet01	c01%RowType;


BEGIN

select	max(cd_tabela_custo),
	max(cd_empresa),
	max(dt_mes_referencia)
into STRICT	cd_tabela_custo_w,
	cd_empresa_w,
	dt_mes_referencia_w
from	tabela_custo
where	nr_sequencia	= nr_seq_tabela_p;

/*Gerar indicadores que faltam caso o usuário tenha excluído */

if (coalesce(nr_seq_indicador_p::text, '') = '') then

	CALL cus_gerar_indic_res_centro(	cd_estabelecimento_p,
					cd_centro_controle_p,
					cd_tabela_custo_w,
					nr_seq_tabela_p,
					nm_usuario_p);
end if;

select	coalesce(sum(CASE WHEN b.ie_custo_setor='S' THEN  vl_mes  ELSE vl_mes * -1 END ),0)
into STRICT	vl_custo_total_w
from	classif_result b,
	resultado_centro_controle a
where	cd_estabelecimento	= cd_estabelecimento_p
and	a.nr_seq_tabela		= nr_seq_tabela_p
and	cd_centro_controle	= cd_centro_controle_p
and	ie_classif_conta	= cd_classificacao
and	b.cd_empresa	= cd_empresa_w
and	ie_custo_setor	<> 'N';

open C01;
loop
fetch C01 into	
	vet01;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	cd_sequencia_criterio_w		:= null;
	qt_indicador_w			:= 0;
	vl_indicador_w			:= 0;
	qt_divisor_w			:= null;
	if (vet01.ie_forma_obtencao = 'S') then
		begin
		select	count(*)
		into STRICT	qt_criterio_w
		from	resultado_ind_criterio a
		where	a.nr_seq_indicador	= vet01.nr_seq_indicador
		and	a.cd_estabelecimento	= vet01.cd_estabelecimento
		and	a.nr_seq_tabela		= nr_seq_tabela_p;
	
		if (qt_criterio_w = 0) then
			qt_indicador_w := coalesce(obter_indicador_cc(vet01.cd_estabelecimento,dt_mes_referencia_w, cd_centro_controle_p, cd_centro_controle_p, vet01.ie_rotina_obtencao, nr_seq_tabela_p),0);
			
			if (vet01.ie_rotina_obtencao = '8') then
				qt_divisor_w := coalesce(obter_indicador_cc(vet01.cd_estabelecimento,dt_mes_referencia_w, cd_centro_controle_p, cd_centro_controle_p, '-8', nr_seq_tabela_p),0);
			end if;
	
		else
			SELECT * FROM cus_obter_indicador_criterio(vet01.cd_estabelecimento, nr_seq_tabela_p, cd_centro_controle_p, vet01.nr_seq_indicador, cd_sequencia_criterio_w, qt_indicador_w) INTO STRICT cd_sequencia_criterio_w, qt_indicador_w;
		end if;
		end;
	elsif (vet01.ie_forma_obtencao = 'B') then
		begin
		qt_indicador_w		:= 0;
		qt_indicador_w := cus_calcular_result_ind_sql(vet01.nr_seq_indicador, cd_tabela_custo_w, cd_estabelecimento_p, cd_centro_controle_p, dt_mes_referencia_w, qt_indicador_w, nr_seq_tabela_p);
		end;
	end if;
	
	/* atualizar o custo do indicador */

	begin
	vl_indicador_w			:= 0;

	if (vet01.ie_calcula_total = 'S') and (qt_indicador_w <> 0) then
		vl_indicador_w		:= dividir(vl_custo_total_w,qt_indicador_w);
	end if;
	
	if (vet01.ie_rotina_obtencao = '16') then
		vl_indicador_w		:= qt_indicador_w;
		qt_indicador_w		:= 0;
	end if;
	
	if	((coalesce(ie_manter_informado_p, 'N') <> 'S') or (coalesce(ie_manter_informado_p, 'N') = 'S' and vet01.ie_forma_obtencao <> 'I')) then
		begin
		update	resultado_ind_cen_cont
		set	qt_indicador		= qt_indicador_w,
			vl_indicador		= vl_indicador_w,
			cd_sequencia_criterio	= cd_sequencia_criterio_w,
			qt_divisor		= qt_divisor_w,
			nm_usuario		= nm_usuario_p,
			dt_atualizacao		= clock_timestamp()
		where	cd_estabelecimento	= cd_estabelecimento_p
		and	nr_seq_tabela		= nr_seq_tabela_p
		and	cd_centro_controle	= cd_centro_controle_p
		and	nr_seq_indicador	= vet01.nr_seq_indicador;
		end;
	end if;
	end;
	
	end;
end loop;
close C01;


commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE cus_atualizar_indicador_centro ( nr_seq_tabela_p bigint, cd_estabelecimento_p bigint, cd_centro_controle_p bigint, nr_seq_indicador_p bigint, nm_usuario_p text, ie_manter_informado_p text default 'N') FROM PUBLIC;

