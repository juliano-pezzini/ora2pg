-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_proposta_sca_contrato ( nr_seq_proposta_p bigint, nr_seq_contrato_p bigint, nr_seq_segurado_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_contrato_plano_w		bigint;
nr_seq_plano_w			bigint;
nr_seq_tabela_w			bigint;
nr_seq_contrato_pagador_w	bigint;
cd_cgc_pagador_w		varchar(14);
cd_pagador_w			varchar(10);
cd_condicao_pagamento_w		bigint;
ie_endereco_boleto_w		varchar(4);
dt_dia_vencimento_w		smallint;
nr_seq_forma_cobranca_w		varchar(2);
cd_banco_w			integer;
cd_agencia_bancaria_w		varchar(8);
ie_digito_agencia_w		varchar(1);
cd_conta_w			varchar(20);
ie_digito_conta_w		varchar(2);
dt_inicio_vigencia_w		timestamp;
dt_fim_vigencia_w		timestamp;
nr_seq_compl_pf_tel_adic_w	bigint;
nr_seq_dia_vencimento_w		bigint;
ie_tipo_pagador_w		varchar(1);
nr_seq_tipo_compl_adic_w	bigint;
cd_pf_benef_cont_w		bigint;
nr_seq_pagador_prop_w		bigint;
nr_seq_contrato_w		bigint;
dt_inicio_proposta_w		timestamp;
dt_contrato_w			timestamp;
ie_plano_principal_w		varchar(1);
qt_registros_w			bigint;
nr_seq_classif_itens_w		bigint;
cd_cgc_estipulante_w		varchar(14);
cd_pf_estipulante_w		varchar(10);
ie_tipo_beneficiario_w		varchar(3);
nr_seq_vendedor_canal_prop_w	bigint;
ie_tipo_proposta_w		smallint;
nr_seq_regra_lanc_w		bigint;
nr_seq_vendedor_canal_w		bigint	:= null;
nr_seq_vendedor_pf_w		bigint	:= null;
qt_plano_proposta_w		bigint;

C01 CURSOR FOR
	SELECT 	b.cd_pessoa_fisica,
		b.nr_seq_pagador,
		b.nr_seq_contrato,
		b.nr_seq_tabela,
		c.nr_sequencia
	from  	pls_plano    	c,
		pls_segurado    b,
		pls_contrato	a
	where	b.nr_seq_contrato	= a.nr_sequencia
	and	b.nr_seq_plano		= c.nr_sequencia
	and	a.nr_sequencia		= nr_seq_contrato_p
	and 	b.nr_Sequencia    	= nr_seq_segurado_p
	order by CASE WHEN coalesce(nr_seq_titular::text, '') = '' THEN -1  ELSE 1 END;

C02 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.cd_cgc,
		a.cd_pessoa_fisica,
		b.cd_condicao_pagamento,
		a.ie_endereco_boleto,
		b.dt_dia_vencimento,
		b.nr_seq_forma_cobranca,
		b.cd_banco,
		b.cd_agencia_bancaria,
		b.ie_digito_agencia,
		b.cd_conta,
		b.ie_digito_conta,
		b.dt_inicio_vigencia,
		b.dt_fim_vigencia,
		a.nr_seq_compl_pf_tel_adic,
		b.nr_seq_dia_vencimento,
		a.ie_tipo_pagador,
		a.nr_seq_tipo_compl_adic,
		a.nr_seq_classif_itens
	from	pls_contrato_pagador		a,
		pls_contrato_pagador_fin	b
	where	a.nr_sequencia		= b.nr_seq_pagador
	and (a.nr_seq_contrato	= nr_seq_contrato_p)
	and	((dt_inicio_proposta_w between coalesce(b.dt_inicio_vigencia,dt_inicio_proposta_w) and coalesce(b.dt_fim_vigencia,dt_inicio_proposta_w)) or (dt_contrato_w > dt_inicio_proposta_w))
	and	((coalesce(a.dt_rescisao::text, '') = '') or (a.dt_rescisao > dt_inicio_proposta_w))
	and 	a.nr_sequencia = nr_seq_pagador_prop_w;


BEGIN
/* Obter dados do contrato */

select	cd_cgc_estipulante,
	cd_pf_estipulante,
	ie_tipo_beneficiario,
	dt_contrato,
	coalesce(nr_contrato_principal,nr_seq_contrato_p)
into STRICT	cd_cgc_estipulante_w,
	cd_pf_estipulante_w,
	ie_tipo_beneficiario_w,
	dt_contrato_w,
	nr_seq_contrato_w
from	pls_contrato
where	nr_sequencia	= nr_seq_contrato_p;

/*Obter dados da proposta*/

select	ie_tipo_proposta,
	dt_inicio_proposta,
	nr_seq_vendedor_canal
into STRICT	ie_tipo_proposta_w,
	dt_inicio_proposta_w,
	nr_seq_vendedor_canal_prop_w
from	pls_proposta_adesao
where	nr_sequencia	= nr_seq_proposta_p;

select	CASE WHEN count(nr_sequencia)=1 THEN 'S'  ELSE 'N' END
into STRICT	ie_plano_principal_w
from	pls_contrato_plano
where	nr_seq_contrato = nr_seq_contrato_p
and	((dt_inativacao >= dt_inicio_proposta_w) or (coalesce(dt_inativacao::text, '') = ''));

/*Inserção de estipulante*/

update	pls_proposta_adesao
set	cd_cgc_estipulante	= cd_cgc_estipulante_w,
	cd_estipulante		= cd_pf_estipulante_w,
	ie_tipo_beneficiario	= ie_tipo_beneficiario_w
where	nr_sequencia		= nr_seq_proposta_p;

/*Preenchimento de Canal de Venda*/

if (coalesce(nr_seq_vendedor_canal_prop_w::text, '') = '') then
	select	max(nr_sequencia)
	into STRICT	nr_seq_regra_lanc_w
	from	pls_contrato_regra_lanc
	where	nr_seq_contrato		= nr_seq_contrato_p
	and	coalesce(ie_aplicacao_regra,'A') in ('A','T')
	and	dt_inicio_proposta_w between coalesce(dt_inicio_vigencia,dt_inicio_proposta_w) and coalesce(dt_fim_vigencia,dt_inicio_proposta_w);

	if (nr_seq_regra_lanc_w IS NOT NULL AND nr_seq_regra_lanc_w::text <> '') then
		select	max(nr_seq_vendedor_canal),
			max(nr_seq_vendedor_pf)
		into STRICT	nr_seq_vendedor_canal_w,
			nr_seq_vendedor_pf_w
		from	pls_contrato_regra_lanc
		where	nr_sequencia	= nr_seq_regra_lanc_w;

		update	pls_proposta_adesao
		set	nr_seq_vendedor_canal	= nr_seq_vendedor_canal_w,
			nr_seq_vendedor_pf	= nr_seq_vendedor_pf_w
		where	nr_sequencia		= nr_seq_proposta_p;
	end if;
end if;

open C01;
loop
fetch C01 into
	cd_pf_benef_cont_w,
	nr_seq_pagador_prop_w,
	nr_seq_contrato_w,
	nr_seq_tabela_w,
	nr_seq_plano_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	select 	count(*)
	into STRICT	qt_plano_proposta_w
	from 	pls_proposta_plano
	where 	nr_seq_plano 	= nr_seq_plano_w
	and	nr_seq_proposta = nr_seq_proposta_p;

	if (qt_plano_proposta_w = 0) then
		select	max(nr_sequencia)
		into STRICT	nr_seq_contrato_plano_w
		from	pls_contrato_plano
		where	nr_seq_contrato = nr_seq_contrato_p
		and	nr_seq_plano	= nr_seq_plano_w;

		insert into pls_proposta_plano(	nr_sequencia,         		nr_seq_proposta,    nr_seq_plano,
				ie_principal,         		dt_atualizacao,     nm_usuario,
				dt_atualizacao_nrec,		nm_usuario_nrec,    nr_seq_tabela,
				nr_seq_contrato_plano 		)
		values ( 	nextval('pls_proposta_plano_seq'), nr_seq_proposta_p,  nr_seq_plano_w,
				ie_plano_principal_w,		clock_timestamp(), 	    nm_usuario_p,
				clock_timestamp(),			nm_usuario_p, 	    nr_seq_tabela_w,
				nr_seq_contrato_plano_w		);
	end if;
	end;

	select	count(*)
	into STRICT	qt_registros_w
	from	pls_proposta_beneficiario
	where	nr_seq_proposta	= nr_seq_proposta_p
	and	cd_beneficiario	= cd_pf_benef_cont_w  LIMIT 1;

	if (qt_registros_w	= 0) then

		open c02;
		loop
		fetch c02 into
			nr_seq_contrato_pagador_w,
			cd_cgc_pagador_w,
			cd_pagador_w,
			cd_condicao_pagamento_w,
			ie_endereco_boleto_w,
			dt_dia_vencimento_w,
			nr_seq_forma_cobranca_w,
			cd_banco_w,
			cd_agencia_bancaria_w,
			ie_digito_agencia_w,
			cd_conta_w,
			ie_digito_conta_w,
			dt_inicio_vigencia_w,
			dt_fim_vigencia_w,
			nr_seq_compl_pf_tel_adic_w,
			nr_seq_dia_vencimento_w,
			ie_tipo_pagador_w,
			nr_seq_tipo_compl_adic_w,
			nr_seq_classif_itens_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			begin
			select	count(*)
			into STRICT	qt_registros_w
			from	pls_proposta_pagador
			where	nr_seq_proposta	= nr_seq_proposta_p
			and	((cd_cgc_pagador	= cd_cgc_pagador_w)
			or (cd_pagador		= cd_pagador_w))  LIMIT 1;

			if (qt_registros_w = 0) then

				insert into pls_proposta_pagador(	nr_sequencia, 			  nr_seq_proposta, 	 dt_atualizacao,
						nm_usuario,			  dt_atualizacao_nrec, 	 nm_usuario_nrec,
						cd_cgc_pagador, 		  cd_pagador, 		 cd_condicao_pagamento,
						ie_endereco_boleto, 		  dt_dia_vencimento, 	 nr_seq_forma_cobranca,
						cd_banco, 			  cd_agencia_bancaria,   ie_digito_agencia,
						cd_conta, 			  ie_digito_conta, 	 nr_seq_contrato_pagador,
						dt_inicio_vigencia,	  	  dt_fim_vigencia, 	 nr_seq_compl_pf_tel_adic,
						nr_seq_dia_vencimento, 		  ie_tipo_pagador, 	 nr_seq_tipo_compl_adic)
				values ( 	nextval('pls_proposta_pagador_seq'), nr_seq_proposta_p, 	 clock_timestamp(),
						nm_usuario_p, 			  clock_timestamp(),  		 nm_usuario_p,
						cd_cgc_pagador_w, 		  cd_pagador_w, 	 cd_condicao_pagamento_w,
						ie_endereco_boleto_w, 		  dt_dia_vencimento_w, 	 nr_seq_forma_cobranca_w,
						cd_banco_w, 		 	  cd_agencia_bancaria_w, ie_digito_agencia_w,
						cd_conta_w, 			  ie_digito_conta_w, 	 nr_seq_contrato_pagador_w,
						dt_inicio_vigencia_w,		  dt_fim_vigencia_w, 	 nr_seq_compl_pf_tel_adic_w,
						nr_seq_dia_vencimento_w, 	  ie_tipo_pagador_w, 	 nr_seq_tipo_compl_adic_w);
			end if;
			end;
		end loop;
		close c02;


	end if;
end loop;
close C01;
commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_proposta_sca_contrato ( nr_seq_proposta_p bigint, nr_seq_contrato_p bigint, nr_seq_segurado_p bigint, nm_usuario_p text) FROM PUBLIC;

