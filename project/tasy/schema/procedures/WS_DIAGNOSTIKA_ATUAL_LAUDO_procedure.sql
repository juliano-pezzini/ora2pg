-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ws_diagnostika_atual_laudo (id_diagnostica_p bigint, id_origem_p bigint, versao_p text, nm_paciente_p text, ds_procedencia_p text, dt_entrada_p text, dt_saida_p text, ds_convenio_p text, nm_medico_solic_p text, crm_medico_solic_p text, crmuf_medico_solic_p text, nm_medico_particip_p text, crm_medico_particip_p text, crmuf_medico_particip_p text, nm_medico1_laudo_p text, crm_medico1_laudo_p text, crmuf_medico1_laudo_p text, nm_medico2_laudo_p text, crm_medico2_laudo_p text, crmuf_medico2_laudo_p text, ds_exame_procedimento_p text, ds_dados_clinicos_p text, ds_painel_anti_p text, ds_coloracoes_p text, ds_imagens_p text, ds_per_operatorio_p text, ds_ref_biblio_p text, ds_microscopia_p text, ds_macroscopia_p text, ds_conclusao_p text, ds_local_colheita_p text, ds_avaliacao_material_p text, ds_observacao_p text, ds_dados_diag_descritivo_p text, ds_avaliacao_horm_p text, ds_avaliacao_micro_p text, ds_outros_achados_p text, ds_indicador_clinico_p text, ds_historico_clinico_p text, nr_seq_laudo_principal_p integer, ds_log_p INOUT text, ie_erro_p INOUT text, nr_seq_laudo_inserido_p INOUT bigint) AS $body$
DECLARE

									  
									  
ds_laudo_w				text;	
nr_seq_laudo_w			laudo_paciente.nr_sequencia%type;	
 
ds_log_w				varchar(255);
cd_pessoa_fisica_w		pessoa_fisica.cd_pessoa_fisica%type;
cd_medico_w				pessoa_fisica.cd_pessoa_fisica%type;
cd_medico_aprov1_w		pessoa_fisica.cd_pessoa_fisica%type;
cd_medico_aprov2_w		pessoa_fisica.cd_pessoa_fisica%type;
nr_exame_w				prescr_procedimento.nr_seq_lab%type;

dt_entrada_unidade_w	timestamp;
dt_saida_exame_w		timestamp;			
dt_seg_aprovacao_w		timestamp;
dt_aprovacao_w			timestamp;

nm_usuario_aprov1_w		usuario.nm_usuario%type;
nm_usuario_aprov2_w		usuario.nm_usuario%type;

ds_laudo_principal_W	text;

 
 

BEGIN 
nr_seq_laudo_inserido_p := 0;
ds_laudo_w	:=	'';
nm_usuario_aprov1_w := '';
nm_usuario_aprov2_w := '';
--Atribuido 1 ao nr_exame pois não há prescr_procedimento 
nr_exame_w	:= '';
dt_entrada_unidade_w := to_date(to_char(to_date(dt_entrada_p,'yyyy-mm-dd'),'dd/mm/yyyy'),'dd/mm/yyyy');
dt_saida_exame_w	 := to_date(to_char(to_date(dt_saida_p,'yyyy-mm-dd'),'dd/mm/yyyy'),'dd/mm/yyyy');
dt_seg_aprovacao_w	 := null;
dt_aprovacao_w		 := null;
cd_medico_aprov2_w	 := null;
 
if (crm_medico_solic_p IS NOT NULL AND crm_medico_solic_p::text <> '') and (crmuf_medico_solic_p IS NOT NULL AND crmuf_medico_solic_p::text <> '') then 
	 
	select distinct 
		  MAX(cd_pessoa_fisica) 
	into STRICT  cd_medico_w 
	from  medico 
	where nr_crm = crm_medico_solic_p 
	and  uf_crm = crmuf_medico_solic_p;
	 
	if (coalesce(cd_medico_w::text, '') = '') then 
		ds_log_w := 'Médico resp não encontrado: '||crm_medico_solic_p||' - '||crmuf_medico_solic_p||CHR(13)||CHR(10);
	end if;
	 
end if;
if (crm_medico1_laudo_p IS NOT NULL AND crm_medico1_laudo_p::text <> '') and (crmuf_medico1_laudo_p IS NOT NULL AND crmuf_medico1_laudo_p::text <> '') then 
	 
	select MAX(coalesce(b.nm_usuario,trim(both substr(nm_guerra,1,15)))), 
			MAX(a.cd_pessoa_fisica) 
	into STRICT  nm_usuario_aprov1_w, 
		  cd_medico_aprov1_w 
	FROM medico a
LEFT OUTER JOIN usuario b ON (a.cd_pessoa_fisica = b.cd_pessoa_fisica)
WHERE coalesce(b.ie_situacao,'A') = 'A' and a.nr_crm = crm_medico1_laudo_p and a.uf_crm = crmuf_medico1_laudo_p;
	 
	if (coalesce(nm_usuario_aprov1_w::text, '') = '') then 
		ds_log_w := ds_log_w ||'Médico 1 aprovação não encontrado: '||crm_medico1_laudo_p||' - '||crmuf_medico1_laudo_p||CHR(13)||CHR(10);
	end if;
	 
	dt_aprovacao_w := clock_timestamp();
	 
end if;
 
if (crm_medico2_laudo_p IS NOT NULL AND crm_medico2_laudo_p::text <> '') and (crmuf_medico2_laudo_p IS NOT NULL AND crmuf_medico2_laudo_p::text <> '') then 
	 
	select 	MAX(coalesce(b.nm_usuario,trim(both substr(nm_guerra,1,15)))), 
			MAX(a.cd_pessoa_fisica) 
	into STRICT  	nm_usuario_aprov2_w, 
			cd_medico_aprov2_w 
	FROM medico a
LEFT OUTER JOIN usuario b ON (a.cd_pessoa_fisica = b.cd_pessoa_fisica)
WHERE coalesce(b.ie_situacao,'A') = 'A' and a.nr_crm = crm_medico2_laudo_p and a.uf_crm = crmuf_medico2_laudo_p;
	 
	if (coalesce(nm_usuario_aprov2_w::text, '') = '') then 
		ds_log_w := ds_log_w ||'Médico 2 aprovação não encontrado: '||crm_medico2_laudo_p||' - '||crmuf_medico2_laudo_p||CHR(13)||CHR(10);
	end if;
	 
	dt_seg_aprovacao_w := clock_timestamp();
	 
end if;
 
select 	MAX(cd_pessoa_fisica) 
into STRICT	cd_pessoa_fisica_w 
from	atendimento_paciente 
where	nr_atendimento = id_origem_p;
 
ds_laudo_w	:= 'Código de identificação externo:'||id_diagnostica_p||CHR(13)||CHR(10);			
ds_laudo_w	:= ds_laudo_w ||'Versão do laudo:'||versao_p||CHR(13)||CHR(10);			
ds_laudo_w	:= ds_laudo_w ||'Paciente:'||nm_paciente_p||CHR(13)||CHR(10);			
ds_laudo_w	:= ds_laudo_w ||'Procedência:'||ds_procedencia_p||CHR(13)||CHR(10);			
ds_laudo_w	:= ds_laudo_w ||'Data de entrada da requisição:'||dt_entrada_p||CHR(13)||CHR(10);			
ds_laudo_w	:= ds_laudo_w ||'Data de finalização do exame:'||dt_saida_p||CHR(13)||CHR(10);
ds_laudo_w	:= ds_laudo_w ||'Médico solicitante:'||nm_medico_solic_p||CHR(13)||CHR(10);			
ds_laudo_w	:= ds_laudo_w ||'Médico participante:'||nm_medico_particip_p||CHR(13)||CHR(10)||CHR(13)||CHR(10);
 
if (ds_historico_clinico_p IS NOT NULL AND ds_historico_clinico_p::text <> '') then 
	ds_laudo_w := ds_laudo_w||'Histórico clínico:'||CHR(13)||CHR(10);	
	ds_laudo_w := ds_laudo_w||ds_historico_clinico_p||CHR(13)||CHR(10);
end if;
if (ds_exame_procedimento_p IS NOT NULL AND ds_exame_procedimento_p::text <> '') then 
	ds_laudo_w := 'Procedimento: '||ds_exame_procedimento_p||CHR(13)||CHR(10);
end if;	
if (ds_dados_clinicos_p IS NOT NULL AND ds_dados_clinicos_p::text <> '') then 
	ds_laudo_w := ds_laudo_w||'Dados clínicos: '||ds_exame_procedimento_p||CHR(13)||CHR(10);
end if;	
if (ds_painel_anti_p IS NOT NULL AND ds_painel_anti_p::text <> '') then 
	ds_laudo_w := ds_laudo_w||'Painel: '||ds_painel_anti_p||CHR(13)||CHR(10);
end if;	
if (ds_coloracoes_p IS NOT NULL AND ds_coloracoes_p::text <> '') then 
	ds_laudo_w := ds_laudo_w||'Colorações: '||ds_coloracoes_p||CHR(13)||CHR(10);
end if;	
if (ds_imagens_p IS NOT NULL AND ds_imagens_p::text <> '') then 
	ds_laudo_w := ds_laudo_w||'Imagens: '||ds_imagens_p||CHR(13)||CHR(10);
end if;	
if (ds_per_operatorio_p IS NOT NULL AND ds_per_operatorio_p::text <> '') then 
	ds_laudo_w := ds_laudo_w||'Operatório: '||ds_per_operatorio_p||CHR(13)||CHR(10);
end if;	
if (ds_ref_biblio_p IS NOT NULL AND ds_ref_biblio_p::text <> '') then 
	ds_laudo_w := ds_laudo_w||'Referência: '||ds_ref_biblio_p||CHR(13)||CHR(10);
end if;	
if (ds_microscopia_p IS NOT NULL AND ds_microscopia_p::text <> '') then 
	ds_laudo_w := ds_laudo_w||'Microscopia:'||CHR(13)||CHR(10);
	ds_laudo_w := ds_laudo_w||ds_microscopia_p||CHR(13)||CHR(10);
end if;	
if (ds_macroscopia_p IS NOT NULL AND ds_macroscopia_p::text <> '') then 
	ds_laudo_w := ds_laudo_w||'Macroscopia:'||CHR(13)||CHR(10);
	ds_laudo_w := ds_laudo_w||ds_macroscopia_p||CHR(13)||CHR(10);
end if;	
if (ds_conclusao_p IS NOT NULL AND ds_conclusao_p::text <> '') then 
	ds_laudo_w := ds_laudo_w||'Conclusão '||ds_conclusao_p||CHR(13)||CHR(10);
end if;	
if (ds_local_colheita_p IS NOT NULL AND ds_local_colheita_p::text <> '') then 
	ds_laudo_w := ds_laudo_w||'Local da colheita: '||ds_local_colheita_p||CHR(13)||CHR(10);
end if;	
if (ds_avaliacao_material_p IS NOT NULL AND ds_avaliacao_material_p::text <> '') then 
	ds_laudo_w := ds_laudo_w||'Avaliação material: '||ds_avaliacao_material_p||CHR(13)||CHR(10);
end if;	
if (ds_observacao_p IS NOT NULL AND ds_observacao_p::text <> '') then 
	ds_laudo_w := ds_laudo_w||'Observação: '||ds_observacao_p||CHR(13)||CHR(10);
end if;
if (ds_dados_diag_descritivo_p IS NOT NULL AND ds_dados_diag_descritivo_p::text <> '') then 
	ds_laudo_w := ds_laudo_w||'Diagnóstico descritivo: '||ds_dados_diag_descritivo_p||CHR(13)||CHR(10);
end if;	
if (ds_avaliacao_horm_p IS NOT NULL AND ds_avaliacao_horm_p::text <> '') then 
	ds_laudo_w := ds_laudo_w||'Avaliação hormonal: '||ds_avaliacao_horm_p||CHR(13)||CHR(10);
end if;	
if (ds_avaliacao_micro_p IS NOT NULL AND ds_avaliacao_micro_p::text <> '') then 
	ds_laudo_w := ds_laudo_w||'Avaliação micro '||ds_avaliacao_micro_p||CHR(13)||CHR(10);
end if;	
if (ds_outros_achados_p IS NOT NULL AND ds_outros_achados_p::text <> '') then 
	ds_laudo_w := ds_laudo_w||'Outros achados: '||ds_outros_achados_p||CHR(13)||CHR(10);
end if;	
if (ds_indicador_clinico_p IS NOT NULL AND ds_indicador_clinico_p::text <> '') then 
	ds_laudo_w := ds_laudo_w||'Indicador clínico: '||ds_indicador_clinico_p||CHR(13)||CHR(10);
end if;
if (nm_medico1_laudo_p IS NOT NULL AND nm_medico1_laudo_p::text <> '') then 
	ds_laudo_w := ds_laudo_w||'Primeiro médico laudante: '||nm_medico1_laudo_p||CHR(13)||CHR(10);
end if;
if (nm_medico2_laudo_p IS NOT NULL AND nm_medico2_laudo_p::text <> '') then 
	ds_laudo_w := ds_laudo_w||'Segundo médico laudante: '||nm_medico2_laudo_p||CHR(13)||CHR(10);
end if;
 
 
select nextval('laudo_paciente_seq') 
into STRICT  nr_seq_laudo_w
;
 
/*gravar_log_tasy(30,substr(ds_laudo_w,1,255),'TESTE'); 
commit; 
*/
 
 
	if (ds_laudo_w IS NOT NULL AND ds_laudo_w::text <> '') then 
	begin 
		/*Se possui laudo principal, entao alterar o laudo acrescentando o laudo complementar, caso contrário inserir um novo laudo:*/
 
		if (nr_seq_laudo_principal_p > 0) then 
		begin 
			select	ds_laudo 
			into STRICT 	ds_laudo_principal_W 
			from	laudo_paciente 
			where	nr_sequencia = nr_seq_laudo_principal_p;
			 
			update	laudo_paciente 
			set		ds_laudo = ds_laudo_principal_W ||CHR(13)||CHR(10)||'Laudo Complementar: '||CHR(13)||CHR(10)|| ds_laudo_w ||CHR(13)||CHR(10) 
			where	nr_sequencia = nr_seq_laudo_principal_p;			
		end;
		else 
		begin	 
			insert into laudo_paciente(nr_sequencia, 
										nr_laudo, 
										nr_atendimento, 
										dt_entrada_unidade, 
										cd_pessoa_fisica, 
										nm_usuario, 
										dt_atualizacao, 
										qt_imagem, 
										nr_exame, 
										cd_medico_resp, 
										dt_aprovacao, 
										dt_exame, 
										dt_integracao, 
										dt_laudo, 
										dt_liberacao, 
										dt_seg_aprovacao, 
										ie_normal, 
										nm_medico_solicitante, 
										nm_usuario_aprovacao, 
										nm_usuario_seg_aprov, 
										ds_titulo_laudo, 
										ds_laudo) 
									values (nr_seq_laudo_w, 
										1, 
										id_origem_p, 
										dt_entrada_unidade_w, 
										cd_pessoa_fisica_w, 
										'DiagnostikaWS', 
										clock_timestamp(), 
										0, 
										nr_exame_w, 
										coalesce(cd_medico_aprov2_w,cd_medico_aprov1_w), 
										dt_aprovacao_w, 
										dt_saida_exame_w, 
										clock_timestamp(), 
										dt_saida_exame_w, 
										dt_saida_exame_w, 
										dt_seg_aprovacao_w, 
										' ', 
										nm_medico_solic_p, 
										nm_usuario_aprov1_w, 
										nm_usuario_aprov2_w, 
										'Exame de Anátomo Diagnóstika', 
										ds_laudo_w 
										);
										 
			nr_seq_laudo_inserido_p := nr_seq_laudo_w;
		end;
		end if;
			 
		exception 
		when others then 
			ie_erro_p := 'S';
			ds_log_w := ds_log_w ||'Erro: '||substr(sqlerrm,1,255)||CHR(13)||CHR(10);
		end;
			 
	end if;
							 
commit;
 
ds_log_p := ds_log_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ws_diagnostika_atual_laudo (id_diagnostica_p bigint, id_origem_p bigint, versao_p text, nm_paciente_p text, ds_procedencia_p text, dt_entrada_p text, dt_saida_p text, ds_convenio_p text, nm_medico_solic_p text, crm_medico_solic_p text, crmuf_medico_solic_p text, nm_medico_particip_p text, crm_medico_particip_p text, crmuf_medico_particip_p text, nm_medico1_laudo_p text, crm_medico1_laudo_p text, crmuf_medico1_laudo_p text, nm_medico2_laudo_p text, crm_medico2_laudo_p text, crmuf_medico2_laudo_p text, ds_exame_procedimento_p text, ds_dados_clinicos_p text, ds_painel_anti_p text, ds_coloracoes_p text, ds_imagens_p text, ds_per_operatorio_p text, ds_ref_biblio_p text, ds_microscopia_p text, ds_macroscopia_p text, ds_conclusao_p text, ds_local_colheita_p text, ds_avaliacao_material_p text, ds_observacao_p text, ds_dados_diag_descritivo_p text, ds_avaliacao_horm_p text, ds_avaliacao_micro_p text, ds_outros_achados_p text, ds_indicador_clinico_p text, ds_historico_clinico_p text, nr_seq_laudo_principal_p integer, ds_log_p INOUT text, ie_erro_p INOUT text, nr_seq_laudo_inserido_p INOUT bigint) FROM PUBLIC;

