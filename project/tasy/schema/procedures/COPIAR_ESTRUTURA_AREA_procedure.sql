-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE copiar_estrutura_area ( produto_sequence_p bigint, nr_seq_produto_p bigint, nr_seq_produto_area_p bigint, nm_usuario_p text, area_sequence_p INOUT bigint) AS $body$
DECLARE

    nr_seq_area_w			mkt_produto_area.nr_seq_area%type;
    ds_area_produto_w		mkt_produto_area.ds_area_produto%type;
    mkt_area_mercado_seq_w	mkt_area_mercado.nr_sequencia%type;

	c01 CURSOR FOR
	SELECT	a.nr_seq_mercado,
		a.nr_sequencia
	from	mkt_area_mercado a
	where	a.nr_seq_area = nr_seq_produto_area_p
	and	a.nr_seq_mercado not in ((	SELECT	b.nr_seq_mercado
						from	mkt_area_mercado b
						where	b.nr_seq_area = area_sequence_p));
						
	c02 CURSOR FOR
	SELECT	a.nr_seq_mercado,
		a.nr_sequencia,
		mkt.nr_sequencia nr_seq_antigo
	from	mkt_area_mercado a,
		(	SELECT	b.nr_seq_mercado,
				b.nr_sequencia
			from	mkt_area_mercado b
			where	b.nr_seq_area = nr_seq_produto_area_p) mkt
	where	a.nr_seq_area = area_sequence_p
	and	a.nr_seq_mercado in (mkt.nr_seq_mercado);
BEGIN
    select  max(nr_seq_area),
               max(ds_area_produto)
    into STRICT    nr_seq_area_w,
              ds_area_produto_w
    from    mkt_produto_area
    where   nr_seq_produto = nr_seq_produto_p
    and     nr_sequencia = nr_seq_produto_area_p;

    if ((nr_seq_area_w IS NOT NULL AND nr_seq_area_w::text <> '') or (ds_area_produto_w IS NOT NULL AND ds_area_produto_w::text <> '')) then
        select nextval('mkt_produto_area_seq') into STRICT area_sequence_p;

        insert	into	mkt_produto_area(	nr_sequencia,
                            dt_atualizacao,
                            dt_atualizacao_nrec,
                            nm_usuario,
                            nm_usuario_nrec,
                            nr_seq_produto,
                            nr_seq_area,
	            ds_area_produto)
            values (	area_sequence_p,
                clock_timestamp(),
                clock_timestamp(),
                nm_usuario_p,
                nm_usuario_p,
                produto_sequence_p,
                nr_seq_area_w,
	ds_area_produto_w);
	
	insert into mkt_in_charge(	nr_sequencia,
				ie_situacao,
				cd_pessoa_fisica,
				nm_usuario,
				dt_atualizacao,
				nr_seq_area_modulo,
				nr_seq_modulo_mercado,
				nr_seq_modulo_funcao,
				nr_seq_funcao_mercado,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_area_mercado,
				nr_seq_produto_area,
				nr_seq_produto_mercado,
				nr_seq_mercado,
				ds_note,
				nr_seq_produto)
	SELECT	nextval('mkt_in_charge_seq'),
		ie_situacao,
		cd_pessoa_fisica,
		nm_usuario,
		clock_timestamp(),
		nr_seq_area_modulo,
		nr_seq_modulo_mercado,
		nr_seq_modulo_funcao,
		nr_seq_funcao_mercado,
		clock_timestamp(),
		nm_usuario_nrec,
		nr_seq_area_mercado,
		area_sequence_p,
		nr_seq_produto_mercado,
		nr_seq_mercado,
		ds_note,
		produto_sequence_p
	from	mkt_in_charge
	where	nr_seq_produto_area = nr_seq_produto_area_p;
	
	for r_c01 in c01 loop
		select nextval('mkt_area_mercado_seq') into STRICT mkt_area_mercado_seq_w;
		insert into mkt_area_mercado(	nr_sequencia,
						dt_atualizacao, 
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_seq_area,
						nr_seq_mercado ) values (mkt_area_mercado_seq_w, 
					clock_timestamp(), 
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					area_sequence_p,
					r_c01.nr_seq_mercado
					);
		

		insert into mkt_in_charge(	nr_sequencia,
						ie_situacao,
						cd_pessoa_fisica,
						nm_usuario,
						dt_atualizacao,
						nr_seq_area_modulo,
						nr_seq_modulo_mercado,
						nr_seq_modulo_funcao,
						nr_seq_funcao_mercado,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_seq_area_mercado,
						nr_seq_produto_area,
						nr_seq_produto_mercado,
						nr_seq_mercado,
						ds_note,
						nr_seq_produto)
			SELECT	nextval('mkt_in_charge_seq'),
				ie_situacao,
				cd_pessoa_fisica,
				nm_usuario_p,
				clock_timestamp(),
				nr_seq_area_modulo,
				nr_seq_modulo_mercado,
				nr_seq_modulo_funcao,
				nr_seq_funcao_mercado,
				clock_timestamp(),
				nm_usuario_p,
				mkt_area_mercado_seq_w,
				area_sequence_p,
				nr_seq_produto_mercado,
				r_c01.nr_seq_mercado,
				ds_note,
				produto_sequence_p
			from	mkt_in_charge
			where	nr_seq_area_mercado = r_c01.nr_sequencia;
	end loop;

	for r_c02 in c02 loop

		insert into mkt_in_charge(	nr_sequencia,
						ie_situacao,
						cd_pessoa_fisica,
						nm_usuario,
						dt_atualizacao,
						nr_seq_area_modulo,
						nr_seq_modulo_mercado,
						nr_seq_modulo_funcao,
						nr_seq_funcao_mercado,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_seq_area_mercado,
						nr_seq_produto_area,
						nr_seq_produto_mercado,
						nr_seq_mercado,
						ds_note,
						nr_seq_produto)
			SELECT	nextval('mkt_in_charge_seq'),
				ie_situacao,
				cd_pessoa_fisica,
				nm_usuario_p,
				clock_timestamp(),
				nr_seq_area_modulo,
				nr_seq_modulo_mercado,
				nr_seq_modulo_funcao,
				nr_seq_funcao_mercado,
				clock_timestamp(),
				nm_usuario_p,
				r_c02.nr_sequencia,
				area_sequence_p,
				nr_seq_produto_mercado,
				r_c02.nr_seq_mercado,
				ds_note,
				produto_sequence_p
			from	mkt_in_charge
			where	nr_seq_area_mercado = r_c02.nr_seq_antigo;
	end loop;
        commit;
    end if;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE copiar_estrutura_area ( produto_sequence_p bigint, nr_seq_produto_p bigint, nr_seq_produto_area_p bigint, nm_usuario_p text, area_sequence_p INOUT bigint) FROM PUBLIC;

