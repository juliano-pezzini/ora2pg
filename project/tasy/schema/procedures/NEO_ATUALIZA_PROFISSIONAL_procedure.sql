-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE neo_atualiza_profissional (nr_sequencia_p bigint) AS $body$
DECLARE

			 
	 
cd_pessoa_fisica_w	varchar(10);
sn_ativo_w		varchar(255);
sn_cooperado_w	     	varchar(255);
nome_w         		varchar(255);
cpf_w          		varchar(255);
data_nascimento_w    	varchar(255);
tipo_w         		varchar(255);
numero_conselho_w    	varchar(255);
uf_w          		varchar(255);
cod_pro_corp_w     	varchar(255);
sexo_w         		varchar(255);
email_w        		varchar(255);
celular_w        		varchar(255);
bip_pager_w       	varchar(255);
cod_categoria_w     	varchar(255);
cod_profissao_w     	varchar(255);
matricula_w       		varchar(255);
tratamento_w      	varchar(255);
nome_reduzido_w     	varchar(255);
nome_mae_w       	varchar(255);
nome_pai_w       	varchar(255);
nacionalidade_w     	varchar(255);
uf_nascimento_w     	varchar(255);
co_ibge_muni_nasc_w   	varchar(255);
tp_escolaridade_w    	varchar(255);
tp_est_civil_w     	varchar(255);
numero_w        	varchar(255);
orgao_emissor_w     	varchar(255);
uf_emissor_w      	varchar(255);
nu_cns_w        	varchar(255);
tipo_pagto_w   	   	varchar(255);
ds_erro_w		varchar(255);
cod_especialidade_w	varchar(255);
qt_espec_w		bigint;
qt_cargo_w		bigint;
qt_nacionalidade_w		bigint;
qt_especialidade_w		bigint;

 
ie_tipo_endereco_w  	varchar(1);
tipo_endereco_w    	varchar(255);
seq_endereco_w    	varchar(255);
cod_tipo_lgr_tiss_w  	varchar(255);
logradouro_w     		varchar(255);
bairro_w      	  	varchar(255);
cidade_w       		varchar(255);
uf_compl_w 	     	varchar(255);
numero_compl_w    	varchar(255);
complemento_w     	varchar(255);
cep_w         		varchar(255);
fone_w        		varchar(255);
qt_compl_w	 	bigint;

nr_sequencia_w		bigint;

 
C01 CURSOR FOR 
	SELECT	cod_especialidade 
	from	w_neo_especialidade 
	where	nr_seq_profissional = nr_sequencia_p;
	
C02 CURSOR FOR 
	SELECT	ie_tipo_endereco, 
		tipo_endereco, 
		seq_endereco, 
		cod_tipo_lgr_tiss, 
		logradouro, 
		bairro, 
		cidade, 
		uf, 
		numero, 
		complemento, 
		cep, 
		fone 
	from	w_neo_endereco 
	where	nr_seq_profissional = nr_sequencia_p;
	

BEGIN 
 
select	CASE WHEN sn_ativo='N' THEN 'A'  ELSE 'I' END , 
	sn_cooperado, 
	nome, 
	cpf, 
	data_nascimento, 
	tipo, 
	numero_conselho, 
	uf, 
	cod_pro_corp, 
	sexo, 
	email, 
	celular, 
	bip_pager, 
	cod_categoria, 
	cod_profissao, 
	matricula, 
	tratamento, 
	nome_reduzido, 
	nome_mae, 
	nome_pai, 
	nacionalidade, 
	uf_nascimento, 
	co_ibge_muni_nasc, 
	tp_escolaridade, 
	tp_est_civil, 
	numero, 
	orgao_emissor, 
	uf_emissor, 
	nu_cns, 
	tipo_pagto 
into STRICT 
	sn_ativo_w,		-- 
	sn_cooperado_w, 
	nome_w,			-- 
	cpf_w,			-- 
	data_nascimento_w,	-- 
	tipo_w, 
	numero_conselho_w,	-- 
	uf_w,			-- 
	cod_pro_corp_w, 
	sexo_w,			-- 
	email_w, 
	celular_w,		-- 
	bip_pager_w,		-- 
	cod_categoria_w,	-- 
	cod_profissao_w,	-- 
	matricula_w, 
	tratamento_w, 
	nome_reduzido_w,	-- 
	nome_mae_w, 
	nome_pai_w, 
	nacionalidade_w,	-- 
	uf_nascimento_w, 
	co_ibge_muni_nasc_w,	-- 
	tp_escolaridade_w,	-- 
	tp_est_civil_w,		-- 
	numero_w, 
	orgao_emissor_w,	-- 
	uf_emissor_w,		-- 
	nu_cns_w,		-- 
	tipo_pagto_w 
from 	w_neo_profissional 
where 	nr_sequencia = nr_sequencia_p;
 
select 	count(*) 
into STRICT	qt_cargo_w 
from 	cargo 
where 	cd_cargo = somente_numero(substr(cod_profissao_w,1,10));
 
select 	count(*) 
into STRICT	qt_nacionalidade_w 
from 	nacionalidade 
where 	cd_nacionalidade = substr(nacionalidade_w,1,8);
 
select 	coalesce(max(cd_pessoa_fisica),'0') 
into STRICT	cd_pessoa_fisica_w 
from 	pessoa_fisica 
where 	nr_cpf = cpf_w;
 
ds_erro_w:= '';
 
if (coalesce(nome_w::text, '') = '') then 
 
	update	w_neo_profissional 
	set	ds_motivo 	= '0 ' || 'É obrigatório o preenchimento do campo NOME' 
	where 	nr_sequencia 	= nr_sequencia_p;
	 
	goto final;
end if;
 
if (cd_pessoa_fisica_w <> '0') then -- Existe PF com o CPF então atualiza os dados da PF e do Médico 
 
	begin 
	update	pessoa_fisica 
	set	nm_pessoa_fisica 	= substr(nome_w,1,60), 
		nr_cpf 		 	= lpad(cpf_w,11,'0'), 
		dt_nascimento  	= to_date(data_nascimento_w,'yyyy-mm-dd'), 
		ds_codigo_prof  	= substr(numero_conselho_w,1,15), 
		ie_sexo		 	= substr(sexo_w,1,1), 
		nr_telefone_celular 	= substr(celular_w,1,40), 
		nr_pager_bip		= substr(bip_pager_w,1,25), 
		cd_cargo		= CASE WHEN qt_cargo_w=0 THEN null  ELSE somente_numero(substr(cod_profissao_w,1,10)) END , 
		nm_abreviado		= substr(nome_reduzido_w,1,60), 
		nr_cartao_nac_sus	= substr(nu_cns_w,1,20), 
		sg_emissora_ci		= substr(uf_emissor_w,1,2), 
		ds_orgao_emissor_ci	= substr(orgao_emissor_w,1,10), 
		ie_estado_civil		= substr(tp_est_civil_w,1,2), 
		ie_grau_instrucao	= somente_numero(substr(tp_escolaridade_w,1,2)), 
		cd_municipio_ibge	= substr(co_ibge_muni_nasc_w,1,6), 
		cd_nacionalidade	= CASE WHEN qt_nacionalidade_w=0 THEN null  ELSE substr(nacionalidade_w,1,8) END  
	where 	cd_pessoa_fisica	= cd_pessoa_fisica_w;
	exception 
		when others then		 
		ds_erro_w := substr(sqlerrm(SQLSTATE),1,255);
		 
		update	w_neo_profissional 
		set	ds_motivo 	= '1 ' || substr(ds_erro_w,1,252) 
		where 	nr_sequencia 	= nr_sequencia_p;
		 
		commit;
		 
		goto final;
	end;
		 
	begin 
	update	medico 
	set	ie_situacao 		= substr(sn_ativo_w,1,1), 
		nm_guerra  		= substr(nome_w,1,60), 
		nr_crm	  		= substr(numero_conselho_w,1,20), 
		uf_crm	  		= substr(uf_w,1,2) 
	where 	cd_pessoa_fisica	= cd_pessoa_fisica_w;
	exception 
		when others then 
		ds_erro_w := substr(sqlerrm(SQLSTATE),1,255);
		 
		update	w_neo_profissional 
		set	ds_motivo 	= '2 ' || substr(ds_erro_w,1,252) 
		where 	nr_sequencia 	= nr_sequencia_p;
		 
		commit;
		 
		goto final;
	end;
	 
	open C01;
	loop 
	fetch C01 into	 
		cod_especialidade_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin 
		 
		select 	count(*) 
		into STRICT	qt_espec_w 
		from 	medico_especialidade 
		where 	cd_pessoa_fisica = cd_pessoa_fisica_w 
		and 	cd_especialidade = cod_especialidade_w;
		 
		select 	count(*) 
		into STRICT	qt_especialidade_w 
		from 	especialidade_medica 
		where 	cd_especialidade = cod_especialidade_w;
		 
		if (qt_espec_w = 0) and (qt_especialidade_w > 0) then 
		 
			begin 
			insert	into medico_especialidade(cd_pessoa_fisica, 
					cd_especialidade, 
					dt_atualizacao, 
					nm_usuario, 
					nr_seq_prioridade) 
				values (cd_pessoa_fisica_w, 
					cod_especialidade_w, 
					clock_timestamp(), 
					'NEO',	 
					1);
			exception 
				when others then 
				ds_erro_w := substr(sqlerrm(SQLSTATE),1,255);
				 
				update	w_neo_profissional 
				set	ds_motivo 	= '3 ' || substr(ds_erro_w,1,252) 
				where 	nr_sequencia 	= nr_sequencia_p;
				 
				commit;
				 
				goto final;
			end;
			 
		end if;
		 
		end;
	end loop;
	close C01;
	 
	open C02;
	loop 
	fetch C02 into	 
		ie_tipo_endereco_w, 
		tipo_endereco_w, 
		seq_endereco_w, 
		cod_tipo_lgr_tiss_w, 
		logradouro_w, 
		bairro_w, 
		cidade_w, 
		uf_compl_w, 
		numero_compl_w, 
		complemento_w, 
		cep_w, 
		fone_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin 
		 
		if (ie_tipo_endereco_w = 'P') then -- Pessoal 
		 
			select 	count(*) 
			into STRICT	qt_compl_w 
			from 	compl_pessoa_fisica 
			where 	cd_pessoa_fisica = cd_pessoa_fisica_w 
			and 	ie_tipo_complemento = 1;
			 
			if (qt_compl_w = 0) then 
			 
				select	coalesce(max(nr_sequencia),0) + 1 
				into STRICT	nr_sequencia_w 
				from	compl_pessoa_fisica 
				where	cd_pessoa_fisica	= cd_pessoa_fisica_w;
 
				begin 
				insert into compl_pessoa_fisica(nr_sequencia, 
					cd_pessoa_fisica, 
					ie_tipo_complemento, 
					nm_usuario_nrec, 
					dt_atualizacao_nrec, 
					nm_usuario, 
					dt_atualizacao, 
					ds_endereco, 
					ds_bairro, 
					cd_municipio_ibge, 
					ds_municipio, 
					cd_cep, 
					sg_estado, 
					nr_endereco, 
					ds_complemento, 
					nm_contato) 
				values (nr_sequencia_w, 
					cd_pessoa_fisica_w, 
					1, 
					'NEO', 
					clock_timestamp(), 
					'NEO', 
					clock_timestamp(), 
					substr(logradouro_w,1,40), 
					substr(bairro_w,1,40), 
					substr(co_ibge_muni_nasc_w,1,6), 
					substr(cidade_w,1,40), 
					substr(cep_w,1,15), 
					substr(uf_compl_w,1,15), 
					CASE WHEN somente_numero(numero_compl_w)=0 THEN ''  ELSE somente_numero(numero_compl_w) END , 
					substr(complemento_w,1,255), 
					substr(nome_w,1,60));
				exception 
					when others then 
					ds_erro_w := substr(sqlerrm(SQLSTATE),1,255);
					 
					update	w_neo_profissional 
					set	ds_motivo 	= '4 ' || substr(ds_erro_w,1,252) 
					where 	nr_sequencia 	= nr_sequencia_p;
					 
					commit;
					 
					goto final;
				end;
				 
			else				 
			 
				begin 
				update	compl_pessoa_fisica 
				set	nm_usuario	=	'NEO', 
					dt_atualizacao	=	clock_timestamp(), 
					ds_endereco	=	substr(logradouro_w,1,40), 
					ds_bairro	=	substr(bairro_w,1,40), 
					cd_municipio_ibge =	substr(co_ibge_muni_nasc_w,1,6), 
					ds_municipio	=	substr(cidade_w,1,40), 
					cd_cep		=	substr(cep_w,1,15), 
					sg_estado	=	substr(uf_compl_w,1,15), 
					nr_endereco	=	CASE WHEN somente_numero(numero_compl_w)=0 THEN ''  ELSE somente_numero(numero_compl_w) END , 
					ds_complemento	=	substr(complemento_w,1,255), 
					nm_contato	=	substr(nome_w,1,60) 
				where	cd_pessoa_fisica	= cd_pessoa_fisica_w 
				and 	ie_tipo_complemento = 1;
				exception 
					when others then 
					ds_erro_w := substr(sqlerrm(SQLSTATE),1,255);
					 
					update	w_neo_profissional 
					set	ds_motivo 	= '5 ' || substr(ds_erro_w,1,252) 
					where 	nr_sequencia 	= nr_sequencia_p;
					 
					commit;
					 
					goto final;
				end;
			 
			end if;
			 
		elsif (ie_tipo_endereco_w = 'C') then -- Comercial 
		 
			select 	count(*) 
			into STRICT	qt_compl_w 
			from 	compl_pessoa_fisica 
			where 	cd_pessoa_fisica = cd_pessoa_fisica_w 
			and 	ie_tipo_complemento = 2;
			 
			if (qt_compl_w = 0) then 
			 
				select	coalesce(max(nr_sequencia),0) + 1 
				into STRICT	nr_sequencia_w 
				from	compl_pessoa_fisica 
				where	cd_pessoa_fisica	= cd_pessoa_fisica_w;
 
				begin 
				insert into compl_pessoa_fisica(nr_sequencia, 
					cd_pessoa_fisica, 
					ie_tipo_complemento, 
					nm_usuario_nrec, 
					dt_atualizacao_nrec, 
					nm_usuario, 
					dt_atualizacao, 
					ds_endereco, 
					ds_bairro, 
					cd_municipio_ibge, 
					ds_municipio, 
					cd_cep, 
					sg_estado, 
					nr_endereco, 
					ds_complemento, 
					nm_contato) 
				values (nr_sequencia_w, 
					cd_pessoa_fisica_w, 
					2, 
					'NEO', 
					clock_timestamp(), 
					'NEO', 
					clock_timestamp(), 
					substr(logradouro_w,1,40), 
					substr(bairro_w,1,40), 
					substr(co_ibge_muni_nasc_w,1,6), 
					substr(cidade_w,1,40), 
					substr(cep_w,1,15), 
					substr(uf_compl_w,1,15), 
					CASE WHEN somente_numero(numero_compl_w)=0 THEN ''  ELSE somente_numero(numero_compl_w) END , 
					substr(complemento_w,1,255), 
					substr(nome_w,1,60));
				exception 
					when others then 
					ds_erro_w := substr(sqlerrm(SQLSTATE),1,255);
					 
					update	w_neo_profissional 
					set	ds_motivo 	= '6 ' || substr(ds_erro_w,1,252) 
					where 	nr_sequencia 	= nr_sequencia_p;
					 
					commit;
					 
					goto final;
				end;
				 
			else				 
			 
				begin 
				update	compl_pessoa_fisica 
				set	nm_usuario	=	'NEO', 
					dt_atualizacao	=	clock_timestamp(), 
					ds_endereco	=	substr(logradouro_w,1,40), 
					ds_bairro	=	substr(bairro_w,1,40), 
					cd_municipio_ibge =	substr(co_ibge_muni_nasc_w,1,6), 
					ds_municipio	=	substr(cidade_w,1,40), 
					cd_cep		=	substr(cep_w,1,15), 
					sg_estado	=	substr(uf_compl_w,1,15), 
					nr_endereco	=	CASE WHEN somente_numero(numero_compl_w)=0 THEN ''  ELSE somente_numero(numero_compl_w) END , 
					ds_complemento	=	substr(complemento_w,1,255), 
					nm_contato	=	substr(nome_w,1,60) 
				where	cd_pessoa_fisica	= cd_pessoa_fisica_w 
				and 	ie_tipo_complemento = 2;
				exception 
					when others then 
					ds_erro_w := substr(sqlerrm(SQLSTATE),1,255);
					 
					update	w_neo_profissional 
					set	ds_motivo 	= '7 ' || substr(ds_erro_w,1,252) 
					where 	nr_sequencia 	= nr_sequencia_p;
					 
					commit;
					 
					goto final;
				end;
			 
			end if;
		 
		end if;
		 
		end;
	end loop;
	close C02;
		 
 
else	-- Se não existe cria a PF e o cadastro médico 
 
	select	nextval('pessoa_fisica_seq') 
	into STRICT	cd_pessoa_fisica_w 
	;	
	 
	begin 
	insert into pessoa_fisica( 
		cd_pessoa_fisica, 
		dt_atualizacao, 
		dt_atualizacao_nrec, 
		nm_pessoa_fisica, 
		dt_nascimento, 
		ie_sexo, 
		nr_cpf, 
		ie_tipo_pessoa, 
		ie_estado_civil, 
		cd_municipio_ibge, 
		nr_prontuario, 
		ds_codigo_prof, 
		nr_telefone_celular, 
		nr_pager_bip, 
		cd_cargo, 
		nm_abreviado, 
		nr_cartao_nac_sus, 
		sg_emissora_ci, 
		ds_orgao_emissor_ci, 
		ie_grau_instrucao, 
		cd_nacionalidade, 
		nm_usuario) 
	values (cd_pessoa_fisica_w, 
		clock_timestamp(), 
		clock_timestamp(), 
		substr(nome_w,1,60), 
		to_date(data_nascimento_w,'yyyy-mm-dd'), 
		substr(sexo_w,1,1), 
		substr(lpad(cpf_w,11,'0'),1,11), 
		1, 
		substr(tp_est_civil_w,1,2), 
		substr(co_ibge_muni_nasc_w,1,6), 
		nextval('prontuario_seq'), 
		substr(numero_conselho_w,1,15), 
		substr(celular_w,1,40), 
		substr(bip_pager_w,1,25), 
		CASE WHEN qt_cargo_w=0 THEN null  ELSE somente_numero(substr(cod_profissao_w,1,10)) END , 
		substr(nome_reduzido_w,1,60), 
		substr(nu_cns_w,1,20), 
		substr(uf_emissor_w,1,2), 
		substr(orgao_emissor_w,1,10), 
		somente_numero(substr(tp_escolaridade_w,1,2)), 
		CASE WHEN qt_nacionalidade_w=0 THEN null  ELSE substr(nacionalidade_w,1,8) END , 
		'NEO');
	exception 
		when others then 
		ds_erro_w := substr(sqlerrm(SQLSTATE),1,255);			
		 
		update	w_neo_profissional 
		set	ds_motivo 	= '8 ' || substr(ds_erro_w,1,252) 
		where 	nr_sequencia 	= nr_sequencia_p;
		 
		commit;
		 
		goto final;
	end;
	 
	begin 
	insert	into medico(cd_pessoa_fisica, 
		ie_vinculo_medico, -- 9 
		ie_corpo_clinico, -- 'N' 
		ie_corpo_assist, -- 'N' 
		nr_crm, 
		nm_guerra, 
		dt_atualizacao, 
		nm_usuario, 
		ie_situacao, 
		uf_crm) 
	values (cd_pessoa_fisica_w, 
		9, 
		'N', 
		'N', 
		substr(numero_conselho_w,1,20), 
		substr(nome_w,1,60), 
		clock_timestamp(), 
		'NEO', 
		substr(sn_ativo_w,1,1), 
		substr(uf_w,1,2));
	exception 
		when others then 
		ds_erro_w := substr(sqlerrm(SQLSTATE),1,255);
		 
		update	w_neo_profissional 
		set	ds_motivo 	= '9 ' || substr(ds_erro_w,1,252) 
		where 	nr_sequencia 	= nr_sequencia_p;
		 
		commit;
		 
		goto final;
	end;
	 
	open C01;
	loop 
	fetch C01 into	 
		cod_especialidade_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin 
		 
		select 	count(*) 
		into STRICT	qt_espec_w 
		from 	medico_especialidade 
		where 	cd_pessoa_fisica = cd_pessoa_fisica_w 
		and 	cd_especialidade = cod_especialidade_w;
		 
		select 	count(*) 
		into STRICT	qt_especialidade_w 
		from 	especialidade_medica 
		where 	cd_especialidade = cod_especialidade_w;
		 
		if (qt_espec_w = 0) and (qt_especialidade_w > 0) then 
		 
			begin 
			insert	into medico_especialidade(cd_pessoa_fisica, 
					cd_especialidade, 
					dt_atualizacao, 
					nm_usuario, 
					nr_seq_prioridade) 
				values (cd_pessoa_fisica_w, 
					cod_especialidade_w, 
					clock_timestamp(), 
					'NEO',	 
					1);
			exception 
				when others then 
				ds_erro_w := substr(sqlerrm(SQLSTATE),1,255);
				 
				update	w_neo_profissional 
				set	ds_motivo 	= '10 ' || substr(ds_erro_w,1,250) 
				where 	nr_sequencia 	= nr_sequencia_p;
				 
				commit;
				 
				goto final;
			end;
			 
		end if;
		 
		end;
	end loop;
	close C01;
	 
	open C02;
	loop 
	fetch C02 into	 
		ie_tipo_endereco_w, 
		tipo_endereco_w, 
		seq_endereco_w, 
		cod_tipo_lgr_tiss_w, 
		logradouro_w, 
		bairro_w, 
		cidade_w, 
		uf_compl_w, 
		numero_compl_w, 
		complemento_w, 
		cep_w, 
		fone_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin 
		 
		if (ie_tipo_endereco_w = 'P') then -- Pessoal 
		 
			select 	count(*) 
			into STRICT	qt_compl_w 
			from 	compl_pessoa_fisica 
			where 	cd_pessoa_fisica = cd_pessoa_fisica_w 
			and 	ie_tipo_complemento = 1;
			 
			if (qt_compl_w = 0) then 
			 
				select	coalesce(max(nr_sequencia),0) + 1 
				into STRICT	nr_sequencia_w 
				from	compl_pessoa_fisica 
				where	cd_pessoa_fisica	= cd_pessoa_fisica_w;
 
				begin 
				insert into compl_pessoa_fisica(nr_sequencia, 
					cd_pessoa_fisica, 
					ie_tipo_complemento, 
					nm_usuario_nrec, 
					dt_atualizacao_nrec, 
					nm_usuario, 
					dt_atualizacao, 
					ds_endereco, 
					ds_bairro, 
					cd_municipio_ibge, 
					ds_municipio, 
					cd_cep, 
					sg_estado, 
					nr_endereco, 
					ds_complemento, 
					nm_contato) 
				values (nr_sequencia_w, 
					cd_pessoa_fisica_w, 
					1, 
					'NEO', 
					clock_timestamp(), 
					'NEO', 
					clock_timestamp(), 
					substr(logradouro_w,1,40), 
					substr(bairro_w,1,40), 
					substr(co_ibge_muni_nasc_w,1,6), 
					substr(cidade_w,1,40), 
					substr(cep_w,1,15), 
					substr(uf_compl_w,1,15), 
					CASE WHEN somente_numero(numero_compl_w)=0 THEN ''  ELSE somente_numero(numero_compl_w) END , 
					substr(complemento_w,1,255), 
					substr(nome_w,1,60));
				exception 
					when others then 
					ds_erro_w := substr(sqlerrm(SQLSTATE),1,255);
					 
					update	w_neo_profissional 
					set	ds_motivo 	= '11 ' || substr(ds_erro_w,1,250) 
					where 	nr_sequencia 	= nr_sequencia_p;
					 
					commit;
					 
					goto final;
				end;
				 
			else				 
			 
				begin 
				update	compl_pessoa_fisica 
				set	nm_usuario	=	'NEO', 
					dt_atualizacao	=	clock_timestamp(), 
					ds_endereco	=	substr(logradouro_w,1,40), 
					ds_bairro	=	substr(bairro_w,1,40), 
					cd_municipio_ibge =	substr(co_ibge_muni_nasc_w,1,6), 
					ds_municipio	=	substr(cidade_w,1,40), 
					cd_cep		=	substr(cep_w,1,15), 
					sg_estado	=	substr(uf_compl_w,1,15), 
					nr_endereco	=	CASE WHEN somente_numero(numero_compl_w)=0 THEN ''  ELSE somente_numero(numero_compl_w) END , 
					ds_complemento	=	substr(complemento_w,1,255), 
					nm_contato	=	substr(nome_w,1,60) 
				where	cd_pessoa_fisica	= cd_pessoa_fisica_w 
				and 	ie_tipo_complemento = 1;
				exception 
					when others then 
					ds_erro_w := substr(sqlerrm(SQLSTATE),1,255);
					 
					update	w_neo_profissional 
					set	ds_motivo 	= '12 ' || substr(ds_erro_w,1,250) 
					where 	nr_sequencia 	= nr_sequencia_p;
					 
					commit;
					 
					goto final;
				end;
			 
			end if;
			 
		elsif (ie_tipo_endereco_w = 'C') then -- Comercial 
		 
			select 	count(*) 
			into STRICT	qt_compl_w 
			from 	compl_pessoa_fisica 
			where 	cd_pessoa_fisica = cd_pessoa_fisica_w 
			and 	ie_tipo_complemento = 2;
			 
			if (qt_compl_w = 0) then 
			 
				select	coalesce(max(nr_sequencia),0) + 1 
				into STRICT	nr_sequencia_w 
				from	compl_pessoa_fisica 
				where	cd_pessoa_fisica	= cd_pessoa_fisica_w;
 
				begin 
				insert into compl_pessoa_fisica(nr_sequencia, 
					cd_pessoa_fisica, 
					ie_tipo_complemento, 
					nm_usuario_nrec, 
					dt_atualizacao_nrec, 
					nm_usuario, 
					dt_atualizacao, 
					ds_endereco, 
					ds_bairro, 
					cd_municipio_ibge, 
					ds_municipio, 
					cd_cep, 
					sg_estado, 
					nr_endereco, 
					ds_complemento, 
					nm_contato) 
				values (nr_sequencia_w, 
					cd_pessoa_fisica_w, 
					2, 
					'NEO', 
					clock_timestamp(), 
					'NEO', 
					clock_timestamp(), 
					substr(logradouro_w,1,40), 
					substr(bairro_w,1,40), 
					substr(co_ibge_muni_nasc_w,1,6), 
					substr(cidade_w,1,40), 
					substr(cep_w,1,15), 
					substr(uf_compl_w,1,15), 
					CASE WHEN somente_numero(numero_compl_w)=0 THEN ''  ELSE somente_numero(numero_compl_w) END , 
					substr(complemento_w,1,255), 
					substr(nome_w,1,60));
				exception 
					when others then 
					ds_erro_w := substr(sqlerrm(SQLSTATE),1,255);
					 
					update	w_neo_profissional 
					set	ds_motivo 	= '13 ' || substr(ds_erro_w,1,250) 
					where 	nr_sequencia 	= nr_sequencia_p;
					 
					commit;
					 
					goto final;
				end;
				 
			else				 
			 
				begin 
				update	compl_pessoa_fisica 
				set	nm_usuario	=	'NEO', 
					dt_atualizacao	=	clock_timestamp(), 
					ds_endereco	=	substr(logradouro_w,1,40), 
					ds_bairro	=	substr(bairro_w,1,40), 
					cd_municipio_ibge =	substr(co_ibge_muni_nasc_w,1,6), 
					ds_municipio	=	substr(cidade_w,1,40), 
					cd_cep		=	substr(cep_w,1,15), 
					sg_estado	=	substr(uf_compl_w,1,15), 
					nr_endereco	=	CASE WHEN somente_numero(numero_compl_w)=0 THEN ''  ELSE somente_numero(numero_compl_w) END , 
					ds_complemento	=	substr(complemento_w,1,255), 
					nm_contato	=	substr(nome_w,1,60) 
				where	cd_pessoa_fisica	= cd_pessoa_fisica_w 
				and 	ie_tipo_complemento = 2;
				exception 
					when others then 
					ds_erro_w := substr(sqlerrm(SQLSTATE),1,255);
					 
					update	w_neo_profissional 
					set	ds_motivo 	= '14 ' || substr(ds_erro_w,1,250) 
					where 	nr_sequencia 	= nr_sequencia_p;
					 
					commit;
					 
					goto final;
				end;
			 
			end if;
		 
		end if;
		 
		end;
	end loop;
	close C02;
		 
end if;
 
update	w_neo_profissional 
set 	cd_pessoa_fisica = cd_pessoa_fisica_w 
where 	nr_sequencia = nr_sequencia_p;
 
commit;
 
<<final>> 
	begin 
	ds_erro_w:= '';
	end;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE neo_atualiza_profissional (nr_sequencia_p bigint) FROM PUBLIC;

