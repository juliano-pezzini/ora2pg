-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_lote_discussao_a550 (nr_seq_lote_contest_p bigint, nr_seq_camara_contest_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, nr_seq_lote_disc_p INOUT bigint) AS $body$
DECLARE

					
/*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
OPS - Controle de Contestacoes
Finalidade: Gerar o lote de discussao para os itens (questionados) que retornaram do A550. 
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[ X]  Objetos do dicionario [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao:
	ESTA ROTINA GERA LOTE DE DISCUSSAO APENAS PARA
		A550 DE OPS - CONTAS DE INTERCOMBIO (A500)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/ 
					
nr_seq_lote_disc_w		bigint;
dt_referencia_w			timestamp;
nr_nota_credito_debito_w	bigint;
vl_apresentado_w		pls_lote_discussao.vl_apresentado%type;
nr_seq_contestacao_w		bigint;
nr_seq_discussao_w		bigint;	
ie_tipo_w			varchar(1);
nr_seq_itens_w			bigint;
nr_seq_conta_proc_w		bigint;
nr_seq_conta_mat_w		bigint;
qt_contestada_w			double precision;
vl_contestado_w			double precision;
vl_discussao_w			double precision;
qt_discussao_w			double precision;
qt_aceita_w			double precision;
vl_aceito_w			double precision;
vl_negado_w			double precision;	
vl_material_w			double precision;	
qt_negado_w			double precision := 0;
vl_atual_w			double precision;
vl_acordo_w			double precision;
vl_cobrado_w			double precision;
vl_reconhecido_w		double precision;
ie_tipo_acordo_w		varchar(10);
qt_cobrada_w			integer;
qt_reconh_w			double precision;
ie_tipo_arquivo_w		integer;
ie_status_contest_disc_w	varchar(1) := 'A';
vl_ndc_w			double precision:= 0;
qt_ndc_w			double precision:= 0;
vl_reconh_orig_w		double precision:= 0;
qt_reconh_orig_w		double precision:= 0;
vl_tot_aco_servico_w		double precision := 0;
vl_tot_aco_taxa_w		double precision := 0;
nr_item_discussao_w		bigint;
nr_seq_ptu_fatura_w		ptu_fatura.nr_sequencia%type;
vl_apresent_disc_w		pls_lote_discussao.vl_apresentado%type;
ie_liquidado_w			varchar(1)	:= '';
tp_arq_parcial_w		ptu_camara_contestacao.tp_arq_parcial%type;
ds_hash_w			ptu_camara_contestacao.ds_hash%type;
qt_questionamento_w		integer	:= 0;
qt_questionamento_rrs_w		integer	:= 0;

-- Buscar as contas da contestacao para a geracao da discussao
C01 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_contestacao
	where	nr_seq_lote	= nr_seq_lote_contest_p
	order by 1;
	
-- Buscar os itens das contas para a discussao
C02 CURSOR FOR
	SELECT	'P' ie_tipo,
		a.nr_sequencia
	from	pls_contestacao_proc a
	where	a.nr_seq_contestacao	= nr_seq_contestacao_w
	
union

	SELECT	'M' ie_tipo,
		b.nr_sequencia
	from	pls_contestacao_mat b
	where	b.nr_seq_contestacao	= nr_seq_contestacao_w
	order by 1;

-- Atualizar os valores da discussao
C03 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_contestacao_discussao
	where	nr_seq_contestacao	= nr_seq_lote_contest_p;


BEGIN
if (nr_seq_lote_contest_p IS NOT NULL AND nr_seq_lote_contest_p::text <> '') then
	select	dt_referencia,
		nr_nota_credito_debito,
		coalesce(vl_apresentado,0),
		nr_seq_ptu_fatura
	into STRICT	dt_referencia_w,
		nr_nota_credito_debito_w,
		vl_apresentado_w,
		nr_seq_ptu_fatura_w
	from	pls_lote_contestacao
	where	nr_sequencia	= nr_seq_lote_contest_p;
	
	select	max(ie_tipo_arquivo),
		coalesce(max(tp_arq_parcial),'0'),
		max(ds_hash)
	into STRICT	ie_tipo_arquivo_w,
		tp_arq_parcial_w,
		ds_hash_w
	from	ptu_camara_contestacao
	where	nr_sequencia	= nr_seq_camara_contest_p;
	
	select	coalesce(sum(coalesce(vl_apresentado,0)),0)
	into STRICT	vl_apresent_disc_w
	from	pls_lote_discussao
	where	nr_seq_lote_contest = nr_seq_lote_contest_p
	and	ie_status <> 'C';
	
	select	count(1)
	into STRICT	qt_questionamento_w
	from	ptu_questionamento
	where	nr_seq_contestacao = nr_seq_camara_contest_p
	and	ie_tipo_acordo not in ('11');
	
	if (qt_questionamento_w > 0) then
		select	sum(coalesce(vl_acordo,0) + coalesce(vl_acordo_co,0) + coalesce(vl_acordo_filme,0)) vl_acordo,
			sum(coalesce(vl_acordo_adic_serv,0) + coalesce(vl_acordo_adic_co,0) + coalesce(vl_acordo_adic_filme,0)) vl_acordo_taxa
		into STRICT	vl_tot_aco_servico_w,
			vl_tot_aco_taxa_w
		from	ptu_questionamento x
		where	x.nr_seq_contestacao = nr_seq_camara_contest_p
		and	x.ie_tipo_acordo not in ('11');
	else	
		select	count(1)
		into STRICT	qt_questionamento_rrs_w
		from	ptu_quest_serv_rrs	b,
			ptu_questionamento_rrs	a
		where	a.nr_sequencia		= b.nr_seq_quest_rrs
		and	a.nr_seq_contestacao	= nr_seq_camara_contest_p
		and	b.tp_acordo not in ('11');
		
		if (qt_questionamento_rrs_w > 0) then
			select	sum(coalesce(b.vl_acordo_serv,0)) vl_acordo,
				0 vl_acordo_taxa
			into STRICT	vl_tot_aco_servico_w,
				vl_tot_aco_taxa_w
			from	ptu_quest_serv_rrs	b,
				ptu_questionamento_rrs	a
			where	a.nr_sequencia		= b.nr_seq_quest_rrs
			and	a.nr_seq_contestacao	= nr_seq_camara_contest_p
			and	b.tp_acordo not in ('11');
		end if;
	end if;
	
	-- OS 1515797
	if (ie_tipo_arquivo_w in (5, 6, 7, 8, 9)) then
		ie_status_contest_disc_w	:= 'E';
	else
		ie_status_contest_disc_w	:= 'A';
	end if;

	-- Gerar lote de discussao
	select	nextval('pls_lote_discussao_seq')
	into STRICT	nr_seq_lote_disc_w
	;
	
	-- Retornar o lote de discussao
	nr_seq_lote_disc_p	:= nr_seq_lote_disc_w;
	
	if (vl_apresentado_w = 0) then
		vl_apresentado_w := (coalesce(vl_tot_aco_servico_w,0) + coalesce(vl_tot_aco_taxa_w,0)) - coalesce(vl_apresent_disc_w,0);
	end if;

	insert into pls_lote_discussao(nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_seq_lote_contest,
		dt_referencia,
		ie_status,
		dt_fechamento,
		nr_seq_lote_conta,
		nr_nota_credito_debito,
		nr_lote_contabil,
		vl_apresentado,
		ie_tipo_lote,
		vl_tot_aco_servico,
		vl_tot_aco_taxa,
		ie_tipo_arquivo,
		ds_hash_a550)
	values (nr_seq_lote_disc_w,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		nr_seq_lote_contest_p,
		dt_referencia_w,
		'A',
		null,
		null,
		nr_nota_credito_debito_w,
		0,
		vl_apresentado_w,
		'1',
		vl_tot_aco_servico_w,
		vl_tot_aco_taxa_w,
		ie_tipo_arquivo_w,
		ds_hash_w);
		
	update	ptu_camara_contestacao
	set	nr_seq_lote_discussao	= nr_seq_lote_disc_w,
		nr_seq_lote_contest	= nr_seq_lote_contest_p
	where	nr_sequencia		= nr_seq_camara_contest_p;
	
	ie_liquidado_w	:= '';
	select	pls_obter_dados_lote_contest(nr_seq_lote_contest_p, 'PC')
	into STRICT	ie_liquidado_w
	;

	-- Gerar as contas no lote de discussao
	open C01;
	loop
	fetch C01 into	
		nr_seq_contestacao_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		select	nextval('pls_contestacao_discussao_seq')
		into STRICT	nr_seq_discussao_w
		;
		
		insert into pls_contestacao_discussao(nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_contestacao,
			ie_status,
			vl_recurso,
			vl_negado,
			nr_seq_lote,
			nr_seq_analise)
		values (nr_seq_discussao_w,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_contestacao_w,
			coalesce(ie_status_contest_disc_w,'A'),
			0,
			0,
			nr_seq_lote_disc_w,
			null);
		
		-- Gerar os itens (procedimentos/materiais) na discussao
		open C02;
		loop
		fetch C02 into	
			ie_tipo_w,
			nr_seq_itens_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */	
			begin	
			nr_item_discussao_w := null;
			
			-- PROCEDIMENTOS Discussao
			if (ie_tipo_w = 'P') then				
				select	nr_seq_conta_proc,
					coalesce(qt_contestada,0),
					coalesce(vl_contestado,0),
					coalesce(qt_aceita,0),
					coalesce(vl_procedimento,0),
					coalesce(qt_procedimento,0)
				into STRICT	nr_seq_conta_proc_w,
					qt_contestada_w,
					vl_contestado_w,
					qt_aceita_w,
					vl_discussao_w,
					qt_discussao_w
				from	pls_contestacao_proc
				where	nr_seq_contestacao	= nr_seq_contestacao_w
				and	nr_sequencia		= nr_seq_itens_w;
				
				select	count(1)
				into STRICT	qt_questionamento_w
				from	ptu_questionamento
				where	nr_seq_contestacao = nr_seq_camara_contest_p;
				
				if (qt_questionamento_w > 0) then
					select	coalesce(max(vl_acordo),0) +
						coalesce(max(vl_acordo_adic_co),0) +
						coalesce(max(vl_acordo_adic_filme),0) +
						coalesce(max(vl_acordo_adic_serv),0) +
						coalesce(max(vl_acordo_co),0) +
						coalesce(max(vl_acordo_filme),0),
						coalesce(max(vl_cobrado),0) +
						coalesce(max(vl_cobr_co),0) +
						coalesce(max(vl_cobr_filme),0) +
						coalesce(max(vl_cobr_adic_co),0) +
						coalesce(max(vl_cobr_adic_filme),0) +
						coalesce(max(vl_cobr_adic_serv),0),
						coalesce(max(vl_reconhecido),0) +
						coalesce(max(vl_reconh_co),0) +
						coalesce(max(vl_reconh_filme),0) +
						coalesce(max(vl_reconh_adic_co),0) +
						coalesce(max(vl_reconh_adic_filme),0) +
						coalesce(max(vl_reconh_adic_serv),0),
						coalesce(max(ie_tipo_acordo),''),
						coalesce(max(qt_cobrada),0),
						coalesce(max(qt_reconh),0)/10000
					into STRICT	vl_acordo_w,
						vl_cobrado_w,
						vl_reconhecido_w,
						ie_tipo_acordo_w,
						qt_cobrada_w,
						qt_reconh_w
					from	ptu_questionamento
					where	nr_seq_contestacao	= nr_seq_camara_contest_p
					and	nr_seq_conta_proc	= nr_seq_conta_proc_w;
				else
					select	count(1)
					into STRICT	qt_questionamento_rrs_w
					from	ptu_quest_serv_rrs	b,
						ptu_questionamento_rrs	a
					where	a.nr_sequencia		= b.nr_seq_quest_rrs
					and	a.nr_seq_contestacao	= nr_seq_camara_contest_p;
					
					if (qt_questionamento_rrs_w > 0) then
						select	coalesce(max(b.vl_acordo_serv),0),
							coalesce(max(b.vl_serv),0),
							coalesce(max(b.vl_reconh_serv),0),
							coalesce(max(b.tp_acordo),0),
							coalesce(max(b.qt_cobrada),0),
							coalesce(max(b.qt_reconh),0)
						into STRICT	vl_acordo_w,
							vl_cobrado_w,
							vl_reconhecido_w,
							ie_tipo_acordo_w,
							qt_cobrada_w,
							qt_reconh_w
						from	ptu_quest_serv_rrs	b,
							ptu_questionamento_rrs	a
						where	a.nr_sequencia		= b.nr_seq_quest_rrs
						and	a.nr_seq_contestacao	= nr_seq_camara_contest_p
						and	b.nr_seq_conta_proc	= nr_seq_conta_proc_w;
					end if;
				end if;
				
				vl_aceito_w		:= vl_reconhecido_w;
				vl_negado_w		:= 0;
				qt_reconh_orig_w	:= 0;
				qt_negado_w		:= 0;
				qt_aceita_w		:= 0;
				qt_ndc_w		:= 0;
				vl_ndc_w		:= 0;
				vl_reconh_orig_w	:= abs(vl_discussao_w - vl_contestado_w);
				
				if ( vl_aceito_w = vl_reconh_orig_w ) then
					vl_aceito_w := 0;
					qt_aceita_w := 0;
					
					vl_negado_w	:= vl_cobrado_w - vl_reconh_orig_w;
				else
					vl_negado_w	:= vl_cobrado_w - vl_aceito_w;
				end if;

				if (vl_aceito_w > 0) then
					qt_aceita_w	:= qt_reconh_w;
				end if;
				
				if (vl_negado_w > 0) then
					qt_negado_w	:= qt_contestada_w;
				end if;
				
				if (vl_reconh_orig_w > 0) then
					qt_reconh_orig_w	:= qt_discussao_w - qt_contestada_w;
				end if;
				
				if (vl_aceito_w > vl_reconh_orig_w) and (vl_aceito_w > 0) and
					((vl_acordo_w > 0) or (vl_reconh_orig_w = 0)) then
					vl_ndc_w	:= vl_aceito_w - vl_reconh_orig_w;
					qt_ndc_w	:= qt_reconh_w;
					
				elsif (vl_acordo_w = vl_negado_w) then
					vl_ndc_w	:= vl_acordo_w;
					qt_ndc_w	:= qt_reconh_w;
					
				end if;
				
				if (vl_contestado_w <= vl_aceito_w) then
					vl_aceito_w := vl_contestado_w;
				end if;
				
				if (ie_tipo_acordo_w in ('01')) then -- Questionamento encerrado com Acordo
					if (ie_liquidado_w = 'I') then -- Pagamento integral
						vl_aceito_w := vl_reconhecido_w - vl_reconh_orig_w;
						vl_negado_w := vl_acordo_w;						
						vl_ndc_w := vl_acordo_w;
					else
						if	((vl_aceito_w + vl_negado_w) > vl_contestado_w) then
							vl_aceito_w := vl_contestado_w - vl_negado_w;
						end if;
					end if;
				end if;
				
				/* OS 691854 - 20/02/2014 - 
				Quando o arquivo for do tipo 02 = Questionamento encerrado com Acordo sem emissao de nota de debito E 'pagamento parcial'
				O campo VL GLOSA (vl_negado) deve receber o campo VL CONTESTACAO (vl_contestado) e o campo Vl reconh disc (vl_aceito) deve receber ZERO
				Conceito: A litoral pagou o titulo parcial, outra unimed concordou, ai nao vem vl acordo, entao e considerado que a litoral glosou o valor, como nao vem valor no vl acordo, o vl glosa precisa receber o vl contestado */
				if (ie_tipo_acordo_w in ('02')) then -- Questionamento encerrado com Acordo sem emissao de nota de debito
					if (ie_liquidado_w = 'I') then
						vl_ndc_w := 0;
						qt_ndc_w := 0;

					else	-- Pagamento parcial	
						vl_ndc_w 	:= 0;
						qt_ndc_w 	:= 0;
						vl_negado_w	:= vl_contestado_w;
						vl_aceito_w	:= 0;
					end if;
				end if;
				
				if (ie_tipo_acordo_w in ('05')) then -- Remetido para Camara Tecnica
					vl_ndc_w := 0;
					qt_ndc_w := 0;
					vl_negado_w := 0;
					qt_negado_w := 0;
					vl_aceito_w := 0;
					qt_aceita_w := 0;
				end if;
				
				if (vl_ndc_w <= 0) then
					qt_ndc_w := 0;
				end if;
				
				select	max(w.nr_sequencia)
				into STRICT	nr_item_discussao_w
				from	pls_lote_discussao l,
					pls_contestacao_discussao x,
					pls_discussao_proc w
				where	l.nr_sequencia		= x.nr_seq_lote
				and	x.nr_sequencia		= w.nr_seq_discussao
				and	w.nr_seq_conta_proc	= nr_seq_conta_proc_w
				and	l.ie_status		<> 'C'
				and	w.ie_tipo_acordo	in ('01','02');
				
				-- SE O ITEM JA ESTEVE EM UMA DISCUSSAO ENCERRADA, NAO DEVE SER ALTERADA AS INFORMACOES PELA IMPORTACAO
				if (nr_item_discussao_w IS NOT NULL AND nr_item_discussao_w::text <> '') then
					select	qt_recurso,
						vl_recurso,
						qt_negada,
						vl_negado,
						qt_contestada,
						vl_contestado,
						qt_aceita,
						vl_aceito,
						vl_ndc,
						qt_ndc,
						vl_reconh_orig,
						qt_reconh_orig
					into STRICT	qt_discussao_w,
						vl_discussao_w,
						qt_negado_w,
						vl_negado_w,
						qt_contestada_w,
						vl_contestado_w,
						qt_aceita_w,
						vl_aceito_w,
						vl_ndc_w,
						qt_ndc_w,
						vl_reconh_orig_w,
						qt_reconh_orig_w
					from	pls_discussao_proc
					where	nr_sequencia = nr_item_discussao_w;
				end if;
				
				-- jtonon - OS 848728 - Quando o Tipo de Acordo for 'PARCIAL' os valores QT_ACEITA, VL_ACEITO, QT_NEGADA, VL_NEGADO, QT_NDC, VL_NDC devem ser zerados
				if (ie_tipo_acordo_w in ('12','14') and (tp_arq_parcial_w != '2')) or (ie_tipo_acordo_w in ('00','05')) then
					qt_aceita_w	:= 0;
					vl_aceito_w	:= 0;
					qt_negado_w	:= 0;
					vl_negado_w	:= 0;
					qt_ndc_w	:= 0;
					vl_ndc_w	:= 0;
				end if;
				
				-- wcbernardino - OS 909630 - Quando o tipo do arquivo for "Decurso de prazo" nao pode ter valor NDC
				if (ie_tipo_arquivo_w in (9)) then
					qt_ndc_w	:= 0;
					vl_ndc_w	:= 0;
				end if;
				
				insert into pls_discussao_proc(nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_seq_discussao,
					qt_recurso,
					vl_recurso,
					qt_negada,
					vl_negado,
					nr_seq_conta_proc,
					qt_contestada,
					vl_contestado,
					qt_aceita,
					vl_aceito,
					nr_seq_motivo_glosa_aceita,
					nr_seq_motivo_glosa_neg,
					nr_lote_contabil,
					vl_ndc,
					qt_ndc,
					vl_reconh_orig,
					qt_reconh_orig,
					ie_tipo_acordo,
					nr_seq_contestacao_proc)
				values (nextval('pls_discussao_proc_seq'),
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_discussao_w,
					qt_discussao_w,
					vl_discussao_w,
					qt_negado_w,
					vl_negado_w,
					nr_seq_conta_proc_w,
					qt_contestada_w,
					vl_contestado_w,
					qt_aceita_w,
					vl_aceito_w,
					null,
					null,
					0,
					vl_ndc_w,
					qt_ndc_w,
					vl_reconh_orig_w,
					qt_reconh_orig_w,
					ie_tipo_acordo_w,
					nr_seq_itens_w);
			end if;
			
			-- MATERIAIS Discussao
			if (ie_tipo_w = 'M') then
				select	nr_seq_conta_mat,
					coalesce(qt_contestada,0),
					coalesce(vl_contestado,0),
					coalesce(qt_aceita,0),
					coalesce(vl_material,0),
					coalesce(vl_atual,0),
					coalesce(vl_material,0),
					coalesce(qt_material,0)
				into STRICT	nr_seq_conta_mat_w,
					qt_contestada_w,
					vl_contestado_w,
					qt_aceita_w,
					vl_material_w,
					vl_atual_w,
					vl_discussao_w,
					qt_discussao_w
				from	pls_contestacao_mat
				where	nr_seq_contestacao 	= nr_seq_contestacao_w
				and	nr_sequencia		= nr_seq_itens_w;
				
				select	count(1)
				into STRICT	qt_questionamento_w
				from	ptu_questionamento
				where	nr_seq_contestacao = nr_seq_camara_contest_p;
				
				if (qt_questionamento_w > 0) then
					select	coalesce(max(vl_acordo),0) +
						coalesce(max(vl_acordo_adic_co),0) +
						coalesce(max(vl_acordo_adic_filme),0) +
						coalesce(max(vl_acordo_adic_serv),0) +
						coalesce(max(vl_acordo_co),0) +
						coalesce(max(vl_acordo_filme),0),
						coalesce(max(vl_cobrado),0) +
						coalesce(max(vl_cobr_co),0) +
						coalesce(max(vl_cobr_filme),0) +
						coalesce(max(vl_cobr_adic_co),0) +
						coalesce(max(vl_cobr_adic_filme),0) +
						coalesce(max(vl_cobr_adic_serv),0),
						coalesce(max(vl_reconhecido),0) +
						coalesce(max(vl_reconh_co),0) +
						coalesce(max(vl_reconh_filme),0) +
						coalesce(max(vl_reconh_adic_co),0) +
						coalesce(max(vl_reconh_adic_filme),0) +
						coalesce(max(vl_reconh_adic_serv),0),
						coalesce(max(ie_tipo_acordo),''),
						coalesce(max(qt_cobrada),0),
						coalesce(max(qt_reconh),0)/10000
					into STRICT	vl_acordo_w,
						vl_cobrado_w,
						vl_reconhecido_w,
						ie_tipo_acordo_w,
						qt_cobrada_w,
						qt_reconh_w
					from	ptu_questionamento
					where	nr_seq_contestacao	= nr_seq_camara_contest_p
					and	nr_seq_conta_mat	= nr_seq_conta_mat_w;
					
				else
					select	count(1)
					into STRICT	qt_questionamento_rrs_w
					from	ptu_quest_serv_rrs	b,
						ptu_questionamento_rrs	a
					where	a.nr_sequencia		= b.nr_seq_quest_rrs
					and	a.nr_seq_contestacao	= nr_seq_camara_contest_p;
					
					if (qt_questionamento_rrs_w > 0) then
						select	coalesce(max(b.vl_acordo_serv),0),
							coalesce(max(b.vl_serv),0),
							coalesce(max(b.vl_reconh_serv),0),
							coalesce(max(b.tp_acordo),0),
							coalesce(max(b.qt_cobrada),0),
							coalesce(max(b.qt_reconh),0)
						into STRICT	vl_acordo_w,
							vl_cobrado_w,
							vl_reconhecido_w,
							ie_tipo_acordo_w,
							qt_cobrada_w,
							qt_reconh_w
						from	ptu_quest_serv_rrs	b,
							ptu_questionamento_rrs	a
						where	a.nr_sequencia		= b.nr_seq_quest_rrs
						and	a.nr_seq_contestacao	= nr_seq_camara_contest_p
						and	b.nr_seq_conta_mat	= nr_seq_conta_mat_w;
					end if;
				end if;
				
				vl_aceito_w		:= vl_reconhecido_w;
				vl_negado_w		:= 0;
				qt_reconh_orig_w	:= 0;
				qt_aceita_w		:= 0;
				qt_negado_w		:= 0;
				qt_ndc_w		:= 0;
				vl_ndc_w		:= 0;
				vl_reconh_orig_w	:= abs(vl_discussao_w - vl_contestado_w);
				
				if (vl_aceito_w = vl_reconh_orig_w) then
					vl_aceito_w := 0;
					qt_aceita_w := 0;
					
					vl_negado_w	:= vl_cobrado_w - vl_reconh_orig_w;
				else
					vl_negado_w	:= vl_cobrado_w - vl_aceito_w;
				end if;

				if (vl_aceito_w > 0) then
					qt_aceita_w	:= qt_reconh_w;
				end if;
				
				if (vl_negado_w > 0) then
					qt_negado_w	:= qt_contestada_w;
				end if;
				
				if (vl_reconh_orig_w > 0) then
					qt_reconh_orig_w	:= qt_discussao_w - qt_contestada_w;
				end if;
				
				if (vl_aceito_w > vl_reconh_orig_w) and (vl_aceito_w > 0) and
					((vl_acordo_w > 0) or (vl_reconh_orig_w = 0)) then
					vl_ndc_w	:= vl_aceito_w - vl_reconh_orig_w;
					qt_ndc_w	:= qt_reconh_w;
					
				elsif (vl_acordo_w = vl_negado_w) then
					vl_ndc_w	:= vl_acordo_w;
					qt_ndc_w	:= qt_reconh_w;
					
				end if;
				
				if (vl_contestado_w <= vl_aceito_w) then
					vl_aceito_w := vl_contestado_w;
				end if;
				
				if (ie_tipo_acordo_w in ('01')) then -- Questionamento encerrado com Acordo
					if (ie_liquidado_w = 'I') then -- Pagamento integral
						vl_aceito_w := vl_reconhecido_w - vl_reconh_orig_w;
						vl_negado_w := vl_acordo_w;						
						vl_ndc_w := vl_acordo_w;
					else
						if	((vl_aceito_w + vl_negado_w) > vl_contestado_w) then
							vl_aceito_w := vl_contestado_w - vl_negado_w;
						end if;
					end if;
				end if;
				
				/* OS 691854 - 20/02/2014 - 
				Quando o arquivo for do tipo 02 = Questionamento encerrado com Acordo sem emissao de nota de debito E 'pagamento parcial'
				O campo VL GLOSA (vl_negado) deve receber o campo VL CONTESTACAO (vl_contestado) e o campo Vl reconh disc (vl_aceito) deve receber ZERO
				Conceito: A litoral pagou o titulo parcial, outra unimed concordou, ai nao vem vl acordo, entao e considerado que a litoral glosou o valor, como nao vem valor no vl acordo, o vl glosa precisa receber o vl contestado */
				if (ie_tipo_acordo_w in ('02')) then -- Questionamento encerrado com Acordo sem emissao de nota de debito
					if (ie_liquidado_w = 'I') then
						vl_ndc_w := 0;
						qt_ndc_w := 0;

					else	-- Pagamento parcial	
						vl_ndc_w 	:= 0;
						qt_ndc_w 	:= 0;					
						vl_negado_w	:= vl_contestado_w;
						vl_aceito_w	:= 0;
					end if;
				end if;
				
				if (ie_tipo_acordo_w in ('05')) then -- Remetido para Camara Tecnica
					vl_ndc_w := 0;
					qt_ndc_w := 0;
					vl_negado_w := 0;
					qt_negado_w := 0;
					vl_aceito_w := 0;
					qt_aceita_w := 0;
				end if;
				
				if (vl_ndc_w <= 0) then
					qt_ndc_w := 0;
				end if;
				
				select	max(w.nr_sequencia)
				into STRICT	nr_item_discussao_w
				from	pls_lote_discussao l,
					pls_contestacao_discussao x,
					pls_discussao_mat w
				where	l.nr_sequencia		= x.nr_seq_lote
				and	x.nr_sequencia		= w.nr_seq_discussao
				and	w.nr_seq_conta_mat	= nr_seq_conta_mat_w
				and	l.ie_status		<> 'C'
				and	w.ie_tipo_acordo	in ('01','02');
				
				-- SE O ITEM JA ESTEVE EM UMA DISCUSSAO ENCERRADA, NAO DEVE SER ALTERADA AS INFORMACOES PELA IMPORTACAO
				if (nr_item_discussao_w IS NOT NULL AND nr_item_discussao_w::text <> '') then
					select	qt_recurso,
						vl_recurso,
						qt_negada,
						vl_negado,
						qt_contestada,
						vl_contestado,
						qt_aceita,
						vl_aceito,
						vl_ndc,
						qt_ndc,
						vl_reconh_orig,
						qt_reconh_orig
					into STRICT	qt_discussao_w,
						vl_discussao_w,
						qt_negado_w,
						vl_negado_w,
						qt_contestada_w,
						vl_contestado_w,
						qt_aceita_w,
						vl_aceito_w,
						vl_ndc_w,
						qt_ndc_w,
						vl_reconh_orig_w,
						qt_reconh_orig_w
					from	pls_discussao_mat
					where	nr_sequencia = nr_item_discussao_w;
				end if;
				
				-- jtonon - OS 848728 - Quando o Tipo de Acordo for 'PARCIAL' os valores QT_ACEITA, VL_ACEITO, QT_NEGADA, VL_NEGADO, QT_NDC, VL_NDC devem ser zerados
				if (ie_tipo_acordo_w in ('12','14') and (tp_arq_parcial_w != '2')) or (ie_tipo_acordo_w in ('00','05')) then
					qt_aceita_w	:= 0;
					vl_aceito_w	:= 0;
					qt_negado_w	:= 0;
					vl_negado_w	:= 0;
					qt_ndc_w	:= 0;
					vl_ndc_w	:= 0;
				end if;
				
				-- wcbernardino - OS 909630 - Quando o tipo do arquivo for "Decurso de prazo" nao pode ter valor NDC
				if (ie_tipo_arquivo_w in (9)) then
					qt_ndc_w	:= 0;
					vl_ndc_w	:= 0;
				end if;
				
				insert into pls_discussao_mat(nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_seq_discussao,
					qt_recurso,
					vl_recurso,
					qt_negada,
					vl_negado,
					nr_seq_conta_mat,
					qt_contestada,
					vl_contestado,
					qt_aceita,
					vl_aceito,
					nr_seq_motivo_glosa_aceita,
					nr_seq_motivo_glosa_neg,
					vl_original,
					vl_material,
					vl_atual,
					nr_lote_contabil,
					vl_ndc,
					qt_ndc,
					vl_reconh_orig,
					qt_reconh_orig,
					ie_tipo_acordo,
					nr_seq_contestacao_mat)
				values (nextval('pls_discussao_mat_seq'),
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_discussao_w,
					qt_discussao_w,
					vl_discussao_w,
					qt_negado_w,
					vl_negado_w,
					nr_seq_conta_mat_w,
					qt_contestada_w,
					vl_contestado_w,
					qt_aceita_w,
					vl_aceito_w,
					null,
					null,
					vl_material_w,
					vl_material_w,
					vl_atual_w,
					0,
					vl_ndc_w,
					qt_ndc_w,
					vl_reconh_orig_w,
					qt_reconh_orig_w,
					ie_tipo_acordo_w,
					nr_seq_itens_w);
			end if;			
			end;
		end loop;
		close C02;
		end;
	end loop;
	close C01;
end if;

open C03;
loop
fetch C03 into	
	nr_seq_discussao_w;
EXIT WHEN NOT FOUND; /* apply on C03 */
	begin
	CALL pls_atualiza_valores_discussao(nr_seq_discussao_w);
	end;
end loop;
close C03;

-- Atualizar os valores do lote de contestacao
CALL pls_atualizar_valores_contest( nr_seq_lote_contest_p, 'N');

-- Fechar o lote de discussao
CALL pls_fechar_discussao_recebida(	nr_seq_lote_disc_w, null, nm_usuario_p, 'S', cd_estabelecimento_p);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_lote_discussao_a550 (nr_seq_lote_contest_p bigint, nr_seq_camara_contest_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, nr_seq_lote_disc_p INOUT bigint) FROM PUBLIC;

