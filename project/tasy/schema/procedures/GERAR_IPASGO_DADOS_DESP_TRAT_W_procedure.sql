-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE lista AS (
        data timestamp,
        ato bigint);


CREATE OR REPLACE PROCEDURE gerar_ipasgo_dados_desp_trat_w ( nr_interno_conta_p bigint, dt_mesano_referencia_p timestamp, nm_usuario_p text, nr_seq_tipo_fatura_p bigint, qt_linha_arq_p INOUT bigint, qt_linha_atend_p INOUT bigint) AS $body$
DECLARE


nr_atendimento_w			atendimento_paciente.nr_atendimento%type;
cd_procedimento_w		procedimento_paciente.cd_procedimento%type;
ie_origem_proced_w		procedimento_paciente.ie_origem_proced%type;
qt_procedimento_w			procedimento_paciente.qt_procedimento%type;
vl_procedimento_w			double precision;--Nao alterar as casas decimais
dt_procedimento_w			procedimento_paciente.dt_procedimento%type;
dt_procedimento_ww		procedimento_paciente.dt_procedimento%type;
nr_matricula_prestador_w		varchar(08);
cd_convenio_parametro_w		conta_paciente.cd_convenio_parametro%type;
qt_ato_w				bigint := 1;
qt_ato_aux_w			bigint := 1;
qt_ato_ww			bigint := 1;
nr_seq_proc_w			bigint := -1;
cd_cgc_prestador_w		procedimento_paciente.cd_cgc_prestador%type;
nr_seq_proc_interno_w		procedimento_paciente.nr_seq_proc_interno%type;
cd_tipo_fatura_w			fatur_tipo_fatura.cd_tipo_fatura%type;
ie_gerar_mesmo_ato_w		varchar(01);
ie_considera_proc_interno_w		varchar(01);
qt_pacote_w			bigint;
nr_ato_ipasgo_w			procedimento_paciente.nr_ato_ipasgo%type;
cd_estabelecimento_w		estabelecimento.cd_estabelecimento%type;

ie_controle_w			varchar(15) := 'N';
qt_reg_w				bigint := 1;
qt_ato_ordenacao_w		bigint;
ie_lib_todos_procedimentos_w	varchar(01);
cd_proc_alto_custo_w            varchar(50);
type myArray is table of lista index by integer;

ds_controle_ato_w myArray;

c01 CURSOR FOR
SELECT  b.cd_procedimento,
	b.ie_origem_proced,
	sum(b.qt_procedimento) qt_procedimento,
	sum(CASE WHEN coalesce((b.qt_procedimento * Obter_preco_proc_ipasgo_atend(b.nr_atendimento,b.dt_conta,b.cd_procedimento,b.ie_origem_proced,b.nr_seq_proc_interno,b.ie_responsavel_credito,'IPDT')),0)=0 THEN		coalesce(b.vl_procedimento,0)  ELSE coalesce((b.qt_procedimento * Obter_preco_proc_ipasgo_atend(b.nr_atendimento,b.dt_conta,b.cd_procedimento,b.ie_origem_proced,b.nr_seq_proc_interno,b.ie_responsavel_credito,'IPDT')),0) END ) vl,
	min(b.dt_procedimento) dt_procedimento,
	b.cd_cgc_prestador,
	b.nr_seq_proc_interno,
	coalesce(b.nr_ato_ipasgo,0) nr_ato_ipasgo,
	CASE WHEN coalesce(ie_gerar_mesmo_ato_w,'N')='N' THEN  0  ELSE (SELECT  coalesce(min(x.nr_linha_ato),1) from w_ipasgo_dados_proc_trat x where x.nr_interno_conta = nr_interno_conta_p and x.nm_usuario = nm_usuario_p and x.dt_procedimento = (select min(y.dt_procedimento) from procedimento_paciente y where y.nr_interno_conta = nr_interno_conta_p and y.nr_seq_proc_interno = b.nr_seq_proc_interno)) END  qt_ato_ordenacao
from    procedimento a,
        procedimento_paciente b
where   b.nr_atendimento        = nr_atendimento_w
and     b.nr_interno_conta      = nr_interno_conta_p
and     coalesce(b.cd_motivo_exc_conta::text, '') = ''
and     obter_classif_material_proced(null, b.cd_procedimento, b.ie_origem_proced) in (2,3)
and     a.cd_procedimento       = b.cd_procedimento
and     cd_tipo_fatura_w        not in (8,3)
and     a.ie_origem_proced      = b.ie_origem_proced
and (qt_pacote_w = 0 or ie_lib_todos_procedimentos_w = 'S')
and     b.cd_procedimento <> 999999
and     obter_proc_nao_agrupa_ipasgo(b.cd_procedimento, b.ie_origem_proced, cd_estabelecimento_w, 8) = 'N'
group by        b.cd_procedimento,
	b.ie_origem_proced,
	b.cd_cgc_prestador,
	b.nr_seq_proc_interno,
	coalesce(b.nr_ato_ipasgo,0),
	b.nr_seq_proc_princ

union all

select  b.cd_procedimento,
	b.ie_origem_proced,
	(b.qt_procedimento) qt_procedimento,
	(CASE WHEN coalesce((b.qt_procedimento * Obter_preco_proc_ipasgo_atend(b.nr_atendimento,b.dt_conta,b.cd_procedimento,b.ie_origem_proced,b.nr_seq_proc_interno,b.ie_responsavel_credito,'IPDT')),0)=0 THEN 		coalesce(b.vl_procedimento,0)  ELSE coalesce((b.qt_procedimento * Obter_preco_proc_ipasgo_atend(b.nr_atendimento,b.dt_conta,b.cd_procedimento,b.ie_origem_proced,b.nr_seq_proc_interno,b.ie_responsavel_credito,'IPDT')),0) END ) vl,
	(b.dt_procedimento) dt_procedimento,
	b.cd_cgc_prestador,
	b.nr_seq_proc_interno,
	coalesce(b.nr_ato_ipasgo,0) nr_ato_ipasgo,
		CASE WHEN coalesce(ie_gerar_mesmo_ato_w,'N')='N' THEN  0  ELSE (select  coalesce(min(x.nr_linha_ato),1) from w_ipasgo_dados_proc_trat x where x.nr_interno_conta = nr_interno_conta_p and x.nm_usuario = nm_usuario_p and x.dt_procedimento = b.dt_procedimento) END  qt_ato_ordenacao
from    procedimento a,
        procedimento_paciente b
where   b.nr_atendimento        = nr_atendimento_w
and     b.nr_interno_conta      = nr_interno_conta_p
and     coalesce(b.cd_motivo_exc_conta::text, '') = ''
and     obter_classif_material_proced(null, b.cd_procedimento, b.ie_origem_proced) in (2,3)
and     a.cd_procedimento       = b.cd_procedimento
and     cd_tipo_fatura_w        not in (8,3)
and     a.ie_origem_proced      = b.ie_origem_proced
and (qt_pacote_w = 0  or ie_lib_todos_procedimentos_w = 'S')
and     b.cd_procedimento = 999999
and     obter_proc_nao_agrupa_ipasgo(b.cd_procedimento, b.ie_origem_proced, cd_estabelecimento_w, 8) = 'N'

union all

select  b.cd_procedimento,
	b.ie_origem_proced,
	sum(b.qt_procedimento) qt_procedimento,
	sum(CASE WHEN coalesce((b.qt_procedimento * Obter_preco_proc_ipasgo_atend(b.nr_atendimento,b.dt_conta,b.cd_procedimento,b.ie_origem_proced,b.nr_seq_proc_interno,b.ie_responsavel_credito,'IPDT')),0)=0 THEN 		coalesce(b.vl_procedimento,0)  ELSE coalesce((b.qt_procedimento * Obter_preco_proc_ipasgo_atend(b.nr_atendimento,b.dt_conta,b.cd_procedimento,b.ie_origem_proced,b.nr_seq_proc_interno,b.ie_responsavel_credito,'IPDT')),0) END ) vl,
	min(b.dt_procedimento) dt_procedimento,
	b.cd_cgc_prestador,
	b.nr_seq_proc_interno,
	coalesce(b.nr_ato_ipasgo,0) nr_ato_ipasgo,
		CASE WHEN coalesce(ie_gerar_mesmo_ato_w,'N')='N' THEN  0  ELSE (select  coalesce(min(x.nr_linha_ato),1) from w_ipasgo_dados_proc_trat x where x.nr_interno_conta = nr_interno_conta_p and x.nm_usuario = nm_usuario_p and x.dt_procedimento = (select min(y.dt_procedimento) from procedimento_paciente y where y.nr_interno_conta = nr_interno_conta_p and y.nr_seq_proc_interno = b.nr_seq_proc_interno)) END  qt_ato_ordenacao
from    procedimento a,
        procedimento_paciente b
where   b.nr_atendimento        = nr_atendimento_w
and     b.nr_interno_conta      = nr_interno_conta_p
and     coalesce(b.cd_motivo_exc_conta::text, '') = ''
and     obter_classif_material_proced(null, b.cd_procedimento, b.ie_origem_proced) in (2,3)
and     a.cd_procedimento       = b.cd_procedimento
and     a.ie_origem_proced      = b.ie_origem_proced
and     cd_tipo_fatura_w        = 8
and     coalesce(b.ie_proc_princ_atend,'S') <> 'S'
and (qt_pacote_w = 0 or ie_lib_todos_procedimentos_w = 'S')
and     obter_proc_nao_agrupa_ipasgo(b.cd_procedimento, b.ie_origem_proced, cd_estabelecimento_w, 8) = 'N'
group by        b.cd_procedimento,
	b.ie_origem_proced,
	b.cd_cgc_prestador,
	b.nr_seq_proc_interno,
	coalesce(b.nr_ato_ipasgo,0),
	b.nr_seq_proc_princ

union all

 /*Proc alto custo a ser gerado quando for tipo 3*/

select  999999,
	b.ie_origem_proced,
	sum(b.qt_procedimento) qt_procedimento,
	sum(coalesce(coalesce(ipasgo_obter_valor_conta(b.nr_interno_conta,0),
		(b.qt_procedimento * Obter_preco_proc_ipasgo_atend(b.nr_atendimento,b.dt_conta,b.cd_procedimento,b.ie_origem_proced,b.nr_seq_proc_interno,b.ie_responsavel_credito,'F'))),0)) vl,
	min(b.dt_procedimento) dt_procedimento,
	b.cd_cgc_prestador,
	b.nr_seq_proc_interno,
	coalesce(b.nr_ato_ipasgo,0) nr_ato_ipasgo,
		CASE WHEN coalesce(ie_gerar_mesmo_ato_w,'N')='N' THEN  0  ELSE (select  coalesce(min(x.nr_linha_ato),1) from w_ipasgo_dados_proc_trat x where x.nr_interno_conta = nr_interno_conta_p and x.nm_usuario = nm_usuario_p and x.dt_procedimento = (select min(y.dt_procedimento) from procedimento_paciente y where y.nr_interno_conta = nr_interno_conta_p and y.nr_seq_proc_interno = b.nr_seq_proc_interno)) END  qt_ato_ordenacao
from    procedimento a,
        procedimento_paciente b
where   b.nr_atendimento        = nr_atendimento_w
and     b.nr_interno_conta      = nr_interno_conta_p
and     coalesce(b.cd_motivo_exc_conta::text, '') = ''
and     a.cd_procedimento       = b.cd_procedimento
and     a.ie_origem_proced      = b.ie_origem_proced
and     cd_tipo_fatura_w        = 3
and     coalesce(b.ie_proc_princ_atend,'S') = 'S'
and	not exists (select c.cd_procedimento
                from	procedimento_paciente c
                where   c.cd_procedimento = 203001
                and     c.nr_atendimento        = nr_atendimento_w
                and     c.nr_interno_conta      = nr_interno_conta_p)
and     obter_se_contido(b.cd_procedimento_convenio,coalesce(cd_proc_alto_custo_w,70025)) = 'S'
and (qt_pacote_w = 0 or ie_lib_todos_procedimentos_w = 'S')
and     obter_proc_nao_agrupa_ipasgo(999999, b.ie_origem_proced, cd_estabelecimento_w, 8) = 'N'
group by        999999,
	b.ie_origem_proced,
	b.cd_cgc_prestador,
	b.nr_seq_proc_interno,
	coalesce(b.nr_ato_ipasgo,0),
	b.nr_seq_proc_princ

union all

/*Se n?o for alto custo*/

select  b.cd_procedimento,
	b.ie_origem_proced,
	sum(b.qt_procedimento) qt_procedimento,
	sum(CASE WHEN coalesce((b.qt_procedimento * Obter_preco_proc_ipasgo_atend(b.nr_atendimento,b.dt_conta,b.cd_procedimento,b.ie_origem_proced,b.nr_seq_proc_interno,b.ie_responsavel_credito,'IPDT')),0)=0 THEN 		coalesce(b.vl_procedimento,0)  ELSE coalesce((b.qt_procedimento * Obter_preco_proc_ipasgo_atend(b.nr_atendimento,b.dt_conta,b.cd_procedimento,b.ie_origem_proced,b.nr_seq_proc_interno,b.ie_responsavel_credito,'IPDT')),0) END ) vl,
	min(b.dt_procedimento) dt_procedimento,
	b.cd_cgc_prestador,
	b.nr_seq_proc_interno,
	coalesce(b.nr_ato_ipasgo,0) nr_ato_ipasgo,
		CASE WHEN coalesce(ie_gerar_mesmo_ato_w,'N')='N' THEN  0  ELSE (select  coalesce(min(x.nr_linha_ato),1) from w_ipasgo_dados_proc_trat x where x.nr_interno_conta = nr_interno_conta_p and x.nm_usuario = nm_usuario_p and x.dt_procedimento = (select min(y.dt_procedimento) from procedimento_paciente y where y.nr_interno_conta = nr_interno_conta_p and y.nr_seq_proc_interno = b.nr_seq_proc_interno)) END  qt_ato_ordenacao
from    procedimento a,
        procedimento_paciente b
where   b.nr_atendimento        = nr_atendimento_w
and     b.nr_interno_conta      = nr_interno_conta_p
and     coalesce(b.cd_motivo_exc_conta::text, '') = ''
and     obter_classif_material_proced(null, b.cd_procedimento, b.ie_origem_proced) in (2,3)
and     a.cd_procedimento       = b.cd_procedimento
and     cd_tipo_fatura_w        = 3
and     somente_numero(b.cd_procedimento_convenio) not in (70025,70033)
and     a.ie_origem_proced      = b.ie_origem_proced
and (qt_pacote_w = 0 or ie_lib_todos_procedimentos_w = 'S')
and     obter_proc_nao_agrupa_ipasgo(b.cd_procedimento, b.ie_origem_proced, cd_estabelecimento_w, 8) = 'N'
group by        b.cd_procedimento,
	b.ie_origem_proced,
	b.cd_cgc_prestador,
	b.nr_seq_proc_interno,
	coalesce(b.nr_ato_ipasgo,0),
	b.nr_seq_proc_princ

union all

select  999999,
	b.ie_origem_proced,
	sum(b.qt_procedimento) qt_procedimento,
	sum(CASE WHEN coalesce(ipasgo_obter_se_respcred_soma(b.ie_responsavel_credito),'N')='N' THEN b.vl_procedimento  ELSE (b.vl_custo_operacional+b.vl_medico) END ) vl,
	min(b.dt_procedimento) dt_procedimento,
	b.cd_cgc_prestador,
	b.nr_seq_proc_interno,
	coalesce(b.nr_ato_ipasgo,0) nr_ato_ipasgo,
		CASE WHEN coalesce(ie_gerar_mesmo_ato_w,'N')='N' THEN  0  ELSE (select  coalesce(min(x.nr_linha_ato),1) from w_ipasgo_dados_proc_trat x where x.nr_interno_conta = nr_interno_conta_p and x.nm_usuario = nm_usuario_p and x.dt_procedimento = (select min(y.dt_procedimento) from procedimento_paciente y where y.nr_interno_conta = nr_interno_conta_p and y.nr_seq_proc_interno = b.nr_seq_proc_interno)) END  qt_ato_ordenacao
from    procedimento a,
        procedimento_paciente b
where   b.nr_atendimento        = nr_atendimento_w
and     b.nr_interno_conta      = nr_interno_conta_p
and     coalesce(b.cd_motivo_exc_conta::text, '') = ''
and     a.cd_procedimento       = b.cd_procedimento
and     a.ie_origem_proced      = b.ie_origem_proced
and     cd_tipo_fatura_w        not in (8,3)
and     qt_pacote_w > 0
and     (nr_seq_proc_pacote IS NOT NULL AND nr_seq_proc_pacote::text <> '')
and     nr_seq_proc_pacote = nr_sequencia
and     obter_proc_nao_agrupa_ipasgo(999999, b.ie_origem_proced, cd_estabelecimento_w, 8) = 'N'
and	ipasgo_obter_se_pacote_mat(b.nr_sequencia,b.nr_atendimento,b.dt_procedimento) = 'N'
group by        999999,
	b.ie_origem_proced,
	b.cd_cgc_prestador,
	b.nr_seq_proc_interno,
	coalesce(b.nr_ato_ipasgo,0),
	b.nr_seq_proc_princ

union all

select  b.cd_procedimento,
	b.ie_origem_proced,
	sum(b.qt_procedimento) qt_procedimento,
	sum(CASE WHEN coalesce((b.qt_procedimento * Obter_preco_proc_ipasgo_atend(b.nr_atendimento,b.dt_conta,b.cd_procedimento,b.ie_origem_proced,b.nr_seq_proc_interno,b.ie_responsavel_credito,'IPDT')),0)=0 THEN 		coalesce(b.vl_procedimento,0)  ELSE coalesce((b.qt_procedimento * Obter_preco_proc_ipasgo_atend(b.nr_atendimento,b.dt_conta,b.cd_procedimento,b.ie_origem_proced,b.nr_seq_proc_interno,b.ie_responsavel_credito,'IPDT')),0) END ) vl,
	b.dt_procedimento dt_procedimento,
	b.cd_cgc_prestador,
	b.nr_seq_proc_interno,
	coalesce(b.nr_ato_ipasgo,0) nr_ato_ipasgo,
		CASE WHEN coalesce(ie_gerar_mesmo_ato_w,'N')='N' THEN  0  ELSE (select  coalesce(min(x.nr_linha_ato),1) from w_ipasgo_dados_proc_trat x where x.nr_interno_conta = nr_interno_conta_p and x.nm_usuario = nm_usuario_p and x.dt_procedimento = b.dt_procedimento) END  qt_ato_ordenacao
from    procedimento a,
        procedimento_paciente b
where   b.nr_atendimento        = nr_atendimento_w
and     b.nr_interno_conta      = nr_interno_conta_p
and     coalesce(b.cd_motivo_exc_conta::text, '') = ''
and     obter_classif_material_proced(null, b.cd_procedimento, b.ie_origem_proced) in (2,3)
and     a.cd_procedimento       = b.cd_procedimento
and     cd_tipo_fatura_w        not in (8,3)
and     a.ie_origem_proced      = b.ie_origem_proced
and (qt_pacote_w = 0  or ie_lib_todos_procedimentos_w = 'S')
and     b.cd_procedimento <> 999999
and     obter_proc_nao_agrupa_ipasgo(b.cd_procedimento, b.ie_origem_proced, cd_estabelecimento_w, 8) = 'S'
group by        b.cd_procedimento,
	b.ie_origem_proced,
	b.cd_cgc_prestador,
	b.nr_seq_proc_interno,
	coalesce(b.nr_ato_ipasgo,0),
	b.dt_procedimento,
	b.nr_seq_proc_princ

union all

select  b.cd_procedimento,
	b.ie_origem_proced,
	(b.qt_procedimento) qt_procedimento,
	(CASE WHEN coalesce((b.qt_procedimento * Obter_preco_proc_ipasgo_atend(b.nr_atendimento,b.dt_conta,b.cd_procedimento,b.ie_origem_proced,b.nr_seq_proc_interno,b.ie_responsavel_credito,'IPDT')),0)=0 THEN 		coalesce(b.vl_procedimento,0)  ELSE coalesce((b.qt_procedimento * Obter_preco_proc_ipasgo_atend(b.nr_atendimento,b.dt_conta,b.cd_procedimento,b.ie_origem_proced,b.nr_seq_proc_interno,b.ie_responsavel_credito,'IPDT')),0) END ) vl,
	(b.dt_procedimento) dt_procedimento,
	b.cd_cgc_prestador,
	b.nr_seq_proc_interno,
	coalesce(b.nr_ato_ipasgo,0) nr_ato_ipasgo,
		CASE WHEN coalesce(ie_gerar_mesmo_ato_w,'N')='N' THEN  0  ELSE (select  coalesce(min(x.nr_linha_ato),1) from w_ipasgo_dados_proc_trat x where x.nr_interno_conta = nr_interno_conta_p and x.nm_usuario = nm_usuario_p and x.dt_procedimento = b.dt_procedimento) END  qt_ato_ordenacao
from    procedimento a,
        procedimento_paciente b
where   b.nr_atendimento        = nr_atendimento_w
and     b.nr_interno_conta      = nr_interno_conta_p
and     coalesce(b.cd_motivo_exc_conta::text, '') = ''
and     obter_classif_material_proced(null, b.cd_procedimento, b.ie_origem_proced) in (2,3)
and     a.cd_procedimento       = b.cd_procedimento
and     cd_tipo_fatura_w        not in (8,3)
and     a.ie_origem_proced      = b.ie_origem_proced
and (qt_pacote_w = 0  or ie_lib_todos_procedimentos_w = 'S')
and     b.cd_procedimento = 999999
and     obter_proc_nao_agrupa_ipasgo(b.cd_procedimento, b.ie_origem_proced, cd_estabelecimento_w, 8) = 'S'

union all

select  b.cd_procedimento,
	b.ie_origem_proced,
	sum(b.qt_procedimento) qt_procedimento,
	sum(CASE WHEN coalesce((b.qt_procedimento * Obter_preco_proc_ipasgo_atend(b.nr_atendimento,b.dt_conta,b.cd_procedimento,b.ie_origem_proced,b.nr_seq_proc_interno,b.ie_responsavel_credito,'IPDT')),0)=0 THEN 		coalesce(b.vl_procedimento,0)  ELSE coalesce((b.qt_procedimento * Obter_preco_proc_ipasgo_atend(b.nr_atendimento,b.dt_conta,b.cd_procedimento,b.ie_origem_proced,b.nr_seq_proc_interno,b.ie_responsavel_credito,'IPDT')),0) END ) vl,
	b.dt_procedimento dt_procedimento,
	b.cd_cgc_prestador,
	b.nr_seq_proc_interno,
	coalesce(b.nr_ato_ipasgo,0) nr_ato_ipasgo,
		CASE WHEN coalesce(ie_gerar_mesmo_ato_w,'N')='N' THEN  0  ELSE (select  coalesce(min(x.nr_linha_ato),1) from w_ipasgo_dados_proc_trat x where x.nr_interno_conta = nr_interno_conta_p and x.nm_usuario = nm_usuario_p and x.dt_procedimento = b.dt_procedimento) END  qt_ato_ordenacao
from    procedimento a,
        procedimento_paciente b
where   b.nr_atendimento        = nr_atendimento_w
and     b.nr_interno_conta      = nr_interno_conta_p
and     coalesce(b.cd_motivo_exc_conta::text, '') = ''
and     obter_classif_material_proced(null, b.cd_procedimento, b.ie_origem_proced) in (2,3)
and     a.cd_procedimento       = b.cd_procedimento
and     a.ie_origem_proced      = b.ie_origem_proced
and     cd_tipo_fatura_w        = 8
and     coalesce(b.ie_proc_princ_atend,'S') <> 'S'
and (qt_pacote_w = 0 or ie_lib_todos_procedimentos_w = 'S')
and     obter_proc_nao_agrupa_ipasgo(b.cd_procedimento, b.ie_origem_proced, cd_estabelecimento_w, 8) = 'S'
group by        b.cd_procedimento,
	b.ie_origem_proced,
	b.cd_cgc_prestador,
	b.nr_seq_proc_interno,
	coalesce(b.nr_ato_ipasgo,0),
	b.dt_procedimento,
	b.nr_seq_proc_princ

union all

 /*Proc alto custo a ser gerado quando for tipo 3*/

select  999999,
	b.ie_origem_proced,
	sum(b.qt_procedimento) qt_procedimento,
	sum(coalesce(coalesce(ipasgo_obter_valor_conta(b.nr_interno_conta,0),
		(b.qt_procedimento * Obter_preco_proc_ipasgo_atend(b.nr_atendimento,b.dt_conta,b.cd_procedimento,b.ie_origem_proced,b.nr_seq_proc_interno,b.ie_responsavel_credito,'F'))),0)) vl,
	b.dt_procedimento dt_procedimento,
	b.cd_cgc_prestador,
	b.nr_seq_proc_interno,
	coalesce(b.nr_ato_ipasgo,0) nr_ato_ipasgo,
		CASE WHEN coalesce(ie_gerar_mesmo_ato_w,'N')='N' THEN  0  ELSE (select  coalesce(min(x.nr_linha_ato),1) from w_ipasgo_dados_proc_trat x where x.nr_interno_conta = nr_interno_conta_p and x.nm_usuario = nm_usuario_p and x.dt_procedimento = b.dt_procedimento) END  qt_ato_ordenacao
from    procedimento a,
        procedimento_paciente b
where   b.nr_atendimento        = nr_atendimento_w
and     b.nr_interno_conta      = nr_interno_conta_p
and     coalesce(b.cd_motivo_exc_conta::text, '') = ''
and     a.cd_procedimento       = b.cd_procedimento
and     a.ie_origem_proced      = b.ie_origem_proced
and     cd_tipo_fatura_w        = 3
and     coalesce(b.ie_proc_princ_atend,'S') = 'S'
and	not exists (select c.cd_procedimento
                from	procedimento_paciente c
                where   c.cd_procedimento = 203001
                and     c.nr_atendimento        = nr_atendimento_w
                and     c.nr_interno_conta      = nr_interno_conta_p)
and     obter_se_contido(b.cd_procedimento_convenio,coalesce(cd_proc_alto_custo_w,70025)) = 'S'
and (qt_pacote_w = 0 or ie_lib_todos_procedimentos_w = 'S')
and     obter_proc_nao_agrupa_ipasgo(999999, b.ie_origem_proced, cd_estabelecimento_w, 8) = 'S'
group by        999999,
	b.ie_origem_proced,
	b.cd_cgc_prestador,
	b.nr_seq_proc_interno,
	coalesce(b.nr_ato_ipasgo,0),
	b.dt_procedimento,
	b.nr_seq_proc_princ

union all

/*Se n?o for alto custo*/

select  b.cd_procedimento,
	b.ie_origem_proced,
	sum(b.qt_procedimento) qt_procedimento,
	sum(CASE WHEN coalesce((b.qt_procedimento * Obter_preco_proc_ipasgo_atend(b.nr_atendimento,b.dt_conta,b.cd_procedimento,b.ie_origem_proced,b.nr_seq_proc_interno,b.ie_responsavel_credito,'IPDT')),0)=0 THEN 		coalesce(b.vl_procedimento,0)  ELSE coalesce((b.qt_procedimento * Obter_preco_proc_ipasgo_atend(b.nr_atendimento,b.dt_conta,b.cd_procedimento,b.ie_origem_proced,b.nr_seq_proc_interno,b.ie_responsavel_credito,'IPDT')),0) END ) vl,
	b.dt_procedimento dt_procedimento,
	b.cd_cgc_prestador,
	b.nr_seq_proc_interno,
	coalesce(b.nr_ato_ipasgo,0) nr_ato_ipasgo,
		CASE WHEN coalesce(ie_gerar_mesmo_ato_w,'N')='N' THEN  0  ELSE (select  coalesce(min(x.nr_linha_ato),1) from w_ipasgo_dados_proc_trat x where x.nr_interno_conta = nr_interno_conta_p and x.nm_usuario = nm_usuario_p and x.dt_procedimento = b.dt_procedimento) END  qt_ato_ordenacao
from    procedimento a,
        procedimento_paciente b
where   b.nr_atendimento        = nr_atendimento_w
and     b.nr_interno_conta      = nr_interno_conta_p
and     coalesce(b.cd_motivo_exc_conta::text, '') = ''
and     obter_classif_material_proced(null, b.cd_procedimento, b.ie_origem_proced) in (2,3)
and     a.cd_procedimento       = b.cd_procedimento
and     cd_tipo_fatura_w        = 3
and     somente_numero(b.cd_procedimento_convenio) not in (70025,70033)
and     a.ie_origem_proced      = b.ie_origem_proced
and (qt_pacote_w = 0 or ie_lib_todos_procedimentos_w = 'S')
and     obter_proc_nao_agrupa_ipasgo(b.cd_procedimento, b.ie_origem_proced, cd_estabelecimento_w, 8) = 'S'
group by        b.cd_procedimento,
	b.ie_origem_proced,
	b.cd_cgc_prestador,
	b.nr_seq_proc_interno,
	coalesce(b.nr_ato_ipasgo,0),
	b.dt_procedimento,
	b.nr_seq_proc_princ

union all

select  999999,
	b.ie_origem_proced,
	sum(b.qt_procedimento) qt_procedimento,
	sum(CASE WHEN coalesce(ipasgo_obter_se_respcred_soma(b.ie_responsavel_credito),'N')='N' THEN b.vl_procedimento  ELSE (b.vl_custo_operacional+b.vl_medico) END ) vl,
	b.dt_procedimento dt_procedimento,
	b.cd_cgc_prestador,
	b.nr_seq_proc_interno,
	coalesce(b.nr_ato_ipasgo,0) nr_ato_ipasgo,
		CASE WHEN coalesce(ie_gerar_mesmo_ato_w,'N')='N' THEN  0  ELSE (select  coalesce(min(x.nr_linha_ato),1) from w_ipasgo_dados_proc_trat x where x.nr_interno_conta = nr_interno_conta_p and x.nm_usuario = nm_usuario_p and x.dt_procedimento = b.dt_procedimento) END  qt_ato_ordenacao
from    procedimento a,
        procedimento_paciente b
where   b.nr_atendimento        = nr_atendimento_w
and     b.nr_interno_conta      = nr_interno_conta_p
and     coalesce(b.cd_motivo_exc_conta::text, '') = ''
and     a.cd_procedimento       = b.cd_procedimento
and     a.ie_origem_proced      = b.ie_origem_proced
and     cd_tipo_fatura_w        not in (8,3)
and     qt_pacote_w > 0
and     (nr_seq_proc_pacote IS NOT NULL AND nr_seq_proc_pacote::text <> '')
and     nr_seq_proc_pacote = nr_sequencia
and     obter_proc_nao_agrupa_ipasgo(999999, b.ie_origem_proced, cd_estabelecimento_w, 8) = 'S'
and	ipasgo_obter_se_pacote_mat(b.nr_sequencia,b.nr_atendimento,b.dt_procedimento) = 'N'
group by        999999,
	b.ie_origem_proced,
	b.cd_cgc_prestador,
	b.nr_seq_proc_interno,
	coalesce(b.nr_ato_ipasgo,0),
	b.dt_procedimento,
	b.nr_seq_proc_princ
order by        nr_ato_ipasgo,
		qt_ato_ordenacao,
        dt_procedimento,
        vl desc;


BEGIN

cd_estabelecimento_w    := Wheb_Usuario_pck.get_cd_estabelecimento;
ie_gerar_mesmo_ato_w := obter_param_usuario(999, 43, obter_perfil_Ativo, nm_usuario_p, cd_estabelecimento_w, ie_gerar_mesmo_ato_w);
ie_considera_proc_interno_w := obter_param_usuario(999, 59, obter_perfil_Ativo, nm_usuario_p, cd_estabelecimento_w, ie_considera_proc_interno_w);
ie_lib_todos_procedimentos_w := obter_param_usuario(999, 101, obter_perfil_Ativo, nm_usuario_p, cd_estabelecimento_w, ie_lib_todos_procedimentos_w);
cd_proc_alto_custo_w := obter_param_usuario(999, 106, obter_perfil_Ativo, nm_usuario_p, cd_estabelecimento_w, cd_proc_alto_custo_w);


select  b.cd_convenio_parametro,
	a.nr_atendimento
into STRICT    cd_convenio_parametro_w,
        nr_atendimento_w
from    atendimento_paciente a,
        conta_paciente b
where   a.nr_atendimento        = b.nr_atendimento
and     b.nr_interno_conta      = nr_interno_conta_p;

select  cd_tipo_fatura
into STRICT    cd_tipo_fatura_w
from    fatur_tipo_fatura
where   nr_sequencia = nr_seq_tipo_fatura_p;

select  count(*)
into STRICT    qt_pacote_w
from    procedimento_paciente
where   nr_interno_conta        = nr_interno_conta_p
and     nr_atendimento          = nr_atendimento_w
and     nr_sequencia            = nr_seq_proc_pacote;

open C01;
loop
fetch C01 into
	cd_procedimento_w,
	ie_origem_proced_w,
	qt_procedimento_w,
	vl_procedimento_w,
	dt_procedimento_w,
	cd_cgc_prestador_w,
	nr_seq_proc_interno_w,
	nr_ato_ipasgo_w,
	qt_ato_ordenacao_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
        begin

	if (coalesce(ie_considera_proc_interno_w,'S') = 'N') then
		nr_seq_proc_interno_w := 0;
	end if;

	select  coalesce(max(cd_prestador_convenio),'00000000')
	into STRICT    nr_matricula_prestador_w
	from    convenio_prestador
	where   cd_convenio = cd_convenio_parametro_w
	and     cd_cgc = cd_cgc_prestador_w;


	/*Buscar as convers?es de procedimento*/

	begin
		select  coalesce(max(cd_proc_convenio), cd_procedimento_w)
		into STRICT    cd_procedimento_w
		from    conversao_proc_convenio
		where   cd_procedimento         = cd_procedimento_w
		and     ie_origem_proced                = ie_origem_proced_w
		and     cd_convenio             = cd_convenio_parametro_w;

		if (coalesce(nr_seq_proc_interno_w,0) > 0) then
			/*Buscar as convers?es meio externo - proc interno*/

			select  coalesce(max(cd_proc_convenio), nr_seq_proc_interno_w)
			into STRICT    cd_procedimento_w
			from    conversao_proc_convenio
			where   nr_seq_proc_interno     = nr_seq_proc_interno_w
			and     cd_convenio             = cd_convenio_parametro_w;
		end if;
	exception
	when others then
		cd_procedimento_w := coalesce(cd_procedimento_w,0);
	end;

	qt_linha_arq_p  := qt_linha_arq_p + 1;
	nr_seq_proc_w   := nr_seq_proc_w + 1;

	if (coalesce(ie_gerar_mesmo_ato_w,'N') = 'S') then
		begin
		select  coalesce(min(nr_linha_ato),1)
		into STRICT    qt_ato_w
		from    w_ipasgo_dados_proc_trat
		where   nr_interno_conta        = nr_interno_conta_p
		and     nm_usuario      = nm_usuario_p
		and     dt_procedimento = dt_procedimento_w;

		if (coalesce(qt_ato_w,0) > 0) and (coalesce(nr_ato_ipasgo_w, 0) = 0) then
			qt_ato_ww := qt_ato_w;
		end if;
		end;
	end if;

	if (cd_procedimento_w = 999999) and (nr_ato_ipasgo_w = 0)then
		if (qt_ato_w <> qt_ato_ww) then
			qt_ato_w := qt_ato_ww;
		end if;
	end if;

	if (cd_procedimento_w <> 999999) and (cd_tipo_fatura_w = 4) and (nr_ato_ipasgo_w = 0)then
		if (qt_ato_w <> qt_ato_ww) then
			qt_ato_w := qt_ato_ww;
		end if;
	end if;

	if (nr_ato_ipasgo_w > 0) then
		qt_ato_w := nr_ato_ipasgo_w;

		if (qt_ato_w > qt_ato_ww) then --Apenas zera a sequ?ncia, se o ato do item anterior for menor que o ato do item atual.
			qt_ato_ww := qt_ato_w;
			nr_seq_proc_w := 0;
		end if;
	end if;

	if (qt_ato_aux_w IS NOT NULL AND qt_ato_aux_w::text <> '') and (qt_ato_aux_w < qt_ato_w) and (qt_ato_w > 1)  and (coalesce(nr_ato_ipasgo_w, 0) = 0) then
		nr_seq_proc_w := 0;
	end if;

	qt_ato_aux_w := qt_ato_w;

        insert into w_ipasgo_dados_desp_trat(
		nr_sequencia,
		nm_usuario,
		dt_atualizacao,
		nm_usuario_nrec,
		dt_atualizacao_nrec,
		nr_linha,
		tp_registro,
		nr_linha_atend,
		nr_linha_ato,
		nr_linha_despesa,
		nr_matricula_prestador,
		cd_servico,
		qt_servico,
		vl_servico,
		dt_servico,
		dt_mesano_referencia,
		nr_interno_conta,
		ds_linha,
		nr_seq_tipo_fatura)
	values (	nextval('w_ipasgo_dados_desp_trat_seq'),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		qt_linha_arq_p,
		8,
		qt_linha_atend_p,
		qt_ato_w,
		nr_seq_proc_w,
		nr_matricula_prestador_w,
		cd_procedimento_w,
		qt_procedimento_w,
		vl_procedimento_w,
		clock_timestamp(),
		dt_mesano_referencia_p,
		nr_interno_conta_p,
		qt_linha_arq_p || '|' ||
		'8' || '|' ||
		qt_linha_atend_p || '|' ||
		qt_ato_w || '|' ||
		nr_seq_proc_w || '|' ||
		nr_matricula_prestador_w || '|' ||
		cd_procedimento_w || '|' ||
		replace(replace(Campo_Mascara_virgula_casas(qt_procedimento_w,4),'.',''),',','.') || '|' ||
		replace(replace(Campo_Mascara_virgula_casas(vl_procedimento_w,4),'.',''),',','.') || '|' ||
		to_char(dt_procedimento_w,'YYYY-MM-DD') || '|' ||
		'|||',
		nr_seq_tipo_fatura_p);

	dt_procedimento_ww      := dt_procedimento_w;
	qt_ato_w                := qt_ato_aux_w;
	qt_ato_ww               := qt_ato_w;
        end;
end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_ipasgo_dados_desp_trat_w ( nr_interno_conta_p bigint, dt_mesano_referencia_p timestamp, nm_usuario_p text, nr_seq_tipo_fatura_p bigint, qt_linha_arq_p INOUT bigint, qt_linha_atend_p INOUT bigint) FROM PUBLIC;

