-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consiste_agenda ( cd_agenda_p bigint, nr_sequencia_p bigint, ds_erro_p INOUT text) AS $body$
DECLARE

 
 
cd_tipo_agenda_w			bigint;
ds_erro_w				varchar(255);
cd_medico_exec_w			varchar(10);
dt_atual_inicial_w		timestamp;
dt_atual_final_w			timestamp;
cd_agenda_dupl_w			bigint;
dt_agenda_dupl_w			timestamp;
qt_agenda_w				bigint;


BEGIN 
 
ds_erro_w	:= '';
/* tipos de agenda =	1-Cirurgia	2-Exames 3-Consulta */
 
select coalesce(max(cd_tipo_agenda),0) 
into STRICT	 cd_tipo_agenda_w 
from	 agenda 
where	 cd_agenda	= cd_agenda_p;
 
select	count(*) 
into STRICT	qt_agenda_w 
from	agenda_paciente 
where	nr_sequencia		= nr_sequencia_p;
 
/* Consiste agendamento de exames */
 
if (cd_tipo_agenda_w	= 2) and (qt_agenda_w <> 0) then 
	begin 
	ds_erro_w	:= '';
 
	/* busca dados da agenda atual */
 
	select coalesce(a.cd_medico_exec,'X'), 
		 to_date(to_char(a.dt_agenda,'dd/mm/yyyy') || ' ' || 
			 to_char(a.hr_inicio,'hh24:mi'),'dd/mm/yyyy hh24:mi'), 
		 to_date(to_char(a.dt_agenda,'dd/mm/yyyy') || ' ' || 
			 to_char(a.hr_inicio,'hh24:mi'),'dd/mm/yyyy hh24:mi') + (a.nr_minuto_duracao /1440) 
	into STRICT	 cd_medico_exec_w, 
		 dt_atual_inicial_w, 
		 dt_atual_final_w 
	from	 agenda_paciente a 
	where	 a.nr_sequencia = nr_sequencia_p;
 
	cd_agenda_dupl_w	:= 0;
	if (cd_medico_exec_w	<> 'X') then 
		begin 
		select coalesce(max(a.cd_agenda),0), 
		 	 coalesce(max(a.dt_agenda),clock_timestamp()) 
		into STRICT	 cd_agenda_dupl_w, 
		 	 dt_agenda_dupl_w 
		from	 agenda_paciente a 
		where	 a.nr_sequencia		<> nr_sequencia_p 
		and	 coalesce(a.cd_medico_exec,a.cd_medico)	 
							= cd_medico_exec_w 
		and	 ((to_date(to_char(a.dt_agenda,'dd/mm/yyyy') || ' ' || 
			 to_char(a.hr_inicio,'hh24:mi'),'dd/mm/yyyy hh24:mi') 
			 between dt_atual_inicial_w and dt_atual_final_w) 	 
		  or 
		 	 ((to_date(to_char(a.dt_agenda,'dd/mm/yyyy') || ' ' || 
			 to_char(a.hr_inicio,'hh24:mi'),'dd/mm/yyyy hh24:mi') + ((a.nr_minuto_duracao -1) /1440)) 
			 between dt_atual_inicial_w and dt_atual_final_w));
		end;
	end if;
 
	/* 
	if	(cd_agenda_dupl_w	= 0) 		and 
		(cd_medico_exec_w	<> 'X')	then 
		begin 
		select nvl(max(a.cd_agenda),0), 
		 	 nvl(max(a.dt_agenda),sysdate) 
		into	 cd_agenda_dupl_w, 
		 	 dt_agenda_dupl_w 
		from	 agenda b, 
			 agenda_consulta a 
		where	 a.cd_agenda		= b.cd_agenda 
		and	 b.cd_pessoa_fisica	= cd_medico_exec_w 
		and	 ((to_date(to_char(a.dt_agenda,'dd/mm/yyyy hh24:mi'),'dd/mm/yyyy hh24:mi') 
			 between dt_atual_inicial_w and dt_atual_final_w) 	 
		  or 
			 (to_date(to_char(a.dt_agenda,'dd/mm/yyyy hh24:mi'),'dd/mm/yyyy hh24:mi') 
			 + ((a.nr_minuto_duracao -1) /1440) 
			 between dt_atual_inicial_w and dt_atual_final_w)); 
		end; 
	end if; 
 
	if	(cd_agenda_dupl_w	> 0) then 
		begin 
		select 'Medico alocado na agenda '||ds_agenda 
		into	 ds_erro_w 
		from	 agenda 
		where	 cd_agenda = cd_agenda_dupl_w; 
		end; 
	end if; 
	*/
 
	 
	end;
end if;
 
/* Consiste agendamento de consultas */
 
if (cd_tipo_agenda_w	in (3,4)) then 
	begin 
	ds_erro_w	:= '';
	end;
end if;
 
/* Consiste agendamento de cirurgias */
 
if (cd_tipo_agenda_w	= 1) then 
	begin 
	ds_erro_w	:= '';
	end;
end if;
 
ds_erro_p	:= ds_erro_w;
 
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consiste_agenda ( cd_agenda_p bigint, nr_sequencia_p bigint, ds_erro_p INOUT text) FROM PUBLIC;

