-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE material AS (nr_sequencia		bigint,
			nr_seq_conta		bigint,
			dt_material		timestamp,
			nr_seq_material		bigint,
			ie_tipo_despesa		varchar(1),
			ie_origem_preco		smallint,
			qt_material_imp		double precision,
			dt_inicio_atend		timestamp,
			dt_fim_atend		timestamp,
			nr_seq_fornecedor	bigint,
			ie_status		varchar(1),
			vl_apresentado		double precision,
			nr_seq_estrut_mat	bigint,
			nr_seq_tipo_uso		bigint,
			vl_calculado_ant	double precision,
			nr_seq_pacote		bigint,
			tx_intercambio		pls_conta_mat.tx_intercambio%type,
			nr_seq_regra_tx_inter	pls_conta_mat.nr_seq_regra_tx_inter%type);


CREATE OR REPLACE PROCEDURE pls_atualiza_valor_mat_cop ( nr_seq_material_p bigint, ie_gravar_log_p text, nm_usuario_p text, ie_conta_inteira_p text, nr_seq_conta_p bigint, ie_recalcular_conta_p text default 'N') AS $body$
DECLARE


_ora2pg_r RECORD;
nr_seq_conta_w			bigint;
nr_seq_material_w			bigint;
nr_seq_prestador_exec_w		bigint;
dt_preco_w			timestamp;
dt_material_w			timestamp;
dt_conta_w			timestamp;
ie_tipo_despesa_w			varchar(1);
ie_origem_preco_w			smallint;
vl_material_w			double precision;
vl_material_simpro_w		double precision;
dt_ult_vigencia_w			timestamp;
nr_seq_material_preco_w		bigint;
vl_material_brasindice_w		double precision;
vl_material_tabela_w		double precision;
nr_seq_regra_w			bigint;
vl_calculado_w			double precision;
qt_material_imp_w			double precision;
nr_seq_contrato_w			bigint;
nr_seq_segurado_w		bigint;
ie_preco_plano_w		varchar(2);
nr_seq_plano_w			bigint;
vl_beneficiario_w		double precision;
nr_seq_regra_pos_estab_w	bigint;
ds_retorno_ww			varchar(255);
cd_estabelecimento_w		integer;
ie_cobranca_prevista_w		varchar(1);
ie_cobranca_previa_servico_w	varchar(1);
cd_guia_w			varchar(20);
cd_guia_referencia_w		varchar(20);
nr_seq_protocolo_w		bigint;
ie_tipo_protocolo_w		varchar(3);
ie_tipo_tabela_w		varchar(2)	:= '';
ie_calcula_preco_benef_w	varchar(1);
tx_ajuste_benef_lib_w		double precision;
ie_origem_conta_w		varchar(1);
dt_inicio_atend_w		timestamp;
dt_fim_atend_w			timestamp;
vl_mat_copartic_w		double precision	:= 0;
nr_seq_regra_copartic_w		bigint;
ie_calculo_coparticipacao_w	varchar(3);
nr_seq_outorgante_w		bigint;
nr_seq_regra_cooperado_w	bigint;
ie_ato_cooperado_w		bigint;
nr_seq_prestador_atend_w	bigint;
nr_seq_prestador_solic_w	bigint;
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
nr_seq_intercambio_w		bigint;
ie_medico_solic_coope_w		varchar(10);
ie_medico_exec_coope_w		varchar(10);
cd_medico_solicitante_w		varchar(20);
cd_medico_conta_w		varchar(20);
vl_material_ptu_w		double precision;
ie_tipo_segurado_w		varchar(10);
nr_seq_regra_int_w		bigint;
nr_seq_fornecedor_w		bigint;
vl_apresentado_w		double precision;
nr_seq_tipo_acomodacao_w	bigint;
nr_seq_categoria_w		bigint;
nr_seq_tipo_atendimento_w	bigint;
nr_seq_clinica_w		bigint;
ie_tipo_guia_w			varchar(2);
qt_autorizacao_espec_w		bigint;
nr_seq_plano_espec_w		bigint;
ie_autorizacao_espec_w		varchar(10)	:= 'N';
ie_gravar_log_w			varchar(1);
ie_vl_apresentado_sistema_w	varchar(1)	:= 'N';
nr_seq_guia_w			bigint;
cd_solic_w			varchar(20);
ie_status_w			varchar(1);
ie_tipo_vinculo_w		varchar(5);
nr_seq_tipo_prestador_w		bigint;
nr_seq_estrut_mat_w		bigint;
nr_seq_tipo_uso_w		bigint;
nr_seq_congenere_w		bigint;
ie_internado_w			varchar(3);
nr_seq_classificacao_prest_w	bigint;
sg_estado_outorg_w		pessoa_juridica.sg_estado%type;
sg_estado_int_w			pessoa_juridica.sg_estado%type;
ie_tipo_contratacao_w		varchar(5);
tx_intercambio_w		double precision;
ie_tipo_conta_w			varchar(2);
nr_seq_fatura_w			bigint;
ie_taxa_w			varchar(1);
ie_pagamento_cobranca_w		varchar(2);
qt_dia_proced_receb_w		bigint;
nr_seq_conta_mat_w		bigint;
cd_unimed_ori_w			varchar(4);
ie_restringe_estab_w		varchar(2);
vl_calculado_ant_w		double precision;
dt_alta_w			timestamp;
tx_adm_w			double precision;
qt_regra_tx_w			bigint;
vl_taxa_material_w		pls_conta_mat.vl_taxa_material%type;
ds_observacao_log_w		varchar(4000);
vl_unitario_w			pls_conta_mat_v.vl_unitario%type;
nr_seq_congenere_conta_w	pls_conta.nr_seq_congenere%type;
nr_seq_pacote_w			pls_pacote.nr_sequencia%type;
ie_composicao_w			varchar(1);
ie_tipo_intercambio_w		pls_conta_v.ie_tipo_intercambio%type;
nr_seq_grupo_coop_seg_w		pls_segurado.nr_seq_grupo_coop%type;
ie_seguro_obito_w		pls_plano.ie_seguro_obito%type;
ie_pcmso_w			pls_segurado.ie_pcmso%type;
dt_recebimento_fatura_w		ptu_fatura.dt_recebimento_fatura%type;
dt_postagem_fatura_w		ptu_fatura.dt_postagem%type;

dados_conta_valor_w		pls_cta_valorizacao_pck.dados_conta;
dados_conta_mat_valor_w		pls_cta_valorizacao_pck.dados_conta_mat;
dados_beneficiario_valor_w	pls_cta_valorizacao_pck.dados_beneficiario;
dados_fatura_valor_w		pls_cta_valorizacao_pck.dados_fatura;
dados_tx_interc_valor_w		pls_cta_valorizacao_pck.dados_taxa_intercambio;
ie_status_conta_w		pls_conta.ie_status%type;
ie_nao_gera_tx_inter_w		pls_regra_preco_mat.ie_nao_gera_tx_inter%type;
nr_seq_regra_tx_inter_w		pls_conta_mat.nr_seq_regra_tx_inter%type;
nr_seq_log_exec_w		pls_cta_log_exec.nr_sequencia%type;
dados_conta_mat_w		pls_cta_valorizacao_pck.table_dados_conta_mat;
nr_update_index_w		integer;
tb_seq_conta_mat_insert_w	dbms_sql.number_table;
dados_regra_preco_material_w	pls_cta_valorizacao_pck.dados_regra_preco_material;
ie_tipo_log_w			pls_log_calculo_proc.ie_tipo_log%type := 'C';
ie_regime_atendimento_w	pls_regra_preco_mat.ie_regime_atendimento%type;
ie_saude_ocupacional_w	pls_regra_preco_mat.ie_saude_ocupacional%type;

C01 CURSOR FOR
	SELECT	nr_seq_conta,
		coalesce(dt_atendimento, clock_timestamp()) dt_atendimento,
		nr_seq_material,
		ie_tipo_despesa,
		ie_origem_preco,
		qt_material_imp,
		dt_inicio_atend,
		dt_fim_atend,
		nr_seq_prest_fornec,
		ie_status,
		vl_material_imp,
		nr_sequencia,
		vl_material,
		nr_seq_pacote,
		nr_seq_tipo_uso,
		tx_intercambio,
		nr_seq_regra_tx_inter
	from	pls_conta_mat_v  
	where	nr_seq_conta		= nr_seq_conta_p
	and	(nr_seq_conta_p IS NOT NULL AND nr_seq_conta_p::text <> '')
	and	ie_conta_inteira_p 	= 'S'
	and	ie_status 		in ('A', 'C', 'L', 'P', 'S', 'U')
	
union all

	SELECT	nr_seq_conta,
		coalesce(dt_atendimento, clock_timestamp()) dt_atendimento,
		nr_seq_material,
		ie_tipo_despesa,
		ie_origem_preco,
		qt_material_imp,
		dt_inicio_atend,
		dt_fim_atend,
		nr_seq_prest_fornec,
		ie_status,
		vl_material_imp,
		nr_sequencia,
		vl_material,
		nr_seq_pacote,
		nr_seq_tipo_uso,
		tx_intercambio,
		nr_seq_regra_tx_inter
	from	pls_conta_mat_v
	where	nr_sequencia 		= nr_seq_material_p
	and	(nr_seq_material_p IS NOT NULL AND nr_seq_material_p::text <> '')
	and	ie_status 		in ('A', 'C', 'L', 'P', 'S', 'U')
	order by
		nr_seq_material;

type vetor_materiais is table of material index by integer;

/* Vetores */

vetor_mat_w		vetor_materiais;
i	bigint	:= 1;
k	bigint	:= 1;

BEGIN

-- Inicializar os valores que nao devem ficar nulos.
tx_intercambio_w := 0;

nr_seq_conta_w	:= nr_seq_conta_p;

ie_gravar_log_w	:= coalesce(ie_gravar_log_p,'N');

/* Obter dados do material */

i	:= 1;
vetor_mat_w.delete;

for r_c01_w in C01() loop
	begin
	nr_seq_conta_w			:= r_c01_w.nr_seq_conta;
	vetor_mat_w[i].nr_sequencia	:= r_c01_w.nr_sequencia;
	vetor_mat_w[i].nr_seq_conta	:= r_c01_w.nr_seq_conta;
	vetor_mat_w[i].dt_material	:= r_c01_w.dt_atendimento;
	vetor_mat_w[i].nr_seq_material	:= r_c01_w.nr_seq_material;
	vetor_mat_w[i].ie_tipo_despesa	:= r_c01_w.ie_tipo_despesa;
	vetor_mat_w[i].ie_origem_preco	:= r_c01_w.ie_origem_preco;
	vetor_mat_w[i].qt_material_imp	:= r_c01_w.qt_material_imp;
	vetor_mat_w[i].dt_inicio_atend	:= r_c01_w.dt_inicio_atend;
	vetor_mat_w[i].nr_seq_fornecedor := r_c01_w.nr_seq_prest_fornec;
	vetor_mat_w[i].ie_status 	:= r_c01_w.ie_status;
	vetor_mat_w[i].vl_apresentado	:= r_c01_w.vl_material_imp;
	vetor_mat_w[i].vl_calculado_ant	:= r_c01_w.vl_material;
	vetor_mat_w[i].nr_seq_pacote	:= r_c01_w.nr_seq_pacote;
	vetor_mat_w[i].nr_seq_tipo_uso	:= r_c01_w.nr_seq_tipo_uso;
	vetor_mat_w[i].tx_intercambio		:= r_c01_w.tx_intercambio;
	vetor_mat_w[i].nr_seq_regra_tx_inter	:= r_c01_w.nr_seq_regra_tx_inter;
	i	:= i + 1;
	end;
end loop;

/* Obter dados da conta */

select	nr_seq_prestador_exec,
	dt_atendimento,
	nr_seq_segurado,
	cd_estabelecimento,
	coalesce(cd_guia,0),
	nr_seq_protocolo,
	ie_origem_conta,
	cd_medico_solicitante,
	cd_medico_executor,
	coalesce(nr_seq_tipo_acomodacao,0),
	coalesce(nr_seq_tipo_atendimento,0),
	nr_seq_clinica,
	ie_tipo_guia,
	cd_guia_referencia,
	ie_tipo_conta,
	nr_seq_fatura,
	dt_alta,
	nr_seq_guia,
	nr_seq_congenere,
	ie_tipo_intercambio,
	dt_recebimento_fatura,
	dt_postagem_fatura,
	ie_status,
	ie_tipo_protocolo,
	nr_seq_prestador_prot,
	ie_tipo_vinculo_prest_exec,
	nr_seq_tipo_prest_exec,
	nr_seq_clas_prest_exec,
	coalesce(ie_tipo_segurado,'B'),
	ie_regime_atendimento,
	ie_saude_ocupacional
into STRICT	nr_seq_prestador_exec_w,
	dt_conta_w,
	nr_seq_segurado_w,
	cd_estabelecimento_w,
	cd_guia_w,
	nr_seq_protocolo_w,
	ie_origem_conta_w,
	cd_medico_solicitante_w,
	cd_medico_conta_w,
	nr_seq_tipo_acomodacao_w,
	nr_seq_tipo_atendimento_w,
	nr_seq_clinica_w,
	ie_tipo_guia_w,
	cd_guia_referencia_w,
	ie_tipo_conta_w,
	nr_seq_fatura_w,
	dt_alta_w,
	nr_seq_plano_espec_w,
	nr_seq_congenere_conta_w,
	ie_tipo_intercambio_w,
	dt_recebimento_fatura_w,
	dt_postagem_fatura_w,
	ie_status_conta_w,
	ie_tipo_protocolo_w,
	nr_seq_prestador_atend_w,
	ie_tipo_vinculo_w,
	nr_seq_tipo_prestador_w,
	nr_seq_classificacao_prest_w,
	ie_tipo_segurado_w,
	ie_regime_atendimento_w,
	ie_saude_ocupacional_w
from	pls_conta_v
where	nr_sequencia	= nr_seq_conta_w;

dados_conta_valor_w.nr_sequencia 		:= nr_seq_conta_w;
dados_conta_valor_w.nr_seq_congenere		:= nr_seq_congenere_conta_w;
dados_conta_valor_w.ie_origem_conta		:= ie_origem_conta_w;
dados_conta_valor_w.ie_tipo_conta		:= ie_tipo_conta_w;
dados_conta_valor_w.nr_seq_segurado		:= nr_seq_segurado_w;
dados_conta_valor_w.ie_tipo_intercambio		:= ie_tipo_intercambio_w;
dados_conta_valor_w.ie_tipo_guia		:= ie_tipo_guia_w;
dados_conta_valor_w.dt_alta			:= dt_alta_w;
dados_conta_valor_w.dt_atendimento		:= dt_conta_w;

dados_fatura_valor_w.nr_sequencia		:= nr_seq_fatura_w;
dados_fatura_valor_w.dt_recebimento		:= dt_recebimento_fatura_w;
dados_fatura_valor_w.dt_postagem		:= dt_postagem_fatura_w;

ie_internado_w	:= pls_obter_se_internado(nr_seq_conta_w,'C');

if (ie_internado_w	= 'N') then
	ie_internado_w	:= 'S';
end if;

if (coalesce(nr_seq_plano_espec_w::text, '') = '') then
	/*Obter sequencia da autorizacao  especial*/

	select	max(nr_sequencia)
	into STRICT	nr_seq_plano_espec_w
	from	pls_guia_plano
	where	cd_guia		= cd_guia_referencia_w
	and	nr_seq_segurado = nr_seq_segurado_w;
end if;

/*Obter se existe material especial*/

select	count(1)
into STRICT	qt_autorizacao_espec_w
from	pls_solic_lib_mat_med	a,
	pls_guia_plano		b
where	a.nr_seq_guia	= b.nr_sequencia
and	b.nr_sequencia	= nr_seq_plano_espec_w;

if (qt_autorizacao_espec_w	> 0) then
	ie_autorizacao_espec_w	:= 'S';
end if;

/* Obter a categoria do tipo de acomodacao */
if (nr_seq_tipo_acomodacao_w IS NOT NULL AND nr_seq_tipo_acomodacao_w::text <> '') then
	select	max(nr_seq_categoria)
	into STRICT	nr_seq_categoria_w
	from	pls_regra_categoria
	where	nr_seq_tipo_acomodacao	= nr_seq_tipo_acomodacao_w;
end if;

/* Obter parametros da conta medica */

ie_restringe_estab_w	:= pls_obter_se_controle_estab('CO');

select	coalesce(max(ie_calculo_coparticipacao),'P')
into STRICT	ie_calculo_coparticipacao_w
from	pls_parametros
where	((ie_restringe_estab_w	= 'S' AND cd_estabelecimento	= cd_estabelecimento_w)
or (ie_restringe_estab_w	= 'N'));

/* Obter dados do segurado */

begin
	select	coalesce(pls_obter_produto_benef(nr_sequencia,dt_conta_w),0),
		coalesce(nr_seq_contrato,0),
		nr_seq_intercambio,
		nr_seq_congenere,
		nr_seq_grupo_coop,
		ie_pcmso
	into STRICT	nr_seq_plano_w,
		nr_seq_contrato_w,
		nr_seq_intercambio_w,
		nr_seq_congenere_w,
		nr_seq_grupo_coop_seg_w,
		ie_pcmso_w
	from	pls_segurado
	where	nr_sequencia	= nr_seq_segurado_w;
exception
	when others then
	nr_seq_plano_w	:= null;
	ie_tipo_segurado_w	:= null;
	CALL pls_gravar_conta_glosa('1013',nr_seq_conta_w,null,null,
				'N','Beneficirio nao informado',nm_usuario_p,
				'A','CC',nr_seq_prestador_exec_w, cd_estabelecimento_w,'',null);
end;

/* Obter dados do plano */

begin
	select	ie_preco,
		nr_seq_outorgante,
		ie_tipo_contratacao,
		ie_seguro_obito
	into STRICT	ie_preco_plano_w,
		nr_seq_outorgante_w,
		ie_tipo_contratacao_w,
		ie_seguro_obito_w
	from	pls_plano
	where	nr_sequencia	= nr_seq_plano_w;
exception
	when others then
	ie_preco_plano_w	:= '0';
	nr_seq_outorgante_w	:= 0;
end;

dados_beneficiario_valor_w.nr_sequencia		:= nr_seq_segurado_w;
dados_beneficiario_valor_w.nr_seq_intercambio	:= nr_seq_intercambio_w;
dados_beneficiario_valor_w.nr_seq_plano		:= nr_seq_plano_w;
dados_beneficiario_valor_w.nr_seq_grupo_coop	:= nr_seq_grupo_coop_seg_w;
dados_beneficiario_valor_w.ie_tipo_beneficiario	:= ie_tipo_segurado_w;
dados_beneficiario_valor_w.ie_beneficio_obito	:= ie_seguro_obito_w;
dados_beneficiario_valor_w.ie_pcmso		:= ie_pcmso_w;

/* Obter dados da guia */

if (nr_seq_plano_espec_w IS NOT NULL AND nr_seq_plano_espec_w::text <> '') then		
	begin
		select	coalesce(ie_cobranca_prevista,'N'),
			nr_sequencia,
			cd_medico_solicitante
		into STRICT	ie_cobranca_prevista_w,
			nr_seq_guia_w,
			cd_solic_w
		from	pls_guia_plano
		where	nr_sequencia	= nr_seq_plano_espec_w;
	exception
		when others then
		ie_cobranca_prevista_w	:= 'N';
		cd_solic_w		:= null;
	end;
end if;

/* Obter a UF da operadora  - Tasy*/

select	coalesce(max(sg_estado),'X')
into STRICT	sg_estado_outorg_w
from	pessoa_juridica
where	cd_cgc	= (	SELECT	max(cd_cgc_outorgante)
			from	pls_outorgante
			where	cd_estabelecimento	= cd_estabelecimento_w);

-- OS 450179 - Caso nao tenha a informacao de congenere
if (coalesce(nr_seq_congenere_w::text, '') = '') and (nr_seq_segurado_w IS NOT NULL AND nr_seq_segurado_w::text <> '') then
	select	max(cd_unimed_origem)
	into STRICT	cd_unimed_ori_w
	from	ptu_fatura
	where	nr_sequencia = 	(SELECT	max(nr_seq_fatura)
				from	pls_conta
				where	nr_sequencia = nr_seq_conta_w);
	
	select	max(nr_sequencia)
	into STRICT	nr_seq_congenere_w
	from	pls_congenere
	where	cd_cooperativa = cd_unimed_ori_w;
end if;

/* Obter a UF da operadora do beneficiario eventual ou que enviou o protocolo*/

select	coalesce(max(a.sg_estado),'X')
into STRICT	sg_estado_int_w
from	pessoa_juridica	a,
	pls_congenere	b
where	a.cd_cgc	= b.cd_cgc
and	b.nr_sequencia	= nr_seq_congenere_w;

--Passada a data da conta devido a data do material nao existir neste momento
dt_preco_w	:= dt_conta_w;	

if (ie_tipo_protocolo_w	= 'R') then
	ie_tipo_tabela_w	:= 'R';
elsif (ie_tipo_protocolo_w	= 'I') then
	ie_tipo_tabela_w	:= 'IP';
else
	ie_tipo_tabela_w	:= 'P';
end if;

if (ie_tipo_protocolo_w = 'C') then
	begin
		select	b.nr_seq_prestador
		into STRICT	nr_seq_prestador_solic_w
		from	pls_prestador_medico	b,
			pls_prestador		d
		where	b.nr_seq_prestador	= d.nr_sequencia
		and	d.cd_estabelecimento	= cd_estabelecimento_w
		and	b.cd_medico		= cd_medico_solicitante_w
		and	b.ie_situacao		= 'A'
		and	trunc(dt_preco_w,'dd') between trunc(coalesce(b.dt_inclusao, dt_preco_w),'dd') and trunc(coalesce(b.dt_exclusao,dt_preco_w),'dd');
	exception
	when others then
		nr_seq_prestador_solic_w	:= null;
	end;
	
	if (coalesce(nr_seq_prestador_solic_w,0) = 0) then	
		begin
			select	nr_seq_prestador
			into STRICT	nr_seq_prestador_solic_w
			from	pls_prestador_medico
			where	ie_situacao		= 'A'
			and	cd_medico		= cd_solic_w
			and	trunc(dt_preco_w,'dd') between trunc(coalesce(dt_inclusao, dt_preco_w),'dd') and trunc(coalesce(dt_exclusao,dt_preco_w),'dd');
		exception
		when others then
			nr_seq_prestador_solic_w	:= null;
		end;
	end if;
	
	/*aaschlote 10/07/2012 - Verificar se o cooperado esta ativo pela data do procedimento e nao a regra do prestador*/

	ie_medico_exec_coope_w	:= pls_obter_se_cooperado_ativo(cd_medico_conta_w,dt_material_w,null);
	
	if (ie_medico_exec_coope_w = 'S') then
		ie_medico_exec_coope_w := 'C'; -- Caso ele nao for cooperador a function ja retorna N
	end if;
	
	/*aaschlote 10/07/2012 - Verificar se o cooperado esta ativo pela data do procedimento e nao a regra do prestador*/

	ie_medico_solic_coope_w	:= pls_obter_se_cooperado_ativo(cd_medico_solicitante_w,dt_material_w,null);
	
	if (ie_medico_solic_coope_w = 'S') then
		ie_medico_solic_coope_w := 'C'; -- Caso ele nao for cooperador a function ja retorna N
	end if;
end if;

dados_conta_mat_w := pls_cta_valorizacao_pck.limpa_tabela_dados_conta_mat(dados_conta_mat_w);
nr_update_index_w 	:= 0;
tb_seq_conta_mat_insert_w.delete;

i := vetor_mat_w.count;
k := 1;
for k in 1.. i loop
	begin
	nr_seq_conta_mat_w			:= vetor_mat_w[k].nr_sequencia;
	nr_seq_conta_w				:= vetor_mat_w[k].nr_seq_conta;
	dt_material_w				:= vetor_mat_w[k].dt_material;
	nr_seq_material_w			:= vetor_mat_w[k].nr_seq_material;
	ie_tipo_despesa_w			:= vetor_mat_w[k].ie_tipo_despesa;
	ie_origem_preco_w			:= vetor_mat_w[k].ie_origem_preco;
	qt_material_imp_w			:= vetor_mat_w[k].qt_material_imp;
	dt_inicio_atend_w			:= vetor_mat_w[k].dt_inicio_atend;
	nr_seq_fornecedor_w			:= vetor_mat_w[k].nr_seq_fornecedor;
	ie_status_w				:= vetor_mat_w[k].ie_status;
	vl_apresentado_w			:= vetor_mat_w[k].vl_apresentado;
	vl_calculado_ant_w			:= vetor_mat_w[k].vl_calculado_ant;
	dados_tx_interc_valor_w.pr_taxa		:= vetor_mat_w[k].tx_intercambio;
	dados_tx_interc_valor_w.nr_sequencia	:= vetor_mat_w[k].nr_seq_regra_tx_inter;
				
	dados_conta_mat_valor_w.nr_sequencia	:= nr_seq_conta_mat_w;
	dados_conta_mat_valor_w.nr_seq_conta	:= nr_seq_conta_w;
	dados_conta_mat_valor_w.nr_seq_material	:= nr_seq_material_w;
	dados_conta_mat_valor_w.dt_atendimento	:= dt_material_w;
	--Tratamento realizado devido ao camo dt atendimento ser alimentado via trigger dt_material_w
	dt_preco_w	:= dt_material_w;
	
	ie_composicao_w	:= 'S';
	/*Obter se o item esta dentro da composicao do pacote.*/

	if (nr_seq_pacote_w IS NOT NULL AND nr_seq_pacote_w::text <> '')	then
		ie_composicao_w	:= pls_obter_se_item_composicao(nr_seq_pacote_w	,nr_seq_material_w,null,null);
	end if;
	if (ie_composicao_w = 'S')	then
		/* Obter dados do procedimento da autorizacao */

		
		select	max(ie_cobranca_previa_servico)
		into STRICT	ie_cobranca_previa_servico_w
		from	pls_guia_plano_mat
		where	nr_seq_guia	= nr_seq_guia_w
		and	nr_seq_material	= nr_seq_material_w;
		
		if (coalesce(ie_cobranca_previa_servico_w::text, '') = '') then
			ie_cobranca_previa_servico_w	:= 'N';
		end if;
		if (ie_gravar_log_w = 'S') then
		
			if (pls_util_pck.ie_processo_pos_w = 'S') then
				ie_tipo_log_w := 'P';
			end if;
			
			delete	from pls_log_calculo_mat
			where	nr_seq_material = nr_seq_conta_mat_w;
		end if;

		SELECT * FROM pls_define_preco_material(cd_estabelecimento_w, nr_seq_prestador_exec_w, dt_preco_w, nr_seq_material_w, 4, ie_tipo_despesa_w, ie_origem_preco_w, ie_tipo_tabela_w, nr_seq_outorgante_w, nr_seq_segurado_w, nr_seq_intercambio_w, nr_seq_fornecedor_w, nr_seq_categoria_w, nr_seq_tipo_acomodacao_w, nr_seq_tipo_atendimento_w, nr_seq_clinica_w, ie_tipo_guia_w, ie_autorizacao_espec_w, nr_seq_plano_espec_w, ie_gravar_log_w, nm_usuario_p, nr_seq_conta_mat_w, '', ie_tipo_segurado_w, ie_tipo_vinculo_w, nr_seq_tipo_prestador_w, ie_preco_plano_w, nr_seq_estrut_mat_w, nr_seq_tipo_uso_w, nr_seq_conta_w, nr_seq_plano_w, nr_seq_contrato_w, nr_seq_congenere_w, ie_internado_w, nr_seq_classificacao_prest_w, sg_estado_outorg_w, sg_estado_int_w, ie_tipo_contratacao_w, vl_material_w, dt_ult_vigencia_w, nr_seq_material_preco_w, vl_material_simpro_w, vl_material_brasindice_w, vl_material_tabela_w, dados_regra_preco_material_w, null, ie_regime_atendimento_w, ie_saude_ocupacional_w) INTO STRICT _ora2pg_r;
 vl_material_w := _ora2pg_r.vl_material_p; dt_ult_vigencia_w := _ora2pg_r.dt_ult_vigencia_p; nr_seq_material_preco_w := _ora2pg_r.nr_seq_material_preco_p; vl_material_simpro_w := _ora2pg_r.vl_material_simpro_p; vl_material_brasindice_w := _ora2pg_r.vl_material_brasindice_p; vl_material_tabela_w := _ora2pg_r.vl_material_tabela_p; dados_regra_preco_material_w := _ora2pg_r.dados_regra_preco_material_p;
					
					nr_seq_regra_w	:= dados_regra_preco_material_w.nr_sequencia;
		
		/* Obter o preco UNITARIO da coparticipacao */


		/*aaschlote 18/05/2012 - 444167 - Ajustei para entrar tambem quando for a regra de cooparticipacao "Depende regra"*/


		--Ajustado para caso nao for beneficiario de pre-estabelecido nao existe a necessidade de calcular o valor de co participacao
		if (ie_calculo_coparticipacao_w in ('O','R')) and (ie_preco_plano_w = '1') then
			SELECT * FROM pls_define_preco_material(cd_estabelecimento_w, null, dt_preco_w, nr_seq_material_w, 4, ie_tipo_despesa_w, ie_origem_preco_w, 'CO', nr_seq_outorgante_w, nr_seq_segurado_w, nr_seq_intercambio_w, nr_seq_fornecedor_w, nr_seq_categoria_w, nr_seq_tipo_acomodacao_w, nr_seq_tipo_atendimento_w, nr_seq_clinica_w, ie_tipo_guia_w, ie_autorizacao_espec_w, nr_seq_plano_espec_w, ie_gravar_log_w, nm_usuario_p, nr_seq_conta_mat_w, '', ie_tipo_segurado_w, ie_tipo_vinculo_w, nr_seq_tipo_prestador_w, ie_preco_plano_w, nr_seq_estrut_mat_w, nr_seq_tipo_uso_w, nr_seq_conta_w, nr_seq_plano_w, nr_seq_contrato_w, nr_seq_congenere_w, ie_internado_w, nr_seq_classificacao_prest_w, sg_estado_outorg_w, sg_estado_int_w, ie_tipo_contratacao_w, vl_mat_copartic_w, ds_retorno_ww, ds_retorno_ww, ds_retorno_ww, ds_retorno_ww, ds_retorno_ww, dados_regra_preco_material_w, null, ie_regime_atendimento_w, ie_saude_ocupacional_w) INTO STRICT _ora2pg_r;
 vl_mat_copartic_w := _ora2pg_r.vl_material_p; ds_retorno_ww := _ora2pg_r.dt_ult_vigencia_p; ds_retorno_ww := _ora2pg_r.nr_seq_material_preco_p; ds_retorno_ww := _ora2pg_r.vl_material_simpro_p; ds_retorno_ww := _ora2pg_r.vl_material_brasindice_p; ds_retorno_ww := _ora2pg_r.vl_material_tabela_p; dados_regra_preco_material_w := _ora2pg_r.dados_regra_preco_material_p;
					
					nr_seq_regra_copartic_w	:= dados_regra_preco_material_w.nr_sequencia;
		end if;
				
		vl_calculado_w		:= (coalesce(vl_material_w,0) * qt_material_imp_w);
		vl_material_ptu_w	:= (coalesce(vl_material_ptu_w,0) * qt_material_imp_w);
		
		vl_unitario_w	:= round((dividir(vl_calculado_w,qt_material_imp_w))::numeric,2);
		
		vl_calculado_w	:= vl_unitario_w * qt_material_imp_w;
		
		vl_unitario_w	:= round((dividir(vl_material_ptu_w,qt_material_imp_w))::numeric,2);
		vl_material_ptu_w:= vl_unitario_w * qt_material_imp_w;
		
		if (nr_seq_regra_w = 0) then
			nr_seq_regra_w	:= null;
		end if;

		tb_seq_conta_mat_insert_w(nr_update_index_w) 			:=  nr_seq_conta_mat_w;
		dados_conta_mat_w.vl_mat_copartic(nr_update_index_w) 		:= vl_mat_copartic_w;
		dados_conta_mat_w.nr_seq_regra_copartic(nr_update_index_w)	:= nr_seq_regra_copartic_w;
				
		--Se as variaveis tabelas atingirem a quantidade de registros pre-definida para update
		if (nr_update_index_w>= pls_util_pck.qt_registro_transacao_w) then
			
			--Todos os registros presentes nas tabelas.
			CALL pls_cta_valorizacao_pck.atualiza_conta_mat_cop(	dados_conta_mat_w,tb_seq_conta_mat_insert_w,	nm_usuario_p,
									cd_estabelecimento_w);
			tb_seq_conta_mat_insert_w.delete;
			--Limpa das tabelas os dados para update
			nr_update_index_w := 0;
			--Limpa das tabelas os dados para insert
			dados_conta_mat_w := pls_cta_valorizacao_pck.limpa_tabela_dados_conta_mat(dados_conta_mat_w);			
		
		--Se o limite de registros nao for alcancada, entao incrementa contador
		else
			nr_update_index_w := nr_update_index_w + 1;
		end if;		
	
	end if;
	end;
end loop;

CALL pls_cta_valorizacao_pck.atualiza_conta_mat_cop(	dados_conta_mat_w,tb_seq_conta_mat_insert_w,	nm_usuario_p,
						cd_estabelecimento_w);
									
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_atualiza_valor_mat_cop ( nr_seq_material_p bigint, ie_gravar_log_p text, nm_usuario_p text, ie_conta_inteira_p text, nr_seq_conta_p bigint, ie_recalcular_conta_p text default 'N') FROM PUBLIC;

