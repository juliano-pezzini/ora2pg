-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_tempo_medico_proc ( nr_seq_proc_interno_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE


cd_medico_w		varchar(10);
qt_min_duracao_w	double precision;
nr_min_duracao_real_w	bigint;
nr_cirurgia_w		bigint;
qt_cirurgias_w		bigint := 0;
qt_min_total_w		bigint := 0;
qt_procedimentos_w	bigint;
qt_tempo_cir_w		double precision;
qt_proc_sem_tempo_w	bigint;
qt_dias_w		varchar(10);

C01 CURSOR FOR
	SELECT	distinct a.cd_medico_executor
	from	procedimento_paciente a,
		cirurgia b
	where	(a.nr_cirurgia IS NOT NULL AND a.nr_cirurgia::text <> '')
	and	a.dt_procedimento > clock_timestamp() - campo_numerico(qt_dias_w)
	and	a.nr_seq_proc_interno = nr_seq_proc_interno_p
	and	a.nr_cirurgia = b.nr_cirurgia
	and	(dt_termino IS NOT NULL AND dt_termino::text <> '')
	and	b.cd_estabelecimento = cd_estabelecimento_p
	and	(a.cd_medico_executor IS NOT NULL AND a.cd_medico_executor::text <> '');

C02 CURSOR FOR
	SELECT	coalesce((a.dt_procedimento - a.dt_inicio_procedimento) * 1440,0),
		coalesce(b.nr_min_duracao_real,0),
		b.nr_cirurgia
	from	procedimento_paciente a,
		cirurgia b
	where	a.nr_cirurgia = b.nr_cirurgia
	and	a.dt_procedimento > clock_timestamp() - campo_numerico(qt_dias_w)
	and	a.nr_seq_proc_interno = nr_seq_proc_interno_p
	and	a.cd_medico_executor = cd_medico_w
	and	(b.dt_termino IS NOT NULL AND b.dt_termino::text <> '')
	and	b.cd_estabelecimento = cd_estabelecimento_p
	and	(a.cd_medico_executor IS NOT NULL AND a.cd_medico_executor::text <> '');


BEGIN

qt_dias_w := obter_param_usuario(947, 36, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, qt_dias_w);

if (campo_numerico(qt_dias_w) > 0) then
	open C01;
	loop
	fetch C01 into
		cd_medico_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		qt_min_total_w	:= 0;

		open C02;
		loop
		fetch C02 into
			qt_min_duracao_w,
			nr_min_duracao_real_w,
			nr_cirurgia_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin

			select	count(*)
			into STRICT	qt_procedimentos_w
			from	proc_interno b,
				procedimento_paciente a
			where	a.nr_seq_proc_interno = b.nr_sequencia
			and	b.ie_tipo_util = 'C'
			and	a.nr_cirurgia = nr_cirurgia_w
			and	(a.cd_medico_executor IS NOT NULL AND a.cd_medico_executor::text <> '');

			if (qt_min_duracao_w > 0) then
				qt_min_total_w := qt_min_total_w + qt_min_duracao_w;
			elsif (qt_procedimentos_w = 1) and (nr_min_duracao_real_w > 0) then
				qt_min_total_w := qt_min_total_w + nr_min_duracao_real_w;
			elsif (qt_procedimentos_w > 1) and (qt_min_duracao_w = 0) then
				select	sum(coalesce((dt_procedimento - dt_inicio_procedimento) * 1440,0))
				into STRICT	qt_tempo_cir_w
				from	procedimento_paciente a,
					cirurgia b
				where	a.nr_cirurgia = b.nr_cirurgia
				and	b.nr_cirurgia = nr_cirurgia_w
				and	(a.cd_medico_executor IS NOT NULL AND a.cd_medico_executor::text <> '');

				select	count(*)
				into STRICT	qt_proc_sem_tempo_w
				from	procedimento_paciente a,
					cirurgia b
				where	a.nr_cirurgia = b.nr_cirurgia
				and	b.nr_cirurgia = nr_cirurgia_w
				and	coalesce((dt_procedimento - dt_inicio_procedimento) * 1440,0) <= 0
				and	(a.cd_medico_executor IS NOT NULL AND a.cd_medico_executor::text <> '');

				qt_min_total_w := qt_min_total_w + dividir(nr_min_duracao_real_w - qt_tempo_cir_w,qt_proc_sem_tempo_w);
			end if;

			end;
		end loop;
		close C02;

		select	count(distinct b.nr_cirurgia)
		into STRICT	qt_cirurgias_w
		from	procedimento_paciente a,
			cirurgia b
		where	a.nr_cirurgia = b.nr_cirurgia
		and	a.dt_procedimento > clock_timestamp() - interval '100 days'
		and	a.nr_seq_proc_interno = nr_seq_proc_interno_p
		and	a.cd_medico_executor = cd_medico_w
		and	(b.dt_termino IS NOT NULL AND b.dt_termino::text <> '')
		and	b.cd_estabelecimento = cd_estabelecimento_p
		and	(a.cd_medico_executor IS NOT NULL AND a.cd_medico_executor::text <> '');

		delete	from proc_interno_tempo
		where	nr_seq_proc_interno	=	nr_seq_proc_interno_p
		and	cd_medico		=	cd_medico_w;

		if (dividir(qt_min_total_w,qt_cirurgias_w) > 0) then
			insert into proc_interno_tempo(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				cd_medico,
				qt_min_cirugia,
				nr_seq_proc_interno,
				dt_atualizacao_nrec,
				nm_usuario_nrec)
			values (
				nextval('proc_interno_tempo_seq'),
				clock_timestamp(),
				nm_usuario_p,
				cd_medico_w,
				dividir(qt_min_total_w,qt_cirurgias_w),
				nr_seq_proc_interno_p,
				clock_timestamp(),
				nm_usuario_p);
		end if;

		end;
	end loop;
	close C01;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_tempo_medico_proc ( nr_seq_proc_interno_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

