-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE modificar_data_inicio_solucao ( ie_tipo_solucao_p bigint, nr_prescricao_p bigint, nr_seq_solucao_p bigint, nr_seq_horario_p bigint, dt_inicio_p timestamp, nr_seq_motivo_p bigint, ds_observacao_p text, nr_etapa_atual_p bigint, nm_usuario_p text, ie_reaprazar_seguintes_p text, nr_ciclo_p bigint, ie_reaprazar_item_ciclo_p text, ds_inconsist_lote_p INOUT text) AS $body$
DECLARE


ora2pg_rowcount int;
qt_reaprazamento_w		double precision;
dt_reaprazamento_w		timestamp;
dt_horario_orig_w		timestamp;
dt_fim_cpoe_w			timestamp;
dt_suspensao_cpoe_w		timestamp;
dt_reaprazamento_ant_w	timestamp;
dt_horario_etapa_proxima_w 	timestamp;
dt_horario_etapa_anterior_w timestamp;
nr_atendimento_w		prescr_medica.nr_atendimento%type;
cd_setor_atendimento_w	setor_atendimento.cd_setor_atendimento%type;
cd_local_estoque_w		local_estoque.cd_local_estoque%type;
cd_estabelecimento_w	estabelecimento.cd_estabelecimento%type;
nm_usuario_w			usuario.nm_usuario%type;
ie_alteracao_w			prescr_solucao_evento.ie_alteracao%type;
cd_usuario_w			pessoa_fisica.cd_pessoa_fisica%type;
ie_gera_lote_w			varchar(1);
nr_seq_processo_w		adep_processo.nr_sequencia%type;
ie_outros_horarios_w	varchar(1);
nr_seq_novo_processo_w	adep_processo.nr_sequencia%type;
nr_seq_horario_w		bigint;
nr_seq_cpoe_w			cpoe_material.nr_sequencia%type;
ie_pos_validade_w		varchar(1);
ie_consiste_lote_atendido_w	varchar(2);
nr_seq_lote_ww			ap_lote.nr_sequencia%type;
ie_status_lote_w		ap_lote.ie_status_lote%type;
qt_minutos_w			bigint;
ie_depois_validade_w	varchar(1);
ds_msg_w				varchar(255);
ie_registro_valido_w	varchar(1);
ds_status_lote_w		varchar(255);
nr_etapa_hm_w			prescr_proc_hor.nr_etapa%type;
ie_nao_aprazou_w		varchar(1);

	procedure gerar_evento_reaprazamento_sol( verificar_lote 	boolean,
										  nr_seq_aprazada_p bigint,
										  nr_prescr_sol_p	bigint 	:= nr_prescricao_p
										  ) is

		nr_seq_lote_w			bigint;
		nr_sequencia_w			prescr_solucao_evento.nr_sequencia%type;
	
BEGIN
		if (verificar_lote) then
			select	coalesce(max(nr_seq_lote),0)
			into STRICT	nr_seq_lote_w
			from	prescr_mat_hor
			where	nr_sequencia = coalesce(nr_seq_aprazada_p, nr_seq_horario_p);
		else
			nr_seq_lote_w	:= null;
		end if;

		-- obter sequencia
		select	nextval('prescr_solucao_evento_seq')
		into STRICT	nr_sequencia_w
		;

		insert into prescr_solucao_evento(
			nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_prescricao,
			nr_seq_solucao,
			nr_seq_material,
			nr_seq_procedimento,
			nr_seq_nut,
			nr_seq_nut_neo,
			ie_forma_infusao,
			ie_tipo_dosagem,
			qt_dosagem,
			qt_vol_infundido,
			qt_vol_desprezado,
			cd_pessoa_fisica,
			ie_alteracao,
			dt_alteracao,
			ie_evento_valido,
			nr_seq_motivo,
			ds_observacao,
			ie_tipo_solucao,
			dt_aprazamento,
			dt_aprazamento_orig,
			nr_seq_lote)
		values (
			nr_sequencia_w,
			clock_timestamp(),
			nm_usuario_w,
			clock_timestamp(),
			nm_usuario_w,
			nr_prescr_sol_p,
			CASE WHEN ie_tipo_solucao_p=1 THEN nr_seq_solucao_p  ELSE null END ,
			CASE WHEN ie_tipo_solucao_p=2 THEN nr_seq_solucao_p  ELSE null END ,
			CASE WHEN ie_tipo_solucao_p=3 THEN nr_seq_solucao_p  ELSE null END ,
			CASE WHEN ie_tipo_solucao_p=4 THEN nr_seq_solucao_p  ELSE null END ,
			CASE WHEN ie_tipo_solucao_p=5 THEN nr_seq_solucao_p WHEN ie_tipo_solucao_p=6 THEN nr_seq_solucao_p  ELSE null END ,
			null,
			null,
			null,
			null,
			null,
			cd_usuario_w,
			ie_alteracao_w,
			clock_timestamp(),
			'S',
			nr_seq_motivo_p,
			ds_observacao_p,
			ie_tipo_solucao_p,
			dt_reaprazamento_w,
			dt_horario_orig_w,
			nr_seq_lote_w);
	end;

	procedure reaprazar_hor_seguintes_sol(	nr_prescr_p		number,
											nr_seq_sol_p	number,
											nr_etapa_p		number,
											ie_cpoe_p		varchar2) is

		nr_sequencia_w 			number(10);
		nr_seq_material_w		prescr_mat_hor.nr_seq_material%type;

		c02 CURSOR FOR
		SELECT	a.nr_sequencia,
				a.dt_horario,
				a.nr_seq_material
		from	prescr_mat_hor a
		where	a.nr_prescricao		= nr_prescr_p
		and		a.nr_seq_solucao	= nr_seq_sol_p
		and		((nr_etapa_atual_p > 0 AND a.nr_etapa_sol > nr_etapa_p) or (a.dt_horario > dt_reaprazamento_w))
		and		a.ie_agrupador		= 4
		order by
				a.dt_horario;

	begin

		if (ie_reaprazar_seguintes_p = 'S') then

			dt_reaprazamento_ant_w	:= null;

			open c02;
			loop
			fetch c02 into
				nr_sequencia_w,
				dt_horario_orig_w,
				nr_seq_material_w;
			EXIT WHEN NOT FOUND; /* apply on c02 */
				begin

				dt_reaprazamento_w	:= dt_horario_orig_w + qt_reaprazamento_w/1440;

				update	prescr_mat_hor
				set		dt_horario 	= dt_reaprazamento_w,
						dt_atualizacao 	= clock_timestamp(),
						nm_usuario_reaprazamento = nm_usuario_w,
						qt_hor_reaprazamento = qt_reaprazamento_w
				where	nr_sequencia = nr_sequencia_w;

				if	((dt_reaprazamento_ant_w <> dt_reaprazamento_w) or (coalesce(dt_reaprazamento_ant_w::text, '') = '')) then
					gerar_evento_reaprazamento_sol(true, nr_sequencia_w, nr_prescr_p);
					CALL reaprazar_horario_dependentes(nr_atendimento_w, nr_prescricao_p, nr_seq_material_w, 0, dt_horario_orig_w, dt_reaprazamento_w, qt_reaprazamento_w, nm_usuario_w, nr_seq_solucao_p);
				end if;

				dt_reaprazamento_ant_w	:= dt_reaprazamento_w;

				end;
			end loop;
			close c02;

			if (ie_cpoe_p = 'S') then
				dt_reaprazamento_w := dt_inicio_p;
			end if;

			dt_reaprazamento_ant_w	:= null;

			open c02;
			loop
			fetch c02 into
				nr_sequencia_w,
				dt_reaprazamento_w,
				nr_seq_material_w;
			EXIT WHEN NOT FOUND; /* apply on c02 */
				begin
				dt_horario_orig_w	:= dt_reaprazamento_w - qt_reaprazamento_w/1440;
				qt_minutos_w 		:= (trunc(dt_reaprazamento_w,'mi') - trunc(dt_horario_orig_w,'mi')) * 1440;

				if	((coalesce(ie_gera_lote_w, 'N') = 'S') or
					((coalesce(ie_gera_lote_w, 'N') = 'A') and (qt_minutos_w < 0)) or
					((coalesce(ie_gera_lote_w, 'N') = 'T') and (qt_minutos_w > 0)) or
					((coalesce(ie_gera_lote_w, 'N') = 'U') and (dt_reaprazamento_w >= clock_timestamp()))) and (coalesce(dt_reaprazamento_ant_w,dt_reaprazamento_w + 1) <> dt_reaprazamento_w) then
					CALL Gerar_Lote_Reapr_Prescr(nr_prescr_p, nr_seq_sol_p, nr_sequencia_w, 'N', nm_usuario_w, 'RHIP');
				end if;

				select	max(nr_seq_lote)
				into STRICT	nr_seq_lote_ww
				from	prescr_mat_hor
				where	nr_sequencia = nr_sequencia_w;

				update	prescr_mat_alteracao
				set		nr_seq_lote = nr_seq_lote_ww
				where	nr_seq_horario = nr_sequencia_w
				and		ie_alteracao = 13
				and 	nm_usuario = nm_usuario_p
				and		nr_prescricao = nr_prescr_p
				and 	coalesce(nr_seq_lote::text, '') = '';

				dt_reaprazamento_ant_w	:= dt_reaprazamento_w;

			end;
			end loop;
			close c02;
		end if;

	end;

	procedure Reaprazar_solucao is
		nr_seq_turno_w			regra_turno_disp.nr_sequencia%type;
		nr_seq_processo_w		adep_processo.nr_sequencia%type;
		dt_horario_processo_w	date;
		dt_horario_base_w		date;
		ie_registro_valido_w	char(1);
		nr_sequencia_w 			prescr_solucao_evento.nr_sequencia%type;
		ie_se_necessario_w		varchar2(1);
		ie_acm_w				varchar2(1);
		ie_urgencia_w			varchar2(1);
		dt_inicio_prescr_w		date;
		dt_validade_prescr_w	date;
		dt_reaprazamento_ant_w	date;
		nr_prescricao_w			prescr_medica.nr_prescricao%type;
		nr_seq_solucao_w		prescr_mat_hor.nr_seq_solucao%type;
		nr_seq_mat_cpoe_w		prescr_material.nr_seq_mat_cpoe%type;
		cd_setor_pac_w			number(15);

		c01 CURSOR FOR
		SELECT	b.dt_horario,
				a.nr_sequencia
		from	adep_processo a,
				prescr_mat_hor b
		where	a.nr_sequencia		= b.nr_seq_processo
		and		a.nr_seq_solucao	= b.nr_seq_solucao
		and		a.nr_prescricao		= b.nr_prescricao
		and		a.dt_horario_processo <> b.dt_horario
		and		coalesce(b.ie_horario_especial,'N') = 'N'
		and		a.nr_seq_solucao	= nr_seq_solucao_p
		and		a.nr_prescricao		= nr_prescricao_p;

		c03 CURSOR FOR
		SELECT	p.nr_sequencia,
				coalesce(p.ie_status_lote,'X'),
				substr(obter_valor_dominio(2116,p.ie_status_lote),1,255)
		from	prescr_mat_hor b,
				ap_lote p,
				ap_lote_item i
		where	p.nr_sequencia		= i.nr_seq_lote
		and 	p.nr_sequencia 		= b.nr_seq_lote
		and		i.nr_seq_mat_hor 	= b.nr_sequencia
		and 	b.nr_prescricao		= nr_prescricao_p
		and		b.nr_seq_solucao	= nr_seq_solucao_p
		and		((nr_etapa_atual_p = 0) or (b.nr_etapa_sol = nr_etapa_atual_p))
		and		b.ie_agrupador		= 4;

		c04 CURSOR FOR
		SELECT  distinct a.nr_prescricao nr_prescricao,
				c.nr_seq_solucao
		from	prescr_mat_hor c,
				prescr_material b,
				prescr_medica a
		where	c.nr_prescricao = b.nr_prescricao
		and		c.nr_seq_material = b.nr_sequencia
		and		b.nr_prescricao = a.nr_prescricao
		and		obter_se_exibir_rep_adep_setor(cd_setor_pac_w,a.cd_setor_atendimento,coalesce(a.ie_adep,'S')) = 'S'
		and		b.ie_agrupador in (4)
		and		coalesce(c.ie_situacao,'A') = 'A'
		and		coalesce(c.ie_horario_especial,'N') = 'N'
		and		coalesce(c.ie_adep,'S') = 'S'
		and		coalesce(c.dt_fim_horario::text, '') = ''
		and		coalesce(c.dt_suspensao::text, '') = ''
		and 	b.nr_prescricao > nr_prescricao_p
		and		b.nr_seq_mat_cpoe = nr_seq_mat_cpoe_w
		and		c.nr_etapa_sol >= 1
		and		a.nr_atendimento = nr_atendimento_w
		and		a.dt_validade_prescr > clock_timestamp()
		and		c.dt_horario >= dt_reaprazamento_w
		and		Obter_se_horario_liberado(c.dt_lib_horario, c.dt_horario) = 'S';


	begin

	open c03;
	loop
	fetch c03 into
		nr_seq_lote_ww,
		ie_status_lote_w,
		ds_status_lote_w;
	EXIT WHEN NOT FOUND; /* apply on c03 */
		begin
		if (ie_consiste_lote_atendido_w = 'S') then
			if (coalesce(ie_status_lote_w,'11')	= 'A') then
				ds_inconsist_lote_p	:= wheb_mensagem_pck.get_texto(294655, 'LOTE='||nr_seq_lote_ww)|| ds_status_lote_w;
			end if;
		elsif (ie_consiste_lote_atendido_w = 'T') then
			if (coalesce(ie_status_lote_w,'11')	= 'R') then
				CALL Wheb_mensagem_pck.exibir_mensagem_abort(215211);
			elsif (coalesce(ie_status_lote_w,'11')	= 'A') then
				CALL Wheb_mensagem_pck.exibir_mensagem_abort(215212);
			end if;
		end if;
		end;
	end loop;
	close c03;

	select	coalesce(max(p.nr_sequencia),0),
			coalesce(max(p.ie_status_lote),'X')
	into STRICT	nr_seq_lote_ww,
			ie_status_lote_w
	from	prescr_mat_hor b,
			ap_lote p,
			ap_lote_item i
	where	p.nr_sequencia		= i.nr_seq_lote
	and 	p.nr_sequencia 		= b.nr_seq_lote
	and		i.nr_seq_mat_hor 	= b.nr_sequencia
	and 	b.nr_prescricao		= nr_prescricao_p
	and		b.nr_seq_solucao	= nr_seq_solucao_p
	and		((nr_etapa_atual_p = 0) or (b.nr_etapa_sol = nr_etapa_atual_p))
	and		b.ie_agrupador		= 4;

	if (ie_consiste_lote_atendido_w = 'S') then
		if (coalesce(ie_status_lote_w,'11')	= 'A') then
			ds_inconsist_lote_p	:= wheb_mensagem_pck.get_texto(294655, 'LOTE='||nr_seq_lote_ww);
		end if;
	elsif (ie_consiste_lote_atendido_w = 'T') then
		if (coalesce(ie_status_lote_w,'11')	= 'R') then
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(215211);
		elsif (coalesce(ie_status_lote_w,'11')	= 'A') then
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(215212);
		end if;
	end if;

	select	coalesce(max('N'),'S')
	into STRICT	ie_registro_valido_w
	from	prescr_medica 	a,
			prescr_material	b,
			cpoe_material 		c
	where	a.nr_prescricao = b.nr_prescricao
	and		b.nr_seq_mat_cpoe = c.nr_sequencia
	and		dt_reaprazamento_w > coalesce(cpoe_obter_termino_item(c.nr_sequencia, 'M'), a.dt_validade_prescr)
	and		b.nr_prescricao = nr_prescricao_p
	and		b.nr_sequencia_solucao = nr_seq_solucao_p
	and		b.ie_agrupador = 4
	and		(b.nr_seq_mat_cpoe IS NOT NULL AND b.nr_seq_mat_cpoe::text <> '') LIMIT 1;


	if (ie_registro_valido_w = 'N') then

		select	max(c.dt_suspensao),
				max(c.dt_fim)
		into STRICT	dt_suspensao_cpoe_w,
				dt_fim_cpoe_w
		from	prescr_medica 	a,
				prescr_material	b,
				cpoe_material 		c
		where	a.nr_prescricao = b.nr_prescricao
		and		b.nr_seq_mat_cpoe = c.nr_sequencia
		and		b.nr_prescricao = nr_prescricao_p
		and		b.nr_sequencia_solucao = nr_seq_solucao_p
		and		b.ie_agrupador = 4
		and		(b.nr_seq_mat_cpoe IS NOT NULL AND b.nr_seq_mat_cpoe::text <> '')
		and		coalesce(b.nr_seq_substituto::text, '') = ''
		and             c.cd_funcao_origem = 2314 LIMIT 1;

		if (dt_suspensao_cpoe_w IS NOT NULL AND dt_suspensao_cpoe_w::text <> '' AND dt_inicio_p > dt_suspensao_cpoe_w) then
			-- A data do aprazamento nao pode ser superior a data de suspensao do item: Suspenso em
			ds_msg_w	:= wheb_mensagem_pck.get_Texto(820331, null) || ' ' || PKG_DATE_FORMATERS_TZ.TO_VARCHAR(dt_suspensao_cpoe_w, 'timestamp', ESTABLISHMENT_TIMEZONE_UTILS.getTimeZone);
			CALL wheb_mensagem_pck.exibir_mensagem_abort(ds_msg_w);
		elsif (dt_fim_cpoe_w IS NOT NULL AND dt_fim_cpoe_w::text <> '' AND dt_inicio_p > dt_fim_cpoe_w) then
			--O horario informado esta fora do periodo de validade do item na CPOE. Data de fim:
			ds_msg_w	:= wheb_mensagem_pck.get_Texto(820333, null) || ' ' || PKG_DATE_FORMATERS_TZ.TO_VARCHAR(dt_fim_cpoe_w, 'timestamp', ESTABLISHMENT_TIMEZONE_UTILS.getTimeZone);
			CALL wheb_mensagem_pck.exibir_mensagem_abort(ds_msg_w);
		end if;
	else
		select	max(a.nr_seq_mat_cpoe)
		into STRICT	nr_seq_mat_cpoe_w
		from	prescr_material a
		where	a.nr_prescricao = nr_prescricao_p
		and		a.nr_sequencia_solucao = nr_seq_solucao_p;

	end if;

	if (Wheb_assist_pck.ObterParametroFuncao(1113, 493) = 'N') then

		nr_seq_cpoe_w := coalesce(obter_nr_seq_cpoe_sol(nr_prescricao_p, nr_seq_solucao_p),0);

		if (nr_seq_cpoe_w > 0) then
			select 	max(dt_liberacao),
					max(dt_fim),
					coalesce(max(ie_se_necessario), 'N'),
					coalesce(max(ie_acm), 'N'),
					CASE WHEN coalesce(max(ie_urgencia),'N')='N' THEN 'N'  ELSE 'S' END
			into STRICT 	dt_inicio_prescr_w,
					dt_validade_prescr_w,
					ie_se_necessario_w,
					ie_acm_w,
					ie_urgencia_w
			from 	cpoe_material
			where 	nr_sequencia = nr_seq_cpoe_w;
		else
			select	max(a.dt_inicio_prescr) dt_inicio_prescr,
					max(a.dt_validade_prescr) dt_validade_prescr,
					coalesce(max(b.ie_se_necessario),'N') ie_se_necessario,
					coalesce(max(b.ie_acm),'N') ie_acm,
					coalesce(max(b.ie_urgencia),'N') ie_urgencia
			into STRICT 	dt_inicio_prescr_w,
					dt_validade_prescr_w,
					ie_se_necessario_w,
					ie_acm_w,
					ie_urgencia_w
			from	prescr_medica a,
					prescr_solucao b
			where	a.nr_prescricao = b.nr_prescricao
			and 	b.nr_prescricao	= nr_prescricao_p
			and		b.nr_seq_solucao = nr_seq_solucao_p;

		end if;

		ie_pos_validade_w := Wheb_assist_pck.ObterParametroFuncao(1113, 396);

		if ((ie_pos_validade_w = 'D') and (dt_reaprazamento_w < dt_inicio_prescr_w) and
			((ie_acm_w <> 'S') and (ie_se_necessario_w <> 'S') and (ie_urgencia_w <> 'S'))) or
			(ie_pos_validade_w = 'N' AND dt_reaprazamento_w < dt_inicio_prescr_w)	then
			--O horario desejado esta fora da validade da prescricao. Parametro [396].
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(173050);
		end if;

		if (dt_reaprazamento_w >= dt_inicio_prescr_w and (coalesce(dt_validade_prescr_w::text, '') = '' or dt_reaprazamento_w <= dt_validade_prescr_w)) then
			ie_registro_valido_w := 'S';
		else
			ie_registro_valido_w := 'N';
		end if;

		if (ie_registro_valido_w = 'N') then
			--O horario desejado esta fora do periodo da validade da prescricao! Parametro [493].
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(204164);
		end if;

	end if;

		if (Wheb_assist_pck.ObterParametroFuncao(1113, 241) = 'H') then

			select	coalesce(max('N'), 'S')
			into STRICT	ie_registro_valido_w
			from	prescr_mat_hor b
			where	b.nr_prescricao	= nr_prescricao_p
			and		coalesce(b.dt_suspensao::text, '') = ''
			and		coalesce(b.nr_seq_superior::text, '') = ''
			and		b.nr_seq_solucao	= nr_seq_solucao_p
			and		Obter_se_horario_liberado(b.dt_lib_horario, b.dt_horario) = 'S'
			and		b.dt_horario = 	dt_inicio_p
			and		coalesce(b.ie_horario_especial, 'N') <> 'S';

			if (ie_registro_valido_w = 'N') then
				--O horario desejado informado ja esta previsto/prescrito para este item!
				CALL Wheb_mensagem_pck.exibir_mensagem_abort(218933);
			end if;

		end if;

		select	min(b.dt_horario)
		into STRICT	dt_horario_base_w
		from	prescr_mat_hor b
		where	b.nr_prescricao	= nr_prescricao_p
		and		coalesce(b.dt_suspensao::text, '') = ''
		and		coalesce(b.nr_seq_superior::text, '') = ''
		and		b.nr_seq_solucao	= nr_seq_solucao_p
		and		Obter_se_horario_liberado(b.dt_lib_horario, b.dt_horario) = 'S'
		and		(((nr_etapa_atual_p = 0) and (coalesce(b.dt_inicio_horario::text, '') = '')) or (b.nr_etapa_sol = nr_etapa_atual_p));

		select	max(cd_setor_atendimento),
				max(cd_local_estoque)
		into STRICT	cd_setor_atendimento_w ,
				cd_local_estoque_w
		from	prescr_medica
		where	nr_prescricao = nr_prescricao_p;

		select	max(nr_seq_mat_cpoe)
		into STRICT	nr_seq_cpoe_w
		from	prescr_material
		where	nr_prescricao = nr_prescricao_p
		and		nr_sequencia = nr_seq_solucao_p;

		if (coalesce(cd_local_estoque_w::text, '') = '') then

			select	max(a.cd_local_estoque)
			into STRICT 	cd_local_estoque_w
			from	prescr_mat_hor b,
					prescr_material a
			where	a.nr_prescricao 	= b.nr_prescricao
			and		b.nr_seq_solucao 	= a.nr_sequencia_solucao
			and		b.nr_prescricao		= nr_prescricao_p
			and		coalesce(b.dt_suspensao::text, '') = ''
			and		coalesce(b.nr_seq_superior::text, '') = ''
			and		b.nr_seq_solucao	= nr_seq_solucao_p
			and		obter_se_horario_liberado(b.dt_lib_horario, b.dt_horario) = 'S'
			and		((nr_etapa_atual_p = 0) or (b.nr_etapa_sol = nr_etapa_atual_p));

		end if;

		nr_seq_turno_w		:= Obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,to_char(dt_reaprazamento_w,'hh24:mi'),cd_local_estoque_w);

		if (nr_etapa_atual_p = 0) then
			begin

			select	max(Obter_Hora_Entre_datas_aux(a.dt_horario, dt_reaprazamento_w))*60
			into STRICT	qt_reaprazamento_w
			from	prescr_mat_hor a
			where	a.nr_prescricao	= nr_prescricao_p
			and		a.nr_seq_solucao	= nr_seq_solucao_p
			and		coalesce(a.dt_suspensao::text, '') = ''
			and		a.dt_horario = dt_horario_base_w;

			select	max(coalesce(qt_reaprazamento_w, Obter_Hora_Entre_datas_aux(dt_status, dt_inicio_p)*60)),
					max(dt_status)
			into STRICT	qt_reaprazamento_w,
					dt_horario_orig_w
			from	prescr_solucao
			where	nr_seq_solucao		= nr_seq_solucao_p
			and		nr_prescricao		= nr_prescricao_p;

			select	max(nr_sequencia)
			into STRICT   	nr_sequencia_w
			from	prescr_mat_hor a
			where 	a.nr_prescricao = nr_prescricao_p
			and		a.nr_seq_solucao = nr_seq_solucao_p
			and 	a.dt_horario = dt_horario_base_w
			and		a.ie_agrupador = 4;

			select	coalesce(max('S'), 'N')
			into STRICT	ie_nao_aprazou_w
			from	prescr_solucao
			where	nr_seq_solucao		= nr_seq_solucao_p
			and		nr_prescricao		= nr_prescricao_p
			and		coalesce(dt_status::text, '') = '';

			if (ie_nao_aprazou_w = 'S') then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(1028034, 'NR_PRESCRICAO='||nr_prescricao_p);
			end if;

			update	prescr_solucao
			set		dt_status 			= dt_reaprazamento_w
			where	nr_seq_solucao		= nr_seq_solucao_p
			and		nr_prescricao		= nr_prescricao_p;

			update	prescr_mat_hor a
			set		a.dt_horario 		= dt_reaprazamento_w,
					a.nr_seq_turno 		= nr_seq_turno_w,
					a.dt_atualizacao 	= clock_timestamp(),
					a.nm_usuario_reaprazamento 	= nm_usuario_w,
					a.qt_hor_reaprazamento 		= qt_reaprazamento_w
			where	a.nr_prescricao		= nr_prescricao_p
			and		a.nr_seq_superior	in (
							SELECT	b.nr_seq_material
							from	prescr_mat_hor b
							where	b.nr_prescricao	= nr_prescricao_p
							and		coalesce(b.dt_suspensao::text, '') = ''
							and		coalesce(b.nr_seq_superior::text, '') = ''
							and		b.nr_seq_solucao	= nr_seq_solucao_p
							and		Obter_se_horario_liberado(b.dt_lib_horario, b.dt_horario) = 'S')
			and		coalesce(a.dt_suspensao::text, '') = ''
			and		a.dt_horario	= dt_horario_base_w;

			update	prescr_mat_hor a
			set		a.dt_horario		= dt_reaprazamento_w,
					a.nr_seq_turno 		= nr_seq_turno_w,
					a.dt_atualizacao 	= clock_timestamp(),
					a.nm_usuario_reaprazamento = nm_usuario_w,
                    a.qt_hor_reaprazamento = qt_reaprazamento_w
			where	a.nr_prescricao		= nr_prescricao_p
			and		a.nr_seq_solucao	= nr_seq_solucao_p
			and		coalesce(a.dt_suspensao::text, '') = ''
			and		a.dt_horario 		= dt_horario_base_w;

			select	max(nr_atendimento)
			into STRICT	nr_atendimento_w
			from	prescr_medica
			where	nr_prescricao = nr_prescricao_p;

			CALL reaprazar_horario_dependentes(nr_atendimento_w, nr_prescricao_p, 0, 0, dt_horario_base_w, dt_reaprazamento_w, qt_reaprazamento_w, nm_usuario_w, nr_seq_solucao_p);

			end;
		else
			begin

			select 	max(dt_horario)
			into STRICT 	dt_horario_etapa_proxima_w
			from 	prescr_mat_hor
			where 	nr_prescricao 	= nr_prescricao_p
			and   	nr_seq_solucao 	= nr_seq_solucao_p
			and   	nr_etapa_sol 	= nr_etapa_atual_p + 1;


			select 	max(dt_horario)
			into STRICT 	dt_horario_etapa_anterior_w
			from 	prescr_mat_hor
			where 	nr_prescricao 	= nr_prescricao_p
			and   	nr_seq_solucao 	= nr_seq_solucao_p
			and   	nr_etapa_sol 	= nr_etapa_atual_p - 1;

			if (ie_reaprazar_seguintes_p = 'N'
				and (dt_horario_etapa_proxima_w IS NOT NULL AND dt_horario_etapa_proxima_w::text <> '')
				and dt_reaprazamento_w > dt_horario_etapa_proxima_w) then
				--Nao e possivel reaprazar o horario para uma data maior a data da proxima etapa
				CALL Wheb_mensagem_pck.exibir_mensagem_abort(1063558);
			end if;

			if (ie_reaprazar_seguintes_p = 'N'
				and (dt_horario_etapa_anterior_w IS NOT NULL AND dt_horario_etapa_anterior_w::text <> '')
				and dt_reaprazamento_w < dt_horario_etapa_anterior_w) then
				--Nao e possivel reaprazar o horario para uma data menor a data da etapa anterior
				CALL Wheb_mensagem_pck.exibir_mensagem_abort(1063566);
			end if;

			select	max(Obter_Hora_Entre_datas_aux(a.dt_horario, dt_reaprazamento_w))*60
			into STRICT	qt_reaprazamento_w
			from	prescr_mat_hor a
			where	a.nr_prescricao	= nr_prescricao_p
			and		a.nr_seq_solucao	= nr_seq_solucao_p
			and		coalesce(a.dt_suspensao::text, '') = ''
			and		a.dt_horario = dt_horario_base_w
			and		a.nr_etapa_sol = nr_etapa_atual_p;

			if (coalesce(qt_reaprazamento_w::text, '') = '') then
				select	max(Obter_Hora_Entre_datas_aux(dt_status, dt_reaprazamento_w))*60
				into STRICT	qt_reaprazamento_w
				from	prescr_solucao
				where	nr_prescricao		= nr_prescricao_p
				and		nr_seq_solucao		= nr_seq_solucao_p;
			end if;

			select	max(a.dt_horario)
			into STRICT	dt_horario_orig_w
			from	prescr_mat_hor a
			where 	a.nr_prescricao = nr_prescricao_p
			and		a.nr_seq_solucao = nr_seq_solucao_p
			and		a.nr_etapa_sol = nr_etapa_atual_p;

			select	coalesce(max('S'), 'N')
			into STRICT	ie_nao_aprazou_w
			from	prescr_solucao
			where	nr_seq_solucao		= nr_seq_solucao_p
			and		nr_prescricao		= nr_prescricao_p
			and		coalesce(dt_status::text, '') = '';

			if (ie_nao_aprazou_w = 'S') then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(1028034, 'NR_PRESCRICAO='||nr_prescricao_p);
			end if;

			if (nr_etapa_atual_p = 1) then
				update	prescr_solucao
				set		dt_status 			= dt_reaprazamento_w
				where	nr_seq_solucao		= nr_seq_solucao_p
				and		nr_prescricao		= nr_prescricao_p;
			end if;

			update	prescr_mat_hor a
			set		a.dt_horario = dt_reaprazamento_w,
					a.nm_usuario_reaprazamento = nm_usuario_w,
					a.nr_seq_turno = nr_seq_turno_w,
					a.dt_atualizacao = clock_timestamp(),
					a.qt_hor_reaprazamento = qt_reaprazamento_w
			where	a.nr_prescricao	= nr_prescricao_p
			and		a.nr_seq_superior in (
							SELECT	b.nr_seq_material
							from	prescr_mat_hor b
							where	b.nr_prescricao	= nr_prescricao_p
							and		coalesce(b.dt_suspensao::text, '') = ''
							and		coalesce(b.nr_seq_superior::text, '') = ''
							and		b.nr_seq_solucao	= nr_seq_solucao_p
							and		Obter_se_horario_liberado(b.dt_lib_horario, b.dt_horario) = 'S'
							and		b.nr_etapa_sol = nr_etapa_atual_p)
			and		coalesce(a.dt_suspensao::text, '') = ''
			and		a.dt_horario = dt_horario_base_w
			and		a.nr_etapa_sol = nr_etapa_atual_p;

			update	prescr_mat_hor a
			set		a.dt_horario = dt_reaprazamento_w,
					a.nm_usuario_reaprazamento = nm_usuario_w,
					a.nr_seq_turno = nr_seq_turno_w,
					a.dt_atualizacao = clock_timestamp(),
					a.qt_hor_reaprazamento = qt_reaprazamento_w
			where	a.nr_prescricao	= nr_prescricao_p
			and		a.nr_seq_solucao = nr_seq_solucao_p
			and		coalesce(a.dt_suspensao::text, '') = ''
			and		a.dt_horario = dt_horario_base_w
			and		a.nr_etapa_sol = nr_etapa_atual_p;

			select	max(nr_atendimento)
			into STRICT	nr_atendimento_w
			from	prescr_medica
			where	nr_prescricao = nr_prescricao_p;

			CALL reaprazar_horario_dependentes(nr_atendimento_w, nr_prescricao_p, 0, 0, dt_horario_base_w, dt_reaprazamento_w, qt_reaprazamento_w, nm_usuario_w, nr_seq_solucao_p);


			select	max(nr_sequencia)
			into STRICT   	nr_sequencia_w
			from	prescr_mat_hor a
			where 	a.nr_prescricao = nr_prescricao_p
			and		a.nr_seq_solucao = nr_seq_solucao_p
			and		a.nr_etapa_sol = nr_etapa_atual_p
			and		a.ie_agrupador = 4;

			end;
		end if;

		qt_minutos_w 		:= (trunc(dt_reaprazamento_w,'mi') - trunc(dt_horario_orig_w,'mi')) * 1440;

		if (coalesce(ie_gera_lote_w, 'N') = 'S') or
			((coalesce(ie_gera_lote_w, 'N') = 'A') and (qt_minutos_w < 0)) or
			((coalesce(ie_gera_lote_w, 'N') = 'T') and (qt_minutos_w > 0)) or
			((coalesce(ie_gera_lote_w, 'N') = 'U') and (dt_reaprazamento_w >= clock_timestamp())) then
			CALL Gerar_Lote_Reapr_Prescr(nr_prescricao_p, nr_seq_solucao_p, nr_sequencia_w, 'N', nm_usuario_w, 'RHIP');
		end if;

		gerar_evento_reaprazamento_sol(true, nr_sequencia_w);

		if (ie_reaprazar_seguintes_p = 'S') then

			reaprazar_hor_seguintes_sol(nr_prescricao_p, nr_seq_solucao_p, nr_etapa_atual_p, 'N');

			cd_setor_pac_w := Obter_Unidade_Atendimento(nr_atendimento_w, 'IA', 'CS');

			open c04;
			loop
			fetch c04 into
				nr_prescricao_w,
				nr_seq_solucao_w;
			EXIT WHEN NOT FOUND; /* apply on c04 */
				begin
				dt_reaprazamento_w := dt_inicio_p;
				reaprazar_hor_seguintes_sol(nr_prescricao_w, nr_seq_solucao_w, 1, 'S');
				end;
			end loop;
			close c04;

		end if;

		commit;

		open c01;
		loop
		fetch c01 into
			dt_horario_processo_w,
			nr_seq_processo_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			-- Reaprazar os horarios dos processos do ADEP.
			update	adep_processo
			set		dt_horario_processo	= dt_horario_processo_w
			where	nr_sequencia		= nr_seq_processo_w;
		end loop;
		close c01;
	end;

	procedure reaprazar_associados_sne(	dt_horario_p			prescr_mat_hor.dt_horario%type,
										nr_seq_turno_p			regra_turno_disp.nr_sequencia%type,
										dt_reaprazamento_p		date,
										qt_reaprazamento_p		number,
										nm_usuario_reapr_p		usuario.nm_usuario%type) is
	
	c06 CURSOR FOR /*Reaprazamento de kits vinculados a SNE*/
		SELECT	a.rowid id,
				a.nr_seq_material,
				a.nr_prescricao,
				a.dt_horario dt_horario_original,
				a.nr_atendimento,
				a.nr_sequencia nr_seq_horario,
				a.cd_material cd_item,
				CASE WHEN ie_agrupador=1 THEN 'M'  ELSE 'MAT' END  ie_tipo_item
		from	prescr_mat_hor	a
		where	a.nr_prescricao		= nr_prescricao_p
		and		a.nr_seq_superior	= nr_seq_solucao_p
		and		a.dt_horario		= dt_horario_p
		and		a.ie_agrupador		in (1,2);
	
	begin
	
	for c06_w in c06 loop --Reaprazar kits associados a SNE
		begin
		update	prescr_mat_hor
		set		dt_horario 				= dt_reaprazamento_p,
				dt_atualizacao 			= clock_timestamp(),
				nm_usuario_reaprazamento = nm_usuario_reapr_p,
				qt_hor_reaprazamento 	= qt_reaprazamento_p,
				nr_seq_turno			= nr_seq_turno_p
		where	rowid					= c06_w.id;

		CALL gerar_evento_reaprazamento(	nr_atendimento_p     	=> c06_w.nr_atendimento,
											nr_prescricao_p      	=> nr_prescricao_p,
											nr_seq_item_p        	=> c06_w.nr_seq_material,
											nr_seq_horario_p     	=> c06_w.nr_seq_horario,
											cd_item_p            	=> c06_w.cd_item,
											ie_tipo_item_p       	=> c06_w.ie_tipo_item,
											ie_alteracao_p       	=> 10, --Reaprazamento de horario
											nr_seq_motivo_p      	=> nr_seq_motivo_p,
											ds_justificativa_p   	=> null,
											nm_usuario_p         	=> nm_usuario_reapr_p,
											nr_seq_proc_interno_p	=> null,
											ie_acm_sn_p          	=> 'N',
											nr_seq_assinatura_p		=> null,
											qt_item_p				=> null,
											cd_funcao_p          	=> coalesce(obter_funcao_ativa,1113));
		end;
	end loop;

	end;
	
	procedure Reaprazar_sne is
		nr_sequencia_w			prescr_mat_hor.nr_sequencia%type;
		nr_seq_lote_w			ap_lote.nr_sequencia%type;
		ie_registro_valido_w 	Char(1);
		nr_seq_turno_w			regra_turno_disp.nr_sequencia%type;
		dt_horario_base_w		date;

		c03 CURSOR FOR
		SELECT	a.nr_sequencia,
				a.dt_horario
		from	prescr_mat_hor a
		where	a.nr_prescricao	= nr_prescricao_p
		and		a.nr_seq_material	= nr_seq_solucao_p
		and		a.nr_sequencia > nr_seq_horario_w
		and		a.ie_agrupador	= 8
		order by
				a.dt_horario;

		c04 CURSOR FOR
		SELECT	b.nr_sequencia,
				b.dt_horario
		from	prescr_mat_hor b,
				prescr_medica a,
				prescr_solucao c,
				paciente_atendimento d
		where	c.nr_prescricao = b.nr_prescricao
		and		c.nr_seq_solucao = b.nr_seq_solucao
		and		c.nr_prescricao = a.nr_prescricao
		and		b.nr_prescricao = a.nr_prescricao
		and		a.nr_seq_atend	= d.nr_seq_atendimento
		and		b.nr_prescricao	= nr_prescricao_p
		and		b.nr_sequencia 	> nr_seq_horario_w
		and		d.nr_ciclo	= nr_ciclo_p
		and		b.ie_agrupador	= 8
		order by
				b.dt_horario;

		c05 CURSOR FOR
			SELECT	p.nr_sequencia
			from	prescr_mat_hor b,
					ap_lote p,
					ap_lote_item i
			where	p.nr_sequencia		= i.nr_seq_lote
			and 	p.nr_sequencia 		= b.nr_seq_lote
			and		i.nr_seq_mat_hor 	= b.nr_sequencia
			and 	b.nr_prescricao		= nr_prescricao_p
			and (coalesce(b.nr_sequencia, nr_seq_horario_p) 		= nr_seq_horario_p
			or 		coalesce(b.nr_seq_superior, nr_seq_horario_p) 		= nr_seq_horario_p)
			and		b.ie_agrupador		= 8;
	begin

		open c05;
		loop
		fetch c05 into
			nr_seq_lote_ww;
		EXIT WHEN NOT FOUND; /* apply on c05 */
			begin
			select	coalesce(max(p.ie_status_lote),'X'),
					max(substr(obter_valor_dominio(2116,p.ie_status_lote),1,255))
			into STRICT	ie_status_lote_w,
					ds_status_lote_w
			from	ap_lote p
			where 	nr_sequencia = nr_seq_lote_ww;

			if (ie_consiste_lote_atendido_w = 'S') then
				if (coalesce(ie_status_lote_w,'11')	= 'A') then
					ds_inconsist_lote_p	:= wheb_mensagem_pck.get_texto(294655, 'LOTE='||nr_seq_lote_ww)||ds_status_lote_w;
				end if;
			elsif (ie_consiste_lote_atendido_w = 'T') then
				if (coalesce(ie_status_lote_w,'11')	= 'R') then
					CALL Wheb_mensagem_pck.exibir_mensagem_abort(215211);
				elsif (coalesce(ie_status_lote_w,'11')	= 'A') then
					CALL Wheb_mensagem_pck.exibir_mensagem_abort(215212);
				end if;
			end if;

			end;
		end loop;
		close c05;

		select 	max(nr_seq_dieta_cpoe)
		into STRICT	nr_seq_cpoe_w
		from	prescr_material
		where	nr_prescricao	= nr_prescricao_p
		and		nr_sequencia	= nr_seq_solucao_p;

		select	coalesce(max('S'), 'N')
		into STRICT	ie_pos_validade_w
		from	prescr_medica
		where	nr_prescricao = nr_prescricao_p
		and		dt_reaprazamento_w >= dt_inicio_prescr;

		select	coalesce(max('N'),'S')
		into STRICT	ie_registro_valido_w
		from	prescr_medica 	a,
				prescr_material	b,
				cpoe_dieta 		c
		where	a.nr_prescricao = b.nr_prescricao
		and		b.nr_seq_dieta_cpoe = c.nr_sequencia
		and		dt_reaprazamento_w > coalesce(cpoe_obter_termino_item(c.nr_sequencia, 'N'), a.dt_validade_prescr)
		and		b.nr_prescricao = nr_prescricao_p
		and		b.nr_sequencia = nr_seq_solucao_p
		and		b.ie_agrupador = 8
		and		(b.nr_seq_dieta_cpoe IS NOT NULL AND b.nr_seq_dieta_cpoe::text <> '') LIMIT 1;

		if (ie_registro_valido_w = 'N') then

			select	max(c.dt_suspensao),
					max(c.dt_fim)
			into STRICT	dt_suspensao_cpoe_w,
					dt_fim_cpoe_w
			from	prescr_medica a,
					prescr_material b,
					cpoe_dieta c
			where	a.nr_prescricao = b.nr_prescricao
			and		b.nr_seq_dieta_cpoe = c.nr_sequencia
			and		b.nr_prescricao = nr_prescricao_p
			and		b.nr_sequencia = nr_seq_solucao_p
			and		b.ie_agrupador = 8
			and		(b.nr_seq_dieta_cpoe IS NOT NULL AND b.nr_seq_dieta_cpoe::text <> '')
			and             c.cd_funcao_origem = 2314 LIMIT 1;


			if (dt_suspensao_cpoe_w IS NOT NULL AND dt_suspensao_cpoe_w::text <> '' AND dt_inicio_p > dt_suspensao_cpoe_w) then
				-- A data do aprazamento nao pode ser superior a data de suspensao do item: Suspenso em
				ds_msg_w	:= wheb_mensagem_pck.get_Texto(820331, null) || ' ' || PKG_DATE_FORMATERS_TZ.TO_VARCHAR(dt_suspensao_cpoe_w, 'timestamp', ESTABLISHMENT_TIMEZONE_UTILS.getTimeZone);
				CALL wheb_mensagem_pck.exibir_mensagem_abort(ds_msg_w);
			elsif (dt_fim_cpoe_w IS NOT NULL AND dt_fim_cpoe_w::text <> '' AND dt_inicio_p > dt_fim_cpoe_w) then
				--O horario informado esta fora do periodo de validade do item na CPOE. Data de fim:
				ds_msg_w	:= wheb_mensagem_pck.get_Texto(820333, null) || ' ' || PKG_DATE_FORMATERS_TZ.TO_VARCHAR(dt_fim_cpoe_w, 'timestamp', ESTABLISHMENT_TIMEZONE_UTILS.getTimeZone);
				CALL wheb_mensagem_pck.exibir_mensagem_abort(ds_msg_w);
			end if;

		end if;

		if (nr_seq_cpoe_w IS NOT NULL AND nr_seq_cpoe_w::text <> '') then

			select 	coalesce(max('S'), 'N')
			into STRICT 	ie_pos_validade_w
			from 	cpoe_dieta
			where 	nr_sequencia = nr_seq_cpoe_w
			and 	dt_reaprazamento_w >= dt_liberacao;

			select 	coalesce(max('S'), 'N')
			into STRICT 	ie_depois_validade_w
			from 	cpoe_dieta
			where 	nr_sequencia = nr_seq_cpoe_w
			and		dt_reaprazamento_w >= dt_liberacao
			and (coalesce(dt_fim::text, '') = '' or dt_reaprazamento_w <= dt_fim);

		else

			select	coalesce(max('S'), 'N')
			into STRICT	ie_pos_validade_w
			from	prescr_medica
			where	nr_prescricao = nr_prescricao_p
			and		dt_reaprazamento_w >= dt_inicio_prescr;

			select	coalesce(max('S'), 'N')
			into STRICT	ie_depois_validade_w
			from	prescr_medica
			where	nr_prescricao = nr_prescricao_p
			and		dt_reaprazamento_w >= dt_inicio_prescr
			and (coalesce(dt_validade_prescr::text, '') = '' or dt_reaprazamento_w <= dt_validade_prescr);

		end if;

		if (Wheb_assist_pck.ObterParametroFuncao(1113, 396) = 'N') and (ie_pos_validade_w = 'N') then
			--O horario desejado esta fora da validade da prescricao. Parametro [396].
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(173050);
		end if;

		if (Wheb_assist_pck.ObterParametroFuncao(1113, 493) = 'N') and (ie_depois_validade_w = 'N') then
			--O horario desejado esta fora do periodo da validade da prescricao! Parametro [493].
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(204164);
		end if;

		update	prescr_material
		set		dt_status = dt_reaprazamento_w
		where	nr_prescricao	= nr_prescricao_p
		and		nr_sequencia	= nr_seq_solucao_p
		and		ie_agrupador	= 8;

		select	max(cd_setor_atendimento),
				max(cd_local_estoque)
		into STRICT	cd_setor_atendimento_w ,
				cd_local_estoque_w
		from	prescr_medica
		where	nr_prescricao = nr_prescricao_p;

		--SNE
		if (Wheb_assist_pck.ObterParametroFuncao(1113, 422) = 'N') then
			nr_seq_turno_w		:= Obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,to_char(dt_reaprazamento_w,'hh24:mi'),cd_local_estoque_w);

		    select	min(b.dt_horario)
			into STRICT	dt_horario_base_w
			from	prescr_mat_hor b
			where	b.nr_prescricao	= nr_prescricao_p
			and		coalesce(b.nr_seq_superior::text, '') = ''
			and		b.nr_seq_material	= nr_seq_solucao_p
			and		Obter_se_horario_liberado(b.dt_lib_horario, b.dt_horario) = 'S'
			and		coalesce(coalesce(dt_fim_horario,dt_suspensao)::text, '') = '';

		    select	max(Obter_Hora_Entre_datas_aux(a.dt_horario, dt_reaprazamento_w))*60,
					max(a.nr_sequencia)
			into STRICT	qt_reaprazamento_w,
					nr_seq_horario_w
			from	prescr_mat_hor a
			where	a.nr_prescricao	= nr_prescricao_p
			and		a.nr_seq_material	= nr_seq_solucao_p
			and		coalesce(a.dt_suspensao::text, '') = ''
			and		a.dt_horario = dt_horario_base_w;

			update	prescr_mat_hor a
			set		a.dt_horario 		= dt_reaprazamento_w,
					a.nr_seq_turno 		= nr_seq_turno_w,
					a.dt_atualizacao 	= clock_timestamp(),
					a.nm_usuario_reaprazamento 	= nm_usuario_w,
					a.qt_hor_reaprazamento 		= qt_reaprazamento_w
			where	a.nr_prescricao		= nr_prescricao_p
			and		coalesce(coalesce(a.dt_fim_horario,a.dt_suspensao)::text, '') = ''
			and		a.dt_horario	= dt_horario_base_w;

			qt_minutos_w	:= (trunc(dt_reaprazamento_w,'mi') - trunc(dt_horario_base_w,'mi')) * 1440;

			if (coalesce(ie_gera_lote_w, 'N') = 'S') or
				((coalesce(ie_gera_lote_w, 'N') = 'A') and (qt_minutos_w < 0)) or
				((coalesce(ie_gera_lote_w, 'N') = 'T') and (qt_minutos_w > 0)) or
				((coalesce(ie_gera_lote_w, 'N') = 'U') and (dt_reaprazamento_w >= clock_timestamp())) then
				CALL Gerar_Lote_Reapr_Prescr(nr_prescricao_p, nr_seq_solucao_p, nr_seq_horario_w, 'N', nm_usuario_w, 'RHIP');
			end if;

			gerar_evento_reaprazamento_sol(true, nr_seq_horario_w);

			if	(ie_reaprazar_seguintes_p = 'S' AND qt_reaprazamento_w <> 0) then

					open c03;
					loop
					fetch c03 into
						nr_sequencia_w,
						dt_horario_orig_w;
					EXIT WHEN NOT FOUND; /* apply on c03 */

						dt_reaprazamento_w	:= dt_horario_orig_w + qt_reaprazamento_w/1440;

			            if (coalesce(cd_local_estoque_w::text, '') = '') then
		                  	select	max(a.cd_local_estoque)
							into STRICT 	cd_local_estoque_w
							from	prescr_mat_hor b,
									prescr_material a
							where	a.nr_prescricao 	= b.nr_prescricao
							and		b.nr_seq_material 	= a.nr_sequencia
							and		b.nr_prescricao		= nr_prescricao_p
							and		coalesce(b.nr_seq_superior::text, '') = ''
							and		b.nr_sequencia		= nr_sequencia_w
							and		obter_se_horario_liberado(b.dt_lib_horario, b.dt_horario) = 'S';
						end if;

						nr_seq_turno_w		:= Obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,to_char(dt_reaprazamento_w,'hh24:mi'),cd_local_estoque_w);

						update	prescr_mat_hor
						set		dt_horario 	= dt_reaprazamento_w,
								dt_atualizacao 	= clock_timestamp(),
								nm_usuario_reaprazamento = nm_usuario_w,
								qt_hor_reaprazamento = qt_reaprazamento_w,
								nr_seq_turno = nr_seq_turno_w
						where	nr_sequencia = nr_sequencia_w;

						qt_minutos_w	:= (trunc(dt_reaprazamento_w,'mi') - trunc(dt_horario_orig_w,'mi')) * 1440;

			            if (coalesce(ie_gera_lote_w, 'N') = 'S') or
							((coalesce(ie_gera_lote_w, 'N') = 'A') and (qt_minutos_w < 0)) or
							((coalesce(ie_gera_lote_w, 'N') = 'T') and (qt_minutos_w > 0)) or
							((coalesce(ie_gera_lote_w, 'N') = 'U') and (dt_reaprazamento_w >= clock_timestamp())) then
							CALL Gerar_Lote_Reapr_Prescr(nr_prescricao_p, nr_seq_solucao_p, nr_sequencia_w, 'N', nm_usuario_w, 'RHIP');
						end if;

						gerar_evento_reaprazamento_sol(true, nr_sequencia_w);

						select	coalesce(max(nr_seq_processo),0)
						into STRICT	nr_seq_processo_w
						from	prescr_mat_hor
						where	nr_sequencia = nr_sequencia_w;

						if (nr_seq_processo_w > 0) then

							select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
							into STRICT	ie_outros_horarios_w
							from	prescr_mat_hor
							where	nr_seq_processo	= nr_seq_processo_w
							and		nr_sequencia	<> nr_sequencia_w
							and		coalesce(nr_seq_superior::text, '') = ''
							and		obter_se_horario_liberado(dt_lib_horario, dt_horario) = 'S';

							if (ie_outros_horarios_w = 'N') then

								update	adep_processo
								set		dt_horario_processo	= dt_reaprazamento_w
								where	nr_sequencia		= nr_seq_processo_w;

							else

								nr_seq_novo_processo_w := adep_desdobrar_processo(nr_seq_processo_w, nr_seq_horario_w, null, Wheb_usuario_pck.get_nm_usuario, nr_seq_novo_processo_w);

								update	adep_processo
								set		dt_horario_processo	= dt_reaprazamento_w
								where	nr_sequencia		= nr_seq_novo_processo_w;

							end if;

						end if;

					end loop;
					close c03;
				end if;

		end if;

		if (Wheb_assist_pck.ObterParametroFuncao(1113, 422) = 'S') then
			begin
			ie_alteracao_w := 17;

			if (coalesce(nr_seq_horario_p,0) > 0) then
				nr_seq_horario_w := nr_seq_horario_p;
			else
				nr_seq_horario_w := nr_etapa_atual_p;
			end if;

			select	max(cd_setor_atendimento),
					max(cd_local_estoque)
			into STRICT	cd_setor_atendimento_w ,
					cd_local_estoque_w
			from	prescr_medica
			where	nr_prescricao = nr_prescricao_p;

			if (coalesce(cd_local_estoque_w::text, '') = '') then

		      	select	max(a.cd_local_estoque)
				into STRICT 	cd_local_estoque_w
				from	prescr_mat_hor b,
						prescr_material a
				where	a.nr_prescricao 	= b.nr_prescricao
				and		b.nr_seq_material 	= a.nr_sequencia
				and		b.nr_prescricao		= nr_prescricao_p
				and		coalesce(b.nr_seq_superior::text, '') = ''
				and		b.nr_sequencia		= nr_seq_horario_w
				and		obter_se_horario_liberado(b.dt_lib_horario, b.dt_horario) = 'S';

			end if;

			nr_seq_turno_w		:= Obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,to_char(dt_reaprazamento_w,'hh24:mi'),cd_local_estoque_w);

			select	max(dt_horario),
					max(nr_seq_lote),
					max(nr_sequencia)
			into STRICT	dt_horario_orig_w,
					nr_seq_lote_w,
					nr_sequencia_w
			from	prescr_mat_hor
			where	nr_prescricao	= nr_prescricao_p
			and		nr_seq_material	= nr_seq_solucao_p
			and		nr_sequencia 	= nr_seq_horario_w
			and		ie_agrupador	= 8;

			qt_reaprazamento_w	:= (dt_reaprazamento_w - dt_horario_orig_w) * 1440;

			update	prescr_mat_hor
			set		dt_horario = dt_reaprazamento_w,
					dt_atualizacao 	= clock_timestamp(),
					nm_usuario_reaprazamento = nm_usuario_w,
					qt_hor_reaprazamento = qt_reaprazamento_w,
					nr_seq_turno	= nr_seq_turno_w
			where	nr_prescricao	= nr_prescricao_p
			and		nr_seq_material	= nr_seq_solucao_p
			and		nr_sequencia 	= nr_seq_horario_w
			and		ie_agrupador	= 8;

			GET DIAGNOSTICS ora2pg_rowcount = ROW_COUNT;


			if ( ora2pg_rowcount > 0) then
				reaprazar_associados_sne(	dt_horario_orig_w,
											nr_seq_turno_w,
											dt_reaprazamento_w,
											qt_reaprazamento_w,
											nm_usuario_w	);
			end if;

			qt_minutos_w	:= (trunc(dt_reaprazamento_w,'mi') - trunc(dt_horario_orig_w,'mi')) * 1440;

			if (coalesce(ie_gera_lote_w, 'N') = 'S') or
				((coalesce(ie_gera_lote_w, 'N') = 'A') and (qt_minutos_w < 0)) or
				((coalesce(ie_gera_lote_w, 'N') = 'T') and (qt_minutos_w > 0)) or
				((coalesce(ie_gera_lote_w, 'N') = 'U') and (dt_reaprazamento_w >= clock_timestamp())) then
				CALL Gerar_Lote_Reapr_Prescr(nr_prescricao_p, nr_seq_solucao_p, nr_sequencia_w, 'N', nm_usuario_w, 'RHIP');
			end if;

			gerar_evento_reaprazamento_sol(true, null);

			--verifica se existe processo para o horario
			select	coalesce(max(nr_seq_processo),0)
			into STRICT	nr_seq_processo_w
			from	prescr_mat_hor
			where	nr_sequencia = nr_seq_horario_w;

			if (nr_seq_processo_w > 0) then

				select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
				into STRICT	ie_outros_horarios_w
				from	prescr_mat_hor
				where	nr_seq_processo	= nr_seq_processo_w
				and		nr_sequencia	<> nr_seq_horario_w
				and		coalesce(nr_seq_superior::text, '') = ''
				and		obter_se_horario_liberado(dt_lib_horario, dt_horario) = 'S';

				if (ie_outros_horarios_w = 'N') then
					update	adep_processo
					set		dt_horario_processo	= dt_reaprazamento_w
					where	nr_sequencia		= nr_seq_processo_w;
				else

					nr_seq_novo_processo_w := adep_desdobrar_processo(nr_seq_processo_w, nr_seq_horario_w, null, Wheb_usuario_pck.get_nm_usuario, nr_seq_novo_processo_w);

					update	adep_processo
					set		dt_horario_processo	= dt_reaprazamento_w
					where	nr_sequencia		= nr_seq_novo_processo_w;

				end if;

			end if;

			select	max(cd_setor_atendimento),
					max(cd_local_estoque)
			into STRICT	cd_setor_atendimento_w ,
					cd_local_estoque_w
			from	prescr_medica
			where	nr_prescricao = nr_prescricao_p;

			if (qt_reaprazamento_w <> 0) then
				if (ie_reaprazar_seguintes_p = 'S') then
					open c03;
					loop
					fetch c03 into
						nr_sequencia_w,
						dt_horario_orig_w;
					EXIT WHEN NOT FOUND; /* apply on c03 */

						dt_reaprazamento_w	:= dt_horario_orig_w + qt_reaprazamento_w/1440;

			            if (coalesce(cd_local_estoque_w::text, '') = '') then

		                  	select	max(a.cd_local_estoque)
							into STRICT 	cd_local_estoque_w
							from	prescr_mat_hor b,
									prescr_material a
							where	a.nr_prescricao 	= b.nr_prescricao
							and		b.nr_seq_material 	= a.nr_sequencia
							and		b.nr_prescricao		= nr_prescricao_p
							and		coalesce(b.nr_seq_superior::text, '') = ''
							and		b.nr_sequencia		= nr_sequencia_w
							and		obter_se_horario_liberado(b.dt_lib_horario, b.dt_horario) = 'S';
						end if;

						nr_seq_turno_w		:= Obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,to_char(dt_reaprazamento_w,'hh24:mi'),cd_local_estoque_w);

						update	prescr_mat_hor
						set		dt_horario 	= dt_reaprazamento_w,
								dt_atualizacao 	= clock_timestamp(),
								nm_usuario_reaprazamento = nm_usuario_w,
								qt_hor_reaprazamento = qt_reaprazamento_w,
								nr_seq_turno = nr_seq_turno_w
						where	nr_sequencia = nr_sequencia_w;

						GET DIAGNOSTICS ora2pg_rowcount = ROW_COUNT;


						if ( ora2pg_rowcount > 0) then
							reaprazar_associados_sne(	dt_horario_orig_w,
														nr_seq_turno_w,
														dt_reaprazamento_w,
														qt_reaprazamento_w,
														nm_usuario_w	);
						end if;

						qt_minutos_w	:= (trunc(dt_reaprazamento_w,'mi') - trunc(dt_horario_orig_w,'mi')) * 1440;

			            if (coalesce(ie_gera_lote_w, 'N') = 'S') or
							((coalesce(ie_gera_lote_w, 'N') = 'A') and (qt_minutos_w < 0)) or
							((coalesce(ie_gera_lote_w, 'N') = 'T') and (qt_minutos_w > 0)) or
							((coalesce(ie_gera_lote_w, 'N') = 'U') and (dt_reaprazamento_w >= clock_timestamp())) then
							CALL Gerar_Lote_Reapr_Prescr(nr_prescricao_p, nr_seq_solucao_p, nr_sequencia_w, 'N', nm_usuario_w, 'RHIP');
						end if;

						gerar_evento_reaprazamento_sol(true, nr_sequencia_w);

						select	coalesce(max(nr_seq_processo),0)
						into STRICT	nr_seq_processo_w
						from	prescr_mat_hor
						where	nr_sequencia = nr_sequencia_w;

						if (nr_seq_processo_w > 0) then

							select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
							into STRICT	ie_outros_horarios_w
							from	prescr_mat_hor
							where	nr_seq_processo	= nr_seq_processo_w
							and		nr_sequencia	<> nr_sequencia_w
							and		coalesce(nr_seq_superior::text, '') = ''
							and		obter_se_horario_liberado(dt_lib_horario, dt_horario) = 'S';

							if (ie_outros_horarios_w = 'N') then

								update	adep_processo
								set		dt_horario_processo	= dt_reaprazamento_w
								where	nr_sequencia		= nr_seq_processo_w;

							else

								nr_seq_novo_processo_w := adep_desdobrar_processo(nr_seq_processo_w, nr_seq_horario_w, null, Wheb_usuario_pck.get_nm_usuario, nr_seq_novo_processo_w);

								update	adep_processo
								set		dt_horario_processo	= dt_reaprazamento_w
								where	nr_sequencia		= nr_seq_novo_processo_w;

							end if;

						end if;

					end loop;
					close c03;
				end if;

				if (ie_reaprazar_item_ciclo_p = 'S') then
					open c04;
					loop
					fetch c04 into
						nr_sequencia_w,
						dt_horario_orig_w;
					EXIT WHEN NOT FOUND; /* apply on c04 */

						dt_reaprazamento_w	:= dt_horario_orig_w + qt_reaprazamento_w/1440;

						update	prescr_mat_hor
						set	dt_horario 	= dt_reaprazamento_w,
							dt_atualizacao 	= clock_timestamp(),
							nm_usuario_reaprazamento = nm_usuario_w,
							qt_hor_reaprazamento = qt_reaprazamento_w
						where	nr_sequencia = nr_sequencia_w;

						if (ie_gera_lote_w = 'U') and (dt_reaprazamento_w >= clock_timestamp()) then
							CALL Gerar_Lote_Reapr_Prescr(nr_prescricao_p, nr_seq_solucao_p, nr_sequencia_w, 'N', nm_usuario_w, 'RHIP');
						end if;

						gerar_evento_reaprazamento_sol(true, nr_sequencia_w);

					end loop;
					close c04;
				end if;
			end if;
			end;

		end if;
	end;

	procedure Reaprazar_hemocomponentes is

	nr_sequencia_w		prescr_proc_hor.nr_sequencia%type;

	c03 CURSOR FOR
	SELECT	a.nr_sequencia,
			a.dt_horario
	from	prescr_proc_hor a
	where	a.nr_prescricao	= nr_prescricao_p
	and		a.nr_seq_procedimento	= nr_seq_solucao_p
	and		((a.nr_sequencia > nr_seq_horario_p) or (nr_etapa > nr_etapa_hm_w))
	order by
			a.dt_horario;

	begin

		ie_alteracao_w := 34;

		select 	max(nr_seq_hemo_cpoe)
		into STRICT 	nr_seq_cpoe_w
		from 	prescr_solic_bco_sangue
		where 	nr_prescricao 	= nr_prescricao_p;

		if (nr_seq_cpoe_w IS NOT NULL AND nr_seq_cpoe_w::text <> '') then

			select 	coalesce(max('S'), 'N')
			into STRICT 	ie_pos_validade_w
			from 	cpoe_hemoterapia
			where 	nr_sequencia = nr_seq_cpoe_w
			and 	dt_reaprazamento_w >= dt_liberacao;

			select 	coalesce(max('S'), 'N')
			into STRICT 	ie_depois_validade_w
			from 	cpoe_hemoterapia
			where 	nr_sequencia = nr_seq_cpoe_w
			and		dt_reaprazamento_w >= dt_liberacao
			and (coalesce(dt_fim::text, '') = '' or dt_reaprazamento_w <= dt_fim);

		else

			select	coalesce(max('S'), 'N')
			into STRICT	ie_pos_validade_w
			from	prescr_medica
			where	nr_prescricao = nr_prescricao_p
			and		dt_reaprazamento_w >= dt_inicio_prescr;

			select	coalesce(max('S'), 'N')
			into STRICT	ie_depois_validade_w
			from	prescr_medica
			where	nr_prescricao = nr_prescricao_p
			and		dt_reaprazamento_w >= dt_inicio_prescr
			and (coalesce(dt_validade_prescr::text, '') = '' or dt_reaprazamento_w <= dt_validade_prescr);

		end if;

		if (Wheb_assist_pck.ObterParametroFuncao(1113, 396) = 'N') and (ie_pos_validade_w = 'N') then
			--O horario desejado esta fora da validade da prescricao. Parametro [396].
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(173050);
		end if;

		if (Wheb_assist_pck.ObterParametroFuncao(1113, 493) = 'N') and (ie_depois_validade_w = 'N') then
			--O horario desejado esta fora do periodo da validade da prescricao! Parametro [493].
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(204164);
		end if;

		nr_etapa_hm_w	:= null;

		if (coalesce(nr_seq_horario_p,0) = 0) then
			nr_etapa_hm_w	:= obter_etapas_adep_sol(3, nr_prescricao_p, nr_seq_solucao_p);
			--Caso a solucao nao tiver sido iniciada ainda, retornara 0, entao precisa incrementar. Nao existe etapa 0.
			if (nr_etapa_hm_w = 0) then
				nr_etapa_hm_w	:= 1;
			end if;

		end if;

		update	prescr_procedimento
		set		dt_status       = dt_reaprazamento_w
		where	nr_prescricao	= nr_prescricao_p
		and		nr_sequencia	= nr_seq_solucao_p
		and		(nr_seq_solic_sangue IS NOT NULL AND nr_seq_solic_sangue::text <> '')
		and		(nr_seq_derivado IS NOT NULL AND nr_seq_derivado::text <> '');

		-- Apresentar os hemocomponentes por horario
		if (Wheb_assist_pck.ObterParametroFuncao(1113, 440) = 'S') then

			select	coalesce(max('N'), 'S')
			into STRICT	ie_registro_valido_w
			from	prescr_proc_hor b
			where	b.nr_prescricao	= nr_prescricao_p
			and		b.nr_seq_procedimento = nr_seq_solucao_p
			and		b.dt_horario = dt_inicio_p
			and		coalesce(b.dt_suspensao::text, '') = ''
			and		Obter_se_horario_liberado(b.dt_lib_horario, b.dt_horario) = 'S'
			and		coalesce(b.ie_horario_especial, 'N') <> 'S';

			if (ie_registro_valido_w = 'N') then
				--O horario desejado informado ja esta previsto/prescrito para este item!
				CALL Wheb_mensagem_pck.exibir_mensagem_abort(218933);
			end if;

		end if;

		if (nr_etapa_hm_w IS NOT NULL AND nr_etapa_hm_w::text <> '') then

			select 	max(a.dt_horario)
			into STRICT 	dt_horario_etapa_proxima_w
			from 	prescr_proc_hor a
			where 	a.nr_prescricao = nr_prescricao_p
			and   	a.nr_seq_procedimento = nr_seq_solucao_p
			and   	a.nr_etapa = nr_etapa_hm_w + 1;

			select 	max(a.dt_horario)
			into STRICT 	dt_horario_etapa_anterior_w
			from 	prescr_proc_hor a
			where 	a.nr_prescricao = nr_prescricao_p
			and   	a.nr_seq_procedimento = nr_seq_solucao_p
			and   	a.nr_etapa = nr_etapa_hm_w - 1;

			if (ie_reaprazar_seguintes_p = 'N'
				and (dt_horario_etapa_proxima_w IS NOT NULL AND dt_horario_etapa_proxima_w::text <> '')
				and dt_reaprazamento_w > dt_horario_etapa_proxima_w) then
				--Nao e possivel reaprazar o horario para uma data maior a data da proxima etapa
				CALL Wheb_mensagem_pck.exibir_mensagem_abort(1063558);
			end if;

			if (ie_reaprazar_seguintes_p = 'N'
				and (dt_horario_etapa_anterior_w IS NOT NULL AND dt_horario_etapa_anterior_w::text <> '')
				and dt_reaprazamento_w < dt_horario_etapa_anterior_w) then
				--Nao e possivel reaprazar o horario para uma data menor a data da etapa anterior
				CALL Wheb_mensagem_pck.exibir_mensagem_abort(1063566);
			end if;

			select 	max(dt_horario)
			into STRICT	dt_horario_orig_w
			from	prescr_proc_hor
			where	nr_prescricao	= nr_prescricao_p
			and		nr_seq_procedimento	= nr_seq_solucao_p
			and		nr_etapa	 = nr_etapa_hm_w;

			qt_reaprazamento_w	:= (dt_reaprazamento_w - dt_horario_orig_w) * 1440;

			update	prescr_proc_hor
			set		dt_horario   	= dt_reaprazamento_w,
					dt_atualizacao 	= clock_timestamp(),
					nm_usuario_reaprazamento = nm_usuario_w,
					qt_hor_reaprazamento = qt_reaprazamento_w
			where	nr_prescricao	= nr_prescricao_p
			and		nr_seq_procedimento	= nr_seq_solucao_p
			and		nr_etapa	 = nr_etapa_hm_w;

		else

			select 	min(a.dt_horario)
			into STRICT 	dt_horario_etapa_proxima_w
			from 	prescr_proc_hor a
			where 	a.nr_prescricao = nr_prescricao_p
			and   	a.nr_seq_procedimento = nr_seq_solucao_p
			and   	a.nr_sequencia > nr_seq_horario_p;

			select 	max(a.dt_horario)
			into STRICT 	dt_horario_etapa_anterior_w
			from 	prescr_proc_hor a
			where 	a.nr_prescricao = nr_prescricao_p
			and   	a.nr_seq_procedimento = nr_seq_solucao_p
			and   	a.nr_sequencia < nr_seq_horario_p;

			if (ie_reaprazar_seguintes_p = 'N'
				and (dt_horario_etapa_proxima_w IS NOT NULL AND dt_horario_etapa_proxima_w::text <> '')
				and dt_reaprazamento_w > dt_horario_etapa_proxima_w) then
				--Nao e possivel reaprazar o horario para uma data maior a data da proxima etapa
				CALL Wheb_mensagem_pck.exibir_mensagem_abort(1063558);
			end if;

			if (ie_reaprazar_seguintes_p = 'N'
				and (dt_horario_etapa_anterior_w IS NOT NULL AND dt_horario_etapa_anterior_w::text <> '')
				and dt_reaprazamento_w < dt_horario_etapa_anterior_w) then
				--Nao e possivel reaprazar o horario para uma data menor a data da etapa anterior
				CALL Wheb_mensagem_pck.exibir_mensagem_abort(1063566);
			end if;

			select 	max(dt_horario)
			into STRICT	dt_horario_orig_w
			from	prescr_proc_hor
			where	nr_prescricao	= nr_prescricao_p
			and		nr_sequencia 	= nr_seq_horario_p;

			qt_reaprazamento_w	:= (dt_reaprazamento_w - dt_horario_orig_w) * 1440;

			update	prescr_proc_hor
			set		dt_horario   	= dt_reaprazamento_w,
					dt_atualizacao 	= clock_timestamp(),
					nm_usuario_reaprazamento = nm_usuario_w,
					qt_hor_reaprazamento = qt_reaprazamento_w
			where	nr_sequencia = nr_seq_horario_p;

		end if;

		select	max(nr_seq_proc_cpoe)
		into STRICT	nr_seq_cpoe_w
		from	prescr_procedimento
		where	nr_prescricao	= nr_prescricao_p
		and		nr_sequencia	= nr_seq_solucao_p;

		gerar_evento_reaprazamento_sol(false, null);

		if (qt_reaprazamento_w <> 0) then
			if (ie_reaprazar_seguintes_p = 'S') then
				open c03;
				loop
				fetch c03 into
					nr_sequencia_w,
					dt_horario_orig_w;
				EXIT WHEN NOT FOUND; /* apply on c03 */

					dt_reaprazamento_w	:= dt_horario_orig_w + qt_reaprazamento_w/1440;

					update	prescr_proc_hor
					set		dt_horario 	= dt_reaprazamento_w,
							dt_atualizacao 	= clock_timestamp(),
							nm_usuario_reaprazamento = nm_usuario_w,
							qt_hor_reaprazamento = qt_reaprazamento_w
					where	nr_sequencia = nr_sequencia_w;

					gerar_evento_reaprazamento_sol(false, nr_sequencia_w);

				end loop;
				close c03;
			end if;
		end if;

	end;



	procedure reapazar_suplementos is
		ie_registro_valido_w char(1);
	begin
		select	coalesce(max('N'),'S')
		into STRICT	ie_registro_valido_w
		from	prescr_medica 	a,
				prescr_material	b,
				cpoe_dieta 		c
		where	a.nr_prescricao = b.nr_prescricao
		and		b.nr_seq_dieta_cpoe = c.nr_sequencia
		and		dt_reaprazamento_w > coalesce(CASE WHEN coalesce(c.dt_lib_suspensao::text, '') = '' THEN  c.dt_fim  ELSE coalesce(c.dt_suspensao,c.dt_fim) END , a.dt_validade_prescr)
		and		b.nr_prescricao = nr_prescricao_p
		and		b.nr_sequencia = nr_seq_solucao_p
		and		b.ie_agrupador = 12
		and		(b.nr_seq_dieta_cpoe IS NOT NULL AND b.nr_seq_dieta_cpoe::text <> '') LIMIT 1;

		if (ie_registro_valido_w = 'N') then

			select	max(c.dt_suspensao),
					max(c.dt_fim)
			into STRICT	dt_suspensao_cpoe_w,
					dt_fim_cpoe_w
			from	prescr_medica a,
					prescr_material b,
					cpoe_dieta c
			where	a.nr_prescricao = b.nr_prescricao
			and		b.nr_seq_dieta_cpoe = c.nr_sequencia
			and		b.nr_prescricao = nr_prescricao_p
			and		b.nr_sequencia = nr_seq_solucao_p
			and		b.ie_agrupador = 12
			and		(b.nr_seq_dieta_cpoe IS NOT NULL AND b.nr_seq_dieta_cpoe::text <> '')
			and             c.cd_funcao_origem = 2314 LIMIT 1;

			if (dt_suspensao_cpoe_w IS NOT NULL AND dt_suspensao_cpoe_w::text <> '' AND dt_inicio_p > dt_suspensao_cpoe_w) then
				-- A data do aprazamento nao pode ser superior a data de suspensao do item: Suspenso em
				ds_msg_w	:= wheb_mensagem_pck.get_Texto(820331, null) || ' ' || PKG_DATE_FORMATERS_TZ.TO_VARCHAR(dt_suspensao_cpoe_w, 'timestamp', ESTABLISHMENT_TIMEZONE_UTILS.getTimeZone);
				CALL wheb_mensagem_pck.exibir_mensagem_abort(ds_msg_w);
			elsif (dt_fim_cpoe_w IS NOT NULL AND dt_fim_cpoe_w::text <> '' AND dt_inicio_p > dt_fim_cpoe_w) then
				--O horario informado esta fora do periodo de validade do item na CPOE. Data de fim:
				ds_msg_w	:= wheb_mensagem_pck.get_Texto(820333, null) || ' ' || PKG_DATE_FORMATERS_TZ.TO_VARCHAR(dt_fim_cpoe_w, 'timestamp', ESTABLISHMENT_TIMEZONE_UTILS.getTimeZone);
				CALL wheb_mensagem_pck.exibir_mensagem_abort(ds_msg_w);
			end if;

		end if;

		update	nut_pac
		set		dt_status 		= dt_reaprazamento_w
		where	nr_prescricao	= nr_prescricao_p
		and		nr_sequencia	= nr_seq_solucao_p;

		update	nut_paciente_hor
		set		dt_horario 		= dt_reaprazamento_w
		where	nr_seq_nut_protocolo = nr_seq_solucao_p;

		gerar_evento_reaprazamento_sol(false, null);

	end;



begin

nm_usuario_w	:= coalesce(nm_usuario_p, Wheb_usuario_pck.get_nm_usuario);
CALL wheb_assist_pck.set_informacoes_usuario(obter_estabelecimento_ativo, obter_perfil_ativo, nm_usuario_w);
ie_gera_lote_w	:= wheb_assist_pck.obterParametroFuncao(1113,145);
ie_consiste_lote_atendido_w	:= wheb_assist_pck.obterParametroFuncao(1113,162);

if (ie_tipo_solucao_p IS NOT NULL AND ie_tipo_solucao_p::text <> '') and (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') and (nr_seq_solucao_p IS NOT NULL AND nr_seq_solucao_p::text <> '') and (dt_inicio_p IS NOT NULL AND dt_inicio_p::text <> '') and (nm_usuario_w IS NOT NULL AND nm_usuario_w::text <> '') then

	dt_reaprazamento_w	:= dt_inicio_p;

	ie_alteracao_w		:= 13;

	cd_usuario_w	:= obter_dados_usuario_opcao(nm_usuario_w, 'C');

	select	max(cd_estabelecimento)
	into STRICT	cd_estabelecimento_w
	from	prescr_medica
	where	nr_prescricao = nr_prescricao_p;

	if (ie_tipo_solucao_p = 1) then--Solucao
		Reaprazar_solucao;

	elsif (ie_tipo_solucao_p = 2) then--Enteral
		Reaprazar_sne;

	elsif (ie_tipo_solucao_p = 3) then--Homocomponente
		Reaprazar_hemocomponentes;

	elsif (ie_tipo_solucao_p = 4) then--Dieta Oral
		update	nut_paciente
		set		dt_status 		= dt_reaprazamento_w
		where	nr_prescricao	= nr_prescricao_p
		and		nr_sequencia	= nr_seq_solucao_p;

		update	nut_paciente_hor
		set		dt_horario 		= dt_reaprazamento_w
		where	nr_seq_nut_protocolo = nr_seq_solucao_p;

		gerar_evento_reaprazamento_sol(false, null);

	elsif (ie_tipo_solucao_p in (5,6)) then-- Suplementos
		reapazar_suplementos;
	end if;

end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE modificar_data_inicio_solucao ( ie_tipo_solucao_p bigint, nr_prescricao_p bigint, nr_seq_solucao_p bigint, nr_seq_horario_p bigint, dt_inicio_p timestamp, nr_seq_motivo_p bigint, ds_observacao_p text, nr_etapa_atual_p bigint, nm_usuario_p text, ie_reaprazar_seguintes_p text, nr_ciclo_p bigint, ie_reaprazar_item_ciclo_p text, ds_inconsist_lote_p INOUT text) FROM PUBLIC;

