-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gedipa_gerar_requisicao_transf ( nr_requisicao_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, cd_material_p bigint, qt_material_p bigint, cd_local_estoque_p bigint, cd_local_destino_p bigint, cd_operacao_estoque_p bigint, nr_seq_lote_fornec_p bigint, cd_motivo_baixa_p bigint, ie_liberar_p text, nr_sequencia_p INOUT bigint, ds_erro_p INOUT text) AS $body$
DECLARE


nr_sequencia_w			bigint;
cd_unidade_medida_w		varchar(30);
cd_unidade_medida_estoque_w	varchar(30);
qt_conv_estoque_cons_w		double precision;
qt_estoque_w			double precision;
ds_erro_w			varchar(2000);
nr_seq_erro_w			bigint;
nr_item_requisicao_w			bigint;
qt_atendida_w			double precision;
cd_pessoa_requisitante_w	bigint;
qt_existe_requisicao_w		varchar(1);

/*594158*/

c01 CURSOR FOR
SELECT	nr_sequencia,
	qt_material_requisitada
from	item_requisicao_material
where	nr_requisicao = nr_requisicao_p;
	

BEGIN

cd_pessoa_requisitante_w := substr(obter_pessoa_fisica_usuario(nm_usuario_p,'C'),1,10);

if (coalesce(nr_requisicao_p::text, '') = '') or (nr_requisicao_p = 0) then
	begin
	
	select	nextval('requisicao_seq')
	into STRICT	nr_sequencia_w
	;
	
	nr_sequencia_p := nr_sequencia_w;
	
	insert into requisicao_material(
		nr_requisicao,
		cd_estabelecimento,
		cd_local_estoque,
		dt_solicitacao_requisicao,
		dt_atualizacao,
		nm_usuario,
		cd_operacao_estoque,
		cd_pessoa_requisitante,
		cd_local_estoque_destino,
		nm_usuario_lib,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		ie_geracao,
		ie_urgente)
	values (	nr_sequencia_w,
		cd_estabelecimento_p,
		cd_local_estoque_p,
		clock_timestamp(),
		clock_timestamp(),
		nm_usuario_p,
		cd_operacao_estoque_p,
		cd_pessoa_requisitante_w,
		cd_local_destino_p,
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		'I',
		'N');
	
	end;
else
	begin
	
	select	coalesce(max(nr_sequencia),0) + 1
	into STRICT	nr_sequencia_w
	from	item_requisicao_material
	where	nr_requisicao = nr_requisicao_p;
	
	cd_unidade_medida_w 		:= obter_dados_material_estab(cd_material_p,cd_estabelecimento_p,'UMS');
	cd_unidade_medida_estoque_w 	:= obter_dados_material_estab(cd_material_p,cd_estabelecimento_p,'UME');
	qt_conv_estoque_cons_w 		:= obter_conversao_material(cd_material_p,'CE');
	
	insert into item_requisicao_material(
		nr_requisicao,
		nr_sequencia,
		cd_estabelecimento,
		cd_material,
		qt_material_requisitada,
		vl_material,
		dt_atualizacao,
		nm_usuario,
		cd_unidade_medida,
		qt_estoque,
		cd_unidade_medida_estoque,
		nr_seq_lote_fornec)
	values ( nr_requisicao_p,
		nr_sequencia_w,
		cd_estabelecimento_p,
		cd_material_p,
		qt_material_p,
		0,
		clock_timestamp(),
		nm_usuario_p,
		cd_unidade_medida_w,
		qt_estoque_w,
		cd_unidade_medida_estoque_w,
		nr_seq_lote_fornec_p);
	
	end;
end if;
	
commit;

if (ie_liberar_p = 'S') then
	ds_erro_p := consistir_requisicao(nr_requisicao_p, nm_usuario_p, cd_local_destino_p, null, 'N', 'N', 'N', 'N', 'S', 'N', 'N', cd_operacao_estoque_p, ds_erro_p);
	
	select	coalesce(max(nr_sequencia),0)
	into STRICT	nr_seq_erro_w
	from	requisicao_mat_consist
	where	nr_requisicao = nr_requisicao_p;
	
	if (coalesce(nr_seq_erro_w,0) <> 0) then
		select	coalesce(substr(cd_material || ' - ' || ds_consistencia,1,2000),null)
		into STRICT	ds_erro_p
		from	requisicao_mat_consist
		where	nr_sequencia = nr_seq_erro_w;
	end if;
	
	select	coalesce(max('S'), 'N')
	into STRICT	qt_existe_requisicao_w
	from	item_requisicao_material a
	where	a.nr_requisicao	= nr_requisicao_p  LIMIT 1;
	
	if (qt_existe_requisicao_w = 'S' and coalesce(cd_motivo_baixa_p, 0) > 0) then
		update	requisicao_material
		set		dt_baixa		= clock_timestamp()
		where	nr_requisicao	= nr_requisicao_p;
	end if;
	
	open C01;
	loop
	fetch C01 into	
		nr_item_requisicao_w,
		qt_atendida_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		ds_erro_p := gerar_movto_estoque_req(nr_requisicao_p, nr_item_requisicao_w, cd_operacao_estoque_p, qt_atendida_w, clock_timestamp(), cd_motivo_baixa_p, '1', 'N', nm_usuario_p, 0, ds_erro_p);
		end;
	end loop;
	close C01;
				
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gedipa_gerar_requisicao_transf ( nr_requisicao_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, cd_material_p bigint, qt_material_p bigint, cd_local_estoque_p bigint, cd_local_destino_p bigint, cd_operacao_estoque_p bigint, nr_seq_lote_fornec_p bigint, cd_motivo_baixa_p bigint, ie_liberar_p text, nr_sequencia_p INOUT bigint, ds_erro_p INOUT text) FROM PUBLIC;

