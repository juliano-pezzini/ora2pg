-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ctb_gerar_movto_rateio_conta ( nr_seq_movimento_p bigint, nr_seq_crit_rateio_p bigint, ie_debito_credito_p text, nm_usuario_p text) AS $body$
DECLARE


cd_conta_contabil_w			varchar(20);
cd_conta_debito_w				varchar(20);
cd_conta_credito_w			varchar(20);
cd_classif_debito_w			varchar(40);
cd_classif_credito_w			varchar(40);
cd_historico_w				bigint;
ds_compl_historico_w			varchar(255);
dt_movimento_w				timestamp;
pr_rateio_w				double precision;
nr_lote_contabil_w				bigint;
nr_seq_agrupamento_w			bigint;
nr_seq_mes_ref_w				bigint;
nr_sequencia_w				bigint;
vl_movimento_w				double precision;
vl_rateio_w				double precision;
vl_total_rateio_w				double precision;

c01 CURSOR FOR
SELECT	a.cd_conta_contabil,
	a.pr_rateio
from	ctb_criterio_rateio_item a
where	a.nr_seq_criterio	= nr_seq_crit_rateio_p
and	substr(obter_se_conta_vigente(a.cd_conta_contabil, clock_timestamp()),1,1) = 'S';


BEGIN

select	nr_lote_contabil,
	vl_movimento,
	dt_movimento,
	cd_historico,
	nr_seq_agrupamento,
	ds_compl_historico
into STRICT	nr_lote_contabil_w,
	vl_movimento_w,
	dt_movimento_w,
	cd_historico_w,
	nr_seq_agrupamento_w,
	ds_compl_historico_w
from	ctb_movimento
where	nr_sequencia	= nr_seq_movimento_p;

select	max(nr_seq_mes_ref)
into STRICT	nr_seq_mes_ref_w
from	lote_contabil
where	nr_lote_contabil	= nr_lote_contabil_w;


vl_total_rateio_w	:= 0;

open C01;
loop
fetch C01 into
	cd_conta_contabil_w,
	pr_rateio_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	cd_conta_debito_w	:= '';
	cd_conta_credito_w	:= '';
	cd_classif_debito_w	:= '';
	cd_classif_credito_w	:= '';
	vl_rateio_w		:= coalesce(dividir(vl_movimento_w * pr_rateio_w, 100),0);
	vl_total_rateio_w	:= vl_total_rateio_w + vl_rateio_w;

	if (coalesce(cd_conta_contabil_w,'X') = 'X') then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(192701);
	end if;

	if (vl_rateio_w <> 0) then

		if (ie_debito_credito_p = 'D') then
			cd_conta_debito_w	:= cd_conta_contabil_w;
			cd_classif_debito_w	:= substr(ctb_obter_classif_conta(cd_conta_contabil_w, null, clock_timestamp()),1,40);
		elsif (ie_debito_credito_p = 'C') then
			cd_conta_credito_w	:= cd_conta_contabil_w;
			cd_classif_credito_w	:= substr(ctb_obter_classif_conta(cd_conta_contabil_w, null, clock_timestamp()),1,40);
		end if;

		select	nextval('ctb_movimento_seq')
		into STRICT	nr_sequencia_w
		;

		insert into ctb_movimento(
			nr_sequencia,
			nr_lote_contabil,
			nr_seq_mes_ref,
			dt_movimento,
			cd_conta_debito,
			cd_conta_credito,
			cd_classif_debito,
			cd_classif_credito,
			vl_movimento,
			cd_historico,
			ds_compl_historico,
			nr_seq_agrupamento,
			ie_revisado,
			cd_estabelecimento,
			nm_usuario,
			dt_atualizacao,
			nm_usuario_nrec,
			dt_atualizacao_nrec)
		values (	nr_sequencia_w,
			nr_lote_contabil_w,
			nr_seq_mes_ref_w,
			dt_movimento_w,
			cd_conta_debito_w,
			cd_conta_credito_w,
			cd_classif_debito_w,
			cd_classif_credito_w,
			vl_rateio_w,
			cd_historico_w,
			ds_compl_historico_w,
			nr_seq_agrupamento_w,
			'N',
			null,
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp());
	end if;

	end;
end loop;
close C01;

if (vl_total_rateio_w <> vl_movimento_w) then
	begin
	vl_rateio_w	:= vl_movimento_w - vl_total_rateio_w;

	update	ctb_movimento
	set	vl_movimento	= vl_movimento + vl_rateio_w
	where	nr_sequencia	= nr_sequencia_w;

	end;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_gerar_movto_rateio_conta ( nr_seq_movimento_p bigint, nr_seq_crit_rateio_p bigint, ie_debito_credito_p text, nm_usuario_p text) FROM PUBLIC;

