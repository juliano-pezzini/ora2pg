-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE lab_relatorio_retorno (NM_USUARIO_P text, CD_CONVENIO_P bigint, CD_MEDICO_P bigint, NR_SEQ_EXAME_P bigint, CD_PACIENTE_P bigint, CD_MOTIVO_BAIXA_P bigint, NR_SEQ_GRUPO_EXAME_P bigint, CD_SETOR_COLETA_P bigint, CD_SETOR_ENTREGA_P bigint, IE_SETOR_USUARIO_P bigint, IE_PACIENTE_P bigint, IE_TIPO_EXAME_P bigint, IE_TIPO_QUEBRA_P bigint, DT_INICIAL_P timestamp, DT_FINAL_P timestamp) AS $body$
DECLARE


C01							integer;
RETORNO_W				    bigint;
SQL_RESTRICAO_W				varchar(4000);
CD_SETOR_ATEND_USER_W		bigint;
NR_ATENDIMENTO_W			bigint;
DT_PRESCRICAO_W				timestamp;
CD_PACIENTE_W				bigint;
CD_MEDICO_W					bigint;
IE_TIPO_ATENDIMENTO_W		bigint;
CD_PROCEDIMENTO_W			numeric(38);
QT_PROCEDIMENTO_W			bigint;
DT_BAIXA_W					timestamp;
CD_MOTIVO_BAIXA_W			bigint;
CD_SETOR_W					bigint;


BEGIN

SQL_RESTRICAO_W:='SELECT T.NR_ATENDIMENTO ,
						 D.DT_PRESCRICAO,
						 B.CD_PESSOA_FISICA CD_PACIENTE,
                         M.CD_PESSOA_FISICA CD_MEDICO,
                         T.IE_TIPO_ATENDIMENTO,
                         P.CD_PROCEDIMENTO ,
                         A.QT_PROCEDIMENTO,
                         A.DT_BAIXA,
                         A.CD_MOTIVO_BAIXA,
                         A.CD_SETOR_ATENDIMENTO
				  FROM   PESSOA_FISICA B,
                         PESSOA_FISICA M,
                         TIPO_BAIXA_PRESCRICAO V,
                         PROCEDIMENTO P,
                         ATENDIMENTO_PACIENTE T,
                         PRESCR_MEDICA D,
                         PRESCR_PROCEDIMENTO A
                  WHERE (B.CD_PESSOA_FISICA = T.CD_PESSOA_FISICA)
                  AND   (D.NR_ATENDIMENTO = T.NR_ATENDIMENTO )
                  AND   (A.CD_PROCEDIMENTO = P.CD_PROCEDIMENTO )
                  AND   (A.NR_PRESCRICAO = D.NR_PRESCRICAO)
                  AND   (D.CD_MEDICO = M.CD_PESSOA_FISICA)
                  AND   (A.CD_MOTIVO_BAIXA = V.CD_TIPO_BAIXA)
				  AND   (V.IE_PRESCRICAO_DEVOLUCAO = ''P'')
                  AND   (V.IE_TIPO_PADRAO <> ''S'')';

-- RESTRIÇÕES
IF (CD_CONVENIO_P IS NOT NULL AND CD_CONVENIO_P::text <> '') THEN
	SQL_RESTRICAO_W:= SQL_RESTRICAO_W || ' AND EXISTS (SELECT *
 		   						   					   FROM ATEND_CATEGORIA_CONVENIO H, CONVENIO C
		   						   					   WHERE T.NR_ATENDIMENTO = H.NR_ATENDIMENTO
		                           					   AND H.CD_CONVENIO = C.CD_CONVENIO
		                           					   AND H.CD_CONVENIO = ' || CD_CONVENIO_P || ')';
END IF;

IF (CD_MEDICO_P IS NOT NULL AND CD_MEDICO_P::text <> '') THEN
	SQL_RESTRICAO_W:= SQL_RESTRICAO_W || ' AND M.CD_PESSOA_FISICA = ' || CD_MEDICO_P;
END IF;

IF (NR_SEQ_EXAME_P IS NOT NULL AND NR_SEQ_EXAME_P::text <> '')THEN
	SQL_RESTRICAO_W:= SQL_RESTRICAO_W || ' AND P.CD_PROCEDIMENTO = '|| NR_SEQ_EXAME_P;
END IF;

IF (CD_PACIENTE_P IS NOT NULL AND CD_PACIENTE_P::text <> '')THEN
	SQL_RESTRICAO_W:= SQL_RESTRICAO_W || ' AND B.CD_PESSOA_FISICA = ' || CD_PACIENTE_P;
END IF;

IF (CD_MOTIVO_BAIXA_P IS NOT NULL AND CD_MOTIVO_BAIXA_P::text <> '')THEN
	SQL_RESTRICAO_W:= SQL_RESTRICAO_W || ' AND V.CD_TIPO_BAIXA = ' || CD_MOTIVO_BAIXA_P;
END IF;

IF (NR_SEQ_GRUPO_EXAME_P IS NOT NULL AND NR_SEQ_GRUPO_EXAME_P::text <> '')THEN
	SQL_RESTRICAO_W:= SQL_RESTRICAO_W || ' AND EXISTS (SELECT 1
													 FROM EXAME_LABORATORIO E
													 WHERE P.CD_PROCEDIMENTO = E.CD_PROCEDIMENTO
													 AND P.IE_ORIGEM_PROCED = E.IE_ORIGEM_PROCED
													AND E.NR_SEQ_GRUPO = ' || NR_SEQ_GRUPO_EXAME_P || ')';
END IF;

IF (CD_SETOR_COLETA_P IS NOT NULL AND CD_SETOR_COLETA_P::text <> '') THEN
	SQL_RESTRICAO_W:= SQL_RESTRICAO_W ||' AND A.CD_SETOR_COLETA = ' || CD_SETOR_COLETA_P;
END IF;

IF (CD_SETOR_ENTREGA_P IS NOT NULL AND CD_SETOR_ENTREGA_P::text <> '')THEN
	SQL_RESTRICAO_W:= SQL_RESTRICAO_W || ' AND A.CD_SETOR_ENTREGA = ' || CD_SETOR_ENTREGA_P;
END IF;

IF (IE_SETOR_USUARIO_P = 0)THEN
	SELECT CD_SETOR_ATENDIMENTO
    INTO STRICT CD_SETOR_ATEND_USER_W
	FROM USUARIO
	WHERE NM_USUARIO = NM_USUARIO_P;
    SQL_RESTRICAO_W:= SQL_RESTRICAO_W || ' AND A.CD_SETOR_ATENDIMENTO = ' || CD_SETOR_ATEND_USER_W;
END IF;

IF (IE_PACIENTE_P = 1)THEN
    SQL_RESTRICAO_W:= SQL_RESTRICAO_W ||' AND EXISTS(SELECT Y.DS_SETOR_ATENDIMENTO
          											 FROM  ATEND_PACIENTE_UNIDADE X,
                										   SETOR_ATENDIMENTO Y
          											 WHERE X.CD_SETOR_ATENDIMENTO = Y.CD_SETOR_ATENDIMENTO
          											 AND   Y.CD_CLASSIF_SETOR IN (3,4,8)
          											 AND X.NR_ATENDIMENTO = T.NR_ATENDIMENTO)';
ELSIF (IE_PACIENTE_P = 2)THEN
	SQL_RESTRICAO_W:= SQL_RESTRICAO_W ||' AND NOT EXISTS(SELECT Y.DS_SETOR_ATENDIMENTO
														 FROM  ATEND_PACIENTE_UNIDADE X,
															   SETOR_ATENDIMENTO Y
														 WHERE  X.CD_SETOR_ATENDIMENTO = Y.CD_SETOR_ATENDIMENTO
														 AND    Y.CD_CLASSIF_SETOR IN (3,4,8)
														 AND    X.NR_ATENDIMENTO = T.NR_ATENDIMENTO)';
END IF;

IF (IE_TIPO_EXAME_P = 5)THEN
	SQL_RESTRICAO_W:= SQL_RESTRICAO_W ||' AND P.CD_TIPO_PROCEDIMENTO BETWEEN 1 AND 4';
ELSIF (IE_TIPO_EXAME_P <> 0) THEN
	SQL_RESTRICAO_W:= SQL_RESTRICAO_W ||' AND P.CD_TIPO_PROCEDIMENTO =' || IE_TIPO_EXAME_P;
END IF;

IF (DT_INICIAL_P IS NOT NULL AND DT_INICIAL_P::text <> '' AND DT_FINAL_P IS NOT NULL AND DT_FINAL_P::text <> '')THEN
	SQL_RESTRICAO_W:= SQL_RESTRICAO_W ||' AND   D.DT_PRESCRICAO BETWEEN TO_DATE('||CHR(39)|| DT_INICIAL_P|| CHR(39)||',''DD/MM/YY HH24:MI:SS'') AND TO_DATE('||CHR(39)|| DT_FINAL_P ||CHR(39)||',''DD/MM/YY HH24:MI:SS'')';
END IF;

IF (IE_TIPO_QUEBRA_P = 0)THEN
	SQL_RESTRICAO_W:= SQL_RESTRICAO_W || ' ORDER BY M.NM_PESSOA_FISICA';
ELSIF (IE_TIPO_QUEBRA_P = 1)THEN
	SQL_RESTRICAO_W:= SQL_RESTRICAO_W || ' ORDER BY P.DS_PROCEDIMENTO';
ELSIF (IE_TIPO_QUEBRA_P = 2)THEN
	SQL_RESTRICAO_W:= SQL_RESTRICAO_W || ' ORDER BY D.DT_PRESCRICAO';
ELSIF (IE_TIPO_QUEBRA_P = 3)THEN
	SQL_RESTRICAO_W:= SQL_RESTRICAO_W || ' ORDER BY A.DT_BAIXA';
ELSIF (IE_TIPO_QUEBRA_P = 4)THEN
	SQL_RESTRICAO_W:= SQL_RESTRICAO_W || ' ORDER BY V.DS_TIPO_BAIXA';
END IF;

CALL EXEC_SQL_DINAMICO(NM_USUARIO_P,'DELETE FROM W_LAB_RELATORIO WHERE NM_USUARIO = ' || CHR(39) || NM_USUARIO_P || CHR(39) );
CALL EXEC_SQL_DINAMICO_BV('',SQL_RESTRICAO_W,NULL);
C01 := DBMS_SQL.OPEN_CURSOR;
DBMS_SQL.PARSE(C01, SQL_RESTRICAO_W, DBMS_SQL.NATIVE);

-- DEFINE AS COLUNAS
DBMS_SQL.DEFINE_COLUMN(C01,1,NR_ATENDIMENTO_W);
DBMS_SQL.DEFINE_COLUMN(C01,2,DT_PRESCRICAO_W);
DBMS_SQL.DEFINE_COLUMN(C01,3,CD_PACIENTE_W);
DBMS_SQL.DEFINE_COLUMN(C01,4,CD_MEDICO_W);
DBMS_SQL.DEFINE_COLUMN(C01,5,IE_TIPO_ATENDIMENTO_W);
DBMS_SQL.DEFINE_COLUMN(C01,6,CD_PROCEDIMENTO_W);
DBMS_SQL.DEFINE_COLUMN(C01,7,QT_PROCEDIMENTO_W);
DBMS_SQL.DEFINE_COLUMN(C01,8,DT_BAIXA_W);
DBMS_SQL.DEFINE_COLUMN(C01,9,CD_MOTIVO_BAIXA_W);
DBMS_SQL.DEFINE_COLUMN(C01,10,CD_SETOR_W);

RETORNO_W := DBMS_SQL.EXECUTE(C01);

WHILE( DBMS_SQL.FETCH_ROWS(C01) > 0 ) LOOP
	BEGIN
     -- LIMPA A VARIAVEL
	NR_ATENDIMENTO_W 		:= NULL;
    DT_PRESCRICAO_W  		:= NULL;
    CD_PACIENTE_W    		:= NULL;
    CD_MEDICO_W	     		:= NULL;
    IE_TIPO_ATENDIMENTO_W   := NULL;
    CD_PROCEDIMENTO_W		:= NULL;
    QT_PROCEDIMENTO_W		:= NULL;
    DT_BAIXA_W				:= NULL;
    CD_MOTIVO_BAIXA_W		:= NULL;
    CD_SETOR_W				:= NULL;

    -- SETA VARIAVEL
    DBMS_SQL.COLUMN_VALUE(C01,1,NR_ATENDIMENTO_W);
	DBMS_SQL.COLUMN_VALUE(C01,2,DT_PRESCRICAO_W);
	DBMS_SQL.COLUMN_VALUE(C01,3,CD_PACIENTE_W);
	DBMS_SQL.COLUMN_VALUE(C01,4,CD_MEDICO_W);
	DBMS_SQL.COLUMN_VALUE(C01,5,IE_TIPO_ATENDIMENTO_W);
	DBMS_SQL.COLUMN_VALUE(C01,6,CD_PROCEDIMENTO_W);
	DBMS_SQL.COLUMN_VALUE(C01,7,QT_PROCEDIMENTO_W);
	DBMS_SQL.COLUMN_VALUE(C01,8,DT_BAIXA_W);
	DBMS_SQL.COLUMN_VALUE(C01,9,CD_MOTIVO_BAIXA_W);
	DBMS_SQL.COLUMN_VALUE(C01,10,CD_SETOR_W);


    INSERT INTO W_LAB_RELATORIO(
    NR_ATENDIMENTO,
    DT_PRESCRICAO,
	CD_MEDICO,
    CD_PESSOA_FISICA,
    IE_TIPO_ATENDIMENTO,
	CD_PROCEDIMENTO,
	QT_PROCEDIMENTO,
    DT_BAIXA,
	CD_MOTIVO_BAIXA,
	CD_SETOR_ATENDIMENTO,
	NM_USUARIO,
    DT_ATUALIZACAO,
    CD_ESTABELECIMENTO
	)
	VALUES (
	NR_ATENDIMENTO_W,
	DT_PRESCRICAO_W,
	CD_MEDICO_W,
	CD_PACIENTE_W,
	IE_TIPO_ATENDIMENTO_W,
	CD_PROCEDIMENTO_W,
	QT_PROCEDIMENTO_W,
	DT_BAIXA_W,
	CD_MOTIVO_BAIXA_W,
	CD_SETOR_W,
	NM_USUARIO_P,
	clock_timestamp(),
    WHEB_USUARIO_PCK.GET_CD_ESTABELECIMENTO
	);

	END;
 END LOOP;
 DBMS_SQL.CLOSE_CURSOR(C01);

 COMMIT;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE lab_relatorio_retorno (NM_USUARIO_P text, CD_CONVENIO_P bigint, CD_MEDICO_P bigint, NR_SEQ_EXAME_P bigint, CD_PACIENTE_P bigint, CD_MOTIVO_BAIXA_P bigint, NR_SEQ_GRUPO_EXAME_P bigint, CD_SETOR_COLETA_P bigint, CD_SETOR_ENTREGA_P bigint, IE_SETOR_USUARIO_P bigint, IE_PACIENTE_P bigint, IE_TIPO_EXAME_P bigint, IE_TIPO_QUEBRA_P bigint, DT_INICIAL_P timestamp, DT_FINAL_P timestamp) FROM PUBLIC;

