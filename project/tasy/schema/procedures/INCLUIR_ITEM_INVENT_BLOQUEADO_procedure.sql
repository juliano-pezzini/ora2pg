-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE incluir_item_invent_bloqueado ( nr_sequencia_p bigint, cd_material_p bigint, nm_usuario_p text) AS $body$
DECLARE


dt_mesano_referencia_w			timestamp;
dt_mesano_vigente_w			timestamp;
cd_material_estoque_w			integer;
cd_local_estoque_w			smallint;
cd_estabelecimento_w			smallint;
ie_situacao_w				varchar(1);
qt_existe_w				bigint;
qt_saldo_w				double precision;
cd_fornecedor_w				varchar(14);
qt_contagem_w				bigint;
ie_tipo_contagem_w			bigint;
ie_contagem_atual_w			bigint;
ie_consignado_w				varchar(1);
ie_mat_consignado_w			varchar(1);
ie_bloqueio_w				varchar(1);


BEGIN
ie_tipo_contagem_w := substr(coalesce(obter_valor_param_usuario(143, 96, Obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w),3),1,1);

select	coalesce(max(cd_material_estoque),0),
	coalesce(max(ie_situacao),'N')
into STRICT	cd_material_estoque_w,
	ie_situacao_w
from	material
where	cd_material = (	SELECT	cd_material_estoque
			from	material
			where	cd_material = cd_material_p);

if (cd_material_estoque_w = 0) then
	--Este material não existe no cadastro.
	CALL wheb_mensagem_pck.exibir_mensagem_abort(206824);
end if;

if (ie_situacao_w = 'I') then
	--O material de estoque ' || cd_material_estoque_w || ' está inativo.
	CALL wheb_mensagem_pck.exibir_mensagem_abort(206825,'CD_MATERIAL_ESTOQUE=' || cd_material_estoque_w);
end if;

ie_mat_consignado_w := substr(obter_Se_mat_consignado(cd_material_estoque_w),1,1);

select	cd_local_estoque,
	cd_estabelecimento,
	cd_fornecedor,
	ie_consignado
into STRICT	cd_local_estoque_w,
	cd_estabelecimento_w,
	cd_fornecedor_w,
	ie_consignado_w
from	inventario
where	nr_sequencia = nr_sequencia_p;

if (ie_consignado_w = 'S') and (ie_mat_consignado_w = 0) then
	--O inventário é consignado e o material não é consignado. O mesmo não pode ser incluso neste inventário!
	CALL wheb_mensagem_pck.exibir_mensagem_abort(206826);
elsif (ie_consignado_w = 'N') and (ie_mat_consignado_w = 1) then
	--O inventário não é consignado e o material é consignado. O mesmo não pode ser incluso neste inventário!
	CALL wheb_mensagem_pck.exibir_mensagem_abort(206827);
elsif (ie_consignado_w = 'S') and (ie_mat_consignado_w <> 0) and (coalesce(cd_fornecedor_w::text, '') = '') then
	--O inventário é consignado, porém não foi informado o fornecedor no inventário. O material não pode ser incluso neste inventário!
	CALL wheb_mensagem_pck.exibir_mensagem_abort(206828);
end if;

ie_bloqueio_w := obter_se_material_bloqueio_inv(cd_estabelecimento_w, cd_material_p, cd_local_estoque_w);

if (ie_bloqueio_w = 'S') then
	--Este material já está bloqueado para inventário!
	CALL wheb_mensagem_pck.exibir_mensagem_abort(206829);
end if;

select	max(dt_mesano_vigente)
into STRICT	dt_mesano_vigente_w
from 	parametro_estoque
where	cd_estabelecimento	= cd_estabelecimento_w;

if (ie_consignado_w = 'N') then
	select	/*+ index (s salesto_i2) */		coalesce(max(s.dt_mesano_referencia),trunc(clock_timestamp(), 'month'))
	into STRICT	dt_mesano_referencia_w
	from 	saldo_estoque s
	where	s.cd_estabelecimento	= cd_estabelecimento_w
	and 	s.cd_material		= cd_material_estoque_w
	and	s.cd_local_estoque	= cd_local_estoque_w
	and 	s.dt_mesano_referencia 	>= dt_mesano_vigente_w;
else
	select	/*+ index (s salesto_i2) */		coalesce(max(s.dt_mesano_referencia),trunc(clock_timestamp(), 'month'))
	into STRICT	dt_mesano_referencia_w
	from 	fornecedor_mat_consignado s
	where	s.cd_fornecedor		= cd_fornecedor_w
	and 	s.cd_material		= cd_material_estoque_w
	and	s.cd_local_estoque	= cd_local_estoque_w
	and 	s.dt_mesano_referencia 	>= dt_mesano_vigente_w
	and	s.cd_estabelecimento	= cd_estabelecimento_w;
end if;

select	count(*)
into STRICT	qt_existe_w
from	inventario_material
where	nr_seq_inventario = nr_sequencia_p
and	cd_material = cd_material_estoque_w;

if (qt_existe_w > 0) then
	--O material de estoque ' || cd_material_estoque_w || ' já está incluso neste inventário.
	CALL wheb_mensagem_pck.exibir_mensagem_abort(206825,'CD_MATERIAL_ESTOQUE=' || cd_material_estoque_w);
end if;

if (ie_consignado_w = 'N') then
	qt_saldo_w := coalesce(obter_saldo_disp_estoque(cd_estabelecimento_w, cd_material_estoque_w, cd_local_estoque_w, dt_mesano_referencia_w),0);
else
	qt_saldo_w := coalesce(obter_saldo_estoque_consig(cd_estabelecimento_w, cd_fornecedor_w, cd_material_estoque_w, cd_local_estoque_w),0);
end if;

select 	coalesce(max(ie_contagem_atual),1)
into STRICT	ie_contagem_atual_w
from 	inventario
where	nr_sequencia = nr_sequencia_p;

if (ie_contagem_atual_w = 2) then
	if (ie_tipo_contagem_w = 1) then
		qt_contagem_w := 0;
	else
		qt_contagem_w := '';
	end if;
elsif (ie_contagem_atual_w > 2)	then
	--O material ' || cd_material_p || ' não pode ser incluso após a Recontagem.
	CALL wheb_mensagem_pck.exibir_mensagem_abort(206830,'CD_MATERIAL=' || cd_material_p);
end if;

insert into inventario_material(
	nr_sequencia,
	nr_seq_inventario,
	dt_atualizacao,
	nm_usuario,
	cd_material,
	qt_saldo,
	dt_atualizacao_nrec,
	nm_usuario_nrec,
	cd_fornecedor,
	qt_contagem)
values (nextval('inventario_material_seq'),
	nr_sequencia_p,
	clock_timestamp(),
	nm_usuario_p,
	cd_material_estoque_w,
	qt_saldo_w,
	clock_timestamp(),
	nm_usuario_p,
	cd_fornecedor_w,
	qt_contagem_w);

if (ie_consignado_w = 'N') then
	begin
	update	saldo_estoque
	set	ie_bloqueio_inventario	= 'S'
	where	cd_material		= cd_material_estoque_w
	and	cd_local_estoque	= cd_local_estoque_w
	and	dt_mesano_referencia	= dt_mesano_referencia_w
	and	cd_estabelecimento	= cd_estabelecimento_w;
	if (NOT FOUND) then
		insert into saldo_estoque(
			cd_estabelecimento,
			cd_local_estoque,
			cd_material,
			dt_atualizacao,
			dt_mesano_referencia,
			ie_bloqueio_inventario,
			nm_usuario,
			qt_estoque,
			qt_reservada,
			qt_reservada_requisicao,
			vl_estoque)
		values (
			cd_estabelecimento_w,
			cd_local_estoque_w,
			cd_material_estoque_w,
			clock_timestamp(),
			dt_mesano_referencia_w,
			'S',
			nm_usuario_p,
			0,
			0,
			0,
			0);
	end if;
	end;
else
	begin
	update	fornecedor_mat_consignado
	set	ie_bloqueio_inventario	= 'S'
	where	cd_fornecedor		= cd_fornecedor_w
	and	cd_material		= cd_material_estoque_w
	and	cd_local_estoque	= cd_local_estoque_w
	and	dt_mesano_referencia	= dt_mesano_referencia_w
	and	cd_estabelecimento	= cd_estabelecimento_w;
	if (NOT FOUND) then
		insert into fornecedor_mat_consignado(
			cd_estabelecimento,
			cd_fornecedor,
			cd_local_estoque,
			cd_material,
			dt_atualizacao,
			dt_mesano_referencia,
			ie_bloqueio_inventario,
			nm_usuario,
			qt_estoque)
		values ( cd_estabelecimento_w,
			cd_fornecedor_w,
			cd_local_estoque_w,
			cd_material_estoque_w,
			clock_timestamp(),
			dt_mesano_referencia_w,
			'S',
			nm_usuario_p,
			0);
	end if;
	end;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE incluir_item_invent_bloqueado ( nr_sequencia_p bigint, cd_material_p bigint, nm_usuario_p text) FROM PUBLIC;

