-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_consistir_cod_unico_serv ( cd_procedimento_p bigint, ie_origem_proced_p bigint, nr_seq_material_p bigint, dt_referencia_p timestamp, ie_situacao_p text, ds_retorno_p INOUT text) AS $body$
DECLARE


nr_seq_regra_w		pls_regra_cod_serv_unico.nr_sequencia%type;
ie_origem_proced_w	pls_regra_cod_serv_item.ie_origem_proced%type;
cd_material_ops_w	pls_material.cd_material_ops%type;
ds_procedimento_w	procedimento.ds_procedimento%type;
ds_material_w		pls_material.ds_material%type;
ie_situacao_w		varchar(255);

C01 CURSOR FOR 	-- Verifica se há regra cadastrada
	SELECT	a.nr_sequencia
	from	pls_regra_cod_serv_unico a
	where	clock_timestamp() between trunc(coalesce(a.dt_inicio_vigencia,clock_timestamp()),'dd') and fim_dia(coalesce(a.dt_fim_vigencia,clock_timestamp()))
	order by 1;

c02 CURSOR FOR
	SELECT	a.ie_origem_proced
	from	pls_regra_cod_serv_item a
	where	a.nr_seq_regra	= nr_seq_regra_w;


BEGIN
ds_retorno_p	:= null;
ie_situacao_w	:= coalesce(ie_situacao_p,'A');

if (ie_situacao_w = 'A') then
	if (nr_seq_material_p IS NOT NULL AND nr_seq_material_p::text <> '') then
		select	max(a.cd_material_ops)
		into STRICT	cd_material_ops_w
		from	pls_material a
		where	a.nr_sequencia	= nr_seq_material_p;
	end if;

	open C01;
	loop
	fetch C01 into
		nr_seq_regra_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		open C02;
		loop
		fetch C02 into
			ie_origem_proced_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin
			/* Se for um material é necessário verificar para todas as origens da regra */

			if (cd_material_ops_w IS NOT NULL AND cd_material_ops_w::text <> '') then
				select	max(a.ds_procedimento)
				into STRICT	ds_procedimento_w
				from	procedimento a
				where	a.cd_procedimento = somente_numero(cd_material_ops_w)
				and	a.ie_origem_proced = ie_origem_proced_w;

				if (ds_procedimento_w IS NOT NULL AND ds_procedimento_w::text <> '') then
					ds_retorno_p	:= 'Não é possível cadastrar o material com esse código pois o mesmo conflita com o ' ||
								' código do procedimento "' || ds_procedimento_w || '".';
					exit;
				end if;
			elsif (cd_procedimento_p IS NOT NULL AND cd_procedimento_p::text <> '') and (ie_origem_proced_p IS NOT NULL AND ie_origem_proced_p::text <> '') then
				/* Se for um procedimento, só consistir para as origens da regra */

				if (ie_origem_proced_p = ie_origem_proced_w) then
					select	max(a.ds_material)
					into STRICT	ds_material_w
					from	pls_material a
					where	a.cd_material_ops	= to_char(cd_procedimento_p);

					if (ds_material_w IS NOT NULL AND ds_material_w::text <> '') then
						ds_retorno_p	:= 'Não é possível cadastrar o procedimento com esse código pois o mesmo conflita com o ' ||
									' código do material "' || ds_material_w || '".';
						exit;
					end if;
				end if;
			end if;
			end;
		end loop;
		close C02;
		end;
	end loop;
	close C01;

	/* Se for procedimento abortar senão só voltar a mensagem */

	if (cd_procedimento_p IS NOT NULL AND cd_procedimento_p::text <> '') and (ds_retorno_p IS NOT NULL AND ds_retorno_p::text <> '') then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(117811,'DS_MATERIAL='|| ds_material_w);
	end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_consistir_cod_unico_serv ( cd_procedimento_p bigint, ie_origem_proced_p bigint, nr_seq_material_p bigint, dt_referencia_p timestamp, ie_situacao_p text, ds_retorno_p INOUT text) FROM PUBLIC;

