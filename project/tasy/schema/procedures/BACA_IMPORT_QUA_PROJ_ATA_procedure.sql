-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE baca_import_qua_proj_ata () AS $body$
DECLARE



/*QUA_ATA*/

nr_seq_ata_w			bigint;
nr_seq_ata_nova_w		bigint;
cd_estabelecimento_w		smallint;
dt_atualizacao_w			timestamp;
nm_usuario_w			varchar(15);
dt_atualizacao_nrec_w		timestamp;
nm_usuario_nrec_w			varchar(15);
dt_ata_w				timestamp;
dt_liberacao_w			timestamp;
ds_ata_w				varchar(255);
cd_pessoa_resp_w			varchar(10);
nr_seq_documento_w		bigint;
nr_seq_nao_conform_w		bigint;
ie_geral_w			varchar(15);
cd_ata_w				varchar(20);

/*QUA_ATA_PARTICIPANTE*/

cd_pessoa_participante_w		varchar(10);
ie_faltou_w			varchar(01);
nm_pessoa_participante_w		varchar(60);
ds_setor_participante_w		varchar(100);
cd_setor_atendimento_w		integer;


/*QUA_ATA_ANEXO*/

ds_arquivo_w			varchar(255);
dt_arquivo_w			timestamp;


/*QUA_ATA_CONTEUDO*/

ds_conteudo_w			varchar(4000);
ds_titulo_w			varchar(80);
nr_seq_apresentacao_w		integer;


/*QUA_ATA_ENVIO*/

dt_envio_w			timestamp;
ds_destino_w			varchar(255);
ds_observacao_w			varchar(255);


/*QUA_ATA_PAUTA*/

ds_pauta_w			varchar(255);


/*QUA_ATA_PENDENCIA*/

ds_pendencia_w			varchar(255);
dt_prev_solucao_w			timestamp;
nm_pessoa_resp_w			varchar(255);
dt_solucao_real_w			timestamp;
ds_obs_pendencia_w		varchar(2000);
nr_seq_ordem_servico_w		bigint;
nr_seq_pend_w			bigint;

qt_existe_w		bigint;


c01 CURSOR FOR
SELECT	nr_sequencia,
	cd_estabelecimento,
	dt_atualizacao,
	nm_usuario,
	dt_atualizacao_nrec,
	nm_usuario_nrec,
	dt_ata,
	dt_liberacao,
	ds_ata,
	cd_pessoa_resp,
	nr_seq_documento,
	nr_seq_nao_conform,
	ie_geral,
	cd_ata
from	qua_ata;


c02 CURSOR FOR
SELECT	dt_atualizacao,
	nm_usuario,
	dt_atualizacao_nrec,
	nm_usuario_nrec,
	cd_pessoa_participante,
	ie_faltou,
	nm_pessoa_participante,
	ds_setor_participante,
	cd_setor_atendimento
from	qua_ata_participante
where	nr_seq_ata 	= nr_seq_ata_w;


c03 CURSOR FOR
SELECT	dt_atualizacao,
	nm_usuario,
	dt_atualizacao_nrec,
	nm_usuario_nrec,
	ds_arquivo,
	dt_arquivo
from	qua_ata_anexo
where	nr_seq_ata 	= nr_seq_ata_w;


c04 CURSOR FOR
SELECT	dt_atualizacao,
	nm_usuario,
	dt_atualizacao_nrec,
	nm_usuario_nrec,
	ds_conteudo,
	ds_titulo,
	nr_seq_apresentacao
from	qua_ata_conteudo
where	nr_seq_ata	= nr_seq_ata_w;


c05 CURSOR FOR
SELECT	dt_atualizacao,
	nm_usuario,
	dt_atualizacao_nrec,
	nm_usuario_nrec,
	dt_envio,
        ds_destino,
        ds_observacao
from	qua_ata_envio
where	nr_seq_ata	= nr_seq_ata_w;


c06 CURSOR FOR
SELECT	dt_atualizacao,
	nm_usuario,
	dt_atualizacao_nrec,
	nm_usuario_nrec,
	substr(ds_pauta,1,255)
from	qua_ata_pauta
where	nr_seq_ata	= nr_seq_ata_w;


c07 CURSOR FOR
SELECT	dt_atualizacao,
	nm_usuario,
	dt_atualizacao_nrec,
	nm_usuario_nrec,
	ds_pendencia,
	dt_prev_solucao,
	coalesce(substr(obter_nome_pf(cd_pessoa_resp),1,100),wheb_mensagem_pck.get_texto(305552)), --'NÃ£o informado'
	dt_solucao_real,
	ds_observacao,
	nr_seq_ordem_servico
from	qua_ata_pendencia
where	nr_seq_ata	= nr_seq_ata_w;


BEGIN
select	count(*)
into STRICT	qt_existe_w
from	proj_ata;

open C01;
loop
fetch C01 into
	nr_seq_ata_w,
	cd_estabelecimento_w,
	dt_atualizacao_w,
	nm_usuario_w,
	dt_atualizacao_nrec_w,
	nm_usuario_nrec_w,
	dt_ata_w,
	dt_liberacao_w,
	ds_ata_w,
	cd_pessoa_resp_w,
	nr_seq_documento_w,
	nr_seq_nao_conform_w,
	ie_geral_w,
	cd_ata_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	select	nextval('proj_ata_seq')
	into STRICT	nr_seq_ata_nova_w
	;

	if (qt_existe_w = 0) then
		nr_seq_ata_nova_w := nr_seq_ata_w;
	end if;

	insert into proj_ata(
			nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			dt_ata,
			dt_liberacao,
			cd_estabelecimento,
			cd_consultor,
			ds_ata,
			nr_seq_documento,
			nr_seq_nao_conform,
			ie_geral,
			cd_ata,
			ie_tipo_ata)
		values (	nr_seq_ata_nova_w,
			dt_atualizacao_w,
			nm_usuario_w,
			dt_atualizacao_nrec_w,
			nm_usuario_nrec_w,
			dt_ata_w,
			dt_liberacao_w,
			cd_estabelecimento_w,
			cd_pessoa_resp_w,
			ds_ata_w,
			nr_seq_documento_w,
			nr_seq_nao_conform_w,
			ie_geral_w,
			cd_ata_w,
			'Q');

	open C02;
	loop
	fetch C02 into
		dt_atualizacao_w,
		nm_usuario_w,
		dt_atualizacao_nrec_w,
		nm_usuario_nrec_w,
		cd_pessoa_participante_w,
		ie_faltou_w,
		nm_pessoa_participante_w,
		ds_setor_participante_w,
		cd_setor_atendimento_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		insert into proj_ata_participante(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_ata,
				ie_faltou,
				nm_pessoa_participante,
				ds_setor,
				cd_pessoa_participante,
				dt_ciente_ata,
				cd_setor_atendimento)
			values (	nextval('proj_ata_participante_seq'),
				dt_atualizacao_w,
				nm_usuario_w,
				dt_atualizacao_nrec_w,
				nm_usuario_nrec_w,
				nr_seq_ata_nova_w,
				ie_faltou_w,
				coalesce(CASE WHEN coalesce(nm_pessoa_participante_w,'X')='X' THEN 						substr(obter_nome_pf(cd_pessoa_participante_w),1,60)  ELSE nm_pessoa_participante_w END ,wheb_mensagem_pck.get_texto(305552)),
				coalesce(CASE WHEN coalesce(ds_setor_participante_w,'X')='X' THEN 						substr(obter_nome_setor(cd_setor_atendimento_w),1,60)  ELSE ds_setor_participante_w END ,wheb_mensagem_pck.get_texto(305552)),
				cd_pessoa_participante_w,
				null,
				cd_setor_atendimento_w);
		end;
	end loop;
	close C02;

	open C03;
	loop
	fetch C03 into
		dt_atualizacao_w,
		nm_usuario_w,
		dt_atualizacao_nrec_w,
		nm_usuario_nrec_w,
		ds_arquivo_w,
		dt_arquivo_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin
		insert into proj_ata_anexo(
				nr_sequencia,
				nr_seq_ata,
				ds_arquivo,
				ds_titulo,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				dt_arquivo)
			values (	nextval('proj_ata_anexo_seq'),
				nr_seq_ata_nova_w,
				ds_arquivo_w,
				wheb_mensagem_pck.get_texto(305553), --'Anexo da ATA'
				dt_atualizacao_w,
				nm_usuario_w,
				dt_atualizacao_nrec_w,
				nm_usuario_nrec_w,
				dt_arquivo_w);


		end;
	end loop;
	close C03;
	end;

	open C04;
	loop
	fetch C04 into
		dt_atualizacao_w,
		nm_usuario_w,
		dt_atualizacao_nrec_w,
		nm_usuario_nrec_w,
		ds_conteudo_w,
		ds_titulo_w,
		nr_seq_apresentacao_w;
	EXIT WHEN NOT FOUND; /* apply on C04 */
		begin
		insert into proj_ata_conteudo(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_ata,
				ds_conteudo,
				ds_titulo,
				nr_seq_apresentacao)
			values (	nextval('proj_ata_conteudo_seq'),
				dt_atualizacao_w,
				nm_usuario_w,
				dt_atualizacao_nrec_w,
				nm_usuario_nrec_w,
				nr_seq_ata_nova_w,
				ds_conteudo_w,
				ds_titulo_w,
				nr_seq_apresentacao_w);
		end;
	end loop;
	close C04;

	open C05;
	loop
	fetch C05 into
		dt_atualizacao_w,
		nm_usuario_w,
		dt_atualizacao_nrec_w,
		nm_usuario_nrec_w,
		dt_envio_w,
		ds_destino_w,
		ds_observacao_w;
	EXIT WHEN NOT FOUND; /* apply on C05 */
		begin
		insert into proj_ata_envio(
				nr_sequencia,
				nr_seq_ata,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				dt_envio,
				ds_destino,
				ds_observacao)
			values (	nextval('proj_ata_envio_seq'),
				nr_seq_ata_nova_w,
				dt_atualizacao_w,
				nm_usuario_w,
				dt_atualizacao_nrec_w,
				nm_usuario_nrec_w,
				dt_envio_w,
				ds_destino_w,
				ds_observacao_w);
		end;
	end loop;
	close C05;

	open C06;
	loop
	fetch C06 into
		dt_atualizacao_w,
		nm_usuario_w,
		dt_atualizacao_nrec_w,
		nm_usuario_nrec_w,
		ds_pauta_w;
	EXIT WHEN NOT FOUND; /* apply on C06 */
		begin
		insert into proj_ata_pauta(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_ata,
				ds_pauta)
			values (	nextval('proj_ata_pauta_seq'),
				dt_atualizacao_w,
				nm_usuario_w,
				dt_atualizacao_nrec_w,
				nm_usuario_nrec_w,
				nr_seq_ata_nova_w,
				ds_pauta_w);
		end;
	end loop;
	close C06;

	open C07;
	loop
	fetch C07 into
		dt_atualizacao_w,
		nm_usuario_w,
		dt_atualizacao_nrec_w,
		nm_usuario_nrec_w,
		ds_pendencia_w,
		dt_prev_solucao_w,
		nm_pessoa_resp_w,
		dt_solucao_real_w,
		ds_obs_pendencia_w,
		nr_seq_ordem_servico_w;
	EXIT WHEN NOT FOUND; /* apply on C07 */
		begin
		select	nextval('proj_ata_pendencia_seq')
		into STRICT	nr_seq_pend_w
		;

		insert into proj_ata_pendencia(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_ata,
				ds_pendencia,
				dt_prev_solucao,
				nm_pessoa_resp,
				ie_relat_desempenho,
				nr_seq_classif,
				dt_conclusao_real,
				ds_observacao,
				nr_seq_etapa,
				ie_status,
				nr_seq_etapa_cron)
			values (	nr_seq_pend_w,
				dt_atualizacao_w,
				nm_usuario_w,
				dt_atualizacao_nrec_w,
				nm_usuario_nrec_w,
				nr_seq_ata_nova_w,
				ds_pendencia_w,
				dt_prev_solucao_w,
				nm_pessoa_resp_w,
				'N',
				null,
				dt_solucao_real_w,
				substr(ds_obs_pendencia_w,1,255),
				null,
				null,
				null);

		if (coalesce(nr_seq_ordem_servico_w,0) > 0) then
			insert into proj_ata_pendencia_os(
						nr_sequencia,
						nr_seq_pendencia,
						nr_seq_ordem,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						ie_acordo)
					values (nextval('proj_ata_pendencia_os_seq'),
						nr_seq_pend_w,
						nr_seq_ordem_servico_w,
						dt_atualizacao_w,
						nm_usuario_w,
						dt_atualizacao_nrec_w,
						nm_usuario_nrec_w,
						null);

		end if;
		end;
	end loop;
	close C07;
end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE baca_import_qua_proj_ata () FROM PUBLIC;

