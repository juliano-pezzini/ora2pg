-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_recalc_valor_rec_glosa ( nr_seq_conta_rec_p pls_rec_glosa_conta.nr_sequencia%type, nr_seq_protocolo_p pls_rec_glosa_protocolo.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: 	Recalcular o valor do item do recursod e glosa conforme a função
	OPS - Consulta de Preço
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[ ]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
-------------------------------------------------------------------------------------------------------------------
Pontos de atenção:

Alterações:
-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
nr_seq_protocolo_w		pls_rec_glosa_protocolo.nr_sequencia%type;
nr_seq_prestador_w		pls_prestador.nr_sequencia%type;
vl_recalculo_w			pls_rec_glosa_proc.vl_recalculo%type;

C01 CURSOR(nr_seq_conta_rec_pc		pls_rec_glosa_conta.nr_sequencia%type) FOR
	SELECT	a.nr_sequencia nr_seq_item,
			b.cd_procedimento,
			b.ie_origem_proced,
			null nr_seq_material,
			CASE WHEN b.ie_tipo_despesa='2' THEN  '3'  ELSE b.ie_tipo_despesa END  ie_tipo_item,
			b.dt_procedimento dt_atendimento_item,
			c.ie_tipo_guia
	from	pls_rec_glosa_proc a,
			pls_conta_proc b,
			pls_conta c
	where	b.nr_sequencia = a.nr_seq_conta_proc
	and		a.nr_seq_conta_rec = nr_seq_conta_rec_pc
	and		b.nr_seq_conta = c.nr_sequencia
	
union

	SELECT	a.nr_sequencia nr_seq_item,
			null cd_procedimento,
			null ie_origem_proced,
			b.nr_seq_material,
			'2' ie_tipo_item,
			b.dt_atendimento dt_atendimento_item,
			c.ie_tipo_guia
	from	pls_rec_glosa_mat a,
			pls_conta_mat b,
			pls_conta c
	where	b.nr_sequencia = a.nr_seq_conta_mat
	and		a.nr_seq_conta_rec = nr_seq_conta_rec_pc
	and		b.nr_seq_conta = c.nr_sequencia;

C02 CURSOR(nr_seq_protocolo_pc		pls_prestador.nr_sequencia%type) FOR
	SELECT	nr_sequencia nr_seq_conta_rec
	from	pls_rec_glosa_conta
	where	nr_seq_protocolo = nr_seq_protocolo_pc
	and	ie_status = '1';
BEGIN
if (nr_seq_conta_rec_p IS NOT NULL AND nr_seq_conta_rec_p::text <> '') then
	select	nr_seq_protocolo
	into STRICT	nr_seq_protocolo_w
	from	pls_rec_glosa_conta
	where	nr_sequencia = nr_seq_conta_rec_p;

	select	nr_seq_prestador
	into STRICT	nr_seq_prestador_w
	from	pls_rec_glosa_protocolo
	where	nr_sequencia = nr_seq_protocolo_w;

	for r_C01_w in C01(nr_seq_conta_rec_p) loop

		CALL pls_gerar_consulta_preco(	cd_estabelecimento_p, nr_seq_prestador_w, r_C01_w.nr_seq_material,
						r_C01_w.dt_atendimento_item, r_C01_w.cd_procedimento, r_C01_w.ie_origem_proced,
						r_C01_w.ie_tipo_item, nm_usuario_p, null,
						null, null, null,
						'0', 'N', null,
						null, null, null,
						null, null, 'N',
						null, r_c01_w.ie_tipo_guia);

		if (r_C01_w.cd_procedimento IS NOT NULL AND r_C01_w.cd_procedimento::text <> '') then
			select	max(vl_procedimento)
			into STRICT	vl_recalculo_w
			from	pls_w_consulta_preco
			where	nr_seq_prestador = nr_seq_prestador_w
			and	cd_procedimento = r_c01_w.cd_procedimento
			and	ie_origem_proced = r_c01_w.ie_origem_proced
			and	nm_usuario = nm_usuario_p;

			update	pls_rec_glosa_proc
			set	vl_recalculo = vl_recalculo_w,
				dt_recalculo = clock_timestamp()
			where	nr_sequencia = r_C01_w.nr_seq_item;
		else
			select	max(vl_materiais)
			into STRICT	vl_recalculo_w
			from	pls_w_consulta_preco
			where	nr_seq_prestador = nr_seq_prestador_w
			and	nr_seq_material = r_C01_w.nr_seq_material
			and	nm_usuario = nm_usuario_p;

			update	pls_rec_glosa_mat
			set	vl_recalculo = vl_recalculo_w,
				dt_recalculo = clock_timestamp()
			where	nr_sequencia = r_C01_w.nr_seq_item;
		end if;
	end loop;
else
	select	nr_seq_prestador
	into STRICT	nr_seq_prestador_w
	from	pls_rec_glosa_protocolo
	where	nr_sequencia = nr_seq_protocolo_p;

	for r_C02_w in C02(nr_seq_protocolo_p) loop
		for r_C01_w in C01(r_C02_w.nr_seq_conta_rec) loop
			CALL pls_gerar_consulta_preco(	cd_estabelecimento_p, nr_seq_prestador_w, r_C01_w.nr_seq_material,
							r_C01_w.dt_atendimento_item, r_C01_w.cd_procedimento, r_C01_w.ie_origem_proced,
							r_C01_w.ie_tipo_item, nm_usuario_p, null,
							null, null, null,
							'0', 'N', null,
							null, null, null,
							null, null, 'N',
							null, r_C01_w.ie_tipo_guia);

			if (r_C01_w.cd_procedimento IS NOT NULL AND r_C01_w.cd_procedimento::text <> '') then
				select	max(vl_procedimento)
				into STRICT	vl_recalculo_w
				from	pls_w_consulta_preco
				where	nr_seq_prestador = nr_seq_prestador_w
				and	cd_procedimento = r_c01_w.cd_procedimento
				and	ie_origem_proced = r_c01_w.ie_origem_proced
				and	nm_usuario = nm_usuario_p;

				update	pls_rec_glosa_proc
				set	vl_recalculo = vl_recalculo_w,
					dt_recalculo = clock_timestamp()
				where	nr_sequencia = r_C01_w.nr_seq_item;
			else
				select	max(vl_materiais)
				into STRICT	vl_recalculo_w
				from	pls_w_consulta_preco
				where	nr_seq_prestador = nr_seq_prestador_w
				and	nr_seq_material = r_C01_w.nr_seq_material
				and	nm_usuario = nm_usuario_p;

				update	pls_rec_glosa_mat
				set	vl_recalculo = vl_recalculo_w,
					dt_recalculo = clock_timestamp()
				where	nr_sequencia = r_C01_w.nr_seq_item;
			end if;
		end loop;
	end loop;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_recalc_valor_rec_glosa ( nr_seq_conta_rec_p pls_rec_glosa_conta.nr_sequencia%type, nr_seq_protocolo_p pls_rec_glosa_protocolo.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;

