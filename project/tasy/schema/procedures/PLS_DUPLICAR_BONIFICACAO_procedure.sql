-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_duplicar_bonificacao ( nr_seq_bonificacao_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_bonificacao_w		bigint;
cd_estabelecimento_w		smallint;
dt_inicio_vigencia_w		timestamp;
dt_fim_vigencia_w		timestamp;
cd_funcao_w			integer;
nm_usuario_liberacao_w		varchar(30);
nr_seq_regra_w			bigint;
nr_seq_regra_restricao_w	bigint;

C01 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_bonificacao_regra
	where	nr_seq_bonificacao = nr_seq_bonificacao_p;

C02 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_bonificacao_restricao
	where	nr_seq_bonificacao = nr_seq_bonificacao_p;

C03 CURSOR FOR
	SELECT	dt_inicio_vigencia,
		cd_estabelecimento,
		dt_fim_vigencia,
		cd_funcao,
		nm_usuario_liberacao
	from	pls_bonificacao_liberacao
	where	nr_seq_bonificacao = nr_seq_bonificacao_p;


BEGIN

select	nextval('pls_bonificacao_seq')
into STRICT	nr_seq_bonificacao_w
;

insert	into pls_bonificacao(	nr_sequencia,
		nm_bonificacao,
		cd_estabelecimento,
		dt_inicio_vigencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		dt_fim_vigencia,
		ds_bonificacao,
		cd_sistema_ant,
		ie_alteracao_vinculacao,
		vl_minimo,
		vl_maximo,
		tx_minimo,
		tx_maximo,
		ie_lancamento_mensalidade,
		ie_indicacao,
		ie_seguro_obito)
	(SELECT	nr_seq_bonificacao_w,
		 substr('CÃ³pia de ' || nm_bonificacao, 0, 100),
		cd_estabelecimento,
		dt_inicio_vigencia,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		dt_fim_vigencia,
		ds_bonificacao,
		cd_sistema_ant,
		ie_alteracao_vinculacao,
		vl_minimo,
		vl_maximo,
		tx_minimo,
		tx_maximo,
		ie_lancamento_mensalidade,
		ie_indicacao,
		ie_seguro_obito
	from	pls_bonificacao
	where	nr_sequencia		= nr_seq_bonificacao_p);

open C01;
loop
fetch C01 into
	nr_seq_regra_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	insert	into	pls_bonificacao_regra(	nr_sequencia,
			ie_tipo_item,
			qt_idade_inicial,
			qt_idade_final,
			tx_bonificacao,
			vl_bonificacao,
			nr_parcela_inicial,
			nr_parcela_final,
			nr_seq_bonificacao,
			cd_estabelecimento,
			ie_tipo_regra,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_desconto,
			nr_seq_parentesco,
			ie_titularidade,
			ie_indicacao,
			nr_seq_tipo_cobertura,
			qt_cobertura,
			qt_meses_intervalo,
			ie_periodo,
			qt_parcelas_pagas_inicial,
			qt_parcelas_pagas_final,
			ie_aniversario_contrato,
			ie_acao_contrato,
			ie_cooperado,
			qt_tempo_cooperado_inicial,
			qt_tempo_cooperado_final,
			tx_bonificacao_conjuge,
			nr_parcela_inicial_sca,
			nr_parcela_final_sca,
			ie_tipo_segurado,
			ie_demitido_exonerado,
			ie_possui_bonificacao,
			ie_tipo_vidas_contrato)
		(SELECT	nextval('pls_bonificacao_regra_seq'),
			ie_tipo_item,
			qt_idade_inicial,
			qt_idade_final,
			tx_bonificacao,
			vl_bonificacao,
			nr_parcela_inicial,
			nr_parcela_final,
			nr_seq_bonificacao_w,
			cd_estabelecimento,
			ie_tipo_regra,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_desconto,
			nr_seq_parentesco,
			ie_titularidade,
			ie_indicacao,
			nr_seq_tipo_cobertura,
			qt_cobertura,
			qt_meses_intervalo,
			ie_periodo,
			qt_parcelas_pagas_inicial,
			qt_parcelas_pagas_final,
			ie_aniversario_contrato,
			ie_acao_contrato,
			ie_cooperado,
			qt_tempo_cooperado_inicial,
			qt_tempo_cooperado_final,
			tx_bonificacao_conjuge,
			nr_parcela_inicial_sca,
			nr_parcela_final_sca,
			ie_tipo_segurado,
			ie_demitido_exonerado,
			ie_possui_bonificacao,
			ie_tipo_vidas_contrato
		from	pls_bonificacao_regra
		where	nr_sequencia		= nr_seq_regra_w);
	end;
end loop;
close C01;

open C02;
loop
fetch C02 into
	nr_seq_regra_restricao_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin
	insert	into	pls_bonificacao_restricao(	nr_sequencia,
			nr_seq_bonificacao,
			cd_estabelecimento,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			qt_dias_inadimplencia,
			nr_seq_tipo_restricao,
			qt_meses_restricao,
			qt_valor_producao,
			qt_periodo_producao,
			ie_afastamento,
			pr_resultado,
			ie_tipo_contrato,
			qt_meses_resultado,
			ie_situacao_trabalhista,
			ie_tipo_data)
		(SELECT	nextval('pls_bonificacao_restricao_seq'),
			nr_seq_bonificacao_w,
			cd_estabelecimento,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			qt_dias_inadimplencia,
			nr_seq_tipo_restricao,
			qt_meses_restricao,
			qt_valor_producao,
			qt_periodo_producao,
			ie_afastamento,
			pr_resultado,
			ie_tipo_contrato,
			qt_meses_resultado,
			ie_situacao_trabalhista,
			ie_tipo_data
		from	pls_bonificacao_restricao
		where	nr_sequencia		= nr_seq_regra_restricao_w);
	end;
end loop;
close C02;

open C03;
loop
fetch C03 into
	dt_inicio_vigencia_w,
	cd_estabelecimento_w,
	dt_fim_vigencia_w,
	cd_funcao_w,
	nm_usuario_liberacao_w;
EXIT WHEN NOT FOUND; /* apply on C03 */
	begin
	insert	into	pls_bonificacao_liberacao(	nr_sequencia,
			dt_inicio_vigencia,
			cd_estabelecimento,
			nr_seq_bonificacao,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			cd_funcao,
			dt_fim_vigencia,
			nm_usuario_liberacao)
		values (	nextval('pls_bonificacao_liberacao_seq'),
			dt_inicio_vigencia_w,
			cd_estabelecimento_w,
			nr_seq_bonificacao_w,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			cd_funcao_w,
			dt_fim_vigencia_w,
			nm_usuario_liberacao_w);
	end;
end loop;
close C03;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_duplicar_bonificacao ( nr_seq_bonificacao_p bigint, nm_usuario_p text) FROM PUBLIC;

