-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_consistir_limitacao_guia ( nr_seq_guia_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
Finalidade: Realiza a consistência de limitação da Guia, não considerando seus itens 
------------------------------------------------------------------------------------------------------------------- 
Locais de chamada direta: 
[X] Objetos do dicionário [ ] Tasy (Delphi/Java) [ ] Portal [ ] Relatórios [ ] Outros: 
 ------------------------------------------------------------------------------------------------------------------ 
Pontos de atenção: Performance. 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
 
 
dt_inicial_w			timestamp;
ie_tipo_guia_w			varchar(2);
nr_seq_segurado_w		bigint;
dt_autorizacao_atual_w		timestamp;
nr_seq_plano_w			bigint;
nr_seq_contrato_w		bigint;
qt_meses_intervalo_w		bigint;
qt_dia_internacao_w		bigint;
qt_total_dias_w			bigint;
nr_seq_prestador_w		bigint;
cd_doenca_cid_w			varchar(10);
qt_cid_w			bigint;
nr_seq_tipo_limitacao_w		bigint;
ie_periodo_w			varchar(2);
qt_dia_solicitado_w		smallint;
ie_limita_w			varchar(1) := 'N';
qt_glosa_w			bigint;
ie_tipo_guia_lim_w		varchar(2);
dt_contratacao_w		timestamp;
dt_atual_w			timestamp;
dt_inicio_w			timestamp;
dt_final_w			timestamp;
nr_seq_proc_regra_w		bigint;
ie_tipo_segurado_w		varchar(1);
nr_seq_pessoa_proposta_w	bigint;
nr_seq_proposta_w		bigint;
nr_seq_intercambio_w		bigint;
ie_tipo_periodo_w		varchar(1);
nr_seq_limitacao_w		bigint;
ie_qt_familia_w			pls_limitacao.ie_qt_familia%type;
nr_seq_titular_w		pls_segurado.nr_seq_titular%type;
qt_pessoas_w			bigint;

 
c01 CURSOR FOR 
	SELECT	b.nr_sequencia,	 
		c.qt_meses_intervalo, 
		c.qt_dia_internacao, 
		a.cd_doenca_cid, 
		c.ie_periodo, 
		a.ie_tipo_guia, 
		a.nr_sequencia, 
		c.ie_tipo_periodo, 
		c.nr_sequencia, 
		c.ie_qt_familia 
	from	pls_limitacao c, 
		pls_tipo_limitacao b, 
		pls_limitacao_proc a 
	where	a.nr_seq_tipo_limitacao	= b.nr_sequencia 
	and	c.nr_seq_tipo_limitacao	= b.nr_sequencia 
	and	clock_timestamp() between coalesce(c.dt_inicio_vigencia,clock_timestamp()) and coalesce(c.dt_fim_vigencia,clock_timestamp())	 
	and	c.nr_sequencia	in	(SELECT	x.nr_sequencia 
					from	pls_limitacao x 
					where	x.nr_seq_contrato	= nr_seq_contrato_w 
					and	((x.NR_SEQ_PLANO_CONTRATO	= nr_seq_plano_w) or (coalesce(x.NR_SEQ_PLANO_CONTRATO::text, '') = '')) 
					and	clock_timestamp() between coalesce(x.dt_inicio_vigencia,clock_timestamp()) and coalesce(x.dt_fim_vigencia,clock_timestamp()) 
					
union
 
					select	x.nr_sequencia 
					from	pls_limitacao x 
					where	x.nr_seq_intercambio	= nr_seq_intercambio_w 
					and	clock_timestamp() between coalesce(x.dt_inicio_vigencia,clock_timestamp()) and coalesce(x.dt_fim_vigencia,clock_timestamp()) 
					
union
 
					select	x.nr_sequencia 
					from	pls_limitacao x 
					where	x.nr_seq_plano		= nr_seq_plano_w 
					and	clock_timestamp() between coalesce(x.dt_inicio_vigencia,clock_timestamp()) and coalesce(x.dt_fim_vigencia,clock_timestamp()) 
					and	not exists (	select	1 
								from	pls_limitacao z 
								where	z.nr_seq_contrato	= nr_seq_contrato_w 
								and   z.nr_sequencia     = x.nr_sequencia 
								and	clock_timestamp() between coalesce(x.dt_inicio_vigencia,clock_timestamp()) and coalesce(x.dt_fim_vigencia,clock_timestamp())) 
					and	not exists (	select	1 
								from	pls_limitacao z 
								where	z.nr_seq_intercambio	= nr_seq_intercambio_w 
								and   z.nr_sequencia     = x.nr_sequencia 
								and	clock_timestamp() between coalesce(x.dt_inicio_vigencia,clock_timestamp()) and coalesce(x.dt_fim_vigencia,clock_timestamp())) 
					
union
 
					/*Ajuste realizado pelo Alex August Schlote na OS 305595 */
 
					select	x.nr_sequencia 
					from	pls_limitacao x 
					where	x.nr_seq_plano		in (	select	t.nr_seq_plano 
											from	pls_sca_vinculo	t 
											where	t.nr_seq_segurado	= nr_seq_segurado_w 
											and	(t.dt_liberacao IS NOT NULL AND t.dt_liberacao::text <> '')) 
					and	not exists (	select	1 
								from	pls_limitacao z 
								where	z.nr_seq_contrato	= nr_seq_contrato_w 
								and   z.nr_sequencia     = x.nr_sequencia 
								and	clock_timestamp() between coalesce(z.dt_inicio_vigencia,clock_timestamp()) and coalesce(z.dt_fim_vigencia,clock_timestamp())) 
					and	not exists (	select	1 
								from	pls_limitacao z 
								where	z.nr_seq_intercambio	= nr_seq_intercambio_w 
								and   z.nr_sequencia     = x.nr_sequencia 
								and	clock_timestamp() between coalesce(z.dt_inicio_vigencia,clock_timestamp()) and coalesce(z.dt_fim_vigencia,clock_timestamp())) 
					and	not exists (	select	1 
								from	pls_limitacao y 
								where	y.nr_seq_plano		= nr_seq_plano_w 
								and   y.nr_sequencia     = x.nr_sequencia 
								and	clock_timestamp() between coalesce(y.dt_inicio_vigencia,clock_timestamp()) and coalesce(y.dt_fim_vigencia,clock_timestamp()))) 
	and	coalesce(a.ie_tipo_guia,ie_tipo_guia_w)	= ie_tipo_guia_w 
	and (a.cd_doenca_cid in (	select	x.cd_doenca 
					from	pls_diagnostico x 
					where	x.nr_seq_guia = nr_seq_guia_p) or coalesce(a.cd_doenca_cid::text, '') = '') 
	and	coalesce(a.cd_procedimento::text, '') = '' 
	and	coalesce(a.cd_grupo_proc::text, '') = '' 
	and	coalesce(a.cd_especialidade::text, '') = '' 
	and	coalesce(a.NR_SEQ_GRUPO_SERVICO::text, '') = '' 
	and	b.ie_situacao		= 'A' 
	and	coalesce(a.cd_area_procedimento::text, '') = '';


BEGIN 
 
select	max(ie_tipo_guia), 
	max(nr_seq_segurado), 
	coalesce(max(dt_autorizacao), max(dt_solicitacao)), 
	max(nr_seq_prestador), 
	max(qt_dia_solicitado) 
into STRICT	ie_tipo_guia_w, 
	nr_seq_segurado_w, 
	dt_autorizacao_atual_w, 
	nr_seq_prestador_w, 
	qt_dia_solicitado_w 
from	pls_guia_plano 
where	nr_sequencia	= nr_seq_guia_p;
 
select	max(nr_seq_plano), 
	max(nr_seq_contrato), 
	max(ie_tipo_segurado), 
	max(nr_seq_pessoa_proposta), 
	max(nr_seq_intercambio), 
	max(nr_seq_contrato) 
into STRICT	nr_seq_plano_w, 
	nr_seq_contrato_w, 
	ie_tipo_segurado_w, 
	nr_seq_pessoa_proposta_w, 
	nr_seq_intercambio_w, 
	nr_seq_contrato_w 
from	pls_segurado 
where	nr_sequencia	= nr_seq_segurado_w;
 
 
open c01;
loop 
fetch c01 into 
	nr_seq_tipo_limitacao_w, 
	qt_meses_intervalo_w, 
	qt_dia_internacao_w, 
	cd_doenca_cid_w, 
	ie_periodo_w, 
	ie_tipo_guia_lim_w, 
	nr_seq_proc_regra_w, 
	ie_tipo_periodo_w, 
	nr_seq_limitacao_w, 
	ie_qt_familia_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin 
	 
	if (coalesce(ie_qt_familia_w,'N')	= 'S') then 
		select	nr_seq_titular 
		into STRICT	nr_seq_titular_w 
		from	pls_segurado 
		where	nr_sequencia		= nr_seq_segurado_w 
		and	ie_situacao_atend	= 'A' 
		and	substr(pls_obter_dados_segurado(nr_sequencia,'CS'),1,10) = 'A';
		 
		if (coalesce(nr_seq_titular_w::text, '') = '') then 
			select	count(1) 
			into STRICT	qt_pessoas_w 
			from	pls_segurado 
			where	nr_seq_titular	= nr_seq_segurado_w 
			and	ie_situacao_atend	= 'A' 
			and	substr(pls_obter_dados_segurado(nr_sequencia,'CS'),1,10) = 'A';
			 
			-- Deve ser adicionado mais 1 para que seja considerado o titular. 
			qt_pessoas_w 	:= qt_pessoas_w + 1;
		else 
			select	count(1) 
			into STRICT	qt_pessoas_w 
			from	pls_segurado 
			where	nr_seq_titular	= nr_seq_titular_w 
			and	ie_situacao_atend	= 'A' 
			and	substr(pls_obter_dados_segurado(nr_sequencia,'CS'),1,10) = 'A';
			 
			-- Deve ser adicionado mais 1 para que seja considerado o titular. 
			qt_pessoas_w 	:= qt_pessoas_w + 1;
		end if;
			 
		qt_dia_internacao_w	:=	qt_pessoas_w * qt_dia_internacao_w;
	end if;
	 
	ie_limita_w := 'N';
	if (qt_dia_internacao_w IS NOT NULL AND qt_dia_internacao_w::text <> '') then 
		dt_inicial_w	:= add_months(dt_autorizacao_atual_w, - qt_meses_intervalo_w);
		 
		if (cd_doenca_cid_w IS NOT NULL AND cd_doenca_cid_w::text <> '') then 
			ie_limita_w	:= pls_obter_se_limitacao(	nr_seq_segurado_w, 
							nr_seq_tipo_limitacao_w, 
							qt_dia_internacao_w, 
							qt_meses_intervalo_w, 
							ie_periodo_w, 
							qt_dia_solicitado_w, 
							ie_tipo_guia_lim_w, 
							nr_seq_guia_p, 
							'C','',ie_tipo_periodo_w,nr_seq_limitacao_w);
		else	 
			if (ie_periodo_w = 'CO') then 
				/* Diether - OS 295289 - Tratei os tipos de segurado*/
 
				if (ie_tipo_segurado_w in ('T','C')) then 
					select	trunc(b.dt_inclusao,'dd'), 
						trunc(clock_timestamp()) 
					into STRICT	dt_contratacao_w, 
						dt_atual_w 
					from	pls_segurado a, 
						pls_intercambio b 
					where	a.nr_seq_intercambio	= b.nr_sequencia 
					and	a.nr_sequencia	= nr_seq_segurado_w;
				elsif (ie_tipo_segurado_w in ('A','B')) then 
					select	trunc(b.dt_contrato,'dd'), 
						trunc(clock_timestamp()) 
					into STRICT	dt_contratacao_w, 
						dt_atual_w 
					from	pls_segurado a, 
						pls_contrato b 
					where	a.nr_seq_contrato	= b.nr_sequencia 
					and	a.nr_sequencia	= nr_seq_segurado_w;
				elsif (ie_tipo_segurado_w = 'P') then 
					if (nr_seq_pessoa_proposta_w IS NOT NULL AND nr_seq_pessoa_proposta_w::text <> '') then 
						select	nr_seq_proposta 
						into STRICT	nr_seq_proposta_w 
						from	pls_proposta_beneficiario 
						where	nr_sequencia	= nr_seq_pessoa_proposta_w;
 
						select	trunc(dt_inicio_proposta,'dd'), 
							trunc(clock_timestamp()) 
						into STRICT	dt_contratacao_w, 
							dt_atual_w 
						from	pls_proposta_adesao 
						where	nr_sequencia	= nr_seq_proposta_w;
					elsif (nr_seq_pessoa_proposta_w IS NOT NULL AND nr_seq_pessoa_proposta_w::text <> '') then 
						dt_contratacao_w	:= trunc(clock_timestamp());
						dt_atual_w		:= trunc(clock_timestamp());
					end if;
				elsif (ie_tipo_segurado_w = 'R') then 
					if (nr_seq_contrato_w IS NOT NULL AND nr_seq_contrato_w::text <> '') then 
						select	trunc(dt_contrato,'dd'), 
							trunc(clock_timestamp()) 
						into STRICT	dt_contratacao_w, 
							dt_atual_w 
						from	pls_contrato 
						where	nr_sequencia	= nr_seq_contrato_w;
					elsif (nr_seq_intercambio_w IS NOT NULL AND nr_seq_intercambio_w::text <> '') then 
						select	trunc(dt_inclusao,'dd'), 
							trunc(clock_timestamp()) 
						into STRICT	dt_contratacao_w, 
							dt_atual_w 
						from	pls_intercambio 
						where	nr_sequencia	= nr_seq_intercambio_w;
					end if;
				end if;
				 
				dt_inicio_w		:= dt_contratacao_w;
				 
				while(dt_inicio_w < dt_atual_w) loop	 
					select	add_months(dt_inicio_w,qt_meses_intervalo_w) 
					into STRICT	dt_inicio_w 
					;
				end loop;
				 
				select	add_months(dt_inicio_w, -qt_meses_intervalo_w), 
					dt_inicio_w 
				into STRICT	dt_inicial_w, 
					dt_final_w 
				;
				 
			else			 
				dt_atual_w	:= trunc(dt_autorizacao_atual_w);
				 
				if (qt_meses_intervalo_w = 1) then 
					dt_inicial_w	:= trunc(dt_autorizacao_atual_w,'month');
					dt_final_w	:= last_day(trunc(dt_autorizacao_atual_w,'month'));	
				elsif (qt_meses_intervalo_w in (2,3,4,6)) then 
					 
					dt_inicio_w	:= trunc(dt_autorizacao_atual_w,'year');
					 
					while(dt_inicio_w < dt_atual_w) loop 
						begin 
						select	add_months(dt_inicio_w,qt_meses_intervalo_w) 
						into STRICT	dt_inicio_w 
						;
						end;
					end loop;
					 
					select	add_months(dt_inicio_w,-qt_meses_intervalo_w), 
						dt_inicio_w 
					into STRICT	dt_inicial_w, 
						dt_final_w 
					;
					 
				elsif (qt_meses_intervalo_w = 12) then 
					dt_inicial_w	:= trunc(dt_autorizacao_atual_w,'year');
					dt_final_w	:= last_day(add_months(trunc(dt_autorizacao_atual_w,'year'),qt_meses_intervalo_w));
				end if;
			end if;
 
			select	sum(coalesce(qt_dia_autorizado, qt_dia_solicitado)) 
			into STRICT	qt_total_dias_w 
			from	pls_guia_plano 
			where	nr_seq_segurado	= nr_seq_segurado_w 
			and	coalesce(dt_autorizacao, dt_solicitacao) between dt_inicial_w and dt_final_w;
			 
		end if;
		 
		select	count(*) 
		into STRICT	qt_glosa_w 
		from	pls_guia_glosa 
		where	nr_seq_guia = nr_seq_guia_p 
		and	substr(tiss_obter_motivo_glosa(nr_seq_motivo_glosa,'C'),1,10) = '1423';
		 
		if (qt_glosa_w = 0) and ((qt_total_dias_w > qt_dia_internacao_w) or (ie_limita_w = 'S')) then 
			update	pls_guia_plano 
			set	nr_seq_tipo_limitacao	= nr_seq_tipo_limitacao_w 
			where	nr_sequencia		= nr_seq_guia_p;
		 
			CALL pls_gravar_motivo_glosa('1423', nr_seq_guia_p, null, null,'Guia com limitação', nm_usuario_p, 'C','CG',nr_seq_prestador_w, '(Regra ' || nr_seq_tipo_limitacao_w || ' -> ' || nr_seq_proc_regra_w || ')',null);
		end if;
	end if;
	end;
end loop;
close c01;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_consistir_limitacao_guia ( nr_seq_guia_p bigint, nm_usuario_p text) FROM PUBLIC;

