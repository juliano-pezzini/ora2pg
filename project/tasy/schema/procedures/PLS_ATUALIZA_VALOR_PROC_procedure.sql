-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_atualiza_valor_proc ( nr_sequencia_p pls_conta_proc.nr_sequencia%type, ie_gravar_log_p text, nm_usuario_p usuario.nm_usuario%type, ie_atualiza_p text, ie_origem_rec_p text, nr_param_dois_p bigint, ie_recalcular_conta_p text default 'N') AS $body$
DECLARE


/*	IE_ORIGEM_REC_P
	C - Consistencia da conta : Mantem o processo da mesma forma como ocorre hoje, utilizado na pls_consistir_conta
	G - Glosar item : Por hora ira realizar comente o recalculo quando dos itens estiverem com o campo ie_via_obrigatoria = 'S', deve recalcular estes itens sem impactar nos status dos mesmo que deve ficar inalterado apos a consistencia
*/
cd_estabelecimento_w		estabelecimento.cd_estabelecimento%type;
cd_estab_cad_benef_w		estabelecimento.cd_estabelecimento%type;
nr_seq_prestador_w		pls_prestador.nr_sequencia%type;
nr_seq_categoria_w		pls_regra_categoria.nr_seq_categoria%type;
dt_procedimento_w			timestamp;
cd_procedimento_w		procedimento.cd_procedimento%type;
ie_origem_proced_w		procedimento.ie_origem_proced%type;
qt_procedimento_w			double precision;
nr_seq_tipo_acomodacao_w		bigint;
nr_seq_tipo_atendimento_w		bigint;
nr_seq_clinica_w			bigint;
nr_seq_plano_w			bigint;
nr_seq_regra_w			bigint;
nr_seq_regra_pos_estab_w		bigint;
nr_seq_conta_w			pls_conta.nr_sequencia%type;
nr_seq_protocolo_w		pls_protocolo_conta.nr_sequencia%type;
nr_seq_segurado_w		pls_segurado.nr_sequencia%type;
nr_seq_regra_adic_w		bigint;
cd_edicao_amb_w			integer;
vl_procedimento_w		double precision	:= 0;
vl_proc_e_interc_esperado_w	double precision	:= 0;
vl_proc_sem_interc_w		double precision	:= 0;
vl_custo_operacional_w		double precision	:= 0;
vl_anestesista_w		double precision	:= 0;
vl_medico_w			double precision	:= 0;
vl_filme_w			double precision	:= 0;
vl_auxiliares_w			double precision	:= 0;
vl_total_partic_w		double precision	:= 0;
vl_proc_unitario_w		double precision	:= 0;
dt_conta_w			timestamp;
dt_atendimento_ref_w		timestamp;
nr_auxiliares_w			integer	:= 0;
tx_item_w			double precision	:= 0;
ie_tipo_guia_w			varchar(2);
cd_medico_conta_w		varchar(10);
nr_seq_regra_honorario_w	bigint;
ie_calcula_valor_w		varchar(1)	:= 'S';
ie_repassa_medico_w		varchar(1)	:= 'S';
ie_conta_repasse_w		varchar(1)	:= 'N';
ie_nacional_w			pls_congenere.ie_nacional%type;
vl_beneficiario_w		double precision	:= 0;
ie_preco_plano_w		varchar(2);
nr_seq_contrato_w		bigint;
nr_seq_outorgante_w		bigint;
ie_tipo_tabela_w		varchar(2)	:= '';
ie_tipo_tabela_int_w		varchar(2)	:= 'X';
cd_guia_w			varchar(20);
ie_cobranca_prevista_w		varchar(1);
ie_cobranca_previa_servico_w	varchar(1);
nr_seq_guia_w			bigint;
ie_regra_data_preco_proc_w	varchar(1);
dt_protocolo_w			timestamp;
dt_preco_w			timestamp	:= clock_timestamp();
ie_gravar_log_w			varchar(1);
ds_observacao_log_w		varchar(4000);
ie_tipo_protocolo_w		varchar(3);
cd_convenio_w			integer;
cd_categoria_w			varchar(10);
ie_tipo_contratacao_w		varchar(2);
qt_dias_internacao_w		bigint;
nr_seq_regra_qtde_exec_w	bigint;
ie_origem_conta_w		varchar(1);
dt_inicio_proc_w		timestamp;
dt_fim_proc_w			timestamp;
vl_proc_copartic_w		double precision	:= 0;
nr_seq_regra_copartic_w		bigint;
ie_calculo_coparticipacao_w	varchar(3);
ie_carater_internacao_w		varchar(2);
cd_porte_anestesico_w		varchar(10);
nr_seq_prestador_solic_w	bigint;
nr_seq_regra_cooperado_w	bigint;
ie_ato_cooperado_w		bigint;
nr_seq_prestador_atend_w	bigint;
nr_seq_classificacao_prest_w	bigint;
nr_Seq_grau_partic_w		bigint;
nr_seq_grau_partic_part_w	bigint;
nr_seq_prestador_pgto_w		bigint;
nr_seq_regra_pgto_w		bigint;
nr_seq_congenere_w		bigint;
tx_intercambio_w		double precision;
ie_tipo_conta_w			varchar(10);
ie_conta_internacao_w		varchar(1)	:= 'N';
tx_pcmco_w			double precision;
ie_pcmso_w			varchar(1);
nr_seq_intercambio_w		bigint;
ie_tecnica_utilizada_w		varchar(1);
ie_criterio_pgto_w		varchar(1);
ie_medico_exec_coope_w		varchar(10);
ie_medico_solic_coope_w		varchar(10);
cd_medico_solicitante_w		varchar(10);
nr_aux_regra_w			bigint;
ie_tipo_segurado_w		varchar(10);
vl_procedimento_ptu_w		double precision	:= 0;
vl_co_ptu_w			double precision	:= 0;
vl_material_ptu_w		double precision	:= 0;
nr_seq_regra_inter_w		bigint;
sg_estado_w			pessoa_juridica.sg_estado%type;
ie_tipo_intercambio_w		varchar(10)	:= 'A';
nr_seq_congenere_seg_w		bigint;
sg_estado_int_w			pessoa_juridica.sg_estado%type;
vl_total_procedimento_w		double precision;
nr_seq_cbo_saude_w		bigint;
nr_seq_cbo_saude_temp_w		pls_proc_participante.nr_seq_cbo_saude%type;
ie_tipo_partic_prof_w		varchar(10);
nr_seq_prest_solic_w		bigint;
nr_seq_regra_autogerado_w	bigint;
qt_porte_anestesico_w		bigint	:= 0;
ie_criterio_horario_w		varchar(10);
ie_cobranca_prevista_proc_w	varchar(1);
nr_seq_fatura_w			bigint;
cd_cgc_w			varchar(14) := '';
ie_status_w			varchar(1);
cd_medico_w			varchar(10);
ie_vinculado_w			varchar(1);
vl_medico_vinc_w		double precision;
vl_anestesista_vinc_w		double precision;
vl_auxiliares_vinc_w		double precision;
vl_custo_operacional_vinc_w	double precision;
vl_materiais_vinc_w		double precision;
vl_procedimento_vinc_w		double precision;
vl_total_proc_vinc_w		double precision;
nr_seq_congenere_outorg_w	bigint;
vl_calc_co_util_w		double precision	:= 0;
vl_calc_hi_util_w        	double precision	:= 0;
vl_calc_mat_util_w		double precision	:= 0;
vl_procedimento_imp_w		double precision	:= 0;
ie_valor_informado_w		varchar(1);
ie_vl_apresentado_sistema_w	varchar(1);
tx_procedimento_w		double precision;
tx_medico_w			double precision;
tx_custo_operacional_w		double precision;
tx_material_w			double precision;
tx_anestesista_w		double precision;
tx_auxiliares_w			double precision;
ie_restringe_estab_w		varchar(2);
ie_atualiza_via_acesso_w	varchar(1);
ie_via_acesso_w			varchar(1);
vl_calculado_ant_w		double precision;
ie_copartic_grau_partic_w	varchar(1);
ie_taxa_grau_partic_w		varchar(1);
vl_medico_copartic_w		double precision;
vl_auxiliares_copartic_w	double precision;
vl_anestesista_copartic_w	double precision;
vl_co_copartic_w		double precision;
vl_filme_copartic_w		double precision;
vl_total_partic_copartic_w	double precision;
tx_adicional_proc_copartic_w	double precision	:= 1;
ie_repassa_medico_pgto_w	varchar(1);
tx_adm_w			double precision;
vl_material_ptu_imp_w		double precision;
vl_co_ptu_imp_w			double precision;
vl_procedimento_ptu_imp_w	double precision;
vl_medico_ptu_imp_w		double precision;
ie_ptu_vl_honorario_w		varchar(1);
ie_ptu_vl_co_w			varchar(1);
ie_ptu_vl_filme_w		varchar(1);
ie_tipo_acomodacao_ptu_w	varchar(1);
ie_tx_manual_w			varchar(1);
dt_alta_w			timestamp;
vl_taxa_co_w			double precision	:= 0;
vl_taxa_material_w		double precision	:= 0;--Apesar do campo estar como 12,4 na tabela deve ser realizado apenas duas casas decimais devido a geracao de problemas ligados ao arredondamento
vl_taxa_servico_w		double precision	:= 0;
ie_tabela_horario_w		varchar(1);
cd_moeda_autogerado_w		smallint;
nr_seq_rp_combinada_w		pls_rp_cta_combinada.nr_sequencia%type;
dt_recebimento_fatura_w		ptu_fatura.dt_recebimento_fatura%type;
dt_postagem_fatura_w		ptu_fatura.dt_postagem%type;
nr_seq_grupo_coop_seg_w		pls_segurado.nr_seq_grupo_coop%type;
ie_seguro_obito_w		pls_plano.ie_seguro_obito%type;
ie_tipo_despesa_w		pls_conta_proc.ie_tipo_despesa%type;
ie_status_conta_w		pls_conta.ie_status%type;
dados_conta_valor_w		pls_cta_valorizacao_pck.dados_conta;
dados_conta_proc_valor_w	pls_cta_valorizacao_pck.dados_conta_proc;
dados_beneficiario_valor_w	pls_cta_valorizacao_pck.dados_beneficiario;
dados_fatura_valor_w		pls_cta_valorizacao_pck.dados_fatura;
dados_tx_interc_valor_w		pls_cta_valorizacao_pck.dados_taxa_intercambio;
dados_procedimento_w		pls_cta_valorizacao_pck.dados_procedimento;
dados_prestador_prot_w		pls_cta_valorizacao_pck.dados_prestador_prot;
dados_prestador_exec_w		pls_cta_valorizacao_pck.dados_prestador_exec;
ie_nao_gera_tx_inter_w		pls_regra_preco_proc.ie_nao_gera_tx_inter%type;
ie_prioridade_tx_item_w		pls_parametros.ie_prioridade_tx_item%type;
nr_seq_regra_tx_inter_w		pls_conta_proc.nr_seq_regra_tx_inter%type;
dados_adic_horario_w		pls_cta_valorizacao_pck.dados_adic_horario;
nr_seq_log_exec_w		pls_cta_log_exec.nr_sequencia%type;
vl_ch_honorarios_w		cotacao_moeda.vl_cotacao%type;
vl_ch_custo_filme_w		cotacao_moeda.vl_cotacao%type;
vl_ch_anestesista_w		cotacao_moeda.vl_cotacao%type;
nr_seq_prestador_solic_ref_w	pls_conta_proc_v.nr_seq_prestador_solic%type;
ie_tx_manual_atualiza_w		varchar(1) := 'N';
tx_material_temp_w		pls_conta_proc.tx_material%type;
tx_custo_operacional_temp_w	pls_conta_proc.tx_custo_operacional%type;
tx_medico_temp_w		pls_conta_proc.tx_medico%type;
dados_regra_preco_proc_w	pls_cta_valorizacao_pck.dados_regra_preco_proc;
dados_guia_w			pls_cta_valorizacao_pck.dados_guia;
vl_custo_operacional_tab_w	preco_amb.vl_custo_operacional%type;
qt_filme_tab_w			preco_amb.qt_filme%type;
vl_medico_tab_w			pls_conta_proc.vl_medico_tab%type;
cd_versao_tiss_w		pls_conta_proc_v.cd_versao_tiss%type;
nr_seq_tipo_acomodacao_benef_w	pls_segurado.nr_seq_tipo_acomodacao%type;
ie_franquia_w			pls_regra_preco_proc.ie_franquia%type	:= 'N';
vl_franquia_w			pls_franquia_regra.vl_franquia%type	:= 0;
vl_tot_franquia_w		pls_franquia_regra.vl_franquia%type	:= 0;
vl_medico_original_w  		pls_conta_proc.vl_medico_original%type;
nr_seq_conta_princ_w		pls_conta.nr_sequencia%type;
ie_cobranca_prevista_ww		pls_guia_plano_proc.ie_cobranca_prevista%type;
ie_tipo_log_w			pls_log_calculo_proc.ie_tipo_log%type := 'C';
nr_seq_ops_congenere_seg_w	pls_segurado.nr_seq_ops_congenere%type;
ie_tipo_intercambio_benef_w	varchar(1) := 'A';
tx_item_regra_w			pls_conta_proc_regra.tx_item%type;
vl_proc_cobranca_prev_w		pls_conta_proc.vl_proc_cobranca_prev%type := 0;
nr_seq_regra_cobr_prev_w	pls_conta_proc.nr_seq_regra_cobr_prev%type;
qt_regra_cobr_prev_w		integer;
nr_seq_cbo_saude_solic_w	pls_conta.nr_seq_cbo_saude_solic%type;
ie_via_acesso_exec_w		pls_conta_proc.ie_via_acesso%type;
ie_max_nr_auxiliares_w		pls_parametros.ie_max_nr_auxiliares%type;
nr_auxiliares_atend_w		pls_conta_proc.nr_auxiliares%type;
vl_fixo_tx_adm_w			pls_prestador_taxa_item.vl_fixo%type;
nr_seq_regra_tx_adm_w			pls_prestador_taxa_item.nr_sequencia%type;
vl_base_para_taxa_adm_w		pls_prestador_taxa_item.vl_fixo%type;
vl_fixo_tx_adm_aplicar_w	pls_prestador_taxa_item.vl_fixo%type;
nr_seq_regra_via_acesso_w       pls_conta_proc.nr_seq_regra_via_acesso%type;
ie_tipo_intercambio_regra_w     pls_tipo_via_acesso.ie_tipo_intercambio%type;
ie_nivel_via_acesso_w			pls_parametros.ie_nivel_via_acesso%type;
ie_regime_atendimento_princ_w	pls_regra_preco_proc.ie_regime_atendimento_princ%type;
ie_regime_atendimento_w			pls_regra_preco_proc.ie_regime_atendimento%type;
ie_saude_ocupacional_w			pls_regra_preco_proc.ie_saude_ocupacional%type;

-- Prevencao de DeadLock

-- Definicao da excecao de deadlock
deadlock_exception exception;

-- contador de quantas repetilcoes aconteceram
deadlock_i_w			integer;
-- maximo de tentativas de repeticao
deadlock_max_tentativa_w	integer := 3;
-- Controle se deve tentar repetir a operacao
deadlock_repetir_w		varchar(1);



BEGIN
/* Obter dados do procedimento */

select	cd_procedimento,
	ie_origem_proced,
	dt_procedimento,
	coalesce(qt_procedimento_imp,1),
	coalesce(tx_item,100),
	nr_seq_conta,
	dt_inicio_proc,
	dt_fim_proc,
	ie_tecnica_utilizada,
	ie_criterio_horario,
	ie_cobranca_prevista,
	ie_status,
	vl_procedimento_imp,
	ie_vl_apresentado_sistema,
	ie_valor_informado,
	nr_seq_regra_qtde_exec,
	ie_via_acesso,
	vl_procedimento,
	vl_material_ptu_imp,
	vl_co_ptu_imp,
	vl_procedimento_ptu_imp,
	ie_tx_manual,
	nr_seq_rp_combinada,
	cd_grupo_proc,
	cd_especialidade,
	cd_area_procedimento,
	nr_seq_grupo_rec,
	nr_seq_protocolo,
	cd_estabelecimento,
	nr_seq_tipo_acomodacao,
	coalesce(nr_seq_tipo_atendimento,0),
	nr_seq_clinica,
	nr_seq_segurado,
	dt_atendimento_conta,
	ie_tipo_guia,
	cd_medico_executor,
	nr_seq_prestador_exec,
	cd_guia_referencia,
	qt_dias_internacao,
	ie_origem_conta,
	ie_carater_internacao,
	coalesce(nr_seq_grau_partic,0),
	coalesce(ie_tipo_conta,'O'),
	cd_medico_solicitante,
	nr_seq_cbo_saude,
	nr_seq_prestador_conta,
	nr_seq_fatura,
	ie_tipo_acomodacao_ptu,
	dt_alta_conta,
	dt_mes_competencia,
	ie_tipo_protocolo,
	nr_seq_prestador_prot,
	nr_seq_congenere,
	dt_recebimento_fatura,
	dt_postagem_fatura,
	ie_status_conta,
	nr_seq_guia,
	tx_intercambio,
	nr_seq_regra_tx_inter,
	nr_seq_tipo_prest_prot,
	nr_seq_clas_prest_prot,
	ie_tipo_vinculo_prest_prot,
	cd_prestador_prot,
	nr_seq_tipo_prest_exec,
	nr_seq_clas_prest_exec,
	ie_tipo_vinculo_prest_exec,
	cd_prestador_exec,
	nr_seq_prestador_exec,
	nr_seq_prestador_solic,
	dt_procedimento,
	cd_cgc_prest_exec,
	ie_tipo_despesa,
	cd_versao_tiss,
	cd_prestador_solic,
	nr_seq_conta_princ,
	ie_vinc_internado,
	ie_internado,
	nr_seq_cbo_saude_solic,
	ie_tipo_segurado,
        nr_seq_regra_via_acesso,
        (select max(x.ie_tipo_intercambio) from pls_tipo_via_acesso x where x.nr_sequencia = nr_seq_regra_via_acesso) ie_tipo_intercambio,
	nr_seq_tipo_conta,
	ie_regime_atendimento,
	ie_saude_ocupacional
into STRICT	cd_procedimento_w,
	ie_origem_proced_w,
	dt_procedimento_w,
	qt_procedimento_w,
	tx_item_w,
	nr_seq_conta_w,
	dt_inicio_proc_w,
	dt_fim_proc_w,
	ie_tecnica_utilizada_w,
	ie_criterio_horario_w,
	ie_cobranca_prevista_proc_w,
	ie_status_w,
	vl_procedimento_imp_w,
	ie_vl_apresentado_sistema_w,
	ie_valor_informado_w,
	nr_seq_regra_qtde_exec_w,
	ie_via_acesso_w,
	vl_calculado_ant_w,
	vl_material_ptu_imp_w,
	vl_co_ptu_imp_w,
	vl_procedimento_ptu_imp_w,
	ie_tx_manual_w,
	nr_seq_rp_combinada_w,
	dados_procedimento_w.cd_grupo_proc,
	dados_procedimento_w.cd_especialidade,
	dados_procedimento_w.cd_area_procedimento,
	dados_procedimento_w.nr_seq_grupo_rec,
	nr_seq_protocolo_w,
	cd_estabelecimento_w,
	nr_seq_tipo_acomodacao_w,
	nr_seq_tipo_atendimento_w,
	nr_seq_clinica_w,
	nr_seq_segurado_w,
	dt_conta_w,
	ie_tipo_guia_w,
	cd_medico_conta_w,
	nr_seq_prestador_w,
	cd_guia_w,
	qt_dias_internacao_w,
	ie_origem_conta_w,
	ie_carater_internacao_w,
	nr_Seq_grau_partic_w,
	ie_tipo_conta_w,
	cd_medico_solicitante_w,
	nr_seq_cbo_saude_w,
	nr_seq_prest_solic_w,
	nr_seq_fatura_w,
	ie_tipo_acomodacao_ptu_w,
	dt_alta_w,
	dt_protocolo_w,
	ie_tipo_protocolo_w,
	nr_seq_prestador_atend_w,
	nr_seq_congenere_w,
	dt_recebimento_fatura_w,
	dt_postagem_fatura_w,
	ie_status_conta_w,
	nr_seq_guia_w,
	dados_tx_interc_valor_w.pr_taxa,
	dados_tx_interc_valor_w.nr_sequencia,
	dados_prestador_prot_w.nr_seq_tipo_prestador,
	dados_prestador_prot_w.nr_seq_classificacao,
	dados_prestador_prot_w.ie_tipo_vinculo,
	dados_prestador_prot_w.cd_prestador,
	dados_prestador_exec_w.nr_seq_tipo_prestador,
	dados_prestador_exec_w.nr_seq_classificacao,
	dados_prestador_exec_w.ie_tipo_vinculo,
	dados_prestador_exec_w.cd_prestador,
	dados_prestador_exec_w.nr_seq_prestador,
	nr_seq_prestador_solic_ref_w,
	dt_preco_w,
	cd_cgc_w,
	ie_tipo_despesa_w,
	cd_versao_tiss_w,
	dados_conta_valor_w.cd_prestador_solic,
	nr_seq_conta_princ_w,
	dados_conta_valor_w.ie_ref_guia_internacao,
	ie_conta_internacao_w,
	nr_seq_cbo_saude_solic_w,
	ie_tipo_segurado_w,
        nr_seq_regra_via_acesso_w,
        ie_tipo_intercambio_regra_w,
	dados_conta_valor_w.nr_seq_tipo_conta,
	ie_regime_atendimento_w,
	ie_saude_ocupacional_w
from	pls_conta_proc_v
where	nr_sequencia = nr_sequencia_p;

select 	max(a.nr_seq_tipo_atendimento),
	max(a.dt_atendimento),
	max(a.ie_regime_atendimento)
into STRICT 	dados_conta_valor_w.nr_seq_tipo_atendimento,
	dt_atendimento_ref_w,
	ie_regime_atendimento_princ_w
from 	pls_conta_v a
where 	a.nr_sequencia = nr_seq_conta_princ_w;

select	max(tx_material),
	max(tx_custo_operacional),
	max(tx_medico)
into STRICT	tx_material_temp_w,
	tx_custo_operacional_temp_w,
	tx_medico_temp_w
from	pls_conta_proc
where 	nr_sequencia = nr_sequencia_p;

dados_conta_proc_valor_w.nr_sequencia		:= nr_sequencia_p;
dados_conta_proc_valor_w.nr_seq_conta		:= nr_seq_conta_w;
dados_conta_proc_valor_w.ie_origem_proced	:= ie_origem_proced_w;
dados_conta_proc_valor_w.cd_procedimento	:= cd_procedimento_w;
dados_conta_proc_valor_w.dt_procedimento	:= dt_procedimento_w;
dados_conta_proc_valor_w.dt_inicio_proc		:= dt_inicio_proc_w;
dados_conta_proc_valor_w.dt_fim_proc		:= dt_fim_proc_w;
dados_conta_proc_valor_w.ie_criterio_horario	:= ie_criterio_horario_w;

if (vl_procedimento_ptu_imp_w > 0) and (vl_procedimento_ptu_imp_w IS NOT NULL AND vl_procedimento_ptu_imp_w::text <> '') then
	vl_medico_ptu_imp_w := vl_procedimento_ptu_imp_w;
end if;

dados_conta_valor_w.nr_sequencia 		:= nr_seq_conta_w;
dados_conta_valor_w.ie_origem_conta		:= ie_origem_conta_w;
dados_conta_valor_w.ie_tipo_conta		:= ie_tipo_conta_w;
dados_conta_valor_w.nr_seq_segurado		:= nr_seq_segurado_w;

dados_conta_valor_w.ie_tipo_guia		:= ie_tipo_guia_w;
dados_conta_valor_w.dt_alta			:= dt_alta_w;
dados_conta_valor_w.dt_atendimento		:= dt_conta_w;

dados_fatura_valor_w.nr_sequencia		:= nr_seq_fatura_w;
dados_fatura_valor_w.dt_recebimento		:= dt_recebimento_fatura_w;
dados_fatura_valor_w.dt_postagem		:= dt_postagem_fatura_w;

dados_prestador_prot_w.nr_seq_prestador	:= nr_seq_prestador_atend_w;

-- Obter dados do protocolo
if (coalesce(nr_seq_protocolo_w::text, '') = '') then
	--Conta ||nr_seq_conta_w||  sem protocolo favor vincular um protocolo
	CALL wheb_mensagem_pck.exibir_mensagem_abort(177447,'NR_SEQ_CONTA=' ||nr_seq_conta_w);
end if;

if (ie_conta_internacao_w	= 'N') then
	ie_conta_internacao_w	:= 'A';
end if;

-- Obter parametros da conta medica
ie_restringe_estab_w := coalesce(pls_obter_se_controle_estab('CO'), 'S');

if (ie_restringe_estab_w = 'S') then

	select	coalesce(max(ie_calculo_coparticipacao),'P'),
		coalesce(max(ie_copartic_grau_partic),'N'),
		coalesce(max(ie_taxa_grau_partic),'N'),
		coalesce(max(ie_prioridade_tx_item),'VA'),
		coalesce(max(ie_max_nr_auxiliares),'N'),
		coalesce(max(ie_nivel_via_acesso),'N')
	into STRICT	ie_calculo_coparticipacao_w,
		ie_copartic_grau_partic_w,
		ie_taxa_grau_partic_w,
		ie_prioridade_tx_item_w,
		ie_max_nr_auxiliares_w,
		ie_nivel_via_acesso_w
	from	pls_parametros
	where	cd_estabelecimento = cd_estabelecimento_w;
else
	select	coalesce(max(ie_calculo_coparticipacao),'P'),
		coalesce(max(ie_copartic_grau_partic),'N'),
		coalesce(max(ie_taxa_grau_partic),'N'),
		coalesce(max(ie_prioridade_tx_item),'VA'),
		coalesce(max(ie_max_nr_auxiliares),'N'),
		coalesce(max(ie_nivel_via_acesso),'N')
	into STRICT	ie_calculo_coparticipacao_w,
		ie_copartic_grau_partic_w,
		ie_taxa_grau_partic_w,
		ie_prioridade_tx_item_w,
		ie_max_nr_auxiliares_w,
    ie_nivel_via_acesso_w
	from	pls_parametros;
end if;

if (coalesce(ie_via_acesso_w,'X') <> 'X') and (coalesce(ie_origem_conta_w,'X') in ('D','P')) then

	ie_atualiza_via_acesso_w := obter_valor_param_usuario(1208, 28, Obter_Perfil_Ativo, nm_usuario_p, cd_estabelecimento_w);

	if (coalesce(ie_atualiza_via_acesso_w,'N') = 'S' )  and (coalesce(ie_tipo_intercambio_regra_w, 'X') = 'X' and coalesce(nr_seq_regra_via_acesso_w::text, '') = '') and (ie_nivel_via_acesso_w = 'N') then

		tx_item_w := obter_tx_proc_via_acesso(ie_via_acesso_w);
	end if;
end if;

if (ie_max_nr_auxiliares_w	= 'S') then
	select 	max(nr_auxiliares)
	into STRICT	nr_auxiliares_atend_w
	from	pls_conta_proc_v
	where	nr_seq_guia = nr_seq_guia_w
	and	dt_procedimento = dt_procedimento_w;

	if (coalesce(nr_auxiliares_atend_w::text, '') = '') then
		select 	max(nr_auxiliares)
		into STRICT	nr_auxiliares_atend_w
		from	pls_conta_proc_v
		where	cd_guia_referencia 	= cd_guia_w
		and	nr_seq_segurado 	= nr_seq_segurado_w
		and	dt_procedimento 	= dt_procedimento_w;

	end if;
end if;
if (cd_guia_w IS NOT NULL AND cd_guia_w::text <> '') then
	/* Obter dados da autorizacao */

	if (coalesce(nr_seq_guia_w::text, '') = '') then
		begin
			select	CASE WHEN coalesce(ie_cobranca_prevista,'N')='S' THEN 'S'  ELSE CASE WHEN coalesce(ie_cobranca_prevista_proc_w,'N')='S' THEN 'S'  ELSE 'N' END  END ,
				nr_sequencia,
				coalesce(nr_seq_prestador, nr_seq_prest_solic_w),
				ie_tipo_consulta,
				ie_pcmso,
				nr_seq_tipo_acomodacao
			into STRICT	ie_cobranca_prevista_w,
				nr_seq_guia_w,
				nr_seq_prest_solic_w,
				dados_guia_w.ie_tipo_consulta_guia,
				dados_conta_valor_w.ie_atend_pcmso,
				dados_guia_w.nr_seq_tipo_acomodacao
			from	pls_guia_plano
			where	cd_guia		= cd_guia_w
			and	nr_seq_segurado	= nr_seq_segurado_w;

			if (ie_cobranca_prevista_w = 'N') then

				select	coalesce(max(ie_cobranca_prevista),'N')
				into STRICT	ie_cobranca_prevista_ww
				from	pls_guia_plano_proc
				where	cd_procedimento 	= cd_procedimento_w
				and	ie_origem_proced 	= ie_origem_proced_w
				and	nr_seq_guia 		= nr_seq_guia_w;

				if (ie_cobranca_prevista_ww = 'S') then
					ie_cobranca_prevista_w := ie_cobranca_prevista_ww;
				end if;
			end if;

		exception
		when others then
			nr_seq_guia_w	:= 0;
			ie_cobranca_prevista_w	:= ie_cobranca_prevista_proc_w;
		end;
	else
		begin
			select	CASE WHEN coalesce(ie_cobranca_prevista,'N')='S' THEN 'S'  ELSE CASE WHEN coalesce(ie_cobranca_prevista_proc_w,'N')='S' THEN 'S'  ELSE 'N' END  END ,
				coalesce(nr_seq_prestador, nr_seq_prest_solic_w),
				ie_tipo_consulta,
				ie_pcmso,
				nr_seq_tipo_acomodacao
			into STRICT	ie_cobranca_prevista_w,
				nr_seq_prest_solic_w,
				dados_guia_w.ie_tipo_consulta_guia,
				dados_conta_valor_w.ie_atend_pcmso,
				dados_guia_w.nr_seq_tipo_acomodacao
			from	pls_guia_plano
			where	nr_sequencia	= nr_seq_guia_w;

			if (ie_cobranca_prevista_w = 'N') then

				select	max(ie_cobranca_prevista)
				into STRICT	ie_cobranca_prevista_ww
				from	pls_guia_plano_proc
				where	cd_procedimento 	= cd_procedimento_w
				and	ie_origem_proced 	= ie_origem_proced_w
				and	nr_seq_guia 		= nr_seq_guia_w;

				if (ie_cobranca_prevista_ww = 'S') then
					ie_cobranca_prevista_w := ie_cobranca_prevista_ww;
				end if;
			end if;

		exception
		when others then
			ie_cobranca_prevista_w	:= ie_cobranca_prevista_proc_w;
		end;
	end if;

	/* Edgar 11/09/2013, OS 643699, conforme autorizado pelo Adriano, podemos tratar fixo para obter o prestador da requisicao como solicitante quando existir*/

	if (nr_seq_prestador_solic_ref_w IS NOT NULL AND nr_seq_prestador_solic_ref_w::text <> '') then
		nr_seq_prest_solic_w	:= nr_seq_prestador_solic_ref_w;
	else
		begin
			select	coalesce(c.nr_seq_prestador, nr_seq_prest_solic_w),
				c.ie_tipo_consulta
			into STRICT	nr_seq_prest_solic_w,
				dados_guia_w.ie_tipo_consulta_req
			from	pls_requisicao c,
				pls_execucao_req_item a
			where	a.nr_seq_requisicao	= c.nr_sequencia
			and	a.nr_seq_guia		= nr_seq_guia_w  LIMIT 1;
		exception
		when others then
			null;
		end;
	end if;

	if	((ie_conta_internacao_w		= 'S') and (coalesce(nr_seq_tipo_acomodacao_w::text, '') = ''))or (ie_tipo_guia_w 		= '6')then

		select	max(ie_carater_internacao),
			max(nr_seq_tipo_acomodacao),
			max(nr_seq_clinica),
			max(ie_tipo_consulta),
			max(ie_tipo_acomodacao_ptu)
		into STRICT	ie_carater_internacao_w,
			nr_seq_tipo_acomodacao_w,
			nr_seq_clinica_w,
			dados_conta_valor_w.ie_tipo_consulta,
			ie_tipo_acomodacao_ptu_w
		from	pls_conta
		where	ie_tipo_guia 	= 5
		and	nr_seq_segurado = nr_seq_segurado_w
		and	cd_guia_ok 	= cd_guia_w;

	end if;
	/* Obter dados do procedimento da autorizacao */

	if (nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '') then
		select	max(ie_cobranca_previa_servico)
		into STRICT	ie_cobranca_previa_servico_w
		from	pls_guia_plano_proc
		where	nr_seq_guia		= nr_seq_guia_w
		and	cd_procedimento		= cd_procedimento_w
		and	ie_origem_proced	= ie_origem_proced_w;

		if (coalesce(ie_cobranca_previa_servico_w::text, '') = '') then
			ie_cobranca_previa_servico_w := 'N';
		end if;

	end if;

	if (coalesce(dados_conta_valor_w.ie_tipo_consulta::text, '') = '' ) then
		select	max(ie_tipo_consulta)
		into STRICT	dados_conta_valor_w.ie_tipo_consulta
		from	pls_conta
		where	ie_tipo_guia 	= ie_tipo_guia_w
		and		nr_seq_segurado = nr_seq_segurado_w
		and		cd_guia_ok 	= cd_guia_w;
	end if;

end if;

if (nr_seq_segurado_w IS NOT NULL AND nr_seq_segurado_w::text <> '') then
	select	coalesce(pls_obter_produto_benef(nr_sequencia,dt_atendimento_ref_w),0),
		coalesce(nr_seq_contrato,0),
		pls_obter_conv_cat_segurado(nr_sequencia, 1),
		pls_obter_conv_cat_segurado(nr_sequencia, 2),
		coalesce(ie_pcmso,'N'),
		nr_seq_intercambio,
		nr_seq_congenere,
		nr_seq_ops_congenere,
		nr_seq_grupo_coop,
		nr_seq_tipo_acomodacao,
		cd_estabelecimento
	into STRICT	nr_seq_plano_w,
		nr_seq_contrato_w,
		cd_convenio_w,
		cd_categoria_w,
		ie_pcmso_w,
		nr_seq_intercambio_w,
		nr_seq_congenere_seg_w,
		nr_seq_ops_congenere_seg_w,
		nr_seq_grupo_coop_seg_w,
		nr_seq_tipo_acomodacao_benef_w,
		cd_estab_cad_benef_w
	from	pls_segurado
	where	nr_sequencia	= nr_seq_segurado_w;

	ie_tipo_intercambio_benef_w := pls_obter_tipo_intercambio(coalesce(nr_seq_ops_congenere_seg_w, nr_seq_congenere_seg_w), cd_estab_cad_benef_w);

	--aaschlote 18/02/2015 - OS 846495
	if (coalesce(nr_seq_tipo_acomodacao_benef_w::text, '') = '') then
		select	max(nr_seq_tipo_acomodacao)
		into STRICT	nr_seq_tipo_acomodacao_benef_w
		from	pls_plano_acomodacao
		where	nr_seq_plano	= nr_seq_plano_w
		and	ie_acomod_padrao = 'S';

		if (coalesce(nr_seq_tipo_acomodacao_benef_w::text, '') = '') then
			select	max(nr_seq_tipo_acomodacao)
			into STRICT	nr_seq_tipo_acomodacao_benef_w
			from	pls_plano_acomodacao
			where	nr_seq_plano	= nr_seq_plano_w;
		end if;

                if (coalesce(nr_seq_tipo_acomodacao_benef_w::text, '') = '') then
                        select	max(c.nr_seq_tipo_acomodacao)
                        into STRICT	nr_seq_tipo_acomodacao_benef_w
                        from	pls_plano_acomodacao a,
                                pls_categoria b,
                                pls_regra_categoria c
                        where	a.nr_seq_categoria = b.nr_sequencia
                        and	b.nr_sequencia = c.nr_seq_categoria
                        and	a.nr_seq_plano = nr_seq_plano_w
                        and	c.ie_acomod_padrao = 'S';
                end if;

                if (coalesce(nr_seq_tipo_acomodacao_benef_w::text, '') = '') then
                        select	max(c.nr_seq_tipo_acomodacao)
                        into STRICT	nr_seq_tipo_acomodacao_benef_w
                        from	pls_plano_acomodacao a,
                                pls_categoria b,
                                pls_regra_categoria c
                        where	a.nr_seq_categoria = b.nr_sequencia
                        and	b.nr_sequencia = c.nr_seq_categoria
                        and a.nr_seq_plano = nr_seq_plano_w;
                end if;
        end if;
else
	nr_seq_plano_w	:= null;
	CALL pls_gravar_conta_glosa('1013',nr_seq_conta_w,null,
				null,'N','Beneficirio nao informado',nm_usuario_p,
				'A','CC',nr_seq_prestador_w,
				cd_estabelecimento_w,'',null);
end if;

if (cd_versao_tiss_w 		> '3.01.00') and (coalesce(nr_seq_tipo_acomodacao_w,0) = 0) then
	nr_seq_tipo_acomodacao_w	:= nr_seq_tipo_acomodacao_benef_w;
end if;
/* Obter a categoria do tipo de acomodacao */

if (nr_seq_tipo_acomodacao_w IS NOT NULL AND nr_seq_tipo_acomodacao_w::text <> '') then
	select	max(nr_seq_categoria)
	into STRICT	nr_seq_categoria_w
	from	pls_regra_categoria
	where	nr_seq_tipo_acomodacao	= nr_seq_tipo_acomodacao_w;
end if;

/* Obter dados do plano */

begin
	select	ie_preco,
		nr_seq_outorgante,
		ie_tipo_contratacao,
		ie_seguro_obito
	into STRICT	ie_preco_plano_w,
		nr_seq_outorgante_w,
		ie_tipo_contratacao_w,
		ie_seguro_obito_w
	from	pls_plano
	where	nr_sequencia	= nr_seq_plano_w;
exception
	when others then
	ie_preco_plano_w	:= '0';
	nr_seq_outorgante_w	:= 0;
end;

dados_beneficiario_valor_w.nr_sequencia		:= nr_seq_segurado_w;
dados_beneficiario_valor_w.nr_seq_intercambio	:= nr_seq_intercambio_w;
dados_beneficiario_valor_w.nr_seq_plano		:= nr_seq_plano_w;
dados_beneficiario_valor_w.nr_seq_grupo_coop	:= nr_seq_grupo_coop_seg_w;
dados_beneficiario_valor_w.ie_tipo_beneficiario	:= ie_tipo_segurado_w;
dados_beneficiario_valor_w.ie_beneficio_obito	:= ie_seguro_obito_w;
dados_beneficiario_valor_w.ie_pcmso		:= ie_pcmso_w;
dados_beneficiario_valor_w.nr_seq_contrato	:= nr_seq_contrato_w;
dados_beneficiario_valor_w.ie_tipo_intercambio	:= ie_tipo_intercambio_benef_w;
dados_conta_valor_w.ie_carater_internacao	:= ie_carater_internacao_w;
/* Obter dados do prestador */

nr_seq_classificacao_prest_w	:= dados_prestador_exec_w.nr_seq_classificacao;

/*
if	not	((cd_medico_conta_w 	is not null) and
		(ie_tipo_guia_w		!= '5')) then

	cd_medico_w	:= cd_medico_conta_w;


		Esses campos sao utilizados para restringir as regras de preco elegiveis para o procedimento, apesar de poderem
		existir mais de um participante e com isso mais de um CBO, ficou definido que para aplicacao das regras de preco
		sera buscado o max.

	select	max(cd_medico),
		max(nr_seq_cbo_saude)
	into	cd_medico_w,
		nr_seq_cbo_saude_temp_w
	from	pls_proc_participante
	where	nr_seq_conta_proc	= nr_sequencia_p;

	if	(nvl(cd_medico_w,'X') = 'X') then
		cd_medico_w	:= cd_medico_conta_w;
	end if;

	--Se nao existir o CBO informado na conta e existir entre os participantes, entao considera o segundo.

	if	(nr_seq_cbo_saude_temp_w is not null) then
		nr_seq_cbo_saude_w := nr_seq_cbo_saude_temp_w;
	end if;

end if;

Teste para verificar se a conta e de repasse, pois nesse caso existira apenas um medico sendo que esse e credenciado a operadora
if	(cd_medico_conta_w 	is not null) and
	(ie_tipo_guia_w		!= '5')	then
	cd_medico_w	:= cd_medico_conta_w;
end if;*/


--Comentado pois foi substituido pela function pls_obter_medico_executor que faz toda essa verificacao. aedemuth
cd_medico_w := pls_obter_medico_executor(nr_sequencia_p, 'P');

select	max(nr_seq_cbo_saude)
into STRICT	nr_seq_cbo_saude_temp_w
from	pls_proc_participante
where	cd_medico 		= cd_medico_w
and	nr_seq_conta_proc 	= nr_sequencia_p;

if (nr_seq_cbo_saude_temp_w IS NOT NULL AND nr_seq_cbo_saude_temp_w::text <> '') then
	nr_seq_cbo_saude_w := nr_seq_cbo_saude_temp_w;
end if;

select	max(nr_seq_grau_partic)
into STRICT	nr_seq_grau_partic_part_w
from	pls_proc_participante
where	nr_seq_conta_proc	= nr_sequencia_p;

/* A variavel IE_CONTA_REPASSE e utilizada para a PLS_OBTER_REGRA_HONORARIO
*/
if (ie_tipo_protocolo_w	= 'R') then
	ie_tipo_tabela_w	:= 'R';
	ie_calcula_valor_w	:= 'S';
	ie_repassa_medico_w	:= 'S';
elsif (ie_tipo_protocolo_w	= 'I') then
	ie_tipo_tabela_int_w	:= 'IP';
	ie_repassa_medico_w	:= 'S';

	if (ie_origem_conta_w = 'A') then
		ie_tipo_tabela_w	:= 'IP';
	else
		ie_tipo_tabela_w	:= 'P';
	end if;

	SELECT * FROM pls_obter_regra_honorario(ie_tipo_guia_w, ie_conta_repasse_w, cd_medico_w, nr_seq_tipo_atendimento_w, cd_procedimento_w, ie_origem_proced_w, nm_usuario_p, cd_estabelecimento_w, nr_seq_prestador_w, nr_seq_prestador_atend_w, 'PE', ie_tipo_conta_w, nr_seq_grau_partic_part_w, dt_procedimento_w, vl_medico_ptu_imp_w, vl_co_ptu_imp_w, vl_material_ptu_imp_w, nr_seq_regra_honorario_w, ie_calcula_valor_w, ie_repassa_medico_w, ie_ptu_vl_honorario_w, ie_ptu_vl_co_w, ie_ptu_vl_filme_w, nr_sequencia_p  ) INTO STRICT nr_seq_regra_honorario_w, ie_calcula_valor_w, ie_repassa_medico_w, ie_ptu_vl_honorario_w, ie_ptu_vl_co_w, ie_ptu_vl_filme_w;

	ie_calcula_valor_w	:= 'S';
else
	ie_tipo_tabela_w	:= 'P';

	SELECT * FROM pls_obter_regra_honorario(ie_tipo_guia_w, ie_conta_repasse_w, cd_medico_w, nr_seq_tipo_atendimento_w, cd_procedimento_w, ie_origem_proced_w, nm_usuario_p, cd_estabelecimento_w, nr_seq_prestador_w, nr_seq_prestador_atend_w, 'PE', ie_tipo_conta_w, nr_seq_grau_partic_part_w, dt_procedimento_w, 0, 0, 0, nr_seq_regra_honorario_w, ie_calcula_valor_w, ie_repassa_medico_w, ie_ptu_vl_honorario_w, ie_ptu_vl_co_w, ie_ptu_vl_filme_w, nr_sequencia_p) INTO STRICT nr_seq_regra_honorario_w, ie_calcula_valor_w, ie_repassa_medico_w, ie_ptu_vl_honorario_w, ie_ptu_vl_co_w, ie_ptu_vl_filme_w;

	select	coalesce(max(ie_criterio_pgto),'N')
	into STRICT	ie_criterio_pgto_w
	from	pls_regra_honorario
	where	nr_sequencia	= nr_seq_regra_honorario_w;

	if (ie_criterio_pgto_w = 'S') then
		ie_vinculado_w	:= pls_obter_vinc_medico_prest(cd_medico_w, nr_seq_prestador_w, dt_procedimento_w);
		/* Felipe - 09/12/2011 - OS 370695 - Solicitado pelo cliente para essa regra verificar em relacao ao prestador executor da conta e nao do protocolo */


		/*Diogo - 09/01/2011 - OS 370695 - Solicitado pelo cliente para caso o prestador da conta for PF usar como referencia o Prestador do protocolo */

		if ( ie_vinculado_w = 'C' ) then
			if (cd_cgc_w IS NOT NULL AND cd_cgc_w::text <> '') then
				SELECT * FROM pls_obter_prest_pgto_prof(nr_seq_prestador_w, cd_medico_w, cd_procedimento_w, ie_origem_proced_w, nm_usuario_p, null, coalesce(dt_procedimento_w,dt_conta_w), nr_seq_prestador_pgto_w, nr_seq_regra_pgto_w) INTO STRICT nr_seq_prestador_pgto_w, nr_seq_regra_pgto_w;
			else
				SELECT * FROM pls_obter_prest_pgto_prof(nr_seq_prestador_atend_w, cd_medico_w, cd_procedimento_w, ie_origem_proced_w, nm_usuario_p, null, coalesce(dt_procedimento_w,dt_conta_w), nr_seq_prestador_pgto_w, nr_seq_regra_pgto_w) INTO STRICT nr_seq_prestador_pgto_w, nr_seq_regra_pgto_w;
			end if;
		end if;
	end if;

	if	((ie_tipo_segurado_w = 'I') or (ie_tipo_segurado_w = 'T') or (ie_tipo_segurado_w = 'C') or (ie_tipo_segurado_w = 'H')) and (ie_tipo_protocolo_w = 'C') then
		/*precisa verificar sempre o do beneficiario OS - 318635, tipo segurado = C  Intercambio entre OPS congeneres (Resp. Assumida), de outra operadora porem estadual.
		nr_seq_congenere_w	:= nr_seq_congenere_seg_w;*/
		ie_tipo_tabela_int_w	:= 'IC';
	end if;

	/* Francisco - 14/05/2012 - OS 442042 - So mudar para a congenere do segurado, se a congenere do segurado
	nao for a propria operadora */
	select	coalesce(max(b.nr_sequencia),0)
	into STRICT	nr_seq_congenere_outorg_w
	from	pls_congenere b,
		pls_outorgante a
	where	a.cd_cgc_outorgante	= b.cd_cgc
	and	a.cd_estabelecimento	= cd_estabelecimento_w;

	if (nr_seq_congenere_seg_w IS NOT NULL AND nr_seq_congenere_seg_w::text <> '') and (nr_seq_congenere_seg_w <> nr_seq_congenere_outorg_w) then
		nr_seq_congenere_w	:= nr_seq_congenere_seg_w;
	end if;
end if;

dados_conta_valor_w.nr_seq_congenere		:= nr_seq_congenere_w;

if (ie_calcula_valor_w	= 'S') then
	ie_gravar_log_w	:= coalesce(ie_gravar_log_p,'N');

	if (ie_gravar_log_w = 'S') then

		if (pls_util_pck.ie_processo_pos_w = 'S') then
			ie_tipo_log_w := 'P';
		end if;

		delete	from pls_log_calculo_proc
		where	nr_seq_procedimento = nr_sequencia_p
		and	ie_tipo_log = ie_tipo_log_w;
	end if;

	ds_observacao_log_w	:= 'Data preco: ' || dt_preco_w || ' (' || ie_regra_data_preco_proc_w ||
				') / Categoria: ' || nr_seq_categoria_w || ' / Medico: ' || cd_medico_w ||
				' / / Preco plano: ' || ie_preco_plano_w;

	/* Obter a UF da operadora  - Tasy*/

	select	coalesce(max(sg_estado),'X')
	into STRICT	sg_estado_w
	from	pessoa_juridica
	where	cd_cgc	=	(SELECT	max(cd_cgc_outorgante)
				from	pls_outorgante
				where	cd_estabelecimento	= cd_estabelecimento_w);

	/* Obter a UF da operadora do beneficiario eventual ou que enviou o protocolo*/

	select	coalesce(max(a.sg_estado),'X'),
		coalesce(max(ie_nacional), 'N')
	into STRICT	sg_estado_int_w,
		ie_nacional_w
	from	pessoa_juridica	a,
		pls_congenere	b
	where	a.cd_cgc	= b.cd_cgc
	and	b.nr_sequencia	= nr_seq_congenere_w;

	if (ie_nacional_w	= 'S') then
		ie_tipo_intercambio_w := 'N';	-- Nacional
	elsif (sg_estado_w <> 'X') and (sg_estado_int_w <> 'X') then
		if (sg_estado_w = sg_estado_int_w) then
			ie_tipo_intercambio_w	:= 'E';
		else
			ie_tipo_intercambio_w	:= 'N';
		end if;
	else
		ie_tipo_intercambio_w	:= 'A';
	end if;

	/* Francisco - 12/05/2012 - Antes chamava so no final, tem que chamar antes de definir o preco,
	pois tem regras associadas a isso */

	/* Felipe - 31/10/2010 - OS - 247474 - Gravar os valores em relacao a coleta de exame */

	if (coalesce(ie_atualiza_p,'S') = 'S') then
		CALL pls_define_exame_coleta(nr_sequencia_p, nm_usuario_p);
	end if;
	dados_conta_valor_w.ie_tipo_intercambio		:= ie_tipo_intercambio_w;
	/* Calcula o preco que sera pago ao prestador */

	dados_regra_preco_proc_w := pls_define_preco_proc(	cd_estabelecimento_w, nr_seq_prestador_w, nr_seq_categoria_w, dt_preco_w, null, cd_procedimento_w, ie_origem_proced_w, nr_seq_tipo_acomodacao_w, nr_seq_tipo_atendimento_w, nr_seq_clinica_w, nr_seq_plano_w, ie_tipo_tabela_w, nr_seq_contrato_w, 0, nr_sequencia_p, ie_gravar_log_w, cd_convenio_w, cd_categoria_w, ie_tipo_contratacao_w, qt_dias_internacao_w, nr_seq_segurado_w, nr_seq_intercambio_w, '', nr_seq_classificacao_prest_w, cd_medico_w, ie_conta_internacao_w, ie_tecnica_utilizada_w, ie_tipo_guia_w, ie_tipo_intercambio_w, sg_estado_int_w, nr_seq_cbo_saude_w, ie_carater_internacao_w, dt_procedimento_w, ie_tipo_acomodacao_ptu_w, nr_seq_rp_combinada_w, dados_prestador_prot_w, dados_guia_w, dados_conta_valor_w, dados_regra_preco_proc_w, null, nr_seq_cbo_saude_solic_w, ie_regime_atendimento_w, ie_regime_atendimento_princ_w, ie_saude_ocupacional_w);

	vl_procedimento_w		:= dados_regra_preco_proc_w.vl_procedimento;
	vl_custo_operacional_w		:= dados_regra_preco_proc_w.vl_custo_operacional;
	vl_anestesista_w		:= dados_regra_preco_proc_w.vl_anestesista;
	vl_medico_w			:= dados_regra_preco_proc_w.vl_medico;
	vl_filme_w			:= dados_regra_preco_proc_w.vl_filme;
	vl_auxiliares_w			:= dados_regra_preco_proc_w.vl_auxiliares;
	nr_seq_regra_w			:= dados_regra_preco_proc_w.nr_sequencia;
	cd_edicao_amb_w			:= dados_regra_preco_proc_w.cd_edicao_amb;
	cd_porte_anestesico_w		:= dados_regra_preco_proc_w.cd_porte_anestesico;
	nr_aux_regra_w			:= dados_regra_preco_proc_w.nr_auxiliares;
	nr_seq_regra_autogerado_w	:= dados_regra_preco_proc_w.nr_seq_regra_autogerado;
	cd_moeda_autogerado_w		:= dados_regra_preco_proc_w.cd_moeda_autogerado;
	vl_ch_honorarios_w		:= dados_regra_preco_proc_w.vl_ch_honorarios;
	vl_ch_custo_filme_w		:= dados_regra_preco_proc_w.vl_ch_custo_filme;
	vl_ch_anestesista_w		:= dados_regra_preco_proc_w.vl_ch_anestesista;
	vl_custo_operacional_tab_w	:= dados_regra_preco_proc_w.vl_custo_operacional_tab;
	vl_medico_tab_w			:= dados_regra_preco_proc_w.vl_proc_tabela;
	qt_filme_tab_w			:= dados_regra_preco_proc_w.qt_filme_tab;
	dados_conta_proc_valor_w.cd_edicao_amb	:= cd_edicao_amb_w;

	if (dados_regra_preco_proc_w.ie_valor_informado = 'S') then
		nr_auxiliares_w := 4;
	else
		nr_auxiliares_w	:= coalesce(dados_regra_preco_proc_w.nr_auxiliares,0);
	end if;

	if (nr_auxiliares_atend_w > nr_auxiliares_w) then
		nr_auxiliares_w	:= nr_auxiliares_atend_w;
	end if;
	/* Obter o preco UNITARIO da coparticipacao */

	if	((ie_calculo_coparticipacao_w = 'O') or ( ie_calculo_coparticipacao_w = 'R')) and (coalesce(ie_preco_plano_w,'1') = '1')then

		dados_regra_preco_proc_w := pls_define_preco_proc(  cd_estabelecimento_w, nr_seq_prestador_w, nr_seq_categoria_w, dt_preco_w, null, cd_procedimento_w, ie_origem_proced_w, nr_seq_tipo_acomodacao_w, nr_seq_tipo_atendimento_w, nr_seq_clinica_w, nr_seq_plano_w, 'CO', nr_seq_contrato_w, nr_seq_outorgante_w, nr_sequencia_p, ie_gravar_log_w, cd_convenio_w, cd_categoria_w, ie_tipo_contratacao_w, qt_dias_internacao_w, nr_seq_segurado_w, nr_seq_intercambio_w, '', nr_seq_classificacao_prest_w, cd_medico_w, ie_conta_internacao_w, ie_tecnica_utilizada_w, ie_tipo_guia_w, ie_tipo_intercambio_w, sg_estado_int_w, nr_seq_cbo_saude_w, ie_carater_internacao_w, dt_procedimento_w, ie_tipo_acomodacao_ptu_w, nr_seq_rp_combinada_w, dados_prestador_prot_w, dados_guia_w, dados_conta_valor_w, dados_regra_preco_proc_w, null, nr_seq_cbo_saude_solic_w, ie_regime_atendimento_w, ie_regime_atendimento_princ_w, ie_saude_ocupacional_w);

					vl_proc_copartic_w		:= dados_regra_preco_proc_w.vl_procedimento;
					vl_co_copartic_w		:= dados_regra_preco_proc_w.vl_custo_operacional;
					vl_anestesista_copartic_w	:= dados_regra_preco_proc_w.vl_anestesista;
					vl_medico_copartic_w		:= dados_regra_preco_proc_w.vl_medico;
					vl_filme_copartic_w		:= dados_regra_preco_proc_w.vl_filme;
					vl_auxiliares_copartic_w	:= dados_regra_preco_proc_w.vl_auxiliares;
					nr_seq_regra_copartic_w		:= dados_regra_preco_proc_w.nr_sequencia;


		/* Tratar os adicionais por horario OS - 331057 Robson */

		dados_adic_horario_w := pls_cta_valorizacao_pck.pls_define_adic_horario(     	dados_conta_proc_valor_w, dados_prestador_exec_w, dados_prestador_prot_w, dados_conta_valor_w, dados_procedimento_w, dados_beneficiario_valor_w, 'CO', nm_usuario_p, cd_estabelecimento_w, dados_adic_horario_w);

		vl_co_copartic_w		:=	(vl_co_copartic_w 		* dados_adic_horario_w.tx_custo_operacional);
		vl_anestesista_copartic_w 	:=	(vl_anestesista_copartic_w 	* dados_adic_horario_w.tx_anestesista);
		vl_medico_copartic_w		:=	(vl_medico_copartic_w 		* dados_adic_horario_w.tx_medico);
		vl_filme_copartic_w		:=	(vl_filme_copartic_w 		* dados_adic_horario_w.tx_materiais);
		vl_auxiliares_copartic_w	:=	(vl_auxiliares_copartic_w 	* dados_adic_horario_w.tx_auxiliares);
		tx_adicional_proc_copartic_w	:= 	dados_adic_horario_w.tx_procedimento;

	end if;

	select	count(1)
	into STRICT	qt_regra_cobr_prev_w
	from	pls_regra_preco_proc
	where	ie_tipo_tabela = 'CP'
	and	ie_situacao = 'A';

	if (ie_cobranca_prevista_w = 'S') and (qt_regra_cobr_prev_w > 0) then

		dados_regra_preco_proc_w := pls_define_preco_proc(  cd_estabelecimento_w, nr_seq_prestador_w, nr_seq_categoria_w, dt_preco_w, null, cd_procedimento_w, ie_origem_proced_w, nr_seq_tipo_acomodacao_w, nr_seq_tipo_atendimento_w, nr_seq_clinica_w, nr_seq_plano_w, 'CP', nr_seq_contrato_w, nr_seq_outorgante_w, nr_sequencia_p, ie_gravar_log_w, cd_convenio_w, cd_categoria_w, ie_tipo_contratacao_w, qt_dias_internacao_w, nr_seq_segurado_w, nr_seq_intercambio_w, '', nr_seq_classificacao_prest_w, cd_medico_w, ie_conta_internacao_w, ie_tecnica_utilizada_w, ie_tipo_guia_w, ie_tipo_intercambio_w, sg_estado_int_w, nr_seq_cbo_saude_w, ie_carater_internacao_w, dt_procedimento_w, ie_tipo_acomodacao_ptu_w, nr_seq_rp_combinada_w, dados_prestador_prot_w, dados_guia_w, dados_conta_valor_w, dados_regra_preco_proc_w, null, nr_seq_cbo_saude_solic_w, ie_regime_atendimento_w, ie_regime_atendimento_princ_w, ie_saude_ocupacional_w);

					vl_proc_cobranca_prev_w := dados_regra_preco_proc_w.vl_procedimento;
					nr_seq_regra_cobr_prev_w := dados_regra_preco_proc_w.nr_sequencia;

		dados_adic_horario_w := pls_cta_valorizacao_pck.pls_define_adic_horario(     	dados_conta_proc_valor_w, dados_prestador_exec_w, dados_prestador_prot_w, dados_conta_valor_w, dados_procedimento_w, dados_beneficiario_valor_w, 'CP', nm_usuario_p, cd_estabelecimento_w, dados_adic_horario_w);
		if (dados_adic_horario_w.tx_procedimento IS NOT NULL AND dados_adic_horario_w.tx_procedimento::text <> '') then
			vl_proc_cobranca_prev_w		:=	vl_proc_cobranca_prev_w * dados_adic_horario_w.tx_procedimento;
		end if;
	end if;

	if ( ie_tipo_tabela_int_w = 'IC') then

		dados_regra_preco_proc_w := pls_define_preco_proc(cd_estabelecimento_w, nr_seq_prestador_w, nr_seq_categoria_w, dt_preco_w, null, cd_procedimento_w, ie_origem_proced_w, nr_seq_tipo_acomodacao_w, nr_seq_tipo_atendimento_w, nr_seq_clinica_w, nr_seq_plano_w, ie_tipo_tabela_int_w, nr_seq_contrato_w, 0, nr_sequencia_p, 'N', cd_convenio_w, cd_categoria_w, ie_tipo_contratacao_w, qt_dias_internacao_w, nr_seq_segurado_w, nr_seq_intercambio_w, '', nr_seq_classificacao_prest_w, cd_medico_w, ie_conta_internacao_w, ie_tecnica_utilizada_w, ie_tipo_guia_w, ie_tipo_intercambio_w, sg_estado_int_w, nr_seq_cbo_saude_w, ie_carater_internacao_w, dt_procedimento_w, ie_tipo_acomodacao_ptu_w, nr_seq_rp_combinada_w, dados_prestador_prot_w, dados_guia_w, dados_conta_valor_w, dados_regra_preco_proc_w, null, nr_seq_cbo_saude_solic_w, ie_regime_atendimento_w, ie_regime_atendimento_princ_w, ie_saude_ocupacional_w);

				vl_procedimento_ptu_w		:= dados_regra_preco_proc_w.vl_procedimento;
				vl_co_ptu_w			:= dados_regra_preco_proc_w.vl_custo_operacional;
				vl_material_ptu_w		:= dados_regra_preco_proc_w.vl_filme;
				nr_seq_regra_inter_w		:= dados_regra_preco_proc_w.nr_sequencia;

	end if;

	vl_procedimento_ptu_w	:= vl_procedimento_ptu_w - vl_co_ptu_w - vl_material_ptu_w;

	if (pls_cta_valorizacao_pck.obter_se_taxa_filme(nr_seq_prestador_w, cd_estabelecimento_w) = 'S') then
		vl_filme_w			:= ((tx_item_w 	* vl_filme_w)/100);
	end if;

	vl_procedimento_ptu_w		:= ((tx_item_w  * vl_procedimento_ptu_w)/100);
	vl_co_ptu_w			:= ((tx_item_w  * vl_co_ptu_w)/100);
	vl_material_ptu_w		:= ((tx_item_w  * vl_material_ptu_w)/100);
	if (ie_taxa_grau_partic_w = 'S') then
		vl_medico_copartic_w		:= dividir((vl_medico_copartic_w * coalesce(tx_item_w,100) ),100);
		vl_anestesista_copartic_w	:= dividir((vl_anestesista_copartic_w * coalesce(tx_item_w,100) ),100);
		vl_auxiliares_copartic_w	:= dividir((vl_auxiliares_copartic_w * coalesce(tx_item_w,100) ),100);
		vl_co_copartic_w		:= dividir((vl_co_copartic_w * coalesce(tx_item_w,100) ),100);
		vl_filme_copartic_w		:= dividir((vl_filme_copartic_w * coalesce(tx_item_w,100) ),100);
	end if;
	if	(
		(ie_prioridade_tx_item_w = 'VA') or /* Francisco - 30/10/2013 - OS 662881 */
		not( (coalesce(nr_seq_regra_qtde_exec_w,0) > 0 ) and (coalesce(ie_atualiza_p,'S') = 'S' ) and
		 ( (coalesce(ie_tx_manual_w::text, '') = '') or (ie_tx_manual_w = 'N' ) ) )
		) then
		vl_custo_operacional_w		:= ((tx_item_w	* vl_custo_operacional_w)/100);
		vl_medico_w			:= ((tx_item_w	* vl_medico_w)/100);
		vl_auxiliares_w			:= ((tx_item_w	* vl_auxiliares_w)/100);
		vl_anestesista_w		:= ((tx_item_w	* vl_anestesista_w)/100);
		vl_procedimento_w		:= ((tx_item_w	* vl_procedimento_w)/100);
	end if;

	ds_observacao_log_w		:= 'Tx item: ' || tx_item_w;

	if (ie_gravar_log_w = 'S') then
		CALL pls_gravar_log_calculo_proc(	ie_gravar_log_w, nr_sequencia_p, cd_estabelecimento_w,
						'Preco definido x Taxa item', ds_observacao_log_w, 'pls_atualiza_valor_proc',
						vl_procedimento_w, vl_filme_w, vl_custo_operacional_w,
						vl_medico_w, vl_auxiliares_w, vl_anestesista_w,
						4, nr_seq_regra_w, qt_porte_anestesico_w,
						nr_auxiliares_w, null, null, nm_usuario_p);
	end if;

	select	coalesce(max(tx_item),0)
	into STRICT	tx_item_regra_w
	from	pls_conta_proc_regra
	where	nr_sequencia = nr_sequencia_p;

	if (tx_item_regra_w > 0) then
		vl_custo_operacional_w	:= tx_item_regra_w * vl_custo_operacional_w;
		vl_medico_w		:= tx_item_regra_w * vl_medico_w;
		vl_auxiliares_w		:= tx_item_regra_w * vl_auxiliares_w;
		vl_anestesista_w	:= tx_item_regra_w * vl_anestesista_w;
		vl_procedimento_w	:= tx_item_regra_w * vl_procedimento_w;

		vl_procedimento_ptu_w		:= tx_item_regra_w * vl_procedimento_ptu_w;
		vl_co_ptu_w			:= tx_item_regra_w * vl_co_ptu_w;
		vl_material_ptu_w		:= tx_item_regra_w * vl_material_ptu_w;
		vl_medico_copartic_w		:= tx_item_regra_w * vl_medico_copartic_w;
		vl_anestesista_copartic_w	:= tx_item_regra_w * vl_anestesista_copartic_w;
		vl_auxiliares_copartic_w	:= tx_item_regra_w * vl_auxiliares_copartic_w;
		vl_co_copartic_w		:= tx_item_regra_w * vl_co_copartic_w;
		vl_filme_copartic_w		:= tx_item_regra_w * vl_filme_copartic_w;

		if (pls_cta_valorizacao_pck.obter_se_taxa_filme(nr_seq_prestador_w, cd_estabelecimento_w) = 'S') then
			vl_filme_w := vl_filme_w * tx_item_regra_w;
		end if;

		ds_observacao_log_w := 'Tx item A500: ' || tx_item_regra_w;

		if (ie_gravar_log_w = 'S') then
			CALL pls_gravar_log_calculo_proc(	ie_gravar_log_w, nr_sequencia_p, cd_estabelecimento_w,
							'Preco definido x Taxa item A500', ds_observacao_log_w, 'pls_atualiza_valor_proc',
							vl_procedimento_w, vl_filme_w, vl_custo_operacional_w,
							vl_medico_w, vl_auxiliares_w, vl_anestesista_w,
							4, nr_seq_regra_w, qt_porte_anestesico_w,
							nr_auxiliares_w, null, null, nm_usuario_p);
		end if;
	end if;

	vl_filme_w		:= (vl_filme_w 			* qt_procedimento_w);
	vl_custo_operacional_w	:= (vl_custo_operacional_w	* qt_procedimento_w);
	vl_medico_w		:= (vl_medico_w 		* qt_procedimento_w);
	vl_auxiliares_w		:= (vl_auxiliares_w		* qt_procedimento_w);
	vl_anestesista_w	:= (vl_anestesista_w		* qt_procedimento_w);
	vl_procedimento_w	:= (vl_procedimento_w		* qt_procedimento_w);

	ds_observacao_log_w	:= 'Qt. procedimento: ' || qt_procedimento_w;

	CALL pls_gravar_log_calculo_proc(ie_gravar_log_w, nr_sequencia_p, cd_estabelecimento_w,
				'Preco atual x Qt. procedimento', ds_observacao_log_w, 'pls_atualiza_valor_proc',
				vl_procedimento_w, vl_filme_w, vl_custo_operacional_w,
				vl_medico_w, vl_auxiliares_w, vl_anestesista_w,
				5, nr_seq_regra_w, qt_porte_anestesico_w,
				nr_auxiliares_w, null, null, nm_usuario_p);

	if (ie_origem_conta_w = 'A') then
		ie_tabela_horario_w	:= 'I';
	else
		ie_tabela_horario_w	:= 'P';
	end if;

	/* Tratar os adicionais por horario */

	dados_adic_horario_w := pls_cta_valorizacao_pck.pls_define_adic_horario(     	dados_conta_proc_valor_w, dados_prestador_exec_w, dados_prestador_prot_w, dados_conta_valor_w, dados_procedimento_w, dados_beneficiario_valor_w, ie_tabela_horario_w, nm_usuario_p, cd_estabelecimento_w, dados_adic_horario_w);


	vl_filme_w		:= (dados_adic_horario_w.tx_materiais		* vl_filme_w);
	vl_custo_operacional_w	:= (dados_adic_horario_w.tx_custo_operacional	* vl_custo_operacional_w);
	vl_medico_w		:= (dados_adic_horario_w.tx_medico		* vl_medico_w);
	vl_auxiliares_w		:= (dados_adic_horario_w.tx_auxiliares		* vl_auxiliares_w);
	vl_anestesista_w	:= (dados_adic_horario_w.tx_anestesista		* vl_anestesista_w);
	vl_procedimento_w	:= (dados_adic_horario_w.tx_procedimento	* vl_procedimento_w);

	if (pls_cta_valorizacao_pck.obter_se_taxa_filme(nr_seq_prestador_w, cd_estabelecimento_w) = 'S') then
		vl_filme_w		:= dados_adic_horario_w.tx_procedimento	* vl_filme_w;
	end if;
	--Aplica o percentual do procedimento sobre os valores individuais OS 770322 dgkorz
	vl_custo_operacional_w	:= (dados_adic_horario_w.tx_procedimento	* vl_custo_operacional_w);
	vl_medico_w		:= (dados_adic_horario_w.tx_procedimento	* vl_medico_w);
	vl_auxiliares_w		:= (dados_adic_horario_w.tx_procedimento	* vl_auxiliares_w);
	vl_anestesista_w	:= (dados_adic_horario_w.tx_procedimento	* vl_anestesista_w);

	nr_seq_regra_adic_w	:= dados_adic_horario_w.nr_sequencia;

	ds_observacao_log_w	:= 'cd_estabelecimento_w='||cd_estabelecimento_w||';cd_procedimento_w='||cd_procedimento_w||';ie_origem_proced_w='||ie_origem_proced_w||
		';nr_seq_prestador_w='||nr_seq_prestador_w||';dt_inicio_proc_w='||to_char(dt_inicio_proc_w, 'dd/mm/yyyy hh24:mi:ss')||
		';ie_carater_internacao_w='||chr(39)||ie_carater_internacao_w||chr(39)||
		';nr_seq_regra_adic_w='||nr_seq_regra_adic_w||';tx_medico_adic_w='||dados_adic_horario_w.tx_medico||';tx_anestesista_adic_w='||dados_adic_horario_w.tx_anestesista||
		';tx_auxiliares_adic_w='||dados_adic_horario_w.tx_auxiliares||';tx_custo_operacional_adic_w='||dados_adic_horario_w.tx_custo_operacional||';tx_materiais_adic_w='||dados_adic_horario_w.tx_materiais||
		';tx_procedimento_adic_w='||dados_adic_horario_w.tx_procedimento;
	CALL pls_gravar_log_calculo_proc(ie_gravar_log_w, nr_sequencia_p, cd_estabelecimento_w,
				'Preco atual x Taxa adicional horario', ds_observacao_log_w, 'pls_atualiza_valor_proc',
				vl_procedimento_w, vl_filme_w, vl_custo_operacional_w,
				vl_medico_w, vl_auxiliares_w, vl_anestesista_w,
				6, nr_seq_regra_w, qt_porte_anestesico_w,
				nr_auxiliares_w, null, null, nm_usuario_p);

	/*atualizar os valores dos Participantes	*/

	vl_total_partic_w		:= 0;

	/*if	(ie_origem_proced_w = 5) then
		begin
		select	a.nr_auxiliar,
			a.nr_porte_anest
		into	nr_auxiliares_w,
			qt_porte_anestesico_w
		from	cbhpm_preco a
		where	a.cd_procedimento	= cd_procedimento_w
		and	a.ie_origem_proced	= ie_origem_proced_w
		and	a.dt_vigencia		=
				(select	max(b.dt_vigencia)
				from	cbhpm_preco b
				where	b.cd_procedimento	= cd_procedimento_w
				and	b.ie_origem_proced	= ie_origem_proced_w
				and	b.dt_vigencia		<= dt_conta_w);
		exception
		when others then
			qt_porte_anestesico_w 	:= 0;
			nr_auxiliares_w		:= 0;
		end;
	else
		begin
		select	a.nr_auxiliares,
			a.qt_porte_anestesico
		into	nr_auxiliares_w,
			qt_porte_anestesico_w
		from	preco_amb a
		where	a.cd_procedimento	= cd_procedimento_w
		and	a.cd_edicao_amb		= cd_edicao_amb_w
		and	nvl(a.dt_inicio_vigencia,sysdate - 3650)	=
				(select	max(nvl(b.dt_inicio_vigencia,sysdate - 3650))
				from	preco_amb b
				where	b.cd_edicao_amb		= cd_edicao_amb_w
				and	b.cd_procedimento	= cd_procedimento_w
				and	nvl(b.dt_inicio_vigencia,sysdate - 3650)	<= dt_conta_w);
		exception
		when others then
			qt_porte_anestesico_w 	:= 0;
			nr_auxiliares_w		:= 0;
		end;
	end if;*/


	/* Francisco - 09/05/2012 - Coloquei a chamada aqui para que o repasse de honorario funcione corretamente */

	SELECT * FROM pls_calcular_vinculo_direto(	nr_seq_conta_w, nr_sequencia_p, ie_gravar_log_p, nm_usuario_p, vl_medico_vinc_w, vl_anestesista_vinc_w, vl_auxiliares_vinc_w, vl_custo_operacional_vinc_w, vl_materiais_vinc_w, vl_procedimento_vinc_w, vl_total_proc_vinc_w) INTO STRICT vl_medico_vinc_w, vl_anestesista_vinc_w, vl_auxiliares_vinc_w, vl_custo_operacional_vinc_w, vl_materiais_vinc_w, vl_procedimento_vinc_w, vl_total_proc_vinc_w;

	if (vl_procedimento_vinc_w IS NOT NULL AND vl_procedimento_vinc_w::text <> '') then
		vl_medico_w		:= vl_medico_vinc_w;
		vl_anestesista_w	:= vl_anestesista_vinc_w;
		vl_auxiliares_w		:= vl_auxiliares_vinc_w;
		vl_custo_operacional_w	:= vl_custo_operacional_vinc_w;
		vl_filme_w		:= vl_materiais_vinc_w;
		vl_procedimento_w	:= vl_procedimento_vinc_w;
		vl_total_procedimento_w	:= vl_total_proc_vinc_w;
	end if;

	/*aplica regra de quantidade de execucao se o procedimento tiver se encaixado em alguma*/

	if (coalesce(nr_seq_regra_qtde_exec_w,0) > 0 ) and (coalesce(ie_atualiza_p,'S') = 'S' )then
		/*Caso a regra tenha sido alterada de forma manual nao e aplicada a regra de quantidade de execucao sobre o item*/

		if (coalesce(ie_tx_manual_w::text, '') = '') or (ie_tx_manual_w = 'N' ) then
			SELECT * FROM pls_obter_tx_qtde_proc_valor(	nr_sequencia_p, nr_seq_conta_w, nm_usuario_p, cd_estabelecimento_w, tx_procedimento_w, tx_medico_w, tx_custo_operacional_w, tx_material_w, tx_anestesista_w, tx_auxiliares_w, ie_via_acesso_exec_w) INTO STRICT tx_procedimento_w, tx_medico_w, tx_custo_operacional_w, tx_material_w, tx_anestesista_w, tx_auxiliares_w, ie_via_acesso_exec_w;

			if (ie_via_acesso_exec_w IS NOT NULL AND ie_via_acesso_exec_w::text <> '') then
				ie_via_acesso_w := ie_via_acesso_exec_w;
			end if;

			vl_medico_w		:= dividir((vl_medico_w* coalesce(tx_medico_w,100)),100);
			vl_anestesista_w	:= dividir((vl_anestesista_w* coalesce(tx_anestesista_w,100)),100);
			vl_auxiliares_w		:= dividir((vl_auxiliares_w* coalesce(tx_auxiliares_w,100)),100);
			vl_custo_operacional_w	:= dividir((vl_custo_operacional_w*coalesce(tx_custo_operacional_w,100)),100);
			if (pls_cta_valorizacao_pck.obter_se_taxa_filme(nr_seq_prestador_w, cd_estabelecimento_w) = 'S') then
				vl_filme_w		:= dividir((vl_filme_w* coalesce(tx_material_w, 100)),100);
			end if;

			/* aplicacao da taxa do procedimento sobre todos os valores para que seja ajustada corretamente*/

			vl_medico_w		:= dividir((vl_medico_w * coalesce(tx_procedimento_w,100) ),100);
			vl_anestesista_w	:= dividir((vl_anestesista_w * coalesce(tx_procedimento_w,100) ),100);
			vl_auxiliares_w		:= dividir((vl_auxiliares_w * coalesce(tx_procedimento_w,100) ),100);
			vl_custo_operacional_w	:= dividir((vl_custo_operacional_w * coalesce(tx_procedimento_w,100) ),100);
			if (pls_cta_valorizacao_pck.obter_se_taxa_filme(nr_seq_prestador_w, cd_estabelecimento_w) = 'S') then
				vl_filme_w		:= dividir((vl_filme_w * coalesce(tx_procedimento_w,100) ),100);
			end if;

			/*Tratado na OS 650687 caso seja aplicada a regra de quantidade de execucao a taxa devera subscrever a taxa informada do item*/


			/* Francisco - 30/10/2013 - OS 662881 */

			if (ie_prioridade_tx_item_w = 'QE') then
				tx_item_w := coalesce(tx_procedimento_w,100);
			end if;
		end if;

		if (ie_taxa_grau_partic_w = 'S') then
			vl_medico_copartic_w		:= dividir((vl_medico_copartic_w* coalesce(tx_medico_w,100)),100);
			vl_anestesista_copartic_w	:= dividir((vl_anestesista_copartic_w* coalesce(tx_anestesista_w,100)),100);
			vl_auxiliares_copartic_w	:= dividir((vl_auxiliares_copartic_w* coalesce(tx_auxiliares_w,100)),100);
			vl_co_copartic_w		:= dividir((vl_co_copartic_w*coalesce(tx_custo_operacional_w,100)),100);
			vl_filme_copartic_w		:= dividir((vl_filme_copartic_w*tx_material_w),100);

			/* aplicacao da taxa do procedimento sobre todos os valores para que seja ajustada corretamente*/

			if (coalesce(ie_tx_manual_w::text, '') = '') or (ie_tx_manual_w = 'N' ) then
				vl_medico_copartic_w		:= dividir((vl_medico_copartic_w * coalesce(tx_procedimento_w,100) ),100);
				vl_anestesista_copartic_w	:= dividir((vl_anestesista_copartic_w * coalesce(tx_procedimento_w,100) ),100);
				vl_auxiliares_copartic_w	:= dividir((vl_auxiliares_copartic_w * coalesce(tx_procedimento_w,100) ),100);
				vl_co_copartic_w		:= dividir((vl_co_copartic_w * coalesce(tx_procedimento_w,100) ),100);
				vl_filme_copartic_w		:= dividir((vl_filme_copartic_w * coalesce(tx_procedimento_w,100) ),100);
			end if;
		end if;
	end if;

	if	((ie_tx_manual_w = 'S') and (pls_cta_valorizacao_pck.obter_se_taxa_filme(nr_seq_prestador_w, cd_estabelecimento_w) = 'S')) then

		--Utiliza a variavel "tx_custo_operacional_temp_w" por que se chegou aqui, a variavel tx_custo_operacional_w nao tem valor...
		vl_filme_w		:= dividir((vl_filme_w* coalesce(tx_material_temp_w,100)),100);
		vl_medico_w		:= dividir((vl_medico_w* coalesce(tx_medico_temp_w,100)),100);
		vl_custo_operacional_w	:= dividir((vl_custo_operacional_w*coalesce(tx_custo_operacional_temp_w,100)),100);

	elsif	((ie_tx_manual_w = 'S') and (pls_cta_valorizacao_pck.obter_se_taxa_filme(nr_seq_prestador_w, cd_estabelecimento_w) = 'N')) then

		vl_medico_w		:= dividir((vl_medico_w* coalesce(tx_medico_temp_w,100)),100);
		vl_custo_operacional_w	:= dividir((vl_custo_operacional_w*coalesce(tx_custo_operacional_temp_w,100)),100);
	end if;

	/*obtencao da taxa administrativa do item*/

	SELECT * FROM pls_obter_taxa_adm_item( cd_procedimento_w, ie_origem_proced_w, null, nr_seq_prestador_w, nm_usuario_p, ie_preco_plano_w, ie_tipo_segurado_w, nr_seq_contrato_w, dt_procedimento_w, tx_adm_w, vl_fixo_tx_adm_w, nr_seq_regra_tx_adm_w) INTO STRICT tx_adm_w, vl_fixo_tx_adm_w, nr_seq_regra_tx_adm_w;

	if (coalesce(tx_adm_w,0) > 0) then
		vl_medico_w		:= vl_medico_w + dividir((vl_medico_w * tx_adm_w),100);
		vl_anestesista_w	:= vl_anestesista_w + dividir((vl_anestesista_w * tx_adm_w),100);
		vl_auxiliares_w		:= vl_auxiliares_w + dividir((vl_auxiliares_w * tx_adm_w),100);
		vl_custo_operacional_w	:= vl_custo_operacional_w + dividir((vl_custo_operacional_w * tx_adm_w ),100);
		vl_filme_w		:= vl_filme_w + dividir((vl_filme_w * tx_adm_w ),100);

		ds_observacao_log_w := 	'cd_estabelecimento_w='||cd_estabelecimento_w||';cd_procedimento_w='||cd_procedimento_w||';ie_origem_proced_w='||ie_origem_proced_w||
					';nr_seq_prestador_w='||nr_seq_prestador_w ||';tx_adm_w=' || tx_adm_w||';nr_seq_regra_tx_adm='||nr_seq_regra_tx_adm_w;

		CALL pls_gravar_log_calculo_proc(	ie_gravar_log_w, nr_sequencia_p, cd_estabelecimento_w,
						'Preco atual x Taxa adm do item', ds_observacao_log_w, 'pls_atualiza_valor_proc',
						vl_procedimento_w, vl_filme_w, vl_custo_operacional_w,
						vl_medico_w, vl_auxiliares_w, vl_anestesista_w,
						8, nr_seq_regra_w, qt_porte_anestesico_w,
						nr_auxiliares_w, null, null, nm_usuario_p);
	elsif (vl_fixo_tx_adm_w IS NOT NULL AND vl_fixo_tx_adm_w::text <> '') then

		vl_medico_w		:= vl_medico_w + vl_fixo_tx_adm_w;

		ds_observacao_log_w := 	'cd_estabelecimento_w='||cd_estabelecimento_w||';cd_procedimento_w='||cd_procedimento_w||';ie_origem_proced_w='||ie_origem_proced_w||
					';nr_seq_prestador_w='||nr_seq_prestador_w ||';vl_tx_adm_w=' || vl_fixo_tx_adm_w||';nr_seq_regra_tx_adm='||nr_seq_regra_tx_adm_w;

		CALL pls_gravar_log_calculo_proc(	ie_gravar_log_w, nr_sequencia_p, cd_estabelecimento_w,
						'Preco atual + Valor da taxa adm do item', ds_observacao_log_w, 'pls_atualiza_valor_proc',
						vl_procedimento_w, vl_filme_w, vl_custo_operacional_w,
						vl_medico_w, vl_auxiliares_w, vl_anestesista_w,
						8, nr_seq_regra_w, qt_porte_anestesico_w,
						nr_auxiliares_w, null, null, nm_usuario_p);

	end if;

	if (nr_seq_regra_pgto_w IS NOT NULL AND nr_seq_regra_pgto_w::text <> '') then
		begin
			select	coalesce(ie_repassa_medico,'S')
			into STRICT	ie_repassa_medico_pgto_w
			from	pls_prestador_prof_pgto
			where	nr_sequencia	= nr_seq_regra_pgto_w;
		exception
		when others then
			ie_repassa_medico_pgto_w := null;
		end;
	end if;

	/* Gerava aqui os honorarios e valores de participantes atraves do C01 */

	SELECT * FROM pls_gerar_honorario_proc(	nr_sequencia_p, cd_procedimento_w, ie_origem_proced_w, nr_seq_grau_partic_w, ie_tipo_guia_w, nr_seq_tipo_atendimento_w, ie_tipo_conta_w, nr_seq_prestador_w, ie_tipo_protocolo_w, nr_auxiliares_w, ie_status_w, ie_repassa_medico_w, vl_anestesista_w, vl_medico_w, vl_auxiliares_w, cd_estabelecimento_w, dt_procedimento_w, nm_usuario_p, nr_seq_categoria_w, dt_preco_w, nr_seq_tipo_acomodacao_w, nr_seq_clinica_w, nr_seq_plano_w, ie_tipo_tabela_w, nr_seq_contrato_w, cd_convenio_w, cd_categoria_w, ie_tipo_contratacao_w, qt_dias_internacao_w, nr_seq_segurado_w, nr_seq_intercambio_w, ie_conta_internacao_w, ie_tecnica_utilizada_w, ie_tipo_intercambio_w, sg_estado_int_w, ie_carater_internacao_w, 'C', vl_total_partic_w, ie_tipo_partic_prof_w, nr_seq_prestador_pgto_w, ie_repassa_medico_pgto_w, 'A') INTO STRICT vl_total_partic_w, ie_tipo_partic_prof_w;

	if (ie_copartic_grau_partic_w = 'S')  and (coalesce(ie_preco_plano_w,'1') = '1') then
		SELECT * FROM pls_gerar_honorario_proc(	nr_sequencia_p, cd_procedimento_w, ie_origem_proced_w, nr_seq_grau_partic_w, ie_tipo_guia_w, nr_seq_tipo_atendimento_w, ie_tipo_conta_w, nr_seq_prestador_w, ie_tipo_protocolo_w, nr_auxiliares_w, ie_status_w, ie_repassa_medico_w, vl_anestesista_copartic_w, vl_medico_copartic_w, vl_auxiliares_copartic_w, cd_estabelecimento_w, dt_procedimento_w, nm_usuario_p, nr_seq_categoria_w, dt_preco_w, nr_seq_tipo_acomodacao_w, nr_seq_clinica_w, nr_seq_plano_w, ie_tipo_tabela_w, nr_seq_contrato_w, cd_convenio_w, cd_categoria_w, ie_tipo_contratacao_w, qt_dias_internacao_w, nr_seq_segurado_w, nr_seq_intercambio_w, ie_conta_internacao_w, ie_tecnica_utilizada_w, ie_tipo_intercambio_w, sg_estado_int_w, ie_carater_internacao_w, 'CO', vl_total_partic_copartic_w, ie_tipo_partic_prof_w, nr_seq_prestador_pgto_w, null, 'A') INTO STRICT vl_total_partic_copartic_w, ie_tipo_partic_prof_w;
	end if;


	if (ie_repassa_medico_pgto_w = 'H') then
		nr_seq_prestador_pgto_w := null;
	end if;
	if	((ie_tipo_protocolo_w = 'R') or (coalesce(vl_total_partic_w,0) > 0) or (coalesce(nr_seq_regra_honorario_w,0) > 0)) then
		if	((ie_repassa_medico_w	= 'S')  or (ie_tipo_protocolo_w = 'R')) 	then
			vl_procedimento_w	:= coalesce(vl_total_partic_w,0) + coalesce(vl_custo_operacional_w,0) + coalesce(vl_filme_w,0);
			vl_calc_co_util_w	:= vl_custo_operacional_w;
			vl_calc_hi_util_w 	:= vl_total_partic_w;
			vl_calc_mat_util_w	:= vl_filme_w;

			if (ie_copartic_grau_partic_w = 'S') or (ie_taxa_grau_partic_w	= 'S') then
				vl_proc_copartic_w := coalesce(vl_total_partic_copartic_w,0) + coalesce(vl_co_copartic_w,0) + coalesce(vl_filme_copartic_w,0);
			end if;
		elsif (ie_repassa_medico_w = 'H') then
			vl_procedimento_w	:= coalesce(vl_total_partic_w,0);
			vl_calc_co_util_w	:= 0;
			vl_calc_hi_util_w 	:= vl_total_partic_w;
			vl_calc_mat_util_w	:= 0;

			if (ie_copartic_grau_partic_w = 'S') or (ie_taxa_grau_partic_w	= 'S') then
				vl_proc_copartic_w := coalesce(vl_total_partic_copartic_w,0);
			end if;
		else
			vl_procedimento_w	:= coalesce(vl_custo_operacional_w,0) + coalesce(vl_filme_w,0)+ coalesce(vl_total_partic_w,0);
			vl_calc_co_util_w	:= vl_custo_operacional_w;
			vl_calc_mat_util_w	:= vl_filme_w;
			vl_calc_hi_util_w 	:= vl_total_partic_w;

			if (ie_copartic_grau_partic_w = 'S') or (ie_taxa_grau_partic_w	= 'S') then
				vl_proc_copartic_w := coalesce(vl_total_partic_copartic_w,0) + coalesce(vl_co_copartic_w,0) + coalesce(vl_filme_copartic_w,0);
			end if;
		end if;
	else
		vl_procedimento_w	:= 0;
		vl_calc_co_util_w	:= 0;
		vl_calc_mat_util_w	:= 0;
		vl_calc_hi_util_w 	:= 0;

		if (ie_copartic_grau_partic_w = 'S') or (ie_taxa_grau_partic_w = 'S') then
			vl_proc_copartic_w	:= 0;
		end if;
	end if;

	if (ie_tipo_tabela_int_w = 'IP')  then
		vl_procedimento_ptu_w	:= vl_calc_hi_util_w;
		vl_co_ptu_w		:= vl_calc_co_util_w;
		vl_material_ptu_w	:= vl_calc_mat_util_w;
		nr_seq_regra_inter_w	:= nr_seq_regra_w;
	end if;

	if (ie_copartic_grau_partic_w = 'N') and (ie_taxa_grau_partic_w = 'N') then
		vl_proc_copartic_w	:= ((tx_item_w * vl_proc_copartic_w)/100);
	elsif (ie_copartic_grau_partic_w = 'N') and (ie_taxa_grau_partic_w = 'T') then
		vl_proc_copartic_w	:= vl_proc_copartic_w;
	end if;

	if (ie_taxa_grau_partic_w = 'S')  then
		vl_proc_copartic_w	:= (coalesce(tx_adicional_proc_copartic_w,1) * vl_proc_copartic_w);
	end if;

	ds_observacao_log_w	:= ' Repassa valor: ' || ie_repassa_medico_w;

	CALL pls_gravar_log_calculo_proc(ie_gravar_log_w, nr_sequencia_p, cd_estabelecimento_w,
					'Tipo repasse medico', ds_observacao_log_w, 'pls_atualiza_valor_proc',
					vl_procedimento_w, vl_filme_w, vl_custo_operacional_w,
					vl_medico_w, vl_auxiliares_w, vl_anestesista_w,
					9, nr_seq_regra_w, qt_porte_anestesico_w,
					nr_auxiliares_w,null,null, nm_usuario_p);

	if (ie_tipo_protocolo_w = 'C') then
		select	max(b.nr_seq_prestador)
		into STRICT	nr_seq_prestador_solic_w
		from	pls_conta_proc		c,
			pls_conta		a,
			pls_prestador_medico	b,
			pls_prestador		d
		where	c.nr_sequencia		= nr_sequencia_p
		and	a.cd_medico_solicitante	= b.cd_medico
		and	c.nr_seq_conta		= a.nr_sequencia
		and	b.nr_seq_prestador	= d.nr_sequencia
		and	d.cd_estabelecimento	= cd_estabelecimento_w
		and	b.ie_situacao		= 'A'
		and	trunc(dt_preco_w,'dd') between trunc(coalesce(b.dt_inclusao,dt_preco_w),'dd') and trunc(coalesce(b.dt_exclusao,dt_preco_w),'dd');

		if (coalesce(nr_seq_prestador_solic_w,0) = 0) then
			select	max(b.nr_seq_prestador)
			into STRICT	nr_seq_prestador_solic_w
			from	pls_conta		a,
				pls_prestador_medico	b,
				pls_guia_plano		c,
				pls_prestador		d
			where	a.nr_sequencia		= nr_sequencia_p
			and	a.cd_medico_solicitante = b.cd_medico
			and	a.cd_guia		= c.cd_guia
			and	b.nr_seq_prestador	= d.nr_sequencia
			and	d.cd_estabelecimento	= cd_estabelecimento_w
			and	b.ie_situacao		= 'A'
			and	trunc(dt_preco_w,'dd') between trunc(coalesce(b.dt_inclusao,dt_preco_w),'dd') and trunc(coalesce(b.dt_exclusao,dt_preco_w),'dd');
		end if;

		/*aaschlote 10/07/2012 - Verificar se o cooperado esta ativo pela data do procedimento e nao a regra do prestador*/

		ie_medico_exec_coope_w	:= pls_obter_se_cooperado_ativo(cd_medico_w,dt_procedimento_w,null);

		if (ie_medico_exec_coope_w = 'S') then
			ie_medico_exec_coope_w	:= 'C'; -- Caso ele nao for cooperador a function ja retorna N
		end if;

		/*aaschlote 10/07/2012 - Verificar se o cooperado esta ativo pela data do procedimento e nao a regra do prestador*/

		ie_medico_solic_coope_w	:= pls_obter_se_cooperado_ativo(cd_medico_solicitante_w,dt_procedimento_w,null);

		if (ie_medico_solic_coope_w = 'S') then
			ie_medico_solic_coope_w	:= 'C'; -- Caso ele nao for cooperador a function ja retorna N
		end if;

	end if;

	SELECT * FROM pls_obter_tipo_ato_cooperado(	cd_procedimento_w, ie_origem_proced_w, nr_sequencia_p, 'P', nr_seq_prestador_w, nr_seq_prestador_solic_w, nr_seq_prestador_atend_w, null, ie_medico_solic_coope_w, ie_medico_exec_coope_w, '', ie_tipo_protocolo_w, ie_tipo_guia_w, ie_tipo_despesa_w, null, nr_seq_regra_cooperado_w, ie_ato_cooperado_w) INTO STRICT nr_seq_regra_cooperado_w, ie_ato_cooperado_w;

	vl_procedimento_w	:= round((vl_procedimento_w)::numeric,2);
	vl_custo_operacional_w	:= round((vl_custo_operacional_w)::numeric,2);
	vl_anestesista_w	:= round((vl_anestesista_w)::numeric,2);
	vl_medico_w		:= round((vl_medico_w)::numeric,2);
	vl_filme_w		:= round((vl_filme_w)::numeric,2);
	vl_auxiliares_w		:= round((vl_auxiliares_w)::numeric,2);
	vl_beneficiario_w	:= round((vl_beneficiario_w)::numeric,2);
	vl_proc_copartic_w	:= round((vl_proc_copartic_w)::numeric,2);
	vl_procedimento_ptu_w	:= round((vl_procedimento_ptu_w)::numeric,2);
	vl_co_ptu_w		:= round((vl_co_ptu_w)::numeric,2);
	vl_material_ptu_w	:= round((vl_material_ptu_w)::numeric,2);
	vl_total_procedimento_w	:= round((vl_total_procedimento_w)::numeric,2);
	vl_total_partic_w	:= round((vl_total_partic_w)::numeric,2);
	vl_calc_co_util_w	:= round((vl_calc_co_util_w)::numeric,2);
	vl_calc_mat_util_w	:= round((vl_calc_mat_util_w)::numeric,2);
	vl_calc_hi_util_w 	:= round((vl_calc_hi_util_w)::numeric,2);

	/*Necessario ser apos a atribuicao dos valores para que seja atualizado corretamente o vl_procedimento com a tx de intercambio OS376887*/


	/*Cobranca e pagamento*/

	select	max(ie_nao_gera_tx_inter),
		max(ie_franquia)
	into STRICT	ie_nao_gera_tx_inter_w,
		ie_franquia_w
	from	pls_regra_preco_proc
	where	nr_sequencia 	= nr_seq_regra_w;
	--no caso do 'ie_nao_gera_tx_inter_w' estar como 'S' nao podera ser aplicada a taxa de intercambio


	--no caso do 'ie_franquia_w' estar como 'S' devera procurar o valor franquia cadastrado no produto e descontar do valor calculado
	if (ie_franquia_w = 'S') then
		vl_franquia_w	:= pls_obter_valor_franquia_prod(	nr_seq_plano_w,					cd_procedimento_w,
									ie_origem_proced_w,				dados_procedimento_w.cd_area_procedimento,
									dados_procedimento_w.cd_especialidade,		dados_procedimento_w.cd_grupo_proc,
									nr_seq_clinica_w);
	end if;

	if (coalesce( ie_nao_gera_tx_inter_w,'N') in ('N','F')) then

		if (ie_tipo_conta_w = 'I') then

			if (coalesce(dados_tx_interc_valor_w.nr_sequencia::text, '') = '') and (ie_recalcular_conta_p 		= 'N')then
				-- Obter a taxa de intercambio.
				nr_seq_log_exec_w := pls_cta_processo_pck.executa_processo(	null, null, null, nr_seq_conta_w, nr_sequencia_p, null, null, null, '12,', null, nm_usuario_p, cd_estabelecimento_w, null, nr_seq_log_exec_w);
				select	tx_intercambio,
					nr_seq_regra_tx_inter
				into STRICT	dados_tx_interc_valor_w.pr_taxa,
					dados_tx_interc_valor_w.nr_sequencia
				from	pls_conta_proc
				where	nr_sequencia 	= nr_sequencia_p;

			end if;

			tx_intercambio_w := dados_tx_interc_valor_w.pr_taxa;

			if (coalesce(ie_pcmso_w,'N') = 'S') then
				tx_pcmco_w := pls_obter_taxa_pcmso_operadora(dt_procedimento_w, nr_seq_congenere_w, cd_estabelecimento_w, nm_usuario_p, tx_pcmco_w);

				if (coalesce(tx_pcmco_w,0) <> 0) then
					vl_procedimento_ptu_w := vl_procedimento_ptu_w + dividir((vl_procedimento_w*tx_pcmco_w),100);
				end if;
			end if;
			vl_taxa_co_w		:= (dividir((vl_co_ptu_w*tx_intercambio_w),100));
			nr_seq_regra_tx_inter_w := dados_tx_interc_valor_w.nr_sequencia;
			--no caso do parametro estar como 'F' nao podera ser aplicada a taxa de intercambio sobre o filme
			if (coalesce( ie_nao_gera_tx_inter_w,'N') 	!= 'F') then
				vl_taxa_material_w	:= (dividir((vl_material_ptu_w*tx_intercambio_w),100));
			else
				vl_taxa_material_w	:= 0;
			end if;

			vl_taxa_servico_w	:= (dividir((vl_procedimento_ptu_w*tx_intercambio_w),100));
			/*Retirado devido ao fato da taxa de intercambio ter que ser gerada conforme o valor total, esta tratativa se faz necessaria devido a OS 817037
			vl_taxa_co_w		:= dividir(vl_taxa_co_w,qt_procedimento_w);
			vl_taxa_material_w	:= dividir(vl_taxa_material_w,qt_procedimento_w);
			vl_taxa_servico_w	:= dividir(vl_taxa_servico_w,qt_procedimento_w);

			vl_taxa_co_w		:= vl_taxa_co_w * qt_procedimento_w;
			vl_taxa_material_w	:= vl_taxa_material_w * qt_procedimento_w;
			vl_taxa_servico_w	:= vl_taxa_servico_w * qt_procedimento_w;*/
		end if;
	end if;
	if (ie_status_conta_w in ('U','P','A'))	then
		if (ie_status_w = 'M') then
			ie_status_w	:= ie_status_w;
		/* Francisco - 17/10/2012 - OS 469604 - Se o item estiver na analise na pode mudar o status
			Nao pode estar  "En analise" , "Liberado pelo usuario" e "Cancelado"*/
		elsif (ie_status_w in ('A','D','L')) then
			ie_status_w	:= ie_status_w;
		else
			ie_status_w	:= 'C';
		end if;
	end if;
	/*tratamento realizado para que o valor calculado seja igual ao valor total do procedimento OS 370695 Diogo*/

	vl_procedimento_w	:= coalesce(vl_calc_co_util_w,0) + coalesce(vl_calc_mat_util_w,0) + coalesce(vl_calc_hi_util_w,0) + coalesce(vl_taxa_co_w,0)+ coalesce(vl_taxa_material_w,0)+ coalesce(vl_taxa_servico_w,0);
	vl_proc_sem_interc_w	:= coalesce(vl_calc_co_util_w,0) + coalesce(vl_calc_mat_util_w,0) + coalesce(vl_calc_hi_util_w,0);

	--Como a aplicacao de valores de intercambio sobre os sub-valores que consituem o valor do procedimento, entao pode ocorrer perde entre a aplicabilidade nos subvalores e o

	--valor do procedimento + tx intercambio e devido a isso, e realizada a verificacao abaixo e correcao do problema, destinando a diferenca(se ocorrer sera  de 1 centavo) para o

	--sub-valor mais elevado
	if (vl_procedimento_w <> vl_proc_sem_interc_w and tx_intercambio_w > 0) then

		--Valor esperado(considerando a taxa de intercambio aplicada diretamente no valor total do procedimento)
		vl_proc_e_interc_esperado_w := vl_proc_sem_interc_w + (dividir((vl_proc_sem_interc_w * tx_intercambio_w),100));

		--Se ocorrer diferenca entre o esperado e o obtido com a aplicacao da taxa nos subvalores do procedimento
		if (vl_proc_e_interc_esperado_w <> vl_procedimento_w) then

			--Se vl_calc_hi_util_w for o maior valor, entao recebe a diferenca
			if (coalesce(vl_taxa_servico_w,0) >= coalesce(vl_taxa_co_w,0) and coalesce(vl_taxa_servico_w,0) > coalesce(vl_taxa_material_w,0)) then

				vl_taxa_servico_w := coalesce(vl_taxa_servico_w,0) + (vl_proc_e_interc_esperado_w - vl_procedimento_w);

			--Senao se vl_calc_hi_util_w for o maior valor, entao recebe a diferenca
			elsif (coalesce(vl_taxa_material_w,0) >= coalesce(vl_taxa_co_w,0) and coalesce(vl_taxa_material_w,0) > coalesce(vl_taxa_servico_w,0) ) then

				vl_taxa_material_w := coalesce(vl_taxa_material_w,0) + (vl_proc_e_interc_esperado_w - vl_procedimento_w);

			else
				vl_taxa_co_w := coalesce(vl_taxa_co_w,0) + (vl_proc_e_interc_esperado_w - vl_procedimento_w);
			end if;
			vl_procedimento_w := 	coalesce(vl_calc_co_util_w,0) + coalesce(vl_calc_mat_util_w,0) + coalesce(vl_calc_hi_util_w,0) +
						coalesce(vl_taxa_co_w,0)+ coalesce(vl_taxa_material_w,0)+ coalesce(vl_taxa_servico_w,0);


		end if;

	end if;

	--Vl_medico_original e zerado no processo de desfazer consistencia e obtido novamente na pls_gerar_honorario_proc, entao

	--somente podemos fazer o select desse valor nesse momento.
	select	vl_medico_original
	into STRICT	vl_medico_original_w
	from	pls_conta_proc
	where	nr_sequencia = nr_sequencia_p;

	if (vl_franquia_w > 0) then
		vl_tot_franquia_w := vl_franquia_w * coalesce(qt_procedimento_w,0);
		vl_procedimento_w	:= vl_procedimento_w - vl_tot_franquia_w;

		if (vl_procedimento_w < 0) then
			vl_procedimento_w	:= 0;
		end if;
		--Para garantir que vl_medico_original nao seja negativo.
		if ( vl_medico_original_w > vl_tot_franquia_w) then
			vl_medico_original_w  := vl_medico_original_w -  vl_tot_franquia_w;

			if (vl_medico_original_w < 0) then
				vl_medico_original_w	:= 0;
			end if;
		else
			vl_medico_original_w := 0;
		end if;
		ds_observacao_log_w	:= ' Desconto Franquia: ' || vl_tot_franquia_w;
		CALL pls_gravar_log_calculo_proc(ie_gravar_log_w, nr_sequencia_p, cd_estabelecimento_w,
					'Desconto Franquia', ds_observacao_log_w, 'pls_atualiza_valor_proc',
					vl_procedimento_w, vl_filme_w, vl_custo_operacional_w,
					vl_medico_w, vl_auxiliares_w, vl_anestesista_w,
					10, nr_seq_regra_w, qt_porte_anestesico_w,
					nr_auxiliares_w,null,null, nm_usuario_p);
	end if;

	vl_total_procedimento_w	:= vl_procedimento_w;
	/*O calculo do valor calculado deve ser com base no vl_procedimento_w com seu valor final*/

	vl_proc_unitario_w	:= round((dividir(vl_procedimento_w, qt_procedimento_w))::numeric,2);

	/* Solicitacao de Adriano Geyer para deixar a data do item como a data informada.
	   Conforme tratado com Adriano Geyer e Paulo Rosa, foi criado o campo ie_tx_manual para quando a tx for informada manualmente nao pode sofrer alteracao*/
	if	((coalesce(ie_tx_manual_w::text, '') = '') or (ie_tx_manual_W = 'N' )) and (coalesce(tx_procedimento_w,100) <> 100) then
		tx_item_w	:= tx_procedimento_w;
	end if;

	--Se nao tiver regra, dizendo que nao aplica,  entao verifica se taxa foi alterada manualmente e nesse caso atualiza valores com base nessas taxas
	if (ie_tx_manual_w = 'S') then
		ie_tx_manual_atualiza_w := 'S';
	end if;

	if (pls_cta_valorizacao_pck.obter_se_taxa_filme(nr_seq_prestador_w, cd_estabelecimento_w) = 'N') then
		tx_material_w		:= 100;
		ie_tx_manual_atualiza_w := 'N';
	end if;

	if (coalesce(ie_origem_rec_p,'C') = 'C') then
		update	pls_conta_proc
		set	tx_medico			= CASE WHEN ie_tx_manual_atualiza_w='N' THEN  coalesce(tx_medico_w,100)  ELSE tx_medico END ,
			tx_custo_operacional		= CASE WHEN ie_tx_manual_atualiza_w='N' THEN  coalesce(tx_custo_operacional_w,100)  ELSE tx_custo_operacional END ,
			tx_material			= CASE WHEN ie_tx_manual_atualiza_w='N' THEN  coalesce(tx_material_w,100)  ELSE tx_material END ,
			tx_auxiliares			= coalesce(tx_auxiliares_w,100),
			tx_anestesista			= coalesce(tx_anestesista_w,100),
			vl_procedimento			= vl_procedimento_w,
			vl_proc_unitario		= vl_proc_unitario_w,
			vl_custo_operacional		= vl_custo_operacional_w,
			vl_anestesista			= vl_anestesista_w,
			vl_medico			= vl_medico_w,
			vl_materiais			= vl_filme_w,
			vl_auxiliares			= vl_auxiliares_w,
			vl_glosa			= CASE WHEN ie_status='L' THEN vl_glosa WHEN ie_status='S' THEN vl_glosa  ELSE 0 END ,
			vl_saldo			= CASE WHEN ie_status='L' THEN vl_saldo WHEN ie_status='S' THEN vl_glosa  ELSE 0 END ,
			nr_seq_regra			= CASE WHEN nr_seq_regra_w=0 THEN null  ELSE nr_seq_regra_w END ,
			ie_status			= ie_status_w,
			nr_seq_regra_horario		= nr_seq_regra_adic_w,
			ds_log				= 'pls_atualiza_valor_proc',
			nr_seq_honorario_crit		= nr_seq_regra_honorario_w,
			vl_beneficiario			= vl_beneficiario_w,
			nr_seq_regra_pos_estab		= nr_seq_regra_pos_estab_w,
			ie_cobranca_prevista		= CASE WHEN ie_cobranca_prevista_inf = NULL THEN  ie_cobranca_prevista_w  ELSE ie_cobranca_prevista END , --Se foi alterado manualmente na analise, entao mantem o valor.,
			ie_cobranca_previa_servico	= ie_cobranca_previa_servico_w,
			vl_proc_copartic		= vl_proc_copartic_w,
			nr_seq_regra_copartic		= nr_seq_regra_copartic_w,
			cd_porte_anestesico		= cd_porte_anestesico_w,
			ie_ato_cooperado		= ie_ato_cooperado_w,
			nr_seq_regra_cooperado		= nr_seq_regra_cooperado_w,
			tx_item				= tx_item_w,
			nr_seq_prestador_pgto		= nr_seq_prestador_pgto_w,
			nr_auxiliares			= nr_aux_regra_w,
			vl_procedimento_ptu		= vl_procedimento_ptu_w,
			vl_co_ptu			= vl_co_ptu_w,
			vl_material_ptu			= vl_material_ptu_w,
			nr_seq_regra_int		= nr_seq_regra_inter_w,
			vl_total_procedimento		= vl_total_procedimento_w,
			nr_seq_preco_autogerado		= nr_seq_regra_autogerado_w,
			ie_repassa_medico		= ie_repassa_medico_w,
			vl_total_partic			= vl_total_partic_w,
			tx_intercambio			= coalesce(tx_intercambio_w,0),
			vl_taxa_co			= vl_taxa_co_w,
			vl_taxa_material		= vl_taxa_material_w,
			vl_taxa_servico			= vl_taxa_servico_w,
			vl_calc_co_util			= vl_calc_co_util_w,
			vl_calc_mat_util		= vl_calc_mat_util_w,
			vl_calc_hi_util 		= vl_calc_hi_util_w,
			vl_calculado_ant		= vl_calculado_ant_w,
			tx_prestador_item		= tx_adm_w,
			cd_moeda_autogerado		= cd_moeda_autogerado_w,
			nr_seq_regra_tx_inter		= nr_seq_regra_tx_inter_w,
			vl_ch_honorario			= vl_ch_honorarios_w,
			vl_ch_custo_oper		= vl_ch_custo_oper,
			vl_ch_custo_filme		= vl_ch_custo_filme_w,
			vl_ch_anestesista		= vl_ch_anestesista_w,
			vl_medico_tab			= vl_medico_tab_w,
			qt_filme_tab			= qt_filme_tab_w,
			dt_atualizacao			= clock_timestamp(),
			vl_medico_original    		= vl_medico_original_w,
			vl_proc_cobranca_prev		= vl_proc_cobranca_prev_w,
			nr_seq_regra_cobr_prev		= nr_seq_regra_cobr_prev_w,
			ie_via_acesso			= ie_via_acesso_w
		where	nr_sequencia			= nr_sequencia_p;

		-- data valorizacao e atualizada toda vez que e executada a valorizacao do item
		update	pls_conta_proc_regra
		set		dt_valorizacao = clock_timestamp(),
				nr_seq_regra_tx_adm = nr_seq_regra_tx_adm_w
		where	nr_sequencia = nr_sequencia_p;
	else

		-- Este trecho esta sofrendo em alguns casos um deadlock.

		-- Partimos do principio de alta concorrencia e caso gere o deadlock, tentar realizar o update

		-- um certo numero de vezes, antes de estourar a excecao propriamente dita.

		-- Isto ganha um certo tempo, para que a operacao que esta bloqueando o registro seja concluida

		-- e a rotina consiga alterar os seus registros.


		-- Inicializa as variaveis
		deadlock_i_w		:= 0;
		deadlock_repetir_w	:= 'S';

		-- Repete SEMPRE que tiver marcado para repetir, ou entao se o numero de tentativas e inferior ao maximo
		while (deadlock_repetir_w = 'S' AND deadlock_i_w < deadlock_max_tentativa_w) loop


			-- Ja marca para NAO repetir, logo no inico da rotina. ISSO E IMPORTANTE PARA NAO GERAR UM LOOP INFINITO
			deadlock_repetir_w	:= 'N';
			-- Incrementa a quantidade de tentativas. ISSO E IMPORTANTE PARA NAO GERAR UM LOOP INFINITO
			deadlock_i_w		:= deadlock_i_w + 1;

			-- Realiza a operacao propriamente dita
			begin

				update	pls_conta_proc
				set	tx_medico			= CASE WHEN ie_tx_manual_atualiza_w='N' THEN  coalesce(tx_medico_w,100)  ELSE tx_medico END ,
					tx_custo_operacional		= CASE WHEN ie_tx_manual_atualiza_w='N' THEN  coalesce(tx_custo_operacional_w,100)  ELSE tx_custo_operacional END ,
					tx_material			= CASE WHEN ie_tx_manual_atualiza_w='N' THEN  coalesce(tx_material_w,100)  ELSE tx_material END ,
					tx_auxiliares			= coalesce(tx_auxiliares_w,100),
					tx_anestesista			= coalesce(tx_anestesista_w,100),
					vl_procedimento			= vl_procedimento_w,
					vl_proc_unitario		= vl_proc_unitario_w,
					vl_custo_operacional		= vl_custo_operacional_w,
					vl_anestesista			= vl_anestesista_w,
					vl_medico			= vl_medico_w,
					vl_materiais			= vl_filme_w,
					vl_auxiliares			= vl_auxiliares_w,
					vl_glosa			= CASE WHEN ie_status='L' THEN vl_glosa WHEN ie_status='S' THEN vl_glosa  ELSE 0 END ,
					vl_saldo			= CASE WHEN ie_status='L' THEN vl_saldo WHEN ie_status='S' THEN vl_glosa  ELSE 0 END ,
					nr_seq_regra			= CASE WHEN nr_seq_regra_w=0 THEN null  ELSE nr_seq_regra_w END ,
					nr_seq_regra_horario		= nr_seq_regra_adic_w,
					ds_log				= 'pls_atualiza_valor_proc',
					nr_seq_honorario_crit		= nr_seq_regra_honorario_w,
					vl_beneficiario			= vl_beneficiario_w,
					nr_seq_regra_pos_estab		= nr_seq_regra_pos_estab_w,
					ie_cobranca_prevista		= CASE WHEN ie_cobranca_prevista_inf = NULL THEN  ie_cobranca_prevista_w  ELSE ie_cobranca_prevista END ,
					ie_cobranca_previa_servico	= ie_cobranca_previa_servico_w,
					vl_proc_copartic		= vl_proc_copartic_w,
					nr_seq_regra_copartic		= nr_seq_regra_copartic_w,
					cd_porte_anestesico		= cd_porte_anestesico_w,
					ie_ato_cooperado		= ie_ato_cooperado_w,
					nr_seq_regra_cooperado		= nr_seq_regra_cooperado_w,
					tx_item				= tx_item_w,
					nr_seq_prestador_pgto		= nr_seq_prestador_pgto_w,
					nr_auxiliares			= nr_aux_regra_w,
					vl_procedimento_ptu		= vl_procedimento_ptu_w,
					vl_co_ptu			= vl_co_ptu_w,
					vl_material_ptu			= vl_material_ptu_w,
					nr_seq_regra_int		= nr_seq_regra_inter_w,
					vl_total_procedimento		= vl_total_procedimento_w,
					nr_seq_preco_autogerado		= nr_seq_regra_autogerado_w,
					ie_repassa_medico		= ie_repassa_medico_w,
					vl_total_partic			= vl_total_partic_w,
					tx_intercambio			= coalesce(tx_intercambio_w,0),
					vl_taxa_co			= vl_taxa_co_w,
					vl_taxa_material		= vl_taxa_material_w,
					vl_taxa_servico			= vl_taxa_servico_w,
					vl_calc_co_util			= vl_calc_co_util_w,
					vl_calc_mat_util		= vl_calc_mat_util_w,
					vl_calc_hi_util 		= vl_calc_hi_util_w,
					vl_calculado_ant		= vl_calculado_ant_w,
					tx_prestador_item		= tx_adm_w,
					cd_moeda_autogerado		= cd_moeda_autogerado_w,
					nr_seq_regra_tx_inter		= nr_seq_regra_tx_inter_w,
					vl_ch_honorario			= vl_ch_honorarios_w,
					vl_ch_custo_oper		= vl_ch_custo_oper,
					vl_ch_custo_filme		= vl_ch_custo_filme_w,
					vl_ch_anestesista		= vl_ch_anestesista_w,
					vl_custo_operacional_tab	= vl_custo_operacional_tab_w,
					vl_medico_tab			= vl_medico_tab_w,
					qt_filme_tab			= qt_filme_tab_w,
					dt_atualizacao			= clock_timestamp(),
					vl_medico_original    		= vl_medico_original_w,
					vl_proc_cobranca_prev		= vl_proc_cobranca_prev_w,
					nr_seq_regra_cobr_prev		= nr_seq_regra_cobr_prev_w,
					ie_via_acesso			= ie_via_acesso_w
				where	nr_sequencia			= nr_sequencia_p;

			exception
				-- quando ocorre o deadlock, verifica-se a quantidade de tentativas, se nao excedeu, tenta novamente, senao, gera a excecao normalmente
				when deadlock_exception then
					--  se ainda pode tentar repetir o processo
					if (deadlock_i_w < deadlock_max_tentativa_w) then

						deadlock_repetir_w	:= 'S';
					else
					-- lanca a excecao normalmente
						CALL wheb_mensagem_pck.exibir_mensagem_abort(471153,'ERRO=' ||sqlerrm);
					end if;
				-- outras excecoes serao lancadas manualmente
				when others then CALL wheb_mensagem_pck.exibir_mensagem_abort(471153,'ERRO=' ||sqlerrm);
			end;
		end loop; -- Loop deadlock
	end if;

	update	pls_conta
	set	ie_tipo_partic_prof	= ie_tipo_partic_prof_w
	where	nr_sequencia		= nr_seq_conta_w;

	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_atualiza_valor_proc ( nr_sequencia_p pls_conta_proc.nr_sequencia%type, ie_gravar_log_p text, nm_usuario_p usuario.nm_usuario%type, ie_atualiza_p text, ie_origem_rec_p text, nr_param_dois_p bigint, ie_recalcular_conta_p text default 'N') FROM PUBLIC;

