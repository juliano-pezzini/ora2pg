-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_recalc_quitacao_anual_deb ( nr_ano_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


qt_titulos_pendente_w		bigint;
qt_titulos_emitidos_w		bigint;
nr_seq_mensalidade_w		pls_pagador_quitacao_anual.nr_seq_mensalidade%type;
nr_ano_w			pls_pagador_quitacao_anual.nr_ano%type;
dt_ano_w			timestamp;
ie_dt_venc_quitacao_debito_w	pls_parametros.ie_dt_venc_quitacao_debito%type;

c01 CURSOR FOR  -- Verifica se os pagadores ativos  e se possuem beneficiários ativos vinculados
	SELECT 	a.nr_sequencia
	from 	pls_contrato_pagador a
	where 	exists	(SELECT 1
			from 	pls_segurado x
			where  	a.nr_sequencia = x.nr_seq_pagador
			and	(x.dt_liberacao IS NOT NULL AND x.dt_liberacao::text <> '')
			and 	((trunc(x.dt_contratacao,'yyyy') <= dt_ano_w) and ((trunc(x.dt_rescisao,'yyyy') >= dt_ano_w) or (coalesce(x.dt_rescisao::text, '') = '')))) --  pagador possui beneficiários ativos vinculados
	group by a.nr_sequencia;

BEGIN

select	coalesce(max(ie_dt_venc_quitacao_debito), 'P')
into STRICT	ie_dt_venc_quitacao_debito_w
from	pls_parametros
where	cd_estabelecimento = cd_estabelecimento_p;

dt_ano_w := trunc(to_date(nr_ano_p, 'yyyy'), 'yyyy');

for r_c01_w in C01 loop
	select 	max(nr_seq_mensalidade),-- verifica se existe nr_seq_mensalidade na tabela  no ano correspondente.
		max(nr_ano)
	into STRICT	nr_seq_mensalidade_w,
		nr_ano_w
	from	pls_pagador_quitacao_anual
	where 	nr_ano 		= nr_ano_p
	and 	nr_seq_pagador 	= r_c01_w.nr_sequencia;

	if (coalesce(nr_seq_mensalidade_w,0) = 0) then -- se não existe reistro no nr_seq_mensalidade ele continua
		qt_titulos_pendente_w	:= 0;
		qt_titulos_emitidos_w	:= 0;

		if (ie_dt_venc_quitacao_debito_w = 'P') then
			select  count(1)
			into STRICT	qt_titulos_pendente_w
			
			where	exists (SELECT	1
					from	titulo_receber
					where 	(to_char(dt_pagamento_previsto, 'yyyy'))::numeric  <= nr_ano_p
					and 	nr_seq_pagador = r_c01_w.nr_sequencia
					and	ie_situacao = '1');

			select  count(1)
			into STRICT	qt_titulos_emitidos_w
			
			where	exists (SELECT	1
					from 	titulo_receber
					where	(to_char(dt_pagamento_previsto, 'yyyy'))::numeric  <= nr_ano_p
					and 	nr_seq_pagador = r_c01_w.nr_sequencia);
		elsif (ie_dt_venc_quitacao_debito_w = 'O') then
			select  count(1)
			into STRICT	qt_titulos_pendente_w
			
			where	exists (SELECT	1
					from	titulo_receber
					where 	(to_char(dt_vencimento, 'yyyy'))::numeric  <= nr_ano_p
					and 	nr_seq_pagador = r_c01_w.nr_sequencia
					and	ie_situacao = '1');

			select  count(1)
			into STRICT	qt_titulos_emitidos_w
			
			where	exists (SELECT	1
					from 	titulo_receber
					where	(to_char(dt_vencimento, 'yyyy'))::numeric  <= nr_ano_p
					and 	nr_seq_pagador = r_c01_w.nr_sequencia);
		end if;

		if (qt_titulos_pendente_w = 0 and qt_titulos_emitidos_w > 0)  then
			if (coalesce(nr_ano_w,0) = 0) then
				insert 	into 	pls_pagador_quitacao_anual(
						nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						nr_ano,
						nr_seq_pagador)
					values (nextval('pls_pagador_quitacao_anual_seq'),
						clock_timestamp(),
						nm_usuario_p,
						nr_ano_p,
						r_c01_w.nr_sequencia);
			elsif (coalesce(nr_ano_w,0) <> 0) then
				update 	pls_pagador_quitacao_anual
				set	dt_atualizacao		= clock_timestamp(),
					nm_usuario		= nm_usuario_p
				where	nr_ano 			= nr_ano_p
				and 	nr_seq_pagador		= r_c01_w.nr_sequencia;
			end if;
		elsif (qt_titulos_pendente_w > 0 and qt_titulos_emitidos_w > 0) then
			delete from pls_pagador_quitacao_anual
			where	nr_ano 		= nr_ano_p
			and 	nr_seq_pagador	= r_c01_w.nr_sequencia;
		end if;
	end if;
end loop;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_recalc_quitacao_anual_deb ( nr_ano_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

