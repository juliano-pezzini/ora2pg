-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consistir_regra_escritural (ie_opcao_p text, nr_seq_documento_p bigint, nr_titulo_p bigint, nm_usuario_p text) AS $body$
DECLARE


/* ie_opcao_p

C	CobranÃ§a Escritural
P	Pagamento Escritural

*/
cd_estabelecimento_w	smallint;
nr_seq_conta_banco_w	bigint;
nr_seq_tipo_w		bigint;

nm_tabela_w		varchar(50);
nm_atributo_w		varchar(50);
ie_condicao_w		varchar(5);
ds_condicao_w		varchar(255);
ds_consistencia_w	varchar(255);
nr_seq_regra_w		bigint;

nm_tabela_ligacao_w	varchar(50);
nr_caminho_w		bigint;
nm_proxima_tabela_w	varchar(50);
nm_atributo_ligacao_w	varchar(50);
nm_atributo_ref_w	varchar(50);
nr_alias_w		bigint	:= 0;
nr_proximo_alias_w	bigint	:= 0;

ds_select_w		varchar(255);
ds_from_w		varchar(4000);
ds_where_w		varchar(4000);
ds_parametros_w		varchar(255);
ds_retorno_w		varchar(255);

ie_consistente_w	varchar(1)	:= 'S';
nr_linha_w		bigint;
nm_atributo_pk_w	varchar(50);
qt_atributo_pk_w	bigint	:= 0;

qt_integridade_w	bigint;
ie_sequencia_criacao_w	bigint;

c01 CURSOR FOR
SELECT	a.nm_tabela,
	a.nm_atributo,
	a.ie_condicao,
	a.ds_condicao,
	a.ds_consistencia,
	a.nr_sequencia
from	regra_consistencia_escrit a
where	coalesce(a.nr_seq_conta_banco,coalesce(nr_seq_conta_banco_w,0)) = coalesce(nr_seq_conta_banco_w,0)
and	coalesce(a.nr_seq_tipo_cobr,coalesce(nr_seq_tipo_w,0)) = coalesce(nr_seq_tipo_w,0)
and	a.cd_estabelecimento	= cd_estabelecimento_w
and	a.ie_situacao = 'A';

c02 CURSOR FOR
SELECT	a.nm_tabela,
	a.nr_caminho
from	w_tabela_integr_caminho a
order by	CASE WHEN qt_integridade_w=0 THEN 0  ELSE a.nr_caminho END  desc,
	CASE WHEN qt_integridade_w=0 THEN a.nr_caminho  ELSE 0 END;

c03 CURSOR FOR
SELECT	b.nm_atributo,
	b.nm_atributo_ref,
	b.ie_sequencia_criacao
from	integridade_atributo b,
	integridade_referencial a
where	a.nm_integridade_referencial	= b.nm_integridade_referencial
and	a.nm_tabela_referencia		= nm_proxima_tabela_w
and	a.nm_tabela			= nm_tabela_ligacao_w
and	qt_integridade_w		> 0

union

select	b.nm_atributo,
	b.nm_atributo_ref,
	b.ie_sequencia_criacao
from	integridade_atributo b,
	integridade_referencial a
where	a.nm_integridade_referencial	= b.nm_integridade_referencial
and	a.nm_tabela_referencia		= nm_tabela_ligacao_w
and	a.nm_tabela			= nm_proxima_tabela_w
and	qt_integridade_w		= 0
order by	ie_sequencia_criacao;

c04 CURSOR FOR
SELECT	b.nm_atributo
from	indice_atributo b,
	indice a
where	a.nm_tabela	= b.nm_tabela
and	a.nm_indice	= b.nm_indice
and	a.ie_tipo	= 'PK'
and	((qt_integridade_w = 0 and a.nm_tabela = nm_tabela_ligacao_w) or (qt_integridade_w > 0 and a.nm_tabela = nm_proxima_tabela_w))
order by	b.nr_sequencia;


BEGIN

if (ie_opcao_p	= 'C') then

	select	max(a.cd_estabelecimento),
		max(a.nr_seq_conta_banco),
		max(a.nr_seq_tipo)
	into STRICT	cd_estabelecimento_w,
		nr_seq_conta_banco_w,
		nr_seq_tipo_w
	from	cobranca_escritural a
	where	a.nr_sequencia	= nr_seq_documento_p;

	open	c01;
	loop
	fetch	c01 into
		nm_tabela_w,
		nm_atributo_w,
		ie_condicao_w,
		ds_condicao_w,
		ds_consistencia_w,
		nr_seq_regra_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */

		ie_consistente_w	:= 'S';

		CALL gerar_w_integr_referencial('TITULO_RECEBER',nm_tabela_w);

		select	count(*)
		into STRICT	qt_integridade_w
		from	w_tabela_integr_caminho;

		if (qt_integridade_w	= 0) then
			CALL gerar_w_integr_referencial(nm_tabela_w,'TITULO_RECEBER');
		end if;

		ds_select_w	:= 'select substr(max(a.' || nm_atributo_w || '),1,255)';
		ds_from_w	:= null;
		ds_where_w	:= null;

		open	c02;
		loop
		fetch	c02 into
			nm_tabela_ligacao_w,
			nr_caminho_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */

			if (nm_tabela_ligacao_w	= nm_tabela_w) then
				nr_alias_w	:= null;
			else
				nr_alias_w	:= coalesce(nr_alias_w,0) + 1;
			end if;

			if (coalesce(ds_from_w::text, '') = '') then
				ds_from_w	:= ' from ';
			else
				ds_from_w	:= ds_from_w || ', ';
			end if;

			ds_from_w	:= ds_from_w || nm_tabela_ligacao_w || ' a' || nr_alias_w;

			if (nm_tabela_ligacao_w	= 'TITULO_RECEBER') then
				if (coalesce(ds_where_w::text, '') = '') then
					ds_where_w	:= ' where ';
				else
					ds_where_w	:= ds_where_w || ' and ';
				end if;

				ds_where_w	:= ds_where_w || 'a' || nr_alias_w || '.nr_titulo = nvl(:nr_titulo,a' || nr_alias_w || '.nr_titulo)';
				ds_parametros_w	:= ds_parametros_w || ':nr_titulo=' || nr_titulo_p || ';';
			end if;

			if (qt_integridade_w	= 0) then

				select	min(a.nm_tabela)
				into STRICT	nm_proxima_tabela_w
				from	w_tabela_integr_caminho a
				where	a.nr_caminho	=
					(SELECT	max(x.nr_caminho)
					from	w_tabela_integr_caminho x
					where	x.nr_caminho > nr_caminho_w);

			else

				select	max(a.nm_tabela)
				into STRICT	nm_proxima_tabela_w
				from	w_tabela_integr_caminho a
				where	a.nr_caminho	=
					(SELECT	max(x.nr_caminho)
					from	w_tabela_integr_caminho x
					where	x.nr_caminho < nr_caminho_w);

			end if;

			if (nm_proxima_tabela_w	= nm_tabela_w) then
				nr_proximo_alias_w	:= null;
			else
				nr_proximo_alias_w	:= coalesce(nr_alias_w,0) + 1;
			end if;

			nr_linha_w	:= 0;

			open	c03;
			loop
			fetch	c03 into
				nm_atributo_ligacao_w,
				nm_atributo_ref_w,
				ie_sequencia_criacao_w;
			EXIT WHEN NOT FOUND; /* apply on c03 */

				nr_linha_w	:= coalesce(nr_linha_w,0) + 1;

				if (coalesce(ds_where_w::text, '') = '') then
					ds_where_w	:= ' where ';
				else
					ds_where_w	:= ds_where_w || ' and ';
				end if;

				if (coalesce(nm_atributo_ref_w::text, '') = '') then

					qt_atributo_pk_w	:= 0;

					open	c04;
					loop
					fetch	c04 into
						nm_atributo_pk_w;
					exit	when(c04%notfound or qt_atributo_pk_w = nr_linha_w);

						qt_atributo_pk_w	:= coalesce(qt_atributo_pk_w,0) + 1;

						if (qt_atributo_pk_w	= nr_linha_w) then
							nm_atributo_ref_w	:= nm_atributo_pk_w;
						end if;

					end	loop;
					close	c04;

				end if;

				ds_where_w	:= ds_where_w || 'a' || nr_alias_w || '.' || nm_atributo_ligacao_w || ' = a' || nr_proximo_alias_w || '.' || nm_atributo_ref_w;

			end	loop;
			close	c03;

		end	loop;
		close	c02;

		ds_retorno_w := obter_valor_dinamico_char_bv(	ds_select_w ||
						ds_from_w ||
						ds_where_w, ds_parametros_w, ds_retorno_w);

		/* Valor informado igual a */

		if (ie_condicao_w	= 'IG') and
			(ds_retorno_w = ds_condicao_w AND ds_condicao_w IS NOT NULL AND ds_condicao_w::text <> '') or
			((coalesce(ds_retorno_w::text, '') = '') and (coalesce(ds_condicao_w::text, '') = '')) then

			ie_consistente_w	:= 'N';

		/* Valor informado menor que */

		elsif (ie_condicao_w	= 'ME') then
			begin
				if ((ds_retorno_w)::numeric  < (ds_condicao_w)::numeric ) then
					ie_consistente_w	:= 'N';
				end if;
			exception
			when others then
				if (somente_numero(ds_retorno_w) < somente_numero(ds_condicao_w)) then
					ie_consistente_w	:= 'N';
				end if;
			end;
		/* Valor informado maior que */

		elsif (ie_condicao_w	= 'MA') then
			begin
				if ((ds_retorno_w)::numeric  > (ds_condicao_w)::numeric ) then
					ie_consistente_w	:= 'N';
				end if;
			exception
			when others then
				if (somente_numero(ds_retorno_w) > somente_numero(ds_condicao_w)) then
					ie_consistente_w	:= 'N';
				end if;
			end;
		/* Valor informado diferente de */

		elsif (ie_condicao_w	= 'DF') and (coalesce(ds_retorno_w,'<NVL>') <> coalesce(ds_condicao_w,'<NVL>')) then

			ie_consistente_w	:= 'N';

		end if;

		if (ie_consistente_w	= 'N') then

			insert	into w_inconsistencia_escrit(dt_atualizacao,
				dt_atualizacao_nrec,
				nm_usuario,
				nm_usuario_nrec,
				nr_seq_cobranca,
				nr_seq_regra,
				nr_sequencia,
				nr_titulo)
			values (clock_timestamp(),
				clock_timestamp(),
				nm_usuario_p,
				nm_usuario_p,
				nr_seq_documento_p,
				nr_seq_regra_w,
				nextval('w_inconsistencia_escrit_seq'),
				nr_titulo_p);

		end if;

	end	loop;
	close	c01;

end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consistir_regra_escritural (ie_opcao_p text, nr_seq_documento_p bigint, nr_titulo_p bigint, nm_usuario_p text) FROM PUBLIC;

