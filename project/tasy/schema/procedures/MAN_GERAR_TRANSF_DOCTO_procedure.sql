-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE man_gerar_transf_docto ( nr_sequencia_p bigint, nr_seq_motivo_p bigint, nm_usuario_p text) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[  ]  Objetos do dicionário [  ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
-------------------------------------------------------------------------------------------------------------------
Referências:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
dt_transferencia_w		timestamp		:= clock_timestamp();
qt_existe_w			bigint;
nr_seq_equipamento_w		bigint;
nr_seq_local_w			bigint;
nr_seq_local_antigo_w		bigint;
ds_localizacao_w		varchar(50);
ds_localizacao_antiga_w		varchar(50);
nr_seq_motivo_w			bigint;
cd_estab_contabil_w		smallint;
cd_estab_local_w		smallint;
cd_imobilizado_w		varchar(20);
ds_erro_w			varchar(255);
ie_transf_bem_equip_w		varchar(1);
ds_msg306022_w			varchar(50);
ds_msg306023_w			varchar(50);
ds_msg306024_w			varchar(50);
ds_msg306025_w			varchar(50);

c_equipamento CURSOR FOR
	SELECT	a.nr_seq_equipamento,
		b.nr_seq_local,
		substr(obter_desc_man_localizacao(b.nr_seq_local),1,50)
	from	man_doc_transferencia	b,
		man_doc_transf_equip	a
	where	a.nr_seq_doc_transf	= b.nr_sequencia
	and	b.nr_sequencia		= nr_sequencia_p;


BEGIN
ie_transf_bem_equip_w := obter_param_usuario(	299, 442, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_transf_bem_equip_w);

select	count(1)
into STRICT	qt_existe_w
from	man_doc_transf_equip
where	nr_seq_doc_transf	= nr_sequencia_p  LIMIT 1;

if (qt_existe_w = 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(184039);
end if;

ds_msg306022_w	:= substr(wheb_mensagem_pck.get_texto(306022),1,50);
ds_msg306023_w	:= substr(wheb_mensagem_pck.get_texto(306023),1,50);
ds_msg306024_w	:= substr(wheb_mensagem_pck.get_texto(306024),1,50);
ds_msg306025_w	:= substr(wheb_mensagem_pck.get_texto(306025),1,50);

open c_equipamento;
loop
fetch c_equipamento into
	nr_seq_equipamento_w,
	nr_seq_local_w,
	ds_localizacao_w;
EXIT WHEN NOT FOUND; /* apply on c_equipamento */
	begin
	ds_erro_w := null;

	select	nr_seq_local,
		substr(obter_desc_man_localizacao(nr_seq_local),1,50),
		cd_estab_contabil,
		cd_imobilizado
	into STRICT	nr_seq_local_antigo_w,
		ds_localizacao_antiga_w,
		cd_estab_contabil_w,
		cd_imobilizado_w
	from	man_equipamento
	where	nr_sequencia	= nr_seq_equipamento_w;

	select	cd_estabelecimento
	into STRICT	cd_estab_local_w
	from	man_localizacao
	where	nr_sequencia	= nr_seq_local_w;

	if (coalesce(ie_transf_bem_equip_w,'N') = 'S') and (coalesce(cd_imobilizado_w,'0') <> '0') then
		begin
		select	count(1)
		into STRICT	qt_existe_w
		from	pat_bem
		where	cd_bem	= cd_imobilizado_w  LIMIT 1;

		if (qt_existe_w > 0) then
			begin
			select	count(1)
			into STRICT	qt_existe_w
			from	pat_local
			where	ie_situacao		= 'A'
			and	nr_seq_local_manutencao	= nr_seq_local_w  LIMIT 1;

			if (qt_existe_w = 0) then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(211495);
			else
				ds_erro_w := gerar_transferencia_bem(cd_imobilizado_w, nr_seq_local_w, null, nm_usuario_p, ds_erro_w);
			end if;

			if (coalesce(ds_erro_w,'X') <> 'X') then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(211496,'DS_ERRO_TRANSF_BEM=' || ds_erro_w);
			end if;
			end;
		end if;
		end;
	end if;

	update	man_equipamento
	set	nr_seq_local 	= nr_seq_local_w,
		dt_atualizacao	= clock_timestamp(),
		nm_usuario	= nm_usuario_p
	where	nr_sequencia	= nr_seq_equipamento_w;

	if (coalesce(cd_estab_contabil_w,0) > 0) and (coalesce(cd_estab_local_w,0) > 0) then
		update	man_equipamento
		set	cd_estab_contabil 	= cd_estab_local_w
		where	nr_sequencia		= nr_seq_equipamento_w;
	end if;

	if (coalesce(nr_seq_motivo_p,0) = 0) then
		select	min(nr_sequencia)
		into STRICT	nr_seq_motivo_w
		from	man_motivo_transf_equip;
	else
		nr_seq_motivo_w	:= nr_seq_motivo_p;
	end if;

	if (coalesce(nr_seq_motivo_w,0) > 0) then
		insert into man_transf_equipamento(nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_motivo_transf,
			nr_seq_equipamento,
			dt_transferencia,
			nr_seq_local,
			nr_seq_local_origem)
		values (nextval('man_transf_equipamento_seq'),
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_motivo_w,
			nr_seq_equipamento_w,
			clock_timestamp(),
			nr_seq_local_w,
			nr_seq_local_antigo_w);
	end if;

	insert into man_equipamento_hist(nr_sequencia,
		nr_seq_equipamento,
		dt_historico,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		ds_historico,
		ie_origem)
	values (nextval('man_equipamento_hist_seq'),
		nr_seq_equipamento_w,
		clock_timestamp(),
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		ds_msg306022_w || chr(13) || chr(10) ||
		ds_msg306023_w || ' ' || ds_localizacao_antiga_w || chr(13) || chr(10) ||
		ds_msg306024_w || ' ' || ds_localizacao_w || chr(13) || chr(10) ||
		ds_msg306025_w || ' ' || nr_sequencia_p,
		'S');
	end;
end loop;
close c_equipamento;

update	man_doc_transferencia
set	dt_transferencia	= dt_transferencia_w
where	nr_sequencia		= nr_sequencia_p;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE man_gerar_transf_docto ( nr_sequencia_p bigint, nr_seq_motivo_p bigint, nm_usuario_p text) FROM PUBLIC;

