-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE grava_ajuste_preco_servico ( cd_estabelecimento_p bigint, cd_tab_origem_p bigint, cd_tab_destino_p bigint, cd_procedimento_p bigint, dt_vigencia_origem_p timestamp, dt_vigencia_destino_p timestamp, ie_indice_p bigint, nm_usuario_p text, ie_ultima_vigencia_p text, ie_arredondamento_p text, qt_casas_decimais_p bigint) AS $body$
DECLARE



cd_procedimento_w		bigint;
vl_servico_w			double precision;
cd_moeda_w			smallint;
ie_origem_proced_w		bigint;
cd_unidade_medida_w		varchar(30);
ie_copiar_outros_estab_w	varchar(1);
cd_procedimento_loc_w	preco_servico.cd_procedimento_loc%type;

C01 CURSOR FOR
SELECT	a.cd_procedimento,
	a.vl_servico,
	a.cd_moeda,
	a.ie_origem_proced,
	a.cd_unidade_medida,
	a.cd_procedimento_loc
from	preco_servico a
where	a.cd_estabelecimento 	= cd_estabelecimento_p
and	a.cd_tabela_servico  	= cd_tab_origem_p
and	a.dt_inicio_vigencia 	= dt_vigencia_origem_p
and (a.cd_procedimento   	= cd_procedimento_p or cd_procedimento_p = 0)
and	ie_ultima_vigencia_p	= 'N'
and 	not exists (	SELECT x.cd_procedimento
		  	from preco_servico x
		  	where x.cd_procedimento  = a.cd_procedimento
		    	and x.ie_origem_proced   = a.ie_origem_proced
		    	and x.cd_estabelecimento = cd_estabelecimento_p
		    	and x.cd_tabela_servico  = cd_tab_destino_p
		    	and x.dt_inicio_vigencia = dt_vigencia_destino_p)

union

select	a.cd_procedimento,
	a.vl_servico,
	a.cd_moeda,
	a.ie_origem_proced,
	a.cd_unidade_medida,
	a.cd_procedimento_loc
from	preco_servico a
where	a.cd_estabelecimento 	= cd_estabelecimento_p
and	a.cd_tabela_servico  	= cd_tab_origem_p
and	a.dt_inicio_vigencia 	=
                          (select max(x.dt_inicio_vigencia)
                          from preco_servico x
                          where x.CD_TABELA_SERVICO      = a.CD_TABELA_SERVICO
                          and   x.cd_procedimento        = a.cd_procedimento  
                          and   x.ie_origem_proced       = a.ie_origem_proced)		
and (a.cd_procedimento   	= cd_procedimento_p or cd_procedimento_p = 0)
and	ie_ultima_vigencia_p	= 'S'
and 	not exists (	select x.cd_procedimento
		  	from preco_servico x
		  	where x.cd_procedimento  = a.cd_procedimento
		    	and x.ie_origem_proced   = a.ie_origem_proced
		    	and x.cd_estabelecimento = cd_estabelecimento_p
		    	and x.cd_tabela_servico  = cd_tab_destino_p
		    	and x.dt_inicio_vigencia = dt_vigencia_destino_p
			and cd_tab_destino_p <> cd_tab_origem_p);


BEGIN

ie_copiar_outros_estab_w := coalesce(Obter_valor_param_usuario(3110, 38, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p),'N');

open C01;
loop
fetch C01 into
	cd_procedimento_w,
	vl_servico_w,
	cd_moeda_w,
	ie_origem_proced_w,
	cd_unidade_medida_w,
	cd_procedimento_loc_w;
EXIT WHEN NOT FOUND; /* apply on C01 */

begin	
if (ie_arredondamento_p = 'P') then
    vl_servico_w := ROUND(vl_servico_w * ie_indice_p,qt_casas_decimais_p);
elsif (ie_arredondamento_p = 'D') then
    vl_servico_w := TRUNC(vl_servico_w * ie_indice_p,qt_casas_decimais_p);
elsif (ie_arredondamento_p = 'N') or (qt_casas_decimais_p = 0) then
    vl_servico_w := vl_servico_w * ie_indice_p;
end if;

insert 	into preco_servico(
	cd_estabelecimento,
	cd_tabela_servico,
	cd_procedimento,
	dt_inicio_vigencia,
	vl_servico,
	cd_moeda,
	dt_atualizacao,
	nm_usuario,
	ie_origem_proced,
	cd_unidade_medida,
	cd_procedimento_loc)
VALUES (cd_estabelecimento_p,
	cd_tab_destino_p,
	cd_procedimento_w,
	dt_vigencia_destino_p,
	vl_servico_w,
	cd_moeda_w,
	clock_timestamp(),
	nm_usuario_p,
	ie_origem_proced_w,
	cd_unidade_medida_w,
	cd_procedimento_loc_w);
	
if (ie_copiar_outros_estab_w = 'R') then
	CALL copiar_tabela_outro_estab(cd_tab_destino_p, cd_estabelecimento_p, cd_procedimento_w, dt_vigencia_destino_p, nm_usuario_p);
end if;

end;
end loop;
close C01;

commit;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE grava_ajuste_preco_servico ( cd_estabelecimento_p bigint, cd_tab_origem_p bigint, cd_tab_destino_p bigint, cd_procedimento_p bigint, dt_vigencia_origem_p timestamp, dt_vigencia_destino_p timestamp, ie_indice_p bigint, nm_usuario_p text, ie_ultima_vigencia_p text, ie_arredondamento_p text, qt_casas_decimais_p bigint) FROM PUBLIC;

