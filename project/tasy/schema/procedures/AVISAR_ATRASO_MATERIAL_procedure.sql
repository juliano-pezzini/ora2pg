-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE conteudo_ci AS (ds_informacao varchar(4000));


CREATE OR REPLACE PROCEDURE avisar_atraso_material (dt_parametro_p timestamp) AS $body$
DECLARE

type ci is table of conteudo_ci index by integer;

ds_titulo_w							varchar(50);
ds_comunicado_w						varchar(4000);
nr_ordem_compra_w					bigint;
nm_fornecedor_w						varchar(80);
nm_fornecedor_ww					varchar(80);
nm_usuario_w						varchar(255);
nm_usuario_ww						varchar(255);
nr_sequencia_w						bigint;
nr_seq_classif_w					bigint;
ie_avisa_solic_atraso_oc_w			varchar(1);
ds_lista_itens_oc_w					varchar(4000);
cd_cgc_fornecedor_w					varchar(14);
cd_material_w						integer;
ds_material_w						varchar(255);
dt_prevista_entrega_w				timestamp;
ie_lista_mat_aviso_chegada_w		varchar(1) := 'N';
desc_conteudo_ci 					ci;

c01 CURSOR FOR 
SELECT distinct 
	a.nr_ordem_compra, 
	c.nm_fornecedor, 
	substr(u.nm_usuario || ',' || 
	obter_usuario_pessoa(obter_pessoa_delegacao(c.cd_comprador, 'RC', clock_timestamp())),1,255) ds_usuario, 
	d.cd_cgc_fornecedor 
from 	ordem_compra_item b, 
	ordem_compra_item_entrega a, 
	usuario u, 
	ordem_compra_v2 c, 
	ordem_compra d 
where 	a.nr_ordem_compra 	= c.nr_ordem_compra 
and 	a.nr_ordem_compra 	= b.nr_ordem_compra 
and 	c.nr_ordem_compra 	= d.nr_ordem_compra 
and 	a.nr_item_oci		= b.nr_item_oci 
and (coalesce(a.dt_real_entrega::text, '') = '' or a.qt_prevista_entrega > coalesce(a.qt_real_entrega,0)) 
and	coalesce(c.dt_baixa::text, '') = '' 
and	c.cd_comprador		= u.cd_pessoa_fisica 
and	a.dt_prevista_entrega	< trunc(dt_parametro_p,'dd') 
and	a.dt_prevista_entrega	<= trunc(dt_parametro_p,'dd') - coalesce(obter_qt_dias_aviso_atraso(c.cd_estabelecimento), 60) 
and	coalesce(a.dt_cancelamento::text, '') = '' 
and	coalesce(d.nr_seq_motivo_cancel::text, '') = '' 
order by	ds_usuario, 
	nm_fornecedor, 
	a.nr_ordem_compra;

c02 CURSOR FOR 
SELECT distinct 
	a.nr_ordem_compra, 
	c.nm_fornecedor, 
	substr(coalesce(obter_usuario_pessoa(c.cd_pessoa_solicitante),'A') || ',' || 
		obter_usuario_pessoa(obter_pessoa_delegacao(c.cd_pessoa_solicitante, 'RC', clock_timestamp())),1,255) ds_usuario, 
	d.cd_cgc_fornecedor 
from 	ordem_compra_item b, 
	ordem_compra_item_entrega a, 
	usuario u, 
	ordem_compra_v2 c, 
	ordem_compra d 
where 	a.nr_ordem_compra 	= c.nr_ordem_compra 
and 	a.nr_ordem_compra 	= b.nr_ordem_compra 
and 	a.nr_item_oci		= b.nr_item_oci 
and 	c.nr_ordem_compra 	= d.nr_ordem_compra 
and (coalesce(a.dt_real_entrega::text, '') = '' or a.qt_prevista_entrega > coalesce(a.qt_real_entrega,0)) 
and	coalesce(c.dt_baixa::text, '') = '' 
and	c.cd_pessoa_solicitante	= u.cd_pessoa_fisica 
and	obter_usuario_pessoa(c.cd_pessoa_solicitante) <> obter_usuario_pessoa(c.cd_comprador) 
and (substr(obter_se_avisa_solic_atraso_oc(c.cd_estabelecimento),1,1) = 'S') 
and	a.dt_prevista_entrega	< trunc(dt_parametro_p,'dd') 
and	a.dt_prevista_entrega	<= trunc(dt_parametro_p,'dd') - coalesce(obter_qt_dias_aviso_atraso(c.cd_estabelecimento), 60) 
and	coalesce(a.dt_cancelamento::text, '') = '' 
and	coalesce(d.nr_seq_motivo_cancel::text, '') = '' 
order by	ds_usuario, 
	nm_fornecedor, 
	a.nr_ordem_compra;
	
C03 CURSOR FOR 
	SELECT	b.cd_material, 
		substr(b.ds_material,1,255), 
		c.dt_prevista_entrega 
	from	ordem_compra_item a, 
		material b, 
		ordem_compra_item_entrega c, 
		ordem_compra d 
	where	d.nr_ordem_compra = a.nr_ordem_compra	 
	and 	a.nr_ordem_compra 	= c.nr_ordem_compra 
	and 	a.nr_item_oci		= c.nr_item_oci	 
	and	a.nr_ordem_compra = nr_ordem_compra_w 
	and	a.cd_material = b.cd_material 
	and (coalesce(c.dt_real_entrega::text, '') = '' or c.qt_prevista_entrega > coalesce(c.qt_real_entrega,0)) 
	and	c.dt_prevista_entrega	< trunc(dt_parametro_p,'dd') 
	and	c.dt_prevista_entrega	<= trunc(dt_parametro_p,'dd') - coalesce(obter_qt_dias_aviso_atraso(d.cd_estabelecimento), 60) 
	and	coalesce(c.dt_cancelamento::text, '') = '' 
	order by a.cd_material;	
 
C04 CURSOR FOR 
	SELECT	b.cd_material, 
		substr(b.ds_material,1,255), 
		c.dt_prevista_entrega 
	from	ordem_compra_item a, 
		material b, 
		ordem_compra_item_entrega c, 
		ordem_compra d 
	where	d.nr_ordem_compra = a.nr_ordem_compra 
	and	a.nr_ordem_compra = nr_ordem_compra_w 
	and 	a.nr_ordem_compra 	= c.nr_ordem_compra 
	and 	a.nr_item_oci		= c.nr_item_oci	 
	and	a.cd_material = b.cd_material 
	and (coalesce(c.dt_real_entrega::text, '') = '' or c.qt_prevista_entrega > coalesce(c.qt_real_entrega,0)) 
	and	c.dt_prevista_entrega	< trunc(dt_parametro_p,'dd') 
	and	c.dt_prevista_entrega	<= trunc(dt_parametro_p,'dd') - coalesce(obter_qt_dias_aviso_atraso(d.cd_estabelecimento), 60) 
	and	coalesce(c.dt_cancelamento::text, '') = '' 
	order by a.cd_material;		
 
 
BEGIN 
 
select	coalesce(max(ie_lista_mat_aviso_chegada),'N') 
into STRICT	ie_lista_mat_aviso_chegada_w 
from	parametro_compras;
 
ds_titulo_w	:= wheb_mensagem_pck.get_texto(297616);/*'Fornecedores com OC em Atraso'*/
ds_comunicado_w	:= '';
select obter_classif_comunic('F') 
into STRICT	nr_seq_classif_w
;
 
/*Cursor 1 para enviar comunicação interna para o comprador*/
 
open c01;
loop 
fetch c01 into 
	nr_ordem_compra_w, 
	nm_fornecedor_w, 
	nm_usuario_w, 
	cd_cgc_fornecedor_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin 
	if (coalesce(nm_usuario_ww::text, '') = '') then 
		nm_usuario_ww	:= nm_usuario_w;
	end if;
	if (nm_usuario_w <> nm_usuario_ww) then 
		begin 
		for i in 0..desc_conteudo_ci.count-1 loop 
			begin 
			select nextval('comunic_interna_seq') 
			into STRICT nr_sequencia_w 
			;
			insert into comunic_interna( 
				dt_comunicado, 
				ds_titulo, 
				ds_comunicado, 
				nm_usuario, 
				dt_atualizacao, 
				ie_geral, 
				nm_usuario_destino, 
				nr_sequencia, 
				ie_gerencial, 
				nr_seq_classif, 
				dt_liberacao) 
			values (clock_timestamp() + interval '1 days'/86400, 
				ds_titulo_w, 
				desc_conteudo_ci[i].ds_informacao, 
				/*Atraso*/
 
				wheb_mensagem_pck.get_texto(297617), 
				clock_timestamp(), 
				'N', 
				nm_usuario_ww || ',', 
				nr_sequencia_w, 
				'N', 
				nr_seq_classif_w, 
				clock_timestamp());
			end;
		end loop;
		ds_comunicado_w	:= '';
		nm_usuario_ww		:= nm_usuario_w;
		desc_conteudo_ci.delete;
		end;
	end if;
	--if	(length(nvl(ds_comunicado_w,'A')) < 3900) then 
		--begin 
		if (nm_fornecedor_w <> coalesce(nm_fornecedor_ww,'A')) then 
			begin 
			ds_comunicado_w	:= substr(ds_comunicado_w || chr(13) || chr(10) || 
						nm_fornecedor_w || chr(13) || chr(10),1,4000);
			nm_fornecedor_ww	:= nm_fornecedor_w;
			end;
		end if;
		 
		if (ie_lista_mat_aviso_chegada_w = 'S') then		 
			ds_lista_itens_oc_w := null;
			open C03;
			loop 
			fetch C03 into	 
				cd_material_w, 
				ds_material_w, 
				dt_prevista_entrega_w;
			EXIT WHEN NOT FOUND; /* apply on C03 */
				begin 
				ds_lista_itens_oc_w := substr(ds_lista_itens_oc_w || to_char(cd_material_w) || '-' || ds_material_w || '-' || wheb_mensagem_pck.get_texto(297618) || to_char(dt_prevista_entrega_w) || chr(13) || chr(10) || '		',1,4000);			
				end;
			end loop;
			close C03;
			 
			ds_comunicado_w := substr(ds_comunicado_w || chr(13) || chr(10) || WHEB_MENSAGEM_PCK.get_texto(289031) || ' ' || to_char(nr_ordem_compra_w) || ' ' || WHEB_MENSAGEM_PCK.get_texto(289032) || cd_cgc_fornecedor_w || ' - ' || nm_fornecedor_w || ' ' || 
						WHEB_MENSAGEM_PCK.get_texto(289033) || chr(13) || chr(10) || WHEB_MENSAGEM_PCK.get_texto(289034) || ds_lista_itens_oc_w,1,4000);
		elsif (ie_lista_mat_aviso_chegada_w = 'N') then 
		 
			ds_comunicado_w	:= substr(ds_comunicado_w || ' ' || to_char(nr_ordem_compra_w) || ';',1,4000);				
		 
		end if;
		--ds_comunicado_w	:= substr(ds_comunicado_w || ' ' || to_char(nr_ordem_compra_w),1,4000); 
		--ds_comunicado_w	:= substr(ds_comunicado_w || ' ' || to_char(nr_ordem_compra_w),1,4000); 
--		ds_comunicado_w := substr('A ordem de compra ' || to_char(nr_ordem_compra_w) || ' do fornecedor ' || cd_cgc_fornecedor_w || ' - ' || nm_fornecedor_w || 
--					' possui itens com entrega atrasada' || chr(13) || chr(10) || 'Itens atrasados: ' || ds_lista_itens_oc_w,1,4000); 
		--end; 
	--end if;	 
	if (length(ds_comunicado_w) > 0) and (length(ds_comunicado_w) < 3900) and (desc_conteudo_ci.count = 0) then 
		begin 
		desc_conteudo_ci[0].ds_informacao := ds_comunicado_w;
		end;
	elsif (length(ds_comunicado_w) > 0) and (length(ds_comunicado_w) < 3900) then 
		begin 
		desc_conteudo_ci[desc_conteudo_ci.count-1].ds_informacao := ds_comunicado_w;
		end;
	elsif (length(ds_comunicado_w) > 0) then 
		begin 
		desc_conteudo_ci[desc_conteudo_ci.count].ds_informacao := ds_comunicado_w;
		ds_comunicado_w := null;	
		end;
	end if;	
	end;
end loop;
close c01;
 
/*Faz este insert porque ele monta uma comunicação para cada usuario. O cursor tem order by nm_usuario*/
 
if (nm_usuario_ww IS NOT NULL AND nm_usuario_ww::text <> '') then 
	begin 
	for i in 0..desc_conteudo_ci.count-1 loop 
		begin 
		select nextval('comunic_interna_seq') 
		into STRICT nr_sequencia_w 
		;
		insert into comunic_interna( 
			dt_comunicado, 
			ds_titulo, 
			ds_comunicado, 
			nm_usuario, 
			dt_atualizacao, 
			ie_geral, 
			nm_usuario_destino, 
			nr_sequencia, 
			ie_gerencial, 
			nr_seq_classif, 
			dt_liberacao) 
		values (clock_timestamp() + interval '1 days'/86400, 
			ds_titulo_w, 
			desc_conteudo_ci[i].ds_informacao, 
			/*Atraso*/
 
			wheb_mensagem_pck.get_texto(297617), 
			clock_timestamp(), 
			'N', 
			nm_usuario_ww || ',', 
			nr_sequencia_w, 
			'N', 
			nr_seq_classif_w, 
			clock_timestamp());
		end;
	end loop;
	end;
end if;
 
/*Cursor 2 para enviar a comunicação interna para os solicitantes da ordem de compra. 
Só envia para o solicitante se o parâmetro de compras estiver marcado e se ele ainda não recebeu a comunicação como sendo comprador nas rotina acima*/
 
 
ds_titulo_w		:= wheb_mensagem_pck.get_texto(297616);/*'Fornecedores com OC em Atraso */
ds_comunicado_w		:= '';
nm_usuario_ww		:= '';
nm_fornecedor_ww	:= '';
nr_ordem_compra_w	:= '';
cd_cgc_fornecedor_w	:= '';
 
open c02;
loop 
fetch c02 into 
	nr_ordem_compra_w, 
	nm_fornecedor_w, 
	nm_usuario_w, 
	cd_cgc_fornecedor_w;
EXIT WHEN NOT FOUND; /* apply on c02 */
	begin 
	if (coalesce(nm_usuario_ww::text, '') = '') then 
		nm_usuario_ww		:= nm_usuario_w;
	end if;
	if (nm_usuario_w <> nm_usuario_ww) then 
		begin 
		select nextval('comunic_interna_seq') 
		into STRICT nr_sequencia_w 
		;
		insert into comunic_interna( 
			dt_comunicado, 
			ds_titulo, 
			ds_comunicado, 
			nm_usuario, 
			dt_atualizacao, 
			ie_geral, 
			nm_usuario_destino, 
			nr_sequencia, 
			ie_gerencial, 
			nr_seq_classif, 
			dt_liberacao) 
		values (clock_timestamp() + interval '1 days'/86400, 
			ds_titulo_w, 
			ds_comunicado_w, 
			/*'Atraso'*/
 
			wheb_mensagem_pck.get_texto(297617), 
			clock_timestamp(), 
			'N', 
			nm_usuario_ww || ',', 
			nr_sequencia_w, 
			'N', 
			nr_seq_classif_w, 
			clock_timestamp());
		ds_comunicado_w	:= '';
		nm_usuario_ww		:= nm_usuario_w;
		end;
	end if;
	if (length(coalesce(ds_comunicado_w,'A')) < 3900) then 
		begin 
		if (nm_fornecedor_w <> coalesce(nm_fornecedor_ww,'A')) then 
			begin 
			ds_comunicado_w	:= substr(ds_comunicado_w || chr(13) || chr(10) || 
						nm_fornecedor_w || chr(13) || chr(10),1,4000);
			nm_fornecedor_ww	:= nm_fornecedor_w;
			end;
		end if;
		 
		if (ie_lista_mat_aviso_chegada_w = 'S') then 
		 
			ds_lista_itens_oc_w := null;
			cd_material_w := null;
			ds_material_w := '';
			dt_prevista_entrega_w := null;
			open C04;
			loop 
			fetch C04 into	 
				cd_material_w, 
				ds_material_w, 
				dt_prevista_entrega_w;
			EXIT WHEN NOT FOUND; /* apply on C04 */
				begin 
				ds_lista_itens_oc_w := substr(ds_lista_itens_oc_w || to_char(cd_material_w) || '-' || ds_material_w || '-' || wheb_mensagem_pck.get_texto(297618) || to_char(dt_prevista_entrega_w) || chr(13) || chr(10) || '		',1,4000);			
				end;
			end loop;
			close C04;
			 
			ds_comunicado_w := substr(ds_comunicado_w || chr(13) || chr(10) || WHEB_MENSAGEM_PCK.get_texto(289031) || ' ' || to_char(nr_ordem_compra_w) || ' ' || WHEB_MENSAGEM_PCK.get_texto(289032) || cd_cgc_fornecedor_w || ' - ' || nm_fornecedor_w || ' ' || 
						WHEB_MENSAGEM_PCK.get_texto(289033) || chr(13) || chr(10) || WHEB_MENSAGEM_PCK.get_texto(289034) || ds_lista_itens_oc_w,1,4000);
 
		elsif (ie_lista_mat_aviso_chegada_w = 'N') then 
			ds_comunicado_w	:= substr(ds_comunicado_w || ' ' || to_char(nr_ordem_compra_w) || ';',1,4000);				
		end if; --if do parametro 
		end;
	end if;
	end;
end loop;
close c02;
 
/*Faz este insert porque ele monta uma comunicação para cada usuario. O cursor tem order by nm_usuario*/
 
if (ds_comunicado_w IS NOT NULL AND ds_comunicado_w::text <> '') and (nm_usuario_ww IS NOT NULL AND nm_usuario_ww::text <> '') then 
	begin 
	select nextval('comunic_interna_seq') 
	into STRICT nr_sequencia_w 
	;
	insert into comunic_interna( 
		dt_comunicado, 
		ds_titulo, 
		ds_comunicado, 
		nm_usuario, 
		dt_atualizacao, 
		ie_geral, 
		nm_usuario_destino, 
		nr_sequencia, 
		ie_gerencial, 
		nr_seq_classif, 
		dt_liberacao) 
	values (clock_timestamp() + interval '1 days'/86400, 
		ds_titulo_w, 
		ds_comunicado_w, 
		/*'Atraso'*/
 
		wheb_mensagem_pck.get_texto(297617), 
		clock_timestamp(), 
		'N', 
		nm_usuario_ww || ',', 
		nr_sequencia_w, 
		'N', 
		nr_seq_classif_w, 
		clock_timestamp());
	end;
end if;	
commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE avisar_atraso_material (dt_parametro_p timestamp) FROM PUBLIC;

