-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_lote_nf_mens ( nr_seq_lote_p bigint, nm_usuario_p text, ie_acao_p text) AS $body$
DECLARE

 
dt_inicial_w		timestamp;
dt_final_w		timestamp;
nr_seq_mensalidade_w	bigint;
nr_titulo_w		bigint;
dt_vencimento_w		timestamp;
nm_pagador_w		varchar(80);
dt_referencia_mens_w	varchar(80);
vl_mensalidade_w	double precision;
nr_seq_contrato_w	pls_contrato.nr_sequencia%type;
nr_contrato_w		numeric(20);

c01 CURSOR FOR 
	SELECT	a.nr_sequencia, 
		a.dt_referencia, 
		a.vl_mensalidade, 
		obter_nome_pf_pj(b.cd_pessoa_fisica,b.cd_cgc), 
		b.nr_titulo, 
		a.dt_vencimento, 
		d.nr_contrato 
	from	pls_contrato d, 
		pls_contrato_pagador c, 
		titulo_receber b, 
		pls_mensalidade a 
	where	a.nr_sequencia		= b.nr_seq_mensalidade 
	and	a.nr_seq_pagador	= c.nr_sequencia 
	and	c.nr_seq_contrato	= d.nr_sequencia 
	and	coalesce(b.nr_seq_nf_saida::text, '') = '' 
	and	a.dt_referencia	between dt_inicial_w and fim_dia(dt_final_w) 
	and	coalesce(a.ie_cancelamento::text, '') = '' 
	and	((d.nr_sequencia = nr_seq_contrato_w) or (coalesce(nr_seq_contrato_w::text, '') = '')) 
	--and	b.cd_pessoa_fisica is not null 
	order by 
		b.nr_titulo;


BEGIN 
 
if (nr_seq_lote_p IS NOT NULL AND nr_seq_lote_p::text <> '') then 
	if (ie_acao_p = 'D') then 
		delete	from pls_lote_nf_mens_item 
		where	nr_seq_lote	= nr_seq_lote_p 
		and	ie_tipo_inclusao = 'A';
		 
		delete	from pls_lote_nf_mens_exclusao 
		where	nr_seq_lote	= nr_seq_lote_p;
		 
		update	pls_lote_nf_mensalidade 
		set	dt_geracao_lote	 = NULL, 
			nm_usuario	= nm_usuario_p, 
			dt_atualizacao	= clock_timestamp() 
		where	nr_sequencia	= nr_seq_lote_p;
	else 
		select	max(dt_inicial), 
			max(dt_final), 
			max(nr_seq_contrato) 
		into STRICT	dt_inicial_w, 
			dt_final_w, 
			nr_seq_contrato_w 
		from	pls_lote_nf_mensalidade a 
		where	a.nr_sequencia	= nr_seq_lote_p;
		 
		open c01;
		loop 
		fetch c01 into 
			nr_seq_mensalidade_w, 
			dt_referencia_mens_w, 
			vl_mensalidade_w, 
			nm_pagador_w, 
			nr_titulo_w, 
			dt_vencimento_w, 
			nr_contrato_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			begin 
			 
			insert into pls_lote_nf_mens_item(nr_sequencia, 
				nm_usuario, 
				dt_atualizacao, 
				nm_usuario_nrec, 
				dt_atualizacao_nrec, 
				nr_seq_lote, 
				nr_seq_mensalidade, 
				ie_tipo_inclusao, 
				nr_titulo, 
				dt_referencia, 
				dt_vencimento, 
				ds_pessoa, 
				vl_mensalidade, 
				ds_tipo_inclusao, 
				nr_contrato) 
			values (nextval('pls_lote_nf_mens_item_seq'), 
				nm_usuario_p, 
				clock_timestamp(), 
				nm_usuario_p, 
				clock_timestamp(), 
				nr_seq_lote_p, 
				nr_seq_mensalidade_w, 
				'A', 
				nr_titulo_w, 
				dt_referencia_mens_w, 
				dt_vencimento_w, 
				nm_pagador_w, 
				vl_mensalidade_w, 
				'Autom√°tica', 
				nr_contrato_w);
			end;
		end loop;
		close c01;
		 
		update	pls_lote_nf_mensalidade 
		set	dt_geracao_lote	= clock_timestamp(), 
			nm_usuario	= nm_usuario_p, 
			dt_atualizacao	= clock_timestamp() 
		where	nr_sequencia	= nr_seq_lote_p;
	end if;
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_lote_nf_mens ( nr_seq_lote_p bigint, nm_usuario_p text, ie_acao_p text) FROM PUBLIC;

