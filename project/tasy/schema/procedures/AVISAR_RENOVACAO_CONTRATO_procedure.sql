-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE avisar_renovacao_contrato ( cd_estabelecimento_p bigint) AS $body$
DECLARE

 
cd_pessoa_responsavel_w		varchar(10);
cd_pessoa_negoc_w		varchar(10);
qt_dias_vencer_w			integer;
nr_sequencia_w			bigint;
nr_seq_classif_w			bigint;
cd_contrato_w			varchar(20);
ds_objeto_contrato_w		varchar(255);
dt_renovacao_w			timestamp;
nm_usuario_w			varchar(255);
nm_usuario_neg_w			varchar(15);
nm_contratado_w			varchar(80);
cd_setor_w			integer;
cd_setor_adicional_w		varchar(255);
ds_email_origem_w		varchar(255);
ds_email_destino_w		varchar(2000);
ds_email_destino_neg_w		varchar(255);
ds_email_w			varchar(2000);
ds_mensagem_w			varchar(2000);
ds_assunto_w			varchar(255);
nm_usuario_compras_w		varchar(15);
cd_estabelecimento_w		smallint;

C01 CURSOR FOR 
SELECT	a.cd_pessoa_resp, 
	a.cd_pessoa_negoc, 
	trunc(max(b.dt_renovacao) - clock_timestamp()), 
	a.cd_contrato, 
	a.ds_objeto_contrato, 
	max(b.dt_renovacao), 
	substr(obter_razao_social(a.cd_cgc_contratado),1,80), 
	a.cd_setor 
from	contrato a, 
	contrato_renovacao b 
where	a.nr_sequencia = b.nr_seq_contrato 
and	(b.nr_seq_contrato IS NOT NULL AND b.nr_seq_contrato::text <> '') 
and	a.ie_situacao = 'A' 
and	a.cd_estabelecimento = cd_estabelecimento_w 
and	trunc(trunc(b.dt_renovacao,'dd') - trunc(clock_timestamp(),'dd')) <= coalesce(qt_dias_aviso_venc,0) 
and	trunc(b.dt_renovacao,'dd') >= trunc(clock_timestamp(),'dd') 
and	(a.cd_pessoa_resp IS NOT NULL AND a.cd_pessoa_resp::text <> '') 
and	coalesce(a.ie_finalizado,'N') = 'N' 
group by	a.cd_pessoa_resp, 
		a.cd_pessoa_negoc, 
		a.cd_contrato, 
		a.ds_objeto_contrato, 
		substr(obter_razao_social(a.cd_cgc_contratado),1,80), 
		a.cd_setor;

c02 CURSOR FOR 
 
SELECT	cd_estabelecimento 
from 	estabelecimento 
where	ie_situacao = 'A' 
and 	cd_estabelecimento_p = 0 

union all
 
SELECT	cd_estabelecimento_p 
 
where	cd_estabelecimento_p > 0;
		
		 

BEGIN 
 
open C02;
loop 
fetch C02 into	 
	cd_estabelecimento_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin 
	 
	open C01;
	loop 
	fetch C01 into 
		cd_pessoa_responsavel_w, 
		cd_pessoa_negoc_w, 
		qt_dias_vencer_w, 
		cd_contrato_w, 
		ds_objeto_contrato_w, 
		dt_renovacao_w, 
		nm_contratado_w, 
		cd_setor_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin 
		 
		 
		begin 
		select	ds_email, 
			substr(obter_usuario_pessoa(coalesce(cd_responsavel_compras,cd_comprador_padrao)),1,15) 
		into STRICT	ds_email_origem_w, 
			nm_usuario_compras_w 
		from	parametro_compras 
		where	cd_estabelecimento = cd_estabelecimento_w;		
		exception 
		when others then 
			ds_email_origem_w:= null;
			nm_usuario_compras_w:= null;
		end;
		 
		select	coalesce(max(nm_usuario),'X'), 
			coalesce(max(ds_email),'X') 
		into STRICT	nm_usuario_w, 
			ds_email_destino_w 
		from	usuario 
		where	cd_pessoa_fisica = cd_pessoa_responsavel_w;
		 
		select	coalesce(max(nm_usuario),'X'), 
			coalesce(max(ds_email),'X') 
		into STRICT	nm_usuario_neg_w, 
			ds_email_destino_neg_w 
		from	usuario 
		where	cd_pessoa_fisica = cd_pessoa_negoc_w;
		if (nm_usuario_neg_w IS NOT NULL AND nm_usuario_neg_w::text <> '') then 
			nm_usuario_w		:= nm_usuario_w || ',' || nm_usuario_neg_w;
		end if;
		 
		if (ds_email_destino_neg_w <> 'X') then 
			ds_email_destino_w		:= ds_email_destino_w || ',' || ds_email_destino_neg_w;
		end if;	
		 
		if (cd_setor_w IS NOT NULL AND cd_setor_w::text <> '') then 
			cd_setor_adicional_w	:= cd_setor_w || ', ';
		end if;
	 
	 
		if (nm_usuario_w <> 'X') then 
			begin 
			select	nextval('comunic_interna_seq') 
			into STRICT	nr_sequencia_w 
			;	
	 
			select	obter_classif_comunic('F') 
			into STRICT	nr_seq_classif_w 
			;
	 
			insert into comunic_interna( 
				dt_comunicado, 
				ds_titulo, 
				ds_comunicado, 
				nm_usuario, 
				dt_atualizacao, 
				ie_geral, 
				nm_usuario_destino, 
				nr_sequencia, 
				ie_gerencial, 
				nr_seq_classif, 
				dt_liberacao, 
				ds_setor_adicional) 
			values (clock_timestamp() + interval '1 days'/86400, 
				wheb_mensagem_pck.get_Texto(795418), /*'Aviso de renovação de contrato'*/
				 
				wheb_mensagem_pck.get_texto(795421,'CD_CONTRATO_W='|| CD_CONTRATO_W ||';DS_OBJETO_CONTRATO_W='|| DS_OBJETO_CONTRATO_W ||';NM_CONTRATADO_W='|| NM_CONTRATADO_W ||';DT_RENOVACAO_W='|| DT_RENOVACAO_W ||';QT_DIAS_VENCER_W='|| QT_DIAS_VENCER_W), 
				' Aviso_Tasy', 
				clock_timestamp(), 
				'N', 
				nm_usuario_w || ',', 
				nr_sequencia_w, 
				'N', 
				nr_seq_classif_w, 
				clock_timestamp(), 
				cd_setor_adicional_w);
			end;							
		end if;
				 
		ds_assunto_w := null;
		ds_mensagem_w := null;
		 
		ds_assunto_w := wheb_mensagem_pck.get_Texto(795418); /*'Aviso de renovação de contrato'*/
		ds_mensagem_w := wheb_mensagem_pck.get_texto(795421,'CD_CONTRATO_W='|| CD_CONTRATO_W ||';DS_OBJETO_CONTRATO_W='|| DS_OBJETO_CONTRATO_W ||';NM_CONTRATADO_W='|| NM_CONTRATADO_W ||';DT_RENOVACAO_W='|| DT_RENOVACAO_W ||';QT_DIAS_VENCER_W='|| QT_DIAS_VENCER_W);
			 
		if (ds_mensagem_w IS NOT NULL AND ds_mensagem_w::text <> '') and (ds_email_origem_w IS NOT NULL AND ds_email_origem_w::text <> '') and (ds_email_destino_w IS NOT NULL AND ds_email_destino_w::text <> '') and (nm_usuario_compras_w IS NOT NULL AND nm_usuario_compras_w::text <> '') then				 
			begin	 
	 
				CALL enviar_email(ds_assunto_w,ds_mensagem_w,ds_email_origem_w,ds_email_destino_w,nm_usuario_compras_w,'M');
			exception when others then 
				ds_assunto_w := '';
			end;
		end if;		
		 
		end;
	end loop;
	close c01;	
	end;
end loop;
close C02;
	 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE avisar_renovacao_contrato ( cd_estabelecimento_p bigint) FROM PUBLIC;

