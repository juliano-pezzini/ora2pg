-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_valor_sca_segurado ( nr_seq_segurado_p bigint, cd_motivo_reajuste_p text, dt_adesao_p timestamp, nm_usuario_p text, cd_estabelecimento_p bigint, nr_seq_sca_vinculo_p pls_sca_vinculo.nr_sequencia%type default null) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Gerar os valores de SCA conforme a titularidade dos beneficiarios e as faixas
etarias pertencentes a tabela de preco
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[ X ]  Objetos do dicionario [  ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao:
	Se ha faixa etaria para a idade do beneficiario
	Se a titularidade do beneficiario esta de acordo
-------------------------------------------------------------------------------------------------------------------

Referencias:
	PLS_APLICAR_SCA_BENEFICIARIOS
	PLS_CRIAR_CONTRATOS_BENEF_PROT
	PLS_GERAR_VALOR_SEGURADO
	PLS_LIBERAR_VINCULO_SCA
	PTU_GERAR_PLANO_AGREGADO
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
cd_pessoa_fisica_w		pessoa_fisica.cd_pessoa_fisica%type;
ie_origem_sca_w			varchar(3)	:= null;
ie_grau_parentesco_w		varchar(10);
ie_titularidade_w		varchar(1);
ie_geracao_valores_sca_w	pls_sca_vinculo.ie_geracao_valores%type;
vl_preco_sca_w			pls_plano_preco.vl_preco_atual%type	:= 0;
nr_seq_plano_w			pls_plano.nr_sequencia%type;
nr_seq_tabela_w			pls_tabela_preco.nr_sequencia%type;
nr_seq_plano_preco_w		pls_plano_preco.nr_sequencia%type;
nr_seq_contrato_sca_w		pls_contrato.nr_sequencia%type;
nr_seq_segurado_sca_w		pls_segurado.nr_sequencia%type;
nr_seq_vinculo_sca_w		pls_sca_vinculo.nr_sequencia%type;
qt_idade_w			bigint;
dt_adesao_w			timestamp;
qt_plano_preco_w		integer;
ds_observacao_w			pls_segurado_preco_origem.ds_observacao%type;
ie_preco_vidas_contrato_w	pls_tabela_preco.ie_preco_vidas_contrato%type;
ie_calculo_vidas_w		pls_tabela_preco.ie_calculo_vidas%type;
nr_seq_tabela_origem_w		pls_sca_vinculo.nr_seq_tabela_origem%type;
dt_reajuste_w			timestamp;
vl_anterior_w			double precision;
vl_atual_w			double precision;
nr_seq_reaj_preco_w		pls_reajuste_preco.nr_sequencia%type;

C01 CURSOR FOR
	SELECT	a.nr_seq_plano,
		a.nr_seq_tabela,
		a.nr_seq_contrato,
		a.nr_seq_segurado,
		a.ie_geracao_valores,
		CASE WHEN cd_motivo_reajuste_p='T' THEN  dt_adesao_p  ELSE a.dt_inicio_vigencia END  dt_adesao,
		a.nr_sequencia,
		a.nr_seq_tabela_origem
	from	pls_sca_vinculo	a
	where	a.nr_seq_segurado	= coalesce(nr_seq_segurado_p, 0)
	and	((coalesce(nr_seq_sca_vinculo_p::text, '') = '') or (a.nr_sequencia = nr_seq_sca_vinculo_p))
	and	coalesce(a.ds_consistencia::text, '') = ''
	and (not exists (SELECT	1
				from	pls_segurado_preco_origem x
				where	a.nr_seq_plano		= x.nr_seq_plano
				and	a.nr_seq_tabela		= x.nr_seq_tabela
				and	a.nr_seq_segurado	= x.nr_seq_segurado) or coalesce(cd_motivo_reajuste_p, 'C') in ('T','R'));

C02 CURSOR FOR
	SELECT	nr_sequencia,
		coalesce(vl_preco_atual, 0)
	from	pls_plano_preco
	where	qt_idade_w	>= qt_idade_inicial
	and	qt_idade_w	<= qt_idade_final
	and	nr_seq_tabela	= nr_seq_tabela_w
	and	coalesce(ie_grau_titularidade, ie_grau_parentesco_w)	= ie_grau_parentesco_w
	order by
		coalesce(ie_grau_titularidade, ' ');
		

BEGIN

select	cd_pessoa_fisica,
	CASE WHEN coalesce(nr_seq_titular::text, '') = '' THEN  'T'  ELSE 'D' END
into STRICT	cd_pessoa_fisica_w,
	ie_titularidade_w
from	pls_segurado
where	nr_sequencia	= nr_seq_segurado_p;

qt_idade_w		:= substr(obter_idade_pf(cd_pessoa_fisica_w, clock_timestamp(), 'A'), 1 , 10);
ie_grau_parentesco_w	:= coalesce(substr(pls_obter_garu_dependencia_seg(nr_seq_segurado_p, 'C'), 1, 2), 'X');

open C01;
loop
fetch C01 into
	nr_seq_plano_w,
	nr_seq_tabela_w,
	nr_seq_contrato_sca_w,
	nr_seq_segurado_sca_w,
	ie_geracao_valores_sca_w,
	dt_adesao_w,
	nr_seq_vinculo_sca_w,
	nr_seq_tabela_origem_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	nr_seq_plano_preco_w	:= 0;
	vl_preco_sca_w		:= 0;
	ie_origem_sca_w		:= null;
	ds_observacao_w		:= null;
	vl_anterior_w		:= 0;
	vl_atual_w		:= 0;

	select	max(a.nr_sequencia)		
	into STRICT	nr_seq_reaj_preco_w
	from	pls_reajuste_preco a,
		pls_plano_preco b
	where	a.nr_seq_preco = b.nr_sequencia
	and	b.nr_seq_tabela = nr_seq_tabela_origem_w
	and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
	and	dt_adesao_w < a.dt_reajuste;
	
	if (nr_seq_reaj_preco_w IS NOT NULL AND nr_seq_reaj_preco_w::text <> '') then
		select	max(vl_base),
			max(vl_reajustado),
			max(dt_reajuste)
		into STRICT	vl_anterior_w,
			vl_atual_w,
			dt_reajuste_w
		from	pls_reajuste_preco
		where	nr_sequencia = nr_seq_reaj_preco_w;
	end if;
	
	begin
	select	coalesce(ie_preco_vidas_contrato,'N'),
		coalesce(ie_calculo_vidas,'A')
	into STRICT	ie_preco_vidas_contrato_w,
		ie_calculo_vidas_w
	from	pls_tabela_preco
	where	nr_sequencia = nr_seq_tabela_w;
	exception
	when others then
		ie_preco_vidas_contrato_w := 'N';
		ie_calculo_vidas_w	  := 'A';
	end;
		
	if (ie_preco_vidas_contrato_w = 'S') then
		CALL pls_recalcular_preco_sca(nr_seq_segurado_p, 'C', cd_estabelecimento_p, clock_timestamp(), nr_seq_vinculo_sca_w, nm_usuario_p);
	else
		open C02;
		loop
		fetch C02 into
			nr_seq_plano_preco_w,
			vl_preco_sca_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
		end loop;
		close C02;
		
		if (coalesce(nr_seq_plano_preco_w, 0) <> 0) then
			if (coalesce(nr_seq_contrato_sca_w, 0) <> 0) then
				ie_origem_sca_w	:= 'SC';
			elsif (coalesce(nr_seq_segurado_sca_w, 0) <> 0) then
				ie_origem_sca_w	:= 'SB';
			end if;
			
			if (ie_geracao_valores_sca_w <> 'B') and (ie_geracao_valores_sca_w <> ie_titularidade_w) then
				vl_preco_sca_w	:= 0;
				vl_anterior_w	:= 0;
				vl_atual_w	:= 0;
				ds_observacao_w	:= 'Valor zerado de acordo com a titularidade do ' || lower(expressao_pck.obter_desc_expressao(284292));
			end if;

			if (coalesce(vl_anterior_w,0) > 0) then
				vl_preco_sca_w := vl_anterior_w;
			end if;
			
			
			begin
			insert into pls_segurado_preco_origem(nr_sequencia,
				cd_estabelecimento,
				dt_atualizacao,
				nm_usuario,
				nr_seq_segurado,
				nr_seq_plano,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				vl_preco_atual,
				nr_seq_tabela,
				ie_origem_preco,
				dt_liberacao,
				cd_motivo_reajuste,
				dt_reajuste,
				vl_preco_ant,
				qt_idade,
				nm_usuario_liberacao,
				nr_seq_preco,
				nr_seq_vinculo_sca,
				ds_observacao)
			values (nextval('pls_segurado_preco_origem_seq'),
				cd_estabelecimento_p,
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_segurado_p,
				nr_seq_plano_w,
				clock_timestamp(),
				nm_usuario_p,
				vl_preco_sca_w,
				nr_seq_tabela_w,
				ie_origem_sca_w,
				clock_timestamp(),
				coalesce(cd_motivo_reajuste_p, 'C'),
				dt_adesao_w,
				0,
				qt_idade_w,
				nm_usuario_p,
				nr_seq_plano_preco_w,
				nr_seq_vinculo_sca_w,
				ds_observacao_w);
				
			if (coalesce(vl_atual_w,0) > 0) then
				insert into pls_segurado_preco_origem(nr_sequencia,
					cd_estabelecimento,
					dt_atualizacao,
					nm_usuario,
					nr_seq_segurado,
					nr_seq_plano,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					vl_preco_atual,
					nr_seq_tabela,
					ie_origem_preco,
					dt_liberacao,
					cd_motivo_reajuste,
					dt_reajuste,
					vl_preco_ant,
					qt_idade,
					nm_usuario_liberacao,
					nr_seq_preco,
					nr_seq_vinculo_sca,
					ds_observacao)
				values (nextval('pls_segurado_preco_origem_seq'),
					cd_estabelecimento_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_segurado_p,
					nr_seq_plano_w,
					clock_timestamp(),
					nm_usuario_p,
					vl_atual_w,
					nr_seq_tabela_w,
					ie_origem_sca_w,
					clock_timestamp(),
					'I',
					dt_reajuste_w,
					vl_anterior_w,
					qt_idade_w,
					nm_usuario_p,
					nr_seq_plano_preco_w,
					nr_seq_vinculo_sca_w,
					ds_observacao_w);
			end if;
			exception
			when others then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(187350);
			end;
		end if;
	end if;
	end;
end loop;
close C01;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_valor_sca_segurado ( nr_seq_segurado_p bigint, cd_motivo_reajuste_p text, dt_adesao_p timestamp, nm_usuario_p text, cd_estabelecimento_p bigint, nr_seq_sca_vinculo_p pls_sca_vinculo.nr_sequencia%type default null) FROM PUBLIC;

