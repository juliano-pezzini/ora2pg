-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ptu_gerar_pls_conta ( nr_seq_fatura_p bigint, nr_seq_protocolo_p bigint default null, cd_estabelecimento_p bigint DEFAULT NULL, nm_usuario_p text DEFAULT NULL) AS $body$
DECLARE


cd_cid_w			varchar(60);
nm_prestador_w			ptu_nota_servico.nm_prestador%type;
nm_prestador_req_w		varchar(40);
nm_beneficiario_w		varchar(25);
cd_usuario_plano_w		varchar(4000);
nr_cgc_cpf_w			varchar(14);
nr_cgc_cpf_req_w		varchar(14);
cd_usuario_plano_imp_w		pls_conta.cd_usuario_plano_imp%type;
cd_unimed_w			varchar(10);
cd_cooperativa_w		varchar(10);
cd_pessoa_fisica_exec_w		varchar(10);
cd_pessoa_fisica_solic_w	varchar(10);
ie_tipo_atendimento_w		varchar(2);
ie_tipo_guia_w			varchar(2);
ie_var_recebimento_w		varchar(2)	:= 'N';
cd_motivo_saida_w		varchar(2);
cd_excecao_w			varchar(1);
ie_paciente_w			varchar(1);
ie_tipo_saida_spdat_w		varchar(1);
ie_tipo_pessoa_prestador_w	varchar(1);
ie_ind_acidente_w		varchar(1);
nr_nota_w			ptu_nota_cobranca.nr_nota%type;
nr_guia_principal_w		ptu_nota_cobranca.nr_guia_principal%type;
nr_seq_cobranca_w		bigint;
nr_seq_conta_w			bigint;
nr_seq_prestador_w		bigint;
nr_seq_prestador_exec_w		bigint;
nr_seq_prestador_solic_w	bigint;
qt_internacao_w			bigint;
qt_cid_w			bigint;
nr_autorizacao_w		varchar(20);
nr_seq_clinica_w		bigint	:= null;
nr_seq_saida_int_w		bigint	:= null;
nr_seq_tipo_acomodacao_w	bigint	:= null;
nr_lote_w			integer;
cd_prestador_w			integer;
cd_prestador_req_w		integer;
cd_unimed_pre_req_w		smallint;
ie_carater_atendimento_w	varchar(1);
ie_tipo_internacao_w		smallint;
dt_atendimento_w		timestamp;
dt_atendimento_ww		timestamp;
dt_atendimento_www		timestamp;
dt_internacao_w			timestamp;
dt_alta_w			timestamp;
nr_seq_tipo_atendimento_w	bigint := null;
vl_material_imp_w		pls_conta_mat.vl_material_imp%type;
vl_procedimento_imp_w		pls_conta_proc.vl_procedimento_imp%type;
ie_tipo_guia_tiss_w		pls_conta.ie_tipo_guia%type;
ie_tipo_acomodacao_w		varchar(2);
ds_complemento_w		pls_conta.ds_indicacao_clinica%type;
ie_tipo_complemento_w		smallint;
ie_tipo_faturamento_w		varchar(1);
ds_indicacao_clinica_imp_w	varchar(500);
ds_observacao_imp_w		varchar(4000);
qt_nasc_vivos_w			ptu_nota_hospitalar.qt_nasc_vivos%type;
qt_nasc_mortos_w		ptu_nota_hospitalar.qt_nasc_mortos%type;
qt_nasc_vivos_pre_w		ptu_nota_hospitalar.qt_nasc_vivos_pre%type;
qt_obito_precoce_w		ptu_nota_hospitalar.qt_obito_precoce%type;
qt_obito_tardio_w		ptu_nota_hospitalar.qt_obito_tardio%type;
ie_obito_mulher_w		ptu_nota_hospitalar.ie_obito_mulher%type;
nr_declara_obito_w		ptu_nota_hospitalar.nr_declara_obito%type;
ie_int_gestacao_w		ptu_nota_hospitalar.ie_int_gestacao%type;
ie_int_aborto_w			ptu_nota_hospitalar.ie_int_aborto%type;
ie_int_transtorno_w		ptu_nota_hospitalar.ie_int_transtorno%type;
ie_int_puerperio_w		ptu_nota_hospitalar.ie_int_puerperio%type;
ie_int_recem_nascido_w		ptu_nota_hospitalar.ie_int_recem_nascido%type;
ie_int_neonatal_w		ptu_nota_hospitalar.ie_int_neonatal%type;
ie_int_baixo_peso_w		ptu_nota_hospitalar.ie_int_baixo_peso%type;
ie_int_parto_cesarea_w		ptu_nota_hospitalar.ie_int_parto_cesarea%type;
ie_int_parto_normal_w		ptu_nota_hospitalar.ie_int_parto_normal%type;
nr_seq_nota_hosp_w		ptu_nota_hospitalar.nr_sequencia%type;
cd_cid_obito_fatura_w		ptu_nota_hospitalar.cd_cid_obito%type;
tp_nota_w			ptu_nota_cobranca.tp_nota%type;
nr_seq_prest_inter_w		ptu_nota_cobranca.nr_seq_prest_inter%type;
id_rn_w				ptu_nota_cobranca.id_rn%type;
ie_tipo_consulta_w		pls_conta.ie_tipo_consulta%type;
tp_consulta_w			ptu_nota_cobranca.tp_consulta%type;
nr_versao_transacao_w		ptu_fatura.nr_versao_transacao%type;
ie_reg_internacao_w		ptu_nota_hospitalar.reg_internacao%type;
dt_autoriz_w			ptu_nota_servico.dt_autoriz%type;
tp_ind_acidente_w		ptu_nota_cobranca.tp_ind_acidente%type;
ie_tipo_faturamento_ww		pls_conta.ie_tipo_faturamento%type;
nr_seq_clinica_ww		pls_clinica.nr_sequencia%type;
nm_prest_exec_w			ptu_nota_cobranca.nm_prest_exec%type;
nr_guia_tiss_operadora_w	ptu_nota_cobranca.nr_guia_tiss_operadora%type;
nr_guia_tiss_prestador_w	ptu_nota_cobranca.nr_guia_tiss_prestador%type;
nr_guia_tiss_principal_w	ptu_nota_cobranca.nr_guia_tiss_principal%type;
tp_rede_min_w			pls_conta.tp_rede_min%type;
ie_cobertura_especial_w   pls_conta.ie_cobertura_especial%type;
ie_regime_atendimento_w   pls_conta.ie_regime_atendimento%type;
ie_saude_ocupacional_w    pls_conta.ie_saude_ocupacional%type;
C01 CURSOR FOR
	SELECT	nr_sequencia,
		nr_nota,
		pls_obter_segurado_carteira(lpad(to_char(cd_unimed),4,'0')||cd_usuario_plano,cd_estabelecimento_p),
		dt_atendimento,
		ie_carater_atendimento,
		ie_tipo_saida_spdat,
		ie_tipo_atendimento,
		cd_cid,
		nr_guia_principal,
		cd_usuario_plano,
		dt_alta,
		dt_internacao,
		motivo_encerram,
		tp_nota,
		nr_seq_prest_inter,
		id_rn,
		tp_consulta,
		tp_ind_acidente,
		cd_excecao,
		nm_prest_exec,
		nr_guia_tiss_operadora,
		nr_guia_tiss_prestador,
		nr_guia_tiss_principal,
		tipo_rede_min,
		ie_cobertura_especial,
		ie_regime_atendimento,
		ie_saude_ocupacional
	from	ptu_nota_cobranca
	where	nr_seq_fatura	= nr_seq_fatura_p;

-- Agora e feito um insert para cada Nota Cobranca, este cursor ira buscar as informacoes do prestador
C02 CURSOR FOR
	SELECT	nr_cgc_cpf_req,
		cd_prestador_req,
		nm_prestador_requisitante,
		nr_cgc_cpf,
		cd_prestador,
		nm_prestador
	from	ptu_nota_servico
	where	nr_seq_nota_cobr	= nr_seq_cobranca_w
	group by
		nr_cgc_cpf_req,
		cd_prestador_req,
		nm_prestador_requisitante,
		nr_cgc_cpf,
		cd_prestador,
		nm_prestador;
-- Complemento
C03 CURSOR FOR
	SELECT	ds_complemento,
		ie_tipo_complemento
	from	ptu_nota_complemento
	where	nr_seq_nota_cobr = nr_seq_cobranca_w;

C04 CURSOR(nr_seq_nota_cobr_p	ptu_nota_cobranca.nr_sequencia%type) FOR
	SELECT	dt_internacao,
		dt_alta,
		ie_tipo_internacao,
		cd_motivo_saida,
		ie_ind_acidente,
		ie_tipo_acomodacao,
		qt_nasc_vivos,
		qt_nasc_mortos,
		qt_nasc_vivos_pre,
		qt_obito_precoce,
		qt_obito_tardio,
		ie_obito_mulher,
		nr_declara_obito,
		ie_int_gestacao,
		ie_int_aborto,
		ie_int_transtorno,
		ie_int_puerperio,
		ie_int_recem_nascido,
		ie_int_neonatal,
		ie_int_baixo_peso,
		ie_int_parto_cesarea,
		ie_int_parto_normal,
		nr_sequencia nr_seq_nota_hosp,
		cd_cid_obito,
		ie_faturamento,
		reg_internacao
	from	ptu_nota_hospitalar
	where	nr_seq_nota_cobr	= nr_seq_nota_cobr_p;

C05 CURSOR(nr_seq_nota_hosp_p	ptu_nota_hospitalar.nr_sequencia%type) FOR
	SELECT	a.cd_cid_obito,
		a.nr_declara_obito,
		a.nr_declara_vivo,
		a.nr_linha,
		a.ie_recem_nascido
	from	ptu_nota_hosp_compl	a
	where	a.nr_seq_nota_hosp = nr_seq_nota_hosp_p
	and	((a.cd_cid_obito IS NOT NULL AND a.cd_cid_obito::text <> '') or (a.nr_declara_obito IS NOT NULL AND a.nr_declara_obito::text <> '') or (a.nr_declara_vivo IS NOT NULL AND a.nr_declara_vivo::text <> '') or (a.ie_recem_nascido IS NOT NULL AND a.ie_recem_nascido::text <> ''));

C06 CURSOR( nr_seq_nota_cobranca_pw  ptu_nota_cobranca.nr_sequencia%type) FOR
	SELECT 	cd_cid cd_cid, 'CID_1' ie_classificacao
	from 	ptu_nota_cobranca where nr_sequencia = nr_seq_nota_cobranca_pw
	
union all

	SELECT 	cd_cid_2 cd_cid, 'CID_2' ie_classificacao
	from ptu_nota_cobranca where nr_sequencia = nr_seq_nota_cobranca_pw
	
union all

	select 	cd_cid_3 cd_cid, 'CID_3' ie_classificacao
	from ptu_nota_cobranca where nr_sequencia = nr_seq_nota_cobranca_pw
	
union all

	select 	cd_cid_4 cd_cid, 'CID_4' ie_classificacao
	from ptu_nota_cobranca where nr_sequencia = nr_seq_nota_cobranca_pw;

BEGIN
ie_var_recebimento_w	:=  obter_valor_param_usuario(1293, 21, Obter_Perfil_Ativo, nm_usuario_p, cd_estabelecimento_p);

if (coalesce(ie_var_recebimento_w,'N')	= 'S') then
	select	dt_recebimento_fatura
	into STRICT	dt_atendimento_w
	from	ptu_fatura
	where	nr_sequencia	= nr_seq_fatura_p;
end if;

select	cd_unimed_destino,
	nr_versao_transacao
into STRICT	cd_cooperativa_w,
	nr_versao_transacao_w
from	ptu_fatura
where	nr_sequencia = nr_seq_fatura_p;

CALL gravar_processo_longo('Geracao das contas','PTU_GERAR_PLS_CONTA',0);

open C01;
loop
fetch C01 into
	nr_seq_cobranca_w,
	nr_nota_w,
	cd_usuario_plano_w,
	dt_atendimento_ww,
	ie_carater_atendimento_w,
	ie_tipo_saida_spdat_w,
	ie_tipo_atendimento_w,
	cd_cid_w,
	nr_guia_principal_w,
	cd_usuario_plano_imp_w,
	dt_alta_w,
	dt_internacao_w,
	cd_motivo_saida_w,
	tp_nota_w,
	nr_seq_prest_inter_w,
	id_rn_w,
	tp_consulta_w,
	tp_ind_acidente_w,
	cd_excecao_w,
	nm_prest_exec_w,
	nr_guia_tiss_operadora_w,
	nr_guia_tiss_prestador_w,
	nr_guia_tiss_principal_w,
	tp_rede_min_w,
	ie_cobertura_especial_w,
	ie_regime_atendimento_w,
	ie_saude_ocupacional_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	update	ptu_nota_cobranca
	set	dt_inicio_geracao_conta = clock_timestamp()
	where	nr_seq_fatura		= nr_seq_fatura_p
	and	nr_sequencia		= nr_seq_cobranca_w;

	ie_tipo_internacao_w		:= null;
	ie_ind_acidente_w		:= null;
	ie_tipo_acomodacao_w		:= null;
	qt_nasc_vivos_w			:= null;
	qt_nasc_mortos_w		:= null;
	qt_nasc_vivos_pre_w		:= null;
	qt_obito_precoce_w		:= null;
	qt_obito_tardio_w		:= null;
	ie_obito_mulher_w		:= null;
	nr_declara_obito_w		:= null;
	ie_int_gestacao_w		:= null;
	ie_int_aborto_w			:= null;
	ie_int_transtorno_w		:= null;
	ie_int_puerperio_w		:= null;
	ie_int_recem_nascido_w		:= null;
	ie_int_neonatal_w		:= null;
	ie_int_baixo_peso_w		:= null;
	ie_int_parto_cesarea_w		:= null;
	ie_int_parto_normal_w		:= null;
	nr_seq_nota_hosp_w		:= null;
	cd_cid_obito_fatura_w		:= null;
	ie_tipo_consulta_w		:= null;
	ie_reg_internacao_w		:= '';

	if (coalesce(ie_tipo_atendimento_w,'X') <> 'X' ) then
		begin
		select	max(nr_sequencia)
		into STRICT	nr_seq_tipo_atendimento_w
		from	pls_tipo_atendimento
		where	cd_estabelecimento	= cd_estabelecimento_p
		and	(cd_tiss)::numeric 	= (ie_tipo_atendimento_w)::numeric;
		end;
	else
		nr_seq_tipo_atendimento_w	:= null;
	end if;

	select	count(1)
	into STRICT	qt_internacao_w
	from	ptu_nota_hospitalar
	where	nr_seq_nota_cobr = nr_seq_cobranca_w;

	if (qt_internacao_w > 0) then
			ie_tipo_guia_w		:= '5';
	else
		if (tp_nota_w	= '1') then
			ie_tipo_guia_w	:= '3';
		elsif (tp_nota_w	= '3') then
			ie_tipo_guia_w	:= '5';
		elsif (tp_nota_w	= '4') then
			ie_tipo_guia_w	:= '6';
		else
			ie_tipo_guia_w	:= '4';
		end if;

		dt_atendimento_www	:= coalesce(dt_atendimento_w,dt_atendimento_ww);
	end if;

	-- Dados da PTU_NOTA_HOSPITALAR -
	for	r_C04_w in C04(nr_seq_cobranca_w) loop
		--tratamento realizado para caso a informacao exista na nota de cobranca porem nao exista na nota hospitalar
		if (r_C04_w.dt_internacao is  not null) then
			dt_internacao_w 		:= r_C04_w.dt_internacao;
		end if;
		if (r_C04_w.dt_alta IS NOT NULL AND r_C04_w.dt_alta::text <> '') then
			dt_alta_w 			:= r_C04_w.dt_alta;
		end if;
		if (r_C04_w.cd_motivo_saida IS NOT NULL AND r_C04_w.cd_motivo_saida::text <> '') then
			cd_motivo_saida_w		:= r_C04_w.cd_motivo_saida;
		end if;
		ie_tipo_internacao_w		:= r_C04_w.ie_tipo_internacao;
		ie_ind_acidente_w		:= r_C04_w.ie_ind_acidente;
		ie_tipo_acomodacao_w		:= r_C04_w.ie_tipo_acomodacao;
		qt_nasc_vivos_w			:= r_C04_w.qt_nasc_vivos;
		qt_nasc_mortos_w		:= r_C04_w.qt_nasc_mortos;
		qt_nasc_vivos_pre_w		:= r_C04_w.qt_nasc_vivos_pre;
		qt_obito_precoce_w		:= r_C04_w.qt_obito_precoce;
		qt_obito_tardio_w		:= r_C04_w.qt_obito_tardio;
		ie_obito_mulher_w		:= r_C04_w.ie_obito_mulher;
		nr_declara_obito_w		:= r_C04_w.nr_declara_obito;
		ie_int_gestacao_w		:= r_C04_w.ie_int_gestacao;
		ie_int_aborto_w			:= r_C04_w.ie_int_aborto;
		ie_int_transtorno_w		:= r_C04_w.ie_int_transtorno;
		ie_int_puerperio_w		:= r_C04_w.ie_int_puerperio;
		ie_int_recem_nascido_w		:= r_C04_w.ie_int_recem_nascido;
		ie_int_neonatal_w		:= r_C04_w.ie_int_neonatal;
		ie_int_baixo_peso_w		:= r_C04_w.ie_int_baixo_peso;
		ie_int_parto_cesarea_w		:= r_C04_w.ie_int_parto_cesarea;
		ie_int_parto_normal_w		:= r_C04_w.ie_int_parto_normal;
		nr_seq_nota_hosp_w		:= r_C04_w.nr_seq_nota_hosp;
		cd_cid_obito_fatura_w		:= r_C04_w.cd_cid_obito;
		ie_tipo_faturamento_w		:= r_C04_w.ie_faturamento;
		ie_reg_internacao_w		:= r_C04_w.reg_internacao;
	end loop; -- C04
	if (ie_tipo_internacao_w IS NOT NULL AND ie_tipo_internacao_w::text <> '') then
		select	max(nr_sequencia)
		into STRICT	nr_seq_clinica_w
		from	pls_clinica
		where	somente_numero(cd_ptu)	= ie_tipo_internacao_w;
	else
		nr_seq_clinica_w	:= null;
	end if;

	if (ie_tipo_acomodacao_w IS NOT NULL AND ie_tipo_acomodacao_w::text <> '') then
		select 	max(nr_sequencia)
		into STRICT	nr_seq_tipo_acomodacao_w
		from	pls_tipo_acomodacao
		where	ie_tipo_acomodacao_ptu = ie_tipo_acomodacao_w;
	else
		nr_seq_tipo_acomodacao_w:= null;
	end if;

	if (cd_motivo_saida_w IS NOT NULL AND cd_motivo_saida_w::text <> '') then
		select	max(nr_sequencia)
		into STRICT	nr_seq_saida_int_w
		from	pls_motivo_saida
		where	somente_numero(cd_ptu)	= cd_motivo_saida_w;
	else
		nr_seq_saida_int_w	:= null;
	end if;

	-- Obter dados prestador
	open C02;
	loop
	fetch C02 into
		nr_cgc_cpf_req_w,
		cd_prestador_req_w,
		nm_prestador_req_w,
		nr_cgc_cpf_w,
		cd_prestador_w,
		nm_prestador_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		null;
		end;
	end loop;
	close C02;

	ds_indicacao_clinica_imp_w := '';
	ds_observacao_imp_w := '';

	-- Complemento
	open C03;
	loop
	fetch C03 into
		ds_complemento_w,
		ie_tipo_complemento_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin
		if (ie_tipo_complemento_w = 1) and (ds_complemento_w IS NOT NULL AND ds_complemento_w::text <> '') then
			ds_indicacao_clinica_imp_w := substr(trim(both ds_indicacao_clinica_imp_w ||' '|| ds_complemento_w),1,500);
		elsif (ie_tipo_complemento_w = 2) and (ds_complemento_w IS NOT NULL AND ds_complemento_w::text <> '') then
			ds_observacao_imp_w := substr(trim(both ds_observacao_imp_w ||' '|| ds_complemento_w),1,4000);
		end if;
		end;
	end loop;
	close C03;

	-- Obter autorizacao para a conta
	select	max(a.nr_autorizacao),
		max(a.dt_autoriz)
	into STRICT	nr_autorizacao_w,
		dt_autoriz_w
	from	ptu_nota_servico a
	where	a.nr_seq_nota_cobr	= nr_seq_cobranca_w;

	if (cd_cooperativa_w IS NOT NULL AND cd_cooperativa_w::text <> '') then
		cd_usuario_plano_imp_w	:= lpad(cd_cooperativa_w,4,'0') || cd_usuario_plano_imp_w;
	end if;

	ie_tipo_faturamento_w	:= pls_obter_tipo_fat_prod_med(ie_tipo_faturamento_w);

	-- Se nao for enviado tipo de faturamento e for um complemento de internacao

	-- busca o complemento da guia principal
	if (ie_tipo_guia_w = '5') and (cd_excecao_w = 'E') then
		select	max(ie_tipo_faturamento),
			max(nr_seq_clinica)
		into STRICT	ie_tipo_faturamento_ww,
			nr_seq_clinica_ww
		from	pls_conta
		where	cd_guia_ok = nr_guia_principal_w
		and	nr_seq_segurado = cd_usuario_plano_w
		and	ie_tipo_guia = '5';

		-- Se o da principal for parcial, dessa tem que ser complementar
		if (coalesce(ie_tipo_faturamento_w::text, '') = '') then
			if (ie_tipo_faturamento_ww = 'P') then
				ie_tipo_faturamento_w := 'C';
			else
				ie_tipo_faturamento_w := ie_tipo_faturamento_ww;
			end if;
		end if;

		if (coalesce(nr_seq_clinica_w::text, '') = '') then
			nr_seq_clinica_w := nr_seq_clinica_ww;
		end if;
	end if;

	-- Se o PTU for da versao igual ou menor de 22, o tratamento sera o antigo
	if (nr_versao_transacao_w <= 22) then
		-- Setar o campo ie_tipo_consulta com a opcao 'Modificar informacoes da conta' quando for guia de consulta.
		if (ie_tipo_guia_w = '3') then
			if (ie_carater_atendimento_w in ('1','5')) then
			ie_tipo_consulta_w := null;
			elsif (ie_carater_atendimento_w = '0') then
			ie_tipo_consulta_w := '1';
			elsif (ie_carater_atendimento_w = '2') then
			ie_tipo_consulta_w := '2';
			elsif (ie_carater_atendimento_w = '3') then
			ie_tipo_consulta_w := '3';
			elsif (ie_carater_atendimento_w = '4') then
			ie_tipo_consulta_w := '4';
			end if;
		end if;
		select 	CASE WHEN ie_carater_atendimento_w=1 THEN 'U'  ELSE 'E' END
		into STRICT 	ie_carater_atendimento_w
		;
	--Se o PTU for da igual ou maior de 23, devera ser realizado um novo tratamento para o campo ie_tipo_consulta e tratar o ie_carater_atendimento com seus respectivos valores novos.
	elsif (nr_versao_transacao_w >= 23) then
		select 	CASE WHEN ie_carater_atendimento_w=1 THEN 'E' WHEN ie_carater_atendimento_w=2 THEN 'U' END
			into STRICT ie_carater_atendimento_w
		;

		select 	CASE WHEN trim(both tp_consulta_w)='5' THEN '2'  ELSE trim(both tp_consulta_w) END
			into STRICT ie_tipo_consulta_w
		;
	end if;

	insert into pls_conta(nr_sequencia, ie_tipo_atendimento_imp, nr_seq_saida_spsadt,
		cd_guia, cd_guia_referencia, nm_usuario,
		dt_atualizacao, nm_usuario_nrec, dt_atualizacao_nrec,
		nr_seq_protocolo, cd_estabelecimento, --ie_carater_internacao,
		nr_seq_prestador_exec, dt_emissao, ie_status,
		ie_tipo_guia, nr_seq_segurado, nr_seq_fatura,
		cd_cooperativa, ie_tipo_conta, cd_medico_solicitante,
		nr_seq_nota_cobranca, nr_seq_prestador_exec_imp, nr_seq_prestador_imp,
		cd_usuario_plano_imp, ie_origem_conta, dt_atendimento,
		ie_carater_internacao, dt_entrada, dt_alta,
		nr_seq_clinica, nr_seq_saida_int, ie_indicacao_acidente,
		cd_senha,cd_senha_externa, nr_seq_tipo_atendimento,
		cd_prestador_solic_imp, nm_prestador_imp, cd_prestador_exec_imp,
		nm_prestador_exec_imp, dt_atendimento_imp, ie_tipo_acomodacao_ptu,
		ds_indicacao_clinica, ds_observacao,ie_gestacao,ie_aborto,
		ie_parto_normal,ie_complicacao_puerperio,ie_complicacao_neonatal,
		ie_parto_cesaria,ie_baixo_peso,ie_atend_rn_sala_parto,ie_transtorno,
		ie_obito_mulher,qt_obito_precoce,qt_obito_tardio,qt_nasc_vivos_termo,
		qt_nasc_mortos,qt_nasc_vivos_prematuros, nr_seq_tipo_acomodacao,nr_seq_prest_inter,
		ie_recem_nascido, nr_seq_nota_hospitalar, ie_tipo_faturamento, ie_tipo_consulta, ie_regime_internacao,
		dt_autorizacao, nr_guia_tiss_operadora, nr_guia_tiss_prestador, nr_guia_tiss_principal,
		tp_rede_min, ie_cobertura_especial, ie_regime_atendimento, ie_saude_ocupacional)
	values (nextval('pls_conta_seq'), ie_tipo_atendimento_w, ie_tipo_saida_spdat_w,
		nr_nota_w, nr_guia_principal_w, nm_usuario_p,
		clock_timestamp(), nm_usuario_p, clock_timestamp(),
		nr_seq_protocolo_p, cd_estabelecimento_p, --'E',
		nr_seq_prestador_exec_w, coalesce(dt_atendimento_w,dt_atendimento_ww), 'U',
		ie_tipo_guia_w, cd_usuario_plano_w, nr_seq_fatura_p,
		cd_cooperativa_w, 'I', nr_seq_prestador_solic_w,
		nr_seq_cobranca_w, nr_cgc_cpf_w, nr_cgc_cpf_req_w,
		cd_usuario_plano_imp_w, 'A', dt_atendimento_ww,
		ie_carater_atendimento_w, dt_internacao_w, dt_alta_w,
		nr_seq_clinica_w, nr_seq_saida_int_w, CASE WHEN coalesce(ie_ind_acidente_w,tp_ind_acidente_w)='1' THEN '0' WHEN coalesce(ie_ind_acidente_w,tp_ind_acidente_w)='2' THEN '1' WHEN coalesce(ie_ind_acidente_w,tp_ind_acidente_w)='3' THEN '2'  ELSE '9' END ,
		nr_autorizacao_w,nr_autorizacao_w, nr_seq_tipo_atendimento_w,
		cd_prestador_req_w, nm_prestador_req_w, cd_prestador_w,
		coalesce(nm_prestador_w,nm_prest_exec_w), dt_atendimento_ww, ie_tipo_acomodacao_w,
		ds_indicacao_clinica_imp_w, ds_observacao_imp_w,ie_int_gestacao_w,ie_int_aborto_w,
		ie_int_parto_normal_w,ie_int_puerperio_w,ie_int_neonatal_w,
		ie_int_parto_cesarea_w,ie_int_baixo_peso_w,ie_int_recem_nascido_w,ie_int_transtorno_w,
		ie_obito_mulher_w,qt_obito_precoce_w,qt_obito_tardio_w,qt_nasc_vivos_w,
		qt_nasc_mortos_w,qt_nasc_vivos_pre_w, nr_seq_tipo_acomodacao_w,nr_seq_prest_inter_w,
		id_rn_w, nr_seq_nota_hosp_w, ie_tipo_faturamento_w, ie_tipo_consulta_w, ie_reg_internacao_w,
		dt_autoriz_w, nr_guia_tiss_operadora_w, nr_guia_tiss_prestador_w, nr_guia_tiss_principal_w,
		tp_rede_min_w, ie_cobertura_especial_w, ie_regime_atendimento_w, ie_saude_ocupacional_w
		) returning nr_sequencia into nr_seq_conta_w;

	-- jjung - Se tiver informado o CD_CID gerar o diagnostico para a conta.
	for r_c06_w in c06(nr_seq_cobranca_w) loop
		if ( (r_c06_w.cd_cid IS NOT NULL AND r_c06_w.cd_cid::text <> '') and r_c06_w.ie_classificacao = 'CID_1') then
			CALL pls_gerar_diagnostico(nr_seq_conta_w, r_c06_w.cd_cid, nm_usuario_p, 'P');
		elsif (r_c06_w.cd_cid IS NOT NULL AND r_c06_w.cd_cid::text <> '') then
			CALL pls_gerar_diagnostico(nr_seq_conta_w, r_c06_w.cd_cid, nm_usuario_p, 'S');
		end if;
	end loop;

	-- jjung - Se tiver informado o CD_CID_OBITO na PTU_NOTA_HOSPITALAR sera gerado uma declaracao de obito para a conta.
	if ((cd_cid_obito_fatura_w IS NOT NULL AND cd_cid_obito_fatura_w::text <> '') or (nr_declara_obito_w IS NOT NULL AND nr_declara_obito_w::text <> '')) then
		CALL pls_gerar_decl_nasc_obito(	cd_cid_obito_fatura_w,nr_declara_obito_w,
					null,nr_seq_conta_w,nm_usuario_p,null);
	end if;

	-- jjung -  Gerar declaracoes de obito e nascimento da PTU_NOTA_HOSP_COMPL, se ira gerar se tiver CD_CID_OBITO  ou NR_DECLARA_VIVO informado.
	for	r_C05_w in C05(nr_seq_nota_hosp_w) loop
		CALL pls_gerar_decl_nasc_obito(	r_C05_w.cd_cid_obito,r_C05_w.nr_declara_obito,
						r_C05_w.nr_declara_vivo,nr_seq_conta_w,nm_usuario_p,
						r_C05_w.ie_recem_nascido);
	end loop; --C05
	CALL ptu_gerar_pls_procedimento(nr_seq_conta_w,nr_seq_cobranca_w, nm_usuario_p, cd_estabelecimento_p);

	CALL gravar_processo_longo(' Beneficiario' || ' - ' || substr(pls_obter_dados_conta(nr_seq_conta_w,'NB'),1,40) ||
				', Conta ' || ' - ' || nr_seq_conta_w,'PTU_GERAR_PLS_CONTA',-1);

	-- Diether 09/10/2012 - Tratar para gravar os valore como importacao para que possam ser visualizados em contas que nao tem o beneficiario informado (nao gera valor)
	select	sum(vl_procedimento_imp)
	into STRICT	vl_procedimento_imp_w
	from	pls_conta_proc
	where	nr_seq_conta	= nr_seq_conta_w;

	select	sum(vl_material_imp)
	into STRICT	vl_material_imp_w
	from	pls_conta_mat
	where	nr_seq_conta	= nr_seq_conta_w;

	-- Rotina para verificar a regra de qual o tipo da guia que sera a conta
	ie_tipo_guia_tiss_w := pls_obter_guia_tiss(nr_seq_conta_w, ie_tipo_guia_tiss_w);

	update	pls_conta
	set	vl_materiais_imp	= vl_material_imp_w,
		vl_procedimentos_imp	= vl_procedimento_imp_w,
		vl_total_imp		= coalesce(vl_procedimento_imp_w,0) + coalesce(vl_material_imp_w,0),
		ie_tipo_guia		= coalesce(ie_tipo_guia_tiss_w,ie_tipo_guia)
	where	nr_sequencia		= nr_seq_conta_w;

	update	ptu_nota_cobranca
	set	dt_fim_geracao_conta	= clock_timestamp()
	where	nr_seq_fatura		= nr_seq_fatura_p
	and	nr_sequencia		= nr_seq_cobranca_w;
end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_gerar_pls_conta ( nr_seq_fatura_p bigint, nr_seq_protocolo_p bigint default null, cd_estabelecimento_p bigint DEFAULT NULL, nm_usuario_p text DEFAULT NULL) FROM PUBLIC;

