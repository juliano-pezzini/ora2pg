-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_recalculo_proprio ( nr_seq_lote_p bigint, nm_usuario_p text) AS $body$
DECLARE


vl_item_atual_w		double precision:= 0;
vl_conta_w		double precision:= 0;
vl_recurso_proprio_w	double precision:= 0;
vl_total_itens_w	double precision:= 0;
nr_seq_ultimo_proc_w	bigint  := null;
nr_seq_prestador_exec_w	bigint  := null;
qt_registro_w		bigint  := 0;
nr_seq_regra_w		bigint  := null;
nr_seq_item_w		bigint  := null;
dt_mes_competencia_w	timestamp;
ie_tipo_valor_base_w	pls_lote_recalculo.ie_tipo_valor_base%type;
ie_concil_contab_w	pls_visible_false.ie_concil_contab%type;
cd_estabelecimento_w	estabelecimento.cd_estabelecimento%type;


C01 CURSOR FOR
	/* Obter medico e prestador executor*/

	SELECT	nr_seq_prestador,
		vl_base
	from	pls_conta_recalculo
	where	nr_seq_lote	= nr_seq_lote_p
	group by nr_seq_prestador, vl_base;

C02 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.vl_item_atual
	from	pls_conta_recalculo	b,
		pls_item_recalculo	a
	where	b.nr_sequencia		= a.nr_seq_conta
	and	b.nr_seq_prestador	= nr_seq_prestador_exec_w
	and	b.nr_seq_lote		= nr_seq_lote_p;


BEGIN

select	trunc(dt_mes_competencia, 'month'),
	coalesce(ie_tipo_valor_base, 'I') ie_tipo_valor_base
into STRICT	dt_mes_competencia_w,
	ie_tipo_valor_base_w
from	pls_lote_recalculo
where	nr_sequencia	= nr_seq_lote_p;

cd_estabelecimento_w 	:= wheb_usuario_pck.get_cd_estabelecimento;

select	coalesce(max(ie_concil_contab), 'N')
into STRICT	ie_concil_contab_w
from	pls_visible_false
where	cd_estabelecimento = cd_estabelecimento_w;

open C01;
loop
fetch C01
into	nr_seq_prestador_exec_w,
	vl_recurso_proprio_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	if (ie_tipo_valor_base_w = 'I') then		
		/* Obeter regra de recurso proprio*/

		select	max(nr_sequencia)
		into STRICT	nr_seq_regra_w
		from	pls_cc_recurso_proprio
		where	nr_seq_prestador	= nr_seq_prestador_exec_w;
		
		--Se o tipo de valor base for individual, entao deve ter regra de despesa com recurso proprio para o prestador.

		--Isso ja era feito antes de existir a distincaoo de tipo de valor base individual /coletivo.
		if (nr_seq_regra_w IS NOT NULL AND nr_seq_regra_w::text <> '') then
				
			select	sum(a.vl_item_atual)
			into STRICT	vl_conta_w
			from	pls_conta_recalculo	b,
				pls_item_recalculo	a
			where	b.nr_sequencia		= a.nr_seq_conta
			and	b.nr_seq_prestador	= nr_seq_prestador_exec_w
			and	b.nr_seq_lote		= nr_seq_lote_p;
			
			open C02;
			loop
			fetch C02
			into	nr_seq_item_w,
				vl_item_atual_w;
			EXIT WHEN NOT FOUND; /* apply on C02 */
				begin
				update	pls_item_recalculo a
				set	a.vl_item	= vl_recurso_proprio_w * (vl_item_atual_w/vl_conta_w)
				where	a.nr_sequencia	= nr_seq_item_w;
				end;
				
			end loop;
			close C02;
			
			/* Arredondamento - Quanto tipo valor base for individual, entao o arredondamento e a nivel de prestador*/

			select	sum(a.vl_item)
			into STRICT	vl_total_itens_w
			from	pls_conta_recalculo	b,
				pls_item_recalculo	a
			where	a.nr_seq_conta		= b.nr_sequencia
			and	b.nr_seq_prestador	= nr_seq_prestador_exec_w
			and	b.nr_seq_lote		= nr_seq_lote_p;

			--Pega a sequencia do maior valor
			select  max(a.nr_sequencia),
				count(*)
			into STRICT	nr_seq_ultimo_proc_w,
				qt_registro_w
			from	pls_conta_recalculo	b,
				pls_item_recalculo	a
			where	a.nr_seq_conta	= b.nr_sequencia
			and	b.nr_seq_lote	= nr_seq_lote_p
			and	b.nr_seq_prestador	= nr_seq_prestador_exec_w
			and 	a.vl_item = 	(SELECT	max(a.vl_item)
						 from	pls_conta_recalculo	b,
							pls_item_recalculo	a
						 where	a.nr_seq_conta		= b.nr_sequencia
						 and	b.nr_seq_lote		= nr_seq_lote_p
						 and	b.nr_seq_prestador	= nr_seq_prestador_exec_w);
			
			if (qt_registro_w > 0) then
				update	pls_item_recalculo
				set	vl_item 		= vl_item + (vl_recurso_proprio_w - vl_total_itens_w)
				where	nr_sequencia		= nr_seq_ultimo_proc_w
				and	vl_item + (vl_recurso_proprio_w - vl_total_itens_w) > 0;
			end if;
			
		end if;	
		nr_seq_regra_w	:= 0;
		
	else --Tipo valor base coletivo. Faz os calculos sobre todo o lote, nao individualizando por prestador	
		select	sum(a.vl_item_atual)
		into STRICT	vl_conta_w
		from	pls_conta_recalculo	b,
			pls_item_recalculo	a
		where	b.nr_sequencia		= a.nr_seq_conta
		and	b.nr_seq_lote		= nr_seq_lote_p;
		
		open C02;
		loop
		fetch C02
		into	nr_seq_item_w,
			vl_item_atual_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin
			update	pls_item_recalculo a
			set	a.vl_item	= vl_recurso_proprio_w * (vl_item_atual_w/vl_conta_w)
			where	a.nr_sequencia	= nr_seq_item_w;
			end;
			
		end loop;
		close C02;
	
	end if;
		
	end;
end loop;
close C01;

--Caso esta definido que valor base e do tipo coletivo, entao nao pode fazer o arredondamento 

--a nivel de prestador e sim a nivel de  lote
if (ie_tipo_valor_base_w = 'C') then

	select	sum(a.vl_item)
	into STRICT	vl_total_itens_w
	from	pls_conta_recalculo	b,
		pls_item_recalculo	a
	where	a.nr_seq_conta		= b.nr_sequencia
	and	b.nr_seq_lote		= nr_seq_lote_p;
	
	--Pega a sequencia do maior valor
	select  max(a.nr_sequencia),
		count(*)
	into STRICT	nr_seq_ultimo_proc_w,
		qt_registro_w
	from	pls_conta_recalculo	b,
		pls_item_recalculo	a
	where	a.nr_seq_conta	= b.nr_sequencia
	and	b.nr_seq_lote	= nr_seq_lote_p
	and 	a.vl_item = 	(SELECT	max(a.vl_item)
				 from	pls_conta_recalculo	b,
					pls_item_recalculo	a
				 where	a.nr_seq_conta		= b.nr_sequencia
				 and	b.nr_seq_lote		= nr_seq_lote_p);

	if (qt_registro_w > 0 ) then
		--somente faz o ajuste de arredondamento se garantir que valor nao ficara negativo
		update	pls_item_recalculo
		set	vl_item 	= vl_item + (vl_recurso_proprio_w - vl_total_itens_w)
		where	nr_sequencia	= nr_seq_ultimo_proc_w
		and	vl_item + (vl_recurso_proprio_w - vl_total_itens_w) > 0;
		
	end if;
	
end if;


if (ie_concil_contab_w = 'S') then
	CALL pls_ctb_onl_gravar_movto_pck.gravar_movto_recalc_proprio(nr_seq_lote_p, cd_estabelecimento_w, nm_usuario_p);
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_recalculo_proprio ( nr_seq_lote_p bigint, nm_usuario_p text) FROM PUBLIC;

