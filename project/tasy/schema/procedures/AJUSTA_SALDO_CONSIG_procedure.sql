-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ajusta_saldo_consig ( dt_mesano_referencia_p timestamp, cd_estabelecimento_p bigint, ie_atualiza_p bigint) AS $body$
DECLARE


cd_estabelecimento_w	smallint	:= 0;
cd_local_estoque_w 	smallint	:= 0;
cd_material_estoque_w	integer	:= 0;
cd_operacao_estoque_w	smallint	:= 0;
ie_entrada_saida_w		varchar(1);
qt_estoque_w		double precision;
dt_mesano_referencia_w	timestamp;
dt_mesano_anterior_w	timestamp;
qt_entrada_w		double precision;
qt_saida_w		double precision;
qt_saldo_estoque_w	double precision;
qt_saldo_anterior_w		double precision;
qt_novo_estoque_w	double precision;
qt_dif_w			double precision;
ie_atualiza_w		bigint;
ds_retorno_w		varchar(40);
cd_fornecedor_w		varchar(14);

c00 CURSOR FOR
SELECT	distinct
	cd_estabelecimento,
	cd_material,
	cd_local_estoque,
	cd_fornecedor,
	qt_estoque
from 	fornecedor_mat_consignado
where	dt_mesano_referencia 	= dt_mesano_referencia_w
and	cd_estabelecimento = coalesce(cd_estabelecimento_p, cd_estabelecimento)

union

select	distinct
	cd_estabelecimento,
	cd_material,
	cd_local_estoque,
	cd_fornecedor,
	0
from 	fornecedor_mat_consignado a
where	a.dt_mesano_referencia 	= dt_mesano_anterior_w
and	a.cd_estabelecimento = coalesce(cd_estabelecimento_p, a.cd_estabelecimento)
and	a.qt_estoque <> 0
and	not exists (select 	1
		from	fornecedor_mat_consignado x
		where   a.cd_estabelecimento = x.cd_estabelecimento
		and	a.dt_mesano_referencia = dt_mesano_referencia_w
		and	a.cd_material = x.cd_material
		and	a.cd_fornecedor = x.cd_fornecedor)

union

select	distinct
	a.cd_estabelecimento,
	a.cd_material_estoque,
	a.cd_local_estoque,
	a.cd_fornecedor,
	0 qt_estoque
from	movimento_estoque a,
	operacao_estoque b
where	a.cd_operacao_estoque = b.cd_operacao_estoque
and	b.ie_consignado <> '0'
and	not exists (select 	1
		from	fornecedor_mat_consignado x
		where   a.cd_estabelecimento = x.cd_estabelecimento
		and	a.dt_mesano_referencia = x.dt_mesano_referencia
		and	a.cd_material_estoque = x.cd_material
		and	a.cd_fornecedor = x.cd_fornecedor)
and	(a.cd_fornecedor IS NOT NULL AND a.cd_fornecedor::text <> '')
and	(a.dt_processo IS NOT NULL AND a.dt_processo::text <> '')
and	cd_estabelecimento = coalesce(cd_estabelecimento_p, cd_estabelecimento)
and	a.dt_mesano_referencia 	= dt_mesano_referencia_w;

c01 CURSOR FOR
SELECT  CASE WHEN a.cd_acao=1 THEN a.qt_estoque  ELSE a.qt_estoque * -1 END ,
	a.cd_operacao_estoque,
	b.ie_entrada_saida
from	operacao_estoque b,
	movimento_estoque a
where	a.dt_mesano_referencia	= dt_mesano_referencia_w
and	a.cd_material_estoque	= cd_material_estoque_w
and	a.cd_local_estoque	= cd_local_estoque_w
and	a.cd_estabelecimento	= cd_estabelecimento_w
and	a.cd_operacao_estoque	= b.cd_operacao_estoque
and	cd_fornecedor		= cd_fornecedor_w
and	b.ie_consignado		<> 0
and	(a.dt_processo IS NOT NULL AND a.dt_processo::text <> '');


BEGIN
dt_mesano_referencia_w	:= PKG_DATE_UTILS.start_of(dt_mesano_referencia_p,'month',0);
dt_mesano_anterior_w  	:= PKG_DATE_UTILS.ADD_MONTH(dt_mesano_referencia_w, -1, 0);
ds_retorno_w := obter_valor_dinamico('Truncate table w_saldo_estoque', ds_retorno_w);

open c00;
loop
fetch c00 into
	cd_estabelecimento_w,
	cd_material_estoque_w,
	cd_local_estoque_w,
	cd_fornecedor_w,
	qt_saldo_estoque_w;
EXIT WHEN NOT FOUND; /* apply on c00 */
       	begin
	qt_entrada_w	:= 0;
	qt_saida_w	:= 0;

	begin
	select	qt_estoque
	into STRICT	qt_saldo_anterior_w
	from	fornecedor_mat_consignado
	where	cd_estabelecimento	= cd_estabelecimento_w
	and	cd_local_estoque	= cd_local_estoque_w
	and	cd_material	= cd_material_estoque_w
	and	cd_fornecedor	= cd_fornecedor_w
	and	dt_mesano_referencia	= dt_mesano_anterior_w;
	exception
		when others	 then
			qt_saldo_anterior_w	:= 0;
	end;

	open c01;
	loop
	fetch c01 into
		qt_estoque_w,
		cd_operacao_estoque_w,
		ie_entrada_saida_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		if (ie_entrada_saida_w = 'S') then
			qt_saida_w	:= qt_saida_w + qt_estoque_w;
		else
			qt_entrada_w	:= qt_entrada_w + qt_estoque_w;
		end if;
		end;
	end loop;
	close c01;

	qt_novo_estoque_w	:= (qt_saldo_anterior_w + qt_entrada_w - qt_saida_w);
	qt_dif_w			:= qt_novo_estoque_w - qt_saldo_estoque_w;

	if (qt_dif_w <> 0) then
		begin
		insert into w_saldo_estoque(
			cd_estabelecimento,
			cd_local_estoque,
			cd_material,
			dt_mesano_referencia,
			qt_estoque_atual,
			qt_estoque_anterior,
			qt_entrada,
			qt_saida,
			qt_diferenca)
		values (	cd_estabelecimento_w,
			cd_local_estoque_w,
			cd_material_estoque_w,
			dt_mesano_referencia_w,
			qt_saldo_estoque_w,
			qt_saldo_anterior_w,
			qt_entrada_w,
			qt_saida_w,
			qt_dif_w);

		if (ie_atualiza_p = 1555) then
			begin
			update	fornecedor_mat_consignado
			set	qt_estoque	= qt_novo_estoque_w
			where	cd_estabelecimento	= cd_estabelecimento_w
			and	cd_local_estoque	= cd_local_estoque_w
			and	cd_material	= cd_material_estoque_w
			and	cd_fornecedor	= cd_fornecedor_w
			and	dt_mesano_referencia	= dt_mesano_referencia_w;
			if (NOT FOUND) then
				insert into fornecedor_mat_consignado(
					dt_mesano_referencia,
					cd_estabelecimento,
					cd_local_estoque,
					cd_material,
					cd_fornecedor,
					qt_estoque,
					dt_atualizacao,
					nm_usuario,
					ie_bloqueio_inventario)
				values (	dt_mesano_referencia_w,
					cd_estabelecimento_w,
					cd_local_estoque_w,
					cd_material_estoque_w,
					cd_fornecedor_w,
					qt_novo_estoque_w,
					clock_timestamp(),
					'dif_saldo',
					'N');
			end if;
			end;
		end if;
		end;
	end if;
	end;
end loop;
close c00;

commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ajusta_saldo_consig ( dt_mesano_referencia_p timestamp, cd_estabelecimento_p bigint, ie_atualiza_p bigint) FROM PUBLIC;

