-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_atualizar_protocolo_sip ( nr_seq_lote_sip_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE


/*
	ESTA PROCEDURE ESTÁ DEPRECIADA SUA UTILIZAÇÃO FOI SUBSTITUÍDA PELA PROCEDURE EQUIVALENTE NA PCK pls_sip_pck
*/
dt_periodo_inicial_w		timestamp;
dt_periodo_final_w		timestamp;
nr_seq_protocolo_w		bigint;
cd_estabelecimento_w		bigint;
qt_protocolo_w			bigint	:= 0;
nr_seq_conta_w			bigint;
qt_beneficiario_w		bigint;
nr_seq_sip_aux_w		bigint;

C01 CURSOR FOR
	SELECT  b.nr_sequencia
	from	pls_conta		b,
		pls_protocolo_conta	a
	where	a.nr_sequencia		= b.nr_seq_protocolo
	and	a.ie_status <> '1'
	and	a.dt_mes_competencia between inicio_dia(dt_periodo_inicial_w) and fim_dia(dt_periodo_final_w)
	and	((coalesce(b.ie_tipo_segurado,'B')	= 'B')
	or (coalesce(b.ie_tipo_segurado,'B')	= 'R'))
	group by b.nr_sequencia;


BEGIN
begin
select	dt_periodo_inicial,
	coalesce(dt_periodo_final, clock_timestamp()),
	cd_estabelecimento
into STRICT	dt_periodo_inicial_w,
	dt_periodo_final_w,
	cd_estabelecimento_w
from	pls_lote_sip
where	nr_sequencia	= nr_seq_lote_sip_p;
exception
	when others then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(200283,'NR_SEQ_LOTE_SIP_P='||nr_seq_lote_sip_p);
end;

select	count(a.nr_sequencia)
into STRICT	qt_protocolo_w
from	pls_conta		b,
	pls_protocolo_conta	a
where	a.nr_sequencia		= b.nr_seq_protocolo
and	a.ie_status <> '1'
and	a.dt_mes_competencia between dt_periodo_inicial_w and fim_dia(dt_periodo_final_w)
and	((coalesce(b.ie_tipo_segurado,'B')	= 'B')
or (coalesce(b.ie_tipo_segurado,'B')	= 'R'));

delete  FROM w_sip_inform_aux
where	nm_usuario = nm_usuario_p;

select	count(1)
	into STRICT	qt_beneficiario_w
	from (	SELECT	1
		from	pls_segurado
		where	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
		and	coalesce(dt_rescisao::text, '') = ''
		and	ie_tipo_segurado = 'R'
		and	cd_estabelecimento = cd_estabelecimento_p
		
UNION ALL

		SELECT	1
		from	pls_segurado
		where	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
		and	coalesce(dt_rescisao::text, '') = ''
		and	ie_tipo_segurado = 'B'
		and	cd_estabelecimento = cd_estabelecimento_p) alias5;

select 	max(nr_sequencia)
into STRICT	nr_seq_sip_aux_w
from 	w_sip_inform_aux;

nr_seq_sip_aux_w := coalesce(nr_seq_sip_aux_w,0) + 1;

insert 	into	w_sip_inform_aux(nr_sequencia, dt_atualizacao, nm_usuario,
				  dt_atualizacao_nrec, nm_usuario_nrec, qt_benef_sip)
	values (nr_seq_sip_aux_w, clock_timestamp(), nm_usuario_p,
				 clock_timestamp(), nm_usuario_p	, qt_beneficiario_w);

open C01;
loop
fetch C01 into
	nr_seq_conta_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	/*Robson da silva OS - 310416
	pls_gerar_protocolo_sip(nr_seq_protocolo_w, nm_usuario_p, cd_estabelecimento_w);*/
	CALL pls_gerar_sip_conta_assist(nr_seq_conta_w, nm_usuario_p, cd_estabelecimento_p);
	commit;
	--sip_atualiza_grupo_serv(nr_seq_conta_w,nm_usuario_p);
	end;
end loop;
close C01;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_atualizar_protocolo_sip ( nr_seq_lote_sip_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

