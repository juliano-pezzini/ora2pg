-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_copiar_prod_regra_estab ( cd_estab_origem_p bigint, cd_estab_destino_p bigint, nm_usuario_p text) AS $body$
DECLARE


qt_faixa_etaria_w		bigint;
qt_categorias_w			bigint;
qt_classif_cpt_w		bigint;
qt_sca_classif_w		bigint;
qt_mensagem_audit_w		bigint;
qt_cpt_regra_proc_w		bigint;
qt_tipo_acomodacao_w		bigint;
ds_faixa_etaria_w		varchar(255);
ie_situacao_w			varchar(1);
ie_tipo_faixa_etaria_w		varchar(3);
ds_categoria_w			varchar(255);
ds_classificacao_w		varchar(255);
ds_mensagem_w			varchar(255);
ie_complexidade_w		varchar(3);
ie_tipo_procedimento_w		smallint;
cd_tipo_acomodacao_w		varchar(10);
ds_tipo_acomodacao_w		varchar(255);
cd_tiss_w			varchar(20);
nr_seq_faixa_etaria_w		bigint;
nr_seq_categoria_w		bigint;
nr_seq_categoria_nova_w		bigint;
nr_seq_regra_categoria_w	bigint;
nr_seq_classif_cpt_w		bigint;
nr_seq_sca_classif_w		bigint;
nr_seq_mens_auditoria_w		bigint;
nr_seq_cpt_regra_proc_w		bigint;
nr_seq_tipo_acomodacao_w	bigint;
nr_seq_item_faixa_etaria_w	bigint;
nr_seq_faixa_etaria_novo_w	bigint;

C01 CURSOR FOR
	SELECT	ds_faixa_etaria,
		ie_situacao,
		ie_tipo_faixa_etaria,
		nr_sequencia
	from	pls_faixa_etaria
	where	cd_estabelecimento = cd_estab_origem_p
	order by nr_sequencia;

C02 CURSOR FOR
	SELECT	ds_categoria,
		ie_situacao,
		nr_sequencia
	from	pls_categoria
	where	cd_estabelecimento = cd_estab_origem_p
	order by nr_sequencia;

C03 CURSOR FOR
	SELECT	ds_classificacao,
		ie_situacao,
		nr_sequencia
	from	pls_classificacao_cpt
	where	cd_estabelecimento = cd_estab_origem_p
	order by nr_sequencia;

C04 CURSOR FOR
	SELECT	ds_classificacao,
		ie_situacao,
		nr_sequencia
	from	pls_sca_classificacao
	where	cd_estabelecimento = cd_estab_origem_p
	order by nr_sequencia;

C05 CURSOR FOR
	SELECT	ds_mensagem,
		ie_situacao,
		nr_sequencia
	from	pls_mensagem_auditoria
	where	cd_estabelecimento = cd_estab_origem_p
	order by nr_sequencia;

C06 CURSOR FOR
	SELECT	ie_situacao,
		ie_complexidade,
		ie_tipo_procedimento,
		nr_sequencia
	from	pls_cpt_regra_proc
	where	cd_estabelecimento = cd_estab_origem_p
	order by nr_sequencia;

C08 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_faixa_etaria_item
	where	nr_seq_faixa_etaria	= nr_seq_faixa_etaria_w
	order by nr_sequencia;

C09 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_regra_categoria
	where	nr_seq_categoria	= nr_seq_categoria_w;



BEGIN

open C01;
loop
fetch C01 into
	ds_faixa_etaria_w,
	ie_situacao_w,
	ie_tipo_faixa_etaria_w,
	nr_seq_faixa_etaria_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	select	count(*)
	into STRICT	qt_faixa_etaria_w
	from	pls_faixa_etaria
	where	nr_seq_faixa_etaria_ant	= nr_seq_faixa_etaria_w
	and	cd_estabelecimento	= cd_estab_destino_p;

	if (qt_faixa_etaria_w = 0) then

		select	nextval('pls_faixa_etaria_seq')
		into STRICT	nr_seq_faixa_etaria_novo_w
		;

		insert into pls_faixa_etaria(nr_sequencia, dt_atualizacao, nm_usuario,
			dt_atualizacao_nrec, nm_usuario_nrec, ds_faixa_etaria,
			ie_situacao, ie_tipo_faixa_etaria, cd_estabelecimento,nr_seq_faixa_etaria_ant)
		values (nr_seq_faixa_etaria_novo_w,clock_timestamp(), nm_usuario_p,
			clock_timestamp(), nm_usuario_p, ds_faixa_etaria_w,
			ie_situacao_w, ie_tipo_faixa_etaria_w, cd_estab_destino_p,nr_seq_faixa_etaria_w);

		open C08;
		loop
		fetch C08 into
			nr_seq_item_faixa_etaria_w;
		EXIT WHEN NOT FOUND; /* apply on C08 */
			begin

			insert into pls_faixa_etaria_item(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
				qt_idade_inicial,qt_idade_final,nr_seq_faixa_etaria)
			(SELECT	nextval('pls_faixa_etaria_item_seq'),clock_timestamp(), nm_usuario_p,clock_timestamp(), nm_usuario_p,
				qt_idade_inicial,qt_idade_final,nr_seq_faixa_etaria_novo_w
			from	pls_faixa_etaria_item
			where	nr_sequencia	= nr_seq_item_faixa_etaria_w);

			end;
		end loop;
		close C08;
	end if;
	end;
end loop;
close C01;

open C02;
loop
fetch C02 into
	ds_categoria_w,
	ie_situacao_w,
	nr_seq_categoria_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin

	select	count(*)
	into STRICT	qt_categorias_w
	from	pls_categoria
	where	nr_seq_categoria_ant	= nr_seq_categoria_w
	and	cd_estabelecimento	= cd_estab_destino_p;

	if (qt_categorias_w = 0) then

	select	nextval('pls_categoria_seq')
	into STRICT	nr_seq_categoria_nova_w
	;

		insert into pls_categoria(nr_sequencia, cd_estabelecimento, dt_atualizacao,
			nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
			ds_categoria, ie_situacao,nr_seq_categoria_ant)
		values (nr_seq_categoria_nova_w, cd_estab_destino_p, clock_timestamp(),
			nm_usuario_p, clock_timestamp(), nm_usuario_p,
			ds_categoria_w, ie_situacao_w,nr_seq_categoria_w);

	open C09;
	loop
	fetch C09 into
		nr_seq_regra_categoria_w;
	EXIT WHEN NOT FOUND; /* apply on C09 */
		begin

		insert into	pls_regra_categoria(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec,
				nm_usuario_nrec, nr_seq_categoria,nr_seq_tipo_acomodacao)
			(SELECT	nextval('pls_regra_categoria_seq'), clock_timestamp(), nm_usuario_p,clock_timestamp(),
				nm_usuario_p,nr_seq_categoria_nova_w,nr_seq_tipo_acomodacao
			from	pls_regra_categoria
			where	nr_sequencia	= nr_seq_regra_categoria_w);
		end;
	end loop;
	close C09;
	end if;
	end;
end loop;
close C02;

open C03;
loop
fetch C03 into
	ds_classificacao_w,
	ie_situacao_w,
	nr_seq_classif_cpt_w;
EXIT WHEN NOT FOUND; /* apply on C03 */
	begin

	select	count(*)
	into STRICT	qt_classif_cpt_w
	from	pls_classificacao_cpt
	where	nr_seq_classificacao_ant	= nr_seq_classif_cpt_w
	and	cd_estabelecimento	= cd_estab_destino_p;

	if (qt_classif_cpt_w = 0) then
		insert into pls_classificacao_cpt(nr_sequencia, cd_estabelecimento, ds_classificacao,
			ie_situacao, dt_atualizacao, nm_usuario,
			dt_atualizacao_nrec, nm_usuario_nrec,nr_seq_classificacao_ant)
		values (nextval('pls_classificacao_cpt_seq'), cd_estab_destino_p, ds_classificacao_w,
			ie_situacao_w, clock_timestamp(), nm_usuario_p,
			clock_timestamp(), nm_usuario_p,nr_seq_classif_cpt_w);
	end if;
	end;
end loop;
close C03;

open C04;
loop
fetch C04 into
	ds_classificacao_w,
	ie_situacao_w,
	nr_seq_sca_classif_w;
EXIT WHEN NOT FOUND; /* apply on C04 */
	begin

	select	count(*)
	into STRICT	qt_sca_classif_w
	from	pls_sca_classificacao
	where	nr_seq_classificacao_ant	= nr_seq_classif_cpt_w
	and	cd_estabelecimento	= cd_estab_destino_p;

	if (qt_sca_classif_w = 0) then
		insert into pls_sca_classificacao(nr_sequencia, cd_estabelecimento, ds_classificacao,
			ie_situacao, dt_atualizacao, nm_usuario,
			dt_atualizacao_nrec, nm_usuario_nrec,nr_seq_classificacao_ant)
		values (nextval('pls_sca_classificacao_seq'), cd_estab_destino_p, ds_classificacao_w,
			ie_situacao_w, clock_timestamp(), nm_usuario_p,
			clock_timestamp(), nm_usuario_p,nr_seq_sca_classif_w);
	end if;
	end;
end loop;
close C04;

open C05;
loop
fetch C05 into
	ds_mensagem_w,
	ie_situacao_w,
	nr_seq_mens_auditoria_w;
EXIT WHEN NOT FOUND; /* apply on C05 */
	begin

	select	count(*)
	into STRICT	qt_mensagem_audit_w
	from	pls_mensagem_auditoria
	where	nr_seq_mensagem_ant	= nr_seq_mens_auditoria_w
	and	cd_estabelecimento	= cd_estab_destino_p;

	if (qt_mensagem_audit_w = 0) then
		insert into pls_mensagem_auditoria(nr_sequencia, cd_estabelecimento, ds_mensagem,
			ie_situacao, dt_atualizacao, nm_usuario,
			dt_atualizacao_nrec, nm_usuario_nrec,nr_seq_mensagem_ant)
		values (nextval('pls_mensagem_auditoria_seq'), cd_estab_destino_p, ds_mensagem_w,
			ie_situacao_w, clock_timestamp(), nm_usuario_p,
			clock_timestamp(), nm_usuario_p,nr_seq_mens_auditoria_w);
	end if;
	end;
end loop;
close C05;

open C06;
loop
fetch C06 into
	ie_situacao_w,
	ie_complexidade_w,
	ie_tipo_procedimento_w,
	nr_seq_cpt_regra_proc_w;
EXIT WHEN NOT FOUND; /* apply on C06 */
	begin

	select	count(*)
	into STRICT	qt_cpt_regra_proc_w
	from	pls_cpt_regra_proc
	where	nr_seq_regra_ant	= nr_seq_cpt_regra_proc_w
	and	cd_estabelecimento	= cd_estab_destino_p;

	if (qt_cpt_regra_proc_w = 0) then
		insert into pls_cpt_regra_proc(nr_sequencia, ie_situacao, cd_estabelecimento,
			dt_atualizacao, nm_usuario, dt_atualizacao_nrec,
			nm_usuario_nrec, ie_complexidade, ie_tipo_procedimento,nr_seq_regra_ant)
		values (nextval('pls_cpt_regra_proc_seq'), ie_situacao_w, cd_estab_destino_p,
			clock_timestamp(), nm_usuario_p, clock_timestamp(),
			nm_usuario_p, ie_complexidade_w, ie_tipo_procedimento_w,
			nr_seq_cpt_regra_proc_w);
	end if;
	end;
end loop;
close C06;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_copiar_prod_regra_estab ( cd_estab_origem_p bigint, cd_estab_destino_p bigint, nm_usuario_p text) FROM PUBLIC;

