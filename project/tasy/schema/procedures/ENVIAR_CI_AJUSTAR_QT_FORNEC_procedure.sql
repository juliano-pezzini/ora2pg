-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE enviar_ci_ajustar_qt_fornec ( nr_sequencia_p bigint, qt_anterior_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
nr_seq_regra_w			bigint;
nr_cot_compra_w			bigint;
cd_estabelecimento_w		smallint;
nr_solic_compra_w			bigint;
nr_item_cot_compra_w		integer;
ds_material_w			varchar(255);
qt_material_w			double precision;
ds_fornecedor_w			varchar(100);
ds_titulo_w			varchar(80);
ds_comunicacao_w			varchar(2000);
ie_usuario_w			varchar(3);
nm_usuarios_w			varchar(255) := '';
nr_seq_classif_w			bigint;
cd_setor_atendimento_w		integer;
qt_existe_w			bigint;
nr_seq_comunic_w			bigint;
cd_perfil_w			varchar(10);
ie_ci_lida_w			varchar(1);
/* Se tiver setor na regra, envia CI para os setores */
ds_setor_adicional_w          	varchar(2000) := '';
/* Campos da regra Usuário da Regra */
cd_setor_regra_usuario_w		integer;

c01 CURSOR FOR 
SELECT	distinct 
	a.nr_cot_compra, 
	d.cd_estabelecimento, 
	a.nr_solic_compra, 
	a.nr_item_cot_compra, 
	substr(obter_desc_material(a.cd_material),1,255) ds_material, 
	c.qt_material, 
	substr(obter_nome_pf_pj(null,b.cd_cgc_fornecedor),1,100) ds_fornecedor, 
	obter_dados_solic_compra(a.nr_solic_compra,8) cd_setor_atendimento 
from	cot_compra d, 
	cot_compra_item a, 
	cot_compra_forn b, 
	cot_compra_forn_item c 
where	d.nr_cot_compra = a.nr_cot_compra 
and	a.nr_cot_compra = b.nr_cot_compra 
and	a.nr_cot_compra = c.nr_cot_compra 
and	a.nr_item_cot_compra = c.nr_item_cot_compra 
and	c.nr_sequencia = nr_sequencia_p 
and	(a.nr_solic_compra IS NOT NULL AND a.nr_solic_compra::text <> '');

c02 CURSOR FOR			 
SELECT	b.nr_sequencia, 
	b.cd_perfil, 
	coalesce(b.ie_ci_lida,'N') 
from	regra_envio_comunic_compra a, 
	regra_envio_comunic_evento b 
where	a.nr_sequencia = b.nr_seq_regra 
and	a.cd_funcao = 915 
and	b.cd_evento = 14 
and	b.ie_situacao = 'A' 
and	a.cd_estabelecimento = cd_estabelecimento_w 
and	((cd_setor_atendimento_w IS NOT NULL AND cd_setor_atendimento_w::text <> '' AND b.cd_setor_destino = cd_setor_atendimento_w) or 
	((coalesce(cd_setor_atendimento_w::text, '') = '') and (coalesce(b.cd_setor_destino::text, '') = '')) or (coalesce(b.cd_setor_destino::text, '') = '')) 
and	substr(obter_se_envia_ci_regra_compra(b.nr_sequencia,nr_cot_compra_w,'CC',obter_perfil_ativo,nm_usuario_p,null),1,1) = 'S';

c05 CURSOR FOR 
SELECT	coalesce(a.cd_setor_atendimento,0) cd_setor_atendimento 
from	regra_envio_comunic_usu a 
where	a.nr_seq_evento = nr_seq_regra_w;


BEGIN 
 
open C01;
loop 
fetch C01 into 
	nr_cot_compra_w, 
	cd_estabelecimento_w, 
	nr_solic_compra_w, 
	nr_item_cot_compra_w, 
	ds_material_w, 
	qt_material_w, 
	ds_fornecedor_w, 
	cd_setor_atendimento_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	select	max(substr(b.ds_titulo, 1, 80)), 
		max(b.ds_comunicacao) ds_comunicacao 
	into STRICT	ds_titulo_w, 
		ds_comunicacao_w 
	from	regra_envio_comunic_compra a, 
		regra_envio_comunic_evento b 
	where	a.nr_sequencia = b.nr_seq_regra 
	and	b.cd_evento = 14 
	and	a.cd_estabelecimento = cd_estabelecimento_w;
		 
	ds_comunicacao_w := substr(replace_macro(ds_comunicacao_w, '@cotacao',nr_cot_compra_w), 1, 2000);
	ds_comunicacao_w := substr(replace_macro(ds_comunicacao_w, '@solicitacao', nr_solic_compra_w), 1, 2000);	
	ds_comunicacao_w := substr(replace_macro(ds_comunicacao_w, '@usuario', nm_usuario_p), 1, 2000);	
	ds_comunicacao_w := substr(replace_macro(ds_comunicacao_w, '@data', clock_timestamp()), 1, 2000);		
	ds_comunicacao_w := substr(replace_macro(ds_comunicacao_w, '@item', nr_item_cot_compra_w), 1, 2000);	
	ds_comunicacao_w := substr(replace_macro(ds_comunicacao_w, '@fornecedor', ds_fornecedor_w), 1, 2000);	
	ds_comunicacao_w := substr(replace_macro(ds_comunicacao_w, '@material', ds_material_w), 1, 2000);	
	ds_comunicacao_w := substr(replace_macro(ds_comunicacao_w, '@qt_anterior', campo_mascara_virgula_casas(qt_anterior_p,4)), 1, 2000);	
	ds_comunicacao_w := substr(replace_macro(ds_comunicacao_w, '@qt_alterada', campo_mascara_virgula_casas(qt_material_w,4)), 1, 2000);	
	 
	open C02;
	loop 
	fetch C02 into	 
		nr_seq_regra_w, 
		cd_perfil_w, 
		ie_ci_lida_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin 
 
		open C05;
		loop 
		fetch C05 into	 
			cd_setor_regra_usuario_w;
		EXIT WHEN NOT FOUND; /* apply on C05 */
			begin 
			if (cd_setor_regra_usuario_w <> 0) and (obter_se_contido_char(cd_setor_regra_usuario_w, ds_setor_adicional_w) = 'N') then 
				ds_setor_adicional_w := substr(ds_setor_adicional_w || cd_setor_regra_usuario_w || ',',1,2000);
			end if;
			end;
		end loop;
		close C05;
 
		if (cd_perfil_w IS NOT NULL AND cd_perfil_w::text <> '') then 
			cd_perfil_w := cd_perfil_w ||',';
		end if;
 
		nm_usuarios_w := obter_usuarios_comunic_compras(nr_solic_compra_w,null,14,nr_seq_regra_w,nm_usuario_p);
		 
		if (nm_usuarios_w IS NOT NULL AND nm_usuarios_w::text <> '') then 
		 
			select	obter_classif_comunic('F') 
			into STRICT	nr_seq_classif_w 
			;
			 
			select	nextval('comunic_interna_seq') 
			into STRICT	nr_seq_comunic_w 
			;
				 
			insert	into comunic_interna( 
				nr_sequencia,			dt_comunicado,			ds_titulo, 
				ds_comunicado,			nm_usuario,			dt_atualizacao, 
				ie_geral,				nm_usuario_destino,		ie_gerencial, 
				nr_seq_classif,			dt_liberacao,				ds_perfil_adicional, 
				ds_setor_adicional) 
			values (	nr_seq_comunic_w,			clock_timestamp(),				ds_titulo_w, 
				ds_comunicacao_w,		nm_usuario_p,			clock_timestamp(), 
				'N',				nm_usuarios_w,			'N', 
				nr_seq_classif_w,			clock_timestamp(),				cd_perfil_w, 
				ds_setor_adicional_w);
 
			/*Para que a comunicação seja gerada como lida ao próprio usuário */
 
			if (ie_ci_lida_w = 'S') then 
				insert into comunic_interna_lida(nr_sequencia,nm_usuario,dt_atualizacao)values (nr_seq_comunic_w,nm_usuario_p,clock_timestamp());
			end if;	
 
		end if;
		 
		end;
	end loop;
	close C02;
 
	end;
end loop;
close C01;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE enviar_ci_ajustar_qt_fornec ( nr_sequencia_p bigint, qt_anterior_p bigint, nm_usuario_p text) FROM PUBLIC;

