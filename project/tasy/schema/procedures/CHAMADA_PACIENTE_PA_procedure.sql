-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE chamada_paciente_pa ( nr_atendimento_p bigint, nr_seq_local_p bigint, cd_medico_p text, ie_opcao_p text, qt_hora_p bigint, nm_usuario_p text, nr_seq_depar_to_life_p bigint default 0, ie_html_p text default null) AS $body$
DECLARE


/*
ie_opcao_p:
CP	= Chamar Paciente
CCP	= Cancelar Chamada do Paciente
CPR	= Chamar Paciente para Reavaliacao
CCPR	= Cancelar Chamada do Paciente em Reavaliacao
CCPC	= Cancelar Chamada do Paciente por nao Comparecimento
CPMP	= Chamar Paciente para Medicacao/Procedimento
CCPMP	= Cancelar Chamada do Paciente para Medicacao/Procedimento
FCPMP	= Finalizar Chamada do Paciente para Medicacao/Procedimento
CPENF	= Chamada Paciente Enfermagem
TL              = Trocar local do paciente sem assumir
*/
ie_cancelar_chamadas_w	varchar(20);
ie_finaliza_consulta_w	varchar(5);
qt_chamados_minimos_w	bigint;
qt_chamados_w		bigint;
ie_pac_chamado_w	varchar(5);
ds_log_w		varchar(255);
nr_seq_local_w		bigint;
nr_seq_local_orig_w		bigint;
nr_seq_depar_to_life_w	bigint;
qt_agenda_w				bigint;
cd_estabelecimento_w	integer;


BEGIN

cd_estabelecimento_w := wheb_usuario_pck.get_cd_estabelecimento;

ie_cancelar_chamadas_w := Obter_param_Usuario(935, 87, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_cancelar_chamadas_w);
ie_finaliza_consulta_w := Obter_param_Usuario(935, 155, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_finaliza_consulta_w);

ds_log_w := 'ie_opcao_p='||ie_opcao_p||';nr_atendimento_p='||nr_atendimento_p||';cd_medico_p='||cd_medico_p;

nr_seq_local_orig_w := nr_seq_local_p;

if (nr_seq_depar_to_life_p > 0) then


	select  max(IE_LOCA_SETOR)
	into STRICT	nr_seq_depar_to_life_w
	from    TO_LIFE_CHAMADA
	where   NR_SEQ_DEPARTAMENTO = nr_seq_depar_to_life_p
	and	coalesce(ie_situacao,'A') = 'A';


	if ( coalesce(nr_seq_depar_to_life_w,0) > 0) then
	
		nr_seq_local_orig_w := nr_seq_depar_to_life_w;
			
	end if;

end if;

if (ie_opcao_p = 'CPMP') then
	update	atendimento_paciente
	set	dt_chamada_medic	= clock_timestamp(),
		nr_seq_local_pa		= nr_seq_local_orig_w,
		cd_medico_chamado	= cd_medico_p,
		nm_usuario		= nm_usuario_p,
		dt_atualizacao		= clock_timestamp()
	where	nr_atendimento		= nr_atendimento_p;
elsif (ie_opcao_p = 'CCPMP') then
	update	atendimento_paciente
	set	dt_chamada_medic	 = NULL,
		dt_chegada_medic	 = NULL,
		nm_usuario		= nm_usuario_p,
		dt_atualizacao		= clock_timestamp()
	where	nr_atendimento		= nr_atendimento_p;
elsif (ie_opcao_p = 'FCPMP') then
	update	atendimento_paciente
	set	dt_chegada_medic	= clock_timestamp(),
		nm_usuario		= nm_usuario_p,
		dt_atualizacao		= clock_timestamp()
	where	nr_atendimento		= nr_atendimento_p;
elsif (ie_opcao_p = 'CP') or (ie_opcao_p = 'CPR')
        and (ie_opcao_p <> 'TL') then
	begin
	if (ie_opcao_p = 'CPR') then
		update	atendimento_paciente
		set	dt_chamada_reavaliacao	= clock_timestamp(),
			dt_inicio_reavaliacao	 = NULL,
			dt_fim_reavaliacao	 = NULL,
			nr_seq_local_pa		= nr_seq_local_orig_w,
			cd_medico_chamado	= cd_medico_p,
			nm_usuario		= nm_usuario_p,
			dt_atualizacao		= clock_timestamp()
		where	nr_atendimento		= nr_atendimento_p;
	else
		update	atendimento_paciente
		set	dt_chamada_paciente	= clock_timestamp(),
			nr_seq_local_pa		= nr_seq_local_orig_w,
			cd_medico_chamado	= cd_medico_p,
			nm_usuario		= nm_usuario_p,
			dt_atualizacao		= clock_timestamp(),
			ie_chamado 		= 'S'
		where	nr_atendimento		= nr_atendimento_p;
		
		if (coalesce(ie_html_p,'N') = 'S') then
		
			select	count(*)
			into STRICT	qt_agenda_w
			from	agenda_consulta_v2
			where	nr_atendimento = nr_atendimento_p;
			
			if (qt_agenda_w > 0) then
				update	agenda_Consulta
				set		ie_status_agenda = 'PH'
				where	nr_atendimento = nr_atendimento_p;
			end if;
		
		end if;
		
		/*
		if	(obter_funcao_ativa	= 281) then
			gerar_log_chamada_pa(	nr_atendimento_p,
						nr_seq_local_orig_w,
						nm_usuario_p);
		end if;
		
		*/
		
		
		
	end if;
	
	if (nr_seq_local_orig_w IS NOT NULL AND nr_seq_local_orig_w::text <> '') then
		CALL Gerar_Transferencia_local_pa(	nr_atendimento_p,
										nr_seq_local_orig_w,
										nm_usuario_p);
	end if;
	
	if (ie_cancelar_chamadas_w	= 'S') then
		begin
		update	atendimento_paciente
		set	dt_chamada_paciente	 = NULL,
			cd_medico_chamado	 = NULL,
			dt_chamada_reavaliacao   = NULL,
			nm_usuario		= nm_usuario_p,
			dt_atualizacao		= clock_timestamp()
		where	cd_medico_chamado	= cd_medico_p
		and	((dt_chamada_paciente IS NOT NULL AND dt_chamada_paciente::text <> '') or (dt_chamada_reavaliacao IS NOT NULL AND dt_chamada_reavaliacao::text <> ''))
		--and	dt_atend_medico	is null
		and	nr_atendimento	<>	nr_atendimento_p
		and	dt_entrada >= (clock_timestamp() - (coalesce(qt_hora_p,24) / 24))
		and	coalesce(dt_alta::text, '') = '';
		end;
	end if;

  if (ie_cancelar_chamadas_w	= 'G') then
		begin
		update	atendimento_paciente
		set	dt_chamada_paciente	 = NULL,
			nr_seq_local_pa		 = NULL,
			cd_medico_chamado	 = NULL,
			nm_usuario		= nm_usuario_p,
			dt_atualizacao		= clock_timestamp(),
			ie_chamado		 = NULL
		where	cd_medico_chamado	= cd_medico_p
		and	((dt_chamada_paciente IS NOT NULL AND dt_chamada_paciente::text <> '') or (dt_chamada_reavaliacao IS NOT NULL AND dt_chamada_reavaliacao::text <> ''))
		and	nr_atendimento	<>	nr_atendimento_p
		and	dt_entrada >= (clock_timestamp() - (coalesce(qt_hora_p,24) / 24))
		and	coalesce(dt_alta::text, '') = '';
		end;
	end if;
	
	end;
elsif (ie_opcao_p = 'CCP') or (ie_opcao_p = 'CCPR')
	or (ie_opcao_p = 'CCPC') then  
	begin
		
	if (ie_opcao_p = 'CCPR') then
		update	atendimento_paciente
		set	dt_chamada_reavaliacao	 = NULL,
			nr_seq_local_pa		 = NULL,
			cd_medico_chamado	 = NULL,
			nm_usuario		= nm_usuario_p,
			dt_atualizacao		= clock_timestamp(),
			ie_chamado		 = NULL
		where	nr_atendimento		= nr_atendimento_p;
	elsif (ie_opcao_p = 'CCPC') then
	
	
		
		update	atendimento_paciente
		set	dt_chamada_reavaliacao	 = NULL,
			dt_chamada_paciente	 = NULL,
			dt_chamada_enfermagem	 = NULL,
			nr_seq_local_pa		 = NULL,
			cd_medico_chamado	 = NULL,
			nm_usuario		= nm_usuario_p,
			dt_atualizacao		= clock_timestamp(),
			ie_chamado		= 'C'
		where	nr_atendimento		= nr_atendimento_p;
		
		
		
		
	else
		if (ie_opcao_p = 'CCP') then
		
		select	nr_seq_local_pa
		into STRICT	nr_seq_local_w
		from	atendimento_paciente
		where	nr_atendimento = nr_atendimento_p;
		
		update	historico_localizacao_pa
		set	dt_saida_local = clock_timestamp()
		where	nr_seq_local_destino_pa	= nr_seq_local_w
		and	nr_atendimento		= nr_atendimento_p
		and	coalesce(dt_saida_local::text, '') = '';
		
		end if;
		
		update	atendimento_paciente
		set	dt_chamada_paciente	 = NULL,
			nr_seq_local_pa		 = NULL,
			cd_medico_chamado	 = NULL,
			nm_usuario		= nm_usuario_p,
			dt_atualizacao		= clock_timestamp(),
			ie_chamado		 = NULL
		where	nr_atendimento		= nr_atendimento_p;
		
		if (coalesce(ie_html_p,'N') = 'S') then
		
			select	count(*)
			into STRICT	qt_agenda_w
			from	agenda_consulta_v2
			where	nr_atendimento = nr_atendimento_p;
			
			if (qt_agenda_w > 0) then
				update	agenda_Consulta
				set		ie_status_agenda = 'AT'
				where	nr_atendimento = nr_atendimento_p;
			end if;
			
		end if;
		
	end if;
	
	
	if (ie_opcao_p	= 'CCPC') or (ie_opcao_p	= 'CCP') then
	
		qt_chamados_minimos_w := Obter_param_Usuario(935, 136, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, qt_chamados_minimos_w);
		select	count(*)
		into STRICT	qt_chamados_w
		from	log_chamada_pa
		where	nr_atendimento	= nr_atendimento_p
		and	coalesce(IE_CHAMADO,'N')	= 'N';
		if	((qt_chamados_minimos_w	= 0) or (qt_chamados_w	>= qt_chamados_minimos_w)) then
			update	atendimento_paciente
			set	ie_chamado		= 'X'
			where	nr_atendimento		= nr_atendimento_p;
		end if;
			
	end if;
	
	end;
elsif (ie_opcao_p = 'CPENF') then
	begin
	update	atendimento_paciente
	set	dt_chamada_paciente = clock_timestamp()
	where	nr_atendimento = nr_atendimento_p;
	
	select	nr_seq_local_pa
	into STRICT	nr_seq_local_w
	from	atendimento_paciente
	where	nr_atendimento = nr_atendimento_p;
	
	CALL gerar_log_chamada_pa(	nr_atendimento_p,
				nr_seq_local_w,
				nm_usuario_p);
	end;
elsif (ie_opcao_p = 'TL') then
	begin
	update	atendimento_paciente
	set	nr_seq_local_pa = nr_seq_local_orig_w
	where	nr_atendimento = nr_atendimento_p;
	
	if (nr_seq_local_orig_w IS NOT NULL AND nr_seq_local_orig_w::text <> '') then
	
	CALL Gerar_Transferencia_local_pa(	nr_atendimento_p,
					nr_seq_local_orig_w,
					nm_usuario_p	);
			
	end if;
	
	select	nr_seq_local_pa
	into STRICT	nr_seq_local_w
	from	atendimento_paciente
	where	nr_atendimento = nr_atendimento_p;
	
	CALL gerar_log_chamada_pa(	nr_atendimento_p,
				nr_seq_local_w,
				nm_usuario_p);
	
	end;
end if;

select	CASE WHEN coalesce(max(dt_chamada_paciente)::text, '') = '' THEN 'N'  ELSE 'S' END
into STRICT	ie_pac_chamado_w
from	atendimento_paciente
where	nr_seq_local_pa		= nr_seq_local_orig_w
and	cd_medico_chamado	= cd_medico_p
and	nr_atendimento		= nr_atendimento_p;

if (ie_finaliza_consulta_w = 'F') and (ie_pac_chamado_w = 'S') then
	CALL gerar_fim_consulta_medico(cd_medico_p,qt_hora_p);
end if;

CALL gerar_status_processo_pa(nr_seq_local_orig_w, nr_atendimento_p);

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE chamada_paciente_pa ( nr_atendimento_p bigint, nr_seq_local_p bigint, cd_medico_p text, ie_opcao_p text, qt_hora_p bigint, nm_usuario_p text, nr_seq_depar_to_life_p bigint default 0, ie_html_p text default null) FROM PUBLIC;

