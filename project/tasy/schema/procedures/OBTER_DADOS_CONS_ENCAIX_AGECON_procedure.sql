-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE obter_dados_cons_encaix_agecon ( cd_agenda_p bigint, cd_pessoa_fisica_p text, dt_referencia_p timestamp, cd_medico_p bigint, nr_sessao_atual_p bigint, nr_sessao_total_p bigint, qt_dias_p bigint, ds_msg_abort_p INOUT text, ds_perg_encaixe_p INOUT text, ds_msg_qt_sessoes_p INOUT text, ds_perg_sem_turno_p INOUT text) AS $body$
DECLARE

 
ie_perm_agendar_classif_w	varchar(80);
ie_encaixe_bloqueio_w	varchar(1);
ie_encaixe_valido_w		varchar(255);
ie_item_encaixe_valido_w	smallint;
ds_lista_dia_encaixe_w	varchar(2000);
ds_dia_encaixe_w		varchar(255);


BEGIN 
 
if (cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') then 
	begin 
	select	substr(obter_se_perm_pf_classif(866, cd_agenda_p, cd_pessoa_fisica_p, dt_referencia_p,'DS'), 1,80) 
	into STRICT	ie_perm_agendar_classif_w 
	;
 
	if (ie_perm_agendar_classif_w IS NOT NULL AND ie_perm_agendar_classif_w::text <> '') then 
		begin 
		ds_msg_abort_p	:= substr(obter_texto_tasy(47595, wheb_usuario_pck.get_nr_seq_idioma),1,255);
		ds_msg_abort_p	:= replace(ds_msg_abort_p, '#@IE_PERM_AGENDAR_CLASSIF#@', ie_perm_agendar_classif_w);
		end;
	end if;
	end;
end if;
 
if (cd_medico_p IS NOT NULL AND cd_medico_p::text <> '') and (coalesce(ds_msg_abort_p::text, '') = '') then 
	begin 
	select	substr(obter_se_encaixe_bloqueio(cd_medico_p, cd_agenda_p), 1,1) 
	into STRICT	ie_encaixe_bloqueio_w 
	;
 
	if (ie_encaixe_bloqueio_w = 'S') then 
		ds_msg_abort_p	:= substr(obter_texto_tasy(49106, wheb_usuario_pck.get_nr_seq_idioma),1,255);
	end if;
	end;
end if;
 
if (coalesce(ds_msg_abort_p::text, '') = '') then 
	begin 
	ds_perg_encaixe_p	:= substr(obter_texto_tasy(49120, wheb_usuario_pck.get_nr_seq_idioma),1,255);
 
	if (nr_sessao_atual_p > nr_sessao_total_p) then 
		ds_msg_qt_sessoes_p	:= substr(obter_texto_tasy(49131, wheb_usuario_pck.get_nr_seq_idioma),1,255);
	else 
		begin 
		select	substr(obter_se_encaixe_valido(cd_agenda_p, dt_referencia_p, qt_dias_p), 1,255) 
		into STRICT	ie_encaixe_valido_w 
		;
 
		if (ie_encaixe_valido_w IS NOT NULL AND ie_encaixe_valido_w::text <> '') then 
			begin 
			while (ie_encaixe_valido_w IS NOT NULL AND ie_encaixe_valido_w::text <> '') loop 
				begin 
				ie_item_encaixe_valido_w	:= substr(ie_encaixe_valido_w, 1, 1);
				ie_encaixe_valido_w		:= substr(ie_encaixe_valido_w, 3, length(ie_encaixe_valido_w));
 
				select	substr(obter_valor_dominio(35, ie_item_encaixe_valido_w), 1,255) 
				into STRICT	ds_dia_encaixe_w 
				;
 
				ds_lista_dia_encaixe_w	:= ds_lista_dia_encaixe_w || ',' || ds_dia_encaixe_w;
				end;
			end loop;
			ds_perg_sem_turno_p	:= substr(obter_texto_tasy(49127, wheb_usuario_pck.get_nr_seq_idioma),1,255);
			ds_perg_sem_turno_p	:= replace(ds_perg_sem_turno_p, '#@DS_DIA_ENCAIXE#@', substr(ds_lista_dia_encaixe_w, 2, length(ds_lista_dia_encaixe_w)));
			end;
		end if;
		end;
	end if;	
	end;
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE obter_dados_cons_encaix_agecon ( cd_agenda_p bigint, cd_pessoa_fisica_p text, dt_referencia_p timestamp, cd_medico_p bigint, nr_sessao_atual_p bigint, nr_sessao_total_p bigint, qt_dias_p bigint, ds_msg_abort_p INOUT text, ds_perg_encaixe_p INOUT text, ds_msg_qt_sessoes_p INOUT text, ds_perg_sem_turno_p INOUT text) FROM PUBLIC;

