-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE troca_local_paciente_pa (nr_Seq_local_pa_p bigint, nr_atendimento_p bigint, qt_tempo_previsto_p bigint, nm_usuario_p text, ds_observacao_p text, ds_erro_p INOUT text, ie_abort_p text default null) AS $body$
DECLARE

					
var_descricao_w		varchar(255);
ds_erro_w		varchar(255);
ie_tempo_w		varchar(1);
nr_sequencia_w		bigint;
qt_regras_w		bigint;
nr_sequencia_ww		bigint;
dt_alta_w			timestamp;
NR_SEQ_PROCESSO_w	pa_local.NR_SEQ_PROCESSO%type;
NR_SEQ_STATUS_w		pa_local.NR_SEQ_STATUS%type;
					

BEGIN

ds_erro_w	:= '';
	
select 	coalesce(max(ie_tempo),'N'),
		max(NR_SEQ_PROCESSO),
		max(NR_SEQ_STATUS)
into STRICT	ie_tempo_w,
		NR_SEQ_PROCESSO_w,
		NR_SEQ_STATUS_w
from	pa_local
where	nr_sequencia = nr_Seq_local_pa_p;

if (ie_tempo_w = 'S') and (coalesce(qt_tempo_previsto_p,0) = 0) then
	ds_erro_w	:= wheb_mensagem_pck.get_texto(279590);
end if;

select 	dt_alta
into STRICT	dt_alta_w
from   	atendimento_paciente
where 	nr_atendimento = nr_atendimento_p;

if (dt_alta_w IS NOT NULL AND dt_alta_w::text <> '') then
	ds_erro_w	:= wheb_mensagem_pck.get_texto(294625);
end if;

if (coalesce(ds_erro_w::text, '') = '') then

	if (coalesce(qt_tempo_previsto_p,0) > 0) then
		
		update 	atendimento_paciente
		set 	dt_saida_prev_loc_pa 	= clock_timestamp()+(qt_tempo_previsto_p/1440),
			nr_seq_local_pa 	= nr_Seq_local_pa_p,
			nm_usuario		= nm_usuario_p
		where	nr_atendimento 		= nr_atendimento_p;
	else
		update 	atendimento_paciente
		set 	dt_saida_prev_loc_pa 	 = NULL,
			nr_seq_local_pa 	= nr_Seq_local_pa_p,
			nm_usuario		= nm_usuario_p
		where	nr_atendimento 		= nr_atendimento_p;
	end if;
	
	select	max(nr_sequencia)
	into STRICT	nr_sequencia_w
	from	HISTORICO_LOCALIZACAO_PA
	where	nr_Atendimento	= nr_atendimento_p;
	
	update	HISTORICO_LOCALIZACAO_PA
	set	ds_observacao	= ds_observacao_p
	where	nr_sequencia	= nr_sequencia_w;
	
	CALL GERAR_TRANSFERENCIA_LOCAL_PA(nr_atendimento_p,nr_Seq_local_pa_p,nm_usuario_p);
	
	select 	count(*)
	into STRICT	qt_regras_w
	from 	regra_lanc_automatico
	where	coalesce(ie_situacao,'I') = 'A'
	and 	nr_seq_evento = 472;
	
	if (qt_regras_w > 0) then
	
		select	max(nr_sequencia)
		into STRICT	nr_sequencia_ww
		from	historico_localizacao_pa
		where	nr_Atendimento	= nr_atendimento_p
		and	nr_sequencia	<> nr_sequencia_w
		and 	(dt_saida_local IS NOT NULL AND dt_saida_local::text <> '');
		
		if (nr_sequencia_ww IS NOT NULL AND nr_sequencia_ww::text <> '') or (nr_sequencia_ww > 0) then
			CALL gerar_lancamento_automatico(nr_atendimento_p,null,472,nm_usuario_p,null,nr_sequencia_ww,null,null,null,null);
		end if;
		
	end if;
	
	if (COALESCE(NR_SEQ_PROCESSO_w,0) > 0) then
	
		CALL alterar_status_pa_atend(NR_SEQ_PROCESSO_w,nr_atendimento_p,NR_SEQ_STATUS_w);	
	
	end if;
	
	if (OBTER_PARAM_USUARIO_LOGADO(281, 1665) = 'S') then
	  CALL gerar_ajustes_ap_lote('M', nr_atendimento_p, nm_usuario_p);
	end if;
end if;	

if (ie_abort_p IS NOT NULL AND ie_abort_p::text <> '') and (ie_abort_p = 'S') and (ds_erro_w IS NOT NULL AND ds_erro_w::text <> '') then
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(ds_erro_w);
end if;

ds_erro_p := ds_erro_w;

commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE troca_local_paciente_pa (nr_Seq_local_pa_p bigint, nr_atendimento_p bigint, qt_tempo_previsto_p bigint, nm_usuario_p text, ds_observacao_p text, ds_erro_p INOUT text, ie_abort_p text default null) FROM PUBLIC;

