-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ctb_atualizar_conta_ref ( cd_conta_contabil_p text, ie_operacao_p bigint, nm_tabela_p text, nm_usuario_p text, cd_classificacao_p conta_contabil_classif.cd_classificacao%type DEFAULT null) AS $body$
DECLARE


cd_grupo_w		conta_contabil.cd_grupo%type;
conta_contabil_w		conta_contabil%rowtype;
conta_contabil_classif_w	conta_contabil_classif%rowtype;

c01 CURSOR FOR
SELECT	c.cd_conta_contabil,
	c.cd_empresa
from 	conta_contabil c
where 	c.cd_conta_referencia = cd_conta_contabil_p;
--OS 1969665 - Nao estava inativando e ativando os filhos.

--and 	c.ie_situacao = 'A';
c02 CURSOR FOR
SELECT	c.cd_conta_contabil
from	conta_contabil c
where	c.cd_conta_referencia = cd_conta_contabil_p
and	c.ie_situacao = 'A'
and	exists (SELECT	2
		from	conta_contabil_classif f
		where	c.cd_conta_contabil = f.cd_conta_contabil);

c03 CURSOR FOR
SELECT	f.*
from	conta_contabil_classif f
where	f.cd_conta_contabil 	= cd_conta_contabil_p
and	f.cd_classificacao 		= cd_classificacao_p;

  vet RECORD;
BEGIN

select	c.*
into STRICT 	conta_contabil_w
from 	conta_contabil c
where 	c.cd_conta_contabil = cd_conta_contabil_p;

if (nm_tabela_p = 'CONTA_CONTABIL')  then
	begin

	if (ie_operacao_p = 1) then
		begin
		for vet in (	select	a.cd_empresa
				from	grupo_emp_estrutura a
				where	a.nr_seq_grupo	= holding_pck.GET_GRUPO_EMP_USUARIO(conta_contabil_w.cd_empresa)
				and	obter_se_periodo_vigente(a.dt_inicio_vigencia,a.dt_fim_vigencia,clock_timestamp()) = 'S'
				and	a.cd_empresa	!= conta_contabil_w.cd_empresa
				and	not exists (select	1
						   from		conta_contabil y
						   where	y.cd_empresa	= a.cd_empresa
						   and		y.cd_conta_referencia	= cd_conta_contabil_p)) loop
			begin

			select	max(a.cd_grupo)
			into STRICT	cd_grupo_w
			from	ctb_grupo_conta a
			where	cd_empresa	= vet.cd_empresa
			and	a.cd_grupo_ref	= conta_contabil_w.cd_grupo;

			if (coalesce(cd_grupo_w::text, '') = '') then
				select	max(a.cd_grupo)
				into STRICT	cd_grupo_w
				from	ctb_grupo_conta a
				where	a.ie_tipo	= (SELECT	y.ie_tipo
							   from		ctb_grupo_conta y
							   where	y.cd_grupo	= conta_contabil_w.cd_grupo);
			end if;

			conta_contabil_w.cd_conta_contabil 	:= substr(vet.cd_empresa || '.' || cd_conta_contabil_p,1,20);
			conta_contabil_w.cd_conta_referencia 	:= cd_conta_contabil_p;

			select	max(bb.cd_centro_custo)
			into STRICT	conta_contabil_w.cd_centro_custo
			from	centro_custo bb,
				grupo_emp_estrutura g,
				estabelecimento e
			where	bb.cd_estabelecimento = e.cd_estabelecimento
			and	g.cd_empresa		= e.cd_empresa
			and	g.cd_empresa		= vet.cd_empresa
			and	bb.cd_centro_custo_ref 	= conta_contabil_w.cd_centro_custo;

			select 	ctb_obter_classif_conta(	conta_contabil_w.cd_conta_contabil,
							conta_contabil_w.cd_classificacao,
							null)
			into STRICT	conta_contabil_w.cd_classificacao
			;

			select 	ctb_obter_classif_conta(	conta_contabil_w.cd_conta_contabil,
							conta_contabil_w.cd_classificacao,
							clock_timestamp())
			into STRICT	conta_contabil_w.cd_classificacao_atual
			;

			select 	ctb_obter_classif_conta_sup(
					conta_contabil_w.cd_classificacao,
					clock_timestamp(),
					vet.cd_empresa)
			into STRICT	conta_contabil_w.cd_classif_superior
			;

			select 	ctb_obter_classif_conta_sup(
					conta_contabil_w.cd_classificacao,
					clock_timestamp(),
					vet.cd_empresa)
			into STRICT	conta_contabil_w.cd_classif_superior_atual
			;

			if (coalesce(conta_contabil_w.nr_seq_crit_rateio, 0) > 0)	then
				conta_contabil_w.nr_seq_crit_rateio := null;
			end if;

			conta_contabil_w.cd_empresa	:= vet.cd_empresa;
			conta_contabil_w.cd_grupo		:= cd_grupo_w;
			insert into conta_contabil values (conta_contabil_w.*);
			end;
		end loop;
		end;
	elsif (ie_operacao_p = 2) then
		begin
		for vet in c01 loop
			begin
			select	max(bb.cd_centro_custo)
			into STRICT	conta_contabil_w.cd_centro_custo
			from	centro_custo bb,
					grupo_emp_estrutura g,
					estabelecimento e
			where	bb.cd_estabelecimento = e.cd_estabelecimento
			and		g.cd_empresa		  = e.cd_empresa
			and		g.cd_empresa		  = vet.cd_empresa
			and		bb.cd_centro_custo_ref = conta_contabil_w.cd_centro_custo;

			select  max(a.cd_grupo)
            		into STRICT    conta_contabil_w.cd_grupo
            		from    ctb_grupo_conta a
            		where	a.cd_empresa = vet.cd_empresa
            		and     a.cd_grupo_ref  = (SELECT b.cd_grupo
                                        	from conta_contabil b
                                        	where b.cd_conta_contabil = cd_conta_contabil_p);

			select 	ctb_obter_classif_conta(	conta_contabil_w.cd_conta_contabil,
							conta_contabil_w.cd_classificacao,
							null)
			into STRICT	conta_contabil_w.cd_classificacao
			;

			select 	ctb_obter_classif_conta(	conta_contabil_w.cd_conta_contabil,
							conta_contabil_w.cd_classificacao,
							clock_timestamp())
			into STRICT	conta_contabil_w.cd_classificacao_atual
			;

			/*select 	ctb_obter_classif_conta_sup(
					conta_contabil_w.cd_classificacao,
					sysdate,
					vet.cd_empresa
					)
			into	conta_contabil_w.cd_classif_superior
			from dual;

			select 	ctb_obter_classif_conta_sup(
					conta_contabil_w.cd_classificacao,
					sysdate,
					vet.cd_empresa)
			into	conta_contabil_w.cd_classif_superior_atual
			from dual;
			*/
			update	conta_contabil
			set 	ie_situacao		= conta_contabil_w.ie_situacao,
				ds_conta_contabil		= conta_contabil_w.ds_conta_contabil,
				ie_centro_custo 		= conta_contabil_w.ie_centro_custo,
				ie_tipo 			= conta_contabil_w.ie_tipo,
				cd_classificacao 		= conta_contabil_w.cd_classificacao,
				cd_grupo 		= conta_contabil_w.cd_grupo,
				cd_centro_custo		= conta_contabil_w.cd_centro_custo,
				--cd_conta_contabil_ref 	= conta_contabil_w.cd_conta_contabil_ref,
				nr_seq_crit_rateio 		= conta_contabil_w.nr_seq_crit_rateio,
				cd_plano_ans		= conta_contabil_w.cd_plano_ans,
				ds_orientacao		= conta_contabil_w.ds_orientacao,
				ie_compensacao 		= conta_contabil_w.ie_compensacao,
				ie_versao_ans 		= conta_contabil_w.ie_versao_ans,
				cd_classificacao_atual 	= conta_contabil_w.cd_classificacao_atual,
				cd_classif_superior 		= conta_contabil_w.cd_classif_superior,
				cd_classif_ecd		= conta_contabil_w.cd_classif_ecd,
				cd_classif_superior_atual 	= conta_contabil_w.cd_classif_superior_atual,
				ie_natureza_sped 		= conta_contabil_w.ie_natureza_sped,
				cd_sistema_contabil 	= conta_contabil_w.cd_sistema_contabil,
				dt_inicio_vigencia 		= conta_contabil_w.dt_inicio_vigencia,
				dt_fim_vigencia 		= conta_contabil_w.dt_fim_vigencia,
				ie_diops           		= conta_contabil_w.ie_diops,
				ie_deducao_acomp_orc 	= conta_contabil_w.ie_deducao_acomp_orc,
				ie_ecd_reg_bp 		= conta_contabil_w.ie_ecd_reg_bp,
				ie_ecd_reg_dre 		= conta_contabil_w.ie_ecd_reg_dre,
				ie_intercompany		= conta_contabil_w.ie_intercompany,
				nm_usuario 		= nm_usuario_p,
				dt_atualizacao 		= clock_timestamp()
			where 	cd_conta_contabil 		= vet.cd_conta_contabil;
			end;
		end loop;
		end;
	end if;
	end;
elsif (nm_tabela_p	= 'CONTA_CONTABIL_CLASSIF') then
	begin

	open c03;
	loop
	fetch c03 into conta_contabil_classif_w;
	EXIT WHEN NOT FOUND; /* apply on c03 */
		if (ie_operacao_p = 1) then
			begin
			/*for vet in (	select	a.cd_empresa
					from	grupo_emp_estrutura a
					where	a.nr_seq_grupo	= holding_pck.GET_GRUPO_EMP_USUARIO(conta_contabil_w.cd_empresa)
					and	obter_se_periodo_vigente(a.dt_inicio_vigencia,a.dt_fim_vigencia,sysdate) = 'S'
					and	a.cd_empresa	!= conta_contabil_w.cd_empresa
					and exists(select	1
							   from		conta_contabil y
							   where	y.cd_empresa	= a.cd_empresa
							   and		y.cd_conta_referencia	= cd_conta_contabil_p)) loop
				begin*/
 --OS 1969726 - Duplicava linhas na tabela conta_contabil_classif
				for cod in c01 loop
				begin

					conta_contabil_classif_w.cd_conta_contabil	:= substr(cod.cd_conta_contabil,1,20);

					select	nextval('conta_contabil_classif_seq')
					into STRICT	conta_contabil_classif_w.nr_sequencia
					;

					conta_contabil_classif_w.dt_atualizacao 	:= clock_timestamp();
					conta_contabil_classif_w.nm_usuario		:= nm_usuario_p;
					conta_contabil_classif_w.dt_atualizacao_nrec 	:= clock_timestamp();
					conta_contabil_classif_w.nm_usuario_nrec	:= nm_usuario_p;

					insert into conta_contabil_classif values (conta_contabil_classif_w.*);
				end;
				end loop;

			end;
			/*end loop;
			end;*/

		/*elsif	(ie_operacao_p = 2) then
		for vet in c02 loop
			begin
			update	conta_contabil_classif
			set
				cd_classificacao 	= conta_contabil_classif_w.cd_classificacao,
				cd_classif_superior	= conta_contabil_classif_w.cd_classif_superior,
				dt_inicio_vigencia 	= conta_contabil_classif_w.dt_inicio_vigencia,
				dt_fim_vigencia 	= conta_contabil_classif_w.dt_fim_vigencia,
				nm_usuario 		= nm_usuario_p,
				dt_atualizacao 		= sysdate
			where 	cd_conta_contabil 	= vet.cd_conta_contabil;
			end;
		end loop;*/
--OS 1969665 - Removido pois alterava outras classificacoes.
		end if;
	end loop;
	end;
end if;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_atualizar_conta_ref ( cd_conta_contabil_p text, ie_operacao_p bigint, nm_tabela_p text, nm_usuario_p text, cd_classificacao_p conta_contabil_classif.cd_classificacao%type DEFAULT null) FROM PUBLIC;

