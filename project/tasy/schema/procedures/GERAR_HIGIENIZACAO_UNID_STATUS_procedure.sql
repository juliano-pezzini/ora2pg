-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_higienizacao_unid_status ( dt_servico_p timestamp, nm_usuario_p text, cd_estabelecimento_p bigint, ie_evento_p text, nr_seq_interno_p bigint, ie_status_unidade_old_p text, ie_status_unidade_new_p text, cd_setor_atendimento_p bigint, nr_seq_serv_sup_p bigint default null, nr_seq_regra_p bigint default null, ie_higienizacao_p text default 'S') AS $body$
DECLARE


/* Utilizada na Trigger UNIDADE_ATENDIMENTO_UPDATE */

						
nr_seq_servico_w		bigint;
ie_dia_semana_w			smallint;
dt_prevista_w			timestamp;
nr_seq_unidade_w		bigint;
cd_setor_atendimento_w		integer;
ie_status_unidade_w		varchar(3);
ie_executor_w			varchar(15);
ie_cancela_alta_w		varchar(1);
qt_minuto_adic_w		bigint;
cd_estabelecimento_w		bigint;
dt_interdicao_w			timestamp;
ie_atualizar_data_iterd_w	varchar(3);
qt_horas_novo_servico_w		smallint;
ie_gerar_servico_w		varchar(1);
nr_seq_regra_servico_w		bigint;
nr_sequencia_w			bigint;
cd_classif_setor_w		varchar(2);
ie_status_leito_destino_w	varchar(15);
ie_gerou_novo_reg_w		varchar(1);
ie_possui_servico_w		bigint;
ie_gerar_alteracao_status_w	varchar(1);
nr_prioridade_w			smallint;

c01 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.nr_seq_servico,
		to_date(to_char(dt_servico_p,'dd/mm/yyyy') || ' ' || to_char(coalesce(a.dt_prevista,clock_timestamp()),'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss'),
		coalesce(qt_minuto_adic,0),
		a.ie_atualizar_data_iterd,
		coalesce(qt_horas_novo_servico,0)
	from	sl_servico b,
		sl_regra_servico a
	where	((a.nr_seq_unidade = nr_seq_unidade_w) or (coalesce(a.nr_seq_unidade::text, '') = ''))
	and 	obter_se_unid_regra(a.nr_sequencia, nr_seq_unidade_w) = 'S'
	and	((a.cd_setor_atendimento = cd_setor_atendimento_w) or (coalesce(a.cd_setor_atendimento::text, '') = ''))
	and	((a.cd_classif_setor = cd_classif_setor_w) or (coalesce(a.cd_classif_setor::text, '') = ''))
	and	((a.ie_status_leito = ie_status_unidade_old_p) or (coalesce(a.ie_status_leito::text, '') = ''))
	and	((a.ie_status_leito_destino = ie_status_unidade_new_p) or (coalesce(a.ie_status_leito_destino::text, '') = ''))
	and	((coalesce(a.ie_dia_semana::text, '') = '') or (a.ie_dia_semana = ie_dia_semana_w) or
		 (a.ie_dia_semana = 9 AND ie_dia_semana_w between 2 and 6))
	and	((a.nr_dia_mes = campo_numerico(to_char(ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_servico_p),'dd'))) or (coalesce(a.nr_dia_mes::text, '') = ''))
	and	((ie_higienizacao_p <> 'N') or (coalesce(a.ie_considera_estrutura, 'N') = 'N'))	
	and	a.ie_evento = ie_evento_p
	and	a.cd_estabelecimento = cd_estabelecimento_w
	and	a.nr_seq_servico = b.nr_sequencia
	and	obter_se_gerar_regra_serv(a.dt_inicio_frequencia, a.ie_frequencia, dt_servico_p) = 'S'
	and	b.ie_situacao = 'A'
	and	((a.nr_seq_servico_superior = nr_seq_serv_sup_p) or (a.ie_evento <> 'TS'))
	and	((a.nr_sequencia = nr_seq_regra_p) or (coalesce(nr_seq_regra_p::text, '') = ''))
	and	coalesce(a.nr_prioridade_regra,0) = nr_prioridade_w
	and	((ie_status_unidade_new_p <> 'P') or (Verifica_estadia_higienizacao(0, nr_seq_unidade_w, a.qt_estadia_leito) = 'S'))
	and not exists (SELECT  1 
	                        from    sl_regra_servico_excecao x 
		        where  x.cd_setor_atendimento = cd_setor_atendimento_w
		        and     x.nr_seq_sl_regra_servico = a.nr_sequencia);

--pragma autonomous_transaction;
	

BEGIN

cd_estabelecimento_w := coalesce(cd_estabelecimento_p, obter_estabelecimento_ativo);

select	max(cd_classif_setor)
into STRICT	cd_classif_setor_w
from	setor_atendimento c
where	c.cd_setor_atendimento = cd_setor_atendimento_p;

nr_seq_unidade_w 	:= nr_seq_interno_p;
cd_setor_atendimento_w 	:= cd_setor_atendimento_p;

insert into log_mov(nm_usuario,
		dt_atualizacao,
		cd_log,
		ds_log)
values (nm_usuario_p,
		clock_timestamp(),
		8805,
		substr('1 - nr_seq_serv_sup_p: ' || nr_seq_serv_sup_p || chr(13) ||
				'nr_seq_unidade_w: ' || nr_seq_unidade_w || chr(13) ||
				'cd_setor_atendimento_w: ' || cd_setor_atendimento_w || chr(13) ||
				'dt_servico_p: ' || dt_servico_p || chr(13) ||
				'nr_seq_regra_p:' || nr_seq_regra_p || chr(13) ||
				'ie_evento_p: ' || ie_evento_p || 
				'objeto: GERAR_HIGIENIZACAO_UNID_STATUS',1,2000));

select 	pkg_date_utils.get_WeekDay(dt_servico_p)
into STRICT	ie_dia_semana_w
;

if (nr_seq_unidade_w IS NOT NULL AND nr_seq_unidade_w::text <> '') then


	select	coalesce(max(a.nr_prioridade_regra),0)
	into STRICT	nr_prioridade_w
	from	sl_servico b,
		sl_regra_servico a
	where	((a.nr_seq_unidade = nr_seq_unidade_w) or (coalesce(a.nr_seq_unidade::text, '') = ''))
	and 	obter_se_unid_regra(a.nr_sequencia, nr_seq_unidade_w) = 'S'
	and	((a.cd_setor_atendimento = cd_setor_atendimento_w) or (coalesce(a.cd_setor_atendimento::text, '') = ''))
	and	((a.cd_classif_setor = cd_classif_setor_w) or (coalesce(a.cd_classif_setor::text, '') = ''))
	and	((a.ie_status_leito = ie_status_unidade_old_p) or (coalesce(a.ie_status_leito::text, '') = ''))
	and	((a.ie_status_leito_destino = ie_status_unidade_new_p) or (coalesce(a.ie_status_leito_destino::text, '') = ''))
	and	((coalesce(a.ie_dia_semana::text, '') = '') or (a.ie_dia_semana = ie_dia_semana_w) or
		 (a.ie_dia_semana = 9 AND ie_dia_semana_w between 2 and 6))
	and	((a.nr_dia_mes = campo_numerico(to_char(ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_servico_p),'dd'))) or (coalesce(a.nr_dia_mes::text, '') = ''))
	and	a.ie_evento = ie_evento_p
	and	a.cd_estabelecimento = cd_estabelecimento_w
	and	a.nr_seq_servico = b.nr_sequencia
	and	obter_se_gerar_regra_serv(a.dt_inicio_frequencia, a.ie_frequencia, dt_servico_p) = 'S'
	and	b.ie_situacao = 'A'
	and	((a.nr_seq_servico_superior = nr_seq_serv_sup_p) or (a.ie_evento <> 'TS'))
	and	((a.nr_sequencia = nr_seq_regra_p) or (coalesce(nr_seq_regra_p::text, '') = ''))
	and not exists (SELECT  1 
	                        from    sl_regra_servico_excecao x 
		        where  x.cd_setor_atendimento = cd_setor_atendimento_w
		        and     x.nr_seq_sl_regra_servico = a.nr_sequencia);
	
	open c01;
	loop
	fetch c01 into
		nr_seq_regra_servico_w,
		nr_seq_servico_w,
		dt_prevista_w,
		qt_minuto_adic_w,
		ie_atualizar_data_iterd_w,
		qt_horas_novo_servico_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		
			
		select	ie_executor,
			ie_cancela_alta
		into STRICT	ie_executor_w,
			ie_cancela_alta_w
		from	sl_servico
		where	nr_sequencia = nr_seq_servico_w;

		if (ie_cancela_alta_w = 'S') and (ie_evento_p = 'AP' or ie_evento_p = 'AR') then
			delete	from sl_unid_atend
			where	nr_seq_unidade = nr_seq_unidade_w
			and	nr_seq_servico = nr_seq_servico_w
			and	dt_prevista > dt_prevista_w;		
		end if;

		ie_gerar_servico_w := 'S';
	
		if (qt_horas_novo_servico_w > 0) then		
			
			select 	CASE WHEN count(*)=0 THEN 'S'  ELSE 'N' END
			into STRICT	ie_gerar_servico_w
			from	sl_unid_atend
			where	nr_seq_unidade = nr_seq_unidade_w
			and	nr_seq_servico = nr_seq_servico_w
			and	dt_prevista > (dt_prevista_w - (qt_horas_novo_servico_w/24))
			and	coalesce(dt_inicio::text, '') = '';		
			
		end if;
		
		if (ie_atualizar_data_iterd_w = 'S') then
			dt_interdicao_w := clock_timestamp();
		else
			dt_interdicao_w := null;	
		end if;
		
		ie_gerou_novo_reg_w := 'N';
		
		if (ie_gerar_servico_w = 'S') then
						
			select	nextval('sl_unid_atend_seq')
			into STRICT	nr_sequencia_w
			;
		
			select  count(*)
			into STRICT	ie_possui_servico_w
			from	sl_unid_atend
			where	ie_status_serv = 'P'
			and	nr_seq_unidade = nr_seq_unidade_w
			and	nr_seq_servico = nr_seq_servico_w
			and	dt_prevista between (dt_prevista_w - (15/86400)) and (dt_prevista_w);
			
			if (ie_evento_p = 'ASL') then
				select	CASE WHEN count(*)=0 THEN 'S'  ELSE 'N' END
				into STRICT	ie_gerar_alteracao_status_w
				from	sl_unid_atend
				where	nr_seq_unidade = nr_seq_unidade_w
				and		((dt_fim > (clock_timestamp() - (60/86400))) or 
						(dt_inicio > (clock_timestamp() - (60/86400))));
			end if;
			
			if (ie_possui_servico_w = 0) and (coalesce(ie_gerar_alteracao_status_w,'S') = 'S')then
				insert into sl_unid_atend(
					nr_sequencia,
					cd_estabelecimento,
					nr_seq_unidade,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					ie_status_serv,
					nr_seq_servico,
					dt_prevista,
					ie_executor,
					dt_interdicao,
					nm_usuario_interd,
					ie_evento,
					cd_setor_higienizacao)
				values (nr_sequencia_w,
					cd_estabelecimento_w,
					nr_seq_unidade_w,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					'P',
					nr_seq_servico_w,
					dt_prevista_w + (qt_minuto_adic_w / 1440),
					ie_executor_w,
					dt_interdicao_w,
					nm_usuario_p,
					ie_evento_p,
					cd_setor_atendimento_w);			
				
				
				ie_gerou_novo_reg_w := 'S';
			
				CALL gravar_historico_higienizacao(nm_usuario_p,ie_evento_p,nr_seq_regra_servico_w,nr_seq_servico_w,clock_timestamp(),cd_setor_atendimento_w,nr_sequencia_w);
			end if;
		end if;
		
		if (ie_gerou_novo_reg_w = 'N') then
		
			insert into log_mov(nm_usuario,
					dt_atualizacao,
					cd_log,
					ds_log)
			values (nm_usuario_p,
					clock_timestamp(),
					8805,
					substr('2 - nr_seq_serv_sup_p: ' || nr_seq_serv_sup_p || chr(13) ||
							'nr_seq_unidade_w: ' || nr_seq_unidade_w || chr(13) ||
							'cd_setor_atendimento_w: ' || cd_setor_atendimento_w || chr(13) ||
							'dt_servico_p: ' || dt_servico_p || chr(13) ||
							'nr_seq_regra_p:' || nr_seq_regra_p || chr(13) ||
							'ie_evento_p: ' || ie_evento_p || 
							'objeto: GERAR_HIGIENIZACAO_UNID_STATUS',1,2000));
			
		end if;
		
		
	end loop;
	close c01;

end if;

/* Utilizada na Trigger UNIDADE_ATENDIMENTO_UPDATE */

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_higienizacao_unid_status ( dt_servico_p timestamp, nm_usuario_p text, cd_estabelecimento_p bigint, ie_evento_p text, nr_seq_interno_p bigint, ie_status_unidade_old_p text, ie_status_unidade_new_p text, cd_setor_atendimento_p bigint, nr_seq_serv_sup_p bigint default null, nr_seq_regra_p bigint default null, ie_higienizacao_p text default 'S') FROM PUBLIC;

