-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_inserir_grupo_analise ( nr_seq_analise_p bigint, nr_seq_grupo_p bigint, ds_observacao_p text, nr_seq_grupo_atual_p bigint, ie_encaminhar_p text, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE


nm_grupo_w			varchar(255);
ie_status_w			varchar(255);
nr_seq_ordem_w			bigint;
nr_seq_ordem_ww			bigint;
nr_seq_grupo_w			bigint;
nr_seq_grupo_ww			bigint;
nr_seq_conta_w			bigint;
qt_grupo_ordem_w		integer;
dt_liberacao_w			timestamp;
ie_analise_cm_nova_w		varchar(1);
ds_observacao_w			varchar(32000);

C01 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_conta
	where	nr_seq_analise	= nr_seq_analise_p
	and 	ie_analise_cm_nova_w = 'N';


BEGIN

ds_observacao_w	:= substr(ds_observacao_p,1,4000);

begin
	select	ie_analise_cm_nova
	into STRICT	ie_analise_cm_nova_w
	from	pls_parametros
	where	cd_estabelecimento = cd_estabelecimento_p;
exception
when others then
	ie_analise_cm_nova_w := 'N';
end;

if (coalesce(ie_encaminhar_p, 'N') = 'S') then
	/*askono - Vai inserir o grupo auditor como próximo no fluxo após o ultimo grupo com analise encerrada -- solicitaçõa OS 402198 - UNIMED RIO PRETO*/

	/*Alterado para inserir o grupo auditor antes do grupo que está realizando a auditoria no fluxo da análise tratamento relizado levando em consideração a utilização da análise nova OS 547217 Diogo*/

	if (coalesce(ie_analise_cm_nova_w,'N') = 'N') then
		CALL pls_inserir_proximo_grupo_aud(nr_seq_analise_p, nr_seq_grupo_p, ds_observacao_w, nr_seq_grupo_atual_p,ie_encaminhar_p,nm_usuario_p, cd_estabelecimento_p);
	else
		pls_inserir_grupo_aud_nova(nr_seq_analise_p, nr_seq_grupo_p, ds_observacao_w, nr_seq_grupo_atual_p,ie_encaminhar_p,nm_usuario_p, cd_estabelecimento_p);
	end if;
else
	/*Quando é chamda das rotinas*/

	/*Obtem a maior ordem que existe na analise*/

	select	max(nr_seq_ordem)
	into STRICT	nr_seq_ordem_w
	from	pls_auditoria_conta_grupo
	where	nr_seq_analise = nr_seq_analise_p;

	/*Obtem se existe este mesmo grupo  na analise, com a  mesma ordem */

	select	max(nr_seq_grupo)
	into STRICT	nr_seq_grupo_ww
	from	pls_auditoria_conta_grupo
	where	nr_seq_analise	= nr_seq_analise_p
	and	nr_seq_ordem	= nr_seq_ordem_w
	and	nr_seq_grupo	= nr_seq_grupo_p;

	if (nr_seq_grupo_ww IS NOT NULL AND nr_seq_grupo_ww::text <> '') then
		nm_grupo_w	:= pls_obter_nome_grupo_auditor(nr_seq_grupo_p);

		--'O grupo '||nm_grupo_w||' já existe na análise com a ordem '||nr_seq_ordem_w||'. Não é possivel inserir um grupo sequencial a ele mesmo.'
		CALL wheb_mensagem_pck.exibir_mensagem_abort(181113,'NM_GRUPO_W=' || nm_grupo_w || ';NR_SEQ_ORDEM_W=' || nr_seq_ordem_w);
	end if;

	nr_seq_ordem_ww	:= coalesce(nr_seq_ordem_w, 0) + 1;

	select	nextval('pls_auditoria_conta_grupo_seq')
	into STRICT	nr_seq_grupo_w
	;

	insert into pls_auditoria_conta_grupo(nr_sequencia,
		nr_seq_analise,
		nr_seq_grupo,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_seq_ordem,
		ie_manual,
		ds_observacao)
	values (nr_seq_grupo_w,
		nr_seq_analise_p,
		nr_seq_grupo_p,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		nr_seq_ordem_ww,
		'S',
		ds_observacao_w);
end if;

update	pls_analise_conta
set	ie_auditoria	= 'S',
	dt_atualizacao  = clock_timestamp(),
	nm_usuario	= nm_usuario_p
where	nr_sequencia 	= nr_seq_analise_p;

select	max(ie_status)
into STRICT	ie_status_w
from	pls_analise_conta
where	nr_sequencia	= nr_seq_analise_p;

if (ie_status_w in ('L', 'S')) then
	CALL pls_alterar_status_analise_cta(nr_seq_analise_p, 'G', 'PLS_INSERIR_GRUPO_ANALISE', nm_usuario_p, cd_estabelecimento_p);

	commit;
end if;

open C01;
loop
fetch C01 into
	nr_seq_conta_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	update	pls_conta
	set	ie_status	= 'A',
		dt_atualizacao  = clock_timestamp(),
		nm_usuario	= nm_usuario_p
	where	nr_sequencia	= nr_seq_conta_w;

	update	pls_conta_proc
	set	ie_status	= 'A',
		dt_atualizacao  = clock_timestamp(),
		nm_usuario	= nm_usuario_p
	where	nr_seq_conta	= nr_seq_conta_w
	and	ie_status 	<> 'D';

	update	pls_conta_mat
	set	ie_status	= 'A',
		dt_atualizacao  = clock_timestamp(),
		nm_usuario	= nm_usuario_p
	where	nr_seq_conta	= nr_seq_conta_w;
	end;
end loop;
close C01;

ds_observacao_w := substr(ds_observacao_w || pls_util_pck.enter_w || 'Usuário: ' || nm_usuario_p  || pls_util_pck.enter_w || 'Grupo anterior: ' || pls_obter_nome_grupo_auditor(nr_seq_grupo_atual_p) || pls_util_pck.enter_w || 'Data: ' || to_char(clock_timestamp(),'dd/mm/yyyy hh24:mi:ss') || pls_util_pck.enter_w || 'Grupo Atual: ' || pls_obter_nome_grupo_auditor(nr_seq_grupo_p),1,4000);

/*registra o historico da acao realizada*/

CALL pls_inserir_hist_analise(null, nr_seq_analise_p, 4,  null, null, null,  null, ds_observacao_w, nr_seq_grupo_atual_p, nm_usuario_p, cd_estabelecimento_p);

CALL pls_atualizar_grupo_penden(nr_seq_analise_p, cd_estabelecimento_p, nm_usuario_p);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_inserir_grupo_analise ( nr_seq_analise_p bigint, nr_seq_grupo_p bigint, ds_observacao_p text, nr_seq_grupo_atual_p bigint, ie_encaminhar_p text, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

