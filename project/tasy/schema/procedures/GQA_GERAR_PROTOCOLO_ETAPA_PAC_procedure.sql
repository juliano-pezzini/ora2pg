-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gqa_gerar_protocolo_etapa_pac ( nr_seq_pendencia_p gqa_pendencia.nr_sequencia%type, nr_seq_protocolo_pac_p gqa_protocolo_pac.nr_sequencia%type ) AS $body$
DECLARE


nm_usuario_w              usuario.nm_usuario%type;
nr_seq_acao_w             gqa_acao.nr_sequencia%type;
nr_seq_w                  gqa_protocolo_pac.nr_sequencia%type;
ie_finalizar_w            gqa_acao.ie_finaliza_protocolo%type;

c01 CURSOR FOR
SELECT *
from gqa_pendencia_regra a where a.nr_seq_pendencia = nr_seq_pendencia_p and a.ie_situacao = 'A' and a.ie_evento = '9'
order by a.nr_seq_regra_sup asc nulls first;

BEGIN
  select obter_usuario_ativo into STRICT nm_usuario_w;

  for regra in c01 loop

    begin
      select max(nr_sequencia) into STRICT nr_seq_acao_w from gqa_acao where nr_seq_pend_regra = regra.nr_sequencia;
    exception when no_data_found then
      nr_seq_acao_w := null;
    end;

    if (nr_seq_acao_w IS NOT NULL AND nr_seq_acao_w::text <> '') then

      select nextval('gqa_protocolo_etapa_pac_seq') into STRICT nr_seq_w;

      select coalesce(ie_finaliza_protocolo, 'N')
      into STRICT ie_finalizar_w 
      from gqa_acao 
      where nr_sequencia = nr_seq_acao_w;

      insert into gqa_protocolo_etapa_pac(
        ie_finaliza_protocolo,
        ds_justificativa_cancelar,
        ds_nome_etapa,
        dt_atualizacao,
        dt_atualizacao_nrec,
        dt_cancelar_usuario,
        dt_fim,
        dt_inicio,
        dt_prevista_fim,
        dt_prevista_inicio,
        nm_usuario,
        nm_usuario_cancelar,
        nm_usuario_executor,
        nm_usuario_nrec,
        nr_seq_acao,
        nr_seq_etapa,
        nr_seq_etapa_sup,
        nr_seq_etapa_prot_sup,
        nr_seq_motivo_cancelar,
        nr_seq_prot_pac,
        nr_sequencia,
        qt_resultado,
        qt_ponto_min_etapa,
        qt_ponto_max_etapa,
        qt_tempo_execucao,
        qt_tempo_exec_resposta,
        qt_tempo_previsto,
        qt_tempo_prev_resposta,
        ds_tag,
        ds_cor_html,
        ie_permite_duplicar,
        ds_pergunta_duplicar
      ) values (
        ie_finalizar_w,
        null,
        regra.ds_regra,
        clock_timestamp(),
        clock_timestamp(),
        null,
        null,
        null,
        null,
        null,
        nm_usuario_w,
        null,
        null,
        nm_usuario_w,
        nr_seq_acao_w,
        regra.nr_sequencia,
        regra.nr_seq_regra_sup,
        null,
        null,
        nr_seq_protocolo_pac_p,
        nr_seq_w,
        null,
        regra.qt_ponto_min_etapa,
        regra.qt_ponto_max_etapa,
        null,
        null,
        regra.qt_tempo_execucao,
        regra.qt_tempo_resposta,
        regra.ds_tag,
        regra.ds_cor_html,
        regra.ie_permite_duplicar,
        regra.ds_pergunta_duplicar
      );
    end if;
  end loop;

update gqa_protocolo_etapa_pac a set nr_seq_etapa_prot_sup = (SELECT max(b.nr_sequencia) from gqa_protocolo_etapa_pac b where b.nr_seq_prot_pac = nr_seq_protocolo_pac_p and b.nr_seq_etapa = a.nr_seq_etapa_sup)
where a.nr_seq_prot_pac = nr_seq_protocolo_pac_p;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gqa_gerar_protocolo_etapa_pac ( nr_seq_pendencia_p gqa_pendencia.nr_sequencia%type, nr_seq_protocolo_pac_p gqa_protocolo_pac.nr_sequencia%type ) FROM PUBLIC;

