-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE glosa_proc_valor (nr_sequencia_p bigint, vl_glosa_p bigint) AS $body$
DECLARE


cd_estabelecimento_w		integer;
vl_disponivel_w			double precision;
vl_autorizado_w			double precision;
vl_utilizado_w			double precision;
vl_procedimento_w		double precision;
nr_seq_autorizacao_w		varchar(10);
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
cd_convenio_w			integer;
cd_categoria_w			varchar(10);
nm_usuario_w			varchar(15);
nr_sequencia_w			bigint;
vl_medico_w			double precision;
vl_anestesista_w		double precision;
vl_auxiliares_w			double precision;
vl_custo_operacional_w		double precision;
vl_materiais_w			double precision;
vl_adic_plant_w			double precision;
vl_medico_ww			double precision;
vl_anestesista_ww		double precision;
vl_auxiliares_ww		double precision;
vl_custo_operacional_ww		double precision;
vl_materiais_ww			double precision;
vl_adic_plant_ww		double precision;
vl_procedimento_ww		double precision;
pr_glosa_w			double precision;
cd_convenio_glosa_w		integer := null;
cd_categoria_glosa_w		varchar(10) := null;
nr_atendimento_w		bigint;
qt_reg_proc_pac_w		bigint := 0;
ie_reaplic_glosa_item_w	parametro_faturamento.ie_reaplic_glosa_item%type;
ie_status_acerto_w		conta_paciente.ie_status_acerto%type;


BEGIN

select	a.cd_convenio,
	a.cd_categoria,
	a.nr_atendimento,
	coalesce(a.vl_procedimento,0),
	a.nr_seq_autorizacao,
	a.cd_procedimento,
	a.ie_origem_proced,
	a.nm_usuario,
	coalesce(a.vl_medico,0),
	coalesce(a.vl_anestesista,0),
	coalesce(a.vl_auxiliares,0),
	coalesce(a.vl_custo_operacional,0),
	coalesce(a.vl_materiais,0),
	coalesce(a.vl_adic_plant,0),
	b.cd_estabelecimento
into STRICT	cd_convenio_w,
	cd_categoria_w,
	nr_atendimento_w,
	vl_procedimento_w,
	nr_seq_autorizacao_w,
	cd_procedimento_w,
	ie_origem_proced_w,
	nm_usuario_w,
	vl_medico_w,
	vl_anestesista_w,
	vl_auxiliares_w,
	vl_custo_operacional_w,
	vl_materiais_w,
	vl_adic_plant_w,
	cd_estabelecimento_w
from	atendimento_paciente b,
	Procedimento_paciente a
where	a.nr_atendimento = b.nr_atendimento
and	a.nr_sequencia	= nr_sequencia_p;


begin
select	coalesce(cd_convenio_glosa,0),
	coalesce(cd_categoria_glosa,' ')
into STRICT	cd_convenio_glosa_w,
	cd_categoria_glosa_w
from	atend_categoria_convenio
where	nr_seq_interno	=
	(SELECT coalesce(max(x.nr_seq_interno),0)
		from 	atend_categoria_convenio x
		where	x.nr_atendimento = nr_atendimento_w
		and	x.cd_convenio	 = cd_convenio_w
		and	x.cd_categoria	 = cd_categoria_w);
exception
	when others then
		cd_convenio_glosa_w	:= 0;
		cd_categoria_glosa_w	:= ' ';
end;

if (cd_convenio_glosa_w = 0) then
	SELECT * FROM obter_convenio_particular_pf(cd_estabelecimento_w, cd_convenio_w, null, clock_timestamp(), cd_convenio_glosa_w, cd_categoria_glosa_w) INTO STRICT cd_convenio_glosa_w, cd_categoria_glosa_w;
end if;

select	coalesce(max(ie_reaplic_glosa_item),'N')
into STRICT	ie_reaplic_glosa_item_w
from	parametro_faturamento
where	cd_estabelecimento = cd_estabelecimento_w;

if (ie_reaplic_glosa_item_w = 'S') then
	select  count(1)
	into STRICT	qt_reg_proc_pac_w
	from	procedimento_paciente
	where	nr_seq_proc_princ	= nr_sequencia_p
	and	qt_procedimento = 0;

	if (qt_reg_proc_pac_w = 1) then
		select	max(b.ie_status_acerto),
			max(a.nr_sequencia),
			max(a.vl_medico),
			max(a.vl_anestesista),
			max(a.vl_auxiliares),
			max(a.vl_custo_operacional),
			max(a.vl_materiais),
			max(a.vl_adic_plant),
			max(a.vl_procedimento)
		into STRICT	ie_status_acerto_w,
			nr_sequencia_w,
			vl_medico_ww,
			vl_anestesista_ww,
			vl_auxiliares_ww,
			vl_custo_operacional_ww,
			vl_materiais_ww,
			vl_adic_plant_ww,
			vl_procedimento_ww
		from	conta_paciente b,
			procedimento_paciente a
		where	a.nr_interno_conta	= b.nr_interno_conta
		and	a.nr_seq_proc_princ	= nr_sequencia_p
                and	qt_procedimento = 0;
		
		if (ie_status_acerto_w <> 1) then
			nr_sequencia_w := null;
		end if;
	else        
		nr_sequencia_w := duplicar_proc_paciente(nr_sequencia_p, nm_usuario_w, nr_sequencia_w);
	end if;
else
	nr_sequencia_w := duplicar_proc_paciente(nr_sequencia_p, nm_usuario_w, nr_sequencia_w);
end if;

if (nr_sequencia_w IS NOT NULL AND nr_sequencia_w::text <> '') then
	pr_glosa_w		:= dividir((vl_glosa_p * 100), vl_procedimento_w);

	vl_medico_ww		:= dividir(vl_medico_w			* pr_glosa_w, 100);
	vl_anestesista_ww	:= dividir(vl_anestesista_w		* pr_glosa_w, 100);
	vl_auxiliares_ww	:= dividir(vl_auxiliares_w		* pr_glosa_w, 100);
	vl_custo_operacional_ww	:= dividir(vl_custo_operacional_w	* pr_glosa_w, 100);
	vl_materiais_ww		:= dividir(vl_materiais_w		* pr_glosa_w, 100);
	vl_adic_plant_ww	:= dividir(vl_adic_plant_w		* pr_glosa_w, 100);
	vl_procedimento_ww	:= dividir(vl_procedimento_w		* pr_glosa_w, 100);

	update procedimento_paciente
	set	ie_valor_informado	= 'S',
		vl_medico		= vl_medico_ww,
		vl_anestesista		= vl_anestesista_ww,
		vl_auxiliares		= vl_auxiliares_ww,
		vl_custo_operacional	= vl_custo_operacional_ww,
		vl_materiais		= vl_materiais_ww,
		vl_adic_plant		= vl_adic_plant_ww,
		vl_Procedimento		= vl_Procedimento_ww,
		cd_situacao_glosa	= 0,
		qt_procedimento		= 0,
		cd_convenio		= cd_convenio_glosa_w,
		cd_categoria		= cd_categoria_glosa_w,
		nr_seq_proc_princ	= nr_sequencia_p,
		nr_interno_conta	 = NULL
	where	nr_sequencia		= nr_sequencia_w;
end if;

update procedimento_paciente
set	ie_valor_informado	= 'S',
	vl_medico		= vl_medico_w - vl_medico_ww,
	vl_anestesista		= vl_anestesista_w - vl_anestesista_ww,
	vl_auxiliares		= vl_auxiliares_w - vl_auxiliares_ww,
	vl_custo_operacional	= vl_custo_operacional_w - vl_custo_operacional_ww,
	vl_materiais		= vl_materiais_w - vl_materiais_ww,
	vl_adic_plant		= vl_adic_plant_w - vl_adic_plant_ww,
	vl_procedimento		= vl_Procedimento_w - vl_Procedimento_ww
where	nr_sequencia		= nr_sequencia_p;

/* Elemar - 26/08/03 - Dava erro porque e chamado a partir atualiza_preco_proc_amb que e chamado na trigger da exame_lab_result_item
if (nvl(wheb_usuario_pck.get_ie_commit, S) = S) then commit end if
*/
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE glosa_proc_valor (nr_sequencia_p bigint, vl_glosa_p bigint) FROM PUBLIC;

