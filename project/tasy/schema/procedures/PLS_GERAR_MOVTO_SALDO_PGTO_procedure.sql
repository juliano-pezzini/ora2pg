-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_movto_saldo_pgto ( nr_seq_lote_p pls_lote_pagamento.nr_sequencia%type, ie_commit_p text, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:	Gerar o evento movimento da diferença do pagamento de produção médica.
	Utilizado apenas para contabilidade.
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[ ]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
nr_seq_lote_evento_w		pls_lote_evento.nr_sequencia%type;
dt_inicio_comp_w		pls_lote_pagamento.dt_inicio_comp%type;
dt_fim_comp_w			pls_lote_pagamento.dt_fim_comp%type;
dt_mes_competencia_w		pls_lote_pagamento.dt_mes_competencia%type;
nr_seq_evento_saldo_pgto_w	pls_parametro_pagamento.nr_seq_evento_saldo_pgto%type;
cd_conta_contabil_w		varchar(20);
nr_seq_evento_movto_w		pls_evento_movimento.nr_sequencia%type;

c01 CURSOR(nr_seq_lote_pc		pls_lote_pagamento.nr_sequencia%type) FOR
	SELECT	vl_pagamento vl_evento,
		nr_seq_prestador
	from	pls_pagamento_prestador
	where	nr_seq_lote	= nr_seq_lote_pc
	and	vl_pagamento	< 0;

BEGIN
select	max(nr_seq_evento_saldo_pgto)
into STRICT	nr_seq_evento_saldo_pgto_w
from	pls_parametro_pagamento
where	cd_estabelecimento = cd_estabelecimento_p;

if (nr_seq_evento_saldo_pgto_w IS NOT NULL AND nr_seq_evento_saldo_pgto_w::text <> '') then
	select	dt_inicio_comp,
		dt_fim_comp,
		dt_mes_competencia,
		null
	into STRICT	dt_inicio_comp_w,
		dt_fim_comp_w,
		dt_mes_competencia_w,
		nr_seq_lote_evento_w
	from	pls_lote_pagamento
	where	nr_sequencia = nr_seq_lote_p;

	for r_C01_w in C01( nr_seq_lote_p ) loop

		if (coalesce(nr_seq_lote_evento_w::text, '') = '') then
			insert into pls_lote_evento(nr_sequencia,
				nm_usuario,
				dt_atualizacao,
				nm_usuario_nrec,
				dt_atualizacao_nrec,
				ie_origem,
				dt_inicio_comp,
				dt_fim_comp,
				nr_seq_lote_pagamento,
				dt_liberacao,
				dt_competencia,
				nr_seq_evento,
				cd_estabelecimento)
			values (nextval('pls_lote_evento_seq'),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				'A',
				dt_inicio_comp_w,
				dt_fim_comp_w,
				nr_seq_lote_p,
				clock_timestamp(),
				dt_mes_competencia_w,
				nr_seq_evento_saldo_pgto_w,
				cd_estabelecimento_p) returning nr_sequencia into nr_seq_lote_evento_w;
		end if;

		if (nr_seq_lote_evento_w IS NOT NULL AND nr_seq_lote_evento_w::text <> '') then
			insert into pls_evento_movimento(nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				dt_movimento,
				nr_seq_evento,
				nr_seq_lote,
				nr_seq_prestador,
				vl_movimento,
				nr_seq_regra_fixo,
				ds_observacao,
				nr_seq_periodo,
				nr_seq_classe_tit_rec,
				ie_titulo_pagar,
				cd_pf_titulo_pagar,
				cd_cgc_titulo_pagar,
				nr_seq_trans_fin_baixa,
				nr_seq_trans_fin_contab,
				cd_centro_custo)
			values (nextval('pls_evento_movimento_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				trunc(dt_mes_competencia_w,'dd'),
				nr_seq_evento_saldo_pgto_w,
				nr_seq_lote_evento_w,
				r_C01_w.nr_seq_prestador,
				r_C01_w.vl_evento,
				null,
				null,
				null,
				null,
				null,
				null,
				null,
				null,
				null,
				null) returning nr_sequencia into nr_seq_evento_movto_w;

			cd_conta_contabil_w := pls_obter_conta_contab_eve_fin(nr_seq_evento_movto_w, cd_conta_contabil_w);

			update	pls_evento_movimento
			set	cd_conta_contabil	= cd_conta_contabil_w
			where	nr_sequencia		= nr_seq_evento_movto_w;
		end if;
	end loop;
end if;

if (coalesce(ie_commit_p,'N') = 'S') then
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_movto_saldo_pgto ( nr_seq_lote_p pls_lote_pagamento.nr_sequencia%type, ie_commit_p text, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;

