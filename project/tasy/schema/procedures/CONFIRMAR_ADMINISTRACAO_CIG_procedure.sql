-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE confirmar_administracao_cig ( nr_seq_cig_p bigint, nr_prescricao_p bigint, nr_seq_horario_p bigint, nm_usuario_p text) AS $body$
DECLARE

				
ora2pg_rowcount int;
nr_seq_evento_w				bigint;
ie_gera_adm_w				varchar(1);
nr_sequencia_w				bigint;
nr_prescricao_w				bigint;
cd_procedimento_w			bigint;
ie_origem_proced_w			bigint;
qt_procedimento_w			double precision;
cd_setor_atendimento_w		integer;
nr_seq_exame_w				bigint;
nr_seq_proc_interno_w		bigint;
nr_seq_interno_w			bigint;
nr_seq_horario_w			bigint;
dt_horario_w				timestamp;
ie_cobrar_horario_w			varchar(1);
ie_cobrar_horarioI_w		varchar(1);
cont_w						bigint;
ie_cobra_adep_w				varchar(1);
VarIe_Cobra_Prim_hor_w		varchar(1);
ie_cobra_proc_hor_w			varchar(1);
qt_glicose_adm_w			atendimento_cig.qt_glicose_adm%type;
ie_registrar_sv_w			varchar(1);
qt_glicose_adm_2w		    atendimento_cig.qt_glicose_adm%type;
nr_atendimento_w			atendimento_cig.nr_atendimento%type;
dt_cig_w					timestamp;
qt_hgt_w					atendimento_cig.qt_hgt%type;
qt_bolus_calc_w				atendimento_cig.qt_bolus_calc%type;
qt_bolus_adm_w				atendimento_cig.qt_bolus_adm%type;
qt_veloc_calc_w				atendimento_cig.qt_veloc_calc%type;
qt_veloc_adm_w				atendimento_cig.qt_veloc_adm%type;
qt_glicose_calc_w			atendimento_cig.qt_glicose_calc%type;
ie_evento_w					atendimento_cig_evento.ie_evento%type;


BEGIN
VarIe_Cobra_Prim_hor_w := obter_param_usuario(1113, 351, wheb_usuario_pck.get_cd_perfil, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, VarIe_Cobra_Prim_hor_w);
ie_gera_adm_w := obter_param_usuario(1113, 360, wheb_usuario_pck.get_cd_perfil, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_gera_adm_w);
ie_cobra_proc_hor_w := obter_param_usuario(1113, 246, wheb_usuario_pck.get_cd_perfil, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_cobra_proc_hor_w);
ie_registrar_sv_w := obter_param_usuario(1113, 478, wheb_usuario_pck.get_cd_perfil, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_registrar_sv_w);

if (nr_seq_cig_p IS NOT NULL AND nr_seq_cig_p::text <> '') and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') then

	update	atendimento_cig
	set		ie_adm_confirmada	= 'S',
			nm_usuario			= nm_usuario_p,
			qt_glicose_adm		= CASE WHEN ie_gera_adm_w='S' THEN  qt_glicose_adm  ELSE qt_glicose_calc END ,
			qt_veloc_adm		= CASE WHEN ie_gera_adm_w='S' THEN  qt_veloc_adm  ELSE coalesce(qt_veloc_calc, qt_veloc_adm) END ,
			qt_bolus_adm		= CASE WHEN ie_gera_adm_w='S' THEN  qt_bolus_adm  ELSE qt_bolus_calc END
	where	nr_sequencia		= nr_seq_cig_p;
	
	select 	coalesce(qt_bolus_calc, 0),
			coalesce(qt_bolus_adm, 0),
			coalesce(qt_veloc_calc, 0),
			coalesce(qt_veloc_adm, 0),
			coalesce(qt_glicose_calc, 0),
			coalesce(qt_glicose_adm, 0)
	into STRICT 	qt_bolus_calc_w,
			qt_bolus_adm_w,
			qt_veloc_calc_w,
			qt_veloc_adm_w,
			qt_glicose_calc_w,
			qt_glicose_adm_w
	from 	atendimento_cig
	where 	nr_sequencia = nr_seq_cig_p;
	
	if ( qt_bolus_calc_w 	= 0 and
		 qt_bolus_adm_w 	= 0 and
		 qt_veloc_calc_w 	= 0 and
		 qt_veloc_adm_w 	= 0	and
		 qt_glicose_calc_w 	= 0 and
		 qt_glicose_adm_w 	= 0) then
		ie_evento_w := 14;
	else
		ie_evento_w := 11;
	end if;
	
	select	nextval('atendimento_cig_evento_seq')
	into STRICT		nr_seq_evento_w
	;
	
	insert into atendimento_cig_evento(
		nr_sequencia,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		dt_atualizacao,
		nm_usuario,
		nr_seq_cig,
		ie_evento,
		dt_evento,
		cd_pessoa_evento,
		ds_observacao)
	values (
		nr_seq_evento_w,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		nr_seq_cig_p,
		ie_evento_w,
		clock_timestamp(),
		substr(obter_dados_usuario_opcao(nm_usuario_p,'C'),1,10),
		null);

	GET DIAGNOSTICS ora2pg_rowcount = ROW_COUNT;


	if ( ora2pg_rowcount > 0) then
		CALL Gerar_taxa_mat_conta(nr_prescricao_p,null,nm_usuario_p,'G','A');
	end if;

	if (ie_registrar_sv_w = 'C') then
		select 	nr_atendimento,
			qt_hgt, 
			CASE WHEN ie_gera_adm_w='S' THEN  qt_glicose_adm  ELSE qt_glicose_calc END , 
			dt_controle  
		into STRICT    nr_atendimento_w,
			qt_hgt_w,
			qt_glicose_calc_w,
			dt_cig_w
		from atendimento_cig
		where	nr_sequencia = nr_seq_cig_p;
		
		if (qt_glicose_adm_w  > 0) then
			qt_glicose_adm_2w :=  qt_glicose_adm_w;
		else
			qt_glicose_adm_2w := null;
		end if;

		CALL adep_gerar_SV_Glicemia(nr_atendimento_w, qt_hgt_w, nm_usuario_p, qt_glicose_calc_w, dt_cig_w, null, null, null, qt_glicose_adm_2w);
	end if;
	
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE confirmar_administracao_cig ( nr_seq_cig_p bigint, nr_prescricao_p bigint, nr_seq_horario_p bigint, nm_usuario_p text) FROM PUBLIC;

