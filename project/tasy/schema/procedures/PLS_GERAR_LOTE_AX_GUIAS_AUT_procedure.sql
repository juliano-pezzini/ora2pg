-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_lote_ax_guias_aut ( nr_seq_guia_imp_p bigint, nr_seq_lote_imp_p bigint, ds_parametro_p text, nm_usuario_p text, nr_seq_guia_lote_anexo_p INOUT bigint) AS $body$
DECLARE

 
nr_seq_guia_lote_anexo_w	pls_lote_anexo_guias_aut.nr_sequencia%type;
nr_seq_auditoria_w		pls_auditoria.nr_sequencia%type;
ie_gerar_grupo_w		varchar(5);

 
C01 CURSOR FOR 
	SELECT	nr_sequencia, 
		nr_seq_guia, 
		nr_seq_requisicao, 
		obter_valor_dominio(5688, ie_tipo_anexo) ds_anexo 
	from	pls_lote_anexo_guias_imp 
	where 	nr_seq_lote_anexo = nr_seq_lote_imp_p;
						
BEGIN 
 
 
for	r_c01 in C01 loop 
	begin 
	 
	select	nextval('pls_lote_anexo_guias_aut_seq') 
	into STRICT	nr_seq_guia_lote_anexo_w 
	;
		 
	insert into	pls_lote_anexo_guias_aut(nr_sequencia, nr_seq_lote_anexo, dt_atualizacao, 
						 nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec, 
						 cd_ans, cd_guia, cd_guia_prestador, 
						 cd_guia_referencia, dt_solicitacao, cd_senha, 
						 dt_autorizacao, cd_usuario_plano, ie_recem_nascido, 
						 nm_beneficiario, cd_cnes, ds_biometria, 
						 nm_profissional_solic, nr_telef_prof_solic, ds_justificativa, 
						 ds_email_prof_solic, ds_especificacao, qt_peso, 
						 qt_altura, qt_superficie_corporal, qt_idade_benef, 
						 ie_sexo, ds_procedimento_cirurgico, dt_real_proc_cirurgico, 
						 ds_area_irradiada, dt_radioterapia, nr_ciclo_previsto, 
						 nr_ciclo_atual, qt_intervalo_ciclo, ds_quimioterapia, 
						 dt_quimioterapia, qt_dose_total, qt_dose_dia, 
						 nr_campos, dt_inicio_previsto, qt_dias_previsto, 
						 nr_seq_guia, nr_seq_guia_principal, ie_status, 
						 ie_tipo_anexo, ds_observacao, nr_seq_requisicao, 
						 nr_dia_ciclo_atual) 
					(SELECT nr_seq_guia_lote_anexo_w, nr_seq_lote_anexo, clock_timestamp(), 
						 nm_usuario_p, clock_timestamp(), nm_usuario_p, 
						 cd_ans, cd_guia, cd_guia_prestador, 
						 cd_guia_referencia, dt_solicitacao, cd_senha, 
						 dt_autorizacao, cd_usuario_plano, ie_recem_nascido, 
						 nm_beneficiario, cd_cnes, ds_biometria, 
						 nm_profissional_solic, nr_telef_prof_solic, ds_justificativa, 
						 ds_email_prof_solic, ds_especificacao, qt_peso, 
						 qt_altura, qt_superficie_corporal, qt_idade_benef, 
						 ie_sexo, ds_procedimento_cirurgico, dt_real_proc_cirurgico, 
						 ds_area_irradiada, dt_radioterapia, nr_ciclo_previsto, 
						 nr_ciclo_atual, qt_intervalo_ciclo, ds_quimioterapia, 
						 dt_quimioterapia, qt_dose_total, qt_dose_dia, 
						 nr_campos, dt_inicio_previsto, qt_dias_previsto, 
						 nr_seq_guia, nr_seq_guia_principal, ie_status, 
						 ie_tipo_anexo, ds_observacao, nr_seq_requisicao, 
						 nr_dia_ciclo_atual 
					from	 pls_lote_anexo_guias_imp 
					where	 nr_sequencia = r_c01.nr_sequencia);
								 
								 
	insert into 	pls_lote_anexo_diag_aut(nr_sequencia, nr_seq_lote_anexo_guia, dt_atualizacao, 
						nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec, 
						ie_classificacao, cd_doenca, dt_diagnostico, 
						ie_estadia_tumor, ie_tipo_quimioterapia, cd_finalidade_tratamento, 
						ie_capacidade_funcional, ds_plano_terapeutico, ds_diagnostico, 
						cd_diagnostico_imagem, ds_observacao, ie_tipo_diagnostico, 
						ie_tumor, ie_nodulo, ie_metastases) 
					(SELECT nextval('pls_lote_anexo_diag_aut_seq'), nr_seq_guia_lote_anexo_w, clock_timestamp(), 
						nm_usuario_p, clock_timestamp(), nm_usuario_p, 
						ie_classificacao, cd_doenca, dt_diagnostico, 
						ie_estadia_tumor, ie_tipo_quimioterapia, cd_finalidade_tratamento, 
						ie_capacidade_funcional, ds_plano_terapeutico, ds_diagnostico, 
						cd_diagnostico_imagem, ds_observacao, ie_tipo_diagnostico, 
						ie_tumor, ie_nodulo, ie_metastases 
					from	pls_lote_anexo_diag_imp 
					where	nr_seq_lote_guia_imp = r_c01.nr_sequencia);
								 
	insert into	pls_lote_anexo_proc_aut(nr_sequencia, nr_seq_lote_anexo_guia, dt_atualizacao, 
						 nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec, 
						 dt_prev_realizacao, cd_tipo_tabela, cd_procedimento, 
						 ds_procedimento, qt_solicitado, nr_seq_plano_proc, 
						 ie_origem_proced, nr_seq_req_proc ) 
					(SELECT	 nextval('pls_lote_anexo_proc_aut_seq'), nr_seq_guia_lote_anexo_w, clock_timestamp(), 
						 nm_usuario_p, clock_timestamp(), nm_usuario_p, 
						 dt_prev_realizacao, cd_tipo_tabela, cd_procedimento, 
						 ds_procedimento, qt_solicitado, nr_seq_plano_proc, 
						 ie_origem_proced, nr_seq_req_proc     
					from	 pls_lote_anexo_proc_imp 
					where	 nr_seq_lote_guia_imp = r_c01.nr_sequencia);
 
	insert into	pls_lote_anexo_mat_aut(nr_sequencia, nr_seq_lote_anexo_guia, dt_atualizacao, 
						 nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec, 
						 cd_material, ds_material, cd_tipo_tabela_imp, 
						 ie_opcao_fabricante, qt_solicitado, vl_unit_material_solic, 
						 nr_registro_anvisa, cd_ref_fabricante_imp, cd_aut_funcionamento, 
						 ds_observacao, dt_prevista, ie_via_administracao, 
						 ie_frequencia_dose, qt_autorizado, vl_unit_material_aut, 
						 nr_seq_material, nr_seq_plano_mat, nr_seq_req_mat, 
						 qt_unidade_medida, qt_dosagem_total) 
					(SELECT	 nextval('pls_lote_anexo_mat_aut_seq'), nr_seq_guia_lote_anexo_w, dt_atualizacao, 
						 nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec, 
						 cd_material, ds_material, cd_tipo_tabela_imp, 
						 ie_opcao_fabricante, qt_solicitado, vl_unit_material_solic, 
						 nr_registro_anvisa, cd_ref_fabricante_imp, cd_aut_funcionamento, 
						 ds_observacao, dt_prevista, ie_via_administracao, 
						 ie_frequencia_dose, qt_autorizado, vl_unit_material_aut, 
						 nr_seq_material, nr_seq_plano_mat, nr_seq_req_mat, 
						 qt_unidade_medida, qt_dosagem_total		 
					from	 pls_lote_anexo_mat_imp 
					where	 nr_seq_lote_guia_imp = r_c01.nr_sequencia);
 
	nr_seq_guia_lote_anexo_p := nr_seq_guia_lote_anexo_w;	
	 
	if (r_c01.nr_seq_requisicao IS NOT NULL AND r_c01.nr_seq_requisicao::text <> '') then 
		 
		/* Gerar histórico na requisição e na análise */
 
		CALL pls_requisicao_gravar_hist( r_c01.nr_seq_requisicao, 'L', 'Inserido o anexo de '||r_c01.ds_anexo||', arquivo recebido via WebService no lote de anexo:'||nr_seq_lote_imp_p, null, nm_usuario_p );	
		 
		select	max(nr_sequencia) 
		into STRICT	nr_seq_auditoria_w 
		from	pls_auditoria 
		where	nr_seq_requisicao = r_c01.nr_seq_requisicao;
	 
	else	 
		--Gerar histórico informando sobre a inserção do tipo de anexo na Guia 
		CALL pls_guia_gravar_historico(r_c01.nr_seq_guia, null, 'Inserido o anexo de '||r_c01.ds_anexo||', arquivo recebido via WebService no lote de anexo:'||nr_seq_lote_imp_p, null, nm_usuario_p);
		 
		select	max(nr_sequencia) 
		into STRICT	nr_seq_auditoria_w 
		from	pls_auditoria 
		where	nr_seq_guia = r_c01.nr_seq_guia;
	end if;	
	 
	--Verifica regra de encaminhamento para guias que estão em análise com Status 'Aguardando anexo guia TISS' 
	ie_gerar_grupo_w := pls_encaminha_grupo_acao_regra( nr_seq_auditoria_w, 2, nm_usuario_p, ie_gerar_grupo_w);
 
	end;
end loop;						
							 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_lote_ax_guias_aut ( nr_seq_guia_imp_p bigint, nr_seq_lote_imp_p bigint, ds_parametro_p text, nm_usuario_p text, nr_seq_guia_lote_anexo_p INOUT bigint) FROM PUBLIC;

