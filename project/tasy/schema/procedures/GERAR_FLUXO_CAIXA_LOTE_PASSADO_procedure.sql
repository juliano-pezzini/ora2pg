-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_fluxo_caixa_lote_passado ( nr_seq_lote_fluxo_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


/*--------------------------------------------------------------- ATENCAO ----------------------------------------------------------------*/


/* Cuidado ao realizar alteracoes no fluxo de caixa em lote. Toda e qualquer alteracao realizada em qualquer uma */


/* das procedures do fluxo de caixa em lote deve ser cuidadosamente verificada e realizada no fluxo de caixa      */


/* convencional. Devemos garantir que os dois fluxos de caixa tragam os mesmos valores no resultado, evitando     */


/* assim que existam diferencas entre os fluxos de caixa.                                                                                                */


/*--------------- AO ALTERAR O FLUXO DE CAIXA EM LOTE ALTERAR TAMBEM O FLUXO DE CAIXA ---------------*/

cd_conta_financ_cpa_w		bigint;
cd_conta_financ_cre_w		bigint;
ie_integracao_w			varchar(15);
ie_entrada_saida_w		varchar(10);
cd_conta_financ_w		bigint;
cd_convenio_w			bigint;
vl_fluxo_w			fluxo_caixa_item.vl_fluxo%type;
dt_referencia_w			timestamp;
vl_juros_w			fluxo_caixa_item.vl_fluxo%type;
vl_multa_w			fluxo_caixa_item.vl_fluxo%type;
vl_desconto_w			fluxo_caixa_item.vl_fluxo%type;
vl_rec_maior_w			fluxo_caixa_item.vl_fluxo%type;
vl_despesa_bancaria_w		fluxo_caixa_item.vl_fluxo%type;
vl_outros_acrescimos_w		fluxo_caixa_item.vl_fluxo%type;
vl_outras_despesas_w		fluxo_caixa_item.vl_fluxo%type;
vl_glosa_w			fluxo_caixa_item.vl_fluxo%type;
cd_conta_financ_jcp_w		bigint;
cd_conta_financ_jcr_w		bigint;
cd_conta_financ_mcp_w		bigint;
cd_conta_financ_mcr_w		bigint;
cd_conta_financ_dcp_w		bigint;
cd_conta_financ_dcr_w		bigint;
cd_conta_financ_vlm_w		bigint;
cd_conta_financ_ocp_w		bigint;
cd_conta_financ_odp_w		bigint;
cd_conta_financ_dbcr_w		bigint;
cd_conta_financ_glosa_w		bigint;
cd_centro_custo_w		integer;
ie_fim_semana_passado_w		varchar(255);
ie_adiant_receb_w		varchar(255);
ie_adiant_pago_w		varchar(255);
ie_convenio_receb_w		varchar(255);
ie_conv_receb_estorno_w		varchar(255);
ie_tit_rec_canc_w		varchar(255);
ie_classif_baixa_cp_w		varchar(255);
ie_cheque_cp_mes_w		varchar(255);
ie_tit_pagar_transf_w		varchar(255);
ie_cheque_pago_pend_w		varchar(255)	:= 'N';
ie_origem_titulo_w		varchar(10);
nr_seq_classe_tit_rec_w		bigint;
nr_seq_classe_tit_pag_w		bigint;
ie_data_tit_adiant_w		varchar(1);
ie_movto_bco_pend_w		varchar(2);
ie_data_tit_adiant_rec_w	varchar(1);
ie_cheque_devolvido_w		varchar(1);
ie_gera_saldo_banco_w		varchar(1);
ie_conta_finan_trans_w		varchar(1);
cd_cgc_w			varchar(14);
ie_trans_fin_conta_w		varchar(1);

dt_inicio_w			timestamp;
dt_final_w			timestamp;
ie_filtro_fluxo_w		varchar(1);
ie_filtro_banco_w		varchar(1);
						
ie_tipo_titulo_cp_w		titulo_pagar.ie_tipo_titulo%type;
ie_tipo_titulo_cr_w		titulo_receber.ie_tipo_titulo%type;

ie_identificacao_w		varchar(15);
nr_titulo_pagar_w		titulo_pagar.nr_titulo%type;
nr_titulo_receber_w		titulo_receber.nr_titulo%type;
nr_seq_cheque_cp_w		cheque.nr_sequencia%type;
nr_seq_cheque_cr_w		cheque_cr.nr_seq_cheque%type;
nr_seq_movto_cartao_w		movto_cartao_cr.nr_sequencia%type;
nr_seq_movto_trans_w		movto_trans_financ.nr_sequencia%type;
nr_seq_conv_receb_w		convenio_receb.nr_sequencia%type;
nr_seq_proj_recurso_w		projeto_recurso_fin.nr_sequencia%type;
nr_interno_conta_w		conta_paciente.nr_interno_conta%type;
nr_seq_protocolo_w		protocolo_convenio.nr_seq_protocolo%type;
nr_ordem_compra_w		ordem_compra.nr_ordem_compra%type;
nr_repasse_terceiro_w		repasse_terceiro.nr_repasse_terceiro%type;
cd_agenda_w			agenda.cd_agenda%type;
nr_seq_contrato_w		contrato.nr_sequencia%type;
nr_seq_regra_w			regra_fluxo_caixa.nr_sequencia%type;
cd_empresa_w			empresa.cd_empresa%type;
ie_restringe_estab_w		fluxo_caixa_lote.ie_restringe_estab%type;
ie_tipo_data_w			fluxo_caixa_lote.ie_tipo_data%type;
ie_tit_pagar_desdob_w		parametro_fluxo_caixa.ie_tit_pagar_desdob%type;
ie_titulo_caixa_w		parametro_fluxo_caixa.ie_titulo_caixa%type;
ie_despesa_cartao_w		parametro_fluxo_caixa.ie_despesa_cartao%type;
ie_fluxo_especial_w		parametro_fluxo_caixa.ie_fluxo_especial%type;
/* Projeto Multimoeda - Variaveis */

cd_moeda_empresa_w		integer;
cd_moeda_estrang_w		integer;
vl_fluxo_estrang_w		fluxo_caixa_item.vl_fluxo%type;
ie_dt_credito_banco_cre_w	parametro_fluxo_caixa.ie_dt_credito_banco_cre%type;

c010 CURSOR FOR
/* 1 */

SELECT	'CP' ie_integracao,
	'1P' ie_identificacao,
	dt_baixa,
	cd_conta_financ,
	round((vl_baixa + CASE WHEN cd_conta_financ_jcp=0 THEN vl_juros  ELSE 0 END  + CASE WHEN cd_conta_financ_mcp=0 THEN vl_multa  ELSE 0 END  - CASE WHEN cd_conta_financ_dcp=0 THEN vl_desconto  ELSE 0 END  + CASE WHEN cd_conta_financ_ocp=0 THEN vl_outros_acrescimos  ELSE 0 END  + CASE WHEN cd_conta_financ_odp=0 THEN VL_OUTRAS_DESPESAS  ELSE 0 END )::numeric,4),
	vl_baixa_estrang,
	0 cd_convenio,
	vl_juros,
	vl_multa,
	vl_desconto,
	0 vl_rec_maior,
	vl_outros_acrescimos,
	VL_OUTRAS_DESPESAS,
	0 vl_despesa_bancaria,
	cd_conta_financ_jcp,
	cd_conta_financ_mcp,
	cd_conta_financ_dcp,
	cd_conta_financ_ocp,
	cd_conta_financ_odp,
	0 cd_conta_financ_jcr,
	0 cd_conta_financ_mcr,
	0 cd_conta_financ_dcr,
	0 cd_conta_financ_vlm,
	0 cd_conta_financ_dbcr,
	0 cd_conta_financ_glosa,
	0 vl_glosa,
	null ie_origem_titulo,
	null nr_seq_classe_tit_rec,
	nr_seq_classe nr_seq_classe_tit_pag,
	ie_tipo_tit_pag,
	null ie_tipo_tit_rec,
	nr_titulo nr_titulo_pagar,
	null nr_titulo_receber,
	null nr_seq_cheque_cp,
	null nr_seq_cheque_cr,
	null nr_seq_movto_cartao,
	null nr_seq_movto_trans,
	null nr_seq_conv_receb,
	null nr_seq_proj_recurso,
	null nr_interno_conta,
	null nr_seq_protocolo,
	null nr_ordem_compra,
	null nr_repasse_terceiro,
	null cd_agenda,
	null nr_seq_contrato,
	null nr_seq_regra
from	(SELECT	dt_baixa,
		cd_conta_financ,
		vl_baixa,
		vl_baixa_estrang,
		coalesce(obter_conta_financ_regra_fc(cd_empresa_w,'JCP',cd_cgc,null,dt_baixa,cd_estabelecimento_p),0) cd_conta_financ_jcp,
		coalesce(obter_conta_financ_regra_fc(cd_empresa_w,'MCP',cd_cgc,null,dt_baixa,cd_estabelecimento_p),0) cd_conta_financ_mcp,
		coalesce(obter_conta_financ_regra_fc(cd_empresa_w,'DCP',cd_cgc,null,dt_baixa,cd_estabelecimento_p),0) cd_conta_financ_dcp,
		coalesce(obter_conta_financ_regra_fc(cd_empresa_w,'OCP',cd_cgc,null,dt_baixa,cd_estabelecimento_p),0) cd_conta_financ_ocp,
		coalesce(obter_conta_financ_regra_fc(cd_empresa_w,'ODP',cd_cgc,null,dt_baixa,cd_estabelecimento_p),0) cd_conta_financ_odp,
		cd_moeda,
		vl_juros,
		vl_multa,
		vl_desconto,
		vl_outros_acrescimos,
		VL_OUTRAS_DESPESAS,
		nr_seq_classe,
		ie_tipo_tit_pag,
		nr_titulo
	from	(select	dt_baixa,
			coalesce(nr_seq_conta_financ,cd_conta_financ_cpa_w) cd_conta_financ,
			(dividir_sem_round(coalesce(	CASE WHEN ie_tit_pagar_transf_w='S' THEN CASE WHEN ie_situacao='T' THEN vl_original  ELSE vl_titulo END   ELSE vl_titulo END ,
						CASE WHEN ie_tit_pagar_transf_w='S' THEN CASE WHEN ie_situacao='T' THEN vl_tit_transf  ELSE vl_titulo_alteracao END   ELSE vl_titulo_alteracao END ),
				CASE WHEN ie_tit_pagar_transf_w='S' THEN CASE WHEN ie_situacao='T' THEN vl_tit_transf  ELSE vl_titulo_alteracao END   ELSE vl_titulo_alteracao END ) *
			vl_baixa) vl_baixa,
			(dividir_sem_round(coalesce(	CASE WHEN ie_tit_pagar_transf_w='S' THEN CASE WHEN ie_situacao='T' THEN vl_original  ELSE vl_titulo END   ELSE vl_titulo END ,
						CASE WHEN ie_tit_pagar_transf_w='S' THEN CASE WHEN ie_situacao='T' THEN vl_tit_transf  ELSE vl_titulo_alteracao END   ELSE vl_titulo_alteracao END ),
				CASE WHEN ie_tit_pagar_transf_w='S' THEN CASE WHEN ie_situacao='T' THEN vl_tit_transf  ELSE vl_titulo_alteracao END   ELSE vl_titulo_alteracao END ) *
			vl_baixa_estrang) vl_baixa_estrang,
			coalesce(cd_moeda,0) cd_moeda,
			(dividir_sem_round(coalesce(vl_titulo,vl_titulo_alteracao),vl_titulo_alteracao) * vl_juros) vl_juros,
			(dividir_sem_round(coalesce(vl_titulo,vl_titulo_alteracao),vl_titulo_alteracao) * vl_multa) vl_multa,
			(dividir_sem_round(coalesce(vl_titulo,vl_titulo_alteracao),vl_titulo_alteracao) * vl_descontos) vl_desconto,
			(dividir_sem_round(coalesce(vl_titulo,vl_titulo_alteracao),vl_titulo_alteracao) * vl_outros_acrescimos) vl_outros_acrescimos,
			(dividir_sem_round(coalesce(vl_titulo,vl_titulo_alteracao),vl_titulo_alteracao) * VL_OUTRAS_DESPESAS) VL_OUTRAS_DESPESAS,
			cd_cgc,
			nr_seq_classe,
			ie_tipo_tit_pag,
			nr_titulo
		from (select	pkg_date_utils.start_of(a.dt_baixa,'DD',0) dt_baixa,
				c.nr_seq_conta_financ,
				b.ie_situacao,
				c.vl_original vl_original,
				c.vl_titulo vl_titulo,
				(obter_valor_tit_transf(b.nr_titulo, a.dt_baixa, 'CP'))::numeric  vl_tit_transf,
				(obter_dados_tit_pagar(b.nr_titulo,'VT'))::numeric  vl_titulo_alteracao,
				a.vl_baixa vl_baixa,
				a.vl_baixa_estrang vl_baixa_estrang,
				b.cd_moeda,
				coalesce(a.vl_juros,0) vl_juros,
				coalesce(a.vl_multa,0) vl_multa,
				coalesce(a.vl_descontos,0) vl_descontos,
				coalesce(a.vl_outros_acrescimos,0) vl_outros_acrescimos,
				coalesce(a.VL_OUTRAS_DESPESAS,0) VL_OUTRAS_DESPESAS,
				b.cd_cgc,
				b.nr_seq_classe,
				b.ie_tipo_titulo ie_tipo_tit_pag,
				b.nr_titulo
			FROM estabelecimento k, tipo_baixa_cpa d, titulo_pagar b, titulo_pagar_baixa a
LEFT OUTER JOIN titulo_pagar_classif c ON (a.nr_titulo = c.nr_titulo)
LEFT OUTER JOIN movto_trans_financ f ON (a.nr_seq_movto_trans_fin = f.nr_sequencia)
WHERE (ie_restringe_estab_w = 'N' or substr(obter_se_conta_financ_estab(coalesce(c.nr_seq_conta_financ, cd_conta_financ_cpa_w), cd_estabelecimento_p,ie_restringe_estab_w),1,1) = 'S')  and (ie_filtro_fluxo_w = 'N' or substr(obter_se_filtro_fluxo_lote(a.nr_seq_conta_banco, null, null, nr_seq_lote_fluxo_p, f.nr_seq_caixa, b.nr_seq_proj_rec, cd_estabelecimento_p),1,1) = 'S')  and k.cd_empresa			= cd_empresa_w and b.cd_estabelecimento		= k.cd_estabelecimento and (ie_restringe_estab_w = 'N' or (ie_restringe_estab_w = 'E' and b.cd_estabelecimento = cd_estabelecimento_p) or (ie_restringe_estab_w = 'S' and (b.cd_estabelecimento = cd_estabelecimento_p or b.cd_estab_financeiro = cd_estabelecimento_p))) and (b.ie_situacao <> 'T' or ie_tit_pagar_transf_w = 'S') and (b.ie_situacao <> 'D' or ie_tit_pagar_desdob_w = 'S') and b.ie_situacao			<> 'C' and coalesce(b.nr_titulo_transf::text, '') = '' and a.nr_titulo			= b.nr_titulo and coalesce(d.ie_fluxo_passado,'S')	= 'S' and a.cd_tipo_baixa			= d.cd_tipo_baixa and coalesce(a.cd_moeda,cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w)   --Projeto Multimoeda - Busca apenas os registros da moeda relacionada
  and (ie_classif_baixa_cp_w = 'N' or
				not exists (select	1
				from	titulo_pagar_baixa_cc x
				where	x.nr_titulo	= a.nr_titulo
				and	x.nr_seq_baixa	= a.nr_sequencia)) and a.dt_baixa			between dt_inicio_w and dt_final_w ) alias64
		
union all

		select	dt_baixa,
			cd_conta_financ,
			vl_baixa,
			vl_baixa_estrang,
			cd_moeda,
			vl_juros,
			vl_multa,
			vl_desconto,
			vl_outros_acrescimos,
			VL_OUTRAS_DESPESAS,
			cd_cgc,
			nr_seq_classe,
			ie_tipo_tit_pag,
			nr_titulo
		from (select	pkg_date_utils.start_of(a.dt_baixa,'DD',0) dt_baixa,
				coalesce(e.cd_conta_financ, cd_conta_financ_cpa_w) cd_conta_financ,
				coalesce(e.vl_baixa,0) vl_baixa,
				coalesce(e.vl_baixa_estrang,0) vl_baixa_estrang,
				b.cd_moeda cd_moeda,
				coalesce(e.vl_juros,0) vl_juros,
				coalesce(e.vl_multa,0) vl_multa,
				coalesce(e.vl_desconto,0) vl_desconto,
				coalesce(e.vl_outros_acrescimos,0) vl_outros_acrescimos,
				coalesce(e.VL_OUTRAS_DESPESAS,0) VL_OUTRAS_DESPESAS,
				b.cd_cgc,
				b.nr_seq_classe,
				b.ie_tipo_titulo ie_tipo_tit_pag,
				b.nr_titulo
			FROM estabelecimento k, titulo_pagar_baixa_cc e, tipo_baixa_cpa d, titulo_pagar b, titulo_pagar_baixa a
LEFT OUTER JOIN movto_trans_financ f ON (a.nr_seq_movto_trans_fin = f.nr_sequencia)
WHERE (ie_restringe_estab_w = 'N' or substr(obter_se_conta_financ_estab(coalesce(e.cd_conta_financ, cd_conta_financ_cpa_w), cd_estabelecimento_p,ie_restringe_estab_w),1,1) = 'S') and a.nr_titulo			= e.nr_titulo and a.nr_sequencia			= e.nr_seq_baixa and (ie_filtro_fluxo_w = 'N' or substr(obter_se_filtro_fluxo_lote(a.nr_seq_conta_banco, null, null, nr_seq_lote_fluxo_p, f.nr_seq_caixa, b.nr_seq_proj_rec, cd_estabelecimento_p),1,1) = 'S')  and k.cd_empresa			= cd_empresa_w and b.cd_estabelecimento		= k.cd_estabelecimento and (ie_restringe_estab_w = 'N' or (ie_restringe_estab_w = 'E' and b.cd_estabelecimento = cd_estabelecimento_p) or (ie_restringe_estab_w = 'S' and (b.cd_estabelecimento = cd_estabelecimento_p or b.cd_estab_financeiro = cd_estabelecimento_p))) and (b.ie_situacao <> 'T' or ie_tit_pagar_transf_w = 'S') and (b.ie_situacao <> 'D' or ie_tit_pagar_desdob_w = 'S') and b.ie_situacao			<> 'C' and coalesce(b.nr_titulo_transf::text, '') = '' and a.nr_titulo			= b.nr_titulo and coalesce(d.ie_fluxo_passado,'S')	= 'S' and a.cd_tipo_baixa			= d.cd_tipo_baixa and coalesce(e.cd_moeda,cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w)   --Projeto Multimoeda - Busca apenas os registros da moeda relacionada
  and a.dt_baixa			between dt_inicio_w and dt_final_w and ie_classif_baixa_cp_w		= 'S' ) alias91
		
union all

		select	a.dt_baixa,
			coalesce(CASE WHEN 				ie_conta_finan_trans_w='S' THEN (select	x.cd_conta_financ				from	transacao_financeira x				where	x.nr_sequencia	= a.nr_seq_trans_fin)  ELSE a.nr_seq_conta_financ END ,
			cd_conta_financ_cpa_w) cd_conta_financ,
			coalesce((dividir_sem_round((coalesce(a.vl_titulo,a.vl_titulo_alteracao) - a.vl_desconto - a.vl_acrescimo),(a.vl_titulo_alteracao - a.vl_desconto - a.vl_acrescimo)) * a.vl_adiantamento),0) vl_baixa,
			coalesce((dividir_sem_round(coalesce(a.vl_titulo,a.vl_titulo_alteracao),a.vl_titulo_alteracao) * a.vl_adto_estrang),0) vl_baixa_estrang,
			coalesce(a.cd_moeda,0) cd_moeda,
			0 vl_juros,
			0 vl_multa,
			0 vl_desconto,
			0 vl_outros_acrescimos,
			0 VL_OUTRAS_DESPESAS,
			a.cd_cgc,
			a.nr_seq_classe,
			ie_tipo_tit_pag,
			nr_titulo
		from (select	pkg_date_utils.start_of(CASE WHEN ie_data_tit_adiant_w='S' THEN d.dt_adiantamento  ELSE a.dt_atualizacao END ,'DD',0) dt_baixa,
				d.nr_seq_trans_fin,
				c.nr_seq_conta_financ,
				coalesce(c.vl_titulo,0) vl_titulo,
				coalesce((obter_dados_tit_pagar(b.nr_titulo,'VT'))::numeric ,0) vl_titulo_alteracao,
				coalesce(c.vl_desconto,0) vl_desconto,  -- Acrescentado nvl para garantir que o valor nao sera nulo, pois interfere no calculo
				coalesce(c.vl_acrescimo,0) vl_acrescimo,  -- Acrescentado nvl para garantir que o valor nao sera nulo, pois interfere no calculo
				coalesce(a.vl_adiantamento,0) vl_adiantamento,
				coalesce(a.vl_adto_estrang,0) vl_adto_estrang,
				b.cd_moeda,
				b.cd_cgc,
				b.nr_seq_classe,
				b.ie_tipo_titulo ie_tipo_tit_pag,
				b.nr_titulo
			FROM estabelecimento k, adiantamento_pago d, titulo_pagar b, titulo_pagar_adiant a
LEFT OUTER JOIN titulo_pagar_classif c ON (a.nr_titulo = c.nr_titulo)
WHERE (ie_restringe_estab_w = 'N' or substr(obter_se_conta_financ_estab(coalesce(c.nr_seq_conta_financ, cd_conta_financ_cpa_w), cd_estabelecimento_p,ie_restringe_estab_w),1,1) = 'S')  and k.cd_empresa		= cd_empresa_w and b.cd_estabelecimento	= k.cd_estabelecimento and (ie_restringe_estab_w = 'N' or (ie_restringe_estab_w = 'E' and b.cd_estabelecimento = cd_estabelecimento_p) or (ie_restringe_estab_w = 'S' and (b.cd_estabelecimento = cd_estabelecimento_p or b.cd_estab_financeiro = cd_estabelecimento_p))) and (ie_filtro_fluxo_w = 'N' or substr(obter_se_filtro_fluxo_lote(null, null, null, nr_seq_lote_fluxo_p, null, b.nr_seq_proj_rec, cd_estabelecimento_p),1,1) = 'S') and (b.ie_situacao <> 'T' or ie_tit_pagar_transf_w = 'S') and (b.ie_situacao <> 'D' or ie_tit_pagar_desdob_w = 'S') and b.ie_situacao		<> 'C' and coalesce(b.nr_titulo_transf::text, '') = '' and a.nr_titulo		= b.nr_titulo and coalesce(a.cd_moeda,cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w)   --Projeto Multimoeda - Busca apenas os registros da moeda relacionada
  and CASE WHEN ie_data_tit_adiant_w='S' THEN d.dt_adiantamento  ELSE a.dt_atualizacao END 	between dt_inicio_w and dt_final_w and a.nr_adiantamento	= d.nr_adiantamento and not exists (select	1
				from	titulo_pagar x
				where	x.nr_adiant_pago	= a.nr_adiantamento) and a.vl_adiantamento	<> 0 and ie_adiant_pago_w	in ('A','TP','TC') and ie_filtro_fluxo_w	= 'N' ) a
		) alias133
	) alias134

union all

/* 2 */

select	'CR' ie_integracao,
	'2P' ie_identificacao,
	dt_baixa,
	cd_conta_financ,
	sum(vl_titulo),
	sum(vl_recebido_estrang),
	0 cd_convenio,
	0 vl_juros,
	0 vl_multa,
	0 vl_desconto,
	0 vl_rec_maior,
	0 vl_outros_acrescimos,
	0 VL_OUTRAS_DESPESAS,
	0 vl_despesa_bancaria,
	0 cd_conta_financ_jcp,
	0 cd_conta_financ_mcp,
	0 cd_conta_financ_dcp,
	0 cd_conta_financ_ocp,
	0 cd_conta_financ_odp,
	0 cd_conta_financ_jcr,
	0 cd_conta_financ_mcr,
	0 cd_conta_financ_dcr,
	0 cd_conta_financ_vlm,
	0 cd_conta_financ_dbcr,
	0 cd_conta_financ_glosa,
	0 vl_glosa,
	ie_origem_titulo,
	nr_seq_classe nr_seq_classe_tit_rec,
	null nr_seq_classe_tit_pag,
	null ie_tipo_tit_pag,
	ie_tipo_tit_rec,
	null nr_titulo_pagar,
	nr_titulo nr_titulo_receber,
	null nr_seq_cheque_cp,
	null nr_seq_cheque_cr,
	null nr_seq_movto_cartao,
	null nr_seq_movto_trans,
	null nr_seq_conv_receb,
	null nr_seq_proj_recurso,
	null nr_interno_conta,
	null nr_seq_protocolo,
	null nr_ordem_compra,
	null nr_repasse_terceiro,
	null cd_agenda,
	null nr_seq_contrato,
	null nr_seq_regra
from	(select	dt_baixa,
		coalesce(cd_conta_financ,coalesce(obter_conta_transacao(CASE WHEN ie_trans_fin_conta_w='M' THEN nr_seq_trans_financ  ELSE nr_seq_trans_fin END ),cd_conta_financ_cre_w)) cd_conta_financ,
		(dividir_sem_round(coalesce(	CASE WHEN ie_tit_rec_canc_w='N' THEN vl_classificacao  ELSE CASE WHEN ie_situacao='3' THEN vl_original  ELSE vl_classificacao END  END ,
					vl_titulo_alteracao),
			vl_titulo_alteracao) *	(vl_recebido + vl_titulo)) vl_titulo,
		(dividir_sem_round(coalesce(	CASE WHEN ie_tit_rec_canc_w='N' THEN vl_classificacao  ELSE CASE WHEN ie_situacao='3' THEN vl_original  ELSE vl_classificacao END  END ,
					vl_titulo_alteracao),
			vl_titulo_alteracao) *	vl_recebido_estrang) vl_recebido_estrang,
		coalesce(cd_moeda,0) cd_moeda,
		ie_origem_titulo,
		nr_seq_classe,
		ie_tipo_tit_rec,
		nr_titulo
	from (select	pkg_date_utils.start_of(CASE WHEN ie_dt_credito_banco_cre_w='S' THEN coalesce(obter_dt_credito_banco_cre(a.nr_titulo,a.nr_sequencia),CASE WHEN ie_data_tit_adiant_rec_w='S' THEN coalesce(e.dt_adiantamento,a.dt_recebimento)  ELSE a.dt_recebimento END )  ELSE CASE WHEN ie_data_tit_adiant_rec_w='S' THEN coalesce(e.dt_adiantamento,a.dt_recebimento)  ELSE a.dt_recebimento END  END ,'DD',0) dt_baixa,
			c.cd_conta_financ,
			f.nr_seq_trans_financ,
			a.nr_seq_trans_fin,
			c.vl_classificacao,
			b.ie_situacao,
			c.vl_original,
			/* Adicionado o decode para nao chamar a function quando nao houver vl_recurso para a baixa, pois a function retornaria o vl_recebido, evitando a execucao da consulta sem necessidade. Problema de performance. */

			CASE WHEN coalesce(a.vl_recurso,0)=0 THEN a.vl_recebido  ELSE obter_vl_recurso_baixa(b.nr_titulo,a.nr_sequencia,a.vl_recebido,pkg_date_utils.start_of(CASE WHEN ie_dt_credito_banco_cre_w='S' THEN coalesce(obter_dt_credito_banco_cre(a.nr_titulo,a.nr_sequencia),CASE WHEN ie_data_tit_adiant_rec_w='S' THEN coalesce(e.dt_adiantamento,a.dt_recebimento)  ELSE a.dt_recebimento END )  ELSE CASE WHEN ie_data_tit_adiant_rec_w='S' THEN coalesce(e.dt_adiantamento,a.dt_recebimento)  ELSE a.dt_recebimento END  END ,'DD',0)) END  vl_recebido,
			a.vl_recebido_estrang,
			(obter_dados_titulo_receber(b.nr_titulo,'V'))::numeric  vl_titulo_alteracao,
			CASE WHEN obter_conta_financ_regra_fc(cd_empresa_w,'DCR',b.cd_cgc,coalesce(b.cd_convenio_conta,obter_convenio_tit_rec(b.nr_titulo)),pkg_date_utils.start_of(a.dt_recebimento,'DD',0),cd_estabelecimento_p) IS NULL THEN 0  ELSE a.vl_descontos END  + coalesce(a.vl_cambial_ativo,0) vl_titulo,
			a.cd_moeda,
			b.ie_origem_titulo,
			b.nr_seq_classe,
			b.ie_tipo_titulo ie_tipo_tit_rec ,
			b.nr_titulo
		FROM estabelecimento k, tipo_recebimento d, titulo_receber b, titulo_receber_liq a
LEFT OUTER JOIN titulo_receber_classif c ON (a.nr_titulo = c.nr_titulo)
LEFT OUTER JOIN movto_trans_financ f ON (a.nr_seq_movto_trans_fin = f.nr_sequencia)
LEFT OUTER JOIN adiantamento e ON (a.nr_adiantamento = e.nr_adiantamento)
WHERE (ie_restringe_estab_w = 'N' or substr(obter_se_conta_financ_estab(coalesce(c.cd_conta_financ, cd_conta_financ_cre_w), cd_estabelecimento_p,ie_restringe_estab_w),1,1) = 'S')  and k.cd_empresa			= cd_empresa_w and b.cd_estabelecimento		= k.cd_estabelecimento and d.ie_fluxo_passado		= 'S' and a.cd_tipo_recebimento		= d.cd_tipo_recebimento and (ie_filtro_fluxo_w = 'N' or substr(obter_se_filtro_fluxo_lote(null, null, null, nr_seq_lote_fluxo_p, null, b.nr_seq_proj_rec, cd_estabelecimento_p),1,1) = 'S') and not exists (select	1
			from	fluxo_caixa_excecao x
			where	x.ie_integracao		= 'TR'
			and	x.ie_origem_titulo_rec	= b.ie_origem_titulo
			and	x.ie_tipo_fluxo		= 'P') and (ie_restringe_estab_w = 'N' or (ie_restringe_estab_w = 'E' and b.cd_estabelecimento = cd_estabelecimento_p) or (ie_restringe_estab_w = 'S' and (b.cd_estabelecimento	= cd_estabelecimento_p or b.cd_estab_financeiro = cd_estabelecimento_p))) and (b.ie_situacao <> '3' or ie_tit_rec_canc_w = 'S') and b.ie_situacao			<> '5' and a.nr_titulo			= b.nr_titulo and (ie_filtro_fluxo_w = 'N' or substr(obter_se_filtro_fluxo_lote(coalesce(a.nr_seq_conta_banco,e.nr_seq_conta_banco), null, a.nr_seq_caixa_rec, nr_seq_lote_fluxo_p, f.nr_seq_caixa, b.nr_seq_proj_rec, cd_estabelecimento_p),1,1) = 'S')  and coalesce(a.cd_moeda,cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w)   --Projeto Multimoeda - Busca apenas os registros da moeda relacionada
  and CASE WHEN ie_dt_credito_banco_cre_w='S' THEN coalesce(obter_dt_credito_banco_cre(a.nr_titulo,a.nr_sequencia),CASE WHEN ie_data_tit_adiant_rec_w='S' THEN coalesce(e.dt_adiantamento,a.dt_recebimento)  ELSE a.dt_recebimento END )  ELSE CASE WHEN ie_data_tit_adiant_rec_w='S' THEN coalesce(e.dt_adiantamento,a.dt_recebimento)  ELSE a.dt_recebimento END  END 	between dt_inicio_w and dt_final_w  and (ie_movto_bco_pend_w in ('N','A','TP') or
			not exists (select	1
			from	movto_banco_pend_baixa x
			where	x.nr_titulo	= a.nr_titulo
			and	x.nr_seq_baixa	= a.nr_sequencia)) and not exists (select	1
			from	movto_trans_financ x
			where ((x.nr_seq_movto_cartao IS NOT NULL AND x.nr_seq_movto_cartao::text <> '') or (x.nr_seq_cheque IS NOT NULL AND x.nr_seq_cheque::text <> ''))
			and	coalesce(x.nr_seq_titulo_receber::text, '') = ''
			and	x.nr_sequencia		= a.nr_seq_movto_trans_fin) and (ie_adiant_receb_w in ('A','TR') or coalesce(a.nr_adiantamento::text, '') = '') /* Adicionado a condicao para nao chamar a function quando nao houver vl_recurso para a baixa, pois a function retornaria 0, evitando a execucao da consulta sem necessidade. Problema de performance. */

  and (coalesce(a.nr_seq_retorno::text, '') = '' or (coalesce(a.vl_recurso,0) <> 0 and obter_vl_recurso_baixa(b.nr_titulo,a.nr_sequencia,0,pkg_date_utils.start_of(CASE WHEN ie_dt_credito_banco_cre_w='S' THEN coalesce(obter_dt_credito_banco_cre(a.nr_titulo,a.nr_sequencia),CASE WHEN ie_data_tit_adiant_rec_w='S' THEN coalesce(e.dt_adiantamento,a.dt_recebimento)  ELSE a.dt_recebimento END )  ELSE CASE WHEN ie_data_tit_adiant_rec_w='S' THEN coalesce(e.dt_adiantamento,a.dt_recebimento)  ELSE a.dt_recebimento END  END ,'DD',0)) > 0)) and coalesce(a.ie_lib_caixa, 'S')	= 'S' and (coalesce(ie_titulo_caixa_w,'S') = 'S' or
			not exists (select	1
			from	caixa y,
				movto_trans_financ x
			where	x.vl_transacao	<> 0
			and	coalesce(x.nr_seq_titulo_receber::text, '') = ''
			and	coalesce(y.ie_movto_fluxo,'S') = 'S'
			and	x.nr_seq_caixa		= y.nr_sequencia
			and	x.nr_seq_caixa_rec	= a.nr_seq_caixa_rec)) ) alias217
	
union all

	select	dt_baixa,
		cd_conta_financ,
		vl_titulo,
		vl_recebido_estrang,
		cd_moeda,
		ie_origem_titulo,
		nr_seq_classe,
		ie_tipo_tit_rec,
		nr_titulo
	from	(select	pkg_date_utils.start_of(CASE WHEN ie_dt_credito_banco_cre_w='S' THEN coalesce(obter_dt_credito_banco_cre(a.nr_titulo,a.nr_sequencia),CASE WHEN ie_data_tit_adiant_rec_w='S' THEN coalesce(e.dt_adiantamento,a.dt_recebimento)  ELSE a.dt_recebimento END )  ELSE CASE WHEN ie_data_tit_adiant_rec_w='S' THEN coalesce(e.dt_adiantamento,a.dt_recebimento)  ELSE a.dt_recebimento END  END ,'DD',0) dt_baixa,
			obter_conta_financ_tit_rec(b.nr_titulo,a.nr_sequencia,coalesce(c.cd_conta_financ, coalesce(Obter_conta_transacao(CASE WHEN ie_trans_fin_conta_w='M' THEN f.nr_seq_trans_financ  ELSE a.nr_seq_trans_fin END ), cd_conta_financ_cre_w))) cd_conta_financ,
			dividir_sem_round(coalesce(c.vl_original,(obter_valor_tit_transf(b.nr_titulo, a.dt_recebimento, 'CR'))::numeric ),
					(obter_valor_tit_transf(b.nr_titulo, a.dt_recebimento, 'CR'))::numeric ) *
				/* Adicionado o decode para nao chamar a function quando nao houver vl_recurso para a baixa, pois a function retornaria o vl_recebido, evitando a execucao da consulta sem necessidade. Problema de performance. */

				(CASE WHEN coalesce(a.vl_recurso,0)=0 THEN a.vl_recebido  ELSE obter_vl_recurso_baixa(b.nr_titulo,a.nr_sequencia,a.vl_recebido,pkg_date_utils.start_of(CASE WHEN ie_dt_credito_banco_cre_w='S' THEN coalesce(obter_dt_credito_banco_cre(a.nr_titulo,a.nr_sequencia),CASE WHEN ie_data_tit_adiant_rec_w='S' THEN coalesce(e.dt_adiantamento,a.dt_recebimento)  ELSE a.dt_recebimento END )  ELSE CASE WHEN ie_data_tit_adiant_rec_w='S' THEN coalesce(e.dt_adiantamento,a.dt_recebimento)  ELSE a.dt_recebimento END  END ,'DD',0)) END  + CASE WHEN obter_conta_financ_regra_fc(cd_empresa_w,'DCR',b.cd_cgc,coalesce(b.cd_convenio_conta,obter_convenio_tit_rec(b.nr_titulo)),pkg_date_utils.start_of(a.dt_recebimento,'DD',0),cd_estabelecimento_p) IS NULL THEN 0  ELSE a.vl_descontos END ) + coalesce(a.vl_cambial_ativo,0)  vl_titulo,
			dividir_sem_round(coalesce(c.vl_original,(obter_valor_tit_transf(b.nr_titulo, a.dt_recebimento,'CR'))::numeric ),
					(obter_valor_tit_transf(b.nr_titulo, a.dt_recebimento, 'CR'))::numeric ) * a.vl_recebido_estrang vl_recebido_estrang,
			coalesce(a.cd_moeda,0) cd_moeda,
			b.ie_origem_titulo,
			b.nr_seq_classe,
			b.ie_tipo_titulo ie_tipo_tit_rec,
			b.nr_titulo
		FROM estabelecimento k, tipo_recebimento d, titulo_receber b, titulo_receber_liq a
LEFT OUTER JOIN titulo_receber_classif c ON (a.nr_titulo = c.nr_titulo)
LEFT OUTER JOIN movto_trans_financ f ON (a.nr_seq_movto_trans_fin = f.nr_sequencia)
LEFT OUTER JOIN adiantamento e ON (a.nr_adiantamento = e.nr_adiantamento)
WHERE (ie_restringe_estab_w = 'N' or substr(obter_se_conta_financ_estab(coalesce(c.cd_conta_financ,cd_conta_financ_cre_w),cd_estabelecimento_p,ie_restringe_estab_w),1,1) = 'S')  and (ie_filtro_fluxo_w = 'N' or substr(obter_se_filtro_fluxo_lote(coalesce(a.nr_seq_conta_banco,e.nr_seq_conta_banco), null, a.nr_seq_caixa_rec, nr_seq_lote_fluxo_p, f.nr_seq_caixa, b.nr_seq_proj_rec, cd_estabelecimento_p),1,1) = 'S')  and k.cd_empresa			= cd_empresa_w and b.cd_estabelecimento		= k.cd_estabelecimento and (ie_restringe_estab_w = 'N' or (ie_restringe_estab_w = 'E' and b.cd_estabelecimento = cd_estabelecimento_p) or (ie_restringe_estab_w = 'S' and (b.cd_estabelecimento = cd_estabelecimento_p or b.cd_estab_financeiro = cd_estabelecimento_p))) and b.ie_situacao			= '5' and not exists (select	1
			from	fluxo_caixa_excecao x
			where	x.ie_integracao		= 'TR'
			and	x.ie_origem_titulo_rec	= b.ie_origem_titulo
			and	x.ie_tipo_fluxo		= 'P') and a.nr_titulo			= b.nr_titulo and coalesce(a.cd_moeda,cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w)   --Projeto Multimoeda - Busca apenas os registros da moeda relacionada
  and CASE WHEN ie_dt_credito_banco_cre_w='S' THEN coalesce(obter_dt_credito_banco_cre(a.nr_titulo,a.nr_sequencia),CASE WHEN ie_data_tit_adiant_rec_w='S' THEN coalesce(e.dt_adiantamento,a.dt_recebimento)  ELSE a.dt_recebimento END )  ELSE CASE WHEN ie_data_tit_adiant_rec_w='S' THEN coalesce(e.dt_adiantamento,a.dt_recebimento)  ELSE a.dt_recebimento END  END 	between dt_inicio_w and dt_final_w  and d.ie_fluxo_passado		= 'S' and a.cd_tipo_recebimento		= d.cd_tipo_recebimento and (ie_movto_bco_pend_w in ('N','A','TP') or
			not exists (select	1
			from	movto_banco_pend_baixa x
			where	x.nr_titulo	= a.nr_titulo
			and	x.nr_seq_baixa	= a.nr_sequencia)) and (ie_adiant_receb_w in ('A','TR') or coalesce(a.nr_adiantamento::text, '') = '') and not exists (select	1
			from	movto_trans_financ x
			where ((x.nr_seq_movto_cartao IS NOT NULL AND x.nr_seq_movto_cartao::text <> '') or (x.nr_seq_cheque IS NOT NULL AND x.nr_seq_cheque::text <> ''))
			and	coalesce(x.nr_seq_titulo_receber::text, '') = ''
			and	x.nr_sequencia		= a.nr_seq_movto_trans_fin) /* Adicionado a condicao para nao chamar a function quando nao houver vl_recurso para a baixa, pois a function retornaria 0, evitando a execucao da consulta sem necessidade. Problema de performance. */

  and (coalesce(a.nr_seq_retorno::text, '') = '' or (coalesce(a.vl_recurso,0) <> 0 and obter_vl_recurso_baixa(b.nr_titulo,a.nr_sequencia,0,pkg_date_utils.start_of(CASE WHEN ie_dt_credito_banco_cre_w='S' THEN coalesce(obter_dt_credito_banco_cre(a.nr_titulo,a.nr_sequencia),CASE WHEN ie_data_tit_adiant_rec_w='S' THEN coalesce(e.dt_adiantamento,a.dt_recebimento)  ELSE a.dt_recebimento END )  ELSE CASE WHEN ie_data_tit_adiant_rec_w='S' THEN coalesce(e.dt_adiantamento,a.dt_recebimento)  ELSE a.dt_recebimento END  END ,'DD',0)) > 0)) and coalesce(a.ie_lib_caixa, 'S')	= 'S' and ie_tit_pagar_transf_w		= 'S' and (coalesce(ie_titulo_caixa_w,'S') = 'S' or
			not exists (select	1
			from	caixa y,
				movto_trans_financ x
			where	x.vl_transacao	<> 0
			and	coalesce(x.nr_seq_titulo_receber::text, '') = ''
			and	coalesce(y.ie_movto_fluxo,'S') = 'S'
			and	x.nr_seq_caixa		= y.nr_sequencia
			and	x.nr_seq_caixa_rec	= a.nr_seq_caixa_rec)) ) alias299
	) alias300
group by	dt_baixa,
	cd_conta_financ,
	ie_origem_titulo,
	nr_seq_classe,
	ie_tipo_tit_rec ,
	nr_titulo

union all

/* 3 */

select	'CR' ie_integracao,
	'3P' ie_identificacao,
	dt_baixa,
	0 cd_conta_financ,
	0 vl_titulo,
	0 vl_titulo_estrang,
	0 cd_convenio,
	sum(vl_juros),
	sum(vl_multa),
	sum(vl_desconto),
	sum(vl_rec_maior),
	0 vl_outros_acrescimos,
	0 VL_OUTRAS_DESPESAS,
	sum(vl_despesa_bancaria),
	0 cd_conta_financ_jcp,
	0 cd_conta_financ_mcp,
	0 cd_conta_financ_dcp,
	0 cd_conta_financ_ocp,
	0 cd_conta_financ_odp,
	cd_conta_financ_jcr,
	cd_conta_financ_mcr,
	cd_conta_financ_dcr,
	cd_conta_financ_vlm,
	cd_conta_financ_dbcr,
	cd_conta_financ_glosa,
	sum(vl_glosa),
	ie_origem_titulo,
	null nr_seq_classe_tit_pag,
	nr_seq_classe_tit_rec,
	null ie_tipo_tit_pag,
	ie_tipo_tit_rec,
	null nr_titulo_pagar,
	nr_titulo nr_titulo_receber,
	null nr_seq_cheque_cp,
	null nr_seq_cheque_cr,
	null nr_seq_movto_cartao,
	null nr_seq_movto_trans,
	null nr_seq_conv_receb,
	null nr_seq_proj_recurso,
	null nr_interno_conta,
	null nr_seq_protocolo,
	null nr_ordem_compra,
	null nr_repasse_terceiro,
	null cd_agenda,
	null nr_seq_contrato,
	null nr_seq_regra
from	(select	dt_baixa,
		cd_moeda,
		coalesce(dividir_sem_round(coalesce(vl_classificacao, vl_dados_titulo),vl_dados_titulo) * vl_juros,0) vl_juros,
		coalesce(dividir_sem_round(coalesce(vl_classificacao, vl_dados_titulo),vl_dados_titulo) * vl_multa,0) vl_multa,
		coalesce(dividir_sem_round(coalesce(vl_classificacao, vl_dados_titulo),vl_dados_titulo) * vl_descontos,0) vl_desconto,
		(dividir_sem_round(coalesce(CASE WHEN ie_tit_rec_canc_w='N' THEN vl_classificacao  ELSE CASE WHEN ie_situacao='3' THEN vl_original  ELSE vl_classificacao END  END ,
			vl_dados_titulo),
				coalesce(CASE WHEN vl_dados_titulo=0 THEN vl_original  ELSE vl_dados_titulo END ,0)) *	vl_rec_maior) vl_rec_maior,
		coalesce(dividir_sem_round(coalesce(vl_classificacao, vl_dados_titulo),vl_dados_titulo) * vl_despesa_bancaria,0) vl_despesa_bancaria,
		coalesce(obter_conta_financ_regra_fc(cd_empresa_w, 'JCR', cd_cgc,coalesce(cd_convenio_conta, convenio_tit_rec),dt_recebimento,cd_estabelecimento_p),0) cd_conta_financ_jcr,
		coalesce(obter_conta_financ_regra_fc(cd_empresa_w, 'MCR', cd_cgc,coalesce(cd_convenio_conta, convenio_tit_rec),dt_recebimento,cd_estabelecimento_p),0) cd_conta_financ_mcr,
		coalesce(obter_conta_financ_regra_fc(cd_empresa_w, 'DCR', cd_cgc,coalesce(cd_convenio_conta, convenio_tit_rec),dt_recebimento,cd_estabelecimento_p),0) cd_conta_financ_dcr,
		coalesce(obter_conta_financ_regra_fc(cd_empresa_w, 'VLM', cd_cgc,coalesce(cd_convenio_conta, convenio_tit_rec),dt_recebimento,cd_estabelecimento_p),0) cd_conta_financ_vlm,
		coalesce(obter_conta_financ_regra_fc(cd_empresa_w, 'DBCR', cd_cgc,coalesce(cd_convenio_conta, convenio_tit_rec),dt_recebimento,cd_estabelecimento_p),0) cd_conta_financ_dbcr,
		coalesce(obter_conta_financ_regra_fc(cd_empresa_w, 'GLO', cd_cgc,coalesce(cd_convenio_conta, convenio_tit_rec),dt_recebimento,cd_estabelecimento_p),0) cd_conta_financ_glosa,
		coalesce(dividir_sem_round(coalesce(vl_classificacao, vl_dados_titulo),vl_dados_titulo) * vl_glosa,0) vl_glosa,
		ie_origem_titulo,
		nr_seq_classe_tit_rec,
		ie_tipo_tit_rec,
		nr_titulo
	from (select pkg_date_utils.start_of(CASE WHEN ie_dt_credito_banco_cre_w='S' THEN coalesce(obter_dt_credito_banco_cre(a.nr_titulo,a.nr_sequencia),CASE WHEN ie_data_tit_adiant_rec_w='S' THEN coalesce(e.dt_adiantamento,a.dt_recebimento)  ELSE a.dt_recebimento END )  ELSE CASE WHEN ie_data_tit_adiant_rec_w='S' THEN coalesce(e.dt_adiantamento,a.dt_recebimento)  ELSE a.dt_recebimento END  END ,'DD',0) dt_baixa,
			coalesce(a.cd_moeda,0) cd_moeda,
			(obter_dados_titulo_receber(b.nr_titulo, 'VT'))::numeric  vl_dados_titulo,
			c.vl_classificacao vl_classificacao,
			a.vl_juros vl_juros,
			a.vl_multa vl_multa,
			a.vl_descontos vl_descontos,
			a.vl_rec_maior vl_rec_maior,
			a.vl_despesa_bancaria vl_despesa_bancaria,
			a.vl_glosa vl_glosa,
			b.cd_cgc cd_cgc,
			obter_convenio_tit_rec(b.nr_titulo) convenio_tit_rec,
			b.cd_convenio_conta,
			pkg_date_utils.start_of(a.dt_recebimento,'DD',0) dt_recebimento,
			b.ie_origem_titulo,
			b.nr_seq_classe nr_seq_classe_tit_rec,
			b.ie_tipo_titulo ie_tipo_tit_rec,
			b.nr_titulo,
			b.ie_situacao,
			c.vl_original
		FROM estabelecimento k, tipo_recebimento d, titulo_receber b, titulo_receber_liq a
LEFT OUTER JOIN adiantamento e ON (a.nr_adiantamento = e.nr_adiantamento)
LEFT OUTER JOIN titulo_receber_classif c ON (a.nr_titulo = c.nr_titulo)
WHERE a.nr_titulo		= b.nr_titulo  and b.cd_estabelecimento	= k.cd_estabelecimento and k.cd_empresa		= cd_empresa_w and coalesce(a.ie_lib_caixa, 'S') = 'S' and coalesce(a.cd_moeda,cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w)   --Projeto Multimoeda - Busca apenas os registros da moeda relacionada
  and CASE WHEN ie_dt_credito_banco_cre_w='S' THEN coalesce(obter_dt_credito_banco_cre(a.nr_titulo,a.nr_sequencia),CASE WHEN ie_data_tit_adiant_rec_w='S' THEN coalesce(e.dt_adiantamento,a.dt_recebimento)  ELSE a.dt_recebimento END )  ELSE CASE WHEN ie_data_tit_adiant_rec_w='S' THEN coalesce(e.dt_adiantamento,a.dt_recebimento)  ELSE a.dt_recebimento END  END  between dt_inicio_w and dt_final_w and (ie_restringe_estab_w = 'N' or (ie_restringe_estab_w = 'E' and b.cd_estabelecimento = cd_estabelecimento_p) or (ie_restringe_estab_w = 'S' and (b.cd_estabelecimento = cd_estabelecimento_p or b.cd_estab_financeiro = cd_estabelecimento_p))) and not exists (select	1
			from	movto_trans_financ x
			where ((x.nr_seq_movto_cartao IS NOT NULL AND x.nr_seq_movto_cartao::text <> '') or (x.nr_seq_cheque IS NOT NULL AND x.nr_seq_cheque::text <> ''))
			and	coalesce(x.nr_seq_titulo_receber::text, '') = ''
			and	x.nr_sequencia		= a.nr_seq_movto_trans_fin) and coalesce(a.nr_seq_retorno::text, '') = '' and (ie_restringe_estab_w = 'N' or substr(obter_se_conta_financ_estab(coalesce(c.cd_conta_financ, cd_conta_financ_cre_w), cd_estabelecimento_p,ie_restringe_estab_w),1,1) = 'S') and a.cd_tipo_recebimento	= d.cd_tipo_recebimento and d.ie_fluxo_passado	= 'S' and (b.ie_situacao <> '3' or ie_tit_rec_canc_w = 'S') and (ie_filtro_fluxo_w = 'N' or substr(obter_se_filtro_fluxo_lote(coalesce(a.nr_seq_conta_banco,e.nr_seq_conta_banco), null, a.nr_seq_caixa_rec, nr_seq_lote_fluxo_p, null, b.nr_seq_proj_rec, cd_estabelecimento_p),1,1) = 'S') and (ie_adiant_receb_w in ('A','TR') or coalesce(a.nr_adiantamento::text, '') = '') and (ie_movto_bco_pend_w in ('N','A','TP') or 
			not exists (select	1
			from	movto_banco_pend_baixa x
			where	x.nr_titulo = a.nr_titulo
			and	x.nr_seq_baixa = a.nr_sequencia)) and not exists (select	1
			from	fluxo_caixa_excecao x
			where	x.ie_integracao		= 'TR'
			and	x.ie_origem_titulo_rec	= b.ie_origem_titulo
			and	x.ie_tipo_fluxo		= 'P') and (coalesce(ie_titulo_caixa_w,'S') = 'S' or not exists (select	1
							from	caixa y,
								movto_trans_financ x
							where	x.vl_transacao	<> 0
							and	coalesce(x.nr_seq_titulo_receber::text, '') = ''
							and	coalesce(y.ie_movto_fluxo,'S') = 'S'
							and	x.nr_seq_caixa		= y.nr_sequencia
							and	x.nr_seq_caixa_rec	= a.nr_seq_caixa_rec)) ) alias392
	) alias393
group by
	dt_baixa,
	cd_conta_financ_jcr,
	cd_conta_financ_mcr,
	cd_conta_financ_dcr,
	cd_conta_financ_vlm,
	cd_conta_financ_dbcr,
	cd_conta_financ_glosa,
	ie_origem_titulo,
	nr_seq_classe_tit_rec,
	ie_tipo_tit_rec,
	nr_titulo

union all

/* 4 */

select	'CR' ie_integracao,
	'4P' ie_identificacao,
	dt_vencimento,
	coalesce(cd_conta_atual_cheque, cd_conta_fin_cheque) cd_conta_financ,
	sum(vl_cheque_cr),
	sum(vl_cheque_estrang),
	0 cd_convenio,
	0 vl_juros,
	0 vl_multa,
	0 vl_desconto,
	0 vl_rec_maior,
	0 vl_outros_acrescimos,
	0 VL_OUTRAS_DESPESAS,
	0 vl_despesa_bancaria,
	0 cd_conta_financ_jcp,
	0 cd_conta_financ_mcp,
	0 cd_conta_financ_dcp,
	0 cd_conta_financ_ocp,
	0 cd_conta_financ_odp,
	0 cd_conta_financ_jcr,
	0 cd_conta_financ_mcr,
	0 cd_conta_financ_dcr,
	0 cd_conta_financ_vlm,
	0 cd_conta_financ_dbcr,
	0 cd_conta_financ_glosa,
	0 vl_glosa,
	null ie_origem_titulo,
	null nr_seq_classe_tit_rec,
	null nr_seq_classe_tit_pag,
	null ie_tipo_tit_pag,
	null ie_tipo_tit_rec,
	null nr_titulo_pagar,
	null nr_titulo_receber,
	null nr_seq_cheque_cp,
	nr_seq_cheque nr_seq_cheque_cr,
	null nr_seq_movto_cartao,
	null nr_seq_movto_trans,
	null nr_seq_conv_receb,
	null nr_seq_proj_recurso,
	null nr_interno_conta,
	null nr_seq_protocolo,
	null nr_ordem_compra,
	null nr_repasse_terceiro,
	null cd_agenda,
	null nr_seq_contrato,
	null nr_seq_regra
from (select	pkg_date_utils.start_of(coalesce(a.dt_prev_desbloqueio, coalesce(a.dt_vencimento_atual, a.dt_vencimento)), 'DD',0) dt_vencimento,	/*CHEQUE A VISTA*/
		obter_conta_fin_cheque_estab(a.nr_seq_cheque, 0, ie_restringe_estab_w) cd_conta_fin_cheque,
		b.cd_conta_avista cd_conta_atual_cheque,
		coalesce(b.vl_classificacao, a.vl_cheque) vl_cheque_cr,
		coalesce(dividir_sem_round(coalesce(b.vl_classificacao,a.vl_cheque),a.vl_cheque) * coalesce(a.vl_cheque_estrang,0),0) vl_cheque_estrang,
		obter_status_cheque(a.nr_seq_cheque) ie_status_cheque_cr,
		a.nr_seq_cheque
	FROM estabelecimento k, cheque_cr a
LEFT OUTER JOIN cheque_cr_classif b ON (a.nr_seq_cheque = b.nr_seq_cheque)
WHERE k.cd_empresa			= cd_empresa_w and a.cd_estabelecimento		= k.cd_estabelecimento and (ie_restringe_estab_w = 'N' or (ie_restringe_estab_w = 'E' and a.cd_estabelecimento = cd_estabelecimento_p) or (ie_restringe_estab_w = 'S' and (a.cd_estabelecimento = cd_estabelecimento_p))) and (ie_filtro_fluxo_w  = 'N' or substr(obter_se_filtro_fluxo_lote(null, a.nr_seq_cheque, a.nr_seq_caixa_rec, nr_seq_lote_fluxo_p, null, null, cd_estabelecimento_p),1,1) = 'S') and substr(obter_se_cheque_cr_avista(a.nr_seq_cheque),1,1) = 'S' and (coalesce(a.dt_vencimento_atual, a.dt_vencimento) IS NOT NULL AND (coalesce(a.dt_vencimento_atual, a.dt_vencimento))::text <> '') and coalesce(a.cd_moeda,cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w)   --Projeto Multimoeda - Busca apenas os registros da moeda relacionada
  and coalesce(a.dt_prev_desbloqueio, coalesce(a.dt_vencimento_atual, a.dt_vencimento)) between dt_inicio_w and dt_final_w
	 
union all

	select	pkg_date_utils.start_of(coalesce(a.dt_prev_desbloqueio, a.dt_deposito), 'DD',0) dt_vencimento,					/*DEPOSITO DE CHEQUE NAO A VISTA*/
		obter_conta_fin_cheque_estab(a.nr_seq_cheque, 2, ie_restringe_estab_w) cd_conta_fin_cheque,
		b.cd_conta_dep cd_conta_atual_cheque,
		coalesce(b.vl_classificacao, a.vl_cheque) vl_cheque_cr,
		coalesce(dividir_sem_round(coalesce(b.vl_classificacao,a.vl_cheque),a.vl_cheque) * coalesce(a.vl_cheque_estrang,0),0) vl_cheque_estrang,
		obter_status_cheque(a.nr_seq_cheque) ie_status_cheque_cr,
		a.nr_seq_cheque
	FROM estabelecimento k, cheque_cr a
LEFT OUTER JOIN cheque_cr_classif b ON (a.nr_seq_cheque = b.nr_seq_cheque)
WHERE k.cd_empresa			= cd_empresa_w and a.cd_estabelecimento		= k.cd_estabelecimento and (ie_restringe_estab_w = 'N' or (ie_restringe_estab_w = 'E' and a.cd_estabelecimento = cd_estabelecimento_p) or (ie_restringe_estab_w = 'S' and (a.cd_estabelecimento = cd_estabelecimento_p))) and (ie_filtro_fluxo_w = 'N' or substr(obter_se_filtro_fluxo_lote(null, a.nr_seq_cheque, a.nr_seq_caixa_rec, nr_seq_lote_fluxo_p, null, null, cd_estabelecimento_p),1,1) = 'S') and substr(obter_se_cheque_cr_avista(a.nr_seq_cheque),1,1) = 'N' and a.cd_estabelecimento	= cd_estabelecimento_p and (a.dt_deposito IS NOT NULL AND a.dt_deposito::text <> '') and coalesce(a.cd_moeda,cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w)   --Projeto Multimoeda - Busca apenas os registros da moeda relacionada
  and coalesce(a.dt_prev_desbloqueio, a.dt_deposito) between dt_inicio_w and dt_final_w
	 
union all

	select	pkg_date_utils.start_of(a.dt_devolucao_banco, 'DD',0) dt_vencimento,							/*PRIMEIRA DEVOLUCAO*/
		obter_conta_fin_cheque_estab(a.nr_seq_cheque, 3, ie_restringe_estab_w) cd_conta_fin_cheque,
		b.cd_conta_dev cd_conta_atual_cheque,
		coalesce(b.vl_classificacao, a.vl_cheque) vl_cheque_cr,
		coalesce(dividir_sem_round(coalesce(b.vl_classificacao,a.vl_cheque),a.vl_cheque) * coalesce(a.vl_cheque_estrang,0),0) vl_cheque_estrang,
		obter_status_cheque(a.nr_seq_cheque) ie_status_cheque_cr,
		a.nr_seq_cheque
	FROM estabelecimento k, cheque_cr a
LEFT OUTER JOIN cheque_cr_classif b ON (a.nr_seq_cheque = b.nr_seq_cheque)
WHERE k.cd_empresa			= cd_empresa_w and a.cd_estabelecimento		= k.cd_estabelecimento and (ie_restringe_estab_w = 'N' or (ie_restringe_estab_w = 'E' and a.cd_estabelecimento = cd_estabelecimento_p) or (ie_restringe_estab_w = 'S' and (a.cd_estabelecimento = cd_estabelecimento_p))) and (ie_filtro_fluxo_w = 'N' or substr(obter_se_filtro_fluxo_lote(null, a.nr_seq_cheque, a.nr_seq_caixa_rec, nr_seq_lote_fluxo_p, null, null, cd_estabelecimento_p),1,1) = 'S') and a.cd_estabelecimento	= cd_estabelecimento_p and (a.dt_devolucao_banco IS NOT NULL AND a.dt_devolucao_banco::text <> '') and coalesce(a.cd_moeda,cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w)   --Projeto Multimoeda - Busca apenas os registros da moeda relacionada
  and a.dt_devolucao_banco	between dt_inicio_w and dt_final_w
	 
union all

	select	pkg_date_utils.start_of(coalesce(a.dt_prev_seg_desbloqueio, a.dt_reapresentacao), 'DD',0) dt_vencimento,				/*REAPRESENTACAO DO CHEQUE*/
		obter_conta_fin_cheque_estab(a.nr_seq_cheque, 4, ie_restringe_estab_w) cd_conta_fin_cheque,
		b.cd_conta_reap cd_conta_atual_cheque,
		coalesce(b.vl_classificacao, a.vl_cheque) vl_cheque_cr,
		coalesce(dividir_sem_round(coalesce(b.vl_classificacao,a.vl_cheque),a.vl_cheque) * coalesce(a.vl_cheque_estrang,0),0) vl_cheque_estrang,
		obter_status_cheque(a.nr_seq_cheque) ie_status_cheque_cr,
		a.nr_seq_cheque
	FROM estabelecimento k, cheque_cr a
LEFT OUTER JOIN cheque_cr_classif b ON (a.nr_seq_cheque = b.nr_seq_cheque)
WHERE k.cd_empresa			= cd_empresa_w and a.cd_estabelecimento		= k.cd_estabelecimento and (ie_restringe_estab_w = 'N' or (ie_restringe_estab_w = 'E' and a.cd_estabelecimento = cd_estabelecimento_p) or (ie_restringe_estab_w = 'S' and (a.cd_estabelecimento = cd_estabelecimento_p))) and (ie_filtro_fluxo_w = 'N' or substr(obter_se_filtro_fluxo_lote(null, a.nr_seq_cheque, a.nr_seq_caixa_rec, nr_seq_lote_fluxo_p, null, null, cd_estabelecimento_p),1,1) = 'S') and a.cd_estabelecimento	= cd_estabelecimento_p and (a.dt_reapresentacao IS NOT NULL AND a.dt_reapresentacao::text <> '') and coalesce(a.cd_moeda,cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w)   --Projeto Multimoeda - Busca apenas os registros da moeda relacionada
  and coalesce(a.dt_prev_seg_desbloqueio, a.dt_reapresentacao) between dt_inicio_w and dt_final_w
	 
union all

	select	pkg_date_utils.start_of(a.dt_seg_devolucao, 'DD',0) dt_vencimento,								/*SEGUNDA DEVOLUCAO*/
		obter_conta_fin_cheque_estab(a.nr_seq_cheque, 5, ie_restringe_estab_w) cd_conta_fin_cheque,
		b.cd_conta_seg_dev cd_conta_atual_cheque,
		coalesce(b.vl_classificacao, a.vl_cheque) vl_cheque_cr,
		coalesce(dividir_sem_round(coalesce(b.vl_classificacao,a.vl_cheque),a.vl_cheque) * coalesce(a.vl_cheque_estrang,0),0) vl_cheque_estrang,
		obter_status_cheque(a.nr_seq_cheque) ie_status_cheque_cr,
		a.nr_seq_cheque
	FROM estabelecimento k, cheque_cr a
LEFT OUTER JOIN cheque_cr_classif b ON (a.nr_seq_cheque = b.nr_seq_cheque)
WHERE k.cd_empresa			= cd_empresa_w and a.cd_estabelecimento		= k.cd_estabelecimento and (ie_restringe_estab_w = 'N' or (ie_restringe_estab_w = 'E' and a.cd_estabelecimento = cd_estabelecimento_p) or (ie_restringe_estab_w = 'S' and (a.cd_estabelecimento = cd_estabelecimento_p))) and (ie_filtro_fluxo_w = 'N' or substr(obter_se_filtro_fluxo_lote(null, a.nr_seq_cheque, a.nr_seq_caixa_rec, nr_seq_lote_fluxo_p, null, null, cd_estabelecimento_p),1,1) = 'S') and a.cd_estabelecimento	= cd_estabelecimento_p and (a.dt_seg_devolucao IS NOT NULL AND a.dt_seg_devolucao::text <> '') and coalesce(a.cd_moeda,cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w)   --Projeto Multimoeda - Busca apenas os registros da moeda relacionada
  and a.dt_seg_devolucao 	between dt_inicio_w and dt_final_w
	 
union all

	select	pkg_date_utils.start_of(coalesce(a.dt_prev_terc_desbloqueio, a.dt_seg_reapresentacao), 'DD',0) dt_vencimento,			/*SEGUNDA REAPRESENTACAO DO CHEQUE*/
		obter_conta_fin_cheque_estab(a.nr_seq_cheque, 9, ie_restringe_estab_w) cd_conta_fin_cheque,
		b.cd_conta_seg_reap cd_conta_atual_cheque,
		coalesce(b.vl_classificacao, a.vl_cheque) vl_cheque_cr,
		coalesce(dividir_sem_round(coalesce(b.vl_classificacao,a.vl_cheque),a.vl_cheque) * coalesce(a.vl_cheque_estrang,0),0) vl_cheque_estrang,
		obter_status_cheque(a.nr_seq_cheque) ie_status_cheque_cr,
		a.nr_seq_cheque
	FROM estabelecimento k, cheque_cr a
LEFT OUTER JOIN cheque_cr_classif b ON (a.nr_seq_cheque = b.nr_seq_cheque)
WHERE k.cd_empresa			= cd_empresa_w and a.cd_estabelecimento		= k.cd_estabelecimento and (ie_restringe_estab_w = 'N' or (ie_restringe_estab_w = 'E' and a.cd_estabelecimento = cd_estabelecimento_p) or (ie_restringe_estab_w = 'S' and (a.cd_estabelecimento = cd_estabelecimento_p))) and (ie_filtro_fluxo_w = 'N' or substr(obter_se_filtro_fluxo_lote(null, a.nr_seq_cheque, a.nr_seq_caixa_rec, nr_seq_lote_fluxo_p, null, null, cd_estabelecimento_p),1,1) = 'S') and a.cd_estabelecimento	= cd_estabelecimento_p and (a.dt_seg_reapresentacao IS NOT NULL AND a.dt_seg_reapresentacao::text <> '') and coalesce(a.cd_moeda,cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w)   --Projeto Multimoeda - Busca apenas os registros da moeda relacionada
  and coalesce(a.dt_prev_terc_desbloqueio, a.dt_seg_reapresentacao) between dt_inicio_w and dt_final_w
	 
union all
	
	select	pkg_date_utils.start_of(a.dt_terc_devolucao, 'DD',0) dt_vencimento,								/*TERCEIRA DEVOLUCAO*/
		obter_conta_fin_cheque_estab(a.nr_seq_cheque, 10, ie_restringe_estab_w) cd_conta_fin_cheque,
		b.cd_conta_terc_dev cd_conta_atual_cheque,
		coalesce(b.vl_classificacao, a.vl_cheque) vl_cheque_cr,
		coalesce(dividir_sem_round(coalesce(b.vl_classificacao,a.vl_cheque),a.vl_cheque) * coalesce(a.vl_cheque_estrang,0),0) vl_cheque_estrang,
		obter_status_cheque(a.nr_seq_cheque) ie_status_cheque_cr,
		a.nr_seq_cheque
	FROM estabelecimento k, cheque_cr a
LEFT OUTER JOIN cheque_cr_classif b ON (a.nr_seq_cheque = b.nr_seq_cheque)
WHERE k.cd_empresa			= cd_empresa_w and a.cd_estabelecimento		= k.cd_estabelecimento and (ie_restringe_estab_w = 'N' or (ie_restringe_estab_w = 'E' and a.cd_estabelecimento = cd_estabelecimento_p) or (ie_restringe_estab_w = 'S' and (a.cd_estabelecimento = cd_estabelecimento_p))) and (ie_filtro_fluxo_w = 'N' or substr(obter_se_filtro_fluxo_lote(null, a.nr_seq_cheque, a.nr_seq_caixa_rec, nr_seq_lote_fluxo_p, null, null, cd_estabelecimento_p),1,1) = 'S') and a.cd_estabelecimento	= cd_estabelecimento_p and (a.dt_terc_devolucao IS NOT NULL AND a.dt_terc_devolucao::text <> '') and coalesce(a.cd_moeda,cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w)   --Projeto Multimoeda - Busca apenas os registros da moeda relacionada
  and a.dt_terc_devolucao	between dt_inicio_w and dt_final_w
	 
union all

	select	pkg_date_utils.start_of(a.dt_devolucao, 'DD',0) dt_vencimento,								/*DEVOLUCAO AO PACIENTE*/
		obter_conta_fin_cheque_estab(a.nr_seq_cheque, 6, ie_restringe_estab_w) cd_conta_fin_cheque,
		b.cd_conta_dev_pac cd_conta_atual_cheque,
		coalesce(b.vl_classificacao, a.vl_cheque) vl_cheque_cr,
		coalesce(dividir_sem_round(coalesce(b.vl_classificacao,a.vl_cheque),a.vl_cheque) * coalesce(a.vl_cheque_estrang,0),0) vl_cheque_estrang,
		obter_status_cheque(a.nr_seq_cheque) ie_status_cheque_cr,
		a.nr_seq_cheque
	FROM estabelecimento k, cheque_cr a
LEFT OUTER JOIN cheque_cr_classif b ON (a.nr_seq_cheque = b.nr_seq_cheque)
WHERE k.cd_empresa			= cd_empresa_w and a.cd_estabelecimento		= k.cd_estabelecimento and (ie_restringe_estab_w = 'N' or (ie_restringe_estab_w = 'E' and a.cd_estabelecimento = cd_estabelecimento_p) or (ie_restringe_estab_w = 'S' and (a.cd_estabelecimento = cd_estabelecimento_p))) and (ie_filtro_fluxo_w = 'N' or substr(obter_se_filtro_fluxo_lote(null, a.nr_seq_cheque, a.nr_seq_caixa_rec, nr_seq_lote_fluxo_p, null, null, cd_estabelecimento_p),1,1) = 'S') and a.cd_estabelecimento	= cd_estabelecimento_p and (a.dt_devolucao IS NOT NULL AND a.dt_devolucao::text <> '') and coalesce(a.cd_moeda,cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w)   --Projeto Multimoeda - Busca apenas os registros da moeda relacionada
  and a.dt_devolucao		between dt_inicio_w and dt_final_w
	 
union all

	select	pkg_date_utils.start_of(a.dt_custodia, 'DD',0) dt_vencimento,	/*CHEQUE CUSToDIA*/
		obter_conta_financ_cheque_cr(a.nr_seq_cheque,11) cd_conta_fin_cheque,
		b.cd_conta_custodia cd_conta_atual_cheque,
		coalesce(b.vl_classificacao, a.vl_cheque) vl_cheque_cr,
		coalesce(dividir_sem_round(coalesce(b.vl_classificacao,a.vl_cheque),a.vl_cheque) * coalesce(a.vl_cheque_estrang,0),0) vl_cheque_estrang,
		obter_status_cheque(a.nr_seq_cheque) ie_status_cheque_cr,
		a.nr_seq_cheque
	FROM estabelecimento k, cheque_cr a
LEFT OUTER JOIN cheque_cr_classif b ON (a.nr_seq_cheque = b.nr_seq_cheque)
WHERE k.cd_empresa			= cd_empresa_w and a.cd_estabelecimento		= k.cd_estabelecimento and (ie_restringe_estab_w = 'N' or (ie_restringe_estab_w = 'E' and a.cd_estabelecimento = cd_estabelecimento_p) or (ie_restringe_estab_w = 'S' and (a.cd_estabelecimento = cd_estabelecimento_p))) and (ie_filtro_fluxo_w  = 'N' or substr(obter_se_filtro_fluxo_lote(null, a.nr_seq_cheque, a.nr_seq_caixa_rec, nr_seq_lote_fluxo_p, null, null, cd_estabelecimento_p),1,1) = 'S') and (a.dt_custodia IS NOT NULL AND a.dt_custodia::text <> '') and coalesce(a.cd_moeda,cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w)   --Projeto Multimoeda - Busca apenas os registros da moeda relacionada
  and dt_custodia between dt_inicio_w and dt_final_w ) alias576	
where	coalesce(coalesce(cd_conta_atual_cheque, cd_conta_fin_cheque),0) > 0
and (ie_cheque_devolvido_w	= 'S' or ie_status_cheque_cr <> 6)
group by dt_vencimento,
	coalesce(cd_conta_atual_cheque, cd_conta_fin_cheque),
	nr_seq_cheque

union all

/* 5 */

select	'CR',
	'5P' ie_identificacao,
	dt_vencimento,
	coalesce(cd_conta_fin_classif,cd_conta_fin_cartao),
	sum(vl_movto_cartao),
	0 vl_cartao_estrang,
	0 cd_convenio,
	0 vl_juros,
	0 vl_multa,
	0 vl_desconto,
	0 vl_rec_maior,
	0 vl_outros_acrescimos,
	0 VL_OUTRAS_DESPESAS,
	0 vl_despesa_bancaria,
	0 cd_conta_financ_jcp,
	0 cd_conta_financ_mcp,
	0 cd_conta_financ_dcp,
	0 cd_conta_financ_ocp,
	0 cd_conta_financ_odp,
	0 cd_conta_financ_jcr,
	0 cd_conta_financ_mcr,
	0 cd_conta_financ_dcr,
	0 cd_conta_financ_vlm,
	0 cd_conta_financ_dbcr,
	0 cd_conta_financ_glosa,
	0 vl_glosa,
	null ie_origem_titulo,
	null nr_seq_classe_tit_rec,
	null nr_seq_classe_tit_pag,
	null ie_tipo_tit_pag,
	null ie_tipo_tit_rec,
	null nr_titulo_pagar,
	null nr_titulo_receber,
	null nr_seq_cheque_cp,
	null nr_seq_cheque_cr,
	nr_sequencia nr_seq_movto_cartao,
	null nr_seq_movto_trans,
	null nr_seq_conv_receb,
	null nr_seq_proj_recurso,
	null nr_interno_conta,
	null nr_seq_protocolo,
	null nr_ordem_compra,
	null nr_repasse_terceiro,
	null cd_agenda,
	null nr_seq_contrato,
	null nr_seq_regra
from (select	pkg_date_utils.start_of(a.dt_baixa, 'DD',0) dt_vencimento,
		obter_conta_financ_cartao_cr(b.nr_sequencia) cd_conta_fin_cartao,
		c.cd_conta_financ cd_conta_fin_classif,
		dividir_sem_round(coalesce(c.vl_classificacao, b.vl_transacao),b.vl_transacao) * CASE WHEN coalesce(ie_despesa_cartao_w,'N')='S' THEN coalesce(a.vl_baixa,0) + coalesce(a.vl_despesa,0)  ELSE a.vl_baixa END  vl_movto_cartao,
		b.nr_sequencia
	FROM estabelecimento k, movto_cartao_cr_baixa a, movto_cartao_cr b
LEFT OUTER JOIN movto_cartao_cr_classif c ON (b.nr_sequencia = c.nr_seq_movto)
WHERE a.nr_seq_movto		= b.nr_sequencia and (ie_filtro_fluxo_w = 'N' or substr(obter_se_filtro_fluxo_lote(a.nr_seq_conta_banco, null, null, nr_seq_lote_fluxo_p, null, null, cd_estabelecimento_p),1,1) = 'S')  and k.cd_empresa			= cd_empresa_w and b.cd_estabelecimento		= k.cd_estabelecimento and (ie_restringe_estab_w = 'N' or (ie_restringe_estab_w = 'E' and b.cd_estabelecimento = cd_estabelecimento_p) or (ie_restringe_estab_w = 'S' and (b.cd_estabelecimento = cd_estabelecimento_p))) and cd_moeda_empresa_w	= coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w)   --Projeto Multimoeda - Busca apenas os registros em moeda nacional
  and coalesce(b.dt_cancelamento::text, '') = '' and a.dt_baixa between dt_inicio_w and dt_final_w ) alias599
where	coalesce(cd_conta_fin_classif,coalesce(cd_conta_fin_cartao,0)) > 0
group by dt_vencimento,
	coalesce(cd_conta_fin_classif,cd_conta_fin_cartao),
	nr_sequencia

union all

/* 6 */

select	'RC' ie_integracao,
	'6P' ie_identificacao,
	dt_vencimento,
	0,
	sum(vl_convenio_receb),
	sum(vl_convenio_estrang),
	cd_convenio,
	0 vl_juros,
	0 vl_multa,
	0 vl_desconto,
	0 vl_rec_maior,
	0 vl_outros_acrescimos,
	0 VL_OUTRAS_DESPESAS,
	0 vl_despesa_bancaria,
	0 cd_conta_financ_mcp,
	0 cd_conta_financ_dcp,
	0 cd_conta_financ_ocp,
	0 cd_conta_financ_odp,
	0 cd_conta_financ_jcr,
	0 cd_conta_financ_jcp,
	0 cd_conta_financ_mcr,
	0 cd_conta_financ_dcr,
	0 cd_conta_financ_vlm,
	0 cd_conta_financ_dbcr,
	0 cd_conta_financ_glosa,
	0 vl_glosa,
	null ie_origem_titulo,
	null nr_seq_classe_tit_rec,
	null nr_seq_classe_tit_pag,
	null ie_tipo_tit_pag,
	null ie_tipo_tit_rec,
	null nr_titulo_pagar,
	null nr_titulo_receber,
	null nr_seq_cheque_cp,
	null nr_seq_cheque_cr,
	null nr_seq_movto_cartao,
	null nr_seq_movto_trans,
	nr_sequencia nr_seq_conv_receb,
	null nr_seq_proj_recurso,
	null nr_interno_conta,
	null nr_seq_protocolo,
	null nr_ordem_compra,
	null nr_repasse_terceiro,
	null cd_agenda,
	null nr_seq_contrato,
	null nr_seq_regra
from (select	pkg_date_utils.start_of(coalesce(coalesce(a.dt_recebimento, a.dt_liberacao), a.dt_fluxo_caixa), 'DD',0) dt_vencimento,
		CASE WHEN a.vl_deposito=0 THEN a.vl_recebimento  ELSE a.vl_deposito END  vl_convenio_receb,
		a.vl_moeda_original vl_convenio_estrang,
		a.cd_convenio,
		a.nr_sequencia
	from	estabelecimento k,
		convenio_receb a
	where	a.cd_estabelecimento		= k.cd_estabelecimento
	and	k.cd_empresa			= cd_empresa_w
	and (ie_filtro_fluxo_w = 'N' or substr(obter_se_filtro_fluxo_lote(a.nr_seq_conta_banco, null, null, nr_seq_lote_fluxo_p, null, null, cd_estabelecimento_p),1,1) = 'S')
	and (a.cd_estabelecimento	= cd_estabelecimento_p or ie_restringe_estab_w = 'N')
	and	coalesce(a.ie_integrar_cb_fluxo,'S')	= 'S'
	and	coalesce(a.cd_moeda,cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w)  --Projeto Multimoeda - Busca apenas os registros da moeda relacionada
	and	coalesce(coalesce(a.dt_recebimento, a.dt_liberacao), a.dt_fluxo_caixa) between dt_inicio_w and dt_final_w
	and	ie_convenio_receb_w		= 'S'
	
union all

	select	pkg_date_utils.start_of(a.dt_estorno, 'DD',0) dt_vencimento,
		a.vl_estorno * -1 vl_convenio_receb,
		b.vl_moeda_original * -1 vl_convenio_estrang,
		b.cd_convenio,
		a.nr_sequencia
	from	estabelecimento k,
		convenio_receb b,
		convenio_receb_estorno a
	where	b.cd_estabelecimento		= k.cd_estabelecimento
	and	k.cd_empresa			= cd_empresa_w
	and	a.nr_seq_receb			= b.nr_sequencia
	and (ie_filtro_fluxo_w = 'N' or substr(obter_se_filtro_fluxo_lote(b.nr_seq_conta_banco, null, null, nr_seq_lote_fluxo_p, null, null, cd_estabelecimento_p),1,1) = 'S')
	and (b.cd_estabelecimento	= cd_estabelecimento_p or ie_restringe_estab_w = 'N')
	and	coalesce(b.ie_integrar_cb_fluxo,'S')	= 'S'
	and	coalesce(b.cd_moeda,cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w)  --Projeto Multimoeda - Busca apenas os registros da moeda relacionada
	and	a.dt_estorno between dt_inicio_w and dt_final_w
	and	ie_conv_receb_estorno_w		= 'S') alias625
group by dt_vencimento,
	cd_convenio,
	nr_sequencia

union all

/* 7 */

select	ie_integracao,
	'7P' ie_identificacao,
	dt_vencimento,
	cd_conta_financ_movto,
	vl_movto_transf,
	vl_movto_estrang,
	0 cd_convenio,
	0 vl_juros,
	0 vl_multa,
	0 vl_desconto,
	0 vl_rec_maior,
	0 vl_outros_acrescimos,
	0 VL_OUTRAS_DESPESAS,
	0 vl_despesa_bancaria,
	0 cd_conta_financ_jcp,
	0 cd_conta_financ_mcp,
	0 cd_conta_financ_dcp,
	0 cd_conta_financ_ocp,
	0 cd_conta_financ_odp,
	0 cd_conta_financ_jcr,
	0 cd_conta_financ_mcr,
	0 cd_conta_financ_dcr,
	0 cd_conta_financ_vlm,
	0 cd_conta_financ_dbcr,
	0 cd_conta_financ_glosa,
	0 vl_glosa,
	null ie_origem_titulo,
	null nr_seq_classe_tit_rec,
	null nr_seq_classe_tit_pag,
	null ie_tipo_tit_pag,
	null ie_tipo_tit_rec,
	null nr_titulo_pagar,
	null nr_titulo_receber,
	null nr_seq_cheque_cp,
	null nr_seq_cheque_cr,
	null nr_seq_movto_cartao,
	nr_sequencia nr_seq_movto_trans,
	null nr_seq_conv_receb,
	null nr_seq_proj_recurso,
	null nr_interno_conta,
	null nr_seq_protocolo,
	null nr_ordem_compra,
	null nr_repasse_terceiro,
	null cd_agenda,
	null nr_seq_contrato,
	null nr_seq_regra
from	(select	ie_integracao,
		dt_vencimento,
		cd_conta_financ_movto,
		vl_movto_transf,
		vl_movto_estrang,
		cd_centro_custo,
		obter_empresa_estab(cd_estab_movto_trans) cd_empresa_estab,
		nr_sequencia
	from (select	CASE WHEN coalesce(a.nr_seq_caixa::text, '') = '' THEN  'CB'  ELSE 'TS' END  ie_integracao,
			pkg_date_utils.start_of(a.dt_transacao,'DD',0) dt_vencimento,
			coalesce(a.cd_conta_financ, coalesce(d.cd_conta_financ, b.cd_conta_financ)) cd_conta_financ_movto,
			coalesce(d.vl_transacao, a.vl_transacao) - CASE WHEN ie_adiant_pago_w='TC' THEN CASE WHEN b.ie_acao=13 THEN 0  ELSE (	select	coalesce(sum(x.vl_adiantamento),0)															from	titulo_pagar_adiant x															where	x.nr_adiantamento	= a.nr_adiant_pago) END   ELSE 0 END  vl_movto_transf,
			coalesce(d.vl_transacao_estrang, a.vl_transacao_estrang) - CASE WHEN ie_adiant_pago_w='TC' THEN CASE WHEN b.ie_acao=13 THEN 0  ELSE (	select	coalesce(sum(x.vl_adto_estrang),0)															from	titulo_pagar_adiant x															where	x.nr_adiantamento	= a.nr_adiant_pago) END   ELSE 0 END  vl_movto_estrang,
			a.cd_centro_custo,
			obter_estab_movto_trans_financ(a.nr_seq_caixa, a.nr_seq_banco) cd_estab_movto_trans,
			obter_se_conta_financ_estab(coalesce(a.cd_conta_financ, coalesce(d.cd_conta_financ, b.cd_conta_financ)), cd_estabelecimento_p,ie_restringe_estab_w) ie_conta_financ_estab,
			a.nr_sequencia
		FROM transacao_financeira b, movto_trans_financ a
LEFT OUTER JOIN caixa c ON (a.nr_seq_caixa = c.nr_sequencia)
LEFT OUTER JOIN movto_trans_financ_cc d ON (a.nr_sequencia = d.nr_seq_movto_trans)
WHERE a.nr_seq_trans_financ 	= b.nr_sequencia   and (ie_filtro_fluxo_w = 'N' or substr(obter_se_filtro_fluxo_lote(a.nr_seq_banco, null, a.nr_seq_caixa_rec, nr_seq_lote_fluxo_p, a.nr_seq_caixa, a.nr_seq_proj_rec, cd_estabelecimento_p),1,1) = 'S') and (not exists (select	1
			from	titulo_pagar_adiant x
			where	x.nr_adiantamento = a.nr_adiant_pago) or ie_adiant_pago_w in ('CB','TC')) and (not exists (select	1
			from	titulo_receber_liq x
			where	x.nr_adiantamento = a.nr_adiantamento) or ie_adiant_receb_w = 'CB') and (not exists (select	1
			from	movto_banco_pend x
			where	x.nr_seq_movto_trans_fin = a.nr_sequencia
			and	x.vl_saldo = 0
			and	ie_movto_bco_pend_w in ('A','TP')) or ie_movto_bco_pend_w in ('CB','N')) and (ie_adiant_pago_w in ('A','CB','TC') or coalesce(a.nr_adiant_pago::text, '') = '') and (ie_adiant_receb_w in ('A','CB') or coalesce(a.nr_adiantamento::text, '') = '') and coalesce(c.ie_movto_fluxo, 'S')	= 'S' and (ie_filtro_banco_w = 'S' or (coalesce(a.ie_origem_lancamento, CASE WHEN coalesce(a.nr_seq_caixa::text, '') = '' THEN  'C'  ELSE 'T' END ) = CASE WHEN coalesce(a.nr_seq_caixa::text, '') = '' THEN  'C'  ELSE 'T' END )) and coalesce(a.cd_conta_financ, coalesce(d.cd_conta_financ, b.cd_conta_financ))	is not null and coalesce(a.nr_seq_titulo_receber::text, '') = '' and coalesce(a.nr_seq_titulo_pagar::text, '') = '' and a.vl_transacao		<> 0 and coalesce(a.cd_moeda,cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w)   --Projeto Multimoeda - Busca apenas os registros da moeda relacionada
  and (coalesce(a.nr_seq_conv_receb::text, '') = '' or ie_convenio_receb_w	= 'N') and a.dt_transacao		between dt_inicio_w and dt_final_w ) alias675
	where (ie_restringe_estab_w = 'N' or ie_conta_financ_estab = 'S')
	and	( (ie_restringe_estab_w = 'N') or
		  (ie_restringe_estab_w = 'E' AND cd_estab_movto_trans = cd_estabelecimento_p) or
		  ( (ie_restringe_estab_w = 'F') and ((cd_estab_movto_trans = cd_estabelecimento_p) or (obter_estab_financeiro(cd_estab_movto_trans) = cd_estabelecimento_p))) ) ) alias686
where	cd_empresa_estab = cd_empresa_w

union all

/* 8 */

select	'CP',
	'8P' ie_identificacao,
	dt_vencimento,
	cd_conta_financ_cheque,
	sum(vl_cheque_cp),
	sum(vl_cheque_estrang),
	0 cd_convenio,
	sum(vl_juros),
	sum(vl_multa),
	sum(vl_desconto),
	0 vl_rec_maior,
	sum(vl_outros_acrescimos),
	sum(VL_OUTRAS_DESPESAS),
	0 vl_despesa_bancaria,
	coalesce(cd_conta_financ_jcp,0),
	coalesce(cd_conta_financ_mcp,0),
	coalesce(cd_conta_financ_dcp,0),
	coalesce(cd_conta_financ_ocp,0),
	coalesce(cd_conta_financ_odp,0),
	0 cd_conta_financ_jcr,
	0 cd_conta_financ_mcr,
	0 cd_conta_financ_dcr,
	0 cd_conta_financ_vlm,
	0 cd_conta_financ_dbcr,
	0 cd_conta_financ_glosa,
	0 vl_glosa,
	null ie_origem_titulo,
	null nr_seq_classe_tit_rec,
	null nr_seq_classe_tit_pag,
	null ie_tipo_tit_pag,
	null ie_tipo_tit_rec,
	null nr_titulo_pagar,
	null nr_titulo_receber,
	nr_sequencia nr_seq_cheque_cp,
	null nr_seq_cheque_cr,
	null nr_seq_movto_cartao,
	null nr_seq_movto_trans,
	null nr_seq_conv_receb,
	null nr_seq_proj_recurso,
	null nr_interno_conta,
	null nr_seq_protocolo,
	null nr_ordem_compra,
	null nr_repasse_terceiro,
	null cd_agenda,
	null nr_seq_contrato,
	null nr_seq_regra
from	(select	pkg_date_utils.start_of(a.dt_emissao,'DD',0) dt_vencimento,							/*CHEQUES PAGOS A COMPENSAR*/
 
		obter_conta_financ_cheque_cp(a.nr_sequencia, 1) cd_conta_financ_cheque,
		a.vl_cheque vl_cheque_cp,
		a.vl_cheque_estrang vl_cheque_estrang,
		0 vl_juros,
		0 vl_multa,
		0 vl_desconto,
		0 vl_outros_acrescimos,
		0 VL_OUTRAS_DESPESAS,
		0 cd_conta_financ_jcp,
		0 cd_conta_financ_mcp,
		0 cd_conta_financ_dcp,
		0 cd_conta_financ_ocp,
		0 cd_conta_financ_odp,
		a.nr_sequencia
	from	cheque a,
		estabelecimento k
	where (ie_filtro_fluxo_w = 'N' or substr(obter_se_filtro_fluxo_lote(a.nr_seq_conta_banco, null, null, nr_seq_lote_fluxo_p, null, null, cd_estabelecimento_p),1,1) = 'S')
	and	k.cd_empresa			= cd_empresa_w
	and	a.cd_estabelecimento		= k.cd_estabelecimento
	and (ie_restringe_estab_w = 'N' or (ie_restringe_estab_w = 'E' and a.cd_estabelecimento = cd_estabelecimento_p) or (ie_restringe_estab_w = 'S' and (a.cd_estabelecimento = cd_estabelecimento_p)))
	and (ie_cheque_cp_mes_w = 'N' or pkg_date_utils.start_of(dt_emissao, 'MONTH',0) <> PKG_DATE_UTILS.start_of(coalesce(a.dt_compensacao, PKG_DATE_UTILS.ADD_MONTH(a.dt_emissao, 1,0)), 'MONTH', 0))
	and	coalesce(a.dt_cancelamento::text, '') = ''
	and	coalesce(a.cd_moeda,cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w)  --Projeto Multimoeda - Busca apenas os registros da moeda relacionada
	and	dt_emissao 		between dt_inicio_w and dt_final_w
	
union all

	select	pkg_date_utils.start_of(a.dt_compensacao,'DD',0) dt_vencimento,						/*CHEQUES PAGOS COMPENSADOS*/
		obter_conta_financ_cheque_cp(a.nr_sequencia, 2) cd_conta_financ_cheque,
		a.vl_cheque vl_cheque_cp,
		a.vl_cheque_estrang vl_cheque_estrang,
		0 vl_juros,
		0 vl_multa,
		0 vl_desconto,
		0 vl_outros_acrescimos,
		0 VL_OUTRAS_DESPESAS,
		0 cd_conta_financ_jcp,
		0 cd_conta_financ_mcp,
		0 cd_conta_financ_dcp,
		0 cd_conta_financ_ocp,
		0 cd_conta_financ_odp,
		a.nr_sequencia
	from	cheque a,
		estabelecimento k
	where (ie_filtro_fluxo_w = 'N' or substr(obter_se_filtro_fluxo_lote(a.nr_seq_conta_banco, null, null, nr_seq_lote_fluxo_p, null, null, cd_estabelecimento_p),1,1) = 'S')
	and	k.cd_empresa			= cd_empresa_w
	and	a.cd_estabelecimento		= k.cd_estabelecimento
	and (ie_restringe_estab_w = 'N' or (ie_restringe_estab_w = 'E' and a.cd_estabelecimento = cd_estabelecimento_p) or (ie_restringe_estab_w = 'S' and (a.cd_estabelecimento = cd_estabelecimento_p)))
	and (ie_cheque_cp_mes_w = 'N' or pkg_date_utils.start_of(dt_emissao, 'MONTH',0) <> PKG_DATE_UTILS.start_of(coalesce(a.dt_compensacao, PKG_DATE_UTILS.ADD_MONTH(a.dt_emissao, 1,0)), 'MONTH', 0))
	and	coalesce(a.dt_cancelamento::text, '') = ''
	and	(a.dt_compensacao IS NOT NULL AND a.dt_compensacao::text <> '')
	and	coalesce(a.cd_moeda,cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w)  --Projeto Multimoeda - Busca apenas os registros da moeda relacionada
	and	a.dt_compensacao	between dt_inicio_w and dt_final_w
	
union all

	select	dt_vencimento,						/*CHEQUES PAGOS COMPENSADOS PELA CONTA DO TITULO*/
		cd_conta_financ_cheque,
		vl_cheque_cp,
		vl_cheque_estrang,
		(dividir_sem_round(coalesce(vl_titulo,vl_alteracao),vl_alteracao) * vl_juros) vl_juros,
		(dividir_sem_round(coalesce(vl_titulo,vl_alteracao),vl_alteracao) * vl_multa) vl_multa,
		(dividir_sem_round(coalesce(vl_titulo,vl_alteracao),vl_alteracao) * vl_descontos) vl_desconto,
		(dividir_sem_round(coalesce(vl_titulo,vl_alteracao),vl_alteracao) * vl_outros_acrescimos) vl_outros_acrescimos,
		(dividir_sem_round(coalesce(vl_titulo,vl_alteracao),vl_alteracao) * VL_OUTRAS_DESPESAS) VL_OUTRAS_DESPESAS,
		cd_conta_financ_jcp,
		cd_conta_financ_mcp,
		cd_conta_financ_dcp,
		cd_conta_financ_ocp,
		cd_conta_financ_odp,
		nr_sequencia
	from	(select	pkg_date_utils.start_of(a.dt_compensacao,'DD',0) dt_vencimento,
			d.nr_seq_conta_financ cd_conta_financ_cheque,
			c.vl_baixa * (d.vl_titulo/CASE WHEN (obter_dados_tit_pagar(e.nr_titulo, 'VT'))::numeric =0 THEN e.vl_titulo  ELSE (obter_dados_tit_pagar(e.nr_titulo, 'VT'))::numeric  END ) vl_cheque_cp,
			c.vl_baixa_estrang * (d.vl_titulo/CASE WHEN (obter_dados_tit_pagar(e.nr_titulo, 'VT'))::numeric =0 THEN e.vl_titulo  ELSE (obter_dados_tit_pagar(e.nr_titulo, 'VT'))::numeric  END ) vl_cheque_estrang,
			(obter_dados_tit_pagar(e.nr_titulo,'VT'))::numeric  vl_alteracao,
			coalesce(obter_conta_financ_regra_fc(cd_empresa_w,'JCP',e.cd_cgc,null,pkg_date_utils.start_of(a.dt_compensacao,'DD',0),cd_estabelecimento_p),0) cd_conta_financ_jcp,
			coalesce(obter_conta_financ_regra_fc(cd_empresa_w,'MCP',e.cd_cgc,null,pkg_date_utils.start_of(a.dt_compensacao,'DD',0),cd_estabelecimento_p),0) cd_conta_financ_mcp,
			coalesce(obter_conta_financ_regra_fc(cd_empresa_w,'DCP',e.cd_cgc,null,pkg_date_utils.start_of(a.dt_compensacao,'DD',0),cd_estabelecimento_p),0) cd_conta_financ_dcp,
			coalesce(obter_conta_financ_regra_fc(cd_empresa_w,'OCP',e.cd_cgc,null,pkg_date_utils.start_of(a.dt_compensacao,'DD',0),cd_estabelecimento_p),0) cd_conta_financ_ocp,
			coalesce(obter_conta_financ_regra_fc(cd_empresa_w,'OCP',e.cd_cgc,null,pkg_date_utils.start_of(a.dt_compensacao,'DD',0),cd_estabelecimento_p),0) cd_conta_financ_odp,
			c.vl_juros,
			c.vl_multa,
			c.vl_descontos,
			c.vl_outros_acrescimos,
			c.VL_OUTRAS_DESPESAS,
			e.vl_titulo,
			a.nr_sequencia
		from	tipo_baixa_cpa f,
			titulo_pagar e,
			titulo_pagar_classif d,
			titulo_pagar_baixa c,
			cheque_bordero_titulo b,
			cheque a,
			estabelecimento k
		where	a.nr_sequencia		= b.nr_seq_cheque
		and	e.nr_titulo		= d.nr_titulo
		and	e.nr_titulo		= c.nr_titulo
		and	c.nr_bordero		= b.nr_bordero
		and	b.nr_titulo		= e.nr_titulo
		and	c.cd_tipo_baixa		= f.cd_tipo_baixa
		and	f.ie_fluxo_passado_cheque	= 'S'
		and	k.cd_empresa			= cd_empresa_w
		and	a.cd_estabelecimento		= k.cd_estabelecimento
		and (ie_restringe_estab_w = 'N' or (ie_restringe_estab_w = 'E' and a.cd_estabelecimento = cd_estabelecimento_p) or (ie_restringe_estab_w = 'S' and (a.cd_estabelecimento = cd_estabelecimento_p)))
		and (ie_filtro_fluxo_w = 'N' or substr(obter_se_filtro_fluxo_lote(a.nr_seq_conta_banco, null, null, nr_seq_lote_fluxo_p, null, null, cd_estabelecimento_p),1,1) = 'S')
		and	coalesce(a.dt_cancelamento::text, '') = ''
		and	coalesce(obter_conta_financ_cheque_cp(a.nr_sequencia, 2)::text, '') = ''
		and	a.dt_compensacao			between dt_inicio_w and dt_final_w
		and	coalesce(c.cd_moeda,cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w)   --Projeto Multimoeda - Busca apenas os registros da moeda relacionada
		and	(a.dt_compensacao IS NOT NULL AND a.dt_compensacao::text <> '')
		and	(d.nr_seq_conta_financ IS NOT NULL AND d.nr_seq_conta_financ::text <> '')) alias791
	
union all

	select	dt_inicio_w dt_vencimento,								/*ACUMULAR CHEQUES PAGOS A COMPENSAR NO PRIMEIRO DIA DO FLUXO*/
		obter_conta_financ_cheque_cp(a.nr_sequencia, 1) cd_conta_financ_cheque,
		a.vl_cheque vl_cheque_cp,
		a.vl_cheque_estrang vl_cheque_estrang,
		0 vl_juros,
		0 vl_multa,
		0 vl_desconto,
		0 vl_outros_acrescimos,
		0 VL_OUTRAS_DESPESAS,
		0 cd_conta_financ_jcp,
		0 cd_conta_financ_mcp,
		0 cd_conta_financ_dcp,
		0 cd_conta_financ_ocp,
		0 cd_conta_financ_odp,
		a.nr_sequencia
	from	cheque a,
		estabelecimento k
	where (ie_filtro_fluxo_w = 'N' or substr(obter_se_filtro_fluxo_lote(a.nr_seq_conta_banco, null, null, nr_seq_lote_fluxo_p, null, null, cd_estabelecimento_p),1,1) = 'S')
	and	k.cd_empresa			= cd_empresa_w
	and	a.cd_estabelecimento		= k.cd_estabelecimento
	and (ie_restringe_estab_w = 'N' or (ie_restringe_estab_w = 'E' and a.cd_estabelecimento = cd_estabelecimento_p) or (ie_restringe_estab_w = 'S' and (a.cd_estabelecimento = cd_estabelecimento_p)))
	and (ie_cheque_cp_mes_w = 'N' or pkg_date_utils.start_of(dt_emissao, 'MONTH',0) <> PKG_DATE_UTILS.start_of(coalesce(a.dt_compensacao, PKG_DATE_UTILS.ADD_MONTH(a.dt_emissao, 1,0)),  'MONTH', 0))
	and	coalesce(a.dt_cancelamento::text, '') = ''
	and	a.dt_emissao			< dt_inicio_w
	and	coalesce(a.cd_moeda,cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w)  --Projeto Multimoeda - Busca apenas os registros da moeda relacionada
	and (coalesce(a.dt_compensacao::text, '') = '' or a.dt_compensacao > dt_final_w)
	and	ie_cheque_pago_pend_w		= 'S') alias810
where	cd_conta_financ_cheque > 0
group by dt_vencimento,
	cd_conta_financ_cheque,
	nr_sequencia,
	cd_conta_financ_jcp,
	cd_conta_financ_mcp,
	cd_conta_financ_dcp,
	cd_conta_financ_ocp,
	cd_conta_financ_odp

union all

/* 9 */

select	'CP',
	'9P' ie_identificacao,
	pkg_date_utils.start_of(b.dt_emissao,'DD',0),
	c.cd_conta_financ cd_conta_financ,
	sum(a.vl_tributo),
	0 vl_estrang,
	0 cd_convenio,
	0 vl_juros,
	0 vl_multa,
	0 vl_desconto,
	0 vl_rec_maior,
	0 vl_outros_acrescimos,
	0 VL_OUTRAS_DESPESAS,
	0 vl_despesa_bancaria,
	0 cd_conta_financ_jcp,
	0 cd_conta_financ_mcp,
	0 cd_conta_financ_dcp,
	0 cd_conta_financ_ocp,
	0 cd_conta_financ_odp,
	0 cd_conta_financ_jcr,
	0 cd_conta_financ_mcr,
	0 cd_conta_financ_dcr,
	0 cd_conta_financ_vlm,
	0 cd_conta_financ_dbcr,
	0 cd_conta_financ_glosa,
	0 vl_glosa,
	b.ie_origem_titulo,
	b.nr_seq_classe nr_seq_classe_tit_rec,
	null nr_seq_classe_tit_pag,
	null ie_tipo_tit_pag,
	b.ie_tipo_titulo ie_tipo_tit_rec,
	null nr_titulo_pagar,
	b.nr_titulo nr_titulo_receber,
	null nr_seq_cheque_cp,
	null nr_seq_cheque_cr,
	null nr_seq_movto_cartao,
	null nr_seq_movto_trans,
	null nr_seq_conv_receb,
	null nr_seq_proj_recurso,
	null nr_interno_conta,
	null nr_seq_protocolo,
	null nr_ordem_compra,
	null nr_repasse_terceiro,
	null cd_agenda,
	null nr_seq_contrato,
	null nr_seq_regra
from	tributo c,
	titulo_receber_trib a,
	titulo_receber b,
	estabelecimento k
where	c.cd_tributo		= a.cd_tributo
and	a.nr_titulo		= b.nr_titulo
and (ie_filtro_fluxo_w = 'N' or substr(obter_se_filtro_fluxo_lote(b.nr_seq_conta_banco, null, null, nr_seq_lote_fluxo_p, null, b.nr_seq_proj_rec, cd_estabelecimento_p),1,1) = 'S')
and	k.cd_empresa			= cd_empresa_w
and	b.cd_estabelecimento		= k.cd_estabelecimento
and (ie_restringe_estab_w = 'N' or (ie_restringe_estab_w = 'E' and b.cd_estabelecimento = cd_estabelecimento_p) or (ie_restringe_estab_w = 'S' and (b.cd_estabelecimento = cd_estabelecimento_p)))
and	(c.cd_conta_financ IS NOT NULL AND c.cd_conta_financ::text <> '')
and	a.ie_origem_tributo	= 'D'
and	b.ie_situacao		<> '3'
and	cd_moeda_empresa_w	= coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w)  --Projeto Multimoeda - Busca apenas os registros em moeda nacional
and	b.dt_emissao		between dt_inicio_w and dt_final_w
group by pkg_date_utils.start_of(b.dt_emissao,'DD',0),
	c.cd_conta_financ,
	b.ie_origem_titulo,
	b.nr_seq_classe,
	b.ie_tipo_titulo,
	b.nr_titulo

union all

/* 10 */

select	'PR',
	'10P' ie_identificacao,
	pkg_date_utils.start_of(a.dt_referencia,'DD',0),
	a.cd_conta_financ cd_conta_financ,
	a.vl_movimento,
	0 vl_estrang,
	0 cd_convenio,
	0 vl_juros,
	0 vl_multa,
	0 vl_desconto,
	0 vl_rec_maior,
	0 vl_outros_acrescimos,
	0 VL_OUTRAS_DESPESAS,
	0 vl_despesa_bancaria,
	0 cd_conta_financ_jcp,
	0 cd_conta_financ_mcp,
	0 cd_conta_financ_dcp,
	0 cd_conta_financ_ocp,
	0 cd_conta_financ_odp,
	0 cd_conta_financ_jcr,
	0 cd_conta_financ_mcr,
	0 cd_conta_financ_dcr,
	0 cd_conta_financ_vlm,
	0 cd_conta_financ_dbcr,
	0 cd_conta_financ_glosa,
	0 vl_glosa,
	null ie_origem_titulo,
	null nr_seq_classe_tit_rec,
	null nr_seq_classe_tit_pag,
	null ie_tipo_tit_pag,
	null ie_tipo_tit_rec,
	null nr_titulo_pagar,
	null nr_titulo_receber,
	null nr_seq_cheque_cp,
	null nr_seq_cheque_cr,
	null nr_seq_movto_cartao,
	null nr_seq_movto_trans,
	null nr_seq_conv_receb,
	a.nr_sequencia nr_seq_proj_recurso,
	null nr_interno_conta,
	null nr_seq_protocolo,
	null nr_ordem_compra,
	null nr_repasse_terceiro,
	null cd_agenda,
	null nr_seq_contrato,
	null nr_seq_regra
from	projeto_recurso_fin a
where (ie_filtro_fluxo_w = 'N' or substr(obter_se_filtro_fluxo_lote(null, null, null, nr_seq_lote_fluxo_p, null, a.nr_seq_proj_rec, cd_estabelecimento_p),1,1) = 'S')
and	(a.cd_conta_financ IS NOT NULL AND a.cd_conta_financ::text <> '')
and	cd_moeda_empresa_w	= coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w)  --Projeto Multimoeda - Busca apenas os registros em moeda nacional
and	a.dt_referencia		between dt_inicio_w and dt_final_w

union all

/* 11 */
 -- Alterado para trazer os registros da mesma forma que o fluxo de caixa
select	'CB',
	'11P' ie_identificacao,
	pkg_date_utils.start_of(a.dt_transacao,'DD',0),
	a.cd_conta_financ_inf cd_conta_financ,
	sum(obter_saldo_banco_diario(a.nr_seq_saldo_banco,fim_dia(a.dt_transacao))) vl_saldo_final,
	sum(obter_saldo_banco_diario_estr(a.nr_seq_saldo_banco,fim_dia(a.dt_transacao))) vl_saldo_final_estrang,
	0 cd_convenio,
	0 vl_juros,
	0 vl_multa,
	0 vl_desconto,
	0 vl_rec_maior,
	0 vl_outros_acrescimos,
	0 VL_OUTRAS_DESPESAS,
	0 vl_despesa_bancaria,
	0 cd_conta_financ_jcp,
	0 cd_conta_financ_mcp,
	0 cd_conta_financ_dcp,
	0 cd_conta_financ_ocp,
	0 cd_conta_financ_odp,
	0 cd_conta_financ_jcr,
	0 cd_conta_financ_mcr,
	0 cd_conta_financ_dcr,
	0 cd_conta_financ_vlm,
	0 cd_conta_financ_dbcr,
	0 cd_conta_financ_glosa,
	0 vl_glosa,
	null ie_origem_titulo,
	null nr_seq_classe_tit_rec,
	null nr_seq_classe_tit_pag,
	null ie_tipo_tit_pag,
	null ie_tipo_tit_rec,
	null nr_titulo_pagar,
	null nr_titulo_receber,
	null nr_seq_cheque_cp,
	null nr_seq_cheque_cr,
	null nr_seq_movto_cartao,
	null nr_seq_movto_trans,  --- Retirado o nr_sequencia, pois gerava registros duplicados no fluxo em lote alterando o saldo do banco.
	null nr_seq_conv_receb,
	null nr_seq_proj_recurso,
	null nr_interno_conta,
	null nr_seq_protocolo,
	null nr_ordem_compra,
	null nr_repasse_terceiro,
	null cd_agenda,
	null nr_seq_contrato,
	null nr_seq_regra
from (select distinct 
		pkg_date_utils.start_of(b.dt_transacao,'DD',0) dt_transacao,
		b.nr_seq_saldo_banco,
		b.nr_seq_banco,
		c.cd_conta_financ_inf
	from 	movto_trans_financ b,
		banco_estabelecimento c
	where	b.nr_seq_banco	= c.nr_sequencia
	and	substr(obter_se_conta_financ_estab(c.cd_conta_financ_inf, cd_estabelecimento_p,ie_restringe_estab_w),1,1) = 'S'
	and	c.cd_empresa			= cd_empresa_w
	and (ie_restringe_estab_w = 'N' or (ie_restringe_estab_w = 'E' and b.cd_estabelecimento = cd_estabelecimento_p) or (ie_restringe_estab_w = 'S' and (b.cd_estabelecimento = cd_estabelecimento_p)))
	and	coalesce(b.cd_moeda,cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w)  --Projeto Multimoeda - Busca apenas os registros da moeda relacionada
	and	b.dt_transacao	between dt_inicio_w and dt_final_w) a
group by pkg_date_utils.start_of(a.dt_transacao,'DD',0), a.cd_conta_financ_inf;


BEGIN

select	max(a.cd_empresa)
into STRICT	cd_empresa_w
from	estabelecimento a
where	a.cd_estabelecimento	= cd_estabelecimento_p;

select	pkg_date_utils.start_of(max(a.dt_mesano_referencia),'MONTH',0) dt_inico,
	fim_mes(max(a.dt_mesano_referencia)) dt_final,
	max(a.ie_restringe_estab),
	max(a.ie_tipo_data),
	max(cd_moeda)
into STRICT	dt_inicio_w,
	dt_final_w,
	ie_restringe_estab_w,
	ie_tipo_data_w,
	cd_moeda_estrang_w
from	fluxo_caixa_lote a
where	a.nr_sequencia	= nr_seq_lote_fluxo_p;

/* Projeto Multimoeda - Busca a moeda padrao da empresa e verifica a moeda cadastrada no fluxo em lote. Ele sera a base da busca dos dados
		em moeda estrangeira. Caso a moeda do fluxo seja nula, devera ser considerada a moeda padrao da empresa nas consultas,
		caso contrario ira buscar somente os dados na moeda selecionada.*/
select obter_moeda_padrao_empresa(cd_estabelecimento_p,'E')
into STRICT cd_moeda_empresa_w
;
if (coalesce(cd_moeda_estrang_w::text, '') = '') then
	cd_moeda_estrang_w := cd_moeda_empresa_w;
end if;

select	coalesce(max('S'),'N')
into STRICT	ie_filtro_fluxo_w
from	fluxo_caixa_lote_filtro
where	nr_seq_lote_fluxo	= nr_seq_lote_fluxo_p;

select	coalesce(max('S'),'N')
into STRICT	ie_filtro_banco_w
from	fluxo_caixa_lote_filtro
where	nr_seq_lote_fluxo	= nr_seq_lote_fluxo_p
and	(cd_banco IS NOT NULL AND cd_banco::text <> '')
and	coalesce(nr_seq_proj_rec::text, '') = '';

ie_gera_saldo_banco_w := obter_param_usuario(830, 26, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_gera_saldo_banco_w);

select	coalesce(max(cd_conta_financ_cpa),1),
	coalesce(max(cd_conta_financ_cre),1),
	coalesce(max(ie_fim_semana_passado),'N'),
	coalesce(max(ie_adiant_receb),'A'),
	coalesce(max(ie_adiant_pago),'A'),
	coalesce(max(ie_convenio_receb), 'S'),
	coalesce(max(ie_conv_receb_estorno), 'N'),
	coalesce(max(ie_tit_rec_canc), 'N'),
	coalesce(max(ie_classif_baixa_cp), 'N'),
	coalesce(max(ie_cheque_pago_pend),'N'),
	coalesce(max(ie_tit_pagar_transf),'S'),
	coalesce(max(ie_cheque_cp_mes), 'N'),
	coalesce(max(ie_data_tit_adiant),'N'),
	coalesce(max(ie_movto_bco_pend),'N'),
	coalesce(max(ie_data_tit_adiant_rec),'N'),
	coalesce(max(ie_cheque_devolvido),'S'),
	coalesce(max(ie_conta_finan_trans),'N'),
	coalesce(max(ie_trans_fin_conta),'M'),
	coalesce(max(ie_tit_pagar_desdob), 'S'),
	coalesce(max(ie_despesa_cartao), 'N'),
	coalesce(max(ie_titulo_caixa),'S'),
	coalesce(max(ie_dt_credito_banco_cre), 'N'),
	coalesce(max(ie_fluxo_especial),'S')
into STRICT 	cd_conta_financ_cpa_w,
	cd_conta_financ_cre_w,
	ie_fim_semana_passado_w,
	ie_adiant_receb_w,
	ie_adiant_pago_w,
	ie_convenio_receb_w,
	ie_conv_receb_estorno_w,
	ie_tit_rec_canc_w,
	ie_classif_baixa_cp_w,
	ie_cheque_pago_pend_w,
	ie_tit_pagar_transf_w,
	ie_cheque_cp_mes_w,
	ie_data_tit_adiant_w,
	ie_movto_bco_pend_w,
	ie_data_tit_adiant_rec_w,
	ie_cheque_devolvido_w,
	ie_conta_finan_trans_w,
	ie_trans_fin_conta_w,
	ie_tit_pagar_desdob_w,
	ie_despesa_cartao_w,
	ie_titulo_caixa_w,
	ie_dt_credito_banco_cre_w,
	ie_fluxo_especial_w
from	parametro_fluxo_caixa
where	cd_estabelecimento	= cd_estabelecimento_p;

delete	from fluxo_caixa_item
where	nr_seq_lote_fluxo	= nr_seq_lote_fluxo_p;

delete	from fluxo_caixa_data
where	nr_seq_lote_fluxo	= nr_seq_lote_fluxo_p;

open c010;
loop
fetch c010 into
	ie_integracao_w,
	ie_identificacao_w,
	dt_referencia_w,
	cd_conta_financ_w,
	vl_fluxo_w,
	vl_fluxo_estrang_w,
	cd_convenio_w,
	vl_juros_w,
	vl_multa_w,
	vl_desconto_w,
	vl_rec_maior_w,
	vl_outros_acrescimos_w,
	vl_outras_despesas_w,
	vl_despesa_bancaria_w,
	cd_conta_financ_jcp_w,
	cd_conta_financ_mcp_w,
	cd_conta_financ_dcp_w,
	cd_conta_financ_ocp_w,
	cd_conta_financ_odp_w,
	cd_conta_financ_jcr_w,
	cd_conta_financ_mcr_w,
	cd_conta_financ_dcr_w,
	cd_conta_financ_vlm_w,
	cd_conta_financ_dbcr_w,
	cd_conta_financ_glosa_w,
	vl_glosa_w,
	ie_origem_titulo_w,
	nr_seq_classe_tit_rec_w,
	nr_seq_classe_tit_pag_w,
	ie_tipo_titulo_cp_w,
	ie_tipo_titulo_cr_w,
	nr_titulo_pagar_w,
	nr_titulo_receber_w,
	nr_seq_cheque_cp_w,
	nr_seq_cheque_cr_w,
	nr_seq_movto_cartao_w,
	nr_seq_movto_trans_w,
	nr_seq_conv_receb_w,
	nr_seq_proj_recurso_w,
	nr_interno_conta_w,
	nr_seq_protocolo_w,
	nr_ordem_compra_w,
	nr_repasse_terceiro_w,
	cd_agenda_w,
	nr_seq_contrato_w,
	nr_seq_regra_w;
EXIT WHEN NOT FOUND; /* apply on c010 */

	if (ie_fim_semana_passado_w = 'S') or (ie_tipo_data_w = 'S') then
		if (pkg_date_utils.start_of(dt_referencia_w,'MONTH',0) <>
			pkg_date_utils.start_of(obter_proximo_dia_util(cd_estabelecimento_p, dt_referencia_w),'MONTH',0)) then
			dt_referencia_w := obter_dia_anterior_util(cd_estabelecimento_p, dt_referencia_w);
		else
			dt_referencia_w	:= obter_proximo_dia_util(cd_estabelecimento_p, dt_referencia_w);
		end if;
	end if;
	
	if (cd_conta_financ_w = 0) and (vl_fluxo_w <> 0) then

		ie_entrada_saida_w		:= 'E';
		
		if (ie_integracao_w = 'CP') then
			ie_entrada_saida_w	:= 'S';
		end if;
		
		select	max(cd_cgc)
		into STRICT 	cd_cgc_w
		from 	convenio
		where	cd_convenio	= cd_convenio_w;

		cd_conta_financ_w := OBTER_CONTA_FINANCEIRA(	ie_entrada_saida_w, cd_estabelecimento_p, 0, 0, 0, 0, cd_convenio_w, cd_cgc_w, null, cd_conta_financ_w, null, null, null, null, null, null, null, null, ie_origem_titulo_w, null, nr_seq_classe_tit_rec_w, nr_seq_classe_tit_pag_w, null, null, null, null, ie_tipo_titulo_cp_w, ie_tipo_titulo_cr_w, null);
	end if;
	
	if (ie_integracao_w = 'CP') then
		/* Projeto Multimoeda - Os valores de multa, juros, desconto e outros acrescimos so devem ser gravados em moeda nacional,
				portanto as chamadas abaixo so ocorrerao quando o fluxo for gerado em moeda nacional. */
		if (cd_conta_financ_mcp_w > 0) and (vl_multa_w <> 0)
			and (coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w) = cd_moeda_empresa_w) then

			CALL gerar_fluxo_caixa_lote(	dt_referencia_w,
						cd_conta_financ_mcp_w,
						'',
						ie_identificacao_w || ' - mcp',
						ie_integracao_w,
						nm_usuario_p,
						cd_agenda_w,
						nr_interno_conta_w,
						nr_ordem_compra_w,
						nr_repasse_terceiro_w,
						nr_seq_cheque_cp_w,
						nr_seq_cheque_cr_w,
						nr_seq_contrato_w,
						nr_seq_conv_receb_w,
						nr_seq_lote_fluxo_p,
						nr_seq_movto_cartao_w,
						nr_seq_movto_trans_w,
						nr_seq_proj_recurso_w,
						nr_seq_protocolo_w,
						nr_seq_regra_w,
						nr_titulo_pagar_w,
						nr_titulo_receber_w,
						vl_multa_w);

		end if;

		if (cd_conta_financ_jcp_w > 0) and (vl_juros_w <> 0)
			and (coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w) = cd_moeda_empresa_w) then

			CALL GERAR_FLUXO_CAIXA_LOTE(	dt_referencia_w,
						cd_conta_financ_jcp_w,
						'',
						ie_identificacao_w || ' - jcp',
						ie_integracao_w,
						nm_usuario_p,
						cd_agenda_w,
						nr_interno_conta_w,
						nr_ordem_compra_w,
						nr_repasse_terceiro_w,
						nr_seq_cheque_cp_w,
						nr_seq_cheque_cr_w,
						nr_seq_contrato_w,
						nr_seq_conv_receb_w,
						nr_seq_lote_fluxo_p,
						nr_seq_movto_cartao_w,
						nr_seq_movto_trans_w,
						nr_seq_proj_recurso_w,
						nr_seq_protocolo_w,
						nr_seq_regra_w,
						nr_titulo_pagar_w,
						nr_titulo_receber_w,
						vl_juros_w);

		end if;

		if (cd_conta_financ_dcp_w > 0) and (vl_desconto_w <> 0)
			and (coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w) = cd_moeda_empresa_w) then

			CALL GERAR_FLUXO_CAIXA_LOTE(	dt_referencia_w,
						cd_conta_financ_dcp_w,
						'',
						ie_identificacao_w || ' - dcp',
						ie_integracao_w,
						nm_usuario_p,
						cd_agenda_w,
						nr_interno_conta_w,
						nr_ordem_compra_w,
						nr_repasse_terceiro_w,
						nr_seq_cheque_cp_w,
						nr_seq_cheque_cr_w,
						nr_seq_contrato_w,
						nr_seq_conv_receb_w,
						nr_seq_lote_fluxo_p,
						nr_seq_movto_cartao_w,
						nr_seq_movto_trans_w,
						nr_seq_proj_recurso_w,
						nr_seq_protocolo_w,
						nr_seq_regra_w,
						nr_titulo_pagar_w,
						nr_titulo_receber_w,
						vl_desconto_w);

		end if;

		if (cd_conta_financ_ocp_w > 0) and (vl_outros_acrescimos_w <> 0)
			and (coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w) = cd_moeda_empresa_w) then

			CALL GERAR_FLUXO_CAIXA_LOTE(	dt_referencia_w,
						cd_conta_financ_ocp_w,
						'',
						ie_identificacao_w || ' - ocp',
						ie_integracao_w,
						nm_usuario_p,
						cd_agenda_w,
						nr_interno_conta_w,
						nr_ordem_compra_w,
						nr_repasse_terceiro_w,
						nr_seq_cheque_cp_w,
						nr_seq_cheque_cr_w,
						nr_seq_contrato_w,
						nr_seq_conv_receb_w,
						nr_seq_lote_fluxo_p,
						nr_seq_movto_cartao_w,
						nr_seq_movto_trans_w,
						nr_seq_proj_recurso_w,
						nr_seq_protocolo_w,
						nr_seq_regra_w,
						nr_titulo_pagar_w,
						nr_titulo_receber_w,
						vl_outros_acrescimos_w);

		end if;
		
		if (cd_conta_financ_odp_w > 0) and (vl_outras_despesas_w <> 0)
			and (coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w) = cd_moeda_empresa_w) then

			CALL GERAR_FLUXO_CAIXA_LOTE(	dt_referencia_w,
						cd_conta_financ_odp_w,
						'',
						ie_identificacao_w || ' - odp',
						ie_integracao_w,
						nm_usuario_p,
						cd_agenda_w,
						nr_interno_conta_w,
						nr_ordem_compra_w,
						nr_repasse_terceiro_w,
						nr_seq_cheque_cp_w,
						nr_seq_cheque_cr_w,
						nr_seq_contrato_w,
						nr_seq_conv_receb_w,
						nr_seq_lote_fluxo_p,
						nr_seq_movto_cartao_w,
						nr_seq_movto_trans_w,
						nr_seq_proj_recurso_w,
						nr_seq_protocolo_w,
						nr_seq_regra_w,
						nr_titulo_pagar_w,
						nr_titulo_receber_w,
						vl_outras_despesas_w);

		end if;		
	end if;

	if (ie_integracao_w = 'CR') then
		/* Projeto Multimoeda - Os valores de multa, juros, desconto, recebimento a maior, despesa bancaria e glosa so devem ser gravados em moeda nacional,
				portanto as chamadas abaixo so ocorrerao quando o fluxo for gerado em moeda nacional. */
		if (cd_conta_financ_mcr_w > 0) and (vl_multa_w <> 0)
			and (coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w) = cd_moeda_empresa_w) then

			CALL GERAR_FLUXO_CAIXA_LOTE(	dt_referencia_w,
						cd_conta_financ_mcr_w,
						'',
						ie_identificacao_w || ' - mcr',
						ie_integracao_w,
						nm_usuario_p,
						cd_agenda_w,
						nr_interno_conta_w,
						nr_ordem_compra_w,
						nr_repasse_terceiro_w,
						nr_seq_cheque_cp_w,
						nr_seq_cheque_cr_w,
						nr_seq_contrato_w,
						nr_seq_conv_receb_w,
						nr_seq_lote_fluxo_p,
						nr_seq_movto_cartao_w,
						nr_seq_movto_trans_w,
						nr_seq_proj_recurso_w,
						nr_seq_protocolo_w,
						nr_seq_regra_w,
						nr_titulo_pagar_w,
						nr_titulo_receber_w,
						vl_multa_w);

		end if;

		if (cd_conta_financ_jcr_w > 0) and (vl_juros_w <> 0)
			and (coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w) = cd_moeda_empresa_w) then

			CALL GERAR_FLUXO_CAIXA_LOTE(	dt_referencia_w,
						cd_conta_financ_jcr_w,
						'',
						ie_identificacao_w || ' - jcr',
						ie_integracao_w,
						nm_usuario_p,
						cd_agenda_w,
						nr_interno_conta_w,
						nr_ordem_compra_w,
						nr_repasse_terceiro_w,
						nr_seq_cheque_cp_w,
						nr_seq_cheque_cr_w,
						nr_seq_contrato_w,
						nr_seq_conv_receb_w,
						nr_seq_lote_fluxo_p,
						nr_seq_movto_cartao_w,
						nr_seq_movto_trans_w,
						nr_seq_proj_recurso_w,
						nr_seq_protocolo_w,
						nr_seq_regra_w,
						nr_titulo_pagar_w,
						nr_titulo_receber_w,
						vl_juros_w);

		end if;

		if (cd_conta_financ_dcr_w > 0) and (vl_desconto_w <> 0)
			and (coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w) = cd_moeda_empresa_w) then

			CALL GERAR_FLUXO_CAIXA_LOTE(	dt_referencia_w,
						cd_conta_financ_dcr_w,
						'',
						ie_identificacao_w || ' - dcr',
						ie_integracao_w,
						nm_usuario_p,
						cd_agenda_w,
						nr_interno_conta_w,
						nr_ordem_compra_w,
						nr_repasse_terceiro_w,
						nr_seq_cheque_cp_w,
						nr_seq_cheque_cr_w,
						nr_seq_contrato_w,
						nr_seq_conv_receb_w,
						nr_seq_lote_fluxo_p,
						nr_seq_movto_cartao_w,
						nr_seq_movto_trans_w,
						nr_seq_proj_recurso_w,
						nr_seq_protocolo_w,
						nr_seq_regra_w,
						nr_titulo_pagar_w,
						nr_titulo_receber_w,
						vl_desconto_w);

		end if;

		if (cd_conta_financ_vlm_w > 0) and (vl_rec_maior_w <> 0)
			and (coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w) = cd_moeda_empresa_w) then

			CALL GERAR_FLUXO_CAIXA_LOTE(	dt_referencia_w,
						cd_conta_financ_vlm_w,
						'',
						ie_identificacao_w || ' - vlm',
						ie_integracao_w,
						nm_usuario_p,
						cd_agenda_w,
						nr_interno_conta_w,
						nr_ordem_compra_w,
						nr_repasse_terceiro_w,
						nr_seq_cheque_cp_w,
						nr_seq_cheque_cr_w,
						nr_seq_contrato_w,
						nr_seq_conv_receb_w,
						nr_seq_lote_fluxo_p,
						nr_seq_movto_cartao_w,
						nr_seq_movto_trans_w,
						nr_seq_proj_recurso_w,
						nr_seq_protocolo_w,
						nr_seq_regra_w,
						nr_titulo_pagar_w,
						nr_titulo_receber_w,
						vl_rec_maior_w);

		end if;

		if (cd_conta_financ_dbcr_w > 0) and (vl_despesa_bancaria_w <> 0)
			and (coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w) = cd_moeda_empresa_w) then

			CALL GERAR_FLUXO_CAIXA_LOTE(	dt_referencia_w,
						cd_conta_financ_dbcr_w,
						'',
						ie_identificacao_w || ' - dbcr',
						ie_integracao_w,
						nm_usuario_p,
						cd_agenda_w,
						nr_interno_conta_w,
						nr_ordem_compra_w,
						nr_repasse_terceiro_w,
						nr_seq_cheque_cp_w,
						nr_seq_cheque_cr_w,
						nr_seq_contrato_w,
						nr_seq_conv_receb_w,
						nr_seq_lote_fluxo_p,
						nr_seq_movto_cartao_w,
						nr_seq_movto_trans_w,
						nr_seq_proj_recurso_w,
						nr_seq_protocolo_w,
						nr_seq_regra_w,
						nr_titulo_pagar_w,
						nr_titulo_receber_w,
						vl_despesa_bancaria_w);

		end if;

		if (cd_conta_financ_glosa_w > 0) and (vl_glosa_w <> 0)
			and (coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w) = cd_moeda_empresa_w) then

			CALL GERAR_FLUXO_CAIXA_LOTE(	dt_referencia_w,
						cd_conta_financ_glosa_w,
						'',
						ie_identificacao_w || ' - glosa',
						ie_integracao_w,
						nm_usuario_p,
						cd_agenda_w,
						nr_interno_conta_w,
						nr_ordem_compra_w,
						nr_repasse_terceiro_w,
						nr_seq_cheque_cp_w,
						nr_seq_cheque_cr_w,
						nr_seq_contrato_w,
						nr_seq_conv_receb_w,
						nr_seq_lote_fluxo_p,
						nr_seq_movto_cartao_w,
						nr_seq_movto_trans_w,
						nr_seq_proj_recurso_w,
						nr_seq_protocolo_w,
						nr_seq_regra_w,
						nr_titulo_pagar_w,
						nr_titulo_receber_w,
						vl_glosa_w);

		end if;
	end if;

	if (cd_conta_financ_w <> 0) then
		/* Projeto Multimoeda - Quando o fluxo for em moeda estrangeira, alterar o valor que sera gravado no item do fluxo*/

		if (coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w) <> cd_moeda_empresa_w) then
			vl_fluxo_w := vl_fluxo_estrang_w;
		end if;
		
		CALL GERAR_FLUXO_CAIXA_LOTE(	dt_referencia_w,
					cd_conta_financ_w,
					'',
					ie_identificacao_w,
					ie_integracao_w,
					nm_usuario_p,
					cd_agenda_w,
					nr_interno_conta_w,
					nr_ordem_compra_w,
					nr_repasse_terceiro_w,
					nr_seq_cheque_cp_w,
					nr_seq_cheque_cr_w,
					nr_seq_contrato_w,
					nr_seq_conv_receb_w,
					nr_seq_lote_fluxo_p,
					nr_seq_movto_cartao_w,
					nr_seq_movto_trans_w,
					nr_seq_proj_recurso_w,
					nr_seq_protocolo_w,
					nr_seq_regra_w,
					nr_titulo_pagar_w,
					nr_titulo_receber_w,
					coalesce(vl_fluxo_w,0));

	end if;
end loop;
close c010;

if (ie_gera_saldo_banco_w = 'S') then
	CALL GERAR_FLUXO_LOTE_SALDO_BANCO(	cd_estabelecimento_p,
					dt_inicio_w,
					dt_final_w,
					nm_usuario_p,
					cd_agenda_w,
					nr_interno_conta_w,
					nr_ordem_compra_w,
					nr_repasse_terceiro_w,
					nr_seq_cheque_cp_w,
					nr_seq_cheque_cr_w,
					nr_seq_contrato_w,
					nr_seq_conv_receb_w,
					nr_seq_lote_fluxo_p,
					nr_seq_movto_cartao_w,
					nr_seq_movto_trans_w,
					nr_seq_proj_recurso_w,
					nr_seq_protocolo_w,
					nr_seq_regra_w,
					nr_titulo_pagar_w,
					nr_titulo_receber_w);
end if;

if (ie_fluxo_especial_w = 'S') then
	CALL GERAR_FLUXO_CAIXA_LOTE_ESP(nr_seq_lote_fluxo_p,
				cd_estabelecimento_p,
				dt_inicio_w,
				dt_final_w,
				nm_usuario_p,
				cd_empresa_w,
				ie_restringe_estab_w);
end if;

CALL CALCULAR_FLUXO_CAIXA_LOTE(	nr_seq_lote_fluxo_p,
				cd_estabelecimento_p,
				0,  /*tem que ver da onde vem o valor padrao */
				dt_inicio_w,
				dt_final_w,
				'P',
				nm_usuario_p,
				cd_empresa_w,
				ie_restringe_estab_w,
				'N');
			
CALL GERAR_FLUXO_CAIXA_LOTE_AGRUP(	cd_estabelecimento_p,
				dt_inicio_w,
				dt_final_w,
				'P',
				nm_usuario_p,
				cd_empresa_w,
				ie_restringe_estab_w,
				cd_moeda_estrang_w);
			
CALL GERAR_FLUXO_CAIXA_LOTE_DATA(	nr_seq_lote_fluxo_p,
				nm_usuario_p,
				cd_estabelecimento_p);

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_fluxo_caixa_lote_passado ( nr_seq_lote_fluxo_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

