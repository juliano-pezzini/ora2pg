-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_npt_protocolo ( nr_seq_npt_cpoe_p bigint ,nr_seq_protocolo_p bigint ,qt_peso_p bigint ,ie_forma_p text ,nm_usuario_p text ,cd_estabelecimento_p bigint ,param_1034_p bigint ,param_1035_p bigint ,ds_json_p INOUT text ) AS $body$
DECLARE


nr_seq_elem_prescr_w          bigint;
nr_seq_nut_elem_mat_w         bigint;
ie_novo_produto_w			        varchar(1);
qt_formula_lipideo_w 		      double precision;
qt_formula_carb_w			        double precision;
ie_via_administracao_w		    varchar(1);
cd_unidade_medida_elem_w		  varchar(30);
nr_seq_elemento_w				      bigint;
qt_elemento_w					        double precision;
ie_prod_adicional_elem_w		  varchar(1);
ie_prim_fase_w					      varchar(1);
ie_seg_fase_w                 varchar(1);
ie_terc_fase_w                varchar(1);
ie_quar_fase_w                varchar(1);
ie_npt_w                      varchar(1);
qt_osmolaridade_w				      double precision;
ie_tipo_elemento_w				    varchar(1);
ie_glutamina_w					      varchar(1);
nr_sequencia_mat_w				    bigint;
cd_material_prod_w				    integer;
qt_volume_w						        double precision;
qt_vol_1_fase_w					      double precision;
qt_vol_2_fase_w               double precision;
qt_vol_3_fase_w               double precision;
qt_vol_4_fase_w               double precision;
qt_dose_w						          double precision;
cd_unidade_medida_prod_w		  varchar(30);
ie_prod_adicional_prod_w		  varchar(1);
ie_somar_volume_w				      varchar(1);
qt_elem_kg_dia_w              double precision;
qt_kcal_w                     cpoe_npt_elemento.qt_kcal%type;
qt_grama_nitrogenio_w         double precision;
qt_vol_prot_w                 double precision;
qt_nitrogenio_prod_w          double precision;
qt_nitrogenio_w               double precision;
qt_nitrogenio_total_w				  double precision;
qt_grama_proteina_kg_dia_w    double precision;
qt_kcal_proteina_w            double precision;
qt_kcal_lipidio_w             double precision;
qt_kcal_carboidrato_w         double precision;
pr_conc_proteina_solucao_w		double precision;
pr_conc_lipidio_solucao_w     double precision;
pr_conc_glic_solucao_w        double precision;
qt_kcal_total_w               double precision;
qt_kcal_kg_w                  double precision;
qt_rel_cal_nit_w              double precision;
qt_vel_inf_glicose_w          double precision;
qt_kcal_proteico_w            double precision;
qt_kcal_nao_proteico_w        double precision;
pr_proteina_w                 double precision;
pr_lipidio_w                  double precision;
pr_carboidrato_w              double precision;
nr_horas_validade_w			      integer;
ie_calculo_auto_w			        varchar(1);
qt_volume_total_w			        double precision;
qt_gotejo_w					          double precision;
qt_osmolaridade_total_w       double precision;
ds_json_elem_w                text;
ds_json_prod_w                text;
ds_json_cpoe_w                text;

calc_conforme_protocolo_w	  varchar(1);
qt_conversao_ml_w			  double precision;
qt_diaria_w					  double precision;
qt_limite_litro_w			  nut_elemento.qt_limite_litro%type;
qt_volume_protocolo_w         double precision;

c01 CURSOR FOR
/** CPOE_NPT_ELEMENTO **/

SELECT a.cd_unidade_medida
	  ,a.nr_seq_elemento
	  ,a.qt_elemento
      ,a.ie_prod_adicional
      ,coalesce(a.ie_prim_fase, 'N')
	  ,coalesce(a.ie_seg_fase, 'N')
	  ,coalesce(a.ie_terc_fase, 'N')
	  ,coalesce(a.ie_quar_fase, 'N')
	  ,'S'
	  ,a.qt_osmolaridade
	  ,c.ie_tipo_elemento
	  ,c.ie_glutamina
/** CPOE_NPT_PRODUTO **/

	  ,d.nr_sequencia
	  ,b.cd_material
	  ,b.qt_volume
	  ,b.qt_vol_1_fase
	  ,b.qt_vol_2_fase
	  ,b.qt_vol_3_fase
	  ,b.qt_vol_4_fase
	  ,b.qt_dose
	  ,b.cd_unidade_medida
	  ,b.ie_prod_adicional
	  ,coalesce(b.ie_somar_volume, 'S')
      ,d.qt_nitrogenio
	  ,coalesce(d.qt_conversao_ml,0)
FROM  protocolo_npt_item a,
	  protocolo_npt_prod b,
	  nut_elemento c,
	  nut_elem_material d
WHERE a.nr_seq_protocolo = nr_seq_protocolo_p
AND   c.nr_sequencia = a.nr_seq_elemento
AND   a.nr_seq_protocolo = b.nr_seq_protocolo
AND   b.cd_material = d.cd_material
AND   a.nr_seq_elemento = d.nr_seq_elemento
and	  ((coalesce(ie_novo_produto_w,'N') = 'S') or (coalesce(b.ie_prod_adicional,'N') = 'N'))
AND   d.ie_situacao = 'A'
ORDER BY coalesce(a.nr_seq_apres, 999);



BEGIN

  ie_novo_produto_w := Obter_Param_Usuario(924, 1167, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_novo_produto_w);
  calc_conforme_protocolo_w := Obter_Param_Usuario(924, 1085, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, calc_conforme_protocolo_w);

  qt_formula_lipideo_w  := param_1034_p;
  qt_formula_carb_w     := param_1035_p;

  /** BELOW ATTRIBUTE WILL BE INSERTED IN CPOE_DIETA **/

  SELECT ie_via_administracao
  INTO STRICT ie_via_administracao_w
  FROM protocolo_npt
  WHERE nr_sequencia = nr_seq_protocolo_p;

  /** CPOE_DIETA attributes **/

  qt_nitrogenio_total_w := 0;
  qt_grama_proteina_kg_dia_w := 0;
  qt_kcal_proteina_w := 0;
  qt_kcal_lipidio_w := 0;
  qt_kcal_carboidrato_w := 0;
  pr_conc_proteina_solucao_w := 0;
  pr_conc_lipidio_solucao_w := 0;
  pr_conc_glic_solucao_w := 0;
  qt_volume_total_w := 0;

  ds_json_elem_w := null;
  ds_json_prod_w := null;

  OPEN c01;
  LOOP
  FETCH c01 INTO
      /**ELEMENTO**/

      cd_unidade_medida_elem_w
      ,nr_seq_elemento_w
      ,qt_elemento_w
      ,ie_prod_adicional_elem_w
      ,ie_prim_fase_w
      ,ie_seg_fase_w
      ,ie_terc_fase_w
      ,ie_quar_fase_w
      ,ie_npt_w
      ,qt_osmolaridade_w
      ,ie_tipo_elemento_w
      ,ie_glutamina_w
      /**PRODUTO**/

      ,nr_sequencia_mat_w
      ,cd_material_prod_w
      ,qt_volume_w
      ,qt_vol_1_fase_w
      ,qt_vol_2_fase_w
      ,qt_vol_3_fase_w
      ,qt_vol_4_fase_w
      ,qt_dose_w
      ,cd_unidade_medida_prod_w
      ,ie_prod_adicional_prod_w
      ,ie_somar_volume_w
      ,qt_nitrogenio_w
	  ,qt_conversao_ml_w;
  EXIT WHEN NOT FOUND; /* apply on c01 */

  --GENERATES PKs for CPOE_NPT_ELEMENTO and CPOE_NPT_PRODUTO
  SELECT nextval('cpoe_npt_elemento_seq')
  INTO STRICT	nr_seq_elem_prescr_w
;

  SELECT nextval('cpoe_npt_produto_seq')
  INTO STRICT nr_seq_nut_elem_mat_w
;

  qt_volume_protocolo_w := qt_volume_w;

  if (calc_conforme_protocolo_w = 'S') then
    qt_diaria_w := coalesce(qt_elemento_w,0);
  else
    qt_diaria_w	:= dividir(qt_volume_w,qt_conversao_ml_w);
  end if;

  SELECT MAX(d.qt_limite_litro)
  INTO STRICT   qt_limite_litro_w
  FROM   protocolo_npt_prod a,
	     protocolo_npt_item b,
	     nut_elem_material c,
	     nut_elemento d
  WHERE  a.nr_seq_protocolo = nr_seq_protocolo_p
  AND    a.cd_material = cd_material_prod_w
  AND	 a.cd_material = c.cd_material
  AND    a.nr_seq_protocolo = b.nr_seq_protocolo
  AND	 b.nr_seq_elemento  = c.nr_seq_elemento
  AND	 b.nr_seq_elemento  = d.nr_sequencia
  AND	 c.nr_seq_elemento  = d.nr_sequencia
  AND	 coalesce(c.ie_tipo,'NPT')	= 'NPT'
  AND	 coalesce(d.qt_limite_litro,0) < coalesce(qt_diaria_w,0)
  AND	 coalesce(d.qt_limite_litro,0) > 0
  AND	 coalesce(c.ie_situacao,'A') = 'A'
  AND	 coalesce(d.ie_limite_concentracao,'N') = 'S';

  if (qt_limite_litro_w IS NOT NULL AND qt_limite_litro_w::text <> '') then
	qt_diaria_w := qt_limite_litro_w;

    if (cd_unidade_medida_elem_w = cd_unidade_medida_prod_w) then
      qt_dose_w 	:= qt_diaria_w;
	  qt_volume_w := qt_diaria_w;
    else
	  qt_dose_w 	:= qt_diaria_w * qt_conversao_ml_w;
	  qt_volume_w	:= qt_diaria_w * qt_conversao_ml_w;
    end if;
  end if;

  qt_elem_kg_dia_w	:= dividir(qt_diaria_w, qt_peso_p);
  qt_kcal_w		:= 0;
  qt_grama_nitrogenio_w := 0;

  if (ie_somar_volume_w = 'S') then
    qt_volume_total_w := qt_volume_total_w + qt_volume_w;
  end if;

  /* Carboidrato */

	if (ie_tipo_elemento_w = 'C') then
	  qt_kcal_w	:= coalesce(qt_diaria_w,qt_elemento_w) * qt_formula_carb_w;

      qt_kcal_carboidrato_w := qt_kcal_carboidrato_w + qt_kcal_w;
      pr_conc_glic_solucao_w := pr_conc_glic_solucao_w + coalesce(qt_diaria_w,qt_elemento_w);

  /* Proteina */

  elsif (ie_tipo_elemento_w = 'P') then

    qt_vol_prot_w := coalesce(qt_volume_w, 0);
    qt_nitrogenio_prod_w := coalesce(qt_nitrogenio_w, 0);

    if (ie_glutamina_w = 'S') then
      qt_grama_nitrogenio_w := (coalesce(qt_diaria_w,qt_elemento_w) / 6.25);
      qt_kcal_w := coalesce(qt_diaria_w,qt_elemento_w) * 4;
    else
      qt_grama_nitrogenio_w := (qt_vol_prot_w * coalesce(qt_nitrogenio_prod_w, 1.6) / 100);
      qt_kcal_w := qt_grama_nitrogenio_w * 6.25 * 4;
    end if;

    qt_nitrogenio_total_w := qt_nitrogenio_total_w + qt_grama_nitrogenio_w;                 --Nitrogênio (g)
    qt_grama_proteina_kg_dia_w := qt_grama_proteina_kg_dia_w + qt_elem_kg_dia_w;            --g proteína/kg/dia
    qt_kcal_proteina_w := qt_kcal_proteina_w + qt_kcal_w;
    pr_conc_proteina_solucao_w := pr_conc_proteina_solucao_w + coalesce(qt_diaria_w,qt_elemento_w);

  /* Lipidio */

  elsif (ie_tipo_elemento_w = 'L') then
    qt_kcal_w	:= qt_elemento_w * qt_formula_lipideo_w;

    qt_kcal_lipidio_w := qt_kcal_lipidio_w + qt_kcal_w;
    pr_conc_lipidio_solucao_w := pr_conc_lipidio_solucao_w + qt_elemento_w;
  end if;

  --ATTRIBUTES FOR ELEMENTS AND PRODUCTS
  ds_json_elem_w := ds_json_elem_w || '{'
      || format_array_json('NR_SEQUENCIA', nr_seq_elem_prescr_w, 1)
      || format_array_json('DS_ELEMENTO', substr(obter_descricao_padrao('NUT_ELEMENTO','DS_ELEMENTO',nr_seq_elemento_w),1,40), 1)
	  || format_array_json('DS_PADRAO', substr(obter_padrao_elem_nut_pac(nr_seq_elemento_w),1,40), 1)
      || format_array_json('DS_UNIDADE_MEDIDA', substr(obter_desc_unid_med(cd_unidade_medida_elem_w),1,40), 1)
      || format_array_json('NM_USUARIO', nm_usuario_p, 1)
      || format_array_json('NR_SEQ_NPT_CPOE', nr_seq_npt_cpoe_p, 1)
      || format_array_json('CD_UNIDADE_MEDIDA', cd_unidade_medida_elem_w, 1)
      || format_array_json('NR_SEQ_ELEMENTO', nr_seq_elemento_w, 1)
      || format_array_json_number('QT_DIARIA', qt_diaria_w)
      || format_array_json_number('QT_KCAL', qt_kcal_w)
      || format_array_json_number('QT_PROTOCOLO', qt_elemento_w)
      || format_array_json_number('QT_ELEM_KG_DIA', qt_elem_kg_dia_w)
      || format_array_json('IE_PROD_ADICIONAL', ie_prod_adicional_elem_w, 1)
      || format_array_json('IE_PRIM_FASE', ie_prim_fase_w, 1)
      || format_array_json('IE_SEG_FASE', ie_seg_fase_w, 1)
      || format_array_json('IE_TERC_FASE', ie_terc_fase_w, 1)
      || format_array_json('IE_QUAR_FASE', ie_quar_fase_w, 1)
      || format_array_json('IE_NPT', ie_npt_w, 1)
      || format_array_json_number('QT_GRAMA_NITROGENIO', qt_grama_nitrogenio_w)
      || format_array_json('IE_TIPO_ELEMENTO', ie_tipo_elemento_w, 1)
      || format_array_json('IE_GLUTAMINA', ie_glutamina_w, 1);
  ds_json_elem_w := substr(ds_json_elem_w, 1, length(ds_json_elem_w) -2) || '}, ';

  ds_json_prod_w := ds_json_prod_w || '{'
      || format_array_json('NR_SEQUENCIA', nr_seq_nut_elem_mat_w, 1)
      || format_array_json('NM_USUARIO', nm_usuario_p, 1)
      || format_array_json('NR_SEQ_ELEM_MAT', nr_sequencia_mat_w, 1)
      || format_array_json('NR_SEQ_ELEMENTO', nr_seq_elem_prescr_w, 1)
      || format_array_json('NR_SEQ_NPT_CPOE', nr_seq_npt_cpoe_p, 1)
      || format_array_json('CD_MATERIAL', cd_material_prod_w, 1)
      || format_array_json_number('QT_VOLUME', qt_volume_w)
      || format_array_json_number('QT_VOL_1_FASE', qt_vol_1_fase_w)
      || format_array_json_number('QT_VOL_2_FASE', qt_vol_2_fase_w)
      || format_array_json_number('QT_VOL_3_FASE', qt_vol_3_fase_w)
      || format_array_json_number('QT_VOL_4_FASE', qt_vol_4_fase_w)
      || format_array_json_number('QT_PROTOCOLO', qt_volume_protocolo_w)
      || format_array_json_number('QT_DOSE', qt_dose_w)
      || format_array_json('CD_UNIDADE_MEDIDA', cd_unidade_medida_prod_w, 1)
      || format_array_json('IE_PROD_ADICIONAL', ie_prod_adicional_prod_w, 1)
      || format_array_json('IE_SOMAR_VOLUME', ie_somar_volume_w, 1)
      || format_array_json('DS_MATERIAL', substr(obter_desc_material(cd_material_prod_w),1,60), 1)
      || format_array_json('DS_UNIDADE_MEDIDA', substr(obter_desc_unid_med(cd_unidade_medida_prod_w),1,40), 1)
      || format_array_json('IE_TIPO_ELEMENTO', ie_tipo_elemento_w, 1);
  ds_json_prod_w := substr(ds_json_prod_w, 1, length(ds_json_prod_w) -2) || '}, ';

END loop;
CLOSE c01;
  ds_json_elem_w := '"CPOE_NPT_ELEMENTO": [' || substr(ds_json_elem_w, 1, length(ds_json_elem_w) -2) || ']';
  ds_json_prod_w := '"CPOE_NPT_PRODUTO": [' || substr(ds_json_prod_w, 1, length(ds_json_prod_w) -2) || ']';

  qt_kcal_total_w := qt_kcal_proteina_w + qt_kcal_lipidio_w + qt_kcal_carboidrato_w;                          --VCT
  qt_kcal_kg_w := dividir_sem_round(qt_kcal_total_w, qt_peso_p);                                              --Kcal/Kg/dia
  qt_rel_cal_nit_w := round((dividir_sem_round((qt_kcal_lipidio_w + qt_kcal_carboidrato_w), qt_nitrogenio_total_w))::numeric, 2);  --Rel cal/N (x:1)
  qt_vel_inf_glicose_w := round((dividir_sem_round(pr_conc_glic_solucao_w, (qt_peso_p * 1.44)))::numeric, 2);                      --VIG (mg/kg/min)
  qt_kcal_proteico_w := qt_kcal_proteina_w;                                                                   --Kcal proteico
  qt_kcal_nao_proteico_w := qt_kcal_total_w - qt_kcal_proteina_w;                                             --Kcal não proteico
  pr_proteina_w := round((dividir_sem_round((qt_kcal_proteina_w * 100), qt_kcal_total_w))::numeric, 1);
  pr_lipidio_w := round((dividir_sem_round((qt_kcal_lipidio_w * 100), qt_kcal_total_w))::numeric, 1);
  pr_carboidrato_w := round((dividir_sem_round((qt_kcal_carboidrato_w * 100), qt_kcal_total_w))::numeric, 1);
  qt_gotejo_w := round(dividir_sem_round((qt_volume_total_w)::numeric, 24));

  if ((pr_carboidrato_w + pr_lipidio_w + pr_proteina_w) < 100) then
	pr_carboidrato_w := 100 - (pr_lipidio_w + pr_proteina_w);
  end if;


    ds_json_cpoe_w := '{'
      || format_array_json_number('QT_KCAL_TOTAL', qt_kcal_total_w)
      || format_array_json_number('QT_KCAL_KG', qt_kcal_kg_w)
      || format_array_json_number('PR_PROTEINA', pr_proteina_w)
      || format_array_json_number('PR_LIPIDIO', pr_lipidio_w)
      || format_array_json_number('PR_CARBOIDRATO', pr_carboidrato_w)
      || format_array_json_number('QT_KCAL_PROTEINA', qt_kcal_proteina_w)
      || format_array_json_number('QT_KCAL_LIPIDIO', qt_kcal_lipidio_w)
      || format_array_json_number('QT_KCAL_CARBOIDRATO', qt_kcal_carboidrato_w)
      || format_array_json_number('PR_CONC_PROTEINA_SOLUCAO', pr_conc_proteina_solucao_w)
      || format_array_json_number('PR_CONC_LIPIDIO_SOLUCAO', pr_conc_lipidio_solucao_w)
      || format_array_json_number('PR_CONC_GLIC_SOLUCAO', pr_conc_glic_solucao_w)
      || format_array_json_number('QT_GRAMA_PROTEINA_KG_DIA', qt_grama_proteina_kg_dia_w)
      || format_array_json_number('QT_GRAMA_NITROGENIO', qt_nitrogenio_total_w)
      || format_array_json_number('QT_REL_CAL_NIT', qt_rel_cal_nit_w)
      || format_array_json_number('QT_VEL_INF_GLICOSE', qt_vel_inf_glicose_w)
      || format_array_json_number('QT_KCAL_PROTEICO', qt_kcal_proteico_w)
      || format_array_json_number('QT_KCAL_NAO_PROTEICO', qt_kcal_nao_proteico_w)
      || format_array_json_number('QT_GOTEJO_NPT', qt_gotejo_w)
      --|| format_array_json_number('QT_OSMOLARIDADE_TOTAL', qt_osmolaridade_total_w)
      || format_array_json_number('QT_VOLUME_DIARIO', qt_volume_total_w)
	  || format_array_json_number('NR_SEQ_PROTOCOLO', nr_seq_protocolo_p);
      ds_json_cpoe_w := substr(ds_json_cpoe_w, 1, length(ds_json_cpoe_w) -2) || '}, ';

  ds_json_cpoe_w := substr(ds_json_cpoe_w, 1, length(ds_json_cpoe_w) -2);

  ds_json_p := '{"CPOE_DIETA": ' || ds_json_cpoe_w || ', '
                  || ds_json_elem_w || ', '
                  || ds_json_prod_w ||'}';


END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_npt_protocolo ( nr_seq_npt_cpoe_p bigint ,nr_seq_protocolo_p bigint ,qt_peso_p bigint ,ie_forma_p text ,nm_usuario_p text ,cd_estabelecimento_p bigint ,param_1034_p bigint ,param_1035_p bigint ,ds_json_p INOUT text ) FROM PUBLIC;

