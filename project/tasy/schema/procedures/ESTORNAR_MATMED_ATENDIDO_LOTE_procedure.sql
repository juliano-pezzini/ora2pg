-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE estornar_matmed_atendido_lote (nr_prescricao_p bigint, nr_seq_prescr_mat_p bigint, cd_local_estoque_p bigint, nr_sequencia_p bigint, cd_material_baixa_p bigint, nr_seq_lote_p bigint, nm_usuario_p text, ie_opcao_p bigint default 1, nr_lote_agrupamento_p bigint default null) AS $body$
DECLARE


/* ie_opcao_p 
1 - Volta pendente itens da pasta Atendidos
2 - Volta pendente itens da pasta Nao Atendidos
*/
nr_atendimento_w			bigint;
dt_entrada_unidade_w			timestamp;
cd_material_w				bigint;
dt_atendimento_w			timestamp;
qt_material_w				double precision;
cd_setor_atendimento_w			bigint;
cd_unidade_medida_w			varchar(30);
nr_seq_proc_princ_w			bigint;
nr_sequencia_w				bigint;
cd_cgc_fornecedor_w			varchar(20);
ds_observacao_w				varchar(2000);
nr_seq_lote_fornec_w			bigint;
nr_receita_w				bigint;
nr_serie_material_w			varchar(80);
ie_status_lote_w			varchar(3);
ie_baixa_estoq_pac_w			varchar(1);
cd_tipo_baixa_w				smallint;
ie_atualiza_estoque_w			tipo_baixa_prescricao.ie_atualiza_estoque%type;
cd_setor_atend_lote_w			setor_atendimento.cd_setor_atendimento%type;
cd_local_estoque_w			local_estoque.cd_local_estoque%type;
ds_erro_w					varchar(2000);

c01 CURSOR FOR
	SELECT	a.nr_atendimento,
		a.dt_entrada_unidade,
		coalesce(a.cd_material_exec, a.cd_material),
		a.dt_atendimento,
		a.qt_material,
		a.cd_setor_atendimento,
		a.cd_unidade_medida,
		a.nr_seq_proc_princ,
		a.nr_sequencia,
		a.cd_cgc_fornecedor,
		a.ds_observacao,
		a.nr_seq_lote_fornec,
		a.nr_receita,
		a.nr_serie_material
	from	material_atend_paciente a
	where	nr_prescricao 		= nr_prescricao_p
	and	nr_sequencia_prescricao = nr_seq_prescr_mat_p
	and 	nr_seq_lote_ap		= nr_seq_lote_p
	and	qt_material		< 0
	and	coalesce(dt_atualizacao_estoque::text, '') = '';
		

BEGIN

CALL grava_log_tasy(37474,' nr_seq_prescr_mat_p='|| nr_seq_prescr_mat_p || ' nr_prescricao_p='|| nr_prescricao_p ||
' cd_local_estoque_p='|| cd_local_estoque_p || ' nr_sequencia_p='|| nr_sequencia_p || 
' cd_material_baixa_p='|| cd_material_baixa_p || ' nr_seq_lote_p='|| nr_seq_lote_p || 
' nm_usuario_p='|| nm_usuario_p || ' ie_opcao_p='|| ie_opcao_p || 
' nr_lote_agrupamento_p='|| nr_lote_agrupamento_p,'Estornar');

/* consiste o status do lote */

select 	max(ie_status_lote)
into STRICT	ie_status_lote_w
from 	ap_lote
where 	nr_sequencia = nr_seq_lote_p;

if (ie_status_lote_w not in ('A','G')) then
	-- (-20011, 'O Lote desse item ja foi dispensado.' || '#@#@');
	CALL wheb_mensagem_pck.exibir_mensagem_abort(182587);
end if;

if (ie_opcao_p = 2) then
	
	begin
	select	cd_tipo_baixa,
		cd_setor_atendimento,
		obter_atendimento_prescr(nr_prescricao) nr_atendimento,
		cd_local_estoque
	into STRICT	cd_tipo_baixa_w,
		cd_setor_atend_lote_w,
		nr_atendimento_w,
		cd_local_estoque_w
	from	ap_lote
	where	nr_sequencia = nr_seq_lote_p;
	
	select	ie_atualiza_estoque
	into STRICT	ie_atualiza_estoque_w
	from 	tipo_baixa_prescricao
	where	ie_prescricao_devolucao = 'P'
	and 	cd_tipo_baixa = cd_tipo_baixa_w
	and 	ie_situacao = 'A';
	exception
	when others then
		cd_tipo_baixa_w := 0;
		ie_atualiza_estoque_w := 'N';
	end;
	
	if (ie_atualiza_estoque_w = 'S') then
		
		select	sum(a.qt_dispensar),
			max(a.cd_unidade_medida),
			max(a.dt_controle)
		into STRICT	qt_material_w,
			cd_unidade_medida_w,
			dt_atendimento_w
		from	ap_lote_item a,
			prescr_mat_hor b
		where	b.nr_seq_material = nr_seq_prescr_mat_p
		and	a.nr_seq_mat_hor = b.nr_sequencia
		and	a.nr_seq_lote = nr_seq_lote_p;
		
		ie_baixa_estoq_pac_w := substr(obter_se_baixa_estoque_pac(cd_setor_atend_lote_w, cd_material_baixa_p,null,0),1,1);
		
		if (ie_baixa_estoq_pac_w = 'S') then
			
			CALL gerar_prescricao_estoque(
				null,
				nr_atendimento_w,
				null,
				cd_material_baixa_p,
				coalesce(dt_atendimento_w,clock_timestamp()),
				2,
				cd_local_estoque_w,
				qt_material_w,
				cd_setor_atend_lote_w,
				cd_unidade_medida_w,
				nm_usuario_p, 'I',
				nr_prescricao_p,
				nr_seq_prescr_mat_p,
				null,
				null,
				null,
				null,
				null,
				null,
				null,
				null, '','','');
		end if;
	end if;
	
	goto NaoAtendidos;
end if;

/* estornar as devolucoes */

open c01;
loop
fetch c01 into
	nr_atendimento_w,
	dt_entrada_unidade_w,
	cd_material_w,
	dt_atendimento_w,
	qt_material_w,
	cd_setor_atendimento_w,
	cd_unidade_medida_w,
	nr_seq_proc_princ_w,
	nr_sequencia_w,
	cd_cgc_fornecedor_w,
	ds_observacao_w,
	nr_seq_lote_fornec_w,
	nr_receita_w,
	nr_serie_material_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	ie_baixa_estoq_pac_w := substr(obter_se_baixa_estoque_pac(cd_setor_atendimento_w, cd_material_w,null,0),1,1);
	
	if (ie_baixa_estoq_pac_w = 'S') then
		CALL gerar_prescricao_estoque(
			null,
			nr_atendimento_w,
			dt_entrada_unidade_w,
			cd_material_w,
			dt_atendimento_w,
			2,
			cd_local_estoque_p,
			qt_material_w,
			cd_setor_atendimento_w,
			cd_unidade_medida_w,
			nm_usuario_p, 'E',
			nr_prescricao_p,
			nr_seq_prescr_mat_p,
			nr_seq_proc_princ_w,
			nr_sequencia_w,
			cd_cgc_fornecedor_w,
			ds_observacao_w,
			nr_seq_lote_fornec_w,
			nr_receita_w,
			nr_serie_material_w,
			null, '','','');
	end if;

	delete	from material_atend_paciente
	where	nr_sequencia = nr_sequencia_w;

	end;
end loop;
close c01;

commit;

begin

/* update para atualizar o registro com o nome do usuario que esta voltando a condicao de pendente */

update	material_atend_paciente
set	nm_usuario		= nm_usuario_p,
	dt_atualizacao		= clock_timestamp()
where	nr_sequencia		= nr_sequencia_p;

delete
from	material_atend_paciente
where	nr_sequencia		= nr_sequencia_p;
exception
when others then
	ds_erro_w := substr(nr_prescricao_p ||';'|| nr_seq_lote_p || ';' || nr_seq_prescr_mat_p || ';' || nr_sequencia_p || ';' || SQLERRM(SQLSTATE) || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE,1,2000);
	insert into log_tasy(
		dt_atualizacao,
		nm_usuario,
		cd_log,
		ds_log)
	values (	clock_timestamp(),
		nm_usuario_p,
		4142,
		ds_erro_w);
end;

<<NaoAtendidos>>
begin
/* desfazer a baixa do item na prescr_material */

if (cd_material_baixa_p <> 0) then
	update 	prescr_material
	set 	cd_material_baixa  = NULL,
		cd_motivo_baixa = 0,
		dt_baixa  = NULL,
		dt_atualizacao = clock_timestamp(),
		nm_usuario = nm_usuario_p
	where 	nr_prescricao = nr_prescricao_p
	and 	nr_sequencia  = nr_seq_prescr_mat_p;
end if;

/* limpa data de controle da baixa dos itens do lote */

update	ap_lote_item
set	dt_controle  = NULL,
	dt_atualizacao = clock_timestamp(),
	nm_usuario = nm_usuario_p
where	nr_seq_lote = nr_seq_lote_p;

update	ap_lote
set		ie_status_lote = 'G',
		dt_atualizacao = clock_timestamp(),
		nm_usuario = nm_usuario_p
where 	nr_sequencia  = nr_seq_lote_p;

if (nr_lote_agrupamento_p IS NOT NULL AND nr_lote_agrupamento_p::text <> '') then
	update	ap_lote
	set		ie_status_lote = 'G'
	where 	nr_lote_agrupamento = nr_lote_agrupamento_p;
end if;
exception
when others then
	ds_erro_w := substr(nr_prescricao_p ||';'|| nr_seq_lote_p || ';' || nr_seq_prescr_mat_p || ';' || nr_sequencia_p || ';' || SQLERRM(SQLSTATE) || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE,1,2000);
	insert into log_tasy(
		dt_atualizacao,
		nm_usuario,
		cd_log,
		ds_log)
	values (	clock_timestamp(),
		nm_usuario_p,
		4143,
		ds_erro_w);
end;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE estornar_matmed_atendido_lote (nr_prescricao_p bigint, nr_seq_prescr_mat_p bigint, cd_local_estoque_p bigint, nr_sequencia_p bigint, cd_material_baixa_p bigint, nr_seq_lote_p bigint, nm_usuario_p text, ie_opcao_p bigint default 1, nr_lote_agrupamento_p bigint default null) FROM PUBLIC;

