-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_baixa_tit_rec_desc_folha ( nr_seq_tit_rec_cobr_p bigint, ie_acao_p text, nm_usuario_p text, dt_recebimento_p timestamp, vl_baixa_p INOUT bigint) AS $body$
DECLARE

 
/* 
ie_acao_p 
'E' = Extorno 
*/
 
 
nr_seq_trans_financ_w		bigint	:= null;
nr_seq_conta_banco_w		bigint;
nr_seq_carteira_cobr_w		bigint;
cd_estabelecimento_w		smallint;
cd_pessoa_fisica_w		varchar(10);
cd_cgc_w			varchar(14);
ie_desfazer_baixa_w		varchar(255);
ds_erro_w			varchar(4000);
cd_convenio_w			integer;
cd_tipo_recebimento_w		bigint;
nr_seq_cobranca_w		bigint;
cd_moeda_padrao_w		integer;
vl_baixa_w			double precision;
vl_desconto_w			double precision;
vl_acrescimo_w			double precision;
vl_juro_w			double precision;
vl_multa_w			double precision;
vl_credito_w			double precision;
pr_multa_padrao_w		double precision;
nr_seq_baixa_w			integer;
nr_titulo_w			bigint;
cd_banco_w			smallint;
ie_acresc_cobr_w		varchar(2);
ie_trans_tit_cobr_escrit_w	varchar(1);
qt_tit_nc_w			bigint;
nr_titulo_pagar_w		bigint;
nr_seq_trans_fin_abat_w		bigint;
cd_tipo_receb_abat_w		integer;
vl_titulos_nc_w			double precision;
vl_saldo_titulo_w		double precision;
cd_tipo_baixa_abat_w		integer;
nr_seq_trans_fin_abat_pag_w	bigint;
vl_juros_w			double precision;
nr_seq_classe_w			bigint;
nr_titulo_desc_folha_w		bigint;
nr_seq_baixa_desc_folha_w	integer;
dt_liquidacao_tit_vinc_w	timestamp 		:= null;
nr_titulo_contab_w		bigint;
nr_seq_movto_w			movto_trans_financ.nr_sequencia%type;
nr_seq_empresa_w		cobranca_escritural.nr_seq_empresa%type;
ie_transacao_controle_banc_w	pls_desc_empresa.ie_transacao_controle_bancario%type;

c01 CURSOR FOR 
	SELECT	nr_titulo_pagar 
	from	titulo_receber_nc 
	where	nr_titulo_rec = nr_titulo_w;


BEGIN 
select	b.cd_banco, 
	d.nr_seq_conta_banco, 
	a.nr_seq_carteira_cobr, 
	a.cd_estabelecimento, 
	a.cd_pessoa_fisica, 
	a.cd_cgc, 
	CASE WHEN obter_convenio_tit_rec(a.nr_titulo)=0 THEN null  ELSE obter_convenio_tit_rec(a.nr_titulo) END , 
	d.nr_sequencia, 
	d.cd_estabelecimento, 
	coalesce(c.vl_liquidacao,0) + coalesce(c.vl_despesa_bancaria,0) - coalesce(c.vl_acrescimo,0) - coalesce(c.vl_juros,0) - coalesce(c.vl_multa,0), 
	coalesce(c.vl_desconto,0), 
	coalesce(c.vl_acrescimo,0), 
	coalesce(c.vl_liquidacao,0), 
	a.nr_titulo, 
	c.vl_juros, 
	coalesce(c.vl_multa,0), 
	coalesce(vl_saldo_titulo,0), 
	d.nr_titulo_desc_folha, 
	d.nr_seq_empresa 
into STRICT	cd_banco_w, 
	nr_seq_conta_banco_w, 
	nr_seq_carteira_cobr_w, 
	cd_estabelecimento_w, 
	cd_pessoa_fisica_w, 
	cd_cgc_w, 
	cd_convenio_w, 
	nr_seq_cobranca_w, 
	cd_estabelecimento_w, 
	vl_baixa_w, 
	vl_desconto_w, 
	vl_acrescimo_w, 
	vl_credito_w, 
	nr_titulo_w, 
	vl_juros_w, 
	vl_multa_w, 
	vl_saldo_titulo_w, 
	nr_titulo_desc_folha_w, 
	nr_seq_empresa_w 
FROM cobranca_escritural d, titulo_receber_cobr c, titulo_receber a
LEFT OUTER JOIN banco_estabelecimento b ON (a.nr_seq_conta_banco = b.nr_sequencia)
WHERE c.nr_titulo		= a.nr_titulo and c.nr_seq_cobranca	= d.nr_sequencia and c.nr_sequencia		= nr_seq_tit_rec_cobr_p;
 
if (vl_baixa_w > vl_saldo_titulo_w) then 
	vl_baixa_w	:= vl_saldo_titulo_w;
end if;
 
ie_desfazer_baixa_w := Obter_Param_Usuario(815, 17, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_desfazer_baixa_w);
 
select	cd_moeda_padrao, 
	pr_multa_padrao, 
	ie_acresc_cobr, 
	coalesce(ie_trans_tit_cobr_escrit,'N'), 
	nr_seq_trans_fin_abat, 
	cd_tipo_receb_abat 
into STRICT	cd_moeda_padrao_w, 
	pr_multa_padrao_w, 
	ie_acresc_cobr_w, 
	ie_trans_tit_cobr_escrit_w, 
	nr_seq_trans_fin_abat_w, 
	cd_tipo_receb_abat_w 
from	parametro_contas_receber 
where	cd_estabelecimento	= cd_estabelecimento_w;
 
select	min(cd_tipo_recebimento) 
into STRICT	cd_tipo_recebimento_w 
from	tipo_recebimento 
where	ie_tipo_consistencia = 1 
and   ((cd_estabelecimento = cd_estabelecimento_w) or (coalesce(cd_estabelecimento::text, '') = ''));
 
nr_seq_trans_financ_w := obter_trans_fin_regra('ETR', cd_estabelecimento_w, cd_pessoa_fisica_w, cd_cgc_w, cd_convenio_w, cd_banco_w, null, nr_seq_conta_banco_w, nr_seq_carteira_cobr_w, null, nr_seq_trans_financ_w);
 
if (ie_trans_tit_cobr_escrit_w = 'S') then 
	select	max(nr_seq_trans_fin_baixa) 
	into STRICT	nr_seq_trans_financ_w 
	from	titulo_receber 
	where	nr_titulo = nr_titulo_w;
end if;
 
if (coalesce(nr_seq_trans_financ_w::text, '') = '') then 
	select	nr_seq_trans_cobr_escrit 
	into STRICT	nr_seq_trans_financ_w 
	from	parametro_contas_receber 
	where	cd_estabelecimento	= cd_estabelecimento_w;
	 
	if (coalesce(nr_seq_trans_financ_w::text, '') = '') then 
		select	min(nr_sequencia) 
		into STRICT	nr_seq_trans_financ_w 
		from	transacao_financeira 
		where	ie_acao	= 1 
		and	cd_estabelecimento = cd_estabelecimento_w;
	end if;
end if;
 
select	coalesce(max(nr_sequencia),0) + 1 
into STRICT	nr_seq_baixa_w 
from	titulo_receber_liq 
where	nr_titulo	= nr_titulo_w;
 
if (ie_acao_p = 'E') then 
	vl_baixa_w	:= vl_baixa_w * -1;
	vl_desconto_w	:= vl_desconto_w * -1;
	vl_acrescimo_w	:= vl_acrescimo_w * -1;
end if;
 
if (ie_acresc_cobr_w = 'S') then 
	vl_multa_w	:=	((vl_baixa_w + vl_acrescimo_w) * pr_multa_padrao_w) / 100;
	vl_juro_w	:= 	vl_acrescimo_w - vl_multa_w;
else 
	vl_juro_w	:= 	coalesce(vl_acrescimo_w,0) + coalesce(vl_juros_w,0);
end if;
 
if (coalesce(nr_titulo_desc_folha_w,0) > 0) then 
	select	dt_liquidacao 
	into STRICT	dt_liquidacao_tit_vinc_w 
	from	titulo_receber 
	where	nr_titulo = nr_titulo_desc_folha_w;
end if;
 
insert	into titulo_receber_liq(	nr_titulo, nr_sequencia, dt_recebimento, vl_recebido, vl_descontos, 
			vl_juros, vl_multa, vl_rec_maior, vl_glosa, cd_moeda, 
			dt_atualizacao, nm_usuario, cd_tipo_recebimento, ie_acao, nr_lote_contabil, 
			nr_seq_trans_fin, ie_lib_caixa, nr_seq_conta_banco, nr_seq_cobranca, nr_lote_contab_antecip, 
			nr_lote_contab_pro_rata) 
	values (	nr_titulo_w, nr_seq_baixa_w, coalesce(dt_liquidacao_tit_vinc_w, dt_recebimento_p), vl_baixa_w, vl_desconto_w, 
			vl_juro_w, vl_multa_w, 0, 0, cd_moeda_padrao_w, 
			clock_timestamp(), nm_usuario_p, cd_tipo_recebimento_w, 'I', 0, 
			nr_seq_trans_financ_w, 'S', nr_seq_conta_banco_w, nr_seq_cobranca_w, 0, 
			0);
 
CALL gerar_titulo_rec_liq_cc(cd_estabelecimento_w, null, nm_usuario_p, nr_titulo_w, nr_seq_baixa_w);
 
nr_titulo_contab_w := pls_gerar_tit_rec_liq_mens(nr_titulo_w, nr_seq_baixa_w, nm_usuario_p, nr_titulo_contab_w);
 
if (nr_titulo_contab_w IS NOT NULL AND nr_titulo_contab_w::text <> '') then 
	CALL wheb_mensagem_pck.exibir_mensagem_abort(236517, 'NR_TITULO=' || nr_titulo_contab_w);
end if;
 
select	max(ie_transacao_controle_bancario) 
into STRICT	ie_transacao_controle_banc_w 
from	pls_desc_empresa 
where	nr_sequencia = nr_seq_empresa_w;
 
if (coalesce(ie_transacao_controle_banc_w,'N') = 'S') then 
	select	nextval('movto_trans_financ_seq') 
	into STRICT	nr_seq_movto_w 
	;
	 
	insert into movto_trans_financ(nr_sequencia, 
		nm_usuario, 
		dt_atualizacao, 
		nr_seq_trans_financ, 
		vl_transacao, 
		nr_seq_banco, 
		dt_transacao, 
		ie_conciliacao, 
		nr_lote_contabil, 
		nr_seq_cobr_escrit, 
		dt_referencia_saldo) 
	values (nr_seq_movto_w, 
		nm_usuario_p, 
		clock_timestamp(), 
		nr_seq_trans_financ_w, 
		vl_baixa_w, 
		nr_seq_conta_banco_w, 
		coalesce(dt_liquidacao_tit_vinc_w, dt_recebimento_p), 
		'N', 
		0, 
		nr_seq_cobranca_w, 
		coalesce(dt_liquidacao_tit_vinc_w, dt_recebimento_p));
end if;
 
select	vl_saldo_titulo 
into STRICT	vl_saldo_titulo_w 
from	titulo_receber 
where	nr_titulo = nr_titulo_w;
 
select	cd_tipo_baixa_abat, 
	nr_seq_trans_fin_abat 
into STRICT	cd_tipo_baixa_abat_w, 
	nr_seq_trans_fin_abat_pag_w 
from	parametros_contas_pagar 
where	cd_estabelecimento = cd_estabelecimento_w;
 
select	coalesce(sum(a.vl_saldo_titulo),0) 
into STRICT	vl_titulos_nc_w 
from	titulo_receber_nc 	b, 
	titulo_pagar 		a 
where	a.nr_titulo 		= b.nr_titulo_pagar 
and	b.nr_titulo_rec 	= nr_titulo_w;
 
if	((vl_credito_w + vl_titulos_nc_w) = vl_saldo_titulo_w) then 
	open c01;
	loop 
	fetch c01 into 
		nr_titulo_pagar_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		baixar_titulos_abatimento(0, nr_titulo_w, nr_titulo_pagar_w, cd_tipo_baixa_abat_w, cd_tipo_receb_abat_w, 
					 nr_seq_trans_fin_abat_pag_w, nr_seq_trans_fin_abat_w, nm_usuario_p, coalesce(dt_liquidacao_tit_vinc_w, dt_recebimento_p), 
					 '','');
	end loop;
	close c01;
end if;
/* Fim Elton OS 195860*/
 
 
/* Francisco - 10/02/2010 - OS 194892 */
 
CALL pls_gerar_amortizacao_regra(nr_titulo_w, nr_seq_baixa_w, nm_usuario_p, 'N');
 
/* Francisco - 28/09/2010 */
 
CALL pls_apropriar_juros_multa_mens(nr_titulo_w,nr_seq_baixa_w,nm_usuario_p,cd_estabelecimento_w,'N',ie_acao_p);
 
update	titulo_receber_cobr 
set	dt_liquidacao	= trunc(clock_timestamp(),'dd') 
where	coalesce(dt_liquidacao::text, '') = '' 
and	nr_sequencia	= nr_seq_tit_rec_cobr_p;
 
begin 
CALL Atualizar_Saldo_Tit_Rec(nr_titulo_w, nm_usuario_p);
exception 
when others then 
	ds_erro_w	:= sqlerrm;
	if (coalesce(ie_desfazer_baixa_w, 'N') = 'S') then 
		delete	from titulo_receber_liq 
		where	nr_titulo	= nr_titulo_w 
		and	nr_sequencia	= nr_seq_baixa_w;
		update	titulo_receber_cobr 
		set	dt_liquidacao		 = NULL, 
			ds_inconsistencia	= ds_erro_w 
		where	(dt_liquidacao IS NOT NULL AND dt_liquidacao::text <> '') 
		and	nr_sequencia		= nr_seq_tit_rec_cobr_p;
	else 
		CALL wheb_mensagem_pck.exibir_mensagem_abort(204879, 'DS_ERRO=' || ds_erro_w);
	end if;
end;
 
vl_baixa_p	:= vl_baixa_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_baixa_tit_rec_desc_folha ( nr_seq_tit_rec_cobr_p bigint, ie_acao_p text, nm_usuario_p text, dt_recebimento_p timestamp, vl_baixa_p INOUT bigint) FROM PUBLIC;

