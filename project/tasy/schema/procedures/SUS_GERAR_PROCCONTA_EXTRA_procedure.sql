-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE sus_gerar_procconta_extra ( cd_estabelecimento_p bigint, cd_convenio_p bigint, cd_categoria_p text, cd_procedimento_p bigint, ie_origem_proced_p bigint, cd_pessoa_fisica_p text, ie_carater_inter_sus_p text, nr_interno_conta_p bigint, cd_setor_atendimento_p bigint, nr_seq_proc_p bigint, dt_vigencia_p timestamp, nm_usuario_p text) AS $body$
DECLARE



vl_proc_ajustado_w			double precision	:= null;
cd_grupo_w			bigint	:= 0;
cd_especialidade_w		bigint	:= 0;
cd_area_w			bigint	:= 0;
cd_municipio_ibge_w		varchar(6);
cd_convenio_ref_w			integer;
cd_categoria_ref_w			varchar(10);
cd_procedimento_ref_w		bigint	:= 0;
ie_origem_proc_ref_w		bigint := 0;
nr_sequencia_w			bigint;
nr_atendimento_w			bigint;
dt_entrada_w			timestamp;
dt_alta_w				timestamp;
dt_acerto_conta_w			timestamp;
nr_interno_conta_w			bigint;
nr_seq_atepacu_w			bigint;
nr_seq_proc_w			bigint	:= 0;
qt_dia_fim_conta_w			smallint	:= 0;
dt_periodo_inicial_w		timestamp;
dt_periodo_final_w			timestamp;
dt_referencia_w			timestamp;
ie_tipo_atendimento_w		smallint;
cd_procedencia_w			integer;
cd_medico_executor_w		varchar(10);
ie_funcao_medico_w		varchar(10);
cd_espec_medico_w		integer;
ie_proc_unico_sus_w		varchar(1)	:= 'N';
tx_ajuste_w			double precision	:= 1;
tx_ajuste_medico_w		double precision	:= 1;
tx_ajuste_custo_oper_w		double precision	:= 1;
tx_ajuste_matmed_w		double precision	:= 1;
vl_aux_w				double precision;
ds_aux_w			varchar(80);
dt_aux_w				timestamp;
qt_reg_proc_glosa_w		integer	:= 0;
vl_medico_w			double precision	:= 0;
vl_sadt_w			double precision	:= 0;
vl_matmed_w			double precision	:= 0;
vl_maxproc_regra_sus_w		double precision	:= 0;
vl_preco_proc_w			double precision	:= 0;
nr_seq_regra_w			bigint	:= 0;
cd_setor_atendimento_w		bigint;
dt_comepetencia_w		timestamp;
nr_seq_grupo_w			bigint;
nr_seq_subgrupo_w		bigint;
nr_seq_forma_org_w		bigint;
ie_calcula_amb_sus_w		varchar(1);
ie_valor_informado_w		varchar(1)	:= 'S';
qt_ocorrencia_w			bigint	:= 0;
dt_entrada_unidade_w		timestamp;
vl_sa_w				double precision	:= 0;
ie_proc_qt_zero_sus_w		varchar(1)	:= 'N';	
ie_gerar_proc_adic_sus_w		varchar(15)	:= 'N';
ie_regra_tipo_atend_w		varchar(1)	:= 'A';
ie_gerar_sem_proc_ref_sus_w	varchar(1)	:= 'N';	
cd_profissional_w			varchar(10);
ie_data_proc_adic_sus_w		varchar(1) 	:= 'A';	
dt_procedimento_w		timestamp;
ie_desmarca_vl_inf_sus_w	varchar(15)	:= 'N';
qt_procedimento_w		double precision;
qt_proc_regra_w			double precision := 1;
ie_mantem_qtd_proc_sus_w	varchar(15)	:= 'N';	

C01 CURSOR FOR
SELECT	coalesce(vl_proc_ajustado, 0),
	cd_convenio_ref,
	cd_categoria_ref,
	coalesce(cd_procedimento_ref,0),
	ie_origem_proc_ref,
	ie_proc_unico_sus,
	coalesce(tx_ajuste,1),
	coalesce(tx_ajuste_medico, 1),
	coalesce(tx_ajuste_custo_oper, 1),
	coalesce(tx_ajuste_matmed, 1),
	coalesce(vl_maxproc_regra_sus, 0),
	nr_sequencia,
	coalesce(cd_setor_atend_ref,cd_setor_atendimento_p),
	ie_proc_qt_zero_sus,
	ie_gerar_sem_proc_ref_sus
from	regra_ajuste_proc
where	cd_estabelecimento	= cd_estabelecimento_p
and	cd_convenio		= cd_convenio_p
and	((coalesce(cd_categoria::text, '') = '') or (cd_categoria = cd_categoria_p))
and	((coalesce(cd_procedimento::text, '') = '') or (cd_procedimento = cd_procedimento_p))
and	((coalesce(ie_origem_proced::text, '') = '') or (ie_origem_proced = ie_origem_proced_p))
and	((coalesce(cd_grupo_proc::text, '') = '') or (cd_grupo_proc = cd_grupo_w))
and	((coalesce(cd_especialidade::text, '') = '') or (cd_especialidade = cd_especialidade_w))
and	((coalesce(cd_area_procedimento::text, '') = '') or (cd_area_procedimento = cd_area_w))
and	((coalesce(cd_municipio_ibge_pac::text, '') = '') or (cd_municipio_ibge_pac = cd_municipio_ibge_w))
and	((coalesce(ie_carater_inter_sus::text, '') = '') or (ie_carater_inter_sus = ie_carater_inter_sus_p))
and	((coalesce(ie_tipo_atendimento::text, '') = '') or (ie_tipo_atendimento = ie_tipo_atendimento_w))
and	((coalesce(cd_setor_atendimento::text, '') = '') or (cd_setor_atendimento = cd_setor_atendimento_p))
and	((coalesce(cd_procedencia::text, '') = '') or (cd_procedencia = cd_procedencia_w))
and	coalesce(nr_seq_grupo,nr_seq_grupo_w)		= nr_seq_grupo_w
and	coalesce(nr_seq_subgrupo,nr_seq_subgrupo_w)		= nr_seq_subgrupo_w
and	coalesce(nr_seq_forma_org,nr_seq_forma_org_w)	= nr_seq_forma_org_w
and	ie_situacao		= 'A'
and 	dt_vigencia_p between dt_inicio_vigencia and coalesce(dt_final_vigencia,ESTABLISHMENT_TIMEZONE_UTILS.endOfDay(clock_timestamp()))
and	ie_glosa		= 'S'
order by
	coalesce(cd_medico,'0'),
	coalesce(qt_idade_min,0),
	coalesce(cd_procedimento, 0),
	coalesce(nr_seq_forma_org, 0),
	coalesce(nr_seq_subgrupo, 0),
	coalesce(nr_seq_grupo, 0),	
	coalesce(cd_grupo_proc, 0), 
	coalesce(cd_especialidade, 0),
	coalesce(cd_area_procedimento, 0),
	coalesce(cd_tipo_acomodacao, 0), 
	coalesce(ie_tipo_atendimento, 0),
	coalesce(cd_setor_atendimento, 0),
	coalesce(cd_empresa_ref,0),
	coalesce(ie_clinica,0),
	coalesce(cd_plano,0),
	ie_credenciado,
	dt_inicio_vigencia,
	coalesce(nr_seq_proc_interno,0);

	
c02 CURSOR FOR
	SELECT	*
	from	procedimento_participante a
	where	nr_sequencia	= nr_seq_proc_p
	and	not exists (	SELECT	1
					from	procedimento_participante x
					where	x.nr_seq_partic	= a.nr_seq_partic
					and	x.nr_sequencia	= nr_seq_proc_w);
					
c02_w	c02%rowtype;

BEGIN

/* Obter Estrutura do procedimento */

select	coalesce(max(cd_grupo_proc),0),
	coalesce(max(cd_especialidade),0),
	coalesce(max(cd_area_procedimento),0)
into STRICT	cd_grupo_w,
	cd_especialidade_w,
	cd_area_w
from	Estrutura_Procedimento_v
where	cd_procedimento 	= cd_procedimento_p
and	ie_origem_proced	= ie_origem_proced_p;

/* Felipe Martini OS85074 Nova estrutura SUS*/

begin
select	nr_seq_grupo,
	nr_seq_subgrupo,
	nr_seq_forma_org
into STRICT	nr_seq_grupo_w,
	nr_seq_subgrupo_w,
	nr_seq_forma_org_w
from	sus_estrutura_procedimento_v
where	cd_procedimento		= cd_procedimento_p
and	ie_origem_proced	= ie_origem_proced_p;
exception
	when others then
	nr_seq_grupo_w		:= 0;	/* Felipe Martini e Almir OS135256 */
	nr_seq_subgrupo_w	:= 0;
	nr_seq_forma_org_w	:= 0;
end;

/* Obter o municipio IBGE do paciente */

select	coalesce(max(cd_municipio_ibge),'')
into STRICT	cd_municipio_ibge_w
from	compl_pessoa_fisica
where	cd_pessoa_fisica	= cd_pessoa_fisica_p
and	ie_tipo_complemento	= 1;

/* Obter dados do atendimento */


/*Geliard - 24/02/2010 OS189372 - Retirei a funcao obter_atepacu_paciente e introduzi  o tratamento mais abaixo para obter o nr_seq_atepacu*/

begin
select	b.nr_atendimento,
	dt_entrada,
	dt_alta,
	b.ie_tipo_atendimento,
	b.cd_procedencia
into STRICT	nr_atendimento_w,
	dt_entrada_w,
	dt_alta_w,
	ie_tipo_atendimento_w,
	cd_procedencia_w
from	atendimento_paciente	b,
	conta_paciente		a
where	a.nr_atendimento	= b.nr_atendimento
and	a.nr_interno_conta	= nr_interno_conta_p;
exception
when others then
	nr_atendimento_w	:= null;
	dt_entrada_w		:= null;
	dt_alta_w		:= null;
	ie_tipo_atendimento_w	:= null;
	cd_procedencia_w	:= null;
end;

/*Obter parametros de Faturamento*/

select	coalesce(max(ie_calcula_amb_sus),'N'),
	coalesce(max(ie_gerar_proc_adic_sus),'N'),
	coalesce(max(ie_regra_tipo_atend),'A'),
	coalesce(max(ie_data_proc_adic_sus),'A'),
	coalesce(max(ie_desmarca_vl_inf_sus),'N'),
	coalesce(max(ie_mantem_qtd_proc_sus),'N')
into STRICT	ie_calcula_amb_sus_w,
	ie_gerar_proc_adic_sus_w,
	ie_regra_tipo_atend_w,
	ie_data_proc_adic_sus_w,
	ie_desmarca_vl_inf_sus_w,
	ie_mantem_qtd_proc_sus_w
from	parametro_faturamento
where	cd_estabelecimento	= cd_estabelecimento_p;

if (coalesce(ie_regra_tipo_atend_w,'A') = 'C') then
	begin
	select	coalesce(max(ie_tipo_atend_conta),ie_tipo_atendimento_w)
	into STRICT	ie_tipo_atendimento_w
	from 	conta_paciente
	where 	nr_interno_conta = nr_interno_conta_p;
	exception
		when others then
		ie_tipo_atendimento_w:= ie_tipo_atendimento_w;
	end;
end if;

/* Obter dados do procedimento */

select	cd_medico_executor,
	cd_pessoa_fisica,
	ie_funcao_medico,
	cd_especialidade,
	dt_procedimento,
	qt_procedimento
into STRICT	cd_medico_executor_w,
	cd_profissional_w,
	ie_funcao_medico_w,
	cd_espec_medico_w,
	dt_procedimento_w,
	qt_procedimento_w
from	procedimento_paciente
where	nr_sequencia	= nr_seq_proc_p;

if (ie_mantem_qtd_proc_sus_w = 'S') then
	qt_proc_regra_w := qt_procedimento_w;
end if;

OPEN C01;
LOOP
FETCH C01 into
	vl_proc_ajustado_w,
	cd_convenio_ref_w,
	cd_categoria_ref_w,
	cd_procedimento_ref_w,
	ie_origem_proc_ref_w,
	ie_proc_unico_sus_w,
	tx_ajuste_w,
	tx_ajuste_medico_w,
	tx_ajuste_custo_oper_w,
	tx_ajuste_matmed_w,
	vl_maxproc_regra_sus_w,
	nr_seq_regra_w,
	cd_setor_atendimento_w,
	ie_proc_qt_zero_sus_w,
	ie_gerar_sem_proc_ref_sus_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
BEGIN
	vl_proc_ajustado_w	:= vl_proc_ajustado_w;
	cd_convenio_ref_w	:= cd_convenio_ref_w;
	cd_categoria_ref_w	:= cd_categoria_ref_w;
	cd_procedimento_ref_w	:= cd_procedimento_ref_w;
	ie_origem_proc_ref_w	:= ie_origem_proc_ref_w;
	ie_proc_unico_sus_w	:= ie_proc_unico_sus_w;
	tx_ajuste_w		:= tx_ajuste_w;
	tx_ajuste_medico_w	:= tx_ajuste_medico_w;
	tx_ajuste_custo_oper_w	:= tx_ajuste_custo_oper_w;
	tx_ajuste_matmed_w	:= tx_ajuste_matmed_w;
	vl_maxproc_regra_sus_w	:= vl_maxproc_regra_sus_w;
	nr_seq_proc_w		:= 0;
	ie_proc_qt_zero_sus_w	:= ie_proc_qt_zero_sus_w;
	
	if (ie_gerar_sem_proc_ref_sus_w  	= 'S') and (cd_procedimento_ref_w		= 0) then
		cd_procedimento_ref_w 	:= cd_procedimento_p;
		ie_origem_proc_ref_w	:= ie_origem_proced_p;
	end if;
	
	/*Com este parametro de faturamento marcado, sera glosado para o convenio e categoria informados na Entrada Unica*/

	if (coalesce(ie_gerar_proc_adic_sus_w,'N') = 'S') then
		begin
		
		begin
		select	coalesce(max(CD_CONVENIO_GLOSA),cd_convenio_ref_w),
			coalesce(max(CD_CATEGORIA_GLOSA),cd_categoria_ref_w)
		into STRICT	cd_convenio_ref_w,
			cd_categoria_ref_w
		from	ATEND_CATEGORIA_CONVENIO
		where	nr_atendimento = nr_atendimento_w;
		exception
		when others then
			cd_convenio_ref_w 	:= cd_convenio_ref_w;
			cd_categoria_ref_w	:= cd_categoria_ref_w;
		end;	
		
		end;
	end if;

	if (ie_proc_unico_sus_w	= 'S') then
		select	coalesce(max(nr_sequencia),0)
		into STRICT	nr_seq_proc_w
		from	procedimento_paciente
		where	nr_atendimento		= nr_atendimento_w
		and	cd_procedimento		= cd_procedimento_ref_w
		and	ie_origem_proced	= ie_origem_proc_ref_w
		and	cd_convenio		= cd_convenio_ref_w
		and	cd_categoria		= cd_categoria_ref_w
		and	(nr_interno_conta IS NOT NULL AND nr_interno_conta::text <> '')
		and	coalesce(cd_motivo_exc_conta::text, '') = '';
	end if;

	select	count(*)
	into STRICT	qt_reg_proc_glosa_w
	from	procedimento_paciente
	where	nr_seq_proc_princ	= nr_seq_proc_p
	and	cd_procedimento		= cd_procedimento_ref_w
	and	ie_origem_proced	= ie_origem_proc_ref_w
	and	cd_situacao_glosa	= 21
	and	(nr_interno_conta IS NOT NULL AND nr_interno_conta::text <> '')
	and	coalesce(cd_motivo_exc_conta::text, '') = '';
	
	if (ie_calcula_amb_sus_w		= 'S') 	and (ie_origem_proc_ref_w not in (2,3,7)) then

		select	count(*),
			coalesce(max(nr_sequencia),0)
		into STRICT	qt_reg_proc_glosa_w,
			nr_seq_proc_w
		from	procedimento_paciente
		where	nr_seq_proc_princ	= nr_seq_proc_p
		and	cd_procedimento		= cd_procedimento_ref_w
		and	ie_origem_proced	= ie_origem_proc_ref_w
		and	(nr_interno_conta IS NOT NULL AND nr_interno_conta::text <> '')
		and	coalesce(cd_motivo_exc_conta::text, '') = '';
				
		if (nr_seq_proc_w	> 0) then
			open C02;
			loop
			fetch C02 into	
				c02_w;
			EXIT WHEN NOT FOUND; /* apply on C02 */
				begin
				qt_ocorrencia_w	:= qt_ocorrencia_w+1;
				insert into procedimento_participante(
				nr_sequencia,		nr_seq_partic,		ie_funcao, 
				dt_atualizacao, 	nm_usuario, 		cd_pessoa_fisica, 
				cd_cgc, 		ie_valor_informado, 	ie_emite_conta, 
				vl_participante, 	vl_conta, 		nr_lote_contabil, 
				nr_conta_medico, 	ie_tipo_servico_sus, 	ie_tipo_ato_sus, 
				qt_ponto_sus, 		vl_ponto_sus, 		vl_original, 
				ie_responsavel_credito, pr_procedimento, 	cd_especialidade, 
				pr_faturar, 		cd_medico_convenio, 	nr_doc_honor_conv, 
				nr_seq_proc_crit_repasse, ie_tiss_tipo_guia, 	nr_cirurgia, 
				cd_cbo, 		ie_doc_executor, 	ie_participou_sus, 
				cd_medico_exec_tiss, 	cd_cgc_prestador_tiss, 	ds_proc_tiss, 
				ds_prestador_tiss, 	cd_prestador_tiss ) 
				 values ( 
				nr_seq_proc_w, 			c02_w.nr_seq_partic, 		c02_w.ie_funcao, 
				clock_timestamp(), 			nm_usuario_p, 			c02_w.cd_pessoa_fisica, 
				c02_w.cd_cgc, 			c02_w.ie_valor_informado,	c02_w.ie_emite_conta, 
				c02_w.vl_participante, 		c02_w.vl_conta, 		c02_w.nr_lote_contabil, 
				c02_w.nr_conta_medico, 		c02_w.ie_tipo_servico_sus,	c02_w.ie_tipo_ato_sus, 
				c02_w.qt_ponto_sus, 		c02_w.vl_ponto_sus, 		c02_w.vl_original, 
				c02_w.ie_responsavel_credito, 	c02_w.pr_procedimento, 		c02_w.cd_especialidade, 
				c02_w.pr_faturar, 		c02_w.cd_medico_convenio, 	c02_w.nr_doc_honor_conv, 
				c02_w.nr_seq_proc_crit_repasse, c02_w.ie_tiss_tipo_guia, 	c02_w.nr_cirurgia, 
				c02_w.cd_cbo, 			c02_w.ie_doc_executor, 		c02_w.ie_participou_sus, 
				c02_w.cd_medico_exec_tiss, 	c02_w.cd_cgc_prestador_tiss, 	c02_w.ds_proc_tiss, 
				c02_w.ds_prestador_tiss, 	c02_w.cd_prestador_tiss );
				end;
			end loop;
			close C02;
			if (qt_ocorrencia_w	> 0) then
				CALL atualiza_preco_proc_amb(nr_seq_proc_w,nm_usuario_p);
			end if;
		end if;
	end if;	
	
	if (nr_seq_proc_w = 0) and (cd_procedimento_ref_w	<> 0) and (qt_reg_proc_glosa_w = 0) then
		begin
		
		if (vl_proc_ajustado_w	= 0) then
			/* Obter os valores do procedimento SUS lancado na conta*/

				if (ie_origem_proced_p	in (2,3))	 then
					SELECT * FROM define_preco_proc_sus(clock_timestamp(), cd_procedimento_p, ie_origem_proced_p, cd_estabelecimento_p, vl_aux_w, vl_aux_w, vl_matmed_w, vl_aux_w, vl_aux_w, vl_medico_w, vl_sadt_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_preco_proc_w, vl_aux_w, dt_aux_w, ds_aux_w, vl_aux_w) INTO STRICT vl_aux_w, vl_aux_w, vl_matmed_w, vl_aux_w, vl_aux_w, vl_medico_w, vl_sadt_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_preco_proc_w, vl_aux_w, dt_aux_w, ds_aux_w, vl_aux_w;
				elsif (ie_origem_proced_p		= 7) then
					SELECT * FROM Sus_Define_Preco_Proced(clock_timestamp(), cd_procedimento_p, ie_origem_proced_p, cd_estabelecimento_p, ie_tipo_atendimento_w, vl_sa_w, vl_matmed_w, vl_medico_w, vl_sadt_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, dt_comepetencia_w) INTO STRICT vl_sa_w, vl_matmed_w, vl_medico_w, vl_sadt_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, dt_comepetencia_w;
				end if;
			
			if (ie_calcula_amb_sus_w		= 'S') 	and (ie_origem_proc_ref_w not in (2,3,7)) then
				ie_valor_informado_w	:= 'N';
			end if;
			
			if (ie_desmarca_vl_inf_sus_w = 'S') and (ie_origem_proc_ref_w = 7) and (ie_valor_informado_w = 'S') then
				ie_valor_informado_w	:= 'N';
			end if;
				
			vl_medico_w		:= vl_medico_w * tx_ajuste_medico_w;
			vl_sadt_w		:= vl_sadt_w * tx_ajuste_custo_oper_w;
			vl_matmed_w		:= vl_matmed_w * tx_ajuste_matmed_w;
			if (ie_tipo_atendimento_w = 1) then
				vl_preco_proc_w		:= (vl_medico_w + vl_sadt_w + vl_matmed_w);				
			else
				vl_preco_proc_w		:= vl_sa_w;				
			end if;
			
		/* Caso exista ajuste de valor na regra, entao o valor do procedimento SUS e calculo pelo ajuste */

			if (tx_ajuste_w    <> 1) then
				vl_preco_proc_w	:= (vl_preco_proc_w * tx_ajuste_w);
			end if;
		else
			vl_preco_proc_w	:= vl_proc_ajustado_w;
		end if;
		
		/* Felipe - OS69140 - 20/10/2007
		Caso o valor total do procedimento a ser gerado for maior que o valor maximo permitido, entao o valor do procedimento recebe o maximo permitido */
		if (vl_maxproc_regra_sus_w	> 0) and (vl_preco_proc_w	> vl_maxproc_regra_sus_w) then
			vl_preco_proc_w		:= vl_maxproc_regra_sus_w;
		end if;
		
		/*Geliard - 24/02/2010 OS189372
		Criado tratamento para verificar se ha passagem para o setor de execucao do procedimento, caso nao haja sera gerada a passagem*/
		begin
		select	max(nr_seq_interno)
		into STRICT	nr_seq_atepacu_w
		from 	atend_paciente_unidade
		where 	cd_setor_atendimento	= cd_setor_atendimento_w
		and	nr_atendimento 		= nr_atendimento_w
		and	dt_entrada_unidade 	<= clock_timestamp();
		exception
		when others then
			nr_seq_atepacu_w := 0;
		end;	
		
		if (coalesce(nr_seq_atepacu_w,0) = 0) then
			CALL gerar_passagem_setor_atend(nr_atendimento_w, cd_setor_atendimento_w, clock_timestamp(), 'N', nm_usuario_p);
		
			select	max(nr_seq_interno)
			into STRICT	nr_seq_atepacu_w
			from	atend_paciente_unidade
			where	nr_atendimento 			= nr_atendimento_w
			and	cd_setor_atendimento		= cd_setor_atendimento_w
			and	pkg_date_utils.get_time(dt_entrada_unidade,0,0,0)	<= pkg_date_utils.get_time(clock_timestamp(),0,0,0);
		end if;

		begin
		select	dt_entrada_unidade
		into STRICT	dt_entrada_unidade_w
		from	atend_paciente_unidade
		where	nr_seq_interno = nr_seq_atepacu_w;
		exception
		when others then
			dt_entrada_unidade_w := clock_timestamp();
		end;	
		
		if (ie_data_proc_adic_sus_w = 'A') then
			dt_procedimento_w	:= clock_timestamp();
		end if;
		
		select	nextval('procedimento_paciente_seq')
		into STRICT	nr_sequencia_w
		;

		insert into Procedimento_paciente(
			nr_sequencia,		nr_atendimento,		dt_entrada_unidade,		cd_procedimento,
			dt_procedimento, 	dt_conta, 		qt_procedimento, 		dt_atualizacao,
			nm_usuario,		cd_convenio, 		cd_categoria, 			vl_procedimento, 
			vl_medico, 		vl_anestesista,		vl_materiais, 			vl_auxiliares, 
			vl_custo_operacional, 	ie_origem_proced,	ie_valor_informado, 		cd_setor_atendimento, 
			nr_seq_atepacu,		nr_seq_proc_acerto,	cd_medico_executor, 		ie_funcao_medico, 
			cd_especialidade, 	nr_seq_proc_princ,	cd_situacao_glosa,		ds_observacao,
			cd_pessoa_fisica)
		values (	nr_sequencia_w, 	nr_atendimento_w, 	dt_entrada_unidade_w, 		cd_procedimento_ref_w,
			dt_procedimento_w, 	dt_procedimento_w,	qt_proc_regra_w,		clock_timestamp(), 
			nm_usuario_p, 		cd_convenio_ref_w, 	cd_categoria_ref_w, 		vl_preco_proc_w, 
			vl_medico_w, 		0,			vl_matmed_w, 			0, 
			vl_sadt_w, 		ie_origem_proc_ref_w, 	ie_valor_informado_w, 		cd_setor_atendimento_w, 
			nr_seq_atepacu_w, 	nr_seq_proc_p,		cd_medico_executor_w,		ie_funcao_medico_w, 
			cd_espec_medico_w, 	nr_seq_proc_p,		21,				Wheb_mensagem_pck.get_Texto(301537, 'NR_SEQ_REGRA_W='|| NR_SEQ_REGRA_W), /*'Regra Ajustec02_w. '|| nr_seq_regra_w,*/
			cd_profissional_w);

			
		if (ie_calcula_amb_sus_w		= 'S') 	and (ie_origem_proc_ref_w not in (2,3,7)) then
			CALL atualiza_preco_proc_amb(nr_sequencia_w,nm_usuario_p);
		end if;
		
		if (ie_proc_qt_zero_sus_w = 'S') then
			begin
			
			update 	Procedimento_paciente
			set	qt_procedimento = 0
			where	nr_sequencia 	= nr_sequencia_w;
			
			end;
		end if;
			
		select	coalesce(max(a.nr_interno_conta),0)
		into STRICT	nr_interno_conta_w
		FROM convenio c, conta_paciente a
LEFT OUTER JOIN conta_paciente_guia b ON (a.nr_interno_conta = b.nr_interno_conta)
WHERE a.nr_atendimento		= nr_atendimento_w and a.cd_convenio_calculo		= c.cd_convenio and a.cd_estabelecimento		= cd_estabelecimento_p and a.cd_convenio_parametro		= cd_convenio_ref_w and a.cd_categoria_parametro	= cd_categoria_ref_w and a.ie_status_acerto		= 1 and coalesce(a.nr_seq_protocolo::text, '') = '' and dt_procedimento_w between a.dt_periodo_inicial and a.dt_periodo_final  order by	
			a.nr_interno_conta;

		if (nr_interno_conta_w	= 0) then
			/* Definir periodo da conta */

			select	coalesce(max(Obter_Valor_Conv_Estab(cd_convenio_ref_w, cd_estabelecimento_p, 'QT_DIA_FIM_CONTA')), 0)
			into STRICT	qt_dia_fim_conta_w
			;

			if (qt_dia_fim_conta_w	= 0) then
				dt_periodo_inicial_w	:= dt_entrada_w;
			else
				select	coalesce(max(dt_periodo_final), dt_entrada_w)
				into STRICT	dt_periodo_inicial_w
				from	conta_paciente
				where	nr_atendimento	= nr_atendimento_w;
			end if;

			begin
			select	Obter_Data_Final_Conta(dt_periodo_inicial_w, dt_alta_w, cd_convenio_ref_w, cd_estabelecimento_p)
			into STRICT	dt_periodo_final_w
			;
			exception
				when others then		
				begin
				dt_periodo_final_w	:= dt_periodo_inicial_w + 365;
				end;
			end;

			if (dt_periodo_final_w 	< clock_timestamp()) then
				dt_periodo_final_w	:= clock_timestamp() + interval '365 days';
			end if;
	
			begin
			select	dt_ref_valida
			into STRICT	dt_referencia_w
			from	convenio
			where	cd_convenio = cd_convenio_ref_w;
			exception
				when others then
				begin
				dt_referencia_w		:= dt_periodo_final_w;
				end;
			end;

			/* Gerar Conta Paciente */

			select	nextval('conta_paciente_seq')
			into STRICT	nr_interno_conta_w
			;

			insert into conta_paciente(
				nr_atendimento,
				dt_acerto_conta,
				ie_status_acerto,
				dt_periodo_inicial,
				dt_periodo_final,
				dt_atualizacao,
				nm_usuario,
				cd_convenio_parametro,
				cd_categoria_parametro,
				dt_mesano_referencia,
				dt_mesano_contabil,
				cd_convenio_calculo,
				cd_categoria_calculo,
				nr_interno_conta,
				cd_estabelecimento,
				nr_protocolo,
				vl_conta,
				vl_desconto,
				nr_seq_pq_protocolo)
			values (nr_atendimento_w,
				clock_timestamp(),
				1,
				dt_periodo_inicial_w,
				dt_periodo_final_w,
				clock_timestamp(),
				nm_usuario_p,
				cd_convenio_ref_w,
				cd_categoria_ref_w,
				dt_referencia_w,
				dt_referencia_w,
				cd_convenio_ref_w,
				cd_categoria_ref_w,
				nr_interno_conta_w,
				cd_estabelecimento_p,
				'0', 0, 0, null);

			/* 
			Retirado por Felipe Martini em 26/09/2008 
			pois gera erro na trigger EXAME_LAB_RESULT_ITEM_UPDATE
			gerar_conta_Paciente_guia(nr_interno_conta_w, 1);
			*/
		end if;

		if (nr_interno_conta_w	> 0) then
			update	procedimento_paciente
			set	nr_interno_conta	= nr_interno_conta_w
			where	nr_sequencia		= nr_sequencia_w;
		end if;
		end;
	end if;
end;
end loop;
close c01;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE sus_gerar_procconta_extra ( cd_estabelecimento_p bigint, cd_convenio_p bigint, cd_categoria_p text, cd_procedimento_p bigint, ie_origem_proced_p bigint, cd_pessoa_fisica_p text, ie_carater_inter_sus_p text, nr_interno_conta_p bigint, cd_setor_atendimento_p bigint, nr_seq_proc_p bigint, dt_vigencia_p timestamp, nm_usuario_p text) FROM PUBLIC;

