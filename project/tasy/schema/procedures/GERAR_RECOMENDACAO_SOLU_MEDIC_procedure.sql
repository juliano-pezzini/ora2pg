-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_recomendacao_solu_medic ( nr_prescricao_p bigint, cd_setor_atendimento_p bigint, nm_usuario_p text, cd_item_p bigint, cd_recomendacao_p bigint, cd_perfil_p bigint, cd_estabelecimento_p bigint, ie_tipo_item_p text, ie_via_aplicacao_p text) AS $body$
DECLARE

					

cont_w			bigint;	
cont_ww			bigint;
nr_seq_topografia_w	bigint;
ie_faose_w		varchar(15);
ie_se_necessario_w	varchar(1);
ie_acm_w		varchar(1);
ie_prescr_rec_sem_lib_w	varchar(1);
ds_erro_w		varchar(2000);	
nr_sequencia_w		bigint;
cd_intervalo_w		varchar(7);
cd_intervalo2_w		varchar(7);
cd_intervalo_ww		varchar(7);
ds_complemento_w	varchar(2000);	
nr_ocorrencia_w		bigint := 0;
ds_horario1_w		varchar(255);
ds_horario2_w		varchar(255);
dt_inicio_prescr_w	timestamp;
dt_primeiro_horario_w	timestamp;
dt_hora_inicio_w	timestamp;
dt_inicio_interv_w	timestamp;
nr_horas_validade_w	integer;
hr_prim_horario_w	varchar(5);
VarPrimHorarioRec_w	varchar(50);
hr_prim_horario_rec_w	varchar(255);	
ie_urgencia_w		varchar(1);
ie_agora_w			varchar(1);	
VarParam_968_w		varchar(10);
cd_convenio_w			atend_categoria_convenio.cd_convenio%type;
nr_seq_agrupamento_w		setor_atendimento.nr_seq_agrupamento%type;

c01 CURSOR FOR
SELECT
	cd_kit
from	kit_mat_recomendacao
where	cd_recomendacao = cd_recomendacao_p
and (coalesce(cd_perfil::text, '') = '' or cd_perfil = cd_perfil_p)
and (coalesce(cd_convenio::text, '') = '' or cd_convenio = cd_convenio_w)
and (coalesce(nr_seq_agrupamento::text, '') = '' or nr_seq_agrupamento = nr_seq_agrupamento_w)
and (coalesce(cd_setor_atendimento::text, '') = '' or cd_setor_atendimento = cd_setor_atendimento_p);

BEGIN

ie_prescr_rec_sem_lib_w := Obter_Param_Usuario(924, 530, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ie_prescr_rec_sem_lib_w);

select	nr_seq_topografia,
	ie_faose,
	ie_se_necessario,
	ie_acm,
	cd_intervalo,
	ie_urgencia
into STRICT	nr_seq_topografia_w,
	ie_faose_w,
	ie_se_necessario_w,
	ie_acm_w,
	cd_intervalo_w,
	ie_urgencia_w
from	rep_recomendacao_solucao
where	((cd_material			= cd_item_p AND ie_tipo_item_p		= 'M') or
	 (cd_dieta			= cd_item_p AND ie_tipo_item_p		= 'D'))
and	cd_recomendacao			= cd_recomendacao_p
and	cd_setor_atendimento 		= cd_setor_atendimento_p
and	coalesce(ie_via_aplicacao,ie_via_aplicacao_p)	= ie_via_aplicacao_p
and	coalesce(ie_forma_lancamento,'L')	= 'P';

VarParam_968_w := obter_Param_Usuario(924, 968, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, VarParam_968_w);

select	count(*)
into STRICT	cont_w
from	rep_recomendacao_solucao;

if (cont_w	> 0) then
			
			select	cd_intervalo,
				ds_complemento
				into STRICT	cd_intervalo_ww,
				ds_complemento_w
			from	tipo_recomendacao
			where	cd_tipo_recomendacao = cd_recomendacao_p;
			
			if (ie_urgencia_w = 'S')	and (cd_intervalo_w IS NOT NULL AND cd_intervalo_w::text <> '')	then
				select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
				into STRICT	ie_agora_w
				from	intervalo_prescricao 
				where	cd_intervalo = cd_intervalo_w
				and	ie_agora = 'S';
				
				if (ie_agora_w = 'S')	then
					cd_intervalo2_w := cd_intervalo_w;
				else
					select	max(cd_intervalo)
					into STRICT	cd_intervalo2_w
					from	intervalo_prescricao
                                        where	ie_agora = 'S'
                                        and	((coalesce(cd_estabelecimento::text, '') = '') or (cd_estabelecimento = cd_estabelecimento_p)) 
                                        and	Obter_se_intervalo(cd_intervalo,'R') = 'S' 
                                        and	ie_situacao = 'A';
				end if;
			elsif (ie_urgencia_w = 'S') then
				select	max(cd_intervalo)
				into STRICT	cd_intervalo2_w
				from	intervalo_prescricao
                                where	ie_agora = 'S'
                                and	((coalesce(cd_estabelecimento::text, '') = '') or (cd_estabelecimento = cd_estabelecimento_p)) 
                                and	Obter_se_intervalo(cd_intervalo,'R') = 'S' 
                                and	ie_situacao = 'A';
			elsif (cd_intervalo_w IS NOT NULL AND cd_intervalo_w::text <> '')	then
				cd_intervalo2_w := cd_intervalo_w;
			else	
				cd_intervalo2_w := cd_intervalo_ww;
			end if;
				
			
			
			select	count(*)
			into STRICT	cont_ww
			from	prescr_recomendacao
			where	cd_recomendacao = cd_recomendacao_p
			and	nr_prescricao 	= nr_prescricao_p;
			
			select	max(to_char(coalesce(dt_primeiro_horario,dt_inicio_prescr),'hh24:mi')),
				max(dt_inicio_prescr),
				max(nr_horas_validade),
				max(dt_primeiro_horario),
				max(obter_convenio_atendimento(nr_atendimento))
			into STRICT	hr_prim_horario_w,
				dt_inicio_prescr_w,
				nr_horas_validade_w,
				dt_primeiro_horario_w,
				cd_convenio_w
			from	prescr_medica
			where	nr_prescricao	= nr_prescricao_p;

			select
				max(nr_seq_agrupamento)
			into STRICT	nr_seq_agrupamento_w
			from	setor_atendimento
			where	cd_setor_atendimento = cd_setor_atendimento_p;
			
			dt_inicio_interv_w	:= to_date(to_char(dt_primeiro_horario_w,'dd/mm/yyyy ') || hr_prim_horario_w, 'dd/mm/yyyy hh24:mi');
			nr_ocorrencia_w		:= 0;
			
			select	max(Obter_primeiro_horario(coalesce(cd_intervalo2_w,cd_intervalo_ww), nr_prescricao_p, 0,null))
			into STRICT	hr_prim_horario_rec_w
			;
			
			begin
			VarPrimHorarioRec_w := obter_Param_Usuario(924, 208, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, VarPrimHorarioRec_w);
			exception when others then
				null;
			end;
			
			if (hr_prim_horario_rec_w IS NOT NULL AND hr_prim_horario_rec_w::text <> '') and (VarPrimHorarioRec_w = 'S') then
				hr_prim_horario_w   := hr_prim_horario_rec_w;
				dt_inicio_interv_w  := to_date(to_char(dt_primeiro_horario_w,'dd/mm/yyyy ') || hr_prim_horario_rec_w, 'dd/mm/yyyy hh24:mi');
			end if;
			
			SELECT * FROM Calcular_Horario_Prescricao(nr_prescricao_p, coalesce(cd_intervalo2_w,cd_intervalo_ww), dt_inicio_prescr_w, dt_inicio_interv_w, nr_horas_validade_w, null, null, null, nr_ocorrencia_w, ds_horario1_w, ds_horario2_w, 'N', null) INTO STRICT nr_ocorrencia_w, ds_horario1_w, ds_horario2_w;
					
			ds_horario1_w := ds_horario1_w || ds_horario2_w;

			select	reordenar_horarios(dt_inicio_interv_w, ds_horario1_w) || ' '
			into STRICT	ds_horario1_w
			;
			
			if (cont_ww = 0) then
			
			select	coalesce(max(nr_sequencia),0) + 1
			into STRICT	nr_sequencia_w
			from 	prescr_recomendacao
			where	nr_prescricao	= nr_prescricao_p;
			
				insert into prescr_recomendacao(
								cd_recomendacao,
								nr_prescricao,
								nr_sequencia,
								ie_destino_rec,
								dt_atualizacao,
								nm_usuario,
								ds_recomendacao,
								cd_intervalo,
								ds_horarios,
								nr_seq_topografia,
								ie_faose,
								ie_se_necessario,
								ie_acm,
								ie_urgencia
								)
					values (
								cd_recomendacao_p,
								nr_prescricao_p,
								nr_sequencia_w,
								'E',
								clock_timestamp(),
								nm_usuario_p,	
								ds_complemento_w,
								coalesce(cd_intervalo2_w,cd_intervalo_ww),
								ds_horario1_w,
								nr_seq_topografia_w,
								ie_faose_w,
								ie_se_necessario_w,
								ie_acm_w,
								ie_urgencia_w);	
				commit;
				
				if (VarParam_968_w = 'S') then
					for c01_w in c01
					loop
						CALL inserir_kit_recomendacao(nm_usuario_p, nr_prescricao_p, nr_sequencia_w, cd_recomendacao_p, c01_w.cd_kit);
					end loop;

					CALL Gerar_Kit_rec_Prescricao(wheb_usuario_pck.get_cd_estabelecimento, nr_prescricao_p, nr_sequencia_w, nm_usuario_p);
				end if;
				
				ds_erro_w := Consistir_prescr_recomendacao(nr_prescricao_p, nr_sequencia_w, cd_estabelecimento_p, cd_perfil_p, nm_usuario_p, ds_erro_w);
			
				if (ie_prescr_rec_sem_lib_w = 'S') then
				    CALL Gerar_prescr_hor_sem_lib(nr_prescricao_p,nr_sequencia_w,cd_perfil_p,'N',nm_usuario_p);
				end if;			
			end if;
		
end if;


end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_recomendacao_solu_medic ( nr_prescricao_p bigint, cd_setor_atendimento_p bigint, nm_usuario_p text, cd_item_p bigint, cd_recomendacao_p bigint, cd_perfil_p bigint, cd_estabelecimento_p bigint, ie_tipo_item_p text, ie_via_aplicacao_p text) FROM PUBLIC;

