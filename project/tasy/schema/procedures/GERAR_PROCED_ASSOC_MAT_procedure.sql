-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_proced_assoc_mat ( nr_prescricao_p bigint, nr_seq_material_p bigint, nm_usuario_p text, ie_lib_medico_p text) AS $body$
DECLARE


cd_proc_adic_w			bigint;
ie_orig_proced_adic_w	bigint;
qt_proc_adic_w			double precision;
nr_seq_exame_w			bigint;
nr_seq_material_w		bigint;
ds_observacao_w			varchar(255);
cd_setor_atendimento_w	integer;
cd_setor_prescr_w		integer;
nr_agrup_acum_w			bigint;
nr_seq_acum_w			bigint;
cd_estabelecimento_w	bigint;
nr_seq_proc_interno_w	bigint;
nr_atendimento_w		bigint;
cont_w					bigint;
nr_horas_validade_w		bigint;	
ie_agrupador_w			bigint;
cd_convenio_w			bigint;
nr_ocorrencia_proced_w	bigint;
ie_considerar_dia_w		varchar(1);
dt_prescricao_w			timestamp;
dt_primeiro_horario_w	timestamp;
cd_material_w			integer;
ie_tipo_atendimento_w	integer;
cd_perfil_w				bigint;
ie_via_aplicacao_w		varchar(5);
cd_material_exame_w		varchar(20);
cd_intervalo_w			varchar(7);
ds_horarios_proced2_w	varchar(2000);
ds_horarios_w			varchar(2000);
nr_ocorrencia_w			double precision;
nr_dia_util_w			bigint;
ie_acm_w				varchar(1);
ie_sn_w					varchar(1);
ie_agora_w				varchar(1);
ie_tipo_item_w			varchar(15);
nr_seq_prot_glic_w		prescr_procedimento.nr_seq_prot_glic%type;
cd_intervalo_ww			prescr_procedimento.cd_intervalo%type;		
ie_acm_ww				prescr_procedimento.ie_acm%type;
ie_sn_ww				prescr_procedimento.ie_se_necessario%type;
ie_agora_ww				prescr_procedimento.ie_urgencia%type;

c01 CURSOR FOR
SELECT	cd_proc_adic,
		ie_orig_proced_adic,
		qt_proc_adic,
		nr_seq_exame,
		nr_seq_material,
		ds_observacao,
		cd_setor_atendimento,
		nr_seq_proc_interno,
		coalesce(ie_considerar_dia,'N'),
		cd_intervalo
from		regra_material_proced a
where	coalesce(cd_material,cd_material_w)	= cd_material_w
and		(((coalesce(cd_setor_prescr::text, '') = '') and (ie_lib_medico_p = 'S')) or (cd_setor_prescr = cd_setor_prescr_w))
and		(((coalesce(nr_dia_util::text, '') = '') and (ie_lib_medico_p = 'S')) or (nr_dia_util <= nr_dia_util_w))		
and		(((coalesce(ie_tipo_atendimento::text, '') = '') and (ie_lib_medico_p = 'S')) or (ie_tipo_atendimento = ie_tipo_atendimento_w))
and		(((coalesce(cd_estab::text, '') = '') and (ie_lib_medico_p = 'S')) or (cd_Estab = cd_estabelecimento_w))
and		(((coalesce(cd_perfil::text, '') = '') and (ie_lib_medico_p = 'S')) or (cd_perfil = cd_perfil_w))
and		(((coalesce(cd_convenio::text, '') = '') and (ie_lib_medico_p = 'S')) or (cd_convenio = cd_convenio_w))
and		coalesce(ie_forma,'R')	= 'R'
and		((coalesce(ie_tipo_item,'A') = 'A') or (ie_tipo_item = ie_tipo_item_w))
and		not exists (	SELECT	1
					from		regra_material_proced_exc x
					where	x.nr_seq_regra	= a.nr_sequencia
					and		x.cd_material	= cd_material_w)
and 		not exists (	select	1
					from		regra_material_proced_exc x
					where	x.nr_seq_regra	= a.nr_sequencia
					and		coalesce(x.ie_impede_lancamento,'N') = 'S'
					and		x.cd_material	in (	select	y.cd_material 
													from		prescr_material y
													where	y.nr_prescricao = nr_prescricao_p))
and		coalesce(ie_via_aplicacao,coalesce(ie_via_aplicacao_w,upper(obter_via_usuario('X')))) = coalesce(ie_via_aplicacao_w,upper(obter_via_usuario('X')))
and		((cd_perfil = cd_perfil_w) or (coalesce(cd_perfil::text, '') = ''))
and		((cd_setor_atendimento = cd_setor_prescr_w) or (coalesce(cd_setor_atendimento::text, '') = ''));


BEGIN

select	count(*)
into STRICT	cont_w
from	regra_material_proced
where	coalesce(ie_forma,'R') = 'R';

if (cont_w > 0) then

	select	max(dt_prescricao),
			max(cd_estabelecimento),
			max(cd_setor_atendimento),
			max(dt_primeiro_horario),
			max(nr_atendimento),
			max(obter_convenio_atendimento(nr_atendimento)),
			max(nr_horas_validade)
	into STRICT		dt_prescricao_w,
			cd_estabelecimento_w,
			cd_setor_prescr_w,
			dt_primeiro_horario_w,
			nr_atendimento_w,
			cd_convenio_w,
			nr_horas_validade_w
	from		prescr_medica
	where	nr_prescricao	= nr_prescricao_p;
	
	cd_perfil_w	:= obter_perfil_ativo;
	
	select	max(ie_tipo_atendimento)
	into STRICT		ie_tipo_atendimento_w
	from		atendimento_paciente
	where	nr_atendimento = nr_atendimento_w;

	select	max(cd_material),
			max(ie_via_aplicacao),
			max(cd_intervalo),
			max(ds_horarios),
			max(nr_ocorrencia),
			coalesce(max(ie_acm),'N'),
			coalesce(max(ie_se_necessario),'N'),
			coalesce(max(ie_urgencia),'N'),
			max(ie_agrupador),
			coalesce(max(nr_dia_util),0)
	into STRICT		cd_material_w,
			ie_via_aplicacao_w,
			cd_intervalo_w,
			ds_horarios_w,
			nr_ocorrencia_w,
			ie_acm_w,
			ie_sn_w,
			ie_agora_w,
			ie_agrupador_w,
			nr_dia_util_w
	from		prescr_material
	where	nr_prescricao	= nr_prescricao_p
	and		nr_sequencia	= nr_seq_material_p;
	
	ie_tipo_item_w	:= 'M';
	if (ie_agrupador_w = 4) then
		ie_tipo_item_w	:= 'S';
	elsif (ie_agrupador_w = 12) then
		ie_tipo_item_w	:= 'SUP';
	elsif (ie_agrupador_w = 8) then
		ie_tipo_item_w	:= 'SNE';
	end if;

	open C01;
	loop
	fetch C01 into	
		cd_proc_adic_w,
		ie_orig_proced_adic_w,
		qt_proc_adic_w,
		nr_seq_exame_w,
		nr_seq_material_w,
		ds_observacao_w,
		cd_setor_atendimento_w,
		nr_seq_proc_interno_w,
		ie_considerar_dia_w,
		cd_intervalo_ww;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		
		nr_seq_prot_glic_w := null;
		
		if (cd_intervalo_ww IS NOT NULL AND cd_intervalo_ww::text <> '') then
		
			Select	coalesce(max(ie_agora),'N'),
					coalesce(max(ie_se_necessario),'N'),
					coalesce(max(ie_acm),'N')
			into STRICT	ie_agora_ww,
					ie_sn_ww,
					ie_acm_ww
			from	intervalo_prescricao
			where	cd_intervalo = cd_intervalo_ww;
		else
			
			cd_intervalo_ww := cd_intervalo_w;
			ie_agora_ww 	:= ie_agora_w;
			ie_sn_ww 		:= ie_sn_w;
			ie_acm_ww 		:= ie_acm_w;
		end if;
		
		select	coalesce(max(nr_sequencia),0),
				coalesce(max(nr_agrupamento),0)	
		into STRICT		nr_seq_acum_w,
				nr_agrup_acum_w
		from		prescr_procedimento
		where	nr_prescricao		= nr_prescricao_p;
		
		select	max(cd_material_exame)
		into STRICT		cd_material_exame_w
		from		material_exame_lab
		where	nr_sequencia	= nr_seq_material_w;
		
		if (nr_seq_proc_interno_w IS NOT NULL AND nr_seq_proc_interno_w::text <> '') then
			SELECT * FROM Obter_Proc_Tab_Interno(nr_seq_proc_interno_w, nr_prescricao_p, nr_atendimento_w, 0, cd_proc_adic_w, ie_orig_proced_adic_w, null, null) INTO STRICT cd_proc_adic_w, ie_orig_proced_adic_w;
		end if;
		
		if (cd_intervalo_ww IS NOT NULL AND cd_intervalo_ww::text <> '') then
			SELECT * FROM calcular_horario_prescricao(nr_prescricao_p, cd_intervalo_ww, coalesce(dt_primeiro_horario_w,dt_prescricao_w), coalesce(Obter_data_prev_exec(dt_prescricao_w,clock_timestamp(),Obter_setor_Atend_proc(cd_estabelecimento_w, cd_proc_adic_w,ie_orig_proced_adic_w, null, cd_setor_atendimento_w, nm_usuario_p,null,nr_atendimento_w), nr_prescricao_p, 'A'),dt_prescricao_w), nr_horas_validade_w, cd_proc_adic_w, 0, 0, nr_ocorrencia_proced_w, ds_horarios_w, ds_horarios_proced2_w, 'N', null, null, cd_proc_adic_w, ie_orig_proced_adic_w, null) INTO STRICT nr_ocorrencia_proced_w, ds_horarios_w, ds_horarios_proced2_w;
		end if;
		
		select	count(*)
		into STRICT		cont_w
		from		prescr_procedimento
		where	nr_prescricao	= nr_prescricao_p
		and		cd_procedimento	= cd_proc_adic_w
		and		ie_origem_proced = ie_orig_proced_adic_w
		and		cd_intervalo	= cd_intervalo_ww;
		
		if (coalesce(nr_seq_proc_interno_w,0) <> 0) and (coalesce(obter_ctrl_glic_proc(nr_seq_proc_interno_w),'XPTO') = 'CCG') then
			
			select 	max(nr_seq_prot_glic)
			into STRICT	nr_seq_prot_glic_w
			from 	proc_interno
			where 	nr_sequencia = nr_seq_proc_interno_w;
		end if;
		
		if (ie_considerar_dia_w = 'S') and (cont_w = 0) then
			select	count(*)
			into STRICT		cont_w
			from		prescr_procedimento a,
					prescr_medica		b
			where	a.nr_prescricao	= b.nr_prescricao
			and		a.cd_procedimento	= cd_proc_adic_w
			and		a.ie_origem_proced = ie_orig_proced_adic_w
			and		a.cd_intervalo	= cd_intervalo_ww
			and		ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(b.dt_prescricao) = ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(clock_timestamp())
			and		b.nr_atendimento = nr_atendimento_w;			
		end if;
		
		if (cont_w = 0) then
			Insert	into Prescr_Procedimento(
				nr_prescricao,
				nr_sequencia,
				cd_procedimento,
				ie_origem_proced,
				qt_procedimento,
				dt_atualizacao,
				nm_usuario,
				cd_motivo_baixa,
				cd_intervalo,
				ie_urgencia,
				cd_setor_atendimento,
				ds_dado_clinico,
				dt_prev_execucao,
				ie_suspenso,
				cd_material_exame,
				nr_seq_exame,
				ie_amostra,
				ie_executar_leito,
				nr_agrupamento,
				ie_se_necessario,
				ie_acm,
				ds_horarios,
				nr_ocorrencia,
				nr_seq_interno,
				ie_avisar_result,
				ie_cobra_paciente,
				cd_medico_exec,
				ie_origem_inf,
				nr_seq_proc_interno,
				ds_observacao,
				nr_seq_prot_glic)			
			values (
				nr_prescricao_p,
				nr_seq_acum_w + 1,
				cd_proc_adic_w,
				ie_orig_proced_adic_w,
				qt_proc_adic_w,
				clock_timestamp(),
				nm_usuario_p,
				0,
				cd_intervalo_ww,
				coalesce(ie_agora_ww,'N'),
				cd_setor_atendimento_w,
				null,
				Obter_data_prev_exec(dt_prescricao_w,clock_timestamp(),Obter_setor_Atend_proc(cd_estabelecimento_w, cd_proc_adic_w,ie_orig_proced_adic_w, null, cd_setor_atendimento_w, nm_usuario_p,null,nr_atendimento_w), nr_prescricao_p, 'A'),
				'N',
				cd_material_exame_w,
				nr_seq_exame_w,
				'N',
				'N',
				nr_agrup_acum_w + 1,
				coalesce(ie_sn_ww,'N'),
				coalesce(ie_acm_ww,'N'),
				ds_horarios_w,
				nr_ocorrencia_w,
				nextval('prescr_procedimento_seq'),
				'N',
				'S',
				null,
				'S',
				nr_seq_proc_interno_w,
				ds_observacao_w,
				nr_seq_prot_glic_w);
				
			CALL gerar_kit_procedimento(cd_estabelecimento_w,nr_prescricao_p,nr_seq_acum_w + 1,nm_usuario_p);
			
			if (nr_seq_prot_glic_w IS NOT NULL AND nr_seq_prot_glic_w::text <> '') then

				CALL Gerar_Med_Mat_Assoc_Glic(nr_prescricao_p, nr_seq_acum_w + 1, nr_seq_prot_glic_w);
				CALL gerar_prescr_proc_glic(nr_prescricao_p, nr_seq_acum_w + 1, nr_seq_prot_glic_w, nm_usuario_p);

			end if;
			
		end if;
		
	end loop;
	close C01;

	if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;
	
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_proced_assoc_mat ( nr_prescricao_p bigint, nr_seq_material_p bigint, nm_usuario_p text, ie_lib_medico_p text) FROM PUBLIC;

