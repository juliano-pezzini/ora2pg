-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_material_repasse ( nr_sequencia_p bigint, cd_estabelecimento_p bigint, cd_medico_atend_p text, nm_usuario_p text, cd_edicao_amb_p bigint, cd_convenio_p bigint, ie_tipo_atendimento_p bigint, cd_regra_p bigint, nr_seq_criterio_p bigint) AS $body$
DECLARE


/*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:   Gerar repasses de materiais conforme os materiais lancados na conta paciente e de acordo com os criterios de materiais.
----------------------------------------------------------------------------------------------------------------------------------------------------

Locais de chamada direta:
[X]  Objetos do dicionario [] Tasy (Delphi/Java) [  ] Portal [  ] Relatorios [ ] Outros:
 ----------------------------------------------------------------------------------------------------------------------------------------------------

Pontos de atencao:
 - Rotina executada atraves dos objetos GERAR_CONTA_PACIENTE_REPASSE,  GERAR_PROTOCOLO_CONV_REPASSE,  GERAR_PROTOCOLO_LOTE_REPASSE,
 REATUALIZAR_MAT_REP_RETORNO,  RECALCULAR_CONTA_REPASSE,  RECALCULAR_REPASSE_PERIODO
-------------------------------------------------------------------------------------------------------------------

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/cd_tabela_preco_w    smallint;
cd_convenio_w    integer;
cd_categoria_w    varchar(255);
dt_conta_w    timestamp;
cd_material_w    integer;
qt_material_w    material_atend_paciente.qt_material%type;
cd_regra_w    integer := 0;
tx_repasse_w    double precision;
vl_repasse_w    double precision;
vl_repassar_w    double precision;
vl_repasse_Terc_w    double precision;
vl_repasse_Terc_ww  double precision;
vl_material_w    double precision;
vl_tabela_original_w  double precision;
vl_tabela_w    double precision;
nr_seq_proc_princ_w  bigint;
cd_medico_prescr_w  varchar(10);
cd_medico_cir_w    varchar(10);
cd_medico_w    varchar(10);
cd_medico_rep_w    varchar(10);
cd_medico_ww    varchar(10);
nr_seq_terceiro_w    bigint;
nr_cirurgia_w    bigint;
nr_sequencia_w    bigint;
nr_seq_repasse_w    bigint;
nr_prescricao_w    bigint;
ie_forma_calculo_w    mat_criterio_repasse.ie_forma_calculo%type;
nr_seq_proc_pacote_w  bigint;
cd_tipo_acomodacao_w  smallint;
cd_setor_atendimento_w  integer;
ie_forma_pagto_w    varchar(01);
dt_ult_vigencia_w    timestamp;
ie_origem_preco_w    varchar(01);
ie_pacote_w    varchar(01);
ie_status_w    varchar(01);
nr_seq_trans_fin_w    bigint;
ie_tipo_convenio_w    bigint;
vl_custo_mat_repasse_w  double precision;
cd_medico_atendimento_w  varchar(10);
cd_medico_resp_w    varchar(10);
cd_pessoa_indic_w    varchar(10);
cd_cgc_prestador_w  varchar(20);
ie_carater_inter_sus_w  varchar(2);
cd_cgc_fornec_w    varchar(14);
cd_municipio_ibge_w  varchar(6);
ie_cancelamento_conta_w  varchar(1);
ie_atend_retorno_w    varchar(100);
cd_medico_prescritor_w  varchar(100);
NR_SEQ_TRANS_FIN_REP_MAIOR_w  bigint;
nr_seq_mat_crit_repasse_w  bigint;
ie_repasse_calc_w    varchar(255);
nr_seq_ret_glosa_w    bigint;
cd_tab_preco_calc_w  bigint;
cd_plano_w    varchar(100);
nr_atendimento_w    bigint;
cd_convenio_plano_w  integer;
cont_w      bigint;
cd_categoria_plano_w  varchar(255);
ie_perc_pacote_w    varchar(100);
ie_estornar_rep_desdob_w  varchar(1);
ie_repasse_audit_w  varchar(1);
ie_responsavel_credito_w  varchar(5);
nr_seq_bras_preco_w    bigint;
nr_seq_mat_bras_w    bigint;
nr_seq_conv_bras_w    bigint;
cd_medico_referido_w    varchar(100);
nr_seq_conv_simpro_w    bigint;
nr_seq_mat_simpro_w    bigint;
nr_seq_simpro_preco_w    bigint;
nr_seq_ajuste_mat_w    bigint;
nr_seq_protocolo_w    bigint;
nr_interno_conta_w    bigint;
ie_status_protocolo_w    bigint;
dt_mesano_referencia_w    timestamp;
dt_liberacao_w      timestamp;
ie_auditoria_w      material_atend_paciente.ie_auditoria%type;
ie_auditar_repasse_w    parametro_repasse.ie_auditar_repasse%type;
ie_repasse_zerado_w    parametro_faturamento.ie_repasse_zerado%type;

vl_preco_brasindice_w  double precision;
vl_preco_simpro_w  double precision;
dt_vigencia_simpro_w  timestamp;
nr_seq_marca_w     material_lote_fornec.nr_seq_marca%type;
nr_seq_lote_fornec_w  material_atend_paciente.nr_seq_lote_fornec%type;
vl_custo_material_w  preco_material.vl_preco_venda%type;
ie_libera_repasse_estornado_w  parametro_repasse.ie_libera_repasse_estornado%type;

vl_rep_lib_w      material_repasse.vl_liberado%type;
ie_status_rep_w      material_repasse.ie_status%type;

ie_tipo_terceiro_forma_w  regra_repasse_terc_item.ie_tipo_terceiro%type;
ie_tipo_terceiro_w    varchar(1);
ie_gerar_repasse_w    varchar(1);
vl_unitario_w      material_atend_paciente.vl_unitario%type;
nr_seq_classif_atend_w    atendimento_paciente.nr_seq_classificacao%type;
cd_material_exec_w    material_atend_paciente.cd_material_exec%type;
qt_material_custo_w    double precision;
qt_custo_calc_mat_w    double precision;
vl_original_repasse_w    procedimento_repasse.vl_original_repasse%type;
qt_pont_terc_w      bigint;
qt_pont_crit_w      bigint;
vl_arepassar_w      double precision;
pr_desconto_val_fatur_w    mat_criterio_repasse.pr_desconto_val_fatur%type;
cd_material_estoque_w    material.cd_material%type;
cd_pessoa_tratamento_w    pessoa_fisica.cd_pessoa_fisica%type;
nm_usuario_original_w    material_atend_paciente.nm_usuario_original%type;
nr_seq_material_w    material_atend_paciente.nr_sequencia%type;
ds_log_repasse_w    varchar(4000) := '';
ie_gravar_log_w      varchar(1) := 'N';
ie_forma_pagto_terc_w    varchar(100);
vl_rateio_w        conta_pac_ded_conv_item.vl_rateio%type;
ie_gravar_log_mat_w    parametro_repasse.ie_gravar_log_mat%type;
ie_tipo_criterio_w     mat_criterio_repasse.pr_desconto_val_fatur%type;
cd_protocolo_quimio_w    paciente_setor.cd_protocolo%type;
nr_seq_med_quimio_w    paciente_setor.nr_seq_medicacao%type;
cd_tipo_prot_quimio_w    protocolo.cd_tipo_protocolo%type;
ie_clinica_w      atendimento_paciente.ie_clinica%type;
nr_ciclo_w      paciente_atendimento.nr_ciclo%type;
ds_tipo_conv_w varchar(255);
ie_tipo_conv_w convenio.ie_tipo_convenio%type;
ds_clinica_w varchar(255);
cd_unidade_basica_w atend_paciente_unidade.cd_unidade_basica%type;
nm_medico_referido_w varchar(255);
ds_convenio_w varchar(90);
ds_material_w material.ds_material%type;
cd_pessoa_fisica_w pessoa_fisica.cd_pessoa_fisica%type;
nr_atendimento_mae_w atendimento_paciente.nr_atendimento_mae%type;
dt_alta_w atendimento_paciente.dt_alta%type;
nm_pessoa_fisica_w varchar(255);
ds_status_w varchar(50);
ds_transacao_w varchar(100);
nm_medico_w varchar(100);
ds_tipo_atendimento_w varchar(80);
ie_tipo_atendimento_w atendimento_paciente.ie_tipo_atendimento%type;
nr_seq_protocolo_ww conta_paciente.nr_seq_protocolo%type;
dt_entrega_convenio_w varchar(10);
ds_classif_atua_medico_w varchar(60);
dt_entrada_w atendimento_paciente.dt_entrada%type;
ds_centro_custo_w    centro_custo.ds_centro_custo%type;
cd_centro_custo_w    centro_custo.cd_centro_custo%type;
ds_categoria_w     categoria_convenio.ds_categoria%type;
co_conversao_unidade_w constant varchar(2) := 'EC';

--Obtem as formas de repasse cadastradas para a regra que foi buscada
c_forma_repasse CURSOR(  cd_regra_pc  regra_repasse_terceiro.cd_regra%type,
      dt_conta_pc  timestamp) FOR
  SELECT   ie_beneficiario,
    tx_repasse,
    nr_seq_terceiro,
    cd_conta_contabil,
    coalesce(ie_perc_saldo,'S') ie_perc_saldo,
    coalesce(ie_gravacao_medico,'S') ie_gravacao_medico,
    cd_pessoa_fisica,
    nr_seq_item,
    vl_repasse,
    ie_tipo_terceiro,
    coalesce(ie_gera_item_zerado,'N') ie_gera_item_zerado,
    coalesce(ie_recebe_regra_pontuacao,'N') ie_recebe_regra_pontuacao,
    coalesce(ie_valida_terceiro_forma,'N') ie_valida_terceiro_forma
  from  regra_repasse_terc_item
  where  cd_regra = cd_regra_pc
  and  dt_conta_pc between coalesce(dt_inicio_vigencia,dt_conta_pc) and ESTABLISHMENT_TIMEZONE_UTILS.endOfDay(coalesce(dt_fim_vigencia,dt_conta_pc))
  order  by nr_seq_item;

--Obtem o preco de venda do material de acordo com a tabela de preco
C03 CURSOR FOR
  SELECT  vl_preco_venda
  from   preco_material
  where  cd_estabelecimento    = cd_estabelecimento_p
  and  cd_tab_preco_mat  = cd_tabela_preco_w
  and   cd_material           = cd_material_w
  and  ie_situacao         = 'A'
  and   dt_inicio_vigencia    <= dt_conta_w
  order by
    dt_inicio_vigencia desc,
    vl_preco_venda desc;

--Obtem os repasses que deverao ser estornados.
C05 CURSOR FOR
  SELECT  nr_sequencia
  from  Material_repasse a
  where  nr_seq_material  = nr_sequencia_p
  and  ((coalesce(ie_estornar_rep_desdob_w,'N') = 'N' and coalesce(a.nr_seq_origem::text, '') = '') or (coalesce(ie_estornar_rep_desdob_w,'N') = 'S' and coalesce(a.ie_estorno,'N') = 'N'))
  and  not exists (SELECT  1
    from   material_Repasse x
    where (coalesce(ie_estornar_rep_desdob_w,'N') = 'N' or coalesce(x.ie_estorno,'N') = 'S')
    and  x.nr_seq_origem  = a.nr_sequencia);

BEGIN

select  coalesce(max(ie_repasse_item_audit),'S'),
  coalesce(max(ie_auditar_repasse),'N'),
  coalesce(max(ie_libera_repasse_estornado),'N'),
  coalesce(max(ie_gravar_log_mat),'N')
into STRICT  ie_repasse_audit_w,
  ie_auditar_repasse_w,
  ie_libera_repasse_estornado_w,
  ie_gravar_log_mat_w
from  parametro_repasse
where  cd_estabelecimento  = cd_estabelecimento_p;

select  coalesce(max(ie_repasse_zerado), 'N')
into STRICT  ie_repasse_zerado_w
from  Parametro_faturamento
where  cd_estabelecimento  = cd_estabelecimento_p;

--Obtem os dados do material, da conta, do antendimento.
begin
select   coalesce(a.dt_conta, a.dt_atendimento),
  a.cd_material,
  a.nr_prescricao,
  a.nr_cirurgia,
  a.nr_seq_proc_pacote,
  a.vl_material,
  a.cd_setor_atendimento,
  CASE WHEN coalesce(a.nr_seq_proc_pacote::text, '') = '' THEN 'F'  ELSE 'I' END ,
  c.cd_medico_atendimento,
  c.cd_medico_resp,
  c.cd_pessoa_indic,
  coalesce(a.cd_cgc_prestador, 'X'),
  c.ie_carater_inter_sus,
  coalesce(a.cd_cgc_fornecedor, 'X'),
  e.cd_medico,
  ie_cancelamento,
  CASE WHEN coalesce(c.nr_atend_original::text, '') = '' THEN  'N'  ELSE 'S' END  ie_atend_retorno,
  a.cd_medico_prescritor,
  d.nr_seq_ret_glosa,
  coalesce(a.vl_custo_mat_repasse,0),
  a.qt_material,
  a.nr_atendimento,
  a.cd_convenio,
  coalesce(a.cd_categoria, d.cd_categoria_parametro),
  coalesce(a.vl_tabela_original,0),
  a.nm_usuario_original,
  a.ie_responsavel_credito,
  c.cd_medico_referido,
  a.ie_auditoria,
  d.nr_interno_conta,
  a.vl_unitario,
  a.cd_material_exec,
  a.nr_seq_proc_princ,
  c.nr_seq_classificacao,
  a.nr_sequencia,
  c.ie_clinica,
  g.ie_tipo_convenio,
  h.cd_unidade_basica,
  m.ds_material,
  e.cd_pessoa_fisica,
  c.nr_atendimento_mae,
  c.dt_alta,
  c.ie_tipo_atendimento,
  d.nr_seq_protocolo,
  c.dt_entrada,
  s.cd_centro_custo
into STRICT  dt_conta_w,
  cd_material_w,
  nr_prescricao_w,
  nr_cirurgia_w,
  nr_seq_proc_pacote_w,
  vl_material_w,
  cd_setor_atendimento_w,
  ie_pacote_w,
  cd_medico_atendimento_w,
  cd_medico_resp_w,
  cd_pessoa_indic_w,
  cd_cgc_prestador_w,
  ie_carater_inter_sus_w,
  cd_cgc_fornec_w,
  cd_pessoa_tratamento_w,
  ie_cancelamento_conta_w,
  ie_atend_retorno_w,
  cd_medico_prescritor_w,
  nr_seq_ret_glosa_w,
  vl_custo_mat_repasse_w,
  qt_material_w,
  nr_atendimento_w,
  cd_convenio_plano_w,
  cd_categoria_plano_w,
  vl_tabela_original_w,
  nm_usuario_original_w,
  ie_responsavel_credito_w,
  cd_medico_referido_w,
  ie_auditoria_w,
  nr_interno_conta_w,
  vl_unitario_w,
  cd_material_exec_w,
  nr_seq_proc_princ_w,
  nr_seq_classif_atend_w,
  nr_seq_material_w,
  ie_clinica_w,
  ie_tipo_conv_w,
  cd_unidade_basica_w,
  ds_material_w,
  cd_pessoa_fisica_w,
  nr_atendimento_mae_w,
  dt_alta_w,
  ie_tipo_atendimento_w,
  nr_seq_protocolo_ww,
  dt_entrada_w,
  cd_centro_custo_w
from  pessoa_fisica e,
  conta_paciente  d,
  atendimento_paciente c,
   material_atend_paciente a,
   convenio g,
   atend_paciente_unidade h,
   material m,
   setor_atendimento s
where   a.nr_sequencia       = nr_sequencia_p
and e.cd_pessoa_fisica = c.cd_pessoa_fisica
and  a.nr_interno_conta  = d.nr_interno_conta
and  c.nr_atendimento  = a.nr_atendimento
and  a.cd_convenio = g.cd_convenio
and  a.nr_seq_atepacu = h.nr_seq_interno
and  a.cd_material = m.cd_material
and  s.cd_setor_atendimento  = a.cd_setor_atendimento
and  ((ie_repasse_audit_w = 'S') or (ie_repasse_audit_w = 'N' and (a.ie_auditoria <> 'S' or coalesce(a.ie_auditoria::text, '') = '') and not exists (SELECT 1 from auditoria_matpaci x where x.nr_seq_matpaci = a.nr_sequencia)))

union

SELECT   coalesce(a.dt_conta, a.dt_atendimento),
  a.cd_material,
  a.nr_prescricao,
  a.nr_cirurgia,
  a.nr_seq_proc_pacote,
  dividir_sem_round((a.vl_material * OBTER_VALOR_ITEM_AUDIT(a.nr_interno_conta,null,a.nr_sequencia,'Q')),a.qt_material) vl_material,
  a.cd_setor_atendimento,
  CASE WHEN coalesce(a.nr_seq_proc_pacote::text, '') = '' THEN 'F'  ELSE 'I' END ,
  c.cd_medico_atendimento,
  c.cd_medico_resp,
  c.cd_pessoa_indic,
  coalesce(a.cd_cgc_prestador, 'X'),
  c.ie_carater_inter_sus,
  coalesce(a.cd_cgc_fornecedor, 'X'),
  e.cd_medico,
  ie_cancelamento,
  CASE WHEN coalesce(c.nr_atend_original::text, '') = '' THEN  'N'  ELSE 'S' END  ie_atend_retorno,
  a.cd_medico_prescritor,
  d.nr_seq_ret_glosa,
  dividir_sem_round((coalesce(a.vl_custo_mat_repasse,0) * OBTER_VALOR_ITEM_AUDIT(a.nr_interno_conta,null,a.nr_sequencia,'Q')),a.qt_material) vl_custo_mat_repasse,
  a.qt_material,
  a.nr_atendimento,
  a.cd_convenio,
  coalesce(a.cd_categoria, d.cd_categoria_parametro),
  dividir_sem_round((coalesce(a.vl_tabela_original,0) * OBTER_VALOR_ITEM_AUDIT(a.nr_interno_conta,null,a.nr_sequencia,'Q')),a.qt_material) vl_tabela_original,
  a.nm_usuario_original,
  a.ie_responsavel_credito,
  c.cd_medico_referido,
  a.ie_auditoria,
  d.nr_interno_conta,
  a.vl_unitario,
  a.cd_material_exec,
  a.nr_seq_proc_princ,
  c.nr_seq_classificacao,
  a.nr_sequencia,
  c.ie_clinica,
  g.ie_tipo_convenio,
  h.cd_unidade_basica,
  m.ds_material,
  e.cd_pessoa_fisica,
  c.nr_atendimento_mae,
  c.dt_alta,
  c.ie_tipo_atendimento,
  d.nr_seq_protocolo,
  c.dt_entrada,
  s.cd_centro_custo
from  pessoa_fisica e,
  conta_paciente  d,
  atendimento_paciente c,
   material_atend_paciente a,
   convenio g,
   atend_paciente_unidade h,
   material m,
   setor_atendimento s
where   a.nr_sequencia       = nr_sequencia_p
and e.cd_pessoa_fisica = c.cd_pessoa_fisica
and  a.nr_interno_conta  = d.nr_interno_conta
and  c.nr_atendimento  = a.nr_atendimento
and  a.cd_convenio = g.cd_convenio
and  a.nr_seq_atepacu = h.nr_seq_interno
and  a.cd_material = m.cd_material
and  s.cd_setor_atendimento  = a.cd_setor_atendimento 
and  (ie_repasse_audit_w = 'N' and ((a.ie_auditoria = 'S' and coalesce(a.nr_seq_orig_audit::text, '') = '') or exists (select 1 from auditoria_matpaci x where x.nr_seq_matpaci = a.nr_sequencia)))
and  coalesce(OBTER_VALOR_ITEM_AUDIT(a.nr_interno_conta,null,a.nr_sequencia,'Q'),0) > 0;
exception
when no_data_found then
  goto final;
end;

begin
  ds_categoria_w := OBTER_CATEGORIA_CONVENIO(cd_convenio_plano_w,Obter_Categoria_Atendimento(nr_atendimento_w));
exception
  when others then
    ds_categoria_w := '';
end;

begin
  ds_centro_custo_w := obter_desc_centro_custo(cd_centro_custo_w);
exception
  when others then
    ds_centro_custo_w := '';
end;

begin
  ds_tipo_conv_w := substr(obter_valor_dominio(11,ie_tipo_conv_w),1,255);
exception
 when others then
   ds_tipo_conv_w := '';
end;

begin
  ds_clinica_w := substr(obter_valor_dominio(17, ie_clinica_w),1,254);
exception
 when others then
   ds_clinica_w := '';
end;

begin
  nm_medico_referido_w := substr(obter_nome_pf_pj(cd_medico_referido_w,null),1,255);
exception
 when others then
   nm_medico_referido_w := '';
end;

begin
  ds_convenio_w := substr(obter_nome_convenio(cd_convenio_plano_w),1,80);
exception
 when others then
   ds_convenio_w := '';
end;

begin
  nm_pessoa_fisica_w := substr(OBTER_PACIENE_RN(nr_atendimento_w, null, nr_seq_material_w, nr_atendimento_mae_w, dt_alta_w, cd_pessoa_fisica_w),1,255);
exception
 when others then
   nm_pessoa_fisica_w := '';
end;

begin
  ds_tipo_atendimento_w := substr(obter_nome_tipo_atend(ie_tipo_atendimento_w),1,80);
exception
 when others then
   ds_tipo_atendimento_w := '';
end;

begin
  dt_entrega_convenio_w := to_char(to_date(obter_dados_protocolo(nr_seq_protocolo_ww, 'DEN')),'dd/mm/yyyy');
exception
 when others then
   dt_entrega_convenio_w := '';
end;

begin
  ds_classif_atua_medico_w := substr(obter_classif_atuacao_medico(nr_atendimento_w),1,60);
exception
 when others then
   ds_classif_atua_medico_w := '';
end;

if (coalesce(vl_material_w::text, '') = '') then
  CALL wheb_mensagem_pck.exibir_mensagem_abort(wheb_mensagem_pck.get_texto(1044083, 'NR_ATENDIMENTO_W='||nr_atendimento_w||';NR_INTERNO_CONTA_W='||nr_interno_conta_w||';NR_SEQUENCIA_P='||nr_sequencia_p||';'));
end if;

select  count(*)
into STRICT  cont_w
from  material
where  cd_material  = cd_material_w;

if (cont_w > 1) then
  /* O material cd_material_w esta duplicado na base de dados!
  Existem cont_w materias com este codigo cadastrado.
  Nao e possivel gerar o repasse! */
  CALL wheb_mensagem_pck.exibir_mensagem_abort(191621,  'CD_MATERIAL_W=' || cd_material_w ||
              ';CONT_W=' || cont_w);
end if;

delete from material_repasse a
where  nr_seq_material = nr_sequencia_p
and  coalesce(nr_lote_contabil,0) = 0
and  coalesce(nr_seq_item_retorno::text, '') = ''
and  coalesce(nr_seq_origem::text, '') = ''
and  ie_status    in ('A','S')
and  not exists (SELECT 1
  from repasse_terceiro b
  where coalesce(a.nr_repasse_terceiro,0)  = b.nr_repasse_terceiro
    and (a.nr_repasse_terceiro IS NOT NULL AND a.nr_repasse_terceiro::text <> ''))
  and  not exists (select 1
  from Material_Repasse c
  where c.nr_seq_origem  = a.nr_sequencia);

OPEN C05;
LOOP
FETCH C05 into
  nr_sequencia_w;
EXIT WHEN NOT FOUND; /* apply on c05 */

  select  ie_status,
    vl_repasse
  into STRICT  ie_status_rep_w,
    vl_rep_lib_w
  from  material_repasse
  where  nr_sequencia  = nr_sequencia_w;

  if (coalesce(ie_libera_repasse_estornado_w,'N') = 'S') and (ie_status_rep_w = 'A') then
    update  material_repasse
    set  nm_usuario_lib = nm_usuario_p,
      dt_liberacao = clock_timestamp(),
      vl_liberado = vl_rep_lib_w,
      ie_status = 'S'
    where  nr_sequencia  = nr_sequencia_w;
  end if;

  select  nextval('material_repasse_seq')
  into STRICT  nr_seq_repasse_w
;

  insert into Material_repasse(
    nr_sequencia,
    nr_seq_Material,
    vl_repasse,
    dt_atualizacao,
    nm_usuario,
    nr_seq_terceiro,
    nr_lote_contabil,
    nr_repasse_terceiro,
    cd_conta_contabil,
    nr_seq_trans_fin,
    vl_liberado,
    nr_seq_item_retorno,
    ie_status,
    nr_seq_origem,
    cd_regra,
    cd_medico,
    NR_SEQ_TRANS_FIN_REP_MAIOR,
    ie_estorno,
    ie_repasse_calc,
    nr_seq_motivo_des,
    vl_original_repasse,
    cd_protocolo,
    ds_tipo_conv,
    ds_clinica,
    cd_unidade_basica,
    nm_medico_referido,
    ds_convenio,
    cd_material,
    ds_material,
    nr_atendimento,
    nr_atendimento_mae,
    cd_pessoa_fisica,
    nm_pessoa_fisica,
    ds_status,
    ds_transacao,
    nm_medico,
    ds_tipo_atendimento,
    ie_tipo_atendimento,
    dt_entrega_convenio,
    ds_classif_atua_medico,
    dt_entrada,
    ds_centro_custo,
    ds_categoria,
    ie_tipo_convenio,
    cd_setor_atendimento)
  SELECT  nr_seq_repasse_w,
    nr_seq_material,
    vl_repasse  * -1,
    clock_timestamp(),
    nm_usuario_p,
    nr_seq_terceiro,
    0,
    null,
    cd_conta_contabil,
    nr_seq_trans_fin,
    CASE WHEN vl_liberado=0 THEN  CASE WHEN ie_status='G' THEN 0  ELSE vl_repasse END   ELSE vl_liberado END   * -1,
    nr_seq_item_retorno,
    'E',
    nr_sequencia_w,
    cd_regra,
    cd_medico,
    NR_SEQ_TRANS_FIN_REP_MAIOR,
    'S',
    ie_repasse_calc_w,
    nr_seq_motivo_des,
    vl_original_repasse,
    cd_protocolo,
    ds_tipo_conv,
    ds_clinica,
    cd_unidade_basica,
    nm_medico_referido,
    ds_convenio,
    cd_material,
    ds_material,
    nr_atendimento,
    nr_atendimento_mae,
    cd_pessoa_fisica,
    nm_pessoa_fisica,
    substr(obter_valor_dominio(1129, 'E'),1,50),
    ds_transacao,
    nm_medico,
    ds_tipo_atendimento,
    ie_tipo_atendimento,
    dt_entrega_convenio,
    ds_classif_atua_medico,
    dt_entrada,
    ds_centro_custo,
    ds_categoria,
    ie_tipo_convenio,
    cd_setor_atendimento
  from  material_repasse
  where  nr_sequencia  = nr_sequencia_w;

  /* ahoffelder - OS 321335 - 10/06/2011 */

  update  material_repasse
  set  dt_atualizacao    = clock_timestamp(),
    nm_usuario    = nm_usuario_p,
    ie_estorno    = 'S'
  where  nr_sequencia    = nr_sequencia_w;

END LOOP;
CLOSE C05;

qt_material_custo_w  := Obter_conversao_Material(cd_material_w,co_conversao_unidade_w);
qt_custo_calc_mat_w  := dividir_sem_round(qt_material_w,qt_material_custo_w);
cd_plano_w    := obter_dado_atend_cat_conv(nr_atendimento_w, dt_conta_w, cd_convenio_plano_w, cd_categoria_plano_w, 'P');

select  max(ie_tipo_convenio)
into STRICT  ie_tipo_convenio_w
from  convenio
where  cd_convenio    = cd_convenio_p;

cd_regra_w    := 0;
vl_repasse_w    := 0;

/* Ricardo 07/10/2004 - Alterei a rotina abaixo, nvl no medico */

if (nr_prescricao_w IS NOT NULL AND nr_prescricao_w::text <> '') then
  select  coalesce(max(cd_medico),'0')
  into STRICT  cd_medico_prescr_w
  from  prescr_medica
  where  nr_prescricao  = nr_prescricao_w;
end if;

if (cd_medico_prescr_w = '0') then
  cd_medico_prescr_w  := null;
end if;

cd_medico_prescr_w  := coalesce(cd_medico_prescritor_w, cd_medico_prescr_w);

if (nr_cirurgia_w IS NOT NULL AND nr_cirurgia_w::text <> '') then
  select  cd_medico_cirurgiao
  into STRICT  cd_medico_Cir_w
  from  Cirurgia
  where  nr_cirurgia  = nr_cirurgia_w;
end if;

cd_medico_w  := coalesce(cd_medico_cir_w, cd_medico_prescr_w);
cd_medico_w  := coalesce(cd_medico_w, cd_medico_atend_p);
cd_medico_ww  := cd_medico_w;

cd_tab_preco_calc_w  := null;

select  max(a.cd_material_estoque)
into STRICT  cd_material_estoque_w
from  material_estab b,
  material a
where  a.cd_material = b.cd_material
and  b.cd_material_conta = cd_material_w
and  b.cd_estabelecimento = cd_estabelecimento_p;

if (nr_prescricao_w IS NOT NULL AND nr_prescricao_w::text <> '') then
  select   max(b.cd_protocolo),
                  max(b.nr_seq_medicacao),
                  max(p.cd_tipo_protocolo),
    max(a.nr_ciclo)
  into STRICT   cd_protocolo_quimio_w,
    nr_seq_med_quimio_w,
    cd_tipo_prot_quimio_w,
    nr_ciclo_w
  from  paciente_atendimento a,
                  paciente_setor    b,
                  protocolo p
  where  a.nr_seq_paciente = b.nr_seq_paciente
  and   a.nr_prescricao    = nr_prescricao_w
         and      b.cd_protocolo   = p.cd_protocolo
  and  p.ie_situacao    = 'A'
  and exists (SELECT 1
                from terceiro t,
                     terceiro_pessoa_fisica u
                where u.cd_pessoa_fisica   = b.cd_medico_resp
                  and u.nr_seq_terceiro    = t.nr_sequencia
                  and t.cd_estabelecimento = a.cd_estabelecimento
                  and t.ie_situacao        = 'A'
                  and u.ie_receb_prot_onco = 'S'
                  and coalesce(t.ie_utilizacao,'A') in ('A','R')
                  and dt_conta_w between coalesce(ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(t.dt_inicio_vigencia), dt_conta_w - 1) and coalesce(ESTABLISHMENT_TIMEZONE_UTILS.EndOfDay(coalesce(t.dt_fim_vigencia,clock_timestamp())), dt_conta_w + 1)
                  and dt_conta_w between coalesce(ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(u.dt_inicio_vigencia), dt_conta_w - 1) and coalesce(ESTABLISHMENT_TIMEZONE_UTILS.EndOfDay(coalesce(u.dt_fim_vigencia,clock_timestamp())), dt_conta_w + 1));

  if (coalesce(cd_protocolo_quimio_w,0) > 0) then

    select  max(a.nr_sequencia),
      max(b.cd_regra)
    into STRICT  nr_seq_mat_crit_repasse_w,
      cd_regra_w
    from   mat_criterio_repasse a,
      regra_repasse_terceiro b
    where  coalesce(a.ie_tipo_criterio,0)     = 1
    and   a.cd_regra      = b.cd_regra
    and   ((coalesce(a.cd_convenio,'0')    = coalesce(cd_convenio_plano_w,'0')) or (coalesce(a.cd_convenio,'0') = '0'))
    and  ((coalesce(a.cd_categoria,'0')    = coalesce(cd_categoria_plano_w,'0')) or (coalesce(a.cd_categoria,'0') = '0'))
    and  ((coalesce(a.cd_plano,'0')    = coalesce(cd_plano_w,'0')) or (coalesce(a.cd_plano,'0') = '0'))
    and  ((coalesce(a.ie_clinica,'0')           = coalesce(ie_clinica_w,'0')) or (coalesce(a.ie_clinica,'0') = '0'))
    and      ((coalesce(a.ie_carater_inter_sus,'0')  = coalesce(ie_carater_inter_sus_w,'0')) or (coalesce(a.ie_carater_inter_sus,'0') = '0'))
    and      ((coalesce(a.cd_protocolo,'0')    = coalesce(cd_protocolo_quimio_w,'0')) or (coalesce(a.cd_protocolo,'0') = '0'))
    and      ((coalesce(a.cd_tipo_protocolo,'0')       = coalesce(cd_tipo_prot_quimio_w,'0')) or (coalesce(a.cd_tipo_protocolo,'0') = '0'))
    and      ((coalesce(a.nr_seq_subtipo_protocolo,'0') = coalesce(nr_seq_med_quimio_w,'0')) or (coalesce(a.nr_seq_subtipo_protocolo,'0') = '0'))
    and (coalesce(a.nr_seq_classificacao::text, '') = '' or (exists (SELECT  1
                from  convenio_classif x
                where  x.cd_convenio    = a.cd_convenio
                and  x.nr_seq_classificacao  = a.nr_seq_classificacao)))
    and (coalesce(a.nr_seq_classif_subtipo_prot::text, '') = ''
        or (exists (  SELECT  1
              from  protocolo_medicacao x
              where  x.nr_seq_classif = a.nr_seq_classif_subtipo_prot
                and (coalesce(x.cd_protocolo,'0')    = coalesce(cd_protocolo_quimio_w,'0'))
                and  x.nr_sequencia = nr_seq_med_quimio_w
        )));
  end if;

  if (coalesce(nr_seq_mat_crit_repasse_w::text, '') = '') or (coalesce(cd_regra_w::text, '') = '') then
    cd_protocolo_quimio_w := null;
    nr_ciclo_w := null;
  end if;

end if;

--Obter o criterio e a regra para a geracao do repasse.

--Sem estes dados, nao ha como gerar o repasse.
if (coalesce(cd_protocolo_quimio_w::text, '') = '') then
  if (coalesce(nr_seq_criterio_p::text, '') = '') then
    SELECT * FROM obter_regra_mat_repasse(  cd_convenio_p, cd_edicao_amb_p, cd_estabelecimento_p, cd_medico_atend_p, ie_tipo_atendimento_p, nm_usuario_p, nr_sequencia_p, cd_regra_w, nr_seq_mat_crit_repasse_w, ie_responsavel_credito_w) INTO STRICT cd_regra_w, nr_seq_mat_crit_repasse_w;

  else

    cd_regra_w    := cd_regra_p;
    nr_seq_mat_crit_repasse_w  := nr_seq_criterio_p;

  end if;
end if;
--Obtem os dados do criterio de material e da regra
select  max(b.ie_forma_calculo),
  max(b.tx_repasse),
  max(b.vl_repasse),
  max(b.cd_tabela_preco),
  max(b.cd_convenio_calc),
  max(b.cd_categoria_calc),
  coalesce(max(a.ie_pagto),'T'),
  max(b.cd_tab_preco_calc),
  coalesce(max(b.ie_repasse_calc), 'S'),
  coalesce(max(b.ie_perc_pacote), 'N'),
  max(pr_desconto_val_fatur),
  coalesce(max(ie_tipo_criterio),0)
into STRICT  ie_forma_calculo_w,
  tx_repasse_w,
  vl_repasse_w,
  cd_tabela_preco_w,
  cd_convenio_w,
  cd_categoria_w,
  ie_forma_pagto_w,
  cd_tab_preco_calc_w,
  ie_repasse_calc_w,
  ie_perc_pacote_w,
  pr_desconto_val_fatur_w,
  ie_tipo_criterio_w
from   mat_criterio_repasse b,
  regra_repasse_terceiro a
where  b.nr_sequencia  = nr_seq_mat_crit_repasse_w
and  a.cd_regra  = b.cd_regra
and  a.cd_regra  = cd_regra_w;




--Tabela de Precos (Mat ou Proc)
if (ie_forma_calculo_w = 'T') then
  begin
  OPEN C03;
  LOOP
  FETCH C03 into vl_tabela_w;
  EXIT WHEN NOT FOUND; /* apply on c03 */
    vl_tabela_w  := vl_tabela_w;
  END LOOP;
  CLOSE C03;
  if (tx_repasse_w = 0) then
    vl_repasse_w  := vl_tabela_w;
  else
    vl_repasse_w  := ((vl_tabela_w * tx_repasse_w) / 100);
  end if;
  end;

--Tabela de um convenio

--Tabela de um convenio por unidade executada
elsif (ie_forma_calculo_w in ('C', 'A')) then
  begin
      SELECT * FROM define_preco_material(
    cd_estabelecimento_p, cd_convenio_w, cd_categoria_w, dt_conta_w, cd_material_w, cd_tipo_acomodacao_w, ie_tipo_atendimento_p, cd_setor_atendimento_w, null, 0, nr_sequencia_p, cd_plano_w, null, null, null, null, nr_seq_classif_atend_w, null, null, vl_tabela_w, dt_ult_vigencia_w, cd_tabela_preco_w, ie_origem_preco_w, nr_seq_bras_preco_w, nr_seq_mat_bras_w, nr_seq_conv_bras_w, nr_seq_conv_simpro_w, nr_seq_mat_simpro_w, nr_seq_simpro_preco_w, nr_seq_ajuste_mat_w) INTO STRICT vl_tabela_w, dt_ult_vigencia_w, cd_tabela_preco_w, ie_origem_preco_w, nr_seq_bras_preco_w, nr_seq_mat_bras_w, nr_seq_conv_bras_w, nr_seq_conv_simpro_w, nr_seq_mat_simpro_w, nr_seq_simpro_preco_w, nr_seq_ajuste_mat_w;

  if (tx_repasse_w = 0) then
    vl_repasse_w  := vl_tabela_w;
  else
    vl_repasse_w  := ((vl_tabela_w * tx_repasse_w) / 100);
  end if;

  --Tabela de um convenio por unidade executada
  if (ie_forma_calculo_w = 'A') then
    vl_repasse_w  := vl_repasse_w * qt_material_w;
  end if;
  end;

--Diferenca entre Faturado x Tabela Preco -- Edgar 12/05/2009, OS 139895
elsif (ie_forma_calculo_w = 'D') then
  begin
  select  max(coalesce(a.vl_preco_venda,0))
  into STRICT  vl_tabela_w
  from  preco_material a
  where  a.cd_material     = cd_material_w
  and  a.cd_tab_preco_mat  = cd_tab_preco_calc_w
  and  a.dt_inicio_vigencia  =  (SELECT  max(x.dt_inicio_vigencia)
            from   preco_material x
            where  x.cd_material    = a.cd_material
            and  x.vl_preco_venda  > 0
            and  x.cd_tab_preco_mat  = cd_tab_preco_calc_w);

  if (tx_repasse_w = 0) then
    vl_repasse_w  := vl_material_w - (vl_tabela_w * qt_material_w);
  else
    vl_repasse_w  := (((vl_material_w - (vl_tabela_w * qt_material_w)) * tx_repasse_w) / 100);
  end if;
  end;

--Percentual sobre o valor Faturado
elsif (ie_forma_calculo_w = 'P') then
  begin
  if (ie_perc_pacote_w = 'S') and (nr_seq_proc_pacote_w IS NOT NULL AND nr_seq_proc_pacote_w::text <> '') then
    vl_material_w  := vl_tabela_original_w;
  end if;

  vl_repasse_w  := ((vl_material_w * tx_repasse_w) / 100);
  end;

--Diferenca entre valor faturado e custo do material + valor fixo
elsif (ie_forma_calculo_w = 'L') then
  vl_repasse_w  := (vl_material_w - (vl_custo_mat_repasse_w * qt_custo_calc_mat_w));

--Diferenca entre valor faturado e custo do material + valor fixo
elsif (ie_forma_calculo_w = '8') then
    vl_repasse_w := (vl_material_w - (vl_custo_mat_repasse_w * qt_custo_calc_mat_w) + coalesce(vl_repasse_w,0));

--Diferenca entre valor faturado e custo do material + percentual fixo
elsif (ie_forma_calculo_w = '9') then
    vl_repasse_w :=  vl_custo_mat_repasse_w + (vl_material_w - ((vl_custo_mat_repasse_w * qt_custo_calc_mat_w) * (tx_repasse_w / 100)));

--Percentual sobre diferenca entre valor faturado e custo do material
elsif (ie_forma_calculo_w = 'O') then --  Edgar 07/01/2012, OS 400858
  --Se nao encontrar custo para o material executado na conta, o sistema deve verificar se ha custo para o material informado da conta.
  if (coalesce(vl_custo_mat_repasse_w,0) = 0) then
    vl_custo_mat_repasse_w := obter_custo_material_repasse(cd_estabelecimento_p, cd_material_exec_w, vl_custo_mat_repasse_w);

    if (coalesce(vl_custo_mat_repasse_w,0) = 0) then
      vl_custo_mat_repasse_w := obter_custo_material_repasse(cd_estabelecimento_p, cd_material_estoque_w, vl_custo_mat_repasse_w);
    end if;
  end if;
  vl_repasse_w  := (vl_material_w - (vl_custo_mat_repasse_w * qt_custo_calc_mat_w)) * dividir_sem_round((tx_repasse_w)::numeric, 100);

--Valor fixo por unidade executada
elsif (ie_forma_calculo_w = 'U') then
  vl_repasse_w  := (vl_repasse_w * qt_material_w);

--Regra especial
elsif (ie_forma_calculo_w = 'R') then
  vl_repasse_w  := (tx_repasse_w / 100) * obter_vl_mat_repasse_adic(nr_seq_mat_crit_repasse_w, nr_sequencia_p);

--Percentual sobre o valor do procedimento principal ao qual o procedimento/material esta vinculado
elsif (ie_forma_calculo_w  = 'F') then
  select  coalesce(max(a.vl_procedimento),0)
  into STRICT  vl_repasse_w
  from  procedimento_paciente a
  where  a.nr_sequencia  = nr_seq_proc_princ_w;

  vl_repasse_w  := (coalesce(vl_repasse_w,0) * coalesce(tx_repasse_w,0)) / 100;

--Percentual + Valor fixo
elsif (ie_forma_calculo_w = 'W') then
  vl_repasse_w    := (vl_material_w * tx_repasse_w / 100) + coalesce(vl_repasse_w,0);

--Valor fixo
elsif (ie_forma_calculo_w = 'V') then
  if (qt_material_w  < 0) and (vl_repasse_w  > 0) then
    vl_repasse_w  := vl_repasse_w * -1;
  end if;

--Percentual sobre o valor Brasindice
elsif (ie_forma_calculo_w = '5') then
  vl_preco_brasindice_w  := OBTER_BRASINDICE_PRECO(cd_estabelecimento_p,cd_convenio_p,cd_categoria_plano_w,cd_material_w,dt_conta_w,ie_tipo_atendimento_p);

  vl_preco_brasindice_w  := coalesce(vl_preco_brasindice_w,0) * coalesce(qt_material_w,1);

  vl_repasse_w  := (coalesce(vl_preco_brasindice_w,0) * coalesce(tx_repasse_w,0) / 100);

--Percentual sobre o valor Simpro

--Valor faturado - (Valor de custo do material + (Valor de custo do material * %Repasse))
elsif  ((ie_forma_calculo_w  = '6') or (ie_forma_calculo_w  = '7')) then

  nr_seq_marca_w := 0;
  if (coalesce(nr_sequencia_p,0) > 0) then
    select  coalesce(max(nr_seq_lote_fornec),0)
    into STRICT  nr_seq_lote_fornec_w
    from   material_atend_paciente
    where  nr_sequencia = nr_sequencia_p;

    if (coalesce(nr_seq_marca_w,0) = 0) and (coalesce(nr_seq_lote_fornec_w,0) > 0) then
      select  max(nr_seq_marca)
      into STRICT  nr_seq_marca_w
      from  material_lote_fornec
      where  nr_sequencia = nr_seq_lote_fornec_w;
    end if;
  end if;


  SELECT * FROM Calcular_Preco_Simpro(cd_estabelecimento_p, cd_convenio_p, cd_material_w, 1, 1, dt_conta_w, null, vl_preco_simpro_w, dt_vigencia_simpro_w, 1, 1, 1, 1, 'N', 'N', nr_seq_marca_w, nr_seq_mat_simpro_w, nr_seq_simpro_preco_w) INTO STRICT vl_preco_simpro_w, dt_vigencia_simpro_w, nr_seq_mat_simpro_w, nr_seq_simpro_preco_w;

  --Percentual sobre o valor Simpro
  if (ie_forma_calculo_w = '6') then
    vl_preco_simpro_w  := coalesce(vl_preco_simpro_w,0) * coalesce(qt_material_w,1);

    vl_repasse_w  := (coalesce(vl_preco_simpro_w,0) * coalesce(tx_repasse_w,0) / 100);

  --Valor faturado - (Valor de custo do material + (Valor de custo do material * %Repasse))
  elsif (ie_forma_calculo_w = '7') then
    --Obtem o custo do material/preco de venda. Nao foi utilizado o Cursor c03 pois nao e passado o codigo da tabela para este select

    -- Somente filtra pelo CD_MATERIAL, Estabeleciment e data.
    select  max(a.vl_preco_venda)
    into STRICT  vl_custo_material_w
    from  preco_material a
    where  cd_estabelecimento    = cd_estabelecimento_p
    and   cd_material           = cd_material_w
    and  ie_situacao         = 'A'
    and   dt_inicio_vigencia    <= dt_conta_w;

    vl_custo_material_w  := ((vl_custo_material_w * qt_material_w) +  ((vl_custo_material_w * qt_material_w) * (coalesce(tx_repasse_w,0) / 100)));
    vl_repasse_w  := vl_preco_simpro_w - (vl_custo_material_w- vl_material_w);
  end if;

--Percentual sobre o valor unitario faturado
elsif (ie_forma_calculo_w  = 'Z') then

  vl_repasse_w  := ((coalesce(vl_unitario_w,0) * tx_repasse_w) / 100);

  if (qt_material_w < 0) then
    vl_repasse_w := vl_repasse_w * -1;
  end if;
elsif (ie_forma_calculo_w = '0') then

  vl_preco_brasindice_w  := OBTER_BRASINDICE_PRECO_INDICE(cd_estabelecimento_p,cd_convenio_p,cd_categoria_plano_w,cd_material_w,dt_conta_w,ie_tipo_atendimento_p);

  vl_preco_brasindice_w  := coalesce(vl_preco_brasindice_w,0) * coalesce(qt_material_w,1);

  vl_repasse_w  := (coalesce(vl_preco_brasindice_w,0) * coalesce(tx_repasse_w,0) / 100);
elsif (ie_forma_calculo_w = '11') then

  if (ie_perc_pacote_w = 'S') and (nr_seq_proc_pacote_w IS NOT NULL AND nr_seq_proc_pacote_w::text <> '') then
    vl_material_w  := vl_tabela_original_w;
  end if;

  vl_custo_mat_repasse_w := obter_custo_material_repasse(cd_estabelecimento_p, cd_material_w, vl_custo_mat_repasse_w);

  vl_arepassar_w  := vl_material_w - (vl_material_w * dividir_sem_round((pr_desconto_val_fatur_w)::numeric,100)) - (vl_custo_mat_repasse_w * qt_custo_calc_mat_w);
  vl_repasse_w  := vl_arepassar_w * dividir_sem_round((tx_repasse_w)::numeric,100);

--  Percentual sobre o valor faturado (sem Coparticipacao/Descontos)
elsif (ie_forma_calculo_w = '12') then
  select  sum(coalesce(a.vl_rateio, 0))
  into STRICT  vl_rateio_w
  from  conta_pac_ded_conv_item a
  where  a.nr_seq_matpaci_origem = nr_seq_material_w;

  vl_repasse_w  := vl_rateio_w + vl_material_w;
  vl_repasse_w  := (vl_repasse_w * (coalesce(tx_repasse_w,0)/100));

end if;

--So continua se existir regra para o repasse, ou se a conta nao estiver cancelada ou o valor do repasse nao pode estar zerado

--O repasse so pode ser gerado zerado se o parametro que permite tal processo estiver marcado
if (cd_regra_w > 0) and (coalesce(ie_cancelamento_conta_w::text, '') = '' or (nr_seq_ret_glosa_w IS NOT NULL AND nr_seq_ret_glosa_w::text <> '')) then
  begin

  update  material_atend_paciente
  set  nr_seq_mat_crit_repasse    = nr_seq_mat_crit_repasse_w,
    vl_repasse_calc       = NULL
  where  nr_sequencia      = nr_sequencia_p;


  vl_repassar_w    := vl_repasse_w;
  select  nr_seq_trans_fin_prod,
    NR_SEQ_TRANS_FIN_REP_MAIOR
  into STRICT  nr_seq_trans_fin_w,
    NR_SEQ_TRANS_FIN_REP_MAIOR_w
  from  regra_repasse_terceiro
  where  cd_regra  = cd_regra_w;

  ie_forma_pagto_terc_w  := ie_forma_pagto_w;

  --Retorna as informacoes das Formas de repasse.
  for  r_c_forma_repasse in c_forma_repasse(cd_regra_w, dt_conta_w) loop
    begin
    ie_gravar_log_w  := 'N';
    ds_log_repasse_w := '';
    nr_seq_terceiro_w  := null;

    if (r_c_forma_repasse.ie_beneficiario = 'T') then
      nr_seq_terceiro_w  := r_c_forma_repasse.nr_seq_terceiro;
    end if;

    ie_tipo_terceiro_forma_w  := r_c_forma_repasse.ie_tipo_terceiro;
    ie_forma_pagto_w  := ie_forma_pagto_terc_w;

    if (vl_repasse_terc_ww > 0) then
      vl_repasse_terc_w  := vl_repasse_terc_ww;
    elsif (r_c_forma_repasse.ie_perc_saldo = 'S') then
      vl_repasse_terc_w  := vl_repasse_w * r_c_forma_repasse.tx_repasse / 100;
    else
      vl_repasse_terc_w  := vl_repassar_w * r_c_forma_repasse.tx_repasse / 100;
    end if;
    /*Esta parte do codigo foi incluida apos o insert para garantir que o repasse ja foi gerado e que nao sera necessario gerar novamente.*/


    --vl_repasse_w      := vl_repasse_w - vl_repasse_terc_w;
    cd_medico_w    := '';
    if (r_c_forma_repasse.ie_beneficiario = 'C') then
      cd_medico_w    := cd_medico_cir_w;
    elsif (r_c_forma_repasse.ie_beneficiario = 'P') then
      cd_medico_w    := cd_medico_prescr_w;
    elsif (r_c_forma_repasse.ie_beneficiario = 'E') then
      cd_medico_w    := cd_medico_prescr_w;
    elsif (r_c_forma_repasse.ie_beneficiario = 'A') then
      cd_medico_w    := CD_MEDICO_RESP_w;
    elsif (r_c_forma_repasse.ie_beneficiario = 'I') then
      cd_medico_w    := CD_MEDICO_ATENDIMENTO_w;
    elsif (r_c_forma_repasse.ie_beneficiario = 'O') then
      cd_medico_w    := cd_pessoa_indic_w;
    elsif (r_c_forma_repasse.ie_beneficiario = 'M') then
      cd_medico_w    := cd_pessoa_tratamento_w;
    elsif (r_c_forma_repasse.ie_beneficiario = 'X') then
      cd_medico_w  := cd_medico_referido_w;
    elsif (r_c_forma_repasse.ie_beneficiario = 'H') then
        select  max(a.CD_MEDICO_RESP)
        into STRICT  cd_medico_w
        from  paciente_setor a,
          paciente_atendimento b,
          prescr_medica c
        where  a.nr_seq_paciente  = b.nr_seq_paciente
        and  b.nr_prescricao    = c.nr_prescricao
        and  c.nr_prescricao    = nr_prescricao_w;
    elsif (r_c_forma_repasse.ie_beneficiario = 'D') then
      select  coalesce(max(cd_medico_executor), cd_medico_prescr_w)
      into STRICT  cd_medico_w
      from  procedimento_paciente
      where  nr_sequencia = nr_seq_proc_princ_w;
    elsif (r_c_forma_repasse.ie_beneficiario = '4') then
      select  max(cd_medico)
      into STRICT  cd_medico_w
      from  med_avaliacao_paciente
      where  nr_atendimento    = nr_atendimento_w;
    elsif (r_c_forma_repasse.ie_beneficiario = '9') then
      cd_medico_w      := substr(obter_dados_usuario_opcao(nm_usuario_original_w, 'C'),1,20);
    end if;

    if (r_c_forma_repasse.ie_beneficiario not in ('T','F')) and (coalesce(cd_medico_w,0) > 0) then
      begin
      cd_medico_ww    := cd_medico_w;
      select  coalesce(min(nr_sequencia),0)
      into STRICT  nr_seq_terceiro_w
      from   terceiro
      where  cd_pessoa_fisica  = cd_medico_w
      and  cd_estabelecimento  = cd_estabelecimento_p
      and  coalesce(ie_utilizacao,'A') in ('A','R')
      and  dt_conta_w  between
        coalesce(ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_inicio_vigencia), dt_conta_w - 1) and coalesce(ESTABLISHMENT_TIMEZONE_UTILS.EndOfDay(coalesce(dt_fim_vigencia,clock_timestamp())), dt_conta_w + 1)
      and  ie_situacao    = 'A';
      if (nr_seq_terceiro_w = 0) then

        select  count(*)
        into STRICT  cont_w
        from  terceiro_pf_conv;

        if (cont_w = 0) then
          select  coalesce(min(a.nr_seq_terceiro),0)
          into STRICT  nr_seq_terceiro_w
          from  terceiro b,
            terceiro_pessoa_fisica a
          where  a.cd_pessoa_fisica  = cd_medico_w
          and  a.nr_seq_terceiro    = b.nr_sequencia
          and  b.cd_estabelecimento  = cd_estabelecimento_p
          and  b.ie_situacao    = 'A'
          and  coalesce(b.ie_utilizacao,'A') in ('A','R')
          and  dt_conta_w between coalesce(ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(b.dt_inicio_vigencia), dt_conta_w - 1) and coalesce(ESTABLISHMENT_TIMEZONE_UTILS.endOfDay(coalesce(b.dt_fim_vigencia,clock_timestamp())), dt_conta_w + 1)
          and  dt_conta_w between coalesce(ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(a.dt_inicio_vigencia), dt_conta_w - 1) and coalesce(ESTABLISHMENT_TIMEZONE_UTILS.endOfDay(coalesce(a.dt_fim_vigencia,clock_timestamp())), dt_conta_w + 1);
        else
          select  coalesce(min(a.nr_seq_terceiro),0)
          into STRICT  nr_seq_terceiro_w
          from  terceiro b,
            terceiro_pessoa_fisica a
          where  a.cd_pessoa_fisica  = cd_medico_w
          and  a.nr_seq_terceiro    = b.nr_sequencia
          and  b.cd_estabelecimento  = cd_estabelecimento_p
          and  b.ie_situacao    = 'A'
          and  coalesce(b.ie_utilizacao,'A') in ('A','R')
          and  dt_conta_w between coalesce(ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(b.dt_inicio_vigencia), dt_conta_w - 1) and coalesce(ESTABLISHMENT_TIMEZONE_UTILS.endOfDay(coalesce(b.dt_fim_vigencia,clock_timestamp())), dt_conta_w + 1)
          and  dt_conta_w between coalesce(ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(a.dt_inicio_vigencia), dt_conta_w - 1) and coalesce(ESTABLISHMENT_TIMEZONE_UTILS.endOfDay(coalesce(a.dt_fim_vigencia,clock_timestamp())), dt_conta_w + 1)
          and   OBTER_SE_TERC_PF_CONV(a.nr_seq_terceiro, a.cd_pessoa_fisica, cd_convenio_p) = 'S';
        end if;

      end if;
      if (nr_seq_terceiro_w = 0) then
        select  coalesce(min(nr_seq_terceiro),0)
        into STRICT  nr_seq_terceiro_w
        from   Parametro_faturamento
        where  cd_estabelecimento  = cd_estabelecimento_p;
      end if;
      end;
    end if;

    if (r_c_forma_repasse.ie_beneficiario =  'F') then
      begin
      select  coalesce(min(nr_sequencia),0)
      into STRICT  nr_seq_terceiro_w
      from   terceiro
      where  cd_cgc = cd_cgc_fornec_w
      and  cd_estabelecimento  = cd_estabelecimento_p
      and  coalesce(ie_utilizacao,'A') in ('A','R')
      and  dt_conta_w  between
        coalesce(ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_inicio_vigencia), dt_conta_w - 1) and coalesce(ESTABLISHMENT_TIMEZONE_UTILS.endOfDay(coalesce(dt_fim_vigencia,clock_timestamp())), dt_conta_w + 1)
      and  ie_situacao    = 'A';

      if (nr_seq_terceiro_w = 0) then
        select  coalesce(min(nr_seq_terceiro),0)
        into STRICT  nr_seq_terceiro_w
        from   Parametro_faturamento
        where  cd_estabelecimento  = cd_estabelecimento_p;
      end if;
      end;

    end if;

    if (r_c_forma_repasse.ie_beneficiario = 'S') then

      select   coalesce(max(nr_sequencia),0)
      into STRICT  nr_seq_terceiro_w
      from   terceiro
      where  cd_cgc = cd_cgc_prestador_w
      and  dt_conta_w  between
        coalesce(ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_inicio_vigencia), dt_conta_w - 1) and coalesce(ESTABLISHMENT_TIMEZONE_UTILS.endOfDay(coalesce(dt_fim_vigencia,clock_timestamp())), dt_conta_w + 1)
      and  cd_estabelecimento  = cd_estabelecimento_p;

      if (nr_seq_terceiro_w = 0) then
        select  coalesce(max(nr_seq_terceiro),0)
        into STRICT  nr_seq_terceiro_w
        from   Parametro_faturamento
        where  cd_estabelecimento  = cd_estabelecimento_p;
      end if;
    end if;

    if (coalesce(r_c_forma_repasse.vl_repasse,0) <> 0) then
      vl_repasse_terc_w  := r_c_forma_repasse.vl_repasse;
    end if;

    vl_original_repasse_w  := vl_repasse_terc_w;

    if (r_c_forma_repasse.ie_recebe_regra_pontuacao = 'S') then
      select  count(1)
      into STRICT  qt_pont_crit_w
      from  mat_crit_rep_regra_ponto a
      where  a.nr_seq_mat_criterio = nr_seq_mat_crit_repasse_w;

      select  count(1)
      into STRICT  qt_pont_terc_w
      from  terceiro_regra_pontuacao a
      where  a.nr_seq_terceiro = nr_seq_terceiro_w;

      if (qt_pont_terc_w <> 0) and (qt_pont_crit_w <> 0) then
        vl_repasse_terc_w  := 0;
      end if;
    end if;

    --So Gera o repasse se existir terceiro informado.

    --Nao podera gerar repasse com valor zerado, exceto se o parametro para gerar com

    --valor zerado estiver habilitado.
    if (coalesce(nr_seq_terceiro_w,0) > 0) and
      (((coalesce(vl_repasse_terc_w,0) <> 0) or (ie_repasse_zerado_w = 'S')) or (r_c_forma_repasse.ie_gera_item_zerado = 'S'))then
      begin

      --Verifica a forma de pagamento do Terceiro caso a forma de pagamento da regra for por Terceiro.
      if (ie_forma_pagto_w = 'T') then
        select  coalesce(max(ie_forma_pagto),'R')
        into STRICT  ie_forma_pagto_w
        from  terceiro
        where  nr_sequencia  = nr_seq_terceiro_w;
      end if;

      --Se for por producao, gera com o status Liberado pelo sistema, caso contrario gera Aguardando Retorno
      if (ie_forma_pagto_w = 'P') then
        ie_status_w  := 'S';
      elsif (ie_forma_pagto_w = 'F') then
          select  max(nr_seq_protocolo)
          into STRICT  nr_seq_protocolo_w
          from  conta_paciente
          where  nr_interno_conta   = nr_interno_conta_w;

          select  max(ie_status_protocolo),
            max(dt_mesano_referencia)
          into STRICT  ie_status_protocolo_w,
            dt_mesano_referencia_w
          from  protocolo_convenio
          where  nr_seq_protocolo  = nr_seq_protocolo_w;

          if (ie_status_protocolo_w = 2) then
            ie_status_w  := 'S';
            dt_liberacao_w  := clock_timestamp();
          else
            ie_status_w  := 'A';
          end if;
      else
        ie_status_w  := 'A';
      end if;

      /* Marcus 20/07/2004 Gravar o medico somente quando a regra exige */

      cd_medico_rep_w  := null;
      if (r_c_forma_repasse.ie_gravacao_medico = 'S') then
        cd_medico_rep_w  := cd_medico_ww;
      elsif (r_c_forma_repasse.ie_gravacao_medico = 'P') then
        cd_medico_rep_w  := cd_medico_Prescr_w;
      elsif (r_c_forma_repasse.ie_gravacao_medico = 'C') then
        cd_medico_rep_w  := cd_medico_Cir_w;
      elsif (r_c_forma_repasse.ie_gravacao_medico = 'E') then
        select  max(cd_medico_executor)
        into STRICT  cd_medico_rep_w
        from  procedimento_paciente
        where  nr_sequencia = nr_seq_proc_princ_w;
        cd_medico_rep_w  := cd_medico_rep_w;
      elsif (r_c_forma_repasse.ie_gravacao_medico = 'F') then
        cd_medico_rep_w  := r_c_forma_repasse.cd_pessoa_fisica;
      end if;

      ie_gerar_repasse_w  := 'S';


      if (ie_tipo_terceiro_forma_w IS NOT NULL AND ie_tipo_terceiro_forma_w::text <> '') then
        ie_tipo_terceiro_w  := obter_tipo_pessoa_terceiro(cd_medico_rep_w,dt_conta_w,ie_tipo_terceiro_forma_w);

        if (ie_tipo_terceiro_forma_w <> coalesce(ie_tipo_terceiro_w,'X')) then
          ie_gerar_repasse_w := 'N';
        end if;
      end if;

      begin
        ds_status_w := substr(obter_valor_dominio(1129, ie_status_w),1,50);
      exception
       when others then
         ds_status_w := '';
      end;

      begin
        ds_transacao_w := substr(obter_desc_trans_financ(nr_seq_trans_fin_w),1,100);
      exception
       when others then
         ds_transacao_w := '';
      end;

      begin
        nm_medico_w := substr(obter_nome_pf_pj(cd_medico_rep_w, null),1,100);
      exception
       when others then
         nm_medico_w := '';
      end;

      if (r_c_forma_repasse.ie_beneficiario <> 'T') and (r_c_forma_repasse.ie_valida_terceiro_forma = 'S') and (nr_seq_terceiro_w <> r_c_forma_repasse.nr_seq_terceiro) then
        ie_gerar_repasse_w  := 'N';
      end if;

      if (coalesce(ie_gerar_repasse_w,'S') = 'S') then

        select  nextval('material_repasse_seq')
        into STRICT  nr_seq_repasse_w
;
        insert  into material_repasse(nr_sequencia, nr_seq_material,vl_repasse,
          dt_atualizacao,  nm_usuario, nr_seq_terceiro,
          nr_lote_contabil, nr_repasse_terceiro,
          cd_conta_contabil, ie_status, vl_liberado,
          cd_regra, cd_medico, nr_seq_trans_fin,
          dt_contabil_titulo, dt_contabil, NR_SEQ_TRANS_FIN_REP_MAIOR, ie_estorno, ie_repasse_calc, nr_seq_regra_item, vl_original_repasse,
          nr_seq_criterio, cd_protocolo, nr_ciclo, nr_seq_medicacao,
          ds_tipo_conv,
          ds_clinica,
          cd_unidade_basica,
          nm_medico_referido,
          ds_convenio,
          cd_material,
          ds_material,
          nr_atendimento,
          nr_atendimento_mae,
          cd_pessoa_fisica,
          nm_pessoa_fisica,
          ds_status,
          ds_transacao,
          nm_medico,
          ds_tipo_atendimento,
          ie_tipo_atendimento,
          dt_entrega_convenio,
          ds_classif_atua_medico,
          dt_entrada,
          ds_centro_custo,
          ds_categoria,
          ie_tipo_convenio,
          cd_setor_atendimento)
        values (nr_seq_repasse_w, nr_sequencia_p, coalesce(vl_repasse_terc_w,0),
          clock_timestamp(),nm_usuario_p, nr_seq_terceiro_w,
          0, null, r_c_forma_repasse.cd_conta_contabil, ie_status_w,
          CASE WHEN ie_status_w='S' THEN  vl_repasse_terc_w  ELSE 0 END ,
          cd_regra_w, cd_medico_rep_w, nr_seq_trans_fin_w,
          to_date('01/01/2999','dd/mm/yyyy'), to_date('01/01/2999','dd/mm/yyyy'), NR_SEQ_TRANS_FIN_REP_MAIOR_w, 'N', ie_repasse_calc_w, r_c_forma_repasse.nr_seq_item, vl_original_repasse_w,
          nr_seq_mat_crit_repasse_w, cd_protocolo_quimio_w, nr_ciclo_w, nr_seq_med_quimio_w,
          ds_tipo_conv_w,
          ds_clinica_w,
          cd_unidade_basica_w,
          nm_medico_referido_w,
          ds_convenio_w,
          cd_material_w,
          ds_material_w,
          nr_atendimento_w,
          nr_atendimento_mae_w,
          cd_pessoa_fisica_w,
          nm_pessoa_fisica_w,
          ds_status_w,
          ds_transacao_w,
          nm_medico_w,
          ds_tipo_atendimento_w,
          ie_tipo_atendimento_w,
          dt_entrega_convenio_w,
          ds_classif_atua_medico_w,
          dt_entrada_w,
          ds_centro_custo_w,
          ds_categoria_w,
          ie_tipo_convenio_w,
          cd_setor_atendimento_w);

        update  material_atend_paciente
        set  vl_repasse_calc      = coalesce(vl_repasse_calc,0) + coalesce(vl_repasse_terc_w,0)
        where  nr_sequencia      = nr_sequencia_p;

        if (ie_gravar_log_mat_w = 'S') then
          delete  FROM material_repasse_log
          where  nr_seq_material = nr_sequencia_p;
        end if;

        if (ie_auditar_repasse_w = 'S') and (ie_auditoria_w = 'S') and (coalesce(vl_repasse_terc_w,0) < 0) then

          ds_status_w := substr(obter_valor_dominio(1129, 'D'),1,50);

          update  material_repasse
          set  ie_status  = 'D',
               ds_status  = ds_status_w
          where  nr_sequencia  = nr_seq_repasse_w;
        end if;

        vl_repasse_w      := vl_repasse_w - coalesce(vl_repasse_terc_w,0);
      else
        if (ie_gravar_log_mat_w = 'S') then
          ds_log_repasse_w := substr(ds_log_repasse_w|| ';nr_seq_terceiro_w='|| nr_seq_terceiro_w ||
                    ';vl_repasse_terc_w='|| vl_repasse_terc_w ||
                    ';ie_repasse_zerado_w='|| ie_repasse_zerado_w ||
                    ';ie_gera_item_zerado='|| r_c_forma_repasse.ie_gera_item_zerado ||
                    ';ie_gerar_repasse_w='|| ie_gerar_repasse_w ||
                    ';cd_regra_w='|| cd_regra_w ||
                    ';nr_seq_mat_crit_repasse_w='|| nr_seq_mat_crit_repasse_w,1,4000);
          ie_gravar_log_w := 'S';
        end if;
      end if;
      end;
    else
      if (ie_gravar_log_mat_w = 'S') then
        ds_log_repasse_w := substr(ds_log_repasse_w|| ';nr_seq_terceiro_w='|| nr_seq_terceiro_w ||
                  ';vl_repasse_terc_w='|| vl_repasse_terc_w ||
                  ';ie_repasse_zerado_w='|| ie_repasse_zerado_w ||
                  ';ie_gera_item_zerado='|| r_c_forma_repasse.ie_gera_item_zerado ||
                  ';cd_regra_w='|| cd_regra_w ||
                  ';nr_seq_mat_crit_repasse_w='|| nr_seq_mat_crit_repasse_w,1,4000);
        ie_gravar_log_w := 'S';
      end if;
    end if;
    end;

    if (ie_gravar_log_w = 'S') and (ie_gravar_log_mat_w = 'S') then
      begin
      CALL grava_log_geracao_repasse(nr_atendimento_w,nr_interno_conta_w,null,null,null,null,nr_sequencia_p,cd_material_w,ds_log_repasse_w,nm_usuario_p,nr_seq_protocolo_w);
      end;
    end if;
  --Fim do cursor c_forma_repasse
  END LOOP;
  end;
else
  if (ie_gravar_log_mat_w = 'S') then
    ds_log_repasse_w := substr(ds_log_repasse_w|| ';cd_regra_w='|| cd_regra_w ||
              ';nr_seq_mat_crit_repasse_w='|| nr_seq_mat_crit_repasse_w ||
              ';ie_cancelamento_conta_w='|| ie_cancelamento_conta_w ||
              ';nr_seq_ret_glosa_w='|| nr_seq_ret_glosa_w,1,4000);
    CALL grava_log_geracao_repasse(nr_atendimento_w,nr_interno_conta_w,null,null,null,null,nr_sequencia_p,cd_material_w,ds_log_repasse_w,nm_usuario_p,nr_seq_protocolo_w);
  end if;
end if;
<<final>>
if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_material_repasse ( nr_sequencia_p bigint, cd_estabelecimento_p bigint, cd_medico_atend_p text, nm_usuario_p text, cd_edicao_amb_p bigint, cd_convenio_p bigint, ie_tipo_atendimento_p bigint, cd_regra_p bigint, nr_seq_criterio_p bigint) FROM PUBLIC;

