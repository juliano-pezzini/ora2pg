-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ptu_gerar_fatura_benef_pre ( nr_seq_fatura_p bigint, nr_seq_mensalidade_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_mensalidade_seg_w	bigint;
nr_seq_segurado_w		bigint;
cd_usuario_plano_w		varchar(13);
cd_unimed_w			varchar(13);
cd_familia_w			integer;
nr_seq_plano_w			bigint;
cd_empresa_origem_w		bigint;
nr_seq_parentesco_w		bigint;
cd_dependencia_w		bigint;
nr_seq_congenere_w		bigint;
cd_pessoa_fisica_w		varchar(10);
vl_mensalidade_cobrada_w	double precision;
vl_inscricao_cobrada_w		double precision;
ie_tipo_repasse_w		varchar(1);
nm_pessoa_fisica_w		varchar(25);
dt_nascimento_w			timestamp;
cd_plano_intercambio_w		varchar(3);
nr_cartao_intercambio_w		pls_segurado_carteira.nr_cartao_intercambio%type;
qt_nr_cartao_w			numeric(20);
nr_seq_intercambio_w		pls_intercambio.nr_sequencia%type;

C01 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_mensalidade_segurado
	where	nr_seq_mensalidade	= nr_seq_mensalidade_p;


BEGIN

open C01;
loop
fetch C01 into
	nr_seq_mensalidade_seg_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	select	nr_seq_segurado,
		nr_seq_plano
	into STRICT	nr_seq_segurado_w,
		nr_seq_plano_w
	from	pls_mensalidade_segurado
	where	nr_sequencia	= nr_seq_mensalidade_seg_w;

	select	cd_pessoa_fisica,
		ie_tipo_repasse,
		substr(cd_matricula_familia,1,6),
		cd_operadora_empresa,
		nr_seq_congenere,
		nr_seq_parentesco,
		nr_seq_intercambio
	into STRICT	cd_pessoa_fisica_w,
		ie_tipo_repasse_w,
		cd_familia_w,
		cd_empresa_origem_w,
		nr_seq_congenere_w,
		nr_seq_parentesco_w,
		nr_seq_intercambio_w
	from	pls_segurado
	where	nr_sequencia	= nr_seq_segurado_w;

	if (ie_tipo_repasse_w = 'P') then

		select	substr(nr_cartao_intercambio,1,17)
		into STRICT	nr_cartao_intercambio_w
		from	pls_segurado_carteira
		where	nr_seq_segurado = nr_seq_segurado_w;

		if (nr_cartao_intercambio_w IS NOT NULL AND nr_cartao_intercambio_w::text <> '') then
			select	length(nr_cartao_intercambio_w)
			into STRICT	qt_nr_cartao_w
			;

			if (qt_nr_cartao_w = 17) then
				cd_usuario_plano_w	:= substr(nr_cartao_intercambio_w,5,13);
				cd_unimed_w		:= substr(nr_cartao_intercambio_w,1,4);
			else
				nr_cartao_intercambio_w	:= lpad(nr_cartao_intercambio_w,17,'0');
				cd_usuario_plano_w	:= substr(nr_cartao_intercambio_w,5,13);
				cd_unimed_w		:= substr(nr_cartao_intercambio_w,1,4);
			end if;
		end if;

		if (coalesce(cd_empresa_origem_w::text, '') = '') and (nr_seq_intercambio_w IS NOT NULL AND nr_seq_intercambio_w::text <> '') then
			select	cd_operadora_empresa
			into STRICT	cd_empresa_origem_w
			from	pls_intercambio
			where	nr_sequencia = nr_seq_intercambio_w;
		end if;

		select	substr(nm_pessoa_fisica,1,25),
			dt_nascimento
		into STRICT	nm_pessoa_fisica_w,
			dt_nascimento_w
		from	pessoa_fisica
		where	cd_pessoa_fisica	= cd_pessoa_fisica_w;

		if (nr_seq_parentesco_w IS NOT NULL AND nr_seq_parentesco_w::text <> '') then
			begin
			select	cd_ptu
			into STRICT	cd_dependencia_w
			from	grau_parentesco
			where	nr_sequencia		= nr_seq_parentesco_w;
			exception
			when others then
				cd_dependencia_w := 00;
			end;
		else
			cd_dependencia_w := 0;
		end if;

		select	substr(cd_plano_intercambio,1,3)
		into STRICT	cd_plano_intercambio_w
		from	pls_plano
		where	nr_sequencia	= nr_seq_plano_w;

		select	sum(vl_item)
		into STRICT	vl_mensalidade_cobrada_w
		from	pls_mensalidade_seg_item
		where	nr_seq_mensalidade_seg	= nr_seq_mensalidade_seg_w
		and	ie_tipo_item <> 2;

		select	sum(vl_item)
		into STRICT	vl_inscricao_cobrada_w
		from	pls_mensalidade_seg_item
		where	nr_seq_mensalidade_seg	= nr_seq_mensalidade_seg_w
		and	ie_tipo_item = 2;

		insert into ptu_fatura_pre_cobranca(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
				nr_seq_fatura,nm_beneficiario,id_beneficiario,cd_familia,cd_plano_intercambio,
				cd_empresa_origem,cd_dependencia,dt_nascimento,cd_unimed,cd_filial,vl_mensalidade_original,
				vl_inscricao_original,vl_inscricao_cobrado,vl_mensalidade_cobrado,vl_ajuste_cobrado,nr_seq_segurado,
				nr_seq_geracao,tp_registro)
		values (	nextval('ptu_fatura_pre_cobranca_seq'),clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,
				nr_seq_fatura_p,nm_pessoa_fisica_w,cd_usuario_plano_w,cd_familia_w,cd_plano_intercambio_w,
				cd_empresa_origem_w,cd_dependencia_w,dt_nascimento_w,cd_unimed_w,0,0,
				0,vl_inscricao_cobrada_w,vl_mensalidade_cobrada_w,0,nr_seq_segurado_w,
				0,2);
	end if;
	end;
end loop;
close C01;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_gerar_fatura_benef_pre ( nr_seq_fatura_p bigint, nr_seq_mensalidade_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

