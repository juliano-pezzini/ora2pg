-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE restringir_inconsistencia ( cd_estabelecimento_p bigint, cd_convenio_p bigint, cd_categoria_p text, ie_tipo_atendimento_p bigint, ie_clinica_p bigint, nr_seq_classif_atend_p bigint, ds_inconsistencia_p INOUT text) AS $body$
DECLARE


cd_inconsistencia_w       	bigint;
ie_tipo_convenio_w		smallint := 1;
ds_inconsistencia_w		varchar(400);
ds_erro_w			varchar(4000);
cd_erro_w			varchar(120);
cd_erro_ler_w			varchar(20);
k				integer;
reg				integer;
ie_permite_restringir_w		varchar(1);
ie_clinica_w			integer;
ie_restringe_w		varchar(1);

C01 CURSOR FOR
		SELECT	coalesce(b.ie_restringe,'S')
		from	restringe_inconsistencia b,
			inconsistencia a
		where	a.cd_inconsistencia	= cd_erro_ler_w
		and	a.nr_sequencia		= b.nr_seq_inconsistencia
		and	coalesce(b.cd_estabelecimento, coalesce(cd_estabelecimento_p,0)) = coalesce(cd_estabelecimento_p,0)
		and	coalesce(b.cd_convenio, cd_convenio_p)	=  cd_convenio_p
		and	coalesce(b.cd_categoria, coalesce(cd_categoria_p,'0'))	= coalesce(cd_categoria_p,'0')
		and	coalesce(b.ie_tipo_convenio, ie_tipo_convenio_w) = ie_tipo_convenio_w
		and	coalesce(b.ie_tipo_atendimento, ie_tipo_atendimento_p)	= ie_tipo_atendimento_p
		and	coalesce(b.nr_seq_classificacao, coalesce(nr_seq_classif_atend_p,0))	= coalesce(nr_seq_classif_atend_p,0)
		and	coalesce(b.ie_clinica,ie_clinica_w)	= ie_clinica_w
		and	coalesce(b.nm_usuario_filtro, coalesce(wheb_usuario_pck.get_nm_usuario,'0')) = coalesce(wheb_usuario_pck.get_nm_usuario,'0')
		order by	coalesce(b.nm_usuario_filtro,' '),
			coalesce(b.cd_convenio,0),
			coalesce(b.cd_categoria,'0'),
			coalesce(b.ie_tipo_convenio,0),
			coalesce(b.ie_tipo_atendimento,0),
			coalesce(b.ie_clinica,0),
			coalesce(b.nr_seq_classificacao,0);


BEGIN
ie_clinica_w	:= coalesce(ie_clinica_p,0);
if (length(ds_inconsistencia_p) > 0) then
	select ie_tipo_convenio
	into STRICT ie_tipo_convenio_w
	from convenio
	where cd_convenio 	= cd_convenio_p;
	ds_inconsistencia_w	:= '';
	ds_erro_w		:= ds_inconsistencia_p;
	while	(ds_erro_w IS NOT NULL AND ds_erro_w::text <> '') LOOP
		begin
		k := position(' ' in ds_erro_w);
		if (k > 1) then
			cd_erro_w	:= substr(ds_erro_w, 1, k-1);
			ds_erro_w	:= substr(ds_erro_w, k + 1, 255);
		elsif (ds_erro_w IS NOT NULL AND ds_erro_w::text <> '') then
			cd_erro_w 	:= replace(ds_erro_w, ' ','');
			ds_erro_w	:= '';
		end if;
		if (cd_erro_w IS NOT NULL AND cd_erro_w::text <> '') then
			begin
			k := position('(' in cd_erro_w);
			if (k > 1) then
				cd_erro_ler_w := substr(cd_erro_w, 1, k-1);
			else
				cd_erro_ler_w := substr(cd_erro_w,1,5);
			end if;

		/*	select count(*)
			into	 reg
			from	 restringe_inconsistencia b,
				 inconsistencia a
			where	a.cd_inconsistencia	= cd_erro_ler_w
			  and	a.nr_sequencia		= b.nr_seq_inconsistencia
			  and	nvl(b.cd_convenio, cd_convenio_p)			=  cd_convenio_p
			  and	nvl(b.ie_tipo_convenio, ie_tipo_convenio_w)		= ie_tipo_convenio_w
			  and	nvl(b.ie_tipo_atendimento, ie_tipo_atendimento_p)	= ie_tipo_atendimento_p
			  and	nvl(b.ie_clinica,ie_clinica_w)				= ie_clinica_w;*/
 -- substituido pelo C01 tdpaula OS 321683
			reg := 0;
			open C01;
			loop
			fetch C01 into
				ie_restringe_w;
			EXIT WHEN NOT FOUND; /* apply on C01 */
				begin
				if (ie_restringe_w = 'S') then
					reg:=1;
				else
					reg:=0;
				end if;
				end;
			end loop;
			close C01;

			/*  verifica se pode restringir a inconsistencia de sus internados */

			ie_permite_restringir_w	:= 'S';
			if (ie_tipo_convenio_w	= 3)	and (ie_tipo_atendimento_p	= 1)	then
				begin
				select	coalesce(obter_alterar_inconsistencia(
						coalesce(somente_numero(cd_erro_ler_w),0),'R'),'S')
				into STRICT	ie_permite_restringir_w
				;
				end;
			end if;

			if (reg	> 0)			and (ie_permite_restringir_w = 'N')	then
				reg	:= 0;
			end if;

			if (reg = 0) then
				ds_inconsistencia_w	:= ds_inconsistencia_w	||
								substr(cd_erro_w,1,length(cd_erro_w))|| ' ';
			end if;
			end;
		end if;
		end;
	END LOOP;
	ds_inconsistencia_p		:= ds_inconsistencia_w;
end if;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE restringir_inconsistencia ( cd_estabelecimento_p bigint, cd_convenio_p bigint, cd_categoria_p text, ie_tipo_atendimento_p bigint, ie_clinica_p bigint, nr_seq_classif_atend_p bigint, ds_inconsistencia_p INOUT text) FROM PUBLIC;

