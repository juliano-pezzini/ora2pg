-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE fis_inserir_notas_lote (nr_seq_lote_p bigint, nm_usuario_p text, cd_estabelecimento_p text) AS $body$
DECLARE


ie_tipo_nota_w		varchar(2);
dt_inicial_w		timestamp;
dt_final_w		timestamp;
nr_seq_nota_fiscal_w	varchar(10);
ie_opcao_data_w		varchar(1);
qt_operacao_w		bigint := 0;
ie_filtro_operacao_w	varchar(1) := 'N';

C01 CURSOR FOR
	SELECT	n.nr_sequencia
	FROM fis_situacao_nf s, nota_fiscal n, operacao_nota o
LEFT OUTER JOIN fis_operacao_nf f ON (o.cd_operacao_nf = f.cd_operacao_nf)
WHERE n.cd_operacao_nf = o.cd_operacao_nf  and n.ie_situacao = s.ie_situacao_nf and o.ie_operacao_fiscal = ie_tipo_nota_w and CASE WHEN 	ie_opcao_data_w='N' THEN  trunc(n.dt_atualizacao_estoque) WHEN 	ie_opcao_data_w='S' THEN  trunc(n.dt_entrada_saida) END  between trunc(dt_inicial_w) and trunc(dt_final_w) and o.cd_operacao_nf in CASE WHEN ie_filtro_operacao_w='S' THEN (f.cd_operacao_nf) WHEN ie_filtro_operacao_w='N' THEN o.cd_operacao_nf END and cd_estabelecimento = cd_estabelecimento_p and (dt_atualizacao_estoque IS NOT NULL AND dt_atualizacao_estoque::text <> '') and not exists (SELECT	1
				from	fis_lote_nota_fiscal x
				where	x.nr_seq_nota_fiscal = n.nr_sequencia);


BEGIN

ie_opcao_data_w	:=	substr(coalesce(obter_valor_param_usuario(9899, 21, Obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p), 'N'), 1, 1);

select	count(*)
into STRICT	qt_operacao_w
from	fis_operacao_nf;

if (qt_operacao_w > 0) then
	ie_filtro_operacao_w := 'S';
end if;

select	ie_tipo_lote,
	dt_inicial,
	dt_final
into STRICT	ie_tipo_nota_w,
	dt_inicial_w,
	dt_final_w
from	fis_lote
where	nr_sequencia = nr_seq_lote_p;

OPEN c01;
LOOP
FETCH c01 INTO
	nr_seq_nota_fiscal_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	insert into fis_lote_nota_fiscal(nr_sequencia,
					  nr_seq_lote,
					  nr_seq_nota_fiscal,
					  dt_atualizacao,
					  nm_usuario,
					  dt_atualizacao_nrec,
					  nm_usuario_nrec)
	values (nextval('fis_lote_nota_fiscal_seq'),
					  nr_seq_lote_p,
					  nr_seq_nota_fiscal_w,
					  clock_timestamp(),
					  nm_usuario_p,
					  clock_timestamp(),
					  nm_usuario_p);

END LOOP;
CLOSE C01;

update	fis_lote
set	ie_status_lote = 'F',
	dt_geracao = clock_timestamp()
where	nr_sequencia = nr_seq_lote_p;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE fis_inserir_notas_lote (nr_seq_lote_p bigint, nm_usuario_p text, cd_estabelecimento_p text) FROM PUBLIC;

