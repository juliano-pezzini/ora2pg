-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE baca_acerto_material_tipo_est (nm_usuario_p text) AS $body$
DECLARE


cd_material_w		varchar(6);
nr_sequencia_w		bigint;
nr_seq_unidade_hosp_w	bigint;
nr_seq_unidade_oper_w	bigint;
qt_registro_w		bigint;

c01 CURSOR FOR
SELECT	a.cd_material
into STRICT	cd_material_w
from	estabelecimento b,
	material_estab a
where	a.cd_estabelecimento	= b.cd_estabelecimento
and	b.nr_seq_unid_neg	= nr_seq_unidade_hosp_w
order by
	a.cd_material;

c02 CURSOR FOR
SELECT	a.cd_material
into STRICT	cd_material_w
from	pls_material a
where	(a.cd_material IS NOT NULL AND a.cd_material::text <> '')
order by
	a.cd_material;


BEGIN

select	max(nr_seq_unidade_hosp)
into STRICT	nr_seq_unidade_hosp_w
from	parametro_gestao_material;

if (nr_seq_unidade_hosp_w IS NOT NULL AND nr_seq_unidade_hosp_w::text <> '') then
	open c01;
	loop
	fetch c01 into
		cd_material_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		select	count(*)
		into STRICT	qt_registro_w
		from	material_tipo_local_est a
		where	a.cd_material = cd_material_w;

		if (qt_registro_w = 0) then
			select	nextval('material_tipo_local_est_seq')
			into STRICT	nr_sequencia_w
			;

			insert into material_tipo_local_est(nr_sequencia,
				cd_material,
				dt_atualizacao,
				dt_atualizacao_nrec,
				ie_distribuidora,
				ie_farmacia,
				ie_operadora,
				ie_prestador,
				nm_usuario,
				nm_usuario_nrec)
			values (nr_sequencia_w,
				cd_material_w,
				clock_timestamp(),
				clock_timestamp(),
				'N',
				'N',
				'N',
				'S',
				nm_usuario_p,
				nm_usuario_p);
		end if;
		end;
	end loop;
	close c01;
end if;

select	max(nr_seq_unidade_oper)
into STRICT	nr_seq_unidade_oper_w
from	parametro_gestao_material;

if (nr_seq_unidade_oper_w IS NOT NULL AND nr_seq_unidade_oper_w::text <> '') then
	open c02;
	loop
	fetch c02 into
		cd_material_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin
		select	count(*)
		into STRICT	qt_registro_w
		from	material_tipo_local_est a
		where	a.cd_material = cd_material_w;

		if (qt_registro_w = 0) then
			select	nextval('material_tipo_local_est_seq')
			into STRICT	nr_sequencia_w
			;

			insert into material_tipo_local_est(nr_sequencia,
				cd_material,
				dt_atualizacao,
				dt_atualizacao_nrec,
				ie_distribuidora,
				ie_farmacia,
				ie_operadora,
				ie_prestador,
				nm_usuario,
				nm_usuario_nrec)
			values (nr_sequencia_w,
				cd_material_w,
				clock_timestamp(),
				clock_timestamp(),
				'N',
				'N',
				'S',
				'N',
				nm_usuario_p,
				nm_usuario_p);
		else
			update 	material_tipo_local_est
			set	dt_atualizacao	= clock_timestamp(),
				ie_operadora	= 'S',
				nm_usuario	= nm_usuario_p
			where	cd_material	= cd_material_w;

		end if;
		end;
	end loop;
	close c02;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE baca_acerto_material_tipo_est (nm_usuario_p text) FROM PUBLIC;

