-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_lib_fat_conta_pos ( nr_seq_lib_fat_conta_p pls_lib_fat_conta.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE

 
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
Finalidade: 
------------------------------------------------------------------------------------------------------------------- 
Locais de chamada direta: 
[ ] Objetos do dicionário [ ] Tasy (Delphi/Java) [ ] Portal [ ] Relatórios [ ] Outros: 
 ------------------------------------------------------------------------------------------------------------------ 
Pontos de atenção: 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
 
 
c01 CURSOR(	nr_seq_lib_fat_conta_w	pls_lib_fat_conta.nr_sequencia%type) FOR 
	SELECT	d.nr_sequencia 
	FROM pls_lib_fat_conta s, pls_conta_pos_estabelecido d, pls_conta_pos_cab_v a, pls_segurado b
LEFT OUTER JOIN pls_plano c ON (b.nr_seq_plano = c.nr_sequencia)
WHERE b.nr_sequencia	= a.nr_seq_segurado and a.nr_sequencia	= d.nr_seq_conta  and d.nr_seq_conta	= s.nr_seq_conta and s.nr_sequencia	= nr_seq_lib_fat_conta_p and d.ie_status_faturamento = 'L' and coalesce(d.nr_seq_mensalidade_seg::text, '') = '' and coalesce(d.nr_seq_sca::text, '') = '' and ((coalesce(c.ie_preco,'3') = '1' and 
		coalesce(b.dt_rescisao::text, '') = '') or 
		coalesce(c.ie_preco,'3') in ('2','3')) and not exists (	SELECT	1 
				from	pls_mensalidade_segurado	y, 
					pls_mensalidade			w, 
					pls_mensalidade_seg_item	x 
				where	y.nr_sequencia	= x.nr_seq_mensalidade_seg 
				and	w.nr_sequencia	= y.nr_seq_mensalidade 
				and	a.nr_sequencia	= x.nr_seq_conta 
				and	coalesce(w.ie_cancelamento::text, '') = '' 
				and	x.ie_tipo_item in ('4', '6', '7')) and coalesce(d.nr_seq_evento_fat::text, '') = '' and coalesce(d.nr_seq_lote_fat::text, '') = '' and (d.ie_situacao = 'A' or coalesce(d.ie_situacao::text, '') = '') and not exists (select	1 
				from	pls_ajuste_fatura_conta x 
				where	x.nr_seq_conta	= a.nr_sequencia 
				and	x.ie_status	= 'N');

c02 CURSOR(	nr_seq_lib_fat_conta_pc	pls_lib_fat_conta.nr_sequencia%type) FOR 
SELECT	nr_seq_conta_pos_estab 
from	pls_lib_fat_conta_pos 
where	nr_seq_lib_fat_conta	= nr_seq_lib_fat_conta_pc;

 
BEGIN 
update	pls_lib_fat_conta 
set	dt_inicio_recalculo	= clock_timestamp() 
where	nr_sequencia	= nr_seq_lib_fat_conta_p;
 
 
for r_C01_w in C01( nr_seq_lib_fat_conta_p ) loop 
	insert into pls_lib_fat_conta_pos(nr_sequencia, 
		dt_atualizacao, 
		nm_usuario, 
		dt_atualizacao_nrec, 
		nm_usuario_nrec, 
		nr_seq_lib_fat_conta, 
		nr_seq_conta_pos_estab) 
	SELECT	nextval('pls_lib_fat_conta_pos_seq'), 
		clock_timestamp(), 
		nm_usuario_p, 
		clock_timestamp(), 
		nm_usuario_p, 
		nr_seq_lib_fat_conta_p, 
		r_c01_w.nr_sequencia 
	;
 
 
end loop;
 
for r_C02_w in C02( nr_seq_lib_fat_conta_p ) loop 
	CALL pls_recalc_pos_estab_fat(r_c02_w.nr_seq_conta_pos_estab, cd_estabelecimento_p, nm_usuario_p);
end loop;
 
update	pls_lib_fat_conta 
set	dt_fim_recalculo	= clock_timestamp() 
where	nr_sequencia	= nr_seq_lib_fat_conta_p;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_lib_fat_conta_pos ( nr_seq_lib_fat_conta_p pls_lib_fat_conta.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;

