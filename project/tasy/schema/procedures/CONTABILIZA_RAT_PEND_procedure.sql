-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE contabiliza_rat_pend ( nr_lote_contabil_p bigint, nm_usuario_p text, ie_exclusao_p text, ds_retorno_p INOUT text) AS $body$
DECLARE

 
dt_referencia_w			timestamp;
cd_estabelecimento_w			bigint;

cd_centro_receita_w			bigint;
cd_conta_receita_w			varchar(40);
cd_conta_Cliente_w			varchar(40);
cd_conta_fornec_w			varchar(40);
cd_conta_custo_w			varchar(40);
vl_contabil_w				double precision;

cd_conta_contabil_w			varchar(40);
cd_centro_custo_w			varchar(40);
ie_debito_credito_w			varchar(40);

nr_sequencia_movto_w			integer;
cd_historico_w     		bigint:= 602;
ds_compl_historico_w			varchar(255);
dt_movimento_w			timestamp;
dt_estorno_w				timestamp;
ds_doc_agrupamento_w			varchar(50)	:= '0';
nr_seq_agrupamento_w			bigint	:= 0;

ds_compl_reversao_w			varchar(30);

C010 CURSOR FOR 
	SELECT cd_conta_cliente_w, 
		null cd_centro_custo, 
		'D', 
		sum(vl_cobrar) vl_cobrar 
	from	Proj_Rat_Pend 
	where	dt_referencia			= dt_referencia_w 
	and	vl_cobrar			> 0 
	
union all
 
	SELECT cd_conta_receita_w, 
		cd_centro_receita_w, 
		'C', 
		sum(vl_cobrar) vl_cobrar 
	from	Proj_Rat_Pend 
	where	dt_referencia			= dt_referencia_w 
	and	vl_cobrar			> 0 
	
union all
 
	Select cd_conta_custo_w, 
		cd_centro_receita_w, 
		'D', 
		sum(vl_pagar) vl_pagar 
	from	Proj_Rat_Pend 
	where	dt_referencia			= dt_referencia_w 
	and	vl_pagar			> 0 
	
union all
 
	Select cd_conta_fornec_w, 
		null, 
		'C', 
		sum(vl_pagar) vl_pagar 
	from	Proj_Rat_Pend 
	where	dt_referencia			= dt_referencia_w 
	and	vl_pagar			> 0;

 

BEGIN 
 
select	trunc(dt_referencia,'month'), 
	cd_estabelecimento 
into STRICT	dt_referencia_w, 
	cd_estabelecimento_w 
from 	lote_contabil 
where 	nr_lote_contabil	= nr_lote_contabil_p;
 
dt_movimento_w := pkg_date_utils.get_datetime(pkg_date_utils.end_of(dt_referencia_w, 'MONTH'), dt_referencia_w);
 
select cd_conta_rec_pre, 
	cd_conta_cliente_pre, 
	cd_centro_rec_pre, 
	cd_conta_custo_pre, 
	cd_conta_fornec_pre, 
	cd_historico 
into STRICT	cd_conta_receita_w, 
	cd_conta_cliente_w, 
	cd_centro_receita_w, 
	cd_conta_custo_w, 
	cd_conta_fornec_w, 
	cd_historico_w 
from	com_parametro 
where	cd_estabelecimento	= cd_estabelecimento_w;
 
if (ie_exclusao_p = 'S') then 
	delete from movimento_contabil 
	where nr_lote_contabil	= nr_lote_contabil_p;
	Update lote_contabil 
	set 	 vl_credito = 0, 
		 vl_debito = 0 
	where	 nr_lote_contabil = nr_lote_contabil_p;
 
	/*ds_retorno_p	:= 'Lote excluido';*/
 
	ds_retorno_p	:= wheb_mensagem_pck.get_texto(299561);
else 
	delete from w_movimento_contabil;
	OPEN C010;
	LOOP 
	FETCH C010 INTO 
		cd_conta_contabil_w, 
		cd_centro_custo_w, 
		ie_debito_credito_w, 
		vl_contabil_w;
	EXIT WHEN NOT FOUND; /* apply on c010 */
		nr_sequencia_movto_w	:= nr_sequencia_movto_w + 1;
		ds_compl_historico_w  := null;
		ds_compl_historico_w  := '';
		INSERT INTO W_MOVIMENTO_CONTABIL( 
			nr_lote_contabil, 
			nr_sequencia, 
			cd_conta_contabil, 
			ie_debito_credito, 
			cd_historico, 
			dt_movimento, 
			vl_movimento, 
			cd_centro_custo, 
			ds_compl_historico, 
			ds_doc_agrupamento, 
			nr_seq_agrupamento, 
			nr_seq_trans_fin, 
			cd_cgc, 
			cd_pessoa_fisica, 
			nr_documento)	 
		values ( 
			nr_lote_contabil_p, 
			nr_sequencia_movto_w, 
			cd_conta_Contabil_w, 
			ie_debito_credito_w, 
			cd_historico_w, 
			dt_movimento_w, 
			vl_contabil_w, 
			cd_centro_custo_w, 
			ds_compl_historico_w, 
			ds_doc_agrupamento_w, 
			nr_seq_agrupamento_w,	 
			NULL, null, 
			null, null);
	END LOOP;
	CLOSE C010;
	CALL Agrupa_Movimento_Contabil(nr_lote_contabil_p, nm_usuario_p);
 
	/*ds_retorno_p	:= 'Lote gerado';*/
 
	ds_retorno_p	:= wheb_mensagem_pck.get_texto(299562);
end if;
 
ds_compl_reversao_w	:= wheb_mensagem_pck.get_texto(299564);
 
/* 	Reverter os lan√ßamentos no primeiro dia do mes subsequente */
 
dt_estorno_w	:= PKG_DATE_UTILS.start_of(PKG_DATE_UTILS.ADD_MONTH(dt_referencia_w,1,0),'month',0);
 
INSERT INTO MOVIMENTO_CONTABIL( 
	nr_lote_contabil, nr_sequencia, cd_conta_contabil, 
	ie_debito_credito, cd_historico, dt_movimento, 
	vl_movimento, dt_atualizacao, nm_usuario, 
	cd_centro_custo, ds_compl_historico, 
	nr_seq_trans_fin, nr_documento) 
SELECT 
	nr_lote_contabil, 
	nr_sequencia + 10000, 
	cd_conta_contabil, 
	CASE WHEN ie_debito_credito='D' THEN 'C'  ELSE 'D' END , 
	cd_historico, 
	dt_estorno_w, 
	vl_movimento, 
	dt_atualizacao, 
	nm_usuario, 
	cd_centro_custo, 
	ds_compl_historico || ' ' || ds_compl_reversao_w || ' ', 
	nr_seq_trans_fin, 
	nr_documento 
from 	Movimento_Contabil 
where	nr_lote_contabil 	= nr_lote_contabil_p 
and	ie_exclusao_p		= 'N';
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE contabiliza_rat_pend ( nr_lote_contabil_p bigint, nm_usuario_p text, ie_exclusao_p text, ds_retorno_p INOUT text) FROM PUBLIC;

