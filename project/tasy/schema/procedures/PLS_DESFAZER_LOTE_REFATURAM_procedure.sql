-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_desfazer_lote_refaturam ( nr_seq_lote_ref_p bigint, ie_commit_p text, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE

					 
/*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
Finalidade: Desfazer o lote de refaturamento/faturamento gerado pelo lote de discussão 
------------------------------------------------------------------------------------------------------------------- 
Locais de chamada direta: 
[ ] Objetos do dicionário [X] Tasy (Delphi/Java) [ ] Portal [ ] Relatórios [ ] Outros: 
 ------------------------------------------------------------------------------------------------------------------ 
Pontos de atenção: 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/ 
					 
qt_registro_w			bigint;
nr_seq_fatura_w			bigint;
nr_seq_fatura_evento_w		bigint;
nr_seq_fatura_conta_w		bigint;
nr_seq_lote_disc_w		bigint;
ie_novo_pos_estab_w		pls_visible_false.ie_novo_pos_estab%type := 'N';

C01 CURSOR FOR 
	SELECT	nr_sequencia 
	from	pls_fatura	 
	where	nr_seq_lote = nr_seq_lote_ref_p 
	order by nr_sequencia desc; -- se o cliente cancelou a fatura, tem que excluir primeiro as faturas estornadas e depois as canceladas 
C02 CURSOR FOR 
	SELECT	nr_sequencia 
	from	pls_fatura_evento 
	where	nr_seq_fatura = nr_seq_fatura_w;
	
C03 CURSOR FOR 
	SELECT	nr_sequencia 
	from	pls_fatura_conta 
	where	nr_seq_fatura_evento = nr_seq_fatura_evento_w;
		

BEGIN 
 
select	coalesce(max(ie_novo_pos_estab), 'N') 
into STRICT	ie_novo_pos_estab_w 
from	pls_visible_false 
where	cd_estabelecimento = cd_estabelecimento_p;
 
if (ie_novo_pos_estab_w = 'S') then 
	CALL pls_faturamento_pck.desfazer_lote_refaturam(nr_seq_lote_ref_p, ie_commit_p, cd_estabelecimento_p, nm_usuario_p);
else 
	select	count(1) 
	into STRICT	qt_registro_w 
	from	pls_fatura 
	where	nr_seq_lote	= nr_seq_lote_ref_p 
	and	(nr_titulo IS NOT NULL AND nr_titulo::text <> '');
 
	select	max(nr_seq_lote_disc) 
	into STRICT	nr_seq_lote_disc_w 
	from	pls_lote_faturamento 
	where	nr_sequencia	= nr_seq_lote_ref_p;
 
	if (qt_registro_w = 0) then 
		delete 	FROM w_pls_lote_fat_item 
		where	nr_seq_lote = nr_seq_lote_ref_p;
 
		open C01;
		loop 
		fetch C01 into 
			nr_seq_fatura_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin 
			open C02;
			loop 
			fetch C02 into 
				nr_seq_fatura_evento_w;
			EXIT WHEN NOT FOUND; /* apply on c02 */
				begin 
				open C03;
				loop 
				fetch C03 into 
					nr_seq_fatura_conta_w;
				EXIT WHEN NOT FOUND; /* apply on C03 */
					begin 
					delete 	FROM pls_fatura_proc 
					where	nr_seq_fatura_conta = nr_seq_fatura_conta_w;
					 
					delete	FROM pls_fatura_mat 
					where	nr_seq_fatura_conta = nr_seq_fatura_conta_w;				
					end;
				end loop;
				close C03;
				 
				delete	FROM pls_fatura_conta 
				where	nr_seq_fatura_evento = nr_seq_fatura_evento_w;			
				end;
			end loop;
			close C02;
			end;
			 
			delete	FROM pls_fatura_guia_envio 
			where	nr_seq_fatura = nr_seq_fatura_w;
			 
			delete	FROM pls_fatura_motivo_imp_cob 
			where	nr_seq_fatura = nr_seq_fatura_w;
			 
			delete	FROM pls_fatura_evento 	 
			where 	nr_seq_fatura = nr_seq_fatura_w;
		end loop;
		close C01;
		 
		delete	FROM pls_lote_fat_inconsist 
		where	nr_seq_lote = nr_seq_lote_ref_p;
		 
		delete	FROM pls_fatura 
		where	nr_seq_lote = nr_seq_lote_ref_p;
		 
		update	pls_conta_pos_estabelecido 
		set	ie_status_faturamento	= 'C', 
			ie_situacao		= 'I', 
			nr_seq_lote_fat		 = NULL, 
			nr_seq_evento_fat	 = NULL, 
			dt_atualizacao		= clock_timestamp(), 
			nm_usuario		= nm_usuario_p, 
			nr_seq_disc_proc	 = NULL, 
			nr_seq_disc_mat		 = NULL 
		where	nr_seq_lote_disc	= nr_seq_lote_disc_w;
		 
		delete	FROM pls_conta_pos_estab_contab 
		where	nr_seq_lote_fat		= nr_seq_lote_ref_p;
		 
		delete	FROM pls_lote_faturamento 
		where	nr_sequencia = nr_seq_lote_ref_p;
 
		if (coalesce(ie_commit_p,'N') = 'S') then 
			commit;
		end if;
	else 
		CALL wheb_mensagem_pck.exibir_mensagem_abort(211445);
	end if;
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_desfazer_lote_refaturam ( nr_seq_lote_ref_p bigint, ie_commit_p text, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

