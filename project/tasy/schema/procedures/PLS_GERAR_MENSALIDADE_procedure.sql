-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_mensalidade ( nr_seq_lote_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, nr_seq_segurado_p bigint, dt_referencia_p timestamp) AS $body$
DECLARE


nr_contrato_w			bigint;
nr_seq_pagador_w		bigint;
nr_seq_mensalidade_w		bigint;
qt_mensalidades_w		bigint;
dt_inicial_w			timestamp;
dt_final_w			timestamp;
dt_vencimento_w			timestamp;
dt_mesano_referencia_w		timestamp;
vl_total_pagador_w		double precision;
dt_dia_vencimento_w		smallint;
ie_tipo_mensalidade_w		varchar(3);
ie_nova_mens_w			varchar(1);
nr_seq_mensalidade_ww		bigint;
dt_primeira_mensalidade_w	timestamp;
nr_seq_pagador_mens_w		bigint;
nr_dia_inicial_venc_w		smallint;
nr_dia_final_venc_w		smallint;
cd_banco_w			integer;
cd_agencia_bancaria_w		varchar(8);
ie_digito_agencia_w		varchar(1);
cd_conta_w			varchar(20);
ie_digito_conta_w		varchar(2);
ie_endereco_boleto_w		varchar(4);
ie_tipo_contrato_w		varchar(2);
nr_seq_conta_banco_w		bigint;
nr_seq_conta_banco_deb_aut_w	bigint;
qt_mens_pagador_w		integer;
nr_seq_contrato_pag_w		bigint;
qt_interv_mes_mensalidade_w	integer	:= 0;
qt_mes_mensalidade_w		integer	:= 0;
nr_seq_regra_contr_w		bigint;
nr_seq_forma_cobranca_w		bigint;
dt_mes_mens_segurado_w		timestamp;
ie_existe_mens_w		varchar(1);
ie_gerar_mensalidade_w		varchar(1)	:= 'S';
nm_pagador_w			pessoa_juridica.ds_razao_social%type;
qt_mes_competencia_w		bigint;
nr_seq_forma_cobranca_lote_w	varchar(2);
cd_banco_lote_w			integer;
nr_contrato_pag_w		bigint;
qt_bonific_w			bigint;
nr_seq_empresa_w		bigint;
ie_taxa_emissao_boleto_w	varchar(2);
ie_mes_vencimento_w		varchar(1);
dt_inicio_geracao_w		timestamp;
dt_fim_geracao_w		timestamp;
vl_mens_pagador_w		double precision;
qt_excecoes_w			integer	:= 0;
nr_empresa_w			bigint;
ie_reajuste_faixa_etaria_w	varchar(1);
qt_lote_reajuste_w		bigint;
nr_seq_lote_reaj_w		bigint;
ie_agrupar_valor_w		varchar(1);
ie_gerar_mensalidade_futura_w	varchar(1);
qt_meses_mensalidade_futura_w	bigint;
nr_seq_grupo_contrato_w		bigint;
nr_seq_compl_pf_tel_adic_w	bigint;
ie_tipo_pagador_w		varchar(1);
nr_contrato_intercambio_w	bigint;
nr_seq_pagador_fin_w		bigint;
ie_tipo_lote_w			varchar(2);
ie_geracao_nota_titulo_w	varchar(2);
ie_geracao_nota_titulo_ops_w	varchar(2);
ie_preco_w			varchar(2);
ie_tipo_formacao_preco_w	varchar(1);
qt_erros_pagador_w		bigint;
qt_regra_pos_estab_fatura_w	bigint;
vl_tx_boleto_w			double precision;
nr_seq_compl_pj_w		bigint;
dt_mesano_referencia_fimdia_w	timestamp;
dt_referencia_trunc_month_w	timestamp;
qt_amortizacao_w		bigint;
nr_seq_grupo_intercambio_w	bigint;
cd_grupo_intercambio_w		varchar(10);
nr_seq_classif_itens_w		bigint;
ie_pagador_beneficio_obito_w	varchar(10);
qt_segundos_geracao_w		bigint;
hr_geracao_lote_w		varchar(15);
qt_horas_lote_w			bigint;
qt_minutos_lote_w		bigint;
qt_segundos_lote_w		bigint;
vl_minimo_abat_fatura_w		double precision;
nr_seq_segurado_mens_w		bigint;
vl_mens_segurado_w		double precision;
nr_seq_mensalidade_segurado_w	bigint;
dt_referencia_lanc_w		timestamp;
nr_seq_segurado_w		bigint;
ie_gerar_cobr_escrit_w		varchar(1);
cd_tipo_portador_w		integer;
cd_portador_w			bigint;
vl_mens_segurado_abat_w		double precision;
ie_erro_inf_financ_pag_w	varchar(1);
nr_seq_grupo_preco_w		bigint;
nr_seq_grupo_preco_lote_w	bigint;
vl_mens_nc_w			double precision;
ie_vencimento_mens_fut_w	varchar(1);
dt_vencimento_mens_fut_w	timestamp;
ie_calc_primeira_mens_w		varchar(1);
ie_contrato_w			varchar(2);
ie_tipo_contratacao_w		varchar(2);
nr_serie_mensalidade_w		pls_mensalidade.nr_serie_mensalidade%type;
ie_situacao_trabalhista_w	varchar(10);
ie_primeira_mensalidade_w	varchar(1);
ie_proporcional_w		varchar(1);
ie_tipo_contrato_intercambio_w	varchar(2);
nr_parcela_w			pls_mensalidade.nr_parcela%type;
dt_contrato_w			timestamp;
qt_regra_inscr_pag_w		bigint;
qt_regra_inscr_sca_w		bigint;
nr_seq_regra_serie_nf_w		bigint;
ie_tipo_contrato_serie_w	varchar(5)	:= null;
ie_situacao_trabalhist_serie_w	varchar(10)	:= null;
qt_regra_pro_rata_dia_w		bigint;
ie_antecipacao_geracao_w	varchar(1);
dt_contabilizacao_w		timestamp;
ie_consiste_ender_bol_w		varchar(10);
qt_nota_credito_w		bigint;
nr_seq_grupo_inter_w		bigint;
vl_bonificacao_w		double precision;
qt_dias_incrementados_venc_w	bigint;
ie_geracao_nota_titulo_pj_w	varchar(2);
ie_geracao_nota_titulo_pf_w	varchar(2);
cd_pf_pagador_w			varchar(10);
qt_suspensao_cobr_mens_w	bigint;
dt_mensalidade_lote_w		timestamp;
qt_mens_parc_w			bigint;
nr_seq_classif_itens_serie_w	bigint;
ie_permite_gerar_mens_contab_w	varchar(1);
dt_contabilizacao_lote_w	timestamp;
ie_geracao_nota_tit_pag_fin_w	varchar(2);
nr_seq_mensalidade_limite_w	bigint;
nr_contrato_principal_pag_w	bigint;
nr_seq_tipo_compl_adic_w	bigint;
ie_endereco_boleto_lote_w	varchar(4);
ie_tipo_pessoa_pagador_w	varchar(2);
nr_seq_grupo_contr_relac_w	bigint;
qt_lote_gerado_w		bigint;
dt_inicio_adesao_w		timestamp;
dt_fim_adesao_w			timestamp;
qt_mens_fora_primeira_parc_w	bigint;
cd_cgc_pagador_w		pessoa_juridica.cd_cgc%type;
nr_seq_contrato_plano_w		pls_contrato_plano.nr_sequencia%type;
cd_condicao_pagamento_w		pls_contrato_pagador_fin.cd_condicao_pagamento%type;
nr_seq_intercambio_plano_w	pls_intercambio_plano.nr_sequencia%type;
cd_portador_pagador_w		pls_contrato_pagador_fin.cd_portador%type;
vl_bonificacao_embutido_w	pls_mensalidade_seg_item.vl_bonificacao_embutido%type;
nr_seq_classif_benef_w		pls_lote_mensalidade.nr_seq_classif_benef%type;
ie_restringe_uma_mens_w		pls_regra_mens_contrato.ie_restringe_uma_mens_pag_mes%type;
ie_tipo_pagador_ww		varchar(2);
qt_registro_w			smallint := 0;
ie_gerar_mensalidade_ww		varchar(1) := 'S';
nr_seq_susp_mens_w		pls_contrato_susp_mens.nr_sequencia%type;
nr_seq_motivo_susp_w		pls_contrato_susp_mens.nr_seq_motivo_suspensao%type;
qt_item_excecao_w		smallint;
nr_seq_item_mensalidade_w	pls_mensalidade_seg_item.nr_sequencia%type;
ie_envia_cobranca_w		pls_contrato_pagador.ie_envia_cobranca%type;

c01 CURSOR FOR  -- Pagador ***Responsavel por fazer o insert na pls_mensalidade ***
	SELECT	distinct 'C' ie_tipo_pagador, --Pagador normal do contrato
		c.nr_contrato nr_contrato_pag,
		a.nr_sequencia nr_seq_pagador,
		a.ie_endereco_boleto ie_endereco_boleto,
		a.nr_seq_contrato nr_seq_contrato_pag,
		(	SELECT x.nm_pessoa_fisica
			from	pessoa_fisica x
			where	x.cd_pessoa_fisica = a.cd_pessoa_fisica
			
union all

			select	y.ds_razao_social
			from	pessoa_juridica y
			where	y.cd_cgc	= a.cd_cgc) nm_pagador,
		a.ie_taxa_emissao_boleto,
		d.ie_mes_vencimento,
		d.nr_seq_empresa nr_empresa,
		a.nr_seq_compl_pf_tel_adic,
		d.nr_sequencia nr_seq_pagador_fin,
		a.nr_seq_compl_pj,
		a.ie_calc_primeira_mens,
		a.ie_situacao_trabalhista,
		c.dt_contrato,
		a.nr_seq_classif_itens,
		a.cd_pessoa_fisica cd_pf_pagador,
		null nr_seq_grupo_intercambio,
		a.nr_seq_tipo_compl_adic,
		a.cd_cgc
	FROM pls_segurado_pagador h, pls_segurado b, pls_contrato_grupo g
LEFT OUTER JOIN pls_grupo_contrato f ON (g.nr_seq_grupo = f.nr_sequencia)
, pls_contrato c
LEFT OUTER JOIN pls_contrato_grupo g ON (c.nr_sequencia = g.nr_seq_contrato)
, pls_contrato_pagador a
LEFT OUTER JOIN pls_contrato_pagador_fin d ON (a.nr_sequencia = d.nr_seq_pagador)
LEFT OUTER JOIN pls_desc_empresa e ON (d.nr_seq_empresa = e.nr_sequencia)
WHERE a.nr_seq_contrato	= c.nr_sequencia     and h.nr_seq_segurado	= b.nr_sequencia and c.cd_estabelecimento	= cd_estabelecimento_p and c.ie_situacao <> '1' and ((a.nr_sequencia	= nr_seq_pagador_mens_w and	(nr_seq_pagador_mens_w IS NOT NULL AND nr_seq_pagador_mens_w::text <> '')) or coalesce(nr_seq_pagador_mens_w::text, '') = '') and ((coalesce(nr_dia_inicial_venc_w::text, '') = '') or (d.dt_dia_vencimento >= nr_dia_inicial_venc_w)) and ((coalesce(nr_dia_final_venc_w::text, '') = '') or (d.dt_dia_vencimento <= nr_dia_final_venc_w)) and h.nr_seq_pagador = a.nr_sequencia and ((b.nr_sequencia = nr_seq_segurado_p) or (coalesce(nr_seq_segurado_p::text, '') = '')) and ((b.nr_seq_classificacao = nr_seq_classif_benef_w) or (coalesce(nr_seq_classif_benef_w::text, '') = '')) and b.dt_contratacao between coalesce(dt_inicio_adesao_w,b.dt_contratacao) and coalesce(dt_fim_adesao_w,b.dt_contratacao + 86399/86400) and (coalesce(nr_contrato_w::text, '') = '' or ((c.nr_sequencia = nr_contrato_w) or (c.nr_contrato_principal = nr_contrato_w))) and ((f.nr_sequencia = nr_seq_grupo_contrato_w) or (coalesce(nr_seq_grupo_contrato_w::text, '') = '')) and ((coalesce(cd_banco_lote_w::text, '') = '') or (d.cd_banco = cd_banco_lote_w)) and ((coalesce(nr_seq_forma_cobranca_lote_w::text, '') = '') or (d.nr_seq_forma_cobranca = nr_seq_forma_cobranca_lote_w)) and ((e.nr_seq_empresa_superior = nr_seq_empresa_w or e.nr_sequencia = nr_seq_empresa_w) or (coalesce(nr_seq_empresa_w::text, '') = '')) and ((d.cd_tipo_portador = cd_tipo_portador_w) or (coalesce(cd_tipo_portador_w::text, '') = '')) and ((d.cd_portador = cd_portador_w) or (coalesce(cd_portador_w::text, '') = '')) and coalesce(d.dt_inicio_vigencia,dt_mesano_referencia_fimdia_w) <= dt_mesano_referencia_fimdia_w and ((d.dt_fim_vigencia >= dt_mesano_referencia_fimdia_w) or (coalesce(d.dt_fim_vigencia::text, '') = '')) and coalesce(nr_contrato_intercambio_w::text, '') = '' and ((a.ie_situacao_trabalhista = ie_situacao_trabalhist_serie_w) or (coalesce(ie_situacao_trabalhist_serie_w::text, '') = '')) and ((ie_tipo_lote_w	= 'A') or (ie_tipo_lote_w	= 'CO')) and ((ie_tipo_contrato_serie_w = 'O') or (coalesce(ie_tipo_contrato_serie_w::text, '') = '')) and ((a.nr_seq_classif_itens = nr_seq_classif_itens_w) or (coalesce(nr_seq_classif_itens_w::text, '') = '')) and ((ie_pagador_beneficio_obito_w = 'S' and (a.nr_seq_regra_obito IS NOT NULL AND a.nr_seq_regra_obito::text <> '')) or (ie_pagador_beneficio_obito_w = 'N')) and ((ie_geracao_nota_tit_pag_fin_w = d.ie_geracao_nota_titulo) or (ie_geracao_nota_tit_pag_fin_w = 'A')) and ((a.ie_endereco_boleto = ie_endereco_boleto_lote_w) or (coalesce(ie_endereco_boleto_lote_w::text, '') = '')) and (a.ie_envia_cobranca = ie_envia_cobranca_w or a.ie_envia_cobranca = 'A' or coalesce(ie_envia_cobranca_w::text, '') = '') and ((coalesce(nr_seq_grupo_preco_lote_w::text, '') = '') or (exists (select	1
							from	pls_preco_contrato		h,
								pls_preco_grupo_contrato	i
							where	h.nr_seq_grupo		= i.nr_sequencia
							and	h.nr_seq_contrato	= c.nr_sequencia
							and	i.nr_sequencia = nr_seq_grupo_preco_lote_w))) and ((ie_tipo_pessoa_pagador_w = 'A') or (ie_tipo_pessoa_pagador_w = 'PF' and (a.cd_pessoa_fisica IS NOT NULL AND a.cd_pessoa_fisica::text <> '')) or (ie_tipo_pessoa_pagador_w = 'PJ' and (a.cd_cgc IS NOT NULL AND a.cd_cgc::text <> '')))
	
union all

	--ITEM
	select	distinct 'C' ie_tipo_pagador, --Pagador complementar do contrato
		c.nr_contrato nr_contrato_pag,
		h.nr_seq_pagador_item,
		a.ie_endereco_boleto ie_endereco_boleto,
		a.nr_seq_contrato nr_seq_contrato_pag,
		(	select x.nm_pessoa_fisica
			from	pessoa_fisica x
			where	x.cd_pessoa_fisica = a.cd_pessoa_fisica
			
UNION ALL

			select	y.ds_razao_social
			from	pessoa_juridica y
			where	y.cd_cgc	= a.cd_cgc) nm_pagador,
		a.ie_taxa_emissao_boleto,
		d.ie_mes_vencimento,
		d.nr_seq_empresa nr_empresa,
		a.nr_seq_compl_pf_tel_adic,
		d.nr_sequencia nr_seq_pagador_fin,
		a.nr_seq_compl_pj,
		a.ie_calc_primeira_mens,
		a.ie_situacao_trabalhista,
		c.dt_contrato,
		a.nr_seq_classif_itens,
		a.cd_pessoa_fisica cd_pf_pagador,
		null nr_seq_grupo_intercambio,
		a.nr_seq_tipo_compl_adic,
		a.cd_cgc
	FROM pls_pagador_item_mens h, pls_contrato_grupo g
LEFT OUTER JOIN pls_grupo_contrato f ON (g.nr_seq_grupo = f.nr_sequencia)
, pls_contrato c
LEFT OUTER JOIN pls_contrato_grupo g ON (c.nr_sequencia = g.nr_seq_contrato)
, pls_contrato_pagador a
LEFT OUTER JOIN pls_contrato_pagador_fin d ON (a.nr_sequencia = d.nr_seq_pagador)
LEFT OUTER JOIN pls_desc_empresa e ON (d.nr_seq_empresa = e.nr_sequencia)
WHERE a.nr_seq_contrato	= c.nr_sequencia     and h.nr_seq_pagador_item	= a.nr_sequencia and c.cd_estabelecimento	= cd_estabelecimento_p and c.ie_situacao <> '1' and ((a.nr_sequencia	= nr_seq_pagador_mens_w and	(nr_seq_pagador_mens_w IS NOT NULL AND nr_seq_pagador_mens_w::text <> '')) or coalesce(nr_seq_pagador_mens_w::text, '') = '') and ((coalesce(nr_dia_inicial_venc_w::text, '') = '') or (d.dt_dia_vencimento >= nr_dia_inicial_venc_w)) and ((coalesce(nr_dia_final_venc_w::text, '') = '') or (d.dt_dia_vencimento <= nr_dia_final_venc_w)) and ((coalesce(nr_seq_segurado_p::text, '') = '') or (exists (select	1
								from	pls_segurado	b,
									pls_segurado_pagador i
								where	i.nr_seq_segurado 	= b.nr_sequencia
								and	i.nr_seq_pagador	= h.nr_seq_pagador --a.nr_sequencia
								and	b.nr_sequencia		= nr_seq_segurado_p
								and	i.dt_inicio_vigencia 	<= dt_inicial_w
								and 	coalesce(i.dt_fim_vigencia,dt_inicial_w) >= dt_inicial_w ))) and (coalesce(nr_contrato_w::text, '') = '' or ((c.nr_sequencia = nr_contrato_w) or (c.nr_contrato_principal = nr_contrato_w))) and ((f.nr_sequencia = nr_seq_grupo_contrato_w) or (coalesce(nr_seq_grupo_contrato_w::text, '') = '')) and ((coalesce(cd_banco_lote_w::text, '') = '') or (d.cd_banco = cd_banco_lote_w)) and ((coalesce(nr_seq_forma_cobranca_lote_w::text, '') = '') or (d.nr_seq_forma_cobranca = nr_seq_forma_cobranca_lote_w)) and ((e.nr_seq_empresa_superior = nr_seq_empresa_w or e.nr_sequencia = nr_seq_empresa_w) or (coalesce(nr_seq_empresa_w::text, '') = '')) and ((d.cd_tipo_portador = cd_tipo_portador_w) or (coalesce(cd_tipo_portador_w::text, '') = '')) and ((d.cd_portador = cd_portador_w) or (coalesce(cd_portador_w::text, '') = '')) and coalesce(d.dt_inicio_vigencia,dt_mesano_referencia_fimdia_w) <= dt_mesano_referencia_fimdia_w and ((d.dt_fim_vigencia >= dt_mesano_referencia_fimdia_w) or (coalesce(d.dt_fim_vigencia::text, '') = '')) and coalesce(nr_contrato_intercambio_w::text, '') = '' and ((a.ie_situacao_trabalhista = ie_situacao_trabalhist_serie_w) or (coalesce(ie_situacao_trabalhist_serie_w::text, '') = '')) and ((ie_tipo_lote_w	= 'A') or (ie_tipo_lote_w	= 'CO')) and ((ie_tipo_contrato_serie_w = 'O') or (coalesce(ie_tipo_contrato_serie_w::text, '') = '')) and ((a.nr_seq_classif_itens = nr_seq_classif_itens_w) or (coalesce(nr_seq_classif_itens_w::text, '') = '')) and ((ie_pagador_beneficio_obito_w = 'S' and (a.nr_seq_regra_obito IS NOT NULL AND a.nr_seq_regra_obito::text <> '')) or (ie_pagador_beneficio_obito_w = 'N')) and ((ie_geracao_nota_tit_pag_fin_w = d.ie_geracao_nota_titulo) or (ie_geracao_nota_tit_pag_fin_w = 'A')) and ((a.ie_endereco_boleto = ie_endereco_boleto_lote_w) or (coalesce(ie_endereco_boleto_lote_w::text, '') = '')) and (a.ie_envia_cobranca = ie_envia_cobranca_w or a.ie_envia_cobranca = 'A' or coalesce(ie_envia_cobranca_w::text, '') = '') and ((coalesce(nr_seq_grupo_preco_lote_w::text, '') = '') or (exists (select	1
							from	pls_preco_contrato		i,
								pls_preco_grupo_contrato	j
							where	i.nr_seq_grupo		= j.nr_sequencia
							and	i.nr_seq_contrato	= c.nr_sequencia
							and	j.nr_sequencia	= nr_seq_grupo_preco_lote_w))) and ((ie_tipo_pessoa_pagador_w = 'A') or (ie_tipo_pessoa_pagador_w = 'PF' and (a.cd_pessoa_fisica IS NOT NULL AND a.cd_pessoa_fisica::text <> '')) or (ie_tipo_pessoa_pagador_w = 'PJ' and (a.cd_cgc IS NOT NULL AND a.cd_cgc::text <> ''))) --FIM ITEM
 
union all

	select	distinct 'I' ie_tipo_pagador, --Pagador de contrato intercambio
		c.nr_sequencia,
		a.nr_sequencia nr_seq_pagador,
		a.ie_endereco_boleto,
		null, --Pagador de intercambio nao tem contrato
		(	select x.nm_pessoa_fisica
			from	pessoa_fisica x
			where	x.cd_pessoa_fisica = a.cd_pessoa_fisica
			
UNION ALL

			select	y.ds_razao_social
			from	pessoa_juridica y
			where	y.cd_cgc	= a.cd_cgc) nm_pagador,
		a.ie_taxa_emissao_boleto,
		d.ie_mes_vencimento,
		d.nr_seq_empresa,
		a.nr_seq_compl_pf_tel_adic,
		d.nr_sequencia nr_seq_pagador_fin,
		a.nr_seq_compl_pj,
		a.ie_calc_primeira_mens,
		a.ie_situacao_trabalhista,
		c.dt_inclusao,
		a.nr_seq_classif_itens,
		a.cd_pessoa_fisica cd_pf_pagador,
		c.nr_seq_grupo_intercambio nr_seq_grupo_intercambio_w,
		a.nr_seq_tipo_compl_adic,
		a.cd_cgc
	FROM pls_segurado_pagador f, pls_intercambio c, pls_segurado b, pls_contrato_pagador a, pls_contrato_pagador_fin d
LEFT OUTER JOIN pls_desc_empresa e ON (d.nr_seq_empresa = e.nr_sequencia)
WHERE a.nr_seq_pagador_intercambio	= c.nr_sequencia and f.nr_seq_segurado 	= b.nr_sequencia and f.nr_seq_pagador	= a.nr_sequencia and b.nr_seq_intercambio	= c.nr_sequencia and d.nr_seq_pagador	= a.nr_sequencia  and c.cd_estabelecimento	= cd_estabelecimento_p and (c.dt_aprovacao IS NOT NULL AND c.dt_aprovacao::text <> '') and ((a.nr_sequencia	= nr_seq_pagador_mens_w and	(nr_seq_pagador_mens_w IS NOT NULL AND nr_seq_pagador_mens_w::text <> '')) or coalesce(nr_seq_pagador_mens_w::text, '') = '') and ((coalesce(nr_dia_inicial_venc_w::text, '') = '') or (d.dt_dia_vencimento >= nr_dia_inicial_venc_w)) and ((coalesce(nr_dia_final_venc_w::text, '') = '') or (d.dt_dia_vencimento <= nr_dia_final_venc_w)) and (coalesce(nr_seq_segurado_p::text, '') = '' or b.nr_sequencia = nr_seq_segurado_p) and ((b.nr_seq_classificacao = nr_seq_classif_benef_w) or (coalesce(nr_seq_classif_benef_w::text, '') = '')) and ((coalesce(nr_contrato_intercambio_w::text, '') = '') or (c.nr_sequencia = nr_contrato_intercambio_w)) and ((coalesce(nr_seq_grupo_inter_w::text, '') = '') or (c.nr_seq_grupo_intercambio = nr_seq_grupo_inter_w)) and ((coalesce(ie_tipo_contrato_intercambio_w::text, '') = '') or (c.ie_tipo_contrato = ie_tipo_contrato_intercambio_w)) and (coalesce(cd_banco_lote_w::text, '') = '' or d.cd_banco = cd_banco_lote_w) and (coalesce(nr_seq_forma_cobranca_lote_w::text, '') = '' or d.nr_seq_forma_cobranca = nr_seq_forma_cobranca_lote_w) and ((e.nr_seq_empresa_superior = nr_seq_empresa_w or e.nr_sequencia = nr_seq_empresa_w) or (coalesce(nr_seq_empresa_w::text, '') = '')) and ((d.cd_tipo_portador = cd_tipo_portador_w) or (coalesce(cd_tipo_portador_w::text, '') = '')) and ((d.cd_portador = cd_portador_w) or (coalesce(cd_portador_w::text, '') = '')) and d.dt_inicio_vigencia <= dt_mesano_referencia_fimdia_w and ((d.dt_fim_vigencia >= dt_mesano_referencia_fimdia_w) or (coalesce(d.dt_fim_vigencia::text, '') = '')) and coalesce(nr_contrato_w::text, '') = '' and ((a.ie_situacao_trabalhista = ie_situacao_trabalhist_serie_w) or (coalesce(ie_situacao_trabalhist_serie_w::text, '') = '')) and ((ie_tipo_lote_w	= 'A') or (ie_tipo_lote_w	= 'CI')) and (((ie_tipo_contrato_serie_w = 'I') and (coalesce(c.cd_cgc::text, '') = ''))
		or 	(ie_tipo_contrato_serie_w = 'A' AND c.cd_cgc IS NOT NULL AND c.cd_cgc::text <> '')
		or (coalesce(ie_tipo_contrato_serie_w::text, '') = '')) and ((a.nr_seq_classif_itens = nr_seq_classif_itens_w) or (coalesce(nr_seq_classif_itens_w::text, '') = '')) and ((ie_pagador_beneficio_obito_w = 'S' and (a.nr_seq_regra_obito IS NOT NULL AND a.nr_seq_regra_obito::text <> '')) or (ie_pagador_beneficio_obito_w = 'N')) and ((ie_geracao_nota_tit_pag_fin_w = d.ie_geracao_nota_titulo) or (ie_geracao_nota_tit_pag_fin_w = 'A')) and ((a.ie_endereco_boleto = ie_endereco_boleto_lote_w) or (coalesce(ie_endereco_boleto_lote_w::text, '') = '')) and (a.ie_envia_cobranca = ie_envia_cobranca_w or a.ie_envia_cobranca = 'A' or coalesce(ie_envia_cobranca_w::text, '') = '') and ((coalesce(nr_seq_grupo_preco_lote_w::text, '') = '') or (exists (select	1
								from	pls_preco_contrato		f,
									pls_preco_grupo_contrato	g
								where	f.nr_seq_grupo		= g.nr_sequencia
								and	f.nr_seq_intercambio	= c.nr_sequencia
								and	g.nr_sequencia	= nr_seq_grupo_preco_lote_w))) and ((ie_tipo_pessoa_pagador_w = 'A') or (ie_tipo_pessoa_pagador_w = 'PF' and (a.cd_pessoa_fisica IS NOT NULL AND a.cd_pessoa_fisica::text <> '')) or (ie_tipo_pessoa_pagador_w = 'PJ' and (a.cd_cgc IS NOT NULL AND a.cd_cgc::text <> '')))
	 
union all

	select	distinct 'P' ie_tipo_pagador, --Pagador complementar de contrato intercambio
		(select	max(b.nr_sequencia)
		from	pls_contrato_pagador	a,
			pls_intercambio		b
		where	a.nr_seq_pagador_intercambio = b.nr_sequencia
		and	((coalesce(nr_contrato_intercambio_w::text, '') = '') or (b.nr_sequencia = nr_contrato_intercambio_w))) nr_sequencia,
		a.nr_sequencia nr_seq_pagador,
		a.ie_endereco_boleto,
		null, --Pagador de intercambio nao tem contrato
		(	select x.nm_pessoa_fisica
			from	pessoa_fisica x
			where	x.cd_pessoa_fisica = a.cd_pessoa_fisica
			
UNION ALL

			select	y.ds_razao_social
			from	pessoa_juridica y
			where	y.cd_cgc	= a.cd_cgc) nm_pagador,
		a.ie_taxa_emissao_boleto,
		d.ie_mes_vencimento,
		d.nr_seq_empresa,
		a.nr_seq_compl_pf_tel_adic,
		d.nr_sequencia nr_seq_pagador_fin,
		a.nr_seq_compl_pj,
		a.ie_calc_primeira_mens,
		a.ie_situacao_trabalhista,
		null,
		a.nr_seq_classif_itens,
		a.cd_pessoa_fisica cd_pf_pagador,
		null nr_seq_grupo_intercambio,
		a.nr_seq_tipo_compl_adic,
		a.cd_cgc
	FROM pls_contrato_pagador a, pls_contrato_pagador_fin d
LEFT OUTER JOIN pls_desc_empresa e ON (d.nr_seq_empresa = e.nr_sequencia)
WHERE d.nr_seq_pagador	= a.nr_sequencia  and (nr_contrato_intercambio_w IS NOT NULL AND nr_contrato_intercambio_w::text <> '') and ((a.ie_situacao_trabalhista = ie_situacao_trabalhist_serie_w) or (coalesce(ie_situacao_trabalhist_serie_w::text, '') = '')) and (ie_tipo_lote_w	<> 'A' AND ie_tipo_lote_w	<> 'CI') and a.nr_seq_pagador_compl in (	select	a.nr_sequencia
						from	pls_contrato_pagador	a,
							pls_intercambio		b
						where	a.nr_seq_pagador_intercambio = b.nr_sequencia
						and	((coalesce(nr_contrato_intercambio_w::text, '') = '') or (b.nr_sequencia = nr_contrato_intercambio_w))
						and	((coalesce(nr_seq_grupo_inter_w::text, '') = '') or (b.nr_seq_grupo_intercambio = nr_seq_grupo_inter_w))
						and	((coalesce(ie_tipo_contrato_intercambio_w::text, '') = '') or (b.ie_tipo_contrato = ie_tipo_contrato_intercambio_w))
						and	(b.dt_aprovacao IS NOT NULL AND b.dt_aprovacao::text <> '')) and ((a.nr_seq_classif_itens = nr_seq_classif_itens_w) or (coalesce(nr_seq_classif_itens_w::text, '') = '')) and ((ie_pagador_beneficio_obito_w = 'S' and (a.nr_seq_regra_obito IS NOT NULL AND a.nr_seq_regra_obito::text <> '')) or (ie_pagador_beneficio_obito_w = 'N')) and ((ie_geracao_nota_tit_pag_fin_w = d.ie_geracao_nota_titulo) or (ie_geracao_nota_tit_pag_fin_w = 'A')) and ((a.ie_endereco_boleto = ie_endereco_boleto_lote_w) or (coalesce(ie_endereco_boleto_lote_w::text, '') = '')) and (a.ie_envia_cobranca = ie_envia_cobranca_w or a.ie_envia_cobranca = 'A' or coalesce(ie_envia_cobranca_w::text, '') = '') and ((ie_tipo_pessoa_pagador_w = 'A') or (ie_tipo_pessoa_pagador_w = 'PF' and (a.cd_pessoa_fisica IS NOT NULL AND a.cd_pessoa_fisica::text <> '')) or (ie_tipo_pessoa_pagador_w = 'PJ' and (a.cd_cgc IS NOT NULL AND a.cd_cgc::text <> '')))
	 
union all

	select	distinct 'I' ie_tipo_pagador, --Pagador da cooperativa do intercambio
		c.nr_sequencia,
		a.nr_sequencia nr_seq_pagador,
		a.ie_endereco_boleto,
		null, --Pagador de intercambio nao tem contrato
		(	select x.nm_pessoa_fisica
			from	pessoa_fisica x
			where	x.cd_pessoa_fisica = a.cd_pessoa_fisica
			
UNION ALL

			select	y.ds_razao_social
			from	pessoa_juridica y
			where	y.cd_cgc	= a.cd_cgc) nm_pagador,
		a.ie_taxa_emissao_boleto,
		d.ie_mes_vencimento,
		d.nr_seq_empresa,
		a.nr_seq_compl_pf_tel_adic,
		d.nr_sequencia nr_seq_pagador_fin,
		a.nr_seq_compl_pj,
		a.ie_calc_primeira_mens,
		a.ie_situacao_trabalhista,
		c.dt_inclusao,
		a.nr_seq_classif_itens,
		a.cd_pessoa_fisica cd_pf_pagador,
		c.nr_seq_grupo_intercambio nr_seq_grupo_intercambio_w,
		a.nr_seq_tipo_compl_adic,
		a.cd_cgc
	FROM pls_segurado_pagador f, pls_intercambio c, pls_segurado b, pls_contrato_pagador a, pls_contrato_pagador_fin d
LEFT OUTER JOIN pls_desc_empresa e ON (d.nr_seq_empresa = e.nr_sequencia)
WHERE b.nr_seq_intercambio	= c.nr_sequencia and c.nr_seq_congenere	= a.nr_seq_congenere and f.nr_seq_pagador	= a.nr_sequencia and f.nr_seq_segurado	= b.nr_sequencia and b.nr_seq_intercambio	= c.nr_sequencia and d.nr_seq_pagador	= a.nr_sequencia  and c.cd_estabelecimento	= cd_estabelecimento_p and (c.dt_aprovacao IS NOT NULL AND c.dt_aprovacao::text <> '') and ((a.nr_sequencia	= nr_seq_pagador_mens_w and	(nr_seq_pagador_mens_w IS NOT NULL AND nr_seq_pagador_mens_w::text <> '')) or coalesce(nr_seq_pagador_mens_w::text, '') = '') and ((coalesce(nr_dia_inicial_venc_w::text, '') = '') or (d.dt_dia_vencimento >= nr_dia_inicial_venc_w)) and ((coalesce(nr_dia_final_venc_w::text, '') = '') or (d.dt_dia_vencimento <= nr_dia_final_venc_w)) and (coalesce(nr_seq_segurado_p::text, '') = '' or b.nr_sequencia = nr_seq_segurado_p) and ((b.nr_seq_classificacao = nr_seq_classif_benef_w) or (coalesce(nr_seq_classif_benef_w::text, '') = '')) and ((coalesce(nr_contrato_intercambio_w::text, '') = '') or (c.nr_sequencia = nr_contrato_intercambio_w)) and ((coalesce(nr_seq_grupo_inter_w::text, '') = '') or (c.nr_seq_grupo_intercambio = nr_seq_grupo_inter_w)) and ((coalesce(ie_tipo_contrato_intercambio_w::text, '') = '') or (c.ie_tipo_contrato = ie_tipo_contrato_intercambio_w)) and (coalesce(cd_banco_lote_w::text, '') = '' or d.cd_banco = cd_banco_lote_w) and (coalesce(nr_seq_forma_cobranca_lote_w::text, '') = '' or d.nr_seq_forma_cobranca = nr_seq_forma_cobranca_lote_w) and ((e.nr_seq_empresa_superior = nr_seq_empresa_w or e.nr_sequencia = nr_seq_empresa_w) or (coalesce(nr_seq_empresa_w::text, '') = '')) and ((d.cd_tipo_portador = cd_tipo_portador_w) or (coalesce(cd_tipo_portador_w::text, '') = '')) and ((d.cd_portador = cd_portador_w) or (coalesce(cd_portador_w::text, '') = '')) and d.dt_inicio_vigencia <= dt_mesano_referencia_fimdia_w and ((d.dt_fim_vigencia >= dt_mesano_referencia_fimdia_w) or (coalesce(d.dt_fim_vigencia::text, '') = '')) and coalesce(nr_contrato_w::text, '') = '' and ((a.ie_situacao_trabalhista = ie_situacao_trabalhist_serie_w) or (coalesce(ie_situacao_trabalhist_serie_w::text, '') = '')) and ((ie_tipo_lote_w	= 'A') or (ie_tipo_lote_w	= 'CI')) and (((ie_tipo_contrato_serie_w = 'I') and (coalesce(c.cd_cgc::text, '') = ''))
		or 	(ie_tipo_contrato_serie_w = 'A' AND c.cd_cgc IS NOT NULL AND c.cd_cgc::text <> '')
		or (coalesce(ie_tipo_contrato_serie_w::text, '') = '')) and ((a.nr_seq_classif_itens = nr_seq_classif_itens_w) or (coalesce(nr_seq_classif_itens_w::text, '') = '')) and ((ie_pagador_beneficio_obito_w = 'S' and (a.nr_seq_regra_obito IS NOT NULL AND a.nr_seq_regra_obito::text <> '')) or (ie_pagador_beneficio_obito_w = 'N')) and ((ie_geracao_nota_tit_pag_fin_w = d.ie_geracao_nota_titulo) or (ie_geracao_nota_tit_pag_fin_w = 'A')) and ((a.ie_endereco_boleto = ie_endereco_boleto_lote_w) or (coalesce(ie_endereco_boleto_lote_w::text, '') = '')) and (a.ie_envia_cobranca = ie_envia_cobranca_w or a.ie_envia_cobranca = 'A' or coalesce(ie_envia_cobranca_w::text, '') = '') and ((coalesce(nr_seq_grupo_preco_lote_w::text, '') = '') or (exists (select	1
								from	pls_preco_contrato		f,
									pls_preco_grupo_contrato	g
								where	f.nr_seq_grupo		= g.nr_sequencia
								and	f.nr_seq_intercambio	= c.nr_sequencia
								and	g.nr_sequencia	= nr_seq_grupo_preco_lote_w))) and ((ie_tipo_pessoa_pagador_w = 'A') or (ie_tipo_pessoa_pagador_w = 'PF' and (a.cd_pessoa_fisica IS NOT NULL AND a.cd_pessoa_fisica::text <> '')) or (ie_tipo_pessoa_pagador_w = 'PJ' and (a.cd_cgc IS NOT NULL AND a.cd_cgc::text <> '')))
	 
union all

	select	distinct 'C' ie_tipo_pagador, -- Pagador de SCA vinculado ao contrato
		c.nr_contrato nr_contrato_pag,
		a.nr_sequencia nr_seq_pagador,
		a.ie_endereco_boleto ie_endereco_boleto,
		a.nr_seq_contrato nr_seq_contrato_pag,
		(	select x.nm_pessoa_fisica
			from	pessoa_fisica x
			where	x.cd_pessoa_fisica = a.cd_pessoa_fisica
			
union all

			select	y.ds_razao_social
			from	pessoa_juridica y
			where	y.cd_cgc	= a.cd_cgc) nm_pagador,
		a.ie_taxa_emissao_boleto,
		d.ie_mes_vencimento,
		d.nr_seq_empresa nr_empresa,
		a.nr_seq_compl_pf_tel_adic,
		d.nr_sequencia nr_seq_pagador_fin,
		a.nr_seq_compl_pj,
		a.ie_calc_primeira_mens,
		a.ie_situacao_trabalhista,
		c.dt_contrato,
		a.nr_seq_classif_itens,
		a.cd_pessoa_fisica cd_pf_pagador,
		null nr_seq_grupo_intercambio,
		a.nr_seq_tipo_compl_adic,
		a.cd_cgc
	FROM pls_contrato_grupo g
LEFT OUTER JOIN pls_grupo_contrato f ON (g.nr_seq_grupo = f.nr_sequencia)
, pls_contrato c
LEFT OUTER JOIN pls_contrato_grupo g ON (c.nr_sequencia = g.nr_seq_contrato)
, pls_contrato_pagador a
LEFT OUTER JOIN pls_contrato_pagador_fin d ON (a.nr_sequencia = d.nr_seq_pagador)
LEFT OUTER JOIN pls_desc_empresa e ON (d.nr_seq_empresa = e.nr_sequencia)
WHERE a.nr_seq_contrato	= c.nr_sequencia     and c.cd_estabelecimento	= cd_estabelecimento_p and c.ie_situacao <> '1' and ((a.nr_sequencia	= nr_seq_pagador_mens_w and	(nr_seq_pagador_mens_w IS NOT NULL AND nr_seq_pagador_mens_w::text <> '')) or coalesce(nr_seq_pagador_mens_w::text, '') = '') and ((coalesce(nr_dia_inicial_venc_w::text, '') = '') or (d.dt_dia_vencimento >= nr_dia_inicial_venc_w)) and ((coalesce(nr_dia_final_venc_w::text, '') = '') or (d.dt_dia_vencimento <= nr_dia_final_venc_w)) and (coalesce(nr_contrato_w::text, '') = '' or ((c.nr_sequencia = nr_contrato_w) or (c.nr_contrato_principal = nr_contrato_w))) and ((f.nr_sequencia = nr_seq_grupo_contrato_w) or (coalesce(nr_seq_grupo_contrato_w::text, '') = '')) and ((coalesce(cd_banco_lote_w::text, '') = '') or (d.cd_banco = cd_banco_lote_w)) and ((coalesce(nr_seq_forma_cobranca_lote_w::text, '') = '') or (d.nr_seq_forma_cobranca = nr_seq_forma_cobranca_lote_w)) and ((e.nr_seq_empresa_superior = nr_seq_empresa_w or e.nr_sequencia = nr_seq_empresa_w) or (coalesce(nr_seq_empresa_w::text, '') = '')) and ((d.cd_tipo_portador = cd_tipo_portador_w) or (coalesce(cd_tipo_portador_w::text, '') = '')) and ((d.cd_portador = cd_portador_w) or (coalesce(cd_portador_w::text, '') = '')) and coalesce(d.dt_inicio_vigencia,dt_mesano_referencia_fimdia_w) <= dt_mesano_referencia_fimdia_w and ((d.dt_fim_vigencia >= dt_mesano_referencia_fimdia_w) or (coalesce(d.dt_fim_vigencia::text, '') = '')) and coalesce(nr_contrato_intercambio_w::text, '') = '' and ((a.ie_situacao_trabalhista = ie_situacao_trabalhist_serie_w) or (coalesce(ie_situacao_trabalhist_serie_w::text, '') = '')) and ((ie_tipo_lote_w	= 'A') or (ie_tipo_lote_w	= 'CO')) and ((ie_tipo_contrato_serie_w = 'O') or (coalesce(ie_tipo_contrato_serie_w::text, '') = '')) and ((a.nr_seq_classif_itens = nr_seq_classif_itens_w) or (coalesce(nr_seq_classif_itens_w::text, '') = '')) and ((ie_pagador_beneficio_obito_w = 'S' and (a.nr_seq_regra_obito IS NOT NULL AND a.nr_seq_regra_obito::text <> '')) or (ie_pagador_beneficio_obito_w = 'N')) and ((ie_geracao_nota_tit_pag_fin_w = d.ie_geracao_nota_titulo) or (ie_geracao_nota_tit_pag_fin_w = 'A')) and ((a.ie_endereco_boleto = ie_endereco_boleto_lote_w) or (coalesce(ie_endereco_boleto_lote_w::text, '') = '')) and (a.ie_envia_cobranca = ie_envia_cobranca_w or a.ie_envia_cobranca = 'A' or coalesce(ie_envia_cobranca_w::text, '') = '') and ((coalesce(nr_seq_grupo_preco_lote_w::text, '') = '') or (exists (select	1
							from	pls_preco_contrato		h,
								pls_preco_grupo_contrato	i
							where	h.nr_seq_grupo		= i.nr_sequencia
							and	h.nr_seq_contrato	= c.nr_sequencia
							and	i.nr_sequencia = nr_seq_grupo_preco_lote_w))) and ((ie_tipo_pessoa_pagador_w = 'A') or (ie_tipo_pessoa_pagador_w = 'PF' and (a.cd_pessoa_fisica IS NOT NULL AND a.cd_pessoa_fisica::text <> '')) or (ie_tipo_pessoa_pagador_w = 'PJ' and (a.cd_cgc IS NOT NULL AND a.cd_cgc::text <> ''))) and not exists (	select 	1
				from	pls_segurado_pagador x
				where	x.nr_seq_pagador = a.nr_sequencia) and not exists (	select	1
				from	pls_pagador_item_mens y,
					pls_contrato_pagador w
				where	y.nr_seq_pagador = w.nr_sequencia
				and	y.nr_seq_pagador_item = a.nr_sequencia
				and	w.nr_seq_contrato = c.nr_sequencia) and (coalesce(nr_seq_segurado_p::text, '') = '' or exists (	select	1
							from	pls_sca_vinculo y
							where	y.nr_seq_pagador = a.nr_sequencia
							and	y.nr_seq_segurado = nr_seq_segurado_p)) order by	nm_pagador,
			nr_seq_pagador;

C02 CURSOR FOR
	SELECT	nr_sequencia,
		nr_seq_segurado
	from	pls_mensalidade_segurado
	where	nr_seq_mensalidade	= nr_seq_mensalidade_w;

C03 CURSOR FOR
	SELECT	a.nr_serie_nf
	from	pls_regra_serie_nf		b,
		pls_regra_serie_nf_compl	a
	where	a.nr_seq_regra		= b.nr_sequencia
	and	b.ie_situacao		= 'A'
	and	((a.ie_tipo_contrato	= ie_contrato_w) or (coalesce(a.ie_tipo_contrato::text, '') = ''))
	and	((a.ie_tipo_contratacao	= ie_tipo_contratacao_w) or (coalesce(a.ie_tipo_contratacao::text, '') = ''))
	and	((a.ie_preco		= ie_preco_w) or (coalesce(a.ie_preco::text, '') = ''))
	and	((a.ie_situacao_trabalhista = ie_situacao_trabalhista_w) or (coalesce(a.ie_situacao_trabalhista::text, '') = ''))
	and	((a.ie_primeira_mensalidade = 'S' AND ie_primeira_mensalidade_w = 'S') or (coalesce(a.ie_primeira_mensalidade,'N') = 'N'))
	and	((a.nr_seq_classif_itens = nr_seq_classif_itens_w) or (coalesce(a.nr_seq_classif_itens::text, '') = ''))
	order by coalesce(a.ie_primeira_mensalidade,'N'),
		coalesce(a.nr_seq_classif_itens,-1),
		coalesce(a.ie_situacao_trabalhista,' '),
		coalesce(a.ie_preco,'-1'),
		coalesce(a.ie_tipo_contratacao,' '),
		coalesce(a.ie_tipo_contrato,' ');

C04 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_mensalidade
	where	nr_seq_lote	= nr_seq_lote_p
	and	ie_tipo_geracao_mens = 'DL'; --Data limite
TYPE		fetch_array IS TABLE OF c01%ROWTYPE;
s_array		fetch_array;
i		integer := 1;
type Vetor is table of fetch_array index by integer;
Vetor_c01_w			Vetor;

BEGIN
if (coalesce(dt_referencia_p::text, '') = '') then
	CALL pls_inserir_segurado_pagador(cd_estabelecimento_p,nm_usuario_p);
end if;
dt_inicio_geracao_w := clock_timestamp();
CALL gravar_processo_longo('Gerar mensalidades' ,'PLS_GERAR_MENSALIDADE',0);

select	coalesce(max(obter_valor_param_usuario(1205, 20, Obter_Perfil_Ativo, nm_usuario_p, cd_estabelecimento_p)), 'N')
into STRICT	ie_vencimento_mens_fut_w
;

ie_consiste_ender_bol_w	:= coalesce(obter_valor_param_usuario(1205, 26, Obter_Perfil_Ativo, nm_usuario_p, cd_estabelecimento_p), 'N');

select	dt_mesano_referencia,
	trunc(trunc(dt_mesano_referencia,'month'),'dd'),
	fim_dia(last_day(dt_mesano_referencia)),
	nr_seq_contrato,
	nr_seq_pagador,
	nr_dia_inicial_venc,
	nr_dia_final_venc,
	nr_seq_forma_cobranca,
	cd_banco,
	nr_seq_empresa,
	coalesce(ie_gerar_mensalidade_futura,'N'),
	qt_meses_mensalidade_futura,
	nr_seq_grupo_contrato,
	nr_seq_contrato_inter,
	coalesce(ie_tipo_lote,'A'),
	cd_tipo_portador,
	cd_portador,
	nr_seq_grupo_preco,
	coalesce(ie_primeira_mensalidade,'N'),
	ie_tipo_contrato,
	nr_seq_regra_serie_nf,
	nr_seq_grupo_inter,
	nr_seq_classif_itens,
	coalesce(ie_pagador_beneficio_obito,'N'),
	dt_mesano_referencia,
	dt_contabilizacao,
	coalesce(ie_geracao_nota_titulo,'A'),
	ie_endereco_boleto,
	coalesce(ie_tipo_pessoa_pagador,'A'),
	dt_inicio_adesao,
	dt_fim_adesao,
	nr_seq_classif_benef,
	ie_envia_cobranca
into STRICT	dt_mesano_referencia_w,
	dt_inicial_w,
	dt_final_w,
	nr_contrato_w,
	nr_seq_pagador_mens_w,
	nr_dia_inicial_venc_w,
	nr_dia_final_venc_w,
	nr_seq_forma_cobranca_lote_w,
	cd_banco_lote_w,
	nr_seq_empresa_w,
	ie_gerar_mensalidade_futura_w,
	qt_meses_mensalidade_futura_w,
	nr_seq_grupo_contrato_w,
	nr_contrato_intercambio_w,
	ie_tipo_lote_w,
	cd_tipo_portador_w,
	cd_portador_w,
	nr_seq_grupo_preco_lote_w,
	ie_primeira_mensalidade_w,
	ie_tipo_contrato_intercambio_w,
	nr_seq_regra_serie_nf_w,
	nr_seq_grupo_inter_w,
	nr_seq_classif_itens_w,
	ie_pagador_beneficio_obito_w,
	dt_mensalidade_lote_w,
	dt_contabilizacao_lote_w,
	ie_geracao_nota_tit_pag_fin_w,
	ie_endereco_boleto_lote_w,
	ie_tipo_pessoa_pagador_w,
	dt_inicio_adesao_w,
	dt_fim_adesao_w,
	nr_seq_classif_benef_w,
	ie_envia_cobranca_w
from	pls_lote_mensalidade
where	nr_sequencia	= nr_seq_lote_p;

if (nr_seq_segurado_p IS NOT NULL AND nr_seq_segurado_p::text <> '') then
	select	max(b.nr_seq_contrato)
	into STRICT	nr_contrato_principal_pag_w
	from	pls_segurado		a,
		pls_contrato_pagador	b
	where	a.nr_seq_pagador	= b.nr_sequencia
	and	a.nr_sequencia		= nr_seq_segurado_p;
	
	nr_contrato_w	:= nr_contrato_principal_pag_w;
end if;

select	max(ie_tipo_contrato),
	max(ie_situacao_trabalhista),
	max(nr_seq_classif_itens)
into STRICT	ie_tipo_contrato_serie_w,
	ie_situacao_trabalhist_serie_w,
	nr_seq_classif_itens_serie_w
from	pls_regra_serie_nf_compl
where	nr_seq_regra	= nr_seq_regra_serie_nf_w;

if (coalesce(nr_seq_classif_itens_w::text, '') = '') then
	nr_seq_classif_itens_w	:= nr_seq_classif_itens_serie_w;
end if;

dt_mesano_referencia_fimdia_w	:= dt_mesano_referencia_w + 86399/86400;
dt_referencia_trunc_month_w	:= trunc(dt_mesano_referencia_w, 'month');
dt_referencia_lanc_w		:= add_months(trunc(dt_mesano_referencia_w, 'month'),1);

select	max(ie_antecipacao_geracao),
	max(ie_permite_gerar_mens_contab)
into STRICT	ie_antecipacao_geracao_w,
	ie_permite_gerar_mens_contab_w
from	pls_parametro_contabil
where	cd_estabelecimento	= cd_estabelecimento_p;

if (coalesce(ie_permite_gerar_mens_contab_w,'S') = 'N') then
	dt_contabilizacao_lote_w	:= pkg_date_utils.start_of(coalesce(dt_contabilizacao_lote_w,dt_mesano_referencia_w),'MONTH',0);

	select	count(1)
	into STRICT	qt_lote_gerado_w
	from	lote_contabil 	l
	where	l.cd_tipo_lote_contabil in (21,49)
	and	pkg_date_utils.start_of(l.dt_referencia,'MONTH',0) = dt_contabilizacao_lote_w
	and	(l.dt_geracao_lote IS NOT NULL AND l.dt_geracao_lote::text <> '')
	and	coalesce(l.cd_estabelecimento, cd_estabelecimento_p) = cd_estabelecimento_p
	and	not exists (SELECT	1
				from	lote_contabil_param_item	x
				where	x.nr_lote_contabil	= l.nr_lote_contabil);
	
	if (qt_lote_gerado_w > 0) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort( 221400, 'DT_REFERENCIA=' || coalesce(dt_contabilizacao_lote_w,dt_mesano_referencia_w) );
	end if;
end if;

/* 	MS = Mensalidade especialmente para o segurado ** Gerado somente pela funcao OPS - Gestao de contratos **
	MR = Mensalidades retroativas ** Gerada pela funcao OPS - Mensalidades ** */
if (dt_referencia_p IS NOT NULL AND dt_referencia_p::text <> '') then
	ie_tipo_mensalidade_w	:= 'MR';
	
	dt_inicial_w := trunc(dt_referencia_p,'month');
	dt_final_w := trunc(last_day(dt_referencia_p),'dd') + 86399/86400;
	dt_mesano_referencia_w := trunc(dt_referencia_p,'month');
	dt_mesano_referencia_fimdia_w	:= dt_referencia_p + 86399/86400;
	dt_referencia_trunc_month_w	:= trunc(dt_referencia_p, 'month');
elsif (nr_seq_segurado_p IS NOT NULL AND nr_seq_segurado_p::text <> '') then
	ie_tipo_mensalidade_w	:= 'MS';
else
	ie_tipo_mensalidade_w	:= 'M';
end if;

select	count(1)
into STRICT	qt_mes_competencia_w
from	pls_competencia
where	trunc(dt_mes_competencia,'month')	= dt_referencia_trunc_month_w
and	cd_estabelecimento	= cd_estabelecimento_p;

if (qt_mes_competencia_w = 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(176925,''); -- Nao existe um mes de competencia aberto para a data de geracao da mensalidade
end if;

select	count(1)
into STRICT	qt_regra_pro_rata_dia_w
from	pls_regra_pro_rata_dia
where	cd_estabelecimento	= cd_estabelecimento_p  LIMIT 1;

delete	FROM pls_mensalidade_log
where	nr_seq_lote	= nr_seq_lote_p;

--pls_criticar_mensalides_pck.clear_vector_mens_seg;

--pls_criticar_mensalides_pck.set_updating_mensalidade(false);
CALL pls_store_data_mens_pck.store_pls_lote_mensalidade(nr_seq_lote_p,nm_usuario_p,cd_estabelecimento_p);
CALL pls_store_data_mens_pck.store_pls_parametros(cd_estabelecimento_p);
CALL pls_store_data_mens_pck.store_pls_parametro_pagamento(cd_estabelecimento_p);
CALL pls_store_data_mens_pck.store_pls_regra_serie_nf_compl(nr_seq_regra_serie_nf_w);
CALL pls_store_data_mens_pck.store_pls_regra_mens_contr_vm(dt_mesano_referencia_w);
CALL pls_store_data_mens_pck.store_pls_regra_mens_contr_f(dt_mesano_referencia_w);

ie_reajuste_faixa_etaria_w	:= pls_store_data_mens_pck.get_ie_reajuste_faixa_etaria;
ie_geracao_nota_titulo_pj_w	:= pls_store_data_mens_pck.get_ie_geracao_nota_titulo_pj;
ie_geracao_nota_titulo_pf_w	:= pls_store_data_mens_pck.get_ie_geracao_nota_titulo_pf;
qt_dias_incrementados_venc_w	:= pls_store_data_mens_pck.get_qt_dias_incrementados_venc;

CALL pls_store_data_mens_pck.set_ie_tipo_mensalidade(ie_tipo_mensalidade_w);

open c01;
loop
fetch C01 bulk collect into s_array limit 1000;
	Vetor_c01_w(i) := s_array;
	i := i + 1;
EXIT WHEN NOT FOUND; /* apply on C01 */
end loop;
close C01;

for i in 1..Vetor_c01_w.count loop
	s_array := Vetor_c01_w(i);
	for z in 1..s_array.count loop
		begin
		ie_tipo_pagador_w		:= s_array[z].ie_tipo_pagador;
		nr_contrato_pag_w		:= s_array[z].nr_contrato_pag;
		nr_seq_pagador_w		:= s_array[z].nr_seq_pagador;
		ie_endereco_boleto_w		:= s_array[z].ie_endereco_boleto;
		nr_seq_contrato_pag_w		:= s_array[z].nr_seq_contrato_pag;
		nm_pagador_w			:= s_array[z].nm_pagador;
		ie_taxa_emissao_boleto_w	:= s_array[z].ie_taxa_emissao_boleto;
		ie_mes_vencimento_w		:= s_array[z].ie_mes_vencimento;
		nr_empresa_w			:= s_array[z].nr_empresa;
		nr_seq_compl_pf_tel_adic_w	:= s_array[z].nr_seq_compl_pf_tel_adic;
		nr_seq_pagador_fin_w		:= s_array[z].nr_seq_pagador_fin;
		nr_seq_compl_pj_w		:= s_array[z].nr_seq_compl_pj;
		ie_calc_primeira_mens_w		:= s_array[z].ie_calc_primeira_mens;
		ie_situacao_trabalhista_w	:= s_array[z].ie_situacao_trabalhista;
		dt_contrato_w			:= s_array[z].dt_contrato;
		nr_seq_classif_itens_w		:= s_array[z].nr_seq_classif_itens;
		cd_pf_pagador_w			:= s_array[z].cd_pf_pagador;
		nr_seq_grupo_intercambio_w	:= s_array[z].nr_seq_grupo_intercambio;
		nr_seq_tipo_compl_adic_w	:= s_array[z].nr_seq_tipo_compl_adic;
		cd_cgc_pagador_w		:= s_array[z].cd_cgc;
		
		ie_erro_inf_financ_pag_w	:= 'N';
		cd_grupo_intercambio_w		:= '';
		
		if (nr_seq_grupo_preco_lote_w IS NOT NULL AND nr_seq_grupo_preco_lote_w::text <> '') then
			nr_seq_grupo_preco_w	:= nr_seq_grupo_preco_lote_w;
		else
			if (ie_tipo_pagador_w = 'C') then
				select	max(nr_seq_grupo)
				into STRICT	nr_seq_grupo_preco_w
				from	pls_preco_contrato
				where	nr_seq_contrato	= nr_seq_contrato_pag_w;
			elsif (ie_tipo_pagador_w = 'I') then
				select	max(nr_seq_grupo)
				into STRICT	nr_seq_grupo_preco_w
				from	pls_preco_contrato
				where	nr_seq_intercambio	= nr_contrato_pag_w;
			end if;
		end if;
		
		nr_seq_grupo_contr_relac_w	:= null;
		
		-- Christian Theilacker  - OS226405 =  Busca por excecoes de mensalidades que nao serao geradas  (Foi feito o Count e o IF)
		select	count(1)
		into STRICT	qt_excecoes_w
		from	pls_lote_mens_restricao b
		where	nr_seq_lote	 = nr_seq_lote_p
		and	((nr_seq_pagador = nr_seq_pagador_w) or (nr_seq_contrato = nr_seq_contrato_pag_w) or (nr_seq_empresa  = nr_empresa_w) or (nr_seq_grupo_preco = nr_seq_grupo_preco_w) or (nr_seq_grupo_intercambio = nr_seq_grupo_intercambio_w) or (nr_seq_classif_itens = nr_seq_classif_itens_w) or ((nr_seq_contrato_pag_w IS NOT NULL AND nr_seq_contrato_pag_w::text <> '') and exists (	SELECT	1
									from	pls_contrato_grupo	a
									where	a.nr_seq_contrato	= nr_seq_contrato_pag_w
									and	a.nr_seq_grupo		= b.nr_seq_grupo_contrato)));
		
		if (qt_excecoes_w = 0) then
			CALL gravar_processo_longo(nm_pagador_w || ' - ' || nr_seq_pagador_w,'PLS_GERAR_MENSALIDADE',-1);
			
			ie_nova_mens_w	:= 'S';
			nr_seq_mensalidade_ww	:= null;
			ie_gerar_mensalidade_w	:= 'S';
			
			select (trunc(months_between(dt_referencia_trunc_month_w,trunc(dt_contrato_w,'month')))+1)
			into STRICT	nr_parcela_w
			;
			
			if (cd_pf_pagador_w IS NOT NULL AND cd_pf_pagador_w::text <> '') then
				ie_geracao_nota_titulo_ops_w	:= ie_geracao_nota_titulo_pf_w;
			else
				ie_geracao_nota_titulo_ops_w	:= ie_geracao_nota_titulo_pj_w;
			end if;
			
			begin
			select	a.dt_dia_vencimento,
				a.nr_seq_forma_cobranca,
				a.cd_banco,
				a.cd_agencia_bancaria,
				a.ie_digito_agencia,
				a.cd_conta,
				a.ie_digito_conta,
				a.nr_seq_conta_banco,
				coalesce(a.ie_geracao_nota_titulo,ie_geracao_nota_titulo_ops_w),
				a.ie_gerar_cobr_escrit,
				a.nr_seq_conta_banco_deb_aut,
				a.cd_condicao_pagamento,
				a.cd_portador
			into STRICT	dt_dia_vencimento_w,
				nr_seq_forma_cobranca_w,
				cd_banco_w,
				cd_agencia_bancaria_w,
				ie_digito_agencia_w,
				cd_conta_w,
				ie_digito_conta_w,
				nr_seq_conta_banco_w,
				ie_geracao_nota_titulo_w,
				ie_gerar_cobr_escrit_w,
				nr_seq_conta_banco_deb_aut_w,
				cd_condicao_pagamento_w,
				cd_portador_pagador_w
			from	pls_contrato_pagador_fin a
			where	a.nr_sequencia		= nr_seq_pagador_fin_w;
			exception
			when others then
				CALL pls_gerar_mens_log_erro(nr_seq_lote_p,nr_seq_pagador_w,null,null,
							'Nao foram cadastradas as informacoes financeiras do pagador!',cd_estabelecimento_p,nm_usuario_p);
				ie_erro_inf_financ_pag_w	:= 'S';
			end;
			
			if (coalesce(cd_condicao_pagamento_w::text, '') = '') then
				CALL pls_gerar_mens_log_erro(nr_seq_lote_p,nr_seq_pagador_w,null,null,
							'Nao existe condicao de pagamento informada para o pagador!',cd_estabelecimento_p,nm_usuario_p);
				ie_erro_inf_financ_pag_w	:= 'S';
			end if;
			
			if (coalesce(nr_seq_conta_banco_w::text, '') = '') and (coalesce(pls_store_data_mens_pck.get_nr_seq_conta_banco::text, '') = '') then
				CALL pls_gerar_mens_log_erro(nr_seq_lote_p,nr_seq_pagador_w,null,null,
							'Nao existe conta bancaria informada para o pagador!',cd_estabelecimento_p,nm_usuario_p);
				ie_erro_inf_financ_pag_w	:= 'S';
			end if;
			
			if (coalesce(cd_portador_pagador_w::text, '') = '') and (coalesce(pls_store_data_mens_pck.get_cd_portador::text, '') = '') then
				CALL pls_gerar_mens_log_erro(nr_seq_lote_p,nr_seq_pagador_w,null,null,
							'Nao existe portador informada para o pagador!',cd_estabelecimento_p,nm_usuario_p);
				ie_erro_inf_financ_pag_w	:= 'S';
			end if;
			
			CALL pls_store_data_mens_pck.set_nr_seq_pagador(nr_seq_pagador_w);
			CALL pls_store_data_mens_pck.set_nr_seq_pagador_fin(nr_seq_pagador_fin_w);
			CALL pls_store_data_mens_pck.set_ie_calc_primeira_mens(ie_calc_primeira_mens_w);
			CALL pls_store_data_mens_pck.set_dt_dia_vencimento(dt_dia_vencimento_w);
			CALL pls_store_data_mens_pck.set_cd_pessoa_fisica_pag(cd_pf_pagador_w);
			CALL pls_store_data_mens_pck.set_cd_cgc(cd_cgc_pagador_w);
			CALL pls_store_data_mens_pck.set_nr_seq_conta_banco_pag(nr_seq_conta_banco_w);
			CALL pls_store_data_mens_pck.set_nr_seq_classif_itens_pag(nr_seq_classif_itens_w);
			CALL pls_store_data_mens_pck.clear_pls_contrato();
			
			if (ie_tipo_pagador_w = 'C') then
				ie_contrato_w	:= 'O';
				CALL pls_store_data_mens_pck.set_nr_seq_contrato_pag(nr_seq_contrato_pag_w);
				CALL pls_store_data_mens_pck.store_pls_contrato(nr_seq_contrato_pag_w);
			elsif (ie_tipo_pagador_w in ('I','P')) then
				select	CASE WHEN coalesce(cd_pessoa_fisica::text, '') = '' THEN 'PJ'  ELSE 'PF' END ,
					CASE WHEN ie_tipo_contrato='I' THEN 'I'  ELSE 'A' END
				into STRICT	ie_tipo_contrato_w,
					ie_contrato_w
				from	pls_intercambio
				where	nr_sequencia	= nr_contrato_pag_w;
				
				if (nr_seq_grupo_intercambio_w IS NOT NULL AND nr_seq_grupo_intercambio_w::text <> '') then
					select	cd_grupo
					into STRICT	cd_grupo_intercambio_w
					from	pls_regra_grupo_inter
					where	nr_sequencia	= nr_seq_grupo_intercambio_w;
				end if;
				
				CALL pls_store_data_mens_pck.set_nr_seq_pagador_intercambio(nr_contrato_pag_w);
				CALL pls_store_data_mens_pck.set_ie_tipo_estipulante(ie_tipo_contrato_w);
			end if;
			
			if (ie_tipo_pagador_w in ('I','P')) then
				select	max(nr_sequencia)
				into STRICT	nr_seq_intercambio_plano_w
				from	pls_intercambio_plano
				where	nr_seq_intercambio	= nr_contrato_pag_w
				and	coalesce(ie_situacao,'A')	= 'A';
				
				if (coalesce(nr_seq_contrato_plano_w::text, '') = '') then
					select	max(nr_sequencia)
					into STRICT	nr_seq_contrato_plano_w
					from	pls_intercambio_plano
					where	nr_seq_intercambio	= nr_contrato_pag_w
					and	ie_situacao		= 'I';
				end if;
				
				select	max(b.ie_preco),
					max(b.ie_tipo_contratacao)
				into STRICT	ie_preco_w,
					ie_tipo_contratacao_w
				from	pls_intercambio_plano	a,
					pls_plano		b
				where	a.nr_seq_plano		= b.nr_sequencia
				and	a.nr_sequencia		= nr_seq_intercambio_plano_w;
			else
				select	max(nr_sequencia)
				into STRICT	nr_seq_contrato_plano_w
				from	pls_contrato_plano
				where	nr_seq_contrato	= nr_seq_contrato_pag_w
				and	ie_situacao	= 'A';
				
				if (coalesce(nr_seq_contrato_plano_w::text, '') = '') then
					select	max(nr_sequencia)
					into STRICT	nr_seq_contrato_plano_w
					from	pls_contrato_plano
					where	nr_seq_contrato	= nr_seq_contrato_pag_w
					and	ie_situacao	= 'I';
				end if;
				
				select	max(b.ie_preco),
					max(b.ie_tipo_contratacao)
				into STRICT	ie_preco_w,
					ie_tipo_contratacao_w
				from	pls_contrato_plano	a,
					pls_plano		b
				where	a.nr_seq_plano		= b.nr_sequencia
				and	a.nr_sequencia		= nr_seq_contrato_plano_w;
			end if;
			
			if (ie_preco_w in (1,4)) then
				ie_tipo_formacao_preco_w	:= 'R';
			elsif (ie_preco_w in (2,3)) then
				ie_tipo_formacao_preco_w	:= 'P';
			end if;
			
			if (dt_dia_vencimento_w = 0) then
				dt_vencimento_w	:= clock_timestamp();
			else
				dt_vencimento_w	:= dt_inicial_w + (dt_dia_vencimento_w - 1);
				if (ie_mes_vencimento_w = 'P') then
					dt_vencimento_w := add_months(dt_vencimento_w,1);
				elsif (ie_mes_vencimento_w = 'N') then
					dt_vencimento_w := add_months(dt_vencimento_w,-1);
				else	--	se o mes de vencimento for diferente do mes da geracao da mensalidade, busca o ultimo dia do mes
					if (trunc(dt_inicial_w,'month') <> trunc(dt_vencimento_w,'month')) then
						dt_vencimento_w	:= last_day(dt_inicial_w);
					end if;
				end if;
			end if;
			
			if (ie_tipo_mensalidade_w = 'MR') then
				-- Verifica se ja existe mensalidades do pagdor no mes de referencia
				select	max(b.nr_sequencia)
				into STRICT	nr_seq_mensalidade_ww
				from	pls_mensalidade		b,
					pls_lote_mensalidade	a
				where	b.nr_seq_lote	= a.nr_sequencia
				and	trunc(b.dt_referencia,'month')	= dt_referencia_trunc_month_w
				and	b.nr_seq_pagador		= nr_seq_pagador_w
				and	coalesce(b.ie_cancelamento::text, '') = ''
				and	a.ie_status = '3';
				
				if (nr_seq_mensalidade_ww IS NOT NULL AND nr_seq_mensalidade_ww::text <> '') then
					nr_seq_mensalidade_w := nr_seq_mensalidade_ww;
					ie_nova_mens_w := 'N';
				else
					ie_nova_mens_w := 'S';
				end if;
			end if;
			
			nr_serie_mensalidade_w	:= '';
			
			open c03;
			loop
			fetch c03 into
				nr_serie_mensalidade_w;
			EXIT WHEN NOT FOUND; /* apply on c03 */
			end loop;
			close c03;
			
			CALL pls_store_data_mens_pck.set_nr_serie_mensalidade(nr_serie_mensalidade_w);
			
			qt_suspensao_cobr_mens_w	:= 0;
			qt_item_excecao_w		:= 0;
			nr_seq_susp_mens_w		:= null;
			nr_seq_motivo_susp_w		:= null;
			CALL pls_store_data_mens_pck.set_nr_seq_motivo_suspensao(nr_seq_motivo_susp_w);
			
			if (ie_tipo_pagador_w = 'C') then
				select	max(nr_sequencia),
					max(nr_seq_motivo_suspensao)
				into STRICT	nr_seq_susp_mens_w,
					nr_seq_motivo_susp_w
				from	pls_contrato_susp_mens
				where	nr_seq_contrato		= nr_seq_contrato_pag_w
				and	((nr_seq_pagador	= nr_seq_pagador_w) or (coalesce(nr_seq_pagador::text, '') = ''))
				and	(((coalesce(dt_fim_suspensao::text, '') = '')
				and (dt_mensalidade_lote_w >= dt_inicio_suspensao))
				or 	((dt_fim_suspensao IS NOT NULL AND dt_fim_suspensao::text <> '')
				and (dt_mensalidade_lote_w between dt_inicio_suspensao and dt_fim_suspensao)
				and (dt_inicio_suspensao <> dt_fim_suspensao)))
				and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
				and 	((ie_cobrar_periodo_susp = 'S' and coalesce(dt_fim_suspensao::text, '') = '') or (coalesce(ie_cobrar_periodo_susp,'N') = 'N'));
				
				if	((nr_seq_susp_mens_w IS NOT NULL AND nr_seq_susp_mens_w::text <> '') and (coalesce(nr_seq_motivo_susp_w::text, '') = '')) then
					qt_suspensao_cobr_mens_w := 1;
				elsif (nr_seq_motivo_susp_w IS NOT NULL AND nr_seq_motivo_susp_w::text <> '') then
					select	count(1)
					into STRICT	qt_item_excecao_w
					from	pls_susp_cobr_mens_excecao a,
						pls_motivo_susp_cobr_mens b
					where	a.nr_seq_motivo = b.nr_sequencia
					and	a.nr_seq_motivo = nr_seq_motivo_susp_w
					and	b.ie_situacao = 'A';

					if (qt_item_excecao_w <> 0) then
						CALL pls_store_data_mens_pck.set_nr_seq_motivo_suspensao(nr_seq_motivo_susp_w);
					else
						qt_suspensao_cobr_mens_w := 1;
					end if;
				end if;
			end if;
			
			--Verifica se deve gerar apenas uma mensalidade por mes para cada pagador
			select	coalesce(max(ie_restringe_uma_mens_pag_mes),'N')
			into STRICT	ie_restringe_uma_mens_w
			from	pls_regra_mens_contrato
			where	ie_tipo_regra	= 'G'
			and (ie_pessoa_contrato = pls_store_data_mens_pck.get_ie_tipo_estipulante or ie_pessoa_contrato = 'A')
			and	dt_inicio_vigencia <= dt_mensalidade_lote_w
			and (dt_fim_vigencia >= dt_mensalidade_lote_w or coalesce(dt_fim_vigencia::text, '') = '');

			if (ie_restringe_uma_mens_w = 'S') then
				select	count(1)
				into STRICT	qt_registro_w
				from	pls_mensalidade
				where	nr_seq_pagador	= nr_seq_pagador_w
				and	coalesce(ie_cancelamento::text, '') = ''
				and	trunc(dt_referencia,'month') = dt_referencia_trunc_month_w;
				
				if (qt_registro_w > 0) then
					ie_gerar_mensalidade_ww := 'N';
				else
					ie_gerar_mensalidade_ww := 'S';
				end if;
			else
				ie_gerar_mensalidade_ww := 'S';
			end if;

			if (ie_gerar_mensalidade_ww = 'S') then
				--Gera mensalidade, caso o pagador nao possuir erro na mensalidade e nao tenha regra de suspensao de cobranca de mensalidade no contrato
				if (ie_erro_inf_financ_pag_w = 'N') and (qt_suspensao_cobr_mens_w = 0) then
					-- Cria uma nova mensalidade na pls_mensalidade se nao existir para o pagador
					if (ie_nova_mens_w <> 'N') then
						select	count(1)
						into STRICT	qt_mens_pagador_w
						from	pls_mensalidade		b,
							pls_lote_mensalidade	a
						where	b.nr_seq_lote		= a.nr_sequencia
						and	b.nr_seq_pagador	= nr_seq_pagador_w
						and	coalesce(b.ie_cancelamento::text, '') = ''
						and	a.ie_status <> '3'  LIMIT 1;
						
						-- Se o pagador nao possui outras mensalidades geradas, entao a data de vencimento e a data da primeira mensalidade do cadastro no pagador
						if (qt_mens_pagador_w = 0) then
							begin
							select	dt_primeira_mensalidade
							into STRICT	dt_primeira_mensalidade_w
							from	pls_contrato_pagador
							where	nr_sequencia = nr_seq_pagador_w;
							exception
							when others then
								dt_primeira_mensalidade_w	:= null;
							end;
							
							dt_vencimento_w := coalesce(dt_primeira_mensalidade_w,dt_vencimento_w);
							
							--aaschlote 31/07/2012 OS  - Caso a data de vencimento esteja vencida da primeira mensalidade, incrementa os dias das regras com a data atual
							if (dt_vencimento_w	< trunc(clock_timestamp(),'dd')) then
								dt_vencimento_w	:= clock_timestamp()+qt_dias_incrementados_venc_w;
							end if;
						end if;
						
						if (ie_calc_primeira_mens_w = 'P') then
							ie_proporcional_w	:= 'S';
						else
							ie_proporcional_w	:= 'N';
						end if;
						
						select	nextval('pls_mensalidade_seq')
						into STRICT	nr_seq_mensalidade_w
						;
						
						CALL pls_store_data_mens_pck.set_dt_referencia(dt_referencia_trunc_month_w);
						
						insert	into	pls_mensalidade(	nr_sequencia,
								dt_atualizacao,
								nm_usuario,
								nr_seq_pagador,
								dt_referencia,
								vl_mensalidade,
								nr_seq_lote,
								ds_observacao,
								dt_vencimento,
								nr_seq_forma_cobranca,
								cd_banco,
								cd_agencia_bancaria,
								ie_digito_agencia,
								cd_conta,
								ie_digito_conta,
								ie_endereco_boleto,
								nr_seq_conta_banco,
								nr_seq_compl_pf_tel_adic,
								nr_seq_pagador_fin,
								ie_nota_titulo,
								ie_tipo_formacao_preco,
								ie_apresentacao,
								nr_seq_compl_pj,
								ie_gerar_cobr_escrit,
								ie_proporcional,
								nr_serie_mensalidade,
								cd_grupo_intercambio,
								nr_seq_tipo_compl_adic,
								nr_seq_conta_banco_deb_aut,
								nr_parcela)
							values (	nr_seq_mensalidade_w,
								clock_timestamp(),
								nm_usuario_p,
								nr_seq_pagador_w,
								dt_referencia_trunc_month_w,
								0,
								nr_seq_lote_p,
								'',
								dt_vencimento_w,
								nr_seq_forma_cobranca_w,
								cd_banco_w,
								cd_agencia_bancaria_w,
								ie_digito_agencia_w,
								cd_conta_w,
								ie_digito_conta_w,
								ie_endereco_boleto_w,
								nr_seq_conta_banco_w,
								nr_seq_compl_pf_tel_adic_w,
								nr_seq_pagador_fin_w,
								ie_geracao_nota_titulo_w,
								ie_tipo_formacao_preco_w,
								1,
								nr_seq_compl_pj_w,
								ie_gerar_cobr_escrit_w,
								ie_proporcional_w,
								nr_serie_mensalidade_w,
								cd_grupo_intercambio_w,
								nr_seq_tipo_compl_adic_w,
								nr_seq_conta_banco_deb_aut_w,
								nr_parcela_w);
					end if;
					
					if (ie_consiste_ender_bol_w = 'N') then
						CALL pls_consistir_mens_boleto_pag(nr_seq_pagador_w,nr_seq_lote_p,nr_seq_mensalidade_w,cd_estabelecimento_p,nm_usuario_p);
					end if;
					
					select	count(1)
					into STRICT	qt_regra_pos_estab_fatura_w
					from	pls_regra_pos_estab_fatura
					where	nr_seq_contrato	= nr_seq_contrato_pag_w  LIMIT 1;
					
					if (qt_regra_pos_estab_fatura_w > 0) then
						CALL pls_gerar_apresent_pos_estab(nr_seq_lote_p, nr_seq_mensalidade_w, nr_seq_pagador_w, nm_usuario_p, cd_estabelecimento_p);
					end if;
					
					-- Tratamento para a composicao de carnes de mensalidade
					qt_interv_mes_mensalidade_w	:= 1;
					
					if (coalesce(ie_tipo_pagador_w,'N') <> 'I') then
						select	max(nr_sequencia)
						into STRICT	nr_seq_regra_contr_w
						from	pls_regra_mens_contrato
						where	nr_seq_contrato = nr_seq_contrato_pag_w
						and	ie_tipo_regra	= 'F'
						and	coalesce(qt_interv_mes_mensalidade,0) <> 0
						and	trunc(dt_mesano_referencia_w,'dd') between coalesce(dt_inicio_vigencia,dt_mesano_referencia_w) and coalesce(dt_fim_vigencia,dt_mesano_referencia_w);
					else
						select	max(nr_sequencia)
						into STRICT	nr_seq_regra_contr_w
						from	pls_regra_mens_contrato
						where	nr_seq_intercambio = nr_contrato_pag_w
						and	ie_tipo_regra	= 'F'
						and	coalesce(qt_interv_mes_mensalidade,0) <> 0
						and	trunc(dt_mesano_referencia_w,'dd') between coalesce(dt_inicio_vigencia,dt_mesano_referencia_w) and coalesce(dt_fim_vigencia,dt_mesano_referencia_w);
					end if;
					
					if (coalesce(nr_seq_regra_contr_w,0) = 0) then
						if (pls_store_data_mens_pck.get_ie_tipo_estipulante = 'PF') then
							nr_seq_regra_contr_w	:= pls_store_data_mens_pck.get_nr_seq_regra_contr_f_pf;
						elsif (pls_store_data_mens_pck.get_ie_tipo_estipulante = 'PJ') then
							nr_seq_regra_contr_w	:= pls_store_data_mens_pck.get_nr_seq_regra_contr_f_pj;
						end if;
					end if;
					
					if (coalesce(nr_seq_regra_contr_w,0) > 0) then
						begin
						select	qt_interv_mes_mensalidade,
							ie_agrupar_valor
						into STRICT	qt_interv_mes_mensalidade_w,
							ie_agrupar_valor_w
						from	pls_regra_mens_contrato
						where	nr_sequencia	= nr_seq_regra_contr_w;
						exception
						when others then
							qt_interv_mes_mensalidade_w	:= 0;
							ie_agrupar_valor_w		:= 'S';
						end;
					end if;
					
					if (nr_seq_regra_contr_w	> 0) and (coalesce(qt_interv_mes_mensalidade_w,0) > 0) and (coalesce(ie_agrupar_valor_w,'S') = 'S') and (ie_primeira_mensalidade_w = 'N') then
						
						qt_mes_mensalidade_w	:= 0;
						while(qt_mes_mensalidade_w < qt_interv_mes_mensalidade_w) loop
							begin
							dt_mes_mens_segurado_w	:= add_months(dt_mesano_referencia_w,qt_mes_mensalidade_w);
							
							ie_existe_mens_w := pls_gerar_mensalidade_segurado( nr_seq_lote_p, nr_seq_mensalidade_w, nr_seq_segurado_p, ie_tipo_mensalidade_w, dt_mes_mens_segurado_w, ie_gerar_mensalidade_w, nm_usuario_p, cd_estabelecimento_p, ie_existe_mens_w);
							
							if (ie_existe_mens_w       = 'S') then
								ie_gerar_mensalidade_w  := 'N';
							end if;
							
							qt_mes_mensalidade_w	:= qt_mes_mensalidade_w + 1;
							end;
						end loop;
					elsif	(((nr_seq_regra_contr_w	> 0) and (qt_interv_mes_mensalidade_w > 0) and (ie_agrupar_valor_w = 'N')) or (ie_gerar_mensalidade_futura_w = 'S')) and (ie_primeira_mensalidade_w = 'N') then
						
						if (ie_gerar_mensalidade_futura_w = 'S') then
							qt_interv_mes_mensalidade_w	:= qt_meses_mensalidade_futura_w;
						end if;
						
						dt_vencimento_mens_fut_w	:= dt_vencimento_w;
						
						qt_mes_mensalidade_w	:= 1;
						dt_mes_mens_segurado_w	:= dt_mesano_referencia_w;
						
						while(qt_mes_mensalidade_w <= qt_interv_mes_mensalidade_w) loop
							begin
							ie_existe_mens_w := pls_gerar_mensalidade_segurado( nr_seq_lote_p, nr_seq_mensalidade_w, nr_seq_segurado_p, ie_tipo_mensalidade_w, dt_mes_mens_segurado_w, ie_gerar_mensalidade_w, nm_usuario_p, cd_estabelecimento_p, ie_existe_mens_w);
							
							select	count(1)
							into STRICT	qt_mens_parc_w
							from	pls_mensalidade_seg_item	a,
								pls_mensalidade_segurado	b,
								pls_mensalidade			c
							where	a.nr_seq_mensalidade_seg	= b.nr_sequencia
							and	b.nr_seq_mensalidade		= c.nr_sequencia
							and	c.nr_sequencia			= nr_seq_mensalidade_w;
							
							if (qt_mens_parc_w = 0) then
								CALL pls_deletar_mensalidade(nr_seq_mensalidade_w,'S',nm_usuario_p,'N');
							end if;
							
							dt_mes_mens_segurado_w	:= add_months(dt_mesano_referencia_w,qt_mes_mensalidade_w);
							
							if (ie_vencimento_mens_fut_w = 'S') then
								dt_vencimento_mens_fut_w	:= add_months(dt_vencimento_mens_fut_w, 1);
							end if;
							
							CALL pls_store_data_mens_pck.set_dt_referencia(trunc(dt_mes_mens_segurado_w,'mm'));
							
							--Parcela da mensalidade
							select (trunc(months_between(dt_mes_mens_segurado_w,trunc(dt_contrato_w,'month')))+1)
							into STRICT	nr_parcela_w
							;
							
							select	nextval('pls_mensalidade_seq')
							into STRICT	nr_seq_mensalidade_w
							;
							
							insert	into	pls_mensalidade(nr_sequencia,
									dt_atualizacao,
									nm_usuario,
									nr_seq_pagador,
									dt_referencia,
									vl_mensalidade,
									nr_seq_lote,
									ds_observacao,
									dt_vencimento,
									nr_seq_forma_cobranca,
									cd_banco,
									cd_agencia_bancaria,
									ie_digito_agencia,
									cd_conta,
									ie_digito_conta,
									ie_endereco_boleto,
									nr_seq_conta_banco,
									nr_seq_compl_pf_tel_adic,
									nr_seq_pagador_fin,
									ie_nota_titulo,
									ie_tipo_formacao_preco,
									ie_apresentacao,
									nr_seq_compl_pj,
									ie_gerar_cobr_escrit,
									nr_serie_mensalidade,
									cd_grupo_intercambio,
									nr_seq_tipo_compl_adic,
									nr_seq_conta_banco_deb_aut,
									nr_parcela)
								values (	nr_seq_mensalidade_w,
									clock_timestamp(),
									nm_usuario_p,
									nr_seq_pagador_w,
									trunc(dt_mes_mens_segurado_w,'mm'),
									0,
									nr_seq_lote_p,
									'',
									dt_vencimento_mens_fut_w,
									nr_seq_forma_cobranca_w,
									cd_banco_w,
									cd_agencia_bancaria_w,
									ie_digito_agencia_w,
									cd_conta_w,
									ie_digito_conta_w,
									ie_endereco_boleto_w,
									nr_seq_conta_banco_w,
									nr_seq_compl_pf_tel_adic_w,
									nr_seq_pagador_fin_w,
									ie_geracao_nota_titulo_w,
									ie_tipo_formacao_preco_w,
									1,
									nr_seq_compl_pj_w,
									ie_gerar_cobr_escrit_w,
									nr_serie_mensalidade_w,
									cd_grupo_intercambio_w,
									nr_seq_tipo_compl_adic_w,
									nr_seq_conta_banco_deb_aut_w,
									nr_parcela_w);
							
							if (ie_existe_mens_w = 'S') then
								ie_gerar_mensalidade_w  := 'N';
							end if;
							
							qt_mes_mensalidade_w	:= qt_mes_mensalidade_w + 1;
							end;
						end loop;
					-- Fim do tratamento para a composicao de carnes de mensalidade
					else
						ie_existe_mens_w := pls_gerar_mensalidade_segurado(	nr_seq_lote_p, nr_seq_mensalidade_w, nr_seq_segurado_p, ie_tipo_mensalidade_w, dt_referencia_trunc_month_w, 'S', nm_usuario_p, cd_estabelecimento_p, ie_existe_mens_w);
					end if;
					
					-- Lancamentos programados - OS 344780 -- wcbernardino
					CALL pls_apropriar_lanc_prog_pag(nr_seq_pagador_w,nr_seq_mensalidade_w,dt_mesano_referencia_w,nm_usuario_p);
					
					CALL pls_gerar_mens_amortizacao(nr_seq_mensalidade_w,nm_usuario_p);
					
					select	count(1)
					into STRICT	qt_regra_inscr_pag_w
					from	pls_regra_inscricao
					where	nr_seq_pagador	= nr_seq_pagador_w  LIMIT 1;
					
					if (qt_regra_inscr_pag_w > 0) then
						begin
						CALL pls_gerar_mens_inscricao_pag(nr_seq_mensalidade_w, nr_seq_pagador_w, nr_parcela_w, dt_mesano_referencia_w, nm_usuario_p);
						exception
						when others then
							CALL pls_gerar_mens_log_erro(nr_seq_lote_p,nr_seq_pagador_w,null,null,
									'Erro ao gerar os valores de inscricao para o pagador da mensalidade!',cd_estabelecimento_p,nm_usuario_p);
						end;
					end if;
					
					select	count(1)
					into STRICT	qt_regra_inscr_sca_w
					from	pls_regra_inscricao	a,
						pls_plano		b
					where	a.nr_seq_plano = b.nr_sequencia
					and	b.ie_tipo_operacao = 'A'  LIMIT 1;
					
					if (qt_regra_inscr_sca_w > 0) then
						begin
						CALL pls_gerar_mens_sca_insc(nr_seq_mensalidade_w, nm_usuario_p);
						exception
						when others then
							CALL pls_gerar_mens_log_erro(nr_seq_lote_p,nr_seq_pagador_w,null,null,
									'Erro ao gerar os valores de inscricao para o pagador da mensalidade!',cd_estabelecimento_p,nm_usuario_p);
						end;
					end if;
					
					select	count(1)
					into STRICT	qt_nota_credito_w
					from	nota_credito
					where	nr_seq_pagador_aprop	= nr_seq_pagador_w
					and	ie_situacao	= 'A'
					and	vl_saldo	> 0  LIMIT 1;
					
					begin
					CALL pls_gerar_mens_bonif_pag(nr_seq_mensalidade_w, nr_seq_pagador_w, nm_usuario_p);
					exception
					when others then
						CALL pls_gerar_mens_log_erro(nr_seq_lote_p,nr_seq_pagador_w,null,nr_seq_mensalidade_w,
								'Erro ao gerar bonificacao para o pagador!',cd_estabelecimento_p,nm_usuario_p);
					end;
					
					-- Francisco - 01/09/2010 - OS 245128 - Gerar lancamentos para o pagador
					begin
					CALL pls_gerar_mens_lanc_prog(null,nr_seq_mensalidade_w,nm_usuario_p);
					exception
					when others then
						CALL pls_gerar_mens_log_erro(nr_seq_lote_p,nr_seq_pagador_w,null,nr_seq_mensalidade_w,
									'Erro ao gerar os valores de lancamentos programados da mensalidade!',cd_estabelecimento_p,nm_usuario_p);
					end;
					
					if (qt_nota_credito_w > 0) then
						begin
						CALL pls_apropriar_nota_credito(nr_seq_pagador_w, nr_seq_mensalidade_w, nm_usuario_p);
						exception
						when others then
							CALL pls_gerar_mens_log_erro(nr_seq_lote_p,nr_seq_pagador_w,null,nr_seq_mensalidade_w,
									'Erro ao apropriar nota de credito!',cd_estabelecimento_p,nm_usuario_p);
						end;
					end if;
					
					begin
					CALL pls_gerar_mens_acrescimo(nr_seq_mensalidade_w,null, nm_usuario_p);
					exception
					when others then
						CALL pls_gerar_mens_log_erro(nr_seq_lote_p,nr_seq_pagador_w,null,nr_seq_mensalidade_w,
									'Erro ao gerar os valores de acrescimo da mensalidade'||chr(13)||chr(10)||sqlerrm,cd_estabelecimento_p,nm_usuario_p);
					end;
					
					--Verificar se o pagador possui erro no log da mensalidade
					select	count(1)
					into STRICT	qt_erros_pagador_w
					from	pls_mensalidade_log
					where	nr_seq_mensalidade	= nr_seq_mensalidade_w  LIMIT 1;
					
					select	sum(a.vl_item),
						sum(a.vl_bonificacao_embutido)
					into STRICT	vl_mens_pagador_w,
						vl_bonificacao_embutido_w
					from	pls_mensalidade_seg_item	a,
						pls_mensalidade_segurado	b
					where	a.nr_seq_mensalidade_seg = b.nr_sequencia
					and	b.nr_seq_mensalidade	= nr_seq_mensalidade_w;
					
					select	count(1),
						sum(vl_item)
					into STRICT	qt_bonific_w,
						vl_bonificacao_w
					from	pls_mensalidade_seg_item	a,
						pls_mensalidade_segurado	b
					where	a.nr_seq_mensalidade_seg = b.nr_sequencia
					and	b.nr_seq_mensalidade	= nr_seq_mensalidade_w
					and	a.ie_tipo_item in ('14','20','27');
					
					if	((vl_mens_pagador_w <> 0) or (qt_bonific_w > 0 AND vl_bonificacao_w <> 0) or (coalesce(vl_bonificacao_embutido_w,0) <> 0)) and (qt_erros_pagador_w	= 0) then
						
						vl_total_pagador_w	:= coalesce(vl_mens_pagador_w,0);
						
						if (coalesce(ie_taxa_emissao_boleto_w,'N') <> 'N') then
							if (coalesce(vl_mens_pagador_w,0) > 0) then
								CALL pls_gerar_mens_taxa_boleto(nr_seq_mensalidade_w, nm_usuario_p);
								
								select	sum(a.vl_item)
								into STRICT	vl_tx_boleto_w
								from	pls_mensalidade_seg_item a,
									pls_mensalidade_segurado b
								where	a.nr_seq_mensalidade_seg	= b.nr_sequencia
								and	b.nr_seq_mensalidade	= nr_seq_mensalidade_w;
								
								vl_total_pagador_w	:= coalesce(vl_tx_boleto_w,0);
							end if;
						end if;
						
						-- Buscar a regra de valor minimo para abatimento da fatura
						if (coalesce(ie_tipo_pagador_w,'N') <> 'I') then
							select	max(nr_sequencia)
							into STRICT	nr_seq_regra_contr_w
							from	pls_regra_mens_contrato
							where	nr_seq_contrato = nr_seq_contrato_pag_w
							and	ie_tipo_regra	= 'VM'
							and	(vl_minimo_abat_fatura IS NOT NULL AND vl_minimo_abat_fatura::text <> '')
							and	trunc(dt_mesano_referencia_w,'dd') between coalesce(dt_inicio_vigencia,dt_mesano_referencia_w) and coalesce(dt_fim_vigencia,dt_mesano_referencia_w);
						else
							select	max(nr_sequencia)
							into STRICT	nr_seq_regra_contr_w
							from	pls_regra_mens_contrato
							where	nr_seq_intercambio = nr_contrato_pag_w
							and	ie_tipo_regra	= 'VM'
							and	(vl_minimo_abat_fatura IS NOT NULL AND vl_minimo_abat_fatura::text <> '')
							and	trunc(dt_mesano_referencia_w,'dd') between coalesce(dt_inicio_vigencia,dt_mesano_referencia_w) and coalesce(dt_fim_vigencia,dt_mesano_referencia_w);
						end if;
						
						if (coalesce(nr_seq_regra_contr_w,0) = 0) then
							if (pls_store_data_mens_pck.get_ie_tipo_estipulante = 'PF') then
								nr_seq_regra_contr_w	:= pls_store_data_mens_pck.get_nr_seq_regra_contr_vm_pf;
							elsif (pls_store_data_mens_pck.get_ie_tipo_estipulante = 'PJ') then
								nr_seq_regra_contr_w	:= pls_store_data_mens_pck.get_nr_seq_regra_contr_vm_pj;
							end if;
						end if;
						
						if (coalesce(nr_seq_regra_contr_w,0) > 0) then
							begin
							select	vl_minimo_abat_fatura
							into STRICT	vl_minimo_abat_fatura_w
							from	pls_regra_mens_contrato
							where	nr_sequencia	= nr_seq_regra_contr_w;
							exception
							when others then
								vl_minimo_abat_fatura_w	:= 0;
							end;
						end if;
						
						update	pls_mensalidade
						set	vl_mensalidade	= vl_total_pagador_w
						where	nr_sequencia	= nr_seq_mensalidade_w;
						
						begin
						CALL pls_gerar_mensagem_mensalidade(nr_seq_mensalidade_w, cd_estabelecimento_p, nm_usuario_p);
						exception
						when others then
							CALL pls_gerar_mens_log_erro(nr_seq_lote_p,nr_seq_pagador_w,null,nr_seq_mensalidade_w,
									'Erro ao gerar a mensagem da mensalidade'||chr(13)||chr(10)||sqlerrm,cd_estabelecimento_p,nm_usuario_p);
						end;
						
						if (vl_total_pagador_w < coalesce(vl_minimo_abat_fatura_w,vl_total_pagador_w)) then
							open C02;
							loop
							fetch C02 into
								nr_seq_mensalidade_segurado_w,
								nr_seq_segurado_w;
							EXIT WHEN NOT FOUND; /* apply on C02 */
								begin
								select	sum(a.vl_item)
								into STRICT	vl_mens_segurado_w
								from	pls_mensalidade_seg_item	a,
									pls_mensalidade_segurado	b
								where	a.nr_seq_mensalidade_seg = b.nr_sequencia
								and	b.nr_sequencia	= nr_seq_mensalidade_segurado_w;
								
								if (coalesce(vl_mens_segurado_w,0) <> 0) then
									vl_mens_segurado_abat_w	:= vl_mens_segurado_w*-1;
									
									nr_seq_item_mensalidade_w := null;
									
									nr_seq_item_mensalidade_w := pls_insert_mens_seg_item('28', nm_usuario_p, null, null, null, null, null, null, null, 'P', null, null, null, null, null, null, null, nr_seq_mensalidade_segurado_w, null, null, null, null, null, null, null, null, null, null, null, null, null, vl_mens_segurado_abat_w, nr_seq_item_mensalidade_w);
									
									if (nr_seq_item_mensalidade_w IS NOT NULL AND nr_seq_item_mensalidade_w::text <> '') then
									-- Lancamento programado para o proximo mes
										select	nextval('pls_segurado_mensalidade_seq')
										into STRICT	nr_seq_segurado_mens_w
										;

										insert	into	pls_segurado_mensalidade(	nr_sequencia, nr_seq_segurado, cd_estabelecimento,
												dt_referencia, ie_tipo_item, dt_atualizacao,
												nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
												vl_item, tx_desconto, ie_acao_desfazer,
												ie_situacao, ie_tipo_lanc, nr_seq_mens_seg_gerado)
											values (	nr_seq_segurado_mens_w, nr_seq_segurado_w, cd_estabelecimento_p,
												dt_referencia_lanc_w, '29', clock_timestamp(),
												nm_usuario_p, clock_timestamp(), nm_usuario_p,
												vl_mens_segurado_w, 0, 'A',
												'A','P', nr_seq_mensalidade_segurado_w);
									end if;
								end if;
								end;
							end loop;
							close C02;
							
							select	sum(a.vl_item)
							into STRICT	vl_total_pagador_w
							from	pls_mensalidade_seg_item	a,
								pls_mensalidade_segurado	b
							where	a.nr_seq_mensalidade_seg = b.nr_sequencia
							and	b.nr_seq_mensalidade	= nr_seq_mensalidade_w;
							
							update	pls_mensalidade
							set	vl_mensalidade	= vl_total_pagador_w
							where	nr_sequencia	= nr_seq_mensalidade_w;
						end if;
						
						CALL pls_gerar_valor_ato_cooperado(nr_seq_mensalidade_w,null);
						
						if (qt_regra_pro_rata_dia_w > 0) then
							CALL pls_gerar_pro_rata_dia(nr_seq_mensalidade_w);
						end if;
						
						CALL pls_gerar_tributos_mens(nr_seq_mensalidade_w, cd_estabelecimento_p, nm_usuario_p);
						
						if (vl_total_pagador_w < 0) then
							CALL pls_gerar_mens_log_erro(nr_seq_lote_p,nr_seq_pagador_w,null,nr_seq_mensalidade_w,'Mensalidade com valor negativo',cd_estabelecimento_p,nm_usuario_p);
							CALL pls_deletar_mensalidade(nr_seq_mensalidade_w,'S',nm_usuario_p,'N');
						end if;
					else
						CALL pls_deletar_mensalidade(nr_seq_mensalidade_w,'S',nm_usuario_p,'N');
					end if;
				end if;
			end if;
		end if;
		CALL pls_store_data_mens_pck.clear_pls_mensalidade();
		end;
	end loop;
end loop; --Close c01
open C04;
loop
fetch C04 into
	nr_seq_mensalidade_limite_w;
EXIT WHEN NOT FOUND; /* apply on C04 */
	begin
	CALL pls_gerar_valor_ato_cooperado(nr_seq_mensalidade_limite_w,null);
	if (qt_regra_pro_rata_dia_w > 0) then
		CALL pls_gerar_pro_rata_dia(nr_seq_mensalidade_limite_w);
	end if;
	CALL pls_gerar_tributos_mens(nr_seq_mensalidade_limite_w, cd_estabelecimento_p, nm_usuario_p);
	end;
end loop;
close C04;

CALL pls_gerar_valor_min_contrato(nr_seq_lote_p, nm_usuario_p);

commit;

select	count(1)
into STRICT	qt_mensalidades_w
from	pls_mensalidade
where	nr_seq_lote	= nr_seq_lote_p;

if (qt_mensalidades_w > 0) then
	--pls_criticar_mensalides_pck.set_updating_mensalidade(true);
	CALL pls_atualiza_valor_mensalidade(nr_seq_lote_p, nm_usuario_p);
	--pls_criticar_mensalides_pck.generate_criticas_mensalides(nm_usuario_p);
	if (coalesce(ie_antecipacao_geracao_w,'N') = 'S') and (dt_referencia_trunc_month_w > trunc(clock_timestamp(),'month')) then
		dt_contabilizacao_w	:= clock_timestamp();
	end if;
	
	-- Tratamento para quando e gerada a primeira mensalidade para todos contratos novos
	if	(dt_inicio_adesao_w IS NOT NULL AND dt_inicio_adesao_w::text <> '' AND dt_fim_adesao_w IS NOT NULL AND dt_fim_adesao_w::text <> '') then
		select	count(1)
		into STRICT	qt_mens_fora_primeira_parc_w
		from	pls_mensalidade_segurado	a,
			pls_mensalidade			b
		where	a.nr_seq_mensalidade	= b.nr_sequencia
		and	b.nr_seq_lote		= nr_seq_lote_p
		and	a.nr_parcela > 1;
		
		if (qt_mens_fora_primeira_parc_w = 0) then
			update	pls_lote_mensalidade
			set	ie_primeira_mensalidade = 'S'
			where	nr_sequencia		= nr_seq_lote_p;
		end if;
	end if;
	
	-- NAO ADICIONAR NADA APOS ESSA LINHA
	dt_fim_geracao_w := clock_timestamp();
	
	select (dt_fim_geracao_w - dt_inicio_geracao_w) * 86400
	into STRICT	qt_segundos_geracao_w
	;
	
	if (qt_segundos_geracao_w <> 0) then
		qt_horas_lote_w		:= trunc((qt_segundos_geracao_w / 60) / 60);
		qt_segundos_geracao_w	:= qt_segundos_geracao_w - (qt_horas_lote_w * 60 * 60);
		
		qt_minutos_lote_w	:= trunc(qt_segundos_geracao_w / 60);
		qt_segundos_geracao_w	:= qt_segundos_geracao_w - (qt_minutos_lote_w * 60);
		
		qt_segundos_lote_w	:= qt_segundos_geracao_w;
		
		hr_geracao_lote_w	:= lpad(qt_horas_lote_w,2,'0')||':'||lpad(qt_minutos_lote_w,2,'0')||':'||lpad(qt_segundos_lote_w,2,'0');
	else
		hr_geracao_lote_w	:= '00:00:00';
	end if;
	
	update	pls_lote_mensalidade
	set	dt_geracao		= clock_timestamp(),
		ie_status		= '3',
		dt_atualizacao		= clock_timestamp(),
		nm_usuario		= nm_usuario_p,
		dt_inicio_geracao	= dt_inicio_geracao_w,
		dt_fim_geracao		= dt_fim_geracao_w,
		hr_geracao_lote		= hr_geracao_lote_w,
		qt_pagadores_lote	= qt_mensalidades_w,
		dt_contabilizacao	= coalesce(dt_contabilizacao,dt_contabilizacao_w)
	where	nr_sequencia		= nr_seq_lote_p;
end if;

CALL pls_store_data_mens_pck.clear_pls_lote_mensalidade();
CALL pls_store_data_mens_pck.clear_pls_parametros();
CALL pls_store_data_mens_pck.clear_pls_parametro_pagamento();
CALL pls_store_data_mens_pck.clear_pls_regra_mens_contr_vm();
CALL pls_store_data_mens_pck.clear_pls_regra_mens_contr_f();
CALL pls_store_data_mens_pck.clear_pls_regra_serie_nf_compl();

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_mensalidade ( nr_seq_lote_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, nr_seq_segurado_p bigint, dt_referencia_p timestamp) FROM PUBLIC;

