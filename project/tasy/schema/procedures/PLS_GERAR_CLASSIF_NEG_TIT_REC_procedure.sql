-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_classif_neg_tit_rec ( nr_titulo_p bigint, nr_seq_baixa_p bigint, nm_usuario_p text) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: 
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[  ]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atenção:Performance.
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
nr_seq_neg_cr_boleto_w		negociacao_cr_boleto.nr_sequencia%type;
nr_seq_parcela_w		negociacao_cr_boleto.nr_seq_parcela%type;
qt_baixa_w			integer;
vl_recebido_w			double precision;
vl_parcela_w			double precision;
vl_item_prop_w			double precision;
vl_pendente_w			double precision;
vl_baixa_w			double precision;
nr_seq_neg_cr_parcela_w		negociacao_cr_parcela.nr_sequencia%type;
nr_seq_negociacao_origem_w	titulo_receber.nr_seq_negociacao_origem%type;

vl_total_itens_w		pls_negociacao_mens_item.vl_item%type;
vl_total_w			pls_negociacao_mens_item.vl_item%type;
tx_baixa_w			double precision;
nr_seq_ultimo_item_w		pls_negociacao_mens_item.nr_sequencia%type;
qt_parametros_ir_w		bigint;

C01 CURSOR(nr_seq_parcela_pc bigint) FOR
	SELECT	b.nr_sequencia,
		b.vl_item,
		b.nr_seq_item_mens,
		b.nr_seq_segurado
	from	pls_negociacao_mens_item b,
		negociacao_cr_parcela c
	where	b.nr_seq_parcela	= c.nr_sequencia
	and	c.nr_sequencia		= nr_seq_parcela_pc
	order by b.vl_item;

BEGIN
-- Verificar se o título é de negociação.
select	max(nr_sequencia)
into STRICT	nr_seq_neg_cr_boleto_w
from	negociacao_cr_boleto
where	nr_titulo	= nr_titulo_p;

select	max(nr_seq_negociacao_origem)
into STRICT	nr_seq_negociacao_origem_w
from	titulo_receber
where	nr_titulo = nr_titulo_p;

-- tratamento criado para gravar os valores na classificação para forma de pagamento cheque -- tratado para forma de pagamento cartão
if (nr_seq_negociacao_origem_w IS NOT NULL AND nr_seq_negociacao_origem_w::text <> '') then
	select	max(nr_sequencia)
	into STRICT	nr_seq_neg_cr_parcela_w
	from	negociacao_cr_parcela
	where	nr_seq_negociacao = nr_seq_negociacao_origem_w
	and	ie_forma_pagto in ('CH','CA');
end if;

select	count(1)
into STRICT	qt_parametros_ir_w
from	pls_parametros_ir;

if (qt_parametros_ir_w > 0) then
	if	((nr_seq_neg_cr_boleto_w IS NOT NULL AND nr_seq_neg_cr_boleto_w::text <> '') or (nr_seq_neg_cr_parcela_w IS NOT NULL AND nr_seq_neg_cr_parcela_w::text <> '')) then
		-- Buscar informações da baixa.
		select	vl_recebido
		into STRICT	vl_recebido_w
		from	titulo_receber_liq
		where	nr_sequencia	= nr_seq_baixa_p
		and	nr_titulo	= nr_titulo_p;
		
		-- Buscar informações do título.
		if (nr_seq_neg_cr_boleto_w IS NOT NULL AND nr_seq_neg_cr_boleto_w::text <> '') then
			select	nr_seq_parcela,
				vl_parcela
			into STRICT	nr_seq_parcela_w,
				vl_parcela_w
			from	negociacao_cr_boleto
			where	nr_sequencia	= nr_seq_neg_cr_boleto_w;
		elsif (nr_seq_neg_cr_parcela_w IS NOT NULL AND nr_seq_neg_cr_parcela_w::text <> '') then
			select	nr_sequencia,
				vl_parcela
			into STRICT	nr_seq_parcela_w,
				vl_parcela_w
			from	negociacao_cr_parcela
			where	nr_sequencia	= nr_seq_neg_cr_parcela_w;
		end if;
		
		-- Caso o valor da baixa for igual ao valor do título, deve-se inserir os registros colocando o valor total da baixa dos itens da negociação.
		if (vl_recebido_w	>= vl_parcela_w) then
			delete from pls_titulo_rec_liq_neg
			where	nr_titulo = nr_titulo_p
			and	nr_seq_baixa = nr_seq_baixa_p;
		
			for r_C01_w in C01(nr_seq_parcela_w) loop
				begin
					insert into pls_titulo_rec_liq_neg(
							nr_sequencia, nr_seq_neg_mens_item, nr_titulo,
							nr_seq_baixa, vl_baixa, dt_atualizacao,
							nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
							nr_seq_segurado
						)
					values (	nextval('pls_titulo_rec_liq_neg_seq'), r_C01_w.nr_sequencia, nr_titulo_p,
							nr_seq_baixa_p, r_C01_w.vl_item, clock_timestamp(),
							nm_usuario_p, clock_timestamp(), nm_usuario_p,
							r_C01_w.nr_seq_segurado
					);
				end;
			end loop; -- CO1
		else
		-- Caso contrário deve-se dar baixar parcial dos itens da negociação.
			select	max(b.nr_sequencia),
				sum(b.vl_item)
			into STRICT	nr_seq_ultimo_item_w,
				vl_total_itens_w
			from	pls_negociacao_mens_item b,
				negociacao_cr_parcela c
			where	b.nr_seq_parcela	= c.nr_sequencia
			and	c.nr_sequencia		= nr_seq_parcela_w;
			
			vl_total_w	:= 0;
			
			delete from pls_titulo_rec_liq_neg
			where	nr_titulo = nr_titulo_p
			and	nr_seq_baixa = nr_seq_baixa_p;
			
			for r_C01_w in C01(nr_seq_parcela_w) loop
				begin
				
				--Verificar se o item já possui alguma baixa.
				select	count(1)
				into STRICT	qt_baixa_w
				from	pls_titulo_rec_liq_neg
				where	nr_titulo		= nr_titulo_p
				and	nr_seq_neg_mens_item	= r_C01_w.nr_sequencia;
				
				if (qt_baixa_w > 0) then
					select	sum(a.vl_baixa)
					into STRICT	vl_baixa_w
					from	pls_titulo_rec_liq_neg a,
						pls_negociacao_mens_item b
					where	b.nr_sequencia		= a.nr_seq_neg_mens_item
					and	a.nr_titulo		= nr_titulo_p
					and	b.nr_sequencia		= r_C01_w.nr_sequencia;
					
					vl_pendente_w	:= r_C01_w.vl_item	- vl_baixa_w;
				else
					vl_pendente_w	:= r_C01_w.vl_item;
				end if;
				
				tx_baixa_w	:= dividir((vl_recebido_w * 100),vl_total_itens_w);
				vl_item_prop_w	:= (tx_baixa_w * r_C01_w.vl_item) / 100; --ceil
				
				if (vl_item_prop_w > vl_pendente_w) then
					vl_item_prop_w	:= vl_pendente_w;
				end if;
				
				if	((vl_total_w+vl_item_prop_w) > vl_recebido_w) then
					vl_item_prop_w	:= vl_recebido_w - vl_total_w;
				elsif (nr_seq_ultimo_item_w = r_C01_w.nr_sequencia) and
					((vl_total_w+vl_item_prop_w) < vl_recebido_w) then
					vl_item_prop_w	:= vl_recebido_w - vl_total_w;
				end if;
				
				if (vl_item_prop_w > 0) then
					vl_total_w	:= vl_total_w + vl_item_prop_w;
					insert	into	pls_titulo_rec_liq_neg(	nr_sequencia, nr_seq_neg_mens_item, nr_titulo,
							nr_seq_baixa, vl_baixa, dt_atualizacao,
							nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
							nr_seq_segurado)
					values (	nextval('pls_titulo_rec_liq_neg_seq'), r_C01_w.nr_sequencia, nr_titulo_p,
							nr_seq_baixa_p, vl_item_prop_w, clock_timestamp(),
							nm_usuario_p, clock_timestamp(), nm_usuario_p,
							r_C01_w.nr_seq_segurado);
				end if;
				end;
			end loop;-- CO1
		end if;
	end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_classif_neg_tit_rec ( nr_titulo_p bigint, nr_seq_baixa_p bigint, nm_usuario_p text) FROM PUBLIC;

