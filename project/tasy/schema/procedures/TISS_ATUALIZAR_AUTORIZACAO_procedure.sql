-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE tiss_atualizar_autorizacao ( nr_sequencia_autor_p bigint, nm_usuario_p text) AS $body$
DECLARE


cd_material_w			bigint;
cd_convenio_w			bigint;
cd_grupo_w			varchar(255);
nr_seq_conversao_w		bigint;
cd_cgc_fabricante_w		varchar(255);
cd_material_convenio_w		varchar(255);
ds_material_convenio_w		varchar(255);
cd_estabelecimento_w		bigint;
ie_clinica_w			bigint;
ie_tipo_atendimento_w		bigint;
cd_setor_w			bigint;
ie_solic_w			varchar(255);
cd_cgc_prestador_w		varchar(255);
cd_medico_atendimento_w		varchar(255);
cd_medico_prestador_w		varchar(255);
cd_procedencia_w		bigint;
ds_irrelevante_w		varchar(255);
cd_medico_referido_w		varchar(10);
cd_empresa_ref_w		bigint;
ie_carater_inter_sus_w		varchar(2);
cd_prestador_tiss_w		varchar(60);
ds_prestador_tiss_w		varchar(255);
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
cd_cgc_estag_w			varchar(14);
cd_cgc_prestador_regra_w	varchar(255);
cd_prestador_tiss_regra_w	varchar(60);
ds_prestador_tiss_regra_w	varchar(255);
ie_tiss_tipo_anexo_w		varchar(15);
cd_medico_solicitante_w		varchar(10);
nr_atendimento_w		bigint;
cd_autorizacao_ref_w		varchar(20);
dt_autorizacao_ref_w		timestamp;
nr_seq_autor_ref_w		bigint;
cd_ans_ref_w			varchar(6);
ie_guia_ref_prorrog_w		varchar(1);
ie_tipo_autorizacao_w		varchar(2);
qt_lote_anexo_w			bigint;
qt_diag_anexo_w			bigint;
qt_anexo_lib_w			bigint;
cd_categoria_conv_w		varchar(10);
cd_plano_convenio_w		varchar(10);
ds_texto_w			varchar(255) := substr(wheb_mensagem_pck.get_texto(309616),1,255);--Nao Informada
nr_seq_agenda_w			    autorizacao_convenio.nr_seq_agenda%type;
nr_seq_age_integ_w		bigint;
nr_seq_agenda_consulta_w	autorizacao_convenio.nr_seq_agenda_consulta%type;
nr_seq_gestao_w			bigint;
nr_seq_paciente_w		bigint;
nr_seq_paciente_setor_w		bigint;
nr_seq_rxt_tratamento_w		bigint;
ds_cbo_saude_w			varchar(255);
nr_seq_cbo_saude_w		bigint;
cd_cbo_saude_w			varchar(255);
cd_interno_origem_tiss_w        autorizacao_convenio.cd_interno_origem_tiss%type;
cd_interno_contrat_exec_w	autorizacao_convenio.cd_interno_contrat_exec%type;
ds_contratado_exec_tiss_w	autorizacao_convenio.ds_contratado_exec_tiss%type;
cd_interno_contrat_solic_w	autorizacao_convenio.cd_interno_contrat_solic%type;
ie_cod_prest_oper_cab_w		varchar(1) := 'N';
nr_seq_regra_solic_w		bigint;
nr_seq_regra_prest_w		bigint;
IE_DADOS_EXECUTANTE_w		varchar(1) := 'N';
ie_gerar_prest_solic_proc_w	varchar(1) := 'N';
ie_conveniado_w			varchar(1);
nr_seq_guia_prest_w autorizacao_convenio.cd_autorizacao_prest%type := null;

IE_INTERNO_AUTORIZADO_C constant estagio_autorizacao.nr_sequencia%type := '10';
IE_CODIGO_C constant char(1) := 'C';

c01 CURSOR FOR
SELECT	cd_material,
	cd_cgc_fabricante
from	material_autorizado
where	nr_sequencia_autor	= nr_sequencia_autor_p;

c02 CURSOR FOR
SELECT	cd_procedimento,
	ie_origem_proced
from	procedimento_autorizado
where	nr_sequencia_autor	= nr_sequencia_autor_p;


BEGIN

delete	from tiss_autor_guia_ref
where	nr_sequencia_autor	= nr_sequencia_autor_p;

update	autorizacao_convenio
set	cd_cgc_prestador	 = NULL,
	cd_medico_solic_tiss	 = NULL,
	cd_prestador_tiss	 = NULL,
	ds_prestador_tiss	 = NULL,
	CD_INTERNO_ORIGEM_TISS   = NULL,
	CD_INTERNO_CONTRAT_EXEC  = NULL,     
	DS_CONTRATADO_EXEC_TISS  = NULL      
where	nr_sequencia		= nr_sequencia_autor_p;

select	max(cd_convenio),
	max(ie_tiss_tipo_anexo_autor)
into STRICT	cd_convenio_w,
	ie_tiss_tipo_anexo_w
from	autorizacao_convenio
where	nr_sequencia	= nr_sequencia_autor_p;

select	max(ie_clinica),
	coalesce(max(ie_tipo_atendimento),0),
	max(obter_setor_atendimento(a.nr_atendimento)),
	max(coalesce(b.cd_estabelecimento,a.cd_estabelecimento)),
	max(coalesce(a.cd_medico_atendimento, a.cd_medico_resp)),
	max(cd_procedencia),
	max(a.cd_medico_referido),
	coalesce(max(obter_dados_categ_conv(a.nr_atendimento, 'E')),0),
	max(a.ie_carater_inter_sus),
	max(b.cd_medico_solicitante),
	max(a.nr_atendimento),
	max(b.ie_tipo_autorizacao),
	max(Obter_dados_autor_convenio(b.nr_sequencia,'CP')),
	max(b.nr_seq_agenda),
	max(b.nr_seq_age_integ),
	max(b.nr_seq_agenda_consulta),
	max(b.nr_seq_gestao),
	max(b.nr_seq_paciente),
	max(b.nr_seq_paciente_setor),
	max(b.nr_seq_rxt_tratamento),
    max(b.cd_autorizacao_prest)
into STRICT	ie_clinica_w,
	ie_tipo_atendimento_w,
	cd_setor_w,
	cd_estabelecimento_w,
	cd_medico_atendimento_w,
	cd_procedencia_w,
	cd_medico_referido_w,
	cd_empresa_ref_w,
	ie_carater_inter_sus_w,
	cd_medico_solicitante_w,
	nr_atendimento_w,
	ie_tipo_autorizacao_w,
	cd_plano_convenio_w,
	nr_seq_agenda_w,
	nr_seq_age_integ_w,
	nr_seq_agenda_consulta_w,
	nr_seq_gestao_w,
	nr_seq_paciente_w,
	nr_seq_paciente_setor_w,
	nr_seq_rxt_tratamento_w,
    nr_seq_guia_prest_w
FROM autorizacao_convenio b
LEFT OUTER JOIN atendimento_paciente a ON (b.nr_atendimento = a.nr_atendimento)
WHERE b.nr_sequencia		= nr_sequencia_autor_p;

select	Obter_dados_autor_convenio(nr_sequencia_autor_p,'CC')
into STRICT	cd_categoria_conv_w
;

select	max(cd_cgc)
into STRICT	cd_cgc_estag_w
from	estabelecimento
where	cd_estabelecimento	= cd_estabelecimento_w;

cd_interno_origem_tiss_w := null;
cd_interno_contrat_solic_w := null;
cd_interno_contrat_exec_w := null;
ds_contratado_exec_tiss_w := null;


SELECT * FROM tiss_obter_regra_prest_solic(cd_convenio_w, cd_estabelecimento_w, cd_setor_w, ie_clinica_w, cd_procedencia_w, ie_tipo_atendimento_w, 'S', ie_solic_w, cd_cgc_prestador_w, cd_medico_atendimento_w, cd_medico_prestador_w, cd_prestador_tiss_w, ds_prestador_tiss_w, cd_medico_referido_w, cd_categoria_conv_w, clock_timestamp(), null, null, cd_plano_convenio_w, nr_seq_regra_solic_w) INTO STRICT ie_solic_w, cd_cgc_prestador_w, cd_medico_prestador_w, cd_prestador_tiss_w, ds_prestador_tiss_w, nr_seq_regra_solic_w;



if (coalesce(nr_seq_regra_solic_w,0) > 0) then

	select	coalesce(Max(IE_COD_PREST_OPER_CAB),'N'),
		coalesce(Max(ie_gerar_cod_prest_solic_proc),'N')
	into STRICT	ie_cod_prest_oper_cab_w,
		ie_gerar_prest_solic_proc_w
	from	TISS_REGRA_PRESTADOR_SOLIC
	where	nr_sequencia = nr_seq_regra_solic_w;

	if (ie_cod_prest_oper_cab_w = 'S') then
		cd_interno_origem_tiss_w := cd_prestador_tiss_w;
	end if;

	if (ie_gerar_prest_solic_proc_w = 'S') then
		cd_interno_contrat_solic_w := cd_prestador_tiss_w;
	end if;

end if;			


open C02;
loop
fetch C02 into
	cd_procedimento_w,
	ie_origem_proced_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	SELECT * FROM tiss_obter_regra_prestador(cd_convenio_w, cd_estabelecimento_w, ie_tipo_atendimento_w, null, ie_clinica_w, cd_cgc_estag_w, cd_setor_w, cd_medico_atendimento_w, cd_medico_atendimento_w, cd_categoria_conv_w, cd_procedimento_w, ie_origem_proced_w, '4', 'N', cd_cgc_prestador_regra_w, cd_prestador_tiss_regra_w, ds_prestador_tiss_regra_w, ds_irrelevante_w, ds_irrelevante_w, nr_seq_regra_prest_w, 'P', ds_irrelevante_w, null, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, clock_timestamp(), 'N', null, null, null, null, null, 'N', 'S', null, null) INTO STRICT cd_cgc_prestador_regra_w, cd_prestador_tiss_regra_w, ds_prestador_tiss_regra_w, ds_irrelevante_w, ds_irrelevante_w, nr_seq_regra_prest_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w;


	if (cd_cgc_prestador_regra_w IS NOT NULL AND cd_cgc_prestador_regra_w::text <> '') then
		cd_cgc_prestador_w	:= cd_cgc_prestador_regra_w;
	end if;
	if (cd_prestador_tiss_regra_w IS NOT NULL AND cd_prestador_tiss_regra_w::text <> '') then
		cd_prestador_tiss_w	:= cd_prestador_tiss_regra_w;
	end if;
	if (ds_prestador_tiss_regra_w IS NOT NULL AND ds_prestador_tiss_regra_w::text <> '') then
		ds_prestador_tiss_w	:= ds_prestador_tiss_regra_w;
	end if;

end loop;
close C02;



if (nr_seq_regra_prest_w > 0) then

	select	coalesce(Max(IE_COD_PREST_OPER_CAB),'N'),
		coalesce(max(ie_dados_executante),'N'),
		coalesce(Max(ie_gerar_cod_prest_solic_proc),'N')
	into STRICT	ie_cod_prest_oper_cab_w,
		ie_dados_executante_w,
		ie_gerar_prest_solic_proc_w
	from	tiss_regra_prestador
	where	nr_sequencia = nr_seq_regra_prest_w;


	if (ie_cod_prest_oper_cab_w = 'S') then
		cd_interno_origem_tiss_w := cd_prestador_tiss_w;
	end if;

	if (ie_dados_executante_w = 'S') then

		cd_interno_contrat_exec_w := cd_prestador_tiss_w;
		ds_contratado_exec_tiss_w := ds_prestador_tiss_w;

	end if;

	if (ie_gerar_prest_solic_proc_w = 'S') then
		cd_interno_contrat_solic_w := cd_prestador_tiss_w;
	end if;

end if;	

select	coalesce(max(obter_se_medico_conveniado(cd_estabelecimento_w, cd_medico_solicitante_w, cd_convenio_w, null, null, cd_categoria_conv_w, cd_setor_w, cd_plano_convenio_w, null, ie_tipo_atendimento_w, null,null)), 'N')
into STRICT	ie_conveniado_w
;


/*lhalves OS 654202 em 08/10/2013 - Se na regra esta definido para 'M' = Medico da autorizacao, se 'I' - e possui medico informado na regra.*/

if (ie_solic_w = 'M') then
	select	substr(obter_nome_pf_pj(cd_medico_solicitante_w,null),1,255)
	into STRICT	ds_prestador_tiss_w
	;

	select	max(nr_cpf)
	into STRICT	cd_prestador_tiss_w
	from	pessoa_fisica
	where	cd_pessoa_fisica = cd_medico_solicitante_w;

	cd_medico_prestador_w	:= cd_medico_solicitante_w;
elsif (ie_solic_w = 'I') and (cd_medico_prestador_w IS NOT NULL AND cd_medico_prestador_w::text <> '') then
	select	substr(obter_nome_pf_pj(cd_medico_prestador_w,null),1,255)
	into STRICT	ds_prestador_tiss_w
	;
elsif (ie_solic_w = 'MC') and (coalesce(cd_medico_prestador_w::text, '') = '') and (ie_conveniado_w = 'S') then

	cd_medico_prestador_w	:= cd_medico_solicitante_w;

	select	substr(obter_nome_pf_pj(cd_medico_solicitante_w,null),1,255)
	into STRICT	ds_prestador_tiss_w
	;	
end if;

begin
select	max(a.nr_seq_cbo_saude),
	max(a.cd_cbo_saude)
into STRICT	nr_seq_cbo_saude_w,
	cd_cbo_saude_w
from	tiss_dados_solicitante_v a
where	a.nr_sequencia_autor	= nr_sequencia_autor_p;
exception
when others then
	nr_seq_cbo_saude_w := null;
	cd_cbo_saude_w	   := null;
end;

if (coalesce(nr_seq_cbo_saude_w,0) > 0) then

	begin
	select	substr(cd_cbo || ' - ' || ds_cbo,1,255)
	into STRICT	ds_cbo_saude_w
	from	cbo_saude
	where	nr_sequencia = nr_seq_cbo_saude_w;	
	exception
	when others then
		ds_cbo_saude_w := null;
	end;
elsif (cd_cbo_saude_w IS NOT NULL AND cd_cbo_saude_w::text <> '') then	
	begin
	select	substr(cd_cbo || ' - ' || ds_cbo,1,255)
	into STRICT	ds_cbo_saude_w
	from	cbo_saude
	where	cd_cbo = cd_cbo_saude_w;
	exception
	when others then
		ds_cbo_saude_w := null;
	end;	
end if;

if (coalesce(nr_seq_guia_prest_w::text, '') = '') then
        nr_seq_guia_prest_w := tiss_obter_guia_prest_autor(cd_convenio_w, cd_estabelecimento_w, ie_tipo_autorizacao_w, nr_atendimento_w, nr_seq_agenda_w, nr_seq_age_integ_w, nr_seq_guia_prest_w);
end if;

update	autorizacao_convenio
set	cd_cgc_prestador	= cd_cgc_prestador_w,
	cd_medico_solic_tiss	= cd_medico_prestador_w,
	cd_prestador_tiss	= cd_prestador_tiss_w,
	ds_prestador_tiss	= ds_prestador_tiss_w,
	DS_CBO_TISS		= ds_cbo_saude_w,
	CD_INTERNO_ORIGEM_TISS  = cd_interno_origem_tiss_w,
	CD_INTERNO_CONTRAT_EXEC = cd_interno_contrat_exec_w,     
	DS_CONTRATADO_EXEC_TISS = ds_contratado_exec_tiss_w,
	CD_INTERNO_CONTRAT_SOLIC = cd_interno_contrat_solic_w,
    cd_autorizacao_prest = nr_seq_guia_prest_w
where	nr_sequencia		= nr_sequencia_autor_p;

open c01;
loop
fetch c01 into
	cd_material_w,
	cd_cgc_fabricante_w;
EXIT WHEN NOT FOUND; /* apply on c01 */

	SELECT * FROM converte_material_convenio(	cd_convenio_w, cd_material_w, null, null, cd_cgc_fabricante_w, obter_dados_autor_convenio(nr_sequencia_autor_p,'E'), clock_timestamp(), null, cd_material_convenio_w, cd_grupo_w, nr_seq_conversao_w, ie_tipo_atendimento_w, null, cd_empresa_ref_w, null, ie_carater_inter_sus_w, null, null, ie_clinica_w, null) INTO STRICT cd_material_convenio_w, cd_grupo_w, nr_seq_conversao_w;

	if (nr_seq_conversao_w IS NOT NULL AND nr_seq_conversao_w::text <> '') then

		/*select	max(obter_desc_mat_convenio(cd_material_convenio_w, cd_convenio_w))
		into	ds_material_convenio_w
		from	dual;*/
		begin
		select	substr(a.ds_material_convenio,1,255)
		into STRICT	ds_material_convenio_w
		from	conversao_material_convenio a
		where	a.nr_sequencia = nr_seq_conversao_w;
		exception
		when others then			
			ds_material_convenio_w	:= null;
		end;

		update	material_autorizado
		set	cd_material_convenio	= cd_material_convenio_w,
			ds_mat_convenio		= ds_material_convenio_w
		where	nr_sequencia_autor	= nr_sequencia_autor_p
		and	cd_material		= cd_material_w;
	else
		update	material_autorizado
		set	cd_material_convenio	 = NULL,
			ds_mat_convenio		 = NULL
		where	nr_sequencia_autor	= nr_sequencia_autor_p
		and	cd_material		= cd_material_w;

	end if;

end loop;
close c01;

if (ie_tipo_autorizacao_w = '2') or (tiss_obter_tipo_guia_autor(nr_sequencia_autor_p)= '8') then --lhalves OS 683227 em 24/01/2014 Tratamento para o TISS - Somente para prorrogacao
	select	coalesce(max(ie_guia_ref_prorrog),'G')
	into STRICT	ie_guia_ref_prorrog_w
	from	tiss_parametros_convenio
	where	cd_estabelecimento	= cd_estabelecimento_w
	and	cd_convenio		= cd_convenio_w;

	if (coalesce(ie_guia_ref_prorrog_w,'G') = 'I') then

		begin
			select	nr_sequencia
			into STRICT	nr_seq_autor_ref_w
			from	autorizacao_convenio
			where	nr_atendimento		= nr_atendimento_w
			and	cd_convenio		= cd_convenio_w
			and	ie_tipo_autorizacao 	= '1'
			and	(cd_autorizacao IS NOT NULL AND cd_autorizacao::text <> '')
            and obter_estagio_autor(nr_seq_estagio, IE_CODIGO_C) = IE_INTERNO_AUTORIZADO_C  LIMIT 1;
		exception
		when no_data_found then
			begin
			select	nr_sequencia
			into STRICT	nr_seq_autor_ref_w
			from	autorizacao_convenio
			where	nr_seq_agenda		= nr_seq_agenda_w
			and	cd_convenio		= cd_convenio_w
			and	ie_tipo_autorizacao 	= '1'
			and	(cd_autorizacao IS NOT NULL AND cd_autorizacao::text <> '')  LIMIT 1;
			exception
			when no_data_found then
				begin
				select	nr_sequencia
				into STRICT	nr_seq_autor_ref_w
				from	autorizacao_convenio
				where	nr_seq_agenda_consulta	= nr_seq_agenda_consulta_w
				and	cd_convenio		= cd_convenio_w
				and	ie_tipo_autorizacao 	= '1'
				and	(cd_autorizacao IS NOT NULL AND cd_autorizacao::text <> '')  LIMIT 1;
				exception
				when no_data_found then
					begin
					select	nr_sequencia
					into STRICT	nr_seq_autor_ref_w
					from	autorizacao_convenio
					where	nr_seq_age_integ	= nr_seq_age_integ_w
					and	cd_convenio		= cd_convenio_w
					and	ie_tipo_autorizacao 	= '1'
					and	(cd_autorizacao IS NOT NULL AND cd_autorizacao::text <> '')  LIMIT 1;
					exception
					when no_data_found then
						begin
						select	nr_sequencia
						into STRICT	nr_seq_autor_ref_w
						from	autorizacao_convenio
						where	nr_seq_gestao		= nr_seq_gestao_w
						and	cd_convenio		= cd_convenio_w
						and	ie_tipo_autorizacao 	= '1'
						and	(cd_autorizacao IS NOT NULL AND cd_autorizacao::text <> '')  LIMIT 1;
						exception
						when no_data_found then
							begin
							select	nr_sequencia
							into STRICT	nr_seq_autor_ref_w
							from	autorizacao_convenio
							where	nr_seq_paciente		= nr_seq_paciente_w
							and	cd_convenio		= cd_convenio_w
							and	ie_tipo_autorizacao 	= '1'
							and	(cd_autorizacao IS NOT NULL AND cd_autorizacao::text <> '')  LIMIT 1;
							exception
							when no_data_found then
								begin
								select	nr_sequencia
								into STRICT	nr_seq_autor_ref_w
								from	autorizacao_convenio
								where	nr_seq_paciente_setor	= nr_seq_paciente_setor_w
								and	cd_convenio		= cd_convenio_w
								and	ie_tipo_autorizacao 	= '1'
								and	(cd_autorizacao IS NOT NULL AND cd_autorizacao::text <> '')  LIMIT 1;
								exception
								when no_data_found then
									begin
									select	nr_sequencia
									into STRICT	nr_seq_autor_ref_w
									from	autorizacao_convenio
									where	nr_seq_rxt_tratamento	= nr_seq_rxt_tratamento_w
									and	cd_convenio		= cd_convenio_w
									and	ie_tipo_autorizacao 	= '1'
									and	(cd_autorizacao IS NOT NULL AND cd_autorizacao::text <> '')  LIMIT 1;
									exception
									when others then
										nr_seq_autor_ref_w	:= null;
									end;
								end;
							end;
						end;
					end;
				end;
			end;
		end;		

		if (nr_seq_autor_ref_w IS NOT NULL AND nr_seq_autor_ref_w::text <> '') then

			select	max(a.cd_autorizacao),
				max(a.dt_autorizacao),
				max(substr(c.cd_ans,1,6))
			into STRICT	cd_autorizacao_ref_w,
				dt_autorizacao_ref_w,
				cd_ans_ref_w
			from	autorizacao_convenio a,
				convenio b,
				pessoa_juridica c
			where	a.cd_convenio	= b.cd_convenio
			and	b.cd_cgc	= c.cd_cgc
			and	a.nr_sequencia	= nr_seq_autor_ref_w;

			insert	into TISS_AUTOR_GUIA_REF(nr_sequencia_autor,
				nr_sequencia_autor_ref,
				cd_ans,
				dt_emissao_guia,
				nr_guia_prestador,
				cd_autorizacao,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec)
			values (nr_sequencia_autor_p,
				nr_seq_autor_ref_w,
				cd_ans_ref_w,
				dt_autorizacao_ref_w,
				to_char(nr_seq_autor_ref_w),
				coalesce(cd_autorizacao_ref_w,ds_texto_w),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p);

		end if;

	elsif (coalesce(ie_guia_ref_prorrog_w,'G') = 'G') then

		select	max(substr(b.cd_ans,1,6)),
			max(b.dt_autorizacao),
			max(CASE WHEN b.cd_autorizacao=ds_texto_w THEN  null  ELSE b.cd_autorizacao END )
		into STRICT	cd_ans_ref_w,
			dt_autorizacao_ref_w,
			cd_autorizacao_ref_w
		from	tiss_dados_solicitacao_v b
		where	b.ds_versao		= '2.01.01'
		and	b.nr_sequencia_autor	= nr_sequencia_autor_p;

		insert	into TISS_AUTOR_GUIA_REF(nr_sequencia_autor,
			nr_sequencia_autor_ref,
			cd_ans,
			dt_emissao_guia,
			nr_guia_prestador,
			cd_autorizacao,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec)
		values (nr_sequencia_autor_p,
			nr_sequencia_autor_p,
			cd_ans_ref_w,
			dt_autorizacao_ref_w,
			to_char(nr_sequencia_autor_p),
			coalesce(cd_autorizacao_ref_w,ds_texto_w),
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p);

	end if;
end if;

--Nao excluir anexos ja vinculados ao lote
select	count(*)
into STRICT	qt_lote_anexo_w
from	tiss_anexo_guia
where	nr_sequencia_autor	= nr_sequencia_autor_p
and	(nr_seq_lote_anexo IS NOT NULL AND nr_seq_lote_anexo::text <> '');

--Nao gerar novos anexos se tiver o diagnostico liberado
select	count(*)
into STRICT	qt_diag_anexo_w
from	tiss_autor_anexo_diag a,
	tiss_anexo_guia b
where	a.nr_seq_anexo_guia	= b.nr_sequencia
and	b.nr_sequencia_autor	= nr_sequencia_autor_p
and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '');

select	count(*)
into STRICT	qt_anexo_lib_w
from	tiss_anexo_guia
where	nr_sequencia_autor	= nr_sequencia_autor_p
and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '');

if (ie_tiss_tipo_anexo_w IS NOT NULL AND ie_tiss_tipo_anexo_w::text <> '') and (qt_lote_anexo_w = 0) and (qt_diag_anexo_w = 0) and (qt_anexo_lib_w = 0) then
	CALL TISS_GERAR_ANEXO_GUIA(nr_sequencia_autor_p,nm_usuario_p);
end if;

--Atualiza o diagnostico liberado para a autorizacao, nas tabelas do TISS para exportacao.
if (qt_diag_anexo_w > 0) then
	CALL TISS_ATUALIZAR_DIAG_ANEXO(nr_sequencia_autor_p, nm_usuario_p);
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE tiss_atualizar_autorizacao ( nr_sequencia_autor_p bigint, nm_usuario_p text) FROM PUBLIC;

