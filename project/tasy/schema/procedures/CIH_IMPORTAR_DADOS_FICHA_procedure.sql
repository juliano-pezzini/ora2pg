-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE cih_importar_dados_ficha ( nm_usuario_p text) AS $body$
DECLARE

 
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
Finalidade: Gerar ficha de ocorrência para atendimentos pendentes ou com alta hoje. 
------------------------------------------------------------------------------------------------------------------- 
Locais de chamada direta: 
[ X ] Objetos do dicionário [ ] Tasy (Delphi/Java) [ ] Portal [ ] Relatórios [ ] Outros: 
 ------------------------------------------------------------------------------------------------------------------ 
Pontos de atenção: 
------------------------------------------------------------------------------------------------------------------- 
Referências: 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
 
 
nr_ficha_ocorrencia_w		cih_ficha_ocorrencia.nr_ficha_ocorrencia%type;
ie_imp_med_vezes_w		varchar(255);
ie_imp_med_assoc_w		varchar(255);
ie_lib_ficha_ocorr_w		varchar(255);
ds_erro_w			varchar(4000);

  reg_atendimento RECORD;

BEGIN
ie_imp_med_vezes_w := obter_param_usuario(936, 13, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_imp_med_vezes_w);
 
ie_imp_med_assoc_w := obter_param_usuario(936, 11, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_imp_med_assoc_w);
 
ie_lib_ficha_ocorr_w := obter_param_usuario(936, 26, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_lib_ficha_ocorr_w);
 
for reg_atendimento in (SELECT	a.nr_atendimento, 
				a.dt_entrada, 
				a.cd_medico_resp, 
				a.ie_clinica 
			from	atendimento_paciente	a 
			where	((trunc(a.dt_alta,'dd') between trunc(clock_timestamp() - interval '1 days','dd') and trunc(clock_timestamp(),'dd')) or (coalesce(a.dt_alta::text, '') = '')) 
			and	coalesce(a.dt_cancelamento::text, '') = '' 
			and	a.ie_tipo_atendimento	= 1) loop 
	begin 
	CALL ccih_gerar_ficha_ocorrencia(	reg_atendimento.nr_atendimento, 
					reg_atendimento.dt_entrada, 
					reg_atendimento.cd_medico_resp, 
					nm_usuario_p, 
					'S', 
					reg_atendimento.ie_clinica);
					 
	select	max(a.nr_ficha_ocorrencia) 
	into STRICT	nr_ficha_ocorrencia_w 
	from	cih_ficha_ocorrencia	a 
	where	a.nr_atendimento	= reg_atendimento.nr_atendimento;
	 
	CALL cih_importar_procedimentos(	nr_ficha_ocorrencia_w, 
					nm_usuario_p);
					 
	CALL cih_importar_medicamento(	nr_ficha_ocorrencia_w, 
					nm_usuario_p, 
					ie_imp_med_vezes_w, 
					null);
					 
	ds_erro_w := cih_importar_cirurgia(	nr_ficha_ocorrencia_w, nm_usuario_p, ie_imp_med_assoc_w, ie_lib_ficha_ocorr_w, null, ds_erro_w);
				 
	CALL cih_importar_cultura(	nr_ficha_ocorrencia_w, 
				nm_usuario_p);
	end;
end loop;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE cih_importar_dados_ficha ( nm_usuario_p text) FROM PUBLIC;

