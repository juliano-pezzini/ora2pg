-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE add_reg_program_prs ( nr_seq_reg_program_p bigint, nr_customer_requirement_p bigint, nm_usuario_p text) AS $body$
DECLARE

c01 CURSOR FOR
	SELECT 	nr_sequencia
	from 	reg_product_requirement
	where 	nr_customer_requirement 	= nr_customer_requirement_p
	and 	ie_situacao 		= 'A'
    and     (dt_aprovacao IS NOT NULL AND dt_aprovacao::text <> '');

BEGIN

	if (nr_seq_reg_program_p IS NOT NULL AND nr_seq_reg_program_p::text <> '' AND nr_customer_requirement_p IS NOT NULL AND nr_customer_requirement_p::text <> '') then
		
		insert into reg_program_urs_cts(
			nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_reg_program,
			nr_seq_caso_teste,
			ie_situacao )
		SELECT 	nextval('reg_program_urs_cts_seq'),
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_reg_program_p,
			a.nr_sequencia,
			'A'
		from 	reg_caso_teste a
		where 	a.nr_seq_customer 		= nr_customer_requirement_p
		and 	coalesce(a.ie_situacao, 'A') 	= 'A'
		and 	(a.dt_aprovacao IS NOT NULL AND a.dt_aprovacao::text <> '')
		and 	(a.dt_liberacao_vv IS NOT NULL AND a.dt_liberacao_vv::text <> '')
		and 	coalesce(a.dt_inativacao::text, '') = ''
		and 	not exists (
				SELECT 	1
				from 	reg_program_urs_cts b
				where 	b.nr_seq_reg_program 	= nr_seq_reg_program_p
				and 	b.nr_seq_caso_teste 	= a.nr_sequencia
			);
			
		for c01_w in c01 loop begin
			insert into reg_program_prs(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				ie_situacao,
				nr_seq_reg_program,
				nr_seq_product_requirement
			) values (
				nextval('reg_program_prs_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				'A', -- PRS
				nr_seq_reg_program_p,
				c01_w.nr_sequencia
			);
			
			CALL add_reg_program_prs_cts(
				nr_seq_reg_program_p 	=> nr_seq_reg_program_p,
				nr_product_requirement_p 	=> c01_w.nr_sequencia,
				nm_usuario_p 		=> nm_usuario_p
			);
		
		end; end loop;

		commit;
	end if;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE add_reg_program_prs ( nr_seq_reg_program_p bigint, nr_customer_requirement_p bigint, nm_usuario_p text) FROM PUBLIC;

