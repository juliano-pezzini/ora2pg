-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ageint_inserir_item_adic ( nr_seq_agenda_int_p bigint, nr_seq_ageint_item_p bigint, nr_seq_item_p text, ie_lado_p text, cd_estabelecimento_p bigint, nm_usuario_p text, nr_seq_topografia_p bigint default null, nr_seq_mipres_p controle_mipres_agenda.nr_prescr_mipres%type default null, dt_validade_mipres_p timestamp default null) AS $body$
DECLARE


nr_seq_grupo_w		bigint;
nr_seq_proc_interno_w	bigint;
cd_especialidade_w	integer;
cd_medico_w		varchar(10);
ie_tipo_agendamento_w	varchar(15);
nr_seq_grupo_proc_w	bigint;
cd_medico_ww		varchar(10);
nr_minuto_duracao_w	bigint;
ds_itens_grupo_w	varchar(800);
tam_lista_w		bigint;
ie_pos_virgula_w	smallint	:= 0;
nr_seq_grupo_Real_w	bigint;
ds_lista_grupo_w	varchar(800);
ie_classif_agenda_w	varchar(5);
nr_seq_exame_adic_w	bigint;
nr_seq_grupo_item_w	bigint;
nr_seq_item_agenda_w	bigint;
ie_gerar_equip_w	varchar(1);
nr_seq_regra_w		bigint;
nr_seq_item_w		bigint;
ds_Retorno_w		varchar(255);
nr_seq_proc_item_grupo_w	bigint;
ie_forma_checklist_w	varchar(1) := 'L';
ie_gerar_check_list_w	varchar(1);
nr_seq_ageint_check_list_w bigint;


BEGIN
ie_forma_checklist_w := Obter_Param_Usuario(869, 75, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_forma_checklist_w);
	
select	nr_seq_grupo,
	nr_Seq_proc_interno,
	cd_especialidade,
	cd_medico,
	nr_seq_grupo_proc,
	nr_minuto_duracao,
	ie_classif_agenda,
	nr_sequencia
into STRICT	nr_seq_grupo_w,
	nr_seq_proc_interno_w,
	cd_especialidade_w,
	cd_medico_w,
	nr_seq_grupo_proc_w,
	nr_minuto_duracao_w,
	ie_classif_agenda_w,
	nr_seq_item_w
from	agenda_int_grupo_item
where	nr_sequencia	= nr_seq_item_p
order by nr_seq_apres;

select	max(ie_tipo_agendamento)
into STRICT	ie_tipo_agendamento_w
from	agenda_int_grupo
where	nr_sequencia	= nr_seq_grupo_w;

if	((ie_tipo_agendamento_w	in ('E','S')) and (nr_seq_proc_interno_w IS NOT NULL AND nr_seq_proc_interno_w::text <> '')) then
	
	SELECT * FROM Ageint_Consistir_Regra_Ex_Adic(nr_Seq_agenda_int_p, nr_seq_proc_interno_w, cd_estabelecimento_p, nm_usuario_p, nr_seq_regra_w, ds_retorno_w) INTO STRICT nr_seq_regra_w, ds_retorno_w;
		
	if	(((coalesce(nr_Seq_regra_w,0)	> 0) and (coalesce(ds_retorno_w::text, '') = '')) or
		((coalesce(ds_retorno_w::text, '') = '') and
		coalesce(nr_Seq_regra_w,0)	= 0)) then
	
		select	nextval('ageint_exame_adic_item_seq')
		into STRICT	nr_seq_item_agenda_w
		;
		
		insert into ageint_exame_adic_item(nr_sequencia,
			nr_seq_item,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_proc_interno,
			nr_seq_grupo_selec,
			ie_lado,
			nr_seq_topografia)
		values (nr_seq_item_agenda_w,
			nr_seq_ageint_item_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_proc_interno_w,
			nr_seq_grupo_w,
			ie_lado_p,
			nr_seq_topografia_p);
			
		commit;
		
		if (nr_seq_mipres_p IS NOT NULL AND nr_seq_mipres_p::text <> '') then
			CALL insert_controle_mipres_age(nr_seq_agenda_int_p, nr_seq_item_agenda_w, nr_seq_mipres_p, dt_validade_mipres_p, null, null, nm_usuario_p, null, 'ageint_exame_adic_item');
		end if;
		
		if (ie_forma_checklist_w = 'L') then
			
			select	substr(ageint_obter_se_proc_check(nr_seq_proc_interno_w,nr_seq_agenda_int_p, cd_estabelecimento_p),1,1)
			into STRICT	ie_gerar_check_list_w
			;
			
			if (ie_gerar_check_list_w = 'S') then
		
				select	nextval('ageint_check_list_paciente_seq')
				into STRICT	nr_seq_ageint_check_list_w
				;
		
				insert into ageint_check_list_paciente(nr_sequencia,
								nr_seq_ageint,
								dt_atualizacao,
								nm_usuario,
								ie_tipo_check_list)
							values (nr_seq_ageint_check_list_w,
								nr_seq_agenda_int_p,
								clock_timestamp(),	
								nm_usuario_p,
								'I');
									
				commit;
								
				CALL Ageint_Gerar_Check_List(nr_seq_ageint_check_list_w,nr_seq_proc_interno_w,nr_seq_agenda_int_p,nm_usuario_p, cd_estabelecimento_p);
				
			end if;
		end if;
	end if;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ageint_inserir_item_adic ( nr_seq_agenda_int_p bigint, nr_seq_ageint_item_p bigint, nr_seq_item_p text, ie_lado_p text, cd_estabelecimento_p bigint, nm_usuario_p text, nr_seq_topografia_p bigint default null, nr_seq_mipres_p controle_mipres_agenda.nr_prescr_mipres%type default null, dt_validade_mipres_p timestamp default null) FROM PUBLIC;

