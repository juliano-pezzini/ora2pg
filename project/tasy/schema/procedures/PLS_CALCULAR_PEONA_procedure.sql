-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_calcular_peona ( nr_seq_peona_p bigint, nm_usuario_p text) AS $body$
DECLARE


vl_total_receita_w		double precision;
dt_competencia_w		timestamp;
vl_total_despesa_w		double precision;
vl_base_receita_w		double precision;
tx_receita_w			double precision;
tx_despesa_w			double precision;
vl_base_despesa_w		double precision;
vl_base_w			double precision;
vl_estimativa_mes_w		double precision;
qt_total_parcela_w		bigint;
vl_estimativa_parcela_w		double precision;
nr_parcela_w			bigint;
dt_primeira_parcela_w		timestamp;
vl_acumulado_w			double precision;
vl_acumulado_ant_w		double precision;
vl_acumulado_mes_ant_w		double precision;
dt_competencia_ant_w		timestamp;
vl_base_parcela_w		double precision;
vl_acumulado_estimativa_ant_w	double precision;
vl_acumulado_estimativa_w	double precision;
vl_peona_w			double precision;
dt_competencia_acumulado_w	timestamp;
vl_acumulado_peona_w		double precision;
ie_concil_contab_w		pls_visible_false.ie_concil_contab%type;
cd_estabelecimento_w		estabelecimento.cd_estabelecimento%type;


BEGIN

/* Obter dados da PEONA */

select	dt_competencia,
	coalesce(tx_receita,0),
	coalesce(tx_despesa,0),
	coalesce(qt_total_parcela, 0),
	nr_parcela,
	dt_primeira_parcela,
	coalesce(vl_acumulado_estimativa,0),
	coalesce(vl_acumulado,0)
into STRICT	dt_competencia_w,
	tx_receita_w,
	tx_despesa_w,
	qt_total_parcela_w,
	nr_parcela_w,
	dt_primeira_parcela_w,
	vl_acumulado_estimativa_w,
	vl_acumulado_mes_ant_w
from	pls_Peona
where	nr_sequencia	= nr_seq_peona_p;

/* Atualizar os valores da PEONA */

CALL pls_atualizar_valores_peona(nr_seq_peona_p, nm_usuario_p);

/* Obter o valor total da despesa e receita 
select	nvl(sum(decode(ie_tipo_valor,'D',vl_peona)),0) vl_despesa,
	nvl(sum(decode(ie_tipo_valor,'R',vl_peona)),0) vl_receita	
into	vl_total_despesa_w,
	vl_total_receita_w
from	pls_peona_v
where	trunc(dt_referencia,'month') between trunc(add_months(to_date(dt_competencia_w), -11),'month') 
	and trunc(to_date(dt_competencia_w),'month'); */
select	coalesce(sum(vl_despesa),0),
	coalesce(sum(vl_receita),0)
into STRICT	vl_total_despesa_w,
	vl_total_receita_w
from	pls_valores_peona
where	nr_seq_peona	= nr_seq_peona_p;	
	
vl_base_receita_w	:= dividir((vl_total_receita_w * tx_receita_w),100);
vl_base_despesa_w	:= dividir((vl_total_despesa_w * tx_despesa_w),100);
if (vl_base_receita_w	>= vl_base_despesa_w) then
	vl_base_w	:= vl_base_receita_w;
else
	vl_base_w	:= vl_base_despesa_w;
end if;

select	trunc(months_between(dt_competencia_w,dt_primeira_parcela_w) + 1)
into STRICT	nr_parcela_w
;

vl_estimativa_mes_w	:= dividir(vl_base_w,qt_total_parcela_w);
vl_estimativa_parcela_w	:= nr_parcela_w * vl_estimativa_mes_w; /* VL_ESTIMATIVA_PARCELA */


/* Buscar ps valores do mês anterior */

select	max(dt_competencia),
	coalesce(sum(vl_acumulado),0),
	coalesce(sum(vl_acumulado_estimativa),0)
into STRICT	dt_competencia_ant_w,
	vl_acumulado_ant_w,
	vl_acumulado_estimativa_ant_w
from	pls_peona
where	trunc(dt_competencia,'month')	= trunc(add_months(dt_competencia_w,-1),'month');

if (vl_acumulado_estimativa_ant_w > 0) then
	vl_acumulado_estimativa_w	:= vl_acumulado_estimativa_ant_w;
end if;

if (vl_acumulado_ant_w	> 0) then
	vl_acumulado_mes_ant_w	:= vl_acumulado_ant_w;
end if;

vl_acumulado_estimativa_w	:= vl_acumulado_estimativa_w + vl_estimativa_mes_w;
vl_acumulado_w			:= dividir(vl_base_w, qt_total_parcela_w) * nr_parcela_w; /* VL_ACUMULADO */
vl_base_parcela_w		:= vl_acumulado_w - vl_acumulado_mes_ant_w;

select	max(dt_competencia)
into STRICT	dt_competencia_acumulado_w
from	pls_peona
where	vl_acumulado	> 0
and	dt_competencia	< dt_competencia_w;

select	coalesce(sum(vl_acumulado),0)
into STRICT	vl_acumulado_peona_w
from	pls_peona
where	trunc(dt_competencia,'month')	= trunc(dt_competencia_acumulado_w,'month');

vl_peona_w	:= vl_acumulado_w - vl_acumulado_peona_w;

/* Atualizar a PEONA */

update	pls_peona	
set	nr_parcela		= nr_parcela_w,
	vl_total_receita	= vl_total_receita_w,
	vl_total_despesa	= vl_total_despesa_w,
	vl_base_receita		= vl_base_receita_w,
	vl_base_despesa		= vl_base_despesa_w,
	vl_base			= vl_base_w,
	vl_estimativa_mes	= vl_estimativa_mes_w,
	vl_estimativa_parcela	= vl_estimativa_parcela_w,
	vl_acumulado		= vl_acumulado_w,
	vl_base_parcela		= vl_base_parcela_w,
	vl_acumulado_estimativa	= vl_acumulado_estimativa_w,
	vl_peona		= vl_peona_w
where	nr_sequencia		= nr_seq_peona_p;

cd_estabelecimento_w 	:= Obter_estab_usuario(nm_usuario_p);

select	max(ie_concil_contab)
into STRICT 	ie_concil_contab_w
from	pls_visible_false
where	cd_estabelecimento = cd_estabelecimento_w;

if (ie_concil_contab_w = 'S') then
	/* Atualização das contas contábeis
	Dentro da atualização, é feito o insert na ctb_documento
	*/
	CALL ctb_pls_atualizar_peona(nr_seq_peona_p, nm_usuario_p, cd_estabelecimento_w);

	
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_calcular_peona ( nr_seq_peona_p bigint, nm_usuario_p text) FROM PUBLIC;

