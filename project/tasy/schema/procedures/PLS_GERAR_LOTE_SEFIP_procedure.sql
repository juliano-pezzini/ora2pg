-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_lote_sefip ( nr_seq_lote_p bigint, cd_estabelecimento_p bigint, cd_darf_p text, nm_usuario_p text) AS $body$
DECLARE



ds_irrelevante_w    varchar(4000);
cd_cbo_saude_w      varchar(4000);
ie_tipo_tributo_w    varchar(15);
cd_cgc_w      varchar(14);
cd_cgc_prestador_w    varchar(14);
cd_pf_estipulante_w    varchar(14);
cd_pf_prestador_w    varchar(10);
cd_representante_w    varchar(10);
ie_tipo_contratacao_w    varchar(2);
ie_competencia_w    varchar(2);
ie_filantropico_w    varchar(1);
pr_tributo_w      double precision;
vl_retencao_w      double precision;
vl_faturado_w      double precision;
vl_remuneracao_w    double precision;
vl_descontado_w      double precision;
vl_base_calculo_w    double precision;
vl_desconto_tipo_contrat_w  double precision;
vl_tipo_contratacao_w    double precision;
vl_liberado_cgc_w    double precision;
vl_liberado_total_w    double precision;
vl_teto_base_w      double precision;
vl_total_descontado_w    double precision;
vl_imposto_w      double precision;
vl_imposto_total_w    double precision;
qt_trib_outra_empresa_w    bigint;
nr_seq_venc_trib_w    bigint;
nr_seq_lote_pag_w    bigint;
nr_seq_prestador_w    bigint;
qt_existente_w      bigint;
nr_seq_tomador_w    bigint;
qt_tipo_contratacao_w    bigint;
nr_seq_vencimento_w    bigint;
cd_tributo_w      bigint;
nr_seq_movimento_w    bigint;
nr_seq_prest_repres_w    bigint;
dt_lote_w      timestamp;
dt_inicial_w      timestamp;
dt_final_w      timestamp;
dt_vencimento_w      timestamp;

C01 CURSOR FOR
  SELECT  i.cd_cgc cd_cgc,
    i.cd_pessoa_fisica cd_pf_estipulante,
    p.nr_sequencia nr_seq_prestador,
    pls_obter_dados_conta(max(f.nr_seq_conta), 'CBO') cd_cbo_saude,
    sum(f.vl_liberado) vl_liberado,
    (sum(f.vl_liberado) * c.pr_tributo) / 100 vl_descontado,
    max(b.nr_sequencia) nr_seq_lote,
    c.nr_sequencia nr_seq_venc_trib,
    c.vl_base_calculo,
    max(d.nr_sequencia) nr_seq_vencimento,
    c.pr_tributo,
    c.vl_imposto,
    c.ie_tipo_contratacao,
    h.cd_tributo,
    p.cd_cgc,
    p.cd_pessoa_fisica,
    d.dt_vencimento,
    h.ie_tipo_tributo
  from  tributo        h,
    pls_intercambio      i,
    pls_segurado      g,
    pls_conta_medica_resumo    f,
    pls_prestador      p,
    pls_pagamento_prestador    j,
    pls_pag_prest_vencimento  d,
    pls_pag_prest_venc_trib    c,
    pls_lote_pagamento    b
  where  b.nr_sequencia      = j.nr_seq_lote
  and  c.nr_seq_vencimento    = d.nr_sequencia
  and  f.nr_seq_prestador_pgto    = p.nr_sequencia
  and  d.nr_seq_pag_prestador    = j.nr_sequencia
  and  j.nr_seq_prestador    = p.nr_sequencia
  and  g.nr_seq_intercambio    = i.nr_sequencia
  and  f.nr_seq_segurado    = g.nr_sequencia
  and  c.cd_tributo      = h.cd_tributo
  and  c.nr_sequencia      = f.nr_seq_prest_venc_trib
--  and  nvl(e.ie_apropriar_total, 'N')  = 'N'
  and  coalesce(c.ie_tipo_contratacao, 'I')  = f.ie_tipo_contratacao
  and  ((f.ie_situacao != 'I') or (coalesce(f.ie_situacao::text, '') = ''))
  and  coalesce(j.ie_cancelamento::text, '') = ''
  and  exists (SELECT 1
      from  pls_cooperado x
      where  x.cd_pessoa_fisica = p.cd_pessoa_fisica)
  and (c.cd_darf      = coalesce(cd_darf_p,c.cd_darf) or
    coalesce(c.cd_darf::text, '') = '')
  and (c.ie_pago_prev      <> 'R' or
    not exists (  select 1
        from    pls_pag_prest_venc_trib x
        where   x.nr_seq_vencimento   = d.nr_sequencia
        and     x.ie_tipo_contratacao  = 'I'))
  and    not exists (  select 1
        from    pls_pag_prest_venc_trib x
        where   x.nr_seq_vencimento   = d.nr_sequencia
        and     x.nr_sequencia     <> c.nr_sequencia
        and     x.ie_tipo_contratacao   = c.ie_tipo_contratacao
        and  x.ie_tipo_contratacao  = 'I')
  and (h.ie_tipo_tributo    = 'INSS' or
    not exists (  select  1
        from    tributo                 y,
          pls_pag_prest_venc_trib x
        where   y.cd_tributo  = x.cd_tributo
        and     x.nr_seq_vencimento = d.nr_sequencia
        and     coalesce(x.ie_tipo_contratacao::text, '') = ''
        and     y.ie_tipo_tributo = 'INSS'
        and     h.ie_tipo_tributo <> 'INSS'))  
  and  (p.cd_pessoa_fisica IS NOT NULL AND p.cd_pessoa_fisica::text <> '')
  and  trunc(b.dt_mes_competencia,'dd') between dt_inicial_w and dt_final_w
  group by
    i.cd_cgc,
    i.cd_pessoa_fisica,
    p.nr_sequencia,
    c.pr_tributo,
    c.nr_sequencia,
    c.vl_base_calculo,
    c.vl_imposto,
    c.ie_tipo_contratacao,
    h.ie_tipo_tributo,
    c.pr_tributo,
    h.cd_tributo,
    p.cd_cgc,
    p.cd_pessoa_fisica,
    d.dt_vencimento
  having  ((sum(f.vl_liberado) * c.pr_tributo) / 100 > 0 or
    c.pr_tributo = 0)
  
union

  select  i.cd_cgc cd_cgc,
    i.cd_pessoa_fisica cd_pf_estipulante,
    p.nr_sequencia nr_seq_prestador,
    substr(obter_dados_pf(p.cd_pessoa_fisica, 'CBOS'),1,255) cd_cbo_saude,
    sum(f.vl_liberado) vl_liberado,
    (sum(f.vl_liberado) * c.pr_tributo) / 100 vl_descontado,
    max(b.nr_sequencia) nr_seq_lote,
    c.nr_sequencia nr_seq_venc_trib,
    c.vl_base_calculo,
    max(d.nr_sequencia) nr_seq_vencimento,
    c.pr_tributo,
    c.vl_imposto,
    c.ie_tipo_contratacao,
    h.cd_tributo,
    p.cd_cgc,
    p.cd_pessoa_fisica,
    d.dt_vencimento,
    h.ie_tipo_tributo
  from  tributo        h,
    pls_intercambio      i,
    pls_segurado      g,
    pls_conta_medica_resumo    f,
    pls_pagamento_item    e,
    pls_prestador      p,
    pls_pagamento_prestador    j,
    pls_pag_prest_vencimento  d,
    pls_pag_prest_venc_trib    c,
    pls_lote_pagamento    b
  where  b.nr_sequencia      = j.nr_seq_lote
  and  c.nr_seq_vencimento    = d.nr_sequencia
  and  d.nr_seq_pag_prestador    = e.nr_seq_pagamento
  and  f.nr_seq_prestador_pgto    = p.nr_sequencia
  and  d.nr_seq_pag_prestador    = j.nr_sequencia
  and  j.nr_seq_prestador    = p.nr_sequencia
  and  g.nr_seq_intercambio    = i.nr_sequencia
  and  f.nr_seq_segurado    = g.nr_sequencia
  and  c.cd_tributo      = h.cd_tributo
  and  coalesce(e.ie_apropriar_total, 'N')  = 'N'
  and  ((f.ie_situacao != 'I') or (coalesce(f.ie_situacao::text, '') = ''))
  and  f.nr_seq_pag_item    = e.nr_sequencia
  and  coalesce(c.ie_tipo_contratacao,'I')  = f.ie_tipo_contratacao
  and  coalesce(j.ie_cancelamento::text, '') = ''
  and  exists (select 1
      from  pls_cooperado x
      where  x.cd_pessoa_fisica = p.cd_pessoa_fisica)
  and (c.cd_darf      = coalesce(cd_darf_p,c.cd_darf) or
    coalesce(c.cd_darf::text, '') = '')
  and (c.ie_pago_prev <> 'R' or
    not exists (  select 1
        from    pls_pag_prest_venc_trib x
        where   x.nr_seq_vencimento   = d.nr_sequencia
        and     x.ie_tipo_contratacao  = 'I'))
  and    not exists (  select 1
        from    pls_pag_prest_venc_trib x
        where   x.nr_seq_vencimento   = d.nr_sequencia
        and     x.nr_sequencia     <> c.nr_sequencia
        and     x.ie_tipo_contratacao   = c.ie_tipo_contratacao
        and  x.ie_tipo_contratacao  = 'I')
  and (h.ie_tipo_tributo    = 'INSS' or
    not exists (  select  1
        from    tributo                 y,
          pls_pag_prest_venc_trib x
        where   y.cd_tributo  = x.cd_tributo
        and     x.nr_seq_vencimento = d.nr_sequencia
        and     coalesce(x.ie_tipo_contratacao::text, '') = ''
        and     y.ie_tipo_tributo = 'INSS'
        and     h.ie_tipo_tributo <> 'INSS'))  
  and  coalesce(f.nr_seq_prest_venc_trib::text, '') = ''
  and  (p.cd_pessoa_fisica IS NOT NULL AND p.cd_pessoa_fisica::text <> '')
  and  trunc(b.dt_mes_competencia,'dd') between dt_inicial_w and dt_final_w
  group by
    i.cd_cgc,
    i.cd_pessoa_fisica,
    p.nr_sequencia,
    p.cd_pessoa_fisica,
    c.pr_tributo,
    c.nr_sequencia,
    c.vl_base_calculo,
    c.vl_imposto,
    c.ie_tipo_contratacao,
    h.ie_tipo_tributo,
    c.pr_tributo,
    h.cd_tributo,
    p.cd_cgc,
    p.cd_pessoa_fisica,
    d.dt_vencimento
  having  ((sum(f.vl_liberado) * c.pr_tributo) / 100 > 0 or
    c.pr_tributo = 0)
  
union

  select  i.cd_cgc_estipulante cd_cgc,
    i.cd_pf_estipulante cd_pf_estipulante,
    p.nr_sequencia nr_seq_prestador,
    pls_obter_dados_conta(max(f.nr_seq_conta), 'CBO') cd_cbo_saude,
    sum(f.vl_liberado) vl_liberado,
    (sum(f.vl_liberado) * c.pr_tributo) / 100 vl_descontado,
    max(b.nr_sequencia) nr_seq_lote,
    c.nr_sequencia nr_seq_venc_trib,
    c.vl_base_calculo,
    max(d.nr_sequencia) nr_seq_vencimento,
    c.pr_tributo,
    c.vl_imposto,
    c.ie_tipo_contratacao,
    h.cd_tributo,
    p.cd_cgc,
    p.cd_pessoa_fisica,
    d.dt_vencimento,
    h.ie_tipo_tributo
  from  tributo        h,
    pls_contrato       i,
    pls_segurado      g,
    pls_conta_medica_resumo    f,
    pls_prestador      p,
    pls_pagamento_prestador    j,
    pls_pag_prest_vencimento  d,
    pls_pag_prest_venc_trib    c,
    pls_lote_pagamento    b
  where  b.nr_sequencia      = j.nr_seq_lote
  and  c.nr_seq_vencimento    = d.nr_sequencia
  and  f.nr_seq_prestador_pgto    = p.nr_sequencia
  and  d.nr_seq_pag_prestador    = j.nr_sequencia
  and  j.nr_seq_prestador    = p.nr_sequencia
  and  g.nr_seq_contrato    = i.nr_sequencia
  and  f.nr_seq_segurado    = g.nr_sequencia
  and  c.cd_tributo      = h.cd_tributo
  and  c.nr_sequencia      = f.nr_seq_prest_venc_trib
  and  coalesce(c.ie_tipo_contratacao, 'I')  = f.ie_tipo_contratacao
  and  ((f.ie_situacao != 'I') or (coalesce(f.ie_situacao::text, '') = ''))
  and  coalesce(j.ie_cancelamento::text, '') = ''
  and  exists (select 1
      from  pls_cooperado x
      where  x.cd_pessoa_fisica = p.cd_pessoa_fisica)
  and (c.cd_darf      = coalesce(cd_darf_p,c.cd_darf) or
    coalesce(c.cd_darf::text, '') = '')
  and (c.ie_pago_prev      <> 'R' or
    not exists (  select 1
        from    pls_pag_prest_venc_trib x
        where   x.nr_seq_vencimento   = d.nr_sequencia
        and     x.ie_tipo_contratacao  = 'I'))
  and    not exists (  select 1
        from    pls_pag_prest_venc_trib x
        where   x.nr_seq_vencimento   = d.nr_sequencia
        and     x.nr_sequencia     <> c.nr_sequencia
        and     x.ie_tipo_contratacao   = c.ie_tipo_contratacao
        and  x.ie_tipo_contratacao  = 'I')
  and (h.ie_tipo_tributo    = 'INSS' or
    not exists (  select  1
        from    tributo                 y,
          pls_pag_prest_venc_trib x
        where   y.cd_tributo  = x.cd_tributo
        and     x.nr_seq_vencimento = d.nr_sequencia
        and     coalesce(x.ie_tipo_contratacao::text, '') = ''
        and     y.ie_tipo_tributo = 'INSS'
        and     h.ie_tipo_tributo <> 'INSS'))  
  and  (p.cd_pessoa_fisica IS NOT NULL AND p.cd_pessoa_fisica::text <> '')
  and  trunc(b.dt_mes_competencia,'dd') between dt_inicial_w and dt_final_w
  group by
    i.cd_cgc_estipulante,
    i.cd_pf_estipulante,
    p.nr_sequencia,
    c.pr_tributo,
    c.nr_sequencia,
    c.vl_base_calculo,
    c.vl_imposto,
    c.ie_tipo_contratacao,
    h.ie_tipo_tributo,
    c.pr_tributo,
    h.cd_tributo,
    p.cd_cgc,
    p.cd_pessoa_fisica,
    d.dt_vencimento
  having  ((sum(f.vl_liberado) * c.pr_tributo) / 100 > 0 or
    c.pr_tributo = 0)
  
union

  select  i.cd_cgc_estipulante cd_cgc,
    i.cd_pf_estipulante cd_pf_estipulante,
    p.nr_sequencia nr_seq_prestador,
    substr(obter_dados_pf(p.cd_pessoa_fisica, 'CBOS'),1,255) cd_cbo_saude,
    sum(f.vl_liberado) vl_liberado,
    (sum(f.vl_liberado) * c.pr_tributo) / 100 vl_descontado,
    max(b.nr_sequencia) nr_seq_lote,
    c.nr_sequencia nr_seq_venc_trib,
    c.vl_base_calculo,
    max(d.nr_sequencia) nr_seq_vencimento,
    c.pr_tributo,
    c.vl_imposto,
    c.ie_tipo_contratacao,
    h.cd_tributo,
    p.cd_cgc,
    p.cd_pessoa_fisica,
    d.dt_vencimento,
    h.ie_tipo_tributo
  from  tributo        h,
    pls_contrato       i,
    pls_segurado      g,
    pls_conta_medica_resumo    f,
    pls_pagamento_item    e,
    pls_prestador      p,
    pls_pagamento_prestador    j,
    pls_pag_prest_vencimento  d,
    pls_pag_prest_venc_trib    c,
    pls_lote_pagamento    b
  where  b.nr_sequencia      = j.nr_seq_lote
  and  c.nr_seq_vencimento    = d.nr_sequencia
  and  d.nr_seq_pag_prestador    = e.nr_seq_pagamento
  and  f.nr_seq_prestador_pgto    = p.nr_sequencia
  and  d.nr_seq_pag_prestador    = j.nr_sequencia
  and  j.nr_seq_prestador    = p.nr_sequencia
  and  g.nr_seq_contrato    = i.nr_sequencia
  and  f.nr_seq_segurado    = g.nr_sequencia
  and  c.cd_tributo      = h.cd_tributo
  and  f.nr_seq_pag_item    = e.nr_sequencia
  and  coalesce(e.ie_apropriar_total, 'N')  = 'N'
  and  coalesce(c.ie_tipo_contratacao,'I')  = f.ie_tipo_contratacao
  and  ((f.ie_situacao != 'I') or (coalesce(f.ie_situacao::text, '') = ''))
  and  coalesce(j.ie_cancelamento::text, '') = ''
  and  exists (select 1
      from  pls_cooperado x
      where  x.cd_pessoa_fisica = p.cd_pessoa_fisica)
  and (c.cd_darf      = coalesce(cd_darf_p,c.cd_darf) or
    coalesce(c.cd_darf::text, '') = '')
  and (c.ie_pago_prev <> 'R' or
    not exists (  select 1
        from    pls_pag_prest_venc_trib x
        where   x.nr_seq_vencimento   = d.nr_sequencia
        and     x.ie_tipo_contratacao  = 'I'))
  and    not exists (  select 1
        from    pls_pag_prest_venc_trib x
        where   x.nr_seq_vencimento   = d.nr_sequencia
        and     x.nr_sequencia     <> c.nr_sequencia
        and     x.ie_tipo_contratacao   = c.ie_tipo_contratacao
        and  x.ie_tipo_contratacao  = 'I')
  and (h.ie_tipo_tributo    = 'INSS' or
    not exists (  select  1
        from    tributo                 y,
          pls_pag_prest_venc_trib x
        where   y.cd_tributo  = x.cd_tributo
        and     x.nr_seq_vencimento = d.nr_sequencia
        and     coalesce(x.ie_tipo_contratacao::text, '') = ''
        and     y.ie_tipo_tributo = 'INSS'
        and     h.ie_tipo_tributo <> 'INSS'))  
  and  coalesce(f.nr_seq_prest_venc_trib::text, '') = ''
  and  (p.cd_pessoa_fisica IS NOT NULL AND p.cd_pessoa_fisica::text <> '')
  and  trunc(b.dt_mes_competencia,'dd') between dt_inicial_w and dt_final_w
  group by
    i.cd_cgc_estipulante,
    i.cd_pf_estipulante,
    p.nr_sequencia,
    p.cd_pessoa_fisica,
    c.pr_tributo,
    c.nr_sequencia,
    c.vl_base_calculo,
    c.vl_imposto,
    c.ie_tipo_contratacao,
    h.ie_tipo_tributo,
    c.pr_tributo,
    h.cd_tributo,
    p.cd_cgc,
    p.cd_pessoa_fisica,
    d.dt_vencimento
  having  ((sum(f.vl_liberado) * c.pr_tributo) / 100 > 0 or
    c.pr_tributo = 0)
  
union

  select  null cd_cgc,
    null cd_pf_estipulante,
    d.nr_sequencia nr_seq_prestador,
    substr(obter_dados_pf(d.cd_pessoa_fisica, 'CBOS'),1,255) cd_cbo_saude,
    sum(vl_liberado) vl_liberado,
    0 vl_descontado,
    a.nr_sequencia nr_seq_lote,
    null nr_seq_venc_trib,
    0 vl_base_calculo,
    c.nr_sequencia nr_seq_vencimento,
    0 pr_tributo,
    0 vl_imposto,
    null ie_tipo_contratacao,
    null cd_tributo,
    null cd_cgc,
    null cd_pessoa_fisica,
    null dt_vencimento,
    null ie_tipo_tributo
  from   pls_conta_medica_resumo    g,
    pls_prestador      d,
    pls_pag_prest_vencimento  c,
    pls_pagamento_item    f,
    pls_pagamento_prestador    b,
    pls_lote_pagamento    a
  where  a.nr_sequencia = b.nr_seq_lote
  and  b.nr_sequencia = c.nr_seq_pag_prestador
  and  b.nr_sequencia = f.nr_seq_pagamento
  and  f.nr_sequencia = g.nr_seq_pag_item
  and  d.nr_sequencia = g.nr_seq_prestador_pgto
  and  d.nr_sequencia = b.nr_seq_prestador
  and  coalesce(b.ie_cancelamento::text, '') = ''
  and  coalesce(f.ie_apropriar_total, 'N')  = 'N'
  and  ((coalesce(g.ie_situacao::text, '') = '') or (g.ie_situacao != 'I'))
  and  exists (select 1
      from  pls_cooperado x
      where  x.cd_pessoa_fisica = d.cd_pessoa_fisica)
  and  trunc(a.dt_mes_competencia,'dd') between dt_inicial_w and dt_final_w
  and  ((not exists (  select  1
        from   tributo        y,
          pls_pag_prest_venc_trib   x
        where  x.cd_tributo      = y.cd_tributo
        and  x.nr_seq_vencimento     = c.nr_sequencia
        and  coalesce(x.ie_tipo_contratacao,'I')   = 'CE'
        and  y.ie_tipo_tributo    = 'INSS') and
    g.ie_tipo_contratacao = 'CE')
  or (not exists (  select  1
        from   tributo        y,
          pls_pag_prest_venc_trib   x
        where  x.cd_tributo      = y.cd_tributo
        and  x.nr_seq_vencimento     = c.nr_sequencia
        and  coalesce(x.ie_tipo_contratacao,'I')   = 'CA'
        and  y.ie_tipo_tributo    = 'INSS') and
    g.ie_tipo_contratacao = 'CA')
  or (not exists (  select  1
        from   tributo        y,
          pls_pag_prest_venc_trib   x
        where  x.cd_tributo      = y.cd_tributo
        and  x.nr_seq_vencimento     = c.nr_sequencia
        and  coalesce(x.ie_tipo_contratacao,'I')   = 'I'
        and  y.ie_tipo_tributo    = 'INSS') and
    g.ie_tipo_contratacao = 'I'))
  and  (d.cd_pessoa_fisica IS NOT NULL AND d.cd_pessoa_fisica::text <> '')
  group by 
    d.nr_sequencia,
    d.cd_pessoa_fisica,
    c.nr_sequencia,
    a.nr_sequencia
  order by
    pr_tributo;

C02 CURSOR FOR
  SELECT  nr_seq_prestador,
    vl_descontado
  from (SELECT c.nr_sequencia nr_seq_prestador,
      sum(b.vl_descontado) vl_descontado
    from    pls_prestador c,
      sefip_tomador_movimento b,
      sefip_tomador a
    where   a.nr_sequencia     = b.nr_seq_tomador
    and     b.nr_seq_prestador   = c.nr_sequencia
    and     a.nr_seq_lote     = nr_seq_lote_p
    group by c.nr_sequencia) x
  where  x.vl_descontado > 0;


BEGIN

select  ie_competencia,
  dt_lote
into STRICT  ie_competencia_w,
  dt_lote_w
from  sefip_lote
where  nr_sequencia  = nr_seq_lote_p;

if (ie_competencia_w = '13') then
  select  to_date('01/12/' || to_char(dt_lote_w,'yyyy'),'dd/mm/yyyy'),
    last_day(to_date('01/12/' || to_char(dt_lote_w,'yyyy'),'dd/mm/yyyy'))
  into STRICT  dt_inicial_w,
    dt_final_w
;
elsif (ie_competencia_w <> '13') then
  select  to_date('01/' || lpad(ie_competencia_w,2,'0') || '/' || to_char(dt_lote_w,'yyyy'),'dd/mm/yyyy'),
    last_day(to_date('01/' || lpad(ie_competencia_w,2,'0') || '/' || to_char(dt_lote_w,'yyyy'),'dd/mm/yyyy'))
  into STRICT  dt_inicial_w,
    dt_final_w
;
end if;

open C01;
loop
fetch C01 into
  cd_cgc_w,
  cd_pf_estipulante_w,
  nr_seq_prestador_w,
  cd_cbo_saude_w,
  vl_remuneracao_w,
  vl_descontado_w,
  nr_seq_lote_pag_w,
  nr_seq_venc_trib_w,
  vl_base_calculo_w,
  nr_seq_vencimento_w,
  pr_tributo_w,
  vl_imposto_w,
  ie_tipo_contratacao_w,
  cd_tributo_w,
  cd_cgc_prestador_w,
  cd_pf_prestador_w,
  dt_vencimento_w,
  ie_tipo_tributo_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
  begin
  /* Se o tributo foi retido em outra empresa ou não possuir base de calculo o mesmo não é descontado */

  select  count(1)
  into STRICT  qt_trib_outra_empresa_w
  from  pls_pag_prest_venc_trib a
  where  a.nr_sequencia     = nr_seq_venc_trib_w
  and (a.ie_pago_prev   = 'R' or
    vl_base_calculo_w   = 0)  LIMIT 1;

  /* Obter o valor teto do tributo */

  SELECT * FROM obter_dados_trib_tit_pagar(  cd_tributo_w, cd_estabelecimento_p, cd_cgc_prestador_w, cd_pf_prestador_w, ds_irrelevante_w, pr_tributo_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, vl_teto_base_w, ds_irrelevante_w, ds_irrelevante_w, dt_vencimento_w, ds_irrelevante_w, ds_irrelevante_w, null, null, null, null, ie_tipo_contratacao_w, null, ds_irrelevante_w, null, 0, ds_irrelevante_w, ds_irrelevante_w, vl_base_calculo_w, 'S', null, null, null, null) INTO STRICT ds_irrelevante_w, pr_tributo_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, vl_teto_base_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w;

  /* Obter o valor total descontado para este prestador */

  select  coalesce(sum(b.vl_descontado),0)
  into STRICT  vl_total_descontado_w
  from    sefip_tomador_movimento b,
    sefip_tomador a
  where   a.nr_sequencia     = b.nr_seq_tomador
  and     b.nr_seq_prestador   = nr_seq_prestador_w
  and     a.nr_seq_lote     = nr_seq_lote_p;

  /* Se o tipo do tributo for Individual, é descontado o valor total do tributo */

  if (ie_tipo_tributo_w = 'I') then
    vl_descontado_w := vl_imposto_w;
  end if;

  if  ((cd_cgc_w IS NOT NULL AND cd_cgc_w::text <> '') or (cd_pf_estipulante_w IS NOT NULL AND cd_pf_estipulante_w::text <> '')) and (ie_tipo_contratacao_w IS NOT NULL AND ie_tipo_contratacao_w::text <> '') then
    select  sum(a.vl_liberado)
    into STRICT  vl_liberado_total_w
    from  pls_conta_medica_resumo a
    where  a.nr_seq_prestador_pgto = nr_seq_prestador_w
    and  a.nr_seq_lote_pgto  = nr_seq_lote_pag_w
    and  a.ie_tipo_contratacao  = ie_tipo_contratacao_w
    and  ((coalesce(a.ie_situacao::text, '') = '') or (a.ie_situacao != 'I'));

    if (vl_liberado_total_w <> vl_base_calculo_w) then
      select  coalesce(sum(a.vl_liberado),0)
      into STRICT  vl_liberado_cgc_w
      from  pls_contrato       c,
        pls_segurado      b,
        pls_conta_medica_resumo    a
      where  c.nr_sequencia    = b.nr_seq_contrato
      and  b.nr_sequencia    = a.nr_seq_segurado
      and (c.cd_cgc_estipulante  = cd_cgc_w or
        c.cd_pf_estipulante   = cd_pf_estipulante_w)
      and  a.nr_seq_prestador_pgto = nr_seq_prestador_w
      and  a.nr_seq_lote_pgto  = nr_seq_lote_pag_w
      and  a.ie_tipo_contratacao  = ie_tipo_contratacao_w
      and  ((coalesce(a.ie_situacao::text, '') = '') or (a.ie_situacao != 'I'));

      if (vl_liberado_cgc_w = 0) then
        select  coalesce(sum(a.vl_liberado),0)
        into STRICT  vl_liberado_cgc_w
        from  pls_intercambio      c,
          pls_segurado      b,
          pls_conta_medica_resumo    a
        where  c.nr_sequencia    = b.nr_seq_intercambio
        and  b.nr_sequencia    = a.nr_seq_segurado
        and (c.cd_cgc    = cd_cgc_w or
          c.cd_pessoa_fisica   = cd_pf_estipulante_w)
        and  a.nr_seq_prestador_pgto = nr_seq_prestador_w
        and  a.nr_seq_lote_pgto  = nr_seq_lote_pag_w
        and  a.ie_tipo_contratacao  = ie_tipo_contratacao_w
        and  ((coalesce(a.ie_situacao::text, '') = '') or (a.ie_situacao != 'I'));
      end if;

      select  coalesce(a.vl_imposto,0)
      into STRICT  vl_imposto_w
      from  pls_pag_prest_venc_trib a
      where  a.nr_sequencia = nr_seq_venc_trib_w;

      vl_descontado_w := coalesce(vl_imposto_w * (vl_liberado_cgc_w/vl_liberado_total_w),0);
    end if;
  end if;

  if (qt_trib_outra_empresa_w > 0) or -- Se  o tributofoi pago em outra empresa não é lançado este desconto.
    ((coalesce(vl_teto_base_w,0) > 0) and (coalesce(pr_tributo_w,0) > 0) and
    (vl_total_descontado_w >= (vl_teto_base_w * (pr_tributo_w/100)))) then -- Se o valor total descontado para este prestador já chegou ao teto do tributo, não é mais lançado desconto para o mesmo.
    vl_descontado_w   := 0;
  end if;

  /* Se ultrapassar o valor teto do tributo, o desconto deve ser apenas o necessário para fechar o valor do teto. */

  if (coalesce(vl_teto_base_w,0) > 0) and (coalesce(pr_tributo_w,0) > 0) and
    ((vl_total_descontado_w + vl_descontado_w) > (vl_teto_base_w * (pr_tributo_w/100))) then
    vl_descontado_w := abs(vl_total_descontado_w - (coalesce(vl_teto_base_w,0) * (pr_tributo_w/100)));
  end if;

  /* Se não possuir estipulante  PJ no contrato, é vinculado a operadora */

  if (coalesce(cd_cgc_w::text, '') = '')then
    select  max(cd_cgc_outorgante)
    into STRICT  cd_cgc_w
    from  pls_outorgante
    where  cd_estabelecimento = cd_estabelecimento_p;
  end if;
  
  
  select  max(nr_sequencia)
  into STRICT  nr_seq_tomador_w
  from  sefip_tomador
  where  nr_seq_lote  = nr_seq_lote_p
  and  cd_cgc    = cd_cgc_w;

  if (coalesce(nr_seq_tomador_w::text, '') = '') then    
    select  nextval('sefip_tomador_seq')
    into STRICT  nr_seq_tomador_w
;

    insert into sefip_tomador(nr_sequencia, 
      dt_atualizacao, 
      nm_usuario,
      nm_usuario_nrec, 
      dt_atualizacao_nrec, 
      cd_cgc,
      vl_retencao,
      vl_faturado,
      nr_seq_lote,
      nr_seq_lote_pgto)
    values (nr_seq_tomador_w, 
      clock_timestamp(),
      nm_usuario_p,
      nm_usuario_p, 
      clock_timestamp(), 
      cd_cgc_w,
      0,
      vl_remuneracao_w,
      nr_seq_lote_p,
      nr_seq_lote_pag_w);
  else      
    update  sefip_tomador
    set  dt_atualizacao    = clock_timestamp(),
      nm_usuario    = nm_usuario_p,
      vl_faturado    = vl_faturado + vl_remuneracao_w
    where  nr_sequencia    = nr_seq_tomador_w;
  end if;

  insert into sefip_tomador_movimento(nr_sequencia,
    dt_atualizacao,
    nm_usuario,
    nm_usuario_nrec,
    dt_atualizacao_nrec,
    nr_seq_prestador,
    vl_remuneracao,
    vl_remuneracao_13,
    vl_descontado,
    vl_base_13,
    vl_base_13_movimento,
    nr_seq_tomador,
    cd_cbo_saude)
  values (nextval('sefip_tomador_movimento_seq'), 
    clock_timestamp(),
    nm_usuario_p,
    nm_usuario_p,
    clock_timestamp(),
    nr_seq_prestador_w,
    vl_remuneracao_w,
    0,
    vl_descontado_w,
    0,
    0,
    nr_seq_tomador_w,
    cd_cbo_saude_w);
  end;
end loop;
close C01;

/* Obtém a operadora e o representante da mesma */

select  max(a.cd_cgc_outorgante),
  max(a.cd_representante)
into STRICT  cd_cgc_w,
  cd_representante_w
from  pls_outorgante a
where  a.cd_estabelecimento = cd_estabelecimento_p;

/* Obtém o prestador do representante da operadora */

select  max(a.nr_sequencia)
into STRICT  nr_seq_prest_repres_w
from  pls_cooperado  b,
  pls_prestador   a
where  b.cd_pessoa_fisica = a.cd_pessoa_fisica
and  a.cd_pessoa_fisica = cd_representante_w;

/* Se possuir diferença entre o SEFIP e o pagamento de produção médica para algum prestador, é gerado um registro com essa diferença para a operadora responsável */

open C02;
loop
fetch C02 into
  nr_seq_prestador_w,
  vl_descontado_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
  begin
  select  sum(c.vl_imposto)
  into STRICT  vl_imposto_w
  from  tributo        h,
    pls_prestador      p,
    pls_pagamento_prestador    j,
    pls_pag_prest_vencimento  d,
    pls_pag_prest_venc_trib    c,
    pls_lote_pagamento    b
  where  b.nr_sequencia      = j.nr_seq_lote
  and  c.nr_seq_vencimento    = d.nr_sequencia
  and  d.nr_seq_pag_prestador    = j.nr_sequencia
  and  j.nr_seq_prestador    = p.nr_sequencia
  and  c.cd_tributo      = h.cd_tributo
  and  h.ie_tipo_tributo    = 'INSS'
  and  c.ie_pago_prev       <> 'R'
  and  p.nr_sequencia       = nr_seq_prestador_w
  and (c.cd_darf      = coalesce(cd_darf_p,c.cd_darf) or
    coalesce(c.cd_darf::text, '') = '')
  and  trunc(b.dt_mes_competencia,'dd') between dt_inicial_w and dt_final_w;

  select  max(a.nr_sequencia)
  into STRICT  nr_seq_tomador_w
  from  sefip_tomador a
  where  a.cd_cgc   = cd_cgc_w
  and  nr_seq_lote  = nr_seq_lote_p;

  select  max(cd_cbo_saude)
  into STRICT  cd_cbo_saude_w
  from  sefip_tomador_movimento  b,
    sefip_tomador    a
  where  a.nr_sequencia     = b.nr_seq_tomador
  and  a.cd_cgc    = cd_cgc_w
  and  b.nr_seq_prestador  = nr_seq_prestador_w;
  
  if (vl_descontado_w < vl_imposto_w) then          
    vl_descontado_w  := vl_imposto_w - vl_descontado_w;
  elsif (vl_descontado_w > vl_imposto_w) then
    select  max(b.nr_sequencia)
    into STRICT  nr_seq_movimento_w
    from  sefip_tomador_movimento  b,
      sefip_tomador    a
    where  a.nr_sequencia     = b.nr_seq_tomador
    and  a.cd_cgc    = cd_cgc_w
    and  b.nr_seq_prestador  = nr_seq_prestador_w;

    vl_descontado_w := vl_descontado_w - vl_imposto_w;
    
    update  sefip_tomador_movimento
    set  vl_descontado   = vl_descontado - vl_descontado_w
    where  nr_sequencia   = nr_seq_movimento_w;

    nr_seq_prestador_w := nr_seq_prest_repres_w;
  else
    vl_descontado_w := 0;
  end if;

  if (vl_descontado_w > 0) then
    insert into sefip_tomador_movimento(nr_sequencia,
      dt_atualizacao,
      nm_usuario,
      nm_usuario_nrec,
      dt_atualizacao_nrec,
      nr_seq_prestador,
      vl_remuneracao,
      vl_remuneracao_13,
      vl_descontado,
      vl_base_13,
      vl_base_13_movimento,
      nr_seq_tomador,
      cd_cbo_saude)
    values (nextval('sefip_tomador_movimento_seq'), 
      clock_timestamp(),
      nm_usuario_p,
      nm_usuario_p,
      clock_timestamp(),
      nr_seq_prestador_w,
      0,
      0,
      vl_descontado_w,
      0,
      0,
      nr_seq_tomador_w,
      cd_cbo_saude_w);
  end if;
  end;
end loop;
close C02;

update  sefip_lote
set  dt_geracao  = clock_timestamp(),
  nm_usuario  = nm_usuario_p
where  nr_sequencia  = nr_seq_lote_p;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_lote_sefip ( nr_seq_lote_p bigint, cd_estabelecimento_p bigint, cd_darf_p text, nm_usuario_p text) FROM PUBLIC;

