-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_cot_compra_fornecedor ( nr_cot_compra_p bigint, nr_id_fornec_p bigint, cd_cgc_p text, nr_inscricao_estadual_p text, ds_razao_social_p text, ds_endereco_p text, cd_cep_p text, ds_municipio_p text, sg_estado_p text, ds_email_p text, nr_telefone_p text, nm_contato_p text, nr_fax_p text, cd_unidade_medida_p text, ds_forma_pagamento_p text, cd_material_p bigint, qt_material_p bigint, vl_unit_material_p text, vl_total_p text, dt_confirmacao_p text, ie_generico_p text, nm_usuario_p text, ds_marca_p text, ie_tipo_interface_p bigint, cd_material_retorno_p bigint, nr_documento_externo_p text) AS $body$
DECLARE


cd_cgc_w			varchar(14);
cd_fornecedor_w			varchar(14);
nr_item_cotacao_w			integer;
cd_moeda_w			integer;
cd_condicao_pagto_w		bigint;
cd_estabelecimento_w		smallint;
vl_default_conta_contabil_w		varchar(20);
nr_seq_cot_fornecedor_w		bigint;
nr_sequencia_item_w		bigint;
cd_tipo_pessoa_bionexo_w		varchar(15);
cd_cnpj_estabelecimento_w	varchar(14);
cd_material_w			integer;
ds_forma_pagamento_w		varchar(80);
ds_forma_pagto_fornec_w		varchar(80);
qt_existe_w			bigint;


BEGIN
if (length(cd_cgc_p) > 14) then
	/*'CNPJ =' || cd_cgc_p || ' Maior que 14 posicoes.');*/

	CALL wheb_mensagem_pck.exibir_mensagem_abort(199415,'CD_CNPJ_P='|| cd_cgc_p);
end if;

cd_material_w 		:= cd_material_p;
ds_forma_pagamento_w	:= ds_forma_pagamento_p;

select	count(*)
into STRICT	qt_existe_w
from	cot_compra
where	nr_cot_compra = nr_cot_compra_p;

if (qt_existe_w = 0) then
	/*'O numero da cotacao (' || NR_COT_COMPRA_P || ') que esta no arquivo, nao existe no Tasy');*/

	CALL wheb_mensagem_pck.exibir_mensagem_abort(199416,'NR_COT_COMPRA_P='||NR_COT_COMPRA_P);
end if;

select	cd_estabelecimento
into STRICT	cd_estabelecimento_w
from	cot_compra
where	nr_cot_compra	= nr_cot_compra_p;



select	cd_cgc
into STRICT	cd_cnpj_estabelecimento_w
from	estabelecimento
where	cd_estabelecimento	= cd_estabelecimento_w;

select	substr(obter_conversao_interna(cd_cnpj_estabelecimento_w,'CONDICAO_PAGAMENTO','DS_CONDICAO_PAGAMENTO',ds_forma_pagamento_p),1,80)
into STRICT	ds_forma_pagto_fornec_w
;

select	cd_moeda_padrao,
	cd_condicao_pagamento_padrao
into STRICT	cd_moeda_w,
	cd_condicao_pagto_w
from	parametro_compras
where	cd_estabelecimento	= cd_estabelecimento_w;

/*Anderson 21/09/2006 - OS 40692 - Inclui o select abaixo*/

select	coalesce(max(cd_condicao_pagamento),cd_condicao_pagto_w)
into STRICT	cd_condicao_pagto_w
from	condicao_pagamento
where	upper(ds_condicao_pagamento) = upper(coalesce(ds_forma_pagto_fornec_w,ds_forma_pagamento_w));

select	coalesce(max(cd_cgc), '0')
into STRICT	cd_cgc_w
from	pessoa_juridica
where	cd_cgc		= cd_cgc_p;

update	cot_compra
set	ie_tipo_integracao_receb = ie_tipo_interface_p,
	nr_documento_externo = nr_documento_externo_p
where	nr_cot_compra = nr_cot_compra_p;

if (cd_cgc_w = '0') then
	begin
	
	select	max(vl_default)
	into STRICT	vl_default_conta_contabil_w
	from	tabela_atrib_regra
	where	nm_tabela					= 'PESSOA_JURIDICA'
	and	nm_atributo					= 'CD_CONTA_CONTABIL'
	and	coalesce(cd_estabelecimento,cd_estabelecimento_w)	= cd_estabelecimento_w
	and	coalesce(cd_perfil, obter_perfil_ativo)		= obter_perfil_ativo
	and	coalesce(nm_usuario_param, nm_usuario_p) 		= nm_usuario_p;
	
	select	coalesce(max(cd_tipo_pessoa_bionexo),2)
	into STRICT	cd_tipo_pessoa_bionexo_w
	from	parametro_compras
	where	cd_estabelecimento = cd_estabelecimento_w;
	
	if (coalesce(ds_razao_social_p::text, '') = '') then
		/*Favor informar a descricao da razao social do CNPJ #@CD_CNPJ_P#@.*/

		CALL wheb_mensagem_pck.exibir_mensagem_abort(199414,'CD_CNPJ_P='|| cd_cgc_p);		
	end if;

	insert into pessoa_juridica(cd_cgc,
		ds_razao_social,
		nm_fantasia,
		cd_cep,
		ds_endereco,
		ds_municipio,
		sg_estado,
		dt_atualizacao,
		nm_usuario,
		nr_telefone,
		nr_fax,
		ds_email,
		nm_pessoa_contato,
		nr_inscricao_estadual,
		cd_tipo_pessoa,
		ie_prod_fabric,
		ie_situacao,
		cd_conta_contabil)
	values (cd_cgc_p,
		substr(ds_razao_social_p,1,255),
		substr(ds_razao_social_p,1,255),
		substr(cd_cep_p,1,8),
		substr(ds_endereco_p,1,40),
		substr(ds_municipio_p,1,30),
		substr(sg_estado_p,1,15),
		clock_timestamp(),
		nm_usuario_p,
		substr(nr_telefone_p,1,15),
		substr(nr_fax_p,1,15),
		substr(ds_email_p,1,40),
		substr(nm_contato_p,1,10),
		substr(nr_inscricao_estadual_p,1,15),
		cd_tipo_pessoa_bionexo_w,
		'N',
		'A',
		vl_default_conta_contabil_w);
	commit;
	end;
end if;

select	coalesce(max(cd_cgc), '0')
into STRICT	cd_cgc_w
from	pessoa_juridica
where	cd_cgc		= cd_cgc_p;

if (cd_cgc_w <> '0') then
	begin
	select	coalesce(max(cd_cgc_fornecedor),'0'),
		coalesce(max(nr_sequencia),0)
	into STRICT	cd_fornecedor_w,
		nr_seq_cot_fornecedor_w
	from	cot_compra_forn
	where	nr_cot_compra	= nr_cot_compra_p
	and	cd_cgc_fornecedor	= cd_cgc_p;

	if (cd_fornecedor_w = '0') then
		begin
		select	nextval('cot_compra_forn_seq')
		into STRICT	nr_seq_cot_fornecedor_w
		;

		insert	into COT_COMPRA_FORN(
			nr_sequencia,
			nr_cot_compra,
			cd_cgc_fornecedor,
			dt_atualizacao,
			nm_usuario,
			ds_observacao,
			cd_moeda,
			cd_condicao_pagamento,
			ie_frete,
			ie_gerado_bionexo)
		values (nr_seq_cot_fornecedor_w,
			nr_cot_compra_p,
			cd_cgc_p,
			clock_timestamp(),
			nm_usuario_p,
			upper(coalesce(ds_forma_pagto_fornec_w,ds_forma_pagamento_w)),
			cd_moeda_w,
			cd_condicao_pagto_w,
			'N',
			'S');

		cd_fornecedor_w	:= cd_cgc_w;

		end;
	end if;	

	if (coalesce(dt_confirmacao_p::text, '') = '') then
		/*'O item ' || CD_MATERIAL_P || ' no possui data informada no arquivo.');*/

		CALL wheb_mensagem_pck.exibir_mensagem_abort(199417,'CD_MATERIAL_P='||CD_MATERIAL_P);
	end if;

	if (ie_tipo_interface_p in (0,2,3)) then
		select	coalesce(min(a.nr_item_cot_compra),0)
		into STRICT	nr_item_cotacao_w
		from	cot_compra_item a
		where	a.nr_cot_compra	= nr_cot_compra_p
		and (CASE WHEN ie_generico_p='S' THEN obter_material_generico(a.cd_material)  ELSE a.cd_material END  = cd_material_p)
		and	not exists (	SELECT	b.nr_item_cot_compra			
					from	cot_compra_forn_item b
					where	b.nr_cot_compra = nr_cot_compra_p
					and	b.nr_item_cot_compra = a.nr_item_cot_compra);

		if (nr_item_cotacao_w = 0) then
			select	coalesce(min(a.nr_item_cot_compra),0)
			into STRICT	nr_item_cotacao_w
			from	cot_compra_item a,
				cot_compra_item_aceite b
			where	a.nr_cot_compra = b.nr_cot_compra
			and	a.nr_item_cot_compra = b.nr_item_cot_compra
			and	a.nr_cot_compra = nr_cot_compra_p
			and (CASE WHEN ie_generico_p='S' THEN obter_material_generico(b.cd_material)  ELSE b.cd_material END  = cd_material_p)
			and	not exists (
				SELECT	x.nr_item_cot_compra
				from	cot_compra_forn_item x
				where	x.nr_cot_compra = nr_cot_compra_p
				and	x.nr_item_cot_compra = a.nr_item_cot_compra);
		end if;
					
		if (nr_item_cotacao_w > 0) then
			begin
			
			update	cot_compra_item
			set	ie_situacao = 'A'
			where	nr_cot_compra = nr_cot_compra_p
			and	nr_item_cot_compra = nr_item_cotacao_w
			and	coalesce(ie_situacao,'A') <> 'A';
			
			if (cd_material_retorno_p <> 0) and (cd_material_retorno_p <> cd_material_p) then
				cd_material_w := cd_material_retorno_p;
			end if;
			
			select	nextval('cot_compra_forn_item_seq')
			into STRICT	nr_sequencia_item_w
			;

			insert into cot_compra_forn_item(
				nr_sequencia,
				nr_seq_cot_forn,
				nr_cot_compra,
				nr_item_cot_compra,
				cd_cgc_fornecedor,
				qt_material,
				vl_unitario_material,
				dt_atualizacao,
				nm_usuario,
				vl_preco_liquido,
				vl_total_liquido_item,
				ie_situacao,
				ds_marca,
				ds_marca_fornec,
				cd_material)
			values (nr_sequencia_item_w,
				nr_seq_cot_fornecedor_w,
				nr_cot_compra_p,
				nr_item_cotacao_w,
				cd_fornecedor_w,
				qt_material_p,
				vl_unit_material_p,
				clock_timestamp(),
				nm_usuario_p,
				vl_total_p,				
				vl_total_p,				
				'A',
				ds_marca_p,
				ds_marca_p,
				cd_material_w);
			end;
		end if;
	
	elsif (ie_tipo_interface_p in (1,4)) then
		
		select	coalesce(min(a.nr_item_cot_compra),0)
		into STRICT	nr_item_cotacao_w
		from	cot_compra_item a
		where	a.nr_cot_compra	= nr_cot_compra_p
		and (CASE WHEN ie_generico_p='S' THEN obter_material_generico(a.cd_material)  ELSE a.cd_material END  = cd_material_p);
		
		if (nr_item_cotacao_w = 0) then
			select	coalesce(min(a.nr_item_cot_compra),0)
			into STRICT	nr_item_cotacao_w
			from	cot_compra_item a,
				cot_compra_item_aceite b
			where	a.nr_cot_compra = b.nr_cot_compra
			and	a.nr_item_cot_compra = b.nr_item_cot_compra
			and	a.nr_cot_compra	= nr_cot_compra_p
			and (CASE WHEN ie_generico_p='S' THEN obter_material_generico(b.cd_material)  ELSE b.cd_material END  = cd_material_p);
		end if;
		
		update	cot_compra_item
		set	ie_situacao = 'A'
		where	nr_cot_compra = nr_cot_compra_p
		and	nr_item_cot_compra = nr_item_cotacao_w
		and	coalesce(ie_situacao,'A') <> 'A';
		
		if (cd_material_retorno_p <> 0) and (cd_material_retorno_p <> cd_material_p) then
			cd_material_w := cd_material_retorno_p;
		end if;
		
		select	nextval('cot_compra_forn_item_seq')
		into STRICT	nr_sequencia_item_w
		;

		insert into cot_compra_forn_item(
			nr_sequencia,
			nr_seq_cot_forn,
			nr_cot_compra,
			nr_item_cot_compra,
			cd_cgc_fornecedor,
			qt_material,
			vl_unitario_material,
			dt_atualizacao,
			nm_usuario,
			vl_preco_liquido,
			vl_total_liquido_item,
			ie_situacao,
			ds_marca,
			ds_marca_fornec,
			cd_material)
		values (	nr_sequencia_item_w,
			nr_seq_cot_fornecedor_w,
			nr_cot_compra_p,
			nr_item_cotacao_w,
			cd_fornecedor_w,
			qt_material_p,
			vl_unit_material_p,
			clock_timestamp(),
			nm_usuario_p,
			vl_total_p,
			vl_total_p,
			'A',
			ds_marca_p,
			ds_marca_p,
			cd_material_w);
	end if;
	commit;
	end;
end if;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_cot_compra_fornecedor ( nr_cot_compra_p bigint, nr_id_fornec_p bigint, cd_cgc_p text, nr_inscricao_estadual_p text, ds_razao_social_p text, ds_endereco_p text, cd_cep_p text, ds_municipio_p text, sg_estado_p text, ds_email_p text, nr_telefone_p text, nm_contato_p text, nr_fax_p text, cd_unidade_medida_p text, ds_forma_pagamento_p text, cd_material_p bigint, qt_material_p bigint, vl_unit_material_p text, vl_total_p text, dt_confirmacao_p text, ie_generico_p text, nm_usuario_p text, ds_marca_p text, ie_tipo_interface_p bigint, cd_material_retorno_p bigint, nr_documento_externo_p text) FROM PUBLIC;

