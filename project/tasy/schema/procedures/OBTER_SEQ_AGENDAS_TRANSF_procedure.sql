-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE obter_seq_agendas_transf ( ds_lista_seq_p text, hr_transf_p text, cd_estabelecimento_p bigint, cd_agenda_p bigint, nm_usuario_p text, ds_erro_p INOUT text ) AS $body$
DECLARE

 
tam_lista_w		bigint;
ie_pos_virgula_w	smallint;
ds_lista_seq_w		varchar(2000);
ds_retorno_w		varchar(255);
nr_seq_destino_w	bigint;
nr_seq_origem_w		bigint;
dt_agenda_w		timestamp;
ds_erro_transf_w	varchar(255);
ie_feriado_w		varchar(1);
ie_sobra_horario_w	varchar(1);
ds_erro_w			varchar(255);


BEGIN 
 
ds_erro_w	:= wheb_mensagem_pck.get_texto(280736);
ds_lista_seq_w := ds_lista_seq_p;
 
while(ds_lista_seq_w IS NOT NULL AND ds_lista_seq_w::text <> '') loop 
	begin 
	tam_lista_w		:= length(ds_lista_seq_w);
	ie_pos_virgula_w	:= position(',' in ds_lista_seq_w);
 
	if (ie_pos_virgula_w <> 0) then 
		nr_seq_origem_w		:= (substr(ds_lista_seq_w,1,(ie_pos_virgula_w - 1)))::numeric;
		ds_lista_seq_w		:= substr(ds_lista_seq_w,(ie_pos_virgula_w + 1),tam_lista_w);
	end if;
 
	select	max(dt_agenda) 
	into STRICT	dt_agenda_w 
	from	agenda_consulta 
	where	nr_sequencia = nr_seq_origem_w;
	 
	select 	coalesce(a.ie_feriado,'N'), 
		coalesce(a.ie_gerar_sobra_horario,'N') 
	into STRICT	ie_feriado_w, 
		ie_sobra_horario_w 
	from	agenda a 
	where	a.cd_agenda	= cd_agenda_p;
	 
	ds_retorno_w 
				 := Horario_Livre_Consulta(	cd_estabelecimento_p, cd_agenda_p, ie_feriado_w, dt_agenda_w, nm_usuario_p, 'S', ie_sobra_horario_w, 'N', 0, ds_retorno_w 
				);				
					 
	select	coalesce(max(nr_sequencia),0) 
	into STRICT	nr_seq_destino_w 
	from	agenda_consulta	 
	where	dt_agenda = pkg_date_utils.get_time(dt_agenda_w, hr_transf_p, 0) 
	and	cd_agenda = cd_agenda_p 
	and	ie_status_agenda = 'L';
		 
	if (nr_seq_destino_w > 0) then 
		ds_erro_transf_w 
						 := copiar_transferir_agenda_cons(	 
						cd_estabelecimento_p, nr_seq_origem_w, nr_seq_destino_w, 'T', null, null, nm_usuario_p, null, null, ds_erro_transf_w 
						);
	else 
		ds_erro_p := ds_erro_p ||ds_erro_w ||to_char(dt_agenda_w,'hh24:mi') ||',';
		ds_erro_w	:= '';
	end if;
		 
	end;
end loop;
 
commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE obter_seq_agendas_transf ( ds_lista_seq_p text, hr_transf_p text, cd_estabelecimento_p bigint, cd_agenda_p bigint, nm_usuario_p text, ds_erro_p INOUT text ) FROM PUBLIC;

