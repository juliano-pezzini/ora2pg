-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE generate_atend_anzics ( nr_atendimento_p bigint, nr_seq_atepacu_p bigint, nm_usuario_p atend_anzics_result.nm_usuario%type , ie_force_update_p text default null, nr_seq_anzics_versao_p bigint default null, nr_seq_alto_custo_p bigint default null, cd_convenio_p atend_anzics.CD_CONVENIO%TYPE default null) AS $body$
DECLARE

					
nr_seq_anzics_version_w 	bigint;
ds_sql_w                	varchar(4000);
ds_result_w             	varchar(4000);
nr_result_w             	double precision;
dt_result_w             	timestamp;
cd_pessoa_fisica_w 		varchar(10);
nr_seq_atend_anzics_w 		bigint := 0;
ds_parameters_w			varchar(4000);
ds_separator_w			varchar(255)	:= ';';
qt_reg_w			bigint;
ds_error_w			varchar(4000);
nr_seq_atepacu_w		atend_anzics.nr_seq_atepacu%type;
ie_tipo_doenca_w        anzics_version.IE_TIPO_DOENCA%TYPE;
localeColombia constant varchar(5) := 'es_CO';
localeAustralia constant varchar(5) := 'en_AU';
 c01 CURSOR FOR
    SELECT	a.nr_sequencia,
		a.ds_sql,
		a.ie_format,
		a.cd_item
    from 	anzics_item a,
		anzics_group b
    where 	a.nr_seq_group        = b.nr_sequencia
    and 	b.nr_seq_anzics_version = nr_seq_anzics_version_w;
BEGIN

cd_pessoa_fisica_w          := obter_pessoa_atendimento(nr_atendimento_p,'C');
nr_seq_anzics_version_w	    := nr_seq_anzics_versao_p;
nr_seq_atepacu_w	        := COALESCE(nr_seq_atepacu_p,Obter_Atepacu_paciente(nr_atendimento_p, 'A'));

if (nr_seq_atepacu_w = 0) then
    nr_seq_atepacu_w := null;
end if;

if (coalesce(nr_seq_anzics_versao_p::text, '') = '') then --Quando vem da australia, o campo continuara nulo.
        SELECT MAX(IE_TIPO_DOENCA) INTO STRICT ie_tipo_doenca_w FROM alto_custo WHERE NR_SEQUENCIA = nr_seq_alto_custo_p;

        SELECT	coalesce(MAX(nr_sequencia),0)
            INTO STRICT 	nr_seq_anzics_version_w
        FROM 	anzics_version
        WHERE 	clock_timestamp() BETWEEN establishment_timezone_utils.startofday(dt_inicial) AND establishment_timezone_utils.endofday(coalesce(dt_final,clock_timestamp()))
            AND 	ie_situacao                = 'A'
            AND	ds_locale = pkg_i18n.get_user_locale
            AND (ds_locale <> localeColombia OR ie_tipo_doenca = ie_tipo_doenca_w);

end if;

 if (nr_seq_anzics_version_w    > 0) then

	select	max(nr_sequencia)
	into STRICT	nr_seq_atend_anzics_w
	from	atend_anzics
	where	nr_atendimento	= nr_atendimento_p
	and		nr_seq_atepacu	= nr_seq_atepacu_w
	and 	nr_seq_anzics = nr_seq_anzics_version_w
	and		coalesce(dt_inativacao::text, '') = ''
	and 	((cd_convenio = cd_convenio_p and pkg_i18n.get_user_locale = localeColombia) or ( pkg_i18n.get_user_locale = localeAustralia));
		
	if (coalesce(nr_seq_atend_anzics_w::text, '') = '') then
		insert into atend_anzics(	nr_sequencia,
						dt_atualizacao,
						nm_usuario ,
						dt_atualizacao_nrec ,
						nm_usuario_nrec ,
						nr_atendimento ,
						ie_situacao,
						dt_generate ,
						nr_seq_anzics,
						nr_seq_atepacu,
						nr_seq_alto_custo,
                        CD_CONVENIO)
				values (	nextval('atend_anzics_seq'),
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						nr_atendimento_p,
						'A',
						clock_timestamp(),
						nr_seq_anzics_version_w,
						nr_seq_atepacu_w,
						nr_seq_alto_custo_p,
                        CD_CONVENIO_P)
		returning nr_sequencia into nr_seq_atend_anzics_w;

	end if;
	
	SELECT MAX(IE_TIPO_DOENCA) INTO STRICT ie_tipo_doenca_w FROM anzics_version WHERE NR_SEQUENCIA = nr_seq_anzics_version_w;

    if (pkg_i18n.get_user_locale = localeColombia) then
        ds_parameters_w	:= 'nr_atendimento='||nr_atendimento_p||ds_separator_w;
        ds_parameters_w	:= ds_parameters_w||'cd_pessoa_fisica='||cd_pessoa_fisica_w||ds_separator_w;
        ds_parameters_w	:= ds_parameters_w||'nr_seq_atepacu='||nr_seq_atepacu_w||ds_separator_w;
        ds_parameters_w	:= ds_parameters_w||'ie_tipo_doenca='||ie_tipo_doenca_w||ds_separator_w;
    else
        ds_parameters_w	:= 'nr_atendimento='||nr_atendimento_p||ds_separator_w;
        ds_parameters_w	:= ds_parameters_w||'cd_pessoa_fisica='||cd_pessoa_fisica_w||ds_separator_w;
        ds_parameters_w	:= ds_parameters_w||'nr_seq_atepacu='||nr_seq_atepacu_w||ds_separator_w;
    end if;

  if (pkg_i18n.get_user_locale = localeColombia) then
    CALL alto_custo_pck.clear_dados();
    CALL alto_custo_pck.load_all_dados_atend(cd_pessoa_fisica_w, ie_tipo_doenca_w);
    CALL alto_custo_pck.load_first_dados_atend(cd_pessoa_fisica_w, ie_tipo_doenca_w);
    CALL alto_custo_pck.load_last_dados_atend(cd_pessoa_fisica_w, ie_tipo_doenca_w);
  end if;

	for r_c01 in c01 loop
		begin
		nr_result_w	:= null;
		dt_result_w	:= null;
		ds_result_w	:= null;

		if (r_c01.ds_sql IS NOT NULL AND r_c01.ds_sql::text <> '') then

			ds_sql_w		:= 'select	( '||r_c01.ds_sql||' ) from dual ';

			begin				
			if (r_c01.ie_format	= 'N') then --Numeric
				nr_result_w	:= ANZICS_PCK.get_sql_number(ds_sql_w,ds_parameters_w);
			elsif (r_c01.ie_format	= 'D') then --Date
				dt_result_w	:= ANZICS_PCK.get_sql_date(ds_sql_w,ds_parameters_w);
			else --Varchar2
				ds_result_w	:= ANZICS_PCK.get_sql_varchar(ds_sql_w,ds_parameters_w);
			end if;

			select	count(1)
			into STRICT	qt_reg_w
			from	atend_anzics_result
			where	nr_seq_atend_anzics 	= nr_seq_atend_anzics_w
			and 	nr_seq_anzics_item    	= r_c01.nr_sequencia
			and ((qt_value IS NOT NULL AND qt_value::text <> '') or (ds_value IS NOT NULL AND ds_value::text <> '') or (dt_value IS NOT NULL AND dt_value::text <> ''));

			if	( (qt_reg_w = 0 or ie_force_update_p = 'S') and (ds_result_w IS NOT NULL AND ds_result_w::text <> '') or (dt_result_w IS NOT NULL AND dt_result_w::text <> '') or (nr_result_w IS NOT NULL AND nr_result_w::text <> '')) then

				CALL update_anzics_item(	nr_seq_atend_anzics_w,	
							r_c01.nr_sequencia,
							nr_result_w,
							ds_result_w,
							dt_result_w,
							nm_usuario_p);

			end if;
			exception
			when others then
				ds_error_w := substr('NR_ATENDIMENTO='||nr_atendimento_p||';NR_SEQUENCIA='|| r_c01.nr_sequencia ,1,2000);
				ds_error_w	:= substr(ds_error_w || ';DS_ERROR='||sqlerrm ,1,2000);
				CALL gravar_log_tasy(21058,ds_error_w,nm_usuario_p);
			end;

		end if;
		end;
	end loop;
  end if;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE generate_atend_anzics ( nr_atendimento_p bigint, nr_seq_atepacu_p bigint, nm_usuario_p atend_anzics_result.nm_usuario%type , ie_force_update_p text default null, nr_seq_anzics_versao_p bigint default null, nr_seq_alto_custo_p bigint default null, cd_convenio_p atend_anzics.CD_CONVENIO%TYPE default null) FROM PUBLIC;

