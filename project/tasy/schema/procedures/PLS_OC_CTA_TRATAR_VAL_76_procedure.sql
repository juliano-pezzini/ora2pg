-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_oc_cta_tratar_val_76 ( dados_regra_p pls_tipos_ocor_pck.dados_regra, nr_id_transacao_p pls_selecao_ocor_cta.nr_id_transacao%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE



/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Validar se o profissional executante está vinculado ao prestador executor

-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta:
[X]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------


Alterações:
------------------------------------------------------------------------------------------------------------------

jjkruk OS 734664
Alteração: Criação da procedure
------------------------------------------------------------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
dados_tb_selecao_w        pls_tipos_ocor_pck.dados_table_selecao_ocor;
nr_seq_sel_anterior_w   pls_oc_cta_selecao_ocor_v.nr_sequencia%type;
ie_valido_anterior_w    varchar(1);
nr_idx_w              integer;

C01 CURSOR(  nr_seq_oc_cta_comb_p  dados_regra_p.nr_sequencia%type) FOR
  SELECT  a.ie_valida ie_valida,
      coalesce(a.ie_tipo_profissional,'PE') ie_tipo_profissional
  from  pls_oc_cta_val_exec_prest a
  where a.nr_seq_oc_cta_comb  = nr_seq_oc_cta_comb_p;

C02 CURSOR(  nr_id_transacao_pc  pls_oc_cta_selecao_ocor_v.nr_sequencia%type,
    ie_tipo_evento_pc pls_oc_cta_combinada.ie_evento%type) FOR
  SELECT  x.nr_sequencia nr_seq_selecao,
    b.dt_inclusao,
    b.dt_exclusao,
    a.dt_atendimento,
    a.dt_atendimento_imp
  from  pls_oc_cta_selecao_ocor_v x,
    pls_conta_ocor_v    a,
    pls_prestador_medico    b
  where x.ie_valido     = 'S'
  and x.nr_id_transacao   = nr_id_transacao_pc
  and a.nr_sequencia      = x.nr_seq_conta
  and (a.nr_seq_prestador_exec_imp_ref IS NOT NULL AND a.nr_seq_prestador_exec_imp_ref::text <> '')
  and (a.cd_medico_executor IS NOT NULL AND a.cd_medico_executor::text <> '')
  and b.nr_seq_prestador    = a.nr_seq_prestador_exec_imp_ref
  and b.cd_medico     = a.cd_medico_executor
  and b.ie_situacao     = 'A'
  and ie_tipo_evento_pc   = 'IMP'

union all

  SELECT  x.nr_sequencia nr_seq_selecao,
    b.dt_inclusao,
    b.dt_exclusao,
    a.dt_atendimento,
    a.dt_atendimento_imp
  from  pls_oc_cta_selecao_ocor_v x,
    pls_conta_ocor_v    a,
    pls_prestador_medico    b
  where x.ie_valido     = 'S'
  and x.nr_id_transacao   = nr_id_transacao_pc
  and a.nr_sequencia      = x.nr_seq_conta
  and (a.nr_seq_prestador_exec IS NOT NULL AND a.nr_seq_prestador_exec::text <> '')
  and (a.cd_medico_executor IS NOT NULL AND a.cd_medico_executor::text <> '')
  and b.nr_seq_prestador    = a.nr_seq_prestador_exec
  and b.cd_medico     = a.cd_medico_executor
  and b.ie_situacao     = 'A'
  and ie_tipo_evento_pc   <> 'IMP';

C03 CURSOR(  nr_id_transacao_pc  pls_oc_cta_selecao_ocor_v.nr_sequencia%type) is
with query_tmp as(
  SELECT  x.nr_sequencia nr_seq_selecao,
    a.dt_atendimento,
    a.nr_seq_prestador_exec_imp_ref nr_seq_prest_exec,
    c.cd_medico_imp cd_medico,
    ( SELECT  count(1) 
      from  pls_prestador_medico m
      where   m.cd_medico     = c.cd_medico_imp
      and m.nr_seq_prestador  = a.nr_seq_prestador_exec_imp_ref
      and m.ie_situacao     = 'A') qt_prof_valido
  from  pls_oc_cta_selecao_ocor_v x,
    pls_conta   a,
    pls_conta_proc  b,
    pls_proc_participante c
  where x.ie_valido     = 'S'
  and x.nr_id_transacao   = nr_id_transacao_pc
  and a.nr_sequencia      = x.nr_seq_conta
  and a.nr_sequencia      = b.nr_seq_conta
  and b.nr_sequencia      = c.nr_seq_conta_proc
  order by x.nr_sequencia
)
select  a.nr_seq_selecao,
    b.dt_inclusao,
    b.dt_exclusao,
    a.dt_atendimento,
    qt_prof_valido
FROM query_tmp a
LEFT OUTER JOIN pls_prestador_medico b ON (a.cd_medico = b.cd_medico AND a.nr_seq_prest_exec = b.nr_seq_prestador AND 'A' = b.ie_situacao);

C04 CURSOR(  nr_id_transacao_pc  pls_oc_cta_selecao_ocor_v.nr_sequencia%type) is
with query_tmp as(
  SELECT  x.nr_sequencia nr_seq_selecao,
    a.dt_atendimento,
    a.nr_seq_prestador_exec,
    c.cd_medico,
    ( SELECT  count(1)
      from  pls_prestador_medico m
      where   m.cd_medico     = c.cd_medico
      and m.nr_seq_prestador  = a.nr_seq_prestador_exec
      and m.ie_situacao     = 'A') qt_prof_valido
  from  pls_oc_cta_selecao_ocor_v x,
    pls_conta   a,
    pls_conta_proc  b,
    pls_proc_participante c
  where x.ie_valido     = 'S'
  and x.nr_id_transacao   = nr_id_transacao_pc
  and a.nr_sequencia      = x.nr_seq_conta
  and a.nr_sequencia      = b.nr_seq_conta
  and b.nr_sequencia      = c.nr_seq_conta_proc
  order by x.nr_sequencia
)
select  a.nr_seq_selecao,
    b.dt_inclusao,
    b.dt_exclusao,
    a.dt_atendimento,
    qt_prof_valido
FROM query_tmp a
LEFT OUTER JOIN pls_prestador_medico b ON (a.cd_medico = b.cd_medico AND a.nr_seq_prestador_exec = b.nr_seq_prestador AND 'A' = b.ie_situacao);

C05 CURSOR( nr_id_transacao_pc  pls_oc_cta_selecao_ocor_v.nr_sequencia%type) FOR
  SELECT  x.nr_sequencia nr_seq_selecao,
    b.dt_inclusao,
    b.dt_exclusao,
    a.dt_atendimento,
    ( SELECT  count(1)
      from  pls_prestador_medico m
      where   m.cd_medico     = a.cd_medico_executor
      and m.nr_seq_prestador  = a.nr_seq_prestador_exec 
      and m.ie_situacao     = 'A') qt_prof_valido
  FROM pls_oc_cta_selecao_ocor_v x, pls_conta a
LEFT OUTER JOIN pls_prestador_medico b ON (a.nr_seq_prestador_exec = b.nr_seq_prestador AND a.cd_medico_executor = b.cd_medico AND 'A' = b.ie_situacao)
WHERE x.ie_valido     = 'S' and x.nr_id_transacao   = nr_id_transacao_pc and a.nr_sequencia      = x.nr_seq_conta    and not exists (   select  1
            from  pls_conta_proc e,
                pls_proc_participante f
            where e.nr_seq_conta = a.nr_sequencia
            and   e.nr_sequencia = f.nr_seq_conta_proc);

C06 CURSOR( nr_id_transacao_pc  pls_oc_cta_selecao_ocor_v.nr_sequencia%type) FOR
  SELECT  x.nr_sequencia nr_seq_selecao,
    b.dt_inclusao,
    b.dt_exclusao,
    a.dt_atendimento_imp dt_atendimento,
    ( SELECT  count(1) 
      from  pls_prestador_medico m
      where   m.cd_medico     = a.cd_medico_executor_imp
      and   m.nr_seq_prestador  = a.nr_seq_prestador_exec_imp_ref 
      and   m.ie_situacao     = 'A') qt_prof_valido
  FROM pls_oc_cta_selecao_ocor_v x, pls_conta a
LEFT OUTER JOIN pls_prestador_medico b ON (a.nr_seq_prestador_exec_imp_ref = b.nr_seq_prestador AND a.cd_medico_executor_imp = b.cd_medico AND 'A' = b.ie_situacao)
WHERE x.ie_valido     = 'S' and x.nr_id_transacao   = nr_id_transacao_pc and a.nr_sequencia      = x.nr_seq_conta    and not exists (   select  1
              from  pls_conta_proc e,
                  pls_proc_participante f
              where e.nr_seq_conta = a.nr_sequencia
              and   e.nr_sequencia = f.nr_seq_conta_proc);

BEGIN
if (dados_regra_p.nr_sequencia IS NOT NULL AND dados_regra_p.nr_sequencia::text <> '')  then
  for r_C01_w in C01(dados_regra_p.nr_sequencia) loop
    if (r_C01_w.ie_valida = 'S') then
    begin
      pls_tipos_ocor_pck.limpar_nested_tables(dados_tb_selecao_w);
      nr_seq_sel_anterior_w   := 0;
      ie_valido_anterior_w  := 'N';
      nr_idx_w:=  0;
      -- tratamento em campo auxiliar para identificar posteriormente os registros que foram alterados

      -- Considera todos como válidos, o que não trouxer no cursor vai permanecer como válido

      -- o que trouxer no cursor pode ser alterado para N dependendo das datas e inclusão e exclusão
      CALL pls_tipos_ocor_pck.atualiza_campo_auxiliar('V', nr_id_transacao_p, null, dados_regra_p, 'S');

        if (r_C01_w.ie_tipo_profissional = 'PE') then
          for r_C02_w in  C02(nr_id_transacao_p, dados_regra_p.ie_evento) loop

            dados_tb_selecao_w.ie_valido(nr_idx_w):=  'N';
            if (dados_regra_p.ie_evento = 'IMP') then
            if (r_C02_w.dt_atendimento_imp < r_C02_w.dt_inclusao) then
              dados_tb_selecao_w.ie_valido(nr_idx_w):=  'S';
            elsif ((r_C02_w.dt_exclusao IS NOT NULL AND r_C02_w.dt_exclusao::text <> '') and r_C02_w.dt_atendimento_imp > r_C02_w.dt_exclusao) then
              dados_tb_selecao_w.ie_valido(nr_idx_w):=  'S';
            end if;
            else
            if (r_C02_w.dt_atendimento < r_C02_w.dt_inclusao) then
              dados_tb_selecao_w.ie_valido(nr_idx_w):=  'S';
            elsif ((r_C02_w.dt_exclusao IS NOT NULL AND r_C02_w.dt_exclusao::text <> '') and r_C02_w.dt_atendimento > r_C02_w.dt_exclusao) then
              dados_tb_selecao_w.ie_valido(nr_idx_w):=  'S';
            end if;
            end if;

            dados_tb_selecao_w.nr_seq_selecao(nr_idx_w):= r_C02_w.nr_seq_selecao;
            dados_tb_selecao_w.ds_observacao(nr_idx_w):=  'Profissional executante não está vinculado ao prestador executor';

            nr_idx_w := nr_idx_w + 1;

            if (nr_idx_w = pls_util_cta_pck.qt_registro_transacao_w) then
            CALL pls_tipos_ocor_pck.gerencia_selecao_validacao(  dados_tb_selecao_w.nr_seq_selecao, pls_util_cta_pck.clob_table_vazia_w,
                  'SEQ', dados_tb_selecao_w.ds_observacao, dados_tb_selecao_w.ie_valido, nm_usuario_p);
            nr_idx_w := 0;
            pls_tipos_ocor_pck.limpar_nested_tables(dados_tb_selecao_w);
            end if;
          end loop;
        elsif (r_C01_w.ie_tipo_profissional in ('PP','A')) then

          if ( dados_regra_p.ie_evento <> 'IMP' ) then
            for r_C03_w in  C03(nr_id_transacao_p) loop
                  
              if (nr_seq_sel_anterior_w <> r_C03_w.nr_seq_selecao or ie_valido_anterior_w = 'N') then
              
                ie_valido_anterior_w            := 'N';
                dados_tb_selecao_w.ie_valido(nr_idx_w)    := 'N';
                dados_tb_selecao_w.nr_seq_selecao(nr_idx_w) := r_C03_w.nr_seq_selecao;
                dados_tb_selecao_w.ds_observacao(nr_idx_w)  := '';
                
                if (r_C03_w.qt_prof_valido = 0) then
                  dados_tb_selecao_w.ie_valido(nr_idx_w)    :=  'S';
                  dados_tb_selecao_w.ds_observacao(nr_idx_w)  :=  'Profissional executante não está vinculado ao prestador executor';
                  ie_valido_anterior_w    :=  'S';

                else
                  if (r_C03_w.dt_atendimento < r_C03_w.dt_inclusao) then
                    dados_tb_selecao_w.ie_valido(nr_idx_w):=  'S';
                    ie_valido_anterior_w  :='S';
                    dados_tb_selecao_w.ds_observacao(nr_idx_w):=  'Profissional executante não está vinculado ao prestador executor';

                  elsif ((r_C03_w.dt_exclusao IS NOT NULL AND r_C03_w.dt_exclusao::text <> '') and r_C03_w.dt_atendimento > r_C03_w.dt_exclusao) then
                    dados_tb_selecao_w.ie_valido(nr_idx_w):=  'S';
                    ie_valido_anterior_w  :='S';
                    dados_tb_selecao_w.ds_observacao(nr_idx_w):=  'Profissional executante não está vinculado ao prestador executor';

                  end if;
                end if;
                      
                nr_idx_w := nr_idx_w + 1;

                if (nr_idx_w = pls_util_cta_pck.qt_registro_transacao_w) then
                  
                  CALL pls_tipos_ocor_pck.gerencia_selecao_validacao(  dados_tb_selecao_w.nr_seq_selecao, pls_util_cta_pck.clob_table_vazia_w,
                  'SEQ', dados_tb_selecao_w.ds_observacao, dados_tb_selecao_w.ie_valido, nm_usuario_p);

                  nr_idx_w := 0;
                  pls_tipos_ocor_pck.limpar_nested_tables(dados_tb_selecao_w);
                end if;
              end if;
              nr_seq_sel_anterior_w   := r_C03_w.nr_seq_selecao;

            end loop;
          else

            for r_C04_w in  C04(nr_id_transacao_p) loop
                  
              if (nr_seq_sel_anterior_w <> r_C04_w.nr_seq_selecao or ie_valido_anterior_w = 'N') then
              
                ie_valido_anterior_w    := 'N';
                dados_tb_selecao_w.ie_valido(nr_idx_w)    := 'N';
                dados_tb_selecao_w.nr_seq_selecao(nr_idx_w) :=  r_C04_w.nr_seq_selecao;
                dados_tb_selecao_w.ds_observacao(nr_idx_w)  :=  '';

                if (r_C04_w.qt_prof_valido = 0) then
                  dados_tb_selecao_w.ie_valido(nr_idx_w):=  'S';
                  dados_tb_selecao_w.ds_observacao(nr_idx_w):=  'Profissional executante não está vinculado ao prestador executor';
                  ie_valido_anterior_w  :='S';

                else
                  if (r_C04_w.dt_atendimento < r_C04_w.dt_inclusao) then
                    dados_tb_selecao_w.ie_valido(nr_idx_w):=  'S';
                    ie_valido_anterior_w  :='S';
                    dados_tb_selecao_w.ds_observacao(nr_idx_w):=  'Profissional executante não está vinculado ao prestador executor';

                  elsif ((r_C04_w.dt_exclusao IS NOT NULL AND r_C04_w.dt_exclusao::text <> '') and r_C04_w.dt_atendimento > r_C04_w.dt_exclusao) then
                    dados_tb_selecao_w.ie_valido(nr_idx_w):=  'S';
                    ie_valido_anterior_w  :='S';
                    dados_tb_selecao_w.ds_observacao(nr_idx_w):=  'Profissional executante não está vinculado ao prestador executor';

                  end if;
                end if;
                      
                nr_idx_w := nr_idx_w + 1;

                if (nr_idx_w = pls_util_cta_pck.qt_registro_transacao_w) then
                  CALL pls_tipos_ocor_pck.gerencia_selecao_validacao(  dados_tb_selecao_w.nr_seq_selecao, pls_util_cta_pck.clob_table_vazia_w,
                  'SEQ', dados_tb_selecao_w.ds_observacao, dados_tb_selecao_w.ie_valido, nm_usuario_p);
                  nr_idx_w := 0;
                  pls_tipos_ocor_pck.limpar_nested_tables(dados_tb_selecao_w);
                end if;
              end if;
              nr_seq_sel_anterior_w   := r_C04_w.nr_seq_selecao;

            end loop;

          end if;

        end if;

        if ( r_C01_w.ie_tipo_profissional = 'A') then
        
          if (dados_regra_p.ie_evento <> 'IMP') then 
        
            for r_C05_w in  C05(nr_id_transacao_p) loop
                
              if (nr_seq_sel_anterior_w <> r_C05_w.nr_seq_selecao or ie_valido_anterior_w = 'N') then
              
                ie_valido_anterior_w    := 'N';
                dados_tb_selecao_w.ie_valido(nr_idx_w)    := 'N';
                dados_tb_selecao_w.nr_seq_selecao(nr_idx_w) :=  r_C05_w.nr_seq_selecao;
                dados_tb_selecao_w.ds_observacao(nr_idx_w)  :=  '';

                if (r_C05_w.qt_prof_valido = 0) then
                  ie_valido_anterior_w  :='S';
                  dados_tb_selecao_w.ie_valido(nr_idx_w):=  'S';
                  dados_tb_selecao_w.ds_observacao(nr_idx_w):=  'Profissional executante não está vinculado ao prestador executor';

                else
                  if (r_C05_w.dt_atendimento < r_C05_w.dt_inclusao) then 
                    dados_tb_selecao_w.ie_valido(nr_idx_w):=  'S';
                    ie_valido_anterior_w  :='S';
                    dados_tb_selecao_w.ds_observacao(nr_idx_w):=  'Profissional executante não está vinculado ao prestador executor';
                  elsif ((r_C05_w.dt_exclusao IS NOT NULL AND r_C05_w.dt_exclusao::text <> '') and r_C05_w.dt_atendimento > r_C05_w.dt_exclusao) then
                    dados_tb_selecao_w.ie_valido(nr_idx_w):=  'S';
                    ie_valido_anterior_w  :='S';
                    dados_tb_selecao_w.ds_observacao(nr_idx_w):=  'Profissional executante não está vinculado ao prestador executor';
                  end if;
                end if;

                nr_idx_w := nr_idx_w + 1;

                if (nr_idx_w = pls_util_cta_pck.qt_registro_transacao_w) then
                  CALL pls_tipos_ocor_pck.gerencia_selecao_validacao(  dados_tb_selecao_w.nr_seq_selecao, pls_util_cta_pck.clob_table_vazia_w,
                  'SEQ', dados_tb_selecao_w.ds_observacao, dados_tb_selecao_w.ie_valido, nm_usuario_p);
                  nr_idx_w := 0;
                  pls_tipos_ocor_pck.limpar_nested_tables(dados_tb_selecao_w);
                end if;

              end if;
              nr_seq_sel_anterior_w   := r_C05_w.nr_seq_selecao;

            end loop;
          else

            for r_C06_w in  C06(nr_id_transacao_p) loop
                
              if (nr_seq_sel_anterior_w <> r_C06_w.nr_seq_selecao or ie_valido_anterior_w = 'N') then
              
                ie_valido_anterior_w    := 'N';
                dados_tb_selecao_w.ie_valido(nr_idx_w)    := 'N';
                dados_tb_selecao_w.nr_seq_selecao(nr_idx_w) :=  r_C06_w.nr_seq_selecao;
                dados_tb_selecao_w.ds_observacao(nr_idx_w)  :=  '';

                if (r_C06_w.qt_prof_valido = 0) then
                  ie_valido_anterior_w  :='S';
                  dados_tb_selecao_w.ie_valido(nr_idx_w):=  'S';
                  dados_tb_selecao_w.ds_observacao(nr_idx_w):=  'Profissional executante não está vinculado ao prestador executor';

                else
                  if (r_C06_w.dt_atendimento < r_C06_w.dt_inclusao) then 
                    dados_tb_selecao_w.ie_valido(nr_idx_w):=  'S';
                    ie_valido_anterior_w  :='S';
                    dados_tb_selecao_w.ds_observacao(nr_idx_w):=  'Profissional executante não está vinculado ao prestador executor';
                  elsif ((r_C06_w.dt_exclusao IS NOT NULL AND r_C06_w.dt_exclusao::text <> '') and r_C06_w.dt_atendimento > r_C06_w.dt_exclusao) then
                    dados_tb_selecao_w.ie_valido(nr_idx_w):=  'S';
                    ie_valido_anterior_w  :='S';
                    dados_tb_selecao_w.ds_observacao(nr_idx_w):=  'Profissional executante não está vinculado ao prestador executor';
                  end if;
                end if;

                nr_idx_w := nr_idx_w + 1;

                if (nr_idx_w = pls_util_cta_pck.qt_registro_transacao_w) then
                  CALL pls_tipos_ocor_pck.gerencia_selecao_validacao(  dados_tb_selecao_w.nr_seq_selecao, pls_util_cta_pck.clob_table_vazia_w,
                  'SEQ', dados_tb_selecao_w.ds_observacao, dados_tb_selecao_w.ie_valido, nm_usuario_p);
                  nr_idx_w := 0;
                  pls_tipos_ocor_pck.limpar_nested_tables(dados_tb_selecao_w);
                end if;

              end if;
              nr_seq_sel_anterior_w   := r_C06_w.nr_seq_selecao;

            end loop;

          end if;

        end if;

      if (nr_idx_w > 0)  then
        CALL pls_tipos_ocor_pck.gerencia_selecao_validacao(  dados_tb_selecao_w.nr_seq_selecao, pls_util_cta_pck.clob_table_vazia_w,
              'SEQ', dados_tb_selecao_w.ds_observacao, dados_tb_selecao_w.ie_valido, nm_usuario_p);
      end if;
      exception
      when others then
        CALL pls_tipos_ocor_pck.trata_erro_sql_dinamico(dados_regra_p, sqlerrm, nr_id_transacao_p, nm_usuario_p);
      end;
        CALL pls_tipos_ocor_pck.atualiza_campo_valido('V', nr_id_transacao_p, null, dados_regra_p);
      end if;
  end loop;
end if;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_oc_cta_tratar_val_76 ( dados_regra_p pls_tipos_ocor_pck.dados_regra, nr_id_transacao_p pls_selecao_ocor_cta.nr_id_transacao%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;

