-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_aplicar_reaj_inscricao ( nr_seq_reajuste_p bigint, ie_opcao_p text, dt_aplicacao_p timestamp, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_inscricao_w		bigint;
tx_coparticipacao_w		double precision;
tx_reajuste_inscricao_w		double precision;
vl_inscricao_reajuste_w		double precision;
tx_inscricao_reajuste_w		double precision;
vl_base_w			double precision;
tx_base_w			double precision;
dt_reajuste_w			timestamp;
nr_seq_contrato_w		bigint;
nr_seq_plano_w			bigint;
qt_parcela_inicial_w		bigint;
qt_parcela_final_w		bigint;
vl_inscricao_w			double precision;
tx_inscricao_w			double precision;
ie_tipo_contratacao_w		varchar(2);
ie_grau_dependencia_w		varchar(2);
ie_acao_contrato_w		varchar(2);
nr_seq_regra_inscr_w		bigint;
nr_seq_intercambio_w		bigint;
nr_seq_reaj_inscricao_w		bigint;
-----------------------------------------------------------------------------
nr_seq_reajuste_princ_w		bigint;
nr_seq_regra_atual_ant_w	bigint;
ie_tipo_reajuste_w		varchar(10);
ie_tipo_lote_w			varchar(10);
TX_DEFLATOR_w			double precision;

C01 CURSOR FOR
	SELECT	c.nr_sequencia,
		a.tx_reajuste,
		c.nr_seq_plano,
		a.nr_sequencia
	from	pls_reajuste_inscricao	a,
		pls_lote_reaj_inscricao	b,
		pls_regra_inscricao	c
	where	a.nr_seq_lote		= b.nr_sequencia
	and	a.nr_seq_regra_inscricao = c.nr_sequencia
	and	b.nr_sequencia		= nr_seq_reajuste_p;

BEGIN

if (ie_opcao_p = 'L') then /* Liberar reajuste */
	update	pls_lote_reaj_inscricao
	set	dt_liberacao	= clock_timestamp()
	where	nr_sequencia	= nr_seq_reajuste_p;
elsif (ie_opcao_p = 'A') then /* Aplicar reajuste */
	select	dt_referencia,
		nr_seq_contrato,
		nr_seq_intercambio,
		nr_seq_reajuste
	into STRICT	dt_reajuste_w,
		nr_seq_contrato_w,
		nr_seq_intercambio_w,
		nr_seq_reajuste_princ_w
	from	pls_lote_reaj_inscricao
	where	nr_sequencia	= nr_seq_reajuste_p;

	select	ie_tipo_reajuste,
		coalesce(ie_tipo_lote,'A'),
		coalesce(TX_DEFLATOR,0)
	into STRICT	ie_tipo_reajuste_w,
		ie_tipo_lote_w,
		TX_DEFLATOR_w
	from	pls_reajuste
	where	nr_sequencia	= nr_seq_reajuste_princ_w;

	open C01;
	loop
	fetch C01 into
		nr_seq_inscricao_w,
		tx_reajuste_inscricao_w,
		nr_seq_plano_w,
		nr_seq_reaj_inscricao_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		vl_base_w		:= 0;
		vl_inscricao_reajuste_w	:= 0;
		tx_base_w		:= 0;
		tx_inscricao_reajuste_w	:= 0;

		select	qt_parcela_inicial,
			qt_parcela_final,
			vl_inscricao,
			tx_inscricao,
			ie_tipo_contratacao,
			ie_grau_dependencia,
			ie_acao_contrato
		into STRICT	qt_parcela_inicial_w,
			qt_parcela_final_w,
			vl_inscricao_w,
			tx_inscricao_w,
			ie_tipo_contratacao_w,
			ie_grau_dependencia_w,
			ie_acao_contrato_w
		from	pls_regra_inscricao
		where	nr_sequencia	= nr_seq_inscricao_w;

		/*aaschlote 03/11/2012 - Para quando for desfazer lotes de reajuste de inscrição, buscar os valores do lote anterior*/

		if	((ie_tipo_reajuste_w = 'I') and (ie_tipo_lote_w		= 'D') or (ie_tipo_reajuste_w = 'C') and (coalesce(tx_deflator_w,0) <> 0)) then

			select	max(b.NR_SEQ_REGRA_INSCRICAO)
			into STRICT	nr_seq_regra_atual_ant_w
			from	pls_reajuste_inscricao	b,
				pls_lote_reaj_inscricao	a
			where	b.NR_SEQ_LOTE		= a.nr_sequencia
			and	a.nr_seq_contrato	= nr_seq_contrato_w
			and	nr_seq_regra_gerada	= nr_seq_inscricao_w;

			if (NR_SEQ_REGRA_ATUAL_ant_w IS NOT NULL AND NR_SEQ_REGRA_ATUAL_ant_w::text <> '') then
				select	vl_inscricao,
					tx_inscricao
				into STRICT	vl_inscricao_reajuste_w,
					tx_inscricao_reajuste_w
				from	pls_regra_inscricao
				where	nr_sequencia	= NR_SEQ_REGRA_ATUAL_ant_w;
			end if;
		else
			vl_base_w		:= dividir_sem_round((vl_inscricao_w * tx_reajuste_inscricao_w)::numeric,100);
			vl_inscricao_reajuste_w	:= vl_inscricao_w + vl_base_w;

			tx_base_w		:= dividir_sem_round((tx_inscricao_w * tx_reajuste_inscricao_w)::numeric,100);
			tx_inscricao_reajuste_w	:= tx_inscricao_w + tx_base_w;
		end if;

		if (coalesce(nr_seq_plano_w,0) = 0) then /* Se for regra do produto, não pode inativar a regra */
			update	pls_regra_inscricao
			set	dt_fim_vigencia	= dt_aplicacao_p - 1
			where	nr_sequencia	= nr_seq_inscricao_w;
		end if;

		select	nextval('pls_regra_inscricao_seq')
		into STRICT	nr_seq_regra_inscr_w
		;

		insert	into	pls_regra_inscricao(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
				dt_inicio_vigencia, nr_seq_contrato, nr_seq_lote_reajuste,
				vl_inscricao, tx_inscricao, ie_tipo_contratacao, ie_acao_contrato,
				qt_parcela_inicial, qt_parcela_final, ie_grau_dependencia,
				nr_seq_intercambio)
		values (	nr_seq_regra_inscr_w,clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,
				dt_aplicacao_p, nr_seq_contrato_w, nr_seq_reajuste_p,
				vl_inscricao_reajuste_w, tx_inscricao_reajuste_w, ie_tipo_contratacao_w, ie_acao_contrato_w,
				qt_parcela_inicial_w, qt_parcela_final_w, ie_grau_dependencia_w,
				nr_seq_intercambio_w);

		update	pls_reajuste_inscricao
		set	nr_seq_regra_gerada	= nr_seq_regra_inscr_w
		where	nr_sequencia		= nr_seq_reaj_inscricao_w;
		end;
	end loop;
	close C01;

	update	pls_lote_reaj_inscricao
	set	dt_aplicacao	= dt_aplicacao_p
	where	nr_sequencia	= nr_seq_reajuste_p;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_aplicar_reaj_inscricao ( nr_seq_reajuste_p bigint, ie_opcao_p text, dt_aplicacao_p timestamp, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

