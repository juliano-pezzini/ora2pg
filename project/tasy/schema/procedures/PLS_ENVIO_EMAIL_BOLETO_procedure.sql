-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_envio_email_boleto (( nr_seq_lote_p pls_lote_mensalidade.nr_sequencia%type, nr_seq_mensalidade_p pls_mensalidade.nr_sequencia%type, nr_titulo_p titulo_receber.nr_titulo%type, ds_email_destino_p text, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, ds_assunto_p text, ds_email_remetente_p text, ds_conteudo_p text, ds_contato_p text, ie_somente_nao_enviados_p text, ds_lista_rel_adic_p text, nm_usuario_p usuario.nm_usuario%type, nr_seq_regra_p pls_mensagem_email.nr_sequencia%type default null) is cd_relatorio_w relatorio.cd_relatorio%type) RETURNS varchar AS $body$
DECLARE


ie_valido_w	varchar(1) := 'N';
ds_esquerda_w	varchar(255);
ds_direita_w 	varchar(255);
ie_ponto_w	bigint;
ds_email_w 	varchar(255);

BEGIN

ds_email_w := ds_email_p;

if (coalesce(length(trim(both ds_email_w)), 0) > 0) then
	if (ds_email_w like '%@%@%' or ds_email_w like '%..%' or  substr(ds_email_w, 1, 1) = '.' or substr(ds_email_w, length(ds_email_w), length(ds_email_w)) = '.') then
		ie_valido_w := 'N';
	else
		ds_esquerda_w := substr(ds_email_w, 1, position('@' in ds_email_w) -1);

		if (ds_esquerda_w IS NOT NULL AND ds_esquerda_w::text <> '') then		
			ds_direita_w	:= substr(ds_email_w, position('@' in ds_email_w) + 1,length(ds_email_w));	

			if (ds_direita_w IS NOT NULL AND ds_direita_w::text <> '') then
				if not(substr(ds_direita_w, 1, 1) = '.') then
					select	position('.' in ds_direita_w)
					into STRICT	ie_ponto_w
					;
						
					if (ie_ponto_w > 0)  then
						ie_valido_w	:= 'S';
					end if;							
				end if;
			end if;
		end if;
	end if;
end if;
	
return ie_valido_w;

end;

function buscar_conteudo(	nm_pagador_p		varchar2,
				dt_vencimeto_p		titulo_receber.dt_pagamento_previsto%type,
				vl_titulo_p		titulo_receber.vl_titulo%type,
				dt_referencia_p		pls_mensalidade.dt_referencia%type,
				cd_operadora_empresa_p	pls_contrato.cd_operadora_empresa%type)
 		    	return varchar2 is

ds_retorno_w	varchar2(4000);
			
begin

--Converte macros
ds_retorno_w := replace(ds_conteudo_p,'@PAGADOR',nm_pagador_p);
ds_retorno_w := replace(ds_retorno_w,'@Pagador',nm_pagador_p);
ds_retorno_w := replace(ds_retorno_w,'@DT_VENCIMENTO',to_char(dt_vencimeto_p,'DD/MM/YYYY'));
ds_retorno_w := replace(ds_retorno_w,'@VL_TITULO', campo_mascara_virgula(vl_titulo_p));
ds_retorno_w := replace(ds_retorno_w,'@COD_EMPRESA',cd_operadora_empresa_p);
ds_retorno_w := replace(ds_retorno_w,'@DT_REFERENCIA',to_char(dt_referencia_p,'DD/MM/YYYY'));

--Se nao tiver conteudo a mensagem
if (coalesce(trim(both ds_retorno_w)::text, '') = '') then
	ds_retorno_w := 'Segue anexo boleto referente a mensalidade do ' || wheb_mensagem_pck.get_texto(1130833) || ' ' || to_char(dt_referencia_p,'DD/MM/YYYY');
end if;	

return	ds_retorno_w;

end;

procedure enviar_email(	ds_email_p		varchar2,
				nr_seq_mensalidade_p	pls_mensalidade.nr_sequencia%type,
				nr_seq_pagador_p	pls_contrato_pagador.nr_sequencia%type,
				nr_titulo_p		titulo_receber.nr_titulo%type,
				ie_origem_p		varchar2) is

C01 CURSOR(	ds_emails_pc	varchar2) FOR
	SELECT	ds_valor_vchr2 ds_email
	from	table(pls_util_pck.converter_lista_valores(ds_emails_pc, ';'));

begin

for r_c01_w in C01(ds_email_p) loop
	begin
	ie_email_valido_w	:= validar_email(r_c01_w.ds_email);
	
	--Email
	select	nextval('pls_email_seq')	
	into STRICT	nr_seq_email_w
	;
	--Insere email			
	insert into pls_email(	nr_sequencia,
				nr_seq_mensalidade,
				cd_estabelecimento,
				nm_usuario_nrec,
				dt_atualizacao_nrec,
				nm_usuario,
				dt_atualizacao,
				ie_tipo_mensagem,
				ie_tipo_documento,
				ie_status,
				ie_origem,
				ds_remetente,
				ds_mensagem,
				ds_destinatario,
				ds_assunto,
				cd_prioridade,
				cd_pessoa_fisica,
				cd_cgc,
        nr_seq_pagador)
	values (			nr_seq_email_w,
				nr_seq_mensalidade_p,
				cd_estabelecimento_p,
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				1,	--Envio de boletos aos pagadores
				1,	--Boleto
				'P',	--Pendente
				ie_origem_p,
				ds_email_remetente_w,
				ds_conteudo_w,
				r_c01_w.ds_email,
				ds_assunto_p,
				cd_prioridade_w,
				pls_obter_dados_pagador(nr_seq_pagador_p,'CPFP'),
				pls_obter_dados_pagador(nr_seq_pagador_p,'CGC'),
        nr_seq_pagador_p);
	--Anexo
	select	nextval('pls_email_anexo_seq')
	into STRICT	nr_seq_anexo_w
	;
	--Insere anexo
	insert into pls_email_anexo(	nr_sequencia,
					nr_seq_email,
					nm_usuario,
					nm_usuario_nrec,
					dt_atualizacao,
					dt_atualizacao_nrec,
					cd_classif_relat,
					cd_relatorio,
					ds_arquivo,
					ie_tipo_anexo )
		values (			nr_seq_anexo_w,
					nr_seq_email_w,
					nm_usuario_p,
					nm_usuario_p,
					clock_timestamp(),
					clock_timestamp(),
					cd_classif_relat_w,
					cd_relatorio_w,
					'',
					'R'); 	--Relatorio

	--NR_TITULO
	parametros_w[1].ds_valor_parametro := nr_titulo_p;
	
	if (nr_seq_mensalidade_p IS NOT NULL AND nr_seq_mensalidade_p::text <> '') then
		--NR_SEQ_MENSALIDADE
		parametros_w[2].ds_valor_parametro := nr_seq_mensalidade_p;
	end if;
	
	for x in 1..parametros_w.count loop
		if (parametros_w[x](.ds_valor_parametro IS NOT NULL AND .ds_valor_parametro::text <> '')) then
			insert into pls_email_anexo_param(	
						nr_sequencia,
						nr_seq_anexo,
						nm_usuario,
						nm_usuario_nrec,
						dt_atualizacao,
						dt_atualizacao_nrec,				
						ds_valor_parametro,
						ie_tipo_parametro,
						nm_parametro )
			values (			nextval('pls_email_anexo_param_seq'),
						nr_seq_anexo_w,
						nm_usuario_p,
						nm_usuario_p,
						clock_timestamp(),
						clock_timestamp(),
						parametros_w[x].ds_valor_parametro,
						parametros_w[x].ie_tipo_parametro,
						parametros_w[x].nm_parametro);
		end if;
	end loop;	
	
	--Verifica se existe relatorios adicionais para colocar em anexo
	if (rel_adicional_w.count > 0) then
		--Varre os relatorios adicionais
		for z in rel_adicional_w.first..rel_adicional_w.last loop
			--Anexo
			select	nextval('pls_email_anexo_seq')
			into STRICT	nr_seq_anexo_w
			;
			--Insere anexo
			insert into pls_email_anexo(	
						nr_sequencia,
						nr_seq_email,
						nm_usuario,
						nm_usuario_nrec,
						dt_atualizacao,
						dt_atualizacao_nrec,
						cd_classif_relat,
						cd_relatorio,
						ds_arquivo,
						ie_tipo_anexo )
			values (			nr_seq_anexo_w,
						nr_seq_email_w,
						nm_usuario_p,
						nm_usuario_p,
						clock_timestamp(),
						clock_timestamp(),
						rel_adicional_w[z].cd_classif_relat, --Classificacao
						rel_adicional_w[z].cd_relatorio, --Codigo
						'',
						'R' --Relatorio
						);						
			--Parametros de geracao do relatorio
			for x in 1..parametros_w.count loop
				insert into pls_email_anexo_param(	
							nr_sequencia,
							nr_seq_anexo,
							nm_usuario,
							nm_usuario_nrec,
							dt_atualizacao,
							dt_atualizacao_nrec,				
							ds_valor_parametro,
							ie_tipo_parametro,
							nm_parametro )
				values (			nextval('pls_email_anexo_param_seq'),
							nr_seq_anexo_w,
							nm_usuario_p,
							nm_usuario_p,
							clock_timestamp(),
							clock_timestamp(),
							parametros_w[x].ds_valor_parametro,
							parametros_w[x].ie_tipo_parametro,
							parametros_w[x].nm_parametro);	
			end loop;
		end loop;
	end if;
	
	if (ie_email_valido_w = 'N') then
		CALL pls_alterar_status_email('ER', nr_seq_email_w, 'E-mail ' || lower(wheb_mensagem_pck.get_texto(1133975)), nm_usuario_p);
	end if;
	
	end;
end loop;

end;

begin
--Carrega vetor padrao do relatario

--NR_TITULO
parametros_w[1].ie_tipo_parametro := 'C';
parametros_w[1].nm_parametro	  := 'NR_TITULO';
--NR_SEQ_MENSALIDADE
parametros_w[2].ie_tipo_parametro  := 'C';
parametros_w[2].nm_parametro	   := 'NR_SEQ_MENSALIDADE';
---NR_SEQ_LOTE
parametros_w[3].ie_tipo_parametro  := 'C';
parametros_w[3].nm_parametro	   := 'NR_SEQ_LOTE';
parametros_w[3].ds_valor_parametro :=  '0';	

if (ds_email_remetente_p IS NOT NULL AND ds_email_remetente_p::text <> '') then
	ds_email_remetente_w := ds_email_remetente_p;
else
	ds_email_remetente_w := obter_valor_param_usuario(1205,41,obter_perfil_ativo,nm_usuario_p,cd_estabelecimento_p);
	
	if (coalesce(ds_email_remetente_w::text, '') = '') then
		select 	max(ds_email)
		into STRICT	ds_email_remetente_w
		from 	usuario
		where	nm_usuario = nm_usuario_p;
	end if;
end if;

if (nr_seq_lote_p IS NOT NULL AND nr_seq_lote_p::text <> '') then -- Mensalidade
	cd_relatorio_w	:= 0;

	if (nr_seq_regra_p IS NOT NULL AND nr_seq_regra_p::text <> '') then
		select	coalesce(max(b.cd_relatorio),0),
			max(b.cd_classif_relat)
		into STRICT	cd_relatorio_w,
			cd_classif_relat_w
		from	pls_mensagem_email	a,
			relatorio		b
		where	a.nr_seq_relatorio 	= b.nr_sequencia
		and	a.nr_sequencia	 	= nr_seq_regra_p;
	end if;	

	if (cd_relatorio_w = 0) then
		select	coalesce(max(b.cd_relatorio),0),
			max(b.cd_classif_relat)
		into STRICT	cd_relatorio_w,
			cd_classif_relat_w
		from	pls_parametros	a,
			relatorio	b
		where	a.nr_seq_relatorio 	= b.nr_sequencia
		and	a.cd_estabelecimento 	= cd_estabelecimento_p;
	end if;

	if (cd_relatorio_w = 0) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(38567);
	end if;

	--Origem : 1 - OPS - Mensalidade
	select	coalesce(max(cd_prioridade),5)
	into STRICT	cd_prioridade_w
	from	pls_email_parametros
	where	ie_origem 		= 1
	and	cd_estabelecimento 	= cd_estabelecimento_p
	and	ie_situacao 		= 'A';

	--Verificar se e necessario anexar relatarios adicionais
	if (ds_lista_rel_adic_p IS NOT NULL AND ds_lista_rel_adic_p::text <> '') then
		--Retorna em forma de table a lista de relatarios
		lista_nr_seq_rel_adic_w := obter_lista_string(ds_lista_rel_adic_p, ',');
		--Pega a classificacao dos relatorios
		for	i in lista_nr_seq_rel_adic_w.first..lista_nr_seq_rel_adic_w.last loop
			--Classificacao do relatorios
			select	max(cd_classif_relat),
				max(cd_relatorio)
			into STRICT	rel_adicional_w[i].cd_classif_relat,
				rel_adicional_w[i].cd_relatorio
			from	relatorio
			where	nr_sequencia = lista_nr_seq_rel_adic_w(i);
		end loop;
	end if;	
	
	--Filtra mensalidade ou pega o lote completo
	if ((nr_seq_mensalidade_p IS NOT NULL AND nr_seq_mensalidade_p::text <> '') and nr_seq_mensalidade_p > 0) then
		--Apenas mensalidade selecionada
		ds_restricao_w := 'and	'||ds_alias_mens_w||'.nr_seq_lote = :nr_seq_lote_pc '|| pls_util_pck.enter_w ||
				 'and	'||ds_alias_mens_w||'.nr_sequencia = :nr_seq_mensalidade_pc ';
		bind_variable_w := sql_pck.bind_variable(	':nr_seq_lote_pc', nr_seq_lote_p, bind_variable_w);
		bind_variable_w := sql_pck.bind_variable(	':nr_seq_mensalidade_pc', nr_seq_mensalidade_p, bind_variable_w);
	else
		--Lote completo
		ds_restricao_w := 'and	'||ds_alias_mens_w||'.nr_seq_lote = :nr_seq_lote_pc ';
		bind_variable_w := sql_pck.bind_variable(	':nr_seq_lote_pc', nr_seq_lote_p, bind_variable_w);
	end if;
	--Restinge a cobranca e data de liquidacao
	ds_restricao_w := ds_restricao_w || pls_util_pck.enter_w ||
				'and	nvl('|| ds_alias_cont_pag_w || '.ie_envia_cobranca,''A'')  in (''A'',''E'')'|| pls_util_pck.enter_w ||
				'and	'||ds_alias_mens_w||'.ie_cancelamento is null ';
				
	--Restringir para apenas registros que nao tenham e-mails enviados		
	if (coalesce(ie_somente_nao_enviados_p,'N') = 'S') then
		ds_restricao_w := ds_restricao_w || pls_util_pck.enter_w ||
				'and	pls_obter_se_email_enviad_mens('|| ds_alias_mens_w||'.nr_sequencia'||') = ''N'' ';
	end if;

	ds_select_w :=	'select	' || ds_alias_mens_w || '.nr_sequencia,'|| pls_util_pck.enter_w ||
			'	' || ds_alias_mens_w || '.nr_seq_pagador,' || pls_util_pck.enter_w ||
			'	' || ds_alias_tit_rec_w || '.nr_titulo,' || pls_util_pck.enter_w ||
			'	' || ds_alias_mens_w || '.dt_referencia,' || pls_util_pck.enter_w ||
			'	' || 'substr(obter_nome_pf_pj('||ds_alias_cont_pag_w || '.cd_pessoa_fisica, '|| ds_alias_cont_pag_w || '.cd_cgc),1,255) nm_pagador,' || pls_util_pck.enter_w ||
			'	' || 'substr(nvl('||ds_alias_cont_pag_w||'.ds_email,pls_obter_email_pagador_mens('||ds_alias_cont_pag_w||'.cd_pessoa_fisica, '||
				     ds_alias_cont_pag_w||'.cd_cgc, '||ds_alias_cont_pag_w||'.ie_endereco_boleto)),1,255) ds_email,'||pls_util_pck.enter_w ||
			'	' || ds_alias_tit_rec_w || '.dt_pagamento_previsto dt_vencimento,' || pls_util_pck.enter_w ||
			'	' || ds_alias_tit_rec_w || '.vl_titulo,' || pls_util_pck.enter_w ||
			'	' || ds_alias_contrato_w || '.cd_operadora_empresa cd_empresa ' || pls_util_pck.enter_w ||
			'from	pls_mensalidade '|| ds_alias_mens_w || ',' || pls_util_pck.enter_w ||
			'	pls_contrato_pagador '|| ds_alias_cont_pag_w || ',' || pls_util_pck.enter_w ||
			'	titulo_receber '|| ds_alias_tit_rec_w || ',' || pls_util_pck.enter_w ||
			'	pls_contrato '|| ds_alias_contrato_w || pls_util_pck.enter_w ||
			'where	'|| ds_alias_mens_w ||   '.nr_seq_pagador  = ' || ds_alias_cont_pag_w || '.nr_sequencia' || pls_util_pck.enter_w ||
			'and	'|| ds_alias_tit_rec_w ||  '.nr_seq_mensalidade = ' || ds_alias_mens_w || '.nr_sequencia' || pls_util_pck.enter_w ||
			'and	'|| ds_alias_cont_pag_w || '.nr_seq_contrato = ' || ds_alias_contrato_w || '.nr_sequencia' || pls_util_pck.enter_w ||
			ds_restricao_w || pls_util_pck.enter_w ||
			'order by a.nr_sequencia ';
		
	begin
	-- executa o comando sql com os respectivos binds
	bind_variable_w := sql_pck.executa_sql_cursor(	ds_select_w, bind_variable_w);

	loop
		fetch cursor_w bulk collect into 	tb_nr_seq_mensalidade_w,	tb_nr_seq_pagador_w,	tb_nr_titulo_w,	
							tb_dt_referencia_w,		tb_nm_pagador_w,	tb_ds_email_w,		
							tb_dt_vencimento_w,		tb_vl_titulo_w,		tb_cd_operadora_empresa_w
		limit pls_util_pck.qt_registro_transacao_w;
		exit when tb_nr_seq_mensalidade_w.count = 0;
			-- Se encontrou algum registro faz o insert
			if (tb_nr_seq_mensalidade_w.count > 0) then
				--Percorre os primeiros 500 registros do cursor
				for i in tb_nr_seq_mensalidade_w.first .. tb_nr_seq_mensalidade_w.last loop
					begin
					ds_conteudo_w := buscar_conteudo(tb_nm_pagador_w(i), tb_dt_vencimento_w(i), tb_vl_titulo_w(i),
									tb_dt_referencia_w(i), tb_cd_operadora_empresa_w(i));
									
					CALL enviar_email(tb_ds_email_w(i), tb_nr_seq_mensalidade_w(i), tb_nr_seq_pagador_w(i), tb_nr_titulo_w(i), 1);
					end;
				end loop;
				--Commita apos 500 registros
				commit;
			end if;
	end loop;
	close cursor_w;

	exception
	when others then
		if (cursor_w%isopen) then
			close cursor_w;
		end if;
		-- obter o callstack
		ds_log_w	:= substr(
					'Erro: ' || sqlerrm|| pls_util_pck.enter_w || pls_util_pck.enter_w ||
					'SQL: ' || pls_util_pck.enter_w ||
					ds_select_w || pls_util_pck.enter_w || pls_util_pck.enter_w ||
					'Stack:' || pls_util_pck.enter_w ||
					dbms_utility.format_call_stack || pls_util_pck.enter_w ||
					'Error Back Trace: ' || pls_util_pck.enter_w ||
					dbms_utility.format_error_backtrace, 1, 4000);
		CALL wheb_mensagem_pck.exibir_mensagem_abort(ds_log_w);
	end;
elsif (nr_titulo_p IS NOT NULL AND nr_titulo_p::text <> '') then -- Call center
	cd_relatorio_w		:= null;
	cd_operadora_empresa_w	:= null;
	
	select	a.nr_seq_pagador,
		a.dt_pagamento_previsto,
		a.vl_titulo,
		(select	max(x.dt_referencia)
		from	pls_mensalidade x
		where	x.nr_sequencia = a.nr_seq_mensalidade),
		substr(obter_nome_pf_pj(a.cd_pessoa_fisica, a.cd_cgc),1,255),
		CASE WHEN(select	count(1)			from	negociacao_cr_boleto x			where	x.nr_titulo = a.nr_titulo)=0 THEN  b.nr_seq_relatorio_boleto  ELSE b.nr_seq_rel_boleto_neg END ,
		b.ds_conta
	into STRICT	nr_seq_pagador_w,
		dt_vencimento_w,
		vl_titulo_w,
		dt_referencia_w,
		nm_pagador_w,
		nr_seq_relatorio_w,
		ds_conta_w
	FROM titulo_receber a
LEFT OUTER JOIN banco_estabelecimento_v b ON (a.nr_seq_conta_banco = b.nr_sequencia)
WHERE a.nr_titulo = nr_titulo_p;

	if (nr_seq_relatorio_w IS NOT NULL AND nr_seq_relatorio_w::text <> '') then
		select	cd_classif_relat,
			cd_relatorio
		into STRICT	cd_classif_relat_w,
			cd_relatorio_w
		from   	relatorio
		where  	nr_sequencia = nr_seq_relatorio_w;
	end if;
		
	if (coalesce(cd_relatorio_w::text, '') = '') then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(237523, 'DS_CONTA='||ds_conta_w);
	end if;

    cd_funcao_w := obter_funcao_ativa();

    if cd_funcao_w = 5512 then
        ie_origem_w := '12'; -- Ficha Financeira
    else
        ie_origem_w := '10'; -- Atendimento (Call Center)
    end if;

	--Origem : 10 - Atendimento (Call Center)
	select	coalesce(max(cd_prioridade),5)
	into STRICT	cd_prioridade_w
	from	pls_email_parametros
	where	ie_origem 		= ie_origem_w
	and	cd_estabelecimento 	= cd_estabelecimento_p
	and	ie_situacao 		= 'A';

	if (nr_seq_pagador_w IS NOT NULL AND nr_seq_pagador_w::text <> '') then
		select	substr(obter_nome_pf_pj(a.cd_pessoa_fisica, a.cd_cgc),1,255) nm_pagador,
			(select	max(x.cd_operadora_empresa)
			from	pls_contrato x
			where	x.nr_sequencia = a.nr_seq_contrato)
		into STRICT	nm_pagador_w,
			cd_operadora_empresa_w
		from	pls_contrato_pagador a
		where	a.nr_sequencia = nr_seq_pagador_w;
	end if;
	
	ds_conteudo_w := buscar_conteudo(nm_pagador_w, dt_vencimento_w, vl_titulo_w, dt_referencia_w, cd_operadora_empresa_w);
	
	CALL enviar_email(ds_email_destino_p, null, nr_seq_pagador_w, nr_titulo_p, ie_origem_w);
	
	if (ie_origem_w = '12') then
        CALL pls_gerar_hist_pag_email_ficha(	nr_titulo_p,
    	ds_email_destino_p,
        cd_estabelecimento_p,
        nm_usuario_p);
    end if;
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_envio_email_boleto (( nr_seq_lote_p pls_lote_mensalidade.nr_sequencia%type, nr_seq_mensalidade_p pls_mensalidade.nr_sequencia%type, nr_titulo_p titulo_receber.nr_titulo%type, ds_email_destino_p text, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, ds_assunto_p text, ds_email_remetente_p text, ds_conteudo_p text, ds_contato_p text, ie_somente_nao_enviados_p text, ds_lista_rel_adic_p text, nm_usuario_p usuario.nm_usuario%type, nr_seq_regra_p pls_mensagem_email.nr_sequencia%type default null) is cd_relatorio_w relatorio.cd_relatorio%type) FROM PUBLIC;

