-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE clean_patient_data ( CD_ESTABLISHMENT_P bigint, CD_PATIENT_ID_P text, CD_USER_ID_P text ) AS $body$
DECLARE


ie_can_delete_w                     varchar(5):= 'N';
cd_patient_id_w                     pessoa_fisica.CD_PESSOA_FISICA%TYPE;
ie_patient_already_deleted_w        varchar(5) := 'N';
ds_table_pks_w                      varchar(4000) := '';
ds_table_columns_w                  varchar(4000) := '';
query_w                             varchar(8000) := '';
qt_registros_w                      bigint;
attribute_value_w                   varchar(4000)  := '';
ds_update_columns_w                 varchar(4000) := '';
ds_error_message_w                  varchar(4000) := '';
ds_tables_not_cleaned_w             varchar(8000) := '';
n_                                  varchar(10) := CHR(13)||CHR(10);
ie_cleaned_w                        pessoa_fisica_deleted.IE_CLEANED%type;
nm_pessoa_fisica_w					pessoa_fisica.nm_pessoa_fisica%type;
nm_pessoa_fisica_sem_acento_w		pessoa_fisica.nm_pessoa_fisica_sem_acento%type;
nr_cpf_w							pessoa_fisica.nr_cpf%type;
nr_cert_nasc_w						pessoa_fisica.nr_cert_nasc%type;
nm_atributo_value_w                 varchar(4000)  := '';
nm_tabela_w							patient_deletion_attribute.nm_tabela%type;
nm_atributo_w						patient_deletion_attribute.nm_atributo%type;
ie_obrigatorio_w					tabela_atributo.ie_obrigatorio%type;
ie_tipo_atributo_w					tabela_atributo.ie_tipo_atributo%type;
ds_hash_w                			varchar(100);

c01 CURSOR FOR
SELECT 	b.nm_atributo,c.ie_obrigatorio,c.ie_tipo_atributo
from 	patient_deletion_table a,
        patient_deletion_attribute b,
        tabela_atributo c
where   a.nm_tabela = b.nm_tabela
and		b.nm_tabela   = c.nm_tabela
and     b.nm_atributo = c.nm_atributo
and     a.nm_tabela = 'PESSOA_FISICA';

c02 CURSOR FOR
SELECT 	b.nm_tabela,b.nm_atributo,c.ie_obrigatorio,c.ie_tipo_atributo
from 	patient_deletion_table a,
        patient_deletion_attribute b,
        tabela_atributo c
where   a.nm_tabela = b.nm_tabela
and		b.nm_tabela   = c.nm_tabela
and     b.nm_atributo = c.nm_atributo
and     a.nm_tabela != 'PESSOA_FISICA' 
and 	b.nm_atributo in ('NM_PESSOA_FISICA','NM_PESSOA_FISICA_SEM_ACENTO','NR_CPF','NR_CERT_NASC');

	

BEGIN
RAISE NOTICE 'PROCESSO INICIADO.  %', to_char(clock_timestamp(),'dd/MM/yyyy hh24:mi:ss');
ie_can_delete_w := user_Can_Delete_Patient(CD_USER_ID_P, CD_ESTABLISHMENT_P);

if (ie_can_delete_w = 'N') then
  /*Acesso negado, sem permissao para executar este comando.*/

  CALL WHEB_MENSAGEM_PCK.EXIBIR_MENSAGEM_ABORT(995943);
end if;

cd_patient_id_w := CD_PATIENT_ID_P;

select  CASE WHEN count(1)=0 THEN 'N'  ELSE 'Y' END  ie_deleted
INTO STRICT    ie_patient_already_deleted_w
from    pessoa_fisica_deleted
where   cd_pessoa_fisica = cd_patient_id_w;

if (ie_patient_already_deleted_w ='Y') then
  /*Este paciente ja teve seus dados excluidos.*/

  CALL WHEB_MENSAGEM_PCK.EXIBIR_MENSAGEM_ABORT(995942);
end if;


--- mascarar pessoa_fisica
select	nm_pessoa_fisica,
		nm_pessoa_fisica_sem_acento,
		nr_cpf,
		nr_cert_nasc
into STRICT	nm_pessoa_fisica_w,
		nm_pessoa_fisica_sem_acento_w,
		nr_cpf_w,
		nr_cert_nasc_w
from 	pessoa_fisica
where   cd_pessoa_fisica = cd_patient_id_w;


select get_md5_hash_value( upper(nm_pessoa_fisica) || dt_nascimento || upper(obter_nome_pessoa_fisica( cd_pessoa_mae ,'')) ) ds_patient_hash
into STRICT   ds_hash_w
from   pessoa_fisica
where  cd_pessoa_fisica = cd_patient_id_p;

ds_update_columns_w := '';

open C01;
loop
fetch C01 into
	nm_atributo_w,
	ie_obrigatorio_w,
	ie_tipo_atributo_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	
		attribute_value_w := '';
		if (ie_obrigatorio_w <> 'S') then
			attribute_value_w := 'null';
		elsif ie_tipo_atributo_w in ('LONG','VARCHAR2') then
			attribute_value_w := ''' ''';
		elsif (ie_tipo_atributo_w = 'LONG RAW' ) then
			attribute_value_w := 'utl_raw.cast_to_raw('' '')';
		elsif (ie_tipo_atributo_w = 'BLOB' ) then
			attribute_value_w := 'empty_blob()';
		elsif (ie_tipo_atributo_w = 'NUMBER' ) then
			attribute_value_w := '0';
		elsif ie_tipo_atributo_w in ('DATE','TIMESTAMP')  then
			attribute_value_w := 'sysdate';
		elsif (ie_tipo_atributo_w = 'CLOB' ) then
			attribute_value_w := 'empty_clob()';
		end if;
		
		if (nm_atributo_w = 'NM_PESSOA_FISICA') then
			attribute_value_w := 'wheb_mensagem_pck.get_texto(997394)';
		end if;

		if (attribute_value_w IS NOT NULL AND attribute_value_w::text <> '') then
			if (length(ds_update_columns_w) > 0 ) then
				ds_update_columns_w := ds_update_columns_w ||', ';
			end if;
			ds_update_columns_w := ds_update_columns_w || nm_atributo_w ||' = '|| attribute_value_w;
		end if;

	end;
end loop;
close C01;

if (length(ds_update_columns_w) > 0) then
	
	query_w :=  ' UPDATE PESSOA_FISICA'||
				' SET    '||ds_update_columns_w||
				' WHERE  cd_pessoa_fisica  = '''||cd_patient_id_w ||'''';

	CALL wheb_usuario_pck.set_ie_executar_trigger('N');
	begin
	  EXECUTE query_w;
	exception
	when others then
	  ds_error_message_w := 'CLEAN_PATIENT_DATA ERROR='||SQLERRM||n_||' SQL='|| query_w ||n_||' params= '||cd_patient_id_w;
	end;
	CALL wheb_usuario_pck.set_ie_executar_trigger('S');
	
	if (coalesce(ds_error_message_w::text, '') = '') then
		ie_cleaned_w := 'S';
	end if;

	begin
	CALL insert_pessoa_fisica_deleted(  CD_USER_ID_P, cd_patient_id_w, 'PESSOA_FISICA',ie_cleaned_w, substr(ds_error_message_w,1,2000) );
	exception
	when others then
		RAISE NOTICE 'CLEAN_PATIENT_DATA ERROR=% % SQL= insert_pessoa_fisica_deleted % params = (%,%, PESSOA_FISICA ,%,%) ', SQLERRM, n_, n_, CD_USER_ID_P, cd_patient_id_w, ie_cleaned_w, substr(ds_error_message_w,1,2000);
	end;

	if (ds_error_message_w IS NOT NULL AND ds_error_message_w::text <> '') then
		ds_tables_not_cleaned_w := ds_tables_not_cleaned_w || ' PESSOA_FISICA - ';
	end if;
end if;
---
--- others tables
open c02;
loop
fetch c02 into
	nm_tabela_w,
	nm_atributo_w,
	ie_obrigatorio_w,
	ie_tipo_atributo_w;
EXIT WHEN NOT FOUND; /* apply on c02 */
	begin
		attribute_value_w := '';
		ds_error_message_w := '';
		nm_atributo_value_w := '';
	
	
		if (ie_obrigatorio_w <> 'S') then
			attribute_value_w := 'null';
		elsif ie_tipo_atributo_w in ('LONG','VARCHAR2') then
			attribute_value_w := ''' ''';
		elsif (ie_tipo_atributo_w = 'LONG RAW' ) then
			attribute_value_w := 'utl_raw.cast_to_raw('' '')';
		elsif (ie_tipo_atributo_w = 'BLOB' ) then
			attribute_value_w := 'empty_blob()';
		elsif (ie_tipo_atributo_w = 'NUMBER' ) then
			attribute_value_w := '0';
		elsif ie_tipo_atributo_w in ('DATE','TIMESTAMP')  then
			attribute_value_w := 'sysdate';
		elsif (ie_tipo_atributo_w = 'CLOB' ) then
			attribute_value_w := 'empty_clob()';
		end if;
		
		if (nm_atributo_w = 'NM_PESSOA_FISICA') then
			query_w := 'select count(*) from ' || nm_tabela_w || ' where ' || nm_atributo_w || '= ''' ||nm_pessoa_fisica_w ||''' and rownum = 1';
			attribute_value_w := 'wheb_mensagem_pck.get_texto(997394)';
			nm_atributo_value_w := '''' || nm_pessoa_fisica_w || '''';
		elsif (nm_atributo_w = 'NM_PESSOA_FISICA_SEM_ACENTO') then
			query_w := 'select count(*) from ' || nm_tabela_w || ' where ' || nm_atributo_w || ' = ''' || nm_pessoa_fisica_sem_acento_w || ''' and rownum = 1';
			nm_atributo_value_w := '''' ||nm_pessoa_fisica_sem_acento_w || '''';
		elsif (nm_atributo_w = 'NR_CPF') then
			query_w := 'select count(*) from ' || nm_tabela_w || ' where ' || nm_atributo_w || ' = ''' || nr_cpf_w ||''' and rownum = 1';
			nm_atributo_value_w := ''''|| nr_cpf_w || '''';
		elsif (nm_atributo_w = 'NR_CERT_NASC') then
			query_w := 'select count(*) from ' || nm_tabela_w || ' where ' || nm_atributo_w || ' = ''' || nr_cert_nasc_w || ''' and rownum = 1';
			nm_atributo_value_w := ''''||nr_cert_nasc_w || '''';
		end if;
		
		begin

			EXECUTE query_w INTO STRICT qt_registros_w;
		
			if (qt_registros_w > 0) then
				CALL wheb_usuario_pck.set_ie_executar_trigger('N');
				
				query_w :=	'update ' 	|| nm_tabela_w  ||
							' set ' 	|| nm_atributo_w ||
							' = ' 		|| attribute_value_w ||
							' where ' 	|| nm_atributo_w || ' = ' || nm_atributo_value_w;
				
				begin
				  EXECUTE query_w;
				exception
				when others then
				  ds_error_message_w := 'CLEAN_PATIENT_DATA ERROR='||SQLERRM||n_||' SQL='||query_w ||n_||' params= '||cd_patient_id_w;
				end;
				
				CALL wheb_usuario_pck.set_ie_executar_trigger('S');
		
				if (coalesce(ds_error_message_w::text, '') = '') then
					ie_cleaned_w := 'S';
				end if;
		
				
				begin
					CALL insert_pessoa_fisica_deleted(  CD_USER_ID_P,cd_patient_id_w,nm_tabela_w,ie_cleaned_w,substr(ds_error_message_w,1,2000) );
				exception
				when others then
					RAISE NOTICE 'CLEAN_PATIENT_DATA ERROR=% % SQL= insert_pessoa_fisica_deleted % params = (%,%,%,%,%) ', SQLERRM, n_, n_, CD_USER_ID_P, cd_patient_id_w, nm_tabela_w, ie_cleaned_w, substr(ds_error_message_w,1,2000);
				end;
				
			end if;
		exception
		when others then
			
			ds_error_message_w := 'OTHERS TABLES ERROR='||SQLERRM||n_||' SQL='||query_w ||n_||' params= '||cd_patient_id_w;
		end;
		
		if (ds_error_message_w IS NOT NULL AND ds_error_message_w::text <> '') then
			ds_tables_not_cleaned_w := ds_tables_not_cleaned_w || nm_tabela_w || ' - ';
		end if;
		
	end;
end loop;
close c02;
---
--- gerar hash
    query_w :=	' INSERT INTO PESSOA_FISICA_EXC (  NR_SEQUENCIA, DT_ATUALIZACAO, NM_USUARIO, '||
				' DT_ATUALIZACAO_NREC, NM_USUARIO_NREC, DS_HASH, IE_SITUACAO ) '|| 
				' VALUES ( PESSOA_FISICA_EXC_SEQ.NextVal, SYSDATE, :NM_USUARIO, '||
				' SYSDATE, :NM_USUARIO,:DS_HASH, ''A'') ';

    EXECUTE query_w using CD_USER_ID_P, CD_USER_ID_P, ds_hash_w;
---
/*SEND_PATIENT_DELETION*/

CALL SEND_PATIENT_DELETION(cd_patient_id_w, CD_USER_ID_P, substr(ds_tables_not_cleaned_w,1,4000));
commit;
RAISE NOTICE 'PROCESSO CONCLUIDO.  %', to_char(clock_timestamp(),'dd/MM/yyyy hh24:mi:ss');

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE clean_patient_data ( CD_ESTABLISHMENT_P bigint, CD_PATIENT_ID_P text, CD_USER_ID_P text ) FROM PUBLIC;

