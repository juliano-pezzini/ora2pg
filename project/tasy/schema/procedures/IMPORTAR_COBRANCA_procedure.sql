-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE importar_cobranca ( nr_titulo_p bigint, ie_processo_p text, nm_usuario_p text, nr_seq_orgao_cobranca_p bigint) AS $body$
DECLARE


nr_titulo_w		bigint;
vl_titulo_w		double precision;
vl_saldo_titulo_w	double precision;
cd_pessoa_usuario_w	varchar(10);
nr_seq_cobrador_w	bigint;
cd_tipo_portador_w	integer;
cd_portador_w		bigint;
nr_sequencia_w		bigint;
nr_seq_processo_w	bigint;
cd_cgc_w		varchar(14);
cd_pessoa_fisica_w	varchar(10);
cd_estabelecimento_w	smallint;
nr_seq_est_proc_inicio_w	bigint;

/* totais processo */

vl_tot_original_w	double precision;
vl_tot_acobrar_w	double precision;
vl_tot_acrescimos_w	double precision;
vl_tot_perdas_w		double precision;


BEGIN

select	max(cd_pessoa_fisica)
into STRICT	cd_pessoa_usuario_w
from	usuario
where	nm_usuario	= nm_usuario_p;

select	max(nr_sequencia)
into STRICT	nr_seq_cobrador_w
from	cobrador
where	cd_pessoa_fisica	= cd_pessoa_usuario_w;

if (nr_titulo_p IS NOT NULL AND nr_titulo_p::text <> '') then
	select	max(nr_titulo),
		max(vl_titulo),
		max(vl_saldo_titulo),
		max(cd_tipo_portador),
		max(cd_portador),
		max(cd_pessoa_fisica),
		max(cd_cgc),
		max(cd_estabelecimento)
	into STRICT	nr_titulo_w,
		vl_titulo_w,
		vl_saldo_titulo_w,
		cd_tipo_portador_w,
		cd_portador_w,
		cd_pessoa_fisica_w,
		cd_cgc_w,
		cd_estabelecimento_w
	from	titulo_receber a
	where	nr_titulo	= nr_titulo_p
	and	not exists ( SELECT 1 from cobranca x where x.nr_titulo = a.nr_titulo and x.ie_status <> 'C');

	if (nr_titulo_w IS NOT NULL AND nr_titulo_w::text <> '') then

		nr_seq_processo_w	:= null;

		if (ie_processo_p = 'S') then
			select	max(nr_sequencia)
			into STRICT	nr_seq_processo_w
			from	processo_cobranca
			where	coalesce(cd_pessoa_fisica,cd_cgc)	= coalesce(cd_pessoa_fisica_w,cd_cgc_w);
			--and	dt_fim_processo is null;
			if (coalesce(nr_seq_processo_w::text, '') = '') then

				select	nextval('processo_cobranca_seq')
				into STRICT	nr_seq_processo_w
				;

				insert	into	processo_cobranca(nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					cd_estabelecimento,
					cd_pessoa_fisica,
					cd_cgc,
					dt_processo,
					nr_seq_estagio,
					ie_tipo_processo)
				values (nr_seq_processo_w,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					cd_estabelecimento_w,
					cd_pessoa_fisica_w,
					cd_cgc_w,
					null,--trunc(sysdate,'dd'),
					nr_seq_est_proc_inicio_w,
					null); --1
			end if;
		end if;

		select	nextval('cobranca_seq')
		into STRICT	nr_sequencia_w
		;

		insert	into	cobranca(nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			cd_estabelecimento,
			nr_titulo,
			ie_status,
			vl_original,
			vl_acobrar,
			dt_inclusao,
			dt_previsao_cobranca,
			nr_seq_cobrador,
			cd_tipo_portador,
			cd_portador,
			nr_seq_processo)
		values (nr_sequencia_w,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			cd_estabelecimento_w,
			nr_titulo_w,
			'P',
			vl_titulo_w,
			vl_saldo_titulo_w,
			trunc(clock_timestamp(),'dd'),
			trunc(clock_timestamp(),'dd'),
			nr_seq_cobrador_w,
			cd_tipo_portador_w,
			cd_portador_w,
			nr_seq_processo_w);

		if (nr_seq_orgao_cobranca_p IS NOT NULL AND nr_seq_orgao_cobranca_p::text <> '') then
			insert	into	cobranca_orgao(nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_cobranca,
				nr_seq_orgao,
				dt_inclusao)
			values (nextval('cobranca_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				nr_sequencia_w,
				nr_seq_orgao_cobranca_p,
				trunc(clock_timestamp(),'dd'));
		end if;

		if (nr_seq_processo_w IS NOT NULL AND nr_seq_processo_w::text <> '') then

			/* Atualizar totais */

			select	coalesce(sum(vl_original),0),
				coalesce(sum(vl_acobrar),0),
				coalesce(sum(vl_acobrar + obter_juros_multa_titulo(a.nr_titulo,clock_timestamp(),'R','A')),0),
				coalesce(sum(CASE WHEN b.ie_situacao='6' THEN a.vl_original  ELSE 0 END ),0)
			into STRICT	vl_tot_original_w,
				vl_tot_acobrar_w,
				vl_tot_acrescimos_w,
				vl_tot_perdas_w
			from	titulo_receber b,
				cobranca a
			where	a.nr_titulo		= b.nr_titulo
			and	a.nr_seq_processo	= nr_seq_processo_w;

			update	processo_cobranca
			set	vl_original		= vl_tot_original_w,
				vl_acobrar		= vl_tot_acobrar_w,
				vl_cobranca		= vl_tot_acrescimos_w,
				vl_perda		= vl_tot_perdas_w
			where	nr_sequencia		= nr_seq_processo_w;
		end if;
	end if;
end if;

--commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE importar_cobranca ( nr_titulo_p bigint, ie_processo_p text, nm_usuario_p text, nr_seq_orgao_cobranca_p bigint) FROM PUBLIC;

