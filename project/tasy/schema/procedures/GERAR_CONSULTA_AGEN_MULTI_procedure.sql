-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_consulta_agen_multi ( nr_seq_agenda_p bigint, nm_usuario_p text, qt_dias_retorno_p bigint, cd_estabelecimento_p bigint, ie_opcao_p text) AS $body$
DECLARE

 
ie_status_agenda_w		varchar(2);
qt_registro_w			bigint;
ie_prof_usuario_w		varchar(15);
ds_profissional_w		varchar(80);
ds_opcao_w			varchar(80);
ds_prof_usuario_w		varchar(80);
nr_seq_ordem_w			bigint;
ie_tipo_profissional_w		varchar(80);
cd_pessoa_fisica_w		varchar(10);
cd_pessoa_fisica_usuario_w	varchar(10);
ie_forma_agenda_w		varchar(15);


BEGIN 
/* Leitura do parâmetro 25 da agenda de serviços */
 
ie_forma_agenda_w := obter_param_usuario(866, 25, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_forma_agenda_w);
 
/* Pega o profissional e a ordem de atendimento */
 
select	obter_prof_agenda_multi(nr_seq_agenda_p, cd_estabelecimento_p, nm_usuario_p, 'O'), 
	obter_prof_agenda_multi(nr_seq_agenda_p, cd_estabelecimento_p, nm_usuario_p, 'P') 
into STRICT	nr_seq_ordem_w, 
	ie_tipo_profissional_w
;
 
/* Pega a descrição do profissional e a classe do usuário */
 
select	substr(obter_classe_prof_usuario(nm_usuario_p),1,15), 
	substr(obter_valor_dominio(1631, ie_tipo_profissional_w),1,80), 
	CASE WHEN ie_opcao_p='I' THEN lower(wheb_mensagem_pck.get_texto(799521)) WHEN ie_opcao_p='F' THEN lower(wheb_mensagem_pck.get_texto(799522))  ELSE '' END  
into STRICT	ie_prof_usuario_w, 
	ds_profissional_w, 
	ds_opcao_w
;
 
/* Pegar a descrição do profissional do usuário */
 
select	substr(obter_valor_dominio(1631, ie_prof_usuario_w),1,80) 
into STRICT	ds_prof_usuario_w
;
 
if (coalesce(ie_prof_usuario_w::text, '') = '') then 
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(262424);
end if;
 
if (ie_prof_usuario_w <> ie_tipo_profissional_w) then 
	CALL wheb_mensagem_pck.exibir_mensagem_abort(799529, 
					'DS_OPCAO='||ds_opcao_w|| 
					';DS_PROF_USUARIO='||DS_PROF_USUARIO_W|| 
					';DS_PROFISSIONAL='||DS_PROFISSIONAL_W);							
end if;
 
/* Obter pesssoa atual do agendamento */
 
select	max(cd_pessoa_fisica) 
into STRICT	cd_pessoa_fisica_w 
from	agenda_consulta_prof 
where	nr_seq_agenda	= nr_seq_agenda_p 
and	nr_seq_ordem	= nr_seq_ordem_w;
 
/* Obter pessoa física do usuário */
 
select	obter_pessoa_fisica_usuario(nm_usuario_p, 'C') 
into STRICT	cd_pessoa_fisica_usuario_w
;
 
 
if (ie_opcao_p = 'I') then 
 
	ie_status_agenda_w		:= 'O';
 
	if (coalesce(cd_pessoa_fisica_w::text, '') = '') then 
		cd_pessoa_fisica_w	:= cd_pessoa_fisica_usuario_w;
	elsif (cd_pessoa_fisica_w <> cd_pessoa_fisica_usuario_w) then 
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(262430);
	end if;
	 
	update	agenda_consulta_Prof 
	set	hr_inicio		= clock_timestamp(), 
		cd_pessoa_fisica	= cd_pessoa_fisica_w, 
		dt_atualizacao		= clock_timestamp(), 
		nm_usuario		= nm_usuario_p 
	where	nr_seq_agenda		= nr_seq_agenda_p 
	and	nr_seq_ordem		= nr_seq_ordem_w;
 
 
 
elsif (ie_opcao_p = 'F') then 
 
	if (cd_pessoa_fisica_w <> cd_pessoa_fisica_usuario_w) then 
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(262431);
	end if;
 
	update	agenda_consulta_Prof 
	set	hr_fim			= clock_timestamp(), 
		qt_dias_retorno		= qt_dias_retorno_p, 
		dt_atualizacao		= clock_timestamp(), 
		nm_usuario		= nm_usuario_p 
	where	nr_seq_agenda		= nr_seq_agenda_p 
	and	nr_seq_ordem		= nr_seq_ordem_w;
 
	select	count(*) 
	into STRICT	qt_registro_w 
	from	agenda_consulta_prof 
	where	nr_seq_agenda			= nr_seq_agenda_p 
	and	coalesce(hr_inicio::text, '') = '' 
	and	coalesce(hr_fim::text, '') = '' 
	and	coalesce(nr_seq_motivo_cancelamento::text, '') = '';
		 
	if (qt_registro_w > 0) then 
		ie_status_agenda_w	:= 'A';
	else 
		ie_status_agenda_w	:= 'E';
	end if;	
 
 
elsif (ie_opcao_p = 'C') then 
 
	select	ie_status_agenda 
	into STRICT	ie_status_agenda_w 
	from	agenda_consulta 
	where	nr_sequencia		= nr_seq_agenda_p;	
 
	select	count(*) 
	into STRICT	qt_registro_w 
	from	agenda_consulta_prof 
	where	nr_seq_agenda			= nr_seq_agenda_p 
	and	coalesce(hr_inicio::text, '') = '' 
	and	coalesce(hr_fim::text, '') = '' 
	and	coalesce(nr_seq_motivo_cancelamento::text, '') = '';
		 
	if (qt_registro_w = 0) then 
		ie_status_agenda_w	:= 'E';
	end if;	
 
end if;
 
update	agenda_consulta 
set	ie_status_agenda	= ie_status_agenda_w 
where	nr_sequencia		= nr_seq_agenda_p;	
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_consulta_agen_multi ( nr_seq_agenda_p bigint, nm_usuario_p text, qt_dias_retorno_p bigint, cd_estabelecimento_p bigint, ie_opcao_p text) FROM PUBLIC;

