-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE tx_gerar_atendimento_mensal ( dt_referencia_p timestamp, nm_usuario_p text) AS $body$
DECLARE

 
dt_mes_ant_w		timestamp;
nr_atend_novo_w		bigint;
dt_alta_w		timestamp;
nr_atend_ant_w		bigint;
cd_pessoa_fisica_w	varchar(10);
nm_pessoa_fisica_w	varchar(255);
cd_estabelecimento_w	integer;
cd_motivo_alta_w	smallint;
ds_erro_w		varchar(2000);
ds_mensagem_w		varchar(2000);
cd_perfil_atend_w	integer;
ds_enter_w			varchar(20)	:= chr(10)||chr(13);
ds_titulo_w		varchar(255);
nr_atend_mes_w		bigint;

c01 CURSOR FOR /* Pacientes que tem prescrições a ser geradas */
 
	SELECT	cd_pessoa_fisica, 
		substr(obter_nome_pf(cd_pessoa_fisica),1,80) 
	from	tx_receptor 
	where	tx_obter_se_paciente_ativo(nr_sequencia) = 'S';
					

BEGIN 
 
dt_mes_ant_w := pkg_date_utils.add_month(pkg_date_utils.start_of(dt_referencia_p,'MONTH', 0),-1,0);
 
open c01;
	loop 
	fetch c01 into 
		cd_pessoa_fisica_w, 
		nm_pessoa_fisica_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
	 
	ds_mensagem_w	:= null;
	 
	select 	coalesce(max(nr_atendimento),0), 
		max(dt_alta), 
		max(cd_estabelecimento) 
	into STRICT	nr_atend_ant_w, 
		dt_alta_w, 
		cd_estabelecimento_w 
	from 	atendimento_paciente 
	where	pkg_date_utils.start_of(dt_entrada,'MONTH',0) = pkg_date_utils.start_of(dt_mes_ant_w,'MONTH',0) 
	and	cd_pessoa_fisica = cd_pessoa_fisica_w;
 
	select 	coalesce(max(nr_atendimento),0) 
	into STRICT	nr_atend_mes_w 
	from 	atendimento_paciente 
	where	pkg_date_utils.start_of(dt_entrada,'MONTH',0) = pkg_date_utils.start_of(dt_referencia_p,'MONTH',0) 
	and	cd_pessoa_fisica = cd_pessoa_fisica_w;
	 
	select 	max(cd_perfil_atend) 
	into STRICT	cd_perfil_atend_w 
	from	tx_parametros 
	where	cd_estabelecimento = coalesce(cd_estabelecimento_w,cd_estabelecimento);
	 
	if (nr_atend_ant_w > 0) and (nr_atend_mes_w = 0) then 
	 
		select	coalesce(max(cd_motivo_alta_automatica),0) 
		into STRICT	cd_motivo_alta_w 
		from	tx_parametros 
		where	cd_estabelecimento = cd_estabelecimento_w;
	 
		if (coalesce(dt_alta_w::text, '') = '') and (cd_motivo_alta_w > 0 ) then 
			ds_erro_w := Gerar_Estornar_Alta(	nr_atend_ant_w, 'A', null, cd_motivo_alta_w, clock_timestamp(), nm_usuario_p, ds_erro_w, null, null, Wheb_mensagem_pck.get_texto(307867, 'DT_REFERENCIA_P='||to_char(dt_referencia_p,'dd/mm/yyyy'))); --'Gerado automáticamente no dia: ' || to_char(dt_referencia_p,'dd/mm/yyyy')); 
		
			if (ds_erro_w <> '') then 
				ds_mensagem_w := Wheb_mensagem_pck.get_texto(307868) || ' ' /*'Não é possível gerar alta para o atendimento '*/ || nr_atend_ant_w || ds_enter_w || 
						Wheb_mensagem_pck.get_texto(307870)|| ' ' /*'Motivo '*/ || ds_erro_w || ds_enter_w;
						 
			end if;
								 
		end if;
 
		nr_atend_novo_w := DUPLICAR_ATENDIMENTO(nr_atend_ant_w, nm_usuario_p, nr_atend_novo_w);
		nr_atend_mes_w	:= nr_atend_novo_w;
		 
		ds_titulo_w	:= Wheb_mensagem_pck.get_texto(307871) || ' '; --'Atendimento de Transplante gerado '; 
		ds_mensagem_w := ds_mensagem_w || Wheb_mensagem_pck.get_texto(307874) || ' ' /*'Atendimento Gerado '*/ || nr_atend_novo_w || ds_enter_w;
		 
 
	else 
		ds_titulo_w	:= Wheb_mensagem_pck.get_texto(307875) || ' '; --'Atendimento de Transplante não gerado '; 
		ds_mensagem_w	:= Wheb_mensagem_pck.get_texto(307876, 'DT_MES_ANT_W='||to_char(dt_mes_ant_w,'dd/mm/yyyy')); --'Atendimento no mês ' || to_char(dt_mes_ant_w,'dd/mm/yyyy') || ' não encontrado.'; 
	end if;
 
		 
	if (coalesce(nr_atend_mes_w,0) > 0) then 
		 
		update 	prescr_medica 
		set 	nr_atendimento = nr_atend_mes_w 
		where 	coalesce(nr_atendimento::text, '') = '' 
		and	cd_pessoa_fisica = cd_pessoa_fisica_w 
		and	pkg_date_utils.start_of(dt_prescricao,'MONTH',0) = pkg_date_utils.start_of(dt_mes_ant_w,'MONTH',0);
 
	end if;
	 
	 
 
	if (ds_mensagem_w IS NOT NULL AND ds_mensagem_w::text <> '') and (coalesce(cd_perfil_atend_w,0) > 0) then 
		 
		insert into comunic_interna( 
			dt_comunicado, 
			ds_titulo, 
			ds_comunicado, 
			nm_usuario, 
			dt_atualizacao, 
			ie_geral, 
			nm_usuario_destino, 
			ds_perfil_adicional, 
			nr_sequencia, 
			ie_gerencial, 
			dt_liberacao, 
			cd_estab_destino 
		) values ( 
			clock_timestamp(), 
			ds_titulo_w ||cd_pessoa_fisica_w||' - '||nm_pessoa_fisica_w, 
			ds_mensagem_w, 
			nm_usuario_p, 
			clock_timestamp(), 
			'N', 
			'', 
			cd_perfil_atend_w ||', ', 
			nextval('comunic_interna_seq'), 
			'N', 
			clock_timestamp(), 
			cd_estabelecimento_w 
		);
 
 
	end if;
	end loop;
close c01;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE tx_gerar_atendimento_mensal ( dt_referencia_p timestamp, nm_usuario_p text) FROM PUBLIC;

