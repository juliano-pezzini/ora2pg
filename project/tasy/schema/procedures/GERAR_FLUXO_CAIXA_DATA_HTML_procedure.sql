-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_fluxo_caixa_data_html ( nr_seq_lote_fluxo_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, classifi_fluxo_p text, ie_periodo_p text, dt_inicio_p timestamp, dt_final_p timestamp) AS $body$
DECLARE


/*Criada a partir da procedure GERAR_FLUXO_CAIXA_LOTE_DATA*/

subtype varchar_1 is varchar(1);
subtype number_2 is smallint;

cd_conta_financ_w       fluxo_caixa_item.cd_conta_financ%type;
dt_referencia_w         fluxo_caixa_item.dt_referencia%type;
vl_fluxo_w              fluxo_caixa_item.vl_fluxo%type;
ie_nivel_w              number_2;
ie_integracao_w         fluxo_caixa_item.ie_integracao%type;
nr_seq_fluxo_data_w     fluxo_caixa_data.nr_sequencia%type;
cd_moeda_w              fluxo_caixa_filtro.cd_moeda%type;
cd_empresa_w            fluxo_caixa_filtro.cd_empresa%type;
ie_origem_w             varchar_1 := 'C';

c01 CURSOR FOR
SELECT	distinct a.cd_conta_financ
from	fluxo_caixa_item a
where	a.dt_referencia	between dt_inicio_p and dt_final_p;

C02 CURSOR FOR
SELECT	a.dt_referencia,
		a.ie_integracao,
        sum(a.vl_fluxo)
from	fluxo_caixa_item a
where   a.cd_conta_financ = cd_conta_financ_w
and a.vl_fluxo <> 0
and a.dt_referencia	between dt_inicio_p and dt_final_p
group by	a.dt_referencia, a.ie_integracao;


BEGIN

select	max(cd_moeda),
        max(cd_empresa)
into STRICT	cd_moeda_w,
        cd_empresa_w
from 	fluxo_caixa_filtro
where	nm_usuario = nm_usuario_p;

open	c01;
loop
fetch	c01 into
	cd_conta_financ_w;
EXIT WHEN NOT FOUND; /* apply on c01 */

	select	substr(obter_nivel_conta_financ(cd_conta_financ_w),1,1)
	into STRICT	ie_nivel_w
	;

	open	C02;
	loop
	fetch	C02 into
		dt_referencia_w,
		ie_integracao_w,
		vl_fluxo_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin

		select	nextval('fluxo_caixa_data_seq')
		into STRICT	nr_seq_fluxo_data_w
		;

		if (ie_periodo_p = 'M') then
			dt_referencia_w := pkg_date_utils.start_of(pkg_date_utils.end_of(dt_referencia_w,'MONTH',0), 'dd', 0);
			ie_origem_w	:= 'X';
		end if;

        insert	into fluxo_caixa(cd_estabelecimento,
            dt_referencia,
            cd_conta_financ,
            ie_classif_fluxo,
            dt_atualizacao,
            nm_usuario,
            vl_fluxo,
            ie_origem,
            ie_periodo,
            ie_integracao,
            cd_empresa,
            ie_contrato,
            cd_moeda)
        values (cd_estabelecimento_p,
            dt_referencia_w,
            cd_conta_financ_w,
            classifi_fluxo_p,
            clock_timestamp(),
            nm_usuario_p,
            coalesce(vl_fluxo_w,0),
            ie_origem_w,
            ie_periodo_p,
            ie_integracao_w,
            cd_empresa_w,
            'N',
            cd_moeda_w);

        exception
            when unique_violation then
                update	fluxo_caixa
                set	vl_fluxo		= vl_fluxo + coalesce(vl_fluxo_w,0)
                where	cd_estabelecimento	= cd_estabelecimento_p
                and	cd_conta_financ		= cd_conta_financ_w
                and	dt_referencia		= dt_referencia_w
                and	ie_periodo		= ie_periodo_p
                and	ie_classif_fluxo	= classifi_fluxo_p
                and	ie_integracao		= ie_integracao_w;
            when others then
                CALL wheb_mensagem_pck.exibir_mensagem_abort(176731,'CONTA_FINANC_W=' || cd_conta_financ_w || ';' || 'SQLERRM=' || sqlerrm);

		update	fluxo_caixa_item
		set	nr_seq_fluxo_data	= nr_seq_fluxo_data_w
		where	dt_referencia		= dt_referencia_w
		and	nr_seq_lote_fluxo	= nr_seq_lote_fluxo_p;

		end;
	end	loop;
	close	C02;

end	loop;
close	c01;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_fluxo_caixa_data_html ( nr_seq_lote_fluxo_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, classifi_fluxo_p text, ie_periodo_p text, dt_inicio_p timestamp, dt_final_p timestamp) FROM PUBLIC;

