-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE rep_copia_procedimento ( nr_prescricao_orig_p bigint, nr_prescricao_p bigint, nr_seq_regra_p bigint, dt_prescricao_p timestamp, dt_procedimento_p timestamp, ds_ind_clinica_p text, cd_perfil_p bigint, cd_prescritor_p text, cd_setor_prescr_p bigint, ie_banco_sangue_p text, ie_procedimento_p text, ie_exame_p text, nr_seq_bco_p bigint, nr_seq_material_p bigint, nm_usuario_p text) AS $body$
DECLARE


cd_especialidade_w			varchar(50);
nr_sequencia_w				integer;
nr_seq_proc_ant_w			bigint;
cd_setor_atendimento_w		bigint;
nr_agrupamento_w			integer;
ie_executar_leito_w			varchar(1);
varie_verifica_setor_w		varchar(1);
ie_amostra_w				varchar(1);
cd_procedimento_w			bigint;
cd_estabelecimento_w		bigint;
qt_procedimento_w			double precision;
ds_horarios_w				varchar(2000);
ds_observacao_w				varchar(2000);
ds_observacao_enf_w			varchar(2000);
cd_motivo_baixa_w			smallint;
dt_prescricao_w				timestamp;
dt_validade_prescr_w		timestamp;
nr_atendimento_w			bigint;
hr_setor_w					varchar(10);
dt_baixa_w					timestamp;
cd_procedimento_aih_w		varchar(15);
cd_intervalo_param_w		varchar(7);
cd_intervalo_proc_agora_w	varchar(7);
ie_origem_proced_w			bigint;
cd_intervalo_w				varchar(7);
ie_urgencia_w				varchar(1);
ie_regra_medic_w			varchar(15);
dt_emissao_setor_atend_w 	timestamp;
ds_dado_clinico_w			varchar(2000);
dt_prev_exec_w				timestamp;
dt_prev_exec_ww				timestamp;
dt_prev_exec2_ww			timestamp;
ie_suspenso_w				varchar(1);
cd_material_exame_w			varchar(20);
nr_seq_exame_w				bigint;
ds_material_especial_w		varchar(255);
ie_status_atend_w			smallint;
ie_origem_inf_w				varchar(1);
ie_se_necessario_w			varchar(1);
ie_acm_w					varchar(1);
nr_ocorrencia_w				double precision;
nr_seq_proc_interno_w		bigint;
qt_peca_ap_w				smallint;
ds_qualidade_peca_ap_w		varchar(2000);
ds_diag_provavel_ap_w		varchar(255);
ds_exame_anterior_ap_w		varchar(255);
nr_seq_derivado_w			bigint;
nr_seq_exame_sangue_w		bigint;
nr_seq_solic_sangue_w		bigint;
cd_unid_med_sangue_w		varchar(5);
cd_pessoa_coleta_w			varchar(10);
dt_coleta_w					timestamp;
dt_prev_execucao_ww			timestamp;
ie_avisar_result_w			varchar(1);
qt_vol_hemocomp_w			bigint;
nr_seq_prot_glic_w			bigint;
ie_respiracao_w				varchar(15);
cd_mod_vent_w				varchar(15);
ie_disp_resp_esp_w			varchar(15);
qt_fluxo_oxigenio_w			double precision;
ds_rotina_w					varchar(80);
ie_autorizacao_w			varchar(3);
ie_lado_w					varchar(1);
nr_seq_topografia_w			bigint;
nr_seq_proc_w				bigint;
nr_seq_interno_w			bigint;
ie_copiar_w					varchar(10);
ie_regra_geral_w			varchar(10);
nr_seq_regra_w				bigint;
nr_seq_proc_interno_aux_w	bigint;
cd_intervalo_aux_w			varchar(50);
ie_proced_agora_w			varchar(50);
ie_regra_prim_hor_proc_w	varchar(50);
dt_validade_origem_w		timestamp;
dt_validade_nova_w			timestamp;
hr_prim_horario_proc_w		varchar(10);
cd_intervalo_proc_w			varchar(50);
hr_inicio_setor_w			varchar(50);
dt_prev_execucao_w			timestamp;
ie_situacao_w				varchar(50);
nr_prescricoes_w			varchar(255);
dt_inicio_prescr_www		timestamp;
dt_inicio_prescr_ww			timestamp;
dt_inicio_prescr_w			timestamp;
dt_primeiro_horario_w		timestamp;
dt_prescricao_www			timestamp;
nr_horas_validade_w			bigint;
qt_hora_intervalo_w			smallint;
qt_min_intervalo_w			integer;
nr_seq_proc_int_w			bigint;
nr_intervalo_ww				bigint;
nr_intervalo_w				bigint;
ds_horarios_ww				varchar(2000);
ds_horarios2_w				varchar(2000);
ds_erro_w					varchar(2000);
ie_setor_paciente_w			varchar(07);
ie_forma_exame_w			varchar(1);
nr_seq_bco_w				bigint;
ie_restring_interv_lib_w	varchar(1);
ds_horarios_aux_w			varchar(2000);
ie_regra_horarios_w			varchar(15);
dt_horario_w				timestamp;
qt_operacao_w				double precision;
ie_operacao_w				varchar(15);
ie_reordenar_w				varchar(1);
ds_justificativa_w			varchar(4000);
ie_copiar_justificativa_w 	varchar(1) := 'N';
cont_peca_w					bigint;
ie_permite_interv_agora_w	varchar(1);
ie_relancar_assoc_proc_w	varchar(1);
ie_minuto_w					varchar(1);
cd_setor_coleta_w			prescr_procedimento.cd_setor_coleta%type;
ie_kit_automatico_w			varchar(10);
nr_seq_rotina_w				prescr_procedimento.nr_seq_rotina%type;

c01 CURSOR FOR
SELECT	nr_sequencia,
		coalesce(nr_agrupamento,1),
		ie_executar_leito,
		'N',
		cd_procedimento,
		qt_procedimento,
		ds_horarios,
		ds_observacao,
		ds_observacao_enf,
		0,
		null,
		null,
		ie_origem_proced,
		cd_intervalo,
		'N',
		CASE WHEN VarIe_verifica_setor_w='N' THEN  cd_setor_atendimento  ELSE coalesce(obter_setor_atend_proc(cd_estabelecimento_w,a.cd_procedimento,a.ie_origem_proced,null,cd_setor_atendimento,null,a.nr_seq_proc_interno, nr_atendimento_w),cd_setor_atendimento) END ,
		null,
		coalesce(substr(ds_ind_clinica_p,1,255),ds_dado_clinico),
		obter_data_prev_exec(dt_prescricao_p,dt_procedimento_p,cd_setor_atendimento, nr_prescricao_p,'A'),
		a.dt_prev_execucao,
		'N',
		cd_material_exame,
		nr_seq_exame,
		ds_material_especial,
		5,
		ie_origem_inf,
		coalesce(ie_se_necessario,'N'),
		coalesce(ie_acm,'N'),
		nr_ocorrencia,
		nr_seq_proc_interno,
		qt_peca_ap,
		ds_qualidade_peca_ap,
		ds_diag_provavel_ap,
		ds_exame_anterior_ap,
		nr_seq_derivado,
		nr_seq_exame_sangue,
		CASE WHEN coalesce(nr_seq_solic_sangue::text, '') = '' THEN null  ELSE nr_seq_bco_w END ,
		cd_unid_med_sangue,
		cd_pessoa_coleta,
		null,
		'N',
		qt_vol_hemocomp,
		nr_seq_prot_glic,
		ie_respiracao,
		cd_mod_vent,
		ie_disp_resp_esp,
		qt_fluxo_oxigenio,
		ds_rotina,
		a.qt_hora_intervalo,
		a.qt_min_intervalo,
		'L',
		ie_lado,
		nr_seq_topografia,
		ie_forma_exame,
		ds_justificativa,
		a.cd_setor_coleta,
		a.nr_seq_rotina
from	Prescr_Procedimento a
where	coalesce(obter_dados_exame_lab_rep(cd_perfil_p, cd_especialidade_w, cd_setor_prescr_p, nr_seq_exame, cd_estabelecimento_w, 'C'), 'S') = 'S'
and		consiste_copia_prescr_rotina(a.nr_seq_proc_interno, a.cd_procedimento, a.ie_origem_proced, a.nr_seq_exame, 'S', 'S') = 'S'
and		consiste_se_copia_proc_int(a.nr_seq_proc_interno) = 'S'
and		coalesce(a.ie_em_protocolo_vanco,'N') = 'N'
and		((ie_banco_sangue_p = 'S') or (coalesce(nr_seq_solic_sangue::text, '') = ''))
and		ie_suspenso	<> 'S'
and		ie_origem_inf <> 'L'
and		coalesce(nr_seq_origem::text, '') = ''
and		nr_prescricao	= nr_prescricao_orig_p
and		substr(Obter_Situacao_Proced_Prescr(cd_procedimento, ie_origem_proced, nr_seq_proc_interno),1,1) = 'A'
and             obter_se_exame_solicitado(nr_seq_exame) = 'S';

c02 CURSOR FOR
SELECT	a.ie_copiar,
		a.ie_regra_geral,
		a.nr_sequencia,
		coalesce(nr_seq_proc_interno,0) nr_seq_proc_interno,
		coalesce(cd_intervalo,'AAAAAAAAAA') cd_intervalo,
		a.ie_proced_agora,
		coalesce(a.ie_copiar_justificativa, 'N') ie_copiar_justificativa
from	rep_regra_copia_crit a
where	coalesce(a.nr_seq_proc_interno,coalesce(nr_seq_proc_interno_w,0))	= coalesce(nr_seq_proc_interno_w,0)
and		coalesce(a.nr_seq_exame,coalesce(nr_seq_exame_w,0))	= coalesce(nr_seq_exame_w,0)
and		((a.cd_intervalo		= cd_intervalo_w) or (coalesce(a.cd_intervalo::text, '') = ''))
and		((a.nr_seq_regra	= nr_seq_regra_p) or (coalesce(nr_seq_regra_p,0) = 0))
and		a.ie_tipo_item	= 'PRO'
order by	nr_seq_proc_interno,
			cd_intervalo,
			ie_agora;

c03 CURSOR FOR
SELECT	ie_regra_prim_hor_proc,
	    CASE WHEN ie_regra_geral_w='H' THEN  ie_regra_horarios END ,
		coalesce(ie_reordenar, 'S')
from	rep_regra_copia_hor
where	nr_seq_regra_copia	= nr_seq_regra_w;

c04 CURSOR FOR
SELECT	dt_horario
from	prescr_proc_hor
where	1 = 1
and		coalesce(ie_situacao,'A')	= 'A'
and		coalesce(ie_horario_especial,'N') = 'N'
--and	dt_suspensao is null
and		coalesce(ie_dose_especial,'N') <> 'S'
and		nr_seq_procedimento	= nr_seq_proc_ant_w
and		nr_prescricao	= nr_prescricao_orig_p
order by dt_horario;

c06 CURSOR FOR
SELECT	a.nr_sequencia,
		a.cd_intervalo,
		a.dt_prev_execucao,
		a.cd_procedimento,
		a.ie_origem_proced,
		a.ds_horarios,
		coalesce(b.ie_situacao,'A'),
		a.nr_seq_exame,
		c.dt_inicio_prescr,
		c.nr_horas_validade,
		a.qt_hora_intervalo,
		a.qt_min_intervalo,
		a.nr_seq_proc_interno
FROM prescr_medica c, prescr_procedimento a
LEFT OUTER JOIN intervalo_prescricao b ON (a.cd_intervalo = b.cd_intervalo)
WHERE (obter_se_exibe_proced(a.nr_prescricao,a.nr_sequencia,a.ie_tipo_proced,'O') = 'S' or
		((Obter_se_exibe_proced(a.nr_prescricao,a.nr_sequencia,a.ie_tipo_proced,'BS')= 'S') or (Obter_se_exibe_proced(a.nr_prescricao,a.nr_sequencia,a.ie_tipo_proced,'AT')= 'S'))) and a.nr_seq_interno = nr_seq_interno_w  and c.nr_prescricao	= a.nr_prescricao and c.nr_prescricao	= nr_prescricao_p;


BEGIN

select	max(cd_estabelecimento),
		max(nr_atendimento),
		max(cd_setor_atendimento),
		max(dt_inicio_prescr),
		max(dt_validade_prescr),
		max(nr_horas_validade),
		max(dt_prescricao)
into STRICT	cd_estabelecimento_w,
		nr_atendimento_w,
		cd_setor_atendimento_w,
		dt_inicio_prescr_w,
		dt_validade_prescr_w,
		nr_horas_validade_w,
		dt_prescricao_www
from	prescr_medica
where	nr_prescricao	= nr_prescricao_p;

if (nr_seq_bco_p IS NOT NULL AND nr_seq_bco_p::text <> '') then
	select	max(nr_sequencia)
	into STRICT	nr_seq_bco_w
	from	prescr_solic_bco_sangue
	where	nr_prescricao	= nr_prescricao_p
	and	nr_sequencia	= nr_seq_bco_p;
	
	if (coalesce(nr_seq_bco_w::text, '') = '') then
		select	max(nr_sequencia)
		into STRICT	nr_seq_bco_w
		from	prescr_solic_bco_sangue
		where	nr_prescricao	= nr_prescricao_p;
	end if;
end if;

select	max(to_char(coalesce(hr_inicio_prescricao,clock_timestamp()),'hh24:mi'))
into STRICT	hr_inicio_setor_w
from	setor_atendimento
where	cd_setor_atendimento = cd_setor_atendimento_w;

begin
dt_prescricao_w	:= to_date(to_char(clock_timestamp(),'dd/mm/yyyy ') || hr_inicio_setor_w || ':00','dd/mm/yyyy hh24:mi:ss');
exception when others then
dt_prescricao_w	:= clock_timestamp();
end;

cd_intervalo_param_w := Obter_Param_Usuario(924, 35, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, cd_intervalo_param_w);
ie_regra_medic_w := Obter_Param_Usuario(924, 259, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_regra_medic_w);
ie_permite_interv_agora_w := Obter_Param_Usuario(924, 548, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_permite_interv_agora_w);
VarIe_verifica_setor_w := Obter_Param_Usuario(924, 718, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, VarIe_verifica_setor_w);
ie_restring_interv_lib_w := Obter_Param_Usuario(924, 1120, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_restring_interv_lib_w);
ie_relancar_assoc_proc_w := Obter_Param_Usuario(924, 603, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_relancar_assoc_proc_w);
ie_kit_automatico_w := Obter_Param_Usuario(924, 810, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_kit_automatico_w);

select	max(obter_especialidade_medico(cd_prescritor_p, 'C'))
into STRICT	cd_especialidade_w
;

select	coalesce(max(nr_sequencia),0)
into STRICT	nr_seq_proc_w
from	prescr_Procedimento
where	nr_prescricao = nr_prescricao_p;

open C01;
loop
fetch C01 into
	nr_sequencia_w,
	nr_agrupamento_w,
	ie_executar_leito_w,
	ie_amostra_w,
	cd_procedimento_w,
	qt_procedimento_w,
	ds_horarios_w,
	ds_observacao_w,
	ds_observacao_enf_w,
	cd_motivo_baixa_w,
	dt_baixa_w,
	cd_procedimento_aih_w,
	ie_origem_proced_w,
	cd_intervalo_w,
	ie_urgencia_w,
	cd_setor_atendimento_w,
	dt_emissao_setor_atend_w,
	ds_dado_clinico_w,
	dt_prev_exec_w,
	dt_prev_exec_ww,
	ie_suspenso_w,
	cd_material_exame_w,
	nr_seq_exame_w,
	ds_material_especial_w,
	ie_status_atend_w,
	ie_origem_inf_w,
	ie_se_necessario_w,
	ie_acm_w,
	nr_ocorrencia_w,
	nr_seq_proc_interno_w,
	qt_peca_ap_w,
	ds_qualidade_peca_ap_w,
	ds_diag_provavel_ap_w,
	ds_exame_anterior_ap_w,
	nr_seq_derivado_w,
	nr_seq_exame_sangue_w,
	nr_seq_solic_sangue_w,
	cd_unid_med_sangue_w,
	cd_pessoa_coleta_w,
	dt_coleta_w,
	ie_avisar_result_w,
	qt_vol_hemocomp_w,
	nr_seq_prot_glic_w,
	ie_respiracao_w,
	cd_mod_vent_w,
	ie_disp_resp_esp_w,
	qt_fluxo_oxigenio_w,
	ds_rotina_w,
	qt_hora_intervalo_w,
	qt_min_intervalo_w,
	ie_autorizacao_w,
	ie_lado_w,
	nr_seq_topografia_w,
	ie_forma_exame_w,
	ds_justificativa_w,
	cd_setor_coleta_w,
	nr_seq_rotina_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	
	open C02;
	loop
	fetch C02 into	
		ie_copiar_w,
		ie_regra_geral_w,
		nr_seq_regra_w,
		nr_seq_proc_interno_aux_w,
		cd_intervalo_aux_w,
		ie_proced_agora_w,
		ie_copiar_justificativa_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		ie_copiar_w		:= ie_copiar_w;
		ie_regra_geral_w	:= ie_regra_geral_w;
		nr_seq_regra_w		:= nr_seq_regra_w;
		ie_proced_agora_w	:= ie_proced_agora_w;
		ie_copiar_justificativa_w 	:= ie_copiar_justificativa_w;
	end loop;
	close C02;

	open C03;
	loop
	fetch C03 into	
		ie_regra_prim_hor_proc_w,
		ie_regra_horarios_w,
		ie_reordenar_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		ie_regra_prim_hor_proc_w := ie_regra_prim_hor_proc_w;
		ie_regra_horarios_w		:= ie_regra_horarios_w;
		ie_reordenar_w			:= ie_reordenar_w;
	end loop;
	close C03;

	if (coalesce(ie_copiar_w,'N')	= 'S') then

		nr_seq_proc_ant_w	:= nr_sequencia_w;
		nr_sequencia_w		:= nr_sequencia_w + nr_seq_proc_w;

		IF (coalesce(nr_seq_proc_interno_w,0) > 0) THEN
			SELECT	coalesce(MAX(ie_setor_paciente),'N')
			INTO STRICT	ie_setor_paciente_w
			FROM	proc_interno
			WHERE	nr_sequencia	= nr_seq_proc_interno_w;

			IF (ie_setor_paciente_w = 'S') THEN
				cd_setor_atendimento_w	:= obter_setor_atendimento(nr_atendimento_w);
			END IF;
		END IF;		
		
		if (nr_seq_prot_glic_w IS NOT NULL AND nr_seq_prot_glic_w::text <> '') then
			select	coalesce(max(obter_intervalo_ccg(nr_seq_prot_glic)), cd_intervalo_w)
			into STRICT	cd_intervalo_w
			from	prescr_procedimento
			where	coalesce(ie_urgencia,'N') <> 'N' -- Caso o CIG/CCG seja agora, deve buscar o intervalo do protocolo na copia
			and		nr_sequencia	= nr_seq_proc_ant_w
			and		nr_prescricao	= nr_prescricao_orig_p;
		end if;
		
		if (ie_restring_interv_lib_w = 'S') and (cd_intervalo_w IS NOT NULL AND cd_intervalo_w::text <> '') then
			cd_intervalo_w	:= Obter_interv_acm_sn_agora_lib( cd_estabelecimento_w, 0, 0, 'P', cd_procedimento_w, cd_intervalo_w, nr_prescricao_p, ie_origem_proced_w, nr_seq_proc_interno_w );
			ds_horarios_w	:= '';
		end if;
		
		if (ie_proced_agora_w = 'N') and (obter_se_intervalo_agora(cd_intervalo_w) = 'S') and (ie_permite_interv_agora_w = 'N') then
		   cd_intervalo_w := null;
		   ds_horarios_w := null;
		end if;
		
		IF (ie_copiar_justificativa_w = 'N') THEN
			ds_justificativa_w := null;
		END IF;
		
		select	nextval('prescr_procedimento_seq')
		into STRICT	nr_seq_interno_w
		;

		Insert  into Prescr_Procedimento(
			nr_prescricao,
			nr_sequencia,
			nr_agrupamento,
			ie_executar_leito,
			ie_amostra,
			cd_procedimento,
			qt_procedimento,
			dt_atualizacao,
			nm_usuario,
			ds_horarios,
			ds_observacao,
			ds_observacao_enf,
			cd_motivo_baixa,
			dt_baixa,
			cd_procedimento_aih,
			ie_origem_proced,
			cd_intervalo,
			ie_urgencia,
			cd_setor_atendimento,
			dt_emissao_setor_atend,
			ds_dado_clinico,
			dt_prev_execucao,
			ie_suspenso,
			cd_material_exame,
			nr_seq_exame,
			ds_material_especial,
			ie_status_atend,
			ie_origem_inf,
			ie_se_necessario,
			ie_acm,
			nr_ocorrencia,
			nr_seq_interno,
			nr_seq_proc_interno,
			qt_peca_ap,
			ds_qualidade_peca_ap,
			ds_diag_provavel_ap,
			ds_exame_anterior_ap,
			nr_seq_derivado,
			nr_seq_exame_sangue,
			nr_seq_solic_sangue,
			cd_unid_med_sangue,
			cd_pessoa_coleta,
			dt_coleta,
			ie_avisar_result,
			qt_vol_hemocomp,
			nr_seq_prot_glic,
			ie_respiracao,
			cd_mod_vent,
			ie_disp_resp_esp,
			qt_fluxo_oxigenio,
			ds_rotina,
			qt_hora_intervalo,
			qt_min_intervalo,
			ie_autorizacao,
			ie_lado,
			nr_seq_topografia,
			nr_seq_anterior,
			nr_prescricao_original,
			ie_forma_exame,
			ds_justificativa,
			cd_setor_coleta,
			nr_seq_rotina)
		values (nr_prescricao_p,
			nr_sequencia_w,
			nr_agrupamento_w,
			ie_executar_leito_w,
			ie_amostra_w,
			cd_procedimento_w,
			qt_procedimento_w,
			dt_prescricao_p,
			nm_usuario_p,
			ds_horarios_w,
			ds_observacao_w,
			ds_observacao_enf_w,
			cd_motivo_baixa_w,
			dt_baixa_w,
			cd_procedimento_aih_w,
			ie_origem_proced_w,
			cd_intervalo_w,
			ie_urgencia_w,
			cd_setor_atendimento_w,
			dt_emissao_setor_atend_w,
			ds_dado_clinico_w,
			dt_prev_exec_w,
			ie_suspenso_w,
			cd_material_exame_w,
			nr_seq_exame_w,
			ds_material_especial_w,
			ie_status_atend_w,
			ie_origem_inf_w,
			ie_se_necessario_w,
			ie_acm_w,
			nr_ocorrencia_w,
			nr_seq_interno_w,
			nr_seq_proc_interno_w,
			qt_peca_ap_w,
			ds_qualidade_peca_ap_w,
			ds_diag_provavel_ap_w,
			ds_exame_anterior_ap_w,
			nr_seq_derivado_w,
			nr_seq_exame_sangue_w,
			nr_seq_solic_sangue_w,
			cd_unid_med_sangue_w,
			cd_pessoa_coleta_w,
			dt_coleta_w,
			ie_avisar_result_w,
			qt_vol_hemocomp_w,
			nr_seq_prot_glic_w,
			ie_respiracao_w,
			cd_mod_vent_w,
			ie_disp_resp_esp_w,
			qt_fluxo_oxigenio_w,
			ds_rotina_w,
			qt_hora_intervalo_w,
			qt_min_intervalo_w,
			ie_autorizacao_w,
			ie_lado_w,
			nr_seq_topografia_w,
			nr_seq_proc_ant_w,
			nr_prescricao_orig_p,
			ie_forma_exame_w,
			ds_justificativa_w,
			cd_setor_coleta_w,
			nr_seq_rotina_w);		
	
		commit;
		
		select	count(*)
		into STRICT	cont_peca_w
		from	prescr_procedimento a, prescr_proc_peca b where		a.nr_prescricao		= b.nr_prescricao
		and		a.nr_sequencia		= b.nr_seq_prescr
		and		b.nr_prescricao		= nr_prescricao_orig_p
		and		b.nr_seq_prescr		= nr_seq_proc_ant_w LIMIT 1;

		if (cont_peca_w > 0) then
			--nova Prescricao, nova sequencia do proc,  Prescricao antiga, Sequencia  antiga do Proc, Usuario
			CALL REP_copia_pecas_procedimento(nr_prescricao_p, nr_sequencia_w, nr_prescricao_orig_p, nr_seq_proc_ant_w, nm_usuario_p);
		end if;
			
		open c06;
		loop
		fetch c06 into
			nr_sequencia_w,
			cd_intervalo_proc_w,
			dt_prev_execucao_w,
			cd_procedimento_w,
			ie_origem_proced_w,
			ds_horarios_w,
			ie_situacao_w,
			nr_seq_exame_w,
			dt_inicio_prescr_ww,
			nr_horas_validade_w,
			qt_hora_intervalo_w,
			qt_min_intervalo_w,
			nr_seq_proc_int_w;
		EXIT WHEN NOT FOUND; /* apply on c06 */
			begin
			dt_prev_execucao_ww	:= null;
			nr_ocorrencia_w		:= 0;

			if (ie_situacao_w = 'I') then
				cd_intervalo_proc_w	:= cd_intervalo_param_w;
			end if;
			
			if (ie_regra_medic_w = 'S') then
				begin
				if (somente_numero(nr_prescricoes_w) = 0) then
					nr_prescricoes_w	:= to_char(nr_prescricao_orig_p);
				elsif (coalesce(nr_prescricoes_w::text, '') = '') then
					nr_prescricoes_w	:= to_char(nr_prescricao_orig_p);
				end if;
				
				if (ie_regra_prim_hor_proc_w = 'I') then
				dt_prev_execucao_ww	:= obter_prim_hor_proc_interv(nr_atendimento_w,
											nr_prescricoes_w,
											dt_inicio_prescr_ww,
											cd_procedimento_w,
											ie_origem_proced_w,
											cd_intervalo_proc_w,
											ie_regra_prim_hor_proc_w,
											null);
				end if;
				
				if (dt_prev_execucao_ww IS NOT NULL AND dt_prev_execucao_ww::text <> '') then
					dt_prev_execucao_w	:= dt_prev_execucao_ww;
				elsif (dt_prev_exec_ww IS NOT NULL AND dt_prev_exec_ww::text <> '')	and (ie_regra_geral_w = 'I') then
					dt_prev_execucao_w := Converte_Char_Data(to_char(dt_inicio_prescr_w,'dd/mm/yyyy'),to_char(dt_prev_exec_ww,'hh24:mi:ss'),null);
				end if;
				
				if (ie_regra_geral_w = 'I') and (dt_prev_execucao_w IS NOT NULL AND dt_prev_execucao_w::text <> '') then
					if (dt_prev_execucao_w between dt_inicio_prescr_w and dt_validade_prescr_w) then
						dt_prev_exec2_ww := dt_prev_execucao_w;
					else					
						dt_prev_exec2_ww := Converte_Char_Data(to_char(dt_validade_prescr_w,'dd/mm/yyyy'),to_char(dt_prev_exec_ww,'hh24:mi:ss'),null);
					end if;
					
					if (dt_prev_exec2_ww between  dt_inicio_prescr_w and dt_validade_prescr_w) then
						dt_prev_execucao_w	:= dt_prev_exec2_ww;
					else
						dt_prev_execucao_w	:= dt_inicio_prescr_w;
					end if;
				end if;
				
				if (ie_acm_w	= 'S') then
					ds_horarios_w	:= wheb_mensagem_pck.get_texto(309807); -- ACM
				elsif (ie_se_necessario_w	= 'S') then
					ds_horarios_w	:= wheb_mensagem_pck.get_texto(309808); -- SN
				else	
					ds_horarios_ww	:= ds_horarios_w;
	
					SELECT * FROM Calcular_Horario_Prescricao(	nr_prescricao_p, cd_intervalo_proc_w, dt_inicio_prescr_ww, dt_prev_execucao_w, nr_horas_validade_w, cd_procedimento_w, qt_hora_intervalo_w, qt_min_intervalo_w, nr_ocorrencia_w, ds_horarios_w, ds_horarios2_w, 'N', NULL) INTO STRICT nr_ocorrencia_w, ds_horarios_w, ds_horarios2_w;
				end if;

					if (nr_ocorrencia_w = 0) then
						nr_ocorrencia_w := obter_ocorrencias_horarios_rep(substr(ds_horarios_w || ds_horarios2_w, 1,2000));
					end if;

					UPDATE	prescr_procedimento
					SET	ds_horarios	= SUBSTR(ds_horarios_w ||ds_horarios2_w,1,2000),
						cd_intervalo	= cd_intervalo_proc_w,
						dt_prev_execucao= dt_prev_execucao_w,
						nr_ocorrencia	= nr_ocorrencia_w
					WHERE	nr_prescricao	= nr_prescricao_p
					AND	nr_sequencia	= nr_sequencia_w;

				end;
			else
			
				nr_intervalo_ww	:= nr_intervalo_w;
				ds_horarios_ww	:= ds_horarios_w;
				
				if (ie_regra_geral_w = 'H') then						
					if (ie_regra_horarios_w = 'HS') then
						select	max(ds_horario)
						into STRICT	ds_horarios_aux_w
						from	rep_horario_hor_pac
						where	coalesce(dt_cancelamento::text, '') = ''
						and		cd_intervalo	= cd_intervalo_w
						and		cd_procedimento	= cd_procedimento_w
						and		nr_atendimento	= nr_atendimento_w;
						
						if (ds_horarios_aux_w IS NOT NULL AND ds_horarios_aux_w::text <> '') then
							ds_horarios_w	:= ds_horarios_aux_w;
							update	prescr_procedimento
							set 	ds_horarios			= ds_horarios_w
							where	(dt_prev_execucao IS NOT NULL AND dt_prev_execucao::text <> '')
							and		nr_sequencia		= nr_sequencia_w
							and		nr_prescricao 		= nr_prescricao_p;
						end if;
					end if;
					
					if (ie_regra_horarios_w in ('HA', 'HI')) then
						ds_horarios_w	:= null;
						open c04;
						loop
						fetch c04 into	
							dt_horario_w;
						EXIT WHEN NOT FOUND; /* apply on c04 */
							if (to_char(dt_horario_w,'mi') = '00') then
								if (coalesce(ds_horarios_w::text, '') = '') then
									ds_horarios_w	:= to_char(dt_horario_w,'hh24');
								else
									ds_horarios_w	:= ds_horarios_w ||' ' || to_char(dt_horario_w,'hh24');
								end if;
							else
								if (coalesce(ds_horarios_w::text, '') = '') then
									ds_horarios_w	:= to_char(dt_horario_w,'hh24:mi');
								else
									ds_horarios_w	:= ds_horarios_w ||' ' || to_char(dt_horario_w,'hh24:mi');
								end if;
							end if;
						end loop;
						close c04;
						
						if (coalesce(ie_reordenar_w,'S') = 'S') then
							ds_horarios_w	:= reordenar_horarios(dt_inicio_prescr_w, trim(both ds_horarios_w));
							ds_horarios_w := Reordenar_Horarios_Prescr(dt_inicio_prescr_w, ds_horarios_w);
						end if;
						
						if (ie_acm_w = 'S') then
							ds_horarios_w	:= 'ACM';
						end if;
						
						if (ie_se_necessario_w = 'S') then
							ds_horarios_w	:= 'SN';
						end if;
						
						if (ds_horarios_w not in ('ACM','SN')) then
							if (position(' ' in ds_horarios_w) = 0) then
								ds_horarios_w	:= ds_horarios_w || ' ';
							end if;
	
							hr_prim_horario_proc_w	:= substr(ds_horarios_w,1,position(' ' in ds_horarios_w) - 1);
							if (position(':' in hr_prim_horario_proc_w) = 0) then
								hr_prim_horario_proc_w	:= substr(hr_prim_horario_proc_w || ':00',1,5);
							end if;
							
							select	max(ie_operacao),
									max(qt_operacao)
							into STRICT	ie_operacao_w,
									qt_operacao_w
							from	intervalo_prescricao
							where	cd_intervalo	= cd_intervalo_w;
							
							if (ie_operacao_w in ('F','V')) then
								hr_prim_horario_proc_w	:= obter_primeiro_horario(cd_intervalo_w,nr_prescricao_p,null,null);
							end if;
							
							select	max(dt_inicio_prescr)
							into STRICT	dt_inicio_prescr_ww
							from	prescr_medica
							where	nr_prescricao	= nr_prescricao_p;
							
							nr_ocorrencia_w		:= 0;
							begin
							dt_prev_execucao_w 	:= to_date(to_char(dt_prescricao_www,'dd/mm/yyyy')||' '|| hr_prim_horario_proc_w ||':00','dd/mm/yyyy hh24:mi:ss');
							exception when others then
								dt_prev_execucao_w	:= dt_inicio_prescr_w;
							end;
							
							if (somente_numero(nr_prescricoes_w) = 0) then
								nr_prescricoes_w	:= to_char(nr_prescricao_p);
							end if;
	
	
							if (ie_operacao_w not in ('F', 'V')) then	
								begin
								dt_prev_execucao_w 	:= obter_prim_hor_proc_interv(nr_atendimento_w,nr_prescricoes_w,dt_prescricao_www, cd_procedimento_w, ie_origem_proced_w, cd_intervalo_proc_w, 'H', 'H');
								exception when others then
									dt_prev_execucao_w	:= dt_inicio_prescr_w;
								end;
							end if;
							
							dt_prev_execucao_w	:= coalesce(dt_prev_execucao_w,dt_inicio_prescr_w);
							
							if (ie_regra_horarios_w = 'HI') and (coalesce(qt_operacao_w,0) > 0) and (ie_operacao_w in ('H')) then
								
								if (ie_operacao_w in ('H')) and (dt_prev_execucao_w not between dt_inicio_prescr_w and (dt_prev_execucao_w + qt_operacao_w)) then
									
									while(dt_prev_execucao_w not between dt_inicio_prescr_w and (dt_prev_execucao_w + qt_operacao_w)) loop
										dt_prev_execucao_w	:= dt_prev_execucao_w + qt_operacao_w/24;
									end loop;
								end if;
							end if;
													
							hr_prim_horario_proc_w	:= to_char(dt_prev_execucao_w, 'hh24:mi');
						end if;
					end if;
				elsif (ie_regra_geral_w = 'I') then
					ds_horarios_w	:= null;
					dt_prev_execucao_w := Converte_Char_Data(to_char(dt_inicio_prescr_w,'dd/mm/yyyy'),to_char(dt_prev_exec_ww,'hh24:mi:ss'),null);
					
					if (dt_prev_execucao_w IS NOT NULL AND dt_prev_execucao_w::text <> '') then
						if (dt_prev_execucao_w between dt_inicio_prescr_w and dt_validade_prescr_w) then
							dt_prev_exec2_ww := dt_prev_execucao_w;
						else					
							dt_prev_exec2_ww := Converte_Char_Data(to_char(dt_validade_prescr_w,'dd/mm/yyyy'),to_char(dt_prev_exec_ww,'hh24:mi:ss'),null);
						end if;
						
						if (dt_prev_exec2_ww between  dt_inicio_prescr_w and dt_validade_prescr_w) then
							dt_prev_execucao_w	:= dt_prev_exec2_ww;
						else
							dt_prev_execucao_w	:= dt_inicio_prescr_w;
						end if;
					end if;
					
					if (ie_acm_w	= 'S') then
						ds_horarios_w	:= wheb_mensagem_pck.get_texto(309807);
					elsif (ie_se_necessario_w	= 'S') then
						ds_horarios_w	:= wheb_mensagem_pck.get_texto(309808);
					else		
						
						select	coalesce(max('S'),'N')
						into STRICT	ie_minuto_w
						from	prescr_proc_hor
						where	nr_prescricao	= nr_prescricoes_w
						and		nr_seq_procedimento = nr_seq_proc_ant_w
						and		to_char(dt_horario,'mi')	<> '00'
						and		coalesce(ie_situacao,'A')	= 'A'
						and (coalesce(dt_suspensao::text, '') = '');						
						
						open c04;
						loop
						fetch c04 into	
							dt_horario_w;
						EXIT WHEN NOT FOUND; /* apply on c04 */
							if (ie_minuto_w	= 'N') then
								if (coalesce(ds_horarios_w::text, '') = '') then
									ds_horarios_w	:= to_char(dt_horario_w,'hh24');
								else
									ds_horarios_w	:= ds_horarios_w ||' ' || to_char(dt_horario_w,'hh24');
								end if;
							else
								if (coalesce(ds_horarios_w::text, '') = '') then
									ds_horarios_w	:= to_char(dt_horario_w,'hh24:mi');
								else
									ds_horarios_w	:= ds_horarios_w ||' ' || to_char(dt_horario_w,'hh24:mi');
								end if;
							end if;
						end loop;
						close c04;
					
						ds_horarios_w	:= reordenar_horarios(dt_inicio_prescr_w, trim(both ds_horarios_w));
						ds_horarios_w := Reordenar_Horarios_Prescr(dt_inicio_prescr_w, ds_horarios_w);
					end if;
					
					update	prescr_procedimento
					set 	ds_horarios		= ds_horarios_w,
						dt_prev_execucao	= dt_prev_execucao_w
					where	nr_prescricao 		= nr_prescricao_p
					and	nr_sequencia		= nr_sequencia_w
					and	(dt_prev_execucao IS NOT NULL AND dt_prev_execucao::text <> '');
				
				end if;	
			end if;	

			if (ie_regra_prim_hor_proc_w = 'S') then
				SELECT * FROM Calcular_Horario_Prescricao(nr_prescricao_p, cd_intervalo_proc_w, dt_inicio_prescr_ww, dt_procedimento_p, nr_horas_validade_w, /*cd_procedimento_w*/
0, coalesce(qt_hora_intervalo_w,0), coalesce(qt_min_intervalo_w,0), nr_ocorrencia_w, ds_horarios_w, ds_horarios2_w, 'N', null, null, cd_procedimento_w, ie_origem_proced_w, nr_seq_proc_interno_w) INTO STRICT nr_ocorrencia_w, ds_horarios_w, ds_horarios2_w;
			elsif (ie_operacao_w <> 'F') and (coalesce(ie_regra_horarios_w,'XPTO') <> 'HS') then
				SELECT * FROM Calcular_Horario_Prescricao(nr_prescricao_p, cd_intervalo_proc_w, dt_inicio_prescr_ww, dt_prev_execucao_w, nr_horas_validade_w, /*cd_procedimento_w*/
0, coalesce(qt_hora_intervalo_w,0), coalesce(qt_min_intervalo_w,0), nr_ocorrencia_w, ds_horarios_w, ds_horarios2_w, 'N', null, null, cd_procedimento_w, ie_origem_proced_w, nr_seq_proc_interno_w) INTO STRICT nr_ocorrencia_w, ds_horarios_w, ds_horarios2_w;
			end if;

			if (nr_ocorrencia_w = 0) then
				nr_ocorrencia_w := obter_ocorrencias_horarios_rep(substr(ds_horarios_w || ds_horarios2_w, 1,2000));
			end if;

			update	prescr_procedimento
			set		ds_horarios		= substr(ds_horarios_w || ds_horarios2_w,1,2000),
					cd_intervalo	= cd_intervalo_proc_w,
					dt_prev_execucao = dt_prev_execucao_w,
					nr_ocorrencia	= nr_ocorrencia_w
			where	nr_prescricao	= nr_prescricao_p
			and		nr_sequencia	= nr_sequencia_w;
			
			if (ie_relancar_assoc_proc_w = 'S') then
			
				CALL Gerar_med_mat_assoc(nr_prescricao_p, nr_sequencia_w);
				
				if (nr_seq_prot_glic_w IS NOT NULL AND nr_seq_prot_glic_w::text <> '') then
					CALL Gerar_Med_Mat_Assoc_Glic(nr_prescricao_p, nr_sequencia_w, nr_seq_prot_glic_w);
				end if;
				
				if (ie_kit_automatico_w = 'S') then
					CALL Gerar_kit_procedimento(cd_estabelecimento_w, nr_prescricao_p, null, nm_usuario_p);
				end if;
			else
				CALL REP_copia_item_assoc_proc(nr_prescricao_p, nr_prescricao_orig_p, nr_seq_proc_ant_w, nr_sequencia_w, 'S', cd_perfil_p, nr_seq_material_p, nm_usuario_p, ds_horarios_w,'N');
			end if;
			
			CALL copiar_niveis_ccg(nr_prescricao_p, nr_prescricao_orig_p, nr_seq_proc_ant_w, nr_sequencia_w, nm_usuario_p);
			ds_erro_w := consistir_prescr_procedimento(nr_prescricao_p, nr_sequencia_w, nm_usuario_p, 0, ds_erro_w);
			end;
		end loop;
		close c06;
		
		if (ie_proced_agora_w = 'S') then
			select	max(cd_intervalo)
			into STRICT	cd_intervalo_proc_agora_w
			from	intervalo_prescricao
			where	ie_agora	= 'S'
			and	ie_situacao	= 'A'
			and 	Obter_se_intervalo(cd_intervalo,'P') = 'S'
			and 	obter_se_exibe_intervalo(nr_prescricao_p, cd_intervalo, cd_setor_atendimento_w) = 'S';

			update	prescr_procedimento
			set	ie_urgencia 		= 'S',
				ie_acm			= 'N',
				ie_se_necessario	= 'N',
				cd_intervalo		= cd_intervalo_proc_agora_w,
				dt_prev_execucao	= trunc(clock_timestamp(), 'mi'),
				ds_horarios		= to_char(clock_timestamp(), 'hh:mm')
			where	nr_seq_interno		= nr_seq_interno_w
			and	nr_prescricao		= nr_prescricao_p;
		end if;
		

		select	max(ds_horarios)
		into STRICT	ds_horarios_w
		from	prescr_procedimento
		where	nr_prescricao	= nr_prescricao_p
		and		nr_seq_interno	= nr_seq_interno_w;
		
		commit;
	end if;

end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE rep_copia_procedimento ( nr_prescricao_orig_p bigint, nr_prescricao_p bigint, nr_seq_regra_p bigint, dt_prescricao_p timestamp, dt_procedimento_p timestamp, ds_ind_clinica_p text, cd_perfil_p bigint, cd_prescritor_p text, cd_setor_prescr_p bigint, ie_banco_sangue_p text, ie_procedimento_p text, ie_exame_p text, nr_seq_bco_p bigint, nr_seq_material_p bigint, nm_usuario_p text) FROM PUBLIC;

