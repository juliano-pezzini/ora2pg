-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE sus_import_rubrica ( nr_aih_p bigint, cd_rubrica_p bigint, ie_situacao_p bigint, nr_seq_protocolo_p bigint, vl_aih_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, ds_retorno_p INOUT text) AS $body$
DECLARE

 
dt_apresentacao_w	timestamp;
nr_seq_aih_w		bigint;
nr_processo_w		bigint;
ds_retorno_w		varchar(80)	:= 'OK';
qt_aih_w		smallint	:= 0;
nr_proc_paga_w		bigint	:= 0;
nr_proc_rej_w		bigint	:= 0;
nr_Atendimento_w	bigint;
cd_medico_resp_w	varchar(10);
cd_pessoa_fisica_w	varchar(10);
cd_procedimento_w	bigint;

 

BEGIN 
 
begin 
select	nr_Atendimento, 
	cd_medico_responsavel, 
	nr_sequencia, 
	obter_procedimento_aih(nr_interno_conta,'E'), 
	count(*) 
into STRICT	nr_Atendimento_w, 
	cd_medico_resp_w, 
	nr_seq_aih_w, 
	cd_procedimento_w, 
	qt_aih_w 
from	sus_aih 
where	nr_aih	= nr_aih_p 
and	nr_sequencia =	(SELECT	max(nr_sequencia) 
			from	sus_aih 
			where	nr_aih	= nr_aih_p) 
group by	nr_Atendimento, 
		cd_medico_responsavel, 
		nr_sequencia, 
		nr_interno_conta;
exception 
	when others then 
		qt_aih_w	:= 0;
end;
 
/* Verificar se a AIH já foi importada como Pagas */
 
select	coalesce(max(nr_processo),0) 
into STRICT	nr_proc_paga_w 
from	sus_aih_paga 
where	nr_aih		= nr_aih_p 
and	nr_seq_aih	= nr_seq_aih_w;
 
if (nr_proc_paga_w	> 0) then 
	ds_retorno_w	:= 'Paga';
	goto final;	
end if;
 
/* Verificar se a AIH já foi importada como Rejeitada */
 
select	coalesce(max(nr_processo),0) 
into STRICT	nr_proc_rej_w 
from	sus_aih_rejeitada 
where	nr_aih		= nr_aih_p 
and	nr_seq_aih	= nr_seq_aih_w;
 
if (nr_proc_rej_w	> 0) then 
	ds_retorno_w	:= 'Rej';
	goto final;	
end if;
 
select	coalesce(max(cd_pessoa_fisica),'') 
into STRICT	cd_pessoa_fisica_w 
from	atendimento_paciente 
where	nr_atendimento	= nr_atendimento_w;
 
select	dt_mesano_referencia 
into STRICT	dt_apresentacao_w 
from	protocolo_convenio 
where	nr_seq_protocolo	= nr_Seq_protocolo_p;
 
select	coalesce(max(nr_processo),0) 
into STRICT	nr_processo_w 
from	sus_aih_processo 
where	nr_seq_protocolo	= nr_seq_protocolo_p 
and	ie_tipo_processo	= cd_rubrica_p;
 
if (qt_aih_w	> 0) then 
	if (nr_processo_w	= 0) then 
		select	nextval('sus_aih_processo_seq') 
		into STRICT	nr_processo_w 
		;
 
		insert into sus_aih_processo(nr_processo, 
			dt_competencia, 
			ie_tipo_processo, 
			dt_atualizacao, 
			nm_usuario, 
			dt_atualizacao_nrec, 
			nm_usuario_nrec, 
			nr_seq_protocolo, 
			cd_estabelecimento) 
		values (	nr_processo_w, 
			dt_apresentacao_w, 
			cd_rubrica_p, 
			clock_timestamp(), 
			nm_usuario_p, 
			clock_timestamp(), 
			nm_usuario_p, 
			nr_seq_protocolo_p, 
			cd_estabelecimento_p);
	end if;
 
	if (ie_situacao_p	= 0) then 
		insert into sus_aih_paga(nr_sequencia, 
			nr_aih, 
			nr_processo, 
			dt_apresentacao, 
			dt_atualizacao, 
			nm_usuario, 
			nr_seq_aih, 
			nr_seq_protocolo, 
			dt_atualizacao_nrec, 
			nm_usuario_nrec, 
			nr_atendimento, 
			cd_pessoa_fisica, 
			cd_medico_responsavel, 
			cd_proc_realizado, 
			ie_origem_proced, 
			vl_aih) 
		values (	nextval('sus_aih_paga_seq'), 
			nr_aih_p, 
			nr_processo_w, 
			dt_apresentacao_w, 
			clock_timestamp(), 
			nm_usuario_p, 
			nr_seq_aih_w, 
			nr_seq_protocolo_p, 
			clock_timestamp(), 
			nm_usuario_p, 
			nr_atendimento_w, 
			cd_pessoa_fisica_w, 
			cd_medico_resp_w, 
			cd_procedimento_w, 
			2, 
			vl_aih_p);
 
	elsif (ie_situacao_p	= 1) then 
		insert into sus_aih_rejeitada(nr_sequencia, 
			dt_apresentacao, 
			nr_aih, 
			nr_processo, 
			dt_atualizacao, 
			nm_usuario, 
			nr_seq_protocolo, 
			nr_seq_aih, 
			dt_atualizacao_nrec, 
			nm_usuario_nrec, 
			nr_atendimento, 
			cd_pessoa_fisica, 
			cd_medico_responsavel, 
			cd_proc_realizado, 
			ie_origem_proced) 
		values (	nextval('sus_aih_rejeitada_seq'), 
			dt_apresentacao_w, 
			nr_aih_p, 
			nr_processo_w, 
			clock_timestamp(), 
			nm_usuario_p, 
			nr_seq_protocolo_p, 
			nr_seq_aih_w, 
			clock_timestamp(), 
			nm_usuario_p, 
			nr_atendimento_w, 
			cd_pessoa_fisica_w, 
			cd_medico_resp_w, 
			cd_procedimento_w, 
			2);
 
	end if;
else 
	ds_retorno_w	:= 'ERRO';
end if;
 
<<final>> 
 
ds_retorno_p	:= ds_retorno_w;
 
commit;
 
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE sus_import_rubrica ( nr_aih_p bigint, cd_rubrica_p bigint, ie_situacao_p bigint, nr_seq_protocolo_p bigint, vl_aih_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, ds_retorno_p INOUT text) FROM PUBLIC;

