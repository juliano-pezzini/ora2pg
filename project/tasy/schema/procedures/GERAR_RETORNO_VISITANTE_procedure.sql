-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_retorno_visitante ( nr_sequencia_p bigint, ie_controle_p text, nm_usuario_p text, ds_aviso_p INOUT text, nr_seq_novo_visit_p INOUT bigint) AS $body$
DECLARE


nr_seq_controle_w		bigint;
nr_sequencia_w			bigint;

varacompanhante			varchar(5):='N';/* param 23 ocupaÇÃo hosp */
varidadeconsitevisita		bigint:=0;	/* param 13 controle visitas */
nr_atendimento_w		bigint:=0;
qt_max_visitante_w		bigint:=0;
qt_idade_visitante_w		bigint:=0;
qt_visitantes_w			bigint:=0;
cd_pessoa_fisica_w		varchar(20):=0;
ie_permite_funcionario_w	varchar(1);
cd_funcionario_w		varchar(10);
nm_pessoa_bloqueio_w		varchar(50);
nr_identidade_w			varchar(15);
ie_bloqueio_w			varchar(1) := 'N';
nm_visitante_w			varchar(255);
ie_visitante_sem_saida_w	varchar(1);
ie_acompanhante_sem_saida_w	varchar(1);
ie_busca_setor_w	varchar(1);
cd_setor_atend_w		setor_atendimento.cd_setor_atendimento%type;
ie_status_w			atendimento_visita.ie_status%type;
ie_validar_retorno_w 		varchar(1);



BEGIN

/* obter dados visita */

select 	coalesce(max(nr_atendimento),0),
	max(cd_pessoa_fisica),
	max(NM_VISITANTE)
into STRICT	nr_atendimento_w,
	cd_pessoa_fisica_w,
	nm_visitante_w
from   	atendimento_visita
where  	nr_sequencia = nr_sequencia_p;

/* Parâmetro que Verifica se o paciente ou acompanhante possui retorno sem saída. */

ie_validar_retorno_w := Obter_Param_Usuario(8014, 127, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_validar_retorno_w);

if (coalesce(ie_validar_retorno_w,'N') = 'S') then
	
	select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
	into STRICT	ie_visitante_sem_saida_w
	from	atendimento_visita
	where	coalesce(dt_saida::text, '') = ''
	and	nr_atendimento = nr_atendimento_w
	and	((cd_pessoa_fisica = cd_pessoa_fisica_w) or (nm_visitante = nm_visitante_w));

	if (ie_visitante_sem_saida_w = 'S') then
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(228401);
	end if;
	
end if;

/*obter identidade da pessoa*/

select	max(nr_identidade)
into STRICT	nr_identidade_w
from	pessoa_fisica
where	cd_pessoa_fisica = cd_pessoa_fisica_w;

/*obter se pessoa está bloqueada*/

select coalesce(obter_se_consiste_bloq_visita(nr_atendimento_w, cd_pessoa_fisica_w, coalesce(nm_visitante_w, obter_nome_pf(cd_pessoa_fisica_w)), nr_identidade_w), 'N')
into STRICT ie_bloqueio_w
;


/* abreiter em 29/01/2010
obter vl parâmetro [23] da ocupação hospitalar.
*/
select	coalesce(max(obter_valor_param_usuario(44, 23, obter_perfil_ativo, nm_usuario_p, null)), 'N')
into STRICT	varacompanhante
;

/* abreiter em 01/02/2010
obter vl parâmetro [13] da controle visitas.
*/
select	coalesce(max(obter_valor_param_usuario(8014, 13, obter_perfil_ativo, nm_usuario_p, null)),0)
into STRICT	varidadeconsitevisita
;

/*obter parametro [124] controle de visitas*/

select 	max(obter_valor_param_usuario(8014, 124, obter_perfil_ativo, nm_usuario_p, null))
into STRICT	ie_status_w
;

/* obter capacidade/limite de visitantes do setor-unidade */

select 	coalesce(max(qt_max_visitante),1)
into STRICT	qt_max_visitante_w
from   	unidade_atendimento
where  	cd_setor_atendimento 	= obter_setor_atendimento(nr_atendimento_w)
and    	cd_unidade_basica 	= obter_unidade_atendimento(nr_atendimento_w,'A','UB')
and    	cd_unidade_compl 	= obter_unidade_atendimento(nr_atendimento_w,'A','UC');

/* obter idade do visitante */

select obter_idade_pf(cd_pessoa_fisica_w,clock_timestamp(),'A')
into STRICT   qt_idade_visitante_w
;

/* obter quantidade de visitantes*/
select 	coalesce(count(*),0)
into STRICT	qt_visitantes_w 
from   	atendimento_visita
where  	nr_atendimento = nr_atendimento_w
and    	coalesce(dt_saida::text, '') = ''
and	coalesce(ie_paciente,'N') = 'N'
and    	((coalesce(cd_pessoa_fisica::text, '') = '') or (coalesce(obter_idade_pf(cd_pessoa_fisica,clock_timestamp(),'A'),0) > coalesce(varidadeconsitevisita,1)));

select	coalesce(max(obter_valor_param_usuario(8014, 48, obter_perfil_ativo, nm_usuario_p, null)), 'N')
into STRICT	ie_permite_funcionario_w
;

select	Obter_Pf_Usuario(nm_usuario_p,'C')
into STRICT	cd_funcionario_w
;


/*r(-20011,'VARACOMPANHANTE -> '||varacompanhante||' - '||
					  'qt_max_visitante_w -> '||qt_max_visitante_w||' - '||
					  'qt_visitantes_w -> '||qt_visitantes_w||chr(13)||' - '||
					  'qt_idade_visitante_w -> '||qt_idade_visitante_w||' - '||
					  'VarIdadeConsiteVisita -> '||varidadeconsitevisita  
	   );
*/
	   

/*As consistências abaixo foram criadas para não permitir que seja gerado um retorno de um visitante como acompanhante, caso já exista o registro de visitante para essa pessoa e vice e versa.
Porém, foram removidas, pois alguns clientes, têm casos em que o visitante/acompanhante sai e não entrega a etiqueta/cracha para registrar a saída.

select	decode(count(*),0,'N','S')
into	ie_visitante_sem_saida_w
from	atendimento_visita
where	dt_saida is null
and	nr_sequencia <> nr_sequencia_p
and	((cd_pessoa_fisica = cd_pessoa_fisica_w) or (nm_visitante = nm_visitante_w));

if	(ie_visitante_sem_saida_w = 'S') then
	Wheb_mensagem_pck.exibir_mensagem_abort(228401);
end if;

select	decode(count(*),0,'N','S')
into	ie_acompanhante_sem_saida_w
from	atendimento_acompanhante
where	dt_saida is null
and	((cd_pessoa_fisica = cd_pessoa_fisica_w) or (nm_acompanhante = nm_visitante_w));

if	(ie_acompanhante_sem_saida_w = 'S') then
	Wheb_mensagem_pck.exibir_mensagem_abort(228404);
end if;*/
if (ie_bloqueio_w = 'S') then
CALL Wheb_mensagem_pck.exibir_mensagem_abort(41598);
end if;
if (varacompanhante <> 'N' AND qt_max_visitante_w <> 0) then		
	if (qt_visitantes_w >= qt_max_visitante_w) 					 	and
	   ((qt_idade_visitante_w > varidadeconsitevisita) or (varidadeconsitevisita = 0)) 	then
		if (varacompanhante = 'B') then
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(262466);
		elsif (varacompanhante = 'A') then
			ds_aviso_p := obter_texto_tasy(262650, wheb_usuario_pck.get_nr_seq_idioma);
			
			end if;				
	end if;
end if;	
		if (ie_controle_p = 'S') then
			select	max(nr_seq_controle) + 1
			into STRICT	nr_seq_controle_w
			from	atendimento_visita;
		end if;

		select 	nextval('atendimento_visita_seq')
		into STRICT	nr_sequencia_w
		;

		ie_busca_setor_w := Obter_Param_Usuario(8014, 91, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_busca_setor_w);
		
		if (ie_busca_setor_w = 'S') then
			select	substr(obter_unidade_atendimento(nr_atendimento_w,'IAA','CS'), 1,100) cd_setor_atend
			into STRICT	cd_setor_atend_w
			;
		end if;	
		
		insert into 	
			atendimento_visita(
			nr_sequencia,
			nr_atendimento,
			dt_atualizacao,
			nm_usuario,
			dt_entrada,
			nr_seq_tipo,
			dt_saida,
			ds_observacao,
			cd_pessoa_fisica,
			nr_seq_controle,
			nm_visitante,
			cd_setor_atendimento,
			nr_identidade,
			nr_telefone,
			dt_nascimento,
			cd_funcionario,
			cd_empresa,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			cd_setor_atend,
			ie_sexo,
			ie_status)
		SELECT	nr_sequencia_w,
			nr_atendimento,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nr_seq_tipo,
			null,
			null,
			cd_pessoa_fisica,
			null,
			nm_visitante,
			cd_setor_atendimento,
			nr_identidade,
			nr_telefone,
			dt_nascimento,
			CASE WHEN ie_permite_funcionario_w='S' THEN cd_funcionario_w  ELSE null END ,
			cd_empresa,
			clock_timestamp(),
			nm_usuario_p,
			cd_setor_atend_w,
			ie_sexo,
			ie_status_w
		from	atendimento_visita
		where	nr_sequencia	= nr_sequencia_p;

		update	atendimento_visita_foto
		set	nr_seq_atend_visita = nr_sequencia_w
		where	nr_seq_atend_visita = nr_sequencia_p;

		commit;	

nr_seq_novo_visit_p := nr_sequencia_w;


end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_retorno_visitante ( nr_sequencia_p bigint, ie_controle_p text, nm_usuario_p text, ds_aviso_p INOUT text, nr_seq_novo_visit_p INOUT bigint) FROM PUBLIC;

