-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ctb_reatualizar_saldo_job ( cd_empresa_p empresa.cd_empresa%type, dt_referencia_p ctb_mes_ref.dt_referencia%type) AS $body$
DECLARE

/*
===============================================================================
Purpose: Indentacao

Remarks: n/a

Who         When            What
----------  -----------     --------------------------------------------------

dmsluniere  18/mar/2022     OS 2871719 - Indentacao

===============================================================================
*/
ds_erro_w               varchar(4000);
dt_referencia_w         ctb_mes_ref.dt_referencia%type;
nr_seq_mes_ref_w        ctb_mes_ref.nr_sequencia%type;
ie_not_const            constant      varchar(01) := 'N';
ie_x_const              constant      varchar(01) := 'X';
ie_mask_const           constant      varchar(10) := 'mm';
ie_user_const           constant      varchar(05) := 'Tasy';
ie_ds_erro_const        constant      varchar(10) := 'Erro: ';
ie_ds_date_const        constant      varchar(10) := ' Data: ';
ds_erro_const           constant      varchar(50) := 'Erro ao atualizar tabela de custo ';
ds_erro_job_const       constant      varchar(50) := 'Erro ao Reatualizar saldo via JOB na empresa: ';
tam_subst_const         constant      integer(04)  := 2000;
cd_log_const            constant      integer(04)  := 1010;
ie_orc_real_const       constant      integer(04)  := 2;
ie_tipo_tb_custo_const  constant      integer(04)  := 5;

c_tab_orc_custo CURSOR FOR
SELECT a.nr_sequencia,
       a.cd_tabela_custo,
       a.cd_estabelecimento
from   tabela_custo a
where  a.cd_empresa           = cd_empresa_p
and    a.dt_mes_referencia    = dt_referencia_w
and    a.cd_tipo_tabela_custo = ie_tipo_tb_custo_const;

BEGIN

dt_referencia_w     := trunc(clock_timestamp(),ie_mask_const);

begin
    select  nr_sequencia
    into STRICT    nr_seq_mes_ref_w
    from    ctb_mes_ref a
    where   a.cd_empresa    = cd_empresa_p
    and     coalesce(a.dt_fechamento::text, '') = ''
    and     (a.dt_abertura IS NOT NULL AND a.dt_abertura::text <> '')
    and     a.dt_referencia = dt_referencia_w;
exception
when no_data_found then
     nr_seq_mes_ref_w    := null;
when too_many_rows then
     nr_seq_mes_ref_w    := null;
end;

if (coalesce(nr_seq_mes_ref_w,0) != 0) then

    begin
    ds_erro_w := ctb_reatualizar_saldo(nr_seq_mes_ref_w, null, ie_user_const, ds_erro_w);
    CALL atualizar_orcamento_realizado(nr_seq_mes_ref_w,null,ie_user_const);

    if (coalesce(ds_erro_w,ie_x_const) = ie_x_const) then
      
        for dados_w in c_tab_orc_custo loop
            begin
                CALL ctb_gerar_orcamento_custo(  
                                cd_estabelecimento_p    => dados_w.cd_estabelecimento,
                                cd_tabela_custo_p       => dados_w.cd_tabela_custo,
                                cd_convenio_p           => null,
                                qt_dias_prazo_p         => null,
                                ie_orc_real_p           => ie_orc_real_const,
                                ie_protocolo_p          => 0,
                                ie_sobrepor_p           => ie_not_const,
                                ie_valor_eis_p          => 0,
                                nr_seq_tabela_p         => dados_w.nr_sequencia,
                                ie_data_eis_p           => null,
                                nm_usuario_p            => ie_user_const
                                );
            exception 
            when no_data_found then
                 ds_erro_w   := ds_erro_const;
                 insert into ctb_log(   cd_log, ds_log, nm_usuario, dt_atualizacao )
                 values (                cd_log_const,
                                        substr(ds_erro_job_const || cd_empresa_p || ie_ds_date_const || dt_referencia_p || ie_ds_erro_const || ds_erro_w,1,tam_subst_const),
                                        ie_user_const,
                                        clock_timestamp()
                                        );
            when too_many_rows then
                 ds_erro_w   := ds_erro_const;
                 insert into ctb_log(   cd_log, ds_log, nm_usuario, dt_atualizacao )
                 values (                cd_log_const,
                                        substr(ds_erro_job_const || cd_empresa_p || ie_ds_date_const || dt_referencia_p || ie_ds_erro_const || ds_erro_w,1,tam_subst_const),
                                        ie_user_const,
                                        clock_timestamp()
                                        );
            when others then
                 ds_erro_w   := ds_erro_const;
                 insert into ctb_log(  cd_log, ds_log, nm_usuario, dt_atualizacao )
                 values (               cd_log_const,
                                       substr(ds_erro_job_const || cd_empresa_p || ie_ds_date_const || dt_referencia_p || ie_ds_erro_const || ds_erro_w,1,tam_subst_const),
                                       ie_user_const,
                                       clock_timestamp() );
            end;
        end loop;

    end if;

    exception 
    when no_data_found then
        insert into ctb_log(           cd_log, ds_log, nm_usuario, dt_atualizacao )
        values (                        cd_log_const,
                                       substr(ds_erro_job_const || cd_empresa_p || ie_ds_date_const || dt_referencia_p || ie_ds_erro_const || ds_erro_w,1,tam_subst_const),
                                       ie_user_const,
                                       clock_timestamp() );

    when too_many_rows then
        insert into ctb_log(           cd_log, ds_log, nm_usuario, dt_atualizacao )
        values (                        cd_log_const,
                                       substr(ds_erro_job_const || cd_empresa_p || ie_ds_date_const || dt_referencia_p || ie_ds_erro_const || ds_erro_w,1,tam_subst_const),
                                       ie_user_const,
                                       clock_timestamp() );

    when others then
        insert into ctb_log(           cd_log, ds_log, nm_usuario, dt_atualizacao )
        values (                        cd_log_const,
                                       substr(ds_erro_job_const || cd_empresa_p || ie_ds_date_const || dt_referencia_p || ie_ds_erro_const || ds_erro_w,1,tam_subst_const),
                                       ie_user_const,
                                       clock_timestamp() );

    commit;

    end;

end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_reatualizar_saldo_job ( cd_empresa_p empresa.cd_empresa%type, dt_referencia_p ctb_mes_ref.dt_referencia%type) FROM PUBLIC;

