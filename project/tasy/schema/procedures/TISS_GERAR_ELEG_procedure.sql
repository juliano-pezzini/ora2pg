-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE tiss_gerar_eleg (cd_estabelecimento_p bigint, cd_convenio_p bigint, cd_plano_p text, dt_validade_carteira_p timestamp, cd_cgc_prestador_p text, cd_pessoa_fisica_p text, cd_usuario_convenio_p text, nm_usuario_p text, ds_biometria_p text, cd_categoria_p text, cd_ausencia_validacao_p text, cd_validacao_p text, nr_seq_eleg_p INOUT text, nm_pessoa_fisica_p text default null) AS $body$
DECLARE


cd_cgc_prestador_w	varchar(255);
nm_contratado_w		varchar(255);
cd_cnes_w		varchar(255);
cd_ans_w		varchar(255);
nr_seq_eleg_w		bigint;
nm_pessoa_fisica_w	varchar(255);
nr_cartao_nac_sus_w	varchar(255);
ds_plano_w		varchar(255);
nr_atendimento_w	bigint;
ie_tipo_atendimento_w	smallint;
ds_irrelevante_w	varchar(255);
cd_cgc_prest_tiss_w	varchar(14);
cd_prestador_tiss_w	varchar(140);
ds_prestador_tiss_w	varchar(255);
nr_seq_regra_w		bigint;
ie_regra_mascara_w	varchar(10);
cd_usuario_convenio_w	varchar(255);
cd_prestador_padrao_w	varchar(140);


BEGIN

delete	from tiss_eleg
where	dt_atualizacao	< clock_timestamp() - interval '1 days';

select	max(coalesce(cd_cgc_prestador_p, cd_cgc))
into STRICT	cd_cgc_prestador_w
from	estabelecimento
where	cd_estabelecimento	= cd_estabelecimento_p;

select	max(c.cd_ans)
into STRICT	cd_ans_w
from	pessoa_juridica c,
	convenio b
where	b.cd_cgc	= c.cd_cgc
and	b.cd_convenio	= cd_convenio_p;

/*select	nvl(max(ie_regra_mascara),'N')
into	ie_regra_mascara_w
from	tiss_parametros_convenio
where	cd_estabelecimento	= cd_estabelecimento_p
and 	cd_convenio		= cd_convenio_p;

cd_usuario_convenio_w	:= cd_usuario_convenio_p;

if	(ie_regra_mascara_w = 'N') then
	cd_usuario_convenio_w	:= replace(replace(cd_usuario_convenio_w,'.',''),'-','');
end if;*/
cd_usuario_convenio_w	:= cd_usuario_convenio_p;

--lhalves OS 799337 em 09/10/2014 - implementada function abaixo, para tratar o codigo do usuairo de acordo com as regras de mascara do convenio e TISS
begin
select	TISS_OBTER_CARTEIRINHA(cd_convenio_p, cd_estabelecimento_p, null, cd_usuario_convenio_w, null)
into STRICT	cd_usuario_convenio_w
;
exception
when others then
	cd_usuario_convenio_w	:= cd_usuario_convenio_p;
end;

select	coalesce(max(nm_pessoa_fisica),nm_pessoa_fisica_p),
	max(nr_cartao_nac_sus)
into STRICT	nm_pessoa_fisica_w,
	nr_cartao_nac_sus_w
from	pessoa_fisica
where	cd_pessoa_fisica	= cd_pessoa_fisica_p;

select	max(ds_plano)
into STRICT	ds_plano_w
from	convenio_plano
where	cd_convenio	= cd_convenio_p
and	cd_plano	= cd_plano_p;

if (coalesce(cd_plano_p,'X') = 'X') and (coalesce(cd_categoria_p,'X') <> 'X') then
	
	select	max(ds_categoria)
	into STRICT	ds_plano_w
	from	categoria_convenio
	where	cd_convenio	= cd_convenio_p
	and	cd_categoria	= cd_categoria_p;
	
end if;	

select	max(nr_atendimento)
into STRICT	nr_atendimento_w
from	atendimento_paciente
where	cd_pessoa_fisica	= cd_pessoa_fisica_p
and	trunc(dt_entrada)	= trunc(clock_timestamp());

if (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') then	
	select	max(ie_tipo_atendimento)
	into STRICT	ie_tipo_atendimento_w
	from	atendimento_paciente
	where	nr_atendimento	= nr_atendimento_w;	
end if;

SELECT * FROM tiss_obter_regra_prestador(	cd_convenio_p, cd_estabelecimento_p, coalesce(ie_tipo_atendimento_w,0), null, null, cd_cgc_prestador_w, null, null, null, null, null, null, '4', 'N', cd_cgc_prest_tiss_w, cd_prestador_tiss_w, ds_prestador_tiss_w, ds_irrelevante_w, ds_irrelevante_w, nr_seq_regra_w, 'T', ds_irrelevante_w, null, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, clock_timestamp(), 'N', null, null, null, null, null, 'S', 'N', null, null) INTO STRICT cd_cgc_prest_tiss_w, cd_prestador_tiss_w, ds_prestador_tiss_w, ds_irrelevante_w, ds_irrelevante_w, nr_seq_regra_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w;
				
if (cd_cgc_prest_tiss_w IS NOT NULL AND cd_cgc_prest_tiss_w::text <> '') then
	cd_cgc_prestador_w	:= cd_cgc_prest_tiss_w;
end if;

select	max(ds_razao_social),
	max(cd_cnes)
into STRICT	nm_contratado_w,
	cd_cnes_w
from	pessoa_juridica
where	cd_cgc		= cd_cgc_prestador_w;	

if (ds_prestador_tiss_w IS NOT NULL AND ds_prestador_tiss_w::text <> '') then
	nm_contratado_w	:= ds_prestador_tiss_w;
end if;	

cd_prestador_padrao_w := obter_param_usuario(3008, 24, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, cd_prestador_padrao_w);

if (cd_prestador_padrao_w IS NOT NULL AND cd_prestador_padrao_w::text <> '') then
	cd_prestador_tiss_w	:= cd_prestador_padrao_w;
end if;

select	nextval('tiss_eleg_seq')
into STRICT	nr_seq_eleg_w
;

insert into tiss_eleg(nr_sequencia,
	dt_atualizacao,
	nm_usuario,
	dt_atualizacao_nrec,
	nm_usuario_nrec,
	ds_tipo_transacao,
	dt_transacao,
	cd_cgc,
	nr_cpf,
	cd_interno,
	cd_ans,
	ds_versao,
	nm_contratado,
	cd_cnes,
	cd_usuario_convenio,
	nm_pessoa_fisica,
	ds_plano,
	dt_validade_carteira,
	nr_cartao_nac_sus,
	cd_convenio,
	ds_biometria,
	cd_ausencia_cod_valid,
	cd_validacao_tiss)
values (nr_seq_eleg_w,
	clock_timestamp(),
	nm_usuario_p,
	clock_timestamp(),
	nm_usuario_p,
	'VERIFICA_ELEGIBILIDADE',
	clock_timestamp(),
	CASE WHEN coalesce(cd_prestador_tiss_w,'X')='X' THEN tiss_obter_codigo_prestador(cd_convenio_p, cd_estabelecimento_p, null, cd_cgc_prestador_w, (null)::numeric , 'CGC', NULL,null,cd_categoria_p)  ELSE null END ,
	null,
	coalesce(cd_prestador_tiss_w,tiss_obter_codigo_prestador(cd_convenio_p, cd_estabelecimento_p, null, cd_cgc_prestador_w, (null)::numeric , 'CI', NULL,null,cd_categoria_p)),
	cd_ans_w,
	'2.01.02',
	nm_contratado_w,
	cd_cnes_w,
	cd_usuario_convenio_w,
	nm_pessoa_fisica_w,
	ds_plano_w,
	dt_validade_carteira_p,
	nr_cartao_nac_sus_w,
	cd_convenio_p,
	ds_biometria_p,
	cd_ausencia_validacao_p,
	cd_validacao_p);

nr_seq_eleg_p		:= nr_seq_eleg_w;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE tiss_gerar_eleg (cd_estabelecimento_p bigint, cd_convenio_p bigint, cd_plano_p text, dt_validade_carteira_p timestamp, cd_cgc_prestador_p text, cd_pessoa_fisica_p text, cd_usuario_convenio_p text, nm_usuario_p text, ds_biometria_p text, cd_categoria_p text, cd_ausencia_validacao_p text, cd_validacao_p text, nr_seq_eleg_p INOUT text, nm_pessoa_fisica_p text default null) FROM PUBLIC;

