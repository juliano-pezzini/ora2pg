-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE hd_atualiza_maq_agenda (nr_seq_agenda_p bigint, nr_seq_ponto_p bigint) AS $body$
DECLARE

nr_seq_dialise_dialis_w		hd_dialise_dialisador.nr_sequencia%type;
nr_seq_dial_retirada_w		hd_dialise_dialisador.nr_sequencia%type;
nr_seq_dialise_dialisador_w	hd_dialise_dialisador.nr_sequencia%type;
nr_seq_dialise_w			hd_dialise_dialisador.nr_seq_dialise%type;	
nr_seq_maquina_w			hd_maquina_dialise.nr_sequencia%type;	
NR_ATENDIMENTO_w         HD_DIALISE.NR_ATENDIMENTO%type;
CD_SETOR_ATENDIMENTO_w   HD_PONTO_ACESSO.CD_SETOR_ATENDIMENTO%type;
CD_UNIDADE_BASICA_w      HD_PONTO_ACESSO.CD_UNIDADE_BASICA%type;
CD_UNIDADE_COMPL_w       HD_PONTO_ACESSO.CD_UNIDADE_COMPL%type;
IE_GERAR_MOVIMENTACAO_W  varchar(1);				

BEGIN
if (nr_seq_agenda_p IS NOT NULL AND nr_seq_agenda_p::text <> '') then
	select	max(HD_OBTER_DADOS_DIALISE(nr_seq_dialise,'DS'))
	into STRICT	nr_seq_dialise_dialis_w
	from	hd_agenda_dialise
	where	nr_sequencia = nr_seq_agenda_p;
	
	select	max(nr_sequencia)
	into STRICT	nr_seq_maquina_w
	from	hd_maquina_dialise
	where	nr_seq_ponto = nr_seq_ponto_p;
	
	if (nr_seq_dialise_dialis_w IS NOT NULL AND nr_seq_dialise_dialis_w::text <> '') and (nr_seq_maquina_w IS NOT NULL AND nr_seq_maquina_w::text <> '') then
		select	max(nr_sequencia)
		into STRICT	nr_seq_dial_retirada_w
		from	hd_dialise_dialisador
		where	nr_sequencia = nr_seq_dialise_dialis_w;
		
		select	max(nr_seq_dialise)
		into STRICT	nr_seq_dialise_w
		from	hd_dialise_dialisador
		where	nr_sequencia = nr_seq_dialise_dialis_w;

		update	hd_dialise_dialisador
		set		dt_retirada = clock_timestamp(),
				cd_pf_retirada = substr(obter_pessoa_fisica_usuario(wheb_usuario_pck.get_nm_usuario,'C'),1,10)
		where	nr_sequencia = nr_seq_dialise_dialis_w;
		
		select 	nextval('hd_dialise_dialisador_seq')
		into STRICT	nr_seq_dialise_dialisador_w
		;
			
		insert into hd_dialise_dialisador(	
			NR_SEQUENCIA,
			CD_ESTABELECIMENTO,
			DT_ATUALIZACAO,
			NM_USUARIO,
			NR_SEQ_DIALISADOR,
			NR_SEQ_MAQUINA,
			NR_SEQ_UNID_DIALISE,
			QT_REUSO_ATUAL,
			DT_MONTAGEM,						
			DT_ATUALIZACAO_NREC,
			NM_USUARIO_NREC,
			CD_PF_MONTAGEM,		
			NR_SEQ_PONTO_ACESSO,
			NR_SEQ_DIALISE,
			NR_SEQ_OSMOSE,
			IE_TROCA_EMERGENCIA)
		SELECT	nr_seq_dialise_dialisador_w,
			wheb_usuario_pck.get_cd_estabelecimento,
			clock_timestamp(),
			wheb_usuario_pck.get_nm_usuario,
			nr_seq_dialisador,
			nr_seq_maquina_w,
			nr_seq_unid_dialise,
			qt_reuso_atual,
			clock_timestamp(),
			clock_timestamp(),
			wheb_usuario_pck.get_nm_usuario,
			substr(obter_pessoa_fisica_usuario(wheb_usuario_pck.get_nm_usuario,'C'),1,10),
			nr_seq_ponto_p,
			nr_seq_dialise,
			nr_seq_osmose,
			ie_troca_emergencia
		from	hd_dialise_dialisador
		where	nr_sequencia = nr_seq_dialise_dialis_w;
		
		if (nr_seq_dialise_w IS NOT NULL AND nr_seq_dialise_w::text <> '') then
			CALL hd_gerar_assinatura(nr_seq_dialise_dialisador_w, null, nr_seq_dialise_w, null, null, null, nr_seq_dial_retirada_w, null, null, 'SM', wheb_usuario_pck.get_nm_usuario, 'N');
			IE_GERAR_MOVIMENTACAO_W := obter_param_usuario(7009, 278, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, IE_GERAR_MOVIMENTACAO_W);
			IF IE_GERAR_MOVIMENTACAO_W = 'S' THEN
				BEGIN
				  SELECT
					  hd.NR_ATENDIMENTO
					 ,hpa.CD_SETOR_ATENDIMENTO
					 ,hpa.CD_UNIDADE_BASICA
					 ,hpa.CD_UNIDADE_COMPL
				  INTO STRICT
					 NR_ATENDIMENTO_w
					,CD_SETOR_ATENDIMENTO_w
					,CD_UNIDADE_BASICA_w
					,CD_UNIDADE_COMPL_w
				  FROM HD_DIALISE hd, HD_DIALISE_DIALISADOR hdd, HD_PONTO_ACESSO hpa
				  WHERE hd.nr_sequencia = hdd.nr_seq_dialise
				  AND   hdd.nr_seq_ponto_acesso = hpa.nr_sequencia
				  AND   hd.nr_sequencia = nr_seq_dialise_w
				  AND   hdd.nr_sequencia =  nr_seq_dialise_dialisador_w;

				END;

				CALL GERAR_TRANSFERENCIA_PACIENTE(
				   nr_atendimento_p        => NR_ATENDIMENTO_w
				  ,cd_setor_atendimento_p   => CD_SETOR_ATENDIMENTO_w
				  ,cd_unidade_basica_p      => CD_UNIDADE_BASICA_w
				  ,cd_unidade_compl_p       => CD_UNIDADE_COMPL_w
				  ,cd_tipo_acomodacao_p     => NULL
				  ,nr_acompanhantes_p       => 0
				  ,nr_seq_motivo_transf_p   => NULL
				  ,ds_observacao_p          => NULL
				  ,nm_usuario_p             => wheb_usuario_pck.get_nm_usuario
				  ,dt_entrada_unidade_p     => clock_timestamp());
			  END IF;
		end if;
		
	end if;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE hd_atualiza_maq_agenda (nr_seq_agenda_p bigint, nr_seq_ponto_p bigint) FROM PUBLIC;

