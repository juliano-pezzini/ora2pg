-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE cpoe_gerar_rec_solu_medic (nr_atendimento_p bigint, cd_setor_atendimento_p bigint, nm_usuario_p text, cd_item_p bigint, cd_recomendacoes_p text, cd_perfil_p bigint, cd_estabelecimento_p bigint, ie_tipo_item_p text, ie_via_aplicacao_p text) AS $body$
DECLARE


cd_recomendacao_w		cpoe_recomendacao.cd_recomendacao%type;
cont_w					bigint;
nr_seq_topografia_w		bigint;
ie_se_necessario_w		varchar(1);
ie_acm_w				varchar(1);
nr_sequencia_w			bigint;
cd_intervalo_w			varchar(7);
cd_intervalo2_w			varchar(7);
cd_intervalo_ww			varchar(7);
ds_complemento_w		varchar(2000);
ie_urgencia_w			varchar(1);
ie_agora_w				varchar(1);

cRecomendacoes CURSOR FOR
SELECT	a.nr_registro cd_recomendacao
from	table(lista_pck.obter_lista(cd_recomendacoes_p)) a;

BEGIN

for r_cRecomendacoes in cRecomendacoes loop

	cd_recomendacao_w := r_cRecomendacoes.cd_recomendacao;

	select	nr_seq_topografia,
			ie_se_necessario,
			ie_acm,
			cd_intervalo,
			ie_urgencia
	into STRICT	nr_seq_topografia_w,
			ie_se_necessario_w,
			ie_acm_w,
			cd_intervalo_w,
			ie_urgencia_w
	from	rep_recomendacao_solucao
	where	(((cd_material		= cd_item_p) and (ie_tipo_item_p		in ('M','SOL'))) or
			(cd_dieta			= cd_item_p AND ie_tipo_item_p		= 'D'))
	and		cd_recomendacao		= cd_recomendacao_w
	and		cd_setor_atendimento = cd_setor_atendimento_p
	and		coalesce(ie_via_aplicacao,ie_via_aplicacao_p) = ie_via_aplicacao_p
	and		coalesce(ie_forma_lancamento,'L') = 'P';

	select	count(*)
	into STRICT	cont_w
	from	rep_recomendacao_solucao;

	if (cont_w	> 0) then

		select	cd_intervalo,
				ds_complemento
		into STRICT	cd_intervalo_ww,
				ds_complemento_w
		from	tipo_recomendacao
		where	cd_tipo_recomendacao = cd_recomendacao_w;
		
		if (ie_urgencia_w = 'S') and (cd_intervalo_w IS NOT NULL AND cd_intervalo_w::text <> '') then
			select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
			into STRICT	ie_agora_w
			from	intervalo_prescricao 
			where	cd_intervalo = cd_intervalo_w
			and		ie_agora = 'S';
			
			if (ie_agora_w = 'S') then
				cd_intervalo2_w := cd_intervalo_w;
			else
				select	max(cd_intervalo)
				into STRICT	cd_intervalo2_w
				from	intervalo_prescricao
				where	ie_agora = 'S'
				and		((coalesce(cd_estabelecimento::text, '') = '') or (cd_estabelecimento = cd_estabelecimento_p))
				and		Obter_se_intervalo(cd_intervalo,'R') = 'S' 
				and		ie_situacao = 'A';
			end if;
		elsif (ie_urgencia_w = 'S') then
			select	max(cd_intervalo)
			into STRICT	cd_intervalo2_w
			from	intervalo_prescricao
			where	ie_agora = 'S'
			and		((coalesce(cd_estabelecimento::text, '') = '') or (cd_estabelecimento = cd_estabelecimento_p))
			and		Obter_se_intervalo(cd_intervalo,'R') = 'S' 
			and		ie_situacao = 'A';
		elsif (cd_intervalo_w IS NOT NULL AND cd_intervalo_w::text <> '') then
			cd_intervalo2_w := cd_intervalo_w;
		else	
			cd_intervalo2_w := cd_intervalo_ww;
		end if;

		select	nextval('cpoe_recomendacao_seq')
		into STRICT	nr_sequencia_w
		;

		insert into cpoe_recomendacao(
					nr_atendimento,
					nr_sequencia,
					cd_recomendacao,
					dt_atualizacao,
					nm_usuario,
					ds_recomendacao,
					cd_intervalo,
					nr_seq_topografia,
					ie_se_necessario,
					ie_acm,
					ie_urgencia)
		values (
					nr_atendimento_p,
					nr_sequencia_w,
					cd_recomendacao_w,
					clock_timestamp(),
					nm_usuario_p,
					ds_complemento_w,
					coalesce(cd_intervalo2_w,cd_intervalo_ww),
					nr_seq_topografia_w,
					ie_se_necessario_w,
					ie_acm_w,
					ie_urgencia_w);
		commit;

	end if;

end loop;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE cpoe_gerar_rec_solu_medic (nr_atendimento_p bigint, cd_setor_atendimento_p bigint, nm_usuario_p text, cd_item_p bigint, cd_recomendacoes_p text, cd_perfil_p bigint, cd_estabelecimento_p bigint, ie_tipo_item_p text, ie_via_aplicacao_p text) FROM PUBLIC;

