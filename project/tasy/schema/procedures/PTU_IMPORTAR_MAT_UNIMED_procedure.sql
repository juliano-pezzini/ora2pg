-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ptu_importar_mat_unimed ( ds_conteudo_p text, nm_usuario_p text) AS $body$
DECLARE


ds_registro_w			varchar(3);
ds_segundo_segmento_w		varchar(255);
nr_seq_linha_w			smallint;
ie_tipo_w			smallint;
nr_seq_max_w			bigint;
nr_tamanho_linha_w		bigint;

cd_material_ww			varchar(8);
nr_cnpj_ww			varchar(14);
ds_origem_ww			varchar(1);
nr_registro_anvisa_ww		varchar(20);
ie_tipo_situacao_ww		varchar(1);

--'902'
cd_material_w			integer;
ds_fracao_produto_w		varchar(20);
nr_cnpj_w			varchar(14);
nm_fabricante_w			varchar(50);
nm_importador_w			varchar(50);
ds_origem_w			smallint;
nr_registro_anvisa_w		numeric(20);
ie_tipo_situacao_w		smallint;
ds_motivo_ati_inat_w		varchar(40);
vl_fabrica_w			double precision;
vl_max_consumidor_w		double precision;
dt_inicio_obrig_w		timestamp;

--tamanhos variáveis 902
nm_comercial_w			varchar(255);
ds_produto_w			varchar(255);
ds_especialidade_w		varchar(255);
ds_class_w			varchar(255);
ds_apresentacao_w		varchar(255);

--'905'
cd_medicamento_w		integer;
dt_validade_anvisa_w		timestamp;
vl_fator_conversao_w		integer;
ie_ind_generico_w		varchar(1);

--tamanhos variáveis 905
ds_principio_ativo_w		varchar(255);
nm_apres_comercial_w		varchar(255);
ds_grau_farma_w			varchar(255);
ds_cla_farma_w			varchar(255);
ds_for_farma_w			varchar(255);


BEGIN



/*obter o tipo de registro*/

select	length(ds_conteudo_p)
into STRICT	nr_tamanho_linha_w
;

if (nr_tamanho_linha_w <= 9) then
	ds_registro_w	:= 'seg';
else
	ds_registro_w	:=	substr(ds_conteudo_p,9,3);
end if;

if (ds_registro_w	= '902') then

	--apagar registros contidos na tabela temporaria
	delete  FROM w_ptu_material_unimed;

	select	CASE WHEN substr(ds_conteudo_p,12,8)='0' THEN ''  ELSE substr(ds_conteudo_p,12,8) END ,
		CASE WHEN substr(ds_conteudo_p,30,14)='0' THEN ''  ELSE substr(ds_conteudo_p,30,14) END ,
		CASE WHEN substr(ds_conteudo_p,144,1)='0' THEN ''  ELSE substr(ds_conteudo_p,144,1) END ,
		CASE WHEN substr(ds_conteudo_p,145,20)='0' THEN ''  ELSE substr(ds_conteudo_p,145,20) END ,
		CASE WHEN substr(ds_conteudo_p,173,1)='0' THEN ''  ELSE substr(ds_conteudo_p,173,1) END
	into STRICT	cd_material_ww,
		nr_cnpj_ww,
		ds_origem_ww,
		nr_registro_anvisa_ww,
		ie_tipo_situacao_ww
	;

	ds_fracao_produto_w 	:= trim(both substr(ds_conteudo_p,20,10));
	nm_fabricante_w		:= trim(both substr(ds_conteudo_p,44,50));
	nm_importador_w		:= trim(both substr(ds_conteudo_p,94,50));
	ds_motivo_ati_inat_w	:= trim(both substr(ds_conteudo_p,174,40));
	dt_inicio_obrig_w	:= to_date(substr(ds_conteudo_p,250,2)||substr(ds_conteudo_p,248,2)||substr(ds_conteudo_p,244,4), 'dd/mm/yyyy');

	select	(CASE WHEN cd_material_ww=' ' THEN 0  ELSE cd_material_ww END )::numeric ,
		(CASE WHEN nr_cnpj_ww=' ' THEN 0  ELSE nr_cnpj_ww END )::numeric ,
		(CASE WHEN ds_origem_ww=' ' THEN 0  ELSE ds_origem_ww END )::numeric ,
		(CASE WHEN nr_registro_anvisa_ww=' ' THEN 0  ELSE nr_registro_anvisa_ww END )::numeric ,
		(CASE WHEN ie_tipo_situacao_ww=' ' THEN 0  ELSE ie_tipo_situacao_ww END )::numeric
	into STRICT	cd_material_w,
		nr_cnpj_w,
		ds_origem_w,
		nr_registro_anvisa_w,
		ie_tipo_situacao_w
	;

	insert into w_ptu_material_unimed(nr_sequencia,cd_material, nr_seq_linha, ds_segundo_segmento, ie_tipo, dt_atualizacao, nm_usuario)
	values (nextval('w_ptu_material_unimed_seq'),cd_material_w, 0, ' ', ds_registro_w, clock_timestamp(), nm_usuario_p);

	CALL pls_importar_material_unimed(cd_material_w, ds_fracao_produto_w, ds_origem_w, null, 902, ie_tipo_situacao_w,
	nr_cnpj_w, nm_fabricante_w, nm_importador_w, nr_registro_anvisa_w, ds_motivo_ati_inat_w, null, null,
	null, null, null, dt_inicio_obrig_w, null, null, null, null, null, null, null, null, null, null, null, nm_usuario_p);

elsif (ds_registro_w = '905') then

	--apagar registros contidos na tabela temporaria
	delete  FROM w_ptu_material_unimed;

	select	CASE WHEN (substr(ds_conteudo_p,12,8))::numeric =0 THEN '0'  ELSE (substr(ds_conteudo_p,12,8))::numeric  END ,
		CASE WHEN (substr(ds_conteudo_p,30,20))::numeric =0 THEN '0'  ELSE (substr(ds_conteudo_p,30,20))::numeric  END ,
		CASE WHEN (substr(ds_conteudo_p,58,14))::numeric =0 THEN '0'  ELSE (substr(ds_conteudo_p,58,14))::numeric  END ,
		CASE WHEN (substr(ds_conteudo_p,72,1))::numeric =0 THEN '0'  ELSE (substr(ds_conteudo_p,72,1))::numeric  END ,
		CASE WHEN (substr(ds_conteudo_p,113,1))::numeric =0 THEN '0'  ELSE (substr(ds_conteudo_p,113,1))::numeric  END ,
		CASE WHEN (substr(ds_conteudo_p,114,5))::numeric =0 THEN '0'  ELSE (substr(ds_conteudo_p,114,5))::numeric  END
	into STRICT	cd_medicamento_w,
		nr_registro_anvisa_w,
		nr_cnpj_w,
		ie_tipo_situacao_w,
		ds_origem_w,
		vl_fator_conversao_w
	;

	ds_fracao_produto_w		:= trim(both substr(ds_conteudo_p,20,10));
	ds_motivo_ati_inat_w		:= trim(both substr(ds_conteudo_p,73,40));
	ie_ind_generico_w		:= trim(both substr(ds_conteudo_p,119,1));
	dt_inicio_obrig_w		:= to_date(substr(ds_conteudo_p,126,2)||substr(ds_conteudo_p,124,2)||substr(ds_conteudo_p,120,4),'dd/mm/yyyy');

	insert into w_ptu_material_unimed(nr_sequencia,cd_material, nr_seq_linha, ds_segundo_segmento, ie_tipo, dt_atualizacao, nm_usuario)
	values (nextval('w_ptu_material_unimed_seq'),cd_medicamento_w, 0, ' ',ds_registro_w , clock_timestamp(), nm_usuario_p);

	CALL pls_importar_material_unimed(cd_medicamento_w, ds_fracao_produto_w, ds_origem_w, null, 905,
	ie_tipo_situacao_w, nr_cnpj_w, null, null, nr_registro_anvisa_w, ds_motivo_ati_inat_w,
	null, null, null, nm_apres_comercial_w, ie_ind_generico_w, dt_inicio_obrig_w,
	null, null, null, null, null, null, null, null, null, null, null,nm_usuario_p);

elsif	((ds_registro_w <> '901') and (ds_registro_w <> '906') and (ds_registro_w <> '909') and (ds_registro_w <> 'FIM$')) or (ds_registro_w = 'seg') then

	ds_segundo_segmento_w	:= trim(both substr(ds_conteudo_p,1,255));

	select	max(nr_sequencia)
	into STRICT	nr_seq_max_w
	from	w_ptu_material_unimed;

	select	cd_material,
		ie_tipo,
		nr_seq_linha
	into STRICT	cd_material_w,
		ie_tipo_w,
		nr_seq_linha_w
	from	w_ptu_material_unimed
	where	nr_sequencia	=	nr_seq_max_w;

	nr_seq_linha_w := nr_seq_linha_w + 1;

	/*insere na tabala secundaria*/

	insert into w_ptu_material_unimed(nr_sequencia,cd_material, nr_seq_linha, ds_segundo_segmento, ie_tipo, dt_atualizacao, nm_usuario)
	values (nextval('w_ptu_material_unimed_seq'),cd_material_w, nr_seq_linha_w, ds_segundo_segmento_w, ie_tipo_w, clock_timestamp(), nm_usuario_p);

	/*verifica qual é o tipo do produto para lançar para os campos determinados da tabela quente.*/

	if (ie_tipo_w = 902) then
		if (nr_seq_linha_w = 1) then
			update	pls_material_unimed
			set	nm_material = ds_segundo_segmento_w
			where	cd_material = cd_material_w
			and	ie_tipo = ie_tipo_w;
		elsif (nr_seq_linha_w = 2) then
			update	pls_material_unimed
			set	ds_material = ds_segundo_segmento_w
			where	cd_material = cd_material_w
			and	ie_tipo = ie_tipo_w;
		elsif (nr_seq_linha_w = 3) then
			update pls_material_unimed
			set	ds_especialidade = ds_segundo_segmento_w
			where	cd_material = cd_material_w
			and	ie_tipo = ie_tipo_w;
		elsif (nr_seq_linha_w = 4) then
			update pls_material_unimed
			set	ds_classe = ds_segundo_segmento_w
			where	cd_material = cd_material_w
			and	ie_tipo = ie_tipo_w;
		elsif (nr_seq_linha_w = 5) then
			update pls_material_unimed
			set	ds_apresentacao = ds_segundo_segmento_w
			where	cd_material = cd_material_w
			and	ie_tipo = ie_tipo_w;
		end if;
	elsif (ie_tipo_w = 905) then
		if (nr_seq_linha_w = 1) then
			update pls_material_unimed
			set	ds_principio_ativo = ds_segundo_segmento_w
			where	cd_material = cd_material_w
			and	ie_tipo = ie_tipo_w;
		elsif (nr_seq_linha_w = 2) then
			update pls_material_unimed
			set	nm_material = ds_segundo_segmento_w
			where	cd_material = cd_material_w
			and	ie_tipo = ie_tipo_w;
		elsif (nr_seq_linha_w = 3) then
			update pls_material_unimed
			set	ds_grupo_farmacologico = ds_segundo_segmento_w
			where	cd_material = cd_material_w
			and	ie_tipo = ie_tipo_w;
		elsif (nr_seq_linha_w = 4) then
			update pls_material_unimed
			set	ds_classe_farmacologico = ds_segundo_segmento_w
			where	cd_material = cd_material_w
			and	ie_tipo = ie_tipo_w;
		elsif (nr_seq_linha_w = 5) then
			update pls_material_unimed
			set	ds_forma_farmaceutico = ds_segundo_segmento_w
			where	cd_material = cd_material_w
			and	ie_tipo = ie_tipo_w;
		elsif (nr_seq_linha_w = 6) then
			update pls_material_unimed
			set	nm_fabricante = ds_segundo_segmento_w
			where	cd_material = cd_material_w
			and	ie_tipo = ie_tipo_w;
		end if;
	end if;
end if;

commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_importar_mat_unimed ( ds_conteudo_p text, nm_usuario_p text) FROM PUBLIC;

