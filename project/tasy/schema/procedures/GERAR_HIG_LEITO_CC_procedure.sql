-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_hig_leito_cc (dt_servico_p timestamp, nm_usuario_p text, cd_estabelecimento_p bigint, ie_evento_p text, cd_motivo_alta_p bigint, nr_atendimento_p bigint, cd_tipo_acomod_transf_p bigint default null, nr_seq_evento_cirur_p bigint DEFAULT NULL, ie_alterar_status_p text default null) AS $body$
DECLARE




nr_seq_servico_w				bigint;
ie_dia_semana_w					smallint;
dt_prevista_w					timestamp;
nr_seq_unidade_w				bigint;
cd_setor_atendimento_w			integer;
ie_status_unidade_w				varchar(3);
ie_executor_w					varchar(15);
ie_cancela_alta_w				varchar(1);
qt_minuto_adic_w				bigint;
cd_estabelecimento_w			bigint;
nr_seq_regra_servico_w			bigint;
qt_regra_w				        bigint;
qt_horas_novo_servico_w			smallint;
ie_gerar_servico_w			    varchar(1);
nr_seq_serv_cancelamento_w 		bigint;
nr_sequencia_w				    bigint;
cd_classif_setor_w	        	varchar(2);
ie_sem_acomod_w					varchar(1);
ie_hig_leito_ant_w				varchar(1);
ie_gerou_nome_reg_w				varchar(1);
dt_entrada_unid_w				timestamp;
dt_saida_unid_w					timestamp;
cd_setor_atend_w				integer;
cd_tipo_acomodacao_w			smallint;
ie_setor_cc_w					varchar(1);
nr_seq_unidade_cc_w				bigint;
cd_setor_atendimento_cc_w		integer;
ie_higienizacao_w		varchar(1);
ie_tipo_acomod_w			varchar(1);
ie_status_leito_destino_w	varchar(15);

c01 CURSOR FOR
	SELECT	a.nr_sequencia,
			a.nr_seq_servico,
			ESTABLISHMENT_TIMEZONE_UTILS.dateAtTime(dt_servico_p, coalesce(a.dt_prevista, clock_timestamp())),
			coalesce(qt_minuto_adic,0),
			coalesce(qt_horas_novo_servico,0),
			coalesce(ie_setor_cc,'N'),
			coalesce(a.ie_status_leito_destino,'XPTO')
	from		sl_servico b,
			sl_regra_servico a
	where		((a.nr_seq_unidade		=	nr_seq_unidade_w) 	or (coalesce(a.nr_seq_unidade::text, '') = ''))
	and		((a.cd_tipo_acomodacao = cd_tipo_acomodacao_w) or (coalesce(cd_tipo_acomodacao::text, '') = ''))
	and 		obter_se_unid_regra(a.nr_sequencia, nr_seq_unidade_w) = 'S'
	and		((a.cd_setor_atendimento	=	cd_setor_atendimento_w) or (coalesce(a.cd_setor_atendimento::text, '') = ''))
	and		((a.cd_classif_setor		= 	cd_classif_setor_w)     or (coalesce(a.cd_classif_setor::text, '') = ''))
	and		((a.ie_status_leito		=	ie_status_unidade_w) 	or (coalesce(a.ie_status_leito::text, '') = ''))
	and		((a.ie_dia_semana		=	ie_dia_semana_w) or
			(a.ie_dia_semana = 9 AND ie_dia_semana_w between 2 and 6) or (coalesce(a.ie_dia_semana::text, '') = ''))
	and		((a.nr_dia_mes			=	campo_numerico(to_char(establishment_timezone_utils.startofday(dt_servico_p),'dd'))) or (coalesce(a.nr_dia_mes::text, '') = ''))
	and	((ie_higienizacao_w <> 'N') or (coalesce(a.ie_considera_estrutura, 'N') = 'N'))
	and		a.ie_evento			=	ie_evento_p
	and		a.cd_estabelecimento		=	cd_estabelecimento_w
	and		a.nr_seq_servico		=	b.nr_sequencia
	and		obter_se_gerar_regra_serv(a.DT_INICIO_FREQUENCIA, a.IE_FREQUENCIA, dt_servico_p) = 'S'
	and		b.ie_situacao			=	'A'
	and		a.nr_seq_evento_cirur		=	nr_seq_evento_cirur_p
	and	((ie_status_unidade_w <> 'P') or (Verifica_estadia_higienizacao(nr_atendimento_p, nr_seq_unidade_w, a.qt_estadia_leito) = 'S'))
	and not exists (SELECT  1
	                        from    sl_regra_servico_excecao x
		        where  x.cd_setor_atendimento = cd_setor_atendimento_w
		        and      x.nr_seq_sl_regra_servico = a.nr_sequencia);

c02 CURSOR FOR
	SELECT	nr_seq_servico_canc
	from	sl_servico_regra_canc
	where	ie_situacao = 'A'
	and	nr_seq_servico = nr_seq_servico_w;

C03 CURSOR FOR
	SELECT  cd_setor_atendimento,
			dt_entrada_unidade,
			dt_saida_unidade
	FROM    atend_paciente_unidade
	WHERE   nr_atendimento = nr_atendimento_p;


BEGIN

if (coalesce(cd_estabelecimento_p::text, '') = '') then
	select	cd_estabelecimento
	into STRICT	cd_estabelecimento_w
	from 	atendimento_paciente
	where	nr_atendimento		= nr_atendimento_p;
else
	cd_estabelecimento_w		:= cd_estabelecimento_p;
end if;

ie_tipo_acomod_w := Obter_param_Usuario(75, 104, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_tipo_acomod_w);

begin

select	e.nr_seq_interno,
		e.cd_setor_atendimento,
		e.ie_status_unidade,
		a.cd_classif_setor,
		CASE WHEN ie_tipo_acomod_w='S' THEN  c.cd_tipo_acomodacao  ELSE e.cd_tipo_acomodacao END ,
		e.ie_higienizacao
into STRICT	nr_seq_unidade_w,
		cd_setor_atendimento_w,
		ie_status_unidade_w,
		cd_classif_setor_w,
		cd_tipo_acomodacao_w,
		ie_higienizacao_w
from	setor_atendimento a,
		atend_paciente_unidade c,
		unidade_atendimento e
where	e.cd_setor_atendimento	= c.cd_setor_atendimento
and		e.cd_unidade_basica	= c.cd_unidade_basica
and		e.cd_unidade_compl	= c.cd_unidade_compl
and		a.cd_setor_atendimento	= e.cd_setor_atendimento
and		a.cd_estabelecimento	= cd_estabelecimento_w
and		c.nr_seq_interno	=
       (		SELECT	coalesce(max(x.nr_seq_interno),0)
				from	atend_paciente_unidade x
				where	x.nr_atendimento 		= nr_atendimento_p
				and 	coalesce(x.dt_saida_unidade, x.dt_entrada_unidade + 9999)	=
						(	SELECT	max(coalesce(t.dt_saida_unidade, t.dt_entrada_unidade + 9999))
							from	Setor_Atendimento y,
								atend_paciente_unidade t
							where 	nr_atendimento 	= nr_atendimento_p
							and	t.cd_setor_atendimento	= y.cd_setor_atendimento
							and	y.cd_classif_setor in (2,3,4,8)));




exception
	when others then
		nr_seq_unidade_w := null;
end;

open C03;
loop
fetch C03 into
	cd_setor_atend_w,
	dt_entrada_unid_w,
	dt_saida_unid_w;
EXIT WHEN NOT FOUND; /* apply on C03 */
	begin
	insert into log_mov(nm_usuario,
					dt_atualizacao,
					cd_log,
					ds_log)
			values (nm_usuario_p,
					clock_timestamp(),
					9141,
					substr('1 - nr_atendimento: ' || nr_atendimento_p || chr(13) ||
			      ' ie_evento_p: ' || ie_evento_p || chr(13) ||
			      ' cd_setor_atendimento_w: ' || cd_setor_atend_w || chr(13) ||
			      ' dt_entrada_unid_w: ' || PKG_DATE_FORMATERS_TZ.TO_VARCHAR(dt_entrada_unid_w,'timestamp',ESTABLISHMENT_TIMEZONE_UTILS.gettimezone)  || chr(13) ||
			      ' dt_saida_unid_w: ' || PKG_DATE_FORMATERS_TZ.TO_VARCHAR(dt_saida_unid_w,'timestamp',ESTABLISHMENT_TIMEZONE_UTILS.gettimezone),1,2000));
	end;
end loop;
close C03;

insert into log_mov(nm_usuario,
		dt_atualizacao,
		cd_log,
		ds_log)
values (nm_usuario_p,
		clock_timestamp(),
		88944,
		substr('1 - nr_atendimento: ' || nr_atendimento_p || chr(13) ||
				'nr_seq_unidade_w: ' || nr_seq_unidade_w || chr(13) ||
				'cd_setor_atendimento_w: ' || cd_setor_atendimento_w || chr(13) ||
				'dt_servico_p: ' || dt_servico_p || chr(13) ||
				'ie_evento_p: ' || ie_evento_p,1,2000));

select pkg_date_utils.get_WeekDay(dt_servico_p)
into STRICT	ie_dia_semana_w
;

if (nr_seq_unidade_w IS NOT NULL AND nr_seq_unidade_w::text <> '') then


OPEN C01;
LOOP
FETCH C01 into
		nr_seq_regra_servico_w,
		nr_seq_servico_w,
		dt_prevista_w,
		qt_minuto_adic_w,
		qt_horas_novo_servico_w,
		ie_setor_cc_w,
		ie_status_leito_destino_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin


	OPEN C02;
	LOOP
	FETCH C02 into
		nr_seq_serv_cancelamento_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin

		update	sl_unid_atend
		set  	ie_status_serv = 'C'
		where	nr_seq_unidade	= nr_seq_unidade_w
		and  	nr_seq_servico	= nr_seq_serv_cancelamento_w
		and		coalesce(dt_inicio::text, '') = ''
		and		establishment_timezone_utils.startofday(dt_prevista) = establishment_timezone_utils.startofday(dt_prevista_w);

		end;
	end loop;
	close c02;

	select	ie_executor,
			ie_cancela_alta
	into STRICT	ie_executor_w,
			ie_cancela_alta_w
	from	sl_servico
	where	nr_sequencia		= nr_seq_servico_w;

	qt_regra_w	:= 0;

	if (ie_evento_p = 'AP') then

		select 	count(*)
		into STRICT	qt_regra_w
		from	sl_regra_geracao_alta
		where	cd_motivo_alta = cd_motivo_alta_p
		and		ie_gerar_servico_leito = 'N'
		and		coalesce(nr_regra_servico,nr_seq_regra_servico_w) = nr_seq_regra_servico_w;

	end if;

	ie_gerar_servico_w	:= 'S';

	if (qt_horas_novo_servico_w > 0) then

		select 	CASE WHEN count(*)=0 THEN 'S'  ELSE 'N' END
		into STRICT	ie_gerar_servico_w
		from	sl_unid_atend
		where	nr_seq_unidade	= nr_seq_unidade_w
		and		nr_seq_servico	= nr_seq_servico_w
		and		dt_prevista > (dt_prevista_w - (qt_horas_novo_servico_w/24))
		and		coalesce(dt_inicio::text, '') = '';

	end if;

	if (ie_cancela_alta_w = 'S') and (ie_evento_p = 'AP' or ie_evento_p = 'AR') then

		update	sl_unid_atend
		set  	ie_status_serv = 'C'
		where	nr_seq_unidade	= nr_seq_unidade_w
		and		nr_seq_servico	= nr_seq_servico_w
		and		coalesce(dt_inicio::text, '') = ''
		and		establishment_timezone_utils.startofday(dt_prevista) = establishment_timezone_utils.startofday(dt_prevista_w);

		/*delete	from sl_unid_atend
		where	nr_seq_unidade	= nr_seq_unidade_w
		and	nr_seq_servico	= nr_seq_servico_w
		and	dt_inicio is null
		and	trunc(dt_prevista) = trunc(dt_prevista_w);*/
		--and	dt_prevista > dt_prevista_w;
	end if;


	if (qt_regra_w = 0) and (ie_gerar_servico_w = 'S') then

		select	nextval('sl_unid_atend_seq')
		into STRICT	nr_sequencia_w
		;

		ie_hig_leito_ant_w := Obter_Valor_Param_Usuario(3111,146, obter_perfil_ativo, nm_usuario_p,0);

		ie_sem_acomod_w := 'N';



		if (ie_setor_cc_w = 'S')	then

				select	max(e.nr_seq_interno),
					max(e.cd_setor_atendimento)
				into STRICT	nr_seq_unidade_cc_w,
						cd_setor_atendimento_cc_w
				from	setor_atendimento a,
						atend_paciente_unidade c,
						unidade_atendimento e
				where	e.cd_setor_atendimento	= c.cd_setor_atendimento
				and		e.cd_unidade_basica	= c.cd_unidade_basica
				and		e.cd_unidade_compl	= c.cd_unidade_compl
				and		a.cd_setor_atendimento	= e.cd_setor_atendimento
				and		a.cd_estabelecimento	= cd_estabelecimento_w
				and		c.nr_seq_interno	=
					   (		SELECT	coalesce(max(x.nr_seq_interno),0)
								from	atend_paciente_unidade x
								where	x.nr_atendimento 		= nr_atendimento_p
								and 	coalesce(x.dt_saida_unidade, x.dt_entrada_unidade + 9999)	=
										(	SELECT	max(coalesce(t.dt_saida_unidade, t.dt_entrada_unidade + 9999))
											from	Setor_Atendimento y,
												atend_paciente_unidade t
											where 	nr_atendimento 	= nr_atendimento_p
											and	t.cd_setor_atendimento	= y.cd_setor_atendimento
											and	y.cd_classif_setor = 2));

					if (coalesce(nr_seq_unidade_cc_w,0) > 0) 	then

						cd_setor_atendimento_w	:= cd_setor_atendimento_cc_w;
						nr_seq_unidade_w		:=	nr_seq_unidade_cc_w;

					end if;
			end if;


		if (ie_hig_leito_ant_w = 'N') then

			if (cd_tipo_acomod_transf_p IS NOT NULL AND cd_tipo_acomod_transf_p::text <> '') then
				select	coalesce(ie_sem_acomodacao,'N')
				into STRICT	ie_sem_acomod_w
				from	tipo_acomodacao
				where	cd_tipo_acomodacao = cd_tipo_acomod_transf_p;
			end if;
			--insert into vieira (cd_tipo_acomod_transf_p || ' ' || ie_sem_acomod_w );
		else
			ie_sem_acomod_w := 'N';
		end if;

		ie_gerou_nome_reg_w := 'N';

		if (ie_sem_acomod_w = 'N') then

		insert into sl_unid_atend(
				nr_sequencia,
				cd_estabelecimento,
				nr_seq_unidade,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				ie_status_serv,
				nr_seq_servico,
				dt_prevista,
				ie_executor,
				ie_evento,
				cd_setor_higienizacao)
			values(
				nr_sequencia_w,
				cd_estabelecimento_W,
				nr_seq_unidade_w,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				'P',
				nr_seq_servico_w,
				dt_prevista_w + (qt_minuto_adic_w / 1440),
				ie_executor_w,
				ie_evento_p,
				cd_setor_atendimento_w);
			
			if (ie_alterar_status_p = 'S') and (ie_status_leito_destino_w <> 'XPTO') then
					begin
					update unidade_atendimento
					set	ie_status_unidade =	ie_status_leito_destino_w
					where nr_seq_interno = nr_seq_unidade_w
					and (ie_status_unidade <> 'P' or cd_classif_setor_w = 2);
					end;			
			end if;
		
			ie_gerou_nome_reg_w :=	'S';

		CALL gravar_historico_higienizacao(nm_usuario_p,ie_evento_p,nr_seq_regra_servico_w,nr_seq_servico_w,clock_timestamp(),cd_setor_atendimento_w,nr_sequencia_w);
		end if;

		if (ie_gerou_nome_reg_w = 'N') then -- OS 462270
			insert into log_mov(nm_usuario,
					dt_atualizacao,
					cd_log,
					ds_log)
			values (nm_usuario_p,
					clock_timestamp(),
					88944,
					substr('2 - nr_atendimento: ' || nr_atendimento_p || chr(13) ||
							'nr_seq_unidade_w: ' || nr_seq_unidade_w || chr(13) ||
							'cd_setor_atendimento_w: ' || cd_setor_atendimento_w || chr(13) ||
							'dt_servico_p: ' || dt_servico_p || chr(13) ||
							'ie_status_leito_destino_w => ' || ie_status_leito_destino_w || '; ' || chr(10) ||
							'ie_evento_p: ' || ie_evento_p,1,2000));

		end if;

	end if;
	end;

END LOOP;
CLOSE C01;

end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_hig_leito_cc (dt_servico_p timestamp, nm_usuario_p text, cd_estabelecimento_p bigint, ie_evento_p text, cd_motivo_alta_p bigint, nr_atendimento_p bigint, cd_tipo_acomod_transf_p bigint default null, nr_seq_evento_cirur_p bigint DEFAULT NULL, ie_alterar_status_p text default null) FROM PUBLIC;

