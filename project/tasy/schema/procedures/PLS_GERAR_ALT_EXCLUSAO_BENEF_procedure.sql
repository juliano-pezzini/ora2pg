-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_alt_exclusao_benef ( nr_seq_lote_p bigint, ie_tipo_operacao_p text, cd_estabelecimento_p bigint, nm_usuario_p text, ie_commit_p text default 'S') AS $body$
DECLARE


nr_seq_contrato_w		bigint;
nr_seq_inclusao_benef_w		bigint;
cd_usuario_plano_w		varchar(30);
nr_seq_motivo_cancelamento_w	bigint;
nr_seq_segurado_w		bigint;
dt_solicitacao_w		timestamp;
ds_observacao_w			varchar(255);
ds_erro_w			varchar(255);
ie_consistir_sib_w		varchar(1);
nr_seq_carteira_w		bigint;
nr_seq_motivo_via_adic_w	bigint;
cd_pessoa_fisica_w		varchar(10);
nm_pessoa_fisica_w		varchar(60);
ie_sexo_w			varchar(1);
ie_estado_civil_w		varchar(2);
nr_identidade_w			varchar(15);
nr_cpf_w			varchar(11);
dt_nascimento_w			timestamp;
nm_mae_w			varchar(60);
ds_endereco_w			compl_pessoa_fisica.ds_endereco%type;
ds_bairro_w			compl_pessoa_fisica.ds_bairro%type;
ds_municipio_w			varchar(255);
sg_estado_w			pls_inclusao_beneficiario.sg_estado%type;
cd_cep_w			compl_pessoa_fisica.cd_cep%type;
ds_email_w			compl_pessoa_fisica.ds_email%type;
nr_ddd_telefone_w		varchar(3);
nr_telefone_w			varchar(15);
nr_ddd_celular_w		varchar(3);
nr_telefone_celular_w		varchar(40);
ds_endereco_corresp_w		varchar(255);
ds_bairro_corresp_w		varchar(100);
ds_municipio_corresp_w		varchar(100);
sg_uf_corresp_w			valor_dominio.vl_dominio%type;
cd_cep_corresp_w		varchar(15);
ds_email_corresp_w		varchar(255);
nr_ddd_telefone_corresp_w	varchar(3);
nr_telefone_corresp_w		varchar(15);
nr_ddd_fax_corresp_w		varchar(3);
nr_fax_corresp_w		varchar(80);
nr_pis_pasep_w			varchar(15);
ie_endereco_correspondencia_w	smallint;
nm_pessoa_fisica_old_w		varchar(60);
ie_sexo_old_w			varchar(1);
ie_estado_civil_old_w		varchar(2);
nr_identidade_old_w		varchar(15);
nr_cpf_old_w			varchar(11);
nr_pis_pasep_old_w		varchar(15);
dt_nascimento_old_w		timestamp;
nr_ddd_celular_old_w		varchar(3);
nr_telefone_celular_old_w	varchar(40);
dt_rescisao_w			timestamp;
dt_importacao_arquivo_w		timestamp;
nr_seq_congenere_atend_w	bigint;
nr_seq_repasse_ant_w		bigint;
ie_preco_w			varchar(2);
ie_tipo_repasse_w		varchar(1);
nr_seq_intercambio_w		bigint;
nr_seq_plano_w			bigint;
nr_seq_emissor_w		bigint;
nr_seq_congenere_cobr_w		bigint;
nr_seq_congenere_atual_w	bigint;
nr_seq_segurado_repasse_w	bigint;
nr_certidao_obito_w		varchar(255);
dt_obito_w			timestamp;
nr_seq_contrato_ww		bigint;
nr_seq_intercambio_ww		bigint;
nr_seq_ordem_w			bigint;
nr_seq_motivo_susp_w		bigint;
qt_registros_w			bigint;
nr_seq_seg_suspensao_w		bigint;
cd_declaracao_nasc_vivo_w	varchar(255);
nr_cartao_nac_sus_w		varchar(255);
cd_declaracao_nasc_vivo_old_w	varchar(255);
nr_cartao_nac_sus_old_w		varchar(255);
ds_endereco_old_w		compl_pessoa_fisica.ds_endereco%type;
ds_bairro_old_w			compl_pessoa_fisica.ds_bairro%type;
ds_municipio_old_w		varchar(255);
sg_estado_old_w			compl_pessoa_fisica.sg_estado%type;
cd_cep_old_w			varchar(15);
ds_email_old_w			varchar(255);
nr_ddd_telefone_old_w		varchar(3);
nr_telefone_old_w		varchar(15);
cd_municipio_ibge_old_w		varchar(10);
cd_municipio_ibge_w		varchar(10);
qt_reg_complemto_w		bigint;
nm_pai_old_w			varchar(255);
nm_mae_old_w			varchar(255);
nm_pai_w			varchar(255);
ie_situacao_w			pls_lote_inclusao_benef.ie_situacao%type;
ie_solicitacao_rescisao_w	varchar(1);
ie_recisao_ultimo_dia_mes_w	varchar(1);
nr_protocolo_atend_w		pls_protocolo_atendimento.nr_protocolo%type;
nr_seq_solicitacao_w		pls_solicitacao_rescisao.nr_sequencia%type;
ie_forma_envio_w		varchar(1);
nr_ddi_celular_w		compl_pessoa_fisica.nr_ddi_celular%type;
tb_ie_acao_w			pls_util_cta_pck.t_varchar2_table_1;
sg_estado_nasc_w		pls_inclusao_beneficiario.sg_estado_nasc%type;
sg_estado_nasc_old_w		pessoa_fisica.sg_estado_nasc%type;
nm_social_w			pls_inclusao_beneficiario.nm_social%type;
nm_social_old_w			pessoa_fisica.nm_social%type;
cd_cbo_w			pls_inclusao_beneficiario.cd_cbo%type;
cd_cbo_old_w			pessoa_fisica.cd_cbo_sus%type;
cd_municipio_ibge_nasc_w	pls_inclusao_beneficiario.cd_municipio_ibge_nasc%type;
cd_municipio_ibge_nasc_old_w	pessoa_fisica.cd_municipio_ibge%type;
cd_nacionalidade_old_w		pessoa_fisica.cd_nacionalidade%type;
cd_nacionalidade_w		pls_inclusao_beneficiario.cd_nacionalidade%type;
dt_emissao_ci_w			pls_inclusao_beneficiario.dt_emissao_ci%type;
dt_emissao_ci_old_w		pessoa_fisica.dt_emissao_ci%type;
sg_emissora_ci_w		pls_inclusao_beneficiario.sg_emissora_ci%type;
sg_emissora_ci_old_w		pessoa_fisica.sg_emissora_ci%type;
nr_seq_pais_w			pls_inclusao_beneficiario.nr_seq_pais%type;
nr_seq_pais_old_w		pessoa_fisica.nr_seq_pais%type;
ds_orgao_emissor_ci_w		pls_inclusao_beneficiario.ds_orgao_emissor_ci%type;
ds_orgao_emissor_ci_old_w	pessoa_fisica.ds_orgao_emissor_ci%type;
nr_reg_geral_estrang_w		pls_inclusao_beneficiario.nr_reg_geral_estrang%type;
nr_reg_geral_estrang_old_w	pessoa_fisica.nr_reg_geral_estrang%type;
nr_ctps_w			pls_inclusao_beneficiario.nr_ctps%type;
nr_ctps_old_w			pessoa_fisica.nr_ctps%type;
nr_serie_ctps_w			pls_inclusao_beneficiario.nr_serie_ctps%type;
nr_serie_ctps_old_w		pessoa_fisica.nr_serie_ctps%type;
uf_emissora_ctps_w		pls_inclusao_beneficiario.uf_emissora_ctps%type;
uf_emissora_ctps_old_w		pessoa_fisica.uf_emissora_ctps%type;
nr_cert_casamento_w		pls_inclusao_beneficiario.nr_cert_casamento%type;
nr_cert_casamento_old_w		pessoa_fisica.nr_cert_casamento%type;
dt_emissao_cert_casamento_w	pls_inclusao_beneficiario.dt_emissao_cert_casamento%type;
dt_emissao_cert_casament_old_w	pessoa_fisica.dt_emissao_cert_casamento%type;
nr_titulo_eleitor_w		pls_inclusao_beneficiario.nr_titulo_eleitor%type;
nr_titulo_eleitor_old_w		pessoa_fisica.nr_titulo_eleitor%type;
dt_adocao_w			pls_inclusao_beneficiario.dt_adocao%type;
dt_adocao_old_w			pessoa_fisica.dt_adocao%type;
nm_abreviado_w			varchar(255);
nm_abreviado_old_w		varchar(255);
nr_fax_w			pls_inclusao_beneficiario.nr_fax%type;
nr_fax_old_w			compl_pessoa_fisica.ds_fax%type;
nr_ddd_fax_w			pls_inclusao_beneficiario.nr_ddd_fax%type;
nr_ddd_fax_old_w		compl_pessoa_fisica.nr_ddd_fax%type;
nr_ddi_telefone_w		pls_inclusao_beneficiario.nr_ddi_telefone%type;
nr_ddi_telefone_old_w		compl_pessoa_fisica.nr_ddi_telefone%type;
nr_endereco_w			pls_inclusao_beneficiario.nr_endereco%type;
nr_endereco_old_w		compl_pessoa_fisica.nr_endereco%type;
ds_complemento_w		pls_inclusao_beneficiario.ds_complemento%type;
ds_complemento_old_w		compl_pessoa_fisica.ds_complemento%type;
cd_tipo_logradouro_w		pls_inclusao_beneficiario.cd_tipo_logradouro%type;
cd_tipo_logradouro_old_w	compl_pessoa_fisica.cd_tipo_logradouro%type;
nr_seq_reinclusao_benef_w	pls_reinclusao_benef.nr_sequencia%type;

--Exclusoes
C01 CURSOR FOR
	SELECT	nr_sequencia,
		nm_pessoa_fisica,
		cd_usuario_plano,
		nr_seq_motivo_cancelamento,
		coalesce(dt_rescisao,coalesce(dt_solicitacao,clock_timestamp())),
		substr(ds_observacao,1,255),
		nr_seq_segurado,
		nr_certidao_obito,
		dt_obito,
		dt_rescisao
	from	pls_inclusao_beneficiario
	where	nr_seq_lote_inclusao	= nr_seq_lote_p
	and	coalesce(ie_tipo_operacao,'I')	= 'E'
	and	ie_tipo_operacao_p		= 'E';

--2 via carteirinha
C02 CURSOR FOR
	SELECT	nr_sequencia,
		cd_usuario_plano,
		coalesce(dt_solicitacao,clock_timestamp()),
		substr(ds_observacao,1,255),
		nr_seq_segurado,
		nr_seq_motivo_via
	from	pls_inclusao_beneficiario
	where	nr_seq_lote_inclusao	= nr_seq_lote_p
	and	ie_status_mov = '1'
	and	coalesce(ie_tipo_operacao,'I')	= 'C'
	and	ie_tipo_operacao_p		= 'C';

--Alteracao de dados da pessoa fisica
C03 CURSOR FOR
	SELECT	nr_sequencia,
		cd_usuario_plano,
		coalesce(dt_solicitacao,clock_timestamp()),
		nm_pessoa_fisica,
		ie_sexo,
		ie_estado_civil,
		nr_identidade,
		CASE WHEN ie_cpf_proprio='N' THEN null  ELSE nr_cpf END ,
		dt_nascimento,
		nm_mae,
		ds_endereco,
		ds_bairro,
		ds_municipio,
		sg_estado,
		cd_cep,
		ds_email,
		nr_ddd_telefone,
		nr_telefone,
		nr_ddd_celular,
		nr_telefone_celular,
		nr_ddd_fax,
		nr_fax,
		ds_endereco_corresp,
		ds_bairro_corresp,
		ds_municipio_corresp,
		sg_uf_corresp,
		cd_cep_corresp,
		ds_email_corresp,
		nr_ddd_telefone_corresp,
		nr_telefone_corresp,
		nr_ddd_fax_corresp,
		nr_fax_corresp,
		nr_pis_pasep,
		nr_seq_segurado,
		nr_seq_congenere_atend,
		cd_declaracao_nasc_vivo,
		nr_cartao_nac_sus,
		cd_municipio_ibge,
		nm_pai,
		sg_estado_nasc,
		nm_social,
		cd_cbo,
		cd_municipio_ibge_nasc,
		cd_nacionalidade,
		dt_emissao_ci,
		sg_emissora_ci,
		nr_seq_pais,
		ds_orgao_emissor_ci,
		nr_reg_geral_estrang,
		nr_ctps,
		nr_serie_ctps,
		uf_emissora_ctps,
		nr_cert_casamento,
		dt_emissao_cert_casamento,
		nr_titulo_eleitor,
		dt_adocao,
		nr_fax,
		nr_ddd_fax,
		nr_ddi_telefone,
		nr_endereco,
		ds_complemento,
		cd_tipo_logradouro
	from	pls_inclusao_beneficiario
	where	nr_seq_lote_inclusao	= nr_seq_lote_p
	and	ie_status_mov = '1'
	and	coalesce(ie_tipo_operacao,'I')	= 'A'
	and	ie_tipo_operacao_p		= 'A';

C04 CURSOR FOR
	SELECT	nr_seq_congenere_cobr,
		nr_seq_congenere
	from	(	SELECT	nr_seq_congenere_cobr,
				coalesce(nr_seq_congenere,0) nr_seq_congenere,
				ie_titularidade,
				ie_tipo_parentesco,
				ie_tipo_intercambio
			from	pls_contrato_regra_repasse
			where	nr_seq_contrato	= nr_seq_contrato_w
			and	ie_tipo_repasse	= ie_tipo_repasse_w
			and	((nr_seq_congenere = nr_seq_congenere_atend_w) or (coalesce(nr_seq_congenere::text, '') = ''))
			and	pls_obter_se_depend_repasse(nr_sequencia,nr_seq_segurado_w) = 'S'
			and	pls_restring_loc_atend_repasee(nr_sequencia,nr_seq_congenere_atend_w,cd_estabelecimento_p) = 'S'
			
union all

			select	nr_seq_congenere_cobr,
				coalesce(nr_seq_congenere,0),
				ie_titularidade,
				ie_tipo_parentesco,
				ie_tipo_intercambio
			from	pls_contrato_regra_repasse
			where	ie_tipo_repasse	= ie_tipo_repasse_w
			and	coalesce(nr_seq_contrato::text, '') = ''
			and	coalesce(nr_seq_intercambio::text, '') = ''
			and	cd_estabelecimento	= cd_estabelecimento_p
			and	((nr_seq_congenere = nr_seq_congenere_atend_w) or (coalesce(nr_seq_congenere::text, '') = ''))
			and	pls_obter_se_depend_repasse(nr_sequencia,nr_seq_segurado_w) = 'S'
			and	not exists (	select	1
						from	pls_contrato_regra_repasse
						where	nr_seq_contrato	= nr_seq_contrato_w
						and	ie_tipo_repasse	= ie_tipo_repasse_w)) alias16
	order by nr_seq_congenere,
		CASE WHEN coalesce(ie_titularidade,'A')='A' THEN -1  ELSE 1 END ,
		CASE WHEN coalesce(ie_tipo_parentesco::text, '') = '' THEN -1  ELSE 1 END ,
		CASE WHEN coalesce(ie_tipo_intercambio,'A')='A' THEN -1  ELSE 1 END;

--Suspensoes
C05 CURSOR FOR
	SELECT	nr_sequencia,
		nr_seq_segurado,
		dt_solicitacao,
		nr_seq_motivo_susp
	from	pls_inclusao_beneficiario
	where	nr_seq_lote_inclusao	= nr_seq_lote_p
	and	ie_status_mov = '1'
	and	coalesce(ie_tipo_operacao,'I')	= 'S'
	and	ie_tipo_operacao_p		= 'S'
	and	(nr_seq_segurado IS NOT NULL AND nr_seq_segurado::text <> '');

--Reativacoes
C06 CURSOR FOR
	SELECT	nr_sequencia,
		nr_seq_segurado,
		dt_solicitacao
	from	pls_inclusao_beneficiario
	where	nr_seq_lote_inclusao	= nr_seq_lote_p
	and	ie_status_mov = '1'
	and	coalesce(ie_tipo_operacao,'I')	= 'R'
	and	ie_tipo_operacao_p		= 'R'
	and	(nr_seq_segurado IS NOT NULL AND nr_seq_segurado::text <> '');

c07 CURSOR FOR
	SELECT	nr_sequencia,
		ie_acao
	from	pls_regra_atrib_inc_benef;
	
C08 CURSOR FOR
	SELECT	a.nr_seq_segurado,
		a.nr_seq_contrato,
		a.cd_cep, 
		a.cd_municipio_ibge, 
		a.cd_tipo_logradouro, 
		a.ds_bairro, 
		a.ds_complemento,
		a.ds_municipio, 
		a.nr_ddi_telefone, 
		a.nr_ddd_telefone,
		a.nr_telefone, 
		a.nr_ddi_celular, 
		a.nr_ddd_celular,
		a.nr_telefone_celular, 
		a.nr_endereco_varchar, 
		a.sg_estado,
		a.ds_endereco,
		a.nr_sequencia nr_seq_inclusao_benef,
		a.dt_reinclusao,
		b.dt_rescisao,
		b.nr_seq_titular
	from	pls_inclusao_beneficiario a,
		pls_segurado b
	where	a.ie_tipo_operacao = 'RB'
	and	a.ie_status_mov = '1'
	and	a.nr_seq_lote_inclusao = nr_seq_lote_p
	and	b.nr_sequencia = a.nr_seq_segurado;
	
C09 CURSOR(	nr_seq_titular_pc	pls_segurado.nr_sequencia%type,
		dt_rescisao_pc		pls_segurado.dt_rescisao%type) FOR
	SELECT	a.nr_sequencia nr_seq_segurado
	from	pls_segurado a,
		pls_motivo_cancelamento b
	where	b.nr_sequencia = a.nr_seq_motivo_cancelamento
	and	a.nr_seq_titular = nr_seq_titular_pc
	and	trunc(a.dt_rescisao, 'dd') = dt_rescisao_pc
	and	coalesce(a.dt_cancelamento::text, '') = ''
	and	coalesce(b.ie_impedir_reativacao, 'N') = 'N'
	and	not exists (	SELECT	1
				from	pls_inclusao_beneficiario x
				where	x.ie_tipo_operacao = 'RB'
				and	x.ie_status_mov = '1'
				and	x.nr_seq_lote_inclusao = nr_seq_lote_p
				and	a.nr_sequencia = x.nr_seq_segurado);
	
BEGIN
ie_consistir_sib_w := coalesce(obter_valor_param_usuario(1232, 4, Obter_Perfil_Ativo, nm_usuario_p, cd_estabelecimento_p), 'N');
ie_recisao_ultimo_dia_mes_w := coalesce(obter_valor_param_usuario(1232, 127, Obter_Perfil_Ativo, nm_usuario_p, cd_estabelecimento_p), 'N');

select	max(dt_importacao_arquivo),
	max(nr_seq_contrato),
	max(nr_seq_intercambio),
	max(ie_situacao)
into STRICT	dt_importacao_arquivo_w,
	nr_seq_contrato_ww,
	nr_seq_intercambio_ww,
	ie_situacao_w
from	pls_lote_inclusao_benef
where	nr_sequencia	= nr_seq_lote_p;

if (ie_situacao_w <> 'L') then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(187943,'NR_SEQ_LOTE='||nr_seq_lote_p);
end if;

open C01;
loop
fetch C01 into
	nr_seq_inclusao_benef_w,
	nm_pessoa_fisica_w,
	cd_usuario_plano_w,
	nr_seq_motivo_cancelamento_w,
	dt_solicitacao_w,
	ds_observacao_w,
	nr_seq_segurado_w,
	nr_certidao_obito_w,
	dt_obito_w,
	dt_rescisao_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	if (nr_seq_segurado_w IS NOT NULL AND nr_seq_segurado_w::text <> '') then
		select	coalesce(max(ie_solicitacao_rescisao), 'N')
		into STRICT	ie_solicitacao_rescisao_w
		from	pls_motivo_cancelamento
		where	nr_sequencia = nr_seq_motivo_cancelamento_w;
		
		if (coalesce(dt_rescisao_w::text, '') = '') then
			dt_rescisao_w	:= fim_dia(last_day(dt_importacao_arquivo_w));
		end if;

		if (ie_solicitacao_rescisao_w = 'S') then
			if (ie_recisao_ultimo_dia_mes_w = 'S')  then
				dt_rescisao_w := last_day(dt_rescisao_w);
			end if;

			begin
			select	c.ds_email,
				c.cd_cep,
				c.ds_endereco,
				c.nr_endereco,
				c.ds_complemento,
				c.ds_bairro,
				c.cd_municipio_ibge,
				c.sg_estado,
				c.nr_ddi_celular,
				c.nr_ddd_celular,
				c.nr_telefone_celular,
				c.nr_ddi_telefone,
				c.nr_ddd_telefone,
				c.nr_telefone
			into STRICT	ds_email_w,
				cd_cep_w,
				ds_endereco_w,
				nr_endereco_w,
				ds_complemento_w,
				ds_bairro_w,
				cd_municipio_ibge_w,
				sg_estado_w,
				nr_ddi_celular_w,
				nr_ddd_celular_w,
				nr_telefone_celular_w,
				nr_ddi_telefone_w,
				nr_ddd_telefone_w,
				nr_telefone_w
			from	pls_segurado a,
				pessoa_fisica b,
				compl_pessoa_fisica c
			where	a.cd_pessoa_fisica = b.cd_pessoa_fisica
			and	c.cd_pessoa_fisica = b.cd_pessoa_fisica
			and	a.nr_sequencia = nr_seq_segurado_w
			and	c.ie_tipo_complemento = 1;
			exception
			when no_data_found then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(1157935,'NM_BENEFICIARIO='||nm_pessoa_fisica_w);--Nao foi localizado o endereco residencial para o beneficiario NM_BENEFICIARIO. Favor verifique.
			end;

			if (ds_email_w IS NOT NULL AND ds_email_w::text <> '') then
				ie_forma_envio_w	:= 1;
			else
				ie_forma_envio_w	:= 2;
			end if;
			
			SELECT * FROM pls_gerar_solic_resc_estip_web(	nr_seq_segurado_w, nr_seq_motivo_cancelamento_w, null, wheb_mensagem_pck.get_texto(1127103), nm_usuario_p, ds_email_w, cd_cep_w, ds_endereco_w, nr_endereco_w, ds_complemento_w, ds_bairro_w, cd_municipio_ibge_w, sg_estado_w, nr_ddi_celular_w, nr_ddd_celular_w, nr_telefone_celular_w, nr_ddi_telefone_w, nr_ddd_telefone_w, nr_telefone_w, ie_forma_envio_w, nr_seq_inclusao_benef_w, dt_rescisao_w, dt_obito_w, nr_certidao_obito_w, null, null, null, nr_protocolo_atend_w, nr_seq_solicitacao_w, 'N', null) INTO STRICT nr_protocolo_atend_w, nr_seq_solicitacao_w;
		else
			insert	into	pls_rescisao_contrato(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
					nr_seq_segurado,ie_situacao,dt_solicitacao,dt_rescisao,nr_seq_motivo_rescisao,nm_usuario_solicitacao,
					ds_observacao, nr_certidao_obito, dt_obito, ie_processo, ie_tipo_solicitante)
			values (	nextval('pls_rescisao_contrato_seq'),clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,
					nr_seq_segurado_w,'A',dt_solicitacao_w,dt_rescisao_w,nr_seq_motivo_cancelamento_w,nm_usuario_p,
					'', nr_certidao_obito_w, dt_obito_w, 'M', 'T');
		end if;
		
		update	pls_inclusao_beneficiario
		set	dt_efetivacao	= clock_timestamp(),
			ie_status_mov	= '2',
			ie_status	= 'C',
			dt_atualizacao  = clock_timestamp(),
			nm_usuario 	= nm_usuario_p
		where	nr_sequencia	= nr_seq_inclusao_benef_w;
	end if;
	end;
end loop;
close C01;

open C02;
loop
fetch C02 into
	nr_seq_inclusao_benef_w,
	cd_usuario_plano_w,
	dt_solicitacao_w,
	ds_observacao_w,
	nr_seq_segurado_w,
	nr_seq_motivo_via_adic_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin
	if (coalesce(nr_seq_motivo_via_adic_w::text, '') = '') then
		CALL wheb_mensagem_pck.exibir_mensagem_abort( 183854, null); --E necessario informar o motivo da via adicional da carteirinha. Favor verifique!
	end if;
	
	select	max(nr_sequencia)
	into STRICT	nr_seq_carteira_w
	from	pls_segurado_carteira
	where	nr_seq_segurado	= nr_seq_segurado_w;
	
	CALL pls_gerar_via_carteira(nr_seq_carteira_w,nr_seq_motivo_via_adic_w,nm_usuario_p,1202,'M','N');
	
	update	pls_inclusao_beneficiario
	set	dt_efetivacao	= clock_timestamp(),
		ie_status_mov	= '2',
		dt_atualizacao  = clock_timestamp(),
		nm_usuario      = nm_usuario_p
	where	nr_sequencia	= nr_seq_inclusao_benef_w;
	end;
end loop;
close C02;

tb_ie_acao_w.delete;

for r_c07_w in c07 loop
	begin
	tb_ie_acao_w(r_c07_w.nr_sequencia)	:= r_c07_w.ie_acao;
	end;
end loop;

open C03;
loop
fetch C03 into
	nr_seq_inclusao_benef_w,
	cd_usuario_plano_w,
	dt_solicitacao_w,
	nm_pessoa_fisica_w,
	ie_sexo_w,
	ie_estado_civil_w,
	nr_identidade_w,
	nr_cpf_w,
	dt_nascimento_w,
	nm_mae_w,
	ds_endereco_w,
	ds_bairro_w,
	ds_municipio_w,
	sg_estado_w,
	cd_cep_w,
	ds_email_w,
	nr_ddd_telefone_w,
	nr_telefone_w,
	nr_ddd_celular_w,
	nr_telefone_celular_w,
	nr_ddd_fax_w,
	nr_fax_w,
	ds_endereco_corresp_w,
	ds_bairro_corresp_w,
	ds_municipio_corresp_w,
	sg_uf_corresp_w,
	cd_cep_corresp_w,
	ds_email_corresp_w,
	nr_ddd_telefone_corresp_w,
	nr_telefone_corresp_w,
	nr_ddd_fax_corresp_w,
	nr_fax_corresp_w,
	nr_pis_pasep_w,
	nr_seq_segurado_w,
	nr_seq_congenere_atend_w,
	cd_declaracao_nasc_vivo_w,
	nr_cartao_nac_sus_w,
	cd_municipio_ibge_w,
	nm_pai_w,
	sg_estado_nasc_w,
	nm_social_w,
	cd_cbo_w,
	cd_municipio_ibge_nasc_w,
	cd_nacionalidade_w,
	dt_emissao_ci_w,
	sg_emissora_ci_w,
	nr_seq_pais_w,
	ds_orgao_emissor_ci_w,
	nr_reg_geral_estrang_w,
	nr_ctps_w,
	nr_serie_ctps_w,
	uf_emissora_ctps_w,
	nr_cert_casamento_w,
	dt_emissao_cert_casamento_w,
	nr_titulo_eleitor_w,
	dt_adocao_w,
	nr_fax_w,
	nr_ddd_fax_w,
	nr_ddi_telefone_w,
	nr_endereco_w,
	ds_complemento_w,
	cd_tipo_logradouro_w;
EXIT WHEN NOT FOUND; /* apply on C03 */
	begin
	nr_seq_repasse_ant_w	:= null;

	select	max(cd_pessoa_fisica)
	into STRICT	cd_pessoa_fisica_w
	from	pls_segurado
	where	nr_sequencia	= nr_seq_segurado_w;
	
	if (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then
		select	nm_pessoa_fisica,
			ie_sexo,
			ie_estado_civil,
			nr_identidade,
			nr_cpf,
			nr_pis_pasep,
			dt_nascimento,
			nr_ddd_celular,
			nr_telefone_celular,
			cd_declaracao_nasc_vivo,
			nr_cartao_nac_sus,
			sg_estado_nasc,
			cd_cbo_sus,
			nm_social,
			cd_municipio_ibge,
			cd_nacionalidade,
			dt_emissao_ci,
			sg_emissora_ci,
			nr_seq_pais,
			ds_orgao_emissor_ci,
			nr_reg_geral_estrang,
			nr_ctps,
			nr_serie_ctps,
			uf_emissora_ctps,
			nr_cert_casamento,
			dt_emissao_cert_casamento,
			nr_titulo_eleitor,
			dt_adocao,
			nm_abreviado
		into STRICT	nm_pessoa_fisica_old_w,
			ie_sexo_old_w,
			ie_estado_civil_old_w,
			nr_identidade_old_w,
			nr_cpf_old_w,
			nr_pis_pasep_old_w,
			dt_nascimento_old_w,
			nr_ddd_celular_old_w,
			nr_telefone_celular_old_w,
			cd_declaracao_nasc_vivo_old_w,
			nr_cartao_nac_sus_old_w,
			sg_estado_nasc_old_w,
			cd_cbo_old_w,
			nm_social_old_w,
			cd_municipio_ibge_nasc_old_w,
			cd_nacionalidade_old_w,
			dt_emissao_ci_old_w,
			sg_emissora_ci_old_w,
			nr_seq_pais_old_w,
			ds_orgao_emissor_ci_old_w,
			nr_reg_geral_estrang_old_w,
			nr_ctps_old_w,
			nr_serie_ctps_old_w,
			uf_emissora_ctps_old_w,
			nr_cert_casamento_old_w,
			dt_emissao_cert_casament_old_w,
			nr_titulo_eleitor_old_w,
			dt_adocao_old_w,
			nm_abreviado_old_w
		from	pessoa_fisica
		where	cd_pessoa_fisica	= cd_pessoa_fisica_w;
		
		ds_endereco_old_w		:= null;
		ds_bairro_old_w			:= null;
		ds_municipio_old_w		:= null;
		sg_estado_old_w			:= null;
		cd_cep_old_w			:= null;
		ds_email_old_w			:= null;
		nr_ddd_telefone_old_w		:= null;
		nr_telefone_old_w		:= null;
		cd_municipio_ibge_old_w		:= null;
		nr_fax_old_w			:= null;
		nr_ddd_fax_old_w		:= null;
		nr_ddi_telefone_old_w		:= null;
		nr_endereco_old_w		:= null;
		ds_complemento_old_w		:= null;
		cd_tipo_logradouro_old_w	:= null;
	
		select	count(1)
		into STRICT	qt_reg_complemto_w
		from	compl_pessoa_fisica
		where	cd_pessoa_fisica	= cd_pessoa_fisica_w
		and	ie_tipo_complemento	= 1;
		
		if (qt_reg_complemto_w > 0) then
			select	ds_endereco,
				ds_bairro,
				ds_municipio,
				sg_estado,
				cd_cep,
				ds_email,
				nr_ddd_telefone,
				nr_telefone,
				cd_municipio_ibge,
				ds_fax,
				nr_ddd_fax,
				nr_ddi_telefone,
				nr_endereco,
				ds_complemento,
				cd_tipo_logradouro
			into STRICT	ds_endereco_old_w,
				ds_bairro_old_w,
				ds_municipio_old_w,
				sg_estado_old_w,
				cd_cep_old_w,
				ds_email_old_w,
				nr_ddd_telefone_old_w,
				nr_telefone_old_w,
				cd_municipio_ibge_old_w,
				nr_fax_old_w,
				nr_ddd_fax_old_w,
				nr_ddi_telefone_old_w,
				nr_endereco_old_w,
				ds_complemento_old_w,
				cd_tipo_logradouro_old_w
			from	compl_pessoa_fisica
			where	cd_pessoa_fisica	= cd_pessoa_fisica_w
			and	ie_tipo_complemento	= 1;
		end if;

		nm_mae_old_w	:= substr(obter_nome_pai_mae(cd_pessoa_fisica_w,'M'),1,255);
		nm_pai_old_w	:= substr(obter_nome_pai_mae(cd_pessoa_fisica_w,'P'),1,255);
		
		nm_abreviado_w	:= pls_gerar_nome_abreviado(nm_pessoa_fisica_w);
		
		--Gera as solicitacoes da pessoa fisica
		if (tb_ie_acao_w(1) = 'S') and (nm_pessoa_fisica_w IS NOT NULL AND nm_pessoa_fisica_w::text <> '') and (upper(nm_pessoa_fisica_w) <> upper(nm_pessoa_fisica_old_w) or coalesce(nm_pessoa_fisica_old_w::text, '') = '') then
			CALL pls_gerar_solicitacao_alt( nm_pessoa_fisica_old_w, nm_pessoa_fisica_w, 'NM_PESSOA_FISICA', cd_pessoa_fisica_w, cd_estabelecimento_p, nm_usuario_p);
		end if;
		
		if (tb_ie_acao_w(5) = 'S') and (ie_sexo_w IS NOT NULL AND ie_sexo_w::text <> '') and (ie_sexo_w <> ie_sexo_old_w or coalesce(ie_sexo_old_w::text, '') = '') then
			CALL pls_gerar_solicitacao_alt( ie_sexo_old_w, ie_sexo_w, 'IE_SEXO', cd_pessoa_fisica_w, cd_estabelecimento_p, nm_usuario_p);
		end if;
		
		if (tb_ie_acao_w(3) = 'S') and (ie_estado_civil_w IS NOT NULL AND ie_estado_civil_w::text <> '') and (ie_estado_civil_w <> ie_estado_civil_old_w or coalesce(ie_estado_civil_old_w::text, '') = '') then
			CALL pls_gerar_solicitacao_alt( ie_estado_civil_old_w, ie_estado_civil_w, 'IE_ESTADO_CIVIL', cd_pessoa_fisica_w, cd_estabelecimento_p, nm_usuario_p);
		end if;
		
		if (tb_ie_acao_w(8) = 'S') and (nr_identidade_w IS NOT NULL AND nr_identidade_w::text <> '') and (nr_identidade_w <> nr_identidade_old_w or coalesce(nr_identidade_old_w::text, '') = '') then
			CALL pls_gerar_solicitacao_alt( nr_identidade_old_w, nr_identidade_w, 'NR_IDENTIDADE', cd_pessoa_fisica_w, cd_estabelecimento_p, nm_usuario_p);
		end if;
		
		if (tb_ie_acao_w(7) = 'S') and (nr_cpf_w IS NOT NULL AND nr_cpf_w::text <> '') and (nr_cpf_w <> nr_cpf_old_w or coalesce(nr_cpf_old_w::text, '') = '') then
			CALL pls_gerar_solicitacao_alt( nr_cpf_old_w, nr_cpf_w, 'NR_CPF', cd_pessoa_fisica_w, cd_estabelecimento_p, nm_usuario_p);
		end if;
		
		if (tb_ie_acao_w(30) = 'S') and (nr_pis_pasep_w IS NOT NULL AND nr_pis_pasep_w::text <> '') and (nr_pis_pasep_w <> nr_pis_pasep_old_w or coalesce(nr_pis_pasep_old_w::text, '') = '') then
			CALL pls_gerar_solicitacao_alt( nr_pis_pasep_old_w, nr_pis_pasep_w, 'NR_PIS_PASEP', cd_pessoa_fisica_w, cd_estabelecimento_p, nm_usuario_p);
		end if;
		
		if (tb_ie_acao_w(2) = 'S') and (dt_nascimento_w IS NOT NULL AND dt_nascimento_w::text <> '') and (dt_nascimento_w <> dt_nascimento_old_w or coalesce(dt_nascimento_old_w::text, '') = '') then
			CALL pls_gerar_solicitacao_alt( dt_nascimento_old_w, dt_nascimento_w, 'DT_NASCIMENTO', cd_pessoa_fisica_w, cd_estabelecimento_p, nm_usuario_p);
		end if;
		
		if (tb_ie_acao_w(23) = 'S') and (nr_ddd_celular_w IS NOT NULL AND nr_ddd_celular_w::text <> '') and (nr_ddd_celular_w <> nr_ddd_celular_old_w or coalesce(nr_ddd_celular_old_w::text, '') = '') then
			CALL pls_gerar_solicitacao_alt( nr_ddd_celular_old_w, nr_ddd_celular_w, 'NR_DDD_CELULAR', cd_pessoa_fisica_w, cd_estabelecimento_p, nm_usuario_p);
		end if;
		
		if (tb_ie_acao_w(23) = 'S') and (nr_telefone_celular_w IS NOT NULL AND nr_telefone_celular_w::text <> '') and (nr_telefone_celular_w <> nr_telefone_celular_old_w or coalesce(nr_telefone_celular_old_w::text, '') = '') then
			CALL pls_gerar_solicitacao_alt( nr_telefone_celular_old_w, nr_telefone_celular_w, 'NR_TELEFONE_CELULAR', cd_pessoa_fisica_w, cd_estabelecimento_p, nm_usuario_p);
		end if;
		
		if (tb_ie_acao_w(29) = 'S') and (cd_declaracao_nasc_vivo_w IS NOT NULL AND cd_declaracao_nasc_vivo_w::text <> '') and (cd_declaracao_nasc_vivo_w <> cd_declaracao_nasc_vivo_old_w or coalesce(cd_declaracao_nasc_vivo_old_w::text, '') = '') then
			CALL pls_gerar_solicitacao_alt( cd_declaracao_nasc_vivo_old_w, cd_declaracao_nasc_vivo_w, 'CD_DECLARACAO_NASC_VIVO', cd_pessoa_fisica_w, cd_estabelecimento_p, nm_usuario_p);
		end if;
		
		if (tb_ie_acao_w(28) = 'S') and (nr_cartao_nac_sus_w IS NOT NULL AND nr_cartao_nac_sus_w::text <> '') and (nr_cartao_nac_sus_w <> nr_cartao_nac_sus_old_w or coalesce(nr_cartao_nac_sus_old_w::text, '') = '') then
			CALL pls_gerar_solicitacao_alt( nr_cartao_nac_sus_old_w, nr_cartao_nac_sus_w, 'NR_CARTAO_NAC_SUS', cd_pessoa_fisica_w, cd_estabelecimento_p, nm_usuario_p);
		end if;

		if (tb_ie_acao_w(35) = 'S') and (sg_estado_nasc_w IS NOT NULL AND sg_estado_nasc_w::text <> '') and (upper(sg_estado_nasc_w) <> upper(sg_estado_nasc_old_w) or coalesce(sg_estado_nasc_old_w::text, '') = '') then
			CALL pls_gerar_solicitacao_alt(sg_estado_nasc_old_w, sg_estado_nasc_w, 'SG_ESTADO_NASC', cd_pessoa_fisica_w, cd_estabelecimento_p, nm_usuario_p);
		end if;

		if (tb_ie_acao_w(37) = 'S') and (nm_social_w IS NOT NULL AND nm_social_w::text <> '') and (upper(nm_social_w) <> upper(nm_social_old_w) or coalesce(nm_social_old_w::text, '') = '') then
			CALL pls_gerar_solicitacao_alt(nm_social_old_w, nm_social_w, 'NM_SOCIAL', cd_pessoa_fisica_w, cd_estabelecimento_p, nm_usuario_p);
		end if;
		
		if (tb_ie_acao_w(24) = 'S') and (cd_cbo_w IS NOT NULL AND cd_cbo_w::text <> '') and (upper(cd_cbo_w) <> upper(cd_cbo_old_w) or coalesce(cd_cbo_old_w::text, '') = '') then
			CALL pls_gerar_solicitacao_alt(cd_cbo_old_w, cd_cbo_w, 'CD_CBO_SUS', cd_pessoa_fisica_w, cd_estabelecimento_p, nm_usuario_p);
		end if;
		
		
		if (tb_ie_acao_w(34) = 'S') and (cd_municipio_ibge_nasc_w IS NOT NULL AND cd_municipio_ibge_nasc_w::text <> '') and (upper(cd_municipio_ibge_nasc_w) <> upper(cd_municipio_ibge_nasc_old_w) or coalesce(cd_municipio_ibge_nasc_old_w::text, '') = '') then
			CALL pls_gerar_solicitacao_alt(cd_municipio_ibge_nasc_old_w, cd_municipio_ibge_nasc_w, 'CD_MUNICIPIO_IBGE', cd_pessoa_fisica_w, cd_estabelecimento_p, nm_usuario_p);
		end if;
		
		if (tb_ie_acao_w(4) = 'S') and (cd_nacionalidade_w IS NOT NULL AND cd_nacionalidade_w::text <> '') and (cd_nacionalidade_w <> cd_nacionalidade_old_w or coalesce(cd_nacionalidade_old_w::text, '') = '') then
			CALL pls_gerar_solicitacao_alt(cd_nacionalidade_old_w, cd_nacionalidade_w, 'CD_NACIONALIDADE', cd_pessoa_fisica_w, cd_estabelecimento_p, nm_usuario_p);
		end if;
		
		if (tb_ie_acao_w(9) = 'S') and (dt_emissao_ci_w IS NOT NULL AND dt_emissao_ci_w::text <> '') and (dt_emissao_ci_w <> dt_emissao_ci_old_w or coalesce(dt_emissao_ci_old_w::text, '') = '') then
			CALL pls_gerar_solicitacao_alt( dt_emissao_ci_old_w, dt_emissao_ci_w, 'DT_EMISSAO_CI', cd_pessoa_fisica_w, cd_estabelecimento_p, nm_usuario_p);
		end if;
				
		if (tb_ie_acao_w(10) = 'S') and (sg_emissora_ci_w IS NOT NULL AND sg_emissora_ci_w::text <> '') and (sg_emissora_ci_w <> sg_emissora_ci_old_w or coalesce(sg_emissora_ci_old_w::text, '') = '') then
			CALL pls_gerar_solicitacao_alt(sg_emissora_ci_old_w, sg_emissora_ci_w, 'SG_EMISSORA_CI', cd_pessoa_fisica_w, cd_estabelecimento_p, nm_usuario_p);
		end if;
		
		if (tb_ie_acao_w(12) = 'S') and (nr_seq_pais_w IS NOT NULL AND nr_seq_pais_w::text <> '') and (nr_seq_pais_w <> nr_seq_pais_old_w or coalesce(nr_seq_pais_old_w::text, '') = '') then
			CALL pls_gerar_solicitacao_alt(nr_seq_pais_old_w, nr_seq_pais_w, 'NR_SEQ_PAIS', cd_pessoa_fisica_w, cd_estabelecimento_p, nm_usuario_p);
		end if;
		
		if (tb_ie_acao_w(11) = 'S') and (ds_orgao_emissor_ci_w IS NOT NULL AND ds_orgao_emissor_ci_w::text <> '') and (upper(ds_orgao_emissor_ci_w) <> upper(ds_orgao_emissor_ci_old_w) or coalesce(ds_orgao_emissor_ci_old_w::text, '') = '') then
			CALL pls_gerar_solicitacao_alt(ds_orgao_emissor_ci_old_w, ds_orgao_emissor_ci_w, 'DS_ORGAO_EMISSOR_CI', cd_pessoa_fisica_w, cd_estabelecimento_p, nm_usuario_p);
		end if;
		
		if (tb_ie_acao_w(13) = 'S') and (nr_reg_geral_estrang_w IS NOT NULL AND nr_reg_geral_estrang_w::text <> '') and (nr_reg_geral_estrang_w <> nr_reg_geral_estrang_old_w or coalesce(nr_reg_geral_estrang_old_w::text, '') = '') then
			CALL pls_gerar_solicitacao_alt(nr_reg_geral_estrang_old_w, nr_reg_geral_estrang_w, 'NR_REG_GERAL_ESTRANG', cd_pessoa_fisica_w, cd_estabelecimento_p, nm_usuario_p);
		end if;

		if (tb_ie_acao_w(25) = 'S') and (nr_ctps_w IS NOT NULL AND nr_ctps_w::text <> '') and (nr_ctps_w <> nr_ctps_old_w or coalesce(nr_ctps_old_w::text, '') = '') then
			CALL pls_gerar_solicitacao_alt(nr_ctps_old_w, nr_ctps_w, 'NR_CTPS', cd_pessoa_fisica_w, cd_estabelecimento_p, nm_usuario_p);
		end if;
		
		if (tb_ie_acao_w(26) = 'S') and (nr_serie_ctps_w IS NOT NULL AND nr_serie_ctps_w::text <> '') and (nr_serie_ctps_w <> nr_serie_ctps_old_w or coalesce(nr_serie_ctps_old_w::text, '') = '') then
			CALL pls_gerar_solicitacao_alt(nr_serie_ctps_old_w, nr_serie_ctps_w, 'NR_SERIE_CTPS', cd_pessoa_fisica_w, cd_estabelecimento_p, nm_usuario_p);
		end if;
		
		if (tb_ie_acao_w(27) = 'S') and (uf_emissora_ctps_w IS NOT NULL AND uf_emissora_ctps_w::text <> '') and (uf_emissora_ctps_w <> uf_emissora_ctps_old_w or coalesce(uf_emissora_ctps_old_w::text, '') = '') then
			CALL pls_gerar_solicitacao_alt(uf_emissora_ctps_old_w, uf_emissora_ctps_w, 'UF_EMISSORA_CTPS', cd_pessoa_fisica_w, cd_estabelecimento_p, nm_usuario_p);
		end if;
		
		if (tb_ie_acao_w(39) = 'S') and (nr_cert_casamento_w IS NOT NULL AND nr_cert_casamento_w::text <> '') and (nr_cert_casamento_w <> nr_cert_casamento_old_w or coalesce(nr_cert_casamento_old_w::text, '') = '') then
			CALL pls_gerar_solicitacao_alt(nr_cert_casamento_old_w, nr_cert_casamento_w, 'NR_CERT_CASAMENTO', cd_pessoa_fisica_w, cd_estabelecimento_p, nm_usuario_p);
		end if;
		
		if (tb_ie_acao_w(38) = 'S') and (dt_emissao_cert_casamento_w IS NOT NULL AND dt_emissao_cert_casamento_w::text <> '') and (dt_emissao_cert_casamento_w <> dt_emissao_cert_casament_old_w or coalesce(dt_emissao_cert_casament_old_w::text, '') = '') then
			CALL pls_gerar_solicitacao_alt(dt_emissao_cert_casament_old_w, dt_emissao_cert_casamento_w, 'DT_EMISSAO_CERT_CASAMENTO', cd_pessoa_fisica_w, cd_estabelecimento_p, nm_usuario_p);
		end if;
		
		if (tb_ie_acao_w(31) = 'S') and (nr_titulo_eleitor_w IS NOT NULL AND nr_titulo_eleitor_w::text <> '') and (nr_titulo_eleitor_w <> nr_titulo_eleitor_old_w or coalesce(nr_titulo_eleitor_old_w::text, '') = '') then
			CALL pls_gerar_solicitacao_alt(nr_titulo_eleitor_old_w, nr_titulo_eleitor_w, 'NR_TITULO_ELEITOR', cd_pessoa_fisica_w, cd_estabelecimento_p, nm_usuario_p);
		end if;
		
		if (tb_ie_acao_w(1) = 'S') and (nm_abreviado_w IS NOT NULL AND nm_abreviado_w::text <> '') and (upper(nm_abreviado_w) <> upper(nm_abreviado_old_w) or coalesce(nm_abreviado_old_w::text, '') = '') then
			CALL pls_gerar_solicitacao_alt(nm_abreviado_old_w, nm_abreviado_w, 'NM_ABREVIADO', cd_pessoa_fisica_w, cd_estabelecimento_p, nm_usuario_p);
		end if;
		
		if (tb_ie_acao_w(36) = 'S') and (dt_adocao_w IS NOT NULL AND dt_adocao_w::text <> '') and (dt_adocao_w <> dt_adocao_old_w or coalesce(dt_adocao_old_w::text, '') = '') then
			CALL pls_gerar_solicitacao_alt(dt_adocao_old_w, dt_adocao_w, 'DT_ADOCAO', cd_pessoa_fisica_w, cd_estabelecimento_p, nm_usuario_p);
		end if;	
		
		CALL pls_tasy_gerar_solicitacao(cd_pessoa_fisica_w,'A');
		
		--Gera as solicitacoes do endereco residencial
		if (tb_ie_acao_w(16) = 'S') and (ds_endereco_w IS NOT NULL AND ds_endereco_w::text <> '') and (upper(ds_endereco_w) <> upper(ds_endereco_old_w) or coalesce(ds_endereco_old_w::text, '') = '') then
			CALL pls_gerar_solicitacao_alt(ds_endereco_old_w, ds_endereco_w, 'DS_ENDERECO', cd_pessoa_fisica_w, cd_estabelecimento_p, nm_usuario_p);
		end if;
		
		if (tb_ie_acao_w(19) = 'S') and (ds_bairro_w IS NOT NULL AND ds_bairro_w::text <> '') and (upper(ds_bairro_w) <> upper(ds_bairro_old_w) or coalesce(ds_bairro_old_w::text, '') = '') then
			CALL pls_gerar_solicitacao_alt(ds_bairro_old_w, ds_bairro_w, 'DS_BAIRRO', cd_pessoa_fisica_w, cd_estabelecimento_p, nm_usuario_p);
		end if;
		
		if (tb_ie_acao_w(20) = 'S') and (ds_municipio_w IS NOT NULL AND ds_municipio_w::text <> '') and (upper(ds_municipio_w) <> upper(ds_municipio_old_w) or coalesce(ds_municipio_old_w::text, '') = '') then
			CALL pls_gerar_solicitacao_alt(ds_municipio_old_w, ds_municipio_w, 'DS_MUNICIPIO', cd_pessoa_fisica_w, cd_estabelecimento_p, nm_usuario_p);
		end if;
		
		if (tb_ie_acao_w(21) = 'S') and (sg_estado_w IS NOT NULL AND sg_estado_w::text <> '') and (sg_estado_w <> sg_estado_old_w or coalesce(sg_estado_old_w::text, '') = '') then
			CALL pls_gerar_solicitacao_alt(sg_estado_old_w, sg_estado_w, 'SG_ESTADO', cd_pessoa_fisica_w, cd_estabelecimento_p, nm_usuario_p);
		end if;
		
		if (tb_ie_acao_w(15) = 'S') and (cd_cep_w IS NOT NULL AND cd_cep_w::text <> '') and (cd_cep_w <> cd_cep_old_w or coalesce(cd_cep_old_w::text, '') = '') then
			CALL pls_gerar_solicitacao_alt(cd_cep_old_w, cd_cep_w, 'CD_CEP', cd_pessoa_fisica_w, cd_estabelecimento_p, nm_usuario_p);
		end if;
		
		if (tb_ie_acao_w(14) = 'S') and (ds_email_w IS NOT NULL AND ds_email_w::text <> '') and (upper(ds_email_w) <> upper(ds_email_old_w) or coalesce(ds_email_old_w::text, '') = '') then
			CALL pls_gerar_solicitacao_alt(ds_email_old_w, ds_email_w, 'DS_EMAIL', cd_pessoa_fisica_w, cd_estabelecimento_p, nm_usuario_p);
		end if;
		
		if (tb_ie_acao_w(22) = 'S') and (nr_telefone_w IS NOT NULL AND nr_telefone_w::text <> '') and (nr_telefone_w <> nr_telefone_old_w or coalesce(nr_telefone_old_w::text, '') = '') then
			CALL pls_gerar_solicitacao_alt(nr_telefone_old_w, nr_telefone_w, 'NR_TELEFONE', cd_pessoa_fisica_w, cd_estabelecimento_p, nm_usuario_p);
		end if;
		
		if (tb_ie_acao_w(22) = 'S') and (nr_ddd_telefone_w IS NOT NULL AND nr_ddd_telefone_w::text <> '') and (nr_ddd_telefone_w <> nr_ddd_telefone_old_w or coalesce(nr_ddd_telefone_old_w::text, '') = '') then
			CALL pls_gerar_solicitacao_alt(nr_ddd_telefone_old_w, nr_ddd_telefone_w, 'NR_DDD_TELEFONE', cd_pessoa_fisica_w, cd_estabelecimento_p, nm_usuario_p);
		end if;

		if (tb_ie_acao_w(20) = 'S') and (cd_municipio_ibge_w IS NOT NULL AND cd_municipio_ibge_w::text <> '') and (cd_municipio_ibge_w <> cd_municipio_ibge_old_w or coalesce(cd_municipio_ibge_old_w::text, '') = '') then
			CALL pls_gerar_solicitacao_alt(cd_municipio_ibge_old_w, cd_municipio_ibge_w, 'CD_MUNICIPIO_IBGE', cd_pessoa_fisica_w, cd_estabelecimento_p, nm_usuario_p);
		end if;
		
		if (tb_ie_acao_w(22) = 'S') and (nr_fax_w IS NOT NULL AND nr_fax_w::text <> '') and (nr_fax_w <> nr_fax_old_w or coalesce(nr_fax_old_w::text, '') = '') then
			CALL pls_gerar_solicitacao_alt(nr_fax_old_w, nr_fax_w, 'DS_FAX', cd_pessoa_fisica_w, cd_estabelecimento_p, nm_usuario_p);
		end if;
		
		if (tb_ie_acao_w(22) = 'S') and (nr_ddd_fax_w IS NOT NULL AND nr_ddd_fax_w::text <> '') and (nr_ddd_fax_w <> nr_ddd_fax_old_w or coalesce(nr_ddd_fax_old_w::text, '') = '') then
			CALL pls_gerar_solicitacao_alt(nr_ddd_fax_old_w, nr_ddd_fax_w, 'NR_DDD_FAX', cd_pessoa_fisica_w, cd_estabelecimento_p, nm_usuario_p);
		end if;
		
		if (tb_ie_acao_w(22) = 'S') and (nr_ddi_telefone_w IS NOT NULL AND nr_ddi_telefone_w::text <> '') and (nr_ddi_telefone_w <> nr_ddi_telefone_old_w or coalesce(nr_ddi_telefone_old_w::text, '') = '') then
			CALL pls_gerar_solicitacao_alt(nr_ddi_telefone_old_w, nr_ddi_telefone_w, 'NR_DDI_TELEFONE', cd_pessoa_fisica_w, cd_estabelecimento_p, nm_usuario_p);
		end if;

		if (tb_ie_acao_w(17) = 'S') and (nr_endereco_w IS NOT NULL AND nr_endereco_w::text <> '') and (nr_endereco_w <> nr_endereco_old_w or coalesce(nr_endereco_old_w::text, '') = '') then
			CALL pls_gerar_solicitacao_alt(nr_endereco_old_w, nr_endereco_w, 'NR_ENDERECO', cd_pessoa_fisica_w, cd_estabelecimento_p, nm_usuario_p);
		end if;
		
		if (tb_ie_acao_w(18) = 'S') and (ds_complemento_w IS NOT NULL AND ds_complemento_w::text <> '') and (upper(ds_complemento_w) <> upper(ds_complemento_old_w) or coalesce(ds_complemento_old_w::text, '') = '') then
			CALL pls_gerar_solicitacao_alt(ds_complemento_old_w, ds_complemento_w, 'DS_COMPLEMENTO', cd_pessoa_fisica_w, cd_estabelecimento_p, nm_usuario_p);
		end if;
		
		if (tb_ie_acao_w(32) = 'S') and (cd_tipo_logradouro_w IS NOT NULL AND cd_tipo_logradouro_w::text <> '') and (cd_tipo_logradouro_w <> cd_tipo_logradouro_old_w or coalesce(cd_tipo_logradouro_old_w::text, '') = '') then
			CALL pls_gerar_solicitacao_alt(cd_tipo_logradouro_old_w, cd_tipo_logradouro_w, 'CD_TIPO_LOGRADOURO', cd_pessoa_fisica_w, cd_estabelecimento_p, nm_usuario_p);
		end if;
		
		CALL pls_tasy_gerar_solic_compl(cd_pessoa_fisica_w, 1,'A','PLS_GERAR_ALT_EXCLUSAO_BENEF');
		
		--Gera as solicitacoes do nome da mae
		if (tb_ie_acao_w(6) = 'S') and (nm_mae_w IS NOT NULL AND nm_mae_w::text <> '') and (upper(nm_mae_w) <> upper(nm_mae_old_w) or coalesce(nm_mae_old_w::text, '') = '') then
			CALL pls_gerar_solicitacao_alt(nm_mae_old_w, nm_mae_w, 'NM_CONTATO', cd_pessoa_fisica_w, cd_estabelecimento_p, nm_usuario_p);
			CALL pls_tasy_gerar_solic_compl(cd_pessoa_fisica_w, 5,'A','PLS_GERAR_ALT_EXCLUSAO_BENEF');
		end if;
		
		--Gera as solicitacoes do nome da pai
		if (tb_ie_acao_w(33) = 'S') and (nm_pai_w IS NOT NULL AND nm_pai_w::text <> '') and (upper(nm_pai_w) <> upper(nm_pai_old_w) or coalesce(nm_pai_old_w::text, '') = '') then
			CALL pls_gerar_solicitacao_alt(nm_pai_old_w, nm_pai_w, 'NM_CONTATO', cd_pessoa_fisica_w, cd_estabelecimento_p, nm_usuario_p);
			CALL pls_tasy_gerar_solic_compl(cd_pessoa_fisica_w, 4,'A','PLS_GERAR_ALT_EXCLUSAO_BENEF');
		end if;
		
		update 	pessoa_fisica
		set 	nm_pessoa_fisica 		= CASE WHEN tb_ie_acao_w(1)='A' THEN  coalesce(nm_pessoa_fisica_w,nm_pessoa_fisica)  ELSE nm_pessoa_fisica END ,
			dt_nascimento 			= CASE WHEN tb_ie_acao_w(2)='A' THEN  coalesce(dt_nascimento_w,dt_nascimento)  ELSE dt_nascimento END ,
			cd_nacionalidade		= CASE WHEN tb_ie_acao_w(4)='A' THEN  coalesce(cd_nacionalidade_w,cd_nacionalidade)  ELSE cd_nacionalidade END ,
			nr_cpf				= CASE WHEN tb_ie_acao_w(7)='A' THEN  coalesce(nr_cpf_w,nr_cpf)  ELSE nr_cpf END ,
			ie_estado_civil			= CASE WHEN tb_ie_acao_w(3)='A' THEN  coalesce(ie_estado_civil_w,ie_estado_civil)  ELSE ie_estado_civil END ,
			ie_sexo				= CASE WHEN tb_ie_acao_w(5)='A' THEN  coalesce(ie_sexo_w,ie_sexo)  ELSE ie_sexo END ,
			nr_identidade			= CASE WHEN tb_ie_acao_w(8)='A' THEN  coalesce(nr_identidade_w,nr_identidade)  ELSE nr_identidade END ,
			dt_emissao_ci			= CASE WHEN tb_ie_acao_w(9)='A' THEN  coalesce(dt_emissao_ci_w,dt_emissao_ci)  ELSE dt_emissao_ci END ,
			sg_emissora_ci			= CASE WHEN tb_ie_acao_w(10)='A' THEN  coalesce(sg_emissora_ci_w,sg_emissora_ci)  ELSE sg_emissora_ci END ,
			nr_seq_pais			= CASE WHEN tb_ie_acao_w(12)='A' THEN  coalesce(nr_seq_pais_w,nr_seq_pais)  ELSE nr_seq_pais END ,
			ds_orgao_emissor_ci		= CASE WHEN tb_ie_acao_w(11)='A' THEN  coalesce(ds_orgao_emissor_ci_w,ds_orgao_emissor_ci)  ELSE ds_orgao_emissor_ci END ,
			nr_reg_geral_estrang		= CASE WHEN tb_ie_acao_w(13)='A' THEN  coalesce(nr_reg_geral_estrang_w,nr_reg_geral_estrang)  ELSE nr_reg_geral_estrang END ,
			nr_telefone_celular		= CASE WHEN tb_ie_acao_w(23)='A' THEN  coalesce(nr_telefone_celular_w,nr_telefone_celular)  ELSE nr_telefone_celular END ,
			nr_ctps				= CASE WHEN tb_ie_acao_w(25)='A' THEN  coalesce(nr_ctps_w,nr_ctps)  ELSE nr_ctps END ,
			nr_serie_ctps			= CASE WHEN tb_ie_acao_w(26)='A' THEN  coalesce(nr_serie_ctps_w,nr_serie_ctps)  ELSE nr_serie_ctps END ,
			uf_emissora_ctps		= CASE WHEN tb_ie_acao_w(27)='A' THEN  coalesce(uf_emissora_ctps_w,uf_emissora_ctps)  ELSE uf_emissora_ctps END ,
			nr_pis_pasep			= CASE WHEN tb_ie_acao_w(30)='A' THEN  coalesce(nr_pis_pasep_w,nr_pis_pasep)  ELSE nr_pis_pasep END ,
			cd_declaracao_nasc_vivo		= CASE WHEN tb_ie_acao_w(29)='A' THEN  coalesce(cd_declaracao_nasc_vivo_w,cd_declaracao_nasc_vivo)  ELSE cd_declaracao_nasc_vivo END ,
			nr_cartao_nac_sus		= CASE WHEN tb_ie_acao_w(28)='A' THEN  coalesce(nr_cartao_nac_sus_w,nr_cartao_nac_sus)  ELSE nr_cartao_nac_sus END ,
			nr_ddd_celular			= CASE WHEN tb_ie_acao_w(23)='A' THEN  coalesce(nr_ddd_celular_w,nr_ddd_celular)  ELSE nr_ddd_celular END ,
			nr_cert_casamento		= CASE WHEN tb_ie_acao_w(39)='A' THEN  coalesce(nr_cert_casamento_w,nr_cert_casamento)  ELSE nr_cert_casamento END ,
			dt_emissao_cert_casamento	= CASE WHEN tb_ie_acao_w(38)='A' THEN  coalesce(dt_emissao_cert_casamento_w,dt_emissao_cert_casamento)  ELSE dt_emissao_cert_casamento END ,
			nr_titulo_eleitor		= CASE WHEN tb_ie_acao_w(31)='A' THEN  coalesce(nr_titulo_eleitor_w,nr_titulo_eleitor)  ELSE nr_titulo_eleitor END ,
			nm_abreviado			= CASE WHEN tb_ie_acao_w(1)='A' THEN  coalesce(nm_abreviado_w,nm_abreviado)  ELSE nm_abreviado END ,
			dt_adocao			= CASE WHEN tb_ie_acao_w(36)='A' THEN  coalesce(dt_adocao_w,dt_adocao)  ELSE dt_adocao END ,
			cd_municipio_ibge		= CASE WHEN tb_ie_acao_w(34)='A' THEN  coalesce(cd_municipio_ibge_nasc_w,cd_municipio_ibge)  ELSE cd_municipio_ibge END ,
			sg_estado_nasc			= CASE WHEN tb_ie_acao_w(35)='A' THEN  coalesce(sg_estado_nasc_w,sg_estado_nasc)  ELSE sg_estado_nasc END ,
			cd_cbo_sus			= CASE WHEN tb_ie_acao_w(24)='A' THEN  coalesce(cd_cbo_w,cd_cbo_sus)  ELSE cd_cbo_sus END ,
			nm_social			= CASE WHEN tb_ie_acao_w(37)='A' THEN  coalesce(nm_social_w,nm_social)  ELSE nm_social END ,
			dt_atualizacao			= clock_timestamp(),
			nm_usuario			= nm_usuario_p
		where	cd_pessoa_fisica		= cd_pessoa_fisica_w;
		
		if (qt_reg_complemto_w > 0) then
			update	compl_pessoa_fisica
			set	ds_fax 				= CASE WHEN tb_ie_acao_w(22)='A' THEN  coalesce(nr_fax_w,ds_fax)  ELSE ds_fax END ,
				nr_ddd_fax 			= CASE WHEN tb_ie_acao_w(22)='A' THEN  coalesce(nr_ddd_fax_w,nr_ddd_fax)  ELSE nr_ddd_fax END ,
				ds_municipio 			= CASE WHEN tb_ie_acao_w(20)='A' THEN  coalesce(ds_municipio_w,ds_municipio)  ELSE ds_municipio END ,
				nr_ddd_telefone			= CASE WHEN tb_ie_acao_w(22)='A' THEN  coalesce(nr_ddd_telefone_w,nr_ddd_telefone)  ELSE nr_ddd_telefone END ,
				nr_ddi_telefone			= CASE WHEN tb_ie_acao_w(22)='A' THEN  coalesce(nr_ddi_telefone_w,nr_ddi_telefone)  ELSE nr_ddi_telefone END ,
				nr_telefone			= CASE WHEN tb_ie_acao_w(22)='A' THEN  coalesce(nr_telefone_w,nr_telefone)  ELSE nr_telefone END ,
				ds_bairro			= CASE WHEN tb_ie_acao_w(19)='A' THEN  coalesce(ds_bairro_w,ds_bairro)  ELSE ds_bairro END ,
				cd_municipio_ibge		= CASE WHEN tb_ie_acao_w(22)='A' THEN  coalesce(cd_municipio_ibge_w,cd_municipio_ibge)  ELSE cd_municipio_ibge END ,
				sg_estado			= CASE WHEN tb_ie_acao_w(21)='A' THEN  coalesce(sg_estado_w,sg_estado)  ELSE sg_estado END ,
				cd_cep				= CASE WHEN tb_ie_acao_w(15)='A' THEN  coalesce(cd_cep_w,cd_cep)  ELSE cd_cep END ,
				ds_endereco			= CASE WHEN tb_ie_acao_w(16)='A' THEN  coalesce(ds_endereco_w,ds_endereco)  ELSE ds_endereco END ,
				nr_endereco			= CASE WHEN tb_ie_acao_w(17)='A' THEN  coalesce(nr_endereco_w,nr_endereco)  ELSE nr_endereco END ,
				ds_complemento			= CASE WHEN tb_ie_acao_w(18)='A' THEN  coalesce(ds_complemento_w,ds_complemento)  ELSE ds_complemento END ,
				ds_email			= CASE WHEN tb_ie_acao_w(14)='A' THEN  coalesce(ds_email_w,ds_email)  ELSE ds_email END ,
				cd_tipo_logradouro		= CASE WHEN tb_ie_acao_w(32)='A' THEN  coalesce(cd_tipo_logradouro_w,cd_tipo_logradouro)  ELSE cd_tipo_logradouro END ,
				dt_atualizacao			= clock_timestamp(),
				nm_usuario			= nm_usuario_p
			where	cd_pessoa_fisica		= cd_pessoa_fisica_w
			and	ie_tipo_complemento		= 1;
		end if;
		
		select	max(ie_endereco_correspondencia)
		into STRICT	ie_endereco_correspondencia_w
		from	pessoa_fisica
		where	cd_pessoa_fisica	= cd_pessoa_fisica_w;
		
		if (coalesce(ie_endereco_correspondencia_w,0) <> 0) then
			update	compl_pessoa_fisica
			set	ds_endereco			= CASE WHEN tb_ie_acao_w(16)='A' THEN  coalesce(ds_endereco_corresp_w,ds_endereco)  ELSE ds_endereco END ,
				ds_bairro			= CASE WHEN tb_ie_acao_w(19)='A' THEN  coalesce(ds_bairro_corresp_w,ds_bairro)  ELSE ds_bairro END ,
				ds_municipio 			= CASE WHEN tb_ie_acao_w(20)='A' THEN  coalesce(ds_municipio_corresp_w,ds_municipio)  ELSE ds_municipio END ,
				sg_estado			= CASE WHEN tb_ie_acao_w(21)='A' THEN  coalesce(sg_uf_corresp_w,sg_estado)  ELSE sg_estado END ,
				cd_cep				= CASE WHEN tb_ie_acao_w(15)='A' THEN  coalesce(cd_cep_corresp_w,cd_cep)  ELSE cd_cep END ,
				ds_email			= CASE WHEN tb_ie_acao_w(14)='A' THEN  coalesce(ds_email_corresp_w,ds_email)  ELSE ds_email END ,
				nr_ddd_telefone			= CASE WHEN tb_ie_acao_w(22)='A' THEN  coalesce(nr_ddd_telefone_corresp_w,nr_ddd_telefone)  ELSE nr_ddd_telefone END ,
				nr_telefone			= CASE WHEN tb_ie_acao_w(22)='A' THEN  coalesce(nr_telefone_corresp_w,nr_telefone)  ELSE nr_telefone END ,
				nr_ddd_fax 			= CASE WHEN tb_ie_acao_w(22)='A' THEN  coalesce(nr_ddd_fax_corresp_w,nr_ddd_fax)  ELSE nr_ddd_fax END ,
				ds_fax 				= CASE WHEN tb_ie_acao_w(22)='A' THEN  coalesce(nr_fax_corresp_w,ds_fax)  ELSE ds_fax END ,
				dt_atualizacao			= clock_timestamp(),
				nm_usuario			= nm_usuario_p
			where	cd_pessoa_fisica		= cd_pessoa_fisica_w
			and	ie_tipo_complemento		= ie_endereco_correspondencia_w;
		end if;
		
		update	pls_inclusao_beneficiario
		set	dt_efetivacao	= clock_timestamp(),
			ie_status_mov	= '2',
			ie_status	= 'C',
			dt_atualizacao  = clock_timestamp(),
			nm_usuario      = nm_usuario_p
		where	nr_sequencia	= nr_seq_inclusao_benef_w;
	end if;
	
	if (nr_seq_segurado_w IS NOT NULL AND nr_seq_segurado_w::text <> '') then
		select	nr_seq_contrato,
			nr_seq_intercambio,
			nr_seq_plano
		into STRICT	nr_seq_contrato_w,
			nr_seq_intercambio_w,
			nr_seq_plano_w
		from	pls_segurado
		where	nr_sequencia	= nr_seq_segurado_w;
		
		if (nr_seq_congenere_atend_w IS NOT NULL AND nr_seq_congenere_atend_w::text <> '') then
			select	max(b.nr_sequencia)
			into STRICT	nr_seq_congenere_atual_w
			from	pls_outorgante	a,
				pls_congenere	b
			where	a.cd_cgc_outorgante	= b.cd_cgc
			and	a.cd_estabelecimento	= cd_estabelecimento_p
			and	b.cd_estabelecimento	= cd_estabelecimento_p
			and	b.ie_tipo_congenere	= 'CO';
			
			select	max(nr_sequencia)
			into STRICT	nr_seq_repasse_ant_w
			from	pls_segurado_repasse
			where	nr_seq_segurado	= nr_seq_segurado_w
			and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '');
			
			if (nr_seq_repasse_ant_w IS NOT NULL AND nr_seq_repasse_ant_w::text <> '') then
				CALL pls_finalizar_repasse_seg(nr_seq_repasse_ant_w, fim_dia(last_day(dt_importacao_arquivo_w)),'N', nm_usuario_p);
			end if;
			
			--Gerar o novo repasse
			if (coalesce(nr_seq_contrato_w,0) <> 0) then
				select	max(nr_seq_emissor)
				into STRICT	nr_seq_emissor_w
				from	pls_contrato
				where	nr_sequencia	= nr_seq_contrato_w;
			elsif (coalesce(nr_seq_intercambio_w,0) <> 0) then
				select	max(nr_seq_emissor)
				into STRICT	nr_seq_emissor_w
				from	pls_intercambio
				where	nr_sequencia	= nr_seq_intercambio_w;
			end if;
			
			select	max(ie_preco)
			into STRICT	ie_preco_w
			from	pls_plano
			where	nr_sequencia	= nr_seq_plano_w;
			
			if (ie_preco_w = '1') then
				ie_tipo_repasse_w	:= 'P';
			else
				ie_tipo_repasse_w	:= 'C';
			end if;
			
			if	((ie_tipo_repasse_w = 'P') and (coalesce(nr_seq_contrato_w,0) <> 0)) then
				open C04;
				loop
				fetch C04 into
					nr_seq_congenere_cobr_w,
					nr_seq_ordem_w;
				EXIT WHEN NOT FOUND; /* apply on C04 */
				end loop;
				close C04;
			else
				nr_seq_congenere_cobr_w		:= nr_seq_congenere_atend_w;
			end if;
			
			if (coalesce(nr_seq_congenere_cobr_w,0) = 0) then
				nr_seq_congenere_cobr_w	:= nr_seq_congenere_atend_w;
			end if;
			
			if (coalesce(nr_seq_congenere_atend_w,nr_seq_congenere_atual_w) <> nr_seq_congenere_atual_w) then
				select	nextval('pls_segurado_repasse_seq')
				into STRICT	nr_seq_segurado_repasse_w
				;
				
				insert	into	pls_segurado_repasse(	nr_sequencia, nr_seq_segurado, cd_estabelecimento,
						dt_repasse, nr_seq_congenere, ie_tipo_repasse,
						dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
						ie_cartao_provisorio, nr_seq_congenere_atend, nr_seq_beneficiario_proposta,
						nr_seq_emissor, ie_origem_solicitacao, ie_tipo_compartilhamento)
					values (	nr_seq_segurado_repasse_w, nr_seq_segurado_w, cd_estabelecimento_p,
						trunc(add_months(dt_importacao_arquivo_w,1),'month'), nr_seq_congenere_cobr_w, ie_tipo_repasse_w,
						clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p,
						'N', nr_seq_congenere_atend_w, null,
						nr_seq_emissor_w, 'M', 1);
			end if;
		end if;
	end if;
	end;
end loop;
close C03;

--Suspensao
open c05;
loop
fetch c05 into
	nr_seq_inclusao_benef_w,
	nr_seq_segurado_w,
	dt_solicitacao_w,
	nr_seq_motivo_susp_w;
EXIT WHEN NOT FOUND; /* apply on c05 */
	begin
	
	select	count(1)
	into STRICT	qt_registros_w
	from	pls_segurado_suspensao
	where	nr_seq_segurado	= nr_seq_segurado_w
	and	nr_seq_inclusao_benef	= nr_seq_inclusao_benef_w  LIMIT 1;
	
	if (qt_registros_w = 0) then
		
		select	nextval('pls_segurado_suspensao_seq')
		into STRICT	nr_seq_seg_suspensao_w
		;
		
		insert into	pls_segurado_suspensao(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
				nr_seq_segurado,nr_seq_inclusao_benef,nr_seq_motivo_susp,dt_prev_inicio_susp,ds_observacao)
		values (	nr_seq_seg_suspensao_w,clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,
				nr_seq_segurado_w,nr_seq_inclusao_benef_w,nr_seq_motivo_susp_w,dt_solicitacao_w,wheb_mensagem_pck.get_texto(1127104));
		
		--Libera a suspensao do beneficiario
		CALL pls_atualizar_susp_atend(nr_seq_seg_suspensao_w,null,'S',null,null,nm_usuario_p,'N','N',null);
		
		update	pls_inclusao_beneficiario
		set	dt_efetivacao	= clock_timestamp(),
			ie_status_mov	= '2',
			dt_atualizacao  = clock_timestamp(),
			nm_usuario      = nm_usuario_p
		where	nr_sequencia	= nr_seq_inclusao_benef_w;
		
		CALL pls_gerar_segurado_historico(	nr_seq_segurado_w, '58', clock_timestamp(), wheb_mensagem_pck.get_texto(1127106),
						'pls_gerar_alt_exclusao_benef', null, null, null,
						null, null, null, null,
						null, null, null, null,
						nm_usuario_p, 'N');
	end if;
	end;
end loop;
close c05;

open c06;
loop
fetch c06 into
	nr_seq_inclusao_benef_w,
	nr_seq_segurado_w,
	dt_solicitacao_w;
EXIT WHEN NOT FOUND; /* apply on c06 */
	begin
	select	max(nr_sequencia)
	into STRICT	nr_seq_seg_suspensao_w
	from	pls_segurado_suspensao
	where	nr_seq_segurado	= nr_seq_segurado_w
	and	coalesce(dt_fim_suspensao::text, '') = '';
	
	if (nr_seq_seg_suspensao_w IS NOT NULL AND nr_seq_seg_suspensao_w::text <> '') then
		update	pls_segurado_suspensao
		set	ds_motivo_fim_susp = wheb_mensagem_pck.get_texto(1127100),
			nm_usuario 	= nm_usuario_p,
			dt_atualizacao  = clock_timestamp()
		where	nr_sequencia	= nr_seq_seg_suspensao_w;
		
		--Reativa a suspensao do beneficiario
		CALL pls_atualizar_susp_atend(nr_seq_seg_suspensao_w,null,'D',null,null,nm_usuario_p,'N','N',null);
		
		update	pls_inclusao_beneficiario
		set	dt_efetivacao	= clock_timestamp(),
			ie_status_mov	= '2',
			dt_atualizacao  = clock_timestamp(),
			nm_usuario 	= nm_usuario_p
		where	nr_sequencia	= nr_seq_inclusao_benef_w;
		
		CALL pls_gerar_segurado_historico(	nr_seq_segurado_w, '59', clock_timestamp(), wheb_mensagem_pck.get_texto(1127102),
						'pls_gerar_alt_exclusao_benef', null, null, null,
						null, null, null, null,
						null, null, null, null,
						nm_usuario_p, 'N');
	end if;
	end;
end loop;
close c06;

if (ie_tipo_operacao_p = 'RB') then
	for r_c08_w in c08 loop
		begin
		insert into pls_reinclusao_benef(nr_sequencia, ie_status, dt_solicitacao,
						nm_usuario_nrec, dt_atualizacao_nrec, nm_usuario,
						dt_atualizacao, cd_estabelecimento, nr_seq_segurado,
						nr_seq_contrato, cd_cep, cd_municipio_ibge,
						cd_tipo_logradouro, ds_bairro, ds_complemento, 
						ds_municipio, nr_ddi_telefone, nr_ddd_telefone,
						nr_telefone, nr_ddi_celular, nr_ddd_celular,
						nr_telefone_celular, nr_endereco_varchar, sg_estado,
						ds_endereco, ie_criar_pagador, dt_reinclusao,
						nr_seq_inclusao_benef)
				values (	nextval('pls_reinclusao_benef_seq'), '2', clock_timestamp(),
						nm_usuario_p, clock_timestamp(), nm_usuario_p,
						clock_timestamp(), cd_estabelecimento_p, r_c08_w.nr_seq_segurado,
						r_c08_w.nr_seq_contrato, r_c08_w.cd_cep, r_c08_w.cd_municipio_ibge, 
						r_c08_w.cd_tipo_logradouro, r_c08_w.ds_bairro, r_c08_w.ds_complemento,
						r_c08_w.ds_municipio, r_c08_w.nr_ddi_telefone, r_c08_w.nr_ddd_telefone,
						r_c08_w.nr_telefone, r_c08_w.nr_ddi_celular, r_c08_w.nr_ddd_celular,
						r_c08_w.nr_telefone_celular, r_c08_w.nr_endereco_varchar, r_c08_w.sg_estado,
						r_c08_w.ds_endereco, 'N', r_c08_w.dt_reinclusao,
						r_c08_w.nr_seq_inclusao_benef)
					returning nr_sequencia into nr_seq_reinclusao_benef_w;
						
		update	pls_inclusao_beneficiario
		set	dt_efetivacao	= clock_timestamp(),
			ie_status_mov	= '2',
			dt_atualizacao  = clock_timestamp(),
			nm_usuario 	= nm_usuario_p
		where	nr_sequencia	= r_c08_w.nr_seq_inclusao_benef;
		
		if (coalesce(r_c08_w.nr_seq_titular::text, '') = '') then
			for r_c09_w in c09(r_c08_w.nr_seq_segurado, trunc(r_c08_w.dt_rescisao, 'dd')) loop
				begin
				insert into pls_reinc_dependentes(dt_atualizacao,dt_atualizacao_nrec,nm_usuario,
					nm_usuario_nrec,nr_seq_reinc_benef,nr_seq_segurado,
					nr_sequencia)
				values (clock_timestamp(), clock_timestamp(), nm_usuario_p,
					nm_usuario_p, nr_seq_reinclusao_benef_w, r_c09_w.nr_seq_segurado,
					nextval('pls_reinc_dependentes_seq'));
				end;
			end loop;
		end if;
		end;
	end loop;
end if;

if (coalesce(ie_commit_p, 'S') = 'S') then
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_alt_exclusao_benef ( nr_seq_lote_p bigint, ie_tipo_operacao_p text, cd_estabelecimento_p bigint, nm_usuario_p text, ie_commit_p text default 'S') FROM PUBLIC;

