-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_verif_pend_analise_process ( cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type, qt_pendencias_p INOUT bigint) AS $body$
DECLARE


qt_job_em_exec_w	integer;
ds_comando_job_w	varchar(2000);
jobno 			bigint;

-- são verificados todos os regristros que não estejam como finalizado (feito in por questões de performance)
-- sessao_ativa retorna N caso não exista sessão
c01 CURSOR FOR
	SELECT	pls_util_pck.obter_se_sessao_ativa(a.nm_id_sid, a.nm_id_serial) sessao_ativa,
		a.ie_status,
		a.nr_sequencia
	from	pls_cta_analise_cons a
	where 	a.ie_status in ('X', 'I');

BEGIN

for r_c01_w in C01 loop

	-- só é necessário verificar caso a sessão não estiver ativa, se estiver ativa não precisa verificar
	if (r_c01_w.sessao_ativa = 'N') then

		-- se o status está como Iniciado porém a sessão não está ativa, é feito um update para P
		-- desta forma a JOB que está em excecução irá pegar este registro novamente para processar.
		if (r_c01_w.ie_status = 'I') then

			update	pls_cta_analise_cons
			set	ie_status = 'P'
			where	nr_sequencia = r_c01_w.nr_sequencia;
		end if;
	end if;

	-- se existe algum registro com problema, retorna 1 para que seja apresentado o botão
	-- para o usuário verificar o que aconteceu
	if (r_c01_w.ie_status = 'X') then

		qt_pendencias_p := 1;
	end if;
end loop;

commit;

--Job de processo de pendência de análise
select	count(1)
into STRICT	qt_job_em_exec_w
from	job_v
where 	comando like '%PLS_PROCESSAR_ANALISE_CTA_PEND%';

if (qt_job_em_exec_w = 0) then

	begin
		ds_comando_job_w := 'PLS_PROCESSAR_ANALISE_CTA_PEND(' || pls_util_pck.aspas_w  || 'TASY'|| pls_util_pck.aspas_w|| ',null);';

		CALL pls_cta_gerar_job_regra(	'U', 'PLS_PROCESSAR_ANALISE_CTA_PEND', ds_comando_job_w,
						clock_timestamp() + interval '0 seconds', '(SYSDATE) + 0.1/24','A');
		commit;
	exception
	when others then
		null;
	end;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_verif_pend_analise_process ( cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type, qt_pendencias_p INOUT bigint) FROM PUBLIC;

