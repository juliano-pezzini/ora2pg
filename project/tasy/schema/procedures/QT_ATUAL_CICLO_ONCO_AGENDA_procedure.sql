-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE qt_atual_ciclo_onco_agenda ( nr_seq_paciente_p bigint, nr_seq_atend_inicial_p bigint, dt_prevista_p timestamp, ie_todos_ciclos_p text, nr_seq_motivo_p bigint, ie_atualiza_real_p text, ie_dia_selecionado_p text, nm_usuario_p text, ds_erro_p INOUT text) AS $body$
DECLARE


nr_ciclo_w			integer;
nr_ciclo_ant_w			integer;
nr_ciclo_atual_w		integer;
dt_prevista_inicial_w		timestamp;
dt_prevista_w			timestamp;
dt_prevista_ant_w		timestamp;
dt_prevista_maior_w		timestamp;          --Ivan em 29/08/2007 OS64993
ds_dia_ciclo_w			varchar(05);
ds_erro_w			varchar(254); --Ivan em 29/08/2007 OS64993
qt_anterior_w			bigint;  --Ivan em 29/08/2007 OS64993
nr_prescricao_w			bigint;
dt_real_w			timestamp;
dt_prevista_ww			timestamp;
ie_dia_util_w			varchar(25);
cd_estabelecimento_w		smallint;
nr_seq_ordem_w			bigint;
ie_alterar_data_prod_w		varchar(10);
qt_reg_w			bigint;
dt_atualizacao_w		timestamp;
qt_nao_util_w			bigint:= 1;
dia_w				bigint:= 0;
QT_DIAS_INTERVALO_w		bigint;
qt_dias_intervalo_ciclo_w	bigint;
qt_dias_interv_total_w		bigint:=0;
ie_utliza_dt_atual_prescr_w	varchar(1);
ie_atualizar_horario_w		varchar(1);
ie_atualiza_dia_atendido_w	varchar(3);
ie_status_paciente_w		varchar(60);
dia_primeiro_ciclo_alterar_w	bigint;
nr_seq_atendimento_w		bigint;
nr_seq_atendimento_ww		bigint;
ie_dia_selecionado_w		varchar(10);
nr_seq_pend_agenda_w		bigint;
ie_cancelar_dia_trat_w		varchar(1);
ie_consiste_datas_ant_w		varchar(10);
nm_paciente_w			varchar(60);
ds_prot_medic_w			varchar(255);
ds_convenio_w			varchar(255);
ds_mensagem_w			varchar(4000);
dt_real_ant_w			timestamp;
cd_perfil_w			bigint;
ie_atual_vigencia_autor_w	varchar(15) := 'N';
ie_alt_dt_pend_conf_w		varchar(1);
ie_agendado_w			varchar(1);
dt_executada_w			timestamp;
ie_altera_confirmado_w		varchar(1)	:= 'S';

ie_desfazer_lib_dia_w		varchar(1)	:= 'N';
ie_alterar_nao_apto_w		varchar(1)	:= 'N';
qt_dia_quimio_alt_w		bigint;
ie_consiste_menor_data_w	varchar(1)	:= 'S';
ie_altera_hhmmss_w		varchar(1)	:= 'S';
nr_seq_estabio_param_w		bigint	:= 0;
nr_seq_estagio_w		bigint;
ie_autor_pendente_w		varchar(1);
nr_seq_autorizacao_ww 		autorizacao_convenio.nr_sequencia%type :=0;

ie_limpar_campo_quimio varchar(1);
ds_bloq_trat_quimio_w	paciente_atendimento.ds_bloq_trat_quimio%type;
nr_seq_motivo_bloq_w	paciente_atendimento.nr_seq_motivo_bloq%type;

ie_interv_ciclo_w	varchar(1);
dt_ciclo_ant_w		timestamp;



cd_protocolo_w			paciente_setor.cd_protocolo%type;
nr_seq_medicacao_w		paciente_setor.nr_seq_medicacao%type;


/* Tratamento para consistir agenda a principio somente para um unico ciclo*/

nr_seq_local_w			agenda_quimio.nr_seq_local%type;
nr_seq_agenda_w			agenda_quimio.nr_sequencia%type;
nr_minuto_duracao_w		agenda_quimio.nr_minuto_duracao%type;
nr_seq_atend_consist_w		agenda_quimio.nr_seq_atendimento%type;
ie_consistir_agendamento_w	varchar(1);
c01 CURSOR FOR
	SELECT	a.dt_prevista,
		a.dt_real,
		replace(replace(a.ds_dia_ciclo, 'D', ''), 'd', ''),
		a.nr_prescricao,
		a.nr_ciclo,
		substr(Obter_status_Paciente_qt(nr_seq_atendimento,dt_inicio_adm,dt_fim_adm,nr_seq_local,ie_exige_liberacao,dt_chegada,'C'),1,60),
		a.nr_seq_atendimento,
		Qt_Obter_Se_Dia_Agendado(a.nr_seq_atendimento, coalesce(a.dt_real, a.dt_prevista)),
		qt_obter_data_status('E',a.nr_seq_atendimento),
		obter_dias_interv_protoc(nr_seq_paciente_p, a.nr_ciclo) qt_dias_intervalo_ciclo
	from 	paciente_atendimento a
	where	a.nr_seq_paciente		= nr_seq_paciente_p
	and (ie_todos_ciclos_p	= 'S' or a.nr_ciclo = nr_ciclo_w)
	and	trunc(a.dt_prevista)	>= trunc(dt_prevista_inicial_w)
	and	((ie_dia_selecionado_w	= 'N') or (a.nr_seq_atendimento	= nr_seq_atend_inicial_p))
	and	coalesce(a.dt_suspensao::text, '') = ''
	and	coalesce(qt_obter_data_status('E',a.nr_seq_atendimento),a.dt_fim_adm) is null
	and	coalesce(a.dt_cancelamento::text, '') = ''
	and	not exists (SELECT 1 from agenda_quimio x where x.nr_seq_atendimento = a.nr_seq_atendimento and x.ie_status_agenda = 'F')
	and (exists (select	1
			from	paciente_atend_medic x
			where	x.nr_seq_atendimento = a.nr_seq_atendimento
			and	coalesce(x.ie_local_adm,'H') = 'H')
	or	not exists (select	1
			from	paciente_atend_medic x
			where	x.nr_seq_atendimento = a.nr_seq_atendimento))
	order by a.nr_ciclo, a.nr_seq_atendimento, a.dt_prevista, (replace(replace(a.ds_dia_ciclo, 'D', ''), 'd', ''))::numeric;

c03 CURSOR FOR
    SELECT	nr_sequencia, dt_fim_vigencia
    from	autorizacao_convenio
	where	nr_seq_paciente = nr_seq_atendimento_ww

union

    SELECT	nr_sequencia, dt_fim_vigencia
    from	autorizacao_convenio
	where	nr_seq_paciente_setor = nr_seq_paciente_p
	and	    nr_ciclo = nr_ciclo_atual_w    
    and     coalesce(nr_seq_paciente::text, '') = '';
	
	procedure	ajustar_data_producao(	nr_prescicao_p	bigint,
						dt_producao_p	timestamp) is

	C02 CURSOR FOR
	SELECT	b.nr_seq_ordem
	from	can_ordem_item_prescr b,
		prescr_material a
	where	a.nr_prescricao		= nr_prescicao_p
	and	a.nr_prescricao		= b.nr_prescricao
	and	a.nr_sequencia		= b.nr_seq_prescricao;

	
BEGIN
	if (ie_alterar_data_prod_w		= 'S') then
		open C02;
		loop
		fetch C02 into
			nr_seq_ordem_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin

			update	can_ordem_prod
			set	dt_prevista	= dt_producao_p
			where	nr_sequencia	= nr_seq_ordem_w
			and	coalesce(dt_inicio_preparo::text, '') = '';

			end;
		end loop;
		close C02;

	end if;
	end;

	procedure consistir_horario(nr_seq_paciente_p number,
				    nr_seq_atend_inicial_p number,
				    dt_agenda_p date,
				    dt_prevista_inicial_p date,
				    ie_todos_ciclos_p varchar2,
				    ie_dia_selecionado_p varchar2,
				    nr_ciclo_p number) is

	c10 CURSOR FOR
	SELECT	a.nr_seq_atendimento
	from 	paciente_atendimento a
	where	a.nr_seq_paciente	= nr_seq_paciente_p
	and (ie_todos_ciclos_p	= 'N' or a.nr_ciclo = nr_ciclo_p)
	and	trunc(a.dt_prevista)	>= trunc(dt_agenda_p)
	and	((ie_dia_selecionado_p	= 'N') or (a.nr_seq_atendimento	= nr_seq_atend_inicial_p))
	and	coalesce(a.dt_suspensao::text, '') = ''
	and	coalesce(qt_obter_data_status('E',a.nr_seq_atendimento),a.dt_fim_adm) is null
	and	coalesce(a.dt_cancelamento::text, '') = ''
	and	not exists (SELECT 1 from agenda_quimio x where x.nr_seq_atendimento = a.nr_seq_atendimento and x.ie_status_agenda = 'F')
	and (exists (select	1
			from	paciente_atend_medic x
			where	x.nr_seq_atendimento = a.nr_seq_atendimento
			and	coalesce(x.ie_local_adm,'H') = 'H')
	or	not exists (select	1
			from	paciente_atend_medic x
			where	x.nr_seq_atendimento = a.nr_seq_atendimento))
	order by a.nr_ciclo, a.dt_prevista, (replace(replace(a.ds_dia_ciclo, 'D', ''), 'd', ''))::numeric;


	C20 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.nr_seq_local,
		a.nr_minuto_duracao
	from	agenda_quimio a
	where	a.nr_seq_atendimento	= nr_seq_atend_consist_w
    and	    ie_status_agenda not in ('C','F');

	begin
	open C10;
	loop
	fetch C10 into
		nr_seq_atend_consist_w;
	EXIT WHEN NOT FOUND; /* apply on C10 */
		begin
		open C20;
		loop
		fetch C20 into
			nr_seq_agenda_w,
			nr_seq_local_w,
			nr_minuto_duracao_w;
		EXIT WHEN NOT FOUND; /* apply on C20 */
			begin
			/*Sera verificado  a principio somente o primeiro horario (dt_agenda_p)*/

			 CALL qt_consistir_horario(dt_agenda_p, nr_seq_local_w, nr_minuto_duracao_w, nr_seq_agenda_w, null);
			end;
		end loop;
		close C20;
		end;
	end loop;
	close C10;
	end;
begin

ie_consiste_menor_data_w := Obter_param_Usuario(865, 196, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_consiste_menor_data_w);
ie_limpar_campo_quimio := obter_param_usuario(865, 245, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_limpar_campo_quimio);

dt_prevista_ant_w	:= null;
dt_atualizacao_w	:= clock_timestamp();
ie_dia_selecionado_w	:= coalesce(ie_dia_selecionado_p,'N');


ds_prot_medic_w	:= substr(obter_desc_prot_medic(nr_seq_paciente_p),1,255);

select	max(SUBSTR(OBTER_NOME_PF(b.CD_PESSOA_FISICA),0,60))
into STRICT	nm_paciente_w
from	paciente_setor a,
	pessoa_fisica b
where	a.cd_pessoa_fisica = b.cd_pessoa_fisica
and	a.nr_seq_paciente = nr_seq_paciente_p;

select	max(b.ds_convenio)
into STRICT	ds_convenio_w
from	paciente_setor_convenio a,
	convenio b
where	a.cd_convenio = b.cd_convenio
and	a.nr_seq_paciente = nr_seq_paciente_p;

ds_mensagem_w	:= 	WHEB_MENSAGEM_PCK.get_texto(280386) || nm_paciente_w 	|| chr(10) ||
			WHEB_MENSAGEM_PCK.get_texto(280387) || ds_prot_medic_w || chr(10) ||
			WHEB_MENSAGEM_PCK.get_texto(280388) || ds_convenio_w	|| chr(10);

select	coalesce(max(b.cd_estabelecimento),1),
	max(b.QT_DIAS_INTERVALO)
into STRICT	cd_estabelecimento_w,
	QT_DIAS_INTERVALO_w
from	paciente_setor		b,
	paciente_atendimento	a
where	a.nr_seq_paciente	= b.nr_seq_paciente
and	a.nr_seq_paciente	= nr_seq_paciente_p;

select	max(nr_ciclo),
	max(dt_prevista)
into STRICT	nr_ciclo_w,
	dt_prevista_inicial_w
from	paciente_atendimento
where	nr_seq_atendimento	= nr_seq_atend_inicial_p
and	coalesce(dt_cancelamento::text, '') = '';

if (coalesce(nr_ciclo_w::text, '') = '') and (coalesce(dt_prevista_inicial_w::text, '') = '') then
	CALL WHEB_MENSAGEM_PCK.Exibir_Mensagem_Abort(207476);
end if;

if (ie_consiste_menor_data_w	= 'N') then
	dt_prevista_inicial_w	:= dt_prevista_p;
end if;

select	MAX(dt_prevista)
into STRICT	dt_prevista_maior_w
from	paciente_atendimento
where	nr_seq_paciente		= nr_seq_paciente_p
and	trunc(dt_prevista)	< trunc(dt_prevista_inicial_w)
and	coalesce(dt_cancelamento::text, '') = '';

select 	max(cd_protocolo),
	max(nr_seq_medicacao)
into STRICT	cd_protocolo_w,
	nr_seq_medicacao_w
from	paciente_setor
where	nr_seq_paciente = nr_seq_paciente_p;

ie_alterar_data_prod_w := Obter_param_Usuario(281, 517, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_alterar_data_prod_w);
ie_utliza_dt_atual_prescr_w := Obter_param_Usuario(281, 555, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_utliza_dt_atual_prescr_w);
ie_atualiza_dia_atendido_w := Obter_param_Usuario(281, 675, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_atualiza_dia_atendido_w);
ie_atualizar_horario_w := Obter_param_Usuario(3130, 114, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_atualizar_horario_w);
ie_cancelar_dia_trat_w := Obter_param_Usuario(865, 66, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_cancelar_dia_trat_w);
ie_consiste_datas_ant_w := obter_param_usuario(281, 1022, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_consiste_datas_ant_w);
cd_perfil_w := Obter_param_Usuario(865, 100, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, cd_perfil_w);
ie_atual_vigencia_autor_w := Obter_param_Usuario(865, 105, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_atual_vigencia_autor_w);
ie_alt_dt_pend_conf_w := Obter_param_Usuario(865, 103, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_alt_dt_pend_conf_w);
ie_altera_hhmmss_w := Obter_param_Usuario(865, 201, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_altera_hhmmss_w);
ie_autor_pendente_w := Obter_param_Usuario(865, 243, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_autor_pendente_w);
ie_consistir_agendamento_w := Obter_param_Usuario(865, 113, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_consistir_agendamento_w);

if (ie_atualiza_real_p	= 'N') then
	ie_desfazer_lib_dia_w := Obter_param_Usuario(865, 127, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_desfazer_lib_dia_w);
	ie_alterar_nao_apto_w := Obter_param_Usuario(865, 128, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_alterar_nao_apto_w);
end if;

select	coalesce(max(ie_interv_ciclo),'I')
into STRICT	ie_interv_ciclo_w
from	parametro_medico
where	cd_estabelecimento = cd_estabelecimento_w;

if (trunc(dt_prevista_p) > trunc(dt_prevista_maior_w)) then
	qt_anterior_w	:= 0;
else
	select	count(*)
	into STRICT	qt_anterior_w
	from	paciente_atendimento a
	where	a.nr_seq_paciente		= nr_seq_paciente_p
	and	trunc(a.dt_prevista)	< trunc(dt_prevista_inicial_w)
	and	coalesce(a.dt_cancelamento::text, '') = ''
	and (exists (SELECT	1
			from	paciente_atend_medic x
			where	x.nr_seq_atendimento = a.nr_seq_atendimento
			and	coalesce(x.ie_local_adm,'H') = 'H')
	or	not exists (select	1
			from	paciente_atend_medic x
			where	x.nr_seq_atendimento = a.nr_seq_atendimento));
end if;


if (qt_anterior_w > 0) and (dt_prevista_p < dt_prevista_inicial_w) and (ie_consiste_datas_ant_w	= 'S') then
	ds_erro_p	:= WHEB_MENSAGEM_PCK.get_texto(280389);
else
	begin

	if (coalesce(ie_consistir_agendamento_w,'N') = 'S') then
		consistir_horario(nr_seq_paciente_p, nr_seq_atend_inicial_p, dt_prevista_p,
				  dt_prevista_inicial_w, ie_todos_ciclos_p, ie_dia_selecionado_w, nr_ciclo_w);
	end if;


	open	c01;
		loop
	fetch	c01 into
		dt_prevista_w,
		dt_real_w,
		ds_dia_ciclo_w,
		nr_prescricao_w,
		nr_ciclo_atual_w,
		ie_status_paciente_w,
		nr_seq_atendimento_w,
		ie_agendado_w,
		dt_executada_w,
		qt_dias_intervalo_ciclo_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin

		nr_seq_atendimento_ww	:= nr_seq_atendimento_w;

		if (ie_atualiza_real_p	= 'S') then
			dt_real_ant_w	:= dt_real_w;
		else
			dt_real_ant_w	:= dt_prevista_w;
		end if;

		if (coalesce(dia_primeiro_ciclo_alterar_w::text, '') = '') then
			dia_primeiro_ciclo_alterar_w	:= (replace(replace(coalesce(ds_dia_ciclo_w,1), 'D', ''), 'd', ''))::numeric;
		end if;

		if (ie_atualiza_dia_atendido_w = 'S') or (ie_status_paciente_w <> '83') then

			--dia_w		:= dia_w + somente_numero(ds_dia_ciclo_w) - dia_primeiro_ciclo_alterar_w;
			if (ie_interv_ciclo_w = 'U') and (coalesce(nr_ciclo_ant_w,nr_ciclo_atual_w)	<> nr_ciclo_atual_w) then

				select  max(dt_prevista)
				into STRICT	dt_ciclo_ant_w
				from	paciente_atendimento
				where	nr_seq_paciente = nr_seq_paciente_p
				and	nr_ciclo = nr_ciclo_ant_w
				and 	coalesce(dt_cancelamento::text, '') = '';

			end if;

			dia_w		:= (replace(replace(coalesce(ds_dia_ciclo_w,1), 'D', ''), 'd', ''))::numeric  - coalesce(dia_primeiro_ciclo_alterar_w,0);
            dt_prevista_ww	:= dt_prevista_p + dia_w;
            if (ie_interv_ciclo_w = 'U') and (dt_ciclo_ant_w IS NOT NULL AND dt_ciclo_ant_w::text <> '') then

				if (dia_w = 0) then
					dt_prevista_ww := dt_ciclo_ant_w + coalesce(coalesce(QT_DIAS_INTERVALO_w,qt_dias_intervalo_ciclo_w), 0);
					dt_ciclo_ant_w := dt_prevista_ww;
				else
					dt_prevista_ww := dt_ciclo_ant_w + dia_w;
				end if;
			end if;

			if (coalesce(nr_ciclo_ant_w,nr_ciclo_atual_w)	<> nr_ciclo_atual_w) then
				if (ie_interv_ciclo_w = 'I') then
					qt_dias_interv_total_w := qt_dias_interv_total_w + coalesce(QT_DIAS_INTERVALO_w,qt_dias_intervalo_ciclo_w);
				else
					qt_dias_interv_total_w := dia_w;
				end if;
			end if;

			dt_prevista_ww	:= dt_prevista_ww + coalesce(qt_dias_interv_total_w,1);

			if (ie_atualiza_real_p = 'S') then
				select	count(*)
				into STRICT	qt_reg_w
				from	paciente_atendimento
				where	nr_seq_paciente = nr_seq_paciente_p
				and (ie_todos_ciclos_p	= 'S' or nr_ciclo = nr_ciclo_w)
				and	dt_atualizacao		= dt_atualizacao_w
				and	dt_real			= dt_prevista_ww
				and	coalesce(dt_suspensao::text, '') = ''
				and	coalesce(dt_cancelamento::text, '') = '';
			else
				select	count(*)
				into STRICT	qt_reg_w
				from	paciente_atendimento
				where	nr_seq_paciente = nr_seq_paciente_p
				and (ie_todos_ciclos_p	= 'S' or nr_ciclo = nr_ciclo_w)
				and	dt_atualizacao		= dt_atualizacao_w
				and	dt_prevista		= dt_prevista_ww
				and	coalesce(dt_suspensao::text, '') = ''
				and	coalesce(dt_cancelamento::text, '') = '';
			end if;

			ie_dia_util_w	:= Obter_Se_Dia_Util_Oncologia(dt_prevista_ww, cd_estabelecimento_w, nm_usuario_p,null,cd_protocolo_w,nr_seq_medicacao_w);
			if ( qt_reg_w	>0) then
				ie_dia_util_w	:= 'N';
			end if;

			while(ie_dia_util_w	= 'N') loop
				begin

				qt_nao_util_w	:= qt_nao_util_w +1;
				dt_prevista_ww	:= dt_prevista_ww + 1;
				ie_dia_util_w	:= Obter_Se_Dia_Util_Oncologia(dt_prevista_ww, cd_estabelecimento_w, nm_usuario_p,null,cd_protocolo_w,nr_seq_medicacao_w);

				if (ie_atualiza_real_p = 'S') then
					select	count(*)
					into STRICT	qt_reg_w
					from	paciente_atendimento
					where	nr_seq_paciente = nr_seq_paciente_p
					and (ie_todos_ciclos_p	= 'S' or nr_ciclo = nr_ciclo_w)
					and	dt_atualizacao		= dt_atualizacao_w
					and	dt_real			= dt_prevista_ww
					and	coalesce(dt_suspensao::text, '') = ''
					and	coalesce(dt_cancelamento::text, '') = '';
				else
					select	count(*)
					into STRICT	qt_reg_w
					from	paciente_atendimento
					where	nr_seq_paciente = nr_seq_paciente_p
					and (ie_todos_ciclos_p	= 'S' or nr_ciclo = nr_ciclo_w)
					and	dt_atualizacao		= dt_atualizacao_w
					and	dt_prevista		= dt_prevista_ww
					and	coalesce(dt_suspensao::text, '') = ''
					and	coalesce(dt_cancelamento::text, '') = '';
				end if;

				if (qt_reg_w	>0) then
					ie_dia_util_w	:= 'N';
				end if;
				end;
			end loop;

			if (dt_real_w IS NOT NULL AND dt_real_w::text <> '') then
				begin
				dt_real_w	:= dt_prevista_ww;
				end;
			end if;

			if (ie_atualizar_horario_w = 'S') then

				if (ie_alt_dt_pend_conf_w = 'N') and
					((ie_agendado_w = 'S') or (dt_executada_w IS NOT NULL AND dt_executada_w::text <> ''))then
					ie_altera_confirmado_w	:= 'N';
				else
					ie_altera_confirmado_w	:= 'S';
				end if;

				if (ie_altera_confirmado_w	= 'S') then
					select	max(nr_seq_pend_agenda)
					into STRICT	nr_seq_pend_agenda_w
					from	paciente_atendimento
					where	nr_seq_atendimento 	= nr_seq_atendimento_w;

					update	agenda_quimio
					set 	nr_seq_mot_reagendamento= nr_seq_motivo_p
					where	nr_seq_atendimento	= nr_seq_atendimento_w;
					--and	ie_status_agenda	<> 'C';
					if (ie_cancelar_dia_trat_w = 'S') then
						CALL cancelar_dia_quimio(nr_seq_atendimento_w, null, nm_usuario_p, cd_estabelecimento_w);
					else
						update	agenda_quimio
						set	dt_agenda		= CASE WHEN ie_altera_hhmmss_w='S' THEN dt_real_w  ELSE to_date(to_char(dt_real_w,'dd/mm/yyyy') || ' ' || to_char(dt_agenda,'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss') END ,
							nm_usuario		= nm_usuario_p,
							dt_atualizacao		= clock_timestamp()
						where	nr_seq_atendimento	= nr_seq_atendimento_w
						and	ie_status_agenda	<> 'C';

						select	count(*)
						into STRICT	qt_dia_quimio_alt_w
						from	agenda_quimio
						where	nr_seq_atendimento	= nr_seq_atendimento_w
						and	ie_status_agenda	<> 'C';

						if (qt_dia_quimio_alt_w	> 0) then
							update	agenda_quimio_marcacao
							set	dt_agenda		= CASE WHEN ie_altera_hhmmss_w='S' THEN dt_real_w  ELSE to_date(to_char(dt_real_w,'dd/mm/yyyy') || ' ' || to_char(dt_agenda,'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss') END
							where	dt_agenda between to_date(dt_real_ant_w,'dd/mm/yyyy hh24:mi:ss') and to_date(dt_real_ant_w,'dd/mm/yyyy hh24:mi:ss')
							and	nr_seq_pend_agenda	= nr_seq_pend_agenda_w
							and	coalesce(nr_seq_atendimento, nr_seq_atendimento_w) = nr_seq_atendimento_w;
						end if;
					end if;

					select	max(ds_bloq_trat_quimio),
							max(nr_seq_motivo_bloq)
					into STRICT	ds_bloq_trat_quimio_w,
							nr_seq_motivo_bloq_w
					from	paciente_atendimento
					where	nr_seq_atendimento = nr_seq_atendimento_w;

					update	paciente_atendimento
					set		dt_prevista	= CASE WHEN ie_atualiza_real_p='S' THEN dt_prevista  ELSE dt_prevista_ww END ,
							dt_anterior	= dt_prevista,
							nm_usuario	= nm_usuario_p,
							dt_atualizacao	= dt_atualizacao_w,
							dt_real		= CASE WHEN ie_altera_hhmmss_w='S' THEN dt_real_w  ELSE to_date(to_char(dt_real_w,'dd/mm/yyyy') || ' ' || to_char(dt_real,'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss') END ,
							dt_liberacao	= CASE WHEN ie_desfazer_lib_dia_w='S' THEN  null  ELSE dt_liberacao END ,
							ie_exige_liberacao = CASE WHEN ie_desfazer_lib_dia_w='S' THEN  'S'  ELSE ie_exige_liberacao END ,
							dt_apto		= CASE WHEN ie_alterar_nao_apto_w='S' THEN  null  ELSE dt_Apto END ,
							ds_bloq_trat_quimio 	= CASE WHEN ie_limpar_campo_quimio='S' THEN null  ELSE ds_bloq_trat_quimio_w END ,
							nr_seq_motivo_bloq 	= CASE WHEN ie_limpar_campo_quimio='S' THEN null  ELSE nr_seq_motivo_bloq_w END
					where	nr_seq_paciente = nr_seq_paciente_p
					and		nr_seq_atendimento = nr_seq_atendimento_w;

					ds_mensagem_w	:= substr(ds_mensagem_w || chr(10) ||
								WHEB_MENSAGEM_PCK.get_texto(280390)||nr_ciclo_atual_w||WHEB_MENSAGEM_PCK.get_texto(280391)||ds_dia_ciclo_w||WHEB_MENSAGEM_PCK.get_texto(280392)|| to_char(dt_real_ant_w,'dd/mm/yyyy hh24:mi') ||WHEB_MENSAGEM_PCK.get_texto(280393)|| to_char(dt_real_w,'dd/mm/yyyy hh24:mi'),1,4000);
				end if;
			else
				select	max(nr_seq_pend_agenda)
				into STRICT	nr_seq_pend_agenda_w
				from	paciente_atendimento
				where	nr_seq_atendimento 	= nr_seq_atendimento_w;

				if (ie_alt_dt_pend_conf_w = 'N') and
					((ie_agendado_w = 'S') or (dt_executada_w IS NOT NULL AND dt_executada_w::text <> ''))then
					ie_altera_confirmado_w	:= 'N';
				else
					ie_altera_confirmado_w	:= 'S';
				end if;
				if (ie_altera_confirmado_w	= 'S') then

					update	agenda_quimio
					set 	nr_seq_mot_reagendamento= nr_seq_motivo_p
					where	nr_seq_atendimento	= nr_seq_atendimento_w;
					--and	ie_status_agenda	<> 'C';
					if (ie_cancelar_dia_trat_w = 'S') then
						CALL cancelar_dia_quimio(nr_seq_atendimento_w, null, nm_usuario_p, cd_estabelecimento_w);
					else
						update	agenda_quimio
						set	dt_agenda		= CASE WHEN ie_altera_hhmmss_w='S' THEN dt_real_w  ELSE to_date(to_char(dt_real_w,'dd/mm/yyyy') || ' ' || to_char(dt_agenda,'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss') END ,
							nm_usuario		= nm_usuario_p,
							dt_atualizacao		= clock_timestamp()
						where	nr_seq_atendimento	= nr_seq_atendimento_w
						and	ie_status_agenda	<> 'C';

						select	count(*)
						into STRICT	qt_dia_quimio_alt_w
						from	agenda_quimio
						where	nr_seq_atendimento	= nr_seq_atendimento_w
						and	ie_status_agenda	<> 'C';

						if (qt_dia_quimio_alt_w	> 0) then
							update	agenda_quimio_marcacao
							set	dt_agenda		= CASE WHEN ie_altera_hhmmss_w='S' THEN dt_real_w  ELSE to_date(to_char(dt_real_w,'dd/mm/yyyy') || ' ' || to_char(dt_agenda,'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss') END
							where	dt_agenda between to_date(dt_real_ant_w,'dd/mm/yyyy hh24:mi:ss') and to_date(dt_real_ant_w,'dd/mm/yyyy hh24:mi:ss')
							and	nr_seq_pend_agenda	= nr_seq_pend_agenda_w
							and	coalesce(nr_seq_atendimento, nr_seq_atendimento_w) = nr_seq_atendimento_w;
						end if;
					end if;

					update	paciente_atendimento
					set	dt_prevista	= CASE WHEN ie_atualiza_real_p='S' THEN dt_prevista  ELSE to_date(to_char(dt_prevista_ww,'dd/mm/yyyy') || ' ' || to_char(dt_prevista,'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss') END ,
						dt_anterior	= dt_prevista,
						nm_usuario	= nm_usuario_p,
						dt_atualizacao	= dt_atualizacao_w,
						dt_real		= CASE WHEN ie_altera_hhmmss_w='S' THEN dt_real_w  ELSE to_date(to_char(dt_real_w,'dd/mm/yyyy') || ' ' || to_char(dt_real,'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss') END ,
						dt_liberacao	= CASE WHEN ie_desfazer_lib_dia_w='S' THEN  null  ELSE dt_liberacao END ,
						ie_exige_liberacao = CASE WHEN ie_desfazer_lib_dia_w='S' THEN  'S'  ELSE ie_exige_liberacao END ,
						dt_apto		= CASE WHEN ie_alterar_nao_apto_w='S' THEN  null  ELSE dt_Apto END
					where	nr_seq_paciente = nr_seq_paciente_p
					and		nr_seq_atendimento = nr_seq_atendimento_w;

					ds_mensagem_w	:= substr(ds_mensagem_w || chr(10) ||
								WHEB_MENSAGEM_PCK.get_texto(280390)||nr_ciclo_atual_w||WHEB_MENSAGEM_PCK.get_texto(280391)||ds_dia_ciclo_w||WHEB_MENSAGEM_PCK.get_texto(280392)||  to_char(dt_real_ant_w,'dd/mm/yyyy hh24:mi') ||WHEB_MENSAGEM_PCK.get_texto(280393)|| to_char(dt_real_w,'dd/mm/yyyy hh24:mi'),1,4000);
				end if;
			end if;

			if (trunc(dt_prevista_w)	<> trunc(dt_prevista_ww)) then
				select	max(nr_seq_atendimento)
				into STRICT	nr_seq_atendimento_w
				from	paciente_atendimento
				where	dt_prevista	= dt_prevista_ww
				and	ds_dia_ciclo	= ds_dia_ciclo_w
				and	nr_seq_paciente = nr_seq_paciente_p;
			/*	if	(nr_seq_atendimento_w	> 0) then
					Cancelar_Dia_Quimio(nr_seq_atendimento_w, nm_usuario_p, cd_estabelecimento_w);
				end if;*/
			end if;

			if (nr_prescricao_w > 0) and (ie_utliza_dt_atual_prescr_w = 'N') then
				begin

				update	prescr_medica
				set	dt_prescricao	= dt_prevista_ww
				where	nr_prescricao	= nr_prescricao_w
				and	coalesce(dt_liberacao::text, '') = '';

				ajustar_data_producao(nr_prescricao_w,dt_prevista_ww);
				end;
			end if;

            for line_w in c03
            loop
                if (line_w.nr_sequencia > 0) then
				begin
                    if (ie_autor_pendente_w = 'S' or ie_autor_pendente_w = 'V') then
                        nr_seq_estabio_param_w := obter_param_usuario(3004, 176, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, nr_seq_estabio_param_w);
                        select	min(nr_sequencia)
                        into STRICT	nr_seq_estagio_w
                        from	estagio_autorizacao a
                        where	a.cd_empresa	= obter_empresa_estab(cd_estabelecimento_w)
                        and	a.ie_situacao	= 'A'
                        and	a.ie_interno	= '1';

                        if (coalesce(nr_seq_estabio_param_w,0) > 0) then
                            nr_seq_estagio_w	:= nr_seq_estabio_param_w;
                        end if;
                    end if;

                    if (coalesce(line_w.dt_fim_vigencia, dt_prevista_ww) >= dt_prevista_ww and ie_autor_pendente_w = 'V') then
                        select  nr_seq_estagio
                        into STRICT    nr_seq_estagio_w
                        from    autorizacao_convenio
                        where   nr_sequencia = line_w.nr_sequencia;
                    end if;

                    update	autorizacao_convenio
                    set dt_atualizacao		= clock_timestamp(),
                        nm_usuario			= nm_usuario_p,
                        dt_inicio_vigencia	= CASE WHEN ie_atual_vigencia_autor_w='S' THEN dt_prevista_ww  ELSE dt_inicio_vigencia END ,
                        nr_seq_estagio		= CASE WHEN ie_autor_pendente_w='S' THEN nr_seq_estagio_w WHEN ie_autor_pendente_w='V' THEN nr_seq_estagio_w  ELSE nr_seq_estagio END ,
                        ds_observacao 		= substr(ds_observacao || chr(10) || chr(13) || obter_texto_tasy(1036980, null) || ' ' || CASE WHEN ie_atual_vigencia_autor_w='S' THEN dt_prevista_ww  ELSE dt_inicio_vigencia END ,1,3900)
                    where	nr_sequencia 		= line_w.nr_sequencia;

                    if (line_w.nr_sequencia <> nr_seq_autorizacao_ww) then
                        update	autorizacao_convenio
                        set	dt_entrada_prevista = dt_prevista_ww
                        where	nr_sequencia 		= line_w.nr_sequencia;

                        nr_seq_autorizacao_ww := line_w.nr_sequencia;
                    end if;

                    begin
                    insert into autorizacao_convenio_hist(nr_sequencia,
                            dt_atualizacao,
                            nm_usuario,
                            ds_historico,
                            dt_atualizacao_nrec,
                            nm_usuario_nrec,
                            nr_sequencia_autor)
                        values (nextval('autorizacao_convenio_hist_seq'),
    						clock_timestamp(),
        					nm_usuario_p,
            				WHEB_MENSAGEM_PCK.get_texto(280394)||dt_prevista_w||WHEB_MENSAGEM_PCK.get_texto(280395)||dt_prevista_ww,
                			clock_timestamp(),
                    		nm_usuario_p,
                        	line_w.nr_sequencia);
                    exception
                    when others then
					null;
                    end;
                    end;
                end if;
            end loop;
		end if;

		dt_prevista_ant_w	:= dt_prevista_w;
		nr_ciclo_ant_w		:= nr_ciclo_atual_w;
		end;
	end loop;
	close c01;
	end;
end if;

if (cd_perfil_w <> 0) then
	insert into comunic_interna(
				dt_comunicado,
				ds_titulo,
				ds_comunicado,
				nm_usuario,
				dt_atualizacao,
				ie_geral,
				nm_usuario_destino,
				ds_perfil_adicional,
				nr_sequencia,
				ie_gerencial,
				dt_liberacao,
				cd_estab_destino
			) values (
				clock_timestamp(),
				WHEB_MENSAGEM_PCK.get_texto(280384),
				ds_mensagem_w,
				'Tasy',
				clock_timestamp(),
				'N',
				'',
				cd_perfil_w||', ',
				nextval('comunic_interna_seq'),
				'N',
				clock_timestamp(),
				cd_estabelecimento_w);
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE qt_atual_ciclo_onco_agenda ( nr_seq_paciente_p bigint, nr_seq_atend_inicial_p bigint, dt_prevista_p timestamp, ie_todos_ciclos_p text, nr_seq_motivo_p bigint, ie_atualiza_real_p text, ie_dia_selecionado_p text, nm_usuario_p text, ds_erro_p INOUT text) FROM PUBLIC;

