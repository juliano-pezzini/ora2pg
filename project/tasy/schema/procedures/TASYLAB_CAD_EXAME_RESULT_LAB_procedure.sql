-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE tasylab_cad_exame_result_lab ( nr_prescricao_p bigint, nr_seq_prescricao_p bigint, ie_cobranca_p text, ie_origem_proced_p text, cd_procedimento_p text, --ds_resultado_p		long,
 dt_coleta_p timestamp, ie_status_conversao_p text, ds_result_codigo_p text, ie_formato_texto_p text, dt_retificacao_p timestamp, ie_status_p text, nm_usuario_p text, nr_seq_exame_p text, nr_seq_externo_p bigint, cd_erro_p INOUT bigint, ds_erro_p INOUT text, nr_sequencia_p INOUT bigint) AS $body$
DECLARE


cd_equipamento_w		equipamento_lab.cd_equipamento%type;

cd_procedimento_w		proc_interno.cd_procedimento%type;

nr_seq_exame_w			exame_laboratorio.nr_seq_exame%type;

nr_seq_resultado_w		exame_lab_resultado.nr_seq_resultado%type;

ie_existe_result_lab_w	varchar(1);

nr_sequencia_result_w			result_laboratorio.nr_sequencia%type;
nr_prescricao_result_w          result_laboratorio.nr_prescricao%type;
nr_seq_prescricao_result_w      result_laboratorio.nr_seq_prescricao%type;
nm_usuario_result_w             result_laboratorio.nm_usuario%type;
dt_atualizacao_result_w         result_laboratorio.dt_atualizacao%type;
ie_cobranca_result_w            result_laboratorio.ie_cobranca%type;
ie_origem_proced_result_w       result_laboratorio.ie_origem_proced%type;
cd_procedimento_result_w        result_laboratorio.cd_procedimento%type;
ds_resultado_result_w           result_laboratorio.ds_resultado%type;
dt_coleta_result_w              result_laboratorio.dt_coleta%type;
ie_status_conversao_result_w    result_laboratorio.ie_status_conversao%type;
ds_result_codigo_result_w       result_laboratorio.ds_result_codigo%type;
ie_formato_texto_result_w       result_laboratorio.ie_formato_texto%type;
nr_seq_exame_result_w           result_laboratorio.nr_seq_exame%type;
nr_seq_pagina_result_w          result_laboratorio.nr_seq_pagina%type;
nr_sequencia_w					result_laboratorio.nr_sequencia%type;

c02 CURSOR FOR
 	SELECT	nr_sequencia,
		nr_prescricao,
		nr_seq_prescricao,
		nm_usuario,
		dt_atualizacao,
		ie_cobranca,
		ie_origem_proced,
		cd_procedimento,
		ds_resultado,
		dt_coleta,
		ie_status_conversao,
		ds_result_codigo,
		ie_formato_texto,
		nr_seq_exame,
		nr_seq_pagina
 	from	result_laboratorio
 	where	nr_prescricao = nr_prescricao_p
	and	nr_seq_prescricao = nr_seq_prescricao_p;


BEGIN

cd_erro_p	:= 0;

CALL tasy_atualizar_dados_sessao(nr_seq_externo_p);

if (coalesce(nr_prescricao_p::text, '') = '') then
	cd_erro_p	:= 24;
else

	select	max(a.cd_equipamento)
	into STRICT	cd_equipamento_w
	from	equipamento_lab a
	where	a.ds_sigla = 'TLAB';

	if (coalesce(cd_equipamento_w::text, '') = '') then
		cd_erro_p	:= 16;
	else
		select	max(x.cd_procedimento)
		into STRICT	cd_procedimento_w
		from	proc_interno x,
			regra_proc_interno_integra y
		where	x.nr_sequencia = y.nr_seq_proc_interno
		and	y.ie_tipo_integracao = 5
		and	y.cd_integracao = cd_procedimento_p
		and	x.ie_origem_proced = ie_origem_proced_p;

		select 	max(a.nr_seq_exame)
		into STRICT	nr_seq_exame_w
		from	lab_exame_equip a
		where	a.cd_equipamento = cd_equipamento_w
		and		a.cd_exame_equip = nr_seq_exame_p;

		select 	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
		into STRICT	ie_existe_result_lab_w
		from 	result_laboratorio a
		where 	a.nr_prescricao = nr_prescricao_p
		and 	a.nr_seq_prescricao = nr_seq_prescricao_p;

		--if (ie_existe_result_lab_w = 'S') then
		begin
		open c02;
		loop
		fetch c02 into
			nr_sequencia_result_w,
			nr_prescricao_result_w,
			nr_seq_prescricao_result_w,
			nm_usuario_result_w,
			dt_atualizacao_result_w,
			ie_cobranca_result_w,
			ie_origem_proced_result_w,
			cd_procedimento_result_w,
			ds_resultado_result_w,
			dt_coleta_result_w,
			ie_status_conversao_result_w,
			ds_result_codigo_result_w,
			ie_formato_texto_result_w,
			nr_seq_exame_result_w,
			nr_seq_pagina_result_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			begin

			insert into result_laboratorio_copia(
								nr_sequencia,
								nr_prescricao,
								nr_seq_prescricao,
								nm_usuario,
								dt_atualizacao,
								ie_cobranca,
								ie_origem_proced,
								cd_procedimento,
								ds_resultado,
								ie_formato_texto,
								dt_coleta,
								nr_seq_result_ant,
								ie_status_conversao,
								ds_result_codigo,
								nr_seq_pagina,
								nr_seq_exame,
								dt_desaprovacao)
			values (				nextval('result_laboratorio_copia_seq'),
								nr_prescricao_result_w,
								nr_seq_prescricao_result_w,
								'TasyLab-ResLab',
								clock_timestamp(),
								ie_cobranca_result_w,
								ie_origem_proced_result_w,
								cd_procedimento_result_w,
								ds_resultado_result_w,
								ie_formato_texto_result_w,
								dt_coleta_result_w,
								nr_sequencia_result_w,
								ie_status_conversao_result_w,
								ds_result_codigo_result_w,
								nr_seq_pagina_result_w,
								nr_seq_exame_result_w,
								clock_timestamp());
			end;
		end loop;
		close c02;

		exception
		when others then
			cd_erro_p	:= 1;
			ds_erro_p	:= substr('Erro ao efetuar a c√≥pia do resultado atual '||sqlerrm,1,2000);
		end;

		--end if;
		select	max(nr_seq_resultado)
		into STRICT	nr_seq_resultado_w
		from	exame_lab_resultado
		where	nr_prescricao = nr_prescricao_p;

		if (cd_erro_p = 0) then

			begin
			/*select	result_laboratorio_seq.nextval
			into	nr_sequencia_w
			from	dual;*/
			delete 	FROM result_laboratorio
			where	nr_prescricao = nr_prescricao_p
			and	nr_seq_prescricao = nr_seq_prescricao_p;

			insert into result_laboratorio(
											--nr_sequencia,
											nr_prescricao,
											nr_seq_prescricao,
											nm_usuario,
											dt_atualizacao,
											ie_cobranca,
											ie_origem_proced,
											cd_procedimento,
											--ds_resultado,
											dt_coleta,
											ie_status_conversao,
											ds_result_codigo,
											ie_formato_texto,
											nr_seq_exame,
											dt_retificacao,
											ie_status)
									values (
											--nr_sequencia_w,
											nr_prescricao_p,
											nr_seq_prescricao_p,
											'TasyLab-ResLab',
											clock_timestamp(),
											ie_cobranca_p,
											ie_origem_proced_p,
											cd_procedimento_w,
											--ds_resultado_p,
											dt_coleta_p,
											ie_status_conversao_p,
											ds_result_codigo_p,
											ie_formato_texto_p,
											nr_seq_exame_w,
											dt_retificacao_p,
											ie_status_p);

			select	max(a.nr_sequencia)
			into STRICT	nr_sequencia_w
			from	result_laboratorio a
			where	a.nr_prescricao = nr_prescricao_p
			and	a.nr_seq_prescricao = nr_seq_prescricao_p;

			nr_sequencia_p	:= nr_sequencia_w;



			exception
			when others then
				cd_erro_p	:= 1;
				ds_erro_p	:= substr('Erro ao inserir o exame do resultado '||sqlerrm,1,2000);
			end;

		end if;

	end if;

end if;

if (cd_erro_p = 0) then
	begin
		CALL tasylab_Calcular_Aprovar_Exame(nr_seq_resultado_w,nr_prescricao_p, nr_seq_prescricao_p);
	exception
	when others then
		cd_erro_p	:= 1;
		ds_erro_p	:= substr('Erro ao calcular o resultado aprovado '||sqlerrm,1,2000);
	end;
end if;

--OS7272049 - Ivan
--commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE tasylab_cad_exame_result_lab ( nr_prescricao_p bigint, nr_seq_prescricao_p bigint, ie_cobranca_p text, ie_origem_proced_p text, cd_procedimento_p text,  dt_coleta_p timestamp, ie_status_conversao_p text, ds_result_codigo_p text, ie_formato_texto_p text, dt_retificacao_p timestamp, ie_status_p text, nm_usuario_p text, nr_seq_exame_p text, nr_seq_externo_p bigint, cd_erro_p INOUT bigint, ds_erro_p INOUT text, nr_sequencia_p INOUT bigint) FROM PUBLIC;

