-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pfcs_sched_surg_without_opme ( nr_seq_indicator_p bigint, cd_estabelecimento_p text, nm_usuario_p text) AS $body$
DECLARE

		
pfcs_panel_detail_seq_w    pfcs_panel_detail.nr_sequencia%type;
nr_seq_operational_level_w  pfcs_operational_level.nr_sequencia%type;
nr_seq_panel_w      pfcs_panel.nr_sequencia%type;
qt_total_w      bigint := 0;
considers_sanitize_time_w varchar(1);


c01 CURSOR(considers_sanitize_time_w_p text) FOR
SELECT  a.cd_pessoa_fisica id_patient,
  coalesce(get_formatted_person_name(a.cd_pessoa_fisica, 'list'), obter_nome_pf(a.cd_pessoa_fisica)) nm_patient,
  obter_desc_classif_pac(a.nr_seq_tipo_classif_pac) ds_classification,
  obter_sexo_pf(a.cd_pessoa_fisica, 'D') ds_gender,
  d.dt_nascimento dt_birthdate,
  a.cd_procedimento cd_procedure,
  substr(obter_exame_agenda(a.cd_procedimento, a.ie_origem_proced, a.nr_seq_proc_interno),1,240) ds_procedure,
  (select  x.ds_sala_painel
  from  sala_cirurgia x
  where  x.nr_sequencia  = b.nr_seq_sala_cir) ds_room,
  a.dt_agenda dt_schedule,
  a.dt_agendamento dt_scheduling,
  obter_dados_pf(a.cd_pessoa_fisica, 'I') qt_idade_paciente,
  a.hr_inicio hr_start,
  a.nr_minuto_duracao qt_duration_minutes,
    case
        when(a.nr_minuto_duracao > obter_tempo_total_proced(a.nr_seq_proc_interno,a.cd_medico,b.cd_estabelecimento, considers_sanitize_time_w_p)) and (obter_tempo_total_proced(a.nr_seq_proc_interno,a.cd_medico,b.cd_estabelecimento,'N') > 0)
    then a.nr_minuto_duracao - obter_tempo_total_proced(a.nr_seq_proc_interno,a.cd_medico,b.cd_estabelecimento, considers_sanitize_time_w_p)
    else 0
  end qt_time_outside_period,
  coalesce(get_formatted_person_name(a.cd_medico, 'list'), obter_nome_pf(a.cd_medico)) nm_physician,
  a.ie_status_agenda ie_status_schedule,
  'N' linked_opme
from  pessoa_fisica  d,
  agenda_paciente  a,
  agenda    b
where  a.cd_agenda    = b.cd_agenda
and  a.cd_pessoa_fisica  = d.cd_pessoa_fisica
and  b.cd_tipo_agenda  = 1
and  a.ie_status_agenda not in ('L','B','C','R','I','F')
and  a.nr_minuto_duracao  > obter_tempo_total_proced(a.nr_seq_proc_interno,a.cd_medico,b.cd_estabelecimento,considers_sanitize_time_w_p)
and  trunc(a.dt_agenda)  >= trunc(clock_timestamp())
and  b.cd_estabelecimento  = cd_estabelecimento_p

union

select  a.cd_pessoa_fisica id_patient,
  coalesce(get_formatted_person_name(a.cd_pessoa_fisica, 'list'), obter_nome_pf(a.cd_pessoa_fisica)) nm_patient,
  obter_desc_classif_pac(a.nr_seq_tipo_classif_pac) ds_classification,
  obter_sexo_pf(a.cd_pessoa_fisica, 'D') ds_gender,
  d.dt_nascimento dt_birthdate,
  a.cd_procedimento cd_procedure,
  substr(obter_exame_agenda(a.cd_procedimento, a.ie_origem_proced, a.nr_seq_proc_interno),1,240) ds_procedure,
  (select  x.ds_sala_painel
  from  sala_cirurgia x
  where  x.nr_sequencia  = b.nr_seq_sala_cir) ds_room,
  a.dt_agenda dt_schedule,
  a.dt_agendamento dt_scheduling,
  obter_dados_pf(a.cd_pessoa_fisica, 'I') qt_idade_paciente,
  a.hr_inicio hr_start,
  a.nr_minuto_duracao qt_duration_minutes,
  case
        when(a.nr_minuto_duracao > obter_tempo_total_proced(a.nr_seq_proc_interno,a.cd_medico,b.cd_estabelecimento,considers_sanitize_time_w_p)) and (obter_tempo_total_proced(a.nr_seq_proc_interno,a.cd_medico,b.cd_estabelecimento,'N') > 0)
    then a.nr_minuto_duracao - obter_tempo_total_proced(a.nr_seq_proc_interno,a.cd_medico,b.cd_estabelecimento,considers_sanitize_time_w_p)
    else 0
  end qt_time_outside_period,
  coalesce(get_formatted_person_name(a.cd_medico, 'list'), obter_nome_pf(a.cd_medico)) nm_physician,
  a.ie_status_agenda ie_status_schedule,
  'S' linked_opme
from  pessoa_fisica  d,
  agenda_paciente  a,
  agenda    b,
  agenda_pac_opme c
where  a.cd_agenda    = b.cd_agenda
and  a.nr_sequencia    = c.nr_seq_agenda
and  a.cd_pessoa_fisica  = d.cd_pessoa_fisica
and  coalesce(c.ie_origem_inf,'I') = 'I'
and  b.cd_tipo_agenda  = 1
and  a.ie_status_agenda not in ('L','B','C','R','I','F')
and  not exists (  SELECT  1
      from  proc_interno_opme x
      where  a.nr_seq_proc_interno  = x.nr_seq_proc_interno
      and  x.cd_material    = c.cd_material)
and  trunc(a.dt_agenda)  >= trunc(clock_timestamp())
and  b.cd_estabelecimento  = cd_estabelecimento_p;
BEGIN
considers_sanitize_time_w := obter_param_usuario(871, 227, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, considers_sanitize_time_w);

nr_seq_operational_level_w := pfcs_get_structure_level(
    cd_establishment_p => cd_estabelecimento_p,
    ie_level_p => 'O',
    ie_info_p => 'C');
	
for c01_w in c01(considers_sanitize_time_w) loop

  begin
  qt_total_w  := qt_total_w + 1;
  select  nextval('pfcs_panel_detail_seq')
  into STRICT  pfcs_panel_detail_seq_w
;

  insert into pfcs_panel_detail(
    nr_sequencia,
    nm_usuario,
    dt_atualizacao,
    nm_usuario_nrec,
    dt_atualizacao_nrec,
    ie_situation,
    nr_seq_indicator,
    nr_seq_operational_level)
  values (
    pfcs_panel_detail_seq_w,
    nm_usuario_p,
    clock_timestamp(),
    nm_usuario_p,
    clock_timestamp(),
    'T',
    nr_seq_indicator_p,
    nr_seq_operational_level_w);
	
  insert into pfcs_detail_patient(
    nr_sequencia,
    nm_usuario,
    dt_atualizacao,
    nm_usuario_nrec,
    dt_atualizacao_nrec,
    nr_seq_detail,
    id_patient,
    nm_patient,
    ds_gender,
    ds_classification,
    dt_birthdate,
        ds_age_range)
  values (
    nextval('pfcs_detail_patient_seq'),
    nm_usuario_p,
    clock_timestamp(),
    nm_usuario_p,
    clock_timestamp(),
    pfcs_panel_detail_seq_w,
    c01_w.id_patient,
    c01_w.nm_patient,
    c01_w.ds_gender,
    c01_w.ds_classification,
    c01_w.dt_birthdate,
        c01_w.qt_idade_paciente);
		
  insert into pfcs_detail_schedule(
    nr_sequencia,
    nm_usuario,
    dt_atualizacao,
    nm_usuario_nrec,
    dt_atualizacao_nrec,
    nr_seq_detail,
    cd_procedure,
    ds_procedure,
    ds_room,
    dt_schedule,
    dt_scheduling,
    hr_start,
    qt_duration_minutes,
    nm_physician,
    ie_status_schedule,
    qt_time_outside_period,
    ie_opme_vinculado)
  values (
    nextval('pfcs_detail_schedule_seq'),
    nm_usuario_p,
    clock_timestamp(),
    nm_usuario_p,
    clock_timestamp(),
    pfcs_panel_detail_seq_w,
    c01_w.cd_procedure,
    c01_w.ds_procedure,
    c01_w.ds_room,
    c01_w.dt_schedule,
    c01_w.dt_scheduling,
    c01_w.hr_start,
    c01_w.qt_duration_minutes,
    c01_w.nm_physician,
    c01_w.ie_status_schedule,
    c01_w.qt_time_outside_period,
    c01_w.linked_opme);
  end;

end loop;

commit;

 := pfcs_pck.pfcs_generate_results(
    vl_indicator_p => qt_total_w, nr_seq_indicator_p => nr_seq_indicator_p, nr_seq_operational_level_p => nr_seq_operational_level_w, nm_usuario_p => nm_usuario_p, nr_seq_panel_p => nr_seq_panel_w);
CALL pfcs_pck.pfcs_update_detail(
    nr_seq_indicator_p => nr_seq_indicator_p,
    nr_seq_panel_p => nr_seq_panel_w,
    nr_seq_operational_level_p => nr_seq_operational_level_w,
    nm_usuario_p => nm_usuario_p);
CALL pfcs_pck.pfcs_activate_records(
    nr_seq_indicator_p => nr_seq_indicator_p,
    nr_seq_operational_level_p => nr_seq_operational_level_w,
    nm_usuario_p => nm_usuario_p);
	
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pfcs_sched_surg_without_opme ( nr_seq_indicator_p bigint, cd_estabelecimento_p text, nm_usuario_p text) FROM PUBLIC;

