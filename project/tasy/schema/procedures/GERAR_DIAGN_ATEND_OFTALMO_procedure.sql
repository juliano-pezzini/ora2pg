-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_diagn_atend_oftalmo ( nr_seq_diag_p bigint, dt_inicio_p timestamp, dt_fim_p timestamp, ds_observacao_p text, cd_profissional_p text, ie_paciente_p text, nm_usuario_p text, nr_seq_consulta_p bigint, cd_pessoa_p text, ie_olho_p text, ie_libera_p text, nr_atendimento_p bigint) AS $body$
DECLARE


cd_doenca_cid_w		varchar(10);
dt_diagnostico_w	timestamp;
qt_diagnostico_w	bigint;
ie_classificacao_w	varchar(15);
ie_existe_cid_atendimento_w	varchar(1);

/* Nao e possivel gerar dois CIDS iguais para  a mesma data de diagnosticos*/

					

BEGIN

begin
select	max(cd_doenca_cid)
into STRICT	cd_doenca_cid_w
from	oft_tipo_diagnostico
where	nr_sequencia	=	nr_seq_diag_p;	
exception
when others then
	cd_doenca_cid_w := null;
end;

if (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') and (cd_doenca_cid_w IS NOT NULL AND cd_doenca_cid_w::text <> '')  then
	
	SELECT 	count(*)
	into STRICT 	qt_diagnostico_w
	FROM    diagnostico_medico
	WHERE   nr_atendimento = nr_atendimento_p;
	
	if (qt_diagnostico_w > 0) then
	
		SELECT MAX(dt_diagnostico)
		into STRICT   dt_diagnostico_w
		FROM   diagnostico_medico
		WHERE  nr_atendimento = nr_atendimento_p;
		
		SELECT 	coalesce(MAX('S'),'N')
		INTO STRICT 	ie_existe_cid_atendimento_w
		FROM    diagnostico_doenca
		WHERE   nr_atendimento = nr_atendimento_p
		AND 	cd_doenca = cd_doenca_cid_w
		AND 	dt_diagnostico = dt_diagnostico_w;
		
		SELECT	coalesce(MAX('S'),'P')
		INTO STRICT	ie_classificacao_w
		FROM   	diagnostico_doenca a
		WHERE  	a.nr_atendimento      = nr_atendimento_p
		AND    	a.dt_diagnostico      = dt_diagnostico_w;
		
		if (ie_existe_cid_atendimento_w <> 'S') then
			if (coalesce(ie_libera_p::text, '') = '') then
				insert into 	diagnostico_doenca(
						cd_doenca,
						dt_atualizacao,
						dt_diagnostico,
						nm_usuario,
						nr_atendimento,
						dt_inicio,
						dt_fim,
						ds_diagnostico,
						ie_lado,
						ie_classificacao_doenca)
				values ( 	cd_doenca_cid_w,
						clock_timestamp(),
						dt_diagnostico_w,
						nm_usuario_p,
						nr_atendimento_p,
						dt_inicio_p,
						dt_fim_p,
						ds_observacao_p,
						ie_olho_p,
						ie_classificacao_w);
		
		
			elsif (ie_libera_p = 'L') then
				insert into 	diagnostico_doenca(
						cd_doenca,
						dt_atualizacao,
						dt_diagnostico,
						nm_usuario,
						nr_atendimento,
						dt_liberacao,
						dt_inicio,
						dt_fim,
						ds_diagnostico,
						ie_lado,
						ie_classificacao_doenca)
				values (		cd_doenca_cid_w,
						clock_timestamp(),
						dt_diagnostico_w,
						nm_usuario_p,
						nr_atendimento_p,
						clock_timestamp(),
						dt_inicio_p,
						dt_fim_p,
						ds_observacao_p,
						ie_olho_p,
						ie_classificacao_w);
			end if;	
		end if;		
		
	else
		insert into  diagnostico_medico(
				nr_atendimento,
				dt_diagnostico,                 
				ie_tipo_diagnostico,           
				cd_medico,                      
				dt_atualizacao,                 
				nm_usuario)
		values (
				nr_atendimento_p,
				clock_timestamp(),		
				1,
				cd_profissional_p,
				clock_timestamp(),
				nm_usuario_p);
				commit;

	
		if (coalesce(ie_libera_p::text, '') = '') then
			insert into diagnostico_doenca(
					cd_doenca,
					dt_atualizacao,
					dt_diagnostico,
					nm_usuario,
					nr_atendimento,
					dt_inicio,
					dt_fim,
					ds_diagnostico,
					ie_lado,
					ie_classificacao_doenca)
			values ( cd_doenca_cid_w,
					clock_timestamp(),
					clock_timestamp(),
					nm_usuario_p,
					nr_atendimento_p,
					dt_inicio_p,
					dt_fim_p,
					ds_observacao_p,
					ie_olho_p,
					'P');
	
	
		elsif (ie_libera_p = 'L') then
			insert into diagnostico_doenca(
					cd_doenca,
					dt_atualizacao,
					dt_diagnostico,
					nm_usuario,
					nr_atendimento,
					dt_liberacao,
					dt_inicio,
					dt_fim,
					ds_diagnostico,
					ie_lado,
					ie_classificacao_doenca)
			values (cd_doenca_cid_w,
					clock_timestamp(),
					clock_timestamp(),
					nm_usuario_p,
					nr_atendimento_p,
					clock_timestamp(),
					dt_inicio_p,
					dt_fim_p,
					ds_observacao_p,
					ie_olho_p,
					'P');
		end if;
	end if;
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_diagn_atend_oftalmo ( nr_seq_diag_p bigint, dt_inicio_p timestamp, dt_fim_p timestamp, ds_observacao_p text, cd_profissional_p text, ie_paciente_p text, nm_usuario_p text, nr_seq_consulta_p bigint, cd_pessoa_p text, ie_olho_p text, ie_libera_p text, nr_atendimento_p bigint) FROM PUBLIC;

