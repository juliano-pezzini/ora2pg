-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_discutir_item_contest ( nr_seq_lote_p bigint, nr_seq_conta_mat_p bigint, nr_seq_conta_proc_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_discussao_w		bigint;
nr_seq_contest_w		bigint;
nr_seq_conta_w			bigint;
qt_contestada_w			double precision;
qt_item_w			double precision;
vl_contestado_w			double precision;
vl_item_w			double precision;
vl_recurso_w			double precision;
nr_seq_motivo_glosa_aceita_w	bigint;
nr_seq_lote_contest_w		bigint;
nr_seq_motivo_glosa_w		bigint;
nr_seq_ocorrencia_w		bigint;
nr_seq_mot_quest_w		bigint;
ds_observacao_w			varchar(4000);
nr_sequencia_w			bigint;
nr_seq_disc_proc_w		bigint;
nr_seq_disc_mat_w		bigint;
vl_ndc_w			double precision:= 0;
qt_ndc_w			double precision:= 0;
vl_reconh_orig_w		double precision:= 0;
qt_reconh_orig_w		double precision:= 0;

C01 CURSOR FOR
	SELECT	nr_seq_lote_contest
	from	pls_lote_discussao
	where	nr_sequencia = nr_seq_lote_p
	and	ie_status = 'A';

C02 CURSOR FOR
	SELECT	distinct		/* Procedimentos */
		a.nr_sequencia,
		a.nr_seq_conta
	from	pls_contestacao_proc	c,
		pls_lote_contestacao	b,
		pls_contestacao		a
	where	b.nr_sequencia		= a.nr_seq_lote
	and	c.nr_seq_contestacao	= a.nr_sequencia
	and	c.nr_seq_conta_proc	= nr_seq_conta_proc_p
	and	a.nr_seq_lote		= nr_seq_lote_contest_w
	
union

	SELECT	distinct		/* Materiais */
		a.nr_sequencia,
		a.nr_seq_conta
	from	pls_contestacao_mat	d,
		pls_contestacao_proc	c,
		pls_lote_contestacao	b,
		pls_contestacao		a
	where	b.nr_sequencia		= a.nr_seq_lote
	and	d.nr_seq_contestacao	= a.nr_sequencia
	and	d.nr_seq_conta_mat	= nr_seq_conta_mat_p
	and	a.nr_seq_lote		= nr_seq_lote_contest_w;

/* Copiar glosas da contestação */

c03 CURSOR FOR
	SELECT	c.nr_sequencia,
		c.nr_seq_motivo_glosa,
		c.nr_seq_ocorrencia,
		c.nr_seq_mot_quest,
		c.ds_observacao
	from	pls_contest_item_glosa c,
		pls_contestacao_proc b,
		pls_contestacao a
	where	b.nr_sequencia	= c.nr_seq_contest_proc
	and	a.nr_sequencia	= b.nr_seq_contestacao
	and	a.nr_seq_lote	= nr_seq_lote_contest_w
	and	b.nr_seq_conta_proc = nr_seq_conta_proc_p;

c04 CURSOR FOR
	SELECT	c.nr_sequencia,
		c.nr_seq_motivo_glosa,
		c.nr_seq_ocorrencia,
		c.nr_seq_mot_quest,
		c.ds_observacao
	from	pls_contest_item_glosa c,
		pls_contestacao_mat b,
		pls_contestacao a
	where	b.nr_sequencia	= c.nr_seq_contest_mat
	and	a.nr_sequencia	= b.nr_seq_contestacao
	and	a.nr_seq_lote	= nr_seq_lote_contest_w
	and	b.nr_seq_conta_mat = nr_seq_conta_mat_p;

C05 CURSOR FOR
	SELECT	a.nr_sequencia
	from	pls_contestacao a
	where	a.nr_seq_lote	= nr_seq_lote_contest_w;


BEGIN

open C01;
loop
fetch C01 into
	nr_seq_lote_contest_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	open C02;
	loop
	fetch C02 into
		nr_seq_contest_w,
		nr_seq_conta_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		select	max(w.nr_sequencia)
		into STRICT	nr_seq_discussao_w
		from	pls_lote_discussao	  f,
			pls_contestacao_mat	  d,
			pls_contestacao_proc	  c,
			pls_contestacao 	  y,
			pls_contestacao_discussao w
		where	w.nr_seq_contestacao	= y.nr_sequencia
		and	w.nr_seq_contestacao 	= nr_seq_contest_w
		and	y.nr_seq_conta		= nr_seq_conta_w
		and	w.ie_status 		= 'A'
		and	f.nr_sequencia		= w.nr_seq_lote
		and	f.ie_status		= 'A'
		and (c.nr_seq_contestacao	= y.nr_sequencia
		or	d.nr_seq_contestacao	= y.nr_sequencia)
		and (c.nr_seq_conta_proc	= nr_seq_conta_proc_p
		or	d.nr_seq_conta_mat	= nr_seq_conta_mat_p);

		if (coalesce(nr_seq_discussao_w::text, '') = '') and (nr_seq_conta_w IS NOT NULL AND nr_seq_conta_w::text <> '') then		/* Discussão */
			select	nextval('pls_contestacao_discussao_seq')
			into STRICT	nr_seq_discussao_w
			;

			insert into pls_contestacao_discussao(nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_contestacao,
				ie_status,
				vl_recurso,
				vl_negado,
				vl_aceito,
				nr_seq_lote)
			values (nr_seq_discussao_w,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_contest_w,
				'A',
				0,
				0,
				0,
				nr_seq_lote_p);
		end if;

		if (coalesce(nr_seq_discussao_w::text, '') = '') then	/* Buscar Discussão */
			select	max(nr_sequencia)
			into STRICT	nr_seq_discussao_w
			from	pls_contestacao_discussao
			where	nr_seq_lote = nr_seq_lote_p
			and	nr_seq_contestacao = nr_seq_contest_w;
		end if;

		if (nr_seq_conta_proc_p IS NOT NULL AND nr_seq_conta_proc_p::text <> '') then		/* Procedimentos */
			select	coalesce(a.qt_contestada,0),
				coalesce(a.qt_procedimento,0),
				coalesce(a.vl_contestado,0),
				coalesce(a.vl_procedimento,0),
				a.nr_seq_motivo_glosa_aceita
			into STRICT	qt_contestada_w,
				qt_item_w,
				vl_contestado_w,
				vl_item_w,
				nr_seq_motivo_glosa_aceita_w
			from	pls_contestacao 	b,
				pls_contestacao_proc	a
			where	a.nr_seq_contestacao	= b.nr_sequencia
			and	a.nr_seq_conta_proc 	= nr_seq_conta_proc_p
			and	b.nr_sequencia		= nr_seq_contest_w
			and	b.nr_seq_conta		= nr_seq_conta_w;

			select	nextval('pls_discussao_proc_seq')
			into STRICT	nr_seq_disc_proc_w
			;

			insert into pls_discussao_proc(nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_discussao,
				qt_recurso,
				vl_recurso,
				qt_negada,
				vl_negado,
				nr_seq_conta_proc,
				qt_contestada,
				vl_contestado,
				qt_aceita,
				vl_aceito,
				nr_seq_motivo_glosa_aceita,
				nr_lote_contabil,
				vl_ndc,
				qt_ndc,
				vl_reconh_orig,
				qt_reconh_orig)
			values (nr_seq_disc_proc_w,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_discussao_w,
				qt_contestada_w,
				vl_contestado_w,
				0,
				0,
				nr_seq_conta_proc_p,
				qt_contestada_w,
				vl_contestado_w,
				0,
				0,
				nr_seq_motivo_glosa_aceita_w,
				0,
				vl_ndc_w,
				qt_ndc_w,
				vl_reconh_orig_w,
				qt_reconh_orig_w);

			open c03;
			loop
			fetch c03 into
				nr_sequencia_w,
				nr_seq_motivo_glosa_w,
				nr_seq_ocorrencia_w,
				nr_seq_mot_quest_w,
				ds_observacao_w;
			EXIT WHEN NOT FOUND; /* apply on c03 */
				begin
				insert into pls_discussao_item_glosa(nr_sequencia,
					nm_usuario,
					dt_atualizacao,
					nm_usuario_nrec,
					dt_atualizacao_nrec,
					nr_seq_glosa_contest,
					nr_seq_disc_proc,
					nr_seq_motivo_glosa,
					nr_seq_ocorrencia,
					nr_seq_mot_quest,
					ds_observacao)
				values (nextval('pls_discussao_item_glosa_seq'),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nr_sequencia_w,
					nr_seq_disc_proc_w,
					nr_seq_motivo_glosa_w,
					nr_seq_ocorrencia_w,
					nr_seq_mot_quest_w,
					ds_observacao_w);
				end;
			end loop;
			close c03;

		elsif (nr_seq_conta_mat_p IS NOT NULL AND nr_seq_conta_mat_p::text <> '') then		/* Materiais */
			select	coalesce(a.qt_contestada,0),
				coalesce(a.qt_material,0),
				coalesce(a.vl_contestado,0),
				coalesce(a.vl_material,0),
				a.nr_seq_motivo_glosa_aceita
			into STRICT	qt_contestada_w,
				qt_item_w,
				vl_contestado_w,
				vl_item_w,
				nr_seq_motivo_glosa_aceita_w
			from	pls_contestacao 	b,
				pls_contestacao_mat	a
			where	a.nr_seq_contestacao	= b.nr_sequencia
			and	a.nr_seq_conta_mat 	= nr_seq_conta_mat_p
			and	b.nr_sequencia		= nr_seq_contest_w
			and	b.nr_seq_conta		= nr_seq_conta_w;

			select	nextval('pls_discussao_mat_seq')
			into STRICT	nr_seq_disc_mat_w
			;

			insert into pls_discussao_mat(nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_discussao,
				nr_seq_conta_mat,
				vl_original,
				vl_material,
				vl_atual,
				qt_recurso,
				vl_recurso,
				qt_negada,
				vl_negado,
				qt_contestada,
				vl_contestado,
				qt_aceita,
				vl_aceito,
				nr_seq_motivo_glosa_aceita,
				nr_lote_contabil,
				vl_ndc,
				qt_ndc,
				vl_reconh_orig,
				qt_reconh_orig)
			values (nr_seq_disc_mat_w,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_discussao_w,
				nr_seq_conta_mat_p,
				vl_item_w,
				vl_item_w,
				0,
				qt_contestada_w,
				vl_contestado_w,
				0,
				0,
				qt_contestada_w,
				vl_contestado_w,
				0,
				0,
				nr_seq_motivo_glosa_aceita_w,
				0,
				vl_ndc_w,
				qt_ndc_w,
				vl_reconh_orig_w,
				qt_reconh_orig_w);

			open c04;
			loop
			fetch c04 into
				nr_sequencia_w,
				nr_seq_motivo_glosa_w,
				nr_seq_ocorrencia_w,
				nr_seq_mot_quest_w,
				ds_observacao_w;
			EXIT WHEN NOT FOUND; /* apply on c04 */
				begin
				insert into pls_discussao_item_glosa(nr_sequencia,
					nm_usuario,
					dt_atualizacao,
					nm_usuario_nrec,
					dt_atualizacao_nrec,
					nr_seq_glosa_contest,
					nr_seq_disc_mat,
					nr_seq_motivo_glosa,
					nr_seq_ocorrencia,
					nr_seq_mot_quest,
					ds_observacao)
				values (nextval('pls_discussao_item_glosa_seq'),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nr_sequencia_w,
					nr_seq_disc_mat_w,
					nr_seq_motivo_glosa_w,
					nr_seq_ocorrencia_w,
					nr_seq_mot_quest_w,
					ds_observacao_w);
				end;
			end loop;
			close c04;
		end if;

		CALL pls_atualiza_valores_discussao(nr_seq_discussao_w);
		end;
	end loop;
	close C02;
	end;

end loop;
close C01;

delete
from	w_pls_selecao_item_contest
where	nm_usuario = nm_usuario_p;

CALL pls_atualizar_valores_contest(nr_seq_lote_contest_w,'N');

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_discutir_item_contest ( nr_seq_lote_p bigint, nr_seq_conta_mat_p bigint, nr_seq_conta_proc_p bigint, nm_usuario_p text) FROM PUBLIC;

