-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ptu_gerar_regra_titularidade ( nr_seq_segurado_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
ie_dependente_a100_w		varchar(10);
nr_seq_titular_w		bigint;
nr_seq_parentesco_w		bigint;
qt_registros_w			bigint;
nr_seq_regra_titular_w		bigint;
qt_valor_inicial_w		bigint;
qt_valor_final_w		bigint;
nr_identificacao_titular_w	smallint	:= 00;
nr_identificacao_titular_ww	smallint	:= 00;
ie_titularidade_benef_w		varchar(2)	:= '00';
nr_seq_segurado_ww		bigint;
nr_seq_intercambio_w		bigint;
cd_matricula_familia_w		bigint;

C01 CURSOR FOR 
	SELECT	nr_sequencia 
	from	pls_segurado 
	where	nr_seq_intercambio	= nr_seq_intercambio_w 
	and	cd_matricula_familia	= cd_matricula_familia_w 
	and	nr_seq_parentesco	in (	SELECT	nr_seq_parentesco 
						from	pls_regra_tit_parentesco 
						where	nr_seq_regra_titular	= nr_seq_regra_titular_w);
			

BEGIN 
 
select	coalesce(ie_dependente_a100,'N'), 
	nr_seq_titular, 
	nr_seq_intercambio, 
	cd_matricula_familia, 
	nr_seq_parentesco 
into STRICT	ie_dependente_a100_w, 
	nr_seq_titular_w, 
	nr_seq_intercambio_w, 
	cd_matricula_familia_w, 
	nr_seq_parentesco_w 
from	pls_segurado 
where	nr_sequencia	= nr_seq_segurado_p;
 
/*Caso for dependente com titular ou titular, gera a regra como atualmente*/
 
if (ie_dependente_a100_w = 'N') then 
	CALL pls_gerar_regra_titularidade(nr_seq_segurado_p,cd_estabelecimento_p,nm_usuario_p);
elsif (ie_dependente_a100_w = 'S') then 
	select	count(*) 
	into STRICT	qt_registros_w 
	from	pls_regra_tit_parentesco 
	where	nr_seq_parentesco	= nr_seq_parentesco_w 
	and	cd_estabelecimento	= cd_estabelecimento_p;
	 
	/*Verifcar se existe regra de titularidade para o grau de dependencia do beneficiário*/
 
	if (qt_registros_w	> 0) then 
		select	max(a.nr_sequencia) 
		into STRICT	nr_seq_regra_titular_w 
		from	pls_regra_titularidade		a, 
			pls_regra_tit_parentesco	b 
		where	b.nr_seq_regra_titular	= a.nr_sequencia 
		and	b.nr_seq_parentesco	= nr_seq_parentesco_w 
		and	b.cd_estabelecimento	= cd_estabelecimento_p;
		 
		/*Veirifcar novamente se existe regra de titularidade para o grau de dependencia do beneficiário*/
 
		if (nr_seq_regra_titular_w IS NOT NULL AND nr_seq_regra_titular_w::text <> '') then 
			/*Busca a numero de sua identificção de acorodo com o seu grau de parentesco*/
 
			open C01;
			loop 
			fetch C01 into	 
				nr_seq_segurado_ww;
			EXIT WHEN NOT FOUND; /* apply on C01 */
				begin 
				 
				if (nr_seq_segurado_ww <= nr_seq_segurado_p) then	 
					nr_identificacao_titular_ww := nr_identificacao_titular_ww + 1;
				end if;
				 
				end;
			end loop;
			close C01;
		 
			/*Obter os dados da regra da titularidade*/
 
			select	qt_valor_inicial, 
				qt_valor_final 
			into STRICT	qt_valor_inicial_w, 
				qt_valor_final_w 
			from	pls_regra_titularidade 
			where	nr_sequencia	= nr_seq_regra_titular_w;
			 
			/*Monta a regra da titularidade*/
 
			ie_titularidade_benef_w	:= qt_valor_inicial_w + nr_identificacao_titular_ww -1;
			 
			/*Verificar se a titularidade montade para o beneficiário é maior do que o valor final*/
 
			if (ie_titularidade_benef_w <= coalesce(qt_valor_final_w,ie_titularidade_benef_w)) then 
				/*Concatena o 0 a esquerda para a titularidade do beneficiário*/
 
				ie_titularidade_benef_w	:= lpad(ie_titularidade_benef_w, 2, '0');
			else 
				/*Caso a titularidade montada for maior que a regra, então realiza a titularidade como atualemte*/
 
				ie_titularidade_benef_w	:= lpad(nr_identificacao_titular_w, 2, '0');	
			end if;	
		else 
			/*Caso não exitir a regra então faz o tratamento como atualmente*/
 
			ie_titularidade_benef_w	:= lpad(nr_identificacao_titular_w, 2, '0');
		end if;
	else 
		/*Caso não exitir a regra então faz o tratamento como atualmente*/
 
		ie_titularidade_benef_w	:= lpad(nr_identificacao_titular_w, 2, '0');
	end if;
	 
	update	pls_segurado 
	set	ie_titularidade	= ie_titularidade_benef_w, 
		dt_atualizacao	= clock_timestamp(), 
		nm_usuario	= nm_usuario_p 
	where	nr_sequencia	= nr_seq_segurado_p;
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_gerar_regra_titularidade ( nr_seq_segurado_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

