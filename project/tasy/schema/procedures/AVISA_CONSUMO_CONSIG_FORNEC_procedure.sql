-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE avisa_consumo_consig_fornec ( nr_ordem_compra_p bigint, cd_material_p bigint, nr_seq_lote_fornec_p bigint, qt_material_p bigint, nr_atendimento_p bigint, cd_estabelecimento_p bigint) AS $body$
DECLARE


ds_email_origem_w			varchar(255);
nm_usuario_origem_w		varchar(255);
ds_assunto_w			varchar(255);
nm_fornecedor_w			varchar(255);
ds_material_w			varchar(255);
ds_lote_w			varchar(100);
dt_validade_w			varchar(20);
nm_paciente_w			varchar(255);
ds_convenio_w			varchar(40);
ds_mensagem_w			varchar(4000);
ds_email_w			varchar(255);


BEGIN

select	coalesce(max(ds_mensagem_cons_consig),'X')
into STRICT	ds_mensagem_w
from	parametro_compras
where	cd_estabelecimento = cd_estabelecimento_p;

if (ds_mensagem_w <> 'X') then
	begin

	select	ds_email
	into STRICT	ds_email_origem_w
	from	parametro_compras
	where	cd_estabelecimento = cd_estabelecimento_p;

	/*select	nvl(ds_fantasia,ds_razao_social)
	into	nm_usuario_origem_w
	from	estabelecimento_v
	where	cd_estabelecimento = cd_estabelecimento_p;*/
	select	coalesce(wheb_usuario_pck.get_nm_usuario,'')
	into STRICT	nm_usuario_origem_w
	;

	/*Aviso de consumo de consignado (#@NR_ORDEM_COMPRA#@)*/

	ds_assunto_w	:=	 wheb_mensagem_pck.get_texto(297601,'NR_ORDEM_COMPRA=' || nr_ordem_compra_p);

	select	coalesce(b.nm_fantasia,' '),
		c.ds_email
	into STRICT	nm_fornecedor_w,
		ds_email_w
	from	pessoa_juridica_estab c,
		pessoa_juridica b,
		ordem_compra a
	where	a.nr_ordem_compra = nr_ordem_compra_p
	and	b.cd_cgc = a.cd_cgc_fornecedor
	and	c.cd_cgc = b.cd_cgc
	and	c.cd_estabelecimento = cd_estabelecimento_p;

	select	ds_material
	into STRICT	ds_material_w
	from	material
	where	cd_material = cd_material_p;

	if (coalesce(nr_seq_lote_fornec_p,0) > 0) then
		begin

		select	ds_lote_fornec,
			CASE WHEN ie_validade_indeterminada='S' THEN  /*'Indeterminado'*/ wheb_mensagem_pck.get_texto(297604)  ELSE PKG_DATE_FORMATERS.TO_VARCHAR(dt_validade, 'shortDate', cd_estabelecimento_p,	WHEB_USUARIO_PCK.GET_NM_USUARIO) END
		into STRICT	ds_lote_w,
			dt_validade_w
		from	material_lote_fornec
		where	nr_sequencia = nr_seq_lote_fornec_p;

		end;
	else
		begin

		/*(Sem lote informado)*/

		ds_lote_w	:= wheb_mensagem_pck.get_texto(297605);
		dt_validade_w	:= wheb_mensagem_pck.get_texto(297605);

		end;
	end if;

	select	nm_paciente,
		substr(ds_convenio,1,40)
	into STRICT	nm_paciente_w,
		ds_convenio_w
	from	atendimento_paciente_v
	where	nr_atendimento = nr_atendimento_p;

	ds_mensagem_w := substr(replace_macro(ds_mensagem_w,'@fornecedor',nm_fornecedor_w),1,4000);
	ds_mensagem_w := substr(replace_macro(ds_mensagem_w,'@material',ds_material_w),1,4000);
	ds_mensagem_w := substr(replace_macro(ds_mensagem_w,'@lote',ds_lote_w),1,4000);
	ds_mensagem_w := substr(replace_macro(ds_mensagem_w,'@validade_lote',dt_validade_w),1,4000);
	ds_mensagem_w := substr(replace_macro(ds_mensagem_w,'@quantidade',qt_material_p),1,4000);
	ds_mensagem_w := substr(replace_macro(ds_mensagem_w,'@paciente',nm_paciente_w),1,4000);
	ds_mensagem_w := substr(replace_macro(ds_mensagem_w,'@convenio',ds_convenio_w),1,4000);
	ds_mensagem_w := substr(replace_macro(ds_mensagem_w,'@atendimento',nr_atendimento_p),1,4000);
	ds_mensagem_w := substr(replace_macro(ds_mensagem_w,'@ordem',nr_ordem_compra_p),1,4000);
	ds_mensagem_w := substr(replace_macro(ds_mensagem_w,'@data',PKG_DATE_FORMATERS.TO_VARCHAR(clock_timestamp(), 'timestamp', cd_estabelecimento_p, WHEB_USUARIO_PCK.GET_NM_USUARIO)),1,4000);

	CALL enviar_email(ds_assunto_w,ds_mensagem_w,ds_email_origem_w,ds_email_w,nm_usuario_origem_w,'M');

	end;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE avisa_consumo_consig_fornec ( nr_ordem_compra_p bigint, cd_material_p bigint, nr_seq_lote_fornec_p bigint, qt_material_p bigint, nr_atendimento_p bigint, cd_estabelecimento_p bigint) FROM PUBLIC;

