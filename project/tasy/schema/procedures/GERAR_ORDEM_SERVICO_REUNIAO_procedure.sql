-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_ordem_servico_reuniao ( nr_seq_reuniao_p bigint, nr_seq_localizacao_p bigint, nr_seq_equipamento_p bigint, qt_tempo_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE

 
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
Finalidade: 
------------------------------------------------------------------------------------------------------------------- 
Locais de chamada direta: 
[ ] Objetos do dicionário [ X ] Tasy (Delphi/Java) [ ] Portal [ ] Relatórios [ ] Outros: 
 ------------------------------------------------------------------------------------------------------------------ 
Pontos de atenção: 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
 
 
ds_dano_w				varchar(3900);
ds_dano_aux_w				varchar(3900);
ds_texto_reuniao_w			varchar(4000);
ds_observacao_w				varchar(4000);
ds_texto_reuniao_aux_w			varchar(4000);
nm_usuario_dest_w			varchar(4000)	:= null;
ds_assunto_w				varchar(255);
ds_dano_breve_w				varchar(255);
nm_usuario_exec_w			varchar(255);
nm_pessoa_fisica_w			varchar(80);
cd_pessoa_responsavel_w			varchar(10);
cd_pessoa_participante_w		varchar(10);
nr_seq_ordem_w				bigint	:= null;
nr_seq_local_w				bigint;
dt_reuniao_w				timestamp;
dt_fim_previsto_w			timestamp;
dt_comunic_w				timestamp;	
 
C01 CURSOR FOR 
	SELECT	ds_pauta 
	from	ata_reuniao_pauta 
	where	nr_seq_reuniao	= nr_seq_reuniao_p;
	
C02 CURSOR FOR 
	SELECT	cd_pessoa_participante 
	from	ata_participante 
	where	nr_seq_reuniao	= nr_seq_reuniao_p;
	

BEGIN 
if (nr_seq_reuniao_p IS NOT NULL AND nr_seq_reuniao_p::text <> '') then 
	select	max(a.cd_pessoa_responsavel), 
		substr(max(a.ds_assunto),1,255), 
		max(a.dt_reuniao), 
		substr(max(a.ds_observacao),1,4000) 
	into STRICT	cd_pessoa_responsavel_w, 
		ds_assunto_w, 
		dt_reuniao_w, 
		ds_observacao_w 
	from	ata_reuniao	a 
	where	a.nr_sequencia	= nr_seq_reuniao_p;
	 
	if (coalesce(cd_pessoa_responsavel_w::text, '') = '') then 
		select	max(a.cd_pessoa_fisica) 
		into STRICT	cd_pessoa_responsavel_w 
		from	usuario	a 
		where	a.nm_usuario	= nm_usuario_p;
	end if;
	 
	open C01;
	loop 
	fetch C01 into	 
		ds_dano_aux_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin 
		ds_dano_w	:= substr(ds_dano_w || ds_dano_aux_w || chr(10) ,1,3900);
		end;
	end loop;
	close C01;
	 
	ds_dano_breve_w		:= substr(wheb_mensagem_pck.get_texto(393088,'NR_SEQ_REUNIAO=' || nr_seq_reuniao_p || ';DS_ASSUNTO=' || ds_assunto_w) ,1,80);
	dt_fim_previsto_w	:= (dt_reuniao_w + (qt_tempo_p/1440));
	 
	select	max(coalesce(nr_seq_localizacao_p,nr_seq_local)) 
	into STRICT	nr_seq_local_w 
	from	man_equipamento 
	where	nr_sequencia	= nr_seq_equipamento_p;
	 
	select	nextval('man_ordem_servico_seq') 
	into STRICT	nr_seq_ordem_w 
	;
 
	insert into man_ordem_servico(cd_pessoa_solicitante, 
		dt_ordem_servico, 
		ie_prioridade, 
		ie_parado, 
		nr_sequencia, 
		dt_atualizacao, 
		nm_usuario, 
		dt_atualizacao_nrec, 
		nm_usuario_nrec, 
		ds_dano, 
		ie_tipo_ordem, 
		ds_dano_breve, 
		nr_seq_localizacao, 
		nr_seq_equipamento, 
		ie_classificacao, 
		nr_seq_estagio, 
		dt_inicio_previsto, 
		dt_fim_previsto, 
		ie_status_ordem, 
		ie_origem_os) 
	values (cd_pessoa_responsavel_w, 
		clock_timestamp(), 
		'B', 
		'N', 
		nr_seq_ordem_w, 
		clock_timestamp(), 
		nm_usuario_p, 
		clock_timestamp(), 
		nm_usuario_p, 
		substr(wheb_mensagem_pck.get_texto(393091,'DS_DANO=' || ds_dano_w),1,4000), 
		3, 
		ds_dano_breve_w, 
		nr_seq_local_w, 
		nr_seq_equipamento_p, 
		'S', 
		301, 
		dt_reuniao_w, 
		dt_fim_previsto_w, 
		2, 
		1);
		 
	dt_comunic_w	:= (dt_reuniao_w - (15/1440));
	 
	ds_texto_reuniao_w	:= substr(wheb_mensagem_pck.get_texto(393096, 'NR_SEQ_REUNIAO=' || nr_seq_reuniao_p || ';DT_OCORRENCIA=' || to_char(dt_reuniao_w, 'dd/mm/yyyy hh24:mi:ss')),1,4000);
	 
	ds_texto_reuniao_aux_w	:= null;
	 
	open C02;
	loop 
	fetch C02 into	 
		cd_pessoa_participante_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin 
		select	max(a.nm_usuario) 
		into STRICT	nm_usuario_exec_w 
		from	usuario	a 
		where	a.cd_pessoa_fisica	= cd_pessoa_participante_w;
		 
		if (nm_usuario_exec_w IS NOT NULL AND nm_usuario_exec_w::text <> '') then 
			insert into man_ordem_servico_exec(nr_sequencia, 
				nr_seq_ordem, 
				dt_atualizacao, 
				nm_usuario, 
				nm_usuario_exec, 
				qt_min_prev, 
				dt_ult_visao, 
				nr_seq_funcao, 
				dt_recebimento, 
				nr_seq_tipo_exec, 
				dt_fim_execucao) 
			values (nextval('man_ordem_servico_exec_seq'), 
				nr_seq_ordem_w, 
				clock_timestamp(), 
				nm_usuario_p, 
				nm_usuario_exec_w, 
				qt_tempo_p, 
				null, 
				null, 
				clock_timestamp(), 
				3, 
				null);
				 
			insert into man_ordem_ativ_prev(nm_usuario, 
				dt_atualizacao, 
				nm_usuario_nrec, 
				dt_atualizacao_nrec, 
				nr_seq_ordem_serv, 
				nr_sequencia, 
				dt_prevista, 
				qt_min_prev, 
				qt_atividade, 
				nm_usuario_prev) 
			values (nm_usuario_p, 
				clock_timestamp(), 
				nm_usuario_p, 
				clock_timestamp(), 
				nr_seq_ordem_w, 
				nextval('man_ordem_ativ_prev_seq'), 
				dt_reuniao_w, 
				qt_tempo_p, 
				1, 
				nm_usuario_exec_w);
				 
			select	max(SUBSTR(OBTER_NOME_PF(a.cd_pessoa_fisica), 0, 80)) 
			into STRICT	nm_pessoa_fisica_w 
			from	pessoa_fisica	a 
			where	a.cd_pessoa_fisica	= cd_pessoa_participante_w;
			 
			ds_texto_reuniao_w	:= substr(ds_texto_reuniao_w || chr(13) || nm_pessoa_fisica_w || ', ',1,4000);
			 
			nm_usuario_dest_w	:= nm_usuario_dest_w || nm_usuario_exec_w || ', ';
		end if;
		end;
	end loop;
	close C02;
	 
	ds_texto_reuniao_w	:= substr(wheb_mensagem_pck.get_texto(393105, 'DS_TEXTO_REUNIAO=' || ds_texto_reuniao_w || ';DS_OBSERVACAO=' || ds_observacao_w),1,4000);
				 
	CALL gerar_comunic_padrao(	dt_comunic_w, 
				substr(wheb_mensagem_pck.get_texto(393109,'NR_SEQ_REUNIAO=' || nr_seq_reuniao_p || ';DS_ASSUNTO=' || ds_assunto_w),1,255), 
				substr(ds_texto_reuniao_w,1,4000), 
				nm_usuario_p, 
				'N', 
				substr(nm_usuario_dest_w,1,4000), 
				'N', 
				null, 
				null, 
				null, 
				null, 
				dt_comunic_w, 
				null, 
				null);
	 
	update	ata_reuniao 
	set	nr_seq_ordem_serv	= nr_seq_ordem_w 
	where	nr_sequencia		= nr_seq_reuniao_p;
 
	commit;
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_ordem_servico_reuniao ( nr_seq_reuniao_p bigint, nr_seq_localizacao_p bigint, nr_seq_equipamento_p bigint, qt_tempo_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

