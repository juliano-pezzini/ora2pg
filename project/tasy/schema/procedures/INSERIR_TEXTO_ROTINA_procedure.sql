-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE inserir_texto_rotina ( nr_seq_texto_p bigint, nm_campo_texto_p text, ie_item_selecionado_p text, nr_sequencia_p bigint, nr_pos_cursor_p bigint, ie_posicao_texto_p text, ie_inserir_p text, nr_atendimento_p bigint, cd_medico_p text, cd_pessoa_fisica_p text, ie_tipo_evolucao_p text, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
ds_texto_w		text;
ds_texto_aux_w		text;	
ds_texto_aux_pos_w	text;
ds_titulo_w		varchar(255);
ie_existe_atributo_w	smallint := 0;
			
/* 
ie_item_selecionado_p 
A = anamnese 
C = Consentimentos 
E = Evolucao 
 
ie_inserir_p 
S = novo registro, insert 
N = Update em um registro j√° existente 
 
ie_posicao_texto_p 
I = Inicio 
F = Final 
P = Posicao atual do cursor 
 
*/
			 

BEGIN 
if (nr_seq_texto_p IS NOT NULL AND nr_seq_texto_p::text <> '') and (nm_campo_texto_p IS NOT NULL AND nm_campo_texto_p::text <> '') and (nr_sequencia_p IS NOT NULL AND nr_sequencia_p::text <> '') and (ie_inserir_p IS NOT NULL AND ie_inserir_p::text <> '') and (cd_medico_p IS NOT NULL AND cd_medico_p::text <> '') and (cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') and (cd_estabelecimento_p IS NOT NULL AND cd_estabelecimento_p::text <> '') and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') then 
	begin 
	 
	if (nr_seq_texto_p IS NOT NULL AND nr_seq_texto_p::text <> '') then 
		begin 
		 
		select	ds_texto, 
			substr(ds_titulo,1,255) 
		into STRICT	ds_texto_w, 
			ds_titulo_w 
		from	texto_padrao 
		where	nr_sequencia = nr_seq_texto_p;
		 
		end;
	end if;
 
	if (nm_campo_texto_p IS NOT NULL AND nm_campo_texto_p::text <> '') then 
		begin 
 
		if (ie_item_selecionado_p = 'A') then--Anamnese 
			begin 
			 
			select	count(*) 
			into STRICT	ie_existe_atributo_w 
			from	user_tab_columns 
			where	table_name = 'ANAMNESE_PACIENTE' 
			and	column_name = upper(nm_campo_texto_p);
				 
			if (ie_existe_atributo_w > 0) then 
				begin 
				 
				if (ie_inserir_p = 'S') then 
					begin 
					 
					insert	into	anamnese_paciente( 
						nr_sequencia, 
						dt_ananmese, 
						nr_atendimento, 
						dt_atualizacao, 
						nm_usuario, 
						cd_medico, 
						ds_anamnese) 
					values ( 
						nextval('anamnese_paciente_seq'), 
						clock_timestamp(), 
						nr_atendimento_p, 
						clock_timestamp(), 
						nm_usuario_p, 
						cd_medico_p, 
						ds_texto_w);
						 
					commit;
						 
					end;
				else 
					begin 
					 
					if (ie_posicao_texto_p = 'I') then -- inicio do texto 
						begin 
						 
						select	nm_campo_texto_p 
						into STRICT	ds_texto_aux_w 
						from	anamnese_paciente 
						where	nr_sequencia = nr_sequencia_p;
						 
						update	anamnese_paciente 
						set	ds_anamnese	= ds_texto_w || ' ' || ds_texto_aux_w, 
							nm_usuario	= nm_usuario_p, 
							dt_atualizacao	= clock_timestamp() 
						where	nr_sequencia	= nr_sequencia_p;
						 
						commit;
						 
						end;
					elsif (ie_posicao_texto_p = 'F') then -- final do texto 
						begin 
						 
						select	nm_campo_texto_p 
						into STRICT	ds_texto_aux_w 
						from	anamnese_paciente 
						where	nr_sequencia = nr_sequencia_p;
						 
						update	anamnese_paciente 
						set	ds_anamnese	= ds_texto_aux_w || ' ' || ds_texto_w, 
							nm_usuario	= nm_usuario_p, 
							dt_atualizacao	= clock_timestamp() 
						where	nr_sequencia	= nr_sequencia_p;
						 
						commit;
						 
						end;
					elsif (ie_posicao_texto_p = 'P') and (nr_pos_cursor_p > 0) then --posicao atual do cursor 
						begin 
						 
						select	nm_campo_texto_p 
						into STRICT	ds_texto_aux_w 
						from	anamnese_paciente 
						where	nr_sequencia = nr_sequencia_p;
						 
						ds_texto_aux_pos_w := substr(ds_texto_aux_w,1,nr_pos_cursor_p) || ' ' || ds_texto_w || ' ' || substr(ds_texto_aux_w,nr_pos_cursor_p, length(ds_texto_aux_w));
						 
						update	anamnese_paciente 
						set	ds_anamnese	= ds_texto_aux_pos_w, 
							nm_usuario	= nm_usuario_p, 
							dt_atualizacao	= clock_timestamp() 
						where	nr_sequencia	= nr_sequencia_p;
						 
						commit;
						 
						end;
					 
					end if;
								 
					 
					end;
				end if;
				 
				end;
			end if;
			 
			end;
		elsif (ie_item_selecionado_p = 'C') then--Consentimentos 
			begin 
				 
			select	count(*) 
			into STRICT	ie_existe_atributo_w 
			from	user_tab_columns 
			where	table_name = 'PEP_PAC_CI' 
			and	column_name = upper(nm_campo_texto_p);		
				 
			if (ie_existe_atributo_w > 0) then 
				begin 
				 
				if (ie_inserir_p = 'S') then 
					begin 
					 
					insert	into	pep_pac_ci( 
						nr_sequencia, 
						cd_estabelecimento, 
						cd_pessoa_fisica, 
						dt_atualizacao, 
						nm_usuario, 
						dt_atualizacao_nrec, 
						nm_usuario_nrec, 
						cd_profissional, 
						ds_titulo, 
						ds_texto, 
						nr_atendimento 
						) 
					values ( 
						nextval('pep_pac_ci_seq'), 
						cd_estabelecimento_p, 
						cd_pessoa_fisica_p, 
						clock_timestamp(), 
						nm_usuario_p, 
						clock_timestamp(), 
						nm_usuario_p, 
						cd_medico_p, 
						ds_titulo_w, 
						ds_texto_w, 
						nr_atendimento_p 
						);
						 
					commit;
					 
					end;
				else 
					begin 
					 
					if (ie_posicao_texto_p = 'I') then -- inicio do texto 
						begin 
						 
						select	nm_campo_texto_p 
						into STRICT	ds_texto_aux_w 
						from	pep_pac_ci 
						where	nr_sequencia = nr_sequencia_p;
						 
						update	pep_pac_ci 
						set	ds_titulo	= ds_titulo_w, 
							ds_texto	= ds_texto_w || ' ' || ds_texto_aux_w, 
							nm_usuario	= nm_usuario_p, 
							dt_atualizacao	= clock_timestamp() 
						where	nr_sequencia	= nr_sequencia_p;
						 
						commit;
						 
						 
						end;
					elsif (ie_posicao_texto_p = 'F') then -- final do texto 
						begin 
						 
						select	nm_campo_texto_p 
						into STRICT	ds_texto_aux_w 
						from	pep_pac_ci 
						where	nr_sequencia = nr_sequencia_p;
						 
						update	pep_pac_ci 
						set	ds_titulo	= ds_titulo_w, 
							ds_texto	= ds_texto_aux_w || ' ' || ds_texto_w, 
							nm_usuario	= nm_usuario_p, 
							dt_atualizacao	= clock_timestamp() 
						where	nr_sequencia	= nr_sequencia_p;
						 
						commit;
						 
						end;
					elsif (ie_posicao_texto_p = 'P') and (nr_pos_cursor_p > 0) then --posicao atual do cursor 
						begin 
						 
						select	nm_campo_texto_p 
						into STRICT	ds_texto_aux_w 
						from	pep_pac_ci 
						where	nr_sequencia = nr_sequencia_p;
						 
						commit;
						 
						ds_texto_aux_pos_w := substr(ds_texto_aux_w,1,nr_pos_cursor_p) || ' ' || ds_texto_w || ' ' || substr(ds_texto_aux_w,nr_pos_cursor_p, length(ds_texto_aux_w));
						 
						update	pep_pac_ci 
						set	ds_titulo	= ds_titulo_w, 
							ds_texto	= ds_texto_aux_pos_w, 
							nm_usuario	= nm_usuario_p, 
							dt_atualizacao	= clock_timestamp() 
						where	nr_sequencia	= nr_sequencia_p;
						 
						commit;
						 
						end;
					 
					end if;
					 
					end;
				end if;
				 
				end;
			end if;
				 
			end;
		elsif (ie_item_selecionado_p = 'E') then--Evolucao 
			begin 
			 
			select	count(*) 
			into STRICT	ie_existe_atributo_w 
			from	user_tab_columns 
			where	table_name = 'EVOLUCAO_PACIENTE' 
			and	column_name = upper(nm_campo_texto_p);	
			 
			if (ie_existe_atributo_w > 0) then 
				begin 
				 
				if (ie_inserir_p = 'S') then 
					begin 
					 
					insert	into	evolucao_paciente( 
						cd_evolucao, 
						dt_evolucao, 
						ie_tipo_evolucao, 
						cd_pessoa_fisica, 
						dt_atualizacao, 
						nm_usuario, 
						nr_atendimento, 
						ds_evolucao, 
						cd_medico   
						) 
					values ( 
						nextval('evolucao_paciente_seq'), 
						clock_timestamp(), 
						ie_tipo_evolucao_p, 
						cd_pessoa_fisica_p, 
						clock_timestamp(), 
						nm_usuario_p, 
						nr_atendimento_p, 
						ds_texto_w, 
						cd_medico_p 
						);
						 
					commit;
					 
					end;
				else 
					begin 
					 
					if (ie_posicao_texto_p = 'I') then -- inicio do texto 
						begin 
						 
						select	nm_campo_texto_p 
						into STRICT	ds_texto_aux_w 
						from	evolucao_paciente 
						where	cd_evolucao = nr_sequencia_p;
						 
						update	evolucao_paciente 
						set	ds_evolucao	= ds_texto_w || ' ' || ds_texto_aux_w, 
							nm_usuario	= nm_usuario_p, 
							dt_atualizacao	= clock_timestamp() 
						where	cd_evolucao	= nr_sequencia_p;
						 
						commit;
						 
						 
						end;
					elsif (ie_posicao_texto_p = 'F') then -- final do texto 
						begin 
						 
						select	nm_campo_texto_p 
						into STRICT	ds_texto_aux_w 
						from	evolucao_paciente 
						where	cd_evolucao = nr_sequencia_p;
						 
						update	evolucao_paciente 
						set	ds_evolucao	= ds_texto_aux_w || ' ' || ds_texto_w, 
							nm_usuario	= nm_usuario_p, 
							dt_atualizacao	= clock_timestamp() 
						where	cd_evolucao	= nr_sequencia_p;
						 
						commit;
						 
						end;
					elsif (ie_posicao_texto_p = 'P') and (nr_pos_cursor_p > 0) then --posicao atual do cursor 
						begin 
						 
						select	nm_campo_texto_p 
						into STRICT	ds_texto_aux_w 
						from	evolucao_paciente 
						where	cd_evolucao = nr_sequencia_p;
						 
						ds_texto_aux_pos_w := substr(ds_texto_aux_w,1,nr_pos_cursor_p) || ' ' || ds_texto_w || ' ' || substr(ds_texto_aux_w,nr_pos_cursor_p, length(ds_texto_aux_w));
						 
						update	evolucao_paciente 
						set	ds_evolucao	= ds_texto_aux_pos_w, 
							nm_usuario	= nm_usuario_p, 
							dt_atualizacao	= clock_timestamp() 
						where	cd_evolucao	= nr_sequencia_p;
						 
						commit;
						 
						end;
					 
					end if;
					 
					end;
				end if;
				 
				end;
			end if;
			 
			end;
		end if;
		end;
	end if;
	end;
end if;
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE inserir_texto_rotina ( nr_seq_texto_p bigint, nm_campo_texto_p text, ie_item_selecionado_p text, nr_sequencia_p bigint, nr_pos_cursor_p bigint, ie_posicao_texto_p text, ie_inserir_p text, nr_atendimento_p bigint, cd_medico_p text, cd_pessoa_fisica_p text, ie_tipo_evolucao_p text, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

