-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_itens_lote_execucao ( nr_seq_prestador_p pls_prestador.nr_sequencia%type, nr_seq_segurado_p pls_segurado.nr_sequencia%type, nr_seq_requisicao_p pls_requisicao.nr_sequencia%type, ie_origem_execucao_p pls_lote_execucao_req.ie_origem_consulta%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nr_seq_usuario_web_p pls_usuario_web.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, ds_observacao_p pls_lote_execucao_req.ds_observacao%type, nr_seq_lote_execucao_p INOUT pls_lote_execucao_req.nr_sequencia%type) AS $body$
DECLARE

				
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Gerar os itens nos lotes de execucoes das requisicoes
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[  ]  Objetos do dicionario [ X] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao: Performance.
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */


/* ie_origem_execucao_p
P - Portal Web
T - Tasy
*/
qt_item_aprovado_w			pls_requisicao_proc.qt_procedimento%type;
qt_item_solicitado_w		pls_requisicao_proc.qt_procedimento%type;
qt_item_executado_w			pls_requisicao_proc.qt_procedimento%type;
qt_item_pendente_w			pls_requisicao_proc.qt_procedimento%type;
dt_requisicao_w			timestamp;
dt_validade_senha_w    		timestamp;
nr_seq_requisicao_w     	pls_requisicao.nr_sequencia%type;
ie_tipo_atendimento_w		pls_requisicao.ie_tipo_atendimento%type;
nr_seq_proc_mat_w      	 	pls_requisicao_proc.nr_sequencia%type;
cd_proc_mat_w           	procedimento.cd_procedimento%type;
cd_medico_solicitante_w 	varchar(10);
ie_tipo_item_w          	varchar(2);
ie_tipo_guia_w          	varchar(2);
ie_permite_execucao_w		varchar(1);
ie_origem_proced_w		bigint;
cd_especialidade_w		bigint;
ie_pcmso_w			varchar(2);
nr_seq_tipo_atendimento_w	pls_tipo_atendimento.nr_sequencia%type;

/*Parametros do lote da execucao*/

nr_seq_lote_execucao_w		bigint;
ie_proc_mat_liberado_w		varchar(2)	:= 'N';
nr_seq_regra_lib_w		bigint;
nr_seq_prest_usuario_w		bigint;
nr_seq_perfil_web_w		bigint;
nr_seq_local_atend_w		bigint;
ie_internacao_w			varchar(1)	:= 'N';
ie_internado_w			varchar(1)	:= 'N';
nr_seq_prestador_exec_w		pls_requisicao.nr_seq_prestador_exec%type;
ie_exec_prev_w			varchar(1);
ie_carater_atendimento_w	pls_requisicao.ie_carater_atendimento%type;
nr_seq_plano_w			pls_requisicao.nr_seq_plano%type;
nr_seq_preco_pacote_w		pls_requisicao_proc.nr_seq_preco_pacote%type;
ie_fecha_pacote_exec_w		pls_pacote_tipo_acomodacao.ie_fecha_pacote_exec%type;
nr_seq_pacote_w			pls_pacote.nr_sequencia%type;
nr_seq_congenere_w		pls_segurado.nr_seq_congenere%type;
nr_seq_intercambio_w		pls_segurado.nr_seq_intercambio%type;
ie_excessao_pacote_w		varchar(1);
cd_procedimento_pacote_w	pls_pacote.cd_procedimento%type;
ie_origem_proced_pacote_w	pls_pacote.ie_origem_proced%type;
qt_pacote_w			integer := 0;
qt_itens_pacote_w		integer := 0;
ie_saude_ocupacional_w		pls_requisicao.ie_saude_ocupacional%type;
ie_regime_atendimento_w		pls_requisicao.ie_regime_atendimento%type;

C01 CURSOR FOR
	SELECT	b.nr_sequencia nr_sequencia,
		a.ie_tipo_guia,
		'P' ie_tipo_item,
		a.nr_sequencia nr_seq_requisicao,
		trunc(a.dt_requisicao) dt_requisicao,
		b.cd_procedimento cd_proc_mat,
		b.ie_origem_proced ie_origem_proced,
		a.cd_medico_solicitante,
		coalesce(b.qt_solicitado,0) qt_proc_mat_solic,
		coalesce(b.qt_procedimento,0) qt_proc_mat_aprov,
		coalesce(b.qt_proc_executado,0) qt_proc_mat_exec,
		pls_quant_itens_pendentes_exec(b.qt_procedimento,b.qt_proc_executado) qt_pendente,
		trunc(a.dt_validade_senha) dt_validade_senha,
		a.cd_especialidade,
		a.ie_pcmso,
		a.ie_tipo_atendimento,
		a.nr_seq_prestador_exec,
		a.ie_carater_atendimento,
		a.nr_seq_plano,
		b.nr_seq_preco_pacote,
		a.ie_saude_ocupacional,
		a.ie_regime_atendimento
	from	pls_requisicao a,
		pls_requisicao_proc b
	where	a.nr_sequencia = b.nr_seq_requisicao
	and	a.ie_estagio in (2,4,6,9,11)
	and	b.ie_status in ('P','S')
	and ((b.qt_procedimento IS NOT NULL AND b.qt_procedimento::text <> '') and (b.qt_procedimento - coalesce(b.qt_proc_executado,0)) > 0)
	and	((a.nr_seq_segurado	= nr_seq_segurado_p
	and (a.nr_sequencia 	= nr_seq_requisicao_p
	or 	coalesce(nr_seq_requisicao_p::text, '') = ''))
	or (a.nr_sequencia 	= nr_seq_requisicao_p))
	and (trunc(clock_timestamp())	<= a.dt_validade_senha or coalesce(a.dt_validade_senha::text, '') = '')
	
union

	SELECT	b.nr_sequencia nr_sequencia,
		a.ie_tipo_guia,
		'M' ie_tipo_item,
		a.nr_sequencia nr_seq_requisicao,
		trunc(a.dt_requisicao) dt_requisicao,
		b.nr_seq_material cd_proc_mat,
		0 ie_origem_proced,
		a.cd_medico_solicitante,
		coalesce(b.qt_solicitado,0) qt_proc_mat_solic,
		coalesce(b.qt_material,0) qt_proc_mat_aprov,
		coalesce(b.qt_mat_executado,0) qt_proc_mat_exec,
		pls_quant_itens_pendentes_exec(b.qt_material,b.qt_mat_executado) qt_pendente,
		trunc(a.dt_validade_senha) dt_validade_senha,
		a.cd_especialidade,
		a.ie_pcmso,
		a.ie_tipo_atendimento,
		a.nr_seq_prestador_exec,
		a.ie_carater_atendimento,
		a.nr_seq_plano,
		b.nr_seq_preco_pacote,
		a.ie_saude_ocupacional,
		a.ie_regime_atendimento
	from	pls_requisicao a,
		pls_requisicao_mat b
	where	a.nr_sequencia = b.nr_seq_requisicao
	and	a.ie_estagio in (2,4,6,9,11)
	and	b.ie_status in ('P','S')
	and ((b.qt_material IS NOT NULL AND b.qt_material::text <> '') and (b.qt_material - coalesce(b.qt_mat_executado,0)) > 0)
	and	((a.nr_seq_segurado	= nr_seq_segurado_p
	and (a.nr_sequencia 	= nr_seq_requisicao_p
	or 	coalesce(nr_seq_requisicao_p::text, '') = ''))
	or (a.nr_sequencia 	= nr_seq_requisicao_p))
	and (trunc(clock_timestamp())	<= a.dt_validade_senha	or coalesce(a.dt_validade_senha::text, '') = '')
	order by nr_seq_requisicao;

C02 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.ie_tipo_guia,
		'P' ie_tipo_item,
		a.nr_sequencia nr_seq_requisicao,
		a.cd_medico_solicitante,
		trunc(a.dt_requisicao) dt_requisicao,
		b.cd_procedimento cd_proc_mat,
		b.ie_origem_proced ie_origem_proced,
		coalesce(b.qt_solicitado,0) qt_proc_mat_solic,
		coalesce(b.qt_procedimento,0) qt_proc_mat_aprov,
		coalesce(b.qt_proc_executado,0) qt_proc_mat_exec,
		pls_quant_itens_pendentes_exec(b.qt_procedimento,b.qt_proc_executado) qt_pendente,
		a.cd_especialidade,
		a.ie_pcmso,
		a.ie_tipo_atendimento,
		a.nr_seq_prestador_exec,
		a.ie_carater_atendimento,
		a.nr_seq_plano,
		a.ie_saude_ocupacional,
		a.ie_regime_atendimento
	from	pls_requisicao a,
		pls_requisicao_proc b
	where	a.nr_sequencia = b.nr_seq_requisicao
	and	b.ie_status in ('P','S')
	and ((b.qt_procedimento IS NOT NULL AND b.qt_procedimento::text <> '') and (b.qt_procedimento - coalesce(b.qt_proc_executado,0)) > 0)
	and	((a.nr_seq_segurado	= nr_seq_segurado_p
	and (a.nr_sequencia 	= nr_seq_requisicao_p
	or 	coalesce(nr_seq_requisicao_p::text, '') = ''))
	or (a.nr_sequencia 	= nr_seq_requisicao_p))
	
union

	SELECT	a.nr_sequencia,
		a.ie_tipo_guia,
		'M' ie_tipo_item,
		a.nr_sequencia nr_seq_requisicao,
		a.cd_medico_solicitante,
		trunc(a.dt_requisicao) dt_requisicao,
		b.nr_seq_material cd_proc_mat,
		0 ie_origem_proced,
		coalesce(b.qt_solicitado,0) qt_proc_mat_solic,
		coalesce(b.qt_material,0) qt_proc_mat_aprov,
		coalesce(b.qt_mat_executado,0) qt_proc_mat_exec,
		pls_quant_itens_pendentes_exec(b.qt_material,b.qt_mat_executado) qt_pendente,
		a.cd_especialidade,
		a.ie_pcmso,
		a.ie_tipo_atendimento,
		a.nr_seq_prestador_exec,
		a.ie_carater_atendimento,
		a.nr_seq_plano,
		a.ie_saude_ocupacional,
		a.ie_regime_atendimento
	from	pls_requisicao a,
		pls_requisicao_mat b
	where	a.nr_sequencia = b.nr_seq_requisicao
	and	b.ie_status in ('P','S')
	and ((b.qt_material IS NOT NULL AND b.qt_material::text <> '') and (b.qt_material - coalesce(b.qt_mat_executado,0)) > 0)
	and	((a.nr_seq_segurado	= nr_seq_segurado_p
	and (a.nr_sequencia 	= nr_seq_requisicao_p
	or 	coalesce(nr_seq_requisicao_p::text, '') = ''))
	or (a.nr_sequencia 	= nr_seq_requisicao_p))
	order by nr_sequencia;



BEGIN

-- gerencia a atualizacao da tabela TM
CALL pls_gerencia_upd_obj_pck.atualizar_objetos(nm_usuario_p, 'PLS_GERAR_ITENS_LOTE_EXECUCAO', 'PLS_ESTRUTURA_MATERIAL_TM');
--Atualizando a tabela de grupo de procedimentos
CALL PLS_GERENCIA_UPD_OBJ_PCK.ATUALIZAR_OBJETOS(nm_usuario_p, 'PLS_GERAR_ITENS_LOTE_EXECUCAO', 'PLS_GRUPO_SERVICO_TM');
-- gerencia a atualizacao da tabela TM para para grupos de materiais
CALL PLS_GERENCIA_UPD_OBJ_PCK.ATUALIZAR_OBJETOS(nm_usuario_p, 'PLS_GERAR_ITENS_LOTE_EXECUCAO', 'PLS_GRUPO_MATERIAL_TM');

if (ie_origem_execucao_p = 'P' or ie_origem_execucao_p = 'T') and (length(nr_seq_prestador_p)	<= 10) then

	if (nr_seq_usuario_web_p IS NOT NULL AND nr_seq_usuario_web_p::text <> '') then		
		select	a.nr_seq_perfil_web,
			a.nr_seq_local_atend
		into STRICT	nr_seq_perfil_web_w,
			nr_seq_local_atend_w
		from	pls_usuario_web a			
		where	a.nr_sequencia 		= nr_seq_usuario_web_p
		and (a.ie_situacao		= 'A' or coalesce(a.ie_situacao::text, '') = '');
		
		select	max(b.nr_sequencia)
		into STRICT	nr_seq_prest_usuario_w
		from	pls_prestador_usuario_web b
		where	b.nr_seq_prestador 	= nr_seq_prestador_p
		and	b.nr_seq_usuario	= nr_seq_usuario_web_p	
		and	b.ie_situacao		= 'A';				
	end if;
	
	begin
		select	coalesce(ie_somente_exec_previsto,'N')
		into STRICT	ie_exec_prev_w
		from	pls_param_execucao_req;
	exception
	when others then
		ie_exec_prev_w := 'N';
	end;
	
	
	
	select	nextval('pls_lote_execucao_req_seq')
	into STRICT	nr_seq_lote_execucao_w
	;

	insert into pls_lote_execucao_req(
			nr_sequencia, nr_seq_segurado, dt_geracao_lote,
			dt_atualizacao, nm_usuario, dt_atualizacao_nrec,
			nm_usuario_nrec, nr_seq_usuario_web, nr_seq_prestador,
			nr_seq_prest_usuario,nr_seq_perfil_web, nr_seq_local_atend,
			ds_observacao, ie_origem_consulta)
		values (	nr_seq_lote_execucao_w, nr_seq_segurado_p, clock_timestamp(),
			clock_timestamp(), nm_usuario_p, clock_timestamp(),
			nm_usuario_p, nr_seq_usuario_web_p, nr_seq_prestador_p,
			nr_seq_prest_usuario_w, nr_seq_perfil_web_w, nr_seq_local_atend_w,
			ds_observacao_p, ie_origem_execucao_p);

	open C01;
	loop
	fetch C01 into
		nr_seq_proc_mat_w,
		ie_tipo_guia_w,
		ie_tipo_item_w,
		nr_seq_requisicao_w,
		dt_requisicao_w,
		cd_proc_mat_w,
		ie_origem_proced_w,
		cd_medico_solicitante_w,
		qt_item_solicitado_w,
		qt_item_aprovado_w,
		qt_item_executado_w,
		qt_item_pendente_w,
		dt_validade_senha_w,
		cd_especialidade_w,
		ie_pcmso_w,
		ie_tipo_atendimento_w,
		nr_seq_prestador_exec_w,
		ie_carater_atendimento_w,
		nr_seq_plano_w,
		nr_seq_preco_pacote_w,
		ie_saude_ocupacional_w,
		ie_regime_atendimento_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		ie_proc_mat_liberado_w	:= 'N';
		nr_seq_regra_lib_w	:= null;

		ie_internacao_w := pls_obter_se_internado_req(nr_seq_requisicao_w);
	
		if (ie_internacao_w = 'S') then
			ie_internado_w	:= 'S'; /* Internado */
		else
			ie_internado_w	:= 'A'; /* Ambulatorial */
		end if;		
		
		if (ie_tipo_item_w	= 'P') then
			begin
				select	nr_sequencia
				into STRICT	nr_seq_tipo_atendimento_w
				from	pls_tipo_atendimento
				where	(CD_TISS)::numeric 	= ie_tipo_atendimento_w;
			exception
			when others then
				nr_seq_tipo_atendimento_w	:= null;
			end;
		
			/*Antes era utilizada a function PLS_OBTER_SE_PROC_PRESTADOR foi criada esta procedure para retornar a sequencia da regra e salvar na tabela dos itens da execucao */

			SELECT * FROM pls_validar_lib_proc_prestador( nr_seq_prestador_p, null, cd_proc_mat_w, ie_origem_proced_w, ie_tipo_guia_w, clock_timestamp(), cd_estabelecimento_p, ie_carater_atendimento_w, nr_seq_tipo_atendimento_w, ie_internado_w, nr_seq_plano_w, ie_proc_mat_liberado_w, nr_seq_regra_lib_w, nr_seq_requisicao_p, ie_regime_atendimento_w, ie_saude_ocupacional_w) INTO STRICT ie_proc_mat_liberado_w, nr_seq_regra_lib_w;
		elsif (ie_tipo_item_w = 'M') then
			/*Antes era utilizada a function PLS_OBTER_SE_MAT_PRESTADOR foi criada esta procedure para retornar a sequencia da regra e salvar na tabela dos itens da execucao */

			SELECT * FROM pls_validar_lib_mat_prestador(	nr_seq_prestador_p, null, cd_proc_mat_w, clock_timestamp(), cd_estabelecimento_p, null, ie_internado_w, ie_proc_mat_liberado_w, nr_seq_regra_lib_w) INTO STRICT ie_proc_mat_liberado_w, nr_seq_regra_lib_w;

		end if;

		if	((ie_tipo_item_w		= 'P') and (ie_proc_mat_liberado_w 	= 'S') and
			((coalesce(cd_especialidade_w,0)	<> 0) and
			((pls_obter_se_espec_prestador(nr_seq_prestador_p, cd_especialidade_w)	= 'S') or (ie_pcmso_w			= 'S'))	or (coalesce(cd_especialidade_w,0)	= 0) or
			(cd_especialidade_w IS NOT NULL AND cd_especialidade_w::text <> '' AND ie_tipo_guia_w = 8))) then

			if (ie_exec_prev_w = 'S') then
				if	((nr_seq_prestador_p = nr_seq_prestador_exec_w) or (coalesce(nr_seq_prestador_exec_w::text, '') = '')) then
					ie_permite_execucao_w := pls_obter_se_bloqueio_exec(	nr_seq_requisicao_w, nr_seq_prestador_p, ie_tipo_guia_w, ie_origem_execucao_p,
												null,null,null,null);
				else
					ie_permite_execucao_w := 'N';
				end if;
			else
				ie_permite_execucao_w := pls_obter_se_bloqueio_exec(	nr_seq_requisicao_w, nr_seq_prestador_p, ie_tipo_guia_w, ie_origem_execucao_p,
											null,null,null,null);
			end if;

			begin
				select	coalesce(ie_fecha_pacote_exec, 'N'),
					nr_seq_pacote
				into STRICT	ie_fecha_pacote_exec_w,
					nr_seq_pacote_w
				from 	pls_pacote_tipo_acomodacao	
				where 	nr_sequencia	= nr_seq_preco_pacote_w
				and	coalesce(ie_abrir_exec_requisicao, 'N')	<> 'S'
				and	coalesce(ie_excluir_proc_pacote, 'N')	<> 'S'
				and	coalesce(ie_situacao, 'I')			= 'A'
				and	((coalesce(dt_inicio_vigencia::text, '') = '')		or (dt_inicio_vigencia 	<= clock_timestamp()))
				and	((coalesce(dt_fim_vigencia::text, '') = '')		or (dt_fim_vigencia 	>= clock_timestamp()));
			exception
			when others then
				ie_fecha_pacote_exec_w	:= 'N';
				nr_seq_pacote_w		:= null;
			end;

			if (ie_fecha_pacote_exec_w = 'S') then
				begin
					select	nr_seq_congenere,
						nr_seq_intercambio
					into STRICT	nr_seq_congenere_w,
						nr_seq_intercambio_w
					from	pls_segurado
					where	nr_sequencia	= nr_seq_segurado_p;
				exception
				when others then
					nr_seq_congenere_w	:= null;
					nr_seq_intercambio_w	:= null;
				end;

				ie_excessao_pacote_w := pls_excecao_preco_pacote( nr_seq_preco_pacote_w, nr_seq_congenere_w, nm_usuario_p, nr_seq_intercambio_w, nr_seq_prestador_p, ie_excessao_pacote_w, null);

				if (ie_excessao_pacote_w = 'N') then
					begin
						select	cd_procedimento,
							ie_origem_proced,
							nr_sequencia
						into STRICT	cd_procedimento_pacote_w,
							ie_origem_proced_pacote_w,
							cd_proc_mat_w
						from	pls_requisicao_proc
						where	nr_seq_requisicao	= nr_seq_requisicao_w
						and	nr_seq_pacote		= nr_seq_pacote_w;
					exception
					when others then
						cd_procedimento_pacote_w	:= '';
						ie_origem_proced_pacote_w	:= '';
					end;

					select	count(1)
					into STRICT	qt_pacote_w
					from	pls_itens_lote_execucao
					where	nr_seq_lote_exec	= nr_seq_lote_execucao_w
					and	nr_seq_requisicao	= nr_seq_requisicao_w
					and	cd_proc_mat		= cd_procedimento_pacote_w;

					select	count(1)
					into STRICT	qt_itens_pacote_w
					from	pls_requisicao_proc
					where	nr_seq_requisicao	= nr_seq_requisicao_w
					and	nr_seq_preco_pacote	= nr_seq_preco_pacote_w
					and	coalesce(nr_seq_pacote::text, '') = ''
					and	ie_status		in ('P','S');

					begin
						select	nr_sequencia
						into STRICT	nr_seq_tipo_atendimento_w
						from	pls_tipo_atendimento
						where	(CD_TISS)::numeric 	= ie_tipo_atendimento_w;
					exception
					when others then
						nr_seq_tipo_atendimento_w	:= null;
					end;

					SELECT * FROM pls_validar_lib_proc_prestador( nr_seq_prestador_p, null, cd_proc_mat_w, ie_origem_proced_w, ie_tipo_guia_w, clock_timestamp(), cd_estabelecimento_p, ie_carater_atendimento_w, nr_seq_tipo_atendimento_w, ie_internado_w, nr_seq_plano_w, ie_proc_mat_liberado_w, nr_seq_regra_lib_w, nr_seq_requisicao_p, ie_regime_atendimento_w, ie_saude_ocupacional_w) INTO STRICT ie_proc_mat_liberado_w, nr_seq_regra_lib_w;
									
					if (qt_pacote_w = 0) and (qt_itens_pacote_w > 0) and (ie_proc_mat_liberado_w = 'S') then
						insert into pls_itens_lote_execucao(
							nr_sequencia, nr_seq_lote_exec, ie_permite_execucao,
							ie_executar, dt_atualizacao, nm_usuario,
							dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_req_proc,
							nr_seq_req_mat, nr_seq_requisicao, qt_solicitado,
							qt_aprovado, qt_executado, qt_pendente,
							dt_requisicao, dt_validade_senha, cd_proc_mat,
							ds_proc_mat, ds_tipo_guia, nm_medico,
							cd_medico_solicitante, ie_tipo_item, ie_tipo_guia,
							nr_seq_regra_prest_proc)
						values (	nextval('pls_itens_lote_execucao_seq'), nr_seq_lote_execucao_w, ie_permite_execucao_w,
							'N', clock_timestamp(), nm_usuario_p,
							clock_timestamp(), nm_usuario_p, cd_proc_mat_w,
							null, nr_seq_requisicao_w, qt_item_solicitado_w,
							qt_item_aprovado_w, qt_item_executado_w, qt_item_pendente_w,
							trunc(dt_requisicao_w), trunc(dt_validade_senha_w), cd_procedimento_pacote_w,
							substr(obter_descricao_procedimento(cd_procedimento_pacote_w,ie_origem_proced_pacote_w),1,255), substr(obter_valor_dominio(1746,ie_tipo_guia_w),1,255), substr(obter_nome_medico(cd_medico_solicitante_w,'N'),1,255),
							cd_medico_solicitante_w, ie_tipo_item_w, ie_tipo_guia_w,
							nr_seq_regra_lib_w);
					end if;
				else
					insert into pls_itens_lote_execucao(
						nr_sequencia, nr_seq_lote_exec, ie_permite_execucao,
						ie_executar, dt_atualizacao, nm_usuario,
						dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_req_proc,
						nr_seq_req_mat, nr_seq_requisicao, qt_solicitado,
						qt_aprovado, qt_executado, qt_pendente,
						dt_requisicao, dt_validade_senha, cd_proc_mat,
						ds_proc_mat, ds_tipo_guia, nm_medico,
						cd_medico_solicitante, ie_tipo_item, ie_tipo_guia,
						nr_seq_regra_prest_proc)
					values (	nextval('pls_itens_lote_execucao_seq'), nr_seq_lote_execucao_w, ie_permite_execucao_w,
						'N', clock_timestamp(), nm_usuario_p,
						clock_timestamp(), nm_usuario_p, nr_seq_proc_mat_w,
						null, nr_seq_requisicao_w, qt_item_solicitado_w,
						qt_item_aprovado_w, qt_item_executado_w, qt_item_pendente_w,
						trunc(dt_requisicao_w), trunc(dt_validade_senha_w), cd_proc_mat_w,
						substr(obter_descricao_procedimento(cd_proc_mat_w,ie_origem_proced_w),1,255), substr(obter_valor_dominio(1746,ie_tipo_guia_w),1,255), substr(obter_nome_medico(cd_medico_solicitante_w,'N'),1,255),
						cd_medico_solicitante_w, ie_tipo_item_w, ie_tipo_guia_w,
						nr_seq_regra_lib_w);				
				end if;
			else
				insert into pls_itens_lote_execucao(
						nr_sequencia, nr_seq_lote_exec, ie_permite_execucao,
						ie_executar, dt_atualizacao, nm_usuario,
						dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_req_proc,
						nr_seq_req_mat, nr_seq_requisicao, qt_solicitado,
						qt_aprovado, qt_executado, qt_pendente,
						dt_requisicao, dt_validade_senha, cd_proc_mat,
						ds_proc_mat, ds_tipo_guia, nm_medico,
						cd_medico_solicitante, ie_tipo_item, ie_tipo_guia,
						nr_seq_regra_prest_proc)
					values (	nextval('pls_itens_lote_execucao_seq'), nr_seq_lote_execucao_w, ie_permite_execucao_w,
						'N', clock_timestamp(), nm_usuario_p,
						clock_timestamp(), nm_usuario_p, nr_seq_proc_mat_w,
						null, nr_seq_requisicao_w, qt_item_solicitado_w,
						qt_item_aprovado_w, qt_item_executado_w, qt_item_pendente_w,
						trunc(dt_requisicao_w), trunc(dt_validade_senha_w), cd_proc_mat_w,
						substr(obter_descricao_procedimento(cd_proc_mat_w,ie_origem_proced_w),1,255), substr(obter_valor_dominio(1746,ie_tipo_guia_w),1,255), substr(obter_nome_medico(cd_medico_solicitante_w,'N'),1,255),
						cd_medico_solicitante_w, ie_tipo_item_w, ie_tipo_guia_w,
						nr_seq_regra_lib_w);
			end if;
		elsif	((ie_tipo_item_w		= 'M') and (ie_proc_mat_liberado_w		= 'S') and
			((coalesce(cd_especialidade_w,0)	<> 0) and
			((pls_obter_se_espec_prestador(nr_seq_prestador_p, cd_especialidade_w)	= 'S')	or (ie_pcmso_w			= 'S'))	or (coalesce(cd_especialidade_w,0)	= 0) or
			(cd_especialidade_w IS NOT NULL AND cd_especialidade_w::text <> '' AND ie_tipo_guia_w = 8))) then

			if (ie_exec_prev_w = 'S') then
				if	((nr_seq_prestador_p = nr_seq_prestador_exec_w) or (coalesce(nr_seq_prestador_exec_w::text, '') = '')) then
					ie_permite_execucao_w := pls_obter_se_bloqueio_exec(	nr_seq_requisicao_w, nr_seq_prestador_p, ie_tipo_guia_w, ie_origem_execucao_p,
												null,null,null,null);
				else
					ie_permite_execucao_w := 'N';
				end if;
			else
				ie_permite_execucao_w := pls_obter_se_bloqueio_exec(	nr_seq_requisicao_w, nr_seq_prestador_p, ie_tipo_guia_w, ie_origem_execucao_p,
											null,null,null,null);
			end if;

			begin
				select	coalesce(ie_fecha_pacote_exec, 'N'),
					nr_seq_pacote
				into STRICT	ie_fecha_pacote_exec_w,
					nr_seq_pacote_w
				from 	pls_pacote_tipo_acomodacao	
				where 	nr_sequencia	= nr_seq_preco_pacote_w
				and	coalesce(ie_abrir_exec_requisicao, 'N')	<> 'S'
				and	coalesce(ie_excluir_proc_pacote, 'N')	<> 'S'
				and	coalesce(ie_situacao, 'I')			= 'A'
				and	((coalesce(dt_inicio_vigencia::text, '') = '')		or (dt_inicio_vigencia 	<= clock_timestamp()))
				and	((coalesce(dt_fim_vigencia::text, '') = '')		or (dt_fim_vigencia 	>= clock_timestamp()));
			exception
			when others then
				ie_fecha_pacote_exec_w	:= 'N';
				nr_seq_pacote_w		:= null;
			end;

			if (ie_fecha_pacote_exec_w = 'S') then
				begin
					select	nr_seq_congenere,
						nr_seq_intercambio
					into STRICT	nr_seq_congenere_w,
						nr_seq_intercambio_w
					from	pls_segurado
					where	nr_sequencia	= nr_seq_segurado_p;
				exception
				when others then
					nr_seq_congenere_w	:= null;
					nr_seq_intercambio_w	:= null;
				end;

				ie_excessao_pacote_w := pls_excecao_preco_pacote( nr_seq_preco_pacote_w, nr_seq_congenere_w, nm_usuario_p, nr_seq_intercambio_w, nr_seq_prestador_p, ie_excessao_pacote_w, null);

				if (ie_excessao_pacote_w = 'N') then					
					begin
						select	cd_procedimento,
							ie_origem_proced,
							nr_sequencia
						into STRICT	cd_procedimento_pacote_w,
							ie_origem_proced_pacote_w,
							cd_proc_mat_w
						from	pls_requisicao_proc
						where	nr_seq_requisicao	= nr_seq_requisicao_w
						and	nr_seq_pacote		= nr_seq_pacote_w;
					exception
					when others then
						cd_procedimento_pacote_w	:= '';
						ie_origem_proced_pacote_w	:= '';
					end;

					select	count(1)
					into STRICT	qt_pacote_w
					from	pls_itens_lote_execucao
					where	nr_seq_lote_exec	= nr_seq_lote_execucao_w
					and	nr_seq_requisicao	= nr_seq_requisicao_w
					and	cd_proc_mat		= cd_procedimento_pacote_w;

					select	count(1)
					into STRICT	qt_itens_pacote_w
					from	pls_requisicao_mat
					where	nr_seq_requisicao	= nr_seq_requisicao_w
					and	nr_seq_preco_pacote	= nr_seq_preco_pacote_w
					and	ie_status		in ('P','S');

					begin
						select	nr_sequencia
						into STRICT	nr_seq_tipo_atendimento_w
						from	pls_tipo_atendimento
						where	(CD_TISS)::numeric 	= ie_tipo_atendimento_w;
					exception
					when others then
						nr_seq_tipo_atendimento_w	:= null;
					end;

					SELECT * FROM pls_validar_lib_mat_prestador(	nr_seq_prestador_p, null, cd_proc_mat_w, clock_timestamp(), cd_estabelecimento_p, null, ie_internado_w, ie_proc_mat_liberado_w, nr_seq_regra_lib_w) INTO STRICT ie_proc_mat_liberado_w, nr_seq_regra_lib_w;

					if (qt_pacote_w = 0) and (qt_itens_pacote_w > 0) and (ie_proc_mat_liberado_w = 'S') then
						insert into pls_itens_lote_execucao(
							nr_sequencia, nr_seq_lote_exec, ie_permite_execucao,
							ie_executar, dt_atualizacao, nm_usuario,
							dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_req_proc,
							nr_seq_req_mat, nr_seq_requisicao, qt_solicitado,
							qt_aprovado, qt_executado, qt_pendente,
							dt_requisicao, dt_validade_senha, cd_proc_mat,
							ds_proc_mat, ds_tipo_guia, nm_medico,
							cd_medico_solicitante, ie_tipo_item, ie_tipo_guia,
							nr_seq_regra_prest_mat)
						values (	nextval('pls_itens_lote_execucao_seq'), nr_seq_lote_execucao_w, ie_permite_execucao_w,
							'N', clock_timestamp(), nm_usuario_p,
							clock_timestamp(), nm_usuario_p, cd_proc_mat_w,
							null, nr_seq_requisicao_w, qt_item_solicitado_w,
							qt_item_aprovado_w, qt_item_executado_w, qt_item_pendente_w,
							trunc(dt_requisicao_w), trunc(dt_validade_senha_w), cd_procedimento_pacote_w,
							substr(obter_descricao_procedimento(cd_procedimento_pacote_w,ie_origem_proced_pacote_w),1,255), substr(obter_valor_dominio(1746,ie_tipo_guia_w),1,255), substr(obter_nome_medico(cd_medico_solicitante_w,'N'),1,255),
							cd_medico_solicitante_w, 'P', ie_tipo_guia_w,
							nr_seq_regra_lib_w);
					end if;
				else
					insert into pls_itens_lote_execucao(
						nr_sequencia, nr_seq_lote_exec, ie_permite_execucao,
						ie_executar, dt_atualizacao, nm_usuario,
						dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_req_proc,
						nr_seq_req_mat, nr_seq_requisicao, qt_solicitado,
						qt_aprovado, qt_executado, qt_pendente,
						dt_requisicao, dt_validade_senha, cd_proc_mat,
						ds_proc_mat, ds_tipo_guia, nm_medico,
						cd_medico_solicitante, ie_tipo_item, ie_tipo_guia,
						nr_seq_regra_prest_mat)
					values (	nextval('pls_itens_lote_execucao_seq'), nr_seq_lote_execucao_w, ie_permite_execucao_w,
						'N', clock_timestamp(), nm_usuario_p,
						clock_timestamp(), nm_usuario_p, null,
						nr_seq_proc_mat_w, nr_seq_requisicao_w, qt_item_solicitado_w,
						qt_item_aprovado_w, qt_item_executado_w, qt_item_pendente_w,
						trunc(dt_requisicao_w), trunc(dt_validade_senha_w), cd_proc_mat_w,
						substr(pls_obter_desc_material(cd_proc_mat_w),1,255), substr(obter_valor_dominio(1746,ie_tipo_guia_w),1,255), substr(obter_nome_medico(cd_medico_solicitante_w,'N'),1,255),
						cd_medico_solicitante_w, ie_tipo_item_w, ie_tipo_guia_w,
						nr_seq_regra_lib_w);				
				end if;
			else
				insert into pls_itens_lote_execucao(
						nr_sequencia, nr_seq_lote_exec, ie_permite_execucao,
						ie_executar, dt_atualizacao, nm_usuario,
						dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_req_proc,
						nr_seq_req_mat, nr_seq_requisicao, qt_solicitado,
						qt_aprovado, qt_executado, qt_pendente,
						dt_requisicao, dt_validade_senha, cd_proc_mat,
						ds_proc_mat, ds_tipo_guia, nm_medico,
						cd_medico_solicitante, ie_tipo_item, ie_tipo_guia,
						nr_seq_regra_prest_mat)
					values (	nextval('pls_itens_lote_execucao_seq'), nr_seq_lote_execucao_w, ie_permite_execucao_w,
						'N', clock_timestamp(), nm_usuario_p,
						clock_timestamp(), nm_usuario_p, null,
						nr_seq_proc_mat_w, nr_seq_requisicao_w, qt_item_solicitado_w,
						qt_item_aprovado_w, qt_item_executado_w, qt_item_pendente_w,
						trunc(dt_requisicao_w), trunc(dt_validade_senha_w), cd_proc_mat_w,
						substr(pls_obter_desc_material(cd_proc_mat_w),1,255), substr(obter_valor_dominio(1746,ie_tipo_guia_w),1,255), substr(obter_nome_medico(cd_medico_solicitante_w,'N'),1,255),
						cd_medico_solicitante_w, ie_tipo_item_w, ie_tipo_guia_w,
						nr_seq_regra_lib_w);
			end if;
		end if;
		end;
	end loop;
	close C01;

	open C02;
	loop
	fetch C02 into
		nr_seq_proc_mat_w,
		ie_tipo_guia_w,
		ie_tipo_item_w,
		nr_seq_requisicao_w,
		cd_medico_solicitante_w,
		dt_requisicao_w,
		cd_proc_mat_w,
		ie_origem_proced_w,
		qt_item_solicitado_w,
		qt_item_aprovado_w,
		qt_item_executado_w,
		qt_item_pendente_w,
		cd_especialidade_w,
		ie_pcmso_w,
		ie_tipo_atendimento_w,
		nr_seq_prestador_exec_w,
		ie_carater_atendimento_w,
		nr_seq_plano_w,
		ie_saude_ocupacional_w,
		ie_regime_atendimento_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin

		ie_proc_mat_liberado_w	:= 'N';
		nr_seq_regra_lib_w	:= null;
		
		ie_internacao_w := pls_obter_se_internado_req(nr_seq_requisicao_w);
	
		if (ie_internacao_w = 'S') then
			ie_internado_w	:= 'S'; /* Internado */
		else
			ie_internado_w	:= 'A'; /* Ambulatorial */
		end if;	

		if (ie_tipo_item_w	= 'P') then
			begin
				select	nr_sequencia
				into STRICT	nr_seq_tipo_atendimento_w
				from	pls_tipo_atendimento
				where	(CD_TISS)::numeric 	= ie_tipo_atendimento_w;
			exception
			when others then
				nr_seq_tipo_atendimento_w	:= null;
			end;
		
			/*Antes era utilizada a function PLS_OBTER_SE_PROC_PRESTADOR foi criada esta procedure para retornar a sequencia da regra e salvar na tabela dos itens da execucao */

			SELECT * FROM pls_validar_lib_proc_prestador( nr_seq_prestador_p, null, cd_proc_mat_w, ie_origem_proced_w, ie_tipo_guia_w, clock_timestamp(), cd_estabelecimento_p, ie_carater_atendimento_w, nr_seq_tipo_atendimento_w, ie_internado_w, nr_seq_plano_w, ie_proc_mat_liberado_w, nr_seq_regra_lib_w, nr_seq_requisicao_p, ie_regime_atendimento_w, ie_saude_ocupacional_w) INTO STRICT ie_proc_mat_liberado_w, nr_seq_regra_lib_w;
		elsif (ie_tipo_item_w = 'M') then
			/*Antes era utilizada a function PLS_OBTER_SE_MAT_PRESTADOR foi criada esta procedure para retornar a sequencia da regra e salvar na tabela dos itens da execucao */

			SELECT * FROM pls_validar_lib_mat_prestador(	nr_seq_prestador_p, null, cd_proc_mat_w, clock_timestamp(), cd_estabelecimento_p, null, ie_internado_w, ie_proc_mat_liberado_w, nr_seq_regra_lib_w) INTO STRICT ie_proc_mat_liberado_w, nr_seq_regra_lib_w;

		end if;

		if	((ie_tipo_item_w		= 'P') and (ie_proc_mat_liberado_w 	= 'N') or
			((coalesce(cd_especialidade_w,0)	<> 0) and
			((pls_obter_se_espec_prestador(nr_seq_prestador_p, cd_especialidade_w)	= 'N')	and (coalesce(ie_pcmso_w,'N')		= 'N')))) then

			insert into pls_itens_lote_execucao(
					nr_sequencia, nr_seq_lote_exec, ie_permite_execucao,
					ie_executar, dt_atualizacao, nm_usuario,
					dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_req_proc,
					nr_seq_req_mat, nr_seq_requisicao, qt_solicitado,
					qt_aprovado, qt_executado, qt_pendente,
					dt_requisicao, dt_validade_senha, cd_proc_mat,
					ds_proc_mat, ds_tipo_guia, nm_medico,
					cd_medico_solicitante, ie_tipo_item, ie_tipo_guia,
					nr_seq_regra_prest_proc)
				values (	nextval('pls_itens_lote_execucao_seq'), nr_seq_lote_execucao_w, 'N',
					'N', clock_timestamp(), nm_usuario_p,
					clock_timestamp(), nm_usuario_p, nr_seq_proc_mat_w,
					null, nr_seq_requisicao_w, qt_item_solicitado_w,
					qt_item_aprovado_w, qt_item_executado_w, qt_item_pendente_w,
					trunc(dt_requisicao_w), trunc(dt_validade_senha_w), cd_proc_mat_w,
					substr(obter_descricao_procedimento(cd_proc_mat_w,ie_origem_proced_w),1,255), substr(obter_valor_dominio(1746,ie_tipo_guia_w),1,255), substr(obter_nome_medico(cd_medico_solicitante_w,'N'),1,255),
					cd_medico_solicitante_w, ie_tipo_item_w, ie_tipo_guia_w,
					nr_seq_regra_lib_w);

		elsif	((ie_tipo_item_w		= 'M') and (ie_proc_mat_liberado_w		= 'N') or
			((coalesce(cd_especialidade_w,0)	<> 0) and
			((pls_obter_se_espec_prestador(nr_seq_prestador_p, cd_especialidade_w)	= 'N')	and (coalesce(ie_pcmso_w,'N')		= 'N')))) then


			insert into pls_itens_lote_execucao(
					nr_sequencia, nr_seq_lote_exec, ie_permite_execucao,
					ie_executar, dt_atualizacao, nm_usuario,
					dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_req_proc,
					nr_seq_req_mat, nr_seq_requisicao, qt_solicitado,
					qt_aprovado, qt_executado, qt_pendente,
					dt_requisicao, dt_validade_senha, cd_proc_mat,
					ds_proc_mat, ds_tipo_guia, nm_medico,
					cd_medico_solicitante, ie_tipo_item,  ie_tipo_guia,
					nr_seq_regra_prest_mat)
				values (	nextval('pls_itens_lote_execucao_seq'), nr_seq_lote_execucao_w, 'N',
					'N', clock_timestamp(), nm_usuario_p,
					clock_timestamp(), nm_usuario_p, null,
					nr_seq_proc_mat_w, nr_seq_requisicao_w, qt_item_solicitado_w,
					qt_item_aprovado_w, qt_item_executado_w, qt_item_pendente_w,
					trunc(dt_requisicao_w), trunc(dt_validade_senha_w), cd_proc_mat_w,
					substr(pls_obter_desc_material(cd_proc_mat_w),1,255), substr(obter_valor_dominio(1746,ie_tipo_guia_w),1,255), substr(obter_nome_medico(cd_medico_solicitante_w,'N'),1,255),
					cd_medico_solicitante_w, ie_tipo_item_w, ie_tipo_guia_w,
					nr_seq_regra_lib_w);
		end if;
		end;
	end loop;
	close C02;
end if;

nr_seq_lote_execucao_p := nr_seq_lote_execucao_w;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_itens_lote_execucao ( nr_seq_prestador_p pls_prestador.nr_sequencia%type, nr_seq_segurado_p pls_segurado.nr_sequencia%type, nr_seq_requisicao_p pls_requisicao.nr_sequencia%type, ie_origem_execucao_p pls_lote_execucao_req.ie_origem_consulta%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nr_seq_usuario_web_p pls_usuario_web.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, ds_observacao_p pls_lote_execucao_req.ds_observacao%type, nr_seq_lote_execucao_p INOUT pls_lote_execucao_req.nr_sequencia%type) FROM PUBLIC;

