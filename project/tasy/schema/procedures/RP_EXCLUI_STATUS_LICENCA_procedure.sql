-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE rp_exclui_status_licenca (nr_seq_licenca_p bigint, nr_seq_pac_reab_p bigint, cd_pessoa_fisica_p text) AS $body$
DECLARE


ie_justificada_w	varchar(1);				
dt_periodo_inicial_w	timestamp;
dt_periodo_final_w	timestamp;
nr_seq_rp_mod_item_w	bigint;
nr_seq_agenda_w		    agenda_consulta.nr_sequencia%type;
nr_seq_rp_item_ind_w	bigint;
			
C01 CURSOR FOR
	SELECT	b.nr_sequencia
	from	RP_PAC_MODELO_AGENDAMENTO a,
		rp_pac_modelo_agend_item b
	where	a.nr_sequencia = b.NR_SEQ_MODELO_PAC
	and	a.nr_seq_pac_reab = nr_seq_pac_reab_p;
	
C02 CURSOR FOR
	SELECT	nr_sequencia
	from	agenda_consulta
	where	dt_agenda between inicio_dia(dt_periodo_inicial_w) and fim_dia(dt_periodo_final_w)
	and	trunc(dt_agenda) >= trunc(clock_timestamp())
	and	cd_pessoa_fisica = cd_pessoa_fisica_p
	and	nr_seq_rp_mod_item = nr_seq_rp_mod_item_w
	and	ie_status_agenda = ie_justificada_w
	and		obter_estab_agenda(cd_agenda) = wheb_usuario_pck.get_cd_estabelecimento;

C03 CURSOR FOR
	SELECT	nr_sequencia
	from	rp_pac_agend_individual
	where	nr_seq_pac_reab = nr_seq_pac_reab_p;
	
C04 CURSOR FOR
	SELECT	nr_sequencia
	from	agenda_consulta
	where	dt_agenda between inicio_dia(dt_periodo_inicial_w) and fim_dia(dt_periodo_final_w)
	and	trunc(dt_agenda) >= trunc(clock_timestamp())
	and	cd_pessoa_fisica = cd_pessoa_fisica_p
	and	nr_seq_rp_item_ind = nr_seq_rp_item_ind_w
	and	ie_status_agenda = ie_justificada_w
	and		obter_estab_agenda(cd_agenda) = wheb_usuario_pck.get_cd_estabelecimento;
	

BEGIN
select	max(ie_justificada),
	max(dt_periodo_inicial),
	max(dt_periodo_final)
into STRICT	ie_justificada_w,
	dt_periodo_inicial_w,
	dt_periodo_final_w
from	rp_licenca
where	nr_sequencia = nr_seq_licenca_p
and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '');

if (ie_justificada_w = 'J') then
	ie_justificada_w := 'F';
elsif (ie_justificada_w = 'N') then
	ie_justificada_w := 'I';
end if;	

/*Altera o status dos agendamentos futuros dos modelos no periodo de ausencia*/

open C01;
loop
fetch C01 into	
	nr_seq_rp_mod_item_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	
	open C02;
	loop
	fetch C02 into	
		nr_seq_agenda_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		update	agenda_consulta
		set	ie_status_agenda = 'N'
		where	nr_sequencia = nr_seq_agenda_w;		
		end;
	end loop;
	close C02;
	
	
	end;
end loop;
close C01;

/* Altera o status dos agendamentos futuros dos servicos individual no periodo de ausencia*/

open C03;
loop
fetch C03 into	
	nr_seq_rp_item_ind_w;
EXIT WHEN NOT FOUND; /* apply on C03 */
	begin
	
	open C04;
	loop
	fetch C04 into	
		nr_seq_agenda_w;
	EXIT WHEN NOT FOUND; /* apply on C04 */
		begin
		update	agenda_consulta
		set	ie_status_agenda = 'N'
		where	nr_sequencia = nr_seq_agenda_w;		
		end;
	end loop;
	close C04;
	
	end;
end loop;
close C03;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE rp_exclui_status_licenca (nr_seq_licenca_p bigint, nr_seq_pac_reab_p bigint, cd_pessoa_fisica_p text) FROM PUBLIC;

