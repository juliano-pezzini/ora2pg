-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ctb_pls_contab_desp_reemb ( nr_lote_contabil_p bigint, nm_usuario_p text, ie_exclusao_p text, ds_retorno_p INOUT text) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Contabilizar os valores referentes as contas de reembolso
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[  ]  Objetos do dicionario [ X ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao:
-------------------------------------------------------------------------------------------------------------------

Referencias:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
dt_referencia_w			timestamp;
cd_estabelecimento_w		smallint;
cd_conta_contabil_w		varchar(20);
ie_debito_credito_w		varchar(20);
vl_contabil_w			double precision;
vl_retorno_w			varchar(2000);
dt_referencia_reemb_w		timestamp;
nr_seq_w_movto_cont_w		bigint;
cd_historico_w			bigint;
nr_seq_reembolso_w		bigint;
cd_centro_custo_w		integer;
ie_centro_custo_w		varchar(1);
nr_seq_item_w			bigint;
ds_item_w			varchar(255);
ie_proc_mat_w			varchar(2);
ie_tipo_item_w			varchar(10);
nr_lote_contabil_w		bigint;
nr_seq_regra_cc_w		bigint;
nr_seq_protocolo_w		bigint;
ie_compl_hist_w			varchar(2);
ds_conteudo_w			varchar(4000);
ds_compl_historico_w		varchar(255);
ds_compl_historico_ww		varchar(255);
nr_seq_segurado_w		bigint;
cd_pessoa_resp_credito_w	varchar(10);
cd_pf_documento_w		varchar(10);
cd_pj_documento_w		varchar(14);
nr_seq_segurado_ww		bigint;
nr_seq_plano_w			bigint;
nm_resp_credito_w		varchar(255);
nm_pessoa_documento_w		varchar(255);
nr_seq_regra_w			bigint;

cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
nr_seq_material_w		bigint;
nr_seq_mvto_sem_conta_w		bigint;
qt_compl_hist_w			bigint;
ie_esquema_contabil_w		varchar(1);
nr_seq_info_ctb_w		informacao_contabil.nr_sequencia%type;
nm_tabela_w			w_movimento_contabil.nm_tabela%type;
nm_atributo_w			w_movimento_contabil.nm_atributo%type;
cd_tipo_lote_contabil_w		lote_contabil.cd_tipo_lote_contabil%type;
dt_ref_inicial_w		timestamp;
dt_ref_final_w			timestamp;
nr_titulo_w			titulo_pagar.nr_titulo%type;
nr_seq_agrupamento_w		movimento_contabil.nr_seq_agrupamento%type;
nm_agrupador_w			varchar(255);
ie_forma_contab_reembolso_w	pls_parametro_contabil.ie_forma_contab_reembolso%type;
nr_seq_tab_orig_w		w_movimento_contabil.nr_seq_tab_orig%type;
nr_seq_tab_compl_w		w_movimento_contabil.nr_seq_tab_compl%type;
nr_doc_analitico_w		w_movimento_contabil.nr_doc_analitico%type;

c_itens_conta CURSOR FOR
	SELECT	'D' ie_debito_credito, /* debito procedimento*/
		'P' ie_proc_mat, /*Procedimento*/
		c.nr_sequencia,
		c.cd_conta_deb,
		CASE WHEN ie_forma_contab_reembolso_w='L' THEN coalesce(c.vl_liberado,0)  ELSE coalesce(c.vl_procedimento_imp,0) END  vl_item,
		trunc(a.dt_mes_competencia,'dd'),
		c.cd_historico,
		b.nr_sequencia,
		b.nr_seq_segurado,
		c.nr_seq_regra_ctb_deb nr_seq_regra,
		c.cd_procedimento,
		c.ie_origem_proced,
		null nr_seq_material,
		'PLS_CONTA_PROC' nm_tabela,
		CASE WHEN ie_forma_contab_reembolso_w='L' THEN 'VL_LIBERADO'  ELSE 'VL_CALC_PROC' END  nm_atributo,
		23 nr_seq_info_ctb,
		b.nr_seq_protocolo,
		b.cd_pessoa_fisica,
		b.cd_cgc,
		a.nr_seq_segurado,
		a.cd_pessoa_fisica,
		b.nr_seq_plano,
		a.nr_sequencia nr_seq_tab_orig,
		b.nr_sequencia nr_seq_tab_compl,
		c.nr_sequencia nr_doc_analitico
	from	pls_conta_proc 		c,
		pls_conta 		b,
		pls_protocolo_conta 	a
	where	b.nr_sequencia		= c.nr_seq_conta
	and	a.nr_sequencia		= b.nr_seq_protocolo
	and	c.nr_lote_contabil	= nr_lote_contabil_p
	and	a.ie_tipo_protocolo	= 'R'
	
union all

	SELECT	'C', /* credito procedimento */
		'P', /*Procedimento*/
		c.nr_sequencia,
		c.cd_conta_cred,
		CASE WHEN ie_forma_contab_reembolso_w='L' THEN coalesce(c.vl_liberado,0)  ELSE coalesce(c.vl_procedimento_imp,0) END  vl_item,
		trunc(a.dt_mes_competencia,'dd'),
		c.cd_historico,
		b.nr_sequencia,
		b.nr_seq_segurado,
		c.nr_seq_regra_ctb_cred,
		c.cd_procedimento,
		c.ie_origem_proced,
		null nr_seq_material,
		'PLS_CONTA_PROC' nm_tabela,
		CASE WHEN ie_forma_contab_reembolso_w='L' THEN 'VL_LIBERADO'  ELSE 'VL_CALC_PROC' END  nm_atributo,
		23 nr_seq_info_ctb,
		b.nr_seq_protocolo,
		b.cd_pessoa_fisica,
		b.cd_cgc,
		a.nr_seq_segurado,
		a.cd_pessoa_fisica,
		b.nr_seq_plano,
		a.nr_sequencia nr_seq_tab_orig,
		b.nr_sequencia nr_seq_tab_compl,
		c.nr_sequencia nr_doc_analitico
	from	pls_conta_proc 		c,
		pls_conta 		b,
		pls_protocolo_conta 	a
	where	b.nr_sequencia		= c.nr_seq_conta
	and	a.nr_sequencia		= b.nr_seq_protocolo
	and	c.nr_lote_contabil	= nr_lote_contabil_p
	and	a.ie_tipo_protocolo	= 'R'
	
union all

	select	'D', /* debito material */
		'M', /*Material*/
	
		c.nr_sequencia,
		c.cd_conta_deb,
		CASE WHEN ie_forma_contab_reembolso_w='L' THEN coalesce(c.vl_liberado,0)  ELSE coalesce(c.vl_material_imp,0) END  vl_item,
		trunc(a.dt_mes_competencia,'dd'),
		c.cd_historico,
		b.nr_sequencia,
		b.nr_seq_segurado,
		c.nr_seq_regra_ctb_deb,
		null cd_procedimento,
		null ie_origem_proced,
		c.nr_seq_material,
		'PLS_CONTA_MAT' nm_tabela,
		CASE WHEN ie_forma_contab_reembolso_w='L' THEN 'VL_LIBERADO'  ELSE 'VL_CALC_MAT' END  nm_atributo,
		23 nr_seq_info_ctb,
		b.nr_seq_protocolo,
		b.cd_pessoa_fisica,
		b.cd_cgc,
		a.nr_seq_segurado,
		a.cd_pessoa_fisica,
		b.nr_seq_plano,
		a.nr_sequencia nr_seq_tab_orig,
		b.nr_sequencia nr_seq_tab_compl,
		c.nr_sequencia nr_doc_analitico
	from	pls_conta_mat 		c,
		pls_conta 		b,
		pls_protocolo_conta 	a
	where	b.nr_sequencia		= c.nr_seq_conta
	and	a.nr_sequencia		= b.nr_seq_protocolo
	and	c.nr_lote_contabil	= nr_lote_contabil_p
	and	a.ie_tipo_protocolo	= 'R'
	
union all

	select	'C', /* credito materiais */
		'M', /*Material*/
		c.nr_sequencia,
		c.cd_conta_cred,
		CASE WHEN ie_forma_contab_reembolso_w='L' THEN coalesce(c.vl_liberado,0)  ELSE coalesce(c.vl_material_imp,0) END  vl_item,
		trunc(a.dt_mes_competencia,'dd'),
		c.cd_historico,
		b.nr_sequencia,
		b.nr_seq_segurado,
		c.nr_seq_regra_ctb_cred,
		null cd_procedimento,
		null ie_origem_proced,
		c.nr_seq_material,
		'PLS_CONTA_MAT' nm_tabela,
		CASE WHEN ie_forma_contab_reembolso_w='L' THEN 'VL_LIBERADO'  ELSE 'VL_CALC_MAT' END  nm_atributo,
		23 nr_seq_info_ctb,
		b.nr_seq_protocolo,
		b.cd_pessoa_fisica,
		b.cd_cgc,
		a.nr_seq_segurado,
		a.cd_pessoa_fisica,
		b.nr_seq_plano,
		a.nr_sequencia nr_seq_tab_orig,
		b.nr_sequencia nr_seq_tab_compl,
		c.nr_sequencia nr_doc_analitico
	from	pls_conta_mat 		c,
		pls_conta 		b,
		pls_protocolo_conta 	a
	where	b.nr_sequencia		= c.nr_seq_conta
	and	a.nr_sequencia		= b.nr_seq_protocolo
	and	c.nr_lote_contabil	= nr_lote_contabil_p
	and	a.ie_tipo_protocolo	= 'R'
	
union all

	select	'C', /* debito procedimento - Invertido propositalmente - glosa */
		'P', /*Procedimento*/
		c.nr_sequencia,
		CASE WHEN ie_esquema_contabil_w='S' THEN c.cd_conta_glosa_cred  ELSE c.cd_conta_glosa_deb END ,
		coalesce(c.vl_glosa,0),
		trunc(CASE WHEN ie_forma_contab_reembolso_w='M' THEN a.dt_mes_competencia  ELSE CASE WHEN a.ie_status='4' THEN a.dt_fechamento_contas  ELSE a.dt_lib_pagamento END  END ,'dd'),
		c.cd_historico_glosa,
		b.nr_sequencia,
		b.nr_seq_segurado,
		CASE WHEN ie_esquema_contabil_w='S' THEN c.nr_seq_regra_ctb_cred  ELSE c.nr_seq_regra_ctb_deb END ,
		c.cd_procedimento,
		c.ie_origem_proced,
		null nr_seq_material,
		'PLS_CONTA_PROC' nm_tabela,
		'VL_GLOSA' nm_atributo,
		24 nr_seq_info_ctb,
		b.nr_seq_protocolo,
		b.cd_pessoa_fisica,
		b.cd_cgc,
		a.nr_seq_segurado,
		a.cd_pessoa_fisica,
		b.nr_seq_plano,
		a.nr_sequencia nr_seq_tab_orig,
		b.nr_sequencia nr_seq_tab_compl,
		c.nr_sequencia nr_doc_analitico
	from	pls_conta_proc 		c,
		pls_conta 		b,
		pls_protocolo_conta 	a
	where	b.nr_sequencia		= c.nr_seq_conta
	and	a.nr_sequencia		= b.nr_seq_protocolo
	and	c.nr_lote_contab_pag	= nr_lote_contabil_p
	and	a.ie_tipo_protocolo	= 'R'
	and	coalesce(c.vl_glosa,0) <> 0
	
union all

	select	'D', /* credito procedimento - Invertido propositalmente - glosa */
		'P', /*Procedimento*/
		c.nr_sequencia,
		CASE WHEN ie_esquema_contabil_w='S' THEN c.cd_conta_glosa_deb  ELSE c.cd_conta_glosa_cred END ,
		coalesce(c.vl_glosa,0),
		trunc(CASE WHEN ie_forma_contab_reembolso_w='M' THEN a.dt_mes_competencia  ELSE CASE WHEN a.ie_status='4' THEN a.dt_fechamento_contas  ELSE a.dt_lib_pagamento END  END ,'dd'),
		c.cd_historico_glosa,
		b.nr_sequencia,
		b.nr_seq_segurado,
		CASE WHEN ie_esquema_contabil_w='S' THEN c.nr_seq_regra_ctb_deb  ELSE c.nr_seq_regra_ctb_cred END ,
		c.cd_procedimento,
		c.ie_origem_proced,
		null nr_seq_material,
		'PLS_CONTA_PROC' nm_tabela,
		'VL_GLOSA' nm_atributo,
		24 nr_seq_info_ctb,
		b.nr_seq_protocolo,
		b.cd_pessoa_fisica,
		b.cd_cgc,
		a.nr_seq_segurado,
		a.cd_pessoa_fisica,
		b.nr_seq_plano,
		a.nr_sequencia nr_seq_tab_orig,
		b.nr_sequencia nr_seq_tab_compl,
		c.nr_sequencia nr_doc_analitico
	from	pls_conta_proc 		c,
		pls_conta 		b,
		pls_protocolo_conta 	a
	where	b.nr_sequencia		= c.nr_seq_conta
	and	a.nr_sequencia		= b.nr_seq_protocolo
	and	c.nr_lote_contab_pag	= nr_lote_contabil_p
	and	a.ie_tipo_protocolo	= 'R'
	and	coalesce(c.vl_glosa,0) <> 0
	
union all

	select	'C', /* debito material - Invertido propositalmente - glosa */
		'M', /*Material*/
		c.nr_sequencia,
		CASE WHEN ie_esquema_contabil_w='S' THEN c.cd_conta_glosa_cred  ELSE c.cd_conta_glosa_deb END ,
		coalesce(c.vl_glosa,0),
		trunc(CASE WHEN ie_forma_contab_reembolso_w='M' THEN a.dt_mes_competencia  ELSE CASE WHEN a.ie_status='4' THEN a.dt_fechamento_contas  ELSE a.dt_lib_pagamento END  END ,'dd'),
		c.cd_historico_glosa,
		b.nr_sequencia,
		b.nr_seq_segurado,
		CASE WHEN ie_esquema_contabil_w='S' THEN c.nr_seq_regra_ctb_cred  ELSE c.nr_seq_regra_ctb_deb END ,
		null cd_procedimento,
		null ie_origem_proced,
		c.nr_seq_material,
		'PLS_CONTA_MAT' nm_tabela,
		'VL_GLOSA' nm_atributo,
		24 nr_seq_info_ctb,
		b.nr_seq_protocolo,
		b.cd_pessoa_fisica,
		b.cd_cgc,
		a.nr_seq_segurado,
		a.cd_pessoa_fisica,
		b.nr_seq_plano,
		a.nr_sequencia nr_seq_tab_orig,
		b.nr_sequencia nr_seq_tab_compl,
		c.nr_sequencia nr_doc_analitico
	from	pls_conta_mat 		c,
		pls_conta 		b,
		pls_protocolo_conta 	a
	where	b.nr_sequencia		= c.nr_seq_conta
	and	a.nr_sequencia		= b.nr_seq_protocolo
	and	c.nr_lote_contab_pag	= nr_lote_contabil_p
	and	a.ie_tipo_protocolo	= 'R'
	and	coalesce(c.vl_glosa,0) <> 0
	
union all

	select	'D', /* credito materiais - Invertido propositalmente - glosa */
		'M', /*Material*/
		c.nr_sequencia,
		CASE WHEN ie_esquema_contabil_w='S' THEN c.cd_conta_glosa_deb  ELSE c.cd_conta_glosa_cred END ,
		coalesce(c.vl_glosa,0),
		trunc(CASE WHEN ie_forma_contab_reembolso_w='M' THEN a.dt_mes_competencia  ELSE CASE WHEN a.ie_status='4' THEN a.dt_fechamento_contas  ELSE a.dt_lib_pagamento END  END ,'dd'),
		c.cd_historico_glosa,
		b.nr_sequencia,
		b.nr_seq_segurado,
		CASE WHEN ie_esquema_contabil_w='S' THEN c.nr_seq_regra_ctb_deb  ELSE c.nr_seq_regra_ctb_cred END ,
		null cd_procedimento,
		null ie_origem_proced,
		c.nr_seq_material,
		'PLS_CONTA_MAT' nm_tabela,
		'VL_GLOSA' nm_atributo,
		24 nr_seq_info_ctb,
		b.nr_seq_protocolo,
		b.cd_pessoa_fisica,
		b.cd_cgc,
		a.nr_seq_segurado,
		a.cd_pessoa_fisica,
		b.nr_seq_plano,
		a.nr_sequencia nr_seq_tab_orig,
		b.nr_sequencia nr_seq_tab_compl,
		c.nr_sequencia nr_doc_analitico
	from	pls_conta_mat 		c,
		pls_conta 		b,
		pls_protocolo_conta 	a
	where	b.nr_sequencia		= c.nr_seq_conta
	and	a.nr_sequencia		= b.nr_seq_protocolo
	and	c.nr_lote_contab_pag	= nr_lote_contabil_p
	and	a.ie_tipo_protocolo	= 'R'
	and	coalesce(c.vl_glosa,0) <> 0
	
union all

	select	'C',  /* debito coparticipacao - Invertido propositalmente */
		'PC', /*Procedimento*/
		c.nr_sequencia,
		c.cd_conta_copartic_deb,
		coalesce(c.vl_coparticipacao,0),
		trunc(a.dt_mes_competencia,'dd'),
		c.cd_historico_copartic,
		b.nr_sequencia,
		b.nr_seq_segurado,
		null,
		c.cd_procedimento,
		c.ie_origem_proced,
		null nr_seq_material,
		'PLS_CONTA_PROC' nm_tabela,
		'VL_COPARTICIPACAO' nm_atributo,
		25 nr_seq_info_ctb,
		b.nr_seq_protocolo,
		b.cd_pessoa_fisica,
		b.cd_cgc,
		a.nr_seq_segurado,
		a.cd_pessoa_fisica,
		b.nr_seq_plano,
		a.nr_sequencia nr_seq_tab_orig,
		b.nr_sequencia nr_seq_tab_compl,
		c.nr_sequencia nr_doc_analitico
	from	pls_conta_proc 		c,
		pls_conta 		b,
		pls_protocolo_conta 	a
	where	b.nr_sequencia		= c.nr_seq_conta
	and	a.nr_sequencia		= b.nr_seq_protocolo
	and	c.nr_lote_contabil	= nr_lote_contabil_p
	and	coalesce(b.vl_coparticipacao,0) <> 0
	and	a.ie_tipo_protocolo	= 'R'
	
union all

	select	'D',  /* credito coparticipacao - Invertido propositalmente */
		'PC', /*Procedimento*/
		c.nr_sequencia,
		c.cd_conta_copartic_cred,
		coalesce(c.vl_coparticipacao,0),
		trunc(a.dt_mes_competencia,'dd'),
		c.cd_historico_copartic,
		b.nr_sequencia,
		b.nr_seq_segurado,
		null,
		c.cd_procedimento,
		c.ie_origem_proced,
		null nr_seq_material,
		'PLS_CONTA_PROC' nm_tabela,
		'VL_COPARTICIPACAO' nm_atributo,
		25 nr_seq_info_ctb,
		b.nr_seq_protocolo,
		b.cd_pessoa_fisica,
		b.cd_cgc,
		a.nr_seq_segurado,
		a.cd_pessoa_fisica,
		b.nr_seq_plano,
		a.nr_sequencia nr_seq_tab_orig,
		b.nr_sequencia nr_seq_tab_compl,
		c.nr_sequencia nr_doc_analitico
	from	pls_conta_proc 		c,
		pls_conta 		b,
		pls_protocolo_conta 	a
	where	b.nr_sequencia		= c.nr_seq_conta
	and	a.nr_sequencia		= b.nr_seq_protocolo
	and	c.nr_lote_contabil	= nr_lote_contabil_p
	and	coalesce(b.vl_coparticipacao,0) <> 0
	and	a.ie_tipo_protocolo	= 'R';

c_movimento CURSOR FOR
	SELECT	oid
	from	movimento_contabil
	where	nr_lote_contabil	= nr_lote_contabil_p;
	
c_movimento_w CURSOR FOR
	SELECT	oid
	from	w_movimento_contabil
	where	nr_lote_contabil	= nr_lote_contabil_p;
		
BEGIN
/*Validacao para impedir a geracao em lotes incorretos */

if (ie_exclusao_p <> 'S') then
        select b.cd_tipo_lote_contabil
        into STRICT cd_tipo_lote_contabil_w
        from lote_contabil b
        where b.nr_lote_contabil = nr_lote_contabil_p;
        if (cd_tipo_lote_contabil_w <> 23) then
                CALL wheb_mensagem_pck.exibir_mensagem_abort(261346);
        end if;
end if;
select	dt_referencia,
	cd_estabelecimento,
	cd_tipo_lote_contabil
into STRICT 	dt_referencia_w,
	cd_estabelecimento_w,
	cd_tipo_lote_contabil_w
from 	lote_contabil
where 	nr_lote_contabil 	= nr_lote_contabil_p;

delete	from w_pls_movimento_sem_conta
where	cd_tipo_lote_contabil	= cd_tipo_lote_contabil_w;

if (ie_exclusao_p = 'S') then
	CALL wheb_usuario_pck.set_ie_lote_contabil('S');
	
	for reg in c_movimento
		loop
		delete	from movimento_contabil
		where   rowid	= reg.rowid;
		end loop;
	
	update	lote_contabil
	set	vl_credito		= 0,
		vl_debito		= 0
	where	nr_lote_contabil	= nr_lote_contabil_p;
	
	commit;
	
	update	pls_conta_proc a
	set	a.nr_lote_contabil	= 0
	where	a.nr_seq_conta	in (SELECT	x.nr_sequencia
					from	pls_conta x,
						pls_protocolo_conta y
					where	y.nr_sequencia		= x.nr_seq_protocolo
					and	y.nr_lote_contabil	= nr_lote_contabil_p);
					
	commit;
	
	update	pls_conta_mat a
	set	a.nr_lote_contabil	= 0
	where	a.nr_seq_conta	in (SELECT	x.nr_sequencia
					from	pls_conta x,
						pls_protocolo_conta y
					where	y.nr_sequencia		= x.nr_seq_protocolo
					and	y.nr_lote_contabil	= nr_lote_contabil_p);
					
	commit;
	
	update	pls_conta_proc a
	set	a.nr_lote_contab_pag	= 0
	where	a.nr_lote_contab_pag 	= nr_lote_contabil_p;
					
	commit;
	
	update	pls_conta_mat a
	set	a.nr_lote_contab_pag	= 0
	where	a.nr_lote_contab_pag 	= nr_lote_contabil_p;
					
	commit;
	
	update	pls_protocolo_conta
	set	nr_lote_contabil	= 0
	where	nr_lote_contabil 	= nr_lote_contabil_p;
	
	commit;
	
	update	pls_protocolo_conta
	set	nr_lote_contab_pag	= 0
	where	nr_lote_contab_pag 	= nr_lote_contabil_p;
	
	commit;
	
	CALL wheb_usuario_pck.set_ie_lote_contabil('N');
else

	CALL ctb_gravar_log_lote(	nr_lote_contabil_p,
				1,
				wheb_mensagem_pck.get_texto(1097173),
				nm_usuario_p);

	select	max(ie_esquema_contabil),
		coalesce(max(ie_forma_contab_reembolso),'C')
	into STRICT	ie_esquema_contabil_w,
		ie_forma_contab_reembolso_w
	from	pls_parametro_contabil
	where	cd_estabelecimento	= cd_estabelecimento_w;

	ie_esquema_contabil_w	:= coalesce(ie_esquema_contabil_w,'N');
	
	dt_ref_inicial_w	:= trunc(dt_referencia_w,'month');
	dt_ref_final_w		:= fim_dia(fim_mes(dt_referencia_w));
	
	CALL wheb_usuario_pck.set_ie_lote_contabil('S');
	
	for reg in c_movimento_w
		loop
		delete	from w_movimento_contabil
		where   rowid	= reg.rowid;
		end loop;
	
	update	pls_protocolo_conta a
	set	a.nr_lote_contabil	= nr_lote_contabil_p
	where	coalesce(a.nr_lote_contabil,0)	= 0
	and	a.ie_situacao		!= 'RE'
	and	a.cd_estabelecimento	= cd_estabelecimento_w
	and	a.ie_tipo_protocolo	= 'R'
	and	a.dt_mes_competencia between dt_ref_inicial_w and dt_ref_final_w
	and	exists (SELECT	1
			from	pls_conta	c
			where	a.nr_sequencia	= c.nr_seq_protocolo
			and	c.ie_status	not in ('C','U'));
	
	commit;
	
	update	pls_protocolo_conta	a
	set	a.nr_lote_contab_pag	= nr_lote_contabil_p
	where	coalesce(a.nr_lote_contab_pag,0)	= 0
	and	ie_forma_contab_reembolso_w = 'C'
	and	a.ie_situacao		!= 'RE'
	and	a.cd_estabelecimento	= cd_estabelecimento_w
	and	a.ie_tipo_protocolo	= 'R'
	and	((a.dt_lib_pagamento between dt_ref_inicial_w and dt_ref_final_w AND a.ie_status <> '4')
	or	(a.dt_fechamento_contas between dt_ref_inicial_w and dt_ref_final_w AND a.ie_status ='4'))
	and	exists (SELECT	1
			from	pls_conta	c
			where	a.nr_sequencia	= c.nr_seq_protocolo
			and	c.ie_status	not in ('C','U'));
	
	commit;
	
	update	pls_protocolo_conta	a
	set	a.nr_lote_contab_pag	= nr_lote_contabil_p
	where	coalesce(a.nr_lote_contab_pag,0)	= 0
	and	ie_forma_contab_reembolso_w = 'M'
	and	a.ie_situacao		!= 'RE'
	and	a.cd_estabelecimento	= cd_estabelecimento_w
	and	a.ie_tipo_protocolo	= 'R'
	and	a.dt_mes_competencia between dt_ref_inicial_w and dt_ref_final_w
	and	exists (SELECT	1
			from	pls_conta	c
			where	a.nr_sequencia	= c.nr_seq_protocolo
			and	c.ie_status	not in ('C','U'));
	
	commit;
	
	update	pls_conta_proc		c
	set	c.nr_lote_contabil 	= nr_lote_contabil_p
	where	coalesce(c.nr_lote_contabil,0) = 0
	and	exists (SELECT	1
			from	pls_conta		b,
				pls_protocolo_conta	a
			where	b.nr_sequencia		= c.nr_seq_conta
			and	a.nr_sequencia		= b.nr_seq_protocolo
			and	a.nr_lote_contabil	= nr_lote_contabil_p
			and	b.ie_status		not in ('C','U')
			and	a.ie_tipo_protocolo	= 'R');
			
	commit;		
			
	update	pls_conta_mat		c
	set	c.nr_lote_contabil 	= nr_lote_contabil_p
	where	coalesce(c.nr_lote_contabil,0) = 0
	and	exists (SELECT	1
			from	pls_conta		b,
				pls_protocolo_conta	a
			where	b.nr_sequencia		= c.nr_seq_conta
			and	a.nr_sequencia		= b.nr_seq_protocolo
			and	a.nr_lote_contabil	= nr_lote_contabil_p
			and	b.ie_status		not in ('C','U')
			and	a.ie_tipo_protocolo	= 'R');
	
	commit;
			
	update	pls_conta_proc		c
	set	c.nr_lote_contab_pag 	= nr_lote_contabil_p
	where	coalesce(c.nr_lote_contab_pag,0) = 0
	and	ie_forma_contab_reembolso_w <> 'L'
	and	exists (SELECT	1
			from	pls_conta		b,
				pls_protocolo_conta	a
			where	b.nr_sequencia		= c.nr_seq_conta
			and	a.nr_sequencia		= b.nr_seq_protocolo
			and	a.nr_lote_contab_pag	= nr_lote_contabil_p
			and	b.ie_status		not in ('C','U')
			and	a.ie_tipo_protocolo	= 'R');
			
	commit;		
			
	update	pls_conta_mat		c
	set	c.nr_lote_contab_pag 	= nr_lote_contabil_p
	where	coalesce(c.nr_lote_contab_pag,0) = 0
	and	ie_forma_contab_reembolso_w <> 'L'
	and	exists (SELECT	1
			from	pls_conta		b,
				pls_protocolo_conta	a
			where	b.nr_sequencia		= c.nr_seq_conta
			and	a.nr_sequencia		= b.nr_seq_protocolo
			and	a.nr_lote_contab_pag	= nr_lote_contabil_p
			and	b.ie_status		not in ('C','U')
			and	a.ie_tipo_protocolo	= 'R');		
			
	commit;
	
	CALL wheb_usuario_pck.set_ie_lote_contabil('N');
	
	begin
	ie_compl_hist_w	:= obter_se_compl_tipo_lote(cd_estabelecimento_w, cd_tipo_lote_contabil_w);
	exception
	when others then
		ie_compl_hist_w	:= 'N';
	end;
	
	nr_seq_w_movto_cont_w	:= 0;
	
	nm_agrupador_w	:= coalesce(trim(both obter_agrupador_contabil(cd_tipo_lote_contabil_w)),'NR_SEQ_CONTA');
	
	open c_itens_conta;
	loop
	fetch c_itens_conta into
		ie_debito_credito_w,
		ie_proc_mat_w,
		nr_seq_item_w,
		cd_conta_contabil_w,
		vl_contabil_w,
		dt_referencia_reemb_w,
		cd_historico_w,
		nr_seq_reembolso_w,
		nr_seq_segurado_ww,
		nr_seq_regra_w,
		cd_procedimento_w,
		ie_origem_proced_w,
		nr_seq_material_w,
		nm_tabela_w,
		nm_atributo_w,
		nr_seq_info_ctb_w,
		nr_seq_protocolo_w,
		cd_pf_documento_w,
		cd_pj_documento_w,
		nr_seq_segurado_w,
		cd_pessoa_resp_credito_w,
		nr_seq_plano_w,
		nr_seq_tab_orig_w,
		nr_seq_tab_compl_w,
		nr_doc_analitico_w;
	EXIT WHEN NOT FOUND; /* apply on c_itens_conta */
		begin	
		
		cd_centro_custo_w	:= null;
		ds_compl_historico_w	:= null;
		
		
		if (nm_agrupador_w = 'NR_SEQ_CONTA')then
			nr_seq_agrupamento_w	:=	nr_seq_reembolso_w;
		end if;
		
		if (coalesce(nr_seq_agrupamento_w,0) = 0)then
			nr_seq_agrupamento_w	:=	nr_seq_reembolso_w;
		end if;
		
		if (coalesce(cd_conta_contabil_w::text, '') = '') then
			if (substr(ie_proc_mat_w,1,1) = 'P') then
				ie_tipo_item_w := 'PR';
				ds_item_w	:= substr(obter_descricao_procedimento(cd_procedimento_w,ie_origem_proced_w),1,255);
			else
				ie_tipo_item_w := 'MR';
				ds_item_w	:= substr(obter_descricao_padrao('PLS_MATERIAL','DS_MATERIAL',nr_seq_material_w),1,255);
			end if;
			
			select	nextval('w_pls_movimento_sem_conta_seq')
			into STRICT	nr_seq_mvto_sem_conta_w
			;
			
			insert into w_pls_movimento_sem_conta(nr_sequencia,
				cd_item, ds_item,
				ie_tipo_item,
				dt_atualizacao,
				nm_usuario,
				vl_item,
				dt_referencia,
				nr_lote_contabil,
				ie_proc_mat_item,
				ie_deb_cred,
				ds_observacao,
				cd_tipo_lote_contabil)
			values (nr_seq_mvto_sem_conta_w,
				nr_seq_item_w,
				ds_item_w,
				ie_tipo_item_w,
				clock_timestamp(),
				nm_usuario_p,
				vl_contabil_w,
				dt_referencia_w,
				nr_lote_contabil_w,
				ie_proc_mat_w,
				ie_debito_credito_w,
				CASE WHEN substr(ie_proc_mat_w,2,1)='C' THEN  wheb_mensagem_pck.get_texto(278890)  ELSE '' END ,
				cd_tipo_lote_contabil_w);
		else
			select	ie_centro_custo
			into STRICT	ie_centro_custo_w
			from	conta_contabil
			where	cd_conta_contabil	= cd_conta_contabil_w;
			
			if (ie_centro_custo_w = 'S') then
				if (coalesce(nr_seq_plano_w::text, '') = '') then
					begin
					select	b.nr_sequencia
					into STRICT	nr_seq_plano_w
					from	pls_segurado a,
						pls_plano b
					where	a.nr_sequencia	= nr_seq_segurado_w
					and	b.nr_sequencia  = a.nr_seq_plano;
					exception
					when others then
						nr_seq_plano_w	:= null;
					end;
				end if;
				
				SELECT * FROM pls_obter_centro_custo(	'D', nr_seq_plano_w, cd_estabelecimento_w, '', '', '', nr_seq_segurado_ww, '', cd_centro_custo_w, nr_seq_regra_cc_w) INTO STRICT cd_centro_custo_w, nr_seq_regra_cc_w;
			end if;
			
			if (ie_compl_hist_w = 'S') then
				select	count(1)
				into STRICT	qt_compl_hist_w
				from	historico_padrao_atributo
				where	cd_tipo_lote_contabil	= cd_tipo_lote_contabil_w
				and	cd_historico		= cd_historico_w  LIMIT 1;
				
				if (qt_compl_hist_w > 0) then
					begin
					nm_resp_credito_w	:= pls_obter_resp_credito_prot(nr_seq_protocolo_w, 'N');
					exception
					when others then
						nm_resp_credito_w	:= '';
					end;
					
					nm_pessoa_documento_w	:= '';
					
					if (coalesce(cd_pf_documento_w,'X') <> 'X') or (coalesce(cd_pj_documento_w,'X') <> 'X') then
						/* Obter o nome da pessoa do dccumento do reembolso */

						nm_pessoa_documento_w	:= obter_nome_pf_pj(cd_pf_documento_w, cd_pj_documento_w);					
					end if;
					
					select	max(a.nr_titulo)
					into STRICT	nr_titulo_w
					from	titulo_pagar		a
					where	a.nr_seq_reembolso	= nr_seq_protocolo_w;
					
					ds_conteudo_w	:= substr(	nr_seq_protocolo_w		|| '#@' ||
									nr_seq_reembolso_w		|| '#@' ||
									nr_seq_segurado_w		|| '#@' ||
									cd_pessoa_resp_credito_w	|| '#@' ||
									cd_pf_documento_w		|| '#@' ||
									cd_pj_documento_w		|| '#@' ||
									nm_resp_credito_w		|| '#@' ||
									nm_pessoa_documento_w		|| '#@' ||
									nr_seq_regra_w			|| '#@' ||
									nr_titulo_w,1,4000);
					
					begin
					ds_compl_historico_ww	:= substr(obter_compl_historico(cd_tipo_lote_contabil_w, cd_historico_w, ds_conteudo_w),1,255);
					exception
					when others then
						ds_compl_historico_ww	:= null;
					end;
					
					ds_compl_historico_w	:= substr(ds_compl_historico_ww,1,255);
				end if;
			end if;
			
			nr_seq_w_movto_cont_w	:= nr_seq_w_movto_cont_w + 1;
			
			insert into w_movimento_contabil(nr_lote_contabil,
				nr_sequencia,
				cd_conta_contabil,
				ie_debito_credito,
				cd_historico,
				dt_movimento,
				vl_movimento,
				cd_estabelecimento,
				cd_centro_custo,
				ds_compl_historico,
				nr_seq_info,
				nm_tabela,
				nm_atributo,
				nr_seq_agrupamento,
				nr_seq_tab_orig,
				nr_seq_tab_compl,
				nr_doc_analitico)
			values (nr_lote_contabil_p,
				nr_seq_w_movto_cont_w,
				cd_conta_contabil_w,
				ie_debito_credito_w,
				cd_historico_w,
				dt_referencia_reemb_w,
				vl_contabil_w,
				cd_estabelecimento_w,
				cd_centro_custo_w,
				ds_compl_historico_w,
				nr_seq_info_ctb_w,
				nm_tabela_w,
				nm_atributo_w,
				nr_seq_agrupamento_w,
				nr_seq_tab_orig_w,
				nr_seq_tab_compl_w,
				nr_doc_analitico_w);
		end if;
		end;
	end loop;
	close c_itens_conta;
	
	CALL agrupa_movimento_contabil(	nr_lote_contabil_p,
					nm_usuario_p);
end if;

if (coalesce(ds_retorno_p::text, '') = '') then
	begin
	update 	lote_contabil
	set		ie_situacao 		= 'A',
			dt_geracao_lote		= CASE WHEN ie_exclusao_p='N' THEN clock_timestamp() WHEN ie_exclusao_p='S' THEN null END
	where	nr_lote_contabil 	= nr_lote_contabil_p;
	
      	if (ie_exclusao_p = 'S') then
		ds_retorno_p	:= wheb_mensagem_pck.get_texto(278898);

		CALL ctb_gravar_log_lote(	nr_lote_contabil_p,
					2,
					'',
					nm_usuario_p);
	else
		ds_retorno_p	:= wheb_mensagem_pck.get_texto(278902);

		CALL ctb_gravar_log_lote(	nr_lote_contabil_p,
					1,
					wheb_mensagem_pck.get_texto(1097175),
					nm_usuario_p);
	end if;
	commit;
	end;
else
	rollback;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_pls_contab_desp_reemb ( nr_lote_contabil_p bigint, nm_usuario_p text, ie_exclusao_p text, ds_retorno_p INOUT text) FROM PUBLIC;

