-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_guia_plan_familiar_nom ( dt_inicio_p timestamp, dt_final_p timestamp, nm_usuario_p text) AS $body$
DECLARE

	qt_linha_w    bigint;

C01 CURSOR FOR
	SELECT  --prestador servico--
		pj.cd_internacional clues,
		coalesce(substr(upper(pj.cd_curp),1,18), 'XXXX999999XXXXXX99') curpprestador,
		coalesce(substr(upper(pj.ds_razao_social),1,50), 'XX') nombreprestador,
		coalesce(substr(upper(pj.nm_fantasia),1,50), 'XX') primerapellidoprestador,
		coalesce(substr(upper(pj.ds_nome_abrev),1,50), 'XX') segundoapellidoprestador,
		obter_dados_tipo_profissional(b.nr_atendimento, 'codigo') tipopersonal,
		obter_dados_tipo_profissional(b.nr_atendimento, 'tipo') especificatipopersonal,
		obter_dados_tipo_profissional(b.nr_atendimento, 'cedula') cedulaprofesional,
		CASE WHEN b.ie_clinica=2 THEN 3 WHEN b.ie_clinica=1 THEN 4 WHEN b.ie_clinica=3 THEN 5 WHEN b.ie_clinica=1000 THEN 6 WHEN b.ie_clinica=1001 THEN 7 WHEN b.ie_clinica=1002 THEN 8 WHEN b.ie_clinica=1004 THEN 9 WHEN b.ie_clinica=1005 THEN 13 WHEN b.ie_clinica=1006 THEN 14 WHEN b.ie_clinica=4 THEN 16 WHEN b.ie_clinica=1007 THEN 17 WHEN b.ie_clinica=1008 THEN 22 WHEN b.ie_clinica=1009 THEN 23 END  servicioatencion,
		'' especificarservicio,
		--dados paciente--
		coalesce(substr(upper(pf_p.cd_curp),1,18), 'XXXX999999XXXXXX99') curppaciente,
		substr(upper(y.ds_given_name),1,50) nombre,
		coalesce(substr(upper(y.ds_family_name),1,50), 'XX') primerapellido,
		coalesce(substr(upper(y.ds_component_name_1),1,50), 'XX') segundoapellido,
		coalesce(to_char(pf_p.dt_nascimento, 'dd/mm/yyyy'), null) fechanacimiento,
		coalesce(ce.cd_entidade, '99') entidadnacimiento,
		case
			when (obter_idade(pf_p.dt_nascimento, b.dt_entrada, 'a') IS NOT NULL AND (obter_idade(pf_p.dt_nascimento, b.dt_entrada, 'a'))::text <> '')
			then coalesce(obter_idade_imc_nom(b.nr_atendimento,pf_p.dt_nascimento,b.dt_entrada,'IDADE'),-1)
			else 999
		end as edad,
		case
			when (obter_idade(pf_p.dt_nascimento, b.dt_entrada, 'a') IS NOT NULL AND (obter_idade(pf_p.dt_nascimento, b.dt_entrada, 'a'))::text <> '')
			then obter_idade_imc_nom(b.nr_atendimento,pf_p.dt_nascimento,b.dt_entrada,'CLAVEEDAD')
			else 9
		end as claveedad,
		CASE WHEN pf_p.ie_sexo='M' THEN  1  WHEN pf_p.ie_sexo='F' THEN  2  ELSE 9 END  sexo,
		CASE WHEN pf_p.nr_seq_cor_pele=201 THEN  1  ELSE 0 END  seconsideraindigena,
		(CASE WHEN (pf_p.nr_spss IS NOT NULL AND pf_p.nr_spss::text <> '') THEN 1 ELSE 0 END) spss,
		case
			when (pf_p.nr_spss IS NOT NULL AND pf_p.nr_spss::text <> '')
			then substr(pf_p.nr_spss,1,13)
		end as numeroafiliacionspss,
		CASE WHEN n.cd_tipo_convenio_mx=13 THEN  1  ELSE 0 END  prospera,
		CASE WHEN n.cd_tipo_convenio_mx=13 THEN  elimina_caractere_especial(substr(p.nr_doc_convenio,1,16)) END  folioprospera,
		CASE WHEN n.cd_tipo_convenio_mx=2 THEN  1  ELSE 0 END  imss,
		CASE WHEN n.cd_tipo_convenio_mx=2 THEN  substr(p.nr_doc_convenio,1,11) END  numeroafiliacionimss,
		CASE WHEN n.cd_tipo_convenio_mx=3 THEN  1  ELSE 0 END  issste,
		CASE WHEN n.cd_tipo_convenio_mx=3 THEN  substr(p.nr_doc_convenio,1,13) END  numeroafiliacionissste,
		CASE WHEN n.cd_tipo_convenio_mx=15 THEN  1  ELSE 0 END  otraafiliacion,
		CASE WHEN n.cd_tipo_convenio_mx=15 THEN  substr(p.nr_doc_convenio,1,15) END  numerootraafiliacion,

		coalesce(coalesce(obter_sinal_vital(b.nr_atendimento, 'PESO'), pf_p.qt_peso), '999') peso,
		coalesce(coalesce(obter_sinal_vital(b.nr_atendimento,'ALTURA'), pf_p.qt_altura_cm), '999') talla,
		obter_dados_deficiencia(pf_p.cd_pessoa_fisica, 'tipo') tipodificultad,
		obter_dados_deficiencia(pf_p.cd_pessoa_fisica, 'grau') gradodificultad,
		obter_dados_deficiencia(pf_p.cd_pessoa_fisica, 'origem') origendificultad,

		-1 migrante,
		coalesce(to_char(b.dt_entrada, 'dd/mm/yyyy'), null) fechaconsulta,
		CASE WHEN(SELECT count(*) from atendimento_paciente ap where (to_char(ap.dt_inicio_atendimento, 'yyyy') = extract(year from b.dt_entrada)) and b.nr_atendimento = ap.nr_atendimento) IS NULL THEN 0  ELSE 1 END  relaciontemporal,
		elimina_caractere_especial(substr( obter_diagnost_doenca_nom(b.nr_atendimento) ,1, 255)) as descripciondiagnostico1,
		case
			when ((select count(*) from diagnostico_doenca ddp where to_char(ddp.dt_diagnostico, 'yyyy') = extract(year from b.dt_entrada) and ddp.nr_atendimento = b.nr_atendimento and ddp.ie_classificacao_doenca = 'P') > 1)
			then 0
			else 1
		end as primeravezdiagnostico1,
		case
			when(select max(cd.ds_doenca_cid) from diagnostico_doenca dd, cid_doenca cd where dd.nr_atendimento = b.nr_atendimento and dd.cd_doenca = cd.cd_doenca_cid and dd.ie_classificacao_doenca = 'P') is not null
			then coalesce((select CASE WHEN coalesce(ie_suive_morb, ie_causa)='S' THEN  '0'  ELSE '1' END  from cid_doenca a2
						where a2.cd_doenca_cid = (select max(cd_doenca)
													from diagnostico_doenca
													where nr_atendimento = b.nr_atendimento
													and ie_classificacao_doenca = 'P')), 'N')
		end as suivecausesdiagnostico1,
		(select max(cd.cd_doenca_cid) from diagnostico_doenca dd, cid_doenca cd where dd.nr_atendimento = b.nr_atendimento and dd.cd_doenca = cd.cd_doenca_cid and dd.ie_classificacao_doenca = 'P') codigociediagnostico1,
		elimina_caractere_especial(substr(upper((select max(cd.ds_doenca_cid)
												from diagnostico_doenca dd, cid_doenca cd
												where dd.nr_atendimento = b.nr_atendimento
												and dd.cd_doenca = cd.cd_doenca_cid
												and dd.ie_classificacao_doenca = 'S')),1, 255)) descripciondiagnostico2,
		case
			when ((select count(*) from diagnostico_doenca ddp where to_char(ddp.dt_diagnostico, 'yyyy') = extract(year from b.dt_entrada) and ddp.nr_atendimento = b.nr_atendimento and ddp.ie_classificacao_doenca = 'S') > 1)
			then 0
			else 1
		end as primeravezdiagnostico2,
		case
			when(select max(ds_diagnostico) from diagnostico_doenca where nr_atendimento = b.nr_atendimento and ie_classificacao_doenca = 'S') is not null
			then coalesce((select CASE WHEN coalesce(ie_suive_morb, ie_causa)='S' THEN  '0'  ELSE '1' END  from cid_doenca a2
						where a2.cd_doenca_cid = (select max(cd_doenca)
						from diagnostico_doenca
						where nr_atendimento = b.nr_atendimento
						and ie_classificacao_doenca = 'S')), 'N')
		end as suivecausesdiagnostico2,
		(select max(cd.cd_doenca_cid) from diagnostico_doenca dd, cid_doenca cd where dd.nr_atendimento = b.nr_atendimento and dd.cd_doenca = cd.cd_doenca_cid and dd.ie_classificacao_doenca = 'S') codigociediagnostico2,
		0 primeravezanio,
		case
			when hsm.ds_metodos_contrac = 2 and hsm.ds_compl_contrac = 1
			then hsm.nr_contrac_realizado
			else 0
		end as oral,
		case
			when hsm.ds_metodos_contrac = 2 and hsm.ds_compl_contrac = 2
			then '1'
			else '0'
		end as inyectablemensual,
		case
			when hsm.ds_metodos_contrac = 2 and hsm.ds_compl_contrac = 3
			then '1'
			else '0'
		end as inyectablebimestral,
		case
			when hsm.ds_metodos_contrac = 6
			then hsm.ds_compl_contrac
			else '-1'
		end as implantesubdermico,
		case
			when hsm.ds_metodos_contrac = 2 and hsm.ds_compl_contrac = 4
			then hsm.nr_contrac_realizado
			else -1
		end as parchedermico,
		case
			when hsm.ds_metodos_contrac = 1 and hsm.ds_compl_contrac = 1
			then coalesce(hsm.nr_contrac_realizado, -1)
			else -1
		end as diu,
		case
			when hsm.ds_metodos_contrac = 1 and hsm.ds_compl_contrac = 2
			then coalesce(hsm.nr_contrac_realizado, -1)
			else -1
		end as diumedicado,
		-1 quirurgico,
		case
			when hsm.ds_metodos_contrac = 5 and hsm.ds_compl_contrac = 1
			then hsm.nr_contrac_realizado
			else 0
		end as preservativo,
		case
			when hsm.ds_metodos_contrac = 5 and hsm.ds_compl_contrac = 2
			then hsm.nr_contrac_realizado
			else 0
		end as preservativofemenino,
		0 otrometodo,
		case
			when pf_p.ie_sexo = 'M'
			then CASE WHEN hsm.ie_orient_met_contrac='S' THEN '1'  ELSE '0' END
			when pf_p.ie_sexo = 'M'
			then CASE WHEN phs.ie_orient_met_contrac='S' THEN '1'  ELSE '0' END 
			else '0'
		end as orientacionpf,
		case
			when hsm.ds_metodos_contrac = 5 and hsm.ds_compl_contrac = 3
			then 1
			else 0
		end as anticoncepcionemergencia,
		case
			when pf_p.ie_sexo = 'M' and (select max(b.ds_tipo_vasectomia)
						from historico_saude_cirurgia a, procedimento b
						where a.cd_pessoa_fisica = b.cd_pessoa_fisica
						and a.cd_procedimento = b.cd_procedimento
						and b.cd_tipo_procedimento = 66) = 'S'
			then 1
			else 0
		end as vasectomiasinbisturi,
		case
			when pf_p.ie_sexo = 'M' and (select max(b.ds_tipo_vasectomia)
						from historico_saude_cirurgia a, procedimento b
						where a.cd_pessoa_fisica = b.cd_pessoa_fisica
						and a.cd_procedimento = b.cd_procedimento
						and b.cd_tipo_procedimento = 66) = 'N'
			then 1
			else 0
		end as altaconazoospermia,
		0 lineavida,
		0 cartillavacunacion,
		-1 referido,
		0 contrarreferido,
		0 telemedicina,
		b.dt_entrada dt_entrada,
		b.nr_atendimento nr_atendimento
	FROM table(pkg_name_utils.search_names_legacy('', 'main')) y, pessoa_juridica pj, pessoa_fisica pf_m, atend_categoria_convenio p, medico m, estabelecimento e, categoria_convenio cc, atendimento_paciente b
LEFT OUTER JOIN historico_saude_mulher hsm ON (b.cd_pessoa_fisica = hsm.cd_pessoa_fisica)
LEFT OUTER JOIN paciente_hist_social phs ON (b.cd_pessoa_fisica = phs.cd_pessoa_fisica)
, pessoa_fisica pf_p
LEFT OUTER JOIN sus_municipio sm ON (pf_p.cd_municipio_ibge = sm.cd_municipio_ibge)
LEFT OUTER JOIN cat_entidade ce ON (sm.nr_seq_entidade_mx = ce.nr_sequencia)
, convenio n
LEFT OUTER JOIN cat_derechohabiencia k ON (n.cd_tipo_convenio_mx = k.nr_sequencia)
WHERE b.nr_atendimento  		= p.nr_atendimento and pj.cd_cgc 			= e.cd_cgc and b.cd_estabelecimento 		= e.cd_estabelecimento and b.cd_pessoa_fisica		= pf_p.cd_pessoa_fisica and b.cd_medico_resp 		= m.cd_pessoa_fisica and pf_m.cd_pessoa_fisica 		= m.cd_pessoa_fisica   and p.cd_convenio 			= cc.cd_convenio and p.cd_categoria 			= cc.cd_categoria and n.cd_convenio 			= cc.cd_convenio    and y.nr_sequencia 			= pf_p.nr_seq_person_name and b.dt_entrada between 		dt_inicio_p and dt_final_p;


BEGIN

	delete from w_geracao_guia
	where nm_usuario = nm_usuario_p;

	commit;

	for r_c01 in C01 loop
	begin

		qt_linha_w := C01%ROWCOUNT;

		CALL grava_campos_nom(qt_linha_w, 'clues', r_c01.clues, 39, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'curpprestador', r_c01.curpprestador, 39, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'nombreprestador', r_c01.nombreprestador,  39, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'primerapellidoprestador', r_c01.primerapellidoprestador,  39, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'segundoapellidoprestador', r_c01.segundoapellidoprestador,  39, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'tipopersonal', r_c01.tipopersonal,  39, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'especificatipopersonal', r_c01.especificatipopersonal,  39, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'cedulaprofesional', r_c01.cedulaprofesional,  39, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'servicioatencion', r_c01.servicioatencion,  39, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'especificarservicio', r_c01.especificarservicio,  39, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'curppaciente', r_c01.curppaciente,  39, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'nombre', r_c01.nombre,  39, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'primerapellido', r_c01.primerapellido,  39, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'segundoapellido', r_c01.segundoapellido,  39, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'fechanacimiento', r_c01.fechanacimiento,  39, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'entidadnacimiento', r_c01.entidadnacimiento,  39, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'edad', r_c01.edad,  39, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'claveedad', r_c01.claveedad,  39, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'sexo', r_c01.sexo,  39, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'seconsideraindigena', r_c01.seconsideraindigena,  39, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'spss', r_c01.spss,  39, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'numeroafiliacionspss', r_c01.numeroafiliacionspss,  39, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'prospera', r_c01.prospera,  39, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'folioprospera', r_c01.folioprospera,  39, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'imss', r_c01.imss,  39, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'numeroafiliacionimss', r_c01.numeroafiliacionimss,  39, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'issste', r_c01.issste,  39, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'numeroafiliacionissste', r_c01.numeroafiliacionissste,  39, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'otraafiliacion', r_c01.otraafiliacion,  39, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'numerootraafiliacion', r_c01.numerootraafiliacion, 39, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'peso', r_c01.peso,  39, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'talla', r_c01.talla, 39, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'tipodificultad', r_c01.tipodificultad,  39, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'gradodificultad', r_c01.gradodificultad,  39, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'origendificultad', r_c01.origendificultad, 39, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'migrante', r_c01.migrante,  39, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'fechaconsulta', r_c01.fechaconsulta, 39, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'relaciontemporal', r_c01.relaciontemporal, 39, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'descripciondiagnostico1', r_c01.descripciondiagnostico1, 39, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'primeravezdiagnostico1', r_c01.primeravezdiagnostico1, 39, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'suivecausesdiagnostico1', r_c01.suivecausesdiagnostico1,  39, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'codigociediagnostico1', r_c01.codigociediagnostico1,  39, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'descripciondiagnostico2', r_c01.descripciondiagnostico2,  39, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'primeravezdiagnostico2', r_c01.primeravezdiagnostico2,  39, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'suivecausesdiagnostico2', r_c01.suivecausesdiagnostico2,  39, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'codigociediagnostico2', r_c01.codigociediagnostico2,   39, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'primeravezanio', r_c01.primeravezanio, 39, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'oral', r_c01.oral, 39, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'inyectablemensual', r_c01.inyectablemensual, 39, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'inyectablebimestral', r_c01.inyectablebimestral, 39, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'implantesubdermico', r_c01.implantesubdermico, 39, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'parchedermico', r_c01.parchedermico, 39, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'diu', r_c01.diu, 39, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'diumedicado', r_c01.diumedicado, 39, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'quirurgico', r_c01.quirurgico, 39, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'preservativo', r_c01.preservativo, 39, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'preservativofemenino', r_c01.preservativofemenino, 39, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'otrometodo', r_c01.otrometodo, 39, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'orientacionpf', r_c01.orientacionpf, 39, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'anticoncepcionemergencia', r_c01.anticoncepcionemergencia, 39, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'vasectomiasinbisturi', r_c01.vasectomiasinbisturi, 39, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'altaconazoospermia', r_c01.altaconazoospermia, 39, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'lineavida', r_c01.lineavida, 39, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'cartillavacunacion', r_c01.cartillavacunacion, 39, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'referido', r_c01.referido, 39, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'contrarreferido', r_c01.contrarreferido, 39, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'telemedicina', r_c01.telemedicina, 39, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'dt_entrada', r_c01.dt_entrada, 39, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'nr_atendimento', r_c01.nr_atendimento, 39, nm_usuario_p);

	end;

   end loop;

 end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_guia_plan_familiar_nom ( dt_inicio_p timestamp, dt_final_p timestamp, nm_usuario_p text) FROM PUBLIC;

