-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_obter_regra_desconto ( nr_sequencia_p bigint, ie_tipo_desconto_p bigint, cd_estabelecimento_p bigint, tx_desconto_p INOUT bigint, nr_seq_regra_desconto_p INOUT bigint) AS $body$
DECLARE


/* IE_TIPO_DESCONTO_P
	1 - Contrato
	2 - Proposta de adesão
	3 - Simulador de preço / Individual familiar
	4 - Simulador de preço / Coletivo empresarial e Simulador de preço / Coletivo por Adesão
	5 - Proposta online
*/
nr_seq_proposta_w		bigint;
nr_seq_titular_w		bigint;
nr_seq_parentesco_w		bigint;
qt_vidas_w			bigint	:= 0;
qt_vidas_subcontrato_w		bigint	:= 0;
ie_tipo_parentesco_w		varchar(3)	:= '1';
dt_item_w			timestamp;
nr_seq_regra_w			bigint;
tx_desconto_w			double precision	:= 0;
ie_tipo_contratacao_w		varchar(2);
nr_seq_simulacao_w		bigint;
ie_titular_w			varchar(1)	:= 'N';
ie_tipo_benef_w			varchar(1);
nr_seq_contrato_w		bigint;
ie_tipo_proposta_w		smallint;
qt_vidas_contrato_w		bigint;
ie_tipo_desconto_w		varchar(2);
nr_seq_item_w			bigint;

C01 CURSOR FOR
	SELECT 	b.nr_sequencia nr_seq_regra,
		a.tx_desconto,
		a.ie_tipo_segurado,
		a.qt_min_vidas,
		a.qt_max_vidas
	from	pls_preco_regra 	a,
		pls_regra_desconto	b
	where	a.nr_seq_regra	= b.nr_sequencia
	and	clock_timestamp() between coalesce(b.dt_inicio_vigencia,clock_timestamp()) and coalesce(b.dt_fim_vigencia, clock_timestamp())
	and	b.ie_situacao 		= 'A'
	and	b.cd_estabelecimento	= cd_estabelecimento_p
	and	(	(ie_tipo_desconto_p = 1 AND b.nr_seq_contrato = nr_seq_contrato_w)
			or
			(ie_tipo_desconto_p = 2 AND b.nr_seq_proposta = nr_seq_proposta_w)
			or
			((ie_tipo_desconto_p in (3,5)) and (pls_obter_se_desc_simulacao(b.nr_sequencia) = 'S'))
		)
	and	((b.ie_tipo_regra	= 'T') or
		(b.ie_tipo_regra	= 'I' AND ie_titular_w = 'S') or
		(b.ie_tipo_regra	= 'L' AND ie_tipo_parentesco_w = '1') or
		((b.ie_tipo_regra	= 'E') and ((ie_tipo_parentesco_w = '1') or (ie_titular_w = 'S'))));
BEGIN
nr_seq_contrato_w	:= 0;
nr_seq_proposta_w	:= 0;
nr_seq_regra_w		:= null;
tx_desconto_w		:= null;

if (ie_tipo_desconto_p = 1) then
	ie_tipo_desconto_w	:= 'C';

	select	nr_seq_contrato,
		coalesce(nr_seq_titular,0),
		nr_seq_parentesco
	into STRICT	nr_seq_contrato_w,
		nr_seq_titular_w,
		nr_seq_parentesco_w
	from	pls_segurado
	where	nr_sequencia	= nr_sequencia_p;

	nr_seq_item_w	:= nr_sequencia_p;

	if (nr_seq_titular_w	= 0) then
		ie_titular_w	:= 'S';
	end if;

	select	coalesce(max(ie_tipo_parentesco), '0')
	into STRICT	ie_tipo_parentesco_w
	from	grau_parentesco
	where	nr_sequencia	= nr_seq_parentesco_w;

	for r_c01_w in C01 loop
		begin
		qt_vidas_w	:= pls_obter_quantidade_vidas(nr_seq_item_w, coalesce(r_c01_w.ie_tipo_segurado,'T'), ie_tipo_desconto_w);
		if (qt_vidas_w between coalesce(r_c01_w.qt_min_vidas,qt_vidas_w) and coalesce(r_c01_w.qt_max_vidas,qt_vidas_w)) then
			nr_seq_regra_w	:= r_c01_w.nr_seq_regra;
			tx_desconto_w	:= r_c01_w.tx_desconto;
		end if;
		end;
	end loop;
elsif (ie_tipo_desconto_p	= 2) then
	ie_tipo_desconto_w	:= 'P';

	select	a.nr_seq_proposta,
		coalesce(a.nr_seq_titular,0),
		a.nr_seq_parentesco
	into STRICT	nr_seq_proposta_w,
		nr_seq_titular_w,
		nr_seq_parentesco_w
	from	pls_proposta_beneficiario	a
	where	a.nr_sequencia			= nr_sequencia_p;

	nr_seq_item_w	:= nr_sequencia_p;

	if (nr_seq_titular_w	= 0) then
		ie_titular_w	:= 'S';
	end if;

	select	coalesce(max(ie_tipo_parentesco), '0')
	into STRICT	ie_tipo_parentesco_w
	from	grau_parentesco
	where	nr_sequencia	= nr_seq_parentesco_w;

	for r_c01_w in C01 loop
		begin
		qt_vidas_w	:= pls_obter_quantidade_vidas(nr_seq_item_w, coalesce(r_c01_w.ie_tipo_segurado,'T'), ie_tipo_desconto_w);
		if (qt_vidas_w between coalesce(r_c01_w.qt_min_vidas,qt_vidas_w) and coalesce(r_c01_w.qt_max_vidas,qt_vidas_w)) then
			nr_seq_regra_w	:= r_c01_w.nr_seq_regra;
			tx_desconto_w	:= r_c01_w.tx_desconto;
		end if;
		end;
	end loop;
elsif (ie_tipo_desconto_p	= 3) then
	ie_tipo_desconto_w	:= 'S';

	select	a.ie_tipo_benef,
		a.nr_seq_parentesco
	into STRICT	ie_tipo_benef_w,
		nr_seq_parentesco_w
	from	pls_simulacao_preco		b,
		pls_simulpreco_individual	a
	where	a.nr_seq_simulacao		= b.nr_sequencia
	and	a.nr_sequencia			= nr_sequencia_p;

	if (ie_tipo_benef_w	= 'T') then
		ie_titular_w		:= 'S';
	end if;

	select	coalesce(max(ie_tipo_parentesco), '0')
	into STRICT	ie_tipo_parentesco_w
	from	grau_parentesco
	where	nr_sequencia	= nr_seq_parentesco_w;

	nr_seq_item_w	:= nr_sequencia_p;

	for r_c01_w in C01 loop
		begin
		qt_vidas_w	:= pls_obter_quantidade_vidas(nr_seq_item_w, coalesce(r_c01_w.ie_tipo_segurado,'T'), ie_tipo_desconto_w);
		if (qt_vidas_w between coalesce(r_c01_w.qt_min_vidas,qt_vidas_w) and coalesce(r_c01_w.qt_max_vidas,qt_vidas_w)) then
			nr_seq_regra_w	:= r_c01_w.nr_seq_regra;
			tx_desconto_w	:= r_c01_w.tx_desconto;
		end if;
		end;
	end loop;
elsif (ie_tipo_desconto_p	= 4) then
	select	coalesce(sum(qt_beneficiario),0)
	into STRICT	qt_vidas_w
	from	pls_simulpreco_coletivo
	where	nr_seq_simulacao	= nr_sequencia_p;

	select	coalesce(max(nr_sequencia),0)
	into STRICT	nr_seq_regra_w
	from	pls_regra_desconto
	where	ie_situacao		= 'A'
	and	pls_obter_se_desc_simulacao(nr_sequencia)	= 'S'
	and	cd_estabelecimento	= cd_estabelecimento_p;

	if (nr_seq_regra_w > 0) then
		begin
		select	coalesce(max(tx_desconto),0)
		into STRICT	tx_desconto_w
		from	pls_preco_regra
		where	nr_seq_regra    = nr_seq_regra_w
		and	qt_vidas_w	>= qt_min_vidas
		and	qt_vidas_w	<= qt_max_vidas;
		exception
			when others then
			tx_desconto_w	:= 0;
		end;
	end if;
elsif (ie_tipo_desconto_p	= 5) then
	ie_tipo_desconto_w	:= 'PO';

	select	ie_tipo_benef,
		nr_seq_parentesco
	into STRICT	ie_tipo_benef_w,
		nr_seq_parentesco_w
	from	pls_proposta_benef_online
	where	nr_sequencia	= nr_sequencia_p;

	if (ie_tipo_benef_w	= 'T') then
		ie_titular_w		:= 'S';
	end if;

	select	coalesce(max(ie_tipo_parentesco), '0')
	into STRICT	ie_tipo_parentesco_w
	from	grau_parentesco
	where	nr_sequencia	= nr_seq_parentesco_w;

	nr_seq_item_w	:= nr_sequencia_p;

	for r_c01_w in C01 loop
		begin
		qt_vidas_w	:= pls_obter_quantidade_vidas(nr_seq_item_w, coalesce(r_c01_w.ie_tipo_segurado,'T'), ie_tipo_desconto_w);
		if (qt_vidas_w between coalesce(r_c01_w.qt_min_vidas,qt_vidas_w) and coalesce(r_c01_w.qt_max_vidas,qt_vidas_w)) then
			nr_seq_regra_w	:= r_c01_w.nr_seq_regra;
			tx_desconto_w	:= r_c01_w.tx_desconto;
		end if;
		end;
	end loop;
end if;

tx_desconto_p		:= coalesce(tx_desconto_w,0);
nr_seq_regra_desconto_p	:= nr_seq_regra_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_obter_regra_desconto ( nr_sequencia_p bigint, ie_tipo_desconto_p bigint, cd_estabelecimento_p bigint, tx_desconto_p INOUT bigint, nr_seq_regra_desconto_p INOUT bigint) FROM PUBLIC;

