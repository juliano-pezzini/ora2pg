-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE tiss_gerar_anexo_guia (nr_sequencia_autor_p bigint, nm_usuario_p text) AS $body$
DECLARE


cd_pessoa_fisica_w		varchar(10);
nr_atendimento_w		bigint;
nr_seq_agenda_w			autorizacao_convenio.nr_seq_agenda%type;
nr_seq_gestao_w			bigint;
nr_seq_paciente_w		bigint;
nr_seq_paciente_setor_w		bigint;
ds_tarja_cartao_w		varchar(4000);
nr_guia_principal_w		varchar(20);
nm_pessoa_fisica_w		varchar(70);
ie_atendimento_rn_w		varchar(1);
cd_cnes_w			numeric(20);
qt_peso_w			real;
qt_altura_cm_w			real;
qt_idade_w			smallint;
ie_sexo_w			varchar(1);
cd_estabelecimento_w		bigint;
cd_convenio_w			bigint;
cd_autorizacao_w		varchar(20);
nr_seq_guia_w			bigint;
dt_autorizacao_w		timestamp;
cd_senha_w			varchar(20);
cd_medico_solicitante_w		varchar(10);
nm_contratado_w			varchar(70);
nr_telefone_contrat_w		varchar(255);
ds_email_contrat_w		varchar(60);
ds_justificativa_w		varchar(1000);
ds_especific_mat_w		varchar(500);
qt_superficie_corporal_w	real;
nr_ciclos_w			smallint;
ds_dia_ciclo_w			varchar(5);
nr_ciclo_autal_w		smallint;
nr_intervalo_ciclo_w		smallint;
ie_tiss_tipo_anexo_w		varchar(15);
cd_usuario_convenio_w		varchar(255);
nr_seq_age_integ_w		bigint;
cd_categoria_w			varchar(10);
cd_material_w			bigint;
cd_material_convenio_w		varchar(20);
ds_material_w			varchar(255);
qt_solicitada_w			double precision;
vl_solicitado_w			double precision;
cd_edicao_amb_w			varchar(2);
cd_item_w			varchar(10);
cd_ref_fabricante_w		varchar(30);
nr_registro_anvisa_w		varchar(15);
nr_autorizacao_func_w		varchar(30);
dt_diagnostico_w			timestamp;
dt_radio_diagnostico_w			timestamp;
cd_cid_w			varchar(10);
cd_cid_2_w			varchar(10);
cd_estadiamento_tumor_w		smallint;
cd_finalidade_tratamento_w	smallint;
cd_capacidade_ecog_w		smallint;
ds_diag_histopatologico_w	varchar(1000);
ds_info_relevantes_w		varchar(1000);
cd_tipo_quimio_w		smallint;
ds_plano_terapeutico_w		varchar(1000);
count_w				bigint;
ie_finalidade_w			varchar(3);
ie_modalidade_trat_w		varchar(3);
ie_nivel_ecog_w			bigint;
cd_estadiamento_w		varchar(20);
ie_mascara_cid_w		varchar(10);
ie_via_aplicacao_w		varchar(5);
ie_via_adm_w			varchar(2);
ie_origem_preco_w		smallint;
cd_material_tuss_w		material_autorizado.cd_material_tuss%type;
ds_material_tuss_w		material_autorizado.ds_material_tuss%type;
nr_seq_tiss_tabela_w		bigint;
ie_desc_material_w		varchar(10);
ie_codigo_material_w		varchar(10);
ie_conversao_externa_w		varchar(10);
ds_mat_convenio_w		varchar(255);
ds_proc_cirurgia_w		varchar(255);
ie_qt_dose_solic_quimio_w	varchar(1);
dt_realizacao_cirurgia_w	timestamp;
dt_entrada_prevista_w		timestamp;
dt_inicio_vigencia_w		timestamp;
qt_dose_w			double precision;
qt_dose_prescr_w		double precision;
qt_dose_dia_w			double precision;
nr_seq_rxt_tratamento_w		rxt_tratamento.nr_sequencia%type;
nr_campos_w			tiss_anexo_guia.nr_campos%type;
qt_dose_campo_w			double precision;
qt_dose_total_w			double precision;
qt_duracao_trat_w		tiss_anexo_guia.qt_duracao_trat%type;
cd_intervalo_w			material_autorizado.cd_intervalo_medic_quimio%type;
cd_cgc_fabricante_w		material_autorizado.cd_cgc_fabricante%type;
ie_dose_quimio_w		varchar(1);
nr_guia_ref_w			varchar(20);
ie_tiss_tipo_guia_w		varchar(10);
ie_tipo_atendimento_w		smallint;
nr_seq_classif_atend_w		bigint;
ie_clinica_w			bigint;
cd_setor_entrada_w		bigint;
dt_inicio_trat_radio_w		timestamp;
cd_cid_radio_w			varchar(10);
cd_cid_2_radio_w		varchar(10);
ds_info_relevantes_radio_w	varchar(1000);
cd_metastase_distancia_w	can_loco_regional.cd_metastase_distancia%type;
cd_linfonodo_regional_w 	can_loco_regional.cd_linfonodo_regional%type;
cd_tumor_primario_w 		can_loco_regional.cd_tumor_primario%type;
cd_metastase_w			varchar(2);
cd_nodulo_w			varchar(2);
cd_tumor_w			varchar(2);
cd_unidade_medida_w		varchar(3);
ds_material_tiss_w		varchar(255);
cd_material_tiss_w		varchar(100);
cd_material_brasindice_w	varchar(100);
cd_laboratorio_w		varchar(100);
cd_medicamento_w		varchar(100);
cd_apresentacao_w		varchar(100);
CD_TABELA_XML_w			varchar(100);
ie_cod_tiss_brasindice_w	varchar(100);
ie_fixar_vig_brasindice_w	varchar(10);
ie_cod_tiss_simpro_w		varchar(255);
cd_material_tuss_bras_w		bigint;
cd_material_tuss_simpro_w	bigint;
cd_material_tuss_conta_w	bigint;
ds_material_original_w		varchar(255) := '';
cd_unidade_medida_consumo_w	varchar(30);
qt_dias_intervalo			smallint;
nr_seq_marca_w		bigint;
nr_seq_bras_preco_w	bigint;
nr_seq_mat_bras_w		bigint;
nr_seq_conv_bras_w	bigint;
nr_seq_conv_simpro_w	bigint;
nr_seq_mat_simpro_w	bigint;
nr_seq_simpro_preco_w	bigint;
nr_seq_ajuste_mat_w	bigint;
dt_ult_vigencia_w		timestamp;
vl_material_w		double precision := 0;
cd_tab_preco_mat_w	bigint;
ie_origem_preco_mat_w	bigint;
nr_seq_tuss_mat_item_w	bigint;
cd_mat_tiss_reg_tab_w	varchar(20);
ds_mat_tiss_reg_tab_w	varchar(200);
ie_digitos_desp_w	varchar(10);
ie_tipo_despesa_w	varchar(2);
ie_codigo_tuss_w	varchar(1) := 'N';
cd_material_informado_w	material_autorizado.cd_material_informado%type;
ie_tipo_w 		rxt_tipo.ie_tipo%type;
cd_diagnostico_imagem_w	can_loco_regional.cd_diagnostico_imagem%type;
nr_seq_mat_autor_w	material_autorizado.nr_sequencia%type;
nm_usuario_w		material_autorizado.nm_usuario%type;
qt_redutor_sc_w 	paciente_setor.qt_redutor_sc%type;
ie_formula_sup_corporea_w paciente_setor.ie_formula_sup_corporea%type;

c01 CURSOR FOR
SELECT	a.cd_material,
	a.cd_material_convenio,
	substr(obter_desc_material(a.cd_material),1,150) ds_material,
	a.ds_mat_convenio,
	a.qt_solicitada,
	a.vl_unitario vl_solicitado,
	substr(TISS_OBTER_ORIGEM_PRECO_MAT(a.ie_origem_preco, a.cd_material, cd_estabelecimento_w, b.cd_convenio, cd_categoria_w, tiss_obter_tab_preco_mat_autor(a.nr_sequencia, a.nm_usuario, 'T'), b.dt_autorizacao,null,'X',null, null, a.cd_material_tuss),1,20) cd_edicao_amb,
	substr(TISS_OBTER_DADOS_MATERIAL(a.cd_material, cd_estabelecimento_w ,a.nr_seq_marca, a.nr_seq_tuss_mat_item, 'RA'),1,15) nr_registro_anvisa,
	substr(TISS_OBTER_DADOS_MATERIAL(a.cd_material, cd_estabelecimento_w ,a.nr_seq_marca, a.nr_seq_tuss_mat_item, 'RF'),1,30) cd_ref_fabricante,
	ie_via_aplicacao,
	a.cd_material_tuss,
	a.ds_material_tuss,
	(coalesce(a.QT_DOSE_QUIMIO,obter_dados_ciclo_autor(a.nr_sequencia_autor,a.cd_material,'DO',a.cd_material_informado)))::numeric  qt_dose,
	(coalesce(a.QT_DOSE_PRESCR_QUIMIO,obter_dados_ciclo_autor(a.nr_sequencia_autor,a.cd_material,'DP',a.cd_material_informado)))::numeric  qt_dose_prescr,
	a.cd_intervalo_medic_quimio,
	a.cd_cgc_fabricante,
	a.nr_seq_marca,
	a.cd_material_informado,
	a.nr_sequencia,
	a.nm_usuario
from	material_autorizado a,
	autorizacao_convenio b,
	tiss_anexo_guia c
where	c.nr_sequencia_autor	= b.nr_sequencia
and	b.nr_sequencia		= a.nr_sequencia_autor
and	b.nr_sequencia		= nr_sequencia_autor_p;


C02 CURSOR FOR
SELECT	coalesce(substr(tiss_obter_tabela(null,coalesce(b.cd_estabelecimento,cd_estabelecimento_w),b.cd_convenio,cd_categoria_w,clock_timestamp(),'C',p.ie_classificacao,a.cd_procedimento,a.ie_origem_proced,null,null,
		b.nr_atendimento, a.nr_seq_proc_interno, a.nr_seq_exame, a.cd_procedimento_tuss),1,10),a.cd_procedimento) cd_procedimento,
	a.cd_procedimento_convenio,
	coalesce(substr(tiss_obter_tabela(null,coalesce(b.cd_estabelecimento,cd_estabelecimento_w),b.cd_convenio,cd_categoria_w,clock_timestamp(),'D',p.ie_classificacao,a.cd_procedimento,a.ie_origem_proced,null,null,
		b.nr_atendimento, a.nr_seq_proc_interno, a.nr_seq_exame, a.cd_procedimento_tuss),1,150),substr(obter_descricao_procedimento(a.cd_procedimento,a.ie_origem_proced),1,150)) ds_procedimento,
	a.qt_solicitada,
	(a.VL_AUTORIZADO * a.qt_solicitada) vl_solicitado,
	a.cd_procedimento_tuss,
	substr(tiss_obter_tabela(null,coalesce(b.cd_estabelecimento,cd_estabelecimento_w),b.cd_convenio,cd_categoria_w,clock_timestamp(),'R',p.ie_classificacao,a.cd_procedimento,a.ie_origem_proced,null,null,
		b.nr_atendimento, a.nr_seq_proc_interno, a.nr_seq_exame, a.cd_procedimento_tuss),1,2) cd_edicao
from	procedimento_autorizado a,
	autorizacao_convenio b,
	tiss_anexo_guia c,
	procedimento p
where	c.nr_sequencia_autor		= b.nr_sequencia
and	p.cd_procedimento		= a.cd_procedimento
and	p.ie_origem_proced		= a.ie_origem_proced
and	b.nr_sequencia			= a.nr_sequencia_autor
and	b.nr_sequencia			= nr_sequencia_autor_p
and	b.ie_tiss_tipo_anexo_autor	= '3';

c02_w	c02%rowtype;


BEGIN

delete 	from tiss_anexo_guia
where	nr_sequencia_autor	= nr_sequencia_autor_p;

delete	from tiss_autor_anexo_diag
where	nr_sequencia_autor	= nr_sequencia_autor_p;

select	a.cd_pessoa_fisica,
	a.nr_atendimento,
	a.nr_seq_agenda,
	a.nr_seq_gestao,
	a.nr_seq_age_integ,
	a.nr_seq_paciente,
	a.nr_seq_paciente_setor,
	a.ds_tarja_cartao,
	a.cd_estabelecimento,
	a.cd_convenio,
	a.cd_autorizacao,
	a.dt_autorizacao,
	a.cd_senha,
	a.cd_medico_solicitante,
	a.nr_ciclo,
	a.ds_dia_ciclo,
	a.ie_tiss_tipo_anexo_autor,
	substr(a.ds_indicacao,1,999),
	substr(a.ds_observacao,1,499),
	a.dt_entrada_prevista,
	a.nr_seq_rxt_tratamento,
	a.dt_inicio_vigencia
into STRICT	cd_pessoa_fisica_w,
	nr_atendimento_w,
	nr_seq_agenda_w,
	nr_seq_gestao_w,
	nr_seq_age_integ_w,
	nr_seq_paciente_w,
	nr_seq_paciente_setor_w,
	ds_tarja_cartao_w,
	cd_estabelecimento_w,
	cd_convenio_w,
	cd_autorizacao_w,
	dt_autorizacao_w,
	cd_senha_w,
	cd_medico_solicitante_w,
	nr_ciclo_autal_w,
	ds_dia_ciclo_w,
	ie_tiss_tipo_anexo_w,
	ds_justificativa_w,
	ds_especific_mat_w,
	dt_entrada_prevista_w,
	nr_seq_rxt_tratamento_w,
	dt_inicio_vigencia_w
from	autorizacao_convenio a
where	a.nr_sequencia	= nr_sequencia_autor_p;

if (coalesce(cd_pessoa_fisica_w::text, '') = '') then
	select	obter_pessoa_autorizacao(nr_sequencia_autor_p)
	into STRICT	cd_pessoa_fisica_w
	;
end if;

if (coalesce(cd_estabelecimento_w::text, '') = '') then
	cd_estabelecimento_w	:= wheb_usuario_pck.get_cd_estabelecimento;
end if;

begin
select	coalesce(ie_fixar_vig_brasindice,'N')
into STRICT	ie_fixar_vig_brasindice_w
from	convenio_estabelecimento
where	cd_convenio		= cd_convenio_w
and	cd_estabelecimento	= cd_estabelecimento_w;
exception
when others then
	ie_fixar_vig_brasindice_w	:= 'N';
end;

if (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then

	if (ie_tiss_tipo_anexo_w = '1') then
		ie_tiss_tipo_guia_w	:= '9'; --Guia Anexo de Solicitacao de Orteses, Proteses e Materiais Especiais - OPME
	elsif (ie_tiss_tipo_anexo_w = '2') then
		ie_tiss_tipo_guia_w	:= '10'; --Guia Anexo de Solicitacao de Quimioterapia
	elsif (ie_tiss_tipo_anexo_w = '3') then
		ie_tiss_tipo_guia_w	:= '11'; --Guia Anexo de Solicitacao de Radioterapia
	end if;

	if (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') then
		select	max(b.cd_usuario_convenio),
			substr(max(coalesce(b.nr_doc_conv_principal,b.nr_doc_convenio)),1,255),
			substr(max(c.nm_pessoa_fisica),1,70),
			max(tiss_obter_se_atend_rn(a.nr_atendimento)),
			max(somente_numero(c.nr_cartao_nac_sus)),
			max(c.qt_peso),
			max(c.qt_altura_cm),
			max(obter_idade(c.dt_nascimento,clock_timestamp(),'A')),
			max(c.ie_sexo),
			max(b.cd_categoria),
			max(a.ie_tipo_atendimento),
			max(a.nr_seq_classificacao),
			max(a.ie_clinica),
			max(obter_setor_atendimento(a.nr_atendimento))
		into STRICT	cd_usuario_convenio_w,
			nr_guia_principal_w,
			nm_pessoa_fisica_w,
			ie_atendimento_rn_w,
			cd_cnes_w,
			qt_peso_w,
			qt_altura_cm_w,
			qt_idade_w,
			ie_sexo_w,
			cd_categoria_w,
			ie_tipo_atendimento_w,
			nr_seq_classif_atend_w,
			ie_clinica_w,
			cd_setor_entrada_w
		from	atendimento_paciente a,
			atend_categoria_convenio b,
			pessoa_fisica c
		where	a.nr_atendimento	= b.nr_atendimento
		and	b.nr_seq_interno	= obter_atecaco_atendimento(a.nr_atendimento)
		and	a.cd_pessoa_fisica	= c.cd_pessoa_fisica
		and	a.nr_atendimento	= nr_atendimento_w;
		
		if (nr_seq_rxt_tratamento_w IS NOT NULL AND nr_seq_rxt_tratamento_w::text <> '') then

			select	max(w.ie_nivel_ecog),
				substr(max(w.ds_diag_histologico),1,1000),
				substr(max(w.ds_proposta_terapeutica),1,1000),
				max(w.cd_estadiamento),
				max(coalesce(w.dt_diag_histopatologico,w.dt_avaliacao)),
				max(w.cd_doenca_cid),
				substr(max(w.ds_observacao),1,999),
				max(b.dt_inicio_trat),
				max(a.ie_finalidade),
				max(w.cd_diagnostico_imagem)
			into STRICT	ie_nivel_ecog_w,
				ds_diag_histopatologico_w,
				ds_plano_terapeutico_w,
				cd_estadiamento_w,
				dt_radio_diagnostico_w,
				cd_cid_radio_w,
				ds_info_relevantes_radio_w,
				dt_inicio_trat_radio_w,
				ie_finalidade_w,
				cd_diagnostico_imagem_w
			FROM pessoa_fisica c, rxt_tratamento b, rxt_tumor a
LEFT OUTER JOIN can_loco_regional w ON (a.nr_seq_loco_regional = w.nr_sequencia)
, autorizacao_convenio x
LEFT OUTER JOIN autorizacao_convenio_tiss z ON (x.nr_sequencia = z.nr_sequencia_autor)
WHERE a.cd_pessoa_fisica	= c.cd_pessoa_fisica and b.nr_seq_tumor		= a.nr_sequencia  and x.nr_seq_rxt_tratamento = b.nr_sequencia and b.nr_sequencia		= nr_seq_rxt_tratamento_w;
		
		end if;

	elsif (nr_seq_agenda_w IS NOT NULL AND nr_seq_agenda_w::text <> '') then
		select	max(a.cd_usuario_convenio),
			substr(max(a.nr_doc_convenio),1,255),
			substr(max(c.nm_pessoa_fisica),1,70),
			'N',
			max(somente_numero(c.nr_cartao_nac_sus)),
			max(coalesce(a.qt_peso,c.qt_peso)),
			max(coalesce(a.qt_altura_cm,c.qt_altura_cm)),
			max(obter_idade(c.dt_nascimento,clock_timestamp(),'A')),
			max(c.ie_sexo),
			max(a.cd_categoria),
			max(a.ie_tipo_atendimento),
			max(a.ie_clinica)
		into STRICT	cd_usuario_convenio_w,
			nr_guia_principal_w,
			nm_pessoa_fisica_w,
			ie_atendimento_rn_w,
			cd_cnes_w,
			qt_peso_w,
			qt_altura_cm_w,
			qt_idade_w,
			ie_sexo_w,
			cd_categoria_w,
			ie_tipo_atendimento_w,
			ie_clinica_w
		from	agenda_paciente a,
			pessoa_fisica c
		where	a.cd_pessoa_fisica	= c.cd_pessoa_fisica
		and	a.nr_sequencia		= nr_seq_agenda_w;

	elsif (nr_seq_gestao_w IS NOT NULL AND nr_seq_gestao_w::text <> '') then
		select	max(a.ds_cod_usuario),
			substr(max(a.nr_doc_convenio),1,255),
			substr(max(c.nm_pessoa_fisica),1,70),
			'N',
			max(somente_numero(c.nr_cartao_nac_sus)),
			max(c.qt_peso),
			max(c.qt_altura_cm),
			max(obter_idade(c.dt_nascimento,clock_timestamp(),'A')),
			max(c.ie_sexo),
			max(a.cd_categoria),
			max(a.ie_clinica)
		into STRICT	cd_usuario_convenio_w,
			nr_guia_principal_w,
			nm_pessoa_fisica_w,
			ie_atendimento_rn_w,
			cd_cnes_w,
			qt_peso_w,
			qt_altura_cm_w,
			qt_idade_w,
			ie_sexo_w,
			cd_categoria_w,
			ie_clinica_w
		from	gestao_vaga a,
			pessoa_fisica c
		where	a.cd_pessoa_fisica	= c.cd_pessoa_fisica
		and	a.nr_sequencia		= nr_seq_agenda_w;

	elsif (nr_seq_age_integ_w IS NOT NULL AND nr_seq_age_integ_w::text <> '') then
		select	max(a.cd_usuario_convenio),
			substr(max(a.nr_doc_convenio),1,255),
			substr(max(c.nm_pessoa_fisica),1,70),
			'N',
			max(somente_numero(c.nr_cartao_nac_sus)),
			max(coalesce(a.qt_peso,c.qt_peso)),
			max(coalesce(a.qt_altura_cm,c.qt_altura_cm)),
			max(obter_idade(c.dt_nascimento,clock_timestamp(),'A')),
			max(c.ie_sexo),
			max(a.cd_categoria),
			max(a.ie_tipo_atendimento)
		into STRICT	cd_usuario_convenio_w,
			nr_guia_principal_w,
			nm_pessoa_fisica_w,
			ie_atendimento_rn_w,
			cd_cnes_w,
			qt_peso_w,
			qt_altura_cm_w,
			qt_idade_w,
			ie_sexo_w,
			cd_categoria_w,
			ie_tipo_atendimento_w
		from	agenda_integrada a,
			pessoa_fisica c
		where	a.cd_pessoa_fisica	= c.cd_pessoa_fisica
		and	a.nr_sequencia		= nr_seq_age_integ_w;

	elsif (nr_seq_rxt_tratamento_w IS NOT NULL AND nr_seq_rxt_tratamento_w::text <> '') then

		select	max(z.cd_usuario_convenio), --null,
			max(x.cd_autorizacao),
			substr(max(c.nm_pessoa_fisica),1,70),
			'N',
			max(somente_numero(c.nr_cartao_nac_sus)),
			max(c.qt_peso),
			max(c.qt_altura_cm),
			max(obter_idade(c.dt_nascimento,clock_timestamp(),'A')),
			max(c.ie_sexo),
			max(z.CD_CATEGORIA), --null
			max(w.ie_nivel_ecog),
			substr(max(w.ds_diag_histologico),1,1000),
			substr(max(w.ds_proposta_terapeutica),1,1000),
			max(w.cd_estadiamento),
			max(coalesce(w.dt_diag_histopatologico,w.dt_avaliacao)),
			max(w.cd_doenca_cid),
			substr(max(w.ds_observacao),1,999),
			max(b.dt_inicio_trat),
			max(a.ie_finalidade),
			max(w.cd_diagnostico_imagem)
		into STRICT	cd_usuario_convenio_w,
			nr_guia_principal_w,
			nm_pessoa_fisica_w,
			ie_atendimento_rn_w,
			cd_cnes_w,
			qt_peso_w,
			qt_altura_cm_w,
			qt_idade_w,
			ie_sexo_w,
			cd_categoria_w,
			ie_nivel_ecog_w,
			ds_diag_histopatologico_w,
			ds_plano_terapeutico_w,
			cd_estadiamento_w,
			dt_radio_diagnostico_w,
			cd_cid_radio_w,
			ds_info_relevantes_radio_w,
			dt_inicio_trat_radio_w,
			ie_finalidade_w,
			cd_diagnostico_imagem_w
		FROM pessoa_fisica c, rxt_tratamento b, rxt_tumor a
LEFT OUTER JOIN can_loco_regional w ON (a.nr_seq_loco_regional = w.nr_sequencia)
, autorizacao_convenio x
LEFT OUTER JOIN autorizacao_convenio_tiss z ON (x.nr_sequencia = z.nr_sequencia_autor)
WHERE a.cd_pessoa_fisica	= c.cd_pessoa_fisica and b.nr_seq_tumor		= a.nr_sequencia  and x.nr_seq_rxt_tratamento = b.nr_sequencia and b.nr_sequencia		= nr_seq_rxt_tratamento_w;

	else
		select	max(z.cd_usuario_convenio), --null,
			max(z.CD_CATEGORIA) --null
		into STRICT	cd_usuario_convenio_w,
			cd_categoria_w
		FROM autorizacao_convenio x
LEFT OUTER JOIN autorizacao_convenio_tiss z ON (x.nr_sequencia = z.nr_sequencia_autor)
WHERE x.nr_sequencia		= nr_sequencia_autor_p;
	end if;

	if (nr_seq_paciente_setor_w IS NOT NULL AND nr_seq_paciente_setor_w::text <> '') then --Se tem tratamento oncologico tem prioridade para obter as informacoes de peso, altura e superficie corporia do paciente.
		if (nr_seq_paciente_w IS NOT NULL AND nr_seq_paciente_w::text <> '') then -- Dia/Sessao
			select	max(a.cd_usuario_convenio),
				substr(max(a.nr_doc_convenio),1,255),
				substr(max(c.nm_pessoa_fisica),1,70),
				'N',
				max(somente_numero(c.nr_cartao_nac_sus)),
				max(coalesce(d.qt_peso, coalesce(b.qt_peso,c.qt_peso))),
				max(coalesce(b.qt_altura,c.qt_altura_cm)),
				max(obter_idade(c.dt_nascimento,clock_timestamp(),'A')),
				max(c.ie_sexo),
				max(qt_dias_intervalo),
				max(nr_ciclos),
				max(a.cd_categoria),
				max(a.ie_tipo_atendimento),
				max(b.qt_redutor_sc),
                		max(b.ie_formula_sup_corporea)
				into STRICT	cd_usuario_convenio_w,
				nr_guia_principal_w,
				nm_pessoa_fisica_w,
				ie_atendimento_rn_w,
				cd_cnes_w,
				qt_peso_w,
				qt_altura_cm_w,
				qt_idade_w,
				ie_sexo_w,
				nr_intervalo_ciclo_w,
				nr_ciclos_w,
				cd_categoria_w,
				ie_tipo_atendimento_w,
				qt_redutor_sc_w,
                		ie_formula_sup_corporea_w
			FROM paciente_atendimento d, pessoa_fisica c, paciente_setor b
LEFT OUTER JOIN paciente_setor_convenio a ON (b.nr_seq_paciente = a.nr_seq_paciente)
WHERE b.cd_pessoa_fisica	= c.cd_pessoa_fisica and b.nr_seq_paciente	= nr_seq_paciente_setor_w and b.nr_seq_paciente	= d.nr_seq_paciente and d.nr_seq_atendimento 	= nr_seq_paciente_w;
			
			qt_superficie_corporal_w := round(obter_superficie_corp_red_ped(qt_peso_w, qt_altura_cm_w, qt_redutor_sc_w, cd_pessoa_fisica_w, nm_usuario_p, ie_formula_sup_corporea_w),obter_numero_casas_sc);
		else -- Ciclo Protocolo
			select	max(a.cd_usuario_convenio),
				substr(max(a.nr_doc_convenio),1,255),
				substr(max(c.nm_pessoa_fisica),1,70),
				'N',
				max(somente_numero(c.nr_cartao_nac_sus)),
				max(coalesce(d.qt_peso, coalesce(b.qt_peso,c.qt_peso))),
				max(coalesce(b.qt_altura,c.qt_altura_cm)),
				max(obter_idade(c.dt_nascimento,clock_timestamp(),'A')),
				max(c.ie_sexo),
				max(qt_dias_intervalo),
				max(nr_ciclos),
				max(a.cd_categoria),
				max(a.ie_tipo_atendimento),
				max(b.qt_redutor_sc),
                		max(b.ie_formula_sup_corporea)
			into STRICT	cd_usuario_convenio_w,
				nr_guia_principal_w,
				nm_pessoa_fisica_w,
				ie_atendimento_rn_w,
				cd_cnes_w,
				qt_peso_w,
				qt_altura_cm_w,
				qt_idade_w,
				ie_sexo_w,
				nr_intervalo_ciclo_w,
				nr_ciclos_w,
				cd_categoria_w,
				ie_tipo_atendimento_w,
				qt_redutor_sc_w,
                		ie_formula_sup_corporea_w
			FROM paciente_atendimento d, pessoa_fisica c, paciente_setor b
LEFT OUTER JOIN paciente_setor_convenio a ON (b.nr_seq_paciente = a.nr_seq_paciente)
WHERE b.cd_pessoa_fisica	= c.cd_pessoa_fisica and b.nr_seq_paciente	= nr_seq_paciente_setor_w and d.nr_seq_paciente	= b.nr_seq_paciente and d.nr_ciclo 		= nr_ciclo_autal_w and d.ds_dia_ciclo		= coalesce(ds_dia_ciclo_w, d.ds_dia_ciclo);
	
			 qt_superficie_corporal_w := round(obter_superficie_corp_red_ped(qt_peso_w, qt_altura_cm_w, qt_redutor_sc_w, cd_pessoa_fisica_w, nm_usuario_p, ie_formula_sup_corporea_w), obter_numero_casas_sc);
		end if;

		nr_ciclos_w	:= coalesce(nr_ciclos_w,'1');
		if (coalesce(nr_intervalo_ciclo_w::text, '') = '') then
			select	count(*)
			into STRICT	nr_intervalo_ciclo_w
			from	paciente_atendimento
			where	nr_seq_paciente	= nr_seq_paciente_setor_w
			and	nr_ciclo	= nr_ciclo_autal_w;
		else
			-- SO 1746165
			qt_dias_intervalo := OBTER_DIAS_INTERV_PROTOC(nr_seq_paciente_setor_w, nr_ciclo_autal_w);
			if (qt_dias_intervalo > 0) then
				nr_intervalo_ciclo_w := qt_dias_intervalo;
			end if;
		end if;
	end if;

	if (coalesce(nm_pessoa_fisica_w::text, '') = '') then
		select	substr(max(c.nm_pessoa_fisica),1,70),
			'N',
			max(somente_numero(c.nr_cartao_nac_sus)),
			max(c.qt_peso),
			max(c.qt_altura_cm),
			max(obter_idade(c.dt_nascimento,clock_timestamp(),'A')),
			max(c.ie_sexo)
		into STRICT	nm_pessoa_fisica_w,
			ie_atendimento_rn_w,
			cd_cnes_w,
			qt_peso_w,
			qt_altura_cm_w,
			qt_idade_w,
			ie_sexo_w
		from	pessoa_fisica c
		where	c.cd_pessoa_fisica	= cd_pessoa_fisica_w;
	end if;

	select	coalesce(max(ie_mascara_cid), 'N'),
		coalesce(max(ie_qt_dose_solic_quimio),'S'),
		coalesce(max(ie_dose_quimio), '1'),
		coalesce(max(ie_cod_tiss_brasindice),'N'),
		coalesce(max(ie_cod_tiss_simpro),'N'),
		coalesce(max(ie_digitos_desp), 'N')
	into STRICT	ie_mascara_cid_w,
		ie_qt_dose_solic_quimio_w,
		ie_dose_quimio_w,
		ie_cod_tiss_brasindice_w,
		ie_cod_tiss_simpro_w,
		ie_digitos_desp_w
	from	tiss_parametros_convenio
	where	cd_estabelecimento	= cd_estabelecimento_w
	and	cd_convenio		= cd_convenio_w;
	

	if (ie_sexo_w = 'F') then
		ie_sexo_w	:= '3';
	elsif (ie_sexo_w = 'M') then
		ie_sexo_w	:= '1';
	end if;

	select	substr(max(OBTER_NOME_PF_PJ(cd_medico_solicitante_w,null)),1,70)
	into STRICT	nm_contratado_w
	;

	select	substr(max(nr_ddd_telefone||nr_telefone),1,11),
		substr(max(ds_email),1,60)
	into STRICT	nr_telefone_contrat_w,
		ds_email_contrat_w
	from	compl_pessoa_fisica
	where	cd_pessoa_fisica	= cd_medico_solicitante_w
	and	ie_tipo_complemento	= 2; --Comercial
	if (nr_seq_rxt_tratamento_w IS NOT NULL AND nr_seq_rxt_tratamento_w::text <> '') and (ie_tiss_tipo_anexo_w = '3') then
		
		select 	c.ie_tipo
		into STRICT 	ie_tipo_w
		from 	rxt_tumor a,
			rxt_tratamento b,
			rxt_tipo c
		where 	b.nr_sequencia		= nr_seq_rxt_tratamento_w
		and   	b.nr_seq_tumor		= a.nr_sequencia
		and   	a.nr_seq_tipo     	= c.nr_sequencia;
			
		if (ie_tipo_w = 'R') then
			select 	count(*)qt,
				sum(x.qt_dose_campo)
			into STRICT	nr_campos_w,
				qt_dose_campo_w
			from	rxt_campo_trat_roentgen x
			where	x.nr_seq_tratamento = nr_seq_rxt_tratamento_w;
		elsif 	((ie_tipo_w = 'T') or (ie_tipo_w = 'E')) then
			select 	count(*)qt,
				sum(a.qt_dose_diaria)
			into STRICT	nr_campos_w,
				qt_dose_campo_w
			from 	rxt_campo a,
				rxt_fase_tratamento b,
				rxt_tratamento c
			where a.nr_seq_fase = b.nr_sequencia
			and b.nr_seq_tratamento = c.nr_sequencia
			and c.nr_sequencia  = nr_seq_rxt_tratamento_w;
		end if;

		select	coalesce(max(QT_DOSE_TOTAL),0),
			coalesce(max(QT_DURACAO_TRAT),0)
		into STRICT	qt_dose_total_w,
			qt_duracao_trat_w
		from	rxt_tratamento
		where	nr_sequencia = nr_seq_rxt_tratamento_w;

	end if;

	nr_guia_ref_w	:= coalesce(TISS_OBTER_GUIA_REF_ANEXO(cd_estabelecimento_w,cd_convenio_w,nr_sequencia_autor_p),cd_autorizacao_w);
	
	select	nextval('tiss_anexo_guia_seq')
	into STRICT	nr_seq_guia_w
	;

	insert	into tiss_anexo_guia(nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_seq_lote_anexo,
		nr_sequencia_autor,
		nr_guia_anexo,
		nr_guia_principal,
		nr_guia_operadora,
		dt_solicitacao,
		cd_senha,
		dt_autorizacao,
		cd_usuario_convenio,
		ie_atendimento_rn,
		nm_pessoa_fisica,
		cd_cnes,
		ds_biometria,
		nm_contratado,
		nr_telefone_contrat,
		ds_email_contrat,
		ds_justificativa,
		ds_especific_mat,
		qt_peso,
		qt_altura,
		qt_superficie_corporal,
		qt_idade,
		ie_sexo,
		nr_ciclos,
		nr_ciclo_autal,
		nr_intervalo_ciclo,
		ie_tiss_tipo_anexo,
		ds_observacao,
		qt_duracao_trat,
		qt_dose_total,
		qt_dose_campo,
		nr_campos,
		nr_dia_ciclo_atual)
	values (nr_seq_guia_w,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		null, --nr_seq_lote_anexo
		nr_sequencia_autor_p,
		nr_seq_guia_w,
		nr_guia_ref_w, --nr_guia_principal A guia referenciada pelo anexo, deve ser o mesmo numeroGuiaPrestador da guia vinculada a este anexo. Ou seja, a sequencia da autorizacao.
		null, --nr_guia_operadora
		coalesce(dt_inicio_trat_radio_w,dt_autorizacao_w),
		cd_senha_w,
		null, --dt_autorizacao
		substr(cd_usuario_convenio_w,1,20),
		coalesce(ie_atendimento_rn_w,'N'),
		nm_pessoa_fisica_w,
		substr(cd_cnes_w,1,15),
		ds_tarja_cartao_w,
		nm_contratado_w,
		substr(tiss_obter_regra_campo(ie_tiss_tipo_guia_w, 'NR_TELEFONE', cd_convenio_w, nr_telefone_contrat_w, ie_tipo_atendimento_w, cd_categoria_w,'N', 0, cd_estabelecimento_w, ie_clinica_w, nr_seq_classif_atend_w, cd_setor_entrada_w, null),1,11),
		ds_email_contrat_w,
		ds_justificativa_w,
		ds_especific_mat_w,
		qt_peso_w,
		qt_altura_cm_w,
		qt_superficie_corporal_w,
		qt_idade_w,
		ie_sexo_w,
		nr_ciclos_w,
		nr_ciclo_autal_w,
		nr_intervalo_ciclo_w,
		ie_tiss_tipo_anexo_w,
		ds_especific_mat_w,
		qt_duracao_trat_w,
		qt_dose_total_w,
		qt_dose_campo_w,
		nr_campos_w,
		Somente_Numero(ds_dia_ciclo_w));

	/*INICIO - Gerar os itens das guias*/

	open C01;
	loop
	fetch C01 into
		cd_material_w,
		cd_material_convenio_w,
		ds_material_w,
		ds_mat_convenio_w,
		qt_solicitada_w,
		vl_solicitado_w,
		cd_edicao_amb_w,
		nr_registro_anvisa_w,
		cd_ref_fabricante_w,
		ie_via_aplicacao_w,
		cd_material_tuss_w,
		ds_material_tuss_w,
		qt_dose_w,
		qt_dose_prescr_w,
		cd_intervalo_w,
		cd_cgc_fabricante_w,
		nr_seq_marca_w,
		cd_material_informado_w,
		nr_seq_mat_autor_w,
		nm_usuario_w;

	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		
		cd_item_w 		:= null;
		cd_material_tuss_bras_w 	:= null;
		cd_material_tuss_simpro_w	:= null;
		
		--Obter origem preco
		SELECT * FROM define_preco_material(	cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, dt_autorizacao_w, cd_material_w, null, coalesce(ie_tipo_atendimento_w,0), NULL, cd_cgc_fabricante_w, null, null, null, null, null, nr_seq_marca_w, null, null, null, null, vl_material_w, dt_ult_vigencia_w, cd_tab_preco_mat_w, ie_origem_preco_w, nr_seq_bras_preco_w, nr_seq_mat_bras_w, nr_seq_conv_bras_w, nr_seq_conv_simpro_w, nr_seq_mat_simpro_w, nr_seq_simpro_preco_w, nr_seq_ajuste_mat_w) INTO STRICT vl_material_w, dt_ult_vigencia_w, cd_tab_preco_mat_w, ie_origem_preco_w, nr_seq_bras_preco_w, nr_seq_mat_bras_w, nr_seq_conv_bras_w, nr_seq_conv_simpro_w, nr_seq_mat_simpro_w, nr_seq_simpro_preco_w, nr_seq_ajuste_mat_w;
					
		if (ie_qt_dose_solic_quimio_w = 'S') then
			qt_dose_dia_w	:= qt_solicitada_w;
		elsif (ie_qt_dose_solic_quimio_w = 'D') then
			qt_dose_dia_w	:= coalesce(qt_dose_w,qt_solicitada_w);
		elsif (ie_qt_dose_solic_quimio_w = 'R') then
			qt_dose_dia_w	:= coalesce(TISS_OBTER_FREQ_MEDIC(cd_estabelecimento_w, cd_convenio_w, cd_intervalo_w),qt_solicitada_w);
		elsif (ie_qt_dose_solic_quimio_w = 'C') then
			qt_dose_dia_w	:=  Obter_frequencia_dose_ciclo(nr_seq_paciente_setor_w,nr_ciclo_autal_w,cd_material_w, cd_material_informado_w, cd_intervalo_w);
		end if;

		if (ie_dose_quimio_w = '2') then --Dose prescr
			qt_solicitada_w	:= coalesce(qt_dose_prescr_w,qt_solicitada_w);
		elsif (ie_dose_quimio_w = '3') then --Dose
			qt_solicitada_w	:= coalesce(qt_dose_w,qt_solicitada_w);
		end if;

		TISS_OBTER_REGRA_TABELA_MAT(ie_origem_preco_w,
				cd_material_w,
				cd_estabelecimento_w,
				cd_convenio_w,
				cd_categoria_w,
				tiss_obter_tab_preco_mat_autor(nr_seq_mat_autor_w, nm_usuario_w, 'T'),--cd_tab_preco_material_p
				clock_timestamp(),
				null,--cd_setor_atendimento_p
				cd_material_tuss_w,
				null, --vl_unitario_mat_p
				nr_seq_tiss_tabela_w,
				ie_desc_material_w,
				ie_codigo_material_w,
				ie_conversao_externa_w,
				cd_mat_tiss_reg_tab_w,
				ds_mat_tiss_reg_tab_w);
								

		cd_material_tiss_w			:= null;
		ds_material_tiss_w			:= null;

		select	substr(TISS_ELIMINAR_CARACTERE(e.ds_material),1,60)
		into STRICT	ds_material_original_w
		from	material e
		where	e.cd_material = cd_material_w;

		begin
		select 	substr(obter_dados_material_estab(a.cd_material,cd_estabelecimento_w,'UMS'),1,30)
		into STRICT	cd_unidade_medida_consumo_w
		from	estrutura_material_v b,
			material a
		where 	a.cd_material		= b.cd_material
		and	a.cd_material		= cd_material_w  LIMIT 1;
		exception
		when others then
			cd_unidade_medida_consumo_w	:= null;
		end;
		
		if (ie_origem_preco_w not in (1,4)) then
			ie_origem_preco_mat_w	:= 2;			/*2- Tabela de preco*/
			
		else
			ie_origem_preco_mat_w	:= ie_origem_preco_w; 	/*1- Brasindice, 4-Simpro*/
		end if;
		
		
		
		if (ie_origem_preco_mat_w = 1) then --Brasindice
			cd_material_brasindice_w	:= obter_codigo_brasindice(cd_estabelecimento_w, cd_material_w, clock_timestamp(),cd_convenio_w);
            cd_laboratorio_w			:= obter_valor_separador(cd_material_brasindice_w,1,';');
            cd_medicamento_w			:= obter_valor_separador(cd_material_brasindice_w,2,';');
            cd_apresentacao_w			:= obter_valor_separador(cd_material_brasindice_w,3,';');
			
			if (nr_seq_bras_preco_w > 0) then				
				select 	coalesce(max(cd_medicamento),cd_medicamento_w),
					coalesce(max(cd_laboratorio), cd_laboratorio_w),
					coalesce(max(cd_apresentacao), cd_apresentacao_w)
				into STRICT	cd_medicamento_w,
					cd_laboratorio_w,
					cd_apresentacao_w
				from 	brasindice_preco
				where 	nr_sequencia = nr_seq_bras_preco_w;
				
			end if;
			
			if (ie_fixar_vig_brasindice_w = 'S') then
				cd_material_tuss_bras_w	:= somente_numero(tiss_obter_cod_tuss_bras_vigen(cd_apresentacao_w, cd_laboratorio_w, cd_medicamento_w,clock_timestamp()));
			else
				cd_material_tuss_bras_w	:= somente_numero(tiss_obter_cod_tuss_bras_vigen(cd_apresentacao_w, cd_laboratorio_w, cd_medicamento_w,null));
			end if;
			
			if (coalesce(cd_material_tuss_bras_w,0) > 0) then
				cd_material_tuss_w	:= cd_material_tuss_bras_w;
			end if;			
			
			begin
				select	substr(a.ds_material,1,255)
				into STRICT	ds_material_tuss_w
				from	tuss_material_item a,
					tuss_material b
				where	a.nr_seq_carga_tuss	= b.nr_sequencia
				and	(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '')
				and	a.cd_material_tuss	= cd_material_tuss_w  LIMIT 1;
			exception
			when others then
				ds_material_tuss_w		:= null;
			end;
			
		elsif (ie_origem_preco_mat_w = 4) then --Simpro
			
			cd_material_tuss_simpro_w	:= tiss_obter_tuss_simpro(cd_material_w, cd_estabelecimento_w, cd_convenio_w, clock_timestamp());
			if (coalesce(cd_material_tuss_simpro_w,0) > 0) then
				cd_material_tuss_w		:= cd_material_tuss_simpro_w;
			end if;			
			
			begin
				select	substr(a.ds_material,1,255)
				into STRICT	ds_material_tuss_w
				from	tuss_material_item a,
					tuss_material b
				where	a.nr_seq_carga_tuss	= b.nr_sequencia
				and	(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '')
				and	a.cd_material_tuss	= cd_material_tuss_w  LIMIT 1;
			exception
			when others then
				ds_material_tuss_w		:= null;
			end;
		end if;	

		if (coalesce(ie_conversao_externa_w, 'S') = 'S') then
			if	((cd_material_convenio_w IS NOT NULL AND cd_material_convenio_w::text <> '') and (cd_material_convenio_w <> to_char(cd_material_w))) then
				cd_material_tiss_w		:=  cd_material_convenio_w;
			end if;
			if	((ds_mat_convenio_w IS NOT NULL AND ds_mat_convenio_w::text <> '') and (ds_mat_convenio_w <> to_char(ds_material_w))) then
				ds_material_tiss_w		:= ds_mat_convenio_w;
			end if;
		elsif (coalesce(ie_conversao_externa_w, 'N') = 'N') then
			if (ds_mat_tiss_reg_tab_w IS NOT NULL AND ds_mat_tiss_reg_tab_w::text <> '')  then
				ds_material_tiss_w		:= ds_mat_tiss_reg_tab_w;
			else
				ds_material_tiss_w		:= null;
			end if;
			if (cd_mat_tiss_reg_tab_w IS NOT NULL AND cd_mat_tiss_reg_tab_w::text <> '')  then
				cd_material_tiss_w		:= cd_mat_tiss_reg_tab_w;
			else
				cd_material_tiss_w		:= null;
			end if;
		elsif (coalesce(ie_conversao_externa_w, 'N') = 'C') then --lhalves OS240565 em 02/09/2010
			if	((cd_material_convenio_w IS NOT NULL AND cd_material_convenio_w::text <> '') and (cd_material_convenio_w <> to_char(cd_material_w))) then
				cd_material_tiss_w		:= cd_material_convenio_w;
			end if;
		end if;
	
		if (coalesce(cd_material_tiss_w,'0') = '0') then

			if (coalesce(ie_codigo_material_w, 'O') = 'O') then	-- se nao tiver regra deve pegar o codigo da origem do valor
				if (ie_origem_preco_w = 1) then

					cd_material_brasindice_w		:= obter_codigo_brasindice(cd_estabelecimento_w, cd_material_w, clock_timestamp(),cd_convenio_w);
					cd_laboratorio_w			:= obter_valor_separador(cd_material_brasindice_w,1,';');
                    cd_medicamento_w			:= obter_valor_separador(cd_material_brasindice_w,2,';');
                    cd_apresentacao_w			:= obter_valor_separador(cd_material_brasindice_w,3,';');

					if (ie_cod_tiss_brasindice_w = 'N') then
						if (ie_fixar_vig_brasindice_w = 'S') then
							cd_material_tiss_w		:= tiss_obter_cod_bras_vigen(cd_apresentacao_w, cd_laboratorio_w, cd_medicamento_w,clock_timestamp());
						else
							cd_material_tiss_w		:= tiss_obter_cod_brasindice(cd_apresentacao_w, cd_laboratorio_w, cd_medicamento_w);
						end if;
					elsif (ie_cod_tiss_brasindice_w = 'B') then
						cd_material_tiss_w		:= replace(obter_codigo_brasindice(cd_estabelecimento_w, cd_material_w, clock_timestamp(),cd_convenio_w), ';','');
					end if;
					if (coalesce(cd_material_tiss_w,'0') = '0') then
						cd_material_tiss_w		:= replace(cd_medicamento_w,';','');
					end if;
				elsif (ie_origem_preco_w = 4) then
					if (ie_cod_tiss_simpro_w = 'N') then
						select	max(TISS_OBTER_CODIGO_SIMPRO(cd_material_w, cd_estabelecimento_w, cd_convenio_w, clock_timestamp()))
						into STRICT	cd_material_tiss_w
						;
						
					elsif (ie_cod_tiss_simpro_w = 'B') then

						select	max(Obter_Codigo_Simpro2(cd_material_w,cd_convenio_w,cd_estabelecimento_w,clock_timestamp(), null, null))
						into STRICT	cd_material_tiss_w
						;
					end if;
					if (coalesce(cd_material_tiss_w,'0') = '0') then
						cd_material_tiss_w := cd_material_tuss_w;
						ds_material_tiss_w := ds_material_tuss_w;
					end if;
							
				end if;
			elsif (ie_codigo_material_w = 'T') then

				select	max(CD_TABELA_XML)
				into STRICT	CD_TABELA_XML_w
				from	tiss_tipo_tabela
				where	nr_sequencia	= nr_seq_tiss_tabela_w;
				
				if (CD_TABELA_XML_w = '05') then
					cd_material_brasindice_w		:= obter_codigo_brasindice(cd_estabelecimento_w, cd_material_w, clock_timestamp(),cd_convenio_w);
					cd_laboratorio_w			:= obter_valor_separador(cd_material_brasindice_w,1,';');
                    cd_medicamento_w			:= obter_valor_separador(cd_material_brasindice_w,2,';');
                    cd_apresentacao_w			:= obter_valor_separador(cd_material_brasindice_w,3,';');

					if (ie_cod_tiss_brasindice_w = 'N') then
						if (ie_fixar_vig_brasindice_w = 'S') then
							cd_material_tiss_w		:= tiss_obter_cod_bras_vigen(cd_apresentacao_w, cd_laboratorio_w, cd_medicamento_w,clock_timestamp());
						else
							cd_material_tiss_w		:= tiss_obter_cod_brasindice(cd_apresentacao_w, cd_laboratorio_w, cd_medicamento_w);
						end if;
					elsif (ie_cod_tiss_brasindice_w = 'B') then
						cd_material_tiss_w		:= replace(obter_codigo_brasindice(cd_estabelecimento_w, cd_material_w, clock_timestamp(),cd_convenio_w),';','');
					end if;

					if (coalesce(cd_material_tiss_w, '0') = '0') then
						cd_material_tiss_w		:= replace(cd_medicamento_w, ';','');
					end if;
				elsif (CD_TABELA_XML_w = '12') then
					if (ie_cod_tiss_simpro_w = 'N') then
						select	max(TISS_OBTER_CODIGO_SIMPRO(cd_material_w, cd_estabelecimento_w, cd_convenio_w, clock_timestamp()))
						into STRICT	cd_material_tiss_w
						;
					elsif (ie_cod_tiss_simpro_w = 'B') then

						select	max(Obter_Codigo_Simpro2(cd_material_w,cd_convenio_w,cd_estabelecimento_w,clock_timestamp(), null, null))
						into STRICT	cd_material_tiss_w
						;
					end if;
					if (coalesce(cd_material_tiss_w,'0') = '0') then
						cd_material_tiss_w		:= replace(cd_material_w,';','');
					end if;
				end if;

			elsif (ie_codigo_material_w = 'E') then /*lhalves OS214336 em 10/05/2010 - Gerar codigo EAN no brasindice(apenas 10 primeiros digitos)*/
				select	max(CD_TABELA_XML)
				into STRICT	CD_TABELA_XML_w
				from	tiss_tipo_tabela
				where	nr_sequencia	= nr_seq_tiss_tabela_w;

				if (CD_TABELA_XML_w = '05') then
					cd_material_brasindice_w		:= obter_codigo_brasindice(cd_estabelecimento_w, cd_material_w, clock_timestamp(),cd_convenio_w);
					cd_laboratorio_w			:= obter_valor_separador(cd_material_brasindice_w,1,';');
                    cd_medicamento_w			:= obter_valor_separador(cd_material_brasindice_w,2,';');
                    cd_apresentacao_w			:= obter_valor_separador(cd_material_brasindice_w,3,';');

					if (ie_cod_tiss_brasindice_w = 'N') then
						cd_material_tiss_w		:= substr(obter_ean_brasindice(cd_apresentacao_w, cd_laboratorio_w, cd_medicamento_w),1,10);
					elsif (ie_cod_tiss_brasindice_w = 'B') then
						cd_material_tiss_w		:= replace(obter_codigo_brasindice(cd_estabelecimento_w, cd_material_w, clock_timestamp(),cd_convenio_w),';','');
					end if;

					if (coalesce(cd_material_tiss_w, '0') = '0') then
						cd_material_tiss_w		:= replace(cd_medicamento_w, ';','');
					end if;
				elsif (CD_TABELA_XML_w = '12') then
					if (ie_cod_tiss_simpro_w = 'N') then
						select	max(TISS_OBTER_CODIGO_SIMPRO(cd_material_w, cd_estabelecimento_w, cd_convenio_w, clock_timestamp()))
						into STRICT	cd_material_tiss_w
						;
					elsif (ie_cod_tiss_simpro_w = 'B') then

						select	max(Obter_Codigo_Simpro2(cd_material_w,cd_convenio_w,cd_estabelecimento_w,clock_timestamp(), null, null))
						into STRICT	cd_material_tiss_w
						;
					end if;
					if (coalesce(cd_material_tiss_w,'0') = '0') then
						cd_material_tiss_w		:= replace(cd_material_w,';','');
					end if;
				end if;

			elsif (ie_codigo_material_w = 'A') then /*Registro Anvisa*/
				select	substr(max(obter_reg_anvisa_mat(cd_estabelecimento_w,cd_material_w,null,'RA')),1,60)
				into STRICT	nr_registro_anvisa_w
				;

				if (nr_registro_anvisa_w <> '') then
					cd_material_tiss_w	:= substr(nr_registro_anvisa_w,1,60);
				end if;

			elsif (ie_codigo_material_w = 'U') then /*Codigo TUSS do material na tabela origem do preco*/
				if (ie_origem_preco_w = 1) then --Brasindice
					cd_material_tiss_w	:= cd_material_tuss_bras_w;

					if (coalesce(cd_material_tiss_w, '0') = '0') then
						cd_material_tiss_w		:= cd_material_tuss_w;
					end if;
				elsif (ie_origem_preco_w = 4) then --Simpro
			
					cd_material_tiss_w	:= cd_material_tuss_simpro_w;

					if (coalesce(cd_material_tiss_w, '0') = '0') then
						cd_material_tiss_w		:= cd_material_tuss_w;
					end if;
				else
					cd_material_tiss_w	:= cd_material_tuss_w;
				end if;

				if (coalesce(cd_material_tiss_w,'0') = '0') then
					cd_material_tiss_w	:= cd_material_w;
				end if;

			elsif (ie_codigo_material_w = 'UBS') then --Codigo TUSS do Brasindice ou Simpro
				if (coalesce(cd_material_tuss_bras_w,0) > 0) then
					cd_material_tiss_w	:= cd_material_tuss_bras_w;
				else
					cd_material_brasindice_w	:= obter_codigo_brasindice(cd_estabelecimento_w, cd_material_w, clock_timestamp(),cd_convenio_w);
					cd_laboratorio_w			:= obter_valor_separador(cd_material_brasindice_w,1,';');
                    cd_medicamento_w			:= obter_valor_separador(cd_material_brasindice_w,2,';');
                    cd_apresentacao_w			:= obter_valor_separador(cd_material_brasindice_w,3,';');

					if (ie_fixar_vig_brasindice_w = 'S') then
						cd_material_tuss_bras_w	:= somente_numero(tiss_obter_cod_tuss_bras_vigen(cd_apresentacao_w, cd_laboratorio_w, cd_medicamento_w,clock_timestamp()));
					else
						cd_material_tuss_bras_w	:= somente_numero(tiss_obter_cod_tuss_bras_vigen(cd_apresentacao_w, cd_laboratorio_w, cd_medicamento_w,null));
					end if;

					if (coalesce(cd_material_tuss_bras_w,0) > 0) then
						cd_material_tiss_w	:= cd_material_tuss_bras_w;

					else --Se nao encontrou no brasindice, envia do Simpro
						if (coalesce(cd_material_tuss_simpro_w,0) > 0) then
							cd_material_tiss_w	:= cd_material_tuss_simpro_w;
						else
							cd_material_tuss_simpro_w	:= TISS_OBTER_TUSS_SIMPRO(cd_material_w, cd_estabelecimento_w, cd_convenio_w, clock_timestamp());
							if (coalesce(cd_material_tuss_simpro_w,0) > 0) then
								cd_material_tiss_w	:= cd_material_tuss_simpro_w;
							/*else	(Nvl(cd_material_tuss_w,0) > 0) then
								cd_material_tiss_w := cd_material_tuss_w;*/
							end if;
						end if;

					end if;

				end if;
			elsif (ie_codigo_material_w = 'CBS') then --Codigo TUSS da conta, Brasindice ou Simpro
				if (coalesce(cd_material_tuss_conta_w,0) > 0) then
					cd_material_tiss_w := cd_material_tuss_conta_w;
				elsif (coalesce(cd_material_tuss_bras_w,0) > 0) then
					cd_material_tiss_w	:= cd_material_tuss_bras_w;
				else
					cd_material_brasindice_w	:= obter_codigo_brasindice(cd_estabelecimento_w, cd_material_w, clock_timestamp(),cd_convenio_w);
					cd_laboratorio_w		:= obter_valor_separador(cd_material_brasindice_w,1,';');
					cd_medicamento_w		:= obter_valor_separador(cd_material_brasindice_w,2,';');
					cd_apresentacao_w		:= obter_valor_separador(cd_material_brasindice_w,3,';');

					if (ie_fixar_vig_brasindice_w = 'S') then
						cd_material_tuss_bras_w	:= somente_numero(tiss_obter_cod_tuss_bras_vigen(cd_apresentacao_w, cd_laboratorio_w, cd_medicamento_w,clock_timestamp()));
					else
						cd_material_tuss_bras_w	:= somente_numero(tiss_obter_cod_tuss_bras_vigen(cd_apresentacao_w, cd_laboratorio_w, cd_medicamento_w,null));
					end if;

					if (coalesce(cd_material_tuss_bras_w,0) > 0) then
						cd_material_tiss_w	:= cd_material_tuss_bras_w;

					else --Se nao encontrou no brasindice, envia do Simpro
						if (coalesce(cd_material_tuss_simpro_w,0) > 0) then
							cd_material_tiss_w	:= cd_material_tuss_simpro_w;
						else
							cd_material_tuss_simpro_w	:= TISS_OBTER_TUSS_SIMPRO(cd_material_w, cd_estabelecimento_w, cd_convenio_w, clock_timestamp());
							if (coalesce(cd_material_tuss_simpro_w,0) > 0) then
								cd_material_tiss_w	:= cd_material_tuss_simpro_w;
							/*else	(Nvl(cd_material_tuss_w,0) > 0) then
								cd_material_tiss_w := cd_material_tuss_w;*/
							end if;
						end if;

					end if;

				end if;

			elsif (ie_codigo_material_w = 'UB') then --Codigo TUSS do Brasindice
				if (coalesce(cd_material_tuss_bras_w,0) > 0) then
					cd_material_tiss_w	:= cd_material_tuss_bras_w;
				else
					cd_material_brasindice_w	:= obter_codigo_brasindice(cd_estabelecimento_w, cd_material_w, clock_timestamp(),cd_convenio_w);
                    cd_laboratorio_w			:= obter_valor_separador(cd_material_brasindice_w,1,';');
                    cd_medicamento_w			:= obter_valor_separador(cd_material_brasindice_w,2,';');
                    cd_apresentacao_w			:= obter_valor_separador(cd_material_brasindice_w,3,';');


					if (ie_fixar_vig_brasindice_w = 'S') then
						cd_material_tuss_bras_w	:= somente_numero(tiss_obter_cod_tuss_bras_vigen(cd_apresentacao_w, cd_laboratorio_w, cd_medicamento_w,clock_timestamp()));
					else
						cd_material_tuss_bras_w	:= somente_numero(tiss_obter_cod_tuss_bras_vigen(cd_apresentacao_w, cd_laboratorio_w, cd_medicamento_w,null));
					end if;

					if (coalesce(cd_material_tuss_bras_w,0) > 0) then
						cd_material_tiss_w	:= cd_material_tuss_bras_w;
					end if;
				end if;

                     commit;
			elsif (ie_codigo_material_w = 'UIB') then --Codigo TUSS ou TISS do Brasindice
				if (coalesce(cd_material_tuss_bras_w,0) > 0) then
					cd_material_tiss_w	:= cd_material_tuss_bras_w;
				else
					cd_material_brasindice_w	:= obter_codigo_brasindice(cd_estabelecimento_w, cd_material_w, clock_timestamp(),cd_convenio_w);
					cd_laboratorio_w			:= obter_valor_separador(cd_material_brasindice_w,1,';');
                    cd_medicamento_w			:= obter_valor_separador(cd_material_brasindice_w,2,';');
                    cd_apresentacao_w			:= obter_valor_separador(cd_material_brasindice_w,3,';');

					if (ie_fixar_vig_brasindice_w = 'S') then
						cd_material_tuss_bras_w	:= somente_numero(tiss_obter_cod_tuss_bras_vigen(cd_apresentacao_w, cd_laboratorio_w, cd_medicamento_w,clock_timestamp()));
					else
						cd_material_tuss_bras_w	:= somente_numero(tiss_obter_cod_tuss_bras_vigen(cd_apresentacao_w, cd_laboratorio_w, cd_medicamento_w,null));
					end if;

				end if;

				if (coalesce(cd_material_tuss_bras_w,0) > 0) then
						cd_material_tiss_w	:= cd_material_tuss_bras_w;
				elsif (coalesce(cd_material_tuss_bras_w,0) = 0) then

					if (ie_fixar_vig_brasindice_w = 'S') then
						cd_material_tiss_w		:= tiss_obter_cod_bras_vigen(cd_apresentacao_w, cd_laboratorio_w, cd_medicamento_w,clock_timestamp());
					else
						cd_material_tiss_w		:= tiss_obter_cod_brasindice(cd_apresentacao_w, cd_laboratorio_w, cd_medicamento_w);
					end if;

				end if;
			elsif (ie_codigo_material_w = 'US') then --Codigo TUSS do Simpro
				if (coalesce(cd_material_tuss_simpro_w,0) > 0) then
					cd_material_tiss_w	:= cd_material_tuss_simpro_w;
				else
					cd_material_tuss_simpro_w	:= TISS_OBTER_TUSS_SIMPRO(cd_material_w, cd_estabelecimento_w, cd_convenio_w, clock_timestamp());
					if (coalesce(cd_material_tuss_simpro_w,0) > 0) then
						cd_material_tiss_w	:= cd_material_tuss_simpro_w;
					end if;
				end if;
			elsif (ie_codigo_material_w = 'TB') then -- Codigo TISS no Brasindice
				
				cd_material_brasindice_w		:= obter_codigo_brasindice(cd_estabelecimento_w, cd_material_w, clock_timestamp(), cd_convenio_w, nr_seq_marca_w);
				cd_laboratorio_w			:= obter_valor_separador(cd_material_brasindice_w,1,';');
				cd_medicamento_w			:= obter_valor_separador(cd_material_brasindice_w,2,';');
				cd_apresentacao_w			:= obter_valor_separador(cd_material_brasindice_w,3,';');

				if (ie_fixar_vig_brasindice_w = 'S') then
					cd_material_tiss_w		:= tiss_obter_cod_bras_vigen(cd_apresentacao_w, cd_laboratorio_w, cd_medicamento_w, clock_timestamp());
				else				
					cd_material_tiss_w		:= tiss_obter_cod_brasindice(cd_apresentacao_w, cd_laboratorio_w, cd_medicamento_w);
				end if;
				
			end if;
		end if;

		if (coalesce(ds_material_tiss_w::text, '') = '') then

			select	max(CD_TABELA_XML)
			into STRICT	CD_TABELA_XML_w
			from	tiss_tipo_tabela
			where	nr_sequencia	= nr_seq_tiss_tabela_w;
		
			if (coalesce(ie_desc_material_w,'N') = 'N') then --  ( Descricao da tabela VALOR PADRAO PARA INICIALIZAR A BUSCA PELA DESCRICAO)
				if (CD_TABELA_XML_w = '05') then

					ds_material_tiss_w		:= Obter_Dados_Brasindice(cd_estabelecimento_w, cd_material_w, clock_timestamp(), cd_convenio_w, 'DMED');

				elsif (CD_TABELA_XML_w = '12') then

					select	max(Obter_Desc_Simpro(TISS_OBTER_CODIGO_SIMPRO(cd_material_w, cd_estabelecimento_w, cd_convenio_w, clock_timestamp())))
					into STRICT	ds_material_tiss_w
					;

				elsif (CD_TABELA_XML_w in ('95','96')) and
					((coalesce(ds_mat_convenio_w::text, '') = '') or (ds_mat_convenio_w = to_char(ds_material_w))) then

					ds_material_tiss_w	:= Obter_Dados_Brasindice(cd_estabelecimento_w, cd_material_w, clock_timestamp(), cd_convenio_w, 'DMED');

				elsif (CD_TABELA_XML_w in ('19','20')) then	
			
					if (coalesce(ie_origem_preco_mat_w,1) = 1)
					and (Obter_Dados_Brasindice(cd_estabelecimento_w, cd_material_w, clock_timestamp(), cd_convenio_w, 'DMED') is not null) then
						ds_material_tiss_w	:= Obter_Dados_Brasindice(cd_estabelecimento_w, cd_material_w, clock_timestamp(), cd_convenio_w, 'DMED');
					elsif (coalesce(ie_origem_preco_mat_w,4) = 4)
					and (Obter_Desc_Simpro(TISS_OBTER_CODIGO_SIMPRO(cd_material_w, cd_estabelecimento_w, cd_convenio_w, clock_timestamp())) is not null) then
						ds_material_tiss_w 	:= Obter_Desc_Simpro(TISS_OBTER_CODIGO_SIMPRO(cd_material_w, cd_estabelecimento_w, cd_convenio_w, clock_timestamp()));
					end if;								
				end if;

			elsif (coalesce(ie_desc_material_w,'N') = 'S') then --S - Descricao do cadastro de materiais
				ds_material_tiss_w	:= ds_material_w;
			elsif (coalesce(ie_desc_material_w,'N') = 'B') then -- B - Descricao da apresentacao (Somente p/ Brasindice
				ds_material_tiss_w		:= Obter_Dados_Brasindice(cd_estabelecimento_w, cd_material_w, clock_timestamp(), cd_convenio_w, 'DAPR');
			elsif (coalesce(ie_desc_material_w,'N') = 'M') then -- M - Descricao da apresentacao e laboratorio
				ds_material_tiss_w		:= Obter_Dados_Brasindice(cd_estabelecimento_w, cd_material_w, clock_timestamp(), cd_convenio_w, 'DAPR') || ' - ' ||
							     Obter_Dados_Brasindice(cd_estabelecimento_w, cd_material_w, clock_timestamp(), cd_convenio_w, 'DLAB');
			elsif (coalesce(ie_desc_material_w,'N') = 'L') then -- L - Descricao do medicamento no brasindice e laboratorio
				ds_material_tiss_w		:= Obter_Dados_Brasindice(cd_estabelecimento_w, cd_material_w, clock_timestamp(), cd_convenio_w, 'DMED') || ' - ' ||
							     Obter_Dados_Brasindice(cd_estabelecimento_w, cd_material_w, clock_timestamp(), cd_convenio_w, 'DLAB');
			elsif (coalesce(ie_desc_material_w,'N') = 'C') then --C - Descricao do cadastro de materiais e laboratorio Brasindice
				ds_material_tiss_w		:= ds_material_original_w || ' - ' ||
							     Obter_Dados_Brasindice(cd_estabelecimento_w, cd_material_w, clock_timestamp(), cd_convenio_w, 'DLAB');
			elsif (coalesce(ie_desc_material_w,'N') = 'U') then -- U - Descricao do med + lab + apres + U.M. consumo (Brasindice)
				ds_material_tiss_w		:= substr((Obter_Dados_Brasindice(cd_estabelecimento_w, cd_material_w, clock_timestamp(), cd_convenio_w, 'DMED')||' '||
								Obter_Dados_Brasindice(cd_estabelecimento_w, cd_material_w, clock_timestamp(), cd_convenio_w, 'DLAB')||' '||
								Obter_Dados_Brasindice(cd_estabelecimento_w, cd_material_w, clock_timestamp(), cd_convenio_w, 'DAPR')||' '||
								Obter_Desc_Unid_Med(cd_unidade_medida_consumo_w)),1,255);

			elsif (coalesce(ie_desc_material_w,'N') = 'T') then -- T - Descricao do material + fabricante + U.M. consumo (Simpro)
				if (CD_TABELA_XML_w in ('95,96')) then

					select	substr(max(Obter_Desc_Simpro(TISS_OBTER_CODIGO_SIMPRO(cd_material_w, cd_estabelecimento_w, cd_convenio_w, clock_timestamp()))||' '||obter_desc_fabric_simpro(Obter_Codigo_Simpro(cd_material_w))||' '||Obter_Desc_Unid_Med(cd_unidade_medida_consumo_w)),1,255)
					into STRICT	ds_material_tiss_w
					;
				else
					select	substr(max(Obter_Desc_Simpro(TISS_OBTER_CODIGO_SIMPRO(cd_material_w, cd_estabelecimento_w, cd_convenio_w, clock_timestamp()))||' '||obter_desc_fabric_simpro(Obter_Codigo_Simpro(cd_material_w))||' '||Obter_Desc_Unid_Med(cd_unidade_medida_consumo_w)),1,255)
					into STRICT	ds_material_tiss_w
					;
				end if;


			elsif (coalesce(ie_desc_material_w,'N') = 'A') then -- A - Descricao do medicamento + apresentacao (Brasindice)
				ds_material_tiss_w		:= substr((Obter_Dados_Brasindice(cd_estabelecimento_w, cd_material_w, clock_timestamp(), cd_convenio_w, 'DMED') || ' - ' ||
								Obter_Dados_Brasindice(cd_estabelecimento_w, cd_material_w, clock_timestamp(), cd_convenio_w, 'DAPR')),1,255);
			elsif (coalesce(ie_desc_material_w,'N') = 'F') then -- F - Descricao do material + Fabricante (Simpro)
				ds_material_tiss_w := substr(coalesce(Obter_Desc_Simpro(TISS_OBTER_CODIGO_SIMPRO(cd_material_w, cd_estabelecimento_w, cd_convenio_w, clock_timestamp())),'')
							|| ' - ' || coalesce(obter_desc_fabric_simpro(Obter_Codigo_Simpro(cd_material_w)),''),1,255);
			elsif (coalesce(ie_desc_material_w,'N') = 'D') then -- D - Descricao conversao ou TUSS ou cadastro de materiais
				ds_material_tiss_w	:= substr(coalesce(coalesce(ds_mat_convenio_w,ds_material_tuss_w),ds_material_w),1,255);
			elsif (coalesce(ie_desc_material_w,'N') = 'E') then --Descricao TUSS
				ds_material_tiss_w	:= substr(coalesce(ds_material_tuss_w,ds_material_w),1,255);
			elsif (coalesce(ie_desc_material_w,'N') = 'P')  then	
					
				if (coalesce(ie_origem_preco_mat_w,1) = 1) and (Obter_Dados_Brasindice(cd_estabelecimento_w, cd_material_w, clock_timestamp(), cd_convenio_w, 'DMED') is not null) then
					ds_material_tiss_w		:= Obter_Dados_Brasindice(cd_estabelecimento_w, cd_material_w, clock_timestamp(), cd_convenio_w, 'DMED');
				elsif (coalesce(ie_origem_preco_mat_w,4) = 4) and (Obter_Desc_Simpro(TISS_OBTER_CODIGO_SIMPRO(cd_material_w, cd_estabelecimento_w, cd_convenio_w, clock_timestamp())) is not null) then					
					ds_material_tiss_w := Obter_Desc_Simpro(TISS_OBTER_CODIGO_SIMPRO(cd_material_w, cd_estabelecimento_w, cd_convenio_w, clock_timestamp()));
				end if;	

			end if;
		end if;

		
		 --Impedir que fique vazio
		if (coalesce(cd_material_tiss_w,'0') > '0') then
			cd_item_w := substr(cd_material_tiss_w,1,10);
		else
			SELECT * FROM DEFINE_MATERIAL_TUSS_AUTOR(cd_estabelecimento_w, cd_material_w, cd_convenio_w, cd_categoria_w, ie_tipo_atendimento_w, ie_origem_preco_w, clock_timestamp(), cd_material_tuss_w, nr_seq_tuss_mat_item_w, ds_material_tuss_w, cd_cgc_fabricante_w, nr_seq_marca_w) INTO STRICT cd_material_tuss_w, nr_seq_tuss_mat_item_w, ds_material_tuss_w;
						
						select 	CASE WHEN cd_material_tuss_w='0' THEN null  ELSE cd_material_tuss_w END
						into STRICT 	cd_item_w
						;	
							
			if (coalesce(cd_material_convenio_w,'0') <> '0') and (coalesce(cd_item_w,'0') = '0') then
				cd_item_w	:= substr(cd_material_convenio_w,1,10);
			end if;

			if (coalesce(cd_item_w,'0') = '0') then
				cd_item_w := substr(cd_material_w,1,10);					
			end if;
		end if;

		if (cd_cgc_fabricante_w IS NOT NULL AND cd_cgc_fabricante_w::text <> '') then

			select	max(a.nr_autor_func)
			into STRICT	nr_autorizacao_func_w
			from	pessoa_juridica a
			where	a.cd_cgc = cd_cgc_fabricante_w;

		end if;

		if (coalesce(ie_via_aplicacao_w::text, '') = '') then

			select	max(ie_via_aplicacao)
			into STRICT	ie_via_aplicacao_w
			from	material
			where	cd_material	= cd_material_w;

		end if;

		select	max(ie_via_aplicacao_tiss)
		into STRICT	ie_via_adm_w
		from	tiss_via_aplicacao
		where	ie_via_aplicacao	= ie_via_aplicacao_w;

		if (coalesce(cd_item_w,'0') = '0') then --tratamento para que o codigo do item nunca va zerado.
			cd_item_w	:= substr(cd_material_w,1,10);
		end if;


		if (nr_seq_paciente_setor_w IS NOT NULL AND nr_seq_paciente_setor_w::text <> '') then

			if (nr_seq_paciente_w IS NOT NULL AND nr_seq_paciente_w::text <> '') then

				select	max(substr(TISS_OBTER_UNIDADE_MEDIDA(coalesce(coalesce(b.cd_unid_med_prescr,b.cd_unid_med_dose),a.cd_unidade_medida_consumo)),1,3))
				into STRICT	cd_unidade_medida_w
				from	material a,
					paciente_atend_medic b,
					paciente_atendimento c
				where	a.cd_material 		= coalesce(cd_material_informado_w,cd_material_w)
				and	a.cd_material 		= b.cd_material
				and	c.nr_Seq_atendimento 	= b.nr_seq_atendimento
				and	c.nr_seq_atendimento 	= nr_seq_paciente_w;
			else
				select	max(substr(TISS_OBTER_UNIDADE_MEDIDA(coalesce(coalesce(b.cd_unid_med_prescr,b.cd_unid_med_dose),a.cd_unidade_medida_consumo)),1,3))
				into STRICT	cd_unidade_medida_w
				from	material a,
					paciente_atend_medic b,
					paciente_atendimento c
				where	a.cd_material 		= coalesce(cd_material_informado_w,cd_material_w)
				and	a.cd_material 		= b.cd_material
				and	c.nr_Seq_atendimento 	= b.nr_seq_atendimento
				and	c.nr_ciclo	     	= nr_ciclo_autal_w
				and	c.nr_seq_paciente 	= nr_seq_paciente_setor_w;
			end if;
			
			if (coalesce(cd_unidade_medida_w::text, '') = '') then
				select	max(substr(TISS_OBTER_UNIDADE_MEDIDA(cd_unidade_medida_consumo),1,3))
				into STRICT	cd_unidade_medida_w
				from	material
				where	cd_material = cd_material_w;
			end if;
		end if;

		if (ds_material_tiss_w = ' - ' or
			ds_material_tiss_w = ' ') then
			ds_material_tiss_w := ds_material_w;
		end if;
		
		ds_material_w	:= trim(both substr(coalesce(ds_material_tiss_w,ds_material_w),1,150));
		
		if (ie_digitos_desp_w = 'I') then
		
			if (coalesce(cd_material_tuss_w,0) > 0) then
				ie_codigo_tuss_w := 'S';
			end if;

			cd_item_w := TISS_OBTER_REGRA_CODIGO_DESP(cd_estabelecimento_w,cd_convenio_w,null,cd_material_tiss_w,cd_material_w,ie_codigo_tuss_w,nr_seq_tiss_tabela_w,ie_origem_preco_mat_w);
		end if;


		insert into tiss_anexo_guia_item(cd_edicao_amb,
			cd_item,
			cd_ref_fabricante,
			ds_item,
			dt_atualizacao,
			dt_atualizacao_nrec,
			dt_provavel,
			ie_opcao_fabricante,
			ie_via_aplicacao,
			nm_usuario,
			nm_usuario_nrec,
			nr_autorizacao_func,
			nr_registro_anvisa,
			nr_seq_guia,
			nr_sequencia,
			qt_dose_dia,
			qt_solicitada,
			vl_solicitado,
			cd_unidade_medida)
		values (cd_edicao_amb_w,
			cd_item_w,
			cd_ref_fabricante_w,
			ds_material_w,
			clock_timestamp(),
			clock_timestamp(),
			coalesce(dt_entrada_prevista_w,coalesce(dt_inicio_vigencia_w,dt_autorizacao_w)),
			1, --ie_opcao_fabricante
			ie_via_adm_w, --ie_via_aplicacao
			nm_usuario_p,
			nm_usuario_p,
			nr_autorizacao_func_w,
			nr_registro_anvisa_w,
			nr_seq_guia_w,
			nextval('tiss_anexo_guia_item_seq'),
			qt_dose_dia_w,
			qt_solicitada_w,
			vl_solicitado_w,
			cd_unidade_medida_w);

		end;
	end loop;
	close C01;

	open C02;
	loop
	fetch C02 into
		c02_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin	
					
		insert into tiss_anexo_guia_item(cd_edicao_amb,
			cd_item,
			cd_ref_fabricante,
			ds_item,
			dt_atualizacao,
			dt_atualizacao_nrec,
			dt_provavel,
			ie_opcao_fabricante,
			ie_via_aplicacao,
			nm_usuario,
			nm_usuario_nrec,
			nr_autorizacao_func,
			nr_registro_anvisa,
			nr_seq_guia,
			nr_sequencia,
			qt_dose_dia,
			qt_solicitada,
			vl_solicitado)
		values (coalesce(c02_w.cd_edicao, '00'),
			c02_w.cd_procedimento,
			null,
			c02_w.ds_procedimento,
			clock_timestamp(),
			clock_timestamp(),
			coalesce(dt_entrada_prevista_w,coalesce(dt_inicio_vigencia_w,dt_autorizacao_w)),
			null, --ie_opcao_fabricante
			null, --ie_via_aplicacao
			nm_usuario_p,
			nm_usuario_p,
			nr_autorizacao_func_w,
			null,
			nr_seq_guia_w,
			nextval('tiss_anexo_guia_item_seq'),
			null,
			c02_w.qt_solicitada,
			c02_w.vl_solicitado);
		end;
	end loop;
	close C02;

	/*FIM- Gerar os itens das guias*/



	/*INICIO - Gerar diagnosticos*/

	select	count(*)
	into STRICT	count_w
	from	autor_diag_medico a,
		autor_diag_doenca b
	where	a.nr_sequencia				= b.nr_seq_autor_diag
	and	a.nr_sequencia_autor			= nr_sequencia_autor_p;

	if (count_w > 0) then
		select	max(a.dt_diagnostico),
			max(b.cd_doenca),
			substr(coalesce(max(b.ds_diagnostico),max(a.ds_diagnostico)),1,1000)
		into STRICT	dt_diagnostico_w,
			cd_cid_w,
			ds_info_relevantes_w
		from	autor_diag_medico a,
			autor_diag_doenca b
		where	a.nr_sequencia				= b.nr_seq_autor_diag
		and	coalesce(b.ie_classificacao_doenca,'P')	= 'P'
		and	a.nr_sequencia_autor			= nr_sequencia_autor_p
		and	a.dt_diagnostico			=
								(SELECT	max(x.dt_diagnostico)
								from	autor_diag_medico x,
									autor_diag_doenca y
								where	x.nr_sequencia				= y.nr_seq_autor_diag
								and	x.nr_sequencia_autor			= a.nr_sequencia_autor
								and	coalesce(y.ie_classificacao_doenca,'P')	= 'P');

		if (cd_cid_w <> '') then --Buscar CID 2 - Secundario
			select	max(b.cd_doenca),
				substr(coalesce(max(b.ds_diagnostico),max(a.ds_diagnostico)),1,1000)
			into STRICT	cd_cid_2_w,
				ds_info_relevantes_w
			from	autor_diag_medico a,
				autor_diag_doenca b
			where	a.nr_sequencia				= b.nr_seq_autor_diag
			and	coalesce(b.ie_classificacao_doenca,'P')	= 'S'
			and	a.nr_sequencia_autor			= nr_sequencia_autor_p
			and	a.dt_diagnostico			=
									(SELECT	max(x.dt_diagnostico)
									from	autor_diag_medico x,
										autor_diag_doenca y
									where	x.nr_sequencia				= y.nr_seq_autor_diag
									and	x.nr_sequencia_autor			= a.nr_sequencia_autor
									and	coalesce(y.ie_classificacao_doenca,'P')	= 'S');
		end if;
	else
		select	max(c.dt_diagnostico),
			max(a.cd_doenca),
			substr(coalesce(max(a.ds_diagnostico),max(c.ds_diagnostico)),1,1000)
		into STRICT	dt_diagnostico_w,
			cd_cid_w,
			ds_info_relevantes_w
		from 	atendimento_paciente e,
			diagnostico_doenca a,
			diagnostico_medico c,
			autorizacao_convenio b
		where	b.nr_atendimento		= c.nr_atendimento
		and	c.nr_atendimento		= a.nr_atendimento
		and	c.dt_diagnostico		= a.dt_diagnostico
		and	b.nr_atendimento		= e.nr_atendimento
		and	b.nr_sequencia			= nr_sequencia_autor_p
		and	a.ie_classificacao_doenca	= 'P'
		and	c.dt_diagnostico		=
				(SELECT		max(x.dt_diagnostico)
				from		diagnostico_doenca y,
						diagnostico_medico x
				where		x.nr_atendimento	= b.nr_atendimento
				and		x.nr_atendimento	= y.nr_atendimento
				and		x.dt_diagnostico	= y.dt_diagnostico
				and		y.ie_classificacao_doenca	= 'P');

		if (cd_cid_w IS NOT NULL AND cd_cid_w::text <> '') then

			select	max(a.cd_doenca),
				substr(coalesce(max(a.ds_diagnostico),max(c.ds_diagnostico)),1,1000)
			into STRICT	cd_cid_2_w,
				ds_info_relevantes_w
			from 	atendimento_paciente e,
				diagnostico_doenca a,
				diagnostico_medico c,
				autorizacao_convenio b
			where	b.nr_atendimento		= c.nr_atendimento
			and	c.nr_atendimento		= a.nr_atendimento
			and	c.dt_diagnostico		= a.dt_diagnostico
			and	b.nr_atendimento		= e.nr_atendimento
			and	b.nr_sequencia			= nr_sequencia_autor_p
			and	a.ie_classificacao_doenca	= 'S'
			and	c.dt_diagnostico		=
					(SELECT		max(x.dt_diagnostico)
					from		diagnostico_doenca y,
							diagnostico_medico x
					where		x.nr_atendimento	= b.nr_atendimento
					and		x.nr_atendimento	= y.nr_atendimento
					and		x.dt_diagnostico	= y.dt_diagnostico
					and		y.ie_classificacao_doenca	= 'S');

		end if;
	end if;

	/*Obter dados do diagnostico da quimioterapia*/

	if	((coalesce(nr_seq_paciente_setor_w,0) <> 0) or (coalesce(nr_seq_rxt_tratamento_W,0) <> 0)) and (ie_tiss_tipo_anexo_w in ('2','3')) then

		if (ie_tiss_tipo_anexo_w = '2') then
			select	max(a.ie_finalidade),
				max(a.ie_modalidade_trat),
				max(b.ie_nivel_ecog),
				substr(max(b.ds_diag_histologico),1,1000),
				substr(max(b.ds_proposta_terapeutica),1,1000),
				max(b.cd_estadiamento),
				coalesce(max(coalesce(b.DT_DIAG_HISTOPATOLOGICO,b.dt_avaliacao)),dt_diagnostico_w),
				coalesce(max(b.cd_doenca_cid),cd_cid_w),
				substr(coalesce(max(b.ds_observacao),ds_info_relevantes_w),1,999),
				UPPER(max(b.cd_metastase_distancia)),
				UPPER(max(b.cd_linfonodo_regional)),
				UPPER(max(b.cd_tumor_primario))
			into STRICT	ie_finalidade_w,
				ie_modalidade_trat_w,
				ie_nivel_ecog_w,
				ds_diag_histopatologico_w,
				ds_plano_terapeutico_w,
				cd_estadiamento_w,
				dt_diagnostico_w,
				cd_cid_w,
				ds_info_relevantes_w,
				cd_metastase_distancia_w,
				cd_linfonodo_regional_w,
				cd_tumor_primario_w
			FROM paciente_setor a
LEFT OUTER JOIN can_loco_regional b ON (a.nr_seq_loco_regional = b.nr_sequencia)
WHERE a.nr_seq_paciente	= nr_seq_paciente_setor_w;
		end if;


		if (cd_cid_w IS NOT NULL AND cd_cid_w::text <> '') then --Buscar a cirurgia e data de tratamento anterior, de acordo com o CID do loco regional e o CID da cirurgia
			begin
			select	substr(obter_desc_procedimento(a.cd_procedimento_princ,a.ie_origem_proced),1,255),
				a.dt_inicio_real
			into STRICT	ds_proc_cirurgia_w,
				dt_realizacao_cirurgia_w
			from	cirurgia a,
				diagnostico_doenca b
			where	a.nr_cirurgia		= b.nr_cirurgia
			and	b.cd_doenca		= cd_cid_w
			and	a.cd_pessoa_fisica	= cd_pessoa_fisica_w
			and	a.dt_inicio_real	<= dt_autorizacao_w  LIMIT 1;
			exception
			when no_data_found then

				begin
				select	substr(coalesce(obter_desc_procedimento(a.cd_procedimento,a.ie_origem_proced),ds_procedimento_inf),1,255),
					a.dt_cirurgia
				into STRICT	ds_proc_cirurgia_w,
					dt_realizacao_cirurgia_w
				from	historico_saude_cirurgia a
				where	a.nr_sequencia	= 	(SELECT	max(x.nr_sequencia)
								from	historico_saude_cirurgia x
								where	x.cd_pessoa_fisica 	= cd_pessoa_fisica_w
								and	x.cd_doenca_cid		= cd_cid_w
								and	x.dt_cirurgia 		<= dt_autorizacao_w
								and	(x.dt_liberacao IS NOT NULL AND x.dt_liberacao::text <> '')
								and	coalesce(x.dt_inativacao::text, '') = '')  LIMIT 1;
				exception
				when others then
					ds_proc_cirurgia_w	:= null;
					dt_realizacao_cirurgia_w:= null;
				end;
			end;
		end if;

		if (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') then /*OS 725121 - Busca da escala ECOG, ja que a classificacao ECOG pode mudar dentro do tratamento*/
			select	coalesce(max(a.ie_nivel_ecog),ie_nivel_ecog_w)
			into STRICT	ie_nivel_ecog_w
			from	escala_ecog a
			where	a.nr_atendimento	= nr_atendimento_w
			and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
			and	a.dt_avaliacao		=
						(SELECT	max(x.dt_avaliacao)
						from	escala_ecog x
						where	x.nr_atendimento	= nr_atendimento_w
						and	(x.dt_liberacao IS NOT NULL AND x.dt_liberacao::text <> ''))  LIMIT 1;
		end if;

		cd_finalidade_tratamento_w	:= substr(TISS_OBTER_FINALIDADE_TRAT(cd_estabelecimento_w,ie_finalidade_w),1,1);
		cd_capacidade_ecog_w		:= substr(TISS_OBTER_CAPAC_FUNC_ECOG(cd_estabelecimento_w,ie_nivel_ecog_w),1,1);
		cd_tipo_quimio_w		:= substr(TISS_OBTER_TIPO_QUIMIO(cd_estabelecimento_w,ie_modalidade_trat_w),1,1);

		/*Conforme tabela do padrao TISS 3.00.01 - Tabela 31 - Terminologia de estadiamento do tumor */

		if (cd_estadiamento_w in ('I', 'IA', 'IB', 'IC')) then
			cd_estadiamento_tumor_w	:= 1;
		elsif (cd_estadiamento_w in ('II', 'IIA', 'IIB', 'IIC')) then
			cd_estadiamento_tumor_w	:= 2;
		elsif (cd_estadiamento_w in ('III', 'IIIA', 'IIIB', 'IIIC'))  then
			cd_estadiamento_tumor_w	:= 3;
		elsif (cd_estadiamento_w in ('IV', 'IVA', 'IVB', 'IVC')) then
			cd_estadiamento_tumor_w	:= 4;
		else
			cd_estadiamento_tumor_w	:= 5;
		end if;

		if (cd_metastase_distancia_w = 'M1') then
			cd_metastase_w := '1';
		elsif (cd_metastase_distancia_w = 'M0') then
			cd_metastase_w := '2';
		elsif (cd_metastase_distancia_w = 'MX') then
			cd_metastase_w := '3';
		else
			cd_metastase_w := null;
		end if;

		if (cd_linfonodo_regional_w = 'N1') then
			cd_nodulo_w := 1;
		elsif (cd_linfonodo_regional_w = 'N2') then
			cd_nodulo_w := 2;
		elsif (cd_linfonodo_regional_w = 'N3') then
			cd_nodulo_w := 3;
		elsif (cd_linfonodo_regional_w = 'N0') then
			cd_nodulo_w := 4;
		elsif (cd_linfonodo_regional_w = 'NX') then
			cd_nodulo_w := 5;
		else
			cd_nodulo_w := null;
		end if;

		if (cd_tumor_primario_w = 'T1') then
			cd_tumor_w := 1;
		elsif (cd_tumor_primario_w = 'T2') then
			cd_tumor_w := 2;
		elsif (cd_tumor_primario_w = 'T3') then
			cd_tumor_w := 3;
		elsif (cd_tumor_primario_w = 'T4') then
			cd_tumor_w := 4;
		elsif (cd_tumor_primario_w = 'T0') then
			cd_tumor_w := 5;
		elsif (cd_tumor_primario_w = 'TIS') then
			cd_tumor_w := 6;
		elsif (cd_tumor_primario_w = 'TX') then
			cd_tumor_w := 7;
		else
			cd_tumor_w := null;
		end if;

	end if;

	if (ie_mascara_cid_w	= 'S') then
		cd_cid_w	:= tiss_obter_cid_mascara(cd_cid_w);
		cd_cid_2_w	:= tiss_obter_cid_mascara(cd_cid_2_w);
	end if;

	insert into tiss_anexo_guia_diag(nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_seq_guia,
		dt_diagnostico,
		cd_cid,
		cd_cid_2,
		cd_cid_3,
		cd_cid_4,
		cd_estadiamento_tumor,
		cd_finalidade_tratamento,
		cd_ecog,
		ds_diag_histopatologico,
		ds_info_relevantes,
		cd_tipo_quimio,
		ds_plano_terapeutico,
		ds_proc_cirurgia,
		dt_realizacao_cirurgia,
		cd_metastase,
		cd_nodulo,
		cd_tumor,
		cd_diagnostico_imagem)
	values (nextval('tiss_anexo_guia_diag_seq'),
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		nr_seq_guia_w,
		coalesce(dt_radio_diagnostico_w,coalesce(dt_diagnostico_w,clock_timestamp())),
		coalesce(cd_cid_radio_w,cd_cid_w),
		coalesce(cd_cid_2_radio_w,cd_cid_2_w),
		null,
		null,
		cd_estadiamento_tumor_w,
		cd_finalidade_tratamento_w,
		cd_capacidade_ecog_w,
		ds_diag_histopatologico_w,
		coalesce(ds_info_relevantes_radio_w,ds_info_relevantes_w),
		cd_tipo_quimio_w,
		ds_plano_terapeutico_w,
		substr(ds_proc_cirurgia_w,1,40), --No padrao TISS so pode ter no maximo 20 caracteres.
		dt_realizacao_cirurgia_w,
		cd_metastase_w,
		cd_nodulo_w,
		cd_tumor_w,
		cd_diagnostico_imagem_w);

	CALL TISS_GERAR_AUTOR_ANEXO_DIAG(nr_sequencia_autor_p,nr_seq_guia_w,nm_usuario_p);
	/*FIM - Gerar diagnosticos*/

end if;
commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE tiss_gerar_anexo_guia (nr_sequencia_autor_p bigint, nm_usuario_p text) FROM PUBLIC;

