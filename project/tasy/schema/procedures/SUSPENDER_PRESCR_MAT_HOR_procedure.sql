-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE suspender_prescr_mat_hor ( nr_sequencia_p bigint, nm_usuario_p text, nr_seq_motivo_susp_p bigint, ds_motivo_susp_p text, ie_evento_duplicidade_p text, ds_observacao_p text) AS $body$
DECLARE


nr_prescricao_w		bigint;
nr_seq_material_w	integer;
nr_seq_horario_w	bigint;
nr_agrupamento_w	bigint;
nr_seq_composto_w	bigint;
dt_horario_w		timestamp;
ie_agrupador_w		bigint;
ie_consistir_hora_w	varchar(1);
ie_gravar_justif_w	varchar(1);
nr_atendimento_w	bigint;
cd_material_w		bigint;
nr_seq_alteracao_w	bigint;
ie_arq_pyxis_w		varchar(1);
cd_estabelecimento_w	smallint;
qt_existe_regra_w	bigint;
nr_seq_lote_w		bigint;
qt_lote_w		bigint;
ie_status_lote_w	varchar(5);
nr_seq_processo_w prescr_mat_hor.nr_seq_processo%type;
qt_processo_w     integer;

c01 CURSOR FOR
SELECT	nr_sequencia
from	prescr_material
where	nr_prescricao	= nr_prescricao_w
and	nr_sequencia	<> nr_seq_material_w
and	nr_agrupamento	= nr_agrupamento_w
and	ie_agrupador	= 1
and	coalesce(nr_seq_kit::text, '') = '';


BEGIN
ie_consistir_hora_w := consiste_hora_suspensao(null,nm_usuario_p,nr_sequencia_p,null,'H');

CALL gravar_log_cpoe('CPOE_SUSPENDER_HOR_ITEM_PRESCR nr_sequencia_p: '||nr_sequencia_p||
		' nr_seq_motivo_susp_p: '||nr_seq_motivo_susp_p||
		' ds_motivo_susp_p: '||ds_motivo_susp_p||
		' ie_evento_duplicidade_p: '||ie_evento_duplicidade_p||
		' ds_observacao_p: '||ds_observacao_p||
		' nm_usuario_p: '||ds_observacao_p||
		' ie_consistir_hora_w: ' || ie_consistir_hora_w||
		' get_ie_commit: ' || wheb_usuario_pck.get_ie_commit);

if (ie_consistir_hora_w = 'S') then
	--'Nao e possivel suspender o horario! Parametro[801]';
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(214137);
end if;

update	prescr_mat_hor
set	dt_suspensao		= clock_timestamp(),
	nm_usuario_susp		= nm_usuario_p,
	nr_seq_motivo_susp	= CASE WHEN nr_seq_motivo_susp_p=0 THEN null  ELSE nr_seq_motivo_susp_p END ,
	ds_motivo_susp          = ds_motivo_susp_p
where	nr_sequencia 		= nr_sequencia_p
and	coalesce(dt_fim_horario::text, '') = ''
and	coalesce(dt_suspensao::text, '') = '';

select	a.nr_prescricao,
	a.nr_seq_material,
	a.dt_horario,
	b.nr_atendimento,
	a.cd_material,
	b.cd_estabelecimento,
	a.nr_seq_lote,
  a.nr_seq_processo
into STRICT	nr_prescricao_w,
	nr_seq_material_w,
	dt_horario_w,
	nr_atendimento_w,
	cd_material_w,
	cd_estabelecimento_w,
	nr_seq_lote_w,
  nr_seq_processo_w
from	prescr_mat_hor a,
	prescr_medica b
where	a.nr_sequencia = nr_sequencia_p
and	a.nr_prescricao = b.nr_prescricao;

update	prescr_material
set	ie_horario_susp	= 'S'
where	nr_prescricao	= nr_prescricao_w
and	nr_sequencia	= nr_seq_material_w;

update	prescr_mat_hor
set	dt_suspensao		= clock_timestamp(),
	nm_usuario_susp		= nm_usuario_p,
	nr_seq_motivo_susp	= CASE WHEN nr_seq_motivo_susp_p=0 THEN null  ELSE nr_seq_motivo_susp_p END ,
	ds_motivo_susp          = ds_motivo_susp_p
where	nr_prescricao		= nr_prescricao_w
and	nr_seq_superior		= nr_seq_material_w
and	dt_horario		= dt_horario_w
and	coalesce(dt_fim_horario::text, '') = ''
and	coalesce(dt_suspensao::text, '') = '';

select	max(nr_agrupamento),
	max(ie_agrupador)
into STRICT	nr_agrupamento_w,
	ie_agrupador_w
from	prescr_material
where	nr_prescricao	= nr_prescricao_w
and	nr_sequencia	= nr_seq_material_w;

ie_gravar_justif_w := Obter_Param_Usuario(924, 890, obter_perfil_ativo, nm_usuario_p, 0, ie_gravar_justif_w);

if (ie_agrupador_w 			= 1) and (coalesce(ie_evento_duplicidade_p,'S')	= 'S') then

	select	nextval('prescr_mat_alteracao_seq')
	into STRICT	nr_seq_alteracao_w
	;

	insert	into prescr_mat_alteracao(nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_prescricao,
		nr_seq_prescricao,
		nr_seq_horario,
		dt_alteracao,
		cd_pessoa_fisica,
		ie_alteracao,
		ds_justificativa,
		ie_tipo_item,
		dt_horario,
		nr_atendimento,
		cd_item,
		ds_observacao)
	values	(nr_seq_alteracao_w,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		nr_prescricao_w,
		nr_seq_material_w,
		nr_sequencia_p,
		clock_timestamp(),
		obter_dados_usuario_opcao(nm_usuario_p,'C'),
		12,
		CASE WHEN ie_gravar_justif_w='S',OBTER_DESC_EXPRESSAO(727956)), --'Liberacao de itens duplicados'		CASE WHEN ie_agrupador_w=1 THEN  'M'  ELSE 'MAT' END  THEN		dt_horario_w WHEN ie_gravar_justif_w=nr_atendimento_w THEN 		cd_material_w  ELSE ds_observacao_p END;
end if;

open C01;
loop
fetch C01 into
	nr_seq_composto_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	select	max(nr_sequencia)
	into STRICT	nr_seq_horario_w
	from	prescr_mat_hor
	where	nr_prescricao	= nr_prescricao_w
	and	nr_seq_material	= nr_seq_composto_w
	and	dt_horario	= dt_horario_w
	and	coalesce(dt_fim_horario::text, '') = ''
	and	coalesce(dt_suspensao::text, '') = '';

	if (coalesce(nr_seq_horario_w,0) > 0) then
		update	prescr_mat_hor
		set	dt_suspensao		= clock_timestamp(),
			nm_usuario_susp		= nm_usuario_p,
			nr_seq_motivo_susp	= CASE WHEN nr_seq_motivo_susp_p=0 THEN null  ELSE nr_seq_motivo_susp_p END ,
			ds_motivo_susp          = ds_motivo_susp_p
		where	nr_sequencia 		= nr_seq_horario_w
		and	coalesce(dt_fim_horario::text, '') = ''
		and	coalesce(dt_suspensao::text, '') = '';

		update	prescr_material
		set	ie_horario_susp	= 'S'
		where	nr_prescricao	= nr_prescricao_w
		and	nr_sequencia	= nr_seq_composto_w;

	end if;

end loop;
close C01;

select 	coalesce(max(ie_arq_pyxis),'N')
into STRICT	ie_arq_pyxis_w
from	parametro_atendimento
where	cd_estabelecimento = cd_estabelecimento_w;

if (ie_arq_pyxis_w = 'S') then
	begin
	select 	count(*)
	into STRICT	qt_existe_regra_w
	from	dis_regra_local
	where	cd_estabelecimento = cd_estabelecimento_w;

	if (coalesce(qt_existe_regra_w,0) > 0) then
		CALL dis_gerar_arq_prescr(nr_prescricao_w,'2');
	end if;
	end;
end if;

update	ap_lote_item
set	dt_supensao	= clock_timestamp(),
	nm_usuario_susp	= nm_usuario_p
where	nr_seq_lote	= nr_seq_lote_w
and	nr_seq_mat_hor	= nr_sequencia_p
and	coalesce(dt_supensao::text, '') = '';

/*Verifica se todos os itens pendentes, ja estao suspensos.. se sim. suspende o lote*/

select	count(*)
into STRICT	qt_lote_w
from	ap_lote_item
where	nr_seq_lote	= nr_seq_lote_w
and	coalesce(dt_supensao::text, '') = '';

-- Somente se ele estiver com Status Gerado
if (qt_lote_w = 0) then
	select	max(ie_status_lote)
	into STRICT	ie_status_lote_w
	from	ap_lote
	where	nr_sequencia	= nr_seq_lote_w;
	if (ie_status_lote_w = 'G') then
		update	ap_lote
		set	ie_status_lote = 'S'
		where	nr_sequencia	= nr_seq_lote_w;

		insert into ap_lote_historico(
			nr_sequencia,			dt_atualizacao,
			nm_usuario,			nr_seq_lote,
			ds_evento,			ds_log)
		values (	nextval('ap_lote_historico_seq'),	clock_timestamp(),
			nm_usuario_p,			nr_seq_lote_w,
			--'Suspensao do lote',		'Lote suspenso na suspensao do horario:'||nr_sequencia_p||' - SUSPENDER_PRESCR_MAT_HOR.');
			OBTER_DESC_EXPRESSAO(348748),		WHEB_MENSAGEM_PCK.get_texto(456876,'nr_sequencia_p='|| nr_sequencia_p) || ' - SUSPENDER_PRESCR_MAT_HOR.');
	end if;
end if;

if (ie_agrupador_w in (1,2,8,12,16)) then

  select coalesce(count(*), 0)
  into STRICT   qt_processo_w
  from   prescr_mat_hor
  where  nr_seq_processo = nr_seq_processo_w
  and    coalesce(dt_suspensao::text, '') = '';
                    
  if (qt_processo_w = 0) then
    update	adep_processo
    set		  ie_inconsistencia	= 'S',
            dt_cancelamento		= clock_timestamp(),
            nm_usuario_cancelamento = nm_usuario_p,
            dt_suspensao = clock_timestamp(),
            nm_usuario_susp = nm_usuario_p
    where	  nr_sequencia		= nr_seq_processo_w;
  end if;
end if;

if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE suspender_prescr_mat_hor ( nr_sequencia_p bigint, nm_usuario_p text, nr_seq_motivo_susp_p bigint, ds_motivo_susp_p text, ie_evento_duplicidade_p text, ds_observacao_p text) FROM PUBLIC;

