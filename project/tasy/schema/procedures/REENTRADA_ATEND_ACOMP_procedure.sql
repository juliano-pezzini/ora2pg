-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE reentrada_atend_acomp ( nr_atendimento_p bigint, dt_acompanhante_p timestamp, nm_usuario_p text ) AS $body$
DECLARE


nm_acompanhante_w		atendimento_acompanhante.nm_acompanhante%type;
ds_observacao_w			atendimento_acompanhante.ds_observacao%type;
cd_pessoa_fisica_w		atendimento_acompanhante.cd_pessoa_fisica%type;
nr_identidade_w			atendimento_acompanhante.nr_identidade%type;
nr_telefone_w			atendimento_acompanhante.nr_telefone%type;
nr_controle_w			varchar(20);
nr_novo_controle_w		numeric(20);
ie_controle_ant_w		varchar(1);
ie_novo_controle_w		varchar(1);
nr_seq_tipo_w			atendimento_acompanhante.nr_seq_tipo%type;
nr_controle_unico_w		varchar(2);

BEGIN

ie_controle_ant_w := Obter_param_Usuario(8014, 80, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_controle_ant_w);
ie_novo_controle_w := Obter_param_Usuario(8014, 92, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_novo_controle_w);
nr_controle_unico_w := Obter_Param_Usuario(8014, 119, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, nr_controle_unico_w);

SELECT 	nm_acompanhante,
	ds_observacao,
	cd_pessoa_fisica,
	nr_identidade,
	nr_telefone,
	nr_controle,
	nr_seq_tipo
INTO STRICT	nm_acompanhante_w,
	ds_observacao_w,
	cd_pessoa_fisica_w,
	nr_identidade_w,
	nr_telefone_w,
	nr_controle_w,
	nr_seq_tipo_w
FROM	atendimento_acompanhante
WHERE	nr_atendimento  = nr_atendimento_p		
AND	dt_acompanhante = dt_acompanhante_p;

begin

	if (nr_controle_unico_w = 'S') then
		select	nextval('controle_visita_unico_seq')
		into STRICT	nr_novo_controle_w
		;
	else
	
		SELECT 	coalesce(MAX((REGEXP_replace(nr_controle, '[^[:digit:]]', ''))::numeric ),0) + 1
		into STRICT 	nr_novo_controle_w
		from 	atendimento_acompanhante;

	end if;	

exception
when others then
	nr_novo_controle_w := nr_controle_w;
end;

insert into atendimento_acompanhante(	
		nr_atendimento,
		dt_acompanhante,
		nr_acompanhante,
		dt_atualizacao,
		nm_usuario,
		nm_acompanhante,
		ds_observacao,
		cd_pessoa_fisica,
		dt_saida,
		nr_identidade,
		nr_telefone,
		nr_controle,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_seq_tipo
		)
values
		(
		nr_atendimento_p,
		clock_timestamp(),
		(SELECT (coalesce(max(nr_acompanhante),0)+ 1) from atendimento_acompanhante where nr_atendimento = nr_atendimento_p) ,
		clock_timestamp(),
		nm_usuario_p,
		nm_acompanhante_w,
		ds_observacao_w,
		cd_pessoa_fisica_w,
		null,
		nr_identidade_w,
		nr_telefone_w,
		CASE WHEN coalesce(ie_controle_ant_w,'N')='S' THEN null  ELSE CASE WHEN ie_novo_controle_w='N' THEN nr_controle_w WHEN ie_novo_controle_w='S' THEN nr_novo_controle_w END  END ,
		clock_timestamp(),
		nm_usuario_p,
		nr_seq_tipo_w
		);
		
commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE reentrada_atend_acomp ( nr_atendimento_p bigint, dt_acompanhante_p timestamp, nm_usuario_p text ) FROM PUBLIC;

