-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_titulo_reembolso ( nr_seq_reembolso_p bigint, dt_vencimento_p timestamp, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE

				 
/* 
 
ESSA PROCEDURE NÃO É MAIS UTILIZADA, VERIFICAR A PLS_GERAR_TITULO_PROT_REEMB 
 
*/
				 
 
 
vl_reembolso_w			double precision;
cd_moeda_w			integer;
pr_juros_padrao_w		double precision;
pr_multa_padrao_w		double precision;
cd_tipo_taxa_juros_w		bigint;
cd_tipo_taxa_multa_w		bigint;
cd_pessoa_fisica_w		varchar(10);
cd_cgc_w			varchar(14);
nr_titulo_w			bigint;
dt_referencia_w			timestamp;
ie_mes_fechado_w		varchar(1);
ie_forma_pagamento_w		smallint;
ie_acao_venc_nao_util_w		varchar(1)	:= 'M';
cd_condicao_pagamento_w		bigint;
vl_titulo_w			double precision;
tx_fracao_parcela_w		double precision	:= 0;
tx_acrescimo_w			double precision	:= 0;
dt_vencimento_w			timestamp;
dt_base_venc_w			timestamp;
ie_tipo_resp_credito_w		varchar(2);
nr_seq_segurado_w		bigint;
nr_seq_trans_fin_baixa_reemb_w	bigint;
cd_cgc_estipulante_w		varchar(14);
cd_pf_estipulante_w		varchar(10);
nr_contrato_principal_w		bigint;
cd_conta_financ_w		bigint;
nr_seq_classif_w		bigint;
nr_seq_subestipulante_w		bigint;
nr_seq_titular_w		bigint;

C01 CURSOR FOR 
	SELECT	tx_fracao_parcela,	/* A Prazo  */
 
		coalesce(tx_acrescimo,0), 
		Obter_data_vencimento(	dt_base_venc_w, 
					qt_dias_parcela, 
					cd_estabelecimento_p, 
					ie_corrido_util, 
					ie_acao_venc_nao_util_w) 
	from	parcela 
	where	cd_condicao_pagamento 	= cd_condicao_pagamento_w 
	and	ie_forma_pagamento_w	<> 1 
	
UNION
 
	SELECT	100, /* A Vista  */
	 
		0,	 
		dt_base_venc_w 
	 
	where	ie_forma_pagamento_w	= 1;
	

BEGIN 
 
dt_base_venc_w	:= dt_vencimento_p;
 
select 	trunc(dt_referencia,'dd'), 
	substr(pls_obter_valor_reembolso(nr_sequencia,'LQ'),1,100), 
	substr(pls_obter_dados_segurado(nr_seq_segurado,'PF'),1,10), 
	cd_condicao_pagamento, 
	ie_tipo_resp_credito, 
	nr_seq_segurado 
into STRICT	dt_referencia_w, 
	vl_reembolso_w, 
	cd_pessoa_fisica_w, 
	cd_condicao_pagamento_w, 
	ie_tipo_resp_credito_w, 
	nr_seq_segurado_w 
from 	pls_reembolso 
where	nr_sequencia = nr_seq_reembolso_p;
 
/* Obter dados do contrato */
 
begin 
select	b.cd_cgc_estipulante, 
	b.cd_pf_estipulante, 
	coalesce(b.nr_contrato_principal,0), 
	a.nr_seq_subestipulante 
into STRICT	cd_cgc_estipulante_w, 
	cd_pf_estipulante_w, 
	nr_contrato_principal_w, 
	nr_seq_subestipulante_w 
from	pls_contrato	b, 
	pls_segurado	a 
where	a.nr_sequencia		= nr_seq_segurado_w 
and	a.nr_seq_contrato	= b.nr_sequencia;
exception 
	when others then 
	cd_cgc_estipulante_w	:= '';
	cd_pf_estipulante_w	:= '';
end;
 
if (ie_tipo_resp_credito_w = 'P') then 
	select	a.cd_pessoa_fisica, 
		a.cd_cgc 
	into STRICT	cd_pessoa_fisica_w, 
		cd_cgc_w 
	from	pls_contrato_pagador a, 
		pls_segurado b 
	where	a.nr_sequencia = b.nr_seq_pagador 
	and	b.nr_sequencia = nr_seq_segurado_w;
elsif (ie_tipo_resp_credito_w = 'E') then 
	cd_pessoa_fisica_w	:= cd_pf_estipulante_w;
	cd_cgc_w		:= cd_cgc_estipulante_w;
elsif (ie_tipo_resp_credito_w = 'CP') and (nr_contrato_principal_w > 0) then 
	select	cd_cgc_estipulante, 
		cd_pf_estipulante 
	into STRICT	cd_cgc_w, 
		cd_pessoa_fisica_w 
	from	pls_contrato 
	where	nr_sequencia	= nr_contrato_principal_w;
elsif (ie_tipo_resp_credito_w = 'SE') then 
	begin 
	select	cd_pessoa_fisica, 
		cd_cgc 
	into STRICT	cd_pessoa_fisica_w, 
		cd_cgc_w 
	from	pls_sub_estipulante 
	where	nr_sequencia	= nr_seq_subestipulante_w;
	exception 
		when others then 
		cd_pessoa_fisica_w	:= '';
		cd_cgc_w		:= '';
	end;
elsif (ie_tipo_resp_credito_w = 'T') then 
	select	coalesce(nr_seq_titular, 0) 
	into STRICT	nr_seq_titular_w 
	from	pls_segurado 
	where	nr_sequencia	= nr_seq_segurado_w;
	if (nr_seq_titular_w	<> 0) then 
		select	cd_pessoa_fisica 
		into STRICT	cd_pessoa_fisica_w 
		from	pls_segurado 
		where	nr_seq_titular	= nr_seq_titular_w;
	elsif (nr_seq_titular_w	= 0) then 
		select	cd_pessoa_fisica 
		into STRICT	cd_pessoa_fisica_w 
		from	pls_segurado 
		where	nr_sequencia	= nr_seq_segurado_w;
	end if;
	cd_cgc_w	:= '';
end if;
 
select	pls_obter_se_mes_fechado(dt_referencia_w,'T', cd_estabelecimento_p) 
into STRICT	ie_mes_fechado_w
;
 
if (ie_mes_fechado_w = 'S') then 
	--R.aise_application_error(-20011,'Não é possível realizar esta operação pois o mês de competência ou a contabilidade do mês está fechada!'); 
	CALL wheb_mensagem_pck.exibir_mensagem_abort(267408);
end if;
 
select	cd_moeda_padrao 
into STRICT	cd_moeda_w 
from	parametros_contas_pagar 
where	cd_estabelecimento = cd_estabelecimento_p;
 
select	coalesce(max(ie_forma_pagamento),3), 
	coalesce(max(ie_acao_nao_util),'M') 
into STRICT	ie_forma_pagamento_w, 
	ie_acao_venc_nao_util_w 
from	condicao_pagamento 
where	cd_condicao_pagamento = cd_condicao_pagamento_w 
and	ie_situacao      = 'A';
 
begin 
select	cd_tipo_taxa_juro, 
	pr_juro_padrao, 
	cd_tipo_taxa_multa, 
	pr_multa_padrao, 
	nr_seq_trans_fin_baixa_reemb, 
	cd_conta_financ_reembolso 
into STRICT	cd_tipo_taxa_juros_w, 
	pr_juros_padrao_w, 
	cd_tipo_taxa_multa_w, 
	pr_multa_padrao_w, 
	nr_seq_trans_fin_baixa_reemb_w, 
	cd_conta_financ_w 
from	pls_parametros 
where	cd_estabelecimento = cd_estabelecimento_p;
exception 
when others then 
	--R.aise_application_error(-20011,'Problema na leitura dos parâmetros na função OPS - Gestão de Operadoras. [' || cd_estabelecimento_p || '] #@#@'); 
	CALL wheb_mensagem_pck.exibir_mensagem_abort(267409);
end;
 
open c01;
loop 
fetch c01 into 
	tx_fracao_parcela_w, 
	tx_acrescimo_w, 
	dt_vencimento_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	if (coalesce(tx_fracao_parcela_w,0) > 0) then 
		vl_titulo_w 	:= ((vl_reembolso_w * tx_fracao_parcela_w) / 100);
	end if;
		 
	if (tx_acrescimo_w <> 0) then 
		vl_titulo_w 	:= vl_titulo_w + ((vl_titulo_w * tx_acrescimo_w) / 100);
	end if;
		 
	select	nextval('titulo_pagar_seq') 
	into STRICT	nr_titulo_w 
	;
		 
	insert into titulo_pagar(	NR_TITULO, 
					CD_ESTABELECIMENTO, 
					DT_ATUALIZACAO, 
					NM_USUARIO, 
					DT_EMISSAO, 
					DT_VENCIMENTO_ORIGINAL, 
					DT_VENCIMENTO_ATUAL, 
					VL_TITULO, 
					VL_SALDO_TITULO, 
					VL_SALDO_JUROS, 
					VL_SALDO_MULTA, 
					CD_MOEDA, 
					TX_JUROS, 
					TX_MULTA, 
					CD_TIPO_TAXA_JURO, 
					CD_TIPO_TAXA_MULTA, 
					IE_SITUACAO, 
					IE_ORIGEM_TITULO, 
					IE_TIPO_TITULO, 
					CD_PESSOA_FISICA, 
					CD_CGC, 
					IE_PLS, 
					NR_SEQ_REEMBOLSO, 
					NR_SEQ_TRANS_FIN_BAIXA, 
					ie_status) 
				values (	nr_titulo_w, 
					cd_estabelecimento_p, 
					clock_timestamp(), 
					nm_usuario_p, 
					clock_timestamp(), 
					dt_vencimento_w, 
					dt_vencimento_w, 
					vl_titulo_w, 
					vl_titulo_w, 
					0, 
					0, 
					cd_moeda_w, 
					pr_juros_padrao_w, 
					pr_multa_padrao_w, 
					cd_tipo_taxa_juros_w, 
					cd_tipo_taxa_multa_w, 
					'A', 
					'6', 
					'10', 
					cd_pessoa_fisica_w, 
					cd_cgc_w, 
					'S', 
					nr_seq_reembolso_p, 
					nr_seq_trans_fin_baixa_reemb_w, 
					'D');
				CALL ATUALIZAR_INCLUSAO_TIT_PAGAR(nr_titulo_w,nm_usuario_p);
	 
	select	coalesce(max(nr_sequencia),0) + 1 
	into STRICT	nr_seq_classif_w 
	from	titulo_pagar_classif 
	where	nr_titulo	= nr_titulo_w;
	 
	insert into titulo_pagar_classif(	dt_atualizacao, 
						nm_usuario, 
						nr_seq_conta_financ, 
						nr_sequencia, 
						nr_titulo, 
						vl_acrescimo, 
						vl_desconto, 
						vl_original, 
						vl_titulo) 
					values (	clock_timestamp(), 
						nm_usuario_p, 
						cd_conta_financ_w, 
						nr_seq_classif_w, 
						nr_titulo_w, 
						0, 
						0, 
						vl_titulo_w, 
						vl_titulo_w);
					 
	update	pls_reembolso 
	set	nr_titulo = nr_titulo_w, 
		dt_atualizacao = clock_timestamp(), 
		nm_usuario = nm_usuario_p 
	where	nr_sequencia = nr_seq_reembolso_p;
end loop;
close c01;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_titulo_reembolso ( nr_seq_reembolso_p bigint, dt_vencimento_p timestamp, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

