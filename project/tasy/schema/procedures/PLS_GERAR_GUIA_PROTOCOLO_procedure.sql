-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_guia_protocolo ( nr_seq_protocolo_p bigint, cd_guia_p text, nr_seq_prestador_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_guia_w			bigint;
ie_tipo_guia_w			varchar(2);
nr_seq_segurado_w		bigint;
cd_estabelecimento_w		smallint;
nr_seq_conta_w			bigint;
nr_seq_protocolo_w		bigint;
nr_seq_outorgante_w		bigint;

/* Eder Jhoney da Silva - 12/06/2009
 Parametros utilizados ao inserir procedimentos na pls_conta_proc */
cd_procedimento_w		bigint;
cd_procedimento_imp_w		bigint;
cd_tipo_tabela_imp_w		varchar(10);
dt_liberacao_w			timestamp;
ie_cobranca_prevista_w		varchar(1);
ie_origem_proced_w		bigint;
nr_seq_regra_liberacao_w	bigint;

/* Eder Jhoney da Silva - 12/06/2009
 Parametros utilizados ao inserir procedimentos na pls_conta_mat */
cd_material_imp_w		varchar(20);
nr_seq_material_w 		bigint;
cd_cooperativa_w		varchar(10);


C01 CURSOR FOR
	SELECT 	cd_procedimento,
		cd_procedimento_imp,
		cd_tipo_tabela_imp,
		dt_liberacao,
		ie_cobranca_prevista,
		ie_origem_proced,
		nr_seq_regra_liberacao
	from	pls_guia_plano_proc
	where	nr_seq_guia = nr_seq_guia_w;

C02 CURSOR FOR
	SELECT	cd_material_imp,
		dt_liberacao,
		nr_seq_material
	from	pls_guia_plano_mat
	where	nr_seq_guia = nr_seq_guia_w;



BEGIN
select	ie_tipo_guia,
	nr_seq_segurado,
	cd_estabelecimento,
	nr_sequencia,
	substr(obter_cooperativa_benef(nr_seq_segurado,cd_estabelecimento),1,4)
into STRICT	ie_tipo_guia_w,
	nr_seq_segurado_w,
	cd_estabelecimento_w,
	nr_seq_guia_w,
	cd_cooperativa_w
from    pls_guia_plano
where   cd_guia = cd_guia_p;

select	nextval('pls_conta_seq')
into STRICT	nr_seq_conta_w
;

if (ie_tipo_guia_w = '1' or ie_tipo_guia_w = '8') then
	ie_tipo_guia_w := '5';
elsif (ie_tipo_guia_w = '2') then
	ie_tipo_guia_w := '4';
end if;

if (nr_seq_protocolo_p IS NOT NULL AND nr_seq_protocolo_p::text <> '') then
	nr_seq_protocolo_w := nr_seq_protocolo_p;
else
	select	nextval('pls_protocolo_conta_seq')
	into STRICT	nr_seq_protocolo_w
	;

	select  nr_sequencia
	into STRICT	nr_seq_outorgante_w
	from    pls_outorgante
	where   cd_estabelecimento = cd_estabelecimento_w;

	insert into pls_protocolo_conta(nr_sequencia, dt_mes_competencia, dt_protocolo,
		nr_seq_prestador, ie_tipo_guia, ie_status,
		dt_atualizacao, dt_atualizacao_nrec, nm_usuario,
		nm_usuario_nrec, cd_estabelecimento, ie_situacao,
		nr_seq_outorgante, ie_tipo_protocolo, ie_origem_protocolo)
	values (	nr_seq_protocolo_w, clock_timestamp(), clock_timestamp(),
		nr_seq_prestador_p, ie_tipo_guia_w, '1',
		clock_timestamp(), clock_timestamp(), nm_usuario_p,
		nm_usuario_p, cd_estabelecimento_w, 'DW',
		nr_seq_outorgante_w, 'C', 'D');
end if;

insert into pls_conta(nr_sequencia, cd_guia, ie_tipo_guia,
	nr_seq_segurado, nr_seq_prestador_exec, ie_status,
	dt_atualizacao, dt_atualizacao_nrec, nm_usuario,
	nm_usuario_nrec, nr_seq_protocolo, cd_estabelecimento,
	cd_cooperativa, ie_origem_conta)
values (	nr_seq_conta_w, cd_guia_p, ie_tipo_guia_w,
	nr_seq_segurado_w, nr_seq_prestador_p, 'U',
	clock_timestamp(), clock_timestamp(), nm_usuario_p,
	nm_usuario_p, nr_seq_protocolo_w, cd_estabelecimento_w,
	cd_cooperativa_w, 'D');

open C01;
loop
fetch C01 into
	cd_procedimento_w,
	cd_procedimento_imp_w,
	cd_tipo_tabela_imp_w,
	dt_liberacao_w,
	ie_cobranca_prevista_w,
	ie_origem_proced_w,
	nr_seq_regra_liberacao_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	insert into pls_conta_proc(nr_sequencia, nr_seq_conta, ie_situacao,
		ie_status, nm_usuario, nm_usuario_nrec,
		dt_atualizacao, dt_atualizacao_nrec, cd_procedimento_imp,
		cd_procedimento, cd_tipo_tabela_imp, dt_liberacao,
		ie_cobranca_prevista, ie_origem_proced, nr_seq_regra_liberacao)
	values (	nextval('pls_conta_proc_seq'), nr_seq_conta_w, 'D',
		'U', nm_usuario_p, nm_usuario_p,
		clock_timestamp(), clock_timestamp(), cd_procedimento_imp_w,
		cd_procedimento_w, cd_tipo_tabela_imp_w, dt_liberacao_w,
		ie_cobranca_prevista_w, ie_origem_proced_w, nr_seq_regra_liberacao_w);
	end;
end loop;
close C01;

open C02;
loop
fetch C02 into
	cd_material_imp_w,
	dt_liberacao_w,
	nr_seq_material_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin
	insert into pls_conta_mat(nr_sequencia, nr_seq_conta, ie_situacao,
		ie_status, nm_usuario, nm_usuario_nrec,
		dt_atualizacao, dt_atualizacao_nrec, cd_material_imp,
		dt_liberacao, nr_seq_material)
	values (	nextval('pls_conta_mat_seq'), nr_seq_conta_w, 'D',
		'U', nm_usuario_p, nm_usuario_p,
		clock_timestamp(), clock_timestamp(), cd_material_imp_w,
		dt_liberacao_w, nr_seq_material_w);
	end;
end loop;
close C02;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_guia_protocolo ( nr_seq_protocolo_p bigint, cd_guia_p text, nr_seq_prestador_p bigint, nm_usuario_p text) FROM PUBLIC;

