-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE estornar_transacao_aplicacao ( nr_seq_aplicacao_p bigint, nm_usuario_p text, dt_estorno_p timestamp default clock_timestamp()) AS $body$
DECLARE


ie_estorno_w		varchar(1);
nr_seq_movto_w		bigint;
cd_estabelecimento_w	smallint;
nr_seq_movto_transf_bco_w	movto_trans_financ.nr_seq_movto_transf_bco%type;
nr_sequencia_movto_w		movto_trans_financ.nr_sequencia%type;
nr_seq_movto_update_w		movto_trans_financ.nr_sequencia%type;
dt_estorno_w			timestamp;

c01 CURSOR FOR
SELECT	nr_sequencia,
	cd_estabelecimento,
		nr_seq_movto_transf_bco
from 	movto_trans_financ
where	nr_seq_aplicacao = nr_seq_aplicacao_p
and coalesce(ie_estorno::text, '') = ''
and nr_sequencia not in (
  SELECT	nr_seq_movto_orig
  from 	movto_trans_financ
  where	nr_seq_aplicacao = nr_seq_aplicacao_p
  and (ie_estorno IS NOT NULL AND ie_estorno::text <> '')
)
order by nr_sequencia asc;


BEGIN

dt_estorno_w := dt_estorno_p;

if (coalesce(dt_estorno_w::text, '') = '') then
    dt_estorno_w := clock_timestamp();
end if;

select	coalesce(max(ie_estorno),'N')
into STRICT	ie_estorno_w
from	banco_aplicacao
where	nr_sequencia = nr_seq_aplicacao_p;

if (coalesce(ie_estorno_w,'N') = 'N') then
	begin

	open c01;
	loop
	fetch	c01 into
		nr_seq_movto_w,
		cd_estabelecimento_w,
		nr_seq_movto_transf_bco_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		
		/*Inicio OS 1294839 Quando gera aplicacao, primeiro lança movto de Saída na conta X, e depois  movto de Entrada na conta Y, e é vinculado movto o de saida na conta Y no movto de entrada gerado na conta  X através do NR_SEQ_MOVTO_TRANSF_BCO. 
		No estorno dessa aplicacao, tb deve vincular para poder contabilizar agrupado por esse atributo NR_SEQ_MOVTO_TRANSF_BCO
		NÂO MUDAR A ORDEM DESSE SELECT , deve ser exatamente antes da proc estornar_movto_banco*/
		if (nr_seq_movto_transf_bco_w IS NOT NULL AND nr_seq_movto_transf_bco_w::text <> '') then
				/*Buscar a a seq da movto_trans_financ que vai ser atualizada. Se tiver movto_transf_bco, indica que agora está estornando o movto de entrada da aplicao*/

				select	max(a.nr_sequencia)
				into STRICT	nr_sequencia_movto_w
				from	movto_trans_financ a
				where	a.nr_seq_aplicacao 	= nr_seq_aplicacao_p
				and		a.ie_estorno		= 'E';
				
		end if;
		/*FIM OS 1294839 19/01/2017*/

		CALL estornar_movto_banco(cd_estabelecimento_w,
					nr_seq_movto_w,
					dt_estorno_w,
					nm_usuario_p,
					'N');
		
		/*Inicio OS 1294839 */
	
		/*Não mudar a ordem desse select , deve ser exatamente depois da proc estornar_movto_banco*/

		if ( coalesce(nr_sequencia_movto_w,0) <> 0 ) then
			/*Buscar a movto de estorno gerado para a aplicacao*/

			select	max(a.nr_sequencia)
			into STRICT	nr_seq_movto_update_w
			from	movto_trans_financ a
			where	a.nr_seq_aplicacao 	= nr_seq_aplicacao_p
			and		a.ie_estorno		= 'E'
			and		a.nr_sequencia	<> nr_sequencia_movto_w;
			
			if (coalesce(nr_seq_movto_update_w,0) <> 0) then
			
				update	movto_trans_financ a
				set		a.nr_seq_movto_transf_bco = nr_sequencia_movto_w
				where	a.nr_sequencia			= nr_seq_movto_update_w
				and		a.nr_seq_aplicacao		= nr_seq_aplicacao_p
				and		a.ie_estorno			= 'E';
			
			end if;
		
		end if;
		/*FIM OS 1294839 19/01/2017*/
			
		end;
	end loop;
	
	update	banco_aplicacao
	set	ie_estorno = 'S',
		dt_atualizacao = clock_timestamp(),
		nm_usuario = nm_usuario_p
	where	nr_sequencia = nr_seq_aplicacao_p;
	
	commit;
	
	end;
end if;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE estornar_transacao_aplicacao ( nr_seq_aplicacao_p bigint, nm_usuario_p text, dt_estorno_p timestamp default clock_timestamp()) FROM PUBLIC;

