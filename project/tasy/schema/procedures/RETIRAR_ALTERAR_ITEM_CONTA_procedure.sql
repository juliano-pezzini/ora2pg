-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE retirar_alterar_item_conta (nr_sequencia_p bigint, ie_procmat_p bigint, nr_interno_conta_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
cd_convenio_orig_w		integer;
cd_convenio_dest_w		integer;
cd_categoria_dest_w		varchar(10);
ie_ajustar_periodo_conta_w	varchar(1);
cd_estab_dest_w			smallint;
qt_fora_periodo_w		bigint;
dt_max_conta_w			timestamp;
dt_min_conta_w			timestamp;
dt_periodo_inicial_w		timestamp;
dt_periodo_final_w		timestamp;
nr_interno_conta_w		bigint;
nr_atendimento_w		bigint;
ie_tipo_atendimento_w		smallint;
ie_periodo_inicial_seg_w		varchar(1);
dt_alta_w			timestamp;
dt_mesano_referencia_w		timestamp;
				

BEGIN 
 
if (nr_interno_conta_p <> 0) then 
	nr_interno_conta_w := nr_interno_conta_p;
else 
	if (ie_procmat_p = 1) then 
		select	coalesce(a.cd_convenio,0), 
			a.cd_categoria, 
			coalesce(b.cd_estabelecimento,0), 
			coalesce(c.ie_tipo_atendimento,0), 
			coalesce(c.nr_atendimento,0), 
			c.dt_alta 
		into STRICT	cd_convenio_dest_w, 
			cd_categoria_dest_w, 
			cd_estab_dest_w, 
			ie_tipo_atendimento_w, 
			nr_atendimento_w, 
			dt_alta_w 
		from	procedimento_paciente a, 
			conta_paciente b, 
			atendimento_paciente c 
		where	a.nr_interno_conta = b.nr_interno_conta 
		and	b.nr_atendimento = c.nr_atendimento 
		and	a.nr_sequencia = nr_sequencia_p;	
	else 
		select	coalesce(a.cd_convenio,0), 
			a.cd_categoria, 
			coalesce(b.cd_estabelecimento,0), 
			coalesce(c.ie_tipo_atendimento,0), 
			coalesce(c.nr_atendimento,0), 
			c.dt_alta 
		into STRICT	cd_convenio_dest_w, 
			cd_categoria_dest_w, 
			cd_estab_dest_w, 
			ie_tipo_atendimento_w, 
			nr_atendimento_w, 
			dt_alta_w 
		from	material_atend_paciente a, 
			conta_paciente b, 
			atendimento_paciente c 
		where	a.nr_interno_conta = b.nr_interno_conta 
		and	b.nr_atendimento = c.nr_atendimento 
		and	a.nr_sequencia = nr_sequencia_p;	
	end if;
	 
	select	coalesce(max(ie_periodo_inicial_seg),'N') 
	into STRICT	ie_periodo_inicial_seg_w 
	from	convenio_estabelecimento 
	where	cd_convenio = cd_convenio_dest_w 
	and	cd_estabelecimento = cd_estab_dest_w;
	 
	if (ie_periodo_inicial_seg_w = 'S') then 
		select	max(dt_periodo_inicial) + 1/86400 
		into STRICT	dt_periodo_inicial_w 
		from	conta_paciente 
		where	nr_atendimento = nr_atendimento_w;
	else 
		select	max(dt_periodo_inicial) 
		into STRICT	dt_periodo_inicial_w 
		from	conta_paciente 
		where	nr_atendimento = nr_atendimento_w;
	end if;
	 
	if (coalesce(dt_periodo_inicial_w::text, '') = '') then 
		select	dt_entrada 
		into STRICT	dt_periodo_inicial_w 
		from	atendimento_paciente 
		where	nr_atendimento = nr_atendimento_w;
	end if;
	 
	dt_periodo_final_w	:= obter_data_final_conta(dt_periodo_inicial_w, dt_alta_w, cd_convenio_dest_w, cd_estab_dest_w);
	 
	select	dt_ref_valida 
	into STRICT	dt_mesano_referencia_w 
	from	convenio 
	where	cd_convenio = cd_convenio_dest_w;
	 
	select	nextval('conta_paciente_seq') 
	into STRICT	nr_interno_conta_w 
	;
	 
	insert into conta_paciente( 
		nr_interno_conta, 
		nr_atendimento, 
		dt_acerto_conta, 
		dt_mesano_referencia, 
		ie_status_acerto, 
		dt_periodo_inicial, 
		dt_periodo_final, 
		dt_atualizacao, 
		nm_usuario, 
		cd_convenio_parametro, 
		cd_categoria_parametro, 
		cd_convenio_calculo, 
		cd_categoria_calculo, 
		cd_estabelecimento, 
		ie_tipo_atend_conta) 
	values ( 
		nr_interno_conta_w, 
		nr_atendimento_w, 
		clock_timestamp(), 
		dt_mesano_referencia_w, 
		1, 
		dt_periodo_inicial_w, 
		dt_periodo_final_w, 
		clock_timestamp(), 
		nm_usuario_p, 
		cd_convenio_dest_w, 
		cd_categoria_dest_w, 
		cd_convenio_dest_w, 
		cd_categoria_dest_w, 
		cd_estab_dest_w, 
		ie_tipo_atendimento_w);
end if;
 
select 	coalesce(max(cd_convenio_parametro),0), 
	coalesce(max(cd_categoria_parametro),0), 
	coalesce(max(cd_estabelecimento),0), 
	coalesce(max(dt_periodo_inicial),clock_timestamp()), 
	coalesce(max(dt_periodo_final),clock_timestamp()) 
into STRICT	cd_convenio_dest_w, 
	cd_categoria_dest_w, 
	cd_estab_dest_w, 
	dt_periodo_inicial_w, 
	dt_periodo_final_w 
from 	conta_paciente 
where 	nr_interno_conta = nr_interno_conta_w;
 
select	coalesce(max(ie_ajustar_periodo_conta),'N') 
into STRICT	ie_ajustar_periodo_conta_w 
from	convenio_estabelecimento 
where	cd_convenio		= cd_convenio_dest_w 
and	cd_estabelecimento	= cd_estab_dest_w;
 
if (coalesce(ie_ajustar_periodo_conta_w,'N') = 'S') then 
 
	select 	count(*) 
	into STRICT	qt_fora_periodo_w 
	from 	conta_paciente_v a 
	where 	a.nr_interno_conta = nr_interno_conta_w 
	and 	not(coalesce(a.dt_conta,a.dt_item) between dt_periodo_inicial_w and dt_periodo_final_w);
 
	if (qt_fora_periodo_w > 0) then 
		select 	max(dt_conta), 
			min(dt_conta) 
		into STRICT	dt_max_conta_w, 
			dt_min_conta_w 
		from 	conta_paciente_v 
		where 	nr_interno_conta = nr_interno_conta_w;
	 
		update	conta_paciente 
		set	dt_periodo_inicial = dt_min_conta_w, 
			dt_periodo_final = dt_max_conta_w 
		where 	nr_interno_conta = nr_interno_conta_w;
	end if;
	 
end if;
 
if (ie_procmat_p = 1) then 
	delete	from auditoria_propaci 
	where	nr_seq_propaci = nr_sequencia_p;
	 
	select 	coalesce(max(a.cd_convenio_parametro),0) 
	into STRICT	cd_convenio_orig_w 
	from 	conta_paciente a, 
		procedimento_paciente b 
	where 	a.nr_interno_conta = b.nr_interno_conta 
	and 	b.nr_sequencia = nr_sequencia_p;
	 
	update	procedimento_paciente 
	set	nr_interno_conta	= nr_interno_conta_w, 
		nm_usuario		= nm_usuario_p, 
		dt_atualizacao		= clock_timestamp(), 
		ie_auditoria		= 'N', 
		cd_convenio		= cd_convenio_dest_w, 
		cd_categoria		= cd_categoria_dest_w 
	where	nr_sequencia		= nr_sequencia_p;	
	 
	if (cd_convenio_orig_w <> cd_convenio_dest_w) then 
		CALL atualiza_preco_procedimento(nr_sequencia_p, cd_convenio_dest_w, nm_usuario_p);
	end if;
	 
else 
	delete	from auditoria_matpaci 
	where	nr_seq_matpaci = nr_sequencia_p;
	 
	select 	coalesce(max(a.cd_convenio_parametro),0) 
	into STRICT	cd_convenio_orig_w 
	from 	conta_paciente a, 
		material_atend_paciente b 
	where 	a.nr_interno_conta = b.nr_interno_conta 
	and 	b.nr_sequencia = nr_sequencia_p;
 
	update	material_atend_paciente 
	set	nr_interno_conta	= nr_interno_conta_w, 
		nm_usuario		= nm_usuario_p, 
		dt_atualizacao		= clock_timestamp(), 
		ie_auditoria		= 'N', 
		cd_convenio		= cd_convenio_dest_w, 
		cd_categoria		= cd_categoria_dest_w 
	where	nr_sequencia		= nr_sequencia_p;
 
	if (cd_convenio_orig_w <> cd_convenio_dest_w) then 
		CALL atualiza_preco_material(nr_sequencia_p, nm_usuario_p);
	end if;
	 
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE retirar_alterar_item_conta (nr_sequencia_p bigint, ie_procmat_p bigint, nr_interno_conta_p bigint, nm_usuario_p text) FROM PUBLIC;

