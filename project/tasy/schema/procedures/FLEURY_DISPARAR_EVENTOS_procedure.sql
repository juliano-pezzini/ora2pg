-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE fleury_disparar_eventos ( nr_ficha_p bigint, nr_prescricao_p bigint, nr_seq_prescr_p bigint, cd_unidade_p text, cd_exame_p text, nm_usuario_p text) AS $body$
DECLARE

 
nr_prescricao_w			prescr_medica.nr_prescricao%type;
cd_estabelecimento_w	prescr_medica.cd_estabelecimento%type;

nr_seq_prescr_w			prescr_procedimento.nr_sequencia%type;

nm_exame_w				exame_laboratorio.nm_exame%type;
nr_seq_exame_w			exame_laboratorio.nr_seq_exame%type;

nr_seq_material_w		exame_lab_result_item.nr_seq_material%type;
cd_medico_resp_w		exame_lab_result_item.cd_medico_resp%type;
dt_aprovacao_w			exame_lab_result_item.dt_aprovacao%type;

ds_resultado_w			varchar(2000);
ds_result_fleury_w		varchar(4000);

ie_agrupa_w				varchar(1);
ie_existe_param_maq_w	varchar(1);
ie_valor_nao_aceit_w	varchar(1);
ie_existe_w				varchar(1)	:= 'N';
nr_atendimento_w		bigint;

c01 CURSOR FOR 
	SELECT	b.nr_seq_exame, 
			b.nr_seq_material, 
			b.ds_resultado, 
			b.qt_resultado, 
			b.pr_resultado 
	from	exame_lab_resultado a, 
			exame_lab_result_item b 
	where	a.nr_seq_resultado = b.nr_seq_resultado 
	and		a.nr_prescricao = nr_prescricao_w 
	and		b.nr_seq_prescr = nr_seq_prescr_w;

c02 CURSOR FOR 
	SELECT	a.nr_seq_evento 
	from	regra_envio_sms a 
	where	a.ie_evento_disp = 'APRNAF' 
	and	coalesce(a.ie_situacao,'A') = 'A' 
	and	obter_se_regra_envio(a.nr_sequencia,nr_atendimento_w) = 'S';
	
c01_w	c01%rowtype;
c02_w	c02%rowtype;
	

BEGIN 
 
select	fleury_obter_dados_unidade(cd_unidade_p, 'AF'), 
		--fleury_obter_dados_unidade(cd_unidade_p, 'GA'), 
		fleury_obter_dados_unidade(cd_unidade_p, 'E') 
into STRICT	ie_agrupa_w, 
		--ie_gera_analito_w, 
		cd_estabelecimento_w
;
 
if	(nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '' AND nr_prescricao_p > 0) then 
 
	nr_prescricao_w		:=	nr_prescricao_p;
 
else 
 
	if (ie_agrupa_w <> 'N') then 
	 
		select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END  
		into STRICT	ie_existe_param_maq_w 
		from	lab_param_maquina a 
		where	a.cd_estabelecimento = cd_estabelecimento_w;
	 
		if (ie_existe_param_maq_w = 'S') then 
			select	max(a.nr_prescricao) 
			into STRICT	nr_prescricao_w 
			from ( 
					SELECT	a.nr_prescricao, 
							substr(lab_obter_parametro(cd_estabelecimento_w, a.nr_prescricao, null, 'UF'),1,255) cd_unidade_fleury 
					from	prescr_procedimento a 
					where	a.nr_controle_ext = nr_ficha_p 
					) a 
			where	a.cd_unidade_fleury = cd_unidade_p;
		else 
			select	max(a.nr_prescricao) 
			into STRICT	nr_prescricao_w 
			from	prescr_procedimento a, 
					prescr_medica b 
			where	a.nr_prescricao = b.nr_prescricao 
			and		a.nr_controle_ext = nr_ficha_p 
			and		b.cd_estabelecimento = cd_estabelecimento_w;
		end if;
	else 
		select	max(a.nr_prescricao) 
		into STRICT	nr_prescricao_w 
		from	prescr_medica a 
		where	a.nr_controle = nr_ficha_p 
		and		a.cd_estabelecimento = cd_estabelecimento_w;
	end if;
 
end if;
 
if (coalesce(nr_prescricao_w::text, '') = '') then 
	select	max(a.nr_prescricao) 
	into STRICT	nr_prescricao_w 
	from	prescr_medica a, 
			prescr_procedimento b 
	where	a.nr_prescricao = b.nr_prescricao 
	and		(b.nr_seq_exame IS NOT NULL AND b.nr_seq_exame::text <> '') 
	and		a.cd_estabelecimento = cd_estabelecimento_w 
	and		coalesce(a.nr_controle,b.nr_controle_ext) = nr_ficha_p;
end if;
 
if (coalesce(nr_seq_prescr_p::text, '') = '') or (not nr_seq_prescr_p > 0) then 
	nr_seq_prescr_w := obter_seq_prescr_prescricao(nr_prescricao_w, 'FLEURY', cd_exame_p);
else 
	nr_seq_prescr_w	:= nr_seq_prescr_p;
end if;
 
nr_atendimento_w := obter_atendimento_prescr(nr_prescricao_w);
 
open c02;
loop 
fetch c02 into c02_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
	begin 
	ie_existe_w			:= 'N';
	ds_result_fleury_w	:= '';
	 
	open c01;
	loop 
	fetch c01 into c01_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
		begin 
		 
		ie_valor_nao_aceit_w := fleury_ver_nao_aceit_alert(nr_prescricao_w, nr_seq_prescr_w, c01_w.nr_seq_exame, c01_w.nr_seq_material, c01_w.ds_resultado, c01_w.qt_resultado, c01_w.pr_resultado, ie_valor_nao_aceit_w);
			 
		if (coalesce(ie_valor_nao_aceit_w,'N') = 'S') then 
			 
			if (coalesce(c01_w.qt_resultado,0) = 0) then 
				ds_resultado_w	:= to_char(coalesce(c01_w.pr_resultado,0));				
			else 
				ds_resultado_w	:= to_char(c01_w.qt_resultado);			
			end if;
			 
			if (ds_resultado_w = 0) then 
				ds_resultado_w	:= c01_w.ds_resultado;
			end if;
			 
			select	substr(obter_desc_exame(c01_w.nr_seq_exame),1,200) 
			into STRICT	nm_exame_w 
			;
			 
			ds_result_fleury_w	:= chr(13)||chr(10)||ds_result_fleury_w || nm_exame_w||'('||ds_resultado_w||')';
			 
			--gerar_ev_aprov_result_fleury(nr_seq_evento_w,:new.nm_usuario, nr_prescricao_w, :new.nr_seq_prescr, :new.nr_seq_exame, :new.nr_seq_material, :new.cd_medico_resp, :new.dt_aprovacao, 'S', ds_result_fleury_w); 
			ie_existe_w	:= 'S';
		end if;
		 
		end;
	end loop;
	close c01;
		 
	if (ie_existe_w = 'S') then	 
		 
		select	--max(a.nr_seq_exame), 
				max(c.nr_seq_material), 
				max(c.cd_medico_resp), 
				max(c.dt_aprovacao) 
		into	--nr_seq_exame_w, 
				nr_seq_material_w, 
				cd_medico_resp_w, 
				dt_aprovacao_w 
		from	prescr_procedimento a, 
				exame_lab_resultado b, 
				exame_lab_result_item c 
		where	a.nr_prescricao = b.nr_prescricao 
		and		a.nr_sequencia = c.nr_seq_prescr 
		and		b.nr_seq_resultado = c.nr_seq_resultado 
		--and		a.nr_seq_exame = c.nr_seq_exame 
		and		a.nr_prescricao = nr_prescricao_w 
		and		a.nr_sequencia	= nr_seq_prescr_w;
		 
		select	max(a.nr_seq_exame) 
		into STRICT	nr_seq_exame_w 
		from	prescR_procedimento a 
		where	a.nr_prescricao = nr_prescricao_w 
		and		a.nr_sequencia	= nr_seq_prescr_w;
	 
		if (length(ds_result_fleury_w) >= 3) then	 
			CALL gerar_ev_aprov_result_fleury(c02_w.nr_seq_evento, nm_usuario_p, nr_prescricao_w, nr_seq_prescr_w, nr_seq_exame_w, nr_seq_material_w, cd_medico_resp_w, dt_aprovacao_w, 'S', substr(ds_result_fleury_w,3,2000));
		else 
			CALL gerar_ev_aprov_result_fleury(c02_w.nr_seq_evento, nm_usuario_p, nr_prescricao_w, nr_seq_prescr_w, nr_seq_exame_w, nr_seq_material_w, cd_medico_resp_w, dt_aprovacao_w, 'S', ds_result_fleury_w);
		end if;
	end if;
		 
	end;
end loop;
close c02;
 
--commit; 
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE fleury_disparar_eventos ( nr_ficha_p bigint, nr_prescricao_p bigint, nr_seq_prescr_p bigint, cd_unidade_p text, cd_exame_p text, nm_usuario_p text) FROM PUBLIC;

