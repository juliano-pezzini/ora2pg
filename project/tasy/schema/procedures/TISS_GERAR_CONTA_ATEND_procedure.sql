-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE tiss_gerar_conta_atend ( nr_interno_conta_p bigint, nr_seq_med_fatur_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, nr_atend_med_p bigint, nr_seq_prot_med_p bigint) AS $body$
DECLARE


nr_atendimento_w		bigint;
nr_atendimento_med_w		bigint;
cd_estabelecimento_w		bigint;
dt_entrada_w			timestamp;
dt_alta_w			timestamp;
ie_tipo_atend_tiss_w		varchar(255);
nr_sequencia_w			bigint;
ie_tipo_internacao_w		bigint;
ie_regime_internacao_w		varchar(30);
ie_tipo_atendimento_w		integer;
ie_carater_internacao_w		varchar(30);
ie_tipo_acomodacao_w		varchar(30);
ie_tipo_acomod_aux_w		varchar(30);
ie_obstetrica_w			varchar(30);
cd_pessoa_fisica_w		varchar(30);
ie_data_entrada_w		varchar(10);
ie_regra_mascara_w		varchar(10);
ie_tipo_acomod_w		varchar(10);
nm_pessoa_fisica_w		varchar(100);
cd_senha_w			varchar(100);
nr_cartao_nac_sus_w		numeric(20);
cd_convenio_w			bigint;
cd_convenio_glosa_w		bigint;
cd_convenio_atend_w		bigint;
qt_nascimentos_w		bigint;
nr_seq_dnv_w			bigint;
qt_digitos_carteira_w		bigint;
ds_plano_w			varchar(100);				
dt_validade_carteira_w		timestamp;
dt_inicial_conta_w		timestamp;
cd_usuario_convenio_w		varchar(30);
cd_usuario_mascara_w		varchar(50);
ie_motivo_saida_w		varchar(30);
ie_aborto_nasc_w		varchar(3);
cd_cid_w			varchar(30)	:= null;
cd_cid_2_w			varchar(30)	:= null;
cd_cid_3_w			varchar(30)	:= null;
cd_cid_4_w			varchar(30)	:= null;
cd_cid_obito_w			varchar(30)	:= null;
nr_declaracao_obito_w		varchar(30);
ie_obito_mulher_w		varchar(30);
ie_gestacao_w			varchar(30);
ie_aborto_w			varchar(30);
ie_transtorno_w			varchar(30);
ie_complic_puerperio_w		varchar(30);
qt_obito_precoce_w		bigint;
qt_obito_tardio_w		bigint;
qt_nasc_vivo_w			bigint;
qt_nasc_morto_w			bigint;
qt_nasc_prematuro_w		bigint;
nr_dnv_w			varchar(255);
ie_complic_neonatal_w		varchar(30);
ie_baixo_peso_w			varchar(30);
ie_cesareo_w			varchar(30);
ie_normal_w			varchar(30);
ie_atend_rn_w			varchar(30);
ie_mascara_cid_w		varchar(3);
ds_tipo_fatur_w			varchar(30);
cd_cgc_hosp_w			varchar(20);
ds_razao_social_w		varchar(255);
cd_cnes_w			varchar(30);
ie_campo_boolean_w		varchar(3);
cd_doenca_w			varchar(30)	:= null;
ie_classif_doenca_w		varchar(30)	:= null;
cd_tabela_cid_w			varchar(30)	:= null;
ds_cid_w			varchar(255)	:= null;
ds_mascara_w			varchar(255)	:= null;
ie_tipo_cid_w			varchar(30)	:= null;
ie_unidade_tempo_cid_w		varchar(30)	:= null;
qt_tempo_cid_w			double precision	:= null;
ie_tipo_acidente_w		varchar(30)	:= null;
ie_tipo_cid_2_w			varchar(30)	:= null;
ie_unidade_tempo_cid_2_w	varchar(30)	:= null;
qt_tempo_cid_2_w		bigint	:= null;
ds_cid_2_w			varchar(255)	:= null;
cd_tabela_cid_2_w		varchar(30)	:= null;
ie_tipo_cid_3_w			varchar(30)	:= null;
ie_unidade_tempo_cid_3_w	varchar(30)	:= null;
qt_tempo_cid_3_w		bigint	:= null;
ds_cid_3_w			varchar(255)	:= null;
cd_tabela_cid_3_w		varchar(30)	:= null;
ie_tipo_cid_4_w			varchar(30)	:= null;
ie_unidade_tempo_cid_4_w	varchar(30)	:= null;
qt_tempo_cid_4_w		bigint	:= null;
ds_cid_4_w			varchar(255)	:= null;
cd_tabela_cid_4_w		varchar(30)	:= null;
ie_tipo_doenca_w		varchar(30)	:= null;
ie_unidade_tempo_w		varchar(30)	:= null;
qt_tempo_w			bigint	:= null;
ds_doenca_w			varchar(255)	:= null;
cd_tabela_doenca_w		varchar(30)	:= null;
nr_seq_tipo_acidente_w		bigint	:= null;
cd_tabela_cid_obito_w		varchar(30)	:= null;
ds_cid_obito_w			varchar(255)	:= null;
ie_tipo_saida_consulta_w	varchar(255)	:= null;
dt_periodo_final_w		timestamp;
ie_saida_internacao_w		varchar(20)	:= null;
ie_tipo_consulta_w		varchar(20)	:= null;
NR_SEQ_SAIDA_CONSULTA_w		bigint;
ie_envio_carteira_w		varchar(3);
ds_formato_carteira_w		varchar(50);
ie_nome_abrev_w			varchar(255);
ds_categoria_w			varchar(255);
ie_desc_plano_w			varchar(255);
dt_envio_autor_w		timestamp;
ie_gestacao_nasc_vivos_w	varchar(255);
ie_gestacao_dif_aborto_w	varchar(255);
ie_transtorno_aborto_w		varchar(255);
ie_mascara_dnv_w		varchar(255);
ie_data_atecaco_w		varchar(255);
ie_tipo_atend_conta_w		smallint;
dt_alta_atend_w			timestamp;
dt_alta_conta_w			timestamp;
nr_posicao_final_w		bigint;
ie_atendimento_rn_w		varchar(1);
ie_tipo_saida_parcial_w		varchar(10);
ie_obito_parcial_w		varchar(10);
cd_complemento_w		varchar(30);
qt_dias_int_titular_conv_w	smallint;
qt_dias_internado_w		double precision;
cd_pf_titular_conv_w		varchar(20);
nr_dfm_w			nascimento.nr_dfm%type;
nr_cobertura_espec_w 		atend_categoria_convenio.nr_cobertura_espec%type;
ie_saude_ocupacional_tiss_w    	queixa_paciente.ie_saude_ocupacional_tiss%type;
nr_seq_queixa_w   		queixa_paciente.nr_sequencia%type;
cd_regime_atendimento_w		tiss_conta_atend.cd_regime_atendimento%type;
c02 CURSOR FOR
SELECT	ie_tipo_acidente
from	tiss_tipo_acidente
where	nr_seq_acidente			= nr_seq_tipo_acidente_w
and	coalesce(dt_inicio_vigencia, to_date('01/01/1900','dd/mm/yyyy')) <= dt_entrada_w
order 	by coalesce(dt_inicio_vigencia, to_date('01/01/1900','dd/mm/yyyy'));

c03 CURSOR FOR
SELECT	nr_dnv
from	nascimento
where	nr_atendimento		= nr_atendimento_w;

c04 CURSOR FOR
SELECT	ie_data_entrada
from	tiss_regra_data_int
where	cd_estabelecimento				= cd_estabelecimento_w
and	coalesce(cd_convenio,coalesce(cd_convenio_w,0))		= coalesce(cd_convenio_w,0)
and	coalesce(ie_tipo_atend_conta,coalesce(ie_tipo_atend_conta_w,0))	= coalesce(ie_tipo_atend_conta_w,0)
order by 	coalesce(cd_convenio,0),
	coalesce(ie_tipo_atend_conta,0);


BEGIN



if (coalesce(nr_interno_conta_p,0) > 0) then

	select	max(a.nr_atendimento),
		max(a.cd_estabelecimento),
		max(a.ie_tipo_atend_tiss),
		max(a.cd_convenio_parametro) cd_convenio,
		coalesce(max(a.dt_entrada_tiss), max(b.dt_entrada)),
		coalesce(max(b.dt_alta), max(a.dt_alta_tiss)),
		max(b.cd_pessoa_fisica),
		max(substr(tiss_obter_clinica(b.ie_clinica, b.nr_seq_classificacao),1,3)),
		max(coalesce(a.ie_tipo_fatur_tiss, CASE WHEN coalesce(b.dt_fim_conta::text, '') = '' THEN  'P'  ELSE 'T' END )) ds_tipo_fatur,
		coalesce(max(TISS_OBTER_CARATER_INTERN(b.ie_carater_inter_sus)), max(CASE WHEN b.ie_carater_inter_sus='1' THEN  'E' WHEN b.ie_carater_inter_sus='01' THEN  'E'  ELSE 'U' END )),
		max(b.nr_seq_tipo_acidente),
		max(tiss_obter_regime_atend(b.nr_atendimento, a.cd_convenio_parametro)),
		max(a.dt_periodo_final),
		coalesce(coalesce(max(a.ie_tipo_consulta_tiss), max(b.ie_tipo_consulta)), '1'),
		max(a.NR_SEQ_SAIDA_CONSULTA),
		max(b.ie_tipo_atendimento),
		max(a.dt_periodo_inicial),
		max(a.ie_tipo_atend_conta),
		max(b.dt_alta),
		max(a.dt_alta_tiss),
		max(b.nr_seq_queixa)
	into STRICT	nr_atendimento_w,
		cd_estabelecimento_w,
		ie_tipo_atend_tiss_w,
		cd_convenio_w,
		dt_entrada_w,
		dt_alta_w,
		cd_pessoa_fisica_w,
		ie_tipo_internacao_w,
		ds_tipo_fatur_w,
		ie_carater_internacao_w,
		nr_seq_tipo_acidente_w,
		ie_regime_internacao_w,
		dt_periodo_final_w,
		ie_tipo_consulta_w,
		NR_SEQ_SAIDA_CONSULTA_w,
		ie_tipo_atendimento_w,
		dt_inicial_conta_w,
		ie_tipo_atend_conta_w,
		dt_alta_atend_w,
		dt_alta_conta_w,
		nr_seq_queixa_w
	from	atendimento_paciente b,
		conta_paciente a
	where	a.nr_interno_conta		= nr_interno_conta_p
	and	a.nr_atendimento		= b.nr_atendimento;
	
	begin
	select	a.ie_saude_ocupacional_tiss
	into STRICT 	ie_saude_ocupacional_tiss_w
	from 	queixa_paciente a, atendimento_paciente b
	where 	a.nr_sequencia 	 = nr_seq_queixa_w
	and 	b.nr_atendimento = nr_atendimento_w;
	exception
	when no_data_found or too_many_rows then
		ie_saude_ocupacional_tiss_w := null;
	end;
elsif (coalesce(nr_atend_med_p, 0) > 0) and (coalesce(nr_seq_prot_med_p, 0) > 0) then

	select	max(a.nr_atendimento),
		max(cd_estabelecimento_p),
		max(b.cd_convenio) cd_convenio,
		max(b.dt_entrada),
		max(b.dt_saida),
		max(c.cd_pessoa_fisica),
		coalesce(max(b.ie_tipo_consulta), '1'),
		coalesce(max(b.ie_tipo_saida_consulta),'1')
	into STRICT	nr_atendimento_med_w,
		cd_estabelecimento_w,
		cd_convenio_w,
		dt_entrada_w,
		dt_alta_w,
		cd_pessoa_fisica_w,
		ie_tipo_consulta_w,
		ie_tipo_saida_consulta_w
	from	med_cliente c,
		med_atendimento b,
		med_faturamento a
	where	c.nr_sequencia			= b.nr_seq_cliente
	and	a.nr_atendimento		= b.nr_atendimento
	and	a.nr_atendimento		= nr_atend_med_p
	and	a.nr_seq_protocolo		= nr_seq_prot_med_p;

end if;

if (coalesce(nr_interno_conta_p,0) > 0) then
	select 	max(cd_tipo_saida)
	into STRICT	ie_tipo_saida_consulta_w
	from	tiss_tipo_saida_consulta
	where	nr_sequencia		= NR_SEQ_SAIDA_CONSULTA_w;

	select	max(substr(nr_declaracao,1,12)),
		max(cd_cid_direta),
		'CID-10',
		substr(max(OBTER_DESC_CID_DOENCA(cd_cid_direta)), 1, 70),
		max(ie_obito_mulher)
	into STRICT	nr_declaracao_obito_w,
		cd_cid_obito_w,
		cd_tabela_cid_obito_w,
		ds_cid_obito_w,
		ie_obito_mulher_w
	from 	declaracao_obito
	where	nr_atendimento		= nr_atendimento_w
	and     coalesce(DT_INATIVACAO::text, '') = '';

end if;

select	max(b.cd_cgc),
	max(b.ds_razao_social),
	coalesce(max(a.cd_cns), max(b.cd_cnes)) cd_cnes
into STRICT	cd_cgc_hosp_w,
	ds_razao_social_w,
	cd_cnes_w
from	pessoa_juridica b,
	estabelecimento a
where	a.cd_estabelecimento		= cd_estabelecimento_w
and	a.cd_cgc			= b.cd_cgc;

select	max(ds_mascara_usuario),
	coalesce(max(ie_saida_internacao),'A'),
	coalesce(max(ie_campo_boolean), 'B'),
	coalesce(max(ie_mascara_cid), 'N'),
	coalesce(max(ie_envio_carteira), 'CI'),
	max(ds_formato_carteira),
	coalesce(max(ie_aborto_nasc),'N'),
	coalesce(max(ie_data_entrada_ri), 'E'),
	coalesce(max(ie_regra_mascara), 'N'),
	coalesce(max(ie_tipo_acomod), 'ACAP'),
	coalesce(max(ie_desc_plano),'P'),
	coalesce(max(ie_gestacao_nasc_vivos),'N'),
	coalesce(max(ie_gestacao_dif_aborto),'N'),
	coalesce(max(ie_transtorno_aborto),'N'),
	coalesce(max(ie_mascara_dnv),'S'),
	coalesce(max(ie_data_atecaco),'A'),
	coalesce(max(ie_tipo_saida_parcial),'S'),
	coalesce(max(ie_obito_parcial),'S'),
	max(qt_dias_int_titular_conv)
into STRICT	ds_mascara_w,
	ie_saida_internacao_w,
	ie_campo_boolean_w,
	ie_mascara_cid_w,
	ie_envio_carteira_w,
	ds_formato_carteira_w,
	ie_aborto_nasc_w,
	ie_data_entrada_w,
	ie_regra_mascara_w,
	ie_tipo_acomod_w,
	ie_desc_plano_w,
	ie_gestacao_nasc_vivos_w,
	ie_gestacao_dif_aborto_w,
	ie_transtorno_aborto_w,
	ie_mascara_dnv_w,
	ie_data_atecaco_w,
	ie_tipo_saida_parcial_w,
	ie_obito_parcial_w,
	qt_dias_int_titular_conv_w
from	tiss_parametros_convenio
where	cd_convenio		= cd_convenio_w
and	cd_estabelecimento	= cd_estabelecimento_w;

if (ie_mascara_cid_w	= 'S') then
	cd_cid_obito_w		:= TISS_OBTER_CID_MASCARA(cd_cid_obito_w);
end if;

if (coalesce(ie_obito_parcial_w,'S') = 'N') and (ds_tipo_fatur_w = 'P') then
	
	nr_declaracao_obito_w	:= null;
	cd_cid_obito_w		:= null;
	cd_tabela_cid_obito_w	:= null;
	ds_cid_obito_w		:= null;
	ie_obito_mulher_w	:= null;
end if;

if (coalesce(ie_tipo_saida_parcial_w,'S') = 'N') and (ds_tipo_fatur_w = 'P') then
	ie_tipo_saida_consulta_w	:= null;
end if;

ie_tipo_acidente_w		:= '2';  -- Outros
open c02;
loop
fetch c02 into
	ie_tipo_acidente_w;
EXIT WHEN NOT FOUND; /* apply on c02 */
end loop;
close c02;

if (coalesce(nr_interno_conta_p,0) > 0) then

	/*lhalves OS296269 em 11/03/2011 - Obter dados do convenio glosa*/

	select	max(cd_convenio_glosa),
		max(cd_convenio),
		max(TISS_OBTER_SE_ATEND_RN(a.nr_atendimento)),
		max(Obter_Dias_Internacao(a.nr_atendimento)),
		max(b.nr_cobertura_espec),
		max(substr(obter_tiss_regime_atendimento(a.cd_estabelecimento, b.cd_convenio, a.ie_tipo_atendimento),1,3))
	into STRICT	cd_convenio_glosa_w,
		cd_convenio_atend_w,
		ie_atendimento_rn_w,
		qt_dias_internado_w,
		nr_cobertura_espec_w,
		cd_regime_atendimento_w
	from 	atend_categoria_convenio b,
		atendimento_paciente a
	where	a.nr_atendimento	= b.nr_atendimento
	and	b.nr_seq_interno	= obter_atecaco_atendimento(a.nr_atendimento)
	and	a.nr_atendimento	= nr_atendimento_w;

	if (cd_convenio_glosa_w IS NOT NULL AND cd_convenio_glosa_w::text <> '') and (cd_convenio_glosa_w = cd_convenio_w) and (cd_convenio_atend_w <> cd_convenio_glosa_w) then

		if (coalesce(ie_data_atecaco_w,'A') = 'A') then
			select	max(b.cd_usuario_conv_glosa),
				max(substr(obter_desc_plano(b.cd_convenio_glosa, b.cd_plano_glosa),1,40)) ds_plano, -- Para convenio glosa nao existe plano glosa
				max(substr(obter_categoria_convenio(b.cd_convenio_glosa, b.cd_categoria_glosa),1,40)) ds_categoria,
				max(b.dt_validade_cart_glosa),
				max(coalesce(tiss_obter_nome_abreviado(b.cd_convenio_glosa, a.cd_estabelecimento, a.cd_pessoa_fisica), c.nm_pessoa_fisica)),
				max(c.nr_cartao_nac_sus),
				max(tiss_obter_tipo_acomod(b.cd_tipo_acomodacao)),
				max(b.cd_senha),
				max(b.cd_complemento)
			into STRICT	cd_usuario_convenio_w,
				ds_plano_w,
				ds_categoria_w,
				dt_validade_carteira_w,
				nm_pessoa_fisica_w,
				nr_cartao_nac_sus_w,
				ie_tipo_acomodacao_w,
				cd_senha_w,
				cd_complemento_w
			from	pessoa_fisica c,
				atend_categoria_convenio b,
				atendimento_paciente a
			where	a.nr_atendimento	= b.nr_atendimento
			and	b.nr_seq_interno	= obter_atecaco_atendimento(a.nr_atendimento)
			and	a.cd_pessoa_fisica	= c.cd_pessoa_fisica
			and	a.nr_atendimento	= nr_atendimento_w;
		else		
			select	max(b.cd_usuario_conv_glosa),
				max(substr(obter_desc_plano(b.cd_convenio_glosa, b.cd_plano_glosa),1,40)) ds_plano, -- Para convenio glosa nao existe plano glosa
				max(substr(obter_categoria_convenio(b.cd_convenio_glosa, b.cd_categoria_glosa),1,40)) ds_categoria,
				max(b.dt_validade_cart_glosa),
				max(coalesce(tiss_obter_nome_abreviado(b.cd_convenio_glosa, a.cd_estabelecimento, a.cd_pessoa_fisica), c.nm_pessoa_fisica)),
				max(c.nr_cartao_nac_sus),
				max(tiss_obter_tipo_acomod(b.cd_tipo_acomodacao)),
				max(b.cd_senha),
				max(b.cd_complemento_glosa)
			into STRICT	cd_usuario_convenio_w,
				ds_plano_w,
				ds_categoria_w,
				dt_validade_carteira_w,
				nm_pessoa_fisica_w,
				nr_cartao_nac_sus_w,
				ie_tipo_acomodacao_w,
				cd_senha_w,
				cd_complemento_w
			from	pessoa_fisica c,
				atend_categoria_convenio b,
				atendimento_paciente a
			where	a.nr_atendimento	= b.nr_atendimento			
			and	a.cd_pessoa_fisica	= c.cd_pessoa_fisica			
			and	a.nr_atendimento	= nr_atendimento_w
			and	b.nr_seq_interno= 	(SELECT	coalesce(max(x.nr_seq_interno),0)			
							from	atend_categoria_convenio x
							where	x.nr_atendimento 	= a.nr_atendimento
							and	dt_inicial_conta_w	between x.dt_inicio_vigencia and coalesce(x.dt_final_vigencia,clock_timestamp() + interval '1 days'));	
		end if;
		
	else
	
		if (coalesce(ie_data_atecaco_w,'A') = 'A') then
			select	max(b.cd_usuario_convenio),
				max(substr(obter_desc_plano(b.cd_convenio, b.cd_plano_convenio),1,40)) ds_plano,
				max(substr(obter_categoria_convenio(b.cd_convenio, b.cd_categoria),1,40)) ds_categoria,
				max(b.dt_validade_carteira),
				max(coalesce(tiss_obter_nome_abreviado(b.cd_convenio, a.cd_estabelecimento, a.cd_pessoa_fisica), c.nm_pessoa_fisica)),
				max(c.nr_cartao_nac_sus),
				max(tiss_obter_tipo_acomod(b.cd_tipo_acomodacao)),
				max(b.cd_senha),
				max(b.cd_complemento)
			into STRICT	cd_usuario_convenio_w,
				ds_plano_w,
				ds_categoria_w,
				dt_validade_carteira_w,
				nm_pessoa_fisica_w,
				nr_cartao_nac_sus_w,
				ie_tipo_acomodacao_w,
				cd_senha_w,
				cd_complemento_w
			from	pessoa_fisica c,
				atend_categoria_convenio b,
				atendimento_paciente a
			where	a.nr_atendimento	= b.nr_atendimento
			and	b.nr_seq_interno	= Obter_Atecaco_Atend_conv(b.nr_atendimento,cd_convenio_w) --lhalves OS210930 22/04/2010 - ajustado para obter o plano de acordo com o convenio da conta
			and	a.cd_pessoa_fisica	= c.cd_pessoa_fisica
			and	a.nr_atendimento	= nr_atendimento_w;
		else
			select	max(b.cd_usuario_convenio),
				max(substr(obter_desc_plano(b.cd_convenio, b.cd_plano_convenio),1,40)) ds_plano,
				max(substr(obter_categoria_convenio(b.cd_convenio, b.cd_categoria),1,40)) ds_categoria,
				max(b.dt_validade_carteira),
				max(coalesce(tiss_obter_nome_abreviado(b.cd_convenio, a.cd_estabelecimento, a.cd_pessoa_fisica), c.nm_pessoa_fisica)),
				max(c.nr_cartao_nac_sus),
				max(tiss_obter_tipo_acomod(b.cd_tipo_acomodacao)),
				max(b.cd_senha),
				max(b.cd_complemento_glosa)
			into STRICT	cd_usuario_convenio_w,
				ds_plano_w,
				ds_categoria_w,
				dt_validade_carteira_w,
				nm_pessoa_fisica_w,
				nr_cartao_nac_sus_w,
				ie_tipo_acomodacao_w,
				cd_senha_w,
				cd_complemento_w
			from	pessoa_fisica c,
				atend_categoria_convenio b,
				atendimento_paciente a
			where	a.nr_atendimento	= b.nr_atendimento
			and	a.cd_pessoa_fisica	= c.cd_pessoa_fisica			
			and	a.nr_atendimento	= nr_atendimento_w
			and	b.nr_seq_interno= 	(SELECT	coalesce(max(x.nr_seq_interno),0)			
							from	atend_categoria_convenio x
							where	x.nr_atendimento 	= a.nr_atendimento
							and	x.cd_convenio		= cd_convenio_w
							and	dt_inicial_conta_w	between x.dt_inicio_vigencia and coalesce(x.dt_final_vigencia,clock_timestamp() + interval '1 days'));	
		end if;	

	end if;
	
	nm_pessoa_fisica_w	:= coalesce(TISS_OBTER_TITULAR_CONV_RN(nr_atendimento_w, nr_interno_conta_p, cd_convenio_w, cd_estabelecimento_w),nm_pessoa_fisica_w);				
	/*Alterado para a function acima para tratar em um unico local
	if	(ie_atendimento_rn_w = 'S') and
		(nvl(qt_dias_int_titular_conv_w,0) > 0) and
		(nvl(qt_dias_internado_w,0) > 0) and
		(nvl(qt_dias_internado_w,0) <= nvl(qt_dias_int_titular_conv_w,0)) then
	
	
		if	(nvl(ie_data_atecaco_w,'A') = 'A') then
			select	max(a.cd_pessoa_titular)
			into	cd_pf_titular_conv_w
			from	pessoa_titular_convenio a
			where	a.cd_pessoa_fisica 	= cd_pessoa_fisica_w
			and	a.cd_convenio		= cd_convenio_w
			and	sysdate	between nvl(dt_inicio_vigencia,sysdate - 1) and nvl(dt_fim_vigencia,sysdate + 1);
			
			if	(cd_pf_titular_conv_w is null) then
			
				begin				
				select	a.cd_pessoa_titular
				into	cd_pf_titular_conv_w
				from	pessoa_titular_convenio a,
					atendimento_paciente b
				where	b.nr_atendimento	= nr_atendimento_w
				and	a.cd_pessoa_fisica 	= (select max(x.cd_pessoa_fisica) 
								from atendimento_paciente x 
								where x.nr_atendimento = b.nr_atendimento_mae)
				and	a.cd_convenio		= cd_convenio_w
				and	sysdate	between nvl(dt_inicio_vigencia,sysdate - 1) and nvl(dt_fim_vigencia,sysdate + 1)
				and	rownum	= 1;
				exception
				when others then
					cd_pf_titular_conv_w	:= null;
				end;
			
			end if;
		else
			select	max(a.cd_pessoa_titular)
			into	cd_pf_titular_conv_w
			from	pessoa_titular_convenio a
			where	a.cd_pessoa_fisica 	= cd_pessoa_fisica_w
			and	a.cd_convenio		= cd_convenio_w
			and	dt_inicial_conta_w	between nvl(dt_inicio_vigencia,dt_inicial_conta_w - 1) and nvl(dt_fim_vigencia,dt_inicial_conta_w + 1);
			
			if	(cd_pf_titular_conv_w is null) then
			
				begin				
				select	a.cd_pessoa_titular
				into	cd_pf_titular_conv_w
				from	pessoa_titular_convenio a,
					atendimento_paciente b
				where	b.nr_atendimento	= nr_atendimento_w
				and	a.cd_pessoa_fisica 	= (select max(x.cd_pessoa_fisica) 
								from atendimento_paciente x 
								where x.nr_atendimento = b.nr_atendimento_mae)
				and	a.cd_convenio		= cd_convenio_w
				and	dt_inicial_conta_w	between nvl(dt_inicio_vigencia,dt_inicial_conta_w - 1) and nvl(dt_fim_vigencia,dt_inicial_conta_w + 1)
				and	rownum	= 1;
				exception
				when others then
					cd_pf_titular_conv_w	:= null;
				end;
			
			end if;
		end if;
		
		if	(cd_pf_titular_conv_w is not null) then
		
			nm_pessoa_fisica_w	:= substr('RN de '||obter_nome_pf_pj(cd_pf_titular_conv_w,null),1,100);
		
		end if;	
	end if;*/
elsif (coalesce(nr_atend_med_p, 0) > 0) and (coalesce(nr_seq_prot_med_p, 0) > 0) then

	select	max(a.cd_usuario_convenio),
		max(substr(MED_OBTER_DESC_PLANO(a.nr_seq_plano),1,254)) ds_plano,
		max(a.dt_validade_carteira),
		max(c.nm_pessoa_fisica),
		max(c.nr_cartao_nac_sus)
	into STRICT	cd_usuario_convenio_w,
		ds_plano_w,
		dt_validade_carteira_w,
		nm_pessoa_fisica_w,
		nr_cartao_nac_sus_w
	from	pessoa_fisica c,
		med_cliente b,
		med_atendimento a
	where	a.nr_seq_cliente	= b.nr_sequencia
	and	b.cd_pessoa_fisica	= c.cd_pessoa_fisica
	and	a.nr_atendimento	= nr_atend_med_p;
	
	ie_atendimento_rn_w	:= 'N';

end if;

select	max(tiss_obter_tipo_acomod(cd_tipo_acomodacao))
into STRICT	ie_tipo_acomod_aux_w
from	autorizacao_convenio
where	nr_atendimento		= nr_atendimento_w;

if (coalesce(ie_tipo_acomod_aux_w,'X')	<> 'X') and (ie_tipo_acomod_w		= 'ACAP') then
	ie_tipo_acomodacao_w	:= ie_tipo_acomod_aux_w;
end if;

if (coalesce(ie_regra_mascara_w,'N') = 'N') then

	if (position('@ELIMINA_ZEROS_ESQ' in ds_mascara_w) > 0) then
		
		select	ltrim(cd_usuario_convenio_w,'0')
		into STRICT	cd_usuario_convenio_w
		;	
		
	elsif (position('@ELIMINA_ZEROS_DIR' in ds_mascara_w) > 0) then
		
		select	rtrim(cd_usuario_convenio_w,'0')
		into STRICT	cd_usuario_convenio_w
		;
		
	elsif (position('Y' in ds_mascara_w) > 0) then
	
		/*lhalves em 10/11/2012 - OS 513516
		Utilizado para os casos conforme exemplo:
			Devem ser enviados sempre no maximo 10 digitos, so que para os codigo que possuem menos que 10 digitos nao deve completar com zeros.
			Entao utilizar mascara com 10 'Y' = 'YYYYYYYYYY' - Maiusculo
		*/
	
		nr_posicao_final_w	:= instr(ds_mascara_w,'Y',-1,1); --Retorna a posicao final do ultimo Y
		if (nr_posicao_final_w > 0) then
			cd_usuario_convenio_w	:= substr(cd_usuario_convenio_w,1,nr_posicao_final_w);	--Retorna o codigo do usuario ate a posicao do ultimo Y	
		end if;	
	else
		if (ds_mascara_w IS NOT NULL AND ds_mascara_w::text <> '') and (length(cd_usuario_convenio_w) < length(ds_mascara_w)) then
			qt_digitos_carteira_w	:= length(ds_mascara_w);
			cd_usuario_convenio_w	:= lpad(cd_usuario_convenio_w, qt_digitos_carteira_w,0);
		end if;

		if (ds_mascara_w IS NOT NULL AND ds_mascara_w::text <> '') then
			begin

			select	TISS_OBTER_COD_USUARIO_MASC(cd_usuario_convenio_w, ds_mascara_w)
			into STRICT	cd_usuario_mascara_w
			;

			exception
				when others then
					cd_usuario_mascara_w	:= null;
			end;

			if (cd_usuario_mascara_w IS NOT NULL AND cd_usuario_mascara_w::text <> '') then
				cd_usuario_convenio_w	:= cd_usuario_mascara_w;
			end if;
		end if;
	end if;
else

	select	max(Obter_Mascara_Usuario_Conv(cd_estabelecimento_w, cd_convenio_w, null, ie_tipo_atendimento_w, null, dt_entrada_w))
	into STRICT	ds_mascara_w
	;

	ds_mascara_w	:= Tiss_Substituir_String(ds_mascara_w, '9', '0');

	if (ds_mascara_w IS NOT NULL AND ds_mascara_w::text <> '') and (length(cd_usuario_convenio_w) < length(ds_mascara_w)) then
		qt_digitos_carteira_w	:= length(ds_mascara_w);
		cd_usuario_convenio_w	:= lpad(cd_usuario_convenio_w, qt_digitos_carteira_w,0);
	end if;

	if (ds_mascara_w IS NOT NULL AND ds_mascara_w::text <> '') then
		begin

		select	TISS_OBTER_COD_USUARIO_MASC(cd_usuario_convenio_w, ds_mascara_w)
		into STRICT	cd_usuario_mascara_w
		;

		exception
			when others then
				cd_usuario_mascara_w	:= null;
		end;

		if (cd_usuario_mascara_w IS NOT NULL AND cd_usuario_mascara_w::text <> '') then
			cd_usuario_convenio_w	:= cd_usuario_mascara_w;
		end if;
	end if;

end if;

if (ie_envio_carteira_w = '0ND') and (ds_formato_carteira_w IS NOT NULL AND ds_formato_carteira_w::text <> '') then
	cd_usuario_convenio_w	:= TISS_OBTER_COD_USUARIO(cd_usuario_convenio_w, ds_formato_carteira_w, '0') ||
				   TISS_OBTER_COD_USUARIO(cd_usuario_convenio_w, ds_formato_carteira_w, 'ND');
elsif (ie_envio_carteira_w = '0') and (ds_formato_carteira_w IS NOT NULL AND ds_formato_carteira_w::text <> '') then
	cd_usuario_convenio_w	:= TISS_OBTER_COD_USUARIO(cd_usuario_convenio_w, ds_formato_carteira_w, '0');
elsif (ie_envio_carteira_w = 'CIC') then
	cd_usuario_convenio_w	:= substr(cd_usuario_convenio_w || cd_complemento_w,1,30);
elsif (ie_envio_carteira_w = 'COM') then	
	cd_usuario_convenio_w	:= substr(cd_complemento_w,1,30);
end if;

if (coalesce(nr_interno_conta_p,0) > 0) then

	select	max(tiss_obter_dados_parto_nasc(a.nr_atendimento, 2500, 'G')) ie_gestacao,
		max(tiss_obter_dados_parto_nasc(a.nr_atendimento, 2500, 'A')) ie_aborto,
		max(tiss_obter_dados_parto_nasc(a.nr_atendimento, 2500, 'T')) ie_transtorno,
		max(tiss_obter_dados_parto_nasc(a.nr_atendimento, 2500, 'P')) ie_complicacao_puerperio,
		max(tiss_obter_dados_parto_nasc(a.nr_atendimento, 2500, 'N')) ie_complicacao_neonatal,
		max(tiss_obter_dados_parto_nasc(a.nr_atendimento, 2500, 'B')) ie_baixo_peso,
		max(CASE WHEN b.ie_parto_cesaria='S' THEN  1  ELSE 0 END ) ie_parto_cesaria,
		max(CASE WHEN b.ie_parto_normal='S' THEN  1  ELSE 0 END ) ie_parto_normal,
		max(b.qt_nasc_mortos),
		max(tiss_obter_dados_parto_nasc(a.nr_atendimento, 2500, 'QTA')) qt_nasc_vivo,
		max(tiss_obter_dados_parto_nasc(a.nr_atendimento, 2500, 'QT')) qt_nasc_vivos_prematuros,
		/*null ie_obito, Estava substituindo o ie_obito */

		max(tiss_obter_dados_parto_nasc(a.nr_atendimento, 2500, 'S')) ie_atend_rn_sala_parto,
		max(tiss_obter_dados_parto_nasc(a.nr_atendimento, 2500, 'QTP')) qt_obito_precoce,
		max(tiss_obter_dados_parto_nasc(a.nr_atendimento, 2500, 'QTT')) qt_obito_tardio
	into STRICT	ie_gestacao_w,
		ie_aborto_w,
		ie_transtorno_w,
		ie_complic_puerperio_w,
		ie_complic_neonatal_w,
		ie_baixo_peso_w,
		ie_cesareo_w,
		ie_normal_w,
		qt_nasc_morto_w,
		qt_nasc_vivo_w,
		qt_nasc_prematuro_w,
		/* ie_obito_mulher_w, Estava substituindo o ie_obito */

		ie_atend_rn_w,
		qt_obito_precoce_w,
		qt_obito_tardio_w
	FROM pessoa_fisica c, atendimento_paciente a
LEFT OUTER JOIN parto b ON (a.nr_atendimento = b.nr_atendimento)
WHERE substr(tiss_obter_clinica(a.ie_clinica, a.nr_seq_classificacao),1,3) = 3  and a.cd_pessoa_fisica	= c.cd_pessoa_fisica and a.nr_atendimento	= nr_atendimento_w;

end if;

if (ie_aborto_nasc_w	= 'S') and (ie_tipo_internacao_w	= 3) then

	select	count(*)
	into STRICT	qt_nascimentos_w
	from	nascimento
	where	nr_atendimento		= nr_atendimento_w;

	if (coalesce(qt_nascimentos_w, 0) = 0) then
		ie_aborto_w	:= '1';
		ie_cesareo_w	:= null;
		ie_normal_w	:= null;
	end if;

end if;

if (ie_aborto_w	= '1') then	-- OS91571 - 02/05/2008 - Se for aborto nao pode ser baixo peso.
	ie_baixo_peso_w	:= '0';
end if;

/*lhalves OS260313 em 12/11/2010 - Gerar '1' para EM gestacao, se tipo de nascimento <> de aborto */

if (ie_gestacao_dif_aborto_w = 'S') then
	if (ie_aborto_w = '1') then
		ie_gestacao_w := '0';
	elsif (ie_aborto_w = '0') then
		ie_gestacao_w := '1';
	end if;
elsif (ie_gestacao_dif_aborto_w = 'T') then
	ie_gestacao_w	:= '1';
end if;

if (ie_saida_internacao_w = 'C') then
	dt_alta_w		:= coalesce(dt_periodo_final_w, dt_alta_w);
elsif (ie_saida_internacao_w = 'AC') then
	dt_alta_w		:= coalesce(dt_alta_conta_w,dt_alta_atend_w);
elsif (ie_saida_internacao_w = 'AT') and (ds_tipo_fatur_w = 'P') then
	dt_alta_w		:= null;
end if;

/* lhalves OS261751 27/10/10 - Alterado para a TISS_GERAR_CONTA_GUIA para ter uma TISS_CONTA_DN para cada guia
open c03;
loop
fetch c03 into
	nr_dnv_w;
exit when c03%notfound;

	select	TISS_CONTA_DN_seq.nextval
	into	nr_seq_dnv_w
	from	dual;

	insert into TISS_CONTA_DN
		(nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		nr_dnv,
		nr_interno_conta)
	values	(nr_seq_dnv_w,
		sysdate,
		nm_usuario_p,
		nr_dnv_w,
		nr_interno_conta_p);
		
end loop;
close c03;
*/
if (ie_data_entrada_w = 'R') then
	open c04;
	loop
	fetch c04 into
		ie_data_entrada_w;
	EXIT WHEN NOT FOUND; /* apply on c04 */
	end loop;
	close c04;
end if;

if (ie_data_entrada_w	= 'IC') and (coalesce(nr_interno_conta_p,0) > 0) then
	dt_entrada_w	:= dt_inicial_conta_w;
elsif (ie_data_entrada_w	= 'I') and (coalesce(nr_interno_conta_p,0) > 0) then
	dt_entrada_w	:= coalesce(tiss_obter_data_internacao(nr_atendimento_w), dt_entrada_w);
elsif (ie_data_entrada_w	= 'A') and (coalesce(nr_interno_conta_p,0) > 0) then
	dt_entrada_w	:= coalesce(to_date(obter_dados_atendimento(nr_atendimento_w,'DA'),'dd/mm/yyyy hh24:mi:ss'), dt_entrada_w);
elsif (ie_data_entrada_w	= 'EA') and (coalesce(nr_interno_conta_p,0) > 0) then
	select	max(dt_envio)
	into STRICT 	dt_envio_autor_w
	from 	autorizacao_convenio
	where	nr_atendimento	= nr_atendimento_w
	and 	exists (SELECT 	1
			from 	autorizacao_convenio
			where 	nr_atendimento = nr_atendimento_w);
	
	dt_entrada_w	:= coalesce(dt_envio_autor_w,dt_entrada_w);			
end if;

if (coalesce(qt_obito_precoce_w,0) > 0) then
	qt_obito_tardio_w	:= null;
elsif (coalesce(qt_obito_tardio_w,0) > 0) then
	qt_obito_precoce_w	:= null;
elsif (coalesce(qt_obito_tardio_w,0) = 0) and (coalesce(qt_obito_precoce_w,0) = 0) then
	qt_obito_tardio_w	:= null;
	qt_obito_precoce_w	:= null;
end if;

/*lhalves OS263260 em 3/11/2010 - Tratamento para Orizon, quando o tipo de nascimento for 'Em gestacao', tem que gerar quantidade de nascidos vivos.*/

if (ie_gestacao_nasc_vivos_w = 'S') then
	if (ie_gestacao_w = '1') then
		select	count(*)
		into STRICT	qt_nasc_vivo_w
		from	nascimento
		where	nr_atendimento		= nr_atendimento_w
		and	ie_tipo_nascimento	= 1;
	end if;
end if;

/*lhalves OS272927 em 9/12/2010 - Sempre que for aborto gera tbm o ie_transtorno_w*/

if (ie_transtorno_aborto_w = 'S') and (ie_aborto_w = '1') then
	ie_transtorno_w := '1';
end if;

select	max(nr_dnv),
    max(NR_DFM)
into STRICT	nr_dnv_w,
    nr_dfm_w
from	nascimento
where	nr_atendimento		= nr_atendimento_w
and 	coalesce(dt_inativacao::text, '') = '';

if (coalesce(ie_mascara_dnv_w,'S') = 'N') then
	nr_dnv_w	:= replace(replace(nr_dnv_w,'-',''),'.','');
end if;

select	nextval('tiss_conta_atend_seq')
into STRICT	nr_sequencia_w
;

insert into tiss_conta_atend(
	nr_sequencia,
	nr_interno_conta,
	dt_atualizacao,
	nm_usuario,
	dt_entrada,
	dt_alta,
	ie_tipo_internacao,
	ie_regime_internacao,
	ie_carater_internacao,
	ie_tipo_acomodacao,
	ie_obstetrica,
	cd_pessoa_fisica,
	nm_pessoa_fisica,
	nr_cartao_nac_sus,
	cd_convenio,
	ds_plano,
	dt_validade_carteira,
	cd_usuario_convenio,
	ie_motivo_saida,
	cd_cid,
	cd_cid_2,
	cd_cid_3,
	cd_cid_4,
	cd_cid_obito,
	nr_declaracao_obito,
	ie_obito_mulher,
	ie_gestacao,
	ie_aborto,
	ie_transtorno,
	ie_complic_puerperio,
	qt_obito_precoce,
	qt_obito_tardio,
	qt_nasc_vivo,
	qt_nasc_morto,
	qt_nasc_prematuro,
	nr_dnv,
	ie_complic_neonatal,
	ie_baixo_peso,
	ie_cesareo,
	ie_normal,
	ie_atend_rn,
	cd_cgc_hosp,
	ds_razao_social,
	cd_cnes,
	ds_tipo_fatur,
	nr_atendimento,
	cd_tabela_cid,
	ds_cid,
	ie_tipo_cid,
	ie_unidade_tempo_cid,
	qt_tempo_cid,
	ie_tipo_acidente,
	cd_tabela_cid_2,
	ds_cid_2,
	cd_tabela_cid_obito,
	ds_cid_obito,
	ie_tipo_consulta,
	ie_tipo_saida_consulta,
	nr_seq_med_fatur,
	nr_atend_med,
	nr_seq_prot_med,
	ie_atendimento_rn,
	nr_dfm,
	nr_cobertura_espec,
	ie_saude_ocupacional,
	cd_regime_atendimento)
values (
	nr_sequencia_w,
	nr_interno_conta_p,
	clock_timestamp(),
	nm_usuario_p,
	dt_entrada_w,
	dt_alta_w,
	ie_tipo_internacao_w,
	ie_regime_internacao_w,
	ie_carater_internacao_w,
	ie_tipo_acomodacao_w,
	ie_obstetrica_w,
	cd_pessoa_fisica_w,
	nm_pessoa_fisica_w,
	nr_cartao_nac_sus_w,
	cd_convenio_w,
	CASE WHEN ie_desc_plano_w='P' THEN  ds_plano_w  ELSE ds_categoria_w END ,
	dt_validade_carteira_w,
	cd_usuario_convenio_w,
	ie_motivo_saida_w,
	cd_cid_w,
	cd_cid_2_w,
	cd_cid_3_w,
	cd_cid_4_w,
	cd_cid_obito_w,
	nr_declaracao_obito_w,
	ie_obito_mulher_w,
	ie_gestacao_w,
	ie_aborto_w,
	ie_transtorno_w,
	ie_complic_puerperio_w,
	qt_obito_precoce_w,
	qt_obito_tardio_w,
	qt_nasc_vivo_w,
	qt_nasc_morto_w,
	qt_nasc_prematuro_w,
	nr_dnv_w,
	ie_complic_neonatal_w,
	ie_baixo_peso_w,
	ie_cesareo_w,
	ie_normal_w,
	ie_atend_rn_w,
	cd_cgc_hosp_w,
	ds_razao_social_w,
	cd_cnes_w,
	ds_tipo_fatur_w,
	nr_atendimento_w,
	cd_tabela_cid_w,
	ds_cid_w,
	ie_tipo_cid_w,
	ie_unidade_tempo_cid_w,
	qt_tempo_cid_w,
	ie_tipo_acidente_w,
	cd_tabela_cid_2_w,
	ds_cid_2_w,
	cd_tabela_cid_obito_w,
	ds_cid_obito_w,
	ie_tipo_consulta_w,
	ie_tipo_saida_consulta_w,
	nr_seq_med_fatur_p,
	nr_atendimento_med_w,
	nr_seq_prot_med_p,
	ie_atendimento_rn_w,
	nr_dfm_w,
	nr_cobertura_espec_w,
	ie_saude_ocupacional_tiss_w,
	cd_regime_atendimento_w);
if (ie_campo_boolean_w = 'S') then
	update	tiss_conta_atend
	set	ie_complic_neonatal_xml	= CASE WHEN ie_complic_neonatal_w='0' THEN  'false' WHEN ie_complic_neonatal_w='1' THEN  'true'  ELSE '' END ,
		ie_baixo_peso_xml		= CASE WHEN ie_baixo_peso_w='0' THEN  'false' WHEN ie_baixo_peso_w='1' THEN  'true'  ELSE '' END ,
		ie_cesareo_xml		= CASE WHEN ie_cesareo_w='0' THEN  'false' WHEN ie_cesareo_w='1' THEN  'true'  ELSE '' END ,
		ie_normal_xml		= CASE WHEN ie_normal_w='0' THEN  'false' WHEN ie_normal_w='1' THEN  'true'  ELSE '' END ,
		ie_complic_puerperio_xml	= CASE WHEN ie_complic_puerperio_w='0' THEN  'false' WHEN ie_complic_puerperio_w='1' THEN  'true'  ELSE '' END ,
		ie_atend_rn_xml		= CASE WHEN ie_atend_rn_w='0' THEN  'false' WHEN ie_atend_rn_w='1' THEN  'true'  ELSE '' END ,
		ie_aborto_xml		= CASE WHEN ie_aborto_w='0' THEN  'false' WHEN ie_aborto_w='1' THEN  'true'  ELSE '' END ,
		ie_gestacao_xml		= CASE WHEN ie_gestacao_w='0' THEN  'false' WHEN ie_gestacao_w='1' THEN  'true'  ELSE '' END ,
		ie_transtorno_xml		= CASE WHEN ie_transtorno_w='0' THEN  'false' WHEN ie_transtorno_w='1' THEN  'true'  ELSE '' END
	where	nr_sequencia		= nr_sequencia_w;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE tiss_gerar_conta_atend ( nr_interno_conta_p bigint, nr_seq_med_fatur_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, nr_atend_med_p bigint, nr_seq_prot_med_p bigint) FROM PUBLIC;

