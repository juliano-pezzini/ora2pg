-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE lic_est_fechamento_compra_dir ( nr_cot_compra_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_solic_compra_w				bigint;
nr_cot_compra_w				bigint;
nr_ordem_compra_w			bigint;
qt_existe_w				bigint;
nr_cot_compra_origem_lic_w			bigint;

c01 CURSOR FOR
SELECT	a.nr_solic_compra,
	a.nr_cot_compra_origem_lic
from	solic_compra a
where	nr_cot_compra_origem_lic	= nr_cot_compra_p
and	(nr_cot_compra_origem_lic IS NOT NULL AND nr_cot_compra_origem_lic::text <> '')
and	lic_obter_tipo_forma_compra(a.nr_seq_forma_compra) = 'P'

union all

select	distinct
	a.nr_solic_compra,
	null
from	solic_compra a,
	solic_compra_item b
where	a.nr_solic_compra = b.nr_solic_compra
and	b.nr_cot_compra	= nr_cot_compra_p
and	coalesce(nr_cot_compra_origem_lic::text, '') = ''
and	lic_obter_tipo_forma_compra(a.nr_seq_forma_compra) = 'P';

c02 CURSOR FOR
SELECT	 distinct a.nr_cot_compra
from	 cot_compra a,
	 cot_compra_item b
where	 a.nr_cot_compra	= b.nr_cot_compra
and	 b.nr_solic_compra	= nr_solic_compra_w;

c03 CURSOR FOR
SELECT	distinct a.nr_ordem_compra
from	ordem_compra a,
	ordem_compra_item b
where	a.nr_ordem_compra	= b.nr_ordem_compra
and	b.nr_cot_compra	= nr_cot_compra_w;


BEGIN

open C01;
loop
fetch C01 into
	nr_solic_compra_w,
	nr_cot_compra_origem_lic_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	open C02;
	loop
	fetch C02 into
		nr_cot_compra_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin

		open C03;
		loop
		fetch C03 into
			nr_ordem_compra_w;
		EXIT WHEN NOT FOUND; /* apply on C03 */
			begin

			select	count(*)
			into STRICT	qt_existe_w
			from	ordem_compra
			where	nr_ordem_compra = nr_ordem_compra_w
			and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '');

			if (qt_existe_w > 0) then
				/*'A ordem de compra número ' || NR_ORDEM_COMPRA_W || 'já foi liberada. ' ||
				'Portanto, não é possível estornar esse processo de compras.');*/
				CALL wheb_mensagem_pck.exibir_mensagem_abort(193465,'NR_ORDEM_COMPRA_W='||NR_ORDEM_COMPRA_W);
			end if;

			select	count(*)
			into STRICT	qt_existe_w
			from	ordem_compra
			where	nr_ordem_compra = nr_ordem_compra_w
			and	(nr_seq_motivo_cancel IS NOT NULL AND nr_seq_motivo_cancel::text <> '');

			if (qt_existe_w > 0) then
				/*'A ordem de compra número ' || NR_ORDEM_COMPRA_W || 'já foi cancelada. ' ||
				'Portanto, não é possível estornar esse processo de compras.');*/
				CALL wheb_mensagem_pck.exibir_mensagem_abort(193468,'NR_ORDEM_COMPRA_W='||NR_ORDEM_COMPRA_W);
			end if;

			select	count(*)
			into STRICT	qt_existe_w
			from	ordem_compra_item_entrega
			where	nr_ordem_compra = nr_ordem_compra_w
			and	coalesce(dt_cancelamento::text, '') = ''
			and	coalesce(qt_real_entrega, 0) > 0;

			if (qt_existe_w > 0) then
				/*'Já existe itens entregues na ordem de compra: ' || NR_ORDEM_COMPRA_W || '. ' ||
				'Portanto, não é possível estornar esse processo de compras.');*/
				CALL wheb_mensagem_pck.exibir_mensagem_abort(193469,'NR_ORDEM_COMPRA_W='||NR_ORDEM_COMPRA_W);
			end if;
			end;
		end loop;
		close C03;

		CALL desfazer_cot_compra(nr_cot_compra_w,nm_usuario_p,'S');

		if (nr_cot_compra_origem_lic_w > 0) then
			delete from cot_compra
			where nr_cot_compra = nr_cot_compra_w;
		end if;

		end;
	end loop;
	close C02;

	if (nr_cot_compra_origem_lic_w > 0) then
		delete from solic_compra
		where nr_solic_compra = nr_solic_compra_w;
	else
		update	solic_compra
		set	nr_seq_forma_compra = ''
		where	nr_solic_compra = nr_solic_compra_w;
	end if;

	end;
end loop;
close C01;

update	cot_compra
set	dt_fechamento_lic	= ''
where	nr_cot_compra	= nr_cot_compra_p;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE lic_est_fechamento_compra_dir ( nr_cot_compra_p bigint, nm_usuario_p text) FROM PUBLIC;

