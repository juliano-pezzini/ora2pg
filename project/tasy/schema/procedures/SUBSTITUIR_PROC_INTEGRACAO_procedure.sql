-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE substituir_proc_integracao ( nr_acesso_dicom_p text default null, cd_procedimento_p text default null, nm_usuario_p text default null) AS $body$
DECLARE


nr_seq_proc_interno_w       prescr_procedimento.nr_seq_proc_interno%type;
nr_seq_interno_w       		prescr_procedimento.nr_seq_interno%type;
nr_prescricao_w             prescr_procedimento.nr_prescricao%type;
nr_seq_proc_prescricao_w    prescr_procedimento.nr_sequencia%type;
nr_atendimento_w            procedimento_paciente.nr_atendimento%type;
cd_setor_atendimento_w      procedimento_paciente.cd_setor_atendimento%type;
nr_seq_propaci_w            procedimento_paciente.nr_sequencia%type;
nr_interno_conta_w          conta_paciente.nr_interno_conta%type;
cd_convenio_parametro_w     conta_paciente.cd_convenio_parametro%type;
cd_categoria_parametro_w    conta_paciente.cd_categoria_parametro%type;
cd_estabelecimento_w        conta_paciente.cd_estabelecimento%type;
cd_proc_integ_original_w    proc_interno_integracao.cd_integracao%type;
nr_seq_proc_int_novo_w      proc_interno_integracao.nr_seq_proc_interno%type;
cd_plano_convenio_w         atend_categoria_convenio.cd_plano_convenio%type;
cd_tipo_acomodacao_w        atend_categoria_convenio.cd_tipo_acomodacao%type;
ie_permite_troca_w          varchar(1);
cd_procedimento_w           bigint;
ie_origem_proced_w          bigint;
nr_seq_sistema_integ_w		bigint;
ie_tipo_integracao_w		varchar(3);


BEGIN
	
	if (nm_usuario_p = 'CWD') then
		nr_seq_sistema_integ_w := 139;
		ie_tipo_integracao_w := '19';
	elsif (nm_usuario_p	= 'RADCENTRE') then
		nr_seq_sistema_integ_w := 140;
		ie_tipo_integracao_w := '18';
	elsif (nm_usuario_p = 'CUSTODIAGNOSTIC') then
		nr_seq_sistema_integ_w := 152;
		ie_tipo_integracao_w := '20';
	elsif (nm_usuario_p	= 'CARDIOBASE') then
		nr_seq_sistema_integ_w := 153;
		ie_tipo_integracao_w := '21';
	end if;	
	
    if (nr_acesso_dicom_p IS NOT NULL AND nr_acesso_dicom_p::text <> '' AND cd_procedimento_p IS NOT NULL AND cd_procedimento_p::text <> '') then

        -- Obter a prescricao e o nr_seq_interno do procedimento atual
        select  max(nr_prescricao),
                max(nr_sequencia),
                max(nr_seq_proc_interno),
				max(nr_seq_interno)
        into STRICT    nr_prescricao_w,
                nr_seq_proc_prescricao_w,
                nr_seq_proc_interno_w,
                nr_seq_interno_w
        from    prescr_procedimento
        where   nr_acesso_dicom = nr_acesso_dicom_p;
		
        if (nr_seq_proc_interno_w IS NOT NULL AND nr_seq_proc_interno_w::text <> '') and (nr_prescricao_w IS NOT NULL AND nr_prescricao_w::text <> '') then            
            
            -- Dados da procedimento_paciente
            select  max(nr_atendimento), 
                    max(nr_interno_conta),
                    max(cd_setor_atendimento),
                    max(nr_sequencia)
            into STRICT    nr_atendimento_w,
                    nr_interno_conta_w,
                    cd_setor_atendimento_w,
                    nr_seq_propaci_w
            from    procedimento_paciente
            where   nr_prescricao = nr_prescricao_w
            and     nr_sequencia_prescricao = nr_seq_proc_prescricao_w;

            -- Dados da conta_paciente
            select  max(cd_convenio_parametro),
                    max(cd_categoria_parametro),
                    max(cd_estabelecimento)
            into STRICT    cd_convenio_parametro_w,
                    cd_categoria_parametro_w,
                    cd_estabelecimento_w
            from    conta_paciente
            where   nr_interno_conta = nr_interno_conta_w;	

            -- Obter o codigo do procedimento da integracao
            select  max(cd_integracao)
            into STRICT    cd_proc_integ_original_w
            from    proc_interno_integracao
            where   nr_seq_sistema_integ = nr_seq_sistema_integ_w
            and 	nr_seq_proc_interno = nr_seq_proc_interno_w
            and (coalesce(ie_utiliza_estab,'N') = 'N' or coalesce(cd_estabelecimento,cd_estabelecimento_w) = cd_estabelecimento_w);
			
            -- Obter o seq_interno do procedimento da integracao
            select  max(nr_seq_proc_interno)
            into STRICT    nr_seq_proc_int_novo_w
            from    proc_interno_integracao
            where   nr_seq_sistema_integ = nr_seq_sistema_integ_w
            and 	cd_integracao = cd_procedimento_p
            and (coalesce(ie_utiliza_estab,'N') = 'N' or coalesce(cd_estabelecimento,cd_estabelecimento_w) = cd_estabelecimento_w);
            -- Verificar a permissao para fazer a troca de procedimento
            begin
                select  'S'
                into STRICT    ie_permite_troca_w
                from    regra_proc_interno_integra
                where   nr_seq_proc_interno = nr_seq_proc_int_novo_w
                and ie_tipo_integracao = ie_tipo_integracao_w
                and cd_integracao = cd_proc_integ_original_w  LIMIT 1;
            exception
                when others then
                    ie_permite_troca_w := 'N';
            end;
			
			insert into procedimento_pac_executado(
					nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_seq_procedimento,
					nr_seq_proc_int_exec,
					dt_proc_exec)
			values (	
					nextval('procedimento_pac_executado_seq'),
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_interno_w,
					nr_seq_proc_int_novo_w,
					clock_timestamp()
			);

            if (ie_permite_troca_w = 'S') then
                -- Dados da atend_categoria_convenio
                select  max(cd_plano_convenio), 
                        max(cd_tipo_acomodacao)
                into STRICT    cd_plano_convenio_w, 
                        cd_tipo_acomodacao_w
                from    atend_categoria_convenio
                where   nr_atendimento = nr_atendimento_w
                and     nr_seq_interno = obter_atecaco_atend_conv(nr_atendimento_w,cd_convenio_parametro_w);
                -- Obter o cd_procedimento
                SELECT * FROM obter_proc_tab_interno_conv(
                    nr_seq_proc_int_novo_w, cd_estabelecimento_w, cd_convenio_parametro_w, cd_categoria_parametro_w, cd_plano_convenio_w, cd_setor_atendimento_w, cd_procedimento_w,  -- out
                    ie_origem_proced_w,  -- out
                    null, clock_timestamp(), cd_tipo_acomodacao_w, null, null, null, null, null, null, null) INTO STRICT cd_procedimento_w, 
                    ie_origem_proced_w;
					
                -- Realizar a troca
                if (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '' AND ie_origem_proced_w IS NOT NULL AND ie_origem_proced_w::text <> '')then
                     RAISE NOTICE 'fim';
                     CALL alterar_procedimento_paciente(
                        nr_seq_propaci_w,
                        cd_procedimento_w,
                        nr_seq_proc_int_novo_w,
                        null,
                        ie_origem_proced_w,
                        nm_usuario_p);
                end if;
            else
                CALL gravar_log_cdi(7000, nr_acesso_dicom_p || '#@#@' || dbms_utility.format_error_backtrace, nm_usuario_p);
            end if;
        end if;
    end if;

    commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE substituir_proc_integracao ( nr_acesso_dicom_p text default null, cd_procedimento_p text default null, nm_usuario_p text default null) FROM PUBLIC;

