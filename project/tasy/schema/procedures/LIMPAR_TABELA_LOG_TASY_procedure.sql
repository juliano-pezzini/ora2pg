-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE limpar_tabela_log_tasy () AS $body$
DECLARE


qt_dia_log_tasy_w	bigint;
nm_tabela_w		varchar(50);
ds_sql_limpeza_w	varchar(255);
ie_opcao_w		varchar(1);
nm_tabela_destino_w	varchar(50);
nm_campos_w		varchar(2000);
s_array 		LT_DATE;
i			integer := 1;
type Vetor is table of LT_DATE index by integer;
Vetor_c01_w		Vetor;
dt_inicial_w		timestamp := to_Date('01/01/1900','dd/mm/yyyy');
dt_final_w		timestamp;
qt_limite_w		integer;

c01 CURSOR FOR
	SELECT	a.qt_dia_log_tasy,
		a.nm_tabela,
		b.ds_sql_limpeza,
		a.ie_opcao,
		a.nm_tabela_destino,
		coalesce(a.qt_limite, 100000)
	from	regra_limpeza_tabela a,
		tabela_sistema b
	where	a.ie_situacao = 'A'
	and	a.nm_tabela = b.nm_tabela
	order by nr_seq_delecao;

C02 CURSOR FOR
	SELECT *
	from (
		SELECT	a.dt_atualizacao
		from	log_tasy a
		where	a.dt_atualizacao between dt_inicial_w and dt_final_w
	) alias0 LIMIT (-1);


BEGIN

CALL gravar_processo_longo('Vetor Principal', 'LIMPAR_TABELA_LOG_TASY', -1);

open c01;
loop
fetch c01 into
	qt_dia_log_tasy_w,
	nm_tabela_w,
	ds_sql_limpeza_w,
	ie_opcao_w,
	nm_tabela_destino_w,
	qt_limite_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	dt_final_w := clock_timestamp() - qt_dia_log_tasy_w;
	CALL gravar_processo_longo(nm_tabela_w,'LIMPAR_TABELA_LOG_TASY',-1);

	/*TRATAMENTO ESPECÃŒFICO DEVIDO AO VOLUME DE DADOS*/

	if (nm_tabela_w = 'LOG_TASY') then
		begin
			CALL exec_sql_dinamico('Tasy','ALTER TABLE LOG_TASY NOLOGGING');
			open c02;
			loop
			FETCH C02 BULK COLLECT INTO s_array LIMIT 100;
				Vetor_c01_w(i) := s_array;
				i := i + 1;
			EXIT WHEN NOT FOUND; /* apply on C02 */
			END LOOP;
			CLOSE C02;

			for i in 1..Vetor_c01_w.COUNT loop
				s_array := Vetor_c01_w(i);

				CALL gravar_processo_longo('Removendo LOG_TASY -> ' || i || '/' || Vetor_c01_w.COUNT,'LIMPAR_TABELA_LOG_TASY',-1);

				delete	from	log_tasy
				where	dt_atualizacao in ( SELECT column_value from table(cast(s_array as LT_DATE)));

				commit;
			end LOOP;
			CALL exec_sql_dinamico('Tasy','ALTER TABLE LOG_TASY LOGGING');
		exception
		when others then
			CALL exec_sql_dinamico('Tasy','ALTER TABLE LOG_TASY LOGGING');
		end;

	else
		CALL CALL limpar_tabela(nm_tabela_w, ds_sql_limpeza_w, qt_dia_log_tasy_w, ie_opcao_w, nm_tabela_destino_w);
	end if;
	end;
end loop;
close c01;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE limpar_tabela_log_tasy () FROM PUBLIC;

