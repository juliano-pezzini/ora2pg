-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE importar_extrato_cartao_banese (nr_seq_extrato_p bigint, nm_usuario_p text) AS $body$
DECLARE


dt_criacao_w		timestamp;
nr_extrato_w		integer;
nr_resumo_w		varchar(20);
nr_seq_conta_banco_w	bigint;
qt_cv_aceito_w		bigint;
qt_cv_rejeitado_w	bigint;
vl_bruto_w		double precision;
vl_comissao_w		double precision;
vl_rejeitado_w		double precision;
vl_liquido_w		double precision;
cd_estabelecimento_w	smallint;
vl_parcela_w		double precision;
dt_compra_w		timestamp;
qt_parcelas_w		bigint;
nr_cartao_w		varchar(20);
nr_autorizacao_w	varchar(40);
nr_parcela_w		bigint;
nr_seq_extrato_res_w	bigint;
ie_tipo_registro_w	varchar(2);
nr_sequencia_w		bigint;
dt_min_parcela_w	timestamp;
dt_max_parcela_w	timestamp;
nr_seq_bandeira_w	bigint;
ds_comprovante_w	varchar(12);

/* cursor resumos */

c01 CURSOR FOR
/* Resumo */

SELECT	nr_sequencia,
	substr(ds_conteudo,1,1) ie_tipo_registro,
	substr(ds_conteudo,22,9) nr_resumo,
	substr(ds_conteudo,67,9) qt_cv_aceito,
	substr(ds_conteudo,76,9) qt_cv_rejeitado,
	(substr(ds_conteudo,85,10) || ',' || substr(ds_conteudo,95,2))::numeric  vl_bruto,
	(substr(ds_conteudo,121,10) || ',' || substr(ds_conteudo,131,2))::numeric  vl_comissao,
	(substr(ds_conteudo,133,10) || ',' || substr(ds_conteudo,143,2))::numeric  vl_rejeitado,
	(substr(ds_conteudo,97,10) || ',' || substr(ds_conteudo,107,2))::numeric  vl_liquido,
	(null)::numeric  vl_parcela,
	to_date(substr(ds_conteudo,31,8),'ddmmyyyy') dt_compra,
	(substr(ds_conteudo,171,2))::numeric  nr_parcela,
	(substr(ds_conteudo,173,2))::numeric  qt_parcelas,
	to_char(null) nr_cartao,
	to_char(null) nr_autorizacao,
	to_char(null) ds_comprovante
from	w_extrato_cartao_cr
where	nr_seq_extrato			= nr_seq_extrato_p
and	substr(ds_conteudo,1,1) 	= '1'

union all

/* Detalhe */

select	nr_sequencia,
	substr(ds_conteudo,1,1) ie_tipo_registro,
	to_char(null) nr_resumo,
	to_char(null) qt_cv_aceito,
	to_char(null) qt_cv_rejeitado,
	(null)::numeric  vl_bruto,
	(null)::numeric  vl_comissao,
	(null)::numeric  vl_rejeitado,
	(null)::numeric  vl_liquido,
	(substr(ds_conteudo,71,10) || ',' || substr(ds_conteudo,81,2))::numeric  vl_parcela,
	to_date(substr(ds_conteudo,38,8),'ddmmyyyy') dt_compra,
	(substr(ds_conteudo,109,2))::numeric  nr_parcela,
	somente_numero(substr(ds_conteudo,107,2)) qt_parcelas,
	to_char(somente_numero(substr(ds_conteudo,52,19))) nr_cartao,
	substr(ds_conteudo,131,10) nr_autorizacao,
	substr(ds_conteudo,26,12) ds_comprovante
from	w_extrato_cartao_cr
where	nr_seq_extrato			= nr_seq_extrato_p
and	substr(ds_conteudo,1,1) 	= '2'
order by	nr_sequencia;


BEGIN

select	cd_estabelecimento,
	nr_seq_bandeira
into STRICT	cd_estabelecimento_w,
	nr_seq_bandeira_w
from	extrato_cartao_cr
where	nr_sequencia	= nr_seq_extrato_p;

/* header */

select	somente_numero(substr(max(ds_conteudo),81,9)) nr_extrato,
	to_date(trim(both substr(max(ds_conteudo),2,8)),'ddmmyyyy') dt_criacao
into STRICT	nr_extrato_w,
	dt_criacao_w
from	w_extrato_cartao_cr
where	nr_seq_extrato	= nr_seq_extrato_p
and	substr(ds_conteudo,1,1)	= '0';

begin
open c01;
loop
fetch c01 into
	nr_sequencia_w,
	ie_tipo_registro_w,
	nr_resumo_w,
	qt_cv_aceito_w,
	qt_cv_rejeitado_w,
	vl_bruto_w,
	vl_comissao_w,
	vl_rejeitado_w,
	vl_liquido_w,
	vl_parcela_w,
	dt_compra_w,
	nr_parcela_w,
	qt_parcelas_w,
	nr_cartao_w,
	nr_autorizacao_w,
	ds_comprovante_w;
EXIT WHEN NOT FOUND; /* apply on c01 */

	if (ie_tipo_registro_w = '1') then

		select	(obter_valor_bandeira_estab(a.nr_sequencia,cd_estabelecimento_w,'NR_SEQ_CONTA_BANCO'))::numeric
		into STRICT	nr_seq_conta_banco_w
		from	bandeira_cartao_cr a
		where	a.nr_sequencia	= nr_seq_bandeira_w;

		if (coalesce(nr_seq_conta_banco_w::text, '') = '') then
			/* Não foi encontrada a conta bancária de referência no cadastro da bandeira do extrato! */

			CALL wheb_mensagem_pck.exibir_mensagem_abort(239280);
		end if;

		select	nextval('extrato_cartao_cr_res_seq')
		into STRICT	nr_seq_extrato_res_w
		;

		insert	into extrato_cartao_cr_res(nr_sequencia,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			dt_atualizacao,
			nm_usuario,
			nr_seq_extrato,
			nr_resumo,
			nr_seq_conta_banco,
			qt_cv_aceito,
			qt_cv_rejeitado,
			vl_bruto,
			vl_comissao,
			vl_rejeitado,
			vl_liquido,
			dt_prev_pagto)
		values (nr_seq_extrato_res_w,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_extrato_p,
			nr_resumo_w,
			nr_seq_conta_banco_w,
			qt_cv_aceito_w,
			qt_cv_rejeitado_w,
			vl_bruto_w,
			vl_comissao_w,
			vl_rejeitado_w,
			vl_liquido_w,
			dt_compra_w);

	elsif (ie_tipo_registro_w = '2')  then

		insert	into extrato_cartao_cr_movto(nr_sequencia,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			dt_atualizacao,
			nm_usuario,
			nr_seq_extrato,
			nr_seq_extrato_res,
			vl_parcela,
			qt_parcelas,
			nr_cartao,
			nr_autorizacao,
			dt_compra,
			nr_parcela,
			ie_pagto_indevido,
			ds_comprovante)
		values (nextval('extrato_cartao_cr_movto_seq'),
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_extrato_p,
			nr_seq_extrato_res_w,
			vl_parcela_w,
			qt_parcelas_w,
			nr_cartao_w,
			nr_autorizacao_w,
			dt_compra_w,
			nr_parcela_w,
			'N',
			ds_comprovante_w);
	end if;

end loop;
close c01;
exception
	when others then
	/* nr_sequencia_w sqlerrm */

	CALL wheb_mensagem_pck.exibir_mensagem_abort(239281,	'NR_SEQUENCIA_W=' || nr_sequencia_w ||
							';SQL_ERRM=' || sqlerrm);
end;

select	min(dt_compra),
	max(dt_compra)
into STRICT	dt_min_parcela_w,
	dt_max_parcela_w
from	extrato_cartao_cr_movto
where	nr_seq_extrato	=	nr_seq_extrato_p;

update	extrato_cartao_cr
set	nr_extrato		= nr_extrato_w,
	dt_importacao		= clock_timestamp(),
	dt_processamento	= dt_criacao_w,
	dt_inicial		= dt_min_parcela_w,
	dt_final		= dt_max_parcela_w
where	nr_sequencia		= nr_seq_extrato_p;

delete	from w_extrato_cartao_cr
where	nr_seq_extrato		= nr_seq_extrato_p;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE importar_extrato_cartao_banese (nr_seq_extrato_p bigint, nm_usuario_p text) FROM PUBLIC;

