-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_pj_fornec_material ( cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE

						
cd_agencia_w			pls_fornec_mat_fed_sc.cd_agencia%type;
cd_banco_w			pls_fornec_mat_fed_sc.cd_banco%type;
cd_cep_w			pls_fornec_mat_fed_sc.cd_cep%type;
cd_conta_w			pls_fornec_mat_fed_sc.cd_conta%type;
cd_cgc_w			pls_fornec_mat_fed_sc.cd_cgc%type;
cd_localidade_w			pls_fornec_mat_fed_sc.cd_localidade%type;
ds_bairro_w			pls_fornec_mat_fed_sc.ds_bairro%type;
ds_contato_w			pls_fornec_mat_fed_sc.ds_contato%type;
ds_email_w			pls_fornec_mat_fed_sc.ds_email%type;
ds_endereco_w			pls_fornec_mat_fed_sc.ds_endereco%type;
nm_abreviado_w			pls_fornec_mat_fed_sc.nm_abreviado%type;
nm_fornecedor_w			pls_fornec_mat_fed_sc.nm_fornecedor%type;
nr_fax_w			pls_fornec_mat_fed_sc.nr_fax%type;
nr_inscricao_estadual_w		pls_fornec_mat_fed_sc.nr_inscricao_estadual%type;
nr_telefone_w			pls_fornec_mat_fed_sc.nr_telefone%type;
cd_tipo_pessoa_w		pls_parametros_mat_fed_sc.cd_tipo_pessoa%type;
ie_situacao_w			pls_fornec_mat_fed_sc.ie_situacao%type;
ds_municipio_w			cep_loc.nm_localidade%type;
ds_uf_w				cep_log.ds_uf%type;
nr_seq_fornecedor_w		pls_fornec_mat_fed_sc.nr_sequencia%type;
dt_inclusao_w			pls_fornec_mat_fed_sc.dt_inclusao%type;
qt_registro_w			integer;

-- Dados dos fornecedores
C01 CURSOR FOR
	SELECT	cd_cgc,
		cd_agencia,
		cd_banco,
		cd_cep,
		cd_conta,
		cd_localidade,
		substr(trim(both ds_bairro),1,40),
		substr(trim(both ds_contato),1,255),
		substr(trim(both ds_email),1,60),
		substr(trim(both ds_endereco),1,40),
		substr(trim(both nm_abreviado),1,80),
		substr(trim(both nm_fornecedor),1,80),
		substr(trim(both nr_fax),1,15),
		substr(trim(both nr_inscricao_estadual),1,20),
		substr(trim(both nr_telefone),1,15),
		substr(coalesce(ie_situacao,'A'),1,1),
		nr_sequencia,
		dt_inclusao
	from	pls_fornec_mat_fed_sc
	where	coalesce(dt_vinculo::text, '') = ''
	and	ie_inconsistencia = 'N'
	order by nr_sequencia;
	

BEGIN

open C01;
loop
fetch C01 into	
	cd_cgc_w,
	cd_agencia_w,
	cd_banco_w,
	cd_cep_w,
	cd_conta_w,
	cd_localidade_w,
	ds_bairro_w,
	ds_contato_w,
	ds_email_w,
	ds_endereco_w,
	nm_abreviado_w,
	nm_fornecedor_w,
	nr_fax_w,
	nr_inscricao_estadual_w,
	nr_telefone_w,
	ie_situacao_w,
	nr_seq_fornecedor_w,
	dt_inclusao_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	-- Verificar se existe a pessoa juridica na base, caso nao existir inserir a nova pessoa juridica
	select	count(1)
	into STRICT	qt_registro_w
	from	pessoa_juridica
	where	cd_cgc	= cd_cgc_w;
	
	if (qt_registro_w = 0) then
		-- Pegar o Tipo de Pessoa Juridica
		select	max(cd_tipo_pessoa)
		into STRICT	cd_tipo_pessoa_w
		from	pls_parametros_mat_fed_sc
		where	cd_estabelecimento	= cd_estabelecimento_p;	
		
		-- Pegar o municipio
		if (cd_cep_w IS NOT NULL AND cd_cep_w::text <> '') then
			select	a.ds_uf,
				b.nm_localidade
			into STRICT	ds_uf_w,
				ds_municipio_w
			from	cep_loc		b,
				cep_log		a
			where	b.nr_sequencia	= a.nr_seq_loc
			and	a.cd_cep	= cd_cep_w;
		end if;
		
		insert into pessoa_juridica(cd_cgc,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			ds_razao_social,
			nm_fantasia,
			cd_cep,
			ds_endereco,
			ds_bairro,
			ds_municipio,
			sg_estado,
			cd_tipo_pessoa,
			ie_prod_fabric,
			ie_situacao,
			ds_email,
			nr_fax,
			nr_inscricao_estadual,
			nr_telefone,
			nm_pessoa_contato,
			ds_observacao)
		values (cd_cgc_w,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nm_fornecedor_w,
			nm_abreviado_w,
			cd_cep_w,
			ds_endereco_w,
			ds_bairro_w,
			ds_municipio_w,
			ds_uf_w,
			cd_tipo_pessoa_w,
			'S',
			ie_situacao_w,
			ds_email_w,
			nr_fax_w,
			nr_inscricao_estadual_w,
			nr_telefone_w,
			ds_contato_w,
			'Gerado a partir da importacao dos forncedores de materiais');
			
		update	pls_fornec_mat_fed_sc
		set	dt_vinculo	= clock_timestamp()
		where	nr_sequencia	= nr_seq_fornecedor_w;	
		
		-- Verifica se o banco existe no sistema
		select	count(1)
		into STRICT	qt_registro_w
		from	banco
		where	cd_banco = cd_banco_w;
		
		if (qt_registro_w > 1) and (cd_agencia_w IS NOT NULL AND cd_agencia_w::text <> '') and (cd_banco_w IS NOT NULL AND cd_banco_w::text <> '') and (cd_conta_w IS NOT NULL AND cd_conta_w::text <> '') then
			
			-- Inserir na pessoa juridica os dados da sua conta
			insert into pessoa_juridica_conta(cd_cgc,
				dt_atualizacao,
				nm_usuario,
				cd_banco,
				nr_conta,
				cd_agencia_bancaria,
				ie_situacao,
				ie_conta_pagamento,
				ie_prestador_pls,
				ie_tipo_conta)
			values (cd_cgc_w,
				clock_timestamp(),
				nm_usuario_p,
				cd_banco_w,
				cd_conta_w,
				cd_agencia_w,
				ie_situacao_w,
				'S',
				'S',
				'CC');
		end if;
	end if;
	
	-- Verifica novamente se existe pessoa juridica cadastrada
	select	count(1)
	into STRICT	qt_registro_w
	from	pessoa_juridica
	where	cd_cgc = cd_cgc_w;
	
	if (qt_registro_w > 0) then
		-- Aqui ele grava o dt vinculo, pois a pessoa juridica existe (entrou neste IF)
		update	pls_fornec_mat_fed_sc
		set	dt_vinculo	= clock_timestamp()
		where	nr_sequencia	= nr_seq_fornecedor_w;
		
		-- Cadastrar Fornecedor nos Prestadores
		insert into pls_prestador(nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			cd_estabelecimento,
			dt_cadastro,
			ie_abramge,
			ie_tipo_relacao,
			ie_situacao,
			ie_tipo_vinculo,
			ie_regra_data_preco_proc,
			ie_regra_data_preco_taxas,
			ie_regra_data_preco_diaria,
			ie_regra_data_preco_pacote,
			ie_regra_data_preco_mat,
			ie_guia_medico,
			ie_ptu_a400,
			ie_acidente_trabalho,
			ie_urgencia_emergencia,
			ie_tabela_propria,
			ie_prestador_alto_custo,
			cd_cgc,
			ie_tipo_endereco,
			nr_seq_fornec_mat_fed,
			ie_particip_qualiss_ans)
		values (nextval('pls_prestador_seq'),
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			cd_estabelecimento_p,
			dt_inclusao_w,
			'N',
			'F',
			ie_situacao_w,
			'C',
			'E',
			'E',
			'E',
			'E',
			'E',
			'S',
			'N',
			'N',
			'N',
			'N',
			'N',
			cd_cgc_w,
			'PJ',
			nr_seq_fornecedor_w,
			'N');
	end if;
	end;
end loop;
close C01;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_pj_fornec_material ( cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;

