-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_eis_procedimento ( dt_parametro_p timestamp, nm_usuario_p text, ie_diario_mensal_p text, ie_acumular_p text) AS $body$
DECLARE

 
nr_sequencia_w			bigint;	
nr_sequencia_ww			bigint;					
dt_atualizacao_w			timestamp     		:= clock_timestamp();
dt_parametro_fim_w		timestamp;
dt_parametro_w			timestamp;
dt_parametro_mes_w		timestamp;
ds_retorno_w			varchar(255);
cd_estabelecimento_w		smallint;
cd_setor_atendimento_w    	integer;
dt_hora_execucao_w		smallint;
cd_procedimento_w		bigint;
cd_convenio_w			integer;
cd_tecnico_w			varchar(10);
cd_medico_executor_w     	varchar(10);
cd_medico_prescr_w		varchar(10);
cd_medico_laudo_w		varchar(10);
cd_medico_solicitante_w		varchar(10);
cd_conta_contabil_w      		varchar(20);
ie_origem_proced_w      		bigint;
cd_equipamento_w        	bigint;
ie_tipo_atendimento_w		smallint;
qt_procedimento_w       		double precision;
vl_medico_w          		double precision;
vl_materiais_w        		double precision;
vl_custo_operacional_w    	double precision;
vl_auxiliares_w		    	double precision;
vl_anestesista_w	    		double precision;
vl_custo_w			double precision;
qt_dias_prazo_w			double precision := 1;
cd_especialidade_w		integer;
nr_seq_grupo_rec_w		bigint;
ie_tipo_convenio_w		smallint;
nr_seq_proc_interno_w		bigint;
cd_medico_req_w			varchar(10);
cd_medico_executor_ww		varchar(10);
ie_lado_w			varchar(01);
ie_clinica_w			integer;
dt_procedimento_w		timestamp;
dt_procedimento_hora_w		timestamp;
cd_procedencia_w			integer;
ie_complexidade_sus_w		varchar(2);
vl_procedimento_w			double precision;
nr_interno_conta_w		bigint;
vl_adicional_w			double precision;
vl_glosa_w			double precision;
vl_amenor_w			double precision;
cd_paciente_w			varchar(10);
cd_categoria_w			varchar(10);
NR_SEQ_AGRUP_CLASSIF_w		bigint;
nr_atendimento_w		atendimento_paciente.nr_atendimento%type;
nm_paciente_w			varchar(60);

C01 CURSOR FOR 
SELECT	/*+ INDEX(A PROPACI_I4) */ 
	c.cd_estabelecimento, 
	a.IE_ORIGEM_PROCED, 
	a.CD_PROCEDIMENTO, 
	a.CD_SETOR_ATENDIMENTO, 
	TO_CHAR(a.DT_PROCEDIMENTO, 'HH24'), 
	B.IE_TIPO_ATENDIMENTO, 
	A.CD_MEDICO_req, 
	A.CD_PESSOA_FISICA, 
	Obter_Medico_Prescricao(a.nr_prescricao, 'C') cd_medico_prescr, 
	coalesce(Obter_Medico_Laudo(a.nr_sequencia),Obter_Medico_Laudo_Sequencia(a.nr_laudo,'C')), 
	cd_convenio, 
	SUM(a.QT_PROCEDIMENTO) , 
	A.CD_CONTA_CONTABIL, 
	A.CD_ESPECIALIDADE, 
	A.NR_SEQ_GRUPO_REC, 
	Obter_Tipo_Convenio(a.cd_convenio) IE_TIPO_CONVENIO, 
	a.NR_SEQ_PROC_INTERNO, 
	a.cd_medico_executor, 
	Obter_Lado_Item_Prescr(a.nr_prescricao, a.nr_sequencia_prescricao), 
	b.ie_clinica, 
	trunc(a.dt_procedimento), 
	a.dt_procedimento, 
	b.cd_procedencia, 
	substr(sus_obter_complexidade_proced(a.cd_procedimento,a.ie_origem_proced,'C'),1,2), 
	sum(a.vl_procedimento) vl_procedimento, 
	c.nr_interno_conta, 
	sum(obter_valor_conv_ret_glosa(a.nr_sequencia, null, 'A')), 
	sum(obter_valor_conv_ret_glosa(a.nr_sequencia, null, 'GG')), 
	sum(obter_valor_conv_ret_glosa(a.nr_sequencia, null, 'M')), 
	b.cd_pessoa_fisica, 
	a.cd_categoria 
from 	Atendimento_paciente b, 
	conta_paciente c, 
	Procedimento_paciente a 
where	a.dt_procedimento		between dt_parametro_w and dt_parametro_fim_w 
and 	b.nr_atendimento		= c.nr_atendimento 
and	a.nr_interno_conta		= c.nr_interno_conta 
and 	coalesce(a.cd_motivo_exc_conta::text, '') = '' 
and	nr_sequencia		<> coalesce(nr_seq_proc_pacote,0)	 
group by	c.cd_estabelecimento, 
	c.nr_interno_conta, 
	a.IE_ORIGEM_PROCED, 
	a.CD_PROCEDIMENTO, 
	a.CD_SETOR_ATENDIMENTO, 
	TO_CHAR(a.DT_PROCEDIMENTO, 'HH24'), 
	B.IE_TIPO_ATENDIMENTO, 
	A.CD_MEDICO_req, 
	cd_convenio, 
	Obter_Medico_Prescricao(a.nr_prescricao, 'C'), 
	coalesce(Obter_Medico_Laudo(a.nr_sequencia),Obter_Medico_Laudo_Sequencia(a.nr_laudo,'C')), 
	A.CD_PESSOA_FISICA, 
	A.CD_CONTA_CONTABIL, 
	A.CD_ESPECIALIDADE, 
	A.NR_SEQ_GRUPO_REC, 
	a.dt_procedimento, 
	Obter_Tipo_Convenio(a.cd_convenio), 
	a.NR_SEQ_PROC_INTERNO, 
	a.cd_medico_executor, 
	Obter_Lado_Item_Prescr(a.nr_prescricao, a.nr_sequencia_prescricao), 
	b.ie_clinica, 
	b.cd_procedencia, 
	trunc(a.dt_procedimento), 
	b.cd_pessoa_fisica, 
	a.cd_categoria;		
 
C02 CURSOR FOR 
	SELECT /*+ INDEX(A PROPACI_I4) */ 
 	b.cd_estabelecimento, 
	a.IE_ORIGEM_PROCED, 
 	a.CD_PROCEDIMENTO, 
 	a.CD_SETOR_ATENDIMENTO, 
	B.IE_TIPO_ATENDIMENTO, 
	A.CD_MEDICO_EXECUTOR, 
	A.CD_CONTA_CONTABIL, 
 	a.CD_EQUIPAMENTO, 
	obter_medico_laudo(a.nr_sequencia) cd_medico_laudo, 
   	A.CD_CONVENIO, 
	SUM(a.QT_PROCEDIMENTO), 
 	SUM(a.VL_MEDICO), 
 	SUM(a.VL_MATERIAIS), 
 	SUM(a.VL_AUXILIARES), 
 	SUM(a.VL_CUSTO_OPERACIONAL), 
 	SUM(a.VL_ANESTESISTA) , 
	a.NR_SEQ_PROC_INTERNO, 
	A.CD_MEDICO_REQ, 
	Obter_Medico_Prescricao(a.nr_prescricao, 'C') cd_medico_prescr, 
	substr(sus_obter_complexidade_proced(a.cd_procedimento,a.ie_origem_proced,'C'),1,2), 
	b.cd_pessoa_fisica, 
	b.nr_atendimento 
   from 	Atendimento_paciente b, 
		Procedimento_paciente a, 
		conta_paciente c 
   where 	a.dt_procedimento between dt_parametro_w and dt_parametro_fim_w 
    and 	coalesce(a.cd_motivo_exc_conta::text, '') = '' 
	and	a.nr_interno_conta = c.nr_interno_conta 
	 and 	nr_sequencia <> coalesce(nr_seq_proc_pacote,0) 
	 and 	a.nr_atendimento	= b.nr_atendimento 
	GROUP BY 
		b.cd_estabelecimento, 
		a.IE_ORIGEM_PROCED, 
 		a.CD_PROCEDIMENTO, 
 		a.CD_SETOR_ATENDIMENTO, 
		B.IE_TIPO_ATENDIMENTO, 
		A.CD_MEDICO_EXECUTOR, 
		obter_medico_laudo(a.nr_sequencia), 
		A.CD_CONTA_CONTABIL,	 
 		a.CD_EQUIPAMENTO, 
      		 A.CD_CONVENIO, 
		a.NR_SEQ_PROC_INTERNO, 
		A.CD_MEDICO_REQ, 
		Obter_Medico_Prescricao(a.nr_prescricao, 'C'), 
		b.cd_pessoa_fisica, 
		b.nr_atendimento;


BEGIN 
nr_sequencia_w := Gravar_Log_Indicador(151, wheb_mensagem_pck.get_texto(802237), clock_timestamp(), trunc(dt_parametro_p), 'Tasy', nr_sequencia_w);
nr_sequencia_ww := Gravar_Log_Indicador(21, wheb_mensagem_pck.get_texto(802238), clock_timestamp(), trunc(dt_parametro_p), 'Tasy', nr_sequencia_ww);
commit;
 
if (ie_diario_mensal_p = 'D') then 
	begin 
	dt_parametro_fim_w       :=  
    		(to_date((to_char(dt_parametro_p,'dd/mm/yyyy') || ' 23:59:59'), 
			'dd/mm/yyyy hh24:mi:ss'));
	dt_parametro_w         := 
    		(to_date((to_char(dt_parametro_p,'dd/mm/yyyy') || ' 00:00:00'), 
			'dd/mm/yyyy hh24:mi:ss'));
	end;
end if;
if (ie_diario_mensal_p = 'M') then 
	begin 
	dt_parametro_fim_w       := 
   		(to_date((to_char(last_Day(dt_parametro_p),'dd/mm/yyyy') || ' 23:59:59'), 
			'dd/mm/yyyy hh24:mi:ss'));
	dt_parametro_w         := Trunc(dt_parametro_p,'month');
	end;
end if;
dt_parametro_mes_w          := Trunc(dt_parametro_p,'month');
 
delete 	from eis_proced_executado 
where 	dt_referencia between dt_parametro_w and dt_parametro_fim_w 
and	ie_periodo	= IE_DIARIO_MENSAL_P;
commit;
 
if (IE_DIARIO_MENSAL_P	= 'M') then 
 
	delete 	from eis_proced_executado 
	where 	dt_referencia between dt_parametro_w and dt_parametro_fim_w 
	and	ie_periodo	= 'D';
 
end if;
 
delete from eis_proced_Faturado 
where dt_Contabil between dt_parametro_w and dt_parametro_fim_w;
 
delete from eis_proced_Faturado 
where dt_contabil 	< clock_timestamp() - interval '60 days' 
 and ie_periodo 		= 'D';
Commit;
 
OPEN C01;
LOOP 
FETCH C01 into 	 
	CD_ESTABELECIMENTO_W, 
	IE_ORIGEM_PROCED_W, 
	CD_PROCEDIMENTO_W, 
	CD_SETOR_ATENDIMENTO_W, 
	DT_HORA_EXECUCAO_W, 
	IE_TIPO_ATENDIMENTO_W, 
	CD_MEDICO_SOLICITANTE_W, 
	CD_TECNICO_W, 
	cd_medico_prescr_w, 
	cd_medico_laudo_w, 
	cd_convenio_w, 
	QT_PROCEDIMENTO_W, 
	CD_CONTA_CONTABIL_W, 
	CD_ESPECIALIDADE_W, 
	NR_SEQ_GRUPO_REC_W, 
	IE_TIPO_CONVENIO_W, 
	NR_SEQ_PROC_INTERNO_w, 
	cd_medico_executor_wW, 
	ie_lado_w, 
	ie_clinica_w, 
	dt_procedimento_w, 
	dt_procedimento_hora_w, 
	cd_procedencia_w, 
	ie_complexidade_sus_w, 
	vl_procedimento_w, 
	nr_interno_conta_w, 
	vl_adicional_w, 
	vl_glosa_w, 
	vl_amenor_w, 
	cd_paciente_w, 
	cd_categoria_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
		begin 
		 
		begin 
		NR_SEQ_AGRUP_CLASSIF_w := Obter_agrupamento_setor(cd_setor_atendimento_w);
		exception 
		when others then 
		NR_SEQ_AGRUP_CLASSIF_w:= null;
		end;
		 
 		insert into EIS_Proced_Executado( 
			DT_REFERENCIA		, 
 			CD_ESTABELECIMENTO   ,        
 			CD_SETOR_ATENDIMENTO  ,        
 			IE_ORIGEM_PROCED    ,        
 			CD_PROCEDIMENTO     ,        
			IE_PERIODO			, 
 			DT_HORA_EXAME      ,        
 			CD_TECNICO		   ,        
 			CD_MEDICO_SOLICITANTE  ,        
 			IE_TIPO_ATENDIMENTO   ,        
 			QT_PROCEDIMENTO		, 
			NM_USUARIO			, 
			DT_ATUALIZACAO, 
			cd_medico_prescr, 
			cd_convenio, 
			CD_CONTA_CONTABIL, 
			CD_ESPECIALIDADE, 
			NR_SEQ_GRUPO_REC, 
			IE_TIPO_CONVENIO, 
			NR_SEQ_PROC_INTERNO, 
			cd_medico_executor, 
			ie_lado, 
			ie_clinica, 
			cd_procedencia, 
			ie_complexidade_sus, 
			nr_seq_turno, 
			ds_turno_atend, 
			vl_procedimento, 
			nr_interno_conta, 
			vl_adicional, 
			vl_glosa, 
			vl_amenor, 
			cd_pessoa_fisica, 
			cd_categoria, 
			NR_SEQ_AGRUP_CLASSIF, 
			cd_medico_laudo)                
    		Values ( 
			dt_Parametro_w,  
       	  	cd_estabelecimento_w, 
       	  	cd_setor_atendimento_w, 
       	  	ie_origem_proced_w, 
			cd_procedimento_w, 
			IE_DIARIO_MENSAL_P, 
			DT_HORA_EXECUCAO_W, 
			cd_tecnico_w, 
			cd_medico_solicitante_w, 
			ie_tipo_atendimento_w, 
			qt_procedimento_w, 
			nm_usuario_p, 
			dt_atualizacao_w, 
			cd_medico_prescr_w, 
			cd_convenio_w, 
			CD_CONTA_CONTABIL_W, 
			CD_ESPECIALIDADE_W, 
			NR_SEQ_GRUPO_REC_W, 
			IE_TIPO_CONVENIO_W, 
			NR_SEQ_PROC_INTERNO_w, 
			cd_medico_executor_wW, 
			ie_lado_w, 
			ie_clinica_w, 
			cd_procedencia_w, 
			ie_complexidade_sus_w, 
			Obter_Turno_Atendimento(dt_procedimento_hora_w, cd_estabelecimento_w, 'C'), 
			Obter_Turno_Atendimento(dt_procedimento_hora_w, cd_estabelecimento_w, 'D'), 
			vl_procedimento_w, 
			nr_interno_conta_w, 
			vl_adicional_w, 
			vl_glosa_w, 
			vl_amenor_w, 
			cd_paciente_w, 
			cd_categoria_w, 
			NR_SEQ_AGRUP_CLASSIF_w, 
			cd_medico_laudo_w);
	 
		if (IE_DIARIO_MENSAL_P	= 'M')	then 
		 
			 insert into EIS_Proced_Executado( 
					DT_REFERENCIA		, 
		 			CD_ESTABELECIMENTO   ,        
		 			CD_SETOR_ATENDIMENTO  ,        
		 			IE_ORIGEM_PROCED    ,        
		 			CD_PROCEDIMENTO     ,        
					IE_PERIODO			, 
		 			DT_HORA_EXAME      ,        
		 			CD_TECNICO		   ,        
		 			CD_MEDICO_SOLICITANTE  ,        
		 			IE_TIPO_ATENDIMENTO   ,        
		 			QT_PROCEDIMENTO		, 
					NM_USUARIO			, 
					DT_ATUALIZACAO, 
					cd_medico_prescr, 
					cd_convenio, 
					CD_CONTA_CONTABIL, 
					CD_ESPECIALIDADE, 
					NR_SEQ_GRUPO_REC, 
					IE_TIPO_CONVENIO, 
					NR_SEQ_PROC_INTERNO, 
					cd_medico_executor, 
					ie_lado, 
					ie_clinica, 
					cd_procedencia, 
					ie_complexidade_sus, 
					nr_seq_turno, 
					ds_turno_atend, 
					vl_procedimento, 
					nr_interno_conta, 
					vl_adicional, 
					vl_glosa, 
					vl_amenor, 
					cd_pessoa_fisica, 
					cd_categoria, 
					cd_medico_laudo)                
		    	Values ( 
					trunc(dt_procedimento_w ),  
		         	cd_estabelecimento_w  , 
		         	cd_setor_atendimento_w , 
		         	ie_origem_proced_w	, 
					cd_procedimento_w		, 
					'D'	, 
					DT_HORA_EXECUCAO_W	, 
					cd_tecnico_w		, 
					cd_medico_solicitante_w	, 
					ie_tipo_atendimento_w	, 
					qt_procedimento_w		, 
					nm_usuario_p		, 
					dt_atualizacao_w, 
					cd_medico_prescr_w, 
					cd_convenio_w, 
					CD_CONTA_CONTABIL_W, 
					CD_ESPECIALIDADE_W, 
					NR_SEQ_GRUPO_REC_W, 
					IE_TIPO_CONVENIO_W, 
					NR_SEQ_PROC_INTERNO_w, 
					cd_medico_executor_wW, 
					ie_lado_w, 
					ie_clinica_w, 
					cd_procedencia_w, 
					ie_complexidade_sus_w, 
					Obter_Turno_Atendimento(dt_procedimento_hora_w, cd_estabelecimento_w, 'C'), 
					Obter_Turno_Atendimento(dt_procedimento_hora_w, cd_estabelecimento_w, 'D'), 
					vl_procedimento_w, 
					nr_interno_conta_w, 
					vl_adicional_w, 
					vl_glosa_w, 
					vl_amenor_w, 
					cd_paciente_w, 
					cd_categoria_w, 
					cd_medico_laudo_w);
		 
		end if;
	 
 
    end;
END LOOP;
CLOSE C01;
COMMIT;
 
OPEN C02;
LOOP 
   FETCH C02 into 	 
		CD_ESTABELECIMENTO_W, 
 		IE_ORIGEM_PROCED_W, 
		CD_PROCEDIMENTO_W, 
		CD_SETOR_ATENDIMENTO_W, 
		IE_TIPO_ATENDIMENTO_W, 
		CD_MEDICO_EXECUTOR_W, 
		CD_CONTA_CONTABIL_W, 
		CD_EQUIPAMENTO_W, 
		cd_medico_laudo_w, 
		CD_CONVENIO_W, 
 		QT_PROCEDIMENTO_W, 
		VL_MEDICO_W, 
		VL_MATERIAIS_W, 
		VL_AUXILIARES_W, 
		VL_CUSTO_OPERACIONAL_W, 
		VL_ANESTESISTA_W, 
		NR_SEQ_PROC_INTERNO_w, 
		CD_MEDICO_REQ_W, 
		cd_medico_prescr_w, 
		ie_complexidade_sus_w, 
		cd_paciente_w, 
		nr_atendimento_w;
    EXIT WHEN NOT FOUND; /* apply on C02 */
		begin 
		 
		select 	max(obter_nome_pf(cd_paciente_w)) 
		into STRICT	nm_paciente_w 
		;
		 
 		insert into EIS_Proced_Faturado( 
			DT_CONTABIL, 
 			CD_ESTABELECIMENTO,        
 			CD_SETOR_ATENDIMENTO,        
 			IE_ORIGEM_PROCED,        
 			CD_PROCEDIMENTO,        
			IE_PERIODO, 
			CD_MEDICO_EXECUTOR, 
			CD_EQUIPAMENTO, 
			CD_CONVENIO, 
			IE_TIPO_ATENDIMENTO, 
			QT_PROCEDIMENTO, 
			VL_CUSTO_OPERACIONAL, 
			VL_MEDICO, 
			VL_MATERIAIS, 
			VL_CUSTO, 
			QT_DIAS_PRAZO, 
			NM_USUARIO, 
			DT_ATUALIZACAO, 
			cd_medico_laudo, 
			NR_SEQ_PROC_INTERNO, 
			CD_MEDICO_REQ, 
			cd_medico_prescr, 
			ie_complexidade_sus, 
			nr_atendimento, 
			cd_paciente, 
			nm_paciente) 
    	Values ( 
			dt_Parametro_w,  
         cd_estabelecimento_w, 
         cd_setor_atendimento_w, 
         ie_origem_proced_w, 
			cd_procedimento_w, 
			IE_DIARIO_MENSAL_P, 
			cd_medico_executor_w, 
			cd_equipamento_w, 
			cd_convenio_w, 
			ie_tipo_atendimento_w, 
			qt_procedimento_w, 
			vl_custo_operacional_w, 
			vl_medico_w, 
			vl_materiais_w, 
			vl_custo_w, 
			qt_dias_prazo_w, 
			nm_usuario_p, 
			dt_atualizacao_w, 
			cd_medico_laudo_w, 
			NR_SEQ_PROC_INTERNO_w, 
			CD_MEDICO_REQ_W, 
			cd_medico_prescr_w, 
			ie_complexidade_sus_w, 
			nr_atendimento_w, 
			cd_paciente_w, 
			nm_paciente_w);
    	end;
END LOOP;
CLOSE C02;
COMMIT;
if (IE_ACUMULAR_P = 'S') and (IE_DIARIO_MENSAL_P = 'D') then 
	begin 
	delete from eis_proced_executado 
	where dt_referencia = dt_parametro_mes_w 
 	and ie_periodo = 'M';
 
	insert into EIS_Proced_Executado( 
		DT_REFERENCIA		, 
		CD_ESTABELECIMENTO   ,        
		CD_SETOR_ATENDIMENTO  ,        
		IE_ORIGEM_PROCED    ,        
		CD_PROCEDIMENTO     ,        
		IE_PERIODO			, 
	 	DT_HORA_EXAME      ,        
 		CD_TECNICO		   ,        
	 	CD_MEDICO_SOLICITANTE  ,        
 		IE_TIPO_ATENDIMENTO   ,        
	 	QT_PROCEDIMENTO		, 
		NM_USUARIO			, 
		DT_ATUALIZACAO		, 
		cd_convenio , 
		CD_CONTA_CONTABIL, 
		CD_ESPECIALIDADE, 
		NR_SEQ_GRUPO_REC, 
		IE_TIPO_CONVENIO, 
		NR_SEQ_PROC_INTERNO, 
		cd_medico_executor, 
		ie_lado, 
		ie_clinica , 
		cd_Procedencia, 
		ie_complexidade_sus, 
		nr_seq_turno, 
		ds_turno_atend, 
		vl_procedimento, 
		nr_interno_conta, 
		vl_adicional, 
		vl_glosa, 
		vl_amenor, 
		cd_pessoa_fisica, 
		cd_categoria)               
	SELECT 
		DT_PARAMETRO_MES_W	, 
		CD_ESTABELECIMENTO   ,        
		CD_SETOR_ATENDIMENTO  ,        
		IE_ORIGEM_PROCED    ,        
		CD_PROCEDIMENTO     ,        
		'M'				, 
	 	DT_HORA_EXAME      ,        
	 	CD_TECNICO		   ,        
	 	CD_MEDICO_SOLICITANTE  ,        
	 	IE_TIPO_ATENDIMENTO   ,        
	 	SUM(QT_PROCEDIMENTO)	, 
		NM_USUARIO_P		, 
		DT_ATUALIZACAO_W, 
		cd_convenio, 
		CD_CONTA_CONTABIL, 
		CD_ESPECIALIDADE, 
		NR_SEQ_GRUPO_REC, 
		IE_TIPO_CONVENIO, 
		NR_SEQ_PROC_INTERNO, 
		cd_medico_executor, 
		ie_lado	, 
		ie_clinica, 
		cd_Procedencia, 
		ie_complexidade_sus, 
		nr_seq_turno, 
		ds_turno_atend, 
		sum(vl_procedimento), 
		nr_interno_conta, 
		sum(vl_adicional), 
		sum(vl_glosa), 
		sum(vl_amenor), 
		cd_pessoa_fisica, 
		cd_categoria 
	FROM EIS_PROCED_EXECUTADO 
	WHERE TRUNC(DT_REFERENCIA, 'MONTH') = DT_PARAMETRO_MES_W 
	 AND IE_PERIODO = 'D' 
	GROUP BY 
		DT_PARAMETRO_MES_W	, 
		CD_ESTABELECIMENTO   ,        
		CD_SETOR_ATENDIMENTO  ,        
		IE_ORIGEM_PROCED    ,        
		CD_PROCEDIMENTO     , 
		nr_interno_conta		, 
		'M'				, 
	 	DT_HORA_EXAME      ,        
	 	CD_TECNICO		   ,        
	 	CD_MEDICO_SOLICITANTE  ,        
	 	IE_TIPO_ATENDIMENTO   ,        
		NM_USUARIO_P		, 
		ie_complexidade_sus, 
		DT_ATUALIZACAO_W, 
		cd_convenio, 
		CD_CONTA_CONTABIL, 
		CD_ESPECIALIDADE, 
		NR_SEQ_GRUPO_REC, 
		IE_TIPO_CONVENIO, 
		NR_SEQ_PROC_INTERNO, 
		cd_medico_executor, 
		ie_lado, 
		ie_clinica, 
		cd_Procedencia, 
		nr_seq_turno, 
		ds_turno_atend, 
		cd_pessoa_fisica, 
		cd_categoria;
   commit;
	delete from eis_proced_faturado 
	where dt_contabil = dt_parametro_mes_w 
	 and ie_periodo = 'M';
	commit;
	insert into EIS_Proced_Faturado( 
		DT_CONTABIL, 
		CD_ESTABELECIMENTO,        
		CD_SETOR_ATENDIMENTO,        
		IE_ORIGEM_PROCED,        
		CD_PROCEDIMENTO,        
		IE_PERIODO, 
		CD_MEDICO_EXECUTOR, 
		CD_EQUIPAMENTO, 
		CD_CONVENIO, 
		IE_TIPO_ATENDIMENTO, 
		QT_PROCEDIMENTO, 
		VL_CUSTO_OPERACIONAL, 
		VL_MEDICO, 
		VL_MATERIAIS, 
		VL_CUSTO, 
		VL_TABELA, 
		QT_DIAS_PRAZO,		 
		NM_USUARIO, 
		DT_ATUALIZACAO, 
		NR_SEQ_PROC_INTERNO, 
		CD_MEDICO_REQ, 
		ie_complexidade_sus, 
		nr_atendimento, 
		cd_paciente, 
		nm_paciente) 
	SELECT 
		dt_parametro_mes_w, 
		CD_ESTABELECIMENTO,        
		CD_SETOR_ATENDIMENTO,        
		IE_ORIGEM_PROCED,        
		CD_PROCEDIMENTO,        
		'M', 
		CD_MEDICO_EXECUTOR, 
		CD_EQUIPAMENTO, 
		CD_CONVENIO, 
		IE_TIPO_ATENDIMENTO, 
		SUM(QT_PROCEDIMENTO), 
		SUM(VL_CUSTO_OPERACIONAL), 
		SUM(VL_MEDICO), 
		SUM(VL_MATERIAIS), 
		SUM(VL_CUSTO), 
		SUM(VL_TABELA), 
		SUM((VL_CUSTO_OPERACIONAL + VL_MEDICO + VL_MATERIAIS) * QT_DIAS_PRAZO)/ 
			CASE WHEN SUM(VL_CUSTO_OPERACIONAL + VL_MEDICO + VL_MATERIAIS)=0 THEN 1 END , 
		NM_USUARIO_P, 
		DT_ATUALIZACAO_W, 
		NR_SEQ_PROC_INTERNO, 
		CD_MEDICO_REQ, 
		ie_complexidade_sus, 
		nr_atendimento, 
		cd_paciente, 
		nm_paciente 
	FROM EIS_PROCED_FATURADO 
	WHERE TRUNC(DT_CONTABIL, 'MONTH') = DT_PARAMETRO_MES_W 
	 AND IE_PERIODO = 'D' 
	GROUP BY 
		dt_parametro_mes_w, 
		CD_ESTABELECIMENTO,        
		CD_SETOR_ATENDIMENTO,        
		IE_ORIGEM_PROCED,        
		CD_PROCEDIMENTO,        
		'M', 
		CD_MEDICO_EXECUTOR, 
		CD_EQUIPAMENTO, 
		ie_complexidade_sus, 
		CD_CONVENIO, 
		IE_TIPO_ATENDIMENTO, 
		QT_PROCEDIMENTO, 
		NM_USUARIO_P, 
		DT_ATUALIZACAO_W, 
		NR_SEQ_PROC_INTERNO, 
		CD_MEDICO_REQ, 
		nr_atendimento, 
		cd_paciente, 
		nm_paciente;
	end;
end if;
 
if (IE_ACUMULAR_P = 'S') then 
	begin 
	 
	delete from eis_proced_executado 
	where dt_referencia = Trunc(dt_parametro_mes_w, 'yy') 
 	and ie_periodo = 'A';
	 
	/* Não retirar sem falar comigo - Ricardo 
	insert into EIS_Proced_Executado ( 
		DT_REFERENCIA		, 
		CD_ESTABELECIMENTO   ,        
		CD_SETOR_ATENDIMENTO  ,        
		IE_ORIGEM_PROCED    ,        
		CD_PROCEDIMENTO     ,        
		IE_PERIODO			, 
	 	DT_HORA_EXAME      ,        
 		CD_TECNICO		   ,        
	 	CD_MEDICO_SOLICITANTE  ,        
 		IE_TIPO_ATENDIMENTO   ,        
	 	QT_PROCEDIMENTO		, 
		NM_USUARIO			, 
		DT_ATUALIZACAO, 
		cd_convenio, 
		CD_CONTA_CONTABIL, 
		CD_ESPECIALIDADE, 
		NR_SEQ_GRUPO_REC, 
		IE_TIPO_CONVENIO, 
		NR_SEQ_PROC_INTERNO, 
		cd_medico_executor, 
		ie_lado, 
		ie_clinica , 
		cd_Procedencia, 
		ie_complexidade_sus, 
		nr_seq_turno, 
		ds_turno_atend, 
		vl_procedimento, 
		nr_interno_conta, 
		vl_adicional, 
		vl_glosa, 
		vl_amenor)                
	SELECT 
		trunc(dt_parametro_mes_w,'yy'), 
		CD_ESTABELECIMENTO   ,        
		CD_SETOR_ATENDIMENTO  ,        
		IE_ORIGEM_PROCED    ,        
		CD_PROCEDIMENTO     ,        
		'A'				, 
	 	DT_HORA_EXAME      ,        
	 	CD_TECNICO		   ,        
	 	CD_MEDICO_SOLICITANTE  ,        
	 	IE_TIPO_ATENDIMENTO   ,        
	 	SUM(QT_PROCEDIMENTO)	, 
		NM_USUARIO_P		, 
		DT_ATUALIZACAO_W, 
		cd_convenio, 
		CD_CONTA_CONTABIL, 
		CD_ESPECIALIDADE, 
		NR_SEQ_GRUPO_REC, 
		IE_TIPO_CONVENIO, 
		NR_SEQ_PROC_INTERNO, 
		cd_medico_executor, 
		ie_lado, 
		ie_clinica, 
		cd_Procedencia, 
		ie_complexidade_sus, 
		nr_seq_turno, 
		ds_turno_atend, 
		sum(vl_procedimento), 
		nr_interno_conta, 
		sum(vl_adicional), 
		sum(vl_glosa), 
		sum(vl_amenor) 
	FROM EIS_PROCED_EXECUTADO 
	WHERE TRUNC(DT_REFERENCIA, 'YY') = Trunc(dt_parametro_mes_w, 'yy') 
	 AND IE_PERIODO = 'M' 
	GROUP BY 
		trunc(dt_parametro_mes_w,'yy'), 
		CD_ESTABELECIMENTO   ,        
		CD_SETOR_ATENDIMENTO  ,        
		IE_ORIGEM_PROCED    ,        
		CD_PROCEDIMENTO     ,        
		'A'				, 
	 	DT_HORA_EXAME      ,        
	 	CD_TECNICO		   ,        
		cd_convenio, 
	 	CD_MEDICO_SOLICITANTE  , 
		nr_interno_conta, 
	 	IE_TIPO_ATENDIMENTO   ,        
		NM_USUARIO_P		, 
		DT_ATUALIZACAO_W, 
		ie_complexidade_sus, 
		cd_convenio, 
		CD_CONTA_CONTABIL, 
		CD_ESPECIALIDADE, 
		NR_SEQ_GRUPO_REC, 
		IE_TIPO_CONVENIO, 
		NR_SEQ_PROC_INTERNO, 
		cd_medico_executor, 
		ie_lado, 
		ie_clinica, 
		cd_Procedencia, 
		nr_seq_turno, 
		ds_turno_atend; 
   commit; */
 
	delete from eis_proced_faturado 
	where dt_contabil = Trunc(dt_parametro_mes_w, 'yy') 
	 and ie_periodo = 'A';
	commit;
	insert into EIS_Proced_Faturado( 
		DT_CONTABIL, 
		CD_ESTABELECIMENTO,        
		CD_SETOR_ATENDIMENTO,        
		IE_ORIGEM_PROCED,        
		CD_PROCEDIMENTO,        
		IE_PERIODO, 
		CD_MEDICO_EXECUTOR, 
		CD_EQUIPAMENTO, 
		CD_CONVENIO, 
		IE_TIPO_ATENDIMENTO, 
		QT_PROCEDIMENTO, 
		VL_CUSTO_OPERACIONAL, 
		VL_MEDICO, 
		VL_MATERIAIS, 
		VL_CUSTO, 
		VL_TABELA, 
		QT_DIAS_PRAZO,		 
		NM_USUARIO, 
		DT_ATUALIZACAO, 
		NR_SEQ_PROC_INTERNO, 
		CD_MEDICO_REQ, 
		ie_complexidade_sus, 
		nr_atendimento, 
		cd_paciente, 
		nm_paciente) 
	SELECT 
		trunc(dt_parametro_mes_w,'yy'), 
		CD_ESTABELECIMENTO,        
		CD_SETOR_ATENDIMENTO,        
		IE_ORIGEM_PROCED,        
		CD_PROCEDIMENTO,        
		'A', 
		CD_MEDICO_EXECUTOR, 
		CD_EQUIPAMENTO, 
		CD_CONVENIO, 
		IE_TIPO_ATENDIMENTO, 
		SUM(QT_PROCEDIMENTO), 
		SUM(VL_CUSTO_OPERACIONAL), 
		SUM(VL_MEDICO), 
		SUM(VL_MATERIAIS), 
		SUM(VL_CUSTO), 
		SUM(VL_TABELA), 
		SUM((VL_CUSTO_OPERACIONAL + VL_MEDICO + VL_MATERIAIS) * QT_DIAS_PRAZO)/ 
			CASE WHEN SUM(VL_CUSTO_OPERACIONAL + VL_MEDICO + VL_MATERIAIS)=0 THEN 1 END , 
		NM_USUARIO_P, 
		DT_ATUALIZACAO_W, 
		NR_SEQ_PROC_INTERNO, 
		CD_MEDICO_REQ, 
		ie_complexidade_sus, 
		nr_atendimento, 
		cd_paciente, 
		nm_paciente 
	FROM EIS_PROCED_FATURADO 
	WHERE TRUNC(DT_CONTABIL, 'yy') = Trunc(dt_parametro_mes_w, 'yy') 
	 AND IE_PERIODO = 'M' 
	GROUP BY 
		trunc(dt_parametro_mes_w,'yy'), 
		CD_ESTABELECIMENTO,        
		CD_SETOR_ATENDIMENTO,        
		IE_ORIGEM_PROCED,        
		CD_PROCEDIMENTO,        
		'A', 
		CD_MEDICO_EXECUTOR, 
		CD_EQUIPAMENTO, 
		CD_CONVENIO, 
		IE_TIPO_ATENDIMENTO, 
		NM_USUARIO_P, 
		DT_ATUALIZACAO_W, 
		ie_complexidade_sus, 
		NR_SEQ_PROC_INTERNO, 
		CD_MEDICO_REQ, 
		nr_atendimento, 
		cd_paciente, 
		nm_paciente;
	end;
end if;
 
 
CALL Atualizar_Log_Indicador(clock_timestamp(), nr_sequencia_w);
CALL Atualizar_Log_Indicador(clock_timestamp(), nr_sequencia_ww);
 
commit;
 
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_eis_procedimento ( dt_parametro_p timestamp, nm_usuario_p text, ie_diario_mensal_p text, ie_acumular_p text) FROM PUBLIC;

