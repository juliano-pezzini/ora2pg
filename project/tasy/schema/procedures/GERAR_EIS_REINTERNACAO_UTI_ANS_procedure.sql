-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_eis_reinternacao_uti_ans ( dt_parametro_p timestamp, nm_usuario_p text) AS $body$
DECLARE

	 
nr_sequencia_w			bigint;
dt_parametro_w			timestamp;
dt_parametro_fim_w		timestamp;
nr_atendimento_w		bigint;
dt_saida_old_w			timestamp;
dt_entrada_unidade_w	timestamp;
dt_saida_unidade_w		timestamp;
qt_reg_w			 	bigint;

c01 CURSOR FOR	 
	SELECT distinct z.nr_atendimento 
	from	pessoa_fisica p,			 
			atendimento_paciente t, 
			atend_paciente_unidade z, 
			setor_atendimento y 
	where	t.cd_pessoa_fisica		= p.cd_pessoa_fisica	 
	and		t.nr_atendimento		= z.nr_atendimento 
	and   z.cd_setor_atendimento = y.cd_setor_atendimento 
	and   z.ie_passagem_setor 	= 'N' 
	and   y.cd_classif_setor 		= 4 
	and   z.dt_entrada_unidade between dt_parametro_w and dt_parametro_fim_w 
	and	exists (SELECT 1 
		 from  setor_atendimento b, 
				 atend_paciente_unidade a 
		 where  a.nr_atendimento    	= t.nr_atendimento 
		 and 	 a.cd_setor_atendimento 	= b.cd_setor_atendimento 
		 and	 a.ie_passagem_setor 		= 'N' 
		 and  	 b.cd_classif_setor 		= 4 
		 and  	 a.dt_entrada_unidade <> z.dt_entrada_unidade 
		 and  	 a.dt_saida_unidade between z.dt_entrada_unidade - 1 and z.dt_entrada_unidade);		
	 
c02 CURSOR FOR 
	SELECT	dt_entrada_unidade, 
			dt_saida_unidade 
  from	setor_atendimento b, 
			atend_paciente_unidade a 
  where	a.nr_atendimento = nr_atendimento_w 
	and (dt_saida_unidade between dt_parametro_w - 1 and dt_parametro_fim_w 
	or    dt_entrada_unidade between dt_parametro_w - 1 and dt_parametro_fim_w) 
	and		a.ie_passagem_setor = 'N' 
  and		a.cd_setor_atendimento = b.cd_setor_atendimento 
	and   b.cd_classif_setor = 4 
	order by dt_entrada_unidade asc;


BEGIN 
 
nr_sequencia_w := Gravar_Log_Indicador(806, 'Reinternação UTI ANS', clock_timestamp(), trunc(dt_parametro_p), nm_usuario_p, nr_sequencia_w);
 
dt_parametro_w		:= trunc(dt_parametro_p,'month');
dt_parametro_fim_w	:= last_day(Trunc(dt_parametro_p,'month')) + 86399/86400;
 
delete from eis_reinternacao_uti_ans 
where dt_referencia	between dt_parametro_w and dt_parametro_fim_w;
commit;
 
open c01;
loop 
fetch c01 into 
	nr_atendimento_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
	begin 
		dt_saida_old_w := null;
		open c02;
		loop 
		fetch c02 into 
			dt_entrada_unidade_w, 
			dt_saida_unidade_w;
			EXIT WHEN NOT FOUND; /* apply on c02 */
			begin 
				if (dt_saida_old_w IS NOT NULL AND dt_saida_old_w::text <> '') and 
					(dt_saida_old_w > (dt_entrada_unidade_w - 1) ) then 
					 
					 
					select	count(*) 
					into STRICT	qt_reg_w 
					from	atend_paciente_unidade a, 
							setor_atendimento b 
					where	a.nr_atendimento	= nr_atendimento_w 
					and		a.cd_setor_atendimento	= b.cd_setor_atendimento 
					and		a.ie_passagem_setor = 'N' 
					and		b.cd_classif_setor	= '3' 
					and		a.DT_ENTRADA_UNIDADE between dt_saida_old_w and dt_entrada_unidade_w;
					 
					if (qt_reg_w	> 0) then 
 
						insert into EIS_REINTERNACAO_UTI_ANS(	nr_sequencia, 
											dt_referencia, 
											nm_usuario, 
											dt_atualizacao, 
											nm_usuario_nrec, 
											dt_atualizacao_nrec, 
											nr_atendimento) 
								values (	nextval('eis_reinternacao_uti_ans_seq'), 
											dt_entrada_unidade_w, 
											nm_usuario_p, 
											clock_timestamp(), 
											nm_usuario_p, 
											clock_timestamp(), 
											nr_atendimento_w);
					end if;
					 
				end if;
				dt_saida_old_w	:= dt_saida_unidade_w;
			end;
		end loop;
		close c02;
	end;
end loop;
close c01;
 
CALL Atualizar_Log_Indicador(clock_timestamp(), nr_sequencia_w);
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_eis_reinternacao_uti_ans ( dt_parametro_p timestamp, nm_usuario_p text) FROM PUBLIC;

