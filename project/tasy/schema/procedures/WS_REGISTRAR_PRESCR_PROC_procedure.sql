-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ws_registrar_prescr_proc ( nr_prescricao_p bigint, cd_exame_integracao_p text, --corrigir nr_seq_exame_p
 cd_material_integracao_p text, cd_setor_coleta_p bigint, cd_setor_entrega_p bigint, cd_setor_atendimento_p bigint, cd_medico_exec_p text, qt_procedimento_p bigint, dt_coleta_p timestamp, dt_resultado_p timestamp, dt_prev_execucao_p timestamp, ds_material_especial_p text, nm_usuario_p text, nr_seq_prescricao_p INOUT bigint, cd_erro_p INOUT text, ds_erro_p INOUT text) AS $body$
DECLARE



nr_seq_prescricao_w		bigint;
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
cd_equipamento_w		bigint;
cd_material_exame_w		varchar(20);

ie_existe_prescricao_w		varchar(1);
ie_existe_procedimento_w	varchar(1);
ie_existe_material_exame_w	varchar(1);
ie_existe_setor_coleta_w	varchar(1);
ie_existe_setor_entrega_w	varchar(1);
ie_existe_setor_atendimento_w	varchar(1);
ie_liberada_w			varchar(1);
nr_seq_exame_w			exame_laboratorio.nr_seq_exame%type;


/* Lista erros
0 - SUCESSO
1 - Campos não informados
	1.1 - Prescrição não informada.
	1.2 - Procedimento não informado.
	1.3 - Quantidade do procedimento não informado
	1.4 - Origem do procedimento não informado
	1.5 - Material não informado
	1.6 - Exame não informado/encontrado
	1.7 - Equipamento "WebService" não encontrado
2 - Registros não encontrados
	2.1 - Prescrição não encontrada.
	2.2 - Procedimento não encontrado.
	2.3 - Material exame não encontrado.
	2.4 - Setor de coleta não encontrado.
	2.5 - Setor de entrega não encontrado.
	2.6 - Setor de atendimento não encontrado
3 - Prescrição já liberada. Não é possível inserir um procedimento a uma prescrição já liberada.
4 - Erro ao procedimento
*/
BEGIN

cd_erro_p	:= 0;

select	max(cd_equipamento)
into STRICT	cd_equipamento_w
from	equipamento_lab a
where	a.ds_sigla =  'WebService';

select	max(b.nr_seq_exame),
		max(b.cd_procedimento),
		max(b.ie_origem_proced)
into STRICT	nr_seq_exame_w,
		cd_procedimento_w,
		ie_origem_proced_w
from	lab_exame_equip a,
		exame_laboratorio b
where	a.nr_seq_exame = b.nr_seq_exame
and		a.cd_exame_equip = cd_exame_integracao_p
and		cd_equipamento = cd_equipamento_w;

/*if	(nr_seq_exame_p is not null) then
	select	max(cd_procedimento),
		max(ie_origem_proced)
	into	cd_procedimento_w,
		ie_origem_proced_w
	from	exame_laboratorio
	where	nr_seq_exame = nr_seq_exame_p;
else
	cd_procedimento_w	:= cd_procedimento_p;
	ie_origem_proced_w	:= ie_origem_proced_p;
end if;*/
/*SELECT	max(nr_seq_exame),
		max(cd_procedimento),
		max(ie_origem_proced)
into	nr_seq_exame_w,
		cd_procedimento_w,
		ie_origem_proced_w
FROM	exame_laboratorio
WHERE	NVL(cd_exame_integracao, cd_exame) = cd_exame_p;*/
if (coalesce(nr_prescricao_p::text, '') = '') then
	cd_erro_p	:= 1.1;
	ds_erro_p	:= WHEB_MENSAGEM_PCK.get_texto(277599,null);
elsif (coalesce(cd_procedimento_w::text, '') = '') then
	cd_erro_p	:= 1.2;
	ds_erro_p	:= WHEB_MENSAGEM_PCK.get_texto(279081,null);
elsif (coalesce(qt_procedimento_p::text, '') = '') then
	cd_erro_p	:= 1.3;
	ds_erro_p	:= WHEB_MENSAGEM_PCK.get_texto(279083,null);
elsif (coalesce(ie_origem_proced_w::text, '') = '') then
	cd_erro_p	:= 1.4;
	ds_erro_p	:= WHEB_MENSAGEM_PCK.get_texto(279092,null);
elsif (coalesce(cd_material_integracao_p::text, '') = '') then
	cd_erro_p	:= 1.5;
	ds_erro_p	:= WHEB_MENSAGEM_PCK.get_texto(279093,null);
elsif (coalesce(nr_seq_exame_w::text, '') = '') then
	cd_erro_p	:= 1.6;
	ds_erro_p	:= WHEB_MENSAGEM_PCK.get_texto(279094,null);
elsif (coalesce(cd_equipamento_w::text, '') = '') then
	cd_erro_p	:= 1.7;
	ds_erro_p	:= WHEB_MENSAGEM_PCK.get_texto(279096,null);
end if;

if (cd_erro_p = 0) then

	select	max(b.cd_material_exame)
	into STRICT	cd_material_exame_w
	from	material_exame_lab_int a,
			material_exame_lab b
	where	a.cd_equipamento = cd_equipamento_w
	and		a.cd_material_integracao = cd_material_integracao_p
	and		a.nr_seq_material = b.nr_sequencia;

	select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
	into STRICT	ie_existe_prescricao_w
	from	prescr_medica a
	where	a.nr_prescricao = nr_prescricao_p;

	/*select	decode(count(*),0,'N','S')
	into	ie_existe_procedimento_w
	from	procedimento a
	where	a.cd_procedimento = cd_procedimento_w
	and	a.ie_origem_proced = ie_origem_proced_w;*/
	select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
	into STRICT	ie_existe_material_exame_w
	from	material_exame_lab a
	where	a.cd_material_exame = cd_material_exame_w;

	/*select	decode(count(*),0,'N','S')
	into	ie_existe_exame_w
	from	exame_laboratorio a
	where	nvl(a.ie_situacao,'A') = 'A'
	and	a.nr_seq_exame = nr_seq_exame_p;*/
	select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
	into STRICT	ie_existe_setor_coleta_w
	from	setor_atendimento a
	where	a.cd_setor_atendimento = cd_setor_coleta_p
	and	coalesce(a.ie_situacao,'A') = 'A';

	select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
	into STRICT	ie_existe_setor_entrega_w
	from	setor_atendimento a
	where	a.cd_setor_atendimento = cd_setor_entrega_p
	and	coalesce(a.ie_situacao,'A') = 'A';

	select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
	into STRICT	ie_existe_setor_atendimento_w
	from	setor_atendimento a
	where	a.cd_setor_atendimento = cd_setor_atendimento_p
	and	coalesce(a.ie_situacao,'A') = 'A';

	if (ie_existe_prescricao_w  = 'N') then
		cd_erro_p	:= 2.1;
		ds_erro_p	:= WHEB_MENSAGEM_PCK.get_texto(279102,null)||to_char(nr_prescricao_p);
	elsif (cd_material_exame_w IS NOT NULL AND cd_material_exame_w::text <> '') and (ie_existe_material_exame_w = 'N') then
		cd_erro_p	:= 2.2;
		ds_erro_p	:= WHEB_MENSAGEM_PCK.get_texto(279103,null)||cd_material_integracao_p;
	elsif (cd_setor_coleta_p IS NOT NULL AND cd_setor_coleta_p::text <> '') and (ie_existe_setor_coleta_w = 'N') then
		cd_erro_p	:= 2.3;
		ds_erro_p	:= WHEB_MENSAGEM_PCK.get_texto(279105,null)||to_char(cd_setor_coleta_p);
	elsif (cd_setor_entrega_p IS NOT NULL AND cd_setor_entrega_p::text <> '') and (ie_existe_setor_entrega_w = 'N') then
		cd_erro_p	:= 2.4;
		ds_erro_p	:= WHEB_MENSAGEM_PCK.get_texto(279108,null)||to_char(cd_setor_entrega_p);
	elsif (cd_setor_atendimento_p IS NOT NULL AND cd_setor_atendimento_p::text <> '') and (ie_existe_setor_atendimento_w = 'N') then
		cd_erro_p	:= 2.5;
		ds_erro_p	:= WHEB_MENSAGEM_PCK.get_texto(278281,null)||': '||to_char(cd_setor_atendimento_p);
	end if;

	select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
	into STRICT	ie_liberada_w
	from	prescR_medica a
	where	a.nr_prescricao = nr_prescricao_p
	and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '');

	if (ie_liberada_w = 'S') then
		cd_erro_p	:= 3;
		ds_erro_p	:= WHEB_MENSAGEM_PCK.get_texto(279109,null);
	end if;

	if (cd_erro_p = 0) then

		begin

		select	coalesce(max(nr_sequencia),0)+1
		into STRICT	nr_seq_prescricao_w
		from	prescr_procedimento
		where	nr_prescricao = nr_prescricao_p;

		insert into prescr_procedimento(nr_prescricao,
						nr_sequencia,
						ie_origem_inf,
						cd_procedimento,
						ie_origem_proced,
						cd_material_exame,
						nr_seq_exame,
						qt_procedimento,
						dt_coleta,
						dt_resultado,
						dt_prev_execucao,
						cd_setor_coleta,
						cd_setor_entrega,
						cd_setor_atendimento,
						cd_motivo_baixa,
						cd_medico_exec,
						ie_suspenso,
						nm_usuario,
						dt_atualizacao,
						ie_pendente_amostra,
						ie_exame_bloqueado,
						ds_material_especial,
						ie_status_atend,
						ie_amostra)
			values (	nr_prescricao_p,
						nr_seq_prescricao_w,
						1,
						cd_procedimento_w,
						ie_origem_proced_w,
						cd_material_exame_w,
						nr_seq_exame_w,
						qt_procedimento_p,
						dt_coleta_p,
						dt_resultado_p,
						dt_prev_execucao_p,
						cd_setor_coleta_p,
						cd_setor_entrega_p,
						cd_setor_atendimento_p,
						0,
						cd_medico_exec_p,
						'N',
						nm_usuario_p,
						clock_timestamp(),
						'N',
						'N',
						ds_material_especial_p,
						5,
						'N');

		nr_seq_prescricao_p	:= nr_seq_prescricao_w;

		exception
		when others then
			cd_erro_p	:= 4;
			ds_erro_p	:= substr(sqlerrm,1,2000);
		end;

	end if;

end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ws_registrar_prescr_proc ( nr_prescricao_p bigint, cd_exame_integracao_p text, cd_material_integracao_p text, cd_setor_coleta_p bigint, cd_setor_entrega_p bigint, cd_setor_atendimento_p bigint, cd_medico_exec_p text, qt_procedimento_p bigint, dt_coleta_p timestamp, dt_resultado_p timestamp, dt_prev_execucao_p timestamp, ds_material_especial_p text, nm_usuario_p text, nr_seq_prescricao_p INOUT bigint, cd_erro_p INOUT text, ds_erro_p INOUT text) FROM PUBLIC;

