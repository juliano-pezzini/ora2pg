-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_consistir_conta_web ( nr_seq_protocolo_p pls_protocolo_conta.nr_sequencia%type, nr_seq_conta_p pls_conta.nr_sequencia%type, ie_tipo_conta_web_p text, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, ie_ger_hono_incos_p text) AS $body$
DECLARE

					
/*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:   Consistir a conta no complemento de contas medicas
----------------------------------------------------------------------------------------------------------------------------------------------------

Locais de chamada direta:
[  ]  Objetos do dicionario [  ] Tasy (Delphi/Java) [ x ] Portal [  ] Relatorios [ ] Outros:
 ----------------------------------------------------------------------------------------------------------------------------------------------------

Pontos de atencao:

Alteracoes
-------------------------------------------------------------------------------------------------------------------

jjung OS 621943 - 22/06/2013 -

Alteracao:	Incluido passagem do parametro NR_SEQ_ACAO_ANALISE_P para a rotina
	PLS_OC_CTA_GERAR_COMBINADA.

Motivo:	Foi criada estrutura para que seja possivel reconsistir algumas ocorrencias na analise
	apos tomar alguma acao sobre o item. As ocorrencias que serao reconsistidas para cada
	acao serao definidas pelo usuario, portanto ao executar a acao sera chamada a
	PLS_OC_CTA_GERAR_COMBINADA passando acao desejada.
-------------------------------------------------------------------------------------------------------------------

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

IE_TIPO_CONTA_WEB_P:

D = Digitacao de conta pelo portal
C = Complemento de

IE_GER_HONO_INCOS_P:
'N' :  nao permite a geracao dos honorarios caso a intenacao tenha inconsistencias.
Diferente que 'N' : permite.

*/cd_cgc_prestador_exec_ww	pessoa_juridica.cd_cgc%type;
cd_cpf_prestador_exec_ww	pessoa_fisica.cd_pessoa_fisica%type;
cd_guia_w			pls_conta.cd_guia%type;
cd_cgc_prestador_w		pessoa_juridica.cd_cgc%type;
cd_cpf_prestador_w		pessoa_fisica.cd_pessoa_fisica%type;
cd_senha_w			pls_conta.cd_senha%type;
cd_medico_solicitante_w		pessoa_fisica.cd_pessoa_fisica%type;
cd_guia_prestador_w		pls_conta.cd_guia_prestador%type;
cd_estabelecimento_w		estabelecimento.cd_estabelecimento%type;
cd_medico_executor_w		varchar(10);
cont_w				bigint;
cd_usuario_plano_w		varchar(30);
cd_ans_w			varchar(20);
cd_cnes_w			varchar(20);
cd_guia_conta_w			varchar(20);
cd_tiss_tipo_atendimento_w	varchar(20);

dt_autorizacao_w		timestamp;
dt_validade_senha_w		timestamp;
dt_entrada_w			timestamp;
dt_validade_carteira_w		pls_guia_plano.dt_validade_senha%type;		
dt_alta_w			timestamp;
dt_atendimento_referencia_w	timestamp;
dt_envio_contas_w		timestamp;
ds_mensagem_guia_w		varchar(255);
ds_observacao_w			varchar(4000);
dt_rescisao_w			timestamp;
dt_limite_utilizacao_w 		timestamp;

ie_regime_internacao_w		pls_conta.ie_regime_internacao%type;
ie_indicacao_acidente_w		pls_conta.ie_indicacao_acidente%type;
ie_tipo_doenca_w		pls_conta.ie_tipo_doenca%type;
ie_carater_internacao_w		pls_conta.ie_carater_internacao%type;
ie_aborto_w			pls_conta.ie_aborto%type;
ie_atend_rn_sala_parto_w	pls_conta.ie_atend_rn_sala_parto%type;
ie_baixo_peso_w			pls_conta.ie_baixo_peso%type;
ie_complicacao_neonatal_w	pls_conta.ie_complicacao_neonatal%type;
ie_complicacao_puerperio_w	pls_conta.ie_complicacao_puerperio%type;
ie_gestacao_w			pls_conta.ie_gestacao%type;
ie_obito_w			pls_conta.ie_obito%type;
ie_parto_cesaria_w		pls_conta.ie_parto_cesaria%type;
ie_parto_normal_w		pls_conta.ie_parto_normal%type;
ie_transtorno_w			pls_conta.ie_transtorno%type;
ie_tipo_guia_w			pls_conta.ie_tipo_guia%type;
ie_situacao_protocolo_w		varchar(3)	:= 'A';
ie_situacao_prot_proc_w		varchar(3)	:= 'A';
ie_situacao_prot_mat_w		varchar(3)	:= 'A';
ie_tipo_segurado_w		varchar(2);
ie_internacao_w			varchar(1)	:= 'N';
ie_tipo_guia_ref_w		varchar(2);
ie_consistir_guia_w		varchar(2);
ie_tipo_faturamento_w		varchar(1);
ie_status_guia_w		varchar(1);
ie_internado_w			varchar(2);

nr_seq_conta_w			pls_conta.nr_sequencia%type;
nr_seq_prestador_w		pls_prestador.nr_sequencia%type;
nr_seq_prestador_exec_w		pls_prestador.nr_sequencia%type;
nr_seq_saida_sadt_w		bigint;
nr_seq_clinica_w		pls_clinica.nr_sequencia%type;
nr_seq_tipo_atend_w		pls_conta.nr_seq_tipo_atendimento%type;
nr_seq_tipo_acomod_w		pls_conta.nr_seq_tipo_acomodacao%type;
nr_seq_segurado_w		pls_segurado.nr_sequencia%type;
nr_seq_segurado_guia_w		pls_segurado.nr_sequencia%type;
nr_seq_prestador_prot_w		bigint;
nr_seq_plano_w			pls_plano.nr_sequencia%type;
nr_seq_tipo_atendimento_w	bigint;
nr_seq_congenere_w		bigint;
nr_seq_prest_guia_execu_w	bigint;
nr_seq_guia_w			bigint;
nr_seq_protocolo_gerado_w	bigint;
nr_crm_exec_w			varchar(20);
nr_seq_prestador_dif_w		bigint;
nr_seq_protocolo_w		bigint;
nm_prestador_w			varchar(255);

qt_dias_envio_contas_w		integer;
qt_obito_precoce_w		varchar(1);
qt_obito_tardio_w		varchar(1);
qt_nasc_vivos_w			varchar(2);
qt_nasc_mortos_w		varchar(2);
qt_nasc_vivos_prematuros_w	varchar(2);
qt_itens_w			bigint	:= 0;
qt_diagnostico_w		integer	:= 0;

sg_cons_prest_solic_w       	varchar(20);
sg_conselho_exec_w		varchar(10);
sg_conselho_solic_w		varchar(20);

uf_crm_exec_w			varchar(2);

vl_procedimentos_w		pls_conta.vl_procedimentos%type;
vl_diarias_w			pls_conta.vl_diarias%type;
vl_taxas_w			pls_conta.vl_taxas%type;
vl_materiais_w			pls_conta.vl_materiais%type;
vl_medicamentos_w		pls_conta.vl_medicamentos%type;
vl_gases_w			pls_conta.vl_gases%type;
vl_opm_w			pls_conta.vl_opm%type;
vl_total_w			pls_conta.vl_total%type;

ie_origem_ocorrencia_w		varchar(1);
ie_variacao_valor_w		varchar(5);
ie_variacao_qtd_w		varchar(5);
qt_permitida_w			bigint;
vl_permitido_w			bigint;
ie_independe_regra_w		varchar(3);
qt_total_gloc_ocor_w		bigint := 0;
qt_material_w			bigint;
ie_portal_web_w			varchar(3);
cd_versao_tiss_w		pls_protocolo_conta.cd_versao_tiss%type;
dt_protocolo_w			pls_protocolo_conta.dt_protocolo%type;
ie_origem_conta_w		pls_conta.ie_origem_conta%type;
nr_seq_guia_cta_w		pls_guia_plano.nr_sequencia%type;
cd_guia_ok_w			pls_conta.cd_guia_ok%type;
nr_seq_guia_conta_w		pls_guia_plano.nr_sequencia%type;
ie_ocorrencia_w			pls_controle_estab.ie_ocorrencia%type := 'N';
nr_seq_guia_ww			pls_conta.nr_sequencia%type;
nr_seq_prest_guia_w		pls_prestador.nr_sequencia%type;
ie_valoriza_w			pls_regra_valorizacao_cta.ie_valoriza%type;
ie_origem_protocolo_w		pls_protocolo_conta.ie_origem_protocolo%type;
ie_regime_atendimento_w	pls_conta.ie_regime_atendimento%type;	

C01 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.cd_estabelecimento,
		a.nr_seq_prestador,
		pls_obter_dados_prestador(a.nr_seq_prestador,'CGC') cgc_solic_w,
		pls_obter_dados_prestador(a.nr_seq_prestador,'PF') cpf_solic_w,
		a.nr_seq_prestador_exec,
		pls_obter_dados_prestador(a.nr_seq_prestador_exec,'CGC') cgc_exec_w,
		pls_obter_dados_prestador(a.nr_seq_prestador_exec,'PF') cpf_exec_w,
		a.cd_guia,
		a.dt_autorizacao,
		a.cd_senha,
		a.dt_validade_senha,
		a.dt_atendimento_referencia,
		a.cd_medico_solicitante,
		a.ie_indicacao_acidente,
		a.ie_tipo_doenca,
		a.ie_carater_internacao,
		a.nr_seq_clinica,
		a.ie_regime_internacao,
		a.vl_procedimentos,
		a.vl_diarias,
		a.vl_taxas,
		a.vl_materiais,
		a.vl_medicamentos,
		a.vl_gases,
		a.vl_opm,
		a.vl_total,
		a.cd_guia_prestador,
		a.nr_seq_tipo_acomodacao,
		a.nr_seq_tipo_atendimento,
		a.nr_seq_saida_spsadt,
		a.dt_entrada,
		a.ie_aborto,
		a.ie_atend_rn_sala_parto,
		a.ie_baixo_peso,
		a.ie_complicacao_neonatal,
		a.ie_complicacao_puerperio,
		a.ie_gestacao,
		a.ie_obito,
		a.ie_parto_cesaria,
		a.ie_parto_normal,
		a.ie_transtorno,
		a.ie_tipo_guia,
		a.sg_conselho_exec,
		pls_obter_dados_segurado(a.nr_seq_segurado,'C') cd_beneficiario,
		coalesce(a.sg_conselho_exec, a.sg_conselho_solic) sg_conselho,
		a.cd_ans,
		a.cd_cnes,
		coalesce(a.qt_nasc_vivos_prematuros,'0') qt_nasc_vivos_prematuros,
		coalesce(a.qt_obito_precoce,'0') qt_obito_precoce,
		coalesce(a.qt_obito_tardio,'0') qt_obito_tardio,
		coalesce(a.qt_nasc_vivos,'0') qt_nasc_vivos,
		coalesce(a.qt_nasc_mortos,'0') t_nasc_mortos,
		substr(a.ie_tipo_faturamento,1,1) ie_tipo_faturamento,
		a.nr_crm_exec,
		a.uf_crm_exec,
		a.sg_conselho_solic,
		a.dt_alta,
		a.nr_seq_plano,
		a.nr_seq_tipo_atendimento,
		a.nr_seq_congenere,
		a.cd_guia_ok,
		a.nr_seq_segurado,
		a.nr_seq_protocolo,
		a.cd_medico_executor,
		a.ie_origem_conta,
		a.nr_seq_guia,
		a.ie_tipo_segurado,
		a.ie_regime_atendimento
	from	pls_conta a
	where	((a.nr_seq_protocolo = nr_seq_protocolo_p)
	or (a.nr_sequencia = nr_seq_conta_p))
	and	a.ie_status not in ('C','F','S');

C02 CURSOR FOR
	SELECT	nr_sequencia nr_seq_conta_proc,
		null nr_seq_conta_mat
	from	pls_conta_proc
	where	nr_seq_conta = nr_seq_conta_w
	
union all

	SELECT	null nr_seq_conta_proc,
		nr_sequencia nr_seq_conta_mat
	from	pls_conta_mat
	where	nr_seq_conta = nr_seq_conta_w;
	
C03 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.ie_tipo_guia,
		a.nr_seq_protocolo
	from	pls_conta a
	where	((a.nr_seq_protocolo = nr_seq_protocolo_p)
	or (a.nr_sequencia = nr_seq_conta_p))
	and	a.ie_status not in ('C','F','S');
BEGIN
ie_ocorrencia_w := pls_obter_se_controle_estab('GO');
/*OS 333748 deve ser observado a quantidade maxima de contas do protocolo*/

SELECT * FROM pls_obter_glosa_producao_med(nr_seq_protocolo_p, null, null, null, null, null, null, ie_variacao_valor_w, ie_variacao_qtd_w, qt_permitida_w, vl_permitido_w) INTO STRICT ie_variacao_valor_w, ie_variacao_qtd_w, qt_permitida_w, vl_permitido_w;

if (ie_variacao_valor_w = 'ME') then
	ds_observacao_w := 'O valor do protocolo e menor que o valor estabelecido pelo operadora com base no(s) ultimo(s) protocolo(s) enviado(s) .'||
			   'O valor do protocolo atual deve ser maior que R$'||Campo_Mascara_virgula_casas(vl_permitido_w,2)||'.';
elsif (ie_variacao_valor_w = 'MA') then
	ds_observacao_w := 'O valor do protocolo e maior que o valor estabelecido pelo operadora com base no(s) ultimo(s) protocolo(s) enviado(s) .'||
			   'O valor do protocolo atual deve ser menor que R$'||Campo_Mascara_virgula_casas(vl_permitido_w,2)||'.';
end if;


if (ie_variacao_qtd_w = 'QE') then

	if (coalesce(ds_observacao_w,'X') <> 'X') then
		ds_observacao_w := ds_observacao_w||chr(10)||chr(13);
	end if;

	ds_observacao_w := ds_observacao_w||
			   'A quantidade de contas do protocolo e menor que a quantidade estabelecido pelo operadora com base no(s) ultimo(s) protocolo(s) enviado(s) .'||
			   ' A quantidade do protocolo atual deve ser maior que '||qt_permitida_w||'.';
elsif (ie_variacao_qtd_w = 'QA') then

	if (coalesce(ds_observacao_w,'X') <> 'X') then
		ds_observacao_w := ds_observacao_w||chr(10)||chr(13);
	end if;

	ds_observacao_w := ds_observacao_w||
			   'A quantidade de contas do protocolo e maior que a quantidade estabelecido pelo operadora com base no(s) ultimo(s) protocolo(s) enviado(s).'||
			   ' A quantidade do protocolo atual deve ser menor que '||qt_permitida_w||'.';
end if;


open c01;
loop
fetch c01 into
	nr_seq_conta_w,
	cd_estabelecimento_w,
	nr_seq_prestador_w,
	cd_cgc_prestador_w,
	cd_cpf_prestador_w,
	nr_seq_prestador_exec_w,
	cd_cgc_prestador_exec_ww,
	cd_cpf_prestador_exec_ww,
	cd_guia_w,
	dt_autorizacao_w,
	cd_senha_w,
	dt_validade_senha_w,
	dt_atendimento_referencia_w,
	cd_medico_solicitante_w,
	ie_indicacao_acidente_w,
	ie_tipo_doenca_w,
	ie_carater_internacao_w,
	nr_seq_clinica_w,
	ie_regime_internacao_w,
	vl_procedimentos_w,
	vl_diarias_w,
	vl_taxas_w,
	vl_materiais_w,
	vl_medicamentos_w,
	vl_gases_w,
	vl_opm_w,
	vl_total_w,
	cd_guia_prestador_w,
	nr_seq_tipo_acomod_w,
	nr_seq_tipo_atend_w,
	nr_seq_saida_sadt_w,
	dt_entrada_w,
	ie_aborto_w,
	ie_atend_rn_sala_parto_w,
	ie_baixo_peso_w,
	ie_complicacao_neonatal_w,
	ie_complicacao_puerperio_w,
	ie_gestacao_w,
	ie_obito_w,
	ie_parto_cesaria_w,
	ie_parto_normal_w,
	ie_transtorno_w,
	ie_tipo_guia_w,
	sg_conselho_exec_w,
	cd_usuario_plano_w,
	sg_conselho_solic_w,
	cd_ans_w,
	cd_cnes_w,
	qt_nasc_vivos_prematuros_w,
	qt_obito_precoce_w,
	qt_obito_tardio_w,
	qt_nasc_vivos_w,
	qt_nasc_mortos_w,
	ie_tipo_faturamento_w,
	nr_crm_exec_w,
	uf_crm_exec_w,
	sg_cons_prest_solic_w,
	dt_alta_w,
	nr_seq_plano_w,
	nr_seq_tipo_atendimento_w,
	nr_seq_congenere_w,
	cd_guia_conta_w,
	nr_seq_segurado_w,
	nr_seq_protocolo_w,
	cd_medico_executor_w,
	ie_origem_conta_w,
	nr_seq_guia_conta_w,
	ie_tipo_segurado_w,
	ie_regime_atendimento_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	
	select	max(nr_seq_prestador),
		max(cd_versao_tiss),
		max(ie_origem_protocolo)
	into STRICT	nr_seq_prestador_prot_w,
		cd_versao_tiss_w,
		ie_origem_protocolo_w
	from	pls_protocolo_conta
	where	nr_sequencia = nr_seq_protocolo_w;
	
	ie_valoriza_w := pls_obter_se_valoriza_portal(ie_origem_protocolo_w, cd_estabelecimento_w);
	
	if (ie_valoriza_w = 'S') then
		CALL pls_cta_consistir_pck.gera_valorizacao(	null, null, null, nr_seq_conta_w,
							null, null, nm_usuario_p, cd_estabelecimento_w,'PW');
	end if;
	
	CALL pls_consistir_elegib_web(nr_seq_conta_w, nm_usuario_p,cd_estabelecimento_p);

	CALL pls_define_regra_retorno(null, null, nr_seq_conta_w,'DC',nm_usuario_p);

	if (coalesce(ds_observacao_w,'X') <> 'X') then

	CALL pls_gravar_conta_glosa('1099', nr_seq_conta_w, null,
					null, 'N', ds_observacao_w,
					nm_usuario_p,'A','IA',
					nr_seq_prestador_exec_w, cd_estabelecimento_w, '', null);
	end if;


	ie_internacao_w		:= pls_obter_se_internado(nr_seq_conta_w, 'C');
	cd_usuario_plano_w	:= elimina_caracteres_especiais(cd_usuario_plano_w);

	if (coalesce(nr_seq_segurado_w::text, '') = '') then
		select	coalesce(max(nr_seq_segurado),0)
		into STRICT	nr_seq_segurado_w
		from	pls_segurado_carteira
		where	cd_usuario_plano	= cd_usuario_plano_w
		and	cd_estabelecimento	= cd_estabelecimento_p;
	end if;
	if (coalesce(nr_seq_segurado_w,0) > 0) then
		select	ie_tipo_segurado
		into STRICT	ie_tipo_segurado_w
		from	pls_segurado
		where	nr_sequencia = nr_seq_segurado_w;
	end if;

	if (coalesce(nr_seq_segurado_w,0) > 0) and (ie_tipo_segurado_w in ('A','B')) then
		CALL pls_consistir_elegibilidade(nr_seq_segurado_w, 'DC', nr_seq_conta_w,
			'C', nr_seq_prestador_exec_w, null,
			'', nm_usuario_p, cd_estabelecimento_w);
	end if;

	select	max(cd_tiss)
	into STRICT	cd_tiss_tipo_atendimento_w
	from	pls_tipo_atendimento
	where	nr_sequencia	= nr_seq_tipo_atendimento_w;

	nr_seq_prestador_dif_w	:= nr_seq_prestador_exec_w;

	if (ie_tipo_guia_w = '4') then
		if (cd_tiss_tipo_atendimento_w	= '04') then
			if (coalesce(cd_medico_executor_w,'0') = '0') then
				/* 9916 - Profissional executante complementar nao informado */

				CALL pls_gravar_conta_glosa('9916', nr_seq_conta_w, null,
							null, 'N', 'Para guia de SP/SADT com tipo de atendimento Consulta, o profissional executor e obrigatorio',
							nm_usuario_p, 'A', 'DC',
							nr_seq_prestador_exec_w, cd_estabelecimento_w, '', null);
			end if;
		elsif	((cd_tiss_tipo_atendimento_w	= '07') or (ie_regime_atendimento_w = '03')) then
			nr_seq_prestador_dif_w	:= nr_seq_prestador_w;
		end if;

		/* 1602 - Tipo de atendimento invalido ou nao informado */

		if (coalesce(nr_seq_tipo_atend_w::text, '') = '') then
			CALL pls_gravar_conta_glosa('1602', nr_seq_conta_w, null,
						null, 'N', '',
						nm_usuario_p,'A','DC',
						nr_seq_prestador_exec_w, cd_estabelecimento_w, '', null);
		end if;
		/* 1604 - Tipo de saida invalido */

		if (pls_obter_se_glosa_versao_tiss(cd_versao_tiss_w, '1604', null) = 'S') then
			if (coalesce(nr_seq_saida_sadt_w::text, '') = '') then
				CALL pls_gravar_conta_glosa('1604', nr_seq_conta_w, null,
							null, 'N', 'Tipo saida: ' || nr_seq_saida_sadt_w,
							nm_usuario_p,'A','DC',
							nr_seq_prestador_exec_w, cd_estabelecimento_w, '', null);
			end if;
		end if;
	elsif (ie_tipo_guia_w = '5') then
		if (coalesce(nr_seq_tipo_acomod_w::text, '') = '') then
			CALL pls_gravar_conta_glosa('1901', nr_seq_conta_w, null,
						null, 'N', '',
						nm_usuario_p,'A','DC',
						nr_seq_prestador_exec_w, cd_estabelecimento_w, '', null);
			ie_situacao_protocolo_w	:= 'RE';
		end if;
		if (coalesce(ie_regime_internacao_w,'X') not in ('1','2','3')) then
			CALL pls_gravar_conta_glosa('1505', nr_seq_conta_w, null,
						null, 'N', ie_regime_internacao_w,
						nm_usuario_p,'A','DC',
						nr_seq_prestador_exec_w, cd_estabelecimento_w, '', null);
		end if;

		select	count(1)
		into STRICT	qt_diagnostico_w
		from	pls_diagnostico_conta
		where	nr_seq_conta	= nr_seq_conta_w;

		if (qt_diagnostico_w	= 0) then
			CALL pls_gravar_conta_glosa('9912', nr_seq_conta_w, null,
						null, 'N', 'Verificar na pasta Diagnostico',
						nm_usuario_p, 'A', 'DC',
						nr_seq_prestador_exec_w, cd_estabelecimento_p, '',null);
		end if;
	end if;

	if (ie_tipo_guia_w in ('4','5')) then
		/* 1504 - Carater de Internacao Invalido */

		if (coalesce(ie_carater_internacao_w,'X') = 'X') then
			CALL pls_gravar_conta_glosa('1504', nr_seq_conta_w, null,
						null, 'N', 'Carater gerado: ' || ie_carater_internacao_w,
						nm_usuario_p, 'A', 'DC',
						nr_seq_prestador_exec_w, cd_estabelecimento_w, '', null);
		end if;
	end if;

	cd_medico_executor_w	:= pls_obter_dados_gerar_conta(nr_seq_conta_w, 'M');
	/* De acordo com o Schema, para as guias de SP/SADT e Honorario individual vem a informacao do medico executor na conta tambem, sendo que para HI essa informacao e obrigatoria */

	if (ie_tipo_guia_w in ('4','6')) then
		if (coalesce(cd_medico_executor_w,0) <> 0) then
			select	count(1)
			into STRICT	cont_w
			from	pls_prestador a
			where	not exists (	SELECT	1
						from	pls_prestador_medico b
						where	b.cd_medico	= cd_medico_executor_w
						and	a.nr_sequencia	= b.nr_seq_prestador
						and	b.ie_situacao	= 'A'
						and	trunc(coalesce(dt_atendimento_referencia_w,clock_timestamp()),'dd') between
								trunc(coalesce(b.dt_inclusao,coalesce(dt_atendimento_referencia_w,clock_timestamp())),'dd')
								and  fim_dia(coalesce(b.dt_exclusao,coalesce(dt_atendimento_referencia_w,clock_timestamp()))))
			and	a.nr_sequencia	= nr_seq_prestador_exec_w
			and	(a.cd_cgc IS NOT NULL AND a.cd_cgc::text <> '');

			/* 1207 - Credenciado nao pertence e Rede Credenciada */

			if (cont_w > 0) then
				CALL pls_gravar_conta_glosa('1207', nr_seq_conta_w, null,
							null, 'N', '',
							nm_usuario_p,'A','DC',
							nr_seq_prestador_exec_w, cd_estabelecimento_w, '', null);
			end if;

			/* 9915 - Dados do conselho profissional nao informado */

			if (coalesce(sg_conselho_exec_w,'0') = '0') then
				CALL pls_gravar_conta_glosa('9915', nr_seq_conta_w, null,
							null, 'N', sg_conselho_exec_w,
							nm_usuario_p,'A','DC',
							nr_seq_prestador_exec_w, cd_estabelecimento_w, '', null);
			end if;
		else
			cd_medico_executor_w := null;
		end if;
	end if;

	/*Diego OPS - Os 284320 - Esta alteracao foi realizada ja que em guias de consulta, na impoortacao, os dados do proceimento nao eram gerados nos campos quente.
			       Visto com o sr Eder J. da Silva*/

	/* Geracao dos PROCEDIMENTOS */

	ie_situacao_prot_proc_w := pls_consist_conta_proc_web(nr_seq_conta_w, nr_seq_prestador_prot_w, nm_usuario_p, cd_estabelecimento_w, ie_tipo_conta_web_p, ie_situacao_prot_proc_w);

	if (ie_tipo_guia_w	<> '3') then
		/* Geracao dos MATERIAIS */

		select	count(1)
		into STRICT	qt_material_w
		from	pls_conta_mat
		where	nr_seq_conta 	= nr_seq_conta_w  LIMIT 1;
		if (qt_material_w > 0) then
			ie_situacao_prot_mat_w := pls_consist_conta_mat_web(nr_seq_conta_w, nr_seq_prestador_exec_w, nm_usuario_p, cd_estabelecimento_w, ie_tipo_conta_web_p, ie_situacao_prot_mat_w);
		end if;
	end if;
--
	if (ie_internacao_w	= 'S') then
		select	coalesce(max(ie_tipo_guia),'1')
		into STRICT	ie_tipo_guia_ref_w
		from	pls_guia_plano
		where	cd_guia	= cd_guia_conta_w
		and	nr_seq_segurado = nr_seq_segurado_w
		and	ie_status <> '3'; -- 3 = Negado	
		
		-- precisa ser solicitacao ou prorrogacao de internacao
		if (ie_tipo_guia_ref_w	not in ('1', '8')) then
			CALL pls_gravar_conta_glosa('1302', nr_seq_conta_w, null,
						null, 'N', 'Tipo guia referencia: ' || ie_tipo_guia_ref_w,
						nm_usuario_p,'A','DC',
						nr_seq_prestador_exec_w, cd_estabelecimento_w, '', null);
		end if;
	end if;

	/* Felipe OS - 210571 - A CONSISTENCIA 1307 "DEVE" SER FEITA APOS A ROTINA PLS_GERAR_CONTA_PROC */

	select	coalesce(max(nr_sequencia),0)
	into STRICT	nr_seq_guia_w
	from	pls_guia_plano
	where	cd_guia 	= cd_guia_w
	and	nr_seq_segurado	= nr_seq_segurado_w;

	select	pls_obter_se_exige_guia(nr_seq_conta_w,0)
	into STRICT	ie_consistir_guia_w
	;

	if (ie_ocorrencia_w = 'N') then
		select	coalesce(max(ie_independe_regra),'N')
		into STRICT	ie_independe_regra_w
		from	pls_regra_glosa_1307 a;
	else
		select	coalesce(max(ie_independe_regra),'N')
		into STRICT	ie_independe_regra_w
		from	pls_regra_glosa_1307 a
		where	a.cd_estabelecimento = cd_estabelecimento_p;
	end if;

	if (ie_independe_regra_w = 'S') or (ie_consistir_guia_w = 'S') then
		select	coalesce(max(nr_seq_segurado),0)
		into STRICT	nr_seq_segurado_guia_w
		from	pls_guia_plano
		where	nr_sequencia	= nr_seq_guia_w;

		if (nr_seq_guia_w = 0) then
			ds_mensagem_guia_w	:= 'Operadora exige autorizacao para esta conta. (IA)';
		elsif (nr_seq_segurado_w <> nr_seq_segurado_guia_w) then
			ds_mensagem_guia_w	:= 'Beneficiario da guia nao e o mesmo da autorizacao. (IA)';
		end if;

		if (ds_mensagem_guia_w IS NOT NULL AND ds_mensagem_guia_w::text <> '') then
			CALL pls_gravar_conta_glosa('1307', nr_seq_conta_w, null,
						null, 'N', ds_mensagem_guia_w,
						nm_usuario_p,'A','DC',
						nr_seq_prestador_exec_w, cd_estabelecimento_w, '', null);
		else
			select	max(ie_status)
			into STRICT	ie_status_guia_w
			from	pls_guia_plano
			where	nr_sequencia	= nr_seq_guia_w;
			if (ie_status_guia_w <> '1') then
				CALL pls_gravar_conta_glosa('1399',nr_seq_conta_w,null,
							null,'N','Guia nao autorizada',
							nm_usuario_p,'A','DC',
							nr_seq_prestador_exec_w, cd_estabelecimento_w, '', null);
			end if;
		end if;
		ds_mensagem_guia_w	:= '';
	end if;

	/*Djavan- Data de Validade da Senha e anterior a Data do Atendimento*/

	if (cd_guia_w IS NOT NULL AND cd_guia_w::text <> '') then
		if (nr_seq_guia_conta_w IS NOT NULL AND nr_seq_guia_conta_w::text <> '') then
			select	max(dt_validade_senha)
			into STRICT	dt_validade_carteira_w
			from	pls_guia_plano
			where	nr_sequencia = nr_seq_guia_conta_w;
		
			if (dt_validade_carteira_w IS NOT NULL AND dt_validade_carteira_w::text <> '') and (fim_dia(dt_validade_carteira_w) < dt_atendimento_referencia_w) then
					CALL pls_gravar_conta_glosa('1405',nr_seq_conta_w,null,
								null,'N','',
								nm_usuario_p,'A','DC',
								nr_seq_prestador_exec_w, cd_estabelecimento_w, '', null);
			end if;
		end if;
	end if;
	/* */



	/*Djavan - glosa 9914*/

	begin
	select	nr_seq_prestador
	into STRICT	nr_seq_prest_guia_execu_w
	from	pls_guia_plano
	where	cd_guia		= cd_guia_conta_w
	and	nr_seq_segurado	= nr_seq_segurado_w;
	exception
	when others then
		nr_seq_prest_guia_execu_w := nr_seq_prestador_exec_w;
	end;
	
	select	max(nr_seq_guia)
	into STRICT	nr_seq_guia_ww
	from	pls_conta
	where	nr_sequencia = nr_seq_conta_w;
	
	select	max(nr_seq_prestador)
	into STRICT	nr_seq_prest_guia_w
	from	pls_guia_plano
	where	nr_sequencia = nr_seq_guia_ww;
	
	nm_prestador_w	:= pls_obter_dados_prestador(nr_seq_prest_guia_execu_w,'N');
	
	if (coalesce(nr_seq_prestador_dif_w,0) > 0) and (coalesce(nr_seq_prest_guia_execu_w,0) > 0) and (coalesce(nr_seq_prest_guia_w,0) > 0) and (coalesce(pls_obter_se_prestador_guia(nr_seq_prestador_dif_w,nr_seq_prest_guia_w,nr_seq_conta_w),'N') = 'N') and (coalesce(pls_obter_se_prestador_guia(nr_seq_prestador_dif_w,nr_seq_prest_guia_execu_w,nr_seq_conta_w),'N') = 'N') and (ie_tipo_guia_w <> '6') then /*Diego OS 293646 - Visto com o Sr. Felipe Ambrosio que o executor em uma guia de honorario nunca sera o mesmo da guia de solicitacao*/
		CALL pls_gravar_conta_glosa('9914',nr_seq_conta_w,null,
			null,'N','Prestador executor diferente do prestador da guia. Prestador da guia: '||nr_seq_prest_guia_execu_w||' :'|| nm_prestador_w,
			nm_usuario_p,'A','DC',
			nr_seq_prestador_dif_w, cd_estabelecimento_p, '', null);
	end if;
	/* */



	/*Djavan - glosa 1014*/

	if (coalesce(nr_seq_segurado_w,0) > 0) then
	
		select	nr_seq_guia,
			cd_guia_ok
		into STRICT	nr_seq_guia_cta_w,
			cd_guia_ok_w
		from	pls_conta
		where	nr_sequencia = nr_seq_conta_w;
		
		if (coalesce(nr_seq_guia_cta_w::text, '') = '') then
			select	max(nr_sequencia)
			into STRICT	nr_seq_guia_cta_w
			from	pls_guia_plano
			where	cd_guia = cd_guia_ok_w
			and	ie_status = '1';
		end if;
	
		if (coalesce(nr_seq_guia_cta_w::text, '') = '') then
			select	max(dt_rescisao),
				max(fim_dia(dt_limite_utilizacao))
			into STRICT	dt_rescisao_w,
				dt_limite_utilizacao_w
			from	pls_segurado
			where	nr_sequencia	= nr_seq_segurado_w;

			if (dt_rescisao_w IS NOT NULL AND dt_rescisao_w::text <> '') and (dt_atendimento_referencia_w > dt_limite_utilizacao_w) then
				CALL pls_gravar_conta_glosa('1014',nr_seq_conta_w,null,
							null,'N','',
							nm_usuario_p,'A','DC',
							nr_seq_prestador_exec_w, cd_estabelecimento_p, '', null);
			end if;
		end if;
	end if;

--alteracao aldellandrea tratar glosa 1701 - Validar o prazo de envio da conta	
	if (ie_origem_conta_w = 'C') then
		begin
		select	clock_timestamp() - coalesce(qt_dias_envio_contas,0),
			coalesce(qt_dias_envio_contas,0)
		into STRICT	dt_envio_contas_w,
			qt_dias_envio_contas_w
		from	pls_prestador
		where	nr_sequencia  = nr_seq_prestador_exec_w;
		exception
		when others then
			qt_dias_envio_contas_w	:= 0;
		end;
	else	
		select	trunc(dt_protocolo)
		into STRICT	dt_protocolo_w
		from	pls_protocolo_conta
		where	nr_sequencia = nr_seq_protocolo_w;
		
		begin
		select	dt_protocolo_w - coalesce(qt_dias_envio_contas,0),
			coalesce(qt_dias_envio_contas,0)
		into STRICT	dt_envio_contas_w,
			qt_dias_envio_contas_w
		from	pls_prestador
		where	nr_sequencia  = nr_seq_prestador_exec_w;
		exception
		when others then
			qt_dias_envio_contas_w	:= 0;
		end;
	end if;
	
	if (qt_dias_envio_contas_w > 0) and (dt_atendimento_referencia_w < dt_envio_contas_w) then
		if (ie_origem_conta_w = 'C') then
			for r_c02_w in C02() loop
				begin
					CALL pls_gravar_conta_glosa('1701', null, r_c02_w.nr_seq_conta_proc,r_c02_w.nr_seq_conta_mat, 'N', 'Data referencia: ' || dt_atendimento_referencia_w || ' / Data permitida: ' || dt_envio_contas_w,
						nm_usuario_p, 'A', 'DC',nr_seq_prestador_exec_w, cd_estabelecimento_p, '', null);
				end;
			end loop;
		else
			CALL pls_gravar_conta_glosa('1701', nr_seq_conta_w, null,null, 'N', 'Data referencia: ' || dt_atendimento_referencia_w || ' / Data permitida: ' || dt_envio_contas_w,
						nm_usuario_p, 'A', 'DC',nr_seq_prestador_exec_w, cd_estabelecimento_p, '', null);
		end if;
	end if;
-- fim alteracao aldellandrea	

	
	/* */



	/* Eder GLosa 1199 - Para contas sem itens informados */

	select	sum(qt_itens)
	into STRICT	qt_itens_w
	from (	SELECT	count(1) qt_itens
			from	pls_conta_proc
			where	nr_seq_conta = nr_seq_conta_w
			
union

			SELECT	count(1) qt_itens
			from	pls_conta_mat
			where	nr_seq_conta = nr_seq_conta_w) alias3;

	if (qt_itens_w = 0) then
		CALL pls_gravar_conta_glosa('1199', nr_seq_conta_w, null,
					null,'N','Nenhum item foi lancado para esta conta. Verifique!',
					nm_usuario_p, 'A', 'DC',
					nr_seq_prestador_w, cd_estabelecimento_p, '', null);
	end if;	
	
	/*Glosa  2514 - Servico nao contratado para o prestador */

	CALL pls_consistir_prest_plano('DC', nr_seq_prestador_exec_w, nr_seq_conta_w,
				null, null, null, null, null, cd_estabelecimento_p, nm_usuario_p);

	ie_internado_w	:= pls_obter_se_internado(nr_seq_conta_w, 'C');

	CALL pls_tiss_consistir_guia(nr_seq_conta_w, 'C', 'DC',
				nr_seq_prestador_exec_w, null, '',
				nm_usuario_p, cd_estabelecimento_p);

	CALL pls_tiss_consistir_autorizacao(nr_seq_conta_w, 'C', 'DC',
			nr_seq_prestador_exec_w, null, '',
			nm_usuario_p, cd_estabelecimento_w,null);

	CALL pls_tiss_consistir_atendimento(nr_seq_conta_w, 'C', 'DC',
			nr_seq_prestador_exec_w, null, '',
			nm_usuario_p, cd_estabelecimento_w, nr_seq_segurado_w);

	CALL pls_tiss_consistir_diagnostico(nr_seq_conta_w, 'C', 'DC',
			nr_seq_prestador_exec_w, null, '',
			nm_usuario_p, cd_estabelecimento_w);

	CALL pls_tiss_consistir_prestador(nr_seq_conta_w, 'C', 'DC',
			nr_seq_prestador_exec_w, null, '',
			nm_usuario_p, cd_estabelecimento_w);

	if (ie_internado_w	= 'S') then
		CALL pls_tiss_consistir_diaria(nr_seq_conta_w, 'C', 'DC',
				nr_seq_prestador_exec_w, null, nr_seq_segurado_w,
				nm_usuario_p, cd_estabelecimento_w);
	end if;


	if (ie_tipo_conta_web_p = 'D') then
		ie_origem_ocorrencia_w := 'P';
		ie_portal_web_w	:= 'DC';
	else
		ie_origem_ocorrencia_w := 'C';
		ie_portal_web_w	:= 'CG';
	end if;

	CALL pls_gerar_ocorrencia(	nr_seq_segurado_w, 'P', null,
			nr_seq_conta_w, null, null,
			null, null, null,
			ie_tipo_guia_w, nr_seq_plano_w, 'C',
			null, null, nr_seq_prestador_exec_w,
			nr_seq_tipo_atendimento_w,'AC','',
			ie_origem_ocorrencia_w, nm_usuario_p, cd_estabelecimento_p,
			nr_seq_congenere_w,null, ie_tipo_conta_web_p,
			null, null);
	end;
	
	CALL pls_cta_proc_mat_regra_pck.gera_seq_tiss_conta_proc(nr_seq_conta_w, nm_usuario_p);
	CALL pls_cta_proc_mat_regra_pck.gera_seq_tiss_conta_mat(nr_seq_conta_w, nm_usuario_p);
end loop;
close c01;

if (nr_seq_conta_p IS NOT NULL AND nr_seq_conta_p::text <> '') then
	/* Francisco - 13/05/2013 - Chamada das ocorrencias combinadas */

	CALL pls_oc_cta_gerar_combinada(	'PW', ie_portal_web_w, null, null, null, nr_seq_conta_p, null, null,
					null, null, null, null, null, null, cd_estabelecimento_p, nm_usuario_p);
else
	CALL pls_oc_cta_gerar_combinada(	'PW', ie_portal_web_w, null, nr_seq_protocolo_p, null, null, null, null,
					null, null, null, null, null, null, cd_estabelecimento_p, nm_usuario_p);
end if;

for r_c03_w in c03() loop
	begin
	/* Atualizar os valores da conta */

	CALL pls_atualiza_valor_conta(r_c03_w.nr_sequencia,nm_usuario_p); /* Rotina chamada na PLS_FECHAR_CONTA */
	CALL pls_atualizar_utilizacao_guia(r_c03_w.nr_sequencia, cd_estabelecimento_p, nm_usuario_p);

	/*necessario alterar o status da conta novamente para 'U' de modo que ao desfazer a consistencia nao seja alterado o status do protocolo Diogo*/

	if (ie_tipo_conta_web_p 	= 'C')	then
		update	pls_conta
		set	ie_status 		= 'U',
			ie_recem_nascido	= CASE WHEN ie_recem_nascido='S' THEN 'S'  ELSE 'N' END
		where	nr_sequencia 		= r_c03_w.nr_sequencia;
	else
		update	pls_conta
		set	ie_status 		= 'P',
			ie_recem_nascido	= CASE WHEN ie_recem_nascido='S' THEN 'S'  ELSE 'N' END
		where	nr_sequencia 		= r_c03_w.nr_sequencia;

	end if;

	if (ie_tipo_conta_web_p = 'D' and r_c03_w.ie_tipo_guia = '5') then
		if (coalesce(ie_ger_hono_incos_p,'X') = 'N') then
			qt_total_gloc_ocor_w := pls_obter_qt_glosas_web(r_c03_w.nr_sequencia, null, 'T');
		end if;
		
		if (coalesce(qt_total_gloc_ocor_w,0) = 0) then
			CALL pls_cta_gera_hono_indiv_pck.gera_conta_hono_indiv(  null, null, null,r_c03_w.nr_sequencia, null, nm_usuario_p,cd_estabelecimento_p);
			--pls_conta_gerar_hi(nr_seq_conta_w, cd_estabelecimento_p, nm_usuario_p,'N', nr_seq_protocolo_gerado_w);    Alterado para utilizar a PCK OS 870483
			
			select 	max(nr_sequencia)
			into STRICT 	nr_seq_protocolo_gerado_w
			from	pls_protocolo_conta
			where 	nr_seq_prot_referencia = r_c03_w.nr_seq_protocolo;

			if (nr_seq_protocolo_gerado_w IS NOT NULL AND nr_seq_protocolo_gerado_w::text <> '') then
				CALL pls_consistir_conta_web(nr_seq_protocolo_gerado_w, null, 'D', nm_usuario_p, cd_estabelecimento_p, ie_ger_hono_incos_p);
			end if;
		end if;
	end if;
	end;
end loop;
	

commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_consistir_conta_web ( nr_seq_protocolo_p pls_protocolo_conta.nr_sequencia%type, nr_seq_conta_p pls_conta.nr_sequencia%type, ie_tipo_conta_web_p text, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, ie_ger_hono_incos_p text) FROM PUBLIC;

