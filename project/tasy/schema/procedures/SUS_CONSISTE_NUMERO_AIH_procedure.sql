-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE sus_consiste_numero_aih ( nr_interno_conta_p bigint, nr_aih_p bigint, nr_seq_aih_p bigint, nm_usuario_p text, ie_tipo_consiste_p bigint, ds_erro_p INOUT text) AS $body$
DECLARE



cd_estabelecimento_w	smallint;
ds_detalhe_w		varchar(255)	:= '';
nr_aih_consiste13_w	bigint;
ds_digito_aih13_w	varchar(1);
ds_erro_w               varchar(255)   := '';
qt_aih_elet_w		bigint := 0;



BEGIN

/* Obter dados da conta e do procedimento */

select	coalesce(max(cd_estabelecimento),1)
into STRICT	cd_estabelecimento_w
from	conta_Paciente
where	nr_interno_conta	= nr_interno_conta_p;

ds_detalhe_w	:= WHEB_MENSAGEM_PCK.get_texto(281067) || nr_aih_p || ' - ' || nr_seq_aih_p;

/* 4 - Número da AIH inválido */

if (Sus_Obter_Inco_Ativa(4)) and (nr_aih_p IS NOT NULL AND nr_aih_p::text <> '') and (length(nr_aih_p) <> 13) then
	if (ie_tipo_consiste_p = 1) then
		CALL sus_gravar_inconsistencia(nr_interno_conta_p, 4, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
	elsif (ie_tipo_consiste_p = 2) then
        	ds_erro_w	:= ds_erro_w || '4, ';
	end if;
end if;

/* 5 - Dígito verificador da AIH inválido */

if (Sus_Obter_Inco_Ativa(5)) and (nr_aih_p IS NOT NULL AND nr_aih_p::text <> '') and (length(nr_aih_p) = 13) then
	nr_aih_consiste13_w	:= trunc(nr_aih_p);
	select	consistir_digito('AIH',to_char(nr_aih_consiste13_w))
	into STRICT	ds_digito_aih13_w
	;
	if (ds_digito_aih13_w = 'N') then
		if (ie_tipo_consiste_p = 1) then
			CALL sus_gravar_inconsistencia(nr_interno_conta_p, 5, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
		elsif (ie_tipo_consiste_p = 2) then
        		ds_erro_w	:= ds_erro_w || '5, ';
		end if;
	end if;
end if;

if (Sus_Obter_Inco_Ativa(250)) and (nr_aih_p IS NOT NULL AND nr_aih_p::text <> '') then
	begin

	select	count(*)
	into STRICT	qt_aih_elet_w
	from	sus_aih_unif
	where	nr_aih = nr_aih_p
	and	nr_sequencia = nr_seq_aih_p
	and	cd_carater_internacao <> '01'
	and	substr(nr_aih,5,9) > '500000001'
	and	substr(nr_aih,5,9) < '500099999';

	if (qt_aih_elet_w > 0) then
		if (ie_tipo_consiste_p = 1) then
			CALL sus_gravar_inconsistencia(nr_interno_conta_p, 250, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
		elsif (ie_tipo_consiste_p = 2) then
        		ds_erro_w	:= ds_erro_w || '250, ';
		end if;
	end if;

	end;
end if;

ds_erro_p	:= ds_erro_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE sus_consiste_numero_aih ( nr_interno_conta_p bigint, nr_aih_p bigint, nr_seq_aih_p bigint, nm_usuario_p text, ie_tipo_consiste_p bigint, ds_erro_p INOUT text) FROM PUBLIC;

