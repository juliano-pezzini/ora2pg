-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_isolar_liberar_paciente ( nr_atendimento_p bigint, cd_setor_atendimento_p bigint, cd_unidade_basica_p text, cd_unidade_compl_p text, ie_status_p text, nr_seq_precaucao_p bigint, nr_seq_motivo_isol_p bigint, nr_seq_isolamento_p bigint, ie_opcao_pre_p text, ie_opcao_iso_p text, ds_motivo_p text, ie_tipo_isolamento_p text, cd_estab_ocupacao_p bigint, cd_estabelecimento_p bigint, cd_perfil_p bigint, nm_usuario_p text, nr_seq_tipo_isolamento_cih_p bigint, dt_inicial_isolamento_p timestamp, dt_final_isolamento_p timestamp, ds_observacao_p text default null, cd_responsavel_p text default null, CD_TIPO_ACOMODACAO_P bigint DEFAULT NULL) AS $body$
DECLARE


vl_precaucao_w	varchar(255);
vl_mot_iso_w	varchar(255);
vl_perfil_w	varchar(255);
vl_ie_opcao_pre_w varchar(255);
ie_permite_inf_data_isol_w varchar(1);



BEGIN
--Permite informar data de inÃ­cio e fim de isolamento
ie_permite_inf_data_isol_w := Obter_Param_Usuario(44, 140, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ie_permite_inf_data_isol_w);

if (nr_atendimento_p > 0) then
	begin

	update	atendimento_paciente
	set	ie_paciente_isolado	= ie_status_p,
		dt_atualizacao		= clock_timestamp(),
		nm_usuario		= nm_usuario_p
	where	nr_atendimento		= nr_atendimento_p;


	if (ie_opcao_pre_p = 'P') then
		vl_ie_opcao_pre_w	:= 'I';
		vl_precaucao_w		:= 'S';
	else
		vl_ie_opcao_pre_w	:= ie_opcao_pre_p;
		vl_precaucao_w := Obter_Param_Usuario(44, 75, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, vl_precaucao_w);
	end if;


	if	(((vl_precaucao_w = 'S') and
		((nr_seq_precaucao_p > 0 AND ie_opcao_pre_p <> 'T') or ((ie_opcao_pre_p = 'T') and (not(ie_permite_inf_data_isol_w = 'S'))))) or
		((vl_precaucao_w = 'F')  and
		((ie_opcao_pre_p = 'T') and (not(ie_permite_inf_data_isol_w = 'S'))))) then


		CALL gerar_atendimento_precaucao(nr_seq_precaucao_p,	nr_atendimento_p, vl_ie_opcao_pre_w, nr_seq_motivo_isol_p, nm_usuario_p, null, null, ds_observacao_p, null,cd_responsavel_p);

	else

		CALL finalizar_atend_precaucao(nr_atendimento_p, dt_final_isolamento_p, null, 'T', nm_usuario_p);
	end if;


	vl_mot_iso_w := Obter_Param_Usuario(44, 80, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, vl_mot_iso_w);

	if (vl_mot_iso_w = 'S') and
		((nr_seq_isolamento_p > 0) or (ie_opcao_iso_p = 'T'))	then
		CALL gerar_motivo_isolamento(nr_atendimento_p, nr_seq_isolamento_p, nm_usuario_p, ie_opcao_iso_p, ds_motivo_p, ie_tipo_isolamento_p, nr_seq_tipo_isolamento_cih_p, dt_inicial_isolamento_p, dt_final_isolamento_p);
	end if;

	vl_perfil_w := Obter_Param_Usuario(44, 29, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, vl_perfil_w);

	if (vl_perfil_w <> '0') and (ie_status_p = 'S') then
		CALL comunic_paciente_isolamento(vl_perfil_w, nr_atendimento_p, nm_usuario_p, cd_estab_ocupacao_p);
	end if;

	if (cd_setor_atendimento_p > 0) and (CD_TIPO_ACOMODACAO_P > 0) then
		CALL atualizar_dados_convenio(NR_ATENDIMENTO_P,cd_setor_atendimento_p,CD_TIPO_ACOMODACAO_P);
	end if;

	end;
end if;

if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_isolar_liberar_paciente ( nr_atendimento_p bigint, cd_setor_atendimento_p bigint, cd_unidade_basica_p text, cd_unidade_compl_p text, ie_status_p text, nr_seq_precaucao_p bigint, nr_seq_motivo_isol_p bigint, nr_seq_isolamento_p bigint, ie_opcao_pre_p text, ie_opcao_iso_p text, ds_motivo_p text, ie_tipo_isolamento_p text, cd_estab_ocupacao_p bigint, cd_estabelecimento_p bigint, cd_perfil_p bigint, nm_usuario_p text, nr_seq_tipo_isolamento_cih_p bigint, dt_inicial_isolamento_p timestamp, dt_final_isolamento_p timestamp, ds_observacao_p text default null, cd_responsavel_p text default null, CD_TIPO_ACOMODACAO_P bigint DEFAULT NULL) FROM PUBLIC;

