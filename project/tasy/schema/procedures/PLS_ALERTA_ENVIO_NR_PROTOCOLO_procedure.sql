-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE rc_prot AS (nr_seq_protocolo_w bigint);


CREATE OR REPLACE PROCEDURE pls_alerta_envio_nr_protocolo ( nm_usuario_p text) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[  ]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:Performance.
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
type 	tb_prot is table of rc_prot index by integer;

tb_prot_w			tb_prot;

ds_mensagem_regra_w		pls_alerta_evento_mensagem.ds_mensagem%type;
ie_tipo_envio_w			pls_alerta_evento_mensagem.ie_tipo_envio%type;
ds_titulo_w			pls_alerta_evento_mensagem.ds_titulo%type;
nr_seq_tipo_evento_w		pls_alerta_evento_mensagem.nr_seq_tipo_evento%type;
ds_remetente_w			pls_alerta_evento_mensagem.ds_remetente_sms%type;
ds_email_remetente_w		pls_alerta_evento_mensagem.ds_remetente_email%type;
ds_mensagem_regra_original_w	pls_alerta_evento_mensagem.ds_mensagem%type;

cd_pessoa_fisica_w		pessoa_fisica.cd_pessoa_fisica%type;

nr_seq_evento_controle_w	pls_alerta_evento_controle.nr_sequencia%type;

nr_ddd_celular_benef_w		pessoa_fisica.nr_ddd_celular%type;
nr_telef_celular_benef_w	pessoa_fisica.nr_telefone_celular%type;
ds_email_dest_w			varchar(255);
ds_destinatario_w		varchar(400);

qt_macro_regra_w		bigint;
id_sms_w			bigint	:= null;
qt_nr_protocolo_w		bigint	:= 0;
nr_seq_evento_mens_w		pls_alerta_evento_destino.nr_seq_evento_mens%type;
ds_mensagem_w			varchar(1000)	:= '';

C01 CURSOR FOR
	SELECT	ie_enviar_protocolo_atend,
		nr_seq_evento_mens
	from	pls_regra_geracao_evento
	where	ie_situacao		= 'A'
	and	ie_evento_disparo	= 11;

C02 CURSOR(nr_seq_evento_mens_pc bigint) FOR
	SELECT	nr_sequencia,
		ie_forma_envio,
		ie_tipo_pessoa_dest
	from	pls_alerta_evento_destino
	where	nr_seq_evento_mens	= nr_seq_evento_mens_pc
	and	ie_situacao 		= 'A';

C10 CURSOR FOR
	SELECT	nr_protocolo,
		nr_protocolo_intercambio,
		nr_seq_segurado,
		nr_sequencia
	from	pls_protocolo_atendimento
	where (coalesce(ie_protocolo_enviado::text, '') = '' or ie_protocolo_enviado <> 'S');
BEGIN

tb_prot_w.delete;

qt_nr_protocolo_w := 0;

for r_C01_w in C01 loop
	begin

	if (coalesce(r_C01_w.ie_enviar_protocolo_atend,'N')	= 'S') then

		nr_seq_evento_mens_w	:= r_C01_w.nr_seq_evento_mens;

		begin
			select	a.ds_mensagem,
				a.ie_tipo_envio,
				a.ds_titulo,
				a.nr_seq_tipo_evento,
				a.ds_remetente_sms,
				a.ds_remetente_email
			into STRICT	ds_mensagem_regra_original_w,
				ie_tipo_envio_w,
				ds_titulo_w,
				nr_seq_tipo_evento_w,
				ds_remetente_w,
				ds_email_remetente_w
			from	pls_alerta_evento_mensagem	a,
				pls_tipo_alerta_evento		b
			where 	a.nr_sequencia	= r_C01_w.nr_seq_evento_mens
			and	a.nr_seq_tipo_evento = b.nr_sequencia
			and	a.ie_situacao	= 'A'
			and	b.ie_situacao	= 'A';
		exception
		when others then
			nr_seq_evento_mens_w	:= null;
		end;

		if (nr_seq_evento_mens_w IS NOT NULL AND nr_seq_evento_mens_w::text <> '') then
			for r_C02_w in C02(nr_seq_evento_mens_w) loop
				begin

				if (r_C02_w.ie_forma_envio = 'SMS') then

					ds_remetente_w		:= substr(ds_remetente_w,0,40);

					if (ds_remetente_w IS NOT NULL AND ds_remetente_w::text <> '') and (ds_mensagem_regra_original_w IS NOT NULL AND ds_mensagem_regra_original_w::text <> '') then

						select	nextval('pls_alerta_evento_controle_seq')
						into STRICT	nr_seq_evento_controle_w
						;

						insert into pls_alerta_evento_controle(nr_sequencia,
							dt_geracao_evento,
							ie_evento_disparo,
							nr_seq_tipo_evento,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							ds_mensagem,
							ds_titulo,
							ie_tipo_envio)
						values (nr_seq_evento_controle_w,
							clock_timestamp(),
							11,
							nr_seq_tipo_evento_w,
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							ds_mensagem_regra_original_w,
							ds_titulo_w,
							ie_tipo_envio_w);

						select	count(1)
						into STRICT	qt_macro_regra_w
						
						where	ds_mensagem_regra_original_w like '%@%';

						if (qt_macro_regra_w > 0) then
							for r_C10_w in C10 loop
								begin

								if (r_C10_w.nr_seq_segurado IS NOT NULL AND r_C10_w.nr_seq_segurado::text <> '') then

									ds_mensagem_regra_w := ds_mensagem_regra_original_w;

									begin

										select 	b.nr_ddd_celular,
											b.nr_telefone_celular,
											a.cd_pessoa_fisica
										into STRICT	nr_ddd_celular_benef_w,
											nr_telef_celular_benef_w,
											cd_pessoa_fisica_w
										from  	pls_segurado a,
											pessoa_fisica b
										where 	a.cd_pessoa_fisica 	= b.cd_pessoa_fisica
										and   	a.nr_sequencia     	= r_C10_w.nr_seq_segurado;
									exception
									when others then
										nr_ddd_celular_benef_w		:= null;
										nr_telef_celular_benef_w	:= null;
										cd_pessoa_fisica_w		:= null;
									end;
								end if;

								ds_destinatario_w	:= to_Char(nr_ddd_celular_benef_w||nr_telef_celular_benef_w);

								ds_destinatario_w	:= replace(ds_destinatario_w,'(','');
								ds_destinatario_w	:= replace(ds_destinatario_w,')','');
								ds_destinatario_w	:= replace(ds_destinatario_w,'-','');

								select  replace_macro(ds_mensagem_regra_w, '@NR_PROTOCOLO_ATENDIMENTO', r_C10_w.nr_protocolo)
								into STRICT    ds_mensagem_regra_w
								;

								select  replace_macro(ds_mensagem_regra_w, '@NR_PROTOCOLO_INTERCAMBIO', r_C10_w.nr_protocolo_intercambio)
								into STRICT    ds_mensagem_regra_w
								;

								select  replace_macro(ds_mensagem_regra_w, '@BENEFICIARIO', substr(pls_obter_dados_segurado(r_C10_w.nr_seq_segurado,'N'), 0, 255))
								into STRICT    ds_mensagem_regra_w
								;

								if (ds_destinatario_w IS NOT NULL AND ds_destinatario_w::text <> '') then
									id_sms_w := pls_enviar_sms_alerta_evento(	ds_remetente_w, ds_destinatario_w, substr(ds_mensagem_regra_w,1,150), nr_seq_tipo_evento_w, nm_usuario_p, id_sms_w);

									CALL pls_gerar_destino_evento(	nr_seq_evento_controle_w,
													'E',
													'SMS',
													nm_usuario_p,
													cd_pessoa_fisica_w,
													null,
													ds_mensagem_regra_w,
													id_sms_w,
													ds_destinatario_w);

									tb_prot_w[qt_nr_protocolo_w].nr_seq_protocolo_w	:= r_C10_w.nr_sequencia;

									qt_nr_protocolo_w := qt_nr_protocolo_w + 1;
								end if;
								end;
							end loop; -- r_C10_w
						end if;
					end if;
				end if;

				if (r_C02_w.ie_forma_envio = 'EM') and (coalesce(ds_email_remetente_w,'X') <> 'X') then

					select	nextval('pls_alerta_evento_controle_seq')
					into STRICT	nr_seq_evento_controle_w
					;

					insert into pls_alerta_evento_controle(nr_sequencia,
						dt_geracao_evento,
						ie_evento_disparo,
						nr_seq_tipo_evento,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						ds_mensagem,
						ds_titulo,
						ie_tipo_envio)
					values (nr_seq_evento_controle_w,
						clock_timestamp(),
						11,
						nr_seq_tipo_evento_w,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						ds_mensagem_regra_original_w,
						ds_titulo_w,
						ie_tipo_envio_w);

					select	count(1)
					into STRICT	qt_macro_regra_w
					
					where	ds_mensagem_regra_original_w like '%@%';

					if (qt_macro_regra_w > 0) then

						for r_C10_w in C10 loop
							begin
								ds_mensagem_regra_w := ds_mensagem_regra_original_w;

								select  replace_macro(ds_mensagem_regra_w, '@NR_PROTOCOLO_ATENDIMENTO', r_C10_w.nr_protocolo )
								into STRICT    ds_mensagem_regra_w
								;

								select  replace_macro(ds_mensagem_regra_w, '@NR_PROTOCOLO_INTERCAMBIO', r_C10_w.nr_protocolo_intercambio)
								into STRICT    ds_mensagem_regra_w
								;

								select  replace_macro(ds_mensagem_regra_w, '@BENEFICIARIO', substr(pls_obter_dados_segurado(r_C10_w.nr_seq_segurado,'N'), 0, 255))
								into STRICT    ds_mensagem_regra_w
								;

								ds_email_dest_w := trim(both substr(pls_obter_dados_segurado(r_C10_w.nr_seq_segurado,'E'), 0, 255));
								cd_pessoa_fisica_w := substr(pls_obter_dados_segurado(r_C10_w.nr_seq_segurado,'PF'), 0, 255);

								if (obter_se_email_valido(ds_email_dest_w) = 'N') then
									ds_mensagem_w := 'Email do beneficiário ' || substr(pls_obter_dados_segurado(r_C10_w.nr_seq_segurado,'N'), 0, 255) ||
												 ' é inválido!' || chr(13) || chr(10) || 'Email: ' || ds_email_dest_w || ', favor revisar cadastro.';

									CALL pls_gravar_log_prot_atend_hist(r_C10_w.nr_sequencia, ds_mensagem_w, nm_usuario_p);
								elsif (coalesce(ds_email_dest_w,'X') <> 'X') and (obter_se_email_valido(ds_email_dest_w) = 'S') then
									begin
										CALL enviar_email(	ds_titulo_w, ds_mensagem_regra_w, ds_email_remetente_w,
												ds_email_dest_w, nm_usuario_p, 'M');

										CALL pls_gerar_destino_evento(	nr_seq_evento_controle_w,
														'E',
														'EM',
														nm_usuario_p,
														cd_pessoa_fisica_w,
														null,
														'E-mail enviado para: '||ds_email_dest_w||' com a mensagem: '||ds_mensagem_regra_w,
														null,
														null);

										tb_prot_w[qt_nr_protocolo_w].nr_seq_protocolo_w	:= r_C10_w.nr_sequencia;

										qt_nr_protocolo_w := qt_nr_protocolo_w + 1;
									exception
									when others then
										ds_mensagem_w := 'Erro ao tentar enviar email para o beneficiário ' || substr(pls_obter_dados_segurado(r_C10_w.nr_seq_segurado,'N'), 0, 255);

										CALL pls_gravar_log_prot_atend_hist(r_C10_w.nr_sequencia, ds_mensagem_w, nm_usuario_p);
									end;
								end if;
							end;
						end loop; -- r_C10_w
					end if;
				end if;
				end;
			end loop; -- r_C02_w
		end if;
	end if;
	end;
end loop; -- r_C01_w
qt_nr_protocolo_w := qt_nr_protocolo_w -1;

for y in 0.. qt_nr_protocolo_w loop
	begin
		update	pls_protocolo_atendimento
		set	ie_protocolo_enviado = 'S'
		where	nr_sequencia = tb_prot_w[y].nr_seq_protocolo_w;
	end;
end loop;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_alerta_envio_nr_protocolo ( nm_usuario_p text) FROM PUBLIC;

