-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_hist_audit_ret_glosa (nr_seq_ret_item_p bigint, nr_seq_glosa_p bigint, nr_seq_hist_audit_p bigint, dt_reapresentacao_p timestamp, dt_receb_prev_p timestamp, nm_usuario_p text, ie_inicio_fim_p text, nr_seq_conpaci_ret_hist_p INOUT bigint) AS $body$
DECLARE


nr_seq_conpaci_ret_w	bigint;
nr_sequencia_w		bigint;
nr_seq_hist_audit_w	bigint;
nr_seq_glosa_w		bigint;
vl_glosa_w		double precision;
vl_pendente_w		double precision;
vl_nao_auditado_w	double precision;
vl_reapresentacao_w	double precision;
vl_glosa_indevida_w	double precision;
vl_pago_indevido_w	double precision;
dt_hist_indevido_w	timestamp;
ie_acao_w		smallint;

nr_seq_propaci_w		bigint;
nr_seq_matpaci_w		bigint;
nr_seq_conpaci_ret_hist_ant_w	bigint;
nr_seq_hist_audit_ant_w		bigint;
vl_historico_ant_w		double precision;
nr_seq_hist_anterior_w		bigint;
ie_gerar_hist_w			varchar(255);
cd_estabelecimento_w		smallint;
vl_hist_atual_w			double precision;
ie_gerar_hist_igual_w		varchar(1);
ds_historico_w			varchar(40);
qt_hist_igual_w			bigint;
nr_seq_retorno_w		bigint;
ie_valor_amaior_w		varchar(1);
ie_definir_analisada_w		varchar(1);
qt_item_w			bigint;
qt_item_analisado_w		bigint;

nr_sequencia_ww bigint;


BEGIN

select	max(c.cd_estabelecimento)
into STRICT	cd_estabelecimento_w
from	conta_paciente_retorno b,
	convenio_retorno_item a,
	convenio_retorno c
where	a.nr_seq_retorno		= c.nr_sequencia
and	a.nr_interno_conta 	= b.nr_interno_conta
and	a.cd_autorizacao	 	= b.cd_autorizacao
and 	a.nr_sequencia	 	= nr_seq_ret_item_p;

ie_gerar_hist_w := Obter_Param_Usuario(66, 13, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_gerar_hist_w);
ie_gerar_hist_igual_w := Obter_Param_Usuario(66, 16, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_gerar_hist_igual_w);
ie_valor_amaior_w := Obter_Param_Usuario(66, 18, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_valor_amaior_w);
ie_definir_analisada_w := Obter_Param_Usuario(27, 153, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_definir_analisada_w);


if (coalesce(nr_seq_conpaci_ret_hist_p::text, '') = '') then
		begin
		select	b.nr_sequencia,
			b.vl_pendente,
			b.vl_nao_auditado,
			b.vl_reapresentacao,
			b.vl_glosa_indevida
		into STRICT	nr_seq_conpaci_ret_w,
			vl_pendente_w,
			vl_nao_auditado_w,
			vl_reapresentacao_w,
			vl_glosa_indevida_w
		from	conta_paciente_retorno b,
			convenio_retorno_item a
		where	a.nr_interno_conta = b.nr_interno_conta
		and	a.cd_autorizacao	 = b.cd_autorizacao
		and 	a.nr_sequencia	 = nr_seq_ret_item_p;
		exception
		when no_data_found then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(185527);
			-- Esta conta nao possui registro na auditoria!

			-- Confirme se retorno foi baixado.
		end;

		-- Edgar 25/09/2009, OS 129084, INICIO DA ROTINA DE GERACAO DE HISTORICO AUTOMATICO PARA SEGUNDA REAPRESENTACAO
		select	max(a.nr_seq_propaci),
			max(a.nr_seq_matpaci),
			max(b.nr_seq_retorno),
			max(a.vl_glosa)
		into STRICT	nr_seq_propaci_w,
			nr_seq_matpaci_w,
			nr_seq_retorno_w,
			vl_glosa_w
		from	convenio_retorno_item b,
			convenio_retorno_glosa a
		where	a.nr_sequencia		= nr_seq_glosa_p
		and	a.nr_seq_ret_item	= b.nr_sequencia;

		select	max(ie_acao),
			max(ds_historico)
		into STRICT 	ie_acao_w,
			ds_historico_w
		from 	hist_audit_conta_paciente
		where 	nr_sequencia = nr_seq_hist_audit_p;

		if (ie_gerar_hist_igual_w = 'N') then

			select	count(*)
			into STRICT	qt_hist_igual_w
			from (SELECT	1
				from	convenio_retorno_item c,
					conta_paciente_ret_hist b,
					convenio_retorno_glosa a
				where	a.nr_seq_matpaci		= nr_seq_matpaci_w
				and	a.nr_sequencia			<> nr_seq_glosa_p
				and	a.nr_seq_conpaci_ret_hist	= b.nr_sequencia
				and	b.nr_seq_hist_audit		= nr_seq_hist_audit_p
				and	a.nr_seq_ret_item		= c.nr_sequencia
				and	c.nr_seq_retorno		= nr_seq_retorno_w
				
union

				SELECT	1
				from	convenio_retorno_item c,
					conta_paciente_ret_hist b,
					convenio_retorno_glosa a
				where	a.nr_seq_propaci		= nr_seq_propaci_w
				and	a.nr_sequencia			<> nr_seq_glosa_p
				and	a.nr_seq_conpaci_ret_hist	= b.nr_sequencia
				and	b.nr_seq_hist_audit		= nr_seq_hist_audit_p
				and	a.nr_seq_ret_item		= c.nr_sequencia
				and	c.nr_seq_retorno		= nr_seq_retorno_w) alias2;


			if (qt_hist_igual_w > 0) then

				CALL wheb_mensagem_pck.exibir_mensagem_abort(185532, 'DS_HISTORICO=' || ds_historico_w);

				-- Ja existe um historico ' || ds_historico_w || ' para este item! Parametro [16]
			end if;

		end if;

		-- Obter o ultimo historico do item antes deste retorno
		nr_seq_conpaci_ret_hist_ant_w	:= null;
		if (nr_seq_propaci_w IS NOT NULL AND nr_seq_propaci_w::text <> '') then
			select	max(a.nr_seq_conpaci_ret_hist)
			into STRICT	nr_seq_conpaci_ret_hist_ant_w
			from	convenio_retorno_glosa a
			where	a.nr_seq_propaci	= nr_seq_propaci_w
			and	a.nr_sequencia		<> nr_seq_glosa_p
			and	(a.nr_seq_conpaci_ret_hist IS NOT NULL AND a.nr_seq_conpaci_ret_hist::text <> '');
		elsif (nr_seq_matpaci_w IS NOT NULL AND nr_seq_matpaci_w::text <> '') then
			select	max(a.nr_seq_conpaci_ret_hist)
			into STRICT	nr_seq_conpaci_ret_hist_ant_w
			from	convenio_retorno_glosa a
			where	a.nr_seq_matpaci	= nr_seq_matpaci_w
			and	a.nr_sequencia		<> nr_seq_glosa_p
			and	(a.nr_seq_conpaci_ret_hist IS NOT NULL AND a.nr_seq_conpaci_ret_hist::text <> '');
		end if;


		if (nr_seq_conpaci_ret_hist_ant_w IS NOT NULL AND nr_seq_conpaci_ret_hist_ant_w::text <> '') then

			-- Obter valor e historico gerado anteriormente a este historico
			select	max(nr_seq_hist_audit),
				max(vl_historico)
			into STRICT	nr_seq_hist_audit_ant_w,
				vl_historico_ant_w
			from	conta_paciente_ret_hist
			where	nr_sequencia	= nr_seq_conpaci_ret_hist_ant_w;

			-- caso o ultimo historico seja igual ao novo historico, entao devemos gerar o historico intermediario
			if (nr_seq_hist_audit_ant_w = nr_seq_hist_audit_p) then

				select	max(nr_seq_hist_anterior)
				into STRICT	nr_seq_hist_anterior_w
				from	hist_audit_conta_paciente
				where	nr_sequencia	= nr_seq_hist_audit_p;

				if (1=2) then
				--if	(nr_seq_hist_anterior_w is not null) then
					insert into conta_paciente_ret_hist(nr_sequencia,
						dt_historico, 
						vl_historico, 
						dt_atualizacao, 
						nm_usuario, 
						nr_seq_conpaci_ret,
						nr_seq_hist_audit, 
						nr_seq_ret_item, 
						ds_observacao,
						nr_seq_lote_audit, 
						dt_reapresentacao, 
						dt_receb_prev,
						nm_usuario_resp)
					values (nextval('conta_paciente_ret_hist_seq'),
						clock_timestamp(),
						vl_historico_ant_w,
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_conpaci_ret_w,
						nr_seq_hist_anterior_w,
						nr_seq_ret_item_p,
						null,
						null,
						null,
						null,
						nm_usuario_p);
				end if;
			end if;
		end if;
		-- Edgar 25/09/2009, OS 129084, FIM DA ROTINA
		select nextval('conta_paciente_ret_hist_seq')
		into STRICT nr_seq_conpaci_ret_hist_p
		;

		insert into conta_paciente_ret_hist(
			nr_sequencia,
			dt_historico,
			vl_historico,
			dt_atualizacao,
			nm_usuario,
			nr_seq_conpaci_ret,
			nr_seq_hist_audit,
			nr_seq_ret_item,
			ds_observacao,
			nr_seq_lote_audit,
			dt_reapresentacao,
			dt_receb_prev,
			nm_usuario_resp)
		values (nr_seq_conpaci_ret_hist_p,
			clock_timestamp(),
			CASE WHEN ie_valor_amaior_w='S' THEN coalesce(vl_glosa_w,0)  ELSE 0 END ,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_conpaci_ret_w,
			nr_seq_hist_audit_p,
			nr_seq_ret_item_p,
			null,
			null,
			CASE WHEN ie_acao_w=2 THEN  dt_reapresentacao_p  ELSE null END ,
			CASE WHEN ie_acao_w=2 THEN  dt_receb_prev_p  ELSE null END ,
			nm_usuario_p);

			commit;
end if;


select	max(a.nr_sequencia) into STRICT nr_sequencia_ww
from	motivo_glosa b,
	convenio_retorno_glosa a
where	a.cd_motivo_glosa	= b.cd_motivo_glosa
and	coalesce(a.ie_acao_glosa,b.ie_acao_glosa) = 'R'
and	a.nr_seq_ret_item	= nr_seq_ret_item_p;

update	convenio_retorno_glosa
set	nr_seq_conpaci_ret_hist = nr_seq_conpaci_ret_hist_p
where	nr_sequencia = coalesce(nr_seq_glosa_p, nr_sequencia_ww);

if (ie_inicio_fim_p = 'F') then
	select sum(vl_glosa)
	into STRICT vl_glosa_w
	from convenio_retorno_glosa
	where nr_seq_conpaci_ret_hist = nr_seq_conpaci_ret_hist_p;

	if (vl_glosa_w <> 0) then
		select	b.nr_sequencia,
			b.vl_pendente
		into STRICT	nr_seq_conpaci_ret_w,
			vl_pendente_w
		from	conta_paciente_retorno b,
			convenio_retorno_item a
		where	a.nr_interno_conta	= b.nr_interno_conta
		and	a.cd_autorizacao	= b.cd_autorizacao
		and	a.nr_sequencia		= nr_seq_ret_item_p;

		if	(vl_glosa_w > (vl_pendente_w + vl_nao_auditado_w + vl_glosa_indevida_w + vl_reapresentacao_w)) then
			update	convenio_retorno_glosa
			set	nr_seq_conpaci_ret_hist  = NULL
			where	nr_seq_conpaci_ret_hist = nr_seq_conpaci_ret_hist_p;

			delete FROM conta_paciente_ret_hist
			where nr_sequencia = nr_seq_conpaci_ret_hist_p;

			commit;

			CALL wheb_mensagem_pck.exibir_mensagem_abort(185536);
			--Valor das glosas supera valor pendente na auditoria !
		end if;

		begin
			update	conta_paciente_ret_hist
			set	vl_historico = vl_glosa_w
			where	nr_sequencia = nr_seq_conpaci_ret_hist_p;
		exception
		when others then
			select	coalesce(vl_historico,0)
			into STRICT	vl_hist_atual_w
			from	conta_paciente_ret_hist
			where	nr_sequencia = nr_seq_conpaci_ret_hist_p;
			if	((vl_hist_atual_w = 0) and (coalesce(ie_gerar_hist_w,'S') = 'N'))then -- afstringari 195840 17/02/2010
				delete	FROM conta_paciente_ret_hist
				where	nr_sequencia = nr_seq_conpaci_ret_hist_p
				and	vl_historico = 0;

				commit;
				CALL wheb_mensagem_pck.exibir_mensagem_abort(185537);
				-- Nao e possivel gerar historico da auditoria com valor zerado. Parametro [13] Conta Paciente Auditoria.
			end if;
		end;
		commit;
	else
		rollback;
	end if;	
end if;

if (ie_definir_analisada_w = 'S') then	/* ahoffelder - OS 324188 - 26/05/2011 */
	select	count(*)
	into STRICT	qt_item_w
	from	convenio_retorno_glosa a
	where	a.nr_seq_ret_item	= nr_seq_ret_item_p;

	select	count(*)
	into STRICT	qt_item_analisado_w
	from	convenio_retorno_glosa a
	where	(nr_seq_conpaci_ret_hist IS NOT NULL AND nr_seq_conpaci_ret_hist::text <> '')
	and	a.nr_seq_ret_item	= nr_seq_ret_item_p;

	if (qt_item_w > 0) then

		if (qt_item_w = qt_item_analisado_w) then

			update	convenio_retorno_item
			set	ie_analisada	= 'S'
			where	nr_sequencia	= nr_seq_ret_item_p;

		else

			update	convenio_retorno_item
			set	ie_analisada	= 'N'
			where	nr_sequencia	= nr_seq_ret_item_p;

		end if;

	end if;

end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_hist_audit_ret_glosa (nr_seq_ret_item_p bigint, nr_seq_glosa_p bigint, nr_seq_hist_audit_p bigint, dt_reapresentacao_p timestamp, dt_receb_prev_p timestamp, nm_usuario_p text, ie_inicio_fim_p text, nr_seq_conpaci_ret_hist_p INOUT bigint) FROM PUBLIC;

