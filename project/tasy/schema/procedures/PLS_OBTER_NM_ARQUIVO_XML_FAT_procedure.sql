-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_obter_nm_arquivo_xml_fat ( nr_seq_fatura_p bigint, ds_hash_p text, nm_arquivo_macro_p text, nm_usuario_p text, ds_mascara_p text, ds_mascara_zip_p text, ds_mascara_adic_p text, qt_arquivo_p bigint, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nr_seq_guia_arquivo_p pls_fat_guia_arquivo.nr_sequencia%type, nm_arquivo_p INOUT text, nr_seq_regra_p pls_regra_arquivo_fatura.nr_sequencia%type) AS $body$
DECLARE


nm_arquivo_w				varchar(255);
nr_titulo_w					pls_fatura.nr_titulo%type;
nr_seq_lote_w				pls_fatura.nr_seq_lote%type;


BEGIN
if (nr_seq_fatura_p IS NOT NULL AND nr_seq_fatura_p::text <> '') then
	if (nm_arquivo_macro_p IS NOT NULL AND nm_arquivo_macro_p::text <> '') then

		select	max(nr_titulo),
			max(nr_seq_lote)
		into STRICT	nr_titulo_w,
			nr_seq_lote_w
		from	pls_fatura
		where	nr_sequencia = nr_seq_fatura_p;
		
		nm_arquivo_w	:= substr(nm_arquivo_macro_p,1,255);
		nm_arquivo_w	:= substr(replace_macro(nm_arquivo_w,'@NR_SEQ_FATURA',nr_seq_fatura_p),1,255);
		nm_arquivo_w	:= substr(replace_macro(nm_arquivo_w,'@NR_TITULO',nr_titulo_w),1,255);
		nm_arquivo_w	:= substr(replace_macro(nm_arquivo_w,'@NR_LOTE',nr_seq_lote_w),1,255);
		nm_arquivo_w	:= substr(replace_macro(nm_arquivo_w,'@DS_HASH',ds_hash_p),1,255);
		nm_arquivo_w	:= substr(replace_macro(nm_arquivo_w,'@SEQ_TRANS_TISS',lpad(nr_seq_guia_arquivo_p,20,'0')),1,255);
		
		nm_arquivo_p		:= nm_arquivo_w;
		
	elsif (ds_mascara_p IS NOT NULL AND ds_mascara_p::text <> '') then
		nm_arquivo_p := pls_obter_nome_masc_arq_fat(nr_seq_guia_arquivo_p, nr_seq_fatura_p, ds_mascara_p, null, null, qt_arquivo_p, cd_estabelecimento_p, nr_seq_regra_p);
		
	elsif (ds_mascara_zip_p IS NOT NULL AND ds_mascara_zip_p::text <> '') then
		nm_arquivo_p := pls_obter_nome_masc_arq_fat(nr_seq_guia_arquivo_p, nr_seq_fatura_p, null, ds_mascara_zip_p, null, qt_arquivo_p, cd_estabelecimento_p, nr_seq_regra_p);
		
	elsif (ds_mascara_adic_p IS NOT NULL AND ds_mascara_adic_p::text <> '') then
		nm_arquivo_p := pls_obter_nome_masc_arq_fat(nr_seq_guia_arquivo_p, nr_seq_fatura_p, null, null, ds_mascara_adic_p, qt_arquivo_p, cd_estabelecimento_p, nr_seq_regra_p);
	end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_obter_nm_arquivo_xml_fat ( nr_seq_fatura_p bigint, ds_hash_p text, nm_arquivo_macro_p text, nm_usuario_p text, ds_mascara_p text, ds_mascara_zip_p text, ds_mascara_adic_p text, qt_arquivo_p bigint, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nr_seq_guia_arquivo_p pls_fat_guia_arquivo.nr_sequencia%type, nm_arquivo_p INOUT text, nr_seq_regra_p pls_regra_arquivo_fatura.nr_sequencia%type) FROM PUBLIC;

