-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE fa_consistir_entrega (dt_periodo_inicial_p timestamp, dt_periodo_final_p timestamp, nr_seq_receita_p bigint, nr_seq_paciente_p bigint, nr_seq_entrega_p bigint default null, nm_usuario_p text DEFAULT NULL, ds_erro_p INOUT text DEFAULT NULL) AS $body$
DECLARE


ds_retorno_w			varchar(255);
nr_quantidade_w			bigint;
ie_pmc_w			varchar(1);
qt_dias_antes_retorno_w 	integer;
qt_dias_antes_ult_entr_w	integer;
ie_libera_w			varchar(1);
data_final_ant_w		timestamp;
cd_pessoa_fisica_w		varchar(10);
nr_seq_entrega_ant_w		bigint;
nr_seq_receita_amb_ant_w	bigint;
qtd_por_dia_w			double precision;
qtd_por_dia_ant_w		double precision;
cd_material_w			bigint;
cd_unidade_origem_w		varchar(10);
cd_unidade_destino_w		varchar(10);
qt_dispensar_ant_w		double precision;
qt_dispensar_w			double precision;
qtd_material_w			smallint;


C01 CURSOR FOR
	SELECT 	cd_material,
		cd_unidade_baixa,
		qt_dispensar
	FROM   	fa_entrega_medicacao_item x
	WHERE  	x.nr_seq_fa_entrega = nr_seq_entrega_ant_w;


BEGIN
ds_erro_p := '';
ie_libera_w := 'N';

--verificar se a entrega eh pmc
SELECT 	max(CASE WHEN coalesce(NR_SEQ_PACIENTE_PMC::text, '') = '' THEN 'N'  ELSE 'S' END ),
	max(cd_pessoa_fisica)
into STRICT	ie_pmc_w,
	cd_pessoa_fisica_w
FROM   	fa_paciente_entrega
WHERE  	nr_sequencia = nr_seq_paciente_p;

IF (ie_pmc_w = 'N') THEN
	SELECT	COUNT(*)
	INTO STRICT	nr_quantidade_w
	FROM	fa_entrega_medicacao a
	WHERE	a.cd_pessoa_fisica = cd_pessoa_fisica_w
	AND	a.nr_sequencia <> coalesce(nr_seq_entrega_p,0)
	and	coalesce(dt_cancelamento::text, '') = ''
	AND (trunc(dt_periodo_inicial_p) BETWEEN TRUNC(a.dt_periodo_inicial) AND TRUNC(a.dt_periodo_final))
	AND (trunc(dt_periodo_final_p)   BETWEEN TRUNC(a.dt_periodo_inicial) AND TRUNC(a.dt_periodo_final))
	AND	NOT EXISTS ( 	SELECT 	1
				FROM   	fa_entrega_medicacao_item x
				WHERE  	x.nr_seq_fa_entrega = a.nr_sequencia
				AND 	((x.qt_gerado > x.qt_dispensar) OR (x.dt_cancelamento IS NOT NULL AND x.dt_cancelamento::text <> '')))
	AND   EXISTS ( 	SELECT 1
			FROM 	fa_paciente_entrega x
			WHERE	x.nr_sequencia = a.nr_seq_paciente_entrega
			AND  	coalesce(x.nr_seq_paciente_pmc::text, '') = '');

	if (nr_quantidade_w > 0) then --Se são de receitas diferentes, deverá ser considerada a dose
		SELECT	max(a.nr_sequencia),
			max(nr_seq_receita_amb)
		INTO STRICT	nr_seq_entrega_ant_w,
			nr_seq_receita_amb_ant_w
		FROM	fa_entrega_medicacao a
		WHERE	a.cd_pessoa_fisica = cd_pessoa_fisica_w
		AND	a.nr_sequencia <> coalesce(nr_seq_entrega_p,0)
		and	coalesce(dt_cancelamento::text, '') = ''
		AND (trunc(dt_periodo_inicial_p) BETWEEN TRUNC(a.dt_periodo_inicial) AND TRUNC(a.dt_periodo_final))
		AND (trunc(dt_periodo_final_p)   BETWEEN TRUNC(a.dt_periodo_inicial) AND TRUNC(a.dt_periodo_final))
		AND	NOT EXISTS ( 	SELECT 	1
					FROM   	fa_entrega_medicacao_item x
					WHERE  	x.nr_seq_fa_entrega = a.nr_sequencia
					AND	x.qt_gerado > x.qt_dispensar)
		AND   	EXISTS ( 	SELECT 1
					FROM 	fa_paciente_entrega x
					WHERE	x.nr_sequencia = a.nr_seq_paciente_entrega
					AND  	coalesce(x.nr_seq_paciente_pmc::text, '') = '');

		if (nr_seq_receita_p <> nr_seq_receita_amb_ant_w) then

			SELECT 	COUNT(*)
			into STRICT	qtd_material_w
			FROM   	fa_receita_farmacia b,
				fa_receita_farmacia_item c
			WHERE  	c.nr_seq_receita     	= b.nr_sequencia
			AND	b.nr_sequencia 		= nr_seq_receita_p
			and	not exists (SELECT 	1
					FROM   	fa_entrega_medicacao_item x
					WHERE  	x.nr_seq_fa_entrega = nr_seq_entrega_ant_w
					and	x.cd_material	    = c.cd_material);


			if (qtd_material_w = 0) then
			begin
			open C01;
			loop
			fetch C01 into
				cd_material_w,
				cd_unidade_origem_w,
				qt_dispensar_ant_w;
			EXIT WHEN NOT FOUND; /* apply on C01 */
				begin

				--Verificar se o material da receita anterior existe na atual
				SELECT 	COUNT(*)
				into STRICT	qtd_material_w
				FROM   	fa_receita_farmacia b,
					fa_receita_farmacia_item c
				WHERE  	c.nr_seq_receita     	= b.nr_sequencia
				AND	b.nr_sequencia 		= nr_seq_receita_p
				AND	c.cd_material		= cd_material_w
				AND	coalesce(b.dt_cancelamento::text, '') = '';

				if (qtd_material_w = 0) then
					ie_libera_w := 'S';
				else
					qtd_por_dia_w 	  := fa_obter_qtd_dispensar_dia(nr_seq_receita_p,cd_material_w);
					qtd_por_dia_ant_w := fa_obter_qtd_dispensar_dia(nr_seq_receita_amb_ant_w,cd_material_w);
					if (qtd_por_dia_w <> qtd_por_dia_ant_w) and (qtd_por_dia_w > 0) then
						--*** Unidade Destino
						select	max(cd_unidade_medida)
						into STRICT	cd_unidade_destino_w
						from	fa_medic_farmacia_amb
						where	cd_material = cd_material_w;
						qt_dispensar_w :=  (trunc(dt_periodo_final_p) - trunc(dt_periodo_inicial_p)) * qtd_por_dia_w;
						--conversão da dose a dispensar para o unidade de destino
						qt_dispensar_w := Obter_dose_convertida(cd_material_w,qt_dispensar_w,cd_unidade_origem_w,cd_unidade_destino_w);
						if (qt_dispensar_w > qt_dispensar_ant_w) then
							ie_libera_w := 'S';
						end if;
					end if;
				end if;
				end;
			end loop;
			close C01;
			end;
			else
				ie_libera_w := 'S';
			end if;
		end if;
	end if;
ELSE
	SELECT	COUNT(*)
	INTO STRICT	nr_quantidade_w
	FROM	fa_entrega_medicacao a
	WHERE	a.cd_pessoa_fisica = cd_pessoa_fisica_w
	AND	a.nr_sequencia <> coalesce(nr_seq_entrega_p,0)
	and 	coalesce(dt_cancelamento::text, '') = ''
	AND (trunc(dt_periodo_inicial_p) BETWEEN TRUNC(a.dt_periodo_inicial) AND TRUNC(a.dt_periodo_final))
	AND (trunc(dt_periodo_final_p)   BETWEEN TRUNC(a.dt_periodo_inicial) AND TRUNC(a.dt_periodo_final))
	AND	NOT EXISTS ( 	SELECT 	1
				FROM   	fa_entrega_medicacao_item x
				WHERE  	x.nr_seq_fa_entrega = a.nr_sequencia
				AND	x.qt_gerado > x.qt_dispensar)
	AND EXISTS (	SELECT 1
				FROM   fa_entrega_medicacao_item x
				WHERE  x.nr_seq_fa_entrega 	= a.nr_sequencia
				AND    fa_obter_se_medic_pac_pmc(nr_seq_fa_entrega,cd_material) = 'S'
				);
END IF;

if (ie_libera_w = 'N') then

	-- verificar se está no período que pode ser liberada a próxima entrega
	qt_dias_antes_retorno_w := obter_param_usuario(10015, 45, obter_perfil_ativo, nm_usuario_p, 0, qt_dias_antes_retorno_w);
	-- verificar a data final da última entrega
	select	max(dt_prevista_retorno)
	into STRICT	data_final_ant_w
	from	fa_entrega_medicacao a
	where	a.cd_pessoa_fisica = cd_pessoa_fisica_w
	and 	coalesce(dt_cancelamento::text, '') = ''
	and	a.nr_sequencia <> coalesce(nr_seq_entrega_p,0)
	and	nr_seq_receita_amb = nr_seq_receita_p
	and	substr(fa_obter_se_entrega_pmc(a.nr_sequencia),1,1) = ie_pmc_w;

	if (data_final_ant_w IS NOT NULL AND data_final_ant_w::text <> '') and (trunc(dt_periodo_inicial_p) < trunc(data_final_ant_w)) then
		qt_dias_antes_ult_entr_w := trunc(data_final_ant_w) - trunc(dt_periodo_inicial_p);
		if (qt_dias_antes_ult_entr_w <= qt_dias_antes_retorno_w) then
			ie_libera_w := 'S';
		else
			ds_erro_p := WHEB_MENSAGEM_PCK.get_texto(278151,null);
		end if;
	end if;
end if;


end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE fa_consistir_entrega (dt_periodo_inicial_p timestamp, dt_periodo_final_p timestamp, nr_seq_receita_p bigint, nr_seq_paciente_p bigint, nr_seq_entrega_p bigint default null, nm_usuario_p text DEFAULT NULL, ds_erro_p INOUT text DEFAULT NULL) FROM PUBLIC;

