-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_deposito_cheque (nr_seq_deposito_p bigint, nr_seq_cheque_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_cheque_w			bigint;
nr_seq_deposito_w		bigint;
seq_deposito_w			bigint;
nr_seq_cheque_dep_w		bigint;
nr_seq_motivo_dev_w		bigint;
vl_cheque_w			double precision;
dt_deposito_w			timestamp;
dt_reapresentacao_w		timestamp;
cont_w				smallint;
dt_seg_reapresentacao_w		timestamp;
ie_tipo_devolucao_w		varchar(5);
/* Projeto Multimoeda - Variáveis */

cd_estabelecimento_w		smallint;
cd_moeda_deposito_w		integer;
cd_moeda_cheque_w		integer;
cd_moeda_empresa_w		integer;
vl_cheque_estrang_w		double precision;
vl_complemento_w		double precision;
vl_cotacao_w			cotacao_moeda.vl_cotacao%type;
ie_moeda_estrang_w		varchar(1) := 'N';


BEGIN

select	count(*)
into STRICT	cont_w
from	deposito_cheque
where	nr_seq_cheque		= nr_seq_cheque_p
and	nr_seq_deposito		= nr_seq_deposito_p;

if (cont_w > 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(265497,'');
	--Mensagem: Este cheque já está vinculado a este depósito!
end if;

/* Projeto Multimoeda - Busca os dados do depósito para verificar se é moeda estrangeira. */

select	max(cd_estabelecimento),
	max(cd_moeda),
	max(vl_cotacao)
into STRICT	cd_estabelecimento_w,
	cd_moeda_deposito_w,
	vl_cotacao_w
from 	deposito
where	nr_sequencia = nr_seq_deposito_p;

/* Projeto Multimoeda - Busca a moeda padrão da empresa.*/

select	obter_moeda_padrao_empresa(cd_estabelecimento_w,'E')
into STRICT	cd_moeda_empresa_w
;

/* Projeto Multimoeda - Busca a moeda do cheque.*/

select	max(cd_moeda)
into STRICT	cd_moeda_cheque_w
from	cheque_cr
where	nr_seq_cheque = nr_seq_cheque_p;

/* Projeto Multimoeda - Verifica se o depósito é moeda estrangeira.*/

if (coalesce(cd_moeda_deposito_w,cd_moeda_empresa_w) <> cd_moeda_empresa_w) and (coalesce(vl_cotacao_w,0) <> 0) then
	ie_moeda_estrang_w := 'S';
else
	ie_moeda_estrang_w := 'N';
end if;

/* Projeto Multimoeda -  Verifica se a moeda do cheque é diferente da moeda do depósito, caso positivo impede de vincular o cheque no depósito.
		Só pode vincular cheques com a mesma moeda. Caso a moeda não esteja preenchida, é considerada a moeda padrão da empresa.*/
if (coalesce(cd_moeda_cheque_w,cd_moeda_empresa_w) <> coalesce(cd_moeda_deposito_w,cd_moeda_empresa_w)) then
	-- Mensagem: A moeda do cheque é diferente da moeda do depósito.
	CALL wheb_mensagem_pck.exibir_mensagem_abort(346876);
end if;

select	max(coalesce(a.nr_sequencia,0))
into STRICT	seq_deposito_w
from	deposito a,
	deposito_cheque b
where	b.nr_seq_cheque = nr_seq_cheque_p
and	a.nr_sequencia	= b.nr_seq_deposito
and	coalesce(a.dt_deposito::text, '') = '';

if (seq_deposito_w > 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(265500,'seq_deposito=' ||seq_deposito_w);
	--Mensagem: Este cheque já está vinculado a um depósito que não está fechado. || chr(13) ||
	--Por favor, atualize a data de depósito. Depósito: || seq_deposito_w
end if;

begin
select		a.nr_seq_cheque,
		a.dt_deposito,
		a.dt_reapresentacao,
		a.dt_seg_reapresentacao,
		a.nr_seq_motivo_dev
into STRICT		nr_seq_cheque_w,
		dt_deposito_w,
		dt_reapresentacao_w,
		dt_seg_reapresentacao_w,
		nr_seq_motivo_dev_w
from		cheque_cr a
where		a.nr_seq_cheque		= nr_seq_cheque_p
and		coalesce(a.dt_venda_terc::text, '') = ''
and (not exists (SELECT	1
			from	deposito_cheque x
			where	x.nr_seq_cheque	= a.nr_seq_cheque) or
		(a.dt_devolucao_banco IS NOT NULL AND a.dt_devolucao_banco::text <> '') or
		(a.dt_reapresentacao IS NOT NULL AND a.dt_reapresentacao::text <> ''));
exception
when no_data_found then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(265503,'');
	--Mensagem: Este cheque foi vendido para terceiros ou já está em outro depósito sem data de devolução!
end;

select	coalesce(max(ie_tipo_devolucao),'N')
into STRICT	ie_tipo_devolucao_w
from	motivo_dev_cheque
where	nr_sequencia		= nr_seq_motivo_dev_w;

if (nr_seq_cheque_w IS NOT NULL AND nr_seq_cheque_w::text <> '') and
	((coalesce(dt_deposito_w::text, '') = '') or
	 ((dt_deposito_w IS NOT NULL AND dt_deposito_w::text <> '') and (coalesce(dt_reapresentacao_w::text, '') = '')) or
	 (((dt_reapresentacao_w IS NOT NULL AND dt_reapresentacao_w::text <> '') and (coalesce(dt_seg_reapresentacao_w::text, '') = '')) and (ie_tipo_devolucao_w = 'B'))) then
	begin

	select	nextval('deposito_cheque_seq')
	into STRICT	nr_seq_cheque_dep_w
	;

	insert	into deposito_cheque(nr_sequencia,
		nr_seq_deposito,
		nr_seq_cheque,
		dt_atualizacao,
		nm_usuario)
	values (nr_seq_cheque_dep_w,
		nr_seq_deposito_p,
		nr_seq_cheque_w,
		clock_timestamp(),
		nm_usuario_p);

	/*select	vl_cheque
	into	vl_cheque_w
	from	cheque_cr
	where	nr_seq_cheque = nr_seq_cheque_w;

	Francisco - 27/10/2009 - OS 174428 - Alterei para recalcular tudo, devido a acesso simultaneo */
	select	coalesce(sum(b.vl_cheque), 0),
		coalesce(sum(b.vl_cheque_estrang),0)
	into STRICT	vl_cheque_w,
		vl_cheque_estrang_w
	from	cheque_cr b,
		deposito_cheque a
	where	a.nr_seq_cheque		= b.nr_seq_cheque
	and	a.nr_seq_deposito	= nr_seq_deposito_p;

	/* Projeto Multimoeda - Quando depósito em moeda estrangeira atualiza os valores com base na moeda estrangeira.
			Caso contrário, realiza o processo normal. */
	if (ie_moeda_estrang_w = 'S') then
		update	deposito
		set	nm_usuario = nm_usuario_p,
			dt_atualizacao = clock_timestamp(),
			vl_cheque_estrang = vl_cheque_estrang_w,
			vl_cheque = vl_cheque_estrang_w * vl_cotacao,
			vl_complemento = (coalesce(vl_especie,0) - coalesce(vl_especie_estrang,0)) + ((vl_cheque_estrang_w * vl_cotacao) - vl_cheque_estrang_w)
		where	nr_sequencia = nr_seq_deposito_p;
	else
		update	deposito
		set	nm_usuario = nm_usuario_p,
			dt_atualizacao = clock_timestamp(),
			vl_cheque = /*nvl(vl_cheque,0) +*/
 vl_cheque_w
		where	nr_sequencia = nr_seq_deposito_p;
	end if;

	end;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_deposito_cheque (nr_seq_deposito_p bigint, nr_seq_cheque_p bigint, nm_usuario_p text) FROM PUBLIC;

