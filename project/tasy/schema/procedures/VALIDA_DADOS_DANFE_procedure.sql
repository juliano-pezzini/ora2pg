-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE tUF AS (tUF varchar(2)[27]);
CREATE TYPE tCod AS (tCod smallint[27]);


CREATE OR REPLACE PROCEDURE valida_dados_danfe ( nr_danfe_p text, cd_cgc_p text, cd_pessoa_fisica_p bigint, dt_emissao_nf_p timestamp, nr_nota_fiscal_p text, ds_serie_nf_p text, cd_operacao_nf_p bigint default null) AS $body$
DECLARE

sg_uf_w			tUF;
cd_uf_w			tCod;

ds_uf_w			varchar(2);
ds_mensagem_w		varchar(2000);
ds_danfe_w		varchar(44);
cd_cpf_cnpj_w		varchar(14);
ie_valido_w		varchar(1) := 'S';
ie_nf_avulsa_w		operacao_nota.ie_nf_avulsa%type;


BEGIN

sg_uf_w := tUF('RO','AC','AM','RR','PA','AP','TO','MA','PI','CE','RN','PB','PE','AL','SE','BA','MG','ES','RJ','SP','PR','SC','RS','MS','MT','GO','DF');
	
cd_uf_w := tCod(11,12,13,14,15,16,17,21,22,23,24,25,26,27,28,29,31,32,33,35,41,42,43,50,51,52,53);

ds_danfe_w  := substr(replace(nr_danfe_p,' ',''),1,44);

if ((replace(ds_danfe_w,' ','') IS NOT NULL AND (replace(ds_danfe_w,' ',''))::text <> ''))	then
	begin
	
	if (length(replace(ds_danfe_w,' ',''))= 44) and (obter_se_somente_numero(ds_danfe_w) = 'S') then
		begin

		if (cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') then
			begin
			select	obter_dados_pf_pj(cd_pessoa_fisica_p, cd_cgc_p, 'UF'),
				lpad(substr(obter_dados_pf(cd_pessoa_fisica_p,'CPF'),1,14),14,'0')
			into STRICT	ds_uf_w,
				cd_cpf_cnpj_w
			;
			end;
		else
			begin
			select	obter_dados_pf_pj(cd_pessoa_fisica_p, cd_cgc_p, 'UF'),
				lpad(substr(cd_cgc_p,1,14),14,'0')
			into STRICT	ds_uf_w,
				cd_cpf_cnpj_w
			;
			end;
		end if;
		
		
		
		/* UF do DANFE */

		for i in 1..length(27) loop
			begin
			
			if (ds_uf_w = sg_uf_w(i)) then
				begin
				
				if (cd_uf_w(i) = substr(ds_danfe_w,1,2)) then
					begin

					exit;

					end;
				else	
					begin
					
					ie_valido_w := 'N';
					ds_mensagem_w := ds_mensagem_w || WHEB_MENSAGEM_PCK.get_texto(300885);
					exit;
					
					end;
				end if;
				
				end;
			end if;
			
			end;
		end loop;
		
		/* ANO NOTA FISCAL DANFE*/

		if	not ((substr(ds_danfe_w,3,2) = to_char(dt_emissao_nf_p,'YY')) and (substr(ds_danfe_w,5,2) = to_char(dt_emissao_nf_p,'MM'))) then
			begin
			
			ie_valido_w := 'N';
			ds_mensagem_w := ds_mensagem_w || WHEB_MENSAGEM_PCK.get_texto(300886);
			
			end;
		end if;
		
		/* CNPJ DANFE*/

		if (cd_operacao_nf_p IS NOT NULL AND cd_operacao_nf_p::text <> '') then
			begin
			select max(ie_nf_avulsa)
			into STRICT ie_nf_avulsa_w
			from operacao_nota
			where cd_operacao_nf = cd_operacao_nf_p;	
			end;
		end if;
		
		if	((coalesce(ie_nf_avulsa_w,'N') = 'N') and not(substr(ds_danfe_w,7,14) = cd_cpf_cnpj_w)) then
			ie_valido_w := 'N';
			ds_mensagem_w := ds_mensagem_w || WHEB_MENSAGEM_PCK.get_texto(300887);
		end if;
		
		
		/* MODELO 55 DANFE */

		if	not(substr(ds_danfe_w,21,2) = '55') and not(substr(ds_danfe_w,21,2) = '57') then
			begin
			
			ie_valido_w := 'N';
			ds_mensagem_w := ds_mensagem_w || WHEB_MENSAGEM_PCK.get_texto(1071628);
			
			end;
		end if;
		
		/* Série da NF DANFE */

		if	not(substr(ds_danfe_w,23,3) = lpad(ds_serie_nf_p,3,'0')) then
			begin
			
			ie_valido_w := 'N';
			ds_mensagem_w := ds_mensagem_w || WHEB_MENSAGEM_PCK.get_texto(300889);
			
			end;
		end if;
		
		/* Número da NF DANFE */

		if	not(substr(ds_danfe_w,26,9) = lpad(nr_nota_fiscal_p,9,'0')) then
			begin
			
			ie_valido_w := 'N';
			ds_mensagem_w := ds_mensagem_w || WHEB_MENSAGEM_PCK.get_texto(300890);
			
			end;
		end if;
		
		/*Dígito Verificador*/

		if	not(valida_danfe(ds_danfe_w) = 'S') then
			begin
			
			ie_valido_w := 'N';
			ds_mensagem_w := ds_mensagem_w || WHEB_MENSAGEM_PCK.get_texto(300891);
			
			end;
		end if;
		
		/* Mostrar Incosistências*/

		if (ie_valido_w = 'N') then
			begin
			
			CALL wheb_mensagem_pck.exibir_mensagem_abort(300880,'DS_MENSAGEM_W=' || ds_mensagem_w);
			
			end;
		end if;
		
			
		end;
	else
		CALL wheb_mensagem_pck.exibir_mensagem_abort(300882);
		
	end if;
	
	end;
end if;


end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE valida_dados_danfe ( nr_danfe_p text, cd_cgc_p text, cd_pessoa_fisica_p bigint, dt_emissao_nf_p timestamp, nr_nota_fiscal_p text, ds_serie_nf_p text, cd_operacao_nf_p bigint default null) FROM PUBLIC;

