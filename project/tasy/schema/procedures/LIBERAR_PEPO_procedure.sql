-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE liberar_pepo ( nr_cirurgia_p bigint, ie_opcao_p text, nm_usuario_p text, nr_seq_pepo_p bigint default null) AS $body$
DECLARE


nr_cirurgia_w		varchar(10);
nr_atendimento_w	bigint;
cd_convenio_w		cirurgia.cd_convenio%type;
cd_estabelecimento_w	cirurgia.cd_estabelecimento%type;
ie_calc_porte_w		convenio.ie_calc_porte%type;
qt_regra_tx_tempo_w	bigint;
dt_liberacao_w		timestamp;
nr_seq_pepo_w		pepo_cirurgia.nr_sequencia%type;
ie_gerar_aprovacao_w bigint;

		
C01 CURSOR FOR
	SELECT	nr_cirurgia
	from	cirurgia
	where	nr_seq_Pepo = nr_seq_pepo_p
	order by nr_cirurgia;
	

BEGIN

select count(1)
  into STRICT ie_gerar_aprovacao_w 
  from mult_aprov_funcao
 where ie_situacao = 'A'
 and cd_funcao = wheb_usuario_pck.get_cd_funcao;

if (coalesce(nr_seq_pepo_p,0) = 0) then
	select	max(dt_liberacao)
	into STRICT	dt_liberacao_w
	from	cirurgia
	where	nr_cirurgia = nr_cirurgia_p;

	update	cirurgia
	set	dt_liberacao	=	CASE WHEN ie_opcao_p='D' THEN to_date(null)  ELSE clock_timestamp() END ,
		dt_atualizacao	=	clock_timestamp(),
		nm_usuario_lib	=	nm_usuario_p,
		nm_usuario	=	nm_usuario_p,
		dt_desfeita_lib	=	CASE WHEN ie_opcao_p='D' THEN clock_timestamp()  ELSE to_date(null) END
	where	nr_cirurgia	=	nr_cirurgia_p;
	if (ie_opcao_p <> 'D') then
		select	max(nr_atendimento)
		into STRICT	nr_atendimento_w
		from	cirurgia
		where	nr_cirurgia = nr_cirurgia_p;
	end if;	
	if (ie_gerar_aprovacao_w > 0) then
	  if (ie_opcao_p <> 'D') then
		CALL gerar_aprovacao_documento('CIRURGIA', 'NR_CIRURGIA',nr_cirurgia_p, nm_usuario_p);
	  else
		CALL inativar_aprovacao_documento('CIRURGIA', 'NR_CIRURGIA',nr_cirurgia_p, nm_usuario_p);
	  end if;
	end if;
elsif (coalesce(nr_seq_pepo_p,0) > 0 ) then
	select	max(dt_liberacao)
	into STRICT	dt_liberacao_w
	from	pepo_cirurgia
	where	nr_sequencia = nr_seq_pepo_p;

	update	pepo_cirurgia
	set	dt_liberacao	=	CASE WHEN ie_opcao_p='D' THEN to_date(null)  ELSE clock_timestamp() END ,
		dt_atualizacao	=	clock_timestamp(),
		nm_usuario_lib	=	nm_usuario_p,
		nm_usuario	=	nm_usuario_p
	where	nr_sequencia	=	nr_seq_pepo_p;
	
	if (ie_opcao_p <> 'D') then
		select	max(nr_atendimento)
		into STRICT	nr_atendimento_w
		from	pepo_cirurgia
		where	nr_sequencia = nr_seq_pepo_p;
	end if;	

	open C01;
	loop
	fetch C01 into	
		nr_cirurgia_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		update	cirurgia
		set	dt_liberacao	=	CASE WHEN ie_opcao_p='D' THEN to_date(null)  ELSE clock_timestamp() END ,
			dt_atualizacao	=	clock_timestamp(),
			nm_usuario_lib	=	nm_usuario_p,
			nm_usuario	=	nm_usuario_p
		where	nr_cirurgia	=	nr_cirurgia_w;
		end;
		
		if (ie_gerar_aprovacao_w > 0) then
			if (ie_opcao_p <> 'D') then
				CALL gerar_aprovacao_documento('CIRURGIA', 'NR_CIRURGIA',nr_cirurgia_w, nm_usuario_p);
			else
				CALL inativar_aprovacao_documento('CIRURGIA', 'NR_CIRURGIA',nr_cirurgia_w, nm_usuario_p);
			end if;
		end if;
		
	end loop;
	close C01;
end if;

commit;

if (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') then
	CALL gerar_lancamento_automatico(nr_atendimento_w,null,512,nm_usuario_p,null, null, null, null, null, null);
end if;	

if (ie_opcao_p <> 'D') and (coalesce(dt_liberacao_w::text, '') = '') then

	if (coalesce(nr_seq_pepo_p,0) = 0) then
		select	max(nr_seq_pepo)
		into STRICT	nr_seq_pepo_w
		from	cirurgia
		where	nr_cirurgia = nr_cirurgia_p;
	
		nr_cirurgia_w	:= nr_cirurgia_p;
	else
		select	min(nr_cirurgia)
		into STRICT	nr_cirurgia_w
		from	cirurgia
		where	nr_seq_pepo = nr_seq_pepo_p;
		
		nr_seq_pepo_w	:= nr_seq_pepo_p;
	end if;
	
	select	max(cd_convenio),
		coalesce(max(cd_estabelecimento),0)
	into STRICT	cd_convenio_w,
		cd_estabelecimento_w
	from	cirurgia
	where	nr_cirurgia = nr_cirurgia_w;

	select 	count(*)
	into STRICT	qt_regra_tx_tempo_w
	from	convenio_regra_taxa_cir
	where	cd_convenio = cd_convenio_w;

	select 	max(ie_calc_porte_estab)
	into STRICT	ie_calc_porte_w
	from 	convenio_estabelecimento
	where 	cd_convenio = cd_convenio_w
	and 	cd_estabelecimento = cd_estabelecimento_w;
	
	if (coalesce(ie_calc_porte_w::text, '') = '') then
		select	max(ie_calc_porte)
		into STRICT	ie_calc_porte_w
		from	convenio
		where	cd_convenio = cd_convenio_w;
	end if;	

	if 	((coalesce(qt_regra_tx_tempo_w,0) > 0) and (ie_calc_porte_w = 'S'))then
		CALL pepo_gerar_tx_sala_cir_tempo(nr_seq_pepo_w, nm_usuario_p);
	end if;
	
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE liberar_pepo ( nr_cirurgia_p bigint, ie_opcao_p text, nm_usuario_p text, nr_seq_pepo_p bigint default null) FROM PUBLIC;

