-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE record_integration_call_log ( nm_usuario_p integration_call_log.nm_usuario%type , nm_user_responsible_p integration_call_log.nm_user_responsible%type , dt_message_p integration_call_log.dt_message%type , nm_interface_p integration_call_log.nm_interface%type , nm_message_p integration_call_log.nm_message%type , ie_status_p integration_call_log.ie_status%type , ie_message_type_p integration_call_log.ie_message_type%type , ds_resend_script_p integration_call_log.ds_resend_script%type , ds_notes_p integration_call_log.ds_notes%type , ds_message_p integration_message_log.ds_message%type , ds_error_p integration_message_log.ds_error%type , ds_message_id_p integration_message_log.ds_message_id%type , nr_seq_int_call_log_p INOUT integration_message_log.nr_seq_int_call_log%type , cd_event_parent_seq_p integration_call_log.cd_event_parent_seq%type default null, nr_seq_evento_int_p integration_call_log.nr_seq_evento_int%type default null, ie_message_status_p integration_call_log.ie_status%type default null, ie_interface_type_p integration_call_log.ie_interface_type%type default null, ie_tipo_error_p integration_call_log.ie_tipo_error%type default null, ds_conversion_log_p integration_message_log.ds_message%type default null, ie_message_code_p integration_call_log.ie_message_code%type default null) AS $body$
DECLARE



/**
-- ie_status_p : Values from domain 9798 - Integration call status
-- ie_message_type_p : Values from domain 6975 - Integration management
-- nr_seq_int_call_log_p : Value of NR_SEQUENCIA of call log. This is not a mandatory field.
---- If provided, then the message log will be considered as a resend log.	
**/
nm_user_responsible_w		integration_call_log.nm_user_responsible%type;
ds_resend_script_w			integration_call_log.ds_resend_script%type;
ds_notes_w					integration_call_log.ds_notes%type;
ie_status_w					integration_call_log.ie_status%type;
ie_message_status_w         integration_call_log.ie_status%type;

--conversion change
json_data_w	    philips_json;
ds_error_detail  nais_conversion_err_detail.DS_ERROR%type;


BEGIN

    if (coalesce(ie_message_status_p::text, '') = '') then
        ie_message_status_w := ie_status_p;
    else
        ie_message_status_w := ie_message_status_p;
    end if;

	if ((nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') and
		(dt_message_p IS NOT NULL AND dt_message_p::text <> '') and
		(nm_interface_p IS NOT NULL AND nm_interface_p::text <> '') and
		(nm_message_p IS NOT NULL AND nm_message_p::text <> '') and
		(ie_status_p IS NOT NULL AND ie_status_p::text <> '') and
		(ie_message_type_p IS NOT NULL AND ie_message_type_p::text <> ''))	then
	
	
		if (nr_seq_int_call_log_p = 0 or coalesce(nr_seq_int_call_log_p::text, '') = '')	then
		
			select	nextval('integration_call_log_seq')
			into STRICT	nr_seq_int_call_log_p
			;

			insert into integration_call_log(nr_sequencia, nm_usuario, dt_atualizacao, nm_usuario_nrec, dt_atualizacao_nrec, nm_interface, nm_message,
				ie_message_type, ie_status, nm_user_responsible, dt_message, ds_resend_script, ds_notes, 
				cd_event_parent_seq, nr_seq_evento_int,ie_interface_type,ie_tipo_error,ie_message_code) 
                 
			values (nr_seq_int_call_log_p, nm_usuario_p, clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_interface_p, nm_message_p, 
				ie_message_type_p, ie_status_p, nm_user_responsible_p, dt_message_p, ds_resend_script_p, ds_notes_p, 
				cd_event_parent_seq_p, nr_seq_evento_int_p,ie_interface_type_p, ie_tipo_error_p,ie_message_code_p);
		
		else
		
			select	nm_user_responsible,
					ds_resend_script,
					ds_notes,
					ie_status
			into STRICT	nm_user_responsible_w,
					ds_resend_script_w,
					ds_notes_w,
					ie_status_w
			from	integration_call_log
			where	nr_sequencia = nr_seq_int_call_log_p;

			if (ie_status_w = 'S' or
				ie_status_w = 'F')	then
				-- If the log is already in 'Success' or 'Failed' status, do not update the log status.
				CALL wheb_mensagem_pck.exibir_mensagem_abort(1130820);
				return;
			end if;
			
			if (nm_user_responsible_p IS NOT NULL AND nm_user_responsible_p::text <> '')	then
				nm_user_responsible_w := nm_user_responsible_p;
			end if;
			
			if (ds_resend_script_p IS NOT NULL AND ds_resend_script_p::text <> '')	then
				ds_resend_script_w := ds_resend_script_p;
			end if;
			
			if (ds_notes_p IS NOT NULL AND ds_notes_p::text <> '')	then
				ds_notes_w := ds_notes_p;
			end if;
		
			update integration_call_log
			set		nm_usuario = nm_usuario_p, 
					dt_atualizacao = clock_timestamp(),
					ie_status = ie_status_p, 
					nm_user_responsible = nm_user_responsible_w, 
					dt_message = dt_message_p, 
					ds_resend_script = ds_resend_script_w, 
					ds_notes = ds_notes_w 
			where	nr_sequencia = nr_seq_int_call_log_p;
		
		end if;
                
		
		insert into integration_message_log(nr_sequencia, nm_usuario, dt_atualizacao, nr_seq_int_call_log, 
			ds_message, ds_error, ds_message_id, ie_status) 
		values (nextval('integration_message_log_seq'), nm_usuario_p, clock_timestamp(), nr_seq_int_call_log_p, 
			ds_message_p, substr(ds_error_p, 1, 499), ds_message_id_p, ie_message_status_w);

     
        if (ie_tipo_error_p = 'CE' and ie_message_code_p ='KK' ) then
        
       
        json_data_w := philips_json(ds_conversion_log_p);

        case
            when json_data_w.get['cd_error_detail'].get_string() = '-1'  then 
                            ds_error_detail:=	'Record not found';
            when json_data_w.get['cd_error_detail'].get_string() = '-2'  then
                            ds_error_detail:=	'Table Name Mismatch';
            when json_data_w.get['cd_error_detail'].get_string() = '-3'  then
                            ds_error_detail:=	'Column Name Mismatch';
            when json_data_w.get['cd_error_detail'].get_string() = '-4'  then
                            ds_error_detail:=	'Send Flag disabled';
            when json_data_w.get['cd_error_detail'].get_string() = '-5'  then
                            ds_error_detail:=	'validity Date Issue';
            when json_data_w.get['cd_error_detail'].get_string() = '-6'  then
                            ds_error_detail:=	'Medical Affair code is Empty';
        end case;

                
        insert into nais_conversion_err_detail(nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,vl_tasy_code,
                                nm_tasy_table,nm_tasy_column,cd_body_part,cd_direction,ie_type_message,cd_department,
                                dt_execution,dt_error,dt_consultation,ds_error,nr_order,ie_order_class,nr_prontuario,nr_seq_int_call_log) 
        values (nextval('nais_conversion_err_detail_seq'),
                                            clock_timestamp(),
                                            coalesce(wheb_usuario_pck.get_nm_usuario , 'NAIS'),
                                            clock_timestamp(),
                                            coalesce(wheb_usuario_pck.get_nm_usuario , 'NAIS'),
                                            json_data_w.get['tasy_code'].get_string(),
                                            json_data_w.get['table_name'].get_string(),
                                            json_data_w.get['attribute_name'].get_string(),
                                            null,null,
                                             json_data_w.get['Order_type'].get_string(),
                                             json_data_w.get['dept_code'].get_string(),
                                             json_data_w.get['execution_date'].get_string(),
                                             clock_timestamp(),
                                             to_date(json_data_w.get['dt_consulatation'].get_string(), 'yyyy-mm-dd hh24:mi:ss'),
                                             ds_error_detail,
                                            json_data_w.get['Order_number'].get_string(),
                                            json_data_w.get['Order_class'].get_string(),
                                            json_data_w.get['patient_id'].get_string()
                                            ,nr_seq_int_call_log_p);

	
		commit;

        end if;

		
	end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE record_integration_call_log ( nm_usuario_p integration_call_log.nm_usuario%type , nm_user_responsible_p integration_call_log.nm_user_responsible%type , dt_message_p integration_call_log.dt_message%type , nm_interface_p integration_call_log.nm_interface%type , nm_message_p integration_call_log.nm_message%type , ie_status_p integration_call_log.ie_status%type , ie_message_type_p integration_call_log.ie_message_type%type , ds_resend_script_p integration_call_log.ds_resend_script%type , ds_notes_p integration_call_log.ds_notes%type , ds_message_p integration_message_log.ds_message%type , ds_error_p integration_message_log.ds_error%type , ds_message_id_p integration_message_log.ds_message_id%type , nr_seq_int_call_log_p INOUT integration_message_log.nr_seq_int_call_log%type , cd_event_parent_seq_p integration_call_log.cd_event_parent_seq%type default null, nr_seq_evento_int_p integration_call_log.nr_seq_evento_int%type default null, ie_message_status_p integration_call_log.ie_status%type default null, ie_interface_type_p integration_call_log.ie_interface_type%type default null, ie_tipo_error_p integration_call_log.ie_tipo_error%type default null, ds_conversion_log_p integration_message_log.ds_message%type default null, ie_message_code_p integration_call_log.ie_message_code%type default null) FROM PUBLIC;

