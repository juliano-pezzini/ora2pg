-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_necessidade_treinamento ( cd_pessoa_fisica_p bigint, cd_responsavel_p bigint, cd_gerente_p bigint, cd_cargo_p bigint, ie_nova_revisao_p text default 'N', ie_analise_eficacia_p text default 'N', cd_pessoa_eficacia_p text default 'N', nm_usuario_p text DEFAULT NULL, cd_treinamento_cargo_p bigint default null) AS $body$
DECLARE


nr_seq_documento_w 		bigint;
ds_treinamento_w 		varchar(300);
nr_seq_classificacao_w 		bigint;
nr_seq_treinamento_w 		varchar(100);
ds_macro_w			varchar(255);
nr_seq_plataforma_w		qms_treinamento_cargo.nr_seq_plataforma%type;
qt_treinamento_reingresso_w	bigint;
qt_existe_treinamento_w		bigint;
ds_mensagem_reingresso_w	varchar(255);
dt_confirmacao_w		qms_treinamento.dt_confirmacao%type;
nr_seq_mot_nao_aplic_w		qms_treinamento.nr_seq_mot_nao_aplic%type;
ds_analise_eficacia_w		qms_treinamento.DS_MOTIVO%type;
ie_analise_eficacia_w		varchar(1);
nm_pessoa_fisica_w		pessoa_fisica.nm_pessoa_fisica%type;
cd_pessoa_eficacia_w		pessoa_fisica.cd_pessoa_fisica%type;
qt_liberado_w			bigint;
ie_cargo_terceiro_w 		varchar(1);
ie_reingresso_w			varchar(1) := 'N';
cd_pessoa_fisica_w		pessoa_fisica.cd_pessoa_fisica%type;
cd_gerente_w			qms_treinamento.cd_gerente_pessoa%type;
cd_responsavel_w		qms_treinamento.cd_responsavel%type;
dt_admissao_hosp_w		pessoa_fisica.dt_admissao_hosp%type;

C01 CURSOR FOR
	SELECT	a.nr_seq_documento,
	        a.ds_treinamento,
		a.nr_seq_classificacao,
		a.nr_seq_plataforma
	from	qms_treinamento_cargo a
	where	a.nr_seq_cargo = cd_cargo_p
	and   	((ie_analise_eficacia_w = 'S' and ie_cargo_terceiro_w = 'S' and lower(coalesce(ds_treinamento, substr(qua_obter_nome_doc(NR_SEQ_DOCUMENTO),1,255))) like '%effectiveness%')
			or ((ie_analise_eficacia_w = 'N') and lower(coalesce(ds_treinamento, substr(qua_obter_nome_doc(NR_SEQ_DOCUMENTO),1,255))) not like '%effectiveness%'));

C02 CURSOR FOR
	SELECT	a.nr_sequencia
	from	qms_treinamento a
	where 	a.cd_pessoa_fisica = cd_pessoa_fisica_p
	and	coalesce(a.cd_responsavel::text, '') = ''
	and	coalesce(a.ie_situacao, 'A') = 'A';
	
C03 CURSOR FOR
	SELECT 	distinct x.cd_pessoa_fisica,
		x.dt_admissao_hosp dt_admissao_hosp
	from 	pessoa_fisica x,
		usuario y
	where 	x.cd_pessoa_fisica = y.cd_pessoa_fisica
	and     x.cd_cargo = cd_cargo_p
	and 	y.ie_situacao = 'A';


BEGIN

if (ie_analise_eficacia_p <> 'S' or coalesce(ie_analise_eficacia_p::text, '') = '') then
	begin
	ie_analise_eficacia_w := 'N';
	end;
else
	ie_analise_eficacia_w := 'S';
end if;

if (cd_pessoa_eficacia_p = 'N' or coalesce(cd_pessoa_eficacia_p::text, '') = '') then
	begin
		cd_pessoa_eficacia_w := null;
	end;
else
	cd_pessoa_eficacia_w := cd_pessoa_eficacia_p;
end if;

ds_mensagem_reingresso_w 	:= '';

if (cd_pessoa_eficacia_w IS NOT NULL AND cd_pessoa_eficacia_w::text <> '') then
	select	substr(upper(obter_nome_pf(cd_pessoa_eficacia_w)),1,255)
	into STRICT	nm_pessoa_fisica_w
	;
	
	select 	coalesce(max('S'), 'N')
	into STRICT 	ie_cargo_terceiro_w
	from 	pessoa_fisica a, cargo b
	where 	a.cd_cargo = b.cd_cargo
	and 	a.cd_pessoa_fisica = cd_pessoa_eficacia_w
	and 	lower(b.ds_cargo) like '%provedor externo%';
end if;

ds_macro_w	:= 'NM_PESSOA_FISICA=' || nm_pessoa_fisica_w;

select	obter_desc_exp_idioma(958649, 1, ds_macro_w)
into STRICT	ds_analise_eficacia_w
;

if (cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '' AND cd_responsavel_p IS NOT NULL AND cd_responsavel_p::text <> '') then
	begin
	open C01;
	loop
	fetch C01 into	
		nr_seq_documento_w,
		ds_treinamento_w,
		nr_seq_classificacao_w,
		nr_seq_plataforma_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		select	count(*)
		into STRICT	qt_existe_treinamento_w
		from	qms_treinamento x
		where	x.cd_pessoa_fisica = cd_pessoa_fisica_p
		and	x.ds_treinamento = ds_treinamento_w
		and	x.nr_seq_documento = nr_seq_documento_w
		and	x.nr_seq_classificacao = nr_seq_classificacao_w
		and	coalesce(x.ie_situacao, 'A') = 'A';

		select  count(*)
		into STRICT	qt_treinamento_reingresso_w
		from    qms_treinamento
		where   nr_seq_documento = nr_seq_documento_w
		and     cd_pessoa_fisica = cd_pessoa_fisica_p
		and     (dt_confirmacao IS NOT NULL AND dt_confirmacao::text <> '')
		and     trunc(clock_timestamp()) between trunc(dt_confirmacao) and add_months(trunc(dt_confirmacao), 12)
		and	coalesce(ie_situacao, 'A') = 'A';

		select 	count(*)
		into STRICT	qt_liberado_w
		from    qms_treinamento a,
			qua_documento b,
			qua_doc_revisao c
		where   a.nr_seq_documento = b.nr_sequencia
		and     c.nr_seq_doc = b.nr_sequencia
		and     (a.DT_CONFIRMACAO IS NOT NULL AND a.DT_CONFIRMACAO::text <> '')
		and     a.nr_seq_documento = nr_seq_documento_w
		and	coalesce(a.ie_situacao, 'A') = 'A'
		and     not exists (SELECT 1 from qms_treinamento x where x.nr_seq_documento = b.nr_sequencia and x.cd_pessoa_fisica = a.cd_pessoa_fisica and coalesce(x.dt_confirmacao::text, '') = '');

		if	((((qt_existe_treinamento_w = 0) or (ie_nova_revisao_p = 'S')) or (qt_treinamento_reingresso_w > 0))
			and ((qt_existe_treinamento_w = 0 ) or ( qt_existe_treinamento_w > 0 and qt_liberado_w > 0))) then

			ie_reingresso_w	:= 'N';

			select	max(dt_confirmacao)
			into STRICT	dt_confirmacao_w
			from    qms_treinamento
			where   nr_seq_documento = nr_seq_documento_w
			and     cd_pessoa_fisica = cd_pessoa_fisica_p
			and     (dt_confirmacao IS NOT NULL AND dt_confirmacao::text <> '')
			and     trunc(clock_timestamp()) between trunc(dt_confirmacao) and add_months(trunc(dt_confirmacao), 12)
			and	coalesce(ie_situacao, 'A') = 'A';

			if (qt_treinamento_reingresso_w >= 1) and (coalesce(ie_nova_revisao_p,'N') = 'N') then

				--N/A. Nao e necessario re-treinamento conforme procedimento EMR-P-3312115343. Data da conclusao do treinamento: 
				select  obter_desc_expressao(890495) || to_char(dt_confirmacao_w,'dd-MON-yyyy'),
					'S'
				into STRICT	ds_mensagem_reingresso_w,
					ie_reingresso_w
				;

				select	max(nr_sequencia)
				into STRICT	nr_seq_mot_nao_aplic_w
				from	tre_motivo_nao_aplicavel
				where	lower(DS_MOTIVO) like lower('%Retreinamento%');

			elsif (ie_nova_revisao_p = 'S') then
				--Nova revisao do documento. Treinamento necessario
				select  obter_desc_expressao(890546)
				into STRICT	ds_mensagem_reingresso_w
				;
			end if;
			
			select	coalesce(max(dt_admissao_hosp), clock_timestamp()) dt_admissao_hosp
			into STRICT	dt_admissao_hosp_w
			from	pessoa_fisica
			where	cd_pessoa_fisica = cd_pessoa_fisica_p;

			insert into qms_treinamento(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				cd_pessoa_fisica,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				ds_treinamento,
				nr_seq_documento,
				nr_seq_classificacao,
				ie_necessario,
				cd_responsavel,
				ie_neces_eficacia,
				dt_liberacao,
				nr_seq_plataforma,
				cd_gerente_pessoa,
				dt_confirmacao,
				ds_motivo,
				ie_analise_eficacia,
				nr_seq_mot_nao_aplic)
			values (nextval('qms_treinamento_seq'),
				dt_admissao_hosp_w,
				nm_usuario_p,
				cd_pessoa_fisica_p,
				dt_admissao_hosp_w,
				nm_usuario_p,
				ds_treinamento_w,
				nr_seq_documento_w,
				nr_seq_classificacao_w,
				CASE WHEN ie_reingresso_w='S' THEN  'N'  ELSE 'S' END ,
				cd_responsavel_p,
				'S',
				dt_admissao_hosp_w,
				nr_seq_plataforma_w,
				cd_gerente_p,
				case when(qt_treinamento_reingresso_w >= 1 and coalesce(ie_nova_revisao_p,'N') = 'N') then clock_timestamp() else null end,
				CASE WHEN ie_analise_eficacia_p='S' THEN  ds_analise_eficacia_w  ELSE ds_mensagem_reingresso_w END ,
				CASE WHEN ie_analise_eficacia_p='S' THEN  'S'  ELSE 'N' END ,
				case when qt_treinamento_reingresso_w >= 1 then nr_seq_mot_nao_aplic_w else null end);
		end if;		
		commit;
		end;
	end loop;
	close C01;
	end;
end if;

if (cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '' AND cd_responsavel_p IS NOT NULL AND cd_responsavel_p::text <> '') then
	begin
		open C02;
		loop
		fetch C02 into
		nr_seq_treinamento_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
			update	qms_treinamento --Adiciona o responsavel informado para todos os treinamentos da pessoa fisica que nao contem o responsavel preenchido
			set 	cd_responsavel = cd_responsavel_p,
					dt_atualizacao = clock_timestamp()
			where	nr_sequencia =  nr_seq_treinamento_w;
		end;
		end loop;
		close C02;
	end;
end if;

if (coalesce(cd_pessoa_fisica_p::text, '') = '' and coalesce(cd_responsavel_p::text, '') = '' and (cd_treinamento_cargo_p IS NOT NULL AND cd_treinamento_cargo_p::text <> '') and (cd_cargo_p IS NOT NULL AND cd_cargo_p::text <> '')) then
	begin
		open C03;
		loop
		fetch C03 into
		cd_pessoa_fisica_w,
		dt_admissao_hosp_w;
		EXIT WHEN NOT FOUND; /* apply on C03 */
		begin
			begin
				select	*
				into STRICT	cd_gerente_w,
					cd_responsavel_w
				from (
						SELECT	cd_gerente_pessoa,
							cd_responsavel
						from	qms_treinamento
						where	cd_pessoa_fisica = cd_pessoa_fisica_w
						and	(cd_responsavel IS NOT NULL AND cd_responsavel::text <> '')
						and	coalesce(ie_situacao, 'A') = 'A'
						order by dt_atualizacao desc
					) alias2 LIMIT 1;
			exception
			when others then
				cd_gerente_w := null;
				cd_responsavel_w := null;
			end;
			
			if (cd_responsavel_w IS NOT NULL AND cd_responsavel_w::text <> '') then
				select	a.nr_seq_documento,
						a.ds_treinamento,
						a.nr_seq_classificacao,
						a.nr_seq_plataforma
				into STRICT 	nr_seq_documento_w,
						ds_treinamento_w,
						nr_seq_classificacao_w,
						nr_seq_plataforma_w
				from	qms_treinamento_cargo a
				where	a.nr_sequencia = cd_treinamento_cargo_p;
			
				insert into qms_treinamento(
					nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					cd_pessoa_fisica,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					ds_treinamento,
					nr_seq_documento,
					nr_seq_classificacao,
					ie_necessario,
					cd_responsavel,
					ie_neces_eficacia,
					dt_liberacao,
					nr_seq_plataforma,
					cd_gerente_pessoa,
					dt_confirmacao)
				values (nextval('qms_treinamento_seq'),
					coalesce(dt_admissao_hosp_w, clock_timestamp()),
					nm_usuario_p,
					cd_pessoa_fisica_w,
					coalesce(dt_admissao_hosp_w, clock_timestamp()),
					nm_usuario_p,
					ds_treinamento_w,
					nr_seq_documento_w,
					nr_seq_classificacao_w,
					'S',
					cd_responsavel_w,
					'S',
					coalesce(dt_admissao_hosp_w, clock_timestamp()),
					nr_seq_plataforma_w,
					cd_gerente_w,
					null);
			end if;
		end;
		end loop;
		close C03;
	end;
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_necessidade_treinamento ( cd_pessoa_fisica_p bigint, cd_responsavel_p bigint, cd_gerente_p bigint, cd_cargo_p bigint, ie_nova_revisao_p text default 'N', ie_analise_eficacia_p text default 'N', cd_pessoa_eficacia_p text default 'N', nm_usuario_p text DEFAULT NULL, cd_treinamento_cargo_p bigint default null) FROM PUBLIC;

