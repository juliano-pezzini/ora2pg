-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_alteracao_solucao_prescr ( cd_estabelecimento_p bigint, nr_atendimento_p bigint, ie_tipo_solucao_p bigint, nr_prescricao_p bigint, nr_seq_solucao_p bigint, ie_alteracao_p bigint, dt_alteracao_p timestamp, ie_forma_infusao_p text, nr_seq_dispositivo_p bigint, ie_tipo_dosagem_p text, qt_vol_fase_p bigint, qt_vel_infusao_p bigint, qt_vol_infundido_p bigint, qt_vol_desprezado_p bigint, qt_vol_parcial_p bigint, nr_seq_motivo_p bigint, ds_observacao_p text, nm_usuario_p text, nr_etapa_evento_p bigint, dt_horario_p timestamp, ie_bomba_infusao_p text, ie_tipo_analgesia_p text default null, ie_pca_modo_prog_p text default null, qt_vol_infusao_pca_p bigint default null, ie_um_fluxo_pca_p text default null, qt_bolus_pca_p bigint default null, ie_um_bolus_pca_p text default null, qt_intervalo_bloqueio_p bigint default null, qt_dose_inicial_pca_p bigint default null, ie_um_dose_inicio_pca_p text default null, qt_limite_quatro_hora_p bigint default null, ie_um_limite_pca_p text default null, qt_limite_uma_hora_p bigint default null, ie_um_limite_hora_pca_p text default null, ie_suspender_todas_etapas_p text default null, qt_dose_terapeutica_p bigint default null, nr_unid_terapeutica_p bigint default null, nr_seq_reserva_p bigint default null, nr_seq_item_reserva_p bigint default null, nr_seq_prod_reserva_p bigint default null, qt_tempo_infusao_p bigint default null, nr_seq_processo_sol_p bigint default null, nr_seq_assinatura_p bigint default null, qt_min_pausa_p bigint default null, ds_justificativa_p text default null, ie_palm_p text default null, nr_seq_motivo_adm_p bigint default null, ds_msg_p INOUT text DEFAULT NULL, nr_seq_sangue_p text default null, nm_usuario_conf_p text default null, nr_bolsa_p text default null, ie_trocar_frasco_reversao_p text default null, qt_dose_nais_p bigint default null, qt_unid_medida_nais_p text default null, adjust_infusion_rate_cpoe_p bigint default null, ie_sterile_preparation_p prescr_solucao_evento.ie_sterile_preparation%type default null, seq_bomba_infusao_p prescr_solucao_evento.nr_seq_bomba_event%type default null) AS $body$
DECLARE


dt_atualizacao_w				timestamp := clock_timestamp();
qt_vel_infusao_w				double precision;
nr_sequencia_w					bigint;
nr_seq_sol_evento_w     bigint;
nr_seq_item_w					bigint;
nr_seq_processo_w				bigint;
nr_seq_w						bigint;
nr_atendimento_w				bigint;
nr_etapa_w						bigint;
nr_etapa_ww						bigint;
nr_seq_horario_w				bigint;
cont_w							bigint;
qt_reg_w						bigint;
qt_npt_w						bigint;
nr_seq_proc_interno_w			bigint;
ie_status_ant_w					varchar(3);
ie_status_npt_w					varchar(3);
ie_forma_cobr_solucao_w			varchar(3);
VarGerarSoPrimeiraEtapa_w 		varchar(3);
VarConsisteDataEvento_w			varchar(3);
ie_permite_troca_val_w			varchar(3);
ie_consiste_npt_em_andamento_w	varchar(3);
dt_validade_prescr_w			timestamp;
ie_atualiza_status_proc_w 		varchar(3);
ie_status_transfusao_w			varchar(1);
ie_permite_nova_sol_w			varchar(3);
dt_evento_w						timestamp;
ie_troca_frasco_w				varchar(1);
nr_seq_map_w					bigint;
ie_lancar_cta_sangue_w			varchar(1);
ie_lancar_cta_sne_w				varchar(1);
ds_observacao_w					varchar(2000);
ie_lancar_cta_solucao_w			varchar(1);
cd_setor_atendimento_w			integer;
nr_seq_exame_w					bigint;
cd_procedimento_w				bigint;
ie_origem_proced_w				bigint;
nr_etapa_atual_w				bigint;
cd_medico_exec_proc_w			varchar(10);
ie_lado_w						varchar(1);
qt_procedimento_w				double precision;
nr_etapa_atual_sol_w			smallint;
ie_acm_sn_w						varchar(1);
ie_bomba_infusao_w				varchar(1);
ie_dispara_regra_aut_w			varchar(1);
Qt_horario_pendente_W			bigint;
ie_exibe_hoarios_w				varchar(1);
ie_utiliza_servico_nut_w		varchar(1);
nr_Seq_servico_sne_w			bigint;
nr_seq_evento_ant_w				bigint;
ie_alteracao_ant_w				prescr_solucao_evento.ie_alteracao%type;
nr_etapas_solucao_w				varchar(255);
nr_etapas_adep_w				bigint;
ds_erro_w						varchar(255) := '';
ie_status_atual_w				varchar(15);
qt_vol_infundido_w				double precision;
qt_vol_desprezado_w				double precision;
nr_Seq_Producao_w				bigint;
qt_total_infundido_w			double precision;
nr_seq_transfusao_w				bigint;
qt_reserva_pend_w				bigint;
nr_seq_lote_w					bigint;
ie_tipo_data_vigencia_w			varchar(1);
cd_setor_param_w				integer;
cd_setor_transf_w				integer;
dt_vigencia_transf_w			timestamp;
ie_cobra_transf_finalizar_w 	varchar(1);
dt_checagem_adep_w				timestamp;
ie_consiste_hor_pend_w			varchar(1);
dt_horario_w					timestamp;
qt_etapas_pendentes_w			bigint;
VarConsisteEtapasPendentes_w 	varchar(2);
ie_gerar_transf_iniciar_w	 	varchar(1);
ie_evento_troca_frasco_w 		varchar(1);
nr_etapa_pendencia_w			bigint;
ds_item_w						varchar(2000);
nr_prescricao_ww				bigint;
nr_seq_horario_ww				prescr_proc_hor.nr_sequencia%type;
qt_dose_ww						double precision;
ds_unidade_medida_w				varchar(50);
ie_via_aplicacao_w				varchar(50);
cd_evolucao_w					bigint;
nr_seq_solucao_w				bigint;
qt_w							bigint;
nr_seq_evento_w					bigint;
nr_seq_sol_evento_ww     bigint;


ie_tipo_item_cpoe_w				varchar(5);
ie_tipo_dieta_cpoe_w			cpoe_dieta.ie_tipo_dieta%type;
nr_seq_item_cpoe_w				cpoe_material.nr_sequencia%type;

ie_setor_conta_w				varchar(1);
cd_setor_prescricao_w			prescr_medica.cd_setor_atendimento%type := 0;
qt_mat_sem_baixa_w				integer;
ie_somente_com_baixa_w			varchar(1);
ie_impedir_w					varchar(1);
cd_material_w					prescr_material.cd_material%type;
cd_motivo_baixa_w				prescr_material.cd_motivo_baixa%type;
dt_atend_lote_w					ap_lote.dt_atend_farmacia%type;
ie_tipo_Setor_Gerar_Conta_w		varchar(1) := Obter_Valor_Param_Usuario(450,309,Obter_Perfil_Ativo,Wheb_Usuario_Pck.get_nm_usuario,Wheb_Usuario_Pck.get_cd_estabelecimento);
ie_trans_existente_w			varchar(1);
ie_solucao_especial_w			varchar(1);
nr_sequencia_lote_w				prescr_solucao_evento.nr_sequencia%type;
nr_seq_evt_aux_w				prescr_solucao_evento.nr_sequencia%type;
ie_gera_lote_sol_esp_w			varchar(1);
ie_troca_frasco_ult_ev_w		varchar(1)	:= 'N';
ie_troca_w						varchar(20);
cd_intervalo_sol_w				prescr_solucao.cd_intervalo%type;
ie_consiste_357_w				varchar(1) := 'S';
vl_param_675_w					intervalo_prescricao.cd_intervalo%type;
dt_entrega_setor_w				timestamp;
dt_recebimento_setor_w			ap_lote.dt_recebimento_setor%type;
dt_suspensao_prescr_w			timestamp;
ie_etapa_pend_w					varchar(1);
ie_etapa_susp_w					varchar(1);
nr_seq_motivo_w					adep_motivo_interrupcao.nr_sequencia%type;
ie_interrup_def_w				varchar(1);
ie_lancar_cta_npt_w				varchar(1);
ie_trocou_frasco_w				varchar(1);
ie_status_hm_w					varchar(5);
ie_terminou_etapa_w				varchar(1);
ie_existe_etapa_anterior_w		varchar(1);
ie_sn_w							varchar(1);
ie_acm_w						varchar(1);
nr_seq_proc_w					bigint;
cd_classe_mat_w					rep_intervencao_medic.cd_classe_material%type;
cd_grupo_mat_w					rep_intervencao_medic.cd_grupo_material%type;
cd_sub_grupo_mat_w				rep_intervencao_medic.cd_subgrupo_material%type;
ds_mensagem_w					rep_intervencao_medic.ds_mensagem%type;
qt_minutos_apraz_w				rep_intervencao_medic.qt_minutos_apraz%type;
ie_interv_vigente_w				varchar(1);
nr_prescr_interv_w				pe_prescricao.nr_prescricao%type;
ie_acm_interv_w					varchar(1);
cd_intervalo_interv_w			pe_prescr_proc.cd_intervalo%type;
qt_interv_w						pe_prescr_proc.qt_intervencao%type;
nr_seq_interv_w					pe_prescr_proc.nr_sequencia%type;
ds_msg_w						varchar(255);
ie_inconsistencia_w				varchar(20);
ds_inconsistentes_w				varchar(255);
ie_gera_sem_certificado_w		varchar(1);
ie_alteracao_sol_w				prescr_solucao_evento.ie_alteracao%type;
ie_status_bolsa_w               prescr_proc_bol_aux.ie_situacao%type;
nr_bolsa_w                      prescr_proc_bol_aux.nr_bolsa%type;
ie_epimed_w						varchar(1);
nr_seq_cirur_agente_ocor_w		cirurgia_agente_anest_ocor.nr_sequencia%type;
nr_seq_cirur_agente_w			cirurgia_agente_anestesico.nr_sequencia%type;
ds_log_npt_w					varchar(2000);
nr_seq_reserva_w				san_reserva_prod.nr_seq_reserva%type;
qt_vol_parcial_w				double precision;
ie_grava_log_rastr_w			varchar(1);
ie_gerar_evolucao_emar_w 		varchar(1);
ie_param716_w					varchar(1);
ie_suspensao_w					varchar(1);
nr_seq_mat_compl_w	varchar(10);
nr_seq_horario_p prescr_proc_hor.nr_sequencia%type;

nr_seq_integr_alt_w   prescr_mat_alteracao.nr_sequencia%type;
nr_seq_cpoe_w               cpoe_material.nr_sequencia%type;
regra_alteracao_is_filler_w   CPOE_REGRA_ATOR.IE_MEDICATION_ORDER_TYPE%type;

c00 CURSOR FOR
SELECT	dt_horario
from	prescr_mat_hor
where	Obter_se_horario_liberado(dt_lib_horario, dt_horario) = 'S'
and		nr_seq_solucao_p in (nr_seq_solucao, nr_seq_material)
and		coalesce(dt_suspensao::text, '') = ''
and		nr_etapa_sol = nr_etapa_ww
and		nr_prescricao = nr_prescricao_p;

c01 CURSOR FOR
SELECT	nr_sequencia,
		nr_seq_material,
		dt_horario
from	prescr_mat_hor
where	Obter_se_horario_liberado(dt_lib_horario, dt_horario) = 'S'
and		coalesce(dt_suspensao::text, '') = ''
and		coalesce(ie_horario_especial, 'N') <> 'S'
and		nr_etapa_sol = nr_etapa_atual_w
and		nr_seq_solucao = nr_seq_solucao_p
and		nr_prescricao = nr_prescricao_p;

c02 CURSOR FOR
SELECT	nr_sequencia
from	prescr_material
where	coalesce(dt_suspensao::text, '') = ''
and		nr_sequencia_solucao = nr_seq_solucao_p
and		nr_prescricao = nr_prescricao_p;

c03 CURSOR FOR
SELECT	c.nr_sequencia nr_seq_horario, /* materiais NPT */
		b.nr_sequencia
from	prescr_mat_hor c,
		prescr_material b,
		material d,
		prescr_medica a
where	c.nr_prescricao = b.nr_prescricao
and		c.nr_seq_material = b.nr_sequencia
and		b.nr_prescricao = a.nr_prescricao
and		d.cd_material = b.cd_material
and		d.cd_material = c.cd_material
and		b.ie_agrupador	= 11
and		coalesce(b.dt_suspensao::text, '') = ''
and		Obter_se_horario_liberado(c.dt_lib_horario, c.dt_horario) = 'S'
and		a.nr_atendimento = nr_atendimento_p
and		a.nr_prescricao	= nr_prescricao_p
and		coalesce(d.ie_cobra_paciente, 'S') = 'S'
order by 1;

c04 CURSOR FOR
SELECT	a.cd_material,
	coalesce(CASE WHEN a.cd_motivo_baixa=0 THEN  b.cd_motivo_baixa  ELSE a.cd_motivo_baixa END ,0),
	a.nr_seq_lote
from	prescr_mat_hor a,
	prescr_material b
where	a.nr_prescricao = b.nr_prescricao
and	b.nr_sequencia = a.nr_seq_material
and	a.nr_prescricao = nr_prescricao_p
and	a.nr_seq_solucao = nr_seq_solucao_p
and	coalesce(a.cd_motivo_baixa,0) = 0
and 	coalesce(b.cd_motivo_baixa,0) = 0
and	a.ie_agrupador = 4
and	a.nr_etapa_sol = nr_etapa_atual_sol_w
and	ie_somente_com_baixa_w <> 'N'
and		ie_consiste_357_w = 'S'
and	coalesce(a.ie_horario_especial, 'N') <> 'S';

c05 CURSOR FOR
SELECT	c.nr_sequencia nr_seq_horario, /* materiais SNE */
		b.nr_sequencia nr_seq_item
from		prescr_mat_hor c,
		prescr_material b,
		prescr_medica a
where	c.nr_prescricao = b.nr_prescricao
and		c.nr_seq_material = b.nr_sequencia
and		b.nr_prescricao = a.nr_prescricao
and		b.ie_agrupador	= 8
and		coalesce(b.dt_suspensao::text, '') = ''
and		Obter_se_horario_liberado(c.dt_lib_horario, c.dt_horario) = 'S'
and		a.nr_atendimento = nr_atendimento_p
and (c.dt_horario	= dt_horario_p
		 or c.nr_etapa_sol = nr_etapa_atual_sol_w)
and		a.nr_prescricao	= nr_prescricao_p
order by 1;

c06 CURSOR FOR
SELECT	cd_material,
		nr_sequencia
from	prescr_material
where	coalesce(dt_suspensao::text, '') = ''
and		nr_sequencia_solucao = nr_seq_solucao_p
and		nr_prescricao = nr_prescricao_p
and		coalesce(nr_seq_kit::text, '') = ''
and		ie_agrupador = 4;

c07 CURSOR FOR
SELECT	cd_material
from	prescr_material
where	coalesce(dt_suspensao::text, '') = ''
and		nr_sequencia_solucao = nr_seq_solucao_p
and		nr_prescricao = nr_prescricao_p;

C08 CURSOR FOR
		SELECT	nr_seq_lote
		from	prescr_mat_hor
		where	nr_seq_solucao	= nr_seq_solucao_p
		and		nr_prescricao	= nr_prescricao_p;
BEGIN

ie_grava_log_rastr_w := obter_rastreabilidade_adep(nr_prescricao_p, 'ADM');

select	coalesce(max(nr_sequencia),0)
into STRICT	nr_seq_evento_ant_w
from	prescr_solucao_evento
where	nr_prescricao = nr_prescricao_p
and	nr_seq_solucao = nr_seq_solucao_p;

ds_observacao_w	:= substr(ds_observacao_p,1,2000);

if (ie_grava_log_rastr_w = 'S') then
		CALL adep_gerar_log_rastr(substr('GERAR_ALTERACAO_SOLUCAO_PRESCR PARAMETROS IN' || chr(10) ||
			'cd_estabelecimento_p= ' || cd_estabelecimento_p || chr(10) ||
			'nr_atendimento_p= ' || nr_atendimento_p || chr(10) ||
			'ie_tipo_solucao_p= ' || ie_tipo_solucao_p || chr(10) ||
			'nr_prescricao_p= ' || nr_prescricao_p || chr(10) ||
			'nr_seq_solucao_p= ' || nr_seq_solucao_p || chr(10) ||
			'ie_alteracao_p= ' || ie_alteracao_p || chr(10) ||
			'dt_alteracao_p= ' || to_char(dt_alteracao_p, 'dd/mm/yyyy hh24:mi:ss') || chr(10) ||
			'ie_forma_infusao_p= ' || ie_forma_infusao_p || chr(10) ||
			'nr_seq_dispositivo_p= ' || nr_seq_dispositivo_p || chr(10) ||
			'ie_tipo_dosagem_p= ' || ie_tipo_dosagem_p || chr(10) ||
			'qt_vol_fase_p= ' || qt_vol_fase_p || chr(10) ||
			'qt_vel_infusao_p= ' || qt_vel_infusao_p || chr(10) ||
			'qt_vol_infundido_p= ' || qt_vol_infundido_p || chr(10) ||
			'qt_vol_desprezado_p= ' || qt_vol_desprezado_p || chr(10) ||
			'qt_vol_parcial_p= ' || qt_vol_parcial_p || chr(10) ||
			'nr_seq_motivo_p= ' || nr_seq_motivo_p || chr(10) ||
			'ds_observacao_p= ' || ds_observacao_p || chr(10) ||
			'nm_usuario_p= ' || nm_usuario_p || chr(10) ||
			'nr_etapa_evento_p= ' || nr_etapa_evento_p || chr(10) ||
			'dt_horario_p= ' || to_char(dt_horario_p, 'dd/mm/yyyy hh24:mi:ss') || chr(10) ||
			'ie_bomba_infusao_p= ' || ie_bomba_infusao_p || chr(10) ||
			'ie_tipo_analgesia_p= ' || ie_tipo_analgesia_p || chr(10) ||
			'ie_pca_modo_prog_p= ' || ie_pca_modo_prog_p || chr(10) ||
			'qt_vol_infusao_pca_p= ' || qt_vol_infusao_pca_p || chr(10) ||
			'ie_um_fluxo_pca_p= ' || ie_um_fluxo_pca_p || chr(10) ||
			'qt_bolus_pca_p= ' || qt_bolus_pca_p || chr(10) ||
			'ie_um_bolus_pca_p= ' || ie_um_bolus_pca_p || chr(10) ||
			'qt_intervalo_bloqueio_p= ' || qt_intervalo_bloqueio_p || chr(10) ||
			'qt_dose_inicial_pca_p= ' || qt_dose_inicial_pca_p || chr(10) ||
			'ie_um_dose_inicio_pca_p= ' || ie_um_dose_inicio_pca_p || chr(10) ||
			'qt_limite_quatro_hora_p= ' || qt_limite_quatro_hora_p || chr(10) ||
			'ie_um_limite_pca_p= ' || ie_um_limite_pca_p || chr(10) ||
			'qt_limite_uma_hora_p= ' || qt_limite_uma_hora_p || chr(10) ||
			'ie_um_limite_hora_pca_p= ' || ie_um_limite_hora_pca_p || chr(10) ||
			'ie_suspender_todas_etapas_p= ' || ie_suspender_todas_etapas_p || chr(10) ||
			'qt_dose_terapeutica_p= ' || qt_dose_terapeutica_p || chr(10) ||
			'nr_unid_terapeutica_p= ' || nr_unid_terapeutica_p || chr(10) ||
			'nr_seq_reserva_p= ' || nr_seq_reserva_p || chr(10) ||
			'nr_seq_item_reserva_p= ' || nr_seq_item_reserva_p || chr(10) ||
			'nr_seq_prod_reserva_p= ' || nr_seq_prod_reserva_p || chr(10) ||
			'qt_tempo_infusao_p= ' || qt_tempo_infusao_p || chr(10) ||
			'nr_seq_processo_sol_p= ' || nr_seq_processo_sol_p || chr(10) ||
			'nr_seq_assinatura_p= ' || nr_seq_assinatura_p || chr(10) ||
			'qt_min_pausa_p= ' || qt_min_pausa_p || chr(10) ||
			'ds_justificativa_p= ' || ds_justificativa_p || chr(10) ||
			'ie_palm_p= ' || ie_palm_p || chr(10) ||
			'nr_seq_motivo_adm_p= ' || nr_seq_motivo_adm_p || chr(10) ||
			'nr_seq_sangue_p= ' || nr_seq_sangue_p || chr(10) ||
			'nm_usuario_conf_p= ' || nm_usuario_conf_p || chr(10) ||
			'nr_bolsa_p= ' || nr_bolsa_p || chr(10) ||
			'ie_trocar_frasco_reversao_p= ' || ie_trocar_frasco_reversao_p || chr(10) ||
			'nr_seq_evento_ant_w= ' || nr_seq_evento_ant_w,1,1500));
end if;



if (cd_estabelecimento_p IS NOT NULL AND cd_estabelecimento_p::text <> '') and (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') and (ie_tipo_solucao_p IS NOT NULL AND ie_tipo_solucao_p::text <> '') and (coalesce(nr_prescricao_p,0)  > 0) and (coalesce(nr_seq_solucao_p,0) > 0) and (ie_alteracao_p IS NOT NULL AND ie_alteracao_p::text <> '') and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') then

	begin
	CALL Wheb_assist_pck.set_informacoes_usuario(cd_estabelecimento_p, obter_perfil_ativo, nm_usuario_p);

	VarGerarSoPrimeiraEtapa_w		:= Wheb_assist_pck.obterParametroFuncao(924,924);

	ie_permite_troca_val_w			:= Wheb_assist_pck.obterParametroFuncao(1113,23);
	ie_atualiza_status_proc_w		:= Wheb_assist_pck.obterParametroFuncao(1113,133);
	ie_lancar_cta_sangue_w			:= Wheb_assist_pck.obterParametroFuncao(1113,164);
	ie_lancar_cta_solucao_w			:= Wheb_assist_pck.obterParametroFuncao(1113,226);
	ie_exibe_hoarios_w				:= Wheb_assist_pck.obterParametroFuncao(1113,241);
	ie_utiliza_servico_nut_w		:= Wheb_assist_pck.obterParametroFuncao(1113,309);
	ie_dispara_regra_aut_w			:= Wheb_assist_pck.obterParametroFuncao(1113,321);
	ie_permite_nova_sol_w			:= Wheb_assist_pck.obterParametroFuncao(1113,361);
	VarConsisteEtapasPendentes_w	:= Wheb_assist_pck.obterParametroFuncao(1113,544);
	ie_consiste_hor_pend_w			:= Wheb_assist_pck.obterParametroFuncao(1113,551);
	VarConsisteDataEvento_w			:= Wheb_assist_pck.obterParametroFuncao(1113,564);
	ie_consiste_npt_em_andamento_w	:= Wheb_assist_pck.obterParametroFuncao(1113,627);
	ie_somente_com_baixa_w			:= Wheb_assist_pck.obterParametroFuncao(1113,357);
	ie_gera_lote_sol_esp_w			:= Wheb_assist_pck.obterParametroFuncao(1113,673);
	vl_param_675_w					:= Wheb_assist_pck.obterParametroFuncao(1113,675);
	ie_lancar_cta_npt_w				:= Wheb_assist_pck.obterParametroFuncao(1113,698);

	ie_lancar_cta_sne_w := Obter_param_Usuario(1113, 681, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, coalesce(wheb_usuario_pck.get_cd_estabelecimento, 1), ie_lancar_cta_sne_w);

	if (ie_grava_log_rastr_w = 'S') then
		CALL adep_gerar_log_rastr(substr('GERAR_ALTERACAO_SOLUCAO_PRESCR PARAMETROS FUNCOES' || chr(10) ||
			'VarGerarSoPrimeiraEtapa_w= ' || VarGerarSoPrimeiraEtapa_w || chr(10) ||
			'ie_permite_troca_val_w= ' || ie_permite_troca_val_w || chr(10) ||
			'ie_atualiza_status_proc_w= ' || ie_atualiza_status_proc_w || chr(10) ||
			'ie_lancar_cta_sangue_w= ' || ie_lancar_cta_sangue_w || chr(10) ||
			'ie_lancar_cta_solucao_w= ' || ie_lancar_cta_solucao_w || chr(10) ||
			'ie_exibe_hoarios_w= ' || ie_exibe_hoarios_w || chr(10) ||
			'ie_utiliza_servico_nut_w= ' || ie_utiliza_servico_nut_w || chr(10) ||
			'ie_dispara_regra_aut_w= ' || ie_dispara_regra_aut_w || chr(10) ||
			'ie_permite_nova_sol_w= ' || ie_permite_nova_sol_w || chr(10) ||
			'VarConsisteEtapasPendentes_w= ' || VarConsisteEtapasPendentes_w || chr(10) ||
			'ie_consiste_hor_pend_w= ' || ie_consiste_hor_pend_w || chr(10) ||
			'VarConsisteDataEvento_w= ' || VarConsisteDataEvento_w || chr(10) ||
			'ie_consiste_npt_em_andamento_w= ' || ie_consiste_npt_em_andamento_w || chr(10) ||
			'ie_somente_com_baixa_w= ' || ie_somente_com_baixa_w || chr(10) ||
			'ie_gera_lote_sol_esp_w= ' || ie_gera_lote_sol_esp_w || chr(10) ||
			'vl_param_675_w= ' || vl_param_675_w || chr(10) ||
			'ie_lancar_cta_npt_w= ' || ie_lancar_cta_npt_w || chr(10) ||
			'ie_lancar_cta_sne_w= ' || ie_lancar_cta_sne_w,1,1500));
	end if;

	if (coalesce(ie_palm_p,'N') = 'S') then

		if (ds_observacao_w IS NOT NULL AND ds_observacao_w::text <> '') then

			ds_observacao_w := substr(Wheb_mensagem_pck.get_Texto(305640, 'DS_OBSERVACAO_W='|| DS_OBSERVACAO_W),1,2000);
						/*Tipo de checagem: ADEP PDA - #@DS_OBSERVACAO_W#@*/

		else
			ds_observacao_w := Wheb_mensagem_pck.get_Texto(305644);	/*'Tipo de checagem: ADEP PDA';*/
		end if;
	end if;

	commit;

	if (ie_tipo_solucao_p = 1) then

		nr_etapa_ww := obter_etapa_atual(nr_prescricao_p, nr_seq_solucao_p);
	elsif (ie_tipo_solucao_p = 2) then

		nr_etapa_ww := obter_etapa_atual_sne(nr_prescricao_p, nr_seq_solucao_p);
	end if;


	if (ie_grava_log_rastr_w = 'S') then
		CALL adep_gerar_log_rastr(substr('GERAR_ALTERACAO_SOLUCAO_PRESCR PARAMETROS FUNCOES' || chr(10) ||
			'{'||chr(10)||
			'"nr_etapa_ww" : "'||nr_etapa_ww||'",'||chr(10)||
			'"nr_prescricao_p" : "'||nr_prescricao_p||'",'||chr(10)||
			'"nr_seq_solucao_p" : "'||nr_seq_solucao_p||'"}',1,1500));
	end if;

	open C00;
	loop
	fetch C00 into
		dt_horario_w;
	EXIT WHEN NOT FOUND; /* apply on C00 */
	end loop;
	close C00;

	select	max(dt_checagem_adep)
	into STRICT	dt_checagem_adep_w
	from	atendimento_paciente
	where	nr_atendimento = nr_atendimento_p;

	if (coalesce(dt_checagem_adep_w::text, '') = '') then

		update	atendimento_paciente
		set	dt_checagem_adep = clock_timestamp()
		where	nr_atendimento = nr_atendimento_p;
	end if;

	/* validar data evento */

	if (dt_alteracao_p IS NOT NULL AND dt_alteracao_p::text <> '') and (coalesce(ie_palm_p,'N') <> 'S') then

		begin
		dt_evento_w := dt_alteracao_p;
		end;
	else
		begin
		dt_evento_w := dt_atualizacao_w;
		end;
	end if;

	--Tratar o parametro [395] ADEP Swing.
	if 	((coalesce(ie_suspender_todas_etapas_p, 'N') =  'S') and (ie_tipo_solucao_p = 1)) then

		begin

		select (obter_etapas_adep_sol(1,nr_prescricao,nr_seq_solucao) + coalesce(nr_etapas_suspensa,0))
		into STRICT	nr_etapas_adep_w
		from    prescr_solucao
		where   nr_seq_solucao = nr_seq_solucao_p
		and		nr_prescricao  = nr_prescricao_p;

		select	max(nr_seq_motivo)
		into STRICT	nr_seq_motivo_w
		from 	prescr_solucao_evento
		where 	nr_sequencia = (SELECT obter_ultimo_evento_pend_sol(1, nr_prescricao, nr_seq_solucao)
								from prescr_solucao
								where nr_seq_solucao = 1
								and nr_prescricao  = nr_prescricao_p);

		if (coalesce(obter_se_motivo_troca_frasco(nr_seq_motivo_w),'N') = 'S') then

			nr_etapas_adep_w := nr_etapas_adep_w - 1;
		end if;

		nr_etapas_solucao_w := substr(obter_etapas_solucao(nr_prescricao_p, nr_seq_solucao_p, nr_etapas_adep_w),1,255);

		ds_erro_w := suspender_etapa_solucao(ie_tipo_solucao_p, nr_prescricao_p, nr_seq_solucao_p, nr_seq_motivo_p, 12, ds_observacao_w, nm_usuario_p, null, null, nr_etapas_solucao_w, ds_erro_w, 0, obter_perfil_ativo);

		end;
	end if;

	/* consistir data evento */

	if (ie_alteracao_p <> 6) and (VarConsisteDataEvento_w = 'S') then

		CALL consistir_data_evento_solucao(cd_estabelecimento_p, nr_atendimento_p, ie_tipo_solucao_p, nr_prescricao_p, nr_seq_solucao_p, ie_alteracao_p, dt_evento_w, dt_horario_p, nm_usuario_p);
	end if;

	/* consistir evento */

	CALL adep_consistir_evento_sol(ie_tipo_solucao_p, nr_prescricao_p, nr_seq_solucao_p, ie_alteracao_p, nr_seq_motivo_p, ie_palm_p);

	/* consistir trocas de frasco x etapas */

	if (nr_seq_motivo_p IS NOT NULL AND nr_seq_motivo_p::text <> '') and (ie_alteracao_p = 2) then

		begin
		select	coalesce(max(ie_troca_frasco),'N')
		into STRICT	ie_troca_frasco_w
		from	adep_motivo_interrupcao
		where	nr_sequencia = nr_seq_motivo_p;

		if (ie_troca_frasco_w = 'S')  then

			begin
			CALL consistir_solucao_adep(ie_tipo_solucao_p,nr_prescricao_p,nr_seq_solucao_p,nm_usuario_p);
			end;
		end if;
		end;
	end if;

	select	coalesce(max(nr_seq_lote),0)
	into STRICT	nr_seq_lote_w
	from	prescr_mat_hor
	where	nr_seq_solucao	= nr_seq_solucao_p
	and		nr_prescricao	= nr_prescricao_p;

	select	coalesce(max(ie_forma_cobr_solucao),'N')
	into STRICT	ie_forma_cobr_solucao_w
	from	PARAMETRO_MEDICO;

	/* gerar alteracao conforme tipo solucao */

	if (ie_tipo_solucao_p = 1) then
  --solucao
		begin
		-- Essa variavel nao deve ser alterada na rotina das solucoes.
		ie_status_ant_w	:= obter_status_solucao_prescr(1, nr_prescricao_p, nr_seq_solucao_p);
		nr_seq_item_cpoe_w := obter_nr_seq_cpoe_sol(nr_prescricao_p, nr_seq_solucao_p);

		/* obter dados solucao */

		qt_vel_infusao_w := coalesce(qt_vel_infusao_p,0);
		if (ie_alteracao_p = 1) and (ie_forma_infusao_p = 'V') and (qt_vel_infusao_w = 0) then

			begin
			select	coalesce(max(qt_dosagem),0)
			into STRICT	qt_vel_infusao_w
			from	prescr_solucao
			where	nr_prescricao = nr_prescricao_p
			and	nr_seq_solucao = nr_seq_solucao_p;
			end;
		end if;

		if (nr_etapa_evento_p IS NOT NULL AND nr_etapa_evento_p::text <> '') and (ie_alteracao_p in (12,1)) then

			nr_etapa_atual_sol_w := nr_etapa_evento_p;
		else
			nr_etapa_atual_sol_w := obter_etapa_atual(nr_prescricao_p, nr_seq_solucao_p);

			select	obter_se_acm_sn(ie_acm, ie_se_necessario)
			into STRICT	ie_acm_sn_w
			from	prescr_solucao
			where	nr_seq_solucao = nr_seq_solucao_p
			and		nr_prescricao = nr_prescricao_p;

			if (ie_status_ant_w = 'INT') and (ie_acm_sn_w = 'S') and (ie_alteracao_p = 4) then

				nr_etapa_atual_sol_w := nr_etapa_atual_sol_w - 1;
			end if;
		end if;

		if (ie_somente_com_baixa_w <> 'N') then


			select	max(cd_intervalo)
			into STRICT	cd_intervalo_sol_w
			from	prescr_solucao
			where	nr_prescricao 	= nr_prescricao_p
			and		nr_seq_solucao  = nr_seq_solucao_p;

			if (cd_intervalo_sol_w = vl_param_675_w) then

				ie_consiste_357_w	:= 'N';
			end if;

		end if;

		if (ie_alteracao_p = 1) then

			begin

			select	coalesce(min(nr_etapa_sol),1)
			into STRICT	nr_etapa_atual_sol_w
			from	prescr_mat_hor b
			where	Obter_se_horario_liberado(b.dt_lib_horario, b.dt_horario) = 'S'
			and		coalesce(b.ie_horario_especial,'N') = 'N'
			and		coalesce(b.dt_fim_horario::text, '') = ''
			and		coalesce(b.dt_inicio_horario::text, '') = ''
			and		coalesce(b.dt_suspensao::text, '') = ''
			and		b.nr_seq_solucao = nr_seq_solucao_p
			and		b.nr_prescricao = nr_prescricao_p;

			select	min(coalesce(a.dt_suspensao, b.dt_suspensao))
			into STRICT	dt_suspensao_prescr_w
			from	prescr_medica a,
					prescr_mat_hor b
			where	Obter_se_horario_liberado(b.dt_lib_horario, b.dt_horario) = 'S'
			and		coalesce(b.ie_horario_especial,'N') = 'N'
			and		coalesce(b.dt_fim_horario::text, '') = ''
			and		coalesce(b.dt_inicio_horario::text, '') = ''
			and 	a.nr_prescricao = b.nr_prescricao
			and		b.nr_seq_solucao = nr_seq_solucao_p
			and		b.nr_prescricao = nr_prescricao_p
			and		b.nr_sequencia = ( 	SELECT 	max(c.nr_sequencia)
										from	prescr_mat_hor c
										where	c.nr_prescricao = nr_prescricao_p
										and		c.nr_seq_solucao = nr_seq_solucao_p
										and		c.nr_etapa_sol = nr_etapa_atual_sol_w);

			if (dt_suspensao_prescr_w IS NOT NULL AND dt_suspensao_prescr_w::text <> '') then

				CALL Wheb_mensagem_pck.exibir_mensagem_abort(479011);
			end if;

			if (ie_palm_p = 'S') then


				select	coalesce(max('S'), 'N')
				into STRICT	ie_existe_etapa_anterior_w
				from	prescr_mat_hor
				where	nr_prescricao = nr_prescricao_p
				and		nr_seq_solucao = nr_seq_solucao_p
				and		dt_horario < dt_horario_p
				and		coalesce(coalesce(dt_fim_horario, dt_suspensao, dt_inicio_horario)::text, '') = ''
				and		coalesce(ie_horario_especial, 'N') <> 'S'
				and		ie_agrupador = 4;

				if (ie_existe_etapa_anterior_w = 'S') then

					CALL wheb_mensagem_pck.exibir_mensagem_abort(1047492);
				end if;

			end if;

			if (ie_grava_log_rastr_w = 'S') then
				CALL adep_gerar_log_rastr(substr('GERAR_ALTERACAO_SOLUCAO_PRESCR C04' || chr(10) ||
					'{'||chr(10)||
					'"ie_consiste_357_w" : "'||ie_consiste_357_w||'",'||chr(10)||
					'"ie_somente_com_baixa_w" : "'||ie_somente_com_baixa_w||'",'||chr(10)||
					'"nr_etapa_atual_sol_w" : "'||nr_etapa_atual_sol_w||'",'||chr(10)||
					'"nr_prescricao_p" : "'||nr_prescricao_p||'",'||chr(10)||
					'"nr_seq_solucao_p" : "'||nr_seq_solucao_p||'"}',1,1500));
			end if;

			--Tratar parametro 357
			open C04;
			loop
			fetch C04 into
				cd_material_w,
				cd_motivo_baixa_w,
				nr_seq_lote_w;
			EXIT WHEN NOT FOUND; /* apply on C04 */
				begin

				if (cd_motivo_baixa_w = 0 or ie_somente_com_baixa_w <> 'N') then

					ie_impedir_w	:= Obter_Se_impede_adm(cd_material_w);
					if (ie_impedir_w = 'S') then

						if (ie_somente_com_baixa_w = 'S')  AND (coalesce(cd_motivo_baixa_w, 0) = 0) THEN
							--so e possivel administrar uma medicacao apos o atendimento da mesma no atendimento da prescricao/lote! parametro [357]
							CALL wheb_mensagem_pck.exibir_mensagem_abort(173406);
						elsif (ie_somente_com_baixa_w = 'L') and (nr_seq_lote_w IS NOT NULL AND nr_seq_lote_w::text <> '') then

							select	max(dt_atend_farmacia)
							into STRICT	dt_atend_lote_w
							from	ap_lote
							where	nr_sequencia = nr_seq_lote_w;
							if (coalesce(dt_atend_lote_w::text, '') = '') then

								--so e possivel administrar uma medicacao apos o atendimento da mesma no atendimento da prescricao/lote! parametro [357]
								CALL wheb_mensagem_pck.exibir_mensagem_abort(173406);
							end if;
						elsif (ie_somente_com_baixa_w = 'E') and (nr_seq_lote_w IS NOT NULL AND nr_seq_lote_w::text <> '') then

							select	max(dt_entrega_setor)
							into STRICT	dt_entrega_setor_w
							from	ap_lote
							where	nr_sequencia = nr_seq_lote_w;
							if (coalesce(dt_entrega_setor_w::text, '') = '') then

								--so e possivel administrar uma medicacao apos a entrega da mesma no atendimento da prescricao/lote! parametro [357]
								CALL wheb_mensagem_pck.exibir_mensagem_abort(472055);
							end if;

						elsif (ie_somente_com_baixa_w = 'R') AND (nr_seq_lote_w IS NOT NULL AND nr_seq_lote_w::text <> '') THEN
							SELECT	MAX(dt_recebimento_setor)
							INTO STRICT	dt_recebimento_setor_w
							FROM	ap_lote
							WHERE	nr_sequencia = nr_seq_lote_w;
							IF (coalesce(dt_recebimento_setor_w::text, '') = '') THEN
								--Somente e possivel administrar uma medicacao, apos o recebimento da mesma no atendimento da prescricao/lote!
								CALL Wheb_mensagem_pck.Exibir_mensagem_abort(819419);
							END IF;
						end if;
					end if;
				end if;

				end;
			end loop;
			close C04;

			end;
		elsif (ie_alteracao_p = 3) then

			begin
			select	coalesce(max('S'),'N')
			into STRICT	ie_evento_troca_frasco_w
			from	prescr_solucao_evento a,
					prescr_mat_hor b
			where	a.nr_sequencia	= (	SELECT	max(x.nr_sequencia)
										from 	prescr_solucao_evento x
										where	obter_se_evento_troca_frasco(x.nr_sequencia) = 'S'
										and		x.ie_alteracao = 2
										and		coalesce(x.ie_evento_valido,'S') = 'S'
										and		x.nr_etapa_evento = b.nr_etapa_sol
										and		b.nr_seq_solucao = x.nr_seq_solucao
										and		b.nr_prescricao = x.nr_prescricao)
			and		a.nr_seq_solucao = b.nr_seq_solucao
			and		a.nr_prescricao = b.nr_prescricao
			and		Obter_se_horario_liberado(b.dt_lib_horario, b.dt_horario) = 'S'
			and		coalesce(b.ie_horario_especial,'N') = 'N'
			and		b.nr_etapa_sol = nr_etapa_atual_sol_w
			and		coalesce(b.dt_suspensao::text, '') = ''
			and		b.nr_seq_solucao = nr_seq_solucao_p
			and		b.nr_prescricao = nr_prescricao_p;

			if (ie_evento_troca_frasco_w = 'S') then


				select	coalesce(min(nr_etapa_sol),0)
				into STRICT	nr_etapa_atual_sol_w
				from	prescr_mat_hor b
				where	Obter_se_horario_liberado(b.dt_lib_horario, b.dt_horario) = 'S'
				and		coalesce(b.ie_horario_especial,'N') = 'N'
				and		coalesce(b.dt_fim_horario::text, '') = ''
				and		coalesce(b.dt_inicio_horario::text, '') = ''
				and		coalesce(b.dt_suspensao::text, '') = ''
				and		b.nr_etapa_sol > nr_etapa_atual_sol_w
				and		b.nr_seq_solucao = nr_seq_solucao_p
				and		b.nr_prescricao = nr_prescricao_p;

				if (nr_etapa_atual_sol_w = 0) then

					nr_etapa_atual_sol_w := obter_etapa_atual(nr_prescricao_p, nr_seq_solucao_p);
				end if;
			end if;

			if (coalesce(nr_etapa_atual_sol_w,0) > 0) then

				if (VarGerarSoPrimeiraEtapa_w = 'S') then

					CALL Gerar_Lote_Atend_Prescricao(nr_prescricao_p, nr_seq_solucao_p, 0, 'N', nm_usuario_p, 'GASR', nr_etapa_atual_sol_w);

					select	coalesce(max(nr_seq_lote),0)
					into STRICT	nr_seq_lote_w
					from	prescr_mat_hor
					where	nr_seq_solucao	= nr_seq_solucao_p
					and		nr_prescricao	= nr_prescricao_p;

				end if;
			end if;

			if (ie_grava_log_rastr_w = 'S') then
				CALL adep_gerar_log_rastr(substr('GERAR_ALTERACAO_SOLUCAO_PRESCR C03' || chr(10) ||
					'{'||chr(10)||
					'"ie_consiste_357_w" : "'||ie_consiste_357_w||'",'||chr(10)||
					'"ie_somente_com_baixa_w" : "'||ie_somente_com_baixa_w||'",'||chr(10)||
					'"nr_etapa_atual_sol_w" : "'||nr_etapa_atual_sol_w||'",'||chr(10)||
					'"nr_prescricao_p" : "'||nr_prescricao_p||'",'||chr(10)||
					'"nr_seq_solucao_p" : "'||nr_seq_solucao_p||'"}',1,1500));
			end if;

			--Tratar parametro 357
			open C04;
			loop
			fetch C04 into
				cd_material_w,
				cd_motivo_baixa_w,
				nr_seq_lote_w;
			EXIT WHEN NOT FOUND; /* apply on C04 */
				begin

				if (cd_motivo_baixa_w = 0) then

					ie_impedir_w	:= Obter_Se_impede_adm(cd_material_w);
					if (ie_impedir_w = 'S') then

						if (ie_somente_com_baixa_w = 'S') then

							--so e possivel administrar uma medicacao apos o atendimento da mesma no atendimento da prescricao/lote! parametro [357]
							CALL wheb_mensagem_pck.exibir_mensagem_abort(173406);
						elsif (ie_somente_com_baixa_w = 'L') and (nr_seq_lote_w IS NOT NULL AND nr_seq_lote_w::text <> '') then

							select	max(dt_atend_farmacia)
							into STRICT	dt_atend_lote_w
							from	ap_lote
							where	nr_sequencia = nr_seq_lote_w;
							if (coalesce(dt_atend_lote_w::text, '') = '') then

								--so e possivel administrar uma medicacao apos o atendimento da mesma no atendimento da prescricao/lote! parametro [357]
								CALL wheb_mensagem_pck.exibir_mensagem_abort(173406);
							end if;
						elsif (ie_somente_com_baixa_w = 'E') and (nr_seq_lote_w IS NOT NULL AND nr_seq_lote_w::text <> '') then

							select	max(dt_entrega_setor)
							into STRICT	dt_entrega_setor_w
							from	ap_lote
							where	nr_sequencia = nr_seq_lote_w;
							if (coalesce(dt_entrega_setor_w::text, '') = '') then

								--so e possivel administrar uma medicacao apos a entrega da mesma no atendimento da prescricao/lote! parametro [357]
								CALL wheb_mensagem_pck.exibir_mensagem_abort(472055);
							end if;
						end if;
					end if;
				end if;

				end;
			end loop;
			close C04;


			end;
		elsif (nr_etapa_atual_sol_w = 0) then

			begin
			nr_etapa_atual_sol_w := null;
			end;
		end if;

		select	coalesce(max(nr_seq_lote),0)
		into STRICT	nr_seq_lote_w
		from	prescr_mat_hor
		where	nr_seq_solucao	= nr_seq_solucao_p
		and		nr_prescricao	= nr_prescricao_p
		and		nr_etapa_sol	= nr_etapa_atual_sol_w;


		if (ie_alteracao_p not in (1,3)) then

			begin

			/* obter sequencia */

			select	nextval('prescr_solucao_evento_seq')
			into STRICT	nr_sequencia_w
			;

			nr_seq_sol_evento_w := nr_sequencia_w;

			/* gerar evento */

			insert into prescr_solucao_evento(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_prescricao,
				nr_seq_solucao,
				nr_seq_material,
				nr_seq_procedimento,
				nr_seq_nut,
				nr_seq_nut_neo,
				ie_forma_infusao,
				ie_tipo_dosagem,
				qt_dosagem,
				qt_vol_infundido,
				qt_vol_desprezado,
				qt_volume_parcial,
				cd_pessoa_fisica,
				ie_alteracao,
				dt_alteracao,
				ie_evento_valido,
				nr_seq_motivo,
				ds_observacao,
				ie_tipo_solucao,
				qt_volume_fase,
				nr_etapa_evento,
				ie_tipo_analgesia,
				ie_pca_modo_prog,
				qt_vol_infusao_pca,
				ie_um_fluxo_pca,
				qt_bolus_pca,
				ie_um_bolus_pca,
				qt_intervalo_bloqueio,
				qt_dose_inicial_pca,
				ie_um_dose_inicio_pca,
				qt_limite_quatro_hora,
				ie_um_limite_pca,
				qt_limite_uma_hora,
				ie_um_limite_hora_pca,
				qt_dose_terapeutica,
				nr_unid_terapeutica,
				nr_seq_lote,
				nr_seq_assinatura,
				ds_justificativa,
				dt_horario,
				nr_seq_motivo_adm,
				nm_usuario_conf,
				nr_seq_cpoe,
                IE_STERILE_PREPARATION,
				nr_seq_bomba_event)
			values (
				nr_sequencia_w,
				dt_atualizacao_w,
				nm_usuario_p,
				dt_atualizacao_w,
				nm_usuario_p,
				nr_prescricao_p,
				nr_seq_solucao_p,
				null,
				null,
				null,
				null,
				ie_forma_infusao_p,
				CASE WHEN qt_vel_infusao_w=0 THEN  null  ELSE ie_tipo_dosagem_p END ,
				CASE WHEN qt_vel_infusao_w=0 THEN  null  ELSE qt_vel_infusao_w END ,
					CASE WHEN qt_vol_infundido_p=0 THEN  null  ELSE qt_vol_infundido_p + coalesce(qt_vol_parcial_p,0) END ,
				CASE WHEN qt_vol_desprezado_p=0 THEN  null  ELSE qt_vol_desprezado_p END ,
				CASE WHEN qt_vol_infundido_p=0 THEN  null  ELSE qt_vol_infundido_p END ,
				obter_dados_usuario_opcao(nm_usuario_p, 'C'),
				ie_alteracao_p,
				dt_evento_w,
				'S',
				CASE WHEN ie_alteracao_p=2 THEN  nr_seq_motivo_p WHEN ie_alteracao_p=5 THEN  nr_seq_motivo_p WHEN ie_alteracao_p=6 THEN  nr_seq_motivo_p  ELSE null END ,
				ds_observacao_w,
				ie_tipo_solucao_p,
				qt_vol_fase_p, /*OS 125857*/
				coalesce(nr_etapa_evento_p,nr_etapa_atual_sol_w),
				ie_tipo_analgesia_p,
				ie_pca_modo_prog_p,
				qt_vol_infusao_pca_p,
				ie_um_fluxo_pca_p,
				qt_bolus_pca_p,
				ie_um_bolus_pca_p,
				qt_intervalo_bloqueio_p,
				qt_dose_inicial_pca_p,
				ie_um_dose_inicio_pca_p,
				qt_limite_quatro_hora_p,
				ie_um_limite_pca_p,
				qt_limite_uma_hora_p,
				ie_um_limite_hora_pca_p,
				qt_dose_terapeutica_p,
				nr_unid_terapeutica_p,
				nr_seq_lote_w,
				nr_seq_assinatura_p,
				ds_justificativa_p,
				dt_horario_w,
				nr_seq_motivo_adm_p,
				nm_usuario_conf_p,
				nr_seq_item_cpoe_w,
                IE_STERILE_PREPARATION_P,
				seq_bomba_infusao_p);

			end;
		end if;

		nr_etapa_pendencia_w := coalesce(nr_etapa_evento_p,nr_etapa_atual_sol_w);

		/* atualizar status solucao */

		if (ie_alteracao_p = 1) then

			begin

			update	prescr_solucao
			set	ie_status		= 'I',
				dt_status		= dt_evento_w,
				nr_seq_dispositivo	= nr_seq_dispositivo_p,
				ie_bomba_infusao	= coalesce(ie_bomba_infusao_p,ie_bomba_infusao),
        qt_dose_nais = qt_dose_nais_p,
        qt_unid_medida_nais = qt_unid_medida_nais_p
			where	nr_prescricao = nr_prescricao_p
			and	nr_seq_solucao = nr_seq_solucao_p;

			----------------------NOVO (Parametro 673)
			select	coalesce(max(ie_solucao_especial),'N'),
				obter_se_acm_sn(max(ie_acm), max(ie_se_necessario))
			into STRICT	ie_solucao_especial_w,
				ie_acm_sn_w
			from	prescr_solucao
			where	nr_seq_solucao	= nr_seq_solucao_p
			and	nr_prescricao	= nr_prescricao_p;

			if	((ie_gera_lote_sol_esp_w = 'S') and (ie_solucao_especial_w = 'S') and (ie_acm_sn_w <> 'S')) then

				if (ie_grava_log_rastr_w = 'S') then
					CALL adep_gerar_log_rastr(substr('GERAR_ALTERACAO_SOLUCAO_PRESCR C08' || chr(10) ||
						'{'||chr(10)||
						'"nr_prescricao_p" : "'||nr_prescricao_p||'",'||chr(10)||
						'"nr_seq_solucao_p" : "'||nr_seq_solucao_p||'"}',1,1500));
				end if;

				open c08;
				loop
				fetch c08 into
					nr_seq_lote_w;
				EXIT WHEN NOT FOUND; /* apply on c08 */
					begin

					update 	prescr_mat_hor
					set		cd_motivo_baixa  = NULL,
							nr_seq_lote  = NULL
					where	nr_seq_lote = nr_seq_lote_w;

					end;
				end loop;
				close c08;

				update	prescr_material
				set	cd_motivo_baixa 	 = NULL,
					dt_baixa 		 = NULL
				where	nr_prescricao 		= nr_prescricao_p
				and 	nr_sequencia_solucao 	= nr_seq_solucao_p;

				CALL Gerar_Lote_Atend_Prescricao(nr_prescricao_p, null, null, 'N', nm_usuario_p, 'GASR', 0);

				select	coalesce(max(nr_seq_lote),0)
				into STRICT	nr_seq_lote_w
				from	prescr_mat_hor
				where	nr_seq_solucao	= nr_seq_solucao_p
				and	nr_prescricao	= nr_prescricao_p;

				/* obter sequencia */

				select	nextval('prescr_solucao_evento_seq')
				into STRICT	nr_sequencia_lote_w
				;

        nr_seq_sol_evento_w := nr_sequencia_lote_w;

				/* gerar evento */

				insert into prescr_solucao_evento(
					nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_prescricao,
					nr_seq_solucao,
					nr_seq_material,
					nr_seq_procedimento,
					nr_seq_nut,
					nr_seq_nut_neo,
					cd_pessoa_fisica,
					ie_alteracao,
					dt_alteracao,
					ie_evento_valido,
					ie_tipo_solucao,
					qt_volume_fase,
					nr_etapa_evento,
					ie_tipo_analgesia,
					ie_pca_modo_prog,
					qt_vol_infusao_pca,
					ie_um_fluxo_pca,
					qt_bolus_pca,
					ie_um_bolus_pca,
					qt_intervalo_bloqueio,
					qt_dose_inicial_pca,
					ie_um_dose_inicio_pca,
					qt_limite_quatro_hora,
					ie_um_limite_pca,
					qt_limite_uma_hora,
					ie_um_limite_hora_pca,
					qt_dose_terapeutica,
					nr_unid_terapeutica,
					nr_seq_lote,
					dt_horario,
					qt_vol_restante,
					dt_prev_termino,
					dt_prev_termino_etapa,
					nm_usuario_conf,
					nr_seq_cpoe,
                    IE_STERILE_PREPARATION,
					nr_seq_bomba_event)
				values (
					nr_sequencia_lote_w,
					dt_atualizacao_w,
					nm_usuario_p,
					dt_atualizacao_w,
					nm_usuario_p,
					nr_prescricao_p,
					nr_seq_solucao_p,
					null,
					null,
					null,
					null,
					obter_dados_usuario_opcao(nm_usuario_p, 'C'),
					50,
					dt_evento_w,
					'N',
					ie_tipo_solucao_p,
					qt_vol_fase_p, /*OS 125857*/
					coalesce(nr_etapa_evento_p,nr_etapa_atual_sol_w),
					ie_tipo_analgesia_p,
					ie_pca_modo_prog_p,
					qt_vol_infusao_pca_p,
					ie_um_fluxo_pca_p,
					qt_bolus_pca_p,
					ie_um_bolus_pca_p,
					qt_intervalo_bloqueio_p,
					qt_dose_inicial_pca_p,
					ie_um_dose_inicio_pca_p,
					qt_limite_quatro_hora_p,
					ie_um_limite_pca_p,
					qt_limite_uma_hora_p,
					ie_um_limite_hora_pca_p,
					qt_dose_terapeutica_p,
					nr_unid_terapeutica_p,
					nr_seq_lote_w,
					dt_horario_w,
					null,
					null,
					null,
					nm_usuario_conf_p,
					nr_seq_item_cpoe_w,
                    IE_STERILE_PREPARATION_P,
					seq_bomba_infusao_p);

			end if;
			----------------------FIM NOVO (Parametro 673)
			select	max(ie_bomba_infusao)
			into STRICT	ie_bomba_infusao_w
			from	prescr_solucao
			where	nr_prescricao  = nr_prescricao_p
			and	nr_seq_solucao = nr_seq_solucao_p;

			if (coalesce(ie_forma_cobr_solucao_w,'N') = 'N') then

				if (ie_grava_log_rastr_w = 'S') then
					CALL adep_gerar_log_rastr(substr('GERAR_ALTERACAO_SOLUCAO_PRESCR C02' || chr(10) ||
						'{'||chr(10)||
						'"nr_prescricao_p" : "'||nr_prescricao_p||'",'||chr(10)||
						'"nr_seq_solucao_p" : "'||nr_seq_solucao_p||'"}',1,1500));
				end if;

				open C02;
				loop
				fetch C02 into
					nr_seq_item_w;
				EXIT WHEN NOT FOUND; /* apply on C02 */
					CALL Gerar_proced_assoc_mat_conta(nr_prescricao_p, nr_seq_item_w, 'I', nm_usuario_p, 'G',dt_alteracao_p);
				end loop;
				close C02;
			else
				select	max(nr_sequencia)
				into STRICT	nr_seq_item_w
				from	prescr_material
				where	coalesce(dt_suspensao::text, '') = ''
				and		nr_sequencia_solucao = nr_seq_solucao_p
				and		nr_prescricao = nr_prescricao_p;

				CALL Gerar_proced_assoc_mat_conta(nr_prescricao_p, nr_seq_item_w, 'I', nm_usuario_p, 'G',dt_alteracao_p);
			end if;

			if (ie_lancar_cta_solucao_w = 'S') then

				nr_etapa_atual_w := nr_etapa_atual_sol_w;

				if (ie_grava_log_rastr_w = 'S') then
					CALL adep_gerar_log_rastr(substr('GERAR_ALTERACAO_SOLUCAO_PRESCR C01' || chr(10) ||
						'{'||chr(10)||
						'"nr_etapa_atual_w" : "'||nr_etapa_atual_w||'",'||chr(10)||
						'"nr_prescricao_p" : "'||nr_prescricao_p||'",'||chr(10)||
						'"nr_seq_solucao_p" : "'||nr_seq_solucao_p||'"}',1,1500));
				end if;

				open C01;
				loop
				fetch C01 into
					nr_seq_horario_w,
					nr_seq_item_w,
					dt_horario_w;
				EXIT WHEN NOT FOUND; /* apply on C01 */
					nr_seq_map_w := gerar_estornar_adep_map(null, nr_seq_horario_w, null, 'G', dt_evento_w, nm_usuario_p, nr_seq_map_w, 'GAP', null, null);
				end loop;
				close C01;

				if (ie_grava_log_rastr_w = 'S') then
					CALL adep_gerar_log_rastr(substr('GERAR_ALTERACAO_SOLUCAO_PRESCR C06' || chr(10) ||
						'{'||chr(10)||
						'"nr_prescricao_p" : "'||nr_prescricao_p||'",'||chr(10)||
						'"nr_seq_solucao_p" : "'||nr_seq_solucao_p||'"}',1,1500));
				end if;

				open C06;
				loop
				fetch C06 into
					cd_material_w,
					nr_sequencia_w;
				EXIT WHEN NOT FOUND; /* apply on C06 */
					begin

					CALL gerar_alter_horario_item_kit(nr_atendimento_p, 'KIT', nr_prescricao_p, nr_sequencia_w, dt_horario_w, 3, dt_evento_w, 'S', nm_usuario_p);

					end;
				end loop;
				close C06;

			end if;

			if (ie_bomba_infusao_w IS NOT NULL AND ie_bomba_infusao_w::text <> '') then
				CALL Gerar_itens_assoc_dispositivo(ie_bomba_infusao_w, nr_prescricao_p, obter_perfil_ativo, cd_estabelecimento_p, null, nr_seq_solucao_p, nm_usuario_p, coalesce(nr_seq_horario_w,0));
			end if;

			select	min(nr_etapa_sol)
			into STRICT	nr_etapa_atual_w
			from	prescr_mat_hor
			where	nr_prescricao	= nr_prescricao_p
			and	nr_seq_solucao	= nr_seq_solucao_p
			and	coalesce(dt_suspensao::text, '') = ''
			and	coalesce(dt_inicio_horario::text, '') = '';

			if	((ie_palm_p = 'S') and (coalesce(nr_seq_processo_sol_p,0) > 0) and (nr_etapa_evento_p IS NOT NULL AND nr_etapa_evento_p::text <> '')) then

				CALL instalar_horario_solucao(nr_prescricao_p, nr_seq_solucao_p, nr_etapa_evento_p, dt_evento_w, nm_usuario_p);
			else
				CALL instalar_horario_solucao(nr_prescricao_p, nr_seq_solucao_p, nr_etapa_atual_w, dt_evento_w, nm_usuario_p);
			end if;

			if (nr_seq_processo_sol_p IS NOT NULL AND nr_seq_processo_sol_p::text <> '') then

				CALL instalar_processo_adep(nr_seq_processo_sol_p, 'S', nm_usuario_p, 0);
			end if;

			select	coalesce(max('S'),'N')
			into STRICT	ie_epimed_w
			from	setor_atendimento h
			where	coalesce(h.ie_epimed,'N') = 'S'
			and		h.ie_situacao = 'A'
			and		h.cd_setor_atendimento in (	SELECT	cd_setor_atendimento
												from	prescr_medica
												where	nr_prescricao = nr_prescricao_p);

			if (ie_epimed_w = 'S') then
				CALL epimed_envia_aminas_vasoativas(nr_prescricao_p, nr_seq_solucao_p, nr_etapa_atual_w, nr_atendimento_p, null, nm_usuario_p);
			end if;

			/* obter sequencia */

			select	nextval('prescr_solucao_evento_seq')
			into STRICT	nr_sequencia_w
			;

      nr_seq_sol_evento_w := nr_sequencia_w;

			/* gerar evento */

			insert into prescr_solucao_evento(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_prescricao,
				nr_seq_solucao,
				nr_seq_material,
				nr_seq_procedimento,
				nr_seq_nut,
				nr_seq_nut_neo,
				ie_forma_infusao,
				ie_tipo_dosagem,
				qt_dosagem,
				qt_vol_infundido,
				qt_vol_desprezado,
				qt_volume_parcial,
				cd_pessoa_fisica,
				ie_alteracao,
				dt_alteracao,
				ie_evento_valido,
				nr_seq_motivo,
				ds_observacao,
				ie_tipo_solucao,
				qt_volume_fase,
				nr_etapa_evento,
				ie_tipo_analgesia,
				ie_pca_modo_prog,
				qt_vol_infusao_pca,
				ie_um_fluxo_pca,
				qt_bolus_pca,
				ie_um_bolus_pca,
				qt_intervalo_bloqueio,
				qt_dose_inicial_pca,
				ie_um_dose_inicio_pca,
				qt_limite_quatro_hora,
				ie_um_limite_pca,
				qt_limite_uma_hora,
				ie_um_limite_hora_pca,
				qt_dose_terapeutica,
				nr_unid_terapeutica,
				nr_seq_lote,
				nr_seq_assinatura,
				ds_justificativa,
				dt_horario,
				nr_seq_motivo_adm,
				nm_usuario_conf,
				nr_seq_cpoe,
                IE_STERILE_PREPARATION,
				nr_seq_bomba_event)
			values (
				nr_sequencia_w,
				dt_atualizacao_w,
				nm_usuario_p,
				dt_atualizacao_w,
				nm_usuario_p,
				nr_prescricao_p,
				nr_seq_solucao_p,
				null,
				null,
				null,
				null,
				ie_forma_infusao_p,
				CASE WHEN qt_vel_infusao_w=0 THEN  null  ELSE ie_tipo_dosagem_p END ,
				CASE WHEN qt_vel_infusao_w=0 THEN  null  ELSE qt_vel_infusao_w END ,
					CASE WHEN qt_vol_infundido_p=0 THEN  null  ELSE qt_vol_infundido_p + coalesce(qt_vol_parcial_p,0) END ,
				CASE WHEN qt_vol_desprezado_p=0 THEN  null  ELSE qt_vol_desprezado_p END ,
				CASE WHEN qt_vol_infundido_p=0 THEN  null  ELSE qt_vol_infundido_p END ,
				obter_dados_usuario_opcao(nm_usuario_p, 'C'),
				ie_alteracao_p,
				dt_evento_w,
				'S',
				CASE WHEN ie_alteracao_p=2 THEN  nr_seq_motivo_p WHEN ie_alteracao_p=5 THEN  nr_seq_motivo_p WHEN ie_alteracao_p=6 THEN  nr_seq_motivo_p  ELSE null END ,
				ds_observacao_w,
				ie_tipo_solucao_p,
				qt_vol_fase_p, /*OS 125857*/
				coalesce(nr_etapa_evento_p,nr_etapa_atual_sol_w),
				ie_tipo_analgesia_p,
				ie_pca_modo_prog_p,
				qt_vol_infusao_pca_p,
				ie_um_fluxo_pca_p,
				qt_bolus_pca_p,
				ie_um_bolus_pca_p,
				qt_intervalo_bloqueio_p,
				qt_dose_inicial_pca_p,
				ie_um_dose_inicio_pca_p,
				qt_limite_quatro_hora_p,
				ie_um_limite_pca_p,
				qt_limite_uma_hora_p,
				ie_um_limite_hora_pca_p,
				qt_dose_terapeutica_p,
				nr_unid_terapeutica_p,
				nr_seq_lote_w,
				nr_seq_assinatura_p,
				ds_justificativa_p,
				dt_horario_w,
				nr_seq_motivo_adm_p,
				nm_usuario_conf_p,
				nr_seq_item_cpoe_w,
                IE_STERILE_PREPARATION_P,
				seq_bomba_infusao_p);

				select	coalesce(max(ie_acm),'N'),
						coalesce(max(ie_se_necessario),'N'),
						max(ie_via_aplicacao)
				into STRICT	ie_acm_w,
						ie_sn_w,
						ie_via_aplicacao_w
				from	prescr_solucao
				where	nr_seq_solucao = nr_seq_solucao_p
				and		nr_prescricao = nr_prescricao_p;

				if (ie_grava_log_rastr_w = 'S') then
					CALL adep_gerar_log_rastr(substr('GERAR_ALTERACAO_SOLUCAO_PRESCR C07' || chr(10) ||
						'{'||chr(10)||
						'"nr_prescricao_p" : "'||nr_prescricao_p||'",'||chr(10)||
						'"nr_seq_solucao_p" : "'||nr_seq_solucao_p||'"}',1,1500));
				end if;

				open C07;
				loop
				fetch C07 into
					cd_material_w;
				EXIT WHEN NOT FOUND; /* apply on C07 */
					begin

					select	max(obter_dados_material(cd_material_w, 'CCLA')),
							max(obter_dados_material(cd_material_w, 'CGRU')),
							max(obter_dados_material(cd_material_w, 'CSUB'))
					into STRICT	cd_classe_mat_w,
							cd_grupo_mat_w,
							cd_sub_grupo_mat_w
					;

					select	coalesce(max(nr_sequencia),0)
					into STRICT	nr_sequencia_w
					from	rep_intervencao_medic
					where	coalesce(cd_material, cd_material_w) = cd_material_w
					and		coalesce(ie_via_aplicacao, ie_via_aplicacao_w) = ie_via_aplicacao_w
					and		coalesce(ie_se_necessario, 'N') = ie_sn_w
					and		coalesce(ie_acm, 'N') = ie_acm_w
					and		coalesce(cd_classe_material,cd_classe_mat_w) = cd_classe_mat_w
					and		coalesce(cd_grupo_material,cd_grupo_mat_w) = cd_grupo_mat_w
					and		coalesce(cd_subgrupo_material,cd_sub_grupo_mat_w) =  cd_sub_grupo_mat_w
					and		exists (SELECT 1 from rep_intervencao_medic);

					select	max(nr_seq_proc),
							max(ds_mensagem),
							coalesce(max(qt_minutos_apraz),1)
					into STRICT	nr_seq_proc_w,
							ds_mensagem_w,
							qt_minutos_apraz_w
					from	rep_intervencao_medic
					where	nr_sequencia = nr_sequencia_w;

				    if (nr_sequencia_w > 0) then


					    select 	dt_horario_w+qt_minutos_apraz_w/1440
						into STRICT	dt_horario_w
						;

				        select	coalesce(max(b.nr_sequencia),0),
								coalesce(max(ie_acm),'N'),
								max(cd_intervalo),
								coalesce(max(qt_intervencao),1),
								max(a.nr_sequencia)
						into STRICT	nr_prescr_interv_w,
								ie_acm_interv_w,
								cd_intervalo_interv_w,
								qt_interv_w,
								nr_seq_interv_w
						from  	pe_prescr_proc a,
							  	pe_prescricao b
						where 	a.nr_seq_prescr 	= b.nr_sequencia
						and	    nr_seq_proc 		= nr_seq_proc_w
						and	    dt_horario_w between dt_inicio_prescr and dt_validade_prescr;

					end if;

				    if (nr_prescr_interv_w > 0) then


						SELECT * FROM aprazar_item_prescr('N', cd_estabelecimento_p, nr_atendimento_p, 'E', 24, nr_seq_proc_w, cd_intervalo_interv_w, qt_interv_w, dt_horario_w, nr_prescr_interv_w, nr_prescr_interv_w, nr_seq_interv_w, 'N', null, '', nm_usuario_p, ie_inconsistencia_w, ds_inconsistentes_w, null, null, ie_acm_interv_w, 'S', nr_seq_assinatura_p, 'N', null, null, null, null, null, null, null, null) INTO STRICT ie_inconsistencia_w, ds_inconsistentes_w;
						ds_msg_p	:= null;
						exit;
					else
						ds_msg_p	:=	substr(ds_mensagem_w,1,255);
					end if;


					end;
				end loop;
				close C07;

			exception
			when others then
				CALL gravar_log_tasy(30,
					substr(wheb_mensagem_pck.get_texto(952753)/*'Sequencia: '*/
 || nr_seq_solucao_p ||' - '|| wheb_mensagem_pck.get_texto(952754)/*' - prescricao - '*/ ||' - '|| nr_prescricao_p || ' - Erro GERAR_ALTERACAO_SOLUCAO_PRESCR= '|| sqlerrm || ' - ' ||
					substr(dbms_utility.format_call_stack,1,1800),1,2000),
					nm_usuario_p);
			end;
		elsif (ie_alteracao_p = 2) then

			begin
			if (ie_palm_p = 'S') then


				select	coalesce(max('S'), 'N')
				into STRICT	ie_existe_etapa_anterior_w
				from	prescr_mat_hor
				where	nr_prescricao = nr_prescricao_p
				and		nr_seq_solucao = nr_seq_solucao_p
				and		dt_horario < dt_horario_p
				and		coalesce(coalesce(dt_fim_horario, dt_suspensao, dt_inicio_horario)::text, '') = ''
				and		coalesce(ie_horario_especial, 'N') <> 'S'
				and		ie_agrupador = 4;

				if (ie_existe_etapa_anterior_w = 'S') then
					CALL wheb_mensagem_pck.exibir_mensagem_abort(1047492);
				end if;

			end if;
			update	prescr_solucao
			set		ie_status = 'INT',
					--dt_status = sysdate
					dt_status = dt_evento_w
			where	nr_seq_solucao = nr_seq_solucao_p
			and		nr_prescricao = nr_prescricao_p;

			CALL interromper_horario_solucao(nr_prescricao_p, nr_seq_solucao_p, nr_etapa_atual_sol_w, dt_evento_w, nm_usuario_p, ie_troca_frasco_w);


			end;
		elsif (ie_alteracao_p = 3) then

			begin

			select	count(*)
			into STRICT	Qt_horario_pendente_W
			from	prescr_mat_hor b where		((exists (	SELECT	1
								from	prescr_solucao_evento a
								where	obter_se_evento_troca_frasco(a.nr_sequencia) = 'N'
								and		a.nr_sequencia = (	select	max(nr_sequencia)
															from 	prescr_solucao_evento x
															where	x.ie_alteracao = 2
															and		coalesce(x.ie_evento_valido,'S') = 'S'
															and		a.nr_seq_solucao = x.nr_seq_solucao
															and		a.nr_prescricao = x.nr_prescricao)
								and		a.nr_seq_solucao = b.nr_seq_solucao
								and		a.nr_prescricao = b.nr_prescricao)) or
					 ((coalesce(b.dt_inicio_horario::text, '') = '') and (coalesce(b.dt_interrupcao::text, '') = '')))
			and		Obter_se_horario_liberado(b.dt_lib_horario, b.dt_horario) = 'S'
			and		coalesce(b.ie_horario_especial,'N') = 'N'
			and		coalesce(b.dt_fim_horario::text, '') = ''
			and		coalesce(b.dt_suspensao::text, '') = ''
			and		b.nr_seq_solucao = nr_seq_solucao_p
			and		b.nr_prescricao = nr_prescricao_p LIMIT 1;

			if (Qt_horario_pendente_W = 0) and (ie_consiste_hor_pend_w	<> 'N') then

				if (ie_acm_sn_w = 'S') and (ie_exibe_hoarios_w = 'H') and (ie_consiste_hor_pend_w = 'S') then

					-- Nao existem mais etapas/horarios pendentes para esta solucao! Para reiniciar, a solucao deve ser aprazada uma nova etapa.
					CALL Wheb_mensagem_pck.exibir_mensagem_abort(174647);
				elsif (ie_acm_sn_w	= 'N') and (ie_consiste_hor_pend_w = 'T') then

					-- Nao existem mais etapas/horarios pendentes para esta solucao!
					CALL Wheb_mensagem_pck.exibir_mensagem_abort(174650);
				end if;
			end if;

			update	prescr_solucao
			set	ie_status = 'I',
				dt_status = dt_evento_w
			where	nr_seq_solucao = nr_seq_solucao_p
			and	nr_prescricao = nr_prescricao_p;

			select	coalesce(max(ie_solucao_especial),'N'),
				obter_se_acm_sn(max(ie_acm), max(ie_se_necessario))
			into STRICT	ie_solucao_especial_w,
				ie_acm_sn_w
			from	prescr_solucao
			where	nr_seq_solucao	= nr_seq_solucao_p
			and	nr_prescricao	= nr_prescricao_p;


			select 	coalesce(max(nr_sequencia),0)
			into STRICT	nr_seq_evt_aux_w
			from	prescr_solucao_evento
			where	nr_prescricao = nr_prescricao_p
			and	nr_seq_solucao = nr_seq_solucao_p
			and	ie_alteracao = 2
			and	coalesce(ie_evento_valido, 'N') = 'S';

			if (nr_seq_evt_aux_w > 0) then

				select	coalesce(max('S'), 'N')
				into STRICT	ie_troca_frasco_ult_ev_w
				from	prescr_solucao_evento
				where	nr_sequencia = nr_seq_evt_aux_w
				and	obter_se_evento_troca_frasco(nr_sequencia) = 'S';


				if (ie_troca_frasco_ult_ev_w = 'S') then

					select	max(ie_bomba_infusao)
					into STRICT	ie_bomba_infusao_w
					from	prescr_solucao
					where	nr_prescricao  = nr_prescricao_p
					and	nr_seq_solucao = nr_seq_solucao_p;


					if (ie_bomba_infusao_w IS NOT NULL AND ie_bomba_infusao_w::text <> '') then
						CALL Gerar_itens_assoc_dispositivo(ie_bomba_infusao_w, nr_prescricao_p, obter_perfil_ativo, cd_estabelecimento_p, null, nr_seq_solucao_p, nm_usuario_p, coalesce(nr_seq_horario_w,0));
					end if;


				end if;

			end if;

			----------------------NOVO (Parametro 673)
			if	((ie_gera_lote_sol_esp_w = 'S') and (ie_solucao_especial_w = 'S') and (ie_troca_frasco_ult_ev_w = 'S') and (ie_acm_sn_w <> 'S')) then

				if (ie_grava_log_rastr_w = 'S') then
					CALL adep_gerar_log_rastr(substr('GERAR_ALTERACAO_SOLUCAO_PRESCR C08' || chr(10) ||
						'{'||chr(10)||
						'"nr_prescricao_p" : "'||nr_prescricao_p||'",'||chr(10)||
						'"nr_seq_solucao_p" : "'||nr_seq_solucao_p||'"}',1,1500));
				end if;

				open c08;
				loop
				fetch c08 into
					nr_seq_lote_w;
				EXIT WHEN NOT FOUND; /* apply on c08 */
					begin

					update 	prescr_mat_hor
					set		cd_motivo_baixa  = NULL,
							nr_seq_lote  = NULL
					where	nr_seq_lote = nr_seq_lote_w;

					end;
				end loop;
				close c08;

				update	prescr_material
				set	cd_motivo_baixa 	 = NULL,
					dt_baixa		 = NULL
				where	nr_prescricao 		= nr_prescricao_p
				and 	nr_sequencia_solucao 	= nr_seq_solucao_p;

				CALL Gerar_Lote_Atend_Prescricao(nr_prescricao_p, null, null, 'N', nm_usuario_p, 'GASR', 0);

				select	coalesce(max(nr_seq_lote),0)
				into STRICT	nr_seq_lote_w
				from	prescr_mat_hor
				where	nr_seq_solucao	= nr_seq_solucao_p
				and	nr_prescricao	= nr_prescricao_p;

				/* obter sequencia */

				select	nextval('prescr_solucao_evento_seq')
				into STRICT	nr_sequencia_lote_w
				;

        nr_seq_sol_evento_w := nr_sequencia_w;

				/* gerar evento */

				insert into prescr_solucao_evento(
					nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_prescricao,
					nr_seq_solucao,
					nr_seq_material,
					nr_seq_procedimento,
					nr_seq_nut,
					nr_seq_nut_neo,
					cd_pessoa_fisica,
					ie_alteracao,
					dt_alteracao,
					ie_evento_valido,
					ie_tipo_solucao,
					qt_volume_fase,
					nr_etapa_evento,
					ie_tipo_analgesia,
					ie_pca_modo_prog,
					qt_vol_infusao_pca,
					ie_um_fluxo_pca,
					qt_bolus_pca,
					ie_um_bolus_pca,
					qt_intervalo_bloqueio,
					qt_dose_inicial_pca,
					ie_um_dose_inicio_pca,
					qt_limite_quatro_hora,
					ie_um_limite_pca,
					qt_limite_uma_hora,
					ie_um_limite_hora_pca,
					qt_dose_terapeutica,
					nr_unid_terapeutica,
					nr_seq_lote,
					dt_horario,
					qt_vol_restante,
					dt_prev_termino,
					dt_prev_termino_etapa,
					nm_usuario_conf,
					nr_seq_cpoe,
                    IE_STERILE_PREPARATION,
					nr_seq_bomba_event)
				values (
					nr_sequencia_lote_w,
					dt_atualizacao_w,
					nm_usuario_p,
					dt_atualizacao_w,
					nm_usuario_p,
					nr_prescricao_p,
					nr_seq_solucao_p,
					null,
					null,
					null,
					null,
					obter_dados_usuario_opcao(nm_usuario_p, 'C'),
					50,
					dt_evento_w,
					'N',
					ie_tipo_solucao_p,
					qt_vol_fase_p, /*OS 125857*/
					coalesce(nr_etapa_evento_p,nr_etapa_atual_sol_w),
					ie_tipo_analgesia_p,
					ie_pca_modo_prog_p,
					qt_vol_infusao_pca_p,
					ie_um_fluxo_pca_p,
					qt_bolus_pca_p,
					ie_um_bolus_pca_p,
					qt_intervalo_bloqueio_p,
					qt_dose_inicial_pca_p,
					ie_um_dose_inicio_pca_p,
					qt_limite_quatro_hora_p,
					ie_um_limite_pca_p,
					qt_limite_uma_hora_p,
					ie_um_limite_hora_pca_p,
					qt_dose_terapeutica_p,
					nr_unid_terapeutica_p,
					nr_seq_lote_w,
					dt_horario_w,
					null,
					null,
					null,
					nm_usuario_conf_p,
					nr_seq_item_cpoe_w,
                    IE_STERILE_PREPARATION_P,
					seq_bomba_infusao_p);

			end if;
			----------------------FIM NOVO
			if (coalesce(ie_forma_cobr_solucao_w,'N') = 'N') then

				if (ie_grava_log_rastr_w = 'S') then
					CALL adep_gerar_log_rastr(substr('GERAR_ALTERACAO_SOLUCAO_PRESCR C02' || chr(10) ||
						'{'||chr(10)||
						'"nr_prescricao_p" : "'||nr_prescricao_p||'",'||chr(10)||
						'"nr_seq_solucao_p" : "'||nr_seq_solucao_p||'"}',1,1500));
				end if;

				open C02;
				loop
				fetch C02 into
					nr_seq_item_w;
				EXIT WHEN NOT FOUND; /* apply on C02 */
					CALL Gerar_proced_assoc_mat_conta(nr_prescricao_p, nr_seq_item_w, 'R', nm_usuario_p, 'G',dt_alteracao_p);
				end loop;
				close C02;
			else
				select	max(nr_sequencia)
				into STRICT	nr_seq_item_w
				from	prescr_material
				where	coalesce(dt_suspensao::text, '') = ''
				and		nr_sequencia_solucao = nr_seq_solucao_p
				and		nr_prescricao = nr_prescricao_p;

				CALL Gerar_proced_assoc_mat_conta(nr_prescricao_p, nr_seq_item_w, 'R', nm_usuario_p, 'G',dt_alteracao_p);

			end if;

			if (ie_lancar_cta_solucao_w = 'S') then


				nr_etapa_atual_w := nr_etapa_atual_sol_w;

				if (ie_grava_log_rastr_w = 'S') then
					CALL adep_gerar_log_rastr(substr('GERAR_ALTERACAO_SOLUCAO_PRESCR C01' || chr(10) ||
						'{'||chr(10)||
						'"nr_etapa_atual_w" : "'||nr_etapa_atual_w||'",'||chr(10)||
						'"nr_prescricao_p" : "'||nr_prescricao_p||'",'||chr(10)||
						'"nr_seq_solucao_p" : "'||nr_seq_solucao_p||'"}',1,1500));
				end if;

				open C01;
				loop
				fetch C01 into
					nr_seq_horario_w,
					nr_seq_item_w,
					dt_horario_w;
				EXIT WHEN NOT FOUND; /* apply on C01 */
					nr_seq_map_w := gerar_estornar_adep_map(null, nr_seq_horario_w, null, 'G', dt_evento_w, nm_usuario_p, nr_seq_map_w, 'GAP', null, null);
				end loop;
				close C01;

				if (ie_grava_log_rastr_w = 'S') then
					CALL adep_gerar_log_rastr(substr('GERAR_ALTERACAO_SOLUCAO_PRESCR C06' || chr(10) ||
						'{'||chr(10)||
						'"nr_prescricao_p" : "'||nr_prescricao_p||'",'||chr(10)||
						'"nr_seq_solucao_p" : "'||nr_seq_solucao_p||'"}',1,1500));
				end if;

				open C06;
				loop
				fetch C06 into
					cd_material_w,
					nr_sequencia_w;
				EXIT WHEN NOT FOUND; /* apply on C06 */
					begin

					CALL gerar_alter_horario_item_kit(nr_atendimento_p, 'KIT', nr_prescricao_p, nr_sequencia_w, dt_horario_w, 3, dt_evento_w, 'S', nm_usuario_p);

					end;
				end loop;
				close C06;

			end if;

			CALL instalar_horario_solucao(nr_prescricao_p, nr_seq_solucao_p, nr_etapa_atual_sol_w, dt_evento_w, nm_usuario_p);

			if (coalesce(nr_etapa_atual_sol_w,0) > 0) then

				update	prescr_mat_hor
				set		dt_fim_horario	= clock_timestamp(),
						nm_usuario_adm	= nm_usuario_p,
						dt_atualizacao	= clock_timestamp(),
						nm_usuario	= nm_usuario_p
				where	nr_etapa_sol 	< nr_etapa_atual_sol_w
				and		coalesce(dt_suspensao::text, '') = ''
				--and		dt_fim_horario is not null
				and		nr_seq_solucao	= nr_seq_solucao_p
				and		nr_prescricao	= nr_prescricao_p;

			end if;
			if (nr_seq_processo_sol_p IS NOT NULL AND nr_seq_processo_sol_p::text <> '') then

				CALL instalar_processo_adep(nr_seq_processo_sol_p, 'S', nm_usuario_p, 0);
			end if;

			/* obter sequencia */

			select	nextval('prescr_solucao_evento_seq')
			into STRICT	nr_sequencia_w
			;

      nr_seq_sol_evento_w := nr_sequencia_w;

			/* gerar evento */

			insert into prescr_solucao_evento(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_prescricao,
				nr_seq_solucao,
				nr_seq_material,
				nr_seq_procedimento,
				nr_seq_nut,
				nr_seq_nut_neo,
				ie_forma_infusao,
				ie_tipo_dosagem,
				qt_dosagem,
				qt_vol_infundido,
				qt_vol_desprezado,
				qt_volume_parcial,
				cd_pessoa_fisica,
				ie_alteracao,
				dt_alteracao,
				ie_evento_valido,
				nr_seq_motivo,
				ds_observacao,
				ie_tipo_solucao,
				qt_volume_fase,
				nr_etapa_evento,
				ie_tipo_analgesia,
				ie_pca_modo_prog,
				qt_vol_infusao_pca,
				ie_um_fluxo_pca,
				qt_bolus_pca,
				ie_um_bolus_pca,
				qt_intervalo_bloqueio,
				qt_dose_inicial_pca,
				ie_um_dose_inicio_pca,
				qt_limite_quatro_hora,
				ie_um_limite_pca,
				qt_limite_uma_hora,
				ie_um_limite_hora_pca,
				qt_dose_terapeutica,
				nr_unid_terapeutica,
				nr_seq_lote,
				nr_seq_assinatura,
				ds_justificativa,
				dt_horario,
				nr_seq_motivo_adm,
				nm_usuario_conf,
				nr_seq_cpoe,
                IE_STERILE_PREPARATION,
				nr_seq_bomba_event)
			values (
				nr_sequencia_w,
				dt_atualizacao_w,
				nm_usuario_p,
				dt_atualizacao_w,
				nm_usuario_p,
				nr_prescricao_p,
				nr_seq_solucao_p,
				null,
				null,
				null,
				null,
				ie_forma_infusao_p,
				CASE WHEN qt_vel_infusao_w=0 THEN  null  ELSE ie_tipo_dosagem_p END ,
				CASE WHEN qt_vel_infusao_w=0 THEN  null  ELSE qt_vel_infusao_w END ,
					CASE WHEN qt_vol_infundido_p=0 THEN  null  ELSE qt_vol_infundido_p + coalesce(qt_vol_parcial_p,0) END ,
				CASE WHEN qt_vol_desprezado_p=0 THEN  null  ELSE qt_vol_desprezado_p END ,
				CASE WHEN qt_vol_infundido_p=0 THEN  null  ELSE qt_vol_infundido_p END ,
				obter_dados_usuario_opcao(nm_usuario_p, 'C'),
				ie_alteracao_p,
				dt_evento_w,
				'S',
				CASE WHEN ie_alteracao_p=2 THEN  nr_seq_motivo_p WHEN ie_alteracao_p=5 THEN  nr_seq_motivo_p WHEN ie_alteracao_p=6 THEN  nr_seq_motivo_p  ELSE null END ,
				ds_observacao_w,
				ie_tipo_solucao_p,
				qt_vol_fase_p, /*OS 125857*/
				coalesce(nr_etapa_evento_p,nr_etapa_atual_sol_w),
				ie_tipo_analgesia_p,
				ie_pca_modo_prog_p,
				qt_vol_infusao_pca_p,
				ie_um_fluxo_pca_p,
				qt_bolus_pca_p,
				ie_um_bolus_pca_p,
				qt_intervalo_bloqueio_p,
				qt_dose_inicial_pca_p,
				ie_um_dose_inicio_pca_p,
				qt_limite_quatro_hora_p,
				ie_um_limite_pca_p,
				qt_limite_uma_hora_p,
				ie_um_limite_hora_pca_p,
				qt_dose_terapeutica_p,
				nr_unid_terapeutica_p,
				nr_seq_lote_w,
				nr_seq_assinatura_p,
				ds_justificativa_p,
				dt_horario_w,
				nr_seq_motivo_adm_p,
				nm_usuario_conf_p,
				nr_seq_item_cpoe_w,
                IE_STERILE_PREPARATION_P,
				seq_bomba_infusao_p);

        /* Check if integration is filler */

        select obter_cpoe_regra_ator('M')
        into STRICT regra_alteracao_is_filler_w
;

        if (regra_alteracao_is_filler_w = 'OF') then
          nr_seq_cpoe_w := obter_nr_seq_cpoe_sol(nr_prescricao_p, nr_seq_solucao_p);

          if (nr_seq_cpoe_w > 0) then
            CALL call_bifrost_content('prescription.medicine.order.request',
              'cpoe_mat_json_pck.get_solution_prescr_message(' || nr_seq_cpoe_w || ', '
                || coalesce(nr_seq_sol_evento_w, 0) || ', ' || coalesce(nr_seq_solucao_p,0) || ', ' 
                || coalesce(coalesce(nr_etapa_evento_p,nr_etapa_atual_sol_w),0) || ', ' || coalesce(nr_prescricao_p,0) || ', ' 
				        || chr(39) || nm_usuario_p  || chr(39) || ')',
              nm_usuario_p);
          end if;
        end if;

			end;
		elsif (ie_alteracao_p = 4) then

			begin

			if (wheb_usuario_pck.get_cd_funcao = 1113) then

				select max(d.nr_sequencia),
					max(c.nr_sequencia)
				into STRICT nr_seq_cirur_agente_ocor_w,
					nr_seq_cirur_agente_w
				from prescr_material a,
				prescr_material_compl b,
				cirurgia_agente_anestesico c,
				cirurgia_agente_anest_ocor d
				where a.nr_prescricao = b.nr_prescricao
				and a.nr_sequencia_solucao = b.nr_sequencia
				and b.nr_seq_agente_anestesico = c.nr_sequencia
				and c.nr_sequencia = d.nr_seq_cirur_agente
				and b.nr_prescricao = nr_prescricao_p
				and b.nr_sequencia = nr_seq_solucao_p
				and coalesce(d.dt_final_adm::text, '') = '';

				if (coalesce(nr_seq_cirur_agente_ocor_w,0) > 0)then

					update cirurgia_agente_anest_ocor
					set dt_final_adm = dt_alteracao_p,
					dt_liberacao = clock_timestamp()
					where nr_sequencia = nr_seq_cirur_agente_ocor_w;

					CALL gerar_prescr_solu_esquema(nr_seq_cirur_agente_w, nr_prescricao_p, nr_seq_solucao_p);

				end if;

			end if;

			update	prescr_solucao
			set	ie_status = 'T',
				--dt_status = sysdate
				dt_status = dt_evento_w
			where	nr_prescricao = nr_prescricao_p
			and	nr_seq_solucao = nr_seq_solucao_p;

			if (coalesce(ie_forma_cobr_solucao_w,'N') = 'N') then

				if (ie_grava_log_rastr_w = 'S') then
					CALL adep_gerar_log_rastr(substr('GERAR_ALTERACAO_SOLUCAO_PRESCR C02' || chr(10) ||
						'{'||chr(10)||
						'"nr_prescricao_p" : "'||nr_prescricao_p||'",'||chr(10)||
						'"nr_seq_solucao_p" : "'||nr_seq_solucao_p||'"}',1,1500));
				end if;

				open C02;
				loop
				fetch C02 into
					nr_seq_item_w;
				EXIT WHEN NOT FOUND; /* apply on C02 */
					CALL Gerar_proced_assoc_mat_conta(nr_prescricao_p, nr_seq_item_w, 'T', nm_usuario_p, 'G',dt_alteracao_p);
				end loop;
				close C02;
			else
				select	max(nr_sequencia)
				into STRICT	nr_seq_item_w
				from	prescr_material
				where	coalesce(dt_suspensao::text, '') = ''
				and		nr_sequencia_solucao = nr_seq_solucao_p
				and		nr_prescricao = nr_prescricao_p;

				CALL Gerar_proced_assoc_mat_conta(nr_prescricao_p, nr_seq_item_w, 'T', nm_usuario_p, 'G',dt_alteracao_p);
			end if;

			CALL administrar_horario_solucao(nr_prescricao_p, nr_seq_solucao_p, nr_etapa_atual_sol_w, dt_evento_w, nm_usuario_p);

			if (ie_grava_log_rastr_w = 'S') then
				CALL adep_gerar_log_rastr(substr('GERAR_ALTERACAO_SOLUCAO_PRESCR C02' || chr(10) ||
					'{'||chr(10)||
					'"nr_prescricao_p" : "'||nr_prescricao_p||'",'||chr(10)||
					'"nr_seq_solucao_p" : "'||nr_seq_solucao_p||'"}',1,1500));
			end if;

			open C02;
			loop
			fetch C02 into
				nr_seq_item_w;
			EXIT WHEN NOT FOUND; /* apply on C02 */
				CALL Gerar_proced_assoc_mat_conta(nr_prescricao_p, nr_seq_item_w, 'T', nm_usuario_p, 'G',dt_alteracao_p);
			end loop;
			close C02;

			end;
		elsif (ie_alteracao_p = 12) then

			CALL suspender_horario_solucao(nr_prescricao_p, nr_seq_solucao_p, nr_etapa_evento_p, dt_evento_w, nm_usuario_p);
		elsif (ie_alteracao_p = 6) then

			begin

			select	coalesce(max('S'),'N')
			into STRICT	ie_epimed_w
			from	setor_atendimento h,
					prescr_medica a
			where	h.cd_setor_atendimento = a.cd_setor_atendimento
			and		a.nr_prescricao = nr_prescricao_p
			and		coalesce(h.ie_epimed,'N') = 'S'
			and		h.ie_situacao = 'A';

			if (ie_epimed_w = 'S') then
				CALL epimed_envia_aminas_vasoativas(	nr_prescricao_p		=>nr_prescricao_p,
												nr_seq_solucao_p	=>nr_seq_solucao_p,
												nr_etapa_p			=>nr_etapa_evento_p,
												nr_atendimento_p	=>nr_atendimento_p,
												nr_seq_horario_p	=>null,
												nm_usuario_p		=>nm_usuario_p,
												ie_acao_p			=>'R');
			end if;

			if (ie_status_ant_w = 'N') then
  /* Rafael em 20/6/8 OS97627 */

				begin
				dt_evento_w := coalesce(obter_data_inicio_prescr(nr_prescricao_p),dt_evento_w);

				if (coalesce(ie_atualiza_status_proc_w,'N') = 'S') then

					begin
					select	max(nr_sequencia)
					into STRICT	nr_seq_processo_w
					from	adep_processo
					where	nr_etapa	= 1
					and		nr_seq_solucao	= nr_seq_solucao_p
					and		nr_prescricao	= nr_prescricao_p;

					if (nr_seq_processo_w IS NOT NULL AND nr_seq_processo_w::text <> '') then

						CALL administrar_processo_adep(cd_estabelecimento_p, nr_seq_processo_w, 'N', nm_usuario_p);	/*Reverter o processo ao reverter o inicio da solucao*/
					end if;
					end;
				end if;
				end;
			end if;

			if (ie_status_ant_w = 'S') then

				ie_status_ant_w := 'N';
			end if;

			select	coalesce(max(ie_status_ant_w), 'N')
			into STRICT	ie_status_ant_w
			from	prescr_mat_hor
			where	coalesce(dt_inicio_horario,coalesce(dt_reinicio,dt_interrupcao)) is not null
			and	coalesce(dt_suspensao::text, '') = ''
			and	ie_agrupador = 4
			and	nr_etapa_sol = nr_etapa_evento_p
			and	nr_seq_solucao = nr_seq_solucao_p
			and	nr_prescricao = nr_prescricao_p;

			ie_alteracao_ant_w := 0;

			if (coalesce(nr_seq_evento_ant_w, 0) > 0) then


				select coalesce(max(ie_alteracao),0)
				into STRICT	ie_alteracao_ant_w
				from prescr_solucao_evento
				where nr_sequencia = nr_seq_evento_ant_w
				and nr_prescricao = nr_prescricao_p
				and nr_seq_solucao = nr_seq_solucao_p;

			end if;

			if (coalesce(ie_alteracao_ant_w, 0) <> 12) then


				update	prescr_solucao
				set	ie_status = CASE WHEN ie_status_ant_w='R' THEN  'I'  ELSE ie_status_ant_w END ,
						ie_suspenso  = NULL,
						dt_suspensao  = NULL,
						--dt_status = sysdate
						dt_status = dt_evento_w
				where	nr_seq_solucao = nr_seq_solucao_p
				and	nr_prescricao = nr_prescricao_p;

			end if;

			select	coalesce(max('T'), ie_status_ant_w)
			into STRICT	ie_status_ant_w
			from	prescr_mat_hor
			where	(dt_fim_horario IS NOT NULL AND dt_fim_horario::text <> '')
			and	coalesce(dt_suspensao::text, '') = ''
			and	ie_agrupador = 4
			and	nr_etapa_sol = nr_etapa_evento_p
			and	nr_seq_solucao = nr_seq_solucao_p
			and	nr_prescricao = nr_prescricao_p
			and	coalesce(coalesce(dt_reinicio,dt_interrupcao)::text, '') = '';

			if (ie_status_ant_w in ('I','R')) then

				begin
				CALL reverter_adm_horario_solucao(nr_prescricao_p, nr_seq_solucao_p, nr_etapa_evento_p, dt_evento_w, nm_usuario_p);
				end;
			elsif (ie_status_ant_w in ('N','INT','II')) then


			begin
				CALL reverter_inst_horario_solucao(nr_prescricao_p, nr_seq_solucao_p, nr_etapa_evento_p, dt_evento_w, nm_usuario_p);

				if (ie_lancar_cta_solucao_w = 'S') then


					nr_etapa_atual_w := nr_etapa_evento_p;

					if (ie_grava_log_rastr_w = 'S') then
						CALL adep_gerar_log_rastr(substr('GERAR_ALTERACAO_SOLUCAO_PRESCR C01' || chr(10) ||
							'{'||chr(10)||
							'"nr_etapa_atual_w" : "'||nr_etapa_atual_w||'",'||chr(10)||
							'"nr_prescricao_p" : "'||nr_prescricao_p||'",'||chr(10)||
							'"nr_seq_solucao_p" : "'||nr_seq_solucao_p||'"}',1,1500));
					end if;

					open C01;
					loop
					fetch C01 into
						nr_seq_horario_w,
						nr_seq_item_w,
						dt_horario_w;
					EXIT WHEN NOT FOUND; /* apply on C01 */
						nr_seq_map_w := gerar_estornar_adep_map(null, nr_seq_horario_w, null, 'E', dt_evento_w, nm_usuario_p, nr_seq_map_w, 'GAP', null, null);
					end loop;
					close C01;

					if (ie_grava_log_rastr_w = 'S') then
						CALL adep_gerar_log_rastr(substr('GERAR_ALTERACAO_SOLUCAO_PRESCR C06' || chr(10) ||
							'{'||chr(10)||
							'"nr_prescricao_p" : "'||nr_prescricao_p||'",'||chr(10)||
							'"nr_seq_solucao_p" : "'||nr_seq_solucao_p||'"}',1,1500));
					end if;

					open C06;
					loop
					fetch C06 into
						cd_material_w,
						nr_sequencia_w;
					EXIT WHEN NOT FOUND; /* apply on C06 */
						begin

						CALL gerar_alter_horario_item_kit(nr_atendimento_p, 'KIT', nr_prescricao_p, nr_sequencia_w, dt_horario_w, 4, dt_evento_w, 'S', nm_usuario_p);

						end;
					end loop;
					close C06;

				end if;

			end;
			elsif (ie_status_ant_w = 'T') then

				begin
					update	prescr_mat_hor
					set	dt_fim_horario  = NULL
					where	(dt_fim_horario IS NOT NULL AND dt_fim_horario::text <> '')
					and 	nr_etapa_sol = nr_etapa_evento_p
					and	nr_seq_solucao = nr_seq_solucao_p
					and	nr_prescricao = nr_prescricao_p;
				end;
			end if;

			end;
		end if;
		end;

    /* Check if integration is filler */

    select obter_cpoe_regra_ator('M')
    into STRICT regra_alteracao_is_filler_w
;

    if (regra_alteracao_is_filler_w = 'OF') then
      nr_seq_cpoe_w := obter_nr_seq_cpoe_sol(nr_prescricao_p, nr_seq_solucao_p);

      if (nr_seq_cpoe_w > 0) then
        CALL call_bifrost_content('prescription.medicine.order.request',
          'cpoe_mat_json_pck.get_solution_prescr_message(' || nr_seq_cpoe_w || ', '
            || coalesce(nr_seq_sol_evento_w, 0) || ', ' || coalesce(nr_seq_solucao_p,0) || ', ' 
            || coalesce(coalesce(nr_etapa_evento_p,nr_etapa_atual_sol_w),0) || ', ' || coalesce(nr_prescricao_p,0) || ', ' 
				    || chr(39) || nm_usuario_p  || chr(39) || ')',
          nm_usuario_p);
      end if;
    end if;

    IF (OBTER_SE_INTEGRACAO_ATIVA(967, 245) = 'S') THEN
      if ie_alteracao_p in (1,3,5) then
        CALL integrar_infusao_bb(nr_atendimento_p, nr_seq_sol_evento_w, nr_seq_solucao_p, nr_prescricao_p, ie_tipo_dosagem_p, qt_vel_infusao_w, 'I');
      elsif ie_alteracao_p in (2,4) then
        CALL integrar_infusao_bb(nr_atendimento_p, nr_seq_sol_evento_w, nr_seq_solucao_p, nr_prescricao_p, ie_tipo_dosagem_p, qt_vel_infusao_w, 'F');
      end if;
    END IF;

		update	prescr_mat_hor
		set		dt_primeira_checagem  = NULL,
				nm_usuario = nm_usuario_p
		where	nr_prescricao = nr_prescricao_p
		and		nr_seq_solucao = nr_seq_solucao_p
		and		nr_etapa_sol = coalesce(nr_etapa_evento_p,nr_etapa_atual_sol_w);

		update	prescr_solucao_evento
		set		ie_evento_valido = 'N'
		where	nr_prescricao = nr_prescricao_p
		and		nr_seq_solucao = nr_seq_solucao_p
		and		ie_tipo_solucao = ie_tipo_solucao_p
		and		nr_etapa_evento = coalesce(nr_etapa_evento_p,nr_etapa_atual_sol_w)
		and		coalesce(ie_evento_valido,'S') = 'S'
		and		ie_alteracao = 37;

	elsif (ie_tipo_solucao_p = 2) then
  --suporte nutricional enteral
		begin

		if (ie_palm_p = 'S') and (dt_horario_p IS NOT NULL AND dt_horario_p::text <> '') then


			select	coalesce(max(nr_etapa_sol),0)
			into STRICT	nr_etapa_atual_sol_w
			from	prescr_mat_hor
			where	nr_prescricao = nr_prescricao_p
			and		nr_seq_material = nr_seq_solucao_p
			and		dt_horario = dt_horario_p;

			if (nr_etapa_atual_sol_w = 0) then

				nr_etapa_atual_sol_w	:= Obter_Etapa_Atual_NE(nr_prescricao_p,nr_seq_solucao_p);
			end if;

		else

			nr_etapa_atual_sol_w	:= Obter_Etapa_Atual_NE(nr_prescricao_p,nr_seq_solucao_p);

			if (ie_alteracao_p	= 3) then


				select	coalesce(max(obter_se_motivo_troca_frasco(a.nr_seq_motivo)),'N')
				into STRICT	ie_troca_w
				from	prescr_solucao_evento a
				where	a.ie_tipo_solucao 	= 2
				and		a.nr_prescricao 	= nr_prescricao_p
				and		a.nr_seq_material	= nr_seq_solucao_p
				and		a.ie_alteracao 		= 2
				and		a.nr_sequencia		= 	(
													SELECT	max(b.nr_sequencia)
													from	prescr_solucao_evento b
													where	b.nr_prescricao 			= nr_prescricao_p
													and		b.nr_seq_material			= a.nr_seq_material
													and		b.nr_seq_material 			= nr_seq_solucao_p
													and		b.ie_alteracao 				= 2
													and		coalesce(b.ie_evento_valido,'S') = 'S'
												)
				and		coalesce(a.ie_evento_valido,'S')	= 'S';

				if (ie_troca_w	= 'S') then

					nr_etapa_atual_sol_w := nr_etapa_atual_sol_w + 1;
				end if;

			end if;

		end if;

		select	coalesce(max(nr_seq_lote),0),
				coalesce(max(cd_material),0),
				coalesce(max(cd_motivo_baixa),0)
		into STRICT	nr_seq_lote_w,
				cd_material_w,
				cd_motivo_baixa_w
		from	prescr_mat_hor
		where	nr_prescricao	= nr_prescricao_p
		and		nr_seq_material	= nr_seq_solucao_p
		and (dt_horario		= dt_horario_p
		or		nr_etapa_sol	= nr_etapa_atual_sol_w);

		if (cd_motivo_baixa_w = 0) then

			select	coalesce(max(cd_motivo_baixa),0)
			into STRICT	cd_motivo_baixa_w
			from	prescr_material
			where	nr_prescricao = nr_prescricao_p
			and		nr_sequencia = nr_seq_solucao_p;
		end if;

		if (ie_permite_nova_sol_w	= 'N') and (ie_alteracao_p		= 1) then


			select	max(nr_atendimento)
			into STRICT	nr_atendimento_w
			from	prescr_medica
			where	nr_prescricao = nr_prescricao_p;

			select	count(*)
			into STRICT	cont_w
			from	prescr_medica b,
					prescr_material a where		nr_atendimento	= nr_atendimento_w
			and		a.nr_prescricao	= b.nr_prescricao
			and		((nr_sequencia <> nr_seq_solucao_p) or (a.nr_prescricao <> nr_prescricao_p))
			and		((coalesce(b.dt_suspensao::text, '') = ''
			and		coalesce(a.dt_suspensao::text, '') = ''
            and     b.cd_funcao_origem in (924, 950))
            or (b.cd_funcao_origem = 2314
            and     coalesce(cpoe_obter_dt_suspensao(a.nr_seq_dieta_cpoe, 'N')::text, '') = ''))
			and 	a.ie_agrupador = 8
			and		b.dt_inicio_prescr between clock_timestamp() - interval '20 days' and clock_timestamp() + interval '20 days'
			and		b.dt_validade_prescr between clock_timestamp() - interval '20 days' and clock_timestamp() + interval '20 days'
			and		obter_status_solucao_prescr(2,a.nr_prescricao,a.nr_sequencia) not in ('N', 'T') LIMIT 1;

			if (cont_w > 0) then

				-- Existem solucoes em andamento, nao e permitido iniciar uma nova solucao! Parametro [361].
				CALL Wheb_mensagem_pck.exibir_mensagem_abort(174651);
			end if;
		end if;

		select	max(dt_validade_prescr)
		into STRICT	dt_validade_prescr_w
		from	prescr_medica
		where	nr_prescricao	= nr_prescricao_p;

		if (ie_alteracao_p = 2) and
			((ie_permite_troca_val_w = 'N' AND ie_troca_frasco_w = 'S') or (ie_permite_troca_val_w = 'T')) and (dt_validade_prescr_w < dt_alteracao_p) then

			-- Voce nao tem permissao para iniciar a solucao e/ou realizar trocas de frasco na mesma apos a validade da sua prescricao ! Parametro[23].
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(174654);
		end if;

		--Tratar parametro 357
		if (cd_motivo_baixa_w = 0) then

			ie_impedir_w	:= Obter_Se_impede_adm(cd_material_w);

			if (ie_impedir_w = 'S') then

				if (ie_somente_com_baixa_w = 'S') then

					--so e possivel administrar uma medicacao apos o atendimento da mesma no atendimento da prescricao/lote! parametro [357]
					CALL wheb_mensagem_pck.exibir_mensagem_abort(173406);
				elsif (ie_somente_com_baixa_w = 'L') and (nr_seq_lote_w > 0) then

					select	max(dt_atend_farmacia)
					into STRICT	dt_atend_lote_w
					from	ap_lote
					where	nr_sequencia = nr_seq_lote_w;
					if (coalesce(dt_atend_lote_w::text, '') = '') then

						--so e possivel administrar uma medicacao apos o atendimento da mesma no atendimento da prescricao/lote! parametro [357]
						CALL wheb_mensagem_pck.exibir_mensagem_abort(173406);
					end if;
				elsif (ie_somente_com_baixa_w = 'E') and (nr_seq_lote_w > 0) then

					select	max(dt_entrega_setor)
					into STRICT	dt_entrega_setor_w
					from	ap_lote
					where	nr_sequencia = nr_seq_lote_w;
					if (coalesce(dt_entrega_setor_w::text, '') = '') then

						--so e possivel administrar uma medicacao apos a entrega da mesma no atendimento da prescricao/lote! parametro [357]
						CALL wheb_mensagem_pck.exibir_mensagem_abort(472055);
					end if;
        elsif (ie_somente_com_baixa_w = 'R')  and (nr_seq_lote_w IS NOT NULL AND nr_seq_lote_w::text <> '')  then

					select	MAX(dt_recebimento_setor)
					into STRICT	  dt_recebimento_setor_w
					from	  ap_lote
					where	  nr_sequencia = nr_seq_lote_w;

					if (coalesce(dt_recebimento_setor_w::text, '') = '') then
          	--Somente e possivel administrar uma medicacao, apos o recebimento da mesma no atendimento da prescricao/lote!
						CALL Wheb_mensagem_pck.Exibir_mensagem_abort(819419);
					end if;
				end if;
			end if;
		end if;

		/* obter dados solucao */

		qt_vel_infusao_w := coalesce(qt_vel_infusao_p,0);
		if (ie_alteracao_p = 1) and (ie_forma_infusao_p = 'V') and (qt_vel_infusao_w = 0) then

			begin
			select	coalesce(max(qt_vel_infusao),0)
			into STRICT	qt_vel_infusao_w
			from	prescr_material
			where	nr_prescricao = nr_prescricao_p
			and	nr_sequencia = nr_seq_solucao_p
			and	ie_agrupador = 8;
			end;
		end if;

		select	SUBSTR(MAX(obter_desc_material(cd_material)),1,255),
				MAX(nr_prescricao),
				MAX(qt_dose),
				MAX(cd_unidade_medida_dose),
				max(ie_via_aplicacao)
		into STRICT	ds_item_w,
				nr_prescricao_ww,
				qt_dose_ww,
				ds_unidade_medida_w,
				ie_via_aplicacao_w
		from	prescr_material
		where	nr_prescricao = nr_prescricao_p
		and	nr_sequencia = nr_seq_solucao_p
		and	ie_agrupador = 8;

		if (ie_alteracao_p in (2,4)) then
			cd_evolucao_w := Gerar_evolPaci_automa('SNE', nm_usuario_p, nr_atendimento_p, ds_item_w, nr_seq_horario_w, 'A', '', clock_timestamp(), nr_prescricao_ww, qt_dose_ww, ds_unidade_medida_w, ie_via_aplicacao_w, cd_evolucao_w);
		end if;

		/* obter sequencia */

		select	nextval('prescr_solucao_evento_seq')
		into STRICT	nr_sequencia_w
		;

    nr_seq_sol_evento_w := nr_sequencia_w;

		/* gerar evento */

		insert into prescr_solucao_evento(
			nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_prescricao,
			nr_seq_solucao,
			nr_seq_material,
			nr_seq_procedimento,
			nr_seq_nut,
			nr_seq_nut_neo,
			ie_forma_infusao,
			ie_tipo_dosagem,
			qt_dosagem,
			qt_vol_infundido,
			qt_vol_desprezado,
			cd_pessoa_fisica,
			ie_alteracao,
			dt_alteracao,
			ie_evento_valido,
			nr_seq_motivo,
			ds_observacao,
			ie_tipo_solucao,
			qt_volume_parcial,
			nr_seq_lote,
			nr_seq_assinatura,
			qt_min_pausa,
			ds_justificativa,
			dt_horario,
			nr_etapa_evento,
			cd_evolucao,
			nm_usuario_conf,
            IE_STERILE_PREPARATION,
			nr_seq_bomba_event)
		values (
			nr_sequencia_w,
			dt_atualizacao_w,
			nm_usuario_p,
			dt_atualizacao_w,
			nm_usuario_p,
			nr_prescricao_p,
			null,
			nr_seq_solucao_p,
			null,
			null,
			null,
			ie_forma_infusao_p,
			CASE WHEN qt_vel_infusao_w=0 THEN  null  ELSE ie_tipo_dosagem_p END ,
			CASE WHEN qt_vel_infusao_w=0 THEN  null  ELSE qt_vel_infusao_w END ,
			CASE WHEN qt_vol_infundido_p=0 THEN  null  ELSE qt_vol_infundido_p END ,
			CASE WHEN qt_vol_desprezado_p=0 THEN  null  ELSE qt_vol_desprezado_p END ,
			obter_dados_usuario_opcao(nm_usuario_p, 'C'),
			ie_alteracao_p,
			dt_evento_w,
			'S',
			CASE WHEN ie_alteracao_p=2 THEN  nr_seq_motivo_p WHEN ie_alteracao_p=5 THEN  nr_seq_motivo_p WHEN ie_alteracao_p=6 THEN  nr_seq_motivo_p  ELSE null END ,
			ds_observacao_w,
			ie_tipo_solucao_p,
			CASE WHEN qt_vol_infundido_p=0 THEN  null  ELSE qt_vol_infundido_p END ,
			nr_seq_lote_w,
			nr_seq_assinatura_p,
			qt_min_pausa_p,
			ds_justificativa_p,
			dt_horario_w,
			nr_etapa_atual_sol_w,
			cd_evolucao_w,
			nm_usuario_conf_p,
            IE_STERILE_PREPARATION_P,
			seq_bomba_infusao_p);

		/* atualizar status solucao */

		if (ie_alteracao_p = 1) then

			begin
			update	prescr_material
			set	ie_status = 'I',
				--dt_status = sysdate
				dt_status = dt_evento_w,
				qt_volume_adep = qt_vol_fase_p
			where	nr_prescricao = nr_prescricao_p
			and	nr_sequencia = nr_seq_solucao_p
			and	ie_agrupador = 8;

			CALL Gerar_proced_assoc_mat_conta(nr_prescricao_p, nr_seq_solucao_p, 'I', nm_usuario_p, 'G',dt_alteracao_p);

			if (ie_palm_p = 'S') and (coalesce(nr_etapa_atual_sol_w,0) > 0) then

				CALL Gerar_alteracao_horario_sne(nr_prescricao_p,nr_seq_solucao_p,nr_etapa_atual_sol_w,'I',nm_usuario_p);
			else
				CALL Gerar_alteracao_horario_sne(nr_prescricao_p,nr_seq_solucao_p,null,'I',nm_usuario_p);
			end if;

			if (ie_utiliza_servico_nut_w = 'S') then


				Select	min(nr_sequencia)
				into STRICT	nr_Seq_servico_sne_w
				from	nut_atend_serv_dia
				where	nr_Atendimento = nr_atendimento_p
				and	nr_prescricao = nr_prescricao_p
				and	nr_seq_material = nr_seq_solucao_p
				and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
				and 	ie_status_adep = 'N';

				update	nut_atend_serv_dia
				set	ie_status_adep	= 'I'
				where	nr_sequencia	= nr_Seq_servico_sne_w;

				update	prescr_solucao_evento
				set	nr_seq_nut_atend	= nr_Seq_servico_sne_w
				where	nr_sequencia		= nr_sequencia_w;

			end if;
			end;
		elsif (ie_alteracao_p = 2) then

			begin
			update	prescr_material
			set	ie_status = 'INT',
				--dt_status = sysdate
				dt_status = dt_evento_w
			where	nr_prescricao = nr_prescricao_p
			and	nr_sequencia = nr_seq_solucao_p
			and	ie_agrupador = 8;

			if (ie_palm_p = 'S') and (coalesce(nr_etapa_atual_sol_w,0) > 0) then

				CALL Gerar_alteracao_horario_sne(nr_prescricao_p,nr_seq_solucao_p,nr_etapa_atual_sol_w,'INT',nm_usuario_p);
			else
				CALL Gerar_alteracao_horario_sne(nr_prescricao_p,nr_seq_solucao_p,null,'INT',nm_usuario_p);
			end if;

			if (ie_utiliza_servico_nut_w = 'S') then

				Select	min(nr_sequencia)
				into STRICT	nr_Seq_servico_sne_w
				from	nut_atend_serv_dia
				where	nr_Atendimento = nr_atendimento_p
				and	nr_prescricao = nr_prescricao_p
				and	nr_seq_material = nr_seq_solucao_p
				and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
				and 	ie_status_adep = 'I';

				update	nut_atend_serv_dia
				set	ie_status_adep	= 'A',
					dt_fim_horario	= dt_evento_w,
					nm_usuario_adm	= nm_usuario_p
				where	nr_sequencia	= nr_Seq_servico_sne_w;

				update	prescr_solucao_evento
				set	nr_seq_nut_atend	= nr_Seq_servico_sne_w
				where	nr_sequencia		= nr_sequencia_w;
			end if;
			end;
		elsif (ie_alteracao_p = 3) then
  --Reiniciar
			begin
			update	prescr_material
			set	ie_status = 'I',
				--dt_status = sysdate
				dt_status = dt_evento_w
			where	nr_prescricao = nr_prescricao_p
			and	nr_sequencia = nr_seq_solucao_p
			and	ie_agrupador = 8;

			CALL Gerar_proced_assoc_mat_conta(nr_prescricao_p, nr_seq_solucao_p, 'R', nm_usuario_p, 'G',dt_alteracao_p);

			if (ie_palm_p = 'S') and (coalesce(nr_etapa_atual_sol_w,0) > 0) then

				CALL Gerar_alteracao_horario_sne(nr_prescricao_p,nr_seq_solucao_p,nr_etapa_atual_sol_w,'R',nm_usuario_p);

			else
				CALL Gerar_alteracao_horario_sne(nr_prescricao_p,nr_seq_solucao_p,null,'R',nm_usuario_p);
			end if;

			if (ie_utiliza_servico_nut_w = 'S') then

				Select	min(nr_sequencia)
				into STRICT	nr_Seq_servico_sne_w
				from	nut_atend_serv_dia
				where	nr_Atendimento = nr_atendimento_p
				and	nr_prescricao = nr_prescricao_p
				and	nr_seq_material = nr_seq_solucao_p
				and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
				and 	ie_status_adep = 'N';

				update	nut_atend_serv_dia
				set	ie_status_adep	= 'I'
				where	nr_sequencia	= nr_Seq_servico_sne_w;

				update	prescr_solucao_evento
				set	nr_seq_nut_atend	= nr_Seq_servico_sne_w
				where	nr_sequencia		= nr_sequencia_w;
			end if;
			end;
		elsif (ie_alteracao_p = 4) then

			begin
			if (VarConsisteEtapasPendentes_w = 'S') then

				select	count(*)
				into STRICT	qt_etapas_pendentes_w
				from	prescr_mat_hor where		nr_prescricao			= nr_prescricao_p
				and 	nr_seq_material			= nr_seq_solucao_p
				and 	coalesce(dt_inicio_horario::text, '') = ''
				and		coalesce(dt_suspensao::text, '') = ''
				and 	coalesce(dt_fim_horario::text, '') = ''
				and (coalesce(ie_horario_especial,'N') = 'N') LIMIT 1;
				if (qt_etapas_pendentes_w > 0) then

					-- E necessario realizar ou suspender as etapas pendentes antes de terminar a solucao! Parametro [544].
					CALL Wheb_mensagem_pck.exibir_mensagem_abort(206481);
				end if;
			end if;

			update	prescr_material
			set		ie_status = 'T',
					dt_status = dt_evento_w
			where	nr_prescricao = nr_prescricao_p
			and		nr_sequencia = nr_seq_solucao_p
			and		ie_agrupador = 8;

			CALL Gerar_proced_assoc_mat_conta(nr_prescricao_p, nr_seq_solucao_p, 'T', nm_usuario_p, 'G',dt_alteracao_p);

			if (ie_palm_p = 'S') and (coalesce(nr_etapa_atual_sol_w,0) > 0) then

				CALL Gerar_alteracao_horario_sne(nr_prescricao_p,nr_seq_solucao_p,nr_etapa_atual_sol_w,'T',nm_usuario_p);
			else
				CALL Gerar_alteracao_horario_sne(nr_prescricao_p,nr_seq_solucao_p,null,'T',nm_usuario_p);
			end if;

			if (ie_utiliza_servico_nut_w = 'S') then

				Select	min(nr_sequencia)
				into STRICT		nr_Seq_servico_sne_w
				from		nut_atend_serv_dia
				where	nr_Atendimento = nr_atendimento_p
				and		nr_prescricao = nr_prescricao_p
				and		nr_seq_material = nr_seq_solucao_p
				and		(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
				and 		ie_status_adep = 'I';

				update	nut_atend_serv_dia
				set		ie_status_adep	= 'A',
						dt_fim_horario	= dt_evento_w,
						nm_usuario_adm	= nm_usuario_p
				where	nr_sequencia	= nr_Seq_servico_sne_w;

				update	prescr_solucao_evento
				set		nr_seq_nut_atend	= nr_Seq_servico_sne_w
				where	nr_sequencia		= nr_sequencia_w;
			end if;
			end;

			if (ie_lancar_cta_sne_w = 'S') then

				if (ie_grava_log_rastr_w = 'S') then
					CALL adep_gerar_log_rastr(substr('GERAR_ALTERACAO_SOLUCAO_PRESCR C05' || chr(10) ||
						'{'||chr(10)||
						'"dt_horario_p" : "'||PKG_DATE_FORMATERS_TZ.TO_VARCHAR(dt_horario_p, 'timestamp', ESTABLISHMENT_TIMEZONE_UTILS.getTimeZone)||'",'||chr(10)||
						'"nr_atendimento_p" : "'||nr_atendimento_p||'",'||chr(10)||
						'"nr_etapa_atual_sol_w" : "'||nr_etapa_atual_sol_w||'",'||chr(10)||
						'"nr_prescricao_p" : "'||nr_prescricao_p||'"}',1,1500));
				end if;

				open C05;
				loop
				fetch C05 into
					nr_seq_horario_w,
					nr_seq_item_w;
				EXIT WHEN NOT FOUND; /* apply on C05 */
					nr_seq_map_w := gerar_estornar_adep_map(null, nr_seq_horario_w, null, 'G', dt_evento_w, nm_usuario_p, nr_seq_map_w, 'GAP', null, null);
				end loop;
				close C05;
			end if;

		elsif (ie_alteracao_p = 6) then

			begin
			ie_status_ant_w	:= obter_status_solucao_prescr(2, nr_prescricao_p, nr_seq_solucao_p);

			if (ie_status_ant_w = 'N') then
  /* Rafael em 20/6/8 OS97627 */

				begin
				dt_evento_w := coalesce(obter_data_inicio_prescr(nr_prescricao_p),dt_evento_w);
				end;
			end if;

			if (ie_status_ant_w = 'S') then

				ie_status_ant_w := 'N';
			end if;
			Select 	Max(ie_status)
			into STRICT	ie_status_atual_w
			from	prescr_material
			where	nr_prescricao = nr_prescricao_p
			and		nr_sequencia = nr_seq_solucao_p
			and		ie_agrupador = 8;


			update	prescr_material
			set		ie_status = CASE WHEN ie_status_ant_w='R' THEN  'I'  ELSE ie_status_ant_w END ,
					ie_suspenso  = NULL,
				--dt_status = sysdate
					dt_status = dt_evento_w
			where	nr_prescricao = nr_prescricao_p
			and		nr_sequencia = nr_seq_solucao_p
			and		ie_agrupador = 8;

			if	ie_status_ant_w in ('R','I') then


				if (ie_palm_p = 'S') and (coalesce(nr_etapa_atual_sol_w,0) > 0) then

					CALL Gerar_alteracao_horario_sne(nr_prescricao_p,nr_seq_solucao_p,nr_etapa_atual_sol_w,'RINTT',nm_usuario_p);
				else
					CALL Gerar_alteracao_horario_sne(nr_prescricao_p,nr_seq_solucao_p,null,'RINTT',nm_usuario_p);
				end if;

			elsif	((ie_status_atual_w = 'T' AND ie_status_ant_w = 'INT') or (ie_status_ant_w = 'II')) then


				if (ie_palm_p = 'S') and (coalesce(nr_etapa_atual_sol_w,0) > 0) then

					CALL Gerar_alteracao_horario_sne(nr_prescricao_p,nr_seq_solucao_p,nr_etapa_atual_sol_w,'RT',nm_usuario_p);
				else
					CALL Gerar_alteracao_horario_sne(nr_prescricao_p,nr_seq_solucao_p,null,'RT',nm_usuario_p);
				end if;

			elsif	ie_status_ant_w in ('N','INT') then

				if (ie_palm_p = 'S') and (coalesce(nr_etapa_atual_sol_w,0) > 0) then

					CALL Gerar_alteracao_horario_sne(nr_prescricao_p,nr_seq_solucao_p,nr_etapa_atual_sol_w,'RIR',nm_usuario_p);
				else
					CALL Gerar_alteracao_horario_sne(nr_prescricao_p,nr_seq_solucao_p,null,'RIR',nm_usuario_p);
				end if;
			end if;

			if (ie_lancar_cta_sne_w = 'S' AND ie_status_atual_w = 'T') then

				if (ie_grava_log_rastr_w = 'S') then
					CALL adep_gerar_log_rastr(substr('GERAR_ALTERACAO_SOLUCAO_PRESCR C05' || chr(10) ||
						'{'||chr(10)||
						'"dt_horario_p" : "'||PKG_DATE_FORMATERS_TZ.TO_VARCHAR(dt_horario_p, 'timestamp', ESTABLISHMENT_TIMEZONE_UTILS.getTimeZone)||'",'||chr(10)||
						'"nr_atendimento_p" : "'||nr_atendimento_p||'",'||chr(10)||
						'"nr_etapa_atual_sol_w" : "'||nr_etapa_atual_sol_w||'",'||chr(10)||
						'"nr_prescricao_p" : "'||nr_prescricao_p||'"}',1,1500));
				end if;

				for C05_w in C05 loop
				begin
					nr_seq_map_p => nr_seq_map_w := gerar_estornar_adep_map(nr_seq_processo_p => null, nr_seq_horario_p => C05_w.nr_seq_horario, nr_seq_area_prep_p => null, ie_gerar_estornar_p => 'E', dt_gerar_estornar_p => dt_evento_w, nm_usuario_p => nm_usuario_p, nr_seq_map_p => nr_seq_map_w, ie_momento_p => 'GAP', qt_material_p => null, nr_seq_lote_fornec_p => null);
				end;
				end loop;

			end if;

			end;
		end if;
		end;
	elsif (ie_tipo_solucao_p 	= 3) and (coalesce(nr_prescricao_p,0)	<> 0) then
  --hemocomponente
		begin
		/* obter dados solucao */

		qt_vel_infusao_w := coalesce(qt_vel_infusao_p,0);
		if (ie_alteracao_p = 1) and (ie_forma_infusao_p = 'V') and (qt_vel_infusao_w = 0) then

			begin
			select	coalesce(max(qt_veloc_inf_hemo),0)
			into STRICT	qt_vel_infusao_w
			from	prescr_procedimento
			where	nr_prescricao = nr_prescricao_p
			and	nr_sequencia = nr_seq_solucao_p
			and	(nr_seq_solic_sangue IS NOT NULL AND nr_seq_solic_sangue::text <> '');
		--	and	nr_seq_derivado is not null;
			end;
		end if;

		select	coalesce(max('S'),'N')
		into STRICT	ie_terminou_etapa_w
		from	prescr_solucao_evento
		where	nr_prescricao = nr_prescricao_p
		and		ie_alteracao = 4
		and		coalesce(ie_evento_valido, 'N') = 'S'
		and		nr_sequencia 	in (	SELECT	max(nr_sequencia)
										from	prescr_solucao_evento
										where	nr_prescricao = nr_prescricao_p
										and		nr_seq_procedimento = nr_seq_solucao_p
										and		coalesce(ie_evento_valido, 'N') = 'S'
										and		coalesce(cd_funcao,1113) = 88);
		/* obter sequencia */

		select	nextval('prescr_solucao_evento_seq')
		into STRICT	nr_sequencia_w
		;

    nr_seq_sol_evento_w := nr_sequencia_w;

		/* gerar evento */

		insert into prescr_solucao_evento(
			nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_prescricao,
			nr_seq_solucao,
			nr_seq_material,
			nr_seq_procedimento,
			nr_seq_nut,
			nr_seq_nut_neo,
			ie_forma_infusao,
			qt_volume_fase,
			ie_tipo_dosagem,
			qt_dosagem,
			qt_vol_infundido,
			qt_vol_desprezado,
			cd_pessoa_fisica,
			ie_alteracao,
			dt_alteracao,
			ie_evento_valido,
			nr_seq_motivo,
			ds_observacao,
			ie_tipo_solucao,
			qt_volume_parcial,
			qt_tempo_infusao,
			nr_seq_lote,
			nr_seq_assinatura,
			ds_justificativa,
			dt_horario,
			nr_seq_reserva,
			nr_seq_item_reserva,
			nr_seq_prod_reserva,
			nm_usuario_conf,
            IE_STERILE_PREPARATION,
			nr_seq_bomba_event)
		values (
			nr_sequencia_w,
			dt_atualizacao_w,
			nm_usuario_p,
			dt_atualizacao_w,
			nm_usuario_p,
			nr_prescricao_p,
			null,
			null,
			nr_seq_solucao_p,
			null,
			null,
			ie_forma_infusao_p,
			CASE WHEN ie_alteracao_p=1 THEN  qt_vol_fase_p WHEN ie_alteracao_p=3 THEN  qt_vol_fase_p  ELSE null END ,
			CASE WHEN qt_vel_infusao_w=0 THEN  null  ELSE ie_tipo_dosagem_p END ,
			CASE WHEN qt_vel_infusao_w=0 THEN  null  ELSE qt_vel_infusao_w END ,
			CASE WHEN qt_vol_infundido_p=0 THEN  null  ELSE qt_vol_infundido_p END ,
			CASE WHEN qt_vol_desprezado_p=0 THEN  null  ELSE qt_vol_desprezado_p END ,
			obter_dados_usuario_opcao(nm_usuario_p, 'C'),
			ie_alteracao_p,
			dt_evento_w,
			'S',
			CASE WHEN ie_alteracao_p=2 THEN  nr_seq_motivo_p WHEN ie_alteracao_p=5 THEN  nr_seq_motivo_p WHEN ie_alteracao_p=6 THEN  nr_seq_motivo_p  ELSE null END ,
			ds_observacao_w,
			ie_tipo_solucao_p,
			CASE WHEN qt_vol_infundido_p=0 THEN  null  ELSE qt_vol_infundido_p END ,
			CASE WHEN qt_tempo_infusao_p=0 THEN  null  ELSE qt_tempo_infusao_p END ,
			nr_seq_lote_w,
			nr_seq_assinatura_p,
			ds_justificativa_p,
			dt_horario_w,
			nr_seq_reserva_p,
			nr_seq_item_reserva_p,
			nr_seq_prod_reserva_p,
			nm_usuario_conf_p,
            IE_STERILE_PREPARATION_P,
			seq_bomba_infusao_p);

		nr_etapa_atual_sol_w := obter_etapa_atual_proc(nr_prescricao_p, nr_seq_solucao_p);


		update	prescr_proc_hor
		set	dt_primeira_checagem  = NULL,
			nm_usuario = nm_usuario_p
		where	nr_prescricao = nr_prescricao_p
		and	nr_seq_procedimento = nr_seq_solucao_p
		and	nr_etapa = coalesce(nr_etapa_evento_p,nr_etapa_atual_sol_w);

		update	prescr_solucao_evento
		set	ie_evento_valido = 'N'
		where	nr_prescricao = nr_prescricao_p
		and	nr_seq_procedimento = nr_seq_solucao_p
		and	ie_tipo_solucao = ie_tipo_solucao_p
		and	nr_etapa_evento = coalesce(nr_etapa_evento_p,nr_etapa_atual_sol_w)
		and	coalesce(ie_evento_valido,'S') = 'S'
		and	ie_alteracao = 37;			



		/* atualizar status solucao */

		if	(ie_palm_p = 'S' AND ie_tipo_solucao_p = 3) then


			select	coalesce(max(ie_status), 'N')
			into STRICT	ie_status_hm_w
			from	prescr_procedimento
			where	nr_prescricao = nr_prescricao_p
			and		nr_sequencia = nr_seq_solucao_p
			and		(nr_seq_solic_sangue IS NOT NULL AND nr_seq_solic_sangue::text <> '');

			if (ie_alteracao_p = 1) then


			    select	coalesce(max('S'),'N')
				into STRICT	ie_trocou_frasco_w
				from	prescr_solucao_evento
				where	nr_prescricao = nr_prescricao_p
				and		ie_alteracao = 2
				and		coalesce(ie_evento_valido, 'N') = 'S'
				and		nr_sequencia 	in (	SELECT	max(nr_sequencia)
												from	prescr_solucao_evento
												where	nr_prescricao = nr_prescricao_p
												and		ie_alteracao = 2
												and		nr_seq_procedimento = nr_seq_solucao_p
												and		coalesce(ie_evento_valido, 'N') = 'S')
				and		obter_se_motivo_troca_frasco(nr_seq_motivo) = 'S';

			    if	(ie_status_hm_w = 'INT' AND ie_trocou_frasco_w = 'N' AND ie_terminou_etapa_w <> 'S') then

					CALL Wheb_mensagem_pck.exibir_mensagem_abort(1047021);
				end if;
			elsif (ie_alteracao_p = 3) then

				if	(ie_status_hm_w = 'I' AND ie_terminou_etapa_w <> 'S') then

					CALL Wheb_mensagem_pck.exibir_mensagem_abort(1047021);
				end if;
			end if;

		end if;

		if (ie_alteracao_p = 1) then

			begin
			update	prescr_procedimento
			set	ie_status = 'I',
				--dt_status = sysdate
				dt_status = dt_evento_w,
				qt_volume_adep = qt_vol_fase_p
			where	nr_prescricao = nr_prescricao_p
			and	nr_sequencia = nr_seq_solucao_p
			and	(nr_seq_solic_sangue IS NOT NULL AND nr_seq_solic_sangue::text <> '');
			--and	nr_seq_derivado is not null;
			select 	max(nr_sequencia)
			into STRICT	nr_seq_reserva_w
			from	san_reserva
			where	nr_prescricao = nr_prescricao_p;

			select	coalesce(max(nr_sequencia),0),
					max(ie_status)
			into STRICT	nr_seq_transfusao_w,
					ie_status_transfusao_w
			from	san_transfusao
			where	nr_seq_reserva	= nr_seq_reserva_w;

			update	san_transfusao
			set		ie_status		= 'A'			
			where	nr_sequencia 		= nr_seq_transfusao_w;

			CALL Gerar_alteracao_horario_Hemot(nr_prescricao_p,nr_seq_solucao_p,null,'I',nm_usuario_p);

			if (ie_lancar_cta_sangue_w = 'S') then

				begin
				select	cd_procedimento,
					ie_origem_proced,
					qt_procedimento,
					cd_setor_atendimento,
					cd_medico_exec,
					ie_lado,
					nr_seq_exame,
					nr_seq_proc_interno
				into STRICT	cd_procedimento_w,
					ie_origem_proced_w,
					qt_procedimento_w,
					cd_setor_atendimento_w,
					cd_medico_exec_proc_w,
					ie_lado_w,
					nr_seq_exame_w,
					nr_seq_proc_interno_w
				from	prescr_procedimento
				where	nr_prescricao = nr_prescricao_p
				and	nr_sequencia = nr_seq_solucao_p;

				if (coalesce(cd_setor_atendimento_w::text, '') = '') then

					begin
					select	cd_setor_atendimento
					into STRICT	cd_setor_atendimento_w
					from	prescr_medica
					where	nr_prescricao = nr_prescricao_p;
					end;
				end if;

				cont_w := 0;

				select	count(nr_sequencia)
				into STRICT	cont_w
				from	procedimento_paciente
				where	cd_procedimento			= cd_procedimento_w
				and		ie_origem_proced		= ie_origem_proced_w
				and		nr_atendimento			= nr_atendimento_p
				and		nr_prescricao			= nr_prescricao_p  LIMIT 1;

				if (cont_w = 0) then

					CALL Gerar_Proc_Pac_Item_Prescr(nr_prescricao_p, nr_seq_solucao_p,nr_atendimento_p, null, nr_seq_proc_interno_w, cd_procedimento_w, ie_origem_proced_w, qt_procedimento_w, cd_setor_atendimento_w, 1, clock_timestamp(), nm_usuario_p, cd_medico_exec_proc_w, nr_seq_exame_w, ie_lado_w,null);
				end if;

				update	prescr_procedimento
				set	ie_status_execucao = 20
				where	nr_prescricao = nr_prescricao_p
				and	nr_sequencia = nr_seq_solucao_p;

				if (ie_dispara_regra_aut_w = 'S') then

					select	max(nr_atendimento)
					into STRICT	nr_atendimento_w
					from	prescr_medica
					where	nr_prescricao = nr_prescricao_p;

					select	max(nr_sequencia)
					into STRICT	nr_seq_w
					from	procedimento_paciente
					where	nr_prescricao = nr_prescricao_p
					and	nr_sequencia_prescricao = nr_seq_solucao_p;

					CALL gerar_lancamento_automatico(nr_atendimento_w,null,34,nm_usuario_p,nr_seq_w,null,null,null,null,null);
				end if;

				end;
			end if;
			end;
		elsif (ie_alteracao_p = 2) then

			begin
			update	prescr_procedimento
			set	ie_status = 'INT',
				--dt_status = sysdate
				dt_status = dt_evento_w
			where	nr_prescricao = nr_prescricao_p
			and	nr_sequencia = nr_seq_solucao_p
			and	(nr_seq_solic_sangue IS NOT NULL AND nr_seq_solic_sangue::text <> '');
			--and	nr_seq_derivado is not null;
			CALL Gerar_alteracao_horario_Hemot(nr_prescricao_p,nr_seq_solucao_p,null,'INT',nm_usuario_p,nr_seq_motivo_p);

			end;
		elsif (ie_alteracao_p = 3) then

			begin
			update	prescr_procedimento
			set	ie_status = 'I',
				--dt_status = sysdate
				dt_status = dt_evento_w,
				qt_volume_adep = qt_vol_fase_p
			where	nr_prescricao = nr_prescricao_p
			and	nr_sequencia = nr_seq_solucao_p
			and	(nr_seq_solic_sangue IS NOT NULL AND nr_seq_solic_sangue::text <> '');
			--and	nr_seq_derivado is not null;
			CALL Gerar_alteracao_horario_Hemot(nr_prescricao_p,nr_seq_solucao_p,null,'R',nm_usuario_p,nr_seq_motivo_p);
			end;
		elsif (ie_alteracao_p = 4) then

			begin

			--Verificar quantas etapas estao pendentes
			select	count(nr_sequencia)
			into STRICT	qt_etapas_pendentes_w
			from	prescr_proc_hor
			where	nr_prescricao		= nr_prescricao_p
			and 	nr_seq_procedimento	= nr_seq_solucao_p
			and		coalesce(coalesce(dt_fim_horario, dt_suspensao)::text, '') = ''
			and (coalesce(ie_horario_especial,'N') = 'N');

			ie_status_atual_w := 'T';
			--No palm da pra "Desligar" a etapa, mas nao pode finalizar a Hemoterapia, apenas a etapa, por isso deixamos ela como INT.
			if (ie_palm_p = 'S') and (qt_etapas_pendentes_w > 1) then

				ie_status_atual_w := 'INT';
			end if;

			update	prescr_procedimento
			set		ie_status = ie_status_atual_w,
					--dt_status = sysdate
					dt_status = dt_evento_w
			where	nr_prescricao = nr_prescricao_p
			and	nr_sequencia = nr_seq_solucao_p
			and	(nr_seq_solic_sangue IS NOT NULL AND nr_seq_solic_sangue::text <> '');

			CALL Gerar_alteracao_horario_Hemot(nr_prescricao_p,nr_seq_solucao_p,null,'T',nm_usuario_p);

			select 	max(nr_sequencia)
			into STRICT	nr_seq_reserva_w
			from	san_reserva
			where	nr_prescricao = nr_prescricao_p;

			select	coalesce(max(nr_sequencia),0),
					max(ie_status)
			into STRICT	nr_seq_transfusao_w,
					ie_status_transfusao_w
			from	san_transfusao
			where	nr_seq_reserva	= nr_seq_reserva_w;

			update	san_transfusao
			set		ie_status		= 'F'			
			where	nr_sequencia 		= nr_seq_transfusao_w;	

			end;
		elsif (ie_alteracao_p = 6) then


			ie_status_ant_w	:= obter_status_solucao_prescr(3, nr_prescricao_p, nr_seq_solucao_p);

			select	coalesce(max(nr_sequencia),0)
			into STRICT	nr_seq_evento_w
			from	prescr_solucao_evento
			where	nr_prescricao = nr_prescricao_p
			and	nr_seq_procedimento = nr_seq_solucao_p
			and	ie_tipo_solucao = 3
			and	ie_evento_valido = 'S'
			and	ie_alteracao <> 6
			and	((ie_alteracao <= 7) or (ie_alteracao = 12));

			update	prescr_solucao_evento
			set		ie_evento_valido = 'N'
			where	nr_sequencia = nr_seq_evento_w;

			select	coalesce(max('S'), 'N')
			into STRICT	ie_etapa_susp_w
			from	prescr_solucao_evento
			where	nr_sequencia = nr_seq_evento_w
			and		ie_alteracao = 12;

			--Revertendo uma suspensao de etapa.
			if (ie_etapa_susp_w = 'S') then

				CALL Gerar_alteracao_horario_Hemot(nr_prescricao_p,nr_seq_solucao_p,null,'RVS',nm_usuario_p);
			else

				Select 	Max(ie_status)
				into STRICT	ie_status_atual_w
				from	prescr_procedimento
				where	nr_prescricao = nr_prescricao_p
				and	nr_sequencia = nr_seq_solucao_p
				and	(nr_seq_solic_sangue IS NOT NULL AND nr_seq_solic_sangue::text <> '');

				if	ie_status_ant_w in ('R','I') then

					CALL Gerar_alteracao_horario_Hemot(nr_prescricao_p,nr_seq_solucao_p,null,'RIR',nm_usuario_p);
				elsif (ie_status_atual_w = 'T') then

					CALL Gerar_alteracao_horario_Hemot(nr_prescricao_p,nr_seq_solucao_p,null,'RT',nm_usuario_p);
				elsif	ie_status_ant_w in ('N','INT') then

					CALL Gerar_alteracao_horario_Hemot(nr_prescricao_p,nr_seq_solucao_p,null,'RINTT',nm_usuario_p);
				end if;

				update	prescr_procedimento
				set		ie_status = CASE WHEN ie_status_atual_w='T' THEN 'I'  ELSE CASE WHEN ie_status_ant_w='I' THEN 'N' WHEN ie_status_ant_w='R' THEN 'INT'  ELSE 'I' END  END ,
						dt_status = dt_evento_w,
						ie_suspenso = 'N'
				where	nr_prescricao = nr_prescricao_p
				and	nr_sequencia = nr_seq_solucao_p
				and	(nr_seq_solic_sangue IS NOT NULL AND nr_seq_solic_sangue::text <> '');

			end if;

		end if;
		end;
	elsif (ie_tipo_solucao_p = 4) then
  --npt adulta
		begin
		/* obter dados solucao */

		qt_vel_infusao_w := coalesce(qt_vel_infusao_p,0);
		if (ie_alteracao_p = 1) and (ie_forma_infusao_p = 'V') and (qt_vel_infusao_w = 0) then

			begin
			select	coalesce(max(qt_gotejamento_npt),0)
			into STRICT	qt_vel_infusao_w
			from	nut_paciente
			where	nr_prescricao = nr_prescricao_p
			and	nr_sequencia = nr_seq_solucao_p;
			end;
		end if;
		
		select	max(dt_horario)
		into STRICT	dt_horario_w
		from	nut_paciente_hor
		where	nr_seq_nut_pac = nr_seq_solucao_p;				

		if (ie_consiste_npt_em_andamento_w = 'N') then

			select	count(*)
			into STRICT	qt_npt_w
			from	prescr_medica b,
					nut_paciente a where		a.nr_prescricao = b.nr_prescricao
			and		b.nr_prescricao <> nr_prescricao_p
			and		b.nr_atendimento = nr_atendimento_p
			and		b.dt_prescricao between clock_timestamp() - interval '30 days' and clock_timestamp()
			and		coalesce(b.dt_suspensao::text, '') = ''
			and		coalesce(a.ie_suspenso,'N') = 'N'
			and		ie_status in ('I','INT','R') LIMIT 1;

			if (qt_npt_w > 0) then

				-- Existem outras NPTs que nao foram terminadas!
				CALL Wheb_mensagem_pck.exibir_mensagem_abort(213053);
			end if;

		end if;

		nr_etapa_w	:= Obter_Etapa_Atual_NPT(nr_prescricao_p, nr_seq_solucao_p);

		if (nr_etapa_w = 0) then

			nr_etapa_w := 1;
		end if;

		cd_evolucao_w := Gerar_evolPaci_automa('NPT', nm_usuario_p, nr_atendimento_p, Wheb_mensagem_pck.get_Texto(305646), null, 'A', '', clock_timestamp(), nr_prescricao_p, qt_vol_infundido_p, obter_unid_med_usua('ml'), null, cd_evolucao_w);

		/* obter sequencia */

		select	nextval('prescr_solucao_evento_seq')
		into STRICT	nr_sequencia_w
		;

    nr_seq_sol_evento_w := nr_sequencia_w;

		/* gerar evento */

		insert into prescr_solucao_evento(
			nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_prescricao,
			nr_seq_solucao,
			nr_seq_material,
			nr_seq_procedimento,
			nr_seq_nut,
			nr_seq_nut_neo,
			ie_forma_infusao,
			ie_tipo_dosagem,
			qt_dosagem,
			qt_vol_infundido,
			qt_vol_desprezado,
			cd_pessoa_fisica,
			ie_alteracao,
			dt_alteracao,
			ie_evento_valido,
			nr_seq_motivo,
			ds_observacao,
			ie_tipo_solucao,
			nr_seq_lote,
			nr_seq_assinatura,
			ds_justificativa,
			dt_horario,
			nr_etapa_evento,
			cd_evolucao,
			nm_usuario_conf,
            IE_STERILE_PREPARATION,
			nr_seq_bomba_event)
		values (
			nr_sequencia_w,
			dt_atualizacao_w,
			nm_usuario_p,
			dt_atualizacao_w,
			nm_usuario_p,
			nr_prescricao_p,
			null,
			null,
			null,
			nr_seq_solucao_p,
			null,
			ie_forma_infusao_p,
			CASE WHEN qt_vel_infusao_w=0 THEN  null  ELSE ie_tipo_dosagem_p END ,
			CASE WHEN qt_vel_infusao_w=0 THEN  null  ELSE qt_vel_infusao_w END ,
			CASE WHEN qt_vol_infundido_p=0 THEN  null  ELSE qt_vol_infundido_p END ,
			CASE WHEN qt_vol_desprezado_p=0 THEN  null  ELSE qt_vol_desprezado_p END ,
			obter_dados_usuario_opcao(nm_usuario_p, 'C'),
			ie_alteracao_p,
			dt_evento_w,
			'S',
			CASE WHEN ie_alteracao_p=2 THEN  nr_seq_motivo_p WHEN ie_alteracao_p=5 THEN  nr_seq_motivo_p WHEN ie_alteracao_p=6 THEN  nr_seq_motivo_p  ELSE null END ,
			ds_observacao_w,
			ie_tipo_solucao_p,
			nr_seq_lote_w,
			nr_seq_assinatura_p,
			ds_justificativa_p,
			dt_horario_w,
			nr_etapa_w,
			cd_evolucao_w,
			nm_usuario_conf_p,
            IE_STERILE_PREPARATION_P,
			seq_bomba_infusao_p);

		nr_etapa_pendencia_w := coalesce(nr_etapa_evento_p,nr_etapa_w);

		/* atualizar status solucao */

		if (ie_alteracao_p = 1) then

			begin
			update	nut_paciente
			set	ie_status = 'I',
				dt_status = dt_evento_w
			where	nr_prescricao = nr_prescricao_p
			and		nr_sequencia = nr_seq_solucao_p;

			update	nut_paciente_hor
			set		ie_status = 'I'
			where	nr_seq_nut_pac	= nr_seq_solucao_p
			and		nr_etapa		= nr_etapa_w
			and		coalesce(ie_horario_especial,'N')	= 'N';

			end;
		elsif (ie_alteracao_p = 2) then

			begin
			update	nut_paciente
			set	ie_status = 'INT',
				dt_status = dt_evento_w,
				qt_volume_adep = obter_vol_nut_pac_fase(nr_sequencia,obter_etapas_adep_sol(4,nr_prescricao,nr_sequencia))
			where	nr_prescricao = nr_prescricao_p
			and	nr_sequencia = nr_seq_solucao_p;

			update	nut_paciente_hor
			set		ie_status = 'INT'
			where	nr_seq_nut_pac	= nr_seq_solucao_p
			and		nr_etapa		= nr_etapa_w
			and		coalesce(ie_horario_especial,'N')	= 'N';

			end;
		elsif (ie_alteracao_p = 3) then

			begin
			update	nut_paciente
			set	ie_status = 'I',
				dt_status = dt_evento_w
			where	nr_prescricao = nr_prescricao_p
			and	nr_sequencia = nr_seq_solucao_p;

			update	nut_paciente_hor
			set		ie_status = 'T'
			where	nr_seq_nut_pac	= nr_seq_solucao_p
			and		nr_etapa		= nr_etapa_w - 1
			and		coalesce(ie_horario_especial,'N')	= 'N';

			update	nut_paciente_hor
			set		ie_status = 'I'
			where	nr_seq_nut_pac	= nr_seq_solucao_p
			and		nr_etapa		= nr_etapa_w
			and		coalesce(ie_horario_especial,'N')	= 'N';

			end;
		elsif (ie_alteracao_p = 4) then

			begin
			update	nut_paciente
			set	ie_status = 'T',
				--dt_status = sysdate
				dt_status = dt_evento_w
			where	nr_prescricao = nr_prescricao_p
			and	nr_sequencia = nr_seq_solucao_p;

			update	nut_paciente_hor
			set		ie_status = 'T'
			where	nr_seq_nut_pac	= nr_seq_solucao_p
			and		nr_etapa		= nr_etapa_w
			and		coalesce(ie_horario_especial,'N')	= 'N';

			update	nut_paciente_hor
			set		ie_status = 'T'
			where	nr_seq_nut_pac	= nr_seq_solucao_p
			and		nr_etapa		= nr_etapa_w - 1
			and		coalesce(ie_horario_especial,'N')	= 'N';

			if (ie_lancar_cta_npt_w = 'S') then

				if (ie_grava_log_rastr_w = 'S') then
					CALL adep_gerar_log_rastr(substr('GERAR_ALTERACAO_SOLUCAO_PRESCR C03' || chr(10) ||
						'{'||chr(10)||
						'"nr_atendimento_p" : "'||nr_atendimento_p||'",'||chr(10)||
						'"nr_prescricao_p" : "'||nr_prescricao_p||'"}',1,1500));
				end if;

				open C03;
				loop
				fetch C03 into
					nr_seq_horario_w,
					nr_seq_item_w;
				EXIT WHEN NOT FOUND; /* apply on C03 */
					nr_seq_map_w := gerar_estornar_adep_map(null, nr_seq_horario_w, null, 'G', dt_evento_w, nm_usuario_p, nr_seq_map_w, 'GAP', null, null);
				end loop;
				close C03;
			end if;
			end;
		elsif (ie_alteracao_p = 6) then

			begin
			ie_status_ant_w	:= obter_status_solucao_prescr(4, nr_prescricao_p, nr_seq_solucao_p);

			if (ie_status_ant_w = 'N') then
  /* Rafael em 20/6/8 OS97627 */

				begin
				dt_evento_w := coalesce(obter_data_inicio_prescr(nr_prescricao_p),dt_evento_w);
				end;
			end if;

			update	nut_paciente
			set	ie_status = CASE WHEN ie_status_ant_w='R' THEN  'I'  ELSE ie_status_ant_w END ,
				--dt_status = sysdate
				dt_status = dt_evento_w,
				qt_volume_adep = obter_vol_nut_pac_fase(nr_sequencia,CASE WHEN obter_etapas_adep_sol(4,nr_prescricao,nr_sequencia)=0 THEN 1  ELSE obter_etapas_adep_sol(4,nr_prescricao,nr_sequencia) END )
			where	nr_prescricao = nr_prescricao_p
			and	nr_sequencia = nr_seq_solucao_p;

			update	nut_paciente_hor
			set		ie_status = CASE WHEN ie_status_ant_w='R' THEN  'I'  ELSE ie_status_ant_w END
			where	nr_seq_nut_pac	= nr_seq_solucao_p
			and		nr_etapa		= nr_etapa_w
			and		coalesce(ie_horario_especial,'N')	= 'N';

			end;
		end if;
		end;
	elsif (ie_tipo_solucao_p = 5) then
  --npt neo
		begin
		/* obter dados solucao */

		qt_vel_infusao_w := coalesce(qt_vel_infusao_p,0);
		if (ie_alteracao_p = 1) and (ie_forma_infusao_p = 'V') and (qt_vel_infusao_w = 0) then

			begin
			select	coalesce(max(qt_gotejo_npt),0)
			into STRICT	qt_vel_infusao_w
			from	nut_pac
			where	nr_prescricao = nr_prescricao_p
			and	nr_sequencia = nr_seq_solucao_p;
			end;
		end if;
		
		select	max(dt_horario)
		into STRICT	dt_horario_w
		from	nut_paciente_hor
		where	nr_seq_nut_protocolo = nr_seq_solucao_p;		

		cd_evolucao_w := Gerar_evolPaci_automa('NPT', nm_usuario_p, nr_atendimento_p, Wheb_mensagem_pck.get_Texto(305647), null, 'A', '', clock_timestamp(), nr_prescricao_p, qt_vol_infundido_p, obter_unid_med_usua('ml'), null, cd_evolucao_w);

		/* obter sequencia */

		select	nextval('prescr_solucao_evento_seq')
		into STRICT	nr_sequencia_w
		;

    nr_seq_sol_evento_w := nr_sequencia_w;

		/* gerar evento */

		insert into prescr_solucao_evento(
			nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_prescricao,
			nr_seq_solucao,
			nr_seq_material,
			nr_seq_procedimento,
			nr_seq_nut,
			nr_seq_nut_neo,
			ie_forma_infusao,
			ie_tipo_dosagem,
			qt_dosagem,
			qt_vol_infundido,
			qt_vol_desprezado,
			cd_pessoa_fisica,
			ie_alteracao,
			dt_alteracao,
			ie_evento_valido,
			nr_seq_motivo,
			ds_observacao,
			ie_tipo_solucao,
			nr_seq_lote,
			nr_seq_assinatura,
			ds_justificativa,
			dt_horario,
			cd_evolucao,
			nm_usuario_conf,
            IE_STERILE_PREPARATION,
			nr_seq_bomba_event)
		values (
			nr_sequencia_w,
			dt_atualizacao_w,
			nm_usuario_p,
			dt_atualizacao_w,
			nm_usuario_p,
			nr_prescricao_p,
			null,
			null,
			null,
			null,
			nr_seq_solucao_p,
			ie_forma_infusao_p,
			CASE WHEN qt_vel_infusao_w=0 THEN  null  ELSE ie_tipo_dosagem_p END ,
			CASE WHEN qt_vel_infusao_w=0 THEN  null  ELSE qt_vel_infusao_w END ,
			CASE WHEN qt_vol_infundido_p=0 THEN  null  ELSE qt_vol_infundido_p END ,
			CASE WHEN qt_vol_desprezado_p=0 THEN  null  ELSE qt_vol_desprezado_p END ,
			obter_dados_usuario_opcao(nm_usuario_p, 'C'),
			ie_alteracao_p,
			dt_evento_w,
			'S',
			CASE WHEN ie_alteracao_p=2 THEN  nr_seq_motivo_p WHEN ie_alteracao_p=5 THEN  nr_seq_motivo_p WHEN ie_alteracao_p=6 THEN  nr_seq_motivo_p  ELSE null END ,
			ds_observacao_w,
			ie_tipo_solucao_p,
			nr_seq_lote_w,
			nr_seq_assinatura_p,
			ds_justificativa_p,
			dt_horario_w,
			cd_evolucao_w,
			nm_usuario_conf_p,
            IE_STERILE_PREPARATION_P,
			seq_bomba_infusao_p);

		/* atualizar status solucao */

		if (ie_alteracao_p = 1) then

			begin
			update	nut_pac
			set	ie_status = 'I',
				--dt_status = sysdate
				dt_status = dt_evento_w
			where	nr_prescricao = nr_prescricao_p
			and	nr_sequencia = nr_seq_solucao_p;
			end;
		elsif (ie_alteracao_p = 2) then

			begin
			update	nut_pac
			set	ie_status = 'INT',
				--dt_status = sysdate
				dt_status = dt_evento_w
			where	nr_prescricao = nr_prescricao_p
			and	nr_sequencia = nr_seq_solucao_p;
			end;
		elsif (ie_alteracao_p = 3) then

			begin
			update	nut_pac
			set	ie_status = 'I',
				--dt_status = sysdate
				dt_status = dt_evento_w
			where	nr_prescricao = nr_prescricao_p
			and	nr_sequencia = nr_seq_solucao_p;
			end;
		elsif (ie_alteracao_p = 4) then

			begin
			update	nut_pac
			set	ie_status = 'T',
				--dt_status = sysdate
				dt_status = dt_evento_w
			where	nr_prescricao = nr_prescricao_p
			and	nr_sequencia = nr_seq_solucao_p;

			if (ie_lancar_cta_npt_w = 'S') then

				if (ie_grava_log_rastr_w = 'S') then
					CALL adep_gerar_log_rastr(substr('GERAR_ALTERACAO_SOLUCAO_PRESCR C03' || chr(10) ||
						'{'||chr(10)||
						'"nr_atendimento_p" : "'||nr_atendimento_p||'",'||chr(10)||
						'"nr_prescricao_p" : "'||nr_prescricao_p||'"}',1,1500));
				end if;

				open C03;
				loop
				fetch C03 into
					nr_seq_horario_w,
					nr_seq_item_w;
				EXIT WHEN NOT FOUND; /* apply on C03 */
					nr_seq_map_w := gerar_estornar_adep_map(null, nr_seq_horario_w, null, 'G', dt_evento_w, nm_usuario_p, nr_seq_map_w, 'GAP', null, null);
				end loop;
				close C03;
			end if;

			end;
		elsif (ie_alteracao_p = 6) then

			begin
			ie_status_ant_w	:= obter_status_solucao_prescr(5, nr_prescricao_p, nr_seq_solucao_p);

			if (ie_status_ant_w = 'N') then
  /* Rafael em 20/6/8 OS97627 */

				begin
				dt_evento_w := coalesce(obter_data_inicio_prescr(nr_prescricao_p),dt_evento_w);
				end;
			end if;

			update	nut_pac
			set	ie_status = CASE WHEN ie_status_ant_w='R' THEN  'I'  ELSE ie_status_ant_w END ,
				--dt_status = sysdate
				dt_status = dt_evento_w
			where	nr_prescricao = nr_prescricao_p
			and	nr_sequencia = nr_seq_solucao_p;
			end;
		end if;
		end;
	elsif (ie_tipo_solucao_p = 6) then
  --npt Adulto2
		begin
		/* obter dados solucao */

		qt_vel_infusao_w := coalesce(qt_vel_infusao_p,0);
		if (ie_alteracao_p = 1) and (ie_forma_infusao_p = 'V') and (qt_vel_infusao_w = 0) then

			begin
			select	coalesce(max(qt_gotejo_npt),0)
			into STRICT	qt_vel_infusao_w
			from	nut_pac
			where	nr_prescricao = nr_prescricao_p
			and	nr_sequencia = nr_seq_solucao_p;
			end;
		end if;
		
		select	max(dt_horario)
		into STRICT	dt_horario_w
		from	nut_paciente_hor
		where	nr_seq_nut_protocolo = nr_seq_solucao_p;			

		if (ie_consiste_npt_em_andamento_w = 'N') then

			select	count(*)
			into STRICT	qt_npt_w
			from	prescr_medica b,
					nut_pac a where		a.nr_prescricao = b.nr_prescricao
			and		b.nr_prescricao <> nr_prescricao_p
			and		b.nr_atendimento = nr_atendimento_p
			and		b.dt_prescricao between clock_timestamp() - interval '30 days' and clock_timestamp()
			and		coalesce(b.dt_suspensao::text, '') = ''
			and		coalesce(a.ie_suspenso,'N') = 'N'
			and		ie_status in ('I','INT','R') LIMIT 1;

			if (qt_npt_w > 0) then

				-- Existem outras NPTs que nao foram terminadas!
				CALL Wheb_mensagem_pck.exibir_mensagem_abort(213053);
			end if;

		end if;

		nr_etapa_w	:= Obter_Etapa_Atual_NPT_prot(nr_prescricao_p, nr_seq_solucao_p);

		if (nr_etapa_w = 0) then

			nr_etapa_w := 1;
		end if;

		cd_evolucao_w := Gerar_evolPaci_automa('NPT', nm_usuario_p, nr_atendimento_p, Wheb_mensagem_pck.get_Texto(305648), null, 'A', '', clock_timestamp(), nr_prescricao_p, qt_vol_infundido_p, obter_unid_med_usua('ml'), null, cd_evolucao_w);

		/* obter sequencia */

		select	nextval('prescr_solucao_evento_seq')
		into STRICT	nr_sequencia_w
		;

    nr_seq_sol_evento_w := nr_sequencia_w;

		/* gerar evento */

		insert into prescr_solucao_evento(
			nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_prescricao,
			nr_seq_solucao,
			nr_seq_material,
			nr_seq_procedimento,
			nr_seq_nut,
			nr_seq_nut_neo,
			ie_forma_infusao,
			ie_tipo_dosagem,
			qt_dosagem,
			qt_vol_infundido,
			qt_vol_desprezado,
			cd_pessoa_fisica,
			ie_alteracao,
			dt_alteracao,
			ie_evento_valido,
			nr_seq_motivo,
			ds_observacao,
			ie_tipo_solucao,
			nr_seq_lote,
			nr_seq_assinatura,
			ds_justificativa,
			dt_horario,
			nr_etapa_evento,
			cd_evolucao,
			nm_usuario_conf,
            IE_STERILE_PREPARATION,
			nr_seq_bomba_event)
		values (
			nr_sequencia_w,
			dt_atualizacao_w,
			nm_usuario_p,
			dt_atualizacao_w,
			nm_usuario_p,
			nr_prescricao_p,
			null,
			null,
			null,
			null,
			nr_seq_solucao_p,
			ie_forma_infusao_p,
			CASE WHEN qt_vel_infusao_w=0 THEN  null  ELSE ie_tipo_dosagem_p END ,
			CASE WHEN qt_vel_infusao_w=0 THEN  null  ELSE qt_vel_infusao_w END ,
			CASE WHEN qt_vol_infundido_p=0 THEN  null  ELSE qt_vol_infundido_p END ,
			CASE WHEN qt_vol_desprezado_p=0 THEN  null  ELSE qt_vol_desprezado_p END ,
			obter_dados_usuario_opcao(nm_usuario_p, 'C'),
			ie_alteracao_p,
			dt_evento_w,
			'S',
			CASE WHEN ie_alteracao_p=2 THEN  nr_seq_motivo_p WHEN ie_alteracao_p=5 THEN  nr_seq_motivo_p WHEN ie_alteracao_p=6 THEN  nr_seq_motivo_p  ELSE null END ,
			ds_observacao_w,
			ie_tipo_solucao_p,
			nr_seq_lote_w,
			nr_seq_assinatura_p,
			ds_justificativa_p,
			dt_horario_w,
			nr_etapa_w,
			cd_evolucao_w,
			nm_usuario_conf_p,
            IE_STERILE_PREPARATION_P,
			seq_bomba_infusao_p);

		/* atualizar status solucao */

		if (ie_alteracao_p = 1) then

			begin
			update	nut_pac
			set	ie_status = 'I',
				--dt_status = sysdate
				dt_status = dt_evento_w
			where	nr_prescricao = nr_prescricao_p
			and	nr_sequencia = nr_seq_solucao_p;

			update	nut_paciente_hor
			set		ie_status = 'I'
			where	nr_seq_nut_protocolo	= nr_seq_solucao_p
			and		nr_etapa				= nr_etapa_w
			and		coalesce(ie_horario_especial,'N')	= 'N';

			end;
		elsif (ie_alteracao_p = 2) then

			begin

			update	nut_pac
			set	ie_status = 'INT',
				--dt_status = sysdate
				dt_status = dt_evento_w
			where	nr_prescricao = nr_prescricao_p
			and	nr_sequencia = nr_seq_solucao_p;

			update	nut_paciente_hor
			set		ie_status = 'INT'
			where	nr_seq_nut_protocolo	= nr_seq_solucao_p
			and		nr_etapa				= nr_etapa_w
			and		coalesce(ie_horario_especial,'N')	= 'N';

			end;
		elsif (ie_alteracao_p = 3) then

			begin

			update	nut_pac
			set	ie_status = 'I',
				--dt_status = sysdate
				dt_status = dt_evento_w
			where	nr_prescricao = nr_prescricao_p
			and	nr_sequencia = nr_seq_solucao_p;

			update	nut_paciente_hor
			set		ie_status = 'T',
					dt_fim_horario 			= dt_evento_w
			where	nr_seq_nut_protocolo	= nr_seq_solucao_p
			and		nr_etapa				= nr_etapa_w - 1
			and		coalesce(ie_horario_especial,'N')	= 'N';

			update	nut_paciente_hor
			set		ie_status = 'I'
			where	nr_seq_nut_protocolo	= nr_seq_solucao_p
			and		nr_etapa				= nr_etapa_w
			and		coalesce(ie_horario_especial,'N')	= 'N';

			end;
		elsif (ie_alteracao_p = 4) then

			begin
			update	nut_pac
			set	ie_status = 'T',
				--dt_status = sysdate
				dt_status = dt_evento_w
			where	nr_prescricao = nr_prescricao_p
			and	nr_sequencia = nr_seq_solucao_p;

			update	nut_paciente_hor
			set		ie_status = 'T',
					dt_fim_horario = dt_evento_w
			where	nr_seq_nut_protocolo	= nr_seq_solucao_p
			and		nr_etapa		= nr_etapa_w
			and		coalesce(ie_horario_especial,'N')	= 'N';

			update	nut_paciente_hor
			set		ie_status = 'T',
					dt_fim_horario = dt_evento_w
			where	nr_seq_nut_protocolo	= nr_seq_solucao_p
			and		nr_etapa		= nr_etapa_w - 1
			and		coalesce(ie_horario_especial,'N')	= 'N';

			if (ie_lancar_cta_npt_w = 'S') then

				if (ie_grava_log_rastr_w = 'S') then
					CALL adep_gerar_log_rastr(substr('GERAR_ALTERACAO_SOLUCAO_PRESCR C03' || chr(10) ||
						'{'||chr(10)||
						'"nr_atendimento_p" : "'||nr_atendimento_p||'",'||chr(10)||
						'"nr_prescricao_p" : "'||nr_prescricao_p||'"}',1,1500));
				end if;

				open C03;
				loop
				fetch C03 into
					nr_seq_horario_w,
					nr_seq_item_w;
				EXIT WHEN NOT FOUND; /* apply on C03 */
					nr_seq_map_w := gerar_estornar_adep_map(null, nr_seq_horario_w, null, 'G', dt_evento_w, nm_usuario_p, nr_seq_map_w, 'GAP', null, null);
				end loop;
				close C03;
			end if;

			end;
		elsif (ie_alteracao_p = 6) then

			begin
			ie_status_ant_w	:= obter_status_solucao_prescr(6, nr_prescricao_p, nr_seq_solucao_p);

			if (ie_status_ant_w = 'N') then
  /* Rafael em 20/6/8 OS97627 */

				begin
				dt_evento_w := coalesce(obter_data_inicio_prescr(nr_prescricao_p),dt_evento_w);
				end;
			end if;


			update	nut_pac
			set		ie_status = CASE WHEN ie_status_ant_w='R' THEN  'I'  ELSE ie_status_ant_w END ,
					dt_status = dt_evento_w
			where	nr_prescricao = nr_prescricao_p
			and		nr_sequencia = nr_seq_solucao_p;

			update	nut_paciente_hor
			set		ie_status 			 = CASE WHEN ie_status_ant_w='R' THEN  'I'  ELSE ie_status_ant_w END ,
					dt_fim_horario       = CASE WHEN ie_status_ant_w='T' THEN  dt_fim_horario  ELSE null END
			where	nr_seq_nut_protocolo = nr_seq_solucao_p
			and		nr_etapa			 = nr_etapa_w
			and		coalesce(ie_horario_especial,'N')	= 'N';

			select 	CASE WHEN ie_status_ant_w='R' THEN  'I'  ELSE ie_status_ant_w END
			into STRICT	ie_status_npt_w
			;

			if (ie_status_npt_w in ('N', 'INT')) then
				update	prescr_mat_hor
				set		dt_fim_horario  = NULL,
						nm_usuario_adm  = NULL,
						dt_suspensao  = NULL,
						nm_usuario_susp  = NULL
				where	(nr_seq_lote IS NOT NULL AND nr_seq_lote::text <> '')
				and		nr_prescricao = nr_prescricao_p
				and		dt_horario = dt_horario_p
				and		ie_agrupador = 11
				and		nr_seq_material in (	SELECT	a.nr_sequencia
												from	prescr_material a
												where	a.nr_prescricao = nr_prescricao_p
												and		a.nr_seq_nut_pac = nr_seq_solucao_p);
			end if;

			if (ie_lancar_cta_npt_w = 'S') then
				select	coalesce(max(nr_sequencia),0)
				into STRICT	nr_seq_evento_w
				from	prescr_solucao_evento	a
				where	a.nr_prescricao = nr_prescricao_p
				and		a.nr_seq_nut_neo = nr_seq_solucao_p
				and		a.ie_tipo_solucao = 6
				and		a.ie_evento_valido = 'N'
				and		a.ie_alteracao < 6;

				select	max(ie_alteracao)
				into STRICT	ie_alteracao_sol_w
				from	prescr_solucao_evento	a
				where	a.nr_sequencia	= nr_seq_evento_w;

				if (ie_alteracao_sol_w = 4) then --Terminar
					if (ie_grava_log_rastr_w = 'S') then
						CALL adep_gerar_log_rastr(substr('GERAR_ALTERACAO_SOLUCAO_PRESCR C03' || chr(10) ||
							'{'||chr(10)||
							'"nr_atendimento_p" : "'||nr_atendimento_p||'",'||chr(10)||
							'"nr_prescricao_p" : "'||nr_prescricao_p||'"}',1,1500));
					end if;

					for c03_w in c03 loop
						begin
						nr_seq_map_w := gerar_estornar_adep_map(null, c03_w.nr_seq_horario, null, 'E', dt_evento_w, nm_usuario_p, nr_seq_map_w, 'GAP', null, null);
						end;
					end loop;
				end if;
			end if;
			end;
		end if;
		end;
	elsif (ie_tipo_solucao_p = 7) then
  --npt Pediatrica
		begin
		/* obter dados solucao */

		qt_vel_infusao_w := coalesce(qt_vel_infusao_p,0);
		if (ie_alteracao_p = 1) and (ie_forma_infusao_p = 'V') and (qt_vel_infusao_w = 0) then

			begin
			select	coalesce(max(qt_gotejo_npt),0)
			into STRICT	qt_vel_infusao_w
			from	nut_pac
			where	nr_prescricao = nr_prescricao_p
			and	nr_sequencia = nr_seq_solucao_p;
			end;
		end if;
		
		select	max(dt_horario)
		into STRICT	dt_horario_w
		from	nut_paciente_hor
		where	nr_seq_nut_protocolo = nr_seq_solucao_p;		

		cd_evolucao_w := Gerar_evolPaci_automa('NPT', nm_usuario_p, nr_atendimento_p, Wheb_mensagem_pck.get_Texto(305649), null, 'A', '', clock_timestamp(), nr_prescricao_p, qt_vol_infundido_p, obter_unid_med_usua('ml'), null, cd_evolucao_w);

		/* obter sequencia */

		select	nextval('prescr_solucao_evento_seq')
		into STRICT	nr_sequencia_w
		;

    nr_seq_sol_evento_w := nr_sequencia_w;

		/* gerar evento */

		insert into prescr_solucao_evento(
			nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_prescricao,
			nr_seq_solucao,
			nr_seq_material,
			nr_seq_procedimento,
			nr_seq_nut,
			nr_seq_nut_neo,
			ie_forma_infusao,
			ie_tipo_dosagem,
			qt_dosagem,
			qt_vol_infundido,
			qt_vol_desprezado,
			cd_pessoa_fisica,
			ie_alteracao,
			dt_alteracao,
			ie_evento_valido,
			nr_seq_motivo,
			ds_observacao,
			ie_tipo_solucao,
			nr_seq_lote,
			nr_seq_assinatura,
			ds_justificativa,
			dt_horario,
			cd_evolucao,
			nm_usuario_conf,
            IE_STERILE_PREPARATION,
			nr_seq_bomba_event)
		values (
			nr_sequencia_w,
			dt_atualizacao_w,
			nm_usuario_p,
			dt_atualizacao_w,
			nm_usuario_p,
			nr_prescricao_p,
			null,
			null,
			null,
			null,
			nr_seq_solucao_p,
			ie_forma_infusao_p,
			CASE WHEN qt_vel_infusao_w=0 THEN  null  ELSE ie_tipo_dosagem_p END ,
			CASE WHEN qt_vel_infusao_w=0 THEN  null  ELSE qt_vel_infusao_w END ,
			CASE WHEN qt_vol_infundido_p=0 THEN  null  ELSE qt_vol_infundido_p END ,
			CASE WHEN qt_vol_desprezado_p=0 THEN  null  ELSE qt_vol_desprezado_p END ,
			obter_dados_usuario_opcao(nm_usuario_p, 'C'),
			ie_alteracao_p,
			dt_evento_w,
			'S',
			CASE WHEN ie_alteracao_p=2 THEN  nr_seq_motivo_p WHEN ie_alteracao_p=5 THEN  nr_seq_motivo_p WHEN ie_alteracao_p=6 THEN  nr_seq_motivo_p  ELSE null END ,
			ds_observacao_w,
			ie_tipo_solucao_p,
			nr_seq_lote_w,
			nr_seq_assinatura_p,
			ds_justificativa_p,
			dt_horario_w,
			cd_evolucao_w,
			nm_usuario_conf_p,
            IE_STERILE_PREPARATION_P,
			seq_bomba_infusao_p);

		/* atualizar status solucao */

		if (ie_alteracao_p = 1) then

			begin
			update	nut_pac
			set	ie_status = 'I',
				--dt_status = sysdate
				dt_status = dt_evento_w
			where	nr_prescricao = nr_prescricao_p
			and	nr_sequencia = nr_seq_solucao_p;
			end;
		elsif (ie_alteracao_p = 2) then

			begin
			update	nut_pac
			set	ie_status = 'INT',
				--dt_status = sysdate
				dt_status = dt_evento_w
			where	nr_prescricao = nr_prescricao_p
			and	nr_sequencia = nr_seq_solucao_p;
			end;
		elsif (ie_alteracao_p = 3) then

			begin
			update	nut_pac
			set	ie_status = 'I',
				--dt_status = sysdate
				dt_status = dt_evento_w
			where	nr_prescricao = nr_prescricao_p
			and	nr_sequencia = nr_seq_solucao_p;
			end;
		elsif (ie_alteracao_p = 4) then

			begin
			update	nut_pac
			set	ie_status = 'T',
				--dt_status = sysdate
				dt_status = dt_evento_w
			where	nr_prescricao = nr_prescricao_p
			and	nr_sequencia = nr_seq_solucao_p;

			if (ie_lancar_cta_npt_w = 'S') then

				if (ie_grava_log_rastr_w = 'S') then
					CALL adep_gerar_log_rastr(substr('GERAR_ALTERACAO_SOLUCAO_PRESCR C03' || chr(10) ||
						'{'||chr(10)||
						'"nr_atendimento_p" : "'||nr_atendimento_p||'",'||chr(10)||
						'"nr_prescricao_p" : "'||nr_prescricao_p||'"}',1,1500));
				end if;

				open C03;
				loop
				fetch C03 into
					nr_seq_horario_w,
					nr_seq_item_w;
				EXIT WHEN NOT FOUND; /* apply on C03 */
					nr_seq_map_w := gerar_estornar_adep_map(null, nr_seq_horario_w, null, 'G', dt_evento_w, nm_usuario_p, nr_seq_map_w, 'GAP', null, null);
				end loop;
				close C03;
			end if;

			end;
		elsif (ie_alteracao_p = 6) then

			begin
			ie_status_ant_w	:= obter_status_solucao_prescr(7, nr_prescricao_p, nr_seq_solucao_p);

			if (ie_status_ant_w = 'N') then
  /* Rafael em 20/6/8 OS97627 */

				begin
				dt_evento_w := coalesce(obter_data_inicio_prescr(nr_prescricao_p),dt_evento_w);
				end;
			end if;

			update	nut_pac
			set	ie_status = CASE WHEN ie_status_ant_w='R' THEN  'I'  ELSE ie_status_ant_w END ,
				--dt_status = sysdate
				dt_status = dt_evento_w
			where	nr_prescricao = nr_prescricao_p
			and	nr_sequencia = nr_seq_solucao_p;
			end;
		end if;
		end;
	end if;

	/* gerar forma de infusao */

	if (ie_alteracao_p = 1) then

		begin
		CALL definir_forma_infusao_solucao(ie_tipo_solucao_p,nr_prescricao_p,nr_seq_solucao_p,ie_forma_infusao_p);
		end;
	end if;

	/* definir setor execucao solucao */

	if (ie_alteracao_p in (1,4)) then

		begin
		if (ie_alteracao_p = 1) then

			begin
			CALL definir_setor_exec_adep(nr_atendimento_p,to_char(ie_tipo_solucao_p),nr_prescricao_p,nr_seq_solucao_p,null,'I');
			end;
		else
			begin
			CALL definir_setor_exec_adep(nr_atendimento_p,to_char(ie_tipo_solucao_p),nr_prescricao_p,nr_seq_solucao_p,null,'F');
			end;
		end if;
		end;
	end if;

	/* calcular duracao eventos */

	CALL calcular_duracao_evento_sol(ie_tipo_solucao_p,nr_prescricao_p,nr_seq_solucao_p);

	/* calcular tempo infusao solucao */

	CALL gerar_calculo_infusao_solucao(ie_tipo_solucao_p, nr_prescricao_p, nr_seq_solucao_p, ie_alteracao_p, dt_evento_w, nr_sequencia_w);

	ie_gera_sem_certificado_w	:= 'N';

	if (wheb_assist_pck.get_gerar_sem_certificado = 'S') then
		ie_gera_sem_certificado_w := adep_obter_se_assin_perfil(50513, obter_perfil_ativo); --ADEP - Eventos da solucao
	end if;

	if	((wheb_assist_pck.get_cd_certificado IS NOT NULL AND wheb_assist_pck.get_cd_certificado::text <> '') or (ie_gera_sem_certificado_w = 'S')) and (coalesce(nr_seq_assinatura_p,0) = 0) then
		ds_log_npt_w :=  'nr_prescricao_p' || nr_prescricao_p ||
					     'nr_atendimento_p' || nr_atendimento_p ||
						 'nm_usuario_p'    || nm_usuario_p ||
						 'ie_tipo_solucao_p' || ie_tipo_solucao_p ||
						 'nr_seq_solucao_p'  || nr_seq_solucao_p ||
						 'ie_alteracao_p' || ie_alteracao_p	||
						 'dt_evento_w' || dt_evento_w ||
						 'nr_seq_assinatura_p' || nr_seq_assinatura_p ||
						 'nr_etapa_pendencia_w' || nr_etapa_pendencia_w ||
						 'nr_sequencia_w' || nr_sequencia_w ||
						 'funcao_ativa' || Obter_Funcao_Ativa;


		INSERT INTO log_tasy(dt_atualizacao, nm_usuario, cd_log, ds_log)
		VALUES (clock_timestamp(), nm_usuario_p, 98765, ds_log_npt_w);


		CALL Gerar_registro_pendente_PEP('ADEP',nr_prescricao_p,obter_pessoa_atendimento(nr_atendimento_p,'C'),nr_atendimento_p,nm_usuario_p,'A',null,obter_tipo_solucao_adep(ie_tipo_solucao_p),null,null,null,null,null,null,null,null,null,nr_seq_solucao_p,coalesce(nr_etapa_pendencia_w,0),null,null,null,nr_sequencia_w);
	end if;

	end;
elsif (coalesce(nr_seq_reserva_p,0) > 0) and
	((coalesce(nr_seq_item_reserva_p,0) > 0) or (coalesce(nr_seq_prod_reserva_p,0) > 0)) then

	CALL Wheb_assist_pck.set_informacoes_usuario(cd_estabelecimento_p, obter_perfil_ativo, nm_usuario_p);

	ie_cobra_transf_finalizar_w	:= Wheb_assist_pck.obterParametroFuncao(1113,484);
	ie_gerar_transf_iniciar_w	:= Wheb_assist_pck.obterParametroFuncao(1113,624);

	/* validar data evento */

	if (dt_alteracao_p IS NOT NULL AND dt_alteracao_p::text <> '') and (coalesce(ie_palm_p,'N') <> 'S') then

		dt_evento_w := dt_alteracao_p;
	else
		dt_evento_w := dt_atualizacao_w;
	end if;

	qt_vel_infusao_w := coalesce(qt_vel_infusao_p,0);

	if (nr_seq_sangue_p IS NOT NULL AND nr_seq_sangue_p::text <> '') then

		select 	max(c.nr_sequencia)
		into STRICT	nr_seq_solucao_w
		from 	san_reserva_prod a,
				san_producao b,
				prescr_procedimento c
		where 	a.nr_seq_producao 	= b.nr_sequencia
		and 	b.nr_seq_derivado 	= c.nr_seq_derivado
		and 	a.nr_seq_reserva 	= nr_seq_reserva_p
		and 	b.nr_sangue 		= nr_seq_sangue_p
		and 	c.nr_prescricao 	= nr_prescricao_p
		and 	(c.nr_seq_solic_sangue IS NOT NULL AND c.nr_seq_solic_sangue::text <> '');

	end if;

  	if (coalesce(nr_seq_solucao_w, 0) = 0) and (coalesce(nr_seq_item_reserva_p, 0) > 0) then
		select  max(c.nr_seq_prescr)
		into STRICT    nr_seq_solucao_w
		from	prescr_medica     a,
				san_reserva       b,
				san_reserva_item  c
		where   a.nr_prescricao   =   b.nr_prescricao
		and     b.nr_sequencia    =   c.nr_seq_reserva
		and     a.nr_prescricao   =   nr_prescricao_p
		and     c.nr_seq_item     =   nr_seq_item_reserva_p
		and     c.nr_seq_reserva  =   nr_seq_reserva_p;
	else
		select	max(nr_sequencia)
		into STRICT 	nr_seq_solucao_w
		from	prescr_procedimento
		where	(nr_seq_derivado IS NOT NULL AND nr_seq_derivado::text <> '')
		and		(nr_seq_solic_sangue IS NOT NULL AND nr_seq_solic_sangue::text <> '')
		and		nr_prescricao = nr_prescricao_p;
	end if;

	/* obter sequencia */

	select	nextval('prescr_solucao_evento_seq')
	into STRICT	nr_sequencia_w
	;

  nr_seq_sol_evento_w := nr_sequencia_w;

	/* gerar evento */

	insert into prescr_solucao_evento(
		nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_seq_material,
		nr_seq_procedimento,
		nr_seq_nut,
		nr_seq_nut_neo,
		ie_forma_infusao,
		ie_tipo_dosagem,
		qt_dosagem,
		qt_vol_infundido,
		qt_vol_desprezado,
		qt_volume_parcial,
		cd_pessoa_fisica,
		ie_alteracao,
		dt_alteracao,
		ie_evento_valido,
		nr_seq_motivo,
		ds_observacao,
		ie_tipo_solucao,
		qt_volume_fase,
		nr_etapa_evento,
		ie_tipo_analgesia,
		ie_pca_modo_prog,
		qt_vol_infusao_pca,
		ie_um_fluxo_pca,
		qt_bolus_pca,
		ie_um_bolus_pca,
		qt_intervalo_bloqueio,
		qt_dose_inicial_pca,
		ie_um_dose_inicio_pca,
		qt_limite_quatro_hora,
		ie_um_limite_pca,
		qt_limite_uma_hora,
		ie_um_limite_hora_pca,
		qt_dose_terapeutica,
		nr_unid_terapeutica,
		nr_seq_reserva,
		nr_seq_item_reserva,
		nr_seq_prod_reserva,
		qt_tempo_infusao,
		nr_seq_lote,
		nr_seq_assinatura,
		ds_justificativa,
		dt_horario,
		nr_prescricao,
		nm_usuario_conf,
        IE_STERILE_PREPARATION,
		nr_seq_bomba_event)
	values (
		nr_sequencia_w,
		dt_atualizacao_w,
		nm_usuario_p,
		dt_atualizacao_w,
		nm_usuario_p,
		null,
		nr_seq_solucao_w,
		null,
		null,
		ie_forma_infusao_p,
		CASE WHEN qt_vel_infusao_w=0 THEN  null  ELSE ie_tipo_dosagem_p END ,
		CASE WHEN qt_vel_infusao_w=0 THEN  null  ELSE qt_vel_infusao_w END ,
		CASE WHEN qt_vol_infundido_p=0 THEN  null  ELSE qt_vol_infundido_p + coalesce(qt_vol_parcial_p,0) END ,
		CASE WHEN qt_vol_desprezado_p=0 THEN  null  ELSE qt_vol_desprezado_p END ,
		CASE WHEN qt_vol_infundido_p=0 THEN  null  ELSE qt_vol_infundido_p END ,
		obter_dados_usuario_opcao(nm_usuario_p, 'C'),
		ie_alteracao_p,
		dt_evento_w,
		'S',
		CASE WHEN ie_alteracao_p=2 THEN  nr_seq_motivo_p WHEN ie_alteracao_p=5 THEN  nr_seq_motivo_p WHEN ie_alteracao_p=6 THEN  nr_seq_motivo_p WHEN ie_alteracao_p=53 THEN  nr_seq_motivo_p  ELSE null END ,
		ds_observacao_w,
		ie_tipo_solucao_p,
		qt_vol_fase_p,
		coalesce(nr_etapa_evento_p,0),
		ie_tipo_analgesia_p,
		ie_pca_modo_prog_p,
		qt_vol_infusao_pca_p,
		ie_um_fluxo_pca_p,
		qt_bolus_pca_p,
		ie_um_bolus_pca_p,
		qt_intervalo_bloqueio_p,
		qt_dose_inicial_pca_p,
		ie_um_dose_inicio_pca_p,
		qt_limite_quatro_hora_p,
		ie_um_limite_pca_p,
		qt_limite_uma_hora_p,
		ie_um_limite_hora_pca_p,
		qt_dose_terapeutica_p,
		nr_unid_terapeutica_p,
		nr_seq_reserva_p,
		coalesce(nr_seq_item_reserva_p,0),
		coalesce(nr_seq_prod_reserva_p,0),
		CASE WHEN qt_tempo_infusao_p=0 THEN  null  ELSE qt_tempo_infusao_p END ,
		nr_seq_lote_w,
		nr_seq_assinatura_p,
		ds_justificativa_p,
		dt_horario_w,
		nr_prescricao_p,
		nm_usuario_conf_p,
        IE_STERILE_PREPARATION_P,
		seq_bomba_infusao_p);

	/*Atualizar status da hemoterapia*/

	if (coalesce(nr_seq_item_reserva_p,0) > 0) then

		select	max(nr_Seq_Producao)
		into STRICT	nr_Seq_Producao_w
		from	san_reserva_prod
		where	coalesce(nr_seq_reserva,0)	= nr_seq_reserva_p
		and	coalesce(nr_sequencia,0)	= nr_seq_prod_reserva_p;

		select	coalesce(max(nr_sequencia),0),
			max(ie_status)
		into STRICT	nr_seq_transfusao_w,
			ie_status_transfusao_w
		from	san_transfusao
		where	nr_seq_reserva	= nr_seq_reserva_p;

		if (ie_alteracao_p = 1) then
  --Iniciar
			update	san_reserva_item
			set	ie_status_adep	= 'I'
			where	nr_seq_reserva	= nr_seq_reserva_p
			and	nr_seq_item	= nr_seq_item_reserva_p;

			update	prescr_procedimento
			set	ie_status = 'I',
				dt_status = dt_evento_w,
				qt_volume_adep = qt_vol_fase_p
			where	nr_prescricao = nr_prescricao_p
			and	(nr_seq_solic_sangue IS NOT NULL AND nr_seq_solic_sangue::text <> '');

			select 	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
			into STRICT	ie_trans_existente_w
			from	san_transfusao
			where	nr_sequencia = nr_seq_transfusao_w;

			if (ie_trans_existente_w = 'N') then


				if (ie_gerar_transf_iniciar_w = 'S') then

					nr_seq_transfusao_w := gerar_transfusao_reserva(nr_seq_reserva_p, obter_pf_usuario(nm_usuario_p, 'C'), nm_usuario_p, 'S', 'N', cd_estabelecimento_p, nr_seq_transfusao_w);
				end if;
			end if;


		elsif (ie_alteracao_p = 2) then
  --Interromper
			update	san_reserva_item
			set	ie_status_adep	= 'INT'
			where	nr_seq_reserva	= nr_seq_reserva_p
			and	nr_seq_item	= nr_seq_item_reserva_p;

			update	prescr_procedimento
			set	ie_status = 'INT',
				dt_status = dt_evento_w
			where	nr_prescricao = nr_prescricao_p
			and	(nr_seq_solic_sangue IS NOT NULL AND nr_seq_solic_sangue::text <> '');

		elsif (ie_alteracao_p = 3) then
  --Reiniciar
			update	san_reserva_item
			set	ie_status_adep	= 'R'
			where	nr_seq_reserva	= nr_seq_reserva_p
			and	nr_seq_item	= nr_seq_item_reserva_p;

			update	prescr_procedimento
			set	ie_status = 'R',
				dt_status = dt_evento_w,
				qt_volume_adep = qt_vol_fase_p
			where	nr_prescricao = nr_prescricao_p
			and	(nr_seq_solic_sangue IS NOT NULL AND nr_seq_solic_sangue::text <> '');

		elsif (ie_alteracao_p = 4) then
  --Terminar
			update	san_reserva_item
			set	ie_status_adep	= 'T'
			where	nr_seq_reserva	= nr_seq_reserva_p
			and	nr_seq_item	= nr_seq_item_reserva_p;

            if (pkg_i18n.get_user_locale = 'es_BO') then
                CALL gerar_sangue_pend_pac(nr_seq_reserva_p, nr_seq_item_reserva_p);
            end if;

			update	prescr_procedimento
			set	ie_status = 'T',
				dt_status = dt_evento_w
			where	nr_prescricao = nr_prescricao_p
			and	(nr_seq_solic_sangue IS NOT NULL AND nr_seq_solic_sangue::text <> '');

			select	sum(qt_vol_infundido)
			into STRICT	qt_total_infundido_w
			from	prescr_solucao_evento
			where	nr_seq_reserva			= nr_seq_reserva_p
			and	coalesce(nr_seq_prod_reserva,0)	= nr_seq_prod_reserva_p
			and	ie_tipo_solucao	= 3
			and	ie_alteracao		in (1,2,3,4)
			and	coalesce(ie_evento_valido,'N') = 'S';

			update	san_producao
			set	dt_termino_util	= dt_evento_w,
				qt_vol_transf	= qt_total_infundido_w
			where	nr_sequencia	= nr_Seq_Producao_w;

			select	coalesce(max(nr_sequencia),0)
			into STRICT	nr_seq_transfusao_w
			from	san_transfusao
			where	nr_seq_reserva	= nr_seq_reserva_p;

			--Verifica se e a ultima reserva a ser terminada
			select	count(nr_sequencia)
			into STRICT	qt_reserva_pend_w
			from	san_reserva_prod where		nr_seq_reserva	= nr_seq_reserva_p
			and		nr_sequencia	<> nr_seq_prod_reserva_p
			and		coalesce(ie_status_adep,'N')	<> 'T' LIMIT 1;

			--Se esta e a ultima reserva a ser terminada, entao a transfusao e finalizada
			if (qt_reserva_pend_w	= 0) and (nr_seq_transfusao_w	<> 0) then


				update	san_transfusao
				set	ie_status = 'F',
					dt_fim_transfusao = clock_timestamp()
				where	nr_sequencia =  nr_seq_transfusao_w;

				if (ie_cobra_transf_finalizar_w = 'S') then

					select	max(ie_tipo_data_vigencia),
						coalesce(max(cd_setor_conta),0),
						coalesce(max(ie_setor_conta),'F')
					into STRICT	ie_tipo_data_vigencia_w,
						cd_setor_param_w,
						ie_setor_conta_w
					from	san_parametro
					where	cd_estabelecimento = cd_estabelecimento_p;

					if (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') and (coalesce(nr_prescricao_p,0) > 0) then


						select	coalesce(max(cd_setor_atendimento),0)
						into STRICT	cd_setor_prescricao_w
						from	prescr_medica
						where	nr_prescricao = nr_prescricao_p;
					end if;

					if (ie_setor_conta_w = 'F') and (cd_setor_param_w <> 0) then

						cd_setor_transf_w := cd_setor_param_w;
					elsif (ie_setor_conta_w = 'P') and (cd_setor_prescricao_w <> 0)  then

						cd_setor_transf_w := cd_setor_prescricao_w;
					elsif (ie_setor_conta_w = 'A') and (nr_atendimento_p <> 0) then

						cd_setor_transf_w := obter_setor_atendimento(nr_atendimento_p);
					else
						begin
						if (ie_tipo_Setor_Gerar_Conta_w = 'P') then

							cd_setor_transf_w := obter_setor_atendimento(nr_atendimento_p);
						end if;
						if (ie_tipo_Setor_Gerar_Conta_w = 'U') then

							cd_setor_transf_w := Wheb_usuario_pck.get_cd_setor_atendimento;
						end if;
						end;
					end if;

					if (ie_tipo_data_vigencia_w = 'A') then

						dt_vigencia_transf_w := clock_timestamp();
						CALL gerar_propaci_sangue(nr_seq_transfusao_w, 2, nm_usuario_p, cd_setor_transf_w, dt_vigencia_transf_w);
					elsif (ie_tipo_data_vigencia_w = 'P') then

						dt_vigencia_transf_w	:= obter_data_entrada(nr_atendimento_p);
						CALL gerar_propaci_sangue(nr_seq_transfusao_w, 2, nm_usuario_p, cd_setor_transf_w, dt_vigencia_transf_w);
					end if;
				end if;

			end if;

		elsif (ie_alteracao_p = 6) then

			begin
			/* obter sequencia evento */

			select	coalesce(max(nr_sequencia),0)
			into STRICT	nr_sequencia_w
			from	prescr_solucao_evento
			where	nr_seq_reserva		= nr_seq_reserva_p
			and	nr_seq_item_reserva	= nr_seq_item_reserva_p
			and	ie_tipo_solucao	= 3
			and	ie_alteracao		in (1,2,3,4)
			and	ie_evento_valido	= 'S';

			/* obter status solucao */

			if (nr_sequencia_w > 0) then

				select	CASE WHEN ie_alteracao=1 THEN  'I' WHEN ie_alteracao=2 THEN  'INT' WHEN ie_alteracao=3 THEN  'R' WHEN ie_alteracao=4 THEN  'T' END
				into STRICT	ie_status_ant_w
				from	prescr_solucao_evento
				where	nr_sequencia = nr_sequencia_w;

				/* tratar interromper sobre interromper */

				if (ie_status_ant_w = 'INT') then

					select	coalesce(max(qt_vol_infundido),-1),
						coalesce(max(qt_vol_desprezado),-1)
					into STRICT	qt_vol_infundido_w,
						qt_vol_desprezado_w
					from	prescr_solucao_evento
					where	nr_sequencia = nr_sequencia_w;

					if (qt_vol_infundido_w = -1) and (qt_vol_desprezado_w = -1) then

						ie_status_ant_w := 'II';
					end if;
				end if;
			else
				ie_status_ant_w := 'N';
			end if;

			if (ie_status_ant_w = 'S') then

				ie_status_ant_w := 'N';
			end if;

			update	san_reserva_item
			set	ie_status_adep	= ie_status_ant_w
			where	nr_seq_reserva	= nr_seq_reserva_p
			and	nr_seq_item	= nr_seq_item_reserva_p;

			end;
		end if;
	elsif (coalesce(nr_seq_prod_reserva_p,0) > 0) then


		select	max(nr_Seq_Producao)
		into STRICT	nr_Seq_Producao_w
		from	san_reserva_prod
		where	nr_seq_reserva	= nr_seq_reserva_p
		and		nr_sequencia	= nr_seq_prod_reserva_p;

		select	coalesce(max(nr_sequencia),0),
				max(ie_status)
		into STRICT	nr_seq_transfusao_w,
				ie_status_transfusao_w
		from	san_transfusao
		where	nr_seq_reserva	= nr_seq_reserva_p;

		if (nr_seq_sangue_p IS NOT NULL AND nr_seq_sangue_p::text <> '') then
			nr_seq_proc_w := nr_seq_solucao_w;
		else
			select	max(nr_seq_prescr)
			into STRICT	nr_seq_proc_w
			from	san_reserva_item
			where	nr_seq_reserva	= nr_seq_reserva_p;
		end if;

		if (ie_alteracao_p = 1) then
  --Iniciar
			update	san_reserva_prod
			set	ie_status_adep	= 'I'
			where	nr_seq_reserva	= nr_seq_reserva_p
			and	nr_sequencia	= nr_seq_prod_reserva_p;

			update	san_producao
			set	dt_utilizacao	= dt_evento_w,
				dt_inicio_infusao = clock_timestamp(),
				nm_usuario_ini_infusao = nm_usuario_p
			where	nr_sequencia	= nr_Seq_Producao_w;

			update	prescr_procedimento
			set	--ie_status = 'I',
				dt_status = dt_evento_w,
				qt_volume_adep = qt_vol_fase_p
			where	nr_prescricao = nr_prescricao_p
			and	(nr_seq_solic_sangue IS NOT NULL AND nr_seq_solic_sangue::text <> '');

			select 	min(a.nr_sequencia)
			into STRICT	nr_seq_horario_ww
			from	prescr_proc_hor a,
					prescr_procedimento b
			where	a.nr_prescricao 		= b.nr_prescricao
			and		a.nr_seq_procedimento 	= b.nr_sequencia
			and		b.nr_prescricao 		= nr_prescricao_p
			and		(b.nr_seq_solic_sangue IS NOT NULL AND b.nr_seq_solic_sangue::text <> '')
			and		b.nr_sequencia 			= nr_seq_proc_w
			and		coalesce(a.dt_inicio_horario::text, '') = ''
			and		coalesce(a.dt_suspensao::text, '') = ''
			and		a.dt_horario 			= ( SELECT	min(a.dt_horario)
												from	prescr_proc_hor x
												where	x.nr_sequencia 			= a.nr_sequencia
												and		x.nr_seq_procedimento 	= b.nr_sequencia );


			update	prescr_proc_hor
			set		dt_inicio_horario	= clock_timestamp(),
					nm_usuario_inicio 	= nm_usuario_p
			where	nr_sequencia 		= nr_seq_horario_ww;

			select 	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
			into STRICT	ie_trans_existente_w
			from	san_transfusao
			where	nr_sequencia = nr_seq_transfusao_w;

			if (ie_trans_existente_w = 'N') then

				if (ie_gerar_transf_iniciar_w = 'S') then

					nr_seq_transfusao_w := gerar_transfusao_reserva(nr_seq_reserva_p, obter_pf_usuario(nm_usuario_p, 'C'), nm_usuario_p, 'S', 'N', cd_estabelecimento_p, nr_seq_transfusao_w);
				end if;
			end if;

		elsif (ie_alteracao_p = 2) then
  --Interromper
			select	coalesce(max(ie_int_definitivo),'N')
			into STRICT	ie_interrup_def_w
			from	adep_motivo_interrupcao
			where	nr_sequencia = nr_seq_motivo_p
			and		coalesce(wheb_usuario_pck.get_cd_funcao,1113) = 88;

			update	san_reserva_prod
			set		ie_status_adep	= CASE WHEN ie_interrup_def_w='S' THEN  'ID'  ELSE 'INT' END ,
					dt_atualizacao = clock_timestamp(),
					nm_usuario = nm_usuario_p
			where	nr_seq_reserva	= nr_seq_reserva_p
			and		nr_sequencia	= nr_seq_prod_reserva_p;

			--Verifica se e a ultima reserva a ser terminada
			if (ie_interrup_def_w = 'S') then


				select	max(nr_Seq_Producao)
				into STRICT	nr_Seq_Producao_w
				from	san_reserva_prod
				where	coalesce(nr_seq_reserva,0)	= nr_seq_reserva_p
				and		coalesce(nr_sequencia,0)	= nr_seq_prod_reserva_p;

				update	san_producao
				set		dt_fim_infusao 	= clock_timestamp(),
						nm_usuario_fim_infusao = nm_usuario_p
				where 	nr_sequencia = nr_seq_producao_w;

			    select	count(nr_sequencia)
				into STRICT	qt_reserva_pend_w
				from	san_reserva_prod where		nr_seq_reserva	= nr_seq_reserva_p
				and		nr_sequencia	<> nr_seq_prod_reserva_p
				and		coalesce(ie_status_adep,'N')	not in ('T', 'ID', 'S') LIMIT 1;

				--Se esta e a ultima reserva a ser terminada, entao a transfusao e finalizada
			    if (qt_reserva_pend_w	= 0) and (nr_seq_transfusao_w	<> 0) then


					CALL finalizar_transf_hemot_adep('F', null, nr_seq_transfusao_w, cd_estabelecimento_p,  wheb_usuario_pck.get_cd_perfil, nm_usuario_p);

				else

					update	prescr_proc_hor
					set		dt_fim_horario = clock_timestamp(),
							dt_interrupcao = clock_timestamp(),
							nm_usuario_inter	= nm_usuario_p
					where	nr_sequencia in (	SELECT	min(a.nr_sequencia)
												from	prescr_proc_hor a,
														prescr_procedimento b
												where	a.nr_prescricao = b.nr_prescricao
												and		a.nr_seq_procedimento = b.nr_sequencia
												and		b.nr_prescricao = nr_prescricao_p
												and		(b.nr_seq_solic_sangue IS NOT NULL AND b.nr_seq_solic_sangue::text <> '')
												and		(a.dt_inicio_horario IS NOT NULL AND a.dt_inicio_horario::text <> '')
												and		b.nr_sequencia = nr_seq_proc_w
												and		coalesce(a.dt_interrupcao::text, '') = ''
												and		coalesce(a.dt_suspensao::text, '') = '');

				end if;

				update	prescr_procedimento
				set		ie_status = 'T',
						dt_status = dt_evento_w
				where	nr_prescricao = nr_prescricao_p
				and		(nr_seq_solic_sangue IS NOT NULL AND nr_seq_solic_sangue::text <> '');

			else
				update	prescr_proc_hor
				set		dt_interrupcao = clock_timestamp(),
						nm_usuario_inter	= nm_usuario_p
				where	nr_sequencia in (	SELECT	min(a.nr_sequencia)
											from	prescr_proc_hor a,
													prescr_procedimento b
											where	a.nr_prescricao = b.nr_prescricao
											and		a.nr_seq_procedimento = b.nr_sequencia
											and		b.nr_prescricao = nr_prescricao_p
											and		(b.nr_seq_solic_sangue IS NOT NULL AND b.nr_seq_solic_sangue::text <> '')
											and		(a.dt_inicio_horario IS NOT NULL AND a.dt_inicio_horario::text <> '')
											and		coalesce(a.dt_interrupcao::text, '') = ''
											and		b.nr_sequencia = nr_seq_proc_w
											and		coalesce(a.dt_fim_horario::text, '') = ''
											and		coalesce(a.dt_suspensao::text, '') = '');

			end if;

		elsif (ie_alteracao_p = 3) then
  --Reiniciar
			update	san_reserva_prod
			set		ie_status_adep	= 'R'
			where	nr_seq_reserva	= nr_seq_reserva_p
			and		nr_sequencia	= nr_seq_prod_reserva_p;

			update	prescr_proc_hor
			set		dt_inicio_horario = clock_timestamp(),
					nm_usuario_inicio = nm_usuario_p,
					dt_interrupcao  = NULL
			where	nr_sequencia in (	SELECT	min(a.nr_sequencia)
										from	prescr_proc_hor a,
												prescr_procedimento b
										where	a.nr_prescricao = b.nr_prescricao
										and		a.nr_seq_procedimento = b.nr_sequencia
										and		b.nr_prescricao = nr_prescricao_p
										and		(b.nr_seq_solic_sangue IS NOT NULL AND b.nr_seq_solic_sangue::text <> '')
										and		b.nr_sequencia = nr_seq_proc_w
										and		(a.dt_interrupcao IS NOT NULL AND a.dt_interrupcao::text <> '')
										and		coalesce(a.dt_fim_horario::text, '') = ''
										and		coalesce(a.dt_suspensao::text, '') = '');


		elsif (ie_alteracao_p = 4) then
  --Terminar
			update	san_reserva_prod
			set		ie_status_adep	= 'T'
			where	nr_seq_reserva	= nr_seq_reserva_p
			and		nr_sequencia	= nr_seq_prod_reserva_p;

			update	prescr_procedimento
			set		ie_status = 'T',
					dt_status = dt_evento_w
			where	nr_prescricao = nr_prescricao_p
			and		(nr_seq_solic_sangue IS NOT NULL AND nr_seq_solic_sangue::text <> '');

			select	sum(qt_vol_infundido)
			into STRICT	qt_total_infundido_w
			from	prescr_solucao_evento
			where	nr_seq_reserva		= nr_seq_reserva_p
			and		nr_seq_prod_reserva	= nr_seq_prod_reserva_p
			and		ie_tipo_solucao	= 3
			and		ie_alteracao		in (1,2,3,4)
			and		ie_evento_valido	= 'S';

			update	san_producao
			set		dt_termino_util	= dt_evento_w,
					dt_fim_infusao = clock_timestamp(),
					nm_usuario_fim_infusao = nm_usuario_p,
					qt_vol_transf	= qt_total_infundido_w
			where	nr_sequencia	= nr_Seq_Producao_w;

			select	coalesce(max(nr_sequencia),0)
			into STRICT	nr_seq_transfusao_w
			from	san_transfusao
			where	nr_seq_reserva	= nr_seq_reserva_p;

			--Verifica se e a ultima reserva a ser terminada
			select	count(nr_sequencia)
			into STRICT	qt_reserva_pend_w
			from	san_reserva_prod where		nr_seq_reserva	= nr_seq_reserva_p
			and		nr_sequencia	<> nr_seq_prod_reserva_p
			and		coalesce(ie_status_adep,'N')	not in ('T', 'ID', 'S') LIMIT 1;

			--Se esta e a ultima reserva a ser terminada, entao a transfusao e finalizada
			if (qt_reserva_pend_w	= 0) and (nr_seq_transfusao_w	<> 0) then


				CALL finalizar_transf_hemot_adep('F', null, nr_seq_transfusao_w, cd_estabelecimento_p,  wheb_usuario_pck.get_cd_perfil, nm_usuario_p);

				if (ie_cobra_transf_finalizar_w = 'S') then

					select	max(ie_tipo_data_vigencia),
						coalesce(max(cd_setor_conta),0),
						coalesce(max(ie_setor_conta),'F')
					into STRICT	ie_tipo_data_vigencia_w,
						cd_setor_param_w,
						ie_setor_conta_w
					from	san_parametro
					where	cd_estabelecimento = cd_estabelecimento_p;

					if (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') and (coalesce(nr_prescricao_p,0) > 0) then


						select	coalesce(max(cd_setor_atendimento),0)
						into STRICT	cd_setor_prescricao_w
						from	prescr_medica
						where	nr_prescricao = nr_prescricao_p;
					end if;

					if (ie_setor_conta_w = 'F') and (cd_setor_param_w <> 0) then

						cd_setor_transf_w := cd_setor_param_w;
					elsif (ie_setor_conta_w = 'P') and (cd_setor_prescricao_w <> 0)  then

						cd_setor_transf_w := cd_setor_prescricao_w;
					elsif (ie_setor_conta_w = 'A') and (nr_atendimento_p <> 0) then

						cd_setor_transf_w := obter_setor_atendimento(nr_atendimento_p);
					else
						begin
						if (ie_tipo_Setor_Gerar_Conta_w = 'P') then

							cd_setor_transf_w := obter_setor_atendimento(nr_atendimento_p);
						end if;
						if (ie_tipo_Setor_Gerar_Conta_w = 'U') then

							cd_setor_transf_w := Wheb_usuario_pck.get_cd_setor_atendimento;
						end if;
						end;
					end if;

					if (ie_tipo_data_vigencia_w = 'A') then

						dt_vigencia_transf_w := clock_timestamp();
						CALL gerar_propaci_sangue(nr_seq_transfusao_w, 2, nm_usuario_p, cd_setor_transf_w, dt_vigencia_transf_w);
					elsif (ie_tipo_data_vigencia_w = 'P') then

						dt_vigencia_transf_w	:= obter_data_entrada(nr_atendimento_p);
						CALL gerar_propaci_sangue(nr_seq_transfusao_w, 2, nm_usuario_p, cd_setor_transf_w, dt_vigencia_transf_w);
					end if;
				end if;

			else

				update	prescr_proc_hor
				set		dt_fim_horario = clock_timestamp(),
						dt_interrupcao = clock_timestamp(),
						nm_usuario_inter	= nm_usuario_p
				where	nr_sequencia in (	SELECT	min(a.nr_sequencia)
											from	prescr_proc_hor a,
													prescr_procedimento b
											where	a.nr_prescricao = b.nr_prescricao
											and		a.nr_seq_procedimento = b.nr_sequencia
											and		b.nr_prescricao = nr_prescricao_p
											and		(b.nr_seq_solic_sangue IS NOT NULL AND b.nr_seq_solic_sangue::text <> '')
											and		(a.dt_inicio_horario IS NOT NULL AND a.dt_inicio_horario::text <> '')
											and		b.nr_sequencia = nr_seq_proc_w
											and		coalesce(a.dt_fim_horario::text, '') = ''
											and		coalesce(a.dt_suspensao::text, '') = '');

			end if;

		elsif (ie_alteracao_p = 6) then

			begin
			/* obter sequencia evento */

			select	coalesce(max(nr_sequencia),0)
			into STRICT	nr_sequencia_w
			from	prescr_solucao_evento
			where	nr_seq_reserva		= nr_seq_reserva_p
			and	nr_seq_prod_reserva	= nr_seq_prod_reserva_p
			and	ie_tipo_solucao	= 3
			and	ie_alteracao		in (1,2,3,4)
			and	ie_evento_valido	= 'S';

			/* obter status solucao */

			if (nr_sequencia_w > 0) then

				select	CASE WHEN ie_alteracao=1 THEN  'I' WHEN ie_alteracao=2 THEN  'INT' WHEN ie_alteracao=3 THEN  'R' WHEN ie_alteracao=4 THEN  'T' END
				into STRICT	ie_status_ant_w
				from	prescr_solucao_evento
				where	nr_sequencia = nr_sequencia_w;

				/* tratar interromper sobre interromper */

				if (ie_status_ant_w = 'INT') then

					select	coalesce(max(qt_vol_infundido),-1),
						coalesce(max(qt_vol_desprezado),-1)
					into STRICT	qt_vol_infundido_w,
						qt_vol_desprezado_w
					from	prescr_solucao_evento
					where	nr_sequencia = nr_sequencia_w;

					if (qt_vol_infundido_w = -1) and (qt_vol_desprezado_w = -1) then

						ie_status_ant_w := 'II';
					end if;
				end if;
			else
				ie_status_ant_w := 'N';
			end if;

			if (ie_status_ant_w = 'S') or (coalesce(ie_status_ant_w::text, '') = '') then

				ie_status_ant_w := 'N';
			end if;

			if (ie_status_ant_w = 'N') then

				update	san_producao
				set	dt_utilizacao 	 = NULL,
					dt_inicio_infusao  = NULL,
					nm_usuario_ini_infusao  = NULL
				where	nr_sequencia	= nr_Seq_Producao_w;
			end if;

			if (ie_status_ant_w = 'I') then

				update	san_producao
				set	dt_termino_util	 = NULL,
					dt_fim_infusao  = NULL,
					nm_usuario_fim_infusao  = NULL
				where	nr_sequencia	= nr_Seq_Producao_w;
			end if;

			update	san_reserva_prod
			set		ie_status_adep	= ie_status_ant_w
			where	nr_seq_reserva	= nr_seq_reserva_p
			and		nr_sequencia	= nr_seq_prod_reserva_p;

			begin
			if (nr_seq_transfusao_w 	<> 0) and (ie_status_ant_w 	<> 'T') and (ie_status_transfusao_w	= 'F') then


				update	san_transfusao
				set		ie_status		= 'A',
						dt_fim_transfusao	 = NULL
				where	nr_sequencia 		= nr_seq_transfusao_w;

			end if;
			exception when others then

				ds_erro_W := ds_erro_W;
			end;

			end;

		elsif (ie_alteracao_p = 53) then
  --Suspender
			update	san_reserva_prod
			set		ie_status_adep	= 'S',
					ie_status = 'N',
					nm_usuario = nm_usuario_p,
					dt_atualizacao = clock_timestamp()
			where	nr_seq_reserva	= nr_seq_reserva_p
			and		nr_sequencia	= nr_seq_prod_reserva_p;

			CALL san_log_cancelamento_transf(nr_Seq_Producao_w, nr_seq_transfusao_w, nm_usuario_p);

			--Verifica se e a ultima reserva a ser terminada
			select	count(nr_sequencia)
			into STRICT	qt_reserva_pend_w
			from	san_reserva_prod where		nr_seq_reserva	= nr_seq_reserva_p
			and		nr_sequencia	<> nr_seq_prod_reserva_p
			and		coalesce(ie_status_adep,'N')	not in ('T', 'ID', 'S') LIMIT 1;

			--Se esta e a ultima reserva a ser terminada, entao a transfusao e finalizada
			if (qt_reserva_pend_w	= 0) and (nr_seq_transfusao_w	<> 0) then


				CALL finalizar_transf_hemot_adep('F', null, nr_seq_transfusao_w, cd_estabelecimento_p,  wheb_usuario_pck.get_cd_perfil, nm_usuario_p);

				update	prescr_procedimento
				set		ie_status = 'T',
						dt_status = dt_evento_w
				where	nr_prescricao = nr_prescricao_p
				and		(nr_seq_solic_sangue IS NOT NULL AND nr_seq_solic_sangue::text <> '');

			end if;
		end if;
	end if;

    if (ie_tipo_solucao_p = 2) then

		CALL Atualiza_ie_horario_susp(nr_prescricao_p, null, 'PRESCR_MATERIAL');
	end if;
end if;

if (ie_tipo_solucao_p = 3) then
    if ((nr_bolsa_p IS NOT NULL AND nr_bolsa_p::text <> '') and ie_alteracao_p in (1,3))    then

        nr_bolsa_w := nr_bolsa_p;
        ie_status_bolsa_w := 'L';
        nr_prescricao_ww := nr_prescricao_p;

    elsif (ie_alteracao_p = 6 )  then
        begin
            ie_status_bolsa_w := 'A';

            if((coalesce(nr_prescricao_p,0)  > 0) and (coalesce(nr_seq_solucao_p,0) > 0) and
                 ie_status_ant_w in ('I', 'R')) then

                nr_prescricao_ww := nr_prescricao_p;

                select  NrBolsa
                into STRICT    nr_bolsa_w
                from (   SELECT  a.nr_bolsa NrBolsa
                            from    prescr_proc_bol_aux a,
                                    prescr_proc_bolsa b
                            where   a.nr_seq_horario = b.nr_seq_horario
                            and     b.nr_prescricao = nr_prescricao_p
                            and     b.nr_seq_procedimento = nr_seq_solucao_p
                            and     a.ie_situacao in ('L')
                            order   by a.dt_atualizacao desc) alias1 LIMIT 1;

            elsif (nr_seq_reserva_p IS NOT NULL AND nr_seq_reserva_p::text <> '' AND nr_seq_prod_reserva_p IS NOT NULL AND nr_seq_prod_reserva_p::text <> '') then

                select  NrBolsa,
                        nrPrescricao
                into STRICT    nr_bolsa_w,
                        nr_prescricao_ww
                from (   SELECT  a.nr_bolsa NrBolsa,
                                    c.nr_prescricao nrPrescricao
                            from    prescr_proc_bol_aux a,
                                    prescr_proc_bolsa b,
                                    prescr_solucao_evento c
                            where   a.nr_seq_horario = b.nr_seq_horario
                            and     c.nr_seq_reserva		= nr_seq_reserva_p
                            and     b.nr_prescricao = c.nr_prescricao
                            and     c.nr_seq_prod_reserva	= nr_seq_prod_reserva_p
                            and     c.ie_tipo_solucao	= 3
                            and     c.ie_alteracao		in (1,2,3,4)
                            and     a.ie_situacao in ('L')
                            order   by a.dt_atualizacao desc) alias3 LIMIT 1;

            end if;
        exception when others then
                ie_status_bolsa_w := null;
                nr_prescricao_ww := null;
        end;
    end if;

    if (ie_status_bolsa_w IS NOT NULL AND ie_status_bolsa_w::text <> '') then
        update prescr_proc_bol_aux
        set    ie_situacao = ie_status_bolsa_w,
               dt_atualizacao = dt_atualizacao_w,
               nm_usuario = nm_usuario_p
        where  nr_sequencia in (
            SELECT  a.nr_sequencia
            from    prescr_proc_bol_aux a,
                    prescr_proc_bolsa b
            where   a.nr_bolsa = nr_bolsa_w
            and     a.nr_seq_horario = b.nr_seq_horario
            and     b.nr_prescricao = nr_prescricao_ww
            and     ((a.ie_situacao = 'A') and (ie_alteracao_p in (1, 3))
                        or ie_alteracao_p = 6)

        );
    end if;
end if;

if (ie_trocar_frasco_reversao_p = 'S') then

	select	coalesce(max(nr_sequencia), 0)
	into STRICT	nr_seq_motivo_w
	from	adep_motivo_interrupcao 
	where	ie_troca_frasco = 'S'
	and		ie_default = 'S';

	if (nr_seq_motivo_w = 0) then
		select  coalesce(min(nr_sequencia), 0)
		into STRICT 	nr_seq_motivo_w
		from    adep_motivo_interrupcao
		where   ie_troca_frasco = 'S';
	end if;

	select  max(coalesce(qt_vol_infundido, qt_vol_infundido_p)),
			max(coalesce(qt_vol_desprezado, qt_vol_desprezado_p)),
			max(coalesce(qt_vol_parcial, qt_vol_parcial_p))
	into STRICT    qt_vol_infundido_w,
			qt_vol_desprezado_w,
			qt_vol_parcial_w
	from    prescr_solucao_evento
	where   nr_sequencia = (SELECT	max(nr_sequencia)
							from	prescr_solucao_evento
							where	nr_prescricao = nr_prescricao_p
							and		ie_alteracao = 4);

	ds_msg_p                      => ds_msg_p := Gerar_alteracao_solucao_prescr(	    cd_estabelecimento_p          => cd_estabelecimento_p, nr_atendimento_p              => nr_atendimento_p, ie_tipo_solucao_p             => ie_tipo_solucao_p, nr_prescricao_p               => nr_prescricao_p, nr_seq_solucao_p              => nr_seq_solucao_p, ie_alteracao_p                => 2, dt_alteracao_p                => dt_alteracao_p, ie_forma_infusao_p            => ie_forma_infusao_p, nr_seq_dispositivo_p          => nr_seq_dispositivo_p, ie_tipo_dosagem_p             => ie_tipo_dosagem_p, qt_vol_fase_p                 => qt_vol_fase_p, qt_vel_infusao_p              => qt_vel_infusao_p, qt_vol_infundido_p            => qt_vol_infundido_w, qt_vol_desprezado_p           => qt_vol_desprezado_w, qt_vol_parcial_p              => qt_vol_parcial_w, nr_seq_motivo_p               => nr_seq_motivo_w, ds_observacao_p               => ds_observacao_p, nm_usuario_p                  => nm_usuario_p, nr_etapa_evento_p             => nr_etapa_evento_p, dt_horario_p                  => dt_horario_p, ie_bomba_infusao_p            => ie_bomba_infusao_p, ie_tipo_analgesia_p           => ie_tipo_analgesia_p, ie_pca_modo_prog_p            => ie_pca_modo_prog_p, qt_vol_infusao_pca_p          => qt_vol_infusao_pca_p, ie_um_fluxo_pca_p             => ie_um_fluxo_pca_p, qt_bolus_pca_p                => qt_bolus_pca_p, ie_um_bolus_pca_p             => ie_um_bolus_pca_p, qt_intervalo_bloqueio_p       => qt_intervalo_bloqueio_p, qt_dose_inicial_pca_p         => qt_dose_inicial_pca_p, ie_um_dose_inicio_pca_p       => ie_um_dose_inicio_pca_p, qt_limite_quatro_hora_p       => qt_limite_quatro_hora_p, ie_um_limite_pca_p            => ie_um_limite_pca_p, qt_limite_uma_hora_p          => qt_limite_uma_hora_p, ie_um_limite_hora_pca_p       => ie_um_limite_hora_pca_p, ie_suspender_todas_etapas_p   => ie_suspender_todas_etapas_p, qt_dose_terapeutica_p         => qt_dose_terapeutica_p, nr_unid_terapeutica_p         => nr_unid_terapeutica_p, nr_seq_reserva_p              => nr_seq_reserva_p, nr_seq_item_reserva_p         => nr_seq_item_reserva_p, nr_seq_prod_reserva_p         => nr_seq_prod_reserva_p, qt_tempo_infusao_p            => qt_tempo_infusao_p, nr_seq_processo_sol_p         => nr_seq_processo_sol_p, nr_seq_assinatura_p           => nr_seq_assinatura_p, qt_min_pausa_p                => qt_min_pausa_p, ds_justificativa_p            => ds_justificativa_p, ie_palm_p                     => ie_palm_p, nr_seq_motivo_adm_p           => nr_seq_motivo_adm_p, ds_msg_p                      => ds_msg_p, nr_seq_sangue_p               => nr_seq_sangue_p, nm_usuario_conf_p             => nm_usuario_conf_p, nr_bolsa_p                    => nr_bolsa_p, ie_trocar_frasco_reversao_p	  => 'N', qt_dose_nais_p                => qt_dose_nais_p, qt_unid_medida_nais_p         => qt_unid_medida_nais_p, IE_STERILE_PREPARATION_P   => IE_STERILE_PREPARATION_P);

end if;
ie_gerar_evolucao_emar_w := obter_param_usuario(1113, 727, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, coalesce(wheb_usuario_pck.get_cd_estabelecimento, 1), ie_gerar_evolucao_emar_w);

if (ie_gerar_evolucao_emar_w = 'S' and ie_alteracao_p in (1, 2, 3, 4)) then
	if (ie_tipo_solucao_p = 1) then
	 if (nr_sequencia_w=0)then
     select max(nr_sequencia)
     into STRICT
     nr_seq_sol_evento_ww
     from prescr_solucao_evento
     where nr_prescricao=nr_prescricao_p;
     cd_evolucao_w := clinical_notes_pck.gerar_soap(nr_atendimento_p, nr_seq_sol_evento_ww, 'CPOE_ITEMS', 1, 'P', 2, cd_evolucao_w, 'SOL');
     else
		cd_evolucao_w := clinical_notes_pck.gerar_soap(nr_atendimento_p, nr_sequencia_w, 'CPOE_ITEMS', 1, 'P', 2, cd_evolucao_w, 'SOL');
        end if;
	elsif (ie_tipo_solucao_p in (4, 6)) then
		cd_evolucao_w := clinical_notes_pck.gerar_soap(nr_atendimento_p, nr_sequencia_w, 'CPOE_ITEMS', 0, 'P', 2, cd_evolucao_w, 'NPA-AN');
		if (cd_evolucao_w IS NOT NULL AND cd_evolucao_w::text <> '') then
			update	nut_paciente_hor
			set	cd_evolucao = cd_evolucao_w
			where nr_seq_nut_protocolo = nr_seq_solucao_p;
		end if;
	elsif (ie_tipo_solucao_p = 3 and (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '')) then
		cd_evolucao_w := clinical_notes_pck.gerar_soap(nr_atendimento_p, nr_sequencia_w, 'CPOE_ITEMS', 5, 'P', 2, cd_evolucao_w);
		if (cd_evolucao_w IS NOT NULL AND cd_evolucao_w::text <> '') then
			select max(nr_sequencia)
			into STRICT nr_seq_horario_p
			from prescr_proc_hor
			where nr_prescricao = nr_prescricao_p;
			insert into prescr_proc_hor_compl(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				cd_evolucao
			) values (
				nr_seq_horario_p,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				cd_evolucao_w
			);
		end if;
	elsif (ie_tipo_solucao_p = 3 and coalesce(nr_prescricao_p::text, '') = '') then
		cd_evolucao_w := clinical_notes_pck.gerar_soap(nr_atendimento_p, nr_sequencia_w, 'CPOE_ITEMS', 5, 'P', 2, cd_evolucao_w, 'BM');
		if (cd_evolucao_w IS NOT NULL AND cd_evolucao_w::text <> '') then
			select max(p.nr_sequencia)
			into STRICT nr_seq_horario_p
			from prescr_proc_hor p, san_reserva s, prescr_solucao_evento e
			where s.nr_sequencia = NR_SEQ_RESERVA_P
			and e.nr_seq_reserva = s.nr_sequencia
			and s.nr_prescricao = p.nr_prescricao;
			insert into prescr_proc_hor_compl(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				cd_evolucao
			) values (
				nr_seq_horario_p,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				cd_evolucao_w
			);
		end if;
	end if;
	if (ie_tipo_solucao_p = 1 and (cd_evolucao_w IS NOT NULL AND cd_evolucao_w::text <> '')) then
		select	nextval('prescr_mat_hor_compl_seq')
        into STRICT    nr_seq_mat_compl_w
;
		insert into prescr_mat_hor_compl(
            nr_sequencia,
            dt_atualizacao,
            nm_usuario,
            dt_atualizacao_nrec,
            nm_usuario_nrec,
			cd_evolucao
        ) values (
            nr_seq_mat_compl_w,
            clock_timestamp(),
            nm_usuario_p,
            clock_timestamp(),
            nm_usuario_p,
            cd_evolucao_w
        );
		update prescr_mat_hor
		set nr_seq_mat_compl = nr_seq_mat_compl_w
		where nr_seq_solucao	= nr_seq_solucao_p
		and	nr_prescricao	= nr_prescricao_p;
	end if;
end if;

select  CASE WHEN ie_alteracao_p=53 THEN  'S' WHEN ie_alteracao_p=12 THEN  'S'  ELSE 'N' END
into STRICT    ie_suspensao_w
;

ie_tipo_item_cpoe_w := obter_tipo_solucao_adep(ie_tipo_solucao_p);
nr_seq_item_cpoe_w := obter_nr_sequencia_cpoe(nr_seq_solucao_p, nr_prescricao_p, ie_tipo_item_cpoe_w);

ie_param716_w := obter_param_usuario(1113, 716, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, coalesce(wheb_usuario_pck.get_cd_estabelecimento, 1), ie_param716_w);

if (ie_param716_w <> 'N') then
	CALL generate_nurse_ack(ie_suspensao_w, ie_tipo_item_cpoe_w, nr_atendimento_p, nr_seq_item_cpoe_w, cd_material_w);
end if;


commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_alteracao_solucao_prescr ( cd_estabelecimento_p bigint, nr_atendimento_p bigint, ie_tipo_solucao_p bigint, nr_prescricao_p bigint, nr_seq_solucao_p bigint, ie_alteracao_p bigint, dt_alteracao_p timestamp, ie_forma_infusao_p text, nr_seq_dispositivo_p bigint, ie_tipo_dosagem_p text, qt_vol_fase_p bigint, qt_vel_infusao_p bigint, qt_vol_infundido_p bigint, qt_vol_desprezado_p bigint, qt_vol_parcial_p bigint, nr_seq_motivo_p bigint, ds_observacao_p text, nm_usuario_p text, nr_etapa_evento_p bigint, dt_horario_p timestamp, ie_bomba_infusao_p text, ie_tipo_analgesia_p text default null, ie_pca_modo_prog_p text default null, qt_vol_infusao_pca_p bigint default null, ie_um_fluxo_pca_p text default null, qt_bolus_pca_p bigint default null, ie_um_bolus_pca_p text default null, qt_intervalo_bloqueio_p bigint default null, qt_dose_inicial_pca_p bigint default null, ie_um_dose_inicio_pca_p text default null, qt_limite_quatro_hora_p bigint default null, ie_um_limite_pca_p text default null, qt_limite_uma_hora_p bigint default null, ie_um_limite_hora_pca_p text default null, ie_suspender_todas_etapas_p text default null, qt_dose_terapeutica_p bigint default null, nr_unid_terapeutica_p bigint default null, nr_seq_reserva_p bigint default null, nr_seq_item_reserva_p bigint default null, nr_seq_prod_reserva_p bigint default null, qt_tempo_infusao_p bigint default null, nr_seq_processo_sol_p bigint default null, nr_seq_assinatura_p bigint default null, qt_min_pausa_p bigint default null, ds_justificativa_p text default null, ie_palm_p text default null, nr_seq_motivo_adm_p bigint default null, ds_msg_p INOUT text DEFAULT NULL, nr_seq_sangue_p text default null, nm_usuario_conf_p text default null, nr_bolsa_p text default null, ie_trocar_frasco_reversao_p text default null, qt_dose_nais_p bigint default null, qt_unid_medida_nais_p text default null, adjust_infusion_rate_cpoe_p bigint default null, ie_sterile_preparation_p prescr_solucao_evento.ie_sterile_preparation%type default null, seq_bomba_infusao_p prescr_solucao_evento.nr_seq_bomba_event%type default null) FROM PUBLIC;

