-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_cot_compra_opme ( nm_usuario_p text, cd_estabelecimento_p bigint, nr_seq_agenda_p bigint, nr_cot_compra_p INOUT bigint) AS $body$
DECLARE

 
			 
nr_cot_compra_w		bigint;
cd_comprador_w		varchar(10);
nr_item_w		integer;
cd_material_w		integer;
qt_material_w		double precision;
cd_unidade_medida_w	varchar(30);
dt_retorno_prev_w		timestamp;
qt_dias_w		bigint;
nr_cot_item_entrega_w	bigint;
nr_seq_fornec_w		bigint;
nr_item_cotacao_w	integer;
nr_sequencia_item_w	bigint;
vl_preco_liquido_w		double precision;
ds_marca_w		varchar(30);
vl_unitario_w		double precision;	
cd_cnpj_w		varchar(14);
cd_cond_pagto_w		bigint;
cd_moeda_w		integer;

c01 CURSOR FOR 
	SELECT 	cd_material, 
		qt_material, 
		obter_dados_material(cd_material, 'UMP'), 
		vl_unitario_item, 
		cd_cgc 
	from 	agenda_pac_opme 
	where 	nr_seq_agenda = nr_seq_agenda_p;


BEGIN 
 
--cd_comprador_w	:= obter_pessoa_fisica_usuario(nm_usuario_p, 'C'); 
 
select	nextval('cot_compra_seq') 
into STRICT	nr_cot_compra_w
;
 
select	max(Obter_Valor_Param_Usuario(915, 2, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p)) 
into STRICT	qt_dias_w
;
 
select	obter_dia_hora_util_periodo(cd_estabelecimento_p, clock_timestamp(), qt_dias_w) 
into STRICT	dt_retorno_prev_w
;
 
select	cd_comprador_padrao, 
	cd_moeda_padrao, 
	cd_condicao_pagamento_padrao 
into STRICT	cd_comprador_w, 
	cd_moeda_w, 
	cd_cond_pagto_w 
from	parametro_compras 
where	cd_estabelecimento = cd_estabelecimento_p;
 
insert into cot_compra( 
	nr_cot_compra, 
	dt_cot_compra, 
	dt_atualizacao, 
	cd_comprador, 
	nm_usuario, 
	cd_pessoa_solicitante, 
	cd_estabelecimento, 
	dt_retorno_prev, 
	nr_seq_agenda_pac, 
	ie_finalidade_cotacao) 
values ( nr_cot_compra_w, 
	clock_timestamp(), 
	clock_timestamp(), 
	cd_comprador_w, 
	nm_usuario_p, 
	cd_comprador_w, 
	cd_estabelecimento_p, 
	dt_retorno_prev_w, 
	nr_seq_agenda_p, 
	'F');
 
open C01;
loop 
fetch C01 into	 
	cd_material_w, 
	qt_material_w, 
	cd_unidade_medida_w, 
	vl_unitario_w, 
	cd_cnpj_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
 
	select	max(nr_item_cot_compra) 
	into STRICT	nr_item_w 
	from	cot_compra_item 
	where	nr_cot_compra = nr_cot_compra_w;
	if (coalesce(nr_item_w::text, '') = '') then 
		nr_item_w := 1;
	else 
		nr_item_w := nr_item_w + 1;
	end if;
	 
	insert into cot_compra_item( 
		nr_cot_compra, 
		nr_item_cot_compra, 
		cd_material, 
		qt_material, 
		cd_unidade_medida_compra, 
		dt_atualizacao, 
		dt_limite_entrega, 
		nm_usuario, 
		ie_situacao) 
	values (	nr_cot_compra_w, 
		nr_item_w, 
		cd_material_w, 
		qt_material_w, 
		cd_unidade_medida_w, 
		clock_timestamp(), 
		clock_timestamp(), 
		nm_usuario_p, 
		'A');
 
	select	nextval('cot_compra_item_entrega_seq') 
	into STRICT	nr_cot_item_entrega_w 
	;
		 
	insert into cot_compra_item_entrega( 
		nr_sequencia, 
		dt_atualizacao, 
		nm_usuario, 
		dt_atualizacao_nrec, 
		nm_usuario_nrec,  
		nr_cot_compra, 
		nr_item_cot_compra, 
		dt_entrega, 
		qt_entrega, 
		ds_observacao) 
	values (nr_cot_item_entrega_w, 
		clock_timestamp(), 
		nm_usuario_p, 
		clock_timestamp(), 
		nm_usuario_p, 
		nr_cot_compra_w, 
		nr_item_w, 
		clock_timestamp(), 
		qt_material_w, 
		' ');
		 
		 
	select	coalesce(max(nr_sequencia),0) 
	into STRICT	nr_seq_fornec_w 
	from	cot_compra_forn 
	where	nr_cot_compra = nr_cot_compra_w 
	and	cd_cgc_fornecedor = cd_cnpj_w;
	 
	if (nr_seq_fornec_w = 0) then 
	 
		select	nextval('cot_compra_forn_seq') 
		into STRICT	nr_seq_fornec_w 
		;
	 
		insert	into cot_compra_forn( 
			nr_sequencia, 
			nr_cot_compra, 
			cd_cgc_fornecedor, 
			dt_atualizacao, 
			nm_usuario, 
			ds_observacao, 
			cd_moeda, 
			cd_condicao_pagamento, 
			ie_frete, 
			ie_gerado_bionexo, 
			ie_status_envio_email_lib) 
		values (	nr_seq_fornec_w, 
			nr_cot_compra_w, 
			cd_cnpj_w, 
			clock_timestamp(), 
			nm_usuario_p, 
			'', 
			cd_moeda_w, 
			cd_cond_pagto_w, 
			'C', 
			'N', 
			'N');		
	 
		 
		select	coalesce(min(a.nr_item_cot_compra),0) 
		into STRICT	nr_item_cotacao_w 
		from	cot_compra_item a 
		where	a.nr_cot_compra	= nr_cot_compra_w 
		and	a.cd_material = cd_material_w;
		 
		select	nextval('cot_compra_forn_item_seq') 
		into STRICT	nr_sequencia_item_w 
		;
 
		vl_preco_liquido_w	:= round((vl_unitario_w * qt_material_w)::numeric,2);
		ds_marca_w		:= substr(obter_marca_material(cd_material_w,'D'),1,30);
 
		insert into cot_compra_forn_item( 
			nr_sequencia, 
			nr_seq_cot_forn, 
			nr_cot_compra, 
			nr_item_cot_compra, 
			cd_cgc_fornecedor, 
			qt_material, 
			vl_unitario_material, 
			dt_atualizacao, 
			nm_usuario, 
			vl_preco_liquido, 
			vl_total_liquido_item, 
			ie_situacao, 
			ds_marca, 
			ds_marca_fornec, 
			cd_material) 
		values (	nr_sequencia_item_w, 
			nr_seq_fornec_w, 
			nr_cot_compra_w, 
			nr_item_cotacao_w, 
			cd_cnpj_w, 
			replace(qt_material_w,'.',','), 
			replace(vl_unitario_w,'.',','), 
			clock_timestamp(), 
			nm_usuario_p, 
			replace(vl_preco_liquido_w,'.',','), 
			replace(vl_preco_liquido_w,'.',','), 
			'A', 
			substr(ds_marca_w,1,30), 
			substr(ds_marca_w,1,30), 
			cd_material_w);
	end if;		
	end;
end loop;
close C01;		
		 
 
 
commit;
 
nr_cot_compra_p	:= nr_cot_compra_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_cot_compra_opme ( nm_usuario_p text, cd_estabelecimento_p bigint, nr_seq_agenda_p bigint, nr_cot_compra_p INOUT bigint) FROM PUBLIC;

