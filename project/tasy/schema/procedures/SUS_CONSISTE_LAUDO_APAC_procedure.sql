-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE sus_consiste_laudo_apac ( nr_sequencia_p bigint, nm_usuario_p text, ds_erro_p INOUT text) AS $body$
DECLARE

 
ds_erro_w			varchar(255);
cd_cid_principal_w			varchar(4);
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
nr_atendimento_w			bigint;
ie_sexo_w			varchar(1);
ie_sexo_cid_w			varchar(1);
ie_classificacao_w			smallint;
nr_seq_geral_w			bigint;
ie_apac_inicial_w			varchar(1);
ie_apac_continuidade_w		varchar(1);
qt_maxima_w			smallint;
ie_maxima_w			varchar(4);
cd_proc_secundario_w		bigint;
ie_finalidade_w			varchar(3);
qt_meses_prev_w			smallint	:= 0;
qt_min_meses_w			smallint;
qt_max_meses_w			smallint;
dt_diag_cito_hist_w			timestamp;
dt_inicio_trat_solic_w		timestamp;
dt_pri_tratamento_w		timestamp;
dt_seg_tratamento_w		timestamp;
dt_ter_tratamento_w		timestamp;
cd_estabelecimento_w		smallint;
ie_tipo_atendimento_w		smallint;
cd_convenio_w			integer;
cd_subgrupo_bpa_w		bigint;
cd_grupo_bpa_w			bigint;
ds_detalhe_w			varchar(255) := '';
ie_clinica_w			integer;
cd_categoria_w			varchar(10);
nr_seq_classif_atend_w		atendimento_paciente.nr_seq_classificacao%type;

BEGIN
ds_erro_w	:= '';
 
if (nr_sequencia_p	> 0) then 
 
	/* obter dados do laudo	*/
 
	 
	 
	select	max(nr_atendimento) 
	into STRICT	nr_atendimento_w 
	from	sus_laudo_paciente 
	where	nr_seq_interno = nr_sequencia_p;
	 
	if (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') then 
	 
		select	a.nr_atendimento, 
			a.cd_procedimento_solic, 
			a.ie_origem_proced, 
			a.cd_cid_principal, 
			coalesce(a.ie_classificacao,0), 
			c.ie_sexo, 
			a.ie_finalidade, 
			a.qt_meses_prev, 
			a.dt_diag_cito_hist, 
			a.dt_inicio_trat_solic, 
			a.dt_pri_tratamento, 
			a.dt_seg_tratamento, 
			a.dt_ter_tratamento, 
			b.cd_estabelecimento, 
			b.ie_tipo_atendimento, 
			b.ie_clinica, 
			b.nr_seq_classificacao 
		into STRICT	nr_atendimento_w, 
			cd_procedimento_w, 
			ie_origem_proced_w, 
			cd_cid_principal_w, 
			ie_classificacao_w, 
			ie_sexo_w, 
			ie_finalidade_w, 
			qt_meses_prev_w, 
			dt_diag_cito_hist_w, 
			dt_inicio_trat_solic_w, 
			dt_pri_tratamento_w, 
			dt_seg_tratamento_w, 
			dt_ter_tratamento_w, 
			cd_estabelecimento_w, 
			ie_tipo_atendimento_w, 
			ie_clinica_w, 
			nr_seq_classif_atend_w 
		from	pessoa_fisica		c, 
			atendimento_paciente	b, 
			sus_laudo_paciente 	a 
		where	a.nr_seq_interno	= nr_sequencia_p 
		and	a.nr_atendimento	= b.nr_atendimento 
		and	b.cd_pessoa_fisica	= c.cd_pessoa_fisica;
		 
 
 
 
		cd_convenio_w	:= obter_convenio_atendimento(nr_atendimento_w);
		cd_categoria_w	:= substr(obter_categoria_atendimento(nr_atendimento_w),1,10);
 
		/* 05.12 - Diagnóstico Principal e secundário */
 
		if (ie_classificacao_w	in (11,12,13))	and (coalesce(cd_cid_principal_w::text, '') = '') 	then 
			ds_erro_w	:= ds_erro_w || '2030 ';
		end if;
 
		if (ie_classificacao_w	in (11,12,13))	and (cd_cid_principal_w IS NOT NULL AND cd_cid_principal_w::text <> '')	then 
			begin 
			nr_seq_geral_w	:= 0;
			select	coalesce(max(nr_sequencia),0) 
			into STRICT	nr_seq_geral_w 
			from	sus_procedimento_cid 
			where	cd_procedimento		= cd_procedimento_w 
			and	ie_origem_proced	= 7 
			and	cd_doenca_cid		= cd_cid_principal_w;
			if (nr_seq_geral_w		= 0) then 
				ds_erro_w	:= ds_erro_w || '2030 ';
			end if;
			end;
		end if;
 
 
		/* Válida CID com sexo do paciente */
 
		if (ie_classificacao_w	in (11,12,13))		and (cd_cid_principal_w IS NOT NULL AND cd_cid_principal_w::text <> '') 	then 
			begin 
			select	coalesce(max(ie_sexo),' ') 
			into STRICT	ie_sexo_cid_w 
			from	cid_doenca 
			where	cd_doenca_cid	= cd_cid_principal_w;
			if (ie_sexo_cid_w	= 'M')	and (ie_sexo_w	<> 'M')		then 
				ds_erro_w	:= ds_erro_w || '2095 ';
			end if;
			if (ie_sexo_cid_w	= 'F')	and (ie_sexo_w	<> 'F')		then 
				ds_erro_w	:= ds_erro_w || '2095 ';
			end if;
			end;
		end if;
 
		if (ds_erro_w IS NOT NULL AND ds_erro_w::text <> '') then 
			begin 
			update	sus_laudo_paciente 
			set	ds_inconsistencia	= ds_erro_w, 
				nm_usuario		= nm_usuario_p, 
				dt_atualizacao	 	= clock_timestamp() 
			where	nr_seq_interno	 	= nr_sequencia_p;
			commit;
			end;
		end if;
	end if;
 
end if;
 
ds_erro_w := restringir_inconsistencia(cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, ie_tipo_atendimento_w, nr_seq_classif_atend_w, ie_clinica_w, ds_erro_w);
 
ds_erro_p			:= ds_erro_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE sus_consiste_laudo_apac ( nr_sequencia_p bigint, nm_usuario_p text, ds_erro_p INOUT text) FROM PUBLIC;

