-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_cancelar_guia_aut_web ( nr_seq_guia_p bigint, nr_seq_requisicao_p bigint, nr_seq_prestador_web_p bigint, nr_seq_perfil_web_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, nr_seq_motivo_cancel_p bigint, ds_retorno_p INOUT text) AS $body$
DECLARE


nr_seq_prestador_web_w			bigint;
ds_retorno_w				varchar(255) := '';
ie_guia_importada_w			varchar(2);
ie_validade_vencida_w			varchar(2);
ie_requisicao_executada_w		varchar(2);
ie_requisicao_intercambio_w		varchar(2);
nr_seq_segurado_w			bigint;
cd_guia_w				varchar(255);
qt_guia_imp_w				bigint;
dt_validade_senha_w			timestamp;
qt_proc_exec_w				pls_requisicao_proc.qt_proc_executado%type;
qt_mat_exec_w				pls_requisicao_mat.qt_mat_executado%type;
qt_executado_w				pls_requisicao_mat.qt_mat_executado%type;
ie_tipo_processo_w			varchar(2);
ie_cancela_guia_w			varchar(2) := 'N';
ie_cancela_req_w			varchar(2) := 'N';
nr_seq_auditoria_w			pls_auditoria.nr_sequencia%type;
nr_seq_conta_compl_w			bigint;
ie_situacao_prot_w			varchar(3);

ie_cancel_guia_local_atend_w		pls_web_param_geral.ie_cancel_guia_local_atend%type	:= 'N';
ie_cancel_req_local_atend_w		pls_web_param_geral.ie_cancel_req_local_atend%type	:= 'N';
nr_seq_local_prest_req_w		pls_usuario_web.nr_seq_local_atend%type;
nr_seq_local_prest_portal_w		pls_usuario_web.nr_seq_local_atend%type;
nr_seq_auditoria_exec_w			pls_auditoria.nr_sequencia%type;

C01 CURSOR FOR
	SELECT	ie_guia_importada,
		ie_validade_vencida,
		ie_requisicao_executada,
		ie_requisicao_intercambio
	from	(
		SELECT	coalesce(ie_guia_importada,'N') ie_guia_importada,
			coalesce(ie_validade_vencida,'N') ie_validade_vencida,
			coalesce(ie_requisicao_executada,'N') ie_requisicao_executada,
			coalesce(ie_requisicao_intercambio,'N') ie_requisicao_intercambio,
			nr_sequencia,
			nr_seq_perfil_web
		from	pls_regra_cancel_aut_req
		where	ie_situacao	= 'A' 
		and	ie_aplicacao_regra	= 1
		and	((nr_seq_usuario_web = nr_seq_prestador_web_w and  coalesce(nr_seq_perfil_web::text, '') = '') 
		or (coalesce(nr_seq_usuario_web::text, '') = '' and nr_seq_perfil_web = nr_seq_perfil_web_p))
		and	((cd_estabelecimento = cd_estabelecimento_p) and (pls_obter_se_controle_estab('RE') = 'S'))
		
union all

		select	coalesce(ie_guia_importada,'N') ie_guia_importada,
			coalesce(ie_validade_vencida,'N') ie_validade_vencida,
			coalesce(ie_requisicao_executada,'N') ie_requisicao_executada,
			coalesce(ie_requisicao_intercambio,'N') ie_requisicao_intercambio,
			nr_sequencia,
			nr_seq_perfil_web
		from	pls_regra_cancel_aut_req 
		where	ie_situacao	= 'A' 
		and	ie_aplicacao_regra	= 1
		and	((nr_seq_usuario_web = nr_seq_prestador_web_w and  coalesce(nr_seq_perfil_web::text, '') = '') 
		or (coalesce(nr_seq_usuario_web::text, '') = '' and nr_seq_perfil_web = nr_seq_perfil_web_p))
		and (pls_obter_se_controle_estab('RE') = 'N')) alias24
	order by nr_sequencia, 
		nr_seq_perfil_web;

c02 CURSOR FOR
	SELECT	a.nr_sequencia,
		b.ie_situacao
	from	pls_protocolo_conta b,
		pls_conta a
	where	a.nr_seq_protocolo	= b.nr_sequencia
	and	a.nr_seq_segurado	= nr_seq_segurado_w
	and	a.cd_guia		= cd_guia_w
	and	a.ie_origem_conta	= 'C'
	and	a.ie_status <> 'C';

C03 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_execucao_requisicao
	where	nr_seq_requisicao	= nr_seq_requisicao_p;
	
BEGIN

if (nr_seq_guia_p IS NOT NULL AND nr_seq_guia_p::text <> '') then
	begin
	select	coalesce(nr_seq_prestador_web, 0),
		cd_guia,
		nr_seq_segurado
	into STRICT	nr_seq_prestador_web_w,
		cd_guia_w,
		nr_seq_segurado_w
	from	pls_guia_plano
	where	nr_sequencia = nr_seq_guia_p;
	exception
	when others then
		nr_seq_prestador_web_w	:= 0;
	end;
	
	begin
		select	coalesce(ie_cancel_guia_local_atend,'N')
		into STRICT	ie_cancel_guia_local_atend_w
		from	pls_web_param_geral
		where	cd_estabelecimento	= cd_estabelecimento_p;
	exception
	when others then
		ie_cancel_guia_local_atend_w	:= 'N';
	end;

	begin
		-- Obter o local de atendimento do prestador da requisicao
		select	coalesce(nr_seq_local_atend, 0)
		into STRICT	nr_seq_local_prest_req_w
		from	pls_usuario_web
		where	nr_sequencia	= nr_seq_prestador_web_w;
		
		-- Obter o local de atendimento do prestador do portal
		select	nr_seq_local_atend
		into STRICT	nr_seq_local_prest_portal_w
		from	pls_usuario_web
		where	nr_sequencia	= nr_seq_prestador_web_p;
	exception
	when others then
		nr_seq_local_prest_req_w	:= null;
		nr_seq_local_prest_portal_w	:= null;
	end;
	
	if (nr_seq_prestador_web_w	= nr_seq_prestador_web_p) or
		((nr_seq_prestador_web_w <> nr_seq_prestador_web_p) and (ie_cancel_guia_local_atend_w	= 'S') and (nr_seq_local_prest_req_w	= nr_seq_local_prest_portal_w)) then

		open C01;
		loop
		fetch C01 into
			ie_guia_importada_w,
			ie_validade_vencida_w,
			ie_requisicao_executada_w,
			ie_requisicao_intercambio_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
		end loop;
		close C01;

		/*Obter se a guia foi importada para a conta medica*/

		select	count(1)
		into STRICT	qt_guia_imp_w
		from	pls_conta a
		where	a.cd_guia	= cd_guia_w
		and	a.nr_seq_segurado= nr_seq_segurado_w
		and	a.ie_status <> 'C';

		/*Obter validade da senha guia*/

		select	dt_validade_senha
		into STRICT	dt_validade_senha_w
		from	pls_guia_plano
		where	nr_sequencia	= nr_seq_guia_p;

		/* Se nao permitir, tem que verificar a quantidade de contas ja geradas para a guia */

		ie_cancela_guia_w	:= 'S';
		if (ie_guia_importada_w = 'N') then
			if (qt_guia_imp_w > 0) then
				ds_retorno_w	:= 'Nao e permitido cancelar uma guia ja importada !';
				ie_cancela_guia_w	:= 'N';
			end if;
		end if;

		/* Francisco - 06/07/2012 - Tratamento para remover do protocolo as contas das guias canceladas */

		if (ie_cancela_guia_w = 'S') then
			open c02;
			loop
			fetch c02 into
				nr_seq_conta_compl_w,
				ie_situacao_prot_w;
			EXIT WHEN NOT FOUND; /* apply on c02 */
				begin
				/* Se o protocolo ja foi rejeitado, nem precisa mais alterar nem dar mensagem */

				if (coalesce(ie_situacao_prot_w,'I') <> 'RE') then
					if (coalesce(ie_situacao_prot_w,'I')  <> 'I') then
						ds_retorno_w	:= 'O complemento de guia ja foi finalizado, o cancelamento da guia nao pode ser efetuado.';
						ie_cancela_guia_w	:= 'N';
					else
						/* Criar novo protocolo rejeitado e transferir conta para este novo */

						CALL pls_gerar_protocolo_rejeitado(nr_seq_conta_compl_w,nm_usuario_p);
					end if;
				end if;
				end;
			end loop;
			close c02;
		end if;

		if (ie_validade_vencida_w	= 'N') and (dt_validade_senha_w	< clock_timestamp()) then
			ds_retorno_w	:= 'Nao e permitido cancelar uma guia com data de validade vencida !';
		elsif ((ie_validade_vencida_w IS NOT NULL AND ie_validade_vencida_w::text <> '') and ie_cancela_guia_w = 'S') then
			ie_cancela_guia_w	:= 'S';	
		end if;
	else
		ds_retorno_w := 'Usuario logado diferente do usuario requisitante !';
	end if;
elsif (nr_seq_requisicao_p IS NOT NULL AND nr_seq_requisicao_p::text <> '') then
	begin
	select	coalesce(nr_seq_prestador_web, 0)
	into STRICT	nr_seq_prestador_web_w
	from	pls_requisicao
	where	nr_sequencia = nr_seq_requisicao_p;
	exception
	when others then
		nr_seq_prestador_web_w	:= 0;
	end;

	begin
		select	coalesce(ie_cancel_req_local_atend,'N')
		into STRICT	ie_cancel_req_local_atend_w
		from	pls_web_param_geral
		where	cd_estabelecimento	= cd_estabelecimento_p;
	exception
	when others then
		ie_cancel_req_local_atend_w	:= 'N';
	end;
	
	begin
		-- Obter o local de atendimento do prestador da requisicao
		select	nr_seq_local_atend
		into STRICT	nr_seq_local_prest_req_w
		from	pls_usuario_web
		where	nr_sequencia	= nr_seq_prestador_web_w;
		
		-- Obter o local de atendimento do prestador do portal
		select	nr_seq_local_atend
		into STRICT	nr_seq_local_prest_portal_w
		from	pls_usuario_web
		where	nr_sequencia	= nr_seq_prestador_web_p;
	exception
	when others then
		nr_seq_local_prest_req_w	:= null;
		nr_seq_local_prest_portal_w	:= null;
	end;

	if (nr_seq_prestador_web_w	= nr_seq_prestador_web_p) or
		((nr_seq_prestador_web_w <> nr_seq_prestador_web_p) and (ie_cancel_req_local_atend_w	= 'S') and (nr_seq_local_prest_req_w	= nr_seq_local_prest_portal_w))	then
	
		open C01;
		loop
		fetch C01 into
			ie_guia_importada_w,
			ie_validade_vencida_w,
			ie_requisicao_executada_w,
			ie_requisicao_intercambio_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
		end loop;
		close C01;

		/*Obter se a requisicao ja foi executada*/

		select  coalesce(max(qt_proc_executado),0)
		into STRICT	qt_proc_exec_w
		from	pls_requisicao_proc
		where	nr_seq_requisicao	= nr_seq_requisicao_p
		and	(nr_seq_guia IS NOT NULL AND nr_seq_guia::text <> '');

		select coalesce(max(qt_mat_executado),0)
		into STRICT	qt_mat_exec_w
		from	pls_requisicao_mat
		where	nr_seq_requisicao	= nr_seq_requisicao_p
		and	(nr_seq_guia IS NOT NULL AND nr_seq_guia::text <> '');

		qt_executado_w	:= qt_proc_exec_w + qt_mat_exec_w;

		/*Obter se a requisicao e de intercambio*/

		select	ie_tipo_processo
		into STRICT	ie_tipo_processo_w
		from	pls_requisicao
		where	nr_sequencia	= nr_seq_requisicao_p;

		/*Obter validade da senha guia*/

		select	dt_validade_senha
		into STRICT	dt_validade_senha_w
		from	pls_requisicao
		where	nr_sequencia	= nr_seq_requisicao_p;

		if (ie_requisicao_executada_w = 'N') and (qt_executado_w > 0) then
			ds_retorno_w := 'Nao e permitido cancelar uma requisicao ja executada!';
		elsif (ie_requisicao_executada_w IS NOT NULL AND ie_requisicao_executada_w::text <> '') then
			ie_cancela_req_w := 'S';
		end if;

		if (ie_requisicao_intercambio_w	= 'N') and (ie_tipo_processo_w	= 'I') then
			ds_retorno_w	:= 'Nao e permitido cancelar uma requisicao de intercambio!';
		elsif ((ie_requisicao_intercambio_w IS NOT NULL AND ie_requisicao_intercambio_w::text <> '') and ie_cancela_req_w = 'S') then
			ie_cancela_req_w := 'S';
		end if;

		if (ie_validade_vencida_w	= 'N') and (dt_validade_senha_w	< clock_timestamp()) then
			ds_retorno_w	:= 'Nao e permitido cancelar uma requisicao com data de validade vencida! ';
		elsif ((ie_validade_vencida_w IS NOT NULL AND ie_validade_vencida_w::text <> '') and ie_cancela_req_w = 'S') then
			ie_cancela_req_w := 'S';
		end if;
	else
		ds_retorno_w	:= 'Usuario logado diferente do usuario requisitante!';
	end if;
end if;

if (ie_cancela_guia_w = 'S' and (nr_seq_guia_p IS NOT NULL AND nr_seq_guia_p::text <> '')) then

	--pls_cancelar_guia_requisicao(nr_seq_guia_p, null, nm_usuario_p); Alterado para chamar direto a pls_cancelar_autorizacao pois o tratamento estava redundante e nao cancelava a execucao.
	CALL pls_cancelar_autorizacao(nr_seq_guia_p, nr_seq_motivo_cancel_p, nm_usuario_p, 'R');
	
	update	pls_guia_plano
	set	nr_seq_motivo_cancel = nr_seq_motivo_cancel_p
	where	nr_sequencia	= nr_seq_guia_p;
	
	if ((nr_seq_prestador_web_w <> nr_seq_prestador_web_p) and (ie_cancel_guia_local_atend_w	= 'S') and (nr_seq_local_prest_req_w	= nr_seq_local_prest_portal_w)) then
	
		CALL pls_guia_gravar_historico(nr_seq_guia_p, 7, 'Guia solicitada pelo usuario '||nr_seq_prestador_web_w
					  ||' - '||substr(pls_obter_nm_usuario_web(nr_seq_prestador_web_w),1,255)||' foi cancelada pelo usuario '||nr_seq_prestador_web_p
					  ||' - '||substr(pls_obter_nm_usuario_web(nr_seq_prestador_web_p),1,255)||', em '||
					  to_char(clock_timestamp(), 'dd/mm/yyyy hh24:mi:ss')||'.', '', nm_usuario_p);	
	else
		CALL pls_guia_gravar_historico(nr_seq_guia_p, 7, 'Guia cancelada no portal web pelo usuario '||nr_seq_prestador_web_p
					  ||' - '||substr(pls_obter_nm_usuario_web(nr_seq_prestador_web_p),1,255)||', em '||
					  to_char(clock_timestamp(), 'dd/mm/yyyy hh24:mi:ss')||'.', '', nm_usuario_p);	
	end if;

elsif (ie_cancela_req_w = 'S' and (nr_seq_requisicao_p IS NOT NULL AND nr_seq_requisicao_p::text <> '')) then

	update	pls_requisicao
	set	ie_estagio	= 3,
		ie_status	= 'C',
		dt_atualizacao	= clock_timestamp(),
		nm_usuario	= nm_usuario_p,
		nr_seq_motivo_cancel = nr_seq_motivo_cancel_p
	where	nr_sequencia	= nr_seq_requisicao_p;

	update	pls_requisicao_proc
	set	ie_status		= 'C',
		ie_estagio		= 'N',
		dt_atualizacao		= clock_timestamp(),
		nm_usuario		= nm_usuario_p
	where	nr_seq_requisicao	= nr_seq_requisicao_p;

	update	pls_requisicao_mat
	set	ie_status		= 'C',
		ie_estagio		= 'N',
		dt_atualizacao		= clock_timestamp(),
		nm_usuario		= nm_usuario_p
	where	nr_seq_requisicao	= nr_seq_requisicao_p;

	begin
		select	nr_sequencia
		into STRICT	nr_seq_auditoria_w
		from	pls_auditoria
		where	nr_seq_requisicao	= nr_seq_requisicao_p
		and		ie_status not in ('F', 'C');
	exception
	when others then
		nr_seq_auditoria_w	:= 0;
	end;

	if (coalesce(nr_seq_auditoria_w,0)	<> 0) then
		update	pls_auditoria_item
		set	ie_status = 'C',
			ie_status_solicitacao = 'C',
			dt_atualizacao	 = clock_timestamp(),
			nm_usuario	= nm_usuario_p
		where	nr_seq_auditoria	= nr_seq_auditoria_w;

		update	pls_auditoria
		set	ie_status		= 'C',
			dt_liberacao		= clock_timestamp(),
			nr_seq_proc_interno	 = NULL,
			dt_atualizacao		= clock_timestamp(),
			nm_usuario		= nm_usuario_p
		where	nr_sequencia		= nr_seq_auditoria_w;
	end if;
	
	--OS 1308565, cancela a analise da execucao
	for C03_w in C03 loop
		begin
		update	pls_execucao_requisicao
		set	ie_situacao	= 5,
			dt_atualizacao	= clock_timestamp(),
			nm_usuario	= nm_usuario_p
		where	nr_sequencia	= C03_w.nr_sequencia
		and	ie_situacao	= 2;
		
		update	pls_execucao_req_item
		set	ie_situacao	= 'C',
			dt_atualizacao	= clock_timestamp(),
			nm_usuario	= nm_usuario_p
		where	nr_seq_execucao	= C03_w.nr_sequencia
		and	ie_situacao	= 'A';
		
		begin
			select 	nr_sequencia
			into STRICT	nr_seq_auditoria_exec_w
			from 	pls_auditoria
			where	nr_seq_execucao	= C03_w.nr_sequencia;
		exception
		when others then
			nr_seq_auditoria_exec_w	:= null;
		end;
		
		if (nr_seq_auditoria_exec_w IS NOT NULL AND nr_seq_auditoria_exec_w::text <> '') then
			update	pls_auditoria
			set	ie_status		= 'C',
				dt_liberacao		= clock_timestamp(),
				nr_seq_proc_interno	 = NULL,
				dt_atualizacao		= clock_timestamp(),
				nm_usuario		= nm_usuario_p
			where	nr_sequencia		= nr_seq_auditoria_exec_w;
			
			update	pls_auditoria_item
			set	ie_status		= 'C',
				ie_status_solicitacao	= 'C',
				dt_atualizacao		= clock_timestamp(),
				nm_usuario		= nm_usuario_p
			where	nr_seq_auditoria	= nr_seq_auditoria_exec_w;
		end if;
		end;
	end loop;

	if ((nr_seq_prestador_web_w <> nr_seq_prestador_web_p) and (ie_cancel_req_local_atend_w	= 'S') and (nr_seq_local_prest_req_w	= nr_seq_local_prest_portal_w)) then
	
		CALL pls_requisicao_gravar_hist(nr_seq_requisicao_p, 'L', 'Requisicao solicitada pelo usuario '||nr_seq_prestador_web_w||
					' - '||substr(pls_obter_nm_usuario_web(nr_seq_prestador_web_w),1,255)||' foi cancelada pelo usuario '||nr_seq_prestador_web_p||
					' - '||substr(pls_obter_nm_usuario_web(nr_seq_prestador_web_p),1,255)||', em '||to_char(clock_timestamp(), 'dd/mm/yyyy hh24:mi:ss')||'.', '', nm_usuario_p);				
	else
		CALL pls_requisicao_gravar_hist(nr_seq_requisicao_p, 'L', 'Requisicao cancelada no portal web pelo usuario '||nr_seq_prestador_web_p
				   ||' - '||substr(pls_obter_nm_usuario_web(nr_seq_prestador_web_p),1,255)||', em '||
				   to_char(clock_timestamp(), 'dd/mm/yyyy hh24:mi:ss')||'.', '', nm_usuario_p);
	end if;

elsif	((ie_cancela_req_w = 'N' and ie_cancela_guia_w <> 'N') or (ie_cancela_guia_w = 'N' and ie_cancela_req_w <> 'N') or (ie_cancela_guia_w = 'N' and ie_cancela_req_w = 'N')) then
		if (coalesce(ds_retorno_w::text, '') = '' or ds_retorno_w = '') then
			ds_retorno_w	:= 'Usuario sem permissao para realizar o cancelamento !';
		end if;
end if;

ds_retorno_p := ds_retorno_w;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_cancelar_guia_aut_web ( nr_seq_guia_p bigint, nr_seq_requisicao_p bigint, nr_seq_prestador_web_p bigint, nr_seq_perfil_web_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, nr_seq_motivo_cancel_p bigint, ds_retorno_p INOUT text) FROM PUBLIC;

