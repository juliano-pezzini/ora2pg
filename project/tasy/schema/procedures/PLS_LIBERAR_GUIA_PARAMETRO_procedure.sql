-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_liberar_guia_parametro ( nr_seq_guia_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
ds_retorno_w		varchar(2);
qt_proc_liberado_w	smallint;
qt_mat_liberado_w	smallint;
qt_proc_negado_w	smallint;
qt_mat_negado_w		smallint;
qt_itens_lib_w		smallint;
qt_itens_neg_w		smallint;
ie_libera_guia_w	varchar(2);
qt_glosa_guia_w		smallint;
ie_status_w		varchar(2)	:= 'N';
nr_seq_atend_pls_w	bigint;
nr_seq_evento_atend_w	bigint;
dt_fim_evento_w		timestamp;
nr_seq_segurado_w	bigint;
dt_solicitacao_w	timestamp;
ie_tipo_guia_w		varchar(4);
qt_dias_validade_w	bigint;
dt_valid_senha_w	varchar(20);
cd_senha_w		varchar(50);
ie_origem_w       varchar(2);
cd_estabelecimento_w  smallint;


BEGIN 
 
select	count(*) 
into STRICT	qt_proc_liberado_w 
from	pls_guia_plano_proc 
where	nr_seq_guia	= nr_seq_guia_p 
and	ie_status	= 'S';
 
select	count(*) 
into STRICT	qt_mat_liberado_w 
from	pls_guia_plano_mat 
where	nr_seq_guia	= nr_seq_guia_p 
and	ie_status	= 'S';
 
qt_itens_lib_w	:= qt_mat_liberado_w + qt_proc_liberado_w;
 
select	count(*) 
into STRICT	qt_proc_negado_w 
from	pls_guia_plano_proc 
where	nr_seq_guia	= nr_seq_guia_p 
and	ie_status	= 'N';
 
select	count(*) 
into STRICT	qt_mat_negado_w 
from	pls_guia_plano_mat 
where	nr_seq_guia	= nr_seq_guia_p 
and	ie_status	= 'N';
 
qt_itens_neg_w		:= qt_proc_negado_w + qt_mat_negado_w;
 
select	count(*) 
into STRICT	qt_glosa_guia_w 
from	pls_guia_glosa 
where	nr_seq_guia = nr_seq_guia_p 
and	coalesce(nr_seq_ocorrencia::text, '') = '';
 
if (qt_glosa_guia_w	= 0) then 
	select	count(*) 
	into STRICT	qt_glosa_guia_w 
	from	pls_guia_glosa 
	where	nr_seq_guia = nr_seq_guia_p 
	and	(nr_seq_ocorrencia IS NOT NULL AND nr_seq_ocorrencia::text <> '');
 
	if (qt_glosa_guia_w	<> 0) then 
		select	cd_estabelecimento 
        into STRICT  cd_estabelecimento_w 
		from	pls_guia_plano 
		where	nr_sequencia = nr_seq_guia_p;
		 
        ie_origem_w	:= pls_obter_define_gera_analise( cd_estabelecimento_w, 'A');
		if (ie_origem_w	= 'A') then 
		qt_glosa_guia_w	:= 0;
		end if;		
	end if;
end if;
 
begin 
select	nr_seq_segurado, 
	dt_solicitacao, 
	ie_tipo_guia 
into STRICT	nr_seq_segurado_w, 
	dt_solicitacao_w, 
	ie_tipo_guia_w 
from	pls_guia_plano 
where	nr_sequencia	= nr_seq_guia_p;
exception 
when others then 
	nr_seq_segurado_w	:= null;
	dt_solicitacao_w	:= null;
	ie_tipo_guia_w		:= '';
end;
 
qt_dias_validade_w := (obter_valor_param_usuario(1204, 3, Obter_Perfil_Ativo, nm_usuario_p, 0))::numeric;
 
SELECT * FROM pls_gerar_validade_senha(	nr_seq_guia_p, nr_seq_segurado_w, qt_dias_validade_w, dt_solicitacao_w, ie_tipo_guia_w, nm_usuario_p, dt_valid_senha_w, cd_senha_w) INTO STRICT dt_valid_senha_w, cd_senha_w;
 
if (qt_itens_lib_w	> 0) and (qt_itens_neg_w	= 0) and (qt_glosa_guia_w = 0)then 
	update	pls_guia_plano 
	set	ie_estagio		= 6, 
		ie_status		= 1, 
		dt_validade_senha	= dt_valid_senha_w, 
		cd_senha		= cd_senha_w, 
		dt_autorizacao		= clock_timestamp(), 
		nm_usuario_liberacao	= nm_usuario_p 
	where	nr_sequencia		= nr_seq_guia_p;
	 
	ie_status_w	:= 'S';
elsif (qt_itens_lib_w	> 0) and (qt_itens_neg_w	> 0) and (qt_glosa_guia_w = 0) then 
	update	pls_guia_plano 
	set	ie_estagio		= 5, 
		ie_status		= 1, 
		dt_validade_senha	= dt_valid_senha_w, 
		cd_senha		= cd_senha_w, 
		dt_autorizacao		= clock_timestamp(), 
		nm_usuario_liberacao	= nm_usuario_p 
	where	nr_sequencia		= nr_seq_guia_p;
	 
	ie_status_w	:= 'S';
end if;
 
if (ie_status_w	= 'S') then 
	CALL pls_guia_gravar_historico(nr_seq_guia_p, 5, 'Status: ' || '1' || 
		' / Auditoria: ' ||'0' || ' / Guia proc: ' || '0' || 
		' / Liberar total: ' || 'S', null, nm_usuario_p);
 
	begin 
	select	nr_seq_atend_pls, 
		nr_seq_evento_atend 
	into STRICT	nr_seq_atend_pls_w, 
		nr_seq_evento_atend_w 
	from	pls_guia_plano 
	where	nr_sequencia = nr_seq_guia_p;
	exception 
	when others then 
		nr_seq_atend_pls_w := null;
	end;
 
	begin 
	select	dt_fim_evento 
	into STRICT	dt_fim_evento_w 
	from	pls_atendimento_evento 
	where	nr_sequencia = nr_seq_evento_atend_w;
	exception 
	when others then 
		dt_fim_evento_w := null;
	end;
 
	if (nr_seq_atend_pls_w IS NOT NULL AND nr_seq_atend_pls_w::text <> '') and (dt_fim_evento_w IS NOT NULL AND dt_fim_evento_w::text <> '') then 
		CALL pls_finalizar_atendimento(	nr_seq_atend_pls_w, 
						nr_seq_evento_atend_w, 
						null, 
						null, 
						nm_usuario_p);
	end if;
end if;
	 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_liberar_guia_parametro ( nr_seq_guia_p bigint, nm_usuario_p text) FROM PUBLIC;

