-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE define_care_plan (nr_seq_pe_prescr_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_atendimento_w 				atendimento_paciente.nr_atendimento%type;
nr_seq_p_care_plan_w			patient_care_plan.nr_sequencia%type;
nr_seq_p_cp_problem_w			patient_cp_problem.nr_sequencia%type;
nr_seq_p_cp_interv_plan_w		patient_cp_interv_plan.nr_sequencia%type;
nr_seq_p_cp_intervention_w		patient_cp_intervention.nr_sequencia%type;
nr_seq_p_cp_goal_w				patient_cp_goal.nr_sequencia%type;
nr_seq_p_cp_indicator_w			patient_cp_indicator.nr_sequencia%type;

nr_seq_pe_prescr_care_plan_w	pe_prescr_care_plan.nr_sequencia%type;
nr_seq_pe_prescr_problem_w		pe_prescr_problem.nr_sequencia%type;
nr_seq_pe_prescr_indicator_w	pe_prescr_indicator.nr_sequencia%type;

nr_seq_apres_w 					pe_prescr_proc.nr_seq_apres%type := 1;

nr_seq_goal_w					cp_goal.nr_sequencia%type;
nr_seq_pat_cp_goal_w			patient_cp_goal.nr_sequencia%type;
nr_seq_pat_cp_indicator_w		patient_cp_indicator.nr_sequencia%type;


qt_reg_w		bigint;

--PATIENT_CARE_PLAN
c_pat_care_plan CURSOR FOR	
SELECT	a.*
from	patient_care_plan a	
WHERE	nr_seq_prescr = nr_seq_pe_prescr_p;	

--PATIENT_CP_PROBLEM
c_pat_cp_problem CURSOR FOR	
SELECT	a.*
from	patient_cp_problem a	
WHERE 	nr_seq_pat_care_plan = nr_seq_p_care_plan_w;	

--PATIENT_CP_INTERV_PLAN
c_pat_cp_interv_plan CURSOR FOR	
SELECT 	a.*
from	patient_cp_interv_plan a		
WHERE	nr_seq_pat_cp_problem = nr_seq_p_cp_problem_w;	

--PATIENT_CP_INTERVENTION
c_pat_cp_intervention CURSOR FOR	
SELECT 	a.nr_sequencia,
		a.si_selected,
        b.nr_seq_pe_procedimento,
		a.nr_seq_cp_intervention,
		a.NR_SEQ_PAT_CP_PROBLEM
from    cp_intervention b,
		patient_cp_intervention a
where   a.nr_seq_cp_intervention = b.nr_sequencia
and    	(b.nr_seq_pe_procedimento IS NOT NULL AND b.nr_seq_pe_procedimento::text <> '')
and		a.nr_seq_pat_cp_interv_plan = nr_seq_p_cp_interv_plan_w
order by coalesce(b.ds_alternative,b.ds_display_name);

--PATIENT_CP_GOAL
c_pat_cp_goal CURSOR FOR	
SELECT	a.*
from 	patient_cp_goal a	
WHERE	nr_seq_pat_cp_problem = nr_seq_p_cp_problem_w;	

--PATIENT_CP_INDICATOR
c_pat_cp_indicator CURSOR FOR	
SELECT	a.*
from	patient_cp_indicator a		
WHERE 	nr_seq_pat_cp_goal = nr_seq_p_cp_goal_w;

-- Education goal
c_pat_cp_educ_goal CURSOR FOR	
SELECT	a.*
from 	patient_cp_goal a	
WHERE	coalesce(nr_seq_pat_cp_problem::text, '') = ''
and		a.nr_seq_pat_care_plan = nr_seq_p_care_plan_w;

-- Education indicator	
c_pat_cp_educ_indicator CURSOR FOR	
SELECT	a.*
from 	cp_goal_indicator a	
WHERE	a.ie_situacao = 'A'
and		a.nr_seq_goal = nr_seq_goal_w;

BEGIN			

/* Care plans */
		
FOR r_c_pat_care_plan IN c_pat_care_plan LOOP			
	select	count(1)
	into STRICT	qt_reg_w
	from	pe_prescr_care_plan a
	where	a.nr_seq_pat_care_plan = r_c_pat_care_plan.nr_sequencia;


	if (r_c_pat_care_plan.si_selected = 'Y') and (qt_reg_w = 0) then
		select 	nextval('pe_prescr_care_plan_seq')
		into STRICT 	nr_seq_pe_prescr_care_plan_w
		;

		INSERT INTO pe_prescr_care_plan(
			nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_pat_care_plan,
			nr_seq_prescr
		) values (
			nr_seq_pe_prescr_care_plan_w,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			r_c_pat_care_plan.nr_sequencia,
			nr_seq_pe_prescr_p
		);	
	end if;

	UPDATE	patient_care_plan
	SET		dt_release = clock_timestamp()
	WHERE	nr_seq_prescr = nr_seq_pe_prescr_p
	AND 	nm_usuario = nm_usuario_p;

	nr_seq_p_care_plan_w := r_c_pat_care_plan.nr_sequencia;

	/* patient_cp_problem */
			
	FOR r_c_pat_cp_problem IN c_pat_cp_problem LOOP

		select	count(1)
		into STRICT	qt_reg_w
		from	patient_cp_problem b,
				pe_prescr_problem a
		where	a.nr_seq_prescr = nr_seq_pe_prescr_p
		and		a.nr_seq_pat_cp_problem = b.nr_sequencia
		and		b.nr_seq_cp_problem = r_c_pat_cp_problem.nr_seq_cp_problem;

		if (r_c_pat_cp_problem.si_selected = 'Y') and (qt_reg_w = 0) then
			select 	nextval('pe_prescr_problem_seq')
			into STRICT 	nr_seq_pe_prescr_problem_w
			;

			INSERT INTO pe_prescr_problem(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_pat_cp_problem,
				nr_seq_prescr
			) values (
				nr_seq_pe_prescr_problem_w,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				r_c_pat_cp_problem.nr_sequencia,
				nr_seq_pe_prescr_p
			);	
		end if;

		UPDATE	patient_cp_problem
		SET 	dt_release = clock_timestamp()
		WHERE 	nr_sequencia = r_c_pat_cp_problem.nr_sequencia
		AND 	nm_usuario = nm_usuario_p;

		nr_seq_p_cp_problem_w := r_c_pat_cp_problem.nr_sequencia;
		/* patient_cp_interv_plan */

		FOR r_c_pat_cp_interv_plan IN c_pat_cp_interv_plan LOOP	
			UPDATE	patient_cp_interv_plan
			SET 	dt_release = clock_timestamp()
			WHERE 	nr_sequencia = r_c_pat_cp_interv_plan.nr_sequencia
			and		nm_usuario = nm_usuario_p;

			nr_seq_p_cp_interv_plan_w := r_c_pat_cp_interv_plan.nr_sequencia;
			/* patient_cp_intervention */

			nr_seq_apres_w := 1;

			FOR r_c_pat_cp_intervention IN c_pat_cp_intervention LOOP

				select	count(1)
				into STRICT	qt_reg_w
				from	patient_cp_intervention b,
						pe_prescr_proc a
				where	a.nr_seq_prescr = nr_seq_pe_prescr_p
				and		a.nr_seq_pat_cp_interv = b.nr_sequencia
				and		b.nr_seq_cp_intervention = r_c_pat_cp_intervention.nr_seq_cp_intervention;


				IF (r_c_pat_cp_intervention.si_selected = 'Y') and (qt_reg_w = 0) THEN		

                    CALL CP_GERAR_INTERVENCAO(
                                        nr_seq_pe_prescr_p,
                                        r_c_pat_cp_intervention.nr_seq_pe_procedimento,
                                        r_c_pat_cp_intervention.nr_sequencia,
                                        nm_usuario_p,
                                        r_c_pat_cp_intervention.NR_SEQ_PAT_CP_PROBLEM
                    );

					nr_seq_apres_w := nr_seq_apres_w + 1;
				END IF;

				UPDATE	patient_cp_intervention
				SET 	dt_release = clock_timestamp()
				WHERE 	nr_sequencia = r_c_pat_cp_intervention.nr_sequencia
				AND 	nm_usuario = nm_usuario_p;

			END LOOP;

		END LOOP;

		/* patient_cp_goal */

		FOR r_c_pat_cp_goal IN c_pat_cp_goal LOOP
			UPDATE	patient_cp_goal
			SET 	dt_release = clock_timestamp()
			WHERE	nr_sequencia = r_c_pat_cp_goal.nr_sequencia
			and		nm_usuario	= nm_usuario_p;

			nr_seq_p_cp_goal_w := r_c_pat_cp_goal.nr_sequencia;
			/* patient_cp_indicator */

			FOR r_c_pat_cp_indicator IN c_pat_cp_indicator LOOP

				select	count(1)
				into STRICT	qt_reg_w
				from	patient_cp_indicator b,
						pe_prescr_indicator a
				where	a.nr_seq_prescr = nr_seq_pe_prescr_p
				and		a.nr_seq_pat_cp_indicator = b.nr_sequencia
				and		b.nr_seq_cp_indicator = r_c_pat_cp_indicator.nr_seq_cp_indicator;

				IF (r_c_pat_cp_indicator.si_selected = 'Y') and (qt_reg_w = 0) THEN
					select 	nextval('pe_prescr_indicator_seq')
					into STRICT 	nr_seq_pe_prescr_indicator_w
					;

					INSERT INTO pe_prescr_indicator(
						nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_seq_prescr,
						nr_seq_pat_cp_indicator								
					) values (
						nr_seq_pe_prescr_indicator_w,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,								
						nr_seq_pe_prescr_p,
						r_c_pat_cp_indicator.nr_sequencia
					);					
				END IF;

				UPDATE	patient_cp_indicator
				SET 	dt_release = clock_timestamp()
				WHERE	nr_sequencia = r_c_pat_cp_indicator.nr_sequencia						
				AND		nm_usuario = nm_usuario_p
				AND		coalesce(dt_release::text, '') = '';	

			END LOOP;					
		END LOOP;				
	END LOOP;	

	/* Education */

	for r_c_pat_cp_educ_goal in c_pat_cp_educ_goal loop
		nr_seq_goal_w			:= r_c_pat_cp_educ_goal.nr_seq_cp_goal;
		nr_seq_pat_cp_goal_w	:= r_c_pat_cp_educ_goal.nr_sequencia;

		update	patient_cp_goal
		set 	dt_release = clock_timestamp()
		where	nr_sequencia = r_c_pat_cp_educ_goal.nr_sequencia						
		and		nm_usuario = nm_usuario_p;	

		delete from patient_cp_indicator
		where 	nr_seq_pat_care_plan = nr_seq_p_care_plan_w
		and		nr_seq_pat_cp_goal = nr_seq_pat_cp_goal_w;

		for r_c_pat_cp_educ_indicator in c_pat_cp_educ_indicator loop

			select	nextval('patient_cp_indicator_seq')
			into STRICT	nr_seq_pat_cp_indicator_w
			;

			insert into patient_cp_indicator(nr_sequencia,
					nm_usuario,
					dt_atualizacao,
					nm_usuario_nrec,
					dt_atualizacao_nrec,
					nr_seq_pat_care_plan,
					nr_seq_pat_cp_goal,
					nr_seq_cp_indicator,
					si_selected,
					dt_start,
					dt_release)
				values (nr_seq_pat_cp_indicator_w,
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nr_seq_p_care_plan_w,
					nr_seq_pat_cp_goal_w,
					r_c_pat_cp_educ_indicator.nr_seq_indicator,
					r_c_pat_cp_educ_goal.si_selected,
					clock_timestamp(),
					clock_timestamp());

			select	count(1)
			into STRICT	qt_reg_w
			from	patient_cp_indicator b,
					pe_prescr_indicator a
			where	a.nr_seq_prescr = nr_seq_pe_prescr_p
			and		a.nr_seq_pat_cp_indicator = b.nr_sequencia
			and		b.nr_seq_cp_indicator = r_c_pat_cp_educ_indicator.nr_seq_indicator;

			if (qt_reg_w = 0) then
				INSERT INTO pe_prescr_indicator(
						nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_seq_prescr,
						nr_seq_pat_cp_indicator								
					) values (
						nextval('pe_prescr_indicator_seq'),
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,								
						nr_seq_pe_prescr_p,
						nr_seq_pat_cp_indicator_w
					);
			end if;
		end loop;

	end loop;
END LOOP;

CALL DEFINE_CARE_PLAN_INTERV_PLANS( nr_seq_pe_prescr_p, nm_usuario_p );

COMMIT;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE define_care_plan (nr_seq_pe_prescr_p bigint, nm_usuario_p text) FROM PUBLIC;

