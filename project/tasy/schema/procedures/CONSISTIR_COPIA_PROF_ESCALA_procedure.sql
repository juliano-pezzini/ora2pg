-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consistir_copia_prof_escala ( lista_informacao_p text, nr_seq_ecala_orig_p bigint, nm_usuario_p text, ds_consistencia_p INOUT text) AS $body$
DECLARE

					 
cd_pessoa_fisica_w		varchar(10);
nr_seq_classif_escala_w		bigint;
ds_consistencia_w		varchar(255);
ds_consistencia_anestesita_w	varchar(255);

lista_informacao_w		varchar(400);
ie_contador_w			bigint	:= 0;
tam_lista_w			bigint;
ie_pos_virgula_w		smallint;
nr_seq_ecala_dest_w		bigint;

 
c01 CURSOR FOR					 
	SELECT	a.cd_pessoa_fisica, 
		nr_seq_classif_escala 
	from	escala_diaria_adic a, 
		escala_diaria b 
	where	b.nr_sequencia = a.nr_seq_escala_diaria 
	and	nr_seq_escala_diaria	=	nr_seq_ecala_orig_p 
	and	not exists (	SELECT	1 
				from	escala_diaria_adic x 
				where	x.nr_seq_escala_diaria = nr_seq_ecala_dest_w 
				and	x.cd_pessoa_fisica = a.cd_pessoa_fisica);


BEGIN 
 
lista_informacao_w	:= lista_informacao_p;
ds_consistencia_w	:= null;
 
while	(lista_informacao_w IS NOT NULL AND lista_informacao_w::text <> '') or 
	ie_contador_w > 200 loop 
	begin 
	tam_lista_w		:= length(lista_informacao_w);
	ie_pos_virgula_w	:= position(',' in lista_informacao_w);
 
	if (ie_pos_virgula_w <> 0) then 
		nr_seq_ecala_dest_w	:= substr(lista_informacao_w,1,(ie_pos_virgula_w - 1));
		lista_informacao_w	:= substr(lista_informacao_w,(ie_pos_virgula_w + 1),tam_lista_w);
	end if;
	 
	 
	if	(nr_seq_ecala_orig_p > 0 AND nr_seq_ecala_dest_w > 0) then 
 
		ds_consistencia_anestesita_w	:= null;
		 
		open c01;
		loop 
			fetch c01 into	cd_pessoa_fisica_w, 
					nr_seq_classif_escala_w;
			EXIT WHEN NOT FOUND; /* apply on c01 */
			 
			select	obter_se_prof_liberado_escala(cd_pessoa_fisica_w,b.nr_seq_escala,b.dt_inicio) 
			into STRICT	ds_consistencia_anestesita_w 
			from	escala_diaria b 
			where	b.nr_sequencia = 	nr_seq_ecala_dest_w;
			 
 
			if (ds_consistencia_anestesita_w IS NOT NULL AND ds_consistencia_anestesita_w::text <> '') then 
 
				ds_consistencia_w	:= replace(ds_consistencia_w,ds_consistencia_anestesita_w || chr(10),'');
			 
				if (length(ds_consistencia_w || ds_consistencia_anestesita_w || chr(10)) < 255) then 
					ds_consistencia_w	:= ds_consistencia_w || ds_consistencia_anestesita_w || chr(10);
				end if;
					 
			end if;
		end loop;
		close c01;
 
	end if;
						 
	ie_contador_w	:= ie_contador_w + 1;
	end;
end loop;
 
if (ds_consistencia_w IS NOT NULL AND ds_consistencia_w::text <> '') then 
	ds_consistencia_p := Wheb_mensagem_pck.get_texto(306431, 'DS_CONSISTENCIA_W='||ds_consistencia_w); -- 'ConsistÃªncias: ' || chr(10) || ds_consistencia_w;	 
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consistir_copia_prof_escala ( lista_informacao_p text, nr_seq_ecala_orig_p bigint, nm_usuario_p text, ds_consistencia_p INOUT text) FROM PUBLIC;

