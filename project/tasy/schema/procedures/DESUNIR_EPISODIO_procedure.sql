-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE desunir_episodio ( NR_SEQ_EPISODIO_DESTINO_P bigint, NR_SEQ_EPISODIOS_ORIGEM_P text ) AS $body$
DECLARE

 NR_SEQ_EPISODIO_DESTINO_c01_W bigint;
 NR_SEQ_EPISODIO_ORIGEM_c01_W bigint;
 NR_ATENDIMENTO_c01_W bigint;
 NR_SEQUENCIA_TF_c01_W varchar(255);
 NR_SEQUENCIA_TF_W varchar(255);

  
 -- CURSOR COM OS NR_SEQ_EPISODIO DESTINO E ORIGEM. 
 c01 CURSOR FOR 
  SELECT DISTINCT TF.NR_SEQ_EPISODIO, TFI.NR_SEQ_EPISODIO_ORIGEM, TFI.NR_ATENDIMENTO, TF.NR_SEQUENCIA 
  FROM TRANSF_EPISODIO_ITEM TFI, TRANSFERENCIA_EPISODIO TF 
  WHERE TFI.NR_SEQ_TRANSFERENCIA = TF.NR_SEQUENCIA 
  AND TF.NR_SEQ_EPISODIO = NR_SEQ_EPISODIO_DESTINO_P;

  REC RECORD;

BEGIN
 OPEN c01;
 LOOP 
  FETCH c01 INTO NR_SEQ_EPISODIO_DESTINO_c01_W, NR_SEQ_EPISODIO_ORIGEM_c01_W, NR_ATENDIMENTO_c01_W, NR_SEQUENCIA_TF_c01_W;
  EXIT WHEN NOT FOUND; /* apply on c01 */
  BEGIN 
    
   FOR REC IN (WITH RECURSIVE cte AS (
	SELECT regexp_substr(NR_SEQ_EPISODIO, separador, 1, 1) NR_SEQ_EPISODIO 
          FROM (SELECT NR_SEQ_EPISODIOS_ORIGEM_P NR_SEQ_EPISODIO, '[^,]+' separador )(regexp_substr(NR_SEQ_EPISODIO, separador, 1, LEVEL) IS NOT NULL AND (regexp_substr(NR_SEQ_EPISODIO, separador, 1, LEVEL))::text <> '') 
           UNION ALL
	SELECT regexp_substr(NR_SEQ_EPISODIO, separador, 1, (c.level+1)) NR_SEQ_EPISODIO 
          FROM (SELECT NR_SEQ_EPISODIOS_ORIGEM_P NR_SEQ_EPISODIO, '[^,]+' separador ) JOIN cte c ON ()

) SELECT * FROM cte;
) 
   LOOP  
   
    IF (REC.NR_SEQ_EPISODIO = NR_SEQ_EPISODIO_ORIGEM_c01_W) THEN 
        
     UPDATE ATENDIMENTO_PACIENTE 
     SET NR_SEQ_EPISODIO = NR_SEQ_EPISODIO_ORIGEM_c01_W 
     WHERE NR_SEQ_EPISODIO = NR_SEQ_EPISODIO_DESTINO_c01_W 
     AND NR_ATENDIMENTO = NR_ATENDIMENTO_c01_W;
   
     NR_SEQUENCIA_TF_W:= NR_SEQUENCIA_TF_W || ',' || NR_SEQUENCIA_TF_c01_W;
     
    END IF;
   
   END LOOP;
 
  END;
   
 END LOOP;
 CLOSE c01;
 
   
 UPDATE TRANSFERENCIA_EPISODIO 
 SET DT_DESVINCULO = clock_timestamp(), NM_USUARIO_DESVINCULO = Obter_Usuario_Ativo 
 WHERE NR_SEQUENCIA IN (WITH RECURSIVE cte AS (
 
             SELECT regexp_substr(info, separador, 1, 1) NR_SEQUENCIA 
             FROM (SELECT NR_SEQUENCIA_TF_W info, '[^,]+' separador )(regexp_substr(info, separador, 1, LEVEL) IS NOT NULL AND (regexp_substr(info, separador, 1, LEVEL))::text <> '') 
              UNION ALL
 
             SELECT regexp_substr(info, separador, 1, (c.level+1)) NR_SEQUENCIA 
             FROM (SELECT NR_SEQUENCIA_TF_W info, '[^,]+' separador ) JOIN cte c ON ()

) SELECT * FROM cte;
);
  
 COMMIT;
  
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE desunir_episodio ( NR_SEQ_EPISODIO_DESTINO_P bigint, NR_SEQ_EPISODIOS_ORIGEM_P text ) FROM PUBLIC;

