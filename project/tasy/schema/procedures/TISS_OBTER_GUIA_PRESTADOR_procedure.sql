-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE tiss_obter_guia_prestador (cd_estabelecimento_p bigint, cd_convenio_p bigint, ie_tiss_tipo_guia_p text, nr_atendimento_p bigint, nr_interno_conta_p bigint, cd_autorizacao_p text, nr_seq_guia_p bigint, nr_guia_prest_p INOUT text, ie_regra_p INOUT text) AS $body$
DECLARE


nr_guia_prest_w		varchar(60);
nr_sequencia_w		bigint;
nr_atual_w		bigint;
ie_forma_w		varchar(3);
dt_referencia_conta_w	timestamp;
nr_seq_ordem_w		bigint;
nm_usuario_w		varchar(15) := wheb_usuario_pck.get_nm_usuario;
nr_seq_protocolo_w 	varchar(15);
c01 CURSOR FOR
SELECT	nr_sequencia,
	nr_atual,
	ie_forma
from	tiss_regra_guia_prest
where	cd_estabelecimento					= cd_estabelecimento_p
and	cd_convenio						= cd_convenio_p
and	coalesce(ie_tiss_tipo_guia,coalesce(ie_tiss_tipo_guia_p,'X'))	= coalesce(ie_tiss_tipo_guia_p,'X')
order by coalesce(ie_tiss_tipo_guia,'X');


BEGIN

nr_guia_prest_w	:= null;

open C01;
loop
fetch C01 into	
	nr_sequencia_w,
	nr_atual_w,
	ie_forma_w;
EXIT WHEN NOT FOUND; /* apply on C01 */	
end loop;
close C01;

if (coalesce(ie_forma_w,'12') = '1') then --Numero da conta
	nr_guia_prest_w	:= to_char(nr_interno_conta_p);
elsif (coalesce(ie_forma_w,'12') = '2') then --Numero da guia
	nr_guia_prest_w	:= cd_autorizacao_p;
elsif (coalesce(ie_forma_w,'12') = '3') then --Numero da conta + Numero da guia
	nr_guia_prest_w	:= to_char(nr_interno_conta_p) || cd_autorizacao_p;
elsif (coalesce(ie_forma_w,'12') = '4') then --Numero da conta + Numero da guia + Tipo de guia
	nr_guia_prest_w	:= to_char(nr_interno_conta_p) || cd_autorizacao_p || ie_tiss_tipo_guia_p;
elsif (coalesce(ie_forma_w,'12') = '5') then --Numero da guia + Tipo de guia
	nr_guia_prest_w	:= cd_autorizacao_p || ie_tiss_tipo_guia_p;
elsif (coalesce(ie_forma_w,'12') = '6') then --Numero de sequencia da guia
	nr_guia_prest_w	:= to_char(nr_seq_guia_p);
elsif (coalesce(ie_forma_w,'12') = '7') then --Senha do atendimento
	begin
		select	b.cd_senha			
		into STRICT	nr_guia_prest_w
		from	atend_categoria_convenio b,
			atendimento_paciente a			
		where	a.nr_atendimento		= b.nr_atendimento			
		and	b.nr_seq_interno		= obter_atecaco_atend_conv(a.nr_atendimento,cd_convenio_p)
		and	a.nr_atendimento		= nr_atendimento_p  LIMIT 1;
	exception
	when others then
		nr_guia_prest_w	:= null;
	end;
elsif (coalesce(ie_forma_w,'12') = '8') then --Codigo interno do prestador
	select	max(obter_valor_conv_estab(cd_convenio_p, cd_estabelecimento_p, 'CD_INTERNO'))
	into STRICT	nr_guia_prest_w
	;
elsif (coalesce(ie_forma_w,'12') = '9') then --Prontuario do paciente
	select	max(obter_prontuario_pf(cd_estabelecimento,cd_pessoa_fisica))
	into STRICT	nr_guia_prest_w
	from	atendimento_paciente
	where	nr_atendimento	= nr_atendimento_p;
elsif (coalesce(ie_forma_w,'12') = '10') then --Numero da guia da EUP
	begin
		select	b.nr_doc_convenio			
		into STRICT	nr_guia_prest_w
		from	atend_categoria_convenio b,
			atendimento_paciente a			
		where	a.nr_atendimento		= b.nr_atendimento			
		and	b.nr_seq_interno		= obter_atecaco_atend_conv(a.nr_atendimento,cd_convenio_p)
		and	a.nr_atendimento		= nr_atendimento_p  LIMIT 1;
	exception
	when others then
		nr_guia_prest_w	:= null;
	end;
elsif (coalesce(ie_forma_w,'12') = '11') then --Numero do atendimento
	nr_guia_prest_w	:= nr_atendimento_p;
elsif (coalesce(ie_forma_w,'12') = '12') then --Intervalo de numeracao
	if (nr_atual_w IS NOT NULL AND nr_atual_w::text <> '') then
		nr_guia_prest_w	:= nr_atual_w;
		
		update	tiss_regra_guia_prest
		set	nr_atual 	= nr_atual_w + 1,				
			dt_atualizacao	= clock_timestamp()		
		where	nr_sequencia	= nr_sequencia_w;		

	end if;
elsif (coalesce(ie_forma_w,'12') = '17') then --Senha do atendimento conforme data referencia da Conta paciente
	begin
		select	dt_mesano_referencia
		into STRICT	dt_referencia_conta_w
		from	conta_paciente
		where	nr_interno_conta = nr_interno_conta_p;
	exception
	when others then
		dt_referencia_conta_w := null;
	end;	

	begin
		select	b.cd_senha			
		into STRICT	nr_guia_prest_w
		from	atend_categoria_convenio b,
			atendimento_paciente a			
		where	a.nr_atendimento		= b.nr_atendimento			
		and	a.nr_atendimento		= nr_atendimento_p
		and	dt_referencia_conta_w between PKG_DATE_UTILS.start_of(b.dt_inicio_vigencia,'dd', 0) and PKG_DATE_UTILS.END_OF(coalesce(b.dt_final_vigencia,add_months(clock_timestamp(),36)),'DAY',0)  LIMIT 1;
	exception
	when others then
		nr_guia_prest_w	:= null;
	end;	
elsif (coalesce(ie_forma_w,'12') = '18') then --Intervalo de numeracao (Nao substitui ao atualizar conta tiss)
	if (nr_atual_w IS NOT NULL AND nr_atual_w::text <> '') then
	
	
		select	min(x.nr_guia_prestador),
			min(x.NR_SEQUENCIA)
		into STRICT	nr_guia_prest_w,
			nr_seq_ordem_w
		from	tiss_conta_guia_regra x
		where	x.nr_sequencia = (SELECT min(a.nr_sequencia)
					from	tiss_conta_guia_regra a
					where	a.cd_estabelecimento = cd_estabelecimento_p
					and	a.cd_convenio	     = cd_convenio_p
					and	a.cd_autorizacao     = cd_autorizacao_p
					and	a.ie_tiss_tipo_guia  = ie_tiss_tipo_guia_p
					and	a.nr_atendimento     = nr_atendimento_p
					and	a.nr_interno_conta   = nr_interno_conta_p
					and	coalesce(a.nr_seq_guia::text, '') = '');
					
		if (nr_seq_ordem_w > 0) and (nr_guia_prest_w IS NOT NULL AND nr_guia_prest_w::text <> '')then
			update	tiss_conta_guia_regra
			set	nr_seq_guia = nr_seq_guia_p
			where	nr_sequencia = nr_seq_ordem_w;
		end if;
	
		
		if (coalesce(nr_guia_prest_w::text, '') = '') then
			
			nr_guia_prest_w	:= nr_atual_w;
			
			update	tiss_regra_guia_prest
			set	nr_atual 	= nr_atual_w + 1,				
				dt_atualizacao	= clock_timestamp()		
			where	nr_sequencia	= nr_sequencia_w;
			
			
			insert into tiss_conta_guia_regra(
				nr_interno_conta,
				cd_autorizacao,
				nr_guia_prestador,
				dt_atualizacao,
				nr_sequencia,
				cd_estabelecimento,
				nr_atendimento,
				nr_seq_guia,
				ie_tiss_tipo_guia,
				cd_convenio,
				nm_usuario,
				nm_usuario_nrec,
				dt_atualizacao_nrec)
			values (nr_interno_conta_p,
				cd_autorizacao_p,
				nr_guia_prest_w,
				clock_timestamp(),
				nextval('tiss_conta_guia_regra_seq'),
				cd_estabelecimento_p,
				nr_atendimento_p,
				nr_seq_guia_p,
				ie_tiss_tipo_guia_p,
				cd_convenio_p,
				nm_usuario_w,
				nm_usuario_w,
				clock_timestamp());
			
			
		end if;
	
				

	end if;	
elsif (coalesce(ie_forma_w,'12') = '19') then ----Numero da conta + Procolo convenio
    begin
        if (nr_interno_conta_p IS NOT NULL AND nr_interno_conta_p::text <> '') then
            nr_seq_protocolo_w := obter_nr_seq_protocolo(nr_interno_conta_p);
        end if;
        nr_guia_prest_w := nr_interno_conta_p || to_char(nr_seq_protocolo_w);
    end;
elsif (coalesce(ie_forma_w,'12') = '20') then --Numero da guia na EUP conforme periodo inicial da conta
	begin
		select	dt_periodo_inicial
		into STRICT	dt_referencia_conta_w
		from	conta_paciente
		where	nr_interno_conta = nr_interno_conta_p;
	exception
	when others then
		dt_referencia_conta_w := null;
	end;	

	select	max(b.nr_doc_convenio)
	into STRICT	nr_guia_prest_w
	from	atend_categoria_convenio b,
		atendimento_paciente a			
	where	a.nr_atendimento	= b.nr_atendimento			
	and	a.nr_atendimento	= nr_atendimento_p
	and 	b.cd_convenio		= cd_convenio_p
	and	b.dt_inicio_vigencia    = (	SELECT 	max(x.dt_inicio_vigencia)
						from 	atend_categoria_convenio x
						where 	x.nr_atendimento = a.nr_atendimento
						and	x.cd_convenio    = b.cd_convenio
						and	dt_referencia_conta_w between x.dt_inicio_vigencia and coalesce(x.dt_final_vigencia,ESTABLISHMENT_TIMEZONE_UTILS.endofday(dt_referencia_conta_w)));
end if;

nr_guia_prest_p	:= nr_guia_prest_w;
ie_regra_p	:= ie_forma_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE tiss_obter_guia_prestador (cd_estabelecimento_p bigint, cd_convenio_p bigint, ie_tiss_tipo_guia_p text, nr_atendimento_p bigint, nr_interno_conta_p bigint, cd_autorizacao_p text, nr_seq_guia_p bigint, nr_guia_prest_p INOUT text, ie_regra_p INOUT text) FROM PUBLIC;

