-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE get_ihc_psg ( nr_seq_claim_p ihc_claim.nr_sequencia%type, nm_usuario_p ihc_claim.nm_usuario%type) AS $body$
DECLARE


nr_sequencia_w		ihc_psg.nr_sequencia%type;
ie_anaesthetic_w	ihc_psg.ie_anaesthetic%type := null;
cd_same_day_w		ihc_claim.cd_same_day%type := null;
vl_procedimento_w	procedimento_paciente.vl_procedimento%type;
ie_charge_raised_w	ihc_psg.ie_charge_raised%type;
ie_service_type_w	ihc_psg.ie_service_type%type;
qt_theatre_mins_w	ihc_psg.qt_theatre_mins%type := null;
qt_proc_w		integer;
qt_service_time_w	ihc_psg.qt_service_time%type := null;
qt_inconsistencia_w	integer := 0;
dt_inicio_real_w	cirurgia.dt_inicio_real%type;
dt_termino_w		cirurgia.dt_termino%type;
vl_charge_msg_w		ihc_msg.vl_charge%type;
vl_hospital_cid_w	ihc_claim.vl_hospital%type;
vl_charge_cid_w		ihc_claim.vl_charge%type;
vl_medical_cid_w    ihc_claim.vl_medical%type;
cd_classification_w ihc_claim.cd_classification%type;
count_w 			integer;
nr_account_w		ihc_claim.nr_account%type;
ds_classification_w varchar(20);
ds_mensagem_w		eclipse_inco_account.ds_action_user%type;

c01 CURSOR FOR
SELECT	c.cd_procedimento_loc cd_procedimento,
		a.vl_procedimento,
		a.dt_procedimento,
		a.ie_origem_proced,
		a.nr_atendimento,
		a.nr_cirurgia,
		a.dt_inicio_procedimento,
		a.dt_final_procedimento,
		b.nr_account,
		b.cd_same_day,
		a.nr_sequencia nr_sequencia_proc
from	procedimento_paciente a,
		ihc_claim b,
		procedimento c,
		conta_paciente e,
		convenio d
where	a.nr_atendimento = b.nr_episode
and   	a.nr_interno_conta  = b.nr_account
and 	c.cd_procedimento = a.cd_procedimento
and 	c.ie_origem_proced = a.ie_origem_proced
and 	e.nr_interno_conta 		= a.nr_interno_conta
and 	e.cd_convenio_parametro = d.cd_convenio
and	b.nr_sequencia = nr_seq_claim_p
and 	coalesce(a.NR_SEQ_PROC_PRINC::text, '') = '' 
and   	c.IE_CLASSIFICACAO <> 3     -- not a room and bed charge
and (substr(a.cd_procedimento_convenio, 0, 2) not in ('AP','DR','DS','DX','OH','OT','PX') or coalesce(a.cd_procedimento_convenio, 'XPTO') = 'XPTO')
and 	((substr(a.cd_procedimento_convenio, 0, 2) in ('CM','DE'))
	or (a.IE_PROC_PRINC_ATEND = 'N')  
		or (d.ie_tipo_convenio = 13 and c.ie_origem_proced = 20));

cursor_w c01%rowtype;


BEGIN
	
	select	count(*)
	into STRICT	qt_proc_w
	from	procedimento_paciente a,
			ihc_claim b
	where	a.nr_atendimento = b.nr_episode
	and   a.nr_interno_conta  = b.nr_account
	and		b.nr_sequencia = nr_seq_claim_p;
	
	open c01;
	loop
	fetch c01 into cursor_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
	
	begin
		
		if (cursor_w.cd_same_day = 0 or cursor_w.cd_same_day = 1) then
			ie_anaesthetic_w := 'N';
		end if;
		
		if (coalesce(cursor_w.vl_procedimento::text, '') = '') then
			CALL generate_inco_eclipse(cursor_w.nr_account, 1, obter_desc_expressao(587168) || ' (Proc: ' || cursor_w.cd_procedimento || ')', nm_usuario_p);
		else
			vl_procedimento_w := cursor_w.vl_procedimento * 100;
		end if;
			
		if (coalesce(cursor_w.dt_procedimento::text, '') = '') then
			CALL generate_inco_eclipse(cursor_w.nr_account, 1, obter_desc_expressao(583872) || ' (Proc: ' || cursor_w.cd_procedimento || ')', nm_usuario_p);			
		end if;			
			
		if (qt_proc_w > 1) then			
			if (coalesce(cursor_w.dt_inicio_procedimento::text, '') = '') then
				CALL generate_inco_eclipse(cursor_w.nr_account, 1, obter_desc_expressao(563062) || '(PSG: ' || cursor_w.nr_account || ' / ' ||
					cursor_w.cd_procedimento || ')', nm_usuario_p);
			elsif (coalesce(cursor_w.dt_final_procedimento::text, '') = '') then
				CALL generate_inco_eclipse(cursor_w.nr_account, 1, obter_desc_expressao(566601) || '(PSG: ' || cursor_w.nr_account || ' / ' ||
					cursor_w.cd_procedimento || ')', nm_usuario_p);
			else
				qt_service_time_w := (cursor_w.dt_final_procedimento - cursor_w.dt_inicio_procedimento) * 60;
			end if;		
			
			if (cd_same_day_w = 0 or cd_same_day_w = 1) then
			
				if (coalesce(cursor_w.nr_cirurgia::text, '') = '') then
					CALL generate_inco_eclipse(cursor_w.nr_account, 1, obter_desc_expressao(584425) || ' (Proc: ' || cursor_w.cd_procedimento || ')', nm_usuario_p);				
				else
					select	dt_termino,
							dt_inicio_real
					into STRICT	dt_termino_w,
							dt_inicio_real_w
					from	cirurgia
					where	nr_atendimento = cursor_w.nr_atendimento
					and		nr_cirurgia = cursor_w.nr_cirurgia;
					
					if (coalesce(dt_inicio_real_w::text, '') = '') then
						CALL generate_inco_eclipse(cursor_w.nr_account, 1, obter_desc_expressao(576897) || ' (Proc: ' || cursor_w.cd_procedimento || ')', nm_usuario_p);
					elsif (coalesce(dt_termino_w::text, '') = '') then
						CALL generate_inco_eclipse(cursor_w.nr_account, 1, obter_desc_expressao(585489) || ' (Proc: ' || cursor_w.cd_procedimento || ')', nm_usuario_p);
					else
						qt_theatre_mins_w := (dt_termino_w - dt_inicio_real_w) * 60;
					end if;
				end if;
			
			end if;
			
		end if;	
		
		if (vl_procedimento_w > 0) then
			ie_charge_raised_w := 'C';
		else
			ie_charge_raised_w := 'I';
		end if;
		
		if (coalesce(cursor_w.ie_origem_proced::text, '') = '') then
			CALL generate_inco_eclipse(cursor_w.nr_account, 1, obter_desc_expressao(898036), nm_usuario_p);
		else
			ie_service_type_w := get_eclipse_conversion('IE_ORIGEM_PROCED', cursor_w.ie_origem_proced, 'IHC', 'PSG', cursor_w.nr_account, ie_service_type_w);
		end if;

		select	count(*)
		into STRICT	qt_inconsistencia_w
		from	eclipse_inco_account
		where	nr_interno_conta = cursor_w.nr_account;

		if (qt_inconsistencia_w = 0) then

			select	nextval('ihc_psg_seq')
			into STRICT	nr_sequencia_w
			;

			insert into ihc_psg(
						nr_sequencia,
						nr_seq_claim,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						ie_anaesthetic,
						vl_charge,
						ie_charge_raised,
						cd_service,
						ie_service_type,
						dt_service,
						ie_theatre_band,
						ie_theatre_type,
						ie_theatre_category,
						qt_theatre_mins,
						vl_total_charge,
						qt_service_time,
						nr_main_service
						)
			values (
						nr_sequencia_w,
						nr_seq_claim_p,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						'L',
						--ie_anaesthetic_w,
						vl_procedimento_w,
						ie_charge_raised_w,
						cursor_w.cd_procedimento,
						ie_service_type_w,
						cursor_w.dt_procedimento,
						'LW',
						'N',
						'S',
						qt_theatre_mins_w,
						vl_procedimento_w,
						qt_service_time_w,
						cursor_w.nr_sequencia_proc
						);
						
			CALL get_ihc_msg(nr_sequencia_w,nm_usuario_p);

			select 	coalesce(sum(vl_charge),0)
			into STRICT 	vl_charge_msg_w
			from 	ihc_msg
			where 	nr_seq_psg = nr_sequencia_w;

			select 	vl_hospital,
					vl_charge,
					vl_medical
			into STRICT 	vl_hospital_cid_w,
					vl_charge_cid_w,
					vl_medical_cid_w
			from 	ihc_claim
			where 	nr_sequencia = nr_seq_claim_p;
			
			if (vl_charge_msg_w != 0) then
				update 	ihc_psg
				set 	vl_total_charge = vl_charge_msg_w + vl_procedimento_w
				where 	nr_sequencia 	= nr_sequencia_w;


				vl_charge_msg_w := vl_charge_msg_w + vl_procedimento_w;
			else
				vl_charge_msg_w := vl_procedimento_w;
			end if;

			update 	ihc_claim
			set 	vl_hospital 	= vl_hospital_cid_w + vl_charge_msg_w,
					vl_charge 		= vl_charge_cid_w + vl_charge_msg_w + vl_medical_cid_w,
					vl_medical      = vl_medical_cid_w
			where 	nr_sequencia 	= nr_seq_claim_p;
		end if;
	end;
	end loop;
	close c01;
	commit;

	select	cd_classification,
			nr_account
	into STRICT	cd_classification_w,
			nr_account_w
	from	ihc_claim
	where	nr_sequencia = nr_seq_claim_p;

	select count(1)
	into STRICT count_w
	from ihc_psg
	where nr_seq_claim = nr_seq_claim_p;
	
	if ((cd_classification_w in ('OB', 'SU', 'AS', 'D2', 'D3', 'D4')) and (count_w = 0)
		and qt_inconsistencia_w = 0) then
		
		if (cd_classification_w = 'D1') then
			ds_classification_w := 'Day Band 1';
		elsif (cd_classification_w = 'D2') then
			ds_classification_w := 'Day Band 2';
		elsif (cd_classification_w = 'D3') then
			ds_classification_w := 'Day Band 3';
		elsif (cd_classification_w = 'D4') then
			ds_classification_w := 'Day Band 4';
		elsif (cd_classification_w = 'SU') then
			ds_classification_w := 'Surgical';
 		elsif (cd_classification_w = 'AS') then
 			ds_classification_w := 'Advanced Surgical';
 		else
 			ds_classification_w := 'Obstetrics';
 		end if;

 		ds_mensagem_w := replace(obter_desc_expressao(967312), '#@DS_CLASSIFICACAO#@', ds_classification_w);
		CALL generate_inco_eclipse(cursor_w.nr_account, 1, ds_mensagem_w, nm_usuario_p);
	end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE get_ihc_psg ( nr_seq_claim_p ihc_claim.nr_sequencia%type, nm_usuario_p ihc_claim.nm_usuario%type) FROM PUBLIC;

