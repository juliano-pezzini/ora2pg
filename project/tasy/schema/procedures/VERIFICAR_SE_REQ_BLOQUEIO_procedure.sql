-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE verificar_se_req_bloqueio ( nr_requisicao_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, ds_erro_p INOUT text) AS $body$
DECLARE


/*
Esta procedure retorna se uma Requisição está bloqueada para determinado usuário.
O bloqueio acontece sempre após a localizacão da requisição pelo usuário, se o usuário localizar outra requisição a atual é desbloqueada.
Utilizada inicialmente para o tratamento no PALM
*/
nr_sequencia_w		bigint;
nm_usuario_w		varchar(15);
dt_atualizacao_w		timestamp;
dt_tentativa_w		timestamp;
ie_bloqueado_w		varchar(1) := 'N';
qt_min_controle_lote_w	bigint;
qt_min_controle_usuario_ww	bigint;
qt_min_diferenca_w		double precision;
ds_retorno_w		varchar(255);
qt_existe_w		bigint;


BEGIN

/* Verifica se a requisição existe */

select	count(*)
into STRICT	qt_existe_w
from	requisicao_material
where	nr_requisicao = nr_requisicao_p;

if (qt_existe_w = 0) then
	ds_erro_p := WHEB_MENSAGEM_PCK.get_texto(279204)|| nr_requisicao_p ||WHEB_MENSAGEM_PCK.get_texto(279206);
	goto final;
end if;

qt_min_controle_lote_w	:= 1;  /*Definição padrão do sistema, logo abaixo pega o valor conforme parâmetro [125]  do usuário que está realizando o atendimento*/
if (qt_min_controle_lote_w > 0) then
	begin

	delete
	from	requisicao_bloqueio
	where	nm_usuario	= nm_usuario_p
	and	nr_requisicao <> nr_requisicao_p;

	select	coalesce(max(nr_sequencia), 0)
	into STRICT	nr_sequencia_w
	from	requisicao_bloqueio
	where	nr_requisicao = nr_requisicao_p;

	if (nr_sequencia_w = 0) then

		insert into requisicao_bloqueio(
			nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			nr_requisicao)
		values (	nextval('requisicao_bloqueio_seq'),
			clock_timestamp(),
			nm_usuario_p,
			nr_requisicao_p);

		ie_bloqueado_w	:= 'N';
	else
		begin

		select	nm_usuario,
			dt_atualizacao
		into STRICT	nm_usuario_w,
			dt_atualizacao_w
		from	requisicao_bloqueio
		where	nr_sequencia	= nr_sequencia_w;

		if (nm_usuario_w = nm_usuario_p) then

			update	requisicao_bloqueio
			set	dt_atualizacao	= clock_timestamp()
			where	nr_sequencia	= nr_sequencia_w;

			ie_bloqueado_w	:= 'N';

		elsif (nm_usuario_w <> nm_usuario_p) then
			begin

			dt_tentativa_w		:= clock_timestamp();
			qt_min_diferenca_w	:= ((dt_tentativa_w - dt_atualizacao_w) * 1440);

			/*Pega o tempo para controle do atendimento conforme parâmetro [125] do PalmWeb ( Usuário que está realizando o atendimento )*/

			qt_min_controle_usuario_ww := obter_param_usuario(88, 125, null, nm_usuario_w, cd_estabelecimento_p, qt_min_controle_usuario_ww);

			if (qt_min_diferenca_w < qt_min_controle_usuario_ww) then
				ie_bloqueado_w	:= 'S';
			else
				update	requisicao_bloqueio
				set	nm_usuario	= nm_usuario_p,
					dt_atualizacao	= dt_tentativa_w
				where	nr_sequencia	= nr_sequencia_w;

				ie_bloqueado_w	:= 'N';
			end if;

			end;
		end if;
		end;
	end if;
	end;
end if;

<<final>>

if (ie_bloqueado_w = 'S') then
	ds_erro_p		:= WHEB_MENSAGEM_PCK.get_texto(279208) || nm_usuario_w || ' !' ||  chr(13) || chr(13) ||
				WHEB_MENSAGEM_PCK.get_texto(279209) || to_char(dt_atualizacao_w,'dd/mm/yyyy hh24:mi:ss') || chr(13) || chr(10) ||
				WHEB_MENSAGEM_PCK.get_texto(279210) || to_char(dt_tentativa_w, 'dd/mm/yyyy hh24:mi:ss') || chr(13) || chr(10) ||
				WHEB_MENSAGEM_PCK.get_texto(279212) || qt_min_controle_usuario_ww || 'min';
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE verificar_se_req_bloqueio ( nr_requisicao_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, ds_erro_p INOUT text) FROM PUBLIC;

