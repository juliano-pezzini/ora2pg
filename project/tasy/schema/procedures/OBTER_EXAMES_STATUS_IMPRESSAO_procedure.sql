-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE obter_exames_status_impressao ( cd_estabelecimento_p bigint, nm_usuario_p text, resultado INOUT REFCURSOR ) AS $body$
BEGIN

   open resultado for
   SELECT distinct
       a.nr_prescricao,
       a.nr_sequencia,
       a.cd_procedimento,
       p.ds_procedimento,
       a.qt_procedimento,
       a.dt_atualizacao,
       a.nm_usuario,
       a.ds_observacao,
       a.ie_origem_proced,
       a.ie_urgencia,
       a.ds_dado_clinico,
       a.ie_suspenso,
       a.cd_setor_atendimento,
       a.nr_atendimento,
       a.cd_medico,
       a.dt_prescricao,
       a.dt_liberacao,
       a.dt_liberacao_medico,
       a.ie_recem_nato,
       to_char(t.dt_entrada, 'dd/mm/yyyy hh24:mi:ss')                                                                      dt_entrada,
       g.cd_setor_atendimento                                                                                              cd_setor_paciente,
       CASE WHEN coalesce(a.cd_recem_nato::text, '') = '' THEN  c.nm_pessoa_fisica  ELSE substr(obter_nome_pf(a.cd_recem_nato), 1, 80)                                                         || 'rn de '                                                         || c.nm_pessoa_fisica END                                                                                               nm_paciente,
       elimina_acentuacao(upper(CASE WHEN coalesce(a.cd_recem_nato::text, '') = '' THEN  c.nm_pessoa_fisica  ELSE substr(obter_nome_pf(a.cd_recem_nato), 1, 80)                                                                                  || 'rn de '                                                                                  || c.nm_pessoa_fisica END ))                                                                                            nm_paciente_sem_acento,
       c.dt_nascimento,
       to_char(a.dt_mestruacao, 'dd/mm/yyyy hh24:mi:ss ')                                                                  dt_mestruacao,
       c.ie_sexo,
       a.qt_peso,
       substr(obter_nome_pessoa_fisica(t.cd_pessoa_responsavel, null), 1, 40)                                                nm_pessoa_responsavel,
       c.nr_cpf,
       substr(obter_descricao_padrao('pessoa_fisica', 'nr_telefone_celular', t.cd_pessoa_responsavel), 1, 20)                 nr_telefone_resp,
       c.nr_prontuario,
       t.cd_procedencia,
       a.ds_observacao_coleta,
       t.ds_senha,
       d.nm_pessoa_fisica                                                                                                  nm_medico,
       d.nr_cpf                                                                                                            nr_cpf_medico,		/*elemar - 27/08/2008*/
       e.nr_crm,
       a.dt_resultado                                                                                                      dt_resultado,
       a.hr_resultado                                                                                                      hr_resultado,
       e.uf_crm,			/*elemar - 27/08/2008*/
       f.cd_convenio,
       a.qt_altura_cm,
       to_char(lab_obter_data_coleta_amostra(a.nr_prescricao, a.nr_sequencia), 'dd/mm/yyyy hh24:mi:ss')                     dt_coleta,
       f.cd_categoria,
       lab_obter_dados_pac_med_uso(c.cd_pessoa_fisica, 'q')                                                                qt_dose,
       lab_obter_dados_pac_med_uso(c.cd_pessoa_fisica, 'd')                                                                dt_ultima_dose,
       f.cd_usuario_convenio,
       f.dt_validade_carteira, 	/*elemar - 27/08/2008*/
       f.nr_doc_convenio,		/*elemar - 27/08/2008*/
       f.ie_tipo_guia,			/*elemar - 27/08/2008*/
       v.ds_convenio,
       v.cd_cgc                                                                                                            cd_cgc_conv,		/*elemar - 27/08/2008*/
       v.cd_regional                                                                                                       cd_regional_conv,	/*elemar - 27/08/2008*/
       a.cd_material_exame,
       m.ds_material_exame,
       y.cd_exame,
       y.nm_exame,
       a.ds_material_especial,
       coalesce(a.ie_amostra, 'n')                                                                                               ie_amostra_entregue,
       a.ds_horarios,
       a.nr_seq_exame,
       z.ds_endereco,
       z.nr_endereco,
       z.ds_complemento,
       z.ds_bairro,
       z.ds_municipio,
       z.sg_estado,
       z.nr_telefone,
       z.cd_cep,
       a.dt_prev_execucao,
       s.ds_setor_atendimento                                                                                              ds_setor_paciente,
       g.cd_unidade_basica
       || ' '
       || cd_unidade_compl                                                                                                 cd_unidade,
       obter_preco_procedimento(t.cd_estabelecimento, f.cd_convenio, f.cd_categoria, a.dt_prescricao, a.cd_procedimento,
                                a.ie_origem_proced,
                                f.cd_tipo_acomodacao,
                                t.ie_tipo_atendimento,
                                g.cd_setor_atendimento,
                                a.cd_medico,
                                null,
                                f.cd_usuario_convenio,
                                f.cd_plano_convenio,
                                t.ie_clinica,
                                f.cd_empresa,
                                'p')                                                                                       vl_procedimento,
       a.ie_executar_leito,
       a.cd_recem_nato,
       substr(obter_nome_pf(a.cd_recem_nato), 1, 80)                                                                         nm_recem_nato,
       y.nr_seq_grupo,
       coalesce(substr(obter_estab_integracao(a.cd_estabelecimento, 19), 1, 20), a.cd_estabelecimento)                              cd_estabelecimento,
       a.nr_seq_proc_interno,
       substr(obter_proc_interno(a.nr_seq_proc_interno, 'ci'), 1, 20)                                                        cd_interno_integracao,
       y.cd_exame_integracao                                                                                               cd_exame_integracao,
       m.cd_material_integracao,
       a.nr_controle_exame                                                                                                 nr_controle_exame,
       substr(obter_medic_hist_saude_atend(t.nr_atendimento), 1, 2000)                                                       ds_medicamento_uso,
       substr(obter_compl_pf(a.cd_pessoa_fisica, 5, 'n'), 1, 255)                                                              nm_mae,
       t.ie_tipo_atendimento
   FROM dual x, convenio v, atendimento_paciente t, setor_atendimento s, procedimento p, atend_paciente_unidade g, atend_categoria_convenio f, pessoa_fisica d, pessoa_fisica c, (
           SELECT distinct
               a.nr_controle_exame,
               a.nr_prescricao,
               a.nr_sequencia,
               a.ie_amostra,
               to_char(a.dt_resultado, 'dd/mm/yyyy hh24:mi:ss')        dt_resultado,
               to_char(a.dt_resultado, 'hh24:mi:ss')                   hr_resultado,
               a.dt_prev_execucao,
               b.nr_atendimento,
               b.dt_mestruacao,
               b.dt_liberacao_medico,
               b.qt_peso,
               b.ie_recem_nato,
               b.dt_prescricao,
               a.ie_se_necessario,
               a.nm_usuario,
               a.dt_atualizacao,
               a.ds_horarios,
               b.cd_estabelecimento,
               a.ds_observacao_coleta,
               a.cd_setor_atendimento,
               a.ds_dado_clinico,
               b.dt_liberacao,
               a.ie_suspenso,
               a.ie_executar_leito,
               a.qt_procedimento,
               a.cd_material_exame,
               a.nr_seq_proc_interno,
               a.ie_urgencia,
               a.nr_seq_exame,
               b.cd_medico,
               b.cd_pessoa_fisica,
               a.cd_procedimento,
               a.ds_material_especial,
               a.ds_observacao,
               b.qt_altura_cm,
               b.cd_recem_nato,
               a.ie_origem_proced,
               a.ie_status_atend,
               a.dt_integracao
           from
               prescr_medica        b,
               prescr_procedimento  a
           where
                   a.nr_prescricao = b.nr_prescricao
               and (coalesce(dt_liberacao_medico, dt_liberacao) IS NOT NULL AND (coalesce(dt_liberacao_medico, dt_liberacao))::text <> '')
               and coalesce(a.dt_integracao_etiq::text, '') = ''
               and (a.dt_integracao IS NOT NULL AND a.dt_integracao::text <> '')
               and a.cd_motivo_baixa = 0
               and coalesce(a.ie_suspenso, 'n') = 'n'
               and a.cd_setor_atendimento in (
                   select
                       s.cd_setor_atendimento
                   from
                       setor_atendimento s
                   where
                       upper(s.nm_usuario_banco) = upper(nm_usuario_p)
               )
               and ( ( cd_estabelecimento_p = 0 )
                     or ( coalesce(substr(obter_estab_integracao(b.cd_estabelecimento, 19), 1, 20), b.cd_estabelecimento) = cd_estabelecimento_p ) )
               and lab_valida_realiza_integracao(a.nr_prescricao, a.nr_sequencia) = 's'
       ) a
LEFT OUTER JOIN compl_pessoa_fisica z ON (a.cd_pessoa_fisica = z.cd_pessoa_fisica AND 1 = z.ie_tipo_complemento)
LEFT OUTER JOIN medico e ON (a.cd_medico = e.cd_pessoa_fisica)
LEFT OUTER JOIN prescr_proc_hor i ON (a.nr_prescricao = i.nr_prescricao AND a.nr_sequencia = i.nr_seq_procedimento)
LEFT OUTER JOIN material_exame_lab m ON (a.cd_material_exame = m.cd_material_exame)
LEFT OUTER JOIN lab_parametro l ON (a.cd_estabelecimento = l.cd_estabelecimento)
, coalesce(a
LEFT OUTER JOIN exame_laboratorio y ON (COALESCE(a.nr_seq_exame, obter_exame_lab_proc_int(a.nr_seq_proc_interno)) = y.nr_seq_exame)
WHERE a.cd_procedimento = p.cd_procedimento and a.ie_origem_proced = p.ie_origem_proced and a.cd_pessoa_fisica = c.cd_pessoa_fisica   and a.cd_medico = d.cd_pessoa_fisica       and g.nr_seq_interno = obter_atepacu_paciente(a.nr_atendimento, 'a') and g.cd_setor_atendimento = s.cd_setor_atendimento and ( ( coalesce(l.ie_proces_status_webserv, 's') = 's'
               and a.ie_status_atend = 13 )
             or ( coalesce(l.ie_proces_status_webserv, 's') = 'n'
                  and a.ie_status_atend >= 13
                  and (a.dt_integracao IS NOT NULL AND a.dt_integracao::text <> '') ) ) and ( ( coalesce(l.qt_dias_int_webs, 0) = 0 )
             or ( coalesce(dt_liberacao_medico, dt_liberacao) > clock_timestamp() - l.qt_dias_int_webs ) ) and f.nr_atendimento = a.nr_atendimento and t.nr_atendimento = a.nr_atendimento and ( ( ( a.ie_se_necessario = 's'
                 and exists (
           select
               1
           from
               empresa_integr_dados i
           where
                   a.cd_estabelecimento = coalesce(i.cd_estabelecimento, a.cd_estabelecimento)
               and i.nr_seq_empresa_integr = 19
               and ie_gerar_exame_se_necessario = 's'
       )
                 and (i.nm_usuario_reaprazamento IS NOT NULL AND i.nm_usuario_reaprazamento::text <> '') )
               or ( coalesce(a.ie_se_necessario, 'n') = 'n' ) )
             or ( not exists (
           select
               1
           from
               empresa_integr_dados i
           where
                   a.cd_estabelecimento = coalesce(i.cd_estabelecimento, a.cd_estabelecimento)
               and i.nr_seq_empresa_integr = 19
               and ie_gerar_exame_se_necessario = 's'
       ) ) ) and f.dt_inicio_vigencia = (
           select
               max(w.dt_inicio_vigencia)
           from
               atend_categoria_convenio w
           where
               w.nr_atendimento = a.nr_atendimento
       ) and f.cd_convenio = v.cd_convenio order by
       a.nr_atendimento,
       a.nr_prescricao;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE obter_exames_status_impressao ( cd_estabelecimento_p bigint, nm_usuario_p text, resultado INOUT REFCURSOR ) FROM PUBLIC;

