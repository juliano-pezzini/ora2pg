-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE tasy_atualizar_base_relatorio () AS $body$
DECLARE

cd_classif_relat_w                 varchar(05);
cd_relatorio_w                     integer;
cd_cgc_cliente_w           varchar(14);
nr_seq_relatorio_w         bigint;
nr_seq_parametro_w         bigint;
nr_seq_documentacao_w		bigint;
nr_seq_documentacao_ww		bigint;
nr_seq_banda_w                     bigint;
nr_seq_campo_w                     bigint;
nr_seq_banda_superior_w            bigint;
nr_seq_apresentacao_w              bigint;
nr_seq_apresentacao_ww             bigint;
nr_seq_regra_w                     bigint;
nr_seq_documento_w         bigint;
nm_usuario_ref_w           varchar(15);
nr_seq_rel_atual_w         bigint;
nr_seq_relatorio_ww                bigint;
nr_seq_parametro_ww                bigint;
nr_seq_banda_ww                    bigint;
nr_seq_campo_ww                    bigint;
nr_seq_impressora_w                bigint;
qt_impressora_w                    smallint;
vl_retorno_w                       double precision;
qt_processo_w                      integer;
ds_comando_w                       varchar(2000);
ds_sep_bv_w                        varchar(10);
c70                                integer;
retorno_w                  integer;
cont_w                             bigint;
qt_rel_w                   bigint;
qt_tabela_w                        bigint;
nm_tablespace_w                    varchar(50);
ds_erro_w                  varchar(255);
qt_relatorios_c_w          bigint;
dt_relat_pesq_w                      timestamp;
cursor_w						integer;
exec_cursor_w					bigint;
cd_relatorio_schematic_w		varchar(5);
cd_classif_relat_schematic_w	varchar(4);
nr_sequencia_schematic_w		varchar(10);
nr_seq_new_w					bigint;
rows_processed_w				varchar(5000);
str_tabela varchar(4000);
str_fk  varchar(4000);
w_base_wheb varchar(3);

C010 CURSOR FOR
SELECT 	nr_sequencia,
	cd_classif_relat,
	cd_relatorio,
  cd_cgc_cliente
from 	w_relatorio a
where (dt_atualizacao > dt_relat_pesq_w
or ((dt_atualizacao > (SELECT dt_atualizacao from relatorio b where b.cd_classif_relat = a.cd_classif_relat and b.cd_relatorio = a.cd_relatorio and coalesce(b.cd_cgc_cliente,'x') = coalesce(a.cd_cgc_cliente,'x')))
or (not exists ( select 1 from relatorio b where b.cd_classif_relat = a.cd_classif_relat and b.cd_relatorio = a.cd_relatorio and coalesce(b.cd_cgc_cliente,'x') = coalesce(a.cd_cgc_cliente,'x')))))
and a.cd_relatorio > 0
order by 1;
C020 CURSOR FOR
SELECT 	nr_sequencia
from 	w_relatorio_parametro
where	nr_seq_relatorio = nr_seq_relatorio_w;
C040 CURSOR FOR
SELECT 	distinct
		a.nr_sequencia,
		a.nr_seq_apresentacao,
		coalesce(b.nr_seq_apresentacao,0)
FROM w_banda_relatorio a
LEFT OUTER JOIN w_banda_relatorio b ON (a.nr_seq_relatorio = b.nr_seq_relatorio AND a.nr_seq_banda_superior = b.nr_sequencia)
WHERE a.nr_seq_relatorio 	= nr_seq_relatorio_w   order by	a.nr_seq_apresentacao;
C041 CURSOR FOR
SELECT 	nr_sequencia
from 	w_banda_relat_campo
where 	nr_seq_banda	= nr_seq_banda_w;
C042 CURSOR FOR
SELECT 	nr_sequencia
from 	w_banda_relat_variavel
where 	nr_seq_banda	= nr_seq_banda_w;
C050 CURSOR FOR
SELECT 	nr_seq_impressora
from 	w_Etiqueta
where	nr_seq_relatorio = nr_seq_relatorio_w;
C060 CURSOR FOR
SELECT 	nr_seq_regra
from 	w_funcao_regra_relat a
where	nr_seq_relatorio = nr_seq_relatorio_w;
C070 CURSOR FOR
SELECT 	nr_sequencia
from 	w_relatorio_documentacao a
where	nr_seq_relatorio = nr_seq_relatorio_w;
/*CURSOR C080 IS
SELECT 	nr_sequencia
from 	w_usuario_relatorio a
where	nm_usuario_ref = nm_usuario_ref_w;  */
  i RECORD;

BEGIN

select 	obter_separador_bv
into STRICT	ds_sep_bv_w
;

select	count(*)
into STRICT	qt_rel_w
from	w_relatorio;

w_base_wheb := 'N';
select obter_se_base_wheb
 into STRICT w_base_wheb 
;

if (qt_rel_w	> 10) then
	 qt_processo_w := 0;
	 CALL gravar_processo_longo('','TASY_ATUALIZAR_BASE_RELATORIO',qt_processo_w);
	
	 -- Lista de tabelas e fks correspondentes, para ser desabilitadas durante o processo e no final ser habilitadas novamente.
	str_tabela := 'relatorio_perfil,usuario_relatorio,procedimento_relatorio,Relatorio_perfil_param,med_tipo_avaliacao,PLS_RELAT_AUTORIZACAO,PLS_REGRA_MALA_DIRETA,MED_RELATORIO,EHR_TEMPLATE,EHR_TEMPLATE_RELAT,NUT_RELATORIO_TIPO,REGRA_RELAT_AGENDA,PLS_PARAMETROS,PLS_PARAMETROS,PLS_REGRA_RELATORIO,PLS_NOTIFICACAO_REGRA,MP_PROC_OBJ_TASY_REL,BANCO_ESTABELECIMENTO,REGRA_LAYOUT_REL_LAUDO,PLS_REL_EVENT_CALL_CENTER,PLS_SCA_CLASSIFICACAO,PLS_TED_REGRA_RELATORIO,PLS_CONGENERE,AP_LOTE_IMPRESSAO_PDA,FILA_IMPRESSAO_ETIQUETA,NFSE_REGRA,TASY_PROJETO_ASSINATURA,RELATORIO_VERSAO,REGRA_ENVIO_EMAIL_AUTO,RELATORIO_AUTO_IMP,funcao_regra_relat,mprev_texto_relat,doc_defeito_item_rel,RELATORIO_FUNCAO,LAB_RELATORIO_IMP,SCHEMATIC_RELATORIO,RELATORIO_COMPUTADOR,NFSE_REGRA,TIPO_ADIANTAMENTO,PLS_PROG_REAJ_DOCUMENTACAO,REGRA_AP_LOTE_IMPRESSAO,RELATORIO_DINAMICO,WSUITE_RELATORIO_REGRA,RELATORIO_VALIDACAO';
    str_fk     := 'RELPERF_RELATOR_FK_I,USUREL_RELATOR_FK,PRORELA_RELATOR_FK,RELPEPA_RELPARA_FK,MEDTIAV_RELATOR_FK,PLSREAU_RELATOR_FK,PLSRMAD_RELATOR_FK,MEDRELA_RELATOR_FK,EHRTEMP_RELATOR_FK,EHRTERE_RELATOR_FK,NUTRETI_RELATOR_FK,REGRLAG_RELATOR_FK,PLSPAR_RELATOR_FK2,PLSPAR_RELATOR_FK,PLSRERL_RELATOR_FK,PLSNORE_RELATOR_FK,MPPOTRE_RELATOR_FK,BANESTA_RELATOR_FK,RLYRL_RELATOR_FK,PLSRECE_RELATOR_FK,PLSSCAC_RELATOR_FK,PLSRGTR_RELATOR_FK,PLSCONG_RELATOR_FK,APLOIMP_RELATOR_FK,FILIMET_RELATOR_FK,NFSEREGR_RELATOR_FK,TASPRAS_RELATOR_FK,RELVERS_RELATOR_FK,REENEMAU_RELAUIM_FK,RELAUIM_RELATOR_FK_I,FUNRERE_FUNREGR_FK,MPRTREL_RELATOR_FK,docdefrel_relator_fk,RELFUNC_FUNCAO_FK_I,LABRELIMP_RELATOR_FK,SCHREL_RELATOR_FK,REL_COMP_RELATOR_FK,NFSEREGR_RELATOR_JAVA_FK,TPADIANT_RELATOR_FK,PLSPRDC_RELATOR_FK,REGAPLOIM_RELATOR_FK,RELDIN_DCRELDI_FK,WSRELRE_RELATOR_FK,RELAT_VAL_RELATOR_FK';

    -- Desabilitar tabelas/Constraints
	 FOR i IN (WITH RECURSIVE cte AS (
SELECT trim(both regexp_substr(str_tabela, '[^,]+', 1, LEVEL)) as tabela,
          trim(both regexp_substr(str_fk, '[^,]+', 1, LEVEL)) as fk
       LEVEL <= LENGTH( REGEXP_REPLACE( str_tabela, '[^,]', NULL ))+1  UNION ALL
SELECT trim(both regexp_substr(str_tabela, '[^,]+', 1, LEVEL)) as tabela,
          trim(both regexp_substr(str_fk, '[^,]+', 1, LEVEL)) as fk
       LEVEL <= LENGTH( REGEXP_REPLACE( str_tabela, '[^,]', NULL ))+1 JOIN cte c ON ()

) SELECT * FROM cte;
)
     LOOP
	     ds_comando_w := 'alter table ' || i.tabela || ' disable constraint ' || i.fk;

       vl_retorno_w := Obter_Valor_Dinamico(ds_comando_w, vl_retorno_w);	
	   END LOOP;
	
	delete from relatorio
	where cd_relatorio < 0;
	
	delete from w_relatorio
	where	substr(cd_classif_relat,1,1) = 'C';	
	
	commit;

	dt_relat_pesq_w := coalesce(to_date(to_char(obter_data_geracao_versao-1,'dd/mm/yyyy') ||' 23:59:59','dd/mm/yyyy hh24:mi:ss'),clock_timestamp() - interval '90 days');
else
	dt_relat_pesq_w := to_date('01/01/2000','dd/mm/yyyy');

end if;


OPEN C010;
LOOP
FETCH C010 INTO
	nr_seq_relatorio_w,
	cd_classif_relat_w,
	cd_relatorio_w,
  cd_cgc_cliente_w;
EXIT WHEN NOT FOUND; /* apply on C010 */
	begin
	select nextval('relatorio_seq')
	into STRICT nr_seq_relatorio_ww
	;

	select	coalesce(max(nr_sequencia),0)
	into STRICT	nr_seq_rel_atual_w
	from 	relatorio
	where 	cd_classif_relat 	= cd_classif_relat_w
	and 	cd_relatorio		= cd_relatorio_w
  and 	coalesce(cd_cgc_cliente,'x')		= coalesce(cd_cgc_cliente_w,'x');

	if (nr_seq_rel_atual_w <> 0) then
	    delete from relatorio a
        where exists ( SELECT 1 from relatorio b
                   where b.nr_sequencia	= nr_seq_rel_atual_w
                   and a.cd_relatorio = b.cd_relatorio*-1
                   and a.CD_CLASSIF_RELAT = b.CD_CLASSIF_RELAT
                   and coalesce(a.CD_CGC_CLIENTE,'x') = coalesce(b.CD_CGC_CLIENTE,'x')
                   and a.cd_relatorio < 0 );
                   
        commit;
	
		update relatorio
		set cd_relatorio 		= cd_relatorio * -1
		where nr_sequencia	= nr_seq_rel_atual_w;
	end if;
	begin
	--gravar_processo_longo('INSERT INTO RELATORIO ('|| cd_relatorio_w ||')','TASY_ATUALIZAR_BASE_RELATORIO',null);
	insert into relatorio(
		nr_sequencia, ds_titulo, dt_atualizacao, nm_usuario, ie_borda_sup,
		ie_borda_inf, ie_borda_esq, ie_borda_dir, ie_orientacao,
		ie_imprime_vazio, ie_filtro_html, ie_filtro_word, ie_tipo_papel,
		ie_filtro_excel, ie_filtro_texto, ds_cor_fundo, qt_margem_sup,
		qt_margem_inf, qt_margem_esq, qt_margem_dir, qt_espaco_coluna,
		qt_coluna, nm_tabela, ds_sql, nr_seq_modulo, ie_chamada_direta,
		cd_classif_relat, cd_relatorio, ie_etiqueta,cd_relatorio_wheb,
		cd_cgc_cliente, ds_regra, ds_procedure, qt_altura, qt_largura,
		nr_seq_mod_impl, cd_classif_relat_wheb, cd_pais)
	SELECT
		nr_seq_relatorio_ww, ds_titulo, dt_atualizacao, nm_usuario, ie_borda_sup,
		ie_borda_inf, ie_borda_esq, ie_borda_dir, ie_orientacao,
		ie_imprime_vazio, ie_filtro_html, ie_filtro_word, ie_tipo_papel,
		ie_filtro_excel, ie_filtro_texto, ds_cor_fundo, qt_margem_sup,
		qt_margem_inf, qt_margem_esq, qt_margem_dir, qt_espaco_coluna,
		qt_coluna, nm_tabela, ds_sql, nr_seq_modulo, ie_chamada_direta,
		cd_classif_relat, cd_relatorio, ie_etiqueta,cd_relatorio_wheb,
		cd_cgc_cliente, ds_regra, ds_procedure, qt_altura, qt_largura,
		nr_seq_mod_impl, cd_classif_relat_wheb, cd_pais
	from 	w_relatorio
	where 	nr_sequencia	= nr_seq_relatorio_w;
	exception
		when others then
		CALL Gravar_Log_Atualizacao_Erro(null,REPLACE(obter_desc_expressao(508011), '#@DS_RELATORIO#@', '') ||cd_classif_relat_w || cd_relatorio_w,'','Tasy');
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(184937,'DS_RELATORIO='||cd_classif_relat_w || cd_relatorio_w || chr(13) || chr(10)|| sqlerrm);
		
	end;

	if (substr(cd_classif_relat_w,1,1) = 'W') then /*Elemar - 31/01/2008 - So gravar se for relatorio W*/
		update	relatorio_funcao
		Set	nr_seq_relatorio	= nr_seq_relatorio_ww
		where	nr_seq_relatorio	= nr_seq_rel_atual_w;

		insert into relatorio_funcao(
			cd_funcao,  nr_seq_relatorio,  dt_atualizacao,  nm_usuario,
			ie_exige_perfil,  qt_copia,  ie_logo,  ie_imprimir,  ie_configurar)
		SELECT	cd_funcao,  nr_seq_relatorio_ww,  dt_atualizacao,  nm_usuario,
			ie_exige_perfil,  qt_copia,  ie_logo,  ie_imprimir,  ie_configurar
		from 	w_relatorio_funcao b
		where 	b.nr_seq_relatorio	= nr_seq_relatorio_w
		and	not exists (	SELECT	1
					from	relatorio_funcao c
					where	c.nr_seq_relatorio = nr_seq_relatorio_ww
					and	c.cd_funcao = b.cd_funcao);
	end if;

	OPEN C020;
	LOOP
	FETCH C020 INTO
		nr_seq_parametro_w;
	EXIT WHEN NOT FOUND; /* apply on C020 */
		begin
		select nextval('relatorio_parametro_seq')
		into STRICT nr_seq_parametro_ww
		;
		insert into relatorio_parametro(
			nr_sequencia, cd_parametro, ds_parametro, ie_tipo_atributo,
			nr_seq_relatorio, ie_origem_informacao, dt_atualizacao,
			nm_usuario, cd_dominio, ds_sql, vl_padrao, ie_forma_apresent,
			qt_tamanho_campo, ds_valor_parametro, ie_forma_passagem,
			ds_alias, ds_mascara, qt_tam_byte, ie_multi_linha,
			nr_seq_localizar, nr_seq_apresent, ds_observacao,
			qt_desloc_direita, ie_obrigatorio)
		SELECT
			nr_seq_parametro_ww, cd_parametro, ds_parametro, ie_tipo_atributo,
			nr_seq_relatorio_ww, ie_origem_informacao, dt_atualizacao,
			nm_usuario, cd_dominio, ds_sql, vl_padrao, ie_forma_apresent,
			qt_tamanho_campo, ds_valor_parametro, ie_forma_passagem,
			ds_alias, ds_mascara, qt_tam_byte, ie_multi_linha,
			nr_seq_localizar, nr_seq_apresent, ds_observacao,
			qt_desloc_direita, ie_obrigatorio
		from 	w_relatorio_parametro
		where	nr_seq_relatorio	= nr_seq_relatorio_w
		  and	nr_sequencia	= nr_seq_parametro_w;
		end;
	END LOOP;
	CLOSE C020;

	OPEN C040;
	LOOP
	FETCH C040 INTO
		nr_seq_banda_w,
		nr_seq_apresentacao_w,
		nr_seq_apresentacao_ww;
	EXIT WHEN NOT FOUND; /* apply on C040 */
		begin
		select nextval('banda_relatorio_seq')
		into STRICT nr_seq_banda_ww
		;
		if (nr_seq_apresentacao_ww = 0) then
	            nr_seq_banda_superior_w	:= null;
		else
			select max(nr_sequencia)
			into STRICT	nr_seq_banda_superior_w
			from 	banda_relatorio
			where nr_seq_relatorio		= nr_seq_relatorio_ww
			  and nr_seq_apresentacao 	= nr_seq_apresentacao_ww;
		end if;
		insert into Banda_relatorio(
			nr_sequencia, ie_tipo_banda, ds_banda, dt_atualizacao,
			nm_usuario, qt_altura, ds_cor_fundo, ie_quebra_pagina,
			ie_reimprime_nova_pagina, ie_alterna_cor_fundo, ie_imprime_vazio,
			ie_imprime_primeiro, ie_borda_sup, ie_borda_inf, ie_borda_esq,
			ie_borda_dir, nr_seq_banda_superior, nr_seq_relatorio, nm_tabela,
			ds_sql, ds_expressao, nr_seq_apresentacao, ds_cor_header,
			ds_cor_footer, ds_cor_quebra, ds_regra, ie_banda_padrao,
			qt_max_registro, ds_observacao, ie_fundo_transparente)
		SELECT
			nr_seq_banda_ww, ie_tipo_banda, ds_banda, dt_atualizacao,
			nm_usuario, qt_altura, ds_cor_fundo, ie_quebra_pagina,
			ie_reimprime_nova_pagina, ie_alterna_cor_fundo, ie_imprime_vazio,
			ie_imprime_primeiro, ie_borda_sup, ie_borda_inf, ie_borda_esq,
			ie_borda_dir, nr_seq_banda_superior_w, nr_seq_relatorio_ww, nm_tabela,
			ds_sql, ds_expressao, nr_seq_apresentacao, ds_cor_header,
			ds_cor_footer, ds_cor_quebra, ds_regra, ie_banda_padrao,
			qt_max_registro, ds_observacao, ie_fundo_transparente
		from 	w_banda_relatorio
		where	nr_seq_relatorio	= nr_seq_relatorio_w
		  and	nr_sequencia	= nr_seq_banda_w;	
		  
		OPEN C042;
		LOOP
		FETCH C042 INTO
			nr_seq_campo_w;
		EXIT WHEN NOT FOUND; /* apply on C042 */
			begin
			select nextval('banda_relat_variavel_seq')
			into STRICT nr_seq_campo_ww
			;
			insert into banda_relat_variavel(	nr_sequencia,
											nr_seq_banda,
											dt_atualizacao,
											nm_usuario, 
											dt_atualizacao_nrec, 
											nm_usuario_nrec, 
											nm_variavel, 
											ds_expressao ,
											ds_valor_inicial, 
											ie_classe_variavel, 
											ie_operacao)
			SELECT
											nr_seq_campo_ww, 
											nr_seq_banda_ww, 
											dt_atualizacao, 
											nm_usuario, 
											dt_atualizacao_nrec, 
											nm_usuario_nrec, 
											nm_variavel, 
											ds_expressao ,
											ds_valor_inicial, 
											ie_classe_variavel, 
											ie_operacao
											
			from 	w_banda_relat_variavel
			where	nr_seq_banda	= nr_seq_banda_w
			  and	nr_sequencia	= nr_seq_campo_w;
			end;
		END LOOP;
		CLOSE C042;
		OPEN C041;
		LOOP
		FETCH C041 INTO
			nr_seq_campo_w;
		EXIT WHEN NOT FOUND; /* apply on C041 */
			begin
			select nextval('banda_relat_campo_seq')
			into STRICT nr_seq_campo_ww
			;

			insert into banda_relat_campo(
				nr_sequencia, nr_seq_banda, ds_campo, nr_seq_apresentacao,
				ie_tipo_campo, dt_atualizacao, nm_usuario, ie_borda_sup,
				ie_borda_inf, ie_borda_esq, ie_borda_dir, ie_totalizar,
				ie_campo_quebra, ie_quebra_pagina, ie_zera_apos_imprimir,
				ie_transparente, ie_alinhamento, ie_ajustar_tamanho,
				ie_estender, ie_alinhar_banda, qt_altura, qt_tamanho,
				qt_topo, qt_esquerda, ds_label, nm_atributo, ds_conteudo,
				ds_expressao, ds_mascara, ds_sql, ds_cor_fundo, qt_tam_fonte,
				ds_cor_fonte, ds_tipo_fonte, ie_tipo_barcode, ie_humano_barcode,
				pr_altura_barcode, qt_fonte_barcode, ds_estilo_fonte, ds_cor_label,
				ie_altera_valor, ds_observacao, ie_posicao_legenda, ie_metodo_estender, ie_sensivel, ie_info_paciente)
			SELECT
				nr_seq_campo_ww, nr_seq_banda_ww, ds_campo, nr_seq_apresentacao,
				ie_tipo_campo, dt_atualizacao, nm_usuario, ie_borda_sup,
				ie_borda_inf, ie_borda_esq, ie_borda_dir, ie_totalizar,
				ie_campo_quebra, ie_quebra_pagina, ie_zera_apos_imprimir,
				ie_transparente, ie_alinhamento, ie_ajustar_tamanho,
				ie_estender, ie_alinhar_banda, qt_altura, qt_tamanho,
				qt_topo, qt_esquerda, ds_label, nm_atributo, ds_conteudo,
				ds_expressao, ds_mascara, ds_sql, ds_cor_fundo, qt_tam_fonte,
				ds_cor_fonte, ds_tipo_fonte, ie_tipo_barcode, ie_humano_barcode,
				pr_altura_barcode, qt_fonte_barcode, ds_estilo_fonte, ds_cor_label,
				ie_altera_valor, ds_observacao, ie_posicao_legenda, ie_metodo_estender, ie_sensivel, ie_info_paciente
			from 	w_banda_relat_campo
			where	nr_seq_banda	= nr_seq_banda_w
			  and	nr_sequencia	= nr_seq_campo_w;


			insert into banda_relat_campo_longo(nr_sequencia,
				nr_seq_banda_relat_campo, 
				dt_atualizacao, 
				nm_usuario, 
				dt_atualizacao_nrec, 
				nm_usuario_nrec, 
			 	ds_conteudo)
			SELECT 	nextval('banda_relat_campo_longo_seq'), 
				nr_seq_campo_ww, 
				dt_atualizacao, 
				nm_usuario, 
				dt_atualizacao_nrec, 
				nm_usuario_nrec, 
			 	ds_conteudo
			from	w_banda_relat_campo_longo
			where   nr_seq_banda_relat_campo = nr_seq_campo_w;

			end;
		END LOOP;
		CLOSE C041;
		end;
	END LOOP;
	CLOSE C040;

/* 	Atualizacao de Etiquetas
		a) Se Relatorio de Clientes sempre substitui todos as Etiquetas
		b) Se Relatorio Wheb mantem os relatorios do cliente e Adiciona novos
*/
	if (nr_seq_rel_atual_w > 0) and (substr(cd_classif_relat_w,1,1) = 'W') then
		begin
		update etiqueta
		set	nr_seq_relatorio	= nr_seq_relatorio_ww
		where	nr_seq_relatorio	= nr_seq_rel_atual_w;
		end;

	end if;
	OPEN C050;
	LOOP
	FETCH C050 INTO
		nr_seq_impressora_w;
	EXIT WHEN NOT FOUND; /* apply on C050 */
		begin
		select 	coalesce(count(*),0)
		into STRICT	qt_impressora_w
		from 	Impressora_etiqueta
		where	nr_sequencia	= nr_seq_impressora_w;
		if (qt_impressora_w = 0) then
			insert into Impressora_etiqueta(
				nr_sequencia, dt_atualizacao, nm_usuario,
				ds_impressora, nm_impressora_so, ie_forma_envio)
			values (
				nr_seq_impressora_w, clock_timestamp(), 'Carga',
				'Carga', 'Carga', 'L');
		end if;
		begin
		--gravar_processo_longo('INSERT ETIQUETA('|| cd_relatorio_w ||') Sequencia->' || nr_seq_impressora_w,'TASY_ATUALIZAR_BASE_RELATORIO',null);
		insert into etiqueta(
			nr_seq_relatorio, nr_seq_impressora, dt_atualizacao,
			nm_usuario, ds_conteudo)
		SELECT
			nr_seq_relatorio_ww, nr_seq_impressora_w, dt_atualizacao,
			nm_usuario, ds_conteudo
		from 	w_etiqueta
		where	nr_seq_impressora		= nr_seq_impressora_w;
		exception
			when others then
				nr_seq_impressora_w	:= nr_seq_impressora_w;
		end;
		end;
	END LOOP;
	CLOSE C050;

	OPEN C060;
	LOOP
	FETCH C060 INTO
		nr_seq_regra_w;
	EXIT WHEN NOT FOUND; /* apply on C060 */
		begin
		--gravar_processo_longo('INSERT FUNCAO_REGRA_RELAT('|| cd_relatorio_w ||') Sequencia->' || nr_seq_regra_w,'TASY_ATUALIZAR_BASE_RELATORIO',null);
		insert into funcao_regra_relat(
			nr_seq_relatorio, nr_seq_regra, dt_atualizacao,
			nm_usuario, ds_sql_validacao, cd_estabelecimento)
		SELECT
			nr_seq_relatorio_ww, nr_seq_regra_w, dt_atualizacao,
			nm_usuario, ds_sql_validacao, cd_estabelecimento
		from 	w_funcao_regra_relat
		where	nr_seq_regra		= nr_seq_regra_w;
		exception
			when others then
				nr_seq_regra_w	:= nr_seq_regra_w;
		end;
	END LOOP;
	CLOSE C060;
	
	OPEN C070;
		LOOP
		FETCH C070 INTO
			nr_seq_documentacao_w;
		EXIT WHEN NOT FOUND; /* apply on C070 */
			begin
			
			select	nextval('relatorio_documentacao_seq')
			into STRICT	nr_seq_documentacao_ww
			;
			
			insert into relatorio_documentacao(
				NR_SEQUENCIA,
 				NR_SEQ_RELATORIO,        				
 				DS_OBJETIVO,            
 				DS_OBSERVACAO,          
 				DT_ATUALIZACAO,         
 				NM_USUARIO,              				
 				DT_CLASSIFICACAO,       
 				IE_TIPO_CLASSIFICACAO,
 				CD_DOCUMENTACAO,
        CD_PF_SOLIC,
        CD_PF_CRIADOR)
			SELECT	nr_seq_documentacao_ww, 
				nr_seq_relatorio_ww,
				ds_objetivo,
				ds_observacao,
				dt_atualizacao,
				nm_usuario,
				dt_classificacao,
				ie_tipo_classificacao,
				cd_documentacao,
        cd_pf_solic,
        cd_pf_criador
			from 	w_relatorio_documentacao
			where	nr_seq_relatorio = nr_seq_relatorio_w
			  and	nr_sequencia = nr_seq_documentacao_w;
			end;
		END LOOP;
		CLOSE C070;

	/*begin
	select 	count(*)
	into	qt_tabela_w
	from	user_tables
	where	table_name = 'W_RELATORIO_DOCUMENTACAO';

	if	(qt_tabela_w = 0) then

		select	' TABLESPACE '||obter_tablespace_tab_temp || ' '
		into	nm_tablespace_w
		from 	dual;

		Exec_Sql_Dinamico('CRIAR W_RELATORIO_DOCUMENTACAO',	'create table w_relatorio_documentacao '|| nm_tablespace_w || 'as (select * from relatorio_documentacao where 1=2)');
	end if;

	ds_comando_w :=	' select	nr_sequencia ' ||
			' from		w_relatorio_documentacao ' ||
			' where		nr_seq_relatorio = :nr_seq_relatorio_w';

	C70 := DBMS_SQL.OPEN_CURSOR;
	DBMS_SQL.PARSE(C70, ds_comando_w, dbms_sql.Native);
	DBMS_SQL.DEFINE_COLUMN(C70, 1, nr_seq_documento_w);
	DBMS_SQL.BIND_VARIABLE(C70, 'NR_SEQ_RELATORIO_W', nr_seq_relatorio_w,255);

	retorno_w := DBMS_SQL.execute(C70);

	while	( DBMS_SQL.FETCH_ROWS(C70) > 0 ) loop

	DBMS_SQL.COLUMN_VALUE(C70, 1, nr_seq_documento_w);

	ds_comando_w := ' insert into relatorio_documentacao('  	||
				'		nr_seq_relatorio, ' 	||
				'		nr_sequencia, ' 	||
				'		dt_atualizacao, ' 	||
				'		nm_usuario, '		||
				'		cd_pf_solic, '		||
				'		cd_pf_criador, '	||
				'		ds_objetivo, '		||
				'		ds_observacao) ' 	||
				' select 	:nr_seq_relatorio_ww, ' ||
				'		:nr_seq_documento_w, '	||
				'		dt_atualizacao, '	||
				'		nm_usuario, ' 		||
				'		cd_pf_solic, '		||
				'		cd_pf_criador, ' 	||
				'		ds_objetivo, ' 		||
				'		ds_observacao '		||
				'from		w_relatorio_documentacao ' ||
				'where		nr_sequencia = :nr_seq_documento_w';
			EXEC_SQL_DINAMICO_BV('Relatorio documentacao',ds_comando_w,
						'nr_seq_relatorio_ww='||nr_seq_relatorio_ww||ds_sep_bv_w||
						'nr_seq_documento_w='||nr_seq_documento_w);
	END LOOP;
	DBMS_SQL.CLOSE_CURSOR(C70);
	exception
		when others then
			nr_seq_documento_w	:= nr_seq_documento_w;
	end;

	commit; */
	begin
	
	insert	into	usuario_relatorio(nm_usuario_ref, nr_seq_relatorio, dt_atualizacao, nm_usuario, qt_copia, ie_logo, ie_configurar, ie_imprimir, ds_impressora)
	SELECT	nm_usuario_ref, nr_seq_relatorio_ww, dt_atualizacao, nm_usuario, qt_copia, ie_logo, ie_configurar, ie_imprimir, ds_impressora
	from	usuario_relatorio
	where	nr_seq_relatorio = nr_seq_relatorio_w;
	
	exception
		when others then
			nm_usuario_ref_w	:= nm_usuario_ref_w;
			CALL Gravar_Log_Atualizacao_Erro(null,REPLACE(obter_desc_expressao(508011), '#@DS_RELATORIO#@', '') || nr_seq_relatorio_ww || cd_relatorio_w,'','Tasy');
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(184937,'DS_RELATORIO='||nr_seq_relatorio_ww || cd_relatorio_w || chr(13) || chr(10)|| sqlerrm);
		end;

	commit;

  if (w_base_wheb = 'S') then 
     if (substr(cd_classif_relat_w,1,1) <> 'W') then 
			  update	relatorio set	nm_usuario= Obter_Usuario_Ativo, dt_atualizacao = clock_timestamp() where	nr_sequencia = nr_seq_relatorio_ww;
   	 end if;
   end if;

	if (nr_seq_rel_atual_w > 0) then
		begin
		if (substr(cd_classif_relat_w,1,1) = 'C') then /*Elemar - 31/01/2008 - Se for relatorio C dar update*/
			update	relatorio_funcao
			set	nr_seq_relatorio	= nr_seq_relatorio_ww
			where	nr_seq_relatorio	= nr_seq_rel_atual_w;
		end if;
		
		update	relatorio_perfil
		set	nr_seq_relatorio	= nr_seq_relatorio_ww
		where	nr_seq_relatorio	= nr_seq_rel_atual_w;

		update	med_tipo_avaliacao
		set	nr_seq_relatorio	= nr_seq_relatorio_ww
		where	nr_seq_relatorio	= nr_seq_rel_atual_w;

		update	pls_relat_autorizacao
		set	nr_seq_relatorio	= nr_seq_relatorio_ww
		where	nr_seq_relatorio	= nr_seq_rel_atual_w;

		update	pls_regra_mala_direta
		set	nr_seq_relatorio	= nr_seq_relatorio_ww
		where	nr_seq_relatorio	= nr_seq_rel_atual_w;

		update	med_relatorio
		set	nr_seq_relatorio	= nr_seq_relatorio_ww
		where	nr_seq_relatorio	= nr_seq_rel_atual_w;

		update	ehr_template
		set	nr_seq_relatorio	= nr_seq_relatorio_ww
		where	nr_seq_relatorio	= nr_seq_rel_atual_w;

		update	ehr_template_relat
		set	nr_seq_relatorio	= nr_seq_relatorio_ww
		where	nr_seq_relatorio	= nr_seq_rel_atual_w;

		update	nut_relatorio_tipo
		set	nr_seq_relatorio	= nr_seq_relatorio_ww
		where	nr_seq_relatorio	= nr_seq_rel_atual_w;

		update	REGRA_RELAT_AGENDA
		set	nr_seq_relatorio	= nr_seq_relatorio_ww
		where	nr_seq_relatorio	= nr_seq_rel_atual_w;

		update	pls_parametros
		set	nr_seq_relatorio	= nr_seq_relatorio_ww
		where	nr_seq_relatorio	= nr_seq_rel_atual_w;

		update	pls_parametros
		set	nr_seq_relatorio_cat	= nr_seq_relatorio_ww
		where	nr_seq_relatorio_cat	= nr_seq_rel_atual_w;

		update	pls_regra_relatorio
		set	nr_seq_relatorio	= nr_seq_relatorio_ww
		where	nr_seq_relatorio	= nr_seq_rel_atual_w;

		update	pls_notificacao_regra
		set	nr_seq_relatorio	= nr_seq_relatorio_ww
		where	nr_seq_relatorio	= nr_seq_rel_atual_w;

		update	MP_PROC_OBJ_TASY_REL
		set	nr_seq_relatorio	= nr_seq_relatorio_ww
		where	nr_seq_relatorio	= nr_seq_rel_atual_w;

		update	BANCO_ESTABELECIMENTO
		set	nr_seq_relatorio_boleto	= nr_seq_relatorio_ww
		where	nr_seq_relatorio_boleto	= nr_seq_rel_atual_w;

		update	BANCO_ESTABELECIMENTO
		set	nr_seq_rel_boleto_neg	= nr_seq_relatorio_ww
		where	nr_seq_rel_boleto_neg	= nr_seq_rel_atual_w;

		update	REGRA_LAYOUT_REL_LAUDO
		set	nr_seq_relatorio	= nr_seq_relatorio_ww
		where	nr_seq_relatorio	= nr_seq_rel_atual_w;

		update	pls_sca_classificacao
		set	nr_seq_relatorio	= nr_seq_relatorio_ww
		where	nr_seq_relatorio	= nr_seq_rel_atual_w;

		update 	pls_ted_regra_relatorio
		set nr_seq_relatorio  = nr_seq_relatorio_ww
		where nr_seq_relatorio	= nr_seq_rel_atual_w;
				
		update	pls_rel_event_call_center
		set	nr_seq_relatorio	= nr_seq_relatorio_ww
		where	nr_seq_relatorio	= nr_seq_rel_atual_w;

		update	tasy_projeto_assinatura
		set	nr_seq_relatorio	= nr_seq_relatorio_ww
		where   nr_seq_relatorio        in (nr_seq_rel_atual_w, nr_seq_relatorio_w);

		update	pls_congenere
		set	nr_seq_relatorio	= nr_seq_relatorio_ww
		where	nr_seq_relatorio	= nr_seq_rel_atual_w;

		update	ap_lote_impressao_pda
		set	nr_seq_relatorio	= nr_seq_relatorio_ww
		where	nr_seq_relatorio	= nr_seq_rel_atual_w;

		update	fila_impressao_etiqueta
		set	nr_seq_relatorio	= nr_seq_relatorio_ww
		where	nr_seq_relatorio	= nr_seq_rel_atual_w;

		update	nfse_regra
		set	nr_seq_relatorio	= nr_seq_relatorio_ww
		where	nr_seq_relatorio	= nr_seq_rel_atual_w;
		
		update	regra_envio_email_auto
		set	nr_seq_rel_auto		= nr_seq_relatorio_ww
		where	nr_seq_rel_auto		= nr_seq_rel_atual_w;
		
		update	SCHEMATIC_RELATORIO
		set	nr_seq_relatorio	= nr_seq_relatorio_ww
		where	nr_seq_relatorio	= nr_seq_rel_atual_w;
		
		update	RELATORIO_COMPUTADOR
		set	nr_seq_relatorio	= nr_seq_relatorio_ww
		where	nr_seq_relatorio	= nr_seq_rel_atual_w;

	/*	update	relatorio_documentacao
		set	nr_seq_relatorio	= nr_seq_relatorio_ww
		where	nr_seq_relatorio	= nr_seq_rel_atual_w; */
		update	relatorio_auto_imp
			set	nr_seq_relatorio	= nr_seq_relatorio_ww
		where	nr_seq_relatorio	= nr_seq_rel_atual_w;

		update  usuario_relatorio a
	        set     a.nr_seq_relatorio        = nr_seq_relatorio_ww
        	where   a.nr_seq_relatorio        = nr_seq_rel_atual_w
		  and	not exists (SELECT 1 from usuario_relatorio b
					where b.nr_seq_relatorio = nr_seq_relatorio_ww
					  and b.nm_usuario_ref = a.nm_usuario_ref);

		update	relatorio_versao
		set	nr_seq_relatorio	= nr_seq_relatorio_ww
		where	nr_seq_relatorio	= nr_seq_rel_atual_w;

		begin
		update	Relatorio_perfil_param a
		set	a.nr_seq_parametro	=
			(SELECT max(b.nr_sequencia)
			from 	relatorio_parametro b,
				relatorio_parametro c
			where	b.nr_seq_relatorio	= nr_seq_relatorio_ww
			  and	c.nr_seq_relatorio	= nr_seq_rel_atual_w
			  and	b.cd_parametro		= c.cd_parametro
                    and a.nr_seq_parametro      = c.nr_sequencia)
		where	nr_seq_parametro in (select nr_sequencia
			from 	relatorio_parametro x
			where	x.nr_seq_relatorio	= nr_seq_rel_atual_w)
		  and exists (select b.nr_sequencia
			from 	relatorio_parametro b,
				relatorio_parametro c
			where	b.nr_seq_relatorio	= nr_seq_relatorio_ww
			  and	c.nr_seq_relatorio	= nr_seq_rel_atual_w
                    and   b.cd_parametro        = c.cd_parametro
                    and a.nr_seq_parametro      = c.nr_sequencia);
		exception
			when others then
				ds_erro_w	:= sqlerrm(SQLSTATE);
				update relatorio
				set ds_sql = ds_erro_w || ds_sql
				where nr_sequencia = nr_seq_relatorio_ww;
		end;

		/* Francisco - OS67978 - 01/10/2007 - Manter as regras de relatorios W */


		--select	count(*)

		--into	cont_w

		--from	w_relatorio y,

		--	w_funcao_regra_relat x

		--where	x.nr_seq_relatorio	= y.nr_sequencia

		--and	y.cd_classif_relat	= cd_classif_relat_w

		--and	y.cd_relatorio		= cd_relatorio_w;


		--if	(cont_w = 0) then
		insert into funcao_regra_relat(
			nr_seq_relatorio, nr_seq_regra, dt_atualizacao,
			nm_usuario, ds_sql_validacao, cd_estabelecimento)
		SELECT
			nr_seq_relatorio_ww, a.nr_seq_regra, a.dt_atualizacao,
			a.nm_usuario, a.ds_sql_validacao, a.cd_estabelecimento
		from 	funcao_regra_relat a
		where 	a.nr_seq_relatorio	= nr_seq_rel_atual_w
		and	not exists ( 	SELECT * from funcao_regra_relat b
					where 	b.nr_seq_relatorio	= nr_seq_relatorio_ww
					and	b.nr_seq_regra = a.nr_seq_regra);


		/*insert into logxxxxxx_tasy values (sysdate, 'cetrentin', 10, 'nr_seq_relatorio_ww = '|| nr_seq_relatorio_ww || '    nr_seq_rel_atual_w = ' || nr_seq_rel_atual_w);

		update	funcao_regra_relat a
		set	a.nr_seq_relatorio	= nr_seq_relatorio_ww
		where	a.nr_seq_relatorio	= nr_seq_rel_atual_w
		and 	not exists (	select * from w_funcao_regra_relat b
					where b.nr_seq_relatorio = a.nr_seq_relatorio);*/


		--else
		delete	from funcao_regra_relat
		where	nr_seq_relatorio	= nr_seq_rel_atual_w;
		--end if;

		/* Francisco - OS67978 - 01/10/2007 - Fim alteracao */

		delete	from relatorio
		where	nr_sequencia		= nr_seq_rel_atual_w;
		end;
	end if;
	commit;
	end;
	qt_processo_w := qt_processo_w + 1;
	CALL gravar_processo_longo('','TASY_ATUALIZAR_BASE_RELATORIO',qt_processo_w);
END LOOP;
CLOSE C010;

begin
/*ds_comando_w := 'select	a.cd_relatorio, a.cd_classif_relat, b.nr_sequencia from	tasy_versao.w_relatorio a, tasy_versao.schematic_relatorio b where	a.nr_sequencia	= b.nr_seq_relatorio';
cursor_w := dbms_sql.open_cursor;
-- Comando Parse do SQL gerado

DBMS_SQL.PARSE(cursor_w, ds_comando_w,DBMS_SQL.NATIVE);

dbms_sql.define_column(cursor_w, 1, cd_relatorio_schematic_w,5);
dbms_sql.define_column(cursor_w, 2, cd_classif_relat_schematic_w,4);
dbms_sql.define_column(cursor_w, 3, nr_sequencia_schematic_w,10);

rows_processed_w := DBMS_SQL.EXECUTE(cursor_w);
WHILE DBMS_SQL.FETCH_ROWS(cursor_w) > 0 LOOP
	dbms_sql.column_value(cursor_w, 1, cd_relatorio_schematic_w);
	dbms_sql.column_value(cursor_w, 2, cd_classif_relat_schematic_w);
	dbms_sql.column_value(cursor_w, 3, nr_sequencia_schematic_w);
	
	select	max(nr_sequencia)
	into	nr_seq_new_w
	from	relatorio
	where	cd_relatorio		= cd_relatorio_schematic_w
	and		cd_classif_relat 	= cd_classif_relat_schematic_w;
	
	if	(nr_seq_new_w	is not null) then
		update	SCHEMATIC_RELATORIO
		set	nr_seq_relatorio	= nr_seq_new_w
		where	nr_sequencia	= nr_sequencia_schematic_w;
		
	end if;

  END loop;*/

  
	--Na OS 2078927 foram adicionados os campos CD_RELATORIO e CD_CLASSIF_RELAT na SCHEMATIC_RELATORIO, portando serao utilizados estes campos como base para atualizar a sequencia do relatorio
	update	schematic_relatorio a
	set	a.nr_seq_relatorio =
		(SELECT min(x.nr_sequencia)
		from	relatorio x
		where	x.cd_relatorio		= a.cd_relatorio
		and	x.cd_classif_relat	= a.cd_classif_relat)
	where	(a.nr_seq_relatorio IS NOT NULL AND a.nr_seq_relatorio::text <> '')
	and	(a.cd_classif_relat IS NOT NULL AND a.cd_classif_relat::text <> '')
	and	(a.cd_relatorio IS NOT NULL AND a.cd_relatorio::text <> '');
	
exception
	when others then
	CALL Gravar_Log_Atualizacao_Erro(14587548, obter_desc_expressao(786561, 'Erro ao atualizar Relatorio schematics') || ' ' ||sqlerrm,'','Tasy');
end;

delete FROM relatorio_perfil_param a
where not exists (SELECT 1
	from relatorio_parametro b
	where a.nr_seq_parametro  = b.nr_sequencia);

 delete
 from FUNCAO_REGRA_RELAT a
 where not exists ( SELECT 1 
 from FUNCAO_REGRA b 
 where 1 = 1 
 and a.NR_SEQ_REGRA = b.NR_SEQUENCIA)
 and (a.NR_SEQ_REGRA IS NOT NULL AND a.NR_SEQ_REGRA::text <> '');	
	
CALL Tasy_eliminar_relatorio('Tasy');

commit;

delete from relatorio a
where a.cd_classif_relat like 'W%'
and exists (SELECT 1 from relatorio b
            where b.cd_relatorio = a.cd_relatorio
            and b.cd_classif_relat = a.cd_classif_relat
            and b.ds_titulo = a.ds_titulo
            and b.CD_CGC_CLIENTE = '01950338000177'
            and b.nr_sequencia <> a.nr_sequencia);

commit;

if (qt_Rel_w > 0) then
  -- Habilitar tableas/Constraints
   FOR i IN (WITH RECURSIVE cte AS (
SELECT trim(both regexp_substr(str_tabela, '[^,]+', 1, LEVEL)) as tabela,
          trim(both regexp_substr(str_fk, '[^,]+', 1, LEVEL)) as fk
       LEVEL <= LENGTH( REGEXP_REPLACE( str_tabela, '[^,]', NULL ))+1  UNION ALL
SELECT trim(both regexp_substr(str_tabela, '[^,]+', 1, LEVEL)) as tabela,
          trim(both regexp_substr(str_fk, '[^,]+', 1, LEVEL)) as fk
       LEVEL <= LENGTH( REGEXP_REPLACE( str_tabela, '[^,]', NULL ))+1 JOIN cte c ON ()

) SELECT * FROM cte;
)
     LOOP
	   ds_comando_w := 'alter table ' || i.tabela || ' enable constraint ' || i.fk;
	
       vl_retorno_w := Obter_Valor_Dinamico(ds_comando_w, vl_retorno_w);	
	 END LOOP;

end if;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE tasy_atualizar_base_relatorio () FROM PUBLIC;

