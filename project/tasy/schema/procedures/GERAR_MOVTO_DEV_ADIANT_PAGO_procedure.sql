-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_movto_dev_adiant_pago (nr_seq_dev_adiant_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_adiantamento_w		bigint;
nr_seq_trans_w			bigint;
nr_seq_conta_banco_w		bigint;
vl_devolucao_w			double precision;
nr_seq_movto_w			bigint;
nr_lote_contabil_w			bigint;
cd_estabelecimento_w		bigint;
ie_acao_w			varchar(50);
dt_devolucao_w			timestamp;
/* Projeto Multimoeda - Variáveis */

vl_devolucao_estrang_w		double precision;
vl_complemento_w		double precision;
vl_cotacao_w			cotacao_moeda.vl_cotacao%type;
cd_moeda_w			integer;


BEGIN

select	a.nr_seq_conta_banco,
	coalesce(b.nr_seq_trans_fin,0),
	b.vl_devolucao,
	a.cd_estabelecimento,
	b.dt_devolucao,
	a.nr_adiantamento,
	b.vl_devolucao_estrang,
	b.vl_cotacao,
	b.cd_moeda
into STRICT	nr_seq_conta_banco_w,
	nr_seq_trans_w,
	vl_devolucao_w,
	cd_estabelecimento_w,
	dt_devolucao_w,
	nr_adiantamento_w,
	vl_devolucao_estrang_w,
	vl_cotacao_w,
	cd_moeda_w
from	adiantamento_pago a,
	adiant_pago_dev b
where	a.nr_adiantamento	= b.nr_adiantamento
and	b.nr_sequencia	= nr_seq_dev_adiant_p;

if (coalesce(nr_seq_conta_banco_w, 0) <> 0) then

	if (nr_seq_trans_w = 0) then
		--r.aise_application_error(-20011, 'Transação do adiantamento não cadastrada!');
		CALL wheb_mensagem_pck.exibir_mensagem_abort(266482);
	else

		select	max(ie_acao)
		into STRICT	ie_acao_w
		from	transacao_financeira
		where	nr_sequencia	= nr_seq_trans_w;

		if (ie_acao_w = 13) then

			/* Projeto Multimoeda - Verifica se a devolução é em moeda estrangeira, caso negativo limpa as variáveis antes de gravar*/

			if (coalesce(vl_devolucao_estrang_w,0) <> 0 and coalesce(vl_cotacao_w,0) <> 0) then
				vl_devolucao_estrang_w := vl_devolucao_estrang_w * -1;
				vl_complemento_w := (vl_devolucao_w * -1) - vl_devolucao_estrang_w;
			else
				vl_devolucao_estrang_w	:= null;
				vl_complemento_w	:= null;
				vl_cotacao_w		:= null;
				cd_moeda_w		:= null;
			end if;

			select	nextval('movto_trans_financ_seq')
			into STRICT	nr_seq_movto_w
			;

			insert into movto_trans_financ(nr_sequencia,
							dt_transacao,
							nr_seq_trans_financ,
							vl_transacao,
							dt_atualizacao,
							nm_usuario,
							nr_adiant_pago,
							nr_seq_banco,
							nr_lote_contabil,
							ie_conciliacao,
							vl_transacao_estrang,
							vl_complemento,
							vl_cotacao,
							cd_moeda)
			values (nr_seq_movto_w,
				dt_devolucao_w,
				nr_seq_trans_w,
				vl_devolucao_w * -1,
				clock_timestamp(),
				nm_usuario_p,
				nr_adiantamento_w,
				nr_seq_conta_banco_w,
				0,
				'N',
				vl_devolucao_estrang_w,
				vl_complemento_w,
				vl_cotacao_w,
				cd_moeda_w);
		end if;
	end if;

end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_movto_dev_adiant_pago (nr_seq_dev_adiant_p bigint, nm_usuario_p text) FROM PUBLIC;

