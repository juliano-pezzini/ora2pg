-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_cot_compra_forn_item ( nr_cot_compra_p bigint, nr_sequencia_p text, nm_usuario_p text, ie_somente_sem_regra_fornec_p text, ie_forn_ultima_compra_p text default 'N') AS $body$
DECLARE


cd_material_w				integer;
nr_item_cot_compra_w			integer;
qt_material_w				double precision;
qt_convertido_w				double precision;
ds_material_direto_w			varchar(2000);
ds_observacao_w				varchar(255);
cd_cgc_fornecedor_w			varchar(14);
nr_seq_regra_w				bigint;
cd_estabelecimento_w			smallint;
cd_material_regra_w			integer;
ie_regra_preco_w			varchar(15);
vl_preco_w				double precision;
cd_convenio_w				bigint;
cd_categoria_w				varchar(10);
dt_ult_vigencia_w			timestamp;
cd_tab_preco_mat_w			smallint;
ie_origem_preco_w			smallint	;
qt_conv_compra_estoque_w		double precision;
qt_conv_estoque_consumo_w		double precision;
cd_unidade_medida_estoque_w		varchar(40);
cd_unidade_medida_compra_w		varchar(40);
cd_unidade_medida_cotacao_w		varchar(40);
ds_marca_w				varchar(30);
ds_marca_ww				varchar(30);
ie_gerar_marca_w			varchar(1);
ie_desdobra_mat_cotacao_w		varchar(1) := 'N';
cd_tiss_w				varchar(40);
ie_desdobra_mat_estoque_w		varchar(1);
qt_existe_w				bigint;
nr_solic_compra_w			bigint;
nr_item_solic_compra_w			integer;
qt_conv_unid_fornec_w			double precision := 0;
ie_utiliza_conv_fornec_w		varchar(01);
ie_arredonda_w				varchar(01);
ie_desdobra_mat_nao_padrao_w		varchar(1);
ie_desqualificados_w			varchar(1);
ie_forn_ultima_compra_w			varchar(1);
nr_seq_mat_simpro_w			bigint;
nr_seq_simpro_preco_w			bigint;
cd_paciente_cotacao_w			cot_compra_item.cd_paciente_cotacao%type;

c01 CURSOR FOR
SELECT	a.cd_material,
	a.nr_item_cot_compra,
	a.qt_material,
	ds_material_direto_w,
	coalesce(a.ie_regra_preco, '0'),
	a.cd_unidade_medida_compra,
	CASE WHEN ie_gerar_marca_w='S' THEN substr(obter_marca_material_estab(cd_estabelecimento_w, a.cd_material,'DR'),1,30)  ELSE '' END ,
	nr_solic_compra,
	nr_item_solic_compra,
	a.cd_paciente_cotacao
from	cot_compra_item a
where	a.nr_cot_compra = nr_cot_compra_p
and	coalesce(a.ie_situacao,'A') = 'A'
and	((ie_desqualificados_w = 'S') or (substr(obter_se_mat_lib_fornec(cd_cgc_fornecedor_w,a.cd_material, cd_estabelecimento_w, 'C'),1,15) <> 'N'))
and not exists (
	SELECT	1
	from	cot_compra_forn_item b
	where	b.nr_item_cot_compra	= a.nr_item_cot_compra
	and	b.nr_cot_compra		= a.nr_cot_compra
	and	b.nr_seq_cot_forn		= nr_sequencia_p)
and	((ie_somente_sem_regra_fornec_p = 'N') or
	((ie_somente_sem_regra_fornec_p = 'S') and (substr(obter_se_item_regra_cot_forn(cd_estabelecimento_w,cd_material),1,1) = 'N')))
and	((ie_forn_ultima_compra_w = 'N') or
	((ie_forn_ultima_compra_w = 'S') and
	exists(	select	1
		from	cot_compra_forn c
		where	c.nr_cot_compra	= a.nr_cot_compra
		and	c.nr_sequencia 	= nr_sequencia_p
		and	((c.cd_pessoa_fisica IS NOT NULL AND c.cd_pessoa_fisica::text <> '') or
			((c.cd_cgc_fornecedor = cd_cgc_fornecedor_w) and (c.cd_cgc_fornecedor = obter_fornecedor_ultima_compra(a.cd_material, cd_estabelecimento_w)))))));

c02 CURSOR FOR
SELECT	distinct(cd_material),
	qt_convertido
from (	SELECT	b.cd_material,
		0 qt_convertido
	from	regra_material_cotacao a,
		regra_mat_cot_item b
	where	a.nr_sequencia = b.nr_seq_regra_mat
	and	a.nr_sequencia = nr_seq_regra_w
	and	substr(obter_se_material_ativo(b.cd_material),1,1) = 'A'
	and	a.ie_situacao = 'A'
	
union all

	select	cd_material,
		obter_qt_mesmo_mat_estoque(cd_material_estoque)
	from	material
	where	cd_material_estoque = cd_material_w
	and (coalesce(obter_se_mat_ressuprimento(cd_estabelecimento_w, cd_material),'S') = 'S')
	and	((ie_desdobra_mat_nao_padrao_w = 'S') or
		((ie_desdobra_mat_nao_padrao_w = 'N') and (coalesce(obter_se_material_padronizado(cd_estabelecimento_w, cd_material),'S') = 'S')))
	and	ie_situacao   	= 'A'
	and	ie_desdobra_mat_cotacao_w in ('S','I')
	and	((cd_material_estoque <> cd_material and ie_desdobra_mat_estoque_w = 'N') or (ie_desdobra_mat_estoque_w = 'S'))) alias18;


BEGIN
select	cd_estabelecimento
into STRICT	cd_estabelecimento_w
from	cot_compra
where	nr_cot_compra = nr_cot_compra_p;

select (max(obter_valor_param_usuario(915, 124, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w))),
	(max(obter_valor_param_usuario(915, 133, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w)))
into STRICT	ie_arredonda_w,
	ie_desqualificados_w
;

select	coalesce(max(ie_gerar_marca_cotacao),'N'),
	coalesce(max(ie_desdobra_mat_cotacao),'N'),
	coalesce(max(ie_desdobra_mat_estoque),'N'),
	coalesce(max(ie_utiliza_conv_fornec),'N'),
	coalesce(max(ie_desdobra_mat_nao_padrao),'N')
into STRICT	ie_gerar_marca_w,
	ie_desdobra_mat_cotacao_w,
	ie_desdobra_mat_estoque_w,
	ie_utiliza_conv_fornec_w,
	ie_desdobra_mat_nao_padrao_w
from	parametro_compras
where	cd_estabelecimento = cd_estabelecimento_w;

select	coalesce(max(cd_cgc_fornecedor), null)
into STRICT	cd_cgc_fornecedor_w
from	cot_compra_forn
where	nr_sequencia = nr_sequencia_p;

ie_forn_ultima_compra_w := coalesce(ie_forn_ultima_compra_p,'N');

open c01;
loop
fetch c01 into
	cd_material_w,
	nr_item_cot_compra_w,
	qt_material_w,
	ds_material_direto_w,
	ie_regra_preco_w,
	cd_unidade_medida_cotacao_w,
	ds_marca_w,
	nr_solic_compra_w,
	nr_item_solic_compra_w,
	cd_paciente_cotacao_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin

	if (ie_gerar_marca_w = 'S') and (nr_solic_compra_w > 0) and (nr_item_solic_compra_w > 0) then

		select	substr(obter_desc_material_marca(nr_seq_marca,cd_material),1,30)
		into STRICT	ds_marca_ww
		from	solic_compra_item
		where	nr_solic_compra = nr_solic_compra_w
		and	nr_item_solic_compra = nr_item_solic_compra_w;
	end if;

	select	coalesce(max(ds_observacao), null)
	into STRICT	ds_observacao_w
	from	solic_compra_item
	where	nr_cot_compra = nr_cot_compra_p
	and	nr_item_cot_compra = nr_item_cot_compra_w;

	select	coalesce(max(nr_sequencia), 0)
	into STRICT	nr_seq_regra_w
	from	regra_material_cotacao
	where	cd_estabelecimento	= cd_estabelecimento_w
	and	cd_material		= cd_material_w
	and (ie_regra_preco	= ie_regra_preco_w or ie_regra_preco_w = '0')
	and	ie_situacao = 'A';
	
	select	count(*)
	into STRICT	qt_existe_w
	from (	SELECT	b.cd_material,
		0 qt_convertido
	from	regra_material_cotacao a,
		regra_mat_cot_item b
	where	a.nr_sequencia = b.nr_seq_regra_mat
	and	a.nr_sequencia = nr_seq_regra_w
	and	substr(obter_se_material_ativo(b.cd_material),1,1) = 'A'
	and	a.ie_situacao = 'A'
	
union all

	SELECT	cd_material,
		obter_qt_mesmo_mat_estoque(cd_material_estoque)
	from	material
	where	cd_material_estoque = cd_material_w
	and (coalesce(obter_se_mat_ressuprimento(cd_estabelecimento_w, cd_material),'S') = 'S')
	and	((ie_desdobra_mat_nao_padrao_w = 'S') or
		((ie_desdobra_mat_nao_padrao_w = 'N') and (coalesce(obter_se_material_padronizado(cd_estabelecimento_w, cd_material),'S') = 'S')))
	and	ie_situacao   	= 'A'
	and	ie_desdobra_mat_cotacao_w in ('S','I')
	and	((cd_material_estoque <> cd_material and ie_desdobra_mat_estoque_w = 'N') or (ie_desdobra_mat_estoque_w = 'S'))) alias18;

	/* Quantidade conversao cadastrado na pasta Estoque subpasta Fornecedor da funcao Cadastro de Materiais */

	if (ie_utiliza_conv_fornec_w = 'S') then
		select	coalesce((obter_dados_material_fornec(cd_Estabelecimento_w,cd_cgc_fornecedor_w,cd_material_w,1))::numeric ,0)
		into STRICT	qt_conv_unid_fornec_w
		;
	end if;

	/* se nao encontrou a regra, o sistema gera o proprio material,
	senao ira gerar para os materiais vinculados na regra */
	
	if	(((nr_seq_regra_w = 0) and (ie_desdobra_mat_cotacao_w in ('N','F'))) or (qt_existe_w = 0)) then
		begin		
		insert into cot_compra_forn_item(
			nr_sequencia,
			nr_seq_cot_forn,
			nr_cot_compra,
			cd_cgc_fornecedor,
			nr_item_cot_compra,
			qt_material,
			nm_usuario,
			dt_atualizacao,
			vl_unitario_material,
			qt_prioridade,
			ds_material_direto,
			ds_observacao,
			ds_marca,
			cd_material,
			ie_situacao,
			qt_conv_unid_fornec,
			cd_paciente_forn_item)
		values (nextval('cot_compra_forn_item_seq'),
			nr_sequencia_p,
			nr_cot_compra_p,
			cd_cgc_fornecedor_w,
			nr_item_cot_compra_w,
			qt_material_w,
			nm_usuario_p,
			clock_timestamp(),
			0,
			100,
			ds_material_direto_w,
			ds_observacao_w,
			coalesce(ds_marca_ww, ds_marca_w),
			cd_material_w,
			'A',
			CASE WHEN qt_conv_unid_fornec_w=0 THEN null  ELSE qt_conv_unid_fornec_w END ,
			cd_paciente_cotacao_w);
		end;
	elsif (nr_seq_regra_w > 0) or (ie_desdobra_mat_cotacao_w in ('S','I')) then
		begin
		open c02;
		loop
		fetch c02 into
			cd_material_regra_w,
			qt_convertido_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			begin
			
			select	qt_conv_compra_estoque,
				qt_conv_estoque_consumo,
				substr(obter_dados_material_estab(cd_material,cd_estabelecimento_w,'UME'),1,30) cd_unidade_medida_estoque,
				substr(obter_dados_material_estab(cd_material,cd_estabelecimento_w,'UMC'),1,30) cd_unidade_medida_compra
			into STRICT	qt_conv_compra_estoque_w,
				qt_conv_estoque_consumo_w,
				cd_unidade_medida_estoque_w,
				cd_unidade_medida_compra_w
			from	material
			where	cd_material = cd_material_regra_w;

			select	max(cd_convenio),
				max(cd_categoria)
			into STRICT	cd_convenio_w,
				cd_categoria_w
			from	regra_material_cotacao
			where	cd_material = cd_material_w
			and	cd_estabelecimento = cd_estabelecimento_w;

			select	obter_preco_venda_cot_compra(cd_estabelecimento_w,cd_material_regra_w,ie_regra_preco_w,cd_convenio_w,cd_categoria_w,cd_unidade_medida_cotacao_w)
			into STRICT	vl_preco_w
			;
			
			

			/* Quantidade conversao cadastrado na pasta Estoque subpasta Fornecedor da funcao Cadastro de Materiais */

			if (ie_utiliza_conv_fornec_w = 'S') then
				select	coalesce((obter_dados_material_fornec(cd_Estabelecimento_w,cd_cgc_fornecedor_w,cd_material_w,1))::numeric ,0)
				into STRICT	qt_conv_unid_fornec_w
				;
			end if;

			/*para estes materiais devem ser gerados com a conversao, os40987*/


			/*quantidade cotacao dividido pela conversao do material substituido depois arredonda e multiplica pela conversao*/

			if (ie_arredonda_w = 'S') and (ie_desdobra_mat_cotacao_w in ('S','I')) and (qt_convertido_w = 1) then
				qt_convertido_w	:= (round(qt_material_w));
			elsif (ie_arredonda_w = 'N') and (ie_desdobra_mat_cotacao_w in ('S','I')) and (qt_convertido_w = 1) then
				qt_convertido_w	:= (round((qt_material_w)::numeric,4));
			elsif (ie_arredonda_w = 'S') and (ie_desdobra_mat_cotacao_w in ('S','I')) and (qt_convertido_w > 1) then
				qt_convertido_w	:= (round(dividir(qt_material_w, qt_conv_compra_estoque_w))) * qt_conv_compra_estoque_w;
			elsif (ie_arredonda_w = 'N') and (ie_desdobra_mat_cotacao_w in ('S','I')) and (qt_convertido_w > 1) then
				qt_convertido_w	:= (round((dividir(qt_material_w, qt_conv_compra_estoque_w))::numeric,4)) * qt_conv_compra_estoque_w;
			end if;			
			
			if (coalesce(qt_convertido_w, 0) = 0) then
				qt_convertido_w	:= qt_material_w;
			end if;

			select	count(*)
			into STRICT	qt_existe_w
			from	cot_compra_forn_item
			where	nr_seq_cot_forn = nr_sequencia_p
			and	cd_material = cd_material_regra_w
			and	nr_item_cot_compra = nr_item_cot_compra_w;
					
			if (qt_existe_w = 0) then
				insert into cot_compra_forn_item(
					nr_sequencia,
					nr_seq_cot_forn,
					nr_cot_compra,
					cd_cgc_fornecedor,
					nr_item_cot_compra,
					qt_material,
					nm_usuario,
					dt_atualizacao,
					vl_unitario_material,
					qt_prioridade,
					ds_material_direto,
					ds_observacao,
					cd_material,
					vl_preco,
					ds_marca,
					ie_situacao,
					qt_conv_unid_fornec,
					cd_paciente_forn_item)
				values (nextval('cot_compra_forn_item_seq'),
					nr_sequencia_p,
					nr_cot_compra_p,
					cd_cgc_fornecedor_w,
					nr_item_cot_compra_w,
					qt_convertido_w,
					nm_usuario_p,
					clock_timestamp(),
					0,
					100,
					ds_material_direto_w,
					ds_observacao_w,
					cd_material_regra_w,
					vl_preco_w,
					CASE WHEN ie_gerar_marca_w='S' THEN coalesce(ds_marca_ww, substr(obter_marca_material_estab(cd_estabelecimento_w, cd_material_regra_w,'D'),1,20))  ELSE '' END ,
					'A',
					CASE WHEN qt_conv_unid_fornec_w=0 THEN null  ELSE qt_conv_unid_fornec_w END ,
					cd_paciente_cotacao_w);
			end if;
			end;
		end loop;
		close c02;
		end;
	end if;
	end;
end loop;
close c01;
commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_cot_compra_forn_item ( nr_cot_compra_p bigint, nr_sequencia_p text, nm_usuario_p text, ie_somente_sem_regra_fornec_p text, ie_forn_ultima_compra_p text default 'N') FROM PUBLIC;

