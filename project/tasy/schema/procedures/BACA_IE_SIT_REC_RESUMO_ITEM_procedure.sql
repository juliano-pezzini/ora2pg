-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE baca_ie_sit_rec_resumo_item () AS $body$
DECLARE

 
c01 CURSOR(	nr_seq_reg_ini_pc	pls_conta_rec_resumo_item.nr_sequencia%type, 
		nr_seq_reg_fim_pc	pls_conta_rec_resumo_item.nr_sequencia%type) FOR 
	SELECT	nr_sequencia 
	from	pls_conta_rec_resumo_item 
	where	nr_sequencia between nr_seq_reg_ini_pc and nr_seq_reg_fim_pc;

nr_seq_reg_min_w	pls_conta_rec_resumo_item.nr_sequencia%type;
nr_seq_reg_max_w	pls_conta_rec_resumo_item.nr_sequencia%type;

nr_seq_reg_ini_w	pls_conta_rec_resumo_item.nr_sequencia%type;
nr_seq_reg_fim_w	pls_conta_rec_resumo_item.nr_sequencia%type;
qt_registro_update_w	integer;

tb_nr_sequencia_w	pls_util_cta_pck.t_number_table;
ie_finaliza_processo_w	varchar(1);


BEGIN 
qt_registro_update_w := 500;
ie_finaliza_processo_w := 'N';
 
-- busca os limites da tabela 
select	min(nr_sequencia) nr_seq_min, 
	max(nr_sequencia) nr_seq_max 
into STRICT	nr_seq_reg_min_w, 
	nr_seq_reg_max_w 
from 	pls_conta_rec_resumo_item;
 
-- seta os limites iniciais 
nr_seq_reg_ini_w := nr_seq_reg_min_w;
nr_seq_reg_fim_w := nr_seq_reg_ini_w + qt_registro_update_w;
 
loop 
	tb_nr_sequencia_w.delete;
	 
	open c01(nr_seq_reg_ini_w, nr_seq_reg_fim_w);
	fetch c01 bulk collect into tb_nr_sequencia_w;
	close c01;
	 
	if (tb_nr_sequencia_w.count > 0) then 
		-- manda os dados para atualizar no banco 
		-- se estiver nulo a situacao então fica com A senão permanece 
		forall i in tb_nr_sequencia_w.first .. tb_nr_sequencia_w.last 
			update 	pls_conta_rec_resumo_item set 
				ie_situacao = 'A' 
			where	nr_sequencia = tb_nr_sequencia_w(i) 
			and 	coalesce(ie_situacao::text, '') = '';
		commit;
	end if;
	 
	-- calcula os novos intervalos 
	nr_seq_reg_ini_w := nr_seq_reg_fim_w + 1;
	nr_seq_reg_fim_w := nr_seq_reg_ini_w + qt_registro_update_w;
	 
	-- se o início ainda não ultrassou a última sequencia da tabela executa novamente 
	if (nr_seq_reg_ini_w <= nr_seq_reg_max_w) then 
		ie_finaliza_processo_w := 'N';
	else 
		ie_finaliza_processo_w := 'S';
	end if;
	 
	exit when ie_finaliza_processo_w = 'S';
end loop;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE baca_ie_sit_rec_resumo_item () FROM PUBLIC;

