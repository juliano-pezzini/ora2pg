-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ptu_obter_valores_nota_servico ( nr_seq_conta_pos_estab_p pls_conta_pos_estabelecido.nr_sequencia%type, nr_seq_pos_proc_p pls_conta_pos_proc.nr_sequencia%type, nr_seq_pos_mat_p pls_conta_pos_mat.nr_sequencia%type, nr_seq_fatura_proc_p pls_conta_proc.nr_sequencia%type, nr_seq_fatura_mat_p pls_conta_mat.nr_sequencia%type, nr_seq_pos_estab_partic_p pls_conta_pos_estab_partic.nr_sequencia%type, nr_seq_conta_pos_contab_p pls_fatura_proc.nr_seq_conta_pos_contab%type, nr_seq_pos_proc_fat_p pls_conta_pos_proc_fat.nr_sequencia%type, nr_seq_pos_mat_fat_p pls_conta_pos_mat_fat.nr_sequencia%type, vl_procedimento_p INOUT bigint, vl_filme_p INOUT bigint, vl_custo_operacional_p INOUT bigint, vl_adic_procedimento_p INOUT bigint, vl_adic_filme_p INOUT bigint, vl_adic_co_p INOUT bigint , qt_partic_duplic_p bigint, nr_seq_fatura_conta_p bigint, ie_tipo_cobranca_fatura_p ptu_fatura.ie_tipo_cobranca_fatura%type) AS $body$
DECLARE

						
nr_seq_conta_proc_w		pls_conta_proc.nr_sequencia%type;
nr_seq_conta_mat_w		pls_conta_mat.nr_sequencia%type;
qt_fatura_w			integer;
vl_medico_w			pls_conta_pos_estabelecido.vl_medico%type;
vl_adic_procedimento_w		pls_conta_pos_estabelecido.vl_lib_taxa_servico%type;
vl_adic_proc_original_w		pls_conta_pos_estabelecido.vl_lib_taxa_servico%type;
nr_seq_proc_partic_w		pls_conta_pos_estab_contab.nr_seq_proc_partic%type;
qt_pos_estab_w			integer;
qt_registro_w			integer;
qt_partic_contab_w		integer;
qt_pos_contab_w			integer;
qt_participante_w		integer;


BEGIN

if (nr_seq_conta_pos_estab_p IS NOT NULL AND nr_seq_conta_pos_estab_p::text <> '') and (coalesce(nr_seq_pos_proc_p::text, '') = '') and (coalesce(nr_seq_pos_mat_p::text, '') = '') then
	select	max(nr_seq_conta_proc),
		max(nr_seq_conta_mat)
	into STRICT	nr_seq_conta_proc_w,
		nr_seq_conta_mat_w
	from	pls_conta_pos_estabelecido
	where	nr_sequencia = nr_seq_conta_pos_estab_p
	and	ie_status_faturamento  = CASE WHEN ie_tipo_cobranca_fatura_p='A' THEN  'A'  ELSE 'L' END;
	
	select 	sum(qt_item)
	into STRICT	qt_fatura_w
	from (SELECT	count(1) qt_item
		from	pls_fatura_proc a
		where	a.nr_seq_conta_pos_estab = nr_seq_conta_pos_estab_p
		and	coalesce(a.nr_seq_fat_proc_cancel::text, '') = ''
		and	a.ie_tipo_cobranca not in ('3','4')
		and not exists (	select 1
				from 	pls_fatura_conta 	d,
					pls_fatura_evento 	c,
					pls_fatura		b
				where 	d.nr_sequencia 		= a.nr_seq_fatura_conta
				and	c.nr_sequencia		= d.nr_seq_fatura_evento
				and	b.nr_sequencia		= c.nr_seq_fatura
				and	(b.ie_cancelamento IS NOT NULL AND b.ie_cancelamento::text <> ''))
		
union all

		SELECT	count(1) qt_item
		from	pls_fatura_mat a
		where	a.nr_seq_conta_pos_estab = nr_seq_conta_pos_estab_p
		and	coalesce(a.nr_seq_fat_mat_cancel::text, '') = ''
		and	a.ie_tipo_cobranca not in ('3','4')
		and not exists (	select 1
				from 	pls_fatura_conta 	d,
					pls_fatura_evento 	c,
					pls_fatura		b
				where 	d.nr_sequencia 		= a.nr_seq_fatura_conta
				and	c.nr_sequencia		= d.nr_seq_fatura_evento
				and	b.nr_sequencia		= c.nr_seq_fatura
				and	(b.ie_cancelamento IS NOT NULL AND b.ie_cancelamento::text <> ''))) alias11;
				
	select	count(1)
	into STRICT	qt_participante_w
	from	pls_conta_pos_estab_partic
	where	nr_seq_conta_pos 	= nr_seq_conta_pos_estab_p
	and	vl_participante_pos	= 0;
				
	if (nr_seq_conta_pos_contab_p IS NOT NULL AND nr_seq_conta_pos_contab_p::text <> '') and (qt_fatura_w > 1) and (qt_participante_w = 0) then
		if (nr_seq_conta_proc_w IS NOT NULL AND nr_seq_conta_proc_w::text <> '') then
			select	coalesce(vl_medico, 0),
				coalesce(vl_materiais, 0),
				coalesce(vl_custo_operacional_ind, 0),
				coalesce(vl_lib_taxa_servico, 0),
				coalesce(vl_lib_taxa_material, 0),
				coalesce(vl_lib_taxa_co, 0),
				coalesce(vl_medico, 0),
				coalesce(vl_lib_taxa_servico, 0),
				coalesce(vl_lib_taxa_servico, 0),
				nr_seq_proc_partic
			into STRICT	vl_procedimento_p,
				vl_filme_p,
				vl_custo_operacional_p,
				vl_adic_procedimento_p,
				vl_adic_filme_p,
				vl_adic_co_p,
				vl_medico_w,
				vl_adic_procedimento_w,
				vl_adic_proc_original_w,
				nr_seq_proc_partic_w
			from	pls_conta_pos_estab_contab
			where	nr_sequencia = nr_seq_conta_pos_contab_p;
			
			select	count(1)
			into STRICT	qt_pos_estab_w
			from	pls_conta_pos_estab_contab
			where	nr_seq_conta_pos = nr_seq_conta_pos_estab_p
			and	(nr_seq_proc_partic IS NOT NULL AND nr_seq_proc_partic::text <> '');
			
			if (nr_seq_pos_estab_partic_p IS NOT NULL AND nr_seq_pos_estab_partic_p::text <> '') and ((nr_seq_proc_partic_w IS NOT NULL AND nr_seq_proc_partic_w::text <> '') or (qt_pos_estab_w = 0)) then
				select	count(1)
				into STRICT	qt_registro_w
				from	pls_conta_pos_estab_partic
				where	nr_sequencia = nr_seq_pos_estab_partic_p
				and	vl_participante_pos > 0;
				
				-- Caso tenha "1" nico participante com valor zerodo e este esteja vinculado a um ps contab, TODOS os participantes devem enviar confome o ps-contabil
				select	count(1)
				into STRICT	qt_partic_contab_w
				from	pls_conta_pos_estab_partic	a
				where	a.nr_seq_conta_pos		= nr_seq_conta_pos_estab_p
				and	a.vl_participante_pos		= 0
				and exists (	SELECT	1
						from	pls_conta_pos_estab_contab	b
						where	b.nr_seq_proc_partic		= a.nr_seq_proc_partic
						and	b.nr_seq_conta_pos		= a.nr_seq_conta_pos);
						
				if (qt_registro_w > 0) and (qt_partic_contab_w = 0) then
					select	count(1)
					into STRICT	qt_registro_w
					from	pls_conta_pos_estab_partic
					where	nr_seq_conta_pos = nr_seq_conta_pos_estab_p;
					
					select	count(1)
					into STRICT	qt_pos_contab_w
					from	pls_conta_pos_estab_contab
					where	nr_seq_conta_pos = nr_seq_conta_pos_estab_p;
					
					select	coalesce(vl_participante_pos, 0),
						coalesce(vl_administracao, 0)
					into STRICT	vl_procedimento_p,
						vl_adic_procedimento_p
					from	pls_conta_pos_estab_partic
					where	nr_sequencia = nr_seq_pos_estab_partic_p;
					
					vl_procedimento_p := vl_procedimento_p - vl_adic_procedimento_p;
					
					if	((qt_registro_w <= 1) or (qt_registro_w != qt_pos_contab_w)) then
						vl_procedimento_p 	:= vl_medico_w;
						vl_adic_procedimento_p	:= vl_adic_procedimento_w;
					end if;
					
					if (qt_partic_duplic_p > 1) then
						vl_procedimento_p 	:= vl_procedimento_p * qt_partic_duplic_p;
						vl_adic_procedimento_p 	:= vl_adic_proc_original_w;
					end if;
				end if;
			end if;
		end if;
		
		if (nr_seq_conta_mat_w IS NOT NULL AND nr_seq_conta_mat_w::text <> '') then
			select	coalesce(vl_custo_operacional, 0) - coalesce(vl_administracao, 0),
				0,
				0,
				coalesce(vl_administracao, 0),
				0,
				0,
				coalesce(vl_medico, 0),
				coalesce(vl_administracao, 0)
			into STRICT	vl_procedimento_p,
				vl_filme_p,
				vl_custo_operacional_p,
				vl_adic_procedimento_p,
				vl_adic_filme_p,
				vl_adic_co_p,
				vl_medico_w,
				vl_adic_procedimento_w
			from	pls_conta_pos_estab_contab
			where	nr_sequencia = nr_seq_conta_pos_contab_p;
		end if;
	else
		if (nr_seq_conta_proc_w IS NOT NULL AND nr_seq_conta_proc_w::text <> '') then
			select	coalesce(vl_medico, 0),
				coalesce(vl_materiais, 0),
				coalesce(vl_custo_operacional, 0),
				coalesce(vl_lib_taxa_servico, 0),
				coalesce(vl_lib_taxa_material, 0),
				coalesce(vl_lib_taxa_co, 0),
				coalesce(vl_medico, 0),
				coalesce(vl_lib_taxa_servico, 0),
				coalesce(vl_lib_taxa_servico, 0)
			into STRICT	vl_procedimento_p,
				vl_filme_p,
				vl_custo_operacional_p,
				vl_adic_procedimento_p,
				vl_adic_filme_p,
				vl_adic_co_p,
				vl_medico_w,
				vl_adic_procedimento_w,
				vl_adic_proc_original_w
			from	pls_conta_pos_estabelecido
			where	ie_status_faturamento = CASE WHEN ie_tipo_cobranca_fatura_p='A' THEN  'A'  ELSE 'L' END
			and	nr_sequencia = nr_seq_conta_pos_estab_p;
		end if;
		
		if (nr_seq_conta_mat_w IS NOT NULL AND nr_seq_conta_mat_w::text <> '') then
			select	coalesce(b.vl_beneficiario, 0) - coalesce(b.vl_administracao, 0),
				0,
				0,
				coalesce(b.vl_administracao, 0),
				0,
				0,
				coalesce(b.vl_medico, 0),
				coalesce(b.vl_administracao, 0)
			into STRICT	vl_procedimento_p,
				vl_filme_p,
				vl_custo_operacional_p,
				vl_adic_procedimento_p,
				vl_adic_filme_p,
				vl_adic_co_p,
				vl_medico_w,
				vl_adic_procedimento_w
			from	pls_conta_pos_estabelecido	b,
				pls_conta_mat			a
			where	a.nr_sequencia			= b.nr_seq_conta_mat
			and	b.ie_status_faturamento 	= CASE WHEN ie_tipo_cobranca_fatura_p='A' THEN  'A'  ELSE 'L' END
			and	b.nr_sequencia			= nr_seq_conta_pos_estab_p;
		end if;
		
		if (nr_seq_pos_estab_partic_p IS NOT NULL AND nr_seq_pos_estab_partic_p::text <> '') then
			select	count(1)
			into STRICT	qt_registro_w
			from	pls_conta_pos_estab_partic
			where	nr_seq_conta_pos = nr_seq_conta_pos_estab_p;
			
			select	coalesce(vl_participante_pos, 0),
				coalesce(vl_administracao, 0)
			into STRICT	vl_procedimento_p,
				vl_adic_procedimento_p
			from	pls_conta_pos_estab_partic
			where	nr_sequencia = nr_seq_pos_estab_partic_p;
			
			vl_procedimento_p := vl_procedimento_p - vl_adic_procedimento_p;
			
			if (qt_registro_w <= 1) then
				vl_procedimento_p 	:= vl_medico_w;
				vl_adic_procedimento_p 	:= vl_adic_procedimento_w;
			end if;
			
			if (qt_partic_duplic_p > 1) then
				vl_procedimento_p 	:= vl_procedimento_p * qt_partic_duplic_p;
				vl_adic_procedimento_p 	:= vl_adic_proc_original_w;
			end if;
		end if;
	end if;
	
elsif (nr_seq_pos_proc_p IS NOT NULL AND nr_seq_pos_proc_p::text <> '') then
	select	max(nr_seq_conta_proc)
	into STRICT	nr_seq_conta_proc_w
	from	pls_conta_pos_proc
	where	nr_sequencia = nr_seq_pos_proc_p
	and	ie_status_faturamento = 'F';
	
	select	count(1)
	into STRICT	qt_fatura_w
	from	pls_fatura_proc 	a
	where	a.nr_seq_pos_proc 	= nr_seq_pos_proc_p
	and	coalesce(a.nr_seq_fat_proc_cancel::text, '') = ''
	and	a.ie_tipo_cobranca not in ('3','4')
	and not exists (	SELECT 1
			from 	pls_fatura_conta 	d,
				pls_fatura_evento 	c,
				pls_fatura		b
			where 	d.nr_sequencia 		= a.nr_seq_fatura_conta
			and	c.nr_sequencia		= d.nr_seq_fatura_evento
			and	b.nr_sequencia		= c.nr_seq_fatura
			and	(b.ie_cancelamento IS NOT NULL AND b.ie_cancelamento::text <> ''));
			
	if (qt_fatura_w > 1) then
		select	coalesce(vl_medico, 0),
			coalesce(vl_materiais, 0),
			coalesce(vl_custo_operacional, 0),
			coalesce(vl_lib_taxa_servico, 0),
			coalesce(vl_lib_taxa_material, 0),
			coalesce(vl_lib_taxa_co, 0),
			coalesce(vl_medico, 0),
			coalesce(vl_lib_taxa_servico, 0),
			coalesce(vl_lib_taxa_servico, 0)
		into STRICT	vl_procedimento_p,
			vl_filme_p,
			vl_custo_operacional_p,
			vl_adic_procedimento_p,
			vl_adic_filme_p,
			vl_adic_co_p,
			vl_medico_w,
			vl_adic_procedimento_w,
			vl_adic_proc_original_w
		from	pls_conta_pos_proc_fat
		where	nr_sequencia = nr_seq_pos_proc_fat_p;
	else
		begin
			select	coalesce(vl_medico, 0),
				coalesce(vl_materiais, 0),
				coalesce(vl_custo_operacional, 0),
				coalesce(vl_lib_taxa_servico, 0),
				coalesce(vl_lib_taxa_material, 0),
				coalesce(vl_lib_taxa_co, 0),
				coalesce(vl_medico, 0),
				coalesce(vl_lib_taxa_servico, 0),
				coalesce(vl_lib_taxa_servico, 0)
			into STRICT	vl_procedimento_p,
				vl_filme_p,
				vl_custo_operacional_p,
				vl_adic_procedimento_p,
				vl_adic_filme_p,
				vl_adic_co_p,
				vl_medico_w,
				vl_adic_procedimento_w,
				vl_adic_proc_original_w
			from	pls_conta_pos_proc
			where	ie_status_faturamento = 'F'
			and	nr_sequencia = nr_seq_pos_proc_p;
		exception
		when others then
			vl_procedimento_p	:= 0;
			vl_filme_p		:= 0;
			vl_custo_operacional_p	:= 0;
			vl_adic_procedimento_p	:= 0;
			vl_adic_filme_p		:= 0;
			vl_adic_co_p		:= 0;
			vl_medico_w		:= 0;
			vl_adic_procedimento_w	:= 0;
			vl_adic_proc_original_w	:= 0;
		end;
	end if;
	
elsif (nr_seq_pos_mat_p IS NOT NULL AND nr_seq_pos_mat_p::text <> '') then
	select	max(nr_seq_conta_mat)
	into STRICT	nr_seq_conta_mat_w
	from	pls_conta_pos_mat
	where	nr_sequencia = nr_seq_pos_mat_p
	and	ie_status_faturamento = 'F';
	
	select	count(1)
	into STRICT	qt_fatura_w
	from	pls_fatura_mat	 	a
	where	a.nr_seq_pos_mat 	= nr_seq_pos_mat_p
	and	coalesce(a.nr_seq_fat_mat_cancel::text, '') = ''
	and	a.ie_tipo_cobranca not in ('3','4')
	and not exists (	SELECT 1
			from 	pls_fatura_conta 	d,
				pls_fatura_evento 	c,
				pls_fatura		b
			where 	d.nr_sequencia 		= a.nr_seq_fatura_conta
			and	c.nr_sequencia		= d.nr_seq_fatura_evento
			and	b.nr_sequencia		= c.nr_seq_fatura
			and	(b.ie_cancelamento IS NOT NULL AND b.ie_cancelamento::text <> ''));
			
	if (qt_fatura_w > 1) then
		select	coalesce(vl_pos_estabelecido, 0) - coalesce(vl_administracao, 0),
			0,
			0,
			coalesce(vl_administracao, 0),
			0,
			0,
			0,
			coalesce(vl_administracao, 0)
		into STRICT	vl_procedimento_p,
			vl_filme_p,
			vl_custo_operacional_p,
			vl_adic_procedimento_p,
			vl_adic_filme_p,
			vl_adic_co_p,
			vl_medico_w,
			vl_adic_procedimento_w
		from	pls_conta_pos_mat_fat
		where	nr_sequencia = nr_seq_pos_mat_fat_p;
	else
		begin
			select (coalesce(vl_materiais, 0) + coalesce(vl_lib_taxa_material, 0)) - coalesce(vl_administracao, 0),
				0,
				0,
				coalesce(vl_administracao, 0),
				0,
				0,
				0,
				coalesce(vl_administracao, 0)
			into STRICT	vl_procedimento_p,
				vl_filme_p,
				vl_custo_operacional_p,
				vl_adic_procedimento_p,
				vl_adic_filme_p,
				vl_adic_co_p,
				vl_medico_w,
				vl_adic_procedimento_w
			from	pls_conta_pos_mat
			where	ie_status_faturamento = 'F'
			and	nr_sequencia = nr_seq_pos_mat_fat_p;
		exception
		when others then
			vl_procedimento_p	:= 0;
			vl_filme_p		:= 0;
			vl_custo_operacional_p	:= 0;
			vl_adic_procedimento_p	:= 0;
			vl_adic_filme_p		:= 0;
			vl_adic_co_p		:= 0;
			vl_medico_w		:= 0;
			vl_adic_procedimento_w	:= 0;
		end;
	end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_obter_valores_nota_servico ( nr_seq_conta_pos_estab_p pls_conta_pos_estabelecido.nr_sequencia%type, nr_seq_pos_proc_p pls_conta_pos_proc.nr_sequencia%type, nr_seq_pos_mat_p pls_conta_pos_mat.nr_sequencia%type, nr_seq_fatura_proc_p pls_conta_proc.nr_sequencia%type, nr_seq_fatura_mat_p pls_conta_mat.nr_sequencia%type, nr_seq_pos_estab_partic_p pls_conta_pos_estab_partic.nr_sequencia%type, nr_seq_conta_pos_contab_p pls_fatura_proc.nr_seq_conta_pos_contab%type, nr_seq_pos_proc_fat_p pls_conta_pos_proc_fat.nr_sequencia%type, nr_seq_pos_mat_fat_p pls_conta_pos_mat_fat.nr_sequencia%type, vl_procedimento_p INOUT bigint, vl_filme_p INOUT bigint, vl_custo_operacional_p INOUT bigint, vl_adic_procedimento_p INOUT bigint, vl_adic_filme_p INOUT bigint, vl_adic_co_p INOUT bigint , qt_partic_duplic_p bigint, nr_seq_fatura_conta_p bigint, ie_tipo_cobranca_fatura_p ptu_fatura.ie_tipo_cobranca_fatura%type) FROM PUBLIC;

