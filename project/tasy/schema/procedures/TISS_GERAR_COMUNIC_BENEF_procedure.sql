-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE tiss_gerar_comunic_benef (cd_estabelecimento_p bigint, nr_atendimento_p bigint, nm_usuario_p text, ie_tipo_evento_p text, cd_motivo_alta_p bigint, dt_evento_p timestamp, nr_sequencia_p INOUT bigint) AS $body$
DECLARE


cd_interno_w		tiss_comunic_benif.cd_interno%type;
cd_cgc_w		tiss_comunic_benif.cd_cgc%type;
cd_cns_w		tiss_comunic_benif.cd_cns%type;
ie_atendimento_rn_w	tiss_comunic_benif.ie_atendimento_rn%type;
ds_biometria_w		tiss_comunic_benif.ds_biometria%type;
cd_convenio_w		tiss_comunic_benif.cd_convenio%type;
nr_seq_motivo_saida_w	tiss_comunic_benif.nr_seq_motivo_saida%type;
ie_tipo_internacao_w	tiss_comunic_benif.ie_tipo_internacao%type;
nr_sequencia_w		tiss_comunic_benif.nr_sequencia%type;	
cd_usuario_convenio_w	tiss_comunic_benif.cd_usuario_convenio%type;	
nm_pessoa_fisica_w	tiss_comunic_benif.nm_pessoa_fisica%type;
cd_pessoa_fisica_w	tiss_comunic_benif.cd_pessoa_fisica%type;

ie_clinica_w		atendimento_paciente.ie_clinica%type;
ie_tipo_atendimento_w	atendimento_paciente.ie_tipo_atendimento%type;
nr_seq_classificacao_w	atendimento_paciente.nr_seq_classificacao%type;

cd_ans_w		varchar(20);
ie_versao_tiss_w	varchar(20);
cd_categoria_w		categoria_convenio.cd_categoria%type;
c01 CURSOR FOR
SELECT	nr_seq_saida_int	
from	tiss_motivo_alta
where	cd_motivo_alta							= cd_motivo_alta_p
and	coalesce(dt_inicio_vigencia, to_date('01/01/1900','dd/mm/yyyy'))	<= dt_evento_p
and	coalesce(ie_tipo_atendimento, ie_tipo_atendimento_w)			= ie_tipo_atendimento_w
and	coalesce(cd_convenio, coalesce(cd_convenio_w,0))				= coalesce(cd_convenio_w,0)
and 	obter_se_projeto_versao(0,12,tiss_obter_versao_tipo_saida(nr_seq_saida_int),0) = 'S'
order by	dt_inicio_vigencia;


BEGIN

select	max(a.cd_pessoa_fisica),
	max(c.nm_pessoa_fisica),
	max(tiss_obter_se_atend_rn(a.nr_atendimento)),
	substr(max(c.nr_cartao_nac_sus),1,15),
	substr(max(b.cd_usuario_convenio),1,20),
	max(b.cd_convenio),
	max(a.ie_clinica),
	max(a.ie_tipo_atendimento),
	max(a.nr_seq_classificacao),
	max(b.cd_categoria)
into STRICT	cd_pessoa_fisica_w,
	nm_pessoa_fisica_w,
	ie_atendimento_rn_w,
	cd_cns_w,
	cd_usuario_convenio_w,
	cd_convenio_w,
	ie_clinica_w,
	ie_tipo_atendimento_w,
	nr_seq_classificacao_w,
	cd_categoria_w
from	atendimento_paciente a,
	atend_categoria_convenio b,
	pessoa_fisica c	
where	a.cd_pessoa_fisica	= c.cd_pessoa_fisica
and	a.nr_atendimento	= b.nr_atendimento
and	b.nr_seq_interno	= obter_atecaco_atendimento(a.nr_atendimento)
and	a.nr_atendimento	= nr_atendimento_p;

select	substr(max(c.cd_ans),1,6) --Só pode com 6 dígitos
into STRICT	cd_ans_w
from	pessoa_juridica c,
	convenio b
where	b.cd_cgc	= c.cd_cgc
and	b.cd_convenio	= cd_convenio_w;

select	max(TISS_OBTER_CLINICA(ie_clinica_w, nr_seq_classificacao_w))
into STRICT	ie_tipo_internacao_w
from	tiss_tipo_internacao
where	ie_clinica		= ie_clinica_w;

select	max(cd_cgc)
into STRICT	cd_cgc_w
from	estabelecimento
where	cd_estabelecimento	= cd_estabelecimento_p;

select	max(tiss_obter_codigo_prestador(cd_convenio_w, cd_estabelecimento_p, null, cd_cgc_w, (null)::numeric , 'CI', clock_timestamp(), ie_tipo_atendimento_w,cd_categoria_w))
into STRICT	cd_interno_w
;

if (cd_interno_w IS NOT NULL AND cd_interno_w::text <> '') then
	cd_cgc_w	:= null;
end if;

if (cd_motivo_alta_p IS NOT NULL AND cd_motivo_alta_p::text <> '') then
	open C01;
	loop
	fetch C01 into	
		nr_seq_motivo_saida_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */	
	end loop;
	close C01;
end if;

delete	from tiss_comunic_benif
where	nr_atendimento		= nr_atendimento_p
and	cd_pessoa_fisica	= cd_pessoa_fisica_w
and	ie_tipo_evento		= ie_tipo_evento_p;
commit;

select	nextval('tiss_comunic_benif_seq')
into STRICT	nr_sequencia_w
;

insert into tiss_comunic_benif(nr_sequencia,
	dt_atualizacao,
	nm_usuario,
	dt_atualizacao_nrec,
	nm_usuario_nrec,
	cd_estabelecimento,
	ds_transacao,
	dt_transacao,
	cd_interno,
	cd_cgc,
	cd_pessoa_fisica,
	cd_usuario_convenio,
	nm_pessoa_fisica,
	cd_cns,
	ie_atendimento_rn,
	ds_biometria,
	cd_convenio,
	nr_atendimento,
	ie_tipo_evento,
	dt_evento,
	nr_seq_motivo_saida,
	ie_tipo_internacao,
	cd_ans,
	ie_status)
values (nr_sequencia_w,
	clock_timestamp(),
	nm_usuario_p,
	clock_timestamp(),
	nm_usuario_p,
	cd_estabelecimento_p,
	'COMUNICACAO_BENEFICIARIO',
	clock_timestamp(),
	cd_interno_w,
	cd_cgc_w,
	cd_pessoa_fisica_w,
	cd_usuario_convenio_w,
	nm_pessoa_fisica_w,
	cd_cns_w,
	ie_atendimento_rn_w,
	ds_biometria_w,
	cd_convenio_w,
	nr_atendimento_p,
	ie_tipo_evento_p,
	coalesce(dt_evento_p,clock_timestamp()),
	nr_seq_motivo_saida_w,
	ie_tipo_internacao_w,
	cd_ans_w,
	'P');	

commit;
	
nr_sequencia_p	:= nr_sequencia_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE tiss_gerar_comunic_benef (cd_estabelecimento_p bigint, nr_atendimento_p bigint, nm_usuario_p text, ie_tipo_evento_p text, cd_motivo_alta_p bigint, dt_evento_p timestamp, nr_sequencia_p INOUT bigint) FROM PUBLIC;

