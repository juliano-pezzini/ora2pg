-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_bloq_periodo_agcons ( cd_agenda_p bigint, dt_inicial_p timestamp, dt_final_p timestamp, ie_motivo_bloqueio_p text, nm_usuario_p text, ds_observacao_p text, ie_dia_semana_p bigint, hr_inicial_p timestamp, hr_final_p timestamp, ie_classif_p text, nr_seq_motivo_bloq_ag_p bigint, qt_min_duracao_p bigint, qt_min_intervalo_p bigint) AS $body$
DECLARE


hr_inicial_w		timestamp;
hr_final_w		timestamp;
dt_inicial_w		timestamp;
dt_final_w		timestamp;
nr_sequencia_w		bigint;
hr_final_bloq_w		timestamp;


BEGIN

begin
hr_inicial_w	:= hr_inicial_p;--to_date('30/12/1899'|| ' ' || hr_inicial_p,'dd/mm/yyyy hh24:mi:ss');
hr_final_w	:= hr_final_p;--to_date('30/12/1899'|| ' ' || hr_final_p,'dd/mm/yyyy hh24:mi:ss');
/*exception
when others then
	-20011,'Hora informada inv√°lida, verifique!'||'#@#@');*/
end;

dt_inicial_w	:= dt_inicial_p;
dt_final_w	:= dt_final_p;
if (dt_inicial_w IS NOT NULL AND dt_inicial_w::text <> '') and (dt_final_w IS NOT NULL AND dt_final_w::text <> '') then

	while(hr_inicial_w < hr_final_w) loop
		begin

		if (qt_min_intervalo_p	= 0) or
			(((to_char(hr_inicial_w,'mi'))::numeric 	= qt_min_intervalo_p) and (qt_min_intervalo_p	> 0)) then

			select	nextval('agenda_bloqueio_seq')
			into STRICT	nr_sequencia_w
			;

			if (qt_min_intervalo_p	= 0) then
				hr_final_bloq_w	:= hr_inicial_w + qt_min_duracao_p / 1440;
			else
				hr_final_bloq_w	:= hr_inicial_w + 1/1440;
			end if;

			insert into agenda_bloqueio(	cd_agenda,
							dt_inicial,
							dt_final,
							ie_motivo_bloqueio,
							dt_atualizacao,
							nm_usuario,
							ds_observacao,
							ie_dia_semana,
							hr_inicio_bloqueio,
							hr_final_bloqueio,
							nr_sequencia,
							ie_classif_bloqueio,
							qt_agenda_bloq,
							cd_medico,
							nr_seq_motivo_bloq_ag
						)
					values (
							cd_agenda_p,
							dt_inicial_p,
							dt_final_p,
							ie_motivo_bloqueio_p,
							clock_timestamp(),
							nm_usuario_p,
							ds_observacao_p,
							ie_dia_semana_p,
							hr_inicial_w,
							hr_final_bloq_w,
							nr_sequencia_w,
							ie_classif_p,
							null,
							null,
							nr_seq_motivo_bloq_ag_p
						);
		end if;

		hr_inicial_w	:= hr_inicial_w + qt_min_duracao_p / 1440;

		end;
	end loop;

commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_bloq_periodo_agcons ( cd_agenda_p bigint, dt_inicial_p timestamp, dt_final_p timestamp, ie_motivo_bloqueio_p text, nm_usuario_p text, ds_observacao_p text, ie_dia_semana_p bigint, hr_inicial_p timestamp, hr_final_p timestamp, ie_classif_p text, nr_seq_motivo_bloq_ag_p bigint, qt_min_duracao_p bigint, qt_min_intervalo_p bigint) FROM PUBLIC;

