-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_eis_hd_exame (dt_parametro_p timestamp, nm_usuario_p text) AS $body$
DECLARE


nr_seq_unid_dialise_w	bigint;
cd_pessoa_fisica_w	varchar(10);

dt_atual_w		timestamp;

resultado_ktv_w			varchar(255);
resultado_hb_w			varchar(255);
resultado_ht_w			varchar(255);
resultado_po4_w			varchar(255);
resultado_caXpo4_w		varchar(255);
resultado_pth_w			varchar(255);
resultado_alb_w			varchar(255);
resultado_hbs_ag_w		varchar(255);
resultado_anti_hbs_w		varchar(255);
resultado_anti_hcv_w		varchar(255);
resultado_anti_hiv_w		varchar(255);
resultado_hbs_ag_ant_w		varchar(255);
resultado_anti_hcv_ant_w		varchar(255);
resultado_anti_hiv_ant_w		varchar(255);


qt_ktv1_w 		bigint;
qt_ktv2_w 		bigint;
qt_ktv3_w 		bigint;
qt_ktv4_w 		bigint;
qt_ktv5_w 		bigint;
qt_ktv6_w 		bigint;
qt_ktv7_w 		bigint;
qt_hb1_w 		bigint;
qt_hb2_w 		bigint;
qt_hb3_w 		bigint;
qt_hb4_w 		bigint;
qt_hb5_w 		bigint;
qt_ht1_w 			bigint;
qt_ht2_w 			bigint;
qt_ht3_w 			bigint;
qt_ht4_w 			bigint;
qt_ht5_w 			bigint;
qt_po41_w 		bigint;
qt_po42_w 		bigint;
qt_caxpo41_w 		bigint;
qt_caxpo42_w 		bigint;
qt_pth1_w 		bigint;
qt_pth2_w 		bigint;
qt_pth3_w 		bigint;
qt_pth4_w 		bigint;
qt_pth5_w 		bigint;
qt_alb1_w 		bigint;
qt_alb2_w 		bigint;
qt_hbs_ag_pos_w 		bigint;
qt_hbs_ag_neg_w		bigint;
qt_anti_hbs_pos_w 		bigint;
qt_anti_hcv_pos_w 	bigint;
qt_anti_hiv_pos_w 		bigint;
qt_conv_hbs_ag_w 	bigint;
qt_conv_hcv_w 		bigint;
qt_conv_hiv_w 		bigint;
qt_mes_atual_w		bigint;

cd_estabelecimento_w	smallint;
cd_empresa_w		smallint;


C01 CURSOR FOR
	SELECT	nr_sequencia,
		cd_estabelecimento,
		obter_empresa_estab(cd_estabelecimento)
	from	hd_unidade_dialise;

C02 CURSOR FOR
	SELECT	distinct
		b.cd_pessoa_fisica
	from	hd_pac_renal_cronico a,
		paciente_tratamento b
	where	a.cd_pessoa_fisica = b.cd_pessoa_fisica
	and	b.ie_tratamento		= 'HD'
	and	(b.dt_inicio_tratamento IS NOT NULL AND b.dt_inicio_tratamento::text <> '')
	and (trunc(b.dt_inicio_tratamento) <= trunc(dt_atual_w))
	and	((coalesce(b.dt_final_tratamento::text, '') = '') or (b.dt_final_tratamento > dt_atual_w))
	and 	coalesce(hd_obter_unidade_prc(a.cd_pessoa_fisica,'C'),a.nr_seq_unid_dialise) = nr_seq_unid_dialise_w;


BEGIN

dt_atual_w	:= trunc(dt_parametro_p,'dd');

select	trunc(months_between(dt_parametro_p,dt_parametro_p) + 1)
into STRICT	qt_mes_atual_w
;

delete	FROM eis_hd_exame
where	dt_referencia = dt_atual_w;

open C01;
loop
fetch C01 into
	nr_seq_unid_dialise_w,
	cd_estabelecimento_w,
	cd_empresa_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	qt_ktv1_w 		:= 0;
	qt_ktv2_w 		:= 0;
	qt_ktv3_w 		:= 0;
	qt_ktv4_w 		:= 0;
	qt_ktv5_w 		:= 0;
	qt_ktv6_w		:= 0;
	qt_ktv7_w		:= 0;
	qt_hb1_w 		:= 0;
	qt_hb2_w 		:= 0;
	qt_hb3_w 		:= 0;
	qt_hb4_w 		:= 0;
	qt_hb5_w 		:= 0;
	qt_ht1_w 		:= 0;
	qt_ht2_w 		:= 0;
	qt_ht3_w 		:= 0;
	qt_ht4_w 		:= 0;
	qt_ht5_w 		:= 0;
	qt_po41_w 		:= 0;
	qt_po42_w 		:= 0;
	qt_caxpo41_w 		:= 0;
	qt_caxpo42_w 		:= 0;
	qt_pth1_w 		:= 0;
	qt_pth2_w 		:= 0;
	qt_pth3_w 		:= 0;
	qt_pth4_w 		:= 0;
	qt_pth5_w 		:= 0;
	qt_alb1_w 		:= 0;
	qt_alb2_w 		:= 0;
	qt_hbs_ag_pos_w 	:= 0;
	qt_hbs_ag_neg_w 	:= 0;
	qt_anti_hbs_pos_w 	:= 0;
	qt_anti_hcv_pos_w 	:= 0;
	qt_anti_hiv_pos_w 	:= 0;
	qt_conv_hbs_ag_w 	:= 0;
	qt_conv_hcv_w 		:= 0;
	qt_conv_hiv_w 		:= 0;

	open C02;
	loop
	fetch C02 into
		cd_pessoa_fisica_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin

		resultado_ktv_w			:= obter_resultado_dia_lab(cd_pessoa_fisica_w,dt_atual_w,1440); /*KTV*/
		resultado_hb_w			:= obter_resultado_dia_lab(cd_pessoa_fisica_w,dt_atual_w,913); /*HB*/
		resultado_ht_w			:= obter_resultado_dia_lab(cd_pessoa_fisica_w,dt_atual_w,1427); /*HT*/
		resultado_po4_w			:= obter_resultado_dia_lab(cd_pessoa_fisica_w,dt_atual_w,13); /*PO4*/
		resultado_caXpo4_w		:= obter_resultado_dia_lab(cd_pessoa_fisica_w,dt_atual_w,867); /*CAXPO4*/
		resultado_pth_w			:= obter_resultado_dia_lab(cd_pessoa_fisica_w,dt_atual_w,1429); /*PTH*/
		resultado_alb_w			:= obter_resultado_dia_lab(cd_pessoa_fisica_w,dt_atual_w,78); /*ALBUMINA*/
		resultado_hbs_ag_w		:= obter_resultado_dia_lab(cd_pessoa_fisica_w,dt_atual_w,315); /*HBS ag*/
		resultado_anti_hbs_w		:= obter_resultado_dia_lab(cd_pessoa_fisica_w,dt_atual_w,1333); /*ANTI HBS*/
		resultado_anti_hcv_w		:= obter_resultado_dia_lab(cd_pessoa_fisica_w,dt_atual_w,1094); /*ANTI HCV*/
		resultado_anti_hiv_w		:= obter_resultado_dia_lab(cd_pessoa_fisica_w,dt_atual_w,1407); /*ANTI HIV*/
		resultado_hbs_ag_ant_w		:= obter_resultado_dia_lab_ant(cd_pessoa_fisica_w,dt_atual_w,315); /*HBS ag*/
		resultado_anti_hcv_ant_w	:= obter_resultado_dia_lab_ant(cd_pessoa_fisica_w,dt_atual_w,1094); /*ANTI HCV*/
		resultado_anti_hiv_ant_w	:= obter_resultado_dia_lab_ant(cd_pessoa_fisica_w,dt_atual_w,1407); /*ANTI HIV*/
		if	((OBTER_SE_SOMENTE_NUMERO(resultado_ktv_w) <> 'S') or (resultado_ktv_w = 'NA')) then

			qt_ktv5_w	:= qt_ktv5_w + 1;

		elsif ((resultado_ktv_w)::numeric  <= 1) then

			qt_ktv1_w	:= qt_ktv1_w + 1;

		elsif ((resultado_ktv_w)::numeric  > 1) and ((resultado_ktv_w)::numeric  <= 1.19) then

			qt_ktv2_w	:= qt_ktv2_w + 1;

		elsif ((resultado_ktv_w)::numeric  > 1.2) and ((resultado_ktv_w)::numeric  <= 2.0) then

			qt_ktv3_w	:= qt_ktv3_w + 1;

		elsif ((resultado_ktv_w)::numeric  > 2.0) then

			qt_ktv4_w	:= qt_ktv4_w + 1;

		end if;

		if (OBTER_SE_SOMENTE_NUMERO(resultado_ktv_w) = 'S') then

			if ((resultado_ktv_w)::numeric  <= 1.1) then

				qt_ktv6_w	:= qt_ktv6_w + 1;

			elsif ((resultado_ktv_w)::numeric  > 1.1) then

				qt_ktv7_w	:= qt_ktv7_w + 1;

			end if;

		end if;

		if (resultado_hb_w <> 'NA') then
			if (OBTER_SE_SOMENTE_NUMERO(resultado_hb_w) = 'S') then
				if ((resultado_hb_w)::numeric  <=9.8) then
					qt_hb1_w	:= qt_hb1_w + 1;

				elsif ((resultado_hb_w)::numeric  >= 9.9) and ((resultado_hb_w)::numeric  <= 10.8) then
					qt_hb2_w	:= qt_hb2_w + 1;

				elsif ((resultado_hb_w)::numeric  >= 10.9) and ((resultado_hb_w)::numeric  <= 11.9) then
					qt_hb3_w	:= qt_hb3_w + 1;

				elsif ((resultado_hb_w)::numeric  >= 12.0) and ((resultado_hb_w)::numeric  <= 12.9) then
					qt_hb4_w	:= qt_hb4_w + 1;

				elsif ((resultado_hb_w)::numeric  >= 13) then
					qt_hb5_w	:= qt_hb5_w + 1;

				end if;
			end if;
		end if;

		if (resultado_ht_w <> 'NA') then
			if (OBTER_SE_SOMENTE_NUMERO(resultado_ht_w) = 'S') then

				if ((resultado_ht_w)::numeric  <= 28) then

					qt_ht1_w	:= qt_ht1_w + 1;

				elsif ((resultado_ht_w)::numeric  > 28) and ((resultado_ht_w)::numeric  <= 32.9) then

					qt_ht2_w	:= qt_ht2_w + 1;

				elsif ((resultado_ht_w)::numeric  > 33) and ((resultado_ht_w)::numeric  <= 36.9) then

					qt_ht3_w	:= qt_ht3_w + 1;

				elsif ((resultado_ht_w)::numeric  > 37) and ((resultado_ht_w)::numeric  <= 40) then

					qt_ht4_w	:= qt_ht4_w + 1;

				elsif ((resultado_ht_w)::numeric  > 40) then

					qt_ht5_w	:= qt_ht5_w + 1;
				end if;
			end if;
		end if;

		if (resultado_po4_w <> 'NA') then
			if (OBTER_SE_SOMENTE_NUMERO(resultado_po4_w) = 'S') then
				if ((resultado_po4_w)::numeric  <= 5.5) then

					qt_po41_w	:= qt_po41_w + 1;

				elsif ((resultado_po4_w)::numeric  > 5.5) then

					qt_po42_w	:= qt_po42_w + 1;
				end if;
			end if;
		end if;

		if (resultado_caXpo4_w <> 'NA') then
			if (OBTER_SE_SOMENTE_NUMERO(resultado_caXpo4_w) = 'S') then
				if ((resultado_caXpo4_w)::numeric  <= 55) then

					qt_caxpo41_w	:= qt_caxpo41_w + 1;

				elsif ((resultado_caXpo4_w)::numeric  > 55) then

					qt_caxpo42_w	:= qt_caxpo42_w + 1;
				end if;
			end if;
		end if;

		if	((OBTER_SE_SOMENTE_NUMERO(resultado_pth_w) <> 'S') or (resultado_pth_w = 'NA')) then

			qt_pth5_w	:= qt_pth5_w + 1;

		elsif ((resultado_pth_w)::numeric  <= 150) then

			qt_pth1_w	:= qt_pth1_w + 1;

		elsif ((resultado_pth_w)::numeric  > 150) and ((resultado_pth_w)::numeric  <= 200) then

			qt_pth2_w	:= qt_pth2_w + 1;

		elsif ((resultado_pth_w)::numeric  > 200) and ((resultado_pth_w)::numeric  <= 1000) then

			qt_pth3_w	:= qt_pth3_w + 1;

		elsif ((resultado_pth_w)::numeric  > 1000) then

			qt_pth4_w	:= qt_pth4_w + 1;

		end if;

		if (resultado_alb_w <> 'NA') then
			if (OBTER_SE_SOMENTE_NUMERO(resultado_alb_w) = 'S') then
				if ((resultado_alb_w)::numeric  <= 3.7) then

					qt_alb1_w	:= qt_alb1_w + 1;

				elsif ((resultado_alb_w)::numeric  > 3.7) then

					qt_alb2_w	:= qt_alb2_w + 1;
				end if;
			end if;
		end if;

		if (upper(substr(resultado_hbs_ag_w,1,3)) = 'POS') then

			qt_hbs_ag_pos_w	:= qt_hbs_ag_pos_w + 1;

			if (upper(substr(resultado_hbs_ag_ant_w,1,3)) <> 'NA')	and (upper(substr(resultado_hbs_ag_ant_w,1,3)) <> 'POS') then

				qt_conv_hbs_ag_w	:= qt_conv_hbs_ag_w + 1;

			end if;

		elsif (upper(substr(resultado_hbs_ag_w,1,3)) = 'NEG') then

			qt_hbs_ag_neg_w	:= qt_hbs_ag_neg_w + 1;

		end if;

		if (upper(substr(resultado_anti_hbs_w,1,3)) = 'POS') then

			qt_anti_hbs_pos_w	:= qt_anti_hbs_pos_w + 1;


		end if;

		if (upper(substr(resultado_anti_hcv_w,1,3)) = 'POS') then

			qt_anti_hcv_pos_w	:= qt_anti_hcv_pos_w + 1;

			if (upper(substr(resultado_anti_hcv_ant_w,1,3)) <> 'NA')	and (upper(substr(resultado_anti_hcv_ant_w,1,3)) <> 'POS') then

				qt_conv_hcv_w	:= qt_conv_hcv_w + 1;

			end if;

		end if;

		if (upper(substr(resultado_anti_hiv_w,1,3)) = 'POS') then

			qt_anti_hiv_pos_w	:= qt_anti_hiv_pos_w + 1;

			if (upper(substr(resultado_anti_hiv_ant_w,1,3)) <> 'NA')	and (upper(substr(resultado_anti_hiv_ant_w,1,3)) <> 'POS') then

				qt_conv_hiv_w	:= qt_conv_hiv_w + 1;

			end if;

		end if;

		end;
	end loop;
	close C02;

	insert into eis_hd_exame(	dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					dt_referencia,
					nr_seq_unid_dialise,
					qt_ktv1,
					qt_ktv2,
					qt_ktv3,
					qt_ktv4,
					qt_ktv5,
					qt_ktv6,
					qt_ktv7,
					qt_hb1,
					qt_hb2,
					qt_hb3,
					qt_hb4,
					qt_hb5,
					qt_ht1,
					qt_ht2,
					qt_ht3,
					qt_ht4,
					qt_ht5,
					qt_po41,
					qt_po42,
					qt_caxpo41,
					qt_caxpo42,
					qt_pth1,
					qt_pth2,
					qt_pth3,
					qt_pth4,
					qt_pth5,
					qt_alb1,
					qt_alb2,
					qt_hbs_ag_pos,
					qt_hbs_ag_neg,
					qt_anti_hbs_pos,
					qt_anti_hcv_pos,
					qt_anti_hiv_pos,
					qt_conv_hbs_ag,
					qt_conv_hcv,
					qt_conv_hiv,
					qt_mes_atual,
					cd_estabelecimento,
					cd_empresa)
			values (	clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					dt_atual_w,
					nr_seq_unid_dialise_w,
					qt_ktv1_w,
					qt_ktv2_w,
					qt_ktv3_w,
					qt_ktv4_w,
					qt_ktv5_w,
					qt_ktv6_w,
					qt_ktv7_w,
					qt_hb1_w,
					qt_hb2_w,
					qt_hb3_w,
					qt_hb4_w,
					qt_hb5_w,
					qt_ht1_w,
					qt_ht2_w,
					qt_ht3_w,
					qt_ht4_w,
					qt_ht5_w,
					qt_po41_w,
					qt_po42_w,
					qt_caxpo41_w,
					qt_caxpo42_w,
					qt_pth1_w,
					qt_pth2_w,
					qt_pth3_w,
					qt_pth4_w,
					qt_pth5_w,
					qt_alb1_w,
					qt_alb2_w,
					qt_hbs_ag_pos_w,
					qt_hbs_ag_neg_w,
					qt_anti_hbs_pos_w,
					qt_anti_hcv_pos_w,
					qt_anti_hiv_pos_w,
					qt_conv_hbs_ag_w,
					qt_conv_hcv_w,
					qt_conv_hiv_w,
					qt_mes_atual_w,
					cd_estabelecimento_w,
					cd_empresa_w
				);


	end;
end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_eis_hd_exame (dt_parametro_p timestamp, nm_usuario_p text) FROM PUBLIC;

