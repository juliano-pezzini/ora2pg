-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE des_calcular_escore (dt_referencia_p timestamp, nm_usuario_p text) AS $body$
DECLARE


dt_mes_inicial_w                timestamp;
dt_mes_final_w                  timestamp;
nm_usuario_grupo_w              varchar(30);
cd_pessoa_fisica_w              varchar(30);
qt_pontos_escore_w              double precision;
nr_sequencia_w                  double precision;
cd_cargo_w						double precision;
ie_estagio_w					varchar(01);
qt_pontos_he_w					double precision;
qt_pontos_prod_w				double precision;
qt_pontos_erro_w				double precision;
qt_pontos_grau_w				double precision;
ds_historico_he_w				varchar(255);
ds_historico_prod_w				varchar(512);
ds_historico_erro_w				varchar(255);
ds_historico_grau_w				varchar(255);
dt_admissao_w					timestamp;

C01 CURSOR FOR
        SELECT  a.nm_usuario_grupo,
				b.cd_pessoa_fisica
        from    usuario b,
				usuario_grupo_des a
		where	a.nm_usuario_grupo	= b.nm_usuario
		group by a.nm_usuario_grupo,
				b.cd_pessoa_fisica;


BEGIN

/*No primeiro dia do mes re-calcula o score do mês anterior para pegar atividades trabalhas no último dia do mês*/

if (trunc(dt_referencia_p) = trunc(clock_timestamp(),'month')) then
	CALL des_Calcular_Escore(dt_referencia_p-1,nm_usuario_p);
end if;

dt_mes_inicial_w                := trunc(dt_referencia_p, 'month');
dt_mes_final_w                  := Fim_Mes(trunc(dt_referencia_p, 'month'));

delete  from des_escore_usuario
where   dt_mes_escore between dt_mes_inicial_w and dt_mes_final_w;

open C01;
loop
fetch C01 into
        nm_usuario_grupo_w,
		cd_pessoa_fisica_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
        begin

		select	dt_admissao_hosp
		into STRICT	dt_admissao_w
		from	pessoa_fisica
		where	cd_pessoa_fisica	= cd_pessoa_fisica_w;

		if (trunc(dt_mes_inicial_w,'month') < trunc(dt_admissao_w,'month')) then
			qt_pontos_escore_w	:= 0;
		else
			begin
			/* Inicia escore com 100 pontos */

			qt_pontos_escore_w      := 100;

			/* Calcula escore de Horas extras e tira os pontos se necessário */

			SELECT * FROM Des_Calcular_Escore_HE(dt_referencia_p, nm_usuario_grupo_w, qt_pontos_he_w, ds_historico_he_w) INTO STRICT qt_pontos_he_w, ds_historico_he_w;

			/* Calcula escore de produção e tira os pontos se necessário */

			SELECT * FROM Des_Calcular_Escore_Prod(dt_mes_inicial_w, nm_usuario_grupo_w, qt_pontos_prod_w, ds_historico_prod_w) INTO STRICT qt_pontos_prod_w, ds_historico_prod_w;

			/* Calcula escore de errros e tira os pontos se necessário */

			SELECT * FROM Des_Calcular_Escore_Erro(dt_mes_inicial_w, nm_usuario_grupo_w, qt_pontos_erro_w, ds_historico_erro_w) INTO STRICT qt_pontos_erro_w, ds_historico_erro_w;

			/* Calcula escore de grau de satisfação e tira os pontos se necessário */

			SELECT * FROM Des_Calcular_Escore_Grau(dt_mes_inicial_w, nm_usuario_grupo_w, qt_pontos_grau_w, ds_historico_grau_w) INTO STRICT qt_pontos_grau_w, ds_historico_grau_w;

			qt_pontos_escore_w	:= qt_pontos_escore_w - (qt_pontos_he_w + qt_pontos_prod_w + qt_pontos_erro_w + qt_pontos_grau_w);

		        select  nextval('des_escore_usuario_seq')
		        into STRICT    nr_sequencia_w
		;

		        insert  into des_escore_usuario(nr_sequencia,
		                        dt_mes_escore,
		                        nm_usuario_escore,
		                        dt_atualizacao,
		                        nm_usuario,
		                        dt_atualizacao_nrec,
		                        nm_usuario_nrec,
		                        qt_pontos_escore,
					ds_historico)
		        values (nr_sequencia_w,
		                        dt_mes_inicial_w,
		                        nm_usuario_grupo_w,
		                        clock_timestamp(),
		                        nm_usuario_p,
		                        clock_timestamp(),
		                        nm_usuario_p,
		                        qt_pontos_escore_w,
					'Avalição referente ao mês : ' || trunc(dt_mes_inicial_w,'month') || chr(13) || chr(10) ||
					'Score: ' || qt_pontos_escore_w || chr(13) || chr(10) ||
					ds_historico_he_w || ds_historico_prod_w || ds_historico_erro_w || ds_historico_grau_w);
			end;
		end if;
        end;

end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE des_calcular_escore (dt_referencia_p timestamp, nm_usuario_p text) FROM PUBLIC;

