-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE generate_qhapdc_segment_header ( nr_seq_file_p bigint, ie_syntax_p text, nm_usuario_p text, cd_estabelecimento_p bigint, returned_value_p INOUT bigint, other_exception_p INOUT text) AS $body$
DECLARE

  nr_sequencia_w           qhapdc_segment_header.nr_sequencia%TYPE;
  qhapdc_segment_header_w  qhapdc_segment_header%ROWTYPE;
  extraction_software_id_w qhapdc_segment_header.extraction_software_id%TYPE;
  dt_extraction_start_w    qhapdc_segment_header.dt_extract_start%TYPE;
  dt_extraction_end_w      qhapdc_segment_header.dt_extract_end%TYPE;
  number_of_records_w      qhapdc_segment_header.number_of_records%TYPE;
  cd_facility_w		   varchar(20);

BEGIN
    -- fetch the facility seq number    
	SELECT	coalesce(max(pj.cd_cnes), max(pj.cd_rfc)) facility 
		INTO STRICT	cd_facility_w 
		FROM	pessoa_juridica pj, 
				estabelecimento es 
		WHERE	es.cd_estabelecimento = cd_estabelecimento_p
		and		es.cd_cgc = pj.cd_cgc  LIMIT 1;

    -- fetch the tasy application version    
    SELECT cd_versao_atual 
    INTO STRICT   extraction_software_id_w 
    FROM   aplicacao_tasy 
    WHERE  Upper(cd_aplicacao_tasy) = Upper('Tasy');

    -- fetch the extract period    
    SELECT b.dt_initial_ref, 
           b.dt_final_ref 
    INTO STRICT   dt_extraction_start_w, dt_extraction_end_w 
    FROM   qhapdc_file a, 
           qhapdc_batch_sending b 
    WHERE  a.nr_sequencia = nr_seq_file_p 
           AND a.nr_qhapdc_batch = b.nr_sequencia;

    -- Number of records in the file      
    SELECT Count(b.nr_sequencia) 
    INTO STRICT   number_of_records_w 
    FROM   qhapdc_file a, 
           qhapdc_dataset_send b 
    WHERE  a.nr_sequencia = nr_seq_file_p 
           AND b.nr_seq_arquivo = a.nr_sequencia;

    -- fetch the next value in the sequence     
    SELECT nextval('qhapdc_segment_header_seq') 
    INTO STRICT   nr_sequencia_w 
;

    qhapdc_segment_header_w.nr_sequencia := nr_sequencia_w;

    qhapdc_segment_header_w.dt_atualizacao := clock_timestamp();

    qhapdc_segment_header_w.nm_usuario := nm_usuario_p;

    qhapdc_segment_header_w.dt_atualizacao_nrec := clock_timestamp();

    qhapdc_segment_header_w.nm_usuario_nrec := nm_usuario_p;

    qhapdc_segment_header_w.nr_seq_file := nr_seq_file_p;

    qhapdc_segment_header_w.ie_syntax := trim(both ie_syntax_p);

    qhapdc_segment_header_w.nr_seq_facility := Lpad(cd_facility_w, 5, '0');

    qhapdc_segment_header_w.extraction_software_id := extraction_software_id_w;

    qhapdc_segment_header_w.dt_extract_start := dt_extraction_start_w;

    qhapdc_segment_header_w.dt_extract_end := dt_extraction_end_w;

    qhapdc_segment_header_w.number_of_records := number_of_records_w;

    INSERT INTO qhapdc_segment_header 
    VALUES (qhapdc_segment_header_w.*);

    returned_value_p := 1;

    other_exception_p := NULL;
EXCEPTION 
  WHEN data_exception OR unique_violation OR invalid_cursor_state THEN 
             other_exception_p := Substr(SQLERRM, 1, 100);

             returned_value_p := 0;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE generate_qhapdc_segment_header ( nr_seq_file_p bigint, ie_syntax_p text, nm_usuario_p text, cd_estabelecimento_p bigint, returned_value_p INOUT bigint, other_exception_p INOUT text) FROM PUBLIC;

