-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_oc_cta_tratar_val_25_imp ( nr_seq_combinada_p pls_oc_cta_combinada.nr_sequencia%type, ie_regra_excecao_p pls_oc_cta_combinada.ie_excecao%type, nr_id_transacao_p pls_oc_cta_selecao_imp.nr_id_transacao%type) AS $body$
DECLARE


_ora2pg_r RECORD;
nr_index_sel_w					integer;
ie_gerar_ocorrencia_w				varchar(1);
tb_seq_selecao_w				pls_util_cta_pck.t_number_table;
tb_valido_w					pls_util_cta_pck.t_varchar2_table_1;
tb_observacao_w					pls_util_cta_pck.t_varchar2_table_4000;

nr_conselho_profissional_w			pls_conta_item_equipe_imp.nr_conselho_profissional%type;
cd_uf_conselho_profissional_w 			pls_conta_item_equipe_imp.cd_uf_conselho_profissional%type;
nm_profissional_w				pls_conta_item_equipe_imp.nm_profissional%type;
cd_conselho_profissional_w			pls_conta_item_equipe_imp.cd_conselho_profissional%type;
qt_participante_w				integer;
nr_seq_item_equipe_imp_w			pls_conta_item_equipe_imp.nr_sequencia%type;

--Curosr das validações cadastradas para regra
C01 CURSOR(	nr_seq_oc_cta_comb_pc		pls_oc_cta_combinada.nr_sequencia%type) FOR
	SELECT	a.ie_valida_prof_solic_info,
		a.ie_valida_prof_exec_info,
		a.ie_valida_prof_part_info
	from	pls_oc_cta_val_prof_solic a
	where	a.nr_seq_oc_cta_comb		= nr_seq_oc_cta_comb_pc;

--Cursor das contas selecionadas que irão gerar as ocorrências
C02 CURSOR(	nr_id_transacao_pc		pls_oc_cta_selecao_imp.nr_id_transacao%type) FOR
	SELECT	conta.nr_sequencia,
		conta.nr_cons_prof_solic_conv,
		conta.cd_uf_cons_prof_solic_conv,
		conta.cd_conselho_prof_solic,
		conta.nm_profissional_solic,
		conta.cd_profissional_solic_conv,
		conta.cd_profissional_exec_conv,
		conta.cd_uf_conselho_prof_solic,
		conta.nr_conselho_prof_solic,
		conta.cd_conselho_prof_exec,
		conta.cd_uf_conselho_prof_exec,
		conta.nr_conselho_prof_exec,
		conta.nm_profissional_exec
	from	pls_conta_imp	conta
	where	exists (	SELECT 1
				from	pls_oc_cta_selecao_imp	sel
				where	sel.nr_id_transacao 	= nr_id_transacao_pc
				and  	sel.ie_valido 		= 'S'
				and  	sel.nr_seq_conta 	= conta.nr_sequencia);
BEGIN

-- Deve exisitr informação da regra para executar a validação
if (nr_seq_combinada_p IS NOT NULL AND nr_seq_combinada_p::text <> '') and (nr_id_transacao_p IS NOT NULL AND nr_id_transacao_p::text <> '')  then
	--Abre o cusosr das validações cadastradas para regra
	for r_C01_w in C01(nr_seq_combinada_p) loop
		--Validar se profissional solicitante informado
		if (r_C01_w.ie_valida_prof_solic_info = 'S')or (r_C01_w.ie_valida_prof_exec_info = 'S') or (r_C01_w.ie_valida_prof_part_info = 'S') then

			-- tratamento em campo auxiliar para identificar posteriormente os registros que foram alterados
			CALL pls_ocor_imp_pck.atualiza_campo_auxiliar('V', 'N', nr_id_transacao_p, null);
			--limpa as variáveis
			SELECT * FROM pls_ocor_imp_pck.limpar_nested_tables(	tb_seq_selecao_w, tb_valido_w, tb_observacao_w) INTO STRICT _ora2pg_r;
 	tb_seq_selecao_w := _ora2pg_r.tb_nr_seq_selecao_p; tb_valido_w := _ora2pg_r.tb_ie_valido_p; tb_observacao_w := _ora2pg_r.tb_ds_observacao_p;
			nr_index_sel_w := 0;
			--Abre cursor das contas selecionadas
			for r_C02_w in C02(nr_id_transacao_p) loop

				ie_gerar_ocorrencia_w	:= 'N';

				if (coalesce(r_c02_w.cd_profissional_solic_conv::text, '') = '') and (r_C01_w.ie_valida_prof_solic_info = 'S') and (ie_gerar_ocorrencia_w = 'N')then
					begin

					ie_gerar_ocorrencia_w	:= 'S';

					tb_observacao_w(nr_index_sel_w):= 	'CONSELHO: ' || r_c02_w.cd_conselho_prof_solic ||
										'UF CONSELHO: ' || r_c02_w.cd_uf_conselho_prof_solic ||
										'SEQ CONSELHO: ' || r_c02_w.nr_conselho_prof_solic ||
										'NOME PROFISSIONAL: ' || r_c02_w.nm_profissional_solic;

					end;
				end if;

				if (coalesce(r_c02_w.cd_profissional_exec_conv::text, '') = '') and (r_C01_w.ie_valida_prof_exec_info = 'S') and (ie_gerar_ocorrencia_w = 'N')then
					begin

					ie_gerar_ocorrencia_w	:= 'S';

					tb_observacao_w(nr_index_sel_w):= 	'CONSELHO: ' || r_c02_w.cd_conselho_prof_exec ||
										'UF CONSELHO: ' || r_c02_w.cd_uf_conselho_prof_exec ||
										'SEQ CONSELHO: ' || r_c02_w.nr_conselho_prof_exec ||
										'NOME PROFISSIONAL: ' || r_c02_w.nm_profissional_exec;

					end;
				end if;

				if (r_C01_w.ie_valida_prof_part_info = 'S') and (ie_gerar_ocorrencia_w = 'N')then

					begin

					select	max(b.nr_sequencia)
					into STRICT	nr_seq_item_equipe_imp_w
					from 	pls_conta_item_imp a,
						pls_conta_item_equipe_imp b
					where	a.nr_seq_conta = r_c02_w.nr_sequencia
					and 	a.nr_sequencia = b.nr_seq_conta_item
					and	coalesce(b.cd_profissional_conv::text, '') = ''  LIMIT 1;


					if (coalesce(nr_seq_item_equipe_imp_w,0) <> 0) then
						begin

						select	1,
							a.nr_conselho_profissional,
							a.cd_uf_conselho_profissional,
							a.nm_profissional,
							a.cd_conselho_profissional
						into STRICT	qt_participante_w,
							nr_conselho_profissional_w,
							cd_uf_conselho_profissional_w,
							nm_profissional_w,
							cd_conselho_profissional_w
						from 	pls_conta_item_equipe_imp a
						where	a.nr_sequencia = nr_seq_item_equipe_imp_w  LIMIT 1;

						end;
					else
						qt_participante_w:= 0;
					end if;


					exception
					when others then
						qt_participante_w:= 0;
					end;

					if (qt_participante_w = 1) then
						begin

						ie_gerar_ocorrencia_w	:= 'S';

						tb_observacao_w(nr_index_sel_w):= 	'CONSELHO: ' || cd_conselho_profissional_w ||
											'UF CONSELHO: ' || cd_uf_conselho_profissional_w ||
											'SEQ CONSELHO: ' || nr_conselho_profissional_w ||
											'NOME PROFISSIONAL: ' || nm_profissional_w;

						end;
					end if;
				end if;

				-- Verificar se o registro atual é válido ou não conforme as parametrizações de regras e regras de exceção.
				if (ie_gerar_ocorrencia_w = 'S') then

					tb_seq_selecao_w(nr_index_sel_w) := r_C02_w.nr_sequencia;
					tb_observacao_w(nr_index_sel_w)  := null;
					tb_valido_w(nr_index_sel_w) 	 := ie_gerar_ocorrencia_w;

					-- Quando a quantidade de itens da lista tiver chegado ao máximo definido na PLS_CTA_CONSISTIR_PCK, então os registros são levados para
					-- o BD e gravados todos de uma vez, pela procedure GERENCIA_SELECAO_VALIDACAO, que atualiza os registros conforme passado por
					-- parâmetro, o indice e as listas são reiniciados para carregar os novos registros e para que os registros atuais não sejam atualizados novamente em
					-- na próxima carga.
					if (nr_index_sel_w >= pls_cta_consistir_pck.qt_registro_transacao_w ) then

						--Grava o que restar nas variáveis na tabela
						CALL pls_ocor_imp_pck.gerencia_selecao_validacao(	tb_seq_selecao_w, tb_valido_w,
												tb_observacao_w, nr_id_transacao_p,
												'SEQ_CONTA');
						--limpa as variáveis
						SELECT * FROM pls_ocor_imp_pck.limpar_nested_tables(	tb_seq_selecao_w, tb_valido_w, tb_observacao_w) INTO STRICT _ora2pg_r;
 	tb_seq_selecao_w := _ora2pg_r.tb_nr_seq_selecao_p; tb_valido_w := _ora2pg_r.tb_ie_valido_p; tb_observacao_w := _ora2pg_r.tb_ds_observacao_p;

						nr_index_sel_w		:= 0;
					else
						nr_index_sel_w := nr_index_sel_w + 1;
					end if;
				end if;
			end loop;
			--Grava o que restar nas variáveis na tabela
			CALL pls_ocor_imp_pck.gerencia_selecao_validacao(	tb_seq_selecao_w, tb_valido_w,
									tb_observacao_w, nr_id_transacao_p,
									'SEQ_CONTA');
			-- seta os registros que serão válidos ou inválidos após o processamento
			CALL pls_ocor_imp_pck.atualiza_campo_valido('V', 'N',
								ie_regra_excecao_p, null,
								nr_id_transacao_p, null);
		end if;
	end loop; --C01
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_oc_cta_tratar_val_25_imp ( nr_seq_combinada_p pls_oc_cta_combinada.nr_sequencia%type, ie_regra_excecao_p pls_oc_cta_combinada.ie_excecao%type, nr_id_transacao_p pls_oc_cta_selecao_imp.nr_id_transacao%type) FROM PUBLIC;

