-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



--
-- dblink wrapper to call function alterar_classif_agenda as an autonomous transaction
--
CREATE EXTENSION IF NOT EXISTS dblink;

CREATE OR REPLACE PROCEDURE alterar_classif_agenda (dt_agenda_p timestamp default clock_timestamp(), cd_tipo_agenda_p bigint default null, cd_agenda_p bigint default null, nr_tempo_alteracao_p bigint default null, ie_gerar_horarios_p text default null, cd_estabelecimento_p bigint default null, ie_classif_ant_p text default null, nr_seq_classif_ant_p bigint default null, ie_delete_p text default 'N') AS $body$
DECLARE
	-- Change this to reflect the dblink connection string
	v_conn_str  text := format('port=%s dbname=%s user=%s', current_setting('port'), current_database(), current_user);
	v_query     text;

BEGIN
	v_query := 'CALL alterar_classif_agenda_atx ( ' || quote_nullable(dt_agenda_p) || ',' || quote_nullable(cd_tipo_agenda_p) || ',' || quote_nullable(cd_agenda_p) || ',' || quote_nullable(nr_tempo_alteracao_p) || ',' || quote_nullable(ie_gerar_horarios_p) || ',' || quote_nullable(cd_estabelecimento_p) || ',' || quote_nullable(ie_classif_ant_p) || ',' || quote_nullable(nr_seq_classif_ant_p) || ',' || quote_nullable(ie_delete_p) || ' )';
	PERFORM * FROM dblink(v_conn_str, v_query) AS p (ret boolean);

END;
$body$ LANGUAGE plpgsql SECURITY DEFINER;


CREATE TYPE agendas_gerar_hor_row AS (
	cd_tipo_agenda		agenda.cd_tipo_agenda%type,
	cd_agenda 		agenda.cd_agenda%type,
	nr_tempo_alteracao	alteracao_classif_agenda.nr_tempo_alteracao%type
);


CREATE OR REPLACE PROCEDURE alterar_classif_agenda_atx (dt_agenda_p timestamp default clock_timestamp(), cd_tipo_agenda_p bigint default null, cd_agenda_p bigint default null, nr_tempo_alteracao_p bigint default null, ie_gerar_horarios_p text default null, cd_estabelecimento_p bigint default null, ie_classif_ant_p text default null, nr_seq_classif_ant_p bigint default null, ie_delete_p text default 'N') AS $body$
DECLARE
TYPE agendas_gerar_hor_table IS TABLE OF agendas_gerar_hor_row INDEX BY integer;

agendas_gerar_hor_w		agendas_gerar_hor_table;
cd_tipo_agenda_w		agenda.cd_tipo_agenda%type;
qt_reg_w			smallint := 0;
qt_dias_gerar_w			bigint := 1;
ds_feriado_w       		varchar(1);
ds_retorno_w       		varchar(4000);

c01 CURSOR FOR
	SELECT 	ie_classif_nova, ie_classif_ant, nr_seq_classif_ant, cd_agenda, cd_tipo_agenda, nr_tempo_alteracao, ie_gerar_horarios, cd_estabelecimento
	from 	alteracao_classif_agenda
	where 	ie_situacao = 'A'
	and		(nr_tempo_alteracao IS NOT NULL AND nr_tempo_alteracao::text <> '')
	and		(cd_tipo_agenda IS NOT NULL AND cd_tipo_agenda::text <> '')
	and ((ie_classif_nova IS NOT NULL AND ie_classif_nova::text <> '') or (nr_seq_classif_nova IS NOT NULL AND nr_seq_classif_nova::text <> ''))	
	and 	dt_agenda_p between coalesce(dt_inicio_vigencia, dt_agenda_p) and coalesce(dt_fim_vigencia, dt_agenda_p)
	and	((cd_agenda IS NOT NULL AND cd_agenda::text <> '') or (cd_tipo_agenda IS NOT NULL AND cd_tipo_agenda::text <> ''));

procedure gerar_horarios_agendas(cd_tipo_agenda_pp bigint, cd_agenda_pp bigint, nr_tempo_alteracao_pp bigint) is
	agenda_c CURSOR FOR
		SELECT 	ag.cd_agenda,
			ag.cd_estabelecimento,
			ag.ie_gerar_sobra_horario
		from 	agenda ag
		where 	ie_situacao = 'A'
		AND 	((ag.cd_agenda = cd_agenda_pp) or (coalesce(cd_agenda_pp::text, '') = '' and cd_tipo_agenda = cd_tipo_agenda_pp))
		order by 1;
	
	
BEGIN
	
	qt_dias_gerar_w := obter_dias_entre_datas(dt_agenda_p,dt_agenda_p+nr_tempo_alteracao_pp/24/60);

	for r_agenda in agenda_c loop
		for qt_dias_w in 0..qt_dias_gerar_w loop
			if (cd_tipo_agenda_pp = 2) then
				CALL gerar_horario_agenda_exame(r_agenda.cd_estabelecimento,
					cd_agenda_pp,
					trunc(dt_agenda_p+qt_dias_w),
					'TASY');
			elsif (cd_tipo_agenda_pp in (3,4)) then
				select CASE WHEN obter_se_feriado(r_agenda.cd_estabelecimento, trunc(dt_agenda_p+qt_dias_w))=0 THEN  'N'  ELSE 'S' END
				into STRICT ds_feriado_w
				;
			
				ds_retorno_w := horario_livre_consulta(r_agenda.cd_estabelecimento, cd_agenda_pp, ds_feriado_w, trunc(dt_agenda_p+qt_dias_w), 'TASY', 'S', r_agenda.ie_gerar_sobra_horario, 'N', 0, ds_retorno_w);
			elsif (cd_tipo_agenda_pp = 5) then
				CALL gerar_horario_agenda_servico(r_agenda.cd_estabelecimento,
					cd_agenda_pp,
					trunc(dt_agenda_p+qt_dias_w),
					'TASY');
			end if;
		end loop;
	end loop;
	commit;
	end;
	
procedure gerar_horarios_vetor is

	qt_reg_w number(10);
	param_ageint NUMBER(10);
	
	begin
	
	select coalesce(max(1), 0)
	  into STRICT qt_reg_w
	  from user_scheduler_running_jobs
	  where job_name like 'AGINT_GERA_JOB%';
	
	if (agendas_gerar_hor_w.count > 0 and qt_reg_w = 0) then
		for linha in agendas_gerar_hor_w.first .. agendas_gerar_hor_w.last loop
			if (agendas_gerar_hor_w.exists(linha)) then
				gerar_horarios_agendas(agendas_gerar_hor_w[linha].cd_tipo_agenda, agendas_gerar_hor_w[linha].cd_agenda, agendas_gerar_hor_w[linha].nr_tempo_alteracao);
			end if;
		end loop;
	end if;
	end;

procedure remover_controle_horario(cd_tipo_agenda_pp number, cd_agenda_pp number, nr_tempo_alteracao_pp number, ie_gerar_horarios_pp varchar2,
					cd_estabelecimento_pp number, ie_classif_ant_pp varchar2, nr_seq_classif_ant_pp number) is
	-- Consultas / Servicos
	C011 CURSOR FOR
		SELECT 	distinct a.cd_agenda
		from 	agenda a,
				agenda_consulta b,
				agenda_controle_horario c
		where	a.cd_agenda = b.cd_agenda
		and		a.cd_agenda = c.cd_agenda
		and		c.dt_agenda	= trunc(b.dt_agenda)
		and 	b.ie_status_agenda = 'L'
		and		coalesce(a.ie_situacao,'A')	= 'A'
		and		b.ie_classif_agenda = ie_classif_ant_pp
		and 	a.cd_tipo_agenda = cd_tipo_agenda_pp
		and (a.cd_estabelecimento = cd_estabelecimento_pp or coalesce(cd_estabelecimento_pp::text, '') = '')
		and		b.dt_agenda between dt_agenda_p and dt_agenda_p+nr_tempo_alteracao_pp/24/60;

	-- Exames
	C012 CURSOR FOR
		SELECT 	distinct a.cd_agenda
		from 	agenda a,
				agenda_paciente b,
				agenda_controle_horario c
		where	a.cd_agenda = b.cd_agenda
		and		a.cd_agenda = c.cd_agenda
		and		c.dt_agenda	= trunc(b.dt_agenda)
		and 	b.ie_status_agenda = 'L'
		and		coalesce(a.ie_situacao,'A')	= 'A'
		and		b.NR_SEQ_CLASSIF_AGENDA = nr_seq_classif_ant_pp
		and 	a.cd_tipo_agenda = cd_tipo_agenda_pp
		and		b.hr_inicio > clock_timestamp()
		and (a.cd_estabelecimento = cd_estabelecimento_pp or coalesce(cd_estabelecimento_pp::text, '') = '')
		and		b.hr_inicio between dt_agenda_p and dt_agenda_p+nr_tempo_alteracao_pp/24/60;

	procedure adicionar_agenda_vetor(cd_agenda_vet_pp number) is
		begin
		if (cd_agenda_vet_pp IS NOT NULL AND cd_agenda_vet_pp::text <> '') and (cd_agenda_vet_pp > 0) then
			if (not agendas_gerar_hor_w.exists(cd_agenda_pp)) or (nr_tempo_alteracao_pp > coalesce(agendas_gerar_hor_w[cd_agenda_pp].nr_tempo_alteracao,0)) then
				agendas_gerar_hor_w[cd_agenda_pp].cd_tipo_agenda := cd_tipo_agenda_pp;
				agendas_gerar_hor_w[cd_agenda_pp].cd_agenda := cd_agenda_pp;
				agendas_gerar_hor_w[cd_agenda_pp].nr_tempo_alteracao := coalesce(nr_tempo_alteracao_pp, 0);
			end if;
		end if;
		end;
	
	procedure remover_controle(cd_agenda_vet_pp number) is
		begin
		delete FROM agenda_controle_horario a
		where dt_agenda between trunc(dt_agenda_p) and dt_agenda_p+nr_tempo_alteracao_pp/24/60
		and cd_agenda = cd_agenda_vet_pp;
		if (ie_gerar_horarios_pp = 'S') then
			CALL adicionar_agenda_vetor(cd_agenda_pp);
		end if;
		end;
	
	begin

	if (coalesce(cd_agenda_pp,0) = 0) then
		if (cd_tipo_agenda_pp in (3,4,5)) then
			for agendas in c011 loop
				remover_controle(agendas.cd_agenda);
			end loop;
		elsif (cd_tipo_agenda_pp = 2) then
			for agendas in c012 loop
				remover_controle(agendas.cd_agenda);
			end loop;
		end if;
	else
		remover_controle(cd_agenda_pp);
	end if;
	commit;
	end;

begin

if (ie_delete_p = 'N') then
	for c01_w in c01 loop
		qt_reg_w := 0;
		if (coalesce(c01_w.cd_tipo_agenda::text, '') = '') then
			select 	cd_tipo_agenda
			into STRICT	cd_tipo_agenda_w
			from 	agenda
			where 	cd_agenda = c01_w.cd_agenda;
		else
			cd_tipo_agenda_w := c01_w.cd_tipo_agenda;
		end if;
		
		if (cd_tipo_agenda_w in (3,4,5)) then
			if (coalesce(c01_w.cd_agenda::text, '') = '') then
				select 	coalesce(max(1),0)
				into STRICT	qt_reg_w
				from 	agenda a,
						agenda_consulta b
				where	a.cd_agenda = b.cd_agenda
				and 	b.ie_status_agenda = 'L'
				and		coalesce(a.ie_situacao,'A')	= 'A'
				and		b.ie_classif_agenda = c01_w.ie_classif_ant
				and 	a.cd_tipo_agenda = c01_w.cd_tipo_agenda
				and (a.cd_estabelecimento = c01_w.cd_estabelecimento or coalesce(c01_w.cd_estabelecimento::text, '') = '')
				and		dt_agenda between dt_agenda_p and dt_agenda_p+c01_w.nr_tempo_alteracao/24/60;
			else
				select 	coalesce(max(1),0)
				into STRICT	qt_reg_w
				from 	agenda a,
						agenda_consulta b
				where	a.cd_agenda = b.cd_agenda
				and 	b.ie_status_agenda = 'L'
				and		coalesce(a.ie_situacao,'A')	= 'A'
				and		b.ie_classif_agenda = c01_w.ie_classif_ant
				and 	a.cd_agenda = c01_w.cd_agenda
				and		dt_agenda between dt_agenda_p and dt_agenda_p+c01_w.nr_tempo_alteracao/24/60;
			end if;
		elsif (cd_tipo_agenda_w = 2) then
			if (coalesce(c01_w.cd_agenda::text, '') = '') then
				select 	coalesce(max(1),0)
				into STRICT	qt_reg_w
				from 	agenda a,
						agenda_paciente b
				where	a.cd_agenda = b.cd_agenda
				and 	b.ie_status_agenda in ('L')
				and		coalesce(a.ie_situacao,'A')	= 'A'
				and		b.NR_SEQ_CLASSIF_AGENDA = c01_w.nr_seq_classif_ant
				and 	a.cd_tipo_agenda = c01_w.cd_tipo_agenda
				and		b.hr_inicio > clock_timestamp()
				and (a.cd_estabelecimento = c01_w.cd_estabelecimento or coalesce(c01_w.cd_estabelecimento::text, '') = '')
				and		b.hr_inicio between dt_agenda_p and dt_agenda_p+c01_w.nr_tempo_alteracao/24/60;
			else
				select 	coalesce(max(1),0)
				into STRICT	qt_reg_w
				from 	agenda a,
						agenda_paciente b
				where	a.cd_agenda = b.cd_agenda
				and		coalesce(a.ie_situacao,'A')	= 'A'
				and 	b.ie_status_agenda in ('L')
				and		b.NR_SEQ_CLASSIF_AGENDA = c01_w.nr_seq_classif_ant
				and 	a.cd_agenda = c01_w.cd_agenda
				and		b.hr_inicio > clock_timestamp()
				and		b.hr_inicio between dt_agenda_p and dt_agenda_p+c01_w.nr_tempo_alteracao/24/60;
			end if;
		end if;
		
		remover_controle_horario(cd_tipo_agenda_w, c01_w.cd_agenda, c01_w.nr_tempo_alteracao, c01_w.ie_gerar_horarios, c01_w.cd_estabelecimento,
							c01_w.ie_classif_ant, c01_w.nr_seq_classif_ant);
	end loop;
end if;

if (qt_reg_w = 0 and ie_delete_p = 'S') then

	remover_controle_horario(cd_tipo_agenda_p, cd_agenda_p, nr_tempo_alteracao_p, ie_gerar_horarios_p, cd_estabelecimento_p,
				ie_classif_ant_p, nr_seq_classif_ant_p);
end if;

gerar_horarios_vetor;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE alterar_classif_agenda (dt_agenda_p timestamp default clock_timestamp(), cd_tipo_agenda_p bigint default null, cd_agenda_p bigint default null, nr_tempo_alteracao_p bigint default null, ie_gerar_horarios_p text default null, cd_estabelecimento_p bigint default null, ie_classif_ant_p text default null, nr_seq_classif_ant_p bigint default null, ie_delete_p text default 'N') FROM PUBLIC; -- REVOKE ALL ON PROCEDURE alterar_classif_agenda_atx (dt_agenda_p timestamp default clock_timestamp(), cd_tipo_agenda_p bigint default null, cd_agenda_p bigint default null, nr_tempo_alteracao_p bigint default null, ie_gerar_horarios_p text default null, cd_estabelecimento_p bigint default null, ie_classif_ant_p text default null, nr_seq_classif_ant_p bigint default null, ie_delete_p text default 'N') FROM PUBLIC;

