-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE mprev_alterar_status_agenda ( nr_seq_agendamento_p bigint, dt_execucao_p timestamp, ie_status_p text, nm_usuario_p text, cd_estabelecimento_p bigint, ie_gera_atendimento_p text, nr_seq_atend_mprev_p INOUT bigint) AS $body$
DECLARE

					
nr_seq_atend_mprev_w		mprev_atendimento.nr_sequencia%type	:= null;
nr_seq_status_paciente_w	mprev_agendamento.nr_seq_status_pac%type;
qt_regra_atend_w		bigint;
nr_seq_partic_ciclo_item_w	mprev_agendamento.nr_seq_partic_ciclo_item%type;
ie_caracteriza_atend_w	varchar(1);
	
C01 CURSOR FOR
	SELECT 	a.nr_seq_part_cic_item_ativ	
	from 	mprev_agendamento_ativ a
	where 	a.nr_seq_agendamento = nr_seq_agendamento_p
	and	a.ie_executado = 'S'
	order by a.nr_seq_part_cic_item_ativ;
	
BEGIN	

if (ie_status_p IS NOT NULL AND ie_status_p::text <> '') and (nr_seq_agendamento_p IS NOT NULL AND nr_seq_agendamento_p::text <> '') then
	
	select	CASE WHEN coalesce(nr_seq_participante,coalesce(nr_seq_turma,0))=0 THEN 'N'  ELSE 'S' END
	into STRICT	ie_caracteriza_atend_w	
	from	mprev_agendamento
	where	nr_sequencia = nr_seq_agendamento_p;
	
	select	count(1)
	into STRICT	qt_regra_atend_w
	from	mprev_regra_ger_atend a
	where	a.cd_estabelecimento	= cd_estabelecimento_p;
	
	/* Gerar o atendimento */

	if (qt_regra_atend_w > 0) and (coalesce(ie_gera_atendimento_p,'S') <> 'N') and (ie_caracteriza_atend_w = 'S') then
		nr_seq_atend_mprev_w := mprev_gerar_atend_agenda(nr_seq_agendamento_p, dt_execucao_p, nm_usuario_p, cd_estabelecimento_p, nr_seq_atend_mprev_w);
	end if;
				
	update	mprev_agendamento
	set	ie_status_agenda = ie_status_p,
		dt_atendido	= dt_execucao_p,
		nm_usuario	= nm_usuario_p,
		dt_atualizacao	= clock_timestamp()
	where	nr_sequencia	= nr_seq_agendamento_p;
	
	nr_seq_status_paciente_w := mprev_obter_status_pac_ag('GA',dt_execucao_p);

	if (nr_seq_status_paciente_w IS NOT NULL AND nr_seq_status_paciente_w::text <> '')then
		update	mprev_agendamento
		set	nr_seq_status_pac	= nr_seq_status_paciente_w
		where	nr_sequencia		= nr_seq_agendamento_p
		and	ie_tipo_atendimento	<> 'C';
	end if;
	
	nr_seq_atend_mprev_p := nr_seq_atend_mprev_w;

	select 	nr_seq_partic_ciclo_item
	into STRICT	nr_seq_partic_ciclo_item_w
	from 	mprev_agendamento
	where 	nr_sequencia = nr_seq_agendamento_p;
	
	if (nr_seq_partic_ciclo_item_w IS NOT NULL AND nr_seq_partic_ciclo_item_w::text <> '') then
		update	mprev_partic_ciclo_item
		set	ie_status	= 'R'
		where	nr_sequencia	= nr_seq_partic_ciclo_item_w;
		
		/*Atualiza as atividades dos itens do ciclo de atendimento das atividades cadastradas no agendamento e marcado como executado.*/

		for r_C01 in C01 loop
			begin
				update	mprev_part_cic_item_ativ
				set	ie_executado = 'S',
					dt_executado_sistema = clock_timestamp(),
					dt_atualizacao_nrec = clock_timestamp(),
					nm_usuario_nrec = nm_usuario_p
				where	nr_sequencia = r_C01.nr_seq_part_cic_item_ativ;
			end;
		end loop;
		
	end if;
	
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE mprev_alterar_status_agenda ( nr_seq_agendamento_p bigint, dt_execucao_p timestamp, ie_status_p text, nm_usuario_p text, cd_estabelecimento_p bigint, ie_gera_atendimento_p text, nr_seq_atend_mprev_p INOUT bigint) FROM PUBLIC;

