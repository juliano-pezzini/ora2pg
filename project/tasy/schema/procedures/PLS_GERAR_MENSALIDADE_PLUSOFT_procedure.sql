-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_mensalidade_plusoft ( nr_seq_lote_p INOUT bigint, nr_seq_contrato_p bigint, dt_mesano_referencia_p text, nm_usuario_p text, ds_retorno_p INOUT text) AS $body$
DECLARE

 
qt_registros_w		bigint;
nr_seq_contrato_w	pls_contrato.nr_sequencia%type;
nr_seq_segurado_w	pls_segurado.nr_sequencia%type;
dt_referencia_w		timestamp;
nr_contrato_w		bigint;
dt_inicio_adesao_w	pls_lote_mensalidade.dt_inicio_adesao%type;
dt_fim_adesao_w		pls_lote_mensalidade.dt_fim_adesao%type;
nr_seq_lote_w		pls_lote_mensalidade.nr_sequencia%type;
cd_estabelecimento_w	pls_contrato.cd_estabelecimento%type;
ds_retorno_w		varchar(255);


BEGIN 
 
begin 
dt_referencia_w		:= trunc(to_date(dt_mesano_referencia_p),'month');
exception 
when others then 
ds_retorno_w := 'Data de referência '||dt_mesano_referencia_p||' inválida';
end;
 
begin 
nr_seq_contrato_w	:= nr_seq_contrato_p;
exception 
when others then 
ds_retorno_p := 'Contrato '||nr_seq_contrato_p||' inválido';
end;
 
 
 
if (coalesce(nr_seq_contrato_w::text, '') = '' and (nr_seq_lote_p IS NOT NULL AND nr_seq_lote_p::text <> '')) then 
	 
	begin 
	select	nr_seq_contrato 
	into STRICT	nr_seq_contrato_w 
	from	pls_lote_mensalidade 
	where	nr_sequencia = nr_seq_lote_p;
	exception 
	when others then 
	ds_retorno_w := 'Não existe contrato vínculado ao lote '||nr_seq_lote_p||'.';	
	end;
 
end if;
 
if (coalesce(nr_seq_contrato_w,0) > 0) then 
	 
	begin 
	select	nr_contrato, 
		cd_estabelecimento	 
	into STRICT	nr_contrato_w, 
		cd_estabelecimento_w 
	from	pls_contrato 
	where	nr_sequencia	= nr_seq_contrato_w;	
	exception 
	when others then 
	ds_retorno_w := 'Contrato '||nr_seq_contrato_w||' não encontrado na base.';
	end;
	 
	 
	--dt_inicio_adesao_w :=dt_referencia_w ; 
	--dt_fim_adesao_w := fim_mes(dt_referencia_w); 
	 
	if (coalesce(ds_retorno_w::text, '') = '') then	 
		if (coalesce(nr_seq_lote_p::text, '') = '') then 
			select	nextval('pls_lote_mensalidade_seq') 
			into STRICT	nr_seq_lote_w 
			;
		 
			insert into pls_lote_mensalidade(nr_sequencia, nm_usuario, dt_atualizacao, 
				dt_mesano_referencia, ie_status, dt_geracao, 
				ie_tipo_contratacao, ie_regulamentacao, ie_fator_moderador, 
				ie_participacao, nr_seq_contrato, cd_estabelecimento, 
				vl_lote, dt_liberacao, dt_geracao_titulos, 
				ds_observacao, ie_primeira_mensalidade, nr_contrato, 
				ie_tipo_lote,ie_pagador_beneficio_obito, cd_perfil, 
				dt_inicio_adesao, dt_fim_adesao, nr_seq_segurado, 
				ie_mensalidade_mes_anterior, ie_visualizar_portal, ie_cobrar_retroativo, 
				ie_gerar_mensalidade_futura, ie_tipo_pessoa_pagador, ie_geracao_nota_titulo,dt_atualizacao_nrec,nm_usuario_nrec, 
				ie_mens_ant_agrupar, ie_mens_ant_mes_atual,ie_utilizacao) 
			values (nr_seq_lote_w, nm_usuario_p, clock_timestamp(), 
				dt_referencia_w, '1', null, 
				'T', 'T', 'T', 
				'T', nr_seq_contrato_w, cd_estabelecimento_w, 
				0, null, null, 
				'Mensalidade referente a 1° parcela do contrato nr. ' || nr_contrato_w, 'S', nr_contrato_w, 
				'CO','N', wheb_usuario_pck.get_cd_perfil, 
				dt_inicio_adesao_w, dt_fim_adesao_w, nr_seq_segurado_w, 
				'N', 'N', 'N', 
				'N', 'A', 'A',clock_timestamp(),nm_usuario_p, 
				'N','N','N');
		else 
			--verificar status provisório 
			 
			begin 
			select	nr_sequencia, 
				dt_mesano_referencia 
			into STRICT	nr_seq_lote_w, 
				dt_referencia_w 
			from	pls_lote_mensalidade 
			where	nr_sequencia = nr_seq_lote_p 
			and	ie_status = 1;
			exception 
			when others then 
				ds_retorno_w := 'O lote '||nr_seq_lote_p||' não existe ou não está mais como provisório';
			end;		
			 
		end if;	
		 
		if (coalesce(ds_retorno_w::text, '') = '') then 
			CALL pls_geracao_mensalidade(nr_seq_lote_w, cd_estabelecimento_w, nm_usuario_p);
			CALL pls_altera_status_lote(nr_seq_lote_w,nm_usuario_p);
			CALL pls_gerar_notas_lote_mens(nr_seq_lote_w,null, null, null , null, null, clock_timestamp(), null,'Nota gerada através de WebService', nm_usuario_p, cd_estabelecimento_w);
		end if;
	end if;	
		 
end if;
 
commit;
ds_retorno_p := ds_retorno_w;
nr_seq_lote_p := nr_seq_lote_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_mensalidade_plusoft ( nr_seq_lote_p INOUT bigint, nr_seq_contrato_p bigint, dt_mesano_referencia_p text, nm_usuario_p text, ds_retorno_p INOUT text) FROM PUBLIC;

