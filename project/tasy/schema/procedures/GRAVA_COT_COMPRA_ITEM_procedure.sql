-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE grava_cot_compra_item ( nr_solic_compra_p bigint, nr_item_solic_compra_p bigint, nr_cot_compra_p bigint, nm_usuario_p text, ie_consiste_cotacao_p text, ie_solic_nao_aut_p text) AS $body$
DECLARE


nr_cot_compra_w		bigint;
nr_item_solic_compra_w	integer;
nr_item_w		integer;
cd_material_w		integer;
cd_unidade_medida_w	varchar(30);
dt_solic_w		timestamp;
ds_observacao_w		solic_compra.ds_observacao%type;
ds_obs_cotacao_w	varchar(4000);
ds_obs_entrega_item_w	varchar(255);
ds_obs_item_solic_w	varchar(255);
ds_material_direto_w	varchar(2000);
qt_material_w		double precision;
dt_entrega_solicitada_w	timestamp;
cd_pessoa_solicitante_w	varchar(10);
cd_estabelecimento_w	smallint;
ie_regra_preco_w		varchar(15);
nr_seq_proj_rec_w		bigint;
ie_grava_obs_item_w	varchar(1);
nr_item_sc_item_entr_w	integer;
ds_titulo_w		varchar(255);
ds_detalhe_w		varchar(4000);
ie_inseriu_item_w 	varchar(1) := 'N';
dt_entrega_cotacao_w	timestamp;
vl_unit_previsto_w	double precision;
nr_contrato_w		solic_compra_item.nr_contrato%type;
cd_pac_soli_compra_w	solic_compra_item.cd_paciente_soli_compra%type;

/* Shift  + F11 = 'Regra para consistencia do item disp. mercado' */

qt_existe_regra_disp_mer_w	bigint;
ie_acao_disp_mercado_w	varchar(1) := 'N';


c01 CURSOR FOR
	--Todos os itens da solicitacao que possuem programacao entrega na solicitacao
	SELECT	i.cd_material,
		i.cd_unidade_medida_compra,
		i.nr_item_solic_compra,
		i.ds_material_direto,
		e.qt_entrega_solicitada - obter_qt_sc_em_ordem_sem_cot(s.nr_solic_compra, i.nr_item_solic_compra, e.dt_entrega_solicitada) -
				(SELECT	coalesce(sum(x.qt_material), 0)
				from	cot_compra_item x
				where	x.nr_solic_compra = i.nr_solic_compra
				and	x.nr_item_solic_compra = i.nr_item_solic_compra),
		e.dt_entrega_solicitada,
		e.ds_observacao,
		i.ds_observacao,
		i.nr_seq_proj_rec,
		e.nr_item_solic_compra_entr,
		i.vl_unit_previsto,
		i.nr_contrato,
		i.cd_paciente_soli_compra
	from	solic_compra s,
		solic_compra_item i,
		solic_compra_item_entrega e
	where	ie_consiste_cotacao_p	= 'N'
	and	i.nr_solic_compra	= s.nr_solic_compra
	and	i.nr_solic_compra	= nr_solic_compra_p
	and	i.nr_solic_compra	= e.nr_solic_compra
	and	i.nr_item_solic_compra	= e.nr_item_solic_compra
	and	coalesce(i.cd_motivo_baixa::text, '') = ''
	and	coalesce(i.dt_reprovacao::text, '') = ''
	and (e.qt_entrega_solicitada - obter_qt_sc_em_ordem_sem_cot(s.nr_solic_compra, i.nr_item_solic_compra, e.dt_entrega_solicitada)) > 0
	and	((ie_solic_nao_aut_p <> 'A') or
		(ie_solic_nao_aut_p = 'A' AND i.dt_autorizacao IS NOT NULL AND i.dt_autorizacao::text <> ''))
	and	((nr_item_solic_compra_p = 0) or
		(nr_item_solic_compra_p > 0 AND i.nr_item_solic_compra = nr_item_solic_compra_p))
	and	coalesce(obter_se_item_sc_em_oc_contr(s.nr_solic_compra, i.nr_item_solic_compra),'N') = 'N'
	
union all

	--Todos os itens da solicitacao que NAO possuem programacao entrega na solicitacao
	select	i.cd_material,
		i.cd_unidade_medida_compra,
		i.nr_item_solic_compra,
		i.ds_material_direto,
		i.qt_material - obter_qt_solic_item_em_ordem(s.nr_solic_compra,i.nr_item_solic_compra) -
				(select	coalesce(sum(x.qt_material), 0)
				from	cot_compra_item x
				where	x.nr_solic_compra = i.nr_solic_compra
				and	x.nr_item_solic_compra = i.nr_item_solic_compra),
		dt_entrega_cotacao_w,
		null,
		i.ds_observacao,
		i.nr_seq_proj_rec,
		1,
		i.vl_unit_previsto,
		i.nr_contrato,
		i.cd_paciente_soli_compra
	from	solic_compra s,
		solic_compra_item i
	where	ie_consiste_cotacao_p	= 'N'
	and	i.nr_solic_compra	= s.nr_solic_compra
	and	i.nr_solic_compra	= nr_solic_compra_p
	and	coalesce(i.cd_motivo_baixa::text, '') = ''
	and	coalesce(i.dt_reprovacao::text, '') = ''
	and (i.qt_material - obter_qt_solic_item_em_ordem(s.nr_solic_compra,i.nr_item_solic_compra)) > 0
	and	((ie_solic_nao_aut_p <> 'A') or
		(ie_solic_nao_aut_p = 'A' AND i.dt_autorizacao IS NOT NULL AND i.dt_autorizacao::text <> ''))
	and	((nr_item_solic_compra_p = 0) or
		(nr_item_solic_compra_p > 0 AND i.nr_item_solic_compra = nr_item_solic_compra_p))
	and	coalesce(obter_se_item_sc_em_oc_contr(s.nr_solic_compra, i.nr_item_solic_compra),'N') = 'N'
	and not exists (
		select	1
		from	solic_compra_item_entrega e
		where	i.nr_solic_compra	= e.nr_solic_compra
		and	i.nr_item_solic_compra	= e.nr_item_solic_compra)
	
union all

	--Somente os itens sem nenhuma cotacao que possuem programacao de entrega na solicitacao
	select	i.cd_material,
		i.cd_unidade_medida_compra,
		i.nr_item_solic_compra,
		i.ds_material_direto,
		e.qt_entrega_solicitada - obter_qt_sc_em_ordem_sem_cot(s.nr_solic_compra, i.nr_item_solic_compra, e.dt_entrega_solicitada) -
				(select	coalesce(sum(x.qt_material), 0)
				from	cot_compra_item x
				where	x.nr_solic_compra = i.nr_solic_compra
				and	x.nr_item_solic_compra = i.nr_item_solic_compra),
		e.dt_entrega_solicitada,
		i.ds_observacao,
		e.ds_observacao,
		i.nr_seq_proj_rec,
		e.nr_item_solic_compra_entr,
		i.vl_unit_previsto,
		i.nr_contrato,
		i.cd_paciente_soli_compra
	from	solic_compra s,
		solic_compra_item i,
		solic_compra_item_entrega e
	where	ie_consiste_cotacao_p	= 'S'
	and	((coalesce(i.nr_cot_compra::text, '') = '') or 
		((e.qt_entrega_solicitada - 
		(select	coalesce(sum(x.qt_material), 0)
				from	cot_compra_item x
				where	x.nr_solic_compra = i.nr_solic_compra
				and	x.nr_item_solic_compra = i.nr_item_solic_compra))>0))
	and	i.nr_solic_compra	= s.nr_solic_compra
	and	i.nr_solic_compra	= nr_solic_compra_p
	and	i.nr_solic_compra	= e.nr_solic_compra
	and	i.nr_item_solic_compra	= e.nr_item_solic_compra
	and	coalesce(i.cd_motivo_baixa::text, '') = ''
	and	coalesce(i.dt_reprovacao::text, '') = ''
	and (e.qt_entrega_solicitada - obter_qt_sc_em_ordem_sem_cot(s.nr_solic_compra, i.nr_item_solic_compra, e.dt_entrega_solicitada)) > 0
	and	((ie_solic_nao_aut_p <> 'A') or
		(ie_solic_nao_aut_p = 'A' AND i.dt_autorizacao IS NOT NULL AND i.dt_autorizacao::text <> ''))
	and	((nr_item_solic_compra_p = 0) or
		(nr_item_solic_compra_p > 0 AND i.nr_item_solic_compra = nr_item_solic_compra_p))
	and	coalesce(obter_se_item_sc_em_oc_contr(s.nr_solic_compra, i.nr_item_solic_compra),'N') = 'N'
	
union all

	--Somente os itens sem nenhuma cotacao que NAO possuem programacao de entrega na solicitacao
	select	i.cd_material,
		i.cd_unidade_medida_compra,
		i.nr_item_solic_compra,
		i.ds_material_direto,
		i.qt_material - obter_qt_solic_item_em_ordem(s.nr_solic_compra,i.nr_item_solic_compra) - 
				(select	coalesce(sum(x.qt_material), 0)
				from	cot_compra_item x
				where	x.nr_solic_compra = i.nr_solic_compra
				and	x.nr_item_solic_compra = i.nr_item_solic_compra),
		dt_entrega_cotacao_w,
		i.ds_observacao,
		null,
		i.nr_seq_proj_rec,
		1,
		i.vl_unit_previsto,
		i.nr_contrato,
		i.cd_paciente_soli_compra
	from	solic_compra s,
		solic_compra_item i
	where	ie_consiste_cotacao_p	= 'S'
	and	((coalesce(i.nr_cot_compra::text, '') = '') or 
		((i.qt_material - 
		(select	coalesce(sum(x.qt_material), 0)
				from	cot_compra_item x
				where	x.nr_solic_compra = i.nr_solic_compra
				and	x.nr_item_solic_compra = i.nr_item_solic_compra))>0))
	and	i.nr_solic_compra	= s.nr_solic_compra
	and	i.nr_solic_compra	= nr_solic_compra_p	
	and	coalesce(i.cd_motivo_baixa::text, '') = ''
	and	coalesce(i.dt_reprovacao::text, '') = ''
	and (i.qt_material - obter_qt_solic_item_em_ordem(s.nr_solic_compra,i.nr_item_solic_compra)) > 0
	and	((ie_solic_nao_aut_p <> 'A') or
		(ie_solic_nao_aut_p = 'A' AND i.dt_autorizacao IS NOT NULL AND i.dt_autorizacao::text <> ''))
	and	((nr_item_solic_compra_p = 0) or
		(nr_item_solic_compra_p > 0 AND i.nr_item_solic_compra = nr_item_solic_compra_p))
	and	coalesce(obter_se_item_sc_em_oc_contr(s.nr_solic_compra, i.nr_item_solic_compra),'N') = 'N'
	and not exists (
		select	1
		from	solic_compra_item_entrega e
		where	i.nr_solic_compra	= e.nr_solic_compra
		and	i.nr_item_solic_compra	= e.nr_item_solic_compra)
	
union all

	--Somente os itens pendentes(com saldo pendente de cotacao) que possuem programacao de entrega na solicitacao
	select	i.cd_material,
		i.cd_unidade_medida_compra,
		i.nr_item_solic_compra,
		i.ds_material_direto,
		e.qt_entrega_solicitada - (
			select	coalesce(sum(y.qt_material), 0)
			from	cot_compra_item x,
				solic_compra_item_agrup_en_v y
			where	y.nr_solic_compra = i.nr_solic_compra
			and	y.nr_item_solic_compra = i.nr_item_solic_compra
			and	x.nr_cot_compra = y.nr_cot_compra
			and	x.nr_item_cot_compra = y.nr_item_cot_compra
			and	coalesce(y.nr_item_solic_compra_entr,e.nr_item_solic_compra_entr) = e.nr_item_solic_compra_entr) - obter_qt_sc_em_ordem_sem_cot(s.nr_solic_compra, i.nr_item_solic_compra, e.dt_entrega_solicitada),
		e.dt_entrega_solicitada,
		i.ds_observacao,
		e.ds_observacao,
		i.nr_seq_proj_rec,
		e.nr_item_solic_compra_entr,
		i.vl_unit_previsto,
		i.nr_contrato,
		i.cd_paciente_soli_compra
	from	solic_compra s,
		solic_compra_item i,
		solic_compra_item_entrega e
	where	ie_consiste_cotacao_p	= 'P' 
	and	(((e.qt_entrega_solicitada - (
			select	coalesce(sum(y.qt_material), 0)
			from	cot_compra_item x,
				solic_compra_item_agrup_en_v y
			where	y.nr_solic_compra = i.nr_solic_compra
			and	y.nr_item_solic_compra = i.nr_item_solic_compra
			and	x.nr_cot_compra = y.nr_cot_compra
			and	x.nr_item_cot_compra = y.nr_item_cot_compra
			and	coalesce(y.nr_item_solic_compra_entr,e.nr_item_solic_compra_entr) = e.nr_item_solic_compra_entr)) - obter_qt_sc_em_ordem_sem_cot(s.nr_solic_compra, i.nr_item_solic_compra, e.dt_entrega_solicitada)) > 0)
	and	i.nr_solic_compra	= s.nr_solic_compra
	and	i.nr_solic_compra	= nr_solic_compra_p
	and	i.nr_solic_compra	= e.nr_solic_compra
	and	i.nr_item_solic_compra	= e.nr_item_solic_compra
	and	coalesce(i.cd_motivo_baixa::text, '') = ''
	and	coalesce(i.dt_reprovacao::text, '') = ''
	and	((ie_solic_nao_aut_p <> 'A') or
		(ie_solic_nao_aut_p = 'A' AND i.dt_autorizacao IS NOT NULL AND i.dt_autorizacao::text <> ''))
	and	((nr_item_solic_compra_p = 0) or
		(nr_item_solic_compra_p > 0 AND i.nr_item_solic_compra = nr_item_solic_compra_p))
	and	coalesce(obter_se_item_sc_em_oc_contr(s.nr_solic_compra, i.nr_item_solic_compra),'N') = 'N'
	
union all

	--Somente os itens pendentes(com saldo pendente de cotacao) que NAO possuem programacao de entrega na solicitacao
	select	i.cd_material,
		i.cd_unidade_medida_compra,
		i.nr_item_solic_compra,
		i.ds_material_direto,
		i.qt_material - (
			select	coalesce(sum(x.qt_material), 0)
			from	cot_compra_item x
			where	x.nr_solic_compra = i.nr_solic_compra
			and	x.nr_item_solic_compra = i.nr_item_solic_compra) - (select	coalesce(sum(b.qt_prevista_entrega),0)
																	   from	ordem_compra_item a,
																			ordem_compra_item_entrega b,
																		    ordem_compra c
																	  where	a.nr_ordem_compra = b.nr_ordem_compra
																		and	a.nr_item_oci = b.nr_item_oci
																		and a.nr_ordem_compra = c.nr_ordem_compra
																		and	coalesce(a.nr_cot_compra::text, '') = ''
																		and	a.nr_solic_compra = s.nr_solic_compra
																		and	a.nr_item_solic_compra = i.nr_item_solic_compra
																		and	coalesce(b.dt_cancelamento::text, '') = ''
																		and coalesce(c.nr_seq_motivo_baixa::text, '') = ''),
		dt_entrega_cotacao_w,
		i.ds_observacao,
		null,
		i.nr_seq_proj_rec,
		1,
		i.vl_unit_previsto,
		i.nr_contrato,
		i.cd_paciente_soli_compra
	from	solic_compra s,
		solic_compra_item i
	where	ie_consiste_cotacao_p	= 'P' 
	and	(((i.qt_material - (
			select	coalesce(sum(x.qt_material), 0)
			from	cot_compra_item x
			where	x.nr_solic_compra = i.nr_solic_compra
			and	x.nr_item_solic_compra = i.nr_item_solic_compra)) - (select	coalesce(sum(b.qt_prevista_entrega),0)
																	   from	ordem_compra_item a,
																			ordem_compra_item_entrega b,
																		    ordem_compra c
																	  where	a.nr_ordem_compra = b.nr_ordem_compra
																		and	a.nr_item_oci = b.nr_item_oci
																		and a.nr_ordem_compra = c.nr_ordem_compra
																		and	coalesce(a.nr_cot_compra::text, '') = ''
																		and	a.nr_solic_compra = s.nr_solic_compra
																		and	a.nr_item_solic_compra = i.nr_item_solic_compra
																		and	coalesce(b.dt_cancelamento::text, '') = ''
																		and coalesce(c.nr_seq_motivo_baixa::text, '') = '')) > 0)
	and	i.nr_solic_compra	= s.nr_solic_compra
	and	i.nr_solic_compra	= nr_solic_compra_p	
	and	coalesce(i.cd_motivo_baixa::text, '') = ''
	and	coalesce(i.dt_reprovacao::text, '') = ''
	and	((ie_solic_nao_aut_p <> 'A') or
		(ie_solic_nao_aut_p = 'A' AND i.dt_autorizacao IS NOT NULL AND i.dt_autorizacao::text <> ''))
	and	((nr_item_solic_compra_p = 0) or
		(nr_item_solic_compra_p > 0 AND i.nr_item_solic_compra = nr_item_solic_compra_p))
	and	coalesce(obter_se_item_sc_em_oc_contr(s.nr_solic_compra, i.nr_item_solic_compra),'N') = 'N'
	and not exists (
		select	1
		from	solic_compra_item_entrega e
		where	i.nr_solic_compra	= e.nr_solic_compra
		and	i.nr_item_solic_compra	= e.nr_item_solic_compra)
	order by
		nr_item_solic_compra;

c03 CURSOR FOR
SELECT	ds_titulo,
	ds_detalhe
from	solic_compra_item_detalhe
where	nr_solic_compra = nr_solic_compra_p
and	nr_item_solic_compra = nr_item_solic_compra_w;
		

BEGIN

/* Shift  + F11 = 'Regra para consistencia do item disp. mercado' */

delete from w_consist_disp_mercado
where nm_usuario = nm_usuario_p
and   cd_funcao = 915;
commit;


select	cd_estabelecimento,
	dt_solicitacao_compra,
	ds_observacao,
	cd_pessoa_solicitante
into STRICT	cd_estabelecimento_w,
	dt_solic_w,
	ds_observacao_w,
	cd_pessoa_solicitante_w
from	solic_compra
where	nr_solic_compra = nr_solic_compra_p;

begin

select	ds_observacao,
	coalesce(dt_entrega, trunc(clock_timestamp(),'dd'))
into STRICT	ds_obs_cotacao_w,
	dt_entrega_cotacao_w
from	cot_compra
where	nr_cot_compra = nr_cot_compra_p;

if (ds_obs_cotacao_w IS NOT NULL AND ds_obs_cotacao_w::text <> '') then
	ds_observacao_w := substr(ds_observacao_w || chr(13) || chr(10) || ds_obs_cotacao_w,1,4000);
end if;

ie_grava_obs_item_w	:= coalesce(obter_valor_param_usuario(915, 120, Obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w), 'N');

update	cot_compra
set	ds_observacao		= ds_observacao_w,
	cd_pessoa_solicitante	= cd_pessoa_solicitante_w,
	dt_retorno_prev		= clock_timestamp() + coalesce(obter_valor_param_usuario(915,2,Obter_perfil_ativo,wheb_usuario_pck.get_nm_usuario,wheb_usuario_pck.get_cd_estabelecimento), 3) + coalesce(obter_valor_param_usuario(915,167,Obter_perfil_ativo,wheb_usuario_pck.get_nm_usuario,wheb_usuario_pck.get_cd_estabelecimento),0)/24
where	nr_cot_compra		= nr_cot_compra_p;
exception
	when others then	
	--'erro ao atualizar cot_compra'
	CALL wheb_mensagem_pck.exibir_mensagem_abort(176653);
end;

open c01;
loop
fetch c01 into
	cd_material_w,
	cd_unidade_medida_w,
	nr_item_solic_compra_w,
	ds_material_direto_w,
	qt_material_w,
	dt_entrega_solicitada_w,
	ds_obs_item_solic_w,
	ds_obs_entrega_item_w,
	nr_seq_proj_rec_w,
	nr_item_sc_item_entr_w,
	vl_unit_previsto_w,
	nr_contrato_w,
	cd_pac_soli_compra_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin

	/* Verifica se possui evento na 'Regra para consistencia do item disp. mercado' */

	select	count(*)
	into STRICT	qt_existe_regra_disp_mer_w
	from	consiste_disp_mercado
	where	cd_evento = 'CA';

	if (qt_existe_regra_disp_mer_w > 0) then
		begin
		/* Verifica se possui evento na 'Regra para consistencia do item disp. mercado', e se o material esta disponivel no mercado */

		select  substr(obter_acao_regra_disp_mercado('CA', cd_material_w, null, cd_estabelecimento_w),1,1) ie_acao_regra
		into STRICT	ie_acao_disp_mercado_w
		;

		if (ie_acao_disp_mercado_w <> 'N') then
			begin
			CALL grava_consiste_disp_mercado( 915,
						     cd_material_w,
						     nm_usuario_p,
						     ie_acao_disp_mercado_w);
			end;
		end if;

		end;
	end if;

	if (ie_acao_disp_mercado_w in ('M', 'N')) then
		begin
		select	max(nr_item_cot_compra)
		into STRICT	nr_item_w
		from	cot_compra_item
		where	nr_cot_compra = nr_cot_compra_p;
		if (coalesce(nr_item_w::text, '') = '') then
			nr_item_w := 1;
		else
			nr_item_w := nr_item_w + 1;
		end if;
		
		select	coalesce(max(ie_regra_preco),'')
		into STRICT	ie_regra_preco_w
		from	regra_material_cotacao
		where	cd_material = cd_material_w
		and	ie_situacao = 'A'
		and	cd_estabelecimento = cd_estabelecimento_w;
		
		if (ie_grava_obs_item_w = 'S') then
			begin
			if (coalesce(ds_material_direto_w::text, '') = '') then		
				ds_material_direto_w := substr(ds_obs_item_solic_w,1,255);
			else
				ds_material_direto_w := substr(ds_material_direto_w || ' - ' || ds_obs_item_solic_w,1,255);
			end if;
			end;
		end if;
		
		BEGIN
		
		
		insert into cot_compra_item(
			nr_cot_compra,
			nr_item_cot_compra,
			cd_material,
			qt_material,
			cd_unidade_medida_compra,
			dt_atualizacao,
			dt_limite_entrega,
			nm_usuario,
			ie_situacao,
			ds_material_direto_w,
			nr_solic_compra,
			nr_item_solic_compra,
			cd_estab_item,
			ie_regra_preco,
			nr_seq_proj_rec,
			nr_item_solic_compra_entr,
			vl_unit_previsto,
			nr_contrato,
			cd_paciente_cotacao)
		values (	nr_cot_compra_p,
			nr_item_w,
			cd_material_w,
			qt_material_w,
			cd_unidade_medida_w,
			clock_timestamp(),
			dt_entrega_solicitada_w,
			nm_usuario_p,
			'A',
			ds_material_direto_w,
			nr_solic_compra_p,
			nr_item_solic_compra_w,
			cd_estabelecimento_w,
			ie_regra_preco_w,
			nr_seq_proj_rec_w,
			nr_item_sc_item_entr_w,
			vl_unit_previsto_w,
			nr_contrato_w,
			cd_pac_soli_compra_w);

		insert into cot_compra_item_entrega(
			nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_cot_compra,
			nr_item_cot_compra,
			dt_entrega,
			qt_entrega,
			ds_observacao)
		values (	nextval('cot_compra_item_entrega_seq'),
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_cot_compra_p,
			nr_item_w,
			dt_entrega_solicitada_w,
			qt_material_w,
			ds_obs_entrega_item_w);
			
		ie_inseriu_item_w := 'S';
		
		/* Campo DS_ARQUIVO_BANCO tipo BLOB. Deve usar insert direto para passar valor LONG RAW, nao Cursor */

		insert into cot_compra_anexo(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_cot_compra,
				ds_arquivo,
				ds_arquivo_banco,
				nr_item_cot_compra,
				ie_enviar,
				ie_origem,
				ie_doc_origem)
		SELECT nextval('cot_compra_anexo_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				nr_cot_compra_p,
				a.ds_arquivo,
				to_lob(a.ds_arquivo_banco),
				nr_item_w,
				'N',
				'U',
				'SC'
		from solic_compra_item_anexo a
		where	a.nr_item_solic_compra = nr_item_solic_compra_w
			and	a.nr_solic_compra = nr_solic_compra_p
			and not exists (
				SELECT	1
				from	cot_compra_anexo x
				where	x.nr_cot_compra = nr_cot_compra_p
				and	x.ds_arquivo = a.ds_arquivo);
		
		open C03;
		loop
		fetch C03 into	
			ds_titulo_w,
			ds_detalhe_w;
		EXIT WHEN NOT FOUND; /* apply on C03 */
			begin
			insert into cot_compra_item_detalhe(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_cot_compra,
				nr_item_cot_compra,
				ds_titulo,
				ds_detalhe)
			values (	nextval('cot_compra_item_detalhe_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				nr_cot_compra_p,
				nr_item_w,
				ds_titulo_w,
				ds_detalhe_w);			
			end;
		end loop;
		close C03;

		CALL gerar_itens_aceitaveis_cotacao(nr_cot_compra_p,nr_item_w,nm_usuario_p);
				
		exception
		when others then
			--'erro ao gerar cot_compra_item'
			CALL wheb_mensagem_pck.exibir_mensagem_abort(176654);
		end;


		begin
		update	solic_compra_item
		set	nr_cot_compra		= nr_cot_compra_p,
			nr_item_cot_compra	= nr_item_w
		where	nr_solic_compra		= nr_solic_compra_p
		and	nr_item_solic_compra	= nr_item_solic_compra_w
		and	((coalesce(nr_cot_compra::text, '') = '') or (nr_cot_compra IS NOT NULL AND nr_cot_compra::text <> '') and (obter_se_item_cot_compra_ativo(nr_cot_compra,nr_item_cot_compra) = 'I'));
		exception
		when others then
			--'Erro ao atualizar Solic_Compra'
			CALL wheb_mensagem_pck.exibir_mensagem_abort(176655);
		end;

		end; -- Fim if - ie_acao_disp_mercado_w  (Regra Indip. Mercado) 
	end if;
	end;
end loop;
close c01;

if (ie_inseriu_item_w = 'S') then
	
	CALL gerar_historico_solic_compra(	
			nr_solic_compra_p,
			wheb_mensagem_pck.get_texto(302814),
			wheb_mensagem_pck.get_texto(302816, 'NR_COT_COMPRA=' || nr_cot_compra_p),
			'GC',
			nm_usuario_p);
	
end if;

commit;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE grava_cot_compra_item ( nr_solic_compra_p bigint, nr_item_solic_compra_p bigint, nr_cot_compra_p bigint, nm_usuario_p text, ie_consiste_cotacao_p text, ie_solic_nao_aut_p text) FROM PUBLIC;

