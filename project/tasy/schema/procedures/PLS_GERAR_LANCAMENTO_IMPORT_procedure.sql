-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_lancamento_import ( nr_seq_lote_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE


ie_tipo_item_w			varchar(5);
ie_tipo_lanc_w			varchar(1);
vl_lancamento_w			double precision;
nr_seq_segurado_w		bigint;
nr_seq_pagador_w		bigint;
dt_referencia_w			timestamp;
dt_competencia_w		timestamp;
ie_coparticipacao_w		varchar(1);
nr_seq_tipo_lanc_item_w		pls_tipo_import_lancamento.nr_seq_tipo_lanc%type;
nr_seq_tipo_lanc_copartic_w	pls_tipo_import_lancamento.nr_seq_tipo_lanc_copartic%type;
nr_seq_tipo_lanc_w		bigint;
qt_registros_w			bigint;
nr_seq_lanc_prog_imp_w		pls_lanc_prog_importacao.nr_sequencia%type;
nr_seq_segurado_mens_w		pls_segurado_mensalidade.nr_sequencia%type;
qt_segurado_w			integer;
qt_segurado_mens_w		integer;
vl_item_w			double precision;
vl_total_lancamentos_w		double precision;

C01 CURSOR FOR
	SELECT	nr_seq_segurado,
		ie_tipo_item,
		vl_lancamento,
		nr_seq_pagador,
		nr_sequencia,
		'N' ie_coparticipacao,
		dt_competencia  --*
	from	pls_lanc_prog_importacao
	where	nr_seq_lote		= nr_seq_lote_p
	and	ie_situacao_lanc	= '3'
	and	vl_lancamento	> 0
	
union all

	SELECT	nr_seq_segurado,
		ie_tipo_item,
		vl_coparticipacao,
		nr_seq_pagador,
		nr_sequencia,
		'S' ie_coparticipacao,
		dt_competencia  --*
	from	pls_lanc_prog_importacao
	where	nr_seq_lote		= nr_seq_lote_p
	and	ie_situacao_lanc	= '3'
	and	vl_coparticipacao	> 0;

C02 CURSOR(nr_seq_pagador_pc	pls_contrato_pagador.nr_sequencia%type) FOR
	SELECT	a.nr_sequencia nr_seq_segurado
	from	pls_segurado a
	where	a.nr_seq_pagador = nr_seq_pagador_pc
	and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
	and	coalesce(a.dt_rescisao::text, '') = '';

BEGIN

select	max(b.nr_seq_tipo_lanc)
into STRICT	nr_seq_tipo_lanc_item_w
from	pls_lanc_prog_import_lote a,
	pls_tipo_import_lancamento b
where	a.nr_seq_tipo_imp_lanc	= b.nr_sequencia
and	a.nr_sequencia	= nr_seq_lote_p;

select	max(b.nr_seq_tipo_lanc_copartic)
into STRICT	nr_seq_tipo_lanc_copartic_w
from	pls_lanc_prog_import_lote a,
	pls_tipo_import_lancamento b
where	a.nr_seq_tipo_imp_lanc	= b.nr_sequencia
and	a.nr_sequencia	= nr_seq_lote_p;

select	count(1)
into STRICT	qt_registros_w
from	pls_lanc_prog_importacao
where	nr_seq_lote	= nr_seq_lote_p
and	ie_situacao_lanc	= '1';

if (qt_registros_w > 0) then
	/*Deve ser consistido as informações antes de ser gerado os lançamentos programados!*/

	CALL wheb_mensagem_pck.exibir_mensagem_abort(277565);
end if;

open C01;
loop
fetch C01 into
	nr_seq_segurado_w,
	ie_tipo_item_w,
	vl_lancamento_w,
	nr_seq_pagador_w,
	nr_seq_lanc_prog_imp_w,
	ie_coparticipacao_w,
	dt_competencia_w;--*
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	if (nr_seq_segurado_w IS NOT NULL AND nr_seq_segurado_w::text <> '') then
		select	max(a.dt_mesano_referencia)
		into STRICT	dt_referencia_w
		from	pls_mensalidade_segurado a,
			pls_mensalidade b
		where	a.nr_seq_mensalidade	= b.nr_sequencia
		and	a.nr_seq_segurado	= nr_seq_segurado_w
		and	coalesce(b.ie_cancelamento::text, '') = '';

		ie_tipo_lanc_w	:= 'B';
	elsif (nr_seq_pagador_w IS NOT NULL AND nr_seq_pagador_w::text <> '') then
		select	max(a.dt_mesano_referencia)
		into STRICT	dt_referencia_w
		from	pls_mensalidade_segurado a,
			pls_mensalidade b
		where	a.nr_seq_mensalidade	= b.nr_sequencia
		and	b.nr_seq_pagador	= nr_seq_pagador_w
		and	coalesce(b.ie_cancelamento::text, '') = '';

		ie_tipo_lanc_w	:= 'P';
	end if;

	if (dt_competencia_w IS NOT NULL AND dt_competencia_w::text <> '') then
		dt_referencia_w	:= dt_competencia_w;
	else
		dt_referencia_w	:= trunc(add_months(coalesce(dt_referencia_w,clock_timestamp()),1),'month');
	end if;


	if (ie_tipo_item_w = '20') then
		if (ie_coparticipacao_w = 'S') then
			nr_seq_tipo_lanc_w	:= nr_seq_tipo_lanc_copartic_w;
		else
			nr_seq_tipo_lanc_w	:= nr_seq_tipo_lanc_item_w;
		end if;

		if (coalesce(nr_seq_tipo_lanc_w::text, '') = '') then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(266730);
		end if;

		insert	into	pls_lancamento_mensalidade(	nr_sequencia, ie_tipo_item, dt_ocorrencia,
				dt_mes_competencia, nr_seq_motivo, cd_estabelecimento,
				dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
				nr_seq_segurado, nr_seq_pagador, vl_lancamento,
				ds_observacao, ie_situacao)
			values (	nextval('pls_lancamento_mensalidade_seq'), ie_tipo_item_w, clock_timestamp(),
				dt_referencia_w, nr_seq_tipo_lanc_w, cd_estabelecimento_p,
				clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p,
				nr_seq_segurado_w, nr_seq_pagador_w, vl_lancamento_w,
				'Lançamento gerado por importação', 'A');
	elsif (nr_seq_segurado_w IS NOT NULL AND nr_seq_segurado_w::text <> '') then
		insert into pls_segurado_mensalidade(
			nr_sequencia, 		nr_seq_segurado, 	cd_estabelecimento,
			dt_atualizacao,		nm_usuario, 		dt_atualizacao_nrec,
			nm_usuario_nrec, 	ie_situacao, 		dt_referencia,
			vl_item, 		ie_tipo_item, 		ie_acao_desfazer,
			ie_tipo_lanc)
		values (	nr_seq_segurado_mens_w, nr_seq_segurado_w,	cd_estabelecimento_p,
			clock_timestamp(), 		nm_usuario_p,		clock_timestamp(),
			nm_usuario_p, 		'A', 			dt_referencia_w,
			vl_lancamento_w,	ie_tipo_item_w, 	'A',
			ie_tipo_lanc_w);
	elsif (nr_seq_pagador_w IS NOT NULL AND nr_seq_pagador_w::text <> '') then
		select	count(1)
		into STRICT	qt_segurado_mens_w
		from	pls_segurado a
		where	a.nr_seq_pagador = nr_seq_pagador_w
		and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
		and (coalesce(a.dt_rescisao::text, '') = '' or a.dt_rescisao > dt_referencia_w);

		if (qt_segurado_mens_w > 0) then
			qt_segurado_w 		:= 0;
			vl_total_lancamentos_w 	:= 0;

			for r_c02_w in C02(nr_seq_pagador_w) loop
				qt_segurado_w := qt_segurado_w + 1;

				vl_item_w	:= dividir_sem_round(vl_lancamento_w,qt_segurado_mens_w);

				select	nextval('pls_segurado_mensalidade_seq')
				into STRICT	nr_seq_segurado_mens_w
				;

				insert into pls_segurado_mensalidade(
					nr_sequencia, 		nr_seq_segurado, 	cd_estabelecimento,
					dt_atualizacao,		nm_usuario, 		dt_atualizacao_nrec,
					nm_usuario_nrec, 	ie_situacao, 		dt_referencia,
					vl_item, 		ie_tipo_item, 		ie_acao_desfazer,
					ie_tipo_lanc)
				values (	nr_seq_segurado_mens_w, r_c02_w.nr_seq_segurado,cd_estabelecimento_p,
					clock_timestamp(), 		nm_usuario_p,		clock_timestamp(),
					nm_usuario_p, 		'A', 			dt_referencia_w,
					vl_item_w,		ie_tipo_item_w, 	'A',
					ie_tipo_lanc_w);

				/* Se for o último fazer ajuste de arredondamento */

				if (qt_segurado_w = qt_segurado_mens_w) then
					update	pls_segurado_mensalidade
					set	vl_item		= vl_item + (vl_lancamento_w - vl_total_lancamentos_w)
					where	nr_sequencia	= nr_seq_segurado_mens_w;
				end if;

				vl_total_lancamentos_w := vl_total_lancamentos_w + vl_item_w;
			end loop;
		end if;
	end if;

	update	pls_lanc_prog_importacao
	set	ie_situacao_lanc	= '4',
		nm_usuario		= nm_usuario_p,
		dt_atualizacao		= clock_timestamp()
	where	nr_sequencia		= nr_seq_lanc_prog_imp_w;

	dt_referencia_w		:= clock_timestamp();
	nr_seq_pagador_w	:= null;
	nr_seq_segurado_w	:= null;
	ie_tipo_lanc_w		:= null;
	end;
end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_lancamento_import ( nr_seq_lote_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

