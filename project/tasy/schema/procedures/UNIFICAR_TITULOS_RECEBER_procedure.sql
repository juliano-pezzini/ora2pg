-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE unificar_titulos_receber ( nm_usuario_p text, ds_lista_titulos_p text, cd_cgc_p text, cd_pessoa_fisica_p text, nr_titulo_gerado_p INOUT text, ie_acao_p text, ie_origem_titulo_p text, nr_seq_trans_fin_baixa_p text) AS $body$
DECLARE


/* ie_acao_p
'U'	unificar
'D'	desfazer unificacao
*/
ds_observacao_titulo_gerado_w	titulo_receber.ds_observacao_titulo%type;
ds_observacao_titulo_w titulo_receber.ds_observacao_titulo%type;
ds_obs_ed_titulo_w titulo_receber.ds_observacao_titulo%type;
ds_lista_titulos_w		varchar(4000);
cd_cgc_w		varchar(50);
cd_pessoa_fisica_w	varchar(50);
cd_conta_contabil_w	varchar(20);
ie_cancelar_tit_w		varchar(10);
ie_situacao_w		varchar(1);
ie_transf_classif_w		varchar(1);
ie_grava_origem_w		varchar(1);
vl_total_w		double precision := 0;
vl_saldo_titulo_w		double precision := 0;
vl_total_juros_w		double precision := 0;
vl_saldo_juros_w		double precision := 0;
vl_total_multa_w		double precision := 0;
vl_saldo_multa_w		double precision := 0;
vl_total_desconto_w	double precision := 0;
vl_total_saldo_w		double precision := 0;
vl_titulo_w		double precision := 0;
vl_original_w		double precision := 0;
vl_classificacao_w		double precision := 0;
vl_desconto_w		double precision := 0;
nr_titulo_w		bigint;
nr_titulo_dest_w		bigint;
cd_estabelecimento_w	bigint;
cd_estab_financeiro_w	bigint;
nr_titulo_classif_w		bigint;
nr_seq_liq_w		bigint;
cd_conta_financ_w		bigint;
nr_seq_produto_w		bigint;
nr_seq_trans_fin_baixa_w	bigint;
nr_interno_conta_w		bigint;
nr_atendimento_w		bigint;
cd_centro_custo_w		integer;
nr_seq_classif_w		integer;
dt_recebimento_w		timestamp;
nr_seq_alt_valor_w		alteracao_valor.nr_sequencia%type;
nr_seq_alt_valor_ww	alteracao_valor.nr_sequencia%type;
ie_permite_classe_tf_dif_w	varchar(1);
qt_classes_w				bigint;		
qt_transacao_financeira_w	bigint;
ie_gerar_classe_tf_dif_w	varchar(1) := 'N';
nr_seq_trans_fin_contab_w	titulo_receber.nr_seq_trans_fin_contab%type;
nr_seq_classe_w				titulo_receber.nr_seq_classe%type;
cd_tipo_receb_unific_w    parametro_contas_receber.cd_tipo_receb_unific%type;
cd_tipo_taxa_juro_w     titulo_receber.cd_tipo_taxa_juro%type;
cd_tipo_taxa_multa_w     titulo_receber.cd_tipo_taxa_multa%type;
tx_juros_w              titulo_receber.tx_juros%type;
tx_multa_w              titulo_receber.tx_multa%type;
ie_origem_titulo_w      titulo_receber.ie_origem_titulo%type;
cd_portador_w           titulo_receber.cd_portador%type;
cd_tipo_portador_w     titulo_receber.cd_tipo_portador%type;

C01 CURSOR FOR
	SELECT	nr_titulo,
		cd_estabelecimento,
		cd_estab_financeiro,
		vl_titulo,
		vl_saldo_titulo,
		vl_saldo_juros,
		vl_saldo_multa,
		ds_observacao_titulo
	from	titulo_receber
	where	' ' || ds_lista_titulos_w || ' ' like '% ' || nr_titulo || ' %'
	and	(ds_lista_titulos_p IS NOT NULL AND ds_lista_titulos_p::text <> '');

C02 CURSOR FOR
	SELECT	a.nr_titulo,
		a.ie_situacao
	from	titulo_receber a
	where	' ' || ds_lista_titulos_w || ' ' like '% ' || a.nr_titulo_dest || ' %'
	and	(a.nr_titulo_dest IS NOT NULL AND a.nr_titulo_dest::text <> '')
	and	(ds_lista_titulos_p IS NOT NULL AND ds_lista_titulos_p::text <> '');


C03 CURSOR FOR
	SELECT	a.nr_titulo,
		a.vl_original,
		a.cd_conta_financ,
		a.cd_centro_custo,
		a.cd_conta_contabil,
		a.nr_seq_produto,
		a.vl_classificacao,
		a.vl_desconto
	from	titulo_receber_classif a
	where	' ' || ds_lista_titulos_w || ' ' like '% ' || a.nr_titulo || ' %'
	and	(ds_lista_titulos_p IS NOT NULL AND ds_lista_titulos_p::text <> '');


BEGIN
ie_cancelar_tit_w := obter_param_usuario(801, 103, obter_perfil_ativo, nm_usuario_p, 0, ie_cancelar_tit_w);
ie_transf_classif_w := obter_param_usuario(801, 132, obter_perfil_ativo, nm_usuario_p, 0, ie_transf_classif_w);
ie_grava_origem_w := obter_param_usuario(801, 171, obter_perfil_ativo, nm_usuario_p, 0, ie_grava_origem_w);
ie_permite_classe_tf_dif_w := obter_param_usuario(801, 210, obter_perfil_ativo, nm_usuario_p, 0, ie_permite_classe_tf_dif_w);

if (coalesce(length(ds_lista_titulos_p),0) > 4000) then
	-- A quantidade de titulos selecionados para esta unificacao ultrapassa o limite maximo. Favor dividir esta unificacao em mais processos.
	CALL wheb_mensagem_pck.exibir_mensagem_abort(495175);
end if;

ds_lista_titulos_w	:= ' ' || replace(ds_lista_titulos_p, ',', ' ') || ' ';

if (coalesce(ie_acao_p, 'U') = 'U') then
	ds_observacao_titulo_gerado_w	:= Wheb_mensagem_pck.get_texto(303972) || ' ';

	select	sum(vl_titulo),
		max(cd_estabelecimento),
		max(cd_estab_financeiro),
		sum(vl_saldo_titulo),
		sum(vl_saldo_juros),
		sum(vl_saldo_multa),
		max(nr_seq_trans_fin_baixa),
		max(nr_interno_conta),
		max(nr_atendimento)
	into STRICT	vl_total_w,
		cd_estabelecimento_w,
		cd_estab_financeiro_w,
		vl_total_saldo_w,
		vl_total_juros_w,
		vl_total_multa_w,
		nr_seq_trans_fin_baixa_w,
		nr_interno_conta_w,
		nr_atendimento_w
	from	titulo_receber
	where	' ' || ds_lista_titulos_w || ' ' like '% ' || nr_titulo || ' %'
	and	(ds_lista_titulos_p IS NOT NULL AND ds_lista_titulos_p::text <> '');

	select	max(cd_tipo_receb_unific)
	into STRICT	cd_tipo_receb_unific_w
	from	parametro_contas_receber
	where	cd_estabelecimento = cd_estabelecimento_w;

	/*AAMFIRMO 21/10/2016 OS 1232323*/

	if (coalesce(ie_permite_classe_tf_dif_w,'S') = 'N') then
			
			/*Verificar se os titulos possuem transacoes ou classes diferentes. Se for */

			select  count(distinct nr_seq_classe),
					count(distinct nr_seq_trans_fin_contab),
					max(nr_seq_classe),
					max(nr_seq_trans_fin_contab)
			into STRICT	qt_classes_w,
					qt_transacao_financeira_w,
					nr_seq_classe_w,
					nr_seq_trans_fin_contab_w
			from	titulo_receber
			where	' ' || ds_lista_titulos_w || ' ' like '% ' || nr_titulo || ' %'
			and		(ds_lista_titulos_p IS NOT NULL AND ds_lista_titulos_p::text <> '');
			
			/*Se todos os titulos da unficacao possuirem a mesma classe e tf contabil, entao essa informacao no titulo gerado na unificacao.*/

			if ( (qt_classes_w = 1) or (qt_classes_w = 0) ) and ( (qt_transacao_financeira_w = 1) or (qt_transacao_financeira_w = 0) ) then
				ie_gerar_classe_tf_dif_w := 'S';
			else
				ie_gerar_classe_tf_dif_w := 'N';
				CALL wheb_mensagem_pck.exibir_mensagem_abort(692397);	
			end if;
	
	end if;

	select CASE WHEN count(distinct a.cd_tipo_taxa_juro)=1 THEN max(a.cd_tipo_taxa_juro)  ELSE null END ,
		CASE WHEN count(distinct a.cd_tipo_taxa_multa)=1 THEN max(a.cd_tipo_taxa_multa)  ELSE null END ,
		CASE WHEN count(distinct a.tx_juros)=1 THEN max(a.tx_juros)  ELSE null END ,
		CASE WHEN count(distinct a.tx_multa)=1 THEN max(a.tx_multa)  ELSE null END ,
		CASE WHEN count(distinct a.ie_origem_titulo)=1 THEN max(a.ie_origem_titulo)  ELSE null END ,
		CASE WHEN count(distinct a.cd_portador)=1 THEN max(a.cd_portador)  ELSE null END ,
		CASE WHEN count(distinct a.cd_tipo_portador)=1 THEN max(a.cd_tipo_portador)  ELSE null END
	into STRICT cd_tipo_taxa_juro_w,
		cd_tipo_taxa_multa_w,
		tx_juros_w,
		tx_multa_w,
		ie_origem_titulo_w,
		cd_portador_w,
		cd_tipo_portador_w 
	from	titulo_receber a
	where	' ' || ds_lista_titulos_w || ' ' like '% ' || a.nr_titulo || ' %'	
	and	(ds_lista_titulos_p IS NOT NULL AND ds_lista_titulos_p::text <> '');

	if (vl_total_w > 0) then
		select	nextval('titulo_seq')
		into STRICT	nr_titulo_dest_w
		;
		
		if (coalesce(ie_grava_origem_w, 'N') = 'N') then
			nr_interno_conta_w 	:= null;
			nr_atendimento_w	:= null;
		end if;

		insert	into titulo_receber(cd_cgc,
			cd_estabelecimento,
			cd_estab_financeiro,
			cd_moeda,
			cd_pessoa_fisica,
			cd_portador,
			cd_tipo_portador,
			cd_tipo_taxa_juro,
			cd_tipo_taxa_multa,
			dt_atualizacao,
			dt_emissao,
			dt_pagamento_previsto,
			dt_vencimento,
			ie_origem_titulo,
			ie_situacao,
			ie_tipo_emissao_titulo,
			ie_tipo_inclusao,
			ie_tipo_titulo,
			nm_usuario,
			nr_titulo,
			tx_desc_antecipacao,
			tx_juros,
			tx_multa,
			vl_saldo_juros,
			vl_saldo_multa,
			vl_saldo_titulo,
			vl_titulo,
			nr_seq_trans_fin_baixa,
			nr_interno_conta,
			nr_atendimento,
			nr_seq_classe, /*AAMFIRMO 21/10/2016 OS 1232323*/
			nr_seq_trans_fin_contab) /*AAMFIRMO 21/10/2016 OS 1232323*/
		values (cd_cgc_p,
			cd_estabelecimento_w,
			cd_estab_financeiro_w,
			1,
			cd_pessoa_fisica_p,
			coalesce(cd_portador_w,0),
			coalesce(cd_tipo_portador_w,0),
			coalesce(cd_tipo_taxa_juro_w,2),
			coalesce(cd_tipo_taxa_multa_w,2),
			clock_timestamp(),
			clock_timestamp(),
			clock_timestamp(),
			clock_timestamp(),
			coalesce(coalesce(ie_origem_titulo_p,ie_origem_titulo_w),0),
			1,
			1,
			'2',
			'1',
			nm_usuario_p,
			nr_titulo_dest_w,
			0,
			coalesce(tx_juros_w,0),
			coalesce(tx_multa_w,0),
			vl_total_juros_w,
			vl_total_multa_w,
			vl_total_saldo_w,
			vl_total_saldo_w,
			coalesce(nr_seq_trans_fin_baixa_p, nr_seq_trans_fin_baixa_w),
			nr_interno_conta_w,
			nr_atendimento_w,
			CASE WHEN ie_gerar_classe_tf_dif_w='S' THEN nr_seq_classe_w  ELSE null END ,
			CASE WHEN ie_gerar_classe_tf_dif_w='S' THEN nr_seq_trans_fin_contab_w  ELSE null END  );

		nr_titulo_gerado_p	:= nr_titulo_dest_w;
	end if;

	if (coalesce(ie_transf_classif_w, 'N') = 'S') then
		open C03;
		loop
		fetch C03 into
			nr_titulo_classif_w,
			vl_original_w,
			cd_conta_financ_w,
			cd_centro_custo_w,
			cd_conta_contabil_w,
			nr_seq_produto_w,
			vl_classificacao_w,
			vl_desconto_w;
		EXIT WHEN NOT FOUND; /* apply on C03 */
			begin
			select	max(a.nr_sequencia)
			into STRICT	nr_seq_classif_w
			from	titulo_receber_classif a
			where	a.nr_titulo 	= nr_titulo_dest_w;

			insert	into titulo_receber_classif(nr_sequencia,
				nr_titulo,
				dt_atualizacao,
				nm_usuario,
				vl_original,
				cd_conta_financ,
				cd_centro_custo,
				cd_conta_contabil,
				nr_seq_produto,
				vl_classificacao,
				vl_desconto)
			values (coalesce(nr_seq_classif_w,0) + 1,
				nr_titulo_dest_w,
				clock_timestamp(),
				nm_usuario_p,
				vl_original_w,
				cd_conta_financ_w,
				cd_centro_custo_w,
				cd_conta_contabil_w,
				nr_seq_produto_w,
				vl_classificacao_w,
				vl_desconto_w);
			end;
		end loop;
		close C03;
	end if;

	open C01;
	loop
	fetch C01 into
		nr_titulo_w,
		cd_estabelecimento_w,
		cd_estab_financeiro_w,
		vl_titulo_w,
		vl_saldo_titulo_w,
		vl_saldo_juros_w,
		vl_saldo_multa_w,
		ds_observacao_titulo_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		update	titulo_receber
		set	nr_titulo_dest	= nr_titulo_dest_w
		where	nr_titulo	= nr_titulo_w;

		if (coalesce(ie_cancelar_tit_w,'S') = 'S') then
			CALL baixa_titulo_receber(	cd_estabelecimento_w,
						coalesce(cd_tipo_receb_unific_w,6),
						nr_titulo_w,
						null,
						vl_saldo_titulo_w,
						clock_timestamp(),
						nm_usuario_p,
						0,
						null,
						null,
						0,
						0);
			CALL atualizar_saldo_tit_rec(nr_titulo_w,
						nm_usuario_p);
		elsif (ie_cancelar_tit_w = 'N') then
			CALL cancelar_titulo_receber(nr_titulo_w,
						nm_usuario_p,
						'S',
						clock_timestamp());
		elsif (ie_cancelar_tit_w = 'T') then
			/*AAMFIRMO OS 1231770 - Se for parametrizdo para Transferir, chamar essa nova rotina e nao a de cancelar.*/

			CALL transferir_titulo_receber( nr_titulo_w,
									   'N', -- IE_COMMIT_P Nao, pois o commit vai ocorrer nessa proc, no fim.
									   clock_timestamp(),
									   nm_usuario_p);
			/*
			cancelar_titulo_receber(nr_titulo_w,
						nm_usuario_p,
						'S',
						sysdate);

			update 	titulo_receber
			set	ie_situacao	= '5'
			where	nr_titulo 	= nr_titulo_w;*/
		end if;

		if (coalesce(ds_obs_ed_titulo_w::text, '') = '') then
      ds_obs_ed_titulo_w	:= nr_titulo_w;
    else
      ds_obs_ed_titulo_w	:= ds_obs_ed_titulo_w || ', ' || nr_titulo_w;
    end if;

		update	titulo_receber
		set 	ds_observacao_titulo	= substr(ds_observacao_titulo_w || '  ' ||Wheb_mensagem_pck.get_texto(303973,'NR_TITULO_DEST_W=' || nr_titulo_dest_w),1,4000)
		where	nr_titulo		= nr_titulo_w;
    end;
	end loop;
	close C01;

	update	titulo_receber
	set	ds_observacao_titulo	= Substr(ds_observacao_titulo_gerado_w || ds_obs_ed_titulo_w,1,4000)
	where	nr_titulo		= nr_titulo_dest_w;
elsif (ie_acao_p = 'D') then

	open C02;
	loop
	fetch C02 into
		nr_titulo_w,
		ie_situacao_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin

		if (ie_situacao_w	= '3') then
			CALL desfazer_cancelamento_titulo(	nr_titulo_w,
							nm_usuario_p);
		elsif (ie_situacao_w = '2') then
			select	max(a.nr_sequencia),
				max(a.dt_recebimento)
			into STRICT	nr_seq_liq_w,
				dt_recebimento_w
			from	titulo_receber_liq a
			where	a.nr_titulo	= nr_titulo_w;

			CALL estornar_tit_receber_liq(nr_titulo_w,
						nr_seq_liq_w,
						dt_recebimento_w,
						nm_usuario_p,
						'N',
						Wheb_mensagem_pck.get_texto(303975),
						'S');

		elsif (ie_situacao_w = '5') then
		
			select	max(a.nr_sequencia)
			into STRICT	nr_seq_alt_valor_w
			from	alteracao_valor a
			where   a.nr_titulo = nr_titulo_w;
			
			select	coalesce(max(nr_sequencia),0) + 1
			into STRICT	nr_seq_alt_valor_ww
			from	alteracao_valor
			where	nr_titulo	= nr_titulo_w;

			if (nr_seq_alt_valor_w IS NOT NULL AND nr_seq_alt_valor_w::text <> '') then	
				insert into alteracao_valor(
					nr_titulo,
					ds_observacao,
					nr_sequencia,
					dt_alteracao,
					vl_anterior,
					vl_alteracao,
					cd_motivo,
					cd_moeda,
					ie_aumenta_diminui,
					dt_atualizacao,
					nm_usuario,
					nr_lote_contabil,
					nr_seq_trans_fin)
				SELECT	nr_titulo,
					Wheb_mensagem_pck.get_texto(303976),
					nr_seq_alt_valor_ww,
					clock_timestamp(),
					vl_anterior,
					vl_alteracao,
					cd_motivo,
					cd_moeda,
					'A',
					clock_timestamp(),
					nm_usuario_p,
					nr_lote_contabil,
					nr_seq_trans_fin
				from	alteracao_valor a
				where   nr_sequencia  = nr_seq_alt_valor_w
				and	nr_titulo     = nr_titulo_w;
			end if;

			update	titulo_receber
			set 	ie_situacao	= '1'
			where	nr_titulo	= nr_titulo_w;
			
			CALL atualizar_saldo_tit_rec(nr_titulo_w,
						nm_usuario_p);
		end if;

		update	titulo_receber
		set	nr_titulo_dest		 = NULL,
			ds_observacao_titulo	 = NULL
		where	nr_titulo		= nr_titulo_w;
		end;
	end loop;
	close C02;

	select	max(a.cd_estabelecimento),
		max(a.vl_saldo_titulo),
		max(a.nr_titulo)
	into STRICT	cd_estabelecimento_w,
		vl_saldo_titulo_w,
		nr_titulo_w
	from	titulo_receber a
	where	' ' || ds_lista_titulos_w || ' ' like '% ' || a.nr_titulo || ' %'
	and	(ds_lista_titulos_p IS NOT NULL AND ds_lista_titulos_p::text <> '');

	if (coalesce(ie_cancelar_tit_w, 'S') = 'S') then
		CALL baixa_titulo_receber(	cd_estabelecimento_w,
					6,
					nr_titulo_w,
					null,
					vl_saldo_titulo_w,
					clock_timestamp(),
					nm_usuario_p,
					0,
					null,
					null,
					0,
					0);
		CALL atualizar_saldo_tit_rec(nr_titulo_w,
					nm_usuario_p);
	else
		CALL cancelar_titulo_receber(nr_titulo_w,
					nm_usuario_p,
					'S',
					clock_timestamp());
	end if;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE unificar_titulos_receber ( nm_usuario_p text, ds_lista_titulos_p text, cd_cgc_p text, cd_pessoa_fisica_p text, nr_titulo_gerado_p INOUT text, ie_acao_p text, ie_origem_titulo_p text, nr_seq_trans_fin_baixa_p text) FROM PUBLIC;

