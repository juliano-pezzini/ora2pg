-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE alterar_status_cig (nr_atendimento_p bigint, nr_seq_glicemia_p bigint, nr_cig_atend_p bigint, ie_status_cig_p text, nm_usuario_p text) AS $body$
DECLARE

 
nr_seq_cig_w 		bigint;
ie_evento_w		smallint;
nr_seq_evento_w		bigint;
ie_status_w		varchar(1);
nr_seq_glic_w		bigint;
cd_estabelecimento_w	bigint;
ie_glicemia_adep_w	varchar(10);
qt_hgt_w		integer;
nr_prescricao_w		bigint;
nr_seq_proced_w		integer;


BEGIN 
if (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') and (nr_seq_glicemia_p IS NOT NULL AND nr_seq_glicemia_p::text <> '') and (nr_cig_atend_p IS NOT NULL AND nr_cig_atend_p::text <> '') and (ie_status_cig_p IS NOT NULL AND ie_status_cig_p::text <> '') and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') then 
	 
	select	max(cd_estabelecimento) 
	into STRICT	cd_estabelecimento_w 
	from	atendimento_paciente 
	where	nr_atendimento	= nr_atendimento_p;
	 
	select	coalesce(max(ie_glicemia_adep),'N') 
	into STRICT	ie_glicemia_adep_w 
	from	parametro_medico 
	where	cd_estabelecimento	= cd_estabelecimento_w;
	/* alterar status cig */
 
	if (ie_status_cig_p <> 'RT') then 
		update	atendimento_cig 
		set	ie_status_cig = ie_status_cig_p 
		where	nr_atendimento = nr_atendimento_p 
		and	nr_seq_glicemia = nr_seq_glicemia_p 
		and	nr_cig_atend = nr_cig_atend_p;
 
		/* obter sequencia evento */
 
		select	coalesce(max(nr_sequencia),0), 
			max(qt_hgt) 
		into STRICT	nr_seq_cig_w, 
			qt_hgt_w 
		from	atendimento_cig 
		where	nr_atendimento = nr_atendimento_p 
		and	nr_seq_glicemia = nr_seq_glicemia_p;
 
		/* validar evento */
 
		if (nr_seq_cig_w > 0) then 
			/* obter evento */
 
			if (ie_status_cig_p = 'R') then 
				ie_evento_w := 6;
			elsif (ie_status_cig_p = 'I') then 
				ie_evento_w := 4;
			elsif (ie_status_cig_p = 'T') then 
				ie_evento_w := 5;
			end if;
		end if;
 
		/* gerar evento */
 
		CALL gerar_alteracao_cig(nr_seq_cig_w, ie_evento_w, ' ', nm_usuario_p);
		 
		if (ie_status_cig_p	= 'T') then 
			select 	coalesce(max(nr_prescricao),0), 
					coalesce(max(nr_seq_procedimento),0) 
			into STRICT 	nr_prescricao_w, 
					nr_seq_proced_w 
			from 	prescr_proc_hor a, 
					atendimento_cig b 
			where 	a.nr_sequencia 	= b.nr_seq_horario 
			and 	b.nr_atendimento 	= nr_atendimento_p 
			and		b.nr_seq_glicemia 	= nr_seq_glicemia_p 
			and		b.nr_cig_atend 	= nr_cig_atend_p;
			 
			if (nr_prescricao_w > 0) and (nr_seq_proced_w > 0) then			 
				CALL suspender_horarios_pendentes('G', nr_atendimento_p, nr_prescricao_w, nr_seq_proced_w, nm_usuario_p);
			end if;
		end if;
 
		/* atualizar glicemia atendimento */
 
		/* 
		select	nvl(max(nr_seq_glicemia),0) 
		into	nr_seq_glic_w 
		from	atendimento_cig 
		where	nr_sequencia = nr_seq_cig_w; 
		*/
 
		nr_seq_glic_w := nr_seq_glicemia_p;
 
		if (nr_seq_glic_w > 0) then 
			update	atend_glicemia 
			set	ie_status_glic	= ie_status_cig_p, 
				dt_termino_glic	= CASE WHEN ie_status_cig_p='T' THEN clock_timestamp()  ELSE null END , 
				cd_pf_term_glic	= CASE WHEN ie_status_cig_p='T' THEN substr(obter_dados_usuario_opcao(nm_usuario_p,'C'),1,10)  ELSE null END  
			where	nr_sequencia		= nr_seq_glic_w;
		end if;
		 
		 
		if (ie_glicemia_adep_w	= 'S') and (ie_status_cig_p	= 'T') then 
			insert into atendimento_sinaL_vital(	nr_sequencia,	 
								nr_atendimento, 
								dt_sinal_vital, 
								dt_atualizacao, 
								nm_usuario, 
								QT_GLICEMIA_CAPILAR, 
								ie_situacao, 
								ie_pressao, 
								dt_liberacao, 
								CD_PESSOA_FISICA) 
					values (	nextval('atendimento_sinal_vital_seq'), 
								nr_atendimento_p, 
								clock_timestamp(), 
								clock_timestamp(), 
								nm_usuario_p, 
								qt_hgt_w, 
								'A', 
								'D', 
								clock_timestamp(), 
								obter_dados_usuario_opcao(nm_usuario_p,'C'));
								 
		end if;
	else 
		/* obter ultimo status */
 
		select	coalesce(max(b.nr_sequencia),0) 
		into STRICT	nr_seq_evento_w 
		from	atendimento_cig_evento b, 
			atendimento_cig a 
		where	b.nr_seq_cig = a.nr_sequencia 
		and	a.nr_atendimento = nr_atendimento_p 
		and	a.nr_seq_glicemia = nr_seq_glicemia_p 
		and	a.nr_cig_atend = nr_cig_atend_p 
		and	b.ie_evento in (3,4,6);
 
		/* validar evento */
 
		if (nr_seq_evento_w > 0) then 
			select	CASE WHEN ie_evento=3 THEN 'N' WHEN ie_evento=4 THEN 'I' WHEN ie_evento=6 THEN 'R'  ELSE 'X' END  
			into STRICT	ie_status_w 
			from	atendimento_cig_evento 
			where	nr_sequencia = nr_seq_evento_w;
		 
			/* validar status */
 
			if (ie_status_w in ('N','I','R')) then 
				update	atendimento_cig 
				set	ie_status_cig = ie_status_w 
				where	nr_atendimento = nr_atendimento_p 
				and	nr_seq_glicemia = nr_seq_glicemia_p 
				and	nr_cig_atend = nr_cig_atend_p;
 
				/* obter sequencia evento */
 
				select	coalesce(max(nr_sequencia),0) 
				into STRICT	nr_seq_cig_w 
				from	atendimento_cig 
				where	nr_atendimento = nr_atendimento_p 
				and	nr_seq_glicemia = nr_seq_glicemia_p;
 
				/* gerar evento */
 
				CALL gerar_alteracao_cig(nr_seq_cig_w, 10, ' ', nm_usuario_p);
 
				/* atualizar glicemia atendimento */
 
				/* 
				select	nvl(max(nr_seq_glicemia),0) 
				into	nr_seq_glic_w 
				from	atendimento_cig 
				where	nr_sequencia = nr_seq_cig_w; 
				*/
 
				nr_seq_glic_w := nr_seq_glicemia_p;
 
				if (nr_seq_glic_w > 0) then 
					update	atend_glicemia 
					set	ie_status_glic	= ie_status_w, 
						dt_termino_glic	 = NULL, 
						cd_pf_term_glic	 = NULL 
					where	nr_sequencia		= nr_seq_glic_w;
				end if;
			end if;
		end if;
	end if;
end if;
 
if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE alterar_status_cig (nr_atendimento_p bigint, nr_seq_glicemia_p bigint, nr_cig_atend_p bigint, ie_status_cig_p text, nm_usuario_p text) FROM PUBLIC;

