-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_atualiza_valor_pacote ( nr_sequencia_p bigint, ie_tipo_p text, nm_usuario_p text, ie_atualiza_p text, ie_log_p text, ie_recalcular_conta_p text default 'N') AS $body$
DECLARE


/*
ie_tipo_p       = C - Contas Medicas
ie_tipo_p       = G - Autorizacoes
ie_tipo_p       = COMPL - Pedido de complemento de autorizacao
ie_tipo_p       = R - Requisicao
ie_tipo_p       = E  - Execucao
*/
ds_observacao_log_w   varchar(4000);
ds_retorno_w      varchar(255);
cd_guia_w     varchar(20);
cd_medico_solicitante_w   varchar(20);
cd_medico_conta_w   varchar(20);
vl_servico_w      varchar(14);
ie_medico_solic_coope_w   varchar(10);
ie_carater_internacao_w   varchar(10);
ie_medico_exec_coope_w    varchar(10);
cd_porte_anestesico_w   varchar(10);
ie_status_conta_proc_w    varchar(10);
ie_calculo_pacote_w   varchar(3);
ie_origem_conta_w   varchar(3);
ie_tipo_protocolo_w   varchar(3);
ie_tipo_acomodacao_ptu_w  varchar(2);
ie_tipo_guia_w      varchar(2);
ie_internado_w      varchar(1) := 'N';
ie_cobranca_prevista_w    varchar(1);
ie_tipo_intercambio_w   varchar(1);
ie_tipo_conta_w     varchar(1);
ie_pagamento_cobranca_w   varchar(1);
ie_taxa_w     varchar(1);
tx_proc_regra_qtde_w    double precision;
tx_med_regra_qtde_w   double precision;
tx_co_regra_qtde_w    double precision;
tx_procedimento_w   double precision;
tx_medico_w     double precision;
tx_custo_operacional_w    double precision;
tx_material_w     double precision;
tx_anestesista_w    double precision;
tx_auxiliares_w     double precision;
vl_calc_hi_util_w   double precision;
tx_item_w     double precision;
tx_intercambio_w    double precision;
vl_pacote_w     double precision  := 0;
vl_medico_w     double precision  := 0;
vl_anestesista_w    double precision  := 0;
vl_auxiliares_w     double precision  := 0;
vl_custo_operacional_w    double precision  := 0;
vl_materiais_w      double precision  := 0;
vl_total_procedimento_w   double precision  := 0;
vl_calculado_ant_w    double precision;
vl_pacote_unitario_w    double precision;
vl_pacote_total_w   double precision;
cd_procedimento_w   bigint;
cd_proc_pacote_w    bigint;
nr_seq_conta_w      bigint;
ie_origem_proced_w    bigint;
nr_seq_prestador_conta_w  bigint;
nr_seq_prestador_prot_w   bigint;
nr_seq_prestador_w    bigint;
nr_seq_protocolo_w    bigint;
nr_seq_pacote_w     bigint;
nr_seq_tipo_acomodacao_w  bigint;
ie_origem_pacote_w    bigint;
nr_seq_guia_w     bigint;
nr_seq_acomod_pacote_w    bigint;
nr_seq_regra_qtde_exec_w  bigint;
nr_seq_regra_tipo_exec_w  bigint;
nr_seq_requisicao_w   bigint;
nr_seq_plano_w      bigint;
nr_seq_segurado_w   bigint;
nr_contrato_w     bigint;
nr_seq_regra_pacote_w   bigint;
nr_seq_intercambio_w    bigint;
nr_seq_classificacao_prest_w  bigint;
nr_seq_prestador_solic_w  bigint;
nr_seq_regra_cooperado_w  bigint;
ie_ato_cooperado_w    bigint;
nr_seq_regra_w      bigint;
nr_seq_fatura_w     bigint;
qt_dia_proced_receb_w   bigint;
qt_procedimento_w   	pls_conta_proc.qt_procedimento%type;
tx_adm_w      double precision;
cd_edicao_amb_w     integer;
cd_estabelecimento_w    smallint;
dt_preco_w      timestamp;
dt_conta_guia_w     timestamp;
dt_procedimento_w   timestamp  := null;
dt_alta_w     timestamp;
cd_moeda_autogerado_w   smallint;
ie_calculo_coparticipacao_w varchar(1);
nr_seq_regra_copartic_w   bigint;
vl_copartic_w     double precision  := 0;
nr_seq_pacote_copartic_w  bigint;
cd_proc_pacote_copartic_w bigint;
ie_origem_pacote_copartic_w bigint;
vl_medico_copartic_w    double precision  := 0;
vl_anestesista_copartic_w double precision  := 0;
vl_auxiliares_copartic_w  double precision  := 0;
vl_custo_operacional_copart_w double precision  := 0;
vl_materiais_copartic_w   double precision  := 0;
vl_ch_honorarios_w    cotacao_moeda.vl_cotacao%type;
vl_ch_custo_oper_w    cotacao_moeda.vl_cotacao%type;
vl_ch_custo_filme_w   cotacao_moeda.vl_cotacao%type;
vl_ch_anestesista_w   cotacao_moeda.vl_cotacao%type;
ie_tipo_despesa_w   pls_conta_proc.ie_tipo_despesa%type;

nr_seq_congenere_outorg_w pls_congenere.nr_sequencia%type;
nr_seq_congenere_seg_w    pls_segurado.nr_seq_congenere%type;
nr_seq_rp_combinada_w   pls_rp_cta_combinada.nr_sequencia%type;
nr_seq_congenere_w    pls_congenere.nr_sequencia%type;
dt_recebimento_fatura_w   ptu_fatura.dt_recebimento_fatura%type;
dt_postagem_fatura_w    ptu_fatura.dt_postagem%type;
nr_seq_grupo_coop_seg_w   pls_segurado.nr_seq_grupo_coop%type;
ie_tipo_segurado_w    pls_segurado.ie_tipo_segurado%type;
ie_seguro_obito_w   pls_plano.ie_seguro_obito%type;
ie_pcmso_w      pls_segurado.ie_pcmso%type;

dados_conta_valor_w   pls_cta_valorizacao_pck.dados_conta;
dados_conta_proc_valor_w  pls_cta_valorizacao_pck.dados_conta_proc;
dados_beneficiario_valor_w  pls_cta_valorizacao_pck.dados_beneficiario;
dados_fatura_valor_w    pls_cta_valorizacao_pck.dados_fatura;
dados_tx_interc_valor_w   pls_cta_valorizacao_pck.dados_taxa_intercambio;
dados_procedimento_w    pls_cta_valorizacao_pck.dados_procedimento;
dados_prestador_prot_w    pls_cta_valorizacao_pck.dados_prestador_prot;
nr_seq_regra_tx_inter_w   pls_conta_proc.nr_seq_regra_tx_inter%type;
nr_seq_log_exec_w   pls_cta_log_exec.nr_sequencia%type;
ie_preco_w      pls_plano.ie_preco%type;
ie_tx_manual_w      pls_conta_proc.ie_tx_manual%type;
tx_medico_temp_w    pls_conta_proc.tx_medico%type;
dados_regra_preco_proc_w  pls_cta_valorizacao_pck.dados_regra_preco_proc;
dados_conta_w     pls_cta_valorizacao_pck.dados_conta;
ie_status_w     pls_conta_proc.ie_status%type;
ie_status_conta_w   pls_conta.ie_status%type;
nr_seq_prest_inter_w    pls_conta_v.nr_seq_prest_inter%type;
nr_seq_prest_inter_ww   pls_conta_v.nr_seq_prest_inter%type;
ie_cobranca_prevista_ww   pls_guia_plano_proc.ie_cobranca_prevista%type;
vl_taxa_servico_w   pls_conta_proc.vl_taxa_servico%type := 0;
tx_item_regra_w		pls_conta_proc_regra.tx_item%type;
vl_proc_unitario_w	pls_conta_proc.vl_proc_unitario%type;
ie_via_acesso_exec_w	pls_conta_proc.ie_via_acesso%type;
ie_via_acesso_w		pls_conta_proc.ie_via_acesso%type;

sg_estado_w		pessoa_juridica.sg_estado%type;
sg_estado_int_w		pessoa_juridica.sg_estado%type;
ie_nacional_w			pls_congenere.ie_nacional%type;
nr_seq_contrato_w		pls_segurado.nr_sequencia%type;
vl_fixo_tx_adm_w			pls_prestador_taxa_item.vl_fixo%type;
nr_seq_regra_tx_adm_w			pls_prestador_taxa_item.nr_sequencia%type;
vl_base_para_taxa_adm_w		pls_prestador_taxa_item.vl_fixo%type;
vl_fixo_tx_adm_aplicar_w	pls_prestador_taxa_item.vl_fixo%type;


BEGIN

if (ie_tipo_p = 'C') then
  /* Obter dados do procedimento */

  select  nr_seq_conta,
    cd_procedimento,
    ie_origem_proced,
    coalesce(qt_procedimento_imp,1),
    dt_procedimento,
    nr_seq_regra_qtde_exec,
    nr_seq_regra_tipo_exec,
    vl_procedimento,
    ie_status,
    tx_item,
    nr_seq_rp_combinada,
    tx_intercambio,
    nr_seq_regra_tx_inter,
    ie_tipo_despesa,
    ie_tx_manual,
    tx_medico,
    ie_status,
    ie_via_acesso
  into STRICT  nr_seq_conta_w,
    cd_procedimento_w,
    ie_origem_proced_w,
    qt_procedimento_w,
    dt_procedimento_w,
    nr_seq_regra_qtde_exec_w,
    nr_seq_regra_tipo_exec_w,
    vl_calculado_ant_w,
    ie_status_conta_proc_w,
    tx_item_w,
    nr_seq_rp_combinada_w,
    dados_tx_interc_valor_w.pr_taxa,
    dados_tx_interc_valor_w.nr_sequencia,
    ie_tipo_despesa_w,
    ie_tx_manual_w,
    tx_medico_temp_w,
    ie_status_w,
    ie_via_acesso_w
  from  pls_conta_proc
  where nr_sequencia  = nr_sequencia_p;

  dados_conta_proc_valor_w.nr_sequencia   := nr_sequencia_p;
  dados_conta_proc_valor_w.nr_seq_conta   := nr_seq_conta_w;
  dados_conta_proc_valor_w.ie_origem_proced := ie_origem_proced_w;
  dados_conta_proc_valor_w.cd_procedimento  := cd_procedimento_w;
  dados_conta_proc_valor_w.dt_procedimento  := dt_procedimento_w;

  begin
    select  coalesce(a.nr_seq_grupo_rec, '0')
    into STRICT  dados_procedimento_w.nr_seq_grupo_rec
    from    procedimento a
    where   a.cd_procedimento       = cd_procedimento_w
    and     a.ie_origem_proced      = ie_origem_proced_w;
  exception
    when others then
    dados_procedimento_w.nr_seq_grupo_rec := '0';
  end;

  /* Paulo - OS 555103 - Somente atualizar o registro caso o mesmo n?o esteja cancelado. */

  if (coalesce(ie_status_conta_proc_w,'U') <> 'D') then
  
    /* Obter dados da conta */

    select  coalesce(nr_seq_prestador_exec, 0),
      nr_seq_protocolo,
      cd_estabelecimento,
      nr_seq_tipo_acomodacao,
      dt_atendimento,
      nr_seq_plano,
      ie_internado,
      nr_seq_segurado,
      coalesce(cd_guia,'X'),
      ie_origem_conta,
      cd_medico_solicitante,
      cd_medico_executor,
      ie_carater_internacao,
      ie_tipo_conta,
      nr_seq_fatura,
      ie_tipo_acomodacao_ptu,
      ie_tipo_guia,
      dt_alta,
      nr_seq_congenere,
      ie_tipo_intercambio,
      dt_recebimento_fatura,
      dt_postagem_fatura,
      nr_seq_guia,
      ie_tipo_consulta,
      ie_status,
      nr_seq_prest_inter,
      ie_tipo_segurado,
      nr_seq_tipo_conta
    into STRICT  nr_seq_prestador_conta_w,
      nr_seq_protocolo_w,
      cd_estabelecimento_w,
      nr_seq_tipo_acomodacao_w,
      dt_conta_guia_w,
      nr_seq_plano_w,
      ie_internado_w,
      nr_seq_segurado_w,
      cd_guia_w,
      ie_origem_conta_w,
      cd_medico_solicitante_w,
      cd_medico_conta_w,
      ie_carater_internacao_w,
      ie_tipo_conta_w,
      nr_seq_fatura_w,
      ie_tipo_acomodacao_ptu_w,
      ie_tipo_guia_w,
      dt_alta_w,
      nr_seq_congenere_w,
      ie_tipo_intercambio_w,
      dt_recebimento_fatura_w,
      dt_postagem_fatura_w,
      nr_seq_guia_w,
      dados_conta_w.ie_tipo_consulta,
      ie_status_conta_w,
      nr_seq_prest_inter_w,
      ie_tipo_segurado_w,
      dados_conta_w.nr_seq_tipo_conta
    from  pls_conta_v
    where nr_sequencia  = nr_seq_conta_w;

    dados_conta_valor_w.nr_sequencia    := nr_seq_conta_w;
    dados_conta_valor_w.nr_seq_congenere    := nr_seq_congenere_w;
    dados_conta_valor_w.ie_origem_conta   := ie_origem_conta_w;
    dados_conta_valor_w.ie_tipo_conta   := ie_tipo_conta_w;
    dados_conta_valor_w.nr_seq_segurado   := nr_seq_segurado_w;
    dados_conta_valor_w.ie_tipo_intercambio   := ie_tipo_intercambio_w;
    dados_conta_valor_w.ie_tipo_guia    := ie_tipo_guia_w;
    dados_conta_valor_w.dt_alta     := dt_alta_w;
    dados_conta_valor_w.dt_atendimento    := dt_conta_guia_w;

    dados_fatura_valor_w.nr_sequencia   := nr_seq_fatura_w;
    dados_fatura_valor_w.dt_recebimento   := dt_recebimento_fatura_w;
    dados_fatura_valor_w.dt_postagem    := dt_postagem_fatura_w;

    /*Diego OPS 30/10/2010 - Obter regra de data de preco do pacote*/

    dt_preco_w := pls_obter_data_preco_item(nr_sequencia_p,'P');

    if (nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '') then
      select  max(ie_pcmso)
      into STRICT  dados_conta_w.ie_atend_pcmso
      from  pls_guia_plano
      where   nr_sequencia  = nr_seq_guia_w;
    end if;
    /*Busca prestador solicitante*/

    begin
      select  b.nr_seq_prestador
      into STRICT  nr_seq_prestador_solic_w
      from  pls_prestador_medico  b,
        pls_prestador   d
      where b.nr_seq_prestador  = d.nr_sequencia
      and d.cd_estabelecimento  = cd_estabelecimento_w
      and b.cd_medico   = cd_medico_solicitante_w
      and b.ie_situacao   = 'A'
      and trunc(dt_preco_w,'dd') between trunc(coalesce(b.dt_inclusao, dt_preco_w),'dd') and trunc(coalesce(b.dt_exclusao,dt_preco_w),'dd');
    exception
    when others then
      nr_seq_prestador_solic_w  := null;
    end;

    /* Obter o prestador do protocolo */

    select  nr_seq_prestador,
      coalesce(ie_tipo_protocolo,'C'),
      nr_seq_prestador
    into STRICT  nr_seq_prestador_prot_w,
      ie_tipo_protocolo_w,
      dados_prestador_prot_w.nr_seq_prestador
    from  pls_protocolo_conta
    where nr_sequencia  = nr_seq_protocolo_w;

    if (dados_prestador_prot_w.nr_seq_prestador IS NOT NULL AND dados_prestador_prot_w.nr_seq_prestador::text <> '') then
      select  max(nr_seq_tipo_prestador),
        max(nr_seq_classificacao),
        max(ie_tipo_vinculo),
        max(cd_prestador)
      into STRICT  dados_prestador_prot_w.nr_seq_tipo_prestador,
        dados_prestador_prot_w.nr_seq_classificacao,
        dados_prestador_prot_w.ie_tipo_vinculo,
        dados_prestador_prot_w.cd_prestador
      from  pls_prestador
      where nr_sequencia  = dados_prestador_prot_w.nr_seq_prestador;
    end if;

    if (ie_tipo_protocolo_w = 'I') then
      select  max(nr_seq_prest_inter)
      into STRICT  nr_seq_prest_inter_ww
      from  pls_proc_participante
      where nr_seq_conta_proc = nr_sequencia_p;

      if (nr_seq_prest_inter_ww IS NOT NULL AND nr_seq_prest_inter_ww::text <> '') then
        nr_seq_prest_inter_w  :=  nr_seq_prest_inter_ww;
      end if;
    end if;

    begin
      select  	coalesce(a.nr_contrato,0),
				b.nr_seq_congenere,
				a.nr_sequencia
      into STRICT  	nr_contrato_w,
				nr_seq_congenere_seg_w,
				nr_seq_contrato_w
      from  	pls_contrato  a,
				pls_segurado  b
      where a.nr_sequencia  = b.nr_seq_contrato
      and b.nr_sequencia  = nr_seq_segurado_w;
    exception
    when others then
      nr_contrato_w := 0;
    end;

    begin
      select  b.nr_seq_congenere,
        b.nr_seq_intercambio,
        b.nr_seq_grupo_coop,
        b.ie_pcmso
      into STRICT  nr_seq_congenere_seg_w,
        nr_seq_intercambio_w,
        nr_seq_grupo_coop_seg_w,
        ie_pcmso_w
      from  pls_segurado  b
      where b.nr_sequencia  = nr_seq_segurado_w;
    exception
    when others then
      nr_seq_congenere_seg_w  := null;
      nr_seq_intercambio_w  := null;
    end;

  if (coalesce(ie_tipo_intercambio_w::text, '') = '') then
    ie_tipo_intercambio_w := pls_obter_tipo_intercambio(nr_seq_congenere_seg_w, cd_estabelecimento_w);
    end if;
    dados_conta_valor_w.ie_tipo_intercambio   := ie_tipo_intercambio_w;

    select  max(a.ie_seguro_obito),
      max(a.ie_preco)
    into STRICT  ie_seguro_obito_w,
      ie_preco_w
    from  pls_plano a
    where a.nr_sequencia  = nr_seq_plano_w;

    dados_beneficiario_valor_w.nr_sequencia   := nr_seq_segurado_w;
    dados_beneficiario_valor_w.nr_seq_intercambio := nr_seq_intercambio_w;
    dados_beneficiario_valor_w.nr_seq_plano   := nr_seq_plano_w;
    dados_beneficiario_valor_w.nr_seq_grupo_coop  := nr_seq_grupo_coop_seg_w;
    dados_beneficiario_valor_w.ie_tipo_beneficiario := ie_tipo_segurado_w;
    dados_beneficiario_valor_w.ie_beneficio_obito := ie_seguro_obito_w;
    dados_beneficiario_valor_w.ie_pcmso   := ie_pcmso_w;

 
    select  coalesce(max(b.nr_sequencia),0)
    into STRICT  nr_seq_congenere_outorg_w
    from  pls_congenere b,
      pls_outorgante a
    where a.cd_cgc_outorgante = b.cd_cgc
    and a.cd_estabelecimento  = cd_estabelecimento_w;

    if (nr_seq_congenere_seg_w IS NOT NULL AND nr_seq_congenere_seg_w::text <> '') and (nr_seq_congenere_seg_w <> nr_seq_congenere_outorg_w) then
      nr_seq_congenere_w  := nr_seq_congenere_seg_w;
    end if;

    select  max(nr_seq_classificacao)
    into STRICT  nr_seq_classificacao_prest_w
    from  pls_prestador
    where nr_sequencia  = nr_seq_prestador_conta_w;

    if (nr_seq_prestador_conta_w > 0) then
      nr_seq_prestador_w  := nr_seq_prestador_conta_w;
    else
      nr_seq_prestador_w  := nr_seq_prestador_prot_w;
    end if;

  
    select  coalesce(max(a.ie_calculo_pacote),'P'),
      coalesce(max(a.ie_calculo_coparticipacao),'P')
    into STRICT  ie_calculo_pacote_w,
      ie_calculo_coparticipacao_w
    from  table(pls_parametros_pck.f_retorna_param(cd_estabelecimento_w)) a;

    if (ie_calculo_pacote_w = 'P') then
      /* Obter o preco do pacote */

      nr_seq_regra_pacote_w   := '';

        SELECT * FROM pls_define_preco_pacote(cd_estabelecimento_w, nr_seq_prestador_w, nr_seq_tipo_acomodacao_w, dt_preco_w, cd_procedimento_w, ie_origem_proced_w, ie_internado_w, nr_seq_plano_w, nr_contrato_w, nr_seq_congenere_w, nm_usuario_p, ie_origem_conta_w, ie_tipo_intercambio_w, nr_seq_pacote_w, nr_seq_regra_pacote_w, cd_proc_pacote_w, ie_origem_pacote_w, vl_pacote_w, vl_medico_w, vl_anestesista_w, vl_auxiliares_w, vl_custo_operacional_w, vl_materiais_w, nr_seq_intercambio_w, nr_seq_classificacao_prest_w, nr_sequencia_p, nr_seq_segurado_w, ie_log_p, 'S', nr_seq_prest_inter_w, 1) INTO STRICT nr_seq_pacote_w, nr_seq_regra_pacote_w, cd_proc_pacote_w, ie_origem_pacote_w, vl_pacote_w, vl_medico_w, vl_anestesista_w, vl_auxiliares_w, vl_custo_operacional_w, vl_materiais_w;

      if  ((ie_calculo_coparticipacao_w = 'O') or (ie_calculo_coparticipacao_w = 'R')) and (coalesce(ie_preco_w,1)  = '1') then
        SELECT * FROM pls_define_preco_pacote(cd_estabelecimento_w, nr_seq_prestador_w, nr_seq_tipo_acomodacao_w, dt_preco_w, cd_procedimento_w, ie_origem_proced_w, ie_internado_w, nr_seq_plano_w, nr_contrato_w, nr_seq_congenere_w, nm_usuario_p, ie_origem_conta_w, ie_tipo_intercambio_w, nr_seq_pacote_copartic_w, nr_seq_regra_copartic_w, cd_proc_pacote_copartic_w, ie_origem_pacote_copartic_w, vl_copartic_w, vl_medico_copartic_w, vl_anestesista_copartic_w, vl_auxiliares_copartic_w, vl_custo_operacional_copart_w, vl_materiais_copartic_w, nr_seq_intercambio_w, nr_seq_classificacao_prest_w, nr_sequencia_p, nr_seq_segurado_w, ie_log_p, 'S', nr_seq_prest_inter_w, 2) INTO STRICT nr_seq_pacote_copartic_w, nr_seq_regra_copartic_w, cd_proc_pacote_copartic_w, ie_origem_pacote_copartic_w, vl_copartic_w, vl_medico_copartic_w, vl_anestesista_copartic_w, vl_auxiliares_copartic_w, vl_custo_operacional_copart_w, vl_materiais_copartic_w;
      end if;
    elsif (ie_calculo_pacote_w  = 'R') then
      dados_regra_preco_proc_w := pls_define_preco_proc(cd_estabelecimento_w, nr_seq_prestador_w, null, dt_preco_w, null, cd_procedimento_w, ie_origem_proced_w, nr_seq_tipo_acomodacao_w, null, null, nr_seq_plano_w, 'P', null, 0, null, 'N', null, null, '', null, null, null, '', null, '', '', '', '', '', '', null, ie_carater_internacao_w, dt_procedimento_w, ie_tipo_acomodacao_ptu_w, nr_seq_rp_combinada_w, dados_prestador_prot_w, null, dados_conta_w, dados_regra_preco_proc_w);

          vl_pacote_w   := dados_regra_preco_proc_w.vl_procedimento;
          vl_custo_operacional_w  := dados_regra_preco_proc_w.vl_custo_operacional;
          vl_anestesista_w  := dados_regra_preco_proc_w.vl_anestesista;
          vl_medico_w   := dados_regra_preco_proc_w.vl_medico;
          vl_materiais_w    := dados_regra_preco_proc_w.vl_filme;
          vl_auxiliares_w   := dados_regra_preco_proc_w.vl_auxiliares;
          nr_seq_pacote_w   := dados_regra_preco_proc_w.nr_sequencia;
          cd_moeda_autogerado_w := dados_regra_preco_proc_w.cd_moeda_autogerado;
          vl_ch_honorarios_w  := dados_regra_preco_proc_w.vl_ch_honorarios;
          vl_ch_custo_oper_w  := dados_regra_preco_proc_w.vl_ch_custo_oper;
          vl_ch_custo_filme_w := dados_regra_preco_proc_w.vl_ch_custo_filme;
          vl_ch_anestesista_w := dados_regra_preco_proc_w.vl_ch_anestesista;
    end if;

    /* Obter dados da autorizacao */

    begin
      select  coalesce(ie_cobranca_prevista, 'N')
      into STRICT  ie_cobranca_prevista_w
      from  pls_guia_plano
      where nr_sequencia = nr_seq_guia_w;

      if (ie_cobranca_prevista_w = 'N') then
        select  coalesce(max(ie_cobranca_prevista),'N')
        into STRICT  ie_cobranca_prevista_ww
        from  pls_guia_plano_proc
        where cd_procedimento   = cd_procedimento_w
        and ie_origem_proced  = ie_origem_proced_w
        and nr_seq_guia     = nr_seq_guia_w;

        if (ie_cobranca_prevista_ww = 'S') then
          ie_cobranca_prevista_w := ie_cobranca_prevista_ww;
        end if;
      end if;
    exception
    when others then
      ie_cobranca_prevista_w  := 'N';
    end;

    
    cd_medico_conta_w := pls_obter_medico_executor(nr_sequencia_p, 'P');

    ie_medico_exec_coope_w  := pls_obter_se_cooperado_ativo(cd_medico_conta_w,dt_procedimento_w,null);

    if (ie_medico_exec_coope_w = 'S') then
      ie_medico_exec_coope_w := 'C'; -- Caso ele nao for cooperado a function ja retorna N
    end if;

    
    ie_medico_solic_coope_w := pls_obter_se_cooperado_ativo(cd_medico_solicitante_w,dt_procedimento_w,null);

    if (ie_medico_solic_coope_w = 'S') then
      ie_medico_solic_coope_w := 'C'; -- Caso ele nao for cooperado a function ja retorna N
    end if;

    SELECT * FROM pls_obter_tipo_ato_cooperado(  cd_procedimento_w, ie_origem_proced_w, nr_sequencia_p, 'P', nr_seq_prestador_conta_w, nr_seq_prestador_solic_w, nr_seq_prestador_prot_w, null, ie_medico_solic_coope_w, ie_medico_exec_coope_w, '', ie_tipo_protocolo_w, ie_tipo_guia_w, ie_tipo_despesa_w, null, nr_seq_regra_cooperado_w, ie_ato_cooperado_w) INTO STRICT nr_seq_regra_cooperado_w, ie_ato_cooperado_w;

    vl_pacote_w   := (vl_pacote_w   * qt_procedimento_w);
    vl_medico_w   := (vl_medico_w   * qt_procedimento_w);
    vl_anestesista_w  := (vl_anestesista_w  * qt_procedimento_w);

    if  ((nr_seq_regra_qtde_exec_w > 0) or (nr_seq_regra_tipo_exec_w > 0))and (coalesce(ie_atualiza_p, 'S') = 'S') and ( coalesce(ie_tx_manual_w, 'N') = 'N')then
      
      if (nr_seq_regra_qtde_exec_w > 0) then
        SELECT * FROM pls_obter_tx_qtde_proc_valor( nr_sequencia_p, nr_seq_conta_w, nm_usuario_p, cd_estabelecimento_w, tx_procedimento_w, tx_medico_w, tx_custo_operacional_w, tx_material_w, tx_anestesista_w, tx_auxiliares_w, ie_via_acesso_exec_w) INTO STRICT tx_procedimento_w, tx_medico_w, tx_custo_operacional_w, tx_material_w, tx_anestesista_w, tx_auxiliares_w, ie_via_acesso_exec_w;
	
	if (ie_via_acesso_exec_w IS NOT NULL AND ie_via_acesso_exec_w::text <> '') then
		ie_via_acesso_w := ie_via_acesso_exec_w;
	end if;
	
        tx_item_w := tx_procedimento_w;
      end if;
      vl_medico_w := dividir((vl_medico_w*coalesce(tx_medico_w,100)),100);
      vl_anestesista_w:= dividir((vl_anestesista_w*coalesce(tx_anestesista_w,100)),100);
      vl_pacote_w := dividir((vl_pacote_w*coalesce(tx_item_w,100)),100);
    end if;

    if (ie_tx_manual_w = 'S') then
      vl_medico_w := dividir((vl_medico_w*coalesce(tx_medico_temp_w,100)),100);
      vl_pacote_w := dividir((vl_pacote_w*coalesce(tx_item_w,100)),100);
    end if;

    SELECT * FROM pls_obter_taxa_adm_item( cd_procedimento_w, ie_origem_proced_w, null, nr_seq_prestador_w, nm_usuario_p, ie_preco_w, ie_tipo_segurado_w, nr_seq_contrato_w, dt_procedimento_w, tx_adm_w, vl_fixo_tx_adm_w, nr_seq_regra_tx_adm_w) INTO STRICT tx_adm_w, vl_fixo_tx_adm_w, nr_seq_regra_tx_adm_w;

    if (coalesce(tx_adm_w,0) > 0) then
	
      vl_medico_w   := vl_medico_w + dividir((vl_medico_w * tx_adm_w),100);
      vl_anestesista_w  := vl_anestesista_w + dividir((vl_anestesista_w * tx_adm_w),100);
      vl_pacote_w   := vl_pacote_w + dividir((vl_pacote_w * tx_adm_w),100);
	
		ds_observacao_log_w := 'Tx administrativa prestador: ' || tx_adm_w	;
		CALL pls_gravar_log_calculo_proc(  'S', nr_sequencia_p, cd_estabelecimento_w,
					  'Preco atual x Tx item A500', ds_observacao_log_w, 'pls_atualiza_valor_pacote',
					  vl_pacote_w, 0, 0,
					  vl_medico_w, 0, vl_anestesista_w,
					  2, nr_seq_regra_tx_adm_w, 0,
					  0,null, null, 'Log'        );
					
	elsif (vl_fixo_tx_adm_w IS NOT NULL AND vl_fixo_tx_adm_w::text <> '') then
		  
		vl_medico_w :=  vl_medico_w + vl_fixo_tx_adm_w;
		  	
		ds_observacao_log_w := 'Valor Tx administrativa prestador: ' || vl_fixo_tx_adm_w	;
		CALL pls_gravar_log_calculo_proc(  'S', nr_sequencia_p, cd_estabelecimento_w,
					  'Preco atual x Tx item A500', ds_observacao_log_w, 'pls_atualiza_valor_pacote',
					  vl_pacote_w, 0, 0,
					  vl_medico_w, 0, vl_anestesista_w,
					  2, nr_seq_regra_tx_adm_w, 0,
					  0,null, null, 'Log'        );
    end if;
	
	update	pls_conta_proc_regra
	set		dt_atualizacao = clock_timestamp(),
			nr_seq_regra_tx_adm = nr_seq_regra_tx_adm_w
	where	nr_sequencia = nr_sequencia_p;

	select	coalesce(max(tx_item),0)
	into STRICT	tx_item_regra_w
	from	pls_conta_proc_regra
	where	nr_sequencia = nr_sequencia_p;
	
	if (tx_item_regra_w > 0) then
	
		vl_pacote_w := vl_pacote_w * tx_item_regra_w;
		
		ds_observacao_log_w := 'Tx item A500: ' || tx_item_regra_w	;
		CALL pls_gravar_log_calculo_proc(  'S', nr_sequencia_p, cd_estabelecimento_w,
					      'Preco atual x Tx item A500', ds_observacao_log_w, 'pls_atualiza_valor_pacote',
					      vl_pacote_w, 0, 0,
					      vl_medico_w, 0, vl_anestesista_w,
					      2, nr_seq_regra_pacote_w, 0,
					      0,null, null, 'Log'        );
	end if;

    if (ie_calculo_pacote_w = 'P') then
      ds_observacao_log_w :=  'Qt. procedimento: '||qt_procedimento_w;

      CALL pls_gravar_log_calculo_proc(  'S', nr_sequencia_p, cd_estabelecimento_w,
              'Preco atual x Qt. procedimento', ds_observacao_log_w, 'pls_atualiza_valor_pacote',
              vl_pacote_w, 0, 0,
              vl_medico_w, 0, vl_anestesista_w,
              2, nr_seq_regra_pacote_w, 0,
              0,null, null, 'Log'        );
    end if;

    
    if (ie_calculo_pacote_w = 'P') then
      vl_calc_hi_util_w := coalesce(vl_pacote_w,0);
    elsif (ie_calculo_pacote_w = 'R') then
      vl_calc_hi_util_w := (coalesce(vl_anestesista_w,0))+(coalesce(vl_medico_w,0))+(coalesce(vl_auxiliares_w,0));
    end if;
    
    if (ie_tipo_conta_w = 'I') then

      if (coalesce(dados_tx_interc_valor_w.nr_sequencia::text, '') = '') and (ie_recalcular_conta_p = 'N')then
        
        nr_seq_log_exec_w := pls_cta_processo_pck.executa_processo(  null, null, null, nr_seq_conta_w, nr_sequencia_p, null, null, null, '12,', null, nm_usuario_p, cd_estabelecimento_w, null, nr_seq_log_exec_w);
        select  tx_intercambio,
          nr_seq_regra_tx_inter
        into STRICT  dados_tx_interc_valor_w.pr_taxa,
          dados_tx_interc_valor_w.nr_sequencia
        from  pls_conta_proc
        where nr_sequencia  = nr_sequencia_p;

      end if;
        
      tx_intercambio_w := dados_tx_interc_valor_w.pr_taxa;

      if (ie_calculo_pacote_w = 'P') then
        ds_observacao_log_w :=  'Qx. inter: '||tx_intercambio_w||'; ie_pagamento_cobranca_w '||ie_pagamento_cobranca_w||
                '; qt_dia_proced_receb_w '||qt_dia_proced_receb_w||'; nr_seq_congenere_w '||nr_seq_congenere_w||
                '; nr_seq_segurado_w'||nr_seq_segurado_w||'; dt_procedimento_w '||dt_procedimento_w||
                '; cd_procedimento_w '||cd_procedimento_w||'; ie_origem_proced_w '||ie_origem_proced_w;

        CALL pls_gravar_log_calculo_proc(  'S', nr_sequencia_p, cd_estabelecimento_w,
                'Preco atual x Tx. intercambio', ds_observacao_log_w, 'pls_atualiza_valor_pacote',
                vl_pacote_w, 0, 0,
                vl_medico_w, 0, vl_anestesista_w,
                3, nr_seq_regra_pacote_w, 0,
                0,null, null, 'Log'        );
      end if;

      nr_seq_regra_tx_inter_w := dados_tx_interc_valor_w.nr_sequencia;
      if (coalesce(tx_intercambio_w,0) > 0) then
        vl_taxa_servico_w := dividir((vl_pacote_w * tx_intercambio_w),100);
        vl_pacote_w := vl_pacote_w + dividir((vl_pacote_w * tx_intercambio_w),100);
      end if;

    end if;

    vl_total_procedimento_w   := vl_pacote_w;

    if (ie_status_conta_w in ('U','P','A')) then
      if (ie_status_w = 'M') then
        --vl_prestador_w  := 0;
        ie_status_w := ie_status_w;

      elsif (ie_status_w in ('A','D','L')) then
        ie_status_w := ie_status_w;
      else
        ie_status_w := 'C';
      end if;
    end if;

    vl_proc_unitario_w := round((dividir(vl_pacote_w, qt_procedimento_w))::numeric,2);

    update  pls_conta_proc
    set vl_procedimento   = vl_pacote_w,
      vl_medico   = vl_medico_w,
      vl_anestesista    = vl_anestesista_w,
      tx_item     = coalesce(tx_item_w,100),
      vl_total_procedimento = vl_total_procedimento_w,
      vl_custo_operacional  = vl_custo_operacional_w,
      vl_materiais    = coalesce(vl_materiais_w,0),
      vl_auxiliares   = coalesce(vl_auxiliares_w,0),
      vl_calc_co_util   = coalesce(vl_custo_operacional_w,0),
      vl_calc_hi_util   = coalesce(vl_calc_hi_util_w,0),
      vl_calc_mat_util  = coalesce(vl_materiais_w,0),
      nr_seq_pacote   = nr_seq_pacote_w,
      tx_intercambio    = coalesce(tx_intercambio_w,0),
      ie_status   = ie_status_w,
      ds_log      = 'pls_atualiza_valor_pacote',
      ie_cobranca_prevista  = CASE WHEN ie_cobranca_prevista_inf = NULL THEN  ie_cobranca_prevista_w  ELSE ie_cobranca_prevista END , --Se foi alterado manualmente na an?lise, ent?o mant?m o valor.
      nr_seq_preco_pacote = nr_seq_regra_pacote_w,
      nr_seq_regra_cooperado  = nr_seq_regra_cooperado_w,
      ie_ato_cooperado  = ie_ato_cooperado_w,
      vl_calculado_ant  = vl_calculado_ant_w,
      tx_prestador_item = tx_adm_w,
      vl_proc_copartic  = vl_copartic_w,
      nr_seq_regra_copartic = nr_seq_regra_copartic_w,
      nr_seq_regra_tx_inter = nr_seq_regra_tx_inter_w,
      vl_ch_honorario   = vl_ch_honorarios_w,
      vl_ch_custo_oper  = vl_ch_custo_oper,
      vl_ch_custo_filme = vl_ch_custo_filme_w,
      vl_ch_anestesista = vl_ch_anestesista_w,
      vl_taxa_servico   = vl_taxa_servico_w,
      vl_proc_unitario	= vl_proc_unitario_w,
      ie_via_acesso	= ie_via_acesso_w
    where   nr_sequencia    = nr_sequencia_p;
  end if;
/*Djavan OPS  08/11/2010 - Atualizar valor do pacote na guia*/

elsif (ie_tipo_p = 'G') then
  /*Obter dados do procedimento*/

  select  nr_seq_guia,
    cd_procedimento,
    ie_origem_proced,
    qt_solicitada
  into STRICT  nr_seq_guia_w,
    cd_procedimento_w,
    ie_origem_proced_w,
    qt_procedimento_w
  from  pls_guia_plano_proc
  where nr_sequencia  = nr_sequencia_p;

  /*Obter dados da guia*/

  select  nr_seq_prestador,
    cd_estabelecimento,
    dt_solicitacao,
    nr_seq_tipo_acomodacao,
    nr_seq_plano,
    pls_obter_internado_guia(nr_sequencia,'A'),
    nr_seq_segurado
  into STRICT  nr_seq_prestador_w,
    cd_estabelecimento_w,
    dt_preco_w,
    nr_seq_tipo_acomodacao_w,
    nr_seq_plano_w,
    ie_internado_w,
    nr_seq_segurado_w
  from  pls_guia_plano
  where nr_sequencia    = nr_seq_guia_w;

  begin
  select  coalesce(a.nr_contrato,0)
  into STRICT  nr_contrato_w
  from  pls_contrato  a,
	pls_segurado  b
  where a.nr_sequencia  = b.nr_seq_contrato
  and b.nr_sequencia  = nr_seq_segurado_w;
  exception
  when others then
    nr_contrato_w   := 0;
  end;

  select nr_seq_congenere
  into STRICT  nr_seq_congenere_w
  from  pls_segurado
  where nr_sequencia  = nr_seq_segurado_w;

 select	coalesce(max(sg_estado),'X')
 into STRICT	sg_estado_w
 from	pessoa_juridica
 where	cd_cgc	= (	SELECT	max(cd_cgc_outorgante)
			from	pls_outorgante
			where	cd_estabelecimento	= cd_estabelecimento_w);
 select	coalesce(max(a.sg_estado),'X')
 into STRICT	sg_estado_int_w
 from	pessoa_juridica	a,
	pls_congenere	b
 where	a.cd_cgc	= b.cd_cgc
 and	b.nr_sequencia	= nr_seq_congenere_w;

 if (sg_estado_w <> 'X') and (sg_estado_int_w <> 'X') then
	if (sg_estado_w	= sg_estado_int_w) then
		ie_tipo_intercambio_w	:= 'E';
	else	
		ie_tipo_intercambio_w	:= 'N';
	end if;
 else
	ie_tipo_intercambio_w	:= 'A';
 end if;


  
  SELECT * FROM pls_define_preco_pacote(cd_estabelecimento_w, nr_seq_prestador_w, nr_seq_tipo_acomodacao_w, dt_preco_w, cd_procedimento_w, ie_origem_proced_w, ie_internado_w, nr_seq_plano_w, nr_contrato_w, nr_seq_congenere_w, nm_usuario_p, '', ie_tipo_intercambio_w, nr_seq_pacote_w, nr_seq_acomod_pacote_w, cd_proc_pacote_w, ie_origem_pacote_w, vl_pacote_w, vl_medico_w, vl_anestesista_w, vl_auxiliares_w, vl_custo_operacional_w, vl_materiais_w, nr_seq_intercambio_w, nr_seq_classificacao_prest_w, null, nr_seq_segurado_w, ie_log_p, 'N', nr_seq_prest_inter_w, 1) INTO STRICT nr_seq_pacote_w, nr_seq_acomod_pacote_w, cd_proc_pacote_w, ie_origem_pacote_w, vl_pacote_w, vl_medico_w, vl_anestesista_w, vl_auxiliares_w, vl_custo_operacional_w, vl_materiais_w;

  vl_pacote_unitario_w  := vl_pacote_w;
  vl_pacote_total_w := (vl_pacote_w * qt_procedimento_w);

  update  pls_guia_plano_proc
  set vl_procedimento   = vl_pacote_unitario_w,
    nr_seq_preco_pacote = nr_seq_acomod_pacote_w,
    vl_total_pacote   = vl_pacote_total_w
  where nr_sequencia    = nr_sequencia_p;
elsif (ie_tipo_p = 'COMPL') then
  /*Obter dados do procedimento*/

  select  a.nr_seq_guia,
    b.cd_servico,
    b.ie_origem_servico,
    b.qt_servico
  into STRICT  nr_seq_guia_w,
    cd_procedimento_w,
    ie_origem_proced_w,
    qt_procedimento_w
  from  ptu_pedido_compl_aut_serv b,
    ptu_pedido_compl_aut    a
  where b.nr_sequencia  = nr_sequencia_p
  and b.nr_seq_pedido = a.nr_sequencia;

  /*Obter dados da guia*/

  select  nr_seq_prestador,
    cd_estabelecimento,
    dt_solicitacao,
    nr_seq_tipo_acomodacao,
    nr_seq_plano,
    pls_obter_internado_guia(nr_sequencia,'A'),
    nr_seq_segurado
  into STRICT  nr_seq_prestador_w,
    cd_estabelecimento_w,
    dt_preco_w,
    nr_seq_tipo_acomodacao_w,
    nr_seq_plano_w,
    ie_internado_w,
    nr_seq_segurado_w
  from  pls_guia_plano
  where nr_sequencia    = nr_seq_guia_w;

  begin
  select  coalesce(a.nr_contrato,0),
    b.nr_seq_congenere
  into STRICT  nr_contrato_w,
    nr_seq_congenere_w
  from  pls_contrato  a,
    pls_segurado  b
  where a.nr_sequencia  = b.nr_seq_contrato
  and b.nr_sequencia  = nr_seq_segurado_w;
  exception
  when others then
    nr_contrato_w := 0;
  end;

  
  SELECT * FROM pls_define_preco_pacote(cd_estabelecimento_w, nr_seq_prestador_w, nr_seq_tipo_acomodacao_w, dt_preco_w, cd_procedimento_w, ie_origem_proced_w, ie_internado_w, nr_seq_plano_w, nr_contrato_w, nr_seq_congenere_w, nm_usuario_p, '', ie_tipo_intercambio_w, nr_seq_pacote_w, nr_seq_acomod_pacote_w, cd_proc_pacote_w, ie_origem_pacote_w, vl_pacote_w, vl_medico_w, vl_anestesista_w, vl_auxiliares_w, vl_custo_operacional_w, vl_materiais_w, nr_seq_intercambio_w, nr_seq_classificacao_prest_w, null, nr_seq_segurado_w, ie_log_p, 'N', nr_seq_prest_inter_w, 1) INTO STRICT nr_seq_pacote_w, nr_seq_acomod_pacote_w, cd_proc_pacote_w, ie_origem_pacote_w, vl_pacote_w, vl_medico_w, vl_anestesista_w, vl_auxiliares_w, vl_custo_operacional_w, vl_materiais_w;

  vl_pacote_w   := (vl_pacote_w * qt_procedimento_w);

  update  ptu_pedido_compl_aut_serv
  set vl_servico  = vl_pacote_w
  where nr_sequencia  = nr_sequencia_p;
elsif (ie_tipo_p = 'R') then
  /*Obter dados do procedimento*/

  select  nr_seq_requisicao,
    cd_procedimento,
    ie_origem_proced,
    qt_solicitado
  into STRICT  nr_seq_requisicao_w,
    cd_procedimento_w,
    ie_origem_proced_w,
    qt_procedimento_w
  from  pls_requisicao_proc
  where nr_sequencia  = nr_sequencia_p;

  /*Obter dados da guia*/

  select  nr_seq_prestador,
    cd_estabelecimento,
    dt_requisicao,
    nr_seq_tipo_acomodacao,
    nr_seq_plano,
    pls_obter_internado_guia(nr_sequencia, 'R'),
    nr_seq_segurado
  into STRICT  nr_seq_prestador_w,
    cd_estabelecimento_w,
    dt_preco_w,
    nr_seq_tipo_acomodacao_w,
    nr_seq_plano_w,
    ie_internado_w,
    nr_seq_segurado_w
  from  pls_requisicao
  where nr_sequencia  = nr_seq_requisicao_w;

  if (coalesce(nr_seq_tipo_acomodacao_w::text, '') = '') then
    nr_seq_tipo_acomodacao_w  := pls_obter_dados_produto(nr_seq_plano_w, 'AP');
  end if;

  begin
  select  coalesce(a.nr_contrato,0)
  into STRICT  nr_contrato_w
  from  pls_contrato  a,
	pls_segurado  b
  where a.nr_sequencia  = b.nr_seq_contrato
  and b.nr_sequencia  = nr_seq_segurado_w;
  exception
  when others then
    nr_contrato_w   := 0;
  end;

  select nr_seq_congenere
  into STRICT  nr_seq_congenere_w
  from  pls_segurado
  where nr_sequencia  = nr_seq_segurado_w;

 select	coalesce(max(sg_estado),'X')
 into STRICT	sg_estado_w
 from	pessoa_juridica
 where	cd_cgc	= (	SELECT	max(cd_cgc_outorgante)
			from	pls_outorgante
			where	cd_estabelecimento	= cd_estabelecimento_w);
 select	coalesce(max(a.sg_estado),'X'),
	coalesce(max(ie_nacional),'N')
 into STRICT	sg_estado_int_w,
	ie_nacional_w
 from	pessoa_juridica	a,
	pls_congenere	b
 where	a.cd_cgc	= b.cd_cgc
 and	b.nr_sequencia	= nr_seq_congenere_w;

 if (ie_nacional_w = 'S') then
	ie_tipo_intercambio_w := 'N';
 elsif (sg_estado_w <> 'X') and (sg_estado_int_w <> 'X') then
	if (sg_estado_w	= sg_estado_int_w) then
		ie_tipo_intercambio_w	:= 'E';
	else	
		ie_tipo_intercambio_w	:= 'N';
	end if;
 else
	ie_tipo_intercambio_w	:= 'A';
 end if;

  select  coalesce(max(ie_calculo_pacote),'P')
  into STRICT  ie_calculo_pacote_w
  from  pls_param_requisicao
  where cd_estabelecimento  = cd_estabelecimento_w;

  if (ie_calculo_pacote_w = 'P') then
    nr_seq_regra_pacote_w   := '';
    /*Obter preco do pacote*/

    SELECT * FROM pls_define_preco_pacote(cd_estabelecimento_w, nr_seq_prestador_w, nr_seq_tipo_acomodacao_w, dt_preco_w, cd_procedimento_w, ie_origem_proced_w, ie_internado_w, nr_seq_plano_w, nr_contrato_w, nr_seq_congenere_w, nm_usuario_p, '', ie_tipo_intercambio_w, nr_seq_pacote_w, nr_seq_acomod_pacote_w, cd_proc_pacote_w, ie_origem_pacote_w, vl_pacote_w, vl_medico_w, vl_anestesista_w, vl_auxiliares_w, vl_custo_operacional_w, vl_materiais_w, nr_seq_intercambio_w, nr_seq_classificacao_prest_w, null, nr_seq_segurado_w, ie_log_p, 'N', nr_seq_prest_inter_w, 1) INTO STRICT nr_seq_pacote_w, nr_seq_acomod_pacote_w, cd_proc_pacote_w, ie_origem_pacote_w, vl_pacote_w, vl_medico_w, vl_anestesista_w, vl_auxiliares_w, vl_custo_operacional_w, vl_materiais_w;
  elsif (ie_calculo_pacote_w  = 'R') then
    dados_regra_preco_proc_w := pls_define_preco_proc(  cd_estabelecimento_w, nr_seq_prestador_w, null, dt_preco_w, null, cd_procedimento_w, ie_origem_proced_w, nr_seq_tipo_acomodacao_w, null, null, nr_seq_plano_w, 'A', null, 0, nr_sequencia_p, 'N', null, null, '', null, null, null, '', null, '', '', '', '', '', '', null, ie_carater_internacao_w, dt_procedimento_w, null, null, dados_prestador_prot_w, null, null, dados_regra_preco_proc_w);

        vl_pacote_w   := dados_regra_preco_proc_w.vl_procedimento;
        vl_custo_operacional_w  := dados_regra_preco_proc_w.vl_custo_operacional;
        vl_anestesista_w  := dados_regra_preco_proc_w.vl_anestesista;
        vl_medico_w   := dados_regra_preco_proc_w.vl_medico;
        vl_materiais_w    := dados_regra_preco_proc_w.vl_filme;
        vl_auxiliares_w   := dados_regra_preco_proc_w.vl_auxiliares;
        nr_seq_regra_w    := dados_regra_preco_proc_w.nr_sequencia;
        cd_edicao_amb_w   := dados_regra_preco_proc_w.cd_edicao_amb;
        cd_porte_anestesico_w := dados_regra_preco_proc_w.cd_porte_anestesico;
        cd_moeda_autogerado_w := dados_regra_preco_proc_w.cd_moeda_autogerado;
        vl_ch_honorarios_w  := dados_regra_preco_proc_w.vl_ch_honorarios;
        vl_ch_custo_oper_w  := dados_regra_preco_proc_w.vl_ch_custo_oper;
        vl_ch_custo_filme_w := dados_regra_preco_proc_w.vl_ch_custo_filme;
        vl_ch_anestesista_w := dados_regra_preco_proc_w.vl_ch_anestesista;
  end if;

  vl_pacote_unitario_w  := vl_pacote_w;
  vl_pacote_total_w := (vl_pacote_w * qt_procedimento_w);

  update  pls_requisicao_proc
  set vl_procedimento   = vl_pacote_unitario_w,
    nr_seq_preco_pacote = nr_seq_acomod_pacote_w,
    cd_porte_anestesico = cd_porte_anestesico_w,
    nr_seq_regra    = nr_seq_regra_w,
    vl_total_pacote   = vl_pacote_total_w
  where nr_sequencia    = nr_sequencia_p;
elsif (ie_tipo_p = 'E') then
  /*Obter dados do procedimento*/

  select  nr_seq_requisicao,
    cd_procedimento,
    ie_origem_proced,
    qt_item
  into STRICT  nr_seq_requisicao_w,
    cd_procedimento_w,
    ie_origem_proced_w,
    qt_procedimento_w
  from  pls_execucao_req_item
  where nr_sequencia  = nr_sequencia_p;

  /*Obter dados da guia*/

  select  nr_seq_prestador,
    cd_estabelecimento,
    dt_requisicao,
    nr_seq_tipo_acomodacao,
    nr_seq_plano,
    pls_obter_internado_guia(nr_sequencia,'R'),
    nr_seq_segurado
  into STRICT  nr_seq_prestador_w,
    cd_estabelecimento_w,
    dt_preco_w,
    nr_seq_tipo_acomodacao_w,
    nr_seq_plano_w,
    ie_internado_w,
    nr_seq_segurado_w
  from  pls_requisicao
  where nr_sequencia  = nr_seq_requisicao_w;

  begin
  select  coalesce(a.nr_contrato,0),
    b.nr_seq_congenere
  into STRICT  nr_contrato_w,
    nr_seq_congenere_w
  from  pls_contrato  a,
    pls_segurado  b
  where a.nr_sequencia  = b.nr_seq_contrato
  and b.nr_sequencia  = nr_seq_segurado_w;
  exception
  when others then
    nr_contrato_w   := 0;
  end;

  /*Obter preco do pacote*/

  SELECT * FROM pls_define_preco_pacote(cd_estabelecimento_w, nr_seq_prestador_w, nr_seq_tipo_acomodacao_w, dt_preco_w, cd_procedimento_w, ie_origem_proced_w, ie_internado_w, nr_seq_plano_w, nr_contrato_w, nr_seq_congenere_w, nm_usuario_p, '', ie_tipo_intercambio_w, nr_seq_pacote_w, nr_seq_acomod_pacote_w, cd_proc_pacote_w, ie_origem_pacote_w, vl_pacote_w, vl_medico_w, vl_anestesista_w, vl_auxiliares_w, vl_custo_operacional_w, vl_materiais_w, nr_seq_intercambio_w, nr_seq_classificacao_prest_w, null, nr_seq_segurado_w, ie_log_p, 'N', nr_seq_prest_inter_w, 1) INTO STRICT nr_seq_pacote_w, nr_seq_acomod_pacote_w, cd_proc_pacote_w, ie_origem_pacote_w, vl_pacote_w, vl_medico_w, vl_anestesista_w, vl_auxiliares_w, vl_custo_operacional_w, vl_materiais_w;

  vl_pacote_w   := (vl_pacote_w * qt_procedimento_w);

  update  pls_execucao_req_item
  set nr_seq_preco_pacote = nr_seq_acomod_pacote_w
  where nr_sequencia    = nr_sequencia_p;
elsif (ie_tipo_p = 'AA') then
  /*Obter dados do procedimento*/

  select  a.nr_seq_guia,
    b.cd_procedimento,
    b.ie_origem_proced,
    b.qt_original
  into STRICT  nr_seq_guia_w,
    cd_procedimento_w,
    ie_origem_proced_w,
    qt_procedimento_w
  from  pls_auditoria_item  b,
    pls_auditoria   a
  where b.nr_sequencia  = nr_sequencia_p
  and a.nr_sequencia  = b.nr_seq_auditoria;

  /*Obter dados da guia*/

  select  nr_seq_prestador,
    cd_estabelecimento,
    dt_solicitacao,
    nr_seq_tipo_acomodacao,
    nr_seq_plano,
    pls_obter_internado_guia(nr_sequencia,'A'),
    nr_seq_segurado
  into STRICT  nr_seq_prestador_w,
    cd_estabelecimento_w,
    dt_preco_w,
    nr_seq_tipo_acomodacao_w,
    nr_seq_plano_w,
    ie_internado_w,
    nr_seq_segurado_w
  from  pls_guia_plano
  where nr_sequencia  = nr_seq_guia_w;

  begin
  select  coalesce(a.nr_contrato,0),
    b.nr_seq_congenere
  into STRICT  nr_contrato_w,
    nr_seq_congenere_w
  from  pls_contrato  a,
    pls_segurado  b
  where a.nr_sequencia  = b.nr_seq_contrato
  and b.nr_sequencia  = nr_seq_segurado_w;
  exception
  when others then
    nr_contrato_w   := 0;
  end;

  /*Obter preco do pacote*/

  SELECT * FROM pls_define_preco_pacote(cd_estabelecimento_w, nr_seq_prestador_w, nr_seq_tipo_acomodacao_w, dt_preco_w, cd_procedimento_w, ie_origem_proced_w, ie_internado_w, nr_seq_plano_w, nr_contrato_w, nr_seq_congenere_w, nm_usuario_p, '', ie_tipo_intercambio_w, nr_seq_pacote_w, nr_seq_acomod_pacote_w, cd_proc_pacote_w, ie_origem_pacote_w, vl_pacote_w, vl_medico_w, vl_anestesista_w, vl_auxiliares_w, vl_custo_operacional_w, vl_materiais_w, nr_seq_intercambio_w, nr_seq_classificacao_prest_w, null, nr_seq_segurado_w, ie_log_p, 'N', nr_seq_prest_inter_w, 1) INTO STRICT nr_seq_pacote_w, nr_seq_acomod_pacote_w, cd_proc_pacote_w, ie_origem_pacote_w, vl_pacote_w, vl_medico_w, vl_anestesista_w, vl_auxiliares_w, vl_custo_operacional_w, vl_materiais_w;

  vl_pacote_unitario_w  := vl_pacote_w;
  vl_pacote_total_w := (vl_pacote_w * qt_procedimento_w);

  update  pls_auditoria_item
  set vl_item     = vl_pacote_unitario_w,
    nr_seq_preco_pacote = nr_seq_acomod_pacote_w,
    vl_total_pacote   = vl_pacote_total_w
  where nr_sequencia    = nr_sequencia_p;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_atualiza_valor_pacote ( nr_sequencia_p bigint, ie_tipo_p text, nm_usuario_p text, ie_atualiza_p text, ie_log_p text, ie_recalcular_conta_p text default 'N') FROM PUBLIC;

