-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ctb_gerar_dmpl ( nr_seq_dmpl_p bigint, nm_usuario_p text) AS $body$
DECLARE


dt_inicial_w			ctb_dmpl.dt_inicial%type;
dt_final_w			ctb_dmpl.dt_final%type;
cd_conta_contabil_w 		ctb_movimento.cd_conta_credito%type;
cd_conta_credito_w 		ctb_movimento.cd_conta_credito%type;
cd_conta_debito_w		ctb_movimento.cd_conta_debito%type;
cd_empresa_w			ctb_mes_ref.cd_empresa%type;
cd_estab_exclusivo_w		ctb_dmpl.cd_estab_exclusivo%type;
vl_movimento_w			ctb_movimento.vl_movimento%type;
nr_seq_mutacao_pl_w		ctb_movimento.nr_seq_mutacao_pl%type;
ie_linha_w			ctb_dmpl_movimento.ie_linha%type;
ds_linha_w			ctb_dmpl_movimento.ds_linha%type;
nr_seq_col_dmpl_w		ctb_dmpl_coluna_conta.nr_seq_col_dmpl%type;
vl_saldo_w			ctb_saldo.vl_saldo%type;
dt_mes_ant_w			ctb_dmpl.dt_final%type;
vl_soma_movto_w			ctb_movimento.vl_movimento%type;
qt_colunas_w			bigint;
ie_primeira_linha_w		boolean	:= true;
nr_seq_mes_ref_w		ctb_mes_ref.nr_sequencia%type;
nr_seq_movimento_w		ctb_dmpl_movimento.nr_sequencia%type;
ie_debito_credito_mov_w		varchar(1);
ie_debito_credito_grupo_w	ctb_grupo_conta.ie_debito_credito%type;
vl_saldo_total_w			ctb_saldo.vl_saldo%type;


C01 CURSOR FOR
SELECT 	a.cd_conta_credito cd_conta_credito,
	null cd_conta_debito,
	a.vl_movimento,
	a.nr_seq_mutacao_pl,
	d.nr_seq_col_dmpl,
	'MO',
	ctb_obter_desc_mutacao(a.nr_seq_mutacao_pl),
	'C' ie_debito_credito_mov,
	g.ie_debito_credito
from	conta_contabil f,
	ctb_grupo_conta g,
	ctb_movimento a,
	lote_contabil b,
	ctb_mes_ref c,
	ctb_dmpl_coluna_conta d,
	ctb_dmpl_coluna e
where 	a.nr_lote_contabil 	= b.nr_lote_contabil
and 	a.nr_seq_mes_ref 	= c.nr_sequencia
and 	b.nr_seq_mes_ref 	= c.nr_sequencia
and 	d.cd_conta_contabil	= a.cd_conta_credito
and	a.cd_conta_credito	= f.cd_conta_contabil
and	f.cd_grupo		= g.cd_grupo
and	e.nr_sequencia		= d.nr_seq_col_dmpl
and	e.nr_seq_dmpl		= nr_seq_dmpl_p
and	(a.nr_seq_mutacao_pl IS NOT NULL AND a.nr_seq_mutacao_pl::text <> '')
and 	(a.cd_conta_credito IS NOT NULL AND a.cd_conta_credito::text <> '')
/*and 	b.cd_tipo_lote_contabil = 54*/

and	c.cd_empresa		= cd_empresa_w
and	b.cd_estabelecimento	= coalesce(cd_estab_exclusivo_w, b.cd_estabelecimento)
and 	c.dt_referencia between dt_inicial_w and dt_final_w

union all

SELECT 	null cd_conta_credito,
	a.cd_conta_debito cd_conta_debito,
	a.vl_movimento,
	a.nr_seq_mutacao_pl,
	d.nr_seq_col_dmpl,
	'MO',
	ctb_obter_desc_mutacao(a.nr_seq_mutacao_pl),
	'D' ie_debito_credito_mov,
	g.ie_debito_credito
from	conta_contabil f,
	ctb_grupo_conta g,
	ctb_movimento a,
	lote_contabil b,
	ctb_mes_ref c,
	ctb_dmpl_coluna_conta d,
	ctb_dmpl_coluna e
where 	a.nr_lote_contabil 	= b.nr_lote_contabil
and 	a.nr_seq_mes_ref 	= c.nr_sequencia
and 	b.nr_seq_mes_ref 	= c.nr_sequencia
and 	d.cd_conta_contabil	= a.cd_conta_debito
and	e.nr_sequencia		= d.nr_seq_col_dmpl
and	a.cd_conta_debito	= f.cd_conta_contabil
and	f.cd_grupo		= g.cd_grupo
and	e.nr_seq_dmpl		= nr_seq_dmpl_p
and	(a.nr_seq_mutacao_pl IS NOT NULL AND a.nr_seq_mutacao_pl::text <> '')
and 	(a.cd_conta_debito IS NOT NULL AND a.cd_conta_debito::text <> '')
/*and 	b.cd_tipo_lote_contabil = 54*/

and	c.cd_empresa		= cd_empresa_w
and	b.cd_estabelecimento	= coalesce(cd_estab_exclusivo_w, b.cd_estabelecimento)
and 	c.dt_referencia between dt_inicial_w and dt_final_w;
	
c02 CURSOR FOR
SELECT	b.nr_sequencia
from	ctb_dmpl_coluna b
where	b.nr_seq_dmpl = nr_seq_dmpl_p;

C04 CURSOR FOR
SELECT	a.cd_conta_contabil
from	ctb_dmpl_coluna_conta a

where	a.nr_seq_col_dmpl = nr_seq_col_dmpl_w;

	
C03 CURSOR FOR
SELECT	coalesce(sum(a.vl_movimento), 0),
	a.nr_seq_col
from	ctb_dmpl_movimento a,
	ctb_dmpl_coluna c
where 	c.nr_sequencia		= a.nr_seq_col
and	c.nr_seq_dmpl		= a.nr_seq_dmpl
and	a.nr_seq_dmpl		= nr_seq_dmpl_p
group by a.nr_seq_col;


BEGIN

delete	FROM ctb_dmpl_movimento
where	nr_seq_dmpl	= nr_seq_dmpl_p;

select 	count(*)
into STRICT 	qt_colunas_w
from	ctb_dmpl_coluna
where	nr_seq_dmpl = nr_seq_dmpl_p;

if (coalesce(qt_colunas_w, 0) = 0) then
	CALL CTB_GERAR_COLUNA_DMPL(nr_seq_dmpl_p, nm_usuario_p);
end if;

select	nr_seq_mes_ref,
	cd_estab_exclusivo,
	dt_inicial,
	dt_final
into STRICT	nr_seq_mes_ref_w,
	cd_estab_exclusivo_w,
	dt_inicial_w,
	dt_final_w
from	ctb_dmpl a
where	a.nr_sequencia = nr_seq_dmpl_p;

select	cd_empresa
into STRICT	cd_empresa_w
from	ctb_mes_ref
where	nr_sequencia	= nr_seq_mes_ref_w;

dt_inicial_w	:= trunc(dt_inicial_w);
dt_final_w	:= fim_mes(dt_final_w);
dt_mes_ant_w 	:= PKG_DATE_UTILS.start_of(PKG_DATE_UTILS.ADD_MONTH(dt_inicial_w, -1, 0), 'mm', 0);

ie_linha_w 		:= 'SA';
ds_linha_w 		:= Wheb_mensagem_pck.get_texto(795422) || ' ' || to_char(PKG_DATE_UTILS.END_OF(dt_mes_ant_w,'MONTH'), 'dd/mm/yyyy');

open c02;
loop
fetch c02 into	
	nr_seq_col_dmpl_w;

EXIT WHEN NOT FOUND; /* apply on c02 */
	begin
	vl_saldo_total_w:= 0;
	open C04;
	loop
	fetch C04 into	
		cd_conta_contabil_w;
	EXIT WHEN NOT FOUND; /* apply on C04 */
		begin
		
		begin
		select	coalesce(sum(a.vl_saldo),0)
		into STRICT	vl_saldo_w
		from	ctb_saldo a,
			ctb_mes_ref b
		where	b.nr_sequencia		= a.nr_seq_mes_ref
		and 	b.dt_referencia 	= dt_mes_ant_w
		and	a.cd_conta_contabil	= cd_conta_contabil_w
		and	a.cd_estabelecimento	= coalesce(cd_estab_exclusivo_w,a.cd_estabelecimento);
		
		exception when others then
			vl_saldo_w := 0;
		end;
		
		vl_saldo_total_w := vl_saldo_total_w + vl_saldo_w;
		
		end;
	end loop;
	close C04;

	insert into ctb_dmpl_movimento(
		ds_linha,
		dt_atualizacao,
		ie_linha,
		nm_usuario ,
		nr_seq_col,
		nr_seq_dmpl,
		nr_seq_mutacao_pl,
		nr_sequencia,
		vl_movimento)
	values (	ds_linha_w,
		clock_timestamp(),
		ie_linha_w,
		nm_usuario_p,
		nr_seq_col_dmpl_w,
		nr_seq_dmpl_p,
		null,
		nextval('ctb_dmpl_movimento_seq'),
		coalesce(vl_saldo_total_w,0));
	
	commit;
	
	end;
end loop;
close c02;

open C01;
loop
fetch C01 into	
	cd_conta_credito_w,
	cd_conta_debito_w,
	vl_movimento_w,
	nr_seq_mutacao_pl_w,
	nr_seq_col_dmpl_w,
	ie_linha_w,
	ds_linha_w,
	ie_debito_credito_mov_w,
	ie_debito_credito_grupo_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	
	cd_conta_contabil_w := coalesce(cd_conta_credito_w, '0');
	
	if (cd_conta_contabil_w = '0' )then
		cd_conta_contabil_w := cd_conta_debito_w;
	end if;
	
	begin
	select	a.nr_sequencia
	into STRICT	nr_seq_movimento_w
	from	ctb_dmpl_movimento a
	where	a.nr_seq_dmpl		= nr_seq_dmpl_p
	and	a.nr_seq_col		= nr_seq_col_dmpl_w
	and	a.nr_seq_mutacao_pl	= nr_seq_mutacao_pl_w;
	exception when no_data_found then
		nr_seq_movimento_w	:= null;
	end;
	
	if (ie_debito_credito_mov_w <> ie_debito_credito_grupo_w) then
		vl_movimento_w	:= vl_movimento_w * -1;
	end if;
	
	
	
	if (coalesce(nr_seq_movimento_w,0) = 0) then
		begin
		
		insert into ctb_dmpl_movimento(
			nr_sequencia,
			nr_seq_dmpl,
			nr_seq_col,
			nr_seq_mutacao_pl,
			dt_atualizacao,
			nm_usuario ,
			ie_linha,
			ds_linha,
			vl_movimento)
		values (	nextval('ctb_dmpl_movimento_seq'),
			nr_seq_dmpl_p,
			nr_seq_col_dmpl_w,
			nr_seq_mutacao_pl_w,
			clock_timestamp(),
			nm_usuario_p,
			ie_linha_w,
			ds_linha_w,
			coalesce(vl_movimento_w,0));
			
		end;
	else
		begin
		
		update	ctb_dmpl_movimento
		set	vl_movimento	= coalesce(vl_movimento,0) + vl_movimento_w
		where	nr_sequencia	= nr_seq_movimento_w;

		end;
	end if;
	commit;
	end;
end loop;
close C01;

ie_linha_w 	:= 'SF';
ds_linha_w 	:= Wheb_mensagem_pck.get_texto(795208) || ' ' || to_char(dt_final_w,'dd/mm/yyyy');
open C03;
loop
fetch C03 into	
	vl_soma_movto_w,
	nr_seq_col_dmpl_w;
EXIT WHEN NOT FOUND; /* apply on C03 */
	begin
	
	
	insert into ctb_dmpl_movimento(
		nr_sequencia,
		nr_seq_dmpl,
		nr_seq_col,
		nr_seq_mutacao_pl,
		dt_atualizacao,
		nm_usuario ,
		ie_linha,
		ds_linha,
		vl_movimento)
	values (	nextval('ctb_dmpl_movimento_seq'),
		nr_seq_dmpl_p,
		nr_seq_col_dmpl_w,
		null,
		clock_timestamp(),
		nm_usuario_p,
		ie_linha_w,
		ds_linha_w,
		vl_soma_movto_w);

	commit;
	
	end;
end loop;
close C03;
															
commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_gerar_dmpl ( nr_seq_dmpl_p bigint, nm_usuario_p text) FROM PUBLIC;

