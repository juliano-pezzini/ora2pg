-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE diops_gerar_idadesaldo_ativo ( nr_seq_operadora_p bigint, nr_seq_transacao_p bigint, nr_seq_periodo_p bigint, nm_usuario_p text) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Gerar as informacoes de valores de idade saldo ativo conforme as regras e 
o periodo.
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[ X ]  Objetos do dicionario [  ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao:
-------------------------------------------------------------------------------------------------------------------

Referencias:
	DIOPS_FIN_GERAR_IDADE_SALDO
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
cd_conta_contabil_w			varchar(20);
cd_conta_deb_w				varchar(20);
cd_ans_w				varchar(20);
cd_ans_pj_w				varchar(20);
cd_cgc_w				varchar(14);
cd_pessoa_fisica_w			varchar(10);
ie_tipo_vencimento_w			varchar(5);
ie_vencimento_ativo_w			varchar(3);
ie_conta_mensalidade_w			varchar(1)	:= 'N';
ie_normal_encerramento_w		varchar(1);
ie_ans_pj_w				varchar(1);
vl_item_w				double precision;
vl_ind_familiar_w			double precision;
vl_pre_estabelecido_w			double precision;
vl_pos_estabelecido_w			double precision;
vl_taxa_adm_w				double precision;
vl_credito_operadora_w			double precision;
vl_credito_oper_pos_w			double precision;
vl_outros_creditos_w			double precision;
vl_individual_pos_w			double precision;
vl_conv_receber_w			double precision;
vl_part_benefes_w			double precision;
vl_outros_creditos_sem_plano_w		double precision;
vl_restricao_w				double precision;
ie_ordem_w				bigint	:= null;
nr_titulo_w				bigint;
nr_tit_antecipacao_w			bigint;
qt_diops_w				bigint;
qt_dias_w				bigint;
qt_dias_vencidos_w			integer	:= 0;
cd_estabelecimento_w			estabelecimento.cd_estabelecimento%type;
cd_estab_periodo_w			estabelecimento.cd_estabelecimento%type;
cd_empresa_w                    	empresa.cd_empresa%type;
ie_idade_saldo_ativo_w			smallint;
dt_periodo_inicial_w			timestamp;
dt_periodo_final_w			timestamp;
dt_vencimento_w				timestamp;
dt_periodo_final_ld_w			timestamp;
dt_periodo_final_trunc_w		timestamp;
dt_periodo_final_fdld_w			timestamp;
dt_periodo_final_fd_w			timestamp;
dt_periodo_inicial_trunc_w		timestamp;
dt_periodo_inicial_fdld_w		timestamp;
dt_inicio_cobertura_w			timestamp;

nr_seq_cheque_w				w_diops_fin_idadesaldo_ati.nr_seq_cheque%type;

c_regras CURSOR FOR
	SELECT	a.ie_idade_saldo_ativo,
		b.cd_conta_contabil,
		a.ie_vencimento_ativo,
		b.cd_ans,
		coalesce(b.ie_ans_pj, 'N')
	from	diops_conta_idade_saldo	b,
		diops_idade_saldo	a
	where	a.nr_sequencia		= b.nr_seq_idade_saldo
	and	a.nr_seq_transacao	= nr_seq_transacao_p
	and	(a.ie_idade_saldo_ativo IS NOT NULL AND a.ie_idade_saldo_ativo::text <> '')
	and	(b.cd_conta_contabil IS NOT NULL AND b.cd_conta_contabil::text <> '')
	order by
		CASE WHEN a.ie_vencimento_ativo=400 THEN  0  ELSE 1 END ,
		a.ie_idade_saldo_ativo;
	
c_titulos_abertos CURSOR FOR
	/* Titulos pendentes sem antecipacao */

	SELECT	t.dt_pagamento_previsto dt_vencimento,
		b.cd_conta_contabil,
		obter_valor_classif_tit_rec(t.nr_titulo, b.nr_sequencia, Obter_Saldo_Titulo_Receber(t.nr_titulo,dt_periodo_final_w)),
		b.nr_titulo,
		obter_saldo_titulo_receber(t.nr_titulo,dt_periodo_final_w) vl_restricao,
		1 ie_ordem,
		(SELECT	max(x.cd_ans)
		from	pessoa_juridica	x
		where	x.cd_cgc	= t.cd_cgc) cd_ans,
		null dt_inicio_cobertura
	from	titulo_receber_classif		b,
		titulo_receber		   	t
	where	t.nr_titulo		   	= b.nr_titulo
	and	t.dt_emissao	  		< dt_periodo_final_fd_w
	and	b.cd_conta_contabil  		= cd_conta_contabil_w
	--and	obter_saldo_titulo_receber(t.nr_titulo,dt_periodo_final_w) > 0
	and	((coalesce(t.dt_liquidacao::text, '') = '') or (t.dt_liquidacao > dt_periodo_final_ld_w))
	and	coalesce(t.nr_seq_mensalidade::text, '') = ''
	and 	t.dt_contabil	<= dt_periodo_final_w
	and	t.ie_situacao <> '3'
	and	t.cd_estabelecimento		in (    select  x.cd_estabelecimento
							from	empresa z,
								estabelecimento y,
								diops_estab_adicional x
							where	x.cd_estabelecimento = y.cd_estabelecimento
							and	y.cd_empresa = z.cd_empresa
							and	z.cd_empresa = cd_empresa_w
							
union

							select	cd_estab_periodo_w
							)
	
union

	select	t.dt_pagamento_previsto dt_vencimento,
		b.cd_conta_contabil,
		case when t.dt_contabil > dt_periodo_final_w then
			b.vl_classificacao
		else
			PERFORM obter_valor_classif_tit_rec(t.nr_titulo, b.nr_sequencia, Obter_Saldo_Titulo_Receber(t.nr_titulo,dt_periodo_final_w))
		end,
		b.nr_titulo,
		obter_saldo_titulo_receber(t.nr_titulo,dt_periodo_final_w) vl_restricao,
		2 ie_ordem,
		null cd_ans,
		null dt_inicio_cobertura
	from	pls_lote_mensalidade		e,
		pls_mensalidade c,
		titulo_receber_classif		b,
		titulo_receber		   	t
	where	t.nr_titulo		   	= b.nr_titulo
	and	t.nr_seq_mensalidade		= c.nr_sequencia
	and	e.nr_sequencia			= c.nr_seq_lote
	and	coalesce(t.dt_contabil,CASE WHEN e.ie_mensalidade_mes_anterior='S' THEN  e.dt_mesano_referencia  ELSE c.dt_referencia END ) < dt_periodo_final_w
	and	b.cd_conta_contabil  		= cd_conta_contabil_w
	and	((coalesce(t.dt_liquidacao::text, '') = '') or (t.dt_liquidacao > dt_periodo_final_ld_w))
	and	t.ie_situacao <> '3'
	and 	t.dt_contabil	<= dt_periodo_final_w
	and	t.cd_estabelecimento		in (    select  x.cd_estabelecimento
						from	empresa z,
							estabelecimento y,
							diops_estab_adicional x
						where	x.cd_estabelecimento = y.cd_estabelecimento
						and	y.cd_empresa = z.cd_empresa
						and	z.cd_empresa = cd_empresa_w
						
union

						select	cd_estab_periodo_w
						)
	--and	obter_saldo_titulo_receber(t.nr_titulo,dt_periodo_final_w) > 0
	
union all

	/* Titulos com antecipacao do mes seguinte */

	select	t.dt_pagamento_previsto dt_vencimento,
		b.cd_conta_deb_pls,
		sum(b.vl_antecipacao_mens),
		t.nr_titulo,
		0 vl_restricao,
		3 ie_ordem,
		null cd_ans,
		coalesce(v.dt_inicio_cobertura, u.dt_inicio_cobertura) dt_inicio_cobertura
	from	pls_mensalidade x,
		pls_mensalidade_segurado v,
		pls_mensalidade_seg_item u,
		titulo_receber		t,
		titulo_rec_liq_cc	b,
		titulo_receber_liq	a
	where	b.nr_titulo		= a.nr_titulo
	and	a.nr_titulo		= t.nr_titulo
	and	b.nr_seq_baixa		= a.nr_sequencia
	and	b.nr_seq_mens_seg_item	= u.nr_sequencia
	and	u.nr_seq_mensalidade_seg= v.nr_sequencia
	and	v.nr_seq_mensalidade	= x.nr_sequencia
	and	b.cd_conta_deb_pls	= cd_conta_contabil_w
	and (b.vl_antecipacao_mens IS NOT NULL AND b.vl_antecipacao_mens::text <> '')
	and	a.dt_recebimento between dt_periodo_final_trunc_w and dt_periodo_final_ld_w
	and	((coalesce(t.dt_liquidacao::text, '') = '') or 
		--(t.dt_liquidacao >= DIOPS_OBTER_INICIO_COBERTURA(x.dt_referencia, to_date(pls_obter_dados_segurado(v.nr_seq_segurado,'D'), 'dd/mm/yyyy')) and
		(t.dt_liquidacao >= dt_periodo_final_fd_w and
		((a.dt_recebimento > dt_periodo_final_w) or (t.dt_liquidacao <= dt_periodo_final_fd_w)) ))
	and	t.ie_situacao <> '3'
	and	a.dt_antecipacao_pls_mens 	>= dt_periodo_final_w
	and	dt_referencia_pls_mens		<= dt_periodo_final_w
	and	trunc(a.dt_recebimento,'month') = last_day(dt_periodo_final_w)  --
	and 	t.dt_contabil	<= dt_periodo_final_w
	and	t.cd_estabelecimento	in (    select  x.cd_estabelecimento
						from	empresa z,
							estabelecimento y,
							diops_estab_adicional x
						where	x.cd_estabelecimento = y.cd_estabelecimento
						and	y.cd_empresa = z.cd_empresa
						and	z.cd_empresa = cd_empresa_w
						
union

						select	cd_estab_periodo_w
						)
	--and	a.dt_recebimento		> = t.dt_emissao
	GROUP BY
		v.dt_inicio_cobertura,
		u.dt_inicio_cobertura,
		t.dt_pagamento_previsto,
		b.cd_conta_deb_pls,
		t.nr_titulo
	 HAVING	sum(b.vl_antecipacao_mens)	<> 0
	
union all

	/* Titulos com antecipacao do mes seguinte */

	select	t.dt_pagamento_previsto dt_vencimento,
		b.cd_conta_deb_pls,
		sum(b.vl_antecipacao_mens),
		t.nr_titulo,
		0 vl_restricao,
		3 ie_ordem,
		null cd_ans,
		coalesce(v.dt_inicio_cobertura, u.dt_inicio_cobertura) dt_inicio_cobertura
	from	pls_mensalidade_segurado v,
		pls_mensalidade_seg_item u,
		pls_mensalidade c,
		titulo_receber		t,
		titulo_rec_liq_cc	b,
		titulo_receber_liq	a
	where	b.nr_titulo		= a.nr_titulo
	and	a.nr_titulo		= t.nr_titulo
	and	b.nr_seq_baixa		= a.nr_sequencia
	and	c.nr_sequencia		= t.nr_seq_mensalidade
	and	b.cd_conta_deb_pls	= cd_conta_contabil_w
	and	b.nr_seq_mens_seg_item	= u.nr_sequencia
	and	u.nr_seq_mensalidade_seg= v.nr_sequencia
	and (b.vl_antecipacao_mens IS NOT NULL AND b.vl_antecipacao_mens::text <> '')
	and (b.vl_pro_rata IS NOT NULL AND b.vl_pro_rata::text <> '')
	and	c.dt_referencia between dt_periodo_final_trunc_w and dt_periodo_final_ld_w
	and	((coalesce(t.dt_liquidacao::text, '') = '') or
		t.dt_liquidacao >= dt_periodo_final_fd_w)
		--t.dt_liquidacao >= DIOPS_OBTER_INICIO_COBERTURA(c.dt_referencia, to_date(pls_obter_dados_segurado(v.nr_seq_segurado,'D'), 'dd/mm/yyyy')))
	and	a.dt_recebimento >= dt_periodo_inicial_trunc_w
	and	a.dt_recebimento < dt_periodo_final_trunc_w
	--and	t.dt_liquidacao < trunc(dt_periodo_final_w,'month')
	and 	t.dt_liquidacao between dt_periodo_final_trunc_w and dt_periodo_final_fdld_w
	and 	t.dt_contabil	<= dt_periodo_final_w
	and	t.ie_situacao <> '3'
	and	t.cd_estabelecimento	in (    select  x.cd_estabelecimento
						from	empresa z,
							estabelecimento y,
							diops_estab_adicional x
						where	x.cd_estabelecimento = y.cd_estabelecimento
						and	y.cd_empresa = z.cd_empresa
						and	z.cd_empresa = cd_empresa_w
						
union

						select	cd_estab_periodo_w
						)
	GROUP BY 
		v.dt_inicio_cobertura,
		u.dt_inicio_cobertura,
		t.dt_pagamento_previsto,
		b.cd_conta_deb_pls,
		t.nr_titulo
	 HAVING	sum(b.vl_recebido)	<> 0
	
union all

	/* Titulos com antecipacao do mes seguinte, total */

	select	t.dt_pagamento_previsto dt_vencimento,
		b.cd_conta_deb_pls,
		sum(b.vl_recebido),
		t.nr_titulo,
		0 vl_restricao,
		3 ie_ordem,
		null cd_ans,
		coalesce(v.dt_inicio_cobertura, u.dt_inicio_cobertura) dt_inicio_cobertura
	from	pls_mensalidade_segurado v,
		pls_mensalidade_seg_item u,
		pls_lote_mensalidade d,
		pls_mensalidade 	c,
		titulo_receber		t,
		titulo_rec_liq_cc	b,
		titulo_receber_liq	a
	where	b.nr_titulo		= a.nr_titulo
	and	a.nr_titulo		= t.nr_titulo
	and	b.nr_seq_baixa		= a.nr_sequencia
	and	c.nr_sequencia		= t.nr_seq_mensalidade
	and	c.nr_seq_lote		= d.nr_sequencia
	and	b.nr_seq_mens_seg_item	= u.nr_sequencia
	and	u.nr_seq_mensalidade_seg= v.nr_sequencia
	and	b.cd_conta_deb_pls	= cd_conta_contabil_w
	and	((coalesce(t.dt_liquidacao::text, '') = '') or t.dt_liquidacao >= DIOPS_OBTER_INICIO_COBERTURA(c.dt_referencia, to_date(pls_obter_dados_segurado(v.nr_seq_segurado,'D'), 'dd/mm/yyyy')))
	and (b.vl_antecipacao_mens IS NOT NULL AND b.vl_antecipacao_mens::text <> '')
	and (b.vl_pro_rata IS NOT NULL AND b.vl_pro_rata::text <> '')
	and	d.dt_contabilizacao < dt_periodo_final_ld_w
	and	d.dt_mesano_referencia > dt_periodo_final_ld_w
	and	a.dt_recebimento >= dt_periodo_inicial_trunc_w
	and	a.dt_recebimento < dt_periodo_final_ld_w
	and	t.dt_liquidacao < dt_periodo_final_ld_w
	and 	t.dt_contabil	<= dt_periodo_final_w
	and	t.ie_situacao <> '3'
	and	coalesce(b.ie_lote_pro_rata::text, '') = ''
	and	t.cd_estabelecimento	in (    select  x.cd_estabelecimento
						from	empresa z,
							estabelecimento y,
							diops_estab_adicional x
						where	x.cd_estabelecimento = y.cd_estabelecimento
						and	y.cd_empresa = z.cd_empresa
						and	z.cd_empresa = cd_empresa_w
						
union

						select	cd_estab_periodo_w
						)
	GROUP BY 
		v.dt_inicio_cobertura,
		u.dt_inicio_cobertura,
		t.dt_pagamento_previsto,
		b.cd_conta_deb_pls,
		t.nr_titulo
	 HAVING	sum(b.vl_recebido)	<> 0
	
union all

	select	d.dt_pagamento_previsto dt_vencimento,
		a.cd_conta_deb,
		sum(a.vl_antecipacao),
		d.nr_titulo,
		0 vl_restricao,
		3 ie_ordem,
		null cd_ans,
		coalesce(b.dt_inicio_cobertura, a.dt_inicio_cobertura) dt_inicio_cobertura
	from	titulo_receber 			d,
		pls_mensalidade_seg_item	a,
		pls_mensalidade_segurado	b,
		pls_mensalidade 		c,
		pls_lote_mensalidade		e
	where	a.nr_seq_mensalidade_seg	= b.nr_sequencia
	and	b.nr_seq_mensalidade		= c.nr_sequencia
	and	c.nr_sequencia			= d.nr_seq_mensalidade
	and	e.nr_sequencia			= c.nr_seq_lote
	and	not exists (	select 	1
				from	titulo_receber_liq x
				where	x.nr_titulo = d.nr_titulo)
	and	a.cd_conta_deb = cd_conta_contabil_w
	and	c.dt_referencia between dt_periodo_final_trunc_w and dt_periodo_final_fdld_w
	and	e.dt_mesano_referencia between dt_periodo_inicial_trunc_w and dt_periodo_final_fdld_w
	and	((coalesce(d.dt_liquidacao::text, '') = '') or d.dt_liquidacao > dt_periodo_inicial_fdld_w)
	and	((coalesce(d.dt_liquidacao::text, '') = '') or (e.dt_contabilizacao IS NOT NULL AND e.dt_contabilizacao::text <> '' AND d.dt_liquidacao > e.dt_contabilizacao) or d.dt_liquidacao >= DIOPS_OBTER_INICIO_COBERTURA(coalesce(e.dt_contabilizacao, c.dt_referencia), to_date(pls_obter_dados_segurado(b.nr_seq_segurado,'D'), 'dd/mm/yyyy')))
	and (d.dt_liquidacao >= e.dt_mesano_referencia or coalesce(d.dt_liquidacao::text, '') = '')
	and	a.ie_tipo_item <> 20
	and	d.ie_situacao <> '3'
	and	((d.vl_titulo = 0 and d.dt_liquidacao > dt_periodo_final_w) or (d.dt_liquidacao < e.dt_mesano_referencia))
	and 	d.dt_contabil	<= dt_periodo_final_w
	and	d.cd_estabelecimento		in (    select  x.cd_estabelecimento
							from	empresa z,
								estabelecimento y,
								diops_estab_adicional x
							where	x.cd_estabelecimento = y.cd_estabelecimento
							and	y.cd_empresa = z.cd_empresa
							and	z.cd_empresa = cd_empresa_w
							
union

							select	cd_estab_periodo_w
							)
	having	sum(a.vl_antecipacao) <> 0
	group by 
		b.dt_inicio_cobertura,
		a.dt_inicio_cobertura,
		d.dt_pagamento_previsto,
		a.cd_conta_deb,
		d.nr_titulo;
	
c_itens CURSOR FOR
	SELECT	vl_dominio
	from	valor_dominio_v
	where	cd_dominio	= 2183
	and	vl_dominio not in ('120','365','200')
	and	vl_dominio not in (	SELECT	ie_tipo_vencimento
					from 	w_diops_fin_idadesaldo_ati 
					where 	nr_seq_periodo	= nr_seq_periodo_p 
					group by ie_tipo_vencimento);

c_agrupador CURSOR FOR
	SELECT	ie_tipo_vencimento,
		coalesce(sum(vl_individual),0),
		coalesce(sum(vl_coletivo_pre),0), 
		coalesce(sum(vl_coletivo_pos),0),
		coalesce(sum(vl_taxa_adm),0),
		coalesce(sum(vl_credito_operadoras),0),
		coalesce(sum(vl_credito_oper_pos),0),
		coalesce(sum(vl_outros_creditos),0),
		coalesce(sum(vl_individual_pos),0),
		coalesce(sum(vl_conv_receber),0),
		coalesce(sum(vl_part_benefes),0),
		coalesce(sum(vl_outros_creditos_sem_plano),0)
	from  	w_diops_fin_idadesaldo_ati
	where	nr_seq_periodo	= nr_seq_periodo_p
	group by ie_tipo_vencimento;
	
		
c_itens_ppsc CURSOR FOR
	SELECT	b.nr_seq_titulo,
		b.nr_seq_cheque,
		coalesce(sum(a.vl_saldo_contabil),0) * -1 vl_saldo_contabil
	from	pls_ppsc_lote		c,
		pls_ppsc_movimento	b,
		pls_ppsc_movimento_item	a
	where	b.nr_sequencia		= a.nr_seq_movimento
	and	c.nr_sequencia		= b.nr_seq_lote
	and	a.cd_conta_cred		= cd_conta_contabil_w
	and	c.dt_lote between dt_periodo_final_trunc_w and dt_periodo_final_fdld_w
	group by
		b.nr_seq_titulo,
		b.nr_seq_cheque
	
union

	SELECT	b.nr_seq_titulo,
		b.nr_seq_cheque,
		coalesce(sum(b.vl_saldo_titulo),0) * -1 vl_saldo_contabil
	from	pls_ppsc_lote		c,
		pls_ppsc_movimento	b
	where	c.nr_sequencia		= b.nr_seq_lote
	and	b.cd_conta_credito	= cd_conta_contabil_w
	and	not exists (select	1
				from	pls_ppsc_movimento_item	a
				where	b.nr_sequencia		= a.nr_seq_movimento)
	and	c.dt_lote between dt_periodo_final_trunc_w and dt_periodo_final_fdld_w
	group by
		b.nr_seq_titulo,
		b.nr_seq_cheque
	
union

	select	b.nr_seq_titulo,
		b.nr_seq_cheque,
		coalesce(sum(a.vl_saldo_contabil),0) * -1 vl_saldo_contabil
	from	pls_ppsc_lote		c,
		pls_ppsc_movimento	b,
		pls_ppsc_movimento_item	a
	where	b.nr_sequencia		= a.nr_seq_movimento
	and	c.nr_sequencia		= b.nr_seq_lote
	and	a.cd_conta_deb		= cd_conta_contabil_w
	and	c.dt_lote between dt_periodo_final_trunc_w and dt_periodo_final_fdld_w
	group by
		b.nr_seq_titulo,
		b.nr_seq_cheque
	
union

	select	b.nr_seq_titulo,
		b.nr_seq_cheque,
		coalesce(sum(b.vl_saldo_titulo),0) * -1 vl_saldo_contabil
	from	pls_ppsc_lote		c,
		pls_ppsc_movimento	b
	where	c.nr_sequencia		= b.nr_seq_lote
	and	b.cd_conta_debito	= cd_conta_contabil_w
	and	not exists (select	1
				from	pls_ppsc_movimento_item	a
				where	b.nr_sequencia		= a.nr_seq_movimento)
	and	c.dt_lote between dt_periodo_final_trunc_w and dt_periodo_final_fdld_w
	group by
		b.nr_seq_titulo,
		b.nr_seq_cheque
	order by
		nr_seq_titulo,
		nr_seq_cheque;
	

BEGIN
begin /* Obter o periodo trimestral do DIOPS */
select	coalesce(a.dt_periodo_inicial,''),
	coalesce(a.dt_periodo_final, ''),
	a.cd_estabelecimento,
	coalesce(a.ie_normal_encerramento, 'N')
into STRICT	dt_periodo_inicial_w,
	dt_periodo_final_w,
	cd_estab_periodo_w,
	ie_normal_encerramento_w
from	diops_periodo	a
where	a.nr_sequencia	= nr_seq_periodo_p;
exception
when others then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(174234, 'NR_SEQ_OPERADORA=' || nr_seq_operadora_p || ';' ||
							'NR_SEQ_PERIODO=' || nr_seq_periodo_p);
end;	

begin
select	b.cd_empresa
into STRICT	cd_empresa_w
from	empresa b,
	estabelecimento a
where	b.cd_empresa = a.cd_empresa
and	a.cd_estabelecimento = cd_estab_periodo_w;
exception
when others then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(183309,'NR_SEQ_OPERADORA='|| nr_seq_operadora_p);
end;

begin /* Obter o estabelecimento da operadora */
select	a.cd_estabelecimento
into STRICT	cd_estabelecimento_w
from	pls_outorgante	a
where	a.nr_sequencia	= nr_seq_operadora_p;
exception
when others then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(183309,'NR_SEQ_OPERADORA=' || nr_seq_operadora_p);
end;

dt_periodo_final_ld_w		:= fim_dia(last_day(dt_periodo_final_w));
dt_periodo_final_trunc_w	:= trunc(dt_periodo_final_w, 'month');
dt_periodo_final_fdld_w		:= fim_dia(dt_periodo_final_ld_w);
dt_periodo_final_fd_w		:= fim_dia(dt_periodo_final_w);
dt_periodo_inicial_trunc_w	:= trunc(dt_periodo_inicial_w,'month');
dt_periodo_inicial_fdld_w	:= fim_dia(last_day(dt_periodo_inicial_w));

open c_regras;
loop
fetch c_regras into	
	ie_idade_saldo_ativo_w,
	cd_conta_contabil_w,
	ie_vencimento_ativo_w,
	cd_ans_w,
	ie_ans_pj_w;
EXIT WHEN NOT FOUND; /* apply on c_regras */
	begin
	ie_conta_mensalidade_w	:= 'N';
	
	if (coalesce(ie_vencimento_ativo_w::text, '') = '') then
		open c_titulos_abertos;
		loop
		fetch c_titulos_abertos into	
			dt_vencimento_w,
			cd_conta_deb_w,
			vl_item_w,
			nr_titulo_w,
			vl_restricao_w,
			ie_ordem_w,
			cd_ans_pj_w,
			dt_inicio_cobertura_w;
		EXIT WHEN NOT FOUND; /* apply on c_titulos_abertos */
			begin
			if (ie_ans_pj_w = 'S') then
				cd_ans_w	:= cd_ans_pj_w;
			end if;
			
			if (ie_ordem_w <> 3) then
				if (vl_restricao_w < 0) then
					goto final;
				end if;
			end if;
			
			ie_conta_mensalidade_w	:= 'S';
			
			if (dt_vencimento_w	>= dt_periodo_final_w) then
				qt_dias_vencidos_w	:= 0;
			else
				qt_dias_vencidos_w	:= (dt_periodo_final_w - dt_vencimento_w);
				if (qt_dias_vencidos_w	< 0) then
					qt_dias_vencidos_w	:= 0;
				end if;
			end if;
			
			if (qt_dias_vencidos_w	= 0) then
				ie_tipo_vencimento_w	:= '00';
			elsif (qt_dias_vencidos_w	< 31) then
				ie_tipo_vencimento_w	:= '30';
			elsif (qt_dias_vencidos_w	< 61) then
				ie_tipo_vencimento_w	:= '60';
			elsif (qt_dias_vencidos_w	< 91) then
				ie_tipo_vencimento_w	:= '90';
			/*elsif	(qt_dias_vencidos_w	< 121) then
				ie_tipo_vencimento_w	:= '120';
			elsif	(qt_dias_vencidos_w	< 366) then
				ie_tipo_vencimento_w	:= '365';*/
			else
				ie_tipo_vencimento_w	:= '999';
			end if;
			
			vl_ind_familiar_w		:= 0;
			vl_pre_estabelecido_w		:= 0;
			vl_pos_estabelecido_w		:= 0;
			vl_taxa_adm_w			:= 0;
			vl_credito_operadora_w		:= 0;
			vl_credito_oper_pos_w		:= 0;
			vl_outros_creditos_w		:= 0;
			vl_individual_pos_w		:= 0;
			vl_conv_receber_w		:= 0;
			vl_part_benefes_w		:= 0;
			vl_outros_creditos_sem_plano_w	:= 0;
			
			if (ie_idade_saldo_ativo_w	= 1) then /* Planos Individuais/Familiares - Preco pre-estabelecido */
				vl_ind_familiar_w		:= vl_item_w;
			elsif (ie_idade_saldo_ativo_w	= 2) then /* Planos coletivos a preco  pre-estabelecido */
				vl_pre_estabelecido_w		:= vl_item_w;
			elsif (ie_idade_saldo_ativo_w	= 3) then /* Planos coletivos a preco pos-estabelecidos */
				vl_pos_estabelecido_w		:= vl_item_w;
			elsif (ie_idade_saldo_ativo_w	= 4) then /* Taxa de adm. / partic. dos benef. */
				vl_taxa_adm_w			:= vl_item_w;
			elsif (ie_idade_saldo_ativo_w	= 5) then /* Creditos de operadoras */
				vl_credito_operadora_w		:= vl_item_w;
			elsif (ie_idade_saldo_ativo_w	= 6) then /* Outros creditos */
				vl_outros_creditos_w		:= vl_item_w;
			elsif (ie_idade_saldo_ativo_w	= 7) then /* Planos Individuais/Familiares - Preco pos-estabelecido */
				vl_individual_pos_w		:= vl_item_w;
			elsif (ie_idade_saldo_ativo_w	= 8) then /* Convenios a Receber / Outras */
				vl_conv_receber_w		:= vl_item_w;
			elsif (ie_idade_saldo_ativo_w	= 9) then /* Participacao dos beneficiarios em Eventos/ Sinistros */
				vl_part_benefes_w		:= vl_item_w;
			elsif (ie_idade_saldo_ativo_w	= 10) then /* Outros creditos nao relacionados com planos (Subgrupo 124) */
				vl_outros_creditos_sem_plano_w	:= vl_item_w;
			elsif (ie_idade_saldo_ativo_w	= 11) then /* Creditos de operadoras pos-estabelecido */
				vl_credito_oper_pos_w		:= vl_item_w;
			end if;
			
			insert into w_diops_fin_idadesaldo_ati(nr_sequencia,
				nr_seq_operadora,
				nr_seq_transacao,
				nr_seq_periodo,
				ie_tipo_vencimento,
				vl_individual,
				vl_coletivo_pre,
				vl_coletivo_pos,
				vl_taxa_adm,
				vl_credito_operadoras,
				vl_credito_oper_pos,
				dt_atualizacao,
				nm_usuario,
				vl_outros_creditos,
				vl_individual_pos,
				vl_conv_receber,
				vl_part_benefes,
				vl_outros_creditos_sem_plano,
				ie_idade_saldo_ativo,
				cd_conta_contabil,
				nr_titulo,
				cd_ans,
				dt_inicio_cobertura)
			values (nextval('w_diops_fin_idadesaldo_ati_seq'),
				nr_seq_operadora_p,
				nr_seq_transacao_p,
				nr_seq_periodo_p,
				ie_tipo_vencimento_w,
				vl_ind_familiar_w,
				vl_pre_estabelecido_w,
				vl_pos_estabelecido_w,
				vl_taxa_adm_w,
				vl_credito_operadora_w,
				vl_credito_oper_pos_w,
				clock_timestamp(),
				nm_usuario_p,
				vl_outros_creditos_w,
				vl_individual_pos_w,
				vl_conv_receber_w,
				vl_part_benefes_w,
				vl_outros_creditos_sem_plano_w,
				ie_idade_saldo_ativo_w,
				cd_conta_deb_w,
				nr_titulo_w,
				cd_ans_w,
				dt_inicio_cobertura_w);
			if (cd_conta_deb_w IS NOT NULL AND cd_conta_deb_w::text <> '') then
				insert into diops_idadesaldo_contab(nr_sequencia,
					cd_estabelecimento,
					nr_seq_periodo,
					nr_seq_operadora,
					cd_conta_contabil,
					dt_atualizacao, 
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec, 
					ie_tipo_idade_saldo,
					ie_idade_saldo_ativo,
					vl_contabil, 
					nr_titulo)
				values (nextval('diops_idadesaldo_contab_seq'),
					cd_estabelecimento_w,
					nr_seq_periodo_p, 
					nr_seq_operadora_p,
					cd_conta_deb_w,
					clock_timestamp(), 
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					'A',
					ie_idade_saldo_ativo_w,
					vl_item_w, 
					nr_titulo_w);
			end if;
			
			<<final>>
			ie_ordem_w	:= ie_ordem_w;
			end;
		end loop;
		close c_titulos_abertos;
	else
		if (ie_vencimento_ativo_w = '400') then /* PPSC */
			open c_itens_ppsc;
			loop
			fetch c_itens_ppsc into	
				nr_titulo_w,
				nr_seq_cheque_w,
				vl_item_w;
			EXIT WHEN NOT FOUND; /* apply on c_itens_ppsc */
				begin
				vl_ind_familiar_w		:= 0;
				vl_pre_estabelecido_w		:= 0;
				vl_pos_estabelecido_w		:= 0;
				vl_taxa_adm_w			:= 0;
				vl_credito_operadora_w		:= 0;
				vl_credito_oper_pos_w		:= 0;
				vl_outros_creditos_w		:= 0;
				vl_individual_pos_w		:= 0;
				vl_conv_receber_w		:= 0;
				vl_part_benefes_w		:= 0;
				vl_outros_creditos_sem_plano_w	:= 0;
				
				if (nr_seq_cheque_w IS NOT NULL AND nr_seq_cheque_w::text <> '') then
					select	count(1)
					into STRICT	qt_diops_w
					from	w_diops_fin_idadesaldo_ati a
					where	a.nr_seq_periodo	= nr_seq_periodo_p
					and	a.ie_tipo_vencimento	= ie_vencimento_ativo_w
					and	a.ie_idade_saldo_ativo	= ie_idade_saldo_ativo_w
					and	a.cd_conta_contabil	= cd_conta_contabil_w
					and	a.nr_seq_cheque		= nr_seq_cheque_w  LIMIT 1;
				else
					select	count(1)
					into STRICT	qt_diops_w
					from	w_diops_fin_idadesaldo_ati a
					where	a.nr_seq_periodo	= nr_seq_periodo_p
					and	a.ie_tipo_vencimento	= ie_vencimento_ativo_w
					and	a.ie_idade_saldo_ativo	= ie_idade_saldo_ativo_w
					and	a.cd_conta_contabil	= cd_conta_contabil_w
					and	a.nr_titulo		= nr_titulo_w  LIMIT 1;
				end if;
				
				if (qt_diops_w = 0) then	
					if (ie_idade_saldo_ativo_w	= 1) then /* Planos Individuais/Familiares - Preco pre-estabelecido */
						vl_ind_familiar_w		:= vl_item_w;
					elsif (ie_idade_saldo_ativo_w	= 2) then /* Planos coletivos a preco  pre-estabelecido */
						vl_pre_estabelecido_w		:= vl_item_w;
					elsif (ie_idade_saldo_ativo_w	= 3) then /* Planos coletivos a preco pos-estabelecidos */
						vl_pos_estabelecido_w		:= vl_item_w;
					elsif (ie_idade_saldo_ativo_w	= 4) then /* Taxa de adm. / partic. dos benef. */
						vl_taxa_adm_w			:= vl_item_w;
					elsif (ie_idade_saldo_ativo_w	= 5) then /* Creditos de operadoras */
						vl_credito_operadora_w		:= vl_item_w;
					elsif (ie_idade_saldo_ativo_w	= 6) then /* Outros creditos */
						vl_outros_creditos_w		:= vl_item_w;
					elsif (ie_idade_saldo_ativo_w	= 7) then /* Planos Individuais/Familiares - Preco pos-estabelecido */
						vl_individual_pos_w		:= vl_item_w;
					elsif (ie_idade_saldo_ativo_w	= 8) then /* Convenios a Receber / Outras */
						vl_conv_receber_w		:= vl_item_w;
					elsif (ie_idade_saldo_ativo_w	= 9) then /* Participacao dos beneficiarios em Eventos/ Sinistros */
						vl_part_benefes_w		:= vl_item_w;
					elsif (ie_idade_saldo_ativo_w	= 10) then /* Outros creditos nao relacionados com planos (Subgrupo 124) */
						vl_outros_creditos_sem_plano_w	:= vl_item_w;
					elsif (ie_idade_saldo_ativo_w	= 11) then /* Creditos de operadoras pos-estabelecido */
						vl_credito_oper_pos_w		:= vl_item_w;
					end if;
				
					insert into w_diops_fin_idadesaldo_ati(nr_sequencia,
						nr_seq_operadora,
						nr_seq_transacao,
						nr_seq_periodo,
						ie_tipo_vencimento,
						vl_individual,
						vl_coletivo_pre,
						vl_coletivo_pos,
						vl_taxa_adm,
						vl_credito_operadoras,
						vl_credito_oper_pos,
						dt_atualizacao,
						nm_usuario,
						vl_outros_creditos,
						vl_individual_pos,
						vl_conv_receber,
						vl_part_benefes,
						vl_outros_creditos_sem_plano,
						ie_idade_saldo_ativo,
						cd_conta_contabil,
						nr_titulo,
						cd_ans,
						nr_seq_cheque)
					values (nextval('w_diops_fin_idadesaldo_ati_seq'),
						nr_seq_operadora_p,
						nr_seq_transacao_p,
						nr_seq_periodo_p,
						ie_vencimento_ativo_w,
						vl_ind_familiar_w,
						vl_pre_estabelecido_w,
						vl_pos_estabelecido_w,
						vl_taxa_adm_w,
						vl_credito_operadora_w,
						vl_credito_oper_pos_w,
						clock_timestamp(),
						nm_usuario_p,
						vl_outros_creditos_w,
						vl_individual_pos_w,
						vl_conv_receber_w,
						vl_part_benefes_w,
						vl_outros_creditos_sem_plano_w,
						ie_idade_saldo_ativo_w,
						cd_conta_contabil_w,
						nr_titulo_w,
						cd_ans_w,
						nr_seq_cheque_w);
				end if;
				end;
			end loop;
			close c_itens_ppsc;
		else
			select	coalesce(sum(CASE WHEN trunc(b.dt_referencia,'month')=dt_periodo_final_trunc_w THEN  a.vl_saldo  ELSE 0 END ),0)
			into STRICT	vl_item_w
			from	ctb_mes_ref			b,
				ctb_balancete_v			a
			where	a.cd_conta_contabil		= cd_conta_contabil_w
			and	a.nr_seq_mes_ref		= b.nr_sequencia
			and	a.ie_normal_encerramento	= ie_normal_encerramento_w---'N'
			and	b.dt_referencia between dt_periodo_inicial_w and dt_periodo_final_w;
		
			vl_ind_familiar_w		:= 0;
			vl_pre_estabelecido_w		:= 0;
			vl_pos_estabelecido_w		:= 0;
			vl_taxa_adm_w			:= 0;
			vl_credito_operadora_w		:= 0;
			vl_credito_oper_pos_w		:= 0;
			vl_outros_creditos_w		:= 0;
			vl_individual_pos_w		:= 0;
			vl_conv_receber_w		:= 0;
			vl_part_benefes_w		:= 0;
			vl_outros_creditos_sem_plano_w	:= 0;
		
			if (ie_idade_saldo_ativo_w	= 1) then /* Planos Individuais/Familiares - Preco pre-estabelecido */
				vl_ind_familiar_w		:= vl_item_w;
			elsif (ie_idade_saldo_ativo_w	= 2) then /* Planos coletivos a preco  pre-estabelecido */
				vl_pre_estabelecido_w		:= vl_item_w;
			elsif (ie_idade_saldo_ativo_w	= 3) then /* Planos coletivos a preco pos-estabelecidos */
				vl_pos_estabelecido_w		:= vl_item_w;
			elsif (ie_idade_saldo_ativo_w	= 4) then /* Taxa de adm. / partic. dos benef. */
				vl_taxa_adm_w			:= vl_item_w;
			elsif (ie_idade_saldo_ativo_w	= 5) then /* Creditos de operadoras */
				vl_credito_operadora_w		:= vl_item_w;
			elsif (ie_idade_saldo_ativo_w	= 6) then /* Outros creditos */
				vl_outros_creditos_w		:= vl_item_w;
			elsif (ie_idade_saldo_ativo_w	= 7) then /* Planos Individuais/Familiares - Preco pos-estabelecido */
				vl_individual_pos_w		:= vl_item_w;
			elsif (ie_idade_saldo_ativo_w	= 8) then /* Convenios a Receber / Outras */
				vl_conv_receber_w		:= vl_item_w;
			elsif (ie_idade_saldo_ativo_w	= 9) then /* Participacao dos beneficiarios em Eventos/ Sinistros */
				vl_part_benefes_w		:= vl_item_w;
			elsif (ie_idade_saldo_ativo_w	= 10) then /* Outros creditos nao relacionados com planos (Subgrupo 124) */
				vl_outros_creditos_sem_plano_w	:= vl_item_w;
			elsif (ie_idade_saldo_ativo_w	= 11) then /* Creditos de operadoras pos-estabelecido */
				vl_credito_oper_pos_w		:= vl_item_w;
			end if;
		
			insert into w_diops_fin_idadesaldo_ati(nr_sequencia,
				nr_seq_operadora,
				nr_seq_transacao,
				nr_seq_periodo,
				ie_tipo_vencimento,
				vl_individual,
				vl_coletivo_pre,
				vl_coletivo_pos,
				vl_taxa_adm,
				vl_credito_operadoras,
				vl_credito_oper_pos,
				dt_atualizacao,
				nm_usuario,
				vl_outros_creditos,
				vl_individual_pos,
				vl_conv_receber,
				vl_part_benefes,
				vl_outros_creditos_sem_plano,
				ie_idade_saldo_ativo,
				cd_conta_contabil,
				cd_ans)
			values (nextval('w_diops_fin_idadesaldo_ati_seq'),
				nr_seq_operadora_p,
				nr_seq_transacao_p,
				nr_seq_periodo_p,
				ie_vencimento_ativo_w,
				vl_ind_familiar_w,
				vl_pre_estabelecido_w,
				vl_pos_estabelecido_w,
				vl_taxa_adm_w,
				vl_credito_operadora_w,
				vl_credito_oper_pos_w,
				clock_timestamp(),
				nm_usuario_p,
				vl_outros_creditos_w,
				vl_individual_pos_w,
				vl_conv_receber_w,
				vl_part_benefes_w,
				vl_outros_creditos_sem_plano_w,
				ie_idade_saldo_ativo_w,
				cd_conta_contabil_w,
				cd_ans_w);
		end if;
			
		if (cd_conta_deb_w IS NOT NULL AND cd_conta_deb_w::text <> '') then		
			insert into diops_idadesaldo_contab(nr_sequencia,
				cd_estabelecimento,
				nr_seq_periodo,
				nr_seq_operadora,
				cd_conta_contabil,
				dt_atualizacao, 
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec, 
				ie_tipo_idade_saldo,
				ie_idade_saldo_ativo,
				vl_contabil, 
				nr_titulo)
			values (nextval('diops_idadesaldo_contab_seq'),
				cd_estabelecimento_w,
				nr_seq_periodo_p, 
				nr_seq_operadora_p,
				cd_conta_deb_w,
				clock_timestamp(), 
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				'A',
				ie_idade_saldo_ativo_w,
				vl_item_w, 
				nr_titulo_w);
		end if;
	end if;
	end;
end loop;
close c_regras;

open c_itens;
loop
fetch c_itens into	
	ie_tipo_vencimento_w;
EXIT WHEN NOT FOUND; /* apply on c_itens */
	begin
	insert into w_diops_fin_idadesaldo_ati(nr_sequencia,
		nr_seq_operadora,
		nr_seq_transacao,
		nr_seq_periodo,
		ie_tipo_vencimento,
		vl_individual,
		vl_coletivo_pre,
		vl_coletivo_pos,
		vl_taxa_adm,
		vl_credito_operadoras,
		dt_atualizacao,
		nm_usuario,
		vl_outros_creditos,
		vl_individual_pos,
		vl_conv_receber,
		vl_part_benefes,
		vl_outros_creditos_sem_plano,
		ie_idade_saldo_ativo,
		cd_conta_contabil,
		nr_titulo)
	values (	nextval('w_diops_fin_idadesaldo_ati_seq'),
		nr_seq_operadora_p,
		nr_seq_transacao_p,
		nr_seq_periodo_p,
		ie_tipo_vencimento_w,
		0,
		0,
		0,
		0,
		0,
		clock_timestamp(),
		nm_usuario_p,
		0,
		0,
		0,
		0,
		0,
		null,
		'',
		nr_titulo_w);
	end;
end loop;
close c_itens;

open c_agrupador;
loop
fetch c_agrupador into	
	ie_tipo_vencimento_w,
	vl_ind_familiar_w,
	vl_pre_estabelecido_w,
	vl_pos_estabelecido_w,
	vl_taxa_adm_w,
	vl_credito_operadora_w,
	vl_credito_oper_pos_w,
	vl_outros_creditos_w,
	vl_individual_pos_w,
	vl_conv_receber_w, 
	vl_part_benefes_w, 
	vl_outros_creditos_sem_plano_w;
EXIT WHEN NOT FOUND; /* apply on c_agrupador */
	begin
	insert into diops_fin_idadesaldo_ati(nr_sequencia,
		cd_estabelecimento,
		nr_seq_periodo,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		ie_tipo_vencimento,
		vl_individual,
		vl_coletivo_pre,
		vl_coletivo_pos,
		vl_taxa_adm,
		vl_credito_operadoras,
		vl_credito_oper_pos,
		vl_outros_creditos,
		nr_seq_operadora,
		vl_individual_pos,
		vl_conv_receber,
		vl_part_benefes,
		vl_outros_creditos_sem_plano)
	values (nextval('diops_fin_idadesaldo_ati_seq'),
		cd_estabelecimento_w,
		nr_seq_periodo_p,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		ie_tipo_vencimento_w,
		vl_ind_familiar_w,
		vl_pre_estabelecido_w,
		vl_pos_estabelecido_w,
		vl_taxa_adm_w,
		vl_credito_operadora_w,
		vl_credito_oper_pos_w,
		vl_outros_creditos_w,
		nr_seq_operadora_p,
		vl_individual_pos_w,
		vl_conv_receber_w,
		vl_part_benefes_w,
		vl_outros_creditos_sem_plano_w);
	end;
end loop;
close c_agrupador;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE diops_gerar_idadesaldo_ativo ( nr_seq_operadora_p bigint, nr_seq_transacao_p bigint, nr_seq_periodo_p bigint, nm_usuario_p text) FROM PUBLIC;

