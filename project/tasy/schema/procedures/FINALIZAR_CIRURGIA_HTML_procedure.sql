-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE finalizar_cirurgia_html ( NR_CIRURGIA_P bigint, DT_TERMINO_P timestamp, NR_MIN_DURACAO_REAL_P bigint, CD_LOCAL_ESTOQUE_P bigint, IE_TRANSF_PRESCR_PEND_P text, CD_MOTIVO_ALTA_P INOUT bigint, ie_gerar_alta_p INOUT text) AS $body$
DECLARE

					
cd_perfil_w			integer;
cd_estabelecimento_w		integer;
nm_usuario_w			varchar(15);
ie_evento_fim_w			bigint;
ie_altera_data_partic_w		varchar(15);
ie_realiza_proc_previsto_w	varchar(15);
ie_gerar_taxa_sala_w		varchar(15);
nr_sequencia_w			bigint;
nr_prescricao_w			bigint;
cd_setor_transf_w		integer;
cd_motivo_alta_w		integer;
ie_gerar_alta_w			varchar(15) := 'N';
nr_atendimento_w		bigint;
ie_gerar_evolucao_cirurgia_w     varchar(1);
cd_evolucao_w                   bigint;
cd_pessoa_fisica_w              varchar(10);					

BEGIN
cd_perfil_w		:= wheb_usuario_pck.get_cd_perfil;
nm_usuario_w		:= wheb_usuario_pck.get_nm_usuario;
cd_estabelecimento_w	:= wheb_usuario_pck.get_cd_estabelecimento;

ie_evento_fim_w := obter_param_usuario(872, 76, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w, ie_evento_fim_w);
ie_altera_data_partic_w := obter_param_usuario(900, 179, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w, ie_altera_data_partic_w);
ie_realiza_proc_previsto_w := obter_param_usuario(872, 227, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w, ie_realiza_proc_previsto_w);
ie_gerar_taxa_sala_w := obter_param_usuario(872, 437, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w, ie_gerar_taxa_sala_w);
ie_gerar_evolucao_cirurgia_w := obter_param_usuario(281, 1627, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w, ie_gerar_evolucao_cirurgia_w);
select	max(nr_prescricao),
	max(nr_atendimento)
into STRICT	nr_prescricao_w,
	nr_atendimento_w
from	cirurgia
where	nr_cirurgia = nr_cirurgia_p;

CALL finalizar_cirurgia(nr_cirurgia_p,dt_termino_p,nr_min_duracao_real_p,nm_usuario_w);

if (coalesce(ie_evento_fim_w,0) > 0) then
	nr_sequencia_w := gerar_evento_cirurgia(	Obter_Pf_Usuario(nm_usuario_w,'C'), dt_termino_p, nr_cirurgia_p, ie_evento_fim_w, cd_local_estoque_p, null, nm_usuario_w, nr_sequencia_w, null);
end if;

if (ie_altera_data_partic_w = 'S') then
	CALL alterar_dt_partic_cirurgia(nr_cirurgia_p,dt_termino_p,null);
end if;	

if (ie_realiza_proc_previsto_w = 'S') then
	SELECT * FROM realizar_proc_previstos_html(nr_cirurgia_p, cd_local_estoque_p, cd_motivo_alta_w, ie_gerar_alta_w) INTO STRICT cd_motivo_alta_w, ie_gerar_alta_w;
end if;	

if (ie_gerar_taxa_sala_w = 'S') then
	CALL Atualiza_Taxa_Sala_Cirurgica(nr_atendimento_w,nr_cirurgia_p);
end if;	

if (ie_transf_prescr_pend_p = 'S') then
	select	max(cd_setor_atendimento)
	into STRICT	cd_setor_transf_w
	from   	atend_paciente_unidade
	where  	nr_atendimento 	= nr_atendimento_w
	and    	obter_classif_setor(cd_setor_atendimento) in (3,4)
	and    	coalesce(dt_saida_unidade::text, '') = '';
	
	if (cd_setor_transf_w IS NOT NULL AND cd_setor_transf_w::text <> '') then
		CALL Atualizar_setor_prescricao(nr_atendimento_w,cd_setor_transf_w,null,nm_usuario_w);
	end if;	
end if;
cd_motivo_alta_p 	:= cd_motivo_alta_w;
ie_gerar_alta_p		:= ie_gerar_alta_w;
if ( ie_gerar_evolucao_cirurgia_w = 'S' and (nr_cirurgia_p IS NOT NULL AND nr_cirurgia_p::text <> '')) then
	
	cd_evolucao_w := clinical_notes_pck.gerar_soap(nr_atendimento_w, nr_cirurgia_p, 'SURGERY', null, 'P', 1, cd_evolucao_w);
	
	update cirurgia
	set cd_evolucao = cd_evolucao_w
	where nr_cirurgia = nr_cirurgia_p;
end if;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE finalizar_cirurgia_html ( NR_CIRURGIA_P bigint, DT_TERMINO_P timestamp, NR_MIN_DURACAO_REAL_P bigint, CD_LOCAL_ESTOQUE_P bigint, IE_TRANSF_PRESCR_PEND_P text, CD_MOTIVO_ALTA_P INOUT bigint, ie_gerar_alta_p INOUT text) FROM PUBLIC;

