-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_glosar_analise_conta ( nr_seq_analise_p bigint, nr_seq_motivo_glosa_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
ds_retorno_w			varchar(4000);
nr_seq_conta_w			bigint;
nr_seq_conta_proc_w		bigint;
nr_seq_proc_partic_w		bigint;
nr_seq_conta_mat_w		bigint;
nr_seq_glosa_conta_w		bigint;
ie_origem_analise_w		smallint;

C01 CURSOR FOR 
	SELECT	nr_sequencia 
	from	pls_conta 
	where	nr_seq_analise	= nr_seq_analise_p 
	order by 
		1;

C02 CURSOR FOR 
	SELECT	a.nr_sequencia 
	from	pls_conta_proc	a 
	where	a.nr_seq_conta	= nr_seq_conta_w;
	
C03 CURSOR FOR 
	SELECT	a.nr_sequencia 
	from	pls_proc_participante	a 
	where	a.nr_seq_conta_proc	= nr_seq_conta_proc_w;
	
C04 CURSOR FOR 
	SELECT	a.nr_sequencia 
	from	pls_conta_mat	a 
	where	a.nr_seq_conta	= nr_seq_conta_w;
		

BEGIN 
begin 
select	coalesce(ie_origem_analise, 1) 
into STRICT 	ie_origem_analise_w 
from 	pls_analise_conta 
where 	nr_sequencia	= nr_seq_analise_p;
exception 
when others then 
	ie_origem_analise_w	:= 1;
end;
 
update	pls_analise_conta 
set	ie_atende_glosado	= 'S' 
where	nr_sequencia		= nr_seq_analise_p;
 
if (ie_origem_analise_w in (1,3)) then	-- tratamento para pós estabelecido - Demtrius OS - 393448 
	open C01;
	loop 
	fetch C01 into 
		nr_seq_conta_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin 
		if (nr_seq_motivo_glosa_p IS NOT NULL AND nr_seq_motivo_glosa_p::text <> '') then 
			CALL pls_analise_inativar_glo_ocor(nr_seq_analise_p, nr_seq_conta_w, null, null, null, nm_usuario_p);
					 
			nr_seq_glosa_conta_w := pls_analise_inserir_glosa_item(nr_seq_analise_p, nr_seq_conta_w, null, null, null, null, nr_seq_motivo_glosa_p, 'N', cd_estabelecimento_p, nm_usuario_p, 'N', nr_seq_glosa_conta_w);
		end if;
		 
		CALL pls_glosar_item_conta(nr_seq_conta_w, 0, 0, nm_usuario_p, cd_estabelecimento_p);
		end;
	end loop;
	close C01;
elsif (ie_origem_analise_w = 2) then 
	CALL pls_glosar_analise_pos_estab(nr_seq_analise_p, nm_usuario_p);
end if;
 
CALL pls_inserir_hist_analise(	null, nr_seq_analise_p, 28, null, 'A', null, 
				null, 'Todas as contas da análise foram liberadas sem pagamento.', null, 
				nm_usuario_p, cd_estabelecimento_p);
 
update	pls_analise_conta 
set	ie_status	= 'L' 
where	nr_sequencia	= nr_seq_analise_p;
 
ds_retorno_w := pls_fechar_conta_sem_aud(nr_seq_analise_p, cd_estabelecimento_p, nm_usuario_p, 'N', ds_retorno_w);
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_glosar_analise_conta ( nr_seq_analise_p bigint, nr_seq_motivo_glosa_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

