-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_obter_evento_fat_pos_estab ( nr_seq_lote_p pls_lote_faturamento.nr_sequencia%type, nr_seq_conta_p pls_conta.nr_sequencia%type, nr_seq_segurado_p pls_segurado.nr_sequencia%type, ie_cobranca_p text, ie_impedimento_cobranca_p text, nm_usuario_p usuario.nm_usuario%type, ie_tipo_protocolo_p pls_protocolo_conta.ie_tipo_protocolo%type default null) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta: 
[ X ]  Objetos do dicionario [  ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atencao:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
nr_seq_regra_w			pls_regra_faturamento.nr_sequencia%type;
nr_seq_contrato_w		pls_contrato.nr_sequencia%type;
nr_seq_plano_w			pls_plano.nr_sequencia%type;
nr_seq_segurado_w		pls_segurado.nr_sequencia%type;
nr_seq_intercambio_w		pls_intercambio.nr_sequencia%type;
qt_gerados_w			integer;
qt_pos_w			integer;
qt_gerados_rec_w		integer;
qt_pos_rec_w			integer;
qt_gerados_disc_w		integer;
qt_pos_disc_w			integer;
dt_mesano_referencia_w		timestamp;
dt_alteracao_w			timestamp;
cd_estabelecimento_w		estabelecimento.cd_estabelecimento%type;
qt_pos_contab_w			integer;


BEGIN

-- Obter dados do lote 
select	trunc(max(dt_mesano_referencia), 'month'),
	max(nr_seq_regra_fat),
	max(cd_estabelecimento)
into STRICT	dt_mesano_referencia_w,
	nr_seq_regra_w,
	cd_estabelecimento_w
from	pls_lote_faturamento b
where	b.nr_sequencia = nr_seq_lote_p;

if (ie_tipo_protocolo_p <> 'S')  or (coalesce(ie_tipo_protocolo_p::text, '') = '') then
	-- Obter dados do segurado
	if (nr_seq_conta_p IS NOT NULL AND nr_seq_conta_p::text <> '') then
		select	b.nr_seq_contrato,
			b.nr_seq_plano,
			b.nr_sequencia,
			b.nr_seq_intercambio
		into STRICT	nr_seq_contrato_w,
			nr_seq_plano_w,
			nr_seq_segurado_w,
			nr_seq_intercambio_w
		from	pls_segurado b,
			pls_conta a
		where	b.nr_sequencia	= a.nr_seq_segurado
		and	a.nr_sequencia	= nr_seq_conta_p;
	elsif (nr_seq_segurado_p IS NOT NULL AND nr_seq_segurado_p::text <> '') then
		select	b.nr_seq_contrato,
			b.nr_seq_plano,
			b.nr_sequencia,
			b.nr_seq_intercambio
		into STRICT	nr_seq_contrato_w,
			nr_seq_plano_w,
			nr_seq_segurado_w,
			nr_seq_intercambio_w
		from	pls_segurado b
		where	b.nr_sequencia	= nr_seq_segurado_p;
	end if;

	if (ie_cobranca_p in ('A', 'CA')) and (nr_seq_segurado_w IS NOT NULL AND nr_seq_segurado_w::text <> '') then
		-- Verificar se a conta tem pos-estabelecido contabil
		select	count(1)
		into STRICT	qt_pos_contab_w
		from	pls_conta_pos_estab_contab	c
		where	c.nr_seq_conta_pos in (SELECT	p.nr_sequencia
						from	pls_conta_pos_estabelecido	p
						where	p.nr_seq_conta		= nr_seq_conta_p
						and	p.ie_status_faturamento	= 'L'
						and	coalesce(p.nr_seq_lote_fat::text, '') = ''
						and	p.ie_situacao		= 'A'
						and	ie_cobranca_p		!= 'CA'
						
union all

						SELECT	p.nr_sequencia
						from	pls_conta_pos_estabelecido	p
						where	p.nr_seq_conta		= nr_seq_conta_p
						and	p.ie_status_faturamento	= 'A'
						and	coalesce(p.nr_seq_lote_fat::text, '') = ''
						and	p.ie_situacao		= 'A'
						and	ie_cobranca_p		= 'CA');
		
		if (qt_pos_contab_w = 0) then
			-- Gerar pos-estabelecido contabil
			CALL pls_gerar_contab_val_adic( nr_seq_conta_p, null, null, null, null, null, null, 'P', case when ie_cobranca_p = 'CA' then 'CA' else 'N' end, nm_usuario_p);
			commit;
		end if;
		
		select	max(a.dt_alteracao)
		into STRICT	dt_alteracao_w
		from	pls_plano c,
			pls_segurado_alt_plano a,
			pls_segurado b
		where	b.nr_sequencia	= a.nr_seq_segurado
		and	c.nr_sequencia 	= a.nr_seq_plano_ant	
		and	b.nr_sequencia	= nr_seq_segurado_w
		and	a.ie_situacao   = 'A'
		and	c.ie_preco = 1;	

		CALL pls_gerar_itens_lote_fat(	nr_seq_lote_p, nr_seq_conta_p, 0,
						nr_seq_regra_w, ie_impedimento_cobranca_p, dt_alteracao_w,
						nr_seq_intercambio_w, nr_seq_contrato_w, nr_seq_segurado_p, 
						nm_usuario_p, cd_estabelecimento_w, ie_tipo_protocolo_p);
		commit;

		select	count(1)
		into STRICT	qt_gerados_w
		from	pls_conta_pos_estabelecido
		where	nr_seq_conta = nr_seq_conta_p
		and	nr_seq_lote_fat	= nr_seq_lote_p
		and	ie_status_faturamento in ('D', 'L', 'P', 'U', 'A')
		and	ie_situacao = 'A';
		
		select	sum(t.qt_pos)
		into STRICT	qt_pos_w
		from (	SELECT	count(1) qt_pos
			from	pls_conta_pos_estabelecido
			where	nr_seq_conta		= nr_seq_conta_p
			and	ie_status_faturamento	in ('D', 'L', 'P', 'U')
			and	ie_situacao		= 'A'
			and	ie_cobranca_p		!= 'CA'
			
union all

			SELECT	count(1) qt_pos
			from	pls_conta_pos_estabelecido
			where	nr_seq_conta		= nr_seq_conta_p
			and	ie_status_faturamento	= 'A'
			and	ie_situacao		= 'A'
			and	ie_cobranca_p		= 'CA') t;		
		
		if	((qt_pos_w - qt_gerados_w) > 0) then
			-- inicializa a discussao
			qt_gerados_disc_w := 0;
			qt_pos_disc_w := 0;
			
			select	count(1)
			into STRICT	qt_gerados_rec_w
			from	pls_conta_pos_estabelecido
			where	nr_seq_conta = nr_seq_conta_p
			and	nr_seq_lote_fat	= nr_seq_lote_p
			and	ie_status_faturamento in ('D', 'L', 'P', 'U', 'A')
			and	ie_situacao = 'A'
			and	(nr_seq_conta_rec IS NOT NULL AND nr_seq_conta_rec::text <> '');
			
			
			select	sum(qt_pos)
			into STRICT	qt_pos_rec_w
			from (	SELECT	count(1) qt_pos
				from	pls_conta_pos_estabelecido
				where	nr_seq_conta = nr_seq_conta_p
				and	ie_status_faturamento in ('D', 'L', 'P', 'U')
				and	ie_situacao	= 'A'
				and	(nr_seq_conta_rec IS NOT NULL AND nr_seq_conta_rec::text <> '')
				and	ie_cobranca_p	!= 'CA'
				
union all

				SELECT	count(1) qt_pos
				from	pls_conta_pos_estabelecido
				where	nr_seq_conta = nr_seq_conta_p
				and	ie_status_faturamento = 'A'
				and	ie_situacao	= 'A'
				and	(nr_seq_conta_rec IS NOT NULL AND nr_seq_conta_rec::text <> '')
				and	ie_cobranca_p	= 'CA') alias6;
			
			-- Verificar se gerou recurso de glosa da conta, caso positivo segue os dados do recurso
			if (qt_gerados_rec_w > 0) then
				qt_gerados_w	:= qt_gerados_rec_w;
				qt_pos_w	:= qt_pos_rec_w;
			else -- verifica as constestacoes
				select	sum(t.contagem)
				into STRICT	qt_gerados_disc_w
				from (	SELECT	count(1) contagem
					from	pls_conta_pos_estabelecido
					where	nr_seq_conta		= nr_seq_conta_p
					and	nr_seq_lote_fat		= nr_seq_lote_p
					and	ie_status_faturamento	in ('D', 'L', 'P', 'U', 'A')
					and	ie_situacao		= 'A'
					and	(nr_seq_disc_mat IS NOT NULL AND nr_seq_disc_mat::text <> '')
					
union all

					SELECT	count(1) contagem
					from	pls_conta_pos_estabelecido
					where	nr_seq_conta		= nr_seq_conta_p
					and	nr_seq_lote_fat		= nr_seq_lote_p
					and	ie_status_faturamento	in ('D', 'L', 'P', 'U', 'A')
					and	ie_situacao		= 'A'
					and	(nr_seq_disc_proc IS NOT NULL AND nr_seq_disc_proc::text <> '')) t;
				-- se tiver itens gerados para discussao, entao segue a validacao
				if (qt_gerados_disc_w > 0) then
					select	sum(t.contagem)
					into STRICT	qt_pos_disc_w
					from (	SELECT	count(1) contagem
						from	pls_conta_pos_estabelecido
						where	nr_seq_conta		= nr_seq_conta_p
						and	ie_status_faturamento	in ('D', 'L', 'P', 'U')
						and	ie_situacao		= 'A'
						and	(nr_seq_disc_mat IS NOT NULL AND nr_seq_disc_mat::text <> '')
						and	ie_cobranca_p		!= 'CA'
						
union all

						SELECT	count(1) contagem
						from	pls_conta_pos_estabelecido
						where	nr_seq_conta		= nr_seq_conta_p
						and	ie_status_faturamento	in ('D', 'L', 'P', 'U')
						and	ie_situacao		= 'A'
						and	(nr_seq_disc_proc IS NOT NULL AND nr_seq_disc_proc::text <> '')
						and	ie_cobranca_p		!= 'CA'
						
union all

						select	count(1) contagem
						from	pls_conta_pos_estabelecido
						where	nr_seq_conta		= nr_seq_conta_p
						and	ie_status_faturamento	= 'A'
						and	ie_situacao		= 'A'
						and	(nr_seq_disc_mat IS NOT NULL AND nr_seq_disc_mat::text <> '')
						and	ie_cobranca_p		= 'CA'
						
union all

						select	count(1) contagem
						from	pls_conta_pos_estabelecido
						where	nr_seq_conta		= nr_seq_conta_p
						and	ie_status_faturamento	= 'A'
						and	ie_situacao		= 'A'
						and	(nr_seq_disc_proc IS NOT NULL AND nr_seq_disc_proc::text <> '')
						and	ie_cobranca_p		= 'CA') t;
						
					qt_gerados_w	:= qt_gerados_disc_w;
					qt_pos_w	:= qt_pos_disc_w;
				end if;
			end if;		
			
			-- se tem diferenca, mas nao localizou no recurso de glosa ou discussao, levanta novamente os valores
			if (qt_gerados_rec_w = 0) and (qt_gerados_disc_w = 0) then
				select	count(1)
				into STRICT	qt_gerados_w
				from	pls_conta_pos_estabelecido
				where	nr_seq_conta = nr_seq_conta_p
				and	nr_seq_lote_fat	= nr_seq_lote_p
				and	ie_status_faturamento in ('D', 'L', 'P', 'U', 'A')
				and	ie_situacao = 'A'
				and	coalesce(nr_seq_conta_rec::text, '') = '';
				
				select	sum(t.qt_pos)
				into STRICT	qt_pos_w
				from (	SELECT	count(1) qt_pos
					from	pls_conta_pos_estabelecido
					where	nr_seq_conta		= nr_seq_conta_p
					and	ie_status_faturamento	in ('D', 'L', 'P', 'U')
					and	ie_situacao		= 'A'
					and	coalesce(nr_seq_conta_rec::text, '') = ''
					and	ie_cobranca_p		!= 'CA'
					
union all

					SELECT	count(1) qt_pos
					from	pls_conta_pos_estabelecido
					where	nr_seq_conta		= nr_seq_conta_p
					and	ie_status_faturamento	= 'A'
					and	ie_situacao		= 'A'
					and	coalesce(nr_seq_conta_rec::text, '') = ''
					and	ie_cobranca_p		= 'CA') t;
			end if;
		end if;

		CALL pls_gerar_itens_lote_fat(	nr_seq_lote_p, nr_seq_conta_p, qt_pos_w - qt_gerados_w,
						nr_seq_regra_w, ie_impedimento_cobranca_p, dt_alteracao_w,
						nr_seq_intercambio_w, nr_seq_contrato_w, nr_seq_segurado_p, 
						nm_usuario_p, cd_estabelecimento_w, ie_tipo_protocolo_p);
		commit;
	end if;
elsif (ie_tipo_protocolo_p = 'S') then
	CALL pls_gerar_itens_lote_fat(	nr_seq_lote_p, nr_seq_conta_p, null,
					nr_seq_regra_w, ie_impedimento_cobranca_p, null,
					null, null, nr_seq_segurado_p, 
					nm_usuario_p, cd_estabelecimento_w, ie_tipo_protocolo_p);
end if;
-- Nao pode dar commit nesta procedure
-- commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_obter_evento_fat_pos_estab ( nr_seq_lote_p pls_lote_faturamento.nr_sequencia%type, nr_seq_conta_p pls_conta.nr_sequencia%type, nr_seq_segurado_p pls_segurado.nr_sequencia%type, ie_cobranca_p text, ie_impedimento_cobranca_p text, nm_usuario_p usuario.nm_usuario%type, ie_tipo_protocolo_p pls_protocolo_conta.ie_tipo_protocolo%type default null) FROM PUBLIC;

