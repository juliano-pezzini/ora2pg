-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE dirf_grava_rtrt (( nr_seq_lote_dirf_p bigint, nm_usuario_p text, nr_seq_apres_p INOUT bigint, cd_darf_p text, cd_estabelecimento_p bigint, cd_pessoa_fisica_p text) is vl_rendimento_jan_w double precision) AS $body$
BEGIN
return;
end;

begin

-- O valor do rendimento  por pessoa, ento  inicializa para cada pessoa
vl_rendimento_jan_w		:= 0;
vl_rendimento_fev_w		:= 0;
vl_rendimento_mar_w		:= 0;
vl_rendimento_abr_w		:= 0;
vl_rendimento_mai_w		:= 0;
vl_rendimento_jun_w		:= 0;
vl_rendimento_jul_w		:= 0;
vl_rendimento_ago_w		:= 0;
vl_rendimento_set_w		:= 0;
vl_rendimento_out_w		:= 0;
vl_rendimento_nov_w		:= 0;
vl_rendimento_dez_w		:= 0;

select	max(pkg_date_utils.start_of(dt_lote,'YEAR',0))
into STRICT	dt_mes_comparacao_w
from	dirf_lote
where	nr_sequencia = nr_seq_lote_dirf_p;

open c01;
loop
fetch c01 into	
	c01_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
--	nr_mes_w		:= to_number(to_char(c01_w.dt_base_titulo,'mm'));
	dt_mes_w		:= pkg_date_utils.start_of(c01_w.dt_base_titulo,'MONTH',0);
	dt_mes_comparacao_w	:= coalesce(dt_mes_comparacao_w,pkg_date_utils.start_of(c01_w.dt_base_titulo,'YEAR',0));

	if (dt_mes_w = dt_mes_comparacao_w) then
		begin
		vl_rendimento_jan_w := vl_rendimento_jan_w + c01_w.vl_rendimento;
		end;
	elsif (dt_mes_w = pkg_date_utils.add_month(dt_mes_comparacao_w,1,0)) then
		begin
		vl_rendimento_fev_w := vl_rendimento_fev_w + c01_w.vl_rendimento;
		end;
	elsif (dt_mes_w = pkg_date_utils.add_month(dt_mes_comparacao_w,2,0)) then
		begin
		vl_rendimento_mar_w := vl_rendimento_mar_w + c01_w.vl_rendimento;
		end;
	elsif (dt_mes_w = pkg_date_utils.add_month(dt_mes_comparacao_w,3,0)) then
		begin
		vl_rendimento_abr_w := vl_rendimento_abr_w + c01_w.vl_rendimento;
		end;
	elsif (dt_mes_w = pkg_date_utils.add_month(dt_mes_comparacao_w,4,0)) then
		begin
		vl_rendimento_mai_w := vl_rendimento_mai_w + c01_w.vl_rendimento;
		end;
	elsif (dt_mes_w = pkg_date_utils.add_month(dt_mes_comparacao_w,5,0)) then
		begin
		vl_rendimento_jun_w := vl_rendimento_jun_w + c01_w.vl_rendimento;
		end;
	elsif (dt_mes_w = pkg_date_utils.add_month(dt_mes_comparacao_w,6,0)) then
		begin
		vl_rendimento_jul_w := vl_rendimento_jul_w + c01_w.vl_rendimento;
		end;
	elsif (dt_mes_w = pkg_date_utils.add_month(dt_mes_comparacao_w,7,0)) then
		begin
		vl_rendimento_ago_w := vl_rendimento_ago_w + c01_w.vl_rendimento;
		end;
	elsif (dt_mes_w = pkg_date_utils.add_month(dt_mes_comparacao_w,8,0)) then
		begin
		vl_rendimento_set_w := vl_rendimento_set_w + c01_w.vl_rendimento;
		end;
	elsif (dt_mes_w = pkg_date_utils.add_month(dt_mes_comparacao_w,9,0)) then
		begin
		vl_rendimento_out_w := vl_rendimento_out_w + c01_w.vl_rendimento;
		end;
	elsif (dt_mes_w = pkg_date_utils.add_month(dt_mes_comparacao_w,10,0)) then
		begin
		vl_rendimento_nov_w := vl_rendimento_nov_w + c01_w.vl_rendimento;
		end;
	elsif (dt_mes_w = pkg_date_utils.add_month(dt_mes_comparacao_w,11,0)) then
		begin
		vl_rendimento_dez_w := vl_rendimento_dez_w + c01_w.vl_rendimento;
		end;
	end if;
end;
end loop;
close c01;

if (cd_darf_p = '3208') then
	vl_rendimento_13_w 	:= '';
else
	vl_rendimento_13_w 	:= '000';
end if;	

-- inserir o valor de rendimento da pessoa fsica
ds_arquivo_w := 'RTRT' 	|| separador_w || campo_dirf(vl_rendimento_jan_w)	|| separador_w || campo_dirf(vl_rendimento_fev_w) || separador_w || campo_dirf(vl_rendimento_mar_w)
			|| separador_w || campo_dirf(vl_rendimento_abr_w)	|| separador_w || campo_dirf(vl_rendimento_mai_w) || separador_w || campo_dirf(vl_rendimento_jun_w)
			|| separador_w || campo_dirf(vl_rendimento_jul_w) 	|| separador_w || campo_dirf(vl_rendimento_ago_w) || separador_w || campo_dirf(vl_rendimento_set_w)
			|| separador_w || campo_dirf(vl_rendimento_out_w) 	|| separador_w || campo_dirf(vl_rendimento_nov_w) || separador_w || campo_dirf(vl_rendimento_dez_w)
			|| separador_w || campo_dirf(vl_rendimento_13_w)  	|| separador_w;

nr_seq_apres_p := nr_seq_apres_p + 1;

insert 	into w_dirf_arquivo(nr_sequencia,
	nm_usuario,
	nm_usuario_nrec,
	dt_atualizacao,
	dt_atualizacao_nrec,
	ds_arquivo,
	nr_seq_apresentacao,
	nr_seq_registro,
	cd_darf)
values (nextval('w_dirf_arquivo_seq'),
	nm_usuario_p,
	nm_usuario_p,
	clock_timestamp(),
	clock_timestamp(),
	ds_arquivo_w,
	to_char(nr_seq_apres_p),
	0,
	cd_darf_p);
	
commit;

nr_seq_apres_p	:= nr_seq_apres_p + 1;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE dirf_grava_rtrt (( nr_seq_lote_dirf_p bigint, nm_usuario_p text, nr_seq_apres_p INOUT bigint, cd_darf_p text, cd_estabelecimento_p bigint, cd_pessoa_fisica_p text) is vl_rendimento_jan_w double precision) FROM PUBLIC;

