-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_contas_proc_mat_guia ( nr_seq_protocolo_p bigint, nr_seq_guia_p bigint, nr_seq_prestador_atend_p bigint, nr_seq_prestador_p bigint, dt_servico_p timestamp, /*dt_inicio_proc_p		date,
		dt_fim_proc_p			date,*/
 ie_informar_datas_p text, ds_lista_protocolo_inserir_p text, nm_usuario_p text, cd_estabelecimento_p bigint, nr_seq_conta_gerada_p INOUT bigint) AS $body$
DECLARE


nr_seq_conta_w			bigint;
ds_lista_protocolo_inserir_w	varchar(2000);
nr_pos_virgula_w		bigint;
nr_seq_sequencia_w		bigint;
nr_seq_item_w			bigint;
ie_tipo_item_w			varchar(1);
Cd_Guia_Prestador_w   pls_conta.Cd_Guia_Prestador%type;



BEGIN
if (nr_seq_protocolo_p IS NOT NULL AND nr_seq_protocolo_p::text <> '') and (nr_seq_guia_p IS NOT NULL AND nr_seq_guia_p::text <> '') and (nr_seq_prestador_atend_p IS NOT NULL AND nr_seq_prestador_atend_p::text <> '') and (ds_lista_protocolo_inserir_p IS NOT NULL AND ds_lista_protocolo_inserir_p::text <> '') and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') and (cd_estabelecimento_p IS NOT NULL AND cd_estabelecimento_p::text <> '') then
	begin
	--Gerar conta para receber os dados da guia
	SELECT * FROM pls_gerar_conta_guia_prod(
		nr_seq_protocolo_p, nr_seq_guia_p, nr_seq_prestador_atend_p, nm_usuario_p, '', nr_seq_prestador_p, null, nr_seq_conta_w, Cd_Guia_Prestador_w) INTO STRICT nr_seq_conta_w, Cd_Guia_Prestador_w;

	if (nr_seq_conta_w IS NOT NULL AND nr_seq_conta_w::text <> '') then
		begin
		ds_lista_protocolo_inserir_w	:= ds_lista_protocolo_inserir_p;

		while(ds_lista_protocolo_inserir_w IS NOT NULL AND ds_lista_protocolo_inserir_w::text <> '') loop
			begin

			nr_pos_virgula_w	:= position(',' in ds_lista_protocolo_inserir_w);

			if (nr_pos_virgula_w > 0) then
				begin
				nr_seq_sequencia_w		:= (substr(ds_lista_protocolo_inserir_w,0,nr_pos_virgula_w-1))::numeric;
				ds_lista_protocolo_inserir_w	:= substr(ds_lista_protocolo_inserir_w,nr_pos_virgula_w+1,length(ds_lista_protocolo_inserir_w));
				end;
			else
				begin
				nr_seq_sequencia_w		:= (ds_lista_protocolo_inserir_w)::numeric;
				ds_lista_protocolo_inserir_w	:= null;
				end;
			end if;

			if (nr_seq_sequencia_w > 0) then
				begin
				select	*
				into STRICT	nr_seq_item_w,
					ie_tipo_item_w
				from	(
					SELECT  a.nr_sequencia,
						'P'
					from 	pls_guia_plano_proc a,
						pls_guia_plano b
					where	a.nr_seq_guia = b.nr_sequencia
					and	((a.nr_seq_guia = nr_seq_guia_p) or (b.nr_seq_guia_principal = nr_seq_guia_p))
					and	coalesce(a.ie_utilizado,'N') in ('P','N')
					and	b.ie_status = '1'
					and	a.nr_sequencia = nr_seq_sequencia_w
					
union

					SELECT  a.nr_sequencia,
						'M'
					from    pls_guia_plano_mat a,
						pls_guia_plano b
					where   a.nr_seq_guia = b.nr_sequencia
					and	((a.nr_seq_guia = nr_seq_guia_p) or (b.nr_seq_guia_principal = nr_seq_guia_p))
					and	coalesce(a.ie_utilizado,'N') in ('P','N')
					and	b.ie_status = '1'
					and	a.nr_sequencia = nr_seq_sequencia_w
					) alias11;

				if (nr_seq_item_w IS NOT NULL AND nr_seq_item_w::text <> '') then
					begin
					CALL pls_gerar_mat_proc_producao(
						nr_seq_conta_w,
						nr_seq_sequencia_w,
						nr_seq_item_w,
						ie_tipo_item_w,
						nm_usuario_p,
						cd_estabelecimento_p,
						dt_servico_p,
						'08:00:00',
						'09:00:00',
						ie_informar_datas_p);
					end;
				end if;

				end;
			end if;
			end;
			end loop;
		end;
	end if;
	end;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_contas_proc_mat_guia ( nr_seq_protocolo_p bigint, nr_seq_guia_p bigint, nr_seq_prestador_atend_p bigint, nr_seq_prestador_p bigint, dt_servico_p timestamp,  ie_informar_datas_p text, ds_lista_protocolo_inserir_p text, nm_usuario_p text, cd_estabelecimento_p bigint, nr_seq_conta_gerada_p INOUT bigint) FROM PUBLIC;

