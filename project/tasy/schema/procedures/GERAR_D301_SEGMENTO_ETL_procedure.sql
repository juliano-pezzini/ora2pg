-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_d301_segmento_etl ( nr_seq_dataset_p bigint, nm_usuario_p text) AS $body$
DECLARE


c01 CURSOR FOR
SELECT 	to_char(ap.dt_alta,'yyyymmdd') as ds_dt_alta_transf,
	to_char(ap.dt_alta,'hh24mi')   as ds_hr_alta_transf,
	ap.dt_alta,
	ap.cd_motivo_alta cd_motivo_alta,
	ap.nr_atendimento,
	substr(pj.cd_cnes,1,9)    as nr_ik_destino_transf
FROM d301_dataset_envio d3, atendimento_paciente ap
LEFT OUTER JOIN atendimento_transf at ON (ap.nr_atendimento = at.nr_atendimento)
LEFT OUTER JOIN pessoa_juridica pj ON (at.cd_cgc = pj.cd_cgc)
WHERE d3.nr_sequencia   	= nr_seq_dataset_p and d3.nr_atendimento 	= ap.nr_atendimento;

c01_w c01%rowtype;

c02 CURSOR(nr_atendimento_p  diagnostico_doenca.nr_atendimento%type) FOR
SELECT 	dd.cd_doenca as cd_cid_princ_1,
	dd.ie_lado
from 	diagnostico_doenca   dd,
	classificacao_diagnostico cd,
	medic_diagnostico_doenca mdd
where 	dd.nr_atendimento 		= nr_atendimento_p
and	mdd.nr_seq_classificacao 	= cd.nr_sequencia
and	dd.nr_atendimento		= mdd.nr_atendimento
and	mdd.cd_doenca			= dd.cd_doenca
and	'S'				= OBTER_SE_CLASSIF_DIAG_301(cd.nr_sequencia,'HAU',dd.DT_DIAGNOSTICO)
and	mdd.ie_situacao			= 'A'
and	coalesce(dd.dt_inativacao::text, '') = ''
and	(dd.dt_liberacao IS NOT NULL AND dd.dt_liberacao::text <> '')
and 	coalesce(dd.cd_doenca_superior::text, '') = '';

c03 CURSOR(	nr_atendimento_p  diagnostico_doenca.nr_atendimento%type,
		cd_doenca_p       diagnostico_doenca.cd_doenca%type) FOR
SELECT 	dd.cd_doenca as cd_cic_princ_2,
	dd.ie_lado
from 	diagnostico_doenca   dd,
	classificacao_diagnostico cd,
	medic_diagnostico_doenca mdd
where 	dd.nr_atendimento     = nr_atendimento_p
and 	dd.cd_doenca_superior = cd_doenca_p
and	mdd.nr_seq_classificacao 	= cd.nr_sequencia
and	dd.nr_atendimento		= mdd.nr_atendimento
and	mdd.cd_doenca			= dd.cd_doenca
and	'S'				= OBTER_SE_CLASSIF_DIAG_301(cd.nr_sequencia,'HAU',dd.DT_DIAGNOSTICO)
and	mdd.ie_situacao			= 'A'
and	coalesce(dd.dt_inativacao::text, '') = ''
and	(dd.dt_liberacao IS NOT NULL AND dd.dt_liberacao::text <> '');

c03_w c03%rowtype;

nr_seq_301_depart_w           	d301_segmento_etl.nr_seq_301_depart%type;
nr_seq_301_mot_alt_trans_tr_w 	d301_segmento_etl.nr_seq_301_mot_alta_transf%type;
nr_seq_301_mot_alta_transf_w  	d301_segmento_etl.nr_seq_301_mot_alta_transf%type;
nr_seq_301_local_1_w          	c301_conversao_dados.ds_valor_tasy%type;
nr_seq_301_local_2_w          	c301_conversao_dados.ds_valor_tasy%type;
nr_seq_atepacu_w		atend_paciente_unidade.nr_seq_interno%type;


BEGIN
nr_seq_301_mot_alt_trans_tr_w := 3; --pendente de definição (não especificado)
nr_seq_301_mot_alta_transf_w  := null; --pendente de definição
open c01;
fetch c01 into c01_w;
loop

	nr_seq_301_mot_alta_transf_w 	:= OBTER_SEQ_VALOR_301('C301_5_MOT_ALTA_TRANSF','IE_MOTIVO',obter_conversao_301('C301_5_MOT_ALTA_TRANSF','MOTIVO_ALTA',null,c01_w.cd_motivo_alta,'I'));

	nr_seq_atepacu_w		:= obter_atepacu_data(c01_w.nr_atendimento, 'A', c01_w.dt_alta);

	select	max(cd_departamento)
	into STRICT	nr_seq_301_depart_w
	from	atend_paciente_unidade
	where	nr_seq_interno	= nr_seq_atepacu_w;

	--nr_seq_301_depart_w           := obter_departamento_data(c01_w.nr_atendimento,c01_w.dt_alta);
	--Pegar a doenca.
	for c02_w in c02(c01_w.nr_atendimento) loop

		nr_seq_301_local_1_w := OBTER_SEQ_VALOR_301('C301_16_LOCALIZACAO','IE_LOCALIZACAO',obter_conversao_301('C301_16_LOCALIZACAO',null,1372,c02_w.IE_LADO,'I'));

		open c03(c01_w.nr_atendimento,c02_w.CD_CID_PRINC_1);
		fetch c03 into c03_w;
		loop
			--Pegar a doenca secundaria
			NR_SEQ_301_LOCAL_2_w := OBTER_SEQ_VALOR_301('C301_16_LOCALIZACAO','IE_LOCALIZACAO',obter_conversao_301('C301_16_LOCALIZACAO',null,1372,c03_w.IE_LADO,'I'));
			insert into d301_segmento_etl(nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_dataset,
				ds_dt_alta_transf,
				ds_hr_alta_transf,
				nr_seq_301_mot_alta_transf,
				nr_seq_301_depart,
				cd_cid_princ_1,
				nr_seq_301_local_1,
				cd_cic_princ_2,
				nr_seq_301_local_2,
				nr_ik_destino_transf,
				nr_seq_301_mot_alta_transf_tr)
			values (nextval('d301_segmento_etl_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_dataset_p,
				c01_w.ds_dt_alta_transf,
				c01_w.ds_hr_alta_transf,
				nr_seq_301_mot_alta_transf_w,
				nr_seq_301_depart_w,
				c02_w.cd_cid_princ_1,
				nr_seq_301_local_1_w,
				c03_w.cd_cic_princ_2,
				nr_seq_301_local_2_w,
				c01_w.nr_ik_destino_transf,
				nr_seq_301_mot_alt_trans_tr_w);

		fetch c03 into c03_w;
		EXIT WHEN NOT FOUND; /* apply on c03 */

		end loop;
		close c03;

	end loop; --c02
	fetch c01 into c01_w;


	EXIT WHEN NOT FOUND; /* apply on c01 */ --c01
end loop;
close c01;


end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_d301_segmento_etl ( nr_seq_dataset_p bigint, nm_usuario_p text) FROM PUBLIC;

