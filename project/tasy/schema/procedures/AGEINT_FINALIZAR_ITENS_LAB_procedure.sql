-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ageint_finalizar_itens_lab (nr_seq_ageint_p bigint, dt_finalizacao_p timestamp, cd_estabelecimento_p bigint, nm_usuario_p text, ie_glosado_p INOUT text) AS $body$
DECLARE


nr_seq_ageint_exame_lab_w	bigint;
nr_glosa_part_w			bigint;	
ie_bloq_glosa_part_w 		varchar(1);
nr_seq_status_w			bigint;
nr_seq_status_ageint_w		bigint;
cd_pessoa_fisica_w		varchar(10);
nm_paciente_w			varchar(60);
nr_seq_ageint_lab_w		bigint;
cd_estabelecimento_w    agenda_integrada.cd_estabelecimento%TYPE;
		
C01 CURSOR FOR
	SELECT	nr_sequencia
	from	ageint_exame_lab
	where	nr_seq_ageint = nr_seq_ageint_p
	and	coalesce(ie_regra,0) not in (1,2,5,nr_glosa_part_w)	
	and	coalesce(ie_glosa,'X') not in ('T','G')
	and	coalesce(dt_cancelamento::text, '') = '';		

BEGIN

if (trunc(dt_finalizacao_p) < trunc(clock_timestamp())) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(232662);	
end if;

select	max(cd_pessoa_fisica),
	max(nm_paciente)
into STRICT	cd_pessoa_fisica_w,
	nm_paciente_w
from	agenda_integrada
where	nr_sequencia = nr_seq_ageint_p;

if (coalesce(cd_pessoa_fisica_w::text, '') = '') and (coalesce(nm_paciente_w::text, '') = '') then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(225754);
end if;

ie_bloq_glosa_part_w := obter_param_usuario(869, 187, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_bloq_glosa_part_w);

nr_glosa_part_w	:= 99;

if (ie_bloq_glosa_part_w = 'N') then
	nr_glosa_part_w := 8;
end if;

update	ageint_exame_lab
set	dt_prevista = dt_finalizacao_p
where	nr_seq_ageint = nr_seq_ageint_p
and	coalesce(ie_regra,0) not in (1,2,5,nr_glosa_part_w)	
and	coalesce(ie_glosa,'X') not in ('T','G')
and	coalesce(dt_prevista::text, '') = ''
and	coalesce(dt_cancelamento::text, '') = '';


open C01;
loop
fetch C01 into	
	nr_seq_ageint_lab_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	insert into ageint_exame_lab_hist(	
		nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		dt_historico,
		ds_historico,
		nr_seq_ageint_lab,
		nm_usuario_hist)
	values (	nextval('ageint_exame_lab_hist_seq'),
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		wheb_mensagem_pck.get_texto(791178),
		nr_seq_ageint_lab_w,
		nm_usuario_p);
	end;
end loop;
close C01;

select 	min(nr_sequencia)
into STRICT	nr_seq_status_w
from 	agenda_integrada_status
where 	ie_situacao = 'A' 
and 	ie_Status_tasy = 'AG';

select	max(nr_seq_status),
		max(cd_estabelecimento)
into STRICT	nr_seq_status_ageint_w,
		cd_estabelecimento_w
from	agenda_integrada
where	nr_sequencia = nr_seq_ageint_p;

if (nr_seq_status_w IS NOT NULL AND nr_seq_status_w::text <> '') and (nr_seq_status_ageint_w <> nr_seq_status_w) then
	update	agenda_integrada
	set	nr_seq_status		= nr_seq_status_w,
		dt_fim_Agendamento	= clock_timestamp()
	where	nr_sequencia		= nr_seq_ageint_p;
end if;

CALL Gerar_Autor_Ageint_Exame_Lab(nr_seq_ageint_p,dt_finalizacao_p,nm_usuario_p);

CALL ageint_ins_anexo_email_lab(nr_seq_ageint_p, nm_usuario_p, cd_estabelecimento_w);

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ageint_finalizar_itens_lab (nr_seq_ageint_p bigint, dt_finalizacao_p timestamp, cd_estabelecimento_p bigint, nm_usuario_p text, ie_glosado_p INOUT text) FROM PUBLIC;

