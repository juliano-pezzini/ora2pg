-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE sus_gerar_sadt_carga ( cd_estabelecimento_p bigint, dt_vigencia_p timestamp, nm_usuario_p text, ds_retorno_p INOUT text) AS $body$
DECLARE



cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
qt_ato_medico_w			smallint;
vl_sadt_w			double precision;
dt_competencia_w			timestamp;
nr_sequencia_w			bigint;
cd_proc_unif_w			bigint;
qt_reg_w				bigint;

c01 CURSOR FOR
	SELECT	cd_procedimento,
		ie_origem_proced,
		qt_ato_medico,
		vl_sadt
	from	sus_preco_procaih
	where	dt_competencia	= dt_competencia_w
	order by 	4 desc;


BEGIN

select	count(*)
into STRICT	qt_reg_w
from	sus_aih_sadt
where	cd_estabelecimento	= cd_estabelecimento_p;


if (qt_reg_w = 0) then
	begin

	select	max(dt_competencia)
	into STRICT	dt_competencia_w
	from	sus_preco_procaih;

	open	c01;
	loop
	fetch	c01 into
		cd_procedimento_w,
		ie_origem_proced_w,
		qt_ato_medico_w,
		vl_sadt_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin

		begin
		select	a.cd_proc_unif
		into STRICT	cd_proc_unif_w
		from	sus_origem a,
			procedimento b
		where	a.cd_procedimento	= cd_procedimento_w
		and	a.ie_origem_proced	= ie_origem_proced_w
		and	a.cd_proc_unif		= b.cd_procedimento
		and	a.ie_origem_proc_unif	= b.ie_origem_proced
		and	b.ie_situacao		= 'A'
		and	not exists (	SELECT	1
					from	sus_aih_sadt x
					where	x.cd_procedimento	= a.cd_proc_unif
					and	dt_vigencia_inicial 	= dt_vigencia_p);
		exception
			when others then
				cd_proc_unif_w	:= 0;
		end;

		if (cd_proc_unif_w > 0) and
			((qt_ato_medico_w > 0) or (vl_sadt_w > 0)) then

			select	nextval('sus_aih_sadt_seq')
			into STRICT	nr_sequencia_w
			;

			insert	into sus_aih_sadt(nr_sequencia,
				cd_estabelecimento,
				cd_procedimento,
				ie_origem_proced,
				dt_vigencia_inicial,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				qt_ponto,
				vl_sadt,
				dt_vigencia_final)
			values (nr_sequencia_w,
				cd_estabelecimento_p,
				cd_proc_unif_w, 7,
				dt_vigencia_p,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				qt_ato_medico_w,
				vl_sadt_w, null);
		end if;

		end;
	end loop;
	close	c01;

	ds_retorno_p	:= 'Carga completada';
	end;
else
	ds_retorno_p	:= 'A carga j√° foi efetuada';
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE sus_gerar_sadt_carga ( cd_estabelecimento_p bigint, dt_vigencia_p timestamp, nm_usuario_p text, ds_retorno_p INOUT text) FROM PUBLIC;

