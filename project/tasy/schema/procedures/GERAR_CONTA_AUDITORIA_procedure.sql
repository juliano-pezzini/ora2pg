-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_conta_auditoria (nr_atendimento_p bigint, nr_interno_conta_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
nr_interno_conta_w	bigint;
ie_tipo_item_w		smallint;		/* 1 - Procedimento 		2 - Material */
nr_sequencia_w		bigint;
nr_conta_audit_w	bigint;
qt_registro_w		bigint;

c01 CURSOR FOR 
	SELECT	nr_interno_conta 
	from 	conta_paciente 
	where 	nr_atendimento = nr_atendimento_p 
	order by 1;

c02 CURSOR FOR 
	SELECT	1, 
		nr_sequencia 
	from 	procedimento_paciente 
	where 	nr_interno_conta = nr_interno_conta_w 
	
union all
 
	SELECT 	2, 
		nr_sequencia 
	from 	material_atend_paciente 
	where 	nr_interno_conta = nr_interno_conta_w 
	order by 1,2;

c03 CURSOR FOR 
	SELECT	a.nr_interno_conta		 
	from 	auditoria_conta_paciente a, 
		auditoria_propaci 	 b 
	where 	a.nr_sequencia = b.nr_seq_auditoria 
	and 	b.nr_seq_propaci = nr_sequencia_w;

c04 CURSOR FOR 
	SELECT	a.nr_interno_conta		 
	from 	auditoria_conta_paciente a, 
		auditoria_matpaci	 b 
	where 	a.nr_sequencia = b.nr_seq_auditoria 
	and 	b.nr_seq_matpaci = nr_sequencia_w;


BEGIN 
 
select 	count(*) 
into STRICT	qt_registro_w 
from 	auditoria_conta_paciente 
where 	nr_interno_conta = nr_interno_conta_p 
and	coalesce(dt_liberacao::text, '') = '';
 
if (qt_registro_w > 0) then 
 
	open c01;
	loop 
	fetch c01 into	 
		nr_interno_conta_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin 
	 
		open c02;
		loop 
		fetch c02 into	 
			ie_tipo_item_w, 
			nr_sequencia_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			begin 
		 
			if (ie_tipo_item_w = 1) then 
 
				open c03;
				loop 
				fetch c03 into	 
					nr_conta_audit_w;
				EXIT WHEN NOT FOUND; /* apply on c03 */
					begin 
			 
					if (nr_interno_conta_w <> nr_conta_audit_w) then 
						CALL TROCAR_CONTA_AUDITORIA(nr_interno_conta_w, nr_sequencia_w, ie_tipo_item_w, nm_usuario_p,null,'N', 'N');
					end if;			
			 
					end;
				end loop;
				close c03;
			 
			else 
			 
				open c04;
				loop 
				fetch c04 into	 
					nr_conta_audit_w;
				EXIT WHEN NOT FOUND; /* apply on c04 */
					begin 
			 
					if (nr_interno_conta_w <> nr_conta_audit_w) then 
						CALL TROCAR_CONTA_AUDITORIA(nr_interno_conta_w, nr_sequencia_w, ie_tipo_item_w, nm_usuario_p,null, 'N', 'N');
					end if;			
			 
					end;
				end loop;
				close c04;
			 
			end if;
 
			end;
		end loop;
		close c02;
 
		end;
	end loop;
	close c01;
 
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_conta_auditoria (nr_atendimento_p bigint, nr_interno_conta_p bigint, nm_usuario_p text) FROM PUBLIC;

