-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consiste_sus_aih (nr_atendimento_p bigint, nr_interno_conta_p bigint, ds_erro_p INOUT text) AS $body$
DECLARE


ds_erro_w         		varchar(2000)	:= '';
ds_erro_proc_w		varchar(255) 	:= '';
ds_erro_cid_w 		varchar(80) 	:= '';
ie_tipo_atend_bpa_w    	smallint   	:= 999;
cd_municipio_convenio_w 	integer   	:= 0;
qt_aih_w			bigint		:= 0;
qt_laudo_w		bigint		:= 0;
qt_laudo_original_w		bigint		:= 0;
qt_laudo_mudanca_w	bigint		:= 0;
qt_laudo_especiais_w	bigint		:= 0;
qt_laudo_incompleto_w	bigint		:= 0;
qt_aih_incompleto_w	bigint		:= 0;
qt_procedimento_w		bigint		:= 0;
cd_motivo_cobranca_w	smallint		:= null;
ie_especialidade_aih_w	smallint		:= null;
ie_espec_proc_aih_w	smallint		:= null;
qt_nascidos_total_w 	smallint		:= null;
qt_nascidos_vivos_w	smallint		:= null;
qt_nascidos_mortos_w	smallint		:= null;
qt_dia_acompanhante_w	smallint		:= 0;
cd_procedimento_solic_w	bigint		:= null;
ie_origem_proced_w		bigint		:= null;
qt_procedimento_solic_w	integer		:= null;
cd_medico_requisitante_w	varchar(10)	:= '';
nr_aih_w			bigint		:= null;
nr_seq_aih_w		bigint		:= 0;
ie_tipo_laudo_sus_w	smallint		:= null;
cd_proced_realiz_w		bigint		:= null;
qt_proced_realiz_w		bigint		:= 0;
cd_doenca_cid_w		varchar(10)	:= 'X';
cd_cid_secundario_w	varchar(10)	:= 'X';
dt_nascimento_w		timestamp;
ie_sexo_w		varchar(1)		:= 'X';
cd_nacionalidade_w	varchar(10)	:= 'X';
nr_prontuario_w		bigint		:= 0;
nr_endereco_w		integer		:= 0;
ds_endereco_w		varchar(100)	:= 'X';
ds_municipio_w		varchar(40)	:= 'X';
sg_estado_w		varchar(15)		:= 'X';
cd_municipio_ibge_w	varchar(6)		:= 'X';
cd_cep_w		varchar(15)	:= 'X';
dt_entrada_w		timestamp			:= null;
dt_entrada_unidade_w	timestamp			:= null;
dt_emissao_aih_w		timestamp			:= null;
dt_alta_w			timestamp			:= null;
cd_motivo_alta_w		smallint		:= null;
ie_clinica_w		integer		:= null;
ie_carater_inter_sus_w	varchar(2)		:= 'X';
ie_vinculo_sus_w		varchar(1)		:= 'X';
dt_emissao_w		timestamp			:= null;
dt_emissao_laudo_w	timestamp			:= null;
qt_reg_longa_perm_w	bigint		:= 0;
ie_erro_longa_perm_w	varchar(1)		:= 'N';
cd_proced_longa_perm_w	bigint		:= null;
cd_proced_realiz_perm_w	bigint		:= null;
qt_diarias_w		bigint		:= 0;
qt_permanencia_w		bigint		:= 0;
cd_orgao_emissor_aih_w	varchar(10)		:= '#';
cd_orgao_emissor_sus_w	varchar(10)		:= 'X';
cd_unidade_basica_w	varchar(10)	:= 'X';
cd_unidade_compl_w	varchar(10)	:= 'X';
nr_cpf_solic_w		varchar(11)	:= 'X';
nr_cpf_resp_w		varchar(11)	:= 'X';
qt_cpf_invalido_w		bigint		:= 0;
qt_cpf_part_inv_w		bigint		:= 0;
qt_ato_invalido_w		bigint		:= 0;
qt_serv_invalido_w		bigint		:= 0;
cd_proc_requerido_w	bigint		:= 0;
ie_origem_requerido_w	smallint		:= 0;
ie_obrigatorio_w		varchar(1);
QT_LAUDO_ORIG_W	bigint		:= 0;
QT_CGC_INV_W		bigint		:= 0;
CD_PROC_DUPLO_W	bigint		:= 0;
QT_DUPLOS_W		double precision	:= 0;
QT_DUPLOS_LAUDO_W	double precision	:= 0;
cd_procedimento_p		bigint;
cd_estabelecimento_w	smallint;
cd_medico_Gestor_w	varchar(10);
dt_autorizacao_Gestor_w	timestamp;
ie_autorizacao_Gestor_w	smallint;
cd_cgc_estabelecimento_w	varchar(14);
nm_paciente_w		varchar(60);
ds_texto_w		varchar(60);
ds_Caracter_invalido_w	varchar(60);
i			integer;
qt_perm_sus_calc_w	bigint;
qt_perm_real_calc_w	bigint;
qt_longa_perm_calc_w	bigint;
nr_aih_calc_w		bigint;
qt_Proc_Urg_Emerg_w	smallint;
cd_classificacao_w		varchar(15);
qt_filho_w		smallint;
ie_grau_instrucao_w	varchar(2);
ie_contraceptivo_um_w	varchar(2);
ie_contraceptivo_dois_w	varchar(2);
ie_motivo_alta_uti_neo_w	varchar(01);
qt_peso_grama_w		smallint;
qt_mes_gestacao_w	smallint;
qt_anos_w		smallint;
ds_erro_mat_esp_w		varchar(80);
nr_gestante_pre_natal_w	bigint;
dt_autorizacao_w		timestamp;
qt_dia_uti_mes_alta_w	smallint;
nr_aih_susaih_w		bigint	:= 0;
nr_aih_laudo_w		bigint	:= 0;
cd_munic_ibge_val_w	varchar(6)	:= 'X';
qt_laudo_exige_autor_w	smallint;
qt_total_dia_uti_w		integer;
nr_aih_consiste10_w	bigint	:= 0;
nr_aih_consiste13_w	bigint	:= 0;
nr_digito_aih_w		smallint	:= 0;
nr_digito_aih13_w		varchar(1);
qt_erro_cgc_w		bigint;
cd_procedimento_cid_w	bigint		:= 0;
nr_laudo_sus_w		smallint		:= 0;
cd_proc_sus_aih_w		bigint		:= 0;
ie_alta_complexidade_w	varchar(1)		:= 'N';
qt_proc_grupo_w		integer;
qt_dia_uti_w		integer;
qt_dia_proc_uti_w		integer;
nr_proxima_aih_w		bigint;
qt_nasc_sai_alta_w		smallint;
qt_nasc_sai_trans_w	smallint;
qt_nasc_sai_obito_w	smallint;
NR_CPF_w                	varchar(11);
NR_IDENTIDADE_w         	varchar(15);
NR_CERT_NASC_w          	varchar(20);
qt_reg_w			bigint;
qt_acompanhantes_w	bigint;
ie_exige_proxima_aih_w	varchar(1);
qt_tot_acompanhantes_w	bigint;
ie_tipo_atendimento_w	smallint;
nr_seq_padrao_w		bigint;
ds_erro_analgesia_w	varchar(80);
qt_procs_sp_w		bigint	:= 0;
nr_seq_sipac_w		bigint;
qt_reg_sipac_w		integer	:= 0;
qt_reg_sipac_ww		integer	:= 0;
qt_laudo_inco_w		smallint	:= 0;
qt_rn_sala_parto_w		integer	:= 0;
cd_proced_exec_w		bigint;
qt_atos_aih_w		integer	:= 0;
cd_procedimento_w	bigint;
qt_ato_w			integer	:= 0;
qt_max_procedimento_w	integer 	:= 0;
qt_proc_inter_w		integer	:= 0;
ie_carater_inter_aih_w	varchar(2);
ie_carater_inter_atend_w	varchar(2);
qt_curta_perm_w		real;
ie_regra_tipo_atend_w	varchar(1):= 'A';

C02 CURSOR FOR
	SELECT	cd_procedimento_solic,
			ie_origem_proced,
			qt_procedimento_solic,
			cd_medico_requisitante,
			nr_aih,
			ie_tipo_laudo_sus,
			dt_emissao,
			coalesce(nr_aih,0)
      from 		sus_laudo_paciente
      where 	nr_atendimento	= nr_atendimento_p
	and		nr_interno_conta	= nr_interno_conta_p
	and		ie_tipo_laudo_sus	<> 15
	order by	ie_tipo_laudo_sus,dt_emissao;
C05 CURSOR FOR
	SELECT 	cd_procedimento_solic,	 sum(qt_procedimento_solic)
	from 		sus_laudo_paciente
	where      	nr_atendimento 	= nr_atendimento_p
	and		nr_interno_conta	= nr_interno_conta_p
	and		ie_tipo_laudo_sus	<> 15
	group by 	cd_procedimento_solic;

C06 CURSOR FOR
	SELECT	b.nr_sequencia
	from	sus_sipac	b,
		sus_sipac_proc	a
	where	a.nr_seq_sipac	 	= b.nr_sequencia
	and	a.cd_procedimento	= cd_proced_realiz_w;

C08 CURSOR FOR
	SELECT		cd_procedimento,
			sum(coalesce(qt_procedimento,0))
      	from 		procedimento_paciente
      	where 		nr_atendimento		= nr_atendimento_p
	and		nr_interno_conta	= nr_interno_conta_p
	and		ie_origem_proced	= 2
	and		coalesce(cd_motivo_exc_conta::text, '') = ''
	group by	cd_procedimento
	order by 	cd_procedimento;


BEGIN
ds_erro_w			:= '';
ds_caracter_invalido_w 	:= '1234567890~`@#$%^&*()_-+=|\;:".,/?'||chr(39);

select	obter_procedimento_aih(nr_interno_conta_p, 'E')
into STRICT	cd_proced_exec_w
;

/* CONSISTENCIA DA AIH SEM CONTA */

if (coalesce(nr_interno_conta_p,0) = 0)  then
	ds_erro_w			:= ds_erro_w || '2150 ';
else
	begin
	/* CONSISTENCIA DA CONTA COM MAIS DE UMA AIH */

	select count(*)
	into STRICT	 qt_reg_w
	from	 sus_aih
	where	 nr_interno_conta	= nr_interno_conta_p;
	if (qt_reg_w	> 1) then
		ds_erro_w			:= ds_erro_w || '2153 ';
	end if;
	end;
end if;

/* Falta AIH */

begin
select 	cd_motivo_cobranca,ie_especialidade_aih,qt_nascidos_vivos,
		qt_nascidos_mortos,coalesce(cd_orgao_emissor,'#'),cd_medico_Gestor,
		dt_autorizacao_Gestor,ie_autorizacao_Gestor,coalesce(qt_dia_acompanhante,0),
		qt_filho,ie_grau_instrucao,ie_contraceptivo_um,
		ie_contraceptivo_dois,ie_motivo_alta_uti_neo,qt_peso_grama,
		qt_mes_gestacao,coalesce(nr_gestante_pre_natal,0),dt_autorizacao_acomp,
		coalesce(qt_dia_uti_mes_alta,0),nr_aih, nr_sequencia,
		(coalesce(qt_dia_uti_mes_alta,0) + coalesce(qt_dia_uti_mes_ini,0) +
		coalesce(qt_dia_uti_mes_ant,0)),
		cd_procedimento_solic,coalesce(nr_proxima_aih,0),coalesce(qt_nasc_sai_alta,0),
		coalesce(qt_nasc_sai_trans,0),coalesce(qt_nasc_sai_obito,0),
		(coalesce(qt_nascidos_vivos,0) + coalesce(qt_nascidos_mortos,0)), dt_emissao
into STRICT		cd_motivo_cobranca_w,ie_especialidade_aih_w,qt_nascidos_vivos_w,
		qt_nascidos_mortos_w,cd_orgao_emissor_aih_w,cd_medico_Gestor_w,
		dt_autorizacao_Gestor_w,ie_autorizacao_Gestor_w,qt_dia_acompanhante_w,
		qt_filho_w,ie_grau_instrucao_w,ie_contraceptivo_um_w,
		ie_contraceptivo_dois_w,ie_motivo_alta_uti_neo_w,qt_peso_grama_w,
		qt_mes_gestacao_w,nr_gestante_pre_natal_w,dt_autorizacao_w,
		qt_dia_uti_mes_alta_w,nr_aih_susaih_w, nr_seq_aih_w,
		qt_total_dia_uti_w,
		cd_proc_sus_aih_w,nr_proxima_aih_w,qt_nasc_sai_alta_w,
		qt_nasc_sai_trans_w,qt_nasc_sai_obito_w,
		qt_nascidos_total_w, dt_emissao_aih_w
from 		sus_aih
where 	nr_atendimento	= nr_atendimento_p
and		nr_interno_conta	= nr_interno_conta_p;
exception
	when others then
		ds_erro_w	:= ds_erro_w || '700 ';
end;

/* AIH sem valor para Ponto SP*/

select	count(*)
into STRICT	qt_procs_sp_w
from	procedimento_paciente
where	nr_atendimento		= nr_atendimento_p
and	nr_interno_conta	= nr_interno_conta_p
and	ie_origem_proced	= 2
and	ie_tipo_servico_sus	in (4,7,45)
and	coalesce(cd_motivo_exc_conta::text, '') = '';
if (qt_procs_sp_w	= 0) then
	ds_erro_w	:= ds_erro_w || '2231 ';
end if;

/* AIH sem conta */

select count(*)
into STRICT	 qt_reg_w
from	 sus_aih
where	 nr_atendimento	= nr_atendimento_p
and	 coalesce(nr_interno_conta::text, '') = '';
if (qt_reg_w > 0) then
	ds_erro_w	:= ds_erro_w || '2151 ';
end if;

/* Laudo sem conta */

select count(*)
into STRICT	 qt_reg_w
from	 sus_laudo_paciente
where	 nr_atendimento	= nr_atendimento_p
and	 coalesce(nr_interno_conta::text, '') = '';
if (qt_reg_w > 0) then
	ds_erro_w	:= ds_erro_w || '2152 ';
end if;

select	a.cd_estabelecimento
into STRICT	cd_estabelecimento_w
from	atendimento_paciente a,
	estabelecimento b
where	a.cd_estabelecimento 	= b.cd_estabelecimento
and	a.nr_atendimento	= nr_atendimento_p;

begin
select	cd_classificacao
into STRICT		cd_classificacao_w
from 		sus_classificacao_hospital
where		cd_estabelecimento = cd_estabelecimento_w;
exception
	when others then
		cd_classificacao_w := '0';
end;

/* Consistencia alta complexidade HSA - Fatura protocolo separado */

ie_alta_complexidade_w	:= 'N';
if (cd_proc_sus_aih_w IS NOT NULL AND cd_proc_sus_aih_w::text <> '') then
	begin
	select coalesce(max(ie_alta_complexidade),'N')
	into STRICT	 ie_alta_complexidade_w
	from	 procedimento
	where	 cd_procedimento	= cd_proc_sus_aih_w
	and	 ie_origem_proced	= 2;
	if (ie_alta_complexidade_w = 'S') then
		 ds_erro_w	:= ds_erro_w || '2125 ';
	end if;
	end;
end if;

/* Consistencia dígito da AIH OS6693 */

if (length(nr_aih_susaih_w) <> 10)	and (length(nr_aih_susaih_w) <> 13)	then
	ds_erro_w	:= ds_erro_w || '2115 ';
end if;
if (nr_aih_susaih_w IS NOT NULL AND nr_aih_susaih_w::text <> '')	and (length(nr_aih_susaih_w) = 10)	then
	begin
	nr_aih_consiste10_w	:= trunc(nr_aih_susaih_w);
	select calcula_digito('AIH',to_char(nr_aih_consiste10_w))
	into STRICT	nr_digito_aih_w
	;
	if (coalesce(substr(nr_aih_consiste10_w,10,1),'X') <> to_char(nr_digito_aih_w)) then
		ds_erro_w	:= ds_erro_w || '2114 ';
	end if;
	end;
elsif (nr_aih_susaih_w IS NOT NULL AND nr_aih_susaih_w::text <> '')	and (length(nr_aih_susaih_w) = 13)	then
	begin
	nr_aih_consiste13_w	:= trunc(nr_aih_susaih_w);
	select	consistir_digito('AIH',to_char(nr_aih_consiste13_w))
	into STRICT	nr_digito_aih13_w
	;
	if	nr_digito_aih13_w	= 'N' then
		ds_erro_w	:= ds_erro_w || '2114 ';
	end if;
	end;
end if;

/* AIH Incompleta */

if (coalesce(cd_motivo_cobranca_w::text, '') = '') or (coalesce(ie_especialidade_aih_w::text, '') = '') then
	ds_erro_w	:= ds_erro_w || '708 ';
end if;

select coalesce(max(ie_exige_proxima_aih),'N')
into STRICT	 ie_exige_proxima_aih_w
from	 sus_motivo_cobranca
where	 cd_motivo_cobranca	= cd_motivo_cobranca_w;

/* Motivo cobranca X proxima AIH */

/* incluido campo e excluido teste fixo em 280605
if	(cd_motivo_cobranca_w is not null) 		and
	(cd_motivo_cobranca_w between 61 and 68) 	and
	(nr_proxima_aih_w = 0)				then
	ds_erro_w	:= ds_erro_w || '2132 ';
end if;
*/
if (ie_exige_proxima_aih_w	= 'S') and (nr_proxima_aih_w = 0)		 then
	ds_erro_w	:= ds_erro_w || '2132 ';
end if;

/* Quantidade de nascimentos */

if	((qt_nasc_sai_alta_w
	+ qt_nasc_sai_trans_w
	+ qt_nasc_sai_obito_w) <> qt_nascidos_total_w) then
	ds_erro_w	:= ds_erro_w || '2133 ';
end if;

/* Dados do gestor OS6797 */

if (coalesce(cd_medico_Gestor_w::text, '') = ''	and
	coalesce(dt_autorizacao_Gestor_w::text, '') = ''	and
	coalesce(ie_autorizacao_Gestor_w::text, '') = '')	or ((cd_medico_Gestor_w IS NOT NULL AND cd_medico_Gestor_w::text <> '')	and
	(dt_autorizacao_Gestor_w IS NOT NULL AND dt_autorizacao_Gestor_w::text <> '')	and
	(ie_autorizacao_Gestor_w IS NOT NULL AND ie_autorizacao_Gestor_w::text <> '')) then
	ds_erro_w	:= ds_erro_w;
else
	ds_erro_w	:= ds_erro_w || '2113 ';
end if;

qt_laudo_exige_autor_w	:= 0;
OPEN C02;
LOOP
FETCH C02 into
		cd_procedimento_solic_w,
		ie_origem_proced_w,
		qt_procedimento_solic_w,
		cd_medico_requisitante_w,
		nr_aih_w,
		ie_tipo_laudo_sus_w,
		dt_emissao_w,
		nr_aih_laudo_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
	BEGIN
	qt_laudo_w	:= (qt_laudo_w + 1);
	/* Excluir permanencia a maior dos proc que exigem dt autorizaçao OS7010 */

	if (ie_tipo_laudo_sus_w > 1) 					and (substr(cd_procedimento_solic_w,1,5) <> '99003')	then
		qt_laudo_exige_autor_w	:= (qt_laudo_exige_autor_w + 1);
	end if;

	if (ie_tipo_laudo_sus_w = 0)		then
		dt_emissao_laudo_w := dt_emissao_w;
	end if;
	if (ie_tipo_laudo_sus_w = 0)		then
		qt_laudo_original_w := (qt_laudo_original_w + 1);
	end if;
	if (ie_tipo_laudo_sus_w = 1)		then
		qt_laudo_mudanca_w := (qt_laudo_mudanca_w + 1);
	end if;
	if (ie_tipo_laudo_sus_w > 1)		then
		qt_laudo_especiais_w := (qt_laudo_especiais_w + 1);
	end if;
	if (ie_tipo_laudo_sus_w = 0)		or (ie_tipo_laudo_sus_w = 1)		then
		begin
		cd_proced_realiz_w 	:= cd_procedimento_solic_w;
		cd_proced_realiz_perm_w := cd_procedimento_solic_w;
		end;
	end if;
	if (cd_proced_realiz_perm_w in (31000002,39000001,70000000)) and (ie_tipo_laudo_sus_w	  = 9) then
		cd_proced_realiz_perm_w := cd_procedimento_solic_w;
	end if;
	if (coalesce(dt_emissao_w::text, '') = '') 			or (coalesce(cd_procedimento_solic_w::text, '') = '') 	or (coalesce(ie_origem_proced_w::text, '') = '') 		or (coalesce(qt_procedimento_solic_w::text, '') = '')	or (cd_medico_requisitante_w = '')	or (coalesce(nr_aih_w::text, '') = '') 			then
		begin
		qt_laudo_incompleto_w := qt_laudo_incompleto_w + 1;
		end;
	end if;

	/* CONSISTENCIA do número da AIH da sus_aih com sus_laudo_paciente */

	if (nr_aih_susaih_w	= 0) 			then
		ds_erro_w	:= ds_erro_w || '2107 ';
	end if;
	if (nr_aih_susaih_w <> nr_aih_laudo_w)	then
		ds_erro_w	:= ds_erro_w || '2106 ';
	end if;

/* excluida esta consistencia, de acordo com solicitado por Elias em 28/09/04 */

/* quando tem mais de um procedimento do tipo 9, como cirurgia múltipla, pode não combinar o cid */

/* para mais de um procedimento */

/*
	if	(ie_tipo_laudo_sus_w	  = 9) then
		begin
		ds_erro_cid_w	:= '';
		Consiste_Cid_Atendimento(
				nr_atendimento_p,
				nr_interno_conta_p,
				cd_procedimento_solic_w,
				cd_doenca_cid_w,
				ds_erro_cid_w);
		if	(ds_erro_cid_w like '%768%') then
			ds_erro_w	:= ds_erro_w || '2105 ';
		end if;
		end;
	end if;
*/
	END;
END LOOP;
CLOSE C02;

/* Consiste proc do laudo de mudanca ou original com da aih	*/

if (cd_proced_realiz_w <> cd_proc_sus_aih_w) then
	ds_erro_w	:= ds_erro_w || '2134 ';
end if;

/* Não pode ter mais de um procedimento autorizado laudo do tipo-9 do mesmo grupo 	*/

/* Solictação de Elias/Sto Antonio diz que rejeita AIH no RJ em 13/10/2004 		*/

/* Solictação de Elias/Sto Antonio diz para excluir proc que iniciam em 39 OS13844	*/

qt_proc_grupo_w	:= 0;
select coalesce(max(count(*)),0)
into STRICT	 qt_proc_grupo_w
from	 procedimento b,
	 sus_laudo_paciente a
where	 a.nr_atendimento 		= nr_atendimento_p
and	 a.nr_interno_conta		= nr_interno_conta_p
and	 a.ie_tipo_laudo_sus 		= 9
and	 substr(a.cd_procedimento_solic,1,2) <> '39'
and	 a.cd_procedimento_solic 	= b.cd_procedimento
and	 a.ie_origem_proced 		= b.ie_origem_proced
and	 coalesce(b.cd_grupo_proc_aih,0) 	<> 0
group	 by b.cd_grupo_proc_aih
having count(*) > 1;
if (qt_proc_grupo_w	> 0) then
	ds_erro_w	:= ds_erro_w || '2127 ';
end if;


/* Validar CID do primeiro laudo do tipo-9 */

select coalesce(min(nr_laudo_sus),0)
into STRICT	 nr_laudo_sus_w
from	 sus_laudo_paciente
where	 nr_atendimento		= nr_atendimento_p
and	 nr_interno_conta		= nr_interno_conta_p
and	 ie_tipo_laudo_sus	= 9;

if (nr_laudo_sus_w	> 0) then
	begin
	select coalesce(cd_procedimento_solic,0)
	into STRICT	 cd_procedimento_cid_w
	from	 sus_laudo_paciente
	where	 nr_atendimento		= nr_atendimento_p
	and	 nr_interno_conta		= nr_interno_conta_p
	and	 ie_tipo_laudo_sus	= 9
	and	 nr_laudo_sus		= nr_laudo_sus_w;
	/* CONSISTENCIA CID procedimentos autorizados */

	ds_erro_cid_w	:= '';
	SELECT * FROM Consiste_Cid_Atendimento(
			nr_atendimento_p, nr_interno_conta_p, cd_procedimento_cid_w, cd_doenca_cid_w, ds_erro_cid_w) INTO STRICT cd_doenca_cid_w, ds_erro_cid_w;
	if (ds_erro_cid_w like '%768%') then
		ds_erro_w	:= ds_erro_w || '2105 ';
	end if;
	end;
end if;

/* Validar data de autorização OS6690 */

if (qt_total_dia_uti_w	> 0)	or (qt_dia_acompanhante_w	> 0)	then
/*	(qt_laudo_exige_autor_w	> 0)	then    excluido por solicitação Elias OS13844  */

	begin
	if (coalesce(dt_autorizacao_w::text, '') = '') then
		ds_erro_w	:= ds_erro_w || '2110 ';
	end if;
	end;
else
	begin
	if (dt_autorizacao_w IS NOT NULL AND dt_autorizacao_w::text <> '') then
		ds_erro_w	:= ds_erro_w || '2111 ';
	end if;
	end;
end if;

/* Sem Laudo para AIH  */

if	qt_laudo_w = 0 then
	ds_erro_w	:= ds_erro_w || '701 ';
end if;
/* Falta ou mais de um proced principal  */

if (qt_laudo_original_w = 0) or (qt_laudo_original_w > 1) then
	ds_erro_w	:= ds_erro_w || '702 ';
end if;
/* Mais de um proced de mudança  */

if (qt_laudo_mudanca_w > 1) then
	ds_erro_w	:= ds_erro_w || '703 ';
end if;
/* Mais de 5 Laudos Especiais  */

if (qt_laudo_especiais_w > 5) then
	ds_erro_w	:= ds_erro_w || '704 ';
end if;
/* Laudos Incompletos */

if (qt_laudo_incompleto_w > 0) then
	ds_erro_w	:= ds_erro_w || '707 ';
end if;


/* Falta Qtd de nascidos vivos ou morto  */

if (cd_proced_realiz_w in (
	35001011, 35022019, 35023015, 35025018,	35027010, 35080019,
 	35021012, 35024011, 35006013, 45080038, 35009012, 35022019,
 	35026014, 35028017, 35082011, 35084014,	35083018, 35085010, 45080194)) and (qt_nascidos_vivos_w = 0)							and (qt_nascidos_mortos_w = 0)							then
	ds_erro_w	:= ds_erro_w || '714 ';
end if;

/* Consistencia de analgesia  */

if (cd_proced_realiz_w in (
	35001011,35007010,35006013,35086017,35025018,35080019,35009012,35082011,35026014,
	35084014,35027010,35085010,35028017)) then
	begin
	ds_erro_analgesia_w := '';
	ds_erro_analgesia_w := SUS_CONSISTE_ANALGESIA(nr_atendimento_p, nr_interno_conta_p, cd_proced_realiz_w, ds_erro_analgesia_w);
	if	((length(coalesce(ds_erro_w,' ')) + length(ds_erro_analgesia_w)) < 80) then
		ds_erro_w 	:= ds_erro_w || ds_erro_analgesia_w;
	end if;
	end;
end if;

begin
Select coalesce(sum(a.qt_procedimento),0)
into STRICT qt_proced_realiz_w
from procedimento_paciente a
where a.nr_atendimento 		= nr_atendimento_p
and	a.nr_interno_conta	= nr_interno_conta_p
and	a.cd_procedimento		= cd_proced_realiz_w
and	a.ie_origem_proced	= ie_origem_proced_w
and	coalesce(a.cd_motivo_exc_conta::text, '') = '';
exception
	when others then
		qt_proced_realiz_w := 0;
end;
if (qt_proced_realiz_w = 0) then
	ds_erro_w	:= ds_erro_w || '709 ';
end if;

/* CONSISTENCIA DOS PADROES DE PROCEDIMENTO */

select 	count(*)
into STRICT	qt_reg_w
from	sus_aih_padrao;
if (qt_reg_w		> 0) then
	begin
	/* consistencia padrão procedimento - obrigatorio */

	select	coalesce(max(b.nr_sequencia),0)
	into STRICT	nr_seq_padrao_w
	from	sus_aih_padrao b,
		sus_aih_padrao_proc a
	where	a.nr_seq_aih_padrao	= b.nr_sequencia
	and	b.cd_proc_realizado 	= cd_proced_realiz_w
	and	b.ie_origem_realizado	= ie_origem_proced_w
	and	a.ie_tipo_padrao		= 1;
	if (nr_seq_padrao_w	> 0)	then
		begin
		select 	count(*)
		into STRICT	qt_reg_w
		from	sus_aih_padrao_proc b
		where	b.nr_seq_aih_padrao 	= nr_seq_padrao_w
		and	b.ie_tipo_padrao		= 1
		and	not exists (
			SELECT 1 from procedimento_paciente x
			where	x.nr_interno_conta	= nr_interno_conta_p
			and	x.cd_procedimento	= b.cd_proc_padrao
			and	x.ie_origem_proced	= b.ie_origem_padrao);
		if (qt_reg_w	 > 0) then
			ds_erro_w	:= ds_erro_w || '2201 ';
		end if;
		end;
	end if;
	/* consistencia padrão procedimento - impeditivo */

	select	coalesce(max(b.nr_sequencia),0)
	into STRICT	nr_seq_padrao_w
	from	sus_aih_padrao b,
		sus_aih_padrao_proc a
	where	a.nr_seq_aih_padrao	= b.nr_sequencia
	and	b.cd_proc_realizado 	= cd_proced_realiz_w
	and	b.ie_origem_realizado	= ie_origem_proced_w
	and	a.ie_tipo_padrao		= 3;
	if (nr_seq_padrao_w	> 0)	then
		begin
		select 	count(*)
		into STRICT	qt_reg_w
		from	sus_aih_padrao_proc b
		where	b.nr_seq_aih_padrao 	= nr_seq_padrao_w
		and	b.ie_tipo_padrao		= 3
		and	exists (
			SELECT 1 from procedimento_paciente x
			where	x.nr_interno_conta	= nr_interno_conta_p
			and	x.cd_procedimento	= b.cd_proc_padrao
			and	x.ie_origem_proced	= b.ie_origem_padrao);
		if (qt_reg_w	 > 0) then
			ds_erro_w	:= ds_erro_w || '2202 ';
		end if;
		end;
	end if;
	end;
end if;

ds_erro_cid_w	:= '';
/* CONSISTENCIA CID */

SELECT * FROM Consiste_Cid_Atendimento(
		nr_atendimento_p, nr_interno_conta_p, cd_proced_realiz_w, cd_doenca_cid_w, ds_erro_cid_w) INTO STRICT cd_doenca_cid_w, ds_erro_cid_w;
ds_erro_w	:= ds_erro_w || ds_erro_cid_w;


/* CONSISTENCIA DADOS CADASTRAIS DO PACIENTE */

begin
Select 	SUBSTR(OBTER_NOME_PF(a.CD_PESSOA_FISICA), 0, 60),
		a.dt_nascimento,
		coalesce(a.ie_sexo,'X'),
		coalesce(a.cd_nacionalidade,'X'),
		coalesce(a.nr_prontuario, 0),
		obter_idade(a.dt_nascimento,clock_timestamp(),'A') qt_anos,
		NR_CPF,
		NR_IDENTIDADE,
		NR_CERT_NASC,
		b.ie_tipo_atendimento
into STRICT 		nm_paciente_w,
		dt_nascimento_w,
		ie_sexo_w,
		cd_nacionalidade_w,
		nr_prontuario_w,
		qt_anos_w,
		NR_CPF_w,
		NR_IDENTIDADE_w,
		NR_CERT_NASC_w,
		ie_tipo_atendimento_w
from 		pessoa_fisica a,
		atendimento_paciente b
where 	a.cd_pessoa_fisica 	= b.cd_pessoa_fisica
and		b.nr_atendimento		= nr_atendimento_p;
exception
	when others then
		begin
 		dt_nascimento_w		:= null;
		ie_sexo_w			:= 'X';
		cd_nacionalidade_w	:= 'X';
		nr_prontuario_w		:= 0;
		end;
end;

/*Obter parâmetros de Faturamento*/

select	coalesce(max(ie_regra_tipo_atend),'A')
into STRICT	ie_regra_tipo_atend_w
from	parametro_faturamento
where	cd_estabelecimento = cd_estabelecimento_w;

if (coalesce(ie_regra_tipo_atend_w,'A') = 'C') then
	begin
	select	coalesce(max(ie_tipo_atend_conta),ie_tipo_atendimento_w)
	into STRICT	ie_tipo_atendimento_w
	from 	conta_paciente
	where 	nr_interno_conta = nr_interno_conta_p;
	exception
		when others then
		ie_tipo_atendimento_w:= ie_tipo_atendimento_w;
	end;
end if;

/* Falta documento do pac */

if (coalesce(NR_CPF_w::text, '') = '')	and (coalesce(NR_IDENTIDADE_w::text, '') = '')	and (coalesce(NR_CERT_NASC_w::text, '') = '')	then
		ds_erro_w	:= ds_erro_w || '2135 ';
end if;

/* Tipo de atendimento diferente de internado */

if (ie_tipo_atendimento_w <> 1) then
		ds_erro_w	:= ds_erro_w || '2167 ';
end if;


/* Falta idade,sexo ou nacionalidade do pac */

if (coalesce(dt_nascimento_w::text, '') = '')	or (ie_sexo_w = 'X')			or (nr_prontuario_w = 0)		or (cd_nacionalidade_w = 'X')	then
		ds_erro_w	:= ds_erro_w || '712 ';
end if;
/* Nome do paciente com caracteres inválido */

if (coalesce(nm_paciente_w::text, '') = '')	or (nm_paciente_w = '')	then
		ds_erro_w	:= ds_erro_w || '760 ';
else
	begin
	ds_texto_w  := nm_paciente_w;
	FOR i IN 1..length(ds_caracter_invalido_w) LOOP
		ds_texto_w	:= replace(ds_texto_w, substr(ds_caracter_invalido_w,i,1), '');
	END LOOP;
	if (ds_texto_w <> nm_paciente_w) then
		ds_erro_w	:= ds_erro_w || '760 ';
	end if;
	end;
end if;

/* CONSISTENCIA ENDERECO DO PACIENTE */

begin
Select	coalesce(a.ds_endereco,'X'),coalesce(a.ds_municipio,'X'),coalesce(a.sg_estado,'X'),
		coalesce(a.cd_municipio_ibge,'X'),coalesce(a.cd_cep,'X'),coalesce(a.nr_endereco,0)
into STRICT		ds_endereco_w,ds_municipio_w,sg_estado_w,
		cd_municipio_ibge_w,cd_cep_w,nr_endereco_w
from 		compl_pessoa_fisica a,
		atendimento_paciente b
where 	a.cd_pessoa_fisica 	= b.cd_pessoa_fisica
and		a.ie_tipo_complemento	= 1
and		b.nr_atendimento		= nr_atendimento_p;
exception
	when others then
		begin
		ds_endereco_w		:= 'X';
		ds_municipio_w		:= 'X';
		sg_estado_w			:= 'X';
		cd_municipio_ibge_w	:= 'X';
		cd_cep_w			:= 'X';
		end;
end;
/* Falta End.,Mun.,UF,IBGE ou CEP do pacien */

if (ds_endereco_w = 'X')		or (ds_municipio_w = 'X')		or (sg_estado_w = 'X')		or (cd_municipio_ibge_w = 'X')	or (cd_cep_w = 'X')		then
		ds_erro_w	:= ds_erro_w || '713 ';
end if;

/* Falta Número do endereço do paciente */

if (nr_endereco_w = 0)		then
		ds_erro_w	:= ds_erro_w || '2103 ';
end if;

/* CEP não Cadastrado no SUS */

if (cd_cep_w <> 'X')		then
	begin
	select cd_cep
	into STRICT	cd_cep_w
	from 	cep_municipio
	where cd_cep = cd_cep_w;
	exception
		when others then
			ds_erro_w	:= ds_erro_w || '765 ';
	end;
end if;

/* CEP logradouro não fecha com município IBGE OS6692 */

if (cd_cep_w <> 'X')			and (cd_municipio_ibge_w <> 'X')	then
	begin
	select coalesce(obter_municipio_ibge(campo_numerico(cd_cep_w)),'0')
	into STRICT	 cd_munic_ibge_val_w
	;
	if (cd_municipio_ibge_w <> cd_munic_ibge_val_w) then
		ds_erro_w	:= ds_erro_w || '2108 ';
	end if;
	end;
end if;

/* CEP geral do municipio para municipio que possue cep logradouros  */

qt_reg_w	:= 0;
if (cd_cep_w <> 'X')		then
	begin
	select 	count(*)
	into STRICT	qt_reg_w
	from 	municipio_com_logradouro
	where 	cd_cep = cd_cep_w;
	exception
		when others then
		qt_reg_w	:= 0;
	end;
end if;
if (qt_reg_w		> 0) then
	ds_erro_w	:= ds_erro_w || '2168 ';
end if;

/* CONSISTENCIA DADOS ATENDIMENTO DO PACIENTE */

begin
Select 	coalesce(c.dt_inicial,a.dt_entrada),
		coalesce(c.dt_final,a.dt_alta),
		coalesce(c.cd_motivo_alta,a.cd_motivo_alta),
		coalesce(c.ie_clinica,a.ie_clinica),
		coalesce(coalesce(c.ie_carater_inter_sus,a.ie_carater_inter_sus),'X'),
		coalesce(a.ie_vinculo_sus,'X'),
		a.cd_estabelecimento,
		b.cd_cgc,
		coalesce(c.ie_carater_inter_sus,'X'),
		coalesce(a.ie_carater_inter_sus,'X')
into STRICT	 	dt_entrada_w,dt_alta_w,cd_motivo_alta_w,
		ie_clinica_w,ie_carater_inter_sus_w,ie_vinculo_sus_w,
		cd_estabelecimento_w,cd_cgc_estabelecimento_w,
		ie_carater_inter_aih_w, ie_carater_inter_atend_w
FROM sus_aih c, estabelecimento b, atendimento_paciente a
WHERE a.nr_atendimento		= nr_atendimento_p and a.cd_estabelecimento	= b.cd_estabelecimento and a.nr_atendimento	= c.nr_atendimento;
exception
	when others then
		begin
 		dt_entrada_w		:= null;
		dt_alta_w			:= null;
		cd_motivo_alta_w		:= null;
		ie_clinica_w		:= null;
		ie_carater_inter_sus_w	:= 'X';
		ie_vinculo_sus_w		:= 'X';
		end;
end;

/*OS61398 Andre - Caráter de internação da AIH diferente do atendimento*/

if (ie_carater_inter_atend_w 	<> ie_carater_inter_aih_w) and (ie_carater_inter_atend_w	<> 'X') and (ie_carater_inter_aih_w		<> 'X') then
	ds_erro_w	:= ds_erro_w || '2242 ';
end if;

begin
Select 	max(dt_entrada_unidade)
into STRICT		dt_entrada_unidade_w
from 		atend_paciente_unidade
where		nr_atendimento		= nr_atendimento_p
  and		dt_entrada_unidade	< dt_entrada_w;
exception
	when others then
		dt_entrada_unidade_w	:= null;
end;
/* A data_entrada unidade < data entrada paciente */

if (dt_entrada_Unidade_w IS NOT NULL AND dt_entrada_Unidade_w::text <> '')	then
		ds_erro_w	:= ds_erro_w || '764 ';
end if;
/* Falta data alta, motivo alta, clínica ou */

if (coalesce(dt_entrada_w::text, '') = '')				or (coalesce(dt_alta_w::text, '') = '')				or (coalesce(cd_motivo_alta_w::text, '') = '')			or (ie_carater_inter_sus_w = 'X')			or (coalesce(ie_clinica_w::text, '') = '')				then
		ds_erro_w	:= ds_erro_w || '715 ';
end if;
/* Falta data alta, motivo alta, clínica ou */

if		ie_carater_inter_sus_w not in ('1','3','4','20','28','29','8','9','5','7','27','6','26') then
		ds_erro_w	:= ds_erro_w || '715 ';
end if;

/* Validar data de autorização com período internação OS8265 */

if (dt_autorizacao_w IS NOT NULL AND dt_autorizacao_w::text <> '') and (dt_entrada_w IS NOT NULL AND dt_entrada_w::text <> '') and (dt_alta_w IS NOT NULL AND dt_alta_w::text <> '') then
	begin
	if (trunc(dt_autorizacao_w) < trunc(dt_entrada_w)) or (trunc(dt_autorizacao_w) > trunc(dt_alta_w))	then
		ds_erro_w	:= ds_erro_w || '2118 ';
	end if;
	end;
end if;

/* Caracter de internacao incompativel com procedimento */

select count(*)
into STRICT 	qt_Proc_Urg_Emerg_w
from 	sus_proced_urg_emerg b,
	sus_laudo_paciente a
where 	a.cd_procedimento_solic = b.cd_procedimento
  and 	a.ie_origem_proced 	= b.ie_origem_proced
  and 	a.nr_atendimento		= nr_atendimento_p
  and		a.nr_interno_conta	= nr_interno_conta_p
  and	a.ie_tipo_laudo_sus =
	(SELECT max(x.ie_tipo_laudo_sus)
	from 	sus_laudo_paciente x
	where 	x.nr_atendimento	= nr_atendimento_p
	and		x.nr_interno_conta	= nr_interno_conta_p
  	and	x.ie_tipo_laudo_sus 	in (0,1));
if (cd_classificacao_w <> '0') and (qt_Proc_Urg_Emerg_w > 0) and (ie_carater_inter_sus_w not in ('20','26','27','28','29')) then
	ds_erro_w	:= ds_erro_w || '769 ';
end if;
if (ie_carater_inter_sus_w in ('20','26','27','28','29')) and (qt_Proc_Urg_Emerg_w = 0) then
	ds_erro_w	:= ds_erro_w || '773 ';
end if;
/* CID Exige carater de internação 8 */

if (cd_doenca_cid_w <> 'X') 	and (substr(cd_doenca_cid_w,1,1) in ('T','S')) and (ie_carater_inter_sus_w not in ('28','8','29','9')) then
	ds_erro_w	:= ds_erro_w || '733 ';
end if;

/* CONSISTENCIA DA LONGA PERMANENCIA */

if (dt_entrada_w IS NOT NULL AND dt_entrada_w::text <> '') 	and (dt_alta_w IS NOT NULL AND dt_alta_w::text <> '')		then
	qt_diarias_w	:= (trunc(dt_alta_w) - trunc(dt_entrada_w));
end if;

if (qt_diarias_w	= 0) then
	qt_diarias_W	:= 1;
end if;

if (qt_diarias_w > 0) 				and (cd_proced_realiz_perm_w IS NOT NULL AND cd_proced_realiz_perm_w::text <> '') 	then
	begin
	select 	coalesce(a.qt_permanencia,0)
	into STRICT		qt_permanencia_w
	from 		sus_preco_procaih a
	where 	a.cd_procedimento		= cd_proced_realiz_perm_w
	and 		a.ie_origem_proced 	= 2
	and 		a.dt_competencia 		=
			(SELECT max(x.dt_competencia)
                   	from 	sus_preco_procaih x
				where	x.cd_procedimento 	= a.cd_procedimento
				and	x.ie_origem_proced	= a.ie_origem_proced);
	exception
		when others then
			qt_permanencia_w := 0;
	end;
end if;

/* Edgar 14/09/2004 - OS 11197, substitui o " <> 1" por "not in (1, 4)"*/

/* Adelson  Incluido motivo de cobrança 61 no teste OS-27788 05012006 */

/* Felipe 22/02/2006 - OS 29635, incluido motivo cobrança 62,63,64,65,66,67,68 no teste */

/* Felipe 21/03/2006 - OS 31647, incluido motivo cobrança 33,91,92,93 - Para transferencia ou óbito do paciente o SUS

não

rejeita a conta */
if (cd_proced_realiz_perm_w	 = 40206009) then
	qt_curta_perm_w	:= qt_permanencia_w / 2;
else
	qt_curta_perm_w	:= trunc(qt_permanencia_w / 2);
end if;

if (qt_diarias_w > 0) 								and (CD_MOTIVO_COBRANCA_W not in (33,51,52,53,41,42,43,54,39,61,62,63,64,65,66,67,68,91,92,93))	and (qt_permanencia_w > 0) 								and (qt_diarias_w < qt_curta_perm_w)						and (coalesce(ie_autorizacao_Gestor_w,0) not in (1, 4)) 					then
	begin
	ie_erro_longa_perm_w	:= 'S';
	ds_erro_w		:= ds_erro_w || '721 ';
	end;
end if;

/* CONSISTENCIA DE DIARIAS */

if (qt_dia_uti_mes_alta_w	> qt_diarias_w) then
	ds_erro_w		:= ds_erro_w || '2102 ';
end if;

/* CONSISTENCIA DE DIARIAS normais do tipo II e III Elias Sto Antônio OS-12850 */

qt_dia_uti_w	:= 0;
qt_dia_proc_uti_w	:= 0;
select coalesce(sum(qt_procedimento),0)
into STRICT	 qt_dia_uti_w
from	 procedimento_paciente
where	 nr_atendimento		= nr_atendimento_p
and	 nr_interno_conta		= nr_interno_conta_p
and	 ie_origem_Proced		= 2
and	 coalesce(cd_motivo_exc_conta::text, '') = ''
and	 cd_procedimento in (96001011,96001020,96001038,96002018,96002026,96002034);
if (qt_dia_uti_w	> qt_diarias_w) then
	 ds_erro_w		:= ds_erro_w || '2128 ';
end if;
qt_dia_proc_uti_w	:= qt_dia_proc_uti_w + qt_dia_uti_w;

/* CONSISTENCIA DE DIARIAS neonatal do tipo II e III */

qt_dia_uti_w	:= 0;
select coalesce(sum(qt_procedimento),0)
into STRICT	 qt_dia_uti_w
from	 procedimento_paciente
where	 nr_atendimento		= nr_atendimento_p
and	 nr_interno_conta		= nr_interno_conta_p
and	 ie_origem_Proced		= 2
and	 coalesce(cd_motivo_exc_conta::text, '') = ''
and	 cd_procedimento in (96003014,96003022,96003030,96004010,96004029,96004037);
if (qt_dia_uti_w	> qt_diarias_w) then
	 ds_erro_w		:= ds_erro_w || '2128 ';
end if;
qt_dia_proc_uti_w	:= qt_dia_proc_uti_w + qt_dia_uti_w;

/* CONSISTENCIA DE DIARIAS pediatrica do tipo II e III */

qt_dia_uti_w	:= 0;
select coalesce(sum(qt_procedimento),0)
into STRICT	 qt_dia_uti_w
from	 procedimento_paciente
where	 nr_atendimento		= nr_atendimento_p
and	 nr_interno_conta		= nr_interno_conta_p
and	 ie_origem_Proced		= 2
and	 coalesce(cd_motivo_exc_conta::text, '') = ''
and	 cd_procedimento in (96005017,96005025,96005033,96006013,96006021,96006030);
if (qt_dia_uti_w	> qt_diarias_w) then
	 ds_erro_w		:= ds_erro_w || '2128 ';
end if;
qt_dia_proc_uti_w	:= qt_dia_proc_uti_w + qt_dia_uti_w;

/* CONSISTENCIA DE DIARIAS UTI queimados */

qt_dia_uti_w	:= 0;
select coalesce(sum(qt_procedimento),0)
into STRICT	 qt_dia_uti_w
from	 procedimento_paciente
where	 nr_atendimento		= nr_atendimento_p
and	 nr_interno_conta		= nr_interno_conta_p
and	 ie_origem_Proced		= 2
and	 coalesce(cd_motivo_exc_conta::text, '') = ''
and	 cd_procedimento in (96008016,96008024,96008032);
if (qt_dia_uti_w	> qt_diarias_w) then
	 ds_erro_w		:= ds_erro_w || '2128 ';
end if;
qt_dia_proc_uti_w	:= qt_dia_proc_uti_w + qt_dia_uti_w;

/* CONSISTENCIA DE DIARIAS UTI + diárias de acompanhante > internação OS-12850 */

if	((qt_dia_proc_uti_w + qt_dia_acompanhante_w) > qt_diarias_w) then
	 ds_erro_w		:= ds_erro_w || '2129 ';
end if;
if	((qt_total_dia_uti_w + qt_dia_acompanhante_w) > qt_diarias_w) then
	 ds_erro_w		:= ds_erro_w || '2129 ';
end if;

begin
select 	count(*), coalesce(max(cd_procedimento),0)
into STRICT		qt_reg_longa_perm_w, cd_proced_longa_perm_w
from 		procedimento_paciente
where 	nr_atendimento		= nr_atendimento_p
and		nr_interno_conta		= nr_interno_conta_p
and		ie_origem_Proced		= 2
and		substr(cd_procedimento,1,5) = '99003'
and		coalesce(cd_motivo_exc_conta::text, '') = '';
exception
		when others then
			qt_reg_longa_perm_w 	:= 0;
			cd_proced_longa_perm_w 	:=0;
end;
if (qt_reg_longa_perm_w > 1) then
	begin
	ie_erro_longa_perm_w	:= 'S';
	ds_erro_w			:= ds_erro_w || '717 ';
	end;
end if;
if (ie_erro_longa_perm_w = 'N') 	then
	SELECT * FROM calcular_longa_permanencia(	nr_atendimento_p, nr_interno_conta_p, cd_procedimento_p, qt_perm_sus_calc_w, qt_perm_real_calc_w, qt_longa_perm_calc_w, nr_aih_calc_w) INTO STRICT cd_procedimento_p, qt_perm_sus_calc_w, qt_perm_real_calc_w, qt_longa_perm_calc_w, nr_aih_calc_w;
end if;
if (ie_erro_longa_perm_w = 'N') 		and (coalesce(cd_procedimento_p,0) = 0)	and (qt_reg_longa_perm_w = 1) 		then
	begin
	ie_erro_longa_perm_w	:= 'S';
	ds_erro_w			:= ds_erro_w || '718 ';
	end;
end if;
if (ie_erro_longa_perm_w 	= 'N') 			and (coalesce(cd_procedimento_p,0) > 0)			and (cd_proced_longa_perm_w <> cd_procedimento_p) 	then
	begin
	ie_erro_longa_perm_w	:= 'S';
	ds_erro_w			:= ds_erro_w || '719 ';
	end;
end if;
/* CONSISTENCIA Acompanhante */

if (qt_dia_acompanhante_w		> qt_diarias_w) then
	ds_erro_w			:= ds_erro_w || '736 ';
end if;

/* CONSISTENCIA DO ORGAO EMISSOR */

if (cd_municipio_ibge_w <> 'X') then
	select 	coalesce(max(cd_orgao_emissor),'X')
	into STRICT		cd_orgao_emissor_sus_w
	from 		sus_municipio
	where 	cd_municipio_ibge	= cd_municipio_ibge_w;
end if;

/* Ignorado por adelson em 08042005 porque no sus_municipio nao tem orgao cadastrado
if	(cd_orgao_emissor_sus_w <> cd_orgao_emissor_aih_w) then
	ds_erro_w			:= ds_erro_w || '722 ';
end if;
*/
if (dt_entrada_w IS NOT NULL AND dt_entrada_w::text <> '')	and (dt_emissao_laudo_w IS NOT NULL AND dt_emissao_laudo_w::text <> '')	then
	begin
	if (trunc(dt_entrada_w) < trunc(dt_emissao_laudo_w))	then
		ds_erro_w			:= ds_erro_w || '723 ';
	end if;
	if (dt_entrada_w - dt_emissao_laudo_w) > 15	then
		ds_erro_w			:= ds_erro_w || '727 ';
	end if;
	end;
end if;

if (dt_entrada_w IS NOT NULL AND dt_entrada_w::text <> '')	and (dt_emissao_aih_w IS NOT NULL AND dt_emissao_aih_w::text <> '')	then
	begin
	if (dt_emissao_aih_w < dt_entrada_w)	then
		ds_erro_w	:= ds_erro_w || '2229 ';
	end if;
	end;
end if;

/* CONSISTENCIA UNIDADE ATENDIMENTO */

begin
select 	coalesce(cd_unidade_basica,'X'),
		coalesce(cd_unidade_compl,'X')
into STRICT		cd_unidade_basica_w,
		cd_unidade_compl_w
from 		paciente_internado_v
where 	nr_atendimento		= nr_atendimento_p;
exception
		when others then
			begin
			cd_unidade_basica_w 	:= 'X';
			cd_unidade_compl_w 	:= 'X';
			end;
end;
if (cd_unidade_basica_w 	= 'X') or (cd_unidade_compl_w 	= 'X') then
	begin
	ds_erro_w			:= ds_erro_w || '724 ';
	end;
end if;

/* CONSISTENCIA LAUDO ORIGINAL\MUDANÇA PROCEDIMENTO */

select  count(*)
into STRICT	qt_reg_w
from	sus_laudo_paciente
where	nr_interno_conta = nr_interno_conta
  and 	ie_tipo_laudo_sus in (0,1);
if (qt_reg_w = 0) then
	ds_erro_w			:= ds_erro_w || '738 ';
else
	select  count(*)
	into STRICT	qt_reg_w
	from	procedimento_paciente a,
		sus_laudo_paciente b
	where	b.nr_interno_conta	= a.nr_interno_conta
	  and	b.cd_procedimento_solic = a.cd_procedimento
	  and	b.ie_origem_proced	= a.ie_origem_proced
	  and	a.nr_interno_conta	= nr_interno_conta_p
	  and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
	  and	b.ie_tipo_laudo_sus in (0,1);
	if (qt_reg_w = 0) then
		ds_erro_w			:= ds_erro_w || '739 ';
	end if;
end if;

/* CONSISTENCIA CPF MEDICO SOLIC E RESP */

begin
select 	coalesce(a.nr_cpf,'X'),
		coalesce(c.nr_cpf,'X')
into STRICT		nr_cpf_solic_w,
		nr_cpf_resp_w
from 		sus_laudo_paciente b,
		pessoa_fisica a,
		pessoa_fisica c
where 	a.cd_pessoa_fisica 	= b.cd_medico_requisitante
and		c.cd_pessoa_fisica 	= b.cd_medico_responsavel
and		b.ie_tipo_laudo_sus	= 0
and		b.nr_atendimento		= nr_atendimento_p
and		b.nr_interno_conta	= nr_interno_conta_p;
exception
		when others then
			begin
			nr_cpf_solic_w 	:= 'X';
			nr_cpf_resp_w 	:= 'X';
			end;
end;
if (nr_cpf_solic_w 	= 'X') or (nr_cpf_resp_w 	= 'X') then
	begin
	ds_erro_w			:= ds_erro_w || '726 ';
	end;
end if;
/* CONSISTENCIA CPF MEDICO EXECUTOR */

begin
select 	count(*)
into STRICT		qt_cpf_invalido_w
from 		procedimento_paciente a,
		pessoa_fisica b
where 	a.nr_atendimento		= nr_atendimento_p
and		a.nr_interno_conta	= nr_interno_conta_p
and		(a.cd_medico_executor IS NOT NULL AND a.cd_medico_executor::text <> '')
and		a.cd_medico_executor	= b.cd_pessoa_fisica
and		coalesce(a.cd_motivo_exc_conta::text, '') = ''
and		coalesce(b.nr_cpf::text, '') = '';
exception
		when others then
			qt_cpf_invalido_w := 0;
end;

if (qt_cpf_invalido_w > 0) then
	begin
	ds_erro_w			:= ds_erro_w || '726 ';
	end;
end if;

/*CONSISTENCIA CPF MEDICO PARTICIPANTE: 20/10/2007 - OS71774 - Luiz F.M */

begin
select	count(*)
into STRICT	qt_cpf_part_inv_w
from 	procedimento_paciente a,
	procedimento_participante c,
	pessoa_fisica b
where	a.nr_atendimento	= nr_atendimento_p
and	a.nr_interno_conta	= nr_interno_conta_p
and	a.nr_sequencia		= c.nr_sequencia
and	b.cd_pessoa_fisica	= c.cd_pessoa_fisica
and	(c.cd_pessoa_fisica IS NOT NULL AND c.cd_pessoa_fisica::text <> '')
and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
and	coalesce(b.nr_cpf::text, '') = '';
exception
		when others then
			qt_cpf_part_inv_w := 0;
end;

if (qt_cpf_part_inv_w > 0) then
	begin
	ds_erro_w			:= ds_erro_w || '2243 ';
	end;
end if;

/* CONSISTENCIA LAUDO ORIGINAL E MUDANCA EXECUTADOS */

begin
select 	count(*)
into STRICT		QT_LAUDO_ORIG_W
from 		sus_laudo_paciente a,
 		procedimento_paciente b
where 	a.nr_atendimento 		= b.nr_atendimento
and		a.nr_atendimento		= nr_atendimento_p
and		a.nr_interno_conta	= nr_interno_conta_p
and 		a.cd_procedimento_solic = b.cd_procedimento
and		b.nr_interno_conta	= nr_interno_conta_p
and 		a.ie_tipo_laudo_sus in (0,1)
and		coalesce(b.cd_motivo_exc_conta::text, '') = ''
and		b.ie_intercorrencia	= 'N' /* Felipe - 03/03/2006 - OS 30788*/
group by 	a.nr_atendimento
having count(*) > 1;
exception
		when others then
			QT_LAUDO_ORIG_W := 0;
end;
if (QT_LAUDO_ORIG_W > 0) then
	begin
	ds_erro_w			:= ds_erro_w || '702 ';
	end;
end if;

/* CONSISTENCIA TIPO SERVIÇO 8 X CGC prestador */

begin
select 	count(*)
into STRICT		QT_CGC_INV_W
from 		procedimento_paciente
where		nr_atendimento		= nr_atendimento_p
and		nr_interno_conta		= nr_interno_conta_p
and		ie_tipo_servico_sus	= 8
and		((cd_cgc_prestador	= cd_cgc_estabelecimento_w) or (cd_medico_executor IS NOT NULL AND cd_medico_executor::text <> ''))
and		coalesce(cd_motivo_exc_conta::text, '') = '';
exception
		when others then
			QT_CGC_INV_W := 0;
end;

if (QT_CGC_INV_W > 0) then
	begin
	ds_erro_w			:= ds_erro_w || '750 ';
	end;
end if;

/* CONSISTENCIA TIPO SERVIÇO 3-SADT PROPRIO X CGC prestador */

begin
select 	count(*)
into STRICT		qt_erro_cgc_w
from 		procedimento_paciente
where		nr_atendimento		= nr_atendimento_p
and		nr_interno_conta		= nr_interno_conta_p
and		ie_tipo_servico_sus	= 3
and		cd_cgc_prestador	<> cd_cgc_estabelecimento_w
and		coalesce(cd_motivo_exc_conta::text, '') = '';
exception
		when others then
			qt_erro_cgc_w := 0;
end;
if (qt_erro_cgc_w > 0) then
	begin
	ds_erro_w			:= ds_erro_w || '2123 ';
	end;
end if;

/* diárias de UTI Neonatal */

select count(*)
into STRICT qt_procedimento_w
from	procedimento_paciente
where	nr_atendimento	= nr_atendimento_p
and	nr_interno_conta	= nr_interno_conta_p
and	coalesce(cd_motivo_exc_conta::text, '') = ''
and	cd_procedimento in (96004037,96004029,96004010,96003022,96003030,96003014);
if (qt_procedimento_w > 0) and
	((ie_motivo_alta_uti_neo_w) is null or (coalesce(qt_peso_grama_w::text, '') = '') or (coalesce(qt_mes_gestacao_w::text, '') = '')) then
	ds_erro_w			:= ds_erro_w || '771 ';
end if;

/* laqueadura tubarea */

select count(*)
into STRICT qt_procedimento_w
from	procedimento_paciente
where	nr_atendimento	= nr_atendimento_p
and	nr_interno_conta	= nr_interno_conta_p
and	coalesce(cd_motivo_exc_conta::text, '') = ''
and	cd_procedimento in (34022040,35084014);
if (qt_procedimento_w > 0) and
	((coalesce(qt_filho_w::text, '') = '') or (coalesce(ie_grau_instrucao_w::text, '') = '') or (coalesce(ie_contraceptivo_um_w::text, '') = '') or (coalesce(ie_contraceptivo_dois_w::text, '') = '')) then
	ds_erro_w			:= ds_erro_w || '772 ';
end if;


/* consistencia de acompanhantes */

qt_acompanhantes_w := 0;
select	count(*)
into STRICT 	qt_acompanhantes_w
from	procedimento_paciente
where	nr_atendimento	= nr_atendimento_p
and	nr_interno_conta	= nr_interno_conta_p
and	coalesce(cd_motivo_exc_conta::text, '') = ''
and	cd_procedimento	in (99080010,99081016);

qt_tot_acompanhantes_w := 0;
select	count(*)
into STRICT 	qt_tot_acompanhantes_w
from	procedimento_paciente
where	nr_atendimento	= nr_atendimento_p
and	nr_interno_conta	= nr_interno_conta_p
and	coalesce(cd_motivo_exc_conta::text, '') = ''
and	cd_procedimento	in (99080010,99081016,99080011);

/* Paciente com Menos de 12 ou mais de 65 anos */

if (qt_anos_w < 18 or qt_anos_w > 60) 	and (qt_tot_acompanhantes_w = 0)		then
	ds_erro_w	:= ds_erro_w || '770 ';
end if;

/* Paciente com mais de 18 ou menos de 60 anos */

if (qt_anos_w > 18 and qt_anos_w < 60) 	and (qt_acompanhantes_w > 0)		then
	ds_erro_w	:= ds_erro_w || '775 ';
end if;

/* cobranca dupla da diaria de acompanhante */

if (qt_dia_acompanhante_w	> 0)	and (qt_acompanhantes_w	> 0)	then
	ds_erro_w	:= ds_erro_w || '2165 ';
end if;


/* CONSISTENCIA DUPLOS */

OPEN C05;
LOOP
FETCH C05 into
		cd_proc_duplo_w,
		qt_duplos_w;
	EXIT WHEN NOT FOUND; /* apply on C05 */
	BEGIN
	begin
	select sum(qt_procedimento)
	into STRICT	 qt_duplos_laudo_w
	from	 Procedimento_paciente
	where	 nr_atendimento	= nr_atendimento_p
	and	 nr_interno_conta	= nr_interno_conta_p
	and	 coalesce(cd_motivo_exc_conta::text, '') = ''
	and	 cd_procedimento  = cd_proc_duplo_w
	and	 ie_intercorrencia = 'N'; /* Felipe - 03/03/2006 - OS 30788*/
	exception
		when others then
			qt_duplos_laudo_w := 0;
	end;
	if (qt_duplos_laudo_w <> qt_duplos_w) and (length(ds_erro_w) < 76) then
		ds_erro_w			:= ds_erro_w || '741 ';
	end if;
	END;
END LOOP;
CLOSE C05;

/* Procedimentos que necessitam de consulta 25001019 */

select count(*)
into STRICT qt_procedimento_w
from procedimento_paciente
where nr_interno_conta = nr_interno_conta_p
  and coalesce(cd_motivo_exc_conta::text, '') = ''
  and AIH_Validar_Regra(3,cd_procedimento) > 0;

if (qt_procedimento_w > 0) then
	select count(*)
	into STRICT qt_procedimento_w
	from procedimento_paciente
	where nr_interno_conta = nr_interno_conta_p
	  and coalesce(cd_motivo_exc_conta::text, '') = ''
	  and cd_procedimento = 25001019;

	if (qt_procedimento_w = 0) then
		ds_erro_w			:= ds_erro_w || '744 ';
	end if;
end if;

/* CONSISTENCIA DE TOMOGRAFIA COMPUTADORIZADA X SIPAC */

select	count(*)
into STRICT	qt_procedimento_w
from	procedimento_paciente
where	nr_atendimento		= nr_atendimento_p
and	nr_interno_conta	= nr_interno_conta_p
and	cd_procedimento in (97013013, 97013021)
and	ie_origem_proced	= 2;

if (qt_procedimento_w	> 1) then
	select	obter_procedimento_aih(nr_interno_conta_p, 'E')
	into STRICT	cd_proced_realiz_w
	;

	OPEN C06;
	LOOP
	FETCH C06 into
			nr_seq_sipac_w;
		EXIT WHEN NOT FOUND; /* apply on C06 */
		BEGIN
		begin
		select	count(*)
		into STRICT	qt_reg_sipac_w
		from	sus_sipac_credenciada
		where	cd_estabelecimento	= cd_estabelecimento_w
		and	nr_seq_sipac		= nr_seq_sipac_w;
		exception
			when others then
				qt_reg_sipac_w	:= 0;
		end;
		qt_reg_sipac_ww	:= qt_reg_sipac_ww + qt_reg_sipac_w;
		END;
	END LOOP;
	CLOSE C06;
	if (qt_reg_sipac_ww	= 0) then
		ds_erro_w	:= ds_erro_w || '2232 ';
	end if;
end if;

/* CONSISTENCIA DOS PROCEDIMENTOS DA AIH */

ds_erro_proc_w	:= '';
if (nr_aih_susaih_w			> 0 ) and (coalesce(nr_interno_conta_p,0)	> 0)	then
	begin
	ds_erro_proc_w := CONSISTE_PROC_AIH(nr_atendimento_p, nr_interno_conta_p, nr_aih_susaih_w, ds_erro_proc_w);
	end;
end if;

if	((length(coalesce(ds_erro_w,' ')) + length(ds_erro_proc_w)) < 80) then
	ds_erro_w 	:= ds_erro_w || ds_erro_proc_w;
end if;

/* Consistir mudança de procedimento - Elemar 19/02/2005 */

select	coalesce(max(nr_aih),0)
into STRICT	nr_aih_w
from	sus_aih
where	nr_atendimento 	= nr_atendimento_p
and	nr_interno_conta	= nr_interno_conta_p;
ds_erro_proc_w  := AIH_Consistir_Mudanca_Proc(nr_aih_w);
ds_erro_w	:=  ds_erro_w || ds_erro_proc_w;

/*Procedimentos psiquiátricos/Hospital dia não permitem permanência*/

if (cd_proced_realiz_w in (63001209)) and (cd_motivo_cobranca_w in (21,22,23,24,25,26)) then
	ds_erro_w	:= ds_erro_w || '2136 ';
end if;

/*CONSISTENCIA diárias acompanhante + diarias UTI maior que diarias do paciente*/

qt_tot_acompanhantes_w	:= 0;
select	coalesce(max(qt_procedimento),0)
into STRICT 	qt_tot_acompanhantes_w
from	procedimento_paciente
where	nr_atendimento		= nr_atendimento_p
and	nr_interno_conta	= nr_interno_conta_p
and	coalesce(cd_motivo_exc_conta::text, '') = ''
and	cd_procedimento	in (99080010,99081016,99080011);

qt_dia_uti_w		:= 0;
select	coalesce(sum(qt_procedimento),0)
into STRICT	qt_dia_uti_w
from	procedimento_paciente
where	nr_atendimento		= nr_atendimento_p
and	nr_interno_conta	= nr_interno_conta_p
and	ie_origem_Proced	= 2
and	coalesce(cd_motivo_exc_conta::text, '') = ''
and	cd_procedimento in (96001011,96001020,96001038,96002018,96002026,96002034);
if	((qt_tot_acompanhantes_w + qt_dia_uti_w) > qt_diarias_w) then
	ds_erro_w	:= ds_erro_w ||'776 ';
end if;

/*Procedimento "99080011 - DIARIA ACOMPANHANTE ESPECIAL" não pode possuir laudo*/

select	count(*)
into STRICT	qt_laudo_inco_w
from	sus_laudo_paciente
where	nr_atendimento		= nr_atendimento_p
and	cd_procedimento_solic	= 99080011
and	ie_origem_proced	= 2;
if (qt_laudo_inco_w	> 0) then
	ds_erro_w		:= ds_erro_w ||'777 ';
end if;

/* AIH - Mais de um honorário sem intercorrência checada */

if (cd_proced_realiz_w not in (39000001, 31000002, 70000000, 40290000)) then
	select	count(*)
	into STRICT	qt_proc_inter_w
	from	sus_laudo_paciente	b,
		procedimento_paciente	a
	where	a.nr_atendimento	= nr_atendimento_p
	and	a.nr_interno_conta	= nr_interno_conta_p
	and	b.nr_interno_conta	= nr_interno_conta_p
	and	a.nr_atendimento	= b.nr_Atendimento
	and	a.cd_procedimento	= b.cd_procedimento_solic
	and	a.ie_origem_proced	= b.ie_origem_proced
	and	b.ie_tipo_laudo_sus	in (0,1,9)
	and	a.ie_intercorrencia	= 'N';
	if (qt_proc_inter_w	> 1) then
		ds_erro_w		:= ds_erro_w ||'778 ';
end if;
end if;

/* Lançamento de Atendimento ao Recém-Nato (Indevido) na sala de Parto. */

select	count(*)
into STRICT	qt_rn_sala_parto_w
from	procedimento_paciente
where	nr_atendimento		= nr_atendimento_p
and	cd_procedimento		= 95001018
and	ie_origem_proced	= 2
and	nr_interno_conta	= nr_interno_conta_p;

if (qt_rn_sala_parto_w	> 0)	and (cd_proced_exec_w not in (35001011,35006013,35007010,35009012,35025018,35026014,35082010,35084014,35086017))	then
	ds_erro_w		:= ds_erro_w ||'2234 ';
end if;

/* AIH COM MAIS DE 84 ATOS PROFISSIONAIS */

select  count(cd_procedimento)
into STRICT	qt_atos_aih_w
from 	procedimento_paciente
where	nr_interno_conta 	= nr_interno_conta_p
and 	nr_atendimento		= nr_atendimento_p
and 	ie_origem_proced 	= 2;

if (qt_atos_aih_w	> 84)	then
	ds_erro_w	:= ds_erro_w ||'2235 ';
end if;

/* QUANTIDADE DO ATO SUPERIOR AO LIMITE */

OPEN C08;
LOOP
FETCH C08 into
		cd_procedimento_w,
		qt_ato_w;
	EXIT WHEN NOT FOUND; /* apply on c08 */
	BEGIN
		select	coalesce(max(qt_max_procedimento),0)
		into STRICT	qt_max_procedimento_w
		from	procedimento
		where	cd_procedimento		= cd_procedimento_w
		and	ie_origem_proced	= 2;

		if (qt_ato_w	> qt_max_procedimento_w)	then
			 ds_erro_w		:= ds_erro_w ||'2236 ';
		end if;
	END;
END LOOP;
CLOSE C08;

/*Especialidade do procedimento da AIH diferente da especialidade do procedimento do cadastro de procedimentos*/

begin
select	ie_especialidade_aih
into STRICT	ie_espec_proc_aih_w
from	procedimento
where	cd_procedimento		= cd_proced_exec_w
and	ie_origem_proced	= 2;
exception
	when others then
		ie_espec_proc_aih_w	:= null;
end;

if (ie_espec_proc_aih_w IS NOT NULL AND ie_espec_proc_aih_w::text <> '') and (ie_espec_proc_aih_w	<> ie_especialidade_aih_w) then
	ds_erro_w	:= ds_erro_w || '2239 ';
end if;


ds_erro_mat_esp_w := consiste_mat_esp_aih(nr_atendimento_p, nr_interno_conta_p, ds_erro_mat_esp_w);
ds_erro_w	:=  ds_erro_w || ds_erro_mat_esp_w;
ds_erro_p	:= substr(ds_erro_w,1,100);
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consiste_sus_aih (nr_atendimento_p bigint, nr_interno_conta_p bigint, ds_erro_p INOUT text) FROM PUBLIC;

