-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consiste_material_barras_lote ( nr_prescricao_p bigint, cd_material_p bigint, qt_material_p bigint, nr_seq_lote_fornec_p bigint, cd_estabelecimento_p bigint, cd_local_estoque_p bigint, dt_entrada_unidade_p timestamp, cd_tipo_baixa_p bigint, nr_seq_lote_p bigint, nm_usuario_p text, ie_acao_p text, ds_erro_p INOUT text) AS $body$
DECLARE


nr_atendimento_w			prescr_medica.nr_atendimento%TYPE;
ie_conta_aberta_w			varchar(1):= 'N';
ie_fim_conta_w			    atendimento_paciente.ie_fim_conta%TYPE;
dt_fim_conta_w			timestamp;
ie_local_valido_w			varchar(1);
ie_baixa_estoque_pac_w		varchar(1);
ie_estoque_disp_w			varchar(1);
ie_atualiza_estoque_w		ap_lote.ie_atualiza_estoque%TYPE;
ie_saldo_estoque_w		varchar(1);
nr_sequencia_w			bigint;
cd_setor_atendimento_w		atend_paciente_unidade.cd_setor_atendimento%TYPE;
dt_prescricao_w			timestamp;
nr_seq_atepacu_w			atend_paciente_unidade.nr_seq_interno%TYPE;
cd_unidade_medida_w		varchar(30);
cd_senha_w			varchar(20);
nr_doc_convenio_w		varchar(20);
cd_convenio_w			integer;
cd_categoria_w			varchar(10);
cd_cgc_fornec_w			material_lote_fornec.cd_cgc_fornec%TYPE;
cd_cgc_fornec_ww		fornecedor_mat_consig_lote.cd_fornecedor%TYPE;
ie_consignado_w			material.ie_consignado%TYPE;
ds_erro_w			varchar(255);
ie_excluir_barras_w    		varchar(1) := 'N';
ie_consiste_local_estoque_w		varchar(1) := 'N';
cd_local_estoque_usuario_w		smallint;
cd_local_estoque_w		smallint;
ie_mat_suspenso_w		varchar(1);
ie_consiste_saldo_w		varchar(1);
ie_consiste_saldo_lote_w		varchar(1);
qt_saldo_lote_fornec_w		double precision;
cd_plano_w			varchar(10);
ie_consiste_regra_convenio_w	varchar(1);
qt_existe_lote_fornec_w		bigint;
ie_consiste_lote_fornec_dif_w   	varchar(1);
cd_cgc_fornec_lote_w		material_lote_fornec.cd_cgc_fornec%TYPE;
cd_motivo_baixa_w			integer;
ie_consiste_baixa_w		varchar(1);
ds_fornec_prescrito_w		varchar(255);
ds_fornecedor_lote_w		varchar(255);
ie_estoque_lote_w			material_estab.ie_estoque_lote%TYPE;
ie_estoque_lote_ww		    material_estab.ie_estoque_lote%TYPE;
qt_atendimento_cancelado_w		integer;
cd_grupo_mat_nao_atend_w		varchar(255);
-- itens kit
qt_existe_w			integer;
nr_seq_lote_fornec_w		bigint := null;
ds_erro_lote_fornec_w		varchar(255) := null;
cd_material_kit_w			material.cd_material%type;
ie_tipo_saldo_w			varchar(1);
ie_regra_saldo_consig_w		parametro_estoque.ie_regra_saldo_consig%TYPE;
cd_unidade_medida_consumo_w	material.cd_unidade_medida_consumo%type;
cd_material_estoque_w	material.cd_material_estoque%type;

-- Retorno da consiste_mat_plano_convenio
ds_erro_autorizacao_w		varchar(255);
ie_regra_mat_w			integer;
ie_bloqueia_agenda_w		varchar(10);
nr_seq_regra_retorno_w		bigint;
ie_material_estoque_w		material_estab.ie_material_estoque%TYPE;
ie_material_estoque_ww		material_estab.ie_material_estoque%TYPE;
ie_consiste_regra_uso_w		varchar(1);
ie_acao_excesso_w	varchar(1);
qt_excedida_w		double precision;
ds_mensagem_w		varchar(255);
nr_seq_regra_w		bigint;
ie_conta_paciente_w	    ap_lote.ie_conta_paciente%TYPE;
ie_status_lote_w	ap_lote.ie_status_lote%type;
ie_gerar_transf_lote_w	parametros_farmacia.ie_gerar_transf_lote%TYPE;
ie_transf_atend_lote_w	setor_atendimento.ie_transf_atend_lote%TYPE;
cd_local_estoque_ent_w	local_estoque.cd_local_estoque%TYPE;
/*cd_material_w		material.cd_material%TYPE;*/

qt_saldo_disp_w		double precision := 0;
qt_kit_w			double precision := 0;
qt_saldo_estoque_w	double precision := 0;
nr_seq_lote_consig_w	fornecedor_mat_consig_lote.nr_seq_lote%TYPE;
ie_regra_local_usuario_w	parametro_estoque.ie_regra_local_usuario%TYPE;
ie_status_regra_w   permissao_local_usuario.ie_permissao%TYPE;
opcao_sim_w constant parametro_estoque.ie_regra_local_usuario%TYPE := 'S';
opcao_nao_w constant parametro_estoque.ie_regra_local_usuario%TYPE := 'N';
event_atend_14_w constant evento_local_usuario.ie_evento%TYPE := '14';
cd_message_180759 constant integer := 180759;

/* ie_acao_p
'B' - Barras
'M' - Manual
*/
C01 CURSOR FOR
	SELECT	a.cd_material,
			a.nr_seq_lote_fornec
	from	kit_estoque_comp a,
			kit_estoque b
	where	b.nr_sequencia = a.nr_seq_kit_estoque
	and 	b.cd_material = cd_material_p
	and		nr_seq_kit_estoque = nr_seq_lote_fornec_p
	and 	obter_saldo_lote_fornec_local(a.nr_seq_lote_fornec,cd_local_estoque_p,'S') <= 0
	order by cd_material;	

BEGIN

cd_local_estoque_w := cd_local_estoque_p;
ds_erro_w:= '';

select 	coalesce(max(nr_atendimento),0)
into STRICT	nr_atendimento_w
from 	prescr_medica
where 	nr_prescricao = nr_prescricao_p;

select 	max(ie_fim_conta),
	max(dt_fim_conta)
into STRICT	ie_fim_conta_w,
	dt_fim_conta_w
from	atendimento_paciente
where	nr_atendimento = nr_atendimento_w;

select	coalesce(max(ie_gerar_transf_lote),'N')
into STRICT	ie_gerar_transf_lote_w
from	parametros_farmacia
where	cd_estabelecimento = cd_estabelecimento_p;

select 	max(obter_convenio_atendimento(nr_atendimento_w)),
	max(substr(obter_dados_categ_conv(nr_atendimento_w,'CA'),1,10)),
	max(substr(obter_dados_categ_conv(nr_atendimento_w,'S'),1,20)),
	max(substr(obter_dados_categ_conv(nr_atendimento_w,'G'),1,20)),
	max(substr(obter_dados_categ_conv(nr_atendimento_w,'P'),1,20))
into STRICT	cd_convenio_w,
	cd_categoria_w,
	cd_senha_w,
	nr_doc_convenio_w,
	cd_plano_w
;

select	substr(obter_dados_material(cd_material_p,'UME'),1,5)
into STRICT	cd_unidade_medida_w
;

select	max(cd_setor_atendimento),
	max(nr_seq_interno)
into STRICT	cd_setor_atendimento_w,
	nr_seq_atepacu_w
from 	atend_paciente_unidade
where 	nr_atendimento = nr_atendimento_w
and 	dt_entrada_unidade = dt_entrada_unidade_p;

ie_excluir_barras_w := obter_param_usuario(7029, 27, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_excluir_barras_w);
ie_mat_suspenso_w := obter_param_usuario(7029, 45, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_mat_suspenso_w);
ie_consiste_saldo_w := obter_param_usuario(7029, 58, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_consiste_saldo_w);
ie_consiste_saldo_lote_w := obter_param_usuario(7029, 59, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_consiste_saldo_lote_w);
ie_consiste_regra_convenio_w := obter_param_usuario(7029, 70, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_consiste_regra_convenio_w);
ie_consiste_lote_fornec_dif_w := obter_param_usuario(7029, 84, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_consiste_lote_fornec_dif_w);
ie_consiste_baixa_w := obter_param_usuario(7029, 87, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_consiste_baixa_w);
ie_consiste_regra_uso_w := obter_param_usuario(7029, 105, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_consiste_regra_uso_w);
cd_grupo_mat_nao_atend_w := obter_param_usuario(7029, 109, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, cd_grupo_mat_nao_atend_w);
cd_local_estoque_ent_w := obter_param_usuario(7029, 108, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, cd_local_estoque_ent_w);

/* Atendimento do Lote - PalmWeb  */

ie_consiste_local_estoque_w := obter_param_usuario(88, 161, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_consiste_local_estoque_w);

/*Consiste se o lote ja foi atendido*/

if (nr_seq_lote_p IS NOT NULL AND nr_seq_lote_p::text <> '') then
	
	select	coalesce(max(ie_status_lote), 'G')
	into STRICT	ie_status_lote_w
	from	ap_lote
	where	nr_sequencia = nr_seq_lote_p;
	
	if (ie_status_lote_w <> 'G') then
		ds_erro_w := wheb_mensagem_pck.get_texto(138416);
	end if;
end if;

/*Consiste se o usuario e permitido para movimentar o estoque*/

select  coalesce(max(ie_regra_local_usuario),opcao_nao_w)
into STRICT    ie_regra_local_usuario_w
from    parametro_estoque 
where   cd_estabelecimento = cd_estabelecimento_p;

if (ie_regra_local_usuario_w= opcao_sim_w) then
    select  obter_regra_local_usuario(cd_estabelecimento_p, cd_local_estoque_p, event_atend_14_w, nm_usuario_p)
    into STRICT    ie_status_regra_w
;

    if (ie_status_regra_w = opcao_nao_w) then
        ds_erro_w := wheb_mensagem_pck.get_texto(cd_message_180759);
    end if;
end if;

/* Consiste o local de estoque com o local de baixa */

if (coalesce(ie_consiste_local_estoque_w,'N') = 'S') and (WHEB_USUARIO_PCK.get_cd_funcao = 88) then
	select	obter_local_estoque_setor(obter_setor_usuario(nm_usuario_p), cd_estabelecimento_p) cd_local_estoque_usuario
	into STRICT	cd_local_estoque_usuario_w
	;

	if (cd_local_estoque_usuario_w <> cd_local_estoque_p) and (coalesce(ds_erro_w::text, '') = '') then
		ds_erro_w := WHEB_MENSAGEM_PCK.get_texto(277415);
	end if;
end if;

if (ie_acao_p = 'B') then  --Barras
	select 	max(ie_atualiza_estoque),
		max(ie_conta_paciente)
	into STRICT	ie_atualiza_estoque_w,
		ie_conta_paciente_w
	from 	ap_lote
	where 	nr_sequencia = nr_seq_lote_p;

	if (coalesce(ie_atualiza_estoque_w::text, '') = '') and (coalesce(ie_excluir_barras_w,'N') = 'N') then

		select	coalesce(max(ie_atualiza_estoque),'S'),
			coalesce(max(ie_conta_paciente),'S')
		into STRICT	ie_atualiza_estoque_w,
			ie_conta_paciente_w
		from	tipo_baixa_prescricao
		where	ie_prescricao_devolucao = 'P'
		and 	cd_tipo_baixa = cd_tipo_baixa_p
		and 	ie_situacao = 'A';

	end if;
elsif (ie_acao_p = 'M') then --Manual
	select	coalesce(max(ie_atualiza_estoque),'S'),
		coalesce(max(ie_conta_paciente),'S')
	into STRICT	ie_atualiza_estoque_w,
		ie_conta_paciente_w
	from	tipo_baixa_prescricao
	where	ie_prescricao_devolucao = 'P'
	and	cd_tipo_baixa = cd_tipo_baixa_p
	and	ie_situacao = 'A';
	
	if (coalesce(cd_grupo_mat_nao_atend_w,'X') <> 'X') then
		if (obter_se_valor_contido(obter_estrutura_material(cd_material_p, 'G'), cd_grupo_mat_nao_atend_w) = 'S') then
			ds_erro_w := WHEB_MENSAGEM_PCK.get_texto(277416);
		end if;
	end if;

end if;

if (coalesce(ie_mat_suspenso_w, 'N') = 'S') and (coalesce(ds_erro_w::text, '') = '') then
	ds_erro_w := consiste_ap_lote_suspenso(nr_seq_lote_p, cd_material_p, qt_material_p, ds_erro_w);
end if;

if (coalesce(ds_erro_w::text, '') = '') and (coalesce(ie_consiste_baixa_w,'N') = 'S') then

	select 	coalesce(max(a.cd_motivo_baixa),0)
	into STRICT	cd_motivo_baixa_w
	from	prescr_mat_hor c,
		material b,
		prescr_material a
	where	a.nr_prescricao	= nr_prescricao_p
	and a.cd_material = cd_material_p
	and	c.nr_seq_lote = nr_seq_lote_p
	and a.cd_material = b.cd_material
	and	a.nr_prescricao = c.nr_prescricao
	and	a.cd_material = c.cd_material
	and	a.nr_sequencia = c.nr_seq_material
	and	a.ie_origem_inf	<> 'A'
	and b.ie_tipo_material <> 6
	and	(a.ie_acm = 'N' AND a.ie_se_necessario = 'N');

	if (cd_motivo_baixa_w <> 0) then
		ds_erro_w := 	WHEB_MENSAGEM_PCK.get_texto(277417) || cd_material_p || '.' || chr(13) || chr(10) ||
				WHEB_MENSAGEM_PCK.get_texto(277418);
	end if;

end if;

select	max(cd_material_estoque)
into STRICT	cd_material_estoque_w
from	material
where	cd_material = cd_material_p;

select	coalesce(max(ie_estoque_lote),'N'),
	coalesce(max(ie_material_estoque),'N')
into STRICT	ie_estoque_lote_w,
	ie_material_estoque_w
from	material_estab
where	cd_material = coalesce(cd_material_estoque_w, cd_material_p)
and	cd_estabelecimento = cd_estabelecimento_p;

if (coalesce(ds_erro_w::text, '') = '') and (ie_estoque_lote_w = 'S') and (nr_seq_lote_fornec_p = 0) and (qt_material_p > 0) then
	ds_erro_w := WHEB_MENSAGEM_PCK.get_texto(277420) || cd_material_p || ')';
end if;

if (coalesce(ds_erro_w::text, '') = '') and (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') then
	select	count(*)
	into STRICT	qt_atendimento_cancelado_w
	from	atendimento_paciente
	where	nr_atendimento = nr_atendimento_w
	and	(dt_cancelamento IS NOT NULL AND dt_cancelamento::text <> '');

	if (qt_atendimento_cancelado_w > 0) then
		ds_erro_w := WHEB_MENSAGEM_PCK.get_texto(277421);
	end if;
end if;

if (coalesce(ie_consiste_regra_convenio_w,'N') = 'S') and (coalesce(ds_erro_w::text, '') = '') then
	SELECT * FROM consiste_mat_plano_convenio(	cd_convenio_w, cd_plano_w, cd_material_p, nr_atendimento_w, cd_setor_atendimento_w, ds_erro_autorizacao_w, ie_bloqueia_agenda_w, ie_regra_mat_w, nr_seq_regra_retorno_w, qt_material_p, clock_timestamp(), null, cd_estabelecimento_p, null, null) INTO STRICT ds_erro_autorizacao_w, ie_bloqueia_agenda_w, ie_regra_mat_w, nr_seq_regra_retorno_w;

	if (coalesce(ie_regra_mat_w,0) in (1,8)) and (coalesce(ds_erro_w::text, '') = '') then
		ds_erro_w := ds_erro_autorizacao_w;
	end if;
end if;

/*Consiste  se o lote fonecedor prescrito e igual ao lote fornecedor  bipado*/

if (ie_consiste_lote_fornec_dif_w = 'S') and (coalesce(nr_seq_lote_fornec_p, 0) > 0) and (coalesce(ds_erro_w::text, '') = '') then

	select	coalesce(ie_consignado,'0')
	into STRICT	ie_consignado_w
	from	material
	where	cd_material = cd_material_p;

	if (ie_consignado_w = '1') then

		select	cd_cgc_fornec
		into STRICT	cd_cgc_fornec_lote_w
		from	material_lote_fornec
		where	nr_sequencia = nr_seq_lote_fornec_p;

		select  count(*)
		into STRICT	qt_existe_lote_fornec_w
		from 	prescr_material a,
			prescr_mat_hor b
		where 	a.nr_sequencia = b.nr_seq_material
		and 	a.nr_prescricao = b.nr_prescricao
		and	a.nr_prescricao = nr_prescricao_p
		and 	a.cd_material = cd_material_p
		and	b.nr_seq_lote = nr_seq_lote_p
		and 	a.cd_fornec_consignado = cd_cgc_fornec_lote_w;

		if (qt_existe_lote_fornec_w = 0) then

			select  obter_dados_pf_pj(null,a.cd_fornec_consignado,'N'),
				obter_dados_pf_pj(null,cd_cgc_fornec_lote_w,'N')
			into STRICT	ds_fornec_prescrito_w,
				ds_fornecedor_lote_w
			from 	prescr_material a,
				prescr_mat_hor b
			where 	a.nr_sequencia = b.nr_seq_material
			and 	a.nr_prescricao = b.nr_prescricao
			and	a.nr_prescricao = nr_prescricao_p
			and 	a.cd_material = cd_material_p
			and	b.nr_seq_lote = nr_seq_lote_p;

			ds_erro_w := 	WHEB_MENSAGEM_PCK.get_texto(277422) || ds_fornec_prescrito_w || chr(13) || chr(10) ||
					WHEB_MENSAGEM_PCK.get_texto(277423) || ds_fornecedor_lote_w;

		end if;
	end if;
end if;

if (ie_fim_conta_w <> 'F') and (coalesce(dt_fim_conta_w::text, '') = '') then
	ie_conta_aberta_w:= 'S';
elsif (coalesce(ds_erro_w::text, '') = '') then
	ds_erro_w:=  WHEB_MENSAGEM_PCK.get_texto(277424);
end if;

/* Tratamento para verificar saldo dos lotes fornecedores dos itens do kit.*/

select	count(*)
into STRICT	qt_existe_w
from	kit_estoque
where	nr_sequencia = nr_seq_lote_fornec_p
and 	cd_material = cd_material_p
and	coalesce(dt_utilizacao::text, '') = '';

if (qt_existe_w > 0) then

	begin
		open C01;
		loop
		fetch C01 into	
			cd_material_kit_w,
			nr_seq_lote_fornec_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
		
			select  coalesce(max(ie_estoque_lote),'N'),
			coalesce(max(ie_material_estoque),'N')
			into STRICT	ie_estoque_lote_ww,
				ie_material_estoque_ww
			from	material_estab
			where	cd_material = cd_material_kit_w
			and	cd_estabelecimento = cd_estabelecimento_p;

			if	((coalesce(ie_atualiza_estoque_w,'S') = 'S') and (ie_material_estoque_ww = 'S') and (ie_estoque_lote_ww = 'S')) then
					if (coalesce(ds_erro_lote_fornec_w::text, '') = '') then			
					ds_erro_lote_fornec_w := nr_seq_lote_fornec_w;			
				else			
					ds_erro_lote_fornec_w := ds_erro_lote_fornec_w ||', '||nr_seq_lote_fornec_w;
			end if;
			end if;	
		end loop;
		close C01;
				
	if (ds_erro_lote_fornec_w IS NOT NULL AND ds_erro_lote_fornec_w::text <> '') then
		ds_erro_w:= substr(WHEB_MENSAGEM_PCK.get_texto(1053337,'NR_SEQ_LOTE_FORNEC='||ds_erro_lote_fornec_w),1,255);
	end if;
	end;
end if;
	
/* ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ */

if (ie_conta_aberta_w = 'S') and (coalesce(ds_erro_w::text, '') = '') and (coalesce(cd_material_p, 0) <> 0) then
	select	coalesce(max(ie_transf_atend_lote),'N')
	into STRICT	ie_transf_atend_lote_w
	from	setor_atendimento
	where	cd_setor_atendimento = cd_setor_atendimento_w;

	if (ie_gerar_transf_lote_w = 'S') and (coalesce(ie_conta_paciente_w, 'N') = 'N') and (coalesce(ie_atualiza_estoque_w, 'N') = 'S') and (coalesce(ie_transf_atend_lote_w, 'N') = 'S') then
		
		if (coalesce(cd_local_estoque_ent_w::text, '') = '') then
			select	max(cd_local_estoque)
			into STRICT	cd_local_estoque_ent_w
			from	setor_atendimento
			where	cd_setor_atendimento = cd_setor_atendimento_w;
		end if;
		ie_local_valido_w := obter_local_valido(cd_estabelecimento_p, cd_local_estoque_ent_w, cd_material_p, '3', ie_local_valido_w);
	else
		ie_local_valido_w := obter_local_valido(cd_estabelecimento_p, cd_local_estoque_w, cd_material_p, null, ie_local_valido_w);
	end if;

	select	obter_se_baixa_estoque_pac(cd_setor_atendimento_w, cd_material_p,null,0)
	into STRICT	ie_baixa_estoque_pac_w
	;
	
	select	coalesce(max(ie_consignado),'0'),
		max(cd_unidade_medida_consumo)
	into STRICT	ie_consignado_w,
		cd_unidade_medida_consumo_w
	from	material
	where	cd_material = cd_material_p;
	
	if (ie_consignado_w <> '0') then
		begin
		select	coalesce(max(ie_regra_saldo_consig),0)
		into STRICT	ie_regra_saldo_consig_w
		from	parametro_estoque
		where	cd_estabelecimento = cd_estabelecimento_p;
		
		if (ie_regra_saldo_consig_w > 0) and (ie_consignado_w = '2') then
			cd_cgc_fornec_w := null;
		elsif (ie_consignado_w = '1') then
			if (coalesce(nr_seq_lote_fornec_p, 0) > 0) then
				select	max(cd_cgc_fornec)
				into STRICT	cd_cgc_fornec_w
				from	material_lote_fornec
				where	nr_sequencia = nr_seq_lote_fornec_p;
			else
				cd_cgc_fornec_w	:= obter_fornecedor_regra_consig(
							cd_estabelecimento_p,
							cd_material_p,
							'1');
			end if;
		end if;
		end;
		
	end if;
	
	if (ie_consignado_w = '2') and (ie_regra_saldo_consig_w > 0) and (ie_estoque_lote_w <> 'S') then
		qt_saldo_estoque_w := obter_saldo_total_disp_estoque(
													coalesce(cd_material_estoque_w, cd_material_p),
													cd_local_estoque_w,
													cd_estabelecimento_p,
													nr_seq_lote_fornec_p,
													cd_cgc_fornec_w);

	elsif (ie_estoque_lote_w = 'S') and (nr_seq_lote_fornec_p IS NOT NULL AND nr_seq_lote_fornec_p::text <> '') then
		if (ie_consignado_w = '0') then
			qt_saldo_estoque_w := obter_saldo_disp_estoque(
											cd_estabelecimento_p,
											coalesce(cd_material_estoque_w, cd_material_p),
											cd_local_estoque_w,
											clock_timestamp(),
											nr_seq_lote_fornec_p);
		elsif (ie_consignado_w <> '0') then

			select	max(nr_seq_lote),
					max(cd_fornecedor)
			into STRICT 	nr_seq_lote_consig_w,
					cd_cgc_fornec_ww
			from 	fornecedor_mat_consig_lote
			where 	cd_material = coalesce(cd_material_estoque_w, cd_material_p)
			and 	nr_seq_lote  = nr_seq_lote_fornec_p
			and 	cd_estabelecimento = cd_estabelecimento_p
			and 	cd_local_estoque = cd_local_estoque_p
			and 	dt_mesano_referencia = PKG_DATE_UTILS.start_of(clock_timestamp(), 'month', 0);
			
	
			if (nr_seq_lote_consig_w IS NOT NULL AND nr_seq_lote_consig_w::text <> '') then
				
				if (ie_estoque_lote_w = 'S') then
					cd_cgc_fornec_w := cd_cgc_fornec_ww;
				end if;

				qt_saldo_estoque_w := obter_saldo_disp_consig(
													cd_estabelecimento_p,
													cd_cgc_fornec_w,
													coalesce(cd_material_estoque_w, cd_material_p),
													cd_local_estoque_w,
													nr_seq_lote_fornec_p);
			else
				qt_saldo_estoque_w := obter_saldo_disp_estoque(
											cd_estabelecimento_p,
											coalesce(cd_material_estoque_w, cd_material_p),
											cd_local_estoque_w,
											clock_timestamp(),
											nr_seq_lote_fornec_p);
			end if;			
		end if;
	elsif (ie_estoque_lote_w <> 'S') then
		if (ie_consignado_w = '0') or
			((ie_consignado_w = '2') and (coalesce(cd_cgc_fornec_w::text, '') = ''))	then
			qt_saldo_estoque_w := obter_saldo_disp_estoque(
									cd_estabelecimento_p,
									coalesce(cd_material_estoque_w, cd_material_p),
									cd_local_estoque_w,
									clock_timestamp(),
									nr_seq_lote_fornec_p);
		
		elsif (ie_consignado_w = '1') or (ie_consignado_w = '2' AND cd_cgc_fornec_w IS NOT NULL AND cd_cgc_fornec_w::text <> '') then
			qt_saldo_estoque_w := obter_saldo_disp_consig(
												cd_estabelecimento_p,
												cd_cgc_fornec_w,
												coalesce(cd_material_estoque_w, cd_material_p),
												cd_local_estoque_w,
												nr_seq_lote_fornec_p);
		end if;
	end if;

	ie_saldo_estoque_w := 'S';
	if (qt_saldo_estoque_w < obter_quantidade_convertida(coalesce(cd_material_estoque_w, cd_material_p), qt_material_p, cd_unidade_medida_consumo_w, 'UME')) then
		ie_saldo_estoque_w := 'N';
	end if;
	
	if	((ie_baixa_estoque_pac_w = 'N') or (ie_saldo_estoque_w = 'S') or (coalesce(ie_atualiza_estoque_w,'S') = 'N')) then
		ie_estoque_disp_w:= 'S';
	else
		ie_estoque_disp_w:= 'N';
	end if;

	if (coalesce(ie_atualiza_estoque_w,'S') = 'S') then
		begin
		if	(ie_local_valido_w <> 'S' AND ie_material_estoque_w = 'S') then
			ds_erro_w:= WHEB_MENSAGEM_PCK.get_texto(277427);
		elsif	((ie_consiste_saldo_w = 'S') and (ie_estoque_disp_w <> 'S') and (ie_material_estoque_w = 'S')) then
			if (substr(obter_se_material_bloqueio_inv(cd_estabelecimento_p,cd_material_p,cd_local_estoque_p),1,1) = 'S') then
				ds_erro_w:= WHEB_MENSAGEM_PCK.get_texto(318148);
			else	
				ds_erro_w:= WHEB_MENSAGEM_PCK.get_texto(277428);
			end if;
		elsif (ie_consiste_saldo_lote_w = 'S') and (coalesce(nr_seq_lote_fornec_p,0) > 0) and (coalesce(qt_saldo_estoque_w,0) <= 0) and (ie_material_estoque_w = 'S') and (ie_estoque_lote_w = 'N') and (qt_existe_w = 0) then

			ds_erro_w:= WHEB_MENSAGEM_PCK.get_texto(277430);
			enviar_comunic_consumo_lote(	nr_seq_lote_fornec_p,
							qt_saldo_lote_fornec_w,
							qt_material_p,
							cd_local_estoque_p,
							nr_seq_lote_p,
							cd_estabelecimento_p,
							nm_usuario_p);
		end if;
		end;
	end if;

end if;

if (ie_consiste_regra_uso_w = 'S') then

	SELECT * FROM obter_regra_uso_mat(nr_atendimento_w, cd_material_p, qt_material_p, cd_setor_atendimento_w, ie_acao_excesso_w, qt_excedida_w, nr_seq_regra_w, ds_mensagem_w, cd_categoria_w, cd_plano_w, cd_cgc_fornec_w, null, clock_timestamp()) INTO STRICT ie_acao_excesso_w, qt_excedida_w, nr_seq_regra_w, ds_mensagem_w;
	if (ie_acao_excesso_w = 'I') then
		ds_erro_w :=	ds_mensagem_w || chr(13) || chr(10) ||
				WHEB_MENSAGEM_PCK.get_texto(277431);
	end if;
end if;


ds_erro_p:= ds_erro_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consiste_material_barras_lote ( nr_prescricao_p bigint, cd_material_p bigint, qt_material_p bigint, nr_seq_lote_fornec_p bigint, cd_estabelecimento_p bigint, cd_local_estoque_p bigint, dt_entrada_unidade_p timestamp, cd_tipo_baixa_p bigint, nr_seq_lote_p bigint, nm_usuario_p text, ie_acao_p text, ds_erro_p INOUT text) FROM PUBLIC;

