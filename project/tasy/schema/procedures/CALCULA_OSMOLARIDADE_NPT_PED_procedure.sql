-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE calcula_osmolaridade_npt_ped (nr_sequencia_p bigint) AS $body$
DECLARE


qt_potassio_w				double precision;
qt_vol_calcio_w				double precision;
qt_vol_magnesio_w			double precision;
qt_vol_sodio_w				double precision;
qt_vol_glicose_w			double precision;
qt_vol_lip_ml_w				double precision;
qt_vol_prot_w				double precision;
qt_fosforo_w				double precision;
qt_osmolaridade_total_w		double precision;
qt_vol_total_w				double precision;
qt_peso_w					double precision;
qt_vol_glutamina_w			double precision;
ie_arredonda_npt_w			parametro_medico.ie_arredondar_npt%type := 'N';

c01 CURSOR FOR
SELECT	qt_diaria
from	nut_elemento b,
		nut_pac_elemento a
where	a.nr_seq_nut_pac	= nr_sequencia_p
and		a.nr_seq_elemento	= b.nr_sequencia
and		b.ie_tipo_elemento	= 'L';


BEGIN

select	max(qt_volume_diario),
		max(qt_peso)
into STRICT	qt_vol_total_w,
		qt_peso_w
from	nut_pac
where	nr_sequencia = nr_sequencia_p;

select 	coalesce(max(ie_arredondar_npt),'N')
into STRICT	ie_arredonda_npt_w
from	parametro_medico
where 	cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento;

--- Lipideos
select	coalesce(sum(qt_diaria),0)
into STRICT	qt_vol_lip_ml_w
from	nut_elemento b,
		nut_pac_elemento a
where	a.nr_seq_nut_pac	= nr_sequencia_p
and		a.nr_seq_elemento	= b.nr_sequencia
and		b.ie_tipo_elemento	= 'L';

--- Carboidratos
select	coalesce(sum(a.qt_diaria),0)
into STRICT	qt_vol_glicose_w
from	nut_elemento b,
		nut_pac_elemento a
where	a.nr_seq_nut_pac	= nr_sequencia_p
and		a.nr_seq_elemento	= b.nr_sequencia
and		b.ie_tipo_elemento	= 'C';

--- Proteínas não glutamina
if (ie_arredonda_npt_w = 'S') then
	select	coalesce(sum(a.qt_diaria),0)
	into STRICT	qt_vol_prot_w
	from	nut_elemento b,
			nut_pac_elemento a
	where	a.nr_seq_nut_pac	= nr_sequencia_p
	and		a.nr_seq_elemento	= b.nr_sequencia
	and		b.ie_tipo_elemento	= 'P'
	and		b.ie_glutamina		= 'N';
else
	select	coalesce(sum(a.qt_diaria),0)
	into STRICT	qt_vol_prot_w
	from	nut_elemento b,
			nut_pac_elemento a
	where	a.nr_seq_nut_pac	= nr_sequencia_p
	and		a.nr_seq_elemento	= b.nr_sequencia
	and		b.ie_tipo_elemento	= 'P';
end if;
--- Glutamina
select	coalesce(sum(a.qt_volume_final),0)
into STRICT	qt_vol_glutamina_w
from	nut_elemento b,
		nut_pac_elemento a
where	a.nr_seq_nut_pac	= nr_sequencia_p
and		a.nr_seq_elemento	= b.nr_sequencia
and		b.ie_tipo_elemento	= 'P'
and		b.ie_glutamina 	= 'S';

--- Sódio
select (coalesce(sum(a.qt_diaria),0))
into STRICT	qt_vol_sodio_w
from	nut_elemento b,
		nut_pac_elemento a
where	a.nr_seq_nut_pac	= nr_sequencia_p
and		a.nr_seq_elemento	= b.nr_sequencia
and		b.ie_tipo_elemento	= 'N';

--- Magnésio
select	coalesce(sum(a.qt_diaria),0)
into STRICT	qt_vol_magnesio_w
from	nut_elemento b,
		nut_pac_elemento a
where	a.nr_seq_nut_pac	= nr_sequencia_p
and		a.nr_seq_elemento	= b.nr_sequencia
and		b.ie_tipo_elemento	= 'M';

--- Cálcio
select	coalesce(sum(a.qt_diaria),0)
into STRICT	qt_vol_calcio_w
from	nut_elemento b,
		nut_pac_elemento a
where	a.nr_seq_nut_pac	= nr_sequencia_p
and		a.nr_seq_elemento	= b.nr_sequencia
and		b.ie_tipo_elemento	= 'I';

--- Potássio
select	coalesce(sum(qt_diaria),0)
into STRICT	qt_potassio_w
from	nut_elemento b,
		nut_pac_elemento a
where	a.nr_seq_nut_pac	= nr_sequencia_p
and		a.nr_seq_elemento	= b.nr_sequencia
and		b.ie_tipo_elemento	= 'K';

if (ie_arredonda_npt_w = 'S') then
	qt_osmolaridade_total_w	:= dividir_sem_round(((qt_vol_prot_w * 11) + ((qt_vol_glutamina_w * 0.2) * 11) + (qt_vol_lip_ml_w * 0.3) + (qt_vol_glicose_w * 5.5) + (( qt_vol_sodio_w + qt_potassio_w + qt_vol_magnesio_w + qt_vol_calcio_w) * 2)), qt_vol_total_w) *1000;
else
	qt_osmolaridade_total_w	:= dividir_sem_round(((qt_vol_prot_w * 11) + (qt_vol_lip_ml_w * 0.3) + (qt_vol_glicose_w * 5.5) + (( qt_vol_sodio_w + qt_potassio_w + qt_vol_magnesio_w + qt_vol_calcio_w) * 2)), qt_vol_total_w) *1000;
end if;

update	nut_pac
set		qt_osmolaridade_total	= round((qt_osmolaridade_total_w)::numeric,1)
where	nr_sequencia			= nr_sequencia_p;

if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE calcula_osmolaridade_npt_ped (nr_sequencia_p bigint) FROM PUBLIC;

