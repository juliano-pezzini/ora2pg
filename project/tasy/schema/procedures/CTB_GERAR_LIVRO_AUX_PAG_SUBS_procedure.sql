-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ctb_gerar_livro_aux_pag_subs ( cd_empresa_p text, cd_estabelecimento_p text, dt_inicial_p timestamp, dt_final_p timestamp, nm_usuario_p text, ie_gerar_arquivo_p text) AS $body$
DECLARE


ds_erro_w		varchar(255);
ds_local_w		varchar(255);
arq_texto_w		utl_file.file_type;
nm_arquivo_w		varchar(255);
dt_inicio_pos_w		timestamp;
dt_fim_pos_w		timestamp;
nr_sequencia_w		w_ctb_livro_aux_event_liq.nr_sequencia%type;

type t_ctb_livro_aux is table
	of w_ctb_livro_aux_event_liq%rowtype index by integer;
ctb_livro_aux_w		t_ctb_livro_aux;
item_ctb_livro_aux_w	w_ctb_livro_aux_event_liq%rowtype;

ds_rotulo_w 		varchar(4000) :=	'Nr Protocolo;Nr Registro Produto;Nm Prestador;Tipo Documento;Nr Documento;Título;Nr Evento;Nr Contrato;Dt Emissão;Venc Contrato;Natureza;Cobertura;Nm Usuário Princ;'	||
						'CNPJ/CPF Usuário Princ;Nm Usuário Evento;Dt Ocorrencia Evento;Dt Conhec Evento;Dt Contabilizacao Evento;Dt Venc;Dt Pgto;Vl Evento;'	||
						'Vl Glosa;Vl Pago;Conta Contábil;Procedimento/Material;Ds Procedimento/Material';

c_linha CURSOR FOR
	SELECT	a.nr_seq_protocolo				|| ';' ||
		a.nr_protocolo_ans				|| ';' ||
		a.nm_prestador					|| ';' ||
		a.ds_tipo_documento				|| ';' ||
		a.nr_documento					|| ';' ||
		a.nr_titulo					|| ';' ||
		a.nr_evento					|| ';' ||
		a.nr_contrato					|| ';' ||
		a.dt_emissao					|| ';' ||
		a.dt_rescisao					|| ';' ||
		obter_valor_dominio(1666,a.ie_tipo_contratacao)	|| ';' ||
		obter_valor_dominio(1665,a.ie_segmentacao)	|| ';' ||
		a.nm_usuario_princ				|| ';' ||
		a.nr_cpf_cnpj					|| ';' ||
		a.nm_usuario_evento				|| ';' ||
		a.dt_ocorrencia					|| ';' ||
		a.dt_conhecimento				|| ';' ||
		a.dt_contabilizacao				|| ';' ||
		a.dt_vencimento					|| ';' ||
		a.dt_pagamento					|| ';' ||
		a.vl_evento					|| ';' ||
		a.vl_glosa					|| ';' ||
		a.vl_pagar					|| ';' ||
		a.cd_conta_contabil				|| ';' ||
		coalesce(a.cd_procedimento,a.cd_material_ops)	|| ';' ||
		a.ds_item_mat_proc				ds_linha
	from	w_ctb_livro_aux_event_liq a
	where	a.nm_usuario	= nm_usuario_p
	and 	a.ie_tipo_livro = 2
	and	dt_referencia = dt_final_p;

c_titulo CURSOR FOR
	SELECT	x.nm_prestador,
		x.ds_tipo_documento,
		to_char(x.nr_seq_nota_fiscal) nr_documento,
		x.nr_titulo nr_titulo,
		x.nr_seq_ct_resumo nr_evento,
		w.nr_sequencia nr_contrato,
		x.dt_emissao dt_emissao,
		s.dt_rescisao dt_rescisao,
		y.ie_tipo_contratacao ie_tipo_contratacao,
		y.ie_segmentacao ie_segmentacao,
		substr(pls_obter_nomes_contrato(s.nr_seq_pagador,'P'),1,255) nm_usuario_princ,
		pls_obter_dados_pagador(s.nr_seq_pagador,'CPF') nr_cpf_cnpj,
		substr(obter_nome_pf(s.cd_pessoa_fisica),1,100) nm_usuario_evento,
		x.dt_mes_competencia dt_ocorrencia,
		x.dt_mes_competencia dt_conhecimento,
		x.dt_contabil dt_contabilizacao,
		x.dt_vencimento_atual dt_vencimento,
		x.dt_baixa dt_pagamento,
		sum(x.vl_liberado) vl_evento,
		sum(x.vl_glosa) vl_glosa,
		x.vl_baixa vl_pagar,
		x.nr_seq_pls_pag_prest,
		x.vl_rateio,
		x.cd_procedimento cd_procedimento,
		x.cd_material_ops,
		x.ds_item_mat_proc,
		x.nr_seq_protocolo,
		x.cd_conta_contabil,
		CASE WHEN y.ie_tipo_operacao='A' THEN  'SCA'  ELSE coalesce(y.nr_protocolo_ans, y.cd_scpa) END  nr_protocolo_ans
	FROM pls_prestador z, (SELECT	t.cd_pessoa_fisica,
			t.nr_seq_nota_fiscal,
			t.nr_titulo,
			t.dt_emissao,
			t.dt_contabil,
			t.dt_vencimento_atual,
			t.nr_seq_pls_pag_prest,
			tt.dt_baixa,
			tt.vl_baixa,
			r.vl_liberado,
			r.vl_glosa,
			v.vl_vencimento,
			r.cd_procedimento,
			substr(pls_obter_dados_conta_mat(r.nr_seq_material,'O'),1,255) cd_material_ops,
			substr(CASE WHEN coalesce(r.cd_procedimento,0)=0 THEN pls_obter_desc_material(r.nr_seq_material)  ELSE obter_descricao_procedimento(r.cd_procedimento, r.ie_origem_proced) END ,1,255) ds_item_mat_proc,
			r.nr_seq_segurado,
			a.nr_seq_prestador,
			r.nr_seq_conta nr_seq_ct_resumo,
			k.nr_seq_conta nr_seq_ct_proc_mat,
			k.nr_sequencia nr_seq_conta_proc,
			null nr_seq_conta_mat,
			coalesce(k.cd_conta_cred, k.cd_conta_provisao_cred) cd_conta_contabil,
			t.cd_estabelecimento,
                        pc.dt_mes_competencia,
                        pc.nr_sequencia nr_seq_protocolo,
                        substr(pls_obter_dados_prestador(cc.nr_seq_prestador_exec,'N'),1,255) nm_prestador,
                        CASE WHEN coalesce(t.cd_pessoa_fisica,'X')='X' THEN 'NOTA FISCAL'  ELSE 'RPA/FATURA' END  ds_tipo_documento,
                        dividir_sem_round((tt.vl_baixa * r.vl_liberado), v.vl_vencimento) vl_rateio
		from	titulo_pagar			t,
			titulo_pagar_baixa		tt,
			pls_lote_pagamento		b,
			pls_pagamento_prestador		a,
			pls_pag_prest_vencimento	v,
			pls_pagamento_item		c,
			pls_conta_medica_resumo		r,
			pls_conta_proc			k,
                        pls_conta                       cc,
                        pls_protocolo_conta             pc
		where	t.nr_seq_pls_pag_prest	= a.nr_sequencia
		and	t.nr_titulo		= tt.nr_titulo
		and	a.nr_seq_lote		= b.nr_sequencia
		and	r.nr_seq_lote_pgto	= b.nr_sequencia
		and	v.nr_seq_pag_prestador	= a.nr_sequencia
		and	c.nr_seq_pagamento	= a.nr_sequencia
		and	c.nr_sequencia		= r.nr_seq_pag_item
		and	r.nr_seq_conta_proc	= k.nr_sequencia
		and	r.nr_seq_conta		= k.nr_seq_conta
                and     r.nr_seq_conta          = cc.nr_sequencia
                and     cc.nr_seq_protocolo     = pc.nr_sequencia
		and	k.ie_status not in ('D','M')
		
union all

		select	t.cd_pessoa_fisica,
			t.nr_seq_nota_fiscal,
			t.nr_titulo,
			t.dt_emissao,
			t.dt_contabil,
			t.dt_vencimento_atual,
			t.nr_seq_pls_pag_prest,
			tt.dt_baixa,
			tt.vl_baixa,
			r.vl_liberado,
			r.vl_glosa,
			v.vl_vencimento,
			r.cd_procedimento,
			substr(pls_obter_dados_conta_mat(r.nr_seq_material,'O'),1,255) cd_material_ops,
			substr(CASE WHEN coalesce(r.cd_procedimento,0)=0 THEN pls_obter_desc_material(r.nr_seq_material)  ELSE obter_descricao_procedimento(r.cd_procedimento, r.ie_origem_proced) END ,1,255) ds_item_mat_proc,
			r.nr_seq_segurado,
			a.nr_seq_prestador,
			r.nr_seq_conta nr_seq_ct_resumo,
			k.nr_seq_conta nr_seq_ct_proc_mat,
			null nr_seq_conta_proc,
			k.nr_sequencia nr_seq_conta_mat,
			coalesce(k.cd_conta_cred, k.cd_conta_provisao_cred) cd_conta_contabil,
			t.cd_estabelecimento,
                        pc.dt_mes_competencia,
                        pc.nr_sequencia nr_seq_protocolo,
                        substr(pls_obter_dados_prestador(cc.nr_seq_prestador_exec,'N'),1,255) nm_prestador,
                        CASE WHEN coalesce(t.cd_pessoa_fisica,'X')='X' THEN 'NOTA FISCAL'  ELSE 'RPA/FATURA' END  ds_tipo_documento,
                        dividir_sem_round((tt.vl_baixa * r.vl_liberado), v.vl_vencimento) vl_rateio
		from	titulo_pagar			t,
			titulo_pagar_baixa		tt,
			pls_lote_pagamento		b,
			pls_pagamento_prestador		a,
			pls_pag_prest_vencimento	v,
			pls_pagamento_item		c,
			pls_conta_medica_resumo		r,
			pls_conta_mat			k,
                        pls_conta                       cc,
                        pls_protocolo_conta             pc
		where	t.nr_seq_pls_pag_prest	= a.nr_sequencia
		and	t.nr_titulo		= tt.nr_titulo
		and	a.nr_seq_lote		= b.nr_sequencia
		and	r.nr_seq_lote_pgto	= b.nr_sequencia
		and	v.nr_seq_pag_prestador	= a.nr_sequencia
		and	c.nr_seq_pagamento	= a.nr_sequencia
		and	c.nr_sequencia		= r.nr_seq_pag_item
		and	r.nr_seq_conta_mat	= k.nr_sequencia
		and	r.nr_seq_conta		= k.nr_seq_conta
                and     r.nr_seq_conta          = cc.nr_sequencia
                and     cc.nr_seq_protocolo     = pc.nr_sequencia
		and	k.ie_status not in ('D','M')) x, estabelecimento e, pls_segurado s
LEFT OUTER JOIN pls_plano y ON (s.nr_seq_plano = y.nr_sequencia)
, pls_contrato_pagador p
LEFT OUTER JOIN pls_contrato w ON (p.nr_seq_contrato = w.nr_sequencia)
WHERE x.nr_seq_segurado	= s.nr_sequencia and s.nr_seq_pagador	= p.nr_sequencia and x.nr_seq_prestador	= z.nr_sequencia   and x.dt_baixa between dt_inicio_pos_w and dt_fim_pos_w and x.dt_emissao 		< dt_inicio_pos_w and x.cd_conta_contabil	in (	select 	c.cd_conta_contabil
						from 	conta_contabil c
						where	c.ie_tipo = 'A'
						and 	substr(ctb_obter_classif_conta(c.cd_conta_contabil, c.cd_classificacao, c.dt_inicio_vigencia),1,5) = '2.1.1') and coalesce(cd_estabelecimento_p,x.cd_estabelecimento) = x.cd_estabelecimento and e.cd_estabelecimento    = x.cd_estabelecimento and e.cd_empresa            = cd_empresa_p and coalesce(x.nr_seq_pls_pag_prest,0) > 0 group by x.nm_prestador,
		x.ds_tipo_documento,
		to_char(x.nr_seq_nota_fiscal),
		x.nr_titulo,
		x.nr_seq_ct_resumo,
		w.nr_sequencia,
		x.dt_emissao,
		s.dt_rescisao,
		y.ie_tipo_contratacao,
		y.ie_segmentacao,
		substr(pls_obter_nomes_contrato(s.nr_seq_pagador,'P'),1,255),
		pls_obter_dados_pagador(s.nr_seq_pagador,'CPF'),
		substr(obter_nome_pf(s.cd_pessoa_fisica),1,100),
		x.dt_mes_competencia,
		x.dt_contabil,
		x.dt_vencimento_atual,
		x.dt_baixa,
		x.vl_baixa,
		x.nr_seq_pls_pag_prest,
		x.vl_rateio,
		x.cd_procedimento,
		x.cd_material_ops,
		x.ds_item_mat_proc,
		x.nr_seq_protocolo,
		x.cd_conta_contabil,
		CASE WHEN y.ie_tipo_operacao='A' THEN  'SCA'  ELSE coalesce(y.nr_protocolo_ans, y.cd_scpa) END;

type 		fetch_array is table of c_titulo%rowtype;
titulo_array 	fetch_array;
i		integer := 1;
type vetor is table of fetch_array index by integer;
vetor_titulo_w	vetor;

c_registro CURSOR FOR
	SELECT	oid
	from	w_ctb_livro_aux_event_liq a
	where	a.nm_usuario	= nm_usuario_p
	and	a.ie_tipo_livro	= 2
	and 	a.dt_referencia	= dt_final_p;

BEGIN

CALL wheb_usuario_pck.set_ie_executar_trigger('N');

dt_inicio_pos_w	:= trunc(dt_inicial_p,'dd');
dt_fim_pos_w	:= fim_dia(dt_final_p);

for reg in c_registro loop
	delete	from w_ctb_livro_aux_event_liq
	where   rowid	= reg.rowid;
end loop;

commit;

open c_titulo;
loop
fetch c_titulo bulk collect into titulo_array limit 10000;
	vetor_titulo_w(i)	:= titulo_array;
	i			:= i + 1;
EXIT WHEN NOT FOUND; /* apply on c_titulo */
end loop;
close c_titulo;

for i in 1..vetor_titulo_w.count loop
	begin
	titulo_array := vetor_titulo_w(i);
	for z in 1..titulo_array.count loop
		begin
		
		select	nextval('w_ctb_livro_aux_event_liq_seq')
		into STRICT	nr_sequencia_w
		;

		item_ctb_livro_aux_w.nr_sequencia		:= nr_sequencia_w;
		item_ctb_livro_aux_w.dt_atualizacao		:= clock_timestamp();
		item_ctb_livro_aux_w.nm_usuario			:= nm_usuario_p;
		item_ctb_livro_aux_w.dt_atualizacao_nrec	:= clock_timestamp();
		item_ctb_livro_aux_w.nm_usuario_nrec		:= nm_usuario_p;	
		item_ctb_livro_aux_w.nm_prestador		:= titulo_array[z].nm_prestador;
		item_ctb_livro_aux_w.ds_tipo_documento		:= titulo_array[z].ds_tipo_documento;
		item_ctb_livro_aux_w.nr_documento		:= titulo_array[z].nr_documento;
		item_ctb_livro_aux_w.nr_titulo			:= titulo_array[z].nr_titulo;
		item_ctb_livro_aux_w.nr_evento			:= titulo_array[z].nr_evento;
		item_ctb_livro_aux_w.nr_contrato		:= titulo_array[z].nr_contrato;
		item_ctb_livro_aux_w.dt_emissao			:= titulo_array[z].dt_emissao;
		item_ctb_livro_aux_w.dt_rescisao		:= titulo_array[z].dt_rescisao;
		item_ctb_livro_aux_w.ie_tipo_contratacao	:= titulo_array[z].ie_tipo_contratacao;
		item_ctb_livro_aux_w.ie_segmentacao		:= titulo_array[z].ie_segmentacao;
		item_ctb_livro_aux_w.nm_usuario_princ		:= titulo_array[z].nm_usuario_princ;
		item_ctb_livro_aux_w.nr_cpf_cnpj		:= titulo_array[z].nr_cpf_cnpj;
		item_ctb_livro_aux_w.nm_usuario_evento		:= titulo_array[z].nm_usuario_evento;
		item_ctb_livro_aux_w.dt_ocorrencia		:= titulo_array[z].dt_ocorrencia;
		item_ctb_livro_aux_w.dt_conhecimento		:= titulo_array[z].dt_conhecimento;
		item_ctb_livro_aux_w.dt_contabilizacao		:= titulo_array[z].dt_contabilizacao;
		item_ctb_livro_aux_w.dt_vencimento		:= titulo_array[z].dt_vencimento;
		item_ctb_livro_aux_w.dt_pagamento		:= titulo_array[z].dt_pagamento;
		item_ctb_livro_aux_w.vl_evento			:= titulo_array[z].vl_evento;
		item_ctb_livro_aux_w.vl_pagar			:= titulo_array[z].vl_pagar;
		item_ctb_livro_aux_w.vl_glosa			:= titulo_array[z].vl_glosa;
		item_ctb_livro_aux_w.ie_tipo_livro		:= 2;
		item_ctb_livro_aux_w.dt_referencia		:= dt_final_p;
		item_ctb_livro_aux_w.cd_conta_contabil		:= titulo_array[z].cd_conta_contabil;
		item_ctb_livro_aux_w.cd_procedimento		:= titulo_array[z].cd_procedimento;
		item_ctb_livro_aux_w.cd_material_ops		:= titulo_array[z].cd_material_ops;
		item_ctb_livro_aux_w.ds_item_mat_proc		:= titulo_array[z].ds_item_mat_proc;
		item_ctb_livro_aux_w.nr_seq_protocolo		:= titulo_array[z].nr_seq_protocolo;
		item_ctb_livro_aux_w.nr_protocolo_ans		:= titulo_array[z].nr_protocolo_ans;
		
		ctb_livro_aux_w(ctb_livro_aux_w.count) := item_ctb_livro_aux_w;
		
		if (ctb_livro_aux_w.count >= 1000) then
			begin						
			forall i in ctb_livro_aux_w.first .. ctb_livro_aux_w.last
				insert into w_ctb_livro_aux_event_liq values ctb_livro_aux_w(i);
			commit;
			ctb_livro_aux_w.delete;
			end;
		end if;
		
		end;
	end loop;
	end;
end loop;

if (ctb_livro_aux_w.count > 0) then
	begin
	forall i in ctb_livro_aux_w.first .. ctb_livro_aux_w.last
		insert into w_ctb_livro_aux_event_liq values ctb_livro_aux_w(i);
	commit;
	ctb_livro_aux_w.delete;
	end;
end if;

if (ie_gerar_arquivo_p = 'S') then
	begin
	nm_arquivo_w	:= 'RelatPgtoPosDtBase' || to_char(clock_timestamp(),'ddmmyyyyhh24miss') || nm_usuario_p || '.csv';
	
	SELECT * FROM obter_evento_utl_file(1, null, ds_local_w, ds_erro_w) INTO STRICT ds_local_w, ds_erro_w;

	arq_texto_w := utl_file.fopen(ds_local_w,nm_arquivo_w,'W'); --arq_texto_w := utl_file.fopen('/srvfs03/FINANCEIRO/TASY/',nm_arquivo_w,'W');

	--utl_file.put_line(arq_texto_w, obter_desc_expressao(779098));
	utl_file.put_line(arq_texto_w, ds_rotulo_w);
	utl_file.fflush(arq_texto_w);
	for vetl in c_linha loop
		begin
		utl_file.put_line(arq_texto_w,vetl.ds_linha);
		utl_file.fflush(arq_texto_w);
		end;
	end loop;
	end;
end if;

CALL wheb_usuario_pck.set_ie_executar_trigger('S');

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_gerar_livro_aux_pag_subs ( cd_empresa_p text, cd_estabelecimento_p text, dt_inicial_p timestamp, dt_final_p timestamp, nm_usuario_p text, ie_gerar_arquivo_p text) FROM PUBLIC;

