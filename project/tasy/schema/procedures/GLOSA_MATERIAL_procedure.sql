-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE glosa_material ( CD_ESTABELECIMENTO_P bigint, NR_ATENDIMENTO_P bigint, DT_ATENDIMENTO_P timestamp, CD_MATERIAL_P bigint, QT_MATERIAL_P bigint, CD_TIPO_ACOMODACAO_P bigint, IE_TIPO_ATENDIMENTO_P bigint, CD_SETOR_ATENDIMENTO_P bigint, QT_IDADE_P bigint, cd_proc_referencia_p bigint, ie_origem_proced_p bigint, nr_sequencia_p bigint, nr_seq_proc_interno_p bigint, CD_CONVENIO_P INOUT bigint, CD_CATEGORIA_P INOUT text, IE_TIPO_CONVENIO_P INOUT bigint, IE_CLASSIF_CONVENIO_P INOUT text, CD_AUTORIZACAO_P INOUT text, NR_SEQ_AUTORIZACAO_P INOUT bigint, QT_AUTORIZADA_P INOUT bigint, CD_SENHA_P INOUT text, NM_RESPONSAVEL_P INOUT text, IE_GLOSA_P INOUT text, CD_SITUACAO_GLOSA_P INOUT bigint, PR_GLOSA_P INOUT bigint, vl_glosa_p INOUT bigint, cd_motivo_exc_conta_p INOUT bigint, ie_autor_particular_p INOUT text, cd_convenio_glosa_p INOUT bigint, cd_categoria_glosa_p INOUT text, nr_seq_regra_ajuste_p INOUT bigint, nr_seq_orcamento_p bigint) AS $body$
DECLARE


IE_GLOSA_W			varchar(1);
CD_AUTORIZACAO_W		varchar(20)	:= '';
QT_AUTORIZADA_W			double precision	:= 0;
NR_SEQ_AUTORIZACAO_W		bigint;
QT_UTILIZADA_W          	double precision	:= 0;
CD_SITUACAO_GLOSA_W		smallint		:= 0;
DT_INICIO_VIGENCIA_W		timestamp;
DT_FINAL_VIGENCIA_W		timestamp;
ie_classif_convenio_w		varchar(03);
IE_TIPO_CONVENIO_W		smallint    := 0;
pr_glosa_w			double precision;
vl_glosa_w			double precision	:= 0;
cd_motivo_exc_conta_w		bigint;
cd_pessoa_fisica_w		varchar(10);
CD_CONVENIO_GLOSA_w		bigint;
ie_autor_particular_w		varchar(1);

cd_convenio_glosa_ww		integer := 0;
cd_categoria_glosa_ww		varchar(10):= ' ';
nr_seq_regra_ajuste_ww		bigint:= 0;
cd_plano_w			varchar(10);
dt_entrada_w			timestamp;
vl_material_w			double precision;
nr_seq_origem_w			bigint;
nr_seq_cobertura_w		bigint;
qt_dias_internacao_w		bigint;
ie_data_mat_dias_int_w		varchar(1);
cd_usuario_convenio_w		varchar(30);


BEGIN

select	max(cd_pessoa_fisica),
	max(obter_dado_atend_cat_conv(nr_atendimento_p, DT_ATENDIMENTO_P, CD_CONVENIO_P, CD_CATEGORIA_P, 'P')),
	max(dt_entrada),
	coalesce(max((obter_dados_categ_conv(nr_atendimento_p, 'OC'))::numeric ),0),
	coalesce(max((obter_dados_categ_conv(nr_atendimento_p, 'COB'))::numeric ),0),
	coalesce(max(trunc(coalesce(dt_alta, clock_timestamp()) - dt_entrada)),0),
	max(obter_dados_categ_conv(nr_atendimento_p, 'U'))
into STRICT	cd_pessoa_fisica_w,
	cd_plano_w,
	dt_entrada_w,
	nr_seq_origem_w,
	nr_seq_cobertura_w,
	qt_dias_internacao_w,
	cd_usuario_convenio_w
from	atendimento_paciente
where	nr_atendimento		= nr_atendimento_p;



if (coalesce(nr_seq_orcamento_p,0) > 0) then
select	max(cd_pessoa_fisica),
	max(cd_plano),
	max(dt_orcamento)
into STRICT	cd_pessoa_fisica_w,
	cd_plano_w,
	dt_entrada_w
from	orcamento_paciente
where	nr_sequencia_orcamento		= nr_seq_orcamento_p; 	
end if;

/* Define glosa do material */

begin
cd_situacao_glosa_w := 0;
/*      Obter o tipo do convenio 1-Particular 2-Proprio 3-Sus */

SELECT 	IE_TIPO_CONVENIO,
		ie_classif_contabil,
		cd_convenio_glosa
INTO STRICT 		IE_TIPO_CONVENIO_W,
		ie_classif_convenio_w,
		CD_CONVENIO_GLOSA_w
FROM 		CONVENIO
WHERE 	CD_CONVENIO = CD_CONVENIO_P;
exception
	when others then
     		ie_tipo_convenio_w := 2;
end;

select	coalesce(max(ie_data_mat_dias_int),'N')
into STRICT	ie_data_mat_dias_int_w
from	parametro_faturamento
where	cd_estabelecimento = cd_estabelecimento_p;

if (ie_data_mat_dias_int_w = 'S') then
	qt_dias_internacao_w	:= coalesce(trunc(coalesce(dt_atendimento_p, clock_timestamp()) - dt_entrada_w),0);
end if;

cd_situacao_glosa_w := 0;
if (ie_tipo_convenio_w = 1)  and (coalesce(CD_CONVENIO_GLOSA_w::text, '') = '') then
	ie_glosa_w	:= 'L';
else
	SELECT * FROM Define_Glosa_Material(CD_ESTABELECIMENTO_P, CD_MATERIAL_P, DT_ATENDIMENTO_P, CD_CONVENIO_P, CD_CATEGORIA_P, CD_TIPO_ACOMODACAO_P, IE_TIPO_ATENDIMENTO_P, CD_SETOR_ATENDIMENTO_P, QT_IDADE_P, cd_proc_referencia_p, ie_origem_proced_p, nr_sequencia_p, nr_seq_proc_interno_p, cd_plano_w, dt_entrada_w, nr_seq_origem_w, nr_seq_cobertura_w, qt_dias_internacao_w, cd_usuario_convenio_w, IE_GLOSA_W, pr_glosa_w, vl_glosa_w, cd_motivo_exc_conta_w, ie_autor_particular_w, cd_convenio_glosa_ww, cd_categoria_glosa_ww, nr_seq_regra_ajuste_ww) INTO STRICT IE_GLOSA_W, pr_glosa_w, vl_glosa_w, cd_motivo_exc_conta_w, ie_autor_particular_w, cd_convenio_glosa_ww, cd_categoria_glosa_ww, nr_seq_regra_ajuste_ww;
end if;

RAISE NOTICE '%', ie_glosa_w;
if (ie_glosa_w = 'G') then
	cd_situacao_glosa_w := 1;
end if;

if	ie_glosa_w = 'L' then
	begin
	select 	/*+ index (a  ATECACO_I2) */ a.nr_doc_convenio
	into STRICT		cd_autorizacao_w
	from		atend_categoria_convenio a
	where		a.nr_atendimento 		= nr_atendimento_p
	and		a.cd_convenio			= cd_convenio_p
	and		a.cd_categoria		= cd_categoria_p
	and		dt_atendimento_p between a.dt_inicio_vigencia and
			coalesce(a.dt_final_vigencia,clock_timestamp() + interval '365 days');
	exception
     		when others then
			cd_autorizacao_w := '';
	end;
end if;

/* Validar autorizacao do convenio */

if	ie_glosa_w = 'A' then
BEGIN
	begin
	select 	b.cd_autorizacao,
			a.qt_autorizada,
			b.cd_senha,
			b.nm_responsavel,
			b.dt_inicio_vigencia,
			coalesce(b.dt_fim_vigencia,clock_timestamp()),
			b.nr_seq_autorizacao
	into STRICT		cd_autorizacao_w,
			qt_autorizada_w,
			cd_senha_p,
			nm_responsavel_p,
			dt_inicio_vigencia_w,
			dt_final_vigencia_w,
			nr_seq_autorizacao_w
	from		material_autorizado a,
			autorizacao_convenio b
	where		b.nr_atendimento 		= nr_atendimento_p
	and		b.cd_convenio		= cd_convenio_p
	and		dt_atendimento_p between trunc(b.dt_inicio_vigencia) and trunc(coalesce(b.dt_fim_vigencia,clock_timestamp()))
	and (a.nr_atendimento     = b.nr_atendimento or b.nr_sequencia = a.nr_sequencia_autor)
	and		coalesce(a.nr_seq_autorizacao,0) 	= coalesce(b.nr_seq_autorizacao,0)
	and		a.cd_material	 	= cd_material_p;
	exception
     		when others then
			cd_situacao_glosa_w := 2;
	end;

if (ie_glosa_w = 'A') 		and (cd_situacao_glosa_w = 0) 	then
	begin
	select 	coalesce(sum(qt_material),0)
	into STRICT		qt_utilizada_w
	from		material_atend_paciente
	where		nr_atendimento 		= nr_atendimento_p
	and		cd_convenio			= cd_convenio_p
	and		cd_material 		= cd_material_p
	and		nr_seq_autorizacao	= nr_seq_autorizacao_w	
	and		coalesce(cd_motivo_exc_conta::text, '') = '';
	exception
     		when others then
			qt_utilizada_w := 0;
	end;
end if;

if (ie_glosa_w = 'A') 		and (cd_situacao_glosa_w = 0) 	and
	(qt_autorizada_w < (qt_utilizada_w + qt_material_p)) then
	begin
	cd_autorizacao_w	   := '';
	nr_seq_autorizacao_w := null;	
	cd_situacao_glosa_w  := 3;
	end;
end if;

END;
end if;

if	ie_glosa_w = 'T' then
	begin
	select 	cd_convenio_glosa,
			cd_categoria_glosa
	into STRICT 		cd_convenio_p,
			cd_categoria_p	
	from 		atend_categoria_convenio
	where		nr_atendimento 		= nr_atendimento_p
	and		dt_atendimento_p between dt_inicio_vigencia and
			coalesce(dt_final_vigencia,clock_timestamp() + interval '365 days')
	and 		(cd_convenio_glosa IS NOT NULL AND cd_convenio_glosa::text <> '');
	exception
     		when others then
			cd_situacao_glosa_w 	:= 1;
	end;
end if;

if	ie_glosa_w = 'F' then
	cd_situacao_glosa_w := 1;
end if;

if	ie_glosa_w = 'D' then

	vl_material_w:= Obter_preco_material(cd_estabelecimento_p, cd_convenio_p, cd_categoria_p, dt_atendimento_p,
					     cd_material_p, cd_tipo_acomodacao_p, ie_tipo_atendimento_p, cd_setor_atendimento_p, null, qt_idade_p,
					     nr_sequencia_p);
	
	if (vl_material_w = 0) then
		cd_situacao_glosa_w := 11;		
	else
		nr_seq_regra_ajuste_ww	:= 0;
		cd_situacao_glosa_w	:= 0;
	end if;
	
end if;

if (cd_situacao_glosa_w > 0) then

	/* Ricardo 04/11/2006
				Obter_convenio_particular pela Obter_Convenio_Particular_PF) 
		obter_convenio_particular(CD_ESTABELECIMENTO_P, CD_CONVENIO_p,CD_CATEGORIA_p); */
	SELECT * FROM obter_convenio_particular_pf(CD_ESTABELECIMENTO_P, CD_CONVENIO_p, cd_pessoa_fisica_w, dt_atendimento_p, CD_CONVENIO_p, CD_CATEGORIA_p) INTO STRICT CD_CONVENIO_p, CD_CATEGORIA_p;
end if;

/*if	(ie_glosa_w = 'V') then
	cd_situacao_glosa_w := 1;
end if;*/
if (ie_glosa_w = 'P') then
	cd_situacao_glosa_w := 8;
end if;

if	ie_glosa_w = 'T' then
	cd_situacao_glosa_w := 1;
end if;

if	ie_glosa_w = 'B' then
	cd_situacao_glosa_w := 13;	
	begin	
	select 		cd_convenio_glosa,
			cd_categoria_glosa
	into STRICT 		cd_convenio_p,
			cd_categoria_p	
	from 		atend_categoria_convenio
	where		nr_atendimento 		= nr_atendimento_p
	and		dt_atendimento_p between dt_inicio_vigencia and
			coalesce(dt_final_vigencia,clock_timestamp() + interval '365 days')
	and 		(cd_convenio_glosa IS NOT NULL AND cd_convenio_glosa::text <> '');
	exception
     		when others then
			begin
			select 	cd_convenio_glosa_ww,
				cd_categoria_glosa_ww
			into STRICT	cd_convenio_p,
				cd_categoria_p
			;
			if (coalesce(cd_convenio_p::text, '') = '') or (coalesce(cd_categoria_p::text, '') = '') then
				cd_situacao_glosa_w 	:= 1;
			end if;
			end;
	end;
end if;


pr_glosa_p			:= pr_glosa_w;
vl_glosa_p			:= vl_glosa_w;
ie_tipo_convenio_p		:= ie_tipo_convenio_w;
ie_classif_convenio_p	:= ie_classif_convenio_w;
ie_glosa_p 			:= ie_glosa_w;
cd_situacao_glosa_p		:= cd_situacao_glosa_w;
cd_autorizacao_p		:= cd_autorizacao_w;
nr_seq_autorizacao_p		:= nr_seq_autorizacao_w;
cd_motivo_exc_conta_p	:= cd_motivo_exc_conta_w;
ie_autor_particular_p	:= ie_autor_particular_w;
cd_convenio_glosa_p		:= cd_convenio_glosa_ww;
cd_categoria_glosa_p		:= cd_categoria_glosa_ww;
nr_seq_regra_ajuste_p		:= nr_seq_regra_ajuste_ww;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE glosa_material ( CD_ESTABELECIMENTO_P bigint, NR_ATENDIMENTO_P bigint, DT_ATENDIMENTO_P timestamp, CD_MATERIAL_P bigint, QT_MATERIAL_P bigint, CD_TIPO_ACOMODACAO_P bigint, IE_TIPO_ATENDIMENTO_P bigint, CD_SETOR_ATENDIMENTO_P bigint, QT_IDADE_P bigint, cd_proc_referencia_p bigint, ie_origem_proced_p bigint, nr_sequencia_p bigint, nr_seq_proc_interno_p bigint, CD_CONVENIO_P INOUT bigint, CD_CATEGORIA_P INOUT text, IE_TIPO_CONVENIO_P INOUT bigint, IE_CLASSIF_CONVENIO_P INOUT text, CD_AUTORIZACAO_P INOUT text, NR_SEQ_AUTORIZACAO_P INOUT bigint, QT_AUTORIZADA_P INOUT bigint, CD_SENHA_P INOUT text, NM_RESPONSAVEL_P INOUT text, IE_GLOSA_P INOUT text, CD_SITUACAO_GLOSA_P INOUT bigint, PR_GLOSA_P INOUT bigint, vl_glosa_p INOUT bigint, cd_motivo_exc_conta_p INOUT bigint, ie_autor_particular_p INOUT text, cd_convenio_glosa_p INOUT bigint, cd_categoria_glosa_p INOUT text, nr_seq_regra_ajuste_p INOUT bigint, nr_seq_orcamento_p bigint) FROM PUBLIC;

