-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_nut_reserva_pessoa ( nr_seq_servico_p bigint, dt_inicial_p timestamp, dt_final_p timestamp, cd_pessoa_fisica_p text, nm_usuario_p text, nr_seq_restaurante_p bigint, qt_Reserva_p bigint, nr_seq_tipo_refeicao_p bigint, cd_estabelecimento_p bigint, ds_observacao_p text, nr_seq_local_refeicao_p bigint DEFAULT NULL, hr_entrega_p timestamp DEFAULT NULL) AS $body$
DECLARE


ora2pg_rowcount int;
nr_seq_perfil_pf_w		bigint;
qt_reserva_w		integer;
nm_usuario_reserva_w	varchar(15);
ie_periodo_w		varchar(1);
ie_gerar_funcionario_w	varchar(1);
cd_pessoa_fisica_w	varchar(10);
ie_codigo_funcionario_w         varchar(1);
qt_existe_reserva_w	integer;
ie_informa_hora_entrega_w 	varchar(1);


BEGIN
ie_periodo_w := Obter_Param_Usuario(7026, 24, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_periodo_w);  --N
ie_gerar_funcionario_w := Obter_Param_Usuario(7026, 25, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_gerar_funcionario_w);  --V
ie_codigo_funcionario_w := Obter_Param_Usuario(7026, 29, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_codigo_funcionario_w);   --N
ie_informa_hora_entrega_w := Obter_Param_Usuario(7026, 34, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_informa_hora_entrega_w);  --S
cd_pessoa_fisica_w:= cd_pessoa_fisica_p;

IF (nr_seq_servico_p IS NOT NULL AND nr_seq_servico_p::text <> '') AND (dt_inicial_p IS NOT NULL AND dt_inicial_p::text <> '') AND (dt_final_p IS NOT NULL AND dt_final_p::text <> '') AND (cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') THEN

	SELECT	coalesce(nr_seq_nut_perfil, 0)
	INTO STRICT	nr_seq_perfil_pf_w
	FROM	pessoa_fisica
	WHERE	cd_pessoa_fisica = cd_pessoa_fisica_w;

	SELECT	MAX(nm_usuario)
	INTO STRICT	nm_usuario_reserva_w
	FROM	usuario
	WHERE	cd_pessoa_fisica	= cd_pessoa_fisica_w;

	IF (coalesce(nm_usuario_reserva_w::text, '') = '') THEN
		nm_usuario_reserva_w := nm_usuario_p;
	END IF;

	INSERT INTO nut_reserva_pf(
		nr_sequencia,
		nr_seq_nut_reserva,
		qt_reserva,
		cd_pessoa_fisica,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		dt_atualizacao,
		nr_seq_tipo_refeicao,
		nm_usuario,
		cd_setor_atendimento,
		cd_estabelecimento,
		ds_observacao,
		ie_status,
		nr_seq_local_refeicao,
		hr_entrega)
		SELECT	nextval('nut_reserva_pf_seq'),
			nr_sequencia,
			qt_reserva_p,
			cd_pessoa_fisica_w,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			CASE WHEN nr_seq_tipo_refeicao_p=0 THEN NULL  ELSE nr_seq_tipo_refeicao_p END ,
			nm_usuario_reserva_w,
			wheb_usuario_pck.get_cd_setor_atendimento,
			cd_estabelecimento_p,
			ds_observacao_p,
			'P',
			nr_seq_local_refeicao_p,
			hr_entrega_p
		FROM	nut_reserva a
		WHERE	nr_seq_servico = nr_seq_servico_p
		AND	((nr_seq_restaurante = nr_seq_restaurante_p) OR (nr_seq_restaurante_p = 0))
		AND	to_date(dt_servico) BETWEEN PKG_DATE_UTILS.START_OF(dt_inicial_p,'DAY') AND PKG_DATE_UTILS.END_OF(dt_final_p, 'DAY')
		AND	(((TO_DATE(TO_CHAR(dt_servico,'dd/mm/yyyy') || ' ' || TO_CHAR(hr_inicio,'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss') > (clock_timestamp() + (coalesce(qt_min_antecedencia,0) / 1440)))
		AND (ie_periodo_w = 'N'))
		OR	((PKG_DATE_UTILS.START_OF(to_date(dt_servico),'DAY') >= PKG_DATE_UTILS.START_OF(clock_timestamp(),'DAY')) AND (ie_periodo_w = 'S')))
		AND	'S' = obter_se_perfil_nut_liberado(nr_seq_perfil_pf_w, nr_sequencia)
		AND	((ie_informa_hora_entrega_w = 'N')
			OR 	((hr_entrega_p IS NOT NULL AND hr_entrega_p::text <> '')
			AND 	to_date(to_char(hr_inicio, 'dd/mm/yyyy') || ' ' || TO_CHAR(hr_entrega_p,'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss')
				BETWEEN hr_inicio AND hr_final))
		AND	((ie_gerar_funcionario_w = 'S') OR
			(((ie_gerar_funcionario_w = 'V')
			AND NOT EXISTS (
				SELECT	1
				FROM	nut_reserva_pf b
				WHERE	b.nr_seq_nut_reserva = a.nr_sequencia
				AND	b.cd_pessoa_fisica = cd_pessoa_fisica_p
				AND	a.nr_seq_servico = nr_seq_servico_p
				AND	a.dt_servico BETWEEN PKG_DATE_UTILS.START_OF(dt_inicial_p,'DAY') AND PKG_DATE_UTILS.END_OF(dt_final_p, 'DAY')
				AND	coalesce(b.nr_seq_tipo_refeicao, 0) = nr_seq_tipo_refeicao_p))
			OR	((ie_gerar_funcionario_w = 'N')
				AND NOT EXISTS (
					SELECT	1
					FROM	nut_reserva_pf b
					WHERE	b.nr_seq_nut_reserva = a.nr_sequencia
					AND	b.cd_pessoa_fisica = cd_pessoa_fisica_p
					AND	a.nr_seq_servico = nr_seq_servico_p
					AND	a.dt_servico BETWEEN PKG_DATE_UTILS.START_OF(dt_inicial_p,'DAY') AND PKG_DATE_UTILS.END_OF(dt_final_p, 'DAY')))));

	GET DIAGNOSTICS ora2pg_rowcount = ROW_COUNT;


	IF ( ora2pg_rowcount = 0) THEN
		CALL wheb_mensagem_pck.exibir_mensagem_abort(317379);
	END IF;
END IF;

COMMIT;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_nut_reserva_pessoa ( nr_seq_servico_p bigint, dt_inicial_p timestamp, dt_final_p timestamp, cd_pessoa_fisica_p text, nm_usuario_p text, nr_seq_restaurante_p bigint, qt_Reserva_p bigint, nr_seq_tipo_refeicao_p bigint, cd_estabelecimento_p bigint, ds_observacao_p text, nr_seq_local_refeicao_p bigint DEFAULT NULL, hr_entrega_p timestamp DEFAULT NULL) FROM PUBLIC;

