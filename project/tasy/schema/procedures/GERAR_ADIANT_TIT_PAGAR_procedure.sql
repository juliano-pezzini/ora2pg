-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_adiant_tit_pagar (nr_adiantamento_p bigint, dt_vencimento_p timestamp, nr_titulo_p INOUT bigint, nm_usuario_p text, nr_seq_classe_p bigint) AS $body$
DECLARE



vl_saldo_w			double precision;
cd_moeda_w			integer;
cd_cgc_w			varchar(14);
cd_pessoa_fisica_w		varchar(10);
ds_observacao_w			varchar(255);
cd_estabelecimento_w		bigint;
cd_estab_financeiro_w		bigint;
nr_titulo_w			bigint;
nr_seq_trans_fin_adiant_w	bigint;/* Rafael. OS45613.07/12/2006.Trazer nos campos "Trans fin baixa" e "Trans fin contab" o valor da transacao de Baixa Adiantamento */
nr_seq_trans_fin_w		bigint;
cd_conta_financ_w		bigint := 0;
ie_buscar_cf_tf_w		varchar(15) := 'N';
cd_conta_contabil_w		varchar(20);
nr_sequencia_w			bigint;
ie_tf_classif_w			varchar(1);
nr_seq_trans_fin_baixa_w	classe_titulo_pagar.nr_seq_trans_fin_baixa%type;
nr_seq_trans_fin_contab_w	classe_titulo_pagar.nr_seq_trans_fin_contab%type;
vl_imposto_w			titulo_pagar_imposto.vl_imposto%type;
/* Projeto Multimoeda - Variaveis */

vl_cotacao_w			cotacao_moeda.vl_cotacao%type;
vl_saldo_estrang_w		double precision;
vl_imposto_estrang_w		double precision;


BEGIN

select	vl_saldo,
	cd_moeda,
	cd_cgc,
	cd_pessoa_fisica,
	ds_observacao,
	cd_estabelecimento,
	nr_seq_trans_fin,
	vl_cotacao,
	vl_saldo_estrang
into STRICT	vl_saldo_w,
	cd_moeda_w,
	cd_cgc_w,
	cd_pessoa_fisica_w,
	ds_observacao_w,
	cd_estabelecimento_w,
	nr_seq_trans_fin_w,
	vl_cotacao_w,
	vl_saldo_estrang_w
from	adiantamento_pago
where	nr_adiantamento	= nr_adiantamento_p;

ie_buscar_cf_tf_w := obter_param_usuario(858, 28, obter_perfil_ativo, nm_usuario_p, obter_estabelecimento_ativo, ie_buscar_cf_tf_w); -- OS 571941 AAMFIRMO em 01/04/2013.
cd_conta_contabil_w := obter_param_usuario(858, 30, obter_perfil_ativo, nm_usuario_p, obter_estabelecimento_ativo, cd_conta_contabil_w);
ie_tf_classif_w := obter_param_usuario(858, 32, obter_perfil_ativo, nm_usuario_p, obter_estabelecimento_ativo, ie_tf_classif_w); -- OS 648840 AAMFIRMO em 29/10/2013.
if (nr_seq_trans_fin_w IS NOT NULL AND nr_seq_trans_fin_w::text <> '') then
	select	coalesce(a.cd_conta_financ,0) -- OS 571941 AAMFIRMO em 01/04/2013.
	into STRICT	cd_conta_financ_w
	from	transacao_financeira a
	where	a.nr_sequencia = nr_seq_trans_fin_w;
end if;

select	nextval('titulo_pagar_seq')
into STRICT	nr_titulo_w
;

--Rafael. OS45613.07/12/2006.
select	nr_seq_trans_adiant
into STRICT	nr_seq_trans_fin_adiant_w
from	parametros_contas_pagar
where	cd_estabelecimento	= cd_estabelecimento_w;

select	coalesce(cd_estab_financeiro, cd_estabelecimento)
into STRICT	cd_estab_financeiro_w
from	estabelecimento
where	cd_estabelecimento	= cd_estabelecimento_w;

/* Projeto Multimoeda - Caso o adiantamento seja em moeda estrangeira, gerar o titulo em moeda estrangeira */

if (coalesce(vl_saldo_estrang_w,0) > 0 and coalesce(vl_cotacao_w,0) <> 0) then
	vl_saldo_w := vl_saldo_estrang_w * vl_cotacao_w;
else
	vl_saldo_estrang_w := null;
	vl_cotacao_w := null;
end if;

insert into titulo_pagar(
		cd_cgc, cd_estabelecimento, cd_moeda, cd_pessoa_fisica, cd_tipo_taxa_antecipacao,
		cd_tipo_taxa_juro, cd_tipo_taxa_multa, ds_compl_contab,	ds_observacao_titulo,
		dt_atualizacao,	dt_contabil, dt_emissao, dt_inclusao, dt_integracao_externa,
		dt_liberacao, dt_limite_antecipacao, dt_liquidacao, dt_vencimento_atual, dt_vencimento_original,
		ie_desconto_dia, ie_origem_titulo, ie_situacao, ie_status_tributo, ie_tipo_titulo, nm_usuario,
		nm_usuario_lib, nm_usuario_orig, nr_adiant_pago, nr_bloqueto, nr_bordero, nr_documento,
		nr_lote_contabil, nr_lote_transf_trib, nr_nosso_numero,	nr_parcelas, nr_repasse_terceiro,
		nr_seq_nota_fiscal, nr_seq_rpa, nr_seq_trans_fin_baixa, nr_seq_trans_fin_contab, nr_seq_tributo,
		nr_titulo, nr_titulo_original, nr_total_parcelas, tx_desc_antecipacao, tx_juros, tx_multa, vl_bordero,
		vl_desconto_bordero, vl_dia_antecipacao, vl_imposto_munic, vl_inss, vl_ir, vl_juros_bordero,
		vl_multa_bordero, vl_out_desp_bordero, vl_saldo_juros, vl_saldo_multa, vl_saldo_titulo, vl_titulo,
		vl_titulo_estrang,vl_cotacao,cd_estab_financeiro, nr_seq_classe, ie_status)
values (
		cd_cgc_w, cd_estabelecimento_w, cd_moeda_w, cd_pessoa_fisica_w,	null,
		1, 1, '', ds_observacao_w,
		clock_timestamp(), clock_timestamp(), clock_timestamp(), null, null,
		null, null, null, dt_vencimento_p, dt_vencimento_p,
		null, '27', 'A', null, '5', nm_usuario_p,
		null, null, nr_adiantamento_p, null, null, null,
		null, null, null, null,	null,
		null, null, coalesce(nr_seq_trans_fin_w, nr_seq_trans_fin_adiant_w), nr_seq_trans_fin_adiant_w,    --Rafael. OS45613.07/12/2006.
		null,nr_titulo_w, null,	null, null, 0, 0, null,
		null, null, null, null,	null, null,
		null, null, 0, 0, vl_saldo_w, vl_saldo_w,
		vl_saldo_estrang_w,vl_cotacao_w,cd_estab_financeiro_w, nr_seq_classe_p,'D');
		
if (coalesce(ie_tf_classif_w,'N') = 'S') then -- OS 648840 AAMFIRMO em 29/10/2013.
	select	max(a.nr_seq_trans_fin_baixa),
		max(a.nr_seq_trans_fin_contab)
	into STRICT	nr_seq_trans_fin_baixa_w,
		nr_seq_trans_fin_contab_w
	from	classe_titulo_pagar a
	where	nr_sequencia	= nr_seq_classe_p;

	update	titulo_pagar
	set	nr_seq_trans_fin_baixa	= CASE WHEN nr_seq_trans_fin_baixa_w = NULL THEN coalesce(nr_seq_trans_fin_w, nr_seq_trans_fin_adiant_w)  ELSE nr_seq_trans_fin_baixa_w END ,
		nr_seq_trans_fin_contab	= CASE WHEN nr_seq_trans_fin_contab_w = NULL THEN nr_seq_trans_fin_adiant_w  ELSE nr_seq_trans_fin_contab_w END
	where	nr_titulo 		= nr_titulo_w;

end if;		

CALL atualizar_inclusao_tit_pagar(nr_titulo_w, nm_usuario_p, 'N');

if (philips_param_pck.get_cd_pais = 2) then -- MX
	
	select sum(vl_imposto)
	into STRICT vl_imposto_w
	from titulo_pagar_imposto
	where 	nr_titulo = nr_titulo_w;

	if (vl_imposto_w > 0) then
		
		update titulo_pagar
		set vl_titulo = vl_titulo + vl_imposto_w, 
			vl_saldo_titulo = vl_saldo_titulo + vl_imposto_w
		where nr_titulo = nr_titulo_w;
		
		/* Projeto Multimoeda - Caso o adiantamento seja em moeda estrangeira, calcular o imposto em moeda estrangeira para somar ao titulo */

		if (coalesce(vl_saldo_estrang_w,0) > 0 and coalesce(vl_cotacao_w,0) <> 0) then
			vl_imposto_estrang_w := vl_imposto_w / vl_cotacao_w;
			
			update titulo_pagar
			set vl_titulo_estrang = vl_titulo_estrang + vl_imposto_estrang_w
			where nr_titulo = nr_titulo_w;
			
			vl_saldo_estrang_w := vl_saldo_estrang_w + vl_imposto_estrang_w;
		end if;
		
		vl_saldo_w := vl_saldo_w + vl_imposto_w;
	end if;
	
end if;	

if ( coalesce(ie_buscar_cf_tf_w,'N') = 'S' ) and ( cd_conta_financ_w <> 0 ) then -- OS 571941 AAMFIRMO em 01/04/2013.
	
	select	coalesce(max(nr_sequencia),0) + 1
	into STRICT	nr_sequencia_w
	from	titulo_pagar_classif
	where 	nr_titulo = nr_titulo_w;	

	insert	into	titulo_pagar_classif(cd_centro_custo,
			cd_conta_contabil,
			dt_atualizacao,
			nm_usuario,
			nr_contrato,
			nr_seq_conta_financ,
			nr_seq_trans_fin,
			nr_sequencia,
			nr_titulo,
			vl_acrescimo,
			vl_desconto,
			vl_original,
			vl_titulo)
		values (null,
			null,
			clock_timestamp(),
			nm_usuario_p,
			null,
			cd_conta_financ_w,
			null,
			nr_sequencia_w,
			nr_titulo_w,
			0,
			0,
			0,
			vl_saldo_w);
			
else
	CALL gerar_tit_pagar_classif(nr_titulo_w, nm_usuario_p);
			
end if;
			
if (cd_conta_contabil_w IS NOT NULL AND cd_conta_contabil_w::text <> '') then
	
	select	coalesce(max(nr_sequencia),0)
	into STRICT nr_sequencia_w
	from	titulo_pagar_classif
	where 	nr_titulo = nr_titulo_w;

	if (nr_sequencia_w <> 0) then

		UPDATE titulo_pagar_classif
		SET cd_conta_contabil = cd_conta_contabil_w
		WHERE nr_titulo = nr_titulo_w
		AND nr_sequencia = nr_sequencia_w;

	else
	
		insert	into	titulo_pagar_classif(cd_centro_custo,
			cd_conta_contabil,
			dt_atualizacao,
			nm_usuario,
			nr_contrato,
			nr_seq_conta_financ,
			nr_seq_trans_fin,
			nr_sequencia,
			nr_titulo,
			vl_acrescimo,
			vl_desconto,
			vl_original,
			vl_titulo)
		values (null,
			cd_conta_contabil_w,
			clock_timestamp(),
			nm_usuario_p,
			null,
			null,
			null,
			1,
			nr_titulo_w,
			0,
			0,
			0,
			vl_saldo_w);
			
	end if;


end if;

nr_titulo_p	:= nr_titulo_w;

commit;

end;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_adiant_tit_pagar (nr_adiantamento_p bigint, dt_vencimento_p timestamp, nr_titulo_p INOUT bigint, nm_usuario_p text, nr_seq_classe_p bigint) FROM PUBLIC;

