-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE enviar_comunic_atend ( nr_atendimento_p bigint, qt_dia_p bigint, cd_pessoa_fisica_p text, nm_usuario_p text, cd_estabelecimento_p bigint, ie_tipo_atendimento_p bigint, qt_dias_reinternacao_p bigint) AS $body$
DECLARE

 
cd_perfil_w			integer;
nm_usuario_receb_w		varchar(15);
nm_usuario_receb_lista_w	varchar(255) := '';
nm_usuario_w			varchar(15);
qt_reg_w			integer;
qt_paciente_alerta_w		bigint;
ie_reclamacao_sac_w		varchar(1) := '';
cd_setor_atendimento  	integer;
ds_setor_atendimento		varchar(150) := '';
ds_num_data_bo_w		varchar(2000);
nr_sequencia_w			bigint;
dt_ocorrencia_w			timestamp;

C01 CURSOR FOR 
	SELECT	b.cd_perfil,	 
		b.nm_usuario_receb 
	from	regra_atend_comunic a, 
		regra_atend_comunic_envio b 
	where	a.nr_sequencia = b.nr_seq_regra_atend 
	and	a.ie_gerar_reinternacao_alerta = 'S' 
	and	coalesce(a.cd_setor_atendimento,coalesce(obter_setor_atendimento(nr_atendimento_p),0))	= coalesce(obter_setor_atendimento(nr_atendimento_p),0) 
	group by b.cd_perfil, b.nm_usuario_receb;	
	 
C02 CURSOR FOR 
	SELECT	b.cd_perfil,	 
		b.nm_usuario_receb 
	from	regra_atend_comunic a, 
		regra_atend_comunic_envio b 
	where	a.nr_sequencia	=	b.nr_seq_regra_atend 
	and	a.ie_gerar_comunic_rec_sac = 'S' 
	and	coalesce(a.cd_setor_atendimento,coalesce(obter_setor_atendimento(nr_atendimento_p),0))	= coalesce(obter_setor_atendimento(nr_atendimento_p),0) 
	group by b.cd_perfil, b.nm_usuario_receb;
	
C03 CURSOR FOR 
	SELECT	a.nr_sequencia, 
		a.dt_ocorrencia 
	FROM sac_boletim_ocorrencia a, sac_resp_bol_ocor b
LEFT OUTER JOIN sac_classif_ocorrencia c ON (b.nr_seq_classif = c.nr_sequencia)
WHERE b.nr_seq_bo		= a.nr_sequencia  and (c.ie_tipo_classif	= 'R') and a.cd_pessoa_fisica	= cd_pessoa_fisica_p;
	

BEGIN 
 
if (ie_tipo_atendimento_p = 1) and (qt_dias_reinternacao_p > 0) then	 
	select	count(*) 
	into STRICT	qt_paciente_alerta_w 
	from	alerta_paciente 
	where	cd_estabelecimento = cd_estabelecimento_p 
	and	cd_pessoa_fisica = cd_pessoa_fisica_p;
 
	if (qt_paciente_alerta_w > 0) then 
		 
		select	count(*) 
		into STRICT	qt_reg_w 
		from	atendimento_paciente 
		where	cd_pessoa_fisica	= cd_pessoa_fisica_p 
		and	nr_atendimento <> nr_atendimento_p 
		and	ie_tipo_atendimento = 1 
		and	dt_alta >= (clock_timestamp() - qt_dia_p);
 
		if (qt_reg_w >= 1) then 
			open C01;
			loop 
			fetch C01 into	 
				cd_perfil_w, 
				nm_usuario_receb_w;
			EXIT WHEN NOT FOUND; /* apply on C01 */
				begin 
 
				if (cd_perfil_w IS NOT NULL AND cd_perfil_w::text <> '') then 
					insert	into comunic_interna( 
							dt_comunicado, 
							ds_titulo, 
							ds_comunicado, 
							nm_usuario, 
							dt_atualizacao, 
							ie_geral, 
							nm_usuario_destino, 
							ds_perfil_adicional, 
							nr_sequencia, 
							ie_gerencial, 
							nr_seq_classif, 
							cd_setor_destino, 
							cd_estab_destino, 
							ds_setor_adicional, 
							dt_liberacao) 
						values (clock_timestamp(), 
							wheb_mensagem_pck.get_texto(294579), -- Comunicação de Reinternação 
							/*Paciente : #@CD_PESSOA_FISICA_P#@ 
							Atendimento: #@NR_ATENDIMENTO_P#@ 
 
							Observação: Este paciente já esteve internado no período de #@QT_DIA_P#@ dia(s) retroativos.*/
 
							wheb_mensagem_pck.get_texto(305718, 	'CD_PESSOA_FISICA_P=' || obter_nome_pf(cd_pessoa_fisica_p) || 
												';NR_ATENDIMENTO_P=' || nr_atendimento_p || 
												';QT_DIA_P=' || qt_dia_p), 
							nm_usuario_p, 
							clock_timestamp(), 
							'N', 
							null, 
							cd_perfil_w||', ', 
							nextval('comunic_interna_seq'), 
							'N', 
							null, 
							null, 
							cd_estabelecimento_p, 
							null, 
							clock_timestamp());
				end if;							
				 
				if not(coalesce(nm_usuario_receb_w::text, '') = '') then 
					nm_usuario_receb_lista_w := substr(nm_usuario_receb_lista_w||nm_usuario_receb_w||',',1,255);
				end if;
 
				end;
			end loop;
			close C01;		
			 
			if (Length(trim(both nm_usuario_receb_lista_w)) > 0) then	 
				insert	into comunic_interna( 
						dt_comunicado, 
						ds_titulo, 
						ds_comunicado, 
						nm_usuario, 
						dt_atualizacao, 
						ie_geral, 
						nm_usuario_destino, 
						ds_perfil_adicional, 
						nr_sequencia, 
						ie_gerencial, 
						nr_seq_classif, 
						cd_setor_destino, 
						cd_estab_destino, 
						ds_setor_adicional, 
						dt_liberacao) 
					values (clock_timestamp(), 
						wheb_mensagem_pck.get_texto(294579), -- Comunicação de Reinternação 
						/*Paciente : #@CD_PESSOA_FISICA_P#@ 
						Atendimento: #@NR_ATENDIMENTO_P#@ 
 
						Observação: Este paciente já esteve internado no período de #@QT_DIA_P#@ dia(s) retroativos.*/
 
						wheb_mensagem_pck.get_texto(305718, 	'CD_PESSOA_FISICA_P=' || obter_nome_pf(cd_pessoa_fisica_p) || 
											';NR_ATENDIMENTO_P=' || nr_atendimento_p || 
											';QT_DIA_P=' || qt_dia_p), 
						nm_usuario_p, 
						clock_timestamp(), 
						'N', 
						nm_usuario_receb_lista_w, 
						null, 
						nextval('comunic_interna_seq'), 
						'N', 
						null, 
						null, 
						cd_estabelecimento_p, 
						null, 
						clock_timestamp());
 
				nm_usuario_receb_lista_w := '';
			end if;
		end if;
	end if;
end if;
 
select	substr(obter_se_pessoa_ocor_sac(cd_pessoa_fisica_p, null, 'R'),1,1) 
into STRICT	ie_reclamacao_sac_w
;
 
if (ie_reclamacao_sac_w = 'S') then 
	select obter_setor_atendimento(nr_atendimento_p) 
	into STRICT cd_setor_atendimento 
	;
 
	open C03;
	loop 
	fetch C03 into	 
		nr_sequencia_w, 
		dt_ocorrencia_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin 
		ds_num_data_bo_w := substr(ds_num_data_bo_w || chr(13) || chr(10) || 
					wheb_mensagem_pck.get_texto(305719,'NR_SEQUENCIA_W=' || nr_sequencia_w || ';DT_OCORRENCIA_W=' || to_char(dt_ocorrencia_w,'dd/mm/yyyy')),1,2000);
		end;
	end loop;
	close C03;
 
	if (cd_setor_atendimento > 0) then 
		select obter_nome_setor(cd_setor_atendimento) 
		into STRICT ds_setor_atendimento 
		;
		 
		ds_setor_atendimento := wheb_mensagem_pck.get_texto(305720) || ' ' || cd_setor_atendimento || ' - ' || ds_setor_atendimento;
	end if;	
	 
	open C02;
	loop 
	fetch C02 into	 
		cd_perfil_w, 
		nm_usuario_receb_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin 
			 
		if (cd_perfil_w IS NOT NULL AND cd_perfil_w::text <> '') then 
			insert	into comunic_interna( 
						dt_comunicado, 
						ds_titulo, 
						ds_comunicado, 
						nm_usuario, 
						dt_atualizacao, 
						ie_geral, 
						nm_usuario_destino, 
						ds_perfil_adicional, 
						nr_sequencia, 
						ie_gerencial, 
						nr_seq_classif, 
						cd_setor_destino, 
						cd_estab_destino, 
						ds_setor_adicional, 
						dt_liberacao) 
					values (clock_timestamp(), 
						wheb_mensagem_pck.get_texto(305722), -- Comunicação de paciente com reclamação no SAC 
						substr(wheb_mensagem_pck.get_texto(305723, 	'CD_PESSOA_FISICA_P=' || obter_nome_pf(cd_pessoa_fisica_p) || 
												';NR_ATENDIMENTO_P=' || nr_atendimento_p || 
												';DS_SETOR_ATENDIMENTO=' || ds_setor_atendimento) || chr(13) || chr(10) || 
						ds_num_data_bo_w,1,32000), 
						nm_usuario_p, 
						clock_timestamp(), 
						'N', 
						null, 
						cd_perfil_w||', ', 
						nextval('comunic_interna_seq'), 
						'N', 
						null, 
						null, 
						cd_estabelecimento_p, 
						null, 
						clock_timestamp());
		end if;		
			 
		if	not(coalesce(nm_usuario_receb_w::text, '') = '') then 
			nm_usuario_receb_lista_w := nm_usuario_receb_lista_w||nm_usuario_receb_w||','; 						
		end if;
 
		end;
	end loop;
	close C02;
	 
	if (Length(trim(both nm_usuario_receb_lista_w)) > 0) then	 
			insert	into comunic_interna( 
					dt_comunicado, 
					ds_titulo, 
					ds_comunicado, 
					nm_usuario, 
					dt_atualizacao, 
					ie_geral, 
					nm_usuario_destino, 
					ds_perfil_adicional, 
					nr_sequencia, 
					ie_gerencial, 
					nr_seq_classif, 
					cd_setor_destino, 
					cd_estab_destino, 
					ds_setor_adicional, 
					dt_liberacao) 
				values (clock_timestamp(), 
					wheb_mensagem_pck.get_texto(305722), -- Comunicação de paciente com reclamação no SAC 
					substr(wheb_mensagem_pck.get_texto(305723, 	'CD_PESSOA_FISICA_P=' || obter_nome_pf(cd_pessoa_fisica_p) || 
											';NR_ATENDIMENTO_P=' || nr_atendimento_p || 
											';DS_SETOR_ATENDIMENTO=' || ds_setor_atendimento) || chr(13) || chr(10) || 
					ds_num_data_bo_w,1,32000), 
					nm_usuario_p, 
					clock_timestamp(), 
					'N', 
					nm_usuario_receb_lista_w, 
					null, 
					nextval('comunic_interna_seq'), 
					'N', 
					null, 
					null, 
					cd_estabelecimento_p, 
					null, 
					clock_timestamp());
		nm_usuario_receb_lista_w := '';
	end if;
end if;
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE enviar_comunic_atend ( nr_atendimento_p bigint, qt_dia_p bigint, cd_pessoa_fisica_p text, nm_usuario_p text, cd_estabelecimento_p bigint, ie_tipo_atendimento_p bigint, qt_dias_reinternacao_p bigint) FROM PUBLIC;

