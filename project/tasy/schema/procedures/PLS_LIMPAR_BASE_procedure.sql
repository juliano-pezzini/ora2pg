-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_limpar_base ( ie_tipo_limpeza_p text, nm_usuario_p text) AS $body$
DECLARE

 
/* ie_tipo_limpeza_p 
	'P' = Proposta de adesão 
	'A' = Autorizações 
	'M' = Mensalidades 
	'C' = Contratos 
	'E' = Contas Médicas 
*/
 
 
nr_sequencia_w			bigint;
ds_erro_w			varchar(255);

C01 CURSOR FOR 
	SELECT	nr_sequencia 
	from	pls_proposta_adesao;

C02 CURSOR FOR 
	SELECT	nr_sequencia 
	from	pls_guia_plano;
	
C03 CURSOR FOR 
	SELECT	nr_sequencia 
	from	pls_lote_mensalidade;
	
C04 CURSOR FOR 
	SELECT	nr_sequencia 
	from	pls_contrato;
	
C05 CURSOR FOR 
	SELECT	nr_sequencia 
	from	pls_protocolo_conta;


BEGIN 
 
CALL wheb_mensagem_pck.exibir_mensagem_abort( 183562, null);
/* Essa rotina não deve ser rodada na base. */
 
 
/* Proposta de adesão */
 
if (ie_tipo_limpeza_p = 'P') then 
	open C01;
	loop 
	fetch C01 into	 
		nr_sequencia_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin 
		begin 
		CALL pls_limpar_base_proposta(nr_sequencia_w);
		exception 
		when others then 
			ds_erro_w	:= 'Erros durante a execução da rotina.';
		end;
		end;
	end loop;
	close C01;
CALL Tasy_posicionar_sequence('PLS_PROPOSTA_BENEF_ANEXO','NR_SEQUENCIA','N');
CALL Tasy_posicionar_sequence('PLS_PROPOSTA_BENEFICIARIO','NR_SEQUENCIA','N');
CALL Tasy_posicionar_sequence('PLS_PROPOSTA_PLANO','NR_SEQUENCIA','N');
CALL Tasy_posicionar_sequence('PLS_PROPOSTA_PAGADOR','NR_SEQUENCIA','N');
CALL Tasy_posicionar_sequence('PLS_PROPOSTA_HISTORICO','NR_SEQUENCIA','N');
CALL Tasy_posicionar_sequence('PLS_PROPOSTA_VALIDACAO','NR_SEQUENCIA','N');
CALL Tasy_posicionar_sequence('PLS_PRECO_REGRA','NR_SEQUENCIA','N');
CALL Tasy_posicionar_sequence('PLS_REGRA_DESCONTO','NR_SEQUENCIA','N');
CALL Tasy_posicionar_sequence('PLS_DECLARACAO_SEGURADO','NR_SEQUENCIA','N');
CALL Tasy_posicionar_sequence('PLS_PROPOSTA_ADESAO','NR_SEQUENCIA','N');
/* Autorizações */
 
elsif (ie_tipo_limpeza_p = 'A') then 
	open C02;
	loop 
	fetch C02 into	 
		nr_sequencia_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin 
		begin 
		CALL pls_limpar_base_autorizacao(nr_sequencia_w);
		exception 
		when others then 
			ds_erro_w	:= 'Erros durante a execução da rotina.';
		end;
		end;
	end loop;
	close C02;
CALL Tasy_posicionar_sequence('PLS_GUIA_GLOSA','NR_SEQUENCIA','N');
CALL Tasy_posicionar_sequence('PLS_CONTA_AUTOR','NR_SEQUENCIA','N');
CALL Tasy_posicionar_sequence('PLS_GUIA_PLANO_PROC','NR_SEQUENCIA','N');
CALL Tasy_posicionar_sequence('PLS_GUIA_PLANO_MAT','NR_SEQUENCIA','N');
CALL Tasy_posicionar_sequence('PLS_DIAGNOSTICO','NR_SEQUENCIA','N');
CALL Tasy_posicionar_sequence('PLS_GUIA_PLANO_ANEXO','NR_SEQUENCIA','N');
CALL Tasy_posicionar_sequence('PLS_GUIA_PLANO_HISTORICO','NR_SEQUENCIA','N');
CALL Tasy_posicionar_sequence('PLS_GUIA_CONTA','NR_SEQUENCIA','N');
CALL Tasy_posicionar_sequence('PLS_GUIA_MOTIVO_LIB','NR_SEQUENCIA','N');
CALL Tasy_posicionar_sequence('PLS_GUIA_COPARTICIPACAO','NR_SEQUENCIA','N');
CALL Tasy_posicionar_sequence('PLS_GUIA_PLANO','NR_SEQUENCIA','N');
/* Mensalidades */
 
elsif (ie_tipo_limpeza_p = 'M') then 
	open C03;
	loop 
	fetch C03 into	 
		nr_sequencia_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin 
		begin 
		CALL pls_limpar_base_mensalidade(nr_sequencia_w);
		exception 
		when others then 
			ds_erro_w	:= 'Erros durante a execução da rotina.';
		end;
		end;
	end loop;
	close C03;
CALL Tasy_posicionar_sequence('PLS_LOTE_MENSALIDADE','NR_SEQUENCIA','N');
CALL Tasy_posicionar_sequence('PLS_MENSALIDADE_SEG_ADIC','NR_SEQUENCIA','N');
CALL Tasy_posicionar_sequence('PLS_MENSALIDADE_SEG_ITEM','NR_SEQUENCIA','N');
CALL Tasy_posicionar_sequence('PLS_REPASSE_MENS','NR_SEQUENCIA','N');
CALL Tasy_posicionar_sequence('PLS_MENSALIDADE_SEGURADO','NR_SEQUENCIA','N');
CALL Tasy_posicionar_sequence('PLS_MENSALIDADE','NR_SEQUENCIA','N');
CALL Tasy_posicionar_sequence('PLS_MENSALIDADE_SCA','NR_SEQUENCIA','N');
CALL Tasy_posicionar_sequence('PLS_MENSALIDADE_TRIB','NR_SEQUENCIA','N');
CALL Tasy_posicionar_sequence('PLS_SEGURADO_AGRAVO_PARC','NR_SEQUENCIA','N');
CALL Tasy_posicionar_sequence('PLS_MENSALIDADE_HISTORICO','NR_SEQUENCIA','N');
/* Contratos */
 
elsif (ie_tipo_limpeza_p = 'C') then 
	open C04;
	loop 
	fetch C04 into	 
		nr_sequencia_w;
	EXIT WHEN NOT FOUND; /* apply on C04 */
		begin 
		begin 
		CALL pls_limpar_base_contratos(nr_sequencia_w);
		exception 
		when others then 
			ds_erro_w	:= 'Erros durante a execução da rotina.';
		end;
		end;
	end loop;
	close C04;
CALL Tasy_posicionar_sequence('PLS_LOTE_CONSISTENCIA_SIB','NR_SEQUENCIA','N');
CALL Tasy_posicionar_sequence('PLS_SEGURADO_CART_ANT','NR_SEQUENCIA','N');
CALL Tasy_posicionar_sequence('PLS_SEGURADO_COMPL','NR_SEQUENCIA','N');
CALL Tasy_posicionar_sequence('PLS_SEGURADO_PRECO','NR_SEQUENCIA','N');
CALL Tasy_posicionar_sequence('PLS_SEGURADO_SIB','NR_SEQUENCIA','N');
CALL Tasy_posicionar_sequence('PLS_COMERCIAL_CLIENTE','NR_SEQUENCIA','N');
CALL Tasy_posicionar_sequence('PLS_SOLICITACAO_COMERCIAL','NR_SEQUENCIA','N');
CALL Tasy_posicionar_sequence('PLS_CARTEIRA_EMISSAO','NR_SEQUENCIA','N');
CALL Tasy_posicionar_sequence('PLS_SEGURADO_CARTEIRA','NR_SEQUENCIA','N');
CALL Tasy_posicionar_sequence('PLS_SEGURADO','NR_SEQUENCIA','N');
CALL Tasy_posicionar_sequence('PLS_CONTRATO_CONTATO','NR_SEQUENCIA','N');
CALL Tasy_posicionar_sequence('PLS_CARENCIA','NR_SEQUENCIA','N');
CALL Tasy_posicionar_sequence('PLS_COBERTURA','NR_SEQUENCIA','N');
CALL Tasy_posicionar_sequence('PLS_CONTRATO_DOC_ARQ','NR_SEQUENCIA','N');
CALL Tasy_posicionar_sequence('PLS_CONTRATO_DOC_TEXTO','NR_SEQUENCIA','N');
CALL Tasy_posicionar_sequence('PLS_CONTRATO_DOCUMENTO','NR_SEQUENCIA','N');
CALL Tasy_posicionar_sequence('PLS_CONTRATO_PLANO','NR_SEQUENCIA','N');
CALL Tasy_posicionar_sequence('PLS_ESTIPULANTE_WEB','NR_SEQUENCIA','N');
CALL Tasy_posicionar_sequence('PLS_LIMITACAO','NR_SEQUENCIA','N');
CALL Tasy_posicionar_sequence('PLS_REAJUSTE','NR_SEQUENCIA','N');
CALL Tasy_posicionar_sequence('PLS_REAJUSTE_TABELA','NR_SEQUENCIA','N');
CALL Tasy_posicionar_sequence('PLS_REGRA_COPARTICIPACAO','NR_SEQUENCIA','N');
CALL Tasy_posicionar_sequence('PLS_REGRA_DESCONTO','NR_SEQUENCIA','N');
CALL Tasy_posicionar_sequence('PLS_REGRA_INSCRICAO','NR_SEQUENCIA','N');
CALL Tasy_posicionar_sequence('PLS_REGRA_MENS_CONTRATO','NR_SEQUENCIA','N');
CALL Tasy_posicionar_sequence('PLS_REGRA_POS_ESTABELECIDO','NR_SEQUENCIA','N');
CALL Tasy_posicionar_sequence('PLS_RESCISAO_CONTRATO','NR_SEQUENCIA','N');
CALL Tasy_posicionar_sequence('PLS_CONTRATO_PAGADOR','NR_SEQUENCIA','N');
CALL Tasy_posicionar_sequence('PLS_CONTRATO','NR_SEQUENCIA','N');
/* Contas Médicas */
 
elsif (ie_tipo_limpeza_p = 'E') then 
	open C05;
	loop 
	fetch C05 into	 
		nr_sequencia_w;
	EXIT WHEN NOT FOUND; /* apply on C05 */
		begin 
		begin 
		CALL pls_limpar_base_conta(nr_sequencia_w,nm_usuario_p);
		exception 
		when others then 
			ds_erro_w	:= 'Erros durante a execução da rotina.';
		end;
		end;
	end loop;
	close C05;
CALL Tasy_posicionar_sequence('PLS_CONTA_AUTOR','NR_SEQUENCIA','N');
CALL Tasy_posicionar_sequence('PLS_CONTA_HISTORICO','NR_SEQUENCIA','N');
CALL Tasy_posicionar_sequence('PLS_CONTA_COPARTICIPACAO','NR_SEQUENCIA','N');
CALL Tasy_posicionar_sequence('PLS_DIAGNOSTICO_CONTA','NR_SEQUENCIA','N');
CALL Tasy_posicionar_sequence('PLS_CONTA_MAT','NR_SEQUENCIA','N');
CALL Tasy_posicionar_sequence('PLS_CONTA_PROC','NR_SEQUENCIA','N');
CALL Tasy_posicionar_sequence('PLS_RESUMO_CONTA','NR_SEQUENCIA','N');
CALL Tasy_posicionar_sequence('PLS_CONTA_GLOSA','NR_SEQUENCIA','N');
CALL Tasy_posicionar_sequence('PLS_CONTA','NR_SEQUENCIA','N');
CALL Tasy_posicionar_sequence('PLS_PROT_CONTA_TITULO','NR_SEQUENCIA','N');
CALL Tasy_posicionar_sequence('PLS_PROTOCOLO_CONTA','NR_SEQUENCIA','N');
CALL Tasy_posicionar_sequence('PLS_LOTE_PROTOCOLO','NR_SEQUENCIA','N');
/* Gestão comercial */
 
--elsif	(ie_tipo_limpeza_p = 'E') then 
 
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_limpar_base ( ie_tipo_limpeza_p text, nm_usuario_p text) FROM PUBLIC;

