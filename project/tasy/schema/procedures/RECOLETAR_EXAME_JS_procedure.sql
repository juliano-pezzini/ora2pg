-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE recoletar_exame_js ( nr_prescricao_p bigint, nr_seq_prescr_p bigint, cd_material_p text, cd_procedimento_p bigint, ie_coleta_exame_p text, ie_motivo_recoleta_p text, ie_retira_dt_integracao_p text, ie_ret_exame_lote_p text, ie_atualizar_status_adep_p text, nr_status_recoleta_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE

				
nr_sequencia_w		bigint;
nr_prescricao_w		bigint;
ds_comando_update_w	varchar(4000);
nr_atendimento_w	bigint;
cd_intervalo_w		varchar(10);
nr_seq_proc_interno_w	bigint;
ie_acm_sn_w		varchar(2);
qt_procedimento_w	double precision;
ie_inconsistencia_w     varchar(1);
ds_inconsistentes_w	varchar(255);
nr_seq_prot_glic_w      bigint;
nr_seq_evento_w		bigint;
ie_existe_reg_w		bigint;
dt_prev_execucao_w	timestamp;
nr_seq_resultado_w	exame_lab_resultado.nr_seq_resultado%type;
ie_desfazer_dig_recoleta_w varchar(1);


ds_sep_bv_w		varchar(50);
			
c01 CURSOR FOR
SELECT 	a.nr_sequencia,
	a.nr_prescricao
from 	prescr_procedimento a
where 	a.nr_prescricao = nr_prescricao_p
and 	a.ie_status_atend < 35
and 	ie_coleta_exame_p = 'S'
and 	nr_sequencia  = nr_seq_prescr_p
and	((((ie_motivo_recoleta_p = 'S') or ie_motivo_recoleta_p = 'A') and (nr_seq_recoleta IS NOT NULL AND nr_seq_recoleta::text <> '')) or (ie_motivo_recoleta_p = 'N'))

union

SELECT 	a.nr_sequencia,
	a.nr_prescricao
from 	prescr_procedimento a
where 	a.nr_prescricao = nr_prescricao_p
and 	a.ie_status_atend < 35
and	ie_coleta_exame_p = 'N' 
and 	cd_material_exame  = cd_material_p
and	((((ie_motivo_recoleta_p = 'S') or ie_motivo_recoleta_p = 'A') and (nr_seq_recoleta IS NOT NULL AND nr_seq_recoleta::text <> '')) or (ie_motivo_recoleta_p = 'N'));

C02 CURSOR FOR
	SELECT	a.nr_seq_evento
	from	regra_envio_sms a
	where	a.ie_evento_disp = 'REXL'
	and	coalesce(a.ie_situacao,'A') = 'A';

c03 CURSOR FOR
SELECT 	a.nr_sequencia,
	b.nr_seq_resultado
from 	prescr_procedimento a,
	exame_lab_resultado b,
	exame_lab_result_item c
where 	a.nr_prescricao = b.nr_prescricao
and	b.nr_seq_resultado = c.nr_seq_resultado
and 	a.nr_prescricao = nr_prescricao_p
and 	((nr_status_recoleta_p > 0 and a.ie_status_atend = nr_status_recoleta_p) or (nr_status_recoleta_p <= 0 and a.ie_status_atend = 20))
and	c.ie_status = 1
and 	ie_coleta_exame_p = 'S'
and 	a.nr_sequencia  = nr_seq_prescr_p
and	((((ie_motivo_recoleta_p = 'S') or ie_motivo_recoleta_p = 'A') and (nr_seq_recoleta IS NOT NULL AND nr_seq_recoleta::text <> '')) or (ie_motivo_recoleta_p = 'N'))

union

SELECT 	a.nr_sequencia,
	b.nr_seq_resultado
from 	prescr_procedimento a,
	exame_lab_resultado b,
	exame_lab_result_item c
where 	a.nr_prescricao = b.nr_prescricao
and	b.nr_seq_resultado = c.nr_seq_resultado
and	a.nr_prescricao = nr_prescricao_p
and 	((nr_status_recoleta_p > 0 and a.ie_status_atend = nr_status_recoleta_p) or (nr_status_recoleta_p <= 0 and a.ie_status_atend = 20))
and	c.ie_status = 1
and	ie_coleta_exame_p = 'N' 
and 	a.cd_material_exame  = cd_material_p
and	((((ie_motivo_recoleta_p = 'S') or ie_motivo_recoleta_p = 'A') and (nr_seq_recoleta IS NOT NULL AND nr_seq_recoleta::text <> '')) or (ie_motivo_recoleta_p = 'N'));


BEGIN

select coalesce(max(ie_desfazer_dig_recoleta),'S')
into STRICT   ie_desfazer_dig_recoleta_w
from   lab_parametro a
where  a.cd_estabelecimento = obter_estabelecimento_ativo;

ds_sep_bv_w	:= obter_separador_bv;

if (ie_ret_exame_lote_p = 'S') then

	open C01;
	loop
	fetch C01 into	
		nr_sequencia_w,
		nr_prescricao_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		
		update 	prescr_procedimento
		set 	nm_usuario = nm_usuario_p,
			dt_emissao_setor_atend  = NULL
		where 	nr_prescricao = nr_prescricao_w
		and 	nr_sequencia = nr_sequencia_w;
		commit;
		
		CALL retirar_exame_lote_lab(nr_prescricao_w, nr_sequencia_w);
		
	end loop;
	close C01;
end if;

ds_comando_update_w :=	' update	prescr_procedimento '||
			' set 		ie_amostra = :ie_amostra, '||
			'		nm_usuario = :nm_usuario,'||
			'		dt_atualizacao = sysdate '||
			'		, 	nr_seq_lab_ext = null ' ||
			'		,  	cd_motivo_baixa = 0' ||
			'		,	 dt_baixa = null';

if (nr_status_recoleta_p > 0) then
	ds_comando_update_w := ds_comando_update_w || ' ,ie_status_atend = ' || to_char(nr_status_recoleta_p);
else
	ds_comando_update_w := ds_comando_update_w || ' ,ie_status_atend = 20 ';
end if;

if (ie_retira_dt_integracao_p = 'S') then
	ds_comando_update_w := ds_comando_update_w || ' ,dt_integracao = null ';
end if;

ds_comando_update_w := ds_comando_update_w ||	' where nr_prescricao =  :nr_prescricao' ||
						' and ie_status_atend < 35 ';
						
						
if (ie_coleta_exame_p = 'S') then
	ds_comando_update_w := ds_comando_update_w || ' and nr_sequencia  = ' || to_char(nr_seq_prescr_p);
elsif (ie_coleta_exame_p = 'N') then
	ds_comando_update_w := ds_comando_update_w || ' and cd_material_exame  =  ''' ||  cd_material_p||'''';
end if;

if (ie_motivo_recoleta_p = 'S') or (ie_motivo_recoleta_p = 'A') then
	ds_comando_update_w := ds_comando_update_w || ' and nr_seq_recoleta is not null ';
end if;

CALL exec_sql_dinamico_bv('', ds_comando_update_w, 	'ie_amostra=' || 'N' || ds_sep_bv_w ||
						'nm_usuario=' || nm_usuario_p || ds_sep_bv_w || 
						'nr_prescricao=' || to_char(nr_prescricao_p) || ds_sep_bv_w);

--Desfaz a digitação do exame caso ele esteja no status de digitação no momento da recoleta						
if (ie_desfazer_dig_recoleta_w='S') then
open C03;
	loop
	fetch C03 into
		nr_sequencia_w,
		nr_seq_resultado_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		lab_desfazer_digitacao_result(nr_seq_resultado_w, nr_sequencia_w, nm_usuario_p);
	end loop;
	close C03;					
end if;

open C02;
loop
fetch C02 into	
	nr_seq_evento_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin
	CALL gerar_evento_exame_recoleta(nr_seq_evento_w,nr_prescricao_p,nr_seq_prescr_p,nm_usuario_p);
	end;
end loop;
close C02;
						
						
if (ie_atualizar_status_adep_p = 'S') then
	select 	max(nr_atendimento)
	into STRICT	nr_atendimento_w
	from 	prescr_medica
	where 	nr_prescricao = nr_prescricao_p;

	select 	max(cd_intervalo),
		max(nr_seq_proc_interno),
		max(obter_se_acm_sn(ie_acm, ie_se_necessario)),
		max(qt_procedimento),
		max(nr_seq_prot_glic)
	into STRICT	cd_intervalo_w,
		nr_seq_proc_interno_w,
		ie_acm_sn_w,
		qt_procedimento_w,
		nr_seq_prot_glic_w
	from   	prescr_procedimento
	where  	nr_prescricao	= nr_prescricao_p
	and    	nr_sequencia 	= nr_seq_prescr_p;	
	
	select	dt_prev_execucao
	into STRICT	dt_prev_execucao_w
	from	prescr_procedimento
	where	nr_prescricao = nr_prescricao_p
	and	nr_sequencia = nr_seq_prescr_p;
	
	select 	count(*)
	into STRICT	ie_existe_reg_w
	from	prescr_proc_hor a,
		prescr_procedimento b
	where  	a.nr_prescricao = b.nr_prescricao
        and    	a.nr_seq_procedimento = b.nr_sequencia
        and    	a.dt_horario = dt_prev_execucao_w
        and    	b.nr_prescricao = nr_prescricao_p
        and    	b.nr_sequencia = nr_seq_prescr_p;
	
	if (ie_existe_reg_w > 0) then

		update 	prescr_proc_hor a
		set 	a.dt_fim_horario  = NULL,
			a.nm_usuario_adm  = NULL
		where 	a.nr_prescricao = nr_prescricao_p
		and 	a.nr_seq_procedimento = nr_seq_prescr_p
		and	a.dt_horario = dt_prev_execucao_w;
		commit;
		
		/*insert into logxxxx_tasy(			
			dt_atualizacao, 
			nm_usuario, 
			cd_log, 
			ds_log
			)
		values	(
			sysdate, 
			nm_usuario_p, 
			91901, 
			'Prescrição: ' || nr_prescricao_p || ' - Data prev Exec: ' || dt_prev_execucao_w || ' - Seq prescr.: ' || nr_seq_prescr_p
			);*/
		
	else 		
		SELECT * FROM aprazar_item_prescr(	'N', cd_estabelecimento_p, nr_atendimento_w, 'P', 0, cd_procedimento_p, cd_intervalo_w, qt_procedimento_w, (clock_timestamp() + interval '1 days'/24), nr_prescricao_p, nr_prescricao_p, nr_seq_prescr_p, 'S', null, null, nm_usuario_p, ie_inconsistencia_w, ds_inconsistentes_w, nr_seq_proc_interno_w, null, ie_acm_sn_w, null, null, 'N', null, nr_seq_prot_glic_w, null, null, '', null, null) INTO STRICT ie_inconsistencia_w, ds_inconsistentes_w;
	end if;
end if;
				
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE recoletar_exame_js ( nr_prescricao_p bigint, nr_seq_prescr_p bigint, cd_material_p text, cd_procedimento_p bigint, ie_coleta_exame_p text, ie_motivo_recoleta_p text, ie_retira_dt_integracao_p text, ie_ret_exame_lote_p text, ie_atualizar_status_adep_p text, nr_status_recoleta_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

