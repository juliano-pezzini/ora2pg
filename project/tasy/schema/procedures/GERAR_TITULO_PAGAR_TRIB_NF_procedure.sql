-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_titulo_pagar_trib_nf (nr_sequencia_p bigint, nm_usuario_p text, ie_commit_p text default 'S') AS $body$
DECLARE

				     
ie_saldo_tit_pagar_w			varchar(10);
ie_trib_atualiza_saldo_w		varchar(2);
vl_tributo_saldo_w			double precision;										
cd_natureza_operacao_w			bigint;
cd_estab_financeiro_w 			smallint;
cd_estabelecimento_w			smallint;
nr_nota_fiscal_w			varchar(255);
dt_vencimento_w				timestamp;
dt_emissao_w				timestamp;
dt_entrada_saida_w			timestamp;
vl_vencimento_w				double precision;
vl_total_nota_w				double precision;
cd_cgc_w				varchar(14);
cd_pessoa_fisica_w			varchar(10);
nr_titulo_w				bigint;
nr_titulo_imposto_w			bigint;
nr_titulo_origem_w			bigint;
cd_tipo_baixa_neg_w			integer;
nr_ordem_compra_w        		bigint;
nr_sequencia_w	        		bigint;
tx_juros_w				double precision;
tx_multa_w				double precision;
vl_base_calculo_w			double precision;
cd_tributo_w				bigint;
nr_seq_imposto_w			bigint;
dt_imposto_w				timestamp;
ds_erro_w				varchar(255);
nr_seq_trans_baixa_w			bigint;
cd_cond_pagto_w				bigint;
ds_venc_w				varchar(4000);
qt_venc_w				bigint;
cd_conta_financ_trib_w			bigint;
cd_conta_financ_nf_trib_w		bigint;
cd_benef_trib_w				varchar(255);
ie_vencimento_w				varchar(255);
ds_irrelevante_w			varchar(255);
dt_primeiro_venc_w			timestamp;
nr_seq_trans_reg_w			bigint;
cd_darf_w				varchar(255);
cd_variacao_w				varchar(255)	:= null;
ie_periodicidade_w			varchar(255)	:= null;
nr_seq_lote_res_pls_w			bigint;
ie_dt_contab_tit_nota_w			varchar(255);
dt_contabil_w				timestamp;
cd_operacao_nf_w			bigint;
ie_data_contab_nf_w			varchar(255);
cd_moeda_w				integer;
ie_corpo_item_w				varchar(255);
ie_origem_titulo_w			varchar(10);
nr_seq_classe_tit_pagar_w		bigint;
nr_seq_proj_rec_w			bigint;
qt_proj_recurso_w			bigint;
cd_tipo_servico_w			varchar(100);
cd_tipo_baixa_oc_w			integer;
nr_seq_classe_w				bigint;
cd_tipo_baixa_neg_tp_w			integer;
cd_material_regra_w			bigint;
qt_regra_duplicada_w			bigint	:= 0;
nr_seq_classificacao_w			nota_fiscal.nr_seq_classificacao%type;
nr_seq_trans_fin_regra_w		titulo_pagar.nr_seq_trans_fin_baixa%type;
cd_empresa_w				smallint;
nr_seq_trib_cp_w			bigint;
vl_tributo_w				double precision;
pr_imposto_w				double precision;
vl_trib_nao_retido_w			double precision;
vl_base_nao_retido_w			double precision;
vl_trib_adic_w				double precision;
vl_base_adic_w				double precision;
cd_darf_nf_w				varchar(255);
vl_desc_dependente_w			double precision;
vl_reducao_w				double precision;
ie_rateio_classif_w			tributo.ie_rateio_classif%type;
cd_conta_contabil_w			varchar(255);
cd_centro_custo_w			bigint;
nr_seq_conta_financ_w			bigint;
vl_titulo_w				double precision;
nr_contrato_w				bigint;
nr_seq_classif_w			bigint;
cd_conta_financ_cpa_w			bigint;
vl_mercadoria_w				double precision;
vl_classif_w				double precision;
cd_conta_cont_trib_w			conta_contabil.cd_conta_contabil%type;
ie_conta_contab_tit_trib_w		parametros_contas_pagar.ie_conta_contab_tit_trib%type;
ie_titulo_pagar_w	tributo_conta_contabil.ie_titulo_pagar%type;
ie_titulo_tributo_w			varchar(1)	:= 'N';


c010 CURSOR FOR
SELECT 	        b.cd_estabelecimento,		
		b.nr_nota_fiscal,
		coalesce(a.dt_vencimento, b.dt_emissao) dt_vencimento,
                coalesce(a.vl_vencimento, b.vl_total_nota),	
		CASE WHEN a.ie_origem='S' THEN a.cd_cgc_emitente WHEN a.ie_origem='F' THEN a.cd_cgc_emitente  ELSE b.cd_cgc END ,
		b.cd_pessoa_fisica,
		b.dt_emissao,
		b.dt_entrada_saida,
		b.nr_sequencia,
		b.vl_total_nota,
		b.vl_mercadoria,
		b.nr_seq_lote_res_pls,	
		b.cd_tipo_servico,
		b.cd_natureza_operacao,
		b.nr_seq_classificacao,
		coalesce(o.ie_data_contab_nf, 'ES'),
		a.nr_titulo_pagar
	FROM operacao_nota o, estabelecimento e, natureza_operacao c, nota_fiscal b
LEFT OUTER JOIN nota_fiscal_venc a ON (b.nr_sequencia = a.nr_sequencia)
WHERE b.nr_sequencia		= nr_sequencia_p and b.cd_natureza_operacao 	= c.cd_natureza_operacao and b.cd_operacao_nf 		= o.cd_operacao_nf and b.cd_estabelecimento	= e.cd_estabelecimento and (a.nr_titulo_vinc IS NOT NULL AND a.nr_titulo_vinc::text <> '') and coalesce(o.ie_contas_pagar,'S') 	= 'S' and coalesce(e.ie_contas_pagar,'S') <> 'N'
	order	by dt_vencimento;

c030 CURSOR FOR
	SELECT 	coalesce(cd_conta_cont_trib_w,a.cd_conta_contabil),
		a.cd_centro_custo,
		coalesce(a.nr_seq_conta_financ, cd_conta_financ_cpa_w),
		sum(a.vl_liquido),
		a.nr_contrato
	from 	nota_fiscal_item a
	where	a.nr_sequencia = nr_sequencia_p
	and	not exists (SELECT	1
		from	nota_fiscal_item_rateio b
		where	b.nr_seq_nota = a.nr_sequencia
		and	b.nr_item_nf = a.nr_item_nf
		and (coalesce(ie_rateio_classif_w,'S') = 'S' or coalesce(ie_titulo_tributo_w,'N') = 'N'))
	group	by a.cd_conta_contabil,
		a.cd_centro_custo,
		a.nr_seq_conta_financ,
		a.nr_contrato
	
union all

	select 	coalesce(cd_conta_cont_trib_w,a.cd_conta_contabil),
		a.cd_centro_custo,
		coalesce(a.cd_conta_financ, coalesce(b.nr_seq_conta_financ, cd_conta_financ_cpa_w)),
		sum(a.vl_rateio),
		b.nr_contrato
	from 	nota_fiscal_item_rateio a,
		nota_fiscal_item b
	where	b.nr_sequencia	= nr_sequencia_p
	and	b.nr_sequencia	= a.nr_seq_nota 
	and	a.nr_item_nf		= b.nr_item_nf
	and (coalesce(ie_rateio_classif_w,'S') = 'S' or coalesce(ie_titulo_tributo_w,'N') = 'N')
	group	by a.cd_conta_contabil,
		a.cd_centro_custo,
		a.cd_conta_financ,
		b.nr_seq_conta_financ,
		b.nr_contrato
	
union all

	select	cd_conta_cont_trib_w,
		null,
		cd_conta_financ_cpa_w,
		vl_mercadoria_w,
		null
	
	where	not exists (select	1
		from	nota_fiscal_item a
		where	a.nr_sequencia	= nr_sequencia_p)
	and	(cd_conta_cont_trib_w IS NOT NULL AND cd_conta_cont_trib_w::text <> '');

c040 CURSOR FOR
	SELECT	a.cd_tributo,
		sum(coalesce(vl_base_calculo,0)),
		sum(coalesce(a.vl_tributo,0)),
		dividir(sum(coalesce(a.vl_tributo,0)), sum(coalesce(vl_base_calculo,0))) pr_imposto,
		max(ie_venc_nf) ie_vencimento,
		max(a.cd_conta_financ) cd_conta_financ_nf_trib,
		a.cd_darf,
		sum(coalesce(a.vl_base_adic,0)),
		sum(coalesce(a.vl_trib_nao_retido,0)),
		sum(coalesce(a.vl_base_nao_retido,0)),
		sum(coalesce(a.vl_trib_adic,0)),
		b.ie_corpo_item,
		sum(coalesce(a.vl_reducao_base,0)) vl_desc_dependente,
		sum(coalesce(a.vl_reducao,0)) vl_reducao,
		b.ie_rateio_classif
	from	tributo b,
		nota_fiscal_trib a
	where	((coalesce(b.ie_gerar_titulo_pagar,'N') in ('S','F')) or (philips_param_pck.get_cd_pais = 2))
	and	nr_sequencia		= nr_sequencia_p
	and	a.cd_tributo		= b.cd_tributo
	and	b.ie_conta_pagar	= 'S'
	group by a.cd_tributo,
		a.cd_darf,
		b.ie_corpo_item,
		b.ie_rateio_classif
	
union

	SELECT a.cd_tributo,
		sum(coalesce(vl_base_calculo,0)),
		sum(coalesce(a.vl_tributo,0)),
		dividir(sum(coalesce(a.vl_tributo,0)), sum(coalesce(vl_base_calculo,0))) pr_imposto,
		max(ie_vencimento) ie_vencimento,
		0 cd_conta_financ_nf_trib,
		null cd_darf,
		sum(coalesce(a.vl_base_adic,0)),
		sum(coalesce(a.vl_trib_nao_retido,0)),
		sum(coalesce(a.vl_base_nao_retido,0)),
		sum(coalesce(a.vl_trib_adic,0)),
		b.ie_corpo_item,
		0,
		0,
		b.ie_rateio_classif
	from	tributo b,
		nota_fiscal_item_trib a
	where	((coalesce(b.ie_gerar_titulo_pagar,'N') in ('S','F')) or (philips_param_pck.get_cd_pais = 2))
	and	nr_sequencia		= nr_sequencia_p
	and	a.cd_tributo		= b.cd_tributo
	and	b.ie_conta_pagar	= 'S'
	and	a.ie_rateio		= 'N'
	group	by a.cd_tributo,
		b.ie_corpo_item,
		b.ie_rateio_classif
	
union

	select	a.cd_tributo,
		coalesce(a.vl_base_calculo,0),
		coalesce(a.vl_tributo,0),
		dividir(coalesce(a.vl_tributo,0), coalesce(a.vl_base_calculo,0)) pr_imposto,
		b.ie_venc_nf ie_vencimento,
		0 cd_conta_financ_nf_trib,
		null cd_darf,
		coalesce(a.vl_base_adic,0),
		coalesce(a.vl_trib_nao_retido,0),
		coalesce(a.vl_base_nao_retido,0),
		coalesce(a.vl_trib_adic,0),
		b.ie_corpo_item,
		coalesce(a.vl_desc_base,0) vl_desc_dependente,
		coalesce(a.vl_reducao,0) vl_reducao,
		b.ie_rateio_classif
	from	tributo b,
		nota_fiscal_venc_trib a
	where	((coalesce(b.ie_gerar_titulo_pagar,'N') in ('S','F')) or (philips_param_pck.get_cd_pais = 2))
	and	a.dt_vencimento		= dt_vencimento_w
	and	nr_sequencia		= nr_sequencia_p
	and	a.cd_tributo		= b.cd_tributo
	and	b.ie_conta_pagar	= 'S';	
	
	

BEGIN

select	cd_estabelecimento	
into STRICT 	cd_estabelecimento_w
from	nota_fiscal
where	nr_sequencia = nr_sequencia_p;

select  max(cd_empresa)
into STRICT	cd_empresa_w
from	estabelecimento
where	cd_estabelecimento = cd_estabelecimento_w;

select	coalesce(cd_estab_financeiro, cd_estabelecimento)
into STRICT	cd_estab_financeiro_w
from	estabelecimento
where	cd_estabelecimento	= cd_estabelecimento_w;

select 	coalesce(ie_trib_saldo_tit_nf,'N'),
	ie_dt_contab_adiant_tit
into STRICT 	ie_trib_atualiza_saldo_w,
	ie_conta_contab_tit_trib_w
from 	parametros_contas_pagar
where	cd_estabelecimento	= cd_estabelecimento_w;


/*-----------------------------------------------------------------------*/

begin
select	min(dt_vencimento)
into STRICT	dt_primeiro_venc_w
from	nota_fiscal_venc
where	nr_sequencia	= nr_sequencia_p;
exception
when others then
	dt_primeiro_venc_w	:= null;
	
end;
/*-----------------------------------------------------------------------*/

select	count(*)
into STRICT	qt_proj_recurso_w
from	nota_fiscal_item
where	nr_sequencia	= nr_sequencia_p
and	nr_seq_proj_rec > 0;

nr_seq_proj_rec_w	:= null;
if (qt_proj_recurso_w > 0) then
	select	max(nr_seq_proj_rec)
	into STRICT	nr_seq_proj_rec_w
	from	nota_fiscal_item
	where	nr_sequencia	= nr_sequencia_p;
end if;

ie_titulo_tributo_w 	:= 'S';

/*-----------------------------------------------------------------------*/

begin

select	coalesce(a.pr_juros_negociado,0),
	coalesce(a.pr_multa_atraso, 0),
	coalesce(a.cd_moeda,1),
	b.cd_tipo_baixa_neg
into STRICT	tx_juros_w,
	tx_multa_w,
	cd_moeda_w,
	cd_tipo_baixa_oc_w
FROM ordem_compra a
LEFT OUTER JOIN forma_pagamento b ON (a.nr_seq_forma_pagto = b.nr_sequencia)
WHERE a.nr_ordem_compra	= nr_ordem_compra_w;
exception
	when others then
		begin
		tx_juros_w			:= 0;
		tx_multa_w			:= 0;		
		cd_moeda_w			:= 1;
		end;
end;
/*-----------------------------------------------------------------------*/

open c010;
loop
fetch c010 into
	cd_estabelecimento_w,
	nr_nota_fiscal_w,
	dt_vencimento_w,
	vl_vencimento_w,
	cd_cgc_w,
	cd_pessoa_fisica_w,
	dt_emissao_w,
	dt_entrada_saida_w,
	nr_sequencia_w,
	vl_total_nota_w,
	vl_mercadoria_w,
	nr_seq_lote_res_pls_w,
	cd_tipo_servico_w,
	cd_natureza_operacao_w,
	nr_seq_classificacao_w,
	ie_data_contab_nf_w,
	nr_titulo_w;
EXIT WHEN NOT FOUND; /* apply on c010 */
begin
		select	max(cd_conta_financ_cpa)
		into STRICT	cd_conta_financ_cpa_w
		from	parametro_fluxo_caixa
		where	cd_estabelecimento	= cd_estabelecimento_w;
		
		vl_tributo_saldo_w	:= 0;	
			
			dt_contabil_w	:= dt_entrada_saida_w;
		if (ie_dt_contab_tit_nota_w = 'EMI') then
			dt_contabil_w	:= dt_emissao_w;
		elsif (ie_dt_contab_tit_nota_w = 'ATU') then
			dt_contabil_w	:= PKG_DATE_UTILS.start_of(clock_timestamp(), 'dd', 0);
		elsif (ie_dt_contab_tit_nota_w = 'OPE') then
			
			if (ie_data_contab_nf_w = 'ES') then
				dt_contabil_w	:= dt_entrada_saida_w;
			elsif (ie_data_contab_nf_w = 'EMI') then
				dt_contabil_w	:= dt_emissao_w;
			elsif (ie_data_contab_nf_w = 'ATU') then
				dt_contabil_w	:= PKG_DATE_UTILS.start_of(clock_timestamp(), 'dd', 0);
			end if;
		end if;

               	if (coalesce(nr_seq_lote_res_pls_w,0) <> 0) then 
			ie_origem_titulo_w	:= '5';
		else
			ie_origem_titulo_w	:= '1';
		end if;


                        open c040;
			loop
			fetch c040 into
				cd_tributo_w,
				vl_base_calculo_w,
				vl_tributo_w,
				pr_imposto_w,
				ie_vencimento_w,
				cd_conta_financ_nf_trib_w,
				cd_darf_nf_w,
				vl_base_adic_w,
				vl_trib_nao_retido_w,
				vl_base_nao_retido_w, 
				vl_trib_adic_w,
				ie_corpo_item_w,
				vl_desc_dependente_w,
				vl_reducao_w,
				ie_rateio_classif_w;
			EXIT WHEN NOT FOUND; /* apply on c040 */
				begin

				cd_material_regra_w	:= null;
				
				select	count(distinct a.cd_material)
				into STRICT	qt_regra_duplicada_w
				from	estrutura_material_v b,
					nota_fiscal_item a
				where	exists
					(SELECT	1
					from	tributo_conta_pagar x
					where	obter_se_estrutura_mat(x.cd_grupo_material, x.cd_subgrupo_material, x.cd_classe_material,                                                  x.cd_material, a.cd_material, 'S') = 'S'
					and	((x.cd_material		= a.cd_material) or (x.cd_grupo_material	= b.cd_grupo_material) or (x.cd_subgrupo_material	= b.cd_subgrupo_material) or (x.cd_classe_material	= b.cd_classe_material))
					and	((coalesce(x.cd_pessoa_juridica::text, '') = '' and coalesce(x.cd_pessoa_fisica::text, '') = '') or (x.cd_pessoa_juridica = cd_cgc_w and coalesce(x.cd_pessoa_fisica::text, '') = '') or (x.cd_pessoa_fisica = cd_pessoa_fisica_w and coalesce(x.cd_pessoa_juridica::text, '') = ''))
					and (coalesce(x.cd_estabelecimento, cd_estabelecimento_w) = cd_estabelecimento_w)
					and (coalesce(x.cd_empresa, cd_empresa_w) = cd_empresa_w)
					and	dt_emissao_w between coalesce(dt_inicio_vigencia, dt_emissao_w - 1) and coalesce(dt_fim_vigencia, dt_emissao_w + 1)
					and	x.cd_tributo	= cd_tributo_w
					having	count(*) > 1)
				and	a.cd_material	= b.cd_material
				and	a.nr_sequencia	= nr_sequencia_p;
				
				if (qt_regra_duplicada_w = 0) then
					select	max(a.cd_material)
					into STRICT	cd_material_regra_w
					from	estrutura_material_v b,
						nota_fiscal_item a
					where	exists
						(SELECT	1
						from	tributo_conta_pagar x
						where	obter_se_estrutura_mat(x.cd_grupo_material, x.cd_subgrupo_material, x.cd_classe_material, x.cd_material, a.cd_material, 'S') = 'S'
						and	((x.cd_material		= a.cd_material) or (x.cd_grupo_material	= b.cd_grupo_material) or (x.cd_subgrupo_material	= b.cd_subgrupo_material) or (x.cd_classe_material	= b.cd_classe_material))
						and	((coalesce(x.cd_pessoa_juridica::text, '') = '' and coalesce(x.cd_pessoa_fisica::text, '') = '') or (x.cd_pessoa_juridica = cd_cgc_w and coalesce(x.cd_pessoa_fisica::text, '') = '') or (x.cd_pessoa_fisica = cd_pessoa_fisica_w and coalesce(x.cd_pessoa_juridica::text, '') = ''))
						and (coalesce(x.cd_estabelecimento, cd_estabelecimento_w) = cd_estabelecimento_w)
						and (coalesce(x.cd_empresa, cd_empresa_w) = cd_empresa_w)
						and	dt_emissao_w between coalesce(dt_inicio_vigencia, dt_emissao_w - 1) and coalesce(dt_fim_vigencia, dt_emissao_w + 1)
						and	x.cd_tributo	= cd_tributo_w)
					and	a.cd_material	= b.cd_material
					and	a.nr_sequencia	= nr_sequencia_p;

				else

					select	max(cd_material)
					into STRICT	cd_material_regra_w
					from	(SELECT	a.cd_material
						from	estrutura_material_v b,
							nota_fiscal_item a,
							tributo_conta_pagar x
						where	a.cd_material		= b.cd_material
						and	a.nr_sequencia		= nr_sequencia_p
						and	obter_se_estrutura_mat(x.cd_grupo_material, x.cd_subgrupo_material, x.cd_classe_material, x.cd_material, a.cd_material, 'S') = 'S'
						and	((x.cd_material		= a.cd_material) or (x.cd_grupo_material	= b.cd_grupo_material) or (x.cd_subgrupo_material	= b.cd_subgrupo_material) or (x.cd_classe_material	= b.cd_classe_material))
						and	((coalesce(x.cd_pessoa_juridica::text, '') = '' and coalesce(x.cd_pessoa_fisica::text, '') = '') or (x.cd_pessoa_juridica = cd_cgc_w and coalesce(x.cd_pessoa_fisica::text, '') = '') or (x.cd_pessoa_fisica = cd_pessoa_fisica_w and coalesce(x.cd_pessoa_juridica::text, '') = ''))
						and (coalesce(x.cd_estabelecimento, cd_estabelecimento_w) = cd_estabelecimento_w)
						and (coalesce(x.cd_empresa, cd_empresa_w) = cd_empresa_w)
						and	dt_emissao_w		between coalesce(dt_inicio_vigencia, dt_emissao_w - 1) and coalesce(dt_fim_vigencia, dt_emissao_w + 1)
						and	x.cd_tributo		= cd_tributo_w
						and	x.pr_aliquota		<> 0
						and	not exists
							(select	1
							from	tributo_conta_pagar y
							where	((y.cd_material = a.cd_material) or (y.cd_grupo_material = b.cd_grupo_material) or (y.cd_subgrupo_material = b.cd_subgrupo_material) or (y.cd_classe_material = b.cd_classe_material))
							and	y.pr_aliquota		= 0
							and	y.cd_tributo		= cd_tributo_w)
						order by b.cd_grupo_material,
							 b.cd_subgrupo_material,
							 b.cd_classe_material,
							 b.cd_material) alias27;

				end if;

				select	nextval('titulo_pagar_imposto_seq')
				into STRICT	nr_seq_imposto_w
				;

				select	max(cd_operacao_nf)
				into STRICT	cd_operacao_nf_w
				from	nota_fiscal
				where	nr_sequencia = nr_sequencia_p;
				
				SELECT * FROM obter_dados_trib_tit_pagar(cd_tributo_w, cd_estabelecimento_w, cd_cgc_w, cd_pessoa_fisica_w, cd_benef_trib_w, ds_irrelevante_w, cd_cond_pagto_w, cd_conta_financ_trib_w, nr_seq_trans_reg_w, nr_seq_trans_baixa_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, cd_darf_w, clock_timestamp(), cd_variacao_w, ie_periodicidade_w, 'N', cd_natureza_operacao_w, cd_tipo_servico_w, cd_material_regra_w, null, null, nr_seq_trib_cp_w, cd_operacao_nf_w, 0, nr_seq_classe_w, cd_tipo_baixa_neg_tp_w, vl_base_calculo_w, 'N', null, ie_origem_titulo_w, null, null) INTO STRICT cd_benef_trib_w, ds_irrelevante_w, cd_cond_pagto_w, cd_conta_financ_trib_w, nr_seq_trans_reg_w, nr_seq_trans_baixa_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, cd_darf_w, cd_variacao_w, ie_periodicidade_w, nr_seq_trib_cp_w, nr_seq_classe_w, cd_tipo_baixa_neg_tp_w;


				if (cd_conta_financ_nf_trib_w > 0) then
					cd_conta_financ_trib_w := cd_conta_financ_nf_trib_w;
				end if;

				if (ie_vencimento_w = 'V') then

					if (ie_corpo_item_w <> 'V') then
						vl_tributo_w		:= (vl_vencimento_w / vl_total_nota_w) * vl_tributo_w;
					end if;
					dt_imposto_w		:= coalesce(dt_vencimento_w,clock_timestamp());
		
				elsif (ie_vencimento_w = 'R') then

					if (dt_primeiro_venc_w IS NOT NULL AND dt_primeiro_venc_w::text <> '') and (dt_primeiro_venc_w < dt_vencimento_w) then
						goto	proximo;
					else
						dt_imposto_w	:= coalesce(dt_entrada_saida_w,clock_timestamp());
					end if;

				elsif (ie_vencimento_w = 'C') then

					dt_imposto_w	:= coalesce(dt_vencimento_w,clock_timestamp());

				elsif (ie_vencimento_w = 'E') then

					if (dt_primeiro_venc_w IS NOT NULL AND dt_primeiro_venc_w::text <> '') and (dt_primeiro_venc_w < dt_vencimento_w) then
						goto	proximo;
					else
						dt_imposto_w	:= coalesce(dt_emissao_w,clock_timestamp());
					end if;

				end if;

				if (cd_cond_pagto_w IS NOT NULL AND cd_cond_pagto_w::text <> '') then

					
					if (PKG_DATE_UTILS.get_WeekDay(dt_imposto_w) = 7) then
						
						if (PKG_DATE_UTILS.start_of(dt_imposto_w,'DD',0) = PKG_DATE_UTILS.start_of(dt_imposto_w + 2, 'MONTH', 0)) then
							dt_imposto_w := dt_imposto_w + 2;
						end if;
					elsif (PKG_DATE_UTILS.get_WeekDay(dt_imposto_w) = 1) then
						
						if (PKG_DATE_UTILS.start_of(dt_imposto_w,'DD',0) = PKG_DATE_UTILS.start_of(dt_imposto_w + 1, 'MONTH', 0)) then
							dt_imposto_w := dt_imposto_w + 1;
						end if;
					end if;

					SELECT * FROM calcular_vencimento(	cd_estabelecimento_w, cd_cond_pagto_w, dt_imposto_w, qt_venc_w, ds_venc_w) INTO STRICT qt_venc_w, ds_venc_w;

					if (qt_venc_w = 1) then	
						dt_imposto_w	:= to_date(substr(ds_venc_w,1,10),'DD/MM/YYYY');
					end if;
				end if;

				if	(vl_tributo_w > 0 AND philips_param_pck.get_cd_pais <> 2) then
					select	coalesce(ie_saldo_tit_pagar,'N')
					into STRICT	ie_saldo_tit_pagar_w
					from	tributo
					where	cd_tributo = cd_tributo_w;
					
					if (ie_saldo_tit_pagar_w = 'S') and (ie_trib_atualiza_saldo_w = 'S') then
						vl_tributo_saldo_w := vl_tributo_saldo_w + vl_tributo_w;
					end if;


					
					nr_titulo_origem_w	:= nr_titulo_w;
					select	nextval('titulo_pagar_seq')
					into STRICT	nr_titulo_imposto_w
					;

					
					select	max(cd_tipo_baixa)
					into STRICT	cd_tipo_baixa_neg_w
					from	pessoa_juridica_estab
					where	cd_cgc			= cd_benef_trib_w
					and	cd_estabelecimento	= cd_estabelecimento_w;

					nr_seq_trans_fin_regra_w := obter_trans_fin_regra(	'TNF', cd_estabelecimento_w, '', cd_benef_trib_w, '', '', 4, '', '', coalesce(nr_seq_classificacao_w,coalesce(nr_seq_classe_w,nr_seq_classe_tit_pagar_w)), nr_seq_trans_fin_regra_w);
								
								
					insert into titulo_pagar_imposto(
						nr_sequencia, nr_titulo, cd_tributo,
						ie_pago_prev, dt_atualizacao, nm_usuario,
						dt_imposto, vl_base_calculo, vl_imposto,
						ds_emp_retencao, pr_imposto, cd_cond_pagto,
						nr_seq_trans_baixa, vl_nao_retido, ie_vencimento,
						vl_base_nao_retido, vl_trib_adic, vl_base_adic, nr_seq_trans_reg,
						cd_darf,dt_atualizacao_nrec,nm_usuario_nrec, cd_variacao,
						ie_periodicidade, vl_desc_base,vl_reducao, nr_seq_trib_cp)
					values (
						nr_seq_imposto_w, nr_titulo_w, cd_tributo_w,
						'V', clock_timestamp(), nm_usuario_p,
						dt_imposto_w, vl_base_calculo_w, vl_tributo_w,
						null, pr_imposto_w, cd_cond_pagto_w,
						nr_seq_trans_baixa_w, vl_trib_nao_retido_w, ie_vencimento_w,
						vl_base_nao_retido_w, vl_trib_adic_w, vl_base_adic_w, nr_seq_trans_reg_w, 
						coalesce(cd_darf_nf_w, cd_darf_w), clock_timestamp(),nm_usuario_p, cd_variacao_w, ie_periodicidade_w, 
						vl_desc_dependente_w,vl_reducao_w, nr_seq_trib_cp_w);
						
					CALL atualizar_inclusao_tit_pagar(nr_titulo_w, nm_usuario_p);	
		
					insert into titulo_pagar(
				    		nr_titulo,
						cd_estabelecimento,
						dt_atualizacao,
						nm_usuario, 
						dt_emissao,
						dt_contabil, 
						dt_vencimento_original,
						dt_vencimento_atual,
						vl_titulo,
						vl_saldo_titulo,
						vl_saldo_juros,
						vl_saldo_multa,
						cd_moeda,
						tx_juros,
						tx_multa,
						cd_tipo_taxa_juro,
						cd_tipo_taxa_multa,             
						tx_desc_antecipacao,
						ie_situacao,
						ie_origem_titulo,
						ie_tipo_titulo,
						nr_seq_nota_fiscal, 
						cd_cgc,
						nr_documento,
						ie_desconto_dia, 
						nr_titulo_original,
						nr_lote_contabil,
						nr_seq_trans_fin_baixa,
						nr_seq_trans_fin_contab,
						ie_status_tributo, 
						nr_lote_transf_trib,						
						cd_estab_financeiro,
						cd_tipo_baixa_neg,
						nr_seq_lote_res_pls,
						nr_seq_proj_rec,
						cd_tributo,
						nr_seq_classe,
						ie_status,
						DS_OBSERVACAO_TITULO,
						nr_seq_tributo)
					values (
						nr_titulo_imposto_w,
						cd_estabelecimento_w,
						clock_timestamp(),
						nm_usuario_p,
						dt_emissao_w,
						dt_contabil_w,
						dt_imposto_w,
						dt_imposto_w,
						vl_tributo_w,
						vl_tributo_w,
						0,
						0,
						cd_moeda_w,
						tx_juros_w, 
						tx_multa_w,
						1,
						1, 
						0,
						'A',              
						ie_origem_titulo_w,               
						4,               
						nr_sequencia_w,
						cd_benef_trib_w,
						substr(nr_nota_fiscal_w,1,20),
						'N', 
						nr_titulo_origem_w,
						0,					
						coalesce(nr_seq_trans_fin_regra_w,nr_seq_trans_baixa_w),
						nr_seq_trans_reg_w,
						'NT',
						0,						
						cd_estab_financeiro_w,
						coalesce(cd_tipo_baixa_neg_tp_w,coalesce(cd_tipo_baixa_oc_w,cd_tipo_baixa_neg_w)),
						nr_seq_lote_res_pls_w,
						nr_seq_proj_rec_w,
						cd_tributo_w,
						coalesce(nr_seq_classificacao_w,coalesce(nr_seq_classe_w,nr_seq_classe_tit_pagar_w)),
						'D',
						coalesce(substr(Obter_Pessoa_Titulo_Pagar(nr_titulo_origem_w),1,255),null),
						nr_seq_imposto_w);
						
					CALL atualizar_inclusao_tit_pagar(nr_titulo_imposto_w, nm_usuario_p);
					
					cd_conta_cont_trib_w	:= null;

					if (coalesce(ie_conta_contab_tit_trib_w,'T')	= 'R') then
		
						select	max(cd_empresa)
						into STRICT	cd_empresa_w
						from	estabelecimento	
						where	cd_estabelecimento	= cd_estabelecimento_w;
						begin	
						select coalesce(ie_titulo_pagar,'N')  	
						into STRICT ie_titulo_pagar_w	
						from (SELECT ie_titulo_pagar
						from	tributo_conta_contabil
						where	cd_tributo 	= cd_tributo_w
						and	cd_cgc 		= cd_benef_trib_w
						and	cd_empresa	= cd_empresa_w
						and (coalesce(dt_inicio_vigencia, clock_timestamp()) <= clock_timestamp() and coalesce(dt_fim_vigencia, clock_timestamp()) >= clock_timestamp())
						order by dt_inicio_vigencia) alias8 LIMIT 1;	
						exception
						when others then
							ie_titulo_pagar_w := 'N';
						end;
						
						if (ie_titulo_pagar_w = 'S')then
							cd_conta_cont_trib_w		:= substr(obter_conta_contabil_trib(cd_empresa_w, cd_tributo_w, cd_benef_trib_w, clock_timestamp()),1,20);							
						else
							cd_conta_cont_trib_w		:= substr(obter_conta_contabil_trib(cd_empresa_w, cd_tributo_w, cd_cgc_w, clock_timestamp()),1,20);
						end if;
		
					end if;
					
					nr_seq_classif_w := 0;
					vl_classif_w := 0;
					open c030;
					loop
					fetch c030 into	
						cd_conta_contabil_w,
						cd_centro_custo_w,
						nr_seq_conta_financ_w,
						vl_titulo_w,
						nr_contrato_w;
					EXIT WHEN NOT FOUND; /* apply on c030 */
						begin
						nr_seq_classif_w	:= nr_seq_classif_w + 1;
						vl_titulo_w		:= vl_titulo_w * dividir_sem_round(vl_tributo_w,vl_total_nota_w);
						vl_titulo_w		:= vl_titulo_w * dividir_sem_round(vl_total_nota_w, vl_mercadoria_w);
		
						insert into titulo_pagar_classif(
							nr_titulo,
							nr_sequencia, 
							vl_titulo,
							dt_atualizacao, 
							nm_usuario, 
							cd_conta_contabil, 
							cd_centro_custo,
							nr_seq_conta_financ, 
							nr_seq_trans_fin, 
							nr_contrato)
						values (
							nr_titulo_imposto_w, 
							nr_seq_classif_w, 
							coalesce(vl_titulo_w,0),
							clock_timestamp(), 
							nm_usuario_p,
							cd_conta_contabil_w, 
							cd_centro_custo_w,
							coalesce(cd_conta_financ_trib_w, nr_seq_conta_financ_w), 
							null, 
							nr_contrato_w);
						vl_classif_w := vl_classif_w + vl_titulo_w;
						end;
					end loop;
					close c030;
					
					if (vl_tributo_w <> vl_classif_w) then

						select	coalesce(max(nr_sequencia),nr_seq_classif_w)
						into STRICT	nr_seq_classif_w
						from	titulo_pagar_classif a
						where	a.nr_titulo	= nr_titulo_w
						and	a.vl_titulo =	(SELECT	max(x.vl_titulo)
									from	titulo_pagar_classif x
									where	x.nr_titulo	= a.nr_titulo);
		
						update	titulo_pagar_classif
						set	vl_titulo	= vl_titulo + vl_tributo_w - vl_classif_w
						where	nr_titulo	= nr_titulo_imposto_w
						and	nr_sequencia	= nr_seq_classif_w;
					end if;
						
			        end if;	
			end;
			<<proximo>>
			null;
		end loop;
		close c040;
		
end;
end loop;
close c010;		

if (ie_commit_p = 'S') then
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_titulo_pagar_trib_nf (nr_sequencia_p bigint, nm_usuario_p text, ie_commit_p text default 'S') FROM PUBLIC;

