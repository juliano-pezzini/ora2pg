-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE limpar_liberacao_exclusao_cobr ( ie_tipo_cobranca_p text, nm_usuario_p text) AS $body$
DECLARE


nr_sequencia_w 		bigint;
ds_historico_w		varchar(255);
nr_titulo_w			titulo_receber_orgao_cobr.nr_titulo%type;
nr_seq_cheque_w		cheque_cr_orgao_cobr.nr_seq_cheque%type;
qtd_exclusao		bigint;
qtd_lote_exc		bigint;
qt_w				bigint;

C01 CURSOR FOR
	SELECT	nr_sequencia,
		nr_seq_cheque
	from	cheque_cr_orgao_cobr
	where	ie_selecionado = 'S'
	and 	(dt_liberacao_exclusao IS NOT NULL AND dt_liberacao_exclusao::text <> '')
	and 	coalesce(dt_exclusao::text, '') = ''
	and	coalesce(nr_seq_lote_exc::text, '') = '';

C02 CURSOR FOR
	SELECT	nr_sequencia,
		nr_titulo
	from	titulo_receber_orgao_cobr
	where	ie_selecionado = 'S'
	and 	(dt_liberacao_exclusao IS NOT NULL AND dt_liberacao_exclusao::text <> '')
	and 	coalesce(dt_exclusao::text, '') = ''
	and	coalesce(nr_seq_lote_exc::text, '') = '';


C03 CURSOR FOR
	SELECT	nr_sequencia
	from	outros_orgao_cobr
	where	ie_selecionado = 'S'
	and 	(dt_liberacao_exclusao IS NOT NULL AND dt_liberacao_exclusao::text <> '')
	and 	coalesce(dt_exclusao::text, '') = ''
	and	coalesce(nr_seq_lote_exc::text, '') = '';


BEGIN

select 	count(*)
into STRICT	qtd_exclusao
from (SELECT 1
		from 	cheque_cr_orgao_cobr
		where	ie_selecionado = 'S'
		and		(dt_exclusao IS NOT NULL AND dt_exclusao::text <> '')
	
union

	SELECT 1
		from 	titulo_receber_orgao_cobr
		where	ie_selecionado = 'S'
		and		(dt_exclusao IS NOT NULL AND dt_exclusao::text <> '')
	
union

	select 1
		from 	outros_orgao_cobr
		where	ie_selecionado = 'S'
		and		(dt_exclusao IS NOT NULL AND dt_exclusao::text <> '')
	) alias4;

select 	count(*)
into STRICT	qtd_lote_exc
from (SELECT 1
		from 	cheque_cr_orgao_cobr
		where	ie_selecionado = 'S'
		and		(nr_seq_lote_exc IS NOT NULL AND nr_seq_lote_exc::text <> '')
	
union

	SELECT 1
		from 	titulo_receber_orgao_cobr
		where	ie_selecionado = 'S'
		and		(nr_seq_lote_exc IS NOT NULL AND nr_seq_lote_exc::text <> '')
	
union

	select 1
		from 	outros_orgao_cobr
		where	ie_selecionado = 'S'
		and		(nr_seq_lote_exc IS NOT NULL AND nr_seq_lote_exc::text <> '')
	) alias4;

if (qtd_exclusao > 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(674405);
end if;

if (qtd_lote_exc > 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(674408);
end if;

if (ie_tipo_cobranca_p = 'C') then

	select	count(*)
	into STRICT	qt_w
	from	cheque_cr_orgao_cobr
	where	ie_selecionado = 'S';

	if (qt_w = 0)then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(682121);
	end if;


	open C01;
	loop
	fetch C01 into
		nr_sequencia_w,
		nr_seq_cheque_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		update	cheque_cr_orgao_cobr
		set	dt_liberacao_exclusao  = NULL
		where	nr_sequencia = nr_sequencia_w;

		update	cheque_cr_orgao_cobr
		set	ie_selecionado = 'N'
		where	nr_sequencia = nr_sequencia_w;

		ds_historico_w := wheb_mensagem_pck.get_texto(338837, 'NM_USUARIO=' || nm_usuario_p || ';NR_SEQUENCIA=' || nr_seq_cheque_w || ';DT_ATUALIZACAO=' || to_char(clock_timestamp(),'dd/MM/yyyy hh24:mi:ss'));
		CALL gerar_historico_cobr_orgao(null,nr_seq_cheque_w,null,ds_historico_w,nm_usuario_p,'P');

		end;
	end loop;
	close C01;

elsif (ie_tipo_cobranca_p = 'T') then

	select	count(*)
	into STRICT	qt_w
	from	titulo_receber_orgao_cobr
	where	ie_selecionado = 'S';

	if (qt_w = 0)then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(682121);
	end if;

	open C02;
	loop
	fetch C02 into
		nr_sequencia_w,
		nr_titulo_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin

		update	titulo_receber_orgao_cobr
		set	dt_liberacao_exclusao  = NULL
		where	nr_sequencia = nr_sequencia_w;

		update	titulo_receber_orgao_cobr
		set	ie_selecionado = 'N'
		where	nr_sequencia = nr_sequencia_w;

		ds_historico_w := wheb_mensagem_pck.get_texto(338837, 'NM_USUARIO=' || nm_usuario_p || ';NR_SEQUENCIA=' || nr_titulo_w || ';DT_ATUALIZACAO=' || to_char(clock_timestamp(),'dd/MM/yyyy hh24:mi:ss'));
		CALL gerar_historico_cobr_orgao(nr_titulo_w,null,null,ds_historico_w,nm_usuario_p,'P');

		end;
	end loop;
	close C02;

elsif (ie_tipo_cobranca_p = 'O') then

	select	count(*)
	into STRICT	qt_w
	from	outros_orgao_cobr
	where	ie_selecionado = 'S';

	if (qt_w = 0)then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(682121);
	end if;

	open C03;
	loop
	fetch C03 into
		nr_sequencia_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin

		update	outros_orgao_cobr
		set	dt_liberacao_exclusao  = NULL
		where	nr_sequencia = nr_sequencia_w;

		update	outros_orgao_cobr
		set	ie_selecionado = 'N'
		where	nr_sequencia = nr_sequencia_w;

		ds_historico_w := wheb_mensagem_pck.get_texto(338837, 'NM_USUARIO=' || nm_usuario_p || ';NR_SEQUENCIA=' || nr_sequencia_w || ';DT_ATUALIZACAO=' || to_char(clock_timestamp(),'dd/MM/yyyy hh24:mi:ss'));
		CALL gerar_historico_cobr_orgao(null,null,nr_sequencia_w,ds_historico_w,nm_usuario_p,'P');

		end;
	end loop;
	close C03;

end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE limpar_liberacao_exclusao_cobr ( ie_tipo_cobranca_p text, nm_usuario_p text) FROM PUBLIC;

