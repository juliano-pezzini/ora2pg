-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_oc_cta_tratar_val_84 ( dados_regra_p pls_tipos_ocor_pck.dados_regra, nr_id_transacao_p pls_oc_cta_selecao_ocor_v.nr_id_transacao%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:  Validar indicação de acidente.

Caso validação for:

C (Conta): Então busca o valor do campo ie_indicacao_acidente na pls_conta, onde valida se o mesmo
foi informado, gerando a ocorrência no caso de estar nulo e também no caso de o valor estar incorreto.

-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[ X]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
*/
dados_tb_sel_w			pls_tipos_ocor_pck.dados_table_selecao_ocor;
dados_tb_selecao_w		pls_tipos_ocor_pck.dados_table_selecao_ocor;
nr_idx_w			integer := 0;
ie_gera_w 			varchar(1);
ie_validou_pela_conta_w		varchar(1);

-- Informações da validação guia principal autorização
C01 CURSOR(	nr_seq_oc_cta_comb_p	dados_regra_p.nr_sequencia%type) FOR
	SELECT	ie_valida_ind_acidente
	from	pls_oc_cta_val_acid a
	where	a.nr_seq_oc_cta_comb	= nr_seq_oc_cta_comb_p;

C02 CURSOR(	nr_id_transacao_pc	pls_oc_cta_selecao_ocor_v.nr_id_transacao%type) FOR
	SELECT	sel.nr_sequencia nr_seq_selecao,
		conta.ie_indicacao_acidente 	ie_indicacao_acidente,
		conta.ie_indicacao_acidente_imp ie_indicacao_acidente_imp,
		diag.ie_indicacao_acidente 	ie_indicacao_acidente_diag,
		diag.ie_indicacao_acidente_imp 	ie_indicacao_acidente_diag_imp
	FROM pls_oc_cta_selecao_ocor_v sel, pls_conta conta
LEFT OUTER JOIN pls_diagnostico_conta diag ON (conta.nr_sequencia = diag.nr_seq_conta)
WHERE sel.nr_id_transacao	= nr_id_transacao_pc and sel.ie_valido		= 'S' and conta.nr_sequencia	= sel.nr_seq_conta;
BEGIN

-- Deve existir informação da regra para aplicar a validação
if (dados_regra_p.nr_sequencia IS NOT NULL AND dados_regra_p.nr_sequencia::text <> '') then

	for	r_C01_w in C01(dados_regra_p.nr_sequencia) loop

		CALL pls_tipos_ocor_pck.atualiza_campo_auxiliar('V', nr_id_transacao_p, null, dados_regra_p);
		pls_tipos_ocor_pck.limpar_nested_tables(dados_tb_sel_w);

		for r_C02_w in C02(nr_id_transacao_p) loop

			--Validar informações da conta. Verificar se possui valores permitidos pelo TISS 0,1,2,9
			if (r_C01_w.ie_valida_ind_acidente = 'C') then

				if (dados_regra_p.ie_evento = 'IMP') then

					if (r_C02_w.ie_indicacao_acidente_imp is  null or r_C02_w.ie_indicacao_acidente_imp not in ('0','1','2','9')) then

						dados_tb_selecao_w.ie_valido(nr_idx_w)		:= 'S';
						dados_tb_selecao_w.nr_seq_selecao(nr_idx_w)	:= r_C02_w.nr_seq_selecao;
						dados_tb_selecao_w.ds_observacao(nr_idx_w)	:= 'Valor inválido para indicação acidente: '||coalesce(r_C02_w.ie_indicacao_acidente_imp,'nulo');

						if (nr_idx_w = pls_util_cta_pck.qt_registro_transacao_w) then
							CALL pls_tipos_ocor_pck.gerencia_selecao_validacao(	dados_tb_selecao_w.nr_seq_selecao, pls_util_cta_pck.clob_table_vazia_w,
													'SEQ', dados_tb_selecao_w.ds_observacao, dados_tb_selecao_w.ie_valido, nm_usuario_p);
							nr_idx_w := 0;
							pls_tipos_ocor_pck.limpar_nested_tables(dados_tb_selecao_w);
						else
							nr_idx_w := nr_idx_w + 1;
						end if;
					end if;
				else

					if (coalesce(r_C02_w.ie_indicacao_acidente::text, '') = '' or r_C02_w.ie_indicacao_acidente not in ('0','1','2','9')) then

						dados_tb_selecao_w.ie_valido(nr_idx_w)		:= 'S';
						dados_tb_selecao_w.nr_seq_selecao(nr_idx_w)	:= r_C02_w.nr_seq_selecao;
						dados_tb_selecao_w.ds_observacao(nr_idx_w)	:= 'Valor inválido para indicação acidente : '||coalesce(r_C02_w.ie_indicacao_acidente,'nulo');

						if (nr_idx_w = pls_util_cta_pck.qt_registro_transacao_w) then
							CALL pls_tipos_ocor_pck.gerencia_selecao_validacao(	dados_tb_selecao_w.nr_seq_selecao, pls_util_cta_pck.clob_table_vazia_w,
													'SEQ', dados_tb_selecao_w.ds_observacao, dados_tb_selecao_w.ie_valido, nm_usuario_p);
							nr_idx_w := 0;
							pls_tipos_ocor_pck.limpar_nested_tables(dados_tb_selecao_w);
						else
							nr_idx_w := nr_idx_w + 1;
						end if;
					end if;

				end if;

			end if;

			--Valida conta e diagnostico. Gera ocorrência quando o valor estiver fora do aceitável tanto na conta , quanto no pls_diagnostico conta ou ainda quando um dos dois estiver nulo.
			if (r_C01_w.ie_valida_ind_acidente = 'CD') then

				if (dados_regra_p.ie_evento = 'IMP') then

					if	((coalesce(r_C02_w.ie_indicacao_acidente_imp::text, '') = '' or r_C02_w.ie_indicacao_acidente_imp not in ('0','1','2','9')) or (coalesce(r_C02_w.ie_indicacao_acidente_diag_imp::text, '') = '' or r_C02_w.ie_indicacao_acidente_diag_imp  not in ('0','1','2','9'))) then

						dados_tb_selecao_w.ie_valido(nr_idx_w)		:= 'S';
						dados_tb_selecao_w.nr_seq_selecao(nr_idx_w)	:= r_C02_w.nr_seq_selecao;
						dados_tb_selecao_w.ds_observacao(nr_idx_w)	:= 'Valor inválido para a indicação de acidente. Na conta o valor encontrato foi  '||coalesce(r_C02_w.ie_indicacao_acidente_imp,'nulo')||
												   ' e na diagnóstico conta o valor encontrado para o campo foi '||coalesce(r_C02_w.ie_indicacao_acidente_diag_imp,'nulo');

						if (nr_idx_w = pls_util_cta_pck.qt_registro_transacao_w) then
							CALL pls_tipos_ocor_pck.gerencia_selecao_validacao(	dados_tb_selecao_w.nr_seq_selecao, pls_util_cta_pck.clob_table_vazia_w,
													'SEQ', dados_tb_selecao_w.ds_observacao, dados_tb_selecao_w.ie_valido, nm_usuario_p);
							nr_idx_w := 0;
							pls_tipos_ocor_pck.limpar_nested_tables(dados_tb_selecao_w);
						else
							nr_idx_w := nr_idx_w + 1;
						end if;
					end if;
				else

					--Para essa validação, somente é válido se contiver valor válido na pls_conta e na pls_conta_diagnostico
					if	((coalesce(r_C02_w.ie_indicacao_acidente::text, '') = '' or r_C02_w.ie_indicacao_acidente not in ('0','1','2','9')) or (coalesce(r_C02_w.ie_indicacao_acidente_diag::text, '') = '' or r_C02_w.ie_indicacao_acidente_diag not in ('0','1','2','9')))then

						dados_tb_selecao_w.ie_valido(nr_idx_w)		:= 'S';
						dados_tb_selecao_w.nr_seq_selecao(nr_idx_w)	:= r_C02_w.nr_seq_selecao;
						dados_tb_selecao_w.ds_observacao(nr_idx_w)	:= 'Valor inválido para a indicação de acidente. Na conta o valor encontrato foi  '||coalesce(r_C02_w.ie_indicacao_acidente,'nulo')||
												   ' e na diagnóstico conta o valor encontrado para o campo foi '||coalesce(r_C02_w.ie_indicacao_acidente_diag,'nulo');

						if (nr_idx_w = pls_util_cta_pck.qt_registro_transacao_w) then
							CALL pls_tipos_ocor_pck.gerencia_selecao_validacao(	dados_tb_selecao_w.nr_seq_selecao, pls_util_cta_pck.clob_table_vazia_w,
													'SEQ', dados_tb_selecao_w.ds_observacao, dados_tb_selecao_w.ie_valido, nm_usuario_p);
							nr_idx_w := 0;
							pls_tipos_ocor_pck.limpar_nested_tables(dados_tb_selecao_w);
						else
							nr_idx_w := nr_idx_w + 1;
						end if;
					end if;

				end if;

			end if;

			--Somente olha na pls_diagnostico_conta
			if (r_C01_w.ie_valida_ind_acidente = 'D') then

				if (dados_regra_p.ie_evento = 'IMP') then

					if (coalesce(r_C02_w.ie_indicacao_acidente_diag_imp::text, '') = '' or r_C02_w.ie_indicacao_acidente_diag_imp not in ('0','1','2','9')) then

						dados_tb_selecao_w.ie_valido(nr_idx_w)		:= 'S';
						dados_tb_selecao_w.nr_seq_selecao(nr_idx_w)	:= r_C02_w.nr_seq_selecao;
						dados_tb_selecao_w.ds_observacao(nr_idx_w)	:= 'Valor inválido para a indicação de acidente: '||coalesce(r_C02_w.ie_indicacao_acidente_diag_imp,'nulo');

						if (nr_idx_w = pls_util_cta_pck.qt_registro_transacao_w) then
							CALL pls_tipos_ocor_pck.gerencia_selecao_validacao(	dados_tb_selecao_w.nr_seq_selecao, pls_util_cta_pck.clob_table_vazia_w,
													'SEQ', dados_tb_selecao_w.ds_observacao, dados_tb_selecao_w.ie_valido, nm_usuario_p);
							nr_idx_w := 0;
							pls_tipos_ocor_pck.limpar_nested_tables(dados_tb_selecao_w);
						else
							nr_idx_w := nr_idx_w + 1;
						end if;
					end if;

				else
					if (coalesce(r_C02_w.ie_indicacao_acidente_diag::text, '') = '' or r_C02_w.ie_indicacao_acidente_diag not in ('0','1','2','9')) then

						dados_tb_selecao_w.ie_valido(nr_idx_w)		:= 'S';
						dados_tb_selecao_w.nr_seq_selecao(nr_idx_w)	:= r_C02_w.nr_seq_selecao;
						dados_tb_selecao_w.ds_observacao(nr_idx_w)	:= 'Valor inválido para a indicação de acidente: '||coalesce(r_C02_w.ie_indicacao_acidente_diag,'nulo');


						if (nr_idx_w = pls_util_cta_pck.qt_registro_transacao_w) then
							CALL pls_tipos_ocor_pck.gerencia_selecao_validacao(	dados_tb_selecao_w.nr_seq_selecao, pls_util_cta_pck.clob_table_vazia_w,
													'SEQ', dados_tb_selecao_w.ds_observacao, dados_tb_selecao_w.ie_valido, nm_usuario_p);
							nr_idx_w := 0;
							pls_tipos_ocor_pck.limpar_nested_tables(dados_tb_selecao_w);
						else
							nr_idx_w := nr_idx_w + 1;
						end if;
					end if;
				end if;

			end if;

			--Valida inicialmente se a pls_diagnostico_conta possui valor, caso não houver registro na tabela ou o valor do campo na mesma for nulo,
			--então faz a validação na pls_conta e caso sim, então verifica se o valor na pls_diagnostico_conta é válido
			if (r_C01_w.ie_valida_ind_acidente = 'SD') then

				ie_gera_w := 'N';
				ie_validou_pela_conta_w	:= 'N';

				if (dados_regra_p.ie_evento = 'IMP') then

					if (coalesce(r_C02_w.ie_indicacao_acidente_diag_imp::text, '') = '') then

						if (coalesce(r_C02_w.ie_indicacao_acidente_imp::text, '') = '' or r_C02_w.ie_indicacao_acidente_imp not in ('0','1','2','9')) then

							 ie_gera_w := 'S';
							 ie_validou_pela_conta_w := 'S';
						end if;

					else
						if (r_C02_w.ie_indicacao_acidente_diag_imp not in ('0','1','2','9')) then
							ie_gera_w := 'S';
						end if;

					end if;

					if (ie_gera_w = 'S') then

						dados_tb_selecao_w.ie_valido(nr_idx_w)		:= 'S';
						dados_tb_selecao_w.nr_seq_selecao(nr_idx_w)	:= r_C02_w.nr_seq_selecao;

						--Para exibir o valor da indicação de acidente correta na observação da ocorrência
						if (ie_validou_pela_conta_w = 'S') then
							dados_tb_selecao_w.ds_observacao(nr_idx_w)	:= 'Valor inválido para a indicação de acidente. Na conta o valor encontrato foi  '||coalesce(r_C02_w.ie_indicacao_acidente_imp,'nulo');
						else
							dados_tb_selecao_w.ds_observacao(nr_idx_w)	:= 'Valor inválido para a indicação de acidente. Na tabela pls_diagnostico_conta o valor encontrato foi  '||coalesce(r_C02_w.ie_indicacao_acidente_diag_imp,'nulo');
						end if;

						if (nr_idx_w = pls_util_cta_pck.qt_registro_transacao_w) then
							CALL pls_tipos_ocor_pck.gerencia_selecao_validacao(	dados_tb_selecao_w.nr_seq_selecao, pls_util_cta_pck.clob_table_vazia_w,
													'SEQ', dados_tb_selecao_w.ds_observacao, dados_tb_selecao_w.ie_valido, nm_usuario_p);
							nr_idx_w := 0;
							pls_tipos_ocor_pck.limpar_nested_tables(dados_tb_selecao_w);
						else
							nr_idx_w := nr_idx_w + 1;
						end if;
					end if;
				else

					if (coalesce(r_C02_w.ie_indicacao_acidente_diag::text, '') = '') then

						if (coalesce(r_C02_w.ie_indicacao_acidente::text, '') = '' or r_C02_w.ie_indicacao_acidente not in ('0','1','2','9')) then

							 ie_gera_w := 'S';
							 ie_validou_pela_conta_w := 'S';
						end if;

					else
						if (r_C02_w.ie_indicacao_acidente_diag not in ('0','1','2','9')) then
							ie_gera_w := 'S';
						end if;

					end if;


					if (ie_gera_w = 'S') then

						dados_tb_selecao_w.ie_valido(nr_idx_w)		:= 'S';
						dados_tb_selecao_w.nr_seq_selecao(nr_idx_w)	:= r_C02_w.nr_seq_selecao;

						--Para exibir o valor da indicação de acidente correta na observação da ocorrência
						if (ie_validou_pela_conta_w = 'S') then
							dados_tb_selecao_w.ds_observacao(nr_idx_w)	:= 'Valor inválido para a indicação de acidente. Na conta o valor encontrato foi  '||coalesce(r_C02_w.ie_indicacao_acidente,'nulo');
						else
							dados_tb_selecao_w.ds_observacao(nr_idx_w)	:=  'Valor inválido para a indicação de acidente. Na tabela pls_diagnostico_conta o valor encontrato foi  '||coalesce(r_C02_w.ie_indicacao_acidente_diag,'nulo');
						end if;

						if (nr_idx_w = pls_util_cta_pck.qt_registro_transacao_w) then
							CALL pls_tipos_ocor_pck.gerencia_selecao_validacao(	dados_tb_selecao_w.nr_seq_selecao, pls_util_cta_pck.clob_table_vazia_w,
													'SEQ', dados_tb_selecao_w.ds_observacao, dados_tb_selecao_w.ie_valido, nm_usuario_p);
							nr_idx_w := 0;
							pls_tipos_ocor_pck.limpar_nested_tables(dados_tb_selecao_w);
						else
							nr_idx_w := nr_idx_w + 1;
						end if;
					end if;

				end if;

			end if;

			/*Lança as glosas caso existir registros que não foram gerados*/

			if (nr_idx_w > 0)	then
				CALL pls_tipos_ocor_pck.gerencia_selecao_validacao(	dados_tb_selecao_w.nr_seq_selecao, pls_util_cta_pck.clob_table_vazia_w,
										'SEQ', dados_tb_selecao_w.ds_observacao, dados_tb_selecao_w.ie_valido, nm_usuario_p);
			end if;

		end loop;

		CALL pls_tipos_ocor_pck.atualiza_campo_valido('V', nr_id_transacao_p, null, dados_regra_p);

	end loop;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_oc_cta_tratar_val_84 ( dados_regra_p pls_tipos_ocor_pck.dados_regra, nr_id_transacao_p pls_oc_cta_selecao_ocor_v.nr_id_transacao%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;

