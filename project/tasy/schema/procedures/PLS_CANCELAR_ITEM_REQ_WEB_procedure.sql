-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_cancelar_item_req_web ( nr_seq_item_p bigint, ie_tipo_item_p text, nr_seq_motivo_p bigint, nr_seq_prestador_web_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, ds_retorno_p INOUT text) AS $body$
DECLARE


/*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:   Cancelar o item da requisição no portal web
----------------------------------------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[  ]  Objetos do dicionário [ x ] Tasy (Delphi/Java) [ x ] Portal [  ] Relatórios [ ] Outros:
 ----------------------------------------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/nr_seq_prestador_web_w		bigint;
nr_seq_requisicao_w		bigint;
qt_reg_proc_aud_w		bigint;
qt_reg_mat_aud_w		bigint;
qt_reg_proc_w			bigint;
qt_reg_mat_w			bigint;
qt_reg_aud_w			bigint;
ie_cancel_req_local_atend_w	pls_web_param_geral.ie_cancel_req_local_atend%type	:= 'N';
nr_seq_local_prest_req_w	pls_usuario_web.nr_seq_local_atend%type;
nr_seq_local_prest_portal_w	pls_usuario_web.nr_seq_local_atend%type;
ie_validade_vencida_w		pls_regra_cancel_aut_req.ie_validade_vencida%type;
ie_requisicao_intercambio_w	pls_regra_cancel_aut_req.ie_requisicao_intercambio%type;
ie_cancela_item_w		varchar(2) 	:= 'N';
ds_retorno_w			varchar(255) 	:= '';
ie_tipo_processo_w		pls_requisicao.ie_tipo_processo%type;
dt_validade_senha_w		pls_requisicao.dt_validade_senha%type;
nr_seq_perfil_web_w		pls_usuario_web.nr_seq_perfil_web%type;
nr_seq_auditoria_w		pls_auditoria.nr_sequencia%type;

C01 CURSOR FOR
	SELECT	ie_validade_vencida,
		ie_requisicao_intercambio
	from	(
		SELECT	coalesce(ie_validade_vencida,'N') ie_validade_vencida,
			coalesce(ie_requisicao_intercambio,'N') ie_requisicao_intercambio,
			nr_sequencia,
			nr_seq_perfil_web
		from	pls_regra_cancel_aut_req
		where	ie_situacao	= 'A'
		and	ie_aplicacao_regra	= 1
		and	((nr_seq_usuario_web	= nr_seq_prestador_web_w and  coalesce(nr_seq_perfil_web::text, '') = '')
		or (coalesce(nr_seq_usuario_web::text, '') = '' and nr_seq_perfil_web = nr_seq_perfil_web_w))
		and	((cd_estabelecimento = cd_estabelecimento_p) and (pls_obter_se_controle_estab('RE') = 'S'))
		
union all

		select	coalesce(ie_validade_vencida,'N') ie_validade_vencida,
			coalesce(ie_requisicao_intercambio,'N') ie_requisicao_intercambio,
			nr_sequencia,
			nr_seq_perfil_web
		from	pls_regra_cancel_aut_req
		where	ie_situacao	= 'A'
		and	ie_aplicacao_regra	= 1
		and	((nr_seq_usuario_web = nr_seq_prestador_web_w and  coalesce(nr_seq_perfil_web::text, '') = '')
		or (coalesce(nr_seq_usuario_web::text, '') = '' and nr_seq_perfil_web = nr_seq_perfil_web_w))
		and (pls_obter_se_controle_estab('RE') = 'N')) alias20
	order by nr_sequencia,
		nr_seq_perfil_web;



BEGIN

-- Obter o local de atendimento do prestador do portal
begin
	select	nr_seq_local_atend,
		nr_seq_perfil_web
	into STRICT	nr_seq_local_prest_portal_w,
		nr_seq_perfil_web_w
	from	pls_usuario_web
	where	nr_sequencia	= nr_seq_prestador_web_p;
exception
when others then
	nr_seq_local_prest_portal_w	:= null;
end;

begin
	select	coalesce(ie_cancel_req_local_atend,'N')
	into STRICT	ie_cancel_req_local_atend_w
	from	pls_web_param_geral
	where	cd_estabelecimento	= cd_estabelecimento_p;
exception
when others then
	ie_cancel_req_local_atend_w	:= 'N';
end;

if (ie_tipo_item_p = 'P') then
	select	coalesce(a.nr_seq_prestador_web, 0),
		coalesce(a.nr_sequencia, 0),
		ie_tipo_processo,
		dt_validade_senha
	into STRICT	nr_seq_prestador_web_w,
		nr_seq_requisicao_w,
		ie_tipo_processo_w,
		dt_validade_senha_w
	from	pls_requisicao a,
		pls_requisicao_proc b
	where	a.nr_sequencia = b.nr_seq_requisicao
	and	b.nr_sequencia = nr_seq_item_p;

elsif (ie_tipo_item_p = 'M') then
	select	coalesce(a.nr_seq_prestador_web, 0),
		coalesce(a.nr_sequencia, 0),
		ie_tipo_processo,
		dt_validade_senha
	into STRICT	nr_seq_prestador_web_w,
		nr_seq_requisicao_w,
		ie_tipo_processo_w,
		dt_validade_senha_w
	from	pls_requisicao a,
		pls_requisicao_mat b
	where	a.nr_sequencia = b.nr_seq_requisicao
	and	b.nr_sequencia = nr_seq_item_p;
end if;

begin
	-- Obter o local de atendimento do prestador da requisição
	select	nr_seq_local_atend
	into STRICT	nr_seq_local_prest_req_w
	from	pls_usuario_web
	where	nr_sequencia	= nr_seq_prestador_web_w;
exception
when others then
	nr_seq_local_prest_req_w	:= null;
end;

if (nr_seq_prestador_web_w		= nr_seq_prestador_web_p) or
	((nr_seq_prestador_web_w 	<> nr_seq_prestador_web_p) and (ie_cancel_req_local_atend_w	= 'S') and (nr_seq_local_prest_req_w	= nr_seq_local_prest_portal_w))	then

	open C01;
	loop
	fetch C01 into
		ie_validade_vencida_w,
		ie_requisicao_intercambio_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
	end loop;
	close C01;

	if (ie_validade_vencida_w	= 'N') and (dt_validade_senha_w	< clock_timestamp()) then
		ds_retorno_w	:= 'Não é permitido cancelar uma requisição com data de validade vencida! ';
	elsif (ie_validade_vencida_w IS NOT NULL AND ie_validade_vencida_w::text <> '') then
		ie_cancela_item_w := 'S';
	end if;
else
	ds_retorno_w	:= 'Usuário logado diferente do usuário requisitante!';
end if;

if (ie_cancela_item_w = 'S') then
	if (ie_tipo_item_p = 'P') then
		update	pls_requisicao_proc
		set	ie_status		= 'C',
			ie_estagio		= 'N',
			dt_atualizacao		= clock_timestamp(),
			nm_usuario		= nm_usuario_p,
			nr_seq_motivo_cancel	= nr_seq_motivo_p
		where	nr_sequencia		= nr_seq_item_p;
		--colocar motivo cancelamento
		select	count(1)
		into STRICT	qt_reg_proc_aud_w
		from	pls_auditoria		b,
			pls_auditoria_item	a
		where	a.nr_seq_proc_origem	= nr_seq_item_p
		and	a.nr_seq_auditoria	= b.nr_sequencia
		and	b.ie_status		not in ('F', 'C');

		if (qt_reg_proc_aud_w	> 0) then
			update	pls_auditoria_item
			set	ie_status		= 'C',
				ie_status_solicitacao	= 'C',
				dt_atualizacao		= clock_timestamp(),
				nm_usuario		= nm_usuario_p
			where	nr_seq_proc_origem	= nr_seq_item_p;
		end if;

		if  ((nr_seq_prestador_web_w 		<> nr_seq_prestador_web_p) and (ie_cancel_req_local_atend_w	= 'S') and (nr_seq_local_prest_req_w		= nr_seq_local_prest_portal_w))	then

			CALL pls_requisicao_gravar_hist(nr_seq_requisicao_w, 'L', 'Procedimento solicitado pelo usuário '||nr_seq_prestador_web_w||
					' - '||substr(pls_obter_nm_usuario_web(nr_seq_prestador_web_w),1,255)||' foi cancelada pelo usuário '||nr_seq_prestador_web_p||
					' - '||substr(pls_obter_nm_usuario_web(nr_seq_prestador_web_p),1,255)||', em '||to_char(clock_timestamp(), 'dd/mm/yyyy hh24:mi:ss')||'.', '', nm_usuario_p);
		else
			CALL pls_requisicao_gravar_hist(nr_seq_requisicao_w, 'L', 'Procedimento cancelado no portal web pelo usuário '||nr_seq_prestador_web_p
						   ||' - '||substr(pls_obter_nm_usuario_web(nr_seq_prestador_web_p),1,255)||', em '||
						   to_char(clock_timestamp(), 'dd/mm/yyyy hh24:mi:ss')||'.', '', nm_usuario_p);
		end if;
	elsif (ie_tipo_item_p = 'M') then
		update	pls_requisicao_mat
		set	ie_status		= 'C',
			ie_estagio		= 'N',
			dt_atualizacao		= clock_timestamp(),
			nm_usuario		= nm_usuario_p,
			nr_seq_motivo_cancel	= nr_seq_motivo_p
		where	nr_sequencia		= nr_seq_item_p;

		select	count(1)
		into STRICT	qt_reg_mat_aud_w
		from	pls_auditoria		b,
			pls_auditoria_item	a
		where	a.nr_seq_mat_origem	= nr_seq_item_p
		and	a.nr_seq_auditoria	= b.nr_sequencia
		and	b.ie_status		not in ('F', 'C');

		if (qt_reg_mat_aud_w	> 0) then
			update	pls_auditoria_item
			set	ie_status		= 'C',
				ie_status_solicitacao	= 'C',
				dt_atualizacao		= clock_timestamp(),
				nm_usuario		= nm_usuario_p
			where	nr_seq_mat_origem	= nr_seq_item_p;
		end if;

		if  ((nr_seq_prestador_web_w <> nr_seq_prestador_web_p) and (ie_cancel_req_local_atend_w	= 'S') and (nr_seq_local_prest_req_w	= nr_seq_local_prest_portal_w))	then

			CALL pls_requisicao_gravar_hist(nr_seq_requisicao_w, 'L', 'Material solicitado pelo usuário '||nr_seq_prestador_web_w||
					' - '||substr(pls_obter_nm_usuario_web(nr_seq_prestador_web_w),1,255)||' foi cancelada pelo usuário '||nr_seq_prestador_web_p||
					' - '||substr(pls_obter_nm_usuario_web(nr_seq_prestador_web_p),1,255)||', em '||to_char(clock_timestamp(), 'dd/mm/yyyy hh24:mi:ss')||'.', '', nm_usuario_p);
		else
			CALL pls_requisicao_gravar_hist(nr_seq_requisicao_w, 'L', 'Material cancelado no portal web pelo usuário '||nr_seq_prestador_web_w
						   ||' - '||substr(pls_obter_nm_usuario_web(nr_seq_prestador_web_w),1,255)||', em '||
						   to_char(clock_timestamp(), 'dd/mm/yyyy hh24:mi:ss')||'.', '', nm_usuario_p);
		end if;
	end if;

	begin
		select	nr_sequencia
		into STRICT	nr_seq_auditoria_w
		from	pls_auditoria
		where	nr_seq_requisicao	= nr_seq_requisicao_w
		and	ie_status		not in ('F', 'C');
	exception
	when others then
		nr_seq_auditoria_w	:= null;
	end;

	if (nr_seq_auditoria_w IS NOT NULL AND nr_seq_auditoria_w::text <> '') then
		select	count(1)
		into STRICT	qt_reg_proc_w
		from	pls_requisicao_proc
		where	nr_seq_requisicao	= nr_seq_requisicao_w
		and	ie_status		= 'A';

		select	count(1)
		into STRICT	qt_reg_mat_w
		from	pls_requisicao_mat
		where	nr_seq_requisicao	= nr_seq_requisicao_w
		and	ie_status		= 'A';

		if	((qt_reg_proc_w + qt_reg_mat_w)	= 0) then
			update	pls_auditoria_item
			set	ie_status		= 'C',
				dt_atualizacao		= clock_timestamp(),
				nm_usuario		= nm_usuario_p
			where	nr_seq_auditoria	= nr_seq_auditoria_w;

			update	pls_auditoria
			set	ie_status		= 'C',
				dt_liberacao		= clock_timestamp(),
				nr_seq_proc_interno	 = NULL,
				dt_atualizacao		= clock_timestamp(),
				nm_usuario		= nm_usuario_p
			where	nr_sequencia		= nr_seq_auditoria_w;

			CALL pls_atualiza_estagio_req(nr_seq_requisicao_w, nm_usuario_p);
		end if;
	end if;

	-- Se todos os itens da estiverem cancelados, deve cancelar a requisição
	select	count(1)
	into STRICT	qt_reg_proc_w
	from	pls_requisicao_proc
	where	nr_seq_requisicao	= nr_seq_requisicao_w
	and	ie_status		<> 'C';

	select	count(1)
	into STRICT	qt_reg_mat_w
	from	pls_requisicao_mat
	where	nr_seq_requisicao	= nr_seq_requisicao_w
	and	ie_status		<> 'C';

	if	((qt_reg_proc_w + qt_reg_mat_w)	= 0) then
		update	pls_requisicao
		set	ie_status		= 'C',
			ie_estagio		= 3,
			nr_seq_motivo_cancel	= nr_seq_motivo_p,
			dt_atualizacao		= clock_timestamp(),
			nm_usuario		= nm_usuario_p
		where	nr_sequencia		= nr_seq_requisicao_w;
	end if;
else
	if (coalesce(ds_retorno_w::text, '') = '' or ds_retorno_w = '') then
		ds_retorno_w	:= 'Usuário sem permissão para realizar o cancelamento!';
	end if;
end if;

ds_retorno_p	:= ds_retorno_w;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_cancelar_item_req_web ( nr_seq_item_p bigint, ie_tipo_item_p text, nr_seq_motivo_p bigint, nr_seq_prestador_web_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, ds_retorno_p INOUT text) FROM PUBLIC;

