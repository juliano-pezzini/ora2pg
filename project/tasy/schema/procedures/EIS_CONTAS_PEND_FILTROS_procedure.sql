-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE eis_contas_pend_filtros ( nm_filtro_p text, ds_valor_filtro_p text) AS $body$
BEGIN
if (upper(nm_filtro_p) = 'DT_INICIAL_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
	CALL eis_contas_pend_filtros_pck.set_dt_inicial(to_date( ds_valor_filtro_p,'dd/mm/yyyy hh24:mi:ss' ));
	else
	CALL eis_contas_pend_filtros_pck.set_dt_inicial(null);
	end if;
	end;
elsif (upper(nm_filtro_p) = 'DT_FINAL_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_dt_final(to_date( ds_valor_filtro_p,'dd/mm/yyyy hh24:mi:ss' ));
	else
		CALL eis_contas_pend_filtros_pck.set_dt_final(null);
	end if;
	end;
elsif (upper(nm_filtro_p) = 'IE_DATA_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'0') <> '0') then
		CALL eis_contas_pend_filtros_pck.set_ie_data( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_ie_data( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'IE_PAC_ALTA_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_ie_pac_alta( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_ie_pac_alta( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'IE_TITULO_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_ie_titulo( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_ie_titulo( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'IE_NOTA_FISCAL_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_ie_nota_fiscal( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_ie_nota_fiscal( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'IE_SETOR_ATUAL_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_ie_setor_atual( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_ie_setor_atual( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'IE_CONTAS_CANCELADAS_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_ie_contas_canceladas( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_ie_contas_canceladas( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'IE_GUIAS_CONTA_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_ie_guias_conta( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_ie_guias_conta( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'IE_DATA_ETAPA_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_ie_data_etapa( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_ie_data_etapa( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'IE_PAC_INTERNADO_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_ie_pac_internado( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_ie_pac_internado( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'IE_CONTA_FECHADA_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_ie_conta_fechada( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_ie_conta_fechada( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'IE_MAIORES_ZERO_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_ie_maiores_zero( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_ie_maiores_zero( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'IE_SETOR_PAC_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_ie_setor_pac( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_ie_setor_pac( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'IE_COM_AIH_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_ie_com_aih( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_ie_com_aih( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'IE_COM_APAC_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_ie_com_apac( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_ie_com_apac( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'IE_CONTA_SEM_ETAPA_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_ie_conta_sem_etapa( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_ie_conta_sem_etapa( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'IE_CONTA_ETAPA_PEND_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_ie_conta_etapa_pend( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_ie_conta_etapa_pend( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'IE_FILTRAR_ESTAB_CONTA_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_ie_filtrar_estab_conta( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_ie_filtrar_estab_conta( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'IE_RETORNOS_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_ie_retornos( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_ie_retornos( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'IE_CONTAS_PROTOCOLO_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_ie_contas_protocolo( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_ie_contas_protocolo( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'VL_INICIAL_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_vl_inicial((ds_valor_filtro_p )::numeric );
	else
		CALL eis_contas_pend_filtros_pck.set_vl_inicial(null);
	end if;
	end;
elsif (upper(nm_filtro_p) = 'VL_FINAL_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_vl_final((ds_valor_filtro_p )::numeric );
	else
		CALL eis_contas_pend_filtros_pck.set_vl_final(null);
	end if;
	end;
elsif (upper(nm_filtro_p) = 'CD_CONVENIOS_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_cd_convenios( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_cd_convenios( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'CD_CATEGORIAS_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_cd_categorias( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_cd_categorias( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'IE_TIPOS_ATENDIMENTO_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_ie_tipos_atendimento( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_ie_tipos_atendimento( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'IE_TIPOS_CONVENIO_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_ie_tipos_convenio( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_ie_tipos_convenio( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'IE_STATUS_CONTA_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_ie_status_conta( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_ie_status_conta( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'CD_ETAPAS_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_cd_etapas( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_cd_etapas( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'CD_MEDICOS_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_cd_medicos( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_cd_medicos( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'CD_SETORES_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_cd_setores( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_cd_setores( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'IE_LANC_SETOR_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_ie_lanc_setor( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_ie_lanc_setor( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'IE_FILTRAR_ESTAB_ATEND_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_ie_filtrar_estab_atend( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_ie_filtrar_estab_atend( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'CD_SETORES_ETAPA_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_cd_setores_etapa( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_cd_setores_etapa( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'CD_PESSOAS_ETAPA_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_cd_pessoas_etapa( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_cd_pessoas_etapa( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'IE_VALOR_CONTA_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_ie_valor_conta( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_ie_valor_conta( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'IE_VALOR_CONTA_SUS_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_ie_valor_conta_sus( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_ie_valor_conta_sus( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'IE_CLINICAS_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_ie_clinicas( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_ie_clinicas( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'CD_PROCEDIMENTO_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_cd_procedimento( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_cd_procedimento( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'CD_GRUPO_PROC_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_cd_grupo_proc( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_cd_grupo_proc( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'CD_AREA_PROCEDIMENTO_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_cd_area_procedimento( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_cd_area_procedimento( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'CD_ESPECIALIDADE_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_cd_especialidade( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_cd_especialidade( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'CD_PLANOS_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_cd_planos( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_cd_planos( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'IE_COMPLEXIDADE_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_ie_complexidade( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_ie_complexidade( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'CD_SETORES_ULT_INT_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_cd_setores_ult_int( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_cd_setores_ult_int( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'CD_MOTIVOS_DEVOL_ETAPA_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_cd_motivos_devol_etapa( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_cd_motivos_devol_etapa( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'CD_TIPOS_PROCEDIMENTO_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_cd_tipos_procedimento( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_cd_tipos_procedimento( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'IE_STATUS_PROTOCOLO_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_ie_status_protocolo( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_ie_status_protocolo( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'CD_MUNICIPIO_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_cd_municipio( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_cd_municipio( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'CD_CLASSIF_SETOR_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_cd_classif_setor( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_cd_classif_setor( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'CD_PROCEDENCIA_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_cd_procedencia( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_cd_procedencia( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'NM_USUARIO_ETAPA_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_nm_usuario_etapa( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_nm_usuario_etapa( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'CD_SETOR_VALOR_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_cd_setor_valor( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_cd_setor_valor( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'CD_ESTAB_CONTA_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_cd_estab_conta( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_cd_estab_conta( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'CD_ESTAB_ATEND_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_cd_estab_atend( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_cd_estab_atend( null );
	end if;
	end;	
elsif (upper(nm_filtro_p) = 'IE_CONTA_SEM_PROCED_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_ie_conta_sem_proced( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_ie_conta_sem_proced( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'CD_RESPONSAVEL_CONTA_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_cd_responsavel_conta( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_cd_responsavel_conta( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'IE_TIPOS_ATEND_CONTA_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_ie_tipos_atend_conta( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_ie_tipos_atend_conta( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'IE_TIPO_GUIA_CONV_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_ie_tipo_guia_conv( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_ie_tipo_guia_conv( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'CD_MOTIVO_ALTA_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_cd_motivo_alta( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_cd_motivo_alta( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'IE_TIPO_PROTOCOLO_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_ie_tipo_protocolo( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_ie_tipo_protocolo( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'CD_SETOR_DESTINO_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_cd_setor_destino( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_cd_setor_destino( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'NR_SEQ_ESTAGIO_AUT_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_nr_seq_estagio_aut( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_nr_seq_estagio_aut( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'NR_SEQ_ESTAGIO_CONTA_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_nr_seq_estagio_conta( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_nr_seq_estagio_conta( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'NR_SEQ_GRUPO_SUS_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_nr_seq_grupo_sus( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_nr_seq_grupo_sus( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'NR_SEQ_SUBGRUPO_SUS_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_nr_seq_subgrupo_sus( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_nr_seq_subgrupo_sus( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'NR_SEQ_FORMA_ORG_SUS_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_nr_seq_forma_org_sus( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_nr_seq_forma_org_sus( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'CD_SETOR_ENTREGA_PRESCR_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_cd_setor_entrega_prescr(ds_valor_filtro_p);
	else
		CALL eis_contas_pend_filtros_pck.set_cd_setor_entrega_prescr(ds_valor_filtro_p );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'CD_TIPO_REGULACAO_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_cd_tipo_regulacao( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_cd_tipo_regulacao( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'CD_TIPO_SERV_REGULACAO_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_cd_tipo_serv_regulacao( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_cd_tipo_serv_regulacao( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'QT_DIAS_ETAPA_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_qt_dias_etapa((ds_valor_filtro_p )::numeric );
	else
		CALL eis_contas_pend_filtros_pck.set_qt_dias_etapa(null);
	end if;
	end;
elsif (upper(nm_filtro_p) = 'CD_TIPO_ACOMODACAO_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_cd_tipo_acomodacao( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_cd_tipo_acomodacao( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'IE_CONTA_PERDA_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_ie_conta_perda( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_ie_conta_perda( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'NR_SEQ_CLASSIF_ATEND_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_nr_seq_classif_atend( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_nr_seq_classif_atend( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'CD_SETOR_PRESCR_PROCED_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_cd_setor_prescr_proced( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_cd_setor_prescr_proced( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'NR_ATENDIMENTO_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_nr_atendimento((ds_valor_filtro_p )::numeric );
	else
		CALL eis_contas_pend_filtros_pck.set_nr_atendimento(null);
	end if;
	end;
elsif (upper(nm_filtro_p) = 'DT_REF_PROTOCOLO_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_dt_ref_protocolo(to_date( ds_valor_filtro_p));
	else
		CALL eis_contas_pend_filtros_pck.set_dt_ref_protocolo(to_date( null ));
	end if;
	end;
elsif (upper(nm_filtro_p) = 'IE_COD_SETORES_CONTA_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_ie_cod_setores_conta( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_ie_cod_setores_conta( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'NM_USUARIO_RECEP_ATEND_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_nm_usuario_recep_atend( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_nm_usuario_recep_atend( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'NR_SEQ_TIPO_LIB_GUIA_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_nr_seq_tipo_lib_guia( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_nr_seq_tipo_lib_guia( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'NM_USUARIO_RECEBIMENTO_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_nm_usuario_recebimento( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_nm_usuario_recebimento( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'IE_ULT_ETAPA_RECEB_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_ie_ult_etapa_receb( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_ie_ult_etapa_receb( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'QT_DIAS_ATRASO_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_qt_dias_atraso((ds_valor_filtro_p )::numeric );
	else
		CALL eis_contas_pend_filtros_pck.set_qt_dias_atraso(null);
	end if;
	end;
elsif (upper(nm_filtro_p) = 'CD_AGRUPAMENTO_SETOR_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_cd_agrupamento_setor( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_cd_agrupamento_setor( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'IE_CARATER_INTER_SUS_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_ie_carater_inter_sus( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_ie_carater_inter_sus( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'IE_LISTAR_PROCED_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_ie_listar_proced( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_ie_listar_proced( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'IE_SITUACAO_TITULO_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_ie_situacao_titulo( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_ie_situacao_titulo( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'IE_ETAPA_CONTA_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_ie_etapa_conta( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_ie_etapa_conta( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'IE_CONTA_SEM_MATMED_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_ie_conta_sem_matmed( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_ie_conta_sem_matmed( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'IE_LAUDO_PACIENTE_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_ie_laudo_paciente( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_ie_laudo_paciente( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'NR_SEQ_PESSOA_CLASSIF_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_nr_seq_pessoa_classif( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_nr_seq_pessoa_classif( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'IE_ATEND_CANCEL_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_ie_atend_cancel( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_ie_atend_cancel( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'CD_SETOR_INICIAL_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_cd_setor_inicial( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_cd_setor_inicial( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'IE_PROTOCOLO_DOC_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_ie_protocolo_doc( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_ie_protocolo_doc( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'CD_SETOR_PRONTUARIO_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_cd_setor_prontuario( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_cd_setor_prontuario( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'IE_CONTA_OPME_SUS_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_ie_conta_opme_sus( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_ie_conta_opme_sus( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'IE_CONTA_OPME_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_ie_conta_opme( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_ie_conta_opme( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'NR_SEQ_TP_PEND_CONTA_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_nr_seq_tp_pend_conta( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_nr_seq_tp_pend_conta( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'NR_SEQ_PROTOCOLO_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_nr_seq_protocolo((ds_valor_filtro_p )::numeric );
	else
		CALL eis_contas_pend_filtros_pck.set_nr_seq_protocolo(null);
	end if;
	end;
elsif (upper(nm_filtro_p) = 'NR_SEQ_ESTAG_CONTA_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_nr_seq_estag_conta( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_nr_seq_estag_conta( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'NM_USU_ULT_ETAPA_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_nm_usu_ult_etapa( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_nm_usu_ult_etapa( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'IE_VISUAL_EMPRESA_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_ie_visual_empresa( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_ie_visual_empresa( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'NR_SEQ_CLASSIF_ETAPA_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_nr_seq_classif_etapa( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_nr_seq_classif_etapa( null );
	end if;
	end;
	elsif (upper(nm_filtro_p) = 'QT_DIAS_VENC_ATEND_MIN_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_qt_dias_venc_atend_min((ds_valor_filtro_p )::numeric );
	else
		CALL eis_contas_pend_filtros_pck.set_qt_dias_venc_atend_min(null);
	end if;
	end;
elsif (upper(nm_filtro_p) = 'QT_DIAS_VENC_ATEND_MAX_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_qt_dias_venc_atend_max((ds_valor_filtro_p )::numeric );
	else
		CALL eis_contas_pend_filtros_pck.set_qt_dias_venc_atend_max(null);
	end if;
	end;
elsif (upper(nm_filtro_p) = 'CD_ESPECIAL_ATEND_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_cd_especial_med_atend( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_cd_especial_med_atend(null);
	end if;
	end;
	
elsif (upper(nm_filtro_p) = 'CD_CNPJ_OPME_P') then
	begin
	
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_cd_cnpj_opme( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_cd_cnpj_opme(null);
	end if;
	end;
elsif (upper(nm_filtro_p) = 'CD_CLASSIF_CONVENIO_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_cd_classif_convenio( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_cd_classif_convenio( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'NR_PROC_INTERNO_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_nr_proc_interno( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_nr_proc_interno( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'IE_PENULTIMA_ETAPA_CB') then /* ---------------------------------------      RF1      --------------------------------------- */
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_ie_penultima_etapa( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_ie_penultima_etapa( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'IE_PENDENCIA_CONTA_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_ie_pendencia_conta( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_ie_pendencia_conta( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'IE_LAUDOS_LIBERADOS_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_ie_laudos_liberados( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_ie_laudos_liberados( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'CD_MED_ESPEC_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_cd_med_espec( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_cd_med_espec( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'NR_SEQ_TIPO_ADMISSAO_FAT_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_nr_seq_tipo_admissao_fat( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_nr_seq_tipo_admissao_fat( null );
	end if;
	end;
elsif (upper(nm_filtro_p) = 'NR_SEQ_CLASSIFICACAO_P') then
	begin
	if (coalesce(ds_valor_filtro_p,'X') <> 'X') then
		CALL eis_contas_pend_filtros_pck.set_nr_seq_classificacao( ds_valor_filtro_p );
	else
		CALL eis_contas_pend_filtros_pck.set_nr_seq_classificacao( null );
	end if;
	end;
end if;


end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eis_contas_pend_filtros ( nm_filtro_p text, ds_valor_filtro_p text) FROM PUBLIC;

