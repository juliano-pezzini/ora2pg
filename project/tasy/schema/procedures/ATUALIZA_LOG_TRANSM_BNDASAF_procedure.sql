-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualiza_log_transm_bndasaf ( nr_sequencia_p bigint, ds_xml_p text) AS $body$
DECLARE

xml_base_w			        xml;	
nr_seq_documento_w		    intpd_fila_transmissao.nr_seq_documento%type;
nm_usuario_w			    transm_BNDASAF.nm_usuario%type;
ie_evento_w                 transm_BNDASAF.ie_evento%type;
ie_devolucao_consumo_w      bigint;
nr_mov_estoque_w            movimento_estoque.nr_movimento_estoque%type;
cd_material_w               movimento_estoque.cd_material%type;
qt_movimento_w              movimento_estoque.qt_movimento%type;
qt_movimento_ww             movimento_estoque.qt_movimento%type;
nr_atendimento_w            transm_BNDASAF.nr_atendimento%type;
reg_integracao_w            gerar_int_padrao.reg_integracao;
cd_estabelecimento_w        movimento_estoque.cd_estabelecimento%type;
cd_local_estoque_w          movimento_estoque.cd_local_estoque%type;
cd_centro_custo_w           movimento_estoque.cd_centro_custo%type;
cd_operacao_estoque_w       movimento_estoque.cd_operacao_estoque%type;
ie_origem_documento_w       movimento_estoque.ie_origem_documento%type;
cd_local_estoque_destino_w  movimento_estoque.cd_local_estoque_destino%type;
max_seq_w		            transm_BNDASAF.nr_sequencia%type;
ds_retorno_integracao_w		varchar(4000);

c01 CURSOR FOR
SELECT *
from 	xmltable(
	xmlnamespaces('http://schemas.xmlsoap.org/soap/envelope/' as "soap",
	'http://www.saude.gov.br/horus-ws/schemas/v1/HorusTypes' as "hor"),
	'soap:Envelope/soap:Body/hor:respostaSistema' passing xml_base_w COLUMNS
	nu_protocolo_entrada_w  	varchar(20) 	path 'nuProtocoloEntrada',
	nu_protocolo_retificado_w 	varchar(20) 	path 'nuProtocoloRetificado',
	nu_protocolo_exclusao_w	varchar(20) 	path 'nuProtocoloExclusao');

c01_w c01%rowtype;

BEGIN

xml_base_w := xmlparse(DOCUMENT, convert_from(, 'utf-8'));

open c01;
	fetch c01 into c01_w;
close c01;

update	intpd_fila_transmissao
set	ds_xml_retorno = ds_xml_p,
	ie_response_procedure = 'S'
where	nr_sequencia = nr_sequencia_p;

select	nr_seq_documento
into STRICT	nr_seq_documento_w
from	intpd_fila_transmissao
where	nr_sequencia = nr_sequencia_p;

nm_usuario_w := 'WEBSERVICE';

if (c01_w.nu_protocolo_retificado_w IS NOT NULL AND c01_w.nu_protocolo_retificado_w::text <> '') then
	update transm_BNDASAF
	set cd_registro_entrada = c01_w.nu_protocolo_retificado_w,
	    dt_atualizacao_nrec = clock_timestamp(),
	    nm_usuario_nrec = nm_usuario_w
	where cd_registro_origem = nr_seq_documento_w;
elsif (c01_w.nu_protocolo_exclusao_w IS NOT NULL AND c01_w.nu_protocolo_exclusao_w::text <> '') then
	update transm_BNDASAF
	set cd_registro_entrada = c01_w.nu_protocolo_exclusao_w,
	    dt_atualizacao_nrec = clock_timestamp(),
	    nm_usuario_nrec = nm_usuario_w
	where cd_registro_origem = nr_seq_documento_w;
else
	update transm_BNDASAF
	set cd_registro_entrada = c01_w.nu_protocolo_entrada_w,
	    dt_atualizacao_nrec = clock_timestamp(),
	    nm_usuario_nrec = nm_usuario_w
	where cd_registro_origem = nr_seq_documento_w;

    
        select   ie_evento,
                nr_atendimento,
                max(nr_sequencia)
        into STRICT    ie_evento_w,
                nr_atendimento_w,
                max_seq_w
        from    transm_BNDASAF
        where   cd_registro_origem = nr_seq_documento_w
        and     (nr_atendimento IS NOT NULL AND nr_atendimento::text <> '')
        group by ie_evento,
                 nr_atendimento;

    /*Verificar se movimento de entrada e dispensacao ou exclusao*/

    if (ie_evento_w = '393') then
    begin
        select  count(1)
        into STRICT 	ie_devolucao_consumo_w
        from 	movimento_estoque a,
            operacao_estoque b
        where a.nr_movimento_estoque = nr_seq_documento_w
        and b.ie_tipo_requisicao IN (3, 4)
        and a.cd_operacao_estoque = b.cd_operacao_estoque;

        if (ie_devolucao_consumo_w > 0) then
            begin
                select 
                    cd_material,
                    qt_movimento,
                    cd_estabelecimento,
                    cd_local_estoque,
                    cd_centro_custo,
                    cd_operacao_estoque,
                    ie_origem_documento,
                    cd_local_estoque_destino
                into STRICT cd_material_w,
                     qt_movimento_w,
                     cd_estabelecimento_w,
                     cd_local_estoque_w,
                     cd_centro_custo_w,
                     cd_operacao_estoque_w,
                     ie_origem_documento_w,
                     cd_local_estoque_destino_w
                from movimento_estoque 
                where nr_movimento_estoque = nr_seq_documento_w;	

                SELECT
                    max(b.nr_movimento_estoque)
                INTO STRICT nr_mov_estoque_w
                FROM transm_BNDASAF a,
                     movimento_estoque b
                WHERE a.nr_atendimento = b.nr_atendimento
                AND b.cd_material = cd_material_w
                AND b.qt_movimento <= qt_movimento_w
                AND b.nr_atendimento = nr_atendimento_w;

                SELECT
                    qt_movimento
                INTO STRICT qt_movimento_ww
                from movimento_estoque
                WHERE nr_movimento_estoque = nr_mov_estoque_w;

                reg_integracao_w.ie_operacao		:=	'I';
                reg_integracao_w.cd_estab_documento		:=	cd_estabelecimento_w;
                reg_integracao_w.cd_material			:=	cd_material_w;
                reg_integracao_w.ie_padronizado		:=	substr(obter_se_material_padronizado(cd_estabelecimento_w, cd_material_w),1,1);
                reg_integracao_w.cd_local_estoque		:=	cd_local_estoque_w;
                reg_integracao_w.cd_centro_custo		:=	cd_centro_custo_w;
                reg_integracao_w.cd_operacao_estoque	:=	cd_operacao_estoque_w;
                reg_integracao_w.ie_origem_documento		:=	ie_origem_documento_w;
                reg_integracao_w.cd_local_estoque_destino	:=	cd_local_estoque_destino_w;

                if (qt_movimento_w = qt_movimento_ww) then
                    reg_integracao_w := gerar_int_padrao.gravar_integracao('397', nr_mov_estoque_w, nm_usuario_w, reg_integracao_w);--exclusao
                    commit;
					
					select  bifrost.send_integration(
								'recordDeletion.send.request',
								'com.philips.tasy.integration.stock.outbound.RecordDeletionCallback',
								''||nr_mov_estoque_w||'',
								nm_usuario_w)
					into STRICT	ds_retorno_integracao_w
					;
                else
                    reg_integracao_w := gerar_int_padrao.gravar_integracao('398', nr_mov_estoque_w, nm_usuario_w, reg_integracao_w);--retificacao                    
                end if;

                delete from  transm_BNDASAF
                where cd_registro_origem = nr_mov_estoque_w;
            end;
        end if;
        end;
    end if;
end if;

commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualiza_log_transm_bndasaf ( nr_sequencia_p bigint, ds_xml_p text) FROM PUBLIC;

