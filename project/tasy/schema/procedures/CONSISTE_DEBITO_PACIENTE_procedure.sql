-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consiste_debito_paciente ( cd_pessoa_fisica_p text, cd_convenio_p bigint, cd_usuario_convenio_p text, ie_tipo_atendimento_p bigint, ie_clinica_p bigint, cd_especialidade_p bigint, cd_categoria_p text, dt_entrada_p timestamp default null, ds_erro_p INOUT text DEFAULT NULL) AS $body$
DECLARE


ds_erro_w			varchar(255);
ie_tipo_bloqueio_w		varchar(001);
cd_usuario_convenio_w		varchar(030);
qt_tam_regra_w			bigint;
qt_tam_campo_w			bigint;
i				bigint;
ds_mensagem_w			varchar(255);
ie_igual_w			varchar(1):= 'S';

c01 CURSOR FOR
	SELECT 	ie_tipo_bloqueio,
		ds_mensagem
	from 	convenio_bloqueio
	where 	cd_convenio 		= cd_convenio_p
	and 	cd_usuario_convenio	= cd_usuario_convenio_p
	and (coalesce(cd_categoria, coalesce(cd_categoria_p, '0')) = coalesce(cd_categoria_p, '0') or (coalesce(cd_categoria_p, '0') = '0'))
	and (coalesce(ie_tipo_atendimento, coalesce(ie_tipo_atendimento_p, 0)) = coalesce(ie_tipo_atendimento_p, 0) or (coalesce(ie_tipo_atendimento_p, 0) = 0))
	and (coalesce(ie_clinica, coalesce(ie_clinica_p, 0)) = coalesce(ie_clinica_p, 0) or (coalesce(ie_clinica_p, 0) = 0))
	and (coalesce(cd_especialidade, coalesce(cd_especialidade_p, 0)) = coalesce(cd_especialidade_p, 0) or (coalesce(cd_especialidade_p, 0) = 0))
	and	((coalesce(dt_entrada_p::text, '') = '') or (dt_entrada_p between coalesce(dt_inicio_vigencia, dt_entrada_p) and trunc(coalesce(dt_final_vigencia, clock_timestamp() + interval '360 days')) + 86399/86400))
	and	ie_tipo_bloqueio	<> 'G';

c02 CURSOR FOR
	SELECT 	cd_usuario_convenio,
		ds_mensagem
	from 	convenio_bloqueio
	where 	cd_convenio 		= cd_convenio_p
	and (coalesce(cd_categoria, coalesce(cd_categoria_p, '0')) = coalesce(cd_categoria_p, '0') or (coalesce(cd_categoria_p, '0') = '0'))
	and (coalesce(ie_tipo_atendimento, coalesce(ie_tipo_atendimento_p, 0)) = coalesce(ie_tipo_atendimento_p, 0) or (coalesce(ie_tipo_atendimento_p, 0) = 0))
	and (coalesce(ie_clinica, coalesce(ie_clinica_p, 0)) = coalesce(ie_clinica_p, 0) or (coalesce(ie_clinica_p, 0) = 0))
	and (coalesce(cd_especialidade, coalesce(cd_especialidade_p, 0)) = coalesce(cd_especialidade_p, 0) or (coalesce(cd_especialidade_p, 0) = 0))
	and	((coalesce(dt_entrada_p::text, '') = '') or (dt_entrada_p between coalesce(dt_inicio_vigencia, dt_entrada_p) and trunc(coalesce(dt_final_vigencia, clock_timestamp() + interval '360 days')) + 86399/86400))
	and	ie_tipo_bloqueio	= 'G';

c03 CURSOR FOR
	SELECT 	ie_tipo_bloqueio,
		cd_usuario_convenio,
		ds_mensagem
	from 	convenio_bloqueio
	where 	cd_convenio 		= cd_convenio_p
	and (coalesce(cd_categoria, coalesce(cd_categoria_p, '0')) = coalesce(cd_categoria_p, '0') or (coalesce(cd_categoria_p, '0') = '0'))
	and 	position('@' in cd_usuario_convenio) > 0
	and (coalesce(ie_tipo_atendimento, coalesce(ie_tipo_atendimento_p, 0)) = coalesce(ie_tipo_atendimento_p, 0) or (coalesce(ie_tipo_atendimento_p, 0) = 0))
	and (coalesce(ie_clinica, coalesce(ie_clinica_p, 0)) = coalesce(ie_clinica_p, 0) or (coalesce(ie_clinica_p, 0) = 0))
	and (coalesce(cd_especialidade, coalesce(cd_especialidade_p, 0)) = coalesce(cd_especialidade_p, 0) or (coalesce(cd_especialidade_p, 0) = 0))
	and	((coalesce(dt_entrada_p::text, '') = '') or (dt_entrada_p between coalesce(dt_inicio_vigencia, dt_entrada_p) and trunc(coalesce(dt_final_vigencia, clock_timestamp() + interval '360 days')) + 86399/86400))
	order by dt_atualizacao;


BEGIN

ds_erro_w				:= '';

Open C01;
LOOP
	FETCH c01 into
		ie_tipo_bloqueio_w,
		ds_mensagem_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		if (ds_mensagem_w IS NOT NULL AND ds_mensagem_w::text <> '') then
			ds_erro_w	:= substr((ds_erro_w || ' ' || ds_mensagem_w),1,255);
		else
			begin
			if (ie_tipo_bloqueio_w = 'E') then
				ds_erro_w	:= substr(ds_erro_w || WHEB_MENSAGEM_PCK.get_texto(279839),1,255);
			elsif (ie_tipo_bloqueio_w = 'A') then
				ds_erro_w	:= substr(ds_erro_w || WHEB_MENSAGEM_PCK.get_texto(279840),1,255);
			elsif (ie_tipo_bloqueio_w = 'L') then
				ds_erro_w	:= substr(ds_erro_w || WHEB_MENSAGEM_PCK.get_texto(279841),1,255);
			end if;
			end;
		end if;
		end;
END LOOP;
CLOSE C01;

Open C02;
LOOP
	FETCH c02 into
		cd_usuario_convenio_w,
		ds_mensagem_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin

		qt_tam_campo_w	:= length(cd_usuario_convenio_w);

		if (position(cd_usuario_convenio_w in substr(cd_usuario_convenio_p,1,qt_tam_campo_w)) > 0) then
			begin
			if (ds_mensagem_w IS NOT NULL AND ds_mensagem_w::text <> '') then
				ds_erro_w	:= substr(ds_erro_w || ' ' || ds_mensagem_w,1,255);
			else
				ds_erro_w	:= substr(ds_erro_w || WHEB_MENSAGEM_PCK.get_texto(279842),1,255);
			end if;

			end;
		end if;
		end;
END LOOP;
CLOSE C02;

if (coalesce(ds_erro_w::text, '') = '') then
	Open C03;
	LOOP
		FETCH c03 into
			ie_tipo_bloqueio_w,
			cd_usuario_convenio_w,
			ds_mensagem_w;
		EXIT WHEN NOT FOUND; /* apply on C03 */
		begin
		ie_igual_w:= 'S';
		if (ie_igual_w = 'S') then
			qt_tam_campo_w	:= length(cd_usuario_convenio_p);
			qt_tam_regra_w  := length(cd_usuario_convenio_w);
			if (qt_tam_campo_w <> qt_tam_regra_w) then
				ie_igual_w:= 'N';
			end if;
			if (qt_tam_campo_w > 0) and (ie_igual_w = 'S') then
				FOR i IN 1..qt_tam_campo_w LOOP
					begin
        				if (Substr(cd_usuario_convenio_w, i, 1) <> '@') and (Substr(cd_usuario_convenio_w, i, 1) <> Substr(cd_usuario_convenio_p, i, 1)) then
					   ie_igual_w:= 'N';
					end if;
        				end;
		    		END LOOP;
			end if;
			if (ie_igual_w = 'S') then
				begin
				if (ds_mensagem_w IS NOT NULL AND ds_mensagem_w::text <> '') then
					ds_erro_w	:= substr(ds_mensagem_w,1,255);
				else
					begin
					if (ie_tipo_bloqueio_w = 'E') then
						ds_erro_w	:= WHEB_MENSAGEM_PCK.get_texto(279839);
					elsif (ie_tipo_bloqueio_w = 'A') then
						ds_erro_w	:= WHEB_MENSAGEM_PCK.get_texto(279840);
					elsif (ie_tipo_bloqueio_w = 'L') then
						ds_erro_w	:= WHEB_MENSAGEM_PCK.get_texto(279841);
					else
						ds_erro_w	:= WHEB_MENSAGEM_PCK.get_texto(279842);
					end if;
					end;
				end if;
				end;
			end if;
		end if;
		end;
	END LOOP;
	CLOSE C03;
end if;

ds_erro_p	:= ds_erro_w;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consiste_debito_paciente ( cd_pessoa_fisica_p text, cd_convenio_p bigint, cd_usuario_convenio_p text, ie_tipo_atendimento_p bigint, ie_clinica_p bigint, cd_especialidade_p bigint, cd_categoria_p text, dt_entrada_p timestamp default null, ds_erro_p INOUT text DEFAULT NULL) FROM PUBLIC;

