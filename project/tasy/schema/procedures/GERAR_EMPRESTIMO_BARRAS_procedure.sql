-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_emprestimo_barras ( nr_emprestimo_p bigint, cd_material_p bigint, qt_emprestimo_p bigint, nr_seq_lote_p bigint, nm_usuario_p text, ds_erro_p INOUT text) AS $body$
DECLARE


ie_erro_w				varchar(255);
ie_tipo_w				varchar(1);
ie_acao_w			varchar(1);
cd_estabelecimento_w		integer;
ie_estoque_lote_w			varchar(1);
dt_mesano_referencia_w		timestamp;
cd_local_estoque_w		integer;
qt_saldo_atual_w			double precision;
nr_sequencia_w			integer;
dt_validade_w			timestamp;
ds_lote_fornec_w			varchar(20);
cd_material_estoque_w		integer;
nr_seq_marca_w			bigint;
ie_consiste_est_empr_saida_w	varchar(1);
qt_estoque_w			double precision;
qt_disponivel_w			double precision;
dt_mes_w			timestamp;
ds_observacao_w			varchar(255);
ds_retorno_w			varchar(1);
ie_disp_emprestimo_lib_w		parametro_estoque.ie_disp_emprestimo_lib%type;
ie_consiste_material_estoque_w material_estab.ie_material_estoque%type;


BEGIN
/*Consistir quando o Material não possui saldo para eo empréstimo. Parâmetro 28*/

ie_consiste_est_empr_saida_w := coalesce(substr(obter_valor_param_usuario(143,28,obter_perfil_ativo,nm_usuario_p,cd_estabelecimento_w),1,1),'S');
/*Empréstimo - Verificar se o item é material de estoque. parâmetro 140*/

ie_consiste_material_estoque_w :=coalesce(substr(obter_valor_param_usuario(143,140,obter_perfil_ativo,nm_usuario_p,cd_estabelecimento_w),1,1),'S');

select	max(ie_disp_emprestimo_lib)
into STRICT	ie_disp_emprestimo_lib_w
from	parametro_estoque
where	cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento;

select	cd_estabelecimento,
	cd_local_estoque,
	trunc(dt_emprestimo,'month'),
	ie_tipo
into STRICT	cd_estabelecimento_w,
	cd_local_estoque_w,
	dt_mesano_referencia_w,
	ie_tipo_w
from	emprestimo
where	nr_emprestimo		= nr_emprestimo_p;

select	cd_material_estoque
into STRICT	cd_material_estoque_w
from	material
where	cd_material = cd_material_p;

if (nr_seq_lote_p > 0) then
	select	dt_validade,
		ds_lote_fornec,
		nr_seq_marca
	into STRICT	dt_validade_w,
		ds_lote_fornec_w,
		nr_seq_marca_w
	from	material_lote_fornec
	where	nr_sequencia = nr_seq_lote_p;
end if;

if (ie_tipo_w = 'S') then
	begin
	/*Saldo Disponível*/

	if (ie_consiste_est_empr_saida_w = 'S') then
		begin

		select	coalesce(obter_saldo_disp_estoque(cd_estabelecimento_w,cd_material_p,cd_local_estoque_w,clock_timestamp()),0)
		into STRICT	qt_estoque_w
		;

		if (qt_emprestimo_p > qt_estoque_w) then
		    ds_erro_p	:=  WHEB_MENSAGEM_PCK.get_texto(279043) || qt_estoque_w || chr(13) || chr(10) ||
				    WHEB_MENSAGEM_PCK.get_texto(279045) || cd_material_p;
		end if;
		end;
	end if;

	/*Saldo contábil*/

	if (ie_consiste_est_empr_saida_w = 'C') then
		begin
		select (coalesce(sup_obter_saldo_estoque(cd_estabelecimento_w,trunc(clock_timestamp(),'month'),cd_local_estoque_w,cd_material_estoque_w),0) -
			coalesce(obter_qt_emprestimo(cd_estabelecimento_w,cd_material_estoque_w,cd_local_estoque_w,trunc(clock_timestamp(),'month'),'S'),0))
		into STRICT	qt_disponivel_w
		;

		if (qt_emprestimo_p > qt_disponivel_w) then
		   ds_erro_p	:=  WHEB_MENSAGEM_PCK.get_texto(279043) || qt_disponivel_w || chr(13) || chr(10) ||
				    WHEB_MENSAGEM_PCK.get_texto(279047) || cd_material_estoque_w;
		end if;
		end;
	end if;
	end;

end if;

select 	obter_se_material_estoque(cd_estabelecimento_w, cd_estabelecimento_w, cd_material_estoque_w)
into STRICT 	ds_retorno_w
;

if (ie_consiste_material_estoque_w = 'S') and (ds_retorno_w = 'N') then
	ds_erro_p := WHEB_MENSAGEM_PCK.get_texto(157860);
end if;

select	substr(obter_se_material_estoque_lote(cd_estabelecimento_w, cd_material_p),1,1)
into STRICT	ie_estoque_lote_w
;

if (ie_estoque_lote_w = 'S') and (nr_seq_lote_p > 0) then
	begin
	ie_acao_w	:= '1';
	if (ie_tipo_w = 'S') then
		ie_acao_w	:= '2';
	end if;

	/*Consistir se existe saldo no emprestimo de saida. Lote não pode ficar negativo*/

	if (ie_acao_w = '2') then
		select	coalesce(sum(qt_estoque),0)
		into STRICT	qt_saldo_atual_w
		from	saldo_estoque_lote
		where	cd_estabelecimento		= cd_estabelecimento_w
		and	dt_mesano_referencia	= dt_mesano_referencia_w
		and	cd_local_estoque		= cd_local_estoque_w
		and	cd_material		= cd_material_estoque_w
		and	nr_seq_lote		= nr_seq_lote_p;
		if (qt_emprestimo_p > qt_saldo_atual_w) then
			ds_erro_p	:=  WHEB_MENSAGEM_PCK.get_texto(279048) || chr(13) || chr(10) ||
					 WHEB_MENSAGEM_PCK.get_texto(279049) || ds_lote_fornec_w ||  WHEB_MENSAGEM_PCK.get_texto(279050) || qt_saldo_atual_w;
		end if;
	end if;

	/*AJUSTA SALDO ESTOQUE DO LOTE*/

	if (coalesce(ds_erro_p::text, '') = '') and (ie_disp_emprestimo_lib_w <> 'S') then
		ie_erro_w := atualizar_saldo_lote(
			cd_estabelecimento_w, cd_local_estoque_w, cd_material_estoque_w, dt_mesano_referencia_w, nr_seq_lote_p, 0, qt_emprestimo_p, ie_acao_w, nm_usuario_p, ie_erro_w);
	end if;
	end;
end if;

if (coalesce(ds_erro_p::text, '') = '') then
	/*REGISTRA O EMPRESTIMO*/

	select	coalesce(max(nr_sequencia),0) + 1
	into STRICT	nr_sequencia_w
	from	emprestimo_material
	where	nr_emprestimo = nr_emprestimo_p;

	insert into emprestimo_material(
		nr_emprestimo,
		nr_sequencia,
		cd_material,
		qt_material,
		dt_atualizacao,
		nm_usuario,
		qt_emprestimo,
		dt_validade_material,
		ds_lote_fornec,
		nr_seq_lote,
		nr_seq_marca,
		ds_observacao)
	values (	nr_emprestimo_p,
		nr_sequencia_w,
		cd_material_p,
		qt_emprestimo_p,
		clock_timestamp(),
		nm_usuario_p,
		qt_emprestimo_p,
		dt_validade_w,
		ds_lote_fornec_w,
		nr_seq_lote_p,
		nr_seq_marca_w,
		ds_observacao_w);
	commit;

end if;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_emprestimo_barras ( nr_emprestimo_p bigint, cd_material_p bigint, qt_emprestimo_p bigint, nr_seq_lote_p bigint, nm_usuario_p text, ds_erro_p INOUT text) FROM PUBLIC;

