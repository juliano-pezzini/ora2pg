-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE aprovar_avf_resultado ( nr_sequencia_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
Finalidade: 
------------------------------------------------------------------------------------------------------------------- 
Locais de chamada direta: 
[ ] Objetos do dicionário [ X ] Tasy (Delphi/Java) [ ] Portal [ ] Relatórios [ ] Outros: 
 ------------------------------------------------------------------------------------------------------------------ 
Pontos de atenção: 
------------------------------------------------------------------------------------------------------------------- 
Referências: 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
 
 
qt_existe_w				bigint;
vl_media_w				double precision;
nm_pessoa_resp_w			varchar(100);
cd_estabelecimento_w			smallint;
nr_seq_regra_w				bigint;
ds_tipo_aval_w				varchar(100);
ds_fornecedor_w				varchar(100);
nm_pessoa_aprov_w			varchar(100);
ds_titulo_w				varchar(80);
ds_comunicado_w				varchar(4000);
qt_regra_usuario_w			bigint;
nm_usuario_destino_w			varchar(255);
nr_seq_comunic_w			bigint;
nr_seq_classif_w			bigint;
--cd_perfil_w				varchar2(10); 
ie_ci_lida_w				varchar(1);
ie_permite_lib_avaliacao_w		varchar(1)	:= 'N';
qt_nota_w				bigint;

/* Se tiver setor na regra, envia CI para os setores */
 
ds_setor_adicional_w			varchar(2000)	:= '';

/* Campos da regra Usuário da Regra */
 
cd_setor_regra_usuario_w		integer;
cd_perfil_usuario_w			integer;
cd_perfil_w				varchar(2000)	:= '';

c05 CURSOR FOR 
	SELECT	coalesce(a.cd_setor_atendimento,0) cd_setor_atendimento, 
		coalesce(a.cd_perfil,0) cd_perfil 
	from	regra_envio_comunic_usu	a 
	where	a.nr_seq_evento	= nr_seq_regra_w;


BEGIN 
select	substr(obter_nome_pf_pj(cd_pessoa_resp,null),1,100), 
	substr(obter_nome_avf_tipo_avaliacao(nr_seq_tipo_aval),1,100), 
	substr(obter_nome_pf_pj(null,cd_cnpj),1,100), 
	substr(obter_nome_usuario(nm_usuario_p),1,100), 
	cd_estabelecimento 
into STRICT	nm_pessoa_resp_w, 
	ds_tipo_aval_w, 
	ds_fornecedor_w, 
	nm_pessoa_aprov_w, 
	cd_estabelecimento_w 
from	avf_resultado 
where	nr_sequencia	= nr_sequencia_p;
 
select (obter_valor_param_usuario(6, 31, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w)) 
into STRICT	ie_permite_lib_avaliacao_w
;
 
if (coalesce(ie_permite_lib_avaliacao_w,'N') = 'X') then 
	select	count(1) 
	into STRICT	qt_nota_w 
	from	avf_resultado_item x 
	where	x.nr_Seq_resultado	= nr_sequencia_p 
	and 	coalesce(x.nr_seq_grupo_pergunta::text, '') = '' 
	and	coalesce((substr(obter_dados_avf_tipo_nota_item(x.nr_seq_nota_item,'N',nr_seq_pergunta,nr_seq_resultado),1,10))::numeric , 0) = 0 
	and	coalesce(substr(Obter_Descricao_Padrao('AVF_GRUPO_PERGUNTA','PR_PESO_GRUPO',nr_seq_grupo_pergunta),1,6), 'X') = 'X';
 
	if (qt_nota_w > 0) then 
		CALL wheb_mensagem_pck.exibir_mensagem_abort(254519);
	end if;
end if;
 
select	avf_gerar_nota_avaliacao(nr_sequencia_p) 
into STRICT	vl_media_w
;
 
update	avf_resultado 
set	dt_aprovacao		= clock_timestamp(), 
	nm_usuario_aprov	= nm_usuario_p, 
	vl_media		= vl_media_w 
where	nr_sequencia		= nr_sequencia_p;
 
select	coalesce(max(b.nr_sequencia), 0) 
into STRICT	nr_seq_regra_w 
from	regra_envio_comunic_compra	a, 
	regra_envio_comunic_evento	b 
where	a.nr_sequencia = b.nr_seq_regra 
and	a.cd_funcao		= 6 
and	b.cd_evento		= 18 
and	b.ie_situacao		= 'A' 
and	cd_estabelecimento	= cd_estabelecimento_w 
and	substr(obter_se_envia_ci_regra_compra(b.nr_sequencia,nr_sequencia_p,'AF',obter_perfil_ativo,nm_usuario_p,null),1,1) = 'S';
	 
if (nr_seq_regra_w > 0) then 
	open C05;
	loop 
	fetch C05 into 
		cd_setor_regra_usuario_w, 
		cd_perfil_usuario_w;
	EXIT WHEN NOT FOUND; /* apply on C05 */
		begin 
		if (cd_setor_regra_usuario_w <> 0) and (obter_se_contido_char(cd_setor_regra_usuario_w, ds_setor_adicional_w) = 'N') then 
			ds_setor_adicional_w	:= substr(ds_setor_adicional_w || cd_setor_regra_usuario_w || ',',1,2000);
		end if;
		 
		if (cd_perfil_usuario_w <> 0) and (obter_se_contido_char(cd_perfil_usuario_w, cd_perfil_w) = 'N') then 
			cd_perfil_w	:= substr(cd_perfil_w || cd_perfil_usuario_w || ',',1,2000);
		end if;
		end;
	end loop;
	close C05;
 
	select	max(substr(ds_titulo,1,80)), 
		max(substr(ds_comunicacao,1,4000)) ds_comunicacao 
		--max(cd_perfil) 
	into STRICT	ds_titulo_w, 
		ds_comunicado_w 
		--cd_perfil_w 
	from	regra_envio_comunic_evento 
	where	nr_sequencia = nr_seq_regra_w;
 
	ds_comunicado_w := substr(replace_macro(ds_comunicado_w, '@nm_responsavel', nm_pessoa_resp_w),1,4000);
	ds_comunicado_w := substr(replace_macro(ds_comunicado_w, '@tp_avaliacao', ds_tipo_aval_w),1,4000);
	ds_comunicado_w := substr(replace_macro(ds_comunicado_w, '@fornecedor', ds_fornecedor_w),1,4000);
	ds_comunicado_w := substr(replace_macro(ds_comunicado_w, '@nr_avaliacao', nr_sequencia_p),1,4000);
	ds_comunicado_w := substr(replace_macro(ds_comunicado_w, '@nm_pessoa_aprov', nm_pessoa_aprov_w),1,4000);
	ds_comunicado_w := substr(replace_macro(ds_comunicado_w, '@qt_pontuacao', vl_media_w),1,4000);
 
	select	count(1) 
	into STRICT	qt_regra_usuario_w 
	from	regra_envio_comunic_compra	a, 
		regra_envio_comunic_evento	b, 
		regra_envio_comunic_usu		c 
	where	a.nr_sequencia	= b.nr_seq_regra 
	and	b.nr_sequencia	= c.nr_seq_evento 
	and	b.nr_sequencia	= nr_seq_regra_w  LIMIT 1;
 
	select	coalesce(ie_ci_lida,'N') 
	into STRICT	ie_ci_lida_w 
	from 	regra_envio_comunic_evento 
	where 	nr_sequencia	= nr_seq_regra_w;
 
	if (qt_regra_usuario_w > 0) then 
		nm_usuario_destino_w	:= obter_usuarios_comunic_compras(nr_sequencia_p, null, 18, nr_seq_regra_w, nm_usuario_p);
	end if;
	 
	if (nm_usuario_destino_w IS NOT NULL AND nm_usuario_destino_w::text <> '') then 
		select	obter_classif_comunic('F') 
		into STRICT	nr_seq_classif_w 
		;	
			 
		select	nextval('comunic_interna_seq') 
		into STRICT	nr_seq_comunic_w 
		;
 
		--if	(cd_perfil_w is not null) then 
		--	cd_perfil_w	:= cd_perfil_w || ','; 
		--end if; 
		 
		insert into comunic_interna(dt_comunicado, 
			ds_titulo, 
			ds_comunicado, 
			nm_usuario, 
			dt_atualizacao, 
			ie_geral, 
			nm_usuario_destino, 
			nr_sequencia, 
			ie_gerencial, 
			nr_seq_classif, 
			dt_liberacao, 
			nr_seq_resultado, 
			ds_perfil_adicional, 
			ds_setor_adicional) 
		values (clock_timestamp(), 
			ds_titulo_w, 
			ds_comunicado_w, 
			nm_usuario_p, 
			clock_timestamp(), 
			'N', 
			nm_usuario_destino_w, 
			nr_seq_comunic_w, 
			'N', 
			nr_seq_classif_w, 
			clock_timestamp(), 
			nr_sequencia_p, 
			cd_perfil_w, 
			ds_setor_adicional_w);
 
		if (ie_ci_lida_w = 'S') then 
			insert into comunic_interna_lida(nr_sequencia, 
				nm_usuario, 
				dt_atualizacao) 
			values (nr_seq_comunic_w, 
				nm_usuario_p, 
				clock_timestamp());
		end if;
	end if;	
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE aprovar_avf_resultado ( nr_sequencia_p bigint, nm_usuario_p text) FROM PUBLIC;

