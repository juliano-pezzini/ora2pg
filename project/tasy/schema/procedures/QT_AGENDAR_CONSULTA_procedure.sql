-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE qt_agendar_consulta ( nr_seq_atendimento_p bigint, nr_seq_quimio_p bigint, hr_agenda_p text, cd_agenda_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, ds_retorno_p INOUT text) AS $body$
DECLARE


ds_retorno_w		varchar(255);			
dt_agenda_w		timestamp;
hr_agenda_w		timestamp;
nr_seq_agenda_w		    agenda_consulta.nr_sequencia%type;
cd_pessoa_fisica_w	varchar(10);
dt_prevista_w		timestamp;
ds_prot_medic_w		varchar(255);
ie_atualizar_obs_w	varchar(1);
cd_classif_agenda_w	varchar(5);

cd_convenio_w		integer;
cd_categoria_w		varchar(10);
cd_usuario_convenio_w	varchar(30);
dt_validade_carteira_w	timestamp;
nr_doc_convenio_w	varchar(20);
cd_tipo_acomodacao_w	smallint;
cd_plano_w		varchar(10);
ds_obs_w		varchar(255);
ie_forma_convenio_w	varchar(5);
	

BEGIN

ie_atualizar_obs_w	:= coalesce(Obter_Valor_Param_Usuario(865, 51, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p), 'N');
cd_classif_agenda_w	:= Obter_Valor_Param_Usuario(865, 101, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p);
ie_forma_convenio_w	:= Obter_Valor_Param_Usuario(821, 6, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p);

if (nr_seq_quimio_p IS NOT NULL AND nr_seq_quimio_p::text <> '') then
	select	max(dt_agenda),
		max(cd_pessoa_Fisica),
		max(dt_agenda)
	into STRICT	dt_agenda_w,
		cd_pessoa_fisica_w,
		dt_prevista_w
	from	agenda_quimio
	where	nr_sequencia = nr_seq_quimio_p;
else
	select	max(b.dt_real),
		max(a.cd_pessoa_Fisica),
		max(b.dt_prevista),
		substr(max(obter_desc_prot_medic(a.nr_seq_paciente)),1,255)
	into STRICT	dt_agenda_w,
		cd_pessoa_fisica_w,
		dt_prevista_w,
		ds_prot_medic_w
	from	paciente_setor a,
		paciente_atendimento b
	where	b.nr_Seq_atendimento	= nr_seq_atendimento_p
	and	a.nr_seq_paciente	= b.nr_seq_paciente;
end if;

if (dt_agenda_w IS NOT NULL AND dt_agenda_w::text <> '') then
	hr_agenda_w	:= to_date(to_char(dt_agenda_w,'dd/mm/yyyy') || ' ' || hr_Agenda_p||':00','dd/mm/yyyy hh24:mi:ss');

	ds_retorno_w := horario_livre_consulta(cd_estabelecimento_p, cd_agenda_p, 'N', dt_agenda_w, nm_usuario_p, 'S', 'N', 'N', 0, ds_retorno_w);

	select	coalesce(max(nr_sequencia) ,0)
	into STRICT	nr_seq_agenda_w
	from	agenda_consulta
	where	cd_agenda		= cd_agenda_p
	and	dt_agenda 		= hr_agenda_w
	and	ie_status_agenda	= 'L';

	if (nr_seq_agenda_w	> 0) then
		if (ie_forma_convenio_w IS NOT NULL AND ie_forma_convenio_w::text <> '') and (ie_forma_convenio_w <> 'N') then
			SELECT * FROM Gerar_Convenio_Agendamento(	cd_pessoa_fisica_w, 3, nr_seq_agenda_w, ie_forma_convenio_w, cd_convenio_w, cd_categoria_w, cd_usuario_convenio_w, dt_validade_carteira_w, nr_doc_convenio_w, cd_tipo_acomodacao_w, cd_plano_w, nm_usuario_p, ds_obs_w) INTO STRICT cd_convenio_w, cd_categoria_w, cd_usuario_convenio_w, dt_validade_carteira_w, nr_doc_convenio_w, cd_tipo_acomodacao_w, cd_plano_w, ds_obs_w;
		end if;
	
		update	agenda_consulta
		set		cd_pessoa_fisica		= cd_pessoa_fisica_w,
				nm_paciente				= substr(obter_nome_pf(cd_pessoa_fisica_w),1,40),
				ie_status_agenda		= 'N',
				ds_observacao			= CASE WHEN ie_atualizar_obs_w='S' THEN ds_prot_medic_w  ELSE ds_observacao END ,
				ie_classif_agenda 		= CASE WHEN cd_classif_agenda_w = NULL THEN ie_classif_agenda  ELSE cd_classif_agenda_w END ,
				nr_telefone				= obter_fone_pac_agenda(cd_pessoa_fisica_w),
				cd_convenio				= coalesce(cd_convenio_w,cd_convenio),
				cd_categoria			= coalesce(cd_categoria_w,cd_categoria),
				cd_plano				= coalesce(cd_plano_w,cd_plano),
				cd_usuario_convenio		= coalesce(cd_usuario_convenio_w,cd_usuario_convenio),
				dt_validade_carteira	= coalesce(dt_validade_carteira_w,dt_validade_carteira),
				nr_doc_convenio			= coalesce(nr_doc_convenio_w,nr_doc_convenio),
				cd_tipo_acomodacao		= coalesce(cd_tipo_acomodacao_w,cd_tipo_acomodacao),
				nm_usuario				= nm_usuario_p,
				nm_usuario_origem		= nm_usuario_p,
				dt_atualizacao			= clock_timestamp()
		where	nr_sequencia			= nr_seq_agenda_w;
		
		if (nr_seq_quimio_p IS NOT NULL AND nr_seq_quimio_p::text <> '') then
			update	agenda_quimio
			set	nr_seq_agenda_cons	= nr_seq_agenda_w
			where	nr_sequencia		= nr_seq_quimio_p;
		else
			update	agenda_quimio
			set	nr_seq_agenda_cons	= nr_seq_agenda_w
			where	nr_seq_atendimento	= nr_seq_atendimento_p;
		end if;
	else
		ds_retorno_p	:= wheb_mensagem_pck.get_texto(795707,
					'DS_HORA_AGENDA=' || TO_CHAR(hr_agenda_w, pkg_date_formaters.localize_mask('timestamp', pkg_date_formaters.getUserLanguageTag(cd_estabelecimento_p, nm_usuario_p))));
	end if;
else
	ds_retorno_p	:= wheb_mensagem_pck.get_texto(795713,
				'DS_DATA_PREVISTA=' || TO_CHAR(dt_prevista_w, pkg_date_formaters.localize_mask('shortDate', pkg_date_formaters.getUserLanguageTag(cd_estabelecimento_p, nm_usuario_p))));
end if;
commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE qt_agendar_consulta ( nr_seq_atendimento_p bigint, nr_seq_quimio_p bigint, hr_agenda_p text, cd_agenda_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, ds_retorno_p INOUT text) FROM PUBLIC;

