-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE envio_comunic_conta_cancel ( cd_perfil_p bigint, nr_interno_conta_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE

 
qt_existe_w		bigint;
cd_perfil_w		integer;
nm_usuario_envio_w	varchar(15);
ds_comunicado_w		varchar(32000);
ds_fonte_padrao_w		varchar(255);
nm_pessoa_w		varchar(80);
ds_lista_pessoa_w		varchar(4000);
nr_atendimento_w		bigint;
nm_paciente_w		varchar(80);
ds_convenio_w		varchar(80);
nr_titulo_w		bigint;
nr_seq_classif_w		bigint;
qt_tamanho_fonte_w	integer;
ds_perfil_w		varchar(2000);
ds_usuario_w		varchar(2000);
nm_usuario_logado_w	varchar(60);
ds_setor_logado_w	varchar(100);
nr_seq_protocolo_w	bigint;
dt_vencimento_w		timestamp;
ds_titulo_w		varchar(2000);
ds_vencimento_w		varchar(2000);
vl_conta_w		double precision;
ds_titulo_prot_w	varchar(2000);
ds_vencimento_prot_w	varchar(2000);
ds_lista_pessoa_prot_w	varchar(4000);
cd_estabelecimento_w	estabelecimento.cd_estabelecimento%type;

C01 CURSOR FOR 
	SELECT	cd_perfil, 
		nm_usuario_envio 
	from	regra_comunic_canc_conta 
	where	ie_situacao = 'A' 
	and	coalesce(cd_estabelecimento,coalesce(cd_estabelecimento_w,0)) = coalesce(cd_estabelecimento_w,0) 
	order by	nm_usuario_envio, 
		cd_perfil;

C02 CURSOR FOR 
	SELECT 	distinct 
		nm_pessoa 
	from	titulo_receber_v a 
	where	nr_interno_conta = nr_interno_conta_p 
	order by	1;
	
C03 CURSOR FOR 
	SELECT	/*+ index (a titrece_conpaci_fk_i) */ 
		nr_titulo, 
		dt_vencimento 
	from	titulo_receber a 
	where	nr_interno_conta_p <> 0 
	and	nr_interno_conta = nr_interno_conta_p;
	
C04 CURSOR FOR 
	SELECT	/*+ index (a TITRECE_PROCONV_FK_I) */ 
		nr_titulo, 
		dt_vencimento 
	from	titulo_receber a 
	where	coalesce(nr_seq_protocolo_w,0) <> 0 
	and	nr_seq_protocolo = nr_seq_protocolo_w;
	
C05 CURSOR FOR 
	SELECT 	distinct 
		nm_pessoa 
	from	titulo_receber_v a 
	where	nr_seq_protocolo = coalesce(nr_seq_protocolo_w,0) 
	order by	1;	
 

BEGIN 
 
select	count(*) 
into STRICT	qt_existe_w 
from	regra_comunic_canc_conta 
where	ie_situacao = 'A';
 
if (qt_existe_w > 0) then 
 
	ds_fonte_padrao_w := obter_param_usuario(87, 15, obter_perfil_Ativo, nm_usuario_p, cd_estabelecimento_p, ds_fonte_padrao_w);
	 
	select	max(substr(obter_nome_pf(cd_pessoa_fisica),1,60)) nm_usuario_logado, 
		max(substr(obter_nome_setor(cd_setor_atendimento),1,100)) ds_setor_logado 
	into STRICT	nm_usuario_logado_w, 
		ds_setor_logado_w 
	from	usuario 
	where	nm_usuario = nm_usuario_p;
	 
	select	max(nr_atendimento), 
		max(substr(obter_pessoa_atendimento(nr_atendimento,'N'),1,80)), 
		max(substr(obter_desc_convenio(cd_convenio_parametro),1,80)), 
		max(obter_valor_conta(nr_interno_conta,0)), 
		max(nr_seq_protocolo), 
		max(cd_estabelecimento) 
	into STRICT	nr_atendimento_w, 
		nm_paciente_w, 
		ds_convenio_w, 
		vl_conta_w, 
		nr_seq_protocolo_w, 
		cd_estabelecimento_w 
	from	conta_paciente 
	where	nr_interno_conta = nr_interno_conta_p;
	 
	ds_lista_pessoa_w := '';
	 
	open C02;
	loop 
	fetch C02 into	 
		nm_pessoa_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin 
		ds_lista_pessoa_w := ds_lista_pessoa_w || nm_pessoa_w || ', ';
		end;
	end loop;
	close C02;
	 
	open C03;
	loop 
	fetch C03 into	 
		nr_titulo_w, 
		dt_vencimento_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin 
		 
		if (length(coalesce(ds_titulo_w, '0')) < 1980) then 
			ds_titulo_w := ds_titulo_w || nr_titulo_w ||', ';
		end if;
		 
		if (length(coalesce(ds_vencimento_w, '0')) < 1980) then 
			ds_vencimento_w := ds_vencimento_w || dt_vencimento_w ||', ';
		end if;		
		 
		end;
	end loop;
	close C03;
	 
	if (length(ds_titulo_w) > 2) then 
		ds_titulo_w	:= substr(ds_titulo_w,1,length(ds_titulo_w) - 2);
	end if;
	 
	if (length(ds_vencimento_w) > 2) then 
		ds_vencimento_w	:= substr(ds_vencimento_w,1,length(ds_vencimento_w) - 2);
	end if;
	 
	open C04;
	loop 
	fetch C04 into	 
		nr_titulo_w, 
		dt_vencimento_w;
	EXIT WHEN NOT FOUND; /* apply on C04 */
		begin 
		 
		if (length(coalesce(ds_titulo_prot_w, '0')) < 1980) then 
			ds_titulo_prot_w := ds_titulo_prot_w || nr_titulo_w ||', ';
		end if;
		 
		if (length(coalesce(ds_vencimento_prot_w, '0')) < 1980) then 
			ds_vencimento_prot_w := ds_vencimento_prot_w || dt_vencimento_w ||', ';
		end if;		
		 
		end;
	end loop;
	close C04;
 
	if (length(ds_titulo_prot_w) > 2) then 
		ds_titulo_prot_w	:= substr(ds_titulo_prot_w,1,length(ds_titulo_prot_w) - 2);
	end if;
	 
	if (length(ds_vencimento_prot_w) > 2) then 
		ds_vencimento_prot_w	:= substr(ds_vencimento_prot_w,1,length(ds_vencimento_prot_w) - 2);
	end if;
 
	open C05;
	loop 
	fetch C05 into	 
		nm_pessoa_w;
	EXIT WHEN NOT FOUND; /* apply on C05 */
		begin 
		ds_lista_pessoa_prot_w := ds_lista_pessoa_prot_w || nm_pessoa_w || ', ';
		end;
	end loop;
	close C05;
	 
	select	obter_classif_comunic('F') 
	into STRICT	nr_seq_classif_w 
	;
 
	open C01;
	loop 
	fetch C01 into	 
		cd_perfil_w, 
		nm_usuario_envio_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin 
		 
		if (cd_perfil_w IS NOT NULL AND cd_perfil_w::text <> '') then 
			ds_perfil_w := ds_perfil_w || cd_perfil_w || ', ';
		end if;
		if (nm_usuario_envio_w IS NOT NULL AND nm_usuario_envio_w::text <> '') then 
			ds_usuario_w := ds_usuario_w || nm_usuario_envio_w || ', ';
		end if;
		 
		end;
	end loop;
	close C01;
	 
	ds_comunicado_w	:=	Wheb_mensagem_pck.get_Texto(302015)	|| nr_atendimento_w		|| ' \par ' || ' \par ' || 
				Wheb_mensagem_pck.get_Texto(302016) 	|| nm_paciente_w		|| ' \par ' || ' \par ' || 
				Wheb_mensagem_pck.get_Texto(302017) 	|| nr_interno_conta_p		|| ' \par ' || ' \par ' || 
				Wheb_mensagem_pck.get_Texto(302018) 	|| vl_conta_w			|| ' \par ' || ' \par ' || 
				Wheb_mensagem_pck.get_Texto(302019) 	|| ds_convenio_w		|| ' \par ' || ' \par ' || 
				Wheb_mensagem_pck.get_Texto(302020)	|| nr_seq_protocolo_w		|| ' \par ' || ' \par ' || 
				Wheb_mensagem_pck.get_Texto(302021)	|| ds_titulo_prot_w		|| ' \par ' || ' \par ' || 
				Wheb_mensagem_pck.get_Texto(302023)	|| ds_vencimento_prot_w		|| ' \par ' || ' \par ' || 
				Wheb_mensagem_pck.get_Texto(302024)	|| ds_lista_pessoa_prot_w	|| ' \par ' || ' \par ' || 
				Wheb_mensagem_pck.get_Texto(302025)	|| ds_titulo_w			|| ' \par ' || ' \par ' || 
				Wheb_mensagem_pck.get_Texto(302026) 	|| ds_vencimento_w		|| ' \par ' || ' \par ' || 
				Wheb_mensagem_pck.get_Texto(302027)	|| nm_usuario_logado_w		|| ' \par ' || ' \par ' || 
				Wheb_mensagem_pck.get_Texto(302028)	|| ds_setor_logado_w		|| ' \par ' || ' \par ' || 
				Wheb_mensagem_pck.get_Texto(302029)	|| ds_lista_pessoa_w;
	 
	ds_comunicado_w := substr('{\rtf1\ansi\deff0{\fonttbl{\f0\fnil\fcharset0 ' || 
				coalesce(ds_fonte_padrao_w,'MS Sans Serif ') || ';}{\f1\fnil ' || 
				coalesce(ds_fonte_padrao_w,'MS Sans Serif ') || ';}}'|| 
				'{\colortbl ;\red0\green0\blue128;}' || 
				'\viewkind4\uc1\pard\cf1\lang1046\f0\fs' || (coalesce(qt_tamanho_fonte_w,8) * 2) || 
				ds_comunicado_w || '\b0 \par }',1,32000);
	 
	insert into comunic_interna( 
		dt_comunicado, 
		ds_titulo, 
		ds_comunicado, 
		nm_usuario, 
		dt_atualizacao, 
		ie_geral, 
		nm_usuario_destino, 
		ds_perfil_adicional, 
		nr_sequencia, 
		ie_gerencial, 
		nr_seq_classif, 
		dt_liberacao, 
		cd_estab_destino, 
		ds_grupo, 
		cd_cargo) 
	values (	clock_timestamp(), 
		Wheb_mensagem_pck.get_Texto(302030),/* 'Cancelado conta(nf/tit)',*/
 
		ds_comunicado_w, 
		nm_usuario_p, 
		clock_timestamp(), 
		'N', 
		ds_usuario_w, 
		ds_perfil_w, 
		nextval('comunic_interna_seq'), 
		'N', 
		nr_seq_classif_w, 
		clock_timestamp(), 
		cd_estabelecimento_p, 
		null, 
		null);
	 
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE envio_comunic_conta_cancel ( cd_perfil_p bigint, nr_interno_conta_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

