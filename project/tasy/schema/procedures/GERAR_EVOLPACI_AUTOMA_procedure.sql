-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_evolpaci_automa ( ie_tipo_item_p text, nm_usuario_p text, nr_atendimento_p text, ds_item_p text, nr_seq_horario_p bigint, ie_opcao_p text, ds_hint_p text, dt_evento_p timestamp default clock_timestamp(), nr_prescricao_p bigint default null, qt_dose_p bigint default null, ds_unid_med_p text default null, ie_via_adm_p text default null, cd_evolucao_p INOUT bigint DEFAULT NULL, ie_palm_p text default 'S', cd_recomendacao_p bigint default null, nr_seq_dispositivo_p bigint default null, ie_opcao_disp_p text default null, nr_seq_acao_disp_p bigint default null) AS $body$
DECLARE

					
cd_pessoa_fisica_w			varchar(30);
cd_medico_w					varchar(10);
ie_evolucao_clinica_w		varchar(10);
ds_evolucao_w				varchar(2000);
ds_evolucao_aux_w			varchar(2000);
ds_exp_just_w			varchar(50);
ds_usuario_w				varchar(150);
ds_item_ww					varchar(255);
ds_item_w					varchar(255);
ds_justificativa_w			varchar(255);
ie_tipo_evol_w				varchar(3);
VarGerarLib_w				varchar(3);
dt_horario_w				timestamp;
dt_liberacao_w				timestamp;
cd_estabelecimento_w		bigint;
cd_evolucao_w				bigint;
nr_seq_grupo_w				bigint;
ie_tipo_vinculo_w			varchar(3);
cd_perfil_w					integer	:= obter_perfil_ativo;
cd_material_w				bigint;
nr_seq_proc_w				bigint;
nr_seq_proc_interno_w		bigint;
cd_procedimento_w			bigint;
ie_origem_proced_w			bigint;
cd_item_w					bigint;
nr_prescricao_w				prescr_medica.nr_prescricao%type;
atend_pac_dispositivo_w     atend_pac_dispositivo%ROWTYPE;
c01 CURSOR FOR
SELECT	distinct substr(b.ds_material,1,60)		
from	prescr_mat_hor a,
		material b
WHERE	b.cd_material 		= a.cd_material	
and		a.nr_prescricao 	= nr_prescricao_w
and   	a.nr_seq_superior in (  SELECT x.nr_seq_material
								from  prescr_mat_hor x
								where x.nr_sequencia = nr_seq_horario_p)
and   	a.ie_agrupador in (3,7);						

C02 CURSOR FOR
SELECT	nr_seq_grupo,
		ie_tipo_vinculo
from	tipo_evolucao_pac_grupo
where	cd_tipo_evolucao = ie_evolucao_clinica_w;


BEGIN

if (nr_seq_horario_p IS NOT NULL AND nr_seq_horario_p::text <> '') then

	nr_prescricao_w	:= nr_prescricao_p;

	if (coalesce(nr_prescricao_w,0) = 0) then
	
		select	max(nr_prescricao)
		into STRICT	nr_prescricao_w
		from	prescr_mat_hor
		where	nr_sequencia = nr_seq_horario_p;
		
	end if;
	
	if (ie_tipo_item_p	= 'E') then
		select	max(nr_seq_proc),
				max(dt_horario)
		into STRICT	nr_seq_proc_w,
				dt_horario_w
		from	pe_prescr_proc_hor
		where	nr_sequencia	= nr_seq_horario_p;
		
	elsif (ie_tipo_item_p	= 'P') then	

		select	max(cd_procedimento),
				max(ie_origem_proced),
				max(nr_seq_proc_interno),
				max(dt_horario)
		into STRICT	cd_procedimento_w,
				ie_origem_proced_w,
				nr_seq_proc_interno_w,
				dt_horario_w
		from	prescr_proc_hor
		where	nr_sequencia	= nr_seq_horario_p;
	
	else
		select	max(dt_horario),
				max(cd_material)
		into STRICT	dt_horario_w,
				cd_material_w
		from	prescr_mat_hor
		where	nr_sequencia	= nr_seq_horario_p;

		select	substr(max(ds_justificativa),1,250)
		into STRICT	ds_justificativa_w
		from	prescr_mat_alteracao
		where	nr_seq_horario = nr_seq_horario_p
		and		coalesce(ie_evento_valido, 'S') = 'S';	
	end if;
end if;

if (ie_tipo_item_p	= 'R') then
	cd_item_w := cd_recomendacao_p;
else
	cd_item_w := coalesce(cd_material_w,cd_procedimento_w);
end if;

if (ie_tipo_item_p = 'DISP') then
        select *
        into STRICT atend_pac_dispositivo_w
        from atend_pac_dispositivo
        where nr_sequencia = nr_seq_dispositivo_p;
end if;

select ds_evolucao, ie_evolucao_clinica
into STRICT    ds_evolucao_w,
        ie_evolucao_clinica_w
from ( SELECT   max(cd_perfil) cd_perfil,
                max(ds_texto) ds_evolucao,
                max(ie_evolucao_clinica) ie_evolucao_clinica
        from    adep_regra_evolucao_adm
        where   ie_tipo_item = ie_tipo_item_p
        and	    coalesce(ie_tipo_mensagem,ie_opcao_p) = ie_opcao_p
        and	    cd_perfil = cd_perfil_w
        and	    obter_se_evol_automatica(coalesce(nr_seq_proc_w, cd_item_w), ie_origem_proced_w, nr_seq_proc_interno_w, ie_tipo_item_p, nr_sequencia) = 'S'

union

        SELECT  max(cd_perfil) cd_perfil,
                max(ds_texto) ds_evolucao,
                max(ie_evolucao_clinica) ie_evolucao_clinica
        from    adep_regra_evolucao_adm
        where   ie_tipo_item = ie_tipo_item_p
        and	    coalesce(ie_tipo_mensagem,ie_opcao_p) = ie_opcao_p
        and	    coalesce(cd_perfil::text, '') = ''
        and	    obter_se_evol_automatica(coalesce(nr_seq_proc_w, cd_item_w), ie_origem_proced_w, nr_seq_proc_interno_w, ie_tipo_item_p, nr_sequencia) = 'S' ) alias13 LIMIT 1;

if	((ie_tipo_item_p in ('E','S','M', 'IAH', 'R','P','G','GA','H','DISP', 'SNE', 'NPT', 'AP', 'L', 'LD', 'MAT')) and (ds_evolucao_w IS NOT NULL AND ds_evolucao_w::text <> '')) then

	select	max(cd_pessoa_fisica),
			max(obter_nome_pf(cd_pessoa_fisica)),
			coalesce(max(ie_tipo_evolucao),'1')
	into STRICT	cd_medico_w,
			ds_usuario_w,
			ie_tipo_evol_w
	from	usuario
	where	nm_usuario = nm_usuario_p;

	select	max(cd_pessoa_fisica),
			max(cd_estabelecimento)
	into STRICT	cd_pessoa_fisica_w,
			cd_estabelecimento_w
	from	atendimento_paciente
	where	nr_atendimento	= nr_atendimento_p;

	ds_item_w	:= substr(ds_item_p,1,255);

	open C01;
	loop
	fetch C01 into	
		ds_item_ww;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		ds_item_w	:= substr(ds_item_w || ', ' || ds_item_ww,1,255);
	end loop;
	close C01;		
	
	ds_evolucao_aux_w	:= wheb_rtf_pck.GET_CABECALHO || ds_evolucao_w;

	ds_evolucao_aux_w	:= substr(replace_macro(ds_evolucao_aux_w, '@DOSE', subst_ponto_virgula_adic_zero(qt_dose_p)),1,2000);
	ds_evolucao_aux_w	:= substr(replace_macro(ds_evolucao_aux_w, '@UNIDADE', ds_unid_med_p),1,2000);
	ds_evolucao_aux_w	:= substr(replace_macro(ds_evolucao_aux_w, '@PRESCRICAO', nr_prescricao_p),1,2000);
	ds_evolucao_aux_w	:= substr(replace_macro(ds_evolucao_aux_w, '@quebra', ' \par '),1,2000);

	ds_evolucao_aux_w	:= substr(replace_macro(ds_evolucao_aux_w, '@ITEM', ds_item_p),1,2000);
	ds_evolucao_aux_w	:= substr(replace_macro(ds_evolucao_aux_w, '@DATA', PKG_DATE_FORMATERS.TO_VARCHAR(dt_horario_w,'timestamp', WHEB_USUARIO_PCK.GET_CD_ESTABELECIMENTO, nm_usuario_p)),1,2000);
	ds_evolucao_aux_w	:= substr(replace_macro(ds_evolucao_aux_w, '@USUARIO', ds_usuario_w),1,2000);
	ds_evolucao_aux_w	:= substr(replace_macro(ds_evolucao_aux_w, '@HINT', ds_hint_p),1,2000);
	ds_evolucao_aux_w	:= substr(replace_macro(ds_evolucao_aux_w, '@VIA', ie_via_adm_p),1,2000);
	ds_evolucao_aux_w	:= substr(replace_macro(ds_evolucao_aux_w, '@ds_material', ds_item_w),1,2000);

    if (ie_tipo_item_p = 'DISP') then
        ds_evolucao_aux_w	:= substr(replace_macro(ds_evolucao_aux_w, '@COMPL_ADC_DISP', obter_complem_adicional(atend_pac_dispositivo_w.nr_seq_complemento)),1,2000); --OBTER DESC
        ds_evolucao_aux_w	:= substr(replace_macro(ds_evolucao_aux_w, '@CALIBRE_DISP', obter_calibre(atend_pac_dispositivo_w.nr_seq_calibre)),1,2000);
        ds_evolucao_aux_w	:= substr(replace_macro(ds_evolucao_aux_w, '@COMPL_DISP', atend_pac_dispositivo_w.ds_titulo),1,2000);
        ds_evolucao_aux_w	:= substr(replace_macro(ds_evolucao_aux_w, '@ds_topografia', obter_desc_topografia_dor(atend_pac_dispositivo_w.nr_seq_topografia)),1,2000);
        ds_evolucao_aux_w	:= substr(replace_macro(ds_evolucao_aux_w, '@lado', obter_valor_dominio(1372, atend_pac_dispositivo_w.ie_lado)),1,2000);
        ds_evolucao_aux_w	:= substr(replace_macro(ds_evolucao_aux_w, '@COMPL_TOPO_DISP', atend_pac_dispositivo_w.ds_compl_topografia),1,2000);
        ds_evolucao_aux_w	:= substr(replace_macro(ds_evolucao_aux_w, '@ACAO_DISP', obter_acao_dispositivo(nr_seq_dispositivo_p, ie_opcao_disp_p, nr_seq_acao_disp_p)),1,2000); --validar
        ds_evolucao_aux_w	:= substr(replace_macro(ds_evolucao_aux_w, '@DT_INSTALACAO_DISP', PKG_DATE_FORMATERS.TO_VARCHAR(atend_pac_dispositivo_w.dt_instalacao,'timestamp', WHEB_USUARIO_PCK.GET_CD_ESTABELECIMENTO, nm_usuario_p)),1,2000);
        ds_evolucao_aux_w	:= substr(replace_macro(ds_evolucao_aux_w, '@TENTATIVAS_DISP', atend_pac_dispositivo_w.qt_tentativas),1,2000);
        ds_evolucao_aux_w	:= substr(replace_macro(ds_evolucao_aux_w, '@QT_DISP_UTILIZADOS_DISP', atend_pac_dispositivo_w.qt_disp_utilizados),1,2000);
        ds_evolucao_aux_w	:= substr(replace_macro(ds_evolucao_aux_w, '@QT_HORA_PERM_DISP', atend_pac_dispositivo_w.qt_hora_permanencia),1,2000);
        ds_evolucao_aux_w	:= substr(replace_macro(ds_evolucao_aux_w, '@DT_RETIRADA_PREV_DISP', PKG_DATE_FORMATERS.TO_VARCHAR(atend_pac_dispositivo_w.dt_retirada_prev,'timestamp', WHEB_USUARIO_PCK.GET_CD_ESTABELECIMENTO, nm_usuario_p)),1,2000);
        ds_evolucao_aux_w	:= substr(replace_macro(ds_evolucao_aux_w, '@QT_HORA_PERM_CURAT_DISP', atend_pac_dispositivo_w.qt_hora_perm_curat),1,2000);
        ds_evolucao_aux_w	:= substr(replace_macro(ds_evolucao_aux_w, '@DT_RETIR_PREV_CURAT_DISP', PKG_DATE_FORMATERS.TO_VARCHAR(atend_pac_dispositivo_w.dt_retir_prev_curat,'timestamp', WHEB_USUARIO_PCK.GET_CD_ESTABELECIMENTO, nm_usuario_p)),1,2000);

        if (atend_pac_dispositivo_w.ie_sucesso = 'S') then
            ds_evolucao_aux_w	:= substr(replace_macro(ds_evolucao_aux_w, '@SUCESSO_DISP', obter_desc_expressao(327113)),1,2000);
        else
            ds_evolucao_aux_w	:= substr(replace_macro(ds_evolucao_aux_w, '@SUCESSO_DISP', obter_desc_expressao(327114)),1,2000);
        end if;

        if (atend_pac_dispositivo_w.ie_sne = 'S') then
            ds_evolucao_aux_w	:= substr(replace_macro(ds_evolucao_aux_w, '@SNE_DISP', obter_desc_expressao(327113)),1,2000);
        else
            ds_evolucao_aux_w	:= substr(replace_macro(ds_evolucao_aux_w, '@SNE_DISP', obter_desc_expressao(327114)),1,2000);
        end if;

        if (atend_pac_dispositivo_w.ie_bronco = 'S') then
            ds_evolucao_aux_w	:= substr(replace_macro(ds_evolucao_aux_w, '@BRONCO_DISP', obter_desc_expressao(327113)),1,2000);
        else
            ds_evolucao_aux_w	:= substr(replace_macro(ds_evolucao_aux_w, '@BRONCO_DISP', obter_desc_expressao(327114)),1,2000);
        end if;

        if (atend_pac_dispositivo_w.ie_inconsciente = 'S') then
            ds_evolucao_aux_w	:= substr(replace_macro(ds_evolucao_aux_w, '@INCONSCIENTE_DISP', obter_desc_expressao(327113)),1,2000);
        else
            ds_evolucao_aux_w	:= substr(replace_macro(ds_evolucao_aux_w, '@INCONSCIENTE_DISP', obter_desc_expressao(327114)),1,2000);
        end if;

        ds_evolucao_aux_w	:= substr(replace_macro(ds_evolucao_aux_w, '@observacao', atend_pac_dispositivo_w.ds_observacao),1,2000);

    end if;
	if ((trim(both ds_justificativa_w) IS NOT NULL AND (trim(both ds_justificativa_w))::text <> '')) then
		ds_exp_just_w := obter_desc_expressao_idioma(325773, null, wheb_usuario_pck.get_nr_seq_idioma);
		ds_evolucao_aux_w := substr(ds_evolucao_aux_w || wheb_rtf_pck.get_quebra_linha || ds_exp_just_w || substr(ds_justificativa_w,1,255),1,2000);
	end if;
	ds_evolucao_aux_w	:= ds_evolucao_aux_w || wheb_rtf_pck.get_rodape;
	
	VarGerarLib_w := Obter_Param_Usuario(1113, 634, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, VarGerarLib_w);
	
	select	nextval('evolucao_paciente_seq')
	into STRICT	cd_evolucao_w
	;
	
	if (VarGerarLib_w = 'S') then
		dt_liberacao_w	:= clock_timestamp();
	end if;

	insert into evolucao_paciente(
		cd_evolucao,
		ie_tipo_evolucao,
		dt_evolucao,
		cd_pessoa_fisica,
		dt_atualizacao,
		nm_usuario,
		nr_atendimento,
		ds_evolucao,
		cd_medico,
		dt_liberacao,
		ie_evolucao_clinica,
		ie_situacao,
		ie_palm)
	values (cd_evolucao_w,
		ie_tipo_evol_w,
		coalesce(dt_evento_p, clock_timestamp()),
		cd_pessoa_fisica_w,
		clock_timestamp(),
		nm_usuario_p,
		nr_atendimento_p,
		ds_evolucao_aux_w,
		cd_medico_w,
		dt_liberacao_w,
		ie_evolucao_clinica_w,
		'A',
		ie_palm_p);


	if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;
	
	open C02;
	loop
	fetch C02 into	
		nr_seq_grupo_w,
		ie_tipo_vinculo_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		if (coalesce(ie_tipo_vinculo_w,'V') = 'D') then	
			CALL desvincular_atendimento_grupo(nr_atendimento_p, nm_usuario_p, nr_seq_grupo_w);	
		else
			if (coalesce(nr_atendimento_p::text, '') = '') or (nr_atendimento_p = 0) then
				CALL vincular_atendimento_grupo(nr_atendimento_p,cd_pessoa_fisica_w,1,nr_seq_grupo_w,nm_usuario_p);
			else
				CALL vincular_atendimento_grupo(nr_atendimento_p,cd_pessoa_fisica_w,0,nr_seq_grupo_w,nm_usuario_p);
			end if;
		end if;
		end;
	end loop;
	close C02;
	
	cd_evolucao_p := cd_evolucao_w;

end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_evolpaci_automa ( ie_tipo_item_p text, nm_usuario_p text, nr_atendimento_p text, ds_item_p text, nr_seq_horario_p bigint, ie_opcao_p text, ds_hint_p text, dt_evento_p timestamp default clock_timestamp(), nr_prescricao_p bigint default null, qt_dose_p bigint default null, ds_unid_med_p text default null, ie_via_adm_p text default null, cd_evolucao_p INOUT bigint DEFAULT NULL, ie_palm_p text default 'S', cd_recomendacao_p bigint default null, nr_seq_dispositivo_p bigint default null, ie_opcao_disp_p text default null, nr_seq_acao_disp_p bigint default null) FROM PUBLIC;

