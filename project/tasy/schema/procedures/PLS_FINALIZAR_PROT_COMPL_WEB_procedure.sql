-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_finalizar_prot_compl_web ( nr_seq_protocolo_p bigint, cd_estabelecimento_p bigint, nr_seq_prestador_p bigint, nm_usuario_p text, ie_trans_contas_p text, ie_finalizado_p INOUT text) AS $body$
DECLARE


/*
ie_finalizado_p = 	
	V : Protocolo sem contas
	CP : Todas as contas do protocolo estão pendentes de complemento
	F: Protocolo finalizado
	P: Algumas contas do protocolo estão pendetentes de complemento
*/
nr_seq_prestador_w		bigint;
nr_seq_protocolo_w		bigint;	
nr_lote_w			bigint;
qt_contas_pend_compl_w		bigint;
qt_conta_w			bigint;
nr_seq_conta_compl_w		bigint;
dt_mes_competencia_w		timestamp;
nr_seq_conta_w			bigint;
ie_analise_complemento_w	pls_param_analise_conta.ie_analise_complemento%type;
qt_contas_protocolo_w		integer;
ie_gravar_quantidade_w		varchar(1)	:= 'N';
ie_competencia_w		varchar(1);
ie_situacao_w			pls_protocolo_conta.ie_situacao%type;
ie_tipo_guia_w			pls_protocolo_conta.ie_tipo_guia%type;

C01 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_conta
	where	nr_seq_protocolo = nr_seq_protocolo_w
	and	ie_status	!= 'C';
	
c02 CURSOR FOR
	SELECT	a.nr_sequencia
	from	pls_conta a
	where	a.nr_seq_protocolo = nr_seq_protocolo_w
	and	ie_status	!= 'C'
	and (exists (SELECT	1
			from	pls_guia_plano x
			where	x.nr_sequencia		= a.nr_seq_guia
			and	x.ie_estagio		= 8));


BEGIN
nr_seq_protocolo_w := nr_seq_protocolo_p;
nr_seq_prestador_w := nr_seq_prestador_p;

select	max(ie_situacao),
	max(ie_tipo_guia)
into STRICT	ie_situacao_w,
	ie_tipo_guia_w
from	pls_protocolo_conta
where	nr_sequencia = nr_seq_protocolo_w;

if (ie_situacao_w <> 'I') then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(989443); --Protocolo já integrado por outro usuário. Favor atualizar a lista de protocolo pendentes
end if;

/* Francisco - 04/07/2012 - Obter contas cujas guias já foram canceladas e colocar em protocolo rejeitado */

open C02;
loop
fetch C02 into	
	nr_seq_conta_compl_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin
	CALL pls_gerar_protocolo_rejeitado(nr_seq_conta_compl_w,nm_usuario_p);
	end;
end loop;
close C02;

if (ie_trans_contas_p = 'S') then
	CALL pls_transf_contas_compl_web(nr_seq_protocolo_w,nm_usuario_p,cd_estabelecimento_p);
end if;

-- Contas do protocolo
select	count(1)
into STRICT	qt_conta_w
from	pls_conta
where	nr_seq_protocolo = nr_seq_protocolo_w
and	ie_status	!= 'C';

-- Contas pendentes de complemento
select	count(1)
into STRICT	qt_contas_pend_compl_w
from	pls_conta
where	nr_seq_protocolo = nr_seq_protocolo_w
and	coalesce(dt_lib_complemento::text, '') = ''
and	ie_status	!= 'C';
	
if (qt_conta_w = 0) then
	ie_finalizado_p := 'V';
elsif (qt_contas_pend_compl_w = qt_conta_w) then
	ie_finalizado_p := 'CP';
elsif (qt_contas_pend_compl_w = 0) then
	
	select	max(ie_analise_complemento)
	into STRICT	ie_analise_complemento_w
	from	PLS_PARAM_ANALISE_CONTA
	where	cd_estabelecimento	= cd_estabelecimento_p;
	
	dt_mes_competencia_w	:= pls_obter_dataref_prot_imp(nr_seq_prestador_w, 'C',clock_timestamp(),
								clock_timestamp(), clock_timestamp(),clock_timestamp(),
								ie_tipo_guia_w, nr_seq_protocolo_w,cd_estabelecimento_p);
	
	/*Leitura do parâmetro [10] OPSW - Contas médicas - Ao confirmar a integração do protocolo, gravar a quantidade de contas no mesmo*/

	ie_gravar_quantidade_w	:= pls_obter_param_padrao_funcao(10, 1249);
	
	if (ie_gravar_quantidade_w = 'S') then
		select 	count(1)
		into STRICT	qt_contas_protocolo_w
		from 	pls_conta
		where	nr_seq_protocolo	= nr_seq_protocolo_w;
	end if;
	
	ie_competencia_w	:= pls_obter_se_comp_fechada(dt_mes_competencia_w);
		
	if (ie_competencia_w	= 'S') then
		begin
		CALL wheb_mensagem_pck.exibir_mensagem_abort(495129);
		end;
	end if;
		
	update	pls_protocolo_conta
	set	ie_situacao 		= 'D',
		dt_mes_competencia	= dt_mes_competencia_w,
		dt_protocolo		= dt_mes_competencia_w,
		dt_recebimento		= clock_timestamp(),
		nm_usuario		= nm_usuario_p,
		dt_atualizacao		= clock_timestamp(),
		qt_contas_informadas    = coalesce(qt_contas_protocolo_w,0)
	where	nr_sequencia		= nr_seq_protocolo_w;
	commit; --Adicionado o commit aqui pois caso dois usuario visualizem o mesmo protocolo evita do protocolo ser complementado duas vezes
	
	open C01;
	loop
	fetch C01 into	
		nr_seq_conta_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		
		update 	pls_conta
		set	cd_guia_imp   			= cd_guia,
			cd_guia_prestador_imp  		= cd_guia_prestador,         
			cd_guia_solic_imp		= cd_guia_referencia,
			cd_medico_executor_imp 		= cd_medico_executor,         
			cd_medico_solicitante_imp 	= cd_medico_solicitante,      
			cd_senha_imp 			= cd_senha,                        
		        ds_observacao_imp  		= ds_observacao,             
			dt_alta_imp 			= dt_alta,                    
			dt_atendimento_imp 		= dt_atendimento,             
			dt_atualizacao     		= clock_timestamp(),            
			dt_autorizacao_imp   		= dt_autorizacao,           
			dt_emissao_imp  		= dt_emissao,                
			dt_entrada_imp   		= dt_entrada,               
			dt_fim_tratamento_imp 		= dt_fim_tratamento,          
			dt_validade_senha_imp   	= dt_validade_senha,        
			ie_aborto_imp  			= ie_aborto,                 
			ie_atend_rn_sala_parto_imp  	= ie_atend_rn_sala_parto,    
			ie_baixo_peso_imp  		= ie_baixo_peso,             
			ie_carater_internacao_imp 	= ie_carater_internacao,      
			ie_complicacao_neonatal_imp  	= ie_complicacao_neonatal,   
			ie_complicacao_puerperio_imp  	= ie_complicacao_puerperio,  
			ie_gestacao_imp 		= ie_gestacao,                
			ie_indicacao_acidente_imp  	= ie_indicacao_acidente,     
			ie_obito_imp  			= ie_obito,                  
			ie_parto_cesaria_imp   		= ie_parto_cesaria,         
			ie_parto_normal_imp  		= ie_parto_normal,           
			ie_regime_internacao_imp   	= ie_regime_internacao,
			ie_tipo_doenca_imp 		= ie_tipo_doenca,             
			ie_tipo_faturamento_imp		= ie_tipo_faturamento,
			ie_transtorno_imp		= ie_transtorno,             
			nm_usuario  			= nm_usuario_p,
			nr_crm_exec_imp  		= nr_crm_exec,
			nr_seq_clinica_imp		= nr_seq_clinica, 
			nr_seq_prestador_exec_imp_ref  	= nr_seq_prestador_exec,     
			nr_seq_prestador_exec_imp	= nr_seq_prestador_exec,     
			nr_seq_prestador_imp		= nr_seq_prestador,            
			qt_nasc_mortos_imp   		= qt_nasc_mortos,            
			qt_nasc_vivos_imp  		= qt_nasc_vivos,             
			qt_nasc_vivos_prematuros_imp  	= qt_nasc_vivos_prematuros,  
			qt_obito_precoce_imp   		= qt_obito_precoce,         
			qt_obito_tardio_imp 		= qt_obito_tardio,            
			sg_conselho_exec_imp   		= sg_conselho_exec,         
			sg_conselho_solic_imp  		= sg_conselho_solic,                              
			uf_crm_exec_imp  		= uf_crm_exec,
			ie_tipo_atendimento_imp     	= (SELECT cd_tiss from pls_tipo_atendimento x where x.nr_sequencia = nr_seq_tipo_atendimento),   
			cd_tipo_acomodacao_imp  	= (select cd_tiss from pls_tipo_acomodacao x where x.nr_sequencia = nr_seq_tipo_acomodacao),
			ie_funcao_executor_imp		= (select cd_tiss from pls_grau_participacao x where x.nr_sequencia = nr_seq_grau_partic),             
			cd_usuario_plano_imp 		= pls_obter_dados_segurado(nr_seq_segurado,'CR')  			
		where	nr_sequencia = nr_seq_conta_w;
		
		update	pls_conta_mat
		set	cd_material_imp  		= nr_seq_material,
			dt_atualizacao 			= clock_timestamp(),                
			dt_fim_atend_imp  		= dt_fim_atend,             
			dt_inicio_atend_imp  		= dt_inicio_atend,           
			ie_origem_preco_imp 		= ie_origem_preco,            
			ie_tipo_despesa_imp 		= ie_tipo_despesa,             
			nm_usuario 			= nm_usuario_p,                    
			tx_reducao_acrescimo_imp 	= tx_reducao_acrescimo       
		where	nr_seq_conta = nr_seq_conta_w;
		
		update	pls_conta_proc
		set	nm_usuario 			= nm_usuario_p,
			cd_porte_anestesico_imp 	= cd_porte_anestesico,
			cd_procedimento_imp  		= cd_procedimento,           
			dt_fim_proc_imp 		= dt_fim_proc,                
			dt_inicio_proc_imp 		= dt_inicio_proc,             
			dt_procedimento_imp  		= dt_procedimento,           
			ie_tipo_despesa_imp  		= ie_tipo_despesa,           
			ie_via_acesso_imp 		= ie_via_acesso              
		where	nr_seq_conta = nr_seq_conta_w;
		
		update	pls_diagnostico_conta
		set	nm_usuario 			= nm_usuario_p,
			cd_doenca_imp 			= cd_doenca,
			ds_diagnostico_imp 		= ds_diagnostico,             
			ie_classificacao_imp 		= ie_classificacao,           
			ie_indicacao_acidente_imp  	= ie_indicacao_acidente,     
			ie_tipo_doenca_imp 		= ie_tipo_doenca             
		where	nr_seq_conta = nr_seq_conta_w;
		
		update	pls_proc_participante a
		set	nm_usuario		= nm_usuario_p,
			cd_cbo_saude_imp 	= nr_seq_cbo_saude,
			cd_medico_imp  		= cd_medico,                 
			cd_prestador_imp  	= nr_seq_prestador,              
			ie_funcao_medico_imp  	= (SELECT cd_tiss from pls_grau_participacao x where x.nr_sequencia = nr_seq_grau_partic),             
			uf_crm_imp  		= uf_conselho                    
		where	a.nr_seq_conta_proc in (select	x.nr_sequencia
						from	pls_conta_proc x
						where	x.nr_seq_conta 	= nr_seq_conta_w
						and	x.nr_sequencia	= a.nr_seq_conta_proc);
		end;
	end loop;
	close C01;
	
	nr_lote_w := pls_gerar_lote_analise(nr_seq_prestador_w, null, nm_usuario_p, cd_estabelecimento_p, null, nr_lote_w);
				
	CALL pls_vinc_protocolo_lote_conta(nr_lote_w, nr_seq_protocolo_w, nm_usuario_p);
	
	if ( ie_analise_complemento_w = 'S') then

		CALL pls_gerar_analise_lote(	nr_lote_w,'N','N',
					cd_estabelecimento_p, nm_usuario_p, null,
					'N',null);
	--aaschlote 09/03/2015 OS 1017136 - Processamento via JOB
	elsif (ie_analise_complemento_w = 'P') then
		insert into pls_cta_lt_ger_lote_compl(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
				nr_seq_lote_protocolo,DT_SOLICITACAO,IE_STATUS)
		values (	nextval('pls_cta_lt_ger_lote_compl_seq'),clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,
				nr_lote_w,clock_timestamp(),'P');
	
	end if;
	
	ie_finalizado_p := 'F';
else
	ie_finalizado_p := 'P';
end if;
	
commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_finalizar_prot_compl_web ( nr_seq_protocolo_p bigint, cd_estabelecimento_p bigint, nr_seq_prestador_p bigint, nm_usuario_p text, ie_trans_contas_p text, ie_finalizado_p INOUT text) FROM PUBLIC;

