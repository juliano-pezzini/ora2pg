-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consiste_regra_aprov_ordem ( cd_local_estoque_p bigint, cd_material_p bigint, cd_centro_custo_p bigint, cd_setor_atendimento_p bigint, nr_item_oci_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, nr_ordem_compra_p bigint, ds_erro_p INOUT text) AS $body$
DECLARE

 
 
 
ie_urgente_w			varchar(1);
cd_processo_Aprov_w		bigint;
qt_erro_w				integer;
ds_erro_w			varchar(2000);
cd_cgc_fornecedor_w		varchar(14);
cd_pessoa_fisica_w		varchar(10);
cd_conta_contabil_w		varchar(20);


BEGIN 
 
select 	coalesce(max(ie_urgente),'N'), 
	max(cd_cgc_fornecedor), 
	max(cd_pessoa_fisica) 
into STRICT	ie_urgente_w, 
	cd_cgc_fornecedor_w, 
	cd_pessoa_fisica_w 
from	ordem_compra 
where	nr_ordem_compra	= nr_ordem_compra_p;
 
if (cd_cgc_fornecedor_w IS NOT NULL AND cd_cgc_fornecedor_w::text <> '') then 
	cd_pessoa_fisica_w	:= null;
end if;
 
select	cd_conta_contabil 
into STRICT	cd_conta_contabil_w 
from	ordem_compra_item 
where	nr_ordem_compra = nr_ordem_compra_p 
and	nr_item_oci = nr_item_oci_p;
 
cd_processo_Aprov_w := Obter_Processo_Aprovacao( 
		cd_material_p, cd_centro_custo_p, cd_setor_atendimento_p, cd_local_estoque_p, null,  -- cd_local_estoque_destino_p - Usado somente na requisição 
		null,  -- cd_operacao_estoque_p    - Usado somente na requisição 
		cd_conta_contabil_w, cd_cgc_fornecedor_w, cd_pessoa_fisica_w, 'O', ie_urgente_w, cd_estabelecimento_p, null, null, nr_ordem_compra_p, cd_processo_Aprov_w);
		 
if (coalesce(cd_processo_Aprov_w, 0) = 0) then 
		ds_erro_w := substr(ds_erro_w || WHEB_MENSAGEM_PCK.get_texto(278995) || cd_material_p || WHEB_MENSAGEM_PCK.get_texto(278996) || chr(13) || chr(10),1,2000);
elsif (coalesce(cd_processo_Aprov_w, 0) > 0) then 
	begin 
 
	select	count(*) 
	into STRICT	qt_erro_w 
	from	processo_aprov_resp 
	where	cd_processo_aprov = cd_processo_Aprov_w 
	and	ie_ordem_compra = 'S';
	if (qt_erro_w = 0) then 
		ds_erro_w := substr(ds_erro_w || WHEB_MENSAGEM_PCK.get_texto(278995) || cd_material_p || WHEB_MENSAGEM_PCK.get_texto(278997) || chr(13) || chr(10),1,2000);
	end if;
 
 
	if (coalesce(cd_centro_custo_p, 0) = 0) then 
		select	count(*) 
		into STRICT	qt_erro_w 
		from	processo_aprov_resp 
		where	cd_processo_aprov = cd_processo_Aprov_w 
		and	ie_ordem_compra = 'S' 
		and	ie_responsavel <> 'R';
		if (qt_erro_w = 0) then 
			ds_erro_w := substr(ds_erro_w || WHEB_MENSAGEM_PCK.get_texto(279000) || cd_material_p || WHEB_MENSAGEM_PCK.get_texto(278999) || chr(13) || chr(10),1,2000);
		end if;
	end if;
 
 
	select	count(*) 
	into STRICT	qt_erro_w 
	from	processo_aprov_resp 
	where	cd_processo_aprov = cd_processo_Aprov_w 
	and	ie_ordem_compra = 'S' 
	and	ie_responsavel = 'C' 
	and	coalesce(cd_cargo::text, '') = '';
	if (qt_erro_w > 0) then 
		ds_erro_w := substr(ds_erro_w || WHEB_MENSAGEM_PCK.get_texto(278995) || cd_material_p || WHEB_MENSAGEM_PCK.get_texto(279002) || chr(13) || chr(10),1,2000);
	end if;
 
 
	if (coalesce(cd_centro_custo_p, 0) > 0) then 
		begin 
		select	count(*) 
		into STRICT	qt_erro_w 
		from	processo_aprov_resp 
		where	cd_processo_aprov = cd_processo_Aprov_w 
		and	ie_responsavel = 'R';
		if (qt_erro_w > 0) then 
 
			select	count(*) 
			into STRICT	qt_erro_w 
			from	cargo a, 
				cargo_centro_custo b 
			where	a.cd_cargo = b.cd_cargo 
			and	b.cd_centro_custo = cd_centro_custo_p 
			and	a.ie_situacao = 'A';
 
			if (qt_erro_w = 0) then 
				ds_erro_w := substr(ds_erro_w || WHEB_MENSAGEM_PCK.get_texto(279003) || chr(13) || chr(10),1,2000);
			end if;
		end if;
		end;
	end if;
 
	end;
end if;
ds_erro_p	:=	ds_erro_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consiste_regra_aprov_ordem ( cd_local_estoque_p bigint, cd_material_p bigint, cd_centro_custo_p bigint, cd_setor_atendimento_p bigint, nr_item_oci_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, nr_ordem_compra_p bigint, ds_erro_p INOUT text) FROM PUBLIC;

