-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_consistir_segurado_cat ( nr_seq_cat_p bigint, nm_usuario_p text, ie_acao_p text, ds_retorno_p INOUT text) AS $body$
DECLARE

 
/*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
Finalidade:  Consistir o segurado através do cadastro CAT 
---------------------------------------------------------------------------------------------------------------------------------------------------- 
Locais de chamada direta: 
[ ] Objetos do dicionário [ x ] Tasy (Delphi/Java) [ x ] Portal [ ] Relatórios [ ] Outros: 
 ---------------------------------------------------------------------------------------------------------------------------------------------------- 
Pontos de atenção:  
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
	IE_ACAO_P 
	 
	S - Gravar solicitação de alteração 
	A - Alterar cadastro de pessoa física diretamente 
	N - Não realiza ação 
*/ 
 
nr_seq_segurado_w		bigint;
cd_pessoa_fisica_w		varchar(10);
nr_seq_solicitacao_w		bigint;
ds_retorno_w			varchar(4000)	:= null;
nr_seq_solic_w			bigint;
/* Dados do segurado */
nm_mae_w			varchar(60);
dt_nascimento_w			timestamp;
ie_sexo_w			smallint;
ie_sexo_ww			varchar(1);
ie_estado_civil_w		smallint;
ie_estado_civil_ww		varchar(1);
nr_ctps_w			pessoa_fisica.nr_ctps%type;
nr_serie_ctps_w			pessoa_fisica.nr_serie_ctps%type;
dt_emissao_ctps_w		timestamp;
uf_emissora_ctps_w		varchar(2);
nr_identidade_w			varchar(15);
dt_emissao_ci_w			timestamp;
sg_emissora_ci_w		valor_dominio.vl_dominio%type;
ds_orgao_emissor_ci_w		pessoa_fisica.ds_orgao_emissor_ci%type;
nr_pis_pasep_w			varchar(11);
ds_endereco_w			varchar(40);
ds_complemento_w		varchar(40);
ds_bairro_w			varchar(40);
cd_cep_w			varchar(15);
ds_municipio_w			varchar(100);
sg_estado_w			valor_dominio.vl_dominio%type;
nr_ddd_telefone_w		varchar(3);
nr_telefone_w			varchar(15);
cd_cbo_w			varchar(6);
/* Dados da CAT */
nm_mae_cat_w			varchar(60);
dt_nascimento_cat_w		timestamp;
ie_sexo_cat_w			smallint;
ie_estado_civil_cat_w		smallint;
nr_ctps_cat_w			pls_cat.nr_ctps%type;
nr_serie_ctps_cat_w		pls_cat.nr_serie_ctps%type;
dt_emissao_ctps_cat_w		timestamp;
uf_emissora_ctps_cat_w		varchar(2);
nr_identidade_cat_w		varchar(15);
dt_emissao_ci_cat_w		timestamp;
sg_emissora_ci_cat_w		valor_dominio.vl_dominio%type;
ds_orgao_emissor_ci_cat_w	pessoa_fisica.ds_orgao_emissor_ci%type;
nr_pis_pasep_cat_w		varchar(11);
ds_endereco_cat_w		varchar(40);
ds_complemento_cat_w		varchar(40);
ds_bairro_cat_w			varchar(40);
cd_cep_cat_w			varchar(15);
ds_municipio_cat_w		varchar(100);
sg_estado_cat_w			valor_dominio.vl_dominio%type;
nr_ddd_telefone_cat_w		varchar(3);
nr_telefone_cat_w		varchar(15);
cd_cbo_cat_w			varchar(6);


BEGIN 
select	a.nr_seq_segurado, 
	b.cd_pessoa_fisica 
into STRICT	nr_seq_segurado_w, 
	cd_pessoa_fisica_w 
from	pls_cat a, 
	pls_segurado b 
where	a.nr_seq_segurado	= b.nr_sequencia 
and	a.nr_sequencia	= nr_seq_cat_p;
 
 
SELECT * FROM pls_cat_obter_dados_segurado(	nr_seq_segurado_w, nm_usuario_p, nm_mae_w, dt_nascimento_w, ie_sexo_w, ie_estado_civil_w, nr_ctps_w, nr_serie_ctps_w, dt_emissao_ctps_w, uf_emissora_ctps_w, nr_identidade_w, dt_emissao_ci_w, sg_emissora_ci_w, ds_orgao_emissor_ci_w, nr_pis_pasep_w, ds_endereco_w, ds_complemento_w, ds_bairro_w, cd_cep_w, ds_municipio_w, sg_estado_w, nr_ddd_telefone_w, nr_telefone_w, cd_cbo_w) INTO STRICT nm_mae_w, dt_nascimento_w, ie_sexo_w, ie_estado_civil_w, nr_ctps_w, nr_serie_ctps_w, dt_emissao_ctps_w, uf_emissora_ctps_w, nr_identidade_w, dt_emissao_ci_w, sg_emissora_ci_w, ds_orgao_emissor_ci_w, nr_pis_pasep_w, ds_endereco_w, ds_complemento_w, ds_bairro_w, cd_cep_w, ds_municipio_w, sg_estado_w, nr_ddd_telefone_w, nr_telefone_w, cd_cbo_w;
 
select	nm_mae, 
	dt_nascimento, 
	ie_sexo, 
	ie_estado_civil, 
	nr_ctps, 
	nr_serie_ctps, 
	dt_emissao_ctps, 
	uf_emissora_ctps, 
	nr_identidade, 
	dt_emissao_ci, 
	ds_orgao_emissor_ci, 
	sg_emissora_ci, 
	nr_pis_pasep, 
	ds_endereco, 
	ds_complemento, 
	ds_bairro, 
	cd_cep, 
	nm_municipio, 
	sg_estado, 
	nr_ddd_telefone, 
	nr_telefone, 
	cd_cbo 
into STRICT	nm_mae_cat_w, 
	dt_nascimento_cat_w, 
	ie_sexo_cat_w, 
	ie_estado_civil_cat_w, 
	nr_ctps_cat_w, 
	nr_serie_ctps_cat_w, 
	dt_emissao_ctps_cat_w, 
	uf_emissora_ctps_cat_w, 
	nr_identidade_cat_w, 
	dt_emissao_ci_cat_w, 
	ds_orgao_emissor_ci_cat_w, 
	sg_emissora_ci_cat_w, 
	nr_pis_pasep_cat_w, 
	ds_endereco_cat_w, 
	ds_complemento_cat_w, 
	ds_bairro_cat_w, 
	cd_cep_cat_w, 
	ds_municipio_cat_w, 
	sg_estado_cat_w, 
	nr_ddd_telefone_cat_w, 
	nr_telefone_cat_w, 
	cd_cbo_cat_w 
from	pls_cat 
where	nr_sequencia	= nr_seq_cat_p;
 
if (ie_acao_p <> 'N') then 
	/* Nome da mãe */
 
	if (nm_mae_cat_w IS NOT NULL AND nm_mae_cat_w::text <> '') and 
		((nm_mae_w <> nm_mae_cat_w) or (coalesce(nm_mae_w::text, '') = '')) then 
		if (ie_acao_p	= 'S') then 
			select	max(a.nr_sequencia) 
			into STRICT	nr_seq_solic_w 
			from	tasy_solic_alteracao a, 
				tasy_solic_alt_campo b 
			where	a.nr_sequencia = b.nr_seq_solicitacao 
			and	upper(nm_tabela)	= 'COMPL_PESSOA_FISICA' 
			and	upper(nm_atributo)	= 'NM_CONTATO' 
			and (ds_chave_composta	= 'CD_PESSOA_FISICA='||cd_pessoa_fisica_w||'#@#@IE_TIPO_COMPLEMENTO=5') 
			and	ds_valor_old		= nm_mae_w 
			and	ds_valor_new		= nm_mae_cat_w 
			and	coalesce(dt_analise::text, '') = '';
			 
			if (coalesce(nr_seq_solic_w,0) = 0) then 
				select	coalesce(max(a.nr_sequencia), 0) 
				into STRICT	nr_seq_solic_w 
				from	tasy_solic_alteracao a, 
					tasy_solic_alt_campo b 
				where	coalesce(a.dt_analise::text, '') = '' 
				and	a.nr_sequencia = b.nr_seq_solicitacao 
				and	b.nm_tabela = 'COMPL_PESSOA_FISICA' 
				and (b.ds_chave_simples = cd_pessoa_fisica_w 
					or b.ds_chave_composta = 'CD_PESSOA_FISICA='||cd_pessoa_fisica_w||'#@#@IE_TIPO_COMPLEMENTO=5');
				 
				/* Se não encontrar uma solicitação em aberto, abre uma nova */
 
				if (nr_seq_solic_w = 0) then 
					select	nextval('tasy_solic_alteracao_seq') 
					into STRICT	nr_seq_solic_w 
					;
					 
					insert into tasy_solic_alteracao(nr_sequencia, 
						dt_atualizacao, 
						nm_usuario, 
						dt_atualizacao_nrec, 
						nm_usuario_nrec, 
						ie_status, 
						cd_funcao, 
						cd_estabelecimento) 
					values (nr_seq_solic_w, 
						clock_timestamp(), 
						to_char(nr_seq_segurado_w), 
						clock_timestamp(), 
						to_char(nr_seq_segurado_w), 
						'A', 
						wheb_usuario_pck.get_cd_funcao, 
						wheb_usuario_pck.get_cd_estabelecimento);
				end if;
				 
				insert into tasy_solic_alt_campo(nr_sequencia, 
					nm_tabela, 
					nm_atributo, 
					ds_chave_composta, 
					nr_seq_solicitacao, 
					ie_status, 
					ds_valor_old, 
					ds_valor_new, 
					dt_atualizacao, 
					nm_usuario, 
					dt_atualizacao_nrec, 
					nm_usuario_nrec) 
				values (nextval('tasy_solic_alt_campo_seq'), 
					'COMPL_PESSOA_FISICA', 
					'NM_CONTATO', 
					'CD_PESSOA_FISICA='||cd_pessoa_fisica_w||'#@#@IE_TIPO_COMPLEMENTO=5', 
					nr_seq_solic_w, 
					'P', 
					nm_mae_w, 
					nm_mae_cat_w, 
					clock_timestamp(), 
					to_char(nr_seq_segurado_w), 
					clock_timestamp(), 
					to_char(nr_seq_segurado_w));
			end if;
		elsif (ie_acao_p	= 'A') then 
			update	compl_pessoa_fisica 
			set	nm_contato	= nm_mae_cat_w, 
				nm_usuario	= nm_usuario_p, 
				dt_atualizacao	= clock_timestamp() 
			where	cd_pessoa_fisica	= cd_pessoa_fisica_w 
			and	ie_tipo_complemento	= 5;
		end if;
		ds_retorno_w	:= ds_retorno_w || 'Nome mãe de ' || nm_mae_w || ' para ' || nm_mae_cat_w || ',' || chr(13) || chr(10);
	end if;
	/* Data Nascimento */
 
	if (dt_nascimento_cat_w IS NOT NULL AND dt_nascimento_cat_w::text <> '') and 
		((dt_nascimento_w <> dt_nascimento_cat_w) or (coalesce(dt_nascimento_w::text, '') = '')) then 
		if (ie_acao_p	= 'S') then 
			nr_seq_solicitacao_w := pls_gravar_solic_alteracao(to_char(dt_nascimento_w,'dd/mm/yyyy'), to_char(dt_nascimento_cat_w,'dd/mm/yyyy'), 'DT_NASCIMENTO', 'PESSOA_FISICA', cd_pessoa_fisica_w, to_char(nr_seq_segurado_w), 'B', null, 'T', null, null, null, nr_seq_solicitacao_w);
		elsif (ie_acao_p	= 'A') then 
			update	pessoa_fisica 
			set	dt_nascimento	= dt_nascimento_cat_w, 
				nm_usuario	= nm_usuario_p, 
				dt_atualizacao	= clock_timestamp() 
			where	cd_pessoa_fisica	= cd_pessoa_fisica_w;
		end if;
		ds_retorno_w	:= ds_retorno_w || 'Data de nascimento de ' || to_char(dt_nascimento_w,'dd/mm/yyyy') || ' para ' || to_char(dt_nascimento_cat_w,'dd/mm/yyyy') || ',' || chr(13) || chr(10);
	end if;
	/* Sexo */
 
	if (ie_sexo_cat_w IS NOT NULL AND ie_sexo_cat_w::text <> '') and 
		((ie_sexo_w <> ie_sexo_cat_w) or (coalesce(ie_sexo_w::text, '') = '')) then 
		select	CASE WHEN ie_sexo_cat_w=1 THEN 'M' WHEN ie_sexo_cat_w=3 THEN 'F'  ELSE 'I' END  
		into STRICT	ie_sexo_ww 
		;
		if (ie_acao_p	= 'S') then 
			nr_seq_solicitacao_w := pls_gravar_solic_alteracao(ie_sexo_w, ie_sexo_ww, 'IE_SEXO', 'PESSOA_FISICA', cd_pessoa_fisica_w, to_char(nr_seq_segurado_w), 'B', null, 'T', null, null, null, nr_seq_solicitacao_w);
		elsif (ie_acao_p	= 'A') then 
			update	pessoa_fisica 
			set	ie_sexo			= ie_sexo_ww, 
				nm_usuario		= nm_usuario_p, 
				dt_atualizacao		= clock_timestamp() 
			where	cd_pessoa_fisica	= cd_pessoa_fisica_w;
		end if;
		ds_retorno_w	:= ds_retorno_w || 'Sexo de ' || ie_sexo_w || ' para ' || ie_sexo_cat_w || ',' || chr(13) || chr(10);
	end if;
	/* Estado civil */
 
	if (ie_estado_civil_cat_w IS NOT NULL AND ie_estado_civil_cat_w::text <> '') and 
		((ie_estado_civil_w <> ie_estado_civil_cat_w) or (coalesce(ie_estado_civil_w::text, '') = '')) then 
		select	CASE WHEN ie_estado_civil_cat_w=1 THEN '1' WHEN ie_estado_civil_cat_w=2 THEN '2' WHEN ie_estado_civil_cat_w=3 THEN '5' WHEN ie_estado_civil_cat_w=4 THEN '6' WHEN ie_estado_civil_cat_w=5 THEN '9' WHEN ie_estado_civil_cat_w=6 THEN '9' END  
		into STRICT	ie_estado_civil_ww 
		;
		if (ie_acao_p	= 'S') then 
			nr_seq_solicitacao_w := pls_gravar_solic_alteracao(ie_estado_civil_w, ie_estado_civil_ww, 'IE_ESTADO_CIVIL', 'PESSOA_FISICA', cd_pessoa_fisica_w, to_char(nr_seq_segurado_w), 'B', null, 'T', null, null, null, nr_seq_solicitacao_w);
		elsif (ie_acao_p	= 'A') then 
			update	pessoa_fisica 
			set	ie_estado_civil		= ie_estado_civil_ww, 
				nm_usuario		= nm_usuario_p, 
				dt_atualizacao		= clock_timestamp() 
			where	cd_pessoa_fisica	= cd_pessoa_fisica_w;
		end if;
		ds_retorno_w	:= ds_retorno_w || 'Estado civil de ' || ie_estado_civil_w || ' para ' || ie_estado_civil_cat_w || ',' || chr(13) || chr(10);
	end if;
	/* Nr. CTPS */
 
	if (nr_ctps_cat_w IS NOT NULL AND nr_ctps_cat_w::text <> '') and 
		((nr_ctps_w <> nr_ctps_cat_w) or (coalesce(nr_ctps_w::text, '') = '')) then 
		if (ie_acao_p	= 'S') then 
			nr_seq_solicitacao_w := pls_gravar_solic_alteracao(nr_ctps_w, nr_ctps_cat_w, 'NR_CTPS', 'PESSOA_FISICA', cd_pessoa_fisica_w, to_char(nr_seq_segurado_w), 'B', null, 'T', null, null, null, nr_seq_solicitacao_w);
		elsif (ie_acao_p	= 'A') then 
			update	pessoa_fisica 
			set	nr_ctps		= nr_ctps_cat_w, 
				nm_usuario	= nm_usuario_p, 
				dt_atualizacao	= clock_timestamp() 
			where	cd_pessoa_fisica	= cd_pessoa_fisica_w;
		end if;
		ds_retorno_w	:= ds_retorno_w || 'Nr. CTPS de ' || nr_ctps_w || ' para ' || nr_ctps_cat_w || ',' || chr(13) || chr(10);
	end if;
	/* Série CTPS */
 
	if (nr_serie_ctps_cat_w IS NOT NULL AND nr_serie_ctps_cat_w::text <> '') and 
		((nr_serie_ctps_w <> nr_serie_ctps_cat_w) or (coalesce(nr_serie_ctps_w::text, '') = '')) then 
		if (ie_acao_p	= 'S') then 
			nr_seq_solicitacao_w := pls_gravar_solic_alteracao(nr_serie_ctps_w, nr_serie_ctps_cat_w, 'NR_SERIE_CTPS', 'PESSOA_FISICA', cd_pessoa_fisica_w, to_char(nr_seq_segurado_w), 'B', null, 'T', null, null, null, nr_seq_solicitacao_w);
		elsif (ie_acao_p	= 'A') then 
			update	pessoa_fisica 
			set	nr_serie_ctps	= nr_serie_ctps_cat_w, 
				nm_usuario	= nm_usuario_p, 
				dt_atualizacao	= clock_timestamp() 
			where	cd_pessoa_fisica	= cd_pessoa_fisica_w;
		end if;
		ds_retorno_w	:= ds_retorno_w || 'Série CTPS de ' || nr_serie_ctps_w || ' para ' || nr_serie_ctps_cat_w || ',' || chr(13) || chr(10);
	end if;
	/* Data de emissão do CTPS */
 
	if (dt_emissao_ctps_cat_w IS NOT NULL AND dt_emissao_ctps_cat_w::text <> '') and 
		((dt_emissao_ctps_w <> dt_emissao_ctps_cat_w) or (coalesce(dt_emissao_ctps_w::text, '') = '')) then 
		if (ie_acao_p	= 'S') then 
			nr_seq_solicitacao_w := pls_gravar_solic_alteracao(to_char(dt_emissao_ctps_w,'dd/mm/yyyy'), to_char(dt_emissao_ctps_cat_w,'dd/mm/yyyy'), 'DT_EMISSAO_CTPS', 'PESSOA_FISICA', cd_pessoa_fisica_w, to_char(nr_seq_segurado_w), 'B', null, 'T', null, null, null, nr_seq_solicitacao_w);
		elsif (ie_acao_p	= 'A') then 
			update	pessoa_fisica 
			set	dt_emissao_ctps	= dt_emissao_ctps_cat_w, 
				nm_usuario	= nm_usuario_p, 
				dt_atualizacao	= clock_timestamp() 
			where	cd_pessoa_fisica	= cd_pessoa_fisica_w;
		end if;
		ds_retorno_w	:= ds_retorno_w || 'Data de emissão do CTPS de ' || to_char(dt_emissao_ctps_w,'dd/mm/yyyy') || ' para ' || to_char(dt_emissao_ctps_cat_w,'dd/mm/yyyy') || ',' || chr(13) || chr(10);
	end if;
	/* Unidade Federativa do CTPS */
 
	if (uf_emissora_ctps_cat_w IS NOT NULL AND uf_emissora_ctps_cat_w::text <> '') and 
		((uf_emissora_ctps_w <> uf_emissora_ctps_cat_w) or (coalesce(uf_emissora_ctps_w::text, '') = '')) then 
		if (ie_acao_p	= 'S') then 
			nr_seq_solicitacao_w := pls_gravar_solic_alteracao(uf_emissora_ctps_w, uf_emissora_ctps_cat_w, 'UF_EMISSORA_CTPS', 'PESSOA_FISICA', cd_pessoa_fisica_w, to_char(nr_seq_segurado_w), 'B', null, 'T', null, null, null, nr_seq_solicitacao_w);
		elsif (ie_acao_p	= 'A') then 
			update	pessoa_fisica 
			set	uf_emissora_ctps	= uf_emissora_ctps_cat_w, 
				nm_usuario	= nm_usuario_p, 
				dt_atualizacao	= clock_timestamp() 
			where	cd_pessoa_fisica	= cd_pessoa_fisica_w;
		end if;
		ds_retorno_w	:= ds_retorno_w || 'UF do CTPS de ' || uf_emissora_ctps_w || ' para ' || uf_emissora_ctps_cat_w || ',' || chr(13) || chr(10);
	end if;
	/* Nr. identidade */
 
	if (nr_identidade_cat_w IS NOT NULL AND nr_identidade_cat_w::text <> '') and 
		((nr_identidade_w <> nr_identidade_cat_w) or (coalesce(nr_identidade_w::text, '') = '')) then 
		if (ie_acao_p	= 'S') then 
			nr_seq_solicitacao_w := pls_gravar_solic_alteracao(nr_identidade_w, nr_identidade_cat_w, 'NR_IDENTIDADE', 'PESSOA_FISICA', cd_pessoa_fisica_w, to_char(nr_seq_segurado_w), 'B', null, 'T', null, null, null, nr_seq_solicitacao_w);
		elsif (ie_acao_p	= 'A') then 
			update	pessoa_fisica 
			set	nr_identidade	= nr_identidade_cat_w, 
				nm_usuario	= nm_usuario_p, 
				dt_atualizacao	= clock_timestamp() 
			where	cd_pessoa_fisica	= cd_pessoa_fisica_w;
		end if;
		ds_retorno_w	:= ds_retorno_w || 'Nr. identidade de ' || nr_identidade_w || ' para ' || nr_identidade_cat_w || ',' || chr(13) || chr(10);
	end if;
	/* Data de emissão da identidade */
 
	if (dt_emissao_ci_cat_w IS NOT NULL AND dt_emissao_ci_cat_w::text <> '') and 
		((dt_emissao_ci_w <> dt_emissao_ci_cat_w) or (coalesce(dt_emissao_ci_w::text, '') = '')) then 
		if (ie_acao_p	= 'S') then 
			nr_seq_solicitacao_w := pls_gravar_solic_alteracao(to_char(dt_emissao_ci_w,'dd/mm/yyyy'), to_char(dt_emissao_ci_cat_w,'dd/mm/yyyy'), 'DT_EMISSAO_CI', 'PESSOA_FISICA', cd_pessoa_fisica_w, to_char(nr_seq_segurado_w), 'B', null, 'T', null, null, null, nr_seq_solicitacao_w);
		elsif (ie_acao_p	= 'A') then 
			update	pessoa_fisica 
			set	dt_emissao_ci	= dt_emissao_ci_cat_w, 
				nm_usuario	= nm_usuario_p, 
				dt_atualizacao	= clock_timestamp() 
			where	cd_pessoa_fisica	= cd_pessoa_fisica_w;
		end if;
		ds_retorno_w	:= ds_retorno_w || 'Dt. emissão da identidade de ' || to_char(dt_emissao_ci_w,'dd/mm/yyyy') || ' para ' || to_char(dt_emissao_ci_cat_w,'dd/mm/yyyy') || ',' || chr(13) || chr(10);
	end if;
	/* Orgão emissor da identidade */
 
	if (ds_orgao_emissor_ci_cat_w IS NOT NULL AND ds_orgao_emissor_ci_cat_w::text <> '') and 
		((ds_orgao_emissor_ci_w <> ds_orgao_emissor_ci_cat_w) or (coalesce(ds_orgao_emissor_ci_w::text, '') = '')) then	 
		if (ie_acao_p	= 'S') then 
			nr_seq_solicitacao_w := pls_gravar_solic_alteracao(ds_orgao_emissor_ci_w, ds_orgao_emissor_ci_cat_w, 'DS_ORGAO_EMISSOR_CI', 'PESSOA_FISICA', cd_pessoa_fisica_w, to_char(nr_seq_segurado_w), 'B', null, 'T', null, null, null, nr_seq_solicitacao_w);
		elsif (ie_acao_p	= 'A') then 
			update	pessoa_fisica 
			set	ds_orgao_emissor_ci	= ds_orgao_emissor_ci_cat_w, 
				nm_usuario	= nm_usuario_p, 
				dt_atualizacao	= clock_timestamp() 
			where	cd_pessoa_fisica	= cd_pessoa_fisica_w;
		end if;
		ds_retorno_w	:= ds_retorno_w || 'Orgão emissor da identidade de ' || ds_orgao_emissor_ci_w || ' para ' || ds_orgao_emissor_ci_cat_w || ',' || chr(13) || chr(10);
	end if;
	/* UF emissora da identidade */
 
	if (sg_emissora_ci_cat_w IS NOT NULL AND sg_emissora_ci_cat_w::text <> '') and 
		((sg_emissora_ci_w <> sg_emissora_ci_cat_w) or (coalesce(sg_emissora_ci_w::text, '') = '')) then	 
		if (ie_acao_p	= 'S') then 
			nr_seq_solicitacao_w := pls_gravar_solic_alteracao(sg_emissora_ci_w, sg_emissora_ci_cat_w, 'SG_EMISSORA_CI', 'PESSOA_FISICA', cd_pessoa_fisica_w, to_char(nr_seq_segurado_w), 'B', null, 'T', null, null, null, nr_seq_solicitacao_w);
		elsif (ie_acao_p	= 'A') then 
			update	pessoa_fisica 
			set	sg_emissora_ci	= sg_emissora_ci_cat_w, 
				nm_usuario	= nm_usuario_p, 
				dt_atualizacao	= clock_timestamp() 
			where	cd_pessoa_fisica	= cd_pessoa_fisica_w;
		end if;
		ds_retorno_w	:= ds_retorno_w || 'UF da identidade de ' || sg_emissora_ci_w || ' para ' || sg_emissora_ci_cat_w || ',' || chr(13) || chr(10);
	end if;
	/* Nr. PIS/PASEP */
 
	if (nr_pis_pasep_cat_w IS NOT NULL AND nr_pis_pasep_cat_w::text <> '') and 
		((nr_pis_pasep_w <> nr_pis_pasep_cat_w) or (coalesce(nr_pis_pasep_w::text, '') = '')) then 
		if (ie_acao_p	= 'S') then 
			nr_seq_solicitacao_w := pls_gravar_solic_alteracao(nr_pis_pasep_w, nr_pis_pasep_cat_w, 'NR_PIS_PASEP', 'PESSOA_FISICA', cd_pessoa_fisica_w, to_char(nr_seq_segurado_w), 'B', null, 'T', null, null, null, nr_seq_solicitacao_w);
		elsif (ie_acao_p	= 'A') then 
			update	pessoa_fisica 
			set	nr_pis_pasep	= nr_pis_pasep_cat_w, 
				nm_usuario	= nm_usuario_p, 
				dt_atualizacao	= clock_timestamp() 
			where	cd_pessoa_fisica	= cd_pessoa_fisica_w;
		end if;
		ds_retorno_w	:= ds_retorno_w || 'Nr. PIS/PASEP de ' || nr_pis_pasep_w || ' para ' || nr_pis_pasep_cat_w || ',' || chr(13) || chr(10);
	end if;
	/* Endereço */
 
	if (ds_endereco_cat_w IS NOT NULL AND ds_endereco_cat_w::text <> '') and 
		((ds_endereco_w <> ds_endereco_cat_w) or (coalesce(ds_endereco_w::text, '') = '')) then	 
		if (ie_acao_p	= 'S') then 
			nr_seq_solicitacao_w := pls_gravar_solic_alteracao(ds_endereco_w, ds_endereco_cat_w, 'DS_ENDERECO', 'COMPL_PESSOA_FISICA', cd_pessoa_fisica_w, to_char(nr_seq_segurado_w), 'B', null, 'T', 1, null, null, nr_seq_solicitacao_w);
		elsif (ie_acao_p	= 'A') then 
			update	compl_pessoa_fisica 
			set	ds_endereco	= ds_endereco_cat_w, 
				nm_usuario	= nm_usuario_p, 
				dt_atualizacao	= clock_timestamp() 
			where	cd_pessoa_fisica	= cd_pessoa_fisica_w 
			and	ie_tipo_complemento	= 1;
		end if;
		ds_retorno_w	:= ds_retorno_w || 'Endereço de ' || ds_endereco_w || ' para ' || ds_endereco_cat_w || ',' || chr(13) || chr(10);
	end if;
	/* Complemento */
 
	if (ds_complemento_cat_w IS NOT NULL AND ds_complemento_cat_w::text <> '') and 
		((ds_complemento_w <> ds_complemento_cat_w) or (coalesce(ds_complemento_w::text, '') = '')) then	 
		if (ie_acao_p	= 'S') then 
			nr_seq_solicitacao_w := pls_gravar_solic_alteracao(ds_complemento_w, ds_complemento_cat_w, 'DS_COMPLEMENTO', 'COMPL_PESSOA_FISICA', cd_pessoa_fisica_w, to_char(nr_seq_segurado_w), 'B', null, 'T', 1, null, null, nr_seq_solicitacao_w);
		elsif (ie_acao_p	= 'A') then 
			update	compl_pessoa_fisica 
			set	ds_complemento		= ds_complemento_cat_w, 
				nm_usuario		= nm_usuario_p, 
				dt_atualizacao		= clock_timestamp() 
			where	cd_pessoa_fisica	= cd_pessoa_fisica_w 
			and	ie_tipo_complemento	= 1;
		end if;
		ds_retorno_w	:= ds_retorno_w || 'Complemento de ' || ds_complemento_w || ' para ' || ds_complemento_cat_w || ',' || chr(13) || chr(10);
	end if;
	/* Bairro */
 
	if (ds_bairro_cat_w IS NOT NULL AND ds_bairro_cat_w::text <> '') and 
		((ds_bairro_w <> ds_bairro_cat_w) or (coalesce(ds_bairro_w::text, '') = '')) then 
		if (ie_acao_p	= 'S') then 
			nr_seq_solicitacao_w := pls_gravar_solic_alteracao(ds_bairro_w, ds_bairro_cat_w, 'DS_BAIRRO', 'COMPL_PESSOA_FISICA', cd_pessoa_fisica_w, to_char(nr_seq_segurado_w), 'B', null, 'T', 1, null, null, nr_seq_solicitacao_w);
		elsif (ie_acao_p	= 'A') then 
			update	compl_pessoa_fisica 
			set	ds_bairro	= ds_bairro_cat_w, 
				nm_usuario	= nm_usuario_p, 
				dt_atualizacao	= clock_timestamp() 
			where	cd_pessoa_fisica	= cd_pessoa_fisica_w 
			and	ie_tipo_complemento	= 1;
		end if;
		ds_retorno_w	:= ds_retorno_w || 'Bairro de ' || ds_bairro_w || ' para ' || ds_bairro_cat_w || ',' || chr(13) || chr(10);
	end if;
	/* CEP */
 
	if (cd_cep_cat_w IS NOT NULL AND cd_cep_cat_w::text <> '') and 
		((cd_cep_w <> cd_cep_cat_w) or (coalesce(cd_cep_w::text, '') = '')) then 
		if (ie_acao_p	= 'S') then 
			nr_seq_solicitacao_w := pls_gravar_solic_alteracao(cd_cep_w, cd_cep_cat_w, 'CD_CEP', 'COMPL_PESSOA_FISICA', cd_pessoa_fisica_w, to_char(nr_seq_segurado_w), 'B', null, 'T', 1, null, null, nr_seq_solicitacao_w);
		elsif (ie_acao_p	= 'A') then 
			update	compl_pessoa_fisica 
			set	cd_cep		= cd_cep_cat_w, 
				nm_usuario	= nm_usuario_p, 
				dt_atualizacao	= clock_timestamp() 
			where	cd_pessoa_fisica	= cd_pessoa_fisica_w 
			and	ie_tipo_complemento	= 1;
		end if;
		ds_retorno_w	:= ds_retorno_w || 'CEP de ' || cd_cep_w || ' para ' || cd_cep_cat_w || ',' || chr(13) || chr(10);
	end if;
	/* Município */
 
	if (ds_municipio_cat_w IS NOT NULL AND ds_municipio_cat_w::text <> '') and 
		((ds_municipio_w <> ds_municipio_cat_w) or (coalesce(ds_municipio_w::text, '') = '')) then 
		if (ie_acao_p	= 'S') then 
			nr_seq_solicitacao_w := pls_gravar_solic_alteracao(ds_municipio_w, ds_municipio_cat_w, 'DS_MUNICIPIO', 'COMPL_PESSOA_FISICA', cd_pessoa_fisica_w, to_char(nr_seq_segurado_w), 'B', null, 'T', 1, null, null, nr_seq_solicitacao_w);
		elsif (ie_acao_p	= 'A') then 
			update	compl_pessoa_fisica 
			set	ds_municipio	= ds_municipio_cat_w, 
				nm_usuario	= nm_usuario_p, 
				dt_atualizacao	= clock_timestamp() 
			where	cd_pessoa_fisica	= cd_pessoa_fisica_w 
			and	ie_tipo_complemento	= 1;
		end if;
		ds_retorno_w	:= ds_retorno_w || 'Município de ' || ds_municipio_w || ' para ' || ds_municipio_cat_w || ',' || chr(13) || chr(10);
	end if;
	/* Estado */
 
	if (sg_estado_cat_w IS NOT NULL AND sg_estado_cat_w::text <> '') and 
		((sg_estado_w <> sg_estado_cat_w) or (coalesce(sg_estado_w::text, '') = '')) then 
		if (ie_acao_p	= 'S') then 
			nr_seq_solicitacao_w := pls_gravar_solic_alteracao(sg_estado_w, sg_estado_cat_w, 'SG_ESTADO', 'COMPL_PESSOA_FISICA', cd_pessoa_fisica_w, to_char(nr_seq_segurado_w), 'B', null, 'T', 1, null, null, nr_seq_solicitacao_w);
		elsif (ie_acao_p	= 'A') then 
			update	compl_pessoa_fisica 
			set	sg_estado	= sg_estado_cat_w, 
				nm_usuario	= nm_usuario_p, 
				dt_atualizacao	= clock_timestamp() 
			where	cd_pessoa_fisica	= cd_pessoa_fisica_w 
			and	ie_tipo_complemento	= 1;
		end if;
		ds_retorno_w	:= ds_retorno_w || 'Estado de ' || sg_estado_w || ' para ' || sg_estado_cat_w || ',' || chr(13) || chr(10);
	end if;
	/* DDD */
 
	if (nr_ddd_telefone_cat_w IS NOT NULL AND nr_ddd_telefone_cat_w::text <> '') and 
		((nr_ddd_telefone_w <> nr_ddd_telefone_cat_w) or (coalesce(nr_ddd_telefone_w::text, '') = '')) then 
		if (ie_acao_p	= 'S') then 
			nr_seq_solicitacao_w := pls_gravar_solic_alteracao(nr_ddd_telefone_w, nr_ddd_telefone_cat_w, 'NR_DDD_TELEFONE', 'COMPL_PESSOA_FISICA', cd_pessoa_fisica_w, to_char(nr_seq_segurado_w), 'B', null, 'T', 1, null, null, nr_seq_solicitacao_w);
		elsif (ie_acao_p	= 'A') then 
			update	compl_pessoa_fisica 
			set	nr_ddd_telefone	= nr_ddd_telefone_cat_w, 
				nm_usuario	= nm_usuario_p, 
				dt_atualizacao	= clock_timestamp() 
			where	cd_pessoa_fisica	= cd_pessoa_fisica_w 
			and	ie_tipo_complemento	= 1;
		end if;
		ds_retorno_w	:= ds_retorno_w || 'DDD de ' || nr_ddd_telefone_w || ' para ' || nr_ddd_telefone_cat_w || ',' || chr(13) || chr(10);
	end if;
	/* Telefone */
 
	if (nr_telefone_cat_w IS NOT NULL AND nr_telefone_cat_w::text <> '') and 
		((nr_telefone_w <> nr_telefone_cat_w) or (coalesce(nr_telefone_w::text, '') = '')) then	 
		if (ie_acao_p	= 'S') then 
			nr_seq_solicitacao_w := pls_gravar_solic_alteracao(nr_telefone_w, nr_telefone_cat_w, 'NR_TELEFONE', 'COMPL_PESSOA_FISICA', cd_pessoa_fisica_w, to_char(nr_seq_segurado_w), 'B', null, 'T', 1, null, null, nr_seq_solicitacao_w);
		elsif (ie_acao_p	= 'A') then 
			update	compl_pessoa_fisica 
			set	nr_telefone	= nr_telefone_cat_w, 
				nm_usuario	= nm_usuario_p, 
				dt_atualizacao	= clock_timestamp() 
			where	cd_pessoa_fisica	= cd_pessoa_fisica_w 
			and	ie_tipo_complemento	= 1;
		end if;
		ds_retorno_w	:= ds_retorno_w || 'Telefone de ' || nr_telefone_w || ' para ' || nr_telefone_cat_w || ',' || chr(13) || chr(10);
	end if;
	/* Nr. CBO - Felipe - Temos que ver qual CBO alterar 
	if	(cd_cbo_cat_w is not null) and 
		((cd_cbo_w <> cd_cbo_cat_w) or (cd_cbo_w is null)) then 
		if	(ie_acao_p	= 'S') then 
			pls_gravar_solic_alteracao(cd_cbo_w, cd_cbo_cat_w, 'CD_CBO_SUS', 'PESSOA_FISICA', cd_pessoa_fisica_w, to_char(nr_seq_segurado_w),null,null, nr_seq_solicitacao_w); 
		elsif	(ie_acao_p	= 'A') then 
			update	pessoa_fisica 
			set	cd_cbo_sus		= cd_cbo_cat_w, 
				nm_usuario		= nm_usuario_p, 
				dt_atualizacao		= sysdate 
			where	cd_pessoa_fisica	= cd_pessoa_fisica_w; 
		end if; 
		ds_retorno_w	:= ds_retorno_w || 'CBO de ' || cd_cbo_w || ' para ' || cd_cbo_cat_w || ',' || chr(13) || chr(10); 
	end if; 
	*/
 
	ds_retorno_p	:= substr(ds_retorno_w,1,length(substr(ds_retorno_w,1,258)) - 3);
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_consistir_segurado_cat ( nr_seq_cat_p bigint, nm_usuario_p text, ie_acao_p text, ds_retorno_p INOUT text) FROM PUBLIC;

