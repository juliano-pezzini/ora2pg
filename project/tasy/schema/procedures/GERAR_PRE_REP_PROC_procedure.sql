-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_pre_rep_proc ( nr_prescricao_orig_p bigint, nr_prescricao_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
nr_sequencia_w				integer;
nr_seq_proc_ant_w			bigint;
cd_setor_atendimento_w		bigint;
nr_agrupamento_w			integer;
ie_executar_leito_w			varchar(1);
varie_verifica_setor_w		varchar(1);
ie_amostra_w				varchar(1);
cd_procedimento_w			bigint;
cd_estabelecimento_w		bigint;
qt_procedimento_w			double precision;
ds_horarios_w				varchar(2000);
ds_observacao_w				varchar(2000);
ds_observacao_enf_w			varchar(2000);
cd_motivo_baixa_w			smallint;
dt_prescricao_w				timestamp;
dt_validade_prescr_w		timestamp;
nr_atendimento_w			bigint;
hr_setor_w					varchar(10);
dt_baixa_w					timestamp;
cd_procedimento_aih_w		varchar(15);
cd_intervalo_param_w		varchar(7);
cd_intervalo_proc_agora_w	varchar(7);
ie_origem_proced_w			bigint;
cd_intervalo_w				varchar(7);
ie_urgencia_w				varchar(1);
ie_regra_medic_w			varchar(15);
dt_emissao_setor_atend_w 	timestamp;
ds_dado_clinico_w			varchar(2000);
ie_suspenso_w				varchar(1);
cd_material_exame_w			varchar(20);
nr_seq_exame_w				bigint;
ds_material_especial_w		varchar(255);
ie_status_atend_w			smallint;
ie_origem_inf_w				varchar(1);
ie_se_necessario_w			varchar(1);
ie_acm_w					varchar(1);
nr_ocorrencia_w				double precision;
nr_seq_proc_interno_w		bigint;
qt_peca_ap_w				smallint;
ds_qualidade_peca_ap_w		varchar(2000);
ds_diag_provavel_ap_w		varchar(255);
ds_exame_anterior_ap_w		varchar(255);
nr_seq_derivado_w			bigint;
nr_seq_exame_sangue_w		bigint;
nr_seq_solic_sangue_w		bigint;
cd_unid_med_sangue_w		varchar(5);
cd_pessoa_coleta_w			varchar(10);
dt_coleta_w					timestamp;
dt_prev_execucao_ww			timestamp;
ie_avisar_result_w			varchar(1);
qt_vol_hemocomp_w			bigint;
nr_seq_prot_glic_w			bigint;
ie_respiracao_w				varchar(15);
cd_mod_vent_w				varchar(15);
ie_disp_resp_esp_w			varchar(15);
qt_fluxo_oxigenio_w			double precision;
ds_rotina_w					varchar(80);
ie_autorizacao_w			varchar(3);
ie_lado_w					varchar(1);
nr_seq_proc_w				bigint;
nr_seq_interno_w			bigint;
ie_copiar_w					varchar(10);
ie_regra_geral_w			varchar(10);
nr_seq_regra_w				bigint;
nr_seq_proc_interno_aux_w	bigint;
cd_intervalo_aux_w			varchar(50);
ie_proced_agora_w			varchar(50);
ie_regra_prim_hor_proc_w	varchar(50);
dt_validade_origem_w		timestamp;
dt_validade_nova_w			timestamp;
hr_prim_horario_proc_w		varchar(10);
cd_intervalo_proc_w			varchar(50);
hr_inicio_setor_w			varchar(50);
dt_prev_execucao_w			timestamp;
ie_situacao_w				varchar(50);
nr_prescricoes_w			varchar(255);
dt_inicio_prescr_www		timestamp;
dt_inicio_prescr_ww			timestamp;
dt_inicio_prescr_w			timestamp;
dt_primeiro_horario_w		timestamp;
dt_prescricao_www			timestamp;
nr_horas_validade_w			bigint;
qt_hora_intervalo_w			smallint;
qt_min_intervalo_w			integer;
nr_seq_proc_int_w			bigint;
nr_intervalo_ww				bigint;
nr_intervalo_w				bigint;
ds_horarios_ww				varchar(2000);
ds_horarios2_w				varchar(2000);
ds_erro_w					varchar(2000);
ie_setor_paciente_w			varchar(07);
ie_forma_exame_w			varchar(1);
ie_restring_interv_lib_w	varchar(1);
ds_horarios_aux_w			varchar(2000);
ie_regra_horarios_w			varchar(15);
dt_horario_w				timestamp;
qt_operacao_w				double precision;
ie_operacao_w				varchar(15);
ie_reordenar_w				varchar(1);
ds_justificativa_w			varchar(4000);
ie_copiar_justificativa_w 	varchar(1) := 'N';
cont_peca_w					bigint;

c01 CURSOR FOR 
SELECT	a.nr_sequencia, 
		coalesce(a.nr_agrupamento,1), 
		a.ie_executar_leito, 
		'N', 
		a.cd_procedimento, 
		a.qt_procedimento, 
		a.ds_horarios, 
		a.ds_observacao, 
		a.ds_observacao_enf, 
		0, 
		null, 
		null, 
		a.ie_origem_proced, 
		a.cd_intervalo, 
		'N', 
		CASE WHEN VarIe_verifica_setor_w='N' THEN  a.cd_setor_atendimento  ELSE coalesce(obter_setor_atend_proc(cd_estabelecimento_w, a.cd_procedimento, a.ie_origem_proced, null, a.cd_setor_atendimento, null, a.nr_seq_proc_interno, nr_atendimento_w), a.cd_setor_atendimento) END , 
		null, 
		a.ds_dado_clinico, 
		'N', 
		a.cd_material_exame, 
		a.nr_seq_exame, 
		a.ds_material_especial, 
		5, 
		a.ie_origem_inf, 
		coalesce(a.ie_se_necessario,'N'), 
		coalesce(a.ie_acm,'N'), 
		a.nr_ocorrencia, 
		a.nr_seq_proc_interno, 
		a.qt_peca_ap, 
		a.ds_qualidade_peca_ap, 
		a.ds_diag_provavel_ap, 
		a.ds_exame_anterior_ap, 
		a.nr_seq_derivado, 
		a.nr_seq_exame_sangue, 
		a.nr_seq_solic_sangue, 
		a.cd_unid_med_sangue, 
		a.cd_pessoa_coleta, 
		null, 
		'N', 
		a.qt_vol_hemocomp, 
		a.nr_seq_prot_glic, 
		a.ie_respiracao, 
		a.cd_mod_vent, 
		a.ie_disp_resp_esp, 
		a.qt_fluxo_oxigenio, 
		a.ds_rotina, 
		a.qt_hora_intervalo, 
		a.qt_min_intervalo, 
		'L', 
		a.ie_lado, 
		a.ie_forma_exame, 
		a.ds_justificativa 
from	prescr_procedimento a 
where	a.nr_prescricao	= nr_prescricao_orig_p 
and		a.ie_suspenso	<> 'S' 
and		(nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') 
and		exists (SELECT 1 from w_item_pre_rep b where b.nr_atendimento = nr_atendimento_w and b.cd_item = a.cd_procedimento and b.ie_tipo_item = 'PROC');


BEGIN 
 
select	max(cd_estabelecimento), 
		max(nr_atendimento), 
		max(cd_setor_atendimento), 
		max(dt_inicio_prescr), 
		max(dt_validade_prescr), 
		max(nr_horas_validade), 
		max(dt_prescricao) 
into STRICT	cd_estabelecimento_w, 
		nr_atendimento_w, 
		cd_setor_atendimento_w, 
		dt_inicio_prescr_w, 
		dt_validade_prescr_w, 
		nr_horas_validade_w, 
		dt_prescricao_www 
from	prescr_medica 
where	nr_prescricao	= nr_prescricao_p;
 
select	max(to_char(coalesce(hr_inicio_prescricao,clock_timestamp()),'hh24:mi')) 
into STRICT	hr_inicio_setor_w 
from	setor_atendimento 
where	cd_setor_atendimento = cd_setor_atendimento_w;
 
begin 
	dt_prescricao_w	:= to_date(to_char(clock_timestamp(),'dd/mm/yyyy ') || hr_inicio_setor_w || ':00','dd/mm/yyyy hh24:mi:ss');
exception when others then 
	dt_prescricao_w	:= clock_timestamp();
end;
 
cd_intervalo_param_w := Obter_Param_Usuario(924, 35, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, cd_intervalo_param_w);
ie_regra_medic_w := Obter_Param_Usuario(924, 259, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_regra_medic_w);
VarIe_verifica_setor_w := Obter_Param_Usuario(924, 718, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, VarIe_verifica_setor_w);
ie_restring_interv_lib_w := Obter_Param_Usuario(924, 1120, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_restring_interv_lib_w);
 
select	coalesce(max(nr_sequencia),0) 
into STRICT	nr_seq_proc_w 
from	prescr_Procedimento 
where	nr_prescricao = nr_prescricao_p;
 
open C01;
loop 
fetch C01 into 
	nr_sequencia_w, 
	nr_agrupamento_w, 
	ie_executar_leito_w, 
	ie_amostra_w, 
	cd_procedimento_w, 
	qt_procedimento_w, 
	ds_horarios_w, 
	ds_observacao_w, 
	ds_observacao_enf_w, 
	cd_motivo_baixa_w, 
	dt_baixa_w, 
	cd_procedimento_aih_w, 
	ie_origem_proced_w, 
	cd_intervalo_w, 
	ie_urgencia_w, 
	cd_setor_atendimento_w, 
	dt_emissao_setor_atend_w, 
	ds_dado_clinico_w, 
	ie_suspenso_w, 
	cd_material_exame_w, 
	nr_seq_exame_w, 
	ds_material_especial_w, 
	ie_status_atend_w, 
	ie_origem_inf_w, 
	ie_se_necessario_w, 
	ie_acm_w, 
	nr_ocorrencia_w, 
	nr_seq_proc_interno_w, 
	qt_peca_ap_w, 
	ds_qualidade_peca_ap_w, 
	ds_diag_provavel_ap_w, 
	ds_exame_anterior_ap_w, 
	nr_seq_derivado_w, 
	nr_seq_exame_sangue_w, 
	nr_seq_solic_sangue_w, 
	cd_unid_med_sangue_w, 
	cd_pessoa_coleta_w, 
	dt_coleta_w, 
	ie_avisar_result_w, 
	qt_vol_hemocomp_w, 
	nr_seq_prot_glic_w, 
	ie_respiracao_w, 
	cd_mod_vent_w, 
	ie_disp_resp_esp_w, 
	qt_fluxo_oxigenio_w, 
	ds_rotina_w, 
	qt_hora_intervalo_w, 
	qt_min_intervalo_w, 
	ie_autorizacao_w, 
	ie_lado_w, 
	ie_forma_exame_w, 
	ds_justificativa_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	 
	nr_seq_proc_ant_w	:= nr_sequencia_w;
	nr_sequencia_w		:= nr_sequencia_w + nr_seq_proc_w;
 
	IF (coalesce(nr_seq_proc_interno_w,0) > 0) THEN 
		SELECT	coalesce(MAX(ie_setor_paciente),'N') 
		INTO STRICT	ie_setor_paciente_w 
		FROM	proc_interno 
		WHERE	nr_sequencia	= nr_seq_proc_interno_w;
 
		IF (ie_setor_paciente_w = 'S') THEN 
			cd_setor_atendimento_w	:= obter_setor_atendimento(nr_atendimento_w);
		END IF;
	END IF;		
	 
	if (nr_seq_prot_glic_w IS NOT NULL AND nr_seq_prot_glic_w::text <> '') then 
		select	coalesce(max(obter_intervalo_ccg(nr_seq_prot_glic)), cd_intervalo_w) 
		into STRICT	cd_intervalo_w 
		from	prescr_procedimento 
		where	coalesce(ie_urgencia,'N') <> 'N' -- Caso o CIG/CCG seja agora, deve buscar o intervalo do protocolo na c√≥pia 
		and		nr_sequencia	= nr_seq_proc_ant_w 
		and		nr_prescricao	= nr_prescricao_orig_p;
	end if;
	 
	select	max(cd_intervalo) 
	into STRICT	cd_intervalo_w 
	from	intervalo_prescricao 
	where	ie_agora	= 'S' 
	and		ie_situacao	= 'A' 
	and 	Obter_se_intervalo(cd_intervalo,'P') = 'S' 
	and 	obter_se_exibe_intervalo(nr_prescricao_p, cd_intervalo, cd_setor_atendimento_w) = 'S';
 
	select	nextval('prescr_procedimento_seq') 
	into STRICT	nr_seq_interno_w 
	;
 
	Insert into Prescr_Procedimento( 
		nr_prescricao, 
		nr_sequencia, 
		nr_agrupamento, 
		ie_executar_leito, 
		ie_amostra, 
		cd_procedimento, 
		qt_procedimento, 
		dt_atualizacao, 
		nm_usuario, 
		ds_horarios, 
		ds_observacao, 
		ds_observacao_enf, 
		cd_motivo_baixa, 
		dt_baixa, 
		cd_procedimento_aih, 
		ie_origem_proced, 
		cd_intervalo, 
		ie_urgencia, 
		cd_setor_atendimento, 
		dt_emissao_setor_atend, 
		ds_dado_clinico, 
		dt_prev_execucao, 
		ie_suspenso, 
		cd_material_exame, 
		nr_seq_exame, 
		ds_material_especial, 
		ie_status_atend, 
		ie_origem_inf, 
		ie_se_necessario, 
		ie_acm, 
		nr_ocorrencia, 
		nr_seq_interno, 
		nr_seq_proc_interno, 
		qt_peca_ap, 
		ds_qualidade_peca_ap, 
		ds_diag_provavel_ap, 
		ds_exame_anterior_ap, 
		nr_seq_derivado, 
		nr_seq_exame_sangue, 
		nr_seq_solic_sangue, 
		cd_unid_med_sangue, 
		cd_pessoa_coleta, 
		dt_coleta, 
		ie_avisar_result, 
		qt_vol_hemocomp, 
		nr_seq_prot_glic, 
		ie_respiracao, 
		cd_mod_vent, 
		ie_disp_resp_esp, 
		qt_fluxo_oxigenio, 
		ds_rotina, 
		qt_hora_intervalo, 
		qt_min_intervalo, 
		ie_autorizacao, 
		ie_lado, 
		nr_seq_anterior, 
		nr_prescricao_original, 
		ie_forma_exame, 
		ds_justificativa) 
	values (nr_prescricao_p, 
		nr_sequencia_w, 
		nr_agrupamento_w, 
		ie_executar_leito_w, 
		ie_amostra_w, 
		cd_procedimento_w, 
		qt_procedimento_w, 
		clock_timestamp(), 
		nm_usuario_p, 
		to_char(clock_timestamp(), 'hh24:mi'), 
		ds_observacao_w, 
		ds_observacao_enf_w, 
		cd_motivo_baixa_w, 
		dt_baixa_w, 
		cd_procedimento_aih_w, 
		ie_origem_proced_w, 
		cd_intervalo_w, 
		'S', 
		cd_setor_atendimento_w, 
		dt_emissao_setor_atend_w, 
		ds_dado_clinico_w, 
		trunc(clock_timestamp(), 'mi'), 
		ie_suspenso_w, 
		cd_material_exame_w, 
		nr_seq_exame_w, 
		ds_material_especial_w, 
		ie_status_atend_w, 
		ie_origem_inf_w, 
		'N', 
		'N', 
		nr_ocorrencia_w, 
		nr_seq_interno_w, 
		nr_seq_proc_interno_w, 
		qt_peca_ap_w, 
		ds_qualidade_peca_ap_w, 
		ds_diag_provavel_ap_w, 
		ds_exame_anterior_ap_w, 
		nr_seq_derivado_w, 
		nr_seq_exame_sangue_w, 
		nr_seq_solic_sangue_w, 
		cd_unid_med_sangue_w, 
		cd_pessoa_coleta_w, 
		dt_coleta_w, 
		ie_avisar_result_w, 
		qt_vol_hemocomp_w, 
		nr_seq_prot_glic_w, 
		ie_respiracao_w, 
		cd_mod_vent_w, 
		ie_disp_resp_esp_w, 
		qt_fluxo_oxigenio_w, 
		ds_rotina_w, 
		qt_hora_intervalo_w, 
		qt_min_intervalo_w, 
		ie_autorizacao_w, 
		ie_lado_w, 
		nr_seq_proc_ant_w, 
		nr_prescricao_orig_p, 
		ie_forma_exame_w, 
		ds_justificativa_w);		
 
end loop;
close C01;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_pre_rep_proc ( nr_prescricao_orig_p bigint, nr_prescricao_p bigint, nm_usuario_p text) FROM PUBLIC;

