-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_att_classif_dependencia ( nr_seq_titular_p bigint, nm_usuario_p text, ie_commit_p text) AS $body$
DECLARE


nr_seq_classif_dependencia_w	pls_classif_dependencia.nr_sequencia%type;
nr_seq_classif_depen_ant_w	pls_classif_dependencia.nr_sequencia%type;
ds_classificacao_w		pls_classif_dependencia.ds_classificacao%type;
ds_classificacao_ant_w		pls_classif_dependencia.ds_classificacao%type;
nr_seq_contrato_w		pls_contrato.nr_sequencia%type;
ie_geracao_valores_w		pls_contrato.ie_geracao_valores%type;
qt_vidas_w			integer;
qt_regra_contrato_w		integer;
dt_liberacao_w			pls_segurado.dt_liberacao%type;

C01 CURSOR FOR
	SELECT	nr_sequencia,
		coalesce(nr_seq_classif_dependencia,0) nr_seq_classif_dependencia,
		cd_estabelecimento,
		dt_liberacao
	from	pls_segurado
	where	nr_seq_titular	= nr_seq_titular_p
	and	coalesce(dt_rescisao::text, '') = ''
	order by dt_contratacao,
		 (somente_numero(ie_titularidade))::numeric ,
		 nr_sequencia;

c01_w	C01%RowType;


BEGIN
select	max(nr_seq_contrato),
	coalesce(max(nr_seq_classif_dependencia),0),
	max(dt_liberacao)
into STRICT	nr_seq_contrato_w,
	nr_seq_classif_depen_ant_w,
	dt_liberacao_w
from	pls_segurado
where	nr_sequencia	= nr_seq_titular_p;

select	max(ie_geracao_valores)
into STRICT	ie_geracao_valores_w
from	pls_contrato
where	nr_sequencia	= nr_seq_contrato_w;
ie_geracao_valores_w	:= coalesce(ie_geracao_valores_w,'B');

select	count(1)
into STRICT	qt_regra_contrato_w
from	pls_regra_classif_depend
where	nr_seq_contrato = nr_seq_contrato_w;

qt_vidas_w := 0;

open C01;
loop
fetch C01 into
	c01_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	qt_vidas_w := qt_vidas_w + 1;

	select	max(nr_seq_classificacao)
	into STRICT	nr_seq_classif_dependencia_w
	from	pls_regra_classif_depend
	where	qt_vidas_w between coalesce(qt_vidas_inicial,qt_vidas_w) and coalesce(qt_vidas_final,qt_vidas_w)
	and	ie_titularidade	= 'D'
	and	((nr_seq_contrato = nr_seq_contrato_w) or (coalesce(nr_seq_contrato::text, '') = '' and qt_regra_contrato_w = 0));

	if (nr_seq_classif_dependencia_w <> c01_w.nr_seq_classif_dependencia) then
		select	ds_classificacao
		into STRICT	ds_classificacao_w
		from	pls_classif_dependencia
		where	nr_sequencia	= nr_seq_classif_dependencia_w;

		select	max(ds_classificacao)
		into STRICT	ds_classificacao_ant_w
		from	pls_classif_dependencia
		where	nr_sequencia	= c01_w.nr_seq_classif_dependencia;

		ds_classificacao_ant_w := substr(to_char(c01_w.nr_seq_classif_dependencia) || ' - ' || ds_classificacao_ant_w, 1,255);
		ds_classificacao_w := substr(to_char(nr_seq_classif_dependencia_w) || ' - ' || ds_classificacao_w, 1,255);

		CALL pls_gerar_segurado_historico(c01_w.nr_sequencia, '75', clock_timestamp(),
					wheb_mensagem_pck.get_texto(294153, 'DS_CLASSIF_DEPENDENCIA_ANT=' || ds_classificacao_ant_w || ';DS_CLASSIF_DEPENDENCIA=' || ds_classificacao_w),
					null, null, null, null,
					null, null, null, null,
					null, null, null, null,
					nm_usuario_p, 'N');

		update	pls_segurado
		set	nr_seq_classif_dependencia	= nr_seq_classif_dependencia_w
		where	nr_sequencia			= c01_w.nr_sequencia;

		if (ie_geracao_valores_w <> 'T') and (c01_w.dt_liberacao IS NOT NULL AND c01_w.dt_liberacao::text <> '') then -- Se gerar valor somente para titular, não pode gerar para os dependentes
			CALL pls_preco_beneficiario_pck.gravar_preco_benef(c01_w.nr_sequencia, 'AR', 'S', clock_timestamp(), 'N', null, nm_usuario_p, c01_w.cd_estabelecimento);
		end if;
	end if;
	end;
end loop;
close C01;

select	max(nr_seq_classificacao)
into STRICT	nr_seq_classif_dependencia_w
from	pls_regra_classif_depend
where	ie_titularidade	= 'T'
and	((nr_seq_contrato = nr_seq_contrato_w) or (coalesce(nr_seq_contrato::text, '') = '' and qt_regra_contrato_w = 0));

if (nr_seq_classif_dependencia_w <> nr_seq_classif_depen_ant_w) then
	select	ds_classificacao
	into STRICT	ds_classificacao_w
	from	pls_classif_dependencia
	where	nr_sequencia	= nr_seq_classif_dependencia_w;

	select	max(ds_classificacao)
	into STRICT	ds_classificacao_ant_w
	from	pls_classif_dependencia
	where	nr_sequencia	= nr_seq_classif_depen_ant_w;

	ds_classificacao_ant_w := substr(to_char(nr_seq_classif_depen_ant_w) || ' - ' || ds_classificacao_ant_w, 1,255);
	ds_classificacao_w := substr(to_char(nr_seq_classif_dependencia_w) || ' - ' || ds_classificacao_w, 1,255);

	CALL pls_gerar_segurado_historico(nr_seq_titular_p, '75', clock_timestamp(),
				wheb_mensagem_pck.get_texto(294153, 'DS_CLASSIF_DEPENDENCIA_ANT=' || ds_classificacao_ant_w || ';DS_CLASSIF_DEPENDENCIA=' || ds_classificacao_w),
				null, null, null, null,
				null, null, null, null,
				null, null, null, null,
				nm_usuario_p, 'N');

	update	pls_segurado
	set	nr_seq_classif_dependencia	= nr_seq_classif_dependencia_w
	where	nr_sequencia			= nr_seq_titular_p;

	if (ie_geracao_valores_w <> 'D') and (dt_liberacao_w IS NOT NULL AND dt_liberacao_w::text <> '') then -- Se gerar valor somente para titular, não pode gerar para os dependentes
		CALL pls_preco_beneficiario_pck.gravar_preco_benef(nr_seq_titular_p, 'AR', 'S', clock_timestamp(), 'N', null, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento);
	end if;
end if;

if (coalesce(ie_commit_p,'N') = 'S') then
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_att_classif_dependencia ( nr_seq_titular_p bigint, nm_usuario_p text, ie_commit_p text) FROM PUBLIC;

