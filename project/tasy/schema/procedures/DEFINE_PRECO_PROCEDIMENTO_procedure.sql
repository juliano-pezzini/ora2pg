-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE define_preco_procedimento ( CD_ESTABELECIMENTO_P bigint, CD_CONVENIO_P bigint, CD_CATEGORIA_P text, DT_CONTA_P timestamp, CD_PROCEDIMENTO_P bigint, CD_TIPO_ACOMODACAO_P bigint, IE_TIPO_ATENDIMENTO_P bigint, CD_SETOR_ATENDIMENTO_P bigint, CD_MEDICO_P text, CD_FUNCAO_MEDICO_P bigint, QT_IDADE_P bigint, nr_seq_exame_lab_p bigint, nr_seq_proc_interno_p bigint, cd_usuario_convenio_p text, cd_plano_p text, ie_clinica_p bigint, cd_empresa_ref_p bigint, ie_sexo_p text, VL_PROCEDIMENTO_P INOUT bigint, VL_CUSTO_OPERACIONAL_P INOUT bigint, VL_ANESTESISTA_P INOUT bigint, VL_MEDICO_P INOUT bigint, VL_AUXILIARES_P INOUT bigint, VL_MATERIAIS_P INOUT bigint, VL_PTO_PROCEDIMENTO_P INOUT bigint, VL_PTO_CUSTO_OPERAC_P INOUT bigint, VL_PTO_ANESTESISTA_P INOUT bigint, VL_PTO_MEDICO_P INOUT bigint, VL_PTO_AUXILIARES_P INOUT bigint, VL_PTO_MATERIAIS_P INOUT bigint, QT_PORTE_ANESTESICO_P INOUT bigint, QT_PONTOS_P INOUT bigint, CD_EDICAO_AMB_P INOUT bigint, ie_valor_informado_p INOUT text, nr_seq_ajuste_proc_p INOUT bigint, nr_sequencia_p bigint, ie_atend_retorno_p text, QT_DIAS_INTERNACAO_P bigint, ie_video_p text, ie_beira_leito_p text, ie_spect_p text, cd_cgc_prestador_p text, cd_equipamento_p bigint, nr_seq_tipo_acidente_p bigint, cd_especialidade_medica_p bigint, cd_procedencia_p text, nr_seq_cobertura_p bigint, nr_seq_classif_atend_p bigint, ie_carater_inter_sus_p text, cd_dependente_p bigint, nr_seq_grupo_rec_p bigint, ie_origem_proced_p bigint default null, nr_seq_origem_p bigint DEFAULT NULL, nr_seq_classif_medico_p bigint DEFAULT NULL, ie_calcular_anest_p text default null) AS $body$
DECLARE



NR_DEC_UNITARIO_W		smallint;
NR_DEC_TOTAL_W		smallint;
IE_TIPO_ROUNDED_W		varchar(1);
IE_TIPO_CONVENIO_W		smallint  := 0;
CD_EDICAO_AMB_W		integer    := 0;
CD_EDICAO_AMB_ajuste_W		integer    := 0;
DS_EDICAO_AMB_W		varchar(255);
VL_CH_HONORARIOS_W		double precision := 1;
VL_CH_CUSTO_OPER_W		double precision := 1;
VL_M2_FILME_W			double precision := 0;

VL_CH_HONORARIOS_ajuste_W	double precision := 1;
VL_CH_CUSTO_OPER_ajuste_W	double precision := 1;
VL_M2_FILME_ajuste_W		double precision := 0;


TX_AJUSTE_PROC_W		double precision := 0;
VL_CUSTO_OPERACIONAL_W		double precision := 0;
VL_PROCEDIMENTO_W		double precision := 0;
VL_ANESTESISTA_W		double precision := 0;
VL_PORTE_ANESTESICO_W		double precision := 0;
NR_PORTE_ANESTESICO_W		smallint    := 0;
VL_MEDICO_W			double precision := 0;
VL_FILME_W			double precision := 0;
VL_AUXILIARES_W			double precision := 0;
NR_AUXILIARES_W			smallint    := 0;
VL_PROC_AJUSTADO_W		double precision := 0;
CD_CONVENIO_W			integer    := 0;
CD_ESTABELECIMENTO_W		smallint    := 0;
CD_PROCEDIMENTO_W		bigint    := 0;
CD_CATEGORIA_W			varchar(10);
DT_CONTA_W			timestamp;
IE_PRECO_INFORMADO_W		varchar(1);
VL_AUXILIARES_INFORM_W	double precision := 0;
IE_GLOSA_W			varchar(1);
CD_PROCEDIMENTO_ESP_W	bigint;
NR_SEQ_REGRA_PRECO_W	bigint;
CD_MOEDA_W			smallint;
DS_SIGLA_MOEDA_W		varchar(3);
VL_HONORARIOS_CONV_W	double precision;
VL_CUSTO_OPER_CONV_W	double precision;
VL_FILME_CONV_W		double precision;
VL_PTO_CUSTO_OPERAC_W	double precision := 0;
VL_PTO_PROCEDIMENTO_W	double precision := 0;
VL_PTO_ANESTESISTA_W		double precision := 0;
VL_PTO_MEDICO_W		double precision := 0;
VL_PTO_AUXILIARES_W		double precision := 0;
VL_PTO_MATERIAIS_W		double precision := 0;
CD_EDICAO_AJUSTE_W		integer    := 0;
PR_AJUSTE_W			double precision  := 0;
VL_Soma_Proc_W			double precision := 0;
VL_ANEST_INFORM_W		double precision := 0;
vl_saldo_w			double precision := 0;

vl_medico_neg_w			double precision	:= NULL;
vl_custo_oper_neg_w		double precision	:= NULL;
VL_ANESTESISTA_neg_W		double precision	:= NULL;
VL_aux_neg_W			double precision	:= NULL;
qt_filme_neg_w			double precision	:= NULL;
nr_auxiliares_neg_w		smallint	:= NULL;
qt_porte_anest_neg_w		smallint	:= NULL;

tx_ajuste_custo_Oper_w		double precision		:= 1;
tx_ajuste_Medico_w		double precision		:= 1;
tx_ajuste_partic_w			double precision		:= 1;
tx_ajuste_Filme_w			double precision		:= 1;
qt_anestesista_w			smallint;
pr_glosa_w			double precision		:= 0;
vl_glosa_w			double precision		:= 0;
ie_origem_proced_w		bigint;
qt_amb90_w			bigint	:= 0;
qt_amb1990_w			bigint	:= 0;


vl_medico_cbhpm_w		double precision;
cd_porte_cbhpm_w			varchar(10);
tx_porte_cbhpm_w			double precision;
qt_uco_cbhpm_w			double precision;
nr_porte_anest_cbhpm_w		smallint;
nr_auxiliar_cbhpm_w		smallint;
qt_filme_cbhpm_w			double precision;
qt_incidencia_cbhpm_w		double precision;
ie_unid_ra_cbhpm_w		varchar(1);
vl_porte_cbhpm_w			double precision;
dt_vig_porte_cbhpm_w		timestamp;
dt_vig_preco_cbhpm_w		timestamp;
vl_porte_anest_cbhpm_w		double precision;
cd_motivo_exc_conta_w		bigint;
ie_origem_proced_edicao_w		bigint;
ie_origem_proc_edicao_cbhpm_w	bigint;
ie_origem_proc_w			bigint;
dt_inicio_vigencia_w		timestamp;
dt_inicio_vigencia_ajuste_w		timestamp;
ie_prioridade_edicao_w		varchar(01);
tx_ajuste_geral_w			double precision;
ie_preco_custo_w	  		varchar(01);
ie_apuracao_custo_w		varchar(10);
vl_aux_w				double precision;
cd_tabela_custo_w			bigint;

vl_custo_w			double precision;
vl_custo_unitario_w			double precision;
vl_custo_variavel_w		double precision;
vl_custo_dir_apoio_w		double precision;
vl_custo_mao_obra_w		double precision;
vl_custo_direto_w			double precision;
vl_custo_indireto_w			double precision;
vl_despesa_w			double precision;
vl_custo_hm_w			double precision;
qt_resumo_w			double precision;
vl_custo_sadt_w			double precision;
pr_imposto_w			double precision	:= 0;
ie_autor_particular_w		varchar(1);
cd_convenio_glosa_w		integer;
cd_categoria_glosa_w		varchar(10);
nr_seq_ajuste_proc_w		bigint;
ie_video_w			varchar(03)	:= NULL;
ie_ignora_ch_edicao_amb_w		varchar(01);
cd_tabela_servico_ajuste_w		bigint;
ie_valor_filme_tab_preco_w		varchar(1);
ie_entra_filme_neg_w			varchar(1);
ie_indice_ajuste_filme_w		varchar(1);
ie_regra_arredondamento_tx_w		varchar(1);
ie_arredondamento_w			varchar(2);
ie_origem_procedimento_w		bigint:= 1;

qt_proc_w				bigint;
ie_gravar_log_w				varchar(1):= 'N';

nr_seq_cbhpm_edicao_w			bigint;
dt_vigencia_cbhpm_w			timestamp;
nr_seq_cbhpm_edicao_ajuste_w		bigint;
dt_vigencia_cbhpm_ajuste_w		timestamp:= null;
vl_filme_neg_w				double precision;
ie_regra_moeda_ajuste_w			varchar(1);		
ie_ignora_ajuste_w 			varchar(1) := 'N';

ie_calculo_tuss_w			varchar(10);
ie_credenciado_w			varchar(1);
NR_PORTE_ANEST_NAO_EXISTE_W		smallint    := 0;
nr_seq_cbhpm_edicao_regra_w		bigint;
nr_atendimento_w			bigint;
cd_medico_resp_w			bigint;
ie_ch_anestesista_w			varchar(1);
varie_consiste_anest_porte_w		varchar(1);
ie_ponto_amb_w				varchar(1);
vl_preco_calculado_w		double precision;
nr_porte_anestes_out_w		smallint;
nm_usuario_logado_w			varchar(15) := '';
ie_tipo_nacionalidade_w		varchar(1);
dt_entrada_w				timestamp;	
cd_pessoa_fisica_w			varchar(10);
dt_procedimento_w 			timestamp;
qt_pontuacao_w				preco_amb.qt_pontuacao%type;

--- Price per Level
cd_level_w					preco_amb.cd_level%type;
vl_preco_proc_level_w		health_fund_price_level.vl_price%type;
ie_consider_level_w			regra_ajuste_proc.ie_consider_level%type;

vl_medico_tab_w			double precision;
vl_anestesista_tab_w	double precision;
vl_aux_tab_w			double precision;
vl_custo_oper_tab_w		double precision;
vl_filme_tab_w			double precision;
vl_procedimento_tab_w	double precision;
ds_nls_territory_w		varchar(64);

/*--DRG related*/

nr_seq_edition_w        health_fund_drg.nr_seq_edition%type;
qt_estadia_min_w        drg_procedimento.qt_estadia_min%type;
qt_estadia_max_w        drg_procedimento.qt_estadia_max%type;
vl_inlier_rate_w        drg_procedimento.vl_inlier_rate%type;
vl_sso_benefit_w        drg_procedimento.vl_sso_benefit%type;
vl_lso_benefit_w        drg_procedimento.vl_lso_benefit%type;
vl_icu_sso_w            drg_procedimento.vl_icu_sso%type;
vl_trnfr_dscnt_w        drg_procedimento.vl_trnfr_dscnt%type;
qt_tnsfr_pt_w           drg_procedimento.qt_tnsfr_pt%type;
qt_dia_int_w            bigint;
/*--  Added as part of SO 2022127 for DRG*/

 qt_estedia_min_tier2_w		drg_procedimento.qt_estedia_min_tier2%type;
 qt_estedia_max_tier2_w 	drg_procedimento.qt_estedia_max_tier2%type;
 vl_inlier_rate_tier2_w 	drg_procedimento.vl_inlier_rate_tier2%type;
 qt_estedia_min_tier3_w  	drg_procedimento.qt_estedia_min_tier3%type;
 qt_estedia_max_tier3_w  	drg_procedimento.qt_estedia_max_tier3%type;
 vl_inlier_rate_tier3_w  	drg_procedimento.vl_inlier_rate_tier3%type;
 vl_rate_lt_6_hrs_w      	drg_procedimento.vl_rate_lt_6_hrs%type;
 vl_rate_gt_6_hrs_w      	drg_procedimento.vl_rate_gt_6_hrs%type;
 vl_overnight_flagfall_w 	drg_procedimento.vl_overnight_flagfall%type;
 vl_overnight_flagfall_mv_w drg_procedimento.vl_overnight_flagfall_mv%type;
 vl_proc_only_fee_w      	drg_procedimento.vl_proc_only_fee%type;
 cd_drg_category_w       	drg_procedimento.cd_drg_category%type;
 vl_same_day_weight_w 		drg_procedimento.vl_same_day_weight%type;
 vl_same_day_rate_w   		drg_procedimento.vl_same_day_rate%type;
 vl_short_diem_weight_w  	drg_procedimento.vl_short_diem_weight%type;
 vl_inlier_weight_w     	drg_procedimento.vl_inlier_weight%type;
 vl_long_diem_weight_w   	drg_procedimento.vl_long_diem_weight%type;


 ie_support_icu_category_w 	drg_billing_configuration.ie_support_icu_category%type;
 ie_support_mult_perdiem_w 	drg_billing_configuration.ie_support_mult_perdiem%type;
 ie_supports_icu_ss_w 		drg_billing_configuration.ie_supports_icu_ss%type;
 ie_support_ttp_w 			drg_billing_configuration.ie_support_ttp%type;
 ie_support_dtd_w 			drg_billing_configuration.ie_support_dtd%type;
 ie_exclude_last_day_inlier_w drg_billing_configuration.ie_exclude_last_day_inlier%type;
 ie_support_day_patient_w 	drg_billing_configuration.ie_support_day_patient%type;
 cd_motivo_alta_w 			atendimento_transf.cd_cgc%type;
 cd_classif_setor_w 		setor_atendimento.cd_classif_setor%type;

 qt_horas_int_w 			double precision;
 qt_dia_int_uti_w 			bigint;
 qt_dias_in_care_inter_w 	bigint;
 qt_not_in_int_ca_un_w 		bigint;

vl_rmfs_out_w           dva_price_catalogue.vl_rmfs_out%type;
vl_rmfs_in_w            dva_price_catalogue.vl_rmfs_in%type;
ie_tipo_atendimento_w   atendimento_paciente.nr_atendimento%type;
vl_dva_fee_w           dva_price_catalogue.vl_dva_fee%type;
ie_derived_w          dva_price_catalogue.ie_derived%type;
ie_vap_metro_w        dva_price_catalogue.ie_vap_metro%type;
ie_vap_regional_w     dva_price_catalogue.ie_vap_regional%type;
cd_procedimento_loc_w procedimento.cd_procedimento_loc%type;


BEGIN
CD_MOEDA_W			  := 0;
CD_CONVENIO_W             		:= CD_CONVENIO_P;
CD_ESTABELECIMENTO_W      	:= CD_ESTABELECIMENTO_P;
CD_PROCEDIMENTO_W         	:= CD_PROCEDIMENTO_P;
CD_CATEGORIA_W            		:= CD_CATEGORIA_P;
DT_CONTA_W                		:= DT_CONTA_P;
NR_PORTE_ANEST_NAO_EXISTE_W		:= 0;

begin


	nm_usuario_logado_w := wheb_usuario_pck.get_nm_usuario;
exception
	when others then
	nm_usuario_logado_w := '';
end;

SELECT	coalesce(MAX(ie_prioridade_edicao_amb), 'N'),
	coalesce(MAX(ie_regra_arredondamento_tx),'N'),
	coalesce(MAX(ie_consiste_anest_porte),'N'),
	coalesce(MAX(ie_ponto_amb),'S')
INTO STRICT	ie_prioridade_edicao_w,
	ie_regra_arredondamento_tx_w,
	varie_consiste_anest_porte_w,
	ie_ponto_amb_w
FROM	parametro_faturamento
WHERE	cd_estabelecimento	= cd_estabelecimento_p;



SELECT	coalesce(MAX(ie_preco_custo), 'N')
INTO STRICT	ie_preco_custo_w
FROM	categoria_convenio
WHERE	cd_convenio		= cd_convenio_p
AND	cd_categoria		= cd_categoria_p;



/*Felipe Martini OS93074   14/05/2008*/

SELECT	coalesce(MAX(ie_valor_filme_tab_preco),'N'),
	coalesce(MAX(ie_indice_ajuste_filme),'S'),
	coalesce(MAX(ie_arredondamento),'T'),
	coalesce(max(ie_regra_moeda_ajuste),'N'),
	coalesce(max(ie_ch_anestesista),'S')
INTO STRICT	ie_valor_filme_tab_preco_w,
	ie_indice_ajuste_filme_w,
	ie_arredondamento_w,
	ie_regra_moeda_ajuste_w,
	ie_ch_anestesista_w
FROM	convenio_estabelecimento
WHERE	cd_estabelecimento	= cd_estabelecimento_p
AND	cd_convenio		= cd_convenio_p;



          
/*      Obter padrao qtd decimais valor unitario */

BEGIN
SELECT coalesce(VL_PARAMETRO,VL_PARAMETRO_PADRAO)
INTO STRICT   NR_DEC_UNITARIO_W
FROM   FUNCAO_PARAMETRO
WHERE  CD_FUNCAO = 81
  AND  NR_SEQUENCIA = 1;
EXCEPTION
     WHEN OTHERS THEN
          NR_DEC_UNITARIO_W := 4;
END;

/*      Obter padrao qtd decimais valor total */

BEGIN
SELECT coalesce(VL_PARAMETRO,VL_PARAMETRO_PADRAO)
INTO STRICT   NR_DEC_TOTAL_W
FROM   FUNCAO_PARAMETRO
WHERE  CD_FUNCAO = 81
  AND  NR_SEQUENCIA = 2;
EXCEPTION
     WHEN OTHERS THEN
          NR_DEC_TOTAL_W := 2;
END;



/*      Obter padrao tipo de arredondamento */

BEGIN
SELECT coalesce(VL_PARAMETRO,VL_PARAMETRO_PADRAO)
INTO STRICT   IE_TIPO_ROUNDED_W
FROM   FUNCAO_PARAMETRO
WHERE  CD_FUNCAO = 81
  AND  NR_SEQUENCIA = 3;
EXCEPTION
     WHEN OTHERS THEN
          IE_TIPO_ROUNDED_W := 'D';
END;

BEGIN
/*      Obter o tipo do convenio 1-Particular 2-Proprio */

SELECT IE_TIPO_CONVENIO
  INTO STRICT IE_TIPO_CONVENIO_W
  FROM CONVENIO
 WHERE CD_CONVENIO = CD_CONVENIO_P;
EXCEPTION
     WHEN OTHERS THEN
          IE_TIPO_CONVENIO_W := 1;
END;


SELECT 	MAX(coalesce(Grava_log_calculo_pck.get_ie_gravar_log,'N'))
INTO STRICT	ie_gravar_log_w
;

IF (ie_gravar_log_w = 'S') AND (coalesce(nr_sequencia_p,0) > 0) THEN
	DELETE  FROM procedimento_log_calculo
	WHERE nr_seq_propaci = nr_sequencia_p;
END IF;

CALL Gravar_log_calculo_proc(cd_procedimento_p, NULL, nr_sequencia_p, cd_convenio_p, cd_categoria_p, wheb_mensagem_pck.get_texto(299867,'IE_PRIORIDADE_EDICAO='||ie_prioridade_edicao_w), ie_gravar_log_w);

/*      Obter a edicao do convenio  */

IF (ie_prioridade_edicao_w	= 'N') THEN


	BEGIN
	SELECT 	CD_EDICAO_AMB,
       		CASE WHEN coalesce(VL_CH_HONORARIOS::text, '') = '' THEN 1 WHEN VL_CH_HONORARIOS=0 THEN 1  ELSE VL_CH_HONORARIOS END ,
       		CASE WHEN coalesce(VL_CH_CUSTO_OPER::text, '') = '' THEN 1 WHEN VL_CH_CUSTO_OPER=0 THEN 1  ELSE VL_CH_CUSTO_OPER END ,
	       	coalesce(VL_FILME,0),
		dt_inicio_vigencia,
		nr_seq_cbhpm_edicao
	INTO STRICT   	CD_EDICAO_AMB_W,
	       	VL_CH_HONORARIOS_W,
       		VL_CH_CUSTO_OPER_W,
       		VL_M2_FILME_W,
		dt_inicio_vigencia_w,
		nr_seq_cbhpm_edicao_w
	FROM 	CONVENIO_AMB
	WHERE (CD_ESTABELECIMENTO     = CD_ESTABELECIMENTO_P)
	AND (CD_CONVENIO            = CD_CONVENIO_P)
	AND (CD_CATEGORIA           = CD_CATEGORIA_P)
	AND (coalesce(IE_SITUACAO,'A')	= 'A')
	AND 	(DT_INICIO_VIGENCIA     =
			(SELECT	MAX(DT_INICIO_VIGENCIA)
       			FROM 	CONVENIO_AMB A
			WHERE (A.CD_ESTABELECIMENTO  = CD_ESTABELECIMENTO_P)
	AND (A.CD_CONVENIO         = CD_CONVENIO_P)
	AND (A.CD_CATEGORIA        = CD_CATEGORIA_P)
	AND (coalesce(A.IE_SITUACAO,'A')= 'A')
	AND (A.DT_INICIO_VIGENCIA <=  DT_CONTA_P)));
	EXCEPTION
		WHEN 	OTHERS THEN
			BEGIN
			CD_EDICAO_AMB_W 		:= 0;
			VL_CH_HONORARIOS_W	:= 0;
			VL_CH_CUSTO_OPER_W	:= 0;
			VL_M2_FILME_W		:= 0;
			nr_seq_cbhpm_edicao_w	:= 0;
		END;
	END;


ELSE

	SELECT * FROM Obter_Edicao_Proc_Conv(cd_estabelecimento_p, CD_CONVENIO_P, CD_CATEGORIA_p, DT_CONTA_P, cd_procedimento_p, CD_EDICAO_AMB_W, VL_CH_HONORARIOS_W, VL_CH_CUSTO_OPER_W, VL_M2_FILME_W, dt_inicio_vigencia_w, tx_ajuste_geral_w, nr_seq_cbhpm_edicao_w, ie_origem_proced_p) INTO STRICT CD_EDICAO_AMB_W, VL_CH_HONORARIOS_W, VL_CH_CUSTO_OPER_W, VL_M2_FILME_W, dt_inicio_vigencia_w, tx_ajuste_geral_w, nr_seq_cbhpm_edicao_w;


END IF;

dt_vigencia_cbhpm_w:= NULL;
IF (coalesce(nr_seq_cbhpm_edicao_w,0) > 0) THEN
	SELECT 	coalesce(MAX(dt_vigencia),dt_inicio_vigencia_w)
	INTO STRICT	dt_vigencia_cbhpm_w
	FROM 	cbhpm_edicao
	WHERE 	nr_sequencia = nr_seq_cbhpm_edicao_w;
END IF;

CALL Gravar_log_calculo_proc(cd_procedimento_p, NULL, nr_sequencia_p, cd_convenio_p, cd_categoria_p, wheb_mensagem_pck.get_texto(299868,'CD_EDICAO_AMB='||CD_EDICAO_AMB_W), ie_gravar_log_w);

ie_calculo_tuss_w:= 'S';

begin
SELECT	MAX(ie_origem_proced),
	coalesce(max(ie_calculo_tuss),'S')
INTO STRICT	ie_origem_proced_edicao_w,
	ie_calculo_tuss_w
FROM	edicao_amb
WHERE	cd_edicao_amb	= cd_edicao_amb_w;
exception
	when others then
	ie_calculo_tuss_w:= 'S';
end;

ie_origem_proc_w	:= NULL;

IF (coalesce(nr_sequencia_p,0) > 0) THEN


	SELECT 	coalesce(MAX(ie_origem_proced),1),
			max(nr_atendimento),
			max(dt_procedimento)			
	INTO STRICT	ie_origem_procedimento_w,
			nr_atendimento_w,
			dt_procedimento_w			
	FROM 	procedimento_paciente
	WHERE 	nr_sequencia = nr_sequencia_p;
	
	select	max(cd_medico_resp),
			max(cd_pessoa_fisica)
	into STRICT	cd_medico_resp_w,
			cd_pessoa_fisica_w
	from	atendimento_paciente
	where	nr_atendimento = nr_atendimento_w;

ELSE

	SELECT 	COUNT(*)
	INTO STRICT	qt_proc_w
	FROM 	procedimento
	WHERE 	cd_procedimento = cd_procedimento_p;

	IF (qt_proc_w = 1) THEN
		SELECT 	coalesce(MAX(ie_origem_proced),1)
		INTO STRICT	ie_origem_procedimento_w
		FROM 	procedimento
		WHERE 	cd_procedimento = cd_procedimento_p;
	END IF;

END IF;

IF (cd_edicao_amb_w	= 2004) OR (ie_origem_proced_edicao_w = 5) THEN
	ie_origem_proced_w	:= 5;
ELSIF (ie_origem_proced_edicao_w IN (2,3,7)) THEN
	ie_origem_proced_w	:= 1;
	ie_origem_proc_w	:= ie_origem_proced_edicao_w;
ELSIF (ie_origem_proced_edicao_w NOT IN (1,4)) THEN
	ie_origem_proced_w	:= ie_origem_proced_edicao_w;
ELSE
	SELECT	coalesce(MIN(b.ie_origem_proced),ie_origem_procedimento_w)
	INTO STRICT	ie_origem_proced_w
	FROM	procedimento	a,
		preco_amb	b
	WHERE	a.cd_procedimento	= cd_procedimento_p
	AND 	a.cd_procedimento	= b.cd_procedimento
	AND 	b.cd_edicao_amb		= cd_edicao_amb_w;

	ie_origem_proc_w	:= ie_origem_proced_w;

	IF (ie_origem_proced_w	<> ie_origem_proced_edicao_w) THEN
		ie_origem_proced_w	:= ie_origem_proced_edicao_w;
	END IF;
END IF;



if (ie_calculo_tuss_w <> 'S') and (ie_origem_proced_edicao_w = 8) then

	SELECT * FROM define_preco_tuss(CD_ESTABELECIMENTO_P, CD_CONVENIO_P, CD_CATEGORIA_P, DT_CONTA_P, CD_PROCEDIMENTO_P, ie_origem_proced_w, CD_TIPO_ACOMODACAO_P, IE_TIPO_ATENDIMENTO_P, CD_SETOR_ATENDIMENTO_P, CD_MEDICO_P, CD_FUNCAO_MEDICO_P, QT_IDADE_P, nr_seq_exame_lab_p, nr_seq_proc_interno_p, cd_usuario_convenio_p, cd_plano_p, ie_clinica_p, cd_empresa_ref_p, ie_sexo_p, nr_sequencia_p, ie_atend_retorno_p, QT_DIAS_INTERNACAO_P, ie_video_p, ie_beira_leito_p, ie_spect_p, cd_cgc_prestador_p, cd_equipamento_p, nr_seq_tipo_acidente_p, cd_especialidade_medica_p, cd_procedencia_p, ie_calculo_tuss_w, CD_EDICAO_AMB_w, VL_PROCEDIMENTO_w, VL_CUSTO_OPERACIONAL_w, VL_ANESTESISTA_w, VL_MEDICO_w, VL_AUXILIARES_w, VL_FILME_W, VL_PTO_PROCEDIMENTO_w, VL_PTO_CUSTO_OPERAC_w, VL_PTO_ANESTESISTA_w, VL_PTO_MEDICO_w, VL_PTO_AUXILIARES_w, VL_PTO_MATERIAIS_w, NR_PORTE_ANESTESICO_W, ie_preco_informado_w) INTO STRICT CD_EDICAO_AMB_w, VL_PROCEDIMENTO_w, VL_CUSTO_OPERACIONAL_w, VL_ANESTESISTA_w, VL_MEDICO_w, VL_AUXILIARES_w, VL_FILME_W, VL_PTO_PROCEDIMENTO_w, VL_PTO_CUSTO_OPERAC_w, VL_PTO_ANESTESISTA_w, VL_PTO_MEDICO_w, VL_PTO_AUXILIARES_w, VL_PTO_MATERIAIS_w, NR_PORTE_ANESTESICO_W, ie_preco_informado_w;
			
else

	SELECT * FROM OBTER_COTACAO_MOEDA_CONVENIO(
		CD_ESTABELECIMENTO_P, CD_CONVENIO_P, CD_CATEGORIA_P, CD_PROCEDIMENTO_P, coalesce(ie_origem_proced_p, ie_origem_proced_w), DT_CONTA_P, 'P', CD_SETOR_ATENDIMENTO_P, IE_TIPO_ATENDIMENTO_P, CD_MEDICO_P, cd_usuario_convenio_p, cd_plano_p, ie_clinica_p, cd_empresa_ref_p, CD_EDICAO_AMB_W, nr_seq_proc_interno_p, nr_seq_exame_lab_p, cd_tipo_acomodacao_p, VL_HONORARIOS_CONV_W, VL_CUSTO_OPER_CONV_W, VL_FILME_CONV_W) INTO STRICT VL_HONORARIOS_CONV_W, VL_CUSTO_OPER_CONV_W, VL_FILME_CONV_W;

	IF (vl_honorarios_conv_w	<> 0)	THEN
		BEGIN
		VL_CH_HONORARIOS_W	:= VL_HONORARIOS_CONV_W;
		VL_CH_CUSTO_OPER_W	:= VL_CUSTO_OPER_CONV_W;
		VL_M2_FILME_W		:= coalesce(VL_FILME_CONV_W,0);
		END;
	END IF;


	begin
	if (coalesce(nr_sequencia_p,0) > 0) then
		ie_ignora_ajuste_w:= coalesce(obter_se_dispensa_ajuste(nr_sequencia_p),'N');
	end if;
	exception
		when others then
		ie_ignora_ajuste_w := 'N';
	end;

	if (ie_ignora_ajuste_w = 'N') then


	if (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then
		ie_tipo_nacionalidade_w := coalesce(obter_se_residente_estrangeiro(	cd_pessoa_fisica_w,
																		cd_estabelecimento_p,
																		dt_procedimento_w),'N');
	end if;
	
	/* Obter a Taxa de ajuste do procedimento */

	SELECT * FROM OBTER_REGRA_AJUSTE_PROC(cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, cd_procedimento_w, coalesce(ie_origem_proced_p, coalesce(ie_origem_proc_w,ie_origem_proced_w)), ie_video_p, dt_conta_w, CD_TIPO_ACOMODACAO_P, IE_TIPO_ATENDIMENTO_P, CD_SETOR_ATENDIMENTO_P, CD_MEDICO_P, CD_FUNCAO_MEDICO_P, QT_IDADE_P, nr_seq_exame_lab_p, nr_seq_proc_interno_p, cd_usuario_convenio_p, cd_plano_p, ie_clinica_p, cd_empresa_ref_p, ie_sexo_p, tx_ajuste_proc_w, tx_ajuste_Custo_Oper_w, tx_ajuste_Medico_w, tx_ajuste_partic_w, tx_ajuste_Filme_w, vl_proc_ajustado_w, ie_preco_informado_w, ie_glosa_w, cd_procedimento_esp_w, nr_seq_regra_preco_w, CD_EDICAO_AJUSTE_W, vl_medico_neg_w, vl_custo_oper_neg_w, qt_filme_neg_w, nr_auxiliares_neg_w, qt_porte_anest_neg_w, pr_glosa_w, vl_glosa_w, cd_motivo_exc_conta_w, ie_atend_retorno_p, QT_DIAS_INTERNACAO_P, ie_autor_particular_w, cd_convenio_glosa_w, cd_categoria_glosa_w, nr_seq_ajuste_proc_w, NULL, cd_procedencia_p, coalesce(ie_beira_leito_p,'A'), ie_spect_p, cd_cgc_prestador_p, cd_equipamento_p, nr_seq_tipo_acidente_p, cd_especialidade_medica_p, vl_filme_neg_w, nr_seq_cobertura_p, null, nr_seq_classif_atend_p, cd_medico_resp_w, ie_carater_inter_sus_p, cd_dependente_p, nr_seq_grupo_rec_p, nr_seq_origem_p, null, nr_seq_classif_medico_p, ie_tipo_nacionalidade_w) INTO STRICT tx_ajuste_proc_w, tx_ajuste_Custo_Oper_w, tx_ajuste_Medico_w, tx_ajuste_partic_w, tx_ajuste_Filme_w, vl_proc_ajustado_w, ie_preco_informado_w, ie_glosa_w, cd_procedimento_esp_w, nr_seq_regra_preco_w, CD_EDICAO_AJUSTE_W, vl_medico_neg_w, vl_custo_oper_neg_w, qt_filme_neg_w, nr_auxiliares_neg_w, qt_porte_anest_neg_w, pr_glosa_w, vl_glosa_w, cd_motivo_exc_conta_w, ie_autor_particular_w, cd_convenio_glosa_w, cd_categoria_glosa_w, nr_seq_ajuste_proc_w, vl_filme_neg_w;

	end if;
	IF (coalesce(nr_seq_ajuste_proc_w,0) > 0) THEN

		CALL Gravar_log_calculo_proc(cd_procedimento_p, coalesce(ie_origem_proced_p, ie_origem_proced_w), nr_sequencia_p, cd_convenio_p, cd_categoria_p, wheb_mensagem_pck.get_texto(299870,'NR_SEQ_AJUSTE_PROC='||nr_seq_ajuste_proc_w), ie_gravar_log_w);		
		CALL Gravar_log_calculo_proc(cd_procedimento_p, coalesce(ie_origem_proced_p, ie_origem_proced_w), nr_sequencia_p, cd_convenio_p, cd_categoria_p, wheb_mensagem_pck.get_texto(299871,'CD_EDICAO_AJUSTE='||CD_EDICAO_AJUSTE_W), ie_gravar_log_w);		
	ELSE

		CALL Gravar_log_calculo_proc(cd_procedimento_p, coalesce(ie_origem_proced_p, ie_origem_proced_w), nr_sequencia_p, cd_convenio_p, cd_categoria_p, wheb_mensagem_pck.get_texto(299877), ie_gravar_log_w);
	END IF;

	SELECT	coalesce(MAX(ie_ignora_ch_edicao_amb), 'N'),
		coalesce(MAX(ie_entra_filme_neg),'N'),
		coalesce(MAX(ie_consider_level),'N')
	INTO STRICT	ie_ignora_ch_edicao_amb_w,
		ie_entra_filme_neg_w,
		ie_consider_level_w
	FROM	regra_ajuste_proc
	WHERE	nr_sequencia		= nr_seq_ajuste_proc_w;

	IF (ie_ignora_ch_edicao_amb_w	= 'S') THEN
		VL_CH_HONORARIOS_W 		:= 1;
		VL_CH_CUSTO_OPER_W		:= 1;
		IF (coalesce(qt_filme_neg_w,0)	= 0) THEN
			VL_M2_FILME_W			:= 1;
		END IF;
	END IF;

	IF (coalesce(nr_seq_ajuste_proc_w,0) > 0) THEN
		SELECT	coalesce(MAX(cd_tabela_servico), 0),
			coalesce(MAX(vl_anestesista), 0),
			coalesce(MAX(vl_auxiliares), 0),
			coalesce(max(nr_seq_cbhpm_edicao),0)
		INTO STRICT	cd_tabela_servico_ajuste_w,
			VL_ANESTESISTA_neg_W,
			VL_aux_neg_W,
			nr_seq_cbhpm_edicao_regra_w
		FROM	regra_ajuste_proc
		WHERE 	nr_sequencia		= nr_seq_ajuste_proc_w;

		IF (coalesce(tx_ajuste_proc_w,0) <> 0) THEN
			vl_anestesista_neg_w	:= vl_anestesista_neg_w		* tx_ajuste_proc_w;
			VL_aux_neg_W		:= VL_aux_neg_W			* tx_ajuste_proc_w;
		END IF;

		IF (VL_ANESTESISTA_neg_W	= 0) THEN
			VL_ANESTESISTA_neg_W	:= NULL;
		END IF;

		IF (VL_aux_neg_W		= 0) THEN
			VL_aux_neg_W		:= NULL;
		END IF;

		IF (cd_tabela_servico_ajuste_w > 0) THEN
			tx_ajuste_proc_w		:= 1;
			tx_ajuste_Custo_Oper_w		:= 1;
			tx_ajuste_Medico_w		:= 1;
			tx_ajuste_partic_w		:= 1;
			tx_ajuste_Filme_w		:= 1;
		END IF;
	END IF;
	
	BEGIN
		
		SELECT	MAX(ie_origem_proced)
		INTO STRICT	ie_origem_proc_edicao_cbhpm_w
		FROM	edicao_amb
		WHERE	cd_edicao_amb	= cd_edicao_amb_w;

	EXCEPTION
		WHEN OTHERS THEN	
			ie_origem_proc_edicao_cbhpm_w:=null;
	END;
		
		
	

	IF (cd_edicao_ajuste_w	> 0) 				AND
		((cd_edicao_ajuste_w	<> cd_edicao_amb_w) OR
		((coalesce(ie_origem_proc_edicao_cbhpm_w,0) = 5) AND (coalesce(nr_seq_cbhpm_edicao_regra_w,0)>0)))  	THEN
		BEGIN
		cd_edicao_amb_w		:=	cd_edicao_ajuste_w;

		BEGIN
		SELECT 	CASE WHEN coalesce(VL_CH_HONORARIOS::text, '') = '' THEN 1 WHEN VL_CH_HONORARIOS=0 THEN 1  ELSE VL_CH_HONORARIOS END ,
			CASE WHEN coalesce(VL_CH_CUSTO_OPER::text, '') = '' THEN 1 WHEN VL_CH_CUSTO_OPER=0 THEN 1  ELSE VL_CH_CUSTO_OPER END ,
			coalesce(VL_FILME,0),
			dt_inicio_vigencia,
			cd_edicao_amb,
			nr_seq_cbhpm_edicao
		INTO STRICT   	VL_CH_HONORARIOS_AJUSTE_W,
			VL_CH_CUSTO_OPER_ajuste_W,
			VL_M2_FILME_ajuste_W,
			dt_inicio_vigencia_ajuste_w,
			CD_EDICAO_AMB_ajuste_W,
			nr_seq_cbhpm_edicao_ajuste_w
		FROM 	CONVENIO_AMB
		WHERE (CD_ESTABELECIMENTO     = CD_ESTABELECIMENTO_P)
		AND (CD_CONVENIO            = CD_CONVENIO_P)
		AND (CD_CATEGORIA           = CD_CATEGORIA_P)
		AND	cd_edicao_amb		= cd_edicao_amb_w
		AND (coalesce(IE_SITUACAO,'A')	= 'A')
		AND 	(DT_INICIO_VIGENCIA     =
				(SELECT	MAX(DT_INICIO_VIGENCIA)
				FROM 	CONVENIO_AMB A
				WHERE (A.CD_ESTABELECIMENTO  = CD_ESTABELECIMENTO_P)
				AND (A.CD_CONVENIO          = CD_CONVENIO_P)
				AND (A.CD_CATEGORIA         = CD_CATEGORIA_P)
				AND	a.cd_edicao_amb		= cd_edicao_amb_w
				AND (coalesce(A.IE_SITUACAO,'A') = 'A')
				AND (PKG_DATE_UTILS.start_of(DT_CONTA_P,'dd',0) BETWEEN a.dt_inicio_vigencia AND coalesce(a.dt_final_vigencia, dt_conta_p))));
				--AND 	(A.DT_INICIO_VIGENCIA  <=  DT_CONTA_P)));
		EXCEPTION
			WHEN 	OTHERS THEN
				BEGIN
				CD_EDICAO_AMB_ajuste_W 		:= 0;
				VL_CH_HONORARIOS_ajuste_W	:= 0;
				VL_CH_CUSTO_OPER_ajuste_W	:= 0;
				VL_M2_FILME_ajuste_W		:= 0;
				nr_seq_cbhpm_edicao_ajuste_w	:= 0;
			END;
		END;	

		SELECT	coalesce(MAX(ie_ignora_ch_edicao_amb), 'N')
		INTO STRICT	ie_ignora_ch_edicao_amb_w
		FROM	regra_ajuste_proc
		WHERE	nr_sequencia		= nr_seq_ajuste_proc_w;

		IF (CD_EDICAO_AMB_ajuste_W > 0) AND (VL_CH_HONORARIOS_ajuste_W > 0) AND (VL_CH_CUSTO_OPER_ajuste_W > 0) AND (VL_M2_FILME_ajuste_W > 0) THEN
			CD_EDICAO_AMB_W			:= CD_EDICAO_AMB_ajuste_W;
			VL_CH_HONORARIOS_W 		:= VL_CH_HONORARIOS_ajuste_W;
			VL_CH_CUSTO_OPER_W		:= VL_CH_CUSTO_OPER_ajuste_W;
			VL_M2_FILME_W			:= VL_M2_FILME_ajuste_W;
			dt_inicio_vigencia_w		:= dt_inicio_vigencia_ajuste_w;
			
			if (ie_regra_moeda_ajuste_w = 'S') then

				SELECT * FROM OBTER_COTACAO_MOEDA_CONVENIO(
					CD_ESTABELECIMENTO_P, CD_CONVENIO_P, CD_CATEGORIA_P, CD_PROCEDIMENTO_P, ie_origem_proced_w, DT_CONTA_P, 'P', CD_SETOR_ATENDIMENTO_P, IE_TIPO_ATENDIMENTO_P, CD_MEDICO_P, cd_usuario_convenio_p, cd_plano_p, ie_clinica_p, cd_empresa_ref_p, CD_EDICAO_AMB_W, nr_seq_proc_interno_p, nr_seq_exame_lab_p, cd_tipo_acomodacao_p, VL_HONORARIOS_CONV_W, VL_CUSTO_OPER_CONV_W, VL_FILME_CONV_W) INTO STRICT VL_HONORARIOS_CONV_W, VL_CUSTO_OPER_CONV_W, VL_FILME_CONV_W;

				IF (vl_honorarios_conv_w	<> 0)	THEN
					BEGIN
					VL_CH_HONORARIOS_W	:= VL_HONORARIOS_CONV_W;
					VL_CH_CUSTO_OPER_W	:= VL_CUSTO_OPER_CONV_W;
					VL_M2_FILME_W		:= coalesce(VL_FILME_CONV_W,0);
					END;
				END IF;
			end if;
		END IF;

		IF (ie_ignora_ch_edicao_amb_w	= 'S') AND (cd_edicao_ajuste_w	> 0) then
			--(VL_CH_HONORARIOS_ajuste_W = 0) THEN  -- OS 842275 - Opcao Ignorar CH nao estava se aplicando por causa desta restricao.
			VL_CH_HONORARIOS_W 		:= 1;
			VL_CH_CUSTO_OPER_W		:= 1;
			VL_M2_FILME_W			:= 1;
		END IF;

		SELECT	MAX(ie_origem_proced)
		INTO STRICT	ie_origem_proced_edicao_w
		FROM	edicao_amb
		WHERE	cd_edicao_amb	= cd_edicao_amb_w;

		IF (cd_edicao_amb_w	= 2004)  OR (ie_origem_proced_edicao_w	= 5) THEN
			ie_origem_proced_w	:= 5;
		ELSE
			ie_origem_proced_w	:= 1;
		END IF;
		
		
		dt_vigencia_cbhpm_ajuste_w:= NULL;
		-- Se tiver a informacao na regra de ajuste
		IF (coalesce(nr_seq_cbhpm_edicao_regra_w,0) > 0) and (ie_origem_proced_w = 5) THEN
			SELECT 	MAX(dt_vigencia)
			INTO STRICT	dt_vigencia_cbhpm_ajuste_w
			FROM 	cbhpm_edicao
			WHERE 	nr_sequencia = nr_seq_cbhpm_edicao_regra_w;
		elsif (coalesce(nr_seq_cbhpm_edicao_ajuste_w,0) > 0) and (ie_origem_proced_w = 5) THEN
			SELECT 	coalesce(MAX(dt_vigencia),dt_inicio_vigencia_ajuste_w)
			INTO STRICT	dt_vigencia_cbhpm_ajuste_w
			FROM 	cbhpm_edicao
			WHERE 	nr_sequencia = nr_seq_cbhpm_edicao_ajuste_w;
		END IF;
		
		END;
	END IF;

	CALL Gravar_log_calculo_proc(cd_procedimento_p, ie_origem_proced_w, nr_sequencia_p, cd_convenio_p, cd_categoria_p, wheb_mensagem_pck.get_texto(299909,'VL_CH_HONORARIOS='||VL_CH_HONORARIOS_W), ie_gravar_log_w);	
	CALL Gravar_log_calculo_proc(cd_procedimento_p, ie_origem_proced_w, nr_sequencia_p, cd_convenio_p, cd_categoria_p, wheb_mensagem_pck.get_texto(299962,'VL_CH_CUSTO_OPER='||VL_CH_CUSTO_OPER_W), ie_gravar_log_w);
	CALL Gravar_log_calculo_proc(cd_procedimento_p, ie_origem_proced_w, nr_sequencia_p, cd_convenio_p, cd_categoria_p, wheb_mensagem_pck.get_texto(299965,'VL_M2_FILME='||VL_M2_FILME_W), ie_gravar_log_w);
	CALL Gravar_log_calculo_proc(cd_procedimento_p, ie_origem_proced_w, nr_sequencia_p, cd_convenio_p, cd_categoria_p, wheb_mensagem_pck.get_texto(299968,'TX_AJUSTE_MEDICO='||TX_AJUSTE_MEDICO_W), ie_gravar_log_w);
	CALL Gravar_log_calculo_proc(cd_procedimento_p, ie_origem_proced_w, nr_sequencia_p, cd_convenio_p, cd_categoria_p, wheb_mensagem_pck.get_texto(299981,'TX_AJUSTE_CUSTO_OPER='||TX_AJUSTE_CUSTO_OPER_W), ie_gravar_log_w);

	IF (IE_PRECO_INFORMADO_W 	= 'S') 	AND (VL_PROC_AJUSTADO_W 	= 0) 		AND (coalesce(vl_medico_neg_w::text, '') = '') 	AND (coalesce(vl_custo_oper_neg_w::text, '') = '')	AND (coalesce(qt_filme_neg_w::text, '') = '')	AND (coalesce(nr_auxiliares_neg_w::text, '') = '')	AND (coalesce(qt_porte_anest_neg_w::text, '') = '')	THEN
		BEGIN
		VL_PROCEDIMENTO_W		:= 0;
		VL_AUXILIARES_W			:= 0;
		VL_ANESTESISTA_W		:= 0;
		VL_CUSTO_OPERACIONAL_W		:= 0;
		VL_MEDICO_W			:= 0;
		VL_FILME_W			:= 0;
		END;
	ELSE
		BEGIN
		IF (ie_preco_informado_w	= 'S')		AND ((vl_medico_neg_w IS NOT NULL AND vl_medico_neg_w::text <> '') 	OR
			(vl_custo_oper_neg_w IS NOT NULL AND vl_custo_oper_neg_w::text <> '')	OR
			(qt_filme_neg_w IS NOT NULL AND qt_filme_neg_w::text <> '')	OR
			(nr_auxiliares_neg_w IS NOT NULL AND nr_auxiliares_neg_w::text <> '')	OR
			(qt_porte_anest_neg_w IS NOT NULL AND qt_porte_anest_neg_w::text <> '')	OR
			(VL_ANESTESISTA_neg_W IS NOT NULL AND VL_ANESTESISTA_neg_W::text <> '')	OR
			(VL_aux_neg_W IS NOT NULL AND VL_aux_neg_W::text <> ''))	THEN
			BEGIN
			/*      Valores individuais da tabela amb negociados */

			IF (coalesce(vl_medico_neg_w::text, '') = '') THEN
				vl_medico_neg_w		:= 0;
			END IF;
			IF (coalesce(vl_custo_oper_neg_w::text, '') = '') THEN
				vl_custo_oper_neg_w	:= 0;
			END IF;
			IF (coalesce(qt_filme_neg_w::text, '') = '') THEN
				qt_filme_neg_w		:= 0;
			END IF;
			IF (coalesce(nr_auxiliares_neg_w::text, '') = '') THEN
				nr_auxiliares_neg_w	:= 0;
			END IF;
			
			/* Valor original  - gravar */

			vl_medico_tab_w			:= vl_medico_neg_w;
			vl_anestesista_tab_w	:= vl_anestesista_neg_w;
			vl_aux_tab_w			:= vl_aux_neg_w;
			vl_custo_oper_tab_w		:= (qt_filme_neg_w* coalesce(VL_M2_FILME_W,0));
			vl_filme_tab_w			:= vl_custo_oper_neg_w + (qt_filme_neg_w* coalesce(VL_M2_FILME_W,0));

			IF (ie_arredondamento_w = 'R') THEN
				VL_CUSTO_OPERACIONAL_W	:= (vl_custo_oper_neg_w * VL_CH_CUSTO_OPER_W *	TX_AJUSTE_CUSTO_OPER_W);
				VL_MEDICO_W		:= (vl_medico_neg_w	* VL_CH_HONORARIOS_W *	TX_AJUSTE_MEDICO_W);
				VL_FILME_W		:= (qt_filme_neg_w	* coalesce(VL_M2_FILME_W,0) * TX_AJUSTE_FILME_W);

			ELSE
				VL_CUSTO_OPERACIONAL_W	:= round((vl_custo_oper_neg_w * VL_CH_CUSTO_OPER_W *	TX_AJUSTE_CUSTO_OPER_W)::numeric,2);
				VL_MEDICO_W		:= round((vl_medico_neg_w	* VL_CH_HONORARIOS_W *	TX_AJUSTE_MEDICO_W)::numeric,2);
				VL_FILME_W		:= ROUND((qt_filme_neg_w	* coalesce(VL_M2_FILME_W,0) * TX_AJUSTE_FILME_W),2);
			END IF;

			NR_PORTE_ANESTESICO_W	:= qt_porte_anest_neg_w;
			NR_AUXILIARES_W		:= nr_auxiliares_neg_w;
			VL_AUXILIARES_INFORM_W	:= 0;
			VL_PTO_CUSTO_OPERAC_W	:= (vl_custo_oper_neg_w * TX_AJUSTE_CUSTO_OPER_W);
			VL_PTO_MEDICO_W		:= (vl_medico_neg_w 	* TX_AJUSTE_MEDICO_W);
			CD_MOEDA_W		:= 0;
			VL_ANEST_INFORM_W	:= 0;


			/* Ricardo 08/05/2006 - Incluida a rotina abaixo para buscar o valor do porte para CBHPM */

			IF (ie_origem_proced_w	= 5) THEN

        --Origem: CBHPM = 729018
				CALL Gravar_log_calculo_proc(cd_procedimento_p, ie_origem_proced_w, nr_sequencia_p, cd_convenio_p, cd_categoria_p, '10 - '|| obter_desc_expressao(729018), ie_gravar_log_w);

				select 	obter_se_medico_credenciado(cd_estabelecimento_p, cd_medico_p, cd_convenio_p, null, cd_especialidade_medica_p,
					cd_categoria_p, cd_setor_atendimento_p, cd_plano_p, null, ie_tipo_atendimento_p, cd_funcao_medico_p, null)
				into STRICT	ie_credenciado_w
				;

				SELECT * FROM SELECT * FROM Obter_Preco_CBHPM(
					cd_estabelecimento_p, dt_conta_p, cd_procedimento_p, ie_origem_proced_w, coalesce(coalesce(dt_vigencia_cbhpm_ajuste_w, dt_vigencia_cbhpm_w), dt_inicio_vigencia_w), cd_convenio_p, null, ie_video_p, vl_medico_cbhpm_w, cd_porte_cbhpm_w, tx_porte_cbhpm_w, qt_uco_cbhpm_w, nr_porte_anest_cbhpm_w, nr_auxiliar_cbhpm_w, qt_filme_cbhpm_w) INTO STRICT vl_medico_cbhpm_w, cd_porte_cbhpm_w, tx_porte_cbhpm_w, qt_uco_cbhpm_w, nr_porte_anest_cbhpm_w, nr_auxiliar_cbhpm_w, qt_filme_cbhpm_w, , , , , ,  INTO cd_porte_cbhpm_w, tx_porte_cbhpm_w, qt_uco_cbhpm_w, nr_porte_anest_cbhpm_w, nr_auxiliar_cbhpm_w, qt_filme_cbhpm_w;


				CALL Gravar_log_calculo_proc(cd_procedimento_p, ie_origem_proced_w, nr_sequencia_p, cd_convenio_p, cd_categoria_p, wheb_mensagem_pck.get_texto(299983,'VL_MEDICO_CBHPM='||vl_medico_cbhpm_w), ie_gravar_log_w);
				CALL Gravar_log_calculo_proc(cd_procedimento_p, ie_origem_proced_w, nr_sequencia_p, cd_convenio_p, cd_categoria_p, wheb_mensagem_pck.get_texto(299984,'CD_PORTE_CBHPM='||cd_porte_cbhpm_w), ie_gravar_log_w);
				CALL Gravar_log_calculo_proc(cd_procedimento_p, ie_origem_proced_w, nr_sequencia_p, cd_convenio_p, cd_categoria_p, wheb_mensagem_pck.get_texto(299986,'TX_PORTE_CBHPM='||tx_porte_cbhpm_w), ie_gravar_log_w);
        --729020 = UCO CBHPM
				CALL Gravar_log_calculo_proc(cd_procedimento_p, ie_origem_proced_w, nr_sequencia_p, cd_convenio_p, cd_categoria_p, '14 - '|| obter_desc_expressao(729020)|| qt_uco_cbhpm_w, ie_gravar_log_w);
				CALL Gravar_log_calculo_proc(cd_procedimento_p, ie_origem_proced_w, nr_sequencia_p, cd_convenio_p, cd_categoria_p, wheb_mensagem_pck.get_texto(299988,'NR_PORTE_ANEST_CBHPM='||nr_porte_anest_cbhpm_w), ie_gravar_log_w);


			END IF;

			END;
		ELSE

			BEGIN

			IF (ie_origem_proced_w	= 1) OR (ie_origem_proced_w	= 4) OR (ie_origem_proced_w	= 6) OR (ie_origem_proced_w	= 8) OR (ie_origem_proced_w	= 13) or (ie_origem_proced_w = 20) THEN
				BEGIN
				/*   Obter os Valores da tabela AMB   */

				SELECT 	coalesce((a.VL_CUSTO_OPERACIONAL * VL_CH_CUSTO_OPER_W * TX_AJUSTE_CUSTO_OPER_W),0),
					coalesce((a.VL_MEDICO * VL_CH_HONORARIOS_W * TX_AJUSTE_MEDICO_W),0),
					CASE WHEN ie_valor_filme_tab_preco_w='S' THEN coalesce(a.vl_filme,0) * CASE WHEN ie_indice_ajuste_filme_w='S' THEN  TX_AJUSTE_FILME_W  ELSE 1 END   ELSE coalesce((a.QT_FILME* coalesce(VL_M2_FILME_W,0) * CASE WHEN ie_indice_ajuste_filme_w='S' THEN  TX_AJUSTE_FILME_W  ELSE 1 END ),0) END ,
					coalesce(a.QT_PORTE_ANESTESICO,0),
					coalesce(a.NR_AUXILIARES,0),
					coalesce(a.VL_AUXILIARES,0),
					CASE WHEN ie_ponto_amb_w='N' THEN  coalesce(a.VL_CUSTO_OPERACIONAL,0)  ELSE coalesce((a.VL_CUSTO_OPERACIONAL  * TX_AJUSTE_CUSTO_OPER_W),0) END ,
					CASE WHEN ie_ponto_amb_w='N' THEN  coalesce(a.VL_MEDICO,0)  ELSE coalesce((a.VL_MEDICO * TX_AJUSTE_MEDICO_W),0) END ,
					-- Criado o parametro  (OS 587571 e depois veio a 629495)					
					a.CD_MOEDA,
					coalesce(a.VL_ANESTESISTA,0),
					coalesce(a.QT_PONTUACAO,0),
					coalesce(a.VL_CUSTO_OPERACIONAL * VL_CH_CUSTO_OPER_W,0),
					coalesce(a.VL_MEDICO * VL_CH_HONORARIOS_W,0),
					CASE WHEN ie_valor_filme_tab_preco_w='S' THEN coalesce(a.vl_filme,0)  ELSE coalesce((a.QT_FILME* coalesce(VL_M2_FILME_W,0)),0) END ,
					cd_level
				INTO STRICT
					VL_CUSTO_OPERACIONAL_W,
					VL_MEDICO_W,
					VL_FILME_W,
					NR_PORTE_ANESTESICO_W,
					NR_AUXILIARES_W,
					VL_AUXILIARES_INFORM_W,
					VL_PTO_CUSTO_OPERAC_W,
					VL_PTO_MEDICO_W,
					CD_MOEDA_W,
					VL_ANEST_INFORM_W,
					QT_PONTUACAO_W,
					vl_custo_oper_tab_w,
					vl_medico_tab_w,
					vl_filme_tab_w,
					cd_level_w
				FROM 	 PRECO_AMB A
				WHERE (A.CD_EDICAO_AMB    	= CD_EDICAO_AMB_W)
				AND (A.CD_PROCEDIMENTO  	= CD_PROCEDIMENTO_P)
				AND 	 coalesce(a.dt_inicio_vigencia,clock_timestamp() - interval '3650 days')	=
					 (SELECT MAX(coalesce(b.dt_inicio_vigencia,clock_timestamp() - interval '3650 days'))
						FROM  preco_amb b
						WHERE b.cd_edicao_amb		= cd_edicao_amb_w
						AND	b.cd_procedimento		= cd_procedimento_p
						AND	PKG_DATE_UTILS.start_of(dt_conta_p,'dd',0) BETWEEN coalesce(b.dt_inicio_vigencia,clock_timestamp() - interval '3650 days') AND coalesce(b.dt_final_vigencia, dt_conta_p));
						--and	nvl(b.dt_inicio_vigencia,sysdate - 3650)	<= dt_conta_p);
				EXCEPTION
					WHEN 	OTHERS THEN
					BEGIN
					vl_procedimento_w 	:= 0;
					VL_CUSTO_OPERACIONAL_W	:= 0;
					VL_MEDICO_W			:= 0;
					VL_FILME_W			:= 0;
					NR_PORTE_ANESTESICO_W	:= 0;
					NR_PORTE_ANEST_NAO_EXISTE_W:= -1;
					NR_AUXILIARES_W		:= 0;
					VL_AUXILIARES_INFORM_W	:= 0;
					VL_PTO_CUSTO_OPERAC_W	:= 0;
					VL_PTO_MEDICO_W		:= 0;
					CD_MOEDA_W			:= 0;
					VL_ANEST_INFORM_W		:= 0;
					QT_PONTUACAO_W		:= 0;
					vl_custo_oper_tab_w	:= 0;
					vl_medico_tab_w	:= 0;
					vl_filme_tab_w	:= 0;
					cd_level_w		:= null;
					END;
				END;
				
				IF (ie_arredondamento_w <> 'R') THEN
					VL_CUSTO_OPERACIONAL_W	:= round((VL_CUSTO_OPERACIONAL_W)::numeric,2);
					VL_MEDICO_W		:= round((VL_MEDICO_W)::numeric,2);
					VL_FILME_W		:= round((VL_FILME_W)::numeric,2);
				END IF;

			END IF;

			if (ie_origem_proced_p = 15) then
				begin
				ie_origem_proced_w := ie_origem_proced_p;
								
				select	max(nr_seq_edition)
				into STRICT	nr_seq_edition_w
				from	health_fund_drg
				where	cd_health_fund = cd_convenio_p
				and 	ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_conta_p) between ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(coalesce(dt_start_validity,dt_conta_p)) and ESTABLISHMENT_TIMEZONE_UTILS.EndOfDay(coalesce(dt_end_validity,dt_conta_p))
				and 	cd_estabelecimento = cd_estabelecimento_p;
				/* We are doing actual calculation in PROCESSAR_CONTA_DRG_AUS procedure*/

				if (coalesce(nr_seq_edition_w,0) > 0) then
								
					vl_custo_operacional_w := 1;
					vl_procedimento_w	   := 1;
					vl_anestesista_w       := 0;
					vl_medico_w            := 0;
					vl_auxiliares_w        := 0;
					vl_filme_w             := 0;
					vl_pto_procedimento_w  := 0;
					vl_pto_custo_operac_w  := 0;
					vl_pto_anestesista_w   := 0;
					vl_pto_medico_w        := 0;
					vl_pto_auxiliares_w    := 0;
					vl_pto_materiais_w     := 0;
					nr_porte_anestesico_w  := 0;
					cd_edicao_amb_w        := 0;
					ie_preco_informado_w   := 0;
					nr_seq_ajuste_proc_w   := 0;
					qt_pontuacao_w         := 0;

				else
					CALL wheb_mensagem_pck.exibir_mensagem_abort(1075947);
				end if;
				
				exception
				when others then
					vl_procedimento_w     :=0;
					vl_custo_operacional_w:=0;
					vl_anestesista_w      :=0;
					vl_medico_w           :=0;
					vl_auxiliares_w       :=0;
					vl_filme_w            :=0;
					vl_pto_procedimento_w :=0;
					vl_pto_custo_operac_w :=0;
					vl_pto_anestesista_w  :=0;
					vl_pto_medico_w       :=0;
					vl_pto_auxiliares_w   :=0;
					vl_pto_materiais_w    :=0;
					nr_porte_anestesico_w :=0;
					cd_edicao_amb_w       :=0;
					ie_preco_informado_w  :=0;
					nr_seq_ajuste_proc_w  :=0;
					qt_pontuacao_w        :=0;
					CALL gravar_log_calculo('N');
				end;
			end if;
			

			IF	((ie_origem_proced_w	= 20) or (ie_origem_proced_w = 1) or (ie_origem_proced_w = 4)) and
				((coalesce(ie_consider_level_w,'N') = 'S') or (cd_level_w IS NOT NULL AND cd_level_w::text <> '')) THEN
				begin
					
					select	coalesce(max(vl_price),0)
					into STRICT	vl_preco_proc_level_w
					from	health_fund_price_level
					where	cd_convenio = cd_convenio_p
					and		cd_level = cd_level_w
					and		ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_conta_p) BETWEEN ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(coalesce(dt_start_validity,dt_conta_p)) AND ESTABLISHMENT_TIMEZONE_UTILS.EndOfDay(coalesce(dt_end_validity, dt_conta_p));

					VL_CUSTO_OPERACIONAL_W := vl_preco_proc_level_w;
				end;
			end if;

			
			if (ie_tipo_convenio_w = 13) and (coalesce(cd_level_w::text, '') = '') then
				
				select	ie_tipo_atendimento
				into STRICT	ie_tipo_atendimento_w
				from	atendimento_paciente
				where 	nr_atendimento = nr_atendimento_w;		
				
				if (coalesce(cd_edicao_amb_w,0) > 0) then

					select	max(vl_dva_fee),
						max(vl_rmfs_in),
						max(vl_rmfs_out),
						max(ie_derived),
						max(ie_vap_metro),
						max(ie_vap_regional)
											
					into STRICT	vl_dva_fee_w,
						vl_rmfs_in_w,
						vl_rmfs_out_w,
						ie_derived_w,
						ie_vap_metro_w,
						ie_vap_regional_w
					from	dva_price_catalogue
					where	cd_procedimento = cd_procedimento_p
					and		ie_origem_proced = ie_origem_proced_w
					and 	nr_edicao_amb = cd_edicao_amb_w;
	

					if (ie_tipo_atendimento_w = 8 and (coalesce(ie_vap_regional_w,'N') <> 'Y' or coalesce(ie_vap_metro_w,'N') <> 'Y') and coalesce(vl_rmfs_out_w,0)<> 0) then
						vl_custo_operacional_w :=  vl_rmfs_out_w;
					elsif (ie_tipo_atendimento_w = 1 and (coalesce(ie_vap_regional_w,'N') <> 'Y' or coalesce(ie_vap_metro_w,'N') <> 'Y' )  and coalesce(vl_rmfs_in_w,0)<> 0) then
						vl_custo_operacional_w :=  vl_rmfs_in_w;
					else
						vl_custo_operacional_w := coalesce(vl_dva_fee_w,0);
					end if;

					vl_procedimento_w	:=0;
					vl_anestesista_w       	:=0;
					vl_medico_w            	:=0;
					vl_auxiliares_w        	:=0;
					vl_filme_w             	:=0;
					vl_pto_procedimento_w  	:=0;
					vl_pto_custo_operac_w  	:=0;
					vl_pto_anestesista_w   	:=0;
					vl_pto_medico_w        	:=0;
					vl_pto_auxiliares_w    	:=0;
					vl_pto_materiais_w     	:=0;
					nr_porte_anestesico_w  	:=0;
					cd_edicao_amb_w        	:=0;
					ie_preco_informado_w   	:=0;
					nr_seq_ajuste_proc_w   	:=0;
					qt_pontuacao_w         	:=0;					
				end if;


			end if;

			IF (ie_origem_proced_w	= 5) THEN
				BEGIN
        --Origem: CBHPM = 729018
				CALL Gravar_log_calculo_proc(cd_procedimento_p, ie_origem_proced_w, nr_sequencia_p, cd_convenio_p, cd_categoria_p, '10 - '|| obter_desc_expressao(729018),

ie_gravar_log_w);

				select 	obter_se_medico_credenciado(cd_estabelecimento_p, cd_medico_p, cd_convenio_p, null, cd_especialidade_medica_p,
					cd_categoria_p, cd_setor_atendimento_p, cd_plano_p, null, ie_tipo_atendimento_p, cd_funcao_medico_p, null)
				into STRICT	ie_credenciado_w
				;

				/*   Obter os Valores da tabela CBHPM */

				SELECT * FROM SELECT * FROM Obter_Preco_CBHPM(
					cd_estabelecimento_p, dt_conta_p, cd_procedimento_p, ie_origem_proced_w, coalesce(coalesce(dt_vigencia_cbhpm_ajuste_w, dt_vigencia_cbhpm_w), dt_inicio_vigencia_w), cd_convenio_p, null, ie_video_p, vl_medico_cbhpm_w, cd_porte_cbhpm_w, tx_porte_cbhpm_w, qt_uco_cbhpm_w, nr_porte_anest_cbhpm_w, nr_auxiliar_cbhpm_w, qt_filme_cbhpm_w) INTO STRICT vl_medico_cbhpm_w, cd_porte_cbhpm_w, tx_porte_cbhpm_w, qt_uco_cbhpm_w, nr_porte_anest_cbhpm_w, nr_auxiliar_cbhpm_w, qt_filme_cbhpm_w, , , , , ,  INTO cd_porte_cbhpm_w, tx_porte_cbhpm_w, qt_uco_cbhpm_w, nr_porte_anest_cbhpm_w, nr_auxiliar_cbhpm_w, qt_filme_cbhpm_w;

				CALL Gravar_log_calculo_proc(cd_procedimento_p, ie_origem_proced_w, nr_sequencia_p, cd_convenio_p, cd_categoria_p, wheb_mensagem_pck.get_texto(299983,'VL_MEDICO_CBHPM='||vl_medico_cbhpm_w), ie_gravar_log_w);
				CALL Gravar_log_calculo_proc(cd_procedimento_p, ie_origem_proced_w, nr_sequencia_p, cd_convenio_p, cd_categoria_p, wheb_mensagem_pck.get_texto(299984,'CD_PORTE_CBHPM='||cd_porte_cbhpm_w), ie_gravar_log_w);
				CALL Gravar_log_calculo_proc(cd_procedimento_p, ie_origem_proced_w, nr_sequencia_p, cd_convenio_p, cd_categoria_p, wheb_mensagem_pck.get_texto(299986,'TX_PORTE_CBHPM='||tx_porte_cbhpm_w), ie_gravar_log_w);
				--729020 = UCO CBHPM
        CALL Gravar_log_calculo_proc(cd_procedimento_p, ie_origem_proced_w, nr_sequencia_p, cd_convenio_p, cd_categoria_p,'14 - '|| obter_desc_expressao(729020) || qt_uco_cbhpm_w, ie_gravar_log_w);
				CALL Gravar_log_calculo_proc(cd_procedimento_p, ie_origem_proced_w, nr_sequencia_p, cd_convenio_p, cd_categoria_p, wheb_mensagem_pck.get_texto(299988,'NR_PORTE_ANEST_CBHPM='||nr_porte_anest_cbhpm_w), ie_gravar_log_w);

				IF (ie_arredondamento_w = 'R') THEN
					VL_CUSTO_OPERACIONAL_W	:= (qt_uco_cbhpm_w * VL_CH_CUSTO_OPER_W * TX_AJUSTE_CUSTO_OPER_W);
					VL_MEDICO_W		:= (vl_medico_cbhpm_w * VL_CH_HONORARIOS_W * TX_AJUSTE_MEDICO_W);
					VL_FILME_W		:= (qt_filme_cbhpm_w * coalesce(VL_M2_FILME_W,0) * TX_AJUSTE_FILME_W);
				ELSE
					VL_CUSTO_OPERACIONAL_W	:= round((qt_uco_cbhpm_w * VL_CH_CUSTO_OPER_W * TX_AJUSTE_CUSTO_OPER_W)::numeric,2);
					VL_MEDICO_W		:= round((vl_medico_cbhpm_w * VL_CH_HONORARIOS_W * TX_AJUSTE_MEDICO_W)::numeric,2);
					VL_FILME_W		:= ROUND((qt_filme_cbhpm_w * coalesce(VL_M2_FILME_W,0) * TX_AJUSTE_FILME_W),2);
				END IF;

				CALL Gravar_log_calculo_proc(cd_procedimento_p, ie_origem_proced_w, nr_sequencia_p, cd_convenio_p, cd_categoria_p, wheb_mensagem_pck.get_texto(299994,'VL_MEDICO='||VL_MEDICO_W||';VL_MEDICO_CBHPM='||vl_medico_cbhpm_w||';VL_CH_HONORARIOS='||VL_CH_HONORARIOS_W||';TX_AJUSTE_MEDICO='||TX_AJUSTE_MEDICO_W), ie_gravar_log_w);
				CALL Gravar_log_calculo_proc(cd_procedimento_p, ie_origem_proced_w, nr_sequencia_p, cd_convenio_p, cd_categoria_p, wheb_mensagem_pck.get_texto(299995,'VL_CUSTO_OPERACIONAL='||VL_CUSTO_OPERACIONAL_W||';QT_UCO_CBHPM='||qt_uco_cbhpm_w||';VL_CH_CUSTO_OPER='||VL_CH_CUSTO_OPER_W||';TX_AJUSTE_CUSTO_OPER='||TX_AJUSTE_CUSTO_OPER_W), ie_gravar_log_w);
				CALL Gravar_log_calculo_proc(cd_procedimento_p, ie_origem_proced_w, nr_sequencia_p, cd_convenio_p, cd_categoria_p, wheb_mensagem_pck.get_texto(299994,'VL_MEDICO='||VL_MEDICO_W||';VL_MEDICO_CBHPM='||vl_medico_cbhpm_w||';VL_CH_HONORARIOS='||VL_CH_HONORARIOS_W||';TX_AJUSTE_MEDICO='||TX_AJUSTE_MEDICO_W), ie_gravar_log_w);

				NR_PORTE_ANESTESICO_W	:= coalesce(nr_porte_anest_cbhpm_w,0);
				NR_AUXILIARES_W		:= coalesce(nr_auxiliar_cbhpm_w,0);
				VL_AUXILIARES_INFORM_W	:= 0;
				VL_PTO_CUSTO_OPERAC_W	:= (coalesce(qt_uco_cbhpm_w,0) * TX_AJUSTE_CUSTO_OPER_W);
				VL_PTO_MEDICO_W		:= 0;
				CD_MOEDA_W			:= 0;
				VL_ANEST_INFORM_W		:= 0;
				END;
			END IF;
			END;
		END IF;

		IF  NOT(ie_regra_arredondamento_tx_w = 'S' AND ie_arredondamento_w = 'R') THEN
			VL_FILME_W := Arredondamento(VL_FILME_W, NR_DEC_UNITARIO_W, IE_TIPO_ROUNDED_W);
		END IF;
		vl_pto_materiais_w		:= vl_filme_w;
		/* Calcular Valor dos auxiliares */

		IF (vl_auxiliares_inform_w > 0) THEN
			vl_auxiliares_w 	:= vl_auxiliares_inform_w;
		ELSE
			IF (nr_auxiliares_w > 0) THEN
				BEGIN
				vl_auxiliares_w 	:= ((vl_medico_w * .3) +
							(vl_medico_w * (nr_auxiliares_w -1) * .2));
							
				/* Valor original - Gravar */

				vl_aux_tab_w	:= ((vl_medico_tab_w * .3) +
							(vl_medico_tab_w * (nr_auxiliares_w -1) * .2));
					
				vl_pto_auxiliares_w 	:= ((vl_pto_medico_w * .3) +
							(vl_pto_medico_w * (nr_auxiliares_w -1) * .2));
				END;
			END IF;
		END IF;
	/* 	Marcus/Bola 03/09/2002 a pedido do CHU Se porte zero e anestesista informado porte 3 */

		IF (ie_origem_proced_w	in (1,4,8)) THEN
			BEGIN
			IF (coalesce(NR_PORTE_ANESTESICO_W,0) = 0) THEN
				BEGIN
				SELECT	COUNT(*)
				INTO STRICT	qt_anestesista_w
				FROM	funcao_medico c,
					procedimento_participante b
				WHERE	b.nr_sequencia	= nr_sequencia_p
				AND	b.ie_funcao	= c.cd_funcao
				AND	ie_anestesista	= 'S';

				BEGIN
				SELECT	ds_edicao_amb   /* Felipe - 12/04/06 - OS32026 - Incluso o tratamento de qual edicao*/
				INTO STRICT	ds_edicao_amb_w
				FROM	edicao_amb
				WHERE	cd_edicao_amb	= cd_edicao_amb_w;
				EXCEPTION
					WHEN OTHERS THEN
						ds_edicao_amb_w	:= 'nulo';
				END;

				SELECT	position(UPPER('AMB90') in UPPER(ds_edicao_amb_w)),
					position(UPPER('AMB1990') in UPPER(ds_edicao_amb_w))
				INTO STRICT	qt_amb90_w,
					qt_amb1990_w
				;

				IF	((qt_anestesista_w > 0) or (coalesce(ie_calcular_anest_p,'N') = 'S')) THEN
					IF (qt_amb90_w	> 0) OR (qt_amb1990_w	> 0) THEN
						nr_porte_anestesico_w	:= 1;
					ELSE
						nr_porte_anestesico_w	:= 3;
					END IF;					
				
					/*OS 876776 - obter regra de porte anestesico*/

					nr_porte_anestes_out_w := obter_porte_anestesico_regra(cd_edicao_amb_w, nr_porte_anestes_out_w);
					
									
					if (nr_porte_anestes_out_w IS NOT NULL AND nr_porte_anestes_out_w::text <> '') then
						nr_porte_anestesico_w := nr_porte_anestes_out_w;
					end if;				
					
				END IF;
				
				if (varie_consiste_anest_porte_w = 'P') and (coalesce(NR_PORTE_ANESTESICO_W::text, '') = '') then
					nr_porte_anestesico_w	:= -1;
				elsif (varie_consiste_anest_porte_w = 'S') and (coalesce(NR_PORTE_ANESTESICO_W,0) = 0) then
					nr_porte_anestesico_w	:= -1;
				end if;
				END;
			END IF;			
			
			/* Obter Valor do Porte Anestesico */

			BEGIN
			SELECT  VL_PORTE_ANESTESICO
			INTO STRICT  VL_PORTE_ANESTESICO_W
			FROM  PORTE_ANESTESICO
			WHERE (CD_EDICAO_AMB       = CD_EDICAO_AMB_W)
			AND (NR_PORTE_ANESTESICO = NR_PORTE_ANESTESICO_W)
			AND  coalesce(NR_PORTE_ANEST_NAO_EXISTE_W,0) = 0
			AND  (DT_INICIO_VIGENCIA  =
			 (SELECT MAX(DT_INICIO_VIGENCIA)
				FROM PORTE_ANESTESICO A
				WHERE (A.CD_EDICAO_AMB       = CD_EDICAO_AMB_W)
				AND (A.NR_PORTE_ANESTESICO = NR_PORTE_ANESTESICO_W)
				AND (A.DT_INICIO_VIGENCIA  <=  DT_CONTA_P)));
			EXCEPTION
			WHEN OTHERS THEN
				vl_porte_anestesico_w := 0;
			END;
			
			
			/* Calcular Valor do anestesista */


			/* INCLUIDO BOLA 23/05 PARA ORCAMENTO NO HSJ INICIO */

			IF (vl_porte_anestesico_w 	= 0) AND (VL_ANEST_INFORM_W	> 0) THEN
				vl_porte_anestesico_w	:= VL_ANEST_INFORM_W;
			END IF;
			/* INCLUIDO BOLA 23/05 PARA ORCAMENTO NO HSJ FINAL */
			
			
			IF 	vl_porte_anestesico_w > 0 THEN
				BEGIN
				
				if (coalesce(ie_ch_anestesista_w,'S') = 'N') then
					vl_ch_honorarios_w:= 1;
				end if;
				
				vl_anestesista_w	:= (vl_porte_anestesico_w * vl_ch_honorarios_w * tx_ajuste_partic_w);
				/*Valor original - gravar */

				vl_anestesista_tab_w	:= vl_porte_anestesico_w * vl_ch_honorarios_w;
				
				if (ie_ponto_amb_w = 'S') then
					vl_pto_anestesista_w 	:= (vl_porte_anestesico_w * tx_ajuste_medico_w);
				elsif (ie_ponto_amb_w = 'N') then
					vl_pto_anestesista_w 	:= vl_porte_anestesico_w;
				end if;
								
				END;
			END IF;
			END;
		END IF;

		IF (ie_origem_proced_w	= 5) THEN
			BEGIN
			
			if (coalesce(ie_ch_anestesista_w,'S') = 'N') then
				vl_ch_honorarios_w:= 1;
			end if;
			
			vl_anestesista_w		:= (coalesce(vl_porte_anest_cbhpm_w,0) * vl_ch_honorarios_w * tx_ajuste_partic_w);
			/*Valor original - gravar */

			vl_anestesista_tab_w	:=(coalesce(vl_porte_anest_cbhpm_w,0) * vl_ch_honorarios_w);
			
			vl_pto_anestesista_w	:= 0;
			END;
		END IF;

		IF  NOT(ie_regra_arredondamento_tx_w = 'S' AND ie_arredondamento_w = 'R') THEN
			VL_FILME_W := Arredondamento(VL_FILME_W, NR_DEC_TOTAL_W, IE_TIPO_ROUNDED_W);
		END IF;

		/* Calcular Valor do procedimento */


		/* rotina alterada em 10/05/00 por Marcus */

		IF 	vl_proc_ajustado_w > 0 THEN
			BEGIN
			IF (ie_entra_filme_neg_w	= 'N') THEN /* Felipe Martini em 17/08/2008  OS100858 */
				vl_procedimento_w 	:= vl_proc_ajustado_w;
				VL_Soma_Proc_W		:= (vl_custo_operacional_w + vl_medico_w +
								   vl_auxiliares_w + vl_anestesista_w + vl_filme_w);
				IF (vl_soma_proc_w = 0) THEN
					PR_AJUSTE_W		:= 1;
				ELSE
					PR_AJUSTE_W		:= vl_proc_ajustado_w / vl_soma_proc_w;
				END IF;
				vl_medico_w := vl_medico_w * pr_ajuste_w;
				vl_anestesista_w := vl_anestesista_w * pr_ajuste_w;
				vl_auxiliares_w := vl_auxiliares_w * pr_ajuste_w;
				vl_filme_w := vl_filme_w * pr_ajuste_w;
				IF (vl_custo_operacional_w <> 0) THEN
					vl_custo_operacional_w := vl_proc_ajustado_w - vl_medico_w - vl_auxiliares_w -
						   vl_anestesista_w - vl_filme_w;
				END IF;

				VL_Soma_Proc_W		:= (vl_custo_operacional_w + vl_medico_w +
								   vl_auxiliares_w + vl_anestesista_w + vl_filme_w);

				vl_saldo_w	:= vl_procedimento_w - VL_Soma_Proc_W;

				IF (VL_saldo_W <> 0) THEN
					IF (vl_custo_operacional_w	> 0) THEN
						vl_custo_operacional_w	:= vl_custo_operacional_w + vl_saldo_w;
					ELSIF (vl_filme_w	> 0) THEN
						vl_filme_w	:= vl_filme_w + vl_saldo_w;
					ELSIF (vl_medico_w	> 0) THEN
						vl_medico_w	:= vl_medico_w + vl_saldo_w;
					END IF;
				END IF;
			ELSIF (ie_entra_filme_neg_w	= 'S') THEN /* Felipe Martini em 17/08/2008  OS100858 */
				vl_procedimento_w 	:= vl_proc_ajustado_w;
				VL_Soma_Proc_W		:= (vl_custo_operacional_w + vl_medico_w +
								   vl_auxiliares_w + vl_anestesista_w );
				IF (vl_soma_proc_w = 0) THEN
					PR_AJUSTE_W		:= 1;
				ELSE
					PR_AJUSTE_W		:= vl_proc_ajustado_w / vl_soma_proc_w;
				END IF;
				vl_medico_w := vl_medico_w * pr_ajuste_w;
				vl_anestesista_w := vl_anestesista_w * pr_ajuste_w;
				vl_auxiliares_w := vl_auxiliares_w * pr_ajuste_w;
				IF (vl_custo_operacional_w <> 0) THEN
					vl_custo_operacional_w := vl_proc_ajustado_w - vl_medico_w - vl_auxiliares_w -
						   vl_anestesista_w;
				END IF;

				VL_Soma_Proc_W		:= (vl_custo_operacional_w + vl_medico_w +
								   vl_auxiliares_w + vl_anestesista_w);

				vl_saldo_w	:= vl_procedimento_w - VL_Soma_Proc_W;

				IF (VL_saldo_W <> 0) THEN
					IF (vl_custo_operacional_w	> 0) THEN
						vl_custo_operacional_w	:= vl_custo_operacional_w + vl_saldo_w;
					ELSIF (vl_medico_w	> 0) THEN
						vl_medico_w	:= vl_medico_w + vl_saldo_w;
					END IF;
				END IF;
				vl_procedimento_w	:= vl_procedimento_w + vl_filme_w;
				
			END IF;
			/* Valor original - gravar */

			vl_procedimento_tab_w	:= (coalesce(vl_custo_oper_tab_w,0) + coalesce(vl_anestesista_tab_w,0) +
						coalesce(vl_medico_tab_w,0) + coalesce(vl_filme_tab_w,0) + coalesce(vl_aux_tab_w,0));
			
			END;
		ELSE
			BEGIN
			vl_procedimento_w 	:= (coalesce(VL_CUSTO_OPERACIONAL_W,0) + coalesce(VL_ANESTESISTA_W,0) +
							coalesce(VL_MEDICO_W,0) + coalesce(VL_FILME_W,0) + coalesce(VL_AUXILIARES_W,0));
							
			/* Valor original - gravar */

			vl_procedimento_tab_w	:= (coalesce(vl_custo_oper_tab_w,0) + coalesce(vl_anestesista_tab_w,0) +
							coalesce(vl_medico_tab_w,0) + coalesce(vl_filme_tab_w,0) + coalesce(vl_aux_tab_w,0));
			
			vl_pto_procedimento_w 	:= (VL_PTO_CUSTO_OPERAC_W + VL_PTO_ANESTESISTA_W +
							VL_PTO_MEDICO_W + VL_PTO_AUXILIARES_W);
			END;
		END IF;

		END;
	END IF;
	IF (cd_moeda_w	> 0) THEN
		BEGIN
		BEGIN

		SELECT	ds_sigla_moeda
		INTO STRICT		ds_sigla_moeda_w
		FROM		moeda
		WHERE		cd_moeda	= cd_moeda_w;

		EXCEPTION
		    WHEN OTHERS THEN
			 ds_sigla_moeda_w := '';
		END;
		IF (ds_sigla_moeda_w <> 'CH') THEN
			BEGIN
			VL_PTO_PROCEDIMENTO_W	:= 0;
			VL_PTO_CUSTO_OPERAC_W	:= 0;
			VL_PTO_ANESTESISTA_W	:= 0;
			VL_PTO_MEDICO_W		:= 0;
			VL_PTO_AUXILIARES_W	:= 0;
			VL_PTO_MATERIAIS_W	:= 0;
			END;
		END IF;
		END;
	END IF;

	IF (ie_preco_custo_w	= 'S') AND (coalesce(nr_seq_ajuste_proc_w, 0) = 0) THEN
		BEGIN

		SELECT	MAX(cd_tabela_venda)
		INTO STRICT	cd_tabela_custo_w
		FROM	parametro_custo a
		WHERE	cd_estabelecimento 	= cd_estabelecimento_p;


		SELECT * FROM Obter_Custo_Procedimento(cd_estabelecimento_p, cd_procedimento_p, coalesce(ie_origem_proced_p, ie_origem_proced_w), nr_seq_proc_interno_p, nr_seq_exame_lab_p, cd_tabela_custo_w, cd_convenio_p, cd_setor_Atendimento_p, vl_procedimento_w, VL_CUSTO_OPERACIONAL_W, vl_Medico_w, VL_FILME_W, ie_apuracao_custo_w, vl_custo_unitario_w, vl_custo_variavel_w, vl_custo_sadt_w, vl_custo_dir_apoio_w, vl_custo_mao_obra_w, vl_custo_direto_w, vl_custo_indireto_w, vl_despesa_w, vl_custo_hm_w, pr_imposto_w, dt_conta_p, NULL, NULL, NULL, NULL, vl_preco_calculado_w, null, 'N', null, null, null) INTO STRICT ie_apuracao_custo_w, vl_custo_unitario_w, vl_custo_variavel_w, vl_custo_sadt_w, vl_custo_dir_apoio_w, vl_custo_mao_obra_w, vl_custo_direto_w, vl_custo_indireto_w, vl_despesa_w, vl_custo_hm_w, pr_imposto_w, vl_preco_calculado_w;

			IF (cd_procedimento_w = 99080012)  AND (qt_resumo_w = 0) AND (vl_custo_direto_w > 0) THEN
				vl_custo_w		:= vl_custo_unitario_w;
				vl_custo_direto_w	:= vl_custo_direto_w;
			ELSIF (ie_apuracao_custo_w = 'P') THEN
				vl_custo_w		:= vl_custo_unitario_w;
				vl_custo_variavel_w	:= vl_custo_variavel_w;
				vl_custo_sadt_w		:= vl_custo_sadt_w;
				vl_custo_dir_apoio_w	:= vl_custo_dir_apoio_w;
				vl_custo_mao_obra_w	:= vl_custo_mao_obra_w;
				vl_custo_direto_w		:= vl_custo_direto_w;
				vl_custo_indireto_w		:= vl_custo_Indireto_w;
				vl_despesa_w		:= vl_Despesa_w;
				vl_custo_hm_w		:= vl_custo_hm_w;
			ELSIF (ie_apuracao_custo_w = 'Q') THEN
				vl_custo_w		:= round((qt_resumo_w * vl_custo_unitario_w)::numeric, 2);
				vl_custo_sadt_w		:= qt_resumo_w * vl_custo_sadt_w;
				vl_custo_variavel_w	:= round((qt_resumo_w * vl_custo_variavel_w)::numeric, 2);
				vl_custo_dir_apoio_w	:= qt_resumo_w * vl_custo_dir_apoio_w;
				vl_custo_mao_obra_w	:= qt_resumo_w * vl_custo_mao_obra_w;
				vl_custo_direto_w		:= qt_resumo_w * vl_custo_direto_w;
				vl_custo_indireto_w		:= qt_resumo_w * vl_custo_Indireto_w;
				vl_despesa_w		:= qt_resumo_w * vl_Despesa_w;
				vl_custo_hm_w		:= qt_resumo_w * vl_custo_hm_w;
			END IF;

		vl_custo_w	:=	vl_custo_variavel_w + vl_custo_sadt_w + vl_custo_dir_apoio_w +
					vl_custo_mao_obra_w + vl_custo_direto_w +
					vl_custo_indireto_w + vl_despesa_w + vl_custo_hm_w;

		IF (coalesce(pr_imposto_w, 0) > 0) THEN
			vl_custo_w	:= vl_custo_w  + (vl_custo_w * pr_imposto_w);
		END IF;

		vl_procedimento_w			:= vl_custo_w;
		VL_CUSTO_OPERACIONAL_W	:= 0;
		VL_ANESTESISTA_W		:= 0;
		VL_MEDICO_W			:= 0;
		VL_AUXILIARES_W		:= 0;
		VL_FILME_W			:= 0;
		VL_PTO_PROCEDIMENTO_W	:= 0;
		VL_PTO_CUSTO_OPERAC_W	:= 0;
		VL_PTO_ANESTESISTA_W		:= 0;
		VL_PTO_MEDICO_W		:= 0;
		VL_PTO_AUXILIARES_W		:= 0;
		VL_PTO_MATERIAIS_W		:= 0;
		NR_PORTE_ANESTESICO_W	:= 0;
		CD_EDICAO_AMB_W		:= -1;
		ie_preco_informado_w		:= 'N';

		END;
	END IF;

	IF (coalesce(VL_ANESTESISTA_neg_W,0) > 0) THEN
		vl_anestesista_w	:= VL_ANESTESISTA_neg_W;
		VL_PROCEDIMENTO_W	:= VL_PROCEDIMENTO_W	+ VL_ANESTESISTA_neg_W;
	END IF;

	IF (coalesce(VL_aux_neg_W,0) > 0) THEN
		vl_auxiliares_w		:= VL_aux_neg_W;
		VL_PROCEDIMENTO_W	:= VL_PROCEDIMENTO_W	+ VL_aux_neg_W;
	END IF;
	if (coalesce(vl_filme_neg_w,0) > 0) then
		VL_PROCEDIMENTO_W	:= VL_PROCEDIMENTO_W - VL_FILME_W	+ vl_filme_neg_w;
		VL_FILME_W :=  vl_filme_neg_w;
	end if;
	
end if;


/* Valor original */

begin
	select	substr(value,1,64)
	into STRICT	ds_nls_territory_w
	from	v$nls_parameters
	where	parameter = 'NLS_TERRITORY';
exception
when others then
	ds_nls_territory_w:=null;	
end;

if (philips_param_pck.get_cd_pais = 2) or (upper(ds_nls_territory_w) = 'MEXICO')then
	SELECT 	MAX(coalesce(Grava_log_preco_pck.get_ie_gravar_log,'N'))
	INTO STRICT	ie_gravar_log_w
	;
	
	if (ie_gravar_log_w = 'S') then
		CALL gravar_propaci_log_preco(nr_sequencia_p,'ORIG',tx_ajuste_proc_w,vl_medico_tab_w,vl_anestesista_tab_w,
							vl_aux_tab_w,vl_custo_oper_tab_w,vl_filme_tab_w,
							vl_procedimento_tab_w,ie_preco_informado_w,nm_usuario_logado_w,'S');
	end if;
end if;

VL_PROCEDIMENTO_P      		:= VL_PROCEDIMENTO_W;
VL_CUSTO_OPERACIONAL_P 		:= VL_CUSTO_OPERACIONAL_W;
VL_ANESTESISTA_P       		:= VL_ANESTESISTA_W;
VL_MEDICO_P            		:= VL_MEDICO_W;
VL_AUXILIARES_P        		:= VL_AUXILIARES_W;
VL_MATERIAIS_P         		:= VL_FILME_W;
VL_PTO_PROCEDIMENTO_P  		:= VL_PTO_PROCEDIMENTO_W;
VL_PTO_CUSTO_OPERAC_P 		:= VL_PTO_CUSTO_OPERAC_W;
VL_PTO_ANESTESISTA_P    	:= VL_PTO_ANESTESISTA_W;
VL_PTO_MEDICO_P         	:= VL_PTO_MEDICO_W;
VL_PTO_AUXILIARES_P     	:= VL_PTO_AUXILIARES_W;
VL_PTO_MATERIAIS_P     		:= VL_PTO_MATERIAIS_W;
QT_PORTE_ANESTESICO_P		:= NR_PORTE_ANESTESICO_W;
CD_EDICAO_AMB_P			:= CD_EDICAO_AMB_W;
ie_valor_informado_p		:= ie_preco_informado_w;
nr_seq_ajuste_proc_p		:= nr_seq_ajuste_proc_w;
QT_PONTOS_P			:= qt_pontuacao_w;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE define_preco_procedimento ( CD_ESTABELECIMENTO_P bigint, CD_CONVENIO_P bigint, CD_CATEGORIA_P text, DT_CONTA_P timestamp, CD_PROCEDIMENTO_P bigint, CD_TIPO_ACOMODACAO_P bigint, IE_TIPO_ATENDIMENTO_P bigint, CD_SETOR_ATENDIMENTO_P bigint, CD_MEDICO_P text, CD_FUNCAO_MEDICO_P bigint, QT_IDADE_P bigint, nr_seq_exame_lab_p bigint, nr_seq_proc_interno_p bigint, cd_usuario_convenio_p text, cd_plano_p text, ie_clinica_p bigint, cd_empresa_ref_p bigint, ie_sexo_p text, VL_PROCEDIMENTO_P INOUT bigint, VL_CUSTO_OPERACIONAL_P INOUT bigint, VL_ANESTESISTA_P INOUT bigint, VL_MEDICO_P INOUT bigint, VL_AUXILIARES_P INOUT bigint, VL_MATERIAIS_P INOUT bigint, VL_PTO_PROCEDIMENTO_P INOUT bigint, VL_PTO_CUSTO_OPERAC_P INOUT bigint, VL_PTO_ANESTESISTA_P INOUT bigint, VL_PTO_MEDICO_P INOUT bigint, VL_PTO_AUXILIARES_P INOUT bigint, VL_PTO_MATERIAIS_P INOUT bigint, QT_PORTE_ANESTESICO_P INOUT bigint, QT_PONTOS_P INOUT bigint, CD_EDICAO_AMB_P INOUT bigint, ie_valor_informado_p INOUT text, nr_seq_ajuste_proc_p INOUT bigint, nr_sequencia_p bigint, ie_atend_retorno_p text, QT_DIAS_INTERNACAO_P bigint, ie_video_p text, ie_beira_leito_p text, ie_spect_p text, cd_cgc_prestador_p text, cd_equipamento_p bigint, nr_seq_tipo_acidente_p bigint, cd_especialidade_medica_p bigint, cd_procedencia_p text, nr_seq_cobertura_p bigint, nr_seq_classif_atend_p bigint, ie_carater_inter_sus_p text, cd_dependente_p bigint, nr_seq_grupo_rec_p bigint, ie_origem_proced_p bigint default null, nr_seq_origem_p bigint DEFAULT NULL, nr_seq_classif_medico_p bigint DEFAULT NULL, ie_calcular_anest_p text default null) FROM PUBLIC;

