-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_prescricao_anestesica (nr_cirurgia_p bigint, nm_usuario_p text, ie_commit_p text default 'S') AS $body$
DECLARE

										
cd_pf_usuario_w				varchar(10);
ie_usuario_medico_w			varchar(1);
ie_tipo_evol_w				varchar(3);
nr_nova_prescr_w			bigint;
nr_horas_validade_w			bigint;
cd_estabelecimento_w		estabelecimento.CD_ESTABELECIMENTO%type;
cd_setor_w					bigint;
ie_regra_setor_w			varchar(10);
ie_calcula_validade_w		varchar(10);
ie_estender_w				varchar(10);
qt_peso_w					real;
qt_altura_cm_w				real;
nr_atendimento_w			bigint;
cd_pessoa_fisica_w			varchar(10);
cd_medico_prescri_w			varchar(20);
dt_primeiro_horario_w		timestamp;
ie_extensao_regra_w			varchar(1)	:= 'N';
ie_origem_inf_w				varchar(1);
ie_setor_entrega_w			varchar(1);
cd_setor_entrega_w			integer;
cd_setor_prescr_w			bigint;
dt_prescricao_w				timestamp;
hr_prescricao_w				varchar(20);
cd_funcao_w					bigint;
cd_perfil_w					bigint;
cd_medico_w					varchar(20);
ds_erro_w					varchar(2000);
ie_existe_prescr_w			varchar(1) := 'N';
nr_seq_pepo_w				bigint;
nr_cirurgia_w				bigint;
ie_estrutura_pepo_w			varchar(1);
dt_inicio_prescr_w			prescr_medica.dt_inicio_prescr%type;
ie_gerar_prescr_w			varchar(1);
ie_rep_cpoe_w				parametro_medico.ie_rep_cpoe%type;
dt_min_horario_w			prescr_medica.dt_primeiro_horario%type;	
dt_horario_prescricao_w				prescr_medica.dt_prescricao%type;


C04 CURSOR FOR
SELECT nr_cirurgia
FROM cirurgia  
WHERE nr_seq_pepo = nr_seq_pepo_w;

	PROCEDURE Inserir_medicamento_prescr(nr_prescricao_p	bigint,
										 nr_cirurgia_p		bigint,
										 nm_usuario_p		text,
										 nr_seq_pepo_p		bigint,
										 ie_commit_p 		text := 'S') is

	cd_unidade_medida_consumo_w	varchar(30);
	ie_via_aplicacao_w			varchar(5);
	ie_possui_adm_w				varchar(2) := 'N';
	nr_seq_material_w			integer;
	ie_agrupador_w				smallint := 2;
	nr_agrupamento_w			double precision;
	qt_conversao_dose_w			double precision;
	cd_intervalo_w				prescr_material.cd_intervalo%type;
	ds_dose_diferenciada_w		prescr_material.ds_dose_diferenciada%type;
	ds_horarios_w 				prescr_material.ds_horarios%type;
	nr_ocorrencia_w 			prescr_material.nr_ocorrencia%type;
	qt_unitaria_w 				prescr_material.qt_unitaria%type;
	qt_material_w 				prescr_material.qt_material%type;
	qt_dose_total_w 			prescr_material.qt_material%type;/*usado para somar os qt_dose da cirurgia_agente_anest_ocor*/
	nr_seq_cirur_agente_w		cirurgia_agente_anestesico.nr_sequencia%type;
	cd_material_w				cirurgia_agente_anestesico.cd_material%type;
	cd_unid_medida_adm_w		cirurgia_agente_anestesico.cd_unid_medida_adm%type;
	qt_dose_w					cirurgia_agente_anest_ocor.qt_dose%type;
	dt_inicio_adm_w				cirurgia_agente_anest_ocor.dt_inicio_adm%type;/*usado para gerar o ds_horarios da prescr_material*/
	hr_prim_horario_w 			cirurgia_agente_anest_ocor.dt_inicio_adm%type;/*usado para gerar o hr_prim_horario da prescr_material*/
	cd_estabelecimento_w		estabelecimento.CD_ESTABELECIMENTO%type;
	nr_seq_mat_cpoe_w			prescr_material.nr_seq_mat_cpoe%type;
	nr_seq_diet_cpoe_w			prescr_material.nr_seq_dieta_cpoe%type;
	qt_tempo_total_out_p		double precision;
	/*CIRURGIA_AGENTE_ANESTESICO - ie_tipo= 1 - Agentes anestesicos / 2 - Terapia hidroeletrolitica / 3 - Medicamentos / 4 - Materiais / 5 - Hemoderivados */

	C01 CURSOR FOR
	SELECT nr_sequencia,
		cd_material,
		cd_unid_medida_adm,
		ie_via_aplicacao,
		nr_seq_mat_cpoe,
		nr_seq_diet_cpoe
	FROM CIRURGIA_AGENTE_ANESTESICO
	WHERE nr_cirurgia         = nr_cirurgia_p
	AND coalesce(nr_seq_pepo_p, 0) = 0
	AND ie_tipo              IN (1,2,3)
	AND coalesce(dt_inativacao::text, '') = ''
	AND coalesce(IE_MODO_ADM,'AC') <> 'CO'
	AND cpoe_regra_cirurgia(cd_material) <> 'X'
	and	coalesce(coalesce(nr_seq_mat_cpoe, nr_seq_diet_cpoe)::text, '') = ''
	
UNION

	SELECT nr_sequencia,
		cd_material,
		cd_unid_medida_adm,
		ie_via_aplicacao,
		nr_seq_mat_cpoe,
		nr_seq_diet_cpoe
	FROM CIRURGIA_AGENTE_ANESTESICO
	WHERE coalesce(nr_cirurgia, 0) = 0
	AND nr_seq_pepo           = nr_seq_pepo_p
	AND coalesce(nr_seq_pepo_p, 0) > 0
	AND ie_tipo              IN (1,2,3)
	AND coalesce(dt_inativacao::text, '') = ''
	AND coalesce(IE_MODO_ADM,'AC') <> 'CO'
	AND cpoe_regra_cirurgia(cd_material) <> 'X'
	and	coalesce(coalesce(nr_seq_mat_cpoe, nr_seq_diet_cpoe)::text, '') = '';
	
	C02 CURSOR FOR
	SELECT	coalesce(QT_DOSE, coalesce(QT_DOSE_TOTAL, coalesce(QT_UTILIZADA, QT_DOSE_ATAQUE))) qt_dose,
			dt_inicio_adm
	from 	cirurgia_agente_anest_ocor
	where	nr_seq_cirur_agente = nr_seq_cirur_agente_w
	and		(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
	order by nr_sequencia;

	
BEGIN

	select	coalesce(max(cd_intervalo),1)
	into STRICT	cd_intervalo_w
	from	INTERVALO_PRESCRICAO
	where	IE_ACM = 'S';

	open C01;
	loop
	fetch C01 into
		nr_seq_cirur_agente_w,
		cd_material_w,
		cd_unid_medida_adm_w,
		ie_via_aplicacao_w,
		nr_seq_mat_cpoe_w,
		nr_seq_diet_cpoe_w;
		
	EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
		begin

			ds_dose_diferenciada_w := '';
			ds_horarios_w := '';
			qt_unitaria_w := 0;
			qt_material_w := 0;
			qt_dose_total_w := 0;
			qt_conversao_dose_w := 0;
			cd_estabelecimento_w := obter_estabelecimento_ativo;
			
			select	max(cd_unidade_medida_consumo), 
					coalesce(ie_via_aplicacao_w,max(ie_via_aplicacao))
			into STRICT	cd_unidade_medida_consumo_w,
					ie_via_aplicacao_w
			from	material
			where	cd_material = cd_material_w;

			ie_agrupador_w	:= 1;

			select	coalesce(max(nr_agrupamento),0) + 1
			into STRICT	nr_agrupamento_w
			from	prescr_material
			where	nr_prescricao	= nr_prescricao_p
			and		ie_agrupador	= ie_agrupador_w;

			select	coalesce(max(nr_sequencia),0) + 1
			into STRICT	nr_seq_material_w
			from	prescr_material
			where	nr_prescricao	= nr_prescricao_p;

			SELECT * FROM obter_calc_graf_cirur_ocor(nr_seq_cirur_agente_w, nr_ocorrencia_w, ds_dose_diferenciada_w, ds_horarios_w, qt_dose_total_w, qt_tempo_total_out_p) INTO STRICT nr_ocorrencia_w, ds_dose_diferenciada_w, ds_horarios_w, qt_dose_total_w, qt_tempo_total_out_p;
			
			if (coalesce(ds_dose_diferenciada_w, 'XPTO') <> 'XPTO') then
				begin /*O objeto obter_conversao_unid_med gera exception*/
				qt_conversao_dose_w	:= obter_conversao_unid_med(cd_material_w,cd_unid_medida_adm_w);
				qt_unitaria_w := dividir(trunc(dividir(qt_dose_total_w * 1000, qt_conversao_dose_w )),1000);
				qt_material_w := qt_unitaria_w;
				exception
				when others then
				qt_unitaria_w := 0;
				qt_material_w := 0;
				end;
			end if;

			if (nr_ocorrencia_w > 0 and
				coalesce(nr_prescricao_p, 0) > 0 and
				coalesce(nr_seq_material_w, 0) > 0 and
				coalesce(cd_material_w, 0) > 0 and
				coalesce(cd_unidade_medida_consumo_w,'XPTO') <> 'XPTO' and
				coalesce(nm_usuario_p, 'XPTO') <> 'XPTO') then
								
				select 	min(coalesce(dt_inicio_adm,clock_timestamp()))
				into STRICT	hr_prim_horario_w
				from	cirurgia_agente_anest_ocor
				where	nr_seq_cirur_agente = nr_seq_cirur_agente_w
				and		(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '');

				Insert into Prescr_Material(
					nr_prescricao,
					nr_sequencia,
					ie_origem_inf,
					cd_material,
					cd_unidade_medida,
					qt_unitaria,
					qt_material,
					dt_atualizacao,
					nm_usuario,
					ds_dose_diferenciada,
					qt_dose,
					cd_intervalo,
					ie_via_aplicacao,
					nr_agrupamento,
					cd_motivo_baixa,
					ie_utiliza_kit,
					cd_unidade_medida_dose,
					qt_conversao_dose,
					nr_ocorrencia,
					qt_total_dispensar,
					ie_medicacao_paciente,
					ie_suspenso,
					ie_agrupador,
					ie_se_necessario,
					ie_bomba_infusao,
					ie_aplic_bolus,
					ie_aplic_lenta,
					ie_acm,
					ie_cultura_cih,
					ie_antibiograma,
					ie_uso_antimicrobiano,
					ie_recons_diluente_fixo,
					DT_ATUALIZACAO_NREC,
					ds_horarios,
					hr_prim_horario,
					ie_gerar_lote)
				values (
					nr_prescricao_p,
					nr_seq_material_w,
					'E',
					cd_material_w,
					cd_unid_medida_adm_w,
					coalesce(qt_unitaria_w,0),
					coalesce(qt_material_w,0),
					clock_timestamp(),
					nm_usuario_p,
					ds_dose_diferenciada_w,
					0,
					cd_intervalo_w,
					ie_via_aplicacao_w,
					nr_agrupamento_w,
					0,
					'N',
					cd_unidade_medida_consumo_w,
					1,
					nr_ocorrencia_w,
					coalesce(qt_material_w,0),
					'N',
					'N',
					ie_agrupador_w,
					'N',
					'N',
					'N',
					'N',
					'N',
					'N',
					'N',
					'N',
					'N',
					clock_timestamp(),
					ds_horarios_w,
					to_char(hr_prim_horario_w,'hh24:mi'),
					'N');
					
					CALL gerar_prescr_mat_compl(nr_prescricao_p, nr_seq_material_w, nm_usuario_p, null, ds_horarios_w,nr_seq_cirur_agente_w);

		end if;
		exception when others then
		ie_possui_adm_w := 'N';
		end;
	end;	
	end loop;
	close C01;

	if (coalesce(ie_commit_p, 'S') = 'S') then
		commit;
	end if;

	END;

	PROCEDURE Inserir_solucao_prescr(nr_prescricao_p	number,
									nr_cirurgia_p		number,
									nm_usuario_p		varchar2,
									nr_seq_pepo_p		number,
									ie_commit_p 		varchar2 default 'S') is

	ie_utiliza_intervalo_w		varchar2(10);
	ie_arredondar_etapas_w		varchar2(3);
	cd_perfil_w					number(10);
	cd_estabelecimento_w		number(14,0);
	qt_conversao_dose_w			number(18,6);
	cd_intervalo_w				prescr_material.cd_intervalo%type;
	ds_horarios_w 				prescr_material.ds_horarios%type;
	nr_ocorrencia_w 			prescr_material.nr_ocorrencia%type;
	qt_unitaria_w 				prescr_material.qt_unitaria%type;
	qt_dose_total_w 			prescr_material.qt_material%type;
	qt_material_w				Prescr_Material.qt_material%type;
	ie_agrupador_w				Prescr_Material.ie_agrupador%type;
	nr_seq_material_w			Prescr_Material.nr_sequencia%type;
	nr_agrupamento_w			Prescr_Material.nr_agrupamento%type;
	qt_total_solucao_w			prescr_material.qt_solucao%type;
	qt_tempo_aplicacao_w		prescr_solucao.qt_tempo_aplicacao%type;
	qt_hora_fase_w				prescr_solucao.qt_hora_fase%type;
	nr_etapas_w					prescr_solucao.nr_etapas%type;
	nr_seq_solucao_w			prescr_solucao.nr_etapas%type;
	ie_acm_w					prescr_solucao.ie_acm%type;
	cd_material_solucao_w		material.cd_material%type;
	cd_unidade_medida_consumo_w	material.cd_unidade_medida_consumo%type;
	ie_via_aplicacao_w			material.ie_via_aplicacao%type;
	nr_seq_cirur_agente_w		cirurgia_agente_anestesico.nr_sequencia%type;
	ie_tipo_dosagem_w			cirurgia_agente_anestesico.ie_tipo_dosagem%type;
	cd_unid_medida_adm_w		cirurgia_agente_anestesico.cd_unid_medida_adm%type;
	ie_disp_infusao_w			cirurgia_agente_anestesico.ie_disp_infusao%type;
	qt_dose_w					cirurgia_agente_anest_ocor.qt_dose%type;
	dt_inicio_adm_w				cirurgia_agente_anest_ocor.dt_inicio_adm%type;
	dt_final_adm_w				cirurgia_agente_anest_ocor.dt_final_adm%type;
	hr_prim_horario_w			cirurgia_agente_anest_ocor.dt_inicio_adm%type;
	cd_material_diluicao_w		agente_anest_diluicao.cd_material%type;
	qt_dose_diluicao_w			agente_anest_diluicao.qt_dose%type;
	cd_unid_medida_diluicao_w	agente_anest_diluicao.cd_unidade_medida%type;
	qt_total_solucao_aux_w		prescr_material.qt_solucao%type;
	nr_seq_mat_cpoe_w			prescr_material.nr_seq_mat_cpoe%type;
	nr_seq_diet_cpoe_w			prescr_material.nr_seq_dieta_cpoe%type;
	qt_volume_fase_w			prescr_solucao_esquema.qt_volume%type;
	qt_tempo_total_w			number(15,3);
	ds_dose_diferenciada_w		prescr_material.ds_dose_diferenciada%type;
	
	/*CIRURGIA_AGENTE_ANESTESICO - ie_tipo= 1 - Agentes anestesicos / 2 - Terapia hidroeletrolitica / 3 - Medicamentos / 4 - Materiais / 5 - Hemoderivados */

	C01 CURSOR FOR
	SELECT nr_sequencia,
		cd_material,
		ie_tipo_dosagem,
		cd_unid_medida_adm,
		ie_disp_infusao,
		nr_seq_mat_cpoe,
		nr_seq_diet_cpoe
	FROM CIRURGIA_AGENTE_ANESTESICO
	WHERE nr_cirurgia         = nr_cirurgia_p
	AND coalesce(nr_seq_pepo_p,0) = 0
	AND ie_tipo              IN (1,2,3)
	AND coalesce(dt_inativacao::text, '') = ''
	AND coalesce(IE_MODO_ADM,'AC') = 'CO'
	AND cpoe_regra_cirurgia(cd_material) <> 'X'
	and	coalesce(coalesce(nr_seq_mat_cpoe, nr_seq_diet_cpoe)::text, '') = ''
	
UNION

	SELECT nr_sequencia,
		cd_material,
		ie_tipo_dosagem,
		cd_unid_medida_adm,
		ie_disp_infusao,
		nr_seq_mat_cpoe,
		nr_seq_diet_cpoe
	FROM CIRURGIA_AGENTE_ANESTESICO
	WHERE coalesce(nr_cirurgia, 0) = 0
	AND nr_seq_pepo           = nr_seq_pepo_p
	AND coalesce(nr_seq_pepo_p,0) > 0
	AND ie_tipo              IN (1,2,3)
	AND coalesce(dt_inativacao::text, '') = ''
	AND coalesce(IE_MODO_ADM,'AC') = 'CO'
	AND cpoe_regra_cirurgia(cd_material) <> 'X'
	and	coalesce(coalesce(nr_seq_mat_cpoe, nr_seq_diet_cpoe)::text, '') = '';
	
	C02 CURSOR FOR
	SELECT	a.*, row_number() OVER () AS nr_etapa
	from 	cirurgia_agente_anest_ocor a
	where	nr_seq_cirur_agente = nr_seq_cirur_agente_w
	order by nr_sequencia;

	C03 CURSOR FOR
	SELECT	cd_material,
			qt_dose,
			cd_unidade_medida		
	from 	AGENTE_ANEST_DILUICAO
	where	nr_seq_agente_cir  = nr_seq_cirur_agente_w
	order by nr_sequencia;			

	begin
	
	cd_perfil_w := obter_perfil_ativo;
	cd_estabelecimento_w := obter_estabelecimento_ativo;

	cd_intervalo_w := obter_param_usuario(924, 41, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, cd_intervalo_w);
	ie_utiliza_intervalo_w := obter_param_usuario(924, 590, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_utiliza_intervalo_w);
	ie_arredondar_etapas_w := obter_param_usuario(924, 742, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_arredondar_etapas_w);

	nr_seq_solucao_w := 1;

	open C01;
	loop
	fetch C01 into
		nr_seq_cirur_agente_w,
		cd_material_solucao_w,
		ie_tipo_dosagem_w,
		cd_unid_medida_adm_w,
		ie_disp_infusao_w,
		nr_seq_mat_cpoe_w,
		nr_seq_diet_cpoe_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
		begin
			ds_horarios_w := '';
			qt_unitaria_w := 0;
			qt_material_w := 0;
			qt_dose_total_w := 0;
			qt_conversao_dose_w := 0;
			nr_etapas_w := null;
			
			select	max(cd_unidade_medida_consumo), 
					max(ie_via_aplicacao)
			into STRICT	cd_unidade_medida_consumo_w,
					ie_via_aplicacao_w
			from	material
			where	cd_material = cd_material_solucao_w;

			ie_agrupador_w	:= 4;

			select	coalesce(max(nr_agrupamento),0) + 1
			into STRICT	nr_agrupamento_w
			from	prescr_material
			where	nr_prescricao	= nr_prescricao_p
			and		ie_agrupador	= ie_agrupador_w;

			select	coalesce(max(nr_sequencia),0) + 1
			into STRICT	nr_seq_material_w
			from	prescr_material
			where	nr_prescricao	= nr_prescricao_p;

			SELECT * FROM obter_calc_graf_cirur_ocor(nr_seq_cirur_agente_w, nr_etapas_w, ds_dose_diferenciada_w, ds_horarios_w, qt_dose_total_w, qt_tempo_total_w) INTO STRICT nr_etapas_w, ds_dose_diferenciada_w, ds_horarios_w, qt_dose_total_w, qt_tempo_total_w;
			
			nr_ocorrencia_w := nr_etapas_w;

			if (coalesce(qt_dose_total_w, 0) > 0) then
				qt_conversao_dose_w	:= obter_conversao_unid_med(cd_material_solucao_w, cd_unid_medida_adm_w);
				qt_unitaria_w := dividir(trunc(dividir(qt_dose_total_w * 1000, qt_conversao_dose_w )),1000);
				qt_material_w := qt_unitaria_w;
			end if;

			select 	min(coalesce(dt_inicio_adm,clock_timestamp()))
			into STRICT	hr_prim_horario_w
			from	cirurgia_agente_anest_ocor
			where	nr_seq_cirur_agente = nr_seq_cirur_agente_w
			and		(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '');
			
			if (nr_etapas_w > 0 and
				coalesce(nr_prescricao_p, 0) > 0 and
				coalesce(cd_material_solucao_w, 0) > 0 and
				coalesce(ie_tipo_dosagem_w,'XPTO') <> 'XPTO' and
				coalesce(nm_usuario_p, 'XPTO') <> 'XPTO') then

				qt_tempo_aplicacao_w := 24;
				qt_hora_fase_w := null;
				
				IF (ie_utiliza_intervalo_w = 'S') AND (cd_intervalo_w IS NOT NULL AND cd_intervalo_w::text <> '') THEN
					SELECT * FROM Calcular_etapas_interv_solucao(cd_intervalo_w, qt_tempo_aplicacao_w, ie_arredondar_etapas_w, qt_hora_fase_w, nr_etapas_w, NULL, NULL) INTO STRICT qt_hora_fase_w, nr_etapas_w;
					ie_acm_w := 'S';
					nr_etapas_w :=  coalesce(nr_etapas_w, 1);
				else
					ie_acm_w := 'N';
				end if;
			
				INSERT INTO prescr_solucao(
					nr_prescricao,
					nr_seq_solucao,
					ie_via_aplicacao,
					dt_atualizacao,
					nm_usuario,
					cd_unidade_medida,
					ie_tipo_dosagem,
					qt_tempo_aplicacao,
					qt_volume,
					nr_etapas,
					ie_bomba_infusao,
					ie_suspenso,
					nr_agrupamento,
					ie_esquema_alternado,
					ie_calc_aut,
					ie_acm,
					qt_hora_fase,
					ds_horarios,
					hr_prim_horario,
					ie_urgencia,
					ie_solucao_especial,
					ie_se_necessario,
					cd_intervalo)
				VALUES (
					nr_prescricao_p,
					nr_seq_solucao_w,
					coalesce(ie_via_aplicacao_w,substr(obter_via_usuario('IV'),1,255)),
					clock_timestamp(),
					nm_usuario_p,
					substr(obter_unid_med_usua('ml'),1,255),
					ie_tipo_dosagem_w,
					qt_tempo_aplicacao_w,
					0,
					nr_etapas_w,
					ie_disp_infusao_w,
					'N',
					nr_agrupamento_w ,
					'S',
					'N',
					ie_acm_w,
					qt_hora_fase_w,
					null,
					to_char(hr_prim_horario_w,'hh24:mi'),
					'N',
					'N',
					'N',
					cd_intervalo_w);
					
				if (coalesce(cd_unidade_medida_consumo_w,'XPTO') <> 'XPTO') then
					
					Insert into Prescr_Material(
						nr_prescricao,
						nr_sequencia,
						ie_origem_inf,
						cd_material,
						cd_unidade_medida,
						qt_unitaria,
						qt_material,
						qt_solucao,
						dt_atualizacao,
						nm_usuario,
						qt_dose,
						ie_via_aplicacao,
						nr_agrupamento,
						cd_motivo_baixa,
						ie_utiliza_kit,
						cd_unidade_medida_dose,
						qt_conversao_dose,
						nr_ocorrencia,
						qt_total_dispensar,
						ie_medicacao_paciente,
						ie_suspenso,
						ie_agrupador,
						dt_atualizacao_nrec,
						hr_prim_horario,
						nr_sequencia_solucao,
						ie_gerar_lote,
						ds_dose_diferenciada) 
					values (
						nr_prescricao_p,
						nr_seq_material_w,
						'E',
						cd_material_solucao_w,
						cd_unidade_medida_consumo_w,
						0,--nvl(qt_unitaria_w,0),
						0,--nvl(qt_material_w,0),
						qt_dose_total_w, /*qt_solucao*/
						clock_timestamp(),
						nm_usuario_p,
						null,--qt_dose_total_w,
						ie_via_aplicacao_w,
						nr_agrupamento_w,
						0,
						'N',
						cd_unidade_medida_consumo_w,
						1,
						nr_ocorrencia_w,
						coalesce(qt_material_w,0), 
						'N',
						'N',
						ie_agrupador_w,
						clock_timestamp(),
						to_char(hr_prim_horario_w,'hh24:mi'),
						nr_seq_solucao_w,
						'N',
						ds_dose_diferenciada_w);

						CALL gerar_prescr_mat_compl(nr_prescricao_p, nr_seq_material_w, nm_usuario_p, null, null,nr_seq_cirur_agente_w);
				end if;

				open C03;
				loop
				fetch C03 into
					cd_material_diluicao_w,
					qt_dose_diluicao_w,
					cd_unid_medida_diluicao_w;
				EXIT WHEN NOT FOUND; /* apply on C03 */
				begin
					if (nr_etapas_w > 0 and
						coalesce(cd_material_diluicao_w, 0) > 0 and
						coalesce(cd_unid_medida_diluicao_w,'XPTO') <> 'XPTO') then 
						
						select	coalesce(max(nr_sequencia),0) + 1
						into STRICT	nr_seq_material_w
						from	prescr_material
						where	nr_prescricao	= nr_prescricao_p;
						
						select 	min(coalesce(dt_inicio_adm,clock_timestamp()))
						into STRICT	hr_prim_horario_w
						from	cirurgia_agente_anest_ocor
						where	nr_seq_cirur_agente = nr_seq_cirur_agente_w
						and		(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '');
						
						Insert into Prescr_Material(
							nr_prescricao,
							nr_sequencia,
							ie_origem_inf,
							cd_material,
							cd_unidade_medida,
							qt_unitaria,
							qt_material,
							qt_solucao,
							dt_atualizacao,
							nm_usuario,
							qt_dose,
							ie_via_aplicacao,
							nr_agrupamento,
							cd_motivo_baixa,
							ie_utiliza_kit,
							cd_unidade_medida_dose,
							qt_conversao_dose,
							nr_ocorrencia,
							qt_total_dispensar,
							ie_medicacao_paciente,
							ie_suspenso,
							ie_agrupador,
							dt_atualizacao_nrec,
							hr_prim_horario,
							nr_sequencia_solucao,
							ie_gerar_lote)
						values (
							nr_prescricao_p,
							nr_seq_material_w,
							'E',
							cd_material_diluicao_w,
							cd_unid_medida_diluicao_w,
							0,--nvl(qt_dose_diluicao_w,0),
							0,--nvl(qt_dose_diluicao_w,0),
							coalesce(qt_dose_diluicao_w,0),
							clock_timestamp(),
							nm_usuario_p,
							qt_dose_diluicao_w,
							ie_via_aplicacao_w,
							nr_agrupamento_w,
							0,
							'N',
							cd_unid_medida_diluicao_w,
							1,
							nr_ocorrencia_w,
							coalesce(qt_dose_diluicao_w,0),
							'N',
							'N',
							ie_agrupador_w,
							clock_timestamp(),
							to_char(hr_prim_horario_w,'hh24:mi'),
							nr_seq_solucao_w,
							'N');
					end if;
				end;
				end loop;
				close C03;
			end if;

			CALL gerar_prescr_solu_esquema(nr_seq_cirur_agente_w, nr_prescricao_p, nr_seq_solucao_w);
			
			if (coalesce(ie_commit_p, 'S') = 'S') then
				commit;
			end if;

			nr_seq_solucao_w := nr_seq_solucao_w + 1;

		exception when others then
			null;
		end;
	end;	
	end loop;
	close C01;

	if (coalesce(ie_commit_p, 'S') = 'S') then
		commit;
	end if;

	END;
	
	function obter_se_gera_registro_prescr(nr_cirurgia_p number ,
									nr_seq_pepo_p number ) return;
		
		begin
			select 	coalesce(ie_rep_cpoe, 'N')
			into STRICT	ie_rep_cpoe_w
			from	parametro_medico
			where	cd_estabelecimento = obter_estabelecimento_ativo;
		
			if (ie_rep_cpoe_w = 'N') then
				return;
			end if;
		
            select coalesce(max('S'), 'N')
               into STRICT ie_gerar_prescr_w
            from cirurgia_agente_anestesico 	
            where ((nr_cirurgia	= nr_cirurgia_p and coalesce(nr_seq_pepo_p, 0) = 0)
                or (coalesce(nr_cirurgia, 0) = 0 and nr_seq_pepo = nr_seq_pepo_p))
            and ie_tipo in (1,2,3)
            and coalesce(dt_inativacao::text, '') = ''
            --and nvl(ie_modo_adm,'AC') <> 'CO'
            and cpoe_regra_cirurgia(cd_material) <> 'X'
            and coalesce(nr_seq_mat_cpoe::text, '') = ''
            and nr_seq_diet_cpoe is  null;

            return;
		
	end;
	
	function obter_min_dt_agent_anest_ocor(nr_cirurgia_p number ,
									nr_seq_pepo_p number ) 		
							return;
		
		begin
            select min(b.dt_inicio_adm)
               into STRICT dt_min_horario_w
            from cirurgia_agente_anestesico a,
				cirurgia_agente_anest_ocor b
            where ((a.nr_cirurgia	= nr_cirurgia_p and coalesce(nr_seq_pepo_p, 0) = 0)
                or (coalesce(a.nr_cirurgia, 0) = 0 and a.nr_seq_pepo = nr_seq_pepo_p))
			and b.nr_seq_cirur_agente = a.nr_sequencia
            and a.ie_tipo in (1,2,3)
            and coalesce(a.dt_inativacao::text, '') = '';

            return;
		
	end;

begin

ie_estrutura_pepo_w := Obter_Param_Usuario(872, 158, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_estrutura_pepo_w);

if (coalesce(ie_estrutura_pepo_w, 'N') = 'S') then
	SELECT MAX(nr_seq_pepo)
	INTO STRICT nr_seq_pepo_w
	FROM cirurgia
	WHERE nr_cirurgia             = nr_cirurgia_p;
		
	select 	coalesce(max('S'),'N')
	into STRICT	ie_existe_prescr_w
	from 	prescr_medica_compl a
	where	a.nr_cirurgia in (SELECT nr_cirurgia
								FROM cirurgia 
								WHERE nr_seq_pepo = nr_seq_pepo_w)
	and 	exists (select 	b.nr_prescricao
					from	prescr_medica b
					where 	a.nr_prescricao = b.nr_prescricao
					and 	coalesce(b.dt_suspensao::text, '') = '')  LIMIT 1;

else
	select 	coalesce(max('S'),'N')
	into STRICT	ie_existe_prescr_w
	from 	prescr_medica_compl a
	where	a.nr_cirurgia = nr_cirurgia_p
	and 	exists (SELECT 	b.nr_prescricao
					from	prescr_medica b
					where 	a.nr_prescricao = b.nr_prescricao
					and 	coalesce(b.dt_suspensao::text, '') = '')  LIMIT 1;
	
end if;

ie_gerar_prescr_w := obter_se_gera_registro_prescr(nr_cirurgia_p, nr_seq_pepo_w);

if (ie_existe_prescr_w = 'N' or ie_gerar_prescr_w = 'S') then
	
	dt_prescricao_w := clock_timestamp();
	cd_funcao_w	:= obter_funcao_ativa;
	cd_perfil_w := obter_perfil_ativo;
	cd_estabelecimento_w := obter_estabelecimento_ativo;
	
	ie_regra_setor_w := Obter_Param_Usuario(924, 42, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_regra_setor_w);
	ie_calcula_validade_w := Obter_Param_Usuario(924, 98, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_calcula_validade_w);
	ie_setor_entrega_w := Obter_Param_Usuario(924, 167, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_setor_entrega_w);
	ie_estender_w := Obter_Param_Usuario(924, 249, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_estender_w);
	
	select	max(coalesce(nr_atendimento, 0)),
			max(coalesce(cd_pessoa_fisica, 0)),
			max(cd_setor_atendimento),
			max(coalesce(cd_medico_anestesista,'XPTO')),
			max(to_char(coalesce(dt_inicio_real,dt_inicio_prevista), 'hh24')),
			max(coalesce(dt_inicio_real,dt_inicio_prevista))
	into STRICT	nr_atendimento_w,
			cd_pessoa_fisica_w,
			cd_setor_prescr_w,
			cd_medico_w,
			hr_prescricao_w,
			dt_inicio_prescr_w
	from	cirurgia
	where	nr_cirurgia = nr_cirurgia_p;
	
	if (coalesce(nr_atendimento_w, 0) > 0) then
		cd_pessoa_fisica_w	:= coalesce(obter_pessoa_atendimento(nr_atendimento_w,'C'),cd_pessoa_fisica_w);
	end if;
	
	if (coalesce(cd_pessoa_fisica_w, 0) > 0) and (dt_prescricao_w IS NOT NULL AND dt_prescricao_w::text <> '') and (hr_prescricao_w IS NOT NULL AND hr_prescricao_w::text <> '') and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') then
	
		/* obter informacao usuario */

		select	cd_pessoa_fisica,
				substr(obter_se_medico(cd_pessoa_fisica,'M'),1,1),
				ie_tipo_evolucao
		into STRICT	cd_pf_usuario_w,
				ie_usuario_medico_w,
				ie_tipo_evol_w
		from	usuario
		where	nm_usuario = nm_usuario_p;
	
		if (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') then
			begin
			qt_altura_cm_w	:= obter_sinal_vital(nr_atendimento_w,obter_desc_expressao(283402));		
			exception
			when others then
			qt_altura_cm_w	:= null;
			end;
	
			begin
			qt_peso_w	:= obter_sinal_vital(nr_atendimento_w,obter_desc_expressao(295698));
			exception
			when others then
			qt_peso_w	:= null;
			end;		
		else
			select	max(nr_atendimento)
			into STRICT	nr_atendimento_w
			from	atendimento_paciente
			where	cd_pessoa_fisica = cd_pessoa_fisica_w
			and	coalesce(obter_setor_atendimento(nr_atendimento),0) > 0
			and     coalesce(dt_alta::text, '') = '';
		end if;	
		
		dt_prescricao_w :=	dt_inicio_prescr_w;
		
		select	nextval('prescr_medica_seq')
		into STRICT	nr_nova_prescr_w
		;
		
		cd_setor_w	:= cd_setor_prescr_w;
		if (ie_regra_setor_w = 'R') then
			cd_setor_w	:= Obter_setor_prescr_regra(cd_perfil_w);
		end if;	
		
		if (ie_calcula_validade_w	= 'R') then
			ie_calcula_validade_w	:= obter_se_calcula_validade(cd_setor_w);
		end if;

		dt_primeiro_horario_w	:= to_date(substr(to_char(dt_prescricao_w,'dd/mm/yyyy'),1,10) || ' ' || hr_prescricao_w || ':00','dd/mm/yyyy hh24:mi:ss');
	
		nr_horas_validade_w	:= 24;
		if (ie_calcula_validade_w	<> 'N') and ((coalesce(nr_atendimento_w,nr_atendimento_w) IS NOT NULL AND (coalesce(nr_atendimento_w,nr_atendimento_w))::text <> '')) then
			select	coalesce(Obter_Horas_Validade_Prescr( to_date(substr(to_char(dt_prescricao_w,'dd/mm/yyyy'),1,10) || ' ' || hr_prescricao_w || ':00','dd/mm/yyyy hh24:mi:ss'),
										coalesce(nr_atendimento_w,nr_atendimento_w),
										ie_estender_w,
										'A',
										trunc(dt_prescricao_w,'mi'), null),24)
			into STRICT	nr_horas_validade_w
			;	
	
			ie_extensao_regra_w	:= Obter_se_questiona_extensao(cd_perfil_w,cd_setor_w,nr_atendimento_w);
			
			if (ie_estender_w		= 'SE') and (nr_horas_validade_w	< 24) and (ie_extensao_regra_w	= 'S') then
				nr_horas_validade_w := nr_horas_validade_w + 24;
			end if;
			
		end if;	
	
		if (ie_usuario_medico_w = 'S') then
			cd_medico_prescri_w   := cd_pf_usuario_w;
		elsif (coalesce(cd_medico_w, 'XPTO') <> 'XPTO') then
			cd_medico_prescri_w  :=  cd_medico_w;
		else
			begin
			select	min(cd_pessoa_fisica)
			into STRICT 	cd_medico_prescri_w
			from 	cirurgia_participante
			where	ie_funcao in (SELECT cd_funcao from funcao_medico where coalesce(ie_anestesista, 'N') = 'S')
			and		nr_cirurgia = nr_cirurgia_p
			and		coalesce(Obter_se_medico(cd_pessoa_fisica, 'M'), 'N') = 'S'
			and		coalesce(ie_situacao, 'A') = 'A';
			end;
		end if;
	
		if (coalesce(cd_medico_prescri_w,'XPTO') = 'XPTO') then
			/*Informe o medico cirurgiao*/

			CALL Wheb_mensagem_pck.exibir_mensagem_abort(1049330);
		end if;
		
		select	coalesce(max('1'),'3')
		into STRICT	ie_origem_inf_w
		from	Medico b,
				Usuario a
		where	a.nm_usuario		= nm_usuario_p
		and		a.cd_pessoa_fisica	= b.cd_pessoa_fisica
		and		b.ie_situacao		= 'A';
	
		if (ie_setor_entrega_w = 'S') then
			cd_setor_entrega_w := obter_setor_usuario(nm_usuario_p);
		elsif (ie_setor_entrega_w = 'P') and (cd_setor_w IS NOT NULL AND cd_setor_w::text <> '') then
			cd_setor_entrega_w := cd_setor_w;
		end if;
		
		/* gerar nova prescricao */

			dt_min_horario_w := obter_min_dt_agent_anest_ocor(nr_cirurgia_p, nr_seq_pepo_w);
			dt_horario_prescricao_w := dt_min_horario_w - (5/1440);
			insert into prescr_medica(
				nr_prescricao,
				cd_pessoa_fisica,
				nr_atendimento,
				cd_medico,
				dt_prescricao,
				dt_atualizacao,
				nm_usuario,
				nr_horas_validade,
				dt_primeiro_horario,
				cd_setor_atendimento,
				ie_origem_inf,		
				nm_usuario_original,
				cd_estabelecimento,
				cd_prescritor,
				ie_emergencia,
				ie_funcao_prescritor,
				ie_prescricao_alta,
				ie_prescr_emergencia,
				ie_adep,
				qt_altura_cm,
				qt_peso,
				cd_funcao_origem,
				cd_perfil_ativo,
				ie_prescritor_aux,
				cd_setor_entrega,
				ie_lib_farm,
				dt_inicio_prescr)
			values (nr_nova_prescr_w,
				cd_pessoa_fisica_w,
				nr_atendimento_w,
				cd_medico_prescri_w,
				trunc(dt_horario_prescricao_w,'mi'),
				clock_timestamp(),
				nm_usuario_p,
				nr_horas_validade_w,
				trunc(dt_min_horario_w,'mi'),
				cd_setor_w,
				ie_origem_inf_w,
				nm_usuario_p,
				cd_estabelecimento_w,
				cd_pf_usuario_w,
				'N',
				ie_tipo_evol_w,
				'N',
				'N',
				'S',
				qt_altura_cm_w,	
				qt_peso_w,
				cd_funcao_w,
				cd_perfil_w,
				'0',
				cd_setor_entrega_w,
				'N',
				trunc(dt_horario_prescricao_w,'mi'));
				
			insert into prescr_medica_compl(	
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_prescricao,
				ie_liberacao_cpoe,
				ie_prescricao_anestesica,
				nr_cirurgia)
			values (	clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_nova_prescr_w,
					'N',
					'S',
					nr_cirurgia_p);
		
		
			if (trunc(dt_prescricao_w,'mi') > trunc(clock_timestamp(),'mi')) then
				update	prescr_medica
				set		dt_prescricao	= clock_timestamp()
				where	nr_prescricao	= nr_nova_prescr_w;
			end if;

		if (coalesce(ie_commit_p, 'S') = 'S') then
			commit;
		end if;
			
		if (coalesce(ie_estrutura_pepo_w, 'N') = 'S') then
			open C04;
			loop
			fetch C04 into
				nr_cirurgia_w;
			EXIT WHEN NOT FOUND; /* apply on C04 */
				begin
					Inserir_medicamento_prescr(nr_nova_prescr_w, nr_cirurgia_w, nm_usuario_p, 0, ie_commit_p);
				
					Inserir_solucao_prescr(nr_nova_prescr_w, nr_cirurgia_w, nm_usuario_p, 0, ie_commit_p);				
				end;
			end loop;
			close c04;
				Inserir_medicamento_prescr(nr_nova_prescr_w, 0, nm_usuario_p, nr_seq_pepo_w, ie_commit_p);
					
				Inserir_solucao_prescr(nr_nova_prescr_w, 0, nm_usuario_p, nr_seq_pepo_w, ie_commit_p);	

		else
			Inserir_medicamento_prescr(nr_nova_prescr_w, nr_cirurgia_p, nm_usuario_p, 0, ie_commit_p);
			
			Inserir_solucao_prescr(nr_nova_prescr_w, nr_cirurgia_p, nm_usuario_p, 0, ie_commit_p);
		end if;
		
		ds_erro_w := Liberar_prescricao(nr_nova_prescr_w, nr_atendimento_w, obter_se_medico(cd_medico_prescri_w,'M'), cd_perfil_w, nm_usuario_p, 'P', ds_erro_w);
		
		if (ie_gerar_prescr_w = 'S') then
			if (coalesce(ie_estrutura_pepo_w, 'N') = 'S') then
				open C04;
				loop
				fetch C04 into
					nr_cirurgia_w;
				EXIT WHEN NOT FOUND; /* apply on C04 */
					begin
						CALL update_cirurgia_agente_anest(nr_cirurgia_w, null);	
						CALL agente_anest_chec_auto_sol(nr_nova_prescr_w, nr_cirurgia_w, null);
					end;
				end loop;
				close c04;
				CALL update_cirurgia_agente_anest(null, nr_seq_pepo_w);
				CALL agente_anest_chec_auto_sol(nr_nova_prescr_w, null, nr_seq_pepo_w);
			else
				CALL update_cirurgia_agente_anest(nr_cirurgia_p, null);
				CALL agente_anest_chec_auto_sol(nr_nova_prescr_w, nr_cirurgia_p, null);
			end if;
		end if;
	end if;

end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_prescricao_anestesica (nr_cirurgia_p bigint, nm_usuario_p text, ie_commit_p text default 'S') FROM PUBLIC;

