-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_cirur_proto_pepo ( nr_cirurgia_p bigint, nr_seq_protocolo_p bigint, dt_inicio_p timestamp, nr_seq_pepo_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, nr_seq_modelo_p bigint default null) AS $body$
DECLARE


ie_posicao_w		smallint;
cd_pessoa_fisica_w	varchar(10);
cd_equitamento_w	bigint;
qt_equipamento_w	smallint;
nr_seq_topogradia_w	bigint;
nr_sequencia_w		bigint;
nr_seq_tecnica_w	bigint;
ds_tecnica_w		varchar(4000);
qt_registro_w		bigint;
nr_seq_material_w	bigint;
nr_seq_agente_w		bigint;
cd_material_w		integer;
nr_seq_sinal_vital_w	bigint;
dt_inicio_real_w	timestamp;
nr_sequencia_ww		bigint;
ds_texto_w			text;
ie_tipo_evolucao_w	varchar(3);
ie_evolucao_clinica_w	varchar(3);
nr_seq_derivado_w 	bigint;
qt_material_w		double precision;
qt_dose_homo_w		double precision;

qt_velocidade_inf_w	double precision;
qt_halog_ins_w          double precision;
qt_dose_total_w         double precision;
qt_dose_w               double precision;
ie_modo_registro_w	varchar(1);
nr_seq_pepo_w		bigint;
ie_aplic_bolus_w	varchar(1);
ie_replicar_med_w	varchar(1);
qt_dose_protocolo_w	double precision;
ie_tipo_material_w	varchar(3);
ie_inicio_equip_w	varchar(1);
cd_pessoa_fisica_paciente_w	varchar(10);
nr_atendimento_w	bigint;

ie_tipo_atendimento_w	smallint;
ie_tipo_convenio_w		smallint;
cd_convenio_w			integer;
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
nr_seq_proc_interno_w	bigint;
cd_setor_atendimento_w	integer;
cd_categoria_w			varchar(10);
nr_seq_evento_w			bigint;

C01 CURSOR FOR
	SELECT	ie_posicao
	from	protocolo_posicao
	where	nr_seq_protocolo	=	nr_seq_protocolo_p
	order by nr_sequencia;

C02 CURSOR FOR
	SELECT	cd_equipamento,
		qt_equipamento,
		nr_seq_topografia
	from	protocolo_equipamento
	where	nr_seq_protocolo	=	nr_seq_protocolo_p
	order by nr_sequencia;
	
C03 CURSOR(cd_pessoa_fisica_paciente_p text) FOR
	SELECT	nr_seq_tecnica,
		ds_tecnica
	from	protocolo_tec_anestesica
	where	nr_seq_protocolo	=	nr_seq_protocolo_p
	  and obter_restricao_proto_pepo(cd_pessoa_fisica_paciente_p, nr_sequencia, 'T') = 'S'
	order by nr_sequencia;
	
C04 CURSOR(cd_pessoa_fisica_paciente_p text) FOR
	SELECT	a.nr_seq_material,
		a.qt_velocidade_inf,
		a.qt_halog_ins,
		a.qt_dose_total,
		a.qt_dose,
		a.ie_modo_registro,
		a.ie_aplic_bolus
	from	protocolo_agent_anest a
	where	a.nr_seq_protocolo = nr_seq_protocolo_p
	and obter_restricao_proto_pepo(cd_pessoa_fisica_paciente_p, a.nr_sequencia, 'A') = 'S'
	and	((ie_replicar_med_w = 'S') or (not exists (	SELECT 1
						from   	protocolo_agent_anest x,
							agente_anest_material y,
						   	cirurgia_agente_anestesico z 
							where  	x.nr_seq_material  = y.nr_sequencia
							and	y.cd_material 	   = z.cd_material
							and	x.nr_seq_protocolo = nr_seq_protocolo_p 	
							and	z.nr_seq_pepo	   = nr_seq_pepo_p
							and	coalesce(z.ie_situacao,'A')	   = 'A'
							--and	z.nr_cirurgia 	   = nr_cirurgia_p
							and	x.nr_seq_material  = a.nr_seq_material)))  
	order by nr_sequencia;
	
C05 CURSOR FOR
	SELECT	nr_seq_sinal_vital
	from	protocolo_sinal_vital
	where	nr_seq_protocolo	=	nr_seq_protocolo_p
	order by nr_sequencia;
	
C06 CURSOR(cd_pessoa_fisica_paciente_p text) FOR
	SELECT  a.ie_tipo_evolucao,			
			a.ds_texto
	from	protocolo_nota_clinica a
	where	nr_seq_protocolo =	nr_seq_protocolo_p
	  and   obter_restricao_proto_pepo(cd_pessoa_fisica_paciente_p, a.nr_sequencia, 'N') = 'S'
	order by nr_sequencia;

C07 CURSOR(cd_pessoa_fisica_paciente_p text) FOR
	SELECT 	a.nr_seq_derivado,
			a.qt_material,
			a.qt_dose	
	from	protocolo_hemoderivados a
	where	a.nr_seq_protocolo =	nr_seq_protocolo_p
	and obter_restricao_proto_pepo(cd_pessoa_fisica_paciente_p, a.nr_sequencia, 'H') = 'S'
	order by nr_sequencia;
					

BEGIN

nr_seq_pepo_w := nr_seq_pepo_p;
if (nr_seq_pepo_w = 0) then
	nr_seq_pepo_w := null;
end if;

select max(nr_sequencia)
  into STRICT nr_seq_evento_w 
  from evento_cirurgia_paciente 
 where (nr_cirurgia = nr_cirurgia_p or nr_seq_pepo = nr_seq_pepo_p);
select 	max(cd_pessoa_fisica)		
into STRICT 	cd_pessoa_fisica_paciente_w		
from 	cirurgia
where 	nr_cirurgia = nr_cirurgia_p;

ie_replicar_med_w := Obter_Param_Usuario(872, 128, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_replicar_med_w);
ie_inicio_equip_w := obter_param_usuario(872, 363, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_inicio_equip_w);

insert into cirurgia_protocolo_util(
	nr_sequencia,
	nr_cirurgia,
	dt_atualizacao,
	nm_usuario,
	dt_atualizacao_nrec,
	nm_usuario_nrec,
	nr_seq_protocolo,
	nr_seq_pepo)
values (
	nextval('cirurgia_protocolo_util_seq'),
	null,
	clock_timestamp(),
	nm_usuario_p,
	clock_timestamp(),
	nm_usuario_p,
	nr_seq_protocolo_p,
	nr_seq_pepo_w);

cd_pessoa_fisica_w	:= obter_dados_usuario_opcao(nm_usuario_p,'C');

update evento_cirurgia_paciente set ie_protocolo = 'S', nr_protocolo_pepo = nr_seq_protocolo_p, nr_seq_modelo = nr_seq_modelo_p where nr_sequencia = nr_seq_evento_w;

open C01;
loop
fetch C01 into	
	ie_posicao_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	insert into posicao_cirurgia(
		nr_sequencia,
		nr_cirurgia,
		ie_posicao,
		cd_profissional,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		dt_posicao,
		nr_seq_pepo,
		ie_situacao)
	values (
		nextval('posicao_cirurgia_seq'),
		null,
		ie_posicao_w,
		cd_pessoa_fisica_w,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		dt_inicio_p,
		nr_seq_pepo_w,
		'A');
	end;
end loop;
close C01;

open C02;
loop
fetch C02 into	
	cd_equitamento_w,
	qt_equipamento_w,
	nr_seq_topogradia_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin
	select	nextval('equipamento_cirurgia_seq')
	into STRICT	nr_sequencia_w
	;
	
	insert into equipamento_cirurgia(
		nr_sequencia,
		nr_cirurgia,
		cd_equipamento,
		qt_equipamento,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		cd_profissional,
		ds_observacao,
		nr_seq_topografia,
		nr_seq_pepo,
		dt_inicio,
		ie_situacao)
	values (
		nr_sequencia_w,
		null,
		cd_equitamento_w,
		qt_equipamento_w,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		cd_pessoa_fisica_w,
		null,
		nr_seq_topogradia_w,
		nr_seq_pepo_w,
		CASE WHEN ie_inicio_equip_w='S' THEN clock_timestamp()  ELSE null END ,
		'A');
	commit;
	CALL gerar_taxa_equipamento(cd_estabelecimento_p,nr_sequencia_w,nm_usuario_p);
	end;
end loop;
close C02;

open C03(cd_pessoa_fisica_paciente_w);
loop
fetch C03 into	
	nr_seq_tecnica_w,
	ds_tecnica_w;
EXIT WHEN NOT FOUND; /* apply on C03 */
	begin
	
	insert into cirurgia_tec_anestesica(
		nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_seq_tecnica,
		dt_inicio,
		dt_final,
		nr_cirurgia,
		cd_profissional,
		ds_observacao,
		nr_seq_pepo,
		nr_seq_protocolo,
		ie_situacao,
		nr_seq_evento,
		nr_protocolo_pepo,
		nr_seq_modelo)
	values (
		nextval('cirurgia_tec_anestesica_seq'),
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		nr_seq_tecnica_w,
		dt_inicio_p,
		null,
		null,
		cd_pessoa_fisica_w,
		null,
		nr_seq_pepo_w,
		nr_seq_protocolo_p,
		'A',
		nr_seq_evento_w,
		nr_seq_protocolo_p, 
		nr_seq_modelo_p);
	
	if (ds_tecnica_w IS NOT NULL AND ds_tecnica_w::text <> '') then
		select	count(*)
		into STRICT	qt_registro_w
		from	anestesia_descricao
		where	nr_seq_pepo = nr_seq_pepo_w;
		--nr_cirurgia	=	nr_cirurgia_p;
		
		insert into anestesia_descricao(
			nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_cirurgia,
			cd_responsavel,
			ds_anestesia,
			ie_tipo_descricao,
			nr_seq_pepo,
			nr_seq_protocolo,
			ie_situacao)
		values (
			nextval('anestesia_descricao_seq'),
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			null,
			cd_pessoa_fisica_w,
			ds_tecnica_w,
			CASE WHEN qt_registro_w=0 THEN 'P'  ELSE 'A' END ,
			nr_seq_pepo_w,
			nr_seq_protocolo_p,
			'A');
	end if;
	
	end;
end loop;
close C03;

open C04(cd_pessoa_fisica_paciente_w);
loop
fetch C04 into	
	nr_seq_material_w,
	qt_velocidade_inf_w,
	qt_halog_ins_w,
	qt_dose_total_w,
	qt_dose_w,
	ie_modo_registro_w,
	ie_aplic_bolus_w;
EXIT WHEN NOT FOUND; /* apply on C04 */
	begin

	select	nr_seq_agente,
		cd_material
	into STRICT	nr_seq_agente_w,
		cd_material_w
	from	agente_anest_material
	where	nr_sequencia	=	nr_seq_material_w;
	
	nr_sequencia_ww := gerar_agentes_medicamentos(cd_estabelecimento_p, nr_seq_agente_w, nr_cirurgia_p, cd_material_w, cd_pessoa_fisica_w, nm_usuario_p, nr_sequencia_ww, null, null, null, nr_seq_pepo_w);
	
	ie_tipo_material_w := obter_dados_agent_mat(nr_seq_material_w,'T');
	if (ie_tipo_material_w = '1') then
		select 	max(qt_material)
		into STRICT   	qt_dose_protocolo_w
		from   	protocolo_agent_anest a
		where  	nr_seq_protocolo = nr_seq_protocolo_p
		and	exists (SELECT 1 from agente_anest_material b where b.nr_sequencia = a.nr_seq_material and b.cd_material = cd_material_w);
		
		update	cirurgia_agente_anestesico
		set	qt_dose 	= coalesce(qt_dose_protocolo_w,qt_dose)
		where	nr_sequencia 	= nr_sequencia_ww
		and	coalesce(ie_situacao,'A') = 'A'
		and	coalesce(dt_liberacao::text, '') = '';
	end if;	

	select	max(dt_inicio_real)
	into STRICT	dt_inicio_real_w
	from	cirurgia
	where	nr_seq_pepo = nr_seq_pepo_w;
	--nr_cirurgia = nr_cirurgia_p;
	
update cirurgia_agente_anestesico set nr_protocolo_pepo = nr_seq_protocolo_p, nr_seq_evento = nr_seq_evento_w, nr_seq_modelo = nr_seq_modelo_p where nr_sequencia = nr_sequencia_ww;
	
	if (qt_dose_w > 0) or (qt_velocidade_inf_w > 0) or (qt_halog_ins_w > 0) or (qt_dose_total_w > 0) then
		insert into cirurgia_agente_anest_ocor(
			nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_cirur_agente,
			dt_inicio_adm,
			dt_final_adm,
			qt_dose,
			ie_aplic_bolus,
			qt_velocidade_inf,
			ds_observacao,
			qt_dose_ataque,
			qt_halog_ins,
			ie_modo_registro,
			qt_dose_total,
			ie_situacao,
			nr_seq_evento,
			nr_protocolo_pepo,
			nr_seq_modelo)
		values (
			nextval('cirurgia_agente_anest_ocor_seq'),
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_sequencia_ww,
			dt_inicio_p,
			CASE WHEN coalesce(ie_aplic_bolus_w,'N')='N' THEN to_date(null)  ELSE dt_inicio_p END ,  --decode(nvl(qt_velocidade_inf_w,0),0, decode(nvl(qt_halog_ins_w,0),0, dt_inicio_p,to_date(null)), to_date(null)),
			qt_dose_w,
			coalesce(ie_aplic_bolus_w,'N'),
			qt_velocidade_inf_w,
			null,
			null,
			qt_halog_ins_w,
			ie_modo_registro_w,
			qt_dose_total_w,
			'A',
			nr_seq_evento_w,
			nr_seq_protocolo_p,
			nr_seq_modelo_p);
	end if;
	
	end;
end loop;
close C04;

delete	from pepo_sv_cirurgia
where	nr_seq_pepo = nr_seq_pepo_w;	
--nr_cirurgia = nr_cirurgia_p;
open C05;
loop
fetch C05 into	
	nr_seq_sinal_vital_w;
EXIT WHEN NOT FOUND; /* apply on C05 */
	begin
	
	insert into pepo_sv_cirurgia(
		nr_sequencia,
		nr_cirurgia,
		nr_seq_sinal_vital,
		ie_registra,
		nm_usuario,
		nr_seq_pepo)
	values (
		nextval('pepo_sv_cirurgia_seq'),
		null,
		nr_seq_sinal_vital_w,
		'S',
		nm_usuario_p,
		nr_seq_pepo_w);

	end;
end loop;
close C05;

select	max(ie_tipo_evolucao)
into STRICT	ie_tipo_evolucao_w
from	usuario
where	nm_usuario = nm_usuario_p;

select 	max(cd_pessoa_fisica)		
into STRICT 	cd_pessoa_fisica_paciente_w		
from 	cirurgia
where 	nr_cirurgia = nr_cirurgia_p;

if (ie_tipo_evolucao_w IS NOT NULL AND ie_tipo_evolucao_w::text <> '') then
	open C06(cd_pessoa_fisica_paciente_w);
	loop
	fetch C06 into	
		ie_evolucao_clinica_w,	
		ds_texto_w;
	EXIT WHEN NOT FOUND; /* apply on C06 */
		begin
		
		insert into evolucao_paciente(
			cd_evolucao,
			dt_evolucao,
			ie_tipo_evolucao,
			cd_pessoa_fisica,
			dt_atualizacao,
			nm_usuario,
			nr_atendimento,
			ds_evolucao,
			cd_medico,
			dt_liberacao,
			ie_evolucao_clinica,
			cd_especialidade_medico,
			ie_recem_nato,
			ie_situacao,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			--nr_cirurgia,
			nr_seq_pepo
			)
		values (
			nextval('evolucao_paciente_seq'),
			dt_inicio_p,
			ie_tipo_evolucao_w,
			coalesce(cd_pessoa_fisica_paciente_w, cd_pessoa_fisica_w),
			clock_timestamp(),
			nm_usuario_p,
			nr_atendimento_w,
			ds_texto_w,
			cd_pessoa_fisica_w,
			null,
			ie_evolucao_clinica_w,
			obter_especialidade_medico(cd_pessoa_fisica_w, 'C'),
			'N',
			'A',
			clock_timestamp(),
			nm_usuario_p,
			--nr_cirurgia_p,
			nr_seq_pepo_w		
			);		
		end;
	end loop;
	close C06;
end if;

select	obter_tipo_atendimento(nr_atendimento_w),
		obter_convenio_atendimento(nr_atendimento_w),
		obter_tipo_convenio(obter_convenio_atendimento(nr_atendimento_w)),
		obter_categoria_atendimento(nr_atendimento_w)
into STRICT	ie_tipo_atendimento_w,
		cd_convenio_w,
		ie_tipo_convenio_w,
		cd_categoria_w
;

open C07(cd_pessoa_fisica_paciente_w);
loop
fetch C07 into	
		nr_seq_derivado_w,
		qt_material_w,
		qt_dose_homo_w; 	
EXIT WHEN NOT FOUND; /* apply on C07 */
	begin
	SELECT * FROM Obter_Proced_sangue(0, nr_seq_derivado_w, cd_estabelecimento_p, ie_tipo_atendimento_w, ie_tipo_convenio_w, cd_convenio_w, cd_categoria_w, cd_setor_atendimento_w, cd_procedimento_w, ie_origem_proced_w, nr_seq_proc_interno_w) INTO STRICT cd_setor_atendimento_w, cd_procedimento_w, ie_origem_proced_w, nr_seq_proc_interno_w;
			
	select	nextval('cirurgia_agente_anestesico_seq')
	into STRICT	nr_sequencia_ww
	;

	insert into cirurgia_agente_anestesico(
			nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			--nr_cirurgia,
			nr_seq_pepo,
			cd_profissional,
			qt_dose,
			ie_tipo,
			nr_seq_derivado,
			cd_procedimento,
			ie_origem_proced,
			ie_situacao,
			nr_seq_evento,
			nr_protocolo_pepo,
			nr_seq_modelo)
		values (
			nr_sequencia_ww,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),			
			nm_usuario_p,
			--nr_cirurgia_p,
			nr_seq_pepo_w,
			cd_pessoa_fisica_w,
			qt_dose_homo_w,
			5,
			nr_seq_derivado_w,
			cd_procedimento_w,
			ie_origem_proced_w,
			'A',
			nr_seq_evento_w,
			nr_seq_protocolo_p,
			nr_seq_modelo_p);
		if (qt_dose_homo_w IS NOT NULL AND qt_dose_homo_w::text <> '') then
			insert into CIRURGIA_AGENTE_ANEST_OCOR(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_cirur_agente,
				dt_inicio_adm,
				dt_final_adm,
				qt_dose,
				ie_aplic_bolus,
				ie_situacao,
				nr_seq_evento,
				nr_protocolo_pepo,
				nr_seq_modelo)
			values (
				nextval('cirurgia_agente_anest_ocor_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				nr_sequencia_ww,
				dt_inicio_p,
				dt_inicio_p,
				qt_dose_homo_w,
				'N',
				'A',
				nr_seq_evento_w,
				nr_seq_protocolo_p,
				nr_seq_modelo_p);
		end if;
	end;
end loop;
close C07;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_cirur_proto_pepo ( nr_cirurgia_p bigint, nr_seq_protocolo_p bigint, dt_inicio_p timestamp, nr_seq_pepo_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, nr_seq_modelo_p bigint default null) FROM PUBLIC;

