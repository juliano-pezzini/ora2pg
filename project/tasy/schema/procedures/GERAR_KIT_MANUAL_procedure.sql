-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_kit_manual ( cd_material_p bigint, qt_material_p bigint, nr_prescricao_p bigint, nr_atendimento_p bigint, nr_interno_conta_p bigint, nr_seq_atepacu_p bigint, cd_local_estoque_p bigint, cd_kit_material_p bigint, cd_estabelecimento_p bigint, dt_atendimento_p timestamp, ie_entra_conta_p text, ie_estoque_p text, nm_usuario_p text ) AS $body$
DECLARE


cd_unidade_medida_w	varchar(30);
dt_entrada_unidade_w	timestamp;
cd_setor_atendimento_w	integer;
nr_sequencia_w		bigint;
nr_prescricao_w		bigint;


BEGIN

Select	substr(obter_dados_material_estab(cd_material,cd_estabelecimento_p,'UMS'),1,30) cd_unidade_medida_consumo
into STRICT	cd_unidade_medida_w
from	material
where	cd_material = cd_material_p
and	ie_situacao = 'A';

SELECT	a.DT_ENTRADA_UNIDADE,
	a.CD_SETOR_ATENDIMENTO
INTO STRICT	DT_ENTRADA_UNIDADE_W,
	CD_SETOR_ATENDIMENTO_W
FROM	ATEND_PACIENTE_UNIDADE a,
	atendimento_paciente b
WHERE	a.nr_atendimento = b.nr_atendimento
and	a.NR_SEQ_INTERNO = NR_SEQ_ATEPACU_P;

Select	CASE WHEN nr_prescricao_p=0 THEN null  ELSE nr_prescricao_p END
into STRICT	nr_prescricao_w
;

if (ie_entra_conta_p = 'S') then

	Select	nextval('material_atend_paciente_seq')
	into STRICT	nr_sequencia_w
	;

	insert into material_atend_paciente(	nr_sequencia,
						nr_atendimento,
						nr_interno_conta,
						nr_prescricao,
						dt_entrada_unidade,
						dt_atendimento,
						cd_unidade_medida,
						cd_material,
						qt_material,
						cd_acao,
						cd_setor_atendimento,
						nr_seq_atepacu,
						cd_kit_material,
						nm_usuario,
						dt_atualizacao,
						cd_local_estoque,
						cd_material_exec)
				values (	nr_sequencia_w,
						nr_atendimento_p,
						nr_interno_conta_p,
						nr_prescricao_w,
						dt_entrada_unidade_w,
						dt_atendimento_p,
						cd_unidade_medida_w,
						cd_material_p,
						qt_material_p,
						1,
						cd_setor_atendimento_w,
						nr_seq_atepacu_p,
						cd_kit_material_p,
						nm_usuario_p,
						clock_timestamp(),
						cd_local_estoque_p,
						cd_material_p);

	CALL atualiza_preco_material(nr_sequencia_w, nm_usuario_p);

--	insert into log_xxtasy values (sysdate, nm_usuario_p, 7000, 'Kit manual conta: Atendimento = ' || nr_atendimento_p ||
--				     ' Conta =  ' || nr_interno_conta_p || ' Seq\Material = ' || nr_sequencia_w || '\' || cd_material_p);
	commit;
elsif (ie_estoque_p = 'S') and (cd_local_estoque_p IS NOT NULL AND cd_local_estoque_p::text <> '') then
	CALL Gerar_Prescricao_Estoque(	cd_estabelecimento_p,
					nr_atendimento_p,
					dt_entrada_unidade_w,
					cd_material_p,
					dt_atendimento_p,
					'1',
					cd_local_estoque_p,
					qt_material_p,
					cd_setor_atendimento_w,
					cd_unidade_medida_w,
					nm_usuario_p,
					'I',
					nr_prescricao_w,
					null,
					null,
					0,
					'',
					'',
					0,
					0,
					0,
					null, '','','');

--insert into logxx_tasy values (sysdate, nm_usuario_p, 7000, 'Kit manual estoque: Atendimento = ' || nr_atendimento_p ||
			     --' Conta =  ' || nr_interno_conta_p || ' Material = ' || cd_material_p);
commit;

end if;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_kit_manual ( cd_material_p bigint, qt_material_p bigint, nr_prescricao_p bigint, nr_atendimento_p bigint, nr_interno_conta_p bigint, nr_seq_atepacu_p bigint, cd_local_estoque_p bigint, cd_kit_material_p bigint, cd_estabelecimento_p bigint, dt_atendimento_p timestamp, ie_entra_conta_p text, ie_estoque_p text, nm_usuario_p text ) FROM PUBLIC;

