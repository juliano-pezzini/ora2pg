-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_taxa_procedimento (nr_atendimento_p bigint, nr_interno_conta_p bigint, nm_usuario_p text) AS $body$
DECLARE


cd_convenio_w		bigint;
cd_procedimento_w	bigint;
ie_origem_proced_w	bigint;
qt_procedimento_w	double precision;

cd_proced_taxa_w	bigint;
ie_origem_taxa_w	bigint;

nr_sequencia_w		bigint;

dt_entrada_unidade_w	timestamp;
cd_convenio_proc_w	bigint;
cd_categoria_w		varchar(10);
nr_doc_convenio_w	varchar(20);
cd_setor_atendimento_w	bigint;
nr_seq_atepacu_w	bigint;
dt_procedimento_w	timestamp;
ie_status_acerto_w	bigint;

c01 CURSOR FOR
	SELECT	cd_procedimento,
		ie_origem_proced,
		dt_entrada_unidade,
		cd_convenio,
		cd_categoria,
		nr_doc_convenio,
		cd_setor_atendimento,
		nr_seq_atepacu,
		max(dt_procedimento),
		sum(qt_procedimento)
	from	procedimento_paciente
	where	nr_interno_conta	= nr_interno_conta_p
	and	coalesce(cd_motivo_exc_conta::text, '') = ''
	group by cd_procedimento,
		ie_origem_proced,
		dt_entrada_unidade,
		cd_convenio,
		cd_categoria,
		nr_doc_convenio,
		cd_setor_atendimento,
		nr_seq_atepacu;


BEGIN

begin
select	coalesce(max(ie_status_acerto),0)
into STRICT	ie_status_acerto_w
from	conta_paciente
where	nr_interno_conta	= nr_interno_conta_p;
exception
	when others then
		ie_status_acerto_w := 0;
end;

select	coalesce(max(cd_convenio_parametro), 0)
into STRICT	cd_convenio_w
from	conta_paciente
where	nr_interno_conta	= nr_interno_conta_p;

if (cd_convenio_w <> 0) 	 and (ie_status_acerto_w = 1)then
	open	c01;
	loop
	fetch	c01 into
		cd_procedimento_w,
		ie_origem_proced_w,
		dt_entrada_unidade_w,
		cd_convenio_proc_w,
		cd_categoria_w,
		nr_doc_convenio_w,
		cd_setor_atendimento_w,
		nr_seq_atepacu_w,
		dt_procedimento_w,
		qt_procedimento_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin

		select	max(cd_proced_taxa),
			max(ie_origem_taxa)
		into STRICT	cd_proced_taxa_w,
			ie_origem_taxa_w
		from	convenio_taxa_procedimento
		where	cd_convenio		= cd_convenio_w
		and	cd_procedimento		= cd_procedimento_w
		and	ie_origem_proced	= ie_origem_proced_w
		and	qt_procedimento_w between qt_inicial and qt_final;

		if (cd_proced_taxa_w IS NOT NULL AND cd_proced_taxa_w::text <> '') then

			delete	from procedimento_paciente
			where 	nr_interno_conta	= nr_interno_conta_p
			and	cd_procedimento		= cd_proced_taxa_w
			and	ie_origem_proced	= ie_origem_taxa_w
			and	nr_seq_cor_exec		= 5050;

		     	select 	nextval('procedimento_paciente_seq')
     			into STRICT 	nr_sequencia_w
     			;

	     		insert  into procedimento_paciente(nr_sequencia, nr_atendimento, dt_entrada_unidade, cd_procedimento,
				 dt_procedimento, qt_procedimento,dt_atualizacao, nm_usuario, cd_convenio,
				 cd_categoria, vl_procedimento, vl_medico,vl_anestesista, vl_materiais,
				 dt_acerto_conta, vl_auxiliares, vl_custo_operacional,tx_medico, tx_anestesia,
				 nr_doc_convenio, dt_conta, cd_setor_atendimento, ie_origem_proced, nr_seq_atepacu,
				 nr_interno_conta, nr_seq_cor_exec)
     			values (nr_sequencia_w, nr_atendimento_p, dt_entrada_unidade_w, cd_proced_taxa_w,
				dt_procedimento_w, 1, clock_timestamp(), nm_usuario_p, cd_convenio_w,
				cd_categoria_w, 0, 0, 0, 0,null, 0, 0, 0, 0, nr_doc_convenio_w,
				dt_procedimento_w, cd_setor_atendimento_w, ie_origem_taxa_w, nr_seq_atepacu_w,
				nr_interno_conta_p, 5050);

		end if;

		end;
	end loop;
	close c01;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_taxa_procedimento (nr_atendimento_p bigint, nr_interno_conta_p bigint, nm_usuario_p text) FROM PUBLIC;

