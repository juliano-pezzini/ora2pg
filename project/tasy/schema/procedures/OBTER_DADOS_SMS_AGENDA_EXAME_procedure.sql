-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE obter_dados_sms_agenda_exame ( cd_pessoa_fisica_p text, ds_texto_padrao_p text, nm_paciente_p text, ds_procedimento_p text, ds_fantasia_estab_p text, hr_inicio_p timestamp, cd_agenda_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, nr_seq_proc_interno_p bigint, cd_estabelecimento_p bigint, cd_perfil_p bigint, nm_usuario_p text, nr_seq_agenda_p bigint, nr_telefone_celular_p INOUT text, ds_orientacao_sms_p INOUT text) AS $body$
DECLARE

 
nr_telefone_celular_w	varchar(255);
ds_orientacao_sms_w		varchar(255);
ds_sms_w				varchar(2000);
ds_sms_padrao_w			varchar(4000);
ds_utilizar_ddd_sms_w	varchar(4000);
ds_agenda_w				varchar(50);
ds_primeiro_nome_w		varchar(100);
ds_primeiro_nome_med_w	varchar(60);
ds_estab_agenda_w		varchar(80);
nm_medico_exec_w		varchar(60);
ds_curta_w				varchar(30);
ds_tipo_proc_w			varchar(50);
ds_tipo_adic_proc_w		varchar(100);
ie_orientacao_SMS_proc_w	varchar(5);


BEGIN 
 
ds_utilizar_ddd_sms_w := Obter_Param_Usuario(39, 325, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ds_utilizar_ddd_sms_w);
if (cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') then 
	begin 
	if (ds_utilizar_ddd_sms_w = 'S') then 
		begin 
		nr_telefone_celular_w	:= substr(obter_dados_pf(cd_pessoa_fisica_p, 'TCD'),1,255);
		end;
	else 
		begin 
		nr_telefone_celular_w	:= substr(obter_dados_pf(cd_pessoa_fisica_p, 'TC'),1,255);
		end;
	end if;
	end;	
end if;
 
ds_sms_padrao_w := Obter_Param_Usuario(39, 123, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ds_sms_padrao_w);
ds_sms_padrao_w	:= substr(replace_macro(ds_sms_padrao_w, '@DT_AGENDA@', to_char(clock_timestamp(),'dd/MM/yyyy')), 1, 4000);
 
select	a.ds_agenda, 
		substr(obter_nome_estabelecimento(a.cd_estabelecimento),1,80), 
		substr(obter_nome_medico(b.cd_medico_exec,'NCD'),1,60),		 
		substr(a.ds_curta,1,30) 
into STRICT	ds_agenda_w, 
		ds_estab_agenda_w, 
		nm_medico_exec_w, 
		ds_curta_w 
from	agenda a, 
		agenda_paciente b 
where	a.cd_agenda = b.cd_agenda 
and		a.cd_agenda = cd_agenda_p 
and		b.nr_sequencia = nr_seq_agenda_p;
 
if (nm_medico_exec_w IS NOT NULL AND nm_medico_exec_w::text <> '') then 
	select	substr(obter_primeiro_nome(nm_medico_exec_w),1,60) 
	into STRICT	ds_primeiro_nome_med_w 
	from	agenda_paciente 
	where	nr_sequencia = nr_seq_agenda_p;
end if;
 
ds_primeiro_nome_w := obter_primeiro_nome(nm_paciente_p);
 
if (cd_procedimento_p > 0) and (ie_origem_proced_p > 0) then 
	begin 
		select substr(obter_valor_dominio(95, cd_tipo_procedimento),1,50) 
		into STRICT  ds_tipo_proc_w 
		from  procedimento 
		where cd_procedimento = cd_procedimento_p 
		and  ie_origem_proced = ie_origem_proced_p;	
	exception 
	when others then 
		ds_tipo_proc_w := '';
	end;
end if;
 
if (nr_seq_agenda_p > 0) then 
	begin 
		select 	substr(obter_tp_exame_adic_agenda(nr_seq_agenda_p),1,100) 
		into STRICT 	ds_tipo_adic_proc_w 
		;	
	exception 
	when others then 
		ds_tipo_adic_proc_w := '';
	end;
end if;
 
 
if (ds_texto_padrao_p IS NOT NULL AND ds_texto_padrao_p::text <> '') then 
	begin 
	ds_sms_w := ds_texto_padrao_p;
	ds_sms_w := substr(replace_macro(ds_sms_w, '@DT_AGENDA@', to_char(hr_inicio_p,'dd/MM/yyyy hh24:mi:ss')), 1,2000);
	ds_sms_w := substr(replace_macro(ds_sms_w, '@NM_PACIENTE@', nm_paciente_p), 1,2000);
	ds_sms_w := substr(replace_macro(ds_sms_w, '@AGENDA@', ds_agenda_w), 1,2000);
	ds_sms_w := substr(replace_macro(ds_sms_w, '@PRIMEIRO_NOME@', ds_primeiro_nome_w), 1,2000);
	ds_sms_w := substr(replace_macro(ds_sms_w, '@NM_MEDICO_EXEC@', nm_medico_exec_w), 1,2000);
	ds_sms_w := substr(replace_macro(ds_sms_w, '@EXAME@', ds_procedimento_p), 1,2000);
	ds_sms_w := substr(replace_macro(ds_sms_w, '@ESTAB@', ds_fantasia_estab_p), 1,2000);
	ds_sms_w := substr(replace_macro(ds_sms_w, '@ESTAB_AGENDA@', coalesce(ds_estab_agenda_w,ds_fantasia_estab_p)), 1,2000);
	ds_sms_w := substr(replace_macro(ds_sms_w, '@DT_RESUMIDA@', to_char(hr_inicio_p,'dd/MM/yyyy hh24:mi')), 1,2000);
	ds_sms_w := substr(replace_macro(ds_sms_w, '@DATA@', to_char(hr_inicio_p,'dd/MM/yyyy')), 1,2000);
	ds_sms_w := substr(replace_macro(ds_sms_w, '@HORA@', to_char(hr_inicio_p,'hh24:mi')), 1,2000);
	ds_sms_w := substr(replace_macro(ds_sms_w, '@DT_DIA_MES@', to_char(hr_inicio_p,'dd/mm')), 1,2000);
	ds_sms_w := substr(replace_macro(ds_sms_w, '@DT_HOR_MIN@', to_char(hr_inicio_p,'hh24:mi')), 1,2000);
	ds_sms_w := substr(replace_macro(ds_sms_w, '@PRIMEIRO_NOME_MEDICO@', ds_primeiro_nome_med_w), 1,2000);
	ds_sms_w := substr(replace_macro(ds_sms_w, '@DS_CURTA@', ds_curta_w), 1,2000);
	ds_sms_w := substr(replace_macro(ds_sms_w, '@TIPO_PROC@', ds_tipo_proc_w), 1,2000);
	ds_sms_w := substr(replace_macro(ds_sms_w, '@TIPO_PROC_ADIC@', ds_tipo_adic_proc_w), 1,2000);
	end;
elsif (ds_sms_padrao_w IS NOT NULL AND ds_sms_padrao_w::text <> '') then 
	begin 
	ds_sms_w := ds_sms_padrao_w;
	end;
end if;
 
 
ie_orientacao_SMS_proc_w := Obter_Param_Usuario(820, 451, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ie_orientacao_SMS_proc_w);
 
if (coalesce(ie_orientacao_SMS_proc_w,'S') = 'S') then 
	if (nr_seq_proc_interno_p > 0) then 
		begin 
 
		select	ds_orientacao_sms 
		into STRICT	ds_orientacao_sms_w 
		from	proc_interno 
		where	nr_sequencia = nr_seq_proc_interno_p;
 
		ds_orientacao_sms_w	:= substr(ds_sms_w || chr(10) || ds_orientacao_sms_w,1,255);
		end;
	elsif (cd_procedimento_p > 0) then 
		begin 
 
		select	ds_orientacao_sms 
		into STRICT	ds_orientacao_sms_w 
		from 	procedimento 
		where 	cd_procedimento		= cd_procedimento_p 
		and 	ie_origem_proced	= ie_origem_proced_p;
 
		ds_orientacao_sms_w	:= substr(ds_sms_w || chr(10) || ds_orientacao_sms_w,1,255);
 
		end;
	end if;
end if;
 
if (coalesce(ds_orientacao_sms_w::text, '') = '') then 
	ds_orientacao_sms_w	:= ds_sms_w;
end if;
 
nr_telefone_celular_p	:= nr_telefone_celular_w;
ds_orientacao_sms_p	:= ds_orientacao_sms_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE obter_dados_sms_agenda_exame ( cd_pessoa_fisica_p text, ds_texto_padrao_p text, nm_paciente_p text, ds_procedimento_p text, ds_fantasia_estab_p text, hr_inicio_p timestamp, cd_agenda_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, nr_seq_proc_interno_p bigint, cd_estabelecimento_p bigint, cd_perfil_p bigint, nm_usuario_p text, nr_seq_agenda_p bigint, nr_telefone_celular_p INOUT text, ds_orientacao_sms_p INOUT text) FROM PUBLIC;

