-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_movto_estoque_direto_nf ( nr_sequencia_p bigint, nm_usuario_p text) AS $body$
DECLARE


cd_oper_ent_pass_direta_w		smallint;
cd_oper_cons_pass_direta_w		smallint;
nr_movimento_estoque_w		bigint;
cd_estabelecimento_w		smallint;
dt_movimento_estoque_w		timestamp;
cd_operacao_estoque_w		smallint;
cd_acao_w			varchar(1);
cd_material_w			integer;
dt_mesano_referencia_w		timestamp;
qt_movimento_w			double precision;
dt_atualizacao_w			timestamp := clock_timestamp();
ie_origem_documento_w		varchar(3);
nr_documento_w			varchar(255);
nr_sequencia_item_docto_w		integer;
cd_cgc_emitente_w		varchar(14);
cd_serie_nf_w			nota_fiscal.cd_serie_nf%type;
nr_sequencia_documento_w	nota_fiscal.nr_sequencia_nf%type;
vl_movimento_w			double precision;
cd_unidade_medida_estoque_w	varchar(30);
cd_procedimento_w		bigint;
cd_setor_atendimento_w		integer;
cd_conta_w			integer;
dt_contabil_w			timestamp;
cd_lote_fabricacao_w		varchar(20);
dt_validade_w			timestamp;
qt_estoque_w			double precision;
cd_local_estoque_destino_w		smallint;
cd_local_estoque_w		smallint;
cd_centro_custo_w			integer;
vl_despesa_acessoria_w		double precision;
vl_seguro_w			double precision;
vl_total_item_nf_w			double precision;
vl_frete_w  			double precision;
vl_desconto_w			double precision;
vl_desconto_rateio_w		double precision;
cd_unidade_medida_compra_w	varchar(30);
nr_movimento_estoque_corresp	bigint;
cd_conta_contabil_w		varchar(20);
ie_origem_proced_w		bigint;
cd_fornecedor_w			varchar(14);
nr_lote_contabil_w			bigint;
dt_mesano_vigente_w		timestamp;
cd_tributo_w			smallint;
cd_tipo_valor_w			smallint;
vl_tributo_w			double precision;
vl_custo_medio_w			double precision;
nr_movimento_entrada_w		bigint;
nr_item_nf_w			bigint;
cd_conta_estoque_w		varchar(20);
ie_consignado_operacao_w		varchar(1);
ie_tipo_conta_w				smallint;
cd_operacao_estoque_ww          operacao_estoque.cd_operacao_estoque%type;
qt_movto_valor_w			integer;

c01 CURSOR FOR
SELECT	c.nr_item_nf,
	c.cd_local_estoque,
	b.dt_entrada_saida,
	b.ie_acao_nf,
	c.cd_material_estoque,
	PKG_DATE_UTILS.start_of(b.dt_entrada_saida,'month',0),
	c.qt_item_nf,
	clock_timestamp(),
	'1',
	b.nr_nota_fiscal,
	c.nr_item_nf,
	b.cd_cgc_emitente,
	b.cd_serie_nf,
	b.nr_sequencia_nf,
	0,
	c.cd_unidade_medida_estoque,
	0,
	c.cd_setor_atendimento,
	c.cd_conta,
	b.dt_entrada_saida,
	c.cd_lote_fabricacao,
	c.dt_validade,
	c.qt_item_estoque,
	null,
	c.cd_centro_custo,
	c.vl_despesa_acessoria,
	c.vl_seguro,
	c.vl_total_item_nf,
	c.vl_frete,
	c.vl_desconto,
	c.vl_desconto_rateio,
	c.cd_unidade_medida_compra,
	null,
	c.cd_conta_contabil,
	c.ie_origem_proced,
	b.cd_cgc,
	b.nr_lote_contabil,
	CASE WHEN c.qt_item_estoque=0 THEN 0  ELSE coalesce(c.vl_liquido,0) / c.qt_item_estoque END
from	nota_fiscal b ,
	nota_fiscal_item c
where	b.nr_sequencia		= c.nr_sequencia
and	coalesce(b.dt_atualizacao_estoque::text, '') = ''
and	b.nr_sequencia		= nr_sequencia_p
and	(c.cd_material IS NOT NULL AND c.cd_material::text <> '')
and (obter_se_local_direto(c.cd_local_estoque) = 'S')
and (ie_consignado_operacao_w not in ('1','8')) /*Para nao gerar no tipo (Compra Consignado sem Material) ou Devolucao Consignado Sem Material*/
and (cd_oper_ent_pass_direta_w > 0)
and (cd_oper_cons_pass_direta_w > 0);

c02 CURSOR FOR
SELECT	a.cd_tributo,
	a.vl_tributo
from	tributo b,
	nota_fiscal_item_trib a
where	a.cd_tributo = b.cd_tributo
and	a.nr_sequencia = nr_sequencia_p
and	a.nr_item_nf = nr_sequencia_item_docto_w;


BEGIN
select	cd_estabelecimento
into STRICT	cd_estabelecimento_w
from	nota_fiscal
where	nr_sequencia = nr_sequencia_p;

select	coalesce(max(cd_oper_ent_pass_direta),0),
	coalesce(max(cd_oper_cons_pass_direta),0)
into STRICT	cd_oper_ent_pass_direta_w,
	cd_oper_cons_pass_direta_w
from	parametro_estoque
where	cd_estabelecimento = cd_estabelecimento_w;


/*Para identificar o tipo de consignado. Se for Sem Material nao vai gerar os movimentos*/

select	coalesce(max(b.ie_consignado),'0'),
	coalesce(max(b.cd_operacao_estoque),cd_oper_ent_pass_direta_w)
into STRICT	ie_consignado_operacao_w,
	cd_operacao_estoque_w
from	nota_fiscal n,
	operacao_estoque b,
	operacao_nota a
where	a.cd_operacao_estoque	= b.cd_operacao_estoque
and	a.cd_operacao_nf 	= n.cd_operacao_nf
and	n.nr_sequencia		= nr_sequencia_p;



OPEN C01;
LOOP
FETCH C01 into
	nr_item_nf_w,
	cd_local_estoque_w,
	dt_movimento_estoque_w,
	cd_acao_w,
	cd_material_w,
	dt_mesano_referencia_w,
	qt_movimento_w,
	dt_atualizacao_w,
	ie_origem_documento_w,
	nr_documento_w,
	nr_sequencia_item_docto_w,
	cd_cgc_emitente_w,
	cd_serie_nf_w,
	nr_sequencia_documento_w,
	vl_movimento_w,
	cd_unidade_medida_estoque_w,
	cd_procedimento_w,
	cd_setor_atendimento_w,
	cd_conta_w,
	dt_contabil_w,
	cd_lote_fabricacao_w,
	dt_validade_w,
	qt_estoque_w,
	cd_local_estoque_destino_w,
	cd_centro_custo_w,
	vl_despesa_acessoria_w,
	vl_seguro_w,
	vl_total_item_nf_w,
	vl_frete_w,
	vl_desconto_w,
	vl_desconto_rateio_w,
	cd_unidade_medida_compra_w,
	nr_movimento_estoque_corresp,
	cd_conta_contabil_w,
	ie_origem_proced_w,
	cd_fornecedor_w,
	nr_lote_contabil_w,
	vl_custo_medio_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
/*	Alterado por Marcus em 21/04/2006 para obter a CONTA DE ESTOQUE e atualizar a nota com a mesma */

	nr_documento_w  := regexp_replace(nr_documento_w, '[^0-9]', null);
	ie_tipo_conta_w	:= 3;
	if (coalesce(cd_centro_custo_w::text, '') = '') then
		ie_tipo_conta_w	:= 2;
	end if;
		
	SELECT * FROM define_conta_material(
			cd_estabelecimento_w, cd_material_w, ie_tipo_conta_w, null, 0, null, 0, 0, 0, '', cd_local_estoque_w, cd_operacao_estoque_w, dt_movimento_estoque_w, cd_conta_estoque_w, cd_centro_custo_w, '') INTO STRICT cd_conta_estoque_w, cd_centro_custo_w;
				
	if (coalesce(cd_conta_contabil_w::text, '') = '') then			
				
		update	nota_fiscal_item
		set	cd_conta_contabil	= cd_conta_estoque_w,
		cd_sequencia_parametro = philips_contabil_pck.get_parametro_conta_contabil
		where	nr_sequencia		= nr_sequencia_p
		and	nr_item_nf		= nr_item_nf_w;
	
	end if;

	if (cd_acao_w = '2') then
		begin
		/*SEGUNDO MOVIMENTO DE CONSUMO*/

		select	nextval('movimento_estoque_seq')
		into STRICT	nr_movimento_estoque_w
		;

		insert into movimento_estoque(
			nr_movimento_estoque,
			cd_estabelecimento,
			cd_local_estoque,
			dt_movimento_estoque,
			cd_operacao_estoque,
			cd_acao,
			cd_material,
			dt_mesano_referencia,
			qt_movimento,
			dt_atualizacao,
			nm_usuario,
			ie_origem_documento,
			nr_documento,
			nr_sequencia_item_docto,
			nr_sequencia_documento,
			vl_movimento,
			cd_unidade_medida_estoque,
			cd_setor_atendimento,
			qt_estoque,
			cd_local_estoque_destino,
			cd_centro_custo,
			cd_unidade_med_mov,
			cd_fornecedor,
			cd_serie_nf,
			cd_conta_contabil)
		values (nr_movimento_estoque_w,
			cd_estabelecimento_w,
			cd_local_estoque_w,
			dt_movimento_estoque_w,
			cd_oper_cons_pass_direta_w,
			cd_acao_w,
			cd_material_w,
			dt_mesano_referencia_w,
			qt_movimento_w,
			clock_timestamp(),
			nm_usuario_p,
			'1',
			substr(nr_documento_w,1,15),
			nr_sequencia_item_docto_w,
			nr_sequencia_documento_w,
			vl_movimento_w,
			cd_unidade_medida_estoque_w,
			cd_setor_atendimento_w,
			qt_estoque_w,
			cd_local_estoque_destino_w,
			cd_centro_custo_w,
			cd_unidade_medida_compra_w,
			cd_fornecedor_w,
			cd_serie_nf_w,
			cd_conta_contabil_w);
			
		nr_movimento_entrada_w	:= nr_movimento_estoque_w;
			
		insert	into movimento_estoque_valor(
			nr_movimento_estoque,
			cd_tipo_valor,
			vl_movimento,
			dt_atualizacao,
			nm_usuario)
		SELECT	nr_movimento_estoque_w,
			cd_tipo_valor,
			vl_movimento,
			clock_timestamp(),
			nm_usuario_p
		from	movimento_estoque_valor
		where	nr_movimento_estoque		= nr_movimento_entrada_w;
		end;
		
	end if;


	/*PRIMEIRO MOVIMENTO DE ENTRADA*/

	select	nextval('movimento_estoque_seq')
	into STRICT	nr_movimento_estoque_w
	;

	insert into movimento_estoque(
		nr_movimento_estoque,
		cd_estabelecimento,
		cd_local_estoque,
		dt_movimento_estoque,
		cd_operacao_estoque,
		cd_acao,
		cd_material,
		dt_mesano_referencia,
		qt_movimento,
		dt_atualizacao,
		nm_usuario,
		ie_origem_documento,
		nr_documento,
		nr_sequencia_item_docto,
		cd_cgc_emitente,
		cd_serie_nf,
		nr_sequencia_documento,
		vl_movimento,
		cd_unidade_medida_estoque,
		cd_procedimento,
		cd_setor_atendimento,
		cd_conta,
		dt_contabil,
		cd_lote_fabricacao,
		dt_validade,
		qt_estoque,
		cd_local_estoque_destino,
		cd_unidade_med_mov,
		nr_movimento_estoque_corresp,
		cd_conta_contabil,
		cd_material_estoque,
		ie_origem_proced,
		cd_fornecedor,
		nr_lote_contabil,
		nr_seq_tab_orig,
		cd_centro_custo)
	values (nr_movimento_estoque_w,
		cd_estabelecimento_w,
		cd_local_estoque_w,
		dt_movimento_estoque_w,
		cd_oper_ent_pass_direta_w,
		cd_acao_w,
		cd_material_w,
		dt_mesano_referencia_w,
		qt_movimento_w,
		clock_timestamp(),
		nm_usuario_p,
		'1',
		substr(nr_documento_w,1,15),
		nr_sequencia_item_docto_w,
		cd_cgc_emitente_w,
		cd_serie_nf_w,
		nr_sequencia_documento_w,
		vl_movimento_w,
		cd_unidade_medida_estoque_w,
		cd_procedimento_w,
		cd_setor_atendimento_w,
		cd_conta_w,
		dt_contabil_w,
		cd_lote_fabricacao_w,
		dt_validade_w,
		qt_estoque_w,
		cd_local_estoque_destino_w,
		cd_unidade_medida_compra_w,
		nr_movimento_estoque_corresp,
		cd_conta_estoque_w,
		cd_material_w,
		ie_origem_proced_w,
		cd_fornecedor_w,
		nr_lote_contabil_w,
		nr_sequencia_p,
		cd_centro_custo_w);

	if (vl_total_item_nf_w <> 0) then
		insert into movimento_estoque_valor(
			nr_movimento_estoque,
			cd_tipo_valor,
			vl_movimento,
			dt_atualizacao,
			nm_usuario)
		values (nr_movimento_estoque_w,
			1,
 			vl_total_item_nf_w,
 			dt_atualizacao_w,
 			nm_usuario_p);
	end if;

	if (vl_frete_w <> 0) then
		insert into movimento_estoque_valor(
			nr_movimento_estoque,
 			cd_tipo_valor,
 			vl_movimento,
 			dt_atualizacao,
 			nm_usuario)
		values (nr_movimento_estoque_w,
			2,
			vl_frete_w,
 			dt_atualizacao_w,
 			nm_usuario_p);
	end if;

	if (vl_seguro_w <> 0) then
		insert into movimento_estoque_valor(
			nr_movimento_estoque,
 			cd_tipo_valor,
 			vl_movimento,
 			dt_atualizacao,
 			nm_usuario)
		values (nr_movimento_estoque_w,
              	3,
 			vl_seguro_w,
 			dt_atualizacao_w,
 			nm_usuario_p);
	end if;

	if (vl_despesa_acessoria_w <> 0) then
		insert	into movimento_estoque_valor(
			nr_movimento_estoque,
 			cd_tipo_valor,
 			vl_movimento,
 			dt_atualizacao,
 			nm_usuario)
		values (nr_movimento_estoque_w,
            		4,
			vl_despesa_acessoria_w,
			dt_atualizacao_w,
			nm_usuario_p);
	end if;

	if (vl_desconto_w + vl_desconto_rateio_w <> 0) then
		insert	into movimento_estoque_valor(
			nr_movimento_estoque,
			cd_tipo_valor,
			vl_movimento,
			dt_atualizacao,
			nm_usuario)
		values (nr_movimento_estoque_w,
			5,
			vl_desconto_w + vl_desconto_rateio_w,
			dt_atualizacao_w,
			nm_usuario_p);
	end if;

	begin
	OPEN C02;
	LOOP
	FETCH C02 into
		cd_tributo_w,
		vl_tributo_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin
		select	cd_tipo_valor
		into STRICT	cd_tipo_valor_w
		from	tipo_valor
		where	cd_tributo = cd_tributo_w;
		exception
			when others then
				cd_tipo_valor_w := 0;
		end;
		
		select	count(*)
		into STRICT	qt_movto_valor_w
		from	movimento_estoque_valor
		where	nr_movimento_estoque = nr_movimento_estoque_w
		and	cd_tipo_valor = CASE WHEN cd_tipo_valor_w=0 THEN 6  ELSE cd_tipo_valor_w END;
		
		
		if (vl_tributo_w <> 0) and (qt_movto_valor_w = 0) then

			insert into movimento_estoque_valor(
				nr_movimento_estoque,
				cd_tipo_valor,
				vl_movimento,
				dt_atualizacao,
				nm_usuario)
			values (nr_movimento_estoque_w,
				CASE WHEN cd_tipo_valor_w=0 THEN  6  ELSE cd_tipo_valor_w END ,
				vl_tributo_w,
				clock_timestamp(),
				nm_usuario_p);
		end if;
	end loop;
	close c02;
	end;

	begin
	select	dt_mesano_vigente
	into STRICT	dt_mesano_vigente_w
	from	parametro_estoque
	where	cd_estabelecimento = cd_estabelecimento_w;
	exception
		when others then
			dt_mesano_vigente_w := dt_mesano_referencia_w;
	end;

	dt_mesano_referencia_w		:= PKG_DATE_UTILS.start_of(dt_mesano_referencia_w, 'month', 0);
	if (dt_mesano_referencia_w	<= PKG_DATE_UTILS.start_of(PKG_DATE_UTILS.END_OF(dt_mesano_vigente_w, 'MONTH', 0), 'dd', 0)) then
		dt_mesano_referencia_w	:= dt_mesano_vigente_w;
	end if;

	begin
	update	saldo_estoque
	set	vl_preco_ult_compra	= ((vl_total_item_nf_w - vl_desconto_w) / qt_estoque_w),
		dt_ult_compra		= dt_movimento_estoque_w
	where	cd_material		= cd_material_w
	and	cd_estabelecimento	= cd_estabelecimento_w
	and	cd_local_estoque	= cd_local_estoque_w
	and	dt_mesano_referencia	= dt_mesano_referencia_w;
	exception
		when others then
			cd_material_w := 0;
	end;

	begin
	delete	from custo_mensal_material
	where	cd_estabelecimento	= cd_estabelecimento_w
	and	dt_referencia		= dt_mesano_referencia_w
	and	cd_material		= cd_material_w
	and	ie_tipo_custo		= 'R';
	insert into custo_mensal_material(
		cd_estabelecimento,		dt_referencia,		cd_material,
		ie_tipo_custo,		dt_atualizacao,		nm_usuario,		vl_custo)
	values (cd_estabelecimento_w,	dt_mesano_referencia_w,	cd_material_w,
		'R',				clock_timestamp(),			nm_usuario_p,		vl_custo_medio_w);
	exception
		when others then
			cd_material_w := 0;
	end;

	if (cd_acao_w <> '2') then
		begin
		/*SEGUNDO MOVIMENTO DE CONSUMO*/

		select	nextval('movimento_estoque_seq')
		into STRICT	nr_movimento_estoque_w
		;

		insert into movimento_estoque(
			nr_movimento_estoque,
			cd_estabelecimento,
			cd_local_estoque,
			dt_movimento_estoque,
			cd_operacao_estoque,
			cd_acao,
			cd_material,
			dt_mesano_referencia,
			qt_movimento,
			dt_atualizacao,
			nm_usuario,
			ie_origem_documento,
			nr_documento,
			nr_sequencia_item_docto,
			nr_sequencia_documento,
			vl_movimento,
			cd_unidade_medida_estoque,
			cd_setor_atendimento,
			qt_estoque,
			cd_local_estoque_destino,
			cd_centro_custo,
			cd_unidade_med_mov,
			cd_fornecedor,
			cd_serie_nf,
			cd_conta_contabil)
		values (nr_movimento_estoque_w,
			cd_estabelecimento_w,
			cd_local_estoque_w,
			dt_movimento_estoque_w,
			cd_oper_cons_pass_direta_w,
			cd_acao_w,
			cd_material_w,
			dt_mesano_referencia_w,
			qt_movimento_w,
			clock_timestamp(),
			nm_usuario_p,
			'1',
			substr(nr_documento_w,1,15),
			nr_sequencia_item_docto_w,
			nr_sequencia_documento_w,
			vl_movimento_w,
			cd_unidade_medida_estoque_w,
			cd_setor_atendimento_w,
			qt_estoque_w,
			cd_local_estoque_destino_w,
			cd_centro_custo_w,
			cd_unidade_medida_compra_w,
			cd_fornecedor_w,
			cd_serie_nf_w,
			cd_conta_contabil_w);
			
		nr_movimento_entrada_w	:= nr_movimento_estoque_w;
		
		insert	into movimento_estoque_valor(
			nr_movimento_estoque,
			cd_tipo_valor,
			vl_movimento,
			dt_atualizacao,
			nm_usuario)
		SELECT	nr_movimento_estoque_w,
			cd_tipo_valor,
			vl_movimento,
			clock_timestamp(),
			nm_usuario_p
		from	movimento_estoque_valor
		where	nr_movimento_estoque		= nr_movimento_entrada_w;
		end;
	end if;
	end;
end loop;
close C01;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_movto_estoque_direto_nf ( nr_sequencia_p bigint, nm_usuario_p text) FROM PUBLIC;

