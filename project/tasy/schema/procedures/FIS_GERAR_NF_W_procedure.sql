-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE fis_gerar_nf_w ( nr_seq_transmissao_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_lote_w 			fis_nf_w.nr_lote%type;
nr_nota_fiscal_w 		fis_nf_w.nr_nota_fiscal%type;
qt_rps_w 			fis_nf_w.qt_rps%type;
cd_natureza_operacao_w 		fis_nf_w.cd_natureza_operacao%type;
ie_regime_esp_tributacao_w 	fis_nf_w.ie_regime_especial_tributacao%type;
ie_optante_simples_nac_w 	fis_nf_w.ie_optante_simples_nac%type;
ie_incentivador_cultural_w 	fis_nf_w.ie_incentivador_cultural%type;
ie_status_w 			fis_nf_w.ie_status%type;
ds_outras_informacoes_w		fis_nf_w.ds_outras_informacoes%type;
nr_rps_w			nota_fiscal.nr_rps_sequencial%type;

cd_autorizacao_w		fis_nf_w.cd_autorizacao%type;
cd_regime_recolhimento_w	fis_nf_w.cd_regime_recolhimento%type;
cd_forma_recolhimento_w        fis_nf_w.cd_forma_recolhimento%type;

--  ## Informacoes Servico ##
ds_item_lista_servico_w 	fis_nf_w.ds_item_lista_servico%type;
cd_cnae_w   			fis_nf_w.cd_cnae%type;
cd_tributacao_municipio_w 	fis_nf_w.cd_tributacao_municipio%type;
ds_discriminacao_w 		fis_nf_w.ds_discriminacao%type;
cd_municipio_w 			fis_nf_w.cd_municipio%type;
cd_exigibilidade_iss_w 		fis_nf_w.cd_exigibilidade_iss%type;
cd_municipio_incidencia_w 	fis_nf_w.cd_municipio_incidencia%type;



--  ## Informacoes Emitente ##
nr_emitente_ins_municipal_w 	fis_nf_w.nr_emitente_ins_municipal%type;
cd_uf_emitente_w				fis_nf_w.cd_uf_emitente%type;
nm_municipio_emitente_w			fis_nf_w.nm_municipio_emitente%type;
ds_emitente_razao_social_w  	fis_nf_w.ds_emitente_razao_social%type;


--  ## Informacoes Tomador ##
ds_tomador_razao_social_w	fis_nf_w.ds_tomador_razao_social%type;
nr_tomador_ins_municipal_w 	fis_nf_w.nr_tomador_ins_municipal%type;
ds_tomador_endereco_w 		fis_nf_w.ds_tomador_endereco%type;
nr_tomador_end_numero_w 	fis_nf_w.nr_tomador_end_numero%type;
ds_tomador_end_complemento_w 	fis_nf_w.ds_tomador_end_complemento%type;
ds_tomador_end_bairro_w		fis_nf_w.ds_tomador_end_bairro%type;
cd_tomador_end_municipio_w 	fis_nf_w.cd_tomador_end_municipio%type;
ds_tomador_end_uf_w 		fis_nf_w.ds_tomador_end_uf%type;
cd_tomador_end_cep_w	 	fis_nf_w.cd_tomador_end_cep%type;
ds_tomador_contato_telefone_w 	fis_nf_w.ds_tomador_contato_telefone%type;
ds_tomador_contato_email_w	fis_nf_w.ds_tomador_contato_email%type;
ds_tomador_cpf_w			fis_nf_w.ds_tomador_cpf%type;
nm_municipio_tomador_w		fis_nf_w.nm_municipio_tomador%type;
nr_tomador_ins_estadual_w 	fis_nf_w.nr_tomador_ins_estadual%type;

--  ## Informacoes Intermediario ##
ie_intermediario_w 	  			fis_nf_w.ie_intermediario%type;
ie_iss_ret_intermediario_w 	  	fis_nf_w.ie_iss_ret_intermediario%type;
tp_ambulatorio_conta_w 	  		fis_nf_w.tp_ambulatorio_conta%type;
ie_brasileiro_w           		fis_nf_w.ie_brasileiro%type;	
nr_ins_munc_conta_w       		fis_nf_w.nr_ins_munc_conta%type;
nr_ins_est_conta_w        		fis_nf_w.nr_ins_est_conta%type;
ds_razao_social_conta_w   		fis_nf_w.ds_razao_social_conta%type;
tp_logradouro_conta_w     		fis_nf_w.tp_logradouro_conta%type;
ds_logradouro_conta_w     		fis_nf_w.ds_logradouro_conta%type;
nr_endereco_conta_w       		fis_nf_w.nr_endereco_conta%type;
ds_compl_endereco_conta_w   	fis_nf_w.ds_compl_endereco_conta%type;
ds_bairro_conta_w         		fis_nf_w.ds_bairro_conta%type;
ds_cidade_conta_w         		fis_nf_w.ds_cidade_conta%type;
cd_cpf_conta_w            		fis_nf_w.cd_cpf_conta%type;
cd_uf_conta_w             		fis_nf_w.cd_uf_conta%type;
nr_cep_conta_w            		fis_nf_w.nr_cep_conta%type;
ds_email_conta_w          		fis_nf_w.ds_email_conta%type;
ds_email_intermdiario_w   		fis_nf_w.ds_email_intermdiario%type;
cd_cnpj_cpf_intermediario_w  	fis_nf_w.cd_cnpj_cpf_intermediario%type;
nr_ins_munc_intermediario_w    fis_nf_w.nr_ins_munc_intermediario%type;


--  ## Informacoes Valores Tributos ##
vl_deducoes_w 			fis_nf_trib_w.vl_deducoes%type;
vl_pis_w 			fis_nf_trib_w.vl_pis%type;
vl_cofins_w			fis_nf_trib_w.vl_inss%type;
vl_inss_w 			fis_nf_trib_w.vl_inss%type;
vl_csll_w 			fis_nf_trib_w.vl_csll%type;
vl_ir_w 			fis_nf_trib_w.vl_ir%type;
ie_iss_retido_w 		fis_nf_trib_w.ie_iss_retido%type;
vl_iss_w 			fis_nf_trib_w.vl_iss%type;
vl_iss_retido_w			fis_nf_trib_w.vl_iss_retido%type;
vl_outras_retencoes_w 		fis_nf_trib_w.vl_outras_retencoes%type;
vl_base_calculo_w 		fis_nf_trib_w.vl_base_calculo%type;
vl_aliquota_w 			fis_nf_trib_w.vl_aliquota%type;
vl_aliquota_pis_w 			fis_nf_trib_w.vl_aliquota%type;
vl_aliquota_cofins_w 			fis_nf_trib_w.vl_aliquota%type;
vl_aliquota_csll_w 			fis_nf_trib_w.vl_aliquota%type;
vl_aliquota_ir_w 			fis_nf_trib_w.vl_aliquota%type;
vl_aliquota_inss_w 			fis_nf_trib_w.vl_aliquota%type;

-- ## Auxiliares
ie_iss_retido_aux_w 		varchar(1);
vl_total_nota_aux_w 		fis_nf_trib_w.vl_total_nota%type;
fis_nf_trib_w_seq_aux_w	fis_nf_trib_w.nr_sequencia%type;
sg_estado_w			varchar(255);

--  ## Informacoes Valores Item Tributos##
vl_item_aliquota_w		fis_nf_trib_w.vl_aliquota%type;
vl_item_base_calculo_w 		fis_nf_trib_w.vl_base_calculo%type;
vl_item_total_w 		fis_nf_trib_w.vl_total_nota%type;
cd_item_cnae_w			fis_nf_w.cd_cnae%type;
ds_item_servico_w		fis_nf_w.ds_item_lista_servico%type;
cd_item_cst_w			fis_nf_trib_w.cd_cst%type;
vl_item_issqn_w  		fis_nf_trib_w.vl_issqn%type;
vl_item_issqn_substituicao_w 	fis_nf_trib_w.vl_issqn_substituicao%type;
vl_base_calculo_subs_w		fis_nf_trib_w.vl_base_calculo_subs%type;

/*
Variaveis auxiliares para manipular as saidas da procedure interna.
Utilizar sempre as variaveis auxialres para nao manipular valores indevidos.
*/
vl_tributo_aux_w		double precision := 0;
vl_base_calculo_aux_w		double precision := 0;
tx_tributo_aux_w		double precision := 0;
vl_reducao_base_aux_w		double precision := 0;
vl_reducao_aux_w		double precision := 0;

/*Nota*/

c_nota_fiscal CURSOR FOR
	SELECT	l.nr_sequencia nr_seq_lote_nfe,
		a.cd_cgc_emitente,
		a.nr_sequencia nr_seq_nota,
		a.nr_nota_fiscal, 
		a.dt_emissao,
		a.cd_natureza_operacao,
		a.cd_estabelecimento,
		a.ie_situacao,
		a.cd_serie_nf,
		1 cd_tipo,
		a.vl_mercadoria,
		a.vl_total_nota,
		a.vl_descontos,
		a.cd_pessoa_fisica, 
		a.cd_cgc,
		a.nr_interno_conta,
		a.nr_seq_lote_prot 
	from 	nota_fiscal a,
		nota_fiscal_lote_nfe l,
		nfe_transmissao_nf b
	where	b.nr_seq_nota_fiscal	= a.nr_sequencia
	and 	b.nr_seq_transmissao	= l.nr_seq_transmissao
	and	b.nr_seq_transmissao	= nr_seq_transmissao_p;

	
procedure fis_obter_valores_trib_w(nr_seq_nota_p 		bigint,
				ie_tipo_tributo_p 	text,
				vl_tributo_p	 	out	bigint,
				vl_base_calculo_p	out	bigint,
				tx_tributo_p	 	out	bigint,
				vl_reducao_base_p	out	bigint,
				vl_reducao_p	 	out	bigint) is

/*
Utilizar esta procedure para recuperar os impostos, independente se e da nota trib ou item trib.
Utilizar os tipos de valores abaixos para realizar a migracao para a chamada desta procedure.

Onde possuir funcoes que possuem as devidas siglas abaixo passadas como parametro;
Tipos de Valores:
	V - Valor do Tributo
	B - Data base calculo
	X - Taxa de tributo
	D - Deducoes 
	C - Deducao da base de calculo

Realizar direto a chamada de ;
	vl_tributo_aux_w  = V
	vl_base_calculo_w  = B
	vl_tributo_aux_w  = X
	
*/
vl_tributo_w		double precision := 0;
vl_base_calculo_w	double precision := 0;
tx_tributo_w		double precision := 0;
vl_reducao_base_w	double precision := 0;
vl_reducao_w		double precision := 0;
ie_gerar_trib_nfse_w	varchar(1);
qt_servico_w		bigint;
qt_registros_w		bigint;

			
BEGIN

select	count(*)
into STRICT	qt_servico_w
from	operacao_nota o,
	nota_fiscal n
where	o.cd_operacao_nf = n.cd_operacao_nf
and	n.nr_sequencia = nr_seq_nota_p
and	o.ie_nf_eletronica = 'S'
and	o.ie_servico = 'S'  LIMIT 1;
/*
  Realiza as buscas tanto na tabela Nota_fiscal_trib, como na tabela Nota_Fiscal_Item_Trib
  # Valor do Tributo
  # Valor Base do Calculo
  # Taxa do Tributo
  # Valor Reducao Base
  # Valor Reducao
  Em  caso de registros nas duas consultas,
  Devera ser levado em consideracao que o cadastro  dos tributos da nota estao errados,
  Conforme orientacao para desenvolvimento da rotina.
*/
select 	sum(vl_tributo),
        sum(vl_base_calculo),
      	sum(tx_tributo),
        sum(vl_reducao_base),
        sum(vl_reducao),
        max(ie_gerar_trib_nfse)
into STRICT	vl_tributo_w,
	vl_base_calculo_w,
	tx_tributo_w,
	vl_reducao_base_w,
	vl_reducao_w,
	ie_gerar_trib_nfse_w
	from (	SELECT	coalesce(sum(x.vl_tributo),0) vl_tributo,
				coalesce(sum(x.vl_base_calculo),0) vl_base_calculo,
				coalesce(sum(x.tx_tributo),0) tx_tributo,
				coalesce(sum(x.vl_reducao_base),0) vl_reducao_base,
				coalesce(sum(x.vl_reducao),0) vl_reducao,
				max(ie_gerar_trib_nfse) ie_gerar_trib_nfse
			from	tributo t,
				nota_fiscal_trib x
			where	x.cd_tributo = t.cd_tributo
			and (t.ie_tipo_tributo = ie_tipo_tributo_p or coalesce(ie_tipo_tributo_p,'X') = 'X')
			and	x.nr_sequencia    = nr_seq_nota_p
			group by
				vl_tributo,
				vl_base_calculo,
				tx_tributo,
				vl_reducao_base
			
union all

			SELECT	coalesce(sum(x.vl_tributo),0) vl_tributo,
				coalesce(sum(x.vl_base_calculo),0) vl_base_calculo,
				coalesce(sum(x.tx_tributo),0) tx_tributo,
				coalesce(sum(x.vl_reducao_base),0) vl_reducao_base,
				/*nvl(sum(x.vl_reducao),0) vl_reducao, */
 0 vl_reducao,
				max(ie_gerar_trib_nfse) ie_gerar_trib_nfse
			from	tributo t,
				nota_fiscal_item_trib x
			where	x.cd_tributo = t.cd_tributo
			and (t.ie_tipo_tributo = ie_tipo_tributo_p or coalesce(ie_tipo_tributo_p,'X') = 'X')
			and	x.nr_sequencia    = nr_seq_nota_p
			group by
				vl_tributo,
				vl_base_calculo,
				tx_tributo,
				vl_reducao_base) alias30;

vl_tributo_p:= 0;	
vl_base_calculo_p:= 0;
tx_tributo_p:=	0;
vl_reducao_base_p:= 0;
vl_reducao_p:= 0;

		
if (ie_gerar_trib_nfse_w <> 'N') and (qt_servico_w > 0) then
	vl_tributo_p:=		coalesce(vl_tributo_w, vl_tributo_p);
	vl_base_calculo_p:=	coalesce(vl_base_calculo_w, vl_base_calculo_p);
	tx_tributo_p:=		coalesce(tx_tributo_w, tx_tributo_p);	
	vl_reducao_base_p:=	coalesce(vl_reducao_base_w, vl_reducao_base_p);
	vl_reducao_p:= 		coalesce(vl_reducao_w, vl_reducao_p);
end if;

end;

	
begin

--##Obtem a quantidade de RPS
select	count(*) qt_rps
into STRICT 	qt_rps_w
from	nfe_transmissao_nf c
where 	c.nr_seq_transmissao = nr_seq_transmissao_p;


for fis_nota_fiscal in c_nota_fiscal loop
	begin
	
	select (coalesce(max(a.nr_rps_sequencial),0)+1) nr_rps
	into STRICT  	nr_rps_w
	from    nota_fiscal a 
	where   a.cd_serie_nf = a.cd_serie_nf
	and     a.cd_cgc_emitente = a.cd_cgc_emitente;
		
	--## Emitente > Numero Inscricao Municipal
	nr_emitente_ins_municipal_w:= coalesce(obter_dados_pf_pj('', fis_nota_fiscal.cd_cgc_emitente, 'IM'), '99999');
	
	-- ##   Natureza Operacao
	cd_natureza_operacao_w:=	obter_dados_natureza_operacao(fis_nota_fiscal.cd_natureza_operacao, 'ISS');
	if (coalesce(cd_natureza_operacao_w::text, '') = '') then
		cd_natureza_operacao_w:=	nfse_obter_regra('TP',fis_nota_fiscal.cd_estabelecimento);
		if (coalesce(cd_natureza_operacao_w::text, '') = '') then
			cd_natureza_operacao_w:=	obter_dados_parametro_compras(fis_nota_fiscal.cd_estabelecimento,14);
			if (coalesce(cd_natureza_operacao_w::text, '') = '') then
				cd_natureza_operacao_w:= '3';
			end if;
		end if;
	end if;
	
	-- ## Regime Especial Tributacao
	ie_regime_esp_tributacao_w:= nfse_obter_regra('RET', fis_nota_fiscal.cd_estabelecimento);
	
	-- ##  Optante Simples Nacional
	if (coalesce(nfse_obter_regra('OSN', fis_nota_fiscal.cd_estabelecimento), 'N') = 'N') then
		ie_optante_simples_nac_w:=	'2';
	else
		ie_optante_simples_nac_w:= '1';
	end if;
	
	-- ##  Incentivador Cultural	
	if (coalesce(nfse_obter_regra('IC', fis_nota_fiscal.cd_estabelecimento), 'N') = 'N') then
		ie_incentivador_cultural_w:= '2';
	else
		ie_incentivador_cultural_w:= '1';
	end if;	
	
	--## IE_STATUS
	ie_status_w:= '2';
	if (fis_nota_fiscal.ie_situacao in ('1', '2', '8')) then
		ie_status_w:= '1';
	end if;
	
	-- ## Item Lista Servico
	begin
		ds_item_lista_servico_w := obter_dados_grupo_servico_item(obter_item_servico_proced(obter_procedimento_nfse(fis_nota_fiscal.nr_seq_nota,'P'),obter_procedimento_nfse(fis_nota_fiscal.nr_seq_nota,'O'),fis_nota_fiscal.cd_estabelecimento),'GR');
	exception
	when others then
		ds_item_lista_servico_w := null;
	end;
	
	
	
	-- ##Codigo CNAE
	cd_cnae_w:=	coalesce(obter_cnae_nfse(fis_nota_fiscal.nr_seq_nota), pls_obter_cd_cnae(obter_dados_pf_pj(null, fis_nota_fiscal.cd_cgc_emitente, 'CNAE')));  	
	
	--##  Codigo Tributacao do Municipio
	begin
		cd_tributacao_municipio_w:= obter_dados_grupo_servico_item(obter_item_servico_proced(obter_procedimento_nfse(fis_nota_fiscal.nr_seq_nota,'P'),obter_procedimento_nfse(fis_nota_fiscal.nr_seq_nota,'O'),fis_nota_fiscal.cd_estabelecimento),'CD');
	exception
	when others then
		cd_tributacao_municipio_w:= null;
	end;
	
	
	--##  Inscricao Estatual tomador
	begin
		nr_tomador_ins_estadual_w  := obter_dados_pf_pj(null,fis_nota_fiscal.cd_cgc,'IE');
	exception
	when others then
		nr_tomador_ins_estadual_w := null;
	end;
	
	
	
	--## Discriminacao
	ds_discriminacao_w:= obter_descricao_rps(fis_nota_fiscal.cd_estabelecimento, fis_nota_fiscal.nr_seq_nota, 'DS_SERVICOS');
	if (coalesce(ds_discriminacao_w::text, '') = '') then
		ds_discriminacao_w:= 'Servicos';
	end if;
	
	--## Exigibilidade Iss
	cd_exigibilidade_iss_w := null;
	
	if (obter_dados_parametro_compras(fis_nota_fiscal.cd_estabelecimento,14) = 0) then
		cd_exigibilidade_iss_w := 3;
	else	
		cd_exigibilidade_iss_w := obter_dados_parametro_compras(fis_nota_fiscal.cd_estabelecimento, 14);
	end if;
	
	--## Codigo Municipio
	cd_municipio_w:= nfe_obter_dados_pj(fis_nota_fiscal.cd_cgc_emitente, 'IBGE');
	
	--##Codigo Autorizacao
	cd_autorizacao_w:=  obter_cd_autorizacao_rps_nota(fis_nota_fiscal.nr_nota_fiscal, fis_nota_fiscal.cd_estabelecimento);
	
	--## Emitente - UF
	cd_uf_emitente_w:=  obter_dados_pf_pj('', fis_nota_fiscal.cd_cgc_emitente, 'UF');
	
	--## Emitente - Nome Municipio
	nm_municipio_emitente_w:= obter_dados_pf_pj('', fis_nota_fiscal.cd_cgc_emitente, 'CDMDV');
	
	-- ## DS_EMITENTE_RAZAO_SOCIAL
	ds_emitente_razao_social_w:= eliminar_caractere(elimina_caractere_especial(obter_nome_pf_pj(null, fis_nota_fiscal.cd_cgc_emitente)));
	
	cd_regime_recolhimento_w:= nfse_obter_regra('TP');
	

	begin
        cd_forma_recolhimento_w:=  nfse_obter_regra('TD');
	exception
	when others then
		cd_forma_recolhimento_w:= null;
	end;

	
	
	fis_obter_valores_trib_w(fis_nota_fiscal.nr_seq_nota, 'ISSST', vl_tributo_aux_w, vl_base_calculo_aux_w, tx_tributo_aux_w, vl_reducao_base_aux_w, vl_reducao_aux_w);
	if (vl_tributo_aux_w = 0) then
		begin
			/*
			@Parametros
			in
				1. 	 NR_SEQ_NOTA
				2 	IE_TIPO_TRIBUTO
			out
				1 	VL_TRIBUTO  		= V
				2 	VL_BASE_CALCULO		=  B
				3 	TX_TRIBUTO		= X
				4 	VL_REDUCAO_BASE		= D
				5  	VL_REDUCAO 		=  C
			*/
			fis_obter_valores_trib_w(fis_nota_fiscal.nr_seq_nota, 'ISS', vl_tributo_aux_w, vl_base_calculo_aux_w, tx_tributo_aux_w, vl_reducao_base_aux_w, vl_reducao_aux_w);
			vl_deducoes_w:=		vl_reducao_aux_w;
			
			/*NAO APAGAR*/

			ie_iss_retido_aux_w:=	obter_se_nf_ret_iss(fis_nota_fiscal.nr_seq_nota);
			ie_iss_retido_w:=	obter_se_nf_ret_iss(fis_nota_fiscal.nr_seq_nota);
			
			--## Retem ISS
			if (ie_iss_retido_w = 'S') then
				ie_iss_retido_w:=	'1';
			else
				ie_iss_retido_w:=	'2';
			end if;
			
			
			--## ValorIss
			vl_iss_w:=	null;
			if (ie_iss_retido_aux_w <> 'S') then
				vl_iss_w:= vl_tributo_aux_w;
			end if; 		
			
			--##ValorIssRetido
			vl_iss_retido_w:= '0';
			if (ie_iss_retido_aux_w = 'S') then
				vl_iss_retido_w:=	vl_tributo_aux_w;
				
			end if;
			
			--## Base Calculo 
			vl_base_calculo_w:=	vl_base_calculo_aux_w;
			if (coalesce(vl_base_calculo_w,0) = 0) then
				vl_base_calculo_w:= fis_nota_fiscal.vl_total_nota;
			end if;
			--## Valor Aliquota 
			vl_aliquota_w:=	tx_tributo_aux_w;
		end;
	else
		begin
			/*
			@Parametros
			in
				1. 	 NR_SEQ_NOTA
				2 	IE_TIPO_TRIBUTO
			out
				1 	VL_TRIBUTO  		= V
				2 	VL_BASE_CALCULO		=  B
				3 	TX_TRIBUTO		= X
				4 	VL_REDUCAO_BASE		= D
				5 - 	VL_REDUCAO 		=  C
			*/
			fis_obter_valores_trib_w(fis_nota_fiscal.nr_seq_nota, 'ISSST', vl_tributo_aux_w, vl_base_calculo_aux_w, tx_tributo_aux_w, vl_reducao_base_aux_w, vl_reducao_aux_w);
			vl_deducoes_w:= vl_reducao_aux_w;
			
			/*NAO APAGAR*/

			ie_iss_retido_aux_w:=	obter_se_nf_ret_iss(fis_nota_fiscal.nr_seq_nota);
			vl_iss_retido_w:=	obter_se_nf_retem_iss(fis_nota_fiscal.nr_seq_nota);
			
			--## Retem ISS
			ie_iss_retido_w:=	'2';
			if (vl_iss_retido_w = 0) then
				ie_iss_retido_w:=	obter_se_nf_ret_iss(fis_nota_fiscal.nr_seq_nota);
				if (ie_iss_retido_w = 'S') then
					ie_iss_retido_w:=	'1';
				else
					ie_iss_retido_w:=	'2';
				end if;
			end if;

			--## ValorIss
			vl_iss_w:=	null;
			if (ie_iss_retido_aux_w <> 'S') then
				vl_iss_w:= vl_tributo_aux_w;				
			end if;
			
			--##ValorIssRetido
			vl_iss_retido_w:= '0';
			if (ie_iss_retido_aux_w = 'S') then
				vl_iss_retido_w:=	vl_tributo_aux_w;
			end if;
			
			--## Base Calculo 
			vl_base_calculo_w:=	vl_base_calculo_aux_w;
			if (coalesce(vl_base_calculo_w,0) = 0) then
				vl_base_calculo_w:= fis_nota_fiscal.vl_total_nota;

			end if;
			
			--## Valor Aliquota 
			vl_aliquota_w:=	tx_tributo_aux_w;
			
		end;
	end if;
	/*
	@Parametros
	in
		1. 	 NR_SEQ_NOTA
		2 	IE_TIPO_TRIBUTO
	out
		1 	VL_TRIBUTO  		= V
		2 	VL_BASE_CALCULO		=  B
		3 	TX_TRIBUTO		= X
		4 	VL_REDUCAO_BASE		= D
		5 - 	VL_REDUCAO 		=  C
	*/

	--##  Valor PIS
	fis_obter_valores_trib_w(fis_nota_fiscal.nr_seq_nota, 'PIS', vl_tributo_aux_w, vl_base_calculo_aux_w, tx_tributo_aux_w, vl_reducao_base_aux_w, vl_reducao_aux_w);
	vl_pis_w:=	vl_tributo_aux_w;
  vl_aliquota_pis_w:=  tx_tributo_aux_w;
	
	--## Valor Cofins
	fis_obter_valores_trib_w(fis_nota_fiscal.nr_seq_nota, 'COFINS', vl_tributo_aux_w, vl_base_calculo_aux_w, tx_tributo_aux_w, vl_reducao_base_aux_w, vl_reducao_aux_w);
	vl_cofins_w:=	vl_tributo_aux_w;
  vl_aliquota_cofins_w:=  tx_tributo_aux_w;
	
	-- ## Valor INSS
	fis_obter_valores_trib_w(fis_nota_fiscal.nr_seq_nota, 'INSS', vl_tributo_aux_w, vl_base_calculo_aux_w, tx_tributo_aux_w, vl_reducao_base_aux_w, vl_reducao_aux_w);
	vl_inss_w:=	vl_tributo_aux_w;
  vl_aliquota_inss_w:=  tx_tributo_aux_w;
	
	-- ## Valor IR
	fis_obter_valores_trib_w(fis_nota_fiscal.nr_seq_nota, 'IR', vl_tributo_aux_w, vl_base_calculo_aux_w, tx_tributo_aux_w, vl_reducao_base_aux_w, vl_reducao_aux_w);
	vl_ir_w:=	vl_tributo_aux_w;
  vl_aliquota_ir_w:=  tx_tributo_aux_w;
	
	--## Valor CSLL
	fis_obter_valores_trib_w(fis_nota_fiscal.nr_seq_nota, 'CSLL', vl_tributo_aux_w, vl_base_calculo_aux_w, tx_tributo_aux_w, vl_reducao_base_aux_w, vl_reducao_aux_w);
	vl_csll_w:=	vl_tributo_aux_w;
  vl_aliquota_csll_w:=  tx_tributo_aux_w;
	
	--## Outras Retencoes
	fis_obter_valores_trib_w(fis_nota_fiscal.nr_seq_nota, 'O', vl_tributo_aux_w, vl_base_calculo_aux_w, tx_tributo_aux_w, vl_reducao_base_aux_w, vl_reducao_aux_w);
	vl_outras_retencoes_w:=	vl_tributo_aux_w;
	
	--## Valor ISSQN Substituicao
	fis_obter_valores_trib_w(fis_nota_fiscal.nr_seq_nota, 'ISSST', vl_tributo_aux_w, vl_base_calculo_aux_w, tx_tributo_aux_w, vl_reducao_base_aux_w, vl_reducao_aux_w);
	vl_item_issqn_substituicao_w:= 	vl_tributo_aux_w;
	
	--## Base Calculo Substituicao
	vl_base_calculo_subs_w:= vl_base_calculo_aux_w;
	
	--## Valor ISSQN
	fis_obter_valores_trib_w(fis_nota_fiscal.nr_seq_nota, 'ISS', vl_tributo_aux_w, vl_base_calculo_aux_w, tx_tributo_aux_w, vl_reducao_base_aux_w, vl_reducao_aux_w);
	vl_item_issqn_w:= vl_tributo_aux_w;
	
	--## Emitente > Numero Inscricao Municipal
	nr_emitente_ins_municipal_w:= coalesce(obter_dados_pf_pj('', fis_nota_fiscal.cd_cgc_emitente, 'IM'), '99999');
	
	--## Tomador > Razao Social
	ds_tomador_razao_social_w:=	eliminar_caractere(elimina_caractere_especial(obter_nome_pf_pj(fis_nota_fiscal.cd_pessoa_fisica, fis_nota_fiscal.cd_cgc)));
				
	--## Tomador > Numero Inscricao Municipal
	nr_tomador_ins_municipal_w:= lpad(tiss_eliminar_caractere(elimina_acentuacao(obter_dados_pf_pj(fis_nota_fiscal.cd_pessoa_fisica, fis_nota_fiscal.cd_cgc, 'IM'))), 11, '0');
		
	--## Tomador > CPF
	ds_tomador_cpf_w:= null;
	if (coalesce(fis_nota_fiscal.cd_pessoa_fisica,0) <> 0) then
		ds_tomador_cpf_w:= 	obter_dados_pf(fis_nota_fiscal.cd_pessoa_fisica, 'CPF');
		if (coalesce(ds_tomador_cpf_w::text, '') = '') then
			ds_tomador_cpf_w:=	obter_compl_pf(fis_nota_fiscal.cd_pessoa_fisica, 3, 'C');
		end if;
	end if;
	
	--## Tomador > Endereco
	ds_tomador_endereco_w:= tiss_eliminar_caractere(elimina_acentuacao(obter_dados_pf_pj(fis_nota_fiscal.cd_pessoa_fisica, fis_nota_fiscal.cd_cgc, 'EN')));
	
	-- ##Tomador > Numero Endereco
	nr_tomador_end_numero_w:= obter_dados_pf_pj(fis_nota_fiscal.cd_pessoa_fisica, fis_nota_fiscal.cd_cgc, 'NR');
	
	--## Tomador > Complemento do Endereco
	ds_tomador_end_complemento_w:= tiss_eliminar_caractere(elimina_acentuacao(obter_dados_pf_pj(fis_nota_fiscal.cd_pessoa_fisica, fis_nota_fiscal.cd_cgc, 'CO')));
	
	--## Tomador > Bairro
	ds_tomador_end_bairro_w:= tiss_eliminar_caractere(elimina_acentuacao(obter_dados_pf_pj(fis_nota_fiscal.cd_pessoa_fisica, fis_nota_fiscal.cd_cgc, 'B')));
	
	sg_estado_w:= obter_dados_pf_pj(fis_nota_fiscal.cd_pessoa_fisica, fis_nota_fiscal.cd_cgc, 'UF');
	
	--## Tomador  > Codigo Municipio
	if (sg_estado_w = 'IN') then
		cd_tomador_end_municipio_w:=	'99999';
	else	
		
		if (coalesce(fis_nota_fiscal.cd_cgc,'XX') = 'XX') then
			cd_tomador_end_municipio_w:=	obter_compl_pf(fis_nota_fiscal.cd_pessoa_fisica, 1, 'CDMDV');
		else
                	cd_tomador_end_municipio_w:=	nfe_obter_dados_pj(fis_nota_fiscal.cd_cgc, 'IBGE');	
		end if;
	end if;
	cd_tomador_end_municipio_w:= lpad(cd_tomador_end_municipio_w, 7, '0');
	
	
	--## Tomador >  UF
	ds_tomador_end_uf_w:=	'EX';
	if (sg_estado_w <> 'IN') then
		ds_tomador_end_uf_w:=	obter_dados_pf_pj(fis_nota_fiscal.cd_pessoa_fisica, fis_nota_fiscal.cd_cgc, 'UF');
	end if;
	
	--## Tomador > Cep
	cd_tomador_end_cep_w:=	'99999999';
	if (sg_estado_w <> 'IN') then
		begin
			cd_tomador_end_cep_w:=	lpad(nfse_obter_dados_pf_pj(fis_nota_fiscal.cd_pessoa_fisica, fis_nota_fiscal.cd_cgc,  'CEP'), 8, 0);
		exception
		when others then
			cd_tomador_end_cep_w:=	'99999999';
		end;
		
	end if;
	cd_tomador_end_cep_w:=	somente_numero(cd_tomador_end_cep_w);
	
	--## Tomador > E-mail
	if (coalesce(fis_nota_fiscal.cd_pessoa_fisica::text, '') = '') then
		ds_tomador_contato_email_w:= obter_dados_pf_pj_estab(fis_nota_fiscal.cd_estabelecimento, '', fis_nota_fiscal.cd_cgc, 'M');
	else
		ds_tomador_contato_email_w:= obter_dados_pf_pj(fis_nota_fiscal.cd_pessoa_fisica, ',', 'M');
	end if;
	
	
	--## Tomador > Nome Municipio
	nm_municipio_tomador_w:=obter_compl_pf(fis_nota_fiscal.cd_pessoa_fisica, 1, 'CI');
	if (fis_nota_fiscal.cd_cgc IS NOT NULL AND fis_nota_fiscal.cd_cgc::text <> '') then
	   nm_municipio_tomador_w:= nfe_obter_dados_pj(fis_nota_fiscal.cd_cgc, 'MU');
	end if;
	
	--## Dados Intermediario 

	
	--## Intermediario > ie intermediario
	ie_intermediario_w := fis_obter_se_intermediario(fis_nota_fiscal.nr_seq_nota);
	
	--## Intermediario > Retencao ISS intermediario
	ie_iss_ret_intermediario_w := fis_obter_dados_intermediario(fis_nota_fiscal.nr_seq_nota,'S','RI');
	
	--## Intermediario > Tipo ambulatorio conta intermediario
	tp_ambulatorio_conta_w := fis_obter_ambulatorio_conta(fis_nota_fiscal.nr_seq_lote_prot, fis_nota_fiscal.nr_interno_conta, fis_nota_fiscal.nr_seq_nota);
	
	--## Intermediario > ie brasileiro
	ie_brasileiro_w := nfse_obter_se_brasileiro(fis_nota_fiscal.cd_pessoa_fisica, fis_nota_fiscal.cd_cgc);
	
	--## Intermediario > inscricao municipal conta
	nr_ins_munc_conta_w  := obter_dados_tomador_conta(fis_nota_fiscal.nr_seq_nota,'C','IM');
	
	--## Intermediario > inscricao estadual conta
	nr_ins_est_conta_w := obter_dados_tomador_conta(fis_nota_fiscal.nr_seq_nota,'C','IE');
	
	--## Intermediario > razao social conta
	ds_razao_social_conta_w := obter_dados_tomador_conta(fis_nota_fiscal.nr_seq_nota,'C','RS');
	
	--## Intermediario > tipo logradouro conta
	tp_logradouro_conta_w := obter_dados_tomador_conta(fis_nota_fiscal.nr_seq_nota,'C','TL');						
	
	--## Intermediario > logradouro conta
	ds_logradouro_conta_w := obter_dados_tomador_conta(fis_nota_fiscal.nr_seq_nota,'C','L'); 							
	
	--## Intermediario > numero endereco conta
	nr_endereco_conta_w := obter_dados_tomador_conta(fis_nota_fiscal.nr_seq_nota,'C','NE');		

	--## Intermediario > complemento endereco conta
	ds_compl_endereco_conta_w := obter_dados_tomador_conta(fis_nota_fiscal.nr_seq_nota,'C','CE');

	--## Intermediario > bairro conta
	ds_bairro_conta_w :=  obter_dados_tomador_conta(fis_nota_fiscal.nr_seq_nota,'C','B');
	
	--## Intermediario > cidade conta							
	ds_cidade_conta_w :=  obter_dados_tomador_conta(fis_nota_fiscal.nr_seq_nota,'C','C');

	--## Intermediario > estado conta	
	cd_uf_conta_w := obter_dados_tomador_conta(fis_nota_fiscal.nr_seq_nota,'C','UF');

	--## Intermediario > CEP conta		
	nr_cep_conta_w := obter_dados_tomador_conta(fis_nota_fiscal.nr_seq_nota,'C','CEP');

    --## Intermediario > email conta		
	ds_email_conta_w :=  obter_dados_tomador_conta(fis_nota_fiscal.nr_seq_nota,'C','ET');	

    --## Intermediario > email intermediario	
	ds_email_intermdiario_w :=  fis_obter_dados_intermediario(fis_nota_fiscal.nr_seq_nota,'S','EI'); 								
	 						
	--## Intermediario > CNPJ - CPF intermediario						
	cd_cnpj_cpf_intermediario_w := fis_obter_dados_intermediario(fis_nota_fiscal.nr_seq_nota,'S','CI'); 		

	--## Intermediario > CPF conta
	cd_cpf_conta_w := obter_dados_tomador_conta(fis_nota_fiscal.nr_seq_nota,'C','CPF'); 		
	
	--## Intermediario > Inscricao Municipal Intermediario
	nr_ins_munc_intermediario_w :=  fis_obter_dados_intermediario(fis_nota_fiscal.nr_seq_nota,'S','II');
	
							

	--##Tabela Nota Fiscal Intermediaria

	--##Insercao dos valores.
	insert into fis_nf_w(	nr_sequencia,
					nr_nota_fiscal,
					nr_seq_nota,
					cd_serie,
					ds_tipo,
					nr_lote,
					qt_rps,
					nr_rps,
					cd_emitente_cnpj,
					nr_emitente_ins_municipal,
					ds_tomador_razao_social,
					ds_tomador_cnpj,
					nr_tomador_ins_municipal,
					ds_tomador_cpf,
					ds_tomador_endereco,
					nr_tomador_end_numero,
					ds_tomador_end_complemento,
					ds_tomador_end_bairro,
					cd_tomador_end_municipio,
					ds_tomador_end_uf,
					cd_tomador_end_cep,
					ds_tomador_contato_telefone,
					ds_tomador_contato_email,
					dt_informacao,
					dt_emissao,
					dt_competencia,
					vl_total_nota,
					cd_exigibilidade_iss,
					ie_regime_especial_tributacao,
					ie_optante_simples_nac,
					ie_incentivador_cultural,
					ie_status,
					ds_outras_informacoes,
					cd_natureza_operacao,
					ds_item_lista_servico,
					cd_cnae,
					cd_tributacao_municipio,
					ds_discriminacao,
					cd_municipio,
					vl_desconto_incondicionado, 	
					vl_desconto_condicionado,
					dt_atualizacao,
					nm_usuario,
					--cd_municipio_incidencia,
					nr_seq_transmissao,
					cd_autorizacao,
					nm_municipio_emitente,
					cd_uf_emitente,
					cd_regime_recolhimento,
					cd_forma_recolhimento,
					nm_municipio_tomador,
					ds_emitente_razao_social,
					ie_intermediario,
					ie_iss_ret_intermediario,  
					tp_ambulatorio_conta,      
					ie_brasileiro,             
					nr_ins_munc_conta,         
					nr_ins_est_conta,          
					ds_razao_social_conta,     
					tp_logradouro_conta,       
					ds_logradouro_conta,       
					nr_endereco_conta,         
					ds_compl_endereco_conta,   
					ds_bairro_conta,           
					ds_cidade_conta,           
					cd_cpf_conta,              
					cd_uf_conta,               
					nr_cep_conta,              
					ds_email_conta,            
					ds_email_intermdiario,     
					cd_cnpj_cpf_intermediario,
					nr_tomador_ins_estadual,
					nr_ins_munc_intermediario)
			values (	nextval('fis_nf_w_seq'),
					fis_nota_fiscal.nr_nota_fiscal,
					fis_nota_fiscal.nr_seq_nota,
					fis_nota_fiscal.cd_serie_nf,
					fis_nota_fiscal.cd_tipo,
					fis_nota_fiscal.nr_seq_lote_nfe,
					qt_rps_w,
					nr_rps_w,
					fis_nota_fiscal.cd_cgc_emitente,
					nr_emitente_ins_municipal_w,
					ds_tomador_razao_social_w,
					fis_nota_fiscal.cd_cgc,
					nr_tomador_ins_municipal_w,
					ds_tomador_cpf_w,
					ds_tomador_endereco_w,
					nr_tomador_end_numero_w,
					ds_tomador_end_complemento_w,
					ds_tomador_end_bairro_w,
					cd_tomador_end_municipio_w,
					ds_tomador_end_uf_w,
					cd_tomador_end_cep_w,
					ds_tomador_contato_telefone_w,
					ds_tomador_contato_email_w,
					fis_nota_fiscal.dt_emissao,
					fis_nota_fiscal.dt_emissao,
					fis_nota_fiscal.dt_emissao,
					fis_nota_fiscal.vl_total_nota,
					cd_exigibilidade_iss_w,
					ie_regime_esp_tributacao_w,
					ie_optante_simples_nac_w,
					ie_incentivador_cultural_w,
					ie_status_w,
					ds_outras_informacoes_w,
					cd_natureza_operacao_w,
					ds_item_lista_servico_w,
					cd_cnae_w,
					cd_tributacao_municipio_w,
					ds_discriminacao_w,
					cd_municipio_w,
					fis_nota_fiscal.vl_descontos, 	
					fis_nota_fiscal.vl_descontos,
					--fis_nota_fiscal.municipio_incidencia,
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_transmissao_p,
					cd_autorizacao_w,
					nm_municipio_emitente_w,
					cd_uf_emitente_w,
					cd_regime_recolhimento_w,
					cd_forma_recolhimento_w,
					nm_municipio_tomador_w,
					ds_emitente_razao_social_w,
					ie_intermediario_w, 	  		
					ie_iss_ret_intermediario_w, 	
					tp_ambulatorio_conta_w, 	  	
					ie_brasileiro_w,           	
					nr_ins_munc_conta_w,       	
					nr_ins_est_conta_w,        	
					ds_razao_social_conta_w,   	
					tp_logradouro_conta_w,     	
					ds_logradouro_conta_w,     	
					nr_endereco_conta_w,       	
					ds_compl_endereco_conta_w,   
					ds_bairro_conta_w,         	
					ds_cidade_conta_w,         	
					cd_cpf_conta_w,            	
					cd_uf_conta_w,             	
					nr_cep_conta_w,            	
					ds_email_conta_w,          	
					ds_email_intermdiario_w,   	
					cd_cnpj_cpf_intermediario_w,
					nr_tomador_ins_estadual_w,
					nr_ins_munc_intermediario_w);
	
	--##Insercao tabela intermediaria  dos tributos dos valroes dos tributos da nota.##
	insert into fis_nf_trib_w(	nr_sequencia,
					nr_seq_transmissao,
					nr_seq_nota,
					vl_servico,				
					vl_deducoes, 			
					vl_pis, 			
					vl_cofins,			
					vl_inss,
					vl_ir,		
					vl_csll, 			
					ie_iss_retido,
					vl_iss_retido, 		
					vl_iss, 			
					vl_outras_retencoes, 		
					vl_base_calculo, 		
					vl_aliquota, 
					vl_aliquota_pis, 
					vl_aliquota_cofins, 
					vl_aliquota_inss, 
          vl_aliquota_ir,
          vl_aliquota_csll,
					vl_liquido_nfse,
					vl_total_nota,		
					vl_issqn,
					vl_issqn_substituicao,
					vl_base_calculo_subs,
					dt_atualizacao,
					nm_usuario) 
			values (	nextval('fis_nf_trib_w_seq'),
					nr_seq_transmissao_p,
					fis_nota_fiscal.nr_seq_nota,
					fis_nota_fiscal.vl_mercadoria,				
					vl_deducoes_w, 			
					vl_pis_w, 			
					vl_cofins_w,			
					vl_inss_w,
					vl_ir_w,		
					vl_csll_w, 			
					ie_iss_retido_w,
					vl_iss_retido_w, 		
					vl_iss_w, 			
					vl_outras_retencoes_w, 		
					vl_base_calculo_w, 		
					vl_aliquota_w, 	
          vl_aliquota_pis_w,
          vl_aliquota_cofins_w,
          vl_aliquota_inss_w,
          vl_aliquota_ir_w,
          vl_aliquota_csll_w,
					fis_nota_fiscal.vl_total_nota,	--LiquidoNfse
					vl_total_nota_aux_w,	
					vl_item_issqn_w,
					vl_item_issqn_substituicao_w,
					vl_base_calculo_subs_w,
					clock_timestamp(),
					nm_usuario_p);		
	end;
end loop;

CALL fis_gerar_nf_venc_w(nr_seq_transmissao_p, nm_usuario_p);

commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE fis_gerar_nf_w ( nr_seq_transmissao_p bigint, nm_usuario_p text) FROM PUBLIC;

