-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_imp_rec_glosa_proc ( nr_seq_conta_imp_p bigint, vl_recursado_p bigint, cd_tipo_tabela_p text, cd_procedimento_p text, ds_procedimento_p text, dt_realizacao_p timestamp, nm_usuario_p text, dt_fim_p timestamp, cd_dente_p text, cd_regiao_boca_p text, cd_face_dente_p text, qt_procedimento_p bigint, cd_grau_partic_p text, ds_justificativa_prest_p text, cd_glosa_p text, nr_seq_conta_proc_imp_p INOUT bigint, nr_seq_conta_mat_imp_p INOUT bigint, nr_seq_item_tiss_p pls_rec_glosa_mat_imp.nr_seq_item_tiss%type default null) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Importar os procedimentos apresentados no Recurso de Glosa conforme padrao TISS
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[  ]  Objetos do dicionario [ ] Tasy (Delphi/Java) [  x] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao:Performance.
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
nr_seq_conta_proc_w		bigint;
nr_seq_conta_proc_imp_w		bigint;
nr_seq_conta_original_w		bigint;
nr_seq_conta_w			bigint;
qt_regra_w			integer;
qt_recurso_w			integer := 0;
nr_seq_grau_copartic_w		pls_grau_participacao.nr_sequencia%type;
dt_realizacao_w			pls_rec_glosa_proc_imp.dt_realizacao%type;
nr_seq_conta_mat_imp_w		pls_rec_glosa_mat_imp.nr_sequencia%type;
nr_seq_analise_w		pls_analise_conta.nr_sequencia%type;
nr_seq_prestador_exec_w		pls_rec_glosa_prot_cta_imp.nr_seq_prestador%type;
nr_seq_conta_imp_w		pls_rec_glosa_conta_imp.nr_sequencia%type;
nr_seq_protocolo_cta_w		pls_rec_glosa_prot_cta_imp.nr_sequencia%type;
cd_prestador_prot_w		pls_prestador.cd_prestador%type;
nr_seq_conta_ww			pls_conta.nr_sequencia%type;
nr_seq_conta_rec_w		pls_rec_glosa_conta_imp.nr_sequencia%type;
nr_seq_conta_imp_ww		pls_rec_glosa_conta_imp.nr_sequencia%type;
cd_guia_w			pls_conta.cd_guia%type;
qt_rec_glosa_w			pls_parametros_rec_glosa.qt_recurso_conta%type;
ds_observacao_w			varchar(2000);
ds_lotes_w					varchar(1500);
ie_cooperado_w				varchar(1) := 'N';
ie_participante_cooperado_w	pls_parametros_rec_glosa.ie_participante_cooperado%type;
dados_tipo_conv_tiss_w		pls_cta_valorizacao_pck.dados_tipo_conv_tiss;
cd_estabelecimento_w	estabelecimento.cd_estabelecimento%type;
cd_tipo_tabela_w		pls_rec_glosa_proc_imp.cd_tipo_tabela%type;
cd_versao_tiss_w	pls_versao_tiss.cd_versao_tiss%type;
nr_seq_protocolo_w	pls_rec_glosa_prot_cta_imp.nr_seq_protocolo%type;

C01 CURSOR(nr_seq_conta_proc_pc	pls_conta_proc.nr_sequencia%type) FOR
	SELECT	c.nr_seq_lote,
		'Integrado' ds_situacao
	from	pls_rec_glosa_proc a,
		pls_rec_glosa_conta b,
		pls_rec_glosa_protocolo c
	where	c.nr_sequencia = b.nr_seq_protocolo
	and	b.nr_sequencia = a.nr_seq_conta_rec
	and	a.nr_seq_conta_proc = nr_seq_conta_proc_pc
	
union all

	SELECT	d.nr_seq_lote,
		'Importado' ds_situacao
	from	pls_rec_glosa_proc_imp a,
		pls_rec_glosa_conta_imp b,
		pls_rec_glosa_prot_cta_imp c,
		pls_rec_glosa_protocolo d
	where	d.nr_sequencia = c.nr_seq_protocolo
	and	c.nr_sequencia = b.nr_seq_protocolo_cta
	and	b.nr_sequencia = a.nr_seq_conta_imp
	and	a.nr_seq_conta_proc = nr_seq_conta_proc_pc
	and	not exists (	select	1
				from	pls_rec_glosa_proc x
				where	x.nr_seq_conta_proc_imp = a.nr_sequencia);

BEGIN

if (length(ds_justificativa_prest_p) > 150) then

	cd_versao_tiss_w := pls_obter_versao_tiss;
	if (cd_versao_tiss_w >= '4.00.01') then
		if (length(ds_justificativa_prest_p) > 500) then

		select	max(y.nr_seq_protocolo)
		into STRICT	nr_seq_protocolo_w		
		from	pls_rec_glosa_conta_imp x,
				pls_rec_glosa_prot_cta_imp y
		where	x.nr_sequencia	= nr_seq_conta_imp_p
		and x.nr_seq_protocolo_cta = y.nr_sequencia;

			update	pls_rec_glosa_protocolo
			set	ie_situacao	= 'RE'
			where	nr_sequencia	= nr_seq_protocolo_w;
			
			commit;
			CALL wheb_mensagem_pck.exibir_mensagem_abort(357932);
		end if;
	else
		
		update	pls_rec_glosa_protocolo
		set	ie_situacao	= 'RE'
		where	nr_sequencia	= nr_seq_protocolo_w;
			
		commit;
		CALL wheb_mensagem_pck.exibir_mensagem_abort(357932);
		
	end if;

end if;

select	max(coalesce(qt_recurso_conta, 0))
into STRICT	qt_rec_glosa_w
from	pls_parametros_rec_glosa;

select	max(b.nr_seq_conta),
	max(a.nr_seq_prestador),
	max(a.nr_sequencia),
	max(b.cd_guia)
into STRICT	nr_seq_conta_w,
	nr_seq_prestador_exec_w,
	nr_seq_protocolo_cta_w,
	cd_guia_w
from	pls_rec_glosa_conta_imp		b,
	pls_rec_glosa_prot_cta_imp	a
where	b.nr_seq_protocolo_cta		= a.nr_sequencia
and	b.nr_sequencia			= nr_seq_conta_imp_p;

select 	coalesce(max(ie_participante_cooperado),'N')
into STRICT	ie_participante_cooperado_w
from 	pls_parametros_rec_glosa;

if (ie_participante_cooperado_w = 'S') then

		select 	coalesce(max(pls_obter_se_cooperado(cd_pessoa_fisica, cd_cgc)),'N')
		into STRICT	ie_cooperado_w
		from 	pls_prestador
		where 	nr_sequencia = nr_seq_prestador_exec_w;

end if;

select	max(nr_sequencia)
into STRICT	nr_seq_grau_copartic_w	
from	pls_grau_participacao
where 	cd_tiss = cd_grau_partic_p;

select	count(1)
into STRICT	qt_regra_w
from	pls_rec_regra_campo_esp
where	clock_timestamp() between dt_inicio_vigencia_ref and dt_fim_vigencia_ref;

if (qt_regra_w > 0) then
	cd_prestador_prot_w := pls_obter_cod_prestador(nr_seq_prestador_exec_w, null);
	
	nr_seq_conta_ww := pls_gerar_campo_esp_rec(	cd_procedimento_p, null, ds_procedimento_p, null, null, cd_prestador_prot_w, cd_guia_w, vl_recursado_p, dt_realizacao_p, nr_seq_conta_ww);
	
	if (nr_seq_conta_ww IS NOT NULL AND nr_seq_conta_ww::text <> '') then
		if (nr_seq_conta_ww <> coalesce(nr_seq_conta_w,0)) then
			select	max(nr_sequencia)
			into STRICT	nr_seq_conta_rec_w
			from	pls_rec_glosa_conta_imp
			where	nr_seq_protocolo_cta = nr_seq_protocolo_cta_w
			and	nr_seq_conta = nr_seq_conta_ww;
			
			if (coalesce(nr_seq_conta_rec_w::text, '') = '') then
				select	nextval('pls_rec_glosa_conta_imp_seq')
				into STRICT	nr_seq_conta_imp_ww
				;
			
				insert into pls_rec_glosa_conta_imp(	nr_sequencia,dt_atualizacao_nrec, nm_usuario, dt_atualizacao, nm_usuario_nrec,
					nr_seq_protocolo_cta, nr_seq_conta, cd_ans, cd_guia,
					cd_guia_prestador, nm_operadora, ie_recurso_glosa,cd_prestador_executor, 
					nm_prestador_executor, nr_lote,nr_protocolo, dt_realizacao, 
					dt_fim_internacao,ds_senha, cd_guia_recurso, vl_total_recursado,
					dt_recurso, nm_beneficiario )		
				(SELECT	nr_seq_conta_imp_ww , clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p,
					nr_seq_protocolo_cta, nr_seq_conta_ww, cd_ans, cd_guia,
					cd_guia_prestador, nm_operadora, ie_recurso_glosa,cd_prestador_executor, 
					nm_prestador_executor, nr_lote,nr_protocolo, dt_realizacao, 
					dt_fim_internacao,ds_senha, cd_guia_recurso, vl_total_recursado,
					dt_recurso, nm_beneficiario
				from	pls_rec_glosa_conta_imp
				where	nr_sequencia	= nr_seq_conta_imp_p);
			else
				nr_seq_conta_imp_ww := nr_seq_conta_rec_w;
			end if;
		end if;
		
		nr_seq_conta_w := nr_seq_conta_ww;
	end if;
end if;

if (nr_seq_conta_imp_ww IS NOT NULL AND nr_seq_conta_imp_ww::text <> '') then
	nr_seq_conta_imp_w := nr_seq_conta_imp_ww;
else
	nr_seq_conta_imp_w := nr_seq_conta_imp_p;
end if;

nr_seq_conta_original_w	:= nr_seq_conta_w;

select	max(nr_seq_analise)
into STRICT	nr_seq_analise_w
from	pls_conta
where	nr_sequencia	= nr_seq_conta_w;

dt_realizacao_w	:= trunc(dt_realizacao_p,'dd');

if (ie_participante_cooperado_w = 'S' and ie_cooperado_w = 'S') then
	
	if (nr_seq_conta_w IS NOT NULL AND nr_seq_conta_w::text <> '') then
		
		if (nr_seq_grau_copartic_w IS NOT NULL AND nr_seq_grau_copartic_w::text <> '') then
		
			--Busca pelo codigo do procedimento, pela data, pelo valor recursado e se o item tiver saldo
			select	max(a.nr_sequencia)
			into STRICT	nr_seq_conta_proc_w
			from	pls_conta_proc a,
					pls_conta b
			where	a.nr_seq_conta 			= nr_seq_conta_w
			and		a.nr_seq_conta = b.nr_sequencia
			and		((b.nr_seq_prestador_exec = nr_seq_prestador_exec_w) or (exists (	SELECT 	1
																				from 	pls_proc_participante d 
																				where 	a.nr_sequencia = d.nr_seq_conta_proc 
																				and 	d.nr_seq_prestador = nr_seq_prestador_exec_w)))
			and	a.cd_procedimento 		= cd_procedimento_p
			and	a.dt_procedimento_referencia_sh	= dt_realizacao_w
			and	a.vl_glosa			= vl_recursado_p
			and	a.ie_status not in ('D','M')
			and	pls_obter_se_proc_recursado(a.nr_sequencia, vl_recursado_p) = 'S'
			and	exists (	select	1
					from	pls_proc_participante x
					where	x.nr_seq_conta_proc = a.nr_sequencia
					and	x.nr_seq_grau_partic = nr_seq_grau_copartic_w
					
union all

					SELECT	1
					from	pls_conta y
					where	y.nr_sequencia = a.nr_seq_conta
					and	y.nr_seq_grau_partic = nr_seq_grau_copartic_w);

			
			-- Busca pelo codigo do procedimento, pela data e pelo valor recursado
			if (coalesce(nr_seq_conta_proc_w::text, '') = '') then
				select	max(a.nr_sequencia)
				into STRICT	nr_seq_conta_proc_w
				from	pls_conta_proc a,
						pls_conta b
				where	a.nr_seq_conta 		= nr_seq_conta_w
				and		a.nr_seq_conta 		= b.nr_sequencia
				and		((b.nr_seq_prestador_exec = nr_seq_prestador_exec_w) or (exists (	SELECT 	1
																				from 	pls_proc_participante d 
																				where 	a.nr_sequencia = d.nr_seq_conta_proc 
																				and 	d.nr_seq_prestador = nr_seq_prestador_exec_w)))
				and		a.cd_procedimento 	= cd_procedimento_p
				and		a.dt_procedimento_referencia_sh	= dt_realizacao_w
				and		a.vl_glosa			= vl_recursado_p
				and		a.ie_status not in ('D','M')
				and	exists (	select	1
						from	pls_proc_participante x
						where	x.nr_seq_conta_proc = a.nr_sequencia
						and	x.nr_seq_grau_partic = nr_seq_grau_copartic_w
						
union all

						SELECT	1
						from	pls_conta y
						where	y.nr_sequencia = a.nr_seq_conta
						and	y.nr_seq_grau_partic = nr_seq_grau_copartic_w);
				
				-- Busca pelo codigo do procedimento, pela data e pelo valor recursado que seja menor que o valor de glosa
				if (coalesce(nr_seq_conta_proc_w::text, '') = '') then			
					select	max(a.nr_sequencia)
					into STRICT	nr_seq_conta_proc_w
					from	pls_conta_proc a,
							pls_conta b
					where	a.nr_seq_conta 	= nr_seq_conta_w
					and		a.nr_seq_conta 	= b.nr_sequencia
					and		((b.nr_seq_prestador_exec = nr_seq_prestador_exec_w) or (exists (	SELECT 	1
																								from 	pls_proc_participante d 
																								where 	a.nr_sequencia = d.nr_seq_conta_proc 
																								and 	d.nr_seq_prestador = nr_seq_prestador_exec_w)))
					and	a.cd_procedimento 		= cd_procedimento_p
					and	a.dt_procedimento_referencia_sh	= dt_realizacao_w
					and	a.vl_glosa			> vl_recursado_p
					and	a.ie_status not in ('D','M')
					and	exists (	select	1
							from	pls_proc_participante x
							where	x.nr_seq_conta_proc = a.nr_sequencia
							and	x.nr_seq_grau_partic = nr_seq_grau_copartic_w
							
union all

							SELECT	1
							from	pls_conta y
							where	y.nr_sequencia = a.nr_seq_conta
							and	y.nr_seq_grau_partic = nr_seq_grau_copartic_w);
				
					-- Busca pelo codigo do procedimento, pela data e se o item tiver saldo
					if (coalesce(nr_seq_conta_proc_w::text, '') = '') then
						select	max(a.nr_sequencia)
						into STRICT	nr_seq_conta_proc_w
						from	pls_conta_proc a,
								pls_conta b
						where	a.nr_seq_conta 			= nr_seq_conta_w
						and		a.nr_seq_conta = b.nr_sequencia
						and		((b.nr_seq_prestador_exec = nr_seq_prestador_exec_w) or (exists (	SELECT 	1
																								from 	pls_proc_participante d 
																								where 	a.nr_sequencia = d.nr_seq_conta_proc 
																								and 	d.nr_seq_prestador = nr_seq_prestador_exec_w)))
						and	a.cd_procedimento 		= cd_procedimento_p
						and	a.dt_procedimento_referencia_sh	= dt_realizacao_w
						and	a.vl_glosa			> 0
						and	a.ie_status not in ('D','M')
						and	pls_obter_se_proc_recursado(a.nr_sequencia, vl_recursado_p) = 'S'
						and	exists (	select	1
								from	pls_proc_participante x
								where	x.nr_seq_conta_proc = a.nr_sequencia
								and	x.nr_seq_grau_partic = nr_seq_grau_copartic_w
								
union all

								SELECT	1
								from	pls_conta y
								where	y.nr_sequencia = a.nr_seq_conta
								and	y.nr_seq_grau_partic = nr_seq_grau_copartic_w);
						
						-- Busca pelo codigo do procedimento e pela data
						if (coalesce(nr_seq_conta_proc_w::text, '') = '') then
							select	max(a.nr_sequencia)
							into STRICT	nr_seq_conta_proc_w
							from	pls_conta_proc a,
									pls_conta b
							where	a.nr_seq_conta 			= nr_seq_conta_w
							and		a.nr_seq_conta		= b.nr_sequencia
							and		((b.nr_seq_prestador_exec = nr_seq_prestador_exec_w) or (exists (	SELECT 	1
																								from 	pls_proc_participante d 
																								where 	a.nr_sequencia = d.nr_seq_conta_proc 
																								and 	d.nr_seq_prestador = nr_seq_prestador_exec_w)))
							and	a.cd_procedimento 		= cd_procedimento_p
							and	a.dt_procedimento_referencia_sh	= dt_realizacao_w
							and	a.vl_glosa			> 0
							and	a.ie_status not in ('D','M')
							and	exists (	select	1
									from	pls_proc_participante x
									where	x.nr_seq_conta_proc = a.nr_sequencia
									and	x.nr_seq_grau_partic = nr_seq_grau_copartic_w
									
union all

									SELECT	1
									from	pls_conta y
									where	y.nr_sequencia = a.nr_seq_conta
									and	y.nr_seq_grau_partic = nr_seq_grau_copartic_w);
							
							-- Busca pelo codigo importado do procedimento, pela data, pelo valor recursado e se o item tiver saldo
							if (coalesce(nr_seq_conta_proc_w::text, '') = '') then
								select	max(a.nr_sequencia)
								into STRICT	nr_seq_conta_proc_w
								from	pls_conta_proc a,
										pls_conta b
								where	a.nr_seq_conta 			= nr_seq_conta_w
								and		a.nr_seq_conta = b.nr_sequencia
								and		((b.nr_seq_prestador_exec = nr_seq_prestador_exec_w) or (exists (	SELECT 	1
																								from 	pls_proc_participante d 
																								where 	a.nr_sequencia = d.nr_seq_conta_proc 
																								and 	d.nr_seq_prestador = nr_seq_prestador_exec_w)))
								and	a.cd_procedimento_imp 		= cd_procedimento_p
								and	a.dt_procedimento_referencia_sh	= dt_realizacao_w
								and	a.vl_glosa			= vl_recursado_p
								and	a.ie_status not in ('D','M')
								and	pls_obter_se_proc_recursado(a.nr_sequencia, vl_recursado_p) = 'S'
								and	exists (	select	1
										from	pls_proc_participante x
										where	x.nr_seq_conta_proc = a.nr_sequencia
										and	x.nr_seq_grau_partic = nr_seq_grau_copartic_w
										
union all

										SELECT	1
										from	pls_conta y
										where	y.nr_sequencia = a.nr_seq_conta
										and	y.nr_seq_grau_partic = nr_seq_grau_copartic_w);
								
								-- Busca pelo codigo importado do procedimento, pela data e pelo valor recursado
								if (coalesce(nr_seq_conta_proc_w::text, '') = '') then
									select	max(a.nr_sequencia)
									into STRICT	nr_seq_conta_proc_w
									from	pls_conta_proc a,
											pls_conta b
									where	a.nr_seq_conta 			= nr_seq_conta_w
									and		a.nr_seq_conta = b.nr_sequencia
									and		((b.nr_seq_prestador_exec = nr_seq_prestador_exec_w) or (exists (	SELECT 	1
																								from 	pls_proc_participante d 
																								where 	a.nr_sequencia = d.nr_seq_conta_proc 
																								and 	d.nr_seq_prestador = nr_seq_prestador_exec_w)))
									and	a.cd_procedimento_imp 		= cd_procedimento_p
									and	a.dt_procedimento_referencia_sh	= dt_realizacao_w
									and	a.vl_glosa			= vl_recursado_p
									and	a.ie_status not in ('D','M')
									and	exists (	select	1
											from	pls_proc_participante x
											where	x.nr_seq_conta_proc = a.nr_sequencia
											and	x.nr_seq_grau_partic = nr_seq_grau_copartic_w
											
union all

											SELECT	1
											from	pls_conta y
											where	y.nr_sequencia = a.nr_seq_conta
											and	y.nr_seq_grau_partic = nr_seq_grau_copartic_w);
									
									-- Busca pelo codigo importado do procedimento, pela data e se o item tiver saldo
									if (coalesce(nr_seq_conta_proc_w::text, '') = '') then
										select	max(a.nr_sequencia)
										into STRICT	nr_seq_conta_proc_w
										from	pls_conta_proc a,
												pls_conta b
										where	a.nr_seq_conta 			= nr_seq_conta_w
										and		a.nr_seq_conta = b.nr_sequencia
										and		((b.nr_seq_prestador_exec = nr_seq_prestador_exec_w) or (exists (	SELECT 	1
																								from 	pls_proc_participante d 
																								where 	a.nr_sequencia = d.nr_seq_conta_proc 
																								and 	d.nr_seq_prestador = nr_seq_prestador_exec_w)))
										and	a.cd_procedimento_imp 		= cd_procedimento_p
										and	a.dt_procedimento_referencia_sh	= dt_realizacao_w
										and	a.vl_glosa			> 0
										and	a.ie_status not in ('D','M')
										and	pls_obter_se_proc_recursado(a.nr_sequencia, vl_recursado_p) = 'S'
										and	exists (	select	1
												from	pls_proc_participante x
												where	x.nr_seq_conta_proc = a.nr_sequencia
												and	x.nr_seq_grau_partic = nr_seq_grau_copartic_w
												
union all

												SELECT	1
												from	pls_conta y
												where	y.nr_sequencia = a.nr_seq_conta
												and	y.nr_seq_grau_partic = nr_seq_grau_copartic_w);
										
										-- Busca pelo codigo importado do procedimento e pela data
										if (coalesce(nr_seq_conta_proc_w::text, '') = '') then
											select	max(a.nr_sequencia)
											into STRICT	nr_seq_conta_proc_w
											from	pls_conta_proc a,
													pls_conta b
											where	a.nr_seq_conta 			= nr_seq_conta_w
											and		a.nr_seq_conta = b.nr_sequencia
											and		((b.nr_seq_prestador_exec = nr_seq_prestador_exec_w) or (exists (	SELECT 	1
																								from 	pls_proc_participante d 
																								where 	a.nr_sequencia = d.nr_seq_conta_proc 
																								and 	d.nr_seq_prestador = nr_seq_prestador_exec_w)))
											and	a.cd_procedimento_imp 		= cd_procedimento_p
											and	a.dt_procedimento_referencia_sh	= dt_realizacao_w
											and	a.vl_glosa			> 0
											and	a.ie_status not in ('D','M')
											and	exists (	select	1
													from	pls_proc_participante x
													where	x.nr_seq_conta_proc = a.nr_sequencia
													and	x.nr_seq_grau_partic = nr_seq_grau_copartic_w
													
union all

													SELECT	1
													from	pls_conta y
													where	y.nr_sequencia = a.nr_seq_conta
													and	y.nr_seq_grau_partic = nr_seq_grau_copartic_w);
										end if;
									end if;
								end if;
							end if;
						end if;
					end if;
				end if;
			end if;
		end if;
		
		if (coalesce(nr_seq_conta_proc_w::text, '') = '') then
			--Busca pelo codigo do procedimento, pela data, pelo valor recursado e se o item tiver saldo
			select	max(a.nr_sequencia)
			into STRICT	nr_seq_conta_proc_w
			from	pls_conta_proc a,
					pls_conta b
			where	a.nr_seq_conta 			= nr_seq_conta_w
			and		a.nr_seq_conta = b.nr_sequencia
			and		((b.nr_seq_prestador_exec = nr_seq_prestador_exec_w) or (exists (	SELECT 	1
																								from 	pls_proc_participante d 
																								where 	a.nr_sequencia = d.nr_seq_conta_proc 
																								and 	d.nr_seq_prestador = nr_seq_prestador_exec_w)))
			and	a.cd_procedimento 		= cd_procedimento_p
			and	a.dt_procedimento_referencia_sh	= dt_realizacao_w
			and	a.vl_glosa			= vl_recursado_p
			and	a.ie_status not in ('D','M')
			and	pls_obter_se_proc_recursado(a.nr_sequencia, vl_recursado_p) = 'S';
			
			-- Busca pelo codigo do procedimento, pela data e pelo valor recursado
			if (coalesce(nr_seq_conta_proc_w::text, '') = '') then
				select	max(a.nr_sequencia)
				into STRICT	nr_seq_conta_proc_w
				from	pls_conta_proc a,
						pls_conta b
				where	a.nr_seq_conta 			= nr_seq_conta_w
				and		a.nr_seq_conta = b.nr_sequencia
				and		((b.nr_seq_prestador_exec = nr_seq_prestador_exec_w) or (exists (	SELECT 	1
																								from 	pls_proc_participante d 
																								where 	a.nr_sequencia = d.nr_seq_conta_proc 
																								and 	d.nr_seq_prestador = nr_seq_prestador_exec_w)))
				and	a.cd_procedimento 		= cd_procedimento_p
				and	a.dt_procedimento_referencia_sh	= dt_realizacao_w
				and	a.vl_glosa			= vl_recursado_p
				and	a.ie_status not in ('D','M');
				
				-- Busca pelo codigo do procedimento, pela data, se o item tiver saldo e valor de glosa superior ao recursado
				if (coalesce(nr_seq_conta_proc_w::text, '') = '') then
				
						select	max(a.nr_sequencia)
						into STRICT	nr_seq_conta_proc_w
						from	pls_conta_proc a,
								pls_conta b
						where	a.nr_seq_conta 			= nr_seq_conta_w
						and		a.nr_seq_conta = b.nr_sequencia
						and		((b.nr_seq_prestador_exec = nr_seq_prestador_exec_w) or (exists (	SELECT 	1
																								from 	pls_proc_participante d 
																								where 	a.nr_sequencia = d.nr_seq_conta_proc 
																								and 	d.nr_seq_prestador = nr_seq_prestador_exec_w)))
						and	a.cd_procedimento 		= cd_procedimento_p
						and	a.dt_procedimento_referencia_sh	= dt_realizacao_w
						and	a.vl_glosa			> vl_recursado_p
						and	a.ie_status not in ('D','M')
						and	pls_obter_se_proc_recursado(a.nr_sequencia, vl_recursado_p) = 'S';

					-- Busca pelo codigo do procedimento, pela data e se o item tiver saldo
					if (coalesce(nr_seq_conta_proc_w::text, '') = '') then
						select	max(a.nr_sequencia)
						into STRICT	nr_seq_conta_proc_w
						from	pls_conta_proc a,
								pls_conta b
						where	a.nr_seq_conta 			= nr_seq_conta_w
						and		b.nr_sequencia = a.nr_seq_conta
						and		((b.nr_seq_prestador_exec = nr_seq_prestador_exec_w) or (exists (	SELECT 	1
																								from 	pls_proc_participante d 
																								where 	a.nr_sequencia = d.nr_seq_conta_proc 
																								and 	d.nr_seq_prestador = nr_seq_prestador_exec_w)))
						and	a.cd_procedimento 		= cd_procedimento_p
						and	a.dt_procedimento_referencia_sh	= dt_realizacao_w
						and	a.vl_glosa			> 0
						and	a.ie_status not in ('D','M')
						and	pls_obter_se_proc_recursado(a.nr_sequencia, vl_recursado_p) = 'S';
						
						-- Busca pelo codigo do procedimento e pela data
						if (coalesce(nr_seq_conta_proc_w::text, '') = '') then
							select	max(a.nr_sequencia)
							into STRICT	nr_seq_conta_proc_w
							from	pls_conta_proc a,
									pls_conta b
							where	a.nr_seq_conta 			= nr_seq_conta_w
							and		b.nr_sequencia = a.nr_seq_conta
							and		((b.nr_seq_prestador_exec = nr_seq_prestador_exec_w) or (exists (	SELECT 	1
																								from 	pls_proc_participante d 
																								where 	a.nr_sequencia = d.nr_seq_conta_proc 
																								and 	d.nr_seq_prestador = nr_seq_prestador_exec_w)))
							and	a.cd_procedimento 		= cd_procedimento_p
							and	a.dt_procedimento_referencia_sh	= dt_realizacao_w
							and	a.vl_glosa			> 0
							and	a.ie_status not in ('D','M');
							
							-- Busca pelo codigo importado do procedimento, pela data, pelo valor recursado e se o item tiver saldo
							if (coalesce(nr_seq_conta_proc_w::text, '') = '') then
								select	max(a.nr_sequencia)
								into STRICT	nr_seq_conta_proc_w
								from	pls_conta_proc a,
										pls_conta b
								where	a.nr_seq_conta 			= nr_seq_conta_w
								and		b.nr_sequencia = a.nr_seq_conta
								and		((b.nr_seq_prestador_exec = nr_seq_prestador_exec_w) or (exists (	SELECT 	1
																								from 	pls_proc_participante d 
																								where 	a.nr_sequencia = d.nr_seq_conta_proc 
																								and 	d.nr_seq_prestador = nr_seq_prestador_exec_w)))
								and	a.cd_procedimento_imp 		= cd_procedimento_p
								and	a.dt_procedimento_referencia_sh	= dt_realizacao_w
								and	a.vl_glosa			= vl_recursado_p
								and	a.ie_status not in ('D','M')
								and	pls_obter_se_proc_recursado(a.nr_sequencia, vl_recursado_p) = 'S';
								
								-- Busca pelo codigo importado do procedimento, pela data e pelo valor recursado
								if (coalesce(nr_seq_conta_proc_w::text, '') = '') then
									select	max(a.nr_sequencia)
									into STRICT	nr_seq_conta_proc_w
									from	pls_conta_proc a,
											pls_conta b
									where	a.nr_seq_conta 			= nr_seq_conta_w
									and		b.nr_sequencia = a.nr_seq_conta
									and		((b.nr_seq_prestador_exec = nr_seq_prestador_exec_w) or (exists (	SELECT 	1
																											from 	pls_proc_participante d 
																											where 	a.nr_sequencia = d.nr_seq_conta_proc 
																											and 	d.nr_seq_prestador = nr_seq_prestador_exec_w)))
									and	a.cd_procedimento_imp 		= cd_procedimento_p
									and	a.dt_procedimento_referencia_sh	= dt_realizacao_w
									and	a.vl_glosa			= vl_recursado_p
									and	a.ie_status not in ('D','M');
									
									-- Busca pelo codigo importado do procedimento, pela data e se o item tiver saldo
									if (coalesce(nr_seq_conta_proc_w::text, '') = '') then
										select	max(a.nr_sequencia)
										into STRICT	nr_seq_conta_proc_w
										from	pls_conta_proc a,
												pls_conta b
										where	a.nr_seq_conta 			= nr_seq_conta_w
										and		b.nr_sequencia = a.nr_seq_conta
										and		((b.nr_seq_prestador_exec = nr_seq_prestador_exec_w) or (exists (	SELECT 	1
																												from 	pls_proc_participante d 
																												where 	a.nr_sequencia = d.nr_seq_conta_proc 
																												and 	d.nr_seq_prestador = nr_seq_prestador_exec_w)))
										and	a.cd_procedimento_imp 		= cd_procedimento_p
										and	a.dt_procedimento_referencia_sh	= dt_realizacao_w
										and	a.vl_glosa			> 0
										and	a.ie_status not in ('D','M')
										and	pls_obter_se_proc_recursado(a.nr_sequencia, vl_recursado_p) = 'S';
										
										-- Busca pelo codigo importado do procedimento e pela data
										if (coalesce(nr_seq_conta_proc_w::text, '') = '') then
											select	max(a.nr_sequencia)
											into STRICT	nr_seq_conta_proc_w
											from	pls_conta_proc a,
													pls_conta b
											where	a.nr_seq_conta = nr_seq_conta_w
											and		b.nr_sequencia = a.nr_seq_conta
											and		((b.nr_seq_prestador_exec = nr_seq_prestador_exec_w) or (exists (	SELECT 	1
																													from 	pls_proc_participante d 
																													where 	a.nr_sequencia = d.nr_seq_conta_proc 
																													and 	d.nr_seq_prestador = nr_seq_prestador_exec_w)))
											and	a.cd_procedimento_imp 		= cd_procedimento_p
											and	a.dt_procedimento_referencia_sh	= dt_realizacao_w
											and	a.vl_glosa			> 0
											and	a.ie_status not in ('D','M');
										end if;
									end if;
								end if;
							end if;
						end if;
					end if;
				end if;
			end if;
		end if;
	end if;

	if (coalesce(nr_seq_conta_proc_w::text, '') = '') and (nr_seq_analise_w IS NOT NULL AND nr_seq_analise_w::text <> '') then
		--Busca pelo codigo do procedimento e pela data
		select	max(nr_sequencia),
			max(nr_seq_conta)
		into STRICT	nr_seq_conta_proc_w,
			nr_seq_conta_w
		from	pls_conta_proc_v a
		where	nr_seq_analise 		= nr_seq_analise_w		
		and	cd_procedimento 	= cd_procedimento_p
		and	dt_procedimento_trunc	= dt_realizacao_w
		and	((nr_seq_prestador_exec = nr_seq_prestador_exec_w) or (exists (	SELECT 	1
																		from 	pls_proc_participante d 
																		where 	a.nr_sequencia = d.nr_seq_conta_proc 
																		and 	d.nr_seq_prestador = nr_seq_prestador_exec_w)))
		and	vl_glosa 		> 0
		and	ie_status not in ('D','M')
		and	pls_obter_se_proc_recursado(nr_sequencia, vl_recursado_p) = 'S';
		
		if (coalesce(nr_seq_conta_proc_w::text, '') = '') then
			
			--Busca pelo codigo do procedimento e pela data
			select	max(nr_sequencia),
				max(nr_seq_conta)
			into STRICT	nr_seq_conta_proc_w,
					nr_seq_conta_w
			from	pls_conta_proc_v a
			where	nr_seq_analise 		= nr_seq_analise_w
			and	cd_procedimento 	= cd_procedimento_p
			and	dt_procedimento_trunc	= dt_realizacao_w
			and	((nr_seq_prestador_exec = nr_seq_prestador_exec_w) or (exists (	SELECT 	1
																		from 	pls_proc_participante d 
																		where 	a.nr_sequencia = d.nr_seq_conta_proc 
																		and 	d.nr_seq_prestador = nr_seq_prestador_exec_w)))
			and	vl_glosa 		> 0
			and	ie_status not in ('D','M');
			
			--Se nao achou, busca apenas do codigo do procedimento
			if (coalesce(nr_seq_conta_proc_w::text, '') = '') then
				select	max(nr_sequencia),
					max(nr_seq_conta)
				into STRICT	nr_seq_conta_proc_w,
					nr_seq_conta_w
				from	pls_conta_proc_v a
				where	nr_seq_analise 		= nr_seq_analise_w
				and	cd_procedimento 	= cd_procedimento_p
				and	((nr_seq_prestador_exec = nr_seq_prestador_exec_w) or (exists (	SELECT 	1
																		from 	pls_proc_participante d 
																		where 	a.nr_sequencia = d.nr_seq_conta_proc 
																		and 	d.nr_seq_prestador = nr_seq_prestador_exec_w)))
				and	vl_glosa 		> 0
				and	ie_status not in ('D','M')
				and	pls_obter_se_proc_recursado(nr_sequencia, vl_recursado_p) = 'S';
				
				if (coalesce(nr_seq_conta_proc_w::text, '') = '') then
					select	max(nr_sequencia),
						max(nr_seq_conta)
					into STRICT	nr_seq_conta_proc_w,
							nr_seq_conta_w
					from	pls_conta_proc_v a
					where	nr_seq_analise 		= nr_seq_analise_w
					and	cd_procedimento 	= cd_procedimento_p
					and	((nr_seq_prestador_exec = nr_seq_prestador_exec_w) or (exists (	SELECT 	1
																		from 	pls_proc_participante d 
																		where 	a.nr_sequencia = d.nr_seq_conta_proc 
																		and 	d.nr_seq_prestador = nr_seq_prestador_exec_w)))
					and	vl_glosa 		> 0
					and	ie_status not in ('D','M');
				end if;
			end if;
			-- Se nao achou busca pelo codigo do procedimento e pela data
			if (coalesce(nr_seq_conta_proc_w::text, '') = '') then
				select	max(a.nr_sequencia)
				into STRICT	nr_seq_conta_proc_w
				from	pls_conta_proc a,
						pls_conta b
				where	a.nr_seq_conta 			= nr_seq_conta_w
				and		b.nr_sequencia = a.nr_seq_conta
				and		((b.nr_seq_prestador_exec = nr_seq_prestador_exec_w) or (exists (	SELECT 	1
																							from 	pls_proc_participante d 
																							where 	a.nr_sequencia = d.nr_seq_conta_proc 
																							and 	d.nr_seq_prestador = nr_seq_prestador_exec_w)))
				and	a.cd_procedimento 		= cd_procedimento_p
				and	a.dt_procedimento_referencia_sh	= dt_realizacao_w
				and	a.ie_status not in ('D','M')
				and	pls_obter_se_proc_recursado(a.nr_sequencia, vl_recursado_p) = 'S';
				
				if (coalesce(nr_seq_conta_proc_w::text, '') = '') then
					select	max(a.nr_sequencia)
					into STRICT	nr_seq_conta_proc_w
					from	pls_conta_proc a,
							pls_conta b
					where	a.nr_seq_conta 			= nr_seq_conta_w
					and		b.nr_sequencia = a.nr_seq_conta
					and		((b.nr_seq_prestador_exec = nr_seq_prestador_exec_w) or (exists (	SELECT 	1
																							from 	pls_proc_participante d 
																							where 	a.nr_sequencia = d.nr_seq_conta_proc 
																							and 	d.nr_seq_prestador = nr_seq_prestador_exec_w)))
					and	a.cd_procedimento 		= cd_procedimento_p
					and	a.dt_procedimento_referencia_sh	= dt_realizacao_w
					and	a.ie_status not in ('D','M');
				end if;
				
				--Sen ao achou, busca apenas do codigo do procedimento
				if (coalesce(nr_seq_conta_proc_w::text, '') = '') then
					select	max(a.nr_sequencia)
					into STRICT	nr_seq_conta_proc_w
					from	pls_conta_proc a,
							pls_conta b
					where	a.nr_seq_conta 			= nr_seq_conta_w
					and		b.nr_sequencia = a.nr_seq_conta
					and		((b.nr_seq_prestador_exec = nr_seq_prestador_exec_w) or (exists (	SELECT 	1
																							from 	pls_proc_participante d 
																							where 	a.nr_sequencia = d.nr_seq_conta_proc 
																							and 	d.nr_seq_prestador = nr_seq_prestador_exec_w)))
					and	a.cd_procedimento 		= cd_procedimento_p
					and	a.ie_status not in ('D','M')
					and	pls_obter_se_proc_recursado(a.nr_sequencia, vl_recursado_p) = 'S';
					
					if (coalesce(nr_seq_conta_proc_w::text, '') = '') then
						select	max(a.nr_sequencia)
						into STRICT	nr_seq_conta_proc_w
						from	pls_conta_proc a,
								pls_conta b
						where	a.nr_seq_conta 			= nr_seq_conta_w
						and		b.nr_sequencia = a.nr_seq_conta
						and		((b.nr_seq_prestador_exec = nr_seq_prestador_exec_w) or (exists (	SELECT 	1
																								from 	pls_proc_participante d 
																								where 	a.nr_sequencia = d.nr_seq_conta_proc 
																								and 	d.nr_seq_prestador = nr_seq_prestador_exec_w)))
						and	a.cd_procedimento 		= cd_procedimento_p
						and	a.ie_status not in ('D','M');
					end if;			
				end if;
			end if;
				
			if (coalesce(nr_seq_conta_proc_w::text, '') = '') then
				select	max(a.nr_sequencia)
				into STRICT	nr_seq_conta_proc_w
				from	pls_conta_proc a,
						pls_conta b
				where	a.nr_seq_conta 			= nr_seq_conta_w
				and		b.nr_sequencia = a.nr_seq_conta
				and		((b.nr_seq_prestador_exec = nr_seq_prestador_exec_w) or (exists (	SELECT 	1
																						from 	pls_proc_participante d 
																						where 	a.nr_sequencia = d.nr_seq_conta_proc 
																						and 	d.nr_seq_prestador = nr_seq_prestador_exec_w)))
				and	a.cd_procedimento_imp 		= cd_procedimento_p
				and	a.dt_procedimento_referencia_sh	= dt_realizacao_w
				and	a.ie_status not in ('D','M')
				and	pls_obter_se_proc_recursado(a.nr_sequencia, vl_recursado_p) = 'S';
				
				if (coalesce(nr_seq_conta_proc_w::text, '') = '') then
					select	max(a.nr_sequencia)
					into STRICT	nr_seq_conta_proc_w
					from	pls_conta_proc a,
							pls_conta b
					where	a.nr_seq_conta 			= nr_seq_conta_w
					and		b.nr_sequencia = a.nr_seq_conta
					and		((b.nr_seq_prestador_exec = nr_seq_prestador_exec_w) or (exists (	SELECT 	1
																							from 	pls_proc_participante d 
																							where 	a.nr_sequencia = d.nr_seq_conta_proc 
																							and 	d.nr_seq_prestador = nr_seq_prestador_exec_w)))
					and	a.cd_procedimento_imp 		= cd_procedimento_p
					and	a.dt_procedimento_referencia_sh	= dt_realizacao_w
					and	a.ie_status not in ('D','M');
				end if;
				
				if (coalesce(nr_seq_conta_proc_w::text, '') = '') then
					select	max(a.nr_sequencia)
					into STRICT	nr_seq_conta_proc_w
					from	pls_conta_proc a,
							pls_conta b
					where	a.nr_seq_conta 		= nr_seq_conta_w
					and		b.nr_sequencia = a.nr_seq_conta
					and		((b.nr_seq_prestador_exec = nr_seq_prestador_exec_w) or (exists (	SELECT 	1
																							from 	pls_proc_participante d 
																							where 	a.nr_sequencia = d.nr_seq_conta_proc 
																							and 	d.nr_seq_prestador = nr_seq_prestador_exec_w)))
					and	a.cd_procedimento_imp	= cd_procedimento_p
					and	a.ie_status not in ('D','M')
					and	pls_obter_se_proc_recursado(a.nr_sequencia, vl_recursado_p) = 'S';
					
					if (coalesce(nr_seq_conta_proc_w::text, '') = '') then
						select	max(a.nr_sequencia)
						into STRICT	nr_seq_conta_proc_w
						from	pls_conta_proc a,
								pls_conta b
						where	a.nr_seq_conta 		= nr_seq_conta_w
						and		b.nr_sequencia = a.nr_seq_conta
						and		((b.nr_seq_prestador_exec = nr_seq_prestador_exec_w) or (exists (	SELECT 	1
																								from 	pls_proc_participante d 
																								where 	a.nr_sequencia = d.nr_seq_conta_proc 
																								and 	d.nr_seq_prestador = nr_seq_prestador_exec_w)))
						and	a.cd_procedimento_imp	= cd_procedimento_p
						and	a.ie_status not in ('D','M');
					end if;
				end if;
			end if;
		end if;
		
		
		--Caso achou o registro, verifica se a conta encontrada foi inserida nesse recurso
		if (nr_seq_conta_proc_w IS NOT NULL AND nr_seq_conta_proc_w::text <> '') and (nr_seq_conta_w IS NOT NULL AND nr_seq_conta_w::text <> '') then
			
			select	max(nr_sequencia)
			into STRICT	nr_seq_conta_imp_w
			from	pls_rec_glosa_conta_imp
			where	nr_seq_protocolo_cta	= nr_seq_protocolo_cta_w
			and	nr_seq_conta		= nr_seq_conta_w;
			
			---Caso nao for, insere o recurso
			if (coalesce(nr_seq_conta_imp_w::text, '') = '') then
			
				select	nextval('pls_rec_glosa_conta_imp_seq')
				into STRICT	nr_seq_conta_imp_w
				;
			
				insert into pls_rec_glosa_conta_imp(	nr_sequencia,dt_atualizacao_nrec, nm_usuario, dt_atualizacao, nm_usuario_nrec,
					nr_seq_protocolo_cta, nr_seq_conta, cd_ans, cd_guia,
					cd_guia_prestador, nm_operadora, ie_recurso_glosa,cd_prestador_executor, 
					nm_prestador_executor, nr_lote,nr_protocolo, dt_realizacao, 
					dt_fim_internacao,ds_senha, cd_guia_recurso, vl_total_recursado,
					dt_recurso, nm_beneficiario )		
				(SELECT	nr_seq_conta_imp_w , clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p,
					nr_seq_protocolo_cta, nr_seq_conta_w, cd_ans, cd_guia,
					cd_guia_prestador, nm_operadora, ie_recurso_glosa,cd_prestador_executor, 
					nm_prestador_executor, nr_lote,nr_protocolo, dt_realizacao, 
					dt_fim_internacao,ds_senha, cd_guia_recurso, vl_total_recursado,
					dt_recurso, nm_beneficiario
				from	pls_rec_glosa_conta_imp
				where	nr_sequencia	= nr_seq_conta_imp_p);
			end if;
		else
			nr_seq_conta_w		:= nr_seq_conta_original_w;
		end if;
	end if;

else
	if (nr_seq_conta_w IS NOT NULL AND nr_seq_conta_w::text <> '') then
		
		if (nr_seq_grau_copartic_w IS NOT NULL AND nr_seq_grau_copartic_w::text <> '') then
		
			--Busca pelo codigo do procedimento, pela data, pelo valor recursado e se o item tiver saldo
			select	max(a.nr_sequencia)
			into STRICT	nr_seq_conta_proc_w
			from	pls_conta_proc a
			where	a.nr_seq_conta 			= nr_seq_conta_w
			and	a.cd_procedimento 		= cd_procedimento_p
			and	a.dt_procedimento_referencia_sh	= dt_realizacao_w
			and	a.vl_glosa			= vl_recursado_p
			and	a.ie_status not in ('D','M')
			and	pls_obter_se_proc_recursado(a.nr_sequencia, vl_recursado_p) = 'S'
			and	exists (	SELECT	1
					from	pls_proc_participante x
					where	x.nr_seq_conta_proc = a.nr_sequencia
					and	x.nr_seq_grau_partic = nr_seq_grau_copartic_w
					
union all

					SELECT	1
					from	pls_conta y
					where	y.nr_sequencia = a.nr_seq_conta
					and	y.nr_seq_grau_partic = nr_seq_grau_copartic_w);

			
			-- Busca pelo codigo do procedimento, pela data e pelo valor recursado
			if (coalesce(nr_seq_conta_proc_w::text, '') = '') then
				select	max(a.nr_sequencia)
				into STRICT	nr_seq_conta_proc_w
				from	pls_conta_proc a
				where	a.nr_seq_conta 			= nr_seq_conta_w
				and	a.cd_procedimento 		= cd_procedimento_p
				and	a.dt_procedimento_referencia_sh	= dt_realizacao_w
				and	a.vl_glosa			= vl_recursado_p
				and	a.ie_status not in ('D','M')
				and	exists (	SELECT	1
						from	pls_proc_participante x
						where	x.nr_seq_conta_proc = a.nr_sequencia
						and	x.nr_seq_grau_partic = nr_seq_grau_copartic_w
						
union all

						SELECT	1
						from	pls_conta y
						where	y.nr_sequencia = a.nr_seq_conta
						and	y.nr_seq_grau_partic = nr_seq_grau_copartic_w);
				
				-- Busca pelo codigo do procedimento, pela data e pelo valor recursado que seja menor que o valor de glosa
				if (coalesce(nr_seq_conta_proc_w::text, '') = '') then			
					select	max(a.nr_sequencia)
					into STRICT	nr_seq_conta_proc_w
					from	pls_conta_proc a
					where	a.nr_seq_conta 			= nr_seq_conta_w
					and	a.cd_procedimento 		= cd_procedimento_p
					and	a.dt_procedimento_referencia_sh	= dt_realizacao_w
					and	a.vl_glosa			> vl_recursado_p
					and	a.ie_status not in ('D','M')
					and	exists (	SELECT	1
							from	pls_proc_participante x
							where	x.nr_seq_conta_proc = a.nr_sequencia
							and	x.nr_seq_grau_partic = nr_seq_grau_copartic_w
							
union all

							SELECT	1
							from	pls_conta y
							where	y.nr_sequencia = a.nr_seq_conta
							and	y.nr_seq_grau_partic = nr_seq_grau_copartic_w);
				
					-- Busca pelo codigo do procedimento, pela data e se o item tiver saldo
					if (coalesce(nr_seq_conta_proc_w::text, '') = '') then
						select	max(a.nr_sequencia)
						into STRICT	nr_seq_conta_proc_w
						from	pls_conta_proc a
						where	a.nr_seq_conta 			= nr_seq_conta_w
						and	a.cd_procedimento 		= cd_procedimento_p
						and	a.dt_procedimento_referencia_sh	= dt_realizacao_w
						and	a.vl_glosa			> 0
						and	a.ie_status not in ('D','M')
						and	pls_obter_se_proc_recursado(a.nr_sequencia, vl_recursado_p) = 'S'
						and	exists (	SELECT	1
								from	pls_proc_participante x
								where	x.nr_seq_conta_proc = a.nr_sequencia
								and	x.nr_seq_grau_partic = nr_seq_grau_copartic_w
								
union all

								SELECT	1
								from	pls_conta y
								where	y.nr_sequencia = a.nr_seq_conta
								and	y.nr_seq_grau_partic = nr_seq_grau_copartic_w);
						
						-- Busca pelo codigo do procedimento e pela data
						if (coalesce(nr_seq_conta_proc_w::text, '') = '') then
							select	max(a.nr_sequencia)
							into STRICT	nr_seq_conta_proc_w
							from	pls_conta_proc a
							where	a.nr_seq_conta 			= nr_seq_conta_w
							and	a.cd_procedimento 		= cd_procedimento_p
							and	a.dt_procedimento_referencia_sh	= dt_realizacao_w
							and	a.vl_glosa			> 0
							and	a.ie_status not in ('D','M')
							and	exists (	SELECT	1
									from	pls_proc_participante x
									where	x.nr_seq_conta_proc = a.nr_sequencia
									and	x.nr_seq_grau_partic = nr_seq_grau_copartic_w
									
union all

									SELECT	1
									from	pls_conta y
									where	y.nr_sequencia = a.nr_seq_conta
									and	y.nr_seq_grau_partic = nr_seq_grau_copartic_w);
							
							-- Busca pelo codigo importado do procedimento, pela data, pelo valor recursado e se o item tiver saldo
							if (coalesce(nr_seq_conta_proc_w::text, '') = '') then
								select	max(a.nr_sequencia)
								into STRICT	nr_seq_conta_proc_w
								from	pls_conta_proc a
								where	a.nr_seq_conta 			= nr_seq_conta_w
								and	a.cd_procedimento_imp 		= cd_procedimento_p
								and	a.dt_procedimento_referencia_sh	= dt_realizacao_w
								and	a.vl_glosa			= vl_recursado_p
								and	a.ie_status not in ('D','M')
								and	pls_obter_se_proc_recursado(a.nr_sequencia, vl_recursado_p) = 'S'
								and	exists (	SELECT	1
										from	pls_proc_participante x
										where	x.nr_seq_conta_proc = a.nr_sequencia
										and	x.nr_seq_grau_partic = nr_seq_grau_copartic_w
										
union all

										SELECT	1
										from	pls_conta y
										where	y.nr_sequencia = a.nr_seq_conta
										and	y.nr_seq_grau_partic = nr_seq_grau_copartic_w);
								
								-- Busca pelo codigo importado do procedimento, pela data e pelo valor recursado
								if (coalesce(nr_seq_conta_proc_w::text, '') = '') then
									select	max(a.nr_sequencia)
									into STRICT	nr_seq_conta_proc_w
									from	pls_conta_proc a
									where	a.nr_seq_conta 			= nr_seq_conta_w
									and	a.cd_procedimento_imp 		= cd_procedimento_p
									and	a.dt_procedimento_referencia_sh	= dt_realizacao_w
									and	a.vl_glosa			= vl_recursado_p
									and	a.ie_status not in ('D','M')
									and	exists (	SELECT	1
											from	pls_proc_participante x
											where	x.nr_seq_conta_proc = a.nr_sequencia
											and	x.nr_seq_grau_partic = nr_seq_grau_copartic_w
											
union all

											SELECT	1
											from	pls_conta y
											where	y.nr_sequencia = a.nr_seq_conta
											and	y.nr_seq_grau_partic = nr_seq_grau_copartic_w);
									
									-- Busca pelo codigo importado do procedimento, pela data e se o item tiver saldo
									if (coalesce(nr_seq_conta_proc_w::text, '') = '') then
										select	max(a.nr_sequencia)
										into STRICT	nr_seq_conta_proc_w
										from	pls_conta_proc a
										where	a.nr_seq_conta 			= nr_seq_conta_w
										and	a.cd_procedimento_imp 		= cd_procedimento_p
										and	a.dt_procedimento_referencia_sh	= dt_realizacao_w
										and	a.vl_glosa			> 0
										and	a.ie_status not in ('D','M')
										and	pls_obter_se_proc_recursado(a.nr_sequencia, vl_recursado_p) = 'S'
										and	exists (	SELECT	1
												from	pls_proc_participante x
												where	x.nr_seq_conta_proc = a.nr_sequencia
												and	x.nr_seq_grau_partic = nr_seq_grau_copartic_w
												
union all

												SELECT	1
												from	pls_conta y
												where	y.nr_sequencia = a.nr_seq_conta
												and	y.nr_seq_grau_partic = nr_seq_grau_copartic_w);
										
										-- Busca pelo codigo importado do procedimento e pela data
										if (coalesce(nr_seq_conta_proc_w::text, '') = '') then
											select	max(a.nr_sequencia)
											into STRICT	nr_seq_conta_proc_w
											from	pls_conta_proc a
											where	a.nr_seq_conta 			= nr_seq_conta_w
											and	a.cd_procedimento_imp 		= cd_procedimento_p
											and	a.dt_procedimento_referencia_sh	= dt_realizacao_w
											and	a.vl_glosa			> 0
											and	a.ie_status not in ('D','M')
											and	exists (	SELECT	1
													from	pls_proc_participante x
													where	x.nr_seq_conta_proc = a.nr_sequencia
													and	x.nr_seq_grau_partic = nr_seq_grau_copartic_w
													
union all

													SELECT	1
													from	pls_conta y
													where	y.nr_sequencia = a.nr_seq_conta
													and	y.nr_seq_grau_partic = nr_seq_grau_copartic_w);
										end if;
									end if;
								end if;
							end if;
						end if;
					end if;
				end if;
			end if;
		end if;
		
		if (coalesce(nr_seq_conta_proc_w::text, '') = '') then
			--Busca pelo codigo do procedimento, pela data, pelo valor recursado e se o item tiver saldo
			select	max(nr_sequencia)
			into STRICT	nr_seq_conta_proc_w
			from	pls_conta_proc
			where	nr_seq_conta 			= nr_seq_conta_w
			and	cd_procedimento 		= cd_procedimento_p
			and	dt_procedimento_referencia_sh	= dt_realizacao_w
			and	vl_glosa			= vl_recursado_p
			and	ie_status not in ('D','M')
			and	pls_obter_se_proc_recursado(nr_sequencia, vl_recursado_p) = 'S';
			
			-- Busca pelo codigo do procedimento, pela data e pelo valor recursado
			if (coalesce(nr_seq_conta_proc_w::text, '') = '') then
				select	max(nr_sequencia)
				into STRICT	nr_seq_conta_proc_w
				from	pls_conta_proc
				where	nr_seq_conta 			= nr_seq_conta_w
				and	cd_procedimento 		= cd_procedimento_p
				and	dt_procedimento_referencia_sh	= dt_realizacao_w
				and	vl_glosa			= vl_recursado_p
				and	ie_status not in ('D','M');
				
				-- Busca pelo codigo do procedimento, pela data, se o item tiver saldo e valor de glosa superior ao recursado
				if (coalesce(nr_seq_conta_proc_w::text, '') = '') then
				
						select	max(nr_sequencia)
						into STRICT	nr_seq_conta_proc_w
						from	pls_conta_proc
						where	nr_seq_conta 			= nr_seq_conta_w
						and	cd_procedimento 		= cd_procedimento_p
						and	dt_procedimento_referencia_sh	= dt_realizacao_w
						and	vl_glosa			> vl_recursado_p
						and	ie_status not in ('D','M')
						and	pls_obter_se_proc_recursado(nr_sequencia, vl_recursado_p) = 'S';

					-- Busca pelo codigo do procedimento, pela data e se o item tiver saldo
					if (coalesce(nr_seq_conta_proc_w::text, '') = '') then
						select	max(nr_sequencia)
						into STRICT	nr_seq_conta_proc_w
						from	pls_conta_proc
						where	nr_seq_conta 			= nr_seq_conta_w
						and	cd_procedimento 		= cd_procedimento_p
						and	dt_procedimento_referencia_sh	= dt_realizacao_w
						and	vl_glosa			> 0
						and	ie_status not in ('D','M')
						and	pls_obter_se_proc_recursado(nr_sequencia, vl_recursado_p) = 'S';
						
						-- Busca pelo codigo do procedimento e pela data
						if (coalesce(nr_seq_conta_proc_w::text, '') = '') then
							select	max(nr_sequencia)
							into STRICT	nr_seq_conta_proc_w
							from	pls_conta_proc
							where	nr_seq_conta 			= nr_seq_conta_w
							and	cd_procedimento 		= cd_procedimento_p
							and	dt_procedimento_referencia_sh	= dt_realizacao_w
							and	vl_glosa			> 0
							and	ie_status not in ('D','M');
							
							-- Busca pelo codigo importado do procedimento, pela data, pelo valor recursado e se o item tiver saldo
							if (coalesce(nr_seq_conta_proc_w::text, '') = '') then
								select	max(nr_sequencia)
								into STRICT	nr_seq_conta_proc_w
								from	pls_conta_proc
								where	nr_seq_conta 			= nr_seq_conta_w
								and	cd_procedimento_imp 		= cd_procedimento_p
								and	dt_procedimento_referencia_sh	= dt_realizacao_w
								and	vl_glosa			= vl_recursado_p
								and	ie_status not in ('D','M')
								and	pls_obter_se_proc_recursado(nr_sequencia, vl_recursado_p) = 'S';
								
								-- Busca pelo codigo importado do procedimento, pela data e pelo valor recursado
								if (coalesce(nr_seq_conta_proc_w::text, '') = '') then
									select	max(nr_sequencia)
									into STRICT	nr_seq_conta_proc_w
									from	pls_conta_proc
									where	nr_seq_conta 			= nr_seq_conta_w
									and	cd_procedimento_imp 		= cd_procedimento_p
									and	dt_procedimento_referencia_sh	= dt_realizacao_w
									and	vl_glosa			= vl_recursado_p
									and	ie_status not in ('D','M');
									
									-- Busca pelo codigo importado do procedimento, pela data e se o item tiver saldo
									if (coalesce(nr_seq_conta_proc_w::text, '') = '') then
										select	max(nr_sequencia)
										into STRICT	nr_seq_conta_proc_w
										from	pls_conta_proc
										where	nr_seq_conta 			= nr_seq_conta_w
										and	cd_procedimento_imp 		= cd_procedimento_p
										and	dt_procedimento_referencia_sh	= dt_realizacao_w
										and	vl_glosa			> 0
										and	ie_status not in ('D','M')
										and	pls_obter_se_proc_recursado(nr_sequencia, vl_recursado_p) = 'S';
										
										-- Busca pelo codigo importado do procedimento e pela data
										if (coalesce(nr_seq_conta_proc_w::text, '') = '') then
											select	max(nr_sequencia)
											into STRICT	nr_seq_conta_proc_w
											from	pls_conta_proc
											where	nr_seq_conta 			= nr_seq_conta_w
											and	cd_procedimento_imp 		= cd_procedimento_p
											and	dt_procedimento_referencia_sh	= dt_realizacao_w
											and	vl_glosa			> 0
											and	ie_status not in ('D','M');
										end if;
									end if;
								end if;
							end if;
						end if;
					end if;
				end if;
			end if;
		end if;
	end if;

	if (coalesce(nr_seq_conta_proc_w::text, '') = '') and (nr_seq_analise_w IS NOT NULL AND nr_seq_analise_w::text <> '') then
		--Busca pelo codigo do procedimento e pela data
		select	max(nr_sequencia),
			max(nr_seq_conta)
		into STRICT	nr_seq_conta_proc_w,
			nr_seq_conta_w
		from	pls_conta_proc_v
		where	nr_seq_analise 		= nr_seq_analise_w
		and	cd_procedimento 	= cd_procedimento_p
		and	dt_procedimento_trunc	= dt_realizacao_w
		and	nr_seq_prestador_exec	= nr_seq_prestador_exec_w
		and	vl_glosa 		> 0
		and	ie_status not in ('D','M')
		and	pls_obter_se_proc_recursado(nr_sequencia, vl_recursado_p) = 'S';
		
		if (coalesce(nr_seq_conta_proc_w::text, '') = '') then
			
			--Busca pelo codigo do procedimento e pela data
			select	max(nr_sequencia),
				max(nr_seq_conta)
			into STRICT	nr_seq_conta_proc_w,
				nr_seq_conta_w
			from	pls_conta_proc_v
			where	nr_seq_analise 		= nr_seq_analise_w
			and	cd_procedimento 	= cd_procedimento_p
			and	dt_procedimento_trunc	= dt_realizacao_w
			and	nr_seq_prestador_exec	= nr_seq_prestador_exec_w
			and	vl_glosa 		> 0
			and	ie_status not in ('D','M');
			
			--Se nao achou, busca apenas do codigo do procedimento
			if (coalesce(nr_seq_conta_proc_w::text, '') = '') then
				select	max(nr_sequencia),
					max(nr_seq_conta)
				into STRICT	nr_seq_conta_proc_w,
					nr_seq_conta_w
				from	pls_conta_proc_v
				where	nr_seq_analise 		= nr_seq_analise_w
				and	cd_procedimento 	= cd_procedimento_p
				and	nr_seq_prestador_exec	= nr_seq_prestador_exec_w
				and	vl_glosa 		> 0
				and	ie_status not in ('D','M')
				and	pls_obter_se_proc_recursado(nr_sequencia, vl_recursado_p) = 'S';
				
				if (coalesce(nr_seq_conta_proc_w::text, '') = '') then
					select	max(nr_sequencia),
						max(nr_seq_conta)
					into STRICT	nr_seq_conta_proc_w,
						nr_seq_conta_w
					from	pls_conta_proc_v
					where	nr_seq_analise 		= nr_seq_analise_w
					and	cd_procedimento 	= cd_procedimento_p
					and	nr_seq_prestador_exec	= nr_seq_prestador_exec_w
					and	vl_glosa 		> 0
					and	ie_status not in ('D','M');
				end if;
			end if;
			-- Se nao achou busca pelo codigo do procedimento e pela data
			if (coalesce(nr_seq_conta_proc_w::text, '') = '') then
				select	max(nr_sequencia)
				into STRICT	nr_seq_conta_proc_w
				from	pls_conta_proc
				where	nr_seq_conta 			= nr_seq_conta_w
				and	cd_procedimento 		= cd_procedimento_p
				and	dt_procedimento_referencia_sh	= dt_realizacao_w
				and	ie_status not in ('D','M')
				and	pls_obter_se_proc_recursado(nr_sequencia, vl_recursado_p) = 'S';
				
				if (coalesce(nr_seq_conta_proc_w::text, '') = '') then
					select	max(nr_sequencia)
					into STRICT	nr_seq_conta_proc_w
					from	pls_conta_proc
					where	nr_seq_conta 			= nr_seq_conta_w
					and	cd_procedimento 		= cd_procedimento_p
					and	dt_procedimento_referencia_sh	= dt_realizacao_w
					and	ie_status not in ('D','M');
				end if;
				
				--Se nao achou, busca apenas do codigo do procedimento
				if (coalesce(nr_seq_conta_proc_w::text, '') = '') then
					select	max(nr_sequencia)
					into STRICT	nr_seq_conta_proc_w
					from	pls_conta_proc
					where	nr_seq_conta 			= nr_seq_conta_w
					and	cd_procedimento 		= cd_procedimento_p
					and	ie_status not in ('D','M')
					and	pls_obter_se_proc_recursado(nr_sequencia, vl_recursado_p) = 'S';
					
					if (coalesce(nr_seq_conta_proc_w::text, '') = '') then
						select	max(nr_sequencia)
						into STRICT	nr_seq_conta_proc_w
						from	pls_conta_proc
						where	nr_seq_conta 			= nr_seq_conta_w
						and	cd_procedimento 		= cd_procedimento_p
						and	ie_status not in ('D','M');
					end if;			
				end if;
			end if;
				
			if (coalesce(nr_seq_conta_proc_w::text, '') = '') then
				select	max(nr_sequencia)
				into STRICT	nr_seq_conta_proc_w
				from	pls_conta_proc
				where	nr_seq_conta 			= nr_seq_conta_w
				and	cd_procedimento_imp 		= cd_procedimento_p
				and	dt_procedimento_referencia_sh	= dt_realizacao_w
				and	ie_status not in ('D','M')
				and	pls_obter_se_proc_recursado(nr_sequencia, vl_recursado_p) = 'S';
				
				if (coalesce(nr_seq_conta_proc_w::text, '') = '') then
					select	max(nr_sequencia)
					into STRICT	nr_seq_conta_proc_w
					from	pls_conta_proc
					where	nr_seq_conta 			= nr_seq_conta_w
					and	cd_procedimento_imp 		= cd_procedimento_p
					and	dt_procedimento_referencia_sh	= dt_realizacao_w
					and	ie_status not in ('D','M');
				end if;
				
				if (coalesce(nr_seq_conta_proc_w::text, '') = '') then
					select	max(nr_sequencia)
					into STRICT	nr_seq_conta_proc_w
					from	pls_conta_proc
					where	nr_seq_conta 		= nr_seq_conta_w
					and	cd_procedimento_imp	= cd_procedimento_p
					and	ie_status not in ('D','M')
					and	pls_obter_se_proc_recursado(nr_sequencia, vl_recursado_p) = 'S';
					
					if (coalesce(nr_seq_conta_proc_w::text, '') = '') then
						select	max(nr_sequencia)
						into STRICT	nr_seq_conta_proc_w
						from	pls_conta_proc
						where	nr_seq_conta 		= nr_seq_conta_w
						and	cd_procedimento_imp	= cd_procedimento_p
						and	ie_status not in ('D','M');
					end if;
				end if;
			end if;
		end if;
		
		
		--Caso achou o registro, verifica se a conta encontrada foi inserida nesse recurso
		if (nr_seq_conta_proc_w IS NOT NULL AND nr_seq_conta_proc_w::text <> '') and (nr_seq_conta_w IS NOT NULL AND nr_seq_conta_w::text <> '') then
			
			select	max(nr_sequencia)
			into STRICT	nr_seq_conta_imp_w
			from	pls_rec_glosa_conta_imp
			where	nr_seq_protocolo_cta	= nr_seq_protocolo_cta_w
			and	nr_seq_conta		= nr_seq_conta_w;
			
			---Caso nao for, insere o recurso
			if (coalesce(nr_seq_conta_imp_w::text, '') = '') then
			
				select	nextval('pls_rec_glosa_conta_imp_seq')
				into STRICT	nr_seq_conta_imp_w
				;
			
				insert into pls_rec_glosa_conta_imp(	nr_sequencia,dt_atualizacao_nrec, nm_usuario, dt_atualizacao, nm_usuario_nrec,
					nr_seq_protocolo_cta, nr_seq_conta, cd_ans, cd_guia,
					cd_guia_prestador, nm_operadora, ie_recurso_glosa,cd_prestador_executor, 
					nm_prestador_executor, nr_lote,nr_protocolo, dt_realizacao, 
					dt_fim_internacao,ds_senha, cd_guia_recurso, vl_total_recursado,
					dt_recurso, nm_beneficiario )		
				(SELECT	nr_seq_conta_imp_w , clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p,
					nr_seq_protocolo_cta, nr_seq_conta_w, cd_ans, cd_guia,
					cd_guia_prestador, nm_operadora, ie_recurso_glosa,cd_prestador_executor, 
					nm_prestador_executor, nr_lote,nr_protocolo, dt_realizacao, 
					dt_fim_internacao,ds_senha, cd_guia_recurso, vl_total_recursado,
					dt_recurso, nm_beneficiario
				from	pls_rec_glosa_conta_imp
				where	nr_sequencia	= nr_seq_conta_imp_p);
			end if;
		else
			nr_seq_conta_w		:= nr_seq_conta_original_w;
		end if;
	end if;
end if;

nr_seq_conta_mat_imp_w	:= null;

--aaschlote 18/03/2015 OS 1035148 - Quando a tabela de importacao for '00' e nao achar o procedimento, tentar buscar por material
cd_tipo_tabela_w := cd_tipo_tabela_p;
if (coalesce(nr_seq_conta_proc_w::text, '') = '') then
	
	select 	max(cd_estabelecimento)
	into STRICT	cd_estabelecimento_w
	from	pls_conta
	where 	nr_sequencia = nr_seq_conta_w;
	
	dados_tipo_conv_tiss_w	:= pls_obter_conversao_tab_tiss(cd_tipo_tabela_p, cd_estabelecimento_w, cd_procedimento_p,
															'', 'C', nr_seq_prestador_exec_w, '0');
		
	if (dados_tipo_conv_tiss_w.ie_tipo_tabela IS NOT NULL AND dados_tipo_conv_tiss_w.ie_tipo_tabela::text <> '') then
		cd_tipo_tabela_w := dados_tipo_conv_tiss_w.ie_tipo_tabela;
	end if;
		
end if;

if (coalesce(nr_seq_conta_proc_w::text, '') = '') and (cd_tipo_tabela_w = '00') and
	((nr_seq_conta_w IS NOT NULL AND nr_seq_conta_w::text <> '') or qt_regra_w > 0) then	
	nr_seq_conta_imp_w	:= nr_seq_conta_imp_p;
	nr_seq_conta_mat_imp_w := pls_imp_rec_glosa_mat(nr_seq_conta_imp_w, nr_seq_conta_w, vl_recursado_p, cd_tipo_tabela_w, cd_procedimento_p, ds_procedimento_p, dt_realizacao_p, nm_usuario_p, ds_justificativa_prest_p, cd_glosa_p, nr_seq_conta_mat_imp_w, nr_seq_item_tiss_p);
end if;

if (coalesce(nr_seq_conta_mat_imp_w::text, '') = '') then
	select	nextval('pls_rec_glosa_proc_imp_seq')
	into STRICT	nr_seq_conta_proc_imp_w
	;
	
	insert into pls_rec_glosa_proc_imp(
			nr_sequencia,nr_seq_conta_imp,dt_atualizacao,
			nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
			nr_seq_conta,nr_seq_conta_proc,cd_tipo_tabela,
			cd_procedimento,ds_procedimento,dt_realizacao,
			vl_recursado, dt_fim, cd_dente, cd_regiao_boca,
			cd_face_dente, qt_procedimento, cd_grau_partic,
			nr_seq_grau_partic, ds_justificativa_prest, cd_glosa_recursada,
			nr_seq_item_tiss)
		values (	nr_seq_conta_proc_imp_w, nr_seq_conta_imp_w, clock_timestamp(),
			nm_usuario_p, clock_timestamp(), nm_usuario_p,
			nr_seq_conta_w, nr_seq_conta_proc_w, cd_tipo_tabela_w,
			cd_procedimento_p, ds_procedimento_p, dt_realizacao_p,
			vl_recursado_p, dt_fim_p, cd_dente_p, cd_regiao_boca_p,
			cd_face_dente_p, qt_procedimento_p, cd_grau_partic_p,
			nr_seq_grau_copartic_w, ds_justificativa_prest_p, cd_glosa_p,
			nr_seq_item_tiss_p);
end if;

if (nr_seq_conta_proc_w IS NOT NULL AND nr_seq_conta_proc_w::text <> '') then
	
	for r_C01_w in C01(nr_seq_conta_proc_w) loop
		qt_recurso_w := qt_recurso_w + 1;
		ds_lotes_w := ds_lotes_w || pls_util_pck.enter_w || r_C01_w.nr_seq_lote || ' (' || r_C01_w.ds_situacao || ')';
	end loop;	
	
	if (qt_rec_glosa_w > 0) and (qt_recurso_w > qt_rec_glosa_w) then
		ds_observacao_w := 	'Quantidade de recursos enviados ultrapassa a quantidade maxima permitida. ' || pls_util_pck.enter_w ||
					'Qt enviada: ' || qt_recurso_w || '. Qt permitida: ' || qt_rec_glosa_w || pls_util_pck.enter_w || 
					'Lotes:' || pls_util_pck.enter_w ||
					ds_lotes_w;
		CALL pls_gravar_glosa_recurso_glosa('1820', nr_seq_conta_imp_w, nr_seq_conta_proc_imp_w, null, null, ds_observacao_w, nm_usuario_p);
	end if;
end if;

nr_seq_conta_proc_imp_p := nr_seq_conta_proc_imp_w;
nr_seq_conta_mat_imp_p	:= nr_seq_conta_mat_imp_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_imp_rec_glosa_proc ( nr_seq_conta_imp_p bigint, vl_recursado_p bigint, cd_tipo_tabela_p text, cd_procedimento_p text, ds_procedimento_p text, dt_realizacao_p timestamp, nm_usuario_p text, dt_fim_p timestamp, cd_dente_p text, cd_regiao_boca_p text, cd_face_dente_p text, qt_procedimento_p bigint, cd_grau_partic_p text, ds_justificativa_prest_p text, cd_glosa_p text, nr_seq_conta_proc_imp_p INOUT bigint, nr_seq_conta_mat_imp_p INOUT bigint, nr_seq_item_tiss_p pls_rec_glosa_mat_imp.nr_seq_item_tiss%type default null) FROM PUBLIC;

