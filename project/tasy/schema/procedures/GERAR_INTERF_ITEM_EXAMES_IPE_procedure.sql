-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_interf_item_exames_ipe (nr_seq_protocolo_p bigint) AS $body$
DECLARE


nr_sequencia_w			bigint := 0;
nr_seq_ant_w			bigint := 0;
tp_nota_w			smallint;
cd_prestador_w			bigint;
nr_interno_conta_w			bigint;
nr_atendimento_w			bigint;
dt_item_w			timestamp;
cd_item_convenio_w		bigint;
qt_item_w			double precision;
cd_funcao_executor_w		smallint;
ie_via_acesso_w			varchar(1);
ie_urgencia_w			smallint;
vl_honorario_w			double precision;
vl_total_item_w			double precision;
cd_brasindice_w			varchar(13);
cd_medico_executor_w		varchar(10);
cd_medico_exec_conv_w		w_interf_conta_item.cd_medico_exec_conv%type;
nm_medico_executor_w		varchar(60);
nr_crm_executor_w			varchar(20);
uf_crm_executor_w			varchar(2);
nr_cpf_executor_w			varchar(11);
nr_seq_protocolo_w		bigint;
cd_convenio_w			integer;
cd_cgc_hospital_w			varchar(14);
cd_cgc_convenio_w		varchar(14);
cd_interno_w			varchar(15);
ie_responsavel_credito_w		varchar(5);
nr_folha_w			bigint := 1;
nr_linha_w			bigint := 0;
ds_item_w			varchar(240);
tp_nota_ant_w			smallint := 0;
ie_tipo_item_w			smallint;
nr_seq_espitem_w			bigint;
cd_tipo_item_interf_w		smallint;
cd_area_procedimento_w		bigint;
pr_via_acesso_w			double precision;
ie_via_acesso_ipe_w		smallint;

ie_tipo_atendimento_w		smallint;
nr_seq_proc_princ_w		bigint;
vl_matmed_proc_princ_w		double precision;
vl_matmed_proc_princ_ww		double precision;
cd_procedimento_ref_w		bigint;
cd_area_proc_ref_w		bigint;
nr_seq_proc_ref_w			bigint;

ie_medico_w			varchar(1);
ie_auxiliar_w			varchar(1);
nr_indaux_w			smallint;
nr_interno_conta_ant_w		bigint;
cd_item_convenio_ant_w		bigint;
qt_auxiliares_w			integer	:=0;

nr_nota_inicial_w			bigint;
vl_ch_ipe_w			double precision;
qt_ch_ipe_w			w_interf_conta_item_ipe.qt_item%type;
vl_original_w			double precision:=0;
cd_categoria_parametro_w		varchar(10);

nr_atend_laudo_ipe_w		bigint;
nr_prescr_laudo_ipe_w		bigint;
nm_arquivo_pdf_w			varchar(150);
varregravinculacaolaudoipe_w	varchar(1);
nr_conta_ant_w			bigint:= 0;
nr_linha_retorno_w			bigint;
nr_nota_retorno_w			bigint;
varajustarfolhasconta_w		varchar(1):= 'N';
vartruncarqtdech_w			varchar(1):= 'N';
ie_agrup_data_ipe_exame_w		varchar(1):= 'N';
cd_estabelecimento_w		smallint;
vl_ch_honorarios_w			double precision;
vl_ch_custo_oper_w		double precision;
vl_m2_filme_w			double precision;
dt_vigencia_w			timestamp;
tx_ajuste_geral_w			double precision;
cd_edicao_amb_w		                integer;
var_ch_edicao_w			varchar(1) := 'N';
nr_seq_cbhpm_edicao_w		bigint;
ie_origem_proc_ref_w		bigint;
ie_gerar_nota_data_exames_w	varchar(15):= 'N';
ie_ordem_alfab_ipe_exames_w	varchar(15):= 'N';
dt_item_ant_w			timestamp;
cd_medico_req_w            		varchar(10);
ie_ordenacao_w			varchar(255);
nr_folha_item_w			bigint := 0;
nr_linha_item_w			bigint := 0;
nr_nota_item_w			bigint := 0;
ie_pos_item_ipe_exames_w		varchar(15):= 'N';
ie_gerar_arquivo_sem_laudo_w		varchar(15):= 'N';
ie_consid_item_neg_ipe_exa_w		varchar(15):= 'N';
vl_unit_matmed_princ_w		double precision;
ie_agrup_pro_vin_pric_ipe_ex_w		varchar(15);
ie_ajusta_val_matmed_ch_ipe_w		varchar(1);
ie_cons_num_nota_w		varchar(15) := 'N';
cd_conv_protocolo_w		protocolo_convenio.cd_convenio%type;
nm_usuario_w			usuario.nm_usuario%type := wheb_usuario_pck.get_nm_usuario;
ie_controla_nota_conta_ipe_w	parametro_faturamento.ie_controla_nota_conta_ipe%type;
qt_nota_prot_w			bigint := 0;

dt_mesano_referencia_w	protocolo_convenio.dt_mesano_referencia%type;
ie_gerou_conta_conv_atual_w	varchar(1) := 'N';

c01 CURSOR FOR
SELECT	a.nr_seq_protocolo,
	c.ie_tipo_item,
	min(c.nr_seq_item) nr_seq_espitem,
	obter_tipo_nota_ipe(a.ie_tipo_atendimento,c.ie_tipo_item,c.cd_item, a.cd_cgc_hospital,c.ie_origem_proced, c.nr_interno_conta) tp_nota,
	(coalesce(c.nr_cpf_executor,coalesce(c.cd_cgc_prestador,c.cd_cgc_hospital)))::numeric  cd_prestador,
	c.nr_interno_conta,
	CASE WHEN ie_agrup_data_ipe_exame_w='N' THEN  trunc(a.dt_entrada)  ELSE c.dt_item END  dt_item,
	(CASE WHEN a.ie_tipo_atendimento=3 THEN 			CASE WHEN c.ie_tipo_item=1 THEN c.cd_item_convenio WHEN c.ie_tipo_item=2 THEN 				CASE WHEN c.cd_tipo_item_interf=5 THEN '98007530' WHEN c.cd_tipo_item_interf=4 THEN '98007963'  ELSE '98007963' END   ELSE c.cd_item_convenio END   ELSE c.cd_item_convenio END )::numeric  cd_item_convenio,
	sum(c.qt_item) qt_item,
	coalesce(c.cd_funcao_executor,0) cd_funcao_executor,
	c.ie_via_acesso_inf ie_via_acesso,
	CASE WHEN coalesce(c.pr_hora_extra,0)=0 THEN 0 WHEN coalesce(c.pr_hora_extra,0)=1 THEN 0  ELSE 11 END  ie_urgencia,
	sum(c.vl_honorario) vl_honorario,
	sum(c.vl_total_item) vl_total_item,
	CASE WHEN a.ie_tipo_atendimento=3 THEN ' '  ELSE CASE WHEN c.cd_item_convenio='8001' THEN ' '  ELSE lpad(trim(both c.cd_brasindice),'13','0') END  END  cd_brasindice,
	c.nr_atendimento,
	CASE WHEN a.ie_tipo_atendimento=3 THEN ' '  ELSE CASE WHEN cd_item_convenio='8001' THEN wheb_mensagem_pck.get_texto(802246)  ELSE c.ds_item END  END  ds_item,
	c.cd_medico_executor,
	c.cd_medico_exec_conv,
	c.nm_medico_executor,
	c.nr_crm_executor,
	substr(c.uf_crm_executor,1,2) uf_crm_executor,
	c.nr_cpf_executor,
	c.cd_convenio,
	c.cd_cgc_hospital,
	c.cd_cgc_convenio,
	c.cd_interno,
	CASE WHEN c.cd_tipo_item_interf=5 THEN 'MEDIC'  ELSE c.ie_responsavel_credito END  ie_responsavel_credito,
	c.cd_tipo_item_interf,
	coalesce(x.cd_area_procedimento,0) cd_area_procedimento,
	coalesce(c.pr_via_acesso,0) pr_via_acesso,
	coalesce(c.vl_matmed_proc_princ,0) vl_matmed_proc_princ,
	sum(coalesce(c.vl_original,0)) vl_original,
	CASE WHEN ie_gerar_nota_data_exames_w='S' THEN 		CASE WHEN ie_agrup_data_ipe_exame_w='N' THEN  trunc(a.dt_entrada)  ELSE c.dt_item END   ELSE clock_timestamp() END  ie_ordenacao1,
	CASE WHEN ie_gerar_nota_data_exames_w='S' THEN  '0'  ELSE CASE WHEN ie_ordem_alfab_ipe_exames_w='S' THEN substr(obter_paciente_conta(c.nr_interno_conta,'D'),1,60)  ELSE c.nr_interno_conta END  END  ie_ordenacao2,
	c.pr_faturado
FROM w_interf_conta_cab a, w_interf_conta_item c
LEFT OUTER JOIN estrutura_procedimento_v x ON (c.cd_item = x.cd_procedimento AND c.ie_origem_proced = x.ie_origem_proced)
LEFT OUTER JOIN material y ON (c.cd_item = y.cd_material)
WHERE a.nr_interno_conta		= c.nr_interno_conta and a.nr_seq_protocolo		= nr_seq_protocolo_p    group by
	a.nr_seq_protocolo,
	obter_tipo_nota_ipe(a.ie_tipo_atendimento,c.ie_tipo_item,c.cd_item,a.cd_cgc_hospital,c.ie_origem_proced, c.nr_interno_conta),
	(coalesce(c.nr_cpf_executor,coalesce(c.cd_cgc_prestador,c.cd_cgc_hospital)))::numeric ,
	c.nr_interno_conta,
	CASE WHEN c.cd_item_convenio='8001' THEN 5  ELSE obter_classif_matproc_ipe(y.cd_material, x.cd_procedimento, x.ie_origem_proced,			a.ie_tipo_atendimento, c.cd_medico_executor) END ,
	CASE WHEN ie_agrup_data_ipe_exame_w='N' THEN  trunc(a.dt_entrada)  ELSE c.dt_item END ,
	CASE WHEN ie_agrup_data_ipe_exame_w='S' THEN  c.nr_seq_item  ELSE 0 END ,
	(CASE WHEN a.ie_tipo_atendimento=3 THEN 		CASE WHEN c.ie_tipo_item=1 THEN c.cd_item_convenio WHEN c.ie_tipo_item=2 THEN 			CASE WHEN c.cd_tipo_item_interf=5 THEN '98007530' WHEN c.cd_tipo_item_interf=4 THEN '98007963'  ELSE '98007963' END   ELSE c.cd_item_convenio END   ELSE c.cd_item_convenio END )::numeric ,
	coalesce(c.cd_funcao_executor,0),
	c.ie_via_acesso_inf,
	CASE WHEN coalesce(c.pr_hora_extra,0)=0 THEN 0 WHEN coalesce(c.pr_hora_extra,0)=1 THEN 0  ELSE 11 END ,
	CASE WHEN a.ie_tipo_atendimento=3 THEN ' '  ELSE CASE WHEN c.cd_item_convenio='8001' THEN ' '  ELSE lpad(trim(both c.cd_brasindice),'13','0') END  END ,
	c.nr_atendimento,
	CASE WHEN a.ie_tipo_atendimento=3 THEN ' '  ELSE CASE WHEN cd_item_convenio='8001' THEN  wheb_mensagem_pck.get_texto(802246)   ELSE c.ds_item END  END ,
	c.cd_medico_executor,
	c.cd_medico_exec_conv,
	c.nm_medico_executor,
	c.nr_crm_executor,
	c.uf_crm_executor,
	c.nr_cpf_executor,
	c.cd_convenio,
	c.cd_cgc_hospital,
	c.cd_cgc_convenio,
	c.cd_interno,
	CASE WHEN c.cd_tipo_item_interf=5 THEN 'MEDIC'  ELSE c.ie_responsavel_credito END ,
	c.ie_tipo_item,
	c.cd_tipo_item_interf,
	coalesce(x.cd_area_procedimento,0),
	coalesce(c.pr_via_acesso,0),
	coalesce(c.vl_matmed_proc_princ,0),
	CASE WHEN ie_gerar_nota_data_exames_w='S' THEN  CASE WHEN ie_agrup_data_ipe_exame_w='N' THEN  trunc(a.dt_entrada)  ELSE c.dt_item END   ELSE clock_timestamp() END ,
	CASE WHEN ie_gerar_nota_data_exames_w='S' THEN  '0'  ELSE CASE WHEN ie_ordem_alfab_ipe_exames_w='S' THEN substr(obter_paciente_conta(c.nr_interno_conta,'D'),1,60)  ELSE c.nr_interno_conta END  END ,
	c.pr_faturado
having (((sum(c.qt_item) > 0) and (ie_consid_item_neg_ipe_exa_w = 'N')) or ((sum(c.qt_item) <> 0)and (ie_consid_item_neg_ipe_exa_w = 'S')))
order by	/*decode(ie_gerar_nota_data_exames_w,'S',7,6),  Anderson 31/08/2010 - OS244785 retirei o decode e coloquei no select, pois nesta OS nÃ£o funcionava o order by corretamente com o decode */
		--34, Comentado para testar em 30/12/2016
		35, -- Inserido devido a OS 1358194
		4,7,2,pr_faturado desc,
		CASE WHEN c.cd_item_convenio='8001' THEN 5  ELSE obter_classif_matproc_ipe(y.cd_material, x.cd_procedimento, x.ie_origem_proced,			a.ie_tipo_atendimento, c.cd_medico_executor) END ,
		3,10;

type 		fetch_array is table of c01%rowtype;
s_array 	fetch_array;
i		integer := 1;
type vetor is table of fetch_array index by integer;
vetor_c01_w			vetor;

c02 CURSOR FOR
	SELECT	a.nr_atendimento,
		a.nr_prescricao
	from	laudo_paciente  b,
		procedimento_paciente a,
		conta_paciente c
	where  	c.nr_interno_conta = nr_interno_conta_w
	and 	coalesce(c.nr_seq_conta_origem, c.nr_interno_conta) = a.nr_interno_conta
	and 	a.nr_prescricao = nr_prescr_laudo_ipe_w
	and	coalesce(cd_motivo_exc_conta::text, '') = ''
	and	b.nr_seq_proc = a.nr_sequencia
	and	a.nr_prescricao > 0
	and 	coalesce(varregravinculacaolaudoipe_w,'C') = 'C'
	
union all

	SELECT  a.nr_atendimento,
             	a.nr_prescricao
	from    laudo_paciente  b,
             	procedimento_paciente a,
             	conta_paciente c
	where  	c.nr_atendimento = nr_atendimento_w
	and     c.nr_interno_conta = a.nr_interno_conta
	and      coalesce(cd_motivo_exc_conta::text, '') = ''
	and      b.nr_seq_proc = a.nr_sequencia
	and     a.nr_prescricao = b.nr_prescricao
	and     a.nr_prescricao > 0
	and 	coalesce(varregravinculacaolaudoipe_w,'C') = 'A'
	order by 2;

c03 CURSOR FOR
	SELECT  distinct
		a.nr_atendimento,
		a.nr_prescricao
	from    valor_dominio_v f,
		atend_paciente_unidade j,
		material_exame_lab k,
		exame_laboratorio e,
		pessoa_fisica c,
		pessoa_fisica b,
		atendimento_paciente_v g,
		procedimento_paciente h,
		prescr_procedimento d,
		prescr_medica a
	where   a.cd_pessoa_fisica   = b.cd_pessoa_fisica
	and    	a.cd_medico          = c.cd_pessoa_fisica
	and    	j.nr_atendimento     = g.nr_atendimento
	and    	k.cd_material_exame  = d.cd_material_exame
	and    	j.nr_seq_interno     = (obter_atepacu_paciente(g.nr_atendimento, 'A'))
	and    	d.nr_prescricao      = a.nr_prescricao
	and    	a.nr_atendimento     = g.nr_atendimento
	and    	(d.nr_seq_exame IS NOT NULL AND d.nr_seq_exame::text <> '')
	and    	d.nr_seq_exame       = e.nr_seq_exame
	and    	d.ie_status_atend    = f.vl_dominio
	and    	d.nr_prescricao      = h.nr_prescricao 			--Retirado o (+)
	and    	d.nr_sequencia       = h.nr_sequencia_prescricao 	--Retirado o (+)
	and    	f.cd_dominio         = 1030
	and    	h.nr_interno_conta   = nr_interno_conta_w
	and 	a.nr_prescricao	     = nr_prescr_laudo_ipe_w
	and   	(h.nr_interno_conta IS NOT NULL AND h.nr_interno_conta::text <> '')
	and    	coalesce(h.cd_motivo_exc_conta::text, '') = ''
	order by 2;

C04 CURSOR FOR
	SELECT	a.nr_seq_proc_princ,
		sum(a.vl_total_item) vl_matmed_proc_princ,
		sum(trunc(vl_unitario_item * a.qt_item,2)) vl_unit_matmed_princ
	from	w_interf_conta_item a
	where	a.nr_seq_protocolo	= nr_seq_protocolo_p
	and  	(a.nr_seq_proc_princ IS NOT NULL AND a.nr_seq_proc_princ::text <> '')
	and 	a.nr_seq_proc_princ > 0
	group by	a.nr_seq_proc_princ;


type 		fetch_array4 is table of c04%rowtype;
s_array4 	fetch_array4;
j		integer := 1;
type vetor4 is table of fetch_array4 index by integer;
vetor_c04_w			vetor4;
BEGIN

varregravinculacaolaudoipe_w	:= obter_valor_param_usuario(85,  98, obter_perfil_ativo, nm_usuario_w, wheb_usuario_pck.get_cd_estabelecimento);
varajustarfolhasconta_w		:= obter_valor_param_usuario(85, 101, obter_perfil_ativo, nm_usuario_w, wheb_usuario_pck.get_cd_estabelecimento);
vartruncarqtdech_w		:= obter_valor_param_usuario(85, 103, obter_perfil_ativo, nm_usuario_w, wheb_usuario_pck.get_cd_estabelecimento);
var_ch_edicao_w			:= obter_valor_param_usuario(85, 119, obter_perfil_ativo, nm_usuario_w, wheb_usuario_pck.get_cd_estabelecimento);
ie_gerar_arquivo_sem_laudo_w	:= obter_valor_param_usuario(85, 193, obter_perfil_ativo, nm_usuario_w, wheb_usuario_pck.get_cd_estabelecimento);
ie_cons_num_nota_w		:= coalesce(obter_valor_param_usuario(85, 233, obter_perfil_ativo, nm_usuario_w, wheb_usuario_pck.get_cd_estabelecimento),'N');

select	coalesce(somente_numero(nr_seq_doc_convenio),0),
	cd_convenio,
	dt_mesano_referencia
into STRICT	nr_nota_inicial_w,
	cd_conv_protocolo_w,
	dt_mesano_referencia_w
from	protocolo_convenio
where	nr_seq_protocolo	= nr_seq_protocolo_p  LIMIT 1;

select	coalesce(max(ie_agrup_data_ipe_exame), 'N'),
	coalesce(max(ie_gerar_nota_data_ipe_exame), 'N'),
	coalesce(max(ie_ordem_alfab_ipe_exames),'N'),
	coalesce(max(ie_pos_item_ipe_exames),'N'),
	coalesce(max(ie_consid_item_neg_ipe_exa),'N'),
	coalesce(max(ie_agrup_pro_vin_pric_ipe_ex),'N'),
	coalesce(max(ie_ajusta_val_matmed_ch_ipe),'N'),
	coalesce(max(ie_controla_nota_conta_ipe),'N')
into STRICT	ie_agrup_data_ipe_exame_w,		/*             'S' ->  NÃ£o Agrupa a data             	|        	'N' ->  Agrupa a data   	OS 152362 11/07/2009 FabrÃ­cio	*/
	ie_gerar_nota_data_exames_w,	/* 	'S' ->  Gerar uma nova nota a cada alteraÃ§Ã£o de mÃªs de referÃªncia dos procedimentos	 			*/
	ie_ordem_alfab_ipe_exames_w, 	/*	'S' ->  OrdenaÃ§Ã£o alfabÃ©tica das contas	|	'N' -> OrdenÃ§Ã£o pelo nÃºmero da conta				*/
	ie_pos_item_ipe_exames_w,		/*	'S' ->  Grava a sequÃªncia em que os itens foram gerado da primeira vez	 					*/
	ie_consid_item_neg_ipe_exa_w,	/*	'S' - Considera os itens com quantidade zero | 'N' - NÃ£o considerada os itens com quantidade zero 	*/
	ie_agrup_pro_vin_pric_ipe_ex_w,
	ie_ajusta_val_matmed_ch_ipe_w,
	ie_controla_nota_conta_ipe_w
from	parametro_faturamento
where	cd_estabelecimento	= wheb_usuario_pck.get_cd_estabelecimento;

if (ie_cons_num_nota_w = 'S') and (ie_controla_nota_conta_ipe_w = 'S') then
	begin
	if (consiste_nr_conta_conv_prot(nr_seq_protocolo_p,(nr_nota_inicial_w + 1)) = 'N') then
		begin

		nr_nota_inicial_w := coalesce(obter_nr_conta_conv_atual(cd_conv_protocolo_w, dt_mesano_referencia_w),0);

		update	protocolo_convenio
		set	nr_seq_doc_convenio = nr_nota_inicial_w + 1
		where	nr_seq_protocolo = nr_seq_protocolo_p;

		end;
	end if;
	end;
end if;

if (coalesce(ie_agrup_pro_vin_pric_ipe_ex_w,'N') = 'S') then
	begin
	open c04;
	loop
	fetch c04 bulk collect into s_array4 limit 100000;
		vetor_c04_w(j) := s_array4;
		j := j + 1;
	EXIT WHEN NOT FOUND; /* apply on c04 */
	end loop;
	close c04;
	for i in 1..vetor_c04_w.count loop
		begin
		s_array4 := vetor_c04_w(i);
		for z in 1..s_array4.count loop
			begin

			nr_seq_proc_princ_w	:= s_array4[z].nr_seq_proc_princ;
			vl_matmed_proc_princ_w	:= s_array4[z].vl_matmed_proc_princ;
			vl_unit_matmed_princ_w	:= s_array4[z].vl_unit_matmed_princ;

			/* obter o procedimento de referencia */

			select coalesce(max(cd_item),0),
				 coalesce(max(nr_sequencia),0),
				 coalesce(max(ie_origem_proced),1)
			into STRICT	 cd_procedimento_ref_w,
				 nr_seq_proc_ref_w,
				 ie_origem_proc_ref_w
			from	 w_interf_conta_item
			where	 nr_seq_protocolo	= nr_seq_protocolo_p
			and	 nr_seq_item	= nr_seq_proc_princ_w;

			/* obter area do procedimento de referencia, deve ser 3-diagnose e terapia */

			select coalesce(max(cd_area_procedimento),0)
			into STRICT	 cd_area_proc_ref_w
			from	 estrutura_procedimento_v
			where	 cd_procedimento	= cd_procedimento_ref_w
			and	 ie_origem_proced	= ie_origem_proc_ref_w;

			if	((cd_area_proc_ref_w	= 3) or (obter_se_proc_agrupa_mat_ipe(cd_procedimento_ref_w,ie_origem_proc_ref_w,wheb_usuario_pck.get_cd_estabelecimento) = 'S')) then
				begin

				update	w_interf_conta_item
				set	vl_matmed_proc_princ	= vl_matmed_proc_princ +  vl_matmed_proc_princ_w
				where	nr_sequencia		= nr_seq_proc_ref_w;

				delete from w_interf_conta_item
				where	 nr_seq_protocolo		= nr_seq_protocolo_p
				and  	 nr_seq_proc_princ 		= nr_seq_proc_princ_w;
				end;
			end if;

			end;
		end loop;
		end;
	end loop;

	end;
end if;

open c01;
loop
fetch c01 bulk collect into s_array limit 100000;
	vetor_c01_w(i) := s_array;
	i := i + 1;
EXIT WHEN NOT FOUND; /* apply on c01 */
end loop;
close c01;

for i in 1..vetor_c01_w.count loop
	begin
	s_array := vetor_c01_w(i);

	if (ie_controla_nota_conta_ipe_w = 'S') and (ie_gerou_conta_conv_atual_w = 'N')then
		begin

		nr_nota_inicial_w := gerar_nota_conta_convenio_amb(nr_seq_protocolo_p, cd_conv_protocolo_w, coalesce(s_array.count,0), nm_usuario_w, nr_nota_inicial_w);
		ie_gerou_conta_conv_atual_w := 'S';
		end;
	end if;

	for z in 1..s_array.count loop
		begin

		nr_seq_protocolo_w		:= s_array[z].nr_seq_protocolo;
		ie_tipo_item_w			:= s_array[z].ie_tipo_item;
		nr_seq_espitem_w		:= s_array[z].nr_seq_espitem;
		tp_nota_w			:= s_array[z].tp_nota;
		cd_prestador_w			:= s_array[z].cd_prestador;
		nr_interno_conta_w		:= s_array[z].nr_interno_conta;
		dt_item_w			:= s_array[z].dt_item;
		cd_item_convenio_w		:= s_array[z].cd_item_convenio;
		qt_item_w			:= s_array[z].qt_item;
		cd_funcao_executor_w		:= s_array[z].cd_funcao_executor;
		ie_via_acesso_w			:= s_array[z].ie_via_acesso;
		ie_urgencia_w			:= s_array[z].ie_urgencia;
		vl_honorario_w			:= s_array[z].vl_honorario;
		vl_total_item_w			:= s_array[z].vl_total_item;
		cd_brasindice_w			:= s_array[z].cd_brasindice;
		nr_atendimento_w		:= s_array[z].nr_atendimento;
		ds_item_w			:= s_array[z].ds_item;
		cd_medico_executor_w		:= s_array[z].cd_medico_executor;
		cd_medico_exec_conv_w		:= s_array[z].cd_medico_exec_conv;
		nm_medico_executor_w		:= s_array[z].nm_medico_executor;
		nr_crm_executor_w		:= s_array[z].nr_crm_executor;
		uf_crm_executor_w		:= s_array[z].uf_crm_executor;
		nr_cpf_executor_w		:= s_array[z].nr_cpf_executor;
		cd_convenio_w			:= s_array[z].cd_convenio;
		cd_cgc_hospital_w		:= s_array[z].cd_cgc_hospital;
		cd_cgc_convenio_w		:= s_array[z].cd_cgc_convenio;
		cd_interno_w			:= s_array[z].cd_interno;
		ie_responsavel_credito_w	:= s_array[z].ie_responsavel_credito;
		cd_tipo_item_interf_w		:= s_array[z].cd_tipo_item_interf;
		cd_area_procedimento_w		:= s_array[z].cd_area_procedimento;
		pr_via_acesso_w			:= s_array[z].pr_via_acesso;
		vl_matmed_proc_princ_w		:= s_array[z].vl_matmed_proc_princ;
		vl_original_w			:= s_array[z].vl_original;
		ie_ordenacao_w			:= s_array[z].ie_ordenacao1;
		ie_ordenacao_w			:= s_array[z].ie_ordenacao2;

		if (ie_pos_item_ipe_exames_w = 'S') and (ie_controla_nota_conta_ipe_w = 'N') then
			begin
			nr_folha_item_w	:= coalesce(obter_posicao_item_nota_ipe(nr_seq_espitem_w,nr_interno_conta_w,nr_seq_protocolo_w,cd_item_convenio_w,'F'),0);
			nr_linha_item_w	:= coalesce(obter_posicao_item_nota_ipe(nr_seq_espitem_w,nr_interno_conta_w,nr_seq_protocolo_w,cd_item_convenio_w,'L'),0);
			nr_nota_item_w	:= coalesce(obter_posicao_item_nota_ipe(nr_seq_espitem_w,nr_interno_conta_w,nr_seq_protocolo_w,cd_item_convenio_w,'N'),0);
			end;
		end if;

		if	((nr_folha_item_w = 0 AND ie_pos_item_ipe_exames_w = 'S') or (ie_pos_item_ipe_exames_w = 'N')) then
			begin

			if (tp_nota_ant_w <> 0) and (tp_nota_ant_w <> tp_nota_w) then
				begin
				tp_nota_ant_w	:= tp_nota_w;
				nr_folha_w	:= 0;
				nr_linha_w	:= 21;
				end;
			end if;

			nr_linha_w	:= nr_linha_w + 1;
			if (nr_linha_w	> 20) and (nr_interno_conta_w = nr_conta_ant_w) and (varajustarfolhasconta_w = 'S') then

				begin
				-- Contas na mesma devem ser separadas (NÃ£o pode haver itens da mesma conta no final da pÃ¡gina 1  e no inicio da pÃ¡gina 2 por exemplo.
				nr_linha_retorno_w := ajustar_folhas_ipe_exames(nr_folha_w, nr_interno_conta_w, nr_seq_protocolo_p, nr_linha_retorno_w);

				if (nr_linha_retorno_w <> 0) then
					nr_linha_w	:= nr_linha_retorno_w + 1;
					nr_nota_inicial_w	:= nr_nota_inicial_w + 1;
					nr_folha_w	:= nr_folha_w + 1;
				end if;
				end;
			end if;


			if (nr_linha_w	> 20) then
				begin
				nr_nota_inicial_w	:= nr_nota_inicial_w + 1;
				nr_folha_w	:= nr_folha_w + 1;
				nr_linha_w	:= 1;
				end;
			end if;

			if (ie_gerar_nota_data_exames_w = 'S') and (trunc(dt_item_w,'mm') <> trunc(dt_item_ant_w,'mm')) then
				begin
				nr_nota_inicial_w	:= nr_nota_inicial_w + 1;
				nr_folha_w	:= nr_folha_w + 1;
				nr_linha_w	:= 1;
				end;
			end if;

			if (cd_item_convenio_w	= 32200005) 	and (nr_linha_w		= 1)		then
				begin
				update 	w_interf_conta_item_ipe
				set 	nr_folha 		= nr_folha_w,
					nr_linha		= 1,
					nr_seq_conta_convenio	= nr_nota_inicial_w
				where  	nr_sequencia 		= nr_seq_ant_w;
				nr_linha_w		:= 2;
				end;
			end if;

			if (ie_controla_nota_conta_ipe_w = 'S') then
				begin

				select	count(1)
				into STRICT	qt_nota_prot_w
				from	protocolo_conv_nota_conta
				where	nr_seq_protocolo = nr_seq_protocolo_p
				and	nr_nota_conta = nr_nota_inicial_w;

				if (qt_nota_prot_w = 0) and (ie_gerou_conta_conv_atual_w = 'N')then
					begin
					nr_nota_inicial_w := gerar_nota_conta_convenio_amb(nr_seq_protocolo_p, cd_conv_protocolo_w, 0, nm_usuario_w, nr_nota_inicial_w);
					ie_gerou_conta_conv_atual_w := 'S';
					end;
				end if;
				end;
			end if;
			end;
		else
			begin
			tp_nota_ant_w		:= tp_nota_w;
			nr_folha_w		:= nr_folha_item_w;
			nr_linha_w		:= nr_linha_item_w;
			nr_nota_inicial_w	:= nr_nota_item_w;
			end;
		end if;

		if (nr_interno_conta_w <> nr_conta_ant_w) then
			nr_conta_ant_w		:= nr_interno_conta_w;
		end if;

		dt_item_ant_w 		:= dt_item_w;

		nm_arquivo_pdf_w:= '';

		select 	coalesce(max(nr_prescricao),0)
		into STRICT	nr_prescr_laudo_ipe_w
		from 	procedimento_paciente
		where 	nr_sequencia = nr_seq_espitem_w;

		open c02;
		loop
		fetch c02 into
			nr_atend_laudo_ipe_w,
			nr_prescr_laudo_ipe_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			begin
			nm_arquivo_pdf_w:= 'LaudoIPE_C' || nr_interno_conta_w || '_A' || nr_atend_laudo_ipe_w || '_P' || nr_prescr_laudo_ipe_w || '.PDF';
			end;
		end loop;
		close c02;

		if (coalesce(nm_arquivo_pdf_w::text, '') = '') then

			open c03;
			loop
			fetch c03 into
				nr_atend_laudo_ipe_w,
				nr_prescr_laudo_ipe_w;
			EXIT WHEN NOT FOUND; /* apply on c03 */
				begin
				nm_arquivo_pdf_w:= 'LaudoIPE_C' || nr_interno_conta_w || '_A' || nr_atend_laudo_ipe_w || '_P' || nr_prescr_laudo_ipe_w || '.PDF';
				end;
			end loop;
			close c03;

		end if;

		if (coalesce(ie_gerar_arquivo_sem_laudo_w,'N') = 'S') and (coalesce(nm_arquivo_pdf_w,'X') = 'X') and (coalesce(nr_prescr_laudo_ipe_w,0) <> 0) then
			nm_arquivo_pdf_w:= 'LaudoIPE_C' || nr_interno_conta_w || '_A' || nr_atendimento_w || '_P' || nr_prescr_laudo_ipe_w || '.PDF';
		end if;

		/* Criar sequence */

		select 	nextval('w_interf_conta_item_ipe_seq')
		into STRICT	nr_sequencia_w
		;

		nr_seq_ant_w	:= nr_sequencia_w;

		/* Define via de acesso */

		ie_via_acesso_ipe_w	:= 00;
		/* OS 176639 Geliard*/

		/* Criado para a OS 225124, Para enviar o medico requisitante do procedimento no lugar do medico do atendimento.*/

		if (cd_cgc_hospital_w = '88633227000115') then
			begin

			begin
			select	cd_medico_req
			into STRICT	cd_medico_req_w
			from	procedimento_paciente
			where	nr_sequencia	= nr_seq_espitem_w;
			exception
				when others then
				cd_medico_req_w	:= null;
			end;

			begin
			select	cd_pessoa_fisica,
				nr_crm,
				substr(uf_crm,1,2),
				substr(obter_nome_pf(cd_pessoa_fisica),1,60),
				substr(obter_dados_pf(cd_pessoa_fisica,'CPF'),1,11)
			into STRICT	cd_medico_executor_w,
				nr_crm_executor_w,
				uf_crm_executor_w,
				nm_medico_executor_w,
				nr_cpf_executor_w
			from	medico
			where	cd_pessoa_fisica = cd_medico_req_w;
			exception
				when others then
				cd_medico_executor_w	:= null;
				nr_crm_executor_w 	:= null;
				uf_crm_executor_w		:= null;
				nm_medico_executor_w	:= null;
				nr_cpf_executor_w 		:= null;
			end;
			end;
		end if;

		insert into w_interf_conta_item_ipe(
			nr_sequencia,
			nr_atendimento,
			nr_interno_conta,
			cd_item_convenio,
			ds_item,
			qt_item,
			dt_item,
			vl_total_item,
			cd_medico_executor,
			cd_medico_exec_conv,
			nm_medico_executor,
			nr_crm_executor,
			uf_crm_executor,
			nr_cpf_executor,
			cd_funcao_executor,
			ie_via_acesso,
			cd_brasindice,
			nr_seq_protocolo,
			cd_convenio,
			cd_cgc_hospital,
			cd_cgc_convenio,
			cd_interno,
			ie_responsavel_credito,
			vl_honorario,
			cd_prestador,
			nr_folha,
			nr_linha,
			tp_nota,
			ie_urgencia,
			ie_tipo_item,
			nr_seq_conta_convenio,
			vl_original,
			nm_arquivo_pdf)
		values (
			nr_sequencia_w,
			nr_atendimento_w,
			nr_interno_conta_w,
			cd_item_convenio_w,
			ds_item_w,
			qt_item_w,
			dt_item_w,
			vl_total_item_w,
			cd_medico_executor_w,
			cd_medico_exec_conv_w,
			nm_medico_executor_w,
			nr_crm_executor_w,
			uf_crm_executor_w,
			nr_cpf_executor_w,
			cd_funcao_executor_w,
			ie_via_acesso_ipe_w,
			cd_brasindice_w,
			nr_seq_protocolo_w,
			cd_convenio_w,
			cd_cgc_hospital_w,
			cd_cgc_convenio_w,
			cd_interno_w,
			ie_responsavel_credito_w,
			vl_honorario_w,
			cd_prestador_w,
			nr_folha_w,
			nr_linha_w,
			tp_nota_w,
			ie_urgencia_w,
			cd_tipo_item_interf_w,
			nr_nota_inicial_w,
			vl_original_w,
			nm_arquivo_pdf_w);

		if (nr_folha_item_w = 0) and (ie_pos_item_ipe_exames_w = 'S') then
			begin

			insert into 	w_posicao_item_nota_ipe(
					nr_sequencia,
					nr_seq_item,
					nr_interno_conta,
					nr_seq_protocolo,
					cd_item_convenio,
					nr_linha_item,
					nr_folha_item,
					nr_nota_item,
					nm_usuario,
					dt_atualizacao,
					nm_usuario_nrec,
					dt_atualizacao_nrec)
			values (	nextval('w_posicao_item_nota_ipe_seq'),
					nr_seq_espitem_w,
					nr_interno_conta_w,
					nr_seq_protocolo_w,
					cd_item_convenio_w,
					nr_linha_w,
					nr_folha_w,
					nr_nota_inicial_w,
					nm_usuario_w,
					clock_timestamp(),
					nm_usuario_w,
					clock_timestamp());
			end;
		end if;

		/* tratar vlr matmed de exames que devem gerar acumulado no cÃ³digo 32200005 logo apÃ³s o exame */

		if (vl_matmed_proc_princ_w > 0) then
			begin
			select nextval('w_interf_conta_item_ipe_seq')
			into STRICT	nr_sequencia_w
			;


			select 	max(cd_categoria_parametro),
				max(cd_estabelecimento)
			into STRICT	cd_categoria_parametro_w,
				cd_estabelecimento_w
			from 	conta_paciente
			where 	nr_interno_conta = nr_interno_conta_w;

			SELECT * FROM obter_edicao_proc_conv(cd_estabelecimento_w, cd_convenio_w, cd_categoria_parametro_w, dt_item_w, 32200005, cd_edicao_amb_w, vl_ch_honorarios_w, vl_ch_custo_oper_w, vl_m2_filme_w, dt_vigencia_w, tx_ajuste_geral_w, nr_seq_cbhpm_edicao_w) INTO STRICT cd_edicao_amb_w, vl_ch_honorarios_w, vl_ch_custo_oper_w, vl_m2_filme_w, dt_vigencia_w, tx_ajuste_geral_w, nr_seq_cbhpm_edicao_w;

			/* Buscar valor do ch */

			if (coalesce(cd_edicao_amb_w,0) <> 0) and (coalesce(var_ch_edicao_w,'N') = 'S') then
				select coalesce(max(vl_ch_honorarios),1)
				into STRICT vl_ch_ipe_w
				from convenio_amb
				where cd_convenio = cd_convenio_w
				and   cd_categoria = cd_categoria_parametro_w
				and   cd_edicao_amb = cd_edicao_amb_w;
			else
				select coalesce(max(vl_ch_honorarios),1)
				into STRICT vl_ch_ipe_w
				from convenio_amb
				where cd_convenio = cd_convenio_w
				and   cd_categoria = cd_categoria_parametro_w;
			end if;

			if (vartruncarqtdech_w = 'S') then
				qt_ch_ipe_w  := trunc(vl_matmed_proc_princ_w / vl_ch_ipe_w);
			else
				qt_ch_ipe_w  := vl_matmed_proc_princ_w / vl_ch_ipe_w;
			end if;

			if (ie_ajusta_val_matmed_ch_ipe_w = 'S') then
				vl_matmed_proc_princ_ww		:= (qt_ch_ipe_w * vl_ch_ipe_w);


				if (vl_matmed_proc_princ_ww <> vl_matmed_proc_princ_w) then
					vl_matmed_proc_princ_w := vl_matmed_proc_princ_ww;
				end if;
			end if;

			/* Criado para a OS 189525, Para forÃ§ar o valor total dos mat med a ser igual ao resultado da multiplicaÃ§Ã£o feita pelo convÃªnio.*/

			if (cd_cgc_hospital_w = '91162511000165') then
				begin
				/* OS  353716 alterado para o vl_ch_ipe_W para vl_ch_custo_oper_w */

				qt_ch_ipe_w := 0;


				if (vartruncarqtdech_w = 'S') then
					qt_ch_ipe_w  := trunc(vl_matmed_proc_princ_w / vl_ch_custo_oper_w);
				else
					qt_ch_ipe_w  := vl_matmed_proc_princ_w / vl_ch_custo_oper_w;
				end if;


				vl_matmed_proc_princ_ww		:= trunc((qt_ch_ipe_w * vl_ch_custo_oper_w),2); /* OS  353716 alterado para o vl_ch_ipe_W para vl_ch_custo_oper_w */
				/*colocado trunc para a os 196005 - Guilherme 02/03/2010*/

				if (vl_matmed_proc_princ_ww <> vl_matmed_proc_princ_w) then
					vl_matmed_proc_princ_w := vl_matmed_proc_princ_ww;
				end if;
				end;
			end if;

			/*Criado este tratamento para a OS 227780 - por solicitaÃ§Ã£o do FabrÃ­cio. Este tratamento foi retirado da view HP_IPE_EXAMES_V,
			para que os valores pudessem ser ajustados conforme o exigido pelo convÃªnio*/
			if (cd_cgc_hospital_w = '88633227000115')  then
				begin
				qt_ch_ipe_w			:= round(qt_ch_ipe_w / 0.0645);
				vl_matmed_proc_princ_ww		:= (qt_ch_ipe_w * 0.0645);


				if (vl_matmed_proc_princ_ww <> vl_matmed_proc_princ_w) then
					vl_matmed_proc_princ_w := vl_matmed_proc_princ_ww;
				end if;
				end;
			end if;


			if (cd_cgc_hospital_w = '89428718000197') then
				begin
				qt_ch_ipe_w			:= round(vl_matmed_proc_princ_w / vl_ch_ipe_w);
				vl_matmed_proc_princ_ww		:= (qt_ch_ipe_w * vl_ch_ipe_w);
				if (vl_matmed_proc_princ_ww <> vl_matmed_proc_princ_w) then
					vl_matmed_proc_princ_w := vl_matmed_proc_princ_ww;
				end if;
				end;
			end if;

			/*OS 240615*/

			if (cd_cgc_hospital_w = '92741016000254') then
				begin
				qt_ch_ipe_w			:= round(vl_matmed_proc_princ_w / 0.0645);
				vl_matmed_proc_princ_ww		:= trunc((qt_ch_ipe_w * 0.0645),2);

				if (vl_matmed_proc_princ_ww <> vl_matmed_proc_princ_w) then
					vl_matmed_proc_princ_w := vl_matmed_proc_princ_ww;
				end if;
				end;
			end if;
			/*OS 506509*/

			if (cd_cgc_hospital_w = '92815000000168') then
				begin
				qt_ch_ipe_w			:= trunc(vl_matmed_proc_princ_w / 0.0645);
				vl_matmed_proc_princ_ww		:= trunc((qt_ch_ipe_w * 0.0645),2);

				if (vl_matmed_proc_princ_ww <> vl_matmed_proc_princ_w) then
					vl_matmed_proc_princ_w := vl_matmed_proc_princ_ww;
				end if;
				end;
			end if;
			/*OS 582686*/

			if (cd_cgc_hospital_w = '94964392000152') then
				begin
				qt_ch_ipe_w			:= trunc(vl_matmed_proc_princ_w / 0.0645);
				vl_matmed_proc_princ_ww		:= trunc((qt_ch_ipe_w * 0.0645),2);

				if (vl_matmed_proc_princ_ww <> vl_matmed_proc_princ_w) then
					vl_matmed_proc_princ_w := vl_matmed_proc_princ_ww;
				end if;
				end;
			end if;

			/*OS 610937*/

			if (cd_cgc_hospital_w = '87701249000374') then
				vl_matmed_proc_princ_ww		:= trunc((qt_ch_ipe_w * vl_ch_ipe_w),2);


				if (vl_matmed_proc_princ_ww <> vl_matmed_proc_princ_w) then
					vl_matmed_proc_princ_w := vl_matmed_proc_princ_ww;
				end if;
			end if;

			/*  656540 */

			if (cd_cgc_hospital_w = '92962869002006')  then
				begin
				qt_ch_ipe_w			:= (qt_ch_ipe_w / 0.0645); -- removido round((qt_ch_ipe_w / 0.0645) OS764998
				vl_matmed_proc_princ_ww		:= (qt_ch_ipe_w * 0.0645);


				qt_ch_ipe_w := round(qt_ch_ipe_w);


				if (vl_matmed_proc_princ_ww <> vl_matmed_proc_princ_w) then
					vl_matmed_proc_princ_w := vl_matmed_proc_princ_ww;
				end if;
				end;
			end if;

			/*OS 808111*/

			if (cd_cgc_hospital_w = '95815668000101') then
				begin
				qt_ch_ipe_w			:= trunc(vl_matmed_proc_princ_w / 0.0645);
				vl_matmed_proc_princ_ww		:= trunc(qt_ch_ipe_w * 0.0645);


				if (vl_matmed_proc_princ_ww <> vl_matmed_proc_princ_w) then
					vl_matmed_proc_princ_w := vl_matmed_proc_princ_ww;
				end if;
				end;
			end if;

			nr_linha_w	:= nr_linha_w + 1;

			if (nr_linha_w	> 20) and (nr_interno_conta_w = nr_conta_ant_w) and (varajustarfolhasconta_w = 'S') then

				begin
				-- Contas na mesma devem ser separadas (NÃ£o pode haver itens da mesma conta no final da pÃ¡gina 1  e no inicio da pÃ¡gina 2 por exemplo.
				nr_linha_retorno_w := ajustar_folhas_ipe_exames(nr_folha_w, nr_interno_conta_w, nr_seq_protocolo_p, nr_linha_retorno_w);
				if (nr_linha_retorno_w <> 0) then
					nr_linha_w		:= nr_linha_retorno_w + 1;
					nr_nota_inicial_w	:= nr_nota_inicial_w + 1;
					nr_folha_w		:= nr_folha_w + 1;
				end if;
				end;
			end if;

			if (nr_interno_conta_w <> nr_conta_ant_w) then
				nr_conta_ant_w		:= nr_interno_conta_w;
			end if;

			if (nr_linha_w	> 20) then
				begin
				nr_nota_inicial_w	:= nr_nota_inicial_w + 1;
				nr_folha_w		:= nr_folha_w + 1;
				update w_interf_conta_item_ipe
				set 	 nr_folha 	= nr_folha_w,
				    	 nr_linha	= 1,
					 nr_seq_conta_convenio = nr_nota_inicial_w /* IncluÃ­ essa linha - FabrÃ­cio OS 79615 */
				where  nr_sequencia = nr_seq_ant_w;
				nr_linha_w		:= 2;
				end;
			end if;

			insert into w_interf_conta_item_ipe(
				nr_sequencia,
				nr_atendimento,
				nr_interno_conta,
				cd_item_convenio,
				ds_item,
				qt_item,
				dt_item,
				vl_total_item,
				cd_medico_executor,
				cd_medico_exec_conv,
				nm_medico_executor,
				nr_crm_executor,
				uf_crm_executor,
				nr_cpf_executor,
				cd_funcao_executor,
				ie_via_acesso,
				cd_brasindice,
				nr_seq_protocolo,
				cd_convenio,
				cd_cgc_hospital,
				cd_cgc_convenio,
				cd_interno,
				ie_responsavel_credito,
				vl_honorario,
				cd_prestador,
				nr_folha,
				nr_linha,
				tp_nota,
				ie_urgencia,
				ie_tipo_item,
				nr_seq_conta_convenio,
				vl_original)
			values (
				nr_sequencia_w,
				nr_atendimento_w,
				nr_interno_conta_w,
				32200005,
				wheb_mensagem_pck.get_texto(802245),
				qt_ch_ipe_w,
				dt_item_w,
				vl_matmed_proc_princ_w,
				cd_medico_executor_w,
				cd_medico_exec_conv_w,
				nm_medico_executor_w,
				nr_crm_executor_w,
				uf_crm_executor_w,
				nr_cpf_executor_w,
				cd_funcao_executor_w,
				ie_via_acesso_ipe_w,
				cd_brasindice_w,
				nr_seq_protocolo_w,
				cd_convenio_w,
				cd_cgc_hospital_w,
				cd_cgc_convenio_w,
				cd_interno_w,
				ie_responsavel_credito_w,
				vl_honorario_w,
				cd_prestador_w,
				nr_folha_w,
				nr_linha_w,
				tp_nota_w,
				ie_urgencia_w,
				cd_tipo_item_interf_w,
				nr_nota_inicial_w,
				vl_matmed_proc_princ_w);
			end;
		end if;

		update	conta_paciente
		set	nr_conta_convenio	= nr_nota_inicial_w,
			dt_atualizacao		= clock_timestamp(),
			dt_atual_conta_conv	= clock_timestamp(),
			nm_usuario		= nm_usuario_w
		where	nr_interno_conta	= nr_interno_conta_w;

		commit;

		end;
	end loop;
	end;
end loop;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_interf_item_exames_ipe (nr_seq_protocolo_p bigint) FROM PUBLIC;

