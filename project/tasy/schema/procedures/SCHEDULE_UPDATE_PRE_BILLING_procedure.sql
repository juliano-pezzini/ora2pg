-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE schedule_update_pre_billing ( dt_referencia_p timestamp, nm_usuario_p text) AS $body$
DECLARE


qtd_pf_atualizando_w		bigint;
nr_sequencia_w			pre_fatur_atualizacao.nr_sequencia%type;
dt_agendamento_w		pre_fatur_atualizacao.dt_agendamento%type;
cd_estabelecimento_w		pre_fatur_atualizacao.cd_estabelecimento%type;
ds_erro_w			pre_fatur_atualizacao.ds_erro%type;

c01 CURSOR FOR
SELECT		a.nr_sequencia,
		a.dt_agendamento,
		a.cd_estabelecimento
from		pre_fatur_atualizacao a
where		coalesce(a.dt_inicio_real::text, '') = ''
and		a.dt_agendamento <= dt_referencia_p
order by	a.dt_agendamento,
		a.dt_atualizacao;


BEGIN
select	count(1)
into STRICT	qtd_pf_atualizando_w
from	pre_fatur_atualizacao
where	(dt_inicio_real IS NOT NULL AND dt_inicio_real::text <> '')
and	coalesce(dt_fim_real::text, '') = '';

if (qtd_pf_atualizando_w > 0) then
	--Nao foi possivel atualizar o pre faturamento.
	CALL wheb_mensagem_pck.exibir_mensagem_abort(1174957);
else
	open c01;
	loop
	fetch c01 into
		nr_sequencia_w,
		dt_agendamento_w,
		cd_estabelecimento_w;
	exit when(c01%rowcount = 1) OR (c01%notfound);
	end loop;
	close c01;
	begin
		update	pre_fatur_atualizacao
		set	dt_inicio_real	= clock_timestamp()
		where	nr_sequencia	= nr_sequencia_w;
		commit;

		begin
		CALL gerar_pre_faturamento(	dt_agendamento_w,
					nm_usuario_p,
					cd_estabelecimento_w);
		exception
			when others then
				ds_erro_w := substr(sqlerrm,1,2000);
				update	pre_fatur_atualizacao
				set	ds_erro		= ds_erro_w
				where	nr_sequencia	= nr_sequencia_w;
		end;

		update	pre_fatur_atualizacao
		set	dt_fim_real	= clock_timestamp()
		where	nr_sequencia	= nr_sequencia_w;
		commit;
	end;
end if;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE schedule_update_pre_billing ( dt_referencia_p timestamp, nm_usuario_p text) FROM PUBLIC;

