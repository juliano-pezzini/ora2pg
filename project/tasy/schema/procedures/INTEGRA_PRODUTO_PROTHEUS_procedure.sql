-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE integra_produto_protheus (nr_sequencia_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


cd_produto_w		varchar(15);
ds_produto_w		varchar(255);
cd_unidade_med_prod_w	varchar(2);
count_w			bigint;
cd_classe_material_w	integer;
cd_unidade_medida_w	varchar(30);
cd_material_w		bigint;
ie_operacao_w		varchar(15);
ie_erro_w			varchar(1) := 'N';
cd_grupo_w		varchar(10);
cd_estab_protheus_w	varchar(10);
cd_estab_int_w		varchar(10);
qt_registros_w		bigint;
cd_unidade_medida_compra_w	material.cd_unidade_medida_compra%type;
cd_unidade_medida_consumo_w	material.cd_unidade_medida_consumo%type;
cd_unidade_medida_estoque_w	material.cd_unidade_medida_estoque%type;


BEGIN


select	cd_produto,
	ds_produto,
	cd_unidade_medida,
	ie_operacao,
	cd_grupo,
	cd_estabelecimento
into STRICT	cd_produto_w,
	ds_produto_w,
	cd_unidade_med_prod_w,
	ie_operacao_w,
	cd_grupo_w,
	cd_estab_protheus_w
from	w_protheus_produto
where	nr_sequencia	= nr_sequencia_p;

if (coalesce(cd_produto_w::text, '') = '') then
	CALL gravar_log_protheus('ERRO', 'PR', WHEB_MENSAGEM_PCK.get_texto(310098) , nm_usuario_p); --O código do produto recebido do Protheus está vazio.
	ie_erro_w := 'S';
end if;

if (coalesce(ds_produto_w::text, '') = '') then
	CALL gravar_log_protheus('ERRO', 'PR', WHEB_MENSAGEM_PCK.get_texto(310099) , nm_usuario_p); --A descrição do produto recebida do Protheus está vazia.
	ie_erro_w := 'S';
end if;

if (coalesce(cd_unidade_med_prod_w::text, '') = '') then
	CALL gravar_log_protheus('ERRO', 'PR', WHEB_MENSAGEM_PCK.get_texto(310100) , nm_usuario_p); --A unidade de medida do produto recebida do Protheus está vazia.
	ie_erro_w := 'S';
end if;

select	obter_conversao_interna_int(null,'ESTABELECIMENTO','CD_ESTABELECIMENTO',cd_estab_protheus_w,'PTH')
into STRICT	cd_estab_int_w
;

select	count(*)
into STRICT	qt_registros_w
from	estabelecimento
where	cd_estabelecimento = cd_estab_int_w;

if (qt_registros_w = 0) then
	CALL gravar_log_protheus('ERRO', 'PR', WHEB_MENSAGEM_PCK.get_texto(309636, 'CD_ESTAB_PROTHEUS_W=' || cd_estab_protheus_w) , nm_usuario_p); --A conversão para o estabelecimento ' || cd_estab_protheus_w || ' enviado pelo Protheus está incorreta ou não existe.
	ie_erro_w := 'S';
end if;

select	count(*)
into STRICT	count_w
from	material
where	cd_sistema_ant	= cd_produto_w;

if (ie_erro_w = 'N') and (ie_operacao_w in ('I','A')) then

	select	coalesce(max(a.cd_classe_material),0)
	into STRICT	cd_classe_material_w
	from	classe_material a
	where	cd_sistema_ant = cd_grupo_w;

	if (cd_classe_material_w = 0) then
		CALL gravar_log_protheus('ERRO', 'PR', WHEB_MENSAGEM_PCK.get_texto(310102) || cd_classe_material_w || '.', nm_usuario_p); --Não foi encontrado nenhum grupo de produto com o código
		ie_erro_w := 'S';
	end if;

	select	max(cd_unidade_medida)
	into STRICT	cd_unidade_medida_w
	from	unidade_medida
	where	cd_sistema_ant	= cd_unidade_med_prod_w;

	if (coalesce(cd_unidade_med_prod_w::text, '') = '') then
		CALL gravar_log_protheus('ERRO', 'PR', WHEB_MENSAGEM_PCK.get_texto(310103) || cd_unidade_med_prod_w || '.', nm_usuario_p); --Não foi encontrado nenhuma unidade de medida no Tasy com o código
		ie_erro_w := 'S';
	end if;

	if (ie_erro_w = 'N') and (count_w = 0) and (ie_operacao_w = 'I') then

		select	nextval('material_seq')
		into STRICT	cd_material_w
		;

		insert into material(cd_classe_material,
			cd_material,
			cd_material_estoque,
			cd_sistema_ant,
			cd_unidade_medida_compra,
			cd_unidade_medida_consumo,
			cd_unidade_medida_estoque,
			ds_material,
			ds_reduzida,
			dt_atualizacao,
			dt_cadastramento,
			ie_abrigo_luz,
			ie_baixa_estoq_pac,
			ie_baixa_inteira,
			ie_bomba_infusao,
			ie_cobra_paciente,
			ie_controle_medico,
			ie_diluicao,
			ie_gravar_obs_prescr,
			ie_inf_ultima_compra,
			ie_material_estoque,
			ie_mistura,
			ie_receita,
			ie_situacao,
			ie_solucao,
			ie_tipo_material,
			ie_umidade_controlada,
			nm_usuario,
			qt_conv_compra_estoque,
			qt_conv_estoque_consumo,
			qt_minimo_multiplo_solic,
			ie_consignado,
			ie_disponivel_mercado)
		values (	cd_classe_material_w,
			cd_material_w,
			cd_material_w,
			cd_produto_w,
			cd_unidade_medida_w,
			cd_unidade_medida_w,
			cd_unidade_medida_w,
			ds_produto_w,
			ds_produto_w,
			clock_timestamp(),
			clock_timestamp(),
			'N',
			'S',
			'S',
			'N',
			'S',
			0,
			'N',
			'N',
			'S',
			'S',
			'N',
			'N',
			'A',
			'N',
			'1',
			'N',
			nm_usuario_p,
			1,
			1,
			1,
			'0',
			'S');

		CALL gerar_material_estab_integ(cd_estab_int_w, cd_material_w, nm_usuario_p);

		update	material_estab
		set	cd_material_conta		= cd_material_w,
			ie_material_estoque		= 'S',
			ie_baixa_estoq_pac		= 'S',
			ie_ressuprimento		= 'S',
			ie_requisicao		= 'S',
			ie_prescricao		= 'S',
			ie_padronizado		= 'S',
			ie_classif_custo		= 'B',
			ie_controla_serie 		= 'N'
		where	cd_material		= cd_material_w
		and	cd_estabelecimento	= cd_estab_int_w;

	end if;

	if (ie_erro_w = 'N') and (count_w > 0) and (ie_operacao_w = 'A') then

		update	material
		set	ie_situacao			= 'A',
			cd_classe_material		= cd_classe_material_w,
			ds_material			= ds_produto_w,
			ds_reduzida			= ds_produto_w,
			dt_atualizacao			= clock_timestamp(),
			nm_usuario			= nm_usuario_p
		where	cd_sistema_ant			= cd_produto_w;


		select  max(cd_unidade_medida_compra),
			max(cd_unidade_medida_consumo),
			max(cd_unidade_medida_estoque)
		into STRICT	cd_unidade_medida_compra_w,
			cd_unidade_medida_consumo_w,
			cd_unidade_medida_estoque_w
		from	material
		where 	cd_sistema_ant	= cd_produto_w;

		if	((cd_unidade_medida_w IS NOT NULL AND cd_unidade_medida_w::text <> '') and
			((upper(cd_unidade_medida_compra_w) <> upper(cd_unidade_medida_w)) or (upper(cd_unidade_medida_consumo_w) <> upper(cd_unidade_medida_w)) or (upper(cd_unidade_medida_estoque_w) <> upper(cd_unidade_medida_w)))) then


			update	material
			set	cd_unidade_medida_compra	= lower(cd_unidade_medida_w),
				cd_unidade_medida_consumo	= lower(cd_unidade_medida_w),
				cd_unidade_medida_estoque	= lower(cd_unidade_medida_w)
			where	cd_sistema_ant			= cd_produto_w;


		end if;
	end if;

elsif (ie_erro_w = 'N') and (ie_operacao_w = 'E') then

	update	material
	set	ie_situacao	= 'I',
		dt_atualizacao	= clock_timestamp(),
		nm_usuario	= nm_usuario_p
	where	cd_sistema_ant	= cd_produto_w;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE integra_produto_protheus (nr_sequencia_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

