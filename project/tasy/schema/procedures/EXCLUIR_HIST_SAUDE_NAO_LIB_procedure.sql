-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE excluir_hist_saude_nao_lib ( qt_hora_adicional_p bigint, dt_parametro_p timestamp) AS $body$
DECLARE

 
nr_sequencia_w		bigint;

 
c001 CURSOR FOR 
	SELECT	nr_sequencia 
	from	historico_saude_cirurgia 
	where	dt_cirurgia < (dt_parametro_p - qt_hora_adicional_p / 24) 
	and	coalesce(dt_liberacao::text, '') = '' 
	order by 1;
	
c002 CURSOR FOR 
	SELECT	nr_sequencia 
	from	paciente_alergia 
	where	dt_registro < (dt_parametro_p - qt_hora_adicional_p / 24) 
	and	coalesce(dt_liberacao::text, '') = '' 
	order by 1;
	
c003 CURSOR FOR 
	SELECT	nr_sequencia 
	from	paciente_habito_vicio 
	where	dt_registro < (dt_parametro_p - qt_hora_adicional_p / 24) 
	and	coalesce(dt_liberacao::text, '') = '' 
	order by 1;
	
c004 CURSOR FOR 
	SELECT	nr_sequencia 
	from	paciente_medic_uso 
	where	dt_registro < (dt_parametro_p - qt_hora_adicional_p / 24) 
	and	coalesce(dt_liberacao::text, '') = '' 
	order by 1;
	
c005 CURSOR FOR 
	SELECT	nr_sequencia 
	from	paciente_antec_clinico 
	where	dt_registro < (dt_parametro_p - qt_hora_adicional_p / 24) 
	and	coalesce(dt_liberacao::text, '') = '' 
	order by 1;
	
c006 CURSOR FOR 
	SELECT	nr_sequencia 
	from	paciente_ocorrencia 
	where	dt_registro < (dt_parametro_p - qt_hora_adicional_p / 24) 
	and	coalesce(dt_liberacao::text, '') = '' 
	order by 1;	
 

BEGIN 
 
/* Cirurgias */
 
open c001;
	loop 
	fetch c001 into 
		nr_sequencia_w;
	EXIT WHEN NOT FOUND; /* apply on c001 */
		begin 
		begin 
		delete	from historico_saude_cirurgia 
		where	nr_sequencia	= nr_sequencia_w;
		exception 
			when others then 
				nr_sequencia_w	:= nr_sequencia_w;
		end;
/*		insert	into log_exclusao( 
			nm_tabela, 
			dt_atualizacao, 
			nm_usuario, 
			ds_chave 
		) values ( 
			'HISTORICO_SAUDE_CIRURGIA', 
			sysdate, 
			'JOB', 
			'NR_SEQUENCIA : ' || nr_sequencia_w 
		);*/
 
 
		CALL gravar_log_exclusao('HISTORICO_SAUDE_CIRURGIA',	'JOB','NR_SEQUENCIA : ' || nr_sequencia_w,'N');
		end;
	end loop;
close c001;					
 
/* Alergia e Reações Adversas */
 
open c002;
	loop 
	fetch c002 into 
		nr_sequencia_w;
	EXIT WHEN NOT FOUND; /* apply on c002 */
		begin 
		begin 
		delete	from paciente_alergia 
		where	nr_sequencia	= nr_sequencia_w;
		exception 
			when others then 
				nr_sequencia_w	:= nr_sequencia_w;
		end;
/*		insert	into log_exclusao( 
			nm_tabela, 
			dt_atualizacao, 
			nm_usuario, 
			ds_chave 
		) values ( 
			'PACIENTE_ALERGIA', 
			sysdate, 
			'JOB', 
			'NR_SEQUENCIA : ' || nr_sequencia_w 
		);*/
 
 
		CALL gravar_log_exclusao('PACIENTE_ALERGIA','JOB','NR_SEQUENCIA : ' || nr_sequencia_w,'N');
		end;
	end loop;
close c002;
 
/* Hábitos e Vícios */
 
open c003;
	loop 
	fetch c003 into 
		nr_sequencia_w;
	EXIT WHEN NOT FOUND; /* apply on c003 */
		begin 
		begin 
		delete	from paciente_habito_vicio 
		where	nr_sequencia	= nr_sequencia_w;
		exception 
			when others then 
				nr_sequencia_w	:= nr_sequencia_w;
		end;
/*		insert	into log_exclusao( 
			nm_tabela, 
			dt_atualizacao, 
			nm_usuario, 
			ds_chave 
		) values ( 
			'PACIENTE_HABITO_VICIO', 
			sysdate, 
			'JOB', 
			'NR_SEQUENCIA : ' || nr_sequencia_w 
		);*/
 
 
		CALL gravar_log_exclusao('PACIENTE_HABITO_VICIO','JOB','NR_SEQUENCIA : ' || nr_sequencia_w,'N');
		end;
	end loop;
close c003;
 
/* Medicamentos em uso */
 
open c004;
	loop 
	fetch c004 into 
		nr_sequencia_w;
	EXIT WHEN NOT FOUND; /* apply on c004 */
		begin 
		begin 
		delete	from paciente_medic_uso 
		where	nr_sequencia	= nr_sequencia_w;
		exception 
			when others then 
				nr_sequencia_w	:= nr_sequencia_w;
		end;
/*		insert	into log_exclusao( 
			nm_tabela, 
			dt_atualizacao, 
			nm_usuario, 
			ds_chave 
		) values ( 
			'PACIENTE_MEDIC_USO', 
			sysdate, 
			'JOB', 
			'NR_SEQUENCIA : ' || nr_sequencia_w 
		);*/
 
		CALL gravar_log_exclusao('PACIENTE_MEDIC_USO','JOB','NR_SEQUENCIA : ' || nr_sequencia_w,'N');
		end;
	end loop;
close c004;
 
/* Doenças Prévias e Atuais */
 
open c005;
	loop 
	fetch c005 into 
		nr_sequencia_w;
	EXIT WHEN NOT FOUND; /* apply on c005 */
		begin 
		begin 
		delete	from paciente_antec_clinico 
		where	nr_sequencia	= nr_sequencia_w;
		exception 
			when others then 
				nr_sequencia_w	:= nr_sequencia_w;
		end;
/*		insert	into log_exclusao( 
			nm_tabela, 
			dt_atualizacao, 
			nm_usuario, 
			ds_chave 
		) values ( 
			'PACIENTE_ANTEC_CLINICO', 
			sysdate, 
			'JOB', 
			'NR_SEQUENCIA : ' || nr_sequencia_w 
		);*/
 
		CALL gravar_log_exclusao('PACIENTE_ANTEC_CLINICO','JOB','NR_SEQUENCIA : ' || nr_sequencia_w,'N');
		end;
	end loop;
close c005;
 
/* Ocorrências */
 
open c006;
	loop 
	fetch c006 into 
		nr_sequencia_w;
	EXIT WHEN NOT FOUND; /* apply on c006 */
		begin 
		begin 
		delete	from paciente_ocorrencia 
		where	nr_sequencia	= nr_sequencia_w;
		exception 
			when others then 
				nr_sequencia_w	:= nr_sequencia_w;
		end;
/*		insert	into log_exclusao( 
			nm_tabela, 
			dt_atualizacao, 
			nm_usuario, 
			ds_chave 
		) values ( 
			'PACIENTE_OCORRENCIA', 
			sysdate, 
			'JOB', 
			'NR_SEQUENCIA : ' || nr_sequencia_w 
		);*/
 
		CALL gravar_log_exclusao('PACIENTE_OCORRENCIA','JOB','NR_SEQUENCIA : ' || nr_sequencia_w,'N');
		end;
	end loop;
close c006;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE excluir_hist_saude_nao_lib ( qt_hora_adicional_p bigint, dt_parametro_p timestamp) FROM PUBLIC;

