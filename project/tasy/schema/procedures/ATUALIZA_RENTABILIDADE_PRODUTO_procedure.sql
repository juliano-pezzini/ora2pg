-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualiza_rentabilidade_produto (dt_referencia_p timestamp, cd_convenio_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
cd_convenio_w 		bigint;
ds_convenio_w		varchar(255);
ds_categoria_w		varchar(255);
cd_categoria_w		varchar(10);
qt_contador_pb_w	bigint;
cd_estabelecimento_w	smallint;

 
C01 CURSOR FOR 
	SELECT	a.cd_convenio, 
		a.ds_convenio 
	from	convenio a 
	where	a.ie_situacao = 'A' 
	and 	((a.cd_convenio = coalesce(cd_convenio_p,0)) or (coalesce(cd_convenio_p,0) = 0)) 
	and 	exists (SELECT	1 
			from 	convenio_estabelecimento b 
			where 	a.cd_convenio = b.cd_convenio 
			and 	b.cd_estabelecimento = cd_estabelecimento_w) 
	order by a.ds_convenio;

C02 CURSOR FOR 
	SELECT	cd_categoria, 
		ds_categoria 
	from	categoria_convenio 
	where	ie_situacao = 'A' 
	and 	cd_convenio = cd_convenio_w 
	order by ds_categoria;
	

BEGIN 
 
qt_contador_pb_w := 0;
CALL gravar_processo_longo(wheb_mensagem_pck.get_texto(802801) ,'ATUALIZA_RENTABILIDADE_PRODUTO',qt_contador_pb_w);
 
select 	coalesce(max(wheb_usuario_pck.get_cd_estabelecimento),1) 
into STRICT	cd_estabelecimento_w
;
 
delete	from eis_matmed_result 
where	dt_referencia = trunc(dt_referencia_p,'month');
 
open C01;
loop 
fetch C01 into	 
	cd_convenio_w, 
	ds_convenio_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	 
	qt_contador_pb_w := qt_contador_pb_w + 1;
	 
	open C02;
	loop 
	fetch C02 into	 
		cd_categoria_w, 
		ds_categoria_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin					 
		CALL gravar_processo_longo(wheb_mensagem_pck.get_texto(802802,'ds_convenio_w=' || ds_convenio_w || ';' || 'cd_convenio_w=' || cd_convenio_w || ';' || 
									 'ds_categoria_w=' || ds_categoria_w || ';' || 'cd_categoria_w=' || cd_categoria_w), 
				   'ATUALIZA_RENTABILIDADE_PRODUTO',qt_contador_pb_w);		
		CALL Gerar_Eis_MatMed_Result(dt_referencia_p, 'S', cd_convenio_w, cd_categoria_w, nm_usuario_p, 'N');
		 
		end;
	end loop;
	close C02;
	 
	end;
end loop;
close C01;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualiza_rentabilidade_produto (dt_referencia_p timestamp, cd_convenio_p bigint, nm_usuario_p text) FROM PUBLIC;

