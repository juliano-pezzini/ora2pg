-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE insert_controle_mipres_age ( nr_seq_agenda_p bigint, nr_sequencia_p bigint, nr_seq_mipres_p controle_mipres_agenda.nr_prescr_mipres%type, dt_validity_mipres_p controle_mipres_agenda.dt_validity%type, nr_seq_mipres_old_p controle_mipres_agenda.nr_prescr_mipres%type, dt_validity_mipres_old_p controle_mipres_agenda.dt_validity%type, nm_usuario_p text, cd_agenda_p agenda.cd_agenda%type default null, nm_tabela_p text default null) AS $body$
DECLARE


nr_seq_controle_w 		controle_mipres_agenda.nr_sequencia%type;
cd_pessoa_fisica_w		agenda_consulta.cd_pessoa_fisica%type;
cd_tipo_agenda_w		agenda.cd_tipo_agenda%type;
nm_tabela_w				varchar(30);
nr_sequencia_w			bigint;
nm_coluna_w				varchar(30) := 'nr_sequencia';

controle_insert_w		varchar(1) := 'N';

nr_seq_age_serv_w		bigint;
nr_sequencia_serv_w		bigint;

nr_seq_age_cons_w		bigint;
nr_sequencia_cons_w		bigint;

nr_seq_age_exam_w		bigint;
nr_sequencia_exam_w		bigint;

nr_seq_ageint_w			bigint;
nr_sequencia_ageint_w	bigint;


BEGIN

    if ((nr_seq_mipres_p IS NOT NULL AND nr_seq_mipres_p::text <> '')
		and (dt_validity_mipres_p IS NOT NULL AND dt_validity_mipres_p::text <> '')
		and (nr_seq_agenda_p IS NOT NULL AND nr_seq_agenda_p::text <> '')) then

        select  max(nr_sequencia)
        into STRICT	nr_seq_controle_w
        from 	controle_mipres_agenda
        where 	nr_prescr_mipres = nr_seq_mipres_p;


		select	max(cd_tipo_agenda),
				max(CASE WHEN cd_tipo_agenda=5 THEN  nr_seq_agenda_p  ELSE null END ),
				max(CASE WHEN cd_tipo_agenda=5 THEN  nr_sequencia_p  ELSE null END ),
				max(CASE WHEN cd_tipo_agenda=3 THEN  nr_seq_agenda_p  ELSE null END ),
				max(CASE WHEN cd_tipo_agenda=3 THEN  nr_sequencia_p  ELSE null END ),
				max(CASE WHEN cd_tipo_agenda=2 THEN  nr_sequencia_p  ELSE null END ),
				max(CASE WHEN cd_tipo_agenda=2 THEN  nr_sequencia_p  ELSE null END )
		into STRICT	cd_tipo_agenda_w,
				nr_seq_age_serv_w,
				nr_sequencia_serv_w,
				nr_seq_age_cons_w,
				nr_sequencia_cons_w,
				nr_seq_age_exam_w,
				nr_sequencia_exam_w
		from	agenda
		where	cd_agenda = cd_agenda_p;

		nm_tabela_w := coalesce(lower(nm_tabela_p), 'agenda_consulta_proc');

		if (cd_tipo_agenda_w in (3, 5)) then

			select	max(cd_pessoa_fisica)
			into STRICT	cd_pessoa_fisica_w
			from	agenda_consulta aca
			where	aca.nr_sequencia = nr_seq_agenda_p;

		elsif (cd_tipo_agenda_w = 2) then

			select 	max(cd_pessoa_fisica)
			into STRICT	cd_pessoa_fisica_w
			from	agenda_paciente apa
			where	apa.nr_sequencia = nr_sequencia_p;

			nm_tabela_w := 'agenda_paciente_proc';

		elsif (coalesce(cd_tipo_agenda_w::text, '') = '') then

			select 	max(cd_pessoa_fisica)
			into STRICT	cd_pessoa_fisica_w
			from	agenda_integrada ageint
			where	ageint.nr_sequencia = nr_seq_agenda_p;

			nr_seq_ageint_w := nr_seq_agenda_p;
			nr_sequencia_ageint_w := nr_sequencia_p;

		end if;

        if (coalesce(nr_seq_controle_w::text, '') = '') then

            select	obter_nextval_sequence('CONTROLE_MIPRES_AGENDA')
            into STRICT	nr_seq_controle_w
;

            insert into	
            controle_mipres_agenda(nr_sequencia,
                                    dt_atualizacao,
                                    nm_usuario,
                                    dt_atualizacao_nrec,
                                    nm_usuario_nrec,
                                    nr_prescr_mipres,
                                    dt_validity
            ) values (	nr_seq_controle_w,
                        clock_timestamp(),
                        nm_usuario_p,
                        clock_timestamp(),
                        nm_usuario_p,
                        nr_seq_mipres_p,
                        dt_validity_mipres_p
            );

        else

			update	controle_mipres_agenda
			set 	dt_validity = dt_validity_mipres_p,
					dt_atualizacao  = clock_timestamp(),
					nm_usuario = nm_usuario_p
			where	nr_sequencia = nr_seq_controle_w;

        end if;

		nr_sequencia_w := nr_sequencia_p;

		if (nm_tabela_w in ('agenda_consulta_adic', 'agenda_paciente_auxiliar')) then

			EXECUTE  'select nvl(max(''N''), ''S'')
								from ' || nm_tabela_w || '
								where nr_seq_agenda = :nr_seq_agenda_p'
            into STRICT controle_insert_w
			using nr_seq_agenda_p;

			if (controle_insert_w = 'S') then
				EXECUTE 'insert into
					' || nm_tabela_w || ' (nr_seq_agenda,
										  dt_atualizacao,
										  nm_usuario,
										  nr_seq_controle_mipres) 
                values (:nr_seq_agenda_p,
						sysdate,
						:nm_usuario_p,
						:nr_seq_controle_w)'
				using nr_seq_agenda_p, nm_usuario_p, nr_seq_controle_w;
			end if;

			nr_sequencia_w := nr_seq_agenda_p;
			nm_coluna_w := 'nr_seq_agenda';
		end if;

		if (controle_insert_w = 'N') then
			EXECUTE 'update ' || nm_tabela_w || '
				set		nr_seq_controle_mipres = :nr_seq_controle_w,
						dt_atualizacao  = sysdate,
						nm_usuario = :nm_usuario_p
				where 	' || nm_coluna_w || ' = :nr_sequencia_w'
			using nr_seq_controle_w, nm_usuario_p, nr_sequencia_w;
		end if;

		if (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then
			CALL insert_log_mipres(	cd_pessoa_fisica_w,
								cd_agenda_p,
								0,
								nr_seq_controle_w,
								null,
								null,
								null,
								nr_seq_mipres_p,
								nr_seq_mipres_old_p,
								dt_validity_mipres_p,
								dt_validity_mipres_old_p,
								nr_seq_age_cons_w,
								nr_seq_age_exam_w,
								nr_seq_ageint_w,
								nr_seq_age_serv_w,
								nr_sequencia_ageint_w,
								nr_sequencia_cons_w,
								nr_sequencia_exam_w,
								nr_sequencia_serv_w);
		end if;

		commit;
    end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE insert_controle_mipres_age ( nr_seq_agenda_p bigint, nr_sequencia_p bigint, nr_seq_mipres_p controle_mipres_agenda.nr_prescr_mipres%type, dt_validity_mipres_p controle_mipres_agenda.dt_validity%type, nr_seq_mipres_old_p controle_mipres_agenda.nr_prescr_mipres%type, dt_validity_mipres_old_p controle_mipres_agenda.dt_validity%type, nm_usuario_p text, cd_agenda_p agenda.cd_agenda%type default null, nm_tabela_p text default null) FROM PUBLIC;

