-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE dirf_grava_titulos_nao_retidos (nr_sequencia_p bigint, nr_seq_darf_p bigint, cd_estabelecimento_p bigint) AS $body$
DECLARE

 
dt_ano_referencia_w			timestamp;
dt_mes_referencia_w			timestamp;
dt_fim_referencia_w			timestamp;
vl_rendimento_w				double precision;
nr_titulo_original_w			bigint;
qt_registros_w				bigint;
ie_tipo_titulo_w			varchar(6);
vl_imposto_aux_w			double precision;
ie_nota_fiscal_w			varchar(2);
qt_registros_ww				bigint;
cd_cgc_w				pessoa_juridica.cd_cgc%type;
cd_pessoa_fisica_w			pessoa_fisica.cd_pessoa_fisica%type;
cd_tributo_w				tributo.cd_tributo%type;
cd_darf_w				dirf_titulo_pagar.cd_darf%type;
dt_emissao_w				timestamp;
ie_tipo_data_w				smallint;
dt_liquidacao_w				timestamp;
dt_vencimento_w				timestamp;
dt_base_titulo_w			timestamp;
dt_emissao_nf_w				timestamp;
--pega os títulos que não tiveram retenção nos meses anteriores e que ainda não foram gravados na Dirf 
C01 CURSOR FOR 
	SELECT	distinct 
		b.cd_cgc, 
		b.cd_pessoa_fisica, 
		a.cd_tributo, 
		a.cd_darf 
	from	dirf_titulo_pagar a, 
		titulo_pagar b, 
		dirf_lote_mensal c 
	where	a.nr_titulo = b.nr_titulo 
	and	trunc(c.dt_mes_referencia, 'YYYY') = dt_ano_referencia_w 
	and	b.cd_estabelecimento	 = cd_estabelecimento_p 
	and	a.nr_seq_lote_dirf = c.nr_sequencia;

c02 CURSOR FOR 
SELECT distinct t.nr_titulo, 
	coalesce(obter_vl_mercadoria_nf_titulo(t.nr_titulo),t.vl_titulo) 
from	titulo_pagar t 
where	((t.cd_pessoa_fisica = cd_pessoa_fisica_w) or (cd_cgc = cd_cgc_w)) 
and	t.cd_estabelecimento = cd_estabelecimento_p 
and	t.ie_situacao <> 'C' 
--and	t.dt_liquidacao between dt_ano_referencia_w and dt_mes_referencia_w 
and 	not exists (	SELECT	1 
			from	dirf_titulo_pagar d 
			where 	d.nr_titulo = t.nr_titulo 
			and	d.cd_darf  =	cd_darf_w);


BEGIN 
 
 
select	dt_mes_referencia 
into STRICT	dt_mes_referencia_w 
from	dirf_lote_mensal 
where	nr_sequencia = nr_sequencia_p;
 
dt_ano_referencia_w	:= trunc(dt_mes_referencia_w, 'YYYY');
dt_fim_referencia_w	:= fim_dia(dt_mes_referencia_w);
 
open C01;
loop 
fetch C01 into 
	cd_cgc_w, 
	cd_pessoa_fisica_w, 
	cd_tributo_w, 
	cd_darf_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
 
	select 	max(coalesce(ie_nota_fiscal,'N')) 
	into STRICT	ie_nota_fiscal_w 
	from	dirf_regra_tributo a 
	where	a.cd_tributo = cd_tributo_w;
 
	select	max(ie_tipo_data) 
	into STRICT	ie_tipo_data_w 
	from	dirf_regra_tributo 
	where	cd_darf       = cd_darf_w 
	and	cd_estabelecimento = cd_estabelecimento_p 
	and	cd_tributo	  = cd_tributo_w;
 
	open c02;
	loop 
	fetch c02 into 
		nr_titulo_original_w, 
		vl_rendimento_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin 
 
		select	p.dt_emissao, 
			p.dt_liquidacao, 
			p.dt_vencimento_atual, 
			to_date(obter_dados_nota_fiscal(p.nr_seq_nota_fiscal,9)) 
		into STRICT	dt_emissao_w, 
			dt_liquidacao_w, 
			dt_vencimento_w, 
			dt_emissao_nf_w 
		from	titulo_pagar p 
		where	nr_titulo = nr_titulo_original_w;
 
		if (ie_tipo_data_w = 3)then 
			dt_base_titulo_w	:=	dt_liquidacao_w;
		elsif (ie_tipo_data_w in (1,6,2))then 
			dt_base_titulo_w	:=	dt_emissao_w;
		elsif (ie_tipo_data_w = 5)then 
			dt_base_titulo_w	:=	dt_vencimento_w;
		elsif (ie_tipo_data_w = 4)then 
			dt_base_titulo_w	:= 	dt_emissao_nf_w;
		end if;
 
		select	max(ie_tipo_titulo) 
		into STRICT	ie_tipo_titulo_w 
		from	titulo_pagar 
		where	nr_titulo = nr_titulo_original_w;
 
		select	count(*) 
		into STRICT	qt_registros_w 
		from	dirf_regra_tipo_tit r 
		where	r.ie_tipo_titulo = ie_tipo_titulo_w 
		and		coalesce(cd_estabelecimento,cd_estabelecimento_p) = cd_estabelecimento_p 
		and		ie_somar_imposto = 'S';
 
 
		if (qt_registros_w > 0) then 
 
			-- Caso o título tenha sido gerado com valor menor/maior devido a tributos que diminuem ou aumentam o valor da nota 
			select	coalesce(sum(CASE WHEN t.IE_SOMA_DIMINUI='S' THEN vl_imposto * -1 WHEN t.IE_SOMA_DIMINUI='D' THEN vl_imposto  ELSE 0 END ),0) 
			into STRICT	vl_imposto_aux_w 
			from	titulo_pagar_imposto i, 
					tributo t 
			where	t.cd_tributo = i.cd_tributo 
			and		i.nr_titulo = nr_titulo_original_w 
			and		t.ie_soma_diminui <> 'N';
 
			vl_rendimento_w := vl_rendimento_w + vl_imposto_aux_w;
		end if;
 
		select count(*) 
		into STRICT  qt_registros_ww 
		from  dirf_titulo_pagar 
		where nr_titulo 	= 	nr_titulo_original_w 
		and	cd_tributo   = 	cd_tributo_w 
		and	cd_darf		=	cd_darf_w 
		and	dt_base_titulo = 	dt_base_titulo_w;
 
		if (qt_registros_ww = 0)		then 
 
			select count(*) 
			into STRICT	qt_registros_ww 
			from	titulo_pagar a 
			where	a.nr_titulo = nr_titulo_original_w 
			and	(a.nr_seq_nota_fiscal IS NOT NULL AND a.nr_seq_nota_fiscal::text <> '') 
			and	ie_nota_fiscal_w = 'S';
 
 
			if 	((qt_registros_ww > 0) or (ie_nota_fiscal_w <> 'S')) then 
				 
				if (trunc(dt_mes_referencia_w,'YYYY') = trunc(dt_base_titulo_w,'YYYY')) and (trunc(dt_base_titulo_w,'mm') <= trunc(dt_mes_referencia_w,'mm')) then 
 
					insert into dirf_titulo_pagar( 
						nr_sequencia, 
						dt_atualizacao, 
						nm_usuario, 
						dt_atualizacao_nrec, 
						nm_usuario_nrec, 
						nr_seq_lote_dirf, 
						nr_titulo, 
						vl_rendimento, 
						vl_imposto, 
						cd_tributo, 
						cd_darf, 
						dt_base_titulo, 
						ie_origem) 
					values (	nextval('dirf_titulo_pagar_seq'), 
						clock_timestamp(), 
						'Tasy', 
						clock_timestamp(), 
						'Tasy', 
						nr_sequencia_p, 
						nr_titulo_original_w, 
						vl_rendimento_w, 
						0, 
						cd_tributo_w, 
						cd_darf_w, 
						dt_base_titulo_w, 
						'S');
				end if;
 
			end if;
		end if;
		end;
	end loop;
	close c02;
end;
end loop;
close C01;
 
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE dirf_grava_titulos_nao_retidos (nr_sequencia_p bigint, nr_seq_darf_p bigint, cd_estabelecimento_p bigint) FROM PUBLIC;

