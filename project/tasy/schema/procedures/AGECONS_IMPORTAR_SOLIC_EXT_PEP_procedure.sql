-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE agecons_importar_solic_ext_pep ( nr_seq_agenda_p bigint, nr_seq_solicitacao_p bigint, nm_usuario_p text, qt_nao_permitido_p INOUT bigint, ds_exame_bloq_p INOUT text) AS $body$
DECLARE


nr_sequencia_w		bigint;
cd_procedimento_w	bigint;
ie_origem_proced_w	bigint;
qt_procedimento_w	bigint;
nr_seq_exame_w		bigint;
ie_exame_lab_w		varchar(1);
cd_cid_w			pedido_exame_externo.cd_doenca%type;
nr_atendimento_w	pedido_exame_externo.nr_Atendimento%type;
ie_atual_cid_w		varchar(1) := 'N';
ie_dependente_w		varchar(1);
cd_tipo_agenda_w	agenda.cd_tipo_agenda%type;
cd_agenda_w         agenda.cd_agenda%type;
dt_agenda_w         agenda_consulta.dt_agenda%type;
ds_mensagem_w 		ageserv_proced_permissao.ds_mensagem%type;
ie_permissao_w 		ageserv_proced_permissao.ie_permissao%type;
qt_nao_permitido_w  bigint := 0;
nr_proc_interno_w   pedido_exame_externo_item.nr_proc_interno%type;
cd_convenio_w       agenda_consulta.cd_convenio%type;
ie_tipo_atendimento_w agenda_consulta.ie_tipo_atendimento%type;
ds_proc_exame_w		varchar(255);
ds_exame_bloq_w		varchar(2000) := '';

c01 CURSOR FOR
	SELECT	b.cd_procedimento,
		b.ie_origem_proced,
		b.qt_exame,
		b.nr_seq_exame_lab,
		a.cd_doenca,
		coalesce(a.nr_atendimento,0),
		b.nr_proc_interno,
		Obter_Desc_Exame_Lab(b.nr_seq_exame_lab,null,b.cd_procedimento,b.ie_origem_proced) ds_proc_exame
	from	pedido_exame_externo a,
			pedido_exame_externo_item b
	where	b.nr_seq_pedido = nr_seq_solicitacao_p
	and		(b.cd_procedimento IS NOT NULL AND b.cd_procedimento::text <> '')
	and		a.nr_sequencia = b.nr_seq_pedido
	and	(((b.nr_seq_exame_lab IS NOT NULL AND b.nr_seq_exame_lab::text <> '') and ie_exame_lab_w = 'S') or (coalesce(b.nr_seq_exame_lab::text, '') = '' and ie_exame_lab_w = 'N') or (ie_exame_lab_w = 'A'));
		

BEGIN
ie_exame_lab_w := obter_param_usuario(866, 301, wheb_usuario_pck.get_cd_perfil, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_exame_lab_w);

select 	max(a.cd_tipo_agenda),
		max(a.cd_agenda),
		max(dt_agenda),
		coalesce(max(b.cd_convenio),0),
		max(b.ie_tipo_atendimento)
into STRICT	cd_tipo_agenda_w,
	    cd_agenda_w,
		dt_agenda_w,
		cd_convenio_w,
		ie_tipo_atendimento_w
from 	agenda a,
	agenda_consulta b
where 	a.cd_agenda = b.cd_agenda
and 	b.nr_sequencia = nr_seq_agenda_p;

open c01;
loop
fetch 	c01 into
	cd_procedimento_w,
	ie_origem_proced_w,
	qt_procedimento_w,
	nr_seq_exame_w,
	cd_cid_w,
	nr_atendimento_w,
	nr_proc_interno_w,
	ds_proc_exame_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	
	if (coalesce(nr_proc_interno_w, 0) > 0) then
		SELECT * FROM Obter_Proc_Tab_Inter_Agenda(nr_proc_interno_w, 0, cd_convenio_w, null, null, null, null, null, null, null, null, ie_tipo_atendimento_w, null, null, null, cd_procedimento_w, ie_origem_proced_w) INTO STRICT cd_procedimento_w, ie_origem_proced_w;
	end if;
	
	SELECT * FROM ageserv_consiste_perm_proced(cd_agenda_w, nr_seq_exame_w, nr_proc_interno_w, cd_procedimento_w, ie_origem_proced_w, 'S', nm_usuario_p, obter_estabelecimento_ativo, dt_agenda_w, ds_mensagem_w, ie_permissao_w) INTO STRICT ds_mensagem_w, ie_permissao_w;
	
	if (ie_permissao_w <> 'N' or coalesce(ie_permissao_w::text, '') = '') then
		if (coalesce(cd_cid_w::text, '') = '') and (nr_atendimento_w > 0) then
			cd_cid_w	:= coalesce(Obter_Ultimo_Cid_Atend_Pac(nr_atendimento_w,'P','C',0), Obter_Ultimo_Cid_Atend_Pac(nr_atendimento_w,'S','C',0));
		end if;

		ie_dependente_w := obter_se_existe_dependente(nr_seq_agenda_p, nr_seq_exame_w, cd_procedimento_w, ie_origem_proced_w);
		
		if (ie_dependente_w = 'N') then
			insert into agenda_consulta_proc(
				nr_sequencia,
				nr_seq_agenda,
				cd_procedimento,
				ie_origem_proced,
				dt_atualizacao,
				nm_usuario,
				qt_procedimento,
				ie_executar_proc,
				nr_seq_exame,
				nr_seq_proc_interno)
			values (
				nextval('agenda_consulta_proc_seq'),
				nr_seq_agenda_p,
				cd_procedimento_w,
				ie_origem_proced_w,
				clock_timestamp(),
				nm_usuario_p,
				coalesce(qt_procedimento_w,1),
				'S',
				nr_seq_exame_w,
				nr_proc_interno_w);
			
			if (cd_cid_w IS NOT NULL AND cd_cid_w::text <> '') and (ie_atual_cid_w = 'N') then
				update	agenda_consulta
				set		cd_cid	= cd_cid_w
				where	nr_sequencia	= nr_seq_agenda_p;
				ie_atual_cid_w	:= 'S';
			end if;
		end if;
	else
	
		if (length(ds_exame_bloq_w||cd_procedimento_w||' - '||ds_proc_exame_w||',') <= 2000) then
			ds_exame_bloq_w := ds_exame_bloq_w||cd_procedimento_w||' - '||ds_proc_exame_w||',';
		end if;
		
		qt_nao_permitido_w := qt_nao_permitido_w + 1;
	end if;
	
	exception
	when 	others then
		qt_nao_permitido_w := qt_nao_permitido_w + 1;
		nr_sequencia_w := null;
	end;
end loop;
close c01;

CALL gerar_dependente_proc_adic( cd_tipo_agenda_w, nm_usuario_p, nr_seq_agenda_p );

commit;

qt_nao_permitido_p := qt_nao_permitido_w;
ds_exame_bloq_p := SUBSTR(ds_exame_bloq_w,1,LENGTH(ds_exame_bloq_w)-1);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE agecons_importar_solic_ext_pep ( nr_seq_agenda_p bigint, nr_seq_solicitacao_p bigint, nm_usuario_p text, qt_nao_permitido_p INOUT bigint, ds_exame_bloq_p INOUT text) FROM PUBLIC;

