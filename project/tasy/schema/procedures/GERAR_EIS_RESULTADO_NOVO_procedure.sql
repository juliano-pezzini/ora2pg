-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE conta AS (nr_interno_conta bigint, ie_atualiza_taxa_adm varchar(15), nm_usuario varchar(15));
CREATE TYPE conta2 AS (	nr_interno_conta 	bigint, 
			ds_tipo_atend 		varchar(60),
			ds_convenio_categoria 	varchar(255),
			cd_convenio_categoria	varchar(255),
			ds_convenio_plano	varchar(255),
			cd_plano		varchar(20),
			ds_conv_nac		varchar(255),
			ds_conv_int		varchar(255),
			ie_conv_nac		varchar(2),
			ds_classif_convenio	varchar(255),
			cd_empresa_estab	bigint,
			ds_municipio_ibge_pf	varchar(255),
			ie_clinica_atend	bigint,
			ds_clinica_atend	varchar(255),
			nr_seq_prot		bigint,
			nr_prot			varchar(40),
			nm_medico_atend		varchar(255),
			cd_cid_doenca		varchar(10),
			ds_cid_doenca		varchar(255),
			ie_tipo_prot		smallint,
			ds_tipo_prot		varchar(255),
			cd_proced_atend		integer,
			ds_proced_atend		varchar(255),
			ds_estab		varchar(255),
			ds_conv_atend		varchar(255),
			nm_medico_ref		varchar(255),
			cd_pessoa_fisica	varchar(10),
			cd_categ_cid		varchar(10),
			ds_categ_cid		varchar(255),
			cd_estabelecimento_atend smallint,
			ds_classificacao_medico	varchar(255),
			nr_seq_classif_medico	bigint,
			ds_classificacao_atend	varchar(255),
			nr_seq_classif_atend	bigint,	
			ds_estabelecimento_atend varchar(255),
			ds_motivo_atendimento	varchar(255),
			ds_origem_convenio	varchar(255),
			ds_conv_conta		varchar(255),
			ie_tipo_conv		smallint,
			ds_tipo_conv		varchar(255),
			cd_conv_atend		integer,
			ds_idade_pf		varchar(255),
			ds_complexidade		varchar(255),
			nr_seq_patient_category		bigint,
			ds_patient_category			varchar(255),
			ds_procedimento		varchar(255),
			ds_grupo_proc		varchar(240));


CREATE OR REPLACE PROCEDURE gerar_eis_resultado_novo ( dt_parametro_p timestamp, nm_usuario_p text) AS $body$
DECLARE

type vetor_conta is table of conta index by integer;						
type vetor_conta2 is table of conta2 index by integer;

nr_sequencia_w			bigint;	
nr_sequencia_ww			bigint;	
nr_sequencia_www		bigint;
nr_sequencia_wwww		bigint;
dt_atualizacao_w		timestamp;
dt_parametro_inicio_w		timestamp;
dt_parametro_fim_w		timestamp;
dt_referencia_w			timestamp;
ie_periodo_w			varchar(1)             := 'M';
ie_conta_aberta_w		varchar(1)             := 'S';
nr_interno_conta_w		bigint;
ds_erro_w			varchar(2000);
cd_setor_atendimento_w		integer;
cd_setor_paciente_w		integer;
cd_especialidade_w		integer;
nr_seq_grupo_rec_w		bigint;
dt_receita_w			timestamp;
dt_entrega_w			timestamp;
nr_conta_w			bigint;
ie_protocolo_w			varchar(02);
cd_conta_contabil_w		varchar(20);
ie_complexidade_w		varchar(02);
ds_complexidade_w		varchar(255);
ie_pacote_w			varchar(01);
cd_estrutura_conta_w		varchar(05);
qt_dia_internacao_w		bigint;
nr_seq_conta_financ_w		double precision;
vl_procedimento_w		double precision;
vl_material_w			double precision;
VL_TERCEIRO_w			double precision;
VL_CUSTO_w			double precision;
vl_desconto_w			double precision;
vl_imposto_w			double precision;
vl_original_w			double precision;
vl_hospital_w			double precision;
vl_repasse_calc_w		double precision;
ie_atualiza_taxa_adm_w		varchar(1)		:= 'N';
nm_usuario_w			varchar(15);
qt_atend_w			bigint;
qt_conta_w			bigint;
cd_plano_w			varchar(10);
ie_tipo_financ_proc_w		varchar(4);
vl_custo_excluido_w		double precision;

vetor_conta_w			vetor_conta;
i				integer;
k				integer;
/*Geliard em 05/08/2010 OS235130*/

cd_forma_organizacao_w          integer;
cd_subgrupo_w                   smallint;
cd_grupo_w                      smallint;
ie_complexidade_sus_w		varchar(2);

cd_centro_custo_w		integer;
ie_gerar_eis_fatur_diario_w	varchar(1):= 'S';
nr_seq_agrup_classif_w		bigint;
qt_resumo_w			double precision;
cd_cgc_prestador_w		varchar(14);
nr_prescricao_w			bigint:= 0;
cd_medico_prescr_w		varchar(10);
ie_consiste_simultaneo_w	varchar(1);

nr_interno_conta_ww		bigint;
vetor_conta_ww			vetor_conta2;
a				integer;
b				integer;
v				integer;

cd_convenio_parametro_w		integer;
cd_categoria_parametro_w 	varchar(10);
ds_tipo_atend_w			varchar(60);
nr_atendimento_w		bigint;
ie_tipo_atendimento_w		smallint;
ds_convenio_w			varchar(255);
ie_brasil_w			varchar(01)	:= 'S';
nr_seq_pais_w			bigint;
CD_CODIGO_PAIS_w		varchar(10);
cd_cgc_w			varchar(14);
ds_categoria_w			varchar(150);
ds_classificacao_w		varchar(255);
cd_estabelecimento_w		bigint;
cd_empresa_w			smallint;
ds_municipio_ibge_w		varchar(100);
cd_pessoa_fisica_w		varchar(10);
ie_clinica_w			integer;
nr_seq_protocolo_w		bigint;
nr_protocolo_w			varchar(40);
cd_medico_resp_w		varchar(10);
nm_medico_resp_w		varchar(80);
cd_doenca_w			varchar(10);
ds_doenca_w			varchar(255);
ie_tipo_protocolo_w             smallint;
cd_procedencia_w		integer;
ds_procedencia_w		varchar(40);
ds_estabelecimento_w		varchar(255);
ds_conv_atend_w			varchar(255);
cd_convenio_atend_w		integer;
cd_medico_referido_w		varchar(10);
nm_medico_referido_w		varchar(100);
cd_categoria_cid_w		varchar(10);
ds_categoria_cid_w		varchar(255);
cd_estab_atend_w		smallint;
nr_seq_classif_medico_w		bigint;
nr_seq_classificacao_w		bigint;
ds_classificacao_medico_w	varchar(255);
ds_classificacao_atend_w	varchar(255);
ds_estab_atend_w		varchar(255);
nr_seq_queixa_w			bigint:= 0;
ds_queixa_w			varchar(255);
ie_tipo_convenio_w		smallint;
ds_tipo_convenio_w		varchar(255);
ds_idade_pf_w			varchar(155);
ds_origem_convenio_w		varchar(255);
cd_setor_atend_ant_w		bigint;
ds_conv_nac_w			varchar(255);
ds_conv_int_w                	varchar(255);
ie_conv_nac_w			varchar(2);

ie_proc_mat_w			varchar(2);
ds_grupo_w			varchar(100);
ds_subgrupo_w			varchar(100);
ds_forma_organizacao_w		varchar(100);
ds_tipo_financiamento_w		varchar(255);
ds_complexidade_sus_w		varchar(255);
ie_tipo_financiamento_w		varchar(4);
ds_ie_pacote_w			varchar(50);
ds_ie_proc_mat_w		varchar(255);
ds_ie_protocolo_w		varchar(255);
nm_medico_presricao_w		varchar(255);
ds_centro_custo_setor_w		varchar(255);
ds_agrupamento_classif_w	varchar(255);
cd_classif_setor_w		bigint;
ds_classificacao_setor_w	varchar(255);
ds_setor_atend_w		varchar(255);
ds_grupo_rec_w			varchar(255);
ds_espec_w			varchar(255);
ds_prest_w			varchar(255);
ds_setor_pac_w			varchar(255);
cd_municipio_ibge_w		varchar(6);
nr_conta_del_w			bigint;
cd_estabelecimento_res_w	bigint;
cd_estabelecimento_ant_w	bigint;
nr_seq_patient_category_w	bigint;
ds_patient_category_w		varchar(255):='';
ds_procedimento_w			varchar(255):='';
ds_grupo_proc_w				varchar(240):='';
vl_medico_w                     eis_Resultado.vl_medico%type;

C00 CURSOR FOR
SELECT	count(distinct t.nr_atendimento),
	count(distinct a.nr_interno_conta),
	PKG_DATE_UTILS.start_of(a.dt_mesano_referencia,'month', 0),
	coalesce(PKG_DATE_UTILS.start_of(b.dt_referencia,'month', 0),PKG_DATE_UTILS.start_of(a.dt_mesano_referencia,'month', 0)),
	a.cd_estabelecimento,
	a.cd_convenio_parametro,
	coalesce(b.cd_setor_atendimento,0),
	coalesce(b.cd_setor_paciente,0),
	t.ie_tipo_atendimento,
	CASE WHEN coalesce(p.ie_status_protocolo,9)=2 THEN '10' WHEN coalesce(p.ie_status_protocolo,9)=1 THEN '8' WHEN coalesce(p.ie_status_protocolo,9)=3 THEN '9'  ELSE CASE WHEN ie_status_acerto=2 THEN '6'  ELSE CASE WHEN coalesce(t.dt_alta::text, '') = '' THEN '2'  ELSE '4' END  END  END ,
	b.ie_proc_mat,
	coalesce(b.cd_especialidade,0),
	coalesce(b.cd_conta_contabil,0),
	sum(coalesce(vl_procedimento,0) - (coalesce(b.vl_repasse_terceiro,0))),
	sum(coalesce(b.vl_material,0)),
	sum(coalesce(b.vl_repasse_terceiro,0)),
	sum(coalesce(b.vl_repasse_calc,0)),
	sum(coalesce(b.vl_custo,0)),
	sum(coalesce(b.vl_desconto,0)),
	b.nr_seq_grupo_rec,
	b.cd_estrutura_conta,
	b.nr_seq_conta_financ,
	sum(coalesce(b.vl_imposto,0)),
	coalesce(a.ie_complexidade,'B'),
	CASE WHEN coalesce(nr_seq_proc_pacote::text, '') = '' THEN 'N'  ELSE 'S' END ,
	sum(coalesce(b.vl_original,0)),
	a.cd_categoria_parametro,
	sum(coalesce(b.vl_materiais,0) + coalesce(b.vl_custo_operacional,0) + coalesce(b.vl_material,0)),
	ROUND(coalesce(t.dt_alta,clock_timestamp()) - dt_entrada),
	PKG_DATE_UTILS.start_of(coalesce(p.dt_entrega_convenio,clock_timestamp()),'dd', 0),
	a.nr_interno_conta,
	a.nr_atendimento,
	b.ie_tipo_financiamento,
	sum(coalesce(b.vl_custo_excluido,0)),
	b.cd_grupo,  
	b.cd_subgrupo, 
	b.cd_forma_organizacao, 
	b.ie_complexidade, 
	sum(coalesce(b.qt_resumo,0)),
	b.cd_cgc_prestador,
	coalesce(b.nr_prescricao,0),
	b.ds_grupo,
	b.ds_subgrupo,
	b.ds_forma_organizacao,
	b.ds_complexidade,
	b.ds_tipo_financiamento,
        b.vl_medico
FROM atendimento_paciente t, conta_paciente_resumo b, conta_paciente a
LEFT OUTER JOIN protocolo_convenio p ON (a.nr_seq_protocolo = p.nr_seq_protocolo)
WHERE a.dt_mesano_referencia between dt_parametro_inicio_w and dt_parametro_fim_w and a.nr_interno_conta     	= b.nr_interno_conta and a.nr_atendimento	= t.nr_atendimento  and a.nr_interno_conta 	= nr_interno_conta_ww group by 
	PKG_DATE_UTILS.start_of(a.dt_mesano_referencia,'month', 0),
	a.nr_interno_conta,
	a.nr_atendimento,
	PKG_DATE_UTILS.start_of(b.dt_referencia,'month', 0),
	a.cd_estabelecimento,
	a.cd_convenio_parametro,
	b.cd_setor_atendimento,
	b.cd_setor_paciente,
	t.ie_tipo_atendimento,
	CASE WHEN coalesce(p.ie_status_protocolo,9)=2 THEN '10' WHEN coalesce(p.ie_status_protocolo,9)=1 THEN '8' WHEN coalesce(p.ie_status_protocolo,9)=3 THEN '9'  ELSE CASE WHEN ie_status_acerto=2 THEN '6'  ELSE CASE WHEN coalesce(t.dt_alta::text, '') = '' THEN '2'  ELSE '4' END  END  END ,
	b.ie_proc_mat,
	b.cd_especialidade,
	b.cd_conta_contabil,
	b.nr_seq_grupo_rec,
	b.cd_estrutura_conta,
	b.nr_seq_conta_financ,
	coalesce(a.ie_complexidade,'B'),
	CASE WHEN coalesce(nr_seq_proc_pacote::text, '') = '' THEN 'N'  ELSE 'S' END ,
	a.cd_categoria_parametro,
	ROUND(coalesce(t.dt_alta,clock_timestamp()) - dt_entrada),
	PKG_DATE_UTILS.start_of(coalesce(p.dt_entrega_convenio,clock_timestamp()),'dd', 0),
	b.ie_tipo_financiamento, 
	b.cd_grupo,  
	b.cd_subgrupo, 
	b.cd_forma_organizacao, 
	b.ie_complexidade, 
	b.cd_cgc_prestador,
	coalesce(b.nr_prescricao,0),
	b.ds_grupo,
	b.ds_subgrupo,
	b.ds_forma_organizacao,
	b.ds_complexidade,
	b.ds_tipo_financiamento,
        b.vl_medico
order by b.cd_setor_atendimento;

C01 CURSOR FOR
	SELECT  a.nr_interno_conta,		
		a.nm_usuario,
		a.cd_estabelecimento
	from	conta_paciente a
	where	a.ie_status_acerto 	= 1
	and	coalesce(a.ie_cancelamento::text, '') = ''
	and	a.dt_mesano_referencia between dt_parametro_inicio_w and dt_parametro_fim_w
	and	((ie_conta_aberta_w	= 'S') or (ie_conta_aberta_w = 'R' and coalesce(a.dt_geracao_resumo::text, '') = ''))
	order by cd_estabelecimento;		
	
	
C02 CURSOR FOR
SELECT	distinct
	a.nr_interno_conta	
from 	conta_paciente a
where 	a.dt_mesano_referencia between dt_parametro_inicio_w and dt_parametro_fim_w;


BEGIN

select	coalesce(max(vl_parametro),'N')
into STRICT	ie_consiste_simultaneo_w
from	funcao_parametro
where	cd_funcao	= 291
and	nr_sequencia	= 56;

if (ie_consiste_simultaneo_w = 'S') then

	CALL gravar_processo_longo('','GERAR_EIS_RESULTADO',null);

	begin
	SELECT	substr(wheb_mensagem_pck.get_texto(306342,'DS_PROGRAM=' || program || ';DS_SID=' || sid || ';DS_SERIAL=' || serial# ||
			';DS_OSUSER=' || osuser || ';DS_MACHINE=' || machine),1,255)
	INTO STRICT	ds_erro_w
	FROM 	v$session
	WHERE	audsid <> (SELECT userenv('sessionid') )
	AND	username = (select username from v$session where audsid = (select userenv('sessionid') ))
	AND	action like 'GERAR_EIS_RESULTADO%';
	exception
	when others then
		ds_erro_w := '';
	end;

	if (ds_erro_w IS NOT NULL AND ds_erro_w::text <> '')  then
		CALL gravar_processo_longo('','',null);
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(233455,'DS_ERRO_P='||ds_erro_w);	
	end if;
	
end if;

nr_sequencia_w := Gravar_Log_Indicador(1289, substr(wheb_mensagem_pck.get_texto(306345),1,255), clock_timestamp(), PKG_DATE_UTILS.start_of(dt_parametro_p,'dd', 0), nm_usuario_p, nr_sequencia_w);

select coalesce(max(IE_CONTA_PROV_RESULT),'N')
into STRICT	ie_conta_aberta_w
from 	eis_parametro;

if (ie_conta_aberta_w = 'T') and (PKG_DATE_UTILS.extract_field('HOUR',clock_timestamp()) in ('21','22','23','00','01','02','03','04','05','06')) then
	ie_conta_aberta_w := 'S';
elsif (ie_conta_aberta_w = 'P') and (PKG_DATE_UTILS.extract_field('HOUR',clock_timestamp()) in ('05','12')) then
	ie_conta_aberta_w := 'S';
elsif (ie_conta_aberta_w = 'M') and (PKG_DATE_UTILS.extract_field('HOUR',clock_timestamp()) in ('00')) then
	ie_conta_aberta_w := 'S';
end if;
commit;
dt_atualizacao_w			:= clock_timestamp();
dt_parametro_fim_w			:= pkg_date_utils.get_datetime(pkg_date_utils.end_of(dt_parametro_p, 'MONTH'), coalesce(dt_parametro_p, PKG_DATE_UTILS.GET_TIME('00:00:00')), 0);
dt_parametro_fim_w			:= pkg_date_utils.get_time(dt_parametro_fim_w, 23, 59, 59, 0);
dt_parametro_fim_w			:= PKG_DATE_UTILS.ADD_MONTH(dt_parametro_fim_w,1,0);
dt_parametro_Inicio_w		  	:= PKG_DATE_UTILS.start_of(dt_parametro_p,'month', 0);
dt_referencia_w                   	:= PKG_DATE_UTILS.start_of(dt_parametro_p,'month', 0);
i					:= 1;

-- Esse tratamento e para quando for atualizar um mes anterior ao atual, para que atualize apenas o mes anterior, pois quando e o mes atual o sistema acrescenta um mes posterior na atualizacao, dessa forma, 
-- a atualizacao de 2 meses inteiros se torna lenta
if (PKG_DATE_UTILS.start_of(dt_parametro_p,'month', 0) < PKG_DATE_UTILS.start_of(clock_timestamp(),'month', 0)) then
	dt_parametro_fim_w:= PKG_DATE_UTILS.ADD_MONTH(dt_parametro_fim_w,-1,0);	
end if;

nr_sequencia_ww := Gravar_Log_Indicador(1289, substr(wheb_mensagem_pck.get_texto(306346),1,255), clock_timestamp(), PKG_DATE_UTILS.start_of(dt_parametro_p,'dd',0), nm_usuario_p, nr_sequencia_ww);
cd_estabelecimento_ant_w:= 0;
OPEN C01;
LOOP
FETCH C01 into 	
	nr_interno_conta_w,
	nm_usuario_w,
	cd_estabelecimento_res_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	ie_atualiza_taxa_adm_w:= 'N';
	if (cd_estabelecimento_ant_w <> cd_estabelecimento_res_w) then
		select 	coalesce(max(b.ie_atualiza_taxa_adm),'N')
		into STRICT	ie_atualiza_taxa_adm_w
		from	 parametro_faturamento b
		where	 b.cd_estabelecimento	= cd_estabelecimento_res_w;
	end if;
	cd_estabelecimento_ant_w:= cd_estabelecimento_res_w;
	
	vetor_conta_w[i].nr_interno_conta	:= nr_interno_conta_w;
	vetor_conta_w[i].ie_atualiza_taxa_adm	:= ie_atualiza_taxa_adm_w;
	vetor_conta_w[i].nm_usuario		:= nm_usuario_w;	
	i	:= i + 1;		
	end;
END LOOP;
CLOSE C01;

i 	:= vetor_conta_w.count;
v	:= 0;
for k in 1.. i loop
	begin
	
	begin
	CALL Atualizar_Resumo_Conta(Vetor_conta_w[k].nr_interno_conta, 2);
	if (Vetor_conta_w[k].ie_atualiza_taxa_adm = 'S') then
		CALL atualizar_taxa_especial(Vetor_conta_w[k].nr_interno_conta, Vetor_conta_w[k].nm_usuario);
	end if;
	exception
	when others then
		nm_usuario_w	:= nm_usuario_w;
	end;
	
	v:= v + 1;
	if (v > 50)  then	
		commit;
		v:= 0;
	end if;
		
	end;
end loop;

commit;
CALL Atualizar_Log_Indicador(clock_timestamp(), nr_sequencia_ww);


delete from eis_Resultado
where dt_referencia between dt_parametro_inicio_w and dt_parametro_fim_w;

nr_sequencia_www := Gravar_Log_Indicador(1289, substr(wheb_mensagem_pck.get_texto(306349),1,255), clock_timestamp(), PKG_DATE_UTILS.start_of(dt_parametro_p,'dd',0), nm_usuario_p, nr_sequencia_www);
a	:= 1;
begin
open C02;
exception
when others then
	ds_erro_w := SQLERRM(SQLSTATE);
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(183637,'DS_ERRO_P='||ds_erro_w);
end;
loop
fetch C02 into 	
	nr_interno_conta_ww;
	EXIT WHEN NOT FOUND; /* apply on C02 */
	begin
	
	select	coalesce(max(cd_convenio_parametro),0),
		coalesce(max(cd_categoria_parametro),'0'),
		coalesce(max(nr_atendimento),0),
		coalesce(max(cd_estabelecimento),0),
		coalesce(max(nr_seq_protocolo),0),
		coalesce(max(ie_complexidade),'B')
	into STRICT	cd_convenio_parametro_w,
		cd_categoria_parametro_w,
		nr_atendimento_w,
		cd_estabelecimento_w,
		nr_seq_protocolo_w,
		ie_complexidade_w
	from 	conta_paciente
	where 	nr_interno_conta =  nr_interno_conta_ww;	
	
	select	coalesce(max(ie_tipo_atendimento),0),
		coalesce(max(cd_pessoa_fisica),0),
		coalesce(max(ie_clinica),0),
		coalesce(max(cd_medico_resp),'0'),
		coalesce(max(cd_procedencia_w),0),
		coalesce(max(cd_medico_referido),'0'),
		coalesce(max(cd_estabelecimento),1),
		max(nr_seq_classif_medico),
		max(nr_seq_classificacao),
		max(coalesce(nr_seq_queixa,0))		
	into STRICT	ie_tipo_atendimento_w,
		cd_pessoa_fisica_w,
		ie_clinica_w,
		cd_medico_resp_w,
		cd_procedencia_w,
		cd_medico_referido_w,
		cd_estab_atend_w,
		nr_seq_classif_medico_w,
		nr_seq_classificacao_w,
		nr_seq_queixa_w		
	from 	atendimento_paciente
	where 	nr_atendimento = nr_atendimento_w;
	
	ds_tipo_atend_w:= substr(wheb_mensagem_pck.get_texto(309644),1,255);
	if (ie_tipo_atendimento_w = 1) then
		ds_tipo_atend_w:= substr(wheb_mensagem_pck.get_texto(309644),1,255);
	elsif (ie_tipo_atendimento_w = 3) then
		ds_tipo_atend_w:= substr(wheb_mensagem_pck.get_texto(309645),1,255);
	elsif (ie_tipo_atendimento_w = 7) then
		ds_tipo_atend_w:= substr(wheb_mensagem_pck.get_texto(309647),1,255);
	elsif (ie_tipo_atendimento_w = 8) then
		ds_tipo_atend_w:= substr(wheb_mensagem_pck.get_texto(309648),1,255);
	end if;
	
	select	max(ds_procedencia)
	into STRICT	ds_procedencia_w
	from	procedencia
	where	cd_procedencia	= cd_procedencia_w;
	
	select	max(nm_pessoa_fisica)
	into STRICT	nm_medico_resp_w
	from 	pessoa_fisica
	where 	cd_pessoa_fisica = cd_medico_resp_w;
	
	select	max(nm_pessoa_fisica)
	into STRICT	nm_medico_referido_w
	from 	pessoa_fisica
	where 	cd_pessoa_fisica = cd_medico_referido_w;		
	
	SELECT 	max(a.cd_municipio_ibge)
	into STRICT	cd_municipio_ibge_w
	FROM	compl_pessoa_fisica a
	WHERE	a.cd_pessoa_fisica 	= cd_pessoa_fisica_w
	AND	a.ie_tipo_complemento 	= 1;	
	
	ds_municipio_ibge_w:= '';
	if (cd_municipio_ibge_w IS NOT NULL AND cd_municipio_ibge_w::text <> '') then
		SELECT	max(ds_municipio)
		INTO STRICT	ds_municipio_ibge_w
		FROM	sus_municipio
		WHERE	cd_municipio_ibge = cd_municipio_ibge_w;
	end if;
				
	select 	max(ds_categoria)
	into STRICT	ds_categoria_w
	from 	categoria_convenio
	where 	cd_convenio = cd_convenio_parametro_w
	and 	cd_categoria = cd_categoria_parametro_w;
	
	select 	max(ds_convenio),
		coalesce(max(cd_cgc),'0'),
		max(ie_tipo_convenio)
	into STRICT	ds_convenio_w,
		cd_cgc_w,
		ie_tipo_convenio_w
	from 	convenio
	where 	cd_convenio = cd_convenio_parametro_w;
	
	
	ds_tipo_convenio_w:= '';
	if (ie_tipo_convenio_w = 1) then
		ds_tipo_convenio_w:= substr(wheb_mensagem_pck.get_texto(309650),1,255);
	elsif (ie_tipo_convenio_w = 2) then
		ds_tipo_convenio_w:= substr(wheb_mensagem_pck.get_texto(309651),1,255);
	elsif (ie_tipo_convenio_w = 3) then
		ds_tipo_convenio_w:= substr(wheb_mensagem_pck.get_texto(309654),1,255);
	elsif (ie_tipo_convenio_w = 4) then
		ds_tipo_convenio_w:= substr(wheb_mensagem_pck.get_texto(309655),1,255);
	elsif (ie_tipo_convenio_w = 5) then
		ds_tipo_convenio_w:= substr(wheb_mensagem_pck.get_texto(309658),1,255);
	elsif (ie_tipo_convenio_w = 6) then
		ds_tipo_convenio_w:= substr(wheb_mensagem_pck.get_texto(309660),1,255);
	elsif (ie_tipo_convenio_w = 7) then
		ds_tipo_convenio_w:= substr(wheb_mensagem_pck.get_texto(309662),1,255);
	elsif (ie_tipo_convenio_w = 8) then
		ds_tipo_convenio_w:= substr(wheb_mensagem_pck.get_texto(309666),1,255);
	elsif (ie_tipo_convenio_w = 9) then
		ds_tipo_convenio_w:= substr(wheb_mensagem_pck.get_texto(309668),1,255);
	elsif (ie_tipo_convenio_w = 10) then
		ds_tipo_convenio_w:= substr(wheb_mensagem_pck.get_texto(309669),1,255);
	end if;
	
	select	coalesce(max(nr_seq_pais),0)
	into STRICT	nr_seq_pais_w
	from	pessoa_juridica b
	where	b.cd_cgc = cd_cgc_w;
	
	select	coalesce(max(CD_CODIGO_PAIS),'0')
	into STRICT	CD_CODIGO_PAIS_w
	from	pais
	where	nr_sequencia	= nr_seq_pais_w;	
		
	ie_brasil_w:= 'S';
	
	if (CD_CODIGO_PAIS_w <> '0') and (CD_CODIGO_PAIS_w <> '55') then
		ie_brasil_w	:= 'N';
	end if;	
	
	select	max(x.ds_classificacao)
	into STRICT	ds_classificacao_w
	from 	convenio_classif y, 
		classificacao_convenio x 
	where	x.nr_sequencia = y.nr_seq_classificacao 
	and 	y.cd_convenio = cd_convenio_parametro_w;
	
	select	coalesce(max(cd_empresa),1)
	into STRICT	cd_empresa_w
	from 	estabelecimento
	where	cd_estabelecimento = cd_estabelecimento_w;
	
	select 	max(nr_protocolo),
		max(ie_tipo_protocolo)
	into STRICT	nr_protocolo_w,
		ie_tipo_protocolo_w
	from 	protocolo_convenio
	where 	nr_seq_protocolo = nr_seq_protocolo_w;
		
	cd_doenca_w:= obter_cid_atendimento(nr_atendimento_w, 'P');
	
	select	max(ds_doenca_cid),
		max(cd_categoria_cid)
	into STRICT	ds_doenca_w,
		cd_categoria_cid_w
	from	cid_doenca
	where	cd_doenca_cid = cd_doenca_w;
	
	ds_categoria_cid_w:= '';
	if (cd_categoria_cid_w IS NOT NULL AND cd_categoria_cid_w::text <> '') then
		select	substr(ds_categoria_cid,1,240)
		into STRICT	ds_categoria_cid_w
		from	cid_categoria
		where	cd_categoria_cid = cd_categoria_cid_w;
	else
		ds_categoria_cid_w:= '';
	end if;
		
	begin
	ds_estabelecimento_w	:= obter_nome_estabelecimento(cd_estabelecimento_w);	
	ds_estab_atend_w	:= obter_nome_estabelecimento(cd_estab_atend_w);	
	exception
	when others then
		ds_estabelecimento_w	:= '';
		ds_estab_atend_w	:= '';
	end;		
	
	cd_convenio_atend_w:= obter_convenio_atendimento(nr_atendimento_w);
	
	select	max(ds_convenio)
	into STRICT	ds_conv_atend_w
	from 	convenio
	where 	cd_convenio = cd_convenio_atend_w;
	
	ds_classificacao_medico_w:= '';
	if (nr_seq_classif_medico_w IS NOT NULL AND nr_seq_classif_medico_w::text <> '') then
		select	max(ds_classificacao)
		into STRICT	ds_classificacao_medico_w
		from	medico_classif_atend
		where	nr_sequencia = nr_seq_classif_medico_w;
	end if;
	
	ds_classificacao_atend_w:= '';
	if (nr_seq_classificacao_w IS NOT NULL AND nr_seq_classificacao_w::text <> '') then
		select	max(ds_classificacao)
		into STRICT	ds_classificacao_atend_w
		from	classificacao_atendimento
		where	nr_sequencia	= nr_seq_classificacao_w;
	end if;
	
	ds_queixa_w:= '';
	if (coalesce(nr_seq_queixa_w,0) > 0) then
		select	max(DS_QUEIXA)
		into STRICT	ds_queixa_w
		from	QUEIXA_PACIENTE
		where	nr_sequencia = nr_seq_queixa_w
		and 	coalesce(cd_estabelecimento,wheb_usuario_pck.get_cd_estabelecimento) = wheb_usuario_pck.get_cd_estabelecimento;

	end if;
	
	ds_idade_pf_w		:= substr(obter_idade_pf(cd_pessoa_fisica_w,clock_timestamp(),'E'),1,60);
	ds_origem_convenio_w	:= SUBSTR(OBTER_CONV_ORIGEM_USUARIO(OBTER_ORIGEM_CONV_ATEND(NR_ATENDIMENTO_w,'C')),1,60);
	
	select 	Eis_Obter_Plano_Convenio_Atend(nr_atendimento_w)
	into STRICT	cd_plano_w
	;
	
	if (cd_convenio_parametro_w <> cd_convenio_atend_w) then
		cd_plano_w:= null;
	end if;	
	
	
	if (ie_brasil_w = 'S') then
		ds_conv_nac_w:= ds_convenio_w;
		ds_conv_int_w:= null;
	else
		ds_conv_nac_w:= null;
		ds_conv_int_w:= ds_convenio_w;
	end if;
	
	ie_conv_nac_w	  := ie_brasil_w;
	ds_complexidade_w := '';
	
	if (ie_complexidade_w = 'A') then
		ds_complexidade_w	:= substr(wheb_mensagem_pck.get_texto(309670),1,255);
	elsif (ie_complexidade_w = 'M') then
		ds_complexidade_w	:= substr(wheb_mensagem_pck.get_texto(309671),1,255);
	elsif (ie_complexidade_w = 'B') then
		ds_complexidade_w	:= substr(wheb_mensagem_pck.get_texto(309674),1,255);
	end if;
	
	--Adding for SO 2143764
		select max(nr_seq_patient_category), obter_patient_category(nr_atendimento_w)
		into STRICT nr_seq_patient_category_w, ds_patient_category_w
		from atend_categoria_convenio
		where nr_atendimento = nr_atendimento_w
		and cd_convenio = cd_convenio_atend_w
		and cd_categoria = cd_categoria_parametro_w
		and trunc(dt_inicio_vigencia) <= trunc(dt_parametro_p);
		
		begin
			select 	substr(coalesce(max(obter_desc_procedimento(cd_procedimento, ie_origem_proced)),'NO'),1,255),
					substr(coalesce(max(OBTER_GRUPO_PROCEDIMENTO(cd_procedimento, ie_origem_proced,'D')),'NOOO'),1,240)
			into STRICT 	ds_procedimento_w,
					ds_grupo_proc_w
			from procedimento_paciente
			where nr_atendimento = nr_atendimento_w
			and nr_interno_conta = nr_interno_conta_ww
			and ie_origem_proced = 15;
		exception
			when no_data_found then
				ds_procedimento_w:=null;
				ds_grupo_proc_w:=null;
		end;
	-- Changes completed			
	vetor_conta_ww[a].nr_interno_conta		:= nr_interno_conta_ww;
	vetor_conta_ww[a].ds_tipo_atend         	:= ds_tipo_atend_w;
	vetor_conta_ww[a].ds_convenio_categoria         := substr(ds_convenio_w || ' - ' || ds_categoria_w ,1,200);
	vetor_conta_ww[a].cd_convenio_categoria      	:= substr(cd_convenio_parametro_w || cd_categoria_parametro_w,1,60);
	vetor_conta_ww[a].ds_convenio_plano          	:= substr(ds_convenio_w || ' - ' || obter_desc_plano(cd_convenio_parametro_w, cd_plano_w),1,200);
	vetor_conta_ww[a].cd_plano			:= cd_plano_w;
	vetor_conta_ww[a].ds_conv_nac                	:= ds_conv_nac_w;
	vetor_conta_ww[a].ds_conv_int                	:= ds_conv_int_w;
	vetor_conta_ww[a].ie_conv_nac                	:= ie_conv_nac_w;
	vetor_conta_ww[a].ds_classif_convenio        	:= ds_classificacao_w;
	vetor_conta_ww[a].cd_empresa_estab           	:= cd_empresa_w;
	vetor_conta_ww[a].ds_municipio_ibge_pf       	:= substr(ds_municipio_ibge_w,1,200);
	vetor_conta_ww[a].ie_clinica_atend           	:= ie_clinica_w;
	vetor_conta_ww[a].ds_clinica_atend           	:= substr(obter_valor_dominio(17, ie_clinica_w),1,200);
	vetor_conta_ww[a].nr_seq_prot                	:= nr_seq_protocolo_w;
	vetor_conta_ww[a].nr_prot                    	:= substr(nr_protocolo_w,1,40);
	vetor_conta_ww[a].nm_medico_atend            	:= nm_medico_resp_w;
	vetor_conta_ww[a].cd_cid_doenca              	:= substr(cd_doenca_w,1,255);
	vetor_conta_ww[a].ds_cid_doenca              	:= substr(ds_doenca_w, 1, 200);
	vetor_conta_ww[a].ie_tipo_prot               	:= ie_tipo_protocolo_w;
	vetor_conta_ww[a].ds_tipo_prot               	:= substr(obter_valor_dominio(73, coalesce(ie_tipo_protocolo_w,0)),1,120);
	vetor_conta_ww[a].cd_proced_atend		:= substr(cd_procedencia_w,1,255);
	vetor_conta_ww[a].ds_proced_atend            	:= SUBSTR(ds_procedencia_w,1,200);
	vetor_conta_ww[a].ds_estab                   	:= substr(ds_estabelecimento_w,1,220);
	vetor_conta_ww[a].ds_conv_atend              	:= substr(ds_conv_atend_w,1,100);	
	vetor_conta_ww[a].nm_medico_ref              	:= coalesce(nm_medico_referido_w, substr(wheb_mensagem_pck.get_texto(246341),1,255));
	vetor_conta_ww[a].cd_pessoa_fisica           	:= cd_pessoa_fisica_w;
	vetor_conta_ww[a].cd_categ_cid               	:= substr(cd_categoria_cid_w,1,10);
	vetor_conta_ww[a].ds_categ_cid               	:= SUBSTR(ds_categoria_cid_w,1,200);
	vetor_conta_ww[a].cd_estabelecimento_atend   	:= cd_estab_atend_w;
	vetor_conta_ww[a].ds_classificacao_medico    	:= coalesce(ds_classificacao_medico_w, substr(wheb_mensagem_pck.get_texto(246341),1,255));
	vetor_conta_ww[a].nr_seq_classif_medico		:= nr_seq_classif_medico_w;
	vetor_conta_ww[a].ds_classificacao_atend     	:= substr(ds_classificacao_atend_w,1,60);
	vetor_conta_ww[a].nr_seq_classif_atend    	:= nr_seq_classificacao_w;
	vetor_conta_ww[a].ds_estabelecimento_atend   	:= SUBSTR(ds_estab_atend_w,1,220);
	vetor_conta_ww[a].ds_motivo_atendimento      	:= SUBSTR(ds_queixa_w,1,200);
	vetor_conta_ww[a].ds_origem_convenio         	:= ds_origem_convenio_w;
	vetor_conta_ww[a].ds_conv_conta		   	:= ds_convenio_w;
	vetor_conta_ww[a].ie_tipo_conv		   	:= ie_tipo_convenio_w;
	vetor_conta_ww[a].ds_tipo_conv		   	:= ds_tipo_convenio_w;
	vetor_conta_ww[a].cd_conv_atend		   	:= cd_convenio_atend_w;
	vetor_conta_ww[a].ds_idade_pf		   	:= ds_idade_pf_w;
	vetor_conta_ww[a].ds_complexidade		:= ds_complexidade_w;
	vetor_conta_ww[a].nr_seq_patient_category		   	:= nr_seq_patient_category_w;
	vetor_conta_ww[a].ds_patient_category		   		:= ds_patient_category_w;
	vetor_conta_ww[a].ds_procedimento		   			:= ds_procedimento_w;
	vetor_conta_ww[a].ds_grupo_proc						:= ds_grupo_proc_w;
	a	:= a + 1;	
	
	end;
end loop;
close C02;

CALL Atualizar_Log_Indicador(clock_timestamp(), nr_sequencia_www);

nr_sequencia_wwww := Gravar_Log_Indicador(1289, substr(wheb_mensagem_pck.get_texto(306350),1,255), clock_timestamp(), PKG_DATE_UTILS.start_of(dt_parametro_p,'dd',0), nm_usuario_p, nr_sequencia_wwww);
v:= 0;	
a:= vetor_conta_ww.count;
for b in 1.. a loop
	begin
	
	nr_interno_conta_ww	:= vetor_conta_ww[b].nr_interno_conta;
	cd_setor_atend_ant_w	:= 0;	
	
	begin
	open C00;
	exception
	when others then
		ds_erro_w		:= SQLERRM(SQLSTATE);		
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(183637,'DS_ERRO_P='||ds_erro_w);
	end;	
	
	loop
	fetch C00 into 	
		qt_atend_w,
		qt_conta_w,
		dt_referencia_w,
		dt_receita_w,
		cd_estabelecimento_w,
		cd_convenio_parametro_w,
		cd_setor_atendimento_w,
		cd_setor_paciente_w,
		ie_tipo_atendimento_w,
		ie_protocolo_w,
		ie_proc_mat_w,
		cd_especialidade_w,
		cd_conta_contabil_w,
		vl_procedimento_w,        
		vl_material_w,            
		vl_terceiro_w,            
		vl_repasse_calc_w,
		vl_custo_w,
		vl_desconto_w,
		nr_seq_grupo_rec_w,
		cd_estrutura_conta_w,
		nr_seq_conta_financ_w,
		vl_imposto_w,
		ie_complexidade_w,
		ie_pacote_w,
		vl_original_w,
		cd_categoria_parametro_w,
		vl_hospital_w,
		qt_dia_internacao_w,
		dt_entrega_w,
		nr_conta_w,
		nr_atendimento_w,
		ie_tipo_financ_proc_w,
		vl_custo_excluido_w,
		cd_grupo_w,
		cd_subgrupo_w,
		cd_forma_organizacao_w,
		ie_complexidade_sus_w,
		qt_resumo_w,
		cd_cgc_prestador_w,
		nr_prescricao_w,
		ds_grupo_w,
		ds_subgrupo_w,
		ds_forma_organizacao_w,
		ds_complexidade_sus_w,
		ds_tipo_financiamento_w,
                vl_medico_w;
		EXIT WHEN NOT FOUND; /* apply on C00 */
		begin	

		if (cd_setor_atend_ant_w <> cd_setor_atendimento_w) then
		
			select	max(cd_centro_custo),
				coalesce(max(nr_seq_agrupamento),0),
				max(cd_classif_setor),
				max(ds_setor_atendimento)
			into STRICT	cd_centro_custo_w,
				nr_seq_agrup_classif_w,
				cd_classif_setor_w,
				ds_setor_atend_w
			from	setor_atendimento
			where	cd_setor_atendimento = cd_setor_atendimento_w;	
			
			ds_centro_custo_setor_w:= '';
			if (cd_centro_custo_w IS NOT NULL AND cd_centro_custo_w::text <> '') then
				select 	max(ds_centro_custo)
				into STRICT 	ds_centro_custo_setor_w
				from 	centro_custo
				where 	cd_centro_custo = cd_centro_custo_w;	
			end if;

			ds_agrupamento_classif_w:= '';
			if (nr_seq_agrup_classif_w > 0) then
				select  max(ds_agrupamento)
				into STRICT	ds_agrupamento_classif_w
				from 	agrupamento_setor b 
				where 	b.nr_sequencia = nr_seq_agrup_classif_w;
			end if;
			
			ds_classificacao_setor_w:= '';
			if (cd_classif_setor_w = 1) then
				ds_classificacao_setor_w:= substr(wheb_mensagem_pck.get_texto(309645),1,255);
			elsif (cd_classif_setor_w = 2) then
				ds_classificacao_setor_w:= substr(wheb_mensagem_pck.get_texto(309685),1,255);
			elsif (cd_classif_setor_w = 3) then
				ds_classificacao_setor_w:= substr(wheb_mensagem_pck.get_texto(309687),1,255);
			elsif (cd_classif_setor_w = 4) then
				ds_classificacao_setor_w:= substr(wheb_mensagem_pck.get_texto(309689),1,255);
			elsif (cd_classif_setor_w = 5) then
				ds_classificacao_setor_w:= substr(wheb_mensagem_pck.get_texto(309692),1,255);
			elsif (cd_classif_setor_w = 6) then
				ds_classificacao_setor_w:= substr(wheb_mensagem_pck.get_texto(309698),1,255);
			elsif (cd_classif_setor_w = 7) then
				ds_classificacao_setor_w:= substr(wheb_mensagem_pck.get_texto(309700),1,255);
			elsif (cd_classif_setor_w = 8) then
				ds_classificacao_setor_w:= substr(wheb_mensagem_pck.get_texto(309701),1,255);
			elsif (cd_classif_setor_w = 9) then
				ds_classificacao_setor_w:= substr(wheb_mensagem_pck.get_texto(309702),1,255);
			elsif (cd_classif_setor_w = 10) then
				ds_classificacao_setor_w:= substr(wheb_mensagem_pck.get_texto(309703),1,255);
			elsif (cd_classif_setor_w = 11) then
				ds_classificacao_setor_w:= substr(wheb_mensagem_pck.get_texto(309705),1,255);
			end if;				

		end if;
		
		cd_setor_atend_ant_w:= cd_setor_atendimento_w;
		
		if (ie_pacote_w = 'S') then
			ds_ie_pacote_w:= substr(wheb_mensagem_pck.get_texto(309708),1,255);
		else
			ds_ie_pacote_w:= substr(wheb_mensagem_pck.get_texto(309709),1,255);
		end if;
		
		ie_proc_mat_w   := coalesce(ie_proc_mat_w,'O');
		ds_ie_proc_mat_w:= substr(wheb_mensagem_pck.get_texto(309710),1,255);
		if (ie_proc_mat_w = 'A') then
			ds_ie_proc_mat_w:= substr(wheb_mensagem_pck.get_texto(309711),1,255);
		elsif (ie_proc_mat_w = 'C') then
			ds_ie_proc_mat_w:= substr(wheb_mensagem_pck.get_texto(309712),1,255);
		elsif (ie_proc_mat_w = 'D') then
			ds_ie_proc_mat_w:= substr(wheb_mensagem_pck.get_texto(309713),1,255);
		elsif (ie_proc_mat_w = 'E') then
			ds_ie_proc_mat_w:= substr(wheb_mensagem_pck.get_texto(309714),1,255);
		elsif (ie_proc_mat_w = 'M') then
			ds_ie_proc_mat_w:= substr(wheb_mensagem_pck.get_texto(309715),1,255);
		elsif (ie_proc_mat_w = 'O') then
			ds_ie_proc_mat_w:= substr(wheb_mensagem_pck.get_texto(309716),1,255);
		elsif (ie_proc_mat_w = 'P') then
			ds_ie_proc_mat_w:= substr(wheb_mensagem_pck.get_texto(309717),1,255);
		elsif (ie_proc_mat_w = 'S') then
			ds_ie_proc_mat_w:= substr(wheb_mensagem_pck.get_texto(309718),1,255);
		elsif (ie_proc_mat_w = 'T') then
			ds_ie_proc_mat_w:= substr(wheb_mensagem_pck.get_texto(309719),1,255);
		end if;
		
		ds_ie_protocolo_w:= substr(wheb_mensagem_pck.get_texto(309722),1,255);		
		if (ie_protocolo_w = 'N') then
			ds_ie_protocolo_w:= substr(wheb_mensagem_pck.get_texto(309722),1,255);
		elsif (ie_protocolo_w = 'S') then
			ds_ie_protocolo_w:= substr(wheb_mensagem_pck.get_texto(309744),1,255);
		elsif (ie_protocolo_w = '2') then
			ds_ie_protocolo_w:= substr(wheb_mensagem_pck.get_texto(309745),1,255);
		elsif (ie_protocolo_w = '4') then
			ds_ie_protocolo_w:= substr(wheb_mensagem_pck.get_texto(309746),1,255);
		elsif (ie_protocolo_w = '6') then
			ds_ie_protocolo_w:= substr(wheb_mensagem_pck.get_texto(309747),1,255);
		elsif (ie_protocolo_w = '8') then
			ds_ie_protocolo_w:= substr(wheb_mensagem_pck.get_texto(309748),1,255);
		elsif (ie_protocolo_w = '9') then
			ds_ie_protocolo_w:= substr(wheb_mensagem_pck.get_texto(309749),1,255);
		elsif (ie_protocolo_w = '10') then
			ds_ie_protocolo_w:= substr(wheb_mensagem_pck.get_texto(309750),1,255);
		end if;		
		
		cd_medico_prescr_w:= null;
		if (nr_prescricao_w > 0) then
			begin
			
			select	max(cd_medico)
			into STRICT	cd_medico_prescr_w
			from	prescr_medica
			where	nr_prescricao	= nr_prescricao_w;
			
			 nm_medico_presricao_w:=  substr(wheb_mensagem_pck.get_texto(246341),1,255);
			if (cd_medico_prescr_w IS NOT NULL AND cd_medico_prescr_w::text <> '') then
				select 	coalesce(max(y.nm_pessoa_fisica),substr(wheb_mensagem_pck.get_texto(246341),1,255))
				into STRICT	nm_medico_presricao_w
				from 	pessoa_fisica y
				where 	y.cd_pessoa_fisica = cd_medico_prescr_w;
			end if;	
			
			exception
			when others then
				cd_medico_prescr_w	:= null;
				nm_medico_presricao_w	:= null;
			end;
		end if;
		
		ds_grupo_rec_w		:=	substr(obter_desc_grupo_rec(nr_seq_grupo_rec_w),1,200);
		
		ds_espec_w:= '';
		if (coalesce(cd_especialidade_w,0) > 0) then
			ds_espec_w:=	substr(obter_nome_especialidade(cd_especialidade_w),1,100);
		end if;
		
		ds_prest_w:= '';
		if (cd_cgc_prestador_w IS NOT NULL AND cd_cgc_prestador_w::text <> '') then
			ds_prest_w:=	substr(obter_dados_pf_pj(null, cd_cgc_prestador_w, 'N'),1,100);
		end if;
		
		ds_setor_pac_w:= '';
		if (coalesce(cd_setor_paciente_w,0) > 0) then
			ds_setor_pac_w:=	substr(obter_nome_setor(cd_setor_paciente_w),1,100);
		end if;
		
		begin
		insert into eis_Resultado(
			dt_referencia,						ie_periodo,						cd_estabelecimento,			
			cd_convenio,						cd_setor_atendimento,					cd_setor_paciente,		
			ie_tipo_atendimento,					dt_receita,						ie_protocolo,			
			ie_proc_mat,						cd_especialidade,					cd_conta_contabil, 		
			vl_procedimento,        				vl_material,            				vl_terceiro,
			vl_custo,						vl_desconto,						nr_seq_grupo_rec,			
			cd_estrutura_conta,					nr_seq_conta_financ,					vl_imposto,			
			ie_complexidade,					ie_pacote,						vl_original,			
			cd_categoria,						vl_hospital,						qt_dia_internacao,		
			dt_entrega,						vl_repasse_calc,					qt_atendimento,
			qt_conta,						cd_plano,						nr_interno_conta,			
			nr_atendimento,						ie_tipo_financ_proc,					vl_custo_excluido,		
			cd_grupo,						cd_subgrupo,						cd_forma_organizacao,		
			ie_complexidade_sus,					cd_centro_custo_setor,								
			NR_SEQ_AGRUP_CLASSIF,					nr_seq_classif_medico,					nr_seq_classificacao,
			qt_resumo,						cd_cgc_prestador,					nr_prescricao,				
			cd_medico_prescr,					ds_tipo_atend,						ds_convenio_categoria,		
			cd_convenio_categoria,					ds_convenio_plano,					ds_conv_nac,
			ds_conv_int,						ie_conv_nac,						ds_classif_convenio,			
			cd_empresa_estab,					ds_municipio_ibge_pf,					ie_clinica_atend,		
			ds_clinica_atend,					nr_seq_prot,						nr_prot,			
			nm_medico_atend,					cd_cid_doenca,						ds_cid_doenca,			
			ie_tipo_prot,						ds_tipo_prot,						cd_proced_atend,
			ds_proced_atend,					ds_estab,						ds_conv_atend,				
			nm_medico_ref, 						cd_pessoa_fisica,					cd_categ_cid,			
			ds_categ_cid,						cd_estabelecimento_atend,				ds_classificacao_medico,	
			ds_classificacao_atend,					ds_ie_pacote,						ds_ie_proc_mat,			
			ds_ie_protocolo,					ds_estabelecimento_atend,				ds_motivo_atendimento,
			ds_origem_convenio,					ds_conv_conta,						ie_tipo_conv,				
			ds_tipo_conv,						cd_conv_atend,						ds_idade_pf,
			ds_grupo_sus, 						ds_subgrupo_sus, 					ds_forma_org_sus, 
			ds_complex_sus, 					ds_tipo_financiamento,					nm_medico_prescricao,
			ds_complexidade_proc,					ds_centro_custo_setor, 					ds_agrupamento_classif,
			cd_classificacao_setor, 				ds_classificacao_setor,					ds_setor_atend,
			ds_grupo_rec, 						ds_espec, 						ds_prest, 
			ds_setor_pac,						nr_seq_patient_category,		                ds_patient_category,
			ds_procedimento,					ds_grupo_proc,                                          vl_medico)	   
		values (
			dt_referencia_w,					ie_periodo_w,						cd_estabelecimento_w,			
			cd_convenio_parametro_w,				cd_setor_atendimento_w,					cd_setor_paciente_w,		
			ie_tipo_atendimento_w,					dt_receita_w,						ie_protocolo_w,			
			ie_proc_mat_w,						cd_especialidade_w,					cd_conta_contabil_w, 		
			vl_procedimento_w,        				vl_material_w,            				vl_terceiro_w,            
			vl_custo_w,						vl_desconto_w,						nr_seq_grupo_rec_w,			
			cd_estrutura_conta_w,					nr_seq_conta_financ_w,					vl_imposto_w,			
			ie_complexidade_w,					ie_pacote_w,						vl_original_w,			
			cd_categoria_parametro_w,				vl_hospital_w,						qt_dia_internacao_w,		
			dt_entrega_w,						vl_repasse_calc_w,					qt_atend_w,
			qt_conta_w,						vetor_conta_ww[b].cd_plano,			nr_conta_w,			
			nr_atendimento_w,					ie_tipo_financ_proc_w,					vl_custo_excluido_w,		
			cd_grupo_w,						cd_subgrupo_w,						cd_forma_organizacao_w,		
			ie_complexidade_sus_w,					cd_centro_custo_w,							
			nr_seq_agrup_classif_w,					vetor_conta_ww[b].nr_seq_classif_medico,		vetor_conta_ww[b].nr_seq_classif_atend,
			qt_resumo_w,						cd_cgc_prestador_w,					nr_prescricao_w,			
			cd_medico_prescr_w,					vetor_conta_ww[b].ds_tipo_atend,			vetor_conta_ww[b].ds_convenio_categoria,	
			vetor_conta_ww[b].cd_convenio_categoria,		vetor_conta_ww[b].ds_convenio_plano,			vetor_conta_ww[b].ds_conv_nac,
			vetor_conta_ww[b].ds_conv_int,				vetor_conta_ww[b].ie_conv_nac,				vetor_conta_ww[b].ds_classif_convenio,
			vetor_conta_ww[b].cd_empresa_estab,			vetor_conta_ww[b].ds_municipio_ibge_pf,			vetor_conta_ww[b].ie_clinica_atend,		
			vetor_conta_ww[b].ds_clinica_atend,			vetor_conta_ww[b].nr_seq_prot,				vetor_conta_ww[b].nr_prot,			
			vetor_conta_ww[b].nm_medico_atend,			vetor_conta_ww[b].cd_cid_doenca,			vetor_conta_ww[b].ds_cid_doenca,		
			vetor_conta_ww[b].ie_tipo_prot,				vetor_conta_ww[b].ds_tipo_prot,				vetor_conta_ww[b].cd_proced_atend,
			vetor_conta_ww[b].ds_proced_atend,			vetor_conta_ww[b].ds_estab,				vetor_conta_ww[b].ds_conv_atend,			
			vetor_conta_ww[b].nm_medico_ref, 			vetor_conta_ww[b].cd_pessoa_fisica,			vetor_conta_ww[b].cd_categ_cid,			
			vetor_conta_ww[b].ds_categ_cid,				vetor_conta_ww[b].cd_estabelecimento_atend,		vetor_conta_ww[b].ds_classificacao_medico,	
			vetor_conta_ww[b].ds_classificacao_atend,		ds_ie_pacote_w,						ds_ie_proc_mat_w,		
			ds_ie_protocolo_w,					vetor_conta_ww[b].ds_estabelecimento_atend,		vetor_conta_ww[b].ds_motivo_atendimento,
			vetor_conta_ww[b].ds_origem_convenio,			vetor_conta_ww[b].ds_conv_conta,			vetor_conta_ww[b].ie_tipo_conv,				
			vetor_conta_ww[b].ds_tipo_conv,				vetor_conta_ww[b].cd_conv_atend,			vetor_conta_ww[b].ds_idade_pf,
			ds_grupo_w, 						ds_subgrupo_w, 						ds_forma_organizacao_w, 
			ds_complexidade_sus_w, 					ds_tipo_financiamento_w,				nm_medico_presricao_w,
			vetor_conta_ww[b].ds_complexidade,			ds_centro_custo_setor_w, 				ds_agrupamento_classif_w,
			cd_classif_setor_w, 					ds_classificacao_setor_w,				ds_setor_atend_w,
			ds_grupo_rec_w, 					ds_espec_w, 						ds_prest_w, 
			ds_setor_pac_w, 					vetor_conta_ww[b].nr_seq_patient_category,	        vetor_conta_ww[b].ds_patient_category,
			vetor_conta_ww[b].ds_procedimento,		        vetor_conta_ww[b].ds_grupo_proc,                        vl_medico_w);
		exception
		when others then
			ds_erro_w		:= SQLERRM(SQLSTATE);
			-- Erro ao gravar Resumo: #@DS_ERRO_P#@
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(183641,'DS_ERRO_P='||ds_erro_w);
		end;	

		if (v > 1000) then
			commit;
			v:= 0;
		end if;
		v:= v + 1;
		
		end;
	end loop;
	close C00;	
	
	end;
end loop;

commit;

CALL Atualizar_Log_Indicador(clock_timestamp(), nr_sequencia_wwww);


ie_gerar_eis_fatur_diario_w:= coalesce(Obter_valor_param_usuario(0, 155, obter_perfil_ativo, nm_usuario_p, coalesce(wheb_usuario_pck.get_cd_estabelecimento,1)),'S');

if		((ie_gerar_eis_fatur_diario_w = 'S') or (ie_gerar_eis_fatur_diario_w = 'A')) then
		CALL gerar_eis_fatur_diario(dt_parametro_p,nm_usuario_p);
end if;
if		((ie_gerar_eis_fatur_diario_w = 'P') or (ie_gerar_eis_fatur_diario_w = 'A')) then
		CALL gerar_eis_prod_diario(dt_parametro_p,nm_usuario_p);
end if;

CALL gerar_eis_desemp_fatur(dt_parametro_p,nm_usuario_p);
CALL gerar_eis_proj_receita_nova(dt_parametro_p,nm_usuario_p);


CALL Atualizar_Log_Indicador(clock_timestamp(), nr_sequencia_w);

if (ie_consiste_simultaneo_w = 'S') then
	CALL gravar_processo_longo('','',0);
end if;

commit;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_eis_resultado_novo ( dt_parametro_p timestamp, nm_usuario_p text) FROM PUBLIC;

