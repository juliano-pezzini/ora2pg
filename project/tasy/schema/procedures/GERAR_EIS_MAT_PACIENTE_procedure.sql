-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_eis_mat_paciente ( dt_referencia_p timestamp, nm_usuario_p text) AS $body$
DECLARE


cd_material_w		integer;
qt_paciente_w		double precision;
vl_paciente_w		double precision;
qt_consumo_w		double precision;
vl_consumo_w		double precision;
vl_perda_venda_w		double precision;
vl_perda_custo_w		double precision;
cd_estabelecimento_w	integer;
qt_conv_est_cons_w	double precision;
cd_grupo_material_w	smallint;
qt_perda_w		double precision;
qt_inventario_w		double precision;
vl_inventario_w		double precision;
cd_centro_custo_w		integer;
nr_interno_conta_w		bigint;
cd_convenio_w		integer;
qt_atendimento_w		double precision;
qt_devolucao_w		double precision;
vl_adicional_w		double precision;
vl_glosa_w		double precision;
vl_amenor_w		double precision;
cd_categoria_w		varchar(10);
qt_erro_w		bigint;
nr_atendimento_w	atendimento_paciente.nr_atendimento%type;
qt_total_pac_w		double precision;
pr_total_pac_w		double precision;

C01 CURSOR FOR
SELECT 	/*+ INDEX (A) */	c.cd_estabelecimento,
	b.cd_material_estoque,
	coalesce(e.cd_centro_custo_consumo, e.cd_centro_custo),
	sum(coalesce(qt_material,0)),
	sum(coalesce(vl_material,0)),
	sum(CASE WHEN cd_acao=1 THEN  qt_material  ELSE 0 END ) qt_atendimento,
	sum(CASE WHEN cd_acao=2 THEN  qt_material * -1  ELSE 0 END ) qt_devolucao,
	a.nr_interno_conta,
	a.nr_atendimento,
	sum(obter_valor_conv_ret_glosa(null, a.nr_sequencia, 'A')),
	sum(obter_valor_conv_ret_glosa(null, a.nr_sequencia, 'GG')),
	sum(obter_valor_conv_ret_glosa(null, a.nr_sequencia, 'M'))
FROM conta_paciente f, atendimento_paciente c, material b, material_atend_paciente a, setor_atendimento d
LEFT OUTER JOIN centro_custo e ON (d.cd_centro_custo = e.cd_centro_custo)
WHERE a.dt_conta between trunc(dt_referencia_p,'month') and (last_day(trunc(dt_referencia_p,'dd')) + 86399/86400) and a.cd_material		= b.cd_material and a.nr_atendimento		= c.nr_atendimento and a.cd_setor_atendimento	= d.cd_setor_atendimento  and f.nr_interno_conta		= a.nr_interno_conta /* Felipe Martini, inclui a Conta Paciente  e a verificação de excluidos*/
  and coalesce(a.cd_motivo_exc_conta::text, '') = '' group by	c.cd_estabelecimento,
	b.cd_material_estoque,
	coalesce(e.cd_centro_custo_consumo, e.cd_centro_custo),
	a.nr_interno_conta,
	a.nr_atendimento;


BEGIN

delete from eis_mat_paciente
where dt_referencia	= trunc(dt_referencia_p,'month');

open C01;
loop
fetch C01 into
	cd_estabelecimento_w,
	cd_material_w,
	cd_centro_custo_w,
	qt_paciente_w,
	vl_paciente_w,
	qt_atendimento_w,
	qt_devolucao_w,
	nr_interno_conta_w,
	nr_atendimento_w,
	vl_adicional_w,
	vl_glosa_w,
	vl_amenor_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	begin
	select	cd_convenio_parametro,
		cd_categoria_parametro
	into STRICT	cd_convenio_w,
		cd_categoria_w
	from	conta_paciente
	where 	nr_interno_conta = nr_interno_conta_w;
	exception when others then
		cd_convenio_w	:= 0;
		cd_categoria_w  := 0;
	end;

	begin
	select	qt_conv_estoque_consumo
	into STRICT	qt_conv_est_cons_w
	from	material
	where	cd_material	= cd_material_w;
	exception when others then
		qt_conv_est_cons_w	:= 1;
	end;

	select 	/*+ INDEX (A) */		sum(coalesce(qt_material,0))
	into STRICT	qt_total_pac_w
	FROM conta_paciente f, atendimento_paciente c, material b, material_atend_paciente a, setor_atendimento d
LEFT OUTER JOIN centro_custo e ON (d.cd_centro_custo = e.cd_centro_custo)
WHERE a.cd_material		= b.cd_material and a.nr_atendimento	= c.nr_atendimento and a.cd_setor_atendimento	= d.cd_setor_atendimento  and f.nr_interno_conta	= a.nr_interno_conta and a.dt_conta between trunc(dt_referencia_p,'month') and (last_day(trunc(dt_referencia_p,'dd')) + 86399/86400) and c.cd_estabelecimento = cd_estabelecimento_w and b.cd_material_estoque = cd_material_w and coalesce(e.cd_centro_custo_consumo, e.cd_centro_custo) = cd_centro_custo_w and a.nr_atendimento = nr_atendimento_w and coalesce(a.cd_motivo_exc_conta::text, '') = '';

	pr_total_pac_w	:= dividir(qt_paciente_w, qt_total_pac_w);

	select	coalesce(sum(CASE WHEN b.ie_entrada_saida='S' THEN  coalesce(a.qt_estoque,0)  ELSE coalesce(a.qt_estoque,0)* -1 END ),0),
		coalesce(sum(CASE WHEN b.ie_entrada_saida='S' THEN  coalesce(a.vl_estoque,0)  ELSE coalesce(a.vl_estoque,0)* -1 END ),0)
	into STRICT	qt_consumo_w,
		vl_consumo_w
	from 	movimento_estoque_v1 a,
		operacao_estoque b
	where	a.cd_operacao_estoque = b.cd_operacao_estoque
	and	a.dt_mesano_referencia	= trunc(dt_referencia_p,'month')
	and	a.cd_estabelecimento	= cd_estabelecimento_w
	and	a.cd_material_estoque	= cd_material_w
	and	a.nr_atendimento	= nr_atendimento_w
	and	(a.dt_processo IS NOT NULL AND a.dt_processo::text <> '')
	and	(a.cd_material_estoque IS NOT NULL AND a.cd_material_estoque::text <> '')
	and exists (
		SELECT	1
		from	centro_custo c
		where	coalesce(c.cd_centro_custo_consumo, c.cd_centro_custo) = cd_centro_custo_w
		and	a.cd_centro_custo = c.cd_centro_custo);

	vl_inventario_w		:= 0;
	qt_inventario_w		:= 0;

	vl_consumo_w		:= (vl_consumo_w + vl_inventario_w) * coalesce(pr_total_pac_w,1);
	qt_consumo_w		:= (qt_consumo_w + qt_inventario_w) * coalesce(pr_total_pac_w,1);

	select 	cd_grupo_material
	into STRICT	cd_grupo_material_w
	from	estrutura_material_v
	where	cd_material	= cd_material_w;

	begin
	vl_perda_custo_w		:= 0;
	vl_perda_venda_w		:= 0;
	qt_paciente_w		:= dividir(qt_paciente_w, qt_conv_est_cons_w);
	qt_atendimento_w		:= dividir(qt_atendimento_w, qt_conv_est_cons_w);
	qt_devolucao_w		:= dividir(qt_devolucao_w, qt_conv_est_cons_w);
	qt_perda_w		:= qt_consumo_w + qt_inventario_w - qt_paciente_w;

	if (coalesce(qt_consumo_w,0) <> 0) then
		vl_perda_custo_w:= trunc(qt_perda_w * (dividir(vl_consumo_w, qt_consumo_w)),2);
	end if;
	if (coalesce(qt_paciente_w,0) <> 0) then
		vl_perda_venda_w:= trunc(qt_perda_w * (dividir(vl_paciente_w, qt_paciente_w)),2);
	end if;

	exception
		when others then
		qt_erro_w:= 0;
	end;



	if (coalesce(cd_centro_custo_w,0) > 0) and (coalesce(cd_grupo_material_w,0) > 0) then
		insert into eis_mat_paciente(
			dt_referencia,
			cd_estabelecimento,
			cd_material,
			cd_grupo_material,
			cd_centro_custo,
			dt_atualizacao,
			nm_usuario,
			cd_convenio,
			qt_paciente,
			qt_atendimento,
			qt_devolucao,
			qt_consumo,
			vl_paciente,
			vl_consumo,
			vl_perda_venda,
			vl_perda_custo,
			vl_adicional,
			vl_glosa,
			vl_amenor,
			cd_categoria)
		values (	trunc(dt_referencia_p,'month'),
			cd_estabelecimento_w,
			cd_material_w,
			cd_grupo_material_w,
			cd_centro_custo_w,
			clock_timestamp(),
			nm_usuario_p,
			cd_convenio_w,
			coalesce(qt_paciente_w,0),
			qt_atendimento_w,
			qt_devolucao_w,
			coalesce(qt_consumo_w,0),
			coalesce(vl_paciente_w,0),
			coalesce(vl_consumo_w,0),
			coalesce(vl_perda_venda_w,0) * -1,
			coalesce(vl_perda_custo_w,0) * -1,
			vl_adicional_w,
			vl_glosa_w,
			vl_amenor_w,
			cd_categoria_w);
	end if;
	end;
end Loop;
close C01;

commit;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_eis_mat_paciente ( dt_referencia_p timestamp, nm_usuario_p text) FROM PUBLIC;

