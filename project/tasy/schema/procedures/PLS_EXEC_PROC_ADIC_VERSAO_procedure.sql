-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_exec_proc_adic_versao ( nr_seq_proc_adic_p bigint, nm_usuario_p text) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Procedure utilizada para executar as bacas cadastradas na função OPS - Gestão de Operadoras / Processos adicionais versão
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[  ]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:Performance.
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
nm_objeto_w		pls_processo_adic_versao.nm_objeto%type;
nm_objeto_exec_w	pls_processo_adic_versao.nm_objeto_exec%type;
ie_sucesso_w		varchar(1);
sql_w			varchar(255);
ds_stack_w		varchar(4000);
nr_seq_ordem_w		pls_proc_adic_versao_log.nr_seq_ordem%type;



BEGIN
update	pls_processo_adic_versao
set	dt_inicio	= clock_timestamp()
where	nr_sequencia	= nr_seq_proc_adic_p;

commit;

select	nm_objeto,
	nm_objeto_exec
into STRICT	nm_objeto_w,
	nm_objeto_exec_w
from	pls_processo_adic_versao
where	nr_sequencia	= nr_seq_proc_adic_p;

begin
	-- se tiver cadastrada a linha de execução, executa ela.
	-- caso contrário executa apenas o nome do objeto
	if (nm_objeto_exec_w IS NOT NULL AND nm_objeto_exec_w::text <> '') then
		sql_w := 'begin ' || nm_objeto_exec_w ||'; end;';
	else
		sql_w := 'begin ' || nm_objeto_w ||'; end;';
	end if;

	EXECUTE sql_w;

	ie_sucesso_w	:= 'S';
exception
when others then
	ie_sucesso_w	:= 'N';
	ds_stack_w 	:= DBMS_UTILITY.FORMAT_ERROR_BACKTRACE || chr(13) || chr(10) || chr(13) || chr(10) || sqlerrm;
end;

if (ie_sucesso_w = 'S') then
	update	pls_processo_adic_versao
	set	dt_termino		= clock_timestamp(),
		nm_usuario_execucao	= nm_usuario_p
	where	nr_sequencia		= nr_seq_proc_adic_p;

	insert into pls_proc_adic_versao_log(nr_sequencia, dt_atualizacao, nm_usuario,
		 nr_seq_ordem, ds_log, nr_seq_proc_adic_versao,
		 ie_processo_executado)
	values (nextval('pls_proc_adic_versao_log_seq'), clock_timestamp(), nm_usuario_p,
		coalesce(nr_seq_ordem_w,0)+1, 'Processo executado com sucesso', nr_seq_proc_adic_p,
		'S');
elsif (ie_sucesso_w = 'N') then
	select	max(nr_seq_ordem)
	into STRICT	nr_seq_ordem_w
	from	pls_proc_adic_versao_log
	where	nr_seq_proc_adic_versao		= nr_seq_proc_adic_p;

	insert into pls_proc_adic_versao_log(nr_sequencia, dt_atualizacao, nm_usuario,
		 nr_seq_ordem, ds_log, nr_seq_proc_adic_versao,
		 ie_processo_executado)
	values (nextval('pls_proc_adic_versao_log_seq'), clock_timestamp(), nm_usuario_p,
		coalesce(nr_seq_ordem_w,0)+1, substr(ds_stack_w,1,400), nr_seq_proc_adic_p,
		'N');
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_exec_proc_adic_versao ( nr_seq_proc_adic_p bigint, nm_usuario_p text) FROM PUBLIC;

