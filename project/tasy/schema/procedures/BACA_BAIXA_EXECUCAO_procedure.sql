-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE baca_baixa_execucao () AS $body$
DECLARE

C01 CURSOR FOR 
	SELECT	* 
	from	movimento_estoque a 
	where	a.dt_movimento_estoque between 	to_date('17/10/2008 08:33:23','dd/mm/yyyy hh24:mi:ss') and to_date('23/10/2008 11:40:04','dd/mm/yyyy hh24:mi:ss') 
	and	a.cd_funcao	= 24 
	and	A.cd_operacao_estoque	= 4 
	and	upper(a.ds_observacao) like '%MAP%' 
	and	a.cd_acao	= 1 
	and	exists (	SELECT	1 
				from	conta_paciente b 
				where	b.nr_atendimento	 = a.nr_atendimento 
				and	b.ie_status_acerto	= 1) 
	and	not exists (	select 	1 
					from	material_atend_paciente c 
					where	c.nr_atendimento	 = a.nr_atendimento 
					and	a.cd_material		 = coalesce(c.cd_material_exec,c.cd_material) 
					and	c.dt_atendimento	= a.dt_movimento_estoque 
					and	a.cd_setor_atendimento	= c.cd_setor_atendimento 
					and	c.nr_sequencia		= somente_numero(a.nr_seq_tab_orig));

c01_w	 c01%rowtype;
nr_sequencia_w	bigint;
nr_seq_atepacu_w	bigint;
dt_entrada_unidade_w	timestamp;
cd_unidade_medida_w	varchar(30);
cd_convenio_w		bigint;
cd_categoria_w		varchar(15);
ie_aux_w		varchar(450);
qt_registros_w		bigint	:= 0;

BEGIN
 
open C01;
loop 
fetch C01 into 
	c01_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	select	nextval('material_atend_paciente_seq') 
	into STRICT	nr_sequencia_w 
	;
 
	select	max(cd_unidade_medida_consumo) 
	into STRICT	cd_unidade_medida_w 
	from	material 
	where	cd_material	= c01_w.cd_material;
	begin 
		SELECT * FROM obter_convenio_execucao(c01_w.nr_atendimento, c01_w.dt_movimento_estoque, cd_convenio_w, cd_categoria_w, ie_aux_w, ie_aux_w, ie_aux_w) INTO STRICT cd_convenio_w, cd_categoria_w, ie_aux_w, ie_aux_w, ie_aux_w;
	exception 
	when others then 
		cd_convenio_w	:= null;
	end;
 
 
	select	max(nr_seq_interno), 
		max(dt_entrada_unidade) 
	into STRICT	nr_seq_atepacu_w, 
		dt_entrada_unidade_w 
	from	atend_paciente_unidade a 
	where	a.nr_atendimento	= c01_w.nr_atendimento 
	and	a.cd_setor_atendimento	= c01_w.cd_Setor_atendimento;
 
	if (nr_seq_atepacu_w IS NOT NULL AND nr_seq_atepacu_w::text <> '') and (cd_convenio_w IS NOT NULL AND cd_convenio_w::text <> '') then 
		qt_registros_w	:= qt_registros_w + 1;
		insert into material_atend_paciente(	nr_seq_atepacu, 
							cd_setor_atendimento, 
							cd_acao, 
							NR_SEQUENCIA, 
							NR_ATENDIMENTO, 
							DT_ENTRADA_UNIDADE , 
							CD_MATERIAL, 
							DT_ATENDIMENTO, 
							CD_UNIDADE_MEDIDA, 
							QT_MATERIAL, 
							DT_ATUALIZACAO, 
							NM_USUARIO, 
							cd_convenio, 
							cd_categoria, 
							nr_seq_cor_exec) 
				values (	nr_seq_atepacu_w, 
							C01_w.cd_setor_atendimento, 
							1, 
							nr_sequencia_w, 
							C01_w.nr_atendimento, 
							dt_entrada_unidade_w, 
							C01_w.cd_material, 
							C01_w.dt_movimento_estoque, 
							cd_unidade_medida_w, 
							C01_w.qt_movimento, 
							clock_timestamp(), 
							'TasyBaca', 
							cd_convenio_w, 
							cd_categoria_w, 
							96);
		/*insert into logxxxx_tasy (dt_atualizacao,nm_usuario,cd_log,ds_log) values (sysdate,'Tasy',11342,nr_sequencia_w);*/
 
 
		CALL atualiza_preco_material(nr_sequencia_w,'Tasy');
		if (mod(qt_registros_w,1000)	= 0) then 
			commit;
		end if;
 
	end if;
	end;
end loop;
close C01;
 
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE baca_baixa_execucao () FROM PUBLIC;

