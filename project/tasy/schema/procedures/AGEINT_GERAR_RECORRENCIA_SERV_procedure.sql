-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ageint_gerar_recorrencia_serv (nr_seq_agenda_int_p bigint, nr_seq_ageint_item_p bigint, nm_usuario_p text, ie_diario_p text, ie_semanal_p text, ds_dias_p text, dt_inicio_recorrencia_p timestamp, dt_fim_recorrencia_p timestamp, nr_minuto_duracao_p bigint, qt_intervalo_p bigint, ie_final_semana_p text) AS $body$
DECLARE


nr_seq_item_w				bigint;
ds_dias_w				varchar(255);
dt_dia_semana_w				smallint;
qt_dia_w				smallint;
ie_gerar_dia_w				varchar(1);
ie_fim_sab_chec_w			varchar(1);
ie_fim_dom_chec_w			varchar(1);
dt_atual_w				timestamp;
cd_dia_semana_w				varchar(1);
dt_inicial_w				timestamp;
dt_final_w				timestamp;
nr_seq_item_princ_w			bigint;
ie_primeiro_item_recorr_w		varchar(1);
dt_prevista_w				timestamp;
nr_seq_proc_interno_w			bigint;
ie_gerar_rec_exa_adic			varchar(1);
qt_exame_adic				bigint;


BEGIN
ds_dias_w 		:= '';
dt_inicial_w		:= dt_inicio_recorrencia_p;
dt_final_w		:= dt_fim_recorrencia_p;
dt_Atual_w		:= dt_inicial_w;

if (nr_seq_agenda_int_p IS NOT NULL AND nr_seq_agenda_int_p::text <> '') then
	ie_primeiro_item_recorr_w := 'S';

	ie_gerar_rec_exa_adic := Obter_Param_Usuario(869, 405, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_gerar_rec_exa_adic);
	if (ie_gerar_rec_exa_adic = 'S') then
		select	count(*)
		into STRICT	qt_exame_adic
		from	ageint_exame_adic_item
		where	nr_seq_item = nr_seq_ageint_item_p;
	end if;

	select	max(dt_prevista)
	into STRICT	dt_prevista_w
	from	agenda_integrada
	where	nr_sequencia = nr_seq_agenda_int_p;

	if (dt_prevista_w IS NOT NULL AND dt_prevista_w::text <> '') and (dt_inicio_recorrencia_p < dt_prevista_w) then
		update	agenda_integrada
		set		dt_prevista = dt_inicio_recorrencia_p
		where	nr_sequencia = nr_seq_agenda_int_p;
	elsif (coalesce(dt_prevista_w::text, '') = '') then
		update	agenda_integrada
		set		dt_prevista = dt_inicio_recorrencia_p
		where	nr_sequencia = nr_seq_agenda_int_p;
	end if;

	if (ie_diario_p  = 'S') then
		qt_dia_w	:= 1;
	elsif (ie_diario_p = 'N') and (qt_intervalo_p > 0) then
		qt_dia_w:= qt_intervalo_p;
	elsif (ie_semanal_p = 'S') then
		qt_dia_w	:= 7;
	end if;

	while(dt_atual_w <= dt_final_w) loop
		begin
		/* obter dias semana */

		select	obter_cod_dia_semana(dt_Atual_w)
		into STRICT	dt_dia_semana_w
		;

		ie_gerar_dia_w	:= 'S';

		if (ds_dias_p IS NOT NULL AND ds_dias_p::text <> '') then
			select	substr(ds_dias_p,1,length(ds_dias_p) -2)
			into STRICT	ds_dias_w
			;

			ie_gerar_dia_w	:=  obter_se_contido(dt_dia_semana_w,ds_dias_w);
		end if;

		select	obter_se_contido(7,ds_dias_w)
		into STRICT	ie_fim_sab_chec_w
		;

		select	obter_se_contido(1,ds_dias_w)
		into STRICT	ie_fim_dom_chec_w
		;

		if (coalesce(ds_dias_p::text, '') = '') then
			if (dt_dia_semana_w = 1) and (ie_final_semana_p = 'N') then
				ie_Gerar_dia_w	:= 'N';
			elsif (dt_dia_semana_w = 7) and (ie_final_semana_p = 'N') then
				ie_Gerar_dia_w	:= 'N';
			end if;
		end if;

		if (ie_gerar_dia_w = 'S') and (ie_primeiro_item_recorr_w = 'S') then
			update	agenda_integrada_item
			set		dt_prevista_item 	= dt_atual_w,
					ie_tipo_item 		= 'P'
			where	nr_sequencia = nr_seq_ageint_item_p;

			ie_primeiro_item_recorr_w	:= 'N';

		elsif (ie_gerar_dia_w = 'S') then

			select	nextval('agenda_integrada_item_seq')
			into STRICT	nr_seq_item_w
			;

			insert into agenda_integrada_item(
				nr_sequencia,
				nr_seq_agenda_int,
				dt_atualizacao,
				nm_usuario,
				dt_prevista_item,
				nr_minuto_duracao,
				ie_tipo_agendamento,
				ie_tipo_item,
				nr_seq_item_princ,
				ie_classif_agenda,
				nr_seq_regiao,
				cd_medico,
				nr_seq_grupo_selec,
				cd_especialidade,
				nr_seq_proc_interno
				)
			SELECT	nr_seq_item_w,
				nr_seq_agenda_int_p,
				clock_timestamp(),
				nm_usuario_p,
				dt_atual_w,
				nr_minuto_duracao_p,
				ie_tipo_agendamento,
				'S',
				nr_sequencia,
				ie_classif_agenda,
				nr_seq_regiao,
				cd_medico,
				nr_seq_grupo_selec,
				cd_especialidade,
				nr_seq_proc_interno
			from	agenda_integrada_item
			where	nr_sequencia = nr_seq_ageint_item_p;

			if (ie_gerar_rec_exa_adic = 'S') and (qt_exame_adic > 0) then

				insert into ageint_exame_adic_item(nr_sequencia,
						nr_seq_item,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_seq_proc_interno,
						nr_seq_grupo_selec,
						cd_procedimento,
						ie_origem_proced,
						ie_lado)
					SELECT
						nextval('ageint_exame_adic_item_seq'),
						nr_seq_item_w,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_proc_interno,
						nr_seq_grupo_selec,
						cd_procedimento,
						ie_origem_proced,
						ie_lado
					from 	ageint_exame_adic_item
					where 	nr_seq_item = nr_seq_ageint_item_p;

			end if;

		end if;
		dt_atual_w  	:= dt_atual_w + qt_dia_w;
		dt_inicial_w 	:= dt_inicial_w + 1;

		end;
	end loop;


end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ageint_gerar_recorrencia_serv (nr_seq_agenda_int_p bigint, nr_seq_ageint_item_p bigint, nm_usuario_p text, ie_diario_p text, ie_semanal_p text, ds_dias_p text, dt_inicio_recorrencia_p timestamp, dt_fim_recorrencia_p timestamp, nr_minuto_duracao_p bigint, qt_intervalo_p bigint, ie_final_semana_p text) FROM PUBLIC;

