-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pfcs_average_bed_release_time ( nr_seq_indicator_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


c01_tasy CURSOR FOR
SELECT	d.cd_setor_atendimento cd_department,
	d.ds_setor_atendimento ds_department,
	c.cd_unidade_basica || ' ' || c.cd_unidade_compl ds_location,
	substr(obter_valor_dominio(82, c.ie_status_unidade),1,255) ds_status,
	c.ie_status_unidade ie_status,
	b.dt_historico dt_entry_unit,
	a.cd_pessoa_fisica id_patient,
	coalesce(get_formatted_person_name(a.cd_pessoa_fisica, 'list'), obter_nome_pf(a.cd_pessoa_fisica)) nm_patient,
	pfcs_obter_lista_dados_classif(a.cd_pessoa_fisica) ds_classification,
	obter_sexo_pf(a.cd_pessoa_fisica, 'D') ds_gender,
	pf.dt_nascimento dt_birthdate,
    obter_dados_pf(a.cd_pessoa_fisica, 'I') qt_idade_paciente,
	a.nr_atendimento nr_encounter,
	a.dt_entrada dt_entrance,
	coalesce(get_formatted_person_name(a.cd_medico_resp, 'list'), obter_nome_pf(a.cd_medico_resp)) ds_physician,
	a.dt_alta_medico medic_discharge,
	bb.dt_historico,
	((bb.dt_historico - a.dt_alta_medico) * 1440) qt_time_ocup_after_discharge,
	ma.cd_motivo_alta cd_reason_discharge,
	ma.ds_motivo_alta ds_reason_discharge
FROM pessoa_fisica pf, setor_atendimento d, unidade_atendimento c, unidade_atend_hist bb, unidade_atend_hist b, atendimento_paciente a
LEFT OUTER JOIN motivo_alta ma ON (a.cd_motivo_alta_medica = ma.cd_motivo_alta)
WHERE (a.dt_alta_medico IS NOT NULL AND a.dt_alta_medico::text <> '') and coalesce(a.dt_cancelamento::text, '') = '' and a.nr_atendimento = b.nr_atendimento and a.cd_pessoa_fisica = pf.cd_pessoa_fisica  and (trunc(a.dt_alta_medico) = trunc(clock_timestamp()) or trunc(bb.dt_historico) = trunc(clock_timestamp())) and a.dt_alta_medico between b.dt_historico and b.dt_fim_historico and b.nr_atendimento = bb.nr_atendimento and b.nr_seq_unidade = bb.nr_seq_unidade and bb.ie_status_unidade = 'L' and bb.dt_historico >= a.dt_alta_medico and b.nr_seq_unidade = c.nr_seq_interno and c.cd_setor_atendimento = d.cd_setor_atendimento and d.cd_classif_setor in ('1','3','4','9','11','12') and d.ie_ocup_hospitalar <> 'N' and a.cd_estabelecimento = cd_estabelecimento_p;


-- Integration cursors
c01_fhir CURSOR FOR
SELECT sec.cd_setor_atendimento cd_department,
	sec.ds_setor_atendimento ds_department,
	uni.cd_unidade_basica || ' ' || uni.cd_unidade_compl ds_location,
	substr(obter_valor_dominio(82, uni.ie_status_unidade),1,255) ds_status,
	uni.ie_status_unidade ie_status,
	coalesce(uni.dt_entrada_unidade,ser.dt_authored_on) dt_entry_unit,
	pat.patient_id id_patient,
	pfcs_get_human_name(pat.nr_sequencia, 'Patient') nm_patient,
	enc.ds_classification ds_classification,
	pat.gender ds_gender,
	pat.birthdate dt_birthdate,
    trunc(months_between(coalesce(pat.deceased_date, clock_timestamp()), pat.birthdate)/12) qt_idade_paciente,
	enc.id_encounter nr_encounter,
	enc.period_start dt_entrance,
	pfcs_get_human_name(pfcs_get_practitioner_seq(enc.nr_sequencia, '405279007'), 'Practitioner') ds_physician,
    enc.period_end medic_discharge,
	uni_hist.dt_historico,
	((uni_hist.dt_historico - enc.period_end) * 1440) qt_time_ocup_after_discharge,
	'E0405' cd_reason_discharge,
	substr(obter_desc_expressao(595969),1,255) ds_reason_discharge
from setor_atendimento	sec,
	unidade_atendimento	uni,
    unidade_atend_hist uni_hist,
	pfcs_service_request ser,
    pfcs_patient pat,
    pfcs_encounter enc
where ser.nr_seq_encounter = enc.nr_sequencia
    and ser.nr_seq_location = uni.nr_seq_location
    and enc.nr_seq_patient = pat.nr_sequencia
    and sec.cd_setor_atendimento = uni.cd_setor_atendimento
    and	uni_hist.nr_seq_unidade = uni.nr_seq_interno
    and ser.cd_service = 'E0405'
    and ser.si_status = 'COMPLETED'
    and ser.si_intent = 'ORDER'
    and (enc.period_end IS NOT NULL AND enc.period_end::text <> '')
    and	sec.cd_classif_setor in ('1','3','4','9','11','12')
    and sec.ie_situacao = 'A'
    and	uni.ie_situacao = 'A'
    and	uni_hist.ie_status_unidade = 'L'
    and	uni_hist.dt_historico >= enc.period_end
    and	sec.cd_estabelecimento = cd_estabelecimento_p;

qt_count_w                          bigint := 0;
qt_amount_time_w                    bigint := 0;
pfcs_panel_detail_seq_w				pfcs_panel_detail.nr_sequencia%type;
nr_seq_operational_level_w			pfcs_operational_level.nr_sequencia%type;
nr_seq_panel_w					    pfcs_panel.nr_sequencia%type;
pfcs_flag_settings_w                pfcs_general_rule.ie_table_origin%type;
BEGIN

nr_seq_operational_level_w := pfcs_get_structure_level(
		cd_establishment_p => cd_estabelecimento_p,
		ie_level_p => 'O',
		ie_info_p => 'C');

select ie_table_origin
into STRICT pfcs_flag_settings_w
from pfcs_general_rule;

if (pfcs_flag_settings_w = 0 or pfcs_flag_settings_w = 2) then
    for c01_w in c01_tasy loop
        begin

            qt_count_w := qt_count_w + 1;
            qt_amount_time_w := c01_w.qt_time_ocup_after_discharge + qt_amount_time_w;

            select	nextval('pfcs_panel_detail_seq')
            into STRICT	pfcs_panel_detail_seq_w
;

            insert into pfcs_panel_detail(
                nr_sequencia,
                nm_usuario,
                dt_atualizacao,
                nm_usuario_nrec,
                dt_atualizacao_nrec,
                ie_situation,
                nr_seq_indicator,
                nr_seq_operational_level)
            values (
                pfcs_panel_detail_seq_w,
                nm_usuario_p,
                clock_timestamp(),
                nm_usuario_p,
                clock_timestamp(),
                'T',
                nr_seq_indicator_p,
                nr_seq_operational_level_w);

            insert into pfcs_detail_bed(
                nr_sequencia,
                nm_usuario,
                dt_atualizacao,
                nm_usuario_nrec,
                dt_atualizacao_nrec,
                nr_seq_detail,
                ds_location,
                cd_department,
                ds_department,
                ds_status,
                ie_status,
                dt_entry_unit,
                qt_time_ocup_after_discharge)

            values (
                nextval('pfcs_detail_bed_seq'),
                nm_usuario_p,
                clock_timestamp(),
                nm_usuario_p,
                clock_timestamp(),
                pfcs_panel_detail_seq_w,
                c01_w.ds_location,
                c01_w.cd_department,
                c01_w.ds_department,
                c01_w.ds_status,
                c01_w.ie_status,
                c01_w.dt_entry_unit,
                c01_w.qt_time_ocup_after_discharge);

            insert into pfcs_detail_patient(
                nr_sequencia,
                nm_usuario,
                dt_atualizacao,
                nm_usuario_nrec,
                dt_atualizacao_nrec,
                nr_seq_detail,
                nr_encounter_varchar,
                dt_entrance,
                id_patient,
                nm_patient,
                ds_gender,
                ds_classification,
                dt_birthdate,
                ds_age_range,
                ds_physician,
                cd_reason_discharge,
                ds_reason_discharge)
            values (
                nextval('pfcs_detail_patient_seq'),
                nm_usuario_p,
                clock_timestamp(),
                nm_usuario_p,
                clock_timestamp(),
                pfcs_panel_detail_seq_w,
                c01_w.nr_encounter,
                c01_w.dt_entrance,
                c01_w.id_patient,
                c01_w.nm_patient,
                c01_w.ds_gender,
                c01_w.ds_classification,
                c01_w.dt_birthdate,
                c01_w.qt_idade_paciente,
                c01_w.ds_physician,
                c01_w.cd_reason_discharge,
                c01_w.ds_reason_discharge);
        end;
    end loop;
end if;

-- Integration
if (pfcs_flag_settings_w = 1 or pfcs_flag_settings_w = 2) then
    for c01_w in c01_fhir loop
        begin

            qt_count_w := qt_count_w + 1;
            qt_amount_time_w := c01_w.qt_time_ocup_after_discharge + qt_amount_time_w;

            select	nextval('pfcs_panel_detail_seq')
            into STRICT	pfcs_panel_detail_seq_w
;

            insert into pfcs_panel_detail(
                nr_sequencia,
                nm_usuario,
                dt_atualizacao,
                nm_usuario_nrec,
                dt_atualizacao_nrec,
                ie_situation,
                nr_seq_indicator,
                nr_seq_operational_level)
            values (
                pfcs_panel_detail_seq_w,
                nm_usuario_p,
                clock_timestamp(),
                nm_usuario_p,
                clock_timestamp(),
                'T',
                nr_seq_indicator_p,
                nr_seq_operational_level_w);

            insert into pfcs_detail_bed(
                nr_sequencia,
                nm_usuario,
                dt_atualizacao,
                nm_usuario_nrec,
                dt_atualizacao_nrec,
                nr_seq_detail,
                ds_location,
                cd_department,
                ds_department,
                ds_status,
                ie_status,
                dt_entry_unit,
                qt_time_ocup_after_discharge)

            values (
                nextval('pfcs_detail_bed_seq'),
                nm_usuario_p,
                clock_timestamp(),
                nm_usuario_p,
                clock_timestamp(),
                pfcs_panel_detail_seq_w,
                c01_w.ds_location,
                c01_w.cd_department,
                c01_w.ds_department,
                c01_w.ds_status,
                c01_w.ie_status,
                c01_w.dt_entry_unit,
                c01_w.qt_time_ocup_after_discharge);

            insert into pfcs_detail_patient(
                nr_sequencia,
                nm_usuario,
                dt_atualizacao,
                nm_usuario_nrec,
                dt_atualizacao_nrec,
                nr_seq_detail,
                nr_encounter_varchar,
                dt_entrance,
                id_patient,
                nm_patient,
                ds_gender,
                ds_classification,
                dt_birthdate,
                ds_age_range,
                ds_physician,
                cd_reason_discharge,
                ds_reason_discharge)
            values (
                nextval('pfcs_detail_patient_seq'),
                nm_usuario_p,
                clock_timestamp(),
                nm_usuario_p,
                clock_timestamp(),
                pfcs_panel_detail_seq_w,
                c01_w.nr_encounter,
                c01_w.dt_entrance,
                c01_w.id_patient,
                c01_w.nm_patient,
                c01_w.ds_gender,
                c01_w.ds_classification,
                c01_w.dt_birthdate,
                c01_w.qt_idade_paciente,
                c01_w.ds_physician,
                c01_w.cd_reason_discharge,
                c01_w.ds_reason_discharge);
        end;
    end loop;
end if;

 := pfcs_pck.pfcs_generate_results(
	vl_indicator_p => qt_amount_time_w, vl_indicator_aux_p => qt_count_w, nr_seq_indicator_p => nr_seq_indicator_p, nr_seq_operational_level_p => nr_seq_operational_level_w, nm_usuario_p => nm_usuario_p, nr_seq_panel_p => nr_seq_panel_w);

CALL pfcs_pck.pfcs_update_detail(
	nr_seq_indicator_p => nr_seq_indicator_p,
	nr_seq_panel_p => nr_seq_panel_w,
	nr_seq_operational_level_p => nr_seq_operational_level_w,
	nm_usuario_p => nm_usuario_p);

CALL pfcs_pck.pfcs_activate_records(
	nr_seq_indicator_p => nr_seq_indicator_p,
	nr_seq_operational_level_p => nr_seq_operational_level_w,
	nm_usuario_p => nm_usuario_p);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pfcs_average_bed_release_time ( nr_seq_indicator_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

