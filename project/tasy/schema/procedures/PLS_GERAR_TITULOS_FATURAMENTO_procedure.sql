-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_titulos_faturamento (nr_seq_lote_p bigint, nr_seq_fatura_p bigint, ie_commit_p text, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_pls_fatura_w		bigint;
nr_seq_acao_w			bigint;
qt_impedimentos_w		bigint := 0;
ie_impedimento_cobranca_w	varchar(3);
ie_gerar_tit_ptu_w		varchar(3);
nr_titulo_w			pls_fatura.nr_titulo%type;
nr_titulo_ndc_w			pls_fatura.nr_titulo_ndc%type;
nr_seq_lote_w			pls_lote_faturamento.nr_sequencia%type;
qt_fat_pode_ger_tit_w		integer;
qt_fat_tit_gerado_w		integer;
ie_concil_contab_w		pls_visible_false.ie_concil_contab%type;

C01 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.ie_impedimento_cobranca,
		a.nr_titulo,
		a.nr_titulo_ndc,
		a.nr_seq_lote
	from	pls_fatura 	a
	where	a.nr_seq_lote	= nr_seq_lote_p
	and	coalesce(a.nr_titulo_ndc::text, '') = ''
	and	coalesce(a.nr_titulo::text, '') = ''
	and	coalesce(a.ie_cancelamento::text, '') = ''
	
union all

	SELECT	a.nr_sequencia,
		a.ie_impedimento_cobranca,
		a.nr_titulo,
		a.nr_titulo_ndc,
		a.nr_seq_lote
	from	pls_fatura 	a
	where	a.nr_sequencia	= nr_seq_fatura_p
	and	coalesce(a.nr_titulo_ndc::text, '') = ''
	and	coalesce(a.nr_titulo::text, '') = ''
	and	coalesce(a.ie_cancelamento::text, '') = '';


BEGIN
-- Recalcular tributos do lote de faturamento
CALL pls_gerar_tributos_faturamento( nr_seq_lote_p, nr_seq_fatura_p, 'N', cd_estabelecimento_p, nm_usuario_p);

if (nr_seq_lote_p IS NOT NULL AND nr_seq_lote_p::text <> '') then
	select	count(1)
	into STRICT	qt_impedimentos_w
	from	pls_fatura 	a
	where	a.nr_seq_lote 	= nr_seq_lote_p
	and	a.ie_impedimento_cobranca = 'P';
elsif (nr_seq_fatura_p IS NOT NULL AND nr_seq_fatura_p::text <> '') then
	select	count(1)
	into STRICT	qt_impedimentos_w
	from	pls_fatura 	a
	where	a.nr_sequencia 	= nr_seq_fatura_p
	and	a.ie_impedimento_cobranca = 'P';
end if;

if (qt_impedimentos_w > 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(172761);
end if;
-- Cursor para utilizar cada fatura
open C01;
loop
fetch C01 into
	nr_seq_pls_fatura_w,
	ie_impedimento_cobranca_w,
	nr_titulo_w,
	nr_titulo_ndc_w,
	nr_seq_lote_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
		ie_gerar_tit_ptu_w := 'S';
		-- Se não é para faturar, só passa para o próximo do cursor 
		if (coalesce(ie_impedimento_cobranca_w,'S') <> 'NF') then
			nr_seq_acao_w := pls_obter_acao_intercambio(	'14',  -- Geração do título de faturamento
							'1',  -- Gerar título a receber
							null, nr_seq_pls_fatura_w, null, null, clock_timestamp(), null, 'N', nr_seq_acao_w);

			if (nr_seq_acao_w IS NOT NULL AND nr_seq_acao_w::text <> '') and (coalesce(nr_titulo_w::text, '') = '') then
				CALL pls_gerar_titulos_fatura(nr_seq_lote_w,nr_seq_pls_fatura_w,nr_seq_acao_w,ie_commit_p,cd_estabelecimento_p,nm_usuario_p);
				ie_gerar_tit_ptu_w := 'N';
			end if;

			-- GERAR TÍTULOS CONFORME O PTU
			if (ie_gerar_tit_ptu_w = 'S') then
				nr_seq_acao_w := pls_obter_acao_intercambio(	'14',  -- Geração do título de faturamento
								'14',  -- Gerar título a receber (Fatura)
								null, nr_seq_pls_fatura_w, null, null, clock_timestamp(), null, 'N', nr_seq_acao_w);

				if (nr_seq_acao_w IS NOT NULL AND nr_seq_acao_w::text <> '') and (coalesce(nr_titulo_w::text, '') = '') then
					CALL pls_gerar_titulos_fatura(nr_seq_lote_w,nr_seq_pls_fatura_w,nr_seq_acao_w,ie_commit_p,cd_estabelecimento_p,nm_usuario_p);
				end if;

				nr_seq_acao_w := pls_obter_acao_intercambio(	'14',  -- Geração do título de faturamento
								'15',  -- Gerar título a receber (NDC)
								null, nr_seq_pls_fatura_w, null, null, clock_timestamp(), null, 'N', nr_seq_acao_w);

				if (nr_seq_acao_w IS NOT NULL AND nr_seq_acao_w::text <> '') and (coalesce(nr_titulo_ndc_w::text, '') = '') then
					CALL pls_gerar_titulos_fatura(nr_seq_lote_w,nr_seq_pls_fatura_w,nr_seq_acao_w,ie_commit_p,cd_estabelecimento_p,nm_usuario_p);
				end if;
			end if;
		end if;
		/*Commit  realizado para reduzir o tempo em lock da tabelas envolvidas nesse processamento.  Na OS1218828 foi identificado que durante esse
		processamento, a tabela tabela banco_regra_numerosofre update e devido a não ocorrer commit até o fim do processo, ocasiona lock.*/
		commit;	
	end;
end loop;
close C01;

-- Gerar as faturas de intercâmbio
if (nr_seq_lote_p IS NOT NULL AND nr_seq_lote_p::text <> '') then
	CALL pls_gerar_faturas_ptu(nr_seq_lote_p, null, 'N', cd_estabelecimento_p, nm_usuario_p);
	
elsif (nr_seq_fatura_p IS NOT NULL AND nr_seq_fatura_p::text <> '') then
	CALL pls_gerar_faturas_ptu(null, nr_seq_fatura_p, 'N', cd_estabelecimento_p, nm_usuario_p);
end if;

-- Verifica quais as faturas que podem gerar titulo
select	count(1)
into STRICT	qt_fat_pode_ger_tit_w
from	pls_fatura 	b
where	b.nr_seq_lote 	= coalesce(nr_seq_lote_p, nr_seq_lote_w)
and	((coalesce(b.ie_impedimento_cobranca::text, '') = '') or (b.ie_impedimento_cobranca in ('L','P')))
and	coalesce(b.ie_cancelamento,'X') not in ('C','E');

-- Verifica quais as faturas que podem gerar titulo e tem titulo gerado
select	count(1)
into STRICT	qt_fat_tit_gerado_w
from	pls_fatura 	b
where	b.nr_seq_lote 	= coalesce(nr_seq_lote_p, nr_seq_lote_w)
and	(b.nr_titulo IS NOT NULL AND b.nr_titulo::text <> '')
and	((coalesce(b.ie_impedimento_cobranca::text, '') = '') or (b.ie_impedimento_cobranca in ('L','P')))
and	coalesce(b.ie_cancelamento,'X') not in ('C','E');

-- Verifica se todas as faturas que podem gerar titulo tem titulo gerado e atualiza data de geração dos títulos no lote
if (qt_fat_pode_ger_tit_w = qt_fat_tit_gerado_w) then
	update	pls_lote_faturamento
	set	dt_geracao_titulos 	= clock_timestamp(),
		nm_usuario		= nm_usuario_p,
		dt_atualizacao		= clock_timestamp()
	where	nr_sequencia 		= coalesce(nr_seq_lote_p, nr_seq_lote_w);
end if;

select	coalesce(max(ie_concil_contab), 'N')
into STRICT	ie_concil_contab_w
from 	pls_visible_false;

if (ie_concil_contab_w = 'S') then
	CALL pls_ctb_onl_gravar_movto_pck.gravar_movto_gerar_tit_fat(nr_seq_lote_p, nr_seq_fatura_p, cd_estabelecimento_p, nm_usuario_p);
end if;

if (coalesce(ie_commit_p,'N') = 'S') then
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_titulos_faturamento (nr_seq_lote_p bigint, nr_seq_fatura_p bigint, ie_commit_p text, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

