-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE w_pls_relat_sinistral_empresar ( nr_seq_grupo_p bigint, nr_contrato_p bigint, dt_inicial_p timestamp, dt_final_p timestamp, qt_usuarios_inicial_p bigint, qt_usuarios_final_p bigint, dt_reajuste_p text, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_grupo_w			bigint;
nr_seq_segurado_w		bigint;
ds_grupo_w			varchar(255);
vl_custo_benef_w		double precision;
vl_total_custo_w		double precision;
vl_resultado_w			double precision;
vl_mensalidade_w		double precision;
VL_MENSALIDADE_TOT_W		double precision;
tx_administrativa_w		double precision;
tx_sinistralidade_w		double precision;
qt_beneficiarios_w		bigint;
dt_inicial_w			timestamp;
dt_final_w			timestamp;

C00 CURSOR FOR
	SELECT	dt_mes
	from	mes_v
	where	dt_mes between dt_inicial_p and dt_final_p;

C01 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.ds_grupo
	from	pls_grupo_contrato	a
	where	((a.nr_sequencia	= nr_seq_grupo_p and (nr_seq_grupo_p IS NOT NULL AND nr_seq_grupo_p::text <> '')) or (coalesce(nr_seq_grupo_p::text, '') = ''))
	and (to_char(a.dt_reajuste, 'mm') = dt_reajuste_p or dt_reajuste_p = '  ')
	and	((coalesce(nr_contrato_p::text, '') = '') or (	exists (	SELECT	1
								from	pls_contrato		x,
									pls_contrato_grupo	y
								where	y.nr_seq_contrato	= x.nr_sequencia
								and	x.nr_contrato		= nr_contrato_p)))
	and	a.ie_situacao		= 'A';

C02 CURSOR FOR
	SELECT	b.nr_sequencia
	from	pls_segurado		b,
		pls_contrato		a,
		pls_contrato_grupo	c
	where	b.nr_seq_contrato	= a.nr_sequencia
	and	c.nr_seq_contrato	= a.nr_sequencia
	and	c.nr_seq_grupo		= nr_seq_grupo_w
	and	((a.nr_contrato		= nr_contrato_p) or (coalesce(nr_contrato_p::text, '') = ''))
	and	(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '');


BEGIN

delete	FROM w_pls_relat_relacionamento
where	ie_tipo_relatorio	= 'SE';

select	max(tx_administrativa)
into STRICT	tx_administrativa_w
from	pls_competencia
where	cd_estabelecimento = cd_estabelecimento_p
and	dt_mes_competencia = trunc(clock_timestamp(),'Month');

if (coalesce(tx_administrativa_w::text, '') = '') or (tx_administrativa_w = 0) then
	tx_administrativa_w	:= 1;
end if;

open c00;
loop
fetch c00 into
	dt_inicial_w;
EXIT WHEN NOT FOUND; /* apply on c00 */
	begin

	dt_final_w	:= last_day(dt_inicial_w);

	open C01;
	loop
	fetch C01 into
		nr_seq_grupo_w,
		ds_grupo_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		select	count(1)
		into STRICT	qt_beneficiarios_w
		from	pls_segurado		b,
			pls_contrato		a,
			pls_contrato_grupo	c
		where	b.nr_seq_contrato	= a.nr_sequencia
		and	c.nr_seq_contrato	= a.nr_sequencia
		and	c.nr_seq_grupo		= nr_seq_grupo_w
		and	((a.nr_contrato		= nr_contrato_p) or (coalesce(nr_contrato_p::text, '') = ''))
		and	(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '')
		and	((coalesce(b.dt_rescisao::text, '') = '') or (b.dt_rescisao > dt_final_w))
		and	b.dt_contratacao 	<= dt_final_w;

		vl_mensalidade_tot_w	:= 0;
		vl_total_custo_w	:= 0;

		if	(((qt_beneficiarios_w between qt_usuarios_inicial_p and qt_usuarios_final_p) and (qt_usuarios_final_p IS NOT NULL AND qt_usuarios_final_p::text <> '') and (qt_usuarios_inicial_p IS NOT NULL AND qt_usuarios_inicial_p::text <> '')) or (coalesce(qt_usuarios_inicial_p::text, '') = '') and (coalesce(qt_usuarios_final_p::text, '') = '')) then

			open c02;
			loop
			fetch c02 into
				nr_seq_segurado_w;
			EXIT WHEN NOT FOUND; /* apply on c02 */
				begin

				select	sum(coalesce(a.vl_mensalidade,0))
				into STRICT	vl_mensalidade_w
				from	pls_mensalidade			b,
					pls_mensalidade_segurado	a
				where	a.nr_seq_mensalidade		= b.nr_sequencia
				and	a.nr_seq_segurado		= nr_seq_segurado_w
				and	a.dt_mesano_referencia  between dt_inicial_w and dt_final_w
				and	coalesce(b.dt_cancelamento::text, '') = '';

				select	sum(coalesce(B.VL_TOTAL,0))
				into STRICT	vl_custo_benef_w
				from	pls_conta		b
				where	b.nr_seq_segurado	= nr_seq_segurado_w
				and	b.ie_status		= 'F'
				and	b.dt_atendimento_referencia between dt_inicial_w and dt_final_w;

				vl_mensalidade_tot_w		:= vl_mensalidade_tot_w + coalesce(vl_mensalidade_w,0);
				vl_total_custo_w		:= vl_total_custo_w + coalesce(vl_custo_benef_w,0);

				end;
			end loop;
			close c02;

			if (vl_total_custo_w <> 0) then
				vl_total_custo_w	:= (vl_total_custo_w * (tx_administrativa_w/100)) + vl_total_custo_w;
			end if;

			vl_resultado_w	:= vl_mensalidade_tot_w - vl_total_custo_w;

			if (coalesce(vl_mensalidade_tot_w,0) = 0) then
				if (coalesce(vl_total_custo_w,0) = 0) then
					tx_sinistralidade_w	:= 0;
				else
					tx_sinistralidade_w	:= 100;
				end if;
			else
				tx_sinistralidade_w	:= dividir_sem_round(vl_total_custo_w,vl_mensalidade_tot_w) * 100;
			end if;

			if (tx_sinistralidade_w > 1000) then
				tx_sinistralidade_w	:= 999;
			end if;

			insert into w_pls_relat_relacionamento(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
					nr_seq_grupo,ds_grupo_contrato,vl_custo_total,vl_receita_total,qt_beneficiarios,
					VL_FATOR_MODERADOR, dt_referencia, ie_tipo_relatorio,TX_SINISTRO)
			values (	nextval('w_pls_relat_relacionamento_seq'),clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,
					nr_seq_grupo_w,ds_grupo_w,vl_total_custo_w,vl_mensalidade_tot_w,qt_beneficiarios_w,
					vl_resultado_w, dt_inicial_w, 'SE',tx_sinistralidade_w);

		end if;
		end;
	end loop;
	close C01;
	end;
end loop;
close c00;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE w_pls_relat_sinistral_empresar ( nr_seq_grupo_p bigint, nr_contrato_p bigint, dt_inicial_p timestamp, dt_final_p timestamp, qt_usuarios_inicial_p bigint, qt_usuarios_final_p bigint, dt_reajuste_p text, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

