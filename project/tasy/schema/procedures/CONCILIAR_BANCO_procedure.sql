-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE conciliar_banco ( nr_seq_conciliacao_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_sequencia_w			bigint;
nr_seq_movto_w			bigint;
nr_seq_extrato_w		bigint;
nr_seq_conta_w			bigint;
nr_seq_concil_w			bigint;
ie_forma_conciliacao_w		varchar(10);
cont_w				integer;
nr_seq_pend_tasy_w		bigint;
nr_seq_pend_bco_w		bigint;
dt_movimento_w			timestamp;
ie_compensar_cheque_concil_w	varchar(1)	:= 'N';
cd_estabelecimento_w		smallint;
ie_considerar_data_w		varchar(1);
ie_gerar_movto_cheque_w		varchar(1);
nr_seq_cheque_w			bigint;
ie_considerar_doc_w		varchar(1);
ie_nao_atualiza_w		varchar(1);
ie_considerar_nr_cheque_w	varchar(1);
ie_movtos_iguais_w		varchar(1);
/* Projeto Multimoeda - Variáveis */

cd_moeda_banco_w		integer;
cd_moeda_empresa_w		integer;
ie_banco_estrang_w		varchar(1) := 'N';
ie_extrato_concil_w     varchar(1) := 'N';

c01 CURSOR FOR
SELECT	a.nr_sequencia nr_seq_movto,
	b.nr_sequencia nr_seq_extrato,
	count(*),
	e.nr_sequencia nr_seq_pend_tasy,
	d.nr_sequencia nr_seq_pend_bco,
	b.dt_movimento
from	banco h,
	banco_estabelecimento g,
	banco_extrato f,
	transacao_financeira c,
	CONCIL_BANC_PEND_TASY e,
	movto_trans_financ a,
	CONCIL_BANC_PEND_BCO d,
	banco_extrato_lanc b
where	1	= 1
/* início - consistir somente se não houverem movimentações idênticas */

and	(coalesce(ie_movtos_iguais_w,'S') = 'S' or
	((SELECT	count(*)
	from	movto_trans_financ y,
		concil_banc_pend_tasy x
	where (coalesce(ie_considerar_doc_w,'S') = 'N' or (coalesce(y.nr_documento::text, '') = '' and coalesce(a.nr_documento::text, '') = '') or ((y.nr_documento IS NOT NULL AND y.nr_documento::text <> '') and
		(a.nr_documento IS NOT NULL AND a.nr_documento::text <> '') and
		somente_numero(y.nr_documento)	= somente_numero(a.nr_documento)))
	and	trunc(y.dt_transacao,'dd')	= trunc(a.dt_transacao,'dd')
	and	((coalesce(ie_banco_estrang_w,'N')	= 'N' and y.vl_transacao	= a.vl_transacao)
	or (coalesce(ie_banco_estrang_w,'N')	= 'S' and y.vl_transacao_estrang = a.vl_transacao_estrang))
	and	x.nr_seq_movto_trans	= y.nr_sequencia
	and	x.nr_sequencia		<> e.nr_sequencia
	and	x.nr_seq_conciliacao	= e.nr_seq_conciliacao) = 0 and (select	count(*)
	from	banco_extrato_lanc y,
		concil_banc_pend_bco x
	where (coalesce(ie_considerar_doc_w,'S') = 'N' or (coalesce(y.nr_documento::text, '') = '' and coalesce(b.nr_documento::text, '') = '') or ((y.nr_documento IS NOT NULL AND y.nr_documento::text <> '') and
		(b.nr_documento IS NOT NULL AND b.nr_documento::text <> '') and
		somente_numero(y.nr_documento)	= somente_numero(b.nr_documento)))
	and	trunc(y.dt_movimento,'dd')	= trunc(b.dt_movimento,'dd')
	and	y.vl_lancamento		= b.vl_lancamento
	and	x.nr_seq_lanc_extrato	= y.nr_sequencia
	and	x.nr_sequencia		<> d.nr_sequencia
	and	x.nr_seq_conciliacao	= d.nr_seq_conciliacao) = 0))
/* fim - consistir somente se não houverem movimentações idênticas */

and (coalesce(ie_nao_atualiza_w,'S') = 'S' or c.ie_banco <> 'T')
and	coalesce(ie_considerar_data_w,'S')	= 'S'
and	trunc(a.dt_transacao, 'dd')	= trunc(b.dt_movimento,'dd')
and	((coalesce(ie_banco_estrang_w,'N')	= 'N' and a.vl_transacao	= b.vl_lancamento)
or (coalesce(ie_banco_estrang_w,'N')	= 'S' and a.vl_transacao_estrang = b.vl_lancamento))
and (	coalesce(ie_considerar_doc_w,'S') = 'N'
	or (coalesce(a.nr_documento::text, '') = '' and coalesce(b.nr_documento::text, '') = '')
	or (	(a.nr_documento IS NOT NULL AND a.nr_documento::text <> '')
		and	(b.nr_documento IS NOT NULL AND b.nr_documento::text <> '')
		and	somente_numero(a.nr_documento) = somente_numero(b.nr_documento)
		)
	or (	'S' = coalesce(ie_considerar_nr_cheque_w, 'N')
		and	(a.nr_seq_cheque_cp IS NOT NULL AND a.nr_seq_cheque_cp::text <> '')
		and	coalesce(a.nr_documento::text, '') = ''
		and	(b.nr_documento IS NOT NULL AND b.nr_documento::text <> '')
		and	somente_numero(substr(obter_descricao_padrao('CHEQUE','NR_CHEQUE', a.nr_seq_cheque_cp), 1, 15)) = somente_numero(b.nr_documento)
		)
	)
and	b.ie_deb_cred			<> c.ie_banco
and	c.nr_sequencia			= a.nr_seq_trans_financ
and	coalesce(a.nr_seq_concil::text, '') = ''
and	(a.nr_seq_saldo_banco IS NOT NULL AND a.nr_seq_saldo_banco::text <> '')
and	d.NR_SEQ_LANC_EXTRATO		= b.nr_sequencia
and	e.NR_SEQ_MOVTO_TRANS		= a.nr_sequencia
and	b.nr_seq_extrato		= f.nr_sequencia
and	f.nr_seq_conta			= g.nr_sequencia
and	g.cd_banco			= h.cd_banco
and	e.nr_seq_conciliacao		= nr_seq_conciliacao_p
and	d.nr_seq_conciliacao		= nr_seq_conciliacao_p
and (b.ie_natureza <> 'B' or h.ie_concil_bloq = 'S')
group	by	a.nr_sequencia,
	b.nr_sequencia,
	b.nr_seq_concil,
	e.nr_sequencia,
	d.nr_sequencia,
	b.dt_movimento

union

select	a.nr_sequencia nr_seq_movto,
	b.nr_sequencia nr_seq_extrato,
	count(*),
	e.nr_sequencia nr_seq_pend_tasy,
	d.nr_sequencia nr_seq_pend_bco,
	max(b.dt_movimento) dt_movimento
from	banco h,
	banco_estabelecimento g,
	banco_extrato f,
	transacao_financeira c,
	CONCIL_BANC_PEND_TASY e,
	movto_trans_financ a,
	CONCIL_BANC_PEND_BCO d,
	banco_extrato_lanc b
where	1	= 1
/* início - consistir somente se não houverem movimentações idênticas */

and	(coalesce(ie_movtos_iguais_w,'S') = 'S' or
	((select	count(*)
	from	movto_trans_financ y,
		concil_banc_pend_tasy x
	where (coalesce(ie_considerar_doc_w,'S') = 'N' or (coalesce(y.nr_documento::text, '') = '' and coalesce(a.nr_documento::text, '') = '') or ((y.nr_documento IS NOT NULL AND y.nr_documento::text <> '') and
		(a.nr_documento IS NOT NULL AND a.nr_documento::text <> '') and
		somente_numero(y.nr_documento)	= somente_numero(a.nr_documento)))
	and	((coalesce(ie_banco_estrang_w,'N')	= 'N' and y.vl_transacao	= a.vl_transacao)
	or (coalesce(ie_banco_estrang_w,'N')	= 'S' and y.vl_transacao_estrang = a.vl_transacao_estrang))
	and	x.nr_seq_movto_trans	= y.nr_sequencia
	and	x.nr_sequencia		<> e.nr_sequencia
	and	x.nr_seq_conciliacao	= e.nr_seq_conciliacao) = 0 and (select	count(*)
	from	banco_extrato_lanc y,
		concil_banc_pend_bco x
	where (coalesce(ie_considerar_doc_w,'S') = 'N' or (coalesce(y.nr_documento::text, '') = '' and coalesce(b.nr_documento::text, '') = '') or ((y.nr_documento IS NOT NULL AND y.nr_documento::text <> '') and
		(b.nr_documento IS NOT NULL AND b.nr_documento::text <> '') and
		somente_numero(y.nr_documento)	= somente_numero(b.nr_documento)))
	and	y.vl_lancamento		= b.vl_lancamento
	and	x.nr_seq_lanc_extrato	= y.nr_sequencia
	and	x.nr_sequencia		<> d.nr_sequencia
	and	x.nr_seq_conciliacao	= d.nr_seq_conciliacao) = 0))
/* fim - consistir somente se não houverem movimentações idênticas */

and (coalesce(ie_nao_atualiza_w,'S') = 'S' or c.ie_banco <> 'T')
and	coalesce(ie_considerar_data_w,'S')	= 'N'
and	((coalesce(ie_banco_estrang_w,'N')	= 'N' and a.vl_transacao	= b.vl_lancamento)
or (coalesce(ie_banco_estrang_w,'N')	= 'S' and a.vl_transacao_estrang = b.vl_lancamento))
and (	coalesce(ie_considerar_doc_w,'S') = 'N'
	or (coalesce(a.nr_documento::text, '') = '' and coalesce(b.nr_documento::text, '') = '')
	or (	(a.nr_documento IS NOT NULL AND a.nr_documento::text <> '')
		and	(b.nr_documento IS NOT NULL AND b.nr_documento::text <> '')
		and	somente_numero(a.nr_documento) = somente_numero(b.nr_documento)
		)
	or (	'S' = coalesce(ie_considerar_nr_cheque_w, 'N')
		and	(a.nr_seq_cheque_cp IS NOT NULL AND a.nr_seq_cheque_cp::text <> '')
	
		and	coalesce(a.nr_documento::text, '') = ''
		and	(b.nr_documento IS NOT NULL AND b.nr_documento::text <> '')
		and	somente_numero(substr(obter_descricao_padrao('CHEQUE','NR_CHEQUE', a.nr_seq_cheque_cp), 1, 15)) = somente_numero(b.nr_documento)
		)
	)
and	b.ie_deb_cred			<> c.ie_banco
and	c.nr_sequencia			= a.nr_seq_trans_financ
and	coalesce(a.nr_seq_concil::text, '') = ''
and	(a.nr_seq_saldo_banco IS NOT NULL AND a.nr_seq_saldo_banco::text <> '')
and	d.NR_SEQ_LANC_EXTRATO		= b.nr_sequencia
and	e.NR_SEQ_MOVTO_TRANS		= a.nr_sequencia
and	b.nr_seq_extrato		= f.nr_sequencia
and	f.nr_seq_conta			= g.nr_sequencia
and	g.cd_banco			= h.cd_banco
and	e.nr_seq_conciliacao		= nr_seq_conciliacao_p
and	d.nr_seq_conciliacao		= nr_seq_conciliacao_p
and (b.ie_natureza <> 'B' or h.ie_concil_bloq = 'S')
group	by	a.nr_sequencia,
	b.nr_sequencia,
	b.nr_seq_concil,
	e.nr_sequencia,
	d.nr_sequencia;

c02 CURSOR FOR
SELECT	a.nr_sequencia
from	cheque a
where	coalesce(a.dt_compensacao::text, '') = ''
and	exists (SELECT	1
	from	movto_trans_financ x
	where	x.nr_seq_cheque_cp	= a.nr_sequencia
	and	x.nr_sequencia		= nr_seq_movto_w)
	/* and	x.nr_seq_concil		is not null) */

union

select	a.nr_sequencia
from	cheque a
where	coalesce(a.dt_compensacao::text, '') = ''
and	exists (select	1
	from	movto_trans_financ x
	where	x.nr_documento	= a.nr_cheque
	and	x.nr_sequencia	= nr_seq_movto_w
	/* and	x.nr_seq_concil is not null */

	and	coalesce(x.nr_seq_cheque::text, '') = ''
	and	(x.nr_bordero IS NOT NULL AND x.nr_bordero::text <> '')
	and	exists (select	1
		from	cheque_bordero_titulo y
		where	y.nr_bordero	= x.nr_bordero
		and	y.nr_cheque	= a.nr_cheque));


BEGIN

select	coalesce(max(b.cd_estabelecimento),obter_estabelecimento_ativo), -- AAMFIRMO OS 650273
	max(b.cd_moeda)
into STRICT	cd_estabelecimento_w,
	cd_moeda_banco_w
from	banco_estabelecimento b,
	conciliacao_bancaria a
where	a.nr_seq_conta	= b.nr_sequencia
and	a.nr_sequencia	= nr_seq_conciliacao_p;

/* Projeto Multimoeda - Busca a moeda padrão da empresa */

select	obter_moeda_padrao_empresa(coalesce(cd_estabelecimento_w,obter_estabelecimento_ativo),'E')
into STRICT	cd_moeda_empresa_w
;

/* Projeto Multimoeda - Verifica se a conta é em moeda estrangeira ou não para definir os valores para a conciliação */

if (coalesce(cd_moeda_banco_w,cd_moeda_empresa_w) <> cd_moeda_empresa_w) then
	ie_banco_estrang_w := 'S';
else
	ie_banco_estrang_w := 'N';
end if;

select	coalesce(max(ie_compensar_cheque_concil),'N')
into STRICT	ie_compensar_cheque_concil_w
from	parametros_contas_pagar
where	cd_estabelecimento	= cd_estabelecimento_w;

ie_considerar_data_w := obter_param_usuario(814, 37, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_considerar_data_w);
ie_gerar_movto_cheque_w := obter_param_usuario(814, 43, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_gerar_movto_cheque_w);
ie_considerar_doc_w := obter_param_usuario(814, 46, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_considerar_doc_w);
ie_nao_atualiza_w := obter_param_usuario(814, 51, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_nao_atualiza_w);
ie_considerar_nr_cheque_w := obter_param_usuario(814, 59, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_considerar_nr_cheque_w);
ie_movtos_iguais_w := obter_param_usuario(814, 66, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_movtos_iguais_w);

open c01;
loop
fetch c01 into
	nr_seq_movto_w,
	nr_seq_extrato_w,
	cont_w,
	nr_seq_pend_tasy_w,
	nr_seq_pend_bco_w,
	dt_movimento_w;
EXIT WHEN NOT FOUND; /* apply on c01 */

	select	max(a.nr_seq_concil)
	into STRICT	nr_seq_concil_w
	from	movto_trans_financ a
	where	a.nr_sequencia	= nr_seq_movto_w;

    select  CASE WHEN coalesce(NR_SEQ_CONCIL::text, '') = '' THEN  'N'  ELSE 'S' END
    into STRICT    ie_extrato_concil_w
    from    banco_extrato_lanc
    where   nr_sequencia = nr_seq_extrato_w;

	if (cont_w = 1) and (coalesce(nr_seq_concil_w,0) = 0 and ie_extrato_concil_w = 'N') then

		select	nextval('concil_banc_movto_seq')
		into STRICT	nr_sequencia_w
		;

		insert	into concil_banc_movto(NR_SEQUENCIA,
			NR_SEQ_CONCILIACAO,
			DT_ATUALIZACAO,
			NM_USUARIO,
			IE_FORMA_CONCILIACAO)
		values (nr_sequencia_w,
			nr_seq_conciliacao_p,
			clock_timestamp(),
			nm_usuario_p,
			'A');

		update	movto_trans_financ
		set	nr_seq_concil 	= nr_sequencia_w,
			nm_usuario	= nm_usuario_p,
			dt_atualizacao	= clock_timestamp(),
			ie_conciliacao	= 'S',
			dt_conferencia	= clock_timestamp()
		where	nr_sequencia	= nr_seq_movto_w;

		if (ie_compensar_cheque_concil_w = 'S') then
			
			if (ie_gerar_movto_cheque_w = 'S') then

				open c02;
				loop
				fetch c02 into
					nr_seq_cheque_w;
				EXIT WHEN NOT FOUND; /* apply on c02 */
					compensar_cheque(nr_seq_cheque_w,dt_movimento_w,'I',nm_usuario_p,null);

					update	movto_trans_financ
					set	ds_historico	= substr(wheb_mensagem_pck.get_texto(302528, 'NR_SEQ_CONCIL=' || nr_sequencia_w),1,255)
					where	nr_sequencia	=	(SELECT	max(a.nr_sequencia)
									from	movto_trans_financ a
									where	a.nr_seq_cheque_cp	= nr_seq_cheque_w);
				end loop;
				close c02;

			else
				update	cheque a
				set	dt_compensacao	= dt_movimento_w
				where	coalesce(dt_compensacao::text, '') = ''
				and	exists (SELECT	1
					from	movto_trans_financ x
						where	x.nr_seq_cheque_cp	= a.nr_sequencia
						and	x.nr_sequencia		= nr_seq_movto_w
						and	(x.nr_seq_concil IS NOT NULL AND x.nr_seq_concil::text <> ''));

				/* Compensar cheque único do borderô */

				update	cheque a
				set	dt_compensacao	= dt_movimento_w
				where	coalesce(dt_compensacao::text, '') = ''
				and	exists (SELECT	1
					from	movto_trans_financ x
						where	x.nr_documento	= a.nr_cheque
						and	x.nr_sequencia	= nr_seq_movto_w
						and	(x.nr_seq_concil IS NOT NULL AND x.nr_seq_concil::text <> '')
						and	coalesce(x.nr_seq_cheque::text, '') = ''
						and	(x.nr_bordero IS NOT NULL AND x.nr_bordero::text <> '')
						and	exists (select	1
								from	cheque_bordero_titulo y
								where	y.nr_bordero	= x.nr_bordero
								and	y.nr_cheque	= a.nr_cheque));
			end if;
		end if;

		update	banco_extrato_lanc
		set	nr_seq_concil	= nr_sequencia_w,
			nm_usuario	= nm_usuario_p,
			dt_atualizacao	= clock_timestamp(),
			ie_conciliacao	= 'S'
		where	nr_sequencia	= nr_seq_extrato_w;

		delete	from CONCIL_BANC_PEND_TASY
		where	nr_sequencia	= nr_seq_pend_tasy_w;

		delete	from CONCIL_BANC_PEND_BCO
		where	nr_sequencia	= nr_seq_pend_bco_w;
	end if;

end loop;
close c01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE conciliar_banco ( nr_seq_conciliacao_p bigint, nm_usuario_p text) FROM PUBLIC;

