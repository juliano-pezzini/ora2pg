-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE fis_gerar_reg_i300_efd ( nr_seq_controle_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, dt_inicio_p timestamp, dt_fim_p timestamp, cd_empresa_p bigint, ds_separador_p text, ie_tributacao_cst_p text, nr_seq_I200_p bigint, cd_tipo_det_I200_p text, cd_conta_contabil_p text, qt_linha_p INOUT bigint, nr_sequencia_p INOUT bigint) AS $body$
DECLARE


aliquota_pis_w			double precision;
aliquota_cofins_w		double precision;
cd_tributo_pis_w		smallint;
cd_tributo_cofins_w		smallint;					
nr_seq_regra_efd_w		bigint;
nr_versao_efd_w			varchar(5);
tp_registro_w			varchar(4);
cd_municipio_ibge_w		varchar(7);
nr_linha_w			bigint 	:= qt_linha_p;
nr_seq_registro_w		bigint 	:= nr_sequencia_p;
ds_arquivo_w			varchar(4000);
ds_arquivo_compl_w		varchar(4000);
ds_linha_w			varchar(8000);
sep_w				varchar(1)	:= ds_separador_p;
qt_registros_w			bigint;
cd_empresa_w			smallint;
nr_seq_data_w			bigint;
ie_local_gerar_sped_w		varchar(1);

c01 CURSOR FOR
	SELECT	'I300' tp_registro,
		sum(vl_movimento) vl_operacao,
		cd_conta_contabil cd_conta_contabil,
		cd_tipo_detalhamento cd_tipo_detalhamento,
		'' ds_info_compl
	from (SELECT	CASE WHEN coalesce(c.ie_tipo_valor,'VM')='VM' THEN a.vl_movimento WHEN coalesce(c.ie_tipo_valor,'VM')='VC' THEN a.vl_credito WHEN coalesce(c.ie_tipo_valor,'VM')='VD' THEN a.vl_debito END  vl_movimento,
			c.cd_conta_contabil,
			c.cd_tipo_detalhamento
		from	fis_efd_conta_contabil	c,
			fis_efd_regra_tipo_ct	r,
			ctb_balancete_v		a
		where 	a.cd_conta_contabil				= c.cd_conta_contabil
		and	c.nr_seq_tipo_ct				= r.nr_sequencia
		and	a.nr_seq_mes_ref				= nr_seq_data_w
		and	c.nr_seq_superior				= nr_seq_I200_p
		and	a.cd_estabelecimento				= c.cd_estabelecimento
		and 	c.cd_estabelecimento 				= cd_estabelecimento_p
		and	obter_empresa_estab(a.cd_estabelecimento)	= coalesce(c.cd_empresa, cd_empresa_p)
		and	a.ie_normal_encerramento			= 'N'
		and	c.ie_tributacao_cst				= ie_tributacao_cst_p
		and	r.ie_tipo_ct in ('I100_DEG','I100_DEE','I100_FAT'))
		--and	r.ie_tipo_ct					= 'I300')
	group by
		'I300',
		cd_conta_contabil,
		cd_tipo_detalhamento;

vet01	C01%RowType;


c02 CURSOR FOR
	SELECT	'I300' tp_registro,
		sum(vl_movimento) vl_operacao,
		cd_conta_contabil cd_conta_contabil,
		cd_tipo_detalhamento cd_tipo_detalhamento,
		'' ds_info_compl
	from (SELECT	CASE WHEN coalesce(c.ie_tipo_valor,'VM')='VM' THEN a.vl_movimento WHEN coalesce(c.ie_tipo_valor,'VM')='VC' THEN a.vl_credito WHEN coalesce(c.ie_tipo_valor,'VM')='VD' THEN a.vl_debito END  vl_movimento,
			c.cd_conta_contabil,
			c.cd_tipo_detalhamento
		from	fis_efd_conta_contabil	c,
			fis_efd_regra_tipo_ct	r,
			ctb_balancete_v		a
		where 	a.cd_conta_contabil				= c.cd_conta_contabil
		and	c.nr_seq_tipo_ct				= r.nr_sequencia
		and	a.nr_seq_mes_ref				= nr_seq_data_w
		and	c.nr_seq_superior				= nr_seq_I200_p
		and	a.cd_estabelecimento				= c.cd_estabelecimento
		and 	c.cd_estabelecimento 				= cd_estabelecimento_p
		and	obter_empresa_estab(a.cd_estabelecimento)	= coalesce(c.cd_empresa, cd_empresa_p)
		and	a.ie_normal_encerramento			= 'N'
		and	r.ie_tipo_ct in ('AL'))
		--and	r.ie_tipo_ct					= 'I300')
	group by
		'I300',
		cd_conta_contabil,
		cd_tipo_detalhamento;

vet02	C02%RowType;


BEGIN	
select	cd_empresa
into STRICT	cd_empresa_w
from	estabelecimento
where	cd_estabelecimento	= cd_estabelecimento_p;

select	count(1)
into STRICT	qt_registros_w
from	ctb_mes_ref
where	trunc(dt_referencia, 'mm')	= trunc(dt_inicio_p, 'mm')
and	cd_empresa			= cd_empresa_w  LIMIT 1;

if (qt_registros_w = 1) then
	select	nr_sequencia
	into STRICT	nr_seq_data_w
	from 	ctb_mes_ref
	where 	trunc(dt_referencia, 'mm')	= trunc(dt_inicio_p, 'mm')
	and	cd_empresa			= cd_empresa_w;
end if;

--obter_param_usuario(5500,25,obter_perfil_ativo,nm_usuario_p,cd_estabelecimento_p,ie_local_gerar_sped_w);


--if	(ie_local_gerar_sped_w = 'N')  then
	open C01;
	loop
	fetch C01 into	
		vet01;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		ds_linha_w	:= substr(	sep_w || vet01.tp_registro 					|| -- Texto fixo contendo "I300" 
						sep_w || vet01.cd_tipo_detalhamento				|| -- Código do tipo de detalhamento, conforme Tabelas 7.1.1 e/ou 7.1.2 
						sep_w || sped_formatar_numericos(abs(vet01.vl_operacao),2,',')	|| -- Valor detalhado referente ao campo 03 (COD_DET) deste registro
						sep_w || vet01.cd_conta_contabil				|| -- Código da conta contábil referente ao valor informado no campo 04 (DET_VALOR) 
						sep_w || vet01.ds_info_compl					|| -- Informação Complementar dos dados informados no registro 
						sep_w,1,8000);
		
		ds_arquivo_w		:= substr(ds_linha_w,1,4000);
		ds_arquivo_compl_w	:= substr(ds_linha_w,4001,4000);
		nr_seq_registro_w	:= nr_seq_registro_w + 1;
		nr_linha_w		:= nr_linha_w + 1;

		insert into fis_efd_arquivo(nr_sequencia,
			nm_usuario,
			dt_atualizacao,
			nm_usuario_nrec,
			dt_atualizacao_nrec,
			nr_seq_controle_efd,
			nr_linha,
			cd_registro,
			ds_arquivo,
			ds_arquivo_compl)
		values (nr_seq_registro_w,
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nr_seq_controle_p,
			nr_linha_w,
			vet01.tp_registro,
			ds_arquivo_w,
			ds_arquivo_compl_w);
			
		end;
	end loop;
	close C01;
	
	
	open C02;
	loop
	fetch C02 into	
		vet02;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		if (cd_tipo_det_I200_p = substr(vet02.cd_tipo_detalhamento,1,5) and cd_conta_contabil_p = vet02.cd_conta_contabil) then
		
		ds_linha_w	:= substr(	sep_w || vet02.tp_registro 					|| -- Texto fixo contendo "I300" 
						sep_w || vet02.cd_tipo_detalhamento				|| -- Código do tipo de detalhamento, conforme Tabelas 7.1.1 e/ou 7.1.2 
						sep_w || sped_formatar_numericos(abs(vet02.vl_operacao),2,',')	|| -- Valor detalhado referente ao campo 03 (COD_DET) deste registro
						sep_w || vet02.cd_conta_contabil				|| -- Código da conta contábil referente ao valor informado no campo 04 (DET_VALOR) 
						sep_w || vet02.ds_info_compl					|| -- Informação Complementar dos dados informados no registro 
						sep_w,1,8000);
		
		ds_arquivo_w		:= substr(ds_linha_w,1,4000);
		ds_arquivo_compl_w	:= substr(ds_linha_w,4001,4000);
		nr_seq_registro_w	:= nr_seq_registro_w + 1;
		nr_linha_w		:= nr_linha_w + 1;

		insert into fis_efd_arquivo(nr_sequencia,
			nm_usuario,
			dt_atualizacao,
			nm_usuario_nrec,
			dt_atualizacao_nrec,
			nr_seq_controle_efd,
			nr_linha,
			cd_registro,
			ds_arquivo,
			ds_arquivo_compl)
		values (nr_seq_registro_w,
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nr_seq_controle_p,
			nr_linha_w,
			vet02.tp_registro,
			ds_arquivo_w,
			ds_arquivo_compl_w);			
				
		end if;
		end;
	end loop;
	close C02;
--end if;
	
commit;

qt_linha_p	:= nr_linha_w;
nr_sequencia_p	:= nr_seq_registro_w;	

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE fis_gerar_reg_i300_efd ( nr_seq_controle_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, dt_inicio_p timestamp, dt_fim_p timestamp, cd_empresa_p bigint, ds_separador_p text, ie_tributacao_cst_p text, nr_seq_I200_p bigint, cd_tipo_det_I200_p text, cd_conta_contabil_p text, qt_linha_p INOUT bigint, nr_sequencia_p INOUT bigint) FROM PUBLIC;

