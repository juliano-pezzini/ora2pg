-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE liberar_informacao (nm_tabela_p text, nm_chave_p text, qt_chave_p bigint, nm_usuario_p text) AS $body$
DECLARE


ds_sep_bv_w		varchar(10);
ds_comando_w		varchar(255);
cd_pessoa_fisica_cur_w	varchar(10);
cd_pessoa_fisica_cih_w	varchar(10);
cd_pessoa_fisica_prm_w	varchar(10);
cd_pessoa_parecer_w	varchar(10);
nr_atendimento_cih_w	bigint;
nr_atendimento_prm_w	bigint;
nr_atendimento_w		bigint;
nr_atend_orient_geral_w	bigint;
nr_seq_evento_w		bigint;
nr_atendimento_cur_ferida_w		bigint;
qt_idade_w		bigint;
cd_estabelecimento_w	bigint;
nr_seq_tipo_atend_w	bigint;
nr_seq_classif_w		bigint;
nr_seq_triagem_w		bigint;
nr_seq_triagem_prioridade_w	bigint;
nr_seq_precaucao_w	bigint;
ie_gerar_alerta_w	varchar(1);
ie_consequencia_w	varchar(3);
cd_pessoa_fisica_w   varchar(10);
cd_doenca_w			 varchar(30);
dt_diagnostico_w	timestamp;
qt_reg_w			bigint;
NR_SEQ_CLASSIF_ADIC_w	bigint;
cd_profissional_w	pep_orientacao_geral.cd_profissional%type;
nr_seq_mentor_w		bigint;
nr_seq_proc_interno_w	bigint;
cd_procedimento_w	procedimento.cd_procedimento%TYPE;
ie_origem_proced_w	bigint;
qt_procedimento_w	double precision;
ie_justificativa_conv_w	varchar(2);
ie_gerar_conta_w	varchar(2);
ie_tipo_w		smallint;
ie_retorno_w		varchar(255);
nr_regras_atendidas_w  varchar(2000);
ie_gera_prot_assistencial   boolean := False;
cd_perfil_w		integer;
qt_regra_w		integer;
ie_regra_w		varchar(1);
ie_obriga_micro_w	varchar(15);
ie_permite_w		varchar(1);
nr_seq_interno_w 	bigint;
IE_TIPO_DIAGNOSTICO_w	smallint;
nr_seq_agenda_w	aval_pre_anestesica.nr_seq_agenda%type;
ie_libera_template_w	varchar(15);
ie_escala_w		varchar(15);
ie_kv_tem_item_w	char(1);
ds_versao_w			varchar(10);
dt_avaliacao_w		timestamp;
ie_paciente_w		varchar(10);
dt_fim_w		timestamp;
ie_gerar_vs_nut_asmnt varchar(1);
ie_requesrt_reconciliation_w varchar(1);
ie_main_enc_probl_w     varchar(1);
ie_tem_campo_w     varchar(1);
ds_sql_w		varchar(4000);
ie_escala_indice_w          VICE_ESCALA.DS_FUNCTION%type;
ie_score_flex_ii_w          ESCALA_EIF_II.NR_SEQ_ESCALA%type;
ie_score_flex_w             ESCALA_EIF.NR_SEQ_ESCALA%type;
nr_seq_ev_linha_cuidado_w   QUA_EVENTO_PACIENTE.NR_SEQ_EVENTO%type;
dt_aval_linha_cuidado_w     CAN_LOCO_REGIONAL.DT_AVALIACAO%type;
nr_seq_ferida_w             CUR_FERIDA.NR_SEQUENCIA%type;
nr_seq_programa_saude_w     ATEND_PROGRAMA_SAUDE.NR_SEQ_PROGRAMA_SAUDE%type;
dt_real_w                   PROTOCOLO_INT_PAC_EVENTO.DT_REAL%TYPE;
nr_seq_vacina_w             PACIENTE_VACINA.NR_SEQ_VACINA%TYPE;
ie_dose_w                   PACIENTE_VACINA.IE_DOSE%TYPE;
ie_gerar_aprovacao_w smallint;
cd_medico_w                 parecer_medico_req.cd_medico%TYPE;
cd_especialidade_w          parecer_medico_req.cd_especialidade%TYPE;
cd_especialidade_dest_w     parecer_medico_req.cd_especialidade_dest%TYPE;
nr_seq_tipo_parecer_w       parecer_medico_req.nr_seq_tipo_parecer%TYPE;
nr_seq_tipo_parecer_ww      parecer_medico_req.nr_seq_tipo_parecer%TYPE;
nr_seq_equipe_dest_w        parecer_medico_req.nr_seq_equipe_dest%TYPE;

ie_gerar_evolucao_diagnosis_w   varchar(1);
ie_gerar_evolucao_problem_w     varchar(1);
cd_evolucao_w                   bigint;
ie_gerar_evolucao_med_trtmnt_w  varchar(1);
ie_form_type_w                  med_treatment_plan.si_type_form%TYPE;
ie_gerar_evolucao_med_cert_w     varchar(1);
ie_gerar_evolucao_disch_instr    varchar(1);
ie_gerar_evol_in_ref_w varchar(1) := 'N';
ie_gerar_evol_in_ref_ww varchar(1) := 'N';
ie_gerar_general_instr_w        varchar(1);
ie_gerar_surg_achieve_w      varchar(1);
ie_gerar_evol_ext_ref_w varchar(1) := 'N';
ie_japan_locale_w varchar(1) := 'N';

qt_pks bigint;
nm_atributo_pk_w varchar(250);
ds_retorno_w varchar(250);
ie_pendencia_pepa_w varchar(1) := 'N';
DS_SEQUENCIA_REG_W PEPA_ITEM_PENDENTE.DS_SEQUENCIA_REG%type;
lista_escalas_w varchar(1000);
ie_permite_lib_outro_user varchar(1);

C01 CURSOR FOR
	SELECT	nr_seq_evento
	from	regra_envio_sms
	where	cd_estabelecimento	= cd_estabelecimento_w
	and	ie_evento_disp = 'LCU'
	and	qt_idade_w between coalesce(qt_idade_min,0)	and coalesce(qt_idade_max,9999)
	and	coalesce(ie_situacao,'A') = 'A';

C02 CURSOR FOR
	SELECT	nr_seq_evento
	from	regra_envio_sms
	where	cd_estabelecimento	= cd_estabelecimento_w
	and	ie_evento_disp = 'LCH'
	and	qt_idade_w between coalesce(qt_idade_min,0)	and coalesce(qt_idade_max,9999)
	and	coalesce(ie_situacao,'A') = 'A';


C03 CURSOR FOR
    SELECT
        nr_seq_evento
    from (
			SELECT
                1 cd,
                nr_seq_evento
            from
                regra_envio_sms
            where
                cd_estabelecimento = cd_estabelecimento_w
                and ie_evento_disp = 'LPM'
                and qt_idade_w between coalesce(qt_idade_min, 0) and coalesce(qt_idade_max, 9999)
                and coalesce(ie_situacao, 'A') = 'A'
                and nr_seq_tipo_parecer = nr_seq_tipo_parecer_w

union

            select
                2 cd,
                nr_seq_evento
            from
                regra_envio_sms
            where
                cd_estabelecimento = cd_estabelecimento_w
                and ie_evento_disp = 'LPM'
                and qt_idade_w between coalesce(qt_idade_min, 0) and coalesce(qt_idade_max, 9999)
                and coalesce(ie_situacao, 'A') = 'A'
                and coalesce(nr_seq_tipo_parecer, coalesce(nr_seq_tipo_parecer_w, - 1)) = coalesce(nr_seq_tipo_parecer_w, - 1)
        ) alias9
		where ((ie_japan_locale_w = 'S' ) or (ie_japan_locale_w = 'N')) LIMIT 1;

C04 CURSOR FOR
	SELECT	nr_seq_evento
	from	   regra_envio_sms
	where	   cd_estabelecimento	= cd_estabelecimento_w
	and	   ie_evento_disp = 'EXAEX'
	and	   qt_idade_w between coalesce(qt_idade_min,0)	and coalesce(qt_idade_max,9999)
	and	   coalesce(ie_situacao,'A') = 'A';

C05 CURSOR FOR
	SELECT	nr_seq_evento
	from	regra_envio_sms
	where	cd_estabelecimento	= cd_estabelecimento_w
	and		ie_evento_disp = 'LPRM'
	and		qt_idade_w between coalesce(qt_idade_min,0)	and coalesce(qt_idade_max,9999)
	and		coalesce(ie_consequencia,ie_consequencia_w) = ie_consequencia_w
	and		coalesce(ie_situacao,'A') = 'A';

C06 CURSOR FOR
	SELECT	nr_sequencia
	from	DIAGNOSTICO_CLASSIF_ADIC
	where	cd_doenca	= cd_doenca_w;

C07 CURSOR FOR
	SELECT	nr_seq_evento
	from	regra_envio_sms
	where	cd_estabelecimento	= cd_estabelecimento_w
	and	ie_evento_disp = 'ALDO'
	and	qt_idade_w between coalesce(qt_idade_min,0)	and coalesce(qt_idade_max,9999)
	and	coalesce(ie_situacao,'A') = 'A';

C08 CURSOR FOR
SELECT a.NM_ATRIBUTO
from INDICE_ATRIBUTO a,
  INDICE b
where a.NM_TABELA = b.NM_TABELA
  and a.NM_INDICE = b.NM_INDICE
  and b.NM_TABELA = nm_tabela_p
  and b.IE_TIPO = 'PK'
order by a.NM_ATRIBUTO;

C09 CURSOR FOR
	SELECT
		ie_escala
	from vice_escala
	where nm_tabela = nm_tabela_p;


BEGIN

if (nm_tabela_p not  ('ATEND_PACIENTE_UNIDADE', 'DIAGNOSTICO_DOENCA', 'ATEND_CATEGORIA_CONVENIO')) then

  open C08;
	loop
	fetch C08 into
		nm_atributo_pk_w;
	EXIT WHEN NOT FOUND; /* apply on C08 */
		begin

      ds_sql_w :=	'select ' || nm_atributo_pk_w || ' from ' || nm_tabela_p 
        || ' where ' || nm_chave_p || ' = ' || qt_chave_p;
      ds_retorno_w := Obter_valor_Dinamico_bv(ds_sql_w, null, ds_retorno_w);

      ds_sequencia_reg_w := substr(ds_sequencia_reg_w || nm_atributo_pk_w || '=' || ds_retorno_w || '#@#@', 1, 250);

		exception
		when others then
		null;
		end;
	end loop;
	close C08;

  select coalesce(max('S'), 'N')
  into STRICT ie_pendencia_pepa_w
  from pepa_item_pendente
  where nm_Tabela = nm_tabela_p
    and ds_sequencia_reg = substr(ds_sequencia_reg_w, 1 , LENGTH(ds_sequencia_reg_w) - 4);

else
  select coalesce(max('S'), 'N')
  into STRICT ie_pendencia_pepa_w
  from pepa_item_pendente
  where nm_Tabela = nm_tabela_p
    and ds_sequencia_reg = 'NR_SEQ_INTERNO=' || qt_chave_p;

end if;

if (ie_pendencia_pepa_w = 'S') then
  CALL Wheb_mensagem_pck.exibir_mensagem_abort(1161540);
end if;

select 	obter_separador_bv
into STRICT	ds_sep_bv_w
;

if (upper(nm_tabela_p) = upper('PRM_FICHA_OCORRENCIA')) then
	select 	max(b.ie_consequencia),
			max(a.cd_pessoa_fisica),
			max(a.nr_atendimento)
	into STRICT	ie_consequencia_w,
			cd_pessoa_fisica_prm_w,
			nr_atendimento_prm_w
	from	prm_ficha_ocorrencia b,
			qua_evento_paciente a
	where	a.nr_sequencia = b.nr_seq_evento
	and		b.nr_sequencia = qt_chave_p;

	cd_estabelecimento_w	:= wheb_usuario_pck.get_cd_estabelecimento;
	qt_idade_w				:= coalesce(obter_idade_pf(cd_pessoa_fisica_prm_w,clock_timestamp(),'A'),0);

	open C05;
	loop
	fetch C05 into
		nr_seq_evento_w;
	EXIT WHEN NOT FOUND; /* apply on C05 */
		CALL gerar_evento_paciente(nr_seq_evento_w,nr_atendimento_prm_w,cd_pessoa_fisica_prm_w,null,nm_usuario_p,null,null,null,null,null,null,null,nr_seq_evento_w);
	end loop;
	close C05;
end if;

if (upper(nm_tabela_p) = upper('CUR_FERIDA')) then
	begin

	select 	max(cd_pessoa_fisica)
	into STRICT	cd_pessoa_fisica_cur_w
	from	cur_ferida
	where	nr_sequencia = qt_chave_p;

	nr_atendimento_cur_ferida_w := obter_ultimo_atendimento(cd_pessoa_fisica_cur_w);

	cd_estabelecimento_w		:= wheb_usuario_pck.get_cd_estabelecimento;
	qt_idade_w	:= coalesce(obter_idade_pf(cd_pessoa_fisica_cur_w,clock_timestamp(),'A'),0);

	open C01;
	loop
	fetch C01 into
		nr_seq_evento_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		gerar_evento_paciente(nr_seq_evento_w,nr_atendimento_cur_ferida_w,cd_pessoa_fisica_cur_w,null,nm_usuario_p,null);
		exception
		when others then
		null;
		end;
	end loop;
	close C01;

	end;
end if;

if (upper(nm_tabela_p) = upper('ATENDIMENTO_PRECAUCAO')) then
	begin

	if (wheb_usuario_pck.get_cd_funcao = 872) then
		select	max(obter_dados_motivo_isolamento(nr_seq_motivo_isol, 'IM'))
		into STRICT	ie_obriga_micro_w
		from 	atendimento_precaucao
		where	nr_sequencia		= qt_chave_p;

		if (ie_obriga_micro_w = 'M') then
			select coalesce(max('S'),'N')
			into STRICT   ie_permite_w
			from   atend_precaucao_micro
			where  nr_seq_atend_precaucao	= qt_chave_p;

			if (ie_permite_w = 'N') then
				CALL Wheb_mensagem_pck.exibir_mensagem_abort(352827);
			end if;
		elsif (ie_obriga_micro_w = 'S') then
			select 	coalesce(max('S'),'N')
			into STRICT   	ie_permite_w
			from   	atendimento_precaucao a,
				motivo_isolamento b
			where  	a.nr_seq_motivo_isol	= b.nr_sequencia
			and	(cd_microorganismo IS NOT NULL AND cd_microorganismo::text <> '')
			and	a.nr_sequencia		= qt_chave_p;

			if (ie_permite_w = 'N') then
				CALL Wheb_mensagem_pck.exibir_mensagem_abort(690231);
			end if;
		end if;
	end if;

	select 	max(nr_atendimento),
		max(nr_seq_precaucao)
	into STRICT	nr_atendimento_cih_w,
		nr_seq_precaucao_w
	from	atendimento_precaucao
	where	nr_sequencia = qt_chave_p;

	select 	max(ie_gerar_alerta)
	into STRICT	ie_gerar_alerta_w
	from 	CIH_PRECAUCAO
	where 	nr_sequencia = nr_seq_precaucao_w;

	if (nr_atendimento_cih_w IS NOT NULL AND nr_atendimento_cih_w::text <> '') then

		select 	max(cd_pessoa_fisica)
		into STRICT	cd_pessoa_fisica_cih_w
		from	atendimento_paciente
		where	nr_atendimento = nr_atendimento_cih_w;

		cd_estabelecimento_w		:= wheb_usuario_pck.get_cd_estabelecimento;
		qt_idade_w			:= coalesce(obter_idade_pf(cd_pessoa_fisica_cih_w,clock_timestamp(),'A'),0);

		open C02;
		loop
		fetch C02 into
			nr_seq_evento_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin
			CALL gerar_evento_precaucao(nr_seq_evento_w,nr_atendimento_cih_w,cd_pessoa_fisica_cih_w,qt_chave_p,nm_usuario_p);
			exception
			when others then
			null;
			end;
		end loop;
		close C02;

		CALL gerar_lancamento_automatico(nr_atendimento_cih_w, null, 559, nm_usuario_p, null, null, null, null, null, null);

	end if;

	begin
	if (ie_gerar_alerta_w <> 'N') then
		CALL inserir_alerta_precaucao(qt_chave_p,nm_usuario_p);
	end if;
	exception
	when others then
		null;
	end;

	end;
	elsif (upper(nm_tabela_p)	= 'PARECER_MEDICO_REQ') then
		select  max(nr_atendimento),
            max(cd_pessoa_fisica),
            max(cd_pessoa_parecer),
            max(cd_medico),
            max(cd_especialidade),
            max(cd_especialidade_dest),
            max(nr_seq_tipo_parecer),
            max(nr_seq_equipe_dest)
    into STRICT	nr_atendimento_cih_w,
            cd_pessoa_fisica_cih_w,
            cd_pessoa_parecer_w,
            cd_medico_w,
            cd_especialidade_w,
            cd_especialidade_dest_w,
            nr_seq_tipo_parecer_w,
            nr_seq_equipe_dest_w
    from    PARECER_MEDICO_REQ
    where   nr_parecer = qt_chave_p;
	cd_estabelecimento_w		:= wheb_usuario_pck.get_cd_estabelecimento;
	qt_idade_w			:= coalesce(obter_idade_pf(cd_pessoa_fisica_cih_w,clock_timestamp(),'A'),0);

 ie_gerar_evol_in_ref_w := obter_param_usuario(281, 1641, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, coalesce(wheb_usuario_pck.get_cd_estabelecimento, 1), ie_gerar_evol_in_ref_w);
     if ( ie_gerar_evol_in_ref_w = 'S' ) then
           select	max(nr_atendimento)
            into STRICT	nr_atendimento_w
            from	PARECER_MEDICO_REQ a
            where	NR_PARECER	= qt_chave_p;

            cd_evolucao_w := clinical_notes_pck.gerar_soap(nr_atendimento_w, qt_chave_p, 'INTERNAL_REF', null, 'P', 1, cd_evolucao_w, 'S');

            update PARECER_MEDICO_REQ
            set cd_evolucao = cd_evolucao_w
            where NR_PARECER = qt_chave_p;

        end if;


	select CASE WHEN coalesce(pkg_i18n.get_user_locale,'pt_BR')='ja_JP' THEN 'S'  ELSE 'N' END
    into STRICT   ie_japan_locale_w
;
	
	open C03;
	loop
	fetch C03 into
		nr_seq_evento_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin
            gerar_evento_paciente(nr_seq_evento_w,nr_atendimento_cih_w,cd_pessoa_fisica_cih_w,null,nm_usuario_p,null,null,null,null,cd_medico_w,cd_pessoa_parecer_w,null,qt_chave_p,null,null,'S',null,trunc(clock_timestamp()),null,null,null,null,
                                  cd_especialidade_dest_w,cd_especialidade_w,nr_seq_tipo_parecer_w,nr_seq_equipe_dest_w,'S');
		exception
		when others then
		null;
		end;
	end loop;
	close C03;


	select 	CASE WHEN Count(1)=0 THEN 'N'  ELSE 'S' END
	into STRICT	ie_requesrt_reconciliation_w
	from	parecer_medico_req pmr join
		tipo_parecer tp on pmr.nr_seq_tipo_parecer = tp.nr_sequencia
	where	pmr.nr_parecer = qt_chave_p
	and 	tp.ie_request_reconciliation ='S';

	if (ie_requesrt_reconciliation_w	= 'S') then
		begin
		CALL gerar_reconciliacao_paciente(nm_usuario_p, nr_atendimento_cih_w, obter_perfil_ativo, 'O', 'N', null,'N');
		exception
		when others then
			null;
		end;

	end if;


elsif (upper(nm_tabela_p)	= 'ATENDIMENTO_AMBULATORIAL') then
	select	max(nr_atendimento),
			max(nr_seq_tipo_atend)
	into STRICT	nr_atendimento_cih_w,
			nr_seq_tipo_atend_w
	from	ATENDIMENTO_AMBULATORIAL
	where	nr_sequencia = qt_chave_p;

	CALL executar_evento_agenda_atend(nr_atendimento_cih_w,'LAA',wheb_usuario_pck.get_cd_estabelecimento,nm_usuario_p,null,nr_seq_tipo_atend_w);

	CALL gerar_lancamento_automatico(nr_atendimento_cih_w,null,521,nm_usuario_p,qt_chave_p,null,null,null,null,null);

elsif (upper(nm_tabela_p)	= 'ESCALA_EIF') then

	CALL gerar_evolucao_score_flex(qt_chave_p,nm_usuario_p);
	
elsif (upper(nm_tabela_p)	= 'ENF_TRI_MEDICA') then
	
	CALL Gerar_Evolucao_Triagem_Obste(qt_chave_p,nm_usuario_p);

elsif (upper(nm_tabela_p)	= 'TRIAGEM_PRONTO_ATEND_AVAL') then
	select	max(nr_seq_classif)
	into STRICT	nr_seq_classif_w
	from	triagem_pronto_atend_aval
	where	nr_sequencia = qt_chave_p;

	select	max(nr_seq_triagem_prioridade)
	into STRICT	nr_seq_triagem_prioridade_w
	from	triagem_pronto_atend_aval
	where	nr_sequencia = qt_chave_p;

	select	max(nr_seq_triagem)
	into STRICT	nr_seq_triagem_w
	from	triagem_pronto_atend_aval
	where	nr_sequencia = qt_chave_p;

	if (nr_seq_classif_w > 0) then

		update 	triagem_pronto_atend
		set	nr_seq_classif 	= nr_seq_classif_w,
			nr_seq_triagem_prioridade = nr_seq_triagem_prioridade_w
		where	nr_sequencia 	= nr_seq_triagem_w;
	end if;
elsif (upper(nm_tabela_p)	= 'PROC_PAC_DESCRICAO') then

		select	max(nr_atendimento),
			max(cd_procedimento),
			max(ie_origem_proced),
			max(nr_seq_proc_interno),
			max(qt_procedimento),
			max(ie_justificativa_conv),
			max(ie_gerar_conta)
		into STRICT	nr_atendimento_cih_w,
			cd_procedimento_w,
			ie_origem_proced_w,
			nr_seq_proc_interno_w,
			qt_procedimento_w,
			ie_justificativa_conv_w,
			ie_gerar_conta_w
		from	PROC_PAC_DESCRICAO
		where	nr_sequencia = qt_chave_p;


	update 	PROC_PAC_DESC_PARTIC
	set		dt_liberacao = clock_timestamp()
	where   nr_seq_procedimento_pep = qt_chave_p
	and 	nm_usuario = nm_usuario_p
	and 	coalesce(dt_liberacao::text, '') = '';

	if (coalesce(ie_gerar_conta_w,'S') = 'S') then

		CALL gerar_lancto_auto_proc_desc(nr_atendimento_cih_w,qt_chave_p,nm_usuario_p);

	end if;

	if (coalesce(ie_justificativa_conv_w,'N') = 'S') then

		gerar_autor_atend_proced(nr_atendimento_cih_w,cd_procedimento_w,ie_origem_proced_w,nr_seq_proc_interno_w,qt_procedimento_w,nm_usuario_p,qt_chave_p);

	end if;
	
	CALL copiar_proced_diagnotisco(qt_chave_p, nr_atendimento_cih_w);

elsif (upper(nm_tabela_p)	= 'ATENDIMENTO_TOXINA') then
		cd_estabelecimento_w		:= wheb_usuario_pck.get_cd_estabelecimento;
		begin
		CALL GERAR_TOTAL_TOXINA(qt_chave_p,cd_estabelecimento_w,nm_usuario_p);
		exception
			when others then
			null;
		end;

elsif (upper(nm_tabela_p)	= 'DIAGNOSTICO_DOENCA') then

		select	max(CD_DOENCA),
				max(NR_SEQ_CLASSIF_ADIC),
				max(NR_ATENDIMENTO),
				max(NR_SEQ_INTERNO),
				max(IE_TIPO_DIAGNOSTICO),
				max(DT_DIAGNOSTICO),
                		max(IE_MAIN_ENC_PROBL)
		into STRICT	cd_doenca_w,
				NR_SEQ_CLASSIF_ADIC_w,
				nr_atendimento_w,
				nr_seq_interno_w,
				ie_tipo_diagnostico_w,
				dt_diagnostico_w,
                		ie_main_enc_probl_w
		from	diagnostico_doenca
		where	nr_seq_interno	= qt_chave_p;

		if (coalesce(NR_SEQ_CLASSIF_ADIC_w::text, '') = '') then

			select	count(*)
			into STRICT	qt_reg_w
			from	DIAGNOSTICO_CLASSIF_ADIC
			where	cd_doenca	= cd_doenca_w;

			if (qt_reg_w	> 0) then

				ie_regra_w 			 := 'N';
				cd_estabelecimento_w := wheb_usuario_pck.get_cd_estabelecimento;
				cd_perfil_w			 := Obter_perfil_Ativo;

				open C06;
					loop
					fetch C06 into
						nr_seq_classif_w;
					EXIT WHEN NOT FOUND; /* apply on C06 */

					if (ie_regra_w = 'N') then
						select	count(*)
						into STRICT	qt_regra_w
						from	REGRA_DIAG_CLASSIF_ADIC
						where	nr_seq_classif = nr_seq_classif_w
						and     coalesce(ie_situacao,'I') = 'A';

						if (qt_regra_w > 0) then

							select	count(*)
							into STRICT	qt_regra_w
							from	REGRA_DIAG_CLASSIF_ADIC
							where	nr_seq_classif = nr_seq_classif_w
							and		coalesce(cd_estabelecimento,cd_estabelecimento_w) = cd_estabelecimento_w
							and		coalesce(cd_perfil,cd_perfil_w) = cd_perfil_w
							and     coalesce(ie_situacao,'I') = 'A';

							if (qt_regra_w > 0) then
								ie_regra_w := 'S';
							end if;
						else
							ie_regra_w := 'S';
						end if;
					end if;

				end loop;
				close C06;

				if (ie_regra_w = 'S') then
					-- Additional classification information is required for this CID.
					CALL Wheb_mensagem_pck.exibir_mensagem_abort(264642);
				end if;
			end if;
		end if;

		SELECT * FROM GQA_LIBERACAO_DIAGNOSTICO(qt_chave_p, nm_usuario_p, nr_seq_mentor_w, nr_regras_atendidas_w) INTO STRICT nr_seq_mentor_w, nr_regras_atendidas_w;
		ie_gera_prot_assistencial := True;

		CALL gerar_tof_meta_atend(nr_atendimento_w , nm_usuario_p);


		CALL gerar_lista_problema(nr_atendimento_w,'DM',null,nr_seq_interno_w,cd_doenca_w,upper(nm_tabela_p),nm_usuario_p,ie_tipo_diagnostico_w,ie_main_enc_probl_w);

		CALL INATIVAR_DRG_EPISODIO_PACIENTE(nr_atendimento_w, qt_chave_p, upper(nm_tabela_p), nm_usuario_p, 'LIB');
		CALL gerar_paciente_grupo(cd_doenca_w,obter_pessoa_atendimento(nr_atendimento_w,'C'),nm_usuario_p);

		CALL controlar_diag_pac_filho(cd_doenca_w,null,nr_atendimento_w,dt_diagnostico_w,null,nm_usuario_p,'LIBERAR','S');

    ie_gerar_evolucao_diagnosis_w := obter_param_usuario(281, 1587, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, coalesce(wheb_usuario_pck.get_cd_estabelecimento
        , 1), ie_gerar_evolucao_diagnosis_w);

        if ( ie_gerar_evolucao_diagnosis_w = 'S' ) then
            cd_evolucao_w := clinical_notes_pck.gerar_soap(nr_atendimento_w, qt_chave_p, 'DIAGNOSIS', NULL, 'A', 1, cd_evolucao_w);

            update diagnostico_doenca
            set
                cd_evolucao = cd_evolucao_w
            where
                nr_seq_interno = qt_chave_p;

        end if;

    CALL ATUALIZAR_EV_LINHA_CUIDADO('CD', nm_tabela_p, qt_chave_p, null, Obter_pessoa_atendimento(nr_atendimento_w,'C'), nm_usuario_p);
elsif ( upper(nm_tabela_p) = 'LISTA_PROBLEMA_PAC' ) then
        begin
            select max(nr_atendimento)
            into STRICT nr_atendimento_w
            from lista_problema_pac
            where nr_sequencia = qt_chave_p;

            ie_gerar_evolucao_problem_w := obter_param_usuario(281, 1586, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, coalesce(wheb_usuario_pck.get_cd_estabelecimento
            , 1), ie_gerar_evolucao_problem_w);

            if ( ie_gerar_evolucao_problem_w = 'S' ) then
               cd_evolucao_w := clinical_notes_pck.gerar_soap(nr_atendimento_w, qt_chave_p, 'PROBLEM', NULL, 'A', 1, cd_evolucao_w);

                update lista_problema_pac
                set
                    cd_evolucao = cd_evolucao_w
                where
                    nr_sequencia = qt_chave_p;

            end if;

        end;
elsif (upper(nm_tabela_p) = 'AVAL_PRE_ANESTESICA') then
    begin
		ie_gerar_surg_achieve_w := obter_param_usuario(281, 1650, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, coalesce(wheb_usuario_pck.get_cd_estabelecimento, 1), ie_gerar_surg_achieve_w);
		select CD_PESSOA_FISICA,NR_ATENDIMENTO
		into STRICT cd_pessoa_fisica_w, nr_atendimento_w
		from aval_pre_anestesica
		where nr_sequencia = qt_chave_p;
		if ( ie_gerar_surg_achieve_w = 'S' ) then
			cd_evolucao_w := clinical_notes_pck.gerar_soap(nr_atendimento_w, qt_chave_p, 'SURG_ACHIEVE', NULL, 'P', 1, cd_evolucao_w, null, cd_pessoa_fisica_w, null);
			update aval_pre_anestesica
			set
				cd_evolucao = cd_evolucao_w
			where
				nr_sequencia = qt_chave_p;

		end if;
	end;

elsif (upper(nm_tabela_p) = 'CIAP_ATENDIMENTO') then
	begin
	SELECT * FROM GQA_Liberacao_ciap(qt_chave_p, nm_usuario_p, nr_seq_mentor_w, nr_regras_atendidas_w) INTO STRICT nr_seq_mentor_w, nr_regras_atendidas_w;
	ie_gera_prot_assistencial := True;
	end;
elsif (upper(nm_tabela_p)	= 'ESCALA_EIF_II') then

		begin
		CALL atualiza_classif_risco_escala(qt_chave_p,nm_usuario_p);
		exception
			when others then
			null;
		end;

elsif (upper(nm_tabela_p)	= 'PEDIDO_EXAME_EXTERNO') then
      select	max(nr_atendimento)
      into STRICT	   nr_atendimento_cih_w
      from	   pedido_exame_externo
      where	   nr_sequencia = qt_chave_p;


		cd_pessoa_fisica_w	:= obter_pessoa_atendimento(nr_atendimento_cih_w,'C');
      qt_idade_w	:= coalesce(obter_idade_pf(cd_pessoa_fisica_w,clock_timestamp(),'A'),0);
      cd_estabelecimento_w		:= wheb_usuario_pck.get_cd_estabelecimento;

      open C04;
         loop
         fetch C04 into
            nr_seq_evento_w;
         EXIT WHEN NOT FOUND; /* apply on C04 */
            begin
            CALL gerar_evento_paciente_trigger(nr_seq_evento_w,nr_atendimento_cih_w,cd_pessoa_fisica_w,null,nm_usuario_p,null,clock_timestamp(),null);
            exception
            when others then
            null;
            end;
         end loop;
      close C04;
elsif (upper(nm_tabela_p)	= 'DECLARACAO_OBITO') then

	select	max(a.cd_pessoa_fisica)
	into STRICT	cd_pessoa_fisica_w
	from	atendimento_paciente a,
		declaracao_obito b
	where	a.nr_atendimento	= b.nr_atendimento
	and	b.nr_sequencia = qt_chave_p;

	select	max(b.nr_atendimento)
	into STRICT	nr_atendimento_w
	from	declaracao_obito a,
		atendimento_paciente b
	where	a.nr_atendimento = b.nr_atendimento
	and	b.cd_pessoa_fisica = cd_pessoa_fisica_w
	and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
	and	coalesce(a.dt_inativacao::text, '') = ''
	and	a.nr_sequencia	<> qt_chave_p
	and	coalesce(a.ie_situacao,'A')	= 'A';

	cd_estabelecimento_w	:= wheb_usuario_pck.get_cd_estabelecimento;
	
	qt_idade_w		:= coalesce(obter_idade_pf(cd_pessoa_fisica_prm_w,clock_timestamp(),'A'),0);

	open C07;
	loop
	fetch C07 into
		nr_seq_evento_w;
	EXIT WHEN NOT FOUND; /* apply on C07 */
		CALL gerar_evento_paciente(nr_seq_evento_w,nr_atendimento_w,cd_pessoa_fisica_w,null,nm_usuario_p,null,null,null,null,null,null,null,null);
	end loop;
	close C07;
end if;

if	((upper(nm_tabela_p)	= 'PEP_ORIENTACAO_GERAL') or (upper(nm_tabela_p)	= 'ESCALA_ASG_PPP') or (upper(nm_tabela_p)	= 'ESCALA_STRONG_KIDS') or (upper(nm_tabela_p)	= 'ESCALA_APGAR') or (upper(nm_tabela_p)	= 'ATEND_ESCALA_INDICE') or (upper(nm_tabela_p)	= 'ATEND_ESCALA_BRADEN') or (upper(nm_tabela_p)	= 'ESCALA_MORSE') or (upper(nm_tabela_p)	= 'APACHE') or (upper(nm_tabela_p)	= 'AVAL_NUTRIC_SUBJETIVA') or (upper(nm_tabela_p) = 'ATESTADO_PACIENTE')) then
	begin
	ds_comando_w	:=	' update ' || nm_tabela_p ||
				' set dt_liberacao = sysdate ' ||
				' where ' || nm_chave_p || ' = :qt_valor ' ||
				' and dt_liberacao is null ';

	CALL exec_sql_dinamico_bv(obter_desc_expressao(726973), ds_comando_w, 'qt_valor='|| to_char(qt_chave_p) || ds_sep_bv_w);
ie_gerar_evolucao_med_cert_w := obter_param_usuario(281, 1638, Obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, coalesce(wheb_usuario_pck.get_cd_estabelecimento, 1), ie_gerar_evolucao_med_cert_w);
if (ie_gerar_evolucao_med_cert_w = 'S'  and (upper(nm_tabela_p) = 'ATESTADO_PACIENTE') )then
  begin
  select	nr_atendimento
            into STRICT	nr_atendimento_w
            from	atestado_paciente a
            where	nr_sequencia	= qt_chave_p;
    cd_evolucao_w := clinical_notes_pck.gerar_soap(nr_atendimento_w, qt_chave_p, 'MED_CERT', null, 'P', 1, cd_evolucao_w);
        update atestado_paciente
                set
                    cd_evolucao = cd_evolucao_w
                where
                    nr_sequencia = qt_chave_p;
  end;
  end if;

	if (upper(nm_tabela_p)	= 'PEP_ORIENTACAO_GERAL') then
		begin

		select	max(nr_atendimento),
			max(cd_profissional)
		into STRICT	nr_atend_orient_geral_w,
			cd_profissional_w
		from	pep_orientacao_geral
		where	nr_sequencia = qt_chave_p;

		CALL gerar_lancamento_automatico(nr_atend_orient_geral_w, null, 550, nm_usuario_p, null,null,cd_profissional_w,null,null,null);

		ie_gerar_general_instr_w := obter_param_usuario(281, 1648, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, coalesce(wheb_usuario_pck.get_cd_estabelecimento, 1), ie_gerar_general_instr_w);

            if ( ie_gerar_general_instr_w = 'S' ) then
               cd_evolucao_w := clinical_notes_pck.gerar_soap(nr_atend_orient_geral_w, qt_chave_p, 'GNRL_INSTRCT', NULL, 'P', 1, cd_evolucao_w);

                update pep_orientacao_geral
                set
                    cd_evolucao = cd_evolucao_w
                where
                    nr_sequencia = qt_chave_p;

            end if;
		end;
	end if;

	end;
elsif (upper(nm_tabela_p)	= 'PACIENTE_ATENDIMENTO') then
		ds_comando_w	:=	' update ' || nm_tabela_p ||
				' set dt_liberacao_reg = sysdate , dt_atualizacao = sysdate ' ||
				' where ' || nm_chave_p || ' = :qt_valor ' ||
				' and dt_liberacao_reg is null ';

	CALL exec_sql_dinamico_bv(obter_desc_expressao(726973), ds_comando_w, 'qt_valor='|| to_char(qt_chave_p) || ds_sep_bv_w);
elsif (upper(nm_tabela_p)	= 'QUE_ATENDIMENTO') then
	ds_comando_w	:=	' update ' || nm_tabela_p ||
				' set dt_liberacao = sysdate ' ||
				' where ' || nm_chave_p || ' = :qt_valor ' ||
				' and dt_liberacao is null ';

	CALL exec_sql_dinamico_bv(obter_desc_expressao(726973), ds_comando_w, 'qt_valor='|| to_char(qt_chave_p) || ds_sep_bv_w);
elsif (upper(nm_tabela_p)	= 'GLOBAL_RISK_CLASSIFICATION') then
	begin

	update	global_risk_classification
	set	dt_liberacao = clock_timestamp(),
		nm_usuario_lib = nm_usuario_p
	where	nr_sequencia = qt_chave_p
	and	coalesce(dt_liberacao::text, '') = '';

	end;
elsif (upper(nm_tabela_p)	= 'TESTE_ALLEN') then
	begin

	update	teste_allen
	set	dt_liberacao = clock_timestamp(),
		nm_usuario_lib = nm_usuario_p
	where	nr_sequencia = qt_chave_p
	and	coalesce(dt_liberacao::text, '') = '';

	end;
elsif (upper(nm_tabela_p)	= 'LAUDO_PACIENTE_RECIPIENT') then
	begin

	update	LAUDO_PACIENTE_RECIPIENT
	set	dt_liberacao = clock_timestamp(),
		nm_usuario_lib = nm_usuario_p
	where	nr_sequencia = qt_chave_p
	and	coalesce(dt_liberacao::text, '') = '';

	end;
elsif (upper(nm_tabela_p)	= 'CIRURGIA_AGENTE_ANEST_OCOR') then
	begin

	update cirurgia_agente_anest_ocor
	set	dt_liberacao = clock_timestamp(),
		nm_usuario = nm_usuario_p
	where	nr_sequencia = qt_chave_p
	and	coalesce(dt_liberacao::text, '') = '';

	end;
elsif (upper(nm_tabela_p)	= 'CIRURGIA_AGENTE_ANESTESICO') then
	begin

	update	cirurgia_agente_anestesico
	set	dt_liberacao = clock_timestamp(),
		nm_usuario = nm_usuario_p
	where	nr_sequencia = qt_chave_p
	and	coalesce(dt_liberacao::text, '') = '';

	end;
elsif (upper(nm_tabela_p) = 'SOLIC_TRANSF_EXTERNA') then
	begin

	update	solic_transf_externa
	set	dt_liberacao = clock_timestamp(),
		nm_usuario_lib = nm_usuario_p
	where	nr_sequencia = qt_chave_p
	and	coalesce(dt_liberacao::text, '') = '';

	end;
elsif (upper(nm_tabela_p)	= 'PACIENTE_VULNERABILIDADE') then
	begin

	update	PACIENTE_VULNERABILIDADE
	set	dt_liberacao = clock_timestamp(),
		nm_usuario_liberacao = nm_usuario_p
	where	nr_sequencia = qt_chave_p
	and	coalesce(dt_liberacao::text, '') = '';

	commit;

	end;
elsif (upper(nm_tabela_p) = 'AVAL_PRE_ANEST_DADO_ESTAT') then
	begin

	update aval_pre_anest_dado_estat
	set	dt_liberacao = clock_timestamp(),
			nm_usuario	 = nm_usuario_p
	where	nr_sequencia = qt_chave_p
	and	coalesce(dt_liberacao::text, '') = '';

	end;
elsif (upper(nm_tabela_p) = 'MED_AVALIACAO_PACIENTE') then
	begin
	CALL LIBERAR_AVALIACAO_HTML(qt_chave_p,nm_usuario_p);
	end;
elsif (upper(nm_tabela_p) = 'SUS_CONTRA_REFERENCIA') then
	begin
	CALL SUS_CONTROLA_LIB_CONTRA_REF(qt_chave_p,'L',nm_usuario_p);
	end;
elsif (upper(nm_tabela_p) = 'ATENDIMENTO_SINAL_VITAL') or (upper(nm_tabela_p) = 'ATENDIMENTO_MONIT_RESP') or (upper(nm_tabela_p) = 'ATEND_MONIT_HEMOD') or (upper(nm_tabela_p) = 'ATEND_AVAL_ANALGESIA') or (upper(nm_tabela_p) = 'ATEND_ANAL_BIOQ_PORT') or (upper(nm_tabela_p) = 'ATEND_UROANALISE') or (upper(nm_tabela_p) = 'ATEND_UROCOLOR') or (upper(nm_tabela_p) = 'ATEND_BIOIMPEDANCIA') then
		CALL Liberar_Sinal_Vital(qt_chave_p,upper(nm_tabela_p),nm_usuario_p);
elsif (upper(nm_tabela_p) = 'EVOLUCAO_PACIENTE') then
		CALL liberar_evolucao(qt_chave_p,nm_usuario_p);
elsif (upper(nm_tabela_p) = 'FA_RECEITA_FARMACIA') then
		FA_LIBERAR_RECEITA(qt_chave_p,nm_usuario_p,null,'N',ie_retorno_w);
elsif (upper(nm_tabela_p) = 'KV_RECEITA_FARMACIA') then
		select  coalesce(max('S'), 'N')
		into STRICT	ie_kv_tem_item_w
		from	kv_receita_farmacia_item
		where 	nr_seq_receita 	= qt_chave_p;

		if (ie_kv_tem_item_w = 'N') then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(193000);
		end if;

		ds_comando_w	:=	' update ' || nm_tabela_p ||
			' set dt_liberacao = sysdate ' ||
			' where ' || nm_chave_p || ' = :qt_valor ' ||
			' and dt_liberacao is null ';

		CALL exec_sql_dinamico_bv(obter_desc_expressao(726973), ds_comando_w, 'qt_valor='|| to_char(qt_chave_p) || ds_sep_bv_w);

elsif (upper(nm_tabela_p) = 'QUESTIONARIO_PACIENTE') then
	CALL LIBERAR_QUESTIONARIO(qt_chave_p,nm_usuario_p);
elsif (upper(nm_tabela_p) = 'PACIENTE_REP_PRESCRICAO') then

	update	PACIENTE_REP_PRESCRICAO
	set	dt_liberacao = clock_timestamp(),
	        nm_usuario = nm_usuario_p,
		nm_usuario_liberacao = nm_usuario_p
	where	nr_sequencia = qt_chave_p
	and	coalesce(dt_liberacao::text, '') = '';
elsif (upper(nm_tabela_p) = 'PE_PRESCRICAO') then
	CALL liberar_prescricao_enfemagem(qt_chave_p,nm_usuario_p);
elsif (upper(nm_tabela_p) = 'PE_PRESCR_CP_PROGRESS') then
		CALL cp_release_progress(qt_chave_p, nm_usuario_p);
elsif (upper(nm_tabela_p) = 'EHR_REGISTRO') then
	CALL Liberar_registro_template(qt_chave_p,nm_usuario_p);
elsif (upper(nm_tabela_p) = 'SUS_LAUDO_PACIENTE') then
		CALL sus_liberar_laudo(qt_chave_p,'L',nm_usuario_p);
elsif (upper(nm_tabela_p) = 'SISMAMA_ATENDIMENTO') then
		CALL sismama_gerar_liberacao_laudo(qt_chave_p,nm_usuario_p);
elsif (upper(nm_tabela_p) = 'TX_LIBERACAO_LISTA') then
		CALL pep_libera_reg_transp(qt_chave_p,nm_usuario_p);
elsif (upper(nm_tabela_p) = 'COT_COMPRA_HIST') then
		CALL liberar_cot_compra_hist(qt_chave_p,nm_usuario_p);
elsif (upper(nm_tabela_p) = 'COT_DOC_IMP_HISTORICO') then
		CALL liberar_hist_doc_imp(qt_chave_p,nm_usuario_p);
elsif (upper(nm_tabela_p) = 'CTB_DEMO_HIST') then
		update	CTB_DEMO_HIST
		set		dt_liberacao = clock_timestamp(),
				nm_usuario_lib = nm_usuario_p
		where	nr_sequencia  = qt_chave_p;
elsif (upper(nm_tabela_p) = 'CIRURGIA_AGENTE_ANESTESICO') then
	begin
	select	max(ie_tipo)
	into STRICT	ie_tipo_w
	from	cirurgia_agente_anestesico
	where	nr_sequencia = qt_chave_p;
	if (ie_tipo_w = 4) then
		ds_comando_w	:=	' update ' || nm_tabela_p ||
					' set dt_liberacao = sysdate ' ||
					' where ' || nm_chave_p || ' = :qt_valor ' ||
					' and dt_liberacao is null ';

		CALL exec_sql_dinamico_bv(obter_desc_expressao(726973), ds_comando_w, 'qt_valor='|| to_char(qt_chave_p) || ds_sep_bv_w);
	else
		ds_comando_w	:=	' update ' || nm_tabela_p ||
				' set dt_liberacao = sysdate ' ||
				' where ' || nm_chave_p || ' = :qt_valor ' ||
				' and nm_usuario = :nm_usuario ' ||
				' and dt_liberacao is null ';

		CALL exec_sql_dinamico_bv(obter_desc_expressao(726973), ds_comando_w, 'qt_valor='|| to_char(qt_chave_p) || ds_sep_bv_w ||
								'nm_usuario='|| nm_usuario_p || ds_sep_bv_w);
	end if;
	end;
elsif (upper(nm_tabela_p) = 'CIH_HIGIENIZACAO_MAOS') then
	CALL CIH_LIBERAR_HIGIENIZACAO_MAOS(qt_chave_p,nm_usuario_p);
elsif (upper(nm_tabela_p) = 'CIH_HIGIENIZACAO_MAOS') then
	CALL man_liberar_hist_erro(qt_chave_p,nm_usuario_p);
elsif (upper(nm_tabela_p) = 'TAREFA_TASY') then
	CALL liberar_tarefa_tasy(qt_chave_p,1,nm_usuario_p);
elsif (upper(nm_tabela_p) = 'PESSOA_FISICA_OBSERVACAO') then
	CALL man_liberar_hist_erro(qt_chave_p,nm_usuario_p);
elsif (upper(nm_tabela_p) = 'ORDEM_DOC_IMP_HISTORICO') then

	update	ORDEM_DOC_IMP_HISTORICO
	set	dt_liberacao = clock_timestamp(),
		nm_usuario_lib = nm_usuario_p
	where	nr_sequencia = qt_chave_p
	and	coalesce(dt_liberacao::text, '') = '';

elsif (upper(nm_tabela_p)	= 'ATEND_ESCUTA_INICIAL') then

	update	ATEND_ESCUTA_INICIAL
	set		nm_usuario		= nm_usuario_p,
			dt_liberacao	= clock_timestamp(),
			dt_atualizacao	= clock_timestamp()
	where	nr_sequencia	= qt_chave_p;

	CALL Liberar_inativar_acolhimento(qt_chave_p, nm_usuario_p, 'L','');
elsif (upper(nm_tabela_p)	= 'AVAL_PRE_ANESTESICA') then
	ie_libera_template_w := Obter_Param_Usuario(874, 41, Obter_perfil_Ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_libera_template_w);
	select	max(nr_seq_agenda)
	into STRICT		nr_seq_agenda_w
	from		aval_pre_anestesica
	where		nr_sequencia = qt_chave_p;

	CALL liberar_apae(qt_chave_p,nr_seq_agenda_w,wheb_usuario_pck.get_cd_estabelecimento,nm_usuario_p);

	if (ie_libera_template_w = 'S') then
		CALL Liberar_template_apae(nm_usuario_p,qt_chave_p);
	end if;
elsif (upper(nm_tabela_p) = 'NOTIFICACAO_SINAN') then
	CALL liberar_ficha_notificacao(qt_chave_p,nm_usuario_p);
elsif (upper(nm_tabela_p) = 'GPI_RISCO_HIST') then
	CALL GPI_LIBERAR_RISCO_HIST(qt_chave_p,nm_usuario_p,'L');
elsif (upper(nm_tabela_p) = 'GPI_PROJETO_HIST') then
	CALL GPI_LIBERAR_HISTORICO(qt_chave_p,nm_usuario_p);
elsif (upper(nm_tabela_p) = 'GPI_CRON_ETAPA_COMENT') then
	CALL gpi_liberar_comentario(qt_chave_p);
elsif (upper(nm_tabela_p) = 'PEP_PAC_CI') then
	CALL Liberar_Consentimento(qt_chave_p, nm_usuario_p);
elsif (upper(nm_tabela_p) = 'APA_EVOLUCAO') then
	CALL apae_liberar_evolucao(qt_chave_p);
elsif (upper(nm_tabela_p) = 'DIRETRIZ_ATENDIMENTO') then
	ds_comando_w	:=	' update ' || nm_tabela_p ||
				' set dt_liberacao = sysdate, ' ||
				' ie_status = :ie_status, ' ||
				' dt_atualizacao = sysdate, ' ||
				' nm_usuario_lib = :nm_usuario, ' ||
				' nm_usuario = :nm_usuario ' ||
				' where ' || nm_chave_p || ' = :qt_valor ' ||
				' and nm_usuario = :nm_usuario ' ||
				' and dt_liberacao is null ';

	CALL exec_sql_dinamico_bv(obter_desc_expressao(726973), ds_comando_w, 'ie_status='|| 'C' || ds_sep_bv_w ||
								'qt_valor='|| to_char(qt_chave_p) || ds_sep_bv_w ||
								'nm_usuario='|| nm_usuario_p || ds_sep_bv_w);
elsif (upper(nm_tabela_p) = 'OFT_IMAGEM_EXAME') then
	ds_comando_w	:=	' update ' || nm_tabela_p ||
				' set dt_liberacao = sysdate, ' ||
				' nm_usuario = :nm_usuario ' ||
				' where ' || nm_chave_p || ' = :qt_valor ';

	CALL exec_sql_dinamico_bv(obter_desc_expressao(726973), ds_comando_w, 'qt_valor='|| to_char(qt_chave_p) || ds_sep_bv_w ||
								'nm_usuario='|| nm_usuario_p || ds_sep_bv_w);

elsif (upper(nm_tabela_p) = 'ESCALA_HELIOS') then
	ds_comando_w	:=	' update ' || nm_tabela_p ||
				' set dt_liberacao = sysdate, ' ||
				' nm_usuario = :nm_usuario ' ||
				' where ' || nm_chave_p || ' = :qt_valor ';

	CALL exec_sql_dinamico_bv(obter_desc_expressao(726973), ds_comando_w, 'qt_valor='|| to_char(qt_chave_p) || ds_sep_bv_w ||
								'nm_usuario='|| nm_usuario_p || ds_sep_bv_w);
elsif (upper(nm_tabela_p) = 'PROCEDIMENTO_PAC_MEDICO') then
	begin
	CALL LIBERAR_PROC_PAC_MEDIC(qt_chave_p, nm_usuario_p);
	end;
elsif (upper(nm_tabela_p) = 'PLANO_VERSAO') then
	begin

	select	max(cd_pessoa_fisica)
	into STRICT	cd_pessoa_fisica_w
	from	plano_versao
	where	nr_sequencia = qt_chave_p;

	select 	coalesce(max((ds_versao)::numeric ), 0) +1
	into STRICT	ds_versao_w
	from 	plano_versao
	where 	cd_pessoa_fisica = cd_pessoa_fisica_w;


	update plano_versao
	set	dt_liberacao = clock_timestamp(),
		nm_usuario	 = nm_usuario_p,
		ds_versao	 = ds_versao_w
	where nr_sequencia = qt_chave_p
	and	  coalesce(dt_liberacao::text, '') = '';

	end;

elsif (upper(nm_tabela_p)	= 'PACIENTE_ANTEC_CLINICO') then


		select	max(cd_doenca),
			max(cd_pessoa_fisica),
			max(ie_paciente),
			max(dt_fim)
		into STRICT	cd_doenca_w,
			cd_pessoa_fisica_w,
			ie_paciente_w,
			dt_fim_w
		from	paciente_antec_clinico
		where	nr_sequencia	= qt_chave_p;

		ds_comando_w	:=	' update ' || nm_tabela_p ||
					' set dt_liberacao = sysdate ' ||
					'     ,nm_usuario = :nm_usuario '||
					'     ,nm_usuario_liberacao = :nm_usuario '||
					' where ' || nm_chave_p || ' = :qt_valor ' ||
					' and nm_usuario = :nm_usuario ' ||
					' and dt_liberacao is null ';

		CALL exec_sql_dinamico_bv(obter_desc_expressao(726973), ds_comando_w, 'qt_valor='|| to_char(qt_chave_p) || ds_sep_bv_w ||
									'nm_usuario='|| nm_usuario_p || ds_sep_bv_w);

		if (cd_doenca_w IS NOT NULL AND cd_doenca_w::text <> '') and (ie_paciente_w = 'S') and (coalesce(dt_fim_w::text, '') = '') then
			CALL gerar_paciente_grupo(cd_doenca_w,cd_pessoa_fisica_w,nm_usuario_p);
		end if;

elsif (upper(nm_tabela_p) in ('PACIENTE_MEDIC_USO',
		             'PACIENTE_ALERGIA',
					 'PACIENTE_ACESSORIO',
					 'PACIENTE_TRANSFUSAO',
					 'PACIENTE_OCORRENCIA',
					 'HISTORICO_SAUDE_TRATAMENTO',
					 'HISTORICO_SAUDE_CIRURGIA',
					 'PACIENTE_HIST_SOCIAL',
					 'PACIENTE_HABITO_VICIO',
					 'HISTORICO_SAUDE_INTERNACAO',
					 'PACIENTE_AMPUTACAO',
					 'PACIENTE_EXAME',
					 'PACIENTE_VACINA',
					 'HIST_SAUDE_RECONCILIACAO')) then
	begin
	ds_comando_w	:=	' update ' || nm_tabela_p ||
				' set dt_liberacao = sysdate ' ||
				'     ,nm_usuario = :nm_usuario '||
				'     ,nm_usuario_liberacao = :nm_usuario '||
				' where ' || nm_chave_p || ' = :qt_valor ' ||
				' and nm_usuario = :nm_usuario ' ||
				' and dt_liberacao is null ';

	CALL exec_sql_dinamico_bv(obter_desc_expressao(726973), ds_comando_w, 'qt_valor='|| to_char(qt_chave_p) || ds_sep_bv_w ||
								'nm_usuario='|| nm_usuario_p || ds_sep_bv_w);
	end;
elsif (upper(nm_tabela_p) in ('CIH_PAC_FAT_RISCO')) then
	begin
	ds_comando_w	:=	' update ' || nm_tabela_p ||
				' set dt_liberacao = sysdate ' ||
				'     ,nm_usuario = :nm_usuario '||
				'     ,nm_usuario_lib = :nm_usuario '||
				' where ' || nm_chave_p || ' = :qt_valor ' ||
				' and nm_usuario = :nm_usuario ' ||
				' and dt_liberacao is null ';

	CALL exec_sql_dinamico_bv(obter_desc_expressao(726973), ds_comando_w, 'qt_valor='|| to_char(qt_chave_p) || ds_sep_bv_w ||
								'nm_usuario='|| nm_usuario_p || ds_sep_bv_w);
	end;

elsif (upper(nm_tabela_p) in ('NOM_NASCIMENTO')) then
	begin
	ds_comando_w	:=	' update ' || nm_tabela_p ||
				' set dt_liberacao = sysdate ' ||
				'     ,nm_usuario_lib = :nm_usuario '||
				' where ' || nm_chave_p || ' = :qt_valor ' ||
				' and dt_liberacao is null ';

	CALL exec_sql_dinamico_bv(obter_desc_expressao(726973), ds_comando_w, 'qt_valor='|| to_char(qt_chave_p) || ds_sep_bv_w ||
								'nm_usuario='|| nm_usuario_p || ds_sep_bv_w);
	end;

elsif (upper(nm_tabela_p) in ('GUIA_MORTE_FETAL_NOMS')) then
	begin
	ds_comando_w	:=	' update ' || nm_tabela_p ||
				' set dt_liberacao = sysdate ' ||
				'     ,nm_usuario_lib = :nm_usuario '||
				' where ' || nm_chave_p || ' = :qt_valor ' ||
				' and dt_liberacao is null ';

	CALL exec_sql_dinamico_bv(obter_desc_expressao(726973), ds_comando_w, 'qt_valor='|| to_char(qt_chave_p) || ds_sep_bv_w ||
								'nm_usuario='|| nm_usuario_p || ds_sep_bv_w);
	end;

elsif (upper(nm_tabela_p) in ('GUIA_MORTE_NOMS')) then
	begin
	ds_comando_w	:=	' update ' || nm_tabela_p ||
				' set dt_liberacao = sysdate ' ||
				'     ,nm_usuario_lib = :nm_usuario '||
				' where ' || nm_chave_p || ' = :qt_valor ' ||
				' and dt_liberacao is null ';

	CALL exec_sql_dinamico_bv(obter_desc_expressao(726973), ds_comando_w, 'qt_valor='|| to_char(qt_chave_p) || ds_sep_bv_w ||
								'nm_usuario='|| nm_usuario_p || ds_sep_bv_w);
	end;

elsif (upper(nm_tabela_p) in ('PACIENTE_JUSTIFICATIVA')) then
	begin
		CALL liberar_justificativa(qt_chave_p, obter_pessoa_fisica_usuario(nm_usuario_p, 'C'), nm_usuario_p);
	end;
elsif (upper(nm_tabela_p) = 'ATEND_ESCALA_DMS') or (upper(nm_tabela_p) = 'ATEND_ESCALA_FOUR') then
	begin
	ds_comando_w	:=	' update ' || nm_tabela_p ||
				' set dt_liberacao = sysdate, ' ||
				' nm_usuario = :nm_usuario ' ||
				' where ' || nm_chave_p || ' = :qt_valor ';

	CALL exec_sql_dinamico_bv(obter_desc_expressao(726973), ds_comando_w, 'qt_valor='|| to_char(qt_chave_p) || ds_sep_bv_w ||
								'nm_usuario='|| nm_usuario_p || ds_sep_bv_w);
	end;
elsif (upper(nm_tabela_p) = 'ATEND_ANZICS')  then
	begin
	ds_comando_w	:=	' update ' || nm_tabela_p ||
				' set dt_liberacao = sysdate, ' ||
				' nm_usuario = :nm_usuario ' ||
				' where ' || nm_chave_p || ' = :qt_valor ';

	CALL exec_sql_dinamico_bv(obter_desc_expressao(726973), ds_comando_w, 'qt_valor='|| to_char(qt_chave_p) || ds_sep_bv_w ||
								'nm_usuario='|| nm_usuario_p || ds_sep_bv_w);
	end;
elsif (upper(nm_tabela_p) = 'ICUNSW')  then
	begin
  CALL Generate_ICUNSW_Cert_Num(qt_chave_p);
	ds_comando_w	:=	' update ' || nm_tabela_p ||
				' set dt_liberacao = sysdate, ' ||
				' nm_usuario = :nm_usuario ' ||
				' where ' || nm_chave_p || ' = :qt_valor ';
	CALL exec_sql_dinamico_bv(obter_desc_expressao(726973), ds_comando_w, 'qt_valor='|| to_char(qt_chave_p) || ds_sep_bv_w ||
								'nm_usuario='|| nm_usuario_p || ds_sep_bv_w);
	end;
elsif (upper(nm_tabela_p) = 'PROJ_PROJETO_AVAL')  then
	begin
	ds_comando_w	:=	' update ' || nm_tabela_p ||
				' set dt_liberacao = sysdate, ' ||
				' nm_usuario_lib = :nm_usuario ' ||
				' where ' || nm_chave_p || ' = :qt_valor ' ||
				' and dt_liberacao is null ';

	CALL exec_sql_dinamico_bv(obter_desc_expressao(726973), ds_comando_w, 'qt_valor='|| to_char(qt_chave_p) || ds_sep_bv_w ||
								'nm_usuario='|| nm_usuario_p || ds_sep_bv_w);
	end;
elsif (upper(nm_tabela_p) = 'PESSOA_FISICA_CONTA')  or (upper(nm_tabela_p) = 'PERTENCE_PACIENTE')  or (upper(nm_tabela_p) = 'PARTO_EVENTOS') or (upper(nm_tabela_p) = 'ATEND_PAC_DISPOSITIVO') or (upper(nm_tabela_p) = 'PARTO_PARTICIPANTE')  or (upper(nm_tabela_p) = 'PRE_NATAL') then
  begin

	ds_comando_w	:=	' update ' || nm_tabela_p ||
				' set dt_atualizacao = sysdate, ' ||
				' nm_usuario = :nm_usuario ' ||
				' where ' || nm_chave_p || ' = :qt_valor ';

	CALL exec_sql_dinamico_bv(obter_desc_expressao(726973), ds_comando_w, 'qt_valor='|| to_char(qt_chave_p) || ds_sep_bv_w ||
								'nm_usuario='|| nm_usuario_p || ds_sep_bv_w);
	end;
elsif (upper(nm_tabela_p) = 'CM_CONJUNTO_CONT') then
	begin
	
	ie_permite_lib_outro_user := Obter_Param_Usuario(872, 563, Obter_perfil_Ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_permite_lib_outro_user);
	
	if (ie_permite_lib_outro_user = 'S' AND wheb_usuario_pck.get_cd_funcao = 872) then
		ds_comando_w	:=	' update ' || nm_tabela_p ||
				' set dt_liberacao = sysdate, ' ||
				' nm_usuario = :nm_usuario ' ||
				' where ' || nm_chave_p || ' = :qt_valor ' ||
				' and dt_liberacao is null ';

		CALL exec_sql_dinamico_bv(obter_desc_expressao(726973), ds_comando_w, 'qt_valor='|| to_char(qt_chave_p) || ds_sep_bv_w ||
								'nm_usuario='|| nm_usuario_p || ds_sep_bv_w);
	else
		ds_comando_w	:=	' update ' || nm_tabela_p ||
				' set dt_liberacao = sysdate ' ||
				' where ' || nm_chave_p || ' = :qt_valor ' ||
				' and nm_usuario = :nm_usuario ' ||
				' and dt_liberacao is null ';

		CALL exec_sql_dinamico_bv(obter_desc_expressao(726973), ds_comando_w, 'qt_valor='|| to_char(qt_chave_p) || ds_sep_bv_w ||
								'nm_usuario='|| nm_usuario_p || ds_sep_bv_w);
	end if;
	end;
elsif (upper(nm_tabela_p) = 'ATENDIMENTO_PERDA_GANHO') then
  CALL liberar_ganho_perda(qt_chave_p, nm_usuario_p);
else
	begin
	ds_comando_w	:=	' update ' || nm_tabela_p ||
				' set dt_liberacao = sysdate ' ||
				' where ' || nm_chave_p || ' = :qt_valor ' ||
				' and nm_usuario = :nm_usuario ' ||
				' and dt_liberacao is null ';

	CALL exec_sql_dinamico_bv(obter_desc_expressao(726973), ds_comando_w, 'qt_valor='|| to_char(qt_chave_p) || ds_sep_bv_w ||
								'nm_usuario='|| nm_usuario_p || ds_sep_bv_w);
	end;
end if;

if (upper(nm_tabela_p) in ('ESCALA_SAPS',
				'ESCALA_BARTHEL',
				'ESCALA_KARNOFSKY',
				'ESCALA_ECOG',
				'ESCALA_CHILD_PUGH',
				'ESCALA_NRS',
				'ESCALA_APGAR',
				'ESCALA_EIF_II',
				'ESCALA_FORREST',
				'ESCALA_GOLD',
				'ESCALA_MADDREY',
				'ESCALA_NYHA',
				'ESCALA_BISHOP',
				'ESCALA_HELIOS',
				'TISS_INTERV_TERAPEUTICA_10',
				'ESCALA_CAPRINI',
				'ESCALA_PULS')) then
	begin
	ds_comando_w	:=	'Select max(nr_atendimento) ' ||
				' from ' || nm_tabela_p ||
				' where ' || nm_chave_p || ' = :qt_valor';
	nr_atendimento_w := obter_valor_dinamico_bv(ds_comando_w, 'qt_valor='||qt_chave_p, nr_atendimento_w);

	ds_comando_w	:=	'Select max(dt_avaliacao) ' ||
				' from ' || nm_tabela_p ||
				' where ' || nm_chave_p || ' = :qt_valor';
	dt_avaliacao_w := Obter_valor_Dinamico_date_bv(ds_comando_w, 'qt_valor='||qt_chave_p, dt_avaliacao_w);

	ie_escala_w := obter_item_escala(nm_tabela_p);

	CALL wl_gerar_finalizar_tarefa('S','F',nr_atendimento_w,null,nm_usuario_p,null,'S',null,null,null,null,null,null,ie_escala_w,null,null,null,null,dt_avaliacao_w,qt_chave_p);

    if (upper(nm_tabela_p) in ('ESCALA_SAPS','TISS_INTERV_TERAPEUTICA_10')) then
        ie_escala_w := obter_item_escala(nm_tabela_p);
        CALL mdc_gerar_episodio_pac_escala(nr_atendimento_w, qt_chave_p, ie_escala_w, nm_usuario_p, 'N');
    end if;

	end;
end if;

if (upper(nm_tabela_p) in ('PLANO_VERSAO')) then
	begin
	ds_comando_w	:=	' update ' || nm_tabela_p ||
				' set dt_liberacao = sysdate ' ||
				'     ,nm_usuario = :nm_usuario '||
				'     ,nm_usuario_lib = :nm_usuario '||
				' where ' || nm_chave_p || ' = :qt_valor ' ||
				' and nm_usuario = :nm_usuario ' ||
				' and dt_liberacao is null ';

	CALL gerar_medic_uso(qt_chave_p, null);

	CALL exec_sql_dinamico_bv(obter_desc_expressao(726973), ds_comando_w, 'qt_valor='|| to_char(qt_chave_p) || ds_sep_bv_w ||
								'nm_usuario='|| nm_usuario_p || ds_sep_bv_w);
	end;
end if;

commit;

if (upper(nm_tabela_p) = 'AVAL_NUTRICAO') then
	begin
  	ie_gerar_vs_nut_asmnt := Obter_Param_Usuario(281, 1545, Obter_perfil_Ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_gerar_vs_nut_asmnt);
    	if (ie_gerar_vs_nut_asmnt = 'S') then
        	select	max(cd_profissional)
           	 into STRICT cd_profissional_w
            	from	aval_nutricao
            	where	nr_sequencia = qt_chave_p;
        	CALL INSERT_VITAL_SIGN_NUT_ASMNT(qt_chave_p,nr_atendimento_w,nm_usuario_p,cd_profissional_w);
    	end if;
  	end;
end if;

select count(1)
  into STRICT ie_gerar_aprovacao_w 
  from mult_aprov_funcao
 where ie_situacao = 'A'
 and cd_funcao = wheb_usuario_pck.get_cd_funcao;

if (ie_gerar_aprovacao_w > 0) then
	CALL gerar_aprovacao_documento(nm_tabela_p, nm_chave_p,qt_chave_p, nm_usuario_p);
end if;  	

commit;

if (upper(nm_tabela_p) = 'COM_CLIENTE_HIST') then

	CALL Des_Liberar_Historico_Projeto(qt_chave_p ,nm_usuario_p);

end if;

if((upper(nm_tabela_p) = 'ATEND_SUMARIO_ALTA') and (pkg_i18n.get_user_locale = 'ja_JP')) then
	
    CALL submit_discharge_summary(qt_chave_p ,nm_usuario_p);

end if;

if (upper(nm_tabela_p) = 'GPI_INFORMACAO') then
	begin
	update gpi_informacao
	set nm_usuario_lib = nm_usuario_p
	where nr_sequencia = qt_chave_p;

	commit;
	end;
end if;

if ie_gera_prot_assistencial then
    CALL gera_protocolo_assistencial(nr_atendimento_w, nm_usuario_p);
end if;

if (upper(nm_tabela_p) = 'AUTORIZACAO_CONVENIO_COMPL') then
	begin
	update	AUTORIZACAO_CONVENIO_COMPL
	set	dt_liberacao = clock_timestamp(),
	nm_usuario_lib = nm_usuario_p
	where	nr_sequencia = qt_chave_p;
	end;
end if;

if (upper(nm_tabela_p) in ('MED_PROTOCOLO_EXAME', 'MED_PROTOCOLO_RECEITA')) then
  CALL GERAR_VERSAO_ALTERACAO(nm_tabela_p, 'L', qt_chave_p, nm_usuario_p);
end if;

----------Patient Journey Automatization
if ( nm_tabela_p = 'QUA_EVENTO_PACIENTE' ) then
  select coalesce(max(NR_SEQ_EVENTO), 0), coalesce(max(CD_PESSOA_FISICA), 0)
  into STRICT nr_seq_ev_linha_cuidado_w, cd_pessoa_fisica_w
  from QUA_EVENTO_PACIENTE
  where nr_sequencia = qt_chave_p;

  CALL ATUALIZAR_EV_LINHA_CUIDADO('ET', nm_tabela_p, qt_chave_p, nr_seq_ev_linha_cuidado_w,cd_pessoa_fisica_w, nm_usuario_p);

elsif ( nm_tabela_p = 'CUR_CURATIVO' or nm_tabela_p = 'CUR_CURATIVO_ESP') then

  if ( nm_tabela_p = 'CUR_CURATIVO' ) then
    select max(nr_seq_ferida)
    into STRICT nr_seq_ferida_w
    from CUR_CURATIVO
    where nr_sequencia = qt_chave_p;
  else
    select max(nr_seq_ferida)
    into STRICT nr_seq_ferida_w
    from CUR_CURATIVO_ESP
    where nr_sequencia = qt_chave_p;

  end if;

  select max(cd_pessoa_fisica)
  into STRICT cd_pessoa_fisica_w
  from CUR_FERIDA
  where nr_sequencia = nr_seq_ferida_w;

  CALL ATUALIZAR_EV_LINHA_CUIDADO('FC', nm_tabela_p, qt_chave_p, qt_chave_p, cd_pessoa_fisica_w, nm_usuario_p);

elsif ( nm_tabela_p = 'LISTA_PROBLEMA_PAC' ) then

  select coalesce(max(CD_PESSOA_FISICA), 0)
  into STRICT cd_pessoa_fisica_w
  from LISTA_PROBLEMA_PAC
  where nr_sequencia = qt_chave_p;

  CALL ATUALIZAR_EV_LINHA_CUIDADO('LI', nm_tabela_p, qt_chave_p, qt_chave_p, cd_pessoa_fisica_w, nm_usuario_p);

elsif ( nm_tabela_p = 'CAN_LOCO_REGIONAL' ) then

  select coalesce(max(CD_PESSOA_FISICA), 0), max(ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(DT_AVALIACAO))
  into STRICT cd_pessoa_fisica_w, dt_aval_linha_cuidado_w
  from CAN_LOCO_REGIONAL
  where nr_sequencia = qt_chave_p;


  CALL ATUALIZAR_EV_LINHA_CUIDADO('LR', nm_tabela_p, qt_chave_p, to_char(dt_aval_linha_cuidado_w, 'dd/mm/yyyy'), cd_pessoa_fisica_w, nm_usuario_p);

elsif ( nm_tabela_p = 'ATEND_PROGRAMA_SAUDE' ) then

  select coalesce(max(CD_PESSOA_FISICA), 0), coalesce(max(NR_SEQ_PROGRAMA_SAUDE), 0)
  into STRICT cd_pessoa_fisica_w, nr_seq_programa_saude_w
  from ATEND_PROGRAMA_SAUDE
  where nr_sequencia = qt_chave_p;


  CALL ATUALIZAR_EV_LINHA_CUIDADO('PS', nm_tabela_p, qt_chave_p, nr_seq_programa_saude_w, cd_pessoa_fisica_w, nm_usuario_p);

elsif ( nm_tabela_p = 'ATENDIMENTO_SINAL_VITAL' ) then

  select coalesce(max(CD_PACIENTE), 0), coalesce(max(DT_SINAL_VITAL), clock_timestamp())
  into STRICT cd_pessoa_fisica_w, dt_real_w
  from ATENDIMENTO_SINAL_VITAL
  where nr_sequencia = qt_chave_p;

  CALL ATUALIZAR_EV_LINHA_CUIDADO('SV', nm_tabela_p, qt_chave_p, 'dt_real_w='||to_char(dt_real_w, 'dd/mm/yyyy hh24:mi:ss')||';', cd_pessoa_fisica_w, nm_usuario_p);

elsif ( nm_tabela_p = 'PEDIDO_EXAME_EXTERNO' ) then

  select coalesce(max(CD_PESSOA_FISICA), 0), coalesce(max(DT_SOLICITACAO), clock_timestamp())
  into STRICT cd_pessoa_fisica_w, dt_real_w
  from PEDIDO_EXAME_EXTERNO
  where nr_sequencia = qt_chave_p;

  CALL ATUALIZAR_EV_LINHA_CUIDADO('SE', nm_tabela_p, qt_chave_p, 'dt_real_w='||to_char(dt_real_w, 'dd/mm/yyyy hh24:mi:ss')||';', cd_pessoa_fisica_w, nm_usuario_p);

elsif ( nm_tabela_p = 'PACIENTE_VACINA' ) then

  select coalesce(max(CD_PESSOA_FISICA), 0), coalesce(max(NR_SEQ_VACINA), 0), coalesce(max(IE_DOSE), 0)
  into STRICT cd_pessoa_fisica_w, nr_seq_vacina_w, ie_dose_w
  from PACIENTE_VACINA
  where nr_sequencia = qt_chave_p;

  CALL ATUALIZAR_EV_LINHA_CUIDADO('VA', nm_tabela_p, qt_chave_p, 'nr_seq_vacina_w='||nr_seq_vacina_w||';ie_dose_w='||ie_dose_w||';', cd_pessoa_fisica_w, nm_usuario_p);

elsif ( nm_tabela_p = 'MED_RECEITA' or nm_tabela_p = 'FA_RECEITA_FARMACIA' ) then

  if ( nm_tabela_p = 'MED_RECEITA' ) then
    select coalesce(max(CD_PESSOA_FISICA), 0)
    into STRICT cd_pessoa_fisica_w
    from MED_RECEITA
    where nr_sequencia = qt_chave_p;
  elsif ( nm_tabela_p = 'FA_RECEITA_FARMACIA' ) then
    select coalesce(max(CD_PESSOA_FISICA), 0)
    into STRICT cd_pessoa_fisica_w
    from FA_RECEITA_FARMACIA
    where nr_sequencia = qt_chave_p;
  end if;

  CALL ATUALIZAR_EV_LINHA_CUIDADO('RA', nm_tabela_p, qt_chave_p, qt_chave_p, cd_pessoa_fisica_w, nm_usuario_p);

else

  	open C09;
	loop
	fetch C09 into
		ie_escala_indice_w;
	EXIT WHEN NOT FOUND; /* apply on C09 */
		begin
			lista_escalas_w := lista_escalas_w || ie_escala_indice_w || ',';
		exception
		when others then
		null;
		end;
	end loop;
	close C09;

  if (ie_escala_indice_w IS NOT NULL AND ie_escala_indice_w::text <> '') then

    if ( nm_tabela_p = 'ESCALA_EIF' ) then

      select NR_SEQ_ESCALA
      into STRICT  ie_score_flex_w
      from ESCALA_EIF
      where nr_sequencia = qt_chave_p;

    elsif ( nm_tabela_p = 'ESCALA_EIF_II' ) then

      select NR_SEQ_ESCALA
      into STRICT  ie_score_flex_ii_w
      from ESCALA_EIF_II
      where nr_sequencia = qt_chave_p;

    end if;

    select coalesce(max('S'), 'N')
    into STRICT ie_tem_campo_w
    from tabela_atributo
    where nm_tabela = nm_tabela_p
    and nm_atributo = 'NR_ATENDIMENTO';

    if ( ie_tem_campo_w = 'S' ) then
      ds_comando_w := 'select obter_pessoa_atendimento(nr_atendimento, ''C'') ';

    else
      select coalesce(max('S'), 'N')
      into STRICT ie_tem_campo_w
      from tabela_atributo
      where nm_tabela = nm_tabela_p
      and nm_atributo = 'CD_PACIENTE';

      if ( ie_tem_campo_w = 'S' ) then
        ds_comando_w := 'select CD_PACIENTE ';
      else
        select coalesce(max('S'), 'N')
        into STRICT ie_tem_campo_w
        from tabela_atributo
        where nm_tabela = nm_tabela_p
        and nm_atributo = 'CD_PESSOA_FISICA';

        if ( ie_tem_campo_w = 'S' ) then
        ds_comando_w := 'select CD_PESSOA_FISICA ';

        end if;
      end if;
    end if;

    if ( ie_tem_campo_w = 'S' ) then
        ds_comando_w := ds_comando_w ||
        ' from ' || nm_tabela_p ||
        ' where ' || nm_chave_p || ' = :qt_valor';
      cd_pessoa_fisica_w := obter_valor_dinamico_bv(ds_comando_w, 'qt_valor='||qt_chave_p, cd_pessoa_fisica_w);
	
      CALL ATUALIZAR_EV_LINHA_CUIDADO('EI', nm_tabela_p, qt_chave_p,
        'nr_seq_escala_w='|| substr(lista_escalas_w, 1, LENGTH(lista_escalas_w) - 1) ||';nr_seq_score_flex_w='|| coalesce(ie_score_flex_w, 0) ||';nr_seq_score_flex_ii_w='|| coalesce(ie_score_flex_ii_w, 0) ||';', 
        cd_pessoa_fisica_w, nm_usuario_p);
    end if;

  end if;

end if;
----------/Patient Journey Automatization
if (upper(nm_tabela_p) = 'MED_TREATMENT_PLAN') then
	begin
     ie_gerar_evolucao_med_trtmnt_w := obter_param_usuario(281, 1634, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, coalesce(wheb_usuario_pck.get_cd_estabelecimento, 1), ie_gerar_evolucao_med_trtmnt_w);
     if ( ie_gerar_evolucao_med_trtmnt_w = 'S' ) then
           select	max(nr_atendimento), max(si_type_form)
            into STRICT	nr_atendimento_w , ie_form_type_w
            from	med_treatment_plan a
            where	nr_sequencia	= qt_chave_p;

            if (ie_form_type_w ='1' or  ie_form_type_w='2' or ie_form_type_w='3' or ie_form_type_w ='4') then
            cd_evolucao_w := clinical_notes_pck.gerar_soap(nr_atendimento_w, qt_chave_p, 'IP_MED_TP', NULL, 'P', 1, cd_evolucao_w);
            else
            cd_evolucao_w := clinical_notes_pck.gerar_soap(nr_atendimento_w, qt_chave_p, 'PD_MED_TP', NULL, 'P', 1, cd_evolucao_w);
            end if;
            update med_treatment_plan
            set cd_evolucao = cd_evolucao_w
            where nr_sequencia = qt_chave_p;

        end if;
	end;
end if;

if (upper(nm_tabela_p) = 'ATENDIMENTO_ALTA') then
	begin
     ie_gerar_evolucao_disch_instr := obter_param_usuario(281, 1637, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, coalesce(wheb_usuario_pck.get_cd_estabelecimento, 1), ie_gerar_evolucao_disch_instr);
     if ( ie_gerar_evolucao_disch_instr = 'S' ) then
           select	nr_atendimento
            into STRICT	nr_atendimento_w
            from	atendimento_alta a
            where	nr_sequencia	= qt_chave_p;

            cd_evolucao_w := clinical_notes_pck.gerar_soap(nr_atendimento_w, qt_chave_p, 'DSCHRG_INSTR', null, 'P', 1, cd_evolucao_w);

            update atendimento_alta
            set cd_evolucao = cd_evolucao_w
            where nr_sequencia = qt_chave_p;

        end if;
	end;
end if;

if (upper(nm_tabela_p) = 'PARECER_MEDICO') then
	begin
     ie_gerar_evol_in_ref_ww := obter_param_usuario(281, 1641, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, coalesce(wheb_usuario_pck.get_cd_estabelecimento, 1), ie_gerar_evol_in_ref_ww);
     if ( ie_gerar_evol_in_ref_ww = 'S' ) then
            select	a.nr_atendimento
            into STRICT	nr_atendimento_w
            from	PARECER_MEDICO_REQ a,PARECER_MEDICO b
            where	b.NR_SEQ_INTERNO	= qt_chave_p
            and a.NR_PARECER=b.NR_PARECER;
            cd_evolucao_w := clinical_notes_pck.gerar_soap(nr_atendimento_w, qt_chave_p, 'INTERNAL_REF', null, 'P', 1, cd_evolucao_w, 'R');
            update PARECER_MEDICO
            set cd_evolucao = cd_evolucao_w
            where NR_SEQ_INTERNO = qt_chave_p;

        end if;
	end;
end if;
if (upper(nm_tabela_p) = 'RL_REF_FROM_HOSPITAL') then
	begin
     ie_gerar_evol_ext_ref_w := obter_param_usuario(281, 1649, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_gerar_evol_ext_ref_w);
     if ( ie_gerar_evol_ext_ref_w = 'S' ) then
            select	nr_atendimento
            into STRICT	nr_atendimento_w
            from	rl_ref_from_hospital
            where	nr_sequencia	= qt_chave_p;
            cd_evolucao_w := clinical_notes_pck.gerar_soap(nr_atendimento_w, qt_chave_p, 'EXT_REFERRAL', '2', 'P', 1, cd_evolucao_w);
            update rl_ref_from_hospital
            set cd_evolucao = cd_evolucao_w
            where nr_sequencia = qt_chave_p;
        end if;
	end;
end if;
if (upper(nm_tabela_p) = 'RL_REP_TO_HOSPITAL') then
	begin
    ie_gerar_evol_ext_ref_w := obter_param_usuario(281, 1649, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_gerar_evol_ext_ref_w);
        if ( ie_gerar_evol_ext_ref_w = 'S' ) then
        select	nr_atendimento
        into STRICT	nr_atendimento_w
        from	rl_rep_to_hospital
        where	nr_sequencia	= qt_chave_p;
        cd_evolucao_w := clinical_notes_pck.gerar_soap(nr_atendimento_w, qt_chave_p, 'EXT_REFERRAL', '3', 'P', 1, cd_evolucao_w);
        update rl_rep_to_hospital
        set cd_evolucao = cd_evolucao_w
        where nr_sequencia = qt_chave_p;
        end if;
	end;
end if;
if (upper(nm_tabela_p) = 'RL_REF_TO_HOSPITAL') then
	begin
        ie_gerar_evol_ext_ref_w := obter_param_usuario(281, 1649, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_gerar_evol_ext_ref_w);
         if ( ie_gerar_evol_ext_ref_w = 'S' ) then
                select	nr_atendimento
                into STRICT	nr_atendimento_w
                from	rl_ref_to_hospital
                where	nr_sequencia	= qt_chave_p;
                cd_evolucao_w := clinical_notes_pck.gerar_soap(nr_atendimento_w, qt_chave_p, 'EXT_REFERRAL', '1', 'P', 1, cd_evolucao_w);
                update rl_ref_to_hospital
                set cd_evolucao = cd_evolucao_w
                where nr_sequencia = qt_chave_p;
            end if;
	end;
end if;
if (upper(nm_tabela_p) = 'RL_REP_FROM_HOSPITAL') then
	begin
        ie_gerar_evol_ext_ref_w := obter_param_usuario(281, 1649, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_gerar_evol_ext_ref_w);
         if ( ie_gerar_evol_ext_ref_w = 'S' ) then
            select	nr_atendimento
            into STRICT	nr_atendimento_w
            from	rl_rep_from_hospital
            where	nr_sequencia	= qt_chave_p;
            cd_evolucao_w := clinical_notes_pck.gerar_soap(nr_atendimento_w, qt_chave_p, 'EXT_REFERRAL', '4', 'P', 1, cd_evolucao_w);
            update rl_rep_from_hospital
            set cd_evolucao = cd_evolucao_w
            where nr_sequencia = qt_chave_p;
        end if;
	end;
end if;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE liberar_informacao (nm_tabela_p text, nm_chave_p text, qt_chave_p bigint, nm_usuario_p text) FROM PUBLIC;

