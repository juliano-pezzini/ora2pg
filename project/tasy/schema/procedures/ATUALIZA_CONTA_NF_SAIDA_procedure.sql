-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualiza_conta_nf_saida ( nr_sequencia_p bigint, ie_sobrepor_p text) AS $body$
DECLARE


cd_estabelecimento_w	integer;
cd_material_w		integer;
cd_centro_custo_w		integer;
cd_centro_custo_ww	integer;
cd_conta_contabil_w	varchar(20);
cd_local_estoque_w	integer;
nr_sequencia_w		bigint;
nr_item_nf_w		integer;
ie_tipo_conta_w		smallint;
cd_procedimento_w	bigint;
ie_origem_proced_w	bigint;
dt_entrada_saida_w	timestamp;
nr_seq_proc_interno_w	nota_fiscal_item.nr_seq_proc_interno%type;
cd_sequencia_parametro_w nota_fiscal_item.cd_sequencia_parametro%type;

C01 CURSOR FOR
SELECT	a.cd_estabelecimento,
	b.nr_sequencia,
	b.nr_item_nf,
	b.cd_conta_contabil,
	b.cd_centro_custo,
	b.cd_local_estoque,
	b.cd_material,
	b.cd_procedimento,
	b.ie_origem_proced,
	a.dt_entrada_saida,
	b.nr_seq_proc_interno
from 	operacao_nota c,
	nota_fiscal_item b,
	nota_fiscal a
where	a.nr_sequencia	= nr_sequencia_p
and	a.nr_sequencia	= b.nr_sequencia
and	a.cd_operacao_nf	= c.cd_operacao_nf
and	c.ie_operacao_fiscal	= 'S'
and	((coalesce(b.cd_conta_contabil::text, '') = '') or (ie_sobrepor_p = 'S'));


BEGIN

OPEN C01;
LOOP
FETCH C01 into	
	cd_estabelecimento_w,
	nr_sequencia_w,
	nr_item_nf_w,
	cd_conta_contabil_w,
	cd_centro_custo_w,
	cd_local_estoque_w,
	cd_material_w,
	cd_procedimento_w,
	ie_origem_proced_w,
	dt_entrada_saida_w,
	nr_seq_proc_interno_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	ie_tipo_conta_w		:= 1; ---- Receita
	cd_sequencia_parametro_w := null;
	if (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') then
		SELECT * FROM define_conta_procedimento(
			cd_estabelecimento_w, cd_procedimento_w, ie_origem_proced_w, ie_tipo_conta_w, null, null, null, null, null, null, null, dt_entrada_saida_w, cd_conta_contabil_w, cd_centro_custo_w, null, 'N', null, null, null, null, null, null, null, nr_seq_proc_interno_w) INTO STRICT cd_conta_contabil_w, cd_centro_custo_w;		
		cd_sequencia_parametro_w := philips_contabil_pck.get_parametro_conta_contabil();
	else
		SELECT * FROM define_conta_material(
			cd_estabelecimento_w, cd_material_w, ie_tipo_conta_w, null, 0, null, 0, 0, 0, 0, cd_local_estoque_w, Null, dt_entrada_saida_w, cd_conta_contabil_w, cd_centro_custo_w, '') INTO STRICT cd_conta_contabil_w, cd_centro_custo_w;
		cd_sequencia_parametro_w := philips_contabil_pck.get_parametro_conta_contabil();
	end if;

	if (cd_conta_contabil_w IS NOT NULL AND cd_conta_contabil_w::text <> '') then
		select	cd_centro_custo
		into STRICT	cd_centro_custo_ww
		from	conta_contabil
		where	cd_conta_contabil	= cd_conta_contabil_w;
		cd_centro_custo_w		:= coalesce(cd_centro_custo_w, cd_centro_custo_ww);
		update	nota_fiscal_item
		set 	cd_conta_contabil	= cd_conta_contabil_w,
			cd_centro_custo	= cd_centro_custo_w,
			dt_atualizacao	= clock_timestamp(),
			cd_sequencia_parametro = cd_sequencia_parametro_w
		where	nr_sequencia		= nr_sequencia_w
		and	nr_item_nf		= nr_item_nf;
	end if;
	end;
END LOOP;
close c01;
commit;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualiza_conta_nf_saida ( nr_sequencia_p bigint, ie_sobrepor_p text) FROM PUBLIC;

