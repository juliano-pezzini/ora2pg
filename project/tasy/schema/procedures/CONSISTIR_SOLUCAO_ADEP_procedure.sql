-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consistir_solucao_adep (ie_tipo_solucao_p bigint, nr_prescricao_p bigint, nr_seq_solucao_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_etapas_sol_w		smallint;
nr_etapas_atual_w		smallint;
ie_acm_w		varchar(1);
ie_sn_w			prescr_material.ie_se_necessario%type;
qt_pool_w		smallint;
cd_estabelecimento_w	smallint;
ie_consiste_sne_w		varchar(1);
qt_cont_w		smallint;
ie_estender_etapa_w	varchar(1);
cd_intervalo_w		varchar(7);
qt_etapas_reg_w		integer;
cd_funcao_origem_w	prescr_medica.cd_funcao_origem%type;
ie_continua_instavel_w	prescr_solucao.cd_intervalo%type;
ie_solucoes_separadas_w	varchar(1);


BEGIN
if (ie_tipo_solucao_p IS NOT NULL AND ie_tipo_solucao_p::text <> '') and (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') and (nr_seq_solucao_p IS NOT NULL AND nr_seq_solucao_p::text <> '') then
	if (ie_tipo_solucao_p = 1) then -- solucoes
		select	CASE WHEN coalesce(a.IE_ETAPA_ESPECIAL,'N')='N' THEN  a.nr_etapas  ELSE a.nr_etapas+1 END ,
			obter_etapas_adep_sol(ie_tipo_solucao_p,nr_prescricao_p,nr_seq_solucao_p),
			coalesce(a.ie_acm,'N'),
			coalesce(a.ie_estender_etapa,'N'),
			a.cd_intervalo,
			b.cd_funcao_origem
		into STRICT	nr_etapas_sol_w,
			nr_etapas_atual_w,
			ie_acm_w,
			ie_estender_etapa_w,
			cd_intervalo_w,
			cd_funcao_origem_w
		from	prescr_solucao a,
				prescr_medica b
		where	a.nr_prescricao = b.nr_prescricao
		and		a.nr_prescricao = nr_prescricao_p
		and		a.nr_seq_solucao = nr_seq_solucao_p;

		ie_continua_instavel_w := obter_param_usuario(1113, 675, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_continua_instavel_w);
		ie_solucoes_separadas_w := obter_param_usuario(1113, 718, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_solucoes_separadas_w);
		
		if (cd_funcao_origem_w = 2314) and
			((nr_etapas_sol_w = 1 and
				ie_acm_w = 'S' and
				upper(ie_continua_instavel_w) = upper(cd_intervalo_w)) or (ie_acm_w = 'N' and
				coalesce(ie_solucoes_separadas_w, 'S') = 'N')) then
				nr_etapas_sol_w := null;
		end if;
		
		if	((ie_acm_w = 'N') or
			 (ie_acm_w = 'S' AND nr_etapas_sol_w IS NOT NULL AND nr_etapas_sol_w::text <> '')) and /* Cfe Marcus em 20/6/8 */
			(nr_etapas_sol_w IS NOT NULL AND nr_etapas_sol_w::text <> '') and (nr_etapas_atual_w IS NOT NULL AND nr_etapas_atual_w::text <> '') and (nr_etapas_atual_w + 1 > nr_etapas_sol_w) and
			((ie_estender_etapa_w = 'N') or
			 ((ie_estender_etapa_w = 'S') and (nr_etapas_atual_w >= obter_qt_etapas_validade(nr_prescricao_p, nr_seq_solucao_p)))) then			
			/*ATENcaO: Esta solucao eh composta por ' || to_char(nr_etapas_sol_w) || ' etapas.' || chr(10) ||
			'Ja foram realizadas todas as trocas de frascos (' || to_char(nr_etapas_sol_w - 1) || ') previstas para a '|| chr(10) ||'  mesma, favor verificar!*/
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(261383,'ETAPAS='||to_char(nr_etapas_sol_w) || ';' || 'ETAPAS2=' || to_char(nr_etapas_sol_w - 1));
		end if;
	elsif (ie_tipo_solucao_p = 2) then --Suporte nutricional
		select	obter_etapas_adep_sol(ie_tipo_solucao_p,nr_prescricao_p,nr_seq_solucao_p),
			b.cd_estabelecimento,
			coalesce(a.ie_acm,'N'),
			coalesce(a.ie_se_necessario, 'N'),
			a.cd_intervalo
		into STRICT	nr_etapas_atual_w,
			cd_estabelecimento_w,
			ie_acm_w,
			ie_sn_w,
			cd_intervalo_w
		from	prescr_material a,
			prescr_medica b
		where	a.nr_prescricao = b.nr_prescricao
		and	a.nr_prescricao = nr_prescricao_p
		and	a.nr_sequencia = nr_seq_solucao_p;
		
		select	count(*)
		into STRICT	nr_etapas_sol_w
		from	prescr_mat_hor	a
		where 	a.nr_prescricao = nr_prescricao_p
		and		a.nr_seq_material = nr_seq_solucao_p
		and		coalesce(a.ie_horario_especial,'N') <> 'S'
		and		a.ie_agrupador = 8;

		ie_consiste_sne_w := obter_param_usuario(924, 401, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_consiste_sne_w);

		if (coalesce(ie_consiste_sne_w,'N') = 'S') then
			begin
			select	count(*)
			into STRICT	qt_cont_w
			from	prescr_medica
			where	nr_prescricao = nr_prescricao_p
			and	dt_validade_prescr > clock_timestamp();

			if (qt_cont_w = 0) then
				--Nao eh possivel realizar a troca de frascos. A validade da prescricao esta vencida!
				CALL Wheb_mensagem_pck.exibir_mensagem_abort(261390);
			end if;

			end;
		else
			begin
			if 	((ie_acm_w = 'N') or
				(ie_acm_w = 'S' AND nr_etapas_sol_w IS NOT NULL AND nr_etapas_sol_w::text <> '')) and (coalesce(nr_etapas_sol_w,0) > 0) and (coalesce(nr_etapas_atual_w,0) > 0) and (nr_etapas_atual_w + 1 > nr_etapas_sol_w) then
				/*ATENcaO: Esta solucao eh composta por ' || to_char(nr_etapas_sol_w) || ' etapas.' || chr(10) ||
									'Ja foram realizadas todas as trocas de frascos (' || to_char(nr_etapas_sol_w - 1) || ') previstas para a   mesma, favor verificar!#@#@');*/
				CALL Wheb_mensagem_pck.exibir_mensagem_abort(261383,'ETAPAS='||to_char(nr_etapas_sol_w) || ';' || 'ETAPAS2=' || to_char(nr_etapas_sol_w - 1));
			end if;
			end;
		end if;

	elsif (ie_tipo_solucao_p = 3) then -- hemocomponentes
		select	coalesce(CASE WHEN obter_ocorrencias_horarios_rep(ds_horarios)=0 THEN 1 END ,obter_ocorrencias_horarios_rep(ds_horarios)) * coalesce(qt_procedimento,1),
				OBTER_ETAPA_ATUAL_PROC(nr_prescricao_p,nr_seq_solucao_p) + coalesce(nr_etapas_suspensa,0),			
				qt_etapa
		into STRICT	nr_etapas_sol_w,
				nr_etapas_atual_w,
				qt_pool_w
		from	prescr_procedimento
		where	nr_prescricao = nr_prescricao_p
		and		nr_sequencia = nr_seq_solucao_p
		and		(nr_seq_solic_sangue IS NOT NULL AND nr_seq_solic_sangue::text <> '');
		
		select 	count(1)
		into STRICT	qt_etapas_reg_w
		from	prescr_proc_bolsa a
		where	nr_prescricao = nr_prescricao_p
		and		nr_seq_procedimento = nr_seq_solucao_p
		and		coalesce(dt_cancelamento::text, '') = ''
		and		not exists (	SELECT	1
						from	prescr_proc_hor b
						where	b.nr_prescricao = a.nr_prescricao
						and		b.nr_seq_procedimento = a.nr_seq_procedimento
						and		b.nr_sequencia = a.nr_seq_horario
						and		(dt_suspensao IS NOT NULL AND dt_suspensao::text <> ''));
		
		if (qt_etapas_reg_w > nr_etapas_sol_w) then
			nr_etapas_sol_w	:= qt_etapas_reg_w;
		end if;
		
		

		if (nr_etapas_sol_w IS NOT NULL AND nr_etapas_sol_w::text <> '') and (nr_etapas_atual_w IS NOT NULL AND nr_etapas_atual_w::text <> '') and (coalesce(qt_pool_w::text, '') = '') and (nr_etapas_atual_w + 1 > nr_etapas_sol_w) then
			/*(ATENcaO: Esta solucao eh composta por ' || to_char(nr_etapas_sol_w) || ' etapas.' || chr(10) ||
							'Ja foram realizadas todas as trocas de frascos (' || to_char(nr_etapas_sol_w - 1) || ') previstas para a  mesma, favor verificar!*/
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(261383,'ETAPAS='||to_char(nr_etapas_sol_w) || ';' || 'ETAPAS2=' || to_char(nr_etapas_sol_w - 1));
		elsif (nr_etapas_sol_w IS NOT NULL AND nr_etapas_sol_w::text <> '') and (nr_etapas_atual_w IS NOT NULL AND nr_etapas_atual_w::text <> '') and (qt_pool_w IS NOT NULL AND qt_pool_w::text <> '') and (nr_etapas_atual_w + 1 > qt_pool_w) then
			/*ATENcaO: Esta solucao eh composta por ' || to_char(qt_pool_w) || ' pool.' || chr(10) ||
							'Ja foram realizadas todas as trocas de frascos (' || to_char(qt_pool_w - 1) || ') previstas para o mesmo, favor verificar!*/
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(261383,'ETAPAS='||to_char(qt_pool_w) || ';' || 'ETAPAS2=' || to_char(qt_pool_w - 1));
		end if;
	elsif (ie_tipo_solucao_p = 4) then -- npt adulta
		select	qt_fase_npt,
			obter_etapas_adep_sol(ie_tipo_solucao_p,nr_prescricao_p,nr_seq_solucao_p)
		into STRICT	nr_etapas_sol_w,
			nr_etapas_atual_w
		from	nut_paciente
		where	nr_prescricao = nr_prescricao_p
		and	nr_sequencia = nr_seq_solucao_p;

		if (nr_etapas_sol_w IS NOT NULL AND nr_etapas_sol_w::text <> '') and (nr_etapas_atual_w IS NOT NULL AND nr_etapas_atual_w::text <> '') and (nr_etapas_atual_w + 1 > nr_etapas_sol_w) then
			/*ATENcaO: Esta solucao eh composta por ' || to_char(nr_etapas_sol_w) || ' etapas.' || chr(10) ||
								'Ja foram realizadas todas as trocas de frascos (' || to_char(nr_etapas_sol_w - 1) || ') previstas para a   mesma, favor verificar!*/
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(261383,'ETAPAS='||to_char(nr_etapas_sol_w) || ';' || 'ETAPAS2=' || to_char(nr_etapas_sol_w - 1));
		end if;


	elsif (ie_tipo_solucao_p = 5) then -- npt neonatal
		select	qt_fase_npt,
			obter_etapas_adep_sol(ie_tipo_solucao_p,nr_prescricao_p,nr_seq_solucao_p)
		into STRICT	nr_etapas_sol_w,
			nr_etapas_atual_w
		from	nut_pac
		where	nr_prescricao = nr_prescricao_p
		and	nr_sequencia = nr_seq_solucao_p;

		if (nr_etapas_sol_w IS NOT NULL AND nr_etapas_sol_w::text <> '') and (nr_etapas_atual_w IS NOT NULL AND nr_etapas_atual_w::text <> '') and (nr_etapas_atual_w + 1 > nr_etapas_sol_w) then
			/*ATENcaO: Esta solucao eh composta por ' || to_char(nr_etapas_sol_w) || ' etapas.' || chr(10) ||
							'Ja foram realizadas todas as trocas de frascos (' || to_char(nr_etapas_sol_w - 1) || ') previstas para a   mesma, favor verificar!*/
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(261383,'ETAPAS='||to_char(nr_etapas_sol_w) || ';' || 'ETAPAS2=' || to_char(nr_etapas_sol_w - 1));
		end if;
	end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consistir_solucao_adep (ie_tipo_solucao_p bigint, nr_prescricao_p bigint, nr_seq_solucao_p bigint, nm_usuario_p text) FROM PUBLIC;

