-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE copia_prescricao_eup ( nr_prescricao_p bigint, nr_atendimento_p bigint, nm_usuario_p text ) AS $body$
DECLARE


ie_relancar_assoc_proc_w		varchar(1);
VarGerarNiveisGlic_w			varchar(1);
VarIe_Controla_Adm_w			varchar(1);
cd_prescritor_w					usuario.cd_pessoa_fisica%type;
ie_origem_inf_w					varchar(1);
nr_prescricao_w					prescr_medica.nr_prescricao%type;
dt_prev_execucao_w				prescr_procedimento.dt_prev_execucao%type;
nr_sequencia_w					prescr_procedimento.nr_sequencia%type;
cont_peca_w						bigint;
ie_administrar_proc_w			varchar(1);
cd_procedimento_w				prescr_procedimento.cd_procedimento%type;
ie_origem_proced_w				prescr_procedimento.ie_origem_proced%type;
ie_operacao_int_proc_w			intervalo_prescricao.ie_operacao%type;
ie_24_h_proc_w					intervalo_prescricao.ie_24_h%type;
qt_ocorrencia_int_proc_w		intervalo_prescricao.qt_operacao%type;
dt_proxima_dose_proc_w			prescr_procedimento.dt_proxima_dose%type;
ds_horarios_w					prescr_procedimento.ds_horarios%type;

C01 CURSOR FOR
SELECT 	a.*
from 	prescr_procedimento a
where 	a.nr_prescricao = nr_prescricao_p;

BEGIN

ie_relancar_assoc_proc_w := wheb_assist_pck.obterValorParametroREP(603, ie_relancar_assoc_proc_w);
VarGerarNiveisGlic_w := wheb_assist_pck.obterValorParametroREP(1124, VarGerarNiveisGlic_w);
VarIe_Controla_Adm_w := wheb_assist_pck.obterValorParametroREP(1078, VarIe_Controla_Adm_w);

begin
	select	cd_pessoa_fisica
	into STRICT	cd_prescritor_w
	from	usuario
	where	nm_usuario = nm_usuario_p;
exception
when others then
	cd_prescritor_w	:= null;
end;

select	coalesce(max('1'),'3')
into STRICT	ie_origem_inf_w
from	medico b,
		usuario a
where 	a.cd_pessoa_fisica	= b.cd_pessoa_fisica
and		a.nm_usuario		= nm_usuario_p
and		b.ie_situacao		= 'A';

select	nextval('prescr_medica_seq')
into STRICT  	nr_prescricao_w
;

insert into prescr_medica(
		nr_prescricao,
		cd_pessoa_fisica,
		nr_atendimento,
		cd_medico,
		dt_prescricao,
		dt_atualizacao,
		nm_usuario,
		nm_usuario_original,
		ds_observacao,
		nr_horas_validade,
		cd_motivo_baixa,
		dt_baixa,
		dt_primeiro_horario,
		dt_liberacao,
		dt_emissao_setor,
		dt_emissao_farmacia,
		cd_setor_atendimento,
		dt_entrada_unidade,
		ie_recem_nato,
		ie_origem_inf,
		nr_prescricao_anterior,
		nr_prescricao_mae,
		cd_protocolo,
		nr_seq_protocolo,
		nr_seq_agenda,
		cd_estabelecimento,
		ds_medicacao_uso,
		cd_prescritor,
		qt_altura_cm,
		qt_peso,
		ie_adep,
		ie_prescr_emergencia,
		ie_prescricao_alta,
		ie_motivo_prescricao,
		nr_doc_conv,
		nr_seq_pepo,
		nr_prescricao_original,
		cd_setor_entrega,
		ie_tipo_prescr_cirur)
SELECT	nr_prescricao_w,
		cd_pessoa_fisica,
		nr_atendimento,
		cd_medico,
		clock_timestamp(),
		clock_timestamp(),
		nm_usuario_p,
		nm_usuario_p,
		ds_observacao,
		nr_horas_validade,
		null,
		null,
		clock_timestamp(),
		null,
		null,
		null,
		cd_setor_atendimento,
		null,
		coalesce(ie_recem_nato,'N'),
		coalesce(ie_origem_inf_w,'1'),
		nr_prescricao_p,
		nr_prescricao_mae,
		cd_protocolo,
		nr_seq_protocolo,
		null,
		cd_estabelecimento,
		ds_medicacao_uso,
		cd_prescritor_w,
		qt_altura_cm,
		qt_peso,
		ie_adep,
		'N',
		'N',
		ie_motivo_prescricao,
		nr_doc_conv,
		nr_seq_pepo,
		nr_prescricao,
		cd_setor_entrega,
		ie_tipo_prescr_cirur
from	prescr_medica
where	nr_prescricao = nr_prescricao_p;

for c01_w in c01
loop

	dt_prev_execucao_w	:= obter_horario_proced_interv(c01_w.cd_intervalo, nr_prescricao_w, clock_timestamp(), clock_timestamp());

	if (dt_prev_execucao_w < clock_timestamp()) then
		dt_prev_execucao_w := dt_prev_execucao_w + 1;
	end if;
	
	ds_horarios_w := reordenar_horarios(dt_prev_execucao_w, c01_w.ds_horarios);

	select 	coalesce(max(nr_sequencia),0) + 1
	into STRICT	nr_sequencia_w
	from 	prescr_procedimento
	where 	nr_prescricao = nr_prescricao_w;

	Insert into Prescr_Procedimento(
			nr_prescricao,
			nr_sequencia,
			nr_agrupamento,
			ie_executar_leito,
			ie_amostra,
			cd_procedimento,
			qt_procedimento,
			dt_atualizacao,
			nm_usuario,
			ds_horarios,
			ds_observacao,
			ds_observacao_enf,
			cd_motivo_baixa,
			dt_baixa,
			cd_procedimento_aih,
			ie_origem_proced,
			cd_intervalo,
			ie_urgencia,
			cd_setor_atendimento,
			dt_emissao_setor_atend,
			ds_dado_clinico,
			dt_prev_execucao,
			ie_suspenso,
			cd_material_exame,
			nr_seq_exame,
			ds_material_especial,
			ie_status_atend,
			ie_origem_inf,
			ie_se_necessario,
			ie_acm,
			nr_ocorrencia,
			nr_seq_interno,
			nr_seq_proc_interno,
			qt_peca_ap,
			ds_qualidade_peca_ap,
			ds_diag_provavel_ap,
			ds_exame_anterior_ap,
			nr_seq_derivado,
			nr_seq_exame_sangue,
			nr_seq_solic_sangue,
			cd_unid_med_sangue,
			cd_pessoa_coleta,
			dt_coleta,
			ie_avisar_result,
			qt_vol_hemocomp,
			nr_seq_prot_glic,
			ie_respiracao,
			cd_mod_vent,
			ie_disp_resp_esp,
			qt_fluxo_oxigenio,
			ds_rotina,
			qt_hora_intervalo,
			qt_min_intervalo,
			ie_autorizacao,
			ie_lado,
			nr_prescricao_original,
			cd_protocolo,
			nr_seq_protocolo,
			cd_medico_exec,
			ie_tipo_proced,
			ie_forma_exame,
			nr_seq_anterior,
			nr_seq_topografia,
			nr_seq_rotina,
    		dt_resultado,
			qt_frasco_env,
			cd_setor_coleta
		) values (
			nr_prescricao_w,
			nr_sequencia_w,
			c01_w.nr_agrupamento,
			c01_w.ie_executar_leito,
			c01_w.ie_amostra,
			c01_w.cd_procedimento,
			c01_w.qt_procedimento,
			clock_timestamp(),
			nm_usuario_p,
			coalesce(ds_horarios_w,c01_w.ds_horarios),
			c01_w.ds_observacao,
			c01_w.ds_observacao_enf,
			0,
			null,
			null,
			c01_w.ie_origem_proced,
			c01_w.cd_intervalo,
			'N',
			c01_w.cd_setor_atendimento,
			null,
			c01_w.ds_dado_clinico,
			dt_prev_execucao_w,
			'N',
			c01_w.cd_material_exame,
			c01_w.nr_seq_exame,
			c01_w.ds_material_especial,
			c01_w.ie_status_atend,
			c01_w.ie_origem_inf,
			c01_w.ie_se_necessario,
			c01_w.ie_acm,
			c01_w.nr_ocorrencia,
			nextval('prescr_procedimento_seq'),
			c01_w.nr_seq_proc_interno,
			c01_w.qt_peca_ap,
			c01_w.ds_qualidade_peca_ap,
			c01_w.ds_diag_provavel_ap,
			c01_w.ds_exame_anterior_ap,
			c01_w.nr_seq_derivado,
			c01_w.nr_seq_exame_sangue,
			c01_w.nr_seq_solic_sangue,
			c01_w.cd_unid_med_sangue,
			c01_w.cd_pessoa_coleta,
			c01_w.dt_coleta,
			c01_w.ie_avisar_result,
			c01_w.qt_vol_hemocomp,
			c01_w.nr_seq_prot_glic,
			c01_w.ie_respiracao,
			c01_w.cd_mod_vent,
			c01_w.ie_disp_resp_esp,
			c01_w.qt_fluxo_oxigenio,
			c01_w.ds_rotina,
			c01_w.qt_hora_intervalo,
			c01_w.qt_min_intervalo,
			c01_w.ie_autorizacao,
			c01_w.ie_lado,
			nr_prescricao_p,
			c01_w.cd_protocolo,
			c01_w.nr_seq_protocolo,
			c01_w.cd_medico_exec,
			c01_w.ie_tipo_proced,
			c01_w.ie_forma_exame,
			c01_w.nr_seq_anterior,
			c01_w.nr_seq_topografia,
			c01_w.nr_seq_rotina,
    		c01_w.dt_resultado,
			c01_w.qt_frasco_env,
			c01_w.cd_setor_coleta);
	commit;

	select	count(*)
	into STRICT	cont_peca_w
	from	prescr_procedimento a,
			prescr_proc_peca b where		a.nr_prescricao		= b.nr_prescricao
	and		a.nr_sequencia		= b.nr_seq_prescr
	and		b.nr_prescricao		= nr_prescricao_p
	and		b.nr_seq_prescr		= c01_w.nr_sequencia LIMIT 1;

	if (cont_peca_w > 0) then
		CALL REP_copia_pecas_procedimento(nr_prescricao_w, nr_sequencia_w, nr_prescricao_p, c01_w.nr_sequencia, nm_usuario_p);
	end if;

	if (ie_relancar_assoc_proc_w = 'S') then
		CALL Gerar_med_mat_assoc(nr_prescricao_w, nr_sequencia_w);

		if (c01_w.nr_seq_prot_glic IS NOT NULL AND c01_w.nr_seq_prot_glic::text <> '') then
			CALL Gerar_Med_Mat_Assoc_Glic(nr_prescricao_w, nr_sequencia_w, c01_w.nr_seq_prot_glic);
		end if;
	end if;	

	if (c01_w.nr_seq_prot_glic IS NOT NULL AND c01_w.nr_seq_prot_glic::text <> '') then
		
		if (VarGerarNiveisGlic_w = 'S') then
			CALL gerar_prescr_proc_glic(nr_prescricao_w, nr_sequencia_w, c01_w.nr_seq_prot_glic, nm_usuario_p);
		else
			insert into prescr_proc_glic(
				nr_sequencia,
				nr_prescricao,
				nr_seq_procedimento,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_protocolo,
				qt_glic_inic,
				qt_glic_fim,
				qt_ui_insulina,
				ds_sugestao,
				qt_glicose,
				qt_ui_insulina_int)
			SELECT	nextval('prescr_proc_glic_seq'),
				nr_prescricao_w,
				nr_sequencia_w,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				a.nr_seq_protocolo,
				a.qt_glic_inic,
				a.qt_glic_fim,
				a.qt_ui_insulina,
				a.ds_sugestao,
				a.qt_glicose,
				a.qt_ui_insulina_int
			from	prescr_procedimento b,
					prescr_proc_glic a
			where	b.nr_prescricao = a.nr_prescricao
			and		b.nr_sequencia = a.nr_seq_procedimento
			and		b.nr_sequencia	= c01_w.nr_sequencia
			and		b.nr_prescricao = nr_prescricao_p;
		end if;

		ie_administrar_proc_w := null;
		cd_procedimento_w := null;
		ie_origem_proced_w := null;

		select	max(ie_operacao),
				coalesce(max(ie_24_h),'N'),
				coalesce(max(qt_operacao),0)
		into STRICT	ie_operacao_int_proc_w,
				ie_24_h_proc_w,
				qt_ocorrencia_int_proc_w
		from	intervalo_prescricao
		where	cd_intervalo = c01_w.cd_intervalo;

		if (VarIe_Controla_Adm_w = 'S') and (ie_operacao_int_proc_w = 'H') and (ie_24_h_proc_w = 'S') and (obter_se_interv_superior_24h(c01_w.cd_intervalo,null) = 'S') and (qt_ocorrencia_int_proc_w > 24) then

			if (c01_w.dt_proxima_dose > dt_prev_execucao_w) then
				ie_administrar_proc_w := 'N';
			else
				dt_proxima_dose_proc_w := dt_prev_execucao_w +(qt_ocorrencia_int_proc_w/24);
			end if;
		end if;

		if (c01_w.nr_seq_proc_interno IS NOT NULL AND c01_w.nr_seq_proc_interno::text <> '') then
			begin
			SELECT * FROM Obter_Proc_Tab_Interno(c01_w.nr_seq_proc_interno, nr_prescricao_w, nr_atendimento_p, null, cd_procedimento_w, ie_origem_proced_w, null, null) INTO STRICT cd_procedimento_w, ie_origem_proced_w;
			end;
		end if;

		if	(cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '' AND ie_origem_proced_w IS NOT NULL AND ie_origem_proced_w::text <> '') then
			begin

			update	prescr_procedimento
			set		cd_procedimento = cd_procedimento_w,
					ie_origem_proced = ie_origem_proced_w,
					ie_administrar = ie_administrar_proc_w,
					dt_proxima_dose = dt_proxima_dose_proc_w
			where	nr_prescricao = nr_prescricao_w
			and		nr_sequencia = nr_sequencia_w;

			end;
		end if;
	end if;
end loop;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE copia_prescricao_eup ( nr_prescricao_p bigint, nr_atendimento_p bigint, nm_usuario_p text ) FROM PUBLIC;

