-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE obter_fornec_consig_ambos ( cd_estabelecimento_p bigint, cd_material_p bigint, nr_seq_lote_forn_p bigint, cd_local_estoque_p bigint, ie_tipo_saldo_p INOUT text, cd_cgc_fornec_p INOUT text, ie_opcao_p text default null) AS $body$
DECLARE


/*
ie_opcao_p - Identifica a rotina que esta chamando a verificacao da regra
CIR - Cirurgia (BAIXA_PRESCR_MAT_CIRURGIA)
REQ - Requisicao (PROC)
*/
nr_seq_regra_w		bigint;
nr_seq_regra_ww		bigint;
nr_seq_superior_w	bigint;
ie_achou_w			boolean := false;
ie_consignado_w		varchar(1);
qt_existe_w			bigint;
ie_nivel_w			bigint;
cd_cgc_fornec_w		material_lote_fornec.cd_cgc_fornec%type;
nr_sequencia_nf_w	bigint;
qt_estoque_w		double precision;
qt_cirurgia_w		double precision;
qt_requisicao_w		double precision := 0;
qt_kit_estoque_w	double precision := 0;

ie_disp_quimioterapia_w		varchar(1);
ie_disp_req_trans_w			varchar(1);
ie_disp_prescr_eme_w		varchar(1);
ie_disp_ag_cirur_w			varchar(1);
ie_disp_comp_kit_estoque_w	varchar(1);
ie_disp_reg_kit_estoque_w	varchar(1);
ie_disp_emprestimo_lib_w	varchar(1);
ie_disp_nf_emprestimo_w		varchar(1);
ie_disp_esp_cirurgia_w		varchar(1);
ie_disp_cirurgia_w			varchar(1);
ie_disp_req_trans_estab_w	varchar(1);
ie_disp_sep_gedipa_w		varchar(1);
ie_disp_ap_lote_w			varchar(1);
ie_disp_lote_prod_w			varchar(1);
qt_estoque_contabil_w		saldo_estoque.qt_estoque%type;
ie_estoque_lote_w           material_estab.ie_estoque_lote%type;


BEGIN

select coalesce(max(ie_estoque_lote),'N')
into STRICT ie_estoque_lote_w
from material_estab
where cd_material = cd_material_p
and cd_estabelecimento = cd_estabelecimento_p;

if (ie_estoque_lote_w = 'S' and nr_seq_lote_forn_p > 0) then

    select max(cd_cgc_fornec)
    into STRICT cd_cgc_fornec_w
    from material_lote_fornec
    where nr_sequencia = nr_seq_lote_forn_p;

    qt_estoque_w := obter_saldo_disp_estoque(cd_estabelecimento_p => cd_estabelecimento_p,
                                                cd_material_p => cd_material_p,
                                                cd_local_estoque_p => cd_local_estoque_p,
                                                dt_mesano_referencia_p => PKG_DATE_UTILS.start_of(clock_timestamp(), 'month', 0),
                                                nr_seq_lote_p => nr_seq_lote_forn_p);
    ie_tipo_saldo_p := 'N';

    if (qt_estoque_w <= 0) then
    
        qt_estoque_w := obter_saldo_consig_lote(cd_estabelecimento_p => cd_estabelecimento_p,
                                                    cd_material_p => cd_material_p,
                                                    cd_local_estoque_p => cd_local_estoque_p, 
                                                    cd_cgc_fornec_p => cd_cgc_fornec_w,
                                                    dt_mesano_referencia_p => PKG_DATE_UTILS.start_of(clock_timestamp(), 'month', 0),
                                                    nr_seq_lote_p => nr_seq_lote_forn_p);
        ie_tipo_saldo_p := 'C';

        if (qt_estoque_w <= 0) then
            ie_tipo_saldo_p := 'E';
        end if;
    end if;

    if (ie_tipo_saldo_p = 'C') then
        cd_cgc_fornec_p := cd_cgc_fornec_w;
    elsif (ie_tipo_saldo_p = 'N') then
        cd_cgc_fornec_p := null;
    else
        cd_cgc_fornec_p := null;
    end if;
else
    
    select	coalesce(max(ie_disp_quimioterapia),'N'),
        coalesce(max(ie_disp_req_trans), 'N'),
        coalesce(max(ie_disp_prescr_eme), 'S'),
        coalesce(max(ie_disp_ag_cirur), 'N'),
        coalesce(max(ie_disp_comp_kit_estoque), 'N'),
        coalesce(max(ie_disp_reg_kit_estoque), 'N'),
        coalesce(max(ie_disp_emprestimo_lib), 'N'),
        coalesce(max(ie_disp_nf_emprestimo),'N'),
        coalesce(max(ie_disp_esp_cirurgia),'N'),
        coalesce(max(ie_disp_cirurgia),'S'),
        coalesce(max(ie_disp_req_trans_estab),'N'),
        coalesce(max(ie_disp_sep_gedipa),'N'),
        coalesce(max(ie_disp_ap_lote),'N'),
        coalesce(max(ie_disp_lote_prod),'N')
    into STRICT	ie_disp_quimioterapia_w,
        ie_disp_req_trans_w,
        ie_disp_prescr_eme_w,
        ie_disp_ag_cirur_w,
        ie_disp_comp_kit_estoque_w,
        ie_disp_reg_kit_estoque_w,
        ie_disp_emprestimo_lib_w,
        ie_disp_nf_emprestimo_w,
        ie_disp_esp_cirurgia_w,
        ie_disp_cirurgia_w,
        ie_disp_req_trans_estab_w,
        ie_disp_sep_gedipa_w,
        ie_disp_ap_lote_w,
        ie_disp_lote_prod_w
    from	parametro_estoque
    where	cd_estabelecimento = cd_estabelecimento_p;

    select	coalesce(max(IE_REGRA_SALDO_CONSIG),0)
    into STRICT	nr_seq_regra_w
    from	parametro_estoque
    where	cd_estabelecimento = cd_estabelecimento_p;

    if (nr_seq_regra_w > 0) then
        begin
        select	coalesce(max(nr_sequencia),0)
        into STRICT	nr_seq_regra_ww
        from	regra_forn_consig_saldo
        where	nr_seq_superior = nr_seq_regra_w
        and	ie_nivel = 1;
        nr_seq_superior_w := nr_seq_regra_ww;

        if (nr_seq_lote_forn_p > 0) then
            begin
            select	coalesce(max(nr_sequencia),0)
            into STRICT	nr_seq_regra_ww
            from	regra_forn_consig_saldo
            where	nr_seq_superior = nr_seq_superior_w
            and	ie_nivel = 2;

            if (nr_seq_regra_ww > 0) then
                nr_seq_superior_w := nr_seq_regra_ww;
            end if;

            if (nr_seq_regra_ww > 0) then
                begin
                select	coalesce(max(nr_sequencia_nf),0)
                into STRICT	nr_sequencia_nf_w
                from	material_lote_fornec
                where	nr_sequencia = nr_seq_lote_forn_p;

                select	CASE WHEN coalesce(max(c.ie_consignado),0)=0 THEN 'N'  ELSE 'S' END 
                into STRICT	ie_consignado_w
                from	nota_fiscal a,
                    operacao_nota b,
                    operacao_estoque c
                where	a.cd_operacao_nf = b.cd_operacao_nf
                and	b.cd_operacao_estoque = c.cd_operacao_estoque
                and	a.nr_sequencia = nr_sequencia_nf_w;

                if (ie_consignado_w = 'S') then
                    begin
                    select	coalesce(max(nr_sequencia),0)
                    into STRICT	nr_seq_regra_ww
                    from	regra_forn_consig_saldo
                    where	nr_seq_superior = nr_seq_superior_w
                    and	ie_nivel = 6;
                    nr_seq_superior_w := nr_seq_regra_ww;

                    if (nr_seq_regra_ww > 0) then
                        begin
                        select	max(cd_cgc_fornec)
                        into STRICT	cd_cgc_fornec_w
                        from	material_lote_fornec
                        where	nr_sequencia = nr_seq_lote_forn_p;

                        qt_estoque_w := obter_saldo_estoque_consignado(cd_estabelecimento_p, cd_cgc_fornec_w, cd_material_p, cd_local_estoque_p, clock_timestamp(), qt_estoque_w);

                        if (qt_estoque_w > 0) then
                            begin
                            ie_tipo_saldo_p	:= 'C';
                            cd_cgc_fornec_p	:= cd_cgc_fornec_w;
                            ie_achou_w	:= true;
                            end;
                        end if;
                        end;
                    end if;
                    end;
                end if;
                end;
            end if;
            end;
        end if;
        if (not ie_achou_w) then
            begin
            while 	(not ie_achou_w AND nr_seq_superior_w > 0) loop
                begin
                select	coalesce(max(nr_sequencia),0)
                into STRICT	nr_seq_regra_ww
                from	regra_forn_consig_saldo
                where	nr_seq_superior = nr_seq_superior_w
                and	ie_nivel = 3;
                nr_seq_superior_w := nr_seq_regra_ww;

                if (nr_seq_regra_ww > 0) then
                    begin
                    begin
                    select	nr_sequencia,
                        ie_nivel
                    into STRICT	nr_seq_regra_ww,
                        ie_nivel_w
                    from	regra_forn_consig_saldo
                    where	nr_seq_superior = nr_seq_superior_w;
                    exception
                    when others then
                        nr_seq_regra_ww := 0;
                    end;
                    nr_seq_superior_w := nr_seq_regra_ww;

                    if (nr_seq_regra_ww > 0) then
                        begin
    
                        if (ie_nivel_w = 5) then
                            begin
                            cd_cgc_fornec_w	:= substr(obter_fornecedor_regra_consig(cd_estabelecimento_p, cd_material_p, '1', cd_local_estoque_p),1,14);
                            qt_estoque_w := obter_saldo_estoque_consignado(cd_estabelecimento_p, cd_cgc_fornec_w, cd_material_p, cd_local_estoque_p, clock_timestamp(), qt_estoque_w);
                            if (qt_estoque_w > 0) then
                                begin
                                ie_tipo_saldo_p	:= 'C';
                                cd_cgc_fornec_p	:= cd_cgc_fornec_w;
                                ie_achou_w	:= true;
                                end;
                            end if;
                            end;
                        elsif (ie_nivel_w = 4) then
                            begin
                            qt_estoque_p			=> qt_estoque_contabil_w := Obter_Saldo_Estoque(cd_estabelecimento_p	=> cd_estabelecimento_p, cd_material_p			=> cd_material_p, cd_local_estoque_p		=> cd_local_estoque_p, dt_mesano_referencia_p	=> PKG_DATE_UTILS.start_of(clock_timestamp(), 'month', 0), qt_estoque_p			=> qt_estoque_contabil_w);

                            qt_estoque_w := obter_saldo_disp_estoque(cd_estabelecimento_p, cd_material_p, cd_local_estoque_p, PKG_DATE_UTILS.start_of(clock_timestamp(), 'month', 0));

                            if (qt_estoque_w > 0) or (qt_estoque_contabil_w > 0) then
                                if (ie_opcao_p = 'CIR') then
                                    if (ie_disp_cirurgia_w = 'S') then
                                        /*Busca as quantidades que estao em cirurgia no local do setor da cirurgia*/

                                        select	coalesce(sum(a.qt_total_dispensar),0)
                                        into STRICT	qt_cirurgia_w
                                        from	setor_atendimento c,
                                            cirurgia b,
                                            material x,
                                            prescr_material a,
                                            prescr_medica m
                                        where	a.cd_motivo_baixa = 0
                                        and	a.cd_material = x.cd_material
                                        and	x.cd_material_estoque = cd_material_p
                                        and	m.nr_prescricao = b.nr_prescricao
                                        and	m.nr_prescricao = a.nr_prescricao
                                        and	b.cd_setor_atendimento = c.cd_setor_atendimento
                                        and	c.cd_local_estoque = cd_local_estoque_p
                                        and	a.ie_status_cirurgia in ('CB','AD')
                                        and	coalesce(a.ie_baixa_estoque_cir::text, '') = '';
                                    elsif (ie_disp_cirurgia_w = 'C') then
                                        /*Busca as quantidades que estao em cirurgia no local de consistencia, se nao ter local de consistencia, busca do local do setor da cirurgia*/

                                        select	coalesce(sum(a.qt_total_dispensar),0)
                                        into STRICT	qt_cirurgia_w
                                        from	setor_atendimento c,
                                            cirurgia b,
                                            material x,
                                            prescr_material a,
                                            prescr_medica m
                                        where	a.cd_motivo_baixa = 0
                                        and	a.cd_material= x.cd_material
                                        and	x.cd_material_estoque = cd_material_p
                                        and	m.nr_prescricao = b.nr_prescricao
                                        and	m.nr_prescricao = a.nr_prescricao
                                        and	b.cd_setor_atendimento = c.cd_setor_atendimento
                                        and	coalesce(a.cd_local_estoque, c.cd_local_estoque) = cd_local_estoque_p
                                        and	a.ie_status_cirurgia in ('CB','AD')
                                        and	coalesce(a.ie_baixa_estoque_cir::text, '') = '';
                                    else
                                        qt_cirurgia_w := 0;
                                    end if;
                                    qt_estoque_w := qt_estoque_w + qt_cirurgia_w;
                                elsif (ie_opcao_p = 'REQ') then
                                    if (ie_disp_req_trans_w = 'S') then
                                        select	coalesce(sum(a.qt_estoque), 0) - coalesce(sum(a.qt_material_atendida), 0) qt_material
                                        into STRICT	qt_requisicao_w
                                        from	operacao_estoque o,
                                            requisicao_material b,
                                            item_requisicao_material a
                                        where	a.nr_requisicao = b.nr_requisicao
                                        and	b.cd_operacao_estoque = o.cd_operacao_estoque
                                        and	b.cd_estabelecimento = cd_estabelecimento_p
                                        and	b.cd_local_estoque = cd_local_estoque_p
                                        and	o.ie_tipo_requisicao in ('2','21')
                                        and	exists ( SELECT d.cd_motivo_baixa
                                                    from sup_motivo_baixa_req d
                                                    where a.cd_motivo_baixa = d.nr_sequencia
                                                    and d.cd_motivo_baixa = 0  LIMIT 1)
                                        and	(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '')
                                        and	a.cd_material in (select	x.cd_material
                                                            from	material x
                                                            where	x.cd_material_estoque = cd_material_p);
                                    end if;
                                    qt_estoque_w := qt_estoque_w + qt_requisicao_w;
                                elsif (ie_opcao_p = 'KIT') then
                                    qt_kit_estoque_w := sup_obter_qt_material_kit(cd_estabelecimento_p, cd_local_estoque_p, cd_material_p);
                                    qt_estoque_w := qt_estoque_w + qt_kit_estoque_w;
                                end if;
                            end if;

                            if (qt_estoque_w > 0) then
                                begin
                                ie_tipo_saldo_p	:= 'N';
                                cd_cgc_fornec_p	:= null;
                                ie_achou_w	:= true;
                                end;
                            end if;
                            end;
                        end if;
                        end;
                    end if;
                    end;
                end if;
                end;
            end loop;
            end;
        end if;
        if (not ie_achou_w) then
            begin
            ie_tipo_saldo_p	:= 'E';
            cd_cgc_fornec_p	:= null;
            if (nr_seq_lote_forn_p > 0) then
                begin
                select	coalesce(max(nr_sequencia_nf),0)
                into STRICT	nr_sequencia_nf_w
                from	material_lote_fornec
                where	nr_sequencia = nr_seq_lote_forn_p;

                if (nr_sequencia_nf_w > 0) then
                    begin
                    select	CASE WHEN coalesce(max(ie_consignado),0)=0 THEN 'N'  ELSE 'S' END 
                    into STRICT	ie_consignado_w
                    from	nota_fiscal a,
                        operacao_nota b,
                        operacao_estoque c
                    where	a.cd_operacao_nf = b.cd_operacao_nf
                    and	b.cd_operacao_estoque = c.cd_operacao_estoque
                    and	a.nr_sequencia = nr_sequencia_nf_w;

                    if (ie_consignado_w = 'S') then
                        begin
                        select	cd_cgc_fornec
                        into STRICT	cd_cgc_fornec_w
                        from	material_lote_fornec
                        where	nr_sequencia = nr_seq_lote_forn_p;

                        ie_tipo_saldo_p	:= 'C';
                        cd_cgc_fornec_p	:= cd_cgc_fornec_w;
                        end;
                    else
                        ie_tipo_saldo_p	:= 'N';
                    end if;
                    end;
                end if;
                end;
            end if;
            end;
        end if;
        end;
    else
        begin
        qt_estoque_w := obter_saldo_estoque(cd_estabelecimento_p, cd_material_p, cd_local_estoque_p, PKG_DATE_UTILS.start_of(clock_timestamp(), 'month', 0), qt_estoque_w);

        if (qt_estoque_w > 0) then
            begin
            ie_tipo_saldo_p	:= 'N';
            cd_cgc_fornec_p	:= null;
            end;
        else
            begin
            ie_tipo_saldo_p	:= 'E';
            cd_cgc_fornec_p	:= null;
            end;
        end if;
        end;
    end if;
end if;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE obter_fornec_consig_ambos ( cd_estabelecimento_p bigint, cd_material_p bigint, nr_seq_lote_forn_p bigint, cd_local_estoque_p bigint, ie_tipo_saldo_p INOUT text, cd_cgc_fornec_p INOUT text, ie_opcao_p text default null) FROM PUBLIC;

