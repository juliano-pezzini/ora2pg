-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_titulo_tributo ( nr_sequencia_p bigint, nm_usuario_p text) AS $body$
DECLARE


cd_estab_financeiro_w		integer;
cd_estabelecimento_w		integer;
vl_tributo_w			double precision;
vl_saldo_titulo_w		double precision;
dt_emissao_w			timestamp;
dt_vencimento_w			timestamp;
cd_beneficiario_w		varchar(255);
cd_benef_regra_w		varchar(255);
cd_conta_contabil_w		varchar(20);
cd_cond_pagto_w			bigint;
ds_erro_w			varchar(4000);
cd_moeda_w			integer;
nr_titulo_w			bigint;
tx_juros_w			double precision	:= 0;
tx_multa_w			double precision	:= 0;
nr_seq_trans_reg_w		bigint;
cd_conta_financ_regra_w		bigint;
nr_seq_trans_baixa_w		bigint;
nr_seq_nota_fiscal_w		numeric(20);
cd_conta_financ_w		bigint;
cd_centro_custo_w		integer;
nr_seq_conta_financ_w		bigint;
vl_classif_w			double precision;
nr_sequencia_w			bigint;
cd_empresa_w			bigint;
nr_tit_original_w		bigint;
cd_natureza_operacao_w		bigint;
vl_diferenca_w			double precision;
ie_origem_titulo_w		varchar(10);
ds_observacao_titulo_w		varchar(4000);
ie_conta_contab_tit_trib_w	varchar(255);
cd_conta_contab_trib_w		varchar(20);
dt_contabil_w			timestamp;
ie_dt_contabil_w		varchar(01);
cd_darf_w			varchar(100);
dt_imposto_w			timestamp;
cd_tributo_w			smallint;
dt_liquidacao_w			timestamp;
cd_cgc_w			varchar(14);
cd_pessoa_fisica_w		varchar(255);
ie_conta_financ_tit_trib_w	varchar(255);
ds_irrelevante_w		varchar(4000);
nr_seq_proj_rec_w		bigint;
cd_operacao_nf_w		bigint;
nr_seq_classe_w			bigint;
cd_tipo_baixa_neg_w		integer;
nr_documento_w			numeric(20);
nr_nota_fiscal_w		varchar(255);
vl_base_calculo_w		double precision;
vl_titulo_w			double precision;
nr_seq_classe_tit_w		bigint;
dt_emis_tit_ori_w		timestamp;
nr_seq_pag_prest_w		bigint;
ds_observacao_w			varchar(4000);
ie_inss_ir_semanal_w		varchar(1);
ie_origem_titulo_pagar_w	titulo_pagar.ie_origem_titulo%type;
ie_titulo_pagar_w		tributo_conta_contabil.ie_titulo_pagar%type;
ie_origem_tit_rep_w		titulo_pagar.ie_origem_titulo%type;
nr_seq_pls_venc_trib_w		pls_pag_prest_venc_trib.nr_sequencia%type;
nr_seq_regra_w      		tributo_conta_pagar.nr_sequencia%type;
nr_repasse_terceiro_w		repasse_terceiro.nr_repasse_terceiro%type;
nr_seq_tipo_w			repasse_terceiro.nr_seq_tipo%type;
ie_producao_medica_w		tributo_conta_pagar.ie_producao_medica%type;

c01 CURSOR FOR
	SELECT	coalesce(cd_conta_contab_trib_w, cd_conta_contabil),
		cd_centro_custo,
		coalesce(cd_conta_financ_w, nr_seq_conta_financ),
		vl_titulo
	from	titulo_pagar_classif
	where	nr_titulo	= nr_tit_original_w
	
union all

	SELECT	cd_conta_contab_trib_w,
		null cd_centro_custo,
		cd_conta_financ_w,
		coalesce(vl_titulo_w,0) vl_titulo
	
	where	not exists (select 1
				from	titulo_pagar_classif
				where	nr_titulo	= nr_tit_original_w)
	and	(cd_conta_financ_w IS NOT NULL AND cd_conta_financ_w::text <> '');


BEGIN
ds_observacao_w := substr(obter_obs_titulo_tributo(nr_sequencia_p),1,4000);

select	b.cd_estabelecimento,
	a.dt_imposto,
	b.dt_emissao,
	b.cd_moeda,
	a.cd_beneficiario,
	a.vl_imposto,
	nr_seq_trans_reg,
	nr_seq_trans_baixa,
	cd_conta_financ,
	b.vl_saldo_titulo,
	b.nr_titulo,
	substr(ds_observacao_w,1,4000),
	a.cd_darf,
	dt_imposto,
	nr_seq_nota_fiscal,
	a.cd_tributo,
	b.dt_liquidacao,
	b.cd_pessoa_fisica,
	cd_cgc,
	nr_seq_proj_rec,
	b.nr_documento,
	a.vl_base_calculo,
	b.vl_titulo,
	b.nr_seq_classe,
	b.nr_seq_pls_pag_prest,
	a.ie_inss_ir_semanal,
	b.ie_origem_titulo,
	a.nr_seq_pls_venc_trib,
	b.nr_repasse_terceiro
into STRICT	cd_estabelecimento_w,
	dt_vencimento_w,
	dt_emissao_w,
	cd_moeda_w,
	cd_beneficiario_w,
	vl_tributo_w,
	nr_seq_trans_reg_w,
	nr_seq_trans_baixa_w,
	cd_conta_financ_w,
	vl_saldo_titulo_w,
	nr_tit_original_w,
	ds_observacao_titulo_w,
	cd_darf_w,
	dt_imposto_w,
	nr_seq_nota_fiscal_w,
	cd_tributo_w,
	dt_liquidacao_w,
	cd_pessoa_fisica_w,
	cd_cgc_w,
	nr_seq_proj_rec_w,
	nr_documento_w,
	vl_base_calculo_w,
	vl_titulo_w,
	nr_seq_classe_tit_w,
	nr_seq_pag_prest_w,
	ie_inss_ir_semanal_w,
	ie_origem_titulo_pagar_w,
	nr_seq_pls_venc_trib_w,
	nr_repasse_terceiro_w
from	titulo_pagar 		b,
	titulo_pagar_imposto 	a
where	a.nr_titulo		= b.nr_titulo
and	a.nr_sequencia		= nr_sequencia_p;


/* se o titulo foi baixado pelo Pagamento Escritural, ainda nao possui data de liquidacao */

if (coalesce(dt_liquidacao_w::text, '') = '') then

	select	max(a.dt_baixa)
	into STRICT	dt_liquidacao_w
	from	titulo_pagar_baixa a
	where	a.nr_sequencia	=
		(SELECT	max(x.nr_sequencia)
		from	titulo_pagar_baixa x
		where	x.nr_titulo	= nr_tit_original_w)
	and	(a.nr_seq_escrit IS NOT NULL AND a.nr_seq_escrit::text <> '')
	and	a.nr_titulo	= nr_tit_original_w;

end if;

select	max(cd_natureza_operacao),
	max(cd_operacao_nf),
	max(nr_nota_fiscal)
into STRICT	cd_natureza_operacao_w,
	cd_operacao_nf_w,
	nr_nota_fiscal_w
from	nota_fiscal
where	nr_sequencia	= nr_seq_nota_fiscal_w;

if (nr_nota_fiscal_w IS NOT NULL AND nr_nota_fiscal_w::text <> '') then
	nr_documento_w	:= somente_numero(nr_nota_fiscal_w);
end if;

select	coalesce(max(ie_conta_contab_tit_trib),'T'),
	coalesce(max(ie_conta_financ_tit_trib),'T')
into STRICT	ie_conta_contab_tit_trib_w,
	ie_conta_financ_tit_trib_w
from	parametros_contas_pagar
where 	cd_estabelecimento 	= cd_estabelecimento_w;

cd_conta_contab_trib_w	:= null;

if (ie_conta_contab_tit_trib_w = 'R') then
	select	max(cd_empresa)
	into STRICT	cd_empresa_w
	from	estabelecimento	
	where	cd_estabelecimento	= cd_estabelecimento_w;
	begin	
	select coalesce(IE_TITULO_PAGAR,'N')  	
	into STRICT IE_TITULO_PAGAR_W	
	from (SELECT IE_TITULO_PAGAR
	from	tributo_conta_contabil
	where	cd_tributo 	= cd_tributo_w
	and	cd_cgc 		= cd_beneficiario_w
	and	cd_empresa	= cd_empresa_w
	and (coalesce(dt_inicio_vigencia, clock_timestamp()) <= clock_timestamp() and coalesce(dt_fim_vigencia, clock_timestamp()) >= clock_timestamp())
	order by dt_inicio_vigencia) alias8 LIMIT 1;	
	exception
	when others then
		IE_TITULO_PAGAR_W := 'N';
	end;

	if (IE_TITULO_PAGAR_W = 'S')then
		cd_conta_contab_trib_w		:= substr(obter_conta_contabil_trib(cd_empresa_w, cd_tributo_w, cd_beneficiario_w, clock_timestamp()),1,20);
	else
		cd_conta_contab_trib_w		:= substr(obter_conta_contabil_trib(cd_empresa_w, cd_tributo_w, cd_cgc_w, clock_timestamp()),1,20);
	end if;
end if;

begin
	select	nr_seq_tipo
	into STRICT	nr_seq_tipo_w
	from	repasse_terceiro
	where	nr_repasse_terceiro = nr_repasse_terceiro_w;
exception
when others then
	nr_seq_tipo_w	:= null;
end;	

ie_producao_medica_w := 'N';
if (ie_origem_titulo_pagar_w = 20) then -- Se for pagamento de producao medica
	ie_producao_medica_w := 'S';
end if;	

SELECT * FROM obter_dados_trib_tit_pagar(	cd_tributo_w, cd_estabelecimento_w, cd_cgc_w, cd_pessoa_fisica_w, cd_benef_regra_w, ds_irrelevante_w, ds_irrelevante_w, cd_conta_financ_regra_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, clock_timestamp(), ds_irrelevante_w, ds_irrelevante_w, 'N', cd_natureza_operacao_w, null, null, null, nr_seq_tipo_w, ds_irrelevante_w, cd_operacao_nf_w, 0, nr_seq_classe_w, cd_tipo_baixa_neg_w, vl_base_calculo_w, ie_producao_medica_w, nr_seq_classe_tit_w, ie_origem_titulo_pagar_w, null, null) INTO STRICT cd_benef_regra_w, ds_irrelevante_w, ds_irrelevante_w, cd_conta_financ_regra_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, nr_seq_classe_w, cd_tipo_baixa_neg_w;

if (coalesce(cd_beneficiario_w::text, '') = '') then
	cd_beneficiario_w	:= cd_benef_regra_w;
end if;

if (ie_conta_financ_tit_trib_w = 'R') then
	cd_conta_financ_w	:= coalesce(cd_conta_financ_regra_w, cd_conta_financ_w);
end if;

-- Tratamento OPS - Verifica se ha vencimento de pagamento vinculado ao titulo, atraves deste vencimento busca a regra de conta pagar, e atraves da regra de conta pagar busca a conta financeira
select	coalesce(max(d.cd_conta_financ), cd_conta_financ_w),
	coalesce(max(d.nr_seq_classe_tp), nr_seq_classe_w),
	coalesce(max(d.cd_tipo_baixa_neg),cd_tipo_baixa_neg_w)
into STRICT	cd_conta_financ_w,
	nr_seq_classe_w,
	cd_tipo_baixa_neg_w
from	pls_trib_conta_pagar_log	d,
	pls_tributo_log			c,
	pls_pag_prest_venc_trib		f,
	pls_pag_prest_vencimento	b,
	pls_pagamento_prestador   	a
where	a.nr_sequencia			= b.nr_seq_pag_prestador
and	b.nr_sequencia			= f.nr_seq_vencimento
and	c.nr_sequencia			= d.nr_seq_tributo_log
and	a.nr_seq_lote			= c.nr_seq_lote_pgto
and	f.cd_tributo			= c.cd_tributo
and  	d.nr_seq_origem 		= f.nr_seq_regra
and	b.nr_titulo 			= nr_tit_original_w
and	c.cd_tributo			= cd_tributo_w;

select	max(ie_dt_contab_tit_trib)
into STRICT	ie_dt_contabil_w
from	tributo
where	cd_tributo	= cd_tributo_w;

if (coalesce(ie_dt_contabil_w::text, '') = '') then
	select	coalesce(max(ie_dt_contab_tit_trib),'E')
	into STRICT	ie_dt_contabil_w
	from	parametros_contas_pagar
	where 	cd_estabelecimento 	= cd_estabelecimento_w;
end if;

select	coalesce(cd_estab_financeiro, cd_estabelecimento)
into STRICT	cd_estab_financeiro_w
from	estabelecimento
where	cd_estabelecimento	= cd_estabelecimento_w;

select	dt_emissao
into STRICT	dt_emis_tit_ori_w
from	titulo_pagar
where	nr_titulo = nr_tit_original_w;

/*OS 1317851 Retirado a verificacao do Pais aqui, que estava deixando entrar no IF somente se pais fosse diferente de 2 (mexico). As rotinas que chamam essa devem verificar o cadastro do tributo, se deve gerar titulo ou nao*/

if (vl_tributo_w > 0) then	
	select	nextval('titulo_pagar_seq')
	into STRICT	nr_titulo_w
	;

	begin
	select	ie_origem_titulo,
		coalesce(dt_contabil,dt_emissao)
	into STRICT	ie_origem_titulo_w,
		dt_contabil_w
	from	titulo_pagar
	where	nr_titulo = nr_tit_original_w;

	--Obtem o valor do parametro 131 da funcao Repasse para terceiros

	--Se o parametro nao possuir nenhuma valor, ele recebe o IE_ORIGEM_TITULO_W
	ie_origem_tit_rep_w := null;
	if (ie_origem_titulo_w = '3') then
		ie_origem_tit_rep_w := obter_param_usuario(89, 131, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_origem_tit_rep_w);

		if (coalesce(ie_origem_tit_rep_w::text, '') = '') then
			ie_origem_tit_rep_w := ie_origem_titulo_w;
		end if;		
	end if;

	if (ie_dt_contabil_w = 'A')	then
		dt_emissao_w	:= ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(clock_timestamp());
		dt_contabil_w	:= ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(clock_timestamp());

	/*	Elton OS 111056 - 23/10/2008 - Inclusa a opcao de gerar com a data da geracao do tributo */

	elsif (ie_dt_contabil_w = 'T')	then
		dt_emissao_w	:= ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_imposto_w);
		dt_contabil_w	:= ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_imposto_w);
	elsif (ie_dt_contabil_w = 'L') then
		dt_emissao_w	:= ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(coalesce(dt_liquidacao_w,dt_contabil_w));
		dt_contabil_w	:= ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(coalesce(dt_liquidacao_w,dt_contabil_w));
	elsif (ie_dt_contabil_w = 'V') then
		dt_emissao_w	:= ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(coalesce(dt_liquidacao_w,dt_contabil_w));
		dt_contabil_w	:= ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(coalesce(dt_liquidacao_w,dt_vencimento_w));
	elsif (ie_dt_contabil_w = 'D')	then
		dt_emissao_w	:= ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_emis_tit_ori_w);
		dt_contabil_w	:= ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_emis_tit_ori_w);
	end if;

	/* Ricardo 05/04/2006 - A pedido do Marcus, inclui em todos os inserts da Titulo Pagar o campo NR_LOTE_TRANSF_TRIB como 0 (zero) */
	
	insert into titulo_pagar(
		nr_titulo,
		cd_estabelecimento,
		dt_atualizacao,
		nm_usuario,
		dt_emissao,
		dt_contabil,
		dt_vencimento_original,
		dt_vencimento_atual,
		vl_titulo, 	
		vl_saldo_titulo,
		vl_saldo_juros,
		vl_saldo_multa, 
		cd_moeda,
		tx_juros,
		tx_multa,
		cd_tipo_taxa_juro,
		cd_tipo_taxa_multa,
		tx_desc_antecipacao,
		ie_situacao,
		ie_origem_titulo,
		ie_tipo_titulo,
		nr_seq_nota_fiscal,
		cd_cgc,
		nr_documento,
		ie_desconto_dia,
		nr_titulo_original,
		nr_lote_contabil, 
		nr_seq_tributo,
		nr_seq_trans_fin_contab,
		nr_seq_trans_fin_baixa,
		ie_status_tributo,
		nr_lote_transf_trib,
		cd_estab_financeiro,
		ds_observacao_titulo,
		cd_darf,
		nr_seq_proj_rec,
		cd_tributo,
		nr_seq_classe,
		cd_tipo_baixa_neg,
		ie_status,
		nr_seq_pls_pag_prest,
		nr_seq_pls_venc_trib,
		nr_repasse_terceiro)
	values (nr_titulo_w,
		cd_estabelecimento_w,
		clock_timestamp(),
		nm_usuario_p,
		dt_emissao_w,
		dt_contabil_w,
		dt_vencimento_w,
		dt_vencimento_w,
		vl_tributo_w, 
		vl_tributo_w,
		0,
		0, 
		cd_moeda_w,
		tx_juros_w,
		tx_multa_w, 
		1,
		1,
		0,
		'A',		  			/* Situacao Aberto */
		CASE WHEN ie_origem_titulo_w='3' THEN ie_origem_tit_rep_w  ELSE 4 END ,  	/*4- Imposto, 3- Repasse (quando origem for repasse)*/
		4,                			/* Imposto */
		nr_seq_nota_fiscal_w,
		cd_beneficiario_w,
		nr_documento_w,
		'N',
		nr_tit_original_w,
		0,
		nr_sequencia_p,
		nr_seq_trans_reg_w,
		nr_seq_trans_baixa_w,
		'NT',
		0,
		cd_estab_financeiro_w,
		ds_observacao_titulo_w,
		cd_darf_w,
		nr_seq_proj_rec_w,
		cd_tributo_w,
		nr_seq_classe_w,
		cd_tipo_baixa_neg_w,
		'D',
		nr_seq_pag_prest_w,
		nr_seq_pls_venc_trib_w,
		nr_repasse_terceiro_w);
	-- WPORT - OS399987 - 20/01/2012 - Seguindo orientacao do Edgar, a procedure abaixo nao pode ser chamada. 

	-- ATUALIZAR_INCLUSAO_TIT_PAGAR(nr_titulo_w, nm_usuario_p);
    if (coalesce(nr_repasse_terceiro_w, 0) <> 0) then
        CALL ctb_gerar_ctb_doc_tit_repasse(nr_titulo_w, nm_usuario_p);
    end if;

	open c01;
	loop
	fetch c01 into
		cd_conta_contabil_w,
		cd_centro_custo_w,
		nr_seq_conta_financ_w,
		vl_classif_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */	


		vl_classif_w	:= (vl_tributo_w * dividir_sem_round(vl_classif_w, vl_saldo_titulo_w));

		select	coalesce(max(nr_sequencia), 0) + 1
		into STRICT	nr_sequencia_w
		from	titulo_pagar_classif
		where	nr_titulo		= nr_titulo_w;

		insert into titulo_pagar_classif(	nr_titulo,		nr_sequencia,		vl_titulo,
							dt_atualizacao, 	nm_usuario,		cd_conta_contabil,
							cd_centro_custo,	nr_seq_conta_financ)
					values (		nr_titulo_w,		nr_sequencia_w,		vl_classif_w,
							clock_timestamp(), 		nm_usuario_p,		cd_conta_contabil_w,
							cd_centro_custo_w, 	nr_seq_conta_financ_w);
	end loop;
	close c01;	

	select	coalesce(sum(vl_titulo),0)
	into STRICT	vl_classif_w
	from	titulo_pagar_classif
	where	nr_titulo	= nr_titulo_w;

	vl_diferenca_w	:= vl_tributo_w - vl_classif_w;

	update	titulo_pagar_classif
	set	vl_titulo	= vl_titulo + vl_diferenca_w
	where	nr_titulo	= nr_titulo_w
	and	nr_sequencia	= nr_sequencia_w;

	exception
	when others then
		ds_erro_w	:= substr(SQLERRM(SQLSTATE), 1, 4000);
		CALL wheb_mensagem_pck.exibir_mensagem_abort(184161,'DS_ERRO=' || ds_erro_w);
	end;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_titulo_tributo ( nr_sequencia_p bigint, nm_usuario_p text) FROM PUBLIC;

