-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE add_part_carta_medica ( nr_seq_carta_p bigint, nr_seq_carta_mae_p bigint, nm_usuario_p text, ie_operacao_p text DEFAULT 'IN', IE_PARTICIPANTE_P text DEFAULT NULL, IE_DEVE_ASSINAR_P text DEFAULT NULL) AS $body$
DECLARE


nr_usuario_reg_w		participante_carta_medica.nr_sequencia%TYPE;
nm_usuario_pend_w		participante_carta_medica.nm_usuario_resp%TYPE;
nr_seq_apresent_w		participante_carta_medica.nr_seq_apresent%TYPE;
nr_seq_assinatura_w		participante_carta_medica.nr_seq_assinatura%TYPE;
dt_assinatura_w			participante_carta_medica.dt_assinatura%TYPE;
ie_incluso_w			participante_carta_medica.ie_incluso%TYPE := 'N';
nr_atendimento_w		carta_medica.nr_atendimento%TYPE;
cd_pessoa_fisica_w		carta_medica.cd_pessoa_fisica%TYPE;
nr_seq_modelo_w			carta_medica.nr_seq_modelo%TYPE;
ie_deve_assinar_w		participante_carta_medica.ie_deve_assinar%TYPE;
dt_assinatura_pend_w	participante_carta_medica.dt_assinatura%TYPE;
nm_usuario_assinat_w    participante_carta_medica.nm_usuario_assinat%TYPE;
nr_seq_regra_w			wl_regra_item.nr_sequencia%type;
nr_seq_episodio_w		atendimento_paciente.nr_seq_episodio%type;
nr_seq_tipo_adm_fat_w	atendimento_paciente.nr_seq_tipo_admissao_fat%type;
nr_cirurgia_w			carta_medica.nr_cirurgia%type;
cd_pessoa_usuario_w     carta_medica.cd_pessoa_fisica%type;
ie_aprovacao_dupla_w    varchar(2) := 'S';
qt_aprovado_w			bigint	:= 0;
qt_aprovado_carta_w		bigint	:= 0;
ie_status_aprovacao_w 	carta_medica.ie_status_aprovacao%type;

ConstResponsavelDeveAssinar varchar(5) := 'DA';
ConstAssinarPor             varchar(5) := 'DAR';
qt_regra_worklist_w			smallint	:= 0;
qt_pendencias_usuario_w		smallint	:= 0;
qt_pendencias_assinatura_w	bigint	:= 0;
ie_paticipante_carta_w	varchar(1);

C01 CURSOR FOR
	SELECT	coalesce(b.qt_tempo_normal, 0) qt_horas_assinar_carta,
			coalesce(b.nr_sequencia, 0) nr_seq_regra
	FROM 	wl_regra_worklist a,
			wl_regra_item b
	WHERE	a.nr_sequencia = b.nr_seq_regra
	AND		b.ie_situacao = 'A'
	AND		a.nr_seq_item = (	SELECT	MAX(x.nr_sequencia)
								FROM	wl_item x
								WHERE	x.nr_sequencia = a.nr_seq_item
								AND		x.cd_categoria = 'ML'
								AND		x.ie_situacao = 'A')
	AND		coalesce(b.ie_tipo_pend_carta,'A') = 'A';

C02 CURSOR FOR
	SELECT	coalesce(b.qt_tempo_normal, 0) qt_horas_processo,
			coalesce(b.nr_sequencia, 0) nr_seq_regra
	FROM 	wl_regra_worklist a,
			wl_regra_item b
	WHERE	a.nr_sequencia = b.nr_seq_regra
	AND		b.ie_situacao = 'A'
	AND		a.nr_seq_item = (	SELECT	MAX(x.nr_sequencia)
								FROM	wl_item x
								WHERE	x.nr_sequencia = a.nr_seq_item
								AND		x.cd_categoria = 'ML'
								AND		x.ie_situacao = 'A')
	AND		coalesce(b.ie_tipo_pend_carta,'A') = 'A';
	
C03 CURSOR FOR
	SELECT	obter_usuario_pessoa(a.cd_pessoa_fisica) nm_usuario
	from	cirurgia_participante a
	where	a.nr_cirurgia = nr_cirurgia_w
	and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
	and	coalesce(a.dt_inativacao::text, '') = ''
	and (obter_usuario_pessoa(a.cd_pessoa_fisica) IS NOT NULL AND (obter_usuario_pessoa(a.cd_pessoa_fisica))::text <> '')
	and (	SELECT 	coalesce(max(b.ie_cirurgiao), 'N')
			from	funcao_medico b
			where	b.cd_funcao = a.ie_funcao) = 'S';

C05 CURSOR FOR
    SELECT  a.nm_usuario_resp nm_usuario_w
	from    PARTICIPANTE_CARTA_MEDICA a
	where   a.NR_SEQ_CARTA_MAE = nr_seq_carta_mae_p
	and     a.IE_DEVE_ASSINAR = 'S'
	and     a.nr_seq_assinatura =   (     SELECT  min(nr_seq_assinatura)
										from    PARTICIPANTE_CARTA_MEDICA b
										where   b.NR_SEQ_CARTA_MAE = a.NR_SEQ_CARTA_MAE
										and     b.IE_DEVE_ASSINAR = 'S'
										and     b.nr_seq_assinatura > (	select	c.nr_seq_assinatura
																		from 	PARTICIPANTE_CARTA_MEDICA c
																		where 	c.NR_SEQ_CARTA_MAE = b.NR_SEQ_CARTA_MAE
																		and 	c.nm_usuario_resp = nm_usuario_p
																		and 	(c.DT_ASSINATURA IS NOT NULL AND c.DT_ASSINATURA::text <> '') ));

C06 CURSOR FOR
	SELECT  b.cd_medico, coalesce(b.ie_aprovacao_dupla, 'N') ie_aprovacao_dupla
	from    MEDICO_CARTA_MEDICA a,
			MEDICO_CARTA_MEDICA_PERMIT b
	where   a.nr_sequencia = b.nr_seq_medico_carta_medica
	and     a.cd_medico = cd_pessoa_usuario_w
	and		b.ie_situacao = 'A'
	and 	(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '')
	and    	(((dt_inicio IS NOT NULL AND dt_inicio::text <> '') and (dt_fim IS NOT NULL AND dt_fim::text <> '') and clock_timestamp() between dt_inicio and dt_fim) or coalesce(dt_inicio::text, '') = '' and coalesce(dt_fim::text, '') = '');

BEGIN
	
	SELECT	COUNT(*)
	INTO STRICT	nr_usuario_reg_w
	FROM 	participante_carta_medica
	WHERE	nr_seq_carta_mae = nr_seq_carta_mae_p
	AND 	nm_usuario_resp = nm_usuario_p;

	SELECT  max(nr_atendimento),
			max(cd_pessoa_fisica),
			max(nr_seq_modelo)
	INTO STRICT	nr_atendimento_w,
			cd_pessoa_fisica_w,
			nr_seq_modelo_w
	FROM 	carta_medica
	WHERE	nr_seq_carta_mae = nr_seq_carta_mae_p;
	
	IF (nr_usuario_reg_w > 0) THEN
		SELECT 	MAX(dt_assinatura)
		INTO STRICT	dt_assinatura_w
		FROM 	participante_carta_medica
		WHERE	nr_seq_carta_mae = nr_seq_carta_mae_p
		AND 	nm_usuario_resp = nm_usuario_p;
		
		IF (coalesce(dt_assinatura_w::text, '') = '' AND coalesce(IE_PARTICIPANTE_P::text, '') = '' AND IE_DEVE_ASSINAR_P = 'S') THEN
			dt_assinatura_w := clock_timestamp();
		
			select	max(a.nr_seq_regra)
			into STRICT	nr_seq_regra_w
			from	wl_worklist a,
					wl_item b,
					wl_regra_item c
			where	a.nr_seq_carta_mae = nr_seq_carta_mae_p
			and		b.nr_sequencia = a.nr_seq_item
			and		c.nr_sequencia = a.nr_seq_regra
			and		coalesce(a.dt_final_real::text, '') = ''
			and		b.cd_categoria = 'ML'
			and		c.ie_tipo_pend_carta = 'A'
			and		b.ie_situacao = 'A'
			and		c.ie_situacao = 'A';

			CALL wl_gerar_finalizar_tarefa(	'ML',
										'F',
										nr_atendimento_w,
										cd_pessoa_fisica_w,
										nm_usuario_p,
										NULL,
										'S',
										NULL,
										NULL,
										NULL,
										NULL,
										NULL,
										nr_seq_carta_mae_p,
										NULL,
										NULL,
										NULL,
										nr_seq_regra_w,
										NULL,
										dt_assinatura_w,
										NULL,
										null,
										null,
										null,
										null,
										null,
										null,
										null,
										null);
		
		END IF;
		IF (ie_operacao_p = ConstResponsavelDeveAssinar) THEN
			UPDATE 	participante_carta_medica
			SET		ie_deve_assinar = 'S',
					dt_assinatura = dt_assinatura_w,
					ie_incluso = CASE WHEN IE_PARTICIPANTE_P='F' THEN  'S'  ELSE 'N' END
			WHERE	nr_seq_carta_mae = NR_SEQ_CARTA_MAE_P
			AND 	nm_usuario_resp = nm_usuario_p;
		ELSIF (ie_operacao_p = ConstAssinarPor) THEN
			UPDATE 	participante_carta_medica
			SET		ie_deve_assinar = 'S',
					dt_assinatura = dt_assinatura_w,
					nm_usuario = wheb_usuario_pck.get_nm_usuario,
					ie_incluso = CASE WHEN IE_PARTICIPANTE_P='F' THEN  'S'  ELSE 'N' END
			WHERE	nr_seq_carta_mae = NR_SEQ_CARTA_MAE_P
			AND 	nm_usuario_resp = nm_usuario_p;
		END IF;

		

		select	count(*)
		into STRICT	qt_regra_worklist_w
		FROM 	wl_regra_worklist a,
				wl_regra_item b
		WHERE	a.nr_sequencia = b.nr_seq_regra
		AND		b.ie_situacao = 'A'
		AND		a.nr_seq_item = (	SELECT	MAX(x.nr_sequencia)
									FROM	wl_item x
									WHERE	x.nr_sequencia = a.nr_seq_item
									AND		x.cd_categoria = 'ML'
									AND		x.ie_situacao = 'A')
		AND		coalesce(b.ie_tipo_pend_carta,'A') = 'A';
			
		if (qt_regra_worklist_w > 0) then	
			SELECT  max(nm_usuario_resp)
			INTO STRICT	nm_usuario_pend_w
			FROM    participante_carta_medica
			WHERE   nr_seq_modelo = nr_seq_modelo_w
			AND		nr_seq_assinatura = (SELECT MIN(nr_seq_assinatura)
										 FROM 	participante_carta_medica
										 where	nr_seq_modelo = nr_seq_modelo_w
										 and	nm_usuario_resp IN (SELECT	nm_usuario_resp
																	FROM    participante_carta_medica a,
																			carta_medica b
																	WHERE   a.NR_SEQ_CARTA_MAE = b.nr_sequencia
																	AND     coalesce(a.dt_assinatura::text, '') = ''
																	AND     a.nr_seq_carta = nr_seq_carta_mae_p));
			
			IF (nm_usuario_pend_w IS NOT NULL AND nm_usuario_pend_w::text <> '') THEN
				SELECT  ie_deve_assinar,
						dt_assinatura,
						nm_usuario_assinat,
						ie_incluso
				INTO STRICT    ie_deve_assinar_w,
						dt_assinatura_pend_w,
						nm_usuario_assinat_w,
						ie_incluso_w
				FROM 	participante_carta_medica
				WHERE	nr_seq_carta = nr_seq_carta_mae_p
				AND		nm_usuario_resp = nm_usuario_pend_w;

				FOR r_C01 IN C01 LOOP
					BEGIN
						IF (r_C01.qt_horas_assinar_carta > 0) THEN

							select	count(*)
							into STRICT	qt_pendencias_assinatura_w
							from	wl_worklist a,
									wl_item b,
									wl_regra_item c
							where	a.nr_seq_carta_mae = nr_seq_carta_mae_p
							and		coalesce(a.dt_final_real::text, '') = ''
							and		b.nr_sequencia = a.nr_seq_item
							and		c.nr_sequencia = a.nr_seq_regra
							and		b.cd_categoria = 'ML'
							and		c.ie_tipo_pend_carta = 'A'
							and		b.ie_situacao = 'A'
							and		c.ie_situacao = 'A';
							
							select	max(nr_seq_tipo_admissao_fat),
									max(nr_seq_episodio)
							into STRICT	nr_seq_tipo_adm_fat_w,
									nr_seq_episodio_w
							from	atendimento_paciente
							where	nr_atendimento = nr_atendimento_w;
							if (qt_pendencias_assinatura_w = 0 and obter_se_regra_geracao(r_c01.nr_seq_regra,nr_seq_episodio_w,nr_seq_tipo_adm_fat_w) = 'S') then
								for c05_w in C05 loop
									begin
										cd_pessoa_usuario_w := obter_pf_usuario(c05_w.nm_usuario_w,'C');
										for c06_w in C06 loop
											if (c06_w.ie_aprovacao_dupla = 'N') then
												ie_aprovacao_dupla_w := 'N';
											end if;
											
											CALL wl_gerar_finalizar_tarefa('ML','I',nr_atendimento_w,cd_pessoa_fisica_w,coalesce(nm_usuario_pend_w,nm_usuario_p),(clock_timestamp()+(r_C01.qt_horas_assinar_carta/24)),'S',
											null,null,null,null,null,nr_seq_carta_mae_p,null,null,null,r_c01.nr_seq_regra,null,null,null,null,null,null,null,clock_timestamp(),nr_seq_episodio_w,null,c06_w.cd_medico);
										end loop;
										if (ie_aprovacao_dupla_w = 'N' or ml_obter_permissao_ass_substit(c05_w.nm_usuario_w, coalesce(nm_usuario_pend_w,nm_usuario_p)) = 'S') then
											CALL wl_gerar_finalizar_tarefa('ML','I',nr_atendimento_w,cd_pessoa_fisica_w,coalesce(nm_usuario_pend_w,nm_usuario_p),(clock_timestamp()+(r_C01.qt_horas_assinar_carta/24)),'S',
											null,null,null,null,null,nr_seq_carta_mae_p,null,null,null,r_c01.nr_seq_regra,null,null,null,null,null,null,null,clock_timestamp(),nr_seq_episodio_w,null,obter_pf_usuario(c05_w.nm_usuario_w,'C'));
										end if;
									end;
								end loop;
							commit;
							
							end if;
						END IF;
					END;
				END LOOP;
			end if;
			
			select  coalesce(sum(x.qt_assinado), 0)
			into STRICT	qt_aprovado_w
			from (
						SELECT  count(*) qt_assinado, NR_SEQ_ASSINATURA
						from    PARTICIPANTE_CARTA_MEDICA a
						where	NR_SEQ_CARTA_MAE = nr_seq_carta_mae_p
						and 	coalesce(ie_deve_assinar, 'S') = 'S'
						and		coalesce(dt_assinatura::text, '') = ''
						and		coalesce(NM_USUARIO_ASSINAT::text, '') = ''
						and     not exists (
											SELECT  1
											from    PARTICIPANTE_CARTA_MEDICA  c
											where   c.NR_SEQ_CARTA_MAE = a.NR_SEQ_CARTA_MAE
											and     c.NR_SEQ_ASSINATURA = a.NR_SEQ_ASSINATURA
											and 	coalesce(ie_deve_assinar, 'S') = 'S'
											and		(dt_assinatura IS NOT NULL AND dt_assinatura::text <> '')
											and		(NM_USUARIO_ASSINAT IS NOT NULL AND NM_USUARIO_ASSINAT::text <> '')
											)
						group by NR_SEQ_ASSINATURA
					) x;

			if (pkg_i18n.get_user_locale =  'de_AT') then			
					
					select  max(ie_status_aprovacao)
					into STRICT	ie_status_aprovacao_w
					from 	carta_medica
					where	nr_seq_carta_mae = nr_seq_carta_mae_p;

					select count(nr_sequencia)
					into STRICT  qt_aprovado_carta_w
					from participante_carta_medica
					Where nr_seq_carta_mae = nr_seq_carta_mae_p 
					and ie_deve_assinar = 'S' 
					and (dt_assinatura IS NOT NULL AND dt_assinatura::text <> '');

					if (qt_aprovado_w = 0 and (ie_status_aprovacao_w = 'UA' or ie_status_aprovacao_w = 'EE')) then
						CALL atualizar_status_aprovacao(nr_seq_carta_mae_p, 'AP', 0, nm_usuario_p);
								
					elsif (ie_status_aprovacao_w  = 'EE'and qt_aprovado_carta_w > 0 ) then
						CALL atualizar_status_aprovacao(nr_seq_carta_mae_p, 'UA', 0, nm_usuario_p);
					end if;	 	
			else
					if (qt_aprovado_w = 0) then
						CALL atualizar_status_aprovacao(nr_seq_carta_mae_p, 'AP', 0, nm_usuario_p);
					end if;		
			end if;
		end if;
	ELSE
		select	count(*)
		into STRICT	qt_regra_worklist_w
		FROM 	wl_regra_worklist a,
				wl_regra_item b
		WHERE	a.nr_sequencia = b.nr_seq_regra
		AND		b.ie_situacao = 'A'
		AND		a.nr_seq_item = (	SELECT	MAX(x.nr_sequencia)
									FROM	wl_item x
									WHERE	x.nr_sequencia = a.nr_seq_item
									AND		x.cd_categoria = 'ML'
									AND		x.ie_situacao = 'A')
		AND		coalesce(b.ie_tipo_pend_carta,'A') = 'A';
		
		if (qt_regra_worklist_w > 0) then
			FOR r_C02 IN C02 LOOP
				BEGIN
					IF (r_C02.qt_horas_processo > 0) THEN
						select	count(*)
						into STRICT	qt_pendencias_assinatura_w
						from	wl_worklist a,
								wl_item b,
								wl_regra_item c
						where	a.nr_seq_carta_mae = nr_seq_carta_mae_p
						and		coalesce(a.dt_final_real::text, '') = ''
						and		b.nr_sequencia = a.nr_seq_item
						and		c.nr_sequencia = a.nr_seq_regra
						and		b.cd_categoria = 'ML'
						and		c.ie_tipo_pend_carta = 'A'
						and		b.ie_situacao = 'A'
						and		c.ie_situacao = 'A';
						if (qt_pendencias_assinatura_w = 0) then
							for c05_w in C05 loop
								begin
								cd_pessoa_usuario_w := obter_pf_usuario(c05_w.nm_usuario_w,'C');
								for c06_w in C06 loop
									if (c06_w.ie_aprovacao_dupla = 'N') then
										ie_aprovacao_dupla_w := 'N';
									end if;
									CALL wl_gerar_finalizar_tarefa('ML','I',nr_atendimento_w,cd_pessoa_fisica_w,coalesce(nm_usuario_pend_w,nm_usuario_p),(clock_timestamp()+(r_C02.qt_horas_processo/24)),'S',
									null,null,null,null,null,nr_seq_carta_mae_p,null,null,null,r_C02.nr_seq_regra,null,null,null,null,null,null,null,clock_timestamp(),null,null,c06_w.cd_medico);
								end loop;
								if (ie_aprovacao_dupla_w = 'N' or ml_obter_permissao_ass_substit(c05_w.nm_usuario_w, coalesce(nm_usuario_pend_w,nm_usuario_p)) = 'S') then
									CALL wl_gerar_finalizar_tarefa('ML','I',nr_atendimento_w,cd_pessoa_fisica_w,coalesce(nm_usuario_pend_w,nm_usuario_p),(clock_timestamp()+(r_C02.qt_horas_processo/24)),'S',
										null,null,null,null,null,nr_seq_carta_mae_p,null,null,null,r_C02.nr_seq_regra,null,null,null,null,null,null,null,clock_timestamp(),null,null,obter_pf_usuario(c05_w.nm_usuario_w, 'C'));
								end if;
								end;
							end loop;
							commit;
						
						end if;
					end if;
				end;
			end loop;
		end if;
	
		SELECT	coalesce(MAX(nr_seq_apresent), 0),
				coalesce(MAX(nr_seq_assinatura), 0)
		INTO STRICT	nr_seq_apresent_w,
				nr_seq_assinatura_w
		FROM 	participante_carta_medica
		WHERE	nr_seq_modelo = nr_seq_modelo_w
		and		nm_usuario_resp = nm_usuario_p;
		IF (IE_PARTICIPANTE_P = 'G') THEN
			ie_incluso_w := 'S';
		END IF;
		IF (ie_operacao_p = ConstAssinarPor) THEN
			IF (obter_permissao_ass_med(nm_usuario_p, wheb_usuario_pck.get_nm_usuario, 'S') = 'S') THEN

				INSERT INTO participante_carta_medica(nr_sequencia,
													dt_atualizacao,
													nm_usuario,
													nm_usuario_resp,
													nr_seq_carta,
													nr_seq_carta_mae,
													ie_deve_assinar,
													dt_atualizacao_nrec,
													nm_usuario_nrec,
													nr_seq_apresent,
													nr_seq_assinatura,
													dt_assinatura,
													nm_usuario_assinat,
													ie_incluso)
											VALUES (nextval('participante_carta_medica_seq'),
													clock_timestamp(),
													nm_usuario_p,
													nm_usuario_p,
													nr_seq_carta_p,
													nr_seq_carta_mae_p,
													'S',
													clock_timestamp(),
													nm_usuario_p,
													nr_seq_apresent_w,
													nr_seq_assinatura_w,
													clock_timestamp(),
													wheb_usuario_pck.get_nm_usuario,
													ie_incluso_w);
			END IF;
		ELSIF (ie_operacao_p = ConstResponsavelDeveAssinar) THEN
			INSERT INTO participante_carta_medica(nr_sequencia,
												dt_atualizacao,
												nm_usuario,
												nm_usuario_resp,
												nr_seq_carta,
												nr_seq_carta_mae,
												ie_deve_assinar,
												dt_atualizacao_nrec,
												nm_usuario_nrec,
												nr_seq_apresent,
												nr_seq_assinatura,
												ie_incluso)
										VALUES (nextval('participante_carta_medica_seq'),
												clock_timestamp(),
												nm_usuario_p,
												nm_usuario_p,
												nr_seq_carta_p,
												nr_seq_carta_mae_p,
												'S',
												clock_timestamp(),
												nm_usuario_p,
												nr_seq_apresent_w,
												nr_seq_assinatura_w,
												ie_incluso_w);
		ELSE
			INSERT INTO participante_carta_medica(nr_sequencia,
												dt_atualizacao,
												nm_usuario,
												nm_usuario_resp,
												nr_seq_carta,
												nr_seq_carta_mae,
												ie_deve_assinar,
												dt_atualizacao_nrec,
												nm_usuario_nrec,
												nr_seq_apresent,
												nr_seq_assinatura,
												ie_incluso)
										VALUES (nextval('participante_carta_medica_seq'),
												clock_timestamp(),
												nm_usuario_p,
												nm_usuario_p,
												nr_seq_carta_p,
												nr_seq_carta_mae_p,
												'N',
												clock_timestamp(),
												nm_usuario_p,
												nr_seq_apresent_w,
												nr_seq_assinatura_w ,
												ie_incluso_w);

		END IF;
	END IF;
	
	select 	nr_cirurgia
	into STRICT 	nr_cirurgia_w
	from	carta_medica
	where	nr_sequencia = nr_seq_carta_p;
	
	if (nr_cirurgia_w > 0) then
		for r_C03 in C03 loop
			begin
			select 	coalesce(max('S'), 'N')
			into STRICT	ie_paticipante_carta_w
			from 	participante_carta_medica
			where 	nr_seq_carta = nr_seq_carta_p
			and 	nm_usuario_resp = r_C03.nm_usuario;
			
			if (ie_paticipante_carta_w <> 'S') then
				insert into participante_carta_medica(
					nr_sequencia,
					nr_seq_carta,
					nr_seq_carta_mae,
					dt_atualizacao,
					dt_atualizacao_nrec,
					nm_usuario,
					nm_usuario_nrec,
					nm_usuario_resp,
					ie_deve_assinar
				) 	values (
					nextval('participante_carta_medica_seq'),
					nr_seq_carta_p,
					nr_seq_carta_mae_p,
					clock_timestamp(),
					clock_timestamp(),
					wheb_usuario_pck.get_nm_usuario,
					wheb_usuario_pck.get_nm_usuario,
					r_C03.nm_usuario,
					'S'
				);
			end if;
			
			end;
		end loop;
	end if;
	
	COMMIT;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE add_part_carta_medica ( nr_seq_carta_p bigint, nr_seq_carta_mae_p bigint, nm_usuario_p text, ie_operacao_p text DEFAULT 'IN', IE_PARTICIPANTE_P text DEFAULT NULL, IE_DEVE_ASSINAR_P text DEFAULT NULL) FROM PUBLIC;

