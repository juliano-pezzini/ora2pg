-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_baca_estab_cadastros ( ie_tipo_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE

			 
/* IE_TIPO_P 
	1 - PLS_CLINICA 
	2 - PLS_TIPO_ACOMODACAO 
	3 - PLS_GUIA_MOTIVO_CANCEL 
	4 - PLS_MOTIVO_LIBERACAO 
*/
 
 
nr_seq_registro_w		bigint;
nr_seq_reg_novo_w		bigint;
nr_seq_anterior_w		bigint;
cd_tiss_w			varchar(20);
cd_tipo_acomodacao_w		varchar(20);
ds_motivo_liberacao_w		varchar(255);

C01 CURSOR FOR 
	SELECT	nr_sequencia, 
		cd_tiss 
	from	pls_clinica 
	where	cd_estabelecimento	<> cd_estabelecimento_p;
	
C02 CURSOR FOR 
	SELECT	nr_sequencia, 
		cd_tipo_acomodacao 
	from	pls_tipo_acomodacao 
	where	cd_estabelecimento	<> cd_estabelecimento_p;
	
C03 CURSOR FOR 
	SELECT	nr_sequencia, 
		nr_seq_anterior 
	from	pls_guia_motivo_cancel 
	where	cd_estabelecimento	<> cd_estabelecimento_p;
	
C04 CURSOR FOR 
	SELECT	nr_sequencia, 
		ds_motivo_liberacao 
	from	pls_motivo_liberacao 
	where	cd_estabelecimento	<> cd_estabelecimento_p;


BEGIN 
 
/* PLS_CLINICA */
 
if (ie_tipo_p	= 1) then 
	open C01;
	loop 
	fetch C01 into	 
		nr_seq_registro_w, 
		cd_tiss_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin 
		select	nr_sequencia 
		into STRICT	nr_seq_reg_novo_w 
		from	pls_clinica 
		where	cd_estabelecimento	= cd_estabelecimento_p 
		and	cd_tiss	= cd_tiss_w;
		 
		update	ans_grupo_desp_copartic 
		set	nr_seq_clinica	= nr_seq_reg_novo_w 
		where	nr_seq_clinica	= nr_seq_registro_w;
		 
		update	pls_beneficiario_internado 
		set	nr_seq_clinica	= nr_seq_reg_novo_w 
		where	nr_seq_clinica	= nr_seq_registro_w;
		 
		update	pls_conta 
		set	nr_seq_clinica	= nr_seq_reg_novo_w 
		where	nr_seq_clinica	= nr_seq_registro_w;
		 
		update	pls_coparticipacao_proc 
		set	nr_seq_clinica	= nr_seq_reg_novo_w 
		where	nr_seq_clinica	= nr_seq_registro_w;
		 
		update	pls_guia_plano 
		set	nr_seq_clinica	= nr_seq_reg_novo_w 
		where	nr_seq_clinica	= nr_seq_registro_w;
		 
		update	pls_regra_preco_proc 
		set	nr_seq_clinica	= nr_seq_reg_novo_w 
		where	nr_seq_clinica	= nr_seq_registro_w;
		 
		update	pls_requisicao 
		set	nr_seq_clinica	= nr_seq_reg_novo_w 
		where	nr_seq_clinica	= nr_seq_registro_w;
		 
		update	sip_item_assist_regra 
		set	nr_seq_clinica	= nr_seq_reg_novo_w 
		where	nr_seq_clinica	= nr_seq_registro_w;
		end;
	end loop;
	close C01;
	 
	delete	FROM pls_clinica 
	where	cd_estabelecimento <> cd_estabelecimento_p;
 
	update	tabela_sistema 
	set	ie_restringe_estab	= 'N', 
		ds_sql_lookup	= 'select nr_sequencia cd, ds_clinica ds from pls_clinica where ie_situacao = "A" order by 2,1', 
		nm_usuario	= nm_usuario_p, 
		dt_atualizacao	= clock_timestamp() 
	where	nm_tabela	= 'PLS_CLINICA';
end if;
 
/* PLS_TIPO_ACOMODACAO */
 
if (ie_tipo_p	= 2) then 
	open C02;
	loop 
	fetch C02 into	 
		nr_seq_registro_w, 
		cd_tipo_acomodacao_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin 
		begin 
		select	nr_sequencia 
		into STRICT	nr_seq_reg_novo_w 
		from	pls_tipo_acomodacao 
		where	cd_estabelecimento	= cd_estabelecimento_p 
		and	cd_tipo_acomodacao	= cd_tipo_acomodacao_w;
		exception 
		when others then 
			CALL wheb_mensagem_pck.exibir_mensagem_abort(267415, 
								'CD_ESTABELECIMENTO_P=' || cd_estabelecimento_p||';'|| 
								'CD_TIPO_ACOMODACAO_W=' || cd_tipo_acomodacao_w);
		end;
		 
		update	pls_carencia_proc 
		set	nr_seq_tipo_acomodacao	= nr_seq_reg_novo_w 
		where	nr_seq_tipo_acomodacao	= nr_seq_registro_w;
		 
		update	pls_conta 
		set	nr_seq_tipo_acomodacao	= nr_seq_reg_novo_w 
		where	nr_seq_tipo_acomodacao	= nr_seq_registro_w;
		 
		update	pls_guia_plano 
		set	nr_seq_tipo_acomodacao	= nr_seq_reg_novo_w 
		where	nr_seq_tipo_acomodacao	= nr_seq_registro_w;
		 
		update	pls_pacote_tipo_acomodacao 
		set	nr_seq_tipo_acomodacao	= nr_seq_reg_novo_w 
		where	nr_seq_tipo_acomodacao	= nr_seq_registro_w;
		 
		update	pls_plano_acomodacao 
		set	nr_seq_tipo_acomodacao	= nr_seq_reg_novo_w 
		where	nr_seq_tipo_acomodacao	= nr_seq_registro_w;
		 
		update	pls_regra_autogerado 
		set	nr_seq_tipo_acomodacao	= nr_seq_reg_novo_w 
		where	nr_seq_tipo_acomodacao	= nr_seq_registro_w;
		 
		update	pls_regra_preco_proc 
		set	nr_seq_tipo_acomodacao	= nr_seq_reg_novo_w 
		where	nr_seq_tipo_acomodacao	= nr_seq_registro_w;
		 
		update	pls_requisicao 
		set	nr_seq_tipo_acomodacao	= nr_seq_reg_novo_w 
		where	nr_seq_tipo_acomodacao	= nr_seq_registro_w;
		end;
	end loop;
	close C02;
	 
	delete	FROM pls_tipo_acomodacao 
	where	cd_estabelecimento <> cd_estabelecimento_p;
 
	update	tabela_sistema 
	set	ie_restringe_estab	= 'N', 
		ds_sql_lookup	= 'select nr_sequencia cd, ds_tipo_acomodacao ds from pls_tipo_acomodacao where ie_situacao = "A" order by 2,1', 
		nm_usuario	= nm_usuario_p, 
		dt_atualizacao	= clock_timestamp() 
	where	nm_tabela	= 'PLS_TIPO_ACOMODACAO';
end if;
 
/* PLS_GUIA_MOTIVO_CANCEL */
 
if (ie_tipo_p	= 3) then 
	open C03;
	loop 
	fetch C03 into	 
		nr_seq_registro_w, 
		nr_seq_anterior_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin 
		update	pls_guia_plano 
		set	nr_seq_motivo_cancel	= nr_seq_anterior_w 
		where	nr_seq_motivo_cancel	= nr_seq_registro_w;
		end;
	end loop;
	close C03;
	 
	delete	FROM pls_guia_motivo_cancel 
	where	cd_estabelecimento <> cd_estabelecimento_p;
 
	update	tabela_sistema 
	set	ie_restringe_estab	= 'N', 
		nm_usuario	= nm_usuario_p, 
		dt_atualizacao	= clock_timestamp() 
	where	nm_tabela	= 'PLS_GUIA_MOTIVO_CANCEL';
end if;
 
/* PLS_MOTIVO_LIBERACAO */
 
if (ie_tipo_p	= 4) then 
	open C04;
	loop 
	fetch C04 into	 
		nr_seq_registro_w, 
		ds_motivo_liberacao_w;
	EXIT WHEN NOT FOUND; /* apply on C04 */
		begin 
		begin 
		select	nr_sequencia 
		into STRICT	nr_seq_reg_novo_w 
		from	pls_motivo_liberacao 
		where	cd_estabelecimento	= cd_estabelecimento_p 
		and	ds_motivo_liberacao	= ds_motivo_liberacao_w;
		exception 
		when others then 
			CALL wheb_mensagem_pck.exibir_mensagem_abort(267416, 
								'CD_ESTABELECIMENTO_P=' || cd_estabelecimento_p||';'|| 
								'DS_MOTIVO_LIBERACAO_W=' || ds_motivo_liberacao_w);
 
		end;
		 
		update	pls_auditoria_pessoa 
		set	nr_seq_motivo_lib	= nr_seq_reg_novo_w 
		where	nr_seq_motivo_lib	= nr_seq_registro_w;
		 
		update	pls_guia_motivo_lib 
		set	nr_seq_motivo		= nr_seq_reg_novo_w 
		where	nr_seq_motivo		= nr_seq_registro_w;
		 
		update	pls_guia_plano 
		set	nr_seq_motivo_lib	= nr_seq_reg_novo_w 
		where	nr_seq_motivo_lib	= nr_seq_registro_w;
		end;
	end loop;
	close C04;
	 
	delete	FROM pls_motivo_liberacao 
	where	cd_estabelecimento <> cd_estabelecimento_p;
 
	update	tabela_sistema 
	set	ie_restringe_estab	= 'N', 
		nm_usuario	= nm_usuario_p, 
		dt_atualizacao	= clock_timestamp() 
	where	nm_tabela	= 'PLS_MOTIVO_LIBERACAO';
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_baca_estab_cadastros ( ie_tipo_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

