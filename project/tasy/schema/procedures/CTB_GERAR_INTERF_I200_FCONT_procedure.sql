-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ctb_gerar_interf_i200_fcont ( nr_seq_controle_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, dt_inicio_p timestamp, dt_fim_p timestamp, cd_empresa_p bigint, qt_linha_p INOUT bigint, nr_sequencia_p INOUT bigint) AS $body$
DECLARE



cd_centro_custo_w		varchar(8);
cd_classificacao_w		varchar(40);
cd_conta_contabil_w		varchar(40);
cd_historico_w			bigint;
ds_historico_w			varchar(255);
dt_movimento_w			timestamp;
dt_referencia_w			timestamp;
ie_apres_conta_ctb_w		varchar(15);
ie_debito_credito_w		varchar(1);
ie_tipo_lancamento_w		varchar(2);
ie_tipo_lancamento_ww		varchar(2);
nr_documento_w			varchar(20);
nr_sequencia_w			bigint;
qt_commit_w			bigint	:= 0;
vl_movimento_w			double precision;

nr_linha_w			bigint	:= qt_linha_p;
nr_seq_registro_w		bigint	:= nr_sequencia_p;
ds_arquivo_w			varchar(4000);
ds_compl_arquivo_w		varchar(4000);
ds_linha_w			varchar(8000);
sep_w				varchar(1)	:= '|';
tp_registro_w			varchar(15);
ie_consolida_empresa_w		ctb_regra_sped.ie_consolida_empresa%type;

C01 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.dt_movimento,
		a.vl_movimento,
		a.ie_tipo_lancamento,
		a.dt_referencia
	from	ecd_movimento_contabil_v a
	where	a.tp_registro		= 1
	and	a.cd_empresa		= cd_empresa_p
	and	a.cd_estabelecimento	= cd_estabelecimento_p
	and	ie_consolida_empresa_w	= 'N'
	and	a.dt_referencia	between dt_inicio_p and dt_fim_p
	
union

	SELECT	a.nr_sequencia,
		a.dt_movimento,
		a.vl_movimento,
		a.ie_tipo_lancamento,
		a.dt_referencia
	from	ecd_movimento_contabil_v a,
		estabelecimento b
	where	a.tp_registro		= 1
	and	a.cd_empresa		= cd_empresa_p
	and	a.cd_estabelecimento	= b.cd_estabelecimento
	and	coalesce(ie_gerar_sped,'S')	=	'S'
	and	ie_consolida_empresa_w	= 'S'
	and	a.dt_referencia	between dt_inicio_p and dt_fim_p;

C02 CURSOR FOR
	SELECT	a.cd_conta_contabil,
		a.cd_classificacao,
		a.cd_centro_custo,
		a.vl_movimento,
		a.ie_debito_credito,
		a.nr_documento,
		a.cd_historico,
		a.ds_historico
	from	ecd_movimento_contabil_v a
	where	a.tp_registro		= 2
	and	a.cd_empresa		= cd_empresa_p
	and	a.cd_estabelecimento	= cd_estabelecimento_p
	and	ie_consolida_empresa_w	= 'N'
	and	a.dt_referencia		= dt_referencia_w
	and	a.dt_movimento		= dt_movimento_w
	and	a.ie_tipo_lancamento	= ie_tipo_lancamento_ww
	
union

	SELECT	a.cd_conta_contabil,
		a.cd_classificacao,
		a.cd_centro_custo,
		a.vl_movimento,
		a.ie_debito_credito,
		a.nr_documento,
		a.cd_historico,
		a.ds_historico
	from	ecd_movimento_contabil_v a,
		estabelecimento b
	where	b.cd_estabelecimento	= a.cd_estabelecimento
	and	b.cd_empresa		= a.cd_empresa
	and	a.tp_registro		= 2
	and	b.cd_empresa		= cd_empresa_p
	and	coalesce(b.ie_gerar_sped,'S') = 'S'
	and	ie_consolida_empresa_w	= 'S'
	and	a.dt_referencia		= dt_referencia_w
	and	a.dt_movimento		= dt_movimento_w
	and	a.ie_tipo_lancamento	= ie_tipo_lancamento_ww;


BEGIN
select	coalesce(max(a.ie_apres_conta_ctb), 'CD'),
	coalesce(max(a.ie_consolida_empresa), 'N')
into STRICT	ie_apres_conta_ctb_w,
	ie_consolida_empresa_w
from	ctb_regra_sped		a,
	ctb_sped_controle	b
where	b.nr_seq_regra_sped 	= a.nr_sequencia
and	b.nr_sequencia		= nr_seq_controle_p;

open C01;
loop
fetch C01 into
	nr_sequencia_w,
	dt_movimento_w,
	vl_movimento_w,
	ie_tipo_lancamento_w,
	dt_referencia_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	ie_tipo_lancamento_ww	:= ie_tipo_lancamento_w;

	if (ie_tipo_lancamento_w = 'N') then
		ie_tipo_lancamento_w	:= 'X';
	elsif (ie_tipo_lancamento_w = 'E') then
		ie_tipo_lancamento_w	:= 'EF';
	end if;

	tp_registro_w		:= 'I200';
	ds_linha_w		:= substr(	sep_w || tp_registro_w				||
					sep_w || nr_sequencia_w 				||
					sep_w || to_char(dt_movimento_w,'ddmmyyyy') 		||
					sep_w || sped_obter_campo_valor(vl_movimento_w)	||
					sep_w || ie_tipo_lancamento_w 			|| sep_w,1,8000);

	ds_arquivo_w		:= substr(ds_linha_w,1,4000);
	ds_compl_arquivo_w	:= substr(ds_linha_w,4001,4000);
	nr_seq_registro_w	:= nr_seq_registro_w + 1;
	nr_linha_w		:= nr_linha_w + 1;
	qt_commit_w		:= qt_commit_w + 1;

	insert into ctb_sped_registro(nr_sequencia,
		ds_arquivo,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_seq_controle_sped,
		ds_arquivo_compl,
		cd_registro,
		nr_linha,
		nr_doc_origem)
	values (nr_seq_registro_w,
		ds_arquivo_w,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		nr_seq_controle_p,
		ds_compl_arquivo_w,
		tp_registro_w,
		nr_linha_w,
		nr_sequencia_w);

	if (qt_commit_w >= 1000) then
		commit;
		qt_commit_w	:= 0;
	end if;

	ie_tipo_lancamento_w	:= 'N';

	open C02;
	loop
	fetch C02 into
		cd_conta_contabil_w,
		cd_classificacao_w,
		cd_centro_custo_w,
		vl_movimento_w,
		ie_debito_credito_w,
		nr_documento_w,
		cd_historico_w,
		ds_historico_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		tp_registro_w	:= 'I250';
		ds_historico_w	:= replace(ds_historico_w,chr(9),'');

		if (ie_apres_conta_ctb_w = 'CL') then
			cd_conta_contabil_w	:= cd_classificacao_w;
		elsif (ie_apres_conta_ctb_w = 'CP') then
			cd_conta_contabil_w	:= substr(replace(cd_classificacao_w,'.',''),1,40);
		end if;


		ds_linha_w	:= substr(	sep_w || tp_registro_w				||
						sep_w || cd_conta_contabil_w 			||
						sep_w || cd_centro_custo_w 				||
						sep_w || sped_obter_campo_valor(vl_movimento_w)	||
						sep_w || ie_debito_credito_w 				||
						sep_w || nr_documento_w 				||
						sep_w || cd_historico_w 				||
						sep_w || ds_historico_w 				||
						sep_w || ''						|| sep_w, 1,8000);

		ds_arquivo_w		:= substr(ds_linha_w,1,4000);
		ds_compl_arquivo_w	:= substr(ds_linha_w,4001,4000);
		nr_seq_registro_w	:= nr_seq_registro_w + 1;
		nr_linha_w		:= nr_linha_w + 1;
		qt_commit_w		:= qt_commit_w + 1;

		insert into ctb_sped_registro(nr_sequencia,
			ds_arquivo,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_controle_sped,
			ds_arquivo_compl,
			cd_registro,
			nr_linha)
		values (nr_seq_registro_w,
			ds_arquivo_w,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_controle_p,
			ds_compl_arquivo_w,
			tp_registro_w,
			nr_linha_w);

		if (qt_commit_w >= 1000) then
			commit;
			qt_commit_w	:= 0;
		end if;

		end;
	end loop;
	close C02;
	end;
end loop;
close C01;

commit;

qt_linha_p	:= nr_linha_w;
nr_sequencia_p	:= nr_seq_registro_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_gerar_interf_i200_fcont ( nr_seq_controle_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, dt_inicio_p timestamp, dt_fim_p timestamp, cd_empresa_p bigint, qt_linha_p INOUT bigint, nr_sequencia_p INOUT bigint) FROM PUBLIC;

