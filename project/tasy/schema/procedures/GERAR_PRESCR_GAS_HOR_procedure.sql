-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_prescr_gas_hor ( nr_prescricao_p bigint, nm_usuario_p text, ie_liberar_p text, nr_sequencia_p bigint default null, ie_lib_parcial_p text default 'N') AS $body$
DECLARE

					
k						integer;
nr_seq_gasoterapia_w	bigint;
nr_atendimento_w		bigint;
dt_horario_gas_w		timestamp;
dt_lib_horario_w		timestamp;
cd_estabelecimento_w	smallint;
ds_horarios_w			varchar(4000);
ds_hora_gas_w			varchar(2000);
qt_dia_adic_w			bigint := 0;
nr_seq_horario_w		bigint;
nr_etapa_w				smallint := 0;
ie_inicio_w				varchar(15);
ie_dose_especial_w		varchar(2);
dt_prev_execucao_w		timestamp;
qt_incons_gas_w			bigint;
					
C01 CURSOR FOR
SELECT	a.nr_sequencia,
		coalesce(a.dt_prev_execucao,b.dt_inicio_prescr),
		a.ds_horarios,
		a.ie_inicio
from	prescr_gasoterapia a,
		prescr_medica b
where	a.nr_prescricao = b.nr_prescricao
and		b.nr_prescricao = nr_prescricao_p
and		((coalesce(nr_sequencia_p::text, '') = '') or (a.nr_sequencia = nr_sequencia_p))
and		coalesce(b.dt_suspensao::text, '') = ''
and		coalesce(a.ie_gerar_horario, 'S') <> 'N'
and 	not exists	(	SELECT	1
						from	prescr_gasoterapia_hor x
						where	a.nr_sequencia = x.nr_seq_gasoterapia
						and		((x.dt_lib_horario IS NOT NULL AND x.dt_lib_horario::text <> '') or (x.dt_suspensao IS NOT NULL AND x.dt_suspensao::text <> ''))
						and		x.nr_prescricao = a.nr_prescricao);


BEGIN

delete	
from	prescr_gasoterapia_hor
where	nr_prescricao = nr_prescricao_p
and		coalesce(dt_lib_horario::text, '') = ''
and		coalesce(dt_suspensao::text, '') = ''
and		((coalesce(nr_sequencia_p::text, '') = '') or (nr_seq_gasoterapia = nr_sequencia_p));

if (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') then
	-- Obter os dados da prescricao
	select	max(nr_atendimento),
			max(cd_estabelecimento)
	into STRICT	nr_atendimento_w,
			cd_estabelecimento_w
	from	prescr_medica
	where	nr_prescricao = nr_prescricao_p;
	
	select	count(nr_sequencia)
	into STRICT	qt_incons_gas_w
	from	prescr_gasoterapia
	where 	nr_prescricao = nr_prescricao_p
	and		(nr_seq_inconsistencia IS NOT NULL AND nr_seq_inconsistencia::text <> '');
	
	if (ie_lib_parcial_p = 'S' AND qt_incons_gas_w > 0) then
		dt_lib_horario_w := null;
	elsif (ie_liberar_p = 'S') then
		dt_lib_horario_w := clock_timestamp();
	end if;
	
	open C01;
	loop
	fetch C01 into
		nr_seq_gasoterapia_w,
		dt_prev_execucao_w,
		ds_horarios_w,
		ie_inicio_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		qt_dia_adic_w	:= 0;
		nr_etapa_w 	:= 0;

		ds_horarios_w	:= padroniza_horario_prescr(ds_horarios_w, to_char(dt_prev_execucao_w,'dd/mm/yyyy hh24:mi'));

		if (ds_horarios_w IS NOT NULL AND ds_horarios_w::text <> '') then
			begin
			while(ds_horarios_w IS NOT NULL AND ds_horarios_w::text <> '') loop
				begin
				k	:= position(' ' in ds_horarios_w);
				
				if (k > 1) and ((substr(ds_horarios_w, 1, k -1) IS NOT NULL AND (substr(ds_horarios_w, 1, k -1))::text <> '')) then
					ds_hora_gas_w			:= substr(ds_horarios_w, 1, k-1);
					ds_hora_gas_w			:= replace(ds_hora_gas_w, ' ','');
					ds_horarios_w	:= substr(ds_horarios_w, k + 1, 2000);
				elsif (ds_horarios_w IS NOT NULL AND ds_horarios_w::text <> '') then
					ds_hora_gas_w			:= replace(ds_horarios_w,' ','');
					ds_horarios_w	:= '';
				end if;
				
				if (position('A' in ds_hora_gas_w) > 0) and (qt_dia_adic_w = 0) then
					qt_dia_adic_w	:= 1;
				elsif (position('AA' in ds_hora_gas_w) > 0) then
					qt_dia_adic_w	:= qt_dia_adic_w + 1;
				end if;

				ds_hora_gas_w := replace(ds_hora_gas_w,'A','');
				dt_horario_gas_w := pkg_date_utils.get_time(dt_prev_execucao_w + qt_dia_adic_w, trim(both ds_hora_gas_w), 0);

				select	nextval('prescr_gasoterapia_hor_seq')
				into STRICT	nr_seq_horario_w
				;

				if (ie_inicio_w = 'ACM') or (ie_inicio_w = 'D') then
					ie_dose_especial_w := 'S';
					nr_etapa_w := null;
				else
					ie_dose_especial_w := 'N';
				end if;

				if (ie_dose_especial_w = 'N') then
					nr_etapa_w := nr_etapa_w + 1;
				end if;

				insert into prescr_gasoterapia_hor(	nr_sequencia,
										dt_atualizacao,
										nm_usuario,
										dt_atualizacao_nrec,
										nm_usuario_nrec,
										nr_seq_gasoterapia,
										dt_horario,
										dt_fim_horario,
										dt_suspensao,
										nm_usuario_adm,
										nm_usuario_susp,
										nr_prescricao,
										dt_lib_horario,
										nr_etapa,
										ie_horario_especial)
									values (	nr_seq_horario_w,
										clock_timestamp(),
										nm_usuario_p,
										clock_timestamp(),
										nm_usuario_p,
										nr_seq_gasoterapia_w,
										dt_horario_gas_w,
										null,
										null,
										null,
										null,
										nr_prescricao_p,
										dt_lib_horario_w,
										nr_etapa_w,
										ie_dose_especial_w);
				end;
			end loop;
			end;
		else
			begin
			if (ie_inicio_w = 'ACM') or (ie_inicio_w = 'D') then
				ie_dose_especial_w := 'S';
				nr_etapa_w := null;
			else
				ie_dose_especial_w := 'N';
				nr_etapa_w := 1; --null; --OS 1118146
			end if;
			
			select	coalesce(max(dt_inicio_prescr),clock_timestamp())
			into STRICT	dt_horario_gas_w
			from	prescr_medica
			where	nr_prescricao = nr_prescricao_p;
			
			select	nextval('prescr_gasoterapia_hor_seq')
			into STRICT	nr_seq_horario_w
			;
			
			insert into prescr_gasoterapia_hor(	nr_sequencia,
								dt_atualizacao,
								nm_usuario,
								dt_atualizacao_nrec,
								nm_usuario_nrec,
								nr_seq_gasoterapia,
								dt_horario,
								dt_fim_horario,
								dt_suspensao,
								nm_usuario_adm,
								nm_usuario_susp,
								nr_prescricao,
								dt_lib_horario,
								nr_etapa,
								ie_horario_especial)
							values (	nr_seq_horario_w,
								clock_timestamp(),
								nm_usuario_p,
								clock_timestamp(),
								nm_usuario_p,
								nr_seq_gasoterapia_w,
								dt_horario_gas_w,
								null,
								null,
								null,
								null,
								nr_prescricao_p,
								dt_lib_horario_w,
								nr_etapa_w,
								ie_dose_especial_w);
			end;
		end if;
		end;
	end loop;
	close C01;
end if;

if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_prescr_gas_hor ( nr_prescricao_p bigint, nm_usuario_p text, ie_liberar_p text, nr_sequencia_p bigint default null, ie_lib_parcial_p text default 'N') FROM PUBLIC;

