-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_oc_solic_contrato ( nr_solic_compra_p bigint, nr_seq_contrato_p bigint, cd_comprador_p text, dt_ordem_p timestamp, dt_inclusao_p timestamp, dt_entrega_p timestamp, cd_estabelecimento_p bigint, cd_setor_atendimento_p bigint, ie_frete_p text, cd_moeda_p bigint, ie_aviso_chegada_p text, ie_emite_obs_p text, ie_urgente_p text, nm_usuario_p text, nr_seq_tipo_compra_p bigint, nr_seq_mod_compra_p bigint, ie_entrega_solic_p text, nr_ordem_compra_p INOUT bigint) AS $body$
DECLARE


cd_cgc_contratado_w		varchar(14);
cd_pessoa_contratada_w		varchar(10);
cd_condicao_pagamento_w		bigint;
cd_unidade_medida_compra_w	varchar(30);
cd_material_w			integer;
cd_conta_contabil_w		varchar(20);
cd_centro_custo_w			integer;
cd_centro_custo_ww			integer;
nr_seq_crit_rateio_w		bigint;
nr_seq_conta_financ_w		bigint;
qt_material_w			double precision;
vl_pagto_w			double precision;
nr_ordem_compra_w		bigint;
nr_item_oci_w			integer;
ie_tipo_conta_w			integer	:= 2;
nr_seq_proj_rec_w			bigint;
cd_pessoa_solicitante_w		varchar(10);
cd_local_estoque_w		smallint;
nr_item_solic_compra_w		integer;
nr_seq_regra_contrato_w		bigint;
qt_entrega_solicitada_w		double precision;
dt_entrega_solicitada_w		timestamp;
dt_entrega_w			timestamp;
ds_observacao_item_w		solic_compra_item.ds_observacao%type;
ds_observacao_w			solic_compra.ds_observacao%type;
ie_somente_pagto_w		ordem_compra.ie_somente_pagto%type;
cd_estabelecimento_w		estabelecimento.cd_estabelecimento%type;
ie_aplica_tributos_oc_w		varchar(15);
cd_tributo_w			contrato_regra_pagto_trib.cd_tributo%type;
vl_tributo_w			contrato_regra_pagto_trib.vl_tributo%type;
pr_tributo_w			contrato_regra_pagto_trib.pr_tributo%type;
ie_corpo_item_w			contrato_regra_pagto_trib.ie_corpo_item%type;
ie_centro_custo_oc_contr_w	parametro_compras.ie_centro_custo_oc_contr%type;
pr_desc_financ_w		contrato_regra_pagto.pr_desc_financ%type;

/* Shift  + F11 = 'Regra para consistencia do item disp. mercado' */

qt_existe_regra_disp_mer_w		bigint;
ie_acao_disp_mercado_w		varchar(1) := 'N';

/* Verifica se foi gerado itens na ordem de compra. Caso nao, vai deletar a ordem vazia */

qt_itens_gerados_w			bigint;

c01 CURSOR FOR
SELECT	a.cd_material,
	a.qt_material,
	a.vl_unit_previsto,
	a.cd_unidade_medida_compra,
	a.nr_item_solic_compra,
	a.nr_seq_proj_rec,
	a.nr_seq_regra_contrato,
	a.ds_observacao
from	solic_compra_item a
where	a.nr_solic_compra = nr_solic_compra_p;

c02 CURSOR FOR
SELECT	dt_entrega_solicitada,
	qt_entrega_solicitada
from	solic_compra_item_entrega
where	nr_solic_compra = nr_solic_compra_p
and	nr_item_solic_compra = nr_item_solic_compra_w
and	ie_entrega_solic_p = 'S';

c03 CURSOR FOR
SELECT	cd_tributo,
	vl_tributo,
	pr_tributo,
	ie_corpo_item
from	contrato_regra_pagto_trib
where	nr_seq_regra_nf = nr_seq_regra_contrato_w;


BEGIN
/* Shift  + F11 = 'Regra para consistencia do item disp. mercado' */

delete from w_consist_disp_mercado
where nm_usuario = nm_usuario_p
and   cd_funcao = 917;
commit;

select	a.cd_centro_custo,
	a.cd_local_estoque,
	a.cd_pessoa_solicitante,
	a.ds_observacao,
	a.cd_estabelecimento
into STRICT	cd_centro_custo_w,
	cd_local_estoque_w,
	cd_pessoa_solicitante_w,
	ds_observacao_w,
	cd_estabelecimento_w
from	solic_compra a
where	a.nr_solic_compra = nr_solic_compra_p;

select (max(obter_valor_param_usuario(913, 289, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w)))
into STRICT	ie_aplica_tributos_oc_w
;

select	cd_cgc_contratado,
	cd_pessoa_contratada,
	cd_condicao_pagamento,
	ie_somente_oc_pagto
into STRICT	cd_cgc_contratado_w,
	cd_pessoa_contratada_w,
	cd_condicao_pagamento_w,
	ie_somente_pagto_w
from	contrato
where	nr_sequencia = nr_seq_contrato_p;

select 	obter_desconto_financ_contr(nr_seq_contrato_p)
into STRICT   	pr_desc_financ_w
;

if (coalesce(cd_condicao_pagamento_w::text, '') = '') then
	/*(-20011,'Nao existe condicao de pagamento informada no contrato selecionado.');*/

	CALL wheb_mensagem_pck.exibir_mensagem_abort(196102);
end if;

if (coalesce(cd_cgc_contratado_w::text, '') = '') and (coalesce(cd_pessoa_contratada_w::text, '') = '') then
	/*(-20011,'Nao existe pessoa fisica ou juridica informada no contrato para a geracao da ordem de compras.');*/

	CALL wheb_mensagem_pck.exibir_mensagem_abort(196105);
end if;

select	nextval('ordem_compra_seq')
into STRICT	nr_ordem_compra_w
;

if (ie_entrega_solic_p = 'S') then
	dt_entrega_w	:= clock_timestamp();
else
	dt_entrega_w	:= dt_entrega_p;
end if;

insert into ordem_compra(
	nr_ordem_compra,
	cd_estabelecimento,
	cd_cgc_fornecedor,
	cd_condicao_pagamento,
	cd_comprador,
	dt_ordem_compra,
	dt_atualizacao,
	nm_usuario,
	cd_moeda,
	ie_situacao,
	dt_inclusao,
	cd_pessoa_solicitante,
	ie_frete,
	vl_frete,
	pr_desconto,
	pr_desc_pgto_antec,
	pr_juros_negociado,
	dt_entrega,
	ie_aviso_chegada,
	cd_pessoa_fisica,
	ie_emite_obs,
	ie_urgente,
	cd_setor_atendimento,
	pr_desc_financeiro,
	vl_desconto,
	ie_somente_pagto,
	ie_tipo_ordem,
	cd_local_entrega,
	nr_seq_tipo_compra,
	nr_seq_mod_compra,
	ds_observacao)
values (	nr_ordem_compra_w,
	cd_estabelecimento_p,
	cd_cgc_contratado_w,
	cd_condicao_pagamento_w,
	cd_comprador_p,
	coalesce(dt_ordem_p,clock_timestamp()),
	clock_timestamp(),
	nm_usuario_p,
	cd_moeda_p,
	'A',
	coalesce(dt_inclusao_p,clock_timestamp()),
	cd_pessoa_solicitante_w,
	coalesce(ie_frete_p,clock_timestamp()),
	0,
	0,
	0,
	0,
	dt_entrega_w,
	ie_aviso_chegada_p,
	cd_pessoa_contratada_w,
	ie_emite_obs_p,
	ie_urgente_p,
	cd_setor_atendimento_p,
	pr_desc_financ_w,
	0,
	coalesce(ie_somente_pagto_w,'N'),
	'C',
	cd_local_estoque_w,
	nr_seq_tipo_compra_p,
	nr_seq_mod_compra_p,
	substr(ds_observacao_w,1,4000));
	
open C01;
loop
fetch C01 into	
	cd_material_w,
	qt_material_w,
	vl_pagto_w,
	cd_unidade_medida_compra_w,
	nr_item_solic_compra_w,
	nr_seq_proj_rec_w,
	nr_seq_regra_contrato_w,
	ds_observacao_item_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	
	cd_conta_contabil_w := '';
	/* Verifica se possui evento na 'Regra para consistencia do item disp. mercado' */

	select	count(*)
	into STRICT	qt_existe_regra_disp_mer_w
	from	consiste_disp_mercado
	where	cd_evento = 'OS';

	if (qt_existe_regra_disp_mer_w > 0) then
		begin
		/* Verifica se possui evento na 'Regra para consistencia do item disp. mercado', e se o material esta disponivel no mercado */

		select  substr(obter_acao_regra_disp_mercado('OS', cd_material_w, null, cd_estabelecimento_p),1,1) ie_acao_regra
		into STRICT	ie_acao_disp_mercado_w
		;

		if (ie_acao_disp_mercado_w <> 'N') then
			begin
			CALL grava_consiste_disp_mercado( 917,
						     cd_material_w,
						     nm_usuario_p,
						     ie_acao_disp_mercado_w);
			end;
		end if;

		end;
	end if;

	if (ie_acao_disp_mercado_w in ('M', 'N')) then
		begin
		select	coalesce(max(nr_item_oci),0) + 1
		into STRICT	nr_item_oci_w
		from	ordem_compra_item
		where	nr_ordem_compra = nr_ordem_compra_w;
		
		if (nr_seq_contrato_p > 0) and (coalesce(nr_seq_regra_contrato_w,0) = 0) then
		
			select	coalesce(max(nr_sequencia),0)
			into STRICT	nr_seq_regra_contrato_w
			from	contrato_regra_nf
			where	nr_seq_contrato = nr_seq_contrato_p
			and	cd_material = cd_material_w;		
		end if;
		
		if (nr_seq_regra_contrato_w > 0) then
		
			select 	max(coalesce(ie_centro_custo_oc_contr,'SC'))
			into STRICT 	ie_centro_custo_oc_contr_w		
			from 	parametro_compras
			where 	cd_estabelecimento = cd_estabelecimento_p;
		
			if (ie_centro_custo_oc_contr_w = 'CO') then
				select	cd_centro_custo
				into STRICT	cd_centro_custo_w
				from	contrato_regra_nf
				where	nr_sequencia = nr_seq_regra_contrato_w;
			end if;
			
			select	cd_conta_contabil
			into STRICT	cd_conta_contabil_w
			from	contrato_regra_nf
			where	nr_sequencia = nr_seq_regra_contrato_w;
		
		end if;
		
		cd_centro_custo_ww := cd_centro_custo_w;
		
		if (coalesce(cd_conta_contabil_w::text, '') = '') then
			if (coalesce(cd_centro_custo_w::text, '') = '') then
				ie_tipo_conta_w	:= 2;
			else
				ie_tipo_conta_w	:= 3;
			end if;

			SELECT * FROM define_conta_material(	cd_estabelecimento_p, cd_material_w, ie_tipo_conta_w, null, null, null, null, null, null, null, cd_local_estoque_w, Null, dt_ordem_p, cd_conta_contabil_w, cd_centro_custo_w, null) INTO STRICT cd_conta_contabil_w, cd_centro_custo_w;
		end if;	

		insert into ordem_compra_item(
			nr_ordem_compra,
			nr_item_oci,
			cd_material,
			cd_unidade_medida_compra,
			vl_unitario_material,
			qt_material,
			qt_original,
			dt_atualizacao,
			nm_usuario,
			ie_situacao,
			cd_pessoa_solicitante,
			pr_descontos,
			cd_local_estoque,
			vl_item_liquido,
			cd_centro_custo,
			cd_conta_contabil,
			pr_desc_financ,
			vl_desconto,
			ie_geracao_solic,
			nr_contrato,
			nr_seq_proj_rec,
			nr_solic_compra,
			nr_item_solic_compra,
			ds_observacao,
			vl_total_item,
			cd_sequencia_parametro)
		values (	nr_ordem_compra_w,
			nr_item_oci_w,
			cd_material_w,
			cd_unidade_medida_compra_w,
			vl_pagto_w,
			qt_material_w,
			qt_material_w,
			clock_timestamp(),
			nm_usuario_p,
			'A',
			cd_pessoa_solicitante_w,
			0,
			cd_local_estoque_w,
			vl_pagto_w,
			cd_centro_custo_ww,
			cd_conta_contabil_w,
			0,
			0,
			'U',
			nr_seq_contrato_p,
			nr_seq_proj_rec_w,
			nr_solic_compra_p,
			nr_item_solic_compra_w,
			substr(ds_observacao_item_w,1,255),
			round((qt_material_w * vl_pagto_w)::numeric,4),
			philips_contabil_pck.get_parametro_conta_contabil);
			
		if (ie_aplica_tributos_oc_w = 'S') and (nr_seq_regra_contrato_w > 0) then
		
			open C03;
			loop
			fetch C03 into	
				cd_tributo_w,
				vl_tributo_w,
				pr_tributo_w,
				ie_corpo_item_w;
			EXIT WHEN NOT FOUND; /* apply on C03 */
				begin
				insert into ordem_compra_item_trib(
					nr_ordem_compra,
					nr_item_oci,
					cd_tributo,
					pr_tributo,
					vl_tributo,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					ie_corpo_item)
				values (	nr_ordem_compra_w,
					nr_item_oci_w,
					cd_tributo_w,
					pr_tributo_w,
					vl_tributo_w,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					ie_corpo_item_w);
				end;
			end loop;
			close C03;
		end if;
			
			
		if (ie_entrega_solic_p = 'S')	 then
			begin

			open C02;
			loop
			fetch C02 into	
				dt_entrega_solicitada_w,
				qt_entrega_solicitada_w;
			EXIT WHEN NOT FOUND; /* apply on C02 */
				begin
				
				
				insert into ordem_compra_item_entrega(
					nr_ordem_compra,
					nr_item_oci,
					dt_prevista_entrega,
					qt_prevista_entrega,
					dt_atualizacao,
					nm_usuario,
					nr_sequencia)
				values (	nr_ordem_compra_w,
					nr_item_oci_w,
					dt_entrega_solicitada_w,
					qt_entrega_solicitada_w,
					clock_timestamp(),
					nm_usuario_p,
					nextval('ordem_compra_item_entrega_seq'));
				end;
			end loop;
			close C02;

			end;
		else
			begin

			insert into ordem_compra_item_entrega(
				nr_ordem_compra,
				nr_item_oci,
				dt_prevista_entrega,
				qt_prevista_entrega,
				dt_atualizacao,
				nm_usuario,
				nr_sequencia)
			values (	nr_ordem_compra_w,
				nr_item_oci_w,
				dt_entrega_w,
				qt_material_w,
				clock_timestamp(),
				nm_usuario_p,
				nextval('ordem_compra_item_entrega_seq'));

			end;
		end if;

		qt_itens_gerados_w := coalesce(qt_itens_gerados_w,0) + 1;
		end;
	end if;
	end;
end loop;
close C01;

if (ie_entrega_solic_p = 'S') then
	begin

	select	min(dt_prevista_entrega)
	into STRICT	dt_entrega_w
	from	ordem_compra_item_entrega
	where	nr_ordem_compra = nr_ordem_compra_w;

	update	ordem_compra
	set	dt_entrega = dt_entrega_w
	where	nr_ordem_compra = nr_ordem_compra_w;

	end;
end if;

CALL Gerar_Ordem_Compra_Venc(nr_ordem_compra_w, nm_usuario_p);

if (coalesce(qt_itens_gerados_w,0) = 0) and (nr_ordem_compra_w > 0) then
	delete from ordem_compra
	where	nr_ordem_compra = nr_ordem_compra_w;
	nr_ordem_compra_w := 0;
end if;
commit;

nr_ordem_compra_p	:= nr_ordem_compra_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_oc_solic_contrato ( nr_solic_compra_p bigint, nr_seq_contrato_p bigint, cd_comprador_p text, dt_ordem_p timestamp, dt_inclusao_p timestamp, dt_entrega_p timestamp, cd_estabelecimento_p bigint, cd_setor_atendimento_p bigint, ie_frete_p text, cd_moeda_p bigint, ie_aviso_chegada_p text, ie_emite_obs_p text, ie_urgente_p text, nm_usuario_p text, nr_seq_tipo_compra_p bigint, nr_seq_mod_compra_p bigint, ie_entrega_solic_p text, nr_ordem_compra_p INOUT bigint) FROM PUBLIC;

