-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_intervensao_padrao ( nr_sequencia_p bigint, nr_seq_proc_p bigint, nm_usuario_p text) AS $body$
DECLARE




nr_seq_diag_w		bigint;
nr_seq_proc_w		bigint;
nr_sequencia_w		bigint;
qt_existe_w		bigint;
nr_seq_result_w		bigint;
cd_intervalo_w		varchar(7);
ds_horario_padrao_w	varchar(2000);
nr_seq_probl_colab_w	bigint;
ds_observacao_padr_w	varchar(255);
ie_adep_w		varchar(1);
vl_prim_hor_w		varchar(15);
hr_prim_horario_w		timestamp;
nr_intervalo_w		real;
ds_horarios_w		varchar(2000);
dt_prescricao_w		timestamp;
ds_prim_horario_w		varchar(255);
ie_se_necessario_w		varchar(1);
ie_auxiliar_w       	varchar(10);
ie_encaminhar_w     	varchar(10);
ie_fazer_w          	varchar(10);
ie_orientar_w       	varchar(10);
ie_supervisionar_w   	varchar(10);

C01 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.cd_intervalo,
		a.ds_horario_padrao,
		a.ds_observacao_padr,
		a.ie_adep,
		a.ie_auxiliar    ,
		a.ie_encaminhar  ,     
		a.ie_fazer       ,     
		a.ie_orientar    ,     
		a.ie_supervisionar
	FROM	pe_procedimento a
	WHERE	a.nr_sequencia	= nr_seq_proc_p
	AND	NOT EXISTS (	SELECT	1
					FROM	pe_prescr_proc x
					WHERE	x.nr_seq_prescr	= nr_sequencia_p
					AND	x.nr_seq_proc	= a.nr_sequencia);

BEGIN


vl_prim_hor_w := obter_param_usuario(281, 325, obter_perfil_ativo, nm_usuario_p, 0, vl_prim_hor_w);

OPEN C01;
LOOP
FETCH C01 INTO
	nr_seq_proc_w,
	cd_intervalo_w,
	ds_horario_padrao_w,
	ds_observacao_padr_w,
	ie_adep_w,
	ie_auxiliar_w    ,
	ie_encaminhar_w  ,     
	ie_fazer_w       ,     
	ie_orientar_w    ,     
	ie_supervisionar_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	BEGIN
	SELECT	nextval('pe_prescr_proc_seq')
	INTO STRICT	nr_sequencia_w
	;

	IF (vl_prim_hor_w = '1') THEN
		hr_prim_horario_w	:= TO_DATE(TO_CHAR(clock_timestamp(),'dd/mm/yyyy') || obter_primeiro_horario_sae(cd_intervalo_w,	nr_sequencia_p),'dd/mm/yyyy hh24:mi:ss');
	ELSIF (vl_prim_hor_w = '2') THEN
		hr_prim_horario_w 	:= TRUNC(dt_prescricao_w + (1/24),'hh24');
	END IF;

	IF (hr_prim_horario_w IS NOT NULL AND hr_prim_horario_w::text <> '') THEN
		SELECT * FROM calcular_horario_intervencao(cd_intervalo_w, hr_prim_horario_w, 24, nr_intervalo_w, ds_horarios_w, ds_prim_horario_w, ie_se_necessario_w, nr_sequencia_p) INTO STRICT nr_intervalo_w, ds_horarios_w, ds_prim_horario_w, ie_se_necessario_w;
		IF (coalesce(ds_horario_padrao_w::text, '') = '') THEN
			ds_horario_padrao_w	:= ds_horarios_w;
		END IF;
	END IF;

	INSERT INTO pe_prescr_proc(
		nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		nr_seq_proc,
		nr_seq_prescr,
		qt_pontuacao,
		ds_origem,
		nr_seq_apres,
		cd_intervalo,
		ds_horarios,
		qt_intervencao,
		ie_se_necessario,
		ds_observacao,
		ie_suspenso,
		ie_adep,
		hr_prim_horario,
		ie_auxiliar    ,
		ie_encaminhar  ,     
		ie_fazer       ,     
		ie_orientar    ,     
		ie_supervisionar)
	VALUES (	nr_sequencia_w,
		clock_timestamp(),
		nm_usuario_p,
		nr_seq_proc_w,
		nr_sequencia_p,
		1,
		'A',
		1,
		cd_intervalo_w,
		ds_horario_padrao_w,
		1,
		'N',
		ds_observacao_padr_w,
		'N',
		ie_adep_w,
		TO_CHAR(hr_prim_horario_w,'hh24:mi'),
		ie_auxiliar_w    ,     
		ie_encaminhar_w  ,     
		ie_fazer_w       ,     
		ie_orientar_w    ,     
		ie_supervisionar_w);
	END;
END LOOP;
CLOSE C01;

COMMIT;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_intervensao_padrao ( nr_sequencia_p bigint, nr_seq_proc_p bigint, nm_usuario_p text) FROM PUBLIC;

