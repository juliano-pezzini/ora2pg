-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atend_pac_newrecord_eup_js ( nr_atend_futuro_p bigint, ie_novo_atendimento_checkup_p text, ie_novo_atendimento_p text, cd_convenio_chamada_p bigint, ie_atualiza_dados_conv_p text, nr_atendimento_p bigint, ds_maquina_p text, nr_seq_visao_p bigint, ie_clinica_p bigint, dt_entrada_atend_p timestamp, cd_medico_chamada_p text, cd_tipo_agenda_p bigint, nm_usuario_p text, ie_pasta_completo_p text, cd_pessoa_fisica_p text, nr_seq_pac_senha_fila_p bigint, nr_seq_agenda_p bigint, ie_tipo_atend_p bigint, cd_medico_resp_p text, ie_atend_novo_gv_p text, ds_msg_abort_p INOUT text, ds_msg_conf_atend_sem_alta_p INOUT text, ds_msg_conf_dias_inter_p INOUT text, ds_msg_infor_gv_p INOUT text, ds_msg_confirm_apac_p INOUT text, cd_medico_referido_p INOUT text, ie_tipo_atendimento_p INOUT bigint, cd_cgc_indicacao_p INOUT text, cd_pessoa_indicacao_p INOUT text, nr_seq_classificacao_p INOUT bigint, ds_observacao_atend_p INOUT text, ie_tipo_atend_tiss_p INOUT text, dt_entrada_p INOUT timestamp, cd_medico_resp_ret_p INOUT text, nm_pessoa_resp_p INOUT text, nr_telefone_resp_p INOUT text, ds_endereco_resp_p INOUT text, nr_pac_senha_fila_p INOUT bigint, ie_clinica_gs_p INOUT bigint, nr_seq_queixa_p INOUT bigint, ds_sintoma_paciente_p INOUT text, dt_senha_p INOUT timestamp, ds_senha_p INOUT text, cd_procedencia_p INOUT bigint, nr_seq_indicacao_p INOUT bigint, ie_tipo_convenio_p INOUT bigint, ie_carater_intern_sus_p INOUT text, cd_pessoa_responsavel_p INOUT text, nr_gestante_pre_natal_p INOUT bigint, ie_permite_acomp_p INOUT text, ie_atendimento_setor_p INOUT text) AS $body$
DECLARE


cd_estabelecimento_w 		smallint;
ie_chamada_geren_senha_w	varchar(1);
ie_permite_atend_obito_w	varchar(1);
ie_permite_atend_agenda_w	varchar(1);
ie_consiste_cad_sexo_nascto_w	varchar(1);
ie_novo_alta_anterior_w		varchar(1);
ie_qt_dias_internacao_w		bigint;
ds_msg_abort_w			varchar(255);
ds_msg_conf_atend_sem_alta_w	varchar(255);
ds_msg_conf_dias_inter_w	varchar(255);
ie_novo_atend_gv_w		varchar(1);
ds_msg_infor_gv_w		varchar(255);
ie_novo_atend_apac_w		varchar(1);
ds_msg_confirm_apac_w		varchar(255);
ie_atualiza_med_referido_w	varchar(1);
cd_medico_referido_w		varchar(10);
cd_medico_resp_w		varchar(10);
cd_medico_resp_atend_w		varchar(10);
ie_tipo_atendimento_w		smallint;
cd_pessoa_indicacao_w		varchar(10);
cd_pessoa_ind_w			varchar(10);
cd_cgc_indicacao_w		varchar(14);
ie_obs_agenda_w			varchar(1);
nr_seq_classificacao_w		bigint;
nr_seq_classif_w		bigint;
ds_observacao_atend_w		varchar(255);
ie_tipo_atend_tiss_w		varchar(2);
ie_data_ag_cons_entrada_w	varchar(1);
ie_data_ag_serv_entrada_w	varchar(1);
ie_data_ag_cirur_entrada_w	varchar(1);
ie_data_ag_exames_entrada_w	varchar(1);
ie_atua_medico_gr_w		varchar(1);
ie_medico_req_agenda_w		varchar(1);
ie_atualiza_medico_resp_w	varchar(1);
dt_entrada_w			timestamp;
ie_medico_w			varchar(1);
ie_func_assistencial_w		varchar(1);
ie_utiliza_prof_agenda_resp_w	varchar(1);
ie_medico_escala_w		varchar(10);
ie_medico_ref_ultimo_atend_w	varchar(1);
ie_medico_ref_cad_pac_w		varchar(1);
cd_medico_ref_w			varchar(10);
cd_medico_resp_agenda_w		varchar(10);
ie_classif_regra_atributo_w	varchar(10);
ds_endereco_resp_w		varchar(40);
nr_telefone_resp_w		varchar(40);
nm_pessoa_resp_w		varchar(40);
nr_pac_senha_fila_w		bigint;
ie_utiliza_senha_dt_gs_w	varchar(1);
qt_horas_val_triagem_w		bigint;
ie_clinica_w			integer;
nr_seq_queixa_w			bigint;
ds_sintoma_paciente_w		varchar(255);
dt_senha_w			timestamp;
ds_senha_w			varchar(20);
ie_atualiza_clinica_triag_pa_w	varchar(1);
ie_atual_mot_atend_triag_pa_w	varchar(1);
ie_atualiza_sintoma_triag_pa_w	varchar(1);
cd_proced_w			integer;
cd_procedencia_w		integer;
ie_atualiza_atend_agenda_w	varchar(1);
ie_procedencia_pront_pac_w	varchar(1);
ie_indicacao_w			varchar(1);
nr_seq_indicacao_w		bigint;
nr_seq_ind_w			bigint;
qt_cad_pessoa_indic_w		bigint;
qt_periodo_inidicacao_w		bigint;
ie_clinica_regra_idade_w	varchar(1);
ie_clinica_atend_w		integer;
ie_tipo_convenio_agenda_w	smallint;
ie_tipo_conv_atend_ante_w	varchar(1);
ie_tipo_convenio_w		smallint;
ie_carater_intern_sus_w		varchar(2);
ie_resp_ultimo_atend_w		varchar(1);
cd_resp_ultimo_atend_w		varchar(10);
ie_atuliza_nr_gestante_w	varchar(1);
nr_gestante_pre_natal_w		bigint;
ie_permite_acompanhante_w	varchar(225);
ie_permite_setor_null_nv_atend	varchar(1);
ie_permite_atend_futuro_w	varchar(1);
ie_prontuario_so_interado_w	varchar(1);
ie_forma_geracao_pront_anual_w	varchar(1);
ie_pront_cad_pf_w		varchar(1);
ie_medico_ativo_w		varchar(1);

BEGIN
/* Objetivo desta procedure: tudo o que for possível deixar nela do evento newrecord.
esta separado nas procedures:
	atend_pac_newrecord_abort_eup: tudo o que retornar com uma mensagem de abort
	atend_pac_newrecord_confir_eup: tudo que retorna com uma mensagem de confirmação para continuar ou abort, quando a diferenca entre as duas for um mesmo parâmetro por exemplo
	atend_newrec_agendas_eup_js: quando o atendimento for gerado atraves de uma chamada externa de alguma agenda e obtem os retornos para setar na atendimento_paciente
	obter_senha_novo_atend_eup_js: ao que se refere a gerar senha
*/
cd_estabelecimento_w := wheb_usuario_pck.get_cd_estabelecimento;

ie_novo_alta_anterior_w := Obter_param_Usuario(916, 16, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_novo_alta_anterior_w);
ie_medico_escala_w := Obter_param_Usuario(916, 53, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_medico_escala_w);
ie_permite_atend_agenda_w := Obter_param_Usuario(916, 75, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_permite_atend_agenda_w);
ie_consiste_cad_sexo_nascto_w := Obter_param_Usuario(916, 79, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_consiste_cad_sexo_nascto_w);
ie_atualiza_atend_agenda_w := Obter_param_Usuario(916, 82, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_atualiza_atend_agenda_w);
ie_indicacao_w := Obter_param_Usuario(916, 90, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_indicacao_w);
ie_utiliza_prof_agenda_resp_w := Obter_param_Usuario(916, 92, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_utiliza_prof_agenda_resp_w);
ie_qt_dias_internacao_w := Obter_param_Usuario(916, 99, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_qt_dias_internacao_w);
qt_periodo_inidicacao_w := Obter_param_Usuario(916, 156, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, qt_periodo_inidicacao_w);
ie_novo_atend_gv_w := Obter_param_Usuario(916, 160, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_novo_atend_gv_w);
ie_permite_atend_obito_w := Obter_param_Usuario(916, 171, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_permite_atend_obito_w);
ie_procedencia_pront_pac_w := Obter_param_Usuario(916, 186, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_procedencia_pront_pac_w);
ie_tipo_conv_atend_ante_w := Obter_param_Usuario(916, 224, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_tipo_conv_atend_ante_w);
ie_atualiza_med_referido_w := Obter_param_Usuario(916, 296, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_atualiza_med_referido_w);
ie_resp_ultimo_atend_w := Obter_param_Usuario(916, 459, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_resp_ultimo_atend_w);
ie_atuliza_nr_gestante_w := Obter_param_Usuario(916, 504, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_atuliza_nr_gestante_w);
qt_horas_val_triagem_w := Obter_param_Usuario(916, 512, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, qt_horas_val_triagem_w);
ie_atualiza_medico_resp_w := Obter_param_Usuario(916, 525, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_atualiza_medico_resp_w);
ie_novo_atend_apac_w := Obter_param_Usuario(916, 574, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_novo_atend_apac_w);
ie_permite_setor_null_nv_atend := Obter_param_Usuario(916, 668, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_permite_setor_null_nv_atend);
ie_medico_ref_ultimo_atend_w := Obter_param_Usuario(916, 738, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_medico_ref_ultimo_atend_w);
ie_classif_regra_atributo_w := Obter_param_Usuario(916, 802, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_classif_regra_atributo_w);
ie_medico_ref_cad_pac_w := Obter_param_Usuario(916, 901, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_medico_ref_cad_pac_w);
ie_clinica_regra_idade_w := Obter_param_Usuario(916, 902, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_clinica_regra_idade_w);
ie_utiliza_senha_dt_gs_w := Obter_param_Usuario(916, 886, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_utiliza_senha_dt_gs_w);
ie_obs_agenda_w := Obter_param_Usuario(916, 946, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_obs_agenda_w);
ie_permite_atend_futuro_w := Obter_param_Usuario(916, 1105, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_permite_atend_futuro_w);
ie_atua_medico_gr_w := Obter_param_Usuario(916, 1012, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_atua_medico_gr_w);
ie_medico_req_agenda_w := Obter_param_Usuario(916, 1085, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_medico_req_agenda_w);
ie_chamada_geren_senha_w := Obter_param_Usuario(916, 1112, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_chamada_geren_senha_w);

ie_data_ag_cons_entrada_w := Obter_param_Usuario(821, 92, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_data_ag_cons_entrada_w);  -- Agenda de Consultas
ie_data_ag_serv_entrada_w := Obter_param_Usuario(866, 174, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_data_ag_serv_entrada_w);

ie_data_ag_cirur_entrada_w := Obter_param_Usuario(871, 237, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_data_ag_cirur_entrada_w); -- Agenda Cirurgica
ie_data_ag_exames_entrada_w := Obter_param_Usuario(820, 124, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_data_ag_exames_entrada_w);

ie_atualiza_clinica_triag_pa_w := Obter_param_Usuario(10021, 43, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_atualiza_clinica_triag_pa_w);
ie_atualiza_sintoma_triag_pa_w := Obter_param_Usuario(10021, 44, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_atualiza_sintoma_triag_pa_w);
ie_atual_mot_atend_triag_pa_w := Obter_param_Usuario(10021, 45, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_atual_mot_atend_triag_pa_w);

ie_prontuario_so_interado_w := Obter_param_Usuario(0, 32, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_prontuario_so_interado_w);

ie_forma_geracao_pront_anual_w := Obter_param_Usuario(5, 24, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_forma_geracao_pront_anual_w);
ie_pront_cad_pf_w := Obter_param_Usuario(5, 138, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_pront_cad_pf_w);


ds_msg_abort_w := atend_pac_newrecord_abort_eup(ie_pasta_completo_p, nm_usuario_p, ie_pront_cad_pf_w, ie_forma_geracao_pront_anual_w, ie_prontuario_so_interado_w, nr_atend_futuro_p, ie_permite_atend_futuro_w, ie_consiste_cad_sexo_nascto_w, ie_permite_atend_agenda_w, nr_seq_agenda_p, ie_permite_atend_obito_w, cd_pessoa_fisica_p, ie_chamada_geren_senha_w, nr_seq_pac_senha_fila_p, ds_msg_abort_w);

IF (coalesce(ds_msg_abort_w::text, '') = '') THEN

	SELECT * FROM atend_pac_newrecord_confir_eup(ie_novo_atend_apac_w, ie_pasta_completo_p, ie_atend_novo_gv_p, ie_novo_atend_gv_w, ie_qt_dias_internacao_w, ie_novo_alta_anterior_w, cd_pessoa_fisica_p, nm_usuario_p, ie_tipo_atend_p, cd_estabelecimento_w, cd_medico_resp_p, ie_clinica_p, ds_msg_abort_w, ds_msg_conf_atend_sem_alta_w, ds_msg_conf_dias_inter_w, ds_msg_infor_gv_w, ds_msg_confirm_apac_w, null) INTO STRICT ds_msg_abort_w, ds_msg_conf_atend_sem_alta_w, ds_msg_conf_dias_inter_w, ds_msg_infor_gv_w, ds_msg_confirm_apac_w;
END IF;

IF (coalesce(ds_msg_abort_w::text, '') = '') THEN

	IF (cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') THEN
		SELECT	MAX(cd_medico)
		INTO STRICT	cd_medico_resp_atend_w
		FROM 	pessoa_fisica
		WHERE 	cd_pessoa_fisica = cd_pessoa_fisica_p;

	END IF;

	IF (ie_atualiza_medico_resp_w = 'S') AND (cd_medico_resp_atend_w IS NOT NULL AND cd_medico_resp_atend_w::text <> '') THEN

		ie_medico_w	:= obter_se_medico(cd_medico_resp_atend_w,'M');
		ie_func_assistencial_w	:= obter_se_func_assistencial(cd_medico_resp_atend_w);

		IF (ie_medico_w = 'S') AND (ie_func_assistencial_w = 'S') THEN
			cd_medico_resp_w := cd_medico_resp_atend_w;
		END IF;
	END IF;

	begin
		select 	'S'
		into STRICT	ie_medico_ativo_w
		from 	medico
		where 	ie_situacao = 'A'
		and 	cd_pessoa_fisica = cd_medico_chamada_p  LIMIT 1;
	exception
	when others then
		ie_medico_ativo_w := 'N';
	end;

	IF (cd_medico_chamada_p IS NOT NULL AND cd_medico_chamada_p::text <> '') AND (ie_utiliza_prof_agenda_resp_w = 'S') and (ie_medico_ativo_w = 'S') THEN
		cd_medico_resp_w := cd_medico_chamada_p;
	ELSIF (ie_medico_escala_w IS NOT NULL AND ie_medico_escala_w::text <> '') AND (ie_pasta_completo_p = 'S') THEN
		cd_medico_resp_w := obter_pessoa_escala_atend(ie_medico_escala_w, cd_estabelecimento_w, coalesce(ie_tipo_atendimento_p,ie_tipo_atend_p), ie_clinica_p, coalesce(dt_entrada_p,dt_entrada_atend_p));
	END IF;

	IF (coalesce(nr_seq_agenda_p,0) > 0) THEN

		SELECT * FROM atend_newrec_agendas_eup_js(ie_medico_req_agenda_w, cd_pessoa_fisica_p, ie_atua_medico_gr_w, ie_data_ag_exames_entrada_w, ie_data_ag_cirur_entrada_w, ie_data_ag_serv_entrada_w, ie_data_ag_cons_entrada_w, ie_obs_agenda_w, cd_estabelecimento_w, nm_usuario_p, nr_seq_agenda_p, cd_tipo_agenda_p, ie_atualiza_med_referido_w, ie_utiliza_prof_agenda_resp_w, cd_medico_chamada_p, cd_medico_referido_w, ie_tipo_atendimento_w, cd_cgc_indicacao_w, cd_pessoa_indicacao_w, nr_seq_classificacao_w, ds_observacao_atend_w, ie_tipo_atend_tiss_w, dt_entrada_w, cd_medico_resp_agenda_w) INTO STRICT cd_medico_referido_w, ie_tipo_atendimento_w, cd_cgc_indicacao_w, cd_pessoa_indicacao_w, nr_seq_classificacao_w, ds_observacao_atend_w, ie_tipo_atend_tiss_w, dt_entrada_w, cd_medico_resp_agenda_w;

		IF (cd_medico_resp_agenda_w IS NOT NULL AND cd_medico_resp_agenda_w::text <> '') THEN
			cd_medico_resp_w := cd_medico_resp_agenda_w;
		END IF;
	END IF;



	IF	((ie_medico_ref_ultimo_atend_w = 'S') OR (ie_medico_ref_cad_pac_w = 'S')) AND (cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') AND (coalesce(cd_medico_referido_w::text, '') = '') THEN
		IF (ie_medico_ref_cad_pac_w = 'S') THEN
			SELECT	MAX(cd_medico) cd_medico
			INTO STRICT	cd_medico_ref_w
			FROM	pessoa_fisica
			WHERE	cd_pessoa_fisica = cd_pessoa_fisica_p;

		ELSE
			cd_medico_ref_w := obter_ultimo_medico_ref_atend(cd_pessoa_fisica_p);
		END IF;
		IF (cd_medico_ref_w IS NOT NULL AND cd_medico_ref_w::text <> '') THEN
			cd_medico_referido_w := cd_medico_ref_w;
		END IF;
	END IF;
	IF (ie_classif_regra_atributo_w = 'S') THEN

		nr_seq_classif_w := obter_regra_atributo2('ATENDIMENTO_PACIENTE', 'NR_SEQ_CLASSIFICACAO', nr_seq_visao_p, 'VLD',cd_estabelecimento_w, obter_perfil_ativo,916, nm_usuario_p);

		IF (coalesce(nr_seq_classif_w,0) > 0) THEN
			nr_seq_classificacao_w := nr_seq_classif_w;
		END IF;
	END IF;
	IF (ie_pasta_completo_p = 'N') AND (cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') THEN

		SELECT	SUBSTR(MAX(nm_contato),1,40),
			SUBSTR(MAX(nr_telefone),1,40),
			SUBSTR(MAX(ds_endereco),1,40)
		INTO STRICT	nm_pessoa_resp_w,
			nr_telefone_resp_w,
			ds_endereco_resp_w
                FROM    compl_pessoa_fisica
                WHERE   ie_tipo_complemento  = 3
                AND     cd_pessoa_fisica     = cd_pessoa_fisica_p;
	END IF;

	SELECT * FROM obter_senha_novo_atend_eup_js(	ie_atualiza_sintoma_triag_pa_w, ie_atual_mot_atend_triag_pa_w, ie_atualiza_clinica_triag_pa_w, qt_horas_val_triagem_w, cd_pessoa_fisica_p, nr_atendimento_p, ie_utiliza_senha_dt_gs_w, nm_usuario_p, ds_maquina_p, nr_pac_senha_fila_w, dt_senha_w, ds_senha_w, ie_clinica_w, nr_seq_queixa_w, ds_sintoma_paciente_w) INTO STRICT nr_pac_senha_fila_w, dt_senha_w, ds_senha_w, ie_clinica_w, nr_seq_queixa_w, ds_sintoma_paciente_w;

	IF (cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') THEN

		SELECT	coalesce(MAX(cd_procedencia),0)
		INTO STRICT	cd_proced_w
		FROM  	pf_procedencia
		WHERE	cd_pessoa_fisica = cd_pessoa_fisica_p;

		IF (cd_proced_w > 0) THEN

			cd_procedencia_w := cd_proced_w;
		END IF;
	END IF;

	IF (ie_atualiza_atend_agenda_w = 'S') AND (ie_atualiza_dados_conv_p = 'S') AND (coalesce(nr_seq_agenda_p,0) > 0) THEN

		SELECT	coalesce(MAX(cd_procedencia),0)
		INTO STRICT	cd_proced_w
		FROM 	agenda_paciente
		WHERE	nr_sequencia = nr_seq_agenda_p;
		IF (cd_proced_w > 0) THEN
			cd_procedencia_w := cd_proced_w;
		END IF;

		SELECT	coalesce(MAX(cd_procedencia),0)
		INTO STRICT	cd_proced_w
		FROM	agenda_consulta
		WHERE	nr_sequencia = nr_seq_agenda_p;

		IF (cd_proced_w > 0) THEN
			cd_procedencia_w := cd_proced_w;
		END IF;
	END IF;

	IF (ie_procedencia_pront_pac_w = 'S') THEN

		SELECT	coalesce(MAX(cd_procedencia),0)
		INTO STRICT	cd_proced_w
		FROM 	procedencia
		WHERE	cd_setor_atendimento = obter_setor_pront_pf(cd_pessoa_fisica_p);

		IF (cd_proced_w > 0) THEN
			cd_procedencia_w := cd_proced_w;
		END IF;
	END IF;

	IF (ie_indicacao_w = 'S') AND (cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') THEN

		SELECT	coalesce(MAX(nr_seq_indicacao),0)
		INTO STRICT	nr_seq_ind_w
		FROM	agenda_consulta
		WHERE	nr_sequencia = coalesce(nr_seq_agenda_p,0);
		IF (coalesce(nr_seq_ind_w,0) > 0) THEN
			nr_seq_indicacao_w := nr_seq_ind_w;

			SELECT	MAX(cd_pessoa_indicacao)
			INTO STRICT	cd_pessoa_ind_w
			FROM	agenda_consulta
			WHERE	nr_sequencia =  coalesce(nr_seq_agenda_p,0);

			IF (cd_pessoa_ind_w IS NOT NULL AND cd_pessoa_ind_w::text <> '') THEN

				SELECT	COUNT(*)
				INTO STRICT	qt_cad_pessoa_indic_w
				FROM	pessoa_fisica
				WHERE	cd_pessoa_fisica = cd_pessoa_ind_w;

				IF (coalesce(qt_cad_pessoa_indic_w,0) > 0) THEN
					cd_pessoa_indicacao_w := cd_pessoa_ind_w;
				END IF;
			END IF;
		ELSE
			SELECT	MAX(a.nr_seq_indicacao)
			INTO STRICT	nr_seq_indicacao_w
			FROM    atendimento_paciente a
                        WHERE   a.nr_atendimento  = (SELECT  MAX(b.nr_atendimento)
                                                    FROM     atendimento_paciente b
                                                    WHERE    ((b.dt_entrada BETWEEN(clock_timestamp() - qt_periodo_inidicacao_w) AND clock_timestamp()) OR (qt_periodo_inidicacao_w = 0))
                                                    AND      b.cd_pessoa_fisica   =  cd_pessoa_fisica_p);
		END IF;


	END IF;

	IF (ie_clinica_regra_idade_w = 'S') THEN

		ie_clinica_atend_w := obter_clinica_idade(Obter_Idade_PF(cd_pessoa_fisica_p, clock_timestamp(), 'A'));
		IF (coalesce(ie_clinica_atend_w,0) > 0) THEN
			ie_clinica_w := ie_clinica_atend_w;
		END IF;
	END IF;

	ie_tipo_convenio_agenda_w := Obter_Tipo_Convenio(cd_convenio_chamada_p);
	IF (coalesce(ie_tipo_convenio_agenda_w,0) > 0) AND (ie_novo_atendimento_p = 'S') THEN
		ie_tipo_convenio_w := ie_tipo_convenio_agenda_w;
	ELSIF (coalesce(ie_tipo_convenio_agenda_w,0) > 0) AND (ie_novo_atendimento_checkup_p = 'S') THEN
		ie_tipo_convenio_w := ie_tipo_convenio_agenda_w;
	ELSIF (ie_tipo_conv_atend_ante_w = 'S') THEN
		ie_tipo_convenio_w := Obter_Tipo_Conv_Ultimo_Atend(nr_atendimento_p, cd_pessoa_fisica_p);
		IF (coalesce(ie_tipo_convenio_w,0) > 0) THEN
		ie_tipo_convenio_p := ie_tipo_convenio_w;
		END IF;
	END IF;

	IF (cd_tipo_agenda_p IN (3,5)) AND (coalesce(nr_seq_agenda_p,0) > 0) AND (ie_novo_atendimento_p = 'S') THEN

		SELECT	MAX(b.ie_carater_inter_sus)
		INTO STRICT	ie_carater_intern_sus_w
		FROM	agenda_consulta a, agenda_classif b
		WHERE	a.ie_classif_agenda = b.cd_classificacao
		AND	a.nr_sequencia = nr_seq_agenda_p;

		IF (ie_carater_intern_sus_w IS NOT NULL AND ie_carater_intern_sus_w::text <> '') THEN
			ie_carater_intern_sus_p := ie_carater_intern_sus_w;
		END IF;
	END IF;
	IF (ie_resp_ultimo_atend_w = 'S') THEN
		cd_resp_ultimo_atend_w := obter_ultimo_resp_atendimento(cd_pessoa_fisica_p,cd_estabelecimento_w,'C');
		IF (cd_resp_ultimo_atend_w IS NOT NULL AND cd_resp_ultimo_atend_w::text <> '') THEN
			cd_pessoa_responsavel_p := cd_resp_ultimo_atend_w;
		END IF;
	END IF;

	IF (cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') THEN
		IF (ie_atuliza_nr_gestante_w = 'S') THEN

			SELECT	MAX(nr_gestante_pre_natal)
			INTO STRICT	nr_gestante_pre_natal_w
			FROM	atendimento_paciente
			WHERE	nr_atendimento = obter_ultimo_atendimento(cd_pessoa_fisica_p);

			IF (coalesce(nr_gestante_pre_natal_w,0) > 0) THEN
				nr_gestante_pre_natal_p := nr_gestante_pre_natal_w;
			END IF;
		END IF;

		ie_permite_acompanhante_w := obter_se_permite_acomp(cd_pessoa_fisica_p,0);
		IF (ie_permite_acompanhante_w <> 'XPTO') THEN
			ie_permite_acomp_p := ie_permite_acompanhante_w;
		END IF;
	END IF;


	IF (ie_permite_setor_null_nv_atend = 'N') AND (coalesce(nr_atendimento_p,0) > 0) THEN
		ie_atendimento_setor_p := obter_se_atendimento_tem_setor(nr_atendimento_p);
	END IF;
END IF;

ds_msg_abort_p 			:= ds_msg_abort_w;
ds_msg_conf_atend_sem_alta_p 	:= ds_msg_conf_atend_sem_alta_w;
ds_msg_conf_dias_inter_p 	:= ds_msg_conf_dias_inter_w;
ds_msg_infor_gv_p 		:= ds_msg_infor_gv_w;
ds_msg_confirm_apac_p 		:= ds_msg_confirm_apac_w;
cd_medico_referido_p 		:= cd_medico_referido_w;
ie_tipo_atendimento_p		:= ie_tipo_atendimento_w;
cd_cgc_indicacao_p		:= cd_cgc_indicacao_w;
cd_pessoa_indicacao_p		:= cd_pessoa_indicacao_w;
nr_seq_classificacao_p		:= nr_seq_classificacao_w;
ds_observacao_atend_p		:= ds_observacao_atend_w;
ie_tipo_atend_tiss_p		:= ie_tipo_atend_tiss_w;
dt_entrada_p			:= dt_entrada_w;
cd_medico_resp_ret_p		:= cd_medico_resp_w;
nm_pessoa_resp_p		:= nm_pessoa_resp_w;
nr_telefone_resp_p		:= nr_telefone_resp_w;
ds_endereco_resp_p		:= ds_endereco_resp_w;
nr_pac_senha_fila_p		:= nr_pac_senha_fila_w;
ie_clinica_gs_p			:= ie_clinica_w;
nr_seq_queixa_p			:= nr_seq_queixa_w;
ds_sintoma_paciente_p		:= ds_sintoma_paciente_w;
dt_senha_p			:= dt_senha_w;
ds_senha_p			:= ds_senha_w;
cd_procedencia_p		:= cd_procedencia_w;
nr_seq_indicacao_p		:= nr_seq_indicacao_w;
ie_tipo_convenio_p		:= ie_tipo_convenio_w;

COMMIT;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atend_pac_newrecord_eup_js ( nr_atend_futuro_p bigint, ie_novo_atendimento_checkup_p text, ie_novo_atendimento_p text, cd_convenio_chamada_p bigint, ie_atualiza_dados_conv_p text, nr_atendimento_p bigint, ds_maquina_p text, nr_seq_visao_p bigint, ie_clinica_p bigint, dt_entrada_atend_p timestamp, cd_medico_chamada_p text, cd_tipo_agenda_p bigint, nm_usuario_p text, ie_pasta_completo_p text, cd_pessoa_fisica_p text, nr_seq_pac_senha_fila_p bigint, nr_seq_agenda_p bigint, ie_tipo_atend_p bigint, cd_medico_resp_p text, ie_atend_novo_gv_p text, ds_msg_abort_p INOUT text, ds_msg_conf_atend_sem_alta_p INOUT text, ds_msg_conf_dias_inter_p INOUT text, ds_msg_infor_gv_p INOUT text, ds_msg_confirm_apac_p INOUT text, cd_medico_referido_p INOUT text, ie_tipo_atendimento_p INOUT bigint, cd_cgc_indicacao_p INOUT text, cd_pessoa_indicacao_p INOUT text, nr_seq_classificacao_p INOUT bigint, ds_observacao_atend_p INOUT text, ie_tipo_atend_tiss_p INOUT text, dt_entrada_p INOUT timestamp, cd_medico_resp_ret_p INOUT text, nm_pessoa_resp_p INOUT text, nr_telefone_resp_p INOUT text, ds_endereco_resp_p INOUT text, nr_pac_senha_fila_p INOUT bigint, ie_clinica_gs_p INOUT bigint, nr_seq_queixa_p INOUT bigint, ds_sintoma_paciente_p INOUT text, dt_senha_p INOUT timestamp, ds_senha_p INOUT text, cd_procedencia_p INOUT bigint, nr_seq_indicacao_p INOUT bigint, ie_tipo_convenio_p INOUT bigint, ie_carater_intern_sus_p INOUT text, cd_pessoa_responsavel_p INOUT text, nr_gestante_pre_natal_p INOUT bigint, ie_permite_acomp_p INOUT text, ie_atendimento_setor_p INOUT text) FROM PUBLIC;

