-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE estornar_propaci_prescr_proc ( nr_prescricao_p bigint, nr_seq_prescr_p bigint, nm_usuario_p text, nr_seq_proc_hor_p bigint default null) AS $body$
DECLARE


ie_canc_proc_prescr_w		varchar(1);

nr_sequencia_w			bigint;
cd_convenio_w			integer;
nr_seq_gerada_w			bigint;
nr_interno_conta_w		bigint;
ie_recalcular_conta_w		varchar(1):= 'N';
ie_status_acerto_w		varchar(1);
dt_procedimento_w		procedimento_paciente.dt_procedimento%type;
nr_seq_proc_pac_w		procedimento_paciente.nr_sequencia%type;

c01 CURSOR FOR

	SELECT	a.nr_sequencia,
		a.cd_convenio,
		a.nr_interno_conta,
		a.dt_procedimento
	from	procedimento_paciente a
	where 	a.nr_prescricao		= nr_prescricao_p
	and	((a.nr_sequencia_prescricao	= nr_seq_prescr_p)
		or (coalesce(a.nr_sequencia_prescricao::text, '') = '' and a.nr_seq_proc_princ =  (SELECT	nr_sequencia 
								        from		procedimento_paciente 
								        where	nr_sequencia_prescricao	= nr_seq_prescr_p 
								        and		nr_prescricao	= nr_prescricao_p 
								        and		qt_procedimento > 0 
 								        and		coalesce(nr_seq_proc_est::text, '') = ''  LIMIT 1)))
	and	a.qt_procedimento > 0
	and	coalesce(a.nr_seq_proc_est::text, '') = ''
	and (coalesce(nr_seq_proc_hor_p::text, '') = '' or a.nr_sequencia = nr_seq_proc_pac_w);


BEGIN

if (nr_seq_proc_hor_p IS NOT NULL AND nr_seq_proc_hor_p::text <> '') then
	nr_seq_proc_pac_w := obter_nr_seq_proc_pac(nr_seq_proc_hor_p);
end if;

select 	coalesce(max(ie_canc_proc_prescr),'N'),
	coalesce(max(ie_recalcular_conta),'N')
into STRICT	ie_canc_proc_prescr_w,
	ie_recalcular_conta_w
from 	parametro_faturamento c,
	Atendimento_paciente b,
	prescr_medica a
where	a.nr_prescricao		= nr_prescricao_p
  and	a.nr_atendimento	= b.nr_atendimento
  and	b.cd_estabelecimento	= c.cd_estabelecimento;

if (ie_canc_proc_prescr_w = 'S') then
	open c01;
	loop
	fetch c01 into	nr_sequencia_w,
			cd_convenio_w,
			nr_interno_conta_w,
			dt_procedimento_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */

		nr_seq_gerada_w := duplicar_proc_paciente(nr_sequencia_w, nm_usuario_p, nr_seq_gerada_w);

		if (nr_seq_gerada_w IS NOT NULL AND nr_seq_gerada_w::text <> '') then
			update 	procedimento_paciente
			set	nr_interno_conta 	 = NULL,
				qt_procedimento	= qt_procedimento * -1,
				vl_procedimento = vl_procedimento * -1,
				vl_medico = vl_medico * -1,
				vl_anestesista = vl_anestesista * -1,
				vl_materiais = vl_materiais * -1,
				vl_auxiliares = vl_auxiliares * -1,
				vl_custo_operacional = vl_custo_operacional * -1,
				vl_adic_plant = vl_adic_plant * -1,
				ds_observacao	= Wheb_mensagem_pck.get_Texto(305579, 'DS_OBSERVACAO_W='|| ds_observacao), /*ds_observacao || ' Estorno gerado a partir do cancelamento da prescrição'*/				
				dt_procedimento	= dt_procedimento_w
			where nr_sequencia = nr_seq_gerada_w;
			
			update 	procedimento_paciente
			set	nr_seq_proc_est	= nr_seq_gerada_w
			where nr_sequencia	= nr_sequencia_w;

			CALL atualiza_preco_procedimento(nr_seq_gerada_w, cd_convenio_w, nm_usuario_p);
		end if;
	end loop;
	close c01;
else
	open c01;
	loop
	fetch c01 into	nr_sequencia_w,
			cd_convenio_w,
			nr_interno_conta_w,
			dt_procedimento_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
		
		delete FROM procedimento_paciente
		where  nr_seq_proc_princ = nr_sequencia_w;
		
	end loop;
	close c01;
	
	if (coalesce(nr_seq_proc_hor_p::text, '') = '') then
		delete from material_atend_Paciente
		where	NR_SEQ_PROC_PRINC in (	SELECT	NR_SEQUENCIA
										from	procedimento_paciente
										where nr_prescricao = nr_prescricao_p
										and nr_sequencia_prescricao = nr_seq_prescr_p);
	else
		delete	FROM material_atend_paciente
		where	nr_seq_proc_princ = nr_seq_proc_pac_w;
	end if;
	
	delete	FROM procedimento_paciente
	where	nr_prescricao = nr_prescricao_p
	and		nr_sequencia_prescricao = nr_seq_prescr_p
	and (coalesce(nr_seq_proc_hor_p::text, '') = '' or nr_sequencia = nr_seq_proc_pac_w);
	
	if (coalesce(ie_recalcular_conta_w,'N') = 'S') then
		
		select 	coalesce(max(ie_status_acerto),2)
		into STRICT	ie_status_acerto_w
		from 	conta_paciente
		where 	nr_interno_conta = nr_interno_conta_w;
		
		if (ie_status_acerto_w = 1) then
			CALL Recalcular_itens_conta(nr_interno_conta_w, nm_usuario_p);
		end if;
	end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE estornar_propaci_prescr_proc ( nr_prescricao_p bigint, nr_seq_prescr_p bigint, nm_usuario_p text, nr_seq_proc_hor_p bigint default null) FROM PUBLIC;

