-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_reserva (nr_seq_viagem_p bigint, ie_tipo_reserva_p text, nr_seq_transporte_p text, nr_localizador_p text, nm_usuario_p text) AS $body$
DECLARE


nr_sequencia_w			bigint;
nr_seq_reserva_w		bigint;
nr_seq_transporte_w		bigint;
insercao_w			varchar(5)	:= 'OK';
vl_previsto_w			double precision	:= 0;
vl_reserva_w			double precision	:= 0;
cd_cnpj_w			varchar(14)	:= ' ';
nr_seq_reserva_ww		bigint	:= 0;
qt_reg_w			bigint	:= 0;
ie_padrao_w			varchar(1)	:= 'T';
ie_philips_w			varchar(1);
nm_user_w			varchar(50);

C01 CURSOR FOR
	SELECT 	nr_sequencia
	from 	via_transporte
	where 	nr_seq_viagem = nr_seq_viagem_p
	and 	(nr_seq_hotel IS NOT NULL AND nr_seq_hotel::text <> '');

C02 CURSOR FOR
	SELECT 	nr_sequencia,
		vl_previsto
	from 	via_transporte
	where 	nr_seq_viagem = nr_seq_viagem_p
	and 	obter_se_contido(nr_sequencia, nr_seq_transporte_p) = 'S';


BEGIN
select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
into STRICT	ie_philips_w
from	via_destino a
where	a.nr_seq_viagem = nr_seq_viagem_p
and exists (SELECT b.cd_cgc
	from estabelecimento b
	where b.cd_empresa = 1
	and b.cd_cgc = a.cd_cnpj);

select	username
into STRICT	nm_user_w
from	user_users;

if (nm_user_w <> 'CORP') then
	ie_philips_w := 'N';
end if;

begin
select 	max(coalesce(cd_cnpj,''))
into STRICT	cd_cnpj_w
from 	via_destino
where 	nr_seq_viagem = nr_seq_viagem_p;
exception
	when others then
	cd_cnpj_w:= '';
end;

ie_padrao_w := obter_valor_param_usuario(7002,39, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento);
if (ie_padrao_w = '') then
	ie_padrao_w := 'T';
end if;

if (ie_tipo_reserva_p = 'H') then


	OPEN C01;
	LOOP
	FETCH C01 into
		nr_seq_transporte_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin

		select 	count(*)
		into STRICT	qt_reg_w
		from 	via_reserva_transporte  a,
			via_reserva		b
		where 	a.nr_seq_transporte = nr_seq_transporte_w
		and 	b.nr_sequencia	= a.nr_seq_reserva
		and 	b.ie_tipo_reserva = 'H';

		if (qt_reg_w = 0) then

			select 	nextval('via_reserva_seq')
			into STRICT	nr_seq_reserva_w
			;

			insert into via_reserva(
					NR_SEQUENCIA,
					NR_SEQ_VIAGEM,
					DT_ATUALIZACAO,
					NM_USUARIO,
					DT_ATUALIZACAO_NREC,
					NM_USUARIO_NREC,
					DT_RESERVA,
					DS_OBSERVACAO,
					NR_RESERVA,
					CD_CGC_AGENCIA,
					IE_TIPO_RESERVA,
					DT_ENTRADA_HOTEL,
					DT_SAIDA_HOTEL,
					IE_RESPONSAVEL_PAGTO,
					IE_RESPONSAVEL_CUSTO,
					CD_CGC_RESP_CUSTO,
					VL_RESERVA,
					NR_SEQ_HOTEL,
					nr_seq_itinerario)
			SELECT 		nr_seq_reserva_w,
					nr_seq_viagem_p,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					null,
					null,
					null,
					'H',
					DT_CHEGADA_PREV,
					DT_CHEGADA_PREV + QT_DIAS_HOSPEDAGEM,
					'W',
					CASE WHEN ie_philips_w='N' THEN ie_padrao_w WHEN ie_philips_w='S' THEN 'N' END ,
					CASE WHEN ie_padrao_w='N' THEN Null  ELSE coalesce(cd_cnpj_w,null) END ,
					VL_PREVISTO_HOTEL,
					NR_SEQ_HOTEL,
					nr_seq_transporte_w
			from 		via_transporte
			where 		nr_sequencia = nr_seq_transporte_w;

			insert into via_reserva_transporte(
				NR_SEQUENCIA,
				DT_ATUALIZACAO,
				NM_USUARIO,
				DT_ATUALIZACAO_NREC,
				NM_USUARIO_NREC,
				NR_SEQ_RESERVA,
				NR_SEQ_TRANSPORTE)
			values (nextval('via_reserva_transporte_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_reserva_w,
				nr_seq_transporte_w);

		end if;

		end;
	END LOOP;
	CLOSE C01;

elsif (ie_tipo_reserva_p = 'T') then

	select 	nextval('via_reserva_seq')
	into STRICT	nr_seq_reserva_w
	;


	OPEN C02;
	LOOP
	FETCH C02 into
		nr_seq_transporte_w,
		vl_reserva_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin

		vl_previsto_w:=	vl_previsto_w + vl_reserva_w;

		if (insercao_w = 'OK') then

			insert into via_reserva(
					NR_SEQUENCIA,
					NR_SEQ_VIAGEM,
					DT_ATUALIZACAO,
					NM_USUARIO,
					DT_ATUALIZACAO_NREC,
					NM_USUARIO_NREC,
					DT_RESERVA,
					DS_OBSERVACAO,
					NR_RESERVA,
					CD_CGC_AGENCIA,
					IE_TIPO_RESERVA,
					DT_SAIDA_PREV,
					DT_RETORNO_PREV,
					IE_RESPONSAVEL_PAGTO,
					IE_RESPONSAVEL_CUSTO,
					CD_CGC_RESP_CUSTO,
					VL_RESERVA,
					CD_EMPRESA_RESERVA,
					NR_SEQ_MEIO_TRANSP,
					nr_localizador,
					nr_seq_itinerario)
			SELECT 		nr_seq_reserva_w,
					nr_seq_viagem_p,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					null,
					null,
					null,
					'T',
					DT_SAIDA_PREV,
					DT_CHEGADA_PREV,
					'W',
					CASE WHEN ie_philips_w='N' THEN ie_padrao_w WHEN ie_philips_w='S' THEN 'N' END ,
					CASE WHEN ie_padrao_w='N' THEN Null  ELSE coalesce(cd_cnpj_w,null) END ,
					VL_PREVISTO,
					CD_CNPJ,
					NR_SEQ_MEIO_TRANSP,
					nr_localizador_p,
					nr_seq_transporte_w
			from 		via_transporte
			where 		nr_sequencia = nr_seq_transporte_w;

			insercao_w:= 'FALSE';

		end if;

		insert into via_reserva_transporte(
			NR_SEQUENCIA,
			DT_ATUALIZACAO,
			NM_USUARIO,
			DT_ATUALIZACAO_NREC,
			NM_USUARIO_NREC,
			NR_SEQ_RESERVA,
			NR_SEQ_TRANSPORTE)
		values (nextval('via_reserva_transporte_seq'),
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_reserva_w,
			nr_seq_transporte_w);

		end;
	END LOOP;
	CLOSE C02;

	update	via_reserva
	set 	vl_reserva = vl_previsto_w
	where 	nr_sequencia = 	nr_seq_reserva_w;

end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_reserva (nr_seq_viagem_p bigint, ie_tipo_reserva_p text, nr_seq_transporte_p text, nr_localizador_p text, nm_usuario_p text) FROM PUBLIC;

