-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_inserir_lib_especial ( nr_seq_analise_p bigint, nr_seq_grupo_atual_p bigint, nr_seq_item_resumo_p bigint,			--nr_sequencia da w_pls_resumo_conta 
 nr_seq_mot_liberacao_p bigint, ds_parecer_p text, cd_estabelecimento_p bigint, nm_usuario_p text ) AS $body$
DECLARE

 
ie_valor_base_w		varchar(1);
ie_tipo_motivo_w	varchar(1);
vl_liberado_w		double precision;
vl_calculado_w		double precision;
vl_liberado_hi_w 	double precision;
vl_liberado_co_w 	double precision;
vl_liberado_material_w	double precision;
vl_total_apres_w	double precision;
vl_glosa_w		double precision;
vl_glosa_co_w		double precision;
vl_glosa_material_w	double precision;
vl_glosa_hi_w		double precision;
qt_liberada_w		double precision;
qt_apresentado_w	double precision;
nr_seq_conta_mat_w	bigint;
nr_seq_conta_proc_w	bigint;
nr_seq_partic_proc_w	bigint;
nr_seq_ordem_w		bigint;
nr_seq_conta_w		bigint;
nr_seq_analise_item_w	bigint;
qt_liberado_conta_w	bigint;

C01 CURSOR FOR 
	SELECT	x.nr_sequencia 
	from	pls_analise_conta_item x 
	where	x.nr_seq_analise	= nr_seq_analise_p 
	and	x.nr_seq_w_resumo_conta	= nr_seq_item_resumo_p 
	and	x.ie_status in ('N', 'P') 
	order by 
		x.nr_sequencia;
	

BEGIN 
select	a.nr_seq_conta, 
	a.nr_seq_conta_mat, 
	a.nr_seq_conta_proc,	 
	a.nr_seq_partic_proc, 
	a.vl_total_apres, 
	a.vl_calculado, 
	a.ie_valor_base, 
	a.qt_apresentado 
into STRICT	nr_seq_conta_w, 
	nr_seq_conta_mat_w, 
	nr_seq_conta_proc_w,	 
	nr_seq_partic_proc_w,	 
	vl_total_apres_w, 
	vl_calculado_w, 
	ie_valor_base_w, 
	qt_apresentado_w 
from	w_pls_resumo_conta a, 
	pls_analise_conta b 
where	a.nr_seq_analise = b.nr_sequencia 
and	a.nr_sequencia	 = nr_seq_item_resumo_p;
 
if (coalesce(ie_valor_base_w,'1') = '1') then 
	vl_liberado_w	:= vl_total_apres_w;
else 
	vl_liberado_w	:= vl_calculado_w;
end if;
	 
qt_liberada_w		:= qt_apresentado_w;
vl_liberado_hi_w 	:= null;
vl_liberado_co_w 	:= null;
vl_liberado_material_w 	:= null;				
 
SELECT * FROM pls_obter_valores_lib_analise(	nr_seq_item_resumo_p, cd_estabelecimento_p, vl_glosa_w, vl_liberado_w, qt_liberada_w, vl_liberado_co_w, vl_liberado_material_w, vl_liberado_hi_w, vl_glosa_co_w, vl_glosa_material_w, vl_glosa_hi_w) INTO STRICT vl_glosa_w, vl_liberado_w, qt_liberada_w, vl_liberado_co_w, vl_liberado_material_w, vl_liberado_hi_w, vl_glosa_co_w, vl_glosa_material_w, vl_glosa_hi_w;
 
select	max(a.nr_seq_ordem) 
into STRICT	nr_seq_ordem_w 
from	pls_tempo_conta_grupo b, 
	pls_auditoria_conta_grupo a 
where	a.nr_sequencia 		= b.nr_seq_auditoria 
and	a.nr_seq_analise	= nr_seq_analise_p 
and	a.nr_seq_grupo		= nr_seq_grupo_atual_p 
and	coalesce(a.dt_liberacao::text, '') = '' 
and	(b.dt_inicio_analise IS NOT NULL AND b.dt_inicio_analise::text <> '') 
and	coalesce(b.dt_final_analise::text, '') = '';
 
if (nr_seq_ordem_w IS NOT NULL AND nr_seq_ordem_w::text <> '') then 
	insert into pls_analise_fluxo_item(nr_sequencia, 
		nm_usuario, 
		dt_atualizacao, 
		nm_usuario_nrec, 
		dt_atualizacao_nrec, 
		nr_seq_analise, 
		nr_seq_grupo, 
		nr_seq_conta_proc, 
		nr_seq_conta_mat, 
		nr_seq_proc_partic, 
		nr_seq_ordem, 
		vl_glosa, 
		vl_liberado_hi, 
		vl_liberado_co,  
		vl_liberado_material, 
		vl_total, 
		vl_glosa_co,  
		vl_glosa_hi, 
		vl_glosa_material, 
		qt_liberada, 
		ie_liberacao_especial, 
		ie_pagamento) 
	values (nextval('pls_analise_fluxo_item_seq'), 
		nm_usuario_p, 
		clock_timestamp(), 
		nm_usuario_p, 
		clock_timestamp(), 
		nr_seq_analise_p, 
		nr_seq_grupo_atual_p, 
		nr_seq_conta_proc_w, 
		nr_seq_conta_mat_w, 
		nr_seq_partic_proc_w, 
		nr_seq_ordem_w, 
		vl_glosa_w, 
		vl_liberado_hi_w, 
		vl_liberado_co_w,  
		vl_liberado_material_w, 
		vl_liberado_w, 
		vl_glosa_co_w,  
		vl_glosa_hi_w, 
		vl_glosa_material_w, 
		qt_liberada_w, 
		'S', 
		'L');
		 
	update	w_pls_resumo_conta 
	set	ie_fluxo_com_glosa	= 'L', 
		vl_glosa 		= coalesce(vl_glosa_w,0), 
		vl_liberado_hi 		= coalesce(vl_liberado_hi_w,0), 
		vl_liberado_co		= coalesce(vl_liberado_co_w,0), 
		vl_liberado_material 	= coalesce(vl_liberado_material_w,0), 
		vl_total 		= coalesce(vl_liberado_w,0), 
		vl_glosa_co 		= coalesce(vl_glosa_co_w,0), 
		vl_glosa_hi 		= coalesce(vl_glosa_hi_w,0), 
		vl_glosa_material 	= coalesce(vl_glosa_material_w,0), 
		qt_liberado 		= coalesce(qt_liberada_w,0), 
		vl_unitario 		= dividir_sem_round(vl_liberado_w,qt_liberada_w), 
		ie_pagamento 		= 'L' 
	where	nr_seq_analise		= nr_seq_analise_p 
	and	nr_sequencia		= nr_seq_item_resumo_p;
	 
	if (nr_seq_conta_proc_w IS NOT NULL AND nr_seq_conta_proc_w::text <> '') and (coalesce(qt_liberada_w,0) > 0) then 
		update	pls_conta_proc 
		set	ie_glosa	= 'N' 
		where	nr_sequencia	= nr_seq_conta_proc_w;
	end if;
		 
	select	CASE WHEN ie_tipo_motivo='S' THEN 'A' WHEN ie_tipo_motivo='N' THEN 'N' END  
	into STRICT	ie_tipo_motivo_w 
	from	pls_mot_lib_analise_conta 
	where	nr_sequencia = nr_seq_mot_liberacao_p;
	 
	open C01;
	loop 
	fetch C01 into	 
		nr_seq_analise_item_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin 
		update	pls_analise_conta_item 
		set	ie_status 		= ie_tipo_motivo_w, 
			nm_usuario		= nm_usuario_p, 
			dt_atualizacao 		= clock_timestamp(), 
			ie_consistencia 	= 'N', 
			ie_situacao		= CASE WHEN ie_tipo_motivo_w='N' THEN  'A' WHEN ie_tipo_motivo_w='L' THEN  'I' WHEN ie_tipo_motivo_w='A' THEN  'I' END  
		where	nr_sequencia		= nr_seq_analise_item_w 
		and	ie_status		<> 'I';
		 
		insert into pls_analise_parecer_item(nr_sequencia, 
			nr_seq_item, 
			nr_seq_motivo, 
			dt_atualizacao, 
			nm_usuario, 
			dt_atualizacao_nrec, 
			nm_usuario_nrec, 
			ds_parecer, 
			ie_tipo_motivo) 
		values (nextval('pls_analise_parecer_item_seq'), 
			nr_seq_analise_item_w, 
			nr_seq_mot_liberacao_p, 
			clock_timestamp(), 
			nm_usuario_p, 
			clock_timestamp(), 
			nm_usuario_p, 
			ds_parecer_p, 
			ie_tipo_motivo_w);
		end;
	end loop;
	close C01;
end if;
 
CALL pls_analise_status_pgto(nr_seq_conta_w, nr_seq_conta_mat_w, nr_seq_conta_proc_w, 
			nr_seq_analise_p, cd_estabelecimento_p, nm_usuario_p, 
			nr_seq_partic_proc_w, 'S', null, 
			null);
			 
select	coalesce(sum(qt_liberado),0) 
into STRICT	qt_liberado_conta_w 
from	w_pls_resumo_conta 
where	nr_seq_conta	= nr_seq_conta_w;
 
if (qt_liberado_conta_w = 0) then 
	update	pls_conta 
	set	ie_glosa	= 'S' 
	where	nr_sequencia	= nr_seq_conta_w;
else 
	update	pls_conta 
	set	ie_glosa	= 'N' 
	where	nr_sequencia	= nr_seq_conta_w;
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_inserir_lib_especial ( nr_seq_analise_p bigint, nr_seq_grupo_atual_p bigint, nr_seq_item_resumo_p bigint, nr_seq_mot_liberacao_p bigint, ds_parecer_p text, cd_estabelecimento_p bigint, nm_usuario_p text ) FROM PUBLIC;

