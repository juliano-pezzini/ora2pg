-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE liberar_evolucao_consulta ( cd_evolucao_p bigint, cd_evolucao_pep_p bigint, nr_atendimento_p bigint, ie_liberar_p text, ie_exige_lib_evolucao_p text, cd_perfil_p bigint, cd_estabelecimento_p bigint, ie_perg_prev_alta_p INOUT text, nm_usuario_p text) AS $body$
DECLARE

 
ie_perg_prev_alta_w	varchar(1) := 'N';
ie_enviar_ci_w		varchar(1) := 'N';
ie_enviar_ci_lib_w	varchar(1) := 'N';
ie_enviar_ci_resp_w	varchar(1);
ie_evolucao_clinica_w	varchar(1);
ie_tipo_in_funcao_w	varchar(1);
ie_tipo_evolucao_w	varchar(3);
ie_funcao_w		varchar(255);
cd_medico_w		varchar(10);
dt_liberacao_w		timestamp;
		

BEGIN 
if (cd_evolucao_p IS NOT NULL AND cd_evolucao_p::text <> '') and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') then 
	begin 
	if (ie_liberar_p = 'S') then 
		begin 
		CALL liberar_evolucao(cd_evolucao_p,nm_usuario_p);
		end;
	end if;
	 
	ie_enviar_ci_lib_w := obter_param_usuario(281, 105, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ie_enviar_ci_lib_w);
	 
	select	ie_evolucao_clinica, 
		dt_liberacao, 
		ie_tipo_evolucao, 
		cd_medico 
	into STRICT	ie_evolucao_clinica_w, 
		dt_liberacao_w, 
		ie_tipo_evolucao_w, 
		cd_medico_w 
	from	evolucao_paciente 
	where	cd_evolucao = cd_evolucao_p;
	 
	if (ie_enviar_ci_lib_w = 'S' or 
		ie_enviar_ci_lib_w = 'E') and (ie_evolucao_clinica_w = 'P') and (dt_liberacao_w IS NOT NULL AND dt_liberacao_w::text <> '') then 
		begin		 
		ie_enviar_ci_w := 'S';
		end;	
	else if (ie_enviar_ci_lib_w not in ('S','E')) then 
		begin		 
		ie_enviar_ci_resp_w := obter_param_usuario(281, 252, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ie_enviar_ci_resp_w);
		 
		if (ie_enviar_ci_resp_w = 'S') and (ie_evolucao_clinica_w = 'R') and (dt_liberacao_w IS NOT NULL AND dt_liberacao_w::text <> '') then 
			begin 
			ie_enviar_ci_w := 'S';
			end;
		end if;
		end;
	end if;
	end if;
	 
	if (ie_enviar_ci_w = 'S') then 
		begin 
		CALL enviar_comunic_interna_medico(cd_evolucao_p,nm_usuario_p);
		end;
	end if;
	 
	if (cd_evolucao_pep_p IS NOT NULL AND cd_evolucao_pep_p::text <> '') and 
		((ie_exige_lib_evolucao_p <> 'S') or (coalesce(dt_liberacao_w::text, '') = '')) then 
		begin		 
		ie_funcao_w := obter_param_usuario(281, 174, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ie_funcao_w);
		ie_tipo_in_funcao_w	:= obter_se_contido(ie_tipo_evolucao_w,ie_funcao_w);
		 
		if (ie_tipo_in_funcao_w = 'S') then 
			begin 
			CALL atualizar_atend_profissional(nr_atendimento_p,cd_medico_w,'N',nm_usuario_p);
			end;
		end if;
		end;
	end if;
	 
	if (dt_liberacao_w IS NOT NULL AND dt_liberacao_w::text <> '') then 
		begin 
		ie_perg_prev_alta_w	:= obter_se_perg_prev_alta(nr_atendimento_p,cd_medico_w,cd_estabelecimento_p,nm_usuario_p);
		end;
	end if;
	end;
end if;
ie_perg_prev_alta_p := ie_perg_prev_alta_w;
commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE liberar_evolucao_consulta ( cd_evolucao_p bigint, cd_evolucao_pep_p bigint, nr_atendimento_p bigint, ie_liberar_p text, ie_exige_lib_evolucao_p text, cd_perfil_p bigint, cd_estabelecimento_p bigint, ie_perg_prev_alta_p INOUT text, nm_usuario_p text) FROM PUBLIC;

