-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_importar_mat_unimed_sc ( cd_estabelecimento_p bigint, nm_usuario_p text, ds_versao_tiss_p text) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Importar os materiais/medicamentos da federação SC
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[ ]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:

Utilizado apenas em:
	- Função OPS - Cadastro de Materiais, pasta Materiais Unimed >> Federação SC >> Materiais
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
/* =================== CAMPOS ================== */

cd_material_w			bigint;
ie_digito_w			smallint;
ds_material_w			varchar(255);
ds_nome_comercial_w		varchar(255);
ds_fabricante_w			varchar(255);
ie_unidade_utilizacao_w		varchar(3);
cd_grupo_estoque_w		varchar(5);
ie_moeda_w			varchar(4);
ie_lista_w			varchar(1);
vl_produto_w			double precision;
cd_simpro_w			integer;
cd_brasindice_w			varchar(30);
cd_tiss_w			varchar(10);
ie_origem_w			varchar(2);
dt_produto_preco_w		timestamp;
ds_observacao_w			varchar(500);
nr_seq_header_w			bigint;
ie_tipo_registro_w		varchar(4);
ie_tipo_produto_w		varchar(4);
nr_seq_trailer_w		bigint;
vl_soma_cd_mat_w		bigint	:= 0;
vl_cd_mat_arquivo_w		bigint	:= 0;
nr_seq_mat_w			bigint;
qt_material_cad_w		bigint;
ie_possui_preco_w		bigint;
ie_produto_w			varchar(1);
cd_mat_digito_w			bigint;
cd_anvisa_w			varchar(20);
dt_validade_anvisa_w		timestamp;
ie_unid_compra_w		varchar(4);
qt_embalagem_w			bigint;
ie_unid_embalagem_w		varchar(4);
qt_utilizacao_w			bigint;
qt_fracao_w			bigint;
ie_unid_fracao_w		varchar(4);
ie_fracionar_w			varchar(2);
ie_opme_w			varchar(1);
cd_grupo_estoque_opme_w		integer;
ds_nome_comercial_compl_w	varchar(200);
cd_material_tuss_w		bigint;
ie_uso_restrito_w		varchar(1);
qt_commit_w			integer := 0;
dt_atualizacao_prod_w		timestamp;
ie_situacao_w			varchar(2);

c01 CURSOR FOR
	SELECT	ds_conteudo
	from	w_import_mat_unimed
	order by
		nr_sequencia;

BEGIN
--Validação de arquivo selecionado para a Importação
begin
select	obter_se_somente_numero(substr(ds_conteudo,11,41))
into STRICT	ie_produto_w
from	w_import_mat_unimed
where	substr(ds_conteudo,7,1)	= 'D'  LIMIT 1;
exception
when others then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(282595);
end;

if (ie_produto_w	= 'S') then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(224236);
else
	for r_C01_w in C01 loop
		qt_commit_w := qt_commit_w + 1;

		--DETALHE
		if (substr(r_C01_w.ds_conteudo,7,1) = 'D') then
			ie_tipo_registro_w	:= 'D';
			ie_tipo_produto_w	:= substr(r_C01_w.ds_conteudo,8,3);
			cd_material_w		:= substr(r_C01_w.ds_conteudo,11,7);
			ie_digito_w		:= substr(r_C01_w.ds_conteudo,18,1);
			ds_material_w		:= trim(both substr(r_C01_w.ds_conteudo,19,200));
			ds_nome_comercial_w	:= trim(both substr(r_C01_w.ds_conteudo,219,35));
			ds_fabricante_w		:= trim(both substr(r_C01_w.ds_conteudo,254,30));
			ie_unidade_utilizacao_w	:= trim(both substr(r_C01_w.ds_conteudo,284,3));
			cd_grupo_estoque_w	:= substr(r_C01_w.ds_conteudo,287,5);
			cd_brasindice_w		:= trim(both substr(r_C01_w.ds_conteudo,292,12));

			cd_simpro_w		:= ltrim(substr(r_C01_w.ds_conteudo,304,7));
			if (cd_simpro_w = 0) then
				cd_simpro_w	:= null;
			end if;

			begin
			vl_produto_w		:= (substr(r_C01_w.ds_conteudo,311,10) || ',' || substr(r_C01_w.ds_conteudo,321,2))::numeric;
			exception
			when others then
				vl_produto_w	:= 0;
			end;

			begin
			dt_produto_preco_w	:= to_char(to_date(substr(r_C01_w.ds_conteudo,323,8)),'dd/mm/yyyy');
			exception
				when others then
				dt_produto_preco_w	:= null;
			end;

			select	CASE WHEN substr(r_C01_w.ds_conteudo,331,3)=000 THEN 1  ELSE 1 END
			into STRICT	ie_moeda_w
			;

			ie_origem_w		:= substr(r_C01_w.ds_conteudo,334,1);
			ds_observacao_w		:= trim(both substr(r_C01_w.ds_conteudo,335,500));
			ie_lista_w		:= substr(r_C01_w.ds_conteudo,835,1);

			cd_tiss_w		:= lpad(trim(both substr(r_C01_w.ds_conteudo,836,10)),10,'0');

			if (cd_tiss_w = '0000000000') then
				cd_tiss_w	:= null;
			end if;

			cd_anvisa_w		:= trim(both substr(r_C01_w.ds_conteudo,858,20));

			begin
			dt_validade_anvisa_w		:= to_date(trim(both substr(r_C01_w.ds_conteudo,878,8)),'dd/mm/yyyy');
			exception
			when others then
				dt_validade_anvisa_w := null;
			end;

			ie_unid_compra_w	:= trim(both substr(r_C01_w.ds_conteudo,886,4));

			begin
			qt_embalagem_w		:= (trim(both coalesce(substr(r_C01_w.ds_conteudo,890,4),0)||','||coalesce(substr(r_C01_w.ds_conteudo,894,3),0)))::numeric;
			exception
			when others then
				qt_embalagem_w := 0;
			end;

			ie_unid_embalagem_w	:= trim(both substr(r_C01_w.ds_conteudo,897,4));

			begin
			qt_utilizacao_w		:= (trim(both coalesce(substr(r_C01_w.ds_conteudo,901,4),0)||','||coalesce(substr(r_C01_w.ds_conteudo,905,3),0)))::numeric;
			exception
			when others then
				qt_utilizacao_w := null;
			end;

			begin
			qt_fracao_w		:= (trim(both coalesce(substr(r_C01_w.ds_conteudo,912,4),0)||','||coalesce(substr(r_C01_w.ds_conteudo,916,3),0)))::numeric;
			exception
			when others then
				qt_fracao_w := 0;
			end;

			begin
			dt_atualizacao_prod_w		:= to_date(trim(both substr(r_C01_w.ds_conteudo,903,8)),'dd/mm/yyyy');
			exception
			when others then
				dt_atualizacao_prod_w := null;
			end;

			ie_situacao_w		:= trim(both substr(r_C01_w.ds_conteudo,911,1));

			ie_unid_fracao_w	:= trim(both substr(r_C01_w.ds_conteudo,919,4));
			ie_fracionar_w		:= trim(both substr(r_C01_w.ds_conteudo,923,1));

			ie_uso_restrito_w		:= trim(both substr(r_C01_w.ds_conteudo,924,1));
			ds_nome_comercial_compl_w	:= trim(both substr(r_C01_w.ds_conteudo,925,200));
			cd_material_tuss_w		:= (trim(both substr(r_C01_w.ds_conteudo,1125,10)))::numeric;

			vl_soma_cd_mat_w	:= vl_soma_cd_mat_w + cd_material_w;

			cd_mat_digito_w		:= cd_material_w || ie_digito_w;

			if (cd_grupo_estoque_w IS NOT NULL AND cd_grupo_estoque_w::text <> '') then
				cd_grupo_estoque_opme_w := somente_numero(cd_grupo_estoque_w);

				select	coalesce(max(ie_opme),'N')
				into STRICT	ie_opme_w
				from	pls_grupo_est_fed_sc
				where	cd_grupo_estoque	= cd_grupo_estoque_opme_w;
			end if;

			if (ds_versao_tiss_p IS NOT NULL AND ds_versao_tiss_p::text <> '') then
				select	count(1)
				into STRICT	qt_material_cad_w
				from	pls_mat_unimed_fed_sc
				where	cd_material	= cd_mat_digito_w
				and (ds_versao_tiss	= ds_versao_tiss_p or coalesce(ds_versao_tiss::text, '') = '')  LIMIT 1;
			else
				--verifica se este material já existe
				select	count(1)
				into STRICT	qt_material_cad_w
				from	pls_mat_unimed_fed_sc
				where	cd_material	= cd_mat_digito_w  LIMIT 1;
			end if;

			--se existir, faz UPDATE, senão, faz INSERT
			if (qt_material_cad_w = 0) then

				select	nextval('pls_mat_unimed_fed_sc_seq')
				into STRICT	nr_seq_mat_w
				;

				insert into	pls_mat_unimed_fed_sc(nr_sequencia,
					nm_usuario,
					dt_atualizacao,
					nm_usuario_nrec,
					dt_atualizacao_nrec,
					cd_estabelecimento,
					cd_material,
					ie_digito,
					ds_material,
					ds_nome_comercial,
					ds_fabricante,
					ie_unidade_utilizacao,
					cd_grupo_estoque,
					cd_brasindice,
					cd_simpro,
					ie_moeda,
					ie_origem,
					ds_observacao,
					ie_lista,
					cd_tiss,
					ie_tipo,
					ie_opme,
					cd_anvisa,
					dt_validade_anvisa,
					ie_unid_compra,
					qt_embalagem,
					ie_unid_embalagem,
					qt_utilizacao,
					qt_fracao,
					ie_unid_fracao,
					ie_fracionar,
					ie_uso_restrito,
					ds_nome_comercial_compl,
					cd_material_tuss,
					ds_versao_tiss,
					dt_atualizacao_produto,
					ie_status)
				values (nr_seq_mat_w,
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					cd_estabelecimento_p,
					cd_mat_digito_w,
					ie_digito_w,
					ds_material_w,
					ds_nome_comercial_w,
					ds_fabricante_w,
					ie_unidade_utilizacao_w,
					cd_grupo_estoque_w,
					cd_brasindice_w,
					cd_simpro_w,
					ie_moeda_w,
					ie_origem_w,
					ds_observacao_w,
					ie_lista_w,
					cd_tiss_w,
					ie_tipo_produto_w,
					ie_opme_w,
					cd_anvisa_w,
					dt_validade_anvisa_w,
					ie_unid_compra_w,
					qt_embalagem_w,
					ie_unid_embalagem_w,
					qt_utilizacao_w,
					qt_fracao_w,
					ie_unid_fracao_w,
					ie_fracionar_w,
					ie_uso_restrito_w,
					ds_nome_comercial_compl_w,
					cd_material_tuss_w,
					ds_versao_tiss_p,
					dt_atualizacao_prod_w,
					ie_situacao_w);

			else
				begin
				update	pls_mat_unimed_fed_sc
				set	nm_usuario		= nm_usuario_p,
					dt_atualizacao		= clock_timestamp(),
					ds_material		= ds_material_w,
					ds_nome_comercial	= ds_nome_comercial_w,
					ds_fabricante		= ds_fabricante_w,
					ie_unidade_utilizacao	= ie_unidade_utilizacao_w,
					cd_grupo_estoque	= cd_grupo_estoque_w,
					cd_brasindice		= cd_brasindice_w,
					cd_simpro		= cd_simpro_w,
					ie_moeda		= ie_moeda_w,
					ie_origem		= ie_origem_w,
					ds_observacao		= ds_observacao_w,
					ie_lista		= ie_lista_w,
					cd_tiss			= cd_tiss_w,
					ie_tipo			= ie_tipo_produto_w,
					cd_anvisa		= cd_anvisa_w,
					dt_validade_anvisa	= dt_validade_anvisa_w,
					ie_unid_compra		= ie_unid_compra_w,
					qt_embalagem		= qt_embalagem_w,
					ie_unid_embalagem	= ie_unid_embalagem_w,
					qt_utilizacao		= qt_utilizacao_w,
					qt_fracao		= qt_fracao_w,
					ie_unid_fracao		= ie_unid_fracao_w,
					ie_fracionar		= ie_fracionar_w,
					ie_opme			= ie_opme_w,
					ie_uso_restrito		= ie_uso_restrito_w,
					ds_nome_comercial_compl = ds_nome_comercial_compl_w,
					cd_material_tuss	= cd_material_tuss_w,
					ds_versao_tiss		= ds_versao_tiss_p,
					dt_atualizacao_produto	= dt_atualizacao_prod_w,
					ie_status		= ie_situacao_w
				where	cd_material		= cd_mat_digito_w;
				exception
				when others then
					CALL wheb_mensagem_pck.exibir_mensagem_abort(224238,	'CD_MATERIAL=' || cd_material_w ||
											';QT_EMBALAGEM=' || qt_embalagem_w ||
											';QT_UTILIZACAO=' || qt_utilizacao_w ||
											';QT_FRACAO=' || qt_fracao_w);
				end;

			end if;


		--TRAILER
		elsif (substr(r_C01_w.ds_conteudo,7,1) = 'T') then
			null;
			--vl_cd_mat_arquivo_w	:= obter_somente_numero(substr(r_C01_w.ds_conteudo,8,14));
			-- Verifica se a somatória dos códigos dos produtos é igual a informada no trailer do arquivo. Se for diferente, exibe a mensagem.
			--if	(vl_cd_mat_arquivo_w <> vl_soma_cd_mat_w) then
			--	wheb_mensagem_pck.exibir_mensagem_abort(224237);
			--end if;
		end if;

		if (qt_commit_w = 500) then
			commit;
			qt_commit_w := 0;
		end if;
	end loop;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_importar_mat_unimed_sc ( cd_estabelecimento_p bigint, nm_usuario_p text, ds_versao_tiss_p text) FROM PUBLIC;

