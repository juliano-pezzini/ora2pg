-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_atualizar_contas_protocolo ( nr_seq_protocolo_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, ie_commit_p text) AS $body$
DECLARE


ie_esquema_contabil_w		varchar(1);
ie_provisao_producao_w		varchar(1);
dt_referencia_month_w		timestamp;
nr_seq_conta_w			bigint;
ie_lote_contabil_gerado_w	varchar(1);
ie_tipo_protocolo_w		varchar(3);
qt_vago_w			bigint;
ie_data_lote_desp_conta_w	pls_parametro_contabil.ie_data_lote_desp_conta%type;
dt_lib_pagamento_w		timestamp;
dt_lib_inicial_w		timestamp;
dt_lib_final_w			timestamp;

C01 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_conta
	where	nr_seq_protocolo	= nr_seq_protocolo_p;


BEGIN

begin
select	coalesce(ie_esquema_contabil,'N'),
	coalesce(ie_provisao_producao,'N'),
	coalesce(ie_data_lote_desp_conta,'CO')
into STRICT	ie_esquema_contabil_w,
	ie_provisao_producao_w,
	ie_data_lote_desp_conta_w
from	pls_parametro_contabil
where	cd_estabelecimento	= cd_estabelecimento_p;
exception
when others then
	ie_esquema_contabil_w	:= 'N';
	ie_provisao_producao_w	:= 'N';
	ie_data_lote_desp_conta_w := 'CO';
end;

begin
select	dt_mes_competencia,
	dt_lib_pagamento,
	ie_tipo_protocolo
into STRICT	dt_referencia_month_w,
	dt_lib_pagamento_w,
	ie_tipo_protocolo_w
from	pls_protocolo_conta
where	nr_sequencia	= nr_seq_protocolo_p;
exception
when others then
	dt_referencia_month_w	:= null;
end;

dt_lib_inicial_w	:= trunc(dt_lib_pagamento_w, 'month');
dt_lib_final_w		:= fim_dia(fim_mes(dt_lib_pagamento_w));

if (ie_tipo_protocolo_w <> 'R') then
	if (ie_esquema_contabil_w = 'S') then
		CALL pls_atualizar_codificacao_pck.pls_atualizar_codificacao(dt_referencia_month_w);
		if (coalesce(ie_provisao_producao_w,'N') = 'S') then
			-- As discussed on OS 892803, it should not consist because the batch 40 is only provision
			if (ie_tipo_protocolo_w	!= 'I') then
				ie_lote_contabil_gerado_w	:= obter_se_lote_contabil_gerado(41,dt_referencia_month_w);
				
				if (ie_lote_contabil_gerado_w = 'S') then
					CALL wheb_mensagem_pck.exibir_mensagem_abort( 188714, 'DT_REFERENCIA=' || to_char(dt_referencia_month_w,'mm/yyyy') );
				end if;
			end if;
			
			open C01;
			loop
			fetch C01 into
				nr_seq_conta_w;
			EXIT WHEN NOT FOUND; /* apply on C01 */
				begin
				qt_vago_w := ctb_pls_atualizar_prov_prod_in(nr_seq_conta_w, null, null, null, nm_usuario_p, cd_estabelecimento_p, qt_vago_w);
				qt_vago_w := ctb_pls_atualizar_prod_med_in(nr_seq_conta_w, null, null, null, nm_usuario_p, cd_estabelecimento_p, qt_vago_w);

				end;
			end loop;
			close C01;
		else
			if (ie_data_lote_desp_conta_w = 'LI') then			
				select	coalesce(max('S'),'N')
				into STRICT	ie_lote_contabil_gerado_w
				from	lote_contabil
				where	cd_tipo_lote_contabil	= 22
				and	dt_referencia between dt_lib_inicial_w and dt_lib_final_w
				and	dt_referencia		>= dt_lib_pagamento_w
				and	coalesce(cd_estabelecimento, cd_estabelecimento_p) = cd_estabelecimento_p
				and	(dt_geracao_lote IS NOT NULL AND dt_geracao_lote::text <> '');
				
				if (ie_lote_contabil_gerado_w = 'S') then
					-- There already is an accounting batch generated for the date #@DT_LIB_PAGAMENTO#@ or posterior to it. Please verify.
					CALL wheb_mensagem_pck.exibir_mensagem_abort( 338833, 'DT_LIB_PAGAMENTO=' || to_char(dt_lib_pagamento_w,'dd/mm/yyyy'));
				end if;
			else
				ie_lote_contabil_gerado_w	:= obter_se_lote_contabil_gerado(22,dt_referencia_month_w);
				
				if (ie_lote_contabil_gerado_w = 'S') then
					CALL wheb_mensagem_pck.exibir_mensagem_abort( 188714, 'DT_REFERENCIA=' || to_char(dt_referencia_month_w,'mm/yyyy') );
				end if;
			end if;			
			
			qt_vago_w := ctb_pls_atualizar_despesa_in(nr_seq_protocolo_p, null, nm_usuario_p, cd_estabelecimento_p, qt_vago_w, null);
		end if;
		
		ie_lote_contabil_gerado_w	:= obter_se_lote_contabil_gerado(42,dt_referencia_month_w);
		
		if (ie_lote_contabil_gerado_w = 'S') then
			CALL wheb_mensagem_pck.exibir_mensagem_abort( 188714, 'DT_REFERENCIA=' || to_char(dt_referencia_month_w,'mm/yyyy') );
		else
			ie_lote_contabil_gerado_w	:= obter_se_lote_contabil_gerado(43,dt_referencia_month_w);
			
			if (ie_lote_contabil_gerado_w = 'S') then
				CALL wheb_mensagem_pck.exibir_mensagem_abort( 188714, 'DT_REFERENCIA=' || to_char(dt_referencia_month_w,'mm/yyyy') );
			end if;
		end if;
		
		open C01;
		loop
		fetch C01 into
			nr_seq_conta_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin
			qt_vago_w := ctb_pls_atualizar_prov_copart(nr_seq_conta_w, null, null, nm_usuario_p, cd_estabelecimento_p, qt_vago_w);
			qt_vago_w := ctb_pls_atualizar_prov_fat(nr_seq_conta_w, null, null, null, nm_usuario_p, cd_estabelecimento_p, qt_vago_w);
			end;
		end loop;
		close C01;
		
		qt_vago_w := ctb_pls_atualizar_desp_interc(nr_seq_protocolo_p, null, null, null, null, nm_usuario_p, cd_estabelecimento_p, qt_vago_w);
	else
		if (ie_data_lote_desp_conta_w = 'LI') then			
			select	coalesce(max('S'),'N')
			into STRICT	ie_lote_contabil_gerado_w
			from	lote_contabil
			where	cd_tipo_lote_contabil	= 22
			and	dt_referencia between dt_lib_inicial_w and dt_lib_final_w
			and	dt_referencia		>= dt_lib_pagamento_w
			and	coalesce(cd_estabelecimento, cd_estabelecimento_p) = cd_estabelecimento_p
			and	(dt_geracao_lote IS NOT NULL AND dt_geracao_lote::text <> '');
			
			if (ie_lote_contabil_gerado_w = 'S') then
				-- There already is an accounting batch generated for the date #@DT_LIB_PAGAMENTO#@ or posterior to it. Please verify.
				CALL wheb_mensagem_pck.exibir_mensagem_abort( 338833, 'DT_LIB_PAGAMENTO=' || to_char(dt_lib_pagamento_w,'dd/mm/yyyy'));
			end if;
		else
			ie_lote_contabil_gerado_w	:= obter_se_lote_contabil_gerado(22,dt_referencia_month_w);
			
			if (ie_lote_contabil_gerado_w = 'S') then
				CALL wheb_mensagem_pck.exibir_mensagem_abort( 188714, 'DT_REFERENCIA=' || to_char(dt_referencia_month_w,'mm/yyyy') );
			end if;
		end if;	
		
		CALL ctb_pls_atualizar_conta(nr_seq_protocolo_p, nm_usuario_p, cd_estabelecimento_p);
	end if;
end if;

if (coalesce(ie_commit_p,'S') = 'S') then
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_atualizar_contas_protocolo ( nr_seq_protocolo_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, ie_commit_p text) FROM PUBLIC;

