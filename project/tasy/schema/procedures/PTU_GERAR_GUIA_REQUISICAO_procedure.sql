-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ptu_gerar_guia_requisicao ( nr_seq_pedido_aut_p ptu_pedido_autorizacao.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, ie_tipo_guia_p pls_requisicao.ie_tipo_guia%type) AS $body$
DECLARE


ie_funcao_scs_w		varchar(1);
nr_seq_guia_w		pls_guia_plano.nr_sequencia%type;
nr_seq_requisicao_w	pls_requisicao.nr_sequencia%type;
cd_especialidade_w	especialidade_medica.cd_especialidade%type;
nr_seq_plano_w		pls_plano.nr_sequencia%type;
nr_seq_clinica_w	pls_clinica.nr_sequencia%type;

C01 CURSOR(nr_seq_pedido_aut_pc ptu_pedido_autorizacao.nr_sequencia%type) FOR

	SELECT	a.ie_urg_emerg,
		a.ie_recem_nascido,
		a.ds_observacao,
		a.ds_ind_clinica,
		a.ds_biometria,
		a.cd_unimed_executora,
		coalesce(a.ie_tipo_acidente,9) ie_tipo_acidente,
		a.dt_sug_internacao,
		a.cd_doenca_cid,		
		(SELECT	max(b.nr_sequencia)
		from	pls_congenere b
		where	b.cd_cooperativa = a.cd_unimed_executora) nr_seq_uni_exec,
		a.cd_especialidade,
		(select	b.nr_sequencia
		from    pls_segurado_carteira c,
			pls_segurado b
		where   c.nr_seq_segurado	= b.nr_sequencia
		and	c.cd_usuario_plano	= lpad(a.cd_unimed,4,0)||lpad(a.cd_usuario_plano,13,0)) nr_seq_segurado,
		a.ie_tipo_internacao,
		a.ie_cobertura_especial
	from	ptu_pedido_autorizacao a
	where	a.nr_sequencia = nr_seq_pedido_aut_pc;


BEGIN

--Obter funcao utilizada pelo SCS
ie_funcao_scs_w := pls_obter_funcao_scs;

--Carrega os dados importados no XML para as tabelas quentes
for c01_w in C01( nr_seq_pedido_aut_p ) loop

	if (c01_w.nr_seq_segurado IS NOT NULL AND c01_w.nr_seq_segurado::text <> '') then
	
		select	max(cd_especialidade)
		into STRICT	cd_especialidade_w
		from	especialidade_medica
		where	cd_ptu		= c01_w.cd_especialidade
		and	ie_situacao 	= 'A';
		
		select	max(b.nr_sequencia)
		into STRICT	nr_seq_clinica_w
		from	pls_clinica b
		where	b.cd_ptu_online = c01_w.ie_tipo_internacao;
		
		if (coalesce(nr_seq_clinica_w::text, '') = '') then
			select	max(b.nr_sequencia)
			into STRICT	nr_seq_clinica_w
			from	pls_clinica b
			where	b.cd_ptu = c01_w.ie_tipo_internacao;
		end if;
	
		--Funcao OPS - Autorizacao
		if ( ie_funcao_scs_w = 'A' ) then

			nr_seq_plano_w	:= pls_obter_produto_benef(c01_w.nr_seq_segurado, clock_timestamp());

			insert	into pls_guia_plano(nr_sequencia, cd_guia, dt_solicitacao,
				ie_tipo_guia, nr_seq_segurado, cd_estabelecimento,
				nr_seq_plano, ie_status, ds_observacao,
				ie_estagio, dt_atualizacao, nm_usuario,
				ie_tipo_processo, cd_medico_solicitante, nr_seq_uni_exec,
				ie_carater_internacao, ie_tipo_intercambio, ie_origem_solic,
				nm_usuario_nrec, dt_atualizacao_nrec, cd_especialidade,
				ie_recem_nascido, nr_seq_clinica, ds_indicacao_clinica,
				ds_biometria, dt_internacao_sugerida, ie_cobertura_especial)
			values ( nextval('pls_guia_plano_seq'), null, clock_timestamp(),
				CASE WHEN ie_tipo_guia_p='1' THEN  '3' WHEN ie_tipo_guia_p='3' THEN  '1'  ELSE '2' END , c01_w.nr_seq_segurado, cd_estabelecimento_p,
				nr_seq_plano_w, '2', c01_w.ds_observacao,
				7, clock_timestamp(), nm_usuario_p,
				'I', null, c01_w.nr_seq_uni_exec,
				CASE WHEN c01_w.ie_urg_emerg='S' THEN 'U'  ELSE 'E' END ,'E','I',
				nm_usuario_p, clock_timestamp(), cd_especialidade_w,
				c01_w.ie_recem_nascido, nr_seq_clinica_w, c01_w.ds_ind_clinica,
				c01_w.ds_biometria, c01_w.dt_sug_internacao, c01_w.ie_cobertura_especial
				) returning nr_sequencia into nr_seq_guia_w;		
			
			CALL pls_guia_gravar_historico(nr_seq_guia_w,2,wheb_mensagem_pck.get_texto(1159957, 'CD_UNIMED_EXECUTORA='||c01_w.cd_unimed_executora),'',nm_usuario_p);

			if (coalesce(cd_especialidade_w::text, '') = '') then
				CALL pls_guia_gravar_historico(nr_seq_guia_w,2,expressao_pck.obter_desc_expressao(1048812)||c01_w.cd_especialidade,'',nm_usuario_p);
			end if;	
			
			if (c01_w.ie_tipo_acidente IS NOT NULL AND c01_w.ie_tipo_acidente::text <> '') then
				/*PTU
				1 = Acidente de Trabalho
				2 = Acidente de Transito
				3 = Acidente e Outros
				9 = Nao acidente
				*/
				insert	into pls_diagnostico(nr_sequencia, dt_atualizacao, nm_usuario,
					 ie_tipo_doenca, ie_indicacao_acidente, ie_classificacao,
					 cd_doenca, ds_diagnostico, nr_seq_guia)
				values (nextval('pls_diagnostico_seq'), clock_timestamp(), nm_usuario_p,
					 '', CASE WHEN c01_w.ie_tipo_acidente=1 THEN 0 WHEN c01_w.ie_tipo_acidente=2 THEN 1 WHEN c01_w.ie_tipo_acidente=3 THEN 2  ELSE 9 END , 'P',
					 c01_w.cd_doenca_cid, '', nr_seq_guia_w);
			end if;
		--Funcao OPS - Requisicao para autorizacao
		elsif ( ie_funcao_scs_w = 'R' ) then

			nr_seq_plano_w	:= pls_obter_produto_benef(c01_w.nr_seq_segurado, clock_timestamp());
			
			select	max(b.nr_sequencia)
			into STRICT	nr_seq_clinica_w
			from	pls_clinica b
			where	b.cd_ptu_online = c01_w.ie_tipo_internacao;
			
			if (coalesce(nr_seq_clinica_w::text, '') = '') then
				select	max(b.nr_sequencia)
				into STRICT	nr_seq_clinica_w
				from	pls_clinica b
				where	b.cd_ptu = c01_w.ie_tipo_internacao;
			end if;
			
			insert	into pls_requisicao(nr_sequencia, dt_requisicao,
				 ie_tipo_guia, nr_seq_segurado, cd_estabelecimento,
				 nr_seq_plano, nr_seq_prestador, ie_status,
				 ie_estagio, dt_atualizacao, nm_usuario,
				 ie_tipo_processo, cd_medico_solicitante, nr_seq_uni_exec,
				 ie_tipo_intercambio, ie_origem_solic, cd_especialidade,
				 nm_usuario_nrec, dt_atualizacao_nrec,ie_recem_nascido,
				 nr_seq_clinica, ie_carater_atendimento, ds_biometria,
				 ds_observacao, ds_indicacao_clinica, dt_internacao_sugerida,
				 ie_cobertura_especial)
			values ( nextval('pls_requisicao_seq'), clock_timestamp(),
				 CASE WHEN ie_tipo_guia_p='1' THEN  '3' WHEN ie_tipo_guia_p='3' THEN  '1'  ELSE '2' END , c01_w.nr_seq_segurado, cd_estabelecimento_p,
				 nr_seq_plano_w, null, 'P',
				 1, clock_timestamp(), nm_usuario_p,
				 'I', null, c01_w.nr_seq_uni_exec,
				 'E', 'I', cd_especialidade_w,
				 nm_usuario_p, clock_timestamp(), c01_w.ie_recem_nascido,
				 nr_seq_clinica_w, CASE WHEN  c01_w.ie_urg_emerg='S' THEN 'U'  ELSE 'E' END , c01_w.ds_biometria,
				 c01_w.ds_observacao, c01_w.ds_ind_clinica, c01_w.dt_sug_internacao,
				 c01_w.ie_cobertura_especial) returning nr_sequencia into nr_seq_requisicao_w;
			
			CALL pls_requisicao_gravar_hist(nr_seq_requisicao_w,'L',wheb_mensagem_pck.get_texto(1159957, 'CD_UNIMED_EXECUTORA='||c01_w.cd_unimed_executora), null, nm_usuario_p);

			if (coalesce(cd_especialidade_w::text, '') = '') then
				CALL pls_requisicao_gravar_hist(nr_seq_requisicao_w,'L',expressao_pck.obter_desc_expressao(1048812)||c01_w.cd_especialidade, null, nm_usuario_p);
			end if;
			
			if (c01_w.ie_tipo_acidente IS NOT NULL AND c01_w.ie_tipo_acidente::text <> '') then
		
				/*PTU
				1 = Acidente de Trabalho
				2 = Acidente de Transito
				3 = Acidente e Outros
				9 = Nao acidente
				*/
				insert	into pls_requisicao_diagnostico(nr_sequencia, dt_atualizacao, nm_usuario,
					 ie_tipo_doenca, ie_indicacao_acidente, ie_classificacao,
					 cd_doenca, ds_diagnostico, nr_seq_requisicao)
				values (nextval('pls_requisicao_diagnostico_seq'), clock_timestamp(), nm_usuario_p,
					 '', CASE WHEN c01_w.ie_tipo_acidente=1 THEN 0 WHEN c01_w.ie_tipo_acidente=2 THEN 1 WHEN c01_w.ie_tipo_acidente=3 THEN 2  ELSE 9 END , 'P',
					 c01_w.cd_doenca_cid, '', nr_seq_requisicao_w);
			end if;
		end if;

		--Atualiza a sequencia da Guia ou Requisicao gerada para pedido
		update	ptu_pedido_autorizacao
		set	nr_seq_guia		= nr_seq_guia_w,
			nr_seq_requisicao   	= nr_seq_requisicao_w,
			dt_atualizacao		= clock_timestamp(),
			nm_usuario		= nm_usuario_p
		where	nr_sequencia		= nr_seq_pedido_aut_p;

		commit;
	end if;

end loop;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_gerar_guia_requisicao ( nr_seq_pedido_aut_p ptu_pedido_autorizacao.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, ie_tipo_guia_p pls_requisicao.ie_tipo_guia%type) FROM PUBLIC;

