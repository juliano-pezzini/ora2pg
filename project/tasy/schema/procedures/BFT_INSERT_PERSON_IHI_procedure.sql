-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE bft_insert_person_ihi ( cd_pessoa_fisica_p person_ihi.cd_pessoa_fisica%type, nr_ihi_p person_ihi.nr_ihi%type, ie_status_p person_ihi.ie_status%type, ie_record_status_p person_ihi.ie_record_status%type, ie_conflict_p person_ihi.ie_conflict%type, ie_data_type_p person_ihi.ie_data_type%type, nm_usuario_p person_ihi.nm_usuario%type, nr_sequencia_person_ihi_p INOUT person_ihi.nr_sequencia%type) AS $body$
DECLARE



/* 	
	Requisitos anexados na OS 1982678

	ie_data_type_p 
	I for individuals
	P for professionals
*/
nr_ihi_active_w		person_ihi.nr_ihi%type;
nr_ihi_w			person_ihi.nr_ihi%type;

ie_situacao_w		person_ihi.ie_situacao%type;
ie_status_w			person_ihi.ie_status%type;
ie_record_status_w	person_ihi.ie_record_status%type;

ds_family_name_w	person_name.ds_family_name%type;
ie_sex_w			pessoa_fisica.ie_sexo%type;
dt_birth_w			pessoa_fisica.dt_nascimento%type;



BEGIN

if (cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') then

	ie_status_w := ie_status_p;
	ie_record_status_w := ie_record_status_p;
	nr_ihi_w := nr_ihi_p;
	
	select	max(nr_ihi)
	into STRICT	nr_ihi_active_w
	from 	person_ihi
	where	cd_pessoa_fisica = cd_pessoa_fisica_p
	and		ie_data_type = ie_data_type_p
	and		ie_situacao = 'A';	

--- 005847 -- When resolved info is received, the previous IHI shall be marked as resolved.
	if (ie_status_p in ('RS')) then	
	
		if (nr_ihi_active_w <> nr_ihi_p) then
			update 	person_ihi
			set 	ie_status = 'RS'		
			where	cd_pessoa_fisica = cd_pessoa_fisica_p
			and		ie_data_type = ie_data_type_p
			and		ie_situacao = 'A';
			
			ie_status_w := 'CA';
			
		else
			ie_status_w := 'A';
		end if;
		
		ie_situacao_w := 'I';
			
	end if;
--END


-- 16815 and #17421 - When received 'Retired' or 'Expired', record status is not received. Store as empty instead of null.
	if (ie_status_p = 'R' or ie_status_p = 'E') and (coalesce(ie_record_status_p::text, '') = '') then

		ie_record_status_w := ' ';
	end if;
-- END



-- 005847 - Storage of a patient's previous IHI details
	if 	((ie_record_status_w not in ('U', 'P')) or (ie_data_type_p = 'P')) and (ie_status_p <> 'CA') then
		
		update 	person_ihi
		set 	ie_situacao = 'I'
		where 	cd_pessoa_fisica = cd_pessoa_fisica_p;
		
		ie_situacao_w := 'A';
	
	else
		-- store the unverified and provisional records as inactive records, and do not inactivate the current active record.
		ie_situacao_w := 'I';
	end if;
-- END

	
-- 005839 - Alert when the same IHI is assigned to records of more than one patient
	if (ie_conflict_p = 'S') then
	
		-- Update all other patients with same IHI number as conflicting
		update 	person_ihi
		set		ie_conflict = 'S'
		where	nr_ihi	= nr_ihi_p
		and 	ie_data_type = ie_data_type_p
		and 	ie_situacao = 'A';
		
		select 	b.ds_family_name,
				a.ie_sexo,
				a.dt_nascimento
		into STRICT	ds_family_name_w,
				ie_sex_w,
				dt_birth_w
		from 	pessoa_fisica a,
				person_name b
		where 	a.nr_seq_person_name = b.nr_sequencia	
		and 	lower(b.ds_type) = 'main'
		and 	a.cd_pessoa_fisica = cd_pessoa_fisica_p;		
			
		-- Update all other patients with similar demographics as conflicting
		update 	person_ihi
		set		ie_conflict = 'S'
		where	ie_data_type = ie_data_type_p
		and 	ie_situacao = 'A'
		and 	cd_pessoa_fisica in (
			SELECT	a.cd_pessoa_fisica
			from 	pessoa_fisica a,
					person_name b
			where 	a.nr_seq_person_name = b.nr_sequencia		
			and 	upper(b.ds_family_name) = upper(ds_family_name_w)
			and 	upper(a.ie_sexo) = upper(ie_sex_w)
			and 	trunc(a.dt_nascimento) = trunc(dt_birth_w)
			and 	a.cd_pessoa_fisica <> cd_pessoa_fisica_p
		);		
	
	end if;
-- END
	select	nextval('person_ihi_seq')
	into STRICT	nr_sequencia_person_ihi_p
	;

	insert into person_ihi(
		nr_sequencia,
		cd_pessoa_fisica,
		nm_usuario,
		nm_usuario_nrec,
		dt_atualizacao,
		dt_atualizacao_nrec,
		dt_assignment,
		ie_situacao,
		ie_conflict,
		nr_ihi,
		ie_status,
		ie_record_status,
		ie_data_type)
	values (
		nr_sequencia_person_ihi_p,
		cd_pessoa_fisica_p,
		nm_usuario_p,
		nm_usuario_p,
		clock_timestamp(),
		clock_timestamp(),
		clock_timestamp(),
		ie_situacao_w,
		ie_conflict_p,
		nr_ihi_w,
		ie_status_w,
		ie_record_status_w,
		ie_data_type_p);
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE bft_insert_person_ihi ( cd_pessoa_fisica_p person_ihi.cd_pessoa_fisica%type, nr_ihi_p person_ihi.nr_ihi%type, ie_status_p person_ihi.ie_status%type, ie_record_status_p person_ihi.ie_record_status%type, ie_conflict_p person_ihi.ie_conflict%type, ie_data_type_p person_ihi.ie_data_type%type, nm_usuario_p person_ihi.nm_usuario%type, nr_sequencia_person_ihi_p INOUT person_ihi.nr_sequencia%type) FROM PUBLIC;

