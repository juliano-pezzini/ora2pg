-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE sismama_gerar_laudo_paciente ( nr_seq_sismama_p bigint, nm_usuario_p text, nr_prescricao_p bigint, nr_seq_prescr_p bigint) AS $body$
DECLARE


ds_laudo_w		text	:= '';
nr_atendimento_w		bigint;
nr_laudo_w		bigint;
nr_seq_laudo_w		bigint;
cd_profissional_w		varchar(10);
dt_emissao_w		timestamp;
ie_categoria_dir_w		varchar(100);
ie_categoria_esq_w		varchar(100);
ie_recomendacao_dir_w	varchar(100);
ie_recomendacao_esq_w	varchar(100);
ds_observacao_w		varchar(2000);
ie_medico_w		varchar(10);
nr_seq_proc_w			bigint;
qt_proc_w			bigint;


BEGIN

begin
select 	cd_profissional,
	nr_atendimento,
	dt_emissao
into STRICT	cd_profissional_w,
	nr_atendimento_w,
	dt_emissao_w
from 	sismama_atendimento
where 	nr_sequencia = nr_seq_sismama_p;
exception
when others then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(227420,'NR_SEQ_SISMAMA='||nr_seq_sismama_p);
	/*Não foi possível obter as informações do laudo SISMAMA , para gerar o laudo do paciente. Parâmetro[74] da função SUS BPA.*/

end;

if (nr_prescricao_p > 0) and (nr_seq_prescr_p > 0) then
	begin
	select	nr_sequencia
	into STRICT	nr_seq_proc_w
	from	procedimento_paciente
	where	nr_prescricao = nr_prescricao_p
	and		nr_sequencia_prescricao = nr_seq_prescr_p;

	if (nr_seq_proc_w IS NOT NULL AND nr_seq_proc_w::text <> '') then
		update	sismama_atendimento
		set		nr_seq_proc_pac = nr_seq_proc_w
		where   nr_sequencia = nr_seq_sismama_p;

	end if;

	end;
end if;

select 	coalesce(Obter_se_medico(cd_profissional_w,'M') ,'N')
into STRICT	ie_medico_w
;

select	coalesce(max(nr_laudo),0) + 1
into STRICT	nr_laudo_w
from	laudo_paciente
where	nr_atendimento = nr_atendimento_w;

select	nextval('laudo_paciente_seq')
into STRICT	nr_seq_laudo_w
;

if (sus_obter_tp_laudo_sismama(nr_seq_sismama_p,1) = 1) then
	begin
	begin
	select	substr(obter_valor_dominio(2800,ie_categoria_dir),1,100),
		substr(obter_valor_dominio(2800,ie_categoria_esq),1,100),
		substr(obter_valor_dominio(2801,ie_recomendacao_dir),1,100),
		substr(obter_valor_dominio(2801,ie_recomendacao_esq),1,100),
		ds_observacao
	into STRICT	ie_categoria_dir_w,
		ie_categoria_esq_w,
		ie_recomendacao_dir_w,
		ie_recomendacao_esq_w,
		ds_observacao_w
	from	sismama_mam_conclusao
	where	nr_seq_sismama = nr_seq_sismama_p;
	exception
	when others then
		ie_categoria_dir_w		:= '';
		ie_categoria_esq_w		:= '';
		ie_recomendacao_dir_w	:= '';
		ie_recomendacao_esq_w	:= '';
		ds_observacao_w		:= '';
	end;

	ds_laudo_w := 	wheb_mensagem_pck.get_texto(298862,'IE_CATEGORIA_DIR_P='||ie_categoria_dir_w ||
							';IE_CATEGORIA_ESQ_P='||ie_categoria_esq_w ||
							';IE_RECOMENDACAO_DIR_P='||ie_recomendacao_dir_w ||
							';IE_RECOMENDACAO_ESQ_P='||ie_recomendacao_esq_w ||
							';DS_OBSERVACAO_P=' ||ds_observacao_w);
	end;
end if;

if (ie_medico_w = 'S') then
	begin

	if (nr_prescricao_p > 0) and (nr_seq_prescr_p > 0) then
		begin

		insert into laudo_paciente(	nr_sequencia,
						nr_atendimento,
						dt_entrada_unidade,
						nr_laudo,
						nm_usuario,
						dt_atualizacao,
						cd_medico_resp,
						ds_titulo_laudo,
						ds_laudo,
						dt_liberacao,
						qt_imagem,
						nr_prescricao,
						nr_seq_prescricao,
						nr_seq_proc)
		values (nr_seq_laudo_w,
						nr_atendimento_w,
						dt_emissao_w,
						nr_laudo_w,
						nm_usuario_p,
						clock_timestamp(),
						cd_profissional_w,
						'(204030030) '||substr(obter_desc_prescr_proc(204030030,7, null),1,200),
						ds_laudo_w,
						dt_emissao_w,
						0,
						nr_prescricao_p,
						nr_seq_prescr_p,
						nr_seq_proc_w);

		CALL Vincular_Procedimento_Laudo(nr_seq_laudo_w,'N',nm_usuario_p);

		update	prescr_procedimento
		set		ie_status_execucao = 40
		where	nr_prescricao = nr_prescricao_p
		and		nr_sequencia = nr_seq_prescr_p;
		end;
	else
		begin
		insert into laudo_paciente(	nr_sequencia,
						nr_atendimento,
						dt_entrada_unidade,
						nr_laudo,
						nm_usuario,
						dt_atualizacao,
						cd_medico_resp,
						ds_titulo_laudo,
						ds_laudo,
						dt_liberacao,
						qt_imagem)
		values (nr_seq_laudo_w,
						nr_atendimento_w,
						dt_emissao_w,
						nr_laudo_w,
						nm_usuario_p,
						clock_timestamp(),
						cd_profissional_w,
						'(204030030) '||substr(obter_desc_prescr_proc(204030030,7, null),1,200),
						ds_laudo_w,
						dt_emissao_w,
						0);

		CALL Vincular_Procedimento_Laudo(nr_seq_laudo_w,'N',nm_usuario_p);
		end;
	end if;

	end;
else
	CALL wheb_mensagem_pck.exibir_mensagem_abort(227421);
	/*O profissinal do laudo SISMAMA não é médico, por este motivo não pode ser gerado um laudo para o paciente. Parâmetro[74] da função SUS BPA.*/

end if;


commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE sismama_gerar_laudo_paciente ( nr_seq_sismama_p bigint, nm_usuario_p text, nr_prescricao_p bigint, nr_seq_prescr_p bigint) FROM PUBLIC;

