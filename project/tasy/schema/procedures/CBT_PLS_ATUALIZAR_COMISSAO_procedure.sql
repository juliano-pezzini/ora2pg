-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE cbt_pls_atualizar_comissao ( nr_seq_lote_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
ie_debito_credito_w			varchar(1);
nr_contador_w				bigint := 0;
nr_seq_regra_w				pls_regra_ctb_mensal_venda.nr_sequencia%type;
cd_historico_w				historico_padrao.cd_historico%type;
cd_conta_contabil_w			conta_contabil.cd_conta_contabil%type;
cd_classificacao_w			conta_contabil.cd_classificacao%type;
nr_seq_plano_w				pls_plano.nr_sequencia%type;

c_itens CURSOR FOR 
	SELECT	1 ie_cursor, 
		'IM' ie_tipo_movimento, 
		d.nr_sequencia nr_seq_item, 
		f.ie_tipo_contratacao, 
		f.ie_preco, 
		f.ie_segmentacao, 
		f.ie_regulamentacao, 
		f.ie_participacao, 
		substr(pls_obter_dados_contrato(e.nr_seq_contrato,'TB'),1,3) ie_tipo_beneficiario, 
		e.ie_tipo_segurado, 
		a.dt_referencia, 
		g.cd_pessoa_fisica, 
		g.cd_cgc, 
		d.nr_seq_comissao_benef 
	FROM pls_vendedor g, pls_segurado e, pls_comissao_benef_item d, pls_comissao_beneficiario c, pls_comissao b, pls_lote_comissao a, pls_mensalidade_segurado h
LEFT OUTER JOIN pls_plano f ON (h.nr_seq_plano = f.nr_sequencia)
WHERE a.nr_sequencia	= b.nr_seq_lote and g.nr_sequencia	= b.nr_seq_canal_venda and b.nr_sequencia	= c.nr_seq_comissao and c.nr_sequencia	= d.nr_seq_comissao_benef and e.nr_sequencia	= c.nr_seq_segurado  and a.nr_sequencia	= nr_seq_lote_p and c.nr_seq_segurado_mens = h.nr_sequencia and coalesce(d.nr_seq_plano_sca::text, '') = '' and coalesce(b.dt_cancelamento::text, '') = '' 
	 
union all
 
	SELECT	2 ie_cursor, 
		'IM' ie_tipo_movimento, 
		d.nr_sequencia nr_seq_item, 
		f.ie_tipo_contratacao, 
		f.ie_preco, 
		f.ie_segmentacao, 
		f.ie_regulamentacao, 
		f.ie_participacao, 
		substr(pls_obter_dados_contrato(e.nr_seq_contrato,'TB'),1,3) ie_tipo_beneficiario, 
		e.ie_tipo_segurado, 
		a.dt_referencia, 
		g.cd_pessoa_fisica, 
		g.cd_cgc, 
		d.nr_seq_comissao_benef 
	FROM pls_vendedor g, pls_segurado e, pls_comissao_benef_item d, pls_comissao_beneficiario c, pls_comissao b, pls_lote_comissao a, pls_mensalidade_segurado h
LEFT OUTER JOIN pls_plano f ON (h.nr_seq_plano = f.nr_sequencia)
WHERE a.nr_sequencia	= b.nr_seq_lote and g.nr_sequencia	= b.nr_seq_canal_venda and b.nr_sequencia	= c.nr_seq_comissao and c.nr_sequencia	= d.nr_seq_comissao_benef and e.nr_sequencia	= c.nr_seq_segurado  and c.nr_seq_segurado_mens	= h.nr_sequencia and a.nr_sequencia	= nr_seq_lote_p and coalesce(d.nr_seq_plano::text, '') = '' and coalesce(b.dt_cancelamento::text, '') = '' 
	 
union all
 
	select	3 ie_cursor, 
		'VA', 
		c.nr_sequencia, 
		null, 
		null, 
		null, 
		null, 
		null, 
		null, 
		null, 
		a.dt_referencia, 
		d.cd_pessoa_fisica, 
		d.cd_cgc, 
		null 
	from	pls_lote_comissao		a, 
		pls_comissao			b, 
		pls_repasse_lanc		c, 
		pls_vendedor			d 
	where	a.nr_sequencia	= b.nr_seq_lote 
	and	d.nr_sequencia	= b.nr_seq_canal_venda 
	and	b.nr_sequencia	= c.nr_seq_comissao 
	and	a.nr_sequencia	= nr_seq_lote_p 
	and	coalesce(b.dt_cancelamento::text, '') = '';

c_debito_credito CURSOR FOR 
	SELECT	'D' 
	 
	
union all
 
	SELECT 	'C' 
	;

vet_item	c_itens%rowtype;


BEGIN 
 
open c_itens;
loop 
fetch c_itens into 
	vet_item;
EXIT WHEN NOT FOUND; /* apply on c_itens */
	begin 
 
	if (vet_item.ie_cursor = 2) and (coalesce(vet_item.ie_tipo_contratacao, 'X') = 'X') then 
		select max(a.nr_seq_plano) 
		into STRICT	nr_seq_plano_w 
		from	pls_comissao_benef_item		a 
		where	a.nr_seq_comissao_benef	= vet_item.nr_seq_comissao_benef;
		 
		select	max(a.ie_tipo_contratacao) 
		into STRICT	vet_item.ie_tipo_contratacao 
		from	pls_plano	a 
		where	a.nr_sequencia 	= nr_seq_plano_w;
	end if;
	 
	open c_debito_credito;
	loop 
	fetch c_debito_credito into 
		ie_debito_credito_w;
	EXIT WHEN NOT FOUND; /* apply on c_debito_credito */
		begin 
		 
		cd_conta_contabil_w	:= '';
		cd_historico_w		:= '';
		nr_seq_regra_w		:= 0;
		 
		nr_contador_w		:= nr_contador_w + 1;
		 
		SELECT * FROM ctb_pls_obter_conta_repasse(	cd_estabelecimento_p, vet_item.dt_referencia, ie_debito_credito_w, vet_item.ie_tipo_contratacao, vet_item.ie_preco, vet_item.ie_segmentacao, vet_item.ie_regulamentacao, vet_item.ie_participacao, vet_item.ie_tipo_beneficiario, vet_item.ie_tipo_segurado, vet_item.cd_pessoa_fisica, vet_item.cd_cgc, nr_seq_regra_w, cd_historico_w, cd_conta_contabil_w, vet_item.ie_tipo_movimento) INTO STRICT nr_seq_regra_w, cd_historico_w, cd_conta_contabil_w;
								 
		if (coalesce(nr_seq_regra_w,0) > 0) then 
			cd_classificacao_w	:= ctb_obter_classif_conta(cd_conta_contabil_w, null, vet_item.dt_referencia);
		 
			if (ie_debito_credito_w = 'D') then 
				update	pls_comissao_benef_item 
				set	cd_conta_debito		= cd_conta_contabil_w, 
					cd_classif_debito	= cd_classificacao_w, 
					cd_historico		= cd_historico_w, 
					nr_seq_regra_contab	= nr_seq_regra_w 
				where	nr_sequencia		= vet_item.nr_seq_item 
				and	vet_item.ie_tipo_movimento = 'IM';
				 
				update	pls_repasse_lanc 
				set	cd_conta_deb	 	= cd_conta_contabil_w, 
					cd_classif_deb		= cd_classificacao_w, 
					cd_historico		= cd_historico_w, 
					nr_seq_regra_ctb_deb	= nr_seq_regra_w 
				where	nr_sequencia		= vet_item.nr_seq_item 
				and	vet_item.ie_tipo_movimento = 'VA';
				 
			elsif (ie_debito_credito_w = 'C') then 
				update	pls_comissao_benef_item 
				set	cd_conta_credito	= cd_conta_contabil_w, 
					cd_classif_credito	= cd_classificacao_w, 
					cd_historico		= cd_historico_w, 
					nr_seq_regra_contab	= nr_seq_regra_w 
				where	nr_sequencia		= vet_item.nr_seq_item 
				and	vet_item.ie_tipo_movimento = 'IM';
				 
				update	pls_repasse_lanc 
				set	cd_conta_cred	 	= cd_conta_contabil_w, 
					cd_classif_cred		= cd_classificacao_w, 
					cd_historico		= cd_historico_w, 
					nr_seq_regra_ctb_cred	= nr_seq_regra_w 
				where	nr_sequencia		= vet_item.nr_seq_item 
				and	vet_item.ie_tipo_movimento = 'VA';
			end if;
		end if;
		 
		if (mod(nr_contador_w,1000) = 0) then 
			commit;
		end if;
 
		end;
	end loop;
	close c_debito_credito;
 
	end;
end loop;
close c_itens;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE cbt_pls_atualizar_comissao ( nr_seq_lote_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

