-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE lista_gerar AS (nr_prescricao		bigint,
		nr_seq_material		bigint,
		nr_seq_horario		bigint);


CREATE OR REPLACE PROCEDURE gerar_alteracao_horario_prescr ( cd_estabelecimento_p bigint, nr_atendimento_p bigint, ie_tipo_item_p text, cd_item_p text, cd_intervalo_p text, qt_item_p bigint, qt_hora_prescricao_p bigint, dt_evento_p timestamp, nr_seq_horario_p bigint, nr_prescr_adm_p bigint, nr_prescricoes_p text, nr_prescricao_p bigint, nr_seq_item_p bigint, ie_laboratorio_p text, ie_alteracao_p bigint, qt_adm_p bigint, cd_um_qt_adm_p text, ie_satisfacao_p bigint, ie_qualidade_p bigint, ds_justificativa_p text, ds_observacao_p text, nm_usuario_p text, ie_gerar_todos_p text, nr_seq_proc_interno_p bigint, nr_agrupamento_p bigint, nr_seq_motivo_susp_p bigint, ie_acm_sn_p text, nr_seq_prot_glic_p bigint, ie_inicia_proced_p text, cd_medico_solic_p bigint, ie_item_suspenso_p text, cd_perfil_p bigint, cd_funcao_p bigint, ie_susp_mat_prescr_p text, nr_seq_lote_forncedor_p bigint, ie_proc_regra_p text DEFAULT 'N', cd_procedimento_regra_p bigint DEFAULT NULL, ie_origem_proced_regra_p bigint DEFAULT NULL, nr_seq_proc_interno_regra_p bigint DEFAULT NULL, ie_alterou_hor_adep_p text DEFAULT NULL, nr_seq_assinatura_p bigint DEFAULT NULL, ie_palm_p text DEFAULT NULL, cd_unidade_medida_p text DEFAULT NULL, ds_item_p text DEFAULT NULL, ds_componentes_p text DEFAULT NULL, ds_observacao_item_p text DEFAULT NULL, cd_evolucao_p INOUT bigint DEFAULT NULL, ie_via_aplicacao_p text default null, nr_seq_motivo_adm_p bigint default null, ds_msg_p INOUT text DEFAULT NULL, nr_seq_topo_lat_p topografia_lat_adm.nr_sequencia%type default null, ie_somente_horario_p text default 'N', ie_via_aplic_alt_p text default null, nr_seq_part_name_p bigint default null, ie_procedure_time_p text default null, start_time_p text default null, end_time_p text default null, dept_location_p text default null, req_time_p text default null, ie_alterar_item_assoc_p text default 'N') AS $body$
DECLARE


ora2pg_rowcount int;
dt_horario_w				timestamp;
nr_prescricoes_w			varchar(255);
qt_conta_w					bigint;
nr_prescricoes_ww			varchar(255);
cd_um_dose_adm_w			varchar(255);
cd_item_w					varchar(255);
ie_permite_exec_w			varchar(255);
ds_item_w					varchar(255);
ie_ccg_confirmacao_w		varchar(2);
ds_justificativa_w			varchar(255);
ds_obs_final_w				varchar(2000);
ie_lancar_w					varchar(2);
ie_alteracao_w				bigint;
nr_seq_etapa_w				bigint;
ie_conta_rec_w	varchar(2);
varie_cobra_prim_hor_w		varchar(2);
ie_suspenso_adep_w			varchar(2);
ie_suspensao_w				varchar(2);
ie_impedir_w				varchar(2);
ie_via_aplicacao_w			varchar(15);
ie_inativar_sv_w			varchar(2);
varUpdate_w					varchar(2);
ie_status_sol_w				varchar(25);
ie_status_rec_w				varchar(25);
ie_status_interv_w				varchar(25);
cd_unidade_medida_w			varchar(25);
nr_prescricao_w				bigint;
nr_prescr_ccg_w				bigint;
nr_prescricao_susp_w		bigint;
cd_recomendacao_w			bigint;
nr_prescricao_w2			bigint;
nr_sequencia_w				bigint;
nr_seq_proc_w				bigint;
nr_seq_hor_w				bigint;
nr_seq_interno_w			bigint;
qt_solucao_w				double precision;
nr_seq_item_w				bigint;
nr_processo_desdobrado_w	bigint;
nr_seq_material_w			bigint;
nr_seq_w					bigint;
ie_exec_proc_assoc_w		varchar(1);
nr_seq_solucao_w			bigint;
nr_seq_proc_interno_w		bigint;
nr_seq_proc_int_ccg_w		bigint;
ie_status_novo_w			smallint;
nr_agrupamento_w			double precision;
nr_seq_horario_w			bigint;
nr_seq_alteracao_w			bigint;
nr_seq_lote_w				bigint;
dt_atualizacao_w			timestamp := clock_timestamp();
dt_horario_adm_w			timestamp;
dt_atend_lote_w				timestamp;
ds_param_proc_w				varchar(2000);
ie_regra_lanc_conta_w		varchar(1);
nr_seq_map_w				bigint;
dt_param_w					timestamp;
ie_consistir_pend_w			varchar(1);
ie_somente_com_baixa_w		varchar(1);
ie_cobrar_horario_w			varchar(1);
IE_COBRAR_HORARIOI_W		varchar(1);
ie_cobra_adep_w				char(1);
cd_um_dose_w				varchar(30);
qt_dose_w					double precision;
qt_dose_comp_w				double precision;
cd_motivo_baixa_w			double precision;
ie_consist_dose_adm_w		varchar(2);
ie_data_proc_w				varchar(15);
ie_data_lib_prescr_w		varchar(15);
ie_exibe_suspenso_w			varchar(15);
ie_status_atend_w			smallint;
ie_cig_w					varchar(2);
ie_proc_associados_w		varchar(1);
ie_altera_status_lab_w		varchar(1);
qt_registro_w				bigint;
nr_seq_exame_w				bigint;
nr_seq_item_w2				bigint;
ie_permite_adm_w			varchar(1);
qt_horas_adm_w				bigint;
ie_checa_retroativo_w		varchar(1);
ie_susp_gestao_exame_w		varchar(1);
ie_altera_status_pa_w		varchar(1);
var_desdobrar_processo_w	varchar(1);
ie_acm_w					varchar(1);
ie_sn_w						varchar(1);
ie_acm_sn_w					varchar(1);
ie_acm_sn_ccg_w				varchar(1);
ie_iniciar_proc_w			varchar(1);
cd_setor_atendimento_w		bigint;
cd_setor_exec_w				bigint;
cd_procedimento_w			bigint;
cd_proc_ccg_w				bigint;
ie_origem_proced_w			bigint;
cd_proc_conta_w				bigint;
ie_origem_proc_conta_w		bigint;
qt_procedimento_w			double precision;
qt_procedimento_ww			double precision;
qt_proc_ccg_w				double precision;
dt_inicio_proced_w			timestamp;
qt_dif_datas_w				bigint;
cd_dieta_w					integer;
qt_reg_suspensos_w			smallint;
cd_setor_pac_w				bigint;
ie_cobra_proc_hor_w			varchar(1);
nr_seq_processo_w			bigint;
ie_encerrar_ccg_w			varchar(1);
ie_encerrar_ivc_w			varchar(1);
ie_encerrar_ccg_auto_w		varchar(1);
ie_encerrar_ivc_auto_w		varchar(1);
dt_estalidade_max_w			timestamp;
ie_consist_hr_estabilid_w varchar(1);
ie_medic_paciente_w			varchar(1);
cd_motivo_Exc_medic_pac_w	bigint;
ie_existe_w					char(1);
ie_selecionar_dieta_susp_w	varchar(1);
qt_min_rev_evento_w			bigint;
nr_seq_bomba_w				bigint;
nr_prescr_bomba_w			bigint;
ie_mostra_adep_w			varchar(1);
ie_exibe_sem_lib_farm_w		varchar(1);
ie_adm_processo_aut_w		varchar(1);
cd_material_w				integer;
qt_material_w				double precision;
cd_intervalo_w				varchar(7);
cd_interv_ccg_w				varchar(7);
ie_bomba_infusao_w			varchar(1);
dt_checagem_adep_w			timestamp;
ie_ctrl_glic_w				varchar(3);
ie_tipo_item_assoc_w		varchar(15);
ds_dieta_w					varchar(255);
ds_obs_dieta_w				varchar(255);
cd_prescritor_w				varchar(10);
ie_consiste_regra_conv_w	varchar(1);
ds_erro_w					varchar(4000);
ie_adm_liberada_w			varchar(1);
cd_pessoa_fisica_w			varchar(10);
ds_recomendacao_w			varchar(250);
ds_procedimento_w			procedimento.ds_procedimento%TYPE;
nr_prescr_log_w				bigint;
ie_atualizou_w				varchar(1);
nr_seq_prot_glic_w			bigint;
nr_seq_prot_ccg_w			bigint;
ie_consiste_autor_exec_w	varchar(1);
ie_regra_w					varchar(10);
nr_seq_regra_w				bigint;
cd_pessoa_coleta_w			varchar(10);
dt_procedimento_w			timestamp;
cd_medico_exec_w			varchar(10);
ie_origem_inf_w				varchar(1);
cd_cgc_laboratorio_w		varchar(15);
ie_gerar_setor_prescr_w		varchar(3);
ie_tipo_atendimento_w		smallint;
ie_medico_executor_w		varchar(3);
cd_profissional_w			varchar(10);
cd_convenio_w				bigint;
cd_categoria_w				varchar(10);
cd_medico_regra_w			varchar(10);
ie_autorizacao_w			varchar(3);
ie_autorizacao_ww			varchar(3);
nr_seq_classificacao_w		bigint;
dt_entrada_w				timestamp;
nr_doc_convenio_w			varchar(20);
ie_tipo_guia_w				varchar(3);
cd_senha_w					varchar(20);
ie_atualiza_data_conta_w	varchar(1);
nr_prescricao_ww			bigint;
qt_dose_ww					double precision;
ds_unidade_medida_w			varchar(30);
cd_pessoa_atend_w			varchar(10);
nr_seq_proc_princ_w			bigint;
ie_inf_quant_proc_regra_w	varchar(3);
var_param_426_w				varchar(1);
cd_setor_prescricao_w		integer;
qt_mat_adep_conta_w			bigint;
ie_regra_proc_conv_w		varchar(1);
cd_plano_w					varchar(10);
cd_tipo_acomodacao_w		smallint;
ie_tipo_item_w				varchar(255);
cd_setor_atendimento_aten_w bigint;
ie_susp_por_duplic_w		char(1) := 'N';
qt_minutos_apraz_cg_w		smallint;
nr_seq_hor_glic_w			bigint;
nr_seq_proc_ccg_w			bigint;
ie_inconsistencia_ccg_w		varchar(20);
ds_inconsistentes_ccg_w		varchar(20);
ds_sql_cursor_w				varchar(10000);
ds_sql_where_w				varchar(10000);
ie_tipo_dieta_cpoe_w		varchar(10);
nm_tabela_w					varchar(30);
ie_glosa_w					regra_ajuste_proc.ie_glosa%type;
nr_seq_regra_preco_w		regra_ajuste_proc.nr_sequencia%type;
ie_conferir_med_antes_adm_w	varchar(1);
ie_exec_pend_assinat_w		varchar(1);
nr_sequencia_item_w			bigint;
ie_pode_reverter_w			varchar(1);
ie_param682_w				varchar(1);
ie_param716_w       varchar(1);
nr_etapa_w					integer;
ie_status_npt_w				varchar(5);
dt_fim_w					timestamp;
nr_seq_item_cpoe_w			cpoe_material.nr_sequencia%type;
cd_funcao_origem_w			prescr_medica.cd_funcao_origem%type;
dt_entrega_setor_w			timestamp;
dt_recebimento_setor_w		timestamp;
dt_suspensao_hor_w			timestamp;
dt_suspensao_prescr_w			timestamp;
ie_inicia_adm_quimio_w		varchar(1);
nr_seq_atendimento_quimio_w paciente_atendimento.nr_seq_atendimento%TYPE;
ie_proc_w					varchar(1);
ie_param8_cpoe_w			varchar(1);
dt_inicio_prescr_w			timestamp;
dt_validade_prescr_w		timestamp;
qt_hor_inv_w				bigint;
nr_seq_alteracao_comp_w		bigint;
nr_seq_atendimento_w		prescr_material.nr_seq_atendimento%type;
nr_seq_evento_w				prescr_mat_alteracao.nr_sequencia%type;
nr_seq_integr_alt_w   prescr_mat_alteracao.nr_sequencia%type;
regra_alteracao_is_filler_w   CPOE_REGRA_ATOR.IE_MEDICATION_ORDER_TYPE%type;
nr_entity_identifier_w	cpoe_integracao.nr_sequencia%type;
ie_param697_w				varchar(1);
ie_reg_evento_w				varchar(1);
cd_classe_mat_w				rep_intervencao_medic.cd_classe_material%type;
cd_grupo_mat_w				rep_intervencao_medic.cd_grupo_material%type;
cd_sub_grupo_mat_w			rep_intervencao_medic.cd_subgrupo_material%type;
ds_mensagem_w				rep_intervencao_medic.ds_mensagem%type;
qt_minutos_apraz_w			rep_intervencao_medic.qt_minutos_apraz%type;
ie_exibir_msg_w				boolean := false;
ie_interv_vigente_w			varchar(1);
nr_prescr_interv_w			pe_prescricao.nr_prescricao%type;
ie_acm_interv_w				varchar(1);
cd_intervalo_interv_w		pe_prescr_proc.cd_intervalo%type;
qt_interv_w					pe_prescr_proc.qt_intervencao%type;
nr_seq_interv_w				pe_prescr_proc.nr_sequencia%type;
ds_msg_w					varchar(255);
cd_certificado_w			usuario.cd_certificado%type;
nr_seq_proc_paciente_w		procedimento_paciente.nr_sequencia%type;
ie_atualizou_reg_w			boolean := false;
ie_gera_sem_certificado_w	varchar(1);
nr_seq_projeto_w			tasy_projeto_assinatura.nr_sequencia%type;
ie_mostra_proc_assoc_w		varchar(1);
ie_param1562_cpoe_w			varchar(1);
dt_horario_mat_hor_onc_w	prescr_mat_hor.dt_horario%type;
ie_oncologia_w				cpoe_material.ie_oncologia%type;
nr_sequencia_mat_hor_w      prescr_mat_hor.nr_sequencia%type;
ie_gerou_evento_w           boolean;
ie_epimed_w					varchar(1);
nr_seq_processo_orig_w      adep_processo.nr_sequencia%type;
ie_hor_administrado_w      varchar(1);
ie_status_processo_w       varchar(1);
nr_seq_cpoe_w               cpoe_material.nr_sequencia%type;
nr_prescricao_cpoe_w        prescr_medica.nr_prescricao%type;
dt_inicio_cpoe_w            cpoe_material.dt_liberacao%type;
dt_conta_w					timestamp;
ie_somente_horario_w        varchar(1);
cd_recom_sedation_holiday_w bigint;
nr_seq_hor_dupl_w			prescr_proc_hor.nr_sequencia%type;
cd_evolucao_w bigint;
ie_gerar_evolucao_emar_w varchar(1);
nr_seq_mat_compl_w bigint;
nr_seq_proc_hor_part_name_w prescr_proc_hor_part_name.nr_sequencia%type; --JRS232
json_sedation_holiday       philips_json;
envio_integracao_bb         text;
retorno_integracao_bb       text;
ie_tipo_ww varchar(10);
ie_prescr_emergencia_w		prescr_medica.ie_prescr_emergencia%type;
ie_susp_nurse_w 			varchar(2);
ie_abriu_cursor_w			boolean;
nr_atendimento_w adep_processo.nr_atendimento%type;
cd_local_estoque_w adep_processo.cd_local_estoque%type;

type Vetor_Lista_Gerar is
	table of lista_gerar index by integer;

i				integer := 1;
j				integer := 1;
Vetor_Lista_Gerar_w		Vetor_Lista_Gerar;


cCursor REFCURSOR;

c12 CURSOR FOR
SELECT	a.nr_prescricao,  -- dietas orais sem horarios no grid do ADEP
		null nr_seq_item,
		d.cd_dieta,
		c.nr_sequencia nr_seq_hor
from	dieta x,
		prescr_dieta d,
		prescr_dieta_hor c,
		prescr_medica a
where	x.cd_dieta = d.cd_dieta
and		d.nr_prescricao = c.nr_prescricao
and		d.nr_prescricao	= a.nr_prescricao
and		c.nr_prescricao = a.nr_prescricao
and		obter_se_prescr_lib_adep(a.dt_liberacao_medico, a.dt_liberacao, a.dt_liberacao_farmacia, ie_data_lib_prescr_w) = 'S'
and		obter_se_exibir_rep_adep_setor(cd_setor_pac_w,a.cd_setor_atendimento,coalesce(a.ie_adep,'S')) = 'S'
and		coalesce(c.ie_situacao,'A') = 'A'
and		a.nr_atendimento = nr_atendimento_p
and		obter_se_valor_contido(a.nr_prescricao, nr_prescricoes_w) = 'S'
and		a.dt_validade_prescr > dt_param_w
and		ie_tipo_item_p = 'DS'
and		d.cd_dieta = (cd_item_p)::numeric
and		Obter_se_horario_liberado(c.dt_lib_horario, c.dt_horario) = 'S'
AND (ie_somente_horario_w <> 'S' OR (ie_somente_horario_w = 'S' AND nr_seq_horario_p = c.nr_sequencia));

c02 CURSOR FOR
SELECT	a.nr_prescricao nr_prescricao, -- suplementos orais
		b.nr_sequencia nr_seq_item,
		c.nr_sequencia nr_seq_hor,
		b.ie_via_aplicacao,
		a.cd_funcao_origem,
		b.nr_seq_dieta_cpoe
FROM	prescr_mat_hor c,
		prescr_material b,
		prescr_medica a
WHERE	c.nr_prescricao = b.nr_prescricao
AND		c.nr_seq_material = b.nr_sequencia
AND		b.nr_prescricao = a.nr_prescricao
AND		obter_se_exibir_rep_adep_setor(cd_setor_pac_w,a.cd_setor_atendimento,coalesce(a.ie_adep,'S')) = 'S'
AND		b.ie_agrupador IN (12)
AND		coalesce(c.ie_situacao,'A') = 'A'
AND		a.nr_atendimento = nr_atendimento_p
AND		obter_se_prescr_adep(a.nr_prescricao, b.nr_sequencia, nr_prescricao_p, coalesce(nr_seq_item_p,nr_sequencia_item_w), nr_prescricoes_w) = 'S'
AND		a.dt_validade_prescr > dt_param_w
AND		b.cd_material = cd_item_p
AND		coalesce(b.cd_intervalo,'XPTO') = coalesce(cd_intervalo_p,'XPTO')
AND		coalesce(b.qt_dose,1) = coalesce(qt_item_p,coalesce(b.qt_dose,1))
AND		c.dt_horario = dt_horario_w
AND		ie_tipo_item_p = 'S'
AND		Obter_se_horario_liberado(c.dt_lib_horario, c.dt_horario) = 'S'
AND (ie_somente_horario_w <> 'S' OR (ie_somente_horario_w = 'S' AND nr_seq_horario_p = c.nr_sequencia));

c08 CURSOR FOR
SELECT	a.nr_prescricao nr_prescricao, -- medicamentos dialise
		b.nr_sequencia nr_seq_item,
		b.nr_agrupamento nr_agrupamento,
		c.cd_unidade_medida_dose cd_um_dose,
		c.qt_dose qt_dose,
		c.nr_sequencia nr_seq_hor
FROM	prescr_mat_hor c,
		prescr_material b,
		prescr_medica a
WHERE	c.nr_prescricao = b.nr_prescricao
AND		c.nr_seq_material = b.nr_sequencia
AND		b.nr_prescricao = a.nr_prescricao
AND		obter_se_prescr_lib_adep(a.dt_liberacao_medico, a.dt_liberacao, a.dt_liberacao_farmacia, ie_data_lib_prescr_w) = 'S'
AND		obter_se_exibir_rep_adep_setor(cd_setor_pac_w,a.cd_setor_atendimento,coalesce(a.ie_adep,'S')) = 'S'
AND		b.ie_agrupador IN (14)
AND		coalesce(c.ie_situacao,'A') = 'A'
AND		coalesce(c.ie_adep,'S') = 'S'
AND		a.nr_atendimento = nr_atendimento_p
AND		obter_se_prescr_adep(a.nr_prescricao, b.nr_sequencia, nr_prescricao_p, coalesce(nr_seq_item_p,nr_sequencia_item_w), nr_prescricoes_w) = 'S'
AND		b.cd_material = cd_item_p
AND		coalesce(b.cd_intervalo,'XPTO') = coalesce(cd_intervalo_p,'XPTO')
AND		coalesce(b.qt_dose,1) = coalesce(qt_item_p,coalesce(b.qt_dose,1))
AND		c.dt_horario = dt_horario_w
AND		ie_tipo_item_p IN ('ME')
AND		Obter_se_horario_liberado(c.dt_lib_horario, c.dt_horario) = 'S'
AND (ie_somente_horario_w <> 'S' OR (ie_somente_horario_w = 'S' AND nr_seq_horario_p = c.nr_sequencia));

c04 CURSOR FOR
SELECT	a.nr_prescricao nr_prescricao, -- procedimentos e controles de glicemia
		b.nr_sequencia nr_seq_item,
		c.nr_sequencia nr_seq_hor,
		obter_se_eh_cig(b.nr_seq_proc_interno),
		b.nr_seq_exame,
		c.cd_procedimento,
		c.ie_origem_proced,
		c.dt_inicio_proced,
		a.cd_setor_atendimento,
		b.qt_procedimento,
		b.cd_setor_atendimento,
		coalesce(b.nr_seq_proc_interno,c.nr_seq_proc_interno),
		b.nr_seq_interno,
		obter_se_acm_sn(b.ie_acm, b.ie_se_necessario),
		a.cd_prescritor,
		c.dt_horario,
		SUBSTR(Obter_Desc_Prescr_Proc(b.CD_PROCEDIMENTO,b.IE_ORIGEM_PROCED,b.nr_seq_proc_interno),1,255),
		b.nr_seq_prot_glic,
		b.cd_pessoa_coleta,
		coalesce(b.dt_prev_execucao, a.dt_prescricao),
		b.cd_medico_exec,
		b.ie_origem_inf,
		b.cd_cgc_laboratorio,
		b.ie_autorizacao,
		b.nr_seq_proc_princ,
		b.nr_seq_proc_cpoe,
		a.cd_funcao_origem,
		b.cd_intervalo
FROM	prescr_proc_hor c,
	prescr_procedimento b,
	prescr_medica a
WHERE	c.nr_prescricao = b.nr_prescricao
AND		c.nr_seq_procedimento = b.nr_sequencia
AND		b.nr_prescricao = a.nr_prescricao
AND		(obter_data_lib_proc_adep(a.dt_liberacao, a.dt_liberacao_medico, ie_data_proc_w) IS NOT NULL AND (obter_data_lib_proc_adep(a.dt_liberacao, a.dt_liberacao_medico, ie_data_proc_w))::text <> '')
AND		obter_se_exibir_adep_suspensos(b.dt_suspensao, ie_exibe_suspenso_w) = 'S'
AND		obter_se_exibir_rep_adep_setor(cd_setor_pac_w,a.cd_setor_atendimento,coalesce(a.ie_adep,'S')) = 'S'
AND		coalesce(c.ie_situacao,'A') = 'A'
AND		a.nr_atendimento = nr_atendimento_p
AND		(((b.nr_sequencia	= nr_seq_bomba_w) AND (b.nr_prescricao	= nr_prescr_bomba_w) AND
	  ((b.nr_seq_prescr_mat IS NOT NULL AND b.nr_seq_prescr_mat::text <> '') OR (b.nr_seq_prescr_sol IS NOT NULL AND b.nr_seq_prescr_sol::text <> ''))) OR
	 ((coalesce(b.nr_seq_prescr_mat::text, '') = '') AND (coalesce(b.nr_seq_prescr_sol::text, '') = '')))
AND	obter_se_acm_sn(b.ie_acm, b.ie_se_necessario) = ie_acm_sn_p
AND	(((ie_proc_associados_w = 'S') AND (obter_se_prescr_adep(a.nr_prescricao, b.nr_sequencia, coalesce(nr_prescricao_p, nr_prescr_bomba_w), coalesce(nr_seq_item_p,nr_sequencia_item_w), nr_prescricoes_w) = 'S')) OR
	((ie_proc_associados_w = 'N') AND (obter_se_prescr_adep(a.nr_prescricao, b.nr_sequencia, coalesce(nr_prescricao_p, nr_prescr_bomba_w), coalesce(nr_seq_item_p,nr_sequencia_item_w), nr_prescricoes_w) = 'S')))
AND 	((coalesce(a.dt_validade_prescr,a.dt_inicio_prescr + 24/24) > dt_param_w) OR (coalesce(a.ie_prescr_emergencia,'N') = 'S'))
AND	b.cd_procedimento = cd_item_p
AND	coalesce(b.cd_intervalo,'XPTO') = coalesce(cd_intervalo_p,'XPTO')
AND	coalesce(b.qt_procedimento,1) = coalesce(qt_item_p,coalesce(b.qt_procedimento,1))
AND	((coalesce(b.nr_seq_exame::text, '') = '' AND ie_laboratorio_p = 'N') OR ((b.nr_seq_exame IS NOT NULL AND b.nr_seq_exame::text <> '') AND ie_laboratorio_p = 'S') OR (ie_tipo_item_p IN ('G','C')))
AND	c.dt_horario = dt_horario_w
AND	ie_tipo_item_p IN ('P','G','C','I','L')
AND ((coalesce(coalesce(b.nr_seq_proc_interno,c.nr_seq_proc_interno), 0) = coalesce(nr_seq_proc_interno_p,0)) or (coalesce(ie_palm_p,'N') = 'S'))
AND	((ie_proc_associados_w = 'S') OR
	 ((ie_proc_associados_w = 'N') AND
	  ((ie_tipo_item_p = 'G') OR (ie_tipo_item_p = 'I') OR (ie_tipo_item_p = 'C'))) OR
	((ie_tipo_item_p = 'P') AND
	((obter_se_associado_dif(a.nr_prescricao, b.nr_sequencia) = 'S') OR
	((obter_se_associado_dif(a.nr_prescricao, b.nr_sequencia) = 'N') AND (b.nr_sequencia = coalesce(nr_seq_item_p,b.nr_sequencia))))))
AND	((coalesce(nr_seq_prot_glic_p::text, '') = '' OR nr_seq_prot_glic_p = 0) OR
	(nr_seq_prot_glic_p IS NOT NULL AND nr_seq_prot_glic_p::text <> '' AND b.nr_seq_prot_glic = nr_seq_prot_glic_p))
AND	((coalesce(ds_componentes_p::text, '') = '') OR (ds_componentes_p = obter_mat_med_assoc_proc(b.nr_prescricao, b.nr_sequencia, 'S')))
AND	Obter_se_horario_liberado(c.dt_lib_horario, c.dt_horario) = 'S'
AND 	((coalesce(c.ie_horario_especial, 'N') = 'N') OR (c.dt_fim_horario IS NOT NULL AND c.dt_fim_horario::text <> ''))
AND (ie_somente_horario_w <> 'S' OR (ie_somente_horario_w = 'S' AND nr_seq_horario_p = c.nr_sequencia));

c05 CURSOR FOR
SELECT	a.nr_prescricao nr_prescricao, -- recomendacoes
		b.nr_sequencia nr_seq_item,
		c.nr_sequencia nr_seq_hor,
		b.cd_recomendacao,
		SUBSTR(obter_desc_recomendacao(b.cd_recomendacao),1,250),
		SUBSTR(coalesce(Obter_status_recomendacao(b.nr_prescricao, b.nr_sequencia, c.nr_sequencia), obter_status_hor_rec(c.dt_fim_horario,c.dt_suspensao)),1,1),
		a.cd_funcao_origem,
		b.nr_seq_rec_cpoe,
		c.dt_horario
FROM	prescr_rec_hor c,
		prescr_recomendacao b,
		prescr_medica a
WHERE	c.nr_prescricao = b.nr_prescricao
AND		c.nr_seq_recomendacao = b.nr_sequencia
AND		b.nr_prescricao = a.nr_prescricao
AND		((ie_data_lib_prescr_w = 'F') OR (obter_se_prescr_lib_adep(a.dt_liberacao_medico, a.dt_liberacao, a.dt_liberacao_farmacia, ie_data_lib_prescr_w) = 'S'))
AND		obter_se_exibir_rep_adep_setor(cd_setor_pac_w,a.cd_setor_atendimento,coalesce(a.ie_adep,'S')) = 'S'
AND		coalesce(c.ie_situacao,'A') = 'A'
AND		a.nr_atendimento = nr_atendimento_p
AND		obter_se_prescr_adep(a.nr_prescricao, b.nr_sequencia, nr_prescricao_p, coalesce(nr_seq_item_p,nr_sequencia_item_w), nr_prescricoes_w) = 'S'
AND 	a.dt_validade_prescr > dt_param_w
AND		SUBSTR(coalesce(TO_CHAR(b.cd_recomendacao),b.ds_recomendacao),1,255) = SUBSTR(cd_item_p,1,255)
AND		coalesce(b.cd_intervalo,'XPTO') = coalesce(cd_intervalo_p,'XPTO')
AND		((coalesce(b.qt_recomendacao,1) = coalesce(qt_item_p,coalesce(b.qt_recomendacao,1))) or (ie_alteracao_p = 4))
AND		c.dt_horario = dt_horario_w
AND		ie_tipo_item_p = 'R'
AND		Obter_se_horario_liberado(c.dt_lib_horario, c.dt_horario) = 'S'
AND 	((coalesce(c.ie_horario_especial, 'N') = 'N') OR (c.dt_fim_horario IS NOT NULL AND c.dt_fim_horario::text <> ''))
AND (ie_somente_horario_w <> 'S' OR (ie_somente_horario_w = 'S' AND nr_seq_horario_p = c.nr_sequencia));

c07 CURSOR FOR
SELECT	a.nr_prescricao nr_prescricao, -- materiais
		b.nr_sequencia nr_seq_item,
		c.nr_sequencia nr_seq_hor,
		b.ie_via_aplicacao,
		c.qt_dose,
		c.cd_unidade_medida_dose cd_um_dose,
        b.NR_SEQ_MAT_CPOE
FROM	prescr_mat_hor c,
		prescr_material b,
		prescr_medica a
WHERE	c.nr_prescricao = b.nr_prescricao
AND		c.nr_seq_material = b.nr_sequencia
AND		b.nr_prescricao = a.nr_prescricao
AND		obter_se_prescr_lib_adep(a.dt_liberacao_medico, a.dt_liberacao, a.dt_liberacao_farmacia, ie_data_lib_prescr_w) = 'S'
AND		obter_se_exibir_rep_adep_setor(cd_setor_pac_w,a.cd_setor_atendimento,coalesce(a.ie_adep,'S')) = 'S'
AND		b.ie_agrupador IN (2)
AND		coalesce(c.ie_situacao,'A') = 'A'
AND		a.nr_atendimento = nr_atendimento_p
AND		obter_se_prescr_adep(a.nr_prescricao, b.nr_sequencia, nr_prescricao_p, coalesce(nr_seq_item_p,nr_sequencia_item_w), nr_prescricoes_w) = 'S'
AND 	a.dt_validade_prescr > dt_param_w
AND		b.cd_material = cd_item_p
AND		coalesce(b.cd_intervalo,'XPTO') = coalesce(cd_intervalo_p,'XPTO')
AND		coalesce(b.qt_dose,1) = coalesce(qt_item_p,coalesce(b.qt_dose,1))
AND		c.dt_horario = dt_horario_w
AND		ie_tipo_item_p = 'MAT'
AND		Obter_se_horario_liberado(c.dt_lib_horario, c.dt_horario) = 'S'
AND (ie_somente_horario_w <> 'S' OR (ie_somente_horario_w = 'S' AND nr_seq_horario_p = c.nr_sequencia));

c09 CURSOR FOR
SELECT	a.nr_prescricao nr_prescricao, -- Iten associados
		b.nr_sequencia nr_seq_item,
		b.nr_agrupamento nr_agrupamento,
		c.cd_unidade_medida_dose cd_um_dose,
		c.qt_dose qt_dose,
		c.nr_sequencia nr_seq_hor,
		b.cd_material cd_material,
		substr(obter_desc_material(b.cd_material),1,255) ds_material
        , b.nr_seq_mat_cpoe nr_seq_mat_cpoe
FROM	prescr_mat_hor c,
		prescr_material b,
		prescr_medica a
WHERE	c.nr_prescricao = b.nr_prescricao
AND		c.nr_seq_material = b.nr_sequencia
AND		b.nr_prescricao = a.nr_prescricao
AND		obter_se_prescr_lib_adep(a.dt_liberacao_medico, a.dt_liberacao, a.dt_liberacao_farmacia, ie_data_lib_prescr_w) = 'S'
AND		obter_se_exibir_rep_adep_setor(cd_setor_pac_w,a.cd_setor_atendimento,coalesce(a.ie_adep,'S')) = 'S'
AND		b.ie_agrupador IN (5,15)
AND		coalesce(c.ie_situacao,'A') = 'A'
AND		coalesce(c.ie_adep,'S') = 'S'
AND		coalesce(ie_palm_p, 'N') = 'N'
AND		a.nr_atendimento = nr_atendimento_p
AND		obter_se_prescr_adep(a.nr_prescricao, b.nr_sequencia, nr_prescricao_p, coalesce(nr_seq_item_p,nr_sequencia_item_w), nr_prescricoes_w) = 'S'
AND		a.dt_validade_prescr > dt_param_w
AND		b.cd_material = cd_item_p
AND		coalesce(b.cd_intervalo,'XPTO') = coalesce(cd_intervalo_p,'XPTO')
AND		coalesce(b.qt_dose,1) = coalesce(qt_item_p,coalesce(b.qt_dose,1))
AND		c.dt_horario = dt_horario_w
AND		ie_tipo_item_p IN ('IA')
AND		Obter_se_horario_liberado(c.dt_lib_horario, c.dt_horario) = 'S'
AND (ie_somente_horario_w <> 'S' OR (ie_somente_horario_w = 'S' AND nr_seq_horario_p = c.nr_sequencia))

UNION ALL

SELECT	a.nr_prescricao nr_prescricao, -- Itens associados (PalmWeb)
		b.nr_sequencia nr_seq_item,
		b.nr_agrupamento nr_agrupamento,
		c.cd_unidade_medida_dose cd_um_dose,
		c.qt_dose qt_dose,
		c.nr_sequencia nr_seq_hor,
		b.cd_material cd_material,
		substr(obter_desc_material(b.cd_material),1,255) ds_material
        , b.nr_seq_mat_cpoe nr_seq_mat_cpoe
FROM	prescr_mat_hor c,
		prescr_material b,
		prescr_procedimento p,
		prescr_medica a
WHERE	c.nr_prescricao = b.nr_prescricao
AND		c.nr_seq_material = b.nr_sequencia
AND		b.nr_prescricao = p.nr_prescricao
AND		b.nr_sequencia_proc = p.nr_sequencia
AND		p.nr_prescricao = a.nr_prescricao
AND		obter_se_prescr_lib_adep(a.dt_liberacao_medico, a.dt_liberacao, a.dt_liberacao_farmacia, ie_data_lib_prescr_w) = 'S'
AND		obter_se_exibir_rep_adep_setor(cd_setor_pac_w,a.cd_setor_atendimento,coalesce(a.ie_adep,'S')) = 'S'
AND		b.ie_agrupador IN (5,15)
AND		coalesce(c.ie_situacao,'A') = 'A'
AND		coalesce(c.ie_adep, 'S') = 'S'
AND		coalesce(ie_palm_p, 'N') = 'S'
AND		a.nr_atendimento = nr_atendimento_p
AND		p.nr_sequencia = nr_seq_item_p
AND		p.nr_prescricao = nr_prescricao_p
AND		obter_se_prescr_adep(a.nr_prescricao, b.nr_sequencia, nr_prescricao_p, coalesce(nr_seq_item_p,nr_sequencia_item_w), nr_prescricoes_w) = 'S'
AND		a.dt_validade_prescr > dt_param_w
AND		c.dt_horario = dt_horario_w
AND		ie_tipo_item_p IN ('IA')
AND		Obter_se_horario_liberado(c.dt_lib_horario, c.dt_horario) = 'S'
AND (ie_somente_horario_w <> 'S' OR (ie_somente_horario_w = 'S' AND nr_seq_horario_p = c.nr_sequencia));

c10 CURSOR FOR
SELECT	a.nr_prescricao nr_prescricao, -- Ordem medica
		coalesce(b.nr_seq_material, b.nr_seq_solucao) nr_seq_item,
		c.nr_sequencia nr_seq_hor,
		b.nr_seq_material,
		b.nr_seq_solucao,
		x.ie_suspensao
FROM	ordem_medica x,
		prescr_ordem_hor c,
		prescr_medica_ordem b,
		prescr_medica a
WHERE	c.nr_seq_ordem	= b.nr_sequencia
AND		x.nr_sequencia	= b.nr_seq_ordem
AND		b.nr_prescricao = a.nr_prescricao
AND		obter_se_prescr_lib_adep(a.dt_liberacao_medico, a.dt_liberacao, a.dt_liberacao_farmacia, ie_data_lib_prescr_w) = 'S'
AND		obter_se_exibir_rep_adep_setor(cd_setor_pac_w,a.cd_setor_atendimento,coalesce(a.ie_adep,'S')) = 'S'
AND		a.nr_atendimento = nr_atendimento_p
AND 	a.dt_validade_prescr > dt_param_w
AND		c.nr_sequencia = cd_item_p
AND		c.dt_horario = dt_horario_w
AND		ie_tipo_item_p IN ('B')
and		c.ie_horario_especial = 'N'
AND (ie_somente_horario_w <> 'S' OR (ie_somente_horario_w = 'S' AND nr_seq_horario_p = c.nr_sequencia));

c11 CURSOR FOR
SELECT	a.nr_prescricao nr_prescricao, -- Iten associados ao CCG
		b.nr_sequencia nr_seq_item,
		b.nr_agrupamento nr_agrupamento,
		c.cd_unidade_medida_dose cd_um_dose,
		c.qt_dose qt_dose,
		c.nr_sequencia nr_seq_hor
FROM	prescr_mat_hor c,
		prescr_material b,
		prescr_medica a
WHERE	c.nr_prescricao = b.nr_prescricao
AND		c.nr_seq_material = b.nr_sequencia
AND		b.nr_prescricao = a.nr_prescricao
AND		((coalesce(a.nr_seq_pend_pac_acao,0) > 0) OR (obter_se_prescr_lib_adep(a.dt_liberacao_medico, a.dt_liberacao, a.dt_liberacao_farmacia, ie_data_lib_prescr_w) = 'S'))
AND		obter_se_exibir_rep_adep_setor(cd_setor_pac_w,a.cd_setor_atendimento,coalesce(a.ie_adep,'S')) = 'S'
AND		b.ie_agrupador IN (5)
AND		coalesce(c.ie_situacao,'A') = 'A'
AND		coalesce(c.ie_adep,'S') = 'S'
AND		a.nr_atendimento = nr_atendimento_p
AND		obter_se_prescr_adep(a.nr_prescricao, b.nr_sequencia, nr_prescricao_p, coalesce(nr_seq_item_p,nr_sequencia_item_w), nr_prescricoes_w) = 'S'
AND		a.dt_validade_prescr > dt_param_w
AND		b.cd_material = cd_item_p
AND		coalesce(b.cd_intervalo,'XPTO') = coalesce(cd_intervalo_p,'XPTO')
AND		coalesce(c.qt_dose,1) = coalesce(qt_item_p,coalesce(c.qt_dose,1))
AND		c.dt_horario = dt_horario_w
AND		ie_tipo_item_p IN ('IAG')
AND		Obter_se_horario_liberado(c.dt_lib_horario, c.dt_horario) = 'S'
AND (ie_somente_horario_w <> 'S' OR (ie_somente_horario_w = 'S' AND nr_seq_horario_p = c.nr_sequencia));

c13 CURSOR FOR
SELECT	a.nr_prescricao nr_prescricao, -- leites e derivados
		b.nr_sequencia nr_seq_item,
		c.nr_sequencia nr_seq_hor,
		a.cd_funcao_origem,
		b.nr_seq_dieta_cpoe,
		c.dt_horario,
		d.ie_via_aplicacao,
		d.qt_volume_total,
		substr(obter_desc_material(b.cd_material),1,255)
FROM	prescr_leite_deriv d,
		prescr_mat_hor c,
		prescr_material b,
		prescr_medica a
WHERE	c.nr_prescricao 	= b.nr_prescricao
AND		c.nr_seq_material 	= b.nr_sequencia
AND		b.nr_prescricao 	= a.nr_prescricao
AND		b.nr_seq_leite_deriv	= d.nr_sequencia
AND		b.nr_prescricao		= d.nr_prescricao
AND		d.nr_prescricao		= c.nr_prescricao
AND		d.nr_prescricao		= a.nr_prescricao
AND		a.nr_prescricao		= c.nr_prescricao
AND		obter_se_exibir_rep_adep_setor(cd_setor_pac_w,a.cd_setor_atendimento,coalesce(a.ie_adep,'S')) = 'S'
AND		b.ie_agrupador IN (16)
AND		coalesce(c.ie_situacao,'A') = 'A'
AND		a.nr_atendimento = nr_atendimento_p
AND		obter_se_prescr_adep(a.nr_prescricao, b.nr_sequencia, nr_prescricao_p, coalesce(nr_seq_item_p,nr_sequencia_item_w), nr_prescricoes_w) = 'S'
AND		a.dt_validade_prescr > dt_param_w
AND		b.cd_material = cd_item_p
AND		coalesce(b.cd_intervalo,'XPTO') = coalesce(cd_intervalo_p,'XPTO')
AND		coalesce(b.qt_dose,1) = coalesce(qt_item_p,coalesce(b.qt_dose,1))
AND		c.dt_horario = dt_horario_w
AND		ie_tipo_item_p = 'LD'
AND		Obter_se_horario_liberado(c.dt_lib_horario, c.dt_horario) = 'S'
AND (ie_somente_horario_w <> 'S' OR (ie_somente_horario_w = 'S' AND nr_seq_horario_p = c.nr_sequencia))
and		((b.nr_sequencia = coalesce(coalesce(nr_seq_item_p,nr_sequencia_item_w), 0)) or (coalesce(b.nr_sequencia::text, '') = '') or (coalesce(coalesce(nr_seq_item_p,nr_sequencia_item_w),0) = 0));

c15 CURSOR FOR
SELECT  a.nr_prescricao,
		b.nr_sequencia,
		b.cd_material,
		b.qt_dose,
		b.cd_intervalo,
		c.nr_sequencia,
		b.nr_agrupamento,
		b.cd_unidade_medida
FROM	prescr_medica a,
		prescr_material b,
		prescr_mat_hor c
WHERE	a.nr_prescricao   = b.nr_prescricao
AND		b.nr_prescricao   = c.nr_prescricao
AND		b.nr_sequencia    = c.nr_seq_material
AND		b.ie_agrupador 	  = 1
AND		a.nr_atendimento  = nr_atendimento_p
AND		c.dt_horario	  = dt_horario_w
AND		c.nr_sequencia	<> nr_seq_horario_p
AND		coalesce(c.nr_seq_superior::text, '') = ''
AND (ie_somente_horario_w <> 'S' OR (ie_somente_horario_w = 'S' AND nr_seq_horario_p = c.nr_sequencia));

c16 CURSOR FOR
SELECT nr_sequencia
FROM   prescr_mat_hor
WHERE  nr_seq_processo = nr_seq_processo_w
AND    coalesce(dt_fim_horario::text, '') = ''
AND    coalesce(NR_SEQ_SUPERIOR::text, '') = '';

c17 CURSOR FOR
SELECT	DISTINCT nr_prescricao
FROM	prescr_medica
WHERE	nr_atendimento = nr_atendimento_p
AND	obter_se_valor_contido(nr_prescricao,nr_prescricoes_p) = 'S';

c18 CURSOR FOR
SELECT	a.nr_prescricao nr_prescricao, -- solucao
		b.nr_seq_solucao nr_seq_item,
		b.nr_agrupamento nr_agrupamento,
		c.cd_unidade_medida_dose cd_um_dose,
		coalesce(c.qt_dose,b.qt_volume) qt_dose,
		c.nr_sequencia nr_seq_hor,
		coalesce(b.ie_acm,'N'),
		coalesce(b.ie_se_necessario,'N'),
		coalesce(c.cd_motivo_baixa, 0),
		coalesce(b.qt_solucao_total,0),
		b.ie_bomba_infusao,
		c.nr_seq_lote,
		a.cd_funcao_origem,
		c.dt_horario
FROM	prescr_mat_hor c,
		prescr_solucao b,
		prescr_medica a
WHERE	c.nr_prescricao = b.nr_prescricao
AND		c.nr_seq_solucao = b.nr_seq_solucao
AND		b.nr_prescricao = a.nr_prescricao
AND		obter_se_prescr_lib_adep(coalesce(a.dt_liberacao_medico, b.dt_lib_material), coalesce(a.dt_liberacao,b.dt_lib_material), coalesce(a.dt_liberacao_farmacia, b.dt_lib_farmacia), ie_data_lib_prescr_w) = 'S'
AND		obter_se_exibir_rep_adep_setor(cd_setor_pac_w,a.cd_setor_atendimento,coalesce(a.ie_adep,'S')) = 'S'
AND		coalesce(c.ie_situacao,'A') = 'A'
AND		coalesce(c.ie_adep,'S') = 'S'
AND		a.nr_atendimento = nr_atendimento_p
AND		obter_se_prescr_adep(a.nr_prescricao, c.nr_seq_material, nr_prescricao_p, coalesce(nr_seq_item_p,nr_sequencia_item_w), nr_prescricoes_w) = 'S'
AND		a.dt_validade_prescr > dt_param_w
AND		c.cd_material = cd_item_p
AND		coalesce(b.cd_intervalo,'XPTO') = coalesce(cd_intervalo_p,'XPTO')
AND		obter_se_acm_sn(b.ie_acm, b.ie_se_necessario) = ie_acm_sn_p
AND		c.dt_horario = dt_horario_w
AND 	((coalesce(c.ie_horario_especial, 'N') = 'N') OR (c.dt_fim_horario IS NOT NULL AND c.dt_fim_horario::text <> '')) --OS155676
AND		ie_tipo_item_p IN ('SOL')
AND		obter_se_horario_liberado(c.dt_lib_horario, c.dt_horario) = 'S'
AND		((coalesce(ie_item_suspenso_p,'N') = 'N') OR (c.dt_suspensao IS NOT NULL AND c.dt_suspensao::text <> ''))
AND (ie_somente_horario_w <> 'S' OR (ie_somente_horario_w = 'S' AND nr_seq_horario_p = c.nr_sequencia));

c19 CURSOR FOR
SELECT	a.nr_prescricao nr_prescricao, -- Suporte Nutricional Enteral
		b.nr_sequencia nr_seq_item,
		b.nr_agrupamento nr_agrupamento,
		c.cd_unidade_medida_dose cd_um_dose,
		CASE WHEN coalesce(b.ds_dose_diferenciada::text, '') = '' THEN  c.qt_dose  ELSE b.qt_dose END  qt_dose, --feito o decode pois senao nao traz os eventos dos itens no ADEP.
		c.nr_sequencia nr_seq_hor,
		coalesce(b.ie_acm,'N'),
		coalesce(b.ie_se_necessario,'N'),
		CASE WHEN c.cd_motivo_baixa=0 THEN  b.cd_motivo_baixa  ELSE c.cd_motivo_baixa END ,
		coalesce(b.ie_medicacao_paciente,'N'),
		coalesce(b.qt_solucao,0),
		b.ie_bomba_infusao,
		c.nr_seq_lote,
		b.cd_material,
		b.ie_via_aplicacao,
		a.cd_funcao_origem,
		b.nr_seq_dieta_cpoe,
		c.dt_horario
FROM	prescr_mat_hor c,
		prescr_material b,
		prescr_medica a
WHERE	c.nr_prescricao = b.nr_prescricao
AND		c.nr_seq_material = b.nr_sequencia
AND		b.nr_prescricao = a.nr_prescricao
AND		obter_se_prescr_lib_adep(coalesce(a.dt_liberacao_medico, b.dt_lib_material), coalesce(a.dt_liberacao,b.dt_lib_material), coalesce(a.dt_liberacao_farmacia, b.dt_lib_farmacia), ie_data_lib_prescr_w) = 'S'
AND		obter_se_exibir_rep_adep_setor(cd_setor_pac_w,a.cd_setor_atendimento,coalesce(a.ie_adep,'S')) = 'S'
AND		b.ie_agrupador IN (8)
AND		coalesce(c.ie_situacao,'A') = 'A'
AND		coalesce(c.ie_adep,'S') = 'S'
AND		((coalesce(cd_unidade_medida_p,'XPTO') = 'XPTO') OR (cd_unidade_medida_p = b.cd_unidade_medida_dose))
AND		a.nr_atendimento = nr_atendimento_p
AND		obter_se_prescr_adep(a.nr_prescricao, b.nr_sequencia, nr_prescricao_p, coalesce(nr_seq_item_p,nr_sequencia_item_w), nr_prescricoes_w) = 'S'
AND		a.dt_validade_prescr > dt_param_w
AND		b.cd_material = cd_item_p
AND		coalesce(b.cd_intervalo,'XPTO') = coalesce(cd_intervalo_p,'XPTO')
AND		((coalesce(coalesce(b.qt_dose_especial,b.qt_dose),1) = coalesce(qt_item_p,coalesce(coalesce(b.qt_dose_especial,b.qt_dose),1))) OR (coalesce(b.qt_dose,1) = coalesce(qt_item_p,coalesce(b.qt_dose,1))))
AND		obter_se_acm_sn(b.ie_acm, b.ie_se_necessario) = ie_acm_sn_p
AND		c.dt_horario = dt_horario_w
AND		((coalesce(ds_item_p::text, '') = '') OR (CASE WHEN coalesce(ds_medic_nao_padrao::text, '') = '' THEN NULL  ELSE ds_medic_nao_padrao || obter_desc_expressao(734087)/*' (do paciente)'*/
 coalesce(END::text, '') = '') OR (ds_item_p = CASE WHEN coalesce(ds_medic_nao_padrao::text, '') = '' THEN NULL  ELSE ds_medic_nao_padrao || obter_desc_expressao(734087)/*' (do paciente)'*/ END ))
AND		((nr_agrupamento_p IS NOT NULL AND nr_agrupamento_p::text <> '' AND b.nr_agrupamento = nr_agrupamento_p) OR
		((coalesce(nr_agrupamento_p::text, '') = '') AND (obter_se_agrupa_composto(a.nr_prescricao, b.nr_sequencia, b.nr_agrupamento, b.cd_material) = 'N')))
AND 	((coalesce(c.ie_horario_especial, 'N') = 'N') OR (c.dt_fim_horario IS NOT NULL AND c.dt_fim_horario::text <> '')) --OS155676
AND		ie_tipo_item_p = ('SNE')
AND		Obter_se_horario_liberado(c.dt_lib_horario, c.dt_horario) = 'S'
AND		((coalesce(ie_item_suspenso_p,'N') = 'N') OR (c.dt_suspensao IS NOT NULL AND c.dt_suspensao::text <> ''))
AND (ie_somente_horario_w <> 'S' OR (ie_somente_horario_w = 'S' AND nr_seq_horario_p = c.nr_sequencia));

C20 CURSOR FOR
	SELECT  g.nr_sequencia,
			g.nr_seq_lote
	FROM    PE_MATERIAL_PROCED a,
	        PE_PRESCR_PROC b,
			PE_PRESCRICAO c,
			pe_procedimento d,
			prescr_material f,
			prescr_mat_hor g
	WHERE   b. nr_seq_prescr     = c.nr_sequencia
	AND		b.nr_seq_proc        = d.nr_sequencia
	AND		d.nr_sequencia       = a.nr_seq_proc
	AND		f.nr_seq_pe_proc     = b.nr_sequencia
	AND		c.nr_prescricao      = f.nr_prescricao
	AND		a.cd_material 	    = f.cd_material
	AND		g.nr_prescricao	    = 	f.nr_prescricao
	AND		g.nr_seq_material    = f.nr_sequencia
	AND		g.dt_horario		 = 		dt_horario_w
	AND     coalesce(a.IE_CONTA_ADEP,'N') = 'S'
	AND     f.nr_seq_pe_proc     =  nr_seq_item_w
	AND     c.nr_sequencia       =  nr_prescricao_w;

	procedure atualiza_data_fim_cpoe_mat(dt_fim_p	timestamp,
		nr_seq_item_cpoe_p	cpoe_material.nr_sequencia%type) is

	;
BEGIN

		update	cpoe_material
		set 	dt_fim =  dt_fim_p,
				nm_usuario = nm_usuario_p,
				dt_atualizacao = clock_timestamp()
		where	nr_sequencia = nr_seq_item_cpoe_p
		and		ie_administracao = 'P';

		commit;

	end;		

BEGIN

ie_gerou_evento_w := false;

ie_somente_horario_w := coalesce(ie_somente_horario_p, 'N');

IF (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') AND (ie_tipo_item_p IS NOT NULL AND ie_tipo_item_p::text <> '') AND (cd_item_p IS NOT NULL AND cd_item_p::text <> '') AND (qt_hora_prescricao_p IS NOT NULL AND qt_hora_prescricao_p::text <> '') AND (nr_seq_horario_p IS NOT NULL AND nr_seq_horario_p::text <> '') AND (nr_prescricoes_p IS NOT NULL AND nr_prescricoes_p::text <> '') AND (ie_laboratorio_p IS NOT NULL AND ie_laboratorio_p::text <> '') AND (ie_alteracao_p IS NOT NULL AND ie_alteracao_p::text <> '') AND (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') THEN

	CALL Wheb_assist_pck.set_informacoes_usuario(cd_estabelecimento_p, cd_perfil_p, nm_usuario_p);

	if (coalesce(cd_funcao_p,1113) = 8030) then
		ie_data_lib_prescr_w		:= Wheb_assist_pck.obterParametroFuncao(8030,16);
	else
		ie_data_lib_prescr_w		:= Wheb_assist_pck.obterParametroFuncao(1113,115);
	end if;

	ie_exibe_suspenso_w			:= Wheb_assist_pck.obterParametroFuncao(1113,117);
	ie_somente_com_baixa_w		:= Wheb_assist_pck.obterParametroFuncao(1113,357);
	ie_consist_hr_estabilid_w	:= Wheb_assist_pck.obterParametroFuncao(1113,359);
	ie_adm_processo_aut_w		:= Wheb_assist_pck.obterParametroFuncao(1113,480);
	ie_atualiza_data_conta_w	:= Wheb_assist_pck.obterParametroFuncao(1113,628);	
	ie_param682_w := obter_param_usuario(1113, 682, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_param682_w);
	ie_conferir_med_antes_adm_w	:= Wheb_assist_pck.obterParametroFuncao(88,291);
	ie_permite_adm_w			:= Wheb_assist_pck.obterParametroFuncao(1113,271);
	ie_param697_w := obter_param_usuario(1113, 697, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ie_param697_w);	
	ie_param8_cpoe_w := obter_param_usuario(2314, 8, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ie_param8_cpoe_w);
	ie_mostra_proc_assoc_w := obter_param_usuario(1113, 462, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ie_mostra_proc_assoc_w);
	ie_param716_w := obter_param_usuario(1113, 716, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ie_param716_w);

	if (Wheb_assist_pck.obterParametroFuncao(1113,670) = 'S') then
		--obter setor atendimento do paciente
		cd_setor_atendimento_aten_w := obter_unidade_atendimento(nr_atendimento_p,'A','CS');

		select max(cd_motivo_exc_conta)
		into STRICT   cd_motivo_Exc_medic_pac_w
		from   adep_parametros_setor
		where  cd_setor_atendimento = cd_setor_atendimento_aten_w;
	end if;

	if (coalesce(cd_motivo_exc_medic_pac_w::text, '') = '') then
		begin
		cd_motivo_exc_medic_pac_w	:= wheb_assist_pck.obterparametrofuncao(1113,409);
		exception
		when others then
			cd_motivo_exc_medic_pac_w := null;
		end;
	end if;

	cd_setor_pac_w		:= Obter_Unidade_Atendimento(nr_atendimento_p, 'IA', 'CS');

	ds_justificativa_w	:= SUBSTR(ds_justificativa_p,1,235);

	IF (SUBSTR(ds_justificativa_w,1,52)	= wheb_mensagem_pck.get_texto(455983)) THEN
		ie_susp_por_duplic_w	:= 'S';
		ie_mostra_adep_w	:= coalesce(Wheb_assist_pck.obterParametroFuncao(1113,459),'S');
	ELSE
		ie_susp_por_duplic_w	:= 'N';
		ie_mostra_adep_w	:= 'S';
	END IF;

	IF ((coalesce(ie_susp_mat_prescr_p, 'N') = 'S') and (nr_seq_item_p IS NOT NULL AND nr_seq_item_p::text <> '')) THEN
		BEGIN

		IF (coalesce(nr_prescricao_p,0)  = 0) THEN
			nr_prescricao_susp_w := obter_max_nrprescricao(nr_prescricoes_p);
		ELSE
			nr_prescricao_susp_w := nr_prescricao_p;
		END IF;

		CALL suspender_item_pend(	nr_prescricao_susp_w,
								nr_seq_item_p,
								cd_item_p,
								coalesce(ds_justificativa_w, obter_motivo_suspensao_prescr(nr_seq_motivo_susp_p)),
								ie_tipo_item_p,
								nm_usuario_p,
								nr_seq_motivo_susp_p);

		END;
	END IF;

	ie_checa_retroativo_w := obter_param_usuario(1113, 188, obter_perfil_ativo, nm_usuario_p, coalesce(wheb_usuario_pck.get_cd_estabelecimento, 1), ie_checa_retroativo_w);
	if (coalesce(ie_checa_retroativo_w, 'N') = 'N') then
		qt_horas_adm_w := 0;
	else
		qt_horas_adm_w := obter_param_usuario(1113, 189, obter_perfil_ativo, nm_usuario_p, coalesce(wheb_usuario_pck.get_cd_estabelecimento, 1), qt_horas_adm_w);
	end if;

	if (qt_horas_adm_w = 0) then
		dt_param_w := clock_timestamp() - qt_hora_prescricao_p / 24;
	else
		begin
		dt_param_w := clock_timestamp() - qt_horas_adm_w / 24;
		exception when others then
			--O parametro 189 do ADEP esta informado com um valor indevido! Favor verificar
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(173372);
		end;
	end if;

	ie_regra_lanc_conta_w	:= obter_regra_lanc_conta_adep(coalesce(wheb_usuario_pck.get_cd_estabelecimento, 1), cd_perfil_p, nm_usuario_p, 'CG');
	ie_abriu_cursor_w	:= false;

	if (ie_alteracao_p = 3) then
		ie_consistir_pend_w	:= coalesce(obter_valor_param_usuario(1113,52, cd_perfil_p, nm_usuario_p, obter_estab_atend(nr_atendimento_p)), 'N');

		IF (ie_consistir_pend_w = 'S') then
			CALL adep_consistir_alter_horario(nr_seq_horario_p,ie_tipo_item_p);
		end if;
	end if;

	if (ie_alteracao_p	= 3) then
		select	max(dt_checagem_adep)
		into STRICT	dt_checagem_adep_w
		from	atendimento_paciente
		where	nr_atendimento = nr_atendimento_p;

		if (coalesce(dt_checagem_adep_w::text, '') = '') then
			update	atendimento_paciente
			set	dt_checagem_adep = clock_timestamp()
			where	nr_atendimento = nr_atendimento_p;
		end if;
	end if;

	if (ie_alteracao_p	= 3) THEN
		ie_inicia_adm_quimio_w	:= coalesce(obter_valor_param_usuario(3130,485, cd_perfil_p, nm_usuario_p, obter_estab_atend(nr_atendimento_p)), 'N');

		IF (ie_inicia_adm_quimio_w = 'S') THEN
			BEGIN
				SELECT nr_seq_atendimento
				INTO STRICT nr_seq_atendimento_quimio_w
				FROM paciente_atendimento
				WHERE obter_se_contido(nr_prescricao,nr_prescricoes_p) = 'S';
			exception
				when others then
				nr_seq_atendimento_quimio_w := null;
			END;

			IF (nr_seq_atendimento_quimio_w IS NOT NULL AND nr_seq_atendimento_quimio_w::text <> '') THEN
				CALL atualiza_inicio_adm_qt(nr_seq_atendimento_quimio_w, nm_usuario_p, dt_evento_p);
			END IF;
		END IF;
	end if;

	if (ie_alteracao_p in (4,6)) then
		if (ie_alteracao_p = 6) then
			CALL adep_consistir_reversao_suspen(	ie_tipo_item_p, nr_seq_horario_p);
		end if;
		qt_min_rev_evento_w			:= Wheb_assist_pck.obterParametroFuncao(1113,447);
		if (qt_min_rev_evento_w > 0) then -- reversoo de suspensoo e de realizacao do horario.
			CALL adep_consistir_reversao_evento(ie_tipo_item_p, nr_seq_horario_p, qt_min_rev_evento_w);
		end if;
	end if;

	-- obter evento x prescricoes duplicadas
	nr_prescricoes_w := nr_prescricoes_p;
	if (ie_alteracao_p = 3) and -- administracao do horario
		(nr_prescr_adm_p IS NOT NULL AND nr_prescr_adm_p::text <> '') then
		nr_prescricoes_w := nr_prescr_adm_p;
	end if;

	-- obter horario
	IF (ie_tipo_item_p = 'D') THEN -- dietas orais
		SELECT	MAX(dt_horario),
				MAX(nr_prescricao),
				max(nr_sequencia)
		INTO STRICT	dt_horario_w,
				nr_prescr_log_w,
				nr_sequencia_item_w
		FROM	prescr_dieta_hor
		WHERE	nr_sequencia = nr_seq_horario_p
		AND		Obter_se_horario_liberado(dt_lib_horario, dt_horario) = 'S';

	elsif (ie_tipo_item_p in ('S','M','ME','MAT','IA','IAG','IAH','LD','SOL','SNE','NPT')) then -- suplementos orais, leites, medicamentos e materiais
		select	coalesce(max(a.nr_seq_lote),0),
				max(a.nr_seq_material),
				max(a.dt_suspensao),
				max(b.dt_suspensao)
		into STRICT	nr_seq_lote_w,
				nr_sequencia_item_w,
				dt_suspensao_hor_w,
				dt_suspensao_prescr_w
		from	prescr_mat_hor a,
				prescr_medica b
		where	a.nr_prescricao = b.nr_prescricao
		and 	a.nr_sequencia = nr_seq_horario_p;

		select	max(dt_horario),
				max(nr_prescricao)
		into STRICT	dt_horario_w,
				nr_prescr_log_w
		from	prescr_mat_hor
		where	nr_sequencia = nr_seq_horario_p
		and		obter_se_horario_liberado(dt_lib_horario, dt_horario) = 'S';

		if (ie_alteracao_p	= 3) and
			((dt_suspensao_hor_w IS NOT NULL AND dt_suspensao_hor_w::text <> '') or (dt_suspensao_prescr_w IS NOT NULL AND dt_suspensao_prescr_w::text <> '')) then
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(479011);
		end if;

		-- Faz o tratamento das regras existentes
		if (ie_tipo_item_p in ('M', 'IAH')) and (ie_alteracao_p	= 3) then
			ie_adm_liberada_w	:= consiste_item_regra_adep(nr_atendimento_p, cd_item_p, dt_horario_w);

			IF (ie_adm_liberada_w = 'N') THEN
				--Existem medicamentos que devem ser administrados antes deste!
				CALL Wheb_mensagem_pck.exibir_mensagem_abort(173373);
			END IF;
		END IF;

	ELSIF (ie_tipo_item_p IN ('P','G','C','I', 'L')) THEN -- procedimentos e controles de glicemia e IVC
		SELECT	MAX(dt_horario),
				MAX(nr_prescricao),
				max(nr_seq_procedimento)
		INTO STRICT	dt_horario_w,
				nr_prescr_log_w,
				nr_sequencia_item_w
		FROM	prescr_proc_hor
		WHERE	nr_sequencia = nr_seq_horario_p
		AND		Obter_se_horario_liberado(dt_lib_horario, dt_horario) = 'S';

		if ((coalesce(dt_horario_w::text, '') = '') and (ie_palm_p = 'S') and (ie_tipo_item_p = 'P')) then
			SELECT	MAX(a.dt_horario) dt_horario,
								MAX(b.nr_prescricao) nr_prescricao,
								max(b.nr_sequencia_proc) nr_sequencia_proc
			INTO STRICT			dt_horario_w,
								nr_prescr_log_w,
								nr_sequencia_item_w
			FROM			prescr_mat_hor a,
								prescr_material b
			WHERE		a.nr_seq_material = b.nr_sequencia
			and				a.nr_prescricao = b.nr_prescricao
			and				a.nr_sequencia = nr_seq_horario_p
			AND			Obter_se_horario_liberado(a.dt_lib_horario, a.dt_horario) = 'S';
		end if;

	ELSIF (ie_tipo_item_p = 'R') THEN -- recomendacoes
		SELECT	MAX(dt_horario),
				MAX(nr_prescricao),
				max(nr_seq_recomendacao)
		INTO STRICT	dt_horario_w,
				nr_prescr_log_w,
				nr_sequencia_item_w
		FROM	prescr_rec_hor
		WHERE	nr_sequencia = nr_seq_horario_p
		AND		Obter_se_horario_liberado(dt_lib_horario, dt_horario) = 'S';

	ELSIF (ie_tipo_item_p = 'B') THEN -- Ordens medicas
		SELECT	MAX(dt_horario)				
		INTO STRICT	dt_horario_w
		FROM	prescr_ordem_hor
		WHERE	nr_sequencia = nr_seq_horario_p
		and		ie_horario_especial = 'N';
	END IF;

	/*  Chamei novamente este bloco pois pode ocorrer de nao ter o nr_seq_item_p na chamada anterior */

	IF ((coalesce(ie_susp_mat_prescr_p, 'N') = 'S') and (coalesce(nr_seq_item_p::text, '') = '')) THEN
		BEGIN

		/*IF 	(NVL(nr_prescricao_p,0)  = 0) THEN
			nr_prescricao_susp_w := obter_max_nrprescricao(nr_prescricoes_p);
		ELSE
			nr_prescricao_susp_w := nr_prescricao_p;
		END IF;*/
		if (coalesce(nr_prescricao_p,0)  > 0) then
		  nr_prescricao_susp_w := nr_prescricao_p;
		 elsif (coalesce(nr_prescr_log_w,0) > 0) then
			nr_prescricao_susp_w := nr_prescr_log_w;
		 else
			nr_prescricao_susp_w := obter_max_nrprescricao(nr_prescricoes_p);
		end if;

		CALL suspender_item_pend(	nr_prescricao_susp_w,
								nr_sequencia_item_w,
								cd_item_p,
								coalesce(ds_justificativa_w, obter_motivo_suspensao_prescr(nr_seq_motivo_susp_p)),
								ie_tipo_item_p,
								nm_usuario_p,
								nr_seq_motivo_susp_p);

		END;
	END IF;

	-- obter horario administracao
	IF (dt_evento_p IS NOT NULL AND dt_evento_p::text <> '') THEN
		dt_horario_adm_w := dt_evento_p;
	ELSE
		dt_horario_adm_w := dt_atualizacao_w;
	END IF;

	-- Dietas orais
	IF (ie_tipo_item_p = 'D') THEN

		ie_exibe_sem_lib_farm_w		:= Wheb_assist_pck.obterParametroFuncao(1113,236);
		ie_selecionar_dieta_susp_w	:= Wheb_assist_pck.obterParametroFuncao(1113,412);

		ds_sql_cursor_w	:= '';
		ds_sql_where_w	:= '';

    if (ie_somente_horario_w = 'S') then     
        ds_sql_where_w := ds_sql_where_w || ' and c.nr_sequencia = ''' || nr_seq_horario_p || ''' ';
    end if;

		if (ie_exibe_sem_lib_farm_w = 'S') then
			ds_sql_where_w	:=	ds_sql_where_w || ' and		((obter_se_prescr_lib_adep(a.dt_liberacao_medico, a.dt_liberacao, a.dt_liberacao_farmacia, ''' || ie_data_lib_prescr_w || ''', a.ie_lib_farm) = ''S'') or (nvl(a.ie_prescr_nutricao, ''N'') = ''S'')) ';
		else
			ds_sql_where_w	:=	ds_sql_where_w || ' and		obter_se_prescr_lib_adep(a.dt_liberacao_medico, a.dt_liberacao, a.dt_liberacao_farmacia, ''' || ie_data_lib_prescr_w || ''') = ''S'' ';
		end if;

		if (coalesce(cd_intervalo_p,'XPTO') = 'XPTO') then
			ds_sql_where_w	:=	ds_sql_where_w || ' and		b.cd_intervalo is null ';
		else
			ds_sql_where_w	:=	ds_sql_where_w || ' and		b.cd_intervalo = ''' || cd_intervalo_p || ''' ';
		end if;

		if (obter_se_somente_numero(cd_item_p) = 'N')	then
			ds_sql_cursor_w	:=	ds_sql_cursor_w ||
								' select	a.nr_prescricao, ' ||
								' 			c.nr_seq_dieta, ' ||
								' 			c.nr_sequencia, ' ||
								' 			obter_intervalo_dieta(a.nr_prescricao, c.cd_refeicao),' ||
								' 			a.cd_funcao_origem,' ||
								' 			b.nr_seq_dieta_cpoe' ||
								' from		prescr_dieta b, ' ||
								'			prescr_dieta_hor c, ' ||
								' 			prescr_medica a ' ||
								' where		c.nr_prescricao = a.nr_prescricao ' ||
								' and		b.nr_prescricao = a.nr_prescricao ' ||
								' and		c.nr_seq_dieta	= b.nr_sequencia ' ||
								' and		nvl(c.ie_situacao,''A'') = ''A'' ' ||
								' and		c.cd_refeicao = ''' || cd_item_p || ''' '||
								' and		c.dt_horario = to_date(''' || to_char(dt_horario_w,'dd/mm/yyyy hh24:mi:ss') || ''',''dd/mm/yyyy hh24:mi:ss'') ' ||
								' and		Obter_se_horario_liberado(c.dt_lib_horario, c.dt_horario) = ''S'' ' ||
								' and		a.dt_validade_prescr > to_date(''' || to_char(dt_param_w,'dd/mm/yyyy hh24:mi:ss') || ''',''dd/mm/yyyy hh24:mi:ss'') ' ||
								' and		obter_se_exibir_rep_adep_setor(''' || cd_setor_pac_w || ''',a.cd_setor_atendimento,nvl(a.ie_adep,''S'')) = ''S'' ' ||
								' and		a.nr_atendimento = ' || nr_atendimento_p ||
								ds_sql_where_w;

			if (cd_item_p = 'X') then
				ds_sql_cursor_w	:=	ds_sql_cursor_w || ' and		obter_se_valor_contido(a.nr_prescricao, '''||nr_prescricoes_p||''') = ''S'' ';
			else
				ds_sql_cursor_w	:=	ds_sql_cursor_w || ' and		obter_se_valor_contido(a.nr_prescricao, '''||nr_prescricoes_w||''') = ''S'' ';
			end if;
		else
			ds_sql_cursor_w	:=	ds_sql_cursor_w ||
								' select	a.nr_prescricao, ' ||
								' 			b.nr_sequencia, ' ||
								' 			c.nr_sequencia, ' ||
								' 			substr(Obter_Unid_Med_Dieta(b.cd_dieta),1,150),' ||
								' 			a.cd_funcao_origem,' ||
								' 			b.nr_seq_dieta_cpoe' ||
								' from		prescr_dieta b, ' ||
								' 			prescr_dieta_hor c, ' ||
								' 			prescr_medica a ' ||
								' where		c.nr_prescricao = a.nr_prescricao ' ||
								' and		b.nr_prescricao = a.nr_prescricao ' ||
								' and		c.nr_seq_dieta	= b.nr_sequencia ' ||
								' and		nvl(c.ie_situacao,''A'') = ''A'' ' ||
								' and		b.cd_dieta = ' || cd_item_p ||
								' and		c.dt_horario = to_date(''' || to_char(dt_horario_w,'dd/mm/yyyy hh24:mi:ss') || ''',''dd/mm/yyyy hh24:mi:ss'') ' ||
								' and		a.dt_validade_prescr > to_date(''' || to_char(dt_param_w,'dd/mm/yyyy hh24:mi:ss') || ''',''dd/mm/yyyy hh24:mi:ss'') ' ||
								' and		Obter_se_horario_liberado(c.dt_lib_horario, c.dt_horario) = ''S'' ' ||
								' and		obter_se_exibir_rep_adep_setor(''' || cd_setor_pac_w || ''',a.cd_setor_atendimento,nvl(a.ie_adep,''S'')) = ''S'' ' ||
								' and		(((obter_se_valor_contido(a.nr_prescricao, '''||nr_prescricoes_w||''') = ''S'') and ' ||
								' 			  (c.cd_refeicao is null)) or ' ||
								'			 ((obter_se_valor_contido(a.nr_prescricao, '''||nr_prescricoes_p||''') = ''S'') and ' ||
								'			  (c.cd_refeicao = ''X''))) ' ||
								' and		nvl(c.cd_refeicao,''X'') = ''X'' ' ||
								' and		a.nr_atendimento = ' || nr_atendimento_p ||
								ds_sql_where_w;
		end if;

		OPEN cCursor for EXECUTE ds_sql_cursor_w;
		LOOP
		FETCH cCursor INTO
				nr_prescricao_w,
				nr_seq_item_w,
				nr_seq_horario_w,
				cd_um_dose_adm_w,
				cd_funcao_origem_w,
				nr_seq_item_cpoe_w;
		EXIT WHEN NOT FOUND; /* apply on cCursor */
			BEGIN

			ie_abriu_cursor_w	:= true;

			SELECT	max(SUBSTR(obter_desc_dieta(cd_dieta),1,255))
			INTO STRICT	ds_dieta_w
			FROM	prescr_dieta
			WHERE	nr_prescricao 	= nr_prescricao_w
			AND		nr_sequencia	= nr_seq_item_w;

			SELECT	MAX(ds_dieta_w)
			INTO STRICT	ds_obs_dieta_w
			FROM	prescr_dieta_hor a,
					prescr_dieta_hor b,
					prescr_medica c,
					prescr_medica d
			WHERE	c.nr_atendimento	= d.nr_atendimento
			AND		c.nr_prescricao	= a.nr_prescricao
			AND		d.nr_prescricao	= b.nr_prescricao
			AND		a.dt_horario	= b.dt_horario
			AND		a.cd_refeicao	= b.cd_refeicao
			AND		(a.cd_refeicao IS NOT NULL AND a.cd_refeicao::text <> '')
			AND		(b.cd_refeicao IS NOT NULL AND b.cd_refeicao::text <> '')
			AND		a.nr_sequencia	= nr_seq_horario_w
			AND		a.nr_sequencia	<> b.nr_sequencia;

			IF (ie_selecionar_dieta_susp_w = 'S') THEN
				CALL gerar_prescr_dieta_hor(nr_prescricao_w, nm_usuario_p);
			END IF;

			if (ie_alteracao_p = 3) then -- administracao do horario
				update	prescr_dieta_hor
				set		dt_fim_horario 	= dt_atualizacao_w,
						nm_usuario_adm	= nm_usuario_p
				where	nr_sequencia 	= nr_seq_horario_w
				and		coalesce(dt_fim_horario::text, '') = ''
				and		coalesce(dt_suspensao::text, '') = '';
				GET DIAGNOSTICS ie_atualizou_reg_w = ROW_COUNT > 0;

				if (coalesce(nr_seq_item_cpoe_w,0) > 0) and (coalesce(cd_funcao_origem_w,0) = 2314) then

					dt_fim_w :=	dt_horario_adm_w;

					if (dt_fim_w < dt_horario_w) then	
						dt_fim_w :=	dt_horario_w;
					end if;

					if (ie_param8_cpoe_w = 'A') then
						update	cpoe_dieta
						set 	dt_fim =  trunc(dt_fim_w + 1/24,'hh24') - 1/1440,
								nm_usuario = nm_usuario_p,
								dt_atualizacao = clock_timestamp()
						where	nr_sequencia = nr_seq_item_cpoe_w
						and 	coalesce(ie_evento_unico,'N') = 'S'
						and		ie_administracao = 'P';
					end if;						
				end if;					

			elsif (ie_alteracao_p = 4) then -- reversao da realizacao do horario
				select	coalesce(max('S'), 'N')
				into STRICT	ie_pode_reverter_w
				from	prescr_dieta_hor
				where	nr_sequencia   = nr_seq_horario_w
				and		nm_usuario_adm = nm_usuario_p;

				if	(ie_pode_reverter_w = 'N' AND ie_param682_w = 'N') then
					CALL Wheb_mensagem_pck.exibir_mensagem_abort(452717);
				end if;

				update	prescr_dieta_hor
				set	dt_fim_horario 	 = NULL,
					nm_usuario_adm	 = NULL
				where	nr_sequencia 		= nr_seq_horario_w
				and	(dt_fim_horario IS NOT NULL AND dt_fim_horario::text <> '');
				GET DIAGNOSTICS ie_atualizou_reg_w = ROW_COUNT > 0;

			elsif (ie_alteracao_p = 5) THEN
				ie_existe_w		:= 'S';

				if	((ie_alterou_hor_adep_p = 'S') or (ie_selecionar_dieta_susp_w = 'N')) then -- suspensao do horario
					ie_existe_w	:= 'N';
				else
					select	coalesce(max('S'),'N')
					into STRICT	ie_existe_w
					from	horario_refeicao_dieta a,
							prescr_dieta b,
							prescr_medica k where ((b.cd_dieta = a.cd_dieta) or ((coalesce(a.cd_dieta::text, '') = '') and (obter_se_dieta_hor_excl_ref(b.cd_dieta,a.cd_refeicao) = 'n')))
					and	k.nr_prescricao = nr_prescricao_w
					and	coalesce(a.cd_refeicao,b.cd_dieta) = cd_item_p
					and	k.nr_prescricao	= b.nr_prescricao
					and	coalesce(k.dt_suspensao::text, '') = ''
					and	coalesce(b.ie_suspenso,'N') <> 'S' LIMIT 1;
				end if;

				if (ie_existe_w = 'N') then

					update	prescr_dieta_hor
					set		dt_suspensao 		= dt_atualizacao_w,
							nm_usuario_susp		= nm_usuario_p
					where	nr_sequencia 		= nr_seq_horario_w
					and	coalesce(dt_suspensao::text, '') = ''
					and	coalesce(dt_fim_horario::text, '') = '';
					GET DIAGNOSTICS ie_atualizou_reg_w = ROW_COUNT > 0;

					i	:= coalesce(Vetor_Lista_Gerar_w.Count,0) + 1;
					Vetor_Lista_Gerar_w[i].nr_prescricao  	:= nr_prescricao_w;
					Vetor_Lista_Gerar_w[i].nr_seq_material 	:= nr_seq_item_w;
					Vetor_Lista_Gerar_w[i].nr_seq_horario 	:= nr_seq_horario_w;

				end if;
			elsif (ie_alteracao_p = 6) then -- reversao da suspensao do horario
				update	prescr_dieta_hor
				set	dt_suspensao 		 = NULL,
					nm_usuario_susp		 = NULL
				where	nr_sequencia 		= nr_seq_horario_w
				and	(dt_suspensao IS NOT NULL AND dt_suspensao::text <> '');
				GET DIAGNOSTICS ie_atualizou_reg_w = ROW_COUNT > 0;
			end if;

			if (ie_atualizou_reg_w) then
				ie_atualizou_reg_w := false;
				select	nextval('prescr_mat_alteracao_seq')
				into STRICT	nr_seq_alteracao_w
				;

				ds_obs_final_w	:= substr(ds_observacao_p,1,2000);
				if (coalesce(ds_observacao_p::text, '') = '') then
					ds_obs_final_w	:= substr(ds_obs_final_w || ds_obs_dieta_w,1,235);
				elsif (coalesce(ds_obs_dieta_w::text, '') = '') then
					ds_obs_final_w	:= substr(ds_observacao_p,1,2000);
				else
					ds_obs_final_w	:= substr(ds_observacao_p||' - '||ds_obs_dieta_w,1,235);
				end if;

				if (coalesce(ie_palm_p,'N') = 'S') then
					if (ds_obs_final_w IS NOT NULL AND ds_obs_final_w::text <> '') and (ds_obs_final_w <> '') then
						ds_obs_final_w := substr(wheb_mensagem_pck.get_texto(307615, 'DS_OBSERVACAO_W=' || ds_obs_final_w),1,2000); -- Tipo de checagem: ADEP PDA - #@DS_OBSERVACAO_W#@
					else
						ds_obs_final_w := wheb_mensagem_pck.get_texto(307616); -- Tipo de checagem: ADEP PDA
					end if;
				end if;

				insert	into	prescr_mat_alteracao(
									nr_sequencia,
									dt_atualizacao,
									nm_usuario,
									dt_atualizacao_nrec,
									nm_usuario_nrec,
									nr_prescricao,
									nr_seq_horario_dieta,
									dt_alteracao,
									cd_pessoa_fisica,
									ie_alteracao,
									nr_seq_qualidade,
									ds_justificativa,
									ds_observacao,
									ie_tipo_item,
									dt_horario,
									nr_atendimento,
									cd_item,
									qt_dose_adm,
									qt_dose_original,
									cd_medico_solic,
									cd_um_dose_adm,
									ie_mostra_adep,
									nr_seq_assinatura,
									nr_seq_lote,
									cd_funcao,
									ie_evento_valido,
									nr_seq_satisfacao
									)
								values (
									nr_seq_alteracao_w,
									dt_atualizacao_w,
									nm_usuario_p,
									dt_atualizacao_w,
									nm_usuario_p,
									nr_prescricao_w,
									nr_seq_horario_w,
									dt_horario_adm_w,
									obter_dados_usuario_opcao(nm_usuario_p,'C'),
									ie_alteracao_p,
									ie_qualidade_p,
									ds_justificativa_w,
									ds_obs_final_w,
									ie_tipo_item_p,
									dt_horario_w,
									nr_atendimento_p,
									cd_item_p,
									qt_adm_p,
									qt_adm_p,
									cd_medico_solic_p,
									cd_um_dose_adm_w,
									ie_mostra_adep_w,
									nr_seq_assinatura_p,
									nr_seq_lote_w,
									cd_funcao_p,
									'S',
									ie_satisfacao_p
									);

				if (ie_alteracao_p in (4, 6)) then
					UPDATE	prescr_mat_alteracao
					SET	ie_evento_valido	= 'N'
					WHERE nr_prescricao = nr_prescricao_w
					AND nr_seq_horario_dieta 	= nr_seq_horario_w
					AND ie_alteracao 	= CASE WHEN ie_alteracao_p=4 THEN  3  ELSE 5 END;
				end if;

				nr_seq_evento_w	:= nr_seq_alteracao_w;					

				IF (ie_alteracao_p IN (3,5)) THEN
					CALL definir_setor_exec_adep(nr_atendimento_p,ie_tipo_item_p,nr_prescricao_w,nr_seq_item_w,nr_seq_horario_w,NULL);
				END IF;
			END IF;
			END;
		END LOOP;
		CLOSE cCursor;

	ELSIF (ie_tipo_item_p = 'S') THEN

		open c02;
		loop
		fetch c02 into	nr_prescricao_w,
						nr_seq_item_w,
						nr_seq_horario_w,
						ie_via_aplicacao_w,
						cd_funcao_origem_w,
						nr_seq_item_cpoe_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			begin

			ie_atualizou_w := 'N';
			ie_abriu_cursor_w	:= true;
			
			IF (ie_alteracao_p = 3) THEN -- administracao do horario
				UPDATE	prescr_mat_hor
				SET		dt_fim_horario	= dt_atualizacao_w,
						nm_usuario_adm	= nm_usuario_p
				WHERE	nr_sequencia		= nr_seq_horario_w
				AND		coalesce(dt_fim_horario::text, '') = ''
				AND		coalesce(dt_suspensao::text, '') = '';

				select	coalesce(max('S'), 'N')
				into STRICT	ie_atualizou_w
				from 	prescr_mat_hor where nr_sequencia	= nr_seq_horario_w
				and		nm_usuario_adm	= nm_usuario_p
				and		dt_fim_horario	= dt_atualizacao_w LIMIT 1;

				select	substr(max(obter_desc_material(cd_material)),1,255),
						max(nr_prescricao),
						coalesce(qt_adm_p,max(qt_dose)),
						coalesce(cd_um_qt_adm_p,max(cd_unidade_medida_dose)),
						max(dt_horario)
				into STRICT	ds_item_w,
						nr_prescricao_ww,
						qt_dose_ww,
						ds_unidade_medida_w,
						dt_horario_w
				from	prescr_mat_hor
				where	nr_sequencia	= nr_seq_horario_w;

				cd_evolucao_p := Gerar_evolPaci_automa('S', nm_usuario_p, nr_atendimento_p, ds_item_w, nr_seq_horario_w, 'A', obter_expressao_idioma(488570), dt_horario_adm_w, nr_prescricao_ww, qt_dose_ww, ds_unidade_medida_w, ie_via_aplicacao_w, cd_evolucao_p, ie_palm_p);

				if (coalesce(nr_seq_item_cpoe_w,0) > 0) and (coalesce(cd_funcao_origem_w,0) = 2314) then

					dt_fim_w :=	dt_horario_adm_w;

					if (dt_fim_w < dt_horario_w) then	
						dt_fim_w :=	dt_horario_w;
					end if;

					if (ie_param8_cpoe_w = 'A') then
						update	cpoe_dieta
						set 	dt_fim =  trunc(dt_fim_w + 1/24,'hh24') - 1/1440,
								nm_usuario = nm_usuario_p,
								dt_atualizacao = clock_timestamp()
						where	nr_sequencia = nr_seq_item_cpoe_w
						and 	coalesce(ie_evento_unico,'N') = 'S'
						and		ie_administracao = 'P';
					end if;						
				end if;		

			ELSIF (ie_alteracao_p = 4) THEN -- reversao da realizacao do horario
				select	coalesce(max('S'), 'N')
				into STRICT	ie_pode_reverter_w
				from	prescr_mat_hor
				where	nr_sequencia   = nr_seq_horario_w
				and		nm_usuario_adm = nm_usuario_p;

				if	(ie_pode_reverter_w = 'N' AND ie_param682_w = 'N') then
					CALL Wheb_mensagem_pck.exibir_mensagem_abort(452717);
				end if;

				UPDATE	prescr_mat_hor
				SET		dt_fim_horario	 = NULL,
						nm_usuario_adm	 = NULL
				WHERE	nr_sequencia	= nr_seq_horario_w
				AND		(dt_fim_horario IS NOT NULL AND dt_fim_horario::text <> '');

				select	coalesce(max('S'), 'N')
				into STRICT	ie_atualizou_w
				from 	prescr_mat_hor where coalesce(dt_fim_horario::text, '') = ''
				and	coalesce(nm_usuario_adm::text, '') = ''
				and	nr_sequencia	= nr_seq_horario_w LIMIT 1;
				
				select 	max(dt_alteracao)
				into STRICT	dt_conta_w
				from	prescr_mat_alteracao
				where	nr_seq_horario = nr_seq_horario_w
				and		coalesce(ie_evento_valido,'S') = 'S'
				and		ie_alteracao = 3;

			ELSIF (ie_alteracao_p = 5) THEN -- suspensao do horario
				UPDATE	prescr_mat_hor
				SET	dt_suspensao		= dt_atualizacao_w,
					nm_usuario_susp		= nm_usuario_p
				WHERE	nr_sequencia		= nr_seq_horario_w
				AND	coalesce(dt_suspensao::text, '') = ''
				AND	coalesce(dt_fim_horario::text, '') = '';

				select	coalesce(max('S'), 'N')
				into STRICT	ie_atualizou_w
				from 	prescr_mat_hor where dt_suspensao	= dt_atualizacao_w
				and	nm_usuario_susp	= nm_usuario_p
				and	nr_sequencia	= nr_seq_horario_w LIMIT 1;


				SELECT	SUBSTR(MAX(obter_desc_material(cd_material)),1,255),
       					MAX(nr_prescricao),
						coalesce(qt_adm_p,MAX(qt_dose)),
						coalesce(cd_um_qt_adm_p,MAX(cd_unidade_medida_dose))
				INTO STRICT	ds_item_w,
				        nr_prescricao_ww,
						qt_dose_ww,
						ds_unidade_medida_w
				FROM	prescr_mat_hor
				WHERE	nr_sequencia	= nr_seq_horario_w;

				if (ie_atualizou_w = 'S') then
					i	:= coalesce(Vetor_Lista_Gerar_w.Count,0) + 1;
					Vetor_Lista_Gerar_w[i].nr_prescricao  	:= nr_prescricao_w;
					Vetor_Lista_Gerar_w[i].nr_seq_material 	:= nr_seq_item_w;
					Vetor_Lista_Gerar_w[i].nr_seq_horario 	:= nr_seq_horario_w;
				end if;

				cd_evolucao_p := Gerar_evolPaci_automa('S', nm_usuario_p, nr_atendimento_p, ds_item_w, nr_seq_horario_w, 'S', obter_expressao_idioma(488096), clock_timestamp(), nr_prescricao_ww, qt_dose_ww, ds_unidade_medida_w, ie_via_aplicacao_w, cd_evolucao_p, ie_palm_p);
			ELSIF (ie_alteracao_p = 6) THEN -- reversao da suspensao do horario
				UPDATE	prescr_mat_hor
				SET	dt_suspensao		 = NULL,
					nm_usuario_susp		 = NULL
				WHERE	nr_sequencia		= nr_seq_horario_w
				AND	(dt_suspensao IS NOT NULL AND dt_suspensao::text <> '');

				select	coalesce(max('S'), 'N')
				into STRICT	ie_atualizou_w
				from 	prescr_mat_hor where 	coalesce(dt_suspensao::text, '') = ''
				and		coalesce(nm_usuario_susp::text, '') = ''
				and		nr_sequencia	= nr_seq_horario_w LIMIT 1;

			END IF;


			GET DIAGNOSTICS ora2pg_rowcount = ROW_COUNT;



			IF  	(ie_atualizou_w = 'S' AND ie_alteracao_p <> 4) or
				( ora2pg_rowcount > 0 AND ie_alteracao_p = 4) THEN
				SELECT	nextval('prescr_mat_alteracao_seq')
				INTO STRICT	nr_seq_alteracao_w
				;

				ds_obs_final_w := SUBSTR(ds_observacao_p,1,2000);

				IF (coalesce(ie_palm_p,'N') = 'S') THEN
					IF (ds_obs_final_w IS NOT NULL AND ds_obs_final_w::text <> '') AND (ds_obs_final_w <> '') THEN
						ds_obs_final_w := substr(wheb_mensagem_pck.get_texto(307615, 'DS_OBSERVACAO_W=' || ds_obs_final_w),1,2000); -- Tipo de checagem: ADEP PDA - #@DS_OBSERVACAO_W#@
					ELSE
						ds_obs_final_w := wheb_mensagem_pck.get_texto(307616); -- Tipo de checagem: ADEP PDA
					END IF;
				END IF;

				INSERT	INTO	prescr_mat_alteracao(
									nr_sequencia,
									dt_atualizacao,
									nm_usuario,
									dt_atualizacao_nrec,
									nm_usuario_nrec,
									nr_prescricao,
									nr_seq_prescricao,
									nr_seq_horario,
									dt_alteracao,
									cd_pessoa_fisica,
									ie_alteracao,
									ds_justificativa,
									ie_tipo_item,
									dt_horario,
									nr_atendimento,
									cd_item,
									qt_dose_adm,
									cd_um_dose_adm,
									qt_dose_original,
									cd_medico_solic,
									ds_observacao,
									ie_mostra_adep,
									nr_seq_assinatura,
									nr_seq_lote,
									cd_funcao
									)
								VALUES (
									nr_seq_alteracao_w,
									dt_atualizacao_w,
									nm_usuario_p,
									dt_atualizacao_w,
									nm_usuario_p,
									nr_prescricao_w,
									nr_seq_item_w,
									nr_seq_horario_w,
									dt_horario_adm_w,
									obter_dados_usuario_opcao(nm_usuario_p,'C'),
									ie_alteracao_p,
									ds_justificativa_w,
									ie_tipo_item_p,
									dt_horario_w,
									nr_atendimento_p,
									cd_item_p,
									qt_adm_p,
									cd_um_qt_adm_p,
									qt_adm_p,
									cd_medico_solic_p,
									ds_obs_final_w,
									ie_mostra_adep_w,
									nr_seq_assinatura_p,
									nr_seq_lote_w,
									cd_funcao_p
									);

					nr_seq_evento_w	:= nr_seq_alteracao_w;		

				SELECT	nextval('prescr_mat_alteracao_comp_seq')
					INTO STRICT	nr_seq_alteracao_comp_w
					;

				INSERT INTO prescr_mat_alteracao_comp(nr_sequencia,
						dt_atualizacao, 
						cd_intervalo, 
						nm_usuario, 
						dt_atualizacao_nrec, 
						nm_usuario_nrec, 
						nr_sequencia_prescr,
						cd_evolucao,
            nr_seq_topo_lat)
					VALUES (
						nr_seq_alteracao_comp_w,
						dt_atualizacao_w,
						cd_intervalo_w,
						nm_usuario_p,
						dt_atualizacao_w,
						nm_usuario_p,
						nr_seq_alteracao_w,
						cd_evolucao_p,
            nr_seq_topo_lat_p);

				if (ie_alteracao_p in (4, 6)) then
					UPDATE	prescr_mat_alteracao
					SET	ie_evento_valido= 'N'
					WHERE nr_prescricao = nr_prescricao_w
					AND nr_seq_horario 	= nr_seq_horario_w
					AND ie_alteracao 	= CASE WHEN ie_alteracao_p=4 THEN 3  ELSE 5 END;
				end if;

				IF (ie_alteracao_p IN (3,5)) THEN
					CALL definir_setor_exec_adep(nr_atendimento_p,ie_tipo_item_p,nr_prescricao_w,nr_seq_item_w,nr_seq_horario_w,NULL);
				END IF;

				IF (ie_alteracao_p = 3) THEN
					CALL Gerar_proced_assoc_mat_conta(nr_prescricao_w, nr_seq_item_w, NULL, nm_usuario_p, 'G', dt_evento_p);

					IF (coalesce(ie_atualiza_data_conta_w,'N') = 'S') THEN
						UPDATE	material_atend_paciente
						SET		dt_conta 	= dt_evento_p,
								dt_atendimento = dt_evento_p
						WHERE	nr_prescricao			= nr_prescricao_w
						AND		nr_seq_lote_ap			= nr_seq_lote_w;
					END IF;

				ELSIF (ie_alteracao_p = 4) THEN
					CALL Gerar_proced_assoc_mat_conta(nr_prescricao_w, nr_seq_item_w, NULL, nm_usuario_p, 'E', dt_evento_p);
				END IF;

				IF (ie_regra_lanc_conta_w <> 'N') AND (ie_alteracao_p IN (3,4)) THEN

					IF (ie_regra_lanc_conta_w = 'S') THEN

						IF (ie_alteracao_p = 3) THEN
							nr_seq_map_w := gerar_estornar_adep_map(NULL, nr_seq_horario_w, NULL, 'G', dt_horario_adm_w, nm_usuario_p, nr_seq_map_w, 'GAP', null, null);
						ELSIF (ie_alteracao_p = 4) THEN
							nr_seq_map_w := gerar_estornar_adep_map(NULL, nr_seq_horario_w, NULL, 'E', coalesce(dt_conta_w,dt_horario_adm_w), nm_usuario_p, nr_seq_map_w, 'GAP', null, null);
						END IF;

					ELSIF (ie_regra_lanc_conta_w = 'L') AND (obter_se_lote_hor_conta_pac(nr_seq_horario_w) = 'S') THEN

						IF (ie_alteracao_p = 3) THEN
							nr_seq_map_w := gerar_estornar_adep_map(NULL, nr_seq_horario_w, NULL, 'G', dt_horario_adm_w, nm_usuario_p, nr_seq_map_w, 'GAP', null, null);
						ELSIF (ie_alteracao_p = 4) THEN
							nr_seq_map_w := gerar_estornar_adep_map(NULL, nr_seq_horario_w, NULL, 'E', coalesce(dt_conta_w,dt_horario_adm_w), nm_usuario_p, nr_seq_map_w, 'GAP', null, null);
						END IF;
					ELSIF (ie_regra_lanc_conta_w = 'T') AND (coalesce(nr_seq_lote_w, 0) = 0) THEN
						IF (ie_alteracao_p = 3) THEN
							nr_seq_map_w := gerar_estornar_adep_map(NULL, nr_seq_horario_w, NULL, 'G', dt_horario_adm_w, nm_usuario_p, nr_seq_map_w, 'GAP', null, null);
						ELSIF (ie_alteracao_p = 4) THEN
							nr_seq_map_w := gerar_estornar_adep_map(NULL, nr_seq_horario_w, NULL, 'E', coalesce(dt_conta_w,dt_horario_adm_w), nm_usuario_p, nr_seq_map_w, 'GAP', null, null);
						END IF;

					END IF;

				END IF;

			END IF;
			END;
		END LOOP;
		CLOSE c02;

	ELSIF (ie_tipo_item_p = 'LD') THEN

		OPEN c13;
		LOOP
		FETCH c13 INTO	nr_prescricao_w,
						nr_seq_item_w,
						nr_seq_horario_w,
						cd_funcao_origem_w,
						nr_seq_item_cpoe_w,
						dt_horario_w,
						ie_via_aplicacao_w,
						qt_dose_ww,
						ds_item_w;
		EXIT WHEN NOT FOUND; /* apply on c13 */
			BEGIN

			ie_abriu_cursor_w	:= true;
			
			IF (ie_alteracao_p = 3) THEN -- administracao do horario
				UPDATE	prescr_mat_hor
				SET		dt_fim_horario	= dt_atualizacao_w,
						nm_usuario_adm	= nm_usuario_p
				WHERE	nr_sequencia	= nr_seq_horario_w
				AND		coalesce(dt_fim_horario::text, '') = ''
				AND		coalesce(dt_suspensao::text, '') = '';

				GET DIAGNOSTICS ora2pg_rowcount = ROW_COUNT;


				ie_gerou_evento_w  := ( ora2pg_rowcount > 0);

				if (coalesce(nr_seq_item_cpoe_w,0) > 0) and (coalesce(cd_funcao_origem_w,0) = 2314) then

					dt_fim_w :=	dt_horario_adm_w;

					if (dt_fim_w < dt_horario_w) then	
						dt_fim_w :=	dt_horario_w;
					end if;

					if (ie_param8_cpoe_w = 'A') then
						update	cpoe_dieta
						set 	dt_fim =  trunc(dt_fim_w + 1/24,'hh24') - 1/1440,
								nm_usuario = nm_usuario_p,
								dt_atualizacao = clock_timestamp()
						where	nr_sequencia = nr_seq_item_cpoe_w
						and 	coalesce(ie_evento_unico,'N') = 'S'
						and		ie_administracao = 'P';
					end if;						
				end if;

				cd_evolucao_p		=>	cd_evolucao_p := gerar_evolpaci_automa(	ie_tipo_item_p		=>	'LD', nm_usuario_p		=>	nm_usuario_p, nr_atendimento_p	=>	nr_atendimento_p, ds_item_p			=>	ds_item_w, nr_seq_horario_p	=>	nr_seq_horario_w, ie_opcao_p			=>	'A', ds_hint_p			=>	obter_expressao_idioma(488570), dt_evento_p			=>	dt_horario_adm_w, nr_prescricao_p		=>	nr_prescricao_w, qt_dose_p			=>	qt_dose_ww, ds_unid_med_p		=>	obter_unid_med_usua('ml'), ie_via_adm_p		=>	ie_via_aplicacao_w, cd_evolucao_p		=>	cd_evolucao_p, ie_palm_p			=>	ie_palm_p);

			ELSIF (ie_alteracao_p = 4) THEN -- reversao da realizacao do horario
				select	coalesce(max('S'), 'N')
				into STRICT	ie_pode_reverter_w
				from	prescr_mat_hor
				where	nr_sequencia   = nr_seq_horario_w
				and		nm_usuario_adm = nm_usuario_p;

				if	(ie_pode_reverter_w = 'N' AND ie_param682_w = 'N') then
					CALL Wheb_mensagem_pck.exibir_mensagem_abort(452717);
				end if;

				UPDATE	prescr_mat_hor
				SET	dt_fim_horario	 = NULL,
					nm_usuario_adm	 = NULL
				WHERE	nr_sequencia	= nr_seq_horario_w
				AND	(dt_fim_horario IS NOT NULL AND dt_fim_horario::text <> '');
				
				select 	max(dt_alteracao)
				into STRICT	dt_conta_w
				from	prescr_mat_alteracao
				where	nr_seq_horario = nr_seq_horario_w
				and		coalesce(ie_evento_valido,'S') = 'S'
				and		ie_alteracao = 3;

			ELSIF (ie_alteracao_p = 5) THEN -- suspensao do horario
				UPDATE	prescr_mat_hor
				SET	dt_suspensao	= dt_atualizacao_w,
					nm_usuario_susp	= nm_usuario_p
				WHERE	nr_sequencia	= nr_seq_horario_w
				AND	coalesce(dt_suspensao::text, '') = ''
				AND	coalesce(dt_fim_horario::text, '') = '';

				i	:= coalesce(Vetor_Lista_Gerar_w.Count,0) + 1;
				Vetor_Lista_Gerar_w[i].nr_prescricao  	:= nr_prescricao_w;
				Vetor_Lista_Gerar_w[i].nr_seq_material 	:= nr_seq_item_w;
				Vetor_Lista_Gerar_w[i].nr_seq_horario 	:= nr_seq_horario_w;

        cd_evolucao_p 		=>	cd_evolucao_p := Gerar_evolPaci_automa(	ie_tipo_item_p 		=>	'LD', nm_usuario_p 		=>	nm_usuario_p, nr_atendimento_p	=>	nr_atendimento_p, ds_item_p			=>	ds_item_w, nr_seq_horario_p 	=>	nr_seq_horario_w, ie_opcao_p 			=>	'S', ds_hint_p 			=>	obter_expressao_idioma(488096), dt_evento_p 		=>	clock_timestamp(), nr_prescricao_p 	=>	nr_prescricao_ww, qt_dose_p 			=>	qt_dose_ww, ds_unid_med_p 		=>	ds_unidade_medida_w, ie_via_adm_p 		=>	ie_via_aplicacao_w, cd_evolucao_p 		=>	cd_evolucao_p, ie_palm_p 			=>	ie_palm_p);

			ELSIF (ie_alteracao_p = 6) THEN -- reversao da suspensao do horario
				UPDATE	prescr_mat_hor
				SET	dt_suspensao	 = NULL,
					nm_usuario_susp	 = NULL
				WHERE	nr_sequencia	= nr_seq_horario_w
				AND	(dt_suspensao IS NOT NULL AND dt_suspensao::text <> '');
			END IF;

			GET DIAGNOSTICS ora2pg_rowcount = ROW_COUNT;


			IF ( ora2pg_rowcount > 0 or ie_gerou_evento_w) THEN
				SELECT	nextval('prescr_mat_alteracao_seq')
				INTO STRICT	nr_seq_alteracao_w
				;

				ds_obs_final_w := SUBSTR(ds_observacao_p,1,2000);

				IF (coalesce(ie_palm_p,'N') = 'S') THEN
					IF (ds_obs_final_w IS NOT NULL AND ds_obs_final_w::text <> '') AND (ds_obs_final_w <> '') THEN
						ds_obs_final_w := substr(wheb_mensagem_pck.get_texto(307615, 'DS_OBSERVACAO_W=' || ds_obs_final_w),1,2000); -- Tipo de checagem: ADEP PDA - #@DS_OBSERVACAO_W#@
					ELSE
						ds_obs_final_w := wheb_mensagem_pck.get_texto(307616); -- Tipo de checagem: ADEP PDA
					END IF;
				END IF;

				INSERT	INTO	prescr_mat_alteracao(
									nr_sequencia,
									dt_atualizacao,
									nm_usuario,
									dt_atualizacao_nrec,
									nm_usuario_nrec,
									nr_prescricao,
									nr_seq_prescricao,
									nr_seq_horario,
									dt_alteracao,
									cd_pessoa_fisica,
									ie_alteracao,
									ds_justificativa,
									ie_tipo_item,
									dt_horario,
									nr_atendimento,
									cd_item,
									qt_dose_adm,
									cd_um_dose_adm,
									qt_dose_original,
									cd_medico_solic,
									ds_observacao,
									ie_mostra_adep,
									nr_seq_assinatura,
									nr_seq_lote,
									cd_funcao,
									ie_evento_valido
									)
								VALUES (
									nr_seq_alteracao_w,
									dt_atualizacao_w,
									nm_usuario_p,
									dt_atualizacao_w,
									nm_usuario_p,
									nr_prescricao_w,
									nr_seq_item_w,
									nr_seq_horario_w,
									dt_horario_adm_w,
									obter_dados_usuario_opcao(nm_usuario_p,'C'),
									ie_alteracao_p,
									ds_justificativa_w,
									ie_tipo_item_p,
									dt_horario_w,
									nr_atendimento_p,
									cd_item_p,
									qt_adm_p,
									cd_um_qt_adm_p,
									qt_item_p,
									cd_medico_solic_p,
									ds_obs_final_w,
									ie_mostra_adep_w,
									nr_seq_assinatura_p,
									nr_seq_lote_w,
									cd_funcao_p,
									'S'
									);

				if (ie_alteracao_p in (4, 6)) then
					UPDATE	prescr_mat_alteracao
					SET	ie_evento_valido	= 'N'
					WHERE nr_prescricao = nr_prescricao_w
					AND nr_seq_horario 	= nr_seq_horario_w
					AND ie_alteracao 	= CASE WHEN ie_alteracao_p=4 THEN 3  ELSE 5 END;
				end if;

					nr_seq_evento_w	:= nr_seq_alteracao_w;				

				IF (ie_alteracao_p IN (3,5)) THEN
					CALL definir_setor_exec_adep(nr_atendimento_p,ie_tipo_item_p,nr_prescricao_w,nr_seq_item_w,nr_seq_horario_w,NULL);
				END IF;
				IF (ie_alteracao_p IN (3,4))
					AND ((ie_regra_lanc_conta_w = 'S')
					OR (ie_regra_lanc_conta_w = 'L' AND obter_se_lote_hor_conta_pac(nr_seq_horario_w) = 'S')
					OR (ie_regra_lanc_conta_w = 'T' AND coalesce(nr_seq_lote_w::text, '') = '')) THEN
					
					dt_horario_adm_w	:= coalesce(dt_conta_w,dt_horario_adm_w);
					
					nr_seq_map_p => nr_seq_map_w := gerar_estornar_adep_map( nr_seq_processo_p => NULL, nr_seq_horario_p => nr_seq_horario_w, nr_seq_area_prep_p => NULL, ie_gerar_estornar_p => CASE WHEN(ie_alteracao_p = 3) THEN 'G' ELSE 'E' END, dt_gerar_estornar_p => dt_horario_adm_w, nm_usuario_p => nm_usuario_p, nr_seq_map_p => nr_seq_map_w, ie_momento_p => 'GAP', qt_material_p => NULL, nr_seq_lote_fornec_p => NULL);
				END IF;
			END IF;
			END;
		END LOOP;
		CLOSE c13;

	-- Medicamentos
	elsif (ie_tipo_item_p in ('M', 'IAH')) then

		var_desdobrar_processo_w	:= Wheb_assist_pck.obterParametroFuncao(1113,487);

		ds_sql_cursor_w	:= '';
		ds_sql_where_w	:= '';

        if (ie_somente_horario_w = 'S') then     
            ds_sql_where_w := ds_sql_where_w || ' and c.nr_sequencia = ''' || nr_seq_horario_p || ''' ';
        end if;

		if (coalesce(cd_unidade_medida_p,'XPTO') <> 'XPTO') then
			ds_sql_where_w	:=	ds_sql_where_w || ' and		b.cd_unidade_medida_dose = ''' || cd_unidade_medida_p || ''' ';
		end if;

		if (coalesce(cd_intervalo_p,'XPTO') = 'XPTO') then
			ds_sql_where_w	:=	ds_sql_where_w || ' and		b.cd_intervalo is null ';
		else
			ds_sql_where_w	:=	ds_sql_where_w || ' and		b.cd_intervalo = ''' || cd_intervalo_p || ''' ';
		end if;

		if (ds_item_p IS NOT NULL AND ds_item_p::text <> '') then
			ds_sql_where_w	:=	ds_sql_where_w || ' and		((ds_medic_nao_padrao is null) or ' ||
												  ' 		 (''' || substr(upper(replace(ds_item_p, chr(39),'')),1,240)  || ''' =  substr(upper(replace(ds_medic_nao_padrao,chr(39),'''') || '' '' || obter_desc_expressao(734087) || decode(b.ie_lado, '''', '''', '' ('' || obter_expressao_idioma(292416) || '': '' || obter_valor_dominio(1372,b.ie_lado) || '')'')),1,240))) ';
		end if;

		if (coalesce(ie_item_suspenso_p,'N') <> 'N') then
			ds_sql_where_w	:=	ds_sql_where_w || ' and		c.dt_suspensao is not null ';
		end if;

		if (qt_item_p IS NOT NULL AND qt_item_p::text <> '') then
			ds_sql_where_w	:=	ds_sql_where_w || ' and		((nvl(nvl(b.qt_dose_especial,b.qt_dose),1) = nvl(''' || qt_item_p || ''',nvl(nvl(b.qt_dose_especial,b.qt_dose),1))) or' ||
												  '			(nvl(b.qt_dose,1) = nvl(''' || qt_item_p || ''',nvl(b.qt_dose,1))) or' ||
												  ' 		((nvl(c.qt_dose,1) = nvl(''' || qt_item_p || ''',nvl(c.qt_dose,1))) and (b.ds_dose_diferenciada is not null))) ';
		end if;

		if (coalesce(nr_agrupamento_p::text, '') = '') then
			ds_sql_where_w	:=	ds_sql_where_w || ' and		obter_se_agrupa_composto(a.nr_prescricao, b.nr_sequencia, b.nr_agrupamento, b.cd_material) = ''N'' ';
		else
			ds_sql_where_w	:=	ds_sql_where_w || ' and		b.nr_agrupamento = ' || nr_agrupamento_p;
		end if;


		if (ie_via_aplicacao_p IS NOT NULL AND ie_via_aplicacao_p::text <> '') then		
			ds_sql_where_w 	:= ds_sql_where_w || ' and		nvl(b.ie_via_aplicacao, ''XPTO'') = '''||ie_via_aplicacao_p||''' ';			
		end if;


		ds_sql_cursor_w	:=	ds_sql_cursor_w ||
							' select	a.nr_prescricao nr_prescricao, ' ||
							' 			b.nr_sequencia nr_seq_item, ' ||
							' 			b.nr_agrupamento nr_agrupamento, ' ||
							' 			decode(b.qt_solucao,null, c.cd_unidade_medida_dose,''ml'') cd_um_dose, ' || 
							' 			decode(b.ds_dose_diferenciada, null, c.qt_dose,b.qt_dose) qt_dose, ' || --feito o decode pois senao nao traz os eventos dos itens no ADEP.
							' 			c.nr_sequencia nr_seq_hor, ' ||
							' 			nvl(b.ie_acm,''N''), ' ||
							' 			nvl(b.ie_se_necessario,''N''), ' ||
							' 			decode(c.cd_motivo_baixa, 0, b.cd_motivo_baixa, c.cd_motivo_baixa), ' ||
							' 			nvl(b.ie_medicacao_paciente,''N''), ' ||
							' 			nvl(b.qt_solucao,0), ' ||
							' 			b.ie_bomba_infusao, ' ||
							' 			c.nr_seq_lote, ' ||
							' 			b.cd_material, ' ||
							' 			b.ie_via_aplicacao, ' ||
							' 			b.cd_intervalo, ' ||
							' 			decode(b.ds_dose_diferenciada, null, null, c.qt_dose) qt_dose_comp, ' ||
							' 			nvl(b.nr_seq_atendimento, a.nr_seq_atend), ' ||
							' 			a.cd_funcao_origem, ' ||
							' 			b.nr_seq_mat_cpoe, ' ||
							' 			c.dt_horario ' ||
							' from		prescr_mat_hor c, ' ||
							' 			prescr_material b ,' ||
							' 			prescr_medica a ' ||
							' where		c.nr_prescricao = b.nr_prescricao ' ||
							' and		c.nr_seq_material = b.nr_sequencia ' ||
							' and		b.nr_prescricao = a.nr_prescricao ' ||
							' and		b.ie_agrupador = 1 ' ||
							' and		nvl(c.ie_situacao,''A'') = ''A'' ' ||
							' and		nvl(c.ie_adep,''S'') = ''S''' ||
							' and		Obter_se_horario_liberado(c.dt_lib_horario, c.dt_horario) = ''S'' ' ||
							' and		obter_se_exibir_rep_adep_setor(''' || cd_setor_pac_w || ''',a.cd_setor_atendimento,nvl(a.ie_adep,''S'')) = ''S'' ' ||
							' and		obter_se_prescr_lib_adep(nvl(a.dt_liberacao_medico, b.dt_lib_material), nvl(a.dt_liberacao,b.dt_lib_material), nvl(a.dt_liberacao_farmacia, b.dt_lib_farmacia), ''' || ie_data_lib_prescr_w || ''') = ''S'' ' ||
							' and		obter_se_prescr_adep(a.nr_prescricao, b.nr_sequencia, ''' || nr_prescricao_p || ''', ''' || coalesce(nr_seq_item_p,nr_sequencia_item_w) || ''', ''' || nr_prescricoes_w || ''') = ''S'' ' ||
							' and		a.dt_validade_prescr > to_date(''' || to_char(dt_param_w,'dd/mm/yyyy hh24:mi:ss') || ''',''dd/mm/yyyy hh24:mi:ss'') ' ||
							' and		b.cd_material = ' || cd_item_p ||
							' and		obter_se_acm_sn(b.ie_acm, b.ie_se_necessario) = ''' || ie_acm_sn_p || ''' ' ||
							' and		c.dt_horario = to_date(''' || to_char(dt_horario_w,'dd/mm/yyyy hh24:mi:ss') || ''',''dd/mm/yyyy hh24:mi:ss'') ' ||
							' and 		((nvl(c.ie_horario_especial, ''N'') = ''N'') or (c.dt_fim_horario is not null)) ' ||
							' and		a.nr_atendimento = ' || nr_atendimento_p ||							
							ds_sql_where_w;	

		OPEN cCursor for EXECUTE ds_sql_cursor_w;
		LOOP
		FETCH cCursor INTO
				nr_prescricao_w,
				nr_seq_item_w,
				nr_agrupamento_w,
				cd_um_dose_w,
				qt_dose_w,
				nr_seq_horario_w,
				ie_acm_w,
				ie_sn_w,
				cd_motivo_baixa_w,
				ie_medic_paciente_w,
				qt_solucao_w,
				ie_bomba_infusao_w,
				nr_seq_lote_w,
				cd_material_w,
				ie_via_aplicacao_w,
				cd_intervalo_w,
				qt_dose_comp_w,
				nr_seq_atendimento_w,
				cd_funcao_origem_w,
				nr_seq_item_cpoe_w,
				dt_horario_w;
		EXIT WHEN NOT FOUND; /* apply on cCursor */
			BEGIN

			IF (ie_acm_w = 'S') OR (ie_sn_w = 'S') THEN
				ie_acm_sn_w := 'S';
			ELSE
				ie_acm_sn_w := 'N';
			END IF;
			
			ie_abriu_cursor_w	:= true;

			IF	((coalesce(cd_motivo_baixa_w,0) = 0) or (ie_somente_com_baixa_w <> 'N')) AND (ie_alteracao_p = 3) THEN
				ie_impedir_w	:= Obter_Se_impede_adm(cd_item_p);
				IF (ie_impedir_w = 'S') THEN
					IF (ie_somente_com_baixa_w = 'S')  AND (coalesce(cd_motivo_baixa_w, 0) = 0) THEN
						--So e possivel administrar uma medicacao apos o atendimento da mesma no atendimento da prescricao/lote! Parametro [357]
						CALL Wheb_mensagem_pck.Exibir_mensagem_abort(173406);
					ELSIF (ie_somente_com_baixa_w = 'L') AND (nr_seq_lote_w IS NOT NULL AND nr_seq_lote_w::text <> '') THEN
						SELECT	MAX(dt_atend_farmacia)
						INTO STRICT	dt_atend_lote_w
						FROM	ap_lote
						WHERE	nr_sequencia = nr_seq_lote_w;
						IF (coalesce(dt_atend_lote_w::text, '') = '') THEN
							--So e possivel administrar uma medicacao apos o atendimento da mesma no atendimento da prescricao/lote! Parametro [357]
							CALL Wheb_mensagem_pck.Exibir_mensagem_abort(173406);
						END IF;
					ELSIF (ie_somente_com_baixa_w = 'E') AND (nr_seq_lote_w IS NOT NULL AND nr_seq_lote_w::text <> '') THEN
						SELECT	MAX(dt_entrega_setor)
						INTO STRICT	dt_entrega_setor_w
						FROM	ap_lote
						WHERE	nr_sequencia = nr_seq_lote_w;
						IF (coalesce(dt_entrega_setor_w::text, '') = '') THEN
							--So e possivel administrar uma medicacao apos a entrega da mesma no atendimento da prescricao/lote! Parametro [357]
							CALL Wheb_mensagem_pck.Exibir_mensagem_abort(472055);
						END IF;
					ELSIF (ie_somente_com_baixa_w = 'R') AND (nr_seq_lote_w IS NOT NULL AND nr_seq_lote_w::text <> '') THEN
						SELECT	MAX(dt_recebimento_setor)
						INTO STRICT	dt_recebimento_setor_w
						FROM	ap_lote
						WHERE	nr_sequencia = nr_seq_lote_w;
						IF (coalesce(dt_recebimento_setor_w::text, '') = '') THEN
							--Somente e possivel administrar uma medicacao, apos o recebimento da mesma no atendimento da prescricao/lote!
							CALL Wheb_mensagem_pck.Exibir_mensagem_abort(819419);
						END IF;
					END IF;
				END IF;
			END IF;


			ie_atualizou_w := 'N';
			IF (ie_alteracao_p = 3) THEN -- administracao do horario
				select	count(*)
				into STRICT	qt_hor_inv_w
				from	prescr_medica a where		dt_evento_p between a.dt_prescricao and a.dt_validade_prescr	
				and		obter_se_valor_contido(a.nr_prescricao,coalesce(nr_prescricoes_p,a.nr_prescricao)) = 'S'
				and		(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
				and		obter_se_exibir_rep_adep_setor(cd_setor_pac_w,a.cd_setor_atendimento,coalesce(a.ie_adep,'S')) = 'S'
				and		a.dt_validade_prescr > dt_param_w
				and		a.nr_atendimento = nr_atendimento_p LIMIT 1;
				
				nr_seq_cpoe_w := obter_nr_sequencia_cpoe(	nr_sequencia_p => nr_seq_item_w,
										nr_prescricao_p => nr_prescricao_w,
										ie_tipo_item_p => ie_tipo_item_p);

				if (qt_hor_inv_w = 0) then

					select	max(dt_validade_prescr),
							min(dt_prescricao),
							coalesce(max(cd_funcao_origem), cd_funcao_origem_w),
							coalesce(max(ie_prescr_emergencia),'N')
					into STRICT	dt_validade_prescr_w,
							dt_inicio_prescr_w,
							cd_funcao_origem_w,
							ie_prescr_emergencia_w
					from	prescr_medica where		obter_se_valor_contido(nr_prescricao,coalesce(nr_prescricoes_p,nr_prescricao)) = 'S'
					and		(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
					and		obter_se_exibir_rep_adep_setor(cd_setor_pac_w,cd_setor_atendimento,coalesce(ie_adep,'S')) = 'S'
					and		dt_validade_prescr > dt_param_w
					and		nr_atendimento = nr_atendimento_p LIMIT 1;

					if (nr_seq_cpoe_w IS NOT NULL AND nr_seq_cpoe_w::text <> '') then
						select 	CASE WHEN ie_prescr_emergencia_w='S' THEN  max(dt_inicio)  ELSE max(dt_liberacao) END
						into STRICT	dt_inicio_cpoe_w
						from 	cpoe_material
						where	nr_sequencia = nr_seq_cpoe_w;
					end if;

					if (ie_permite_adm_w = 'N' and
						dt_evento_p < coalesce(dt_inicio_cpoe_w, dt_inicio_prescr_w)) then
						CALL Wheb_mensagem_pck.exibir_mensagem_abort(1024592);
					end if;

				end if;

				if (pkg_i18n.get_user_locale() = 'en_AU' and dose_range_max_valid(nr_seq_item_cpoe_w, nr_prescricao_w, coalesce(qt_adm_p,qt_dose_w), dt_horario_w, null, nm_usuario_p) = 'N') then
					CALL Wheb_mensagem_pck.Exibir_mensagem_abort(obter_desc_expressao(1048486));
				end if;

				ie_consist_dose_adm_w := coalesce(obter_valor_param_usuario(1113,62, cd_perfil_p, nm_usuario_p, obter_estab_atend(nr_atendimento_p)), 'N');

				IF (ie_consist_dose_adm_w IN ('JD','DM','I')) AND (qt_adm_p IS NOT NULL AND qt_adm_p::text <> '') THEN
					IF (ie_consist_dose_adm_w = 'JD') AND
						((qt_adm_p <> qt_dose_w AND qt_adm_p <> qt_solucao_w) OR (cd_um_qt_adm_p <> cd_um_dose_w)) AND (coalesce(ds_justificativa_w::text, '') = '') THEN
						--A justificativa e obrigatoria quando a dose administrada e diferente da dose prescrita. Parametro [62].
						CALL Wheb_mensagem_pck.Exibir_mensagem_abort(173407);
					ELSIF (ie_consist_dose_adm_w = 'I') AND
						((qt_adm_p <> qt_dose_w AND qt_adm_p <> qt_solucao_w) OR (cd_um_qt_adm_p <> cd_um_dose_w)) THEN
						--Nao e permitida a administracao quando a dose administrada e diferente da dose prescrita. Parametro [62].
						CALL Wheb_mensagem_pck.Exibir_mensagem_abort(173408);
					ELSIF (ie_consist_dose_adm_w = 'DM') AND
						((qt_adm_p > qt_dose_w AND qt_adm_p > qt_solucao_w) OR (cd_um_qt_adm_p > cd_um_dose_w)) THEN
						--Nao e possivel administrar uma dose maior que a sua dispensacao.
						CALL Wheb_mensagem_pck.Exibir_mensagem_abort(123053);
					END IF;
				END IF;

				IF (ie_consist_hr_estabilid_w = 'S') THEN
					SELECT	MIN(dt_horario) + coalesce(MAX(dividir(b.qt_horas_estabilidade,24)),0)
					INTO STRICT	dt_estalidade_max_w
					FROM	prescr_mat_hor c,
						prescr_material b
					WHERE	c.nr_prescricao 	= b.nr_prescricao
					AND	c.nr_seq_material 	= b.nr_sequencia
					AND	b.nr_prescricao 	= nr_prescricao_w
					AND	b.nr_sequencia		= nr_seq_item_w;

					IF (dt_estalidade_max_w < clock_timestamp()) THEN
						--Nao e possivel administrar este horario, pois a data de estabilidade ja terminou. Parametro[359]!
						CALL Wheb_mensagem_pck.Exibir_mensagem_abort(173411);
					END IF;
				END IF;

				SELECT	SUBSTR(MAX(obter_desc_material(cd_material)),1,255),
						MAX(nr_prescricao),
						coalesce(qt_adm_p,MAX(qt_dose)),
						coalesce(cd_um_qt_adm_p,MAX(cd_unidade_medida_dose)),
						max(obter_dados_material(cd_material, 'CCLA')),
						max(obter_dados_material(cd_material_w, 'CGRU')),
						max(obter_dados_material(cd_material_w, 'CSUB'))
				INTO STRICT	ds_item_w,
						nr_prescricao_ww,
						qt_dose_ww,
						ds_unidade_medida_w,
						cd_classe_mat_w,
						cd_grupo_mat_w,
						cd_sub_grupo_mat_w
				FROM	prescr_mat_hor
				WHERE	nr_sequencia	= nr_seq_horario_w;

				--- Tratamento regra nova Sorio
				select	coalesce(max(nr_sequencia),0)
				into STRICT	nr_sequencia_w
				from	rep_intervencao_medic
				where	coalesce(cd_material, cd_material_w) = cd_material_w
				and		coalesce(ie_via_aplicacao, ie_via_aplicacao_w) = ie_via_aplicacao_w
				and		coalesce(ie_se_necessario, 'N') = ie_sn_w
				and		coalesce(ie_acm, 'N') = ie_acm_w
				and		coalesce(cd_classe_material,cd_classe_mat_w) = cd_classe_mat_w	
				and		coalesce(cd_grupo_material,cd_grupo_mat_w) = cd_grupo_mat_w
				and		coalesce(cd_subgrupo_material,cd_sub_grupo_mat_w) =  cd_sub_grupo_mat_w
				and		exists (SELECT 1 from rep_intervencao_medic);

				select	max(nr_seq_proc),
						max(ds_mensagem),
						coalesce(max(qt_minutos_apraz),1)
				into STRICT	nr_seq_proc_w,
						ds_mensagem_w,
						qt_minutos_apraz_w	
				from	rep_intervencao_medic
				where	nr_sequencia = nr_sequencia_w;

				if (nr_sequencia_w > 0) then

					select 	dt_horario_w+qt_minutos_apraz_w/1440
					into STRICT	dt_horario_w
					;

				    select	coalesce(max(b.nr_sequencia),0),
							coalesce(max(ie_acm),'N'),
							max(cd_intervalo),
							coalesce(max(qt_intervencao),1),
							max(a.nr_sequencia)
					into STRICT	nr_prescr_interv_w,
							ie_acm_interv_w,
							cd_intervalo_interv_w,
							qt_interv_w,
							nr_seq_interv_w
					from  	pe_prescr_proc a,
						  	pe_prescricao b
					where 	a.nr_seq_prescr 	= b.nr_sequencia
					and	    nr_seq_proc 		= nr_seq_proc_w
					and	    dt_horario_w between dt_inicio_prescr and dt_validade_prescr;

				end if;

				if (nr_prescr_interv_w > 0) then

					SELECT * FROM aprazar_item_prescr('N', cd_estabelecimento_p, nr_atendimento_p, 'E', qt_hora_prescricao_p, nr_seq_proc_w, cd_intervalo_interv_w, qt_interv_w, dt_horario_w, nr_prescr_interv_w, nr_prescr_interv_w, nr_seq_interv_w, 'N', null, '', nm_usuario_p, ie_inconsistencia_ccg_w, ds_inconsistentes_ccg_w, null, null, ie_acm_interv_w, 'S', nr_seq_assinatura_p, 'N', null, null, null, null, null, null, null, null) INTO STRICT ie_inconsistencia_ccg_w, ds_inconsistentes_ccg_w;				
				else						
					ds_msg_p	:=	substr(ds_mensagem_w,1,255); 					
				end if;				
				-- Fim regra nova sorio.
				IF (ie_bomba_infusao_w IS NOT NULL AND ie_bomba_infusao_w::text <> '') THEN
					CALL Gerar_itens_assoc_dispositivo(ie_bomba_infusao_w, nr_prescricao_w, cd_perfil_p, cd_estabelecimento_p, nr_seq_item_w, NULL, nm_usuario_p, nr_seq_horario_p);
				END IF;
			
				UPDATE	prescr_mat_hor
				SET		dt_fim_horario	= dt_atualizacao_w,
						nm_usuario_adm	= nm_usuario_p
				WHERE	nr_sequencia	= nr_seq_horario_w
				AND		coalesce(dt_fim_horario::text, '') = ''
				AND		coalesce(dt_suspensao::text, '') = ''
				and (coalesce(dt_recusa::text, '') = '' or cd_funcao_p <> 1110);				
				
				CALL gerar_prescr_rec_adm(nr_seq_horario_w,nm_usuario_p,'A');
				
				if	((coalesce(nr_seq_item_cpoe_w,0) > 0)				
				and((cd_funcao_origem_w = 2314)or (cd_funcao_origem_w = 281))) then

					dt_fim_w :=	dt_horario_adm_w;

					if (dt_fim_w < dt_horario_w) then	
						dt_fim_w :=	dt_horario_w;
					end if;

					if (ie_param8_cpoe_w = 'A' and cd_funcao_origem_w = 2314 ) then
						update	cpoe_material
						set 	dt_fim =  trunc(dt_fim_w + 1/24,'hh24') - 1/1440,
								nm_usuario = nm_usuario_p,
								dt_atualizacao = clock_timestamp()
						where	nr_sequencia = nr_seq_item_cpoe_w
						and 	coalesce(ie_evento_unico,'N') = 'S'
						and		ie_administracao = 'P';
					end if;

					ie_param1562_cpoe_w := obter_param_usuario(281, 1562, obter_perfil_ativo, nm_usuario_p, coalesce(wheb_usuario_pck.get_cd_estabelecimento, 1), ie_param1562_cpoe_w);

					if (ie_param1562_cpoe_w = 'A' and cd_funcao_origem_w = 281)	then										
						select	coalesce(max(a.ie_oncologia), 'N')
						into STRICT 	ie_oncologia_w
						from 	cpoe_material a
						where 	a.nr_sequencia = nr_seq_item_cpoe_w;

						if (ie_oncologia_w = 'S') then 						
							select	max(a.dt_horario)
							into STRICT 	dt_horario_mat_hor_onc_w
							from 	prescr_mat_hor a
							where 	a.nr_prescricao = nr_prescricao_p
							and 	a.nr_seq_material = nr_seq_item_w
							and 	coalesce(a.dt_suspensao::text, '') = ''
							and 	coalesce(a.ie_horario_especial,'N') = 'N'
							and		coalesce(a.ie_situacao,'A') = 'A';

							if (dt_horario_w = dt_horario_mat_hor_onc_w) then								
								atualiza_data_fim_cpoe_mat(trunc(dt_fim_w + 1/24,'hh24') - 1/1440, nr_seq_item_cpoe_w);
							end if;

						end if;

					end if;
				end if;	
				if	((coalesce(nr_seq_atendimento_w,0) > 0) and (ie_param697_w = 'S')) then
					begin
						CALL finalizar_adm_adep_quimio('A', nr_seq_atendimento_w, 'T', nr_atendimento_p, dt_atualizacao_w, dt_atualizacao_w, nr_prescricao_ww, nm_usuario_p, cd_estabelecimento_p, nr_seq_horario_p);					
					end;
				end if;

				select	coalesce(max('S'),'N')
				into STRICT	ie_epimed_w
				from	setor_atendimento h
				where	coalesce(h.ie_epimed,'N') = 'S'
				and		h.ie_situacao = 'A'
				and		h.cd_setor_atendimento in (	SELECT	cd_setor_atendimento
													from	prescr_medica
													where	nr_prescricao = nr_prescricao_w);

				if (ie_epimed_w = 'S') then
					CALL epimed_envia_aminas_vasoativas(nr_prescricao_w, null, 0, nr_atendimento_p, nr_seq_horario_w, nm_usuario_p);
				end if;

				SELECT	coalesce(MAX('S'),'N')
				INTO STRICT	ie_atualizou_w
				FROM	prescr_mat_hor where nr_sequencia	= nr_seq_horario_w
				AND	dt_fim_horario	= dt_atualizacao_w
				AND	nm_usuario_adm	= nm_usuario_p LIMIT 1;

				IF (coalesce(ie_atualiza_data_conta_w,'N') = 'S') THEN
					UPDATE	material_atend_paciente
					SET		dt_conta 	= dt_evento_p,
							dt_atendimento = dt_evento_p
					WHERE	--cd_material_exec		= cd_material_w
							nr_prescricao			= nr_prescricao_w
--					and		nr_sequencia_prescricao = nr_seq_item_w
					AND		nr_seq_lote_ap			= nr_seq_lote_w;
				END IF;

				IF (var_desdobrar_processo_w = 'S') THEN
					SELECT	MAX(nr_seq_processo)
					INTO STRICT	nr_seq_processo_w
					FROM	Prescr_mat_hor
					WHERE	nr_sequencia	= nr_seq_horario_w
					AND	Obter_se_horario_liberado(dt_lib_horario, dt_horario) = 'S';

					IF (nr_seq_processo_w > 0) THEN
						OPEN C16;
						LOOP
						FETCH C16 INTO
							nr_seq_w;
						EXIT WHEN NOT FOUND; /* apply on C16 */
							nr_processo_desdobrado_w := Adep_Desdobrar_Processo(nr_seq_processo_w, nr_seq_w, NULL, nm_usuario_p, nr_processo_desdobrado_w);
						END LOOP;
						CLOSE C16;
					END IF;
				END IF;
			ELSIF (ie_alteracao_p = 4) THEN -- reversao da realizacao do horario
				select	coalesce(max('S'), 'N')
				into STRICT	ie_pode_reverter_w
				from	prescr_mat_hor
				where	nr_sequencia   = nr_seq_horario_w
				and		nm_usuario_adm = nm_usuario_p;

				if	(ie_pode_reverter_w = 'N' AND ie_param682_w = 'N') then
					CALL Wheb_mensagem_pck.exibir_mensagem_abort(452717);
				end if;

				SELECT	max(nr_seq_processo)
				INTO STRICT	nr_seq_processo_w
				FROM	Prescr_mat_hor
				WHERE	nr_sequencia	= nr_seq_horario_w
				AND		Obter_se_horario_liberado(dt_lib_horario, dt_horario) = 'S';
				
				CALL gerar_prescr_rec_adm(nr_seq_horario_w,nm_usuario_p,'S');
				
				if (nr_seq_processo_w IS NOT NULL AND nr_seq_processo_w::text <> '') then

					select  coalesce(max('S'),'N')
					into STRICT    ie_hor_administrado_w
					from    prescr_mat_hor
					where	nr_sequencia	= nr_seq_horario_w
					and	(dt_fim_horario IS NOT NULL AND dt_fim_horario::text <> '');

					select  max(ie_status_processo)
					into STRICT    ie_status_processo_w
					from    adep_processo
					where   nr_sequencia = nr_seq_processo_w;

					if ((ie_hor_administrado_w = 'S' and ie_status_processo_w = 'A') or  ie_hor_administrado_w <> 'S')  THEN
						CALL Reverter_processo_horario( nr_seq_horario_w,
									nr_seq_processo_w,
									nm_usuario_p);
					end if;

				end if;

                nr_seq_processo_orig_w := nr_seq_processo_w;

                select  max(a.nr_seq_processo)
                into STRICT    nr_seq_processo_w
                from    adep_processo a
                where   a.nr_sequencia = nr_seq_processo_orig_w
                and (SELECT  max(a.nr_seq_processo)
                            from    adep_processo x
                            where   x.nr_sequencia = a.nr_seq_processo
                            and     x.nr_atendimento = a.nr_atendimento
                            and     x.cd_local_estoque = a.cd_local_estoque
                            and     x.ie_status_processo = a.ie_status_processo
                            and     x.nr_atendimento = nr_atendimento_p
                            and     x.dt_horario_processo = dt_horario_w) is not null;

                CALL adep_agrupar_processos(nr_atendimento_p         => nr_atendimento_p,
                                        dt_horario_p            => dt_horario_w,
                                        nr_processo_origem_p    => nr_seq_processo_orig_w,
                                        nr_processo_destino_p   => nr_seq_processo_w,
                                        nr_seq_area_prep_p      => 0,
                                        nm_usuario_p            => nm_usuario_p);

				select	coalesce(max('S'),'N')
				into STRICT	ie_epimed_w
				from	setor_atendimento h,
						prescr_medica a
				where	h.cd_setor_atendimento = a.cd_setor_atendimento
				and		a.nr_prescricao = nr_prescricao_w
				and		coalesce(h.ie_epimed,'N') = 'S'
				and		h.ie_situacao = 'A';

				if (ie_epimed_w = 'S') then
					CALL epimed_envia_aminas_vasoativas(	nr_prescricao_p		=>nr_prescricao_w,
													nr_seq_solucao_p	=>null,
													nr_etapa_p			=>0,
													nr_atendimento_p	=>nr_atendimento_p,
													nr_seq_horario_p	=>nr_seq_horario_w,
													nm_usuario_p		=>nm_usuario_p,
													ie_acao_p			=>'R');
				end if;

				UPDATE	prescr_mat_hor
				SET		dt_fim_horario	 = NULL,
						nm_usuario_adm	 = NULL
				WHERE	nr_sequencia	= nr_seq_horario_w
				AND		(dt_fim_horario IS NOT NULL AND dt_fim_horario::text <> '');

				SELECT	coalesce(MAX('S'),'N')
				INTO STRICT	ie_atualizou_w
				FROM	prescr_mat_hor where 	nr_sequencia	=  nr_seq_horario_w
				AND		coalesce(dt_fim_horario::text, '') = ''
				AND 	coalesce(nm_usuario_adm::text, '') = '' LIMIT 1;

				select  max(nr_prescricao)
				into STRICT	nr_prescricao_ww						
				from	prescr_mat_hor
				where	nr_sequencia	= nr_seq_horario_w;

				--Implementacao MC
				if (ie_atualizou_w = 'S') and (ie_conferir_med_antes_adm_w = 'S') then
					CALL reverter_lote_fornec_adm(nr_seq_horario_w, nr_prescricao_w, nr_seq_item_w, dt_horario_w, nm_usuario_p, 'M');
				end if;

				if	((coalesce(nr_seq_atendimento_w,0) > 0) and (ie_param697_w = 'S')) then
					begin			
						CALL finalizar_adm_adep_quimio('D', nr_seq_atendimento_w, 'T', nr_atendimento_p, dt_atualizacao_w, dt_atualizacao_w, nr_prescricao_ww, nm_usuario_p, cd_estabelecimento_p, nr_seq_horario_p);					
					end;
				end if;
				
				select 	max(dt_alteracao)
				into STRICT	dt_conta_w
				from	prescr_mat_alteracao
				where	nr_seq_horario = nr_seq_horario_w
				and		coalesce(ie_evento_valido,'S') = 'S'
				and		ie_alteracao = 3;

			ELSIF (ie_alteracao_p = 5) THEN -- suspensao do horario           
				ie_suspenso_adep_w := 'N';
				IF (cd_funcao_p	= 1113) THEN
					ie_suspenso_adep_w	:= 'S';
				END IF;
				SELECT	SUBSTR(MAX(obter_desc_material(cd_material)),1,255),
						MAX(nr_prescricao),
						coalesce(qt_adm_p,MAX(qt_dose)),
						coalesce(cd_um_qt_adm_p,MAX(cd_unidade_medida_dose))
				INTO STRICT	ds_item_w,
				        nr_prescricao_ww,
						qt_dose_ww,
						ds_unidade_medida_w
				FROM	prescr_mat_hor
				WHERE	nr_sequencia	= nr_seq_horario_w;

				UPDATE	prescr_mat_hor
				SET	dt_suspensao		= dt_atualizacao_w,
					nm_usuario_susp		= nm_usuario_p,
					nr_seq_motivo_susp	= nr_seq_motivo_susp_p,
					ds_motivo_susp		= SUBSTR(ds_justificativa_w,1,235),
					ie_suspenso_adep	= ie_suspenso_adep_w
				WHERE	nr_sequencia		= nr_seq_horario_w
				AND	coalesce(dt_suspensao::text, '') = ''
				AND	coalesce(dt_fim_horario::text, '') = '';
				
				

				SELECT	coalesce(MAX('S'),'N')
				INTO STRICT	ie_atualizou_w
				FROM	prescr_mat_hor where nr_sequencia			=  nr_seq_horario_w
				AND	dt_suspensao			=  dt_atualizacao_w
				AND	coalesce(ie_suspenso_adep,'N')	=  coalesce(ie_suspenso_adep_w,'N')
				AND	nm_usuario_susp			=  nm_usuario_p LIMIT 1;

				if (ie_atualizou_w = 'S') then
					i	:= coalesce(Vetor_Lista_Gerar_w.Count,0) + 1;
					Vetor_Lista_Gerar_w[i].nr_prescricao  	:= nr_prescricao_w;
					Vetor_Lista_Gerar_w[i].nr_seq_material 	:= nr_seq_item_w;
					Vetor_Lista_Gerar_w[i].nr_seq_horario 	:= nr_seq_horario_w;
				end if;
			ELSIF (ie_alteracao_p = 6) THEN -- reversao da suspensao do horario
				UPDATE	prescr_mat_hor
				SET		dt_suspensao		 = NULL,
						nm_usuario_susp		 = NULL,
						ie_suspenso_adep	 = NULL
				WHERE	nr_sequencia		= nr_seq_horario_w
				AND		(dt_suspensao IS NOT NULL AND dt_suspensao::text <> '');

				SELECT	coalesce(MAX('S'),'N')
				INTO STRICT 	ie_atualizou_w
				FROM 	prescr_mat_hor where nr_sequencia 	 = nr_seq_horario_w
				AND	coalesce(dt_suspensao::text, '') = ''
				AND	coalesce(nm_usuario_susp::text, '') = ''
				AND	coalesce(ie_suspenso_adep::text, '') = '' LIMIT 1;


			END IF;

			IF (ie_atualizou_w = 'S') THEN
				SELECT	nextval('prescr_mat_alteracao_seq')
				INTO STRICT	nr_seq_alteracao_w
				;

				SELECT	coalesce(MAX(nr_seq_lote),0)
				INTO STRICT	nr_seq_lote_w
				FROM	prescr_mat_hor
				WHERE	nr_sequencia = nr_seq_horario_w;

				ds_obs_final_w := SUBSTR(ds_observacao_p,1,2000);

				IF (coalesce(ie_palm_p,'N') = 'S') THEN
					IF (ds_obs_final_w IS NOT NULL AND ds_obs_final_w::text <> '') AND (ds_obs_final_w <> '') THEN
						ds_obs_final_w := substr(wheb_mensagem_pck.get_texto(307615, 'DS_OBSERVACAO_W=' || ds_obs_final_w),1,2000); -- Tipo de checagem: ADEP PDA - #@DS_OBSERVACAO_W#@
					ELSE
						ds_obs_final_w := wheb_mensagem_pck.get_texto(307616); -- Tipo de checagem: ADEP PDA
					END IF;
				END IF;

				INSERT	INTO	prescr_mat_alteracao(nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_prescricao,
					nr_seq_prescricao,
					nr_seq_horario,
					dt_alteracao,
					cd_pessoa_fisica,
					ie_alteracao,
					ds_justificativa,
					ie_tipo_item,
					dt_horario,
					nr_atendimento,
					cd_item,
					qt_dose_adm,
					cd_um_dose_adm,
					qt_dose_original,
					nr_agrupamento,
					ie_acm_sn,
					cd_medico_solic,
					ds_observacao,
					nr_seq_motivo_susp,
					ie_mostra_adep,
					nr_seq_assinatura,
					nr_seq_lote,
					ds_observacao_item,
					cd_funcao
					)
				VALUES (
					nr_seq_alteracao_w,
					dt_atualizacao_w,
					nm_usuario_p,
					dt_atualizacao_w,
					nm_usuario_p,
					nr_prescricao_w,
					nr_seq_item_w,
					nr_seq_horario_w,
					dt_horario_adm_w,
					obter_dados_usuario_opcao(nm_usuario_p,'C'),
					ie_alteracao_p,
					ds_justificativa_w,
					ie_tipo_item_p,
					dt_horario_w,
					nr_atendimento_p,
					cd_item_p,
					coalesce(qt_adm_p,qt_dose_w),
					coalesce(cd_um_qt_adm_p,cd_um_dose_w),
					qt_dose_w,
					nr_agrupamento_p,
					ie_acm_sn_w,
					cd_medico_solic_p,
					ds_obs_final_w,
					nr_seq_motivo_susp_p,
					ie_mostra_adep_w,
					nr_seq_assinatura_p,
					nr_seq_lote_w,
					SUBSTR(ds_observacao_item_p,1,2000),
					cd_funcao_p
					);

				nr_seq_evento_w	:= nr_seq_alteracao_w;	
				
				if (ie_alteracao_p = 3 and
					ie_tipo_item_p = 'M') then
					cd_evolucao_p 		=>	cd_evolucao_p := Gerar_evolPaci_automa(	ie_tipo_item_p 		=>	'M', nm_usuario_p		=>	nm_usuario_p, nr_atendimento_p	=>	nr_atendimento_p, ds_item_p			=>	ds_item_w, nr_seq_horario_p 	=>	nr_seq_horario_w, ie_opcao_p 			=>	'A', ds_hint_p 			=>	obter_expressao_idioma(488570), dt_evento_p 		=>	dt_horario_adm_w, nr_prescricao_p 	=>	nr_prescricao_ww, qt_dose_p 			=>	qt_dose_ww, ds_unid_med_p		=>	ds_unidade_medida_w, ie_via_adm_p 		=>	ie_via_aplicacao_w, cd_evolucao_p 		=>	cd_evolucao_p, ie_palm_p			=>	ie_palm_p);
				elsif (ie_alteracao_p = 5 and
					ie_tipo_item_p = 'M') then
					cd_evolucao_p 		=>	cd_evolucao_p := Gerar_evolPaci_automa(	ie_tipo_item_p 		=>	'M', nm_usuario_p 		=>	nm_usuario_p, nr_atendimento_p	=>	nr_atendimento_p, ds_item_p			=>	ds_item_w, nr_seq_horario_p 	=>	nr_seq_horario_w, ie_opcao_p 			=>	'S', ds_hint_p 			=>	obter_expressao_idioma(488096), dt_evento_p 		=>	clock_timestamp(), nr_prescricao_p 	=>	nr_prescricao_ww, qt_dose_p 			=>	qt_dose_ww, ds_unid_med_p 		=>	ds_unidade_medida_w, ie_via_adm_p 		=>	ie_via_aplicacao_w, cd_evolucao_p 		=>	cd_evolucao_p, ie_palm_p 			=>	ie_palm_p);
				end if;

        /* Check if valid change to send for integration later */

        if (ie_alteracao_p in (3, 5) and ie_tipo_item_p = 'M') then
          nr_seq_integr_alt_w := nr_seq_alteracao_w;
          nr_seq_cpoe_w := obter_nr_sequencia_cpoe(	nr_sequencia_p => nr_seq_item_w,
										nr_prescricao_p => nr_prescricao_w,
										ie_tipo_item_p => ie_tipo_item_p);
        end if;

				SELECT	nextval('prescr_mat_alteracao_comp_seq')
				INTO STRICT	nr_seq_alteracao_comp_w
				;

				INSERT INTO prescr_mat_alteracao_comp(nr_sequencia,
					dt_atualizacao, 
					cd_intervalo, 
					nm_usuario, 
					dt_atualizacao_nrec, 
					nm_usuario_nrec, 
					nr_sequencia_prescr,
					qt_dose,
					nr_seq_motivo_adm,
					cd_evolucao,
					nr_seq_topo_lat,
					ie_via_aplicacao)
				VALUES (
					nr_seq_alteracao_comp_w,
					dt_atualizacao_w,
					cd_intervalo_w,
					nm_usuario_p,
					dt_atualizacao_w,
					nm_usuario_p,
					nr_seq_alteracao_w,
					qt_dose_comp_w,
					nr_seq_motivo_adm_p,
					cd_evolucao_p,
					nr_seq_topo_lat_p,
					coalesce(ie_via_aplic_alt_p, ie_via_aplicacao_p));


				CALL gerar_alter_horario_item_comp(nr_atendimento_p, 'IC', nr_prescricao_w, nr_seq_item_w, nr_agrupamento_w, dt_horario_w, ie_alteracao_p, dt_horario_adm_w, ie_regra_lanc_conta_w, nr_seq_motivo_susp_p, nm_usuario_p);
				CALL gerar_alter_horario_item_dil(nr_atendimento_p, 'DIL', nr_prescricao_w, nr_seq_item_w, nr_agrupamento_w, dt_horario_w, ie_alteracao_p, dt_horario_adm_w, ie_regra_lanc_conta_w, nm_usuario_p);
				CALL gerar_alter_horario_item_kit(nr_atendimento_p, 'KIT', nr_prescricao_w, nr_seq_item_w, dt_horario_w, ie_alteracao_p, dt_horario_adm_w, ie_regra_lanc_conta_w, nm_usuario_p);

				if (ie_alteracao_p in (4, 6)) then
					UPDATE	prescr_mat_alteracao
					SET	ie_evento_valido	= 'N'
					WHERE nr_prescricao = nr_prescricao_w
					AND nr_seq_horario 	= nr_seq_horario_w
					AND ie_alteracao 	= CASE WHEN ie_alteracao_p=4 THEN 3  ELSE 5 END;
				end if;

				IF (ie_alteracao_p = 3) AND (ie_adm_processo_aut_w = 'S') THEN

					SELECT	MAX(nr_seq_processo)
					INTO STRICT	nr_seq_processo_w
					FROM	Prescr_mat_hor
					WHERE	nr_sequencia	= nr_seq_horario_w
					AND	Obter_se_horario_liberado(dt_lib_horario, dt_horario) = 'S';

					IF (nr_seq_processo_w IS NOT NULL AND nr_seq_processo_w::text <> '') THEN

						select	coalesce(max('S'),'N')
						into STRICT	ie_existe_w
						from 	prescr_mat_hor b where		b.nr_seq_processo = nr_seq_processo_w
						and 	coalesce(b.dt_fim_horario::text, '') = ''
						and 	coalesce(b.dt_suspensao::text, '') = '' LIMIT 1;

						IF (ie_existe_w = 'N') THEN
							CALL administrar_processo_adep(cd_estabelecimento_p, nr_seq_processo_w, 'S', nm_usuario_p);
						END IF;
					END IF;
				END IF;

				IF (ie_alteracao_p IN (3,5)) THEN
					CALL definir_setor_exec_adep(nr_atendimento_p,ie_tipo_item_p,nr_prescricao_w,nr_seq_item_w,nr_seq_horario_w,NULL);
				END IF;

				IF (ie_alteracao_p = 3) THEN
					CALL Gerar_proced_assoc_mat_conta(nr_prescricao_w, nr_seq_item_w, NULL, nm_usuario_p, 'G', dt_evento_p);

					IF (coalesce(ie_atualiza_data_conta_w,'N') = 'S') THEN
						UPDATE	material_atend_paciente
						SET		dt_conta 	= dt_evento_p,
								dt_atendimento = dt_evento_p
						WHERE	--cd_material_exec		= cd_material_w
								nr_prescricao			= nr_prescricao_w
--					and		nr_sequencia_prescricao = nr_seq_item_w
						AND		nr_seq_lote_ap			= nr_seq_lote_w;
					END IF;

				ELSIF (ie_alteracao_p = 4) THEN
					CALL Gerar_proced_assoc_mat_conta(nr_prescricao_w, nr_seq_item_w, NULL, nm_usuario_p, 'E', dt_evento_p);
				END IF;

				IF (ie_medic_paciente_w = 'N') and (ie_regra_lanc_conta_w <> 'N') AND (ie_alteracao_p IN (3,4)) THEN

					IF (ie_regra_lanc_conta_w = 'S') OR
						((ie_regra_lanc_conta_w = 'T') AND (coalesce(nr_seq_lote_w,0) = 0)) OR
						((ie_regra_lanc_conta_w = 'L') AND (obter_se_lote_hor_conta_pac(nr_seq_horario_w) = 'S')) THEN

						IF (ie_alteracao_p = 3) THEN

							select	max(nr_seq_processo)
							into STRICT	nr_seq_processo_w
							from	prescr_mat_hor
							where	nr_sequencia = nr_seq_horario_w
							and	nr_seq_material = nr_seq_item_w
							and	nr_prescricao = nr_prescricao_w;

							select 	sum(qt_material)
							into STRICT	qt_conta_w
							from	material_atend_paciente
							where	nr_atendimento = nr_atendimento_p
							and	nr_sequencia_prescricao = nr_seq_item_w
							and	nr_prescricao = nr_prescricao_w
							and	((nr_seq_mat_hor = nr_seq_horario_w) or (nr_seq_processo = nr_seq_processo_w));

							if (coalesce(qt_conta_w,0) = 0) then
								nr_seq_map_w := gerar_estornar_adep_map(NULL, nr_seq_horario_w, NULL, 'G', dt_horario_adm_w, nm_usuario_p, nr_seq_map_w, 'GAP', null, null);
							end if;

						ELSIF (ie_alteracao_p = 4) THEN
							select 	sum(qt_material)
							into STRICT	qt_conta_w
							from	material_atend_paciente
							where	nr_atendimento = nr_atendimento_p
							and	nr_sequencia_prescricao = nr_seq_item_w
							and	nr_prescricao = nr_prescricao_w
							and	((nr_seq_mat_hor = nr_seq_horario_w) or (nr_seq_processo = nr_seq_processo_w));

							if (coalesce(qt_conta_w,0) > 0) then
								nr_seq_map_w := gerar_estornar_adep_map(NULL, nr_seq_horario_w, NULL, 'E', coalesce(dt_conta_w,dt_horario_adm_w), nm_usuario_p, nr_seq_map_w, 'GAP', null, null);
							end if;
						END IF;
					END IF;
				END IF;

				IF (ie_medic_paciente_w = 'S') AND (coalesce(nr_seq_lote_forncedor_p,0) > 0) AND (cd_motivo_Exc_medic_pac_w IS NOT NULL AND cd_motivo_Exc_medic_pac_w::text <> '') AND (ie_alteracao_p IN (3,4)) THEN

					IF (ie_alteracao_p = 3) THEN
						nr_seq_map_w := gerar_estornar_adep_map(NULL, nr_seq_horario_w, NULL, 'G', dt_horario_adm_w, nm_usuario_p, nr_seq_map_w, 'GAP', null, null);
						UPDATE	Material_atend_paciente
						SET	cd_motivo_exc_conta 	= cd_motivo_Exc_medic_pac_w,
							nr_seq_lote_fornec	= nr_seq_lote_forncedor_p
						WHERE	nr_sequencia		= nr_seq_map_w;
					ELSIF (ie_alteracao_p = 4) THEN
						nr_seq_map_w := gerar_estornar_adep_map(NULL, nr_seq_horario_w, NULL, 'E', coalesce(dt_conta_w,dt_horario_adm_w), nm_usuario_p, nr_seq_map_w, 'GAP', null, null);
					END IF;
				END IF;

				IF (ie_alteracao_p = 5) THEN
					IF (ie_alteracao_p = 5) THEN
						CALL gerar_susp_adep_processo_hor(nr_seq_horario_w,'1',nm_usuario_p);

						i	:= coalesce(Vetor_Lista_Gerar_w.Count,0) + 1;
						Vetor_Lista_Gerar_w[i].nr_prescricao  	:= nr_prescricao_w;
						Vetor_Lista_Gerar_w[i].nr_seq_material 	:= nr_seq_item_w;
						Vetor_Lista_Gerar_w[i].nr_seq_horario 	:= nr_seq_horario_w;						
					ELSE
						CALL gerar_susp_adep_processo_hor(nr_seq_horario_w,'2',nm_usuario_p);
					END IF;
				END IF;
			END IF;
			END;
		END LOOP;
		CLOSE cCursor;

	ELSIF (ie_tipo_item_p = 'B') THEN

		OPEN c10;
		LOOP
		FETCH c10 INTO
			nr_prescricao_w,
			nr_seq_item_w,
			nr_seq_horario_w,
			nr_seq_material_w,
			nr_seq_solucao_w,
			ie_suspensao_w;
		EXIT WHEN NOT FOUND; /* apply on c10 */
		
			ie_abriu_cursor_w	:= true;

			IF (ie_alteracao_p = 3) THEN -- administracao do horario
				UPDATE	prescr_ordem_hor
				SET	dt_fim_horario	= dt_atualizacao_w,
					nm_usuario_fim	= nm_usuario_p
				WHERE	nr_sequencia	= nr_seq_horario_w
				AND	coalesce(dt_fim_horario::text, '') = ''
				AND	coalesce(dt_suspensao::text, '') = ''
				and	ie_horario_especial = 'N';
			ELSIF (ie_alteracao_p = 4) THEN -- reversao da realizacao do horario
				select	coalesce(max('S'), 'N')
				into STRICT	ie_pode_reverter_w
				from	prescr_mat_hor
				where	nr_sequencia   = nr_seq_horario_w
				and		nm_usuario_adm = nm_usuario_p;

				if	(ie_pode_reverter_w = 'N' AND ie_param682_w = 'N') then
					CALL Wheb_mensagem_pck.exibir_mensagem_abort(452717);
				end if;			

				UPDATE	prescr_ordem_hor
				SET	dt_fim_horario	 = NULL,
					nm_usuario_fim	 = NULL
				WHERE	nr_sequencia	= nr_seq_horario_w
				AND	(dt_fim_horario IS NOT NULL AND dt_fim_horario::text <> '')
				and	ie_horario_especial = 'N';
			ELSIF (ie_alteracao_p = 5) THEN -- suspensao do horario
				UPDATE	prescr_ordem_hor
				SET	dt_suspensao		= dt_atualizacao_w,
					nm_usuario_susp		= nm_usuario_p
				WHERE	nr_sequencia		= nr_seq_horario_w
				AND	coalesce(dt_suspensao::text, '') = ''
				AND	coalesce(dt_fim_horario::text, '') = ''
				and	ie_horario_especial = 'N';

				i	:= coalesce(Vetor_Lista_Gerar_w.Count,0) + 1;
				Vetor_Lista_Gerar_w[i].nr_prescricao  	:= nr_prescricao_w;
				Vetor_Lista_Gerar_w[i].nr_seq_material 	:= nr_seq_item_w;
				Vetor_Lista_Gerar_w[i].nr_seq_horario 	:= nr_seq_horario_w;				
			ELSIF (ie_alteracao_p = 6) THEN -- reversao da suspensao do horario
				UPDATE	prescr_ordem_hor
				SET	dt_suspensao		 = NULL,
					nm_usuario_susp		 = NULL
				WHERE	nr_sequencia		= nr_seq_horario_w
				AND	(dt_suspensao IS NOT NULL AND dt_suspensao::text <> '')
				and	ie_horario_especial = 'N';
			END IF;

			GET DIAGNOSTICS ora2pg_rowcount = ROW_COUNT;


			IF ( ora2pg_rowcount > 0) THEN
				IF (ie_alteracao_p IN (3,5)) THEN
					SELECT	MAX(nr_sequencia),
						coalesce(MAX(nr_seq_lote),0)
					INTO STRICT	nr_seq_hor_w,
						nr_seq_lote_w
					FROM	prescr_mat_hor
					WHERE	nr_prescricao	= nr_prescricao_w
					AND	nr_seq_material	= nr_seq_material_w
					AND	Obter_se_horario_liberado(dt_lib_horario, dt_horario) = 'S';

					IF (coalesce(nr_seq_solucao_w,0) > 0) THEN
						SELECT	nextval('prescr_solucao_evento_seq')
						INTO STRICT	nr_sequencia_w
						;

						INSERT INTO prescr_solucao_evento(nr_sequencia,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							nr_prescricao,
							nr_seq_solucao,
							cd_pessoa_fisica,
							ie_alteracao,
							dt_alteracao,
							ie_evento_valido,
							nr_seq_motivo,
							ds_observacao,
							ie_tipo_solucao,
							nr_seq_lote,
							ds_justificativa,
							cd_funcao)
						VALUES (nr_sequencia_w,
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							nr_prescricao_w,
							nr_seq_solucao_w,
							obter_dados_usuario_opcao(nm_usuario_p, 'C'),
							CASE WHEN ie_alteracao_p=3 THEN 20  ELSE 21 END ,
							clock_timestamp(),
							'S',
							nr_seq_motivo_susp_p,
							NULL,
							1,
							nr_seq_lote_w,
							ds_justificativa_w,
							cd_funcao_p);

						nr_seq_evento_w	:= nr_sequencia_w;	

						IF (ie_suspensao_w = 'S') THEN
							SELECT	MAX(SUBSTR(obter_status_solucao_prescr(1,x.nr_prescricao,x.nr_seq_solucao),1,3))
							INTO STRICT	ie_status_sol_w
							FROM	prescr_solucao x
							WHERE	x.nr_prescricao	 = nr_prescricao_w
							AND 	x.nr_seq_solucao = nr_seq_solucao_w;

							IF (ie_status_sol_w <> 'S') THEN
								UPDATE	prescr_solucao
								SET	ie_suspenso	= 'S',
									nm_usuario	= nm_usuario_p,
									dt_atualizacao	= clock_timestamp(),
									dt_suspensao	= clock_timestamp(),
									nm_usuario_susp	= nm_usuario_p
								WHERE	nr_prescricao	= nr_prescricao_w
								AND	nr_seq_solucao	= nr_seq_solucao_w;

								UPDATE	prescr_material
								SET	ie_suspenso	= 'S',
									nm_usuario	= nm_usuario_p,
									dt_atualizacao	= clock_timestamp(),
									dt_suspensao	= clock_timestamp(),
									nm_usuario_susp	= nm_usuario_p
								WHERE	nr_prescricao	= nr_prescricao_w
								AND	nr_sequencia_solucao = nr_seq_solucao_w;

								CALL gerar_alter_sol_prescr_adep(1, nr_prescricao_w, nr_seq_solucao_w, 10, NULL, nm_usuario_p, NULL);
							END IF;
						END IF;


					ELSIF (coalesce(nr_seq_hor_w,0) > 0) THEN

						SELECT	MAX(dt_horario),
							MAX(cd_material)
						INTO STRICT	dt_horario_w,
							cd_item_w
						FROM	prescr_mat_hor
						WHERE	nr_sequencia	= nr_seq_hor_w
						AND	Obter_se_horario_liberado(dt_lib_horario, dt_horario) = 'S';

						SELECT	nextval('prescr_mat_alteracao_seq')
						INTO STRICT	nr_seq_alteracao_w
						;

						ds_obs_final_w := SUBSTR(ds_observacao_p,1,2000);

						IF (coalesce(ie_palm_p,'N') = 'S') THEN
							IF (ds_obs_final_w IS NOT NULL AND ds_obs_final_w::text <> '') AND (ds_obs_final_w <> '') THEN
								ds_obs_final_w := substr(wheb_mensagem_pck.get_texto(307615, 'DS_OBSERVACAO_W=' || ds_obs_final_w),1,2000); -- Tipo de checagem: ADEP PDA - #@DS_OBSERVACAO_W#@
							ELSE
								ds_obs_final_w := wheb_mensagem_pck.get_texto(307616); -- Tipo de checagem: ADEP PDA
							END IF;
						END IF;

						INSERT INTO prescr_mat_alteracao(nr_sequencia,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							nr_prescricao,
							nr_seq_prescricao,
							nr_seq_horario,
							dt_alteracao,
							cd_pessoa_fisica,
							ie_alteracao,
							ds_justificativa,
							ds_observacao,
							ie_tipo_item,
							dt_horario,
							nr_atendimento,
							cd_item,
							cd_medico_solic,
							ie_mostra_adep,
							nr_seq_assinatura,
							nr_seq_lote,
							cd_funcao)
						VALUES (nr_seq_alteracao_w,
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							nr_prescricao_w,
							nr_seq_material_w,
							nr_seq_hor_w,
							clock_timestamp(),
							obter_dados_usuario_opcao(nm_usuario_p,'C'),
							CASE WHEN ie_alteracao_p=3 THEN 22  ELSE 23 END ,
							NULL,
							ds_obs_final_w,
							'M',
							dt_horario_w,
							nr_atendimento_p,
							cd_item_w,
							cd_medico_solic_p,
							ie_mostra_adep_w,
							nr_seq_assinatura_p,
							nr_seq_lote_w,
							cd_funcao_p);

						nr_seq_evento_w	:= nr_seq_alteracao_w;						

					END IF;
				END IF;
			END IF;

		END LOOP;
		CLOSE c10;

	ELSIF (ie_tipo_item_p = 'IA') THEN

		OPEN c09;
		LOOP
		FETCH c09 INTO	nr_prescricao_w,
				nr_seq_item_w,
				nr_agrupamento_w,
				cd_um_dose_w,
				qt_dose_w,
				nr_seq_horario_w,
				cd_material_w,
				ds_item_w
                , nr_seq_item_cpoe_w;
		EXIT WHEN NOT FOUND; /* apply on c09 */
			BEGIN

			ie_abriu_cursor_w	:= true;

			IF (ie_alteracao_p = 3) THEN -- administracao do horario
				ie_consist_dose_adm_w := coalesce(obter_valor_param_usuario(1113,62, cd_perfil_p, nm_usuario_p, obter_estab_atend(nr_atendimento_p)), 'N');

				IF (ie_consist_dose_adm_w IN ('JD','DM')) AND (qt_adm_p IS NOT NULL AND qt_adm_p::text <> '') THEN
					IF (ie_consist_dose_adm_w = 'JD') AND
						((qt_adm_p <> qt_dose_w) OR (cd_um_qt_adm_p <> cd_um_dose_w)) AND (coalesce(ds_justificativa_w::text, '') = '') THEN
						--A justificativa e obrigatoria quando a dose administrada e diferente da dose prescrita. Parametro [62]
						CALL Wheb_mensagem_pck.Exibir_mensagem_abort(173407);
					ELSIF (ie_consist_dose_adm_w = 'DM') AND
						((qt_adm_p > qt_dose_w AND qt_adm_p > qt_solucao_w) OR (cd_um_qt_adm_p > cd_um_dose_w)) THEN
						----Nao e possivel administrar uma dose maior que a sua dispensacao.
						CALL Wheb_mensagem_pck.Exibir_mensagem_abort(123053);
					END IF;
				END IF;

				cd_evolucao_p := Gerar_evolPaci_automa('AP', nm_usuario_p, nr_atendimento_p, ds_item_w, nr_seq_horario_w, 'A', obter_expressao_idioma(488570), clock_timestamp(), nr_prescricao_ww, qt_dose_w, ds_unidade_medida_w, null, cd_evolucao_p, ie_palm_p);

				UPDATE	prescr_mat_hor
				SET	dt_fim_horario	= dt_atualizacao_w,
					nm_usuario_adm	= nm_usuario_p
				WHERE	nr_sequencia		= nr_seq_horario_w
				AND	coalesce(dt_fim_horario::text, '') = ''
				AND	coalesce(dt_suspensao::text, '') = '';

			ELSIF (ie_alteracao_p = 4) THEN -- reversao da realizacao do horario
				select	coalesce(max('S'), 'N')
				into STRICT	ie_pode_reverter_w
				from	prescr_mat_hor
				where	nr_sequencia   = nr_seq_horario_w
				and		nm_usuario_adm = nm_usuario_p;

				if	(ie_pode_reverter_w = 'N' AND ie_param682_w = 'N') then
					CALL Wheb_mensagem_pck.exibir_mensagem_abort(452717);
				end if;

				UPDATE	prescr_mat_hor
				SET	dt_fim_horario	 = NULL,
					nm_usuario_adm	 = NULL
				WHERE	nr_sequencia		= nr_seq_horario_w
				AND	(dt_fim_horario IS NOT NULL AND dt_fim_horario::text <> '');
				
                select  max(a.dt_alteracao)
                into STRICT    dt_conta_w
                from    prescr_mat_alteracao a
                where   a.nr_seq_horario = nr_seq_horario_w
                and     coalesce(a.ie_evento_valido,'S') = 'S'
                and     a.ie_alteracao = 3;

                select  max(a.nr_seq_processo)
                into STRICT    nr_seq_processo_w
                from    prescr_mat_hor a,
                        adep_processo b
                where   a.nr_seq_processo = b.nr_sequencia
                and     a.nr_sequencia = nr_seq_horario_w
                and     Obter_se_horario_liberado(a.dt_lib_horario, a.dt_horario) = 'S';

                if (nr_seq_processo_w IS NOT NULL AND nr_seq_processo_w::text <> '') then
                    CALL Reverter_processo_horario(nr_seq_horario_p    => nr_seq_horario_w,
                                              nr_seq_processo_p   => nr_seq_processo_w,
                                              nm_usuario_p        => nm_usuario_p);
                end if;

                select  max(a.nr_seq_processo),
                        max(b.nr_atendimento),
                        max(b.cd_local_estoque),
                        max(b.ie_status_processo)
                into STRICT    nr_seq_processo_w,
                        nr_atendimento_w,
                        cd_local_estoque_w,
                        ie_status_processo_w
                from    prescr_mat_hor a,
                        adep_processo b
                where   a.nr_seq_processo = b.nr_sequencia
                and     a.nr_sequencia = nr_seq_horario_w
                and     Obter_se_horario_liberado(a.dt_lib_horario, a.dt_horario) = 'S';

                nr_seq_processo_orig_w := nr_seq_processo_w;

                select  max(a.nr_sequencia)
                into STRICT    nr_seq_processo_w
                from    adep_processo a
                where   a.nr_atendimento = nr_atendimento_w
                and     a.cd_local_estoque = cd_local_estoque_w
                and     a.ie_status_processo = ie_status_processo_w
                and     a.dt_horario_processo = dt_horario_w
                and     a.nr_prescricao = nr_prescricao_w
                and     a.nr_sequencia <> nr_seq_processo_orig_w;

                if (nr_seq_processo_orig_w <> nr_seq_processo_w) then
                    CALL adep_agrupar_processos(nr_atendimento_p         => nr_atendimento_p,
                                            dt_horario_p            => dt_horario_w,
                                            nr_processo_origem_p    => nr_seq_processo_orig_w,
                                            nr_processo_destino_p   => nr_seq_processo_w,
                                            nr_seq_area_prep_p      => 0,
                                            nm_usuario_p            => nm_usuario_p);
                end if;
			ELSIF (ie_alteracao_p = 5) THEN -- suspensao do horario
				UPDATE	prescr_mat_hor
				SET	dt_suspensao		= dt_atualizacao_w,
					nm_usuario_susp		= nm_usuario_p
				WHERE	nr_sequencia		= nr_seq_horario_w
				AND	coalesce(dt_suspensao::text, '') = ''
				AND	coalesce(dt_fim_horario::text, '') = '';

				i	:= coalesce(Vetor_Lista_Gerar_w.Count,0) + 1;
				Vetor_Lista_Gerar_w[i].nr_prescricao  	:= nr_prescricao_w;
				Vetor_Lista_Gerar_w[i].nr_seq_material 	:= nr_seq_item_w;
				Vetor_Lista_Gerar_w[i].nr_seq_horario 	:= nr_seq_horario_w;

        cd_evolucao_p 		=>	cd_evolucao_p := Gerar_evolPaci_automa(	ie_tipo_item_p 		=>	'AP', nm_usuario_p 		=>	nm_usuario_p, nr_atendimento_p	=>	nr_atendimento_p, ds_item_p			=>	ds_item_w, nr_seq_horario_p 	=>	nr_seq_horario_w, ie_opcao_p 			=>	'S', ds_hint_p 			=>	obter_expressao_idioma(488096), dt_evento_p 		=>	clock_timestamp(), nr_prescricao_p 	=>	nr_prescricao_ww, qt_dose_p 			=>	qt_dose_ww, ds_unid_med_p 		=>	ds_unidade_medida_w, ie_via_adm_p 		=>	ie_via_aplicacao_w, cd_evolucao_p 		=>	cd_evolucao_p, ie_palm_p 			=>	ie_palm_p);

			ELSIF (ie_alteracao_p = 6) THEN -- reversao da suspensao do horario
				UPDATE	prescr_mat_hor
				SET	dt_suspensao		 = NULL,
					nm_usuario_susp		 = NULL
				WHERE	nr_sequencia		= nr_seq_horario_w
				AND	(dt_suspensao IS NOT NULL AND dt_suspensao::text <> '');
			END IF;

			GET DIAGNOSTICS ora2pg_rowcount = ROW_COUNT;


			if ( ora2pg_rowcount > 0) then
				SELECT	nextval('prescr_mat_alteracao_seq')
				INTO STRICT	nr_seq_alteracao_w
				;

				ds_obs_final_w := SUBSTR(ds_observacao_p,1,2000);

				IF (coalesce(ie_palm_p,'N') = 'S') THEN
					IF (ds_obs_final_w IS NOT NULL AND ds_obs_final_w::text <> '') AND (ds_obs_final_w <> '') THEN
						ds_obs_final_w := substr(wheb_mensagem_pck.get_texto(307615, 'DS_OBSERVACAO_W=' || ds_obs_final_w),1,2000); -- Tipo de checagem: ADEP PDA - #@DS_OBSERVACAO_W#@
					ELSE
						ds_obs_final_w := wheb_mensagem_pck.get_texto(307616); -- Tipo de checagem: ADEP PDA
					END IF;
				END IF;

				INSERT	INTO	prescr_mat_alteracao(
									nr_sequencia,
									dt_atualizacao,
									nm_usuario,
									dt_atualizacao_nrec,
									nm_usuario_nrec,
									nr_prescricao,
									nr_seq_prescricao,
									nr_seq_horario,
									dt_alteracao,
									cd_pessoa_fisica,
									ie_alteracao,
									ds_justificativa,
									ds_observacao,
									ie_tipo_item,
									dt_horario,
									nr_atendimento,
									cd_item,
									qt_dose_adm,
									cd_um_dose_adm,
									qt_dose_original,
									cd_medico_solic,
									ie_mostra_adep,
									nr_seq_assinatura,
									nr_seq_lote,
									cd_funcao
									)
								VALUES (
									nr_seq_alteracao_w,
									dt_atualizacao_w,
									nm_usuario_p,
									dt_atualizacao_w,
									nm_usuario_p,
									nr_prescricao_w,
									nr_seq_item_w,
									nr_seq_horario_w,
									dt_horario_adm_w,
									obter_dados_usuario_opcao(nm_usuario_p,'C'),
									ie_alteracao_p,
									ds_justificativa_w,
									ds_obs_final_w,
									ie_tipo_item_p,
									dt_horario_w,
									nr_atendimento_p,
									CASE WHEN ie_palm_p='S' THEN  cd_material_w  ELSE cd_item_p END ,
									coalesce(qt_adm_p,qt_dose_w),
									coalesce(cd_um_qt_adm_p,cd_um_dose_w),
									qt_dose_w,
									cd_medico_solic_p,
									ie_mostra_adep_w,
									nr_seq_assinatura_p,
									nr_seq_lote_w,
									cd_funcao_p
									);

								nr_seq_evento_w	:= nr_seq_alteracao_w;	

				--gerar_alter_horario_item_comp(nr_atendimento_p, 'IC', nr_prescricao_w, nr_seq_item_w, nr_agrupamento_w, dt_horario_w, ie_alteracao_p, dt_horario_adm_w, ie_regra_lanc_conta_w, nm_usuario_p);
				--gerar_alter_horario_item_dil(nr_atendimento_p, 'DIL', nr_prescricao_w, nr_seq_item_w, nr_agrupamento_w, dt_horario_w, ie_alteracao_p, dt_horario_adm_w, ie_regra_lanc_conta_w, nm_usuario_p);
				--gerar_alter_horario_item_kit(nr_atendimento_p, 'KIT', nr_prescricao_w, nr_seq_item_w, dt_horario_w, ie_alteracao_p, dt_horario_adm_w, ie_regra_lanc_conta_w, nm_usuario_p);
				IF (ie_alteracao_p IN (3,5)) THEN
					CALL definir_setor_exec_adep(nr_atendimento_p,ie_tipo_item_p,nr_prescricao_w,nr_seq_item_w,nr_seq_horario_w,NULL);
				END IF;

				IF (ie_regra_lanc_conta_w <> 'N') AND (ie_alteracao_p IN (3,4)) THEN

					IF (ie_regra_lanc_conta_w = 'S') THEN

						IF (ie_alteracao_p = 3) THEN
							nr_seq_map_w := gerar_estornar_adep_map(NULL, nr_seq_horario_w, NULL, 'G', dt_horario_adm_w, nm_usuario_p, nr_seq_map_w, 'GAP', qt_adm_p, null);
						ELSIF (ie_alteracao_p = 4) THEN
							nr_seq_map_w := gerar_estornar_adep_map(NULL, nr_seq_horario_w, NULL, 'E', coalesce(dt_conta_w,dt_horario_adm_w), nm_usuario_p, nr_seq_map_w, 'GAP', qt_adm_p, null);
						END IF;

					ELSIF (ie_regra_lanc_conta_w = 'L') AND (obter_se_lote_hor_conta_pac(nr_seq_horario_w) = 'S') THEN

						IF (ie_alteracao_p = 3) THEN
							nr_seq_map_w := gerar_estornar_adep_map(NULL, nr_seq_horario_w, NULL, 'G', dt_horario_adm_w, nm_usuario_p, nr_seq_map_w, 'GAP', qt_adm_p, null);
						ELSIF (ie_alteracao_p = 4) THEN
							nr_seq_map_w := gerar_estornar_adep_map(NULL, nr_seq_horario_w, NULL, 'E', coalesce(dt_conta_w,dt_horario_adm_w), nm_usuario_p, nr_seq_map_w, 'GAP', qt_adm_p, null);
						END IF;
					ELSIF (ie_regra_lanc_conta_w = 'T') AND (coalesce(nr_seq_lote_w, 0) = 0) THEN
						IF (ie_alteracao_p = 3) THEN
							nr_seq_map_w := gerar_estornar_adep_map(NULL, nr_seq_horario_w, NULL, 'G', dt_horario_adm_w, nm_usuario_p, nr_seq_map_w, 'GAP', qt_adm_p, null);
						ELSIF (ie_alteracao_p = 4) THEN
							nr_seq_map_w := gerar_estornar_adep_map(NULL, nr_seq_horario_w, NULL, 'E', coalesce(dt_conta_w,dt_horario_adm_w), nm_usuario_p, nr_seq_map_w, 'GAP', qt_adm_p, null);
						END IF;

					END IF;

				END IF;

				IF (ie_alteracao_p IN (5,6)) THEN
					IF (ie_alteracao_p = 5) THEN
						CALL gerar_susp_adep_processo_hor(nr_seq_horario_w,'1',nm_usuario_p);

						i	:= coalesce(Vetor_Lista_Gerar_w.Count,0) + 1;
						Vetor_Lista_Gerar_w[i].nr_prescricao  	:= nr_prescricao_w;
						Vetor_Lista_Gerar_w[i].nr_seq_material 	:= nr_seq_item_w;
						Vetor_Lista_Gerar_w[i].nr_seq_horario 	:= nr_seq_horario_w;
					ELSE
						CALL gerar_susp_adep_processo_hor(nr_seq_horario_w,'2',nm_usuario_p);
					END IF;
				END IF;
			END IF;
			END;
		END LOOP;
		CLOSE c09;

	ELSIF (ie_tipo_item_p = 'SOL') THEN

		OPEN c18;
		LOOP
		FETCH c18 INTO	nr_prescricao_w,
				nr_seq_item_w,
				nr_agrupamento_w,
				cd_um_dose_w,
				qt_dose_w,
				nr_seq_horario_w,
				ie_acm_w,
				ie_sn_w,
				cd_motivo_baixa_w,
				qt_solucao_w,
				ie_bomba_infusao_w,
				nr_seq_lote_w,
				cd_funcao_origem_w,
				dt_horario_w;
		EXIT WHEN NOT FOUND; /* apply on c18 */
			BEGIN

			IF (ie_acm_w = 'S') OR (ie_sn_w = 'S') THEN
				ie_acm_sn_w := 'S';
			ELSE
				ie_acm_sn_w := 'N';
			END IF;
			
			ie_abriu_cursor_w	:= true;

			IF	((coalesce(cd_motivo_baixa_w,0) = 0) or (ie_somente_com_baixa_w <> 'N')) AND (ie_alteracao_p = 3) THEN
				ie_impedir_w	:= Obter_Se_impede_adm(cd_item_p);
				IF (ie_impedir_w = 'S') THEN
					IF (ie_somente_com_baixa_w = 'S')  AND (coalesce(cd_motivo_baixa_w, 0) = 0) THEN
						--So e possivel administrar uma medicacao apos o atendimento da mesma no atendimento da prescricao/lote! Parametro [357]
						CALL Wheb_mensagem_pck.Exibir_mensagem_abort(173406);
					ELSIF (ie_somente_com_baixa_w = 'L') AND (nr_seq_lote_w IS NOT NULL AND nr_seq_lote_w::text <> '') THEN
						SELECT	MAX(dt_atend_farmacia)
						INTO STRICT	dt_atend_lote_w
						FROM	ap_lote
						WHERE	nr_sequencia = nr_seq_lote_w;
						IF (coalesce(dt_atend_lote_w::text, '') = '') THEN
							--So e possivel administrar uma medicacao apos o atendimento da mesma no atendimento da prescricao/lote! Parametro [357]
							CALL Wheb_mensagem_pck.Exibir_mensagem_abort(173406);
						END IF;
					ELSIF (ie_somente_com_baixa_w = 'E') AND (nr_seq_lote_w IS NOT NULL AND nr_seq_lote_w::text <> '') THEN
						SELECT	MAX(dt_entrega_setor)
						INTO STRICT	dt_entrega_setor_w
						FROM	ap_lote
						WHERE	nr_sequencia = nr_seq_lote_w;
						IF (coalesce(dt_entrega_setor_w::text, '') = '') THEN
							--So e possivel administrar uma medicacao apos a entrega da mesma no atendimento da prescricao/lote! Parametro [357]
							CALL Wheb_mensagem_pck.Exibir_mensagem_abort(472055);
						END IF;
					ELSIF (ie_somente_com_baixa_w = 'R') AND (nr_seq_lote_w IS NOT NULL AND nr_seq_lote_w::text <> '') THEN
						SELECT	MAX(dt_recebimento_setor)
						INTO STRICT	dt_recebimento_setor_w
						FROM	ap_lote
						WHERE	nr_sequencia = nr_seq_lote_w;
						IF (coalesce(dt_recebimento_setor_w::text, '') = '') THEN
							--Somente e possivel administrar uma medicacao, apos o recebimento da mesma no atendimento da prescricao/lote!
							CALL Wheb_mensagem_pck.Exibir_mensagem_abort(819419);
						END IF;
					END IF;
				END IF;
			END IF;

			ie_atualizou_w := 'N';
			IF (ie_alteracao_p = 3) THEN -- administracao do horario
				ie_consist_dose_adm_w := coalesce(obter_valor_param_usuario(1113,62, cd_perfil_p, nm_usuario_p, obter_estab_atend(nr_atendimento_p)), 'N');

				IF (ie_consist_dose_adm_w IN ('JD','DM','I')) AND (qt_adm_p IS NOT NULL AND qt_adm_p::text <> '') THEN
					IF (ie_consist_dose_adm_w = 'JD') AND
						((qt_adm_p <> qt_dose_w AND qt_adm_p <> qt_solucao_w) OR (cd_um_qt_adm_p <> cd_um_dose_w)) AND (coalesce(ds_justificativa_w::text, '') = '') THEN
						--A justificativa e obrigatoria quando a dose administrada e diferente da dose prescrita. Parametro [62].
						CALL Wheb_mensagem_pck.Exibir_mensagem_abort(173407);
					ELSIF (ie_consist_dose_adm_w = 'I') AND
						((qt_adm_p <> qt_dose_w AND qt_adm_p <> qt_solucao_w) OR (cd_um_qt_adm_p <> cd_um_dose_w)) THEN
						--Nao e permitida a administracao quando a dose administrada e diferente da dose prescrita. Parametro [62].
						CALL Wheb_mensagem_pck.Exibir_mensagem_abort(173408);
					ELSIF (ie_consist_dose_adm_w = 'DM') AND
						((qt_adm_p > qt_dose_w AND qt_adm_p > qt_solucao_w) OR (cd_um_qt_adm_p > cd_um_dose_w)) THEN
						--Nao e possivel administrar uma dose maior que a sua dispensacao.
						CALL Wheb_mensagem_pck.Exibir_mensagem_abort(123053);
					END IF;
				END IF;	

				IF (ie_consist_hr_estabilid_w = 'S') THEN
					SELECT	MIN(dt_horario) + coalesce(MAX(dividir(b.qt_horas_estabilidade,24)),0)
					INTO STRICT	dt_estalidade_max_w
					FROM	prescr_mat_hor c,
						prescr_material b
					WHERE	c.nr_prescricao 	= b.nr_prescricao
					AND	c.nr_seq_material 	= b.nr_sequencia
					AND	b.nr_prescricao 	= nr_prescricao_w
					AND	b.nr_sequencia		= nr_seq_item_w;

					IF (dt_estalidade_max_w < clock_timestamp()) THEN
						--Nao e possivel administrar este horario, pois a data de estabilidade ja terminou. Parametro[359]!
						CALL Wheb_mensagem_pck.Exibir_mensagem_abort(173411);
					END IF;
				END IF;

				select	substr(max(obter_desc_material(cd_material)),1,255),
						max(nr_prescricao),
						max(qt_dose),
						max(cd_unidade_medida),
						max(nr_etapa_sol)
				into STRICT	ds_item_w,
						nr_prescricao_ww,
						qt_dose_w,
						ds_unidade_medida_w,
						nr_seq_etapa_w
				from	prescr_mat_hor
				where	nr_sequencia	= nr_seq_horario_w;


				IF (ie_bomba_infusao_w IS NOT NULL AND ie_bomba_infusao_w::text <> '') THEN
					CALL Gerar_itens_assoc_dispositivo(ie_bomba_infusao_w, nr_prescricao_w, cd_perfil_p, cd_estabelecimento_p, nr_seq_item_w, NULL, nm_usuario_p, nr_seq_horario_p);
				END IF;

				update	prescr_mat_hor
				set		dt_inicio_horario	= dt_atualizacao_w,
						nm_usuario_inicio	= nm_usuario_p
				where	nr_sequencia	= nr_seq_horario_w
				and		coalesce(dt_inicio_horario::text, '') = ''
				and		coalesce(dt_suspensao::text, '') = '';

				--OS 1174964 - Quando administra pela Checagem beira leito o sistema nao deve terminar a solucao
				if (cd_funcao_p <> 1110) then 					
					update	prescr_solucao
					set		ie_status 		= 'T',
							dt_status = clock_timestamp()
					where	nr_prescricao 	= nr_prescricao_ww
					and		nr_seq_solucao 	= nr_seq_item_w;
				end if;

				select	max(nr_seq_mat_cpoe)
				into STRICT	nr_seq_item_cpoe_w
				from	prescr_material
				where	nr_prescricao = nr_prescricao_w
				and		nr_sequencia_solucao = nr_seq_item_w
				and		(nr_seq_mat_cpoe IS NOT NULL AND nr_seq_mat_cpoe::text <> '');

				if	((coalesce(nr_seq_item_cpoe_w,0) > 0) and
					((cd_funcao_origem_w = 2314) or (cd_funcao_origem_w = 281)))then

					dt_fim_w :=	dt_horario_adm_w;

					if (dt_fim_w < dt_horario_w) then	
						dt_fim_w :=	dt_horario_w;
					end if;

					if (ie_param8_cpoe_w = 'A' and cd_funcao_origem_w = 2314) then
						update	cpoe_material
						set 	dt_fim =  trunc(dt_fim_w + 1/24,'hh24') - 1/1440,
								nm_usuario = nm_usuario_p,
								dt_atualizacao = clock_timestamp()
						where	nr_sequencia = nr_seq_item_cpoe_w
						and 	coalesce(ie_evento_unico,'N') = 'S'
						and		ie_administracao = 'P';
					end if;	

					ie_param1562_cpoe_w := obter_param_usuario(281, 1562, obter_perfil_ativo, nm_usuario_p, coalesce(wheb_usuario_pck.get_cd_estabelecimento, 1), ie_param1562_cpoe_w);

					if (ie_param1562_cpoe_w = 'A' and cd_funcao_origem_w = 281)	then				

						select	coalesce(max(a.ie_oncologia), 'N')
						into STRICT 	ie_oncologia_w
						from 	cpoe_material a
						where 	a.nr_sequencia = nr_seq_item_cpoe_w;

						if (ie_oncologia_w = 'S') then

							select max(a.dt_horario) 
							into STRICT dt_horario_mat_hor_onc_w
							from prescr_mat_hor a
							where a.nr_prescricao = nr_prescricao_p
							and 	a.nr_seq_material = nr_seq_item_w
							and 	coalesce(a.dt_suspensao::text, '') = ''
							and 	coalesce(a.ie_horario_especial,'N') = 'N'
							and		coalesce(a.ie_situacao,'A') = 'A';

							if (dt_horario_w = dt_horario_mat_hor_onc_w) then
								atualiza_data_fim_cpoe_mat(trunc(dt_fim_w + 1/24,'hh24') - 1/1440, nr_seq_item_cpoe_w);
							end if;

						end if;

					end if;

				end if;	
				select	coalesce(max('S'),'N')
				into STRICT	ie_atualizou_w
				from	prescr_mat_hor where 	nr_sequencia	= nr_seq_horario_w
				and		dt_inicio_horario	= dt_atualizacao_w
				and		nm_usuario_inicio	= nm_usuario_p LIMIT 1;

			ELSIF (ie_alteracao_p = 5) THEN -- suspensao do horario
				ie_suspenso_adep_w := 'N';
				IF (cd_funcao_p	= 1113) THEN
					ie_suspenso_adep_w	:= 'S';
				END IF;
				SELECT	SUBSTR(MAX(obter_desc_material(cd_material)),1,255),
						MAX(nr_prescricao),
						MAX(qt_dose),
						MAX(cd_unidade_medida)
				INTO STRICT	ds_item_w,
				        nr_prescricao_ww,
						qt_dose_w,
						ds_unidade_medida_w
				FROM	prescr_mat_hor
				WHERE	nr_sequencia	= nr_seq_horario_w;

				select	coalesce(max('S'),'N')
				into STRICT	ie_existe_w
				from	adep_motivo_interrupcao
				where	nr_sequencia = nr_seq_motivo_susp_p;

				if (ie_existe_w = 'N') then
					begin
					UPDATE	prescr_mat_hor
					SET	dt_suspensao		= dt_atualizacao_w,
						nm_usuario_susp		= nm_usuario_p,
						nr_seq_motivo_susp	= nr_seq_motivo_susp_p,
						ds_motivo_susp		= SUBSTR(ds_justificativa_w,1,235),
						ie_suspenso_adep	= ie_suspenso_adep_w
					WHERE	nr_sequencia		= nr_seq_horario_w
					AND	coalesce(dt_suspensao::text, '') = ''
					AND	coalesce(dt_fim_horario::text, '') = '';
					end;
				else
					begin
					UPDATE	prescr_mat_hor
					SET	dt_suspensao		= dt_atualizacao_w,
						nm_usuario_susp		= nm_usuario_p,
						ie_suspenso_adep	= ie_suspenso_adep_w
					WHERE	nr_sequencia		= nr_seq_horario_w
					AND	coalesce(dt_suspensao::text, '') = ''
					AND	coalesce(dt_fim_horario::text, '') = '';
					end;
				end if;
				select	coalesce(max('S'),'N')
				into STRICT	ie_atualizou_w
				from	prescr_mat_hor where 	nr_sequencia			=  nr_seq_horario_w
				and		dt_suspensao			=  dt_atualizacao_w
				and		coalesce(ie_suspenso_adep,'N')	=  coalesce(ie_suspenso_adep_w,'N')
				and		nm_usuario_susp			=  nm_usuario_p LIMIT 1;

				if (ie_atualizou_w = 'S') then
					i	:= coalesce(Vetor_Lista_Gerar_w.Count,0) + 1;
					Vetor_Lista_Gerar_w[i].nr_prescricao  	:= nr_prescricao_w;
					Vetor_Lista_Gerar_w[i].nr_seq_material 	:= nr_seq_item_w;
					Vetor_Lista_Gerar_w[i].nr_seq_horario 	:= nr_seq_horario_w;
				end if;
			END IF;

			IF (ie_atualizou_w = 'S') THEN
				SELECT	coalesce(MAX(b.nr_seq_lote),0)
				INTO STRICT	nr_seq_lote_w
				FROM	prescr_mat_hor b
				WHERE	b.nr_sequencia = nr_seq_horario_w;

				ie_reg_evento_w	:= 'S';

				if (nr_seq_lote_w > 0) then
					select  coalesce(max('N'), 'S')
					into STRICT	ie_reg_evento_w
					from	prescr_solucao_evento a
					where	a.nr_prescricao = nr_prescricao_w
					and		a.nr_seq_solucao = nr_seq_item_w
					and		a.nr_seq_lote = nr_seq_lote_w
					and		a.ie_evento_valido = 'S'
					and		cd_funcao = 1110
					and		ie_alteracao = 1;

					if (ie_reg_evento_w = 'N') then												
						select	max(nr_sequencia)
						into STRICT	nr_sequencia_w
						from	prescr_solucao_evento a
						where	a.nr_prescricao = nr_prescricao_w
						and		a.nr_seq_solucao = nr_seq_item_w
						and		a.nr_seq_lote = nr_seq_lote_w
						and		a.ie_evento_valido = 'S'
						and		cd_funcao = 1110
						and		ie_alteracao = 1;	

						update	prescr_solucao_evento
						set		ds_justificativa = ds_justificativa || ' ' || ds_justificativa_w
						where	nr_sequencia = nr_sequencia_w;

					end if;					
				end if;

				IF	((coalesce(nr_seq_item_w,0) > 0) and (ie_reg_evento_w = 'S')) THEN
						SELECT	nextval('prescr_solucao_evento_seq')
						INTO STRICT	nr_sequencia_w
						;

						INSERT INTO prescr_solucao_evento(nr_sequencia,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							nr_prescricao,
							nr_seq_solucao,
							cd_pessoa_fisica,
							ie_alteracao,
							dt_alteracao,
							ie_evento_valido,
							nr_seq_motivo,
							ds_observacao,
							ie_tipo_solucao,
							nr_seq_lote,
							nr_etapa_evento,
							ds_justificativa,
							cd_funcao)
						VALUES (nr_sequencia_w,
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							nr_prescricao_w,
							nr_seq_item_w,
							obter_dados_usuario_opcao(nm_usuario_p, 'C'),
							CASE WHEN cd_funcao_p=1110 THEN  CASE WHEN nr_seq_etapa_w=1 THEN 1  ELSE 3 END   ELSE CASE WHEN ie_alteracao_p=3 THEN 4  ELSE 21 END  END ,  --20 no lugar do 4
							clock_timestamp(),
							'S',
							nr_seq_motivo_susp_p,
							NULL,
							1,
							nr_seq_lote_w,
							nr_seq_etapa_w,
							ds_justificativa_w,
							cd_funcao_p);

						nr_seq_evento_w	:= nr_sequencia_w;	

				END IF;

				IF (ie_alteracao_p = 3) AND (ie_adm_processo_aut_w = 'S') THEN

					select	max(nr_seq_processo)
					into STRICT	nr_seq_processo_w
					from	prescr_mat_hor
					where	nr_sequencia	= nr_seq_horario_w
					and		obter_se_horario_liberado(dt_lib_horario, dt_horario) = 'S';

					if (nr_seq_processo_w IS NOT NULL AND nr_seq_processo_w::text <> '') then

						select	coalesce(max('S'),'N')
						into STRICT	ie_existe_w
						from 	prescr_mat_hor b where		b.nr_seq_processo = nr_seq_processo_w
						and 	coalesce(b.dt_fim_horario::text, '') = ''
						and 	coalesce(b.dt_suspensao::text, '') = '' LIMIT 1;

						if (ie_existe_w = 'N') then
							CALL administrar_processo_adep(cd_estabelecimento_p, nr_seq_processo_w, 'S', nm_usuario_p);
						end if;
					end if;
				END IF;

				IF (ie_alteracao_p IN (3,5)) THEN
					CALL definir_setor_exec_adep(nr_atendimento_p,ie_tipo_item_p,nr_prescricao_w,nr_seq_item_w,nr_seq_horario_w,NULL);
				END IF;

				IF (ie_alteracao_p = 3) THEN
					CALL Gerar_proced_assoc_mat_conta(nr_prescricao_w, nr_seq_item_w, NULL, nm_usuario_p, 'G', dt_evento_p);
				END IF;

				IF (ie_medic_paciente_w = 'N') and (ie_regra_lanc_conta_w <> 'N') AND (ie_alteracao_p = 3) THEN

					IF (ie_regra_lanc_conta_w = 'S') OR
						((ie_regra_lanc_conta_w = 'T') AND (coalesce(nr_seq_lote_w,0) = 0)) OR
						((ie_regra_lanc_conta_w = 'L') AND (obter_se_lote_hor_conta_pac(nr_seq_horario_w) = 'S')) THEN

						IF (ie_alteracao_p = 3) THEN
							nr_seq_map_w := gerar_estornar_adep_map(NULL, nr_seq_horario_w, NULL, 'G', dt_horario_adm_w, nm_usuario_p, nr_seq_map_w, 'GAP', null, null);
						END IF;

					END IF;

				END IF;

				IF (ie_medic_paciente_w = 'S') AND (coalesce(nr_seq_lote_forncedor_p,0) > 0) AND (cd_motivo_Exc_medic_pac_w IS NOT NULL AND cd_motivo_Exc_medic_pac_w::text <> '') AND (ie_alteracao_p IN (3,4)) THEN

					IF (ie_alteracao_p = 3) THEN
						nr_seq_map_w := gerar_estornar_adep_map(NULL, nr_seq_horario_w, NULL, 'G', dt_horario_adm_w, nm_usuario_p, nr_seq_map_w, 'GAP', null, null);
						UPDATE	Material_atend_paciente
						SET	cd_motivo_exc_conta 	= cd_motivo_Exc_medic_pac_w,
							nr_seq_lote_fornec	= nr_seq_lote_forncedor_p
						WHERE	nr_sequencia		= nr_seq_map_w;
					ELSIF (ie_alteracao_p = 4) THEN
						nr_seq_map_w := gerar_estornar_adep_map(NULL, nr_seq_horario_w, NULL, 'E', dt_horario_adm_w, nm_usuario_p, nr_seq_map_w, 'GAP', null, null);
					END IF;
				END IF;

				IF (ie_alteracao_p IN (5,6)) THEN
					IF (ie_alteracao_p = 5) THEN
						CALL gerar_susp_adep_processo_hor(nr_seq_horario_w,'1',nm_usuario_p);
						i	:= coalesce(Vetor_Lista_Gerar_w.Count,0) + 1;
						Vetor_Lista_Gerar_w[i].nr_prescricao  	:= nr_prescricao_w;
						Vetor_Lista_Gerar_w[i].nr_seq_material 	:= nr_seq_item_w;
						Vetor_Lista_Gerar_w[i].nr_seq_horario 	:= nr_seq_horario_w;
					ELSE
						CALL gerar_susp_adep_processo_hor(nr_seq_horario_w,'2',nm_usuario_p);
					END IF;
				END IF;
			END IF;
			END;
		END LOOP;
		CLOSE c18;

	ELSIF (ie_tipo_item_p = 'ME') THEN

		OPEN c08;
		LOOP
		FETCH c08 INTO	nr_prescricao_w,
				nr_seq_item_w,
				nr_agrupamento_w,
				cd_um_dose_w,
				qt_dose_w,
				nr_seq_horario_w;
		EXIT WHEN NOT FOUND; /* apply on c08 */
			BEGIN

			ie_abriu_cursor_w	:= true;

			IF (ie_alteracao_p = 3) THEN -- administracao do horario
				ie_consist_dose_adm_w := coalesce(obter_valor_param_usuario(1113,62, cd_perfil_p, nm_usuario_p, obter_estab_atend(nr_atendimento_p)), 'N');

				IF (ie_consist_dose_adm_w IN ('JD','DM')) AND (qt_adm_p IS NOT NULL AND qt_adm_p::text <> '') THEN
					IF (ie_consist_dose_adm_w = 'JD') AND
						((qt_adm_p <> qt_dose_w) OR (cd_um_qt_adm_p <> cd_um_dose_w)) AND (coalesce(ds_justificativa_w::text, '') = '') THEN
						--A justificativa e obrigatoria quando a dose administrada e diferente da dose prescrita. Parametro [62]
						CALL Wheb_mensagem_pck.Exibir_mensagem_abort(173407);
					ELSIF (ie_consist_dose_adm_w = 'DM') AND
						((qt_adm_p > qt_dose_w AND qt_adm_p > qt_solucao_w) OR (cd_um_qt_adm_p > cd_um_dose_w)) THEN
						----Nao e possivel administrar uma dose maior que a sua dispensacao.
						CALL Wheb_mensagem_pck.Exibir_mensagem_abort(123053);
					END IF;
				END IF;

				UPDATE	prescr_mat_hor
				SET	dt_fim_horario	= dt_atualizacao_w,
					nm_usuario_adm	= nm_usuario_p
				WHERE	nr_sequencia		= nr_seq_horario_w
				AND	coalesce(dt_fim_horario::text, '') = ''
				AND	coalesce(dt_suspensao::text, '') = '';
			ELSIF (ie_alteracao_p = 4) THEN -- reversao da realizacao do horario
				select	coalesce(max('S'), 'N')
				into STRICT	ie_pode_reverter_w
				from	prescr_mat_hor
				where	nr_sequencia   = nr_seq_horario_w
				and		nm_usuario_adm = nm_usuario_p;

				if	(ie_pode_reverter_w = 'N' AND ie_param682_w = 'N') then
					CALL Wheb_mensagem_pck.exibir_mensagem_abort(452717);
				end if;			

				UPDATE	prescr_mat_hor
				SET	dt_fim_horario	 = NULL,
					nm_usuario_adm	 = NULL
				WHERE	nr_sequencia		= nr_seq_horario_w
				AND	(dt_fim_horario IS NOT NULL AND dt_fim_horario::text <> '');
				
				select 	max(dt_alteracao)
				into STRICT	dt_conta_w
				from	prescr_mat_alteracao
				where	nr_seq_horario = nr_seq_horario_w
				and		coalesce(ie_evento_valido,'S') = 'S'
				and		ie_alteracao = 3;	
				
			ELSIF (ie_alteracao_p = 5) THEN -- suspensao do horario
				UPDATE	prescr_mat_hor
				SET	dt_suspensao		= dt_atualizacao_w,
					nm_usuario_susp		= nm_usuario_p
				WHERE	nr_sequencia		= nr_seq_horario_w
				AND	coalesce(dt_suspensao::text, '') = ''
				AND	coalesce(dt_fim_horario::text, '') = '';
				i	:= coalesce(Vetor_Lista_Gerar_w.Count,0) + 1;
				Vetor_Lista_Gerar_w[i].nr_prescricao  	:= nr_prescricao_w;
				Vetor_Lista_Gerar_w[i].nr_seq_material 	:= nr_seq_item_w;
				Vetor_Lista_Gerar_w[i].nr_seq_horario 	:= nr_seq_horario_w;
			ELSIF (ie_alteracao_p = 6) THEN -- reversao da suspensao do horario
				UPDATE	prescr_mat_hor
				SET	dt_suspensao		 = NULL,
					nm_usuario_susp		 = NULL
				WHERE	nr_sequencia		= nr_seq_horario_w
				AND	(dt_suspensao IS NOT NULL AND dt_suspensao::text <> '');
			END IF;

			GET DIAGNOSTICS ora2pg_rowcount = ROW_COUNT;


			if ( ora2pg_rowcount > 0) then
				SELECT	nextval('prescr_mat_alteracao_seq')
				INTO STRICT	nr_seq_alteracao_w
				;

				ds_obs_final_w := SUBSTR(ds_observacao_p,1,2000);

				IF (coalesce(ie_palm_p,'N') = 'S') THEN
					IF (ds_obs_final_w IS NOT NULL AND ds_obs_final_w::text <> '') AND (ds_obs_final_w <> '') THEN
						ds_obs_final_w := substr(wheb_mensagem_pck.get_texto(307615, 'DS_OBSERVACAO_W=' || ds_obs_final_w),1,2000); -- Tipo de checagem: ADEP PDA - #@DS_OBSERVACAO_W#@
					ELSE
						ds_obs_final_w := wheb_mensagem_pck.get_texto(307616); -- Tipo de checagem: ADEP PDA
					END IF;
				END IF;

				INSERT	INTO	prescr_mat_alteracao(
									nr_sequencia,
									dt_atualizacao,
									nm_usuario,
									dt_atualizacao_nrec,
									nm_usuario_nrec,
									nr_prescricao,
									nr_seq_prescricao,
									nr_seq_horario,
									dt_alteracao,
									cd_pessoa_fisica,
									ie_alteracao,
									ds_justificativa,
									ds_observacao,
									ie_tipo_item,
									dt_horario,
									nr_atendimento,
									cd_item,
									qt_dose_adm,
									cd_um_dose_adm,
									qt_dose_original,
									cd_medico_solic,
									ie_mostra_adep,
									nr_seq_assinatura,
									nr_seq_lote,
									cd_funcao
									)
								VALUES (
									nr_seq_alteracao_w,
									dt_atualizacao_w,
									nm_usuario_p,
									dt_atualizacao_w,
									nm_usuario_p,
									nr_prescricao_w,
									nr_seq_item_w,
									nr_seq_horario_w,
									dt_horario_adm_w,
									obter_dados_usuario_opcao(nm_usuario_p,'C'),
									ie_alteracao_p,
									ds_justificativa_w,
									ds_obs_final_w,
									ie_tipo_item_p,
									dt_horario_w,
									nr_atendimento_p,
									cd_item_p,
									coalesce(qt_adm_p,qt_dose_w),
									coalesce(cd_um_qt_adm_p,cd_um_dose_w),
									qt_dose_w,
									cd_medico_solic_p,
									ie_mostra_adep_w,
									nr_seq_assinatura_p,
									nr_seq_lote_w,
									cd_funcao_p
									);

								nr_seq_evento_w	:= nr_seq_alteracao_w;	

				CALL gerar_alter_horario_item_comp(nr_atendimento_p, 'IC', nr_prescricao_w, nr_seq_item_w, nr_agrupamento_w, dt_horario_w, ie_alteracao_p,dt_horario_adm_w, ie_regra_lanc_conta_w, nr_seq_motivo_susp_p, nm_usuario_p);
				CALL gerar_alter_horario_item_dil(nr_atendimento_p, 'DIL', nr_prescricao_w, nr_seq_item_w, nr_agrupamento_w, dt_horario_w, ie_alteracao_p,dt_horario_adm_w, ie_regra_lanc_conta_w, nm_usuario_p);
				CALL gerar_alter_horario_item_kit(nr_atendimento_p, 'KIT', nr_prescricao_w, nr_seq_item_w, dt_horario_w, ie_alteracao_p, dt_horario_adm_w,ie_regra_lanc_conta_w, nm_usuario_p);

				IF (ie_alteracao_p IN (3,5)) THEN
					CALL definir_setor_exec_adep(nr_atendimento_p,ie_tipo_item_p,nr_prescricao_w,nr_seq_item_w,nr_seq_horario_w,NULL);
				END IF;

				IF (ie_regra_lanc_conta_w <> 'N') AND (ie_alteracao_p IN (3,4)) THEN

					IF (ie_regra_lanc_conta_w = 'S') THEN

						IF (ie_alteracao_p = 3) THEN
							nr_seq_map_w := gerar_estornar_adep_map(NULL, nr_seq_horario_w, NULL, 'G', dt_horario_adm_w, nm_usuario_p, nr_seq_map_w, 'GAP', null, null);
						ELSIF (ie_alteracao_p = 4) THEN
							nr_seq_map_w := gerar_estornar_adep_map(NULL, nr_seq_horario_w, NULL, 'E', coalesce(dt_conta_w,dt_horario_adm_w), nm_usuario_p, nr_seq_map_w, 'GAP', null, null);
						END IF;

					ELSIF (ie_regra_lanc_conta_w = 'L') AND (obter_se_lote_hor_conta_pac(nr_seq_horario_w) = 'S') THEN

						IF (ie_alteracao_p = 3) THEN
							nr_seq_map_w := gerar_estornar_adep_map(NULL, nr_seq_horario_w, NULL, 'G', dt_horario_adm_w, nm_usuario_p, nr_seq_map_w, 'GAP', null, null);
						ELSIF (ie_alteracao_p = 4) THEN
							nr_seq_map_w := gerar_estornar_adep_map(NULL, nr_seq_horario_w, NULL, 'E', coalesce(dt_conta_w,dt_horario_adm_w), nm_usuario_p, nr_seq_map_w, 'GAP', null, null);
						END IF;
					ELSIF (ie_regra_lanc_conta_w = 'T') AND (coalesce(nr_seq_lote_w, 0) = 0) THEN
						IF (ie_alteracao_p = 3) THEN
							nr_seq_map_w := gerar_estornar_adep_map(NULL, nr_seq_horario_w, NULL, 'G', dt_horario_adm_w, nm_usuario_p, nr_seq_map_w, 'GAP', null, null);
						ELSIF (ie_alteracao_p = 4) THEN
							nr_seq_map_w := gerar_estornar_adep_map(NULL, nr_seq_horario_w, NULL, 'E', coalesce(dt_conta_w,dt_horario_adm_w), nm_usuario_p, nr_seq_map_w, 'GAP', null, null);
						END IF;

					END IF;

				END IF;

				IF (ie_alteracao_p IN (5,6)) THEN
					IF (ie_alteracao_p = 5) THEN
						CALL gerar_susp_adep_processo_hor(nr_seq_horario_w,'1',nm_usuario_p);
						i	:= coalesce(Vetor_Lista_Gerar_w.Count,0) + 1;
						Vetor_Lista_Gerar_w[i].nr_prescricao  	:= nr_prescricao_w;
						Vetor_Lista_Gerar_w[i].nr_seq_material 	:= nr_seq_item_w;
						Vetor_Lista_Gerar_w[i].nr_seq_horario 	:= nr_seq_horario_w;
					ELSE
						CALL gerar_susp_adep_processo_hor(nr_seq_horario_w,'2',nm_usuario_p);
					END IF;
				END IF;
			END IF;
			END;
		END LOOP;
		CLOSE c08;


	ELSIF (ie_tipo_item_p = 'MAT') THEN

		OPEN c07;
		LOOP
		FETCH c07 INTO	nr_prescricao_w,
				nr_seq_item_w,
				nr_seq_horario_w,
				ie_via_aplicacao_w,
				qt_dose_w,
				cd_um_dose_w,
                nr_seq_item_cpoe_w;
		EXIT WHEN NOT FOUND; /* apply on c07 */
			BEGIN
			
			ie_abriu_cursor_w	:= true;

			IF (ie_alteracao_p = 3) THEN -- administracao do horario
				ie_consist_dose_adm_w := coalesce(obter_valor_param_usuario(1113,62, cd_perfil_p, nm_usuario_p, obter_estab_atend(nr_atendimento_p)), 'N');

				IF (ie_consist_dose_adm_w IN ('JD','DM','I')) AND (coalesce(qt_adm_p,0) > 0) THEN
					IF (ie_consist_dose_adm_w = 'JD') AND
						((qt_adm_p <> qt_dose_w) OR (cd_um_qt_adm_p <> cd_um_dose_w)) AND (coalesce(ds_justificativa_w::text, '') = '') THEN
						--A justificativa e obrigatoria quando a dose administrada e diferente da dose prescrita. Parametro [62].
						CALL Wheb_mensagem_pck.Exibir_mensagem_abort(173407);
					ELSIF (ie_consist_dose_adm_w = 'I') AND
						((qt_adm_p <> qt_dose_w) OR (cd_um_qt_adm_p <> cd_um_dose_w)) THEN
						--Nao e permitida a administracao quando a dose administrada e diferente da dose prescrita. Parametro [62].
						CALL Wheb_mensagem_pck.Exibir_mensagem_abort(173408);
					ELSIF (ie_consist_dose_adm_w = 'DM') AND
						((qt_adm_p > qt_dose_w) OR (cd_um_qt_adm_p > cd_um_dose_w)) THEN
						--Nao e possivel administrar uma dose maior que a sua dispensacao.
						CALL Wheb_mensagem_pck.Exibir_mensagem_abort(123053);
					END IF;
				END IF;

				SELECT	SUBSTR(MAX(obter_desc_material(cd_material)),1,255),
						MAX(nr_prescricao),
						coalesce(qt_adm_p,MAX(qt_dose)),
						coalesce(cd_um_qt_adm_p,MAX(cd_unidade_medida_dose))
				INTO STRICT	ds_item_w,
						nr_prescricao_ww,
						qt_dose_ww,
						ds_unidade_medida_w
				FROM	prescr_mat_hor
				WHERE	nr_sequencia	= nr_seq_horario_w;

        cd_evolucao_p := Gerar_evolPaci_automa('MAT', nm_usuario_p, nr_atendimento_p, ds_item_w, nr_seq_horario_w, 'A', obter_expressao_idioma(488570), dt_horario_adm_w, nr_prescricao_ww, qt_dose_ww, ds_unidade_medida_w, ie_via_aplicacao_w, cd_evolucao_p, ie_palm_p);

				UPDATE	prescr_mat_hor
				SET	dt_fim_horario	= dt_atualizacao_w,
					nm_usuario_adm	= nm_usuario_p
				WHERE	nr_sequencia		= nr_seq_horario_w
				AND	coalesce(dt_fim_horario::text, '') = ''
				AND	coalesce(dt_suspensao::text, '') = '';
			ELSIF (ie_alteracao_p = 4) THEN -- reversao da realizacao do horario
				select	coalesce(max('S'), 'N')
				into STRICT	ie_pode_reverter_w
				from	prescr_mat_hor
				where	nr_sequencia   = nr_seq_horario_w
				and		nm_usuario_adm = nm_usuario_p;

				if	(ie_pode_reverter_w = 'N' AND ie_param682_w = 'N') then
					CALL Wheb_mensagem_pck.exibir_mensagem_abort(452717);
				end if;

				UPDATE	prescr_mat_hor
				SET	dt_fim_horario	 = NULL,
					nm_usuario_adm	 = NULL
				WHERE	nr_sequencia		= nr_seq_horario_w
				AND	(dt_fim_horario IS NOT NULL AND dt_fim_horario::text <> '');
				
				select 	max(dt_alteracao)
				into STRICT	dt_conta_w
				from	prescr_mat_alteracao
				where	nr_seq_horario = nr_seq_horario_w
				and		coalesce(ie_evento_valido,'S') = 'S'
				and		ie_alteracao = 3;
				
			ELSIF (ie_alteracao_p = 5) THEN -- suspensao do horario
				UPDATE	prescr_mat_hor
				SET	dt_suspensao		= dt_atualizacao_w,
					nm_usuario_susp		= nm_usuario_p
				WHERE	nr_sequencia		= nr_seq_horario_w
				AND	coalesce(dt_suspensao::text, '') = ''
				AND	coalesce(dt_fim_horario::text, '') = '';
				i	:= coalesce(Vetor_Lista_Gerar_w.Count,0) + 1;
				Vetor_Lista_Gerar_w[i].nr_prescricao  	:= nr_prescricao_w;
				Vetor_Lista_Gerar_w[i].nr_seq_material 	:= nr_seq_item_w;
				Vetor_Lista_Gerar_w[i].nr_seq_horario 	:= nr_seq_horario_w;

        cd_evolucao_p 		=>	cd_evolucao_p := Gerar_evolPaci_automa(	ie_tipo_item_p 		=>	'MAT', nm_usuario_p 		=>	nm_usuario_p, nr_atendimento_p	=>	nr_atendimento_p, ds_item_p			=>	ds_item_w, nr_seq_horario_p 	=>	nr_seq_horario_w, ie_opcao_p 			=>	'S', ds_hint_p 			=>	obter_expressao_idioma(488096), dt_evento_p 		=>	clock_timestamp(), nr_prescricao_p 	=>	nr_prescricao_ww, qt_dose_p 			=>	qt_dose_ww, ds_unid_med_p 		=>	ds_unidade_medida_w, ie_via_adm_p 		=>	ie_via_aplicacao_w, cd_evolucao_p 		=>	cd_evolucao_p, ie_palm_p 			=>	ie_palm_p);

			ELSIF (ie_alteracao_p = 6) THEN -- reversao da suspensao do horario
				UPDATE	prescr_mat_hor
				SET	dt_suspensao		 = NULL,
					nm_usuario_susp		 = NULL
				WHERE	nr_sequencia		= nr_seq_horario_w
				AND	(dt_suspensao IS NOT NULL AND dt_suspensao::text <> '');
			END IF;

			GET DIAGNOSTICS ora2pg_rowcount = ROW_COUNT;


			if ( ora2pg_rowcount > 0) then
				SELECT	nextval('prescr_mat_alteracao_seq')
				INTO STRICT	nr_seq_alteracao_w
				;

				ds_obs_final_w	:= SUBSTR(ds_observacao_p,1,2000);

				IF (coalesce(ie_palm_p,'N') = 'S') THEN
					IF (ds_obs_final_w IS NOT NULL AND ds_obs_final_w::text <> '') AND (ds_obs_final_w <> '') THEN
						ds_obs_final_w := substr(wheb_mensagem_pck.get_texto(307615, 'DS_OBSERVACAO_W=' || ds_obs_final_w),1,2000); -- Tipo de checagem: ADEP PDA - #@DS_OBSERVACAO_W#@
					ELSE
						ds_obs_final_w := wheb_mensagem_pck.get_texto(307616); -- Tipo de checagem: ADEP PDA
					END IF;
				END IF;

				INSERT	INTO	prescr_mat_alteracao(
									nr_sequencia,
									dt_atualizacao,
									nm_usuario,
									dt_atualizacao_nrec,
									nm_usuario_nrec,
									nr_prescricao,
									nr_seq_prescricao,
									nr_seq_horario,
									dt_alteracao,
									cd_pessoa_fisica,
									ie_alteracao,
									ds_justificativa,
									ie_tipo_item,
									dt_horario,
									nr_atendimento,
									cd_item,
									qt_dose_adm,
									cd_um_dose_adm,
									qt_dose_original,
									cd_medico_solic,
									ie_mostra_adep,
									nr_seq_assinatura,
									nr_seq_lote,
									ds_observacao,
									cd_funcao
									)
								VALUES (
									nr_seq_alteracao_w,
									dt_atualizacao_w,
									nm_usuario_p,
									dt_atualizacao_w,
									nm_usuario_p,
									nr_prescricao_w,
									nr_seq_item_w,
									nr_seq_horario_w,
									dt_horario_adm_w,
									obter_dados_usuario_opcao(nm_usuario_p,'C'),
									ie_alteracao_p,
									ds_justificativa_w,
									ie_tipo_item_p,
									dt_horario_w,
									nr_atendimento_p,
									cd_item_p,
									coalesce(qt_adm_p, qt_dose_w),
									coalesce(cd_um_qt_adm_p, cd_um_dose_w),
									coalesce(qt_dose_w, 0),
									cd_medico_solic_p,
									ie_mostra_adep_w,
									nr_seq_assinatura_p,
									nr_seq_lote_w,
									ds_obs_final_w,
									cd_funcao_p
									);

								nr_seq_evento_w	:= nr_seq_alteracao_w;
				IF (ie_regra_lanc_conta_w <> 'N') AND (ie_alteracao_p IN (3,4)) THEN

					IF (ie_regra_lanc_conta_w = 'S') THEN

						IF (ie_alteracao_p = 3) THEN
							nr_seq_map_w := gerar_estornar_adep_map(NULL, nr_seq_horario_w, NULL, 'G', dt_horario_adm_w, nm_usuario_p, nr_seq_map_w, 'GAP', null, null);
						ELSIF (ie_alteracao_p = 4) THEN
							nr_seq_map_w := gerar_estornar_adep_map(NULL, nr_seq_horario_w, NULL, 'E', coalesce(dt_conta_w,dt_horario_adm_w), nm_usuario_p, nr_seq_map_w, 'GAP', null, null);
						END IF;

					ELSIF (ie_regra_lanc_conta_w = 'L') AND (obter_se_lote_hor_conta_pac(nr_seq_horario_w) = 'S') THEN

						IF (ie_alteracao_p = 3) THEN
							nr_seq_map_w := gerar_estornar_adep_map(NULL, nr_seq_horario_w, NULL, 'G', dt_horario_adm_w, nm_usuario_p, nr_seq_map_w, 'GAP', null, null);
						ELSIF (ie_alteracao_p = 4) THEN
							nr_seq_map_w := gerar_estornar_adep_map(NULL, nr_seq_horario_w, NULL, 'E', coalesce(dt_conta_w,dt_horario_adm_w), nm_usuario_p, nr_seq_map_w, 'GAP', null, null);
						END IF;
					ELSIF (ie_regra_lanc_conta_w = 'T') AND (coalesce(nr_seq_lote_w, 0) = 0) THEN
						IF (ie_alteracao_p = 3) THEN
							nr_seq_map_w := gerar_estornar_adep_map(NULL, nr_seq_horario_w, NULL, 'G', dt_horario_adm_w, nm_usuario_p, nr_seq_map_w, 'GAP', null, null);
						ELSIF (ie_alteracao_p = 4) THEN
							nr_seq_map_w := gerar_estornar_adep_map(NULL, nr_seq_horario_w, NULL, 'E', coalesce(dt_conta_w,dt_horario_adm_w), nm_usuario_p, nr_seq_map_w, 'GAP', null, null);
						END IF;

					END IF;

				END IF;

				IF (ie_alteracao_p IN (3,5)) THEN
					CALL definir_setor_exec_adep(nr_atendimento_p,ie_tipo_item_p,nr_prescricao_w,nr_seq_item_w,nr_seq_horario_w,NULL);
				END IF;
			END IF;
			END;
		END LOOP;
		CLOSE c07;

	ELSIF (ie_tipo_item_p IN ('P','G','C','I','L')) THEN

		ie_encerrar_ccg_w := 'N';
		ie_encerrar_ivc_w := 'N';

		select	max(nr_seq_procedimento),
				max(nr_prescricao)
		into STRICT	nr_seq_bomba_w,
				nr_prescr_bomba_w
		from	prescr_proc_hor
		where	nr_sequencia	= nr_seq_horario_p;

		select	coalesce(max(ie_consiste_autor_exec),'N')
		into STRICT	ie_consiste_autor_exec_w
		from	parametro_faturamento
		where	cd_estabelecimento	= cd_estabelecimento_p;

		select	max(cd_pessoa_fisica)
		into STRICT	cd_profissional_w
		from	usuario
		where	nm_usuario = nm_usuario_p;

		select	max(cd_pessoa_fisica)
		into STRICT	cd_pessoa_atend_w
		from	atendimento_paciente
		where	nr_atendimento  = nr_atendimento_p;

		ie_data_proc_w				:= Wheb_assist_pck.obterParametroFuncao(924,223);
		ie_proc_associados_w		:= Wheb_assist_pck.obterParametroFuncao(1113,139);
		ie_Status_atend_w			:= Wheb_assist_pck.obterParametroFuncao(1113,155);
		ie_altera_status_lab_w		:= Wheb_assist_pck.obterParametroFuncao(1113,166);
		ie_susp_gestao_exame_w		:= Wheb_assist_pck.obterParametroFuncao(1113,201);
		ie_encerrar_ccg_auto_w		:= Wheb_assist_pck.obterParametroFuncao(1113,209);
		VarIe_Cobra_Prim_hor_w		:= Wheb_assist_pck.obterParametroFuncao(1113,351);
		var_param_426_w				:= Wheb_assist_pck.obterParametroFuncao(1113,426);
		ie_gerar_setor_prescr_w		:= Wheb_assist_pck.obterParametroFuncao(1113,496);
		ie_status_novo_w			:= Wheb_assist_pck.obterParametroFuncao(1113,525);
		ie_encerrar_ivc_auto_w		:= Wheb_assist_pck.obterParametroFuncao(1113,559);
		ie_consiste_regra_conv_w	:= Wheb_assist_pck.obterParametroFuncao(1113,552);
		ie_exec_proc_assoc_w		:= Wheb_assist_pck.obterParametroFuncao(1113,613);
		ie_inf_quant_proc_regra_w	:= Wheb_assist_pck.obterParametroFuncao(1113,650);
		ie_regra_proc_conv_w		:= Wheb_assist_pck.obterParametroFuncao(1113,669);

		if (cd_funcao_p = 7044) then
			ie_altera_status_pa_w := obter_param_usuario(7044, 7, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ie_altera_status_pa_w);
			ie_cobra_proc_hor_w := obter_param_usuario(7044, 6, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ie_cobra_proc_hor_w);
		else
			ie_altera_status_pa_w	:= wheb_assist_pck.obterparametrofuncao(1113,203);
			ie_cobra_proc_hor_w		:= wheb_assist_pck.obterparametrofuncao(1113,246);
		end if;

		OPEN c04;
		LOOP
		FETCH c04 INTO
			nr_prescricao_w,
			nr_seq_item_w,
			nr_seq_horario_w,
			ie_cig_w,
			nr_seq_exame_w,
			cd_procedimento_w,
			ie_origem_proced_w,
			dt_inicio_proced_w,
			cd_setor_atendimento_w,
			qt_procedimento_w,
			cd_setor_exec_w,
			nr_seq_proc_interno_w,
			nr_seq_interno_w,
			ie_acm_sn_w,
			cd_prescritor_w,
			dt_horario_w,
			ds_procedimento_w,
			nr_seq_prot_glic_w,
			cd_pessoa_coleta_w,
			dt_procedimento_w,
			cd_medico_exec_w,
			ie_origem_inf_w,
			cd_cgc_laboratorio_w,
			ie_autorizacao_w,
			nr_seq_proc_princ_w,
			nr_seq_item_cpoe_w,
			cd_funcao_origem_w,
			cd_intervalo_w;
		EXIT WHEN NOT FOUND; /* apply on c04 */
			BEGIN

			ie_abriu_cursor_w	:= true;

			if (ie_somente_com_baixa_w = 'S') THEN
				select	coalesce(max('S'),'N')
				into STRICT	ie_existe_w
				from	prescr_mat_hor c,
						prescr_material b where		c.nr_prescricao 	= b.nr_prescricao
				and		c.nr_seq_material	= b.nr_sequencia
				and		b.nr_prescricao		= nr_prescricao_w
				and		c.dt_horario		= dt_horario_w
				and		b.nr_sequencia_proc	= nr_seq_item_w
				and		coalesce(CASE WHEN c.cd_motivo_baixa=0 THEN  b.cd_motivo_baixa  ELSE c.cd_motivo_baixa END ,0) = 0 LIMIT 1;

				if (ie_existe_w = 'S') then
					select	coalesce(max('S'),'N')
					into STRICT	ie_existe_w
					from	prescr_mat_hor c,
							prescr_material b where		c.nr_prescricao 	= b.nr_prescricao
					and		c.nr_seq_material	= b.nr_sequencia
					and		b.nr_prescricao		= nr_prescricao_w
					and		c.dt_horario		= dt_horario_w
					and		b.nr_sequencia_proc	= nr_seq_item_w LIMIT 1;

					if (ie_existe_w = 'S') then
						--So e possivel administrar uma medicacao apos o atendimento da mesma no atendimento da prescricao/lote! Parametro [357]
						CALL Wheb_mensagem_pck.Exibir_mensagem_abort(173406);
					end if;
				end if;
			elsif (ie_somente_com_baixa_w = 'L') and (nr_seq_lote_w IS NOT NULL AND nr_seq_lote_w::text <> '') then
					select	max(dt_atend_farmacia)
					into STRICT	dt_atend_lote_w
					from	ap_lote
					where	nr_sequencia = nr_seq_lote_w;
					if (coalesce(dt_atend_lote_w::text, '') = '') then
						--so e possivel administrar uma medicacao apos o atendimento da mesma no atendimento da prescricao/lote! parametro [357]
						CALL wheb_mensagem_pck.exibir_mensagem_abort(173406);
					end if;
			elsif (ie_somente_com_baixa_w = 'E') and (nr_seq_lote_w IS NOT NULL AND nr_seq_lote_w::text <> '') then
				select	max(dt_entrega_setor)
				into STRICT	dt_entrega_setor_w
				from	ap_lote
				where	nr_sequencia = nr_seq_lote_w;
				if (coalesce(dt_entrega_setor_w::text, '') = '') then
					--so e possivel administrar uma medicacao apos a entrega da mesma no atendimento da prescricao/lote! parametro [357]
					CALL wheb_mensagem_pck.exibir_mensagem_abort(472055);
				end if;
			elsif (ie_somente_com_baixa_w = 'R') and (nr_seq_lote_w IS NOT NULL AND nr_seq_lote_w::text <> '') then
				select	max(dt_recebimento_setor)
				into STRICT	dt_recebimento_setor_w
				from	ap_lote
				where	nr_sequencia = nr_seq_lote_w;
				if (coalesce(dt_recebimento_setor_w::text, '') = '') then
					--Somente e possivel administrar uma medicacao, apos o recebimento da mesma no atendimento da prescricao/lote!
					CALL Wheb_mensagem_pck.Exibir_mensagem_abort(819419);
				end if;
			end if;

			IF (ie_consiste_regra_conv_w = 'S') AND (ie_alteracao_p IN (3,8)) THEN
				ds_erro_w := Obter_se_uso_qtde_proc(nr_atendimento_p,cd_procedimento_w,ie_origem_proced_w,qt_procedimento_w,cd_prescritor_w,cd_setor_atendimento_w,dt_inicio_proced_w,'3',nr_seq_item_w,NULL,NULL,nr_seq_proc_interno_w,SUBSTR(obter_categoria_atendimento(nr_atendimento_p),1,10),SUBSTR(obter_dados_categ_conv(nr_atendimento_p,'P'),1,10),nr_seq_exame_w);

				IF (ds_erro_w IS NOT NULL AND ds_erro_w::text <> '') THEN
					--#@DS_ERRO#@. Parametro [#@NR_PARAMETRO#@]
					CALL Wheb_mensagem_pck.Exibir_mensagem_abort(173412,'DS_ERRO=' || ds_erro_w || ';NR_PARAMETRO=' || '552');
				END IF;
			END IF;

			IF (ie_inicia_proced_p = 'N') THEN
				BEGIN
				IF (var_param_426_w = 'N') AND (ie_cig_w = 'S') THEN
					CALL consistir_interv_medicao_cig(nr_atendimento_p, dt_evento_p);
				END IF;

				IF (ie_alteracao_p IN (3,8)) THEN -- administracao do horario
					SELECT	MAX(a.ie_tipo_atendimento),
						MAX(a.dt_entrada),
						MAX(a.nr_seq_classificacao)
					INTO STRICT	ie_tipo_atendimento_w,
						dt_entrada_w,
						nr_seq_classificacao_w
					FROM	estabelecimento b,
						atendimento_paciente a
					WHERE	a.nr_atendimento = nr_atendimento_p;

					IF (ie_gerar_setor_prescr_w = 'S') AND (obter_classif_setor(cd_setor_exec_w) = 5) THEN
						cd_setor_exec_w	:= cd_setor_atendimento_w;			

					END IF;

					if (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') and
						((consiste_atend_proc_conta(cd_procedimento_w, ie_origem_proced_w, cd_estabelecimento_p)) = 'S') then

						select	coalesce(obter_setor_atendimento(nr_atendimento_p),cd_setor_atendimento_w)
						into STRICT	cd_setor_atendimento_w
						;

					end if;

					IF (dt_entrada_w > coalesce(dt_horario_w, dt_procedimento_w)) THEN
						SELECT * FROM obter_convenio_execucao(nr_atendimento_p, dt_entrada_w, cd_convenio_w, cd_categoria_w, nr_doc_convenio_w, ie_tipo_guia_w, cd_senha_w) INTO STRICT cd_convenio_w, cd_categoria_w, nr_doc_convenio_w, ie_tipo_guia_w, cd_senha_w;
					ELSE
						SELECT * FROM obter_convenio_execucao(nr_atendimento_p, coalesce(dt_horario_w, dt_procedimento_w), cd_convenio_w, cd_categoria_w, nr_doc_convenio_w, ie_tipo_guia_w, cd_senha_w) INTO STRICT cd_convenio_w, cd_categoria_w, nr_doc_convenio_w, ie_tipo_guia_w, cd_senha_w;
					END IF;

					SELECT * FROM consiste_medico_executor(cd_estabelecimento_p, cd_convenio_w, cd_setor_exec_w, cd_procedimento_w, ie_origem_proced_w, ie_tipo_atendimento_w, NULL, nr_seq_proc_interno_w, ie_medico_executor_w, cd_cgc_laboratorio_w, cd_medico_regra_w, cd_profissional_w, NULL, coalesce(dt_horario_w, dt_procedimento_w), nr_seq_classificacao_w, ie_origem_inf_w, cd_cgc_laboratorio_w, cd_setor_atendimento_w) INTO STRICT ie_medico_executor_w, cd_cgc_laboratorio_w, cd_medico_regra_w, cd_profissional_w;

					IF (ie_medico_executor_w = 'N') THEN
						cd_medico_exec_w	:= NULL;
					ELSE
						cd_medico_exec_w	:= coalesce(cd_pessoa_coleta_w, coalesce(cd_medico_regra_w,cd_medico_exec_w));
					END IF;


					IF (ie_consiste_autor_exec_w = 'S') THEN

						-- Tratamento realizado para consistir mesmo codigo de procedimento numa mesma prescricao OS 511111
						BEGIN
						SELECT	b.ie_autorizacao
						INTO STRICT	ie_autorizacao_ww
						FROM	procedimento_autorizado a,
							prescr_procedimento b
						WHERE	a.nr_prescricao 	= nr_prescricao_w
						AND	a.nr_prescricao 	= b.nr_prescricao
						AND	a.nr_seq_prescricao 	= b.nr_sequencia
						AND	b.dt_prev_execucao	= dt_horario_w
						--and	nvl(a.qt_autorizada,0) 	= 0
  LIMIT 1;
						EXCEPTION
						WHEN OTHERS THEN
							ie_autorizacao_ww := NULL;
						END;

						SELECT * FROM consiste_plano_convenio(nr_atendimento_p, cd_convenio_w, cd_procedimento_w, ie_origem_proced_w, coalesce(dt_horario_w, dt_procedimento_w), qt_procedimento_w, ie_tipo_atendimento_w, Obter_Plano_Convenio_Atend(nr_atendimento_p, 'C'), NULL, ds_erro_w, cd_setor_exec_w, nr_seq_exame_w, ie_regra_w, NULL, nr_seq_regra_w, nr_seq_proc_interno_w, cd_categoria_w, cd_estabelecimento_p, NULL, cd_medico_exec_w, cd_pessoa_atend_w, ie_glosa_w, nr_seq_regra_preco_w) INTO STRICT ds_erro_w, ie_regra_w, nr_seq_regra_w, ie_glosa_w, nr_seq_regra_preco_w;

						IF (ie_regra_w = '7') AND (coalesce(ie_autorizacao_ww,ie_autorizacao_w) NOT IN ('A','B')) THEN
							-- O procedimento "#@DS_PROCED_P#@" nao pode ser executado pois sua autorizacao ainda nao teve retorno!
							CALL wheb_mensagem_pck.exibir_mensagem_abort(211526,'DS_PROCED_P='||SUBSTR(obter_descricao_procedimento(cd_procedimento_w,ie_origem_proced_w),1,255));
						END IF;
					END IF;


					if (ie_tipo_item_p = 'L' or verificar_se_coleta(nr_seq_horario_w) = 'S') then
						ie_tipo_item_w := 'L';
					else
						ie_tipo_item_w := 'P';
					end if;

					cd_evolucao_p		=>	cd_evolucao_p := Gerar_evolPaci_automa(	ie_tipo_item_p		=>	ie_tipo_item_w, nm_usuario_p		=>	nm_usuario_p, nr_atendimento_p	=>	nr_atendimento_p, ds_item_p			=>	ds_procedimento_w, nr_seq_horario_p	=>	nr_seq_horario_w, ie_opcao_p			=>	'A', ds_hint_p			=>	obter_expressao_idioma(488570), /*Administracao do horario*/
											dt_evento_p			=>	dt_horario_adm_w, nr_prescricao_p		=>	nr_prescricao_w, qt_dose_p			=>	qt_procedimento_w, ds_unid_med_p		=>	'', ie_via_adm_p		=>	null, cd_evolucao_p		=>	cd_evolucao_p, ie_palm_p			=>	ie_palm_p);

					ie_tipo_item_w	:= ie_tipo_item_p;

					if (ie_tipo_item_w = 'P') and (nr_seq_exame_w IS NOT NULL AND nr_seq_exame_w::text <> '') then
						ie_tipo_item_w	:= 'L';
					end if;

					ie_permite_exec_w	:= Obter_Se_permite_adm_item(ie_tipo_item_w, cd_perfil_p, cd_setor_exec_w, nm_usuario_p,'N',nr_seq_proc_interno_w, cd_procedimento_w,ie_origem_proced_w);

					IF (coalesce(ie_permite_exec_w,'S') = 'N') THEN
							--Nao e permitido realizar horario para este item!
						CALL Wheb_mensagem_pck.Exibir_mensagem_abort(173413);
					END IF;

					UPDATE	prescr_proc_hor
					SET		dt_fim_horario		 = dt_atualizacao_w,
							nm_usuario_adm		 = nm_usuario_p,
							dt_primeira_checagem  = NULL
					WHERE	nr_sequencia 		 = nr_seq_horario_w
					AND		coalesce(dt_fim_horario::text, '') = ''
					AND		coalesce(dt_suspensao::text, '') = '';

					qt_registro_w := 0;

					--JRS232 starts
                    nr_seq_proc_hor_part_name_w := null;
                    Begin
                      select nextval('prescr_proc_hor_part_name_seq') into STRICT nr_seq_proc_hor_part_name_w;
                      insert into prescr_proc_hor_part_name(nr_sequencia, nr_seq_prescr_proc_hor, nr_seq_part_name, ie_procedure_time, ds_start_time, ds_end_time, ds_time_req,cd_setor_atendimento)
                       values (nr_seq_proc_hor_part_name_w, nr_seq_horario_w, nr_seq_part_name_p, ie_procedure_time_p, start_time_p, end_time_p, req_time_p,dept_location_p);
                    exception
                      when others then
                        nr_seq_proc_hor_part_name_w := null;
                    end;
                   GET DIAGNOSTICS ora2pg_rowcount = ROW_COUNT;

                   --JRS232 ends
					IF ( ora2pg_rowcount > 0) THEN
						qt_registro_w := 1;

						IF (ie_alteracao_p = 3) AND (ie_tipo_item_p = 'G') AND (ie_encerrar_ccg_auto_w = 'S') THEN
							ie_encerrar_ccg_w := 'S';
						END IF;
						IF (ie_alteracao_p = 3) AND (ie_tipo_item_p = 'I') AND (ie_encerrar_ivc_auto_w = 'S') THEN
							ie_encerrar_ivc_w := 'S';
						END IF;


					END IF;

					UPDATE	prescr_procedimento
					SET	dt_coleta = dt_atualizacao_w,
						ie_amostra = 'S',
						nm_usuario = nm_usuario_p
					WHERE	nr_prescricao = coalesce(nr_prescricao_p, nr_prescr_log_w)
					AND	nr_sequencia = coalesce(nr_seq_item_p,nr_sequencia_item_w);

					IF (nr_seq_exame_w IS NOT NULL AND nr_seq_exame_w::text <> '') AND (ie_altera_status_lab_w	= 'S') THEN
						UPDATE	prescr_procedimento
						SET	ie_status_atend	= ie_status_novo_w
						WHERE	nr_prescricao = coalesce(nr_prescricao_p, nr_prescr_log_w)
						AND	nr_sequencia = coalesce(nr_seq_item_p,nr_sequencia_item_w);
						--AND	ie_status_atend <= 20; 	OS 361305
					END IF;

					--Finalizar CPOE ao administrar procedimento
					if (coalesce(nr_seq_item_cpoe_w,0) > 0) and (coalesce(cd_funcao_origem_w,0) = 2314) then

						dt_fim_w :=	dt_horario_adm_w;

						if (dt_fim_w < dt_horario_w) then	
							dt_fim_w :=	dt_horario_w;
						end if;

						select	max(coalesce('S','N'))
						into STRICT	ie_proc_w
						from	cpoe_procedimento
						where	nr_sequencia = nr_seq_item_cpoe_w;

						if	((coalesce(ie_proc_w,'N') = 'S') and (ie_param8_cpoe_w = 'A')) then
							update	cpoe_procedimento
							set 	dt_fim =  trunc(dt_fim_w + 1/24,'hh24') - 1/1440,
									nm_usuario = nm_usuario_p,
									dt_atualizacao = clock_timestamp()
							where	nr_sequencia = nr_seq_item_cpoe_w
							and 	coalesce(ie_evento_unico,'N') = 'S'
							and		ie_administracao = 'P';
						elsif (ie_param8_cpoe_w = 'A') then						
							update	cpoe_anatomia_patologica
							set 	dt_fim =  trunc(dt_fim_w + 1/24,'hh24') - 1/1440,
									nm_usuario = nm_usuario_p,
									dt_atualizacao = clock_timestamp()
							where	nr_sequencia = nr_seq_item_cpoe_w
							and		ie_administracao = 'P';
						end if;						
					end if;					

				ELSIF (ie_alteracao_p = 4) THEN -- reversao da realizacao do horario
					select	coalesce(max('S'), 'N')
					into STRICT	ie_pode_reverter_w
					from	prescr_proc_hor
					where	nr_sequencia   = nr_seq_horario_w
					and		nm_usuario_adm = nm_usuario_p;

					if	(ie_pode_reverter_w = 'N' AND ie_param682_w = 'N') then
						CALL Wheb_mensagem_pck.exibir_mensagem_abort(452717);
					end if;				

					UPDATE	prescr_mat_hor
					SET	dt_fim_horario	 = NULL,
						nm_usuario_adm	 = NULL
					WHERE	nr_seq_hor_glic		= nr_seq_horario_w
					AND	(dt_fim_horario IS NOT NULL AND dt_fim_horario::text <> '');				
					
					--JRS232 starts
                    Begin
                      delete from prescr_proc_hor_part_name where nr_seq_prescr_proc_hor = nr_seq_horario_w;
                    Exception
                     When Others then
                     null;
                    end;
                    --JRS232 ends 
					UPDATE	prescr_proc_hor
					SET	dt_fim_horario	 = NULL,
						nm_usuario_adm	 = NULL,
						dt_inicio_proced  = NULL
					WHERE	nr_sequencia 	= nr_seq_horario_w
					AND	(dt_fim_horario IS NOT NULL AND dt_fim_horario::text <> '');

					qt_registro_w := 0;

					GET DIAGNOSTICS ora2pg_rowcount = ROW_COUNT;


					IF ( ora2pg_rowcount > 0) THEN
						qt_registro_w := 1;
					END IF;

					UPDATE	prescr_procedimento
					SET	dt_coleta  = NULL,
						ie_amostra = 'N',
						DT_INTEGRACAO_COLETA  = NULL
					WHERE	nr_prescricao = nr_prescricao_p
					AND	nr_sequencia = coalesce(nr_seq_item_p,nr_sequencia_item_w);

					IF (nr_seq_exame_w IS NOT NULL AND nr_seq_exame_w::text <> '') AND (ie_altera_status_lab_w	= 'S') THEN
						UPDATE	prescr_procedimento
						SET	ie_Status_atend	= ie_Status_atend_w
						WHERE	nr_prescricao	= nr_prescricao_p
						AND	nr_sequencia	= nr_seq_item_w;
					END IF;


					IF (ie_altera_status_pa_w = 'S' OR (ie_altera_status_pa_w = 'L' AND
						coalesce(nr_seq_exame_w::text, '') = '')) THEN
						BEGIN
						SELECT	coalesce(MAX(ie_cobra_adep),'S')
						INTO STRICT	ie_cobra_adep_w
						FROM	procedimento
						WHERE	cd_procedimento		= cd_procedimento_w
						AND	ie_origem_proced	= ie_origem_proced_w;

						IF (ie_cobra_adep_w = 'S') THEN
							IF (ie_cobra_proc_hor_w = 'S') THEN
								CALL Estornar_ProPaci_Prescr_Proc(nr_prescricao_w,nr_seq_item_w,nm_usuario_p,nr_seq_horario_w);
							ELSE
								CALL Estornar_ProPaci_Prescr_Proc(nr_prescricao_w,nr_seq_item_w,nm_usuario_p);
							END IF;
						END IF;
						END;
					END IF;

					--Reverter dt_fim CPOE
					if (coalesce(nr_seq_item_cpoe_w,0) > 0) and (coalesce(cd_funcao_origem_w,0) = 2314) then

						update	cpoe_procedimento
						set dt_fim = (cpoe_obter_data_hora_form(dt_inicio,hr_prim_horario) + 1) - 1/1440,
							nm_usuario = nm_usuario_p,
							dt_atualizacao = clock_timestamp()
						where	nr_sequencia = nr_seq_item_cpoe_w
						and coalesce(ie_evento_unico,'N') = 'S'
						and	ie_administracao = 'P'
						and	(dt_fim IS NOT NULL AND dt_fim::text <> '');

					end if;				

					SELECT	coalesce(MAX('S'),'N')
					INTO STRICT	ie_atualizou_w
					FROM	prescr_PROC_hor where 	nr_sequencia	=  nr_seq_horario_w
					AND		coalesce(dt_fim_horario::text, '') = ''
					AND 	coalesce(nm_usuario_adm::text, '') = '' LIMIT 1;

					if (ie_atualizou_w = 'S') and (ie_conferir_med_antes_adm_w = 'S') then					
						CALL reverter_lote_fornec_adm(nr_seq_horario_w, nr_prescricao_w, nr_seq_item_w, dt_horario_w, nm_usuario_p, 'IA');
					end if;

					select	max(a.nr_sequencia)
					into STRICT	nr_seq_proc_paciente_w
					from	procedimento_paciente a
					where 	a.nr_prescricao		= nr_prescricao_w
					and	((a.nr_sequencia_prescricao	= nr_seq_item_w)
					or 	(coalesce(a.nr_sequencia_prescricao::text, '') = '' and a.nr_seq_proc_princ = (	SELECT	max(x.nr_sequencia)
														from	procedimento_paciente x
														where	x.nr_sequencia_prescricao	= nr_seq_item_w
														and	x.nr_prescricao		= nr_prescricao_w
														and	x.qt_procedimento 	> 0
														and	coalesce(x.nr_seq_proc_est::text, '') = '')))
					and	a.qt_procedimento > 0
					and	coalesce(a.nr_seq_proc_est::text, '') = '';

					gerar_proc_pac_medico_adep(nr_seq_proc_paciente_w,nr_seq_horario_w);

				ELSIF (ie_alteracao_p IN (5,9)) THEN -- suspensao do horario
					UPDATE	prescr_proc_hor
					SET		dt_suspensao			= dt_atualizacao_w,
							nm_usuario_susp			= nm_usuario_p,
							dt_primeira_checagem	 = NULL
					WHERE	nr_sequencia			= nr_seq_horario_w
					AND	coalesce(dt_suspensao::text, '') = ''
					AND	coalesce(dt_fim_horario::text, '') = '';
					
					--JRS232 starts
                    nr_seq_proc_hor_part_name_w := null;
                    Begin
                      select nextval('prescr_proc_hor_part_name_seq') into STRICT nr_seq_proc_hor_part_name_w;
                      insert into prescr_proc_hor_part_name(nr_sequencia, nr_seq_prescr_proc_hor, nr_seq_part_name, ie_procedure_time, ds_start_time, ds_end_time, ds_time_req,cd_setor_atendimento)
                       values (nr_seq_proc_hor_part_name_w, nr_seq_horario_w, nr_seq_part_name_p, ie_procedure_time_p, start_time_p, end_time_p, req_time_p, dept_location_p);
                    exception
                      when others then
                        nr_seq_proc_hor_part_name_w := null;
                    end;
                   --JRS232 ends
					qt_registro_w := 0;

					GET DIAGNOSTICS ora2pg_rowcount = ROW_COUNT;


					IF ( ora2pg_rowcount > 0) THEN
						qt_registro_w := 1;
					END IF;

					cd_evolucao_p := Gerar_evolPaci_automa('P', nm_usuario_p, nr_atendimento_p, ds_procedimento_w, nr_seq_horario_w, 'S', obter_expressao_idioma(488096), clock_timestamp(), nr_prescricao_ww, qt_dose_w, ds_unidade_medida_w, null, cd_evolucao_p, ie_palm_p);

					IF (ie_susp_gestao_exame_w = 'S') AND (ie_tipo_item_p IN ('L', 'P')) AND (nr_seq_exame_w IS NOT NULL AND nr_seq_exame_w::text <> '') THEN

						UPDATE	prescr_procedimento
						SET	dt_suspensao		= dt_atualizacao_w,
							ie_suspenso		= 'S',
							nm_usuario_susp		= nm_usuario_p
						WHERE	nr_prescricao		= nr_prescricao_w
						AND	nr_sequencia		= nr_seq_item_w
						AND	coalesce(dt_suspensao::text, '') = '';

						qt_registro_w := 0;

						GET DIAGNOSTICS ora2pg_rowcount = ROW_COUNT;


						IF ( ora2pg_rowcount > 0) THEN
							qt_registro_w := 1;
						END IF;
					END IF;

				ELSIF (ie_alteracao_p = 6) THEN -- reversao da suspensao do horario
					UPDATE	prescr_proc_hor
					SET	dt_suspensao		 = NULL,
						nm_usuario_susp		 = NULL
					WHERE	nr_sequencia		= nr_seq_horario_w
					AND	(dt_suspensao IS NOT NULL AND dt_suspensao::text <> '')
					AND	Obter_prescricao_suspenca(nr_prescricao) = 'N'
					AND	obter_se_proc_suspenso(nr_prescricao, nr_seq_procedimento) = 'N';
					
					--JRS232 starts
                    Begin
                      delete from prescr_proc_hor_part_name where nr_seq_prescr_proc_hor = nr_seq_horario_w;
                    Exception
                     When Others then
                     null;
                    end;
                    --JRS232 ends
				END IF;

				END;
			ELSIF (ie_inicia_proced_p = 'S') THEN
				BEGIN
				IF (ie_alteracao_p	= 26) THEN
					BEGIN
					UPDATE	prescr_proc_hor
					SET	dt_inicio_proced = dt_horario_adm_w
					WHERE	nr_sequencia 	= nr_seq_horario_w
					AND	coalesce(dt_fim_horario::text, '') = ''
					AND	coalesce(dt_suspensao::text, '') = ''
					AND	coalesce(dt_inicio_proced::text, '') = '';
					qt_registro_w := 0;

					GET DIAGNOSTICS ora2pg_rowcount = ROW_COUNT;


					IF ( ora2pg_rowcount > 0) THEN
						qt_registro_w := 1;
					END IF;
					END;
				ELSIF (ie_alteracao_p = 27) THEN
					BEGIN
					UPDATE	prescr_proc_hor
					SET	dt_fim_horario	= dt_horario_adm_w,
						nm_usuario_adm	= nm_usuario_p
					WHERE	nr_sequencia 	= nr_seq_horario_w
					AND	coalesce(dt_fim_horario::text, '') = ''
					AND	coalesce(dt_suspensao::text, '') = ''
					AND	(dt_inicio_proced IS NOT NULL AND dt_inicio_proced::text <> '');

					IF (dt_inicio_proced_w IS NOT NULL AND dt_inicio_proced_w::text <> '') THEN
						BEGIN

						qt_dif_datas_w	:= CEIL(obter_hora_entre_datas(dt_inicio_proced_w, dt_horario_adm_w));

						IF (qt_dif_datas_w = 0) THEN
							qt_dif_datas_w := 1;
						END IF;
						qt_procedimento_ww := qt_procedimento_w * qt_dif_datas_w;


						SELECT	coalesce(MAX(ie_cobra_adep),'S')
						INTO STRICT	ie_cobra_adep_w
						FROM	procedimento
						WHERE	cd_procedimento		= cd_procedimento_w
						AND	ie_origem_proced	= ie_origem_proced_w;

						IF (ie_cobra_adep_w = 'S') AND
							((coalesce(nr_seq_proc_princ_w::text, '') = '') OR (COALESCE(ie_mostra_proc_assoc_w, 'N') = 'S')) THEN

							if (ie_regra_proc_conv_w	= 'S') then
								SELECT * FROM Obter_Proc_Tab_Interno(nr_seq_proc_interno_w, nr_prescricao_w, nr_atendimento_p, 0, cd_proc_conta_w, ie_origem_proc_conta_w, null, null) INTO STRICT cd_proc_conta_w, ie_origem_proc_conta_w;
							else
								cd_proc_conta_w			:= cd_procedimento_w;
								ie_origem_proc_conta_w	:= ie_origem_proced_w;
							end if;

							CALL Gerar_Proc_Pac_Item_Prescr(nr_prescricao_w, nr_seq_item_w, NULL,NULL, NULL, cd_proc_conta_w, ie_origem_proc_conta_w,
								qt_procedimento_ww, cd_setor_exec_w, 1, clock_timestamp(), nm_usuario_p, NULL, nr_seq_exame_w, NULL,NULL,NULL,NULL,NULL, nr_seq_interno_w);

						END IF;

						END;
					END IF;
					qt_registro_w := 0;

					GET DIAGNOSTICS ora2pg_rowcount = ROW_COUNT;


					IF ( ora2pg_rowcount > 0) THEN
						qt_registro_w := 1;
					END IF;
					END;
				END IF;

				END;
			END IF;

			CALL gravar_log_tasy(80, 'line 4342 qt_registro_w : ' || qt_registro_w || chr(10) ||
								'nr_seq_horario_w : ' || nr_seq_horario_w, nm_usuario_p);

			GET DIAGNOSTICS ora2pg_rowcount = ROW_COUNT;


			IF ( ora2pg_rowcount > 0) OR (qt_registro_w > 0) THEN
				begin
				SELECT	nextval('prescr_mat_alteracao_seq')
				INTO STRICT	nr_seq_alteracao_w
				;

				ds_obs_final_w := SUBSTR(ds_observacao_p,1,2000);

				IF (coalesce(ie_palm_p,'N') = 'S') THEN
					IF (ds_obs_final_w IS NOT NULL AND ds_obs_final_w::text <> '') AND (ds_obs_final_w <> '') THEN
						ds_obs_final_w := substr(wheb_mensagem_pck.get_texto(307615, 'DS_OBSERVACAO_W=' || ds_obs_final_w),1,2000); -- Tipo de checagem: ADEP PDA - #@DS_OBSERVACAO_W#@
					ELSE
						ds_obs_final_w := wheb_mensagem_pck.get_texto(307616); -- Tipo de checagem: ADEP PDA
					END IF;
				END IF;

				IF (coalesce(nr_seq_proc_princ_w::text, '') = '' or coalesce(ie_mostra_proc_assoc_w, 'N') = 'S') THEN
					INSERT	INTO	prescr_mat_alteracao(
						nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_prescricao,
						nr_seq_procedimento,
						nr_seq_horario_proc,
						dt_alteracao,
						cd_pessoa_fisica,
						ie_alteracao,
						ds_justificativa,
						ie_tipo_item,
						dt_horario,
						nr_atendimento,
						cd_item,
						nr_seq_proc_interno,
						cd_medico_solic,
						ds_observacao,
						ie_mostra_adep,
						nr_seq_assinatura,
						nr_seq_lote,
						ie_acm_sn,
						nr_seq_prot_glic,
						cd_procedimento,
						ie_origem_proced,
						qt_dose_adm,
						cd_funcao,
						nr_seq_motivo_susp
						)
					VALUES (
						nr_seq_alteracao_w,
						dt_atualizacao_w,
						nm_usuario_p,
						dt_atualizacao_w,
						nm_usuario_p,
						nr_prescricao_w,
						nr_seq_item_w,
						nr_seq_horario_w,
						dt_horario_adm_w,
						obter_dados_usuario_opcao(nm_usuario_p,'C'),
						ie_alteracao_p,
						ds_justificativa_w,
						ie_tipo_item_p,
						dt_horario_w,
						nr_atendimento_p,
						cd_item_p,
						nr_seq_proc_interno_w,
						cd_medico_solic_p,
						ds_obs_final_w,
						ie_mostra_adep_w,
						nr_seq_assinatura_p,
						nr_seq_lote_w,
						ie_acm_sn_p,
						nr_seq_prot_glic_w,
						cd_procedimento_w,
						ie_origem_proced_w,
						qt_adm_p,
						cd_funcao_p,
						nr_seq_motivo_susp_p
						);

					nr_seq_evento_w	:= nr_seq_alteracao_w;	

					SELECT	nextval('prescr_mat_alteracao_comp_seq')
					INTO STRICT	nr_seq_alteracao_comp_w
					;

					INSERT INTO prescr_mat_alteracao_comp(nr_sequencia,
						dt_atualizacao,
						cd_intervalo, 
						nm_usuario, 
						dt_atualizacao_nrec, 
						nm_usuario_nrec, 
						nr_sequencia_prescr,
						cd_evolucao,
						nr_seq_topo_lat)
					VALUES (
						nr_seq_alteracao_comp_w,
						dt_atualizacao_w,
						cd_intervalo_w,
						nm_usuario_p,
						dt_atualizacao_w,
						nm_usuario_p,
						nr_seq_alteracao_w,
						cd_evolucao_p,
						nr_seq_topo_lat_p);

					if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;
				END IF;

				if (ie_alteracao_p = 4) then
					UPDATE	prescr_mat_alteracao
					SET	ie_evento_valido	= 'N'
					WHERE nr_prescricao 	= nr_prescricao_w
					AND nr_seq_horario_proc = nr_seq_horario_w
					AND ie_alteracao 		= CASE WHEN ie_tipo_item_p='L' THEN 8  ELSE 3 END;
				end if;

				if (ie_alteracao_p = 6) then
					UPDATE	prescr_mat_alteracao
					SET	ie_evento_valido	= 'N'
					WHERE nr_prescricao 	= nr_prescricao_w
					AND nr_seq_horario_proc = nr_seq_horario_w
					AND ie_alteracao 		= CASE WHEN ie_tipo_item_p='P' THEN 5  ELSE 3 END;
				end if;

				ie_lancar_w	:= 'S';
				IF (ie_alteracao_p IN (3,8)) AND (ie_lancar_w = 'S') THEN
					IF (ie_altera_status_pa_w = 'S') OR
						((ie_altera_status_pa_w = 'L') AND (coalesce(nr_seq_exame_w::text, '') = '')) THEN
						BEGIN
						ie_existe_w	:= 'N';

						SELECT	coalesce(MAX(ie_cobrar_horario),'N')
						INTO STRICT	ie_cobrar_horario_w
						FROM	procedimento
						WHERE	cd_procedimento		= cd_procedimento_w
						AND	ie_origem_proced	= ie_origem_proced_w;

						SELECT	coalesce(MAX(ie_cobrar_horario),'N')
						INTO STRICT	ie_cobrar_horarioI_w
						FROM	proc_interno
						WHERE	nr_sequencia	= nr_seq_proc_interno_w;


						if (VarIe_Cobra_Prim_hor_w = 'S') or (ie_cobrar_horario_w = 'S') or (ie_cobrar_horarioI_w = 'S')  then
							select	coalesce(max('S'),'N')
							into STRICT	ie_existe_w
							from	prescr_proc_hor a where		a.nr_prescricao	= nr_prescricao_w
							and		a.nr_seq_procedimento = nr_seq_item_w
							and		a.nr_sequencia	<> nr_seq_horario_w
							and		PKG_DATE_UTILS.start_of(a.dt_horario,'dd',0) = PKG_DATE_UTILS.start_of(dt_horario_w,'dd',0)
							and		(a.dt_fim_horario IS NOT NULL AND a.dt_fim_horario::text <> '')
							and		exists (	SELECT	1
											from	procedimento_paciente b
											where	b.nr_prescricao		= nr_prescricao_w
											and		b.nr_sequencia_prescricao	= nr_seq_item_w) LIMIT 1;

							if (ie_existe_w = 'N') then
								select	coalesce(max('S'),'N')
								into STRICT	ie_existe_w
								from	prescr_proc_hor a,
										prescr_medica b where		a.nr_prescricao		= b.nr_prescricao
								and		b.nr_atendimento	= nr_atendimento_p
								and		a.cd_procedimento		= cd_procedimento_w
								and		a.ie_origem_proced	= ie_origem_proced_w
								and		a.nr_sequencia		<> nr_seq_horario_w
								and		PKG_DATE_UTILS.start_of(a.dt_horario,'dd',0) = PKG_DATE_UTILS.start_of(dt_horario_w,'dd',0)
								and		(a.dt_fim_horario IS NOT NULL AND a.dt_fim_horario::text <> '')
								and		exists (	SELECT	1
												from	procedimento_paciente x
												where	x.nr_prescricao		= a.nr_prescricao
												and	x.nr_sequencia_prescricao = a.nr_seq_procedimento) LIMIT 1;
							END IF;

							if (ie_existe_w = 'S') then
								IF (ie_cobrar_horario_w = 'N') AND (coalesce(nr_seq_proc_interno_w,0) = 0) THEN
									ie_existe_w := 'N';
								ELSIF (coalesce(nr_seq_proc_interno_w,0) > 0) THEN
									IF (ie_cobrar_horarioI_w = 'N') THEN
										ie_existe_w	:= 'N';
									END IF;
								END IF;
							end if;
						END IF;

						IF (coalesce(ie_proc_regra_p,'N') = 'N') THEN

							SELECT	coalesce(MAX(ie_cobra_adep),'S')
							INTO STRICT	ie_cobra_adep_w
							FROM	procedimento
							WHERE	cd_procedimento		= cd_procedimento_w
							AND	ie_origem_proced	= ie_origem_proced_w;

							IF (ie_cobra_adep_w = 'S') AND (ie_existe_w = 'N') AND
								((coalesce(nr_seq_proc_princ_w::text, '') = '') OR (COALESCE(ie_mostra_proc_assoc_w, 'N') = 'S')) THEN
								IF (ie_cobra_proc_hor_w = 'N') THEN
									CALL Gerar_Proc_Pac_Prescricao(nr_prescricao_w, nr_seq_item_w, cd_perfil_p, 1113, nm_usuario_p, '', '', '');
								ELSE
									if (ie_regra_proc_conv_w	= 'S') then
										SELECT * FROM Obter_Proc_Tab_Interno(nr_seq_proc_interno_w, nr_prescricao_w, nr_atendimento_p, 0, cd_proc_conta_w, ie_origem_proc_conta_w, null, null) INTO STRICT cd_proc_conta_w, ie_origem_proc_conta_w;
									else
										cd_proc_conta_w			:= cd_procedimento_w;
										ie_origem_proc_conta_w	:= ie_origem_proced_w;
									end if;
									CALL gerar_proc_pac_item_prescr(nr_prescricao_w, nr_seq_item_w,NULL,NULL,nr_seq_proc_interno_w, cd_proc_conta_w, ie_origem_proc_conta_w, qt_procedimento_w, cd_setor_exec_w,1, clock_timestamp(), nm_usuario_p, cd_medico_solic_p, nr_seq_exame_w, NULL,NULL,NULL,NULL,NULL, nr_seq_interno_w, NULL, NULL, nr_seq_horario_w);

									select	max(nr_sequencia)
									into STRICT	nr_seq_proc_paciente_w
									from	procedimento_paciente
									where	nr_prescricao = nr_prescricao_w
									and		nr_sequencia_prescricao = nr_seq_item_w
									and		cd_procedimento = cd_proc_conta_w
									and		nr_seq_proc_interno = nr_seq_proc_interno_w
									and		ie_origem_proced = ie_origem_proc_conta_w
									and		qt_procedimento = qt_procedimento_w
									and		cd_acao = 1
									and		nm_usuario = nm_usuario_p
									and		nr_atendimento = nr_atendimento_p;

									gerar_proc_pac_medico_adep(nr_seq_proc_paciente_w,nr_seq_horario_w);

								END IF;
							END IF;
						ELSIF (ie_proc_regra_p = 'S') AND (cd_procedimento_regra_p IS NOT NULL AND cd_procedimento_regra_p::text <> '') AND (ie_origem_proced_regra_p IS NOT NULL AND ie_origem_proced_regra_p::text <> '') THEN

							SELECT	coalesce(MAX(ie_cobra_adep),'S')
							INTO STRICT	ie_cobra_adep_w
							FROM	procedimento
							WHERE	cd_procedimento		= cd_procedimento_regra_p
							AND		ie_origem_proced	= ie_origem_proced_regra_p;

							IF (ie_cobra_adep_w = 'S') AND
								((coalesce(nr_seq_proc_princ_w::text, '') = '') OR (COALESCE(ie_mostra_proc_assoc_w, 'N') = 'S')) THEN

								-- Admite valor informado no momento da administracao para o procedimento selecionado
								IF (ie_inf_quant_proc_regra_w = 'S') AND (coalesce(qt_adm_p,0) > 0) THEN
									qt_procedimento_w	:= coalesce(qt_adm_p, qt_procedimento_w);
								END IF;

								if (ie_regra_proc_conv_w	= 'S') then
									SELECT * FROM Obter_Proc_Tab_Interno(nr_seq_proc_interno_w, nr_prescricao_w, nr_atendimento_p, 0, cd_proc_conta_w, ie_origem_proc_conta_w, null, null) INTO STRICT cd_proc_conta_w, ie_origem_proc_conta_w;
								else
									cd_proc_conta_w			:= cd_procedimento_w;
									ie_origem_proc_conta_w	:= ie_origem_proced_w;
								end if;
								CALL gerar_proc_pac_item_prescr(nr_prescricao_w, nr_seq_item_w,NULL,NULL,nr_seq_proc_interno_w, cd_proc_conta_w,ie_origem_proc_conta_w, qt_procedimento_w, cd_setor_exec_w,1, clock_timestamp(), nm_usuario_p, cd_medico_solic_p, nr_seq_exame_w, NULL,NULL,NULL, cd_procedimento_regra_p, ie_origem_proced_regra_p,nr_seq_proc_interno_regra_p, nr_seq_interno_w);

								select	max(nr_sequencia)
								into STRICT	nr_seq_proc_paciente_w
								from	procedimento_paciente
								where	nr_prescricao = nr_prescricao_w
								and		nr_sequencia_prescricao = nr_seq_item_w
								and		cd_procedimento = cd_proc_conta_w
								and		nr_seq_proc_interno = nr_seq_proc_interno_w
								and		ie_origem_proced = ie_origem_proc_conta_w
								and		qt_procedimento = qt_procedimento_w
								and		cd_acao = 1
								and		nm_usuario = nm_usuario_p
								and		nr_atendimento = nr_atendimento_p;

								gerar_proc_pac_medico_adep(nr_seq_proc_paciente_w,nr_seq_horario_w);

							END IF;
						END IF;

						END;
					END IF;

       					IF (ie_alteracao_p = 3) THEN
						-- Medicos auxiliares/participantes
						CALL Gerar_adep_proced_partic(nr_prescricao_w, nr_seq_item_w, nm_usuario_p);
					END IF;
				END IF;

				SELECT	CASE WHEN coalesce(MAX(ie_ctrl_glic),'NC')='NC' THEN 'AP'  ELSE MAX(ie_ctrl_glic) END
				INTO STRICT	ie_tipo_item_assoc_w
				FROM	proc_interno
				WHERE	nr_sequencia	= nr_seq_proc_interno_w;

				IF (coalesce(ie_exec_proc_assoc_w,'N') = 'S') THEN
					CALL gerar_alteracao_proc_assoc( nr_atendimento_p, nr_prescricao_w, nr_seq_interno_w, dt_horario_w, ie_alteracao_p, ie_tipo_item_p, nm_usuario_p,
							cd_perfil_p, cd_medico_solic_p, ds_observacao_p, nr_seq_assinatura_p, ie_acm_sn_p, ie_inicia_proced_p, cd_estabelecimento_p, ie_palm_p, nr_seq_prot_glic_p);
				END IF;

				IF	((coalesce(ie_palm_p,'N') <> 'S') or (ie_conferir_med_antes_adm_w  <> 'N')) THEN
					CALL gerar_alter_horario_item_assoc(nr_atendimento_p, ie_tipo_item_assoc_w, nr_prescricao_w, nr_seq_item_w, cd_item_p, dt_horario_w, dt_horario_adm_w, ie_alteracao_p, nm_usuario_p, ie_alterar_item_assoc_p);
				END IF;

				IF (ie_alteracao_p IN (3,5)) THEN
					CALL definir_setor_exec_adep(nr_atendimento_p,ie_tipo_item_p,nr_prescricao_w,nr_seq_item_w,nr_seq_horario_w,NULL);
				END IF;
				exception when others then
					CALL gravar_log_tasy(80, 'line 4654 ds_erro_w : ' || substr(sqlerrm,1,2000), nm_usuario_p);
				end;
			END IF;
			END;
		END LOOP;
		CLOSE c04;

		IF (ie_encerrar_ccg_w = 'S') THEN
			CALL Encerrar_CCG_Vencido(nr_atendimento_p, nm_usuario_p);
		END IF;

		IF (ie_encerrar_ivc_w = 'S') THEN
			CALL Encerrar_IVC_Vencido(nr_atendimento_p, nm_usuario_p);
		END IF;

	ELSIF (ie_tipo_item_p = 'R') THEN

		ie_conta_rec_w				:= Wheb_assist_pck.obterParametroFuncao(1113,347);

		OPEN c05;
		LOOP
		FETCH c05 INTO	nr_prescricao_w,
				nr_seq_item_w,
				nr_seq_horario_w,
				cd_recomendacao_w,
				ds_recomendacao_w,
				ie_status_rec_w,
				cd_funcao_origem_w,
				nr_seq_item_cpoe_w,
				dt_horario_w;
		EXIT WHEN NOT FOUND; /* apply on c05 */
			BEGIN

			ie_abriu_cursor_w	:= true;
			
            IF (ie_alteracao_p = 3) THEN -- administracao do horario
              if (OBTER_SE_INTEGRACAO_ATIVA(972, 245) = 'S') then
                
                BEGIN
                    cd_recom_sedation_holiday_w := obter_valor_param_usuario(2314, 45, 0, coalesce(wheb_usuario_pck.get_nm_usuario, nm_usuario_p), wheb_usuario_pck.get_cd_estabelecimento);
                EXCEPTION
                    WHEN data_exception
                        THEN NULL;
                END;

                  if (cd_recom_sedation_holiday_w = cd_recomendacao_w) then
                      json_sedation_holiday := philips_json();
                      json_sedation_holiday.put('typeID', 'VSIFS');
                      json_sedation_holiday.put('messageDateTime', TO_CHAR((CURRENT_TIMESTAMP AT TIME ZONE 'UTC'), 'MM-DD-YYYY HH24:MI:SS.SSSSS'));
                      json_sedation_holiday.put('objectID', '05caaa1b0ce64ce5ac38a5acfdb174ea');
                      json_sedation_holiday.put('patientHealthSystemStayID', LPAD(nr_atendimento_p, 32, 0));
                      json_sedation_holiday.put('columnDate', TO_CHAR((CURRENT_TIMESTAMP AT TIME ZONE 'UTC'), 'YYYY-MM-DD"T"HH24:MI'));
                      json_sedation_holiday.put('columnDateGMTOffset', '0');
                      json_sedation_holiday.put('cellLabelID', '3e8b402da22f403ba0a5f1f56e87fd44');
                      json_sedation_holiday.put('cellTypeCatID', 'a2eb36f5217d611cbbd4c180d720bb39');
                      json_sedation_holiday.put('resultSourceID', '0253220e18bc4089a4dd1ad350abf795');
                      json_sedation_holiday.put('objectIDCell', '0a464554e1384c5084f82bc291bc7d12');
                      json_sedation_holiday.put('resultStatusIDCell', '39d8f36dc43045c8b04a0a06f20b6351');
                      json_sedation_holiday.put('objectIDCellAttribute', '69d99f3748e84e12a2e0a45eb003f61d');
                      json_sedation_holiday.put('cellTypeValueID', 'c98dd127072a4899af8f981f548a0f0b');
                      json_sedation_holiday.put('resultStatusIDCellAttribute', '9ef5ea20a97045fcb26dc3fcb86b6c24');
                      json_sedation_holiday.put('attributeValue', 'Yes');

                      dbms_lob.createtemporary(envio_integracao_bb, TRUE);
                      json_sedation_holiday.(envio_integracao_bb);

                      SELECT BIFROST.SEND_INTEGRATION_CONTENT('Blackboard_Sedation_Holiday',envio_integracao_bb,wheb_usuario_pck.get_nm_usuario) into STRICT retorno_integracao_bb;
                  end if;
              end if;

				cd_evolucao_p := Gerar_evolPaci_automa('R', nm_usuario_p, nr_atendimento_p, ds_recomendacao_w, nr_seq_horario_w, 'A', obter_expressao_idioma(488570), dt_horario_adm_w, nr_prescricao_w, null, null, null, cd_evolucao_p, ie_palm_p, cd_recomendacao_w);

				update	prescr_rec_hor
				set		dt_fim_horario	= dt_atualizacao_w,
						nm_usuario_adm	= nm_usuario_p
				where	nr_sequencia	= nr_seq_horario_w
				and		coalesce(dt_fim_horario::text, '') = ''
				and		coalesce(dt_suspensao::text, '') = '';

				GET DIAGNOSTICS ie_atualizou_reg_w = ROW_COUNT > 0;

				if (coalesce(nr_seq_item_cpoe_w,0) > 0) and (coalesce(cd_funcao_origem_w,0) = 2314) then

					dt_fim_w :=	dt_horario_adm_w;

					if (dt_fim_w < dt_horario_w) then	
						dt_fim_w :=	dt_horario_w;
					end if;

					if (ie_param8_cpoe_w = 'A') then
						update	cpoe_recomendacao
						set 	dt_fim =  trunc(dt_fim_w + 1/24,'hh24') - 1/1440,
								nm_usuario = nm_usuario_p,
								dt_atualizacao = clock_timestamp()
						where	nr_sequencia = nr_seq_item_cpoe_w
						and 	coalesce(ie_evento_unico,'N') = 'S'
						and		ie_administracao = 'P';
					end if;						
				end if;	

			ELSIF (ie_alteracao_p = 4) THEN -- reversao da realizacao do horario
				select	coalesce(max('S'), 'N')
				into STRICT	ie_pode_reverter_w
				from	prescr_rec_hor
				where	nr_sequencia   = nr_seq_horario_w
				and		nm_usuario_adm = nm_usuario_p;

				if	(ie_pode_reverter_w = 'N' AND ie_param682_w = 'N') then
					CALL Wheb_mensagem_pck.exibir_mensagem_abort(452717);
				end if;

				UPDATE	prescr_rec_hor
				SET	dt_fim_horario	 = NULL,
					nm_usuario_adm	 = NULL
				WHERE	nr_sequencia 		= nr_seq_horario_w
				AND	(dt_fim_horario IS NOT NULL AND dt_fim_horario::text <> '');

				GET DIAGNOSTICS ie_atualizou_reg_w = ROW_COUNT > 0;

			ELSIF (ie_alteracao_p = 5) THEN -- suspensao do horario
				cd_evolucao_p := Gerar_evolPaci_automa('R', nm_usuario_p, nr_atendimento_p, ds_recomendacao_w, nr_seq_horario_w, 'S', obter_expressao_idioma(488096), clock_timestamp(), nr_prescricao_w, null, null, null, cd_evolucao_p, ie_palm_p);
				UPDATE	prescr_rec_hor
				SET	dt_suspensao		= dt_atualizacao_w,
					nm_usuario_susp		= nm_usuario_p,
					nr_seq_motivo_susp	= nr_seq_motivo_susp_p
				WHERE	nr_sequencia 		= nr_seq_horario_w
				AND	coalesce(dt_suspensao::text, '') = ''
				AND	coalesce(dt_fim_horario::text, '') = '';

				GET DIAGNOSTICS ie_atualizou_reg_w = ROW_COUNT > 0;

				i	:= coalesce(Vetor_Lista_Gerar_w.Count,0) + 1;
				Vetor_Lista_Gerar_w[i].nr_prescricao  	:= nr_prescricao_w;
				Vetor_Lista_Gerar_w[i].nr_seq_material 	:= nr_seq_item_w;
				Vetor_Lista_Gerar_w[i].nr_seq_horario 	:= nr_seq_horario_w;
			ELSIF (ie_alteracao_p = 6) THEN -- reversao da suspensao do horario
				UPDATE	prescr_rec_hor
				SET	dt_suspensao 		 = NULL,
					nm_usuario_susp		 = NULL,
					nr_seq_motivo_susp	 = NULL
				WHERE	nr_sequencia 		= nr_seq_horario_w
				AND	(dt_suspensao IS NOT NULL AND dt_suspensao::text <> '');

				GET DIAGNOSTICS ie_atualizou_reg_w = ROW_COUNT > 0;

			END IF;

			if (ie_atualizou_reg_w) then
				SELECT	nextval('prescr_mat_alteracao_seq')
				INTO STRICT	nr_seq_alteracao_w
				;

				ds_obs_final_w := SUBSTR(ds_observacao_p,1,2000);

				IF (coalesce(ie_palm_p,'N') = 'S') THEN
					IF (ds_obs_final_w IS NOT NULL AND ds_obs_final_w::text <> '') AND (ds_obs_final_w <> '') THEN
						ds_obs_final_w := substr(wheb_mensagem_pck.get_texto(307615, 'DS_OBSERVACAO_W=' || ds_obs_final_w),1,2000); -- Tipo de checagem: ADEP PDA - #@DS_OBSERVACAO_W#@
					ELSE
						ds_obs_final_w := wheb_mensagem_pck.get_texto(307616); -- Tipo de checagem: ADEP PDA
					END IF;
				END IF;

				INSERT	INTO	prescr_mat_alteracao(
									nr_sequencia,
									dt_atualizacao,
									nm_usuario,
									dt_atualizacao_nrec,
									nm_usuario_nrec,
									nr_prescricao,
									nr_seq_recomendacao,
									nr_seq_horario_rec,
									dt_alteracao,
									cd_pessoa_fisica,
									ie_alteracao,
									ds_justificativa,
									ie_tipo_item,
									dt_horario,
									nr_atendimento,
									cd_item,
									cd_medico_solic,
									ds_observacao,
									ie_mostra_adep,
									nr_seq_assinatura,
									nr_seq_lote,
									cd_funcao,
									nr_seq_motivo_susp
									)
								VALUES (
									nr_seq_alteracao_w,
									dt_atualizacao_w,
									nm_usuario_p,
									dt_atualizacao_w,
									nm_usuario_p,
									nr_prescricao_w,
									nr_seq_item_w,
									nr_seq_horario_w,
									dt_horario_adm_w,
									obter_dados_usuario_opcao(nm_usuario_p,'C'),
									ie_alteracao_p,
									ds_justificativa_w,
									ie_tipo_item_p,
									dt_horario_w,
									nr_atendimento_p,
									cd_item_p,
									cd_medico_solic_p,
									ds_obs_final_w,
									ie_mostra_adep_w,
									nr_seq_assinatura_p,
									nr_seq_lote_w,
									cd_funcao_p,
									nr_seq_motivo_susp_p);

								nr_seq_evento_w	:= nr_seq_alteracao_w;	


						SELECT	nextval('prescr_mat_alteracao_comp_seq')
						INTO STRICT	nr_seq_alteracao_comp_w
						;

						INSERT INTO prescr_mat_alteracao_comp(nr_sequencia,
							dt_atualizacao, 
							cd_intervalo, 
							nm_usuario, 
							dt_atualizacao_nrec, 
							nm_usuario_nrec, 
							nr_sequencia_prescr,
							cd_evolucao,
							nr_seq_topo_lat)
						VALUES (
							nr_seq_alteracao_comp_w,
							dt_atualizacao_w,
							cd_intervalo_w,
							nm_usuario_p,
							dt_atualizacao_w,
							nm_usuario_p,
							nr_seq_alteracao_w,
							cd_evolucao_p,
							nr_seq_topo_lat_p);


				if (ie_alteracao_p in (4, 6)) then
					UPDATE	prescr_mat_alteracao
					SET	ie_evento_valido	= 'N'
					WHERE nr_prescricao = nr_prescricao_w
					AND nr_seq_horario_rec 	= nr_seq_horario_w
					AND ie_alteracao 	= CASE WHEN ie_alteracao_p=4 THEN 3  ELSE 5 END;
				end if;	

				IF (ie_alteracao_p IN (3,5)) THEN
					CALL definir_setor_exec_adep(nr_atendimento_p,ie_tipo_item_p,nr_prescricao_w,nr_seq_item_w,nr_seq_horario_w,NULL);
				END IF;

				IF (ie_alteracao_p IN (3)) THEN
					IF (ie_conta_rec_w	= 'S') THEN
						CALL Gerar_proced_assoc_rec_conta(nr_prescricao_w, nr_seq_item_w, cd_recomendacao_w, nm_usuario_p, nr_seq_horario_w, 'G');
					END IF;
				ELSIF (ie_alteracao_p = 4) THEN
					IF (ie_conta_rec_w	= 'S') THEN
						CALL Gerar_proced_assoc_rec_conta(nr_prescricao_w, nr_seq_item_w, cd_recomendacao_w, nm_usuario_p, nr_seq_horario_w, 'E');
					END IF;
				END IF;
			ELSIF	(ie_status_rec_w = 'I' AND ie_alteracao_p = 4) THEN
				SELECT	nextval('prescr_mat_alteracao_seq')
				INTO STRICT	nr_seq_alteracao_w
				;

				ds_obs_final_w := SUBSTR(ds_observacao_p,1,2000);

				IF (coalesce(ie_palm_p,'N') = 'S') THEN
					IF (ds_obs_final_w IS NOT NULL AND ds_obs_final_w::text <> '') AND (ds_obs_final_w <> '') THEN
						ds_obs_final_w := substr(wheb_mensagem_pck.get_texto(307615, 'DS_OBSERVACAO_W=' || ds_obs_final_w),1,2000); -- Tipo de checagem: ADEP PDA - #@DS_OBSERVACAO_W#@
					ELSE
						ds_obs_final_w := wheb_mensagem_pck.get_texto(307616); -- Tipo de checagem: ADEP PDA
					END IF;
				END IF;

				INSERT	INTO	prescr_mat_alteracao(
									nr_sequencia,
									dt_atualizacao,
									nm_usuario,
									dt_atualizacao_nrec,
									nm_usuario_nrec,
									nr_prescricao,
									nr_seq_recomendacao,
									nr_seq_horario_rec,
									dt_alteracao,
									cd_pessoa_fisica,
									ie_alteracao,
									ds_justificativa,
									ie_tipo_item,
									dt_horario,
									nr_atendimento,
									cd_item,
									cd_medico_solic,
									ds_observacao,
									ie_mostra_adep,
									nr_seq_assinatura,
									nr_seq_lote,
									cd_funcao
									)
								VALUES (
									nr_seq_alteracao_w,
									dt_atualizacao_w,
									nm_usuario_p,
									dt_atualizacao_w,
									nm_usuario_p,
									nr_prescricao_w,
									nr_seq_item_w,
									nr_seq_horario_w,
									dt_horario_adm_w,
									obter_dados_usuario_opcao(nm_usuario_p,'C'),
									49,
									ds_justificativa_w,
									ie_tipo_item_p,
									dt_horario_w,
									nr_atendimento_p,
									cd_item_p,
									cd_medico_solic_p,
									ds_obs_final_w,
									ie_mostra_adep_w,
									nr_seq_assinatura_p,
									nr_seq_lote_w,
									cd_funcao_p);

								nr_seq_evento_w	:= nr_seq_alteracao_w;

				UPDATE	prescr_mat_alteracao
				SET	ie_evento_valido	= 'N'
				WHERE	nr_prescricao		= nr_prescricao_w
				AND	nr_seq_horario_rec	= nr_seq_horario_w
				AND	ie_alteracao		= 19;
			END IF;
			END;
		END LOOP;
		CLOSE c05;

	-- SAE's
	elsif (ie_tipo_item_p = 'E') then

		select	max(dt_horario)
		into STRICT	dt_horario_w
		from	pe_prescr_proc_hor
		where	nr_sequencia = nr_seq_horario_p;

		ie_inativar_sv_w			:= Wheb_assist_pck.obterParametroFuncao(1113,353);

		ds_sql_cursor_w		:=
			' select	a.nr_sequencia nr_prescricao, ' ||
			' 			b.nr_sequencia nr_seq_item, ' ||
			' 			c.nr_sequencia nr_seq_hor, ' ||
			' 			b.nr_seq_proc, ' ||
			' 			substr(obter_desc_intervencoes(b.nr_seq_proc),1,250), ' ||
			' 			substr(decode(c.dt_recusa, null,Nvl(Obter_Status_Intervencao(a.nr_sequencia, b.nr_sequencia, c.nr_sequencia), obter_status_hor_interv(c.dt_fim_horario,c.dt_suspensao)), obter_status_recusa_pac(c.dt_fim_horario,c.dt_suspensao)),1,1) ' ||
			' from		pe_prescr_proc_hor c, ' ||
			' 			pe_prescr_proc b, ' ||
			' 			pe_prescricao a ' ||
			' where		c.nr_seq_pe_prescr 	= b.nr_seq_prescr ' ||
			' and		c.nr_seq_pe_proc 	= b.nr_sequencia ' ||
			' and		b.nr_seq_prescr 	= a.nr_sequencia ' ||
			' and		a.dt_liberacao is not null ' ||
			' and		coalesce(b.ie_adep,''N'') in (''S'',''M'') ' ||
			' and		coalesce(c.ie_situacao,''A'') = ''A'' ' ||
			' and		coalesce(c.ie_horario_especial,''N'') <> ''S'' ' ||
			' and		a.nr_atendimento = ' || nr_atendimento_p || ' ' ||
			' and		obter_se_prescr_adep(a.nr_sequencia, b.nr_sequencia, ''' || nr_prescricao_p || ''', ''' || coalesce(nr_seq_item_p,nr_sequencia_item_w) || ''', ''' || nr_prescricoes_w || ''') = ''S'' ' ||
			' and		a.dt_validade_prescr > to_date(''' || to_char(dt_param_w,'dd/mm/yyyy hh24:mi:ss') || ''', ''dd/mm/yyyy hh24:mi:ss'') ' ||
			' and		b.nr_seq_proc = ' || cd_item_p || ' ' ||
			' and		c.dt_horario = to_date(''' || to_char(dt_horario_w,'dd/mm/yyyy hh24:mi:ss') || ''', ''dd/mm/yyyy hh24:mi:ss'') ';

    ds_sql_where_w := '';

		if (coalesce(cd_intervalo_p,'XPTO') = 'XPTO') then
			ds_sql_where_w		:= ' and		b.cd_intervalo is null ';
		else
			ds_sql_where_w		:= ' and		b.cd_intervalo = ''' || cd_intervalo_p || ''' ';
		end if;

		if	((coalesce(to_char(nr_prescricao_p),nr_prescricoes_w) is null) and (nr_seq_horario_p > 0)) then
			ds_sql_where_w		:= ' and		c.nr_sequencia	= ' || nr_seq_horario_p || ' ';
		end if;

		if	(ds_observacao_item_p IS NOT NULL AND ds_observacao_item_p::text <> '' AND ds_observacao_item_p <> '')  then					
			ds_sql_where_w		:= ' and		replace(substr(b.ds_observacao,1,255),chr(39),'''')	= ''' || replace(substr(ds_observacao_item_p,1,255),chr(39),'') || ''' ';			
		end if;

    if (ie_somente_horario_w = 'S') then     
        ds_sql_where_w := ds_sql_where_w || ' and c.nr_sequencia = ''' || nr_seq_horario_p || ''' ';
    end if;

		ds_sql_cursor_w		:= ds_sql_cursor_w || ds_sql_where_w ||
			' order by	a.dt_inativacao ';


		open cCursor for EXECUTE ds_sql_cursor_w;
		loop
		fetch cCursor into
			nr_prescricao_w,
			nr_seq_item_w,
			nr_seq_horario_w,
			nr_seq_proc_w,
			ds_item_w,
			ie_status_interv_w;
		EXIT WHEN NOT FOUND; /* apply on cCursor */
			begin

			varUpdate_w	:= 'N';
			ie_abriu_cursor_w	:= true;

			IF (ie_alteracao_p = 3) THEN -- administracao do horario
				UPDATE	pe_prescr_proc_hor
				SET	dt_fim_horario	= dt_atualizacao_w,
					nm_usuario_adm	= nm_usuario_p
				WHERE	nr_sequencia 		= nr_seq_horario_w
				AND	coalesce(dt_fim_horario::text, '') = ''
				AND	NR_SEQ_PE_PROC		= nr_seq_item_w
				AND	coalesce(dt_suspensao::text, '') = '';

				varUpdate_w	:= 'S';

				cd_evolucao_p := Gerar_evolPaci_automa('E', nm_usuario_p, nr_atendimento_p, ds_item_w, nr_seq_horario_w, 'A', obter_expressao_idioma(488570), dt_horario_adm_w, nr_prescricao_w, null, null, null, cd_evolucao_p, ie_palm_p);

			ELSIF (ie_alteracao_p = 4) THEN -- reversao da realizacao do horario
				select	coalesce(max('S'), 'N')
				into STRICT	ie_pode_reverter_w
				from	pe_prescr_proc_hor
				where	nr_sequencia   = nr_seq_horario_w
				and		nm_usuario_adm = nm_usuario_p;

				if	(ie_pode_reverter_w = 'N' AND ie_param682_w = 'N') then
					CALL Wheb_mensagem_pck.exibir_mensagem_abort(452717);
				end if;

				IF (ie_inativar_sv_w	= 'S') THEN

					UPDATE	atendimento_sinal_vital
			                                SET 	ie_situacao 	= 'I',
						dt_inativacao 	= clock_timestamp(),
						nm_usuario_inativacao 	= nm_usuario_p
	                       			WHERE 	nr_seq_intervencao 	= cd_item_p
					AND	nr_seq_horario		= nr_seq_horario_w
					AND	coalesce(dt_inativacao::text, '') = '';

				END IF;

				UPDATE	pe_prescr_proc_hor
				SET	dt_fim_horario 	 = NULL,
					nm_usuario_adm	 = NULL
				WHERE	nr_sequencia 		= nr_seq_horario_w
				AND	NR_SEQ_PE_PROC		= nr_seq_item_w
				AND	(dt_fim_horario IS NOT NULL AND dt_fim_horario::text <> '');

			ELSIF (ie_alteracao_p = 5) THEN -- suspensao do horario
				UPDATE	pe_prescr_proc_hor
				SET	dt_suspensao 		= dt_atualizacao_w,
					nm_usuario_susp		= nm_usuario_p
				WHERE	nr_sequencia 		= nr_seq_horario_w
				AND	coalesce(dt_suspensao::text, '') = ''
				AND	NR_SEQ_PE_PROC		= nr_seq_item_w
				AND	coalesce(dt_fim_horario::text, '') = '';

				cd_evolucao_p := Gerar_evolPaci_automa('E', nm_usuario_p, nr_atendimento_p, ds_item_w, nr_seq_horario_w, 'S', obter_expressao_idioma(488096), clock_timestamp(), nr_prescricao_w, null, null, null, cd_evolucao_p, ie_palm_p);

				varUpdate_w	:= 'S';

				i	:= coalesce(Vetor_Lista_Gerar_w.Count,0) + 1;
				Vetor_Lista_Gerar_w[i].nr_prescricao  	:= nr_prescricao_w;
				Vetor_Lista_Gerar_w[i].nr_seq_material 	:= nr_seq_item_w;
				Vetor_Lista_Gerar_w[i].nr_seq_horario 	:= nr_seq_horario_w;
			ELSIF (ie_alteracao_p = 6) THEN -- reversao da suspensao do horario
				UPDATE	pe_prescr_proc_hor
				SET	dt_suspensao 		 = NULL,
					nm_usuario_susp		 = NULL
				WHERE	nr_sequencia 		= nr_seq_horario_w
				AND	NR_SEQ_PE_PROC		= nr_seq_item_w
				AND	(dt_suspensao IS NOT NULL AND dt_suspensao::text <> '');
			END IF;

			GET DIAGNOSTICS ora2pg_rowcount = ROW_COUNT;


			IF ( ora2pg_rowcount > 0) OR (varUpdate_w = 'S') THEN	--David em 23/07/2008 OS 100171 - Verifica se a ultima instrucao atualizou ao menos uma  linha
				SELECT	nextval('prescr_mat_alteracao_seq')
				INTO STRICT	nr_seq_alteracao_w
				;

				ds_obs_final_w := SUBSTR(ds_observacao_p,1,2000);

				IF (coalesce(ie_palm_p,'N') = 'S') THEN
					IF (ds_obs_final_w IS NOT NULL AND ds_obs_final_w::text <> '') AND (ds_obs_final_w <> '') THEN
						ds_obs_final_w := substr(wheb_mensagem_pck.get_texto(307615, 'DS_OBSERVACAO_W=' || ds_obs_final_w),1,2000); -- Tipo de checagem: ADEP PDA - #@DS_OBSERVACAO_W#@
					ELSE
						ds_obs_final_w := wheb_mensagem_pck.get_texto(307616); -- Tipo de checagem: ADEP PDA
					END IF;
				END IF;

				INSERT	INTO	prescr_mat_alteracao(
									nr_sequencia,
									dt_atualizacao,
									nm_usuario,
									dt_atualizacao_nrec,
									nm_usuario_nrec,
									nr_prescricao,
									nr_seq_item_sae,
									nr_seq_horario_sae,
									dt_alteracao,
									cd_pessoa_fisica,
									ie_alteracao,
									ds_justificativa,
									ie_tipo_item,
									dt_horario,
									nr_atendimento,
									cd_item,
									cd_medico_solic,
									ds_observacao,
									ie_mostra_adep,
									nr_seq_assinatura,
									nr_seq_lote,
									cd_procedimento,
									ie_origem_proced,
									cd_funcao
									)
								VALUES (
									nr_seq_alteracao_w,
									dt_atualizacao_w,
									nm_usuario_p,
									dt_atualizacao_w,
									nm_usuario_p,
									nr_prescricao_w,
									nr_seq_item_w,
									nr_seq_horario_w,
									dt_horario_adm_w,
									obter_dados_usuario_opcao(nm_usuario_p,'C'),
									ie_alteracao_p,
									ds_justificativa_w,
									ie_tipo_item_p,
									dt_horario_w,
									nr_atendimento_p,
									cd_item_p,
									cd_medico_solic_p,
									ds_obs_final_w,
									ie_mostra_adep_w,
									nr_seq_assinatura_p,
									nr_seq_lote_w,
									cd_procedimento_regra_p,
									ie_origem_proced_regra_p,
									cd_funcao_p);

								nr_seq_evento_w	:= nr_seq_alteracao_w;	

				SELECT	nextval('prescr_mat_alteracao_comp_seq')
				INTO STRICT	nr_seq_alteracao_comp_w
				;

				INSERT INTO prescr_mat_alteracao_comp(nr_sequencia,
							dt_atualizacao, 
							cd_intervalo, 
							nm_usuario, 
							dt_atualizacao_nrec, 
							nm_usuario_nrec, 
							nr_sequencia_prescr,
							cd_evolucao,
							nr_seq_topo_lat)
				VALUES (
							nr_seq_alteracao_comp_w,
							dt_atualizacao_w,
							cd_intervalo_w,
							nm_usuario_p,
							dt_atualizacao_w,
							nm_usuario_p,
							nr_seq_alteracao_w,
							cd_evolucao_p,
							nr_seq_topo_lat_p);

				if (ie_alteracao_p in (4, 6)) then
					UPDATE	prescr_mat_alteracao
					SET	ie_evento_valido= 'N'
					WHERE nr_prescricao = nr_prescricao_w
					AND nr_seq_horario_sae 	= nr_seq_horario_w
					AND ie_alteracao 	= CASE WHEN ie_alteracao_p=4 THEN 3  ELSE 5 END;
				end if;			

				IF (ie_alteracao_p IN (3,5)) THEN
					CALL definir_setor_exec_adep(nr_atendimento_p,ie_tipo_item_p,nr_prescricao_w,nr_seq_item_w,nr_seq_horario_w,NULL);
				END IF;

				IF (ie_alteracao_p IN (3,4,8)) THEN
					CALL Gerar_cobranca_interv(nr_seq_proc_w, nr_prescricao_w, nr_atendimento_p, nm_usuario_p,ie_alteracao_p, cd_procedimento_regra_p, ie_origem_proced_regra_p, nr_seq_proc_interno_regra_p);
				END IF;

				IF (ie_alteracao_p = 3) THEN
					CALL tof_verificar_meta_interv(nr_atendimento_p, nm_usuario_p, nr_seq_proc_w);
				END IF;

				IF (ie_regra_lanc_conta_w <> 'N') AND (ie_alteracao_p IN (3,4,5,6)) and (ie_regra_lanc_conta_w in ('S','T','L')) THEN
					OPEN C20;
					LOOP
					FETCH C20 INTO
						nr_seq_horario_w,
						nr_seq_lote_w;
					EXIT WHEN NOT FOUND; /* apply on C20 */
						BEGIN
							IF (ie_regra_lanc_conta_w = 'S') OR
								((ie_regra_lanc_conta_w = 'T') AND (coalesce(nr_seq_lote_w,0) = 0)) OR
								((ie_regra_lanc_conta_w = 'L') AND (obter_se_lote_hor_conta_pac(nr_seq_horario_w) = 'S')) THEN

								IF (ie_alteracao_p = 3) THEN -- administracao do horario
										update	prescr_mat_hor
										set	    dt_fim_horario	= dt_atualizacao_w,
												nm_usuario_adm	= nm_usuario_p
										where	nr_sequencia	= nr_seq_horario_w
										and		coalesce(dt_fim_horario::text, '') = ''
										and		coalesce(dt_suspensao::text, '') = '';
										nr_seq_map_w := gerar_estornar_adep_map(NULL, nr_seq_horario_w, NULL, 'G', dt_horario_adm_w, nm_usuario_p, nr_seq_map_w, 'GAP', null, null);
								ELSIF (ie_alteracao_p = 4) THEN -- reversao da realizacao do horario
										update	prescr_mat_hor
										set	    dt_fim_horario	 = NULL,
												nm_usuario_adm	 = NULL
										where	nr_sequencia	= nr_seq_horario_w
										and	    (dt_fim_horario IS NOT NULL AND dt_fim_horario::text <> '');

										nr_seq_map_w := gerar_estornar_adep_map(NULL, nr_seq_horario_w, NULL, 'E', dt_horario_adm_w, nm_usuario_p, nr_seq_map_w, 'GAP', null, null);

								elsif (ie_alteracao_p = 5) then -- suspensao do horario
										update	prescr_mat_hor
										set		dt_suspensao		= dt_atualizacao_w,
												nm_usuario_susp		= nm_usuario_p
										where	nr_sequencia		= nr_seq_horario_w
										and		coalesce(dt_suspensao::text, '') = ''
										and		coalesce(dt_fim_horario::text, '') = '';

										i	:= coalesce(Vetor_Lista_Gerar_w.Count,0) + 1;
										Vetor_Lista_Gerar_w[i].nr_prescricao  	:= nr_prescricao_w;
										Vetor_Lista_Gerar_w[i].nr_seq_material 	:= nr_seq_item_w;
										Vetor_Lista_Gerar_w[i].nr_seq_horario 	:= nr_seq_horario_w;
								elsif (ie_alteracao_p = 6) then -- reversao da suspensao do horario
										update	prescr_mat_hor
										set		dt_suspensao		 = NULL,
												nm_usuario_susp		 = NULL
										where	nr_sequencia		= nr_seq_horario_w
										and		(dt_suspensao IS NOT NULL AND dt_suspensao::text <> '');
								END IF;

							END IF;
						END;
					END LOOP;
					CLOSE C20;
				END IF;
			ELSIF	(ie_status_interv_w = 'Z' AND ie_alteracao_p = 4) THEN
				SELECT	nextval('prescr_mat_alteracao_seq')
				INTO STRICT	nr_seq_alteracao_w
				;

				ds_obs_final_w := SUBSTR(ds_observacao_p,1,2000);

				IF (coalesce(ie_palm_p,'N') = 'S') THEN
					IF (ds_obs_final_w IS NOT NULL AND ds_obs_final_w::text <> '') AND (ds_obs_final_w <> '') THEN
						ds_obs_final_w := substr(wheb_mensagem_pck.get_texto(307615, 'DS_OBSERVACAO_W=' || ds_obs_final_w),1,2000); -- Tipo de checagem: ADEP PDA - #@DS_OBSERVACAO_W#@
					ELSE
						ds_obs_final_w := wheb_mensagem_pck.get_texto(307616); -- Tipo de checagem: ADEP PDA
					END IF;
				END IF;

				INSERT	INTO	prescr_mat_alteracao(
									nr_sequencia,
									dt_atualizacao,
									nm_usuario,
									dt_atualizacao_nrec,
									nm_usuario_nrec,
									nr_prescricao,
									nr_seq_item_sae,
									nr_seq_horario_sae,
									dt_alteracao,
									cd_pessoa_fisica,
									ie_alteracao,
									ds_justificativa,
									ie_tipo_item,
									dt_horario,
									nr_atendimento,
									cd_item,
									cd_medico_solic,
									ds_observacao,
									ie_mostra_adep,
									nr_seq_assinatura,
									nr_seq_lote,
									cd_procedimento,
									ie_origem_proced,
									cd_funcao
									)
								VALUES (
									nr_seq_alteracao_w,
									dt_atualizacao_w,
									nm_usuario_p,
									dt_atualizacao_w,
									nm_usuario_p,
									nr_prescricao_w,
									nr_seq_item_w,
									nr_seq_horario_w,
									dt_horario_adm_w,
									obter_dados_usuario_opcao(nm_usuario_p,'C'),
									57,
									ds_justificativa_w,
									ie_tipo_item_p,
									dt_horario_w,
									nr_atendimento_p,
									cd_item_p,
									cd_medico_solic_p,
									ds_obs_final_w,
									ie_mostra_adep_w,
									nr_seq_assinatura_p,
									nr_seq_lote_w,
									cd_procedimento_regra_p,
									ie_origem_proced_regra_p,
									cd_funcao_p);

								nr_seq_evento_w	:= nr_seq_alteracao_w;								

				UPDATE	prescr_mat_alteracao
				SET	ie_evento_valido	= 'N'
				WHERE	nr_prescricao		= nr_prescricao_w
				AND	nr_seq_horario_sae	= nr_seq_horario_w
				AND	ie_alteracao		= 55;
			END IF;
			END;
		END LOOP;
		CLOSE cCursor;
	ELSIF (ie_tipo_item_p = 'IAG') THEN

		OPEN c11;
		LOOP
		FETCH c11 INTO	nr_prescricao_w,
				nr_seq_item_w,
				nr_agrupamento_w,
				cd_um_dose_w,
				qt_dose_w,
				nr_seq_horario_w;
		EXIT WHEN NOT FOUND; /* apply on c11 */
			BEGIN
			
			ie_abriu_cursor_w	:= true;

			IF (ie_alteracao_p = 3) THEN -- administracao do horario
				ie_consist_dose_adm_w := coalesce(obter_valor_param_usuario(1113,62, cd_perfil_p, nm_usuario_p, obter_estab_atend(nr_atendimento_p)), 'N');

				IF (ie_consist_dose_adm_w IN ('JD','DM')) AND (qt_adm_p IS NOT NULL AND qt_adm_p::text <> '') THEN
					IF (ie_consist_dose_adm_w = 'JD') AND
						((qt_adm_p <> qt_dose_w) OR (cd_um_qt_adm_p <> cd_um_dose_w)) AND (coalesce(ds_justificativa_w::text, '') = '') THEN
						--A justificativa e obrigatoria quando a dose administrada e diferente da dose prescrita. Parametro [62]
						CALL Wheb_mensagem_pck.Exibir_mensagem_abort(173407);
					ELSIF (ie_consist_dose_adm_w = 'DM') AND
						((qt_adm_p > qt_dose_w AND qt_adm_p > qt_solucao_w) OR (cd_um_qt_adm_p > cd_um_dose_w)) THEN
						----Nao e possivel administrar uma dose maior que a sua dispensacao.
						CALL Wheb_mensagem_pck.Exibir_mensagem_abort(123053);
					END IF;
				END IF;

				UPDATE	prescr_mat_hor
				SET	dt_fim_horario	= dt_atualizacao_w,
					nm_usuario_adm	= nm_usuario_p
				WHERE	nr_sequencia		= nr_seq_horario_w
				AND	coalesce(dt_fim_horario::text, '') = ''
				AND	coalesce(dt_suspensao::text, '') = '';
			ELSIF (ie_alteracao_p = 4) THEN -- reversao da realizacao do horario
				select	coalesce(max('S'), 'N')
				into STRICT	ie_pode_reverter_w
				from	prescr_mat_hor
				where	nr_sequencia   = nr_seq_horario_w
				and		nm_usuario_adm = nm_usuario_p;

				if	(ie_pode_reverter_w = 'N' AND ie_param682_w = 'N') then
					CALL Wheb_mensagem_pck.exibir_mensagem_abort(452717);
				end if;

				SELECT	nr_seq_processo
				INTO STRICT	nr_seq_processo_w
				FROM	Prescr_mat_hor
				WHERE	nr_sequencia	= nr_seq_horario_w
				AND	Obter_se_horario_liberado(dt_lib_horario, dt_horario) = 'S';

				IF (nr_seq_processo_w IS NOT NULL AND nr_seq_processo_w::text <> '') THEN
					CALL Reverter_processo_horario(nr_seq_horario_w,
									nr_seq_processo_w,
									nm_usuario_p);
				END IF;

				UPDATE	prescr_mat_hor
				SET	dt_fim_horario	 = NULL,
					nm_usuario_adm	 = NULL
				WHERE	nr_sequencia		= nr_seq_horario_w
				AND	(dt_fim_horario IS NOT NULL AND dt_fim_horario::text <> '');
				
				select 	max(dt_alteracao)
				into STRICT	dt_conta_w
				from	prescr_mat_alteracao
				where	nr_seq_horario = nr_seq_horario_w
				and		coalesce(ie_evento_valido,'S') = 'S'
				and		ie_alteracao = 3;
				

			ELSIF (ie_alteracao_p = 5) THEN -- suspensao do horario
				UPDATE	prescr_mat_hor
				SET	dt_suspensao		= dt_atualizacao_w,
					nm_usuario_susp		= nm_usuario_p
				WHERE	nr_sequencia		= nr_seq_horario_w
				AND	coalesce(dt_suspensao::text, '') = ''
				AND	coalesce(dt_fim_horario::text, '') = '';

				i	:= coalesce(Vetor_Lista_Gerar_w.Count,0) + 1;
				Vetor_Lista_Gerar_w[i].nr_prescricao  	:= nr_prescricao_w;
				Vetor_Lista_Gerar_w[i].nr_seq_material 	:= nr_seq_item_w;
				Vetor_Lista_Gerar_w[i].nr_seq_horario 	:= nr_seq_horario_w;
			ELSIF (ie_alteracao_p = 6) THEN -- reversao da suspensao do horario
				UPDATE	prescr_mat_hor
				SET	dt_suspensao		 = NULL,
					nm_usuario_susp		 = NULL
				WHERE	nr_sequencia		= nr_seq_horario_w
				AND	(dt_suspensao IS NOT NULL AND dt_suspensao::text <> '');
			END IF;

			GET DIAGNOSTICS ora2pg_rowcount = ROW_COUNT;


			if ( ora2pg_rowcount > 0) then
				SELECT	nextval('prescr_mat_alteracao_seq')
				INTO STRICT	nr_seq_alteracao_w
				;

				ds_obs_final_w := SUBSTR(ds_observacao_p,1,2000);

				IF (coalesce(ie_palm_p,'N') = 'S') THEN
					IF (ds_obs_final_w IS NOT NULL AND ds_obs_final_w::text <> '') AND (ds_obs_final_w <> '') THEN
						ds_obs_final_w := substr(wheb_mensagem_pck.get_texto(307615, 'DS_OBSERVACAO_W=' || ds_obs_final_w),1,2000); -- Tipo de checagem: ADEP PDA - #@DS_OBSERVACAO_W#@
					ELSE
						ds_obs_final_w := wheb_mensagem_pck.get_texto(307616); -- Tipo de checagem: ADEP PDA
					END IF;
				END IF;

				INSERT	INTO	prescr_mat_alteracao(
									nr_sequencia,
									dt_atualizacao,
									nm_usuario,
									dt_atualizacao_nrec,
									nm_usuario_nrec,
									nr_prescricao,
									nr_seq_prescricao,
									nr_seq_horario,
									dt_alteracao,
									cd_pessoa_fisica,
									ie_alteracao,
									ds_justificativa,
									ie_tipo_item,
									dt_horario,
									nr_atendimento,
									cd_item,
									qt_dose_adm,
									cd_um_dose_adm,
									qt_dose_original,
									cd_medico_solic,
									ie_mostra_adep,
									nr_seq_assinatura,
									nr_seq_lote,
									ds_observacao,
									cd_funcao
									)
								VALUES (
									nr_seq_alteracao_w,
									dt_atualizacao_w,
									nm_usuario_p,
									dt_atualizacao_w,
									nm_usuario_p,
									nr_prescricao_w,
									nr_seq_item_w,
									nr_seq_horario_w,
									dt_horario_adm_w,
									obter_dados_usuario_opcao(nm_usuario_p,'C'),
									ie_alteracao_p,
									ds_justificativa_w,
									ie_tipo_item_p,
									dt_horario_w,
									nr_atendimento_p,
									cd_item_p,
									coalesce(qt_adm_p,qt_dose_w),
									coalesce(cd_um_qt_adm_p,cd_um_dose_w),
									qt_dose_w,
									cd_medico_solic_p,
									ie_mostra_adep_w,
									nr_seq_assinatura_p,
									nr_seq_lote_w,
									ds_obs_final_w,
									cd_funcao_p
									);

								nr_seq_evento_w	:= nr_seq_alteracao_w;	

				CALL gerar_alter_horario_item_kit(nr_atendimento_p, 'KIT', nr_prescricao_w, nr_seq_item_w, dt_horario_w, ie_alteracao_p, dt_horario_adm_w, ie_regra_lanc_conta_w, nm_usuario_p);				

				IF (ie_alteracao_p IN (3,5)) THEN
					CALL definir_setor_exec_adep(nr_atendimento_p,ie_tipo_item_p,nr_prescricao_w,nr_seq_item_w,nr_seq_horario_w,NULL);
				END IF;

				IF (ie_regra_lanc_conta_w <> 'N') AND (ie_alteracao_p IN (3,4)) THEN

					IF (ie_regra_lanc_conta_w = 'S') THEN

						IF (ie_alteracao_p = 3) THEN
							nr_seq_map_w := gerar_estornar_adep_map(NULL, nr_seq_horario_w, NULL, 'G', dt_horario_adm_w, nm_usuario_p, nr_seq_map_w, 'GAP', null, null);
						ELSIF (ie_alteracao_p = 4) THEN
							nr_seq_map_w := gerar_estornar_adep_map(NULL, nr_seq_horario_w, NULL, 'E', coalesce(dt_conta_w, dt_horario_adm_w), nm_usuario_p, nr_seq_map_w, 'GAP', null, null);
						END IF;
					ELSIF (ie_regra_lanc_conta_w = 'G') THEN

						IF (ie_alteracao_p = 3) THEN
							nr_seq_map_w := gerar_estornar_adep_map(NULL, nr_seq_horario_w, NULL, 'G', dt_horario_adm_w, nm_usuario_p, nr_seq_map_w, 'GAP', null, null);
						ELSIF (ie_alteracao_p = 4) THEN
							nr_seq_map_w := gerar_estornar_adep_map(NULL, nr_seq_horario_w, NULL, 'E', coalesce(dt_conta_w, dt_horario_adm_w), nm_usuario_p, nr_seq_map_w, 'GAP', null, null);
						END IF;
					ELSIF (ie_regra_lanc_conta_w = 'L') AND (obter_se_lote_hor_conta_pac(nr_seq_horario_w) = 'S') THEN

						IF (ie_alteracao_p = 3) THEN
							nr_seq_map_w := gerar_estornar_adep_map(NULL, nr_seq_horario_w, NULL, 'G', dt_horario_adm_w, nm_usuario_p, nr_seq_map_w, 'GAP', null, null);
						ELSIF (ie_alteracao_p = 4) THEN
							nr_seq_map_w := gerar_estornar_adep_map(NULL, nr_seq_horario_w, NULL, 'E', coalesce(dt_conta_w, dt_horario_adm_w), nm_usuario_p, nr_seq_map_w, 'GAP', null, null);
						END IF;
					ELSIF (ie_regra_lanc_conta_w = 'T') AND (coalesce(nr_seq_lote_w, 0) = 0) THEN
						IF (ie_alteracao_p = 3) THEN
							nr_seq_map_w := gerar_estornar_adep_map(NULL, nr_seq_horario_w, NULL, 'G', dt_horario_adm_w, nm_usuario_p, nr_seq_map_w, 'GAP', null, null);
						ELSIF (ie_alteracao_p = 4) THEN
							nr_seq_map_w := gerar_estornar_adep_map(NULL, nr_seq_horario_w, NULL, 'E', coalesce(dt_conta_w, dt_horario_adm_w), nm_usuario_p, nr_seq_map_w, 'GAP', null, null);
						END IF;

					END IF;

				END IF;

				IF (ie_alteracao_p IN (5,6)) THEN
					IF (ie_alteracao_p = 5) THEN
						CALL gerar_susp_adep_processo_hor(nr_seq_horario_w,'1',nm_usuario_p);
						i	:= coalesce(Vetor_Lista_Gerar_w.Count,0) + 1;
						Vetor_Lista_Gerar_w[i].nr_prescricao  	:= nr_prescricao_w;
						Vetor_Lista_Gerar_w[i].nr_seq_material 	:= nr_seq_item_w;
						Vetor_Lista_Gerar_w[i].nr_seq_horario 	:= nr_seq_horario_w;						
					ELSE
						CALL gerar_susp_adep_processo_hor(nr_seq_horario_w,'2',nm_usuario_p);
					END IF;
				END IF;

				if (ie_alteracao_p	= 3) then
					select	coalesce(max(qt_minutos_apraz_cg),0),
							max(nr_seq_hor_glic)
					into STRICT	qt_minutos_apraz_cg_w,
							nr_seq_hor_glic_w
					from	prescr_mat_hor
					where	nr_sequencia	= nr_seq_horario_w;

					if (qt_minutos_apraz_cg_w	> 0) then

						select	max(a.nr_sequencia),
								max(a.cd_procedimento),
								max(a.cd_intervalo),
								max(a.qt_procedimento),
								max(a.nr_seq_proc_interno),
								max(CASE WHEN a.ie_acm='N' THEN CASE WHEN a.ie_se_necessario='S' THEN 'S'  ELSE 'N' END   ELSE a.ie_acm END ),
								max(a.nr_seq_prot_glic),
								max(a.nr_prescricao)
						into STRICT	nr_seq_proc_ccg_w,
								cd_proc_ccg_w,
								cd_interv_ccg_w,
								qt_proc_ccg_w,
								nr_seq_proc_int_ccg_w,
								ie_acm_sn_ccg_w,
								nr_seq_prot_ccg_w,
								nr_prescr_ccg_w
						from	prescr_procedimento a,
								prescr_proc_hor b
						where	a.nr_prescricao	= b.nr_prescricao
						and		a.nr_sequencia	= b.nr_seq_procedimento
						and		b.nr_sequencia	= nr_seq_hor_glic_w;

						Aprazar_item_prescr('N',
						obter_estab_atend(nr_atendimento_p),
						nr_atendimento_p,
						'G',
						0,
						cd_proc_ccg_w,
						cd_interv_ccg_w,
						qt_proc_ccg_w,
						(clock_timestamp() + (qt_minutos_apraz_cg_w/1440)),
						to_char(nr_prescr_ccg_w),
						nr_prescr_ccg_w,
						nr_seq_proc_ccg_w,
						'N',
						null,
						wheb_mensagem_pck.get_texto(307627), -- Realizado pelo sistema
						nm_usuario_p,
						ie_inconsistencia_ccg_w,
						ds_inconsistentes_ccg_w,
						nr_seq_proc_int_ccg_w,
						null,
						ie_acm_sn_ccg_w,
						null,
						null,
						'S',
						nr_seq_hor_glic_w,
						nr_seq_prot_ccg_w,
						null,
						null,
						'',
						null,
						null);

					end if;
				end if;
			END IF;
			END;
		END LOOP;
		CLOSE c11;

	-- Dietas orais - Servicos
	ELSIF (ie_tipo_item_p = 'DE') THEN

		ds_sql_cursor_w	:= '';
		ds_sql_where_w	:= '';

    if (ie_somente_horario_w = 'S') then     
        ds_sql_where_w := ds_sql_where_w || ' and c.nr_sequencia = ''' || nr_seq_horario_p || ''' ';
    end if;

		if (Wheb_assist_pck.obterParametroFuncao(1113,477) = 'S') then
			ds_sql_where_w	:=	ds_sql_where_w || ' and 		d.nr_sequencia = ' || cd_item_p;
		else
			ds_sql_where_w	:=	ds_sql_where_w || ' and 		x.nr_sequencia = ' || cd_item_p;
		end if;

		ds_sql_cursor_w	:=	ds_sql_cursor_w ||
							' select	a.nr_prescricao, ' ||
							' 			null, ' ||
							' 			x.nr_sequencia ' ||
							' from		prescr_dieta d, ' ||
							' 			nut_servico b, ' ||
							' 			nut_atend_serv_dia_rep c, ' ||
							' 			prescr_medica a, ' ||
							' 			nut_atend_serv_dia x ' ||
							' where		d.nr_prescricao		= a.nr_prescricao ' ||
							' and 		x.nr_atendimento 	= a.nr_atendimento ' ||
							' and 		x.nr_seq_servico 	= b.nr_sequencia ' ||
							' and 		a.nr_prescricao		= c.nr_prescr_oral ' ||
							' and 		c.nr_seq_serv_dia	= x.nr_sequencia ' ||
							' and 		nvl(b.ie_tipo_prescricao_servico,1) = 1 ' ||
							' and 		a.dt_validade_prescr > to_date(''' || to_char(dt_param_w,'dd/mm/yyyy hh24:mi:ss') || ''',''dd/mm/yyyy hh24:mi:ss'') ' ||
							' and 		nvl(a.dt_liberacao, a.dt_liberacao_medico) is not null ' ||
							' and 		obter_se_valor_contido(a.nr_prescricao, ''' || nr_prescricoes_w || ''') = ''S'' ' ||
							' and 		x.nr_sequencia		= ' || nr_seq_horario_p ||
							' and 		obter_se_exibir_rep_adep_setor(''' || cd_setor_pac_w || ''',a.cd_setor_atendimento,nvl(a.ie_adep,''S'')) = ''S'' ' ||
							' and 		a.nr_atendimento 	= ' || nr_atendimento_p ||
							ds_sql_where_w;

		OPEN cCursor for EXECUTE ds_sql_cursor_w;
		LOOP
		FETCH cCursor INTO
				nr_prescricao_w,
				nr_seq_item_w,
				nr_seq_horario_w;
		EXIT WHEN NOT FOUND; /* apply on cCursor */
			BEGIN
			
			ie_abriu_cursor_w	:= true;

			IF (ie_alteracao_p = 3) THEN -- administracao do horario
				UPDATE	nut_atend_serv_dia
				SET	dt_fim_horario 	= dt_atualizacao_w,
					nm_usuario_adm	= nm_usuario_p
				WHERE	nr_sequencia 		= nr_seq_horario_w
				AND	coalesce(dt_fim_horario::text, '') = ''
				AND	coalesce(dt_suspensao::text, '') = '';
			ELSIF (ie_alteracao_p = 4) THEN -- reversao da realizacao do horario
				select	coalesce(max('S'), 'N')
				into STRICT	ie_pode_reverter_w
				from	nut_atend_serv_dia
				where	nr_sequencia   = nr_seq_horario_w
				and		nm_usuario_adm = nm_usuario_p;

				if	(ie_pode_reverter_w = 'N' AND ie_param682_w = 'N') then
					CALL Wheb_mensagem_pck.exibir_mensagem_abort(452717);
				end if;

				UPDATE	nut_atend_serv_dia
				SET	dt_fim_horario 	 = NULL,
					nm_usuario_adm	 = NULL
				WHERE	nr_sequencia 		= nr_seq_horario_w
				AND	(dt_fim_horario IS NOT NULL AND dt_fim_horario::text <> '');
			ELSIF (ie_alteracao_p = 5) THEN -- suspensao do horario
				UPDATE	nut_atend_serv_dia
				SET	dt_suspensao 		= dt_atualizacao_w,
					nm_usuario_susp		= nm_usuario_p
				WHERE	nr_sequencia 		= nr_seq_horario_w
				AND	coalesce(dt_suspensao::text, '') = ''
				AND	coalesce(dt_fim_horario::text, '') = '';
				i	:= coalesce(Vetor_Lista_Gerar_w.Count,0) + 1;
				Vetor_Lista_Gerar_w[i].nr_prescricao  	:= nr_prescricao_w;
				Vetor_Lista_Gerar_w[i].nr_seq_material 	:= nr_seq_item_w;
				Vetor_Lista_Gerar_w[i].nr_seq_horario 	:= nr_seq_horario_w;				
			ELSIF (ie_alteracao_p = 6) THEN -- reversao da suspensao do horario
				UPDATE	nut_atend_serv_dia
				SET	dt_suspensao 		 = NULL,
					nm_usuario_susp		 = NULL
				WHERE	nr_sequencia 		= nr_seq_horario_w
				AND	(dt_suspensao IS NOT NULL AND dt_suspensao::text <> '');
			END IF;

			GET DIAGNOSTICS ora2pg_rowcount = ROW_COUNT;


			if ( ora2pg_rowcount > 0) then
				SELECT	nextval('prescr_mat_alteracao_seq')
				INTO STRICT	nr_seq_alteracao_w
				;

				ds_obs_final_w := SUBSTR(ds_observacao_p,1,2000);

				IF (coalesce(ie_palm_p,'N') = 'S') THEN
					IF (ds_obs_final_w IS NOT NULL AND ds_obs_final_w::text <> '') AND (ds_obs_final_w <> '') THEN
						ds_obs_final_w := substr(wheb_mensagem_pck.get_texto(307615, 'DS_OBSERVACAO_W=' || ds_obs_final_w),1,2000); -- Tipo de checagem: ADEP PDA - #@DS_OBSERVACAO_W#@
					ELSE
						ds_obs_final_w := wheb_mensagem_pck.get_texto(307616); -- Tipo de checagem: ADEP PDA
					END IF;
				END IF;

				INSERT	INTO	prescr_mat_alteracao(
									nr_sequencia,
									dt_atualizacao,
									nm_usuario,
									dt_atualizacao_nrec,
									nm_usuario_nrec,
									nr_prescricao,
									nr_seq_servico,
									dt_alteracao,
									cd_pessoa_fisica,
									ie_alteracao,
									nr_seq_qualidade,
									ds_justificativa,
									ds_observacao,
									ie_tipo_item,
									dt_horario,
									nr_atendimento,
									cd_item,
									qt_dose_adm,
									qt_dose_original,
									cd_medico_solic,
									ie_mostra_adep,
									nr_seq_assinatura,
									nr_seq_lote,
									cd_funcao,
									ie_evento_valido
									)
								VALUES (
									nr_seq_alteracao_w,
									dt_atualizacao_w,
									nm_usuario_p,
									dt_atualizacao_w,
									nm_usuario_p,
									nr_prescricao_w,
									nr_seq_horario_w,
									dt_horario_adm_w,
									obter_dados_usuario_opcao(nm_usuario_p,'C'),
									ie_alteracao_p,
									ie_qualidade_p,
									ds_justificativa_w,
									ds_obs_final_w,
									ie_tipo_item_p,
									dt_horario_w,
									nr_atendimento_p,
									cd_item_p,
									qt_adm_p,
									qt_adm_p,
									cd_medico_solic_p,
									ie_mostra_adep_w,
									nr_seq_assinatura_p,
									nr_seq_lote_w,
									cd_funcao_p,
									'S'
									);

				if (ie_alteracao_p in (4, 6)) then
					UPDATE	prescr_mat_alteracao
					SET	ie_evento_valido	= 'N'
					WHERE nr_prescricao = nr_prescricao_w
					AND nr_seq_servico 	= nr_seq_horario_w
					AND ie_alteracao 	= CASE WHEN ie_alteracao_p=4 THEN 3  ELSE 5 END;
				end if;

				nr_seq_evento_w	:= nr_seq_alteracao_w;	

				IF (ie_alteracao_p IN (3,5)) THEN
					CALL definir_setor_exec_adep(nr_atendimento_p,ie_tipo_item_p,nr_prescricao_w,nr_seq_item_w,nr_seq_horario_w,NULL);
				END IF;
			END IF;
			END;
		END LOOP;
		CLOSE cCursor;

	ELSIF (ie_tipo_item_p = 'SNE') THEN

		OPEN c19;
		LOOP
		FETCH c19 INTO	nr_prescricao_w,
				nr_seq_item_w,
				nr_agrupamento_w,
				cd_um_dose_w,
				qt_dose_w,
				nr_seq_horario_w,
				ie_acm_w,
				ie_sn_w,
				cd_motivo_baixa_w,
				ie_medic_paciente_w,
				qt_solucao_w,
				ie_bomba_infusao_w,
				nr_seq_lote_w,
				cd_material_w,
				ie_via_aplicacao_w,
				cd_funcao_origem_w,
				nr_seq_item_cpoe_w,
				dt_horario_w;
		EXIT WHEN NOT FOUND; /* apply on c19 */
			BEGIN

			ie_atualizou_w := 'N';
			ie_abriu_cursor_w	:= true;
			
			IF (ie_alteracao_p = 3) THEN -- administracao do horario
				SELECT	SUBSTR(MAX(obter_desc_material(cd_material)),1,235),
						MAX(nr_prescricao),
						coalesce(qt_adm_p,MAX(qt_dose)),
						coalesce(cd_um_qt_adm_p,MAX(cd_unidade_medida_dose))
				INTO STRICT	ds_item_w,
						nr_prescricao_ww,
						qt_dose_ww,
						ds_unidade_medida_w
				FROM	prescr_mat_hor
				WHERE	nr_sequencia	= nr_seq_horario_w;

				cd_evolucao_p := Gerar_evolPaci_automa('SNE', nm_usuario_p, nr_atendimento_p, ds_item_w, nr_seq_horario_w, 'A', obter_expressao_idioma(488570), dt_horario_adm_w, nr_prescricao_ww, qt_dose_ww, ds_unidade_medida_w, ie_via_aplicacao_w, cd_evolucao_p, ie_palm_p);

				UPDATE	prescr_mat_hor
				SET		dt_fim_horario	= dt_atualizacao_w,
						nm_usuario_adm	= nm_usuario_p
				WHERE	nr_sequencia		= nr_seq_horario_w
				AND		coalesce(dt_fim_horario::text, '') = ''
				AND		coalesce(dt_suspensao::text, '') = '';

				SELECT	coalesce(MAX('S'),'N')
				INTO STRICT	ie_atualizou_w
				FROM	prescr_mat_hor where nr_sequencia	= nr_seq_horario_w
				AND	dt_fim_horario	= dt_atualizacao_w
				AND	nm_usuario_adm	= nm_usuario_p LIMIT 1;

				if (coalesce(nr_seq_item_cpoe_w,0) > 0) and (coalesce(cd_funcao_origem_w,0) = 2314) then

					dt_fim_w :=	dt_horario_adm_w;

					if (dt_fim_w < dt_horario_w) then	
						dt_fim_w :=	dt_horario_w;
					end if;

					if (ie_param8_cpoe_w = 'A') then
						update	cpoe_dieta
						set 	dt_fim =  trunc(dt_fim_w + 1/24,'hh24') - 1/1440,
								nm_usuario = nm_usuario_p,
								dt_atualizacao = clock_timestamp()
						where	nr_sequencia = nr_seq_item_cpoe_w
						and 	coalesce(ie_evento_unico,'N') = 'S'
						and		ie_administracao = 'P';
					end if;						
				end if;	

			ELSIF (ie_alteracao_p = 5) THEN -- suspensao do horario
				UPDATE	prescr_mat_hor
				SET	dt_suspensao		= dt_atualizacao_w,
					nm_usuario_susp		= nm_usuario_p
				WHERE	nr_sequencia		= nr_seq_horario_w
				AND	coalesce(dt_suspensao::text, '') = ''
				AND	coalesce(dt_fim_horario::text, '') = '';

				SELECT	coalesce(MAX('S'),'N')
				INTO STRICT	ie_atualizou_w
				FROM	prescr_mat_hor where nr_sequencia			=  nr_seq_horario_w
				AND	dt_suspensao				=  dt_atualizacao_w
				AND	coalesce(ie_suspenso_adep,'N')	=  coalesce(ie_suspenso_adep_w,'N')
				AND	nm_usuario_susp				=  nm_usuario_p LIMIT 1;

				if (ie_atualizou_w = 'S') then
					i	:= coalesce(Vetor_Lista_Gerar_w.Count,0) + 1;
					Vetor_Lista_Gerar_w[i].nr_prescricao  	:= nr_prescricao_w;
					Vetor_Lista_Gerar_w[i].nr_seq_material 	:= nr_seq_item_w;
					Vetor_Lista_Gerar_w[i].nr_seq_horario 	:= nr_seq_horario_w;
				end if;
			END IF;

			insert into log_tasy(dt_atualizacao, nm_usuario, cd_log, ds_log) values (clock_timestamp(), 'OS1340182', 1234 ,
			substr(' nr_prescricao_w: ' || nr_prescricao_w || 
			' nr_seq_item_w: ' || nr_seq_item_w || 
			' cd_material_w: ' || cd_material_w || 
			' ie_alteracao_p: ' || ie_alteracao_p ||
			' ie_atualizou_w: ' || ie_atualizou_w ||
			' ds_item_w: ' || ds_item_w, 1,2000));

			if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

			IF (ie_atualizou_w = 'S') THEN
				SELECT	nextval('prescr_mat_alteracao_seq')
				INTO STRICT	nr_seq_alteracao_w
				;

				ds_obs_final_w	:= SUBSTR(ds_observacao_p,1,2000);

				IF (coalesce(ie_palm_p,'N') = 'S') THEN
					IF (ds_obs_final_w IS NOT NULL AND ds_obs_final_w::text <> '') AND (ds_obs_final_w <> '') THEN
						ds_obs_final_w := substr(wheb_mensagem_pck.get_texto(307615, 'DS_OBSERVACAO_W=' || ds_obs_final_w),1,2000); -- Tipo de checagem: ADEP PDA - #@DS_OBSERVACAO_W#@
					ELSE
						ds_obs_final_w := wheb_mensagem_pck.get_texto(307616); -- Tipo de checagem: ADEP PDA
					END IF;
				END IF;

				SELECT	coalesce(MAX(nr_seq_lote),0)
				INTO STRICT	nr_seq_lote_w
				FROM	prescr_mat_hor
				WHERE	nr_sequencia = nr_seq_horario_w;

				IF (coalesce(nr_seq_item_w,0) > 0) THEN

				begin

						SELECT	nextval('prescr_solucao_evento_seq')
						INTO STRICT	nr_sequencia_w
						;

						INSERT INTO prescr_solucao_evento(nr_sequencia,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							nr_prescricao,
							nr_seq_material,
							cd_pessoa_fisica,
							ie_alteracao,
							dt_alteracao,
							ie_evento_valido,
							nr_seq_motivo,
							ds_observacao,
							ie_tipo_solucao,
							nr_seq_lote,
							nr_seq_solucao,
							ds_justificativa,
							cd_funcao,
							cd_evolucao)
						VALUES (nr_sequencia_w,
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							nr_prescricao_w,
							nr_seq_item_w,
							obter_dados_usuario_opcao(nm_usuario_p, 'C'),
							CASE WHEN ie_alteracao_p=3 THEN 20  ELSE 21 END ,
							clock_timestamp(),
							'S',
							nr_seq_motivo_susp_p,
							ds_obs_final_w,
							2,
							nr_seq_lote_w,
							NULL,
							ds_justificativa_w,
							cd_funcao_p,
							cd_evolucao_p);

						nr_seq_evento_w	:= nr_sequencia_w;	

				exception when others then
					ds_erro_w := substr(sqlerrm,1,2000);

					insert into log_tasy(dt_atualizacao, nm_usuario, cd_log, ds_log) values (clock_timestamp(), 'OS1340182', 1234 ,
					substr(' nr_prescricao_w: ' || nr_prescricao_w || 
					' nr_seq_item_w: ' || nr_seq_item_w || 
					' cd_material_w: ' || cd_material_w || 
					' ds_erro_w: ' || ds_erro_w, 1,2000));
				end;

				END IF;

				IF (ie_regra_lanc_conta_w <> 'N') AND (ie_alteracao_p IN (3,4)) THEN

					IF (ie_regra_lanc_conta_w = 'S') THEN

						IF (ie_alteracao_p = 3) THEN
							nr_seq_map_w := gerar_estornar_adep_map(NULL, nr_seq_horario_w, NULL, 'G', dt_horario_adm_w, nm_usuario_p, nr_seq_map_w, 'GAP', null, null);
						ELSIF (ie_alteracao_p = 4) THEN
							nr_seq_map_w := gerar_estornar_adep_map(NULL, nr_seq_horario_w, NULL, 'E', dt_horario_adm_w, nm_usuario_p, nr_seq_map_w, 'GAP', null, null);
						END IF;

					ELSIF (ie_regra_lanc_conta_w = 'L') AND (obter_se_lote_hor_conta_pac(nr_seq_horario_w) = 'S') THEN

						IF (ie_alteracao_p = 3) THEN
							nr_seq_map_w := gerar_estornar_adep_map(NULL, nr_seq_horario_w, NULL, 'G', dt_horario_adm_w, nm_usuario_p, nr_seq_map_w, 'GAP', null, null);
						ELSIF (ie_alteracao_p = 4) THEN
							nr_seq_map_w := gerar_estornar_adep_map(NULL, nr_seq_horario_w, NULL, 'E', dt_horario_adm_w, nm_usuario_p, nr_seq_map_w, 'GAP', null, null);
						END IF;
					ELSIF (ie_regra_lanc_conta_w = 'T') AND (coalesce(nr_seq_lote_w, 0) = 0) THEN
						IF (ie_alteracao_p = 3) THEN
							nr_seq_map_w := gerar_estornar_adep_map(NULL, nr_seq_horario_w, NULL, 'G', dt_horario_adm_w, nm_usuario_p, nr_seq_map_w, 'GAP', null, null);
						ELSIF (ie_alteracao_p = 4) THEN
							nr_seq_map_w := gerar_estornar_adep_map(NULL, nr_seq_horario_w, NULL, 'E', dt_horario_adm_w, nm_usuario_p, nr_seq_map_w, 'GAP', null, null);
						END IF;

					END IF;

				END IF;

				IF (ie_alteracao_p IN (3,5)) THEN
					CALL definir_setor_exec_adep(nr_atendimento_p,ie_tipo_item_p,nr_prescricao_w,nr_seq_item_w,nr_seq_horario_w,NULL);
				END IF;

				IF (ie_alteracao_p = 3) THEN
					CALL Gerar_proced_assoc_mat_conta(nr_prescricao_w, nr_seq_item_w, NULL, nm_usuario_p, 'G', dt_evento_p);

					IF (coalesce(ie_atualiza_data_conta_w,'N') = 'S') THEN
						UPDATE	material_atend_paciente
						SET		dt_conta 	= dt_evento_p,
								dt_atendimento = dt_evento_p
						WHERE	nr_prescricao			= nr_prescricao_w
						AND		nr_seq_lote_ap			= nr_seq_lote_w;
					END IF;

				ELSIF (ie_alteracao_p = 4) THEN
					CALL Gerar_proced_assoc_mat_conta(nr_prescricao_w, nr_seq_item_w, NULL, nm_usuario_p, 'E', dt_evento_p);
				END IF;

			END IF;
			END;
		END LOOP;
		CLOSE c19;

	ELSIF (ie_tipo_item_p = 'DS') THEN
		BEGIN

		qt_reg_suspensos_w := 0;
		OPEN c12;
		LOOP
		FETCH c12 INTO
			nr_prescricao_w,
			nr_seq_item_w,
			cd_dieta_w,
			nr_seq_horario_w;
		EXIT WHEN NOT FOUND; /* apply on c12 */
			BEGIN
			
			ie_abriu_cursor_w	:= true;

			IF (ie_alteracao_p = 5) THEN  -- suspensao do horario
				BEGIN
				UPDATE	prescr_dieta_hor
				SET		dt_suspensao 		= clock_timestamp(),
						nm_usuario_susp		= nm_usuario_p
				WHERE	nr_sequencia 		= nr_seq_horario_w
				AND		coalesce(dt_suspensao::text, '') = ''
				AND		coalesce(dt_fim_horario::text, '') = '';

				GET DIAGNOSTICS ora2pg_rowcount = ROW_COUNT;


				IF ( ora2pg_rowcount > 0) THEN
					qt_reg_suspensos_w := qt_reg_suspensos_w + 1;
					i	:= coalesce(Vetor_Lista_Gerar_w.Count,0) + 1;
					Vetor_Lista_Gerar_w[i].nr_prescricao  	:= nr_prescricao_w;
					Vetor_Lista_Gerar_w[i].nr_seq_material 	:= nr_seq_item_w;
					Vetor_Lista_Gerar_w[i].nr_seq_horario 	:= nr_seq_horario_w;
				END IF;
				END;
			END IF;


			END;
		END LOOP;
		CLOSE c12;
			-- Deve gerar apenas um evento ja que nao soo exibidos os horarios
		IF (qt_reg_suspensos_w > 0) THEN
			BEGIN
			SELECT	nextval('prescr_mat_alteracao_seq')
			INTO STRICT	nr_seq_alteracao_w
			;

			ds_obs_final_w := SUBSTR(ds_observacao_p,1,2000);

			IF (coalesce(ie_palm_p,'N') = 'S') THEN
				IF (ds_obs_final_w IS NOT NULL AND ds_obs_final_w::text <> '') AND (ds_obs_final_w <> '') THEN
					ds_obs_final_w := substr(wheb_mensagem_pck.get_texto(307615, 'DS_OBSERVACAO_W=' || ds_obs_final_w),1,2000); -- Tipo de checagem: ADEP PDA - #@DS_OBSERVACAO_W#@
				ELSE
					ds_obs_final_w := wheb_mensagem_pck.get_texto(307616); -- Tipo de checagem: ADEP PDA
				END IF;
			END IF;

			INSERT	INTO	prescr_mat_alteracao(
								nr_sequencia,
								dt_atualizacao,
								nm_usuario,
								dt_atualizacao_nrec,
								nm_usuario_nrec,
								nr_prescricao,
								nr_seq_horario_dieta,
								dt_alteracao,
								cd_pessoa_fisica,
								ie_alteracao,
								nr_seq_qualidade,
								ds_justificativa,
								ds_observacao,
								ie_tipo_item,
								dt_horario,
								nr_atendimento,
								cd_item,
								qt_dose_adm,
								qt_dose_original,
								cd_medico_solic,
								ie_mostra_adep,
								nr_seq_assinatura,
								nr_seq_lote,
								cd_funcao,
								ie_evento_valido
								)
							VALUES (
								nr_seq_alteracao_w,
								dt_atualizacao_w,
								nm_usuario_p,
								dt_atualizacao_w,
								nm_usuario_p,
								nr_prescricao_w,
								nr_seq_horario_w,
								dt_horario_adm_w,
								obter_dados_usuario_opcao(nm_usuario_p,'C'),
								ie_alteracao_p,
								ie_qualidade_p,
								ds_justificativa_w,
								ds_obs_final_w,
								'D',
								dt_horario_w,
								nr_atendimento_p,
								cd_item_p,
								qt_adm_p,
								qt_adm_p,
								cd_medico_solic_p,
								ie_mostra_adep_w,
								nr_seq_assinatura_p,
								nr_seq_lote_w,
								cd_funcao_p,
								'S'
								);

				if (ie_alteracao_p in (4, 6)) then
					UPDATE	prescr_mat_alteracao
					SET	ie_evento_valido	= 'N'
					WHERE nr_prescricao = nr_prescricao_w
					AND nr_seq_horario_dieta 	= nr_seq_horario_w
					AND ie_alteracao 	= CASE WHEN ie_alteracao_p=4 THEN 3  ELSE 5 END;
				end if;

				nr_seq_evento_w	:= nr_sequencia_w;	

			END;

		END IF;

		END;

	ELSIF (ie_tipo_item_p = 'NPT') THEN
		BEGIN
		ie_abriu_cursor_w	:= true;

		nr_etapa_w	:= Obter_Etapa_Atual_NPT_prot(nr_prescricao_p, nr_seq_item_p);

		if (nr_etapa_w = 0) then
			nr_etapa_w := 1;
		end if;

		ie_status_npt_w	:= obter_status_solucao_prescr(6,nr_prescricao_p, nr_seq_item_p);

		/* obter sequencia */

		select	nextval('prescr_solucao_evento_seq')
		into STRICT	nr_sequencia_w
		;

		/* gerar evento */

		insert into prescr_solucao_evento(
			nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_prescricao,
			nr_seq_solucao,
			nr_seq_material,
			nr_seq_procedimento,
			nr_seq_nut,
			nr_seq_nut_neo,			
			cd_pessoa_fisica,
			ie_alteracao,
			dt_alteracao,
			ie_evento_valido,			
			ie_tipo_solucao,
			nr_seq_lote,
			nr_seq_assinatura,
			ds_justificativa,
			dt_horario,
			nr_etapa_evento)
		values (
			nr_sequencia_w,
			dt_atualizacao_w,
			nm_usuario_p,
			dt_atualizacao_w,
			nm_usuario_p,
			nr_prescricao_p,
			null,
			null,
			null,
			null,
			nr_seq_item_p,			
			obter_dados_usuario_opcao(nm_usuario_p, 'C'),
			CASE WHEN ie_alteracao_p=3 THEN  CASE WHEN ie_status_npt_w='INT' THEN  3  ELSE 1 END   ELSE 7 END ,
			dt_evento_p,
			'S',
			6,
			nr_seq_lote_w,
			nr_seq_assinatura_p,
			ds_justificativa_p,
			dt_horario_w,
			nr_etapa_w);

			nr_seq_evento_w	:= nr_sequencia_w;		

		if (ie_alteracao_p		= 3) then -- administracao do horario
			if (ie_status_npt_w = 'N') then		
				update	nut_pac
				set		ie_status = 'I',
						dt_status = dt_evento_p
				where	nr_prescricao 	= nr_prescricao_p
				and		nr_sequencia 	= nr_seq_item_p;

				update	nut_paciente_hor
				set		ie_status = 'I'
				where	nr_seq_nut_protocolo			= nr_seq_item_p
				and		nr_etapa						= nr_etapa_w
				and		coalesce(ie_horario_especial,'N')	= 'N';

				update	prescr_mat_hor
				set		dt_fim_horario 	= dt_atualizacao_w,
						nm_usuario_adm	= nm_usuario_p						
				where	nr_seq_lote 	= nr_seq_lote_w;

			else
				update	nut_pac
				set		ie_status = 'I',
						dt_status = dt_evento_p
				where	nr_prescricao 	= nr_prescricao_p
				and		nr_sequencia 	= nr_seq_item_p;

				--Termina etapa anterior
				update	nut_paciente_hor
				set		ie_status = 'T'
				where	nr_seq_nut_protocolo	= nr_seq_item_p
				and		nr_etapa				= nr_etapa_w - 1
				and		coalesce(ie_horario_especial,'N')	= 'N';

				--Inicia a proxima etapa
				update	nut_paciente_hor
				set		ie_status = 'I'
				where	nr_seq_nut_protocolo	= nr_seq_item_p
				and		nr_etapa				= nr_etapa_w
				and		coalesce(ie_horario_especial,'N')	= 'N';

				update	prescr_mat_hor
				set		dt_fim_horario 	= dt_atualizacao_w,
						nm_usuario_adm	= nm_usuario_p						
				where	nr_seq_lote 	= nr_seq_lote_w;				

			end if;

		else	

			update	nut_pac
			set		ie_suspenso	= 'S',
					dt_suspensao	= clock_timestamp(),
					nm_usuario_susp	= nm_usuario_p
			where	nr_prescricao	= nr_prescricao_p
			and		nr_sequencia	= nr_seq_item_p;

			update	nut_paciente_hor
			set		dt_suspensao	= clock_timestamp(),
					nm_usuario_susp	= nm_usuario_p,
					ie_status = 'S'
			where	nr_seq_nut_protocolo = nr_seq_item_p
			and		coalesce(dt_suspensao::text, '') = ''
			and		coalesce(dt_fim_horario::text, '') = '';

			update	prescr_mat_hor
			set		dt_suspensao 	= dt_atualizacao_w,
					nm_usuario_susp	= nm_usuario_p						
			where	nr_seq_lote 	= nr_seq_lote_w
			and		coalesce(dt_suspensao::text, '') = ''
			and		coalesce(dt_fim_horario::text, '') = '';

		end if;

		END;		


	END IF;

	-- suspender horario nas prescricoes duplicadas
	IF (ie_alteracao_p		= 3) AND -- administracao do horario
		(nr_prescr_adm_p IS NOT NULL AND nr_prescr_adm_p::text <> '') AND (Wheb_assist_pck.obterParametroFuncao(1113,494)	= 'S') THEN
		if (ie_tipo_item_p in ('P', 'G', 'C', 'I', 'L')) and (coalesce(nr_prescr_bomba_w, 0) > 0) then
			nr_prescricoes_ww := REPLACE(nr_prescricoes_p,nr_prescr_bomba_w,0);
		else
		nr_prescricoes_ww := REPLACE(nr_prescricoes_p,nr_prescr_adm_p,0);
		end if;

		if (nr_prescricoes_ww <> '0' and
			(nr_prescricoes_ww IS NOT NULL AND nr_prescricoes_ww::text <> '')) then
		
			if (ie_tipo_item_p in ('P', 'G', 'C', 'I', 'L')) then
				select 	max(a.nr_sequencia) nr_seq_horario
				into STRICT	nr_seq_hor_dupl_w
				from	prescr_proc_hor a
				where	a.cd_procedimento = cd_procedimento_w
				and		coalesce(a.nr_seq_proc_interno, 0) = coalesce(nr_seq_proc_interno_w, 0)
				and		a.nr_prescricao in (SELECT * from table(lista_pck.obter_lista(nr_prescricoes_ww)))
				and		a.dt_horario = dt_horario_w
				and		coalesce(a.dt_fim_horario::text, '') = ''
				and		coalesce(a.dt_suspensao::text, '') = '';
			else
				nr_seq_hor_dupl_w := nr_seq_horario_p;
			end if;
			
			SELECT * FROM gerar_alteracao_horario_prescr(cd_estabelecimento_p, nr_atendimento_p, ie_tipo_item_p, cd_item_p, cd_intervalo_p, qt_item_p, qt_hora_prescricao_p, dt_evento_p, nr_seq_hor_dupl_w, NULL, nr_prescricoes_ww, NULL, NULL, ie_laboratorio_p, 5, NULL, NULL, NULL, NULL, wheb_mensagem_pck.get_texto(307623, 'DS_JUSTIFICATIVA_W=' || ds_justificativa_w),  -- Suspenso pelo sistema por duplicidade da prescricao.  #@DS_JUSTIFICATIVA_W#@
				ds_observacao_p, nm_usuario_p, 'N', nr_seq_proc_interno_p, nr_agrupamento_p, NULL, ie_acm_sn_p, nr_seq_prot_glic_p, ie_inicia_proced_p, cd_medico_solic_p, ie_item_suspenso_p, cd_perfil_p, cd_funcao_p, ie_susp_mat_prescr_p, nr_seq_lote_forncedor_p, NULL, NULL, NULL, NULL, 'N', NULL, NULL, cd_unidade_medida_p, NULL, '', SUBSTR(ds_observacao_item_p,1,2000), cd_evolucao_p, null, null, ds_msg_w) INTO STRICT cd_evolucao_p, ds_msg_w
				;
        end if;
	END IF;

	IF (ie_gerar_todos_p = 'S') AND (ie_tipo_item_p in ('M', 'IAH')) THEN

		SELECT	MAX(dt_horario)
		INTO STRICT	dt_horario_w
		FROM	prescr_mat_hor
		WHERE	nr_sequencia = nr_seq_horario_p
		AND		Obter_se_horario_liberado(dt_lib_horario, dt_horario) = 'S';

		OPEN c15;
		LOOP
		FETCH c15 INTO
			nr_prescricao_w,
			nr_seq_material_w,
			cd_material_w,
			qt_material_w,
			cd_intervalo_w,
			nr_seq_horario_w,
			nr_agrupamento_w,
			cd_unidade_medida_w;
		EXIT WHEN NOT FOUND; /* apply on c15 */
			ie_abriu_cursor_w	:= true;

			SELECT * FROM gerar_alteracao_horario_prescr( cd_estabelecimento_p, nr_atendimento_p, 'M', cd_material_w, cd_intervalo_w, qt_material_w, qt_hora_prescricao_p, dt_evento_p, nr_seq_horario_w, nr_prescricao_w, nr_prescricao_w, nr_prescricao_w, nr_seq_material_w, ie_laboratorio_p, ie_alteracao_p, NULL, NULL, ie_satisfacao_p, ie_qualidade_p, ds_justificativa_w, ds_observacao_p, nm_usuario_p, 'N', nr_seq_proc_interno_p, nr_agrupamento_w, nr_seq_motivo_susp_p, ie_acm_sn_p, nr_seq_prot_glic_p, ie_inicia_proced_p, cd_medico_solic_p, ie_item_suspenso_p, cd_perfil_p, cd_funcao_p, ie_susp_mat_prescr_p, nr_seq_lote_forncedor_p, ie_proc_regra_p, cd_procedimento_regra_p, ie_origem_proced_regra_p, nr_seq_proc_interno_regra_p, ie_alterou_hor_adep_p, nr_seq_assinatura_p, NULL, cd_unidade_medida_w, NULL, '', SUBSTR(ds_observacao_item_p,1,2000), cd_evolucao_p, null, null, ds_msg_w) INTO STRICT cd_evolucao_p, ds_msg_w
							;

		END LOOP;
		CLOSE c15;
	END IF;

	if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

  if (ie_tipo_item_p = 'M' and nr_seq_integr_alt_w > 0 and nr_seq_cpoe_w > 0) then
    select obter_cpoe_regra_ator('M')
    into STRICT regra_alteracao_is_filler_w
;

    /* Check if integration is filler */

    if (regra_alteracao_is_filler_w = 'OF') then
      CALL call_bifrost_content('prescription.medicine.order.request','cpoe_mat_json_pck.get_material_prescr_message(' || nr_seq_cpoe_w || ', ' || nr_seq_integr_alt_w || ', ' || chr(39) || nm_usuario_p || chr(39) || ')', nm_usuario_p);
    end if;
  end if;

	if (ie_tipo_item_p in ('DS','D')) then
		nm_tabela_w	:= 'PRESCR_DIETA';
	elsif (ie_tipo_item_p in ('S','ME','MAT','IA','IAG','LD','SNE','M', 'IAH')) then
		nm_tabela_w	:= 'PRESCR_MATERIAL';
	elsif (ie_tipo_item_p IN ('P','G','C','I','L')) then
		nm_tabela_w	:= 'PRESCR_PROCEDIMENTO';
	elsif (ie_tipo_item_p in ('R')) then
		nm_tabela_w	:= 'PRESCR_RECOMENDACAO';
	elsif (ie_tipo_item_p in ('B')) then
		nm_tabela_w	:= 'PRESCR_MEDICA_ORDEM';
	elsif (ie_tipo_item_p in ('SOL')) then
		nm_tabela_w	:= 'PRESCR_SOLUCAO';
	end if;

	if (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') and ((coalesce(nr_seq_item_p,nr_sequencia_item_w) IS NOT NULL AND (coalesce(nr_seq_item_p,nr_sequencia_item_w))::text <> '')) then
		CALL Atualiza_ie_horario_susp(nr_prescricao_p,coalesce(nr_seq_item_p,nr_sequencia_item_w),nm_tabela_w);
	elsif (nr_seq_horario_p IS NOT NULL AND nr_seq_horario_p::text <> '') then
		if (nm_tabela_w	= 'PRESCR_MATERIAL') THEN
			select	max(nr_seq_material),
					max(nr_prescricao)
			into STRICT	nr_seq_item_w,
					nr_prescricao_w
			from	prescr_mat_hor
			where	nr_sequencia = nr_seq_horario_p;
		elsif (nm_tabela_w	= 'PRESCR_DIETA') then
			select	max(nr_seq_dieta),
					max(nr_prescricao)
			into STRICT	nr_seq_item_w,
					nr_prescricao_w
			from	prescr_dieta_hor
			where	nr_sequencia = nr_seq_horario_p;		
		elsif (nm_tabela_w	= 'PRESCR_PROCEDIMENTO') then
			select	max(nr_seq_procedimento),
					max(nr_prescricao)
			into STRICT	nr_seq_item_w,
					nr_prescricao_w
			from	prescr_proc_hor
			where	nr_sequencia = nr_seq_horario_p;		
		elsif (nm_tabela_w	= 'PRESCR_RECOMENDACAO') then
			select	max(nr_seq_recomendacao),
					max(nr_prescricao)
			into STRICT	nr_seq_item_w,
					nr_prescricao_w
			from	prescr_rec_hor
			where	nr_sequencia = nr_seq_horario_p;		
		elsif (nm_tabela_w	= 'PRESCR_SOLUCAO') then
			select	max(nr_seq_solucao),
					max(nr_prescricao)
			into STRICT	nr_seq_item_w,
					nr_prescricao_w
			from	prescr_mat_hor
			where	nr_sequencia = nr_seq_horario_p;
		end if;
		CALL Atualiza_ie_horario_susp(nr_prescricao_w,nr_seq_item_w,nm_tabela_w);		
	elsif (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') THEN
		CALL Atualiza_ie_horario_susp(nr_prescricao_p,NULL,NULL);
	ELSE
		OPEN C17;
		LOOP
		FETCH C17 INTO
			nr_prescricao_w;
		EXIT WHEN NOT FOUND; /* apply on C17 */
			BEGIN
			CALL Atualiza_ie_horario_susp(nr_prescricao_w,NULL,NULL);
			END;
		END LOOP;
		CLOSE C17;
	END IF;

	select	max(cd_certificado)
	into STRICT	cd_certificado_w
	from	usuario
	where	nm_usuario = nm_usuario_p;		

	ie_gera_sem_certificado_w	:= 'N';

	if (wheb_assist_pck.get_gerar_sem_certificado = 'S') then
		if (ie_alteracao_p = 3) then --Administracao de horario
			nr_seq_projeto_w	:= 35007; --ADEP - ADL - Administracao do item
		else
			nr_seq_projeto_w	:= 50573; --ADEP - Alteracao do item (suspensoo/reversoo/aprazamento)
		end if;

		ie_gera_sem_certificado_w := adep_obter_se_assin_perfil(nr_seq_projeto_w, cd_perfil_p); --ADEP - Alteracao do item (suspensoo/reversoo/aprazamento)
	end if;

	IF (ie_susp_por_duplic_w = 'N') and
		((cd_certificado_w IS NOT NULL AND cd_certificado_w::text <> '') OR (ie_gera_sem_certificado_w = 'S')) AND (coalesce(obter_data_assinatura_digital(nr_seq_assinatura_p)::text, '') = '') then

		SELECT	MAX(cd_Pessoa_fisica)
		INTO STRICT	cd_Pessoa_fisica_w
		FROM	atendimento_paciente
		WHERE	nr_atendimento = nr_atendimento_p;

		ie_exec_pend_assinat_w	:= 'S';

		if	((ie_tipo_item_p in ('M', 'IAH', 'MAT')) and (coalesce(nr_seq_horario_p,0) > 0))  then

			select	coalesce(max('S'), 'N')
			into STRICT	ie_exec_pend_assinat_w
			from	prescr_mat_alteracao
			where	nr_seq_horario = nr_seq_horario_p;	

		elsif	((ie_tipo_item_p in ('P', 'G', 'C')) and (coalesce(nr_seq_horario_p,0) > 0))  then

			select	coalesce(max('S'), 'N')
			into STRICT	ie_exec_pend_assinat_w
			from	prescr_mat_alteracao
			where	nr_seq_horario_proc = nr_seq_horario_p;			

		elsif	((ie_tipo_item_p in ('R')) and (coalesce(nr_seq_horario_p,0) > 0))  then

			select	coalesce(max('S'), 'N')
			into STRICT	ie_exec_pend_assinat_w
			from	prescr_mat_alteracao
			where	nr_seq_horario_rec = nr_seq_horario_p;

		elsif	((ie_tipo_item_p in ('E')) and (coalesce(nr_seq_horario_p,0) > 0))  then

			select	coalesce(max('S'), 'N')
			into STRICT	ie_exec_pend_assinat_w
			from	prescr_mat_alteracao
			where	nr_seq_horario_sae = nr_seq_horario_p;

		elsif	((ie_tipo_item_p in ('SOL')) and (coalesce(nr_prescricao_p,0) > 0)) then

			select	coalesce(max('S'), 'N')
			into STRICT	ie_exec_pend_assinat_w
			from	prescr_solucao_evento
			where	nr_prescricao = nr_prescricao_p;

		end if;

		if (ie_exec_pend_assinat_w = 'S') then
			if (ie_tipo_item_p = 'SOL') then			
				CALL Gerar_registro_pendente_PEP('ADEP',nr_prescricao_p,cd_pessoa_fisica_w, nr_atendimento_p,nm_usuario_p, 'A',null,'SOL',null,null,null,null,null,null,null,null,null,nr_seq_item_w,coalesce(nr_seq_etapa_w,0),null,null,null,nr_sequencia_w);
			else
				CALL Gerar_registro_pendente_PEP('ADEP',nr_prescr_log_w, cd_pessoa_fisica_w, nr_atendimento_p,nm_usuario_p,'A', nr_seq_horario_p, ie_tipo_item_p,null,null,null,null,null,null,null,null,null,null,null,null,null,null,nr_seq_evento_w);
			end if;
		end if;

	END IF;
END IF;

if (ie_alteracao_p = 5) and (Vetor_Lista_Gerar_w.count > 0) then

	for	j in 1..Vetor_Lista_Gerar_w.count loop
		CALL integracao_dispensario_pck.esteira_enviar_cancelamento(Vetor_Lista_Gerar_w[j].nr_prescricao, Vetor_Lista_Gerar_w[j].nr_seq_material, Vetor_Lista_Gerar_w[j].nr_seq_horario, nm_usuario_p);
	end loop;
	for	j in 1..Vetor_Lista_Gerar_w.count loop
		CALL integracao_dispensario_pck.esteira_enviar_lote_prescr(Vetor_Lista_Gerar_w[j].nr_prescricao, Vetor_Lista_Gerar_w[j].nr_seq_material, Vetor_Lista_Gerar_w[j].nr_seq_horario, null, nm_usuario_p);
	end loop;

end if;

CALL gqa_atualiza_etapas_mentor(nr_atendimento_p);
ie_gerar_evolucao_emar_w := obter_param_usuario(1113, 727, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, coalesce(wheb_usuario_pck.get_cd_estabelecimento, 1), ie_gerar_evolucao_emar_w);

if (ie_gerar_evolucao_emar_w = 'S' and ie_alteracao_p in (3, 4, 5)) then
	if (ie_tipo_item_p = 'M') then
		cd_evolucao_w := clinical_notes_pck.gerar_soap(nr_atendimento_p, nr_seq_alteracao_w, 'CPOE_ITEMS', 1, 'P', 2, cd_evolucao_w, ie_tipo_item_p);
	elsif (ie_tipo_item_p = 'MAT') then
		cd_evolucao_w := clinical_notes_pck.gerar_soap(nr_atendimento_p, nr_seq_alteracao_w, 'CPOE_ITEMS', 8, 'P', 2, cd_evolucao_w, ie_tipo_item_p);
	elsif (ie_tipo_item_p = 'R') then
		cd_evolucao_w := clinical_notes_pck.gerar_soap(nr_atendimento_p, nr_seq_alteracao_w, 'CPOE_ITEMS', 4, 'P', 2, cd_evolucao_w, ie_tipo_item_p);
		if (cd_evolucao_w IS NOT NULL AND cd_evolucao_w::text <> '') then
			update prescr_rec_hor
			set cd_evolucao = cd_evolucao_w
			where nr_sequencia = nr_seq_horario_w;
		end if;
	elsif (ie_tipo_item_p = 'E') then
		cd_evolucao_w := clinical_notes_pck.gerar_soap(nr_atendimento_p, nr_seq_alteracao_w, 'CPOE_ITEMS', 4, 'P', 2, cd_evolucao_w, ie_tipo_item_p);
		if (cd_evolucao_w IS NOT NULL AND cd_evolucao_w::text <> '') then
			update pe_prescr_proc_hor
			set cd_evolucao = cd_evolucao_w
			where nr_sequencia = nr_seq_horario_w;
		end if;
	elsif (ie_tipo_item_p in ('P', 'G', 'C', 'I', 'L')) then
		select ie_tipo
		into STRICT ie_tipo_ww
		from prescr_proc_hor p, PROC_INTERNO pi
		where p.nr_seq_proc_interno = pi.nr_sequencia
		and p.nr_sequencia = nr_seq_horario_w;
		if (ie_tipo_ww = 'AP') then /*Anatomic pathology exams*/
			cd_evolucao_w := clinical_notes_pck.gerar_soap(nr_atendimento_p, nr_seq_alteracao_w, 'CPOE_ITEMS', 9, 'P', 2, cd_evolucao_w, ie_tipo_item_p, cd_Pessoa_fisica_w);
		else
			cd_evolucao_w := clinical_notes_pck.gerar_soap(nr_atendimento_p, nr_seq_alteracao_w, 'CPOE_ITEMS', 2, 'P', 2, cd_evolucao_w, ie_tipo_item_p, cd_Pessoa_fisica_w);
		end if;
		if (cd_evolucao_w IS NOT NULL AND cd_evolucao_w::text <> '' AND nr_seq_horario_w IS NOT NULL AND nr_seq_horario_w::text <> '') then
			insert into prescr_proc_hor_compl(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				cd_evolucao
			) values (
				nr_seq_horario_w,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				cd_evolucao_w
			);
		end if;
	elsif (ie_tipo_item_p = 'D') then
		cd_evolucao_w := clinical_notes_pck.gerar_soap(nr_atendimento_p, nr_seq_alteracao_w, 'CPOE_ITEMS', 0, 'P', 2, cd_evolucao_w, ie_tipo_item_p);
		if (cd_evolucao_w IS NOT NULL AND cd_evolucao_w::text <> '') then
			update prescr_dieta_hor
			set cd_evolucao = cd_evolucao_w
			where nr_sequencia = nr_seq_horario_w;
		end if;
	elsif (ie_tipo_item_p = 'S') then
		cd_evolucao_w := clinical_notes_pck.gerar_soap(nr_atendimento_p, nr_seq_alteracao_w, 'CPOE_ITEMS', 0, 'P', 2, cd_evolucao_w, ie_tipo_item_p);
	end if;
	if (ie_tipo_item_p in ('M', 'MAT', 'S') and (cd_evolucao_w IS NOT NULL AND cd_evolucao_w::text <> '')) then
			select	nextval('prescr_mat_hor_compl_seq')
            into STRICT    nr_seq_mat_compl_w
;
			insert into prescr_mat_hor_compl(
                nr_sequencia,
                dt_atualizacao,
                nm_usuario,
                dt_atualizacao_nrec,
                nm_usuario_nrec,
				cd_evolucao
            ) values (
                nr_seq_mat_compl_w,
                clock_timestamp(),
                nm_usuario_p,
                clock_timestamp(),
                nm_usuario_p,
                cd_evolucao_w
            );
			update prescr_mat_hor
			set nr_seq_mat_compl = nr_seq_mat_compl_w
			where nr_sequencia	= nr_seq_horario_w;
	end if;
end if;

if (ie_param716_w <> 'N') then
    ie_susp_nurse_w := 'N';
    if (ie_alteracao_p = 4) then
        ie_susp_nurse_w := 'S';
    end if;
	CALL generate_nurse_ack(ie_susp_nurse_w, ie_tipo_item_p, nr_atendimento_p, nr_seq_item_cpoe_w, cd_item_p);
end if;

if (not ie_abriu_cursor_w AND
	ie_checa_retroativo_w = 'N' AND
	(dt_horario_w IS NOT NULL AND dt_horario_w::text <> '') and
	dt_horario_w < clock_timestamp() - interval '2 days') THEN
	ds_msg_p	:= 	wheb_mensagem_pck.get_texto(1206290);
end if;

if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_alteracao_horario_prescr ( cd_estabelecimento_p bigint, nr_atendimento_p bigint, ie_tipo_item_p text, cd_item_p text, cd_intervalo_p text, qt_item_p bigint, qt_hora_prescricao_p bigint, dt_evento_p timestamp, nr_seq_horario_p bigint, nr_prescr_adm_p bigint, nr_prescricoes_p text, nr_prescricao_p bigint, nr_seq_item_p bigint, ie_laboratorio_p text, ie_alteracao_p bigint, qt_adm_p bigint, cd_um_qt_adm_p text, ie_satisfacao_p bigint, ie_qualidade_p bigint, ds_justificativa_p text, ds_observacao_p text, nm_usuario_p text, ie_gerar_todos_p text, nr_seq_proc_interno_p bigint, nr_agrupamento_p bigint, nr_seq_motivo_susp_p bigint, ie_acm_sn_p text, nr_seq_prot_glic_p bigint, ie_inicia_proced_p text, cd_medico_solic_p bigint, ie_item_suspenso_p text, cd_perfil_p bigint, cd_funcao_p bigint, ie_susp_mat_prescr_p text, nr_seq_lote_forncedor_p bigint, ie_proc_regra_p text DEFAULT 'N', cd_procedimento_regra_p bigint DEFAULT NULL, ie_origem_proced_regra_p bigint DEFAULT NULL, nr_seq_proc_interno_regra_p bigint DEFAULT NULL, ie_alterou_hor_adep_p text DEFAULT NULL, nr_seq_assinatura_p bigint DEFAULT NULL, ie_palm_p text DEFAULT NULL, cd_unidade_medida_p text DEFAULT NULL, ds_item_p text DEFAULT NULL, ds_componentes_p text DEFAULT NULL, ds_observacao_item_p text DEFAULT NULL, cd_evolucao_p INOUT bigint DEFAULT NULL, ie_via_aplicacao_p text default null, nr_seq_motivo_adm_p bigint default null, ds_msg_p INOUT text DEFAULT NULL, nr_seq_topo_lat_p topografia_lat_adm.nr_sequencia%type default null, ie_somente_horario_p text default 'N', ie_via_aplic_alt_p text default null, nr_seq_part_name_p bigint default null, ie_procedure_time_p text default null, start_time_p text default null, end_time_p text default null, dept_location_p text default null, req_time_p text default null, ie_alterar_item_assoc_p text default 'N') FROM PUBLIC;

