-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE proj_do_impact_analysis ( nr_seq_ordem_serv_p bigint, nr_product_requirement_p bigint, nm_usuario_p usuario.nm_usuario%type ) AS $body$
DECLARE


ds_macro_w			varchar(1000);
ds_titulo_default_w		varchar(255);
ie_function_linked_prs_w	varchar(1);
ie_impacto_requisito_w		varchar(255);
qt_impacto_w			bigint;
qt_impacto_atual_w		bigint;

cd_funcao_w			man_ordem_servico.cd_funcao%type;
ie_classificacao_w		man_ordem_servico.ie_classificacao%type;
nr_seq_main_proj_so_w		man_ordem_servico.nr_sequencia%type;
nr_seq_impacto_w 		man_ordem_serv_impacto.nr_sequencia%type;
nr_seq_imp_pr_w 		man_ordem_serv_imp_pr.nr_sequencia%type;
nm_usuario_aprov_w		man_ordem_serv_aprov_ccb.nm_usuario_aprov%type;


BEGIN

if (nr_seq_ordem_serv_p IS NOT NULL AND nr_seq_ordem_serv_p::text <> '') and (nr_product_requirement_p IS NOT NULL AND nr_product_requirement_p::text <> '') then
	begin
	
	/**
	* Get the service order classification, in order
	* to set the ie_impacto_requisito_w variable and get the
	* current function from the service order
	*/
	select	max(ie_classificacao),
		max(cd_funcao)
	into STRICT	ie_classificacao_w,
		cd_funcao_w
	from	man_ordem_servico
	where	nr_sequencia = nr_seq_ordem_serv_p;
		
	/**
	* Check if the PRS has the function from the linked service
	* order
	*/
	select	coalesce(max('S'), 'N')
	into STRICT	ie_function_linked_prs_w
	from	reg_funcao_pr rfp
	where	rfp.nr_seq_product_req = nr_product_requirement_p
	and	rfp.cd_funcao = cd_funcao_w;

	/**
	* If the service order function is not linked, or is not
	* informed, show an error message to the user, asking for he
	* to inform a valid function
	*/
	if (ie_function_linked_prs_w = 'N') then
		begin
		if (cd_funcao_w IS NOT NULL AND cd_funcao_w::text <> '') then
			begin
			select	'DS_FUNCAO=' || obter_desc_exp_idioma(f.cd_exp_funcao, wheb_usuario_pck.get_nr_seq_idioma)
			into STRICT	ds_macro_w
			from	funcao f
			where	f.cd_funcao = cd_funcao_w;
			
			CALL wheb_mensagem_pck.exibir_mensagem_abort(1149662, ds_macro_w);
			end;
		else
			begin
			ds_macro_w := 'NR_SEQ_ORDEM_SERV=' || nr_seq_ordem_serv_p;
			CALL wheb_mensagem_pck.exibir_mensagem_abort(1149805, ds_macro_w);
			end;
		end if;
		end;
	end if;
		
	/**
	* If is a Defect service order, will set
	* 'Correcao' as the ie_impacto_requisito_w
	* otherwise it will be 'Melhoria'
	*/
	if (ie_classificacao_w = 'E') then
		ie_impacto_requisito_w := 'C';
	else
		ie_impacto_requisito_w := 'M';
	end if;

	/**
	* Check if the linked service order already have a Impact
	* Analysis generated with the same PRS and function as the
	* informed in the linkage
	*/
	select	count(1)
	into STRICT	qt_impacto_atual_w
	from	man_ordem_serv_impacto mosi,
		man_ordem_serv_imp_pr mosip,
		man_ordem_serv_imp_pr_func mosipf
	where	mosi.nr_sequencia = mosip.nr_seq_impacto
	and	mosip.nr_sequencia = mosipf.nr_seq_imp_pr
	and	mosi.nr_seq_ordem_serv = nr_seq_ordem_serv_p
	and	mosip.nr_product_requirement = nr_product_requirement_p
	and	mosip.ie_impacto_requisito = ie_impacto_requisito_w
	and	(mosi.dt_liberacao IS NOT NULL AND mosi.dt_liberacao::text <> '')
	and	(mosi.dt_aprovacao IS NOT NULL AND mosi.dt_aprovacao::text <> '');

	/**
	* Will only continue if there is no Impact Analysis found in the
	* previous query
	*/
	if (qt_impacto_atual_w = 0) then
		begin
		/**
		* Get the project SO number.
		*/
		select	proj_obter_dados_projeto(proj_obter_projeto_ordem_serv(a.nr_sequencia), 'OS')
		into STRICT	nr_seq_main_proj_so_w
		from	man_ordem_servico a
		where	a.nr_sequencia = nr_seq_ordem_serv_p;

		/**
		* Get the last CCB approver user from the
		* project main service order
		*/
		select	max(x.nm_usuario_nrec)
		into STRICT	nm_usuario_aprov_w
		from (
			SELECT	mosi.nm_usuario_nrec
			from	man_ordem_serv_impacto mosi,
				man_ordem_serv_imp_pr mosip
			where	mosi.nr_sequencia = mosip.nr_seq_impacto
			and	(mosi.dt_liberacao IS NOT NULL AND mosi.dt_liberacao::text <> '')
			and	(mosi.dt_aprovacao IS NOT NULL AND mosi.dt_aprovacao::text <> '')
			and	mosi.nr_seq_ordem_serv = nr_seq_main_proj_so_w
			and	mosip.nr_product_requirement = nr_product_requirement_p
			order by mosi.dt_aprovacao desc
			) x LIMIT 1;
		
		/**
		* Generate the Impact Analysis title
		*/
		select	count(nr_sequencia) + 1 qt_impacto
		into STRICT	qt_impacto_w
		from	man_ordem_serv_impacto
		where	nr_seq_ordem_serv = nr_seq_ordem_serv_p;
		
		select	obter_desc_expressao(872661) || ' - ' || qt_impacto_w
		into STRICT	ds_titulo_default_w
		;

		/**
		* Clone the Impact Analisys as the project SO
		* impact analysis
		*/
		select 	nextval('man_ordem_serv_impacto_seq')
		into STRICT 	nr_seq_impacto_w
		;
	
		insert into man_ordem_serv_impacto(
			nr_sequencia,
			nr_seq_ordem_serv,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			dt_liberacao,
			ds_titulo,
			dt_aprovacao)
		values (nr_seq_impacto_w,
			nr_seq_ordem_serv_p,
			clock_timestamp(),
			coalesce(nm_usuario_aprov_w, nm_usuario_p),
			clock_timestamp(),
			coalesce(nm_usuario_aprov_w, nm_usuario_p),
			clock_timestamp(),
			ds_titulo_default_w,
			null);
		
		select 	nextval('man_ordem_serv_imp_pr_seq')
		into STRICT 	nr_seq_imp_pr_w
		;
		
		insert into man_ordem_serv_imp_pr(
			nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_impacto,
			nr_product_requirement,
			ie_impacto_requisito,
			ds_new_title)
		values (nr_seq_imp_pr_w,
			clock_timestamp(),
			coalesce(nm_usuario_aprov_w, nm_usuario_p),
			clock_timestamp(),
			coalesce(nm_usuario_aprov_w, nm_usuario_p),
			nr_seq_impacto_w,
			nr_product_requirement_p,
			ie_impacto_requisito_w,
			null);
				
		insert into man_ordem_serv_imp_pr_func(
			nr_sequencia,
			nr_seq_imp_pr,
			nm_usuario,
			dt_atualizacao,
			nm_usuario_nrec,
			dt_atualizacao_nrec,
			cd_funcao)
		values (nextval('man_ordem_serv_imp_pr_func_seq'),
			nr_seq_imp_pr_w,
			coalesce(nm_usuario_aprov_w, nm_usuario_p),
			clock_timestamp(),
			coalesce(nm_usuario_aprov_w, nm_usuario_p),
			clock_timestamp(),
			cd_funcao_w);
			
		
		commit;
		
		CALL man_liberar_analise_impacto(nr_seq_ordem_serv_p, nr_seq_impacto_w, coalesce(nm_usuario_aprov_w, nm_usuario_p));
		end;
	end if;
	end;
end if;
	
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE proj_do_impact_analysis ( nr_seq_ordem_serv_p bigint, nr_product_requirement_p bigint, nm_usuario_p usuario.nm_usuario%type ) FROM PUBLIC;

