-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE confirmar_administracao_ccg ( nr_seq_glicemia_p bigint, nr_prescricao_p bigint, nr_seq_horario_p bigint, nm_usuario_p text, ie_local_aplicacao_p text) AS $body$
DECLARE

				
ora2pg_rowcount int;
nr_seq_evento_w				bigint;
ie_gera_adm_w				varchar(1);
nr_sequencia_w				bigint;
nr_prescricao_w				bigint;
cd_procedimento_w			bigint;
ie_origem_proced_w			bigint;
qt_procedimento_w			double precision;
cd_setor_atendimento_w		integer;
nr_seq_exame_w				bigint;
nr_seq_proc_interno_w		bigint;
nr_seq_interno_w			bigint;
nr_seq_horario_w			bigint;
dt_horario_w				timestamp;
ie_cobrar_horario_w			varchar(1);
ie_cobrar_horarioI_w		varchar(1);
cont_w						bigint;
ie_cobra_adep_w				varchar(1);
VarIe_Cobra_Prim_hor_w		varchar(1);
ie_cobra_proc_hor_w			varchar(1);
ie_ccg_confirmacao_w		varchar(1);
ds_observacao_w				atend_glicemia_evento.ds_observacao%type := null;
qt_glicose_adm_w			atendimento_glicemia.qt_glicose_adm%type;
qt_ui_insulina_adm_w		atendimento_glicemia.qt_ui_insulina_adm%type;
qt_ui_insulina_int_adm_w	atendimento_glicemia.qt_ui_insulina_int_adm%type;
cd_material_w				material.cd_material%type;
nr_seq_material_w			prescr_material.nr_sequencia%type;
qt_glicemia_w				atendimento_glicemia.qt_glicemia%type;
nr_atendimento_w			atendimento_glicemia.nr_atendimento%type;
dt_glicemia_w				atendimento_glicemia.dt_controle%type;
qt_glicose_w				atendimento_glicemia.qt_glicose%type;
nr_seq_map_w				bigint;
qt_conta_w					double precision;
ie_cobra_adm_w				varchar(1);
Ie_registrar_sv_w			varchar(1);
ie_tipo_item_w				varchar(1);
qt_glicose_adm_2w		    atendimento_glicemia.qt_glicose_adm%type;
dt_fim_horario_w			timestamp;
ie_evento_w					atend_glicemia_evento.ie_evento%type;


BEGIN

VarIe_Cobra_Prim_hor_w := obter_param_usuario(1113, 351, wheb_usuario_pck.get_cd_perfil, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, VarIe_Cobra_Prim_hor_w);
ie_gera_adm_w := obter_param_usuario(1113, 360, wheb_usuario_pck.get_cd_perfil, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_gera_adm_w);
ie_cobra_proc_hor_w := obter_param_usuario(1113, 246, wheb_usuario_pck.get_cd_perfil, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_cobra_proc_hor_w);
Ie_registrar_sv_w := obter_param_usuario(1113, 478, wheb_usuario_pck.get_cd_perfil, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, Ie_registrar_sv_w);


if (coalesce(nr_seq_glicemia_p, 0) > 0) and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') then

	update	atendimento_glicemia
	set		ie_adm_confirmada		= 'S',
			nm_usuario				= nm_usuario_p,
			qt_ui_insulina_adm		= CASE WHEN ie_gera_adm_w='S' THEN  qt_ui_insulina_adm  ELSE coalesce(qt_ui_insulina_adm,qt_ui_insulina_calc) END ,
			qt_ui_insulina_int_adm	= CASE WHEN ie_gera_adm_w='S' THEN  qt_ui_insulina_int_adm  ELSE coalesce(qt_ui_insulina_int_adm,qt_ui_insulina_int_calc) END ,		
			qt_glicose_adm			= CASE WHEN ie_gera_adm_w='S' THEN  qt_glicose_adm  ELSE coalesce(qt_glicose_adm,qt_glicose) END
	where	nr_sequencia			= nr_seq_glicemia_p;
				
	select 	coalesce(qt_ui_insulina_adm,0),
			coalesce(qt_ui_insulina_calc,0),
			coalesce(qt_glicose,0),
			coalesce(qt_glicose_adm,0)
	into STRICT	qt_ui_insulina_adm_w,
			qt_ui_insulina_int_adm_w,
			qt_glicose_w,
			qt_glicose_adm_w
	from 	atendimento_glicemia
	where 	nr_sequencia = nr_seq_glicemia_p;

	if ( qt_ui_insulina_int_adm_w 	= 0 and
		 qt_glicose_w 				= 0 and
		 qt_glicose_adm_w 			= 0 and
		 qt_ui_insulina_adm_w 		= 0 ) then
		ie_evento_w := 14;
	else
		ie_evento_w := 10;
	end if;
	
	ds_observacao_w := coalesce(substr(obter_valor_dominio(6166,ie_local_aplicacao_p),1,50),'');
	
	select	nextval('atend_glicemia_evento_seq')
	into STRICT	nr_seq_evento_w
	;
	insert into atend_glicemia_evento(
		nr_sequencia,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		dt_atualizacao,
		nm_usuario,
		nr_seq_glicemia,
		ie_evento,
		dt_evento,
		cd_pessoa_evento,
		ds_observacao,
		ie_local_aplicacao)
	values (
		nr_seq_evento_w,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		nr_seq_glicemia_p,
		ie_evento_w,
		clock_timestamp(),
		substr(obter_dados_usuario_opcao(nm_usuario_p,'C'),1,10),
		ds_observacao_w,
		ie_local_aplicacao_p);
		
	GET DIAGNOSTICS ora2pg_rowcount = ROW_COUNT;

		
	if ( ora2pg_rowcount > 0) then
		CALL Gerar_taxa_mat_conta(nr_prescricao_p,null,nm_usuario_p,'G','G');
		
		select	coalesce(max(a.qt_glicose_adm),0),
			coalesce(max(a.qt_ui_insulina_adm),0),
			max(e.nr_sequencia),
			max(e.nr_prescricao),
			coalesce(max(d.ie_cobra_adm),'N'),
			coalesce(max(a.qt_ui_insulina_int_adm),0)
		into STRICT	qt_glicose_adm_w,
			qt_ui_insulina_adm_w,
			nr_seq_material_w,
			nr_prescricao_w,
			ie_cobra_adm_w,
			qt_ui_insulina_int_adm_w				
		from	prescr_material e,
			pep_protocolo_glicemia d,
			protocolo_glic_mat_med c,
			atend_glicemia b,
			atendimento_glicemia a
		where	a.nr_sequencia		= nr_seq_glicemia_p
		and	a.nr_seq_glicemia	= b.nr_sequencia
		and	b.nr_seq_prot_glic	= d.nr_sequencia
		and	d.nr_sequencia		= c.nr_seq_protocolo_glic
		and	b.nr_seq_prot_glic	= c.nr_seq_protocolo_glic
		and	b.nr_prescricao 	= e.nr_prescricao
		and	e.cd_material		= c.cd_material
		and	e.ie_glicemia		= c.ie_glicemia;
		
		if (nr_seq_material_w IS NOT NULL AND nr_seq_material_w::text <> '') and (ie_cobra_adm_w	= 'S') then
			
			if (qt_glicose_adm_w	> 0) then
				qt_conta_w	:= qt_glicose_adm_w;
				ie_tipo_item_w	:= 'G';
			elsif (qt_ui_insulina_adm_w	> 0) then
				qt_conta_w	:= qt_ui_insulina_adm_w;
				ie_tipo_item_w	:= 'I';
			elsif (qt_ui_insulina_int_adm_w	> 0) then
				qt_conta_w	:= qt_ui_insulina_int_adm_w;
				ie_tipo_item_w	:= 'I';
			end if;
			
			if (ie_tipo_item_w = 'I') then			
				select	max(e.nr_sequencia)							
				into STRICT	nr_seq_material_w			
				from	prescr_material e,
					pep_protocolo_glicemia d,
					protocolo_glic_mat_med c,
					atend_glicemia b,
					atendimento_glicemia a
				where	a.nr_sequencia		= nr_seq_glicemia_p
				and	a.nr_seq_glicemia	= b.nr_sequencia
				and	b.nr_seq_prot_glic	= d.nr_sequencia
				and	d.nr_sequencia		= c.nr_seq_protocolo_glic
				and	b.nr_seq_prot_glic	= c.nr_seq_protocolo_glic
				and	b.nr_prescricao 	= e.nr_prescricao
				and	e.cd_material		= c.cd_material
				and	e.ie_glicemia		= c.ie_glicemia
				and	c.ie_glicemia		= 'N';			
			
			else			
				select	max(e.nr_sequencia)							
				into STRICT	nr_seq_material_w			
				from	prescr_material e,
					pep_protocolo_glicemia d,
					protocolo_glic_mat_med c,
					atend_glicemia b,
					atendimento_glicemia a
				where	a.nr_sequencia		= nr_seq_glicemia_p
				and	a.nr_seq_glicemia	= b.nr_sequencia
				and	b.nr_seq_prot_glic	= d.nr_sequencia
				and	d.nr_sequencia		= c.nr_seq_protocolo_glic
				and	b.nr_seq_prot_glic	= c.nr_seq_protocolo_glic
				and	b.nr_prescricao 	= e.nr_prescricao
				and	e.cd_material		= c.cd_material
				and	e.ie_glicemia		= c.ie_glicemia
				and	c.ie_glicemia		= 'S';
			end if;			
			
			select	max(nr_sequencia),
					coalesce(max(dt_fim_horario),clock_timestamp())
			into STRICT	nr_seq_horario_w,
					dt_fim_horario_w
			from	prescr_mat_hor
			where	nr_prescricao = nr_prescricao_w
			and		nr_seq_material	= nr_seq_material_w
			and		coalesce(ie_horario_especial,'N')	<> 'S';
			
			if (nr_seq_horario_p IS NOT NULL AND nr_seq_horario_p::text <> '') then
			
			    select 	coalesce(max(dt_alteracao),clock_timestamp())
				into STRICT	dt_fim_horario_w
				from  	prescr_mat_alteracao
				where  	nr_seq_horario_proc = nr_seq_horario_p
				and    	ie_alteracao = 3
				and    	coalesce(ie_evento_valido,'S') = 'S'
				and    	(dt_alteracao IS NOT NULL AND dt_alteracao::text <> '');
			
			end if;
			
			if (coalesce(qt_conta_w,0)	> 0) and (nr_seq_horario_w IS NOT NULL AND nr_seq_horario_w::text <> '') then
				nr_seq_map_w := gerar_estornar_adep_map(NULL, nr_seq_horario_w, NULL, 'G', dt_fim_horario_w, nm_usuario_p, nr_seq_map_w, null, qt_conta_w, null);
			end if;	
		end if;
		
	end if;	

	if (Ie_registrar_sv_w = 'C') then
		select 	nr_atendimento,
			qt_glicemia, 
			CASE WHEN ie_gera_adm_w='S' THEN  qt_ui_insulina_adm  ELSE qt_ui_insulina_calc END , 
			dt_controle  
		into STRICT    nr_atendimento_w,
			qt_glicemia_w,
			qt_ui_insulina_adm_w,
			dt_glicemia_w
		from atendimento_glicemia 
		where	nr_sequencia = nr_seq_glicemia_p;
		
		if (qt_glicose_adm_w  > 0) then
			qt_glicose_adm_2w :=  qt_glicose_adm_w;
		else
			qt_glicose_adm_2w := null;
		end if;
		

		CALL adep_gerar_SV_Glicemia(nr_atendimento_w, qt_glicemia_w, nm_usuario_p, qt_ui_insulina_adm_w, dt_glicemia_w, null, null, null, qt_glicose_adm_2w);
	end if;

end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE confirmar_administracao_ccg ( nr_seq_glicemia_p bigint, nr_prescricao_p bigint, nr_seq_horario_p bigint, nm_usuario_p text, ie_local_aplicacao_p text) FROM PUBLIC;

