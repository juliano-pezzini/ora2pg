-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE san_aplica_regra_atributo ( nr_seq_envio_p bigint, nm_usuario_p text, dt_valid_p INOUT timestamp, qt_intensidade_p INOUT bigint, qt_minuto_p INOUT bigint, qt_segundo_p INOUT bigint) AS $body$
DECLARE


cd_perfil_w perfil.cd_perfil%TYPE;
cd_setor_w setor_atendimento.cd_setor_atendimento%TYPE;
cd_funcao_w	funcao.cd_funcao%type;
cd_estabelecimento_w		usuario.cd_estabelecimento%type;

dt_valid_w san_envio_derivado_val.DT_VALIDADE%TYPE := null;
QT_INTENSIDADE_W san_envio_derivado_val.QT_INTENSIDADE%type := null;
QT_MINUTO_W san_envio_derivado_val.QT_MINUTO%type := null;
QT_SEGUNDO_W san_envio_derivado_val.QT_SEGUNDO%type := null;
ds_lista_atrib_w dbms_sql.varchar2_table;
vl_default_w	tabela_atrib_regra.vl_default%type;
ds_script_w		tabela_atrib_regra.ds_script%type;
default_script_w		tabela_atrib_regra.vl_default%type;
nr_seq_producao_w       san_envio_derivado_val.nr_seq_producao%type := null;
parameter_var1_w        varchar(50);
parameter_var2_w        varchar(50);
modified_script_w       tabela_atrib_regra.ds_script%type;			
			


BEGIN

if (nr_seq_envio_p IS NOT NULL AND nr_seq_envio_p::text <> '')then
	ds_lista_atrib_w := obter_lista_string('DT_VALIDADE,QT_INTENSIDADE,QT_MINUTO,QT_SEGUNDO', ',');
	cd_perfil_w := coalesce(obter_perfil_ativo,0);
	cd_setor_w := coalesce(obter_setor_ativo,0);
	cd_funcao_w := coalesce(obter_funcao_ativa,0);
	cd_estabelecimento_w := wheb_usuario_pck.get_cd_estabelecimento;

  for i in ds_lista_atrib_w.first..ds_lista_atrib_w.last loop
		BEGIN
			vl_default_w := NULL;
			select	max(vl_default),
					MAX(ds_script)
			into STRICT	vl_default_w,
					ds_script_w
			from	tabela_atrib_regra
			where	nm_tabela = 'SAN_ENVIO_DERIVADO_VAL'
			and	nm_atributo	= ds_lista_atrib_w(i)
			and coalesce(cd_estabelecimento,cd_estabelecimento_w) = cd_estabelecimento_w
			and	coalesce(cd_perfil, cd_perfil_w) = cd_perfil_w
			and	coalesce(cd_setor_atendimento, cd_setor_w) = cd_setor_w
			and	coalesce(cd_funcao, cd_funcao_w) = cd_funcao_w
			and	coalesce(nm_usuario_param, nm_usuario_p) = nm_usuario_p;
		
      default_script_w := NULL;
			IF (vl_default_w IS NOT NULL AND vl_default_w::text <> '') and (DS_SCRIPT_W IS NOT NULL AND DS_SCRIPT_W::text <> '') then
        default_script_w := vl_default_w;
      end if;
      IF (vl_default_w IS NOT NULL AND vl_default_w::text <> '') and (coalesce(DS_SCRIPT_W::text, '') = '') then
        default_script_w := vl_default_w;
      end if;
      IF (coalesce(vl_default_w::text, '') = '') and (DS_SCRIPT_W IS NOT NULL AND DS_SCRIPT_W::text <> '') then
        default_script_w := DS_SCRIPT_W;
      end if;
	
			IF (default_script_w IS NOT NULL AND default_script_w::text <> '') THEN
				IF (ds_lista_atrib_w(i) = 'DT_VALIDADE') THEN
					begin
						parameter_var1_w   := substr(default_script_w, position(':' in default_script_w), length(default_script_w));
                                                parameter_var2_w  := substr(parameter_var1_w, position(':' in parameter_var1_w), position(')' in parameter_var1_w)-1);

                                                IF (parameter_var2_w = UPPER(':NR_SEQ_PRODUCAO')) THEN
                                                
                                                        SELECT  nr_seq_producao 
                                                        INTO STRICT    nr_seq_producao_w
                                                        FROM    SAN_ENVIO_DERIVADO_VAL 
                                                        WHERE   nr_sequencia = nr_seq_envio_p;

                                                        SELECT  REPLACE(default_script_w, parameter_var2_w, nr_seq_producao_w)
                                                        INTO STRICT    modified_script_w
;

                                                        EXECUTE 'select (' || modified_script_w || ') from dual' INTO STRICT dt_valid_w;
                                                END IF;
					exception
					when SQLSTATE '50011' then
						dt_valid_w := null;
					end;
				ELSIF (is_number(default_script_w) = 1 AND ds_lista_atrib_w(i) = 'QT_INTENSIDADE') THEN	
					QT_INTENSIDADE_W := (default_script_w)::numeric;
				ELSIF (is_number(default_script_w) = 1 AND ds_lista_atrib_w(i) = 'QT_MINUTO') THEN	
					QT_MINUTO_W := (default_script_w)::numeric;
				ELSIF (is_number(default_script_w) = 1 AND ds_lista_atrib_w(i) = 'QT_SEGUNDO') THEN	
					QT_SEGUNDO_W := (default_script_w)::numeric;
				END IF;
			END IF;
		END;
	end loop;
	
	update 	san_envio_derivado_val
	set	dt_validade 	= dt_valid_w,
			qt_intensidade	= qt_intensidade_w,
			qt_minuto		= qt_minuto_w,
			qt_segundo		= qt_segundo_w
	where	nr_sequencia		= nr_seq_envio_p;
	
	dt_valid_p := dt_valid_w;
	qt_intensidade_p := qt_intensidade_w;
	qt_minuto_p := qt_minuto_w;
	qt_segundo_p := qt_segundo_w;
	
end if;
commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE san_aplica_regra_atributo ( nr_seq_envio_p bigint, nm_usuario_p text, dt_valid_p INOUT timestamp, qt_intensidade_p INOUT bigint, qt_minuto_p INOUT bigint, qt_segundo_p INOUT bigint) FROM PUBLIC;

