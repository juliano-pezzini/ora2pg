-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE tasy_atualizar_base_sincro () AS $body$
DECLARE


nm_tabela_Sincro_w     		varchar(50)      := null;
nm_tabela_Integr_w     		varchar(50)      := null;
nm_tabela_w            		varchar(50)      := null;
nm_atributo_w          		varchar(50)      := null;
nm_atributos_w         		varchar(255)     := null;
ds_comando_w			varchar(2000);
vl_retorno_w			varchar(255);
ie_sincronizar_w			varchar(001);
where_and_w				varchar(08);
nm_integridade_w			varchar(50)      := null;

C010 CURSOR FOR
SELECT tname,
	b.nm_tabela,
	coalesce(b.ie_sincronizar,'A')
from Tabela_Sistema b, tab a
where substr(tname,1,2) = 'S_'
  and	substr(tname, 3, length(tname) - 2) = b.nm_tabela
  and (b.nr_seq_sincro IS NOT NULL AND b.nr_seq_sincro::text <> '')
order by b.nr_seq_sincro;

C020 CURSOR FOR
SELECT nm_atributo
from indice_atributo b, indice a
where a.nm_tabela = nm_tabela_w
  and a.nm_tabela = b.nm_tabela
  and a.nm_indice	= b.nm_indice
  and a.ie_tipo	= 'PK';

C030 CURSOR FOR
SELECT nm_integridade_referencial, nm_tabela
from integridade_referencial
where nm_tabela_referencia  = nm_tabela_w;


BEGIN

OPEN C010;
LOOP
FETCH C010 INTO
	nm_tabela_sincro_w,
	nm_tabela_w,
	ie_sincronizar_w;
EXIT WHEN NOT FOUND; /* apply on C010 */
	begin
	if (ie_sincronizar_w = 'A') then
		begin
		nm_atributos_w	:= '';
		where_and_w		:= ' Where ';
		OPEN C020;
		LOOP
		FETCH C020 INTO
			nm_atributo_w;
		EXIT WHEN NOT FOUND; /* apply on C020 */
			nm_atributos_w	:= nm_atributos_w || where_and_w ||
						'a.' || nm_atributo_w || ' = b.' || nm_atributo_w;
			where_and_w		:= ' and ';
		END LOOP;
		CLOSE C020;
		ds_comando_w	:= 'insert into ' || nm_tabela_w ||
					' select * from ' || nm_tabela_sincro_w || ' a ' ||
					' where not exists ( select 1 from ' ||
					nm_tabela_w ||  ' b ' ||
					nm_atributos_w || ')';
		CALL Exec_Sql_Dinamico(nm_tabela_w, ds_comando_w);
		end;
	elsif (ie_sincronizar_w = 'S') then
		begin
		OPEN C030;
		LOOP
		FETCH C030 INTO
			nm_integridade_w,
			nm_tabela_Integr_w;
		EXIT WHEN NOT FOUND; /* apply on C030 */
			ds_comando_w	:= 'alter table ' || nm_tabela_integr_w ||
						' drop constraint ' || nm_integridade_w || ';';
			CALL Exec_Sql_Dinamico(nm_tabela_w || ', ' || nm_integridade_w, ds_comando_w);
		END LOOP;
		CLOSE C030;
		ds_comando_w		:= 'truncate table ' || nm_tabela_w;
		CALL Exec_Sql_Dinamico(nm_tabela_w, ds_comando_w);
		ds_comando_w	:= 'insert into ' || nm_tabela_w ||
					' select * from ' || nm_tabela_sincro_w;
		CALL Exec_Sql_Dinamico(nm_tabela_w, ds_comando_w);
		end;
	elsif (ie_sincronizar_w = 'EX') then
		begin
		CALL Exec_Sql_Dinamico(nm_tabela_w, ds_comando_w);
		end;
	end if;
	end;
END LOOP;
CLOSE C010;
commit;
CALL Tasy_Excluir_Base_Sincro();

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE tasy_atualizar_base_sincro () FROM PUBLIC;

