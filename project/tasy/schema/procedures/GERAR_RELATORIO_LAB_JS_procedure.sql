-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_relatorio_lab_js (nr_prescricao_p bigint, nm_usuario_cor_p text) AS $body$
DECLARE


contador_w              bigint :=   1;
nm_procedimento_w       varchar(255);
cd_medico_w             varchar(255);
cd_medico_passado_w     varchar(255)  := 'XPTO';
dt_w                            timestamp    := clock_timestamp();
nr_sequencia_w          bigint;

C02 CURSOR FOR
        SELECT  nm_exame,
                cd_medico
        from    (SELECT c.nm_exame ||'('||d.ds_material_exame||')' nm_exame,
                        a.cd_medico cd_medico
        from    prescr_medica a,
                prescr_procedimento b,
                exame_laboratorio c,
                material_exame_lab d
        where   a.nr_prescricao = b.nr_prescricao
        and     b.nr_seq_exame = c.nr_seq_exame
        and     b.cd_material_exame = d.cd_material_exame
        and     a.nr_prescricao = nr_prescricao_p
        and     ((coalesce(b.CD_MEDICO_SOLICITANTE::text, '') = '') or (b.cd_medico_solicitante = a.cd_medico))
        and     b.cd_motivo_baixa = 0

union   all

        select  c.nm_exame ||'('||d.ds_material_exame||')' nm_exame,
                b.CD_MEDICO_SOLICITANTE cd_medico
        from    prescr_medica a,
                prescr_procedimento b,
                exame_laboratorio c,
                material_exame_lab d
        where   a.nr_prescricao = b.nr_prescricao
        and     b.nr_seq_exame = c.nr_seq_exame
        and     b.cd_material_exame = d.cd_material_exame
        and     a.nr_prescricao = nr_prescricao_p
        and     ((b.CD_MEDICO_SOLICITANTE IS NOT NULL AND b.CD_MEDICO_SOLICITANTE::text <> '') or (b.cd_medico_solicitante <> a.cd_medico))
        and     b.cd_motivo_baixa = 0
        
union   all

        select  d.nm_exame ||'('||e.ds_material_exame||')' nm_exame,
                c.CD_MEDICO_SOLICITANTE  cd_medico
        from    prescr_medica a,
                prescr_procedimento b,
                PRESCR_MEDICA_PROF_ADIC c,
                exame_laboratorio d,
                material_exame_lab e
        where   a.nr_prescricao = b.nr_prescricao
        and     b.nr_prescricao = c.nr_prescricao
        and     b.nr_seq_exame = d.nr_seq_exame
        and     b.cd_material_exame = e.cd_material_exame
        and     a.nr_prescricao = nr_prescricao_p
        and     b.cd_motivo_baixa=0
        
union all

        select  d.nm_exame ||'('||e.ds_material_exame||')' nm_exame,
                c.CD_PROFISSIONAL  cd_medico_w
        from    prescr_medica a,
                prescr_procedimento b,
                PRESCR_PROCED_PROF_ADIC c,
                exame_laboratorio d,
                material_exame_lab e
        where   a.nr_prescricao = b.nr_prescricao
        and     b.nr_prescricao = c.nr_prescricao
        and     b.nr_sequencia = c.nr_seq_procedimento
        and     b.nr_seq_exame = d.nr_seq_exame
        and     b.cd_material_exame = e.cd_material_exame
        and     a.nr_prescricao = nr_prescricao_p
        and     b.cd_motivo_baixa=0) alias7
        order by cd_medico;


BEGIN

delete FROM w_relatorio_info_coluna
where nm_usuario = nm_usuario_cor_p;
commit;


open C02;
loop
fetch C02 into
        nm_procedimento_w,
        cd_medico_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
        begin

        if (cd_medico_passado_w <> 'XPTO') and (cd_medico_passado_w <> cd_medico_w) then
                contador_w := 1;
        end if;

        if (contador_w = 1) then

                select  nextval('w_relatorio_info_coluna_seq')
                into STRICT    nr_sequencia_w
;


                insert  into    w_relatorio_info_coluna(nr_sequencia,
                        dt_atualizacao,
                        nm_usuario,
                        ds_coluna_um,
                        ds_coluna_dois,
                        ds_coluna_tres,
                        cd_medico)
                values (nr_sequencia_w,
                        clock_timestamp(),
                        nm_usuario_cor_p,
                        nm_procedimento_w,
                        '',
                        '',
                        cd_medico_w);


        end if;

        if (contador_w = 2) then

                update  w_relatorio_info_coluna
                set     ds_coluna_dois     = nm_procedimento_w
                where   nr_sequencia       = nr_sequencia_w;



        end if;

        if (contador_w = 3) then

                update  w_relatorio_info_coluna
                set     ds_coluna_tres     = nm_procedimento_w
                where   nr_sequencia       = nr_sequencia_w;

        end if;

        contador_w              :=      contador_w      + 1;

        if (contador_w > 3) then
                contador_w      :=      1;
        end if;
        cd_medico_passado_w     :=      cd_medico_w;

        end;
end loop;
close C02;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_relatorio_lab_js (nr_prescricao_p bigint, nm_usuario_cor_p text) FROM PUBLIC;

