-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE get_ihc_svb ( nr_seq_claim_p ihc_claim.nr_sequencia%type, nm_usuario_p ihc_claim.nm_usuario%type ) AS $body$
DECLARE



vl_charge_w					ihc_svb.vl_charge%type;
dt_end_w					ihc_svb.dt_end%type;
from_date_w					ihc_svb.dt_from%type;
ie_charge_raised_w 			ihc_svb.ie_charge_raised%type;
nr_records_w 				integer;
nr_seq_w					ihc_svb.nr_sequencia%type;
qt_days_w					ihc_svb.qt_days%type;
ie_service_type_w			varchar(22);
nr_account_w				ihc_claim.nr_account%type;
cd_service_w				ihc_svb.cd_service%type;
vl_hospital_cid_w			ihc_claim.vl_hospital%type;
vl_charge_cid_w				ihc_claim.vl_charge%type;


BEGIN

select	max(nr_account)
into STRICT	nr_account_w
from	ihc_claim
where	nr_sequencia	= nr_seq_claim_p;

-- Currently we dont know what are single value benefits
select	max(coalesce(a.vl_procedimento,0) * 100),
		max(a.ie_origem_proced),
		max(b.cd_procedimento_loc) cd_procedimento,
		max(a.dt_inicio_procedimento),
		max(a.dt_final_procedimento)
into STRICT		vl_charge_w,
		ie_service_type_w,
		cd_service_w,
		from_date_w,
		dt_end_w
from		procedimento_paciente	a,
		procedimento b,
		conta_paciente c,
		convenio d
where 	a.nr_interno_conta 		= nr_account_w
and 	a.cd_procedimento 		= b.cd_procedimento
and 	c.nr_interno_conta 		= a.nr_interno_conta
and 	c.cd_convenio_parametro = d.cd_convenio
and 	a.ie_origem_proced 		= b.ie_origem_proced
and 	a.ie_origem_proced 		in ( 4, 15)
and 	((substr(a.cd_procedimento_convenio, 0, 2) in ('DE'))
	or (a.IE_PROC_PRINC_ATEND = 'S')
		or d.ie_tipo_convenio = 13);

qt_days_w	:= dt_end_w - from_date_w;
if (qt_days_w = 0) then
  qt_days_w := 1;
end if;

if (cd_service_w IS NOT NULL AND cd_service_w::text <> '') then
	ie_service_type_w := get_eclipse_conversion('IE_ORIGEM_PROCED', ie_service_type_w, 'IHC', null, nr_account_w, ie_service_type_w);

	if (coalesce(from_date_w::text, '') = '' and qt_days_w = 0) then
		CALL generate_inco_eclipse(nr_account_w,1, obter_desc_expressao(566600) || '(SVB:' || nr_account_w || ' / ' || cd_service_w || ')', nm_usuario_p);
	else
		if (from_date_w > dt_end_w) then
			CALL generate_inco_eclipse(nr_account_w,3, obter_desc_expressao(10652519) || '(Proc: '|| cd_service_w || ')',nm_usuario_p);
		end if;
	end if;

	if (coalesce(dt_end_w::text, '') = '' and qt_days_w = 0) then 
		CALL generate_inco_eclipse(nr_account_w,1, obter_desc_expressao(566601) || '(SVB: ' || nr_account_w || ' / ' || cd_service_w || ')', nm_usuario_p);
	else
		if (dt_end_w < from_date_w) then
			CALL generate_inco_eclipse(nr_account_w,3, obter_desc_expressao(513987) || '(Proc: ' || cd_service_w || ')',nm_usuario_p);
		end if;
	end if;
	
	if (vl_charge_w = 0) then
		ie_charge_raised_w := 'I';
	else
		ie_charge_raised_w := 'C';
	end if;

	select  count(nr_sequencia)
	into STRICT    nr_records_w
	from    eclipse_inco_account
	where   nr_interno_conta = nr_account_w;
	
	if (billing_i18n_pck.get_validate_eclipse() = 'N') and (nr_records_w = 0) then	
		select	nextval('ihc_svb_seq')
		into STRICT	nr_seq_w
		;
		
		insert into ihc_svb(
				nr_sequencia,
				nr_seq_claim,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				vl_charge,
				ie_charge_raised,
				dt_from,
				qt_days,
				cd_service,
				ie_service_type,
				dt_end)
		values (
				nr_seq_w,
				nr_seq_claim_p,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				vl_charge_w,
				ie_charge_raised_w,
				from_date_w,
				qt_days_w,
				cd_service_w,
				ie_service_type_w,
				dt_end_w);

		select 	vl_hospital,
				vl_charge
		into STRICT 	vl_hospital_cid_w,
				vl_charge_cid_w
		from 	ihc_claim
		where 	nr_sequencia = nr_seq_claim_p;
	
		update 	ihc_claim
		set 	vl_hospital 	= vl_hospital_cid_w + vl_charge_w,
				vl_charge 		= vl_charge_cid_w + vl_charge_w
		where 	nr_sequencia 	= nr_seq_claim_p;
	end if;

	commit;
end if;
	
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE get_ihc_svb ( nr_seq_claim_p ihc_claim.nr_sequencia%type, nm_usuario_p ihc_claim.nm_usuario%type ) FROM PUBLIC;

