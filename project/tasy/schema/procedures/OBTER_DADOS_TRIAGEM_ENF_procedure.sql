-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE obter_dados_triagem_enf ( cd_pessoa_fisica_p text default null, nr_atendimento_p bigint default null, ie_opcao_p text DEFAULT NULL, nr_seq_queixa_p INOUT bigint DEFAULT NULL, qt_au_cm_p INOUT bigint DEFAULT NULL, qt_contracoes_p INOUT bigint DEFAULT NULL, qt_gestacoes_p INOUT bigint DEFAULT NULL, qt_natimortos_p INOUT bigint DEFAULT NULL, qt_parto_cesario_p INOUT bigint DEFAULT NULL, qt_filhos_vivos_p INOUT bigint DEFAULT NULL, qt_parto_normal_p INOUT bigint DEFAULT NULL, qt_filhos_mortos_p INOUT bigint DEFAULT NULL, qt_abortos_p INOUT bigint DEFAULT NULL, ds_observacao_p INOUT text DEFAULT NULL, dt_ultima_menstruacao_p INOUT timestamp DEFAULT NULL, qt_ig_sem_us_p INOUT bigint DEFAULT NULL, qt_ig_dia_us_p INOUT bigint DEFAULT NULL, dt_prov_parto_p INOUT timestamp DEFAULT NULL) AS $body$
DECLARE

				 
/*				Opção 
Verificar campos para a da pasta Primeira Consulta	PC 
*/
 
				 
nr_seq_queixa_w		bigint;
qt_au_cm_w			double precision;
qt_contracoes_w		bigint;
qt_gestacoes_w			bigint;
qt_natimortos_w		bigint;
qt_parto_normal_w		bigint;
qt_parto_cesario_w		bigint;
qt_filhos_vivos_w		bigint;
qt_filhos_mortos_w		bigint;
qt_abortos_w			bigint;
ds_observacao_w		varchar(255);

qt_reg_w				bigint;
qt_gravidez_w			bigint;
nr_atendimento_w 		bigint;
cd_pessoa_fisica_w  	varchar(10);

dt_ultima_menstruacao_w timestamp;
qt_ig_sem_us_w      smallint;
qt_ig_dia_us_w      smallint;
dt_prov_parto_w     timestamp;

 

BEGIN 
begin 
	 
if (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') then 
 
	select max(coalesce(nr_atendimento_mae,nr_atendimento_p)) 
	into STRICT	nr_atendimento_w 
	from	atendimento_paciente 
	where	nr_atendimento = nr_atendimento_p;
  
  
  cd_pessoa_fisica_w  := obter_pessoa_atendimento(nr_atendimento_w,'C');
 
   if (ie_opcao_p = 'GD') then 
   
     select count(*) 
     into STRICT  qt_gravidez_w 
     from  atendimento_gravidez b, 
         atendimento_paciente c 
     where  (b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '') 
     and   coalesce(b.dt_inativacao::text, '') = '' 
     and   b.dt_liberacao >= (clock_timestamp() - interval '308 days') 
     and   b.nr_atendimento = c.nr_atendimento 
     and   c.cd_pessoa_fisica = cd_pessoa_fisica_w;
   
  
   
   end if;
	 
	if		((ie_opcao_p = 'GD' AND qt_gravidez_w = 0) or ( ie_opcao_p = 'PC')) then 
 
 
			select	max(a.nr_seq_queixa), 
					max(a.qt_au_cm), 
					max(a.qt_contracoes), 
					max(a.qt_gestacoes), 
					max(a.qt_natimortos), 
					max(a.qt_parto_normal), 
					max(a.qt_parto_cesario), 
					max(a.qt_filhos_vivos), 
					max(a.qt_filhos_mortos), 
					max(a.qt_abortos), 
					max(a.ds_observacao), 
             max(dt_ultima_menstruacao), 
             max(qt_ig_sem_us), 
             max(qt_ig_dia_us), 
             max(dt_prov_parto), 
					count(*) 
			into STRICT	nr_seq_queixa_w, 
					qt_au_cm_w, 
					qt_contracoes_w, 
					qt_gestacoes_w, 
					qt_natimortos_w, 
					qt_parto_normal_w, 
					qt_parto_cesario_w, 
					qt_filhos_vivos_w, 
					qt_filhos_mortos_w, 
					qt_abortos_w, 
					ds_observacao_w, 
             dt_ultima_menstruacao_w, 
             qt_ig_sem_us_w, 
             qt_ig_dia_us_w, 
             dt_prov_parto_w, 
					qt_reg_w 
			from	enf_tri_obstetrica a 
			where  a.nr_sequencia = (	SELECT 	max(b.nr_sequencia) 
										from 	enf_tri_obstetrica b, 
												atendimento_paciente c 
										where  (b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '') 
										and   coalesce(b.dt_inativacao::text, '') = '' 
										and   b.dt_liberacao >= (clock_timestamp() - interval '308 days') 
										and   b.nr_atendimento = c.nr_atendimento 
										and   c.cd_pessoa_fisica = cd_pessoa_fisica_w);		
 
	end if;
 
	if (qt_reg_w > 0) then 
 
		nr_seq_queixa_p 	  := nr_seq_queixa_w;		
		qt_au_cm_p 		  := qt_au_cm_w;
		qt_contracoes_p	  := qt_contracoes_w;		
		ds_observacao_p	  := ds_observacao_w;
		qt_gestacoes_p		  := qt_gestacoes_w;
		qt_natimortos_p	  := qt_natimortos_w;
		qt_parto_normal_p	  := qt_parto_normal_w;
		qt_parto_cesario_p	  := qt_parto_cesario_w;
		qt_filhos_vivos_p	  := qt_filhos_vivos_w;
		qt_filhos_mortos_p	  := qt_filhos_mortos_w;
		qt_abortos_p		  := qt_abortos_w;
     dt_ultima_menstruacao_p := dt_ultima_menstruacao_w;
     qt_ig_sem_us_p     := qt_ig_sem_us_w;
     qt_ig_dia_us_p     := qt_ig_dia_us_w;
     dt_prov_parto_p     := dt_prov_parto_w;
		 
			 
	end if;	
 
end if;
 
exception 
	when others then 
	null;
end;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE obter_dados_triagem_enf ( cd_pessoa_fisica_p text default null, nr_atendimento_p bigint default null, ie_opcao_p text DEFAULT NULL, nr_seq_queixa_p INOUT bigint DEFAULT NULL, qt_au_cm_p INOUT bigint DEFAULT NULL, qt_contracoes_p INOUT bigint DEFAULT NULL, qt_gestacoes_p INOUT bigint DEFAULT NULL, qt_natimortos_p INOUT bigint DEFAULT NULL, qt_parto_cesario_p INOUT bigint DEFAULT NULL, qt_filhos_vivos_p INOUT bigint DEFAULT NULL, qt_parto_normal_p INOUT bigint DEFAULT NULL, qt_filhos_mortos_p INOUT bigint DEFAULT NULL, qt_abortos_p INOUT bigint DEFAULT NULL, ds_observacao_p INOUT text DEFAULT NULL, dt_ultima_menstruacao_p INOUT timestamp DEFAULT NULL, qt_ig_sem_us_p INOUT bigint DEFAULT NULL, qt_ig_dia_us_p INOUT bigint DEFAULT NULL, dt_prov_parto_p INOUT timestamp DEFAULT NULL) FROM PUBLIC;

