-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_valida_ocor_aut_tiss ( nr_seq_ocor_combinada_p pls_ocor_aut_combinada.nr_sequencia%type, nr_seq_ocorrencia_p pls_ocorrencia.nr_sequencia%type, nr_seq_motivo_glosa_p tiss_motivo_glosa.nr_sequencia%type, nr_seq_guia_p pls_guia_plano.nr_sequencia%type, nr_seq_requisicao_p pls_requisicao.nr_sequencia%type, nr_seq_execucao_p pls_execucao_requisicao.nr_sequencia%type, ie_utiliza_filtro_p pls_ocor_aut_combinada.ie_utiliza_filtro%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type ) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:
Validar a ocorrência combinada 'Valida versão TISS',
onde é validado a versão TISS recebida nas solicitações de procedimentos.
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[x]  Objetos do dicionário [] Tasy (Delphi/Java) [] Portal []  Relatórios [] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
nr_seq_segurado_w		pls_segurado.nr_sequencia%type;
nr_seq_prestador_w		pls_prestador.nr_sequencia%type;
ie_regra_w			varchar(2);
ie_gerar_ocorrencia_w		varchar(2);
ie_gerou_ocor_cabecalho_w	varchar(2);
ie_tipo_ocorrencia_w		varchar(2);
nr_seq_oc_benef_w		pls_ocorrencia_benef.nr_sequencia%type;
cd_versao_w			pls_guia_plano_imp.cd_versao%type;
qt_versao_w			integer := 0;
nr_seq_imp_w			pls_guia_plano_imp.nr_sequencia%type;

C01 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_validacao_aut_tiss
	where	nr_seq_ocor_aut_combinada	= nr_seq_ocor_combinada_p
	and	ie_situacao			= 'A'
	and	ie_versao_inativa		= 'S';

C02 CURSOR FOR
	SELECT	nr_sequencia,
		cd_procedimento,
		ie_origem_proced,
		qt_solicitado
	from	pls_requisicao_proc
	where	nr_seq_requisicao	= nr_seq_requisicao_p;

C03 CURSOR FOR
	SELECT	nr_sequencia,
		nr_seq_material,
		qt_solicitado
	from	pls_requisicao_mat
	where	nr_seq_requisicao	= nr_seq_requisicao_p;

C04 CURSOR FOR
	SELECT	nr_sequencia,
		cd_procedimento,
		ie_origem_proced,
		qt_solicitada
	from	pls_guia_plano_proc
	where	nr_seq_guia		= nr_seq_guia_p;

C05 CURSOR FOR
	SELECT	nr_sequencia,
		nr_seq_material,
		qt_solicitada
	from	pls_guia_plano_mat
	where	nr_seq_guia		= nr_seq_guia_p;
BEGIN

if (nr_seq_requisicao_p IS NOT NULL AND nr_seq_requisicao_p::text <> '') then
	select	max(b.nr_sequencia)
	into STRICT	nr_seq_imp_w
	from	pls_guia_plano_imp b
	where	b.nr_seq_requisicao = nr_seq_requisicao_p;

	if (nr_seq_imp_w IS NOT NULL AND nr_seq_imp_w::text <> '') then
		select	a.cd_versao
		into STRICT	cd_versao_w
		from	pls_guia_plano_imp a
		where	a.nr_sequencia = nr_seq_imp_w;

		select	count(1)
		into STRICT	qt_versao_w
		from	pls_versao_tiss
		where	dt_inicio_vigencia <= clock_timestamp()
		and (coalesce(dt_fim_vigencia::text, '') = '' or dt_fim_vigencia > clock_timestamp())
		and	cd_versao_tiss = cd_versao_w;

		begin
			select	nr_seq_segurado,
				nr_seq_prestador
			into STRICT	nr_seq_segurado_w,
				nr_seq_prestador_w
			from	pls_requisicao
			where	nr_sequencia	= nr_seq_requisicao_p;
		exception
		when others then
			nr_seq_segurado_w	:= null;
			nr_seq_prestador_w	:= null;
		end;

		if (qt_versao_w	= 0) then
			for r_C01_w in C01 loop
				if (ie_utiliza_filtro_p	= 'S') then
					for r_C02_w in C02 loop
						ie_gerar_ocorrencia_w	:= 'S';

						SELECT * FROM pls_gerar_ocor_aut_filtro(	nr_seq_ocor_combinada_p, null, nr_seq_requisicao_p, null, null, null, r_C02_w.nr_sequencia, null, null, r_C02_w.cd_procedimento, r_C02_w.ie_origem_proced, null, ie_gerou_ocor_cabecalho_w, nr_seq_prestador_w, nr_seq_ocorrencia_p, null, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;

						if (ie_regra_w	= 'S') then
							ie_gerar_ocorrencia_w	:= 'S';
						elsif (ie_regra_w	in ('E','N')) then
							ie_gerar_ocorrencia_w	:= 'N';
						end if;

						if (ie_gerar_ocorrencia_w	= 'S') then
							nr_seq_oc_benef_w := pls_inserir_ocorrencia(	nr_seq_segurado_w, nr_seq_ocorrencia_p, nr_seq_requisicao_p, null, null, r_C02_w.nr_sequencia, null, nr_seq_ocor_combinada_p, nm_usuario_p, null, nr_seq_motivo_glosa_p, 5, cd_estabelecimento_p, 'N', null, nr_seq_oc_benef_w, null, null, null, null);

							CALL pls_atualizar_status_ocor_comb(	nr_seq_ocorrencia_p, nr_seq_ocor_combinada_p, nr_seq_motivo_glosa_p,
											null, nr_seq_requisicao_p, null,
											null, null, r_C02_w.nr_sequencia,
											null, null, null,
											nm_usuario_p, cd_estabelecimento_p);
						end if;
					end loop;

					for r_C03_w in C03 loop
						ie_gerar_ocorrencia_w	:= 'S';

						SELECT * FROM pls_gerar_ocor_aut_filtro(	nr_seq_ocor_combinada_p, null, nr_seq_requisicao_p, null, null, null, null, r_C03_w.nr_sequencia, null, null, null, r_C03_w.nr_seq_material, ie_gerou_ocor_cabecalho_w, nr_seq_prestador_w, nr_seq_ocorrencia_p, null, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;

						if (ie_regra_w	= 'S') then
							ie_gerar_ocorrencia_w	:= 'S';
						elsif (ie_regra_w	in ('E','N')) then
							ie_gerar_ocorrencia_w	:= 'N';
						end if;

						if (ie_gerar_ocorrencia_w	= 'S') then
							nr_seq_oc_benef_w := pls_inserir_ocorrencia(	nr_seq_segurado_w, nr_seq_ocorrencia_p, nr_seq_requisicao_p, null, null, null, r_C03_w.nr_sequencia, nr_seq_ocor_combinada_p, nm_usuario_p, null, nr_seq_motivo_glosa_p, 6, cd_estabelecimento_p, 'N', null, nr_seq_oc_benef_w, null, null, null, null);

							CALL pls_atualizar_status_ocor_comb(	nr_seq_ocorrencia_p, nr_seq_ocor_combinada_p, nr_seq_motivo_glosa_p,
											null, nr_seq_requisicao_p, null,
											null, r_C03_w.nr_sequencia, null,
											null, null, null,
											nm_usuario_p, cd_estabelecimento_p);
						end if;
					end loop;
				else
					begin
					nr_seq_oc_benef_w := pls_inserir_ocorrencia(	nr_seq_segurado_w, nr_seq_ocorrencia_p, nr_seq_requisicao_p, null, null, null, null, nr_seq_ocor_combinada_p, nm_usuario_p, null, nr_seq_motivo_glosa_p, 9, cd_estabelecimento_p, 'N', null, nr_seq_oc_benef_w, null, null, null, null);

					CALL pls_atualizar_status_ocor_comb(	nr_seq_ocorrencia_p, nr_seq_ocor_combinada_p, nr_seq_motivo_glosa_p,
									null, nr_seq_requisicao_p, null,
									null, null, null,
									null, null, null,
									nm_usuario_p, cd_estabelecimento_p);
					end;
				end if;
			end loop;
		end if;
	end if;
elsif (nr_seq_guia_p IS NOT NULL AND nr_seq_guia_p::text <> '') then
	select	max(b.nr_sequencia)
	into STRICT	nr_seq_imp_w
	from	pls_guia_plano_imp b
	where	b.nr_seq_guia_plano = nr_seq_guia_p;

	if (nr_seq_imp_w IS NOT NULL AND nr_seq_imp_w::text <> '') then
		select	a.cd_versao
		into STRICT	cd_versao_w
		from	pls_guia_plano_imp a
		where	a.nr_sequencia = nr_seq_imp_w;

		select	count(1)
		into STRICT	qt_versao_w
		from	pls_versao_tiss
		where	dt_inicio_vigencia <= clock_timestamp()
		and (coalesce(dt_fim_vigencia::text, '') = '' or dt_fim_vigencia > clock_timestamp())
		and	cd_versao_tiss = cd_versao_w;

		begin
			select	nr_seq_segurado,
				nr_seq_prestador
			into STRICT	nr_seq_segurado_w,
				nr_seq_prestador_w
			from	pls_guia_plano
			where 	nr_sequencia	= nr_seq_guia_p;
		exception
		when others then
			nr_seq_segurado_w	:= null;
			nr_seq_prestador_w	:= null;
		end;

		if (qt_versao_w	= 0) then
			for r_C01_w in C01 loop
				if (ie_utiliza_filtro_p	= 'S') then
					for r_C04_w in C04 loop
						ie_gerar_ocorrencia_w	:= 'S';

						SELECT * FROM pls_gerar_ocor_aut_filtro(	nr_seq_ocor_combinada_p, nr_seq_guia_p, null, null, r_C04_w.nr_sequencia, null, null, null, null, r_C04_w.cd_procedimento, r_C04_w.ie_origem_proced, null, ie_gerou_ocor_cabecalho_w, nr_seq_prestador_w, nr_seq_ocorrencia_p, null, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;

						if (ie_regra_w	= 'S') then
							ie_gerar_ocorrencia_w	:= 'S';
						elsif (ie_regra_w	in ('E','N')) then
							ie_gerar_ocorrencia_w	:= 'N';
						end if;

						if (ie_gerar_ocorrencia_w	= 'S') then
							nr_seq_oc_benef_w := pls_inserir_ocorrencia(	nr_seq_segurado_w, nr_seq_ocorrencia_p, null, nr_seq_guia_p, null, r_C04_w.nr_sequencia, null, nr_seq_ocor_combinada_p, nm_usuario_p, null, nr_seq_motivo_glosa_p, 1, cd_estabelecimento_p, 'N', null, nr_seq_oc_benef_w, null, null, null, null);

							CALL pls_atualizar_status_ocor_comb(	nr_seq_ocorrencia_p, nr_seq_ocor_combinada_p, nr_seq_motivo_glosa_p,
											nr_seq_guia_p, null, null,
											r_C04_w.nr_sequencia, null, null,
											null, null, null,
											nm_usuario_p, cd_estabelecimento_p);
						end if;
					end loop;

					for r_C05_w in C05 loop
						ie_gerar_ocorrencia_w	:= 'S';

						SELECT * FROM pls_gerar_ocor_aut_filtro(	nr_seq_ocor_combinada_p, nr_seq_guia_p, null, null, null, r_C05_w.nr_sequencia, null, null, null, null, null, r_C05_w.nr_seq_material, ie_gerou_ocor_cabecalho_w, nr_seq_prestador_w, nr_seq_ocorrencia_p, null, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;

						if (ie_regra_w	= 'S') then
							ie_gerar_ocorrencia_w	:= 'S';
						elsif (ie_regra_w	in ('E','N')) then
							ie_gerar_ocorrencia_w	:= 'N';
						end if;

						if (ie_gerar_ocorrencia_w	= 'S') then
							nr_seq_oc_benef_w := pls_inserir_ocorrencia(	nr_seq_segurado_w, nr_seq_ocorrencia_p, null, nr_seq_guia_p, null, null, r_C05_w.nr_sequencia, nr_seq_ocor_combinada_p, nm_usuario_p, null, nr_seq_motivo_glosa_p, 2, cd_estabelecimento_p, 'N', null, nr_seq_oc_benef_w, null, null, null, null);

							CALL pls_atualizar_status_ocor_comb(	nr_seq_ocorrencia_p, nr_seq_ocor_combinada_p, nr_seq_motivo_glosa_p,
											nr_seq_guia_p, null, null,
											null, r_C05_w.nr_sequencia, null,
											null, null, null,
											nm_usuario_p, cd_estabelecimento_p);
						end if;
					end loop;
				else
					begin
					nr_seq_oc_benef_w := pls_inserir_ocorrencia(	nr_seq_segurado_w, nr_seq_ocorrencia_p, null, nr_seq_guia_p, null, null, null, nr_seq_ocor_combinada_p, nm_usuario_p, null, nr_seq_motivo_glosa_p, 7, cd_estabelecimento_p, 'N', null, nr_seq_oc_benef_w, null, null, null, null);

					CALL pls_atualizar_status_ocor_comb(	nr_seq_ocorrencia_p, nr_seq_ocor_combinada_p, nr_seq_motivo_glosa_p,
									nr_seq_guia_p, null, null,
									null, null, null,
									null, null, null,
									nm_usuario_p, cd_estabelecimento_p);
					end;
				end if;
			end loop;
		end if;
	end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_valida_ocor_aut_tiss ( nr_seq_ocor_combinada_p pls_ocor_aut_combinada.nr_sequencia%type, nr_seq_ocorrencia_p pls_ocorrencia.nr_sequencia%type, nr_seq_motivo_glosa_p tiss_motivo_glosa.nr_sequencia%type, nr_seq_guia_p pls_guia_plano.nr_sequencia%type, nr_seq_requisicao_p pls_requisicao.nr_sequencia%type, nr_seq_execucao_p pls_execucao_requisicao.nr_sequencia%type, ie_utiliza_filtro_p pls_ocor_aut_combinada.ie_utiliza_filtro%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type ) FROM PUBLIC;

