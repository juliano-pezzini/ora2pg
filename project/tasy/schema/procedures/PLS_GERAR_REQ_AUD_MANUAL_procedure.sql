-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_req_aud_manual ( nr_seq_requisicao_p bigint, nr_seq_ocorrencia_p bigint, ie_tipo_p text, ds_historico_p text, nm_usuario_p text) AS $body$
DECLARE

				
/* 
ie_tipo_p
  A  - quando existe na requisição ocorrências que foram geradas para a mesma
  M  - quando não existe na requisição ocorrências geradas 

*/
nr_seq_auditoria_w		bigint := 0;
nr_seq_grupo_w			bigint;
nr_seq_fluxo_w			bigint;
qt_grupo_w			integer;
ie_tipo_processo_w		varchar(4);
nr_seq_grupo_auditor_w		bigint;
ie_externo_w			varchar(4);
nr_seq_segurado_w		pls_requisicao.nr_seq_segurado%type;
cd_estabelecimento_w		pls_requisicao.cd_estabelecimento%type;
ie_auditoria_w			pls_ocorrencia.ie_auditoria%type;
ie_utiliza_nivel_w		varchar(1);
qt_auditoria_w			bigint;
ie_reanalise_w			varchar(1)	:= 'N';
ie_tipo_intercambio_w		pls_requisicao.ie_tipo_intercambio%type;
ie_estagio_w			pls_requisicao.ie_estagio%type;
cd_unimed_beneficiario_w	ptu_pedido_autorizacao.cd_unimed_beneficiario%type;
cd_cgc_outorgante_w		pls_outorgante.cd_cgc_outorgante%type;
cd_cooperativa_w		pls_congenere.cd_cooperativa%type;

C01 CURSOR FOR
	SELECT 	nr_seq_grupo,
		nr_seq_fluxo
	from	pls_ocorrencia_grupo
	where	nr_seq_ocorrencia	= nr_seq_ocorrencia_p
	and	ie_requisicao		= 'S'
	and     	ie_situacao = 'A';


BEGIN

begin
	select	ie_tipo_processo,
		nr_seq_segurado,
		cd_estabelecimento,
		ie_estagio
	into STRICT	ie_tipo_processo_w,
		nr_seq_segurado_w,
		cd_estabelecimento_w,
		ie_estagio_w
	from	pls_requisicao
	where	nr_sequencia	= nr_seq_requisicao_p;
exception
when others then
	ie_tipo_processo_w	:= 'X';
	nr_seq_segurado_w	:= '';
	ie_tipo_intercambio_w	:= 'X';
end;

if (ie_tipo_processo_w = 'I' and ie_estagio_w  (6,7)) then
	begin
		select	cd_unimed_beneficiario
		into STRICT	cd_unimed_beneficiario_w
		from	ptu_pedido_autorizacao
		where	nr_sequencia	= (	SELECT	max(nr_sequencia)
						from	ptu_pedido_autorizacao
						where	nr_seq_requisicao = nr_seq_requisicao_p);
	exception
	when others then
		cd_unimed_beneficiario_w := null;
	end;
	
	if (cd_unimed_beneficiario_w IS NOT NULL AND cd_unimed_beneficiario_w::text <> '') then
		select	max(cd_cgc_outorgante)
		into STRICT	cd_cgc_outorgante_w
		from	pls_outorgante;

		select	max(cd_cooperativa)
		into STRICT	cd_cooperativa_w
		from	pls_congenere
		where	cd_cgc			= cd_cgc_outorgante_w
		and	(cd_cooperativa IS NOT NULL AND cd_cooperativa::text <> '');
		
		if (lpad(cd_cooperativa_w,4,'0') = lpad(cd_unimed_beneficiario_w,4,'0'))then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(1030165);
			--Não é possível enviar uma solicitação de intercâmbio de seus beneficiários para auditoria!
		end if;
	end if;
end if;

select	count(1)
into STRICT	qt_auditoria_w
from	pls_auditoria
where	nr_seq_requisicao = nr_seq_requisicao_p;

if (qt_auditoria_w = 0) then
	CALL pls_gerar_auditoria_requisicao(nr_seq_requisicao_p,nm_usuario_p,ie_tipo_p);
	ie_reanalise_w	:= 'N';
else
	CALL pls_gerar_reanalise_requisicao(nr_seq_requisicao_p,nr_seq_ocorrencia_p,nm_usuario_p);
	ie_reanalise_w	:= 'S';
end if;

begin
	select	nr_sequencia
	into STRICT	nr_seq_auditoria_w
	from	pls_auditoria
	where	nr_seq_requisicao = nr_seq_requisicao_p
	and	coalesce(dt_liberacao::text, '') = '';
exception
when others then
	nr_seq_auditoria_w := 0;
end;

if (nr_seq_auditoria_w > 0) then
	if (coalesce(ie_tipo_p,'A') = 'M') then
		if (ie_reanalise_w = 'N') then
			begin
				select	ie_auditoria
				into STRICT	ie_auditoria_w
				from	pls_ocorrencia
				where	nr_sequencia	= nr_seq_ocorrencia_p;
			exception
			when others then
				ie_auditoria_w	:= '';
			end;	
		
			insert into pls_ocorrencia_benef(nr_sequencia,
				nr_seq_segurado,
				nr_seq_ocorrencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_requisicao,
				nr_seq_conta,
				nr_seq_proc,
				nr_seq_mat,
				nr_seq_regra,
				nr_seq_guia_plano,
				ie_auditoria,
				nr_nivel_liberacao,
				ds_observacao)
			values (nextval('pls_ocorrencia_benef_seq'),
				nr_seq_segurado_w,
				nr_seq_ocorrencia_p,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_requisicao_p,
				null,
				null,
				null,
				null,
				null,
				ie_auditoria_w,
				null,
				'Ocorrência gerada através do envio manual da requisição para auditoria');		
				
			ie_utiliza_nivel_w := pls_obter_se_uti_nivel_lib_aut(cd_estabelecimento_w);
				
			if (ie_utiliza_nivel_w = 'S') then
				CALL pls_gerar_ocorr_glosa_aud_req(nr_seq_auditoria_w,nm_usuario_p);
			end if;			
			
			open C01;
			loop
			fetch C01 into	
				nr_seq_grupo_w,
				nr_seq_fluxo_w;
			EXIT WHEN NOT FOUND; /* apply on C01 */
				begin
				select	count(1)
				into STRICT	qt_grupo_w
				from	pls_auditoria_grupo
				where	nr_seq_auditoria 	= nr_seq_auditoria_w
				and	nr_seq_grupo 		= nr_seq_grupo_w;
				
				if (qt_grupo_w = 0) then
					insert into pls_auditoria_grupo(nr_sequencia, nr_seq_auditoria, nr_seq_grupo,
						dt_atualizacao, nm_usuario, dt_atualizacao_nrec,
						nm_usuario_nrec, nr_seq_ordem, ie_status,
						ie_manual)
					values (nextval('pls_auditoria_grupo_seq'), nr_seq_auditoria_w, nr_seq_grupo_w,
						clock_timestamp(), nm_usuario_p, clock_timestamp(),
						nm_usuario_p, nr_seq_fluxo_w, 'U',
						'N');
				end if;
				end;
			end loop;
			close C01;				
		end if;		
	end if;
	
	begin
		select	pls_obter_grupo_analise_atual(nr_seq_auditoria_w)
		into STRICT	nr_seq_grupo_auditor_w
		;
	exception
	when others then
		nr_seq_grupo_auditor_w	:= 0;
	end;

	if (coalesce(nr_seq_grupo_auditor_w,0) <> 0) then
		begin
			select	nr_seq_grupo
			into STRICT	nr_seq_grupo_w
			from	pls_auditoria_grupo
			where	nr_sequencia = nr_seq_grupo_auditor_w;
			
			select	CASE WHEN ie_tipo_auditoria=3 THEN 'S'  ELSE 'N' END
			into STRICT	ie_externo_w
			from	pls_grupo_auditor
			where	nr_sequencia	= nr_seq_grupo_w;
		exception
		when others then
			ie_externo_w	:= 'N';
		end;

		if (coalesce(ie_externo_w,'N') = 'S') then
			update	pls_auditoria
			set	ie_status			= 'AE',
				ie_auditoria_estipulante	= 'S'
			where	nr_sequencia			= nr_seq_auditoria_w;
		end if;	
	end if;

	update	pls_requisicao
	set	ie_estagio	= 4
	where	nr_sequencia	= nr_seq_requisicao_p;
	
	if (coalesce(ie_tipo_processo_w,'X')	= 'I') then
		update	pls_requisicao_proc
		set	ie_status		= 'A',
			nm_usuario		= nm_usuario_p,
			dt_atualizacao		= clock_timestamp()
		where	nr_seq_requisicao	= nr_seq_requisicao_p;
		
		update	pls_requisicao_mat
		set	ie_status		= 'A',
			nm_usuario		= nm_usuario_p,
			dt_atualizacao		= clock_timestamp()
		where	nr_seq_requisicao	= nr_seq_requisicao_p;
	end if;
	
	insert into pls_requisicao_historico(nr_sequencia, nr_seq_requisicao, ie_tipo_historico,
		ds_historico, dt_atualizacao, nm_usuario,
		dt_atualizacao_nrec, nm_usuario_nrec, dt_historico,
		ie_origem_historico)
	values (nextval('pls_requisicao_historico_seq'), nr_seq_requisicao_p, 'L',
		'O usuário '||obter_nome_usuario(nm_usuario_p)||' enviou a requisição para análise.'||chr(13)||chr(13)||
		ds_historico_p, clock_timestamp(), nm_usuario_p,
		clock_timestamp(), nm_usuario_p, clock_timestamp(),
		'A');
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_req_aud_manual ( nr_seq_requisicao_p bigint, nr_seq_ocorrencia_p bigint, ie_tipo_p text, ds_historico_p text, nm_usuario_p text) FROM PUBLIC;

