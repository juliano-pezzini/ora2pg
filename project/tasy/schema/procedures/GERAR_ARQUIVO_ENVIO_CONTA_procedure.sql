-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_arquivo_envio_conta ( cd_convenio_p bigint, cd_interface_envio_p bigint, ie_tipo_protocolo_p text, dt_mesano_referencia_p timestamp, nm_usuario_p text, nr_interno_conta_p bigint, nr_seq_arq_p bigint, nr_seq_envio_conv_p INOUT bigint, nm_arquivo_p INOUT text) AS $body$
DECLARE

 
ie_tipo_regra_w			varchar(01);
qt_regra_w			integer;
nr_seq_envio_conv_w		bigint;
nr_multiplo_envio_w		bigint;
cd_convenio_princ_w		integer;
ie_regra_arquivo_w			varchar(10);
cd_interno_w			varchar(15);
indice				smallint;
nm_arquivo_w			varchar(100);
ds_diretorio_padrao_w		varchar(100);
nr_seq_protocolo_w		bigint;
cd_interface_envio_w		varchar(10);
cd_estabelecimento_w		integer;

c01 CURSOR FOR 
	SELECT	coalesce(ie_tipo_regra, 'S'), 
		coalesce(cd_convenio_princ,0), 
		ie_regra_arquivo, 
		ds_diretorio_padrao 
	from	conv_regra_envio_protocolo 
	where	cd_convenio				= cd_convenio_p 
	and	coalesce(ie_tipo_protocolo, ie_tipo_protocolo_p)	= ie_tipo_protocolo_p 
	order by ie_tipo_protocolo;


BEGIN 
 
select	max(nr_seq_protocolo), 
	max(cd_estabelecimento) 
into STRICT	nr_seq_protocolo_w, 
	cd_estabelecimento_w 
from	conta_paciente 
where	nr_interno_conta	= nr_interno_conta_p;
 
 
select	count(*) 
into STRICT	qt_regra_w 
from	conv_regra_envio_protocolo 
where	cd_convenio		= cd_convenio_p;
 
nr_seq_envio_conv_w		:= coalesce(nr_seq_arq_p, 0);
 
open	c01;
loop 
fetch	c01 into	 
	ie_tipo_regra_w, 
	cd_convenio_princ_w, 
	ie_regra_arquivo_w, 
	ds_diretorio_padrao_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin 
 
	if (ie_tipo_regra_w = 'M') and (coalesce(nr_seq_arq_p, 0) = 0) then 
		select	coalesce(max(a.NR_SEQ_CONTA_PROT),0) + 1 
		into STRICT	nr_seq_envio_conv_w 
		from	conta_paciente a, protocolo_convenio b 
		where	a.nr_seq_protocolo		= b.nr_seq_protocolo 
		and	trunc(b.dt_mesano_referencia, 'month') = trunc(dt_mesano_referencia_p, 'month') 
		and	b.cd_convenio	in ( 
			SELECT	cd_convenio_p 
			 
			
union
 
			SELECT	cd_convenio_princ_w 
			 
			
union all
 
			select	cd_convenio 
			from	conv_regra_envio_protocolo 
			where	cd_convenio_princ = cd_convenio_princ_w);
 
	end if;
 
	nm_arquivo_w	:= '';
 
	end;
end loop;
close	c01;
	 
nm_arquivo_w	:= '';
indice		:= 1;
	 
if (ie_regra_arquivo_w IS NOT NULL AND ie_regra_arquivo_w::text <> '') then 
	begin 
 
	select	Obter_Valor_Conv_Estab(cd_convenio, cd_estabelecimento_w, 'CD_INTERNO') 
	into STRICT	cd_interno_w 
	from	convenio 
	where	cd_convenio	= cd_convenio_p;
	 
	select	coalesce(max(CASE WHEN cd_interface_envio_p=1010 THEN '.035' WHEN cd_interface_envio_p=1009 THEN '.055' WHEN cd_interface_envio_p=1006 THEN CASE WHEN ie_tipo_protocolo_p=1 THEN '.075'  ELSE '.085' END  WHEN cd_interface_envio_p=2676 THEN CASE WHEN ie_tipo_protocolo_p=1 THEN '.075'  ELSE '.085' END  END ),'.000') 
	into STRICT	cd_interface_envio_w 
	from	protocolo_convenio 
	where	nr_seq_protocolo = nr_seq_protocolo_w;
	 
	for	indice in 1..length(ie_regra_arquivo_w) loop 
 
		if (substr(ie_regra_arquivo_w,indice,1) = 'P') then 
			nm_arquivo_w	:= nm_arquivo_w || cd_interno_w;
		elsif (substr(ie_regra_arquivo_w,indice,1) = 'T') then 
			nm_arquivo_w	:= nm_arquivo_w || nr_seq_protocolo_w;
		elsif (substr(ie_regra_arquivo_w,indice,1) = 'C') then 
			nm_arquivo_w	:= nm_arquivo_w || nr_interno_conta_p;
		elsif (substr(ie_regra_arquivo_w,indice,1) = 'H') then 
			nm_arquivo_w	:= nm_arquivo_w || 'SMH';
		elsif (substr(ie_regra_arquivo_w,indice,1) = 'I') then 
			nm_arquivo_w	:= nm_arquivo_w || cd_interno_w;
		elsif (substr(ie_regra_arquivo_w,indice,1) = 'A') then 
			nm_arquivo_w	:= nm_arquivo_w || cd_interface_envio_w;
		elsif (substr(ie_regra_arquivo_w,indice,1) = 'M') then 
			nm_arquivo_w	:= nm_arquivo_w || to_char(dt_mesano_referencia_p, 'mmyy');
		elsif (substr(ie_regra_arquivo_w,indice,1) = 'S') then 
			nm_arquivo_w	:= nm_arquivo_w || substr(to_char(nr_seq_envio_conv_w, '0000'),2,10);
		elsif (substr(ie_regra_arquivo_w,indice,1) = 'V') then 
			nm_arquivo_w	:= nm_arquivo_w || 'PL';
		elsif (substr(ie_regra_arquivo_w,indice,1) = 'U') then 
			nm_arquivo_w	:= nm_arquivo_w || cd_interno_w||'_';
		elsif (substr(ie_regra_arquivo_w,indice,1) = 'D') then 
			nm_arquivo_w	:= nm_arquivo_w || to_char(clock_timestamp(),'ddmmyy')||'_';
		elsif (substr(ie_regra_arquivo_w,indice,1) = 'F') then 
			nm_arquivo_w	:= nm_arquivo_w || 'TextoLivre';
		else 
			nm_arquivo_w	:= nm_arquivo_w || substr(ie_regra_arquivo_w,indice,1);
		end if;
	end loop;
 
	if (ie_regra_arquivo_w = 'TC') then 
		nm_arquivo_w := ds_diretorio_padrao_w || nm_arquivo_w || '.txt';
	else 
		nm_arquivo_w := ds_diretorio_padrao_w || nm_arquivo_w;	
	end if;
 
	end;
end if;
 
update	conta_paciente 
set 	NR_SEQ_CONTA_PROT	= nr_seq_envio_conv_w 
where	nr_interno_conta	= nr_interno_conta_p 
and	coalesce(NR_SEQ_CONTA_PROT::text, '') = '';
 
nm_arquivo_p		:= nm_arquivo_w;	
nr_seq_envio_conv_p	:= nr_seq_envio_conv_w;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_arquivo_envio_conta ( cd_convenio_p bigint, cd_interface_envio_p bigint, ie_tipo_protocolo_p text, dt_mesano_referencia_p timestamp, nm_usuario_p text, nr_interno_conta_p bigint, nr_seq_arq_p bigint, nr_seq_envio_conv_p INOUT bigint, nm_arquivo_p INOUT text) FROM PUBLIC;

