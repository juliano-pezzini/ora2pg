-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE hd_gerar_dialisador (nr_seq_dialise_p bigint, nr_seq_dialisador_p bigint, nr_seq_maquina_dialise_p bigint, nr_seq_ponto_acesso_p bigint, nr_seq_osmose_p bigint, cd_estabelecimento_p bigint, dt_montagem_p timestamp, nm_usuario_p text, ie_operacao_p text, ie_troca_emergencia_p text, ds_motivo_subst_p text, ds_erro_p INOUT text, ds_mensagem_p INOUT text) AS $body$
DECLARE


nr_seq_dialis_anterior_w		bigint;
nr_seq_unid_dialise_w			bigint;
ie_status_w				varchar(1);
ie_dialise_iniciada_w			varchar(1);
qt_reuso_atual_w			smallint;
nr_seq_dialise_w			bigint;
ie_permite_montar_ocupado_w		varchar(1);
ds_mensagem_w				varchar(255);
qt_dialisador_dialise_w 		bigint;
ie_exige_osmose_w			varchar(1);
qt_dialisador_w				bigint;

qt_reuso_w				smallint;
qt_reuso_max_w				bigint;
ie_tipo_w				varchar(1);
ie_tipo_dialise_w			varchar(15);
nr_seq_dialise_dialisador_w		hd_dialise_dialisador.nr_sequencia%type;
nr_seq_dialise_concentrado_w		hd_dialise_concentrado.nr_sequencia%type;
nr_seq_maquina_w			hd_dialise_concentrado.nr_seq_maquina%type;
nr_seq_ponto_acesso_w			hd_dialise_concentrado.nr_seq_ponto_acesso%type;
ie_atualiza_estoque_w			hd_dialise_concentrado.ie_atualiza_estoque%type;
cd_lote_fornecedor_w			hd_dialise_concentrado.cd_lote_fornecedor%type;
cd_material_w				hd_dialise_concentrado.cd_material%type;
dt_conta_w				hd_dialise_concentrado.dt_conta%type;
dt_inclusao_w				hd_dialise_concentrado.dt_inclusao%type;
dt_retirada_w				hd_dialise_concentrado.dt_retirada%type;
nr_seq_dialisador_ret_w			hd_dialise_dialisador.nr_sequencia%type;
nr_lista_concentrado_w			varchar(2000);

 NR_ATENDIMENTO_w         HD_DIALISE.NR_ATENDIMENTO%type;
 CD_SETOR_ATENDIMENTO_w   HD_PONTO_ACESSO.CD_SETOR_ATENDIMENTO%type;
 CD_UNIDADE_BASICA_w      HD_PONTO_ACESSO.CD_UNIDADE_BASICA%type;
 CD_UNIDADE_COMPL_w       HD_PONTO_ACESSO.CD_UNIDADE_COMPL%type;
 IE_GERAR_MOVIMENTACAO_W  varchar(1);

dt_dialise_w				hd_dialise.dt_dialise%type;
nr_seq_ponto_w				hd_ponto_acesso.nr_sequencia%type;
cd_pessoa_fisica_w			hd_dialise.cd_pessoa_fisica%type;
nr_seq_turno_w				hd_turno.nr_sequencia%type;
nr_seq_agenda_w				hd_agenda_dialise.nr_sequencia%type;
nr_seq_unidade_w			hd_unidade_dialise.nr_sequencia%type;
ie_dia_semana_w				smallint;
ie_atualiza_w				varchar(10);
nr_seq_ponto_agenda_w		hd_agenda_dialise.nr_seq_ponto_acesso%type;

/*
ie_troca_emergencia_p:
S - emergência
U - Uso único
N - Normal
*/
c01 CURSOR FOR
	SELECT	nr_seq_maquina,
		nr_seq_ponto_acesso,
		ie_atualiza_estoque,
		cd_lote_fornecedor,
		cd_material,
		dt_conta,
		dt_inclusao,
		dt_retirada
	from	hd_dialise_concentrado
	where	nr_seq_maquina		= nr_seq_maquina_dialise_p
	and	nr_seq_ponto_acesso	= nr_seq_ponto_acesso_p
	and	coalesce(dt_retirada::text, '') = ''
	and	coalesce(nr_seq_dialise::text, '') = '';


BEGIN

ie_permite_montar_ocupado_w := obter_param_usuario(7009, 45, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_permite_montar_ocupado_w);
ie_exige_osmose_w := obter_param_usuario(7009, 81, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_exige_osmose_w);
IE_GERAR_MOVIMENTACAO_W := obter_param_usuario(7009, 278, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, IE_GERAR_MOVIMENTACAO_W);

if (coalesce(nr_seq_dialisador_p::text, '') = '') then
	ds_erro_p 	:= WHEB_MENSAGEM_PCK.get_texto(277455,null);
elsif (coalesce(nr_seq_ponto_acesso_p::text, '') = '') then
	ds_erro_p 	:= WHEB_MENSAGEM_PCK.get_texto(277454,null);
elsif (coalesce(nr_seq_maquina_dialise_p::text, '') = '') then
	ds_erro_p 	:= WHEB_MENSAGEM_PCK.get_texto(277453,null);
elsif	((ie_operacao_p = 'S') and (coalesce(ds_motivo_subst_p::text, '') = '')) then
	ds_erro_p 	:= WHEB_MENSAGEM_PCK.get_texto(277451,null);
elsif (coalesce(nr_seq_osmose_p::text, '') = '') and (ie_exige_osmose_w = 'S') then
	ds_erro_p := WHEB_MENSAGEM_PCK.get_texto(277450,null);
else	begin

	select	max(nr_seq_unid_dialise)
	into STRICT	nr_seq_unid_dialise_w
	from	hd_dialise
	where	nr_sequencia	= nr_seq_dialise_p;

	/* Verificar se a diálise foi iniciada */

	select	CASE WHEN coalesce(max(dt_inicio_dialise)::text, '') = '' THEN  'N'  ELSE 'S' END
	into STRICT	ie_dialise_iniciada_w
	from	hd_dialise
	where	nr_sequencia	= nr_seq_dialise_p;


	if (ie_operacao_p = 'S') then

		select	max(nr_seq_dialisador)
		into STRICT	nr_seq_dialis_anterior_w
		from	hd_dialise_dialisador
		where	nr_seq_dialise		= nr_seq_dialise_p
		and	coalesce(dt_retirada::text, '') = '';

		if (nr_seq_dialis_anterior_w <> nr_seq_dialisador_p) then
			update hd_dializador
			set    ie_status              	= 'P'
			where  nr_sequencia		= nr_seq_dialis_anterior_w;

			select	max(qt_reuso),
				max(nr_max_reuso),
				max(ie_tipo)
			into STRICT	qt_reuso_w,
				qt_reuso_max_w,
				ie_tipo_w
			from	hd_dializador
			where	nr_sequencia		= nr_seq_dialis_anterior_w;

			if (ie_tipo_w = 'U') then /* Envia dialisador de único uso para descarte */
				CALL HD_Descarte_Dialisador(nr_seq_dialis_anterior_w, 'UU', 'U', nm_usuario_p);
				ds_mensagem_p	:= WHEB_MENSAGEM_PCK.get_texto(281306,null);
			elsif (qt_reuso_w+1 > qt_reuso_max_w) and (qt_reuso_max_w > 0) then /* Envia dialisador com reuso máximo para descarte - SOMENTE PARA DIALISADORES QUE NÃO SÃO DE 1º USO*/
				CALL HD_Descarte_Dialisador(nr_seq_dialis_anterior_w, 'RE', 'U', nm_usuario_p);
				ds_mensagem_p	:= WHEB_MENSAGEM_PCK.get_texto(281307,null);
			end if;
		end if;

		select	max(nr_sequencia)
		into STRICT	nr_seq_dialisador_ret_w
		from	hd_dialise_dialisador
		where	nr_seq_dialise		= nr_seq_dialise_p
		and	coalesce(dt_retirada::text, '') = '';

		update	hd_dialise_dialisador
		set	dt_retirada		= clock_timestamp(),
			cd_pf_retirada		= substr(obter_pessoa_fisica_usuario(nm_usuario_p,'C'),1,10),
			ds_motivo_subst		= ds_motivo_subst_p
		where	nr_seq_dialise		= nr_seq_dialise_p
		and	coalesce(dt_retirada::text, '') = '';

	end if;

	select 	count(*)
	into STRICT	qt_dialisador_dialise_w
	from	hd_dialise_dialisador
	where	nr_seq_dialisador = nr_seq_dialisador_p;


	if (ie_operacao_p = 'M') and (ie_troca_emergencia_p = 'N') then
		ie_status_w	:= 'S';
	elsif (ie_operacao_p = 'M') and (ie_troca_emergencia_p = 'S') and (qt_dialisador_dialise_w = 0) then
		ie_status_w	:= 'U';
	elsif (ie_operacao_p = 'M') and (ie_troca_emergencia_p = 'S') and (qt_dialisador_dialise_w > 0) then
		ie_status_w	:= 'S';
	elsif (ie_operacao_p = 'M') and (ie_troca_emergencia_p = 'U') then
		ie_status_w	:= 'U';
	elsif (ie_operacao_p = 'S') and (ie_troca_emergencia_p = 'S') and (ie_dialise_iniciada_w = 'S') then
		ie_status_w	:= 'E';
	elsif (ie_operacao_p = 'S') and (ie_troca_emergencia_p = 'S') and (ie_dialise_iniciada_w = 'N') and (qt_dialisador_dialise_w = 0) then
		ie_status_w	:= 'U';
	elsif (ie_operacao_p = 'S') and (ie_troca_emergencia_p = 'S') and (ie_dialise_iniciada_w = 'N') and (qt_dialisador_dialise_w > 0) then
		ie_status_w	:= 'U';
	elsif (ie_operacao_p = 'S') and (ie_troca_emergencia_p = 'U') and (ie_dialise_iniciada_w = 'S') then
		ie_status_w	:= 'E';
	elsif (ie_operacao_p = 'S') and (ie_troca_emergencia_p = 'U') and (ie_dialise_iniciada_w = 'N') then
		ie_status_w	:= 'U';
	elsif (ie_operacao_p = 'S') and (ie_troca_emergencia_p = 'N') and (ie_dialise_iniciada_w = 'S') then
		ie_status_w	:= 'S';
	elsif (ie_operacao_p = 'S') and (ie_troca_emergencia_p = 'N') and (ie_dialise_iniciada_w = 'N') then
		ie_status_w	:= 'S';
	end if;

	/* Verificar se máquina ocupada */

	select	coalesce(max(nr_seq_dialise),0)
	into STRICT	nr_seq_dialise_w
	from	hd_dialise_dialisador
	where	nr_seq_maquina		= nr_seq_maquina_dialise_p
	and	coalesce(dt_retirada::text, '') = '';

	select	max(ie_tipo_dialise)
	into STRICT	ie_tipo_dialise_w
	from	hd_dialise
	where	nr_sequencia	= nr_seq_dialise_p;

	/* Verifica se deve consistir máquina ocupada */

	if (ie_permite_montar_ocupado_w = 'N') and (nr_seq_dialise_w > 0) and (ie_tipo_dialise_w <> 'R') then

		/* Pegar informações da hemodiálise para mostrar mensagem ao usuário */

		select	max(substr(wheb_mensagem_pck.get_texto(802510,
							'NR_SEQ_PACIENTE='||nr_seq_paciente||
							';DT_DIALISE='||to_char(dt_dialise, pkg_date_formaters.localize_mask('shortDate', pkg_date_formaters.getUserLanguageTag(cd_estabelecimento_p, nm_usuario_p)))||
							';NM_PACIENTE='||obter_nome_pf(cd_pessoa_fisica)),1,255))
		into STRICT	ds_mensagem_w
		from	hd_dialise
		where	nr_sequencia	= nr_seq_dialise_w;

		CALL wheb_mensagem_pck.exibir_mensagem_abort(179603, 'DS_MENSSAGE='||to_char(ds_mensagem_w));

	end if;

	/* Pegar o reuso atual */

	select	max(qt_reuso)
	into STRICT	qt_reuso_atual_w
	from	hd_dializador
	where	nr_sequencia		= nr_seq_dialisador_p;

	/* Coloca o dialisador em status de aguardando testes */

	update 	hd_dializador
	set    	ie_status              	= ie_status_w
	where 	nr_sequencia		= nr_seq_dialisador_p;

	select 	count(*)
	into STRICT	qt_dialisador_w
	from	hd_dialise_dialisador
	where	nr_seq_dialise		= nr_seq_dialise_p
	and	coalesce(dt_retirada::text, '') = ''
	and	nr_seq_dialisador <> nr_seq_dialisador_p;

	if (qt_dialisador_w > 0) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(179602);
	end if;

	select	nextval('hd_dialise_dialisador_seq')
	into STRICT	nr_seq_dialise_dialisador_w
	;

	/* Insere os dados de dialisador da diálise */

	insert into hd_dialise_dialisador(
		nr_sequencia,
		cd_estabelecimento,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		dt_montagem,
		cd_pf_montagem,
		nr_seq_dialisador,
		nr_seq_maquina,
		nr_seq_dialise,
		nr_seq_ponto_acesso,
		ie_troca_emergencia,
		nr_seq_unid_dialise,
		qt_reuso_atual,
		nr_seq_osmose
	) values (
		nr_seq_dialise_dialisador_w,
		cd_estabelecimento_p,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		dt_montagem_p,
		substr(obter_pessoa_fisica_usuario(nm_usuario_p,'C'),1,10),
		nr_seq_dialisador_p,
		nr_seq_maquina_dialise_p,
		nr_seq_dialise_p,
		nr_seq_ponto_acesso_p,
		ie_troca_emergencia_p,
		nr_seq_unid_dialise_w,
		qt_reuso_atual_w,
		nr_seq_osmose_p
	);

	/* Atualiza a data de primeiro uso do dialisador */

	update hd_dializador
	set    dt_prim_uso            	= clock_timestamp()
	where  nr_sequencia           	= nr_seq_dialisador_p
	and    coalesce(dt_prim_uso::text, '') = '';

	end;

	if (nr_seq_dialise_w > 0) then

		open	c01;
		loop
		fetch	c01 into
			nr_seq_maquina_w,
			nr_seq_ponto_acesso_w,
			ie_atualiza_estoque_w,
			cd_lote_fornecedor_w,
			cd_material_w,
			dt_conta_w,
			dt_inclusao_w,
			dt_retirada_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */

			select	nextval('hd_dialise_concentrado_seq')
			into STRICT	nr_seq_dialise_concentrado_w
			;

			insert	into hd_dialise_concentrado(
				nr_sequencia,
				nr_seq_dialise,
				nr_seq_maquina,
				nr_seq_ponto_acesso,
				ie_atualiza_estoque,
				cd_lote_fornecedor,
				cd_material,
				dt_conta,
				dt_inclusao,
				dt_retirada,
				nm_usuario,
				dt_atualizacao,
				cd_pf_inclusao
			) values (
				nr_seq_dialise_concentrado_w,
				nr_seq_dialise_w,
				nr_seq_maquina_w,
				nr_seq_ponto_acesso_w,
				ie_atualiza_estoque_w,
				cd_lote_fornecedor_w,
				cd_material_w,
				dt_conta_w,
				dt_inclusao_w,
				dt_retirada_w,
				nm_usuario_p,
				clock_timestamp(),
				substr(obter_pessoa_fisica_usuario(nm_usuario_p,'C'),1,10)
			);

			if (coalesce(nr_lista_concentrado_w::text, '') = '') then
				nr_lista_concentrado_w 	:= to_char(nr_seq_dialise_concentrado_w);
			elsif (length(nr_lista_concentrado_w || ',' || to_char(nr_seq_dialise_concentrado_w)) < 2000) then
				nr_lista_concentrado_w 	:= nr_lista_concentrado_w || ',' || to_char(nr_seq_dialise_concentrado_w);
			end if;

		end loop;
		close c01;

	end if;

	if (ie_operacao_p = 'M') then
		CALL hd_gerar_assinatura(nr_seq_dialise_dialisador_w, nr_lista_concentrado_w, nr_seq_dialise_p, null, null, null, null, null, null, 'MD', nm_usuario_p, 'N');
	elsif (ie_operacao_p = 'S') then
		CALL hd_gerar_assinatura(nr_seq_dialise_dialisador_w, nr_lista_concentrado_w, nr_seq_dialise_p, null, null, null, nr_seq_dialisador_ret_w, null, null, 'SD', nm_usuario_p, 'N');
	end if;

  IF IE_GERAR_MOVIMENTACAO_W = 'S' THEN
    BEGIN
      SELECT
          hd.NR_ATENDIMENTO
         ,hpa.CD_SETOR_ATENDIMENTO
         ,hpa.CD_UNIDADE_BASICA
         ,hpa.CD_UNIDADE_COMPL
      INTO STRICT
         NR_ATENDIMENTO_w
        ,CD_SETOR_ATENDIMENTO_w
        ,CD_UNIDADE_BASICA_w
        ,CD_UNIDADE_COMPL_w
      FROM HD_DIALISE hd, HD_DIALISE_DIALISADOR hdd, HD_PONTO_ACESSO hpa
      WHERE hd.nr_sequencia = hdd.nr_seq_dialise
      AND   hdd.nr_seq_ponto_acesso = hpa.nr_sequencia
      AND   hd.nr_sequencia = nr_seq_dialise_p
      AND   hdd.nr_sequencia =  nr_seq_dialise_dialisador_w;

    END;

    CALL GERAR_TRANSFERENCIA_PACIENTE(
       nr_atendimento_p        => NR_ATENDIMENTO_w
      ,cd_setor_atendimento_p   => CD_SETOR_ATENDIMENTO_w
      ,cd_unidade_basica_p      => CD_UNIDADE_BASICA_w
      ,cd_unidade_compl_p       => CD_UNIDADE_COMPL_w
      ,cd_tipo_acomodacao_p     => NULL
      ,nr_acompanhantes_p       => 0
      ,nr_seq_motivo_transf_p   => NULL
      ,ds_observacao_p          => NULL
      ,nm_usuario_p             => nm_usuario_p
      ,dt_entrada_unidade_p     => dt_montagem_p);
  END IF;

	select	max(nr_sequencia),
			max(nr_seq_ponto_acesso)
	into STRICT	nr_seq_agenda_w,
			nr_seq_ponto_agenda_w
	from	hd_agenda_dialise
	where	nr_seq_dialise = nr_seq_dialise_p;
	
	if (nr_seq_agenda_w IS NOT NULL AND nr_seq_agenda_w::text <> '') then
		select	max(dt_dialise),
				max(cd_pessoa_fisica),
				max(nr_seq_unid_dialise),
				max(obter_cod_dia_semana(dt_dialise))
		into STRICT	dt_dialise_w,
				cd_pessoa_fisica_w,
				nr_seq_unidade_w,
				ie_dia_semana_w
		from	hd_dialise
		where	nr_sequencia = nr_seq_dialise_p;
		
		select	max(nr_sequencia)
		into STRICT	nr_seq_turno_w
		from	hd_turno ht
		where	dt_dialise_w BETWEEN pkg_date_utils.get_time(dt_dialise_w,
										  pkg_date_utils.EXTRACT_FIELD('HOUR',ht.dt_inicio),
										  pkg_date_utils.EXTRACT_FIELD('MINUTE',ht.dt_inicio),
										  pkg_date_utils.EXTRACT_FIELD('SECOND',ht.dt_inicio)) AND
										  pkg_date_utils.get_time(dt_dialise_w,
										  pkg_date_utils.EXTRACT_FIELD('HOUR',ht.dt_fim),
										  pkg_date_utils.EXTRACT_FIELD('MINUTE',ht.dt_fim),
										  pkg_date_utils.EXTRACT_FIELD('SECOND',ht.dt_fim))
		and		ie_situacao = 'A';
		
		select	coalesce(max(nr_seq_ponto), nr_seq_ponto_acesso_p)
		into STRICT	nr_seq_ponto_w
		from	hd_maquina_dialise
		where	nr_sequencia = nr_seq_maquina_dialise_p;
		
		
		
		if (dt_dialise_w IS NOT NULL AND dt_dialise_w::text <> '') and (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') and (nr_seq_turno_w IS NOT NULL AND nr_seq_turno_w::text <> '') and (nr_seq_unidade_w IS NOT NULL AND nr_seq_unidade_w::text <> '') and (ie_dia_semana_w IS NOT NULL AND ie_dia_semana_w::text <> '') and (nr_seq_ponto_w IS NOT NULL AND nr_seq_ponto_w::text <> '') and (nr_seq_agenda_w IS NOT NULL AND nr_seq_agenda_w::text <> '') and (nr_seq_ponto_w <> nr_seq_ponto_agenda_w) then
			
			select	hd_atualiza_agenda(
				trunc(dt_dialise_w),
				cd_pessoa_fisica_w,
				nr_seq_turno_w,
				nr_seq_unidade_w,
				cd_estabelecimento_p,
				ie_dia_semana_w,
				nr_seq_ponto_w,
				null,
				nr_seq_agenda_w)
			into STRICT	ie_atualiza_w
			;
		end if;
		
	end if;

end if;

  COMMIT;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE hd_gerar_dialisador (nr_seq_dialise_p bigint, nr_seq_dialisador_p bigint, nr_seq_maquina_dialise_p bigint, nr_seq_ponto_acesso_p bigint, nr_seq_osmose_p bigint, cd_estabelecimento_p bigint, dt_montagem_p timestamp, nm_usuario_p text, ie_operacao_p text, ie_troca_emergencia_p text, ds_motivo_subst_p text, ds_erro_p INOUT text, ds_mensagem_p INOUT text) FROM PUBLIC;

