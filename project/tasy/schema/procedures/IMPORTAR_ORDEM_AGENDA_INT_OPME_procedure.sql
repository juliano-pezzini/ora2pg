-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE importar_ordem_agenda_int_opme ( ie_evento_p text, cd_estabelecimento_p bigint, cd_reserva_p text, cd_departamento_p text, cd_status_p text, cd_cnpj_fornec_p text, cd_cond_pagto_p text, cd_comprador_p text, dt_ordem_compra_p timestamp, cd_moeda_p text, cd_solicitante_p text, nr_crm_p text, uf_crm_p text, cd_cnpj_transportador_p text, vl_frete_p bigint, nm_contato_fornec_p text, ds_observacao_p text, cd_local_entrega_p text, dt_prevista_entrega_p timestamp, nr_documento_p text, vl_desconto_p bigint, nr_seq_item_p bigint, cd_material_p text, cd_unidade_medida_p text, vl_unitario_p bigint, vl_desc_item_p bigint, qt_material_p bigint, ds_obs_item_p text, nm_usuario_p text, ds_erro_p INOUT text) AS $body$
DECLARE


/*
ie_evento_p
 0	= Ordem de compra
 1	= Itens
*/
nr_ordem_compra_w		bigint;
cd_comprador_w			varchar(20);
cd_solicitante_w			varchar(20);
qt_existe_w			bigint;
ds_erro_w			varchar(255);
nr_atendimento_w			bigint;
nr_atendimento_ww			bigint;
nm_paciente_w				agenda_paciente.nm_paciente%type;
nm_medico_w			varchar(255);
hr_inicio_w			timestamp;
ds_observacao_w			varchar(255);
ds_observacao_ww		varchar(4000);
qt_total_desconto_w		double precision;
nr_crm_w				varchar(255);
cd_centro_custo_w		integer;
cd_local_estoque_w		integer;
qt_existe_oc_w			bigint;
cd_estabelecimento_w		smallint;
cd_procedimento_w		bigint;	
ds_convenio_w			varchar(255);
cd_usuario_convenio_w		varchar(255);
ds_senha_w			varchar(255);
nr_doc_convenio_w		varchar(20);
dt_validade_carteira_w		timestamp;
nr_seq_atend_opme_w		bigint;
ie_tipo_conta_w			integer	:= 2;
cd_conta_contabil_w		varchar(20)	:= null;
cd_centro_conta_w		integer;
ie_consist_conta_contabil_w	varchar(1);	
nr_prescr_cirurg_w		bigint;
nr_cirurgia_w			bigint;	
dt_aprovacao_w			ordem_compra.dt_aprovacao%type;
ie_obs_nm_consig_w		parametro_compras.ie_obs_nm_consig%type;


BEGIN

if (substr(cd_reserva_p,1,1) <> 'T') and (coalesce(substr(cd_reserva_p,9,1),0) <> '-')  then

	select 	cd_estabelecimento
	into STRICT	cd_estabelecimento_w
	from	agenda a,
		agenda_paciente b
	where	a.cd_agenda = b.cd_agenda
	and 	b.nr_sequencia = cd_reserva_p;
end if;

select	coalesce(max(ie_obs_nm_consig), 'N')
	into STRICT	ie_obs_nm_consig_w
	from	parametro_compras
	where	cd_estabelecimento 	=	cd_estabelecimento_p;

if (coalesce(cd_departamento_p,0) = 0) then
	begin
	select 	coalesce(max(cd_centro_custo), 0),
		coalesce(max(cd_local_estoque), cd_local_entrega_p)
	into STRICT	cd_centro_custo_w,
		cd_local_estoque_w	
	from	parametros_opme
	where	cd_estabelecimento = coalesce(cd_estabelecimento_w, wheb_usuario_pck.get_cd_estabelecimento);
	
	end;
elsif (coalesce(cd_departamento_p,0) > 0) then
	begin	
	select 	coalesce(max(cd_centro_custo_receita), 0),
		coalesce(max(cd_local_estoque), cd_local_entrega_p)
	into STRICT	cd_centro_custo_w,
		cd_local_estoque_w	
	from	setor_atendimento
	where 	cd_setor_atendimento = cd_departamento_p;
	end;
end if;	
if (ie_evento_p = '0') then
	begin

	if (cd_status_p <> '40') then
		ds_erro_w	:= WHEB_MENSAGEM_PCK.get_texto(279518);
	end if;
	
	if (coalesce(cd_centro_custo_w,0) = 0) then
		ds_erro_w	:= WHEB_MENSAGEM_PCK.get_texto(279520);
	end if;

	if (coalesce(nr_documento_p, 0) = 0) then
		ds_erro_w	:= WHEB_MENSAGEM_PCK.get_texto(279521);
	end if;

	select	count(*)
	into STRICT	qt_existe_w
	from	estabelecimento
	where	cd_estabelecimento	= cd_estabelecimento_p;
	if (qt_existe_w = 0) then
		ds_erro_w	:= WHEB_MENSAGEM_PCK.get_texto(279522) || cd_estabelecimento_p || WHEB_MENSAGEM_PCK.get_texto(279524);
	end if;

	select	count(*)
	into STRICT	qt_existe_w
	from	pessoa_juridica
	where	cd_cgc	= cd_cnpj_fornec_p;
	if (qt_existe_w = 0) then
		ds_erro_w	:= WHEB_MENSAGEM_PCK.get_texto(279525) || cd_cnpj_fornec_p || WHEB_MENSAGEM_PCK.get_texto(279524);
	end if;

	select	count(*)
	into STRICT	qt_existe_w
	from	pessoa_juridica
	where	cd_cgc	= cd_cnpj_transportador_p;
	if (qt_existe_w = 0) then
		ds_erro_w	:= WHEB_MENSAGEM_PCK.get_texto(279525) || cd_cnpj_transportador_p || WHEB_MENSAGEM_PCK.get_texto(279524);
	end if;

	select	count(*)
	into STRICT	qt_existe_w
	from	condicao_pagamento
	where	cd_condicao_pagamento	= cd_cond_pagto_p;
	if (qt_existe_w = 0) then
		ds_erro_w	:= WHEB_MENSAGEM_PCK.get_texto(279526) || cd_cond_pagto_p || WHEB_MENSAGEM_PCK.get_texto(279524);
	end if;

	select	coalesce(max(cd_pessoa_fisica), 0)
	into STRICT	cd_comprador_w
	from	comprador
	where	nm_guerra	= cd_comprador_p;
	if (cd_comprador_w = 0) then
		ds_erro_w	:= WHEB_MENSAGEM_PCK.get_texto(279527) || cd_comprador_p || WHEB_MENSAGEM_PCK.get_texto(279528);
	end if;

	select	count(*)
	into STRICT	qt_existe_w
	from	moeda
	where	cd_moeda = cd_moeda_p;
	if (qt_existe_w = 0) then
		ds_erro_w	:= WHEB_MENSAGEM_PCK.get_texto(279529) || cd_moeda_p || WHEB_MENSAGEM_PCK.get_texto(279524);
	end if;

	nr_crm_w		:= nr_crm_p;
	if (position('/' in nr_crm_p) > 0) then
		nr_crm_w	:= substr(nr_crm_p, 1, position('/' in nr_crm_p) - 2);
	end if;
	select	coalesce(max(cd_pessoa_fisica), 0)
	into STRICT	cd_solicitante_w
	from	medico
	where	nr_crm	= nr_crm_w
	and	uf_crm	= uf_crm_p;
	if (cd_solicitante_w = 0) then
		ds_erro_w	:= WHEB_MENSAGEM_PCK.get_texto(279530) || nr_crm_w || WHEB_MENSAGEM_PCK.get_texto(279524);
	end if;

	select	count(*)
	into STRICT	qt_existe_w
	from	local_estoque
	where	cd_local_estoque = cd_local_estoque_w;
	if (qt_existe_w = 0) then
		ds_erro_w	:= WHEB_MENSAGEM_PCK.get_texto(279531) || cd_local_estoque_w || WHEB_MENSAGEM_PCK.get_texto(279524);
	end if;

	--criar tratamento para pegar o numero de atendimento
	
	if (substr(cd_reserva_p,1,1) = 'T') then
		nr_atendimento_w := substr(cd_reserva_p,2,10);
		
	elsif (substr(cd_reserva_p,9,1) = '-') then
		nr_atendimento_w := substr(cd_reserva_p,10,length(cd_reserva_p));
		
	end if;
	
	if (coalesce(nr_atendimento_w,0) = 0) then
		select	count(*)
		into STRICT	qt_existe_w
		from	agenda_paciente
		where	nr_sequencia = cd_reserva_p;
		if (qt_existe_w = 0) then
			ds_erro_w	:= WHEB_MENSAGEM_PCK.get_texto(279532) || cd_reserva_p || WHEB_MENSAGEM_PCK.get_texto(279524);
		end if;
	end if;
		
	if (coalesce(nr_atendimento_w,0) > 0) then
		select 	count(*)
		into STRICT	qt_existe_oc_w
		from	ordem_compra
		where 	nr_atendimento = nr_atendimento_w
		and     nr_documento_externo = nr_documento_p /* nr_documento_p pedido da Inpart, se enviar igual nao gera nova OC*/
		and     ie_origem_imp = WHEB_MENSAGEM_PCK.get_texto(279534)
		and 	coalesce(nr_seq_motivo_cancel::text, '') = '';
	
		if (coalesce(qt_existe_oc_w,0) > 0) then
			ds_erro_w	:= WHEB_MENSAGEM_PCK.get_texto(279535) || nr_atendimento_w || WHEB_MENSAGEM_PCK.get_texto(279536)||cd_cnpj_fornec_p||'.';
		end if;
	end if;
	
	if (coalesce(nr_atendimento_w,0) = 0) then
		select 	count(*)
		into STRICT	qt_existe_oc_w
		from	ordem_compra
		where 	nr_seq_agenda_pac = cd_reserva_p
		and     ie_origem_imp = WHEB_MENSAGEM_PCK.get_texto(279534)
		and     nr_documento_externo = nr_documento_p
		and 	coalesce(nr_seq_motivo_cancel::text, '') = '';
	
		if (coalesce(qt_existe_oc_w,0) > 0) then
			ds_erro_w := WHEB_MENSAGEM_PCK.get_texto(279535) || cd_reserva_p || WHEB_MENSAGEM_PCK.get_texto(279536)||cd_cnpj_fornec_p||'.';
		end if;	
	end if;	
						
	if (coalesce(ds_erro_w, 'X') = 'X') then
		begin
		if (coalesce(nr_atendimento_w,0) = 0) then
			select 	nr_atendimento
			into STRICT	nr_atendimento_ww
			from	agenda_paciente
			where	nr_sequencia = cd_reserva_p;
		end if;
		
		if (coalesce(nr_atendimento_ww,0) > 0 ) then
			nr_atendimento_w := nr_atendimento_ww;
		end if;	
		
		if (substr(cd_reserva_p,1,1) <> 'T') and (coalesce(substr(cd_reserva_p,9,1),0) <> '-')   then
			begin	
			select 	a.nr_atendimento,
				OBTER_SE_INICIAIS_PACIENTE(a.nm_paciente, ie_obs_nm_consig_w),
				substr(obter_nome_medico(a.cd_medico,'N'),1,255)nm_medico,
				a.hr_inicio,
				a.cd_procedimento,
				substr(obter_dados_atendimento(a.nr_atendimento,'NC'),1,100) ds_convenio,
				a.cd_usuario_convenio,
				substr(obter_dados_atendimento(a.cd_convenio,'SA'),1,100) ds_senha,
				a.nr_doc_convenio,
				obter_prescr_cir_especial(a.nr_cirurgia),
				a.dt_validade_carteira,
				a.nr_cirurgia
			into STRICT	nr_atendimento_ww,
				nm_paciente_w,
				nm_medico_w,
				hr_inicio_w,
				cd_procedimento_w,
				ds_convenio_w,
				cd_usuario_convenio_w,
				ds_senha_w,
				nr_doc_convenio_w,
				nr_prescr_cirurg_w,
				dt_validade_carteira_w,
				nr_cirurgia_w				
			from	agenda_paciente a
			where	a.nr_sequencia =  cd_reserva_p;
			
			if (ie_obs_nm_consig_w = 'S') then
				ds_observacao_ww	:=     substr(	WHEB_MENSAGEM_PCK.get_texto(279538) || nm_paciente_w ||
					WHEB_MENSAGEM_PCK.get_texto(279539) || nr_atendimento_ww ||
					WHEB_MENSAGEM_PCK.get_texto(279540) || nm_medico_w || 
					WHEB_MENSAGEM_PCK.get_texto(279542) ||  to_char(hr_inicio_w,'dd/mm/yyyy hh24:mi:ss')||
					WHEB_MENSAGEM_PCK.get_texto(279543)||cd_procedimento_w ||
					WHEB_MENSAGEM_PCK.get_texto(279544)||ds_convenio_w||
					WHEB_MENSAGEM_PCK.get_texto(279545)||cd_usuario_convenio_w||
					WHEB_MENSAGEM_PCK.get_texto(279546)|| ds_senha_w||
					WHEB_MENSAGEM_PCK.get_texto(279547)||nr_doc_convenio_w||
					WHEB_MENSAGEM_PCK.get_texto(279548)||dt_validade_carteira_w,1,255);
			else
				ds_observacao_ww	:=     substr(	WHEB_MENSAGEM_PCK.get_texto(279539) || nr_atendimento_ww ||
					WHEB_MENSAGEM_PCK.get_texto(279540) || nm_medico_w || 
					WHEB_MENSAGEM_PCK.get_texto(279542) ||  to_char(hr_inicio_w,'dd/mm/yyyy hh24:mi:ss')||
					WHEB_MENSAGEM_PCK.get_texto(279543)||cd_procedimento_w ||
					WHEB_MENSAGEM_PCK.get_texto(279544)||ds_convenio_w||
					WHEB_MENSAGEM_PCK.get_texto(279545)||cd_usuario_convenio_w||
					WHEB_MENSAGEM_PCK.get_texto(279546)|| ds_senha_w||
					WHEB_MENSAGEM_PCK.get_texto(279547)||nr_doc_convenio_w||
					WHEB_MENSAGEM_PCK.get_texto(279548)||dt_validade_carteira_w,1,255);
			end if;
			end;
		end if;	
	
		select	coalesce(max(nr_sequencia),0)
		into STRICT	nr_seq_atend_opme_w
		from	atend_pac_int_opme
		where	nr_atendimento = nr_atendimento_w
		and	trunc(dt_atualizacao) = trunc(clock_timestamp());
		
		if (coalesce(nr_cirurgia_w,0) > 0 ) then
			nr_prescr_cirurg_w := obter_prescr_esp_fornec_int(nr_cirurgia_w,cd_cnpj_fornec_p);
		end if;
		
		if (nr_seq_atend_opme_w = 0) then
		
			select	max(nr_sequencia)
			into STRICT	nr_seq_atend_opme_w
			from	atend_pac_int_opme
			where	nr_atendimento = nr_atendimento_w
			order by dt_atualizacao desc;
					
		end if;
	
		select	nextval('ordem_compra_seq')
		into STRICT	nr_ordem_compra_w
		;

		insert into ordem_compra(
			nr_ordem_compra,		cd_estabelecimento,
			cd_cgc_fornecedor,	cd_condicao_pagamento,
			cd_comprador,		dt_ordem_compra,
			dt_atualizacao,		nm_usuario,
			cd_moeda,		ie_situacao,
			dt_inclusao,		cd_pessoa_solicitante,
			cd_cgc_transportador,	ie_frete,
			vl_frete,			pr_multa_atraso,
			pr_desconto,		pr_desc_pgto_antec,
			pr_juros_negociado,	dt_emissao,
			ds_pessoa_contato,	ds_observacao,
			cd_motivo_alteracao,	cd_local_entrega,
			dt_entrega,		nr_prescricao,
			dt_aprovacao,		dt_baixa,
			dt_liberacao,		ie_aviso_chegada,
			nr_requisicao,		cd_pessoa_fisica,
			nr_ordem_agrup,		ie_emite_obs,
			ie_urgente,		nr_seq_interno,
			nr_atendimento,		nm_usuario_imp,
			ie_somente_pagto,		nr_seq_motivo_cancel,
			vl_despesa_acessoria,	cd_setor_atendimento,
			nr_seq_subgrupo_compra,	pr_desc_financeiro,
			dt_leitura,			dt_aceite,
			nm_usuario_aceite,		nr_seq_forma_pagto,
			nr_documento_externo,	vl_desconto,
			dt_faturamento,		cd_convenio,
			ie_tipo_ordem,		cd_estab_transf,
			ie_forma_exportar,		nr_seq_ressup_fornec,
			dt_envio_email,		nr_cirurgia,
			nr_seq_reg_lic_compra,	ie_liberacao_portal,
			nr_seq_nf_repasse,		nr_seq_licitacao,
			nr_documento_interno,	nr_processo_interno,
			nr_seq_tipo_compra,	nr_seq_agenda_pac,
			ie_origem_imp,		nm_usuario_lib,
			nr_seq_atend_opme)
		values ( nr_ordem_compra_w,		coalesce(cd_estabelecimento_w,cd_estabelecimento_p),
			cd_cnpj_fornec_p,		cd_cond_pagto_p,
			cd_comprador_w,		dt_ordem_compra_p,
			clock_timestamp(),			nm_usuario_p,
			cd_moeda_p,		'A',
			clock_timestamp(),			cd_solicitante_w,
			cd_cnpj_transportador_p,	'C',
			vl_frete_p,		null,
			0,			0,
			0,			null,
			nm_contato_fornec_p,	ds_observacao_ww,
			null,			cd_local_estoque_w,
			dt_prevista_entrega_p,	coalesce(nr_prescr_cirurg_w,null),
			clock_timestamp(),			null,
			clock_timestamp(),			'N',
			null,			null,
			null,			'S',
			'N',			null,
			nr_atendimento_w,	null,
			'N',			null,
			null,			null,
			null,			0,
			null,			null,
			null,			null,
			nr_documento_p,		0,
			null,			null,
			'I',			null,
			null,			null,
			null,			null,
			null,			null,
			null,			null,
			null,			null,
			null,			CASE WHEN substr(cd_reserva_p,1,1)='T' THEN null  ELSE CASE WHEN substr(cd_reserva_p,9,1)='-' THEN null  ELSE cd_reserva_p END  END ,
			WHEB_MENSAGEM_PCK.get_texto(279534),		nm_usuario_p,
			nr_seq_atend_opme_w);
		end;
	end if;
	end;

elsif (ie_evento_p = '1') then
	begin
	select 	coalesce(max(ie_consist_conta_contabil), 'N')
	into STRICT	ie_consist_conta_contabil_w
	from	parametros_opme
	where	cd_estabelecimento = coalesce(cd_estabelecimento_w,cd_estabelecimento_p);

	if (ie_consist_conta_contabil_w = 'S') then
		ie_tipo_conta_w	:= 3;
		if (coalesce(cd_centro_custo_w::text, '') = '') then
			ie_tipo_conta_w	:= 2;
		end if;

		SELECT * FROM define_conta_material(
				coalesce(cd_estabelecimento_w,cd_estabelecimento_p), cd_material_p, ie_tipo_conta_w, 0, 0, 0, 0, 0, 0, 0, cd_local_estoque_w, 0, trunc(clock_timestamp()), cd_conta_contabil_w, cd_centro_conta_w, null) INTO STRICT cd_conta_contabil_w, cd_centro_conta_w;
	
		if (coalesce(cd_conta_contabil_w::text, '') = '') then
			ds_erro_w	:= WHEB_MENSAGEM_PCK.get_texto(279535) || cd_reserva_p || WHEB_MENSAGEM_PCK.get_texto(279550);	
		end if;
	end if;
	
	select	count(*)
	into STRICT	qt_existe_w
	from	material
	where	cd_material = cd_material_p;
	if (qt_existe_w = 0) then
		ds_erro_w	:= WHEB_MENSAGEM_PCK.get_texto(279551) || cd_material_p || WHEB_MENSAGEM_PCK.get_texto(279524);
	end if;

	select	count(*)
	into STRICT	qt_existe_w
	from	unidade_medida
	where	cd_unidade_medida = cd_unidade_medida_p;
	if (qt_existe_w = 0) then
		ds_erro_w	:= WHEB_MENSAGEM_PCK.get_texto(279552) || cd_unidade_medida_p || WHEB_MENSAGEM_PCK.get_texto(279524);
	end if;

	select	max(nr_ordem_compra)
	into STRICT	nr_ordem_compra_w
	from	ordem_compra
	where	nr_documento_externo	= nr_documento_p;
	
	if (substr(cd_reserva_p,1,1) = 'T') then
		nr_atendimento_w := substr(cd_reserva_p,2,10);
	
	elsif (substr(cd_reserva_p,9,1) = '-') then
		nr_atendimento_w := substr(cd_reserva_p,10,length(cd_reserva_p));
	
	end if;	
		
	if (substr(cd_reserva_p,1,1) <> 'T') and (coalesce(substr(cd_reserva_p,9,1),0) <> '-')  then
		begin	
		select 	a.nr_atendimento,
			OBTER_SE_INICIAIS_PACIENTE(a.nm_paciente, ie_obs_nm_consig_w),
			coalesce(substr(obter_nome_medico(cd_medico,'N'),1,255), (select substr(obter_nome_medico(max(cd_medico_executor),'N'),1,255)
										from    procedimento_paciente x
										where   x.cd_procedimento       = a.cd_procedimento  
										and     X.ie_origem_proced      = a.ie_origem_proced
										and	x.nr_atendimento 	= a.nr_atendimento) )nm_medico,
			a.hr_inicio
		into STRICT	nr_atendimento_ww,
			nm_paciente_w,
			nm_medico_w,
			hr_inicio_w	
		from	agenda_paciente a
		where	a.nr_sequencia =  cd_reserva_p;
		
		if (ie_obs_nm_consig_w = 'S') then
			ds_observacao_w		:=     substr(	WHEB_MENSAGEM_PCK.get_texto(279538) || nm_paciente_w ||
				WHEB_MENSAGEM_PCK.get_texto(279553) || nr_atendimento_ww ||
				WHEB_MENSAGEM_PCK.get_texto(279554) || nm_medico_w || 
				WHEB_MENSAGEM_PCK.get_texto(279555) ||  to_char(hr_inicio_w,'dd/mm/yyyy hh24:mi:ss'),1,255);
		else
			ds_observacao_w		:=     substr(	WHEB_MENSAGEM_PCK.get_texto(279553) || nr_atendimento_ww ||
				WHEB_MENSAGEM_PCK.get_texto(279554) || nm_medico_w || 
				WHEB_MENSAGEM_PCK.get_texto(279555) ||  to_char(hr_inicio_w,'dd/mm/yyyy hh24:mi:ss'),1,255);				
		end if;
		end;
	end if;	
	
	
	if (substr(cd_reserva_p,1,1) = 'T') then
		begin	
		select 	a.nr_atendimento,
			OBTER_SE_INICIAIS_PACIENTE(substr(obter_dados_atendimento(nr_atendimento,'NP'),1,200), ie_obs_nm_consig_w),
			(select substr(obter_nome_medico(max(cd_medico_executor),'N'),1,255)
				from    procedimento_paciente y
				where   y.cd_procedimento       = a.cd_procedimento  
				and     y.ie_origem_proced      = a.ie_origem_proced
				and	y.nr_atendimento 	= a.nr_atendimento) cd_medico_executor,
			(select  max(dt_procedimento)
				from    procedimento_paciente x
				where   x.cd_procedimento       = a.cd_procedimento  
				and     X.ie_origem_proced      = a.ie_origem_proced
				and	x.nr_atendimento 	= a.nr_atendimento) dt_agenda
		into STRICT	nr_atendimento_ww,
			nm_paciente_w,
			nm_medico_w,
			hr_inicio_w
		from	atend_pac_int_opme a	
		where	a.nr_atendimento = nr_atendimento_w;
		
		if (ie_obs_nm_consig_w = 'S') then
			ds_observacao_w		:=     substr(	WHEB_MENSAGEM_PCK.get_texto(279538) || nm_paciente_w ||
				WHEB_MENSAGEM_PCK.get_texto(279553) || nr_atendimento_ww ||
				WHEB_MENSAGEM_PCK.get_texto(279554) || nm_medico_w || 
				WHEB_MENSAGEM_PCK.get_texto(279556) ||  to_char(hr_inicio_w,'dd/mm/yyyy hh24:mi:ss'),1,255);
		else
			ds_observacao_w		:=     substr(	WHEB_MENSAGEM_PCK.get_texto(279553) || nr_atendimento_ww ||
				WHEB_MENSAGEM_PCK.get_texto(279554) || nm_medico_w || 
				WHEB_MENSAGEM_PCK.get_texto(279556) ||  to_char(hr_inicio_w,'dd/mm/yyyy hh24:mi:ss'),1,255);
		end if;
		end;
	elsif (substr(cd_reserva_p,9,1) = '-') then
		begin
		select 	max(a.nr_atendimento),
			OBTER_SE_INICIAIS_PACIENTE(max(substr(obter_dados_atendimento(a.nr_atendimento,'NP'),1,200)), ie_obs_nm_consig_w),
			max(substr(obter_medico_resp_atend(a.nr_atendimento,'N'),1,200)) cd_medico_executor,
			max(to_date(obter_dados_atendimento(a.nr_atendimento,'DE'),'dd/mm/yyyy hh24:mi:ss')) dt_agenda
		into STRICT	nr_atendimento_ww,
			nm_paciente_w,
			nm_medico_w,
			hr_inicio_w
		from	atend_pac_int_opme a	
		where	a.nr_atendimento = nr_atendimento_w;
	
		if (ie_obs_nm_consig_w = 'S') then
			ds_observacao_w		:=     substr(	WHEB_MENSAGEM_PCK.get_texto(279538) || nm_paciente_w ||
				WHEB_MENSAGEM_PCK.get_texto(279553) || nr_atendimento_ww ||
				WHEB_MENSAGEM_PCK.get_texto(279554) || nm_medico_w || 
				WHEB_MENSAGEM_PCK.get_texto(279557) ||  to_char(hr_inicio_w,'dd/mm/yyyy hh24:mi:ss'),1,255);
		else
			ds_observacao_w		:=     substr(	WHEB_MENSAGEM_PCK.get_texto(279553) || nr_atendimento_ww ||
				WHEB_MENSAGEM_PCK.get_texto(279554) || nm_medico_w || 
				WHEB_MENSAGEM_PCK.get_texto(279557) ||  to_char(hr_inicio_w,'dd/mm/yyyy hh24:mi:ss'),1,255);
		end if;
		end;
	end if;	
	
	if (coalesce(ds_erro_w,'X') <> 'X') then
		delete	FROM ordem_compra
		where	nr_ordem_compra = nr_ordem_compra_w;
	end if;

	if (coalesce(ds_erro_w, 'X') = 'X') then
		begin
		
		qt_total_desconto_w  := (qt_material_p * vl_desc_item_p);
		
		select	max(nr_ordem_compra),
				max(dt_aprovacao)
		into STRICT	nr_ordem_compra_w,
				dt_aprovacao_w
		from	ordem_compra
		where	nr_documento_externo	= nr_documento_p;
		
		ie_tipo_conta_w	:= 3;
		if (coalesce(cd_centro_custo_w::text, '') = '') then
			ie_tipo_conta_w	:= 2;
		end if;

		SELECT * FROM define_conta_material(
				coalesce(cd_estabelecimento_w,cd_estabelecimento_p), cd_material_p, ie_tipo_conta_w, 0, 0, 0, 0, 0, 0, 0, cd_local_estoque_w, 0, trunc(clock_timestamp()), cd_conta_contabil_w, cd_centro_conta_w, null) INTO STRICT cd_conta_contabil_w, cd_centro_conta_w;
		
		insert into ordem_compra_item(
			nr_ordem_compra,	nr_item_oci,
			cd_material,		cd_unidade_medida_compra,
			vl_unitario_material,	qt_material,
			dt_atualizacao,		nm_usuario,
			ie_situacao,		cd_pessoa_solicitante,
			qt_material_entregue,	pr_descontos,
			cd_local_estoque,	ds_material_direto,
			ds_observacao,		cd_motivo_alteracao,
			nr_cot_compra,		nr_item_cot_compra,
			ds_marca,		vl_item_liquido,
			nr_seq_aprovacao,	dt_aprovacao,
			cd_centro_custo,	cd_conta_contabil,
			nr_solic_compra,	nr_item_solic_compra,
			qt_conv_unid_fornec,	ie_geracao_solic,
			nr_seq_proj_rec,	pr_desc_financ,
			nr_seq_lic_item,	nr_seq_conta_financ,
			qt_original,		dt_validade,
			nr_seq_marca,		dt_reprovacao,
			nr_seq_ordem_serv,	vl_ultima_compra,
			vl_dif_ultima_compra,	pr_dif_ultima_compra,
			nr_seq_unidade_adic,	nr_seq_criterio_rateio,
			nr_serie_material,	nr_solic_compra_cancel,
			vl_desconto,		nr_seq_lote_fornec,
			nr_seq_proj_gpi,	nr_seq_etapa_gpi,
			nr_seq_conta_gpi,	dt_aprovacao_orig,
			dt_reprovacao_orig,	nr_contrato,
			dt_inicio_garantia,	dt_fim_garantia,
			nr_id_integracao,	nr_seq_reg_lic_item,
			vl_total_item, cd_sequencia_parametro)
		values ( nr_ordem_compra_w,	nr_seq_item_p,
			cd_material_p,		cd_unidade_medida_p,
			vl_unitario_p,		qt_material_p,
			clock_timestamp(),		nm_usuario_p,
			'A',			cd_solicitante_w,
			null,			0,
			cd_local_estoque_w,	ds_observacao_w,
			ds_obs_item_p,		null,
			null,			null,
			null,			null,
			null,			dt_aprovacao_w,
			coalesce(cd_centro_conta_w,cd_centro_custo_w),	cd_conta_contabil_w,
			null,			null,
			null,			'I',
			null,			0,
			null,			null,
			qt_material_p,		null,
			null,			null,
			null,			null,
			null,			null,
			null,			null,
			null,			null,
			qt_total_desconto_w,	null,
			null,			null,
			null,			null,
			null,			null,
			null,			null,
			null,			null,
			round((vl_unitario_p * qt_material_p)::numeric,4), philips_contabil_pck.get_parametro_conta_contabil);
			
			
		insert into ordem_compra_item_entrega(
			nr_sequencia,
			nr_ordem_compra,
			nr_item_oci,
			dt_prevista_entrega,
			qt_prevista_entrega,
			dt_atualizacao,	
			nm_usuario,
			dt_entrega_original,
			dt_entrega_limite)
		values (	nextval('ordem_compra_item_entrega_seq'),
			nr_ordem_compra_w,
			nr_seq_item_p,
			dt_prevista_entrega_p,
			qt_material_p,
			clock_timestamp(),
			nm_usuario_p,
			dt_prevista_entrega_p,
			dt_prevista_entrega_p);
		end;
	end if;
	end;

elsif (ie_evento_p = '10') then
	begin

	select	max(nr_ordem_compra)
	into STRICT	nr_ordem_compra_w
	from	ordem_compra
	where	nr_documento_externo	= nr_documento_p;

	CALL ajusta_status_agenda_int_opme(cd_reserva_p, '50', null, nm_usuario_p);
	calcular_liquido_ordem_compra( nr_ordem_compra_w, nm_usuario_p);
	CALL gerar_ordem_compra_venc( nr_ordem_compra_w, nm_usuario_p);


	end;
end if;

if (coalesce(ds_erro_w,'X') <> 'X') then
	CALL ajusta_status_agenda_int_opme(cd_reserva_p, '51', substr(ds_erro_w,1,255), nm_usuario_p);
	ds_erro_p	:= substr(ds_erro_w, 1, 255);
end if;


commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE importar_ordem_agenda_int_opme ( ie_evento_p text, cd_estabelecimento_p bigint, cd_reserva_p text, cd_departamento_p text, cd_status_p text, cd_cnpj_fornec_p text, cd_cond_pagto_p text, cd_comprador_p text, dt_ordem_compra_p timestamp, cd_moeda_p text, cd_solicitante_p text, nr_crm_p text, uf_crm_p text, cd_cnpj_transportador_p text, vl_frete_p bigint, nm_contato_fornec_p text, ds_observacao_p text, cd_local_entrega_p text, dt_prevista_entrega_p timestamp, nr_documento_p text, vl_desconto_p bigint, nr_seq_item_p bigint, cd_material_p text, cd_unidade_medida_p text, vl_unitario_p bigint, vl_desc_item_p bigint, qt_material_p bigint, ds_obs_item_p text, nm_usuario_p text, ds_erro_p INOUT text) FROM PUBLIC;

