-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_fechar_discussao_recebida (nr_seq_lote_disc_p bigint, ie_estorno_p text, nm_usuario_p text, ie_atualizar_vl_contest_p text, cd_estabelecimento_p text) AS $body$
DECLARE


nr_seq_lote_contest_w		bigint;
ie_envio_recebimento_w		varchar(3);
nr_seq_acao_w			bigint;
nr_seq_fatura_w			bigint;
nr_seq_contestacao_w		bigint;
nr_seq_discussao_w		bigint;
qt_registro_w			bigint := 0;
qt_reg_eve_w			bigint := 0;
nr_seq_lote_evento_w		bigint;
nr_titulo_pag_w			bigint;
nr_titulo_rec_w			bigint;
ie_status_w			varchar(3);
nr_seq_lote_conta_w		bigint;
nr_seq_pls_fatura_w		bigint;
ie_gerar_titulo_fat_ndr_w	varchar(1) := 'S';
nr_titulo_receber_ndr_w		bigint;
nr_titulo_pagar_ndr_w		bigint;
nr_seq_camara_contest_w		bigint;
qt_inconsistente_w		bigint;
ie_parametro_12_w		funcao_param_usuario.vl_parametro%type;
ie_tipo_arquivo_disc_w		pls_lote_discussao.ie_tipo_arquivo%type;
nr_titulo_w			pls_fatura.nr_titulo%type;
ie_concil_contab_w		pls_visible_false.ie_concil_contab%type;
qt_baixa_w			integer;


BEGIN
select	coalesce(max(ie_concil_contab), 'N')
into STRICT	ie_concil_contab_w
from	pls_visible_false
where	cd_estabelecimento = cd_estabelecimento_p;

-- Parametro [5] - Permite desfazer fechamento do lote de discussao
if (coalesce(ie_estorno_p,'N') = 'N') then
	select	count(1)
	into STRICT	qt_registro_w
	from	pls_lote_protocolo_conta	c,
		pls_lote_discussao		b,
		pls_analise_conta		a
	where	c.nr_sequencia		= b.nr_seq_lote_conta
	and	a.nr_seq_lote_protocolo = c.nr_sequencia
	and	b.nr_sequencia		= nr_seq_lote_disc_p
	and	a.ie_status not in ('L','T');
	
	if (qt_registro_w > 0) then
		-- Este lote de discussao nao pode ser fechado, pois ainda existe analise de conta pendente.
		CALL wheb_mensagem_pck.exibir_mensagem_abort(143677);
		
	elsif (nr_seq_lote_disc_p IS NOT NULL AND nr_seq_lote_disc_p::text <> '') then
		select	max(a.nr_seq_lote_contest),
			max(a.ie_tipo_arquivo)
		into STRICT	nr_seq_lote_contest_w,
			ie_tipo_arquivo_disc_w
		from	pls_lote_discussao a
		where	a.nr_sequencia		= nr_seq_lote_disc_p;
		
		ie_parametro_12_w := Obter_Param_Usuario(1334, 12, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_parametro_12_w);

		if (coalesce(ie_parametro_12_w, 'S') = 'N') then
			select	count(1)
			into STRICT	qt_inconsistente_w
			
			where	exists (SELECT	1
					from	pls_conta_proc		x,
						pls_contestacao_proc 	c,
						pls_contestacao		b,
						pls_lote_contestacao	a
					where	a.nr_sequencia	= b.nr_seq_lote
					and	b.nr_sequencia	= c.nr_seq_contestacao
					and	x.nr_sequencia	= c.nr_seq_conta_proc
					and	coalesce(x.cd_procedimento::text, '') = ''
					and	a.nr_sequencia	= nr_seq_lote_contest_w
					
union

					SELECT	1
					from	pls_conta_mat		x,
						pls_contestacao_mat 	c,
						pls_contestacao		b,
						pls_lote_contestacao	a
					where	a.nr_sequencia	= b.nr_seq_lote
					and	b.nr_sequencia	= c.nr_seq_contestacao
					and	x.nr_sequencia	= c.nr_seq_conta_mat
					and	coalesce(x.nr_seq_material::text, '') = ''
					and	a.nr_sequencia	= nr_seq_lote_contest_w);
					
			if (qt_inconsistente_w > 0) and (ie_tipo_arquivo_disc_w in (5,6,7,8,9)) then
				commit;
				CALL wheb_mensagem_pck.exibir_mensagem_abort(285404);
			end if;
		end if;
		
		select	max(a.ie_envio_recebimento)
		into STRICT	ie_envio_recebimento_w
		from	pls_lote_contestacao a
		where	a.nr_sequencia		= nr_seq_lote_contest_w;
		
		select	max(nr_seq_ptu_fatura),
			max(nr_seq_pls_fatura)
		into STRICT	nr_seq_fatura_w,
			nr_seq_pls_fatura_w
		from	pls_lote_contestacao
		where	nr_sequencia = nr_seq_lote_contest_w;
				
		select	coalesce(max(nr_titulo),max(nr_titulo_ndc))
		into STRICT	nr_titulo_w
		from	ptu_fatura
		where	nr_sequencia = nr_seq_fatura_w;
		
		select	max(nr_sequencia)
		into STRICT	nr_seq_camara_contest_w
		from	ptu_camara_contestacao
		where	nr_seq_lote_contest 	= nr_seq_lote_contest_w;
		
		select	coalesce(max(nr_sequencia), nr_seq_camara_contest_w)
		into STRICT	nr_seq_camara_contest_w
		from	ptu_camara_contestacao
		where	nr_seq_lote_contest 	= nr_seq_lote_contest_w
		and	nr_seq_lote_discussao	= nr_seq_lote_disc_p;
		
		if (coalesce(ie_atualizar_vl_contest_p,'S') = 'S') then
			CALL pls_atualizar_valores_contest(nr_seq_lote_contest_w,'N');
		end if;

		update	pls_lote_discussao
		set 	dt_atualizacao	= clock_timestamp(),
			nm_usuario	= nm_usuario_p,
			dt_fechamento	= clock_timestamp(),
			ie_status	= 'F'
		where	nr_sequencia 	= nr_seq_lote_disc_p;

		-- Gerar LOG
		pls_gerar_contest_log(	nr_seq_lote_contest_w, nr_seq_lote_disc_p, null, null, null, null, 'FLD', 'N', nm_usuario_p);				
		
		-- Somente tratar evento Geracco/baixa de titulo a pagar caso discussao recebida
		if (ie_envio_recebimento_w = 'E') then
			nr_seq_acao_w := pls_obter_acao_intercambio(	'5',  -- Fechamento de discussao
							'20',  -- Validar baixa no titulo da fatura
							nr_seq_fatura_w, null, nr_seq_lote_contest_w, null, clock_timestamp(), 'A550', ie_estorno_p, nr_seq_acao_w);
							
			if (nr_seq_acao_w IS NOT NULL AND nr_seq_acao_w::text <> '') and (nr_titulo_w IS NOT NULL AND nr_titulo_w::text <> '') then
				select	count(1)
				into STRICT	qt_baixa_w
				from	titulo_pagar_baixa
				where	nr_titulo	= nr_titulo_w
				and	vl_glosa	= 0;
				
				if (qt_baixa_w = 0) then
					CALL wheb_mensagem_pck.exibir_mensagem_abort(1072101); -- O titulo da fatura nao possui baixa.
				end if;
			end if;
			
			nr_seq_acao_w := pls_obter_acao_intercambio(	'5',  -- Fechamento de discussao
							'7',  -- Baixar valor glosado no titulo
							nr_seq_fatura_w, null, nr_seq_lote_contest_w, null, clock_timestamp(), 'A550', ie_estorno_p, nr_seq_acao_w);
							
			if (nr_seq_acao_w IS NOT NULL AND nr_seq_acao_w::text <> '') then
				-- Gerar baixa no titulo a pagar com os glosas negadas
				CALL pls_baixar_glosas_discuss_pag(nr_seq_lote_disc_p,nr_seq_acao_w,'N',nm_usuario_p,cd_estabelecimento_p);
			end if;
			
			nr_seq_acao_w := pls_obter_acao_intercambio(	'5',  -- Fechamento de discussao
							'1',  -- Gerar titulo a receber
							nr_seq_fatura_w, null, null, null, clock_timestamp(), 'A550', ie_estorno_p, nr_seq_acao_w);		
							
			if (nr_seq_acao_w IS NOT NULL AND nr_seq_acao_w::text <> '') and (ie_tipo_arquivo_disc_w not in (9)) then
				ie_gerar_titulo_fat_ndr_w := 'N';
				CALL pls_gerar_tit_receber_discuss(nr_seq_lote_disc_p,nr_seq_acao_w,clock_timestamp(),nm_usuario_p);
			end if;
			
			if (ie_gerar_titulo_fat_ndr_w = 'S') then
				nr_seq_acao_w := pls_obter_acao_intercambio(	'5',  -- Fechamento de discussao
								'14',  -- Gerar titulo a receber (Fatura)
								nr_seq_fatura_w, null, null, null, clock_timestamp(), 'A550', ie_estorno_p, nr_seq_acao_w);		
								
				if (nr_seq_acao_w IS NOT NULL AND nr_seq_acao_w::text <> '') and (ie_tipo_arquivo_disc_w not in (9)) then
					CALL pls_gerar_tit_receber_discuss(nr_seq_lote_disc_p,nr_seq_acao_w,clock_timestamp(),nm_usuario_p);
				end if;
				
				nr_seq_acao_w := pls_obter_acao_intercambio(	'5',  -- Fechamento de discussao
								'15',  -- Gerar titulo a receber (NDR)
								nr_seq_fatura_w, null, null, null, clock_timestamp(), 'A550', ie_estorno_p, nr_seq_acao_w);		
								
				if (nr_seq_acao_w IS NOT NULL AND nr_seq_acao_w::text <> '') and (ie_tipo_arquivo_disc_w not in (9)) then
					CALL pls_gerar_tit_receber_discuss(nr_seq_lote_disc_p,nr_seq_acao_w,clock_timestamp(),nm_usuario_p);
				end if;
			end if;
			
			nr_seq_acao_w := pls_obter_acao_intercambio(	'5',  -- Fechamento de discussao
							'2',  -- Gerar titulo a pagar
							nr_seq_fatura_w, null, null, null, clock_timestamp(), 'A550', ie_estorno_p, nr_seq_acao_w);
							
			if (nr_seq_acao_w IS NOT NULL AND nr_seq_acao_w::text <> '') and (ie_tipo_arquivo_disc_w not in (9)) then	
				-- Gerar titulo a pagar
				CALL pls_gerar_tit_pagar_discussao(nr_seq_lote_disc_p,nr_seq_acao_w,nm_usuario_p,cd_estabelecimento_p);
			end if;
			
			nr_seq_acao_w := pls_obter_acao_intercambio(	'5',  -- Fechamento de discussao
							'19',  -- Encaminhar discussao para analise
							nr_seq_fatura_w, null, null, null, clock_timestamp(), 'A550', ie_estorno_p, nr_seq_acao_w);
							
			if (nr_seq_acao_w IS NOT NULL AND nr_seq_acao_w::text <> '') then
				-- Gerar o lote de analise da discussao 
				CALL pls_gerar_lote_analise_disc(nr_seq_lote_disc_p,nm_usuario_p);
				
				update	pls_lote_discussao
				set 	ie_status	= 'F'
				where	nr_sequencia 	= nr_seq_lote_disc_p;
			end if;
			
			if (ie_tipo_arquivo_disc_w not in (9)) then
				-- Gerar coparticipacao
				CALL pls_gerar_coparticipacao_disc( nr_seq_lote_disc_p, cd_estabelecimento_p, nm_usuario_p);
				
				-- Gerar pos-estabalecido
				CALL pls_gerar_pos_estab_disc( nr_seq_lote_disc_p, cd_estabelecimento_p, nm_usuario_p);
				--Gerar dados monitoramento
				CALL pls_grava_monit_disc( nr_seq_lote_disc_p, nm_usuario_p);
			end if;
		end if;
		
		-- Gerar A560
		CALL pls_gerar_nota_debito_a560( nr_seq_lote_disc_p, nr_seq_camara_contest_w, cd_estabelecimento_p, nm_usuario_p);
		
		-- Gerar eventos financeiros
		CALL pls_gerar_evento_contestacao(nr_seq_lote_disc_p,'N',cd_estabelecimento_p,nm_usuario_p);
	end if;

	if (ie_concil_contab_w = 'S') then
		CALL pls_ctb_onl_gravar_movto_pck.gravar_movto_fechar_disc(nr_seq_lote_disc_p, cd_estabelecimento_p, nm_usuario_p);
	end if;
end if;

-- Estorno das acoes que podem ocorrer durante o fechamento da discussao
if (coalesce(ie_estorno_p,'N') = 'S') then
	if (ie_concil_contab_w = 'S') then
		CALL pls_ctb_onl_gravar_movto_pck.gravar_movto_desf_fech_disc(nr_seq_lote_disc_p, cd_estabelecimento_p, nm_usuario_p);
	end if;

	select	max(nr_seq_lote_contest),
		max(nr_seq_lote_conta)
	into STRICT	nr_seq_lote_contest_w,
		nr_seq_lote_conta_w
	from	pls_lote_discussao
	where	nr_sequencia = nr_seq_lote_disc_p;
	
	if (coalesce(nr_seq_lote_conta_w::text, '') = '') then
		ie_status_w := 'A';
	else
		ie_status_w := 'AN';
	end if;

	update	pls_lote_discussao
	set 	dt_atualizacao	= clock_timestamp(),
		nm_usuario	= nm_usuario_p,
		dt_fechamento	 = NULL,
		ie_status	= ie_status_w
	where	nr_sequencia 	= nr_seq_lote_disc_p;

	-- Gerar LOG
	pls_gerar_contest_log(	nr_seq_lote_contest_w, nr_seq_lote_disc_p, null, null, null, null, 'DFLD', 'N', nm_usuario_p);
	
	-- Gerar titulo a receber - pagar
	select	max(nr_titulo_receber),
		max(nr_titulo_receber_ndr),
		max(nr_titulo_pagar),
		max(nr_titulo_pagar_ndr)
	into STRICT	nr_titulo_rec_w,
		nr_titulo_receber_ndr_w,
		nr_titulo_pag_w,
		nr_titulo_pagar_ndr_w
	from	pls_lote_discussao
	where	nr_sequencia	= nr_seq_lote_disc_p;
	
	if (nr_titulo_rec_w IS NOT NULL AND nr_titulo_rec_w::text <> '') then
		CALL cancelar_titulo_receber(nr_titulo_rec_w,nm_usuario_p,'N',clock_timestamp());
		
		update	pls_lote_discussao
		set	nr_titulo_receber	 = NULL
		where	nr_sequencia		= nr_seq_lote_disc_p;
		
		update	ptu_nota_debito
		set	ie_cancelamento = 'S'
		where	nr_sequencia	=	(SELECT	max(a.nr_seq_nota_debito)
						from	ptu_nota_deb_conclusao 	a,
							titulo_receber 		b
						where	a.nr_sequencia		= b.nr_seq_nota_deb_conclusao
						and	b.nr_titulo		= nr_titulo_rec_w);
	end if;
	
	if (nr_titulo_receber_ndr_w IS NOT NULL AND nr_titulo_receber_ndr_w::text <> '') then
		CALL cancelar_titulo_receber(nr_titulo_receber_ndr_w,nm_usuario_p,'N',clock_timestamp());
		
		update	pls_lote_discussao
		set	nr_titulo_receber_ndr	 = NULL
		where	nr_sequencia		= nr_seq_lote_disc_p;
		
		update	ptu_nota_debito
		set	ie_cancelamento = 'S'
		where	nr_sequencia	=	(SELECT	max(a.nr_seq_nota_debito)
						from	ptu_nota_deb_conclusao 	a,
							titulo_receber 		b
						where	a.nr_sequencia		= b.nr_seq_nota_deb_conclusao
						and	b.nr_titulo		= nr_titulo_receber_ndr_w);
	end if;
	
	if (nr_titulo_pag_w IS NOT NULL AND nr_titulo_pag_w::text <> '') then
		CALL cancelar_titulo_pagar(nr_titulo_pag_w,nm_usuario_p,clock_timestamp());
	
		update	pls_lote_discussao
		set	nr_titulo_pagar		 = NULL,
			nr_nota_credito_debito	 = NULL
		where	nr_sequencia		= nr_seq_lote_disc_p;
	end if;
	
	if (nr_titulo_pagar_ndr_w IS NOT NULL AND nr_titulo_pagar_ndr_w::text <> '') then
		CALL cancelar_titulo_pagar(nr_titulo_pagar_ndr_w,nm_usuario_p,clock_timestamp());
	
		update	pls_lote_discussao
		set	nr_titulo_pagar_ndr		 = NULL,
			nr_nota_credito_debito_ndr	 = NULL
		where	nr_sequencia			= nr_seq_lote_disc_p;
	end if;
	
	-- Baixar valor glosado no titulo
	select	max(b.nr_seq_ptu_fatura)
	into STRICT	nr_seq_fatura_w
	from	pls_lote_contestacao	b,
		pls_lote_discussao 	a
	where	b.nr_sequencia	= a.nr_seq_lote_contest
	and	a.nr_sequencia	= nr_seq_lote_disc_p;
	
	nr_seq_acao_w := pls_obter_acao_intercambio(	'5',  -- Fechamento de discussao
					'7',  -- Baixar valor glosado no titulo
					nr_seq_fatura_w, null, null, null, clock_timestamp(), 'A550', ie_estorno_p, nr_seq_acao_w);	
		
	if (nr_seq_acao_w IS NOT NULL AND nr_seq_acao_w::text <> '') then
		CALL pls_baixar_glosas_discuss_pag(nr_seq_lote_disc_p,nr_seq_acao_w,'S',nm_usuario_p,cd_estabelecimento_p);
	end if;
	
	-- Desfazer os eventos
	select	count(1)
	into STRICT	qt_reg_eve_w
	from	pls_lote_evento		b,
		pls_evento_movimento	a
	where	b.nr_sequencia		= a.nr_seq_lote
	and	a.nr_seq_lote_disc	= nr_seq_lote_disc_p
	and	(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '')
	and	coalesce(a.ie_cancelamento::text, '') = ''  LIMIT 1;
	
	if (qt_reg_eve_w > 0) then
		select	max(b.nr_sequencia)
		into STRICT	nr_seq_lote_evento_w
		from	pls_lote_evento		b,
			pls_evento_movimento	a
		where	b.nr_sequencia		= a.nr_seq_lote
		and	a.nr_seq_lote_disc	= nr_seq_lote_disc_p
		and	(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '');
		
		CALL wheb_mensagem_pck.exibir_mensagem_abort(196092,'NR_SEQ_LOTE_EVENTO=' || nr_seq_lote_evento_w);
	else
		delete	FROM pls_evento_movimento
		where	nr_seq_lote_disc = nr_seq_lote_disc_p;
	end if;
	
	CALL pls_delete_monit_disc(nr_seq_lote_disc_p, nm_usuario_p);
	-- Desfazer analise da discussao
	if (nr_seq_lote_conta_w IS NOT NULL AND nr_seq_lote_conta_w::text <> '') then
		CALL pls_desfazer_analise_discussao(nr_seq_lote_conta_w, 'N', nm_usuario_p);
	end if;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_fechar_discussao_recebida (nr_seq_lote_disc_p bigint, ie_estorno_p text, nm_usuario_p text, ie_atualizar_vl_contest_p text, cd_estabelecimento_p text) FROM PUBLIC;

