-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE fis_gerar_lote_ecf_l210 ( data_referencia_p timestamp, cd_estabelecimento_p text, cd_empresa_p bigint, nm_usuario_p text, nr_seq_lote_p bigint default null) AS $body$
DECLARE

			
dt_mes_w 			timestamp;
dt_mes_ww 			timestamp;
dt_inc_mes_w			bigint;
nr_count_mes			bigint := 1;
ie_forma_apuracao_w		fis_regra_ecf_0020.ie_forma_apuracao%type;	
nr_sequencia_w 			fis_lote_ecf_210.nr_sequencia%type;
ie_forma_estimativa_w		fis_estrutura_calculo.ie_forma_apuracao%type;

C01 CURSOR FOR
	SELECT	dt_mes
	from	mes_v
	where 	dt_mes between data_referencia_p and add_months((data_referencia_p -1), dt_inc_mes_w)
	order by 1;
	
	
C02 CURSOR FOR
	SELECT	cd_registro,
		ds_registro, 
		ie_titulo_analitico
	from	fis_tabela_ecf_210;
vet02	c02%RowType;	


BEGIN

select  max(ie_forma_apuracao)
into STRICT	ie_forma_apuracao_w
from	fis_regra_ecf_0020
where	cd_estabelecimento = cd_estabelecimento_p
and	cd_empresa = cd_empresa_p
and nr_seq_lote = nr_seq_lote_p;		

select 	max(a.ie_forma_apuracao)
into STRICT	ie_forma_estimativa_w
from	fis_estrutura_calculo 	a,
	fis_lote_apuracao 		b
where	a.nr_sequencia 		= b.nr_seq_estrutura
and 	b.dt_mes_apuracao		between data_referencia_p and add_months(data_referencia_p, 3)
and 	a.ie_lalur_lacs		= 'LC'
and 	b.ie_lote_anual 		= 'N'
and	b.cd_empresa 		= cd_empresa_p
order by 	b.dt_mes_apuracao;

if (ie_forma_estimativa_w = 'B' AND ie_forma_apuracao_w = 'A') or (ie_forma_apuracao_w = 'T') then

	if ie_forma_apuracao_w = 'A' then
		dt_inc_mes_w := 12;
	else	
		dt_inc_mes_w := 4;
	end if;	
		
	open c01;
	loop
	fetch c01 into	
		dt_mes_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin	
		
		select	nextval('fis_lote_ecf_210_seq')
		into STRICT	nr_sequencia_w
		;
		
		if ie_forma_apuracao_w = 'A' then		
			dt_mes_ww := dt_mes_w;				
		else			
			dt_mes_ww := add_months(dt_mes_w, (nr_count_mes * 2));
		end if;	
		
		
		
		insert into fis_lote_ecf_210( nr_sequencia,
			dt_atualizacao,
			nm_usuario,				
			dt_atualizacao_nrec,
			nm_usuario_nrec,				
			ds_lote,
			dt_referencia,
			cd_empresa,
			nr_seq_lote)
		values (	nr_sequencia_w,
			clock_timestamp(),
			nm_usuario_p,				
			clock_timestamp(),
			nm_usuario_p,				
			'Lote: ' || dt_mes_ww,
			dt_mes_ww,
			obter_empresa_estab(cd_estabelecimento_p),
			nr_seq_lote_p);	
			
		nr_count_mes := nr_count_mes + 1;				
		
		open c02;
		loop
		fetch c02 into	
			vet02;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			begin	
			
			insert into fis_reg_tabela_ecf_210( nr_sequencia,
				dt_atualizacao,
				nm_usuario,				
				dt_atualizacao_nrec,
				nm_usuario_nrec,				
				nr_seq_lote,
				cd_registro,
				ds_registro,
				ie_titulo_analitico,
				vl_custo)
			values (	nextval('fis_lote_ecf_210_seq'),
				clock_timestamp(),
				nm_usuario_p,				
				clock_timestamp(),
				nm_usuario_p,				
				nr_sequencia_w,
				vet02.cd_registro,
				vet02.ds_registro,
				vet02.ie_titulo_analitico,
				0);			
			end;
		end loop;
		close c02;
			
		end;
	end loop;
	close c01;
	
end if;	

if (ie_forma_apuracao_w = 'A') then		
	dt_mes_ww := trunc(fim_ano(data_referencia_p));
	
	select	nextval('fis_lote_ecf_210_seq')
	into STRICT	nr_sequencia_w
	;	



	insert into fis_lote_ecf_210( nr_sequencia,
		dt_atualizacao,
		nm_usuario,				
		dt_atualizacao_nrec,
		nm_usuario_nrec,				
		ds_lote,
		dt_referencia,
		cd_empresa,
		nr_seq_lote)
	values (	nr_sequencia_w,
		clock_timestamp(),
		nm_usuario_p,				
		clock_timestamp(),
		nm_usuario_p,				
		'Lote anual ' || to_char(dt_mes_ww, 'yyyy'),
		dt_mes_ww,
		obter_empresa_estab(cd_estabelecimento_p),
		nr_seq_lote_p);	
		
	open c02;
	loop
	fetch c02 into	
		vet02;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin	
		
		insert into fis_reg_tabela_ecf_210( nr_sequencia,
			dt_atualizacao,
			nm_usuario,				
			dt_atualizacao_nrec,
			nm_usuario_nrec,				
			nr_seq_lote,
			cd_registro,
			ds_registro,
			ie_titulo_analitico,
			vl_custo)
		values (	nextval('fis_lote_ecf_210_seq'),
			clock_timestamp(),
			nm_usuario_p,				
			clock_timestamp(),
			nm_usuario_p,				
			nr_sequencia_w,
			vet02.cd_registro,
			vet02.ds_registro,
			vet02.ie_titulo_analitico,
			0);			
		end;
	end loop;
	close c02;		
end if;	
	
commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE fis_gerar_lote_ecf_l210 ( data_referencia_p timestamp, cd_estabelecimento_p text, cd_empresa_p bigint, nm_usuario_p text, nr_seq_lote_p bigint default null) FROM PUBLIC;

