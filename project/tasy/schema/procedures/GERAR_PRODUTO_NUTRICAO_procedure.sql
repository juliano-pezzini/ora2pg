-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_produto_nutricao ( nr_prescricao_p bigint, nr_seq_dieta_p bigint, ds_lista_produto_p text, nm_usuario_p text, qt_dose_p bigint, qt_vel_infusao_p bigint, qt_hora_aplicacao_p bigint, nr_seq_produto_p bigint, cd_intervalo_p text default null, cd_unidade_medida_p text DEFAULT NULL, ie_via_adm_p text DEFAULT NULL, ds_observacao_p text DEFAULT NULL, qt_min_aplicacao_p bigint default null, cd_prod_sabor_p bigint default null) AS $body$
DECLARE


ds_lista_produto_w		varchar(1000);
tam_lista_w				bigint;
ie_pos_virgula_w		smallint;
nr_seq_produto_w		bigint;
qt_conversao_w			double precision;
ie_tipo_nutricao_w		varchar(15);
cd_material_w			integer;
cd_unidade_medida_w		varchar(30);
qt_dose_w				double precision;
qt_dose_aux_w			double precision;
qt_dose_aux_ww			double precision;
ie_via_aplicacao_w		varchar(5);
cd_intervalo_w			varchar(7);
nr_seq_material_w		integer;
cd_estabelecimento_w	smallint;
dt_prescricao_w			timestamp;
dt_inicio_prescr_w		timestamp;
nr_horas_validade_w		integer;
cd_setor_atendimento_w	integer;
cd_unidade_consumo_w	varchar(30);
ie_kit_prescr_w			varchar(10);
ds_horarios_w			varchar(2000);
ds_horarios_ww			varchar(2000);
nr_agrupamento_w		double precision;
nr_intervalo_w			bigint;
qt_conversao_dose_w		double precision;
qt_unitaria_w			double precision;
qt_produto_w			double precision;
qt_total_dispensar_w	double precision;
ds_erro_w				varchar(255);
ie_bomba_infusao_w		varchar(5);
hr_prim_horario_w		varchar(5);
ie_regra_disp_w			varchar(1);/* Rafael em 15/3/8 OS86206 */
ie_hora_supl_w			varchar(255);
ie_hora_sne_w			varchar(255);
cd_pessoa_fisica_w		varchar(255);
ie_prescr_mat_sem_lib_w	varchar(30);
ie_acm_w				varchar(1);
qt_vel_infusao_w		double precision;
qt_hora_aplicacao_w		smallint := null;
qt_min_aplicacao_w		smallint := null;
ie_calcular_dose_w		varchar(1);
ie_calcular_horas_sne_w	varchar(1);

nr_atendimento_w		bigint;
ie_se_necessario_w		varchar(1);
ie_consignado_w			varchar(1);
cd_fornec_consignado_w		varchar(14);
qt_saldo_fornec_consig_w 	double precision;
ie_intervalo_dieta_w		varchar(1);
cd_perfil_w		integer	:= obter_perfil_ativo;
ie_calc_velocidade_w	varchar(1);
ie_param296_w		varchar(1);
ie_param195_w		varchar(1);
ie_existe_dil_w		varchar(1);
nr_erro_w		integer;
ds_observacao_w		prescr_material.ds_observacao%type;
ds_orientacao_w		nutricao_produto.ds_orientacao%type;
qt_min_intervalo_w	intervalo_prescricao.qt_min_intervalo%type;
ie_agora_w		varchar(1);
ie_check_tipo_interv_w	varchar(1);
cd_intervalo_ww		prescr_material.cd_intervalo%type;
qt_solucao_w				double precision;
ie_calc_automatico_w 		varchar(1);
cd_prod_sabor_w				integer;
ie_gerar_orientacao_w		nutricao_produto.ie_gerar_orientacao%type;
hr_prim_horario_prescr_w	varchar(5);


BEGIN

if (cd_prod_sabor_p = 0) then
	cd_prod_sabor_w := null;
else
	cd_prod_sabor_w := cd_prod_sabor_p;
end if;

if (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') then
	
	/* obter dados prescricao */

	select	max(cd_estabelecimento),
		max(dt_prescricao),
		max(dt_inicio_prescr),
		coalesce(max(nr_horas_validade),24),
		max(cd_setor_atendimento),
		max(cd_pessoa_fisica),
		max(nr_atendimento)
	into STRICT	cd_estabelecimento_w,
		dt_prescricao_w,
		dt_inicio_prescr_w,
		nr_horas_validade_w,
		cd_setor_atendimento_w,
		cd_pessoa_fisica_w,
		nr_atendimento_w
	from	prescr_medica
	where	nr_prescricao = nr_prescricao_p;

	ie_param195_w := Obter_Param_Usuario(924, 195, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_param195_w);
	ie_param296_w := Obter_Param_Usuario(924, 296, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_param296_w);
	ie_calcular_horas_sne_w := Obter_Param_Usuario(924, 806, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_calcular_horas_sne_w);
	ie_hora_sne_w := Obter_Param_Usuario(924, 146, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_hora_sne_w);
	ie_hora_supl_w := Obter_Param_Usuario(924, 205, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_hora_supl_w);
	ie_calc_velocidade_w := Obter_Param_Usuario(924, 289, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_calc_velocidade_w);			
	ie_prescr_mat_sem_lib_w := Obter_Param_Usuario(924, 530, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_prescr_mat_sem_lib_w);
	ie_calcular_dose_w := Obter_Param_Usuario(924, 297, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_calcular_dose_w);
	ie_check_tipo_interv_w := Obter_Param_Usuario(924, 809, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_check_tipo_interv_w);
	
end if;


if (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') and (ds_lista_produto_p IS NOT NULL AND ds_lista_produto_p::text <> '') and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') then
	ds_lista_produto_w := ds_lista_produto_p;
	
	/* obter produtos gerar */

	while(ds_lista_produto_w IS NOT NULL AND ds_lista_produto_w::text <> '') loop
		begin
		tam_lista_w		:= length(ds_lista_produto_w);
		ie_pos_virgula_w	:= position(',' in ds_lista_produto_w);

		if (ie_pos_virgula_w <> 0) then
			nr_seq_produto_w	:= (substr(ds_lista_produto_w,1,(ie_pos_virgula_w - 1)))::numeric;
			ds_lista_produto_w	:= substr(ds_lista_produto_w,(ie_pos_virgula_w + 1),tam_lista_w);

			if (nr_seq_produto_w > 0) then
				/* obter dados produto */

				select	max(ie_tipo_nutricao),
					coalesce(cd_prod_sabor_w, max(cd_material)),
					coalesce(CASE WHEN qt_dose_p=0 THEN null  ELSE qt_dose_p END ,max(qt_dose)),
					coalesce(cd_unidade_medida_p,max(cd_unidade_medida)),
					coalesce(cd_intervalo_p,max(cd_intervalo)),
					coalesce(ie_via_adm_p, max(ie_via_aplicacao)),
					max(ie_bomba_infusao),
					coalesce(max(ie_acm),'N'),
					max(ds_horarios),
					max(ie_kit_prescr),
					max(ds_orientacao),
					max(ie_calc_automatico),
					max(ie_gerar_orientacao)
				into STRICT	ie_tipo_nutricao_w,
					cd_material_w,
					qt_dose_w,
					cd_unidade_medida_w,
					cd_intervalo_w,
					ie_via_aplicacao_w,
					ie_bomba_infusao_w,
					ie_acm_w,
					ds_horarios_w,
					ie_kit_prescr_w,
					ds_orientacao_w,
					ie_calc_automatico_w,
					ie_gerar_orientacao_w
				from	nutricao_produto
				where	nr_sequencia = nr_seq_produto_w;

				ie_se_necessario_w	:= 'N';
				
				/* gerar produto */

				select	coalesce(max(nr_sequencia),0)+1
				into STRICT	nr_seq_material_w
				from	prescr_material
				where	nr_prescricao = nr_prescricao_p;
				
				select	coalesce(max(nr_agrupamento),0)
				into STRICT	nr_agrupamento_w
				from	prescr_material
				where	nr_prescricao	= nr_prescricao_p
				and	ie_agrupador	= CASE WHEN ie_tipo_nutricao_w='SMP' THEN 12 WHEN ie_tipo_nutricao_w='O' THEN 6  ELSE 8 END;
								
				if	((ie_tipo_nutricao_w = 'O') and (coalesce(nr_seq_dieta_p,0) > 0)) or (ie_tipo_nutricao_w in ('SMP','SNE'))  then
					
					/* obter primeiro horario */

					hr_prim_horario_w	:= obter_primeiro_horario(cd_intervalo_w, nr_prescricao_p,cd_material_w,ie_via_aplicacao_w);
					
					if (ie_tipo_nutricao_w = 'SNE') then
						cd_intervalo_w	:= coalesce(Obter_Padrao_Param_Prescr(nr_atendimento_w,cd_material_w, ie_via_aplicacao_w, cd_setor_atendimento_w, cd_pessoa_fisica_w, null, null, 'N','I',cd_intervalo_w),cd_intervalo_w);
						hr_prim_horario_w	:= coalesce(Obter_Padrao_Param_Prescr(nr_atendimento_w,cd_material_w, ie_via_aplicacao_w, cd_setor_atendimento_w, cd_pessoa_fisica_w, null, null, 'N','H',cd_intervalo_w),hr_prim_horario_w);
						qt_dose_w			:= coalesce(Obter_Padrao_Param_Prescr(nr_atendimento_w,cd_material_w, ie_via_aplicacao_w, cd_setor_atendimento_w, cd_pessoa_fisica_w, null, null, 'N','D',cd_intervalo_w),qt_dose_w);
					end if;
					
					--Verificar se o intervalo e ACM , SN ou AGORA
					ie_agora_w		:= 'N';
					ie_se_necessario_w	:= 'N';
					
					if (ie_check_tipo_interv_w = 'S') and (ie_acm_w = 'N') and (cd_intervalo_w IS NOT NULL AND cd_intervalo_w::text <> '') then				
					
						Select	coalesce(max(ie_agora),'N'),
								coalesce(max(ie_acm),'N'),
								coalesce(max(ie_se_necessario),'N')
						into STRICT	ie_agora_w,
								ie_acm_w,
								ie_se_necessario_w
						from	intervalo_prescricao
						where	cd_intervalo = cd_intervalo_w;

					end if;
					
					if (ie_agora_w = 'S') then
						hr_prim_horario_w	:= to_char(clock_timestamp(), 'hh24:mi');		
						ds_horarios_w		:= hr_prim_horario_w;
					elsif (ie_acm_w = 'S') then
						ds_horarios_w		:= 'ACM';
						hr_prim_horario_w	:= '';
					elsif (ie_se_necessario_w = 'S') then
						ds_horarios_w		:= 'SN';		
						hr_prim_horario_w	:= '';						
					end if;
					
					if (ie_tipo_nutricao_w = 'SNE') then
					
						select	max(cd_intervalo)
						into STRICT	cd_intervalo_w
						from    intervalo_prescricao
						where   ie_situacao = 'A'  
						and     ((coalesce(cd_estabelecimento::text, '') = '') or (cd_estabelecimento = cd_estabelecimento_w))  					
						and     Obter_se_intervalo_estab(cd_intervalo, cd_estabelecimento_w) = 'S'  					 
						and     Obter_se_intervalo(cd_intervalo, '8') = 'S'  
						and		cd_intervalo = cd_intervalo_w;
					
					elsif (ie_tipo_nutricao_w = 'O') then	
					
						select 	max(cd_intervalo)	
						into STRICT	cd_intervalo_w	
						from 	intervalo_prescricao
						where 	ie_situacao = 'A'
						and 	((coalesce(cd_estabelecimento::text, '') = '') or (cd_estabelecimento = cd_estabelecimento_w))
						and     Obter_se_intervalo_estab(cd_intervalo, cd_estabelecimento_w) = 'S'
						and 	Obter_se_intervalo(cd_intervalo, '13') = 'S'					
						and		cd_intervalo = cd_intervalo_w;
						
					else
					
						select 	max(cd_intervalo)
						into STRICT	cd_intervalo_w
						from 	intervalo_prescricao
						where 	ie_situacao = 'A'
						and     ((coalesce(cd_estabelecimento::text, '') = '') or (cd_estabelecimento = cd_estabelecimento_w))  
						and 	Obter_se_intervalo(cd_intervalo,'12') = 'S'
						and     Obter_se_intervalo_estab(cd_intervalo, cd_estabelecimento_w) = 'S'
						and		cd_intervalo = cd_intervalo_w;
					
					end if;
					
					/* obter unidade consumo material */

					select	substr(obter_dados_material_estab(cd_material,cd_estabelecimento_w,'UMS'),1,30) cd_unidade_medida_consumo
					into STRICT	cd_unidade_consumo_w
					from	material
					where	cd_material = cd_material_w;

					if (ds_horarios_w IS NOT NULL AND ds_horarios_w::text <> '') then
						/* calcular ocorrencias apartir dos horarios */

						nr_intervalo_w	:= obter_ocorrencias_horarios_rep(ds_horarios_w);
					else
						nr_intervalo_w	:= 0;
					
						/* calcular horarios */

						SELECT * FROM calcular_horario_prescricao(nr_prescricao_p, cd_intervalo_w, dt_inicio_prescr_w, to_date(to_char(dt_inicio_prescr_w,'dd/mm/yyyy') || ' ' || hr_prim_horario_w,'dd/mm/yyyy hh24:mi'), nr_horas_validade_w, cd_material_w, 0, 0, nr_intervalo_w, ds_horarios_w, ds_horarios_ww, 'N', null) INTO STRICT nr_intervalo_w, ds_horarios_w, ds_horarios_ww;
						ds_horarios_w := ds_horarios_w || ds_horarios_ww;
					end if;
					
					/* obter conversao dose */

					qt_conversao_dose_w	:= obter_conversao_unid_med(cd_material_w, cd_unidade_medida_w);
					
					/* atualizar agrupamento */

					nr_agrupamento_w := nr_agrupamento_w + 1;
					
					if (ie_tipo_nutricao_w = 'SMP') and (ie_hora_supl_w = 'N') then
						ds_horarios_w		:= '';
						hr_prim_horario_w	:= '';
					elsif (ie_tipo_nutricao_w = 'SNE') and (ie_hora_sne_w = 'S') then
						ds_horarios_w		:= '';
						hr_prim_horario_w	:= '';
					end if;
					
					select	coalesce(max(ie_consignado),0)
					into STRICT	ie_consignado_w
					from	material
					where	cd_material = cd_material_w;
					
					if (ie_consignado_w = '1') then						
						select	max(a.cd_fornecedor),
			  					max(obter_saldo_estoque_consig(cd_estabelecimento_w,a.cd_fornecedor, a.cd_material, a.cd_local_estoque))
						into STRICT	cd_fornec_consignado_w,
								qt_saldo_fornec_consig_w
						from	pessoa_juridica b,
								fornecedor_mat_consignado a,
								material m
						where	a.cd_fornecedor = b.cd_cgc
						and		a.cd_material   = m.cd_material_estoque
						and		m.cd_material   = cd_material_w
						and		b.ie_situacao = 'A'
						order by 2 desc;
					end if;
					
					if	((ie_tipo_nutricao_w	= 'SMP') or (ie_tipo_nutricao_w	= 'SNE')) and (ds_orientacao_w IS NOT NULL AND ds_orientacao_w::text <> '') and (coalesce(ds_observacao_p::text, '') = '') and (coalesce(ie_gerar_orientacao_w,'N') = 'S') then
						ds_observacao_w	:= ds_orientacao_w;
					else
						ds_observacao_w	:= ds_observacao_p;
					end if;

					if (coalesce(qt_hora_aplicacao_p, 0) > 0) then
						qt_hora_aplicacao_w := qt_hora_aplicacao_p;
					end if;
					
					if (coalesce(qt_min_aplicacao_p, 0) > 0) then
						qt_min_aplicacao_w	:= qt_min_aplicacao_p;						
					end if;
					
					if (qt_vel_infusao_p > 0) then
						qt_vel_infusao_w := qt_vel_infusao_p;
					end if;					

					if	(((coalesce(qt_hora_aplicacao_w::text, '') = '') and (coalesce(qt_min_aplicacao_w::text, '') = '')) and (ie_calcular_horas_sne_w = 'S') and (cd_intervalo_w IS NOT NULL AND cd_intervalo_w::text <> '')) then
						qt_hora_aplicacao_w := obter_ocorrencia_interv_dieta(cd_intervalo_w, nr_horas_validade_w, 'O');
					end if;					
					
					/*calcular dose com base na velocidade e horas de infusao*/
		
					if (ie_tipo_nutricao_w = 'SNE') and (ie_calcular_dose_w <> 'N') and
						((ie_calcular_dose_w = 'T') or (coalesce(qt_dose_w,0) = 0)) then

						if (qt_vel_infusao_w > 0) and
							((qt_hora_aplicacao_w > 0) or (coalesce(qt_min_aplicacao_w, 0) > 0)) then

							qt_dose_aux_w := qt_vel_infusao_w * (coalesce(qt_hora_aplicacao_w,0) + (coalesce(qt_min_aplicacao_w,0) / 60));
							qt_dose_aux_ww := Obter_conversao_ml_sne(cd_material_w, qt_dose_aux_w, cd_unidade_medida_w);
							qt_dose_w :=  coalesce(qt_dose_aux_ww,qt_dose_w);

						end if;
					end if;
					
					/*obter qt_solucao*/

					if (upper(cd_unidade_medida_w) = upper(obter_unid_med_usua('ml'))) then
						qt_solucao_w := qt_dose_w;
					else
						qt_solucao_w := obter_conversao_ml(cd_material_w, qt_dose_w, cd_unidade_medida_w);
					end if;	
					
					if (coalesce(qt_vel_infusao_w,0) = 0) and (coalesce(qt_dose_w,0) > 0) and
						((coalesce(qt_hora_aplicacao_w,0) > 0) or (coalesce(qt_min_aplicacao_w, 0) > 0)) and (ie_calc_velocidade_w	= 'S') and (ie_calc_automatico_w = 'S') then
						qt_vel_infusao_w	:= round(dividir(qt_dose_w,coalesce(qt_hora_aplicacao_w,0) + (coalesce(qt_min_aplicacao_w,0) / 60)));
				    elsif (coalesce(qt_vel_infusao_w,0) = 0) and (coalesce(qt_solucao_w,0) > 0) and
						((coalesce(qt_hora_aplicacao_w,0) > 0) or (coalesce(qt_min_aplicacao_w, 0) > 0)) and (ie_calc_velocidade_w	= 'N') and (ie_calc_automatico_w = 'S') then
						qt_vel_infusao_w	:= round(dividir(qt_solucao_w,coalesce(qt_hora_aplicacao_w,0) + (coalesce(qt_min_aplicacao_w,0) / 60)));
				    end if;	
					
					/* obter quantidade consumo */

					select	coalesce(max(qt_conversao),0)
					into STRICT	qt_conversao_w
					from	unidade_medida_dose_v
					where	cd_material = cd_material_w
					and	cd_unidade_medida = cd_unidade_medida_w;

					if (qt_conversao_w = 0) then
						qt_unitaria_w := 0;
					else
						qt_unitaria_w := qt_dose_w / qt_conversao_w;
					end if;

					/* obter quantidade dispensar */

					SELECT * FROM obter_quant_dispensar(cd_estabelecimento_w, cd_material_w, nr_prescricao_p, 0, cd_intervalo_w, ie_via_aplicacao_w, qt_unitaria_w, 0, nr_intervalo_w, null, null, cd_unidade_medida_w, null, qt_produto_w, qt_total_dispensar_w, ie_regra_disp_w, ds_erro_w, ie_se_necessario_w, ie_acm_w) INTO STRICT qt_produto_w, qt_total_dispensar_w, ie_regra_disp_w, ds_erro_w;					

					/* inserir produto */

					insert into prescr_material(
						nr_prescricao,
						nr_sequencia,
						ie_origem_inf,
						cd_material,
						cd_unidade_medida,
						qt_dose,
						qt_unitaria,
						qt_material,
						dt_atualizacao,
						nm_usuario,
						cd_intervalo,
						ds_horarios,
						ds_observacao,
						ie_via_aplicacao,
						nr_agrupamento,
						cd_motivo_baixa,
						dt_baixa,
						ie_utiliza_kit,
						cd_unidade_medida_dose,
						qt_conversao_dose,
						ie_urgencia,
						nr_ocorrencia,
						qt_total_dispensar,
						cd_fornec_consignado,
						nr_sequencia_solucao,
						nr_sequencia_proc,
						qt_solucao,
						hr_dose_especial,
						qt_dose_especial,
						ds_dose_diferenciada,
						ie_medicacao_paciente,
						nr_sequencia_diluicao,
						hr_prim_horario,
						nr_dia_util,
						nr_sequencia_dieta,
						ie_agrupador,
						dt_emissao_setor_atend,
						ie_suspenso,
						ds_justificativa,
						qt_dias_solicitado,
						qt_dias_liberado,
						nm_usuario_liberacao,
						dt_liberacao,
						ie_se_necessario,
						qt_min_aplicacao,
						nr_seq_lote_fornec,
						ie_status_cirurgia,
						ie_bomba_infusao,
						ie_aplic_bolus,
						ie_aplic_lenta,
						ie_acm,
						cd_material_baixa,
						nr_seq_avaliacao,
						nr_seq_ordem_prod,
						qt_baixa_especial,
						ie_objetivo,
						qt_hora_aplicacao,
						ie_erro,
						cd_topografia_cih,
						ie_origem_infeccao,
						cd_amostra_cih,
						cd_microorganismo_cih,
						ie_cultura_cih,
						ie_antibiograma,
						ie_uso_antimicrobiano,
						cd_kit_material,
						cd_local_estoque,
						nr_seq_kit,
						dt_suspensao,
						nm_usuario_susp,
						qt_vel_infusao,
						cd_protocolo,
						nr_seq_protocolo,
						nr_seq_mat_protocolo,
						dt_alteracao_local,
						nm_usuario_alt_local,
						ie_recons_diluente_fixo,
						qt_dias_util,
						dt_fim_item,
						nr_seq_atend_medic,
						nr_seq_kit_estoque,
						cd_convenio,
						cd_categoria,
						ie_sem_aprazamento,
						ie_novo_ciclo_ccih,
						nr_receita,
						dt_status,
						ie_status,
						qt_volume_adep,
						ie_supera_limite_uso,
						ie_cobra_paciente,
						ie_forma_infusao,
						ie_indicacao,
						ie_regra_disp,
						nr_seq_produto,
						ie_calc_automatico)
					values (
						nr_prescricao_p,
						nr_seq_material_w,
						'N',
						cd_material_w,
						cd_unidade_consumo_w,
						qt_dose_w,
						coalesce(qt_unitaria_w,1),
						coalesce(qt_produto_w,1),
						clock_timestamp(),
						nm_usuario_p,
						cd_intervalo_w,
						ds_horarios_w,
						ds_observacao_w,
						ie_via_aplicacao_w,
						nr_agrupamento_w,
						0,
						null,
						'N',
						cd_unidade_medida_w,
						qt_conversao_dose_w,
						ie_agora_w,
						nr_intervalo_w,
						qt_total_dispensar_w,
						cd_fornec_consignado_w,
						null,
						null,
						qt_solucao_w,
						null,
						null,
						null,
						'N',
						null,
						hr_prim_horario_w,
						null,
						CASE WHEN ie_tipo_nutricao_w='O' THEN nr_seq_dieta_p  ELSE null END ,
						CASE WHEN ie_tipo_nutricao_w='SMP' THEN 12 WHEN ie_tipo_nutricao_w='O' THEN 6  ELSE 8 END ,
						null,
						'N',
						null,
						null,
						null,
						null,
						null,
						ie_se_necessario_w,						
						qt_min_aplicacao_w,
						null,
						null,
						ie_bomba_infusao_w,
						'N',
						'N',
						ie_acm_w,
						null,
						null,
						null,
						null,
						null,
					    coalesce(qt_hora_aplicacao_w,null),
						null,
						null,
						null,
						null,
						null,
						'N',
						'N',
						'N',
						null,
						null,
						null,
						null,
						null,
						coalesce(qt_vel_infusao_w,null),
						null,
						null,
						null,
						null,
						null,
						'N',
						null,
						null,
						null,
						null,
						null,
						null,
						'N',
						null,
						null,
						clock_timestamp(),
						'P',
						null,
						null,
						null,
						null,
						null,
						ie_regra_disp_w,
						nr_seq_produto_w,
						ie_calc_automatico_w);

					nr_erro_w := Consistir_Prescr_Material(nr_prescricao_p, nr_seq_material_w, nm_usuario_p, cd_perfil_w, nr_erro_w);
						
					if (ie_param195_w = 'S') and (ie_param296_w = 'S') then
					
						select	coalesce(max('S'),'N')
						into STRICT	ie_existe_dil_w
						from 	material_diluicao 
						where 	cd_material = cd_material_w
						and	cd_estabelecimento = cd_estabelecimento_w;
						
						if (ie_existe_dil_w = 'S') then
							CALL Gerar_Reconst_Diluicao(nr_prescricao_p, nr_seq_material_w, 'A');
						end if;						
					
					end if;

					
					if (ie_kit_prescr_w	= 'S') then
						CALL gerar_kit_medic_prescricao(cd_estabelecimento_w, nr_prescricao_p,nr_seq_material_w, nm_usuario_p);
					end if;
						
					if (ie_prescr_mat_sem_lib_w = 'S') then
						CALL Gerar_prescr_mat_sem_dt_lib(nr_prescricao_p,nr_seq_material_w,cd_perfil_w,'N',nm_usuario_p,null);
					end if;
					
					if (ie_tipo_nutricao_w = 'SNE') then
						CALL gerar_elemento_mat_sne( nr_prescricao_p, nr_seq_material_w, 'G', nm_usuario_p);
					end if;
					
				end if;
			end if;
		end if;
		end;
	end loop;
		
elsif (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') and (coalesce(ds_lista_produto_p::text, '') = '') and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') and (nr_seq_produto_p > 0) then
					
		nr_seq_produto_w := nr_seq_produto_p;

		if (nr_seq_produto_w > 0) then
		
			/* obter dados produto */

			select	max(ie_tipo_nutricao),
				coalesce(cd_prod_sabor_w, max(cd_material)),
				coalesce(CASE WHEN qt_dose_p=0 THEN null  ELSE qt_dose_p END ,max(qt_dose)),
				coalesce(cd_unidade_medida_p,max(cd_unidade_medida)),
				coalesce(cd_intervalo_p, max(cd_intervalo)),
				coalesce(ie_via_adm_p,max(ie_via_aplicacao)),
				max(ie_bomba_infusao),
				coalesce(max(ie_acm),'N'),
				max(ds_horarios),
				max(ie_kit_prescr),
				max(ds_orientacao),
				max(ie_calc_automatico),
				max(ie_gerar_orientacao)
			into STRICT	ie_tipo_nutricao_w,
				cd_material_w,
				qt_dose_w,
				cd_unidade_medida_w,
				cd_intervalo_w,
				ie_via_aplicacao_w,
				ie_bomba_infusao_w,
				ie_acm_w,
				ds_horarios_w,
				ie_kit_prescr_w,
				ds_orientacao_w,
				ie_calc_automatico_w,
				ie_gerar_orientacao_w
			from	nutricao_produto
			where	nr_sequencia = nr_seq_produto_w;

			/* gerar produto */

			select	coalesce(max(nr_sequencia),0)+1
			into STRICT	nr_seq_material_w
			from	prescr_material
			where	nr_prescricao = nr_prescricao_p;		
			
			select	coalesce(max(nr_agrupamento),0)
			into STRICT	nr_agrupamento_w
			from	prescr_material
			where	nr_prescricao	= nr_prescricao_p
			and		ie_agrupador	= CASE WHEN ie_tipo_nutricao_w='SMP' THEN 12 WHEN ie_tipo_nutricao_w='O' THEN 6  ELSE 8 END;

			if	((ie_tipo_nutricao_w = 'O') and (coalesce(nr_seq_dieta_p,0) > 0)) or (ie_tipo_nutricao_w in ('SMP','SNE'))  then
				
				/* obter primeiro horario */

				hr_prim_horario_w	:= obter_primeiro_horario(cd_intervalo_w, nr_prescricao_p,cd_material_w, ie_via_aplicacao_w);								

				if (ie_tipo_nutricao_w = 'SNE') then
					cd_intervalo_w		:= coalesce(Obter_Padrao_Param_Prescr(nr_atendimento_w,cd_material_w, ie_via_aplicacao_w, cd_setor_atendimento_w, cd_pessoa_fisica_w, null, null, 'N','I',cd_intervalo_w),cd_intervalo_w);
					hr_prim_horario_w	:= coalesce(Obter_Padrao_Param_Prescr(nr_atendimento_w,cd_material_w, ie_via_aplicacao_w, cd_setor_atendimento_w, cd_pessoa_fisica_w, null, null, 'N','H',cd_intervalo_w),hr_prim_horario_w);
					qt_dose_w			:= coalesce(Obter_Padrao_Param_Prescr(nr_atendimento_w,cd_material_w, ie_via_aplicacao_w, cd_setor_atendimento_w, cd_pessoa_fisica_w, null, null, 'N','D',cd_intervalo_w),qt_dose_w);
				end if;
				
				--Verificar se o intervalo e ACM , SN ou AGORA
				ie_agora_w			:= 'N';
				ie_se_necessario_w	:= 'N';
				
				if (ie_check_tipo_interv_w = 'S') and (ie_acm_w = 'N') and (cd_intervalo_w IS NOT NULL AND cd_intervalo_w::text <> '') then				
					
					Select	coalesce(max(ie_agora),'N'),
							coalesce(max(ie_acm),'N'),
							coalesce(max(ie_se_necessario),'N')
					into STRICT	ie_agora_w,
							ie_acm_w,
							ie_se_necessario_w
					from	intervalo_prescricao
					where	cd_intervalo = cd_intervalo_w;
					
				end if;
				--Fim verificar intervalo
				
				if (ie_agora_w = 'S') then
					hr_prim_horario_w	:= to_char(clock_timestamp(), 'hh24:mi');		
					ds_horarios_w		:= hr_prim_horario_w;	
				elsif (ie_acm_w = 'S') then
					ds_horarios_w		:= 'ACM';
					hr_prim_horario_w	:= '';
				elsif (ie_se_necessario_w = 'S') then
					ds_horarios_w		:= 'SN';					
					hr_prim_horario_w	:= '';
				end if;
					
				if (ie_tipo_nutricao_w = 'SNE') then
					
					select	max(cd_intervalo)
					into STRICT	cd_intervalo_w
					from    intervalo_prescricao
					where   ie_situacao = 'A'  
					and     ((coalesce(cd_estabelecimento::text, '') = '') or (cd_estabelecimento = cd_estabelecimento_w))  					
					and     Obter_se_intervalo_estab(cd_intervalo, cd_estabelecimento_w) = 'S'  					 
					and     Obter_se_intervalo(cd_intervalo, '8') = 'S'  
					and		cd_intervalo = cd_intervalo_w;
				
				elsif (ie_tipo_nutricao_w = 'O') then	
				
					select 	max(cd_intervalo)	
					into STRICT	cd_intervalo_w	
					from 	intervalo_prescricao
					where 	ie_situacao = 'A'
					and 	((coalesce(cd_estabelecimento::text, '') = '') or (cd_estabelecimento = cd_estabelecimento_w))
					and     Obter_se_intervalo_estab(cd_intervalo, cd_estabelecimento_w) = 'S'
					and 	Obter_se_intervalo(cd_intervalo, '13') = 'S'					
					and		cd_intervalo = cd_intervalo_w;
					
				else
				
					select 	max(cd_intervalo)
					into STRICT	cd_intervalo_w
					from 	intervalo_prescricao
					where 	ie_situacao = 'A'
					and     ((coalesce(cd_estabelecimento::text, '') = '') or (cd_estabelecimento = cd_estabelecimento_w))  
					and 	Obter_se_intervalo(cd_intervalo,'12') = 'S'
					and     Obter_se_intervalo_estab(cd_intervalo, cd_estabelecimento_w) = 'S'
					and		cd_intervalo = cd_intervalo_w;
				
				end if;
				
				if (coalesce(qt_hora_aplicacao_p,0) > 0) then
					qt_hora_aplicacao_w := qt_hora_aplicacao_p;
				end if;
				
				if (coalesce(qt_min_aplicacao_p, 0) > 0) then
					qt_min_aplicacao_w	:= qt_min_aplicacao_p;
				end if;
				
				/* obter unidade consumo material */

				select	substr(obter_dados_material_estab(cd_material,cd_estabelecimento_w,'UMS'),1,30) cd_unidade_medida_consumo
				into STRICT	cd_unidade_consumo_w
				from	material
				where	cd_material = cd_material_w;
				
				select 	max(coalesce(ie_prescricao_dieta,'H')),
					max(qt_min_intervalo)
				into STRICT	ie_intervalo_dieta_w,
					qt_min_intervalo_w
				from 	intervalo_prescricao
				where	cd_intervalo = cd_intervalo_w;
				
				if (coalesce(hr_prim_horario_w::text, '') = '' and coalesce(ds_horarios_w::text, '') = '' and ie_tipo_nutricao_w = 'SNE') then
					select	to_char(coalesce(max(a.dt_primeiro_horario),clock_timestamp()),'hh24:mi')
					into STRICT	hr_prim_horario_prescr_w
					from	prescr_medica	a
					where	a.nr_prescricao = nr_prescricao_p;
				end if;
				
				if (ie_intervalo_dieta_w = 'S') then
					Calcula_Horario_Dieta_Continua(to_date(to_char(dt_inicio_prescr_w,'dd/mm/yyyy') || ' ' || coalesce(hr_prim_horario_w,hr_prim_horario_prescr_w),'dd/mm/yyyy hh24:mi'),cd_intervalo_w,coalesce(qt_hora_aplicacao_w,0) + (coalesce(qt_min_aplicacao_w,0) / 60),ds_horarios_w);
					nr_intervalo_w	:= obter_ocorrencias_horarios_rep(ds_horarios_w);
				else
					if (ds_horarios_w IS NOT NULL AND ds_horarios_w::text <> '') then
						/* calcular ocorrencias apartir dos horarios */

						nr_intervalo_w	:= obter_ocorrencias_horarios_rep(ds_horarios_w);
					else
						/* calcular horarios */

						SELECT * FROM calcular_horario_prescricao(nr_prescricao_p, cd_intervalo_w, dt_inicio_prescr_w, to_date(to_char(dt_inicio_prescr_w,'dd/mm/yyyy') || ' ' || coalesce(hr_prim_horario_w,hr_prim_horario_prescr_w),'dd/mm/yyyy hh24:mi'), nr_horas_validade_w, cd_material_w, 0, qt_min_intervalo_w, nr_intervalo_w, ds_horarios_w, ds_horarios_ww, 'N', null) INTO STRICT nr_intervalo_w, ds_horarios_w, ds_horarios_ww;
						ds_horarios_w := ds_horarios_w || ds_horarios_ww;
					end if;
				end if;
				
				/* obter conversao dose */

				qt_conversao_dose_w	:= obter_conversao_unid_med(cd_material_w, cd_unidade_medida_w);

				
				
				/* atualizar agrupamento */

				nr_agrupamento_w := nr_agrupamento_w + 1;
				
				if (ie_tipo_nutricao_w = 'SMP') and (ie_hora_supl_w = 'N') then
					ds_horarios_w		:= '';
					hr_prim_horario_w	:= '';
				elsif (ie_tipo_nutricao_w = 'SNE') and (ie_hora_sne_w = 'S') then
					ds_horarios_w		:= '';
					hr_prim_horario_w	:= '';
				end if;

				if	((ie_tipo_nutricao_w	= 'SMP') or (ie_tipo_nutricao_w	= 'SNE')) and (ds_orientacao_w IS NOT NULL AND ds_orientacao_w::text <> '') and (coalesce(ds_observacao_p::text, '') = '') and (coalesce(ie_gerar_orientacao_w,'N') = 'S') then
					ds_observacao_w	:= ds_orientacao_w;
				else
					ds_observacao_w	:= ds_observacao_p;
				end if;

				if (qt_vel_infusao_p > 0) then
					qt_vel_infusao_w := qt_vel_infusao_p;
				end if;
				
				if	(((coalesce(qt_hora_aplicacao_w::text, '') = '') and (coalesce(qt_min_aplicacao_w::text, '') = '')) and (ie_calcular_horas_sne_w = 'S') and (cd_intervalo_w IS NOT NULL AND cd_intervalo_w::text <> '')) then
					qt_hora_aplicacao_w := obter_ocorrencia_interv_dieta(cd_intervalo_w, nr_horas_validade_w, 'O');
				end if;
				
				/*calcular dose com base na velocidade e horas de infusao*/

				
				if (ie_tipo_nutricao_w = 'SNE') and (ie_calcular_dose_w <> 'N') and
					((ie_calcular_dose_w = 'T') or (coalesce(qt_dose_w,0) = 0)) then
													
					if (qt_vel_infusao_w > 0) and
						((qt_hora_aplicacao_w > 0) or (coalesce(qt_min_aplicacao_w, 0) > 0)) then
						
						qt_dose_aux_w := qt_vel_infusao_w * (coalesce(qt_hora_aplicacao_w,0) + (coalesce(qt_min_aplicacao_w,0) / 60));						
						qt_dose_aux_ww := Obter_conversao_ml_sne(cd_material_w, qt_dose_aux_w, cd_unidade_medida_w);						
						qt_dose_w :=  coalesce(qt_dose_aux_ww,qt_dose_w);
						
					end if;
				end if;
				
				/* obter quantidade consumo */

				select	coalesce(max(qt_conversao),0)
				into STRICT	qt_conversao_w
				from	unidade_medida_dose_v
				where	cd_material = cd_material_w
				and	cd_unidade_medida = cd_unidade_medida_w;
				
				if (qt_conversao_w = 0) then
					qt_unitaria_w := 0;
				else
					qt_unitaria_w := dividir(qt_dose_w, qt_conversao_w);
				end if;

				/* obter quantidade dispensar */

				SELECT * FROM obter_quant_dispensar(cd_estabelecimento_w, cd_material_w, nr_prescricao_p, 0, cd_intervalo_w, ie_via_aplicacao_w, qt_unitaria_w, 0, nr_intervalo_w, null, null, cd_unidade_medida_w, null, qt_produto_w, qt_total_dispensar_w, ie_regra_disp_w, ds_erro_w, ie_se_necessario_w, ie_acm_w) INTO STRICT qt_produto_w, qt_total_dispensar_w, ie_regra_disp_w, ds_erro_w;
				
				/*obter qt_solucao*/

				if (upper(cd_unidade_medida_w) = upper(obter_unid_med_usua('ml'))) then
					qt_solucao_w := qt_dose_w;
				else
					qt_solucao_w := obter_conversao_ml(cd_material_w, qt_dose_w, cd_unidade_medida_w);
				end if;
				
				if (coalesce(qt_vel_infusao_w,0) = 0) and (coalesce(qt_dose_w,0) > 0) and
					((coalesce(qt_hora_aplicacao_w,0) > 0) or (coalesce(qt_min_aplicacao_w, 0) > 0)) and (ie_calc_velocidade_w	= 'S') and (ie_calc_automatico_w = 'S') then
					qt_vel_infusao_w	:= round(dividir(qt_dose_w,coalesce(qt_hora_aplicacao_w,0) + (coalesce(qt_min_aplicacao_w,0) / 60)));
				elsif (coalesce(qt_vel_infusao_w,0) = 0) and (coalesce(qt_solucao_w,0) > 0) and
					((coalesce(qt_hora_aplicacao_w,0) > 0) or (coalesce(qt_min_aplicacao_w, 0) > 0)) and (ie_calc_velocidade_w	= 'N') and (ie_calc_automatico_w = 'S') then
					qt_vel_infusao_w	:= round(dividir(qt_solucao_w,coalesce(qt_hora_aplicacao_w,0) + (coalesce(qt_min_aplicacao_w,0) / 60)));
				end if;	
				
				select	coalesce(max(ie_consignado),0)
				into STRICT	ie_consignado_w
				from	material
				where	cd_material = cd_material_w;
					
				if (ie_consignado_w = '1') then						
					select	max(a.cd_fornecedor),
							max(obter_saldo_estoque_consig(cd_estabelecimento_w,a.cd_fornecedor, a.cd_material, a.cd_local_estoque))
					into STRICT	cd_fornec_consignado_w,
							qt_saldo_fornec_consig_w
					from	pessoa_juridica b,
							fornecedor_mat_consignado a,
							material m
					where	a.cd_fornecedor = b.cd_cgc
					and		a.cd_material   = m.cd_material_estoque
					and		m.cd_material   = cd_material_w
					and		b.ie_situacao = 'A'
					order by 2 desc;
				end if;	

				/* inserir produto */

				insert into prescr_material(
					nr_prescricao,
					nr_sequencia,
					ie_origem_inf,
					cd_material,
					cd_unidade_medida,
					qt_dose,
					qt_unitaria,
					qt_material,
					dt_atualizacao,
					nm_usuario,
					cd_intervalo,
					ds_horarios,
					ds_observacao,
					ie_via_aplicacao,
					nr_agrupamento,
					cd_motivo_baixa,
					dt_baixa,
					ie_utiliza_kit,
					cd_unidade_medida_dose,
					qt_conversao_dose,
					ie_urgencia,
					nr_ocorrencia,
					qt_total_dispensar,
					cd_fornec_consignado,
					nr_sequencia_solucao,
					nr_sequencia_proc,
					qt_solucao,
					hr_dose_especial,
					qt_dose_especial,
					ds_dose_diferenciada,
					ie_medicacao_paciente,
					nr_sequencia_diluicao,
					hr_prim_horario,
					nr_dia_util,
					nr_sequencia_dieta,
					ie_agrupador,
					dt_emissao_setor_atend,
					ie_suspenso,
					ds_justificativa,
					qt_dias_solicitado,
					qt_dias_liberado,
					nm_usuario_liberacao,
					dt_liberacao,
					ie_se_necessario,
					qt_min_aplicacao,
					nr_seq_lote_fornec,
					ie_status_cirurgia,
					ie_bomba_infusao,
					ie_aplic_bolus,
					ie_aplic_lenta,
					ie_acm,
					cd_material_baixa,
					nr_seq_avaliacao,
					nr_seq_ordem_prod,
					qt_baixa_especial,
					ie_objetivo,
					qt_hora_aplicacao,
					ie_erro,
					cd_topografia_cih,
					ie_origem_infeccao,
					cd_amostra_cih,
					cd_microorganismo_cih,
					ie_cultura_cih,
					ie_antibiograma,
					ie_uso_antimicrobiano,
					cd_kit_material,
					cd_local_estoque,
					nr_seq_kit,
					dt_suspensao,
					nm_usuario_susp,
					qt_vel_infusao,
					cd_protocolo,
					nr_seq_protocolo,
					nr_seq_mat_protocolo,
					dt_alteracao_local,
					nm_usuario_alt_local,
					ie_recons_diluente_fixo,
					qt_dias_util,
					dt_fim_item,
					nr_seq_atend_medic,
					nr_seq_kit_estoque,
					cd_convenio,
					cd_categoria,
					ie_sem_aprazamento,
					ie_novo_ciclo_ccih,
					nr_receita,
					dt_status,
					ie_status,
					qt_volume_adep,
					ie_supera_limite_uso,
					ie_cobra_paciente,
					ie_forma_infusao,
					ie_indicacao,
					ie_regra_disp,
					nr_seq_produto,
					ie_calc_automatico)
				values (
					nr_prescricao_p,
					nr_seq_material_w,
					'N',
					cd_material_w,
					cd_unidade_consumo_w,
					qt_dose_w,
					coalesce(qt_unitaria_w,1),
					coalesce(qt_produto_w,1),
					clock_timestamp(),
					nm_usuario_p,
					cd_intervalo_w,
					ds_horarios_w,
					ds_observacao_w,
					ie_via_aplicacao_w,
					nr_agrupamento_w,
					0,
					null,
					'N',
					cd_unidade_medida_w,
					qt_conversao_dose_w,
					ie_agora_w,
					nr_intervalo_w,
					qt_total_dispensar_w,
					cd_fornec_consignado_w,
					null,
					null,
					qt_solucao_w,
					null,
					null,
					null,
					'N',
					null,
					hr_prim_horario_w,
					null,
					CASE WHEN ie_tipo_nutricao_w='O' THEN nr_seq_dieta_p  ELSE null END ,
					CASE WHEN ie_tipo_nutricao_w='SMP' THEN 12 WHEN ie_tipo_nutricao_w='O' THEN 6  ELSE 8 END ,
					null,
					'N',
					null,
					null,
					null,
					null,
					null,
					ie_se_necessario_w,
					qt_min_aplicacao_w,
					null,
					null,
					ie_bomba_infusao_w,
					'N',
					'N',
					ie_acm_w,
					null,
					null,
					null,
					null,
					null,
					coalesce(qt_hora_aplicacao_w,null),
					null,
					null,
					null,
					null,
					null,
					'N',
					'N',
					'N',
					null,
					null,
					null,
					null,
					null,
					coalesce(qt_vel_infusao_w,null),
					null,
					null,
					null,
					null,
					null,
					'N',
					null,
					null,
					null,
					null,
					null,
					null,
					'N',
					null,
					null,
					clock_timestamp(),
					'P',
					null,
					null,
					null,
					null,
					null,
					ie_regra_disp_w,
					nr_seq_produto_w,
					ie_calc_automatico_w);

				nr_erro_w := Consistir_Prescr_Material(nr_prescricao_p, nr_seq_material_w, nm_usuario_p, cd_perfil_w, nr_erro_w);
					
				if (ie_param195_w = 'S') and (ie_param296_w = 'S') then
						
					select	coalesce(max('S'),'N')
					into STRICT	ie_existe_dil_w
					from 	material_diluicao 
					where 	cd_material = cd_material_w
					and	cd_estabelecimento = cd_estabelecimento_w;
					
					if (ie_existe_dil_w = 'S') then
						CALL Gerar_Reconst_Diluicao(nr_prescricao_p, nr_seq_material_w, 'A');
					end if;						
				
				end if;
					
				if (ie_kit_prescr_w	= 'S') then
					CALL gerar_kit_medic_prescricao(cd_estabelecimento_w, nr_prescricao_p,nr_seq_material_w, nm_usuario_p);
				end if;
				
				if (ie_prescr_mat_sem_lib_w = 'S') then
					CALL Gerar_prescr_mat_sem_dt_lib(nr_prescricao_p,nr_seq_material_w,cd_perfil_w,'N',nm_usuario_p,null);
				end if;	

				if (ie_tipo_nutricao_w = 'SNE') then
					CALL gerar_elemento_mat_sne( nr_prescricao_p, nr_seq_material_w, 'G', nm_usuario_p);
				end if;
			end if;
		end if;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_produto_nutricao ( nr_prescricao_p bigint, nr_seq_dieta_p bigint, ds_lista_produto_p text, nm_usuario_p text, qt_dose_p bigint, qt_vel_infusao_p bigint, qt_hora_aplicacao_p bigint, nr_seq_produto_p bigint, cd_intervalo_p text default null, cd_unidade_medida_p text DEFAULT NULL, ie_via_adm_p text DEFAULT NULL, ds_observacao_p text DEFAULT NULL, qt_min_aplicacao_p bigint default null, cd_prod_sabor_p bigint default null) FROM PUBLIC;

