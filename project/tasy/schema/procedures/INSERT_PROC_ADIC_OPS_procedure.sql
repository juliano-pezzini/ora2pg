-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE insert_proc_adic_ops ( nr_seq_proc_interno_p bigint, cd_convenio_p bigint, cd_categoria_p text, cd_plano_p text, cd_medico_exec_p text, qt_idade_pac_p bigint, nm_usuario_p text, nr_atendimento_p bigint, cd_departamento_p bigint, cd_setor_atendimento_p bigint, nr_seq_episodio_p bigint, ie_liberar_informacao_p text, ie_proc_princ_atend_p text) AS $body$
DECLARE


cd_procedimento_w		bigint;
nr_sequencia_w			bigint;
ie_origem_proced_w		bigint;
cd_plano_convenio_w		varchar(10);
cd_convenio_w			integer;
cd_categoria_w			varchar(10);
nr_sequencia_proc_w		bigint;
nr_seq_proc_int_adic_w		bigint;
cd_material_w			bigint;
qt_material_w			double precision;
ie_padrao_w			varchar(1);
cd_cgc_w			varchar(14);
ds_observacao_w			varchar(255);
ie_tipo_convenio_w		smallint	:= 0;
cd_estabelecimento_w		integer;
cd_perfil_w			integer;
qt_proc_adic_w		double precision;


c01 CURSOR FOR
	SELECT	OBTER_CD_PROC_TAB_INTERNO(NR_SEQ_PROC_INT_ADIC,wheb_usuario_pck.get_cd_estabelecimento,cd_convenio,CD_CATEGORIA_CONVENIO,'CD'),
		OBTER_CD_PROC_TAB_INTERNO(NR_SEQ_PROC_INT_ADIC,wheb_usuario_pck.get_cd_estabelecimento,cd_convenio,CD_CATEGORIA_CONVENIO,'O'),
		nr_seq_proc_int_adic,
		coalesce(qt_proc_adic,1)
	from	proc_int_proc_prescr a
	where	a.nr_seq_proc_interno	= nr_seq_proc_interno_p
	and 	coalesce(a.cd_convenio,cd_convenio_p) = cd_convenio_p
	and		((coalesce(a.cd_estabelecimento::text, '') = '') or (cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento))
	and	coalesce(a.ie_situacao,'A')	= 'A'
	and		((coalesce(cd_perfil::text, '') = '') or (cd_perfil = obter_perfil_ativo))
	and	((coalesce(a.cd_edicao_amb::text, '') = '') or ((a.cd_procedimento IS NOT NULL AND a.cd_procedimento::text <> '') and (obter_se_proc_edicao2(a.cd_procedimento, a.ie_origem_proced, a.cd_edicao_amb) = 'S')))
	and 	((coalesce(a.cd_convenio_excluir::text, '') = '') or (a.cd_convenio_excluir <> cd_convenio_p))
	and	((coalesce(a.cd_categoria_convenio::text, '') = '') or (a.cd_categoria_convenio = cd_categoria_p))
	and	((a.cd_plano_convenio	= cd_plano_p) or (coalesce(a.cd_plano_convenio::text, '') = ''))
	and	((coalesce(a.cd_medico_prescritor::text, '') = '') or (a.cd_medico_prescritor = cd_medico_exec_p))
	and	((coalesce(a.cd_medico_excluir::text, '') = '') or (a.cd_medico_excluir <> cd_medico_exec_p))
	and	(((coalesce(qt_idade_pac_p::text, '') = '') or (coalesce(a.qt_idade_min::text, '') = '' and coalesce(a.qt_idade_max::text, '') = '')) or
		((qt_idade_pac_p IS NOT NULL AND qt_idade_pac_p::text <> '') and (qt_idade_pac_p between coalesce(a.qt_idade_min,qt_idade_pac_p) and
		coalesce(a.qt_idade_max,qt_idade_pac_p))));




BEGIN

cd_perfil_w		:=	wheb_usuario_pck.get_cd_perfil;
cd_estabelecimento_w	:= 	wheb_usuario_pck.get_cd_estabelecimento;
ie_tipo_convenio_w	:= 	coalesce(obter_tipo_convenio(cd_convenio_p),0);

open C01;
loop
fetch C01 into
	cd_procedimento_w,
	ie_origem_proced_w,
	nr_seq_proc_int_adic_w,
	qt_proc_adic_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	select	nextval('procedimento_pac_medico_seq')
	into STRICT	nr_sequencia_proc_w
	;

	insert into procedimento_pac_medico(nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_atendimento,
		ie_situacao,
		cd_procedimento,
		ie_origem_proced,
		qt_procedimento,
		nr_seq_episodio,
		ie_proc_princ,
		cd_departamento,
		cd_setor_atendimento,
		nr_seq_proc_interno,
		dt_procedimento,
		ie_proc_adicional)
	values (nr_sequencia_proc_w,
		clock_timestamp(),
		coalesce(nm_usuario_p,wheb_usuario_pck.get_nm_usuario()),
		clock_timestamp(),
		coalesce(nm_usuario_p,wheb_usuario_pck.get_nm_usuario()),
		nr_atendimento_p,
		'A',
		cd_procedimento_w,
		coalesce(ie_origem_proced_w,11),
		qt_proc_adic_w,
		nr_seq_episodio_p,
		ie_proc_princ_atend_p,
		cd_departamento_p,
		cd_setor_atendimento_p,
		nr_seq_proc_int_adic_w,
		clock_timestamp(),
		'S');

	if (coalesce(ie_liberar_informacao_p,'N') = 'S') then
		CALL LIBERAR_PROC_PAC_MEDIC(nr_sequencia_proc_w, nm_usuario_p);
	end if;
	end;
end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE insert_proc_adic_ops ( nr_seq_proc_interno_p bigint, cd_convenio_p bigint, cd_categoria_p text, cd_plano_p text, cd_medico_exec_p text, qt_idade_pac_p bigint, nm_usuario_p text, nr_atendimento_p bigint, cd_departamento_p bigint, cd_setor_atendimento_p bigint, nr_seq_episodio_p bigint, ie_liberar_informacao_p text, ie_proc_princ_atend_p text) FROM PUBLIC;

