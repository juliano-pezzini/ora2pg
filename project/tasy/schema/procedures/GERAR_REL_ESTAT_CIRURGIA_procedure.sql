-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_rel_estat_cirurgia ( ie_tipo_quebra_p text, cd_procedimento_p bigint, nr_seq_proc_interno_p bigint, cd_estab_p bigint, ie_medicos_p text, ie_status_cirurgia_p text, dt_inicial_p timestamp, dt_final_p timestamp, nr_idade_inicial_p bigint, nr_idade_final_p bigint, ie_somente_termino_p text, ie_somente_atendimento_p text, nm_usuario_p text) AS $body$
DECLARE


ds_quebra_w			varchar(255);
cd_quebra_w			varchar(50);

nm_anestesista_w		varchar(60);
cd_anestesista_w		varchar(10);
ds_asa_w			varchar(254);
ie_asa_w			varchar(3);
ds_carater_w			varchar(200);
ie_carater_w			varchar(1);
nm_cirurgiao_w			varchar(60);
cd_cirurgiao_w			varchar(10);
ds_conv_w			varchar(255);
cd_conv_w			bigint;
ds_esp_cir_w			varchar(40);
cd_esp_cir_w			varchar(40);
ds_espec_w			varchar(240);
cd_espec_w			bigint;
ds_porte_w			varchar(200);
ie_porte_w			varchar(1);
ds_tipo_cir_w			varchar(80);
cd_tipo_cir_w			bigint;
ds_proc_inter_w			varchar(250);
nr_proc_inter_w			bigint;
ds_setor_w			varchar(200);
cd_setor_w			integer;
ds_tipo_anest_w			varchar(255);
cd_tipo_anest_w			varchar(10);
ds_tipo_atend_w			varchar(80);
cd_tipo_atend_w			varchar(80);
ds_tipo_conv_w			varchar(80);
cd_tipo_conv_w			varchar(80);
ds_turno_w			varchar(70);
cd_turno_w			varchar(70);
ds_procedimento_princ_w		procedimento.ds_procedimento%TYPE;
cd_procedimento_princ_w		bigint;

qt_jan_w			smallint;
qt_fev_w			smallint;
qt_mar_w			smallint;
qt_abr_w			smallint;
qt_mai_w			smallint;
qt_jun_w			smallint;
qt_jul_w			smallint;
qt_ago_w			smallint;
qt_set_w			smallint;
qt_out_w			smallint;
qt_nov_w			smallint;
qt_dez_w			smallint;

ie_tipo_atendimento_w		smallint;
nr_seq_tipo_acidente_w		bigint;

expressao1_w	varchar(255) := obter_desc_expressao_idioma(327119, null, wheb_usuario_pck.get_nr_seq_idioma);--Não informado
expressao2_w	varchar(255) := obter_desc_expressao_idioma(612231, null, wheb_usuario_pck.get_nr_seq_idioma);--Não encontrado
C01 CURSOR FOR
	SELECT	a.nm_anestesista,
		a.cd_medico_anestesista,
		coalesce(substr(obter_valor_dominio(1287,a.ie_asa_estado_paciente),1,100),expressao1_w),
		coalesce(a.ie_asa_estado_paciente,'0'),
		a.ds_carater,
		a.ie_carater_cirurgia,
		a.nm_cirurgiao,
		a.cd_medico_cirurgiao,
		coalesce(a.ds_convenio,expressao1_w),
		coalesce(a.cd_convenio,'0'),
		a.ds_especialidade_cirurgiao,
		a.cd_especialidade_cirurgiao,
		(	SELECT	max(obter_dados_estrut_proc(b.cd_procedimento,b.ie_origem_proced,'D','E'))
			from	procedimento b
			where	a.cd_procedimento_princ = b.cd_procedimento),
		(	select	max((obter_dados_estrut_proc(b.cd_procedimento,b.ie_origem_proced,'C','E'))::numeric )
			from	procedimento b
			where	a.cd_procedimento_princ = b.cd_procedimento),
		a.ds_porte,
		a.ie_porte,
		a.ds_tipo_cirurgia,
		a.cd_tipo_cirurgia,
		substr(coalesce(obter_desc_proc_interno(nr_seq_proc_interno),expressao2_w),1,250),
		coalesce(nr_seq_proc_interno,'0'),
		substr(obter_nome_setor(a.cd_setor_atendimento),1,200),
		a.cd_setor_atendimento,
		a.ds_tipo_anestesia,
		a.cd_tipo_anestesia,
		a.ds_tipo_atendimento,
		substr(obter_dados_atendimento(a.nr_atendimento,'TA'),1,80),
		coalesce(a.ds_tipo_convenio,expressao1_w),
		coalesce(substr(obter_dados_atendimento(a.nr_atendimento,'TC'),1,80),'0'),
		substr(obter_turno_cirurgia(a.dt_inicio_real,a.cd_estabelecimento,'D'),1,70),
		substr(obter_turno_cirurgia(a.dt_inicio_real,a.cd_estabelecimento,'C'),1,70),
		a.ds_procedimento,
		a.cd_procedimento_princ,
		a.qt_jan,
		a.qt_fev,
		a.qt_mar,
		a.qt_abr,
		a.qt_mai,
		a.qt_jun,
		a.qt_jul,
		a.qt_ago,
		a.qt_set,
		a.qt_out,
		a.qt_nov,
		a.qt_dez,
		a.ie_tipo_atendimento,
		a.nr_seq_tipo_acidente
	from	cirurgia_v a
	where	CASE WHEN ie_status_cirurgia_p='C' THEN  a.dt_inicio_prevista  ELSE a.dt_inicio_real (END IS NOT NULL AND END::text <> '')
	and	coalesce(a.dt_inicio_real,a.dt_inicio_prevista) between inicio_dia(dt_inicial_p) and fim_dia(dt_final_p)
	and	((coalesce(cd_procedimento_p::text, '') = '') or (cd_procedimento_p = a.cd_procedimento_princ))
	and	((coalesce(nr_seq_proc_interno_p::text, '') = '') or (nr_seq_proc_interno_p = a.nr_seq_proc_interno))
	and	((coalesce(cd_estab_p::text, '') = '') or (cd_estab_p = a.cd_estabelecimento))
	and	((idade between nr_idade_inicial_p and nr_idade_final_p) or (coalesce(idade::text, '') = ''))
	and	((ie_somente_termino_p <> 'S') or (a.dt_termino IS NOT NULL AND a.dt_termino::text <> ''))
	and	((ie_somente_atendimento_p <> 'S') or (a.nr_atendimento IS NOT NULL AND a.nr_atendimento::text <> ''))
	and	((ie_medicos_p = 'A') or (ie_medicos_p = a.ie_cirurgiao_corpo_clinico))
	and	((ie_status_cirurgia_p = 'T') or
		 (ie_status_cirurgia_p = 'R' AND a.ie_status_cirurgia = 2) or
		 (ie_status_cirurgia_p = 'C' AND a.ie_status_cirurgia = 3) or
		 ((ie_status_cirurgia_p = 'A') and (a.ie_status_cirurgia in (2,3))));

	-- Procedure de "Insert"
	procedure insere_registro(
			ins_ds_quebra_p		text,
			ins_cd_quebra_p		text,
			ins_nm_usuario_p	text,
			ins_qt_jan_p		bigint,
			ins_qt_fev_p		bigint,
			ins_qt_mar_p		bigint,
			ins_qt_abr_p		bigint,
			ins_qt_mai_p		bigint,
			ins_qt_jun_p		bigint,
			ins_qt_jul_p		bigint,
			ins_qt_ago_p		bigint,
			ins_qt_set_p		bigint,
			ins_qt_out_p		bigint,
			ins_qt_nov_p		bigint,
			ins_qt_dez_p		bigint,
			ins_cd_setor_atend_p	bigint,
			ins_cd_convenio_p	bigint,
			ins_cd_espec_cirur_p	text,
			ins_cd_tipo_anest_p	text,
			ins_ie_tipo_atend_p	bigint,
			ins_cd_medico_cirur_p	text,
			ins_cd_medico_anest_p	text,
			ins_cd_proc_princ_p	bigint,
			ins_nr_seq_tipo_acid_p	bigint,
			ins_ie_asa_estad_pac_p	text,
			ins_cd_espec_proc_p	bigint) is
	;
BEGIN

	insert into rel_estat_cirurgia_w(
		ds_quebra,
		cd_quebra,
		nm_usuario,
		qt_jan,
		qt_fev,
		qt_mar,
		qt_abr,
		qt_mai,
		qt_jun,
		qt_jul,
		qt_ago,
		qt_set,
		qt_out,
		qt_nov,
		qt_dez,
		cd_setor_atendimento,
		cd_convenio,
		cd_especialidade_cirurgiao,
		cd_tipo_anestesia,
		ie_tipo_atendimento,
		cd_medico_cirurgiao,
		cd_medico_anestesista,
		cd_procedimento_princ,
		nr_seq_tipo_acidente,
		ie_asa_estado_paciente,
		cd_especialidade_proc)
	values (
		ins_ds_quebra_p,
		ins_cd_quebra_p,
		ins_nm_usuario_p,
		ins_qt_jan_p,
		ins_qt_fev_p,
		ins_qt_mar_p,
		ins_qt_abr_p,
		ins_qt_mai_p,
		ins_qt_jun_p,
		ins_qt_jul_p,
		ins_qt_ago_p,
		ins_qt_set_p,
		ins_qt_out_p,
		ins_qt_nov_p,
		ins_qt_dez_p,
		ins_cd_setor_atend_p,
		ins_cd_convenio_p,
		ins_cd_espec_cirur_p,
		ins_cd_tipo_anest_p,
		ins_ie_tipo_atend_p,
		ins_cd_medico_cirur_p,
		ins_cd_medico_anest_p,
		ins_cd_proc_princ_p,
		ins_nr_seq_tipo_acid_p,
		ins_ie_asa_estad_pac_p,
		ins_cd_espec_proc_p);

	commit;

	end;

begin

delete FROM rel_estat_cirurgia_w where nm_usuario = nm_usuario_p;
commit;

if (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') then
	open C01;
	loop
	fetch C01 into
		nm_anestesista_w,
		cd_anestesista_w,
		ds_asa_w,
		ie_asa_w,
		ds_carater_w,
		ie_carater_w,
		nm_cirurgiao_w,
		cd_cirurgiao_w,
		ds_conv_w,
		cd_conv_w,
		ds_esp_cir_w,
		cd_esp_cir_w,
		ds_espec_w,
		cd_espec_w,
		ds_porte_w,
		ie_porte_w,
		ds_tipo_cir_w,
		cd_tipo_cir_w,
		ds_proc_inter_w,
		nr_proc_inter_w,
		ds_setor_w,
		cd_setor_w,
		ds_tipo_anest_w,
		cd_tipo_anest_w,
		ds_tipo_atend_w,
		cd_tipo_atend_w,
		ds_tipo_conv_w,
		cd_tipo_conv_w,
		ds_turno_w,
		cd_turno_w,
		ds_procedimento_princ_w,
		cd_procedimento_princ_w,
		qt_jan_w,
		qt_fev_w,
		qt_mar_w,
		qt_abr_w,
		qt_mai_w,
		qt_jun_w,
		qt_jul_w,
		qt_ago_w,
		qt_set_w,
		qt_out_w,
		qt_nov_w,
		qt_dez_w,
		ie_tipo_atendimento_w,
		nr_seq_tipo_acidente_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

--		Definir quebra
		if (ie_tipo_quebra_p = 'AN') then
			ds_quebra_w := nm_anestesista_w;
			cd_quebra_w := cd_anestesista_w;
		elsif (ie_tipo_quebra_p = 'AS') then
			ds_quebra_w := ds_asa_w;
			cd_quebra_w := ie_asa_w;
		elsif (ie_tipo_quebra_p = 'CA') then
			ds_quebra_w := ds_carater_w;
			cd_quebra_w := ie_carater_w;
		elsif (ie_tipo_quebra_p = 'CI') then
			ds_quebra_w := nm_cirurgiao_w;
			cd_quebra_w := cd_cirurgiao_w;
		elsif (ie_tipo_quebra_p = 'CO') then
			ds_quebra_w := ds_conv_w;
			cd_quebra_w := cd_conv_w;
		elsif (ie_tipo_quebra_p = 'EM') then
			ds_quebra_w := ds_esp_cir_w;
			cd_quebra_w := cd_esp_cir_w;
		elsif (ie_tipo_quebra_p = 'EP') then
			ds_quebra_w := ds_espec_w;
			cd_quebra_w := cd_espec_w;
		elsif (ie_tipo_quebra_p = 'PO') then
			ds_quebra_w := ds_porte_w;
			cd_quebra_w := ie_porte_w;
		elsif (ie_tipo_quebra_p = 'PC') then
			ds_quebra_w := ds_tipo_cir_w;
			cd_quebra_w := cd_tipo_cir_w;
		elsif (ie_tipo_quebra_p = 'PR') then
			ds_quebra_w := ds_procedimento_princ_w;
			cd_quebra_w := cd_procedimento_princ_w;
		elsif (ie_tipo_quebra_p = 'PI') then
			ds_quebra_w := ds_proc_inter_w;
			cd_quebra_w := nr_proc_inter_w;
		elsif (ie_tipo_quebra_p = 'SE') then
			ds_quebra_w := ds_setor_w;
			cd_quebra_w := cd_setor_w;
		elsif (ie_tipo_quebra_p = 'TA') then
			ds_quebra_w := ds_tipo_anest_w;
			cd_quebra_w := cd_tipo_anest_w;
		elsif (ie_tipo_quebra_p = 'TT') then
			ds_quebra_w := ds_tipo_atend_w;
			cd_quebra_w := cd_tipo_atend_w;
		elsif (ie_tipo_quebra_p = 'TC') then
			ds_quebra_w := ds_tipo_conv_w;
			cd_quebra_w := cd_tipo_conv_w;
		elsif (ie_tipo_quebra_p = 'TU') then
			ds_quebra_w := ds_turno_w;
			cd_quebra_w := cd_turno_w;
		end if;

--		Inserir registro
		insere_registro(
			ds_quebra_w,
			cd_quebra_w,
			nm_usuario_p,
			qt_jan_w,
			qt_fev_w,
			qt_mar_w,
			qt_abr_w,
			qt_mai_w,
			qt_jun_w,
			qt_jul_w,
			qt_ago_w,
			qt_set_w,
			qt_out_w,
			qt_nov_w,
			qt_dez_w,
			cd_setor_w,
			cd_conv_w,
			cd_esp_cir_w,
			cd_tipo_anest_w,
			ie_tipo_atendimento_w,
			cd_cirurgiao_w,
			cd_anestesista_w,
			cd_procedimento_princ_w,
			nr_seq_tipo_acidente_w,
			ie_asa_w,
			cd_esp_cir_w);
		end;
	end loop;
	close C01;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_rel_estat_cirurgia ( ie_tipo_quebra_p text, cd_procedimento_p bigint, nr_seq_proc_interno_p bigint, cd_estab_p bigint, ie_medicos_p text, ie_status_cirurgia_p text, dt_inicial_p timestamp, dt_final_p timestamp, nr_idade_inicial_p bigint, nr_idade_final_p bigint, ie_somente_termino_p text, ie_somente_atendimento_p text, nm_usuario_p text) FROM PUBLIC;

