-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE lote_ent_processo_eup ( nr_seq_ficha_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, nr_atendimento_p bigint, ds_lista_exames_p text, ie_tipo_ficha_p text) AS $body$
DECLARE



cd_pessoa_fisica_resp_w	varchar(10);
nr_atendimento_w		bigint;
nr_prescricao_w			bigint;
nr_seq_ficha_w			bigint;
cd_pessoa_fisica_w		varchar(10);
nr_seq_exame_w			bigint;
nr_seq_proc_interno_w	bigint;
ie_origem_proced_w		bigint;
cd_procedimento_w		bigint;
nr_seq_prescr_proc_w	integer;
cd_setor_atendimento_w	setor_atendimento.cd_setor_atendimento%type;
nr_seq_forma_laudo_w	lote_ent_inst_geracao.nr_seq_forma_laudo%type;
dt_coleta_w				timestamp;
ie_status_coleta_w		smallint;
ie_amostra_inadequada_w	varchar(2);
ie_medico_w				varchar(2);
cd_material_exame_w		varchar(20);
nr_seq_lote_sec_w		bigint;
nr_seq_novo_lote_w		bigint;
nr_lote_w				bigint;
nr_seq_nova_ficha_w		bigint;
nr_seq_reconvocado_w	bigint;
nr_seq_instituicao_w	bigint;
cd_unidade_basica_w		varchar(10);
cd_unidade_compl_w		varchar(10);

C01 CURSOR FOR
	SELECT	nr_seq_exame,
			cd_material_exame
	from	lote_ent_sec_ficha_exam
	where	nr_seq_ficha = nr_seq_ficha_p
	and		obter_se_contido(nr_sequencia,ds_lista_exames_p) = 'S';


BEGIN

nr_atendimento_w := nr_atendimento_p;

select	max(ie_status_coleta)
into STRICT	ie_status_coleta_w
from	lab_parametro
where	cd_estabelecimento = cd_estabelecimento_p;

select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
into STRICT	ie_medico_w
from	medico a,
		usuario b
where	a.cd_pessoa_fisica	= b.cd_pessoa_fisica
and		b.nm_usuario		= nm_usuario_p
and		a.ie_situacao		= 'A';


if (nr_seq_ficha_p IS NOT NULL AND nr_seq_ficha_p::text <> '') and (ds_lista_exames_p IS NOT NULL AND ds_lista_exames_p::text <> '') then

	--Insere o Lote
	select	max(a.nr_seq_lote_sec),
			max(a.cd_pessoa_fisica),
			max(c.cd_medico_resp),
			max(c.cd_setor_atendimento),
			max(c.nr_seq_forma_laudo),
			max(c.cd_unidade_basica),
			max(c.cd_unidade_compl)
	into STRICT	nr_seq_lote_sec_w,
			cd_pessoa_fisica_w,
			cd_pessoa_fisica_resp_w,
			cd_setor_atendimento_w,
			nr_seq_forma_laudo_w,
			cd_unidade_basica_w,
			cd_unidade_compl_w
	from	lote_ent_sec_ficha a,
			lote_ent_secretaria b,
			lote_ent_inst_geracao c
	where	a.nr_sequencia = nr_seq_ficha_p
	and		b.nr_sequencia = a.nr_seq_lote_sec
	and		c.nr_seq_instituicao = b.nr_seq_instituicao;

	if (ie_tipo_ficha_p = 'F') then

		select	cd_pessoa_fisica
		into STRICT	cd_pessoa_fisica_w
		from	atendimento_paciente
		where	nr_atendimento = nr_atendimento_w;

	end if;

	--insere a unidade
	insert into atend_paciente_unidade(
			nr_atendimento,
			nr_sequencia,
			cd_setor_atendimento,
			cd_unidade_basica,
			cd_unidade_compl,
			dt_entrada_unidade,
			dt_saida_interno,
			nr_seq_interno,
			dt_atualizacao,
			dt_atualizacao_nrec,
			nm_usuario,
			nm_usuario_nrec,
			cd_tipo_acomodacao
	) values (
			nr_atendimento_p,
			1,
			cd_setor_atendimento_w,
			cd_unidade_basica_w,
			cd_unidade_compl_w,
			clock_timestamp(),
			clock_timestamp(),
			nextval('atend_paciente_unidade_seq'),
			clock_timestamp(),
			clock_timestamp(),
			'Tasy',
			'Tasy',
			2
	);




	select	max(NR_LOTE),
			max(NR_SEQ_INSTITUICAO)
	into STRICT	nr_lote_w,
			nr_seq_instituicao_w
	from	lote_ent_secretaria
	where	nr_sequencia = nr_seq_lote_sec_w;

	select	nextval('lote_ent_secretaria_seq')
	into STRICT	nr_seq_novo_lote_w
	;

	select	nextval('lote_ent_sec_ficha_seq')
	into STRICT	nr_seq_nova_ficha_w
	;

	select	nextval('prescr_medica_seq')
	into STRICT	nr_prescricao_w
	;

	insert into lote_ent_secretaria(
		nr_sequencia,
		nr_lote,
		nr_seq_instituicao,
		ie_tipo_ficha,
		dt_recebimento,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_seq_lote_anterior,
		QT_FICHAS_LOTE
	) values (
		nr_seq_novo_lote_w,
		nr_lote_w,
		nr_seq_instituicao_w,
		ie_tipo_ficha_p,
		clock_timestamp(),
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		nr_lote_w,
		1
	);

	if (ie_tipo_ficha_p = 'R') then
		--Insere a ficha
		insert into lote_ent_sec_ficha(
			nr_sequencia,
			cd_pessoa_fisica,
			nr_seq_lote_sec,
			dt_atualizacao,
			nm_usuario,
			ie_ficha_adicional,
			cd_material_exame,
			cd_entidade_f,
			cd_lote_f,
			cd_prontuario_f,
			nm_rn_f,
			cd_dnv_f,
			dt_coleta_ficha_f,
			ie_periodo_col_f,
			dt_nascimento_f,
			ie_periodo_nasc_f,
			qt_peso_f,
			ie_sexo_f,
			ie_cor_pf_f,
			ie_npp_f,
			ie_premat_s_f,
			nr_idade_gest_f,
			ie_transfusao_f,
			dt_transf_f,
			ie_gemelar_f,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_prontuario_ex,
			cd_usuario_conv_ext,
			nr_ficha_ext,
			ds_observacao,
			ie_susp_am_inad,
			nr_cartao_nac_sus,
			cd_exame_f,
			ie_prematuro_f,
			dt_coleta_f,
			ie_tipo_teste_f,
			ds_repeticao_exame_f,
			cd_entrada_f,
			cd_exame_ficha_f,
			ie_premat_n_f,
			ie_transf_s_f,
			ie_transf_n_f,
			ie_tipo_ficha,
			ie_status_ficha,
			nr_seq_mot_inadeq,
			ds_motivo_inadeq,
			cd_medico_resp,
			ie_barra_gerado,
			hr_coleta_f,
			hr_nascimento_f,
			NR_SEQ_GRAU_PARENTESCO,
			nr_seq_ficha_ant
			)
		SELECT	nr_seq_nova_ficha_w,
			cd_pessoa_fisica,
			nr_seq_novo_lote_w,
			clock_timestamp(),
			nm_usuario_p,
			ie_ficha_adicional,
			cd_material_exame,
			cd_entidade_f,
			cd_lote_f,
			cd_prontuario_f,
			nm_rn_f,
			cd_dnv_f,
			coalesce(dt_coleta_ficha_f,clock_timestamp()),
			ie_periodo_col_f,
			dt_nascimento_f,
			ie_periodo_nasc_f,
			qt_peso_f,
			ie_sexo_f,
			ie_cor_pf_f,
			ie_npp_f,
			ie_premat_s_f,
			nr_idade_gest_f,
			ie_transfusao_f,
			dt_transf_f,
			ie_gemelar_f,
			clock_timestamp(),
			nm_usuario_p,
			nr_prontuario_ex,
			cd_usuario_conv_ext,
			nr_ficha_ext,
			ds_observacao,
			ie_susp_am_inad,
			nr_cartao_nac_sus,
			cd_exame_f,
			ie_prematuro_f,
			dt_coleta_f,
			ie_tipo_teste_f,
			ds_repeticao_exame_f,
			cd_entrada_f,
			cd_exame_ficha_f,
			ie_premat_n_f,
			ie_transf_s_f,
			ie_transf_n_f,
			'R',
			ie_status_ficha,
			nr_seq_mot_inadeq,
			ds_motivo_inadeq,
			cd_medico_resp,
			'N',
			hr_coleta_f,
			hr_nascimento_f,
			NR_SEQ_GRAU_PARENTESCO,
			nr_sequencia
		from	lote_ent_sec_ficha
		where	nr_sequencia  = nr_seq_ficha_p;

	elsif (ie_tipo_ficha_p = 'F') then

		insert into lote_ent_sec_ficha(
			nr_sequencia,
			cd_pessoa_fisica,
			nr_seq_lote_sec,
			dt_atualizacao,
			nm_usuario,
			ie_ficha_adicional,
			cd_material_exame,
			cd_entidade_f,
			cd_lote_f,
			cd_prontuario_f,
			nm_rn_f,
			cd_dnv_f,
			dt_coleta_ficha_f,
			ie_periodo_col_f,
			dt_nascimento_f,
			ie_periodo_nasc_f,
			qt_peso_f,
			ie_sexo_f,
			ie_cor_pf_f,
			ie_npp_f,
			ie_premat_s_f,
			nr_idade_gest_f,
			ie_transfusao_f,
			dt_transf_f,
			ie_gemelar_f,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_prontuario_ex,
			cd_usuario_conv_ext,
			nr_ficha_ext,
			ds_observacao,
			ie_susp_am_inad,
			nr_cartao_nac_sus,
			cd_exame_f,
			ie_prematuro_f,
			dt_coleta_f,
			ie_tipo_teste_f,
			ds_repeticao_exame_f,
			cd_entrada_f,
			cd_exame_ficha_f,
			ie_premat_n_f,
			ie_transf_s_f,
			ie_transf_n_f,
			ie_tipo_ficha,
			ie_status_ficha,
			nr_seq_mot_inadeq,
			ds_motivo_inadeq,
			cd_medico_resp,
			ie_barra_gerado,
			hr_coleta_f,
			NR_SEQ_GRAU_PARENTESCO,
			nr_seq_ficha_ant
			)
		SELECT	nr_seq_nova_ficha_w,
			cd_pessoa_fisica_w,
			nr_seq_novo_lote_w,
			clock_timestamp(),
			nm_usuario_p,
			'N',
			'',
			'',
			nr_lote_w,
			'',
			'',
			'',
			clock_timestamp(),
			'',
			a.dt_nascimento,
			'',
			a.qt_peso,
			a.ie_sexo,
			'',
			'',
			'',
			'',
			'',
			'',
			'',
			clock_timestamp(),
			nm_usuario_p,
			'',
			'',
			'',
			'',
			'',
			a.nr_cartao_nac_sus,
			'',
			'',
			clock_timestamp(),
			'',
			'',
			'',
			'',
			'',
			'',
			'',
			'F',
			'',
			'',
			'',
			'',
			'N',
			clock_timestamp(),
			b.NR_SEQ_GRAU_PARENTESCO,
			nr_seq_ficha_p
		from	pessoa_fisica a,
				atendimento_paciente b
		where	a.cd_pessoa_fisica = b.cd_pessoa_fisica
		and		b.nr_atendimento = nr_atendimento_w
		and		a.cd_pessoa_fisica  = cd_pessoa_fisica_w;

	end if;

/* COMENTADO POIS SEGUNDO O GILDO OS ATENDIMENTO RECONVOCADOS E FAMILIARES NAO DEVEM GERAR RECONVOCADOS
--Insere as informações do lote
select 	lote_ent_reconvocado_seq.nextVal
into	nr_seq_reconvocado_w
from	dual;

insert into lote_ent_reconvocado (
		nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		cd_pessoa_fisica,
		nr_seq_lote_sec,
		nr_seq_ficha_lote,
		dt_atualizacao_nrec,
		nm_usuario_nrec
) values (
		nr_seq_reconvocado_w,
		sysdate,
		nm_usuario_p,
		cd_pessoa_fisica_w,
		nr_seq_novo_lote_w,
		nr_seq_nova_ficha_w,
		sysdate,
		nm_usuario_p
);
*/
		/*--Insere o atendimento
		select	atendimento_paciente_seq.nextVal
		into	nr_atendimento_w
		from	dual;

		insert into atendimento_paciente (
			nr_atendimento,
			ie_permite_visita,
			dt_entrada,
			ie_tipo_atendimento,
			cd_procedencia,
			cd_medico_resp,
			cd_pessoa_fisica,
			cd_estabelecimento,
			dt_atualizacao,
			nm_usuario,
			nr_seq_ficha_lote
		) values (
			nr_atendimento_w,
			'S',
			dt_entrada_w,
			7,
			cd_procedencia_w,
			cd_pessoa_fisica_resp_w,
			cd_pessoa_fisica_w,
			cd_estabelecimento_p,
			sysdate,
			nm_usuario_p,
			nr_seq_ficha_w
		);

		insert into atend_categoria_convenio(
			nr_seq_interno,
			nr_atendimento,
			cd_convenio,
			cd_categoria,
			cd_plano_convenio,
			--cd_tipo_acomodacao,
			--cd_usuario_convenio,
			dt_validade_carteira,
			dt_inicio_vigencia,
			ie_tipo_guia,
			nm_usuario,
			dt_atualizacao,
			nr_doc_convenio
		) values (
			atend_categoria_convenio_seq.NextVal,
			nr_atendimento_w,
			cd_convenio_w, --
			cd_categoria_w, --
			cd_plano_convenio_w, --
			--cd_tipo_acomodacao_w, --
			--nvl(cd_usuario_convenio_w,123),
			dt_entrada_w+365,
			dt_entrada_w,
			'L',
			nm_usuario_p,
			sysdate,
			nr_atendimento_w
		);

		--insere a unidade
		insert into atend_paciente_unidade (
				nr_atendimento,
				nr_sequencia,
				cd_setor_atendimento,
				cd_unidade_basica,
				cd_unidade_compl,
				dt_entrada_unidade,
				dt_saida_interno,
				nr_seq_interno,
				dt_atualizacao,
				dt_atualizacao_nrec,
				nm_usuario,
				nm_usuario_nrec,
				cd_tipo_acomodacao
		) values (
				nr_atendimento_w,
				1,
				cd_setor_atendimento_w,
				cd_unidade_basica_w,
				cd_unidade_compl_w,
				sysdate,
				sysdate,
				atend_paciente_unidade_seq.NextVal,
				sysdate,
				sysdate,
				'Tasy',
				'Tasy',
				2
		);*/
	--Insere a prescrição
	insert into prescr_medica(
		nr_prescricao,
		cd_pessoa_fisica,
		dt_prescricao,
		dt_atualizacao,
		nm_usuario,
		nr_atendimento,
		nr_seq_ficha_lote,
		nr_seq_lote_entrada,
		cd_estabelecimento,
		cd_medico,
		cd_setor_entrega,
		nr_seq_forma_laudo,
		cd_setor_atendimento
	) values (
		nr_prescricao_w,
		cd_pessoa_fisica_w,
		clock_timestamp(),
		clock_timestamp(),
		nm_usuario_p,
		nr_atendimento_w,
		nr_seq_nova_ficha_w,
		nr_seq_novo_lote_w,
		cd_estabelecimento_p,
		cd_pessoa_fisica_resp_w,
		cd_setor_atendimento_w,
		nr_seq_forma_laudo_w,
		cd_setor_atendimento_w
	);


	update	lote_ent_sec_ficha
	set		nr_prescricao = nr_prescricao_w,
			nr_atendimento = nr_atendimento_w
	where	nr_sequencia = nr_seq_nova_ficha_w;
	-- Insere os procedimentos da prescrição
	--inserir_codigo_barras_ficha(nr_seq_nova_ficha_w);
	open C01;
	loop
	fetch C01 into
		nr_seq_exame_w,
		cd_material_exame_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

	insert into lote_ent_sec_ficha_exam(
		nr_sequencia,
		nr_seq_exame,
		dt_atualizacao,
		nm_usuario,
		cd_material_exame,
		nr_seq_ficha,
		dt_atualizacao_nrec,
		nm_usuario_nrec
	) values (
		nextval('lote_ent_sec_ficha_exam_seq'),
		nr_seq_exame_w,
		clock_timestamp(),
		nm_usuario_p,
		cd_material_exame_w,
		nr_seq_nova_ficha_w,
		clock_timestamp(),
		nm_usuario_p
	);

	/* COMENTADO POIS SEGUNDO O GILDO OS ATENDIMENTO RECONVOCADOS E FAMILIARES NAO DEVEM GERAR RECONVOCADOS
	insert	into LOTE_ENT_RECONVOCADO_ITEM (
		NR_SEQUENCIA,
		NR_SEQ_EXAME,
		DT_ATUALIZACAO,
		NM_USUARIO,
		CD_MATERIAL_EXAME,
		NR_SEQ_RECONVOCADO,
		DT_ATUALIZACAO_NREC,
		NM_USUARIO_NREC
	) values (
		lote_ent_reconvocado_item_seq.nextVal,
		nr_seq_exame_w,
		sysdate,
		nm_usuario_p,
		cd_material_exame_w,
		nr_seq_reconvocado_w,
		sysdate,
		nm_usuario_p
	);
	*/
	select	max(nr_seq_proc_interno),
			max(ie_origem_proced),
			max(cd_procedimento)
	into STRICT	nr_seq_proc_interno_w,
			ie_origem_proced_w,
			cd_procedimento_w
	from	exame_laboratorio
	where	nr_seq_exame = nr_seq_exame_w;

	select	coalesce(max(nr_sequencia), 0) + 1
	into STRICT	nr_seq_prescr_proc_w
	from	prescr_procedimento
	where	nr_prescricao	= nr_prescricao_w;

	insert into prescr_procedimento(
		nr_sequencia,
		cd_procedimento,
		qt_procedimento,
		nr_prescricao,
		dt_atualizacao,
		nm_usuario,
		ie_origem_inf,
		nr_seq_proc_interno,
		ie_origem_proced,
		nr_seq_interno,
		nr_seq_exame,
		dt_coleta,
		dt_prev_execucao,
		ie_status_atend,
		cd_setor_atendimento,
		cd_motivo_baixa,
		cd_material_exame,
		ie_suspenso
	) values (
		nr_seq_prescr_proc_w,
		cd_procedimento_w,
		1,
		nr_prescricao_w,
		clock_timestamp(),
		nm_usuario_p,
		'1',
		nr_seq_proc_interno_w,
		ie_origem_proced_w,
		nextval('prescr_procedimento_seq'),
		nr_seq_exame_w,
		coalesce(dt_coleta_w,clock_timestamp()),
		Obter_data_prev_exec(clock_timestamp(), clock_timestamp(), cd_setor_atendimento_w, nr_prescricao_w, 'A'),
		CASE WHEN ie_amostra_inadequada_w='S' THEN '23'  ELSE ie_status_coleta_w END ,
		cd_setor_atendimento_w,
		0,
		cd_material_exame_w,
		'N'
	);



	end;
end loop;
close C01;

	CALL liberar_lote_ent_sec(nr_seq_novo_lote_w,nm_usuario_p,cd_estabelecimento_p);

end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE lote_ent_processo_eup ( nr_seq_ficha_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, nr_atendimento_p bigint, ds_lista_exames_p text, ie_tipo_ficha_p text) FROM PUBLIC;

