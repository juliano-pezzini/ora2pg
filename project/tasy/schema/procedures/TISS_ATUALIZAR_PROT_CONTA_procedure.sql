-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE tiss_atualizar_prot_conta (nr_seq_protocolo_p bigint, nr_interno_conta_p bigint, nr_atendimento_p bigint, nr_seq_med_prot_p bigint, ie_somente_pendentes_p text, cd_estabelecimento_p text, nm_usuario_p text) AS $body$
DECLARE


nr_interno_conta_w	bigint;
nr_seq_procedimento_w	bigint;
nr_seq_material_w	bigint;
nr_seq_med_fatur_w	bigint;
nr_atend_med_w		bigint;
nr_seq_prot_med_w	bigint;
cont_w			bigint;
nr_seq_guia_w		bigint;
nr_seq_apres_w		bigint;
nr_seq_desp_w		bigint;
cd_estabelecimento_w	bigint;
cd_convenio_parametro_w	bigint;
ie_ordenacao_od_w	varchar(255);
ie_tipo_ordem_w		varchar(255);
ie_atualiza_nr_guia_w	varchar(255);
nm_pessoa_fisica_w	varchar(255);
ds_texto_w		varchar(255);
count_param_w		bigint:= 0;
nr_seq_tuss_mat_item_w	bigint;
cd_material_tuss_w	material_atend_paciente.cd_material_tuss%type;
ds_material_tuss_w	material_atend_paciente.ds_material_tuss%type;
cd_categoria_parametro_w varchar(10);
ie_tipo_atendimento_w	smallint;
dt_referencia_tiss_w	timestamp;
ie_atualiza_vinculo_tuss_w	varchar(1);
qt_contas_w		bigint := 1;
ie_status_acerto_w	smallint;
nr_seq_item_w		bigint := 0;

dt_envio_integr_w	protocolo_convenio_integr.dt_atualizacao%type;
ZERO_C			constant smallint := 0;
MSG_1187976_C		constant integer := 1187976;

c01 CURSOR FOR
SELECT	nr_interno_conta,
	(null)::numeric  nr_seq_med_fatur,
	(null)::numeric  nr_atend_med,
	ie_status_acerto
from	conta_paciente
where (nr_seq_protocolo	= nr_seq_protocolo_p	or
	nr_interno_conta	= nr_interno_conta_p	or
	nr_atendimento		= nr_atendimento_p)
and (ie_somente_pendentes_p	= 'N' or coalesce(dt_geracao_tiss::text, '') = '')

union

SELECT	(null)::numeric  nr_interno_conta,
	(null)::numeric ,
	nr_atendimento,
	(null)::numeric
from	med_faturamento
where	nr_seq_protocolo	= nr_seq_med_prot_p;

c02 CURSOR FOR
SELECT	nr_sequencia
from	procedimento_paciente
where 	nr_interno_conta	= nr_interno_conta_w
and	coalesce(cd_motivo_exc_conta::text, '') = ''
order by CASE WHEN ie_proc_princ_atend='S' THEN  1  ELSE 2 END;

c03 CURSOR FOR
SELECT	nr_sequencia,
	nr_seq_tuss_mat_item,
	cd_material,
	ie_origem_preco,
	dt_atendimento,
	nr_seq_simp_preco,
	nr_seq_bras_preco,
	nr_seq_lote_fornec,
	cd_cgc_fornecedor
from	material_atend_paciente
where 	nr_interno_conta	= nr_interno_conta_w
and	coalesce(cd_motivo_exc_conta::text, '') = '';

C03_w	C03%rowtype;

c04 CURSOR FOR
SELECT	nr_sequencia
from	tiss_conta_guia
where 	nr_interno_conta	= nr_interno_conta_w;

c05 CURSOR FOR
SELECT	nr_sequencia,
	(CASE WHEN ie_tipo_despesa='1' THEN  '3' WHEN ie_tipo_despesa='2' THEN  '5' WHEN ie_tipo_despesa='3' THEN  '4' WHEN ie_tipo_despesa='4' THEN  '2' WHEN ie_tipo_despesa='5' THEN  '1' WHEN ie_tipo_despesa='6' THEN  '6' WHEN ie_tipo_despesa='7' THEN  '2' END ) ie_tipo_ordem  --7 para o TISS 3 que e Taxas e alugueis
from	tiss_conta_desp
where	nr_seq_guia		= nr_seq_guia_w
order by CASE WHEN ie_ordenacao_od_w=1 THEN  ie_tipo_despesa  ELSE '' END ,
	CASE WHEN ie_ordenacao_od_w=2 THEN  ie_tipo_despesa  ELSE '' END  desc,
	CASE WHEN ie_ordenacao_od_w=3 THEN  ie_tipo_ordem  ELSE '' END ,
	CASE WHEN ie_ordenacao_od_w=4 THEN  dt_item  ELSE '' END ,
	CASE WHEN ie_ordenacao_od_w=6 THEN  dt_item  ELSE '' END ,
	CASE WHEN ie_ordenacao_od_w=6 THEN  ie_tipo_despesa  ELSE '' END ,
	CASE WHEN ie_ordenacao_od_w=7 THEN  ie_tipo_despesa  ELSE '' END ,
	CASE WHEN ie_ordenacao_od_w=7 THEN  dt_item  ELSE '' END ,
	CASE WHEN ie_ordenacao_od_w=8 THEN  ie_tipo_ordem  ELSE '' END ,
	CASE WHEN ie_ordenacao_od_w=8 THEN  dt_item  ELSE '' END ,
	ds_procedimento,
	ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_item);


BEGIN

CALL tiss_common_vars_pck.reset_item_sequence();

if (coalesce(nr_seq_med_prot_p,0) > 0) then

	select	count(*)
	into STRICT	cont_w
	from	tiss_reap_conta a,
		tiss_conta_guia b
	where	b.nr_sequencia		= a.nr_seq_tiss_conta
	and	b.nr_seq_prot_med	= nr_seq_med_prot_p;

	if (coalesce(cont_w,0)	> 0) then
		/*r+aise_application_Error(-20011, 'A conta no pode ser atualizada pois j existe reapresentao para a mesma!' || chr(10) ||
					'Conta: ' || nr_interno_conta_w );*/
		CALL wheb_mensagem_pck.exibir_mensagem_abort(262152);
	end if;

	-- dsantos em 17/08/2009, OS 160291 -> os deletes de cada tablea faziam or exists.

	-- separei em dois deletes para nao precisar do OR e melhorar o desempenho.
	delete	from tiss_Conta_Atend a
	where	a.nr_seq_prot_med	= nr_seq_med_prot_p;

	delete	from tiss_Conta_Atend a
	where	exists (SELECT	1
			from	tiss_Conta_Atend x
			where	x.nr_atend_med		= a.nr_atend_med
			and	x.nr_seq_prot_med	<> a.nr_seq_prot_med);

	delete	from tiss_Conta_Proc a
	where	a.nr_seq_prot_med	= nr_seq_med_prot_p;

	delete 	from tiss_Conta_Proc a
	where	exists (SELECT	1
			from	tiss_Conta_Proc x
			where	x.nr_atend_med		= a.nr_atend_med
			and	x.nr_seq_prot_med	<> a.nr_seq_prot_med);

	delete	from tiss_Conta_Desp a
	where	a.nr_seq_prot_med	= nr_seq_med_prot_p;

	delete	from tiss_Conta_Desp a
	where	exists (SELECT	1
			from	tiss_Conta_Desp x
			where	x.nr_atend_med		= a.nr_atend_med
			and	x.nr_seq_prot_med	<> a.nr_seq_prot_med);

	delete	from tiss_Conta_Guia a
	where	a.nr_seq_prot_med	= nr_seq_med_prot_p;

	delete	from tiss_Conta_Guia a
	where	exists (SELECT	1
			from	tiss_conta_guia x
			where	x.nr_atend_med		= a.nr_atend_med
			and	x.nr_seq_prot_med	<> a.nr_seq_prot_med);

end if;

if coalesce(nr_seq_protocolo_p, ZERO_C) > ZERO_C then	
	
	dt_envio_integr_w := obter_dt_envio_protheus(nr_seq_protocolo_p);
	
elsif coalesce(nr_interno_conta_p, ZERO_C) > ZERO_C then

	select	obter_dt_envio_protheus(a.nr_seq_protocolo)
	into STRICT	dt_envio_integr_w
	from	conta_paciente a
	where 	a.nr_interno_conta = nr_interno_conta_p;

end if;

if (dt_envio_integr_w IS NOT NULL AND dt_envio_integr_w::text <> '') then
	/* Faturamento ja integrado. Nao e possivel atualizar as contas TISS. */

	CALL wheb_mensagem_pck.exibir_mensagem_abort(MSG_1187976_C);
end if;

ds_texto_w := substr(wheb_mensagem_pck.get_texto(310000),1,255); --Atualizando Contas TISS
CALL gravar_processo_longo(ds_texto_w,'TISS_ATUALIZAR_PROT_CONTA',0);

--Setar uma data de referencia unica para todos os itens do protocolo ao atualizar a conta TISS do protocolo.

--Utilizado na TISS_OBTER_VERSAO
if (coalesce(nr_seq_protocolo_p,0) > 0) then

	select	max(dt_referencia_tiss)
	into STRICT	dt_referencia_tiss_w
	from	protocolo_convenio
	where	nr_seq_protocolo	= nr_seq_protocolo_p;
	
	select 	count(*)
	into STRICT	qt_contas_w
	from	conta_paciente
	where 	nr_seq_protocolo = nr_seq_protocolo_p;

	CALL tiss_convenio_pck.set_dt_referencia_tiss(dt_referencia_tiss_w);

end if;

open c01;
loop
fetch c01 into
	nr_interno_conta_w,
	nr_seq_med_fatur_w,
	nr_atend_med_w,
	ie_status_acerto_w;
EXIT WHEN NOT FOUND; /* apply on c01 */

	select	max(substr(c.nm_pessoa_fisica,1,255)),
		max(b.ie_tipo_atendimento)
	into STRICT	nm_pessoa_fisica_w,
		ie_tipo_atendimento_w
	from	conta_paciente a,
		atendimento_paciente b,
		pessoa_fisica c
	where	a.nr_atendimento	= b.nr_atendimento
	and	b.cd_pessoa_fisica	= c.cd_pessoa_fisica
	and	a.nr_interno_conta	= nr_interno_conta_w;

	if (coalesce(nr_seq_protocolo_p,0) > 0) then
		--Protocolo: #@NR_SEQ_PROTOCOLO_P#@ Paciente: #@NM_PESSOA_FISICA_P#@
		ds_texto_w := substr(wheb_mensagem_pck.get_texto(310001,'NR_SEQ_PROTOCOLO_P='||nr_seq_protocolo_p||
									';NM_PESSOA_FISICA_P='||nm_pessoa_fisica_w),1,255);
		CALL gravar_processo_longo(ds_texto_w,'TISS_ATUALIZAR_PROT_CONTA',-1);
	else
		CALL gravar_processo_longo(nm_pessoa_fisica_w,'TISS_ATUALIZAR_PROT_CONTA',-1);
	end if;

	delete	from tiss_log_conta
	where	nr_interno_conta	= nr_interno_conta_w;

	select	count(1)
	into STRICT	cont_w
	from	tiss_reap_conta a,
		tiss_conta_guia b
	where	b.nr_sequencia		= a.nr_seq_tiss_conta
	and	a.nr_interno_conta	= nr_interno_conta_w  LIMIT 1;

	if (coalesce(cont_w,0)	> 0) then
		/*r.aise_application_Error(-20011, 'A conta nao pode ser atualizada pois ja existe reapresentacao para a mesma!' || chr(10) ||
						' Conta: ' || nr_interno_conta_w );*/
		CALL wheb_mensagem_pck.exibir_mensagem_abort(262153,'NR_INTERNO_CONTA_W='||nr_interno_conta_w||';');
	end if;

	if (coalesce(nr_seq_med_prot_p,0) > 0) then
		select	cd_estabelecimento_p,
			max(cd_convenio)
		into STRICT 	cd_estabelecimento_w,
			cd_convenio_parametro_w
		from 	med_prot_convenio
		where 	nr_sequencia = nr_seq_med_prot_p;
	else
		select	max(cd_estabelecimento),
			max(cd_convenio_parametro),
			max(cd_categoria_parametro)
		into STRICT 	cd_estabelecimento_w,
			cd_convenio_parametro_w,
			cd_categoria_parametro_w
		from 	conta_paciente
		where 	nr_interno_conta = nr_interno_conta_w;

	end if;
	
	select	count(*),
		coalesce(max(ie_ordenacao_od), 1),
		coalesce(max(ie_atualiza_nr_guia),'N'),
		coalesce(max(ie_atualiza_vinculo_tuss),'S')
	into STRICT	count_param_w,
		ie_ordenacao_od_w,
		ie_atualiza_nr_guia_w,
		ie_atualiza_vinculo_tuss_w
	from	tiss_parametros_convenio
	where 	cd_estabelecimento	= cd_estabelecimento_w
	and	cd_convenio		= cd_convenio_parametro_w;
	
	if (count_param_w > 0) then

		/*Inicio lhalves OS 362868 em 16/09/2011 - Atualizar numeracao de guia ao atualizar conta TISS*/

		if (coalesce(ie_atualiza_nr_guia_w,'N') = 'S') and
			((coalesce(OBTER_TITULO_CONTA_PROTOCOLO(nr_seq_protocolo_p,nr_interno_conta_p)::text, '') = '') and (coalesce(OBTER_TITULO_CONTA(nr_interno_conta_p)::text, '') = '') and (coalesce(somente_numero(obter_nf_conta_protocolo(nr_seq_protocolo_p,nr_interno_conta_p)),0) = 0)) then

			delete	from proc_paciente_tiss a
			where	a.nr_seq_procedimento in (SELECT	b.nr_sequencia
				from	procedimento_paciente b
				where	b.nr_interno_conta = nr_interno_conta_p)
			and	a.ds_campo in ('NR_GUIA_PRESTADOR','NR_GUIA_PRESTADOR_HONOR');
					
			CALL limpa_doc_conv_conta(nr_interno_conta_p, nr_seq_protocolo_p, ie_status_acerto_w, ie_atualiza_nr_guia_w);

			open c02;
			loop
			fetch c02 into
				nr_seq_procedimento_w;
			EXIT WHEN NOT FOUND; /* apply on c02 */

				CALL tiss_atualizar_procedimento(nr_seq_procedimento_W, 'S', nm_usuario_p);

			end loop;
			close c02;

			open c03;
			loop
			fetch c03 into
				C03_w;
			EXIT WHEN NOT FOUND; /* apply on c03 */

				if	((coalesce(c03_w.nr_seq_tuss_mat_item,0) = 0) and (ie_atualiza_vinculo_tuss_w = 'S')) or (ie_atualiza_vinculo_tuss_w = 'T') then --Se nao tem TUSS, atualiza o TUSS novamente.
					SELECT * FROM Define_Material_TUSS( 	cd_estabelecimento_w, C03_w.cd_material, cd_convenio_parametro_w, cd_categoria_parametro_w, ie_tipo_atendimento_w, C03_w.ie_origem_preco, C03_w.dt_atendimento, c03_w.nr_seq_simp_preco, c03_w.nr_seq_bras_preco, c03_w.nr_seq_lote_fornec, nm_usuario_p, cd_material_tuss_w, nr_seq_tuss_mat_item_w, ds_material_tuss_w, c03_w.cd_cgc_fornecedor) INTO STRICT cd_material_tuss_w, nr_seq_tuss_mat_item_w, ds_material_tuss_w;


					update	material_atend_paciente
					set	cd_material_tuss	= CASE WHEN cd_material_tuss_w=0 THEN null  ELSE cd_material_tuss_w END ,
						nr_seq_tuss_mat_item	= CASE WHEN nr_seq_tuss_mat_item_w=0 THEN null  ELSE nr_seq_tuss_mat_item_w END ,
						ds_material_tuss	= CASE WHEN ds_material_tuss_w = NULL THEN  null  ELSE ds_material_tuss_w END
					where	nr_sequencia		= C03_w.nr_sequencia;

				end if;

				CALL tiss_atualizar_material(C03_w.nr_sequencia, 'S', nm_usuario_p);

			end loop;
			close c03;
			
			if (ie_status_acerto_w = 2)  then
				CALL gerar_conta_paciente_guia(nr_interno_conta_w, ie_status_acerto_w);
			end if;
		else

			open c02;
			loop
			fetch c02 into
				nr_seq_procedimento_w;
			EXIT WHEN NOT FOUND; /* apply on c02 */

				CALL tiss_atualizar_procedimento(nr_seq_procedimento_W, 'S', nm_usuario_p);

			end loop;
			close c02;

			open c03;
			loop
			fetch c03 into
				C03_w;
			EXIT WHEN NOT FOUND; /* apply on c03 */
				if	((coalesce(c03_w.nr_seq_tuss_mat_item,0) = 0) and (ie_atualiza_vinculo_tuss_w = 'S')) or (ie_atualiza_vinculo_tuss_w = 'T') then --Se nao tem TUSS, atualiza o TUSS novamente.
					SELECT * FROM Define_Material_TUSS( 	cd_estabelecimento_w, C03_w.cd_material, cd_convenio_parametro_w, cd_categoria_parametro_w, ie_tipo_atendimento_w, C03_w.ie_origem_preco, C03_w.dt_atendimento, c03_w.nr_seq_simp_preco, c03_w.nr_seq_bras_preco, c03_w.nr_seq_lote_fornec, nm_usuario_p, cd_material_tuss_w, nr_seq_tuss_mat_item_w, ds_material_tuss_w, c03_w.cd_cgc_fornecedor) INTO STRICT cd_material_tuss_w, nr_seq_tuss_mat_item_w, ds_material_tuss_w;

					update	material_atend_paciente
					set	cd_material_tuss	= CASE WHEN cd_material_tuss_w=0 THEN null  ELSE cd_material_tuss_w END ,
						nr_seq_tuss_mat_item	= CASE WHEN nr_seq_tuss_mat_item_w=0 THEN null  ELSE nr_seq_tuss_mat_item_w END ,
						ds_material_tuss	= CASE WHEN ds_material_tuss_w = NULL THEN  null  ELSE ds_material_tuss_w END
					where	nr_sequencia		= C03_w.nr_sequencia;

				end if;

				CALL tiss_atualizar_material(C03_w.nr_sequencia, 'S', nm_usuario_p);

			end loop;
			close c03;
		end if;


		CALL tiss_atualizar_conta_paciente(nr_interno_conta_w, nr_seq_med_fatur_w, 'S', coalesce(cd_estabelecimento_w,cd_estabelecimento_p), nm_usuario_p, nr_atend_med_w, nr_seq_med_prot_p);

		if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

		open c04;
		loop
		fetch c04 into
			nr_seq_guia_w;
		EXIT WHEN NOT FOUND; /* apply on c04 */

			nr_seq_apres_w := 1;
			
			select	coalesce(max(a.nr_sequencia_item), 0)
			into STRICT	nr_seq_item_w
			from	tiss_conta_proc a
			where	a.nr_seq_guia = nr_seq_guia_w;

			open c05;
			loop
			fetch c05 into
				nr_seq_desp_w,
				ie_tipo_ordem_w;
			EXIT WHEN NOT FOUND; /* apply on c05 */
					
				nr_seq_item_w := nr_seq_item_w + 1;

				update tiss_conta_desp
				set	nr_seq_apres 	= nr_seq_apres_w,
					nr_sequencia_item = nr_seq_item_w
				where 	nr_sequencia 	= nr_seq_desp_w;

				nr_seq_apres_w := nr_seq_apres_w + 1;

			end loop;
			close c05;			

		end loop;
		close c04;

	end if;

end loop;
close c01;

-- Limpa a data.
CALL tiss_convenio_pck.set_dt_referencia_tiss(null);

-- Resets item sequence.
CALL tiss_common_vars_pck.reset_item_sequence();

if	((count_param_w > 0) or (qt_contas_w = 0)) and (coalesce(nr_seq_protocolo_p, 0) > 0) or (coalesce(nr_seq_med_prot_p, 0) > 0) then
	
	CALL tiss_gerar_protocolo(nr_seq_protocolo_p, nr_seq_med_prot_p, coalesce(cd_estabelecimento_w,cd_estabelecimento_p), nm_usuario_p);
end if;

if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE tiss_atualizar_prot_conta (nr_seq_protocolo_p bigint, nr_interno_conta_p bigint, nr_atendimento_p bigint, nr_seq_med_prot_p bigint, ie_somente_pendentes_p text, cd_estabelecimento_p text, nm_usuario_p text) FROM PUBLIC;

