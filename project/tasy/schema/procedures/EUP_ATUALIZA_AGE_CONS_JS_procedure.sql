-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE eup_atualiza_age_cons_js ( ds_lista_agenda_cons_p text, ds_lista_agenda_serv_p text, cd_setor_usuario_p bigint, ie_setor_prescricao_p text, dt_alta_p timestamp, dt_entrada_p timestamp, ie_data_prescricao_p text, ie_gerar_prescr_ag_lista_p text, ie_novo_atend_lista_ag_p text, cd_estabelecimento_p bigint, cd_tipo_agenda_p bigint, ie_novo_registro_p text, ds_lista_agenda_exame_p text, nr_atendimento_p bigint, nr_seq_agenda_p bigint, nm_usuario_p text, ie_limpar_variaveis_p INOUT text, nr_prescricao_p INOUT bigint) AS $body$
DECLARE


ie_evento_w		varchar(1);
dt_prescricao_w		timestamp;
nr_prescricao_w		bigint;


BEGIN
if (coalesce(nr_atendimento_p,0) > 0) then

	if (coalesce(nr_seq_agenda_p,0) > 0) then

		CALL gerar_classif_tiss_agenda(nr_atendimento_p, nr_seq_agenda_p, 'C');
	end if;
	if (ds_lista_agenda_exame_p IS NOT NULL AND ds_lista_agenda_exame_p::text <> '')	then
		CALL Atualizar_Lista_Ag_Cons_EUP(nr_atendimento_p, ds_lista_agenda_exame_p, nm_usuario_p);
	else
		if (ds_lista_agenda_cons_p IS NOT NULL AND ds_lista_agenda_cons_p::text <> '') then
			CALL Atualizar_Lista_Ag_Cons_EUP(nr_atendimento_p, ds_lista_agenda_cons_p, nm_usuario_p);
		elsif (coalesce(nr_seq_agenda_p,0) > 0) then
			CALL Atualizar_Atend_Ag_Cons_EUP(nr_atendimento_p, nr_seq_agenda_p, nm_usuario_p);
		end if;
	end if;

	if (ie_novo_registro_p = 'S') then
		CALL atualizar_espec_med_eup_agenda(nr_atendimento_p, nr_seq_agenda_p, nm_usuario_p);
	end if;

	if (coalesce(cd_tipo_agenda_p,0) in (3,4)) then -- NESTA VEIRIFICAÇÃO RETIRAMOS OS PARÂMETROS DA AGENDA ANTIGA
		ie_evento_w := obter_se_existe_evento_agenda(cd_estabelecimento_p,'GA','C');
		if (ie_evento_w = 'N') then
			CALL Atualizar_Status_Ag_Cons_EUP(nr_seq_agenda_p, 'O', nm_usuario_p);
		end if;
	end if;

	if (ie_novo_atend_lista_ag_p = 'N') then
		 CALL gerar_prescr_agenda_consulta(nr_seq_agenda_p, nm_usuario_p);
	elsif (ie_novo_atend_lista_ag_p = 'S') and (ie_gerar_prescr_ag_lista_p = 'S') and (coalesce(cd_tipo_agenda_p,0) > 0) and (coalesce(cd_tipo_agenda_p,0) <> 5) then

		if (coalesce(cd_tipo_agenda_p,0) in (3,4)) then
			CALL gerar_prescr_agenda_consulta(nr_seq_agenda_p, nm_usuario_p);
		end if;

		if (coalesce(cd_tipo_agenda_p,0) in (1,2)) then
			CALL gerar_prescricao_atend_exame(nr_atendimento_p, dt_prescricao_w, nr_seq_agenda_p, nm_usuario_p, cd_setor_usuario_p, ie_setor_prescricao_p);
		end if;
		if (ie_data_prescricao_p = 'S') then
			dt_prescricao_w := dt_entrada_p;
		elsif (ie_data_prescricao_p = 'AE') and (dt_alta_p IS NOT NULL AND dt_alta_p::text <> '') then
			dt_prescricao_w := dt_alta_p;
		else
			dt_prescricao_w := clock_timestamp();
		end if;
		CALL eup_gerar_prescr_ag_listas_js(ds_lista_agenda_cons_p, ds_lista_agenda_serv_p, cd_setor_usuario_p, ie_setor_prescricao_p, nr_seq_agenda_p, dt_prescricao_w, nr_atendimento_p, ds_lista_agenda_exame_p, nm_usuario_p);
		ie_limpar_variaveis_p := 'S';
	end if;
	select	coalesce(max(nr_prescricao),0)
	into STRICT	nr_prescricao_w
	from  	prescr_medica
	where	nr_seq_agecons = nr_seq_agenda_p;

	if (coalesce(nr_prescricao_w,0) > 0) then
		nr_prescricao_p := nr_prescricao_w;
	end if;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eup_atualiza_age_cons_js ( ds_lista_agenda_cons_p text, ds_lista_agenda_serv_p text, cd_setor_usuario_p bigint, ie_setor_prescricao_p text, dt_alta_p timestamp, dt_entrada_p timestamp, ie_data_prescricao_p text, ie_gerar_prescr_ag_lista_p text, ie_novo_atend_lista_ag_p text, cd_estabelecimento_p bigint, cd_tipo_agenda_p bigint, ie_novo_registro_p text, ds_lista_agenda_exame_p text, nr_atendimento_p bigint, nr_seq_agenda_p bigint, nm_usuario_p text, ie_limpar_variaveis_p INOUT text, nr_prescricao_p INOUT bigint) FROM PUBLIC;

