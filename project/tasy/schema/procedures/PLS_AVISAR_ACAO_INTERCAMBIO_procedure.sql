-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_avisar_acao_intercambio ( nr_seq_acao_p bigint, nr_seq_fatura_p bigint, nr_seq_lote_contest_p bigint, nr_seq_lote_discussao_p bigint, nm_usuario_p text) AS $body$
DECLARE


ds_acao_w			varchar(255);
ds_titulo_w			varchar(255);
ds_mensagem_w			varchar(255);
ds_email_origem_w		varchar(255);
ds_email_destino_w		varchar(255);
ds_unimed_origem_w		varchar(80);
nr_nota_cred_deb_w		varchar(30);
nm_usuario_dest_w		varchar(15);
ie_comunic_interna_w		varchar(1);
ie_email_w			varchar(1);
vl_fatura_w			double precision := 0;
vl_contestacao_w		double precision := 0;
vl_discussao_w			double precision := 0;
vl_aceito_w			double precision := 0;
vl_negado_w			double precision := 0;
vl_saldo_contestacao_w		double precision := 0;
vl_contestado_w			double precision := 0;
cd_perfil_w			bigint;
nr_fatura_w			ptu_fatura.nr_fatura%type;
nr_seq_regra_aviso_w 		bigint;
nr_seq_lote_contestacao_w	bigint;
nr_seq_lote_discussao_w		bigint;
nr_seq_mot_devolucao_w		bigint;
ds_motivo_dev_w			varchar(120);

C01 CURSOR FOR
	SELECT	nr_sequencia,
		ds_mensagem
	from	pls_interc_regra_aviso
	where	nr_seq_acao_interc = nr_seq_acao_p;

C02 CURSOR FOR
	SELECT	ie_comunic_interna,
		ie_email,
		cd_perfil,
		nm_usuario_dest
	from	pls_interc_regra_aviso_des
	where	nr_seq_regra_aviso = nr_seq_regra_aviso_w;


BEGIN
if (nr_seq_acao_p IS NOT NULL AND nr_seq_acao_p::text <> '') then
	select	substr(obter_valor_dominio(4289,ie_acao),1,255)
	into STRICT	ds_acao_w
	from	pls_processo_interc_acao
	where	nr_sequencia = nr_seq_acao_p;

	ds_titulo_w := 'Ação de intercâmbio - ' || ds_acao_w;

	if (nr_seq_fatura_p IS NOT NULL AND nr_seq_fatura_p::text <> '') then
		select	nr_fatura,
			vl_total_fatura,
			substr(pls_obter_desc_coop_codigo(cd_unimed_origem),1,80) ds_unimed_origem,
			nr_seq_mot_devolucao
		into STRICT	nr_fatura_w,
			vl_fatura_w,
			ds_unimed_origem_w,
			nr_seq_mot_devolucao_w
		from	ptu_fatura
		where	nr_sequencia = nr_seq_fatura_p;

		if (nr_seq_mot_devolucao_w IS NOT NULL AND nr_seq_mot_devolucao_w::text <> '') then
			select	max(ds_motivo)
			into STRICT	ds_motivo_dev_w
			from	ptu_motivo_devolucao_a500
			where	nr_sequencia = nr_seq_mot_devolucao_w;
		end if;
	end if;

	if (nr_seq_lote_contest_p IS NOT NULL AND nr_seq_lote_contest_p::text <> '') then
		select	a.nr_nota_credito_debito,
			a.nr_sequencia,
			a.vl_contestado,
			a.vl_atual
		into STRICT	nr_nota_cred_deb_w,
			nr_seq_lote_contestacao_w,
			vl_contestado_w,
			vl_saldo_contestacao_w
		from	pls_lote_contestacao a
		where	a.nr_sequencia = nr_seq_lote_contest_p;

		select	sum(a.vl_original)
		into STRICT	vl_contestacao_w
		from	pls_contestacao a
		where	a.nr_seq_lote = nr_seq_lote_contestacao_w;
	end if;

	if (nr_seq_lote_discussao_p IS NOT NULL AND nr_seq_lote_discussao_p::text <> '') then
		select	a.nr_nota_credito_debito,
			a.nr_sequencia
		into STRICT	nr_nota_cred_deb_w,
			nr_seq_lote_discussao_w
		from	pls_lote_discussao a
		where	a.nr_sequencia = nr_seq_lote_discussao_p;

		select	sum(a.vl_aceito),
			sum(a.vl_negado),
			sum(a.vl_recurso)
		into STRICT	vl_aceito_w,
			vl_negado_w,
			vl_discussao_w
		from	pls_contestacao_discussao a
		where	a.nr_seq_lote = nr_seq_lote_discussao_w;
	end if;

	open C01;
	loop
	fetch C01 into
		nr_seq_regra_aviso_w,
		ds_mensagem_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		ds_mensagem_w := substr(replace_macro(ds_mensagem_w,'@NR_FATURA',nr_fatura_w), 1, 4000);
		ds_mensagem_w := substr(replace_macro(ds_mensagem_w,'@VL_FATURA',campo_mascara_virgula(coalesce(vl_fatura_w,0))), 1, 4000);
		ds_mensagem_w := substr(replace_macro(ds_mensagem_w,'@UNIMED',ds_unimed_origem_w), 1, 4000);
		ds_mensagem_w := substr(replace_macro(ds_mensagem_w,'@NR_NOTA_CRED_DEB',nr_nota_cred_deb_w), 1, 4000);
		ds_mensagem_w := substr(replace_macro(ds_mensagem_w,'@VL_CONTESTACAO',campo_mascara_virgula(coalesce(vl_contestacao_w,0))), 1, 4000);
		ds_mensagem_w := substr(replace_macro(ds_mensagem_w,'@VL_DISCUSSAO',campo_mascara_virgula(coalesce(vl_discussao_w,0))), 1, 4000);
		ds_mensagem_w := substr(replace_macro(ds_mensagem_w,'@NR_SEQ_LOTE_CONTESTACAO',nr_seq_lote_contestacao_w), 1, 4000);
		ds_mensagem_w := substr(replace_macro(ds_mensagem_w,'@NR_SEQ_LOTE_DISCUSSAO',nr_seq_lote_discussao_w), 1, 4000);
		ds_mensagem_w := substr(replace_macro(ds_mensagem_w,'@VL_CONTESTADO',campo_mascara_virgula(coalesce(vl_contestado_w,0))), 1, 4000);
		ds_mensagem_w := substr(replace_macro(ds_mensagem_w,'@VL_ACEITO',campo_mascara_virgula(coalesce(vl_aceito_w,0))), 1, 4000);
		ds_mensagem_w := substr(replace_macro(ds_mensagem_w,'@VL_NEGADO',campo_mascara_virgula(coalesce(vl_negado_w,0))), 1, 4000);
		ds_mensagem_w := substr(replace_macro(ds_mensagem_w,'@VL_SALDO_CONTESTACAO',campo_mascara_virgula(coalesce(vl_saldo_contestacao_w,0))), 1, 4000);
		ds_mensagem_w := substr(replace_macro(ds_mensagem_w,'@MOTIVO_DEVOLUCAO_FAT',ds_motivo_dev_w), 1, 4000);

		open C02;
		loop
		fetch C02 into
			ie_comunic_interna_w,
			ie_email_w,
			cd_perfil_w,
			nm_usuario_dest_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin
			if (ie_email_w = 'S') then
				select	max(ds_email)
				into STRICT	ds_email_origem_w
				from	usuario
				where	nm_usuario = nm_usuario_p;

				select	max(ds_email)
				into STRICT	ds_email_destino_w
				from	usuario
				where	nm_usuario = nm_usuario_dest_w;

				if (ds_email_origem_w IS NOT NULL AND ds_email_origem_w::text <> '') and (ds_email_destino_w IS NOT NULL AND ds_email_destino_w::text <> '')  then
					CALL enviar_email(ds_titulo_w,ds_mensagem_w,ds_email_origem_w,ds_email_destino_w,nm_usuario_p,'M');
				end if;
			end if;

			if (ie_comunic_interna_w = 'S') then
				CALL gerar_comunic_padrao(	clock_timestamp(),
							ds_titulo_w,
							ds_mensagem_w,
							'Tasy',
							'N',
							nm_usuario_dest_w,
							'N',
							null,
							cd_perfil_w,
							null,
							null,
							clock_timestamp(),
							null,
							null);
			end if;

			end;
		end loop;
		close C02;
		end;
	end loop;
	close C01;

	--Não é para commit em procedures intermediarias
	--commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_avisar_acao_intercambio ( nr_seq_acao_p bigint, nr_seq_fatura_p bigint, nr_seq_lote_contest_p bigint, nr_seq_lote_discussao_p bigint, nm_usuario_p text) FROM PUBLIC;

