-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE baixar_dev_prescr_palmweb ( nr_devolucao_p bigint, nr_prescricao_p bigint, cd_setor_atend_p bigint, cd_local_estoque_p bigint, cd_material_p bigint, cd_motivo_devolucao_p text, cd_unidade_medida_p text, qt_material_p bigint, nr_seq_lote_fornec_p bigint, ie_gravar_p text, nm_usuario_p text) AS $body$
DECLARE

 
nr_sequencia_w		item_devolucao_material_pac.nr_sequencia%type;
qt_existe_w		bigint;
nr_seq_lote_fornec_w	material_lote_fornec.nr_sequencia%type;
cd_material_w		material.cd_material%type;
cd_unidade_medida_w	unidade_medida.cd_unidade_medida%type;
qt_material_tot_w		double precision;
qt_pendente_w		double precision;
qt_material_w		double precision;
nr_sequencia_prescr_w	prescr_material.nr_sequencia%type;
nr_prescricao_w		prescr_medica.nr_prescricao%type;
qt_mat_devol_w		w_devolucao_pda.qt_material%type;
nr_seq_atendimento_w	material_atend_paciente.nr_sequencia%type;

C01 CURSOR FOR 
	SELECT	a.nr_prescricao, 
		a.nr_sequencia_prescricao, 
		a.qt_material, 
		a.nr_sequencia 
	FROM material b, material_em_devolucao_v a
LEFT OUTER JOIN tipo_baixa_prescricao c ON (a.cd_motivo_baixa = c.cd_tipo_baixa AND a.ie_prescr_dev = c.ie_prescricao_devolucao)
WHERE a.cd_material = b.cd_material and a.nr_prescricao = nr_prescricao_p and a.cd_setor_atendimento = coalesce(cd_setor_atend_p, a.cd_setor_atendimento)   and ((qt_material < 0) or (a.cd_local_estoque IS NOT NULL AND a.cd_local_estoque::text <> '') or (c.ie_atualiza_estoque = 'N' AND c.ie_conta_paciente = 'S')) and a.cd_material = cd_material_w and ((a.nr_seq_lote_fornec = nr_seq_lote_fornec_w) or (coalesce(nr_seq_lote_fornec_w::text, '') = ''));
	
C02 CURSOR FOR 
	SELECT	cd_material, 
		cd_unidade_medida, 
		sum(qt_material), 
		nr_seq_lote_fornec 
	from	w_devolucao_pda 
	where	nr_devolucao = nr_devolucao_p 
	and	nr_prescricao = nr_prescricao_p 
	group by	cd_material, 
		cd_unidade_medida, 
		nr_seq_lote_fornec;


BEGIN 
 
update 	devolucao_material_pac set  
	cd_setor_atendimento = cd_setor_atend_p 
	where nr_devolucao = nr_devolucao_p;
commit;
 
if (ie_gravar_p = 'S') and (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') then 
	 
	if (nr_seq_lote_fornec_p IS NOT NULL AND nr_seq_lote_fornec_p::text <> '') then 
 
		select	coalesce(sum(a.qt_material),0) 
		into STRICT	qt_material_w 
		FROM material b, material_em_devolucao_v a
LEFT OUTER JOIN tipo_baixa_prescricao c ON (a.cd_motivo_baixa = c.cd_tipo_baixa AND a.ie_prescr_dev = c.ie_prescricao_devolucao)
WHERE a.cd_material = b.cd_material and a.nr_prescricao = nr_prescricao_p and a.cd_setor_atendimento = coalesce(cd_setor_atend_p, a.cd_setor_atendimento)   and ((qt_material < 0) or (a.cd_local_estoque IS NOT NULL AND a.cd_local_estoque::text <> '') or (c.ie_atualiza_estoque = 'N' AND c.ie_conta_paciente = 'S')) and a.cd_material = cd_material_p and a.nr_seq_lote_fornec = nr_seq_lote_fornec_p;
		 
		select	coalesce(sum(qt_material), 0) 
		into STRICT	qt_mat_devol_w 
		from	w_devolucao_pda 
		where	nr_devolucao = nr_devolucao_p 
		and	cd_material = cd_material_p 
		and	nr_seq_lote_fornec = nr_seq_lote_fornec_p;
		 
		if (qt_material_w > 0) and (qt_material_w >= qt_mat_devol_w) then 
			nr_seq_lote_fornec_w := nr_seq_lote_fornec_p;
		end if;
	end if;
	 
	insert into w_devolucao_pda( 
		nr_devolucao, 
		nr_prescricao, 
		cd_material, 
		qt_material, 
		cd_unidade_medida, 
		nr_seq_lote_fornec) 
	values (	nr_devolucao_p, 
		nr_prescricao_p, 
		cd_material_p, 
		qt_material_p, 
		cd_unidade_medida_p, 
		nr_seq_lote_fornec_w);
 
elsif (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') and (nr_devolucao_p IS NOT NULL AND nr_devolucao_p::text <> '') then 
	 
	open C02;
	loop 
	fetch C02 into	 
		cd_material_w, 
		cd_unidade_medida_w, 
		qt_material_tot_w, 
		nr_seq_lote_fornec_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin 
		qt_pendente_w := null;
		 
		open C01;
		loop 
		fetch C01 into	 
			nr_prescricao_w, 
			nr_sequencia_prescr_w, 
			qt_material_w, 
			nr_seq_atendimento_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin 
			 
			if (coalesce(qt_pendente_w, qt_material_tot_w) > qt_material_w) then 
 
				select	coalesce(max(nr_sequencia),0) + 1 
				into STRICT	nr_sequencia_w 
				from	item_devolucao_material_pac 
				where	nr_devolucao = nr_devolucao_p;
 
				insert into item_devolucao_material_pac( 
					nr_devolucao, 
					nr_sequencia, 
					cd_local_estoque, 
					cd_material, 
					cd_motivo_devolucao, 
					cd_unidade_medida, 
					dt_atendimento, 
					dt_atualizacao, 
					nm_usuario, 
					nm_usuario_devol, 
					qt_material, 
					nr_prescricao, 
					nr_sequencia_prescricao, 
					nr_seq_lote_fornec, 
					nr_seq_atendimento) 
				values (	nr_devolucao_p, 
					nr_sequencia_w, 
					cd_local_estoque_p, 
					cd_material_w, 
					cd_motivo_devolucao_p, 
					cd_unidade_medida_w, 
					clock_timestamp(), 
					clock_timestamp(), 
					nm_usuario_p, 
					nm_usuario_p, 
					qt_material_w, 
					nr_prescricao_w, 
					nr_sequencia_prescr_w, 
					nr_seq_lote_fornec_w, 
					nr_seq_atendimento_w);
				commit;
 
				qt_pendente_w := abs(coalesce(qt_pendente_w, qt_material_tot_w) - qt_material_w);
			 
			else 
			 
				select	coalesce(max(nr_sequencia),0) + 1 
				into STRICT	nr_sequencia_w 
				from	item_devolucao_material_pac 
				where	nr_devolucao = nr_devolucao_p;
 
				insert into item_devolucao_material_pac( 
					nr_devolucao, 
					nr_sequencia, 
					cd_local_estoque, 
					cd_material, 
					cd_motivo_devolucao, 
					cd_unidade_medida, 
					dt_atendimento, 
					dt_atualizacao, 
					nm_usuario, 
					nm_usuario_devol, 
					qt_material, 
					nr_prescricao, 
					nr_sequencia_prescricao, 
					nr_seq_lote_fornec, 
					nr_seq_atendimento) 
				values (	nr_devolucao_p, 
					nr_sequencia_w, 
					cd_local_estoque_p, 
					cd_material_w, 
					cd_motivo_devolucao_p, 
					cd_unidade_medida_w, 
					clock_timestamp(), 
					clock_timestamp(), 
					nm_usuario_p, 
					nm_usuario_p, 
					coalesce(qt_pendente_w, qt_material_tot_w), 
					nr_prescricao_w, 
					nr_sequencia_prescr_w, 
					nr_seq_lote_fornec_w, 
					nr_seq_atendimento_w);
				commit;
				 
				qt_pendente_w := 0;
 
			end if;
			 
			if (qt_pendente_w = 0) then 
				exit;
			end if;
 
			end;
		end loop;
		close C01;
		end;
	end loop;
	close C02;
	 
	delete from w_devolucao_pda 
	where nr_devolucao = nr_devolucao_p;
	 
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE baixar_dev_prescr_palmweb ( nr_devolucao_p bigint, nr_prescricao_p bigint, cd_setor_atend_p bigint, cd_local_estoque_p bigint, cd_material_p bigint, cd_motivo_devolucao_p text, cd_unidade_medida_p text, qt_material_p bigint, nr_seq_lote_fornec_p bigint, ie_gravar_p text, nm_usuario_p text) FROM PUBLIC;

