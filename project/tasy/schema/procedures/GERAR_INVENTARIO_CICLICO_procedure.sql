-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_inventario_ciclico ( nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE


/*variaveis*/

nr_seq_inventario_mat_w	bigint;
nm_usuarios_destino_w	varchar(4000);
cd_perfil_destinos_w	varchar(4000);
nm_pessoa_fisica_w	varchar(255);
ds_titulo_w		varchar(255);
ds_comunicacao_w		varchar(2000);
cd_perfil_w		integer;
nr_seq_classif_w		bigint;
cd_pessoa_resp_w		varchar(14);
nr_seq_regra_w		bigint;
nr_seq_inventario_w	inventario.nr_sequencia%type;
cd_local_estoque_w	smallint;
nm_pessoa_resp_w		varchar(255);
ds_local_estoque_w	varchar(255);

cd_grupo_material_w	smallint;
cd_subgrupo_material_w	smallint;
cd_classe_material_w	integer;
cd_material_w		integer;
ie_curva_abc_w		varchar(15);
qt_maximo_w		integer;
ie_padronizado_w		varchar(1);
ie_controlado_w 		varchar(1);
ie_ativo_w		varchar(1);
ie_somente_saldo_w	varchar(1);
qt_dias_sem_invent_w	smallint;
ie_somente_aviso_w	varchar(1);
dt_inventario_w		timestamp;
nr_seq_local_mat_w	sup_inv_ciclico_estrut.nr_seq_localizacao_mat%type;
qt_max_contagem_w	sup_inv_ciclico_regra.qt_max_contagem%type;
qt_max_definir_w		inventario.qt_max_definir%type;
qt_inv_ciclo_w		sup_inv_ciclico_estrut.qt_inv_ciclo%type;
nr_seq_ciclo_w		sup_inv_ciclico_ciclo.nr_sequencia%type;
dt_inicial_ciclo_w		sup_inv_ciclico_ciclo.dt_inicio%type;
dt_final_ciclo_w		sup_inv_ciclico_ciclo.dt_fim%type;
ie_consignado_w         sup_inv_ciclico_regra.ie_consignado%type;
cd_material_consignado_w material.cd_material_estoque%type;
cd_fornecedor_w			 fornecedor_mat_consignado.cd_fornecedor%type;
ie_consig_ambos_w		 sup_inv_ciclico_regra.ie_consig_ambos%type;
ie_sera_gerado_w    varchar(1);
nr_seq_inventario_ww    inventario.nr_sequencia%type;
ie_tipo_curva_abc_w  sup_inv_ciclico_estrut.ie_tipo_curva_abc%type;



c01 CURSOR FOR
SELECT	nr_sequencia,
	cd_pessoa_resp,
	cd_local_estoque,
	substr(obter_nome_pf(cd_pessoa_resp),1,255) nm_pessoa_fisica,
	obter_desc_local_estoque(cd_local_estoque) ds_local_estoque,
	'N' ie_somente_aviso,
	clock_timestamp() dt_inventario,
	coalesce(qt_max_contagem,4),
	qt_max_definir,
    coalesce(ie_consignado,'N'),
	coalesce(ie_consig_ambos,'N')
from	sup_inv_ciclico_regra
where	cd_estabelecimento = cd_estabelecimento_p
and	ie_situacao = 'A'
and	((coalesce(ie_dia_semana::text, '') = '' and coalesce(ie_dia_fixo_mes::text, '') = '') or
	(((ie_dia_semana IS NOT NULL AND ie_dia_semana::text <> '') and (obter_cod_dia_semana(clock_timestamp()) = ie_dia_semana)) or
	((ie_dia_fixo_mes IS NOT NULL AND ie_dia_fixo_mes::text <> '') and (to_char(clock_timestamp(),'dd') = CASE WHEN length(ie_dia_fixo_mes)=2 THEN ie_dia_fixo_mes  ELSE '0' || ie_dia_fixo_mes END ))))

union all

SELECT	nr_sequencia,
	cd_pessoa_resp,
	cd_local_estoque,
	substr(obter_nome_pf(cd_pessoa_resp),1,255) nm_pessoa_fisica,
	obter_desc_local_estoque(cd_local_estoque) ds_local_estoque,
	'S' ie_somente_aviso,
	(clock_timestamp() + qt_dias_aviso) dt_inventario_w,
	coalesce(qt_max_contagem,4),
	qt_max_definir,
    coalesce(ie_consignado,'N'),
	coalesce(ie_consig_ambos,'N')
from	sup_inv_ciclico_regra
where	cd_estabelecimento = cd_estabelecimento_p
and	ie_situacao = 'A'
and	coalesce(qt_dias_aviso,0) > 0
and	((coalesce(ie_dia_semana::text, '') = '' and coalesce(ie_dia_fixo_mes::text, '') = '') or
	(((ie_dia_semana IS NOT NULL AND ie_dia_semana::text <> '') and (obter_cod_dia_semana(clock_timestamp() + qt_dias_aviso) = ie_dia_semana)) or
	((ie_dia_fixo_mes IS NOT NULL AND ie_dia_fixo_mes::text <> '') and (to_char(clock_timestamp() + qt_dias_aviso,'dd') = CASE WHEN length(ie_dia_fixo_mes)=2 THEN ie_dia_fixo_mes  ELSE '0' || ie_dia_fixo_mes END ))));

c02 CURSOR FOR
SELECT	cd_grupo_material,
	cd_subgrupo_material,
	cd_classe_material,
	cd_material,
	coalesce(ie_curva_abc,'X'),
	qt_maximo,
	ie_padronizado,
	ie_controlado, 
	ie_somente_saldo,
	qt_dias_sem_inventario,
	nr_seq_localizacao_mat,
	qt_inv_ciclo,
    coalesce(ie_tipo_curva_abc,'E')
from	sup_inv_ciclico_estrut
where	nr_seq_regra	= nr_seq_regra_w
and	((not exists (	SELECT	1
			from	sup_inv_ciclico_ciclo
			where	nr_seq_regra = nr_seq_regra_w))
	or (trunc(clock_timestamp()) between trunc(dt_inicial_ciclo_w) and trunc(dt_final_ciclo_w)));

c03 CURSOR FOR
SELECT	cd_material_estoque
from   (SELECT	cd_material_estoque
	from   (select	a.cd_material_estoque,
			dbms_random.value(1, 5000) c
		from	estrutura_material_v b,
			material a
		where	a.cd_material = b.cd_material
		and (a.ie_consignado = '0' or (ie_consig_ambos_w = 'S' and a.ie_consignado = '2'))
        and	ie_consignado_w = 'N'
		and 	obter_se_material_estoque(cd_estabelecimento_p, NULL, a.cd_material) = 'S'
		and	substr(sup_obter_local_valido(cd_estabelecimento_p, cd_local_estoque_w, a.cd_material, '5'),1,1) = 'S'
		and (coalesce(cd_grupo_material_w, b.cd_grupo_material)		= b.cd_grupo_material)
		and (coalesce(cd_subgrupo_material_w, b.cd_subgrupo_material)	= b.cd_subgrupo_material)
		and (coalesce(cd_classe_material_w, b.cd_classe_material)	= b.cd_classe_material)
		and (coalesce(cd_material_w, b.cd_material)			= b.cd_material)
		and (coalesce(ie_padronizado_w,'N') = 'N' or substr(obter_se_material_padronizado(cd_estabelecimento_p,a.cd_material),1,1) = 'S')
		and (coalesce(ie_controlado_w,'N') = 'N' or substr(obter_se_medic_controlado(a.cd_material,cd_estabelecimento_p),1,1) = 'S')
		and (coalesce(ie_somente_saldo_w,'N') = 'N' or obter_saldo_disp_estoque(cd_estabelecimento_p,a.cd_material,cd_local_estoque_w,trunc(clock_timestamp(),'mm')) > 0)
		and (coalesce(qt_dias_sem_invent_w,0) = 0 or obter_se_material_inv_periodo(a.cd_material,cd_estabelecimento_p,cd_local_estoque_w,qt_dias_sem_invent_w) = 'N')
		and (coalesce(nr_seq_ciclo_w,0) = 0 or (obter_se_material_inv_periodo(a.cd_material,cd_estabelecimento_p,cd_local_estoque_w,trunc(clock_timestamp()) - trunc(dt_inicial_ciclo_w)) = 'N'))
		and (coalesce(qt_inv_ciclo_w,0) = 0 or obter_qt_inv_ciclo(cd_estabelecimento_p, cd_local_estoque_w, nr_seq_ciclo_w, dt_inicial_ciclo_w) < qt_inv_ciclo_w)
		and (coalesce(nr_seq_local_mat_w,0) = 0 or (a.nr_seq_localizacao = nr_seq_local_mat_w))
		and	a.ie_situacao = 'A'
		and (ie_curva_abc_w = 'X')
		and 	exists (select 	1
				from 	saldo_estoque x
				where	x.cd_material = a.cd_material_estoque
				and	x.cd_local_estoque = cd_local_estoque_w
				and	x.dt_mesano_referencia = trunc(clock_timestamp(),'mm'))
		
union all

		select	a.cd_material_estoque,
			dbms_random.value(1, 5000) c
		from	estrutura_material_v b,
			material a
		where	a.cd_material = b.cd_material
        and (a.ie_consignado = '0' or (ie_consig_ambos_w = 'S' and a.ie_consignado = '2'))
        and	ie_consignado_w = 'N'
		and 	obter_se_material_estoque(cd_estabelecimento_p, NULL, a.cd_material) = 'S'
		and	substr(sup_obter_local_valido(cd_estabelecimento_p, cd_local_estoque_w, a.cd_material, '5'),1,1) = 'S'
		and (coalesce(cd_grupo_material_w, b.cd_grupo_material)		= b.cd_grupo_material)
		and (coalesce(cd_subgrupo_material_w, b.cd_subgrupo_material)	= b.cd_subgrupo_material)
		and (coalesce(cd_classe_material_w, b.cd_classe_material)	= b.cd_classe_material)
		and (coalesce(cd_material_w, b.cd_material)			= b.cd_material)
		and (coalesce(ie_padronizado_w,'N') = 'N' or substr(obter_se_material_padronizado(cd_estabelecimento_p,a.cd_material),1,1) = 'S')
		and (coalesce(ie_controlado_w,'N') = 'N' or substr(obter_se_medic_controlado(a.cd_material,cd_estabelecimento_p),1,1) = 'S')
		and (coalesce(ie_somente_saldo_w,'N') = 'N' or obter_saldo_disp_estoque(cd_estabelecimento_p,a.cd_material,cd_local_estoque_w,trunc(clock_timestamp(),'mm')) > 0)
		and (coalesce(qt_dias_sem_invent_w,0) = 0 or obter_se_material_inv_periodo(a.cd_material,cd_estabelecimento_p,cd_local_estoque_w,qt_dias_sem_invent_w) = 'N')
		and (coalesce(nr_seq_ciclo_w,0) = 0 or (obter_se_material_inv_periodo(a.cd_material,cd_estabelecimento_p,cd_local_estoque_w,trunc(clock_timestamp()) - trunc(dt_inicial_ciclo_w)) = 'N'))
		and (coalesce(qt_inv_ciclo_w,0) = 0 or obter_qt_inv_ciclo(cd_estabelecimento_p, cd_local_estoque_w, nr_seq_ciclo_w, dt_inicial_ciclo_w) < qt_inv_ciclo_w)
		and	((ie_curva_abc_w <> 'X') and ((ie_tipo_curva_abc_w = 'E') and (ie_curva_abc_w = obter_curva_abc_estab(cd_estabelecimento_p, a.cd_material, 'N', clock_timestamp())) 
                                            or (ie_tipo_curva_abc_w = 'L') and (ie_curva_abc_w = obter_curva_abc_local(a.cd_material, 'N', cd_local_estoque_w, clock_timestamp()))))
		and (coalesce(nr_seq_local_mat_w,0) = 0 or (a.nr_seq_localizacao = nr_seq_local_mat_w))
		and	a.ie_situacao = 'A'
		and 	exists (select 	1 
				from 	saldo_estoque x
				where	x.cd_material = a.cd_material_estoque
				and	x.cd_local_estoque = cd_local_estoque_w
				and	x.dt_mesano_referencia = trunc(clock_timestamp(),'mm'))

		order by 2) alias104 
	group by cd_material_estoque
	order by trunc(dbms_random.value(1, 5000))) alias107
where	((coalesce(qt_maximo_w::text, '') = '') or (qt_maximo_w IS NOT NULL AND qt_maximo_w::text <> '' )) LIMIT (qt_maximo_w);

c04 CURSOR FOR
SELECT	substr(obter_usuario_pessoa(cd_pessoa_fisica),1,30) nm_pessoa_fisica,
	cd_perfil
from	sup_inv_ciclico_resp
where	nr_seq_regra	= nr_seq_regra_w;

c05 CURSOR FOR
	SELECT s.cd_fornecedor
	from   local_estoque               l,
		   pessoa_juridica             p,
		   fornecedor_mat_consignado   s
	where  s.cd_local_estoque = l.cd_local_estoque
		   and	ie_consignado_w = 'S'
		   and s.dt_mesano_referencia = trunc(clock_timestamp(), 'mm')
		   and s.cd_estabelecimento = cd_estabelecimento_p
	       and s.cd_fornecedor = p.cd_cgc
		   and l.cd_local_estoque = cd_local_estoque_w		
	group by l.cd_estabelecimento,
			 l.cd_local_estoque,
			 s.cd_fornecedor
	order by cd_fornecedor;

c06 CURSOR FOR
	SELECT	cd_material_estoque
	from   (
	    SELECT	a.cd_material_estoque
		from	estrutura_material_v b,
				material a
		where	a.cd_material = b.cd_material		
        and (a.ie_consignado = '1'  or (ie_consig_ambos_w = 'S' and a.ie_consignado = '2'))
        and	ie_consignado_w = 'S'
		and obter_se_material_estoque(cd_estabelecimento_p, NULL, a.cd_material) = 'S'
		and	substr(sup_obter_local_valido(cd_estabelecimento_p, cd_local_estoque_w, a.cd_material, '5'),1,1) = 'S'
		and (coalesce(cd_grupo_material_w, b.cd_grupo_material)		= b.cd_grupo_material)
		and (coalesce(cd_subgrupo_material_w, b.cd_subgrupo_material)	= b.cd_subgrupo_material)
		and (coalesce(cd_classe_material_w, b.cd_classe_material)	= b.cd_classe_material)
		and (coalesce(cd_material_w, b.cd_material)			= b.cd_material)
		and (coalesce(ie_padronizado_w,'N') = 'N' or substr(obter_se_material_padronizado(cd_estabelecimento_p,a.cd_material),1,1) = 'S')
		and (coalesce(ie_controlado_w,'N') = 'N' or substr(obter_se_medic_controlado(a.cd_material,cd_estabelecimento_p),1,1) = 'S')
		and (coalesce(ie_somente_saldo_w,'N') = 'N' or obter_saldo_estoque_consig(cd_estabelecimento_p,null,a.cd_material,cd_local_estoque_w) > 0)
		and (coalesce(qt_dias_sem_invent_w,0) = 0 or obter_se_material_inv_periodo(a.cd_material,cd_estabelecimento_p,cd_local_estoque_w,qt_dias_sem_invent_w) = 'N')
		and (coalesce(nr_seq_ciclo_w,0) = 0 or (obter_se_material_inv_periodo(a.cd_material,cd_estabelecimento_p,cd_local_estoque_w,trunc(clock_timestamp()) - trunc(dt_inicial_ciclo_w)) = 'N'))
		and (coalesce(qt_inv_ciclo_w,0) = 0 or obter_qt_inv_ciclo(cd_estabelecimento_p, cd_local_estoque_w, nr_seq_ciclo_w, dt_inicial_ciclo_w) < qt_inv_ciclo_w)
		and (coalesce(nr_seq_local_mat_w,0) = 0 or (a.nr_seq_localizacao = nr_seq_local_mat_w))
		and	a.ie_situacao = 'A'
		and (ie_curva_abc_w = 'X')
		and exists (select 	1
			from  fornecedor_mat_consignado x
			where x.cd_material = a.cd_material_estoque
			and	  x.cd_local_estoque = cd_local_estoque_w
			and	  x.dt_mesano_referencia = trunc(clock_timestamp(),'mm')
			and   x.cd_fornecedor = cd_fornecedor_w 
			and   x.cd_estabelecimento = cd_estabelecimento_p )
	
union all
		
		select	a.cd_material_estoque
		from	estrutura_material_v b,
				material a
		where	a.cd_material = b.cd_material
        and (a.ie_consignado = '1' or (ie_consig_ambos_w = 'S' and a.ie_consignado = '2'))
        and	ie_consignado_w = 'S'
		and obter_se_material_estoque(cd_estabelecimento_p, NULL, a.cd_material) = 'S'
		and	substr(sup_obter_local_valido(cd_estabelecimento_p, cd_local_estoque_w, a.cd_material, '5'),1,1) = 'S'
		and (coalesce(cd_grupo_material_w, b.cd_grupo_material)		= b.cd_grupo_material)
		and (coalesce(cd_subgrupo_material_w, b.cd_subgrupo_material)	= b.cd_subgrupo_material)
		and (coalesce(cd_classe_material_w, b.cd_classe_material)	= b.cd_classe_material)
		and (coalesce(cd_material_w, b.cd_material)			= b.cd_material)
		and (coalesce(ie_padronizado_w,'N') = 'N' or substr(obter_se_material_padronizado(cd_estabelecimento_p,a.cd_material),1,1) = 'S')
		and (coalesce(ie_controlado_w,'N') = 'N' or substr(obter_se_medic_controlado(a.cd_material,cd_estabelecimento_p),1,1) = 'S')
		and (coalesce(ie_somente_saldo_w,'N') = 'N' or obter_saldo_estoque_consig(cd_estabelecimento_p,null,a.cd_material,cd_local_estoque_w) > 0)
		and (coalesce(qt_dias_sem_invent_w,0) = 0 or obter_se_material_inv_periodo(a.cd_material,cd_estabelecimento_p,cd_local_estoque_w,qt_dias_sem_invent_w) = 'N')
		and (coalesce(nr_seq_ciclo_w,0) = 0 or (obter_se_material_inv_periodo(a.cd_material,cd_estabelecimento_p,cd_local_estoque_w,trunc(clock_timestamp()) - trunc(dt_inicial_ciclo_w)) = 'N'))
		and (coalesce(qt_inv_ciclo_w,0) = 0 or obter_qt_inv_ciclo(cd_estabelecimento_p, cd_local_estoque_w, nr_seq_ciclo_w, dt_inicial_ciclo_w) < qt_inv_ciclo_w)
		and (coalesce(nr_seq_local_mat_w,0) = 0 or (a.nr_seq_localizacao = nr_seq_local_mat_w))
		and	a.ie_situacao = 'A'
		and	((ie_curva_abc_w <> 'X') and ((ie_tipo_curva_abc_w = 'E') and (ie_curva_abc_w = obter_curva_abc_estab(cd_estabelecimento_p, a.cd_material, 'N', clock_timestamp())) 
                                            or (ie_tipo_curva_abc_w = 'L') and (ie_curva_abc_w = obter_curva_abc_local(a.cd_material, 'N', cd_local_estoque_w, clock_timestamp()))))
		and exists (select 	1 
			from  fornecedor_mat_consignado x
			where x.cd_material = a.cd_material_estoque
			and	  x.cd_local_estoque = cd_local_estoque_w
			and	  x.dt_mesano_referencia = trunc(clock_timestamp(),'mm')
			and   x.cd_fornecedor = cd_fornecedor_w 
			and   x.cd_estabelecimento = cd_estabelecimento_p )) alias98	
		group by cd_material_estoque  
		order by cd_material_estoque;


BEGIN

nr_seq_inventario_w	:= 0;

open c01;
loop
fetch c01 into
	nr_seq_regra_w,
	cd_pessoa_resp_w,
	cd_local_estoque_w,
	nm_pessoa_resp_w,
	ds_local_estoque_w,
	ie_somente_aviso_w,
	dt_inventario_w,
	qt_max_contagem_w,
	qt_max_definir_w,
    ie_consignado_w,
	ie_consig_ambos_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
    ie_sera_gerado_w := 'N';
	if (ie_somente_aviso_w = 'N') then
		begin
		nr_seq_inventario_w	:= 0;

		begin
		select	nr_sequencia,
			dt_inicio,
			dt_fim
		into STRICT	nr_seq_ciclo_w,
			dt_inicial_ciclo_w,
			dt_final_ciclo_w
		from	sup_inv_ciclico_ciclo
		where	nr_seq_regra = nr_seq_regra_w
		and	trunc(clock_timestamp()) between trunc(dt_inicio) and trunc(dt_fim);
		exception
		when others then
			nr_seq_ciclo_w	:= null;
			dt_inicial_ciclo_w	:= null;
			dt_final_ciclo_w	:= null;
		end;

		open c02;
		loop
		fetch c02 into
			cd_grupo_material_w,
			cd_subgrupo_material_w,
			cd_classe_material_w,
			cd_material_w,
			ie_curva_abc_w,
			qt_maximo_w,
			ie_padronizado_w,
			ie_controlado_w,
			ie_somente_saldo_w,
			qt_dias_sem_invent_w,
			nr_seq_local_mat_w,
			qt_inv_ciclo_w,
            ie_tipo_curva_abc_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			begin
			open c03;
			loop
			fetch c03 into
				cd_material_w;
			EXIT WHEN NOT FOUND; /* apply on c03 */
				begin					
					if (nr_seq_inventario_w = 0) then
						begin
						select	nextval('inventario_seq')
						into STRICT	nr_seq_inventario_w
						;

						insert into inventario(
							nr_sequencia,
							cd_estabelecimento,
							dt_atualizacao,
							nm_usuario,
							cd_local_estoque,
							dt_inicio,
							qt_max_contagem,
							qt_max_definir,
							ie_novo_item_barra,
							ie_consignado,
							nr_seq_inv_ciclico,
							ie_contagem_atual,
							ie_tipo_contagem,
							nr_seq_ciclo)
						values (	nr_seq_inventario_w,
							cd_estabelecimento_p,
							clock_timestamp(),
							nm_usuario_p,
							cd_local_estoque_w,
							clock_timestamp(),
							qt_max_contagem_w,
							qt_max_definir_w,
							'N',
							ie_consignado_w,
							nr_seq_regra_w,
							1,
							'I',
							nr_seq_ciclo_w);
						end;
					end if;		

					dbms_application_info.SET_ACTION('GERAR_INVENTARIO_CICLICO');

					insert into inventario_material(
						nr_sequencia,
						nr_seq_inventario,
						dt_atualizacao,
						nm_usuario,
						cd_material,
						nr_seq_inv_ciclico)
					values (	nextval('inventario_material_seq'),
						nr_seq_inventario_w,
						clock_timestamp(),
						nm_usuario_p,
						cd_material_w,
						nr_seq_regra_w);

					dbms_application_info.SET_ACTION(null);
				end;
			end loop;
			close c03;

            nr_seq_inventario_ww := nr_seq_inventario_w;

			open c05;
			loop
			fetch c05 into
				cd_fornecedor_w;
			EXIT WHEN NOT FOUND; /* apply on c05 */
			begin
				open c06;
				loop
				fetch c06 into
					cd_material_consignado_w;
				EXIT WHEN NOT FOUND; /* apply on c06 */
				begin	

				if (ie_consignado_w = 'S') then
					if (nr_seq_inventario_w = 0) then
					begin	

							select	nextval('inventario_seq')
							into STRICT	nr_seq_inventario_w
							;

							insert into inventario(
								nr_sequencia,
								cd_estabelecimento,
								dt_atualizacao,
								nm_usuario,
								cd_local_estoque,
								dt_inicio,
								qt_max_contagem,
								qt_max_definir,
								ie_novo_item_barra,
								ie_consignado,
								nr_seq_inv_ciclico,
								ie_contagem_atual,
								ie_tipo_contagem,
								nr_seq_ciclo,
								cd_fornecedor)
							values (	nr_seq_inventario_w,
								cd_estabelecimento_p,
								clock_timestamp(),
								nm_usuario_p,
								cd_local_estoque_w,
								clock_timestamp(),
								qt_max_contagem_w,
								qt_max_definir_w,
								'N',
								ie_consignado_w,
								nr_seq_regra_w,
								1,
								'I',
								nr_seq_ciclo_w,
								cd_fornecedor_w);							
								end;
                        ds_titulo_w		:= wheb_mensagem_pck.get_Texto(313200); /*'Novo inventario gerado.';*/
                        ds_comunicacao_w 	:= substr(wheb_mensagem_pck.get_texto(313201,
                        'NR_SEQ_INVENTARIO_W='|| NR_SEQ_INVENTARIO_W ||
                        ';DS_LOCAL_ESTOQUE_W='|| DS_LOCAL_ESTOQUE_W ||
                        ';DT_REF_W='|| PKG_DATE_FORMATERS.to_varchar(clock_timestamp(), 'shortDate', cd_estabelecimento_p, nm_usuario_p) ||
                        ';NM_PESSOA_RESP_W='|| NM_PESSOA_RESP_W ||
                        ';NR_SEQ_REGRA_W='|| NR_SEQ_REGRA_W),1,2000);
                        /*O inventario de numero #@NR_SEQ_INVENTARIO_W#@ foi gerado
                        Local de estoque: #@DS_LOCAL_ESTOQUE_W#@
                        Data: #@DT_REF_W#@
                        Responsavel inventario: #@NM_PESSOA_RESP_W#@
                        Regra gerada: #@NR_SEQ_REGRA_W#@.*/
                        cd_perfil_destinos_w := '';
                        nm_usuarios_destino_w := '';

                        open c04;
                        loop
                        fetch c04 into
                            nm_pessoa_fisica_w,
                            cd_perfil_w;
                        EXIT WHEN NOT FOUND; /* apply on c04 */
                            begin
                            if (cd_perfil_w IS NOT NULL AND cd_perfil_w::text <> '') then
                                cd_perfil_destinos_w		:= substr(cd_perfil_destinos_w || cd_perfil_w || ',', 1,4000);
                            end if;
                            if (nm_pessoa_fisica_w IS NOT NULL AND nm_pessoa_fisica_w::text <> '') then
                                nm_usuarios_destino_w		:= substr(nm_usuarios_destino_w || nm_pessoa_fisica_w ||  ',', 1,4000);
                            end if;
                            end;
                        end loop;
                        close c04;

                        insert into comunic_interna(
                            cd_estab_destino,					
                            dt_comunicado, 			
                            ds_titulo, 						
                            ds_comunicado, 		
                            nm_usuario,  					
                            dt_atualizacao, 
                            ie_geral,						
                            nm_usuario_destino,		
                            nr_sequencia, 					
                            ie_gerencial, 		
                            nr_seq_classif, 					
                            dt_liberacao,
                            ds_perfil_adicional)
                        values (	cd_estabelecimento_p,				
                            clock_timestamp(), 			
                            ds_titulo_w, 					
                            ds_comunicacao_w, 	
                            substr(CASE WHEN coalesce(obter_usuario_pessoa(cd_pessoa_resp_w),'X')='X' THEN 'Tasy'  ELSE obter_usuario_pessoa(cd_pessoa_resp_w) END ,1,15),	
                            clock_timestamp(), 
                            'N', 			
                            nm_usuarios_destino_w,		
                            nextval('comunic_interna_seq'), 
                            'N', 			
                            nr_seq_classif_w, 				
                            clock_timestamp(),
                            cd_perfil_destinos_w);
                        commit;
                    end if;

                    insert into inventario_material(
							nr_sequencia,
							nr_seq_inventario,
							dt_atualizacao,
							nm_usuario,
							cd_material,
							nr_seq_inv_ciclico,
							cd_fornecedor)
						values (	nextval('inventario_material_seq'),
							nr_seq_inventario_w,
							clock_timestamp(),
							nm_usuario_p,
							cd_material_consignado_w,
							nr_seq_regra_w,
							cd_fornecedor_w);
                end if;	
                end;
                end loop;
                close c06;
                nr_seq_inventario_w := 0;
		end;
		end loop;
		close c05;

			end;
		end loop;
		close c02;

		ds_titulo_w		:= wheb_mensagem_pck.get_Texto(313200); /*'Novo inventario gerado.';*/
		ds_comunicacao_w 	:= substr(wheb_mensagem_pck.get_texto(313201,
						'NR_SEQ_INVENTARIO_W='|| nr_seq_inventario_ww ||
						';DS_LOCAL_ESTOQUE_W='|| DS_LOCAL_ESTOQUE_W ||
						';DT_REF_W='|| PKG_DATE_FORMATERS.to_varchar(clock_timestamp(), 'shortDate', cd_estabelecimento_p, nm_usuario_p) ||
						';NM_PESSOA_RESP_W='|| NM_PESSOA_RESP_W ||
						';NR_SEQ_REGRA_W='|| NR_SEQ_REGRA_W),1,2000);
						/*O inventario de numero #@NR_SEQ_INVENTARIO_W#@ foi gerado
						Local de estoque: #@DS_LOCAL_ESTOQUE_W#@
						Data: #@DT_REF_W#@
						Responsavel inventario: #@NM_PESSOA_RESP_W#@
						Regra gerada: #@NR_SEQ_REGRA_W#@.*/
		end;
	else
		begin
        ie_sera_gerado_w := 'S';
		ds_titulo_w		:= wheb_mensagem_pck.get_Texto(313202); /*'Novo inventario sera gerado.';*/
		ds_comunicacao_w 	:= substr(wheb_mensagem_pck.get_texto(313203,
						'DS_LOCAL_ESTOQUE_W='|| DS_LOCAL_ESTOQUE_W ||
						';DT_INVENTARIO_W='|| DT_INVENTARIO_W ||
						';NM_PESSOA_RESP_W='|| NM_PESSOA_RESP_W ||
						';NR_SEQ_REGRA_W='|| NR_SEQ_REGRA_W),1,2000);
						/*Um inventario ciclico sera gerado.
						Local de estoque: #@DS_LOCAL_ESTOQUE_W#@
						Data: #@DT_INVENTARIO_W#@
						Responsavel inventario: #@NM_PESSOA_RESP_W#@
						Regra: #@NR_SEQ_REGRA_W#@*/
		end;
	end if;

	if (ie_sera_gerado_w = 'S' or nr_seq_inventario_ww > 0) then
        cd_perfil_destinos_w := '';
        nm_usuarios_destino_w := '';

        open c04;
        loop
        fetch c04 into
            nm_pessoa_fisica_w,
            cd_perfil_w;
        EXIT WHEN NOT FOUND; /* apply on c04 */
            begin
            if (cd_perfil_w IS NOT NULL AND cd_perfil_w::text <> '') then
                cd_perfil_destinos_w		:= substr(cd_perfil_destinos_w || cd_perfil_w || ',', 1,4000);
            end if;
            if (nm_pessoa_fisica_w IS NOT NULL AND nm_pessoa_fisica_w::text <> '') then
                nm_usuarios_destino_w		:= substr(nm_usuarios_destino_w || nm_pessoa_fisica_w ||  ',', 1,4000);
            end if;
            end;
        end loop;
        close c04;

        insert into comunic_interna(
            cd_estab_destino,					
            dt_comunicado, 			
            ds_titulo, 						
            ds_comunicado, 		
            nm_usuario,  					
            dt_atualizacao, 
            ie_geral,						
            nm_usuario_destino,		
            nr_sequencia, 					
            ie_gerencial, 		
            nr_seq_classif, 					
            dt_liberacao,
            ds_perfil_adicional)
        values (	cd_estabelecimento_p,				
            clock_timestamp(), 			
            ds_titulo_w, 					
            ds_comunicacao_w, 	
            substr(CASE WHEN coalesce(obter_usuario_pessoa(cd_pessoa_resp_w),'X')='X' THEN 'Tasy'  ELSE obter_usuario_pessoa(cd_pessoa_resp_w) END ,1,15),	
            clock_timestamp(), 
            'N', 			
            nm_usuarios_destino_w,		
            nextval('comunic_interna_seq'), 
            'N', 			
            nr_seq_classif_w, 				
            clock_timestamp(),
            cd_perfil_destinos_w);
        commit;
    end if;
	end;
end loop;
close c01;

commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_inventario_ciclico ( nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

