-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_acompanhante_saida ( nr_atendimento_p bigint, dt_entrada_p timestamp, nm_usuario_p text, nr_seq_acomp_paciente_p bigint default null) AS $body$
DECLARE

 
nm_acompanhante_w	varchar(100);
nm_paciente_w		varchar(100);
nr_seq_paciente_w	atendimento_visita.nr_sequencia%type;
				

BEGIN 
 
if (coalesce(nr_atendimento_p,0) > 0) then 
	update	atendimento_acompanhante 
	set	dt_saida 	 = clock_timestamp(), 
		dt_atualizacao  = clock_timestamp(), 
		nm_usuario 	 = nm_usuario_p, 
		nm_usuario_saida = nm_usuario_p 
	where 	nr_atendimento  = nr_atendimento_p 
	and	dt_acompanhante = dt_entrada_p 
	and	coalesce(dt_saida::text, '') = '';
	 
	select max(substr(coalesce(obter_nome_pf(cd_pessoa_fisica),nm_acompanhante),1,90)) 
	into STRICT	nm_acompanhante_w 
	from	atendimento_acompanhante 
	where  nr_atendimento = nr_atendimento_p 
	and	trunc(dt_acompanhante) = trunc(dt_entrada_p);
 
	if (nm_acompanhante_w IS NOT NULL AND nm_acompanhante_w::text <> '') then 
	 
		insert into log_mov(	dt_atualizacao, 
					nm_usuario, 
					cd_log, 
					ds_log) 
		values (	clock_timestamp(), 
					wheb_usuario_pck.get_nm_usuario, 
					88924, 
					wheb_mensagem_pck.get_texto(803396) || chr(13) || 
					wheb_mensagem_pck.get_texto(803408) || ': ' || nm_acompanhante_w || chr(13) || 
					wheb_mensagem_pck.get_texto(307420) || ': ' || nr_atendimento_p);
 
	end if;
elsif (nr_seq_acomp_paciente_p IS NOT NULL AND nr_seq_acomp_paciente_p::text <> '') then 
	update	acompanhante_paciente 
	set	dt_saida_real	= clock_timestamp(), 
		dt_atualizacao	= clock_timestamp(), 
		nm_usuario	= nm_usuario_p 
	where 	nr_sequencia	= nr_seq_acomp_paciente_p 
	and	coalesce(dt_saida_real::text, '') = '';
	 
	select max(substr(coalesce(obter_nome_pf(cd_pessoa_fisica),nm_visitante),1,90)), 
		max(nr_seq_paciente) 
	into STRICT	nm_acompanhante_w, 
		nr_seq_paciente_w 
	from	acompanhante_paciente 
	where  nr_sequencia	= nr_seq_acomp_paciente_p;
	 
	select max(substr(coalesce(obter_nome_pf(cd_pessoa_fisica),nm_visitante),1,90)) 
	into STRICT	nm_paciente_w 
	from	atendimento_visita 
	where  nr_sequencia = nr_seq_paciente_w;
	 
	if (nm_acompanhante_w IS NOT NULL AND nm_acompanhante_w::text <> '') then 
	 
		insert into log_mov(	dt_atualizacao, 
					nm_usuario, 
					cd_log, 
					ds_log) 
		values (	clock_timestamp(), 
					wheb_usuario_pck.get_nm_usuario, 
					88924, 
					wheb_mensagem_pck.get_texto(803396) || chr(13) || 
					wheb_mensagem_pck.get_texto(803408) || ': ' || nm_acompanhante_w || chr(13) || 
					wheb_mensagem_pck.get_texto(803413) || ': ' || nm_paciente_w);
 
	end if;
end if;	
	 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_acompanhante_saida ( nr_atendimento_p bigint, dt_entrada_p timestamp, nm_usuario_p text, nr_seq_acomp_paciente_p bigint default null) FROM PUBLIC;

