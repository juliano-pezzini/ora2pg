-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE forcar_horario_livre_agecons (cd_agenda_p bigint, dt_horario_p timestamp, nr_minuto_duracao_p bigint, ie_classif_forcar_p text, ds_observacao_p text, nm_usuario_p text) AS $body$
DECLARE

 
cd_estabelecimento_w	smallint;
ie_consistir_forcado_w	varchar(1):= 'N';
qt_consistir_forcado_w	smallint:= 0;
nr_sequencia_w		bigint;
cd_turno_w		varchar(1);
nr_seq_hora_w		bigint;


BEGIN 
 
if (cd_agenda_p IS NOT NULL AND cd_agenda_p::text <> '') and (dt_horario_p IS NOT NULL AND dt_horario_p::text <> '') and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') then 
 
	select	max(coalesce(cd_estabelecimento,1)) 
	into STRICT	cd_estabelecimento_w 
	from	agenda 
	where	cd_agenda = cd_agenda_p;
 
	select	obter_valor_param_usuario(898, 58, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w) 
	into STRICT	ie_consistir_forcado_w 
	;
 
	if (ie_consistir_forcado_w = 'S')	then 
		select	count(*) 
		into STRICT	qt_consistir_forcado_w 
		from	agenda_consulta 
		where	cd_agenda = cd_agenda_p 
		and	trunc(dt_agenda,'dd') = trunc(dt_horario_p,'dd') 
		and 	dt_agenda > dt_horario_p 
		and 	dt_agenda < dt_horario_p + nr_minuto_duracao_p / 1440;
	end if;
 
	if (qt_consistir_forcado_w = 0) then 
 
		select	obter_turno_horario_agenda(cd_agenda_p, to_char(dt_horario_p,'hh24:mi')) 
		into STRICT	cd_turno_w 
		;
 
		select	coalesce(max(nr_seq_hora),0)+1 
		into STRICT	nr_seq_hora_w 
		from	agenda_consulta 
		where	cd_agenda = cd_agenda_p 
		and	dt_agenda = dt_horario_p;
 
		select	nextval('agenda_consulta_seq') 
		into STRICT	nr_sequencia_w 
		;
 
		insert into agenda_consulta( 
					nr_sequencia, 
					cd_agenda, 
					dt_agenda, 
					nr_minuto_duracao, 
					ie_status_agenda, 
					ie_classif_agenda, 
					dt_atualizacao, 
					nm_usuario, 
					cd_turno, 
					nr_seq_hora, 
					nm_usuario_horario, 
					ds_observacao) 
		values ( 
					nr_sequencia_w, 
					cd_agenda_p, 
					dt_horario_p, 
					nr_minuto_duracao_p, 
					'LF', 
					CASE WHEN coalesce(ie_classif_forcar_p::text, '') = '' THEN  'N'  ELSE ie_classif_forcar_p END , 
					clock_timestamp(), 
					nm_usuario_p, 
					cd_turno_w, 
					nr_seq_hora_w, 
					nm_usuario_p, 
					ds_observacao_p);
 
	elsif (qt_consistir_forcado_w > 0) then 
		--(-20011,'O horário sobrepõe o horário ao próximo horário. #@#@'); 
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(263643);
	end if;
end if;
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE forcar_horario_livre_agecons (cd_agenda_p bigint, dt_horario_p timestamp, nr_minuto_duracao_p bigint, ie_classif_forcar_p text, ds_observacao_p text, nm_usuario_p text) FROM PUBLIC;

