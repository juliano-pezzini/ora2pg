-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_lanc_orc_automatico ( NR_ATENDIMENTO_P bigint, nr_seq_orcamento_p bigint, NR_SEQ_EVENTO_P bigint, nr_seq_item_p bigint, NM_USUARIO_P text, nr_seq_medicacao_p bigint default null, cd_protocolo_p bigint default null, ds_dia_ciclo_p text default null) AS $body$
DECLARE


/*
Se evento for diferente de Evolu? M?ca (10)
nr_sequencia_p - sequ?ia do ProPaci;
sen?nr_sequencia_p - sequ?ia da Evolu?;
*/
cd_estabelecimento_w		smallint;
cd_convenio_w			integer;
cd_categoria_w			varchar(10);
ie_Medico_atendimento_w		varchar(1);
ie_Local_Estoque_w		varchar(1);
cd_cgc_w			varchar(14);
cd_procedimento_w          		bigint	:= 0;
ie_origem_proced_w		bigint	:= 0;
cd_material_w      			integer		:= 0;
nr_sequencia_w         		bigint	:= 0;
nr_seq_regra_w         		bigint	:= 0;
cd_unid_medida_w			varchar(30);
cd_medico_executor_w		varchar(10);
cd_setor_regra_w			integer	:= 0;
qt_lancamento_w			double precision	:= 0;

cd_proc_propaci_w			bigint;
nr_seq_exame_w			bigint;
cd_area_proc_w			bigint;
cd_especial_proc_w		bigint;
cd_grupo_proc_w			bigint;
dt_execucao_w			timestamp;
cd_edicao_amb_w			integer;
qt_proc_alta_w			integer;
qt_mat_alta_w			integer;
qt_procedimento_w			double precision 	:= 1;
ie_tipo_convenio_w			smallint;
qt_reg_w				bigint;
ie_funcao_medico_w		smallint;
ie_origem_proc_w			bigint;
qt_material_w			integer;
tx_procedimento_w			double precision;
nr_seq_proc_interno_w		bigint;
ie_dispara_kit_w			varchar(01);
cd_kit_material_w			bigint;
cd_medico_w			varchar(10);
ie_tipo_atendimento_w		smallint	:= 0;
nr_seq_item_w			bigint;
nr_seq_proc_int_w			bigint;
dt_atual_trunc_w			timestamp		:= trunc(clock_timestamp());

ie_lado_w			varchar(01)	:= 'X';
ie_adic_orcamento_w		varchar(1);

ie_autorizacao_w			varchar(5);
ie_verifica_se_pacote_w		varchar(1);
nr_seq_pacote_w			bigint;
ie_consiste_duplicidade_w		varchar(1);
cd_plano_w			orcamento_paciente.cd_plano%type;
cd_tipo_acomodacao_w		orcamento_paciente.cd_tipo_acomodacao%type;
nr_seq_proc_interno_aux_w		bigint;
ds_ret_w				bigint;
ds_erro_ww			varchar(255);
ie_situacao_w   varchar(1);

cd_funcao_w			regra_Lanc_Automatico.cd_funcao%type;
nr_seq_classificacao_w 		classificacao_atendimento.nr_sequencia%type;

cd_setor_atendimento_w  	ORCAMENTO_PACIENTE_PROC.cd_setor_atendimento%type;
cd_setor_orcamento_w 		regra_Lanc_Aut_pac.cd_setor_orcamento%type;
ie_clinica_w			atendimento_paciente.ie_clinica%type;

cd_motivo_alta_w		atendimento_paciente.cd_motivo_alta%type := 0;
ie_carater_atend_w		orcamento_paciente.ie_carater_inter_sus%type;
dia_semana_w			smallint	:= 0;
dt_orcamento_w			orcamento_paciente.dt_orcamento%type;
ie_dia_feriado_w		varchar(1) := 'N';
cd_procedencia_w		ATENDIMENTO_PACIENTE.cd_procedencia%type := 0;
nr_seq_forma_laudo_w		atendimento_paciente.nr_seq_forma_laudo%type;
cd_municipio_ibge_w		compl_pessoa_fisica.cd_municipio_ibge%type := 'X';
cd_pessoa_fisica_w		pessoa_fisica.cd_pessoa_fisica%type;
qt_reg_ibge_w			bigint;
ie_credenciado_w		varchar(1);
cd_medico_filtro_w		orcamento_paciente.cd_medico%type;
cd_tipo_anestesia_w		orcamento_paciente.ie_tipo_anestesia%type;
ie_regra_w			orcamento_paciente_proc.ie_regra_plano%type;

c00 CURSOR( nr_seq_orcamento_pc bigint, nr_seq_orc_proc_pc bigint) FOR
	SELECT	b.cd_grupo_proc,
		b.cd_especialidade,
		b.cd_area_procedimento,
		a.cd_procedimento,
		a.ie_origem_proced,
		a.nr_seq_exame,
		coalesce(a.nr_seq_proc_interno, 0) nr_seq_proc_interno,
		a.nr_sequencia,
		coalesce(a.ie_lado,'X') ie_lado,
		a.cd_setor_atendimento,
		a.cd_medico
	from	estrutura_procedimento_v b,
		orcamento_paciente_proc  a
	where	a.nr_sequencia_orcamento	= nr_seq_orcamento_pc
	and	a.cd_procedimento		= b.cd_procedimento
	and	a.ie_origem_proced		= b.ie_origem_proced
	and	a.nr_sequencia	= coalesce(nr_seq_orc_proc_pc, a.nr_sequencia);

C01 CURSOR FOR
SELECT a.nr_sequencia,
	a.cd_setor_atendimento
from 	regra_Lanc_Automatico a
where	1=1
and     a.cd_estabelecimento				= cd_estabelecimento_w
and	coalesce(a.cd_convenio, cd_convenio_w)		= cd_convenio_w
and	coalesce(a.ie_tipo_convenio, ie_tipo_convenio_w)	= ie_tipo_convenio_w
and (a.nr_seq_evento				= nr_seq_evento_p)
and (coalesce(a.cd_procedimento,cd_proc_propaci_w)	= cd_proc_propaci_w or coalesce(cd_proc_propaci_w::text, '') = '')
and (coalesce(a.ie_origem_proced,ie_origem_proc_w)	= ie_origem_proc_w or coalesce(ie_origem_proc_w::text, '') = '')
and (coalesce(a.cd_area_procedimento,cd_area_proc_w)	= cd_area_proc_w 	or coalesce(cd_area_proc_w::text, '') = '')
and (coalesce(a.cd_especialidade_proc,cd_especial_proc_w)= cd_especial_proc_w or coalesce(cd_especial_proc_w::text, '') = '')
and (coalesce(a.cd_grupo_proc,cd_grupo_proc_w)		= cd_grupo_proc_w or coalesce(cd_grupo_proc_w::text, '') = '')
and	((coalesce(a.cd_edicao_amb,cd_edicao_amb_w)		= cd_edicao_amb_w) or (coalesce(cd_edicao_amb_w::text, '') = ''))
and	coalesce(a.nr_seq_exame,coalesce(nr_seq_exame_w,0))	= coalesce(nr_seq_exame_w,0)
and	coalesce(a.nr_seq_classificacao,coalesce(nr_seq_classificacao_w,0))	= coalesce(nr_seq_classificacao_w,0)
and	coalesce(a.cd_categoria, cd_categoria_w)		= cd_categoria_w
and	coalesce(a.cd_motivo_alta, coalesce(cd_motivo_alta_w,0))		= coalesce(cd_motivo_alta_w,0)
and (coalesce(a.nr_seq_proc_interno, coalesce(nr_seq_proc_interno_w,0)) 	= coalesce(nr_seq_proc_interno_w,0))
and	coalesce(cd_plano_convenio, coalesce(cd_plano_w,'0'))	= coalesce(cd_plano_w,'0')
and 	coalesce(ie_clinica, coalesce(ie_clinica_w,0)) = coalesce(ie_clinica_w,0)
and 	coalesce(cd_tipo_acomodacao,coalesce(cd_tipo_acomodacao_w,0)) = coalesce(cd_tipo_acomodacao_w,0)
and (coalesce(a.ie_carater_inter, coalesce(ie_carater_atend_w, 0))	= coalesce(ie_carater_atend_w, 0))
and	((coalesce(dt_dia_semana, dia_semana_w) = dia_semana_w) or (dt_dia_semana = 9))
and (coalesce(ie_feriado,'N')	= 'N' or coalesce(ie_feriado,'N') = ie_dia_feriado_w)
and (coalesce(cd_procedencia,coalesce(cd_procedencia_w,0))	= coalesce(cd_procedencia_w,0))
and (coalesce(nr_seq_forma_laudo, coalesce(nr_seq_forma_laudo_w,0)) = coalesce(nr_seq_forma_laudo_w,0) )
and (coalesce(cd_municipio_ibge,cd_municipio_ibge_w) = cd_municipio_ibge_w)
and (coalesce(dt_orcamento_w, clock_timestamp()) between
			pkg_date_utils.Get_DateTime(coalesce(dt_orcamento_w, clock_timestamp()), coalesce(hr_inicial, pkg_date_utils.get_Time(00,00,00)))
					and
			pkg_date_utils.Get_DateTime(coalesce(dt_orcamento_w, clock_timestamp()), coalesce(hr_final, pkg_date_utils.get_Time(23,59,59))))
and (coalesce(a.cd_medico, coalesce(cd_medico_w,'0')) =  coalesce(cd_medico_w,'0'))
and (coalesce(a.ie_tipo_atendimento, coalesce(ie_tipo_atendimento_w,0)) =  coalesce(ie_tipo_atendimento_w,0))
and	((coalesce(ie_lado_w, 'X')	= 'X') or (coalesce(ie_lado, ie_lado_w) = ie_lado_w))
and	qt_reg_w					= 0
and	ie_situacao					= 'A'
and	dt_atual_trunc_w between coalesce(dt_inicio_vigencia,dt_atual_trunc_w) and fim_dia(coalesce(dt_final_vigencia,dt_atual_trunc_w))
and	coalesce(a.cd_funcao,cd_funcao_w)  = cd_funcao_w
and 	((coalesce(cd_setor_atendimento_w::text, '') = '') or (coalesce(a.cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0)) = coalesce(cd_setor_atendimento_w,0)))
and 	((coalesce(a.ie_credenciado,'T') = 'T') or (a.ie_credenciado 	= ie_credenciado_w ))
and	((coalesce(a.cd_tipo_anestesia::text, '') = '') or (coalesce(cd_tipo_anestesia_w::text, '') = '') or (a.cd_tipo_anestesia = cd_tipo_anestesia_w))
and	((obter_se_contido_char(coalesce(ds_dia_ciclo,'0'),coalesce(ds_dia_ciclo_p, '0')) = 'S')
	or (nr_seq_evento_p <> 192)
	or (obter_se_contido_char(coalesce(ds_dia_ciclo,'0'),'0') = 'S'))
and 	(nr_seq_evento_p <> 192 or
	((coalesce(a.cd_protocolo::text, '') = '' or a.cd_protocolo = coalesce(cd_protocolo_p, 0))
	and (coalesce(a.nr_seq_medicacao::text, '') = '' or a.nr_seq_medicacao = coalesce(nr_seq_medicacao_p, 0))))
order by
	coalesce(a.cd_medico,0),
	coalesce(a.cd_setor_atendimento,0),
	coalesce(a.ie_tipo_atendimento,0),
	coalesce(a.cd_convenio,0),
	coalesce(a.ie_tipo_convenio,0),
	coalesce(a.cd_edicao_amb,0),
	coalesce(a.nr_Seq_proc_interno,0),
	coalesce(a.cd_procedimento,0),
	coalesce(a.cd_grupo_proc,0),
	coalesce(a.cd_especialidade_proc,0),
	coalesce(a.cd_area_procedimento,0),
	coalesce(a.nr_seq_exame,0),
	coalesce(a.ie_clinica,0),
	coalesce(a.ie_lado,' '),
	coalesce(a.cd_funcao,0),
	coalesce(a.cd_plano_convenio,'0'),
	coalesce(cd_procedencia,0);

C02 CURSOR FOR
	SELECT 	a.cd_procedimento,
		a.ie_origem_proced,
		a.nr_seq_exame,
		a.cd_material,
		substr(obter_dados_material_estab(a.cd_material,cd_estabelecimento_w,'UMS'),1,30) cd_unidade_medida_consumo,
		CASE WHEN a.ie_quantidade='I' THEN  coalesce(qt_lancamento,1)  ELSE coalesce(qt_lancamento,1) * qt_procedimento_w END ,
		coalesce(a.ie_medico_atendimento,'N'),
		coalesce(a.ie_local_estoque,'N'),
		coalesce(a.ie_funcao_medico,0),
		coalesce(a.tx_procedimento,100),
		0,
		coalesce(a.ie_adic_orcamento,'N'),
		coalesce(coalesce(a.cd_setor_orcamento,a.cd_setor_item),cd_setor_atendimento_w)
	from 	material b, regra_Lanc_Aut_pac a
	where	a.nr_seq_regra  	= nr_seq_regra_w
	and	nr_seq_regra_w 	<> 0
	and	b.ie_situacao 	= 'A'
	and	(a.cd_material IS NOT NULL AND a.cd_material::text <> '')
	and	a.cd_material 	= b.cd_material
	and	qt_reg_w		= 0
	
union all

	SELECT	cd_procedimento,
		ie_origem_proced,
		nr_seq_exame,
		cd_material,
		'XX',
		CASE WHEN ie_quantidade='I' THEN  coalesce(qt_lancamento,1)  ELSE coalesce(qt_lancamento,1) * qt_procedimento_w END ,
		coalesce(ie_medico_atendimento,'N'),
		coalesce(ie_local_estoque,'N'),
		coalesce(ie_funcao_medico,0),
		coalesce(tx_procedimento,100),
		nr_seq_proc_interno,
		coalesce(ie_adic_orcamento,'N'),
		coalesce(coalesce(cd_setor_orcamento,cd_setor_item),cd_setor_atendimento_w)
	from 	regra_Lanc_Aut_pac
	where	nr_seq_regra  	= nr_seq_regra_w
	and	nr_seq_regra_w <> 0
	and	((cd_procedimento IS NOT NULL AND cd_procedimento::text <> '' AND ie_origem_proced IS NOT NULL AND ie_origem_proced::text <> '') or (nr_seq_proc_interno IS NOT NULL AND nr_seq_proc_interno::text <> '') or (nr_seq_exame IS NOT NULL AND nr_seq_exame::text <> ''))
	and	qt_reg_w		= 0;
BEGIN

nr_seq_regra_w			:= 0;
ie_lado_w			:= 'X';

begin


select 	a.cd_estabelecimento,
	b.cd_cgc,
	a.cd_convenio,
	c.ie_tipo_convenio,
	a.cd_categoria,
	a.cd_medico,
	a.cd_plano,
	a.cd_tipo_acomodacao,
	a.nr_seq_classificacao,
	a.dt_orcamento,
	a.ie_clinica,
	a.ie_carater_inter_sus,
	a.cd_procedencia,
	a.cd_pessoa_fisica,
	a.cd_setor_atendimento,
	a.ie_tipo_atendimento,
	a.ie_tipo_anestesia
into STRICT	cd_estabelecimento_w,
	cd_cgc_w,
	cd_convenio_w,
	ie_tipo_convenio_w,
	cd_categoria_w,
	cd_medico_w,
	cd_plano_w,
	cd_tipo_acomodacao_w,
	nr_seq_classificacao_w,
	dt_orcamento_w,
	ie_clinica_w,
	ie_carater_atend_w,
	cd_procedencia_w,
	cd_pessoa_fisica_w,
	cd_setor_atendimento_w,
	ie_tipo_atendimento_w,
	cd_tipo_anestesia_w
from 	estabelecimento b,
	convenio c,
	orcamento_paciente a
where	a.cd_estabelecimento		= b.cd_estabelecimento
and	c.cd_convenio			= a.cd_convenio
and	a.nr_sequencia_orcamento	= nr_seq_orcamento_p;
exception
	when others then
		cd_estabelecimento_w := 9999;
end;

dia_semana_w 	:= pkg_date_utils.get_WeekDay(coalesce(dt_orcamento_w, clock_timestamp()));

/* obter feriado */

begin
select 	'S'
into STRICT 	ie_dia_feriado_w
from 	feriado
where 	cd_estabelecimento 			= cd_estabelecimento_w
and 	to_char(dt_feriado,'dd/mm/yyyy')  	= to_char(coalesce(dt_orcamento_w, clock_timestamp()),'dd/mm/yyyy');
exception
            when others then
		ie_dia_feriado_w	:= 'N';
end;

if (coalesce(nr_atendimento_p,0) > 0) then
	select 	max(a.cd_motivo_alta),
		max(a.nr_seq_forma_laudo)
	into STRICT	cd_motivo_alta_w,
		nr_seq_forma_laudo_w
	from 	atendimento_paciente 	  a
	where 	a.nr_atendimento   = nr_atendimento_p;
end if;


begin
select	count(1)
into STRICT	qt_reg_ibge_w
from	regra_lanc_automatico
where	nr_seq_evento = nr_seq_evento_p
and	(cd_municipio_ibge IS NOT NULL AND cd_municipio_ibge::text <> '')  LIMIT 1;
exception
when others then
	qt_reg_ibge_w := 0;
end;

if (qt_reg_ibge_w > 0) then
	begin

	begin
	select	coalesce(max(c.cd_municipio_ibge),'X')
	into STRICT	cd_municipio_ibge_w
	from	pessoa_fisica b,
		compl_pessoa_fisica c
	where	b.cd_pessoa_fisica	= cd_pessoa_fisica_w
	and	b.cd_pessoa_fisica	= c.cd_pessoa_fisica
	and	c.ie_tipo_complemento	= 1;
	exception
	when others then
		cd_municipio_ibge_w := 'X';
	end;

	end;
end if;


/*	Entrada do paciente no setor */

qt_reg_w		:= 0;

dt_execucao_w	:= clock_timestamp();

ie_verifica_se_pacote_w := coalesce(Obter_Valor_Param_Usuario(106, 79, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w),'N');
ie_consiste_duplicidade_w 	:= coalesce(obter_valor_param_usuario(106, 85, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w),'N');
ie_dispara_kit_w		:= coalesce(Obter_Valor_Param_Usuario(106,  9, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w),'N');

/*select	nvl(max(Obter_Valor_Param_Usuario(106, 9, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w)), 'N')
into	ie_dispara_kit_w
from	dual;*/
/* Ricardo 13/11/2006

select	max(cd_edicao_amb)
into	cd_edicao_amb_w
from	convenio_amb
where	(cd_estabelecimento	= cd_estabelecimento_w)
  and	(cd_convenio		= cd_convenio_w)
  and	(cd_categoria		= cd_categoria_w)
  and	(nvl(ie_situacao,'A')	= 'A')
  and	(dt_inicio_vigencia	=
	(select max(dt_inicio_vigencia)
	from	convenio_amb a
	where	(a.cd_estabelecimento	= cd_estabelecimento_w)
	and	(a.cd_convenio		= cd_convenio_w)
	and	(a.cd_categoria		= cd_categoria_w)
	and	(nvl(a.ie_situacao,'A')	= 'A')
	and	(a.dt_inicio_vigencia	<= dt_execucao_w)));
*/
begin


cd_funcao_w	:=	coalesce(Obter_Funcao_Ativa,0);

select	obter_edicao(cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, dt_execucao_w, null)
into STRICT	cd_edicao_amb_w
;
exception
	when others then
		select	max(cd_edicao_amb)
		into STRICT	cd_edicao_amb_w
		from	convenio_amb
		where	cd_estabelecimento	= cd_estabelecimento_w
		  and	cd_convenio		= cd_convenio_w
		  and	cd_categoria		= cd_categoria_w
		  and (coalesce(ie_situacao,'A')	= 'A')
		  and	dt_inicio_vigencia	=
			(SELECT	max(a.dt_inicio_vigencia)
			from	convenio_amb a
			where	a.cd_estabelecimento  = cd_estabelecimento_w
			and	a.cd_convenio         = cd_convenio_w
			and	a.cd_categoria        = cd_categoria_w
			and (coalesce(a.ie_situacao,'A')= 'A')
			and	a.dt_inicio_vigencia <=  dt_execucao_w);
end;

if (NR_SEQ_EVENTO_P in (612, 192)) then /*Apos gerar Orcamento*/
	select 	obter_se_medico_credenciado(	cd_estabelecimento_w,
						cd_medico_w,
						cd_convenio_w,
						null,
						null,
						cd_categoria_w,
						cd_setor_atendimento_w,
						cd_plano_w,
						null,
						ie_tipo_atendimento_w,
						null,
						ie_carater_atend_w )
	into STRICT	ie_credenciado_w
	;


	for RLA in C01 loop
		nr_sequencia_w 	 := RLA.nr_sequencia;
		cd_setor_regra_w := RLA.cd_setor_atendimento;
		nr_seq_regra_w 	 := RLA.nr_sequencia;
	end loop;
else
	cd_setor_orcamento_w 	:= cd_setor_atendimento_w;

	for PROC_ORCAMENTO in c00(nr_seq_orcamento_p , nr_seq_item_p) loop
		cd_grupo_proc_w 	:= PROC_ORCAMENTO.cd_grupo_proc;
		cd_especial_proc_w      := PROC_ORCAMENTO.cd_especialidade;
		cd_area_proc_w		:= PROC_ORCAMENTO.cd_area_procedimento;
		cd_proc_propaci_w	:= PROC_ORCAMENTO.cd_procedimento;
		ie_origem_proc_w	:= PROC_ORCAMENTO.ie_origem_proced;
		nr_seq_exame_w		:= PROC_ORCAMENTO.nr_seq_exame;
		nr_seq_proc_interno_w	:= PROC_ORCAMENTO.nr_seq_proc_interno;
		nr_seq_item_w		:= PROC_ORCAMENTO.nr_sequencia;
		ie_lado_w		:= PROC_ORCAMENTO.ie_lado;
		cd_setor_atendimento_w	:= PROC_ORCAMENTO.cd_setor_atendimento;


		if (PROC_ORCAMENTO.cd_medico IS NOT NULL AND PROC_ORCAMENTO.cd_medico::text <> '') then
			cd_medico_filtro_w    := PROC_ORCAMENTO.cd_medico;
		else
			cd_medico_filtro_w    := cd_medico_w;
		end if;

		select 	obter_se_medico_credenciado(	cd_estabelecimento_w,
							cd_medico_filtro_w,
							cd_convenio_w,
							null,
							PROC_ORCAMENTO.cd_especialidade,
							cd_categoria_w,
							PROC_ORCAMENTO.cd_setor_atendimento,
							cd_plano_w,
							null,
							ie_tipo_atendimento_w,
							null,
							ie_carater_atend_w )
		into STRICT	ie_credenciado_w
		;

		for RLA in C01 loop
			nr_sequencia_w 	 := RLA.nr_sequencia;
			cd_setor_regra_w := RLA.cd_setor_atendimento;
			nr_seq_regra_w 	 := RLA.nr_sequencia;
		end loop;

	end loop;

	cd_setor_atendimento_w := cd_setor_orcamento_w;
end if;

RAISE NOTICE '%', nr_seq_regra_w;

OPEN C02;
LOOP
FETCH C02 into
		cd_procedimento_w,
		ie_origem_proced_w,
		nr_seq_exame_w,
		cd_material_w,
		cd_unid_medida_w,
		qt_lancamento_w,
		ie_Medico_atendimento_w,
		ie_Local_Estoque_w,
		ie_funcao_medico_w,
		tx_procedimento_w,
		nr_seq_proc_int_w,
		ie_adic_orcamento_w,
		cd_setor_orcamento_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
	BEGIN
	ie_regra_w	:= null;

	/* Inicializa medico quando ie_medico_atendimento = 'S' */

	/* Primeiro = medico executor, Segundo = medico do atendimento */

	cd_medico_executor_w		:= '';

	/* Verifica se procedimento de alta ja foi executado    Bola 08072002 */

	BEGIN
	qt_proc_alta_w	:= 0;
	if (nr_seq_evento_p = 36) then
		begin
		select 	count(*)
		into STRICT	qt_proc_alta_w
		from	procedimento_paciente
		where	nr_atendimento	= nr_atendimento_p
		and	cd_procedimento	= cd_procedimento_w;
		exception
			when others then
			qt_proc_alta_w	:= 0;
		end;
	end if;
	END;

	/*tratar para ir para o final caso o proc interno da a? da regra esteja inativo*/

	if (nr_seq_proc_int_w IS NOT NULL AND nr_seq_proc_int_w::text <> '') then
	select	coalesce(max(ie_situacao),'A')
			into STRICT	ie_situacao_w
			from	proc_interno
			where	nr_sequencia = nr_seq_proc_int_w;

			if (ie_situacao_w = 'I') then
				goto continue_loop;
			end if;
	end if;

	if (nr_seq_proc_int_w IS NOT NULL AND nr_seq_proc_int_w::text <> '') then
		SELECT * FROM Obter_Proc_Tab_Interno_Conv(nr_seq_proc_int_w, cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, cd_plano_w, null, cd_procedimento_w, ie_origem_proced_w, null, clock_timestamp(), cd_tipo_acomodacao_w, null, null, null, null, null, null, null) INTO STRICT cd_procedimento_w, ie_origem_proced_w;
	end if;

	if (coalesce(nr_seq_exame_w,0) > 0) then
		SELECT * FROM Obter_Exame_Lab_Convenio(nr_seq_exame_w, cd_convenio_w, cd_categoria_w, ie_tipo_atendimento_w, cd_estabelecimento_w, ie_tipo_convenio_w, null, null, cd_plano_w, ds_ret_w, cd_procedimento_w, ie_origem_proced_w, ds_erro_ww, nr_seq_proc_interno_aux_w, null) INTO STRICT ds_ret_w, cd_procedimento_w, ie_origem_proced_w, ds_erro_ww, nr_seq_proc_interno_aux_w;
	end if;

	/*Ap?bter o c?o do procedimento atrav?do proc interno ou exame de laborat? testar novamente para ver se o c?o est?tivo.*/

	if (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') then
		select 	coalesce(max(ie_situacao),'A')
		into STRICT	ie_situacao_w
		from	procedimento
		where	cd_procedimento	 = cd_procedimento_w
		and	ie_origem_proced = ie_origem_proced_w;

		if (ie_situacao_w = 'I') then
			goto continue_loop;
		end if;
	end if;

	if (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') and (qt_proc_alta_w	= 0) 		then
		begin

		if (ie_verifica_se_pacote_w = 'S') and (obter_se_pacote_convenio(	cd_procedimento_w,
							ie_origem_proced_w,
							cd_convenio_w,
							cd_estabelecimento_w) = 'S') then
			select 	max(nr_seq_pacote)
			into STRICT	nr_seq_pacote_w
			from 	pacote
			where	cd_proced_pacote = cd_procedimento_w
			and 	ie_origem_proced = ie_origem_proced_w
			and 	cd_convenio	 = cd_convenio_w
			and 	cd_estabelecimento = cd_estabelecimento_w
			and 	ie_situacao = 'A';

			CALL gerar_orc_pacote_lanc_auto( nr_seq_orcamento_p,
						nr_seq_pacote_w,
						0,
						nm_usuario_p,
						ie_adic_orcamento_w,
						nr_seq_item_p);


		else

			SELECT * FROM consiste_proc_orc( nr_seq_orcamento_p, cd_procedimento_w, ie_origem_proced_w, qt_lancamento_w, cd_estabelecimento_w, nm_usuario_p, ie_autorizacao_w, null, ie_regra_w) INTO STRICT ie_autorizacao_w, ie_regra_w;


			select	nextval('orcamento_paciente_proc_seq')
			into STRICT	nr_sequencia_w
			;

			insert into ORCAMENTO_PACIENTE_PROC(
				NR_SEQUENCIA_ORCAMENTO         	,
				CD_PROCEDIMENTO                	,
				IE_ORIGEM_PROCED               	,
				QT_PROCEDIMENTO                	,
				DT_ATUALIZACAO                 	,
				NM_USUARIO                     	,
				VL_PROCEDIMENTO                	,
				VL_MEDICO                      	,
				VL_ANESTESISTA                 	,
				VL_FILME                       	,
				VL_AUXILIARES                  	,
				VL_CUSTO_OPERACIONAL           	,
				VL_DESCONTO                    	,
				CD_MEDICO                      	,
				IE_PROCEDIMENTO_PRINCIPAL      	,
				QT_DIA_INTERNACAO	       	,
				IE_VALOR_INFORMADO             	,
				NR_SEQ_EXAME                   	,
				NR_SEQUENCIA		       	,
				nr_seq_regra_lanc              	,
				nr_seq_proc_princ		,
				nr_seq_proc_interno		,
				ie_adicional,
				ie_autorizacao,
				cd_setor_atendimento,
				ie_regra_plano)
			values (
				nr_seq_orcamento_p	,
				cd_procedimento_w       ,
				ie_origem_proced_w,
				qt_lancamento_w,
				clock_timestamp()                 ,
				nm_usuario_p            ,
				0, 0, 0, 0, 0, 0, 0,
				cd_medico_executor_w    ,
				'N',
				null,
				'N',
				nr_seq_exame_w,
				nr_sequencia_w,
				nr_seq_regra_w,
				coalesce(nr_seq_item_p, nr_seq_item_w),
				nr_seq_proc_int_w,
				coalesce(ie_adic_orcamento_w,'N'),
				ie_autorizacao_w,
				coalesce(cd_setor_atendimento_w, cd_setor_orcamento_w),
				ie_regra_w);

		end if;

		if (1 = 2) then
			CALL Atualiza_preco_procedimento(
				nr_sequencia_w, cd_convenio_w, nm_usuario_p);
		end if;
		end;
	else
		begin
		/* Verifica se procedimento de alta ja foi executado    Bola 08072002 */

		qt_mat_alta_w	:= 0;

		if (qt_mat_alta_w	= 0) 		then
			begin


			qt_material_w	:= 0;

			if (ie_consiste_duplicidade_w = 'S') then

				select	count(*)
				into STRICT	qt_material_w
				from	orcamento_paciente_mat
				where	nr_sequencia_orcamento	= nr_seq_orcamento_p
				and	cd_material		= cd_material_w;

			end if;

			SELECT * FROM consiste_mat_orc(	nr_seq_orcamento_p, cd_material_w, qt_lancamento_w, cd_estabelecimento_w, nm_usuario_p, ie_autorizacao_w, ie_regra_w) INTO STRICT ie_autorizacao_w, ie_regra_w;

			if (qt_material_w = 0) then

				insert into orcamento_paciente_mat(
					NR_SEQuencia_ORCAMENTO     	,
					CD_MATERIAL             ,
					QT_MATERIAL             ,
					VL_MATERIAL		,
					DT_ATUALIZACAO		,
					NM_USUARIO		,
					IE_VALOR_INFORMADO,
					nr_sequencia,
					nr_seq_regra_lanc,
					nr_seq_proc_princ,
					ie_adicional,
					ie_autorizacao,
					cd_setor_atendimento,
					ie_regra_plano)
				values (nr_seq_orcamento_p	,
					cd_material_w           ,
					qt_lancamento_w		,
					0,
					clock_timestamp()                 ,
					nm_usuario_p            ,
					'N',
					nextval('orcamento_paciente_mat_seq'),
					nr_seq_regra_w,
					coalesce(nr_seq_item_p, nr_seq_item_w),
					coalesce(ie_adic_orcamento_w,'N'),
					ie_autorizacao_w,
					coalesce(cd_setor_atendimento_w, cd_setor_orcamento_w),
					ie_regra_w);

				if (ie_dispara_kit_w	= 'S') then

					SELECT	coalesce(max(cd_kit_material),0)
					into STRICT	cd_kit_material_w
					FROM 	MATERIAL_ESTAB
					WHERE 	CD_MATERIAL		= cd_material_w
					AND 	CD_ESTABELECIMENTO	= cd_estabelecimento_w;

					if (cd_kit_material_w	<> 0) then

						CALL gerar_kit_material_orc(nr_seq_orcamento_p, qt_lancamento_w, cd_kit_material_w, coalesce(nr_seq_item_p, nr_seq_item_w) ,nm_usuario_p,coalesce(ie_adic_orcamento_w,'N'), null, coalesce(cd_setor_atendimento_w, cd_setor_orcamento_w));

					end if;
				end if;

			end if;

			end;
		end if;
		end;
	end if;
	END;
	<<continue_loop>>
	ie_situacao_w := null;
END LOOP;
CLOSE C02;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_lanc_orc_automatico ( NR_ATENDIMENTO_P bigint, nr_seq_orcamento_p bigint, NR_SEQ_EVENTO_P bigint, nr_seq_item_p bigint, NM_USUARIO_P text, nr_seq_medicacao_p bigint default null, cd_protocolo_p bigint default null, ds_dia_ciclo_p text default null) FROM PUBLIC;

