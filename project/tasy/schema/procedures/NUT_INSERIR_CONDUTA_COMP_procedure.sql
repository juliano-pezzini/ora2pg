-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE nut_inserir_conduta_comp ( nr_seq_consistencia_p bigint, ds_lista_composicao_p text, ds_lista_dieta_p INOUT text, ds_erro_p INOUT text, nm_usuario_p text) AS $body$
DECLARE


lista_informacao_w		varchar(1000);
ie_contador_w			bigint	:= 0;
tam_lista_w			bigint;
ie_pos_virgula_w		smallint;
cd_dieta_w			bigint;
nr_seq_composicao_w		bigint;
ie_identica_w			varchar(1);
cont_w				integer;
ds_lista_dieta_w		varchar(1000);
ds_consistencia_w		varchar(255);
ds_mensagem_w			varchar(255);
ds_lista_composicao_w		varchar(255);
ds_composicao_w			varchar(255);

C01 CURSOR FOR
	SELECT	distinct a.cd_dieta
	from	dieta_consistencia a
	where	a.nr_seq_consistencia	= nr_seq_consistencia_p;


BEGIN

if (nr_seq_consistencia_p IS NOT NULL AND nr_seq_consistencia_p::text <> '') then

	ds_lista_dieta_w 	:= '';

	select	max(ds_consistencia)
	into STRICT	ds_consistencia_w
	from	consistencia_dieta
	where	nr_sequencia = nr_seq_consistencia_p;

	open C01;
	loop
	fetch C01 into
		cd_dieta_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		ie_identica_w		:= 'S';
		ds_lista_composicao_w 	:= null;

		if (ds_lista_composicao_p IS NOT NULL AND ds_lista_composicao_p::text <> '') then

			lista_informacao_w := ds_lista_composicao_p;
			while	(lista_informacao_w IS NOT NULL AND lista_informacao_w::text <> '') or
				ie_contador_w > 200 loop
				begin

				tam_lista_w			:= length(lista_informacao_w);
				ie_pos_virgula_w		:= position(',' in lista_informacao_w);

				/* Obter a sequÃªncia lida */

				if (ie_pos_virgula_w <> 0) then
					nr_seq_composicao_w	:= (substr(lista_informacao_w,1,(ie_pos_virgula_w - 1)))::numeric;
					lista_informacao_w	:= substr(lista_informacao_w,(ie_pos_virgula_w + 1),tam_lista_w);
				end if;

				if (ds_lista_composicao_w IS NOT NULL AND ds_lista_composicao_w::text <> '') then
					ds_lista_composicao_w := substr(ds_lista_composicao_w || chr(13),1,255);
				end if;

				ds_composicao_w		:= substr(Obter_desc_composicao_dieta(nr_seq_composicao_w),1,255);
				ds_lista_composicao_w 	:= substr(ds_lista_composicao_w||ds_composicao_w,1,255);

				select	count(*)
				into STRICT	cont_w
				from	dieta_composicao
				where	cd_dieta = cd_dieta_w
				and	nr_seq_composicao = nr_seq_composicao_w;

				if (cont_w > 0) then
					ie_identica_w := 'N';
				end if;

				ie_contador_w	:= ie_contador_w + 1;

				end;
			end loop;

			if (ie_identica_w = 'S') then
				select	CASE WHEN count(*)=0 THEN 'S'  ELSE 'N' END
				into STRICT	ie_identica_w
				from	dieta_composicao
				where	cd_dieta = cd_dieta_w
				and	Obter_Se_Contido(nr_seq_composicao,ds_lista_composicao_p) = 'N';
			end if;

		else

			select	CASE WHEN count(*)=0 THEN 'S'  ELSE 'N' END
			into STRICT	ie_identica_w
			from	dieta_composicao
			where	cd_dieta = cd_dieta_w;

		end if;

		if (ie_identica_w = 'S') then
			ds_lista_dieta_w := ds_lista_dieta_w || cd_dieta_w || ',';
		end if;

		end;
	end loop;
	close C01;

ds_lista_dieta_p 	:= ds_lista_dieta_w;
ds_erro_p 		:= null;

if (coalesce(ds_lista_dieta_w::text, '') = '') then
	ds_mensagem_w 	:= substr(wheb_mensagem_pck.get_texto(280704,'DS_CONSISTENCIA='|| ds_consistencia_w||';DS_LISTA_COMPOSICAO='|| ds_lista_composicao_w),1,255);
	ds_erro_p 	:= ds_mensagem_w;
end if;

end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE nut_inserir_conduta_comp ( nr_seq_consistencia_p bigint, ds_lista_composicao_p text, ds_lista_dieta_p INOUT text, ds_erro_p INOUT text, nm_usuario_p text) FROM PUBLIC;

