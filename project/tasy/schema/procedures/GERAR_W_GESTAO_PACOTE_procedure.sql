-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_w_gestao_pacote (cd_estabelecimento_p bigint, nr_atendimento_p bigint, dt_inicial_p timestamp, dt_final_p timestamp, nm_usuario_p text, ie_alta_paciente_p bigint) AS $body$
DECLARE


CD_PROCED_PACOTE_w		bigint;
ie_origem_proced_w		bigint;
ie_tipo_atendimento_w		smallint;
cd_convenio_w			bigint;
cd_medico_executor_w		varchar(10);
cd_setor_atendimento_w		bigint;
nr_atendimento_w		bigint;
nr_interno_conta_w		bigint;
nr_interno_conta_atual_w	bigint:= 0;
vl_item_w			double precision;
vl_conta_w			double precision;
nr_sequencia_w			bigint;
cd_especialidade_w		bigint;
cd_grupo_procedimento_w		bigint;
cd_area_procedimento_w		bigint;
cd_especialidade_proced_w	bigint;
cd_proced_pacote_atual_w	bigint:= 0;
nr_seq_proc_pacote_w		bigint;
vl_original_w			double precision;
cd_item_w			bigint;
ds_item_w			varchar(240);
vl_recebido_w			double precision:= 0;
ie_proc_mat_w			smallint;
qt_item_w			double precision;
ie_opcao_data_w			varchar(1):= 'I';
nr_seq_procedimento_w		bigint;
--cd_item_ant_w			number(15,0) :=0;
nr_seq_item_w			bigint;

vl_custo_w			conta_paciente_resumo.vl_custo%type;
vl_custo_dir_apoio_w		conta_paciente_resumo.vl_custo_dir_apoio%type;
vl_custo_direto_w		conta_paciente_resumo.vl_custo_direto%type;
vl_custo_hm_w			conta_paciente_resumo.vl_custo_hm%type;
vl_custo_indireto_w		conta_paciente_resumo.vl_custo_indireto%type;
vl_custo_mao_obra_w		conta_paciente_resumo.vl_custo_mao_obra%type;
vl_custo_operacional_w		conta_paciente_resumo.vl_custo_operacional%type;
vl_custo_sadt_w			conta_paciente_resumo.vl_custo_sadt%type;
vl_custo_unitario_w		conta_paciente_resumo.vl_custo_unitario%type;
vl_custo_variavel_w		conta_paciente_resumo.vl_custo_variavel%type;


c10 CURSOR FOR 	--Contas
	SELECT	a.nr_interno_conta,
		c.nr_seq_procedimento,
		d.cd_proced_pacote,
		d.ie_origem_proced,
		b.ie_tipo_atendimento,
		--obter_dados_propaci('ME',c.nr_seq_procedimento) cd_medico_executor,
		e.cd_medico_executor,
		b.nr_atendimento,
		obter_valor_conta(a.nr_interno_conta,0),
		obter_area_procedimento(d.cd_proced_pacote, d.ie_origem_proced),
		somente_numero(obter_grupo_procedimento(d.cd_proced_pacote, d.ie_origem_proced, 'C')),
		obter_especialidade_proced(d.cd_proced_pacote, d.ie_origem_proced),
		obter_valor_recebido(a.nr_interno_conta)
	from 	pacote			d,
		atendimento_pacote 	c,
		protocolo_convenio	p,
		conta_paciente 		a,
		atendimento_paciente 	b,
		procedimento_paciente	e
	where 	a.nr_atendimento = b.nr_atendimento
	and 	b.nr_atendimento = c.nr_atendimento
	and 	c.nr_seq_pacote	 = d.nr_seq_pacote
	and 	p.nr_seq_protocolo = a.nr_seq_protocolo  -- Inclu√≠do a tabela protocolo_convenio OS  238752
	and 	(a.nr_seq_protocolo IS NOT NULL AND a.nr_seq_protocolo::text <> '')
	and    	b.cd_estabelecimento    = cd_estabelecimento_p
	and 	e.nr_sequencia = c.nr_seq_procedimento
	and 	((nr_atendimento_p > 0 AND b.nr_atendimento = nr_atendimento_p) or (nr_atendimento_p = 0))
	--and     somente_numero(Obter_Dados_ProPaci('IC', c.nr_seq_procedimento)) = a.nr_interno_conta
	and 	e.nr_interno_conta = a.nr_interno_conta
	and	((ie_alta_paciente_p = 0) or (ie_alta_paciente_p = 1 and (b.dt_alta IS NOT NULL AND b.dt_alta::text <> '')) or (ie_alta_paciente_p = 2 and coalesce(b.dt_alta::text, '') = ''))
	and     ((ie_opcao_data_w = 'I' and e.dt_procedimento between dt_inicial_p and dt_final_p) or
		 ((ie_opcao_data_w = 'A' and b.dt_entrada between dt_inicial_p and dt_final_p) and (ie_opcao_data_w = 'A' and coalesce(b.dt_alta,dt_inicial_p) between dt_inicial_p and dt_final_p)) or (ie_opcao_data_w = 'E' and  coalesce(p.dt_entrega_convenio,dt_inicial_p) between dt_inicial_p and dt_final_p) or (ie_opcao_data_w = 'R' and  p.dt_mesano_referencia between dt_inicial_p and dt_final_p))
	order by a.nr_interno_conta, d.cd_proced_pacote;

c20 CURSOR FOR  --Procedimentos
	SELECT 	cd_convenio,
		cd_setor_atendimento,
		cd_especialidade,
		vl_procedimento,
		nr_seq_proc_pacote,
		nr_sequencia,
		--Obter_custo_conta_resumo_item(nr_interno_conta,cd_procedimento,1, nm_usuario_p),
		--Obter_Custo_Item_Conta(nr_sequencia,1), -- Alterado para a procedure Obter_Custos_Mat_Proc_Conta
		--Obter_preco_proc_mat_orig(nr_sequencia, 1) vl_original,
		Obter_valor_Orig_Proc(nr_sequencia, 0) vl_original,
		cd_procedimento,
		substr(obter_descricao_procedimento(cd_procedimento, ie_origem_proced),1,120),
		1 ie_proc_mat,
		qt_procedimento
	from 	procedimento_paciente
	where 	nr_interno_conta = nr_interno_conta_w
	and 	coalesce(nr_seq_proc_pacote, 0) = nr_seq_procedimento_w
	and 	coalesce(nr_seq_proc_pacote,0) <> nr_sequencia  --Itens do pacote
	and	coalesce(cd_motivo_exc_conta::text, '') = ''
	and     ((ie_opcao_data_w = 'I' AND dt_procedimento between dt_inicial_p and dt_final_p) or (ie_opcao_data_w <> 'I'));

c30 CURSOR FOR  --Materiais
	SELECT 	cd_convenio,
		cd_setor_atendimento,
		cd_especialidade,
		vl_material,
		nr_seq_proc_pacote,
		nr_sequencia,
		--Obter_custo_conta_resumo_item(nr_interno_conta,cd_material,2, nm_usuario_p),
		--Obter_Custo_Item_Conta(nr_sequencia,2), -- -- Alterado para a procedure Obter_Custos_Mat_Proc_Conta
		--Obter_preco_proc_mat_orig(nr_sequencia, 2) vl_original,
		coalesce(vl_tabela_original, vl_material) vl_original,
		cd_material,
		substr(obter_desc_material(cd_material),1,120),
		2 ie_proc_mat,
		qt_material
	from 	material_atend_paciente
	where 	nr_interno_conta = nr_interno_conta_w
	and 	coalesce(nr_seq_proc_pacote, 0) = nr_seq_procedimento_w
	and 	coalesce(nr_seq_proc_pacote,0) <> nr_sequencia  --Itens do pacote
	and	coalesce(cd_motivo_exc_conta::text, '') = ''
	and     ((ie_opcao_data_w = 'I' AND dt_atendimento between dt_inicial_p and dt_final_p) or (ie_opcao_data_w <> 'I'))
	order by cd_material;



BEGIN

delete	from W_GESTAO_PACOTE
where nm_usuario = nm_usuario_p;

delete	from W_GESTAO_PACOTE
where	dt_atualizacao < clock_timestamp() - interval '12 days'/24;


ie_opcao_data_w:= coalesce(obter_valor_param_usuario(7021, 1, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p),'I');
if	((ie_opcao_data_w = 'S') or (ie_opcao_data_w = 'N')) then
	ie_opcao_data_w:= 'I';
end if;

open C10;
loop
fetch C10 into
	nr_interno_conta_w,
	nr_seq_procedimento_w,
	cd_proced_pacote_w,
	ie_origem_proced_w,
	ie_tipo_atendimento_w,
	cd_medico_executor_w,
	nr_atendimento_w,
	vl_conta_w,
	cd_area_procedimento_w,
	cd_grupo_procedimento_w,
	cd_especialidade_proced_w,
	vl_recebido_w;
EXIT WHEN NOT FOUND; /* apply on C10 */
	begin

	-- SOMENTE P / PROCEDIMENTOS
	open C20;
	loop
	fetch C20 into
		cd_convenio_w,
		cd_setor_atendimento_w,
		cd_especialidade_w,
		vl_item_w,
		nr_seq_proc_pacote_w,
		nr_seq_item_w,
		vl_original_w,
		cd_item_w,
		ds_item_w,
		ie_proc_mat_w,
		qt_item_w;
	EXIT WHEN NOT FOUND; /* apply on C20 */
		begin

		if (nr_interno_conta_atual_w <> nr_interno_conta_w) or (cd_proced_pacote_atual_w <> CD_PROCED_PACOTE_w) then
			nr_interno_conta_atual_w:= nr_interno_conta_w;
			cd_proced_pacote_atual_w:= CD_PROCED_PACOTE_w;
		else
			vl_conta_w	:= 0;
			vl_recebido_w	:= 0;
		end if;

		SELECT * FROM Obter_Custos_Mat_Proc_Conta(nr_seq_item_w, ie_proc_mat_w, vl_custo_w, vl_custo_dir_apoio_w, vl_custo_direto_w, vl_custo_hm_w, vl_custo_indireto_w, vl_custo_mao_obra_w, vl_custo_operacional_w, vl_custo_sadt_w, vl_custo_unitario_w, vl_custo_variavel_w) INTO STRICT vl_custo_w, vl_custo_dir_apoio_w, vl_custo_direto_w, vl_custo_hm_w, vl_custo_indireto_w, vl_custo_mao_obra_w, vl_custo_operacional_w, vl_custo_sadt_w, vl_custo_unitario_w, vl_custo_variavel_w;

		select	nextval('w_gestao_pacote_seq')
		into STRICT	nr_sequencia_w
		;

		insert	into W_GESTAO_PACOTE(NR_SEQUENCIA          ,
			CD_PROCEDIMENTO        ,
			IE_ORIGEM_PROCRED      ,
			DT_ATUALIZACAO         ,
			NM_USUARIO             ,
			DT_ATUALIZACAO_NREC    ,
			NM_USUARIO_NREC        ,
			CD_CONVENIO            ,
			CD_MEDICO_EXECUTOR     ,
			CD_SETOR_ATENDIMENTO   ,
			IE_TIPO_ATENDIMENTO    ,
			VL_PACOTE              ,
			NR_ATENDIMENTO         ,
			NR_INTERNO_CONTA       ,
			cd_especialidade       ,
			vl_conta		,
			cd_area_procedimento	,
			cd_grupo_procedimento	,
			cd_especialidade_proced ,
			nr_seq_proc_pacote	,
			vl_original		,
			cd_item			,
			ds_item			,
			vl_recebido		,
			ie_proc_mat,
			qt_item,
			vl_custo,
			vl_custo_dir_apoio,
			vl_custo_direto,
			vl_custo_hm,
			vl_custo_indireto,
			vl_custo_mao_obra,
			vl_custo_operacional,
			vl_custo_sadt,
			vl_custo_unitario,
			vl_custo_variavel)
		values (nr_sequencia_w,
			CD_PROCED_PACOTE_W,
			ie_origem_proced_w,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			CD_CONVENIO_w,
			CD_MEDICO_EXECUTOR_w,
			CD_SETOR_ATENDIMENTO_w,
			IE_TIPO_ATENDIMENTO_w,
			VL_item_w,
			NR_ATENDIMENTO_w,
			NR_INTERNO_CONTA_w,
			cd_especialidade_w,
			vl_conta_w,
			cd_area_procedimento_w,
			cd_grupo_procedimento_w,
			cd_especialidade_proced_w,
			nr_seq_proc_pacote_w,
			vl_original_w,
			cd_item_w,
			ds_item_w,
			vl_recebido_w,
			ie_proc_mat_w,
			qt_item_w,
			vl_custo_w,
			vl_custo_dir_apoio_w,
			vl_custo_direto_w,
			vl_custo_hm_w,
			vl_custo_indireto_w,
			vl_custo_mao_obra_w,
			vl_custo_operacional_w,
			vl_custo_sadt_w,
			vl_custo_unitario_w,
			vl_custo_variavel_w);

		end;
	end loop;
	close C20;

	--cd_item_ant_w:=0;
	-- SOMENTE P / MATERIAIS
	open C30;
	loop
	fetch C30 into
		cd_convenio_w,
		cd_setor_atendimento_w,
		cd_especialidade_w,
		vl_item_w,
		nr_seq_proc_pacote_w,
		nr_seq_item_w,
		vl_original_w,
		cd_item_w,
		ds_item_w,
		ie_proc_mat_w,
		qt_item_w;
	EXIT WHEN NOT FOUND; /* apply on C30 */
		begin

		if (nr_interno_conta_atual_w <> nr_interno_conta_w) or (cd_proced_pacote_atual_w <> CD_PROCED_PACOTE_w) then
			nr_interno_conta_atual_w:= nr_interno_conta_w;
			cd_proced_pacote_atual_w:= CD_PROCED_PACOTE_w;
		else
			vl_conta_w	:= 0;
			vl_recebido_w	:= 0;
		end if;

		/*if	(cd_item_ant_w <> 0) and
			(cd_item_ant_w = cd_item_w) then
			vl_custo_w:= 0;
		end if;
		cd_item_ant_w:= cd_item_w;*/
		SELECT * FROM Obter_Custos_Mat_Proc_Conta(nr_seq_item_w, ie_proc_mat_w, vl_custo_w, vl_custo_dir_apoio_w, vl_custo_direto_w, vl_custo_hm_w, vl_custo_indireto_w, vl_custo_mao_obra_w, vl_custo_operacional_w, vl_custo_sadt_w, vl_custo_unitario_w, vl_custo_variavel_w) INTO STRICT vl_custo_w, vl_custo_dir_apoio_w, vl_custo_direto_w, vl_custo_hm_w, vl_custo_indireto_w, vl_custo_mao_obra_w, vl_custo_operacional_w, vl_custo_sadt_w, vl_custo_unitario_w, vl_custo_variavel_w;

		select	nextval('w_gestao_pacote_seq')
		into STRICT	nr_sequencia_w
		;

		insert	into W_GESTAO_PACOTE(NR_SEQUENCIA          ,
			CD_PROCEDIMENTO        ,
			IE_ORIGEM_PROCRED      ,
			DT_ATUALIZACAO         ,
			NM_USUARIO             ,
			DT_ATUALIZACAO_NREC    ,
			NM_USUARIO_NREC        ,
			CD_CONVENIO            ,
			CD_MEDICO_EXECUTOR     ,
			CD_SETOR_ATENDIMENTO   ,
			IE_TIPO_ATENDIMENTO    ,
			VL_PACOTE              ,
			NR_ATENDIMENTO         ,
			NR_INTERNO_CONTA       ,
			cd_especialidade       ,
			vl_conta		,
			cd_area_procedimento	,
			cd_grupo_procedimento	,
			cd_especialidade_proced ,
			nr_seq_proc_pacote	,
			vl_original		,
			cd_item			,
			ds_item			,
			vl_recebido		,
			ie_proc_mat,
			qt_item,
			vl_custo,
			vl_custo_dir_apoio,
			vl_custo_direto,
			vl_custo_hm,
			vl_custo_indireto,
			vl_custo_mao_obra,
			vl_custo_operacional,
			vl_custo_sadt,
			vl_custo_unitario,
			vl_custo_variavel)
		values (nr_sequencia_w,
			CD_PROCED_PACOTE_W,
			ie_origem_proced_w,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			CD_CONVENIO_w,
			CD_MEDICO_EXECUTOR_w,
			CD_SETOR_ATENDIMENTO_w,
			IE_TIPO_ATENDIMENTO_w,
			VL_item_w,
			NR_ATENDIMENTO_w,
			NR_INTERNO_CONTA_w,
			cd_especialidade_w,
			vl_conta_w,
			cd_area_procedimento_w,
			cd_grupo_procedimento_w,
			cd_especialidade_proced_w,
			nr_seq_proc_pacote_w,
			vl_original_w,
			cd_item_w,
			ds_item_w,
			vl_recebido_w,
			ie_proc_mat_w,
			qt_item_w,
			vl_custo_w,
			vl_custo_dir_apoio_w,
			vl_custo_direto_w,
			vl_custo_hm_w,
			vl_custo_indireto_w,
			vl_custo_mao_obra_w,
			vl_custo_operacional_w,
			vl_custo_sadt_w,
			vl_custo_unitario_w,
			vl_custo_variavel_w);

		end;
	end loop;
	close C30;

	end;
end loop;
close C10;


commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_w_gestao_pacote (cd_estabelecimento_p bigint, nr_atendimento_p bigint, dt_inicial_p timestamp, dt_final_p timestamp, nm_usuario_p text, ie_alta_paciente_p bigint) FROM PUBLIC;

