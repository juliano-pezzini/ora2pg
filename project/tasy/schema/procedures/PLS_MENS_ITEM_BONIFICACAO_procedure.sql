-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_mens_item_bonificacao ( nr_seq_mensalidade_seg_p pls_mensalidade_segurado.nr_sequencia%type, dt_referencia_p pls_mensalidade_segurado.dt_mesano_referencia%type, nr_seq_segurado_p pls_mensalidade_segurado.nr_seq_segurado%type, qt_idade_p pls_mensalidade_segurado.qt_idade%type, nr_parcela_p pls_mensalidade_segurado.nr_parcela%type, nr_parcela_contrato_p pls_mensalidade_segurado.nr_parcela_contrato%type, dt_inicio_cobertura_p pls_mensalidade_segurado.dt_inicio_cobertura%type, dt_fim_cobertura_p pls_mensalidade_segurado.dt_fim_cobertura%type, nr_seq_lote_p pls_lote_mensalidade.nr_sequencia%type, nr_seq_mensalidade_p pls_mensalidade.nr_sequencia%type, nr_seq_pagador_p pls_mensalidade.nr_seq_pagador%type, nr_seq_forma_cobranca_p pls_mensalidade.nr_seq_forma_cobranca%type, nr_seq_titular_p pls_segurado.nr_sequencia%type, nr_seq_contrato_p pls_segurado.nr_seq_contrato%type, nr_seq_intercambio_p pls_segurado.nr_seq_intercambio%type, nr_seq_parentesco_p pls_segurado.nr_seq_parentesco%type, ie_acao_contrato_p pls_segurado.ie_acao_contrato%type, cd_pessoa_fisica_p pls_segurado.cd_pessoa_fisica%type, ie_situacao_trabalhista_p pls_segurado.ie_situacao_trabalhista%type, nr_seq_segurado_preco_p pls_segurado_preco.nr_sequencia%type, ie_remido_p pls_mensalidade_segurado.ie_remido%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) AS $body$
DECLARE


vl_bonificacao_w		pls_mensalidade_seg_item.vl_item%type;
vl_item_w			pls_mensalidade_seg_item.vl_item%type;
vl_mensalidade_w		pls_mensalidade_seg_item.vl_item%type;
vl_mens_desconto_w		pls_mensalidade_seg_item.vl_item%type;
vl_preco_pre_w			pls_mensalidade_seg_item.vl_item%type;
vl_item_embutido_w		pls_mensalidade_seg_item.vl_item%type;
nr_seq_preco_pre_w		pls_mensalidade_seg_item.nr_sequencia%type;
ds_observacao_w			pls_mensalidade_seg_item.ds_observacao%type;
tx_desconto_w			pls_preco_regra.tx_desconto%type;
vl_desconto_w			pls_preco_regra.vl_desconto%type;
qt_vidas_w			integer;
nr_seq_preco_regra_w		pls_preco_regra.nr_sequencia%type;
vl_minimo_w			pls_segurado_preco.vl_minimo_mensalidade%type;
nr_seq_tabela_preco_w		pls_tabela_preco.nr_sequencia%type;
qt_pessoa_cooperado_w		integer;
nr_seq_cooperado_w		pls_cooperado.nr_sequencia%type;
qt_tempo_cooperado_w		bigint;
nr_seq_dependente_legal_w	pls_segurado.nr_sequencia%type;
nr_seq_bonificacao_obito_w	pls_bonificacao.nr_sequencia%type;
ie_restricao_w			varchar(1);
ie_cobertura_w			varchar(1);
ds_obs_restricao_w		varchar(255);
ds_obs_cobertura_w		varchar(255);
nr_parcela_dia_w		bigint;
ie_consiste_parcela_em_dia_w	varchar(1);
qt_titulares_w			bigint;
ie_consiste_qt_titular_w	varchar(1);
dt_contrato_w			timestamp;
ie_titularidade_w		varchar(1);
ie_aniversario_sca_w		varchar(1);
nr_seq_vinculo_sca_w		pls_sca_vinculo.nr_sequencia%type;
qt_dias_mens_w			integer;
qt_dias_proporcional_w		integer;
dt_inicio_cobertura_w		timestamp;
dt_fim_cobertura_w		timestamp;
ie_tipo_mensalidade_w		pls_mensalidade_seg_item.ie_tipo_mensalidade%type;
qt_mens_seg_w			integer;
nr_seq_mens_seg_arredond_w	pls_mensalidade_segurado.nr_sequencia%type;
vl_bonificacao_regra_w		pls_bonificacao_regra.vl_bonificacao%type;
qt_mens_seg_ww			integer;
vl_desconto_ww			double precision;
vl_bonificacao_reaj_custo_w	double precision;
vl_reaj_variacao_custo_w	double precision;
nr_seq_reaj_custo_w		pls_mensalidade_seg_item.nr_sequencia%type;
vl_preco_reaj_custo_w		pls_mensalidade_seg_item.vl_item%type;
nr_seq_preco_faixa_etaria_w	pls_mensalidade_seg_item.nr_sequencia%type;
vl_preco_faixa_etaria_w		pls_mensalidade_seg_item.vl_item%type;
vl_bonificacao_faixa_etaria_w	double precision;
vl_faixa_etaria_w		double precision;
vl_bonif_vetor_w		pls_mensalidade_seg_item.vl_item%type;
vl_arredondamento_w		double precision;
vl_bonificacao_embutido_w	pls_mensalidade_seg_item.vl_bonificacao_embutido%type := 0;
dt_referencia_w			timestamp;
ie_beneficiario_cooperado_w	varchar(1);
qt_prestador_w			bigint;
vl_total_bonif_faixa_etaria_w	double precision := 0;
vl_total_bonif_reaj_custo_w	double precision := 0;
vl_bonificacao_gerado_w		double precision;

C01 CURSOR FOR
	SELECT	nr_seq_vinculo_bonificacao,
	nr_seq_bonificacao,
	ds_origem,
	nr_seq_vinculo_sca,
	nr_seq_grupo_contrato,
	vl_bonificacao,
	tx_bonificacao,
	dt_inicio_vigencia,
	dt_fim_vigencia,
	ie_lancamento_bonificacao,
	nr_seq_contrato_grupo,
	nr_prioridade
	from	(SELECT	a.nr_sequencia nr_seq_vinculo_bonificacao,
			a.nr_seq_bonificacao,
			wheb_mensagem_pck.get_texto(1106910) ds_origem, --Beneficiario
			null nr_seq_vinculo_sca,
			null nr_seq_grupo_contrato,
			a.vl_bonificacao,
			a.tx_bonificacao,
			a.dt_inicio_vigencia,
			a.dt_fim_vigencia,
			'B' ie_lancamento_bonificacao,
			null nr_seq_contrato_grupo,
			(select	max(x.nr_prioridade)
			from	pls_bonificacao x
			where	x.nr_sequencia = a.nr_seq_bonificacao) nr_prioridade
		from	pls_bonificacao_vinculo	a
		where	a.nr_seq_segurado	= nr_seq_segurado_p
		and (a.nr_seq_bonificacao = nr_seq_bonificacao_obito_w or coalesce(nr_seq_bonificacao_obito_w::text, '') = '') --Se existir bonificacao por obito para o beneficiario, deve gerar somente essa bonificacao
		and (dt_referencia_p >= a.dt_inicio_vigencia or coalesce(a.dt_inicio_vigencia::text, '') = '')
		and (dt_referencia_p < a.dt_fim_vigencia or coalesce(a.dt_fim_vigencia::text, '') = '')
		
union all

		select	a.nr_sequencia nr_seq_vinculo_bonificacao,
			a.nr_seq_bonificacao,
			wheb_mensagem_pck.get_texto(1106908) ds_origem, --Contrato
			null nr_seq_vinculo_sca,
			null nr_seq_grupo_contrato,
			a.vl_bonificacao,
			a.tx_bonificacao,
			a.dt_inicio_vigencia,
			a.dt_fim_vigencia,
			'B' ie_lancamento_bonificacao,
			null nr_seq_contrato_grupo,
			(select	max(x.nr_prioridade)
			from	pls_bonificacao x
			where	x.nr_sequencia = a.nr_seq_bonificacao) nr_prioridade
		from	pls_bonificacao_vinculo	a
		where	a.nr_seq_contrato	= nr_seq_contrato_p
		and	coalesce(nr_seq_bonificacao_obito_w::text, '') = ''
		and (dt_referencia_p >= a.dt_inicio_vigencia or coalesce(a.dt_inicio_vigencia::text, '') = '')
		and (dt_referencia_p < a.dt_fim_vigencia or coalesce(a.dt_fim_vigencia::text, '') = '')
		
union all

		select	a.nr_sequencia nr_seq_vinculo_bonificacao,
			a.nr_seq_bonificacao,
			wheb_mensagem_pck.get_texto(1106907) ds_origem, --Intercambio
			null nr_seq_vinculo_sca,
			null nr_seq_grupo_contrato,
			a.vl_bonificacao,
			a.tx_bonificacao,
			a.dt_inicio_vigencia,
			a.dt_fim_vigencia,
			'B' ie_lancamento_bonificacao,
			null nr_seq_contrato_grupo,
			(select	max(x.nr_prioridade)
			from	pls_bonificacao x
			where	x.nr_sequencia = a.nr_seq_bonificacao) nr_prioridade
		from	pls_bonificacao_vinculo	a
		where	a.nr_seq_intercambio	= nr_seq_intercambio_p
		and	coalesce(nr_seq_bonificacao_obito_w::text, '') = ''
		and (dt_referencia_p >= a.dt_inicio_vigencia or coalesce(a.dt_inicio_vigencia::text, '') = '')
		and (dt_referencia_p < a.dt_fim_vigencia or coalesce(a.dt_fim_vigencia::text, '') = '')
		
union all

		select	a.nr_sequencia nr_seq_vinculo_bonificacao,
			a.nr_seq_bonificacao,
			wheb_mensagem_pck.get_texto(1106906) ds_origem, --Pagador
			null nr_seq_vinculo_sca,
			null nr_seq_grupo_contrato,
			a.vl_bonificacao,
			a.tx_bonificacao,
			a.dt_inicio_vigencia,
			a.dt_fim_vigencia,
			coalesce(a.ie_lancamento_bonificacao,'B') ie_lancamento_bonificacao,
			null nr_seq_contrato_grupo,
			(select	max(x.nr_prioridade)
			from	pls_bonificacao x
			where	x.nr_sequencia = a.nr_seq_bonificacao) nr_prioridade
		from	pls_bonificacao_vinculo	a
		where	a.nr_seq_pagador	= nr_seq_pagador_p
		and	coalesce(nr_seq_bonificacao_obito_w::text, '') = ''
		and (dt_referencia_p >= a.dt_inicio_vigencia or coalesce(a.dt_inicio_vigencia::text, '') = '')
		and (dt_referencia_p < a.dt_fim_vigencia or coalesce(a.dt_fim_vigencia::text, '') = '')
		
union all

		select	a.nr_sequencia nr_seq_vinculo_bonificacao,
			a.nr_seq_bonificacao,
			wheb_mensagem_pck.get_texto(1106905,'NR_SEQ_GRUPO='||b.nr_sequencia||';DS_GRUPO='||b.ds_grupo) ds_origem, --Grupo de relacionamento #@NR_SEQ_GRUPO#@ - #@DS_GRUPO#@
			null nr_seq_vinculo_sca,
			b.nr_sequencia nr_seq_grupo_contrato,
			a.vl_bonificacao,
			a.tx_bonificacao,
			a.dt_inicio_vigencia,
			a.dt_fim_vigencia,
			'B' ie_lancamento_bonificacao,
			a.nr_seq_contrato_grupo,
			(select	max(x.nr_prioridade)
			from	pls_bonificacao x
			where	x.nr_sequencia = a.nr_seq_bonificacao) nr_prioridade
		from	pls_bonificacao_vinculo	a,
			pls_grupo_contrato b,
			pls_contrato_grupo c
		where	b.nr_sequencia	= a.nr_seq_grupo_contrato
		and	b.nr_sequencia	= c.nr_seq_grupo
		and	c.nr_seq_contrato = nr_seq_contrato_p
		and	coalesce(nr_seq_bonificacao_obito_w::text, '') = ''
		and (dt_referencia_p >= a.dt_inicio_vigencia or coalesce(a.dt_inicio_vigencia::text, '') = '')
		and (dt_referencia_p < a.dt_fim_vigencia or coalesce(a.dt_fim_vigencia::text, '') = '')
		
union all

		select	a.nr_sequencia nr_seq_vinculo_bonificacao,
			a.nr_seq_bonificacao,
			wheb_mensagem_pck.get_texto(1106905,'NR_SEQ_GRUPO='||b.nr_sequencia||';DS_GRUPO='||b.ds_grupo) ds_origem, --Grupo de relacionamento #@NR_SEQ_GRUPO#@ - #@DS_GRUPO#@
			null nr_seq_vinculo_sca,
			b.nr_sequencia nr_seq_grupo_contrato,
			a.vl_bonificacao,
			a.tx_bonificacao,
			a.dt_inicio_vigencia,
			a.dt_fim_vigencia,
			'B' ie_lancamento_bonificacao,
			null nr_seq_contrato_grupo,
			(select	max(x.nr_prioridade)
			from	pls_bonificacao x
			where	x.nr_sequencia = a.nr_seq_bonificacao) nr_prioridade
		from	pls_bonificacao_vinculo	a,
			pls_grupo_contrato b,
			pls_contrato_grupo c
		where	b.nr_sequencia	= a.nr_seq_grupo_contrato
		and	b.nr_sequencia	= c.nr_seq_grupo
		and	c.nr_seq_intercambio = nr_seq_intercambio_p
		and	coalesce(nr_seq_bonificacao_obito_w::text, '') = ''
		and (dt_referencia_p >= a.dt_inicio_vigencia or coalesce(a.dt_inicio_vigencia::text, '') = '')
		and (dt_referencia_p < a.dt_fim_vigencia or coalesce(a.dt_fim_vigencia::text, '') = '')
		
union all

		select	a.nr_sequencia nr_seq_vinculo_bonificacao,
			a.nr_seq_bonificacao,
			wheb_mensagem_pck.get_texto(1106904,'NR_SEQ_SCA='||b.nr_sequencia||';DS_PLANO='||b.ds_plano) ds_origem, --SCA #@NR_SEQ_SCA#@ - #@DS_PLANO#@
			c.nr_sequencia nr_seq_vinculo_sca,
			null nr_seq_grupo_contrato,
			a.vl_bonificacao,
			a.tx_bonificacao,
			a.dt_inicio_vigencia,
			a.dt_fim_vigencia,
			'B' ie_lancamento_bonificacao,
			null nr_seq_contrato_grupo,
			(select	max(x.nr_prioridade)
			from	pls_bonificacao x
			where	x.nr_sequencia = a.nr_seq_bonificacao) nr_prioridade
		from	pls_bonificacao_vinculo	a,
			pls_plano b,
			pls_sca_vinculo c
		where	b.nr_sequencia	= a.nr_seq_plano
		and	b.nr_sequencia	= c.nr_seq_plano
		and	c.nr_seq_segurado = nr_seq_segurado_p
		and	coalesce(nr_seq_bonificacao_obito_w::text, '') = ''
		and (dt_referencia_p >= a.dt_inicio_vigencia or coalesce(a.dt_inicio_vigencia::text, '') = '')
		and (dt_referencia_p < a.dt_fim_vigencia or coalesce(a.dt_fim_vigencia::text, '') = '')
		and (coalesce(c.dt_fim_vigencia::text, '') = '' or c.dt_fim_vigencia > dt_referencia_p)
		
union all

		select	a.nr_seq_vinculo_bonificacao,
			a.nr_seq_bonificacao,
			wheb_mensagem_pck.get_texto(1106903) ds_origem, --Lancamento programado
			null nr_seq_vinculo_sca,
			null nr_seq_grupo_contrato,
			null vl_bonificacao,
			null tx_bonificacao,
			null dt_inicio_vigencia,
			null dt_fim_vigencia,
			'B' ie_lancamento_bonificacao,
			null nr_seq_contrato_grupo,
			(select	max(x.nr_prioridade)
			from	pls_bonificacao x
			where	x.nr_sequencia = a.nr_seq_bonificacao) nr_prioridade
		from	pls_segurado_mensalidade a
		where	a.nr_seq_segurado = nr_seq_segurado_p
		and	(a.nr_seq_bonificacao IS NOT NULL AND a.nr_seq_bonificacao::text <> '')
		and	trunc(a.dt_referencia,'month') = dt_referencia_p) alias65
	order by
		coalesce(nr_prioridade,0) desc;

C02 CURSOR(	nr_seq_bonificacao_pc		pls_bonificacao.nr_sequencia%type,
		qt_idade_pc			pls_mensalidade_segurado.qt_idade%type,
		nr_parcela_pc			pls_mensalidade_segurado.nr_parcela%type,
		ie_acao_contrato_pc		pls_segurado.ie_acao_contrato%type,
		nr_seq_parentesco_pc		pls_segurado.nr_seq_parentesco%type,
		nr_seq_forma_cobranca_pc	pls_mensalidade.nr_seq_forma_cobranca%type,
		vl_bonificacao_vinculo_pc	pls_bonificacao_vinculo.vl_bonificacao%type,
		tx_bonificacao_vinculo_pc	pls_bonificacao_vinculo.tx_bonificacao%type) FOR
	SELECT	b.nr_sequencia nr_seq_bonificacao,
		b.ie_lancamento_mensalidade,
		b.nm_bonificacao,
		coalesce(b.ie_bonificacao_proporcional,'N') ie_bonificacao_proporcional,
		a.ie_tipo_regra,
		a.ie_tipo_item,
		a.ie_acao_contrato,
		a.nr_seq_desconto,
		coalesce(coalesce(vl_bonificacao_vinculo_pc,a.vl_bonificacao),0) vl_bonificacao,
		coalesce(coalesce(tx_bonificacao_vinculo_pc,a.tx_bonificacao),0) tx_bonificacao,
		coalesce(a.qt_parcelas_pagas_inicial,0) qt_parcelas_pagas_inicial,
		coalesce(a.qt_parcelas_pagas_final,9999999999) qt_parcelas_pagas_final,
		coalesce(a.ie_cooperado,'N') ie_cooperado,
		coalesce(a.qt_tempo_cooperado_inicial,0) qt_tempo_cooperado_inicial,
		coalesce(a.qt_tempo_cooperado_final,99999) qt_tempo_cooperado_final,
		coalesce(a.tx_bonificacao_conjuge,0) tx_bonificacao_conjuge,
		coalesce(a.nr_parcela_inicial_sca,0) nr_parcela_inicial_sca,
		coalesce(a.nr_parcela_final_sca,9999999999) nr_parcela_final_sca,
		coalesce(a.ie_tipo_vidas_contrato,'G') ie_tipo_vidas_contrato,
		coalesce(a.ie_possui_bonificacao,'N') ie_possui_bonificacao,
		coalesce(a.ie_demitido_exonerado,'N') ie_demitido_exonerado,
		coalesce(a.ie_titularidade,'A') ie_titularidade,
		coalesce(a.qt_titulares_inicial,0) qt_titulares_inicial,
		coalesce(a.qt_titulares_final,9999999999) qt_titulares_final,
		coalesce(a.ie_mes_ref_desconto,'A') ie_mes_ref_desconto,
		coalesce(a.ie_cooperado_ativo,'A') ie_cooperado_ativo,
		coalesce(a.ie_cooperado_prestador,'N') ie_cooperado_prestador,
		(CASE WHEN pls_obter_item_mens(a.ie_tipo_item, '14')='S' THEN  CASE WHEN coalesce(b.nr_prioridade::text, '') = '' THEN  'N'  ELSE 'S' END   ELSE 'N' END ) ie_bonificacao_prioridade
	from	pls_bonificacao_regra	a,
		pls_bonificacao		b
	where	b.nr_sequencia	= a.nr_seq_bonificacao
	and	b.nr_sequencia	= nr_seq_bonificacao_pc
	and	a.ie_tipo_regra <> 'C'
	and (qt_idade_pc >= a.qt_idade_inicial or coalesce(a.qt_idade_inicial::text, '') = '')
	and (qt_idade_pc <= a.qt_idade_final or coalesce(a.qt_idade_final::text, '') = '')
	and (nr_parcela_pc >= a.nr_parcela_inicial or coalesce(a.nr_parcela_inicial::text, '') = '')
	and (nr_parcela_pc <= a.nr_parcela_final or coalesce(a.nr_parcela_final::text, '') = '')
	and (a.ie_acao_contrato = ie_acao_contrato_pc or coalesce(a.ie_acao_contrato::text, '') = '')
	and (a.nr_seq_parentesco = nr_seq_parentesco_pc or coalesce(a.nr_seq_parentesco::text, '') = '')
	and (a.nr_seq_forma_cobranca = nr_seq_forma_cobranca_pc or coalesce(a.nr_seq_forma_cobranca::text, '') = '');

C03 CURSOR(	nr_seq_mensalidade_seg_pc	pls_mensalidade_segurado.nr_sequencia%type,
		nr_seq_vinculo_sca_pc		pls_sca_vinculo.nr_sequencia%type)FOR
	SELECT	a.ie_tipo_item,
		a.vl_item - coalesce(vl_bonificacao_embutido,0) vl_item,
		a.nr_parcela_sca
	from	pls_mensalidade_seg_item a
	where	a.nr_seq_mensalidade_seg = nr_seq_mensalidade_seg_pc
	and	a.ie_tipo_item <> '14'
	and (a.nr_seq_vinculo_sca = nr_seq_vinculo_sca_pc or coalesce(nr_seq_vinculo_sca_pc::text, '') = ''); --Se a bonificacao estiver vinculada a um SCA, o desconto sera somente para o item SCA
BEGIN

if (nr_seq_titular_p IS NOT NULL AND nr_seq_titular_p::text <> '') then
	ie_titularidade_w	:= 'D';
else
	ie_titularidade_w	:= 'T';
end if;

select	max(a.nr_seq_bonificacao)
into STRICT	nr_seq_bonificacao_obito_w
from	pls_bonificacao_vinculo a,
	pls_bonificacao		b
where	a.nr_seq_bonificacao = b.nr_sequencia
and	a.nr_seq_segurado = nr_seq_segurado_p
and	b.ie_seguro_obito = 'S'
and (dt_referencia_p >= a.dt_inicio_vigencia or coalesce(a.dt_inicio_vigencia::text, '') = '')
and (dt_referencia_p <  a.dt_fim_vigencia or coalesce(a.dt_fim_vigencia::text, '') = '');

select	sum(a.vl_item)
into STRICT	vl_mensalidade_w
from	pls_mensalidade_seg_item	a
where	a.nr_seq_mensalidade_seg = nr_seq_mensalidade_seg_p
and	a.ie_tipo_mensalidade <> 'P';

--Deve selecionar somente o item 1 pois vai ser embutido o desconto
select	max(a.nr_sequencia),
	max(a.vl_item)
into STRICT	nr_seq_preco_pre_w,
	vl_preco_pre_w
from	pls_mensalidade_seg_item a
where	a.nr_seq_mensalidade_seg	= nr_seq_mensalidade_seg_p
and	a.ie_tipo_item	= '1';

select	max(a.nr_sequencia),
	max(a.vl_item)
into STRICT	nr_seq_reaj_custo_w,
	vl_preco_reaj_custo_w
from	pls_mensalidade_seg_item a
where	a.nr_seq_mensalidade_seg	= nr_seq_mensalidade_seg_p
and	a.ie_tipo_item	= '25';

select	max(a.nr_sequencia),
	max(a.vl_item)
into STRICT	nr_seq_preco_faixa_etaria_w,
	vl_preco_faixa_etaria_w
from	pls_mensalidade_seg_item a
where	a.nr_seq_mensalidade_seg	= nr_seq_mensalidade_seg_p
and	a.ie_tipo_item	= '5';

--Valor minimo permitido para a tabela de preco
begin
select	nr_seq_tabela,
	coalesce(vl_minimo_mensalidade,0)
into STRICT	nr_seq_tabela_preco_w,
	vl_minimo_w
from	pls_segurado_preco
where	nr_sequencia		= nr_seq_segurado_preco_p;
exception
when others then
	nr_seq_tabela_preco_w	:= null;
	vl_minimo_w		:= 0;
end;

for r_c01_w in C01 loop
	begin
	if	((coalesce(r_c01_w.nr_seq_contrato_grupo::text, '') = '') or (r_c01_w.nr_seq_contrato_grupo = nr_seq_contrato_p)) then
		dt_inicio_cobertura_w	:= dt_inicio_cobertura_p;
		dt_fim_cobertura_w	:= dt_fim_cobertura_p;

		if (r_c01_w.ie_lancamento_bonificacao = 'P') then
			ie_tipo_mensalidade_w	:= 'P';
		else
			ie_tipo_mensalidade_w	:= 'N';
		end if;

		SELECT * FROM pls_mens_bonific_restricao(nr_seq_mensalidade_seg_p, dt_referencia_p, r_c01_w.nr_seq_bonificacao, nr_seq_segurado_p, cd_pessoa_fisica_p, nr_seq_pagador_p, nr_seq_contrato_p, ie_situacao_trabalhista_p, ie_remido_p, nm_usuario_p, ie_restricao_w, ds_obs_restricao_w, r_c01_w.nr_seq_vinculo_bonificacao, r_c01_w.dt_inicio_vigencia) INTO STRICT ie_restricao_w, ds_obs_restricao_w;
		SELECT * FROM pls_consistir_cobertura_bonif(r_c01_w.nr_seq_bonificacao, nr_seq_segurado_p, dt_referencia_p, r_c01_w.nr_seq_vinculo_sca, r_c01_w.nr_seq_vinculo_bonificacao, cd_estabelecimento_p, nm_usuario_p, ie_cobertura_w, ds_obs_cobertura_w, ie_aniversario_sca_w) INTO STRICT ie_cobertura_w, ds_obs_cobertura_w, ie_aniversario_sca_w;

		if (ie_restricao_w = 'N') then
			CALL pls_mens_processo_pck.add_item_bonificacao(nr_seq_mensalidade_seg_p, 0, ds_obs_restricao_w, r_c01_w.nr_seq_vinculo_bonificacao, nr_seq_vinculo_sca_w, dt_inicio_cobertura_w, dt_fim_cobertura_w, ie_tipo_mensalidade_w);
		elsif (ie_cobertura_w = 'N') then
			CALL pls_mens_processo_pck.add_item_bonificacao(nr_seq_mensalidade_seg_p, 0, ds_obs_cobertura_w, r_c01_w.nr_seq_vinculo_bonificacao, nr_seq_vinculo_sca_w, dt_inicio_cobertura_w, dt_fim_cobertura_w, ie_tipo_mensalidade_w);
		else

			if (r_c01_w.nr_seq_vinculo_sca IS NOT NULL AND r_c01_w.nr_seq_vinculo_sca::text <> '') and (coalesce(ie_aniversario_sca_w,'N') = 'S') then
				null; --Se for bonificacao vinculada a SCA, e o campo ie_aniversario_sca_w estiver marcado, no mes de aniversario do SCA, o sistema ira gerar lancamento programado de bonificacao para 12 meses,. Essa bonificacao sera gerada na mensalidade apenas como lancamento programado
			else
				nr_seq_vinculo_sca_w	:= r_c01_w.nr_seq_vinculo_sca;

				--Buscar o vinculo do SCA com o beneficiario quando a bonificacao for de lancamento programado
				if (coalesce(nr_seq_vinculo_sca_w::text, '') = '') then
					select	max(c.nr_sequencia)
					into STRICT	nr_seq_vinculo_sca_w
					from	pls_bonificacao_vinculo a,
						pls_plano b,
						pls_sca_vinculo c
					where	b.nr_sequencia	= a.nr_seq_plano
					and	b.nr_sequencia	= c.nr_seq_plano
					and	a.nr_sequencia	= r_c01_w.nr_seq_vinculo_bonificacao
					and	c.nr_seq_segurado = nr_seq_segurado_p;
				end if;

				for r_c02_w in C02(r_c01_w.nr_seq_bonificacao, qt_idade_p, nr_parcela_p, ie_acao_contrato_p, nr_seq_parentesco_p, nr_seq_forma_cobranca_p, r_c01_w.vl_bonificacao, r_c01_w.tx_bonificacao) loop
					begin
					vl_bonificacao_w		:= 0;
					vl_bonificacao_reaj_custo_w	:= 0;
					vl_bonificacao_faixa_etaria_w	:= 0;

					if	(r_c02_w.ie_bonificacao_prioridade = 'S' AND r_c02_w.ie_lancamento_mensalidade = 'D') then
						vl_bonificacao_gerado_w	:= pls_mens_processo_pck.obter_valor_bonific_vetor(nr_seq_mensalidade_seg_p);
					else
						vl_bonificacao_gerado_w	:= 0;
					end if;

					if (r_c02_w.ie_tipo_regra = 'M') then
						ie_beneficiario_cooperado_w	:= 'N';
						if (r_c02_w.ie_cooperado = 'S') then
							qt_tempo_cooperado_w	:= 0;

							select	count(1)
							into STRICT	qt_pessoa_cooperado_w
							from	pls_cooperado
							where	cd_pessoa_fisica	= cd_pessoa_fisica_p;

							if (qt_pessoa_cooperado_w > 0) then
								if	((r_c02_w.ie_cooperado_ativo = 'T') or (r_c02_w.ie_cooperado_prestador = 'S')) then
									select	max(nr_sequencia)
									into STRICT	nr_seq_cooperado_w
									from	pls_cooperado
									where	cd_pessoa_fisica	= cd_pessoa_fisica_p;

									if (r_c02_w.ie_cooperado_prestador = 'S') then
										select	count(1)
										into STRICT	qt_prestador_w
										from	pls_prestador
										where	ie_tipo_relacao = 'C'
										and	cd_pessoa_fisica = cd_pessoa_fisica_p
										and	((r_c02_w.ie_cooperado_ativo = 'T') or (r_c02_w.ie_cooperado_ativo = coalesce(ie_situacao, 'A')));

										if (qt_prestador_w = 0) then
											nr_seq_cooperado_w	:= null;
										end if;
									end if;
								elsif (r_c02_w.ie_cooperado_ativo = 'I') then
									select	max(nr_sequencia)
									into STRICT	nr_seq_cooperado_w
									from	pls_cooperado
									where	cd_pessoa_fisica	= cd_pessoa_fisica_p
									and	((dt_exclusao IS NOT NULL AND dt_exclusao::text <> '') or (dt_suspensao IS NOT NULL AND dt_suspensao::text <> ''));
								elsif (r_c02_w.ie_cooperado_ativo = 'A') then
									select	max(nr_sequencia)
									into STRICT	nr_seq_cooperado_w
									from	pls_cooperado
									where	cd_pessoa_fisica	= cd_pessoa_fisica_p
									and	coalesce(dt_exclusao::text, '') = ''
									and	coalesce(dt_suspensao::text, '') = '';
								end if;

								if (nr_seq_cooperado_w IS NOT NULL AND nr_seq_cooperado_w::text <> '') then
									begin
									select	trunc(months_between(dt_referencia_p, dt_inclusao) / 12)
									into STRICT	qt_tempo_cooperado_w
									from	pls_cooperado
									where	nr_sequencia	= nr_seq_cooperado_w;
									exception
									when others then
										qt_tempo_cooperado_w	:= 0;
									end;

									if (qt_tempo_cooperado_w >= r_c02_w.qt_tempo_cooperado_inicial) and (qt_tempo_cooperado_w <= r_c02_w.qt_tempo_cooperado_final) then
										--Buscar o conjuge, caso exista taxa cadastrada para o mesmo
										ie_beneficiario_cooperado_w	:= 'S';
										if (r_c02_w.tx_bonificacao_conjuge > 0) then
											select	max(a.nr_sequencia)
											into STRICT	nr_seq_dependente_legal_w
											from	pls_segurado	a
											where	a.nr_seq_titular	= nr_seq_segurado_p
											and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
											and	coalesce(a.dt_rescisao::text, '') = ''
											and	coalesce(a.ie_bonific_cooperado,'N')	= 'S';

											if (nr_seq_dependente_legal_w IS NOT NULL AND nr_seq_dependente_legal_w::text <> '') then
												insert into pls_segurado_mensalidade(nr_sequencia, nr_seq_segurado, cd_estabelecimento,
													dt_referencia, ie_tipo_item, dt_atualizacao,
													dt_atualizacao_nrec, nm_usuario, nm_usuario_nrec,
													vl_item, tx_desconto, ie_situacao, ie_acao_desfazer)
												values (nextval('pls_segurado_mensalidade_seq'), nr_seq_dependente_legal_w, cd_estabelecimento_p,
													dt_referencia_p, '14', clock_timestamp(),
													clock_timestamp(), nm_usuario_p, nm_usuario_p,
													0, r_c02_w.tx_bonificacao_conjuge, 'A', 'E');
											end if;
										end if;
									end if;
								end if;
							end if;
						end if;

						if	((ie_beneficiario_cooperado_w = 'S' AND r_c02_w.ie_cooperado = 'S') or (r_c02_w.ie_cooperado = 'N')) then
							if	((coalesce(r_c02_w.qt_parcelas_pagas_inicial,0) = 0) and (coalesce(r_c02_w.qt_parcelas_pagas_final,0) = 0)) then
								nr_parcela_dia_w		:= 0;
								ie_consiste_parcela_em_dia_w	:= 'N';
							else
								nr_parcela_dia_w		:= pls_obter_nr_parcela_em_dia(nr_seq_mensalidade_p, nr_seq_mensalidade_seg_p, r_c01_w.nr_seq_vinculo_bonificacao);
								ie_consiste_parcela_em_dia_w	:= 'S';
							end if;

							if (r_c02_w.qt_titulares_inicial <> 0 or r_c02_w.qt_titulares_final <> 0) then
								if (nr_seq_contrato_p IS NOT NULL AND nr_seq_contrato_p::text <> '') then
									select	max(dt_contrato)
									into STRICT	dt_contrato_w
									from	pls_contrato
									where	nr_sequencia	= nr_seq_contrato_p;
								elsif (nr_seq_intercambio_p IS NOT NULL AND nr_seq_intercambio_p::text <> '') then
									select	max(dt_inclusao)
									into STRICT	dt_contrato_w
									from	pls_intercambio
									where	nr_sequencia	= nr_seq_intercambio_p;
								end if;

								if (nr_parcela_contrato_p = 1) or (fim_dia(add_months(dt_referencia_p,-1)) < fim_dia(dt_contrato_w)) then
									qt_titulares_w	:= pls_obter_qt_titulares_ativos(nr_seq_contrato_p, nr_seq_intercambio_p, r_c01_w.nr_seq_grupo_contrato, fim_dia(dt_contrato_w));
								else
									qt_titulares_w	:= pls_obter_qt_titulares_ativos(nr_seq_contrato_p, nr_seq_intercambio_p, r_c01_w.nr_seq_grupo_contrato, fim_dia(add_months(dt_referencia_p,-1)));
								end if;
								ie_consiste_qt_titular_w	:= 'S';
							else
								qt_titulares_w	:= 0;
								ie_consiste_qt_titular_w	:= 'N';
							end if;

							if	((ie_consiste_parcela_em_dia_w = 'S' and nr_parcela_dia_w between r_c02_w.qt_parcelas_pagas_inicial and r_c02_w.qt_parcelas_pagas_final) or (ie_consiste_parcela_em_dia_w = 'N')) and
								((ie_consiste_qt_titular_w = 'S' and qt_titulares_w between r_c02_w.qt_titulares_inicial and r_c02_w.qt_titulares_final) or (ie_consiste_qt_titular_w = 'N')) and
								((ie_titularidade_w = r_c02_w.ie_titularidade) or (r_c02_w.ie_titularidade = 'A')) then
								vl_item_w := 0;
								vl_reaj_variacao_custo_w := 0;
								vl_faixa_etaria_w := 0;

								for r_c03_w in C03(nr_seq_mensalidade_seg_p, nr_seq_vinculo_sca_w) loop
									begin
									if (pls_obter_item_mens(r_c02_w.ie_tipo_item,r_c03_w.ie_tipo_item) = 'S') and
										((r_c03_w.ie_tipo_item <> '15') or (r_c03_w.ie_tipo_item = '15' AND r_c03_w.nr_parcela_sca >= r_c02_w.nr_parcela_inicial_sca and r_c03_w.nr_parcela_sca <= r_c02_w.nr_parcela_final_sca)) then

										if (r_c02_w.ie_lancamento_mensalidade = 'E') and (r_c03_w.ie_tipo_item = '25') then
											vl_reaj_variacao_custo_w := r_c03_w.vl_item;
										elsif (r_c02_w.ie_lancamento_mensalidade = 'E') and (r_c03_w.ie_tipo_item = '5') then
											vl_faixa_etaria_w := r_c03_w.vl_item;
										elsif (r_c02_w.ie_lancamento_mensalidade = 'E') and (r_c03_w.ie_tipo_item = '4') then
											--Se a bonificacao for embutida, o item de cobranca retroativa nao pode somar no item do preco pre estabelecido
											vl_item_w := vl_item_w + 0;
										else
											vl_item_w := vl_item_w + r_c03_w.vl_item;
										end if;
									end if;
									end;
								end loop;--C03
								if (vl_item_w > 0) then
									vl_bonificacao_regra_w	:= r_c02_w.vl_bonificacao;

									if (ie_tipo_mensalidade_w = 'P') then
										select	count(1),
											max(a.nr_sequencia)
										into STRICT	qt_mens_seg_w,
											nr_seq_mens_seg_arredond_w
										from	pls_mensalidade_segurado a,
											pls_mensalidade b
										where	b.nr_sequencia		= a.nr_seq_mensalidade
										and	b.nr_sequencia		= nr_seq_mensalidade_p
										and	exists (SELECT	1
												from	pls_mensalidade_seg_item x
												where	a.nr_sequencia	= x.nr_seq_mensalidade_seg);

										if (nr_seq_mensalidade_seg_p = nr_seq_mens_seg_arredond_w) then
											vl_arredondamento_w	:= r_c02_w.vl_bonificacao - (round((r_c02_w.vl_bonificacao / qt_mens_seg_w)::numeric, 2) * qt_mens_seg_w);
											vl_bonificacao_regra_w	:= vl_arredondamento_w + round((r_c02_w.vl_bonificacao / qt_mens_seg_w)::numeric, 2);
										else
											vl_bonificacao_regra_w	:= r_c02_w.vl_bonificacao / qt_mens_seg_w;
										end if;
									end if;

									vl_bonificacao_w := ((r_c02_w.tx_bonificacao/100) * (vl_item_w + vl_bonificacao_gerado_w)) + vl_bonificacao_regra_w;
								end if;

								if (vl_reaj_variacao_custo_w <> 0) then
									vl_bonificacao_reaj_custo_w	:= ((r_c02_w.tx_bonificacao/100) * vl_reaj_variacao_custo_w);
								end if;

								if (vl_faixa_etaria_w <> 0) then
									vl_bonificacao_faixa_etaria_w	:= ((r_c02_w.tx_bonificacao/100) * vl_faixa_etaria_w);
								end if;
							end if;
						end if;
					elsif (r_c02_w.ie_tipo_regra = 'D') then
						tx_desconto_w	:= 0;
						vl_desconto_w	:= 0;
						vl_desconto_ww	:= 0;

						if	((r_c02_w.ie_demitido_exonerado = 'N') and (coalesce(ie_situacao_trabalhista_p::text, '') = '')) or (r_c02_w.ie_demitido_exonerado = 'S') then

							if (r_c02_w.ie_mes_ref_desconto = 'P') then
								dt_referencia_w	:= add_months(dt_referencia_p, -1);
							else
								dt_referencia_w	:= fim_mes(dt_referencia_p);
							end if;

							qt_vidas_w	:= pls_obter_qt_vidas_bonificacao(r_c01_w.nr_seq_grupo_contrato, nr_seq_contrato_p, nr_seq_intercambio_p,
													nr_seq_segurado_p, nr_seq_titular_p, r_c02_w.ie_possui_bonificacao, r_c02_w.ie_tipo_vidas_contrato,
													r_c02_w.ie_demitido_exonerado, r_c02_w.ie_acao_contrato, r_c01_w.nr_seq_bonificacao,
													dt_referencia_w);

							select	max(nr_sequencia)
							into STRICT	nr_seq_preco_regra_w
							from	pls_preco_regra
							where	nr_seq_regra = r_c02_w.nr_seq_desconto
							and	qt_vidas_w between coalesce(qt_min_vidas,qt_vidas_w) and coalesce(qt_max_vidas,qt_vidas_w);

							if (nr_seq_preco_regra_w IS NOT NULL AND nr_seq_preco_regra_w::text <> '') then
								select	max(tx_desconto),
									max(vl_desconto)
								into STRICT	tx_desconto_w,
									vl_desconto_w
								from	pls_preco_regra
								where	nr_sequencia	= nr_seq_preco_regra_w;

								if (ie_tipo_mensalidade_w = 'P') then
									if (r_c02_w.ie_tipo_item IS NOT NULL AND r_c02_w.ie_tipo_item::text <> '') then
										select	count(1),
											max(a.nr_sequencia)
										into STRICT	qt_mens_seg_w,
											nr_seq_mens_seg_arredond_w
										from	pls_mensalidade_segurado a,
											pls_mensalidade b,
											pls_segurado c
										where	b.nr_sequencia		= a.nr_seq_mensalidade
										and	a.nr_seq_segurado	= c.nr_sequencia
										and	b.nr_sequencia		= nr_seq_mensalidade_p
										and	(((r_c02_w.ie_demitido_exonerado = 'N') and (coalesce(ie_situacao_trabalhista::text, '') = '')) or (r_c02_w.ie_demitido_exonerado = 'S'))
										and	exists (SELECT	1
												from	pls_mensalidade_seg_item x
												where	a.nr_sequencia	= x.nr_seq_mensalidade_seg
												and	pls_obter_item_mens(r_c02_w.ie_tipo_item, x.ie_tipo_item) = 'S');
									else
										select	count(1),
											max(a.nr_sequencia)
										into STRICT	qt_mens_seg_w,
											nr_seq_mens_seg_arredond_w
										from	pls_mensalidade_segurado a,
											pls_mensalidade b,
											pls_segurado c
										where	b.nr_sequencia		= a.nr_seq_mensalidade
										and	a.nr_seq_segurado	= c.nr_sequencia
										and	b.nr_sequencia		= nr_seq_mensalidade_p
										and	(((r_c02_w.ie_demitido_exonerado = 'N') and (coalesce(ie_situacao_trabalhista::text, '') = '')) or (r_c02_w.ie_demitido_exonerado = 'S'))
										and	exists (SELECT	1
												from	pls_mensalidade_seg_item x
												where	a.nr_sequencia	= x.nr_seq_mensalidade_seg);
									end if;

									if (nr_seq_mensalidade_seg_p = nr_seq_mens_seg_arredond_w) then
										if (r_c02_w.ie_tipo_item IS NOT NULL AND r_c02_w.ie_tipo_item::text <> '') then
											select	count(1)
											into STRICT	qt_mens_seg_ww
											from	pls_mensalidade_segurado a,
												pls_mensalidade b,
												pls_segurado c
											where	b.nr_sequencia		= a.nr_seq_mensalidade
											and	a.nr_seq_segurado	= c.nr_sequencia
											and	b.nr_sequencia		= nr_seq_mensalidade_p
											and	a.nr_sequencia		<> nr_seq_mens_seg_arredond_w
											and	(((r_c02_w.ie_demitido_exonerado = 'N') and (coalesce(ie_situacao_trabalhista::text, '') = '')) or (r_c02_w.ie_demitido_exonerado = 'S'))
											and	exists (SELECT	1
													from	pls_mensalidade_seg_item x
													where	a.nr_sequencia	= x.nr_seq_mensalidade_seg
													and	pls_obter_item_mens(r_c02_w.ie_tipo_item, x.ie_tipo_item) = 'S');
										else
											select	count(1)
											into STRICT	qt_mens_seg_ww
											from	pls_mensalidade_segurado a,
												pls_mensalidade b,
												pls_segurado c
											where	b.nr_sequencia		= a.nr_seq_mensalidade
											and	a.nr_seq_segurado	= c.nr_sequencia
											and	b.nr_sequencia		= nr_seq_mensalidade_p
											and	a.nr_sequencia		<> nr_seq_mens_seg_arredond_w
											and	(((r_c02_w.ie_demitido_exonerado = 'N') and (coalesce(ie_situacao_trabalhista::text, '') = '')) or (r_c02_w.ie_demitido_exonerado = 'S'))
											and	exists (SELECT	1
													from	pls_mensalidade_seg_item x
													where	a.nr_sequencia	= x.nr_seq_mensalidade_seg);
										end if;

										if (qt_mens_seg_ww <> qt_mens_seg_w) then
											vl_desconto_ww	:= vl_desconto_w / qt_mens_seg_w;
											vl_desconto_w	:= vl_desconto_w - (vl_desconto_ww * qt_mens_seg_ww);
										else
											vl_desconto_w	:= vl_desconto_w / qt_mens_seg_w;
										end if;
									else
										vl_desconto_w	:= vl_desconto_w / qt_mens_seg_w;
									end if;
								end if;
							end if;
						end if;

						if (r_c02_w.ie_tipo_item IS NOT NULL AND r_c02_w.ie_tipo_item::text <> '') then
							vl_mens_desconto_w := 0;
							for r_c03_w in C03(nr_seq_mensalidade_seg_p, nr_seq_vinculo_sca_w) loop
								begin
								if (pls_obter_item_mens(r_c02_w.ie_tipo_item,r_c03_w.ie_tipo_item) = 'S') then
									vl_mens_desconto_w := vl_mens_desconto_w + r_c03_w.vl_item;
								end if;
								end;
							end loop;--C03
						else
							vl_mens_desconto_w	:= vl_mensalidade_w;
						end if;

						if (coalesce(vl_mens_desconto_w, 0) > 0) then
							vl_bonificacao_w := ((coalesce(tx_desconto_w,0)/100) * (vl_mens_desconto_w + vl_bonificacao_gerado_w)) + coalesce(vl_desconto_w,0); --Calcula os desconto das bonificacoes
						end if;
					end if;

					if (r_c02_w.ie_bonificacao_proporcional = 'S') and
						((trunc(r_c01_w.dt_inicio_vigencia,'dd') between dt_inicio_cobertura_p and dt_fim_cobertura_p) or (r_c01_w.dt_fim_vigencia between dt_inicio_cobertura_p and dt_fim_cobertura_p)) then
						qt_dias_mens_w	:= trunc(dt_fim_cobertura_p - dt_inicio_cobertura_p) + 1;

						if (r_c01_w.dt_inicio_vigencia > dt_inicio_cobertura_p) then
							dt_inicio_cobertura_w	:= r_c01_w.dt_inicio_vigencia;
						else
							dt_inicio_cobertura_w	:= dt_inicio_cobertura_p;
						end if;

						if (r_c01_w.dt_fim_vigencia < dt_fim_cobertura_p) then
							dt_fim_cobertura_w	:= r_c01_w.dt_fim_vigencia;
						else
							dt_fim_cobertura_w	:= dt_fim_cobertura_p;
						end if;

						qt_dias_proporcional_w	:= trunc(dt_fim_cobertura_w - dt_inicio_cobertura_w) + 1;

						vl_bonificacao_w	:= (vl_bonificacao_w / qt_dias_mens_w) * qt_dias_proporcional_w;
					end if;

					vl_bonificacao_w		:= vl_bonificacao_w * -1;
					vl_bonificacao_reaj_custo_w	:= vl_bonificacao_reaj_custo_w * -1;
					vl_bonificacao_faixa_etaria_w	:= vl_bonificacao_faixa_etaria_w * -1;
					ds_observacao_w			:= wheb_mensagem_pck.get_texto(1106902,'NM_BONIFICACAO='||r_c02_w.nm_bonificacao||';DS_ORIGEM='||r_c01_w.ds_origem); --#@NM_BONIFICACAO#@, vinculado ao #@DS_ORIGEM#@.
					if (vl_bonificacao_w <> 0) then
						if (r_c02_w.ie_lancamento_mensalidade = 'E') then
							--Valor gerado com a bonificacao "#@NM_BONIFICACAO#@", vinculado ao #@DS_ORIGEM#@. Valor original: #@VL_ORIGINAL#@
							ds_observacao_w	:= wheb_mensagem_pck.get_texto(1106899,'NM_BONIFICACAO='||r_c02_w.nm_bonificacao||';DS_ORIGEM='||r_c01_w.ds_origem||';VL_ORIGINAL='||Campo_Mascara_virgula(vl_preco_pre_w));

							if	((vl_mensalidade_w + vl_bonificacao_w) < vl_minimo_w) then
								vl_item_embutido_w	:= vl_minimo_w;
								--#@NM_BONIFICACAO#@, respeitando o valor minimo permitido para a tabela de preco. Vinculado ao #@DS_ORIGEM#@. Valor original: #@VL_ORIGINAL#@
								ds_observacao_w := wheb_mensagem_pck.get_texto(1106898,'NM_BONIFICACAO='||r_c02_w.nm_bonificacao||';DS_ORIGEM='||r_c01_w.ds_origem||';VL_ORIGINAL='||Campo_Mascara_virgula(vl_preco_pre_w));
							else
								vl_bonificacao_embutido_w	:= vl_bonificacao_embutido_w + vl_bonificacao_w;
								vl_item_embutido_w	:= vl_preco_pre_w + vl_bonificacao_embutido_w;
							end if;

							if (vl_bonificacao_w <> 0) and (nr_seq_preco_pre_w IS NOT NULL AND nr_seq_preco_pre_w::text <> '') then
								update	pls_mensalidade_seg_item
								set	vl_item			= coalesce(vl_item_embutido_w,0),
									vl_bonificacao_embutido	= vl_bonificacao_embutido_w,
									ds_observacao		= substr(ds_observacao || ' - ' || ds_observacao_w, 1, 4000)
								where	nr_sequencia		= nr_seq_preco_pre_w;
							end if;
						elsif (r_c02_w.ie_lancamento_mensalidade = 'D') then
							if (vl_minimo_w > 0) then
								vl_bonif_vetor_w := pls_mens_processo_pck.obter_valor_bonific_vetor(nr_seq_mensalidade_seg_p);

								if	((vl_mensalidade_w + (vl_bonificacao_w+vl_bonif_vetor_w)) < vl_minimo_w) then
									vl_bonificacao_w := (((vl_mensalidade_w - vl_minimo_w) + vl_bonif_vetor_w) *-1);
									--#@NM_BONIFICACAO#@, respeitando o valor minimo permitido para a tabela de preco. Vinculado ao #@DS_ORIGEM#@.
									ds_observacao_w := wheb_mensagem_pck.get_texto(1106896,'NM_BONIFICACAO='||r_c02_w.nm_bonificacao||';DS_ORIGEM='||r_c01_w.ds_origem);
								end if;
							end if;

							CALL pls_mens_processo_pck.add_item_bonificacao(nr_seq_mensalidade_seg_p, vl_bonificacao_w, ds_observacao_w, r_c01_w.nr_seq_vinculo_bonificacao, nr_seq_vinculo_sca_w, dt_inicio_cobertura_w, dt_fim_cobertura_w, ie_tipo_mensalidade_w);
						end if;
					end if;

					if (r_c02_w.ie_lancamento_mensalidade = 'E') then
						if (vl_bonificacao_reaj_custo_w <> 0) and (nr_seq_reaj_custo_w IS NOT NULL AND nr_seq_reaj_custo_w::text <> '') then
							--Valor gerado com a bonificacao #@NM_BONIFICACAO#@, vinculado ao #@DS_ORIGEM#@. Valor original: #@VL_ORIGINAL#@
							ds_observacao_w	:= wheb_mensagem_pck.get_texto(1106894,'NM_BONIFICACAO='||r_c02_w.nm_bonificacao||';DS_ORIGEM='||r_c01_w.ds_origem||';VL_ORIGINAL='||Campo_Mascara_virgula(vl_preco_reaj_custo_w));
							vl_total_bonif_reaj_custo_w := vl_bonificacao_reaj_custo_w + vl_total_bonif_reaj_custo_w;
							vl_item_embutido_w	:= vl_preco_reaj_custo_w + vl_total_bonif_reaj_custo_w;
							update	pls_mensalidade_seg_item
							set	vl_item			= coalesce(vl_item_embutido_w,0),
								vl_bonificacao_embutido	= vl_total_bonif_reaj_custo_w,
								ds_observacao		= substr(ds_observacao || ' - ' || ds_observacao_w, 1, 4000)
							where	nr_sequencia		= nr_seq_reaj_custo_w;
						end if;

						if (vl_bonificacao_faixa_etaria_w <> 0) and (nr_seq_preco_faixa_etaria_w IS NOT NULL AND nr_seq_preco_faixa_etaria_w::text <> '') then
							--Valor gerado com a bonificacao #@NM_BONIFICACAO#@, vinculado ao #@DS_ORIGEM#@. Valor original: #@VL_ORIGINAL#@
							ds_observacao_w	:= wheb_mensagem_pck.get_texto(1106893,'NM_BONIFICACAO='||r_c02_w.nm_bonificacao||';DS_ORIGEM='||r_c01_w.ds_origem||';VL_ORIGINAL='||Campo_Mascara_virgula(vl_preco_faixa_etaria_w));
							vl_total_bonif_faixa_etaria_w := vl_total_bonif_faixa_etaria_w + vl_bonificacao_faixa_etaria_w;
							vl_item_embutido_w	:= vl_preco_faixa_etaria_w + vl_total_bonif_faixa_etaria_w;
							update	pls_mensalidade_seg_item
							set	vl_item			= coalesce(vl_item_embutido_w,0),
								vl_bonificacao_embutido	= vl_total_bonif_faixa_etaria_w,
								ds_observacao		= substr(ds_observacao || ' - ' || ds_observacao_w, 1, 4000)
							where	nr_sequencia		= nr_seq_preco_faixa_etaria_w;
						end if;
					end if;
					end;
				end loop; --C02
			end if;
		end if;
	end if;
	end;
end loop;--C01
commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_mens_item_bonificacao ( nr_seq_mensalidade_seg_p pls_mensalidade_segurado.nr_sequencia%type, dt_referencia_p pls_mensalidade_segurado.dt_mesano_referencia%type, nr_seq_segurado_p pls_mensalidade_segurado.nr_seq_segurado%type, qt_idade_p pls_mensalidade_segurado.qt_idade%type, nr_parcela_p pls_mensalidade_segurado.nr_parcela%type, nr_parcela_contrato_p pls_mensalidade_segurado.nr_parcela_contrato%type, dt_inicio_cobertura_p pls_mensalidade_segurado.dt_inicio_cobertura%type, dt_fim_cobertura_p pls_mensalidade_segurado.dt_fim_cobertura%type, nr_seq_lote_p pls_lote_mensalidade.nr_sequencia%type, nr_seq_mensalidade_p pls_mensalidade.nr_sequencia%type, nr_seq_pagador_p pls_mensalidade.nr_seq_pagador%type, nr_seq_forma_cobranca_p pls_mensalidade.nr_seq_forma_cobranca%type, nr_seq_titular_p pls_segurado.nr_sequencia%type, nr_seq_contrato_p pls_segurado.nr_seq_contrato%type, nr_seq_intercambio_p pls_segurado.nr_seq_intercambio%type, nr_seq_parentesco_p pls_segurado.nr_seq_parentesco%type, ie_acao_contrato_p pls_segurado.ie_acao_contrato%type, cd_pessoa_fisica_p pls_segurado.cd_pessoa_fisica%type, ie_situacao_trabalhista_p pls_segurado.ie_situacao_trabalhista%type, nr_seq_segurado_preco_p pls_segurado_preco.nr_sequencia%type, ie_remido_p pls_mensalidade_segurado.ie_remido%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) FROM PUBLIC;

