-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE bsc_gerar_comunic_ind_analise ( dt_referencia_p timestamp, nm_usuario_p text) AS $body$
DECLARE


ds_email_w		varchar(255);
nm_pessoa_fisica_w	varchar(60);
cd_dia_w			smallint;
ds_out_w			varchar(50);
cd_ano_w		bsc_ind_inf.cd_ano%type;
cd_periodo_w		bsc_ind_inf.cd_periodo%type;
ds_comunicado_w		bsc_regra_comunic_ind.ds_comunicado%type;
ds_titulo_w		bsc_regra_comunic_ind.ds_titulo%type;
nm_indicador_w		bsc_indicador.nm_indicador%type;
nm_usuario_resp_w	usuario.nm_usuario%type;
nr_dia_liberacao_w	bsc_indicador.nr_dia_liberacao%type;
nr_seq_indicador_w	bsc_indicador.nr_sequencia%type;
nr_seq_origem_w		bsc_indicador.nr_seq_origem%type;
nr_seq_regra_w		bsc_regra_comunic_ind.nr_sequencia%type;
qt_dia_aviso_w		bsc_regra_comunic_ind.qt_dia_aviso%type;
ie_comunicacao_w	bsc_regra_comunic_ind.ie_comunicacao%type;
ie_email_w		bsc_regra_comunic_ind.ie_email%type;
ds_email_origem_w	bsc_regra_comunic_ind.ds_email_origem%type;
cd_pessoa_fisica_w	bsc_ind_resp.cd_pessoa_fisica%type;
ds_origem_indicador_w	bsc_origem_indic.ds_origem_indicador%type;
ds_comunicado_email_w	tasy_conversao_rtf.ds_texto%type;
ds_comunicado_ww	bsc_regra_comunic_ind.ds_comunicado%type;
qt_meta_w		bsc_ind_inf.qt_meta%type;
qt_limite_w		bsc_ind_inf.qt_limite%type;
qt_real_w		bsc_ind_inf.qt_real%type;
ds_email_usuario_w	varchar(255);
nm_user_w		varchar(50);

c01 CURSOR FOR
SELECT	a.nr_sequencia,
	coalesce(a.ds_titulo,''),
	coalesce(a.qt_dia_aviso,0),
	a.ds_comunicado,
	coalesce(a.ie_comunicacao,''),
	coalesce(a.ie_email,''),
	coalesce(a.ds_email_origem,'')
from	bsc_regra_comunic_ind a
where	a.ie_situacao	= 'A'
and	a.ie_tipo_regra = 'LA';

c02 CURSOR FOR
SELECT	a.nr_sequencia,
	a.nm_indicador,
	a.nr_dia_liberacao,
	a.nr_seq_origem,
	b.cd_pessoa_fisica,
	d.nm_usuario
from	bsc_indicador a,
	bsc_ind_resp b,
	bsc_ind_inf c,
	usuario d
where	a.ie_situacao	= 'A'
and	a.nr_sequencia	= b.nr_seq_indicador
and	a.nr_sequencia	= c.nr_seq_indicador
and	b.cd_pessoa_fisica	= d.cd_pessoa_fisica
and	d.ie_situacao	= 'A'
and	c.cd_ano	= cd_ano_w
and	c.cd_periodo	= cd_periodo_w
and	b.ie_receb_comunic_inf = 'S'
and	substr(obter_se_periodo_vigente(b.dt_inicio_vigencia,b.dt_fim_vigencia,clock_timestamp()),1,1) = 'S'
and	not exists (	select	1
			from	bsc_ind_inf_analise y
			where	c.nr_sequencia		= y.nr_seq_inf
			and	b.cd_pessoa_fisica	= obter_pessoa_fisica_usuario(y.nm_usuario_lib, 'C'));


BEGIN

cd_dia_w	:= (to_char(dt_referencia_p,'DD'))::numeric;
cd_periodo_w	:= (to_char(dt_referencia_p,'MM'))::numeric;
cd_ano_w	:= (to_char(dt_referencia_p,'YYYY'))::numeric;

select	coalesce(max(username),'X')
into STRICT	nm_user_w
from	user_users;

if (to_char(clock_timestamp(),'dd')>= 21 or nm_user_w != 'CORP') then

	open c01;
	loop
	fetch c01 into
		nr_seq_regra_w,
		ds_titulo_w,
		qt_dia_aviso_w,
		ds_comunicado_w,
		ie_comunicacao_w,
		ie_email_w,
		ds_email_origem_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		open c02;
		loop
		fetch c02 into
			nr_seq_indicador_w,
			nm_indicador_w,
			nr_dia_liberacao_w,
			nr_seq_origem_w,
			cd_pessoa_fisica_w,
			nm_usuario_resp_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			begin
			ds_comunicado_ww	:= ds_comunicado_w;
			select	max(ds_origem_indicador)
			into STRICT	ds_origem_indicador_w
			from	bsc_origem_indic
			where	nr_sequencia	= nr_seq_origem_w;

			select	coalesce(max(qt_meta),0),
				coalesce(max(qt_limite),0),
				coalesce(max(qt_real),0)
			into STRICT	qt_meta_w,
				qt_limite_w,
				qt_real_w
			from	bsc_ind_inf
			where	nr_seq_indicador	= nr_seq_indicador_w
			and	cd_ano		= cd_ano_w
			and	cd_periodo	= cd_periodo_w;

			if (coalesce(nm_usuario_resp_w,'X') <> 'X') and (coalesce(ie_email_w,'N') = 'S') then
				begin

				select	max(ds_email)
				into STRICT	ds_email_usuario_w
				from	usuario
				where	cd_pessoa_fisica = cd_pessoa_fisica_w
				and	ie_situacao = 'A';


				begin
				ds_email_w := coalesce(ds_email_usuario_w,obter_dados_compl_pf_pj(null,cd_pessoa_fisica_w,'EMA'));
				exception
				when others then
				ds_email_w := null;
				end;


				if (coalesce(ds_email_w,'X') <> 'X') then
					begin
					ds_out_w := converte_rtf_string('select ds_comunicado from bsc_regra_comunic_ind where nr_sequencia = :nr_seq_regra', nr_seq_regra_w, nm_usuario_p, ds_out_w);

					begin
					select	ds_texto
					into STRICT	ds_comunicado_email_w
					from	tasy_conversao_rtf
					where	nr_sequencia = ds_out_w;
					exception when others then
						ds_comunicado_email_w	:= '';
					end;

					if (coalesce(ds_comunicado_email_w,'X') <> 'X') then
						begin

						nm_pessoa_fisica_w	:= substr(obter_pessoa_fisica_usuario(nm_usuario_resp_w, 'N'),1,60);
						ds_comunicado_email_w	:= substr(replace_macro(ds_comunicado_email_w,'@RESPONSAVEL',nm_pessoa_fisica_w),1,4000);
						ds_comunicado_email_w	:= substr(replace_macro(ds_comunicado_email_w,'@INDICADOR',nm_indicador_w),1,4000);
						ds_comunicado_email_w	:= substr(replace_macro(ds_comunicado_email_w,'@LIBERACAO',nr_dia_liberacao_w),1,4000);
						ds_comunicado_email_w	:= substr(replace_macro(ds_comunicado_email_w,'@ORIGEM',ds_origem_indicador_w),1,4000);
						ds_comunicado_email_w	:= substr(replace_macro(ds_comunicado_email_w,'@META',campo_mascara_virgula(qt_meta_w)),1,4000);
						ds_comunicado_email_w	:= substr(replace_macro(ds_comunicado_email_w,'@LIMITE',campo_mascara_virgula(qt_limite_w)),1,4000);
						ds_comunicado_email_w	:= substr(replace_macro(ds_comunicado_email_w,'@REAL',campo_mascara_virgula(qt_real_w)),1,4000);

						CALL enviar_email(	ds_titulo_w,
								substr(ds_comunicado_email_w,1,4000),
								ds_email_origem_w,
								ds_email_w,
								nm_usuario_p,
								'A');
						end;
					end if;
					end;
				end if;
				end;
			end if;
			end;
		end loop;
		close c02;
		end;
	end loop;
	close c01;
end if;
commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE bsc_gerar_comunic_ind_analise ( dt_referencia_p timestamp, nm_usuario_p text) FROM PUBLIC;

