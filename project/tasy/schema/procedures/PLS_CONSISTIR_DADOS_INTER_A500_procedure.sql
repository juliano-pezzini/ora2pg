-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_consistir_dados_inter_a500 ( nr_seq_fatura_p pls_fatura.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type, ie_tipo_arquivo_p w_pls_inconsistencia_int.ie_tipo_arquivo%type) AS $body$
DECLARE

						
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Efetuar consistencia do A500 TXT
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta:
[X]  Objetos do dicionario [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
dt_fatura_w			pls_lote_faturamento.dt_geracao_titulos%type;
nr_seq_lote_fat_w		pls_lote_faturamento.nr_sequencia%type;
vl_tot_pls_fatura_w		pls_fatura.vl_fatura%type;
ie_conta_fechada_w		pls_regra_faturamento.ie_conta_fechada%type;
vl_tot_ato_cooperado_w		pls_fatura.vl_ato_princ%type;
qt_conta_w			integer := 0;
ds_conta_w			varchar(255);
ds_complemento_w		w_pls_inconsistencia_int.ds_complemento%type;
vl_total_servico_w		ptu_nota_servico.vl_procedimento%type := 0;
vl_total_fatura_w		ptu_fatura.vl_total_fatura%type := 0;
nr_seq_incons_w			w_pls_inconsistencia_int.nr_sequencia%type;
vl_total_w			double precision;
qt_med_assit_w			integer := 0;
qt_saude_ocupac_w		integer := 0;
qt_registro_w			integer := 0;
ie_novo_pos_estab_w		pls_visible_false.ie_novo_pos_estab%type;
ie_tipo_arquivo_cob_w		ptu_fatura.ie_tipo_arquivo_cob%type;
cd_interface_w			pls_regra_arquivo_fatura.cd_interface%type;
ie_versao_w			bigint;
nr_seq_lote_w			pls_fatura.nr_seq_lote%type;

-- FATURAS
c01 CURSOR(	nr_seq_fatura_pc		pls_fatura.nr_sequencia%type) FOR
	SELECT	nr_seq_pls_fatura,
		nr_sequencia,
		cd_unimed_origem,
		cd_unimed_destino,
		dt_geracao,
		nr_competencia,
		ie_classif_cobranca,
		vl_total_fatura,
		vl_total_ndc,
		nr_versao_transacao nr_versao,
		coalesce(ie_tipo_cobranca_fatura, 'C') ie_tipo_cobranca_fatura
	from	ptu_fatura
	where	nr_seq_pls_fatura = nr_seq_fatura_pc;
	
-- Cursor pra verificar as contas da fatura que nao entraram no PTU
c02 CURSOR(	nr_seq_fatura_pc	pls_fatura.nr_sequencia%type) FOR
	SELECT	b.nr_seq_conta
	from	pls_fatura_conta	b,
		pls_fatura_evento	a
	where	b.nr_seq_fatura_evento	= a.nr_sequencia
	and	a.nr_seq_fatura		= nr_seq_fatura_pc
	and	not exists (	SELECT	1
				from	ptu_nota_cobranca_item_v	c
				where	c.nr_seq_conta			= b.nr_seq_conta
				and	c.nr_seq_pls_fatura		= nr_seq_fatura_pc);
				
-- Cursor pra verificar se contem conta medica sem o atendimento completo.
c03 CURSOR(	nr_seq_fatura_pc		pls_fatura.nr_sequencia%type,
		ie_tipo_cobranca_fatura_pc	ptu_fatura.ie_tipo_cobranca_fatura%type) FOR
	SELECT	c.nr_sequencia,
		c.cd_guia_ok
	from	pls_protocolo_conta	d,
		pls_conta		c,
		pls_fatura_conta	b,
		pls_fatura_evento	a
	where	b.nr_seq_fatura_evento	= a.nr_sequencia
	and	d.nr_sequencia		= c.nr_seq_protocolo
	and	a.nr_seq_fatura		= nr_seq_fatura_pc
	and	c.nr_sequencia		= b.nr_seq_conta
	and	d.ie_apresentacao	!= 'R' -- nao pode validar reapresentacao

	-- tambem nao deve considerar consultas
	and	d.ie_tipo_guia		!= '3'
	and	exists (SELECT	1
			from	pls_protocolo_conta		f,
				pls_conta			e
			where	e.cd_guia_ok			= c.cd_guia_ok
			and	e.nr_seq_segurado		= c.nr_seq_segurado
			and	f.nr_sequencia			= e.nr_seq_protocolo
			and	f.ie_apresentacao		= d.ie_apresentacao
			and exists (	select	1
					from	pls_conta_pos_estabelecido	h
					where	h.nr_seq_conta 			= e.nr_sequencia
					and	h.ie_situacao			= 'A'
					and	h.ie_status_faturamento		= CASE WHEN ie_tipo_cobranca_fatura_pc='A' THEN  'A'  ELSE 'L' END
					and	coalesce(h.nr_seq_lote_fat::text, '') = ''
					and	ie_novo_pos_estab_w		= 'N'
					
union all

					select	1
					from	pls_conta_pos_proc		h
					where	h.nr_seq_conta 			= e.nr_sequencia
					and	ie_novo_pos_estab_w		= 'S'
					and	h.ie_status_faturamento	in ('L', 'P')
					and	coalesce(h.nr_seq_lote_fat::text, '') = ''
					
union all

					select	1
					from	pls_conta_pos_mat		h
					where	h.nr_seq_conta 			= e.nr_sequencia
					and	ie_novo_pos_estab_w		= 'S'
					and	h.ie_status_faturamento	in ('L', 'P')
					and	coalesce(h.nr_seq_lote_fat::text, '') = ''));
					
-- Cursor pra verificar se dentro do lote de faturamento tem conta aberta, Se caiu conta de um atendimento em uma fatura e outras contas em outra fatura.
c04 CURSOR(	nr_seq_fatura_pc	pls_fatura.nr_sequencia%type) FOR
	SELECT	c.nr_seq_conta,
		c.cd_guia_referencia,
		c.nr_seq_segurado
	from	pls_fatura_conta	c,
		pls_fatura_evento	b,
		pls_fatura		a
	where	a.nr_sequencia		= b.nr_seq_fatura
	and	b.nr_sequencia		= c.nr_seq_fatura_evento
	and	a.nr_sequencia		= nr_seq_fatura_pc
	and	exists (SELECT	1
			from	pls_fatura_conta	f,
				pls_fatura_evento	e,
				pls_fatura		d
			where	d.nr_sequencia		= e.nr_seq_fatura
			and	e.nr_sequencia		= f.nr_seq_fatura_evento
			and	d.nr_seq_lote		= a.nr_seq_lote
			and	f.nr_seq_conta		!= c.nr_seq_conta
			and	d.nr_sequencia		!= a.nr_sequencia
			and	f.cd_guia_referencia	= c.cd_guia_referencia
			and	f.nr_seq_segurado	= c.nr_seq_segurado);
			
c05 CURSOR( 	nr_seq_fatura_pc		ptu_fatura.nr_sequencia%type) FOR
	SELECT	sum(b.vl_faturado_ndc) + sum(b.vl_faturado) vl_total,
		b.nr_seq_conta
	from	pls_fatura_conta	b,
		pls_fatura_evento	a
	where	a.nr_sequencia		= b.nr_seq_fatura_evento
	and	a.nr_seq_fatura		= nr_seq_fatura_pc
	group by b.nr_seq_conta
	order by b.nr_seq_conta;
	
-- COBRANCAS
c06 CURSOR(	nr_seq_fatura_pc		pls_fatura.nr_sequencia%type) FOR
	SELECT	a.nr_sequencia,
		a.nr_seq_fatura,
		a.nr_lote,
		a.cd_usuario_plano,
		trunc(a.dt_atendimento, 'dd') dt_atendimento,
		a.dt_atendimento dt_atendimento_cobr,
		a.cd_excecao,
		a.ie_carater_atendimento,
		a.ie_paciente,
		a.ie_tipo_saida_spdat,
		a.ie_tipo_atendimento,
		a.nm_beneficiario,
		a.cd_cid,
		a.nr_seq_serv_pre_pagto,
		a.cd_unimed,
		a.ie_pcmso,
		a.pr_taxa,
		a.ie_envia_conta,
		a.nr_linha,
		a.ie_necessita_doc_fisico,
		a.ie_doc_fisico_conf,
		a.nm_usuario_doc_fisico,
		a.dt_conferencia_doc,
		a.dt_inicio_geracao_conta,
		a.dt_fim_geracao_conta,
		a.dt_inicio_consist_conta,
		a.dt_fim_consist_conta,
		a.dt_internacao,
		a.dt_alta,
		a.dt_ultima_autoriz,
		a.tp_nota,
		a.id_nota_principal,
		a.nr_ver_tiss,
		a.nr_guia_tiss_prestador,
		a.nr_guia_tiss_principal,
		a.nr_guia_tiss_operadora,
		a.tp_ind_acidente,
		a.motivo_encerram,
		a.nr_cnpj_cpf_req,
		a.nm_prest_req,
		a.sg_cons_prof_req,
		a.nr_cons_prof_req,
		a.sg_uf_cons_req,
		a.nr_cbo_req,
		a.nr_fatura_glosada,
		a.nr_ndr_glosada,
		a.nr_lote_glosado,
		a.nr_nota_glosada,
		a.dt_protocolo,
		a.id_rn,
		a.nr_seq_conta,
		a.ie_consistente,
		a.nr_nota,
		a.nr_nota_numerico,
		a.nr_guia_principal_numerico,
		a.nr_guia_principal,
		(SELECT	CASE WHEN max(b.ie_tipo_protocolo)='R' THEN  'S'  ELSE 'N' END
		from	pls_conta		c,
			pls_protocolo_conta	b
		where	b.nr_sequencia		= c.nr_seq_protocolo
		and	c.nr_sequencia		= a.nr_seq_conta) ie_reemb_cta,
		a.tp_consulta,
		dt_conhecimento,
		nr_lote_prest,
		nr_cnpj_cpf,
		tp_pessoa,
    a.ie_saude_ocupacional
	from	ptu_nota_cobranca	a
	where	a.nr_seq_fatura 	= nr_seq_fatura_pc;
	
-- HOSPITALAR
c07 CURSOR(	nr_seq_cobranca_pc		ptu_nota_cobranca.nr_sequencia%type) FOR
	SELECT	nr_sequencia,
		nr_seq_nota_cobr,
		nr_lote,
		cd_unimed_hospital,
		cd_hospital,
		nm_hospital,
		ie_tipo_acomodacao,
		dt_internacao,
		dt_alta,
		tx_mult_amb,
		cd_cgc_hospital,
		ie_tipo_internacao,
		ie_faturamento,
		ie_ind_acidente,
		cd_motivo_saida,
		qt_nasc_vivos,
		qt_nasc_mortos,
		qt_nasc_vivos_pre,
		qt_obito_precoce,
		qt_obito_tardio,
		ie_int_gestacao,
		ie_int_aborto,
		ie_int_transtorno,
		ie_int_puerperio,
		ie_int_recem_nascido,
		ie_int_neonatal,
		ie_int_baixo_peso,
		ie_int_parto_cesarea,
		ie_int_parto_normal,
		cd_cid_obito,
		ie_obito_mulher,
		nr_declara_obito,
		nr_seq_apres,
		nr_linha,
		reg_internacao,
		nr_nota,
		nm_medico_auditor,
		nr_crm_auditor,
		cd_uf_crm,
		nm_enfer_auditor,
		nr_coren_auditor,
		cd_uf_coren
	from	ptu_nota_hospitalar
	where	nr_seq_nota_cobr = nr_seq_cobranca_pc;
	
-- SERVICOS
c08 CURSOR(	nr_seq_cobranca_pc		ptu_nota_cobranca.nr_sequencia%type) FOR
	SELECT	a.nr_sequencia,
		a.nr_seq_nota_cobr,
		a.nr_lote,
		a.cd_prestador,
		a.nm_prestador,
		a.ie_tipo_participacao,
		a.dt_procedimento,
		a.ie_tipo_tabela,
		a.dt_atualizacao,
		a.nm_usuario,
		a.dt_atualizacao_nrec,
		a.nm_usuario_nrec,
		a.cd_procedimento,
		a.ie_origem_proced,
		a.qt_procedimento,
		a.ie_rede_propria,
		a.ie_tipo_pessoa_prestador,
		a.vl_procedimento,
		a.vl_custo_operacional,
		a.vl_filme,
		a.cd_porte_anestesico,
		a.cd_prestador_req,
		a.ie_via_acesso,
		a.vl_adic_procedimento,
		a.vl_adic_co,
		a.vl_adic_filme,
		a.cd_especialidade,
		a.nr_seq_nota,
		a.ds_hora_procedimento,
		a.cd_cnes_prest,
		a.nm_profissional_prestador,
		a.sg_cons_prof_prest,
		a.nr_cons_prof_prest,
		a.sg_uf_cons_prest,
		a.nr_cgc_cpf_req,
		a.nm_prestador_requisitante,
		a.sg_cons_prof_req,
		a.nr_cons_prof_req,
		a.sg_uf_cons_req,
		a.ie_reembolso,
		a.nr_autorizacao,
		a.nr_cgc_cpf,
		a.ie_pacote,
		a.cd_ato,
		a.tx_procedimento,
		a.ie_tipo_prestador,
		a.nr_seq_conta_proc,
		a.nr_seq_conta_mat,
		a.vl_pago_prest,
		a.nr_seq_registro,
		a.cd_unimed_autorizadora,
		a.cd_unimed_pre_req,
		a.cd_unimed_prestador,
		a.nr_linha,
		a.nr_seq_a500,
		a.cd_pacote,
		a.nr_guia_tiss,
		a.tp_autoriz,
		a.ds_servico,
		a.nr_seq_proc_partic,
		a.cd_servico,
		a.nr_seq_material,
		a.hr_servico,
		a.ie_alto_custo,
		a.nr_seq_pacote_agrup,
		a.hr_final,
		a.id_acres_urg_emer,
		a.nr_cbo_exec,
		a.tec_utilizada,
		a.dt_autoriz,
		a.dt_solicitacao,
		a.unidade_medida,
		a.nr_reg_anvisa,
		a.cd_munic,
		a.cd_ref_material_fab,
		a.dt_pgto_prestador,
		a.ie_consistente,
		a.nr_nota,
		a.nr_nota_numerico,
		a.det_reg_anvisa,
		(SELECT	max(b.ie_tipo_despesa)
		from	pls_material	b
		where	b.nr_sequencia	= a.nr_seq_material) ie_tipo_material,
		(select	max(b.nr_seq_tuss_mat_item)
		from	pls_material	b
		where	b.nr_sequencia = a.nr_seq_material) nr_seq_tuss_mat_item,
		(select	max(b.cd_material_a900)
		from	pls_material	b
		where	b.nr_sequencia = a.nr_seq_material) cd_material_a900
	from	ptu_nota_servico	a
	where	a.nr_seq_nota_cobr	= nr_seq_cobranca_pc;
	
c09 CURSOR( 	nr_seq_cobranca_pc		ptu_nota_cobranca.nr_sequencia%type) FOR  -- COMPLEMENTO
	SELECT	nr_sequencia,
		nr_seq_nota_cobr,
		nr_lote,
		ie_tipo_complemento,
		ds_complemento,
		nr_linha,
		especif_material,
		nr_nota
	from	ptu_nota_complemento
	where	nr_seq_nota_cobr = nr_seq_cobranca_pc;
	
c10 CURSOR(	nr_seq_cobranca_pc		ptu_nota_cobranca.nr_sequencia%type) FOR  -- COMPLEMENTO
	SELECT	nr_sequencia,
		nr_seq_nota_cobr,
		ds_link_nfe,
		nr_nota_fiscal,
		nr_linha
	from	ptu_nota_fiscal
	where	nr_seq_nota_cobr = nr_seq_cobranca_pc;
	
c11 CURSOR(	nr_seq_lote_pc		pls_lote_faturamento.nr_sequencia%type,
		nr_seq_fatura_pc	pls_fatura.nr_sequencia%type) FOR
	SELECT	nr_seq_congenere
	from	pls_fatura
	where	nr_seq_lote = nr_seq_lote_pc
	and	(nr_seq_congenere IS NOT NULL AND nr_seq_congenere::text <> '')
	and	coalesce(ie_cancelamento::text, '') = ''
	and	coalesce(ie_impedimento_cobranca, 'F') <> 'NF'
	
union

	SELECT	nr_seq_congenere
	from	pls_fatura
	where	nr_sequencia = nr_seq_fatura_pc
	and	(nr_seq_congenere IS NOT NULL AND nr_seq_congenere::text <> '')
	and	coalesce(ie_cancelamento::text, '') = ''
	and	coalesce(ie_impedimento_cobranca, 'F') <> 'NF';
	
BEGIN

delete	FROM w_pls_inconsistencia_int
where	nr_seq_fatura = nr_seq_fatura_p;

select	trunc(max(b.dt_geracao_titulos), 'dd'),
	max(b.nr_sequencia),
	coalesce(max(a.vl_fatura), 0) + coalesce(max(a.vl_total_ndc), 0),
	coalesce(max(c.ie_conta_fechada), 'N'),
	coalesce(max(a.vl_ato_aux), 0) + coalesce(max(a.vl_ato_princ), 0) + coalesce(max(a.vl_ato_secundario), 0),
	coalesce(max((select	max(v.ie_novo_pos_estab)
		from	pls_visible_false v
		where	v.cd_estabelecimento	= b.cd_estabelecimento)),'N') ie_novo_pos_estab,
	coalesce(max((select	max(p.ie_tipo_arquivo_cob)
		from	ptu_fatura p
		where	p.nr_seq_pls_fatura = a.nr_sequencia)),'502') ie_tipo_arquivo_cob
into STRICT	dt_fatura_w,
	nr_seq_lote_fat_w,
	vl_tot_pls_fatura_w,
	ie_conta_fechada_w,
	vl_tot_ato_cooperado_w,
	ie_novo_pos_estab_w,
	ie_tipo_arquivo_cob_w
from	pls_regra_faturamento	c,
	pls_lote_faturamento	b,
	pls_fatura		a
where	b.nr_sequencia		= a.nr_seq_lote
and	c.nr_sequencia		= b.nr_seq_regra_fat
and	a.nr_sequencia		= nr_seq_fatura_p;

-- FATURAS
for r_c01_w in c01( nr_seq_fatura_p ) loop

	-- Cursor pra verificar as contas da fatura que nao entraram no PTU
	qt_conta_w := 0;
	ds_conta_w := null;
	
	for r_c02_w in c02( r_c01_w.nr_seq_pls_fatura ) loop
		qt_conta_w := 1;
		ds_conta_w := substr(ds_conta_w || '/Conta: ' || r_c02_w.nr_seq_conta || ' ', 1, 255);
	end loop;
	
	if (qt_conta_w > 0) then
		ds_complemento_w := 'Existem contas para as quais nao foi gerada nota cobranca ' || ds_conta_w;
		
		pls_inserir_incon_intercambio(166, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
	end if;

	-- Conta fechada, o atendimento deve estar todo somente em uma unica fatura.
	if (ie_conta_fechada_w = 'S') then
	
		-- Cursor pra verificar se contem conta medica sem o atendimento completo.
		qt_conta_w := 0;
		ds_conta_w := null;
		
		for r_c03_w in c03( r_c01_w.nr_seq_pls_fatura, r_c01_w.ie_tipo_cobranca_fatura ) loop
			qt_conta_w := 1;
			ds_conta_w := substr(ds_conta_w || '/Conta: ' || r_c03_w.nr_sequencia || ' Guia: ' || r_c03_w.cd_guia_ok || ' ', 1, 255);
		end loop;
		
		if (qt_conta_w > 0) then
			ds_complemento_w := 'Existem atendimento sem todas as contas na fatura: ' || ds_conta_w;
			
			pls_inserir_incon_intercambio(167, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
		end if;
		
		-- Cursor pra verificar se dentro do lote de faturamento tem conta aberta se caiu conta de um atendimento em uma fatura e outras contas em outra fatura.
		qt_conta_w := 0;
		ds_conta_w := null;
		
		for r_c04_w in c04( r_c01_w.nr_seq_pls_fatura ) loop
			qt_conta_w := 1;
			ds_conta_w := substr(ds_conta_w || chr(13) || 'Conta: ' || r_c04_w.nr_seq_conta || ' Guia: ' || r_c04_w.cd_guia_referencia || ' ', 1, 255);
		end loop;
		
		if (qt_conta_w > 0) then
			ds_complemento_w := 'Existem atendimentos com contas separadas em faturas diferentes: ' || ds_conta_w;
			
			pls_inserir_incon_intercambio(167, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
		end if;
	end if;
	
	ds_complemento_w := 'Fatura PTU / TASY: ' || r_c01_w.nr_sequencia || ' / ' || r_c01_w.nr_seq_pls_fatura;
	
	if (coalesce(r_c01_w.cd_unimed_destino::text, '') = '') then -- Nao foi localizado o codigo da Unimed que ira receber o arquivo (R501)
		pls_inserir_incon_intercambio(37, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
	end if;
	
	if (coalesce(r_c01_w.cd_unimed_origem::text, '') = '') then --Nao foi localizado o codigo da Unimed que gerou o arquivo (R501)
		pls_inserir_incon_intercambio(38, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
	end if;
	
	if (coalesce(r_c01_w.dt_geracao::text, '') = '') then -- Nao foi localizado a data de geracao do arquivo de envio (R501)
		pls_inserir_incon_intercambio(39, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
	end if;
	
	if (coalesce(r_c01_w.nr_competencia::text, '') = '') then -- Nao foi localizado o numero da competencia (R501)
		pls_inserir_incon_intercambio(40, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
	end if;
	
	if (coalesce(r_c01_w.ie_classif_cobranca::text, '') = '') then -- Nao foi localizado a classificacao da cobranca (R501)
		pls_inserir_incon_intercambio(41, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
	end if;
	
	if (ie_tipo_arquivo_cob_w = '502') then -- Cobranca normal
		select	coalesce(sum(coalesce(b.vl_procedimento, 0)), 0) + coalesce(sum(coalesce(b.vl_custo_operacional, 0)), 0) + coalesce(sum(coalesce(b.vl_filme, 0)), 0) +
			coalesce(sum(coalesce(b.vl_adic_procedimento, 0)), 0) + coalesce(sum(coalesce(b.vl_adic_co, 0)), 0) + coalesce(sum(coalesce(b.vl_adic_filme, 0)), 0)
		into STRICT	vl_total_servico_w
		from	ptu_nota_servico 	b,
			ptu_nota_cobranca 	a
		where	a.nr_sequencia		= b.nr_seq_nota_cobr
		and	a.nr_seq_fatura		= r_c01_w.nr_sequencia;
		
	elsif (ie_tipo_arquivo_cob_w = '507') then -- Cobranca reembolso
		select	coalesce(sum(coalesce(b.vl_serv_cob,0)),0)
		into STRICT	vl_total_servico_w
		from	ptu_nota_servico_rrs 	b,
			ptu_nota_cobranca_rrs 	a
		where	a.nr_sequencia		= b.nr_seq_nota_cobr_rrs
		and	a.nr_seq_fatura		= r_c01_w.nr_sequencia;
	end if;
	
	vl_total_fatura_w := (coalesce(r_c01_w.vl_total_fatura, 0) + coalesce(r_c01_w.vl_total_ndc, 0));
	
	if (vl_total_servico_w <> vl_total_fatura_w) or (vl_tot_pls_fatura_w <> vl_total_fatura_w) then
		
		-- O valor total da fatura esta diferente do valor total dos servicos (R501)
		if (vl_total_servico_w <> vl_total_fatura_w) then
			ds_complemento_w := 	'Total fatura: ' 	|| Campo_Mascara_virgula(vl_total_fatura_w) 	|| chr(10) ||
						'Total servicos: ' 	|| Campo_Mascara_virgula(vl_total_servico_w) 	|| chr(10) || chr(10) ||
						'Fatura TASY: ' 	|| r_c01_w.nr_seq_pls_fatura			|| chr(10) ||
						'Fatura PTU: ' 		|| r_c01_w.nr_sequencia;
			nr_seq_incons_w	:= 128;
			
		-- O valor total da fatura TASY esta diferente do valor total da fatura PTU
		elsif (vl_tot_pls_fatura_w <> vl_total_fatura_w) then
			ds_complemento_w := 	'Total fatura TASY: ' 	|| Campo_Mascara_virgula(vl_tot_pls_fatura_w) 	|| chr(10) ||
						'Total fatura PTU: ' 	|| Campo_Mascara_virgula(vl_total_fatura_w) 	|| chr(10) || chr(10) ||
						'Fatura TASY: ' 	|| r_c01_w.nr_seq_pls_fatura			|| chr(10) ||
						'Fatura PTU: ' 		|| r_c01_w.nr_sequencia;
			nr_seq_incons_w	:= 168;
		end if;
		
		for r_c05_w in c05( r_c01_w.nr_seq_pls_fatura ) loop
			if (ie_novo_pos_estab_w = 'N') then
				select	sum(c.vl_procedimento) + sum(c.vl_custo_operacional) + sum(c.vl_filme) + sum(c.vl_adic_procedimento) + sum(c.vl_adic_co) + sum(c.vl_adic_filme) vl_total
				into STRICT	vl_total_w
				from	ptu_nota_servico_item	c,
					ptu_nota_servico 	b,
					ptu_nota_cobranca	a
				where	b.nr_sequencia		= c.nr_seq_nota_servico
				and	b.nr_seq_nota_cobr	= a.nr_sequencia
				and	a.nr_seq_fatura		= r_c01_w.nr_sequencia
				and	c.nr_seq_conta		= r_c05_w.nr_seq_conta;
				
			elsif (ie_novo_pos_estab_w = 'S') then
				select	sum(coalesce(vl_total,0))
				into STRICT	vl_total_w
				from (SELECT (sum(c.vl_procedimento) + sum(c.vl_custo_operacional) + sum(c.vl_filme) + sum(c.vl_adic_procedimento) + sum(c.vl_adic_co) + sum(c.vl_adic_filme)) vl_total
					from	ptu_nota_servico_proc	c,
						ptu_nota_servico 	b,
						ptu_nota_cobranca	a
					where	b.nr_sequencia		= c.nr_seq_nota_servico
					and	b.nr_seq_nota_cobr	= a.nr_sequencia
					and	a.nr_seq_fatura		= r_c01_w.nr_sequencia
					and	c.nr_seq_conta		= r_c05_w.nr_seq_conta
					
union all

					SELECT (sum(c.vl_procedimento) + sum(c.vl_custo_operacional) + sum(c.vl_filme) + sum(c.vl_adic_procedimento) + sum(c.vl_adic_co) + sum(c.vl_adic_filme)) vl_total
					from	ptu_nota_servico_mat	c,
						ptu_nota_servico 	b,
						ptu_nota_cobranca	a
					where	b.nr_sequencia		= c.nr_seq_nota_servico
					and	b.nr_seq_nota_cobr	= a.nr_sequencia
					and	a.nr_seq_fatura		= r_c01_w.nr_sequencia
					and	c.nr_seq_conta		= r_c05_w.nr_seq_conta) alias17;
			end if;
			
			if (vl_total_w <> r_c05_w.vl_total) then
				ds_complemento_w := substr(ds_complemento_w || chr(10) || 'Conta: ' || r_c05_w.nr_seq_conta,1,4000);
			end if;
		end loop;
		
		pls_inserir_incon_intercambio(nr_seq_incons_w, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
	end if;
	
	select	count(1)
	into STRICT	qt_med_assit_w
	from	ptu_nota_cobranca
	where	nr_seq_fatura = r_c01_w.nr_sequencia
	and	ie_paciente = '1';
	
	select	count(1)
	into STRICT	qt_saude_ocupac_w
	from	ptu_nota_cobranca
	where	nr_seq_fatura = r_c01_w.nr_sequencia
	and	ie_paciente <> '1';
	
	if (qt_med_assit_w > 0) and (qt_saude_ocupac_w > 0) then -- O arquivo nao podera conter atendimentos de Saude Ocupacional e Assistencial. Os atendimentos de cada grupo devem gerar arquivos distintos. Tipo paciente. (R502)
		pls_inserir_incon_intercambio(149, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
	end if;
	
	if (vl_tot_pls_fatura_w != vl_tot_ato_cooperado_w) then -- Valor total da fatura nao bate com o valor total de ato cooperado
		ds_complemento_w := 	'Fatura TASY: ' 	|| r_c01_w.nr_seq_pls_fatura 				|| chr(10) ||
					'Total fatura TASY: ' 	|| Campo_Mascara_virgula(vl_tot_pls_fatura_w) 		|| chr(10) ||
					'Total ato cooperado: ' || Campo_Mascara_virgula(vl_tot_ato_cooperado_w);
					
		pls_inserir_incon_intercambio(176, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
	end if;
	
	-- COBRANCAS
	for r_c06_w in c06( r_c01_w.nr_sequencia ) loop
		if	((dt_fatura_w - r_c06_w.dt_atendimento) >= 90) then -- Data de geracao do A500 superior a data do atendimento do beneficiario (R502)
			ds_complemento_w := 	'Data de geracao da fatura: ' 	|| to_char(dt_fatura_w, 'dd/mm/yyyy') 			|| chr(10) ||
						'Data do atendimento: ' 	|| to_char(r_c06_w.dt_atendimento, 'dd/mm/yyyy')	|| chr(10) || chr(10) ||
						'Conta: ' 			|| r_c06_w.nr_seq_conta					|| chr(10) ||
						'Cobranca: '			|| r_c06_w.nr_sequencia;
						
			pls_inserir_incon_intercambio(7, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
		end if;
		
		-- Obter o numero do lote de faturamento
		select	nr_seq_lote
		into STRICT	nr_seq_lote_w
		from	pls_fatura
		where	nr_sequencia	= nr_seq_fatura_p;
		
		for r_c11_w in c11( nr_seq_lote_w, nr_seq_fatura_p ) loop
			cd_interface_w := pls_obter_interf_ptu(cd_estabelecimento_p, r_c11_w.nr_seq_congenere, clock_timestamp(), 'A500');
		end loop;
		
		ie_versao_w	:= somente_numero(ptu_obter_versao_dominio('A500', cd_interface_w));

		-- Para versao 11.0a o NR_LOTE_PREST e o DT_CONHECIMENTO nao pode ser inserido nulo
		if ( ie_versao_w = 111) then
		
			if (coalesce(r_c06_w.dt_conhecimento::text, '') = '') then
				ds_complemento_w  :=	'Fatura: '	|| r_c01_w.nr_seq_pls_fatura	|| chr(10) ||
							'Conta: ' 	|| r_c06_w.nr_seq_conta		|| chr(10) ||
							'Cobranca: '	|| r_c06_w.nr_sequencia;
								
				pls_inserir_incon_intercambio(179, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
			end if;
			
			if (coalesce(r_c06_w.nr_lote_prest::text, '') = '') then
				ds_complemento_w  :=	'Fatura: '	|| r_c01_w.nr_seq_pls_fatura	|| chr(10) ||
							'Conta: ' 	|| r_c06_w.nr_seq_conta		|| chr(10) ||
							'Cobranca: '	|| r_c06_w.nr_sequencia;
								
				pls_inserir_incon_intercambio(180, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
			end if;
			
			-- Para versao 11.0a se o tp_nota = 3 e o tp_pessoa = 'J' e obrigatorio enviar o CNPJ
			if (r_c06_w.nr_cnpj_cpf IS NOT NULL AND r_c06_w.nr_cnpj_cpf::text <> '') and (r_c06_w.tp_pessoa = 'J') and (r_c06_w.tp_nota = 3) then
				if (valida_cpf_cnpj(lpad(trim(both r_c06_w.nr_cnpj_cpf),14,'0')) = 'N') then
					ds_complemento_w  :=	'Fatura: '	|| r_c01_w.nr_seq_pls_fatura	|| chr(10) ||
								'Conta: ' 	|| r_c06_w.nr_seq_conta		|| chr(10) ||
								'Cobranca: '	|| r_c06_w.nr_sequencia;
								
					pls_inserir_incon_intercambio(181, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
				end if;
			end if;

		end if;
		
		ds_complemento_w := 'Fatura PTU / TASY: ' || r_c01_w.nr_sequencia || ' / ' || r_c01_w.nr_seq_pls_fatura || chr(10) || 'Conta: ' || r_c06_w.nr_seq_conta || chr(10) || 'Cobranca: ' || r_c06_w.nr_sequencia;
		
		if (coalesce(r_c06_w.cd_unimed::text, '') = '') then -- Nao foi localizado o codigo da Unimed (R502)
			pls_inserir_incon_intercambio(42, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
		end if;
		
		if (coalesce(r_c06_w.nr_lote::text, '') = '') then -- Nao foi localizado o numero do lote de notas (R502)
			pls_inserir_incon_intercambio(43, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
		end if;
		
		if (coalesce(r_c06_w.cd_usuario_plano::text, '') = '') then -- Nao foi localizado o codigo de identificacao do beneficiario (R502)
			pls_inserir_incon_intercambio(44, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
		end if;
		
		if (coalesce(r_c06_w.dt_atendimento_cobr::text, '') = '') then -- Nao foi localizado a data de atendimento (R502)
			pls_inserir_incon_intercambio(45, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
		end if;
		
		if (coalesce(r_c06_w.cd_excecao::text, '') = '') then -- Nao foi localizado o codigo da excecao ao atendimento (R502)
			pls_inserir_incon_intercambio(46, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
		end if;
		
		if (r_c06_w.cd_excecao IS NOT NULL AND r_c06_w.cd_excecao::text <> '') and (r_c06_w.cd_excecao = 'J') and (r_c01_w.nr_versao >= 29) then -- PTU 10 ou maior
			select	count(1)
			into STRICT	qt_registro_w
			from	ptu_nota_cobranca
			where	nr_seq_fatura	= r_c01_w.nr_sequencia
			and	cd_excecao	!= 'J';
			
			if (qt_registro_w > 0) then -- Existe cobranca (R502) com codigo de excecao "J" junto a outras cobrancas
				pls_inserir_incon_intercambio(177, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
			end if;
		end if;
		
		if (coalesce(r_c06_w.ie_carater_atendimento::text, '') = '') and (r_c06_w.tp_nota in (2, 3)) then -- Nao foi localizado o tipo de carater de atendimento (R502) e Regra: Obrigatorio se TP_NOTA = 2 (SP/SADT) ou 3 (Internacao). Para as demais notas, preencher com branco.
			pls_inserir_incon_intercambio(47, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
		end if;
		
		if (coalesce(r_c06_w.ie_paciente::text, '') = '') then -- Nao foi localizado o tipo de paciente (R502)
			pls_inserir_incon_intercambio(48, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
		end if;
		
		if (coalesce(r_c06_w.ie_tipo_saida_spdat::text, '') = '') and (r_c06_w.tp_nota = 3) and (somente_numero(r_c06_w.nr_ver_tiss) < 30000) then -- Nao foi localizado o tipo de saida para atendimentos de consulta e SADT - TISS (R502)
			pls_inserir_incon_intercambio(49, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
		end if;
		
		if (coalesce(r_c06_w.ie_tipo_atendimento::text, '') = '') and (r_c06_w.tp_nota = 2) then -- Nao foi localizado o tipo de atendimento (R502)
			pls_inserir_incon_intercambio(50, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
		end if;
		
		if (r_c06_w.ie_tipo_atendimento IS NOT NULL AND r_c06_w.ie_tipo_atendimento::text <> '') and (r_c06_w.tp_nota != 2) then -- Regra: Para TP_NOTA=1, 3 ou 4, preencher com brancos. e Com tipo de nota Consulta, Internacao e Honorario Individual nao se deve ter tipo de atendimento informado
			pls_inserir_incon_intercambio(171, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
		end if;
		
		if (coalesce(r_c06_w.nr_nota::text, '') = '') then -- Nao foi localizado o numero da nota de controle da Unimed (R502)
			pls_inserir_incon_intercambio(51, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
		end if;
		
		if (coalesce(r_c06_w.tp_nota::text, '') = '') and (r_c06_w.tp_nota = 2) then -- Nao foi localizado o tipo de nota conforme guias TISS de cobranca (R502)
			pls_inserir_incon_intercambio(52, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
		end if;
		
		if (coalesce(r_c06_w.id_nota_principal::text, '') = '') then -- Nao foi localizado o indicador de nota principal (R502)
			pls_inserir_incon_intercambio(53, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
		end if;
		
		if (coalesce(r_c06_w.nr_ver_tiss::text, '') = '') then -- Nao foi localizado o numero de versao da TISS (R502)
			pls_inserir_incon_intercambio(54, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
		end if;
		
		if (coalesce(r_c06_w.nr_guia_tiss_prestador::text, '') = '') then -- Nao foi localizado o numero da guia TISS do prestador (R502)
			pls_inserir_incon_intercambio(55, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
		end if;
		
		if (coalesce(r_c06_w.tp_ind_acidente::text, '') = '') then -- Nao foi localizado o tipo de indicador de acidente (R502)
			pls_inserir_incon_intercambio(56, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
		end if;
		
		if (coalesce(r_c06_w.nm_prest_req::text, '') = '') and (r_c06_w.ie_tipo_atendimento <> 4) and (r_c06_w.tp_nota <> 1) then -- Nao foi localizado o nome do prestador requisitante (R502) e Opcional se atendimento for Consulta Eletiva.
			pls_inserir_incon_intercambio(57, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
		end if;
		
		if (coalesce(r_c06_w.sg_cons_prof_req::text, '') = '') and (r_c06_w.ie_tipo_atendimento <> 4) and (r_c06_w.tp_nota <> 1) then -- Nao foi localizada a sigla do conselho profissional do prestador requisitante (R502) e Opcional se atendimento for Consulta Eletiva.
			pls_inserir_incon_intercambio(58, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w || chr(10) || 'Prestador requisitante: ' || r_c06_w.nm_prest_req, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
		end if;
		
		if (coalesce(r_c06_w.nr_cons_prof_req::text, '') = '') and (r_c06_w.ie_tipo_atendimento <> 4) and (r_c06_w.tp_nota <> 1) then -- Nao foi localizado o numero do conselho profissional do prestador requisitante (R502) e Opcional se atendimento for Consulta Eletiva.
			pls_inserir_incon_intercambio(59, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w || chr(10) || 'Prestador requisitante: ' || r_c06_w.nm_prest_req, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
		end if;
		
		if (coalesce(r_c06_w.sg_uf_cons_req::text, '') = '') and (r_c06_w.ie_tipo_atendimento <> 4) and (r_c06_w.tp_nota <> 1) then -- Nao foi localizada a sigla da unidade federativa do conselho profissional do prestador requisitante (502) e Opcional se atendimento for Consulta Eletiva.
			pls_inserir_incon_intercambio(60, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w || chr(10) || 'Prestador requisitante: ' || r_c06_w.nm_prest_req, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
		end if;
		
		if (coalesce(r_c06_w.dt_protocolo::text, '') = '') then -- Nao foi localizada a data do protocolo do prestador (R502)
			pls_inserir_incon_intercambio(61, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
		end if;
		
		if (coalesce(r_c06_w.id_rn::text, '') = '') then -- Nao foi localizado o indicador de atendimento ao recem-nato (R502)
			pls_inserir_incon_intercambio(62, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
		end if;
		
		if (r_c06_w.sg_uf_cons_req IS NOT NULL AND r_c06_w.sg_uf_cons_req::text <> '') then
			select	count(1)
			into STRICT	qt_registro_w
			from	valor_dominio_v
			where	cd_dominio = '50'
			and	vl_dominio = r_c06_w.sg_uf_cons_req;
			
			if (qt_registro_w = 0) then -- Sigla da unidade federativa do conselho profissional do prestador esta incorreta.
				pls_inserir_incon_intercambio(145, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w || chr(10) || 'Prestador requisitante: ' || r_c06_w.nm_prest_req, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
			end if;
		end if;
		
		if (r_c06_w.ie_tipo_atendimento IS NOT NULL AND r_c06_w.ie_tipo_atendimento::text <> '') and (somente_numero(r_c06_w.nr_ver_tiss) >= 30200) then -- Tipo de atendimento incorreto para a versao do TISS e tipo de paciente informados (R502)
			
			if	somente_numero(r_c06_w.ie_tipo_atendimento) not in (14, 15, 16, 17, 18, 19, 20, 21) and somente_numero(coalesce(r_c06_w.ie_saude_ocupacional,9)) not in (1,2,3,4,5,6) and (r_c06_w.ie_paciente = '9') then
				pls_inserir_incon_intercambio(148, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w || chr(10) || 'Versao TISS: ' || r_c06_w.nr_ver_tiss, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
			end if;
			
			if (somente_numero(r_c06_w.ie_tipo_atendimento) not in (1, 2, 3, 4,5,6,7,8,9, 10, 11, 13, 23)) and (r_c06_w.ie_paciente = '1') then
				pls_inserir_incon_intercambio(148, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w || chr(10) || 'Versao TISS: ' || r_c06_w.nr_ver_tiss, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
			end if;
		end if;
		
		if (r_c06_w.tp_nota = 3) and (coalesce(r_c06_w.motivo_encerram::text, '') = '') then -- Obrigatorio o preenchimento do campo Motivo encerramento para o tipo de nota Internacao (R502)
			pls_inserir_incon_intercambio(151, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
		end if;
		
		if (r_c06_w.tp_nota in (3, 4)) and (coalesce(r_c06_w.dt_internacao::text, '') = '') then -- Nao foi localizado a data de internacao (Dt inicio faturamento) (R502)
			pls_inserir_incon_intercambio(157, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
		end if;
		
		if (r_c06_w.tp_nota in (3, 4)) and (coalesce(r_c06_w.dt_alta::text, '') = '') then -- Nao foi localizado a data de alta (Dt fim faturamento) (R502)
			pls_inserir_incon_intercambio(158, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
		end if;
		
		if (somente_numero(r_c06_w.nr_cbo_req) = 0) and (somente_numero(r_c06_w.nr_ver_tiss) >= 30200) and (r_c06_w.tp_nota <> 1) then -- O campo CBO req e obrigatorio para a versao TISS apresentada e para tipo de nota diferente de Consulta (R502)
			pls_inserir_incon_intercambio(159, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
		end if;
		
		if (r_c06_w.tp_nota in (3, 4)) and (r_c06_w.dt_internacao IS NOT NULL AND r_c06_w.dt_internacao::text <> '') and (r_c06_w.dt_atendimento_cobr < r_c06_w.dt_internacao) then -- Data de atendimento inferior a data de inicio de faturamento (R502)
			pls_inserir_incon_intercambio(160, r_c01_w.nr_seq_pls_fatura, null, 	ds_complemento_w				|| chr(10) ||
												'Data do atendimento: ' 			|| to_char(r_c06_w.dt_atendimento_cobr, 'dd/mm/yyyy hh24:mi:ss') || chr(10) ||
												'Data de inicio faturamento (Dt internacao): ' 	|| to_char(r_c06_w.dt_internacao, 'dd/mm/yyyy hh24:mi:ss'), cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
		end if;
		
		if (r_c06_w.tp_nota in (3, 4)) and (r_c06_w.dt_alta IS NOT NULL AND r_c06_w.dt_alta::text <> '') and (r_c06_w.dt_atendimento_cobr > r_c06_w.dt_alta) then -- Data de atendimento posterior a data final de faturamento (R502)
			pls_inserir_incon_intercambio(161, r_c01_w.nr_seq_pls_fatura, null, 	ds_complemento_w				|| chr(10) ||
												'Data do atendimento: ' 			|| to_char(r_c06_w.dt_atendimento_cobr, 'dd/mm/yyyy hh24:mi:ss') || chr(10) ||
												'Data final de faturamento (Dt alta): '		|| to_char(r_c06_w.dt_alta, 'dd/mm/yyyy hh24:mi:ss'), cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
		end if;
		
		if (coalesce(r_c06_w.tp_consulta::text, '') = '') and ((r_c06_w.tp_nota = 1) or (r_c06_w.tp_nota = 2 and r_c06_w.ie_tipo_atendimento = 4)) then -- Tipo de consulta nao informado, necessario para tipo de nota de consulta, e para nota SP/SADT com tipo de atendimento consulta
			pls_inserir_incon_intercambio(172, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
		end if;
		
		-- HOSPITALAR
		for r_c07_w in c07( r_c06_w.nr_sequencia ) loop
		
			ds_complemento_w :=	'Fatura PTU / TASY: ' || r_c01_w.nr_sequencia || ' / ' || r_c01_w.nr_seq_pls_fatura || chr(10) ||
						'Conta: ' 	|| r_c06_w.nr_seq_conta|| chr(10) ||
						'Cobranca: ' 	|| r_c06_w.nr_sequencia|| chr(10) ||
						'Hospitalar: ' 	|| r_c07_w.nr_sequencia;
						
			if (coalesce(r_c07_w.nr_lote::text, '') = '') then -- Nao foi localizado o numero do lote de notas (R503)
				pls_inserir_incon_intercambio(63, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
			end if;
			
			if (coalesce(r_c07_w.cd_unimed_hospital::text, '') = '') then -- Nao foi localizado o codigo da Unimed do hospital (R503)
				pls_inserir_incon_intercambio(64, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
			end if;
			
			if (coalesce(r_c07_w.cd_hospital::text, '') = '') then -- Nao foi localizado o codigo do hospital (R503)
				pls_inserir_incon_intercambio(65, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
			end if;
			
			if (coalesce(r_c07_w.nm_hospital::text, '') = '') then -- Nao foi localizado o nome do hospital (R503)
				pls_inserir_incon_intercambio(66, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
			end if;
			
			if (coalesce(r_c07_w.ie_tipo_acomodacao::text, '') = '') then -- Nao foi localizado o tipo de acomodacao (R503)
				pls_inserir_incon_intercambio(67, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
			end if;
			
			if (coalesce(r_c07_w.tx_mult_amb::text, '') = '') then -- Nao foi localizado o fator multiplicador da quantidade da AMB (R503)
				pls_inserir_incon_intercambio(68, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
			end if;
			
			if (coalesce(r_c07_w.cd_cgc_hospital::text, '') = '') then -- Nao foi localizado o cgc do hospital (R503)
				pls_inserir_incon_intercambio(69, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
			end if;
			
			if (coalesce(r_c07_w.ie_tipo_internacao::text, '') = '') then -- Nao foi localizado o tipo de internacao (R503)
				pls_inserir_incon_intercambio(70, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
			end if;
			
			if (coalesce(r_c07_w.ie_faturamento::text, '') = '') then -- Nao foi localizado o tipo de faturamento da conta hospitalar (R503)
				pls_inserir_incon_intercambio(71, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
			end if;
			
			if (coalesce(r_c07_w.nr_nota::text, '') = '') then -- Nao foi localizado o numero da nota de controle da Unimed (R503)
				pls_inserir_incon_intercambio(72, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
			end if;
			
			if (coalesce(r_c07_w.reg_internacao::text, '') = '') then -- Nao foi localizado o regime de internacao (R503)
				pls_inserir_incon_intercambio(73, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
			end if;
			
			if	((coalesce(r_c07_w.nm_medico_auditor::text, '') = '') or (coalesce(r_c07_w.nr_crm_auditor::text, '') = '') or (coalesce(r_c07_w.cd_uf_crm::text, '') = '')) and
				((coalesce(r_c07_w.nm_enfer_auditor::text, '') = '') or (coalesce(r_c07_w.nr_coren_auditor::text, '') = '') or (coalesce(r_c07_w.cd_uf_coren::text, '') = '')) then
				select	coalesce(sum(coalesce(b.vl_procedimento, 0)), 0) + coalesce(sum(coalesce(b.vl_custo_operacional, 0)), 0) + coalesce(sum(coalesce(b.vl_filme, 0)), 0) +
					coalesce(sum(coalesce(b.vl_adic_procedimento, 0)), 0) + coalesce(sum(coalesce(b.vl_adic_co, 0)), 0) + coalesce(sum(coalesce(b.vl_adic_filme, 0)), 0) vl_total
				into STRICT	vl_total_w
				from	ptu_nota_servico	b,
					ptu_nota_cobranca	a
				where	b.nr_seq_nota_cobr	= a.nr_sequencia
				and	a.nr_seq_fatura		= r_c01_w.nr_sequencia
				and	a.nr_seq_conta		= r_c06_w.nr_seq_conta;
				
				if (vl_total_w >= 15000) then -- Internacoes acima de 15 mil reais, obrigatorio identificacao do medico e enfermeiro opcional (R503)
					pls_inserir_incon_intercambio(162, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
				end if;
			end if;
		end loop;
		
		--SERVICO
		for r_c08_w in c08( r_c06_w.nr_sequencia )loop
			ds_complemento_w := 	'Fatura PTU / TASY: ' || r_c01_w.nr_sequencia || ' / ' || r_c01_w.nr_seq_pls_fatura || chr(10) ||
						'Conta: ' 	|| r_c06_w.nr_seq_conta|| chr(10) ||
						'Cobranca: ' 	|| r_c06_w.nr_sequencia|| chr(10) ||
						'Servico: ' 	|| r_c08_w.nr_sequencia;
						
			if (r_c08_w.nr_seq_conta_proc IS NOT NULL AND r_c08_w.nr_seq_conta_proc::text <> '') then
				ds_complemento_w := ds_complemento_w || chr(10) || 'Conta proc: ' || r_c08_w.nr_seq_conta_proc;
				
			elsif (r_c08_w.nr_seq_conta_mat IS NOT NULL AND r_c08_w.nr_seq_conta_mat::text <> '') then
				ds_complemento_w := ds_complemento_w || chr(10) || 'Conta mat: ' || r_c08_w.nr_seq_conta_mat;
			end if;
			
			if (coalesce(r_c08_w.cd_unimed_prestador::text, '') = '') then -- Nao foi localizado o codigo da Unimed do prestador (R504)
				pls_inserir_incon_intercambio(75, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
			end if;
			
			if (coalesce(r_c08_w.cd_prestador::text, '') = '') then -- Nao foi localizado o codigo do prestador (R504)
				pls_inserir_incon_intercambio(76, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
			end if;
			
			if (coalesce(r_c08_w.nm_prestador::text, '') = '') then -- Nao foi localizado o nome do prestador (R504)
				pls_inserir_incon_intercambio(77, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
			end if;
			
			if (coalesce(r_c08_w.ie_tipo_participacao::text, '') = '') then -- Nao foi localizado o tipo de participacao (R504)
				pls_inserir_incon_intercambio(78, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
			end if;
			
			if (coalesce(r_c08_w.dt_procedimento::text, '') = '') then -- Nao foi localizado a data de execucao do servico (R504)
				pls_inserir_incon_intercambio(79, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
			end if;
			
			if (coalesce(r_c08_w.ie_tipo_tabela::text, '') = '') then -- Nao foi localizado o tipo que identifica o tipo de tabela utilizado no servico medico (R504)
				pls_inserir_incon_intercambio(80, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
			end if;
			
			if (coalesce(r_c08_w.cd_servico::text, '') = '') then -- Nao foi localizado o codigo do servico (R504)
				pls_inserir_incon_intercambio(81, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
			end if;
			
			if (coalesce(r_c08_w.qt_procedimento::text, '') = '') then -- Nao foi localizado a quantidade de um servico cobrada / a cobrar (R504)
				pls_inserir_incon_intercambio(82, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
			end if;
			
			/*if	(r_c08_w.cd_especialidade is null) and
				(r_c08_w.ie_tipo_prestador = '01') then -- Nao foi localizado o codigo da especialidade medica (R504)
				pls_inserir_incon_intercambio(83, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
			end if;*/
			
			if (coalesce(r_c08_w.ie_tipo_prestador::text, '') = '') then -- Nao foi localizado o tipo de prestador (R504)
				pls_inserir_incon_intercambio(84, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
			end if;
			
			if (coalesce(r_c08_w.ie_rede_propria::text, '') = '') then -- Nao foi localizado o que identifica se prestador e proprio ou contratado (R504)
				pls_inserir_incon_intercambio(85, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
			end if;
			
			if (coalesce(r_c08_w.ie_tipo_pessoa_prestador::text, '') = '') then -- Nao foi localizado o tipo de pessoa (prestador) (R504)
				pls_inserir_incon_intercambio(86, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
			end if;
			
			if (coalesce(r_c08_w.ie_pacote::text, '') = '') then -- Nao foi localizado o que identifica se o servico faz parte de um pacote (R504)
				pls_inserir_incon_intercambio(89, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
			end if;
			
			if (coalesce(r_c08_w.cd_ato::text, '') = '') then -- Nao foi localizado o codigo do ato prestador (R504)
				pls_inserir_incon_intercambio(90, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
			end if;
			
			if (coalesce(r_c08_w.tx_procedimento::text, '') = '') then -- Nao foi localizado o fator multiplicador da quantidade de servicos (R504)
				pls_inserir_incon_intercambio(91, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
			end if;
			
			if (coalesce(somente_numero(trim(both r_c08_w.cd_cnes_prest)), 0) = 0) then -- Nao foi localizado o codigo nacional de estabelecimento de saude do prestador do servico (R504)
				pls_inserir_incon_intercambio(92, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w || chr(10) || 'Prestador executante: ' || r_c08_w.nm_profissional_prestador, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
			end if;
			
			if (coalesce(r_c08_w.tp_autoriz::text, '') = '') then -- Nao foi localizado o tipo de autorizacao (R504)
				pls_inserir_incon_intercambio(93, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
			end if;
			
			if (coalesce(r_c08_w.ie_alto_custo::text, '') = '') then -- Nao foi localizado a identificacao de prestador de alto custo (R504)
				pls_inserir_incon_intercambio(94, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
			end if;
			
			if (coalesce(r_c08_w.nr_nota::text, '') = '') then -- Nao foi localizado o numero da nota de controle da Unimed (R504)
				pls_inserir_incon_intercambio(95, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
			end if;
			
			if (coalesce(r_c08_w.id_acres_urg_emer::text, '') = '') then -- Nao foi localizado o identificador de acrescimo de urgencia/emergencia (R504)
				pls_inserir_incon_intercambio(96, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
			end if;
			
			if (coalesce(r_c08_w.cd_munic::text, '') = '') then -- Nao foi localizado o codigo do municipio, conforme codificacao do IBGE, do prestador executante (R504)
				pls_inserir_incon_intercambio(97, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
			end if;
			
			if (coalesce(r_c08_w.dt_pgto_prestador::text, '') = '') then -- Nao foi localizado a data do pagamento ao prestador (R504)
				pls_inserir_incon_intercambio(98, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
			end if;
			
			if (r_c08_w.vl_procedimento < 0) then -- O valor do servico cobrado/a cobrar esta negativo (R504)
				pls_inserir_incon_intercambio(129, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
			end if;
			
			if (r_c08_w.vl_custo_operacional < 0) then -- O valor do CO no procedimento cobrado/a cobrar esta negativo (R504)
				pls_inserir_incon_intercambio(130, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
			end if;
			
			if (r_c08_w.vl_filme < 0) then -- O valor do Filme no procedimento cobrado/a cobrar esta negativo (R504)
				pls_inserir_incon_intercambio(131, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
			end if;
			
			if (r_c08_w.vl_adic_procedimento < 0) then -- O valor da taxa de administracao sobre o servico esta negativo (R504)
				pls_inserir_incon_intercambio(132, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
			end if;
			
			if (r_c08_w.vl_adic_co < 0) then -- O valor da taxa de administracao sobre o servico esta negativo (R504)
				pls_inserir_incon_intercambio(133, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
			end if;
			
			if (r_c08_w.vl_adic_filme < 0) then -- O valor da taxa de administracao do adicional do filme esta negativo (R504)
				pls_inserir_incon_intercambio(135, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
			end if;
			
			if (r_c08_w.qt_procedimento > 9999.9999) then -- A quantidade informada no servico supera o permitido pelo PTU de 4, 4 (R504)
				pls_inserir_incon_intercambio(136, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
			end if;
			
			if (r_c08_w.nr_cgc_cpf = '99999999999999') or (r_c08_w.nr_cgc_cpf = '99999999999') then -- nao foi localzado CPF (R504)
				pls_inserir_incon_intercambio(178, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
			end if;
			
			if (r_c08_w.sg_uf_cons_prest IS NOT NULL AND r_c08_w.sg_uf_cons_prest::text <> '') then
				select	count(1)
				into STRICT	qt_registro_w
				from	valor_dominio_v
				where	cd_dominio = '50'
				and	vl_dominio = r_c08_w.sg_uf_cons_prest;
				
				if (qt_registro_w = 0) then -- Sigla da unidade federativa do conselho profissional do prestador esta incorreta.
					pls_inserir_incon_intercambio(145, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w || chr(10) || 'Prestador executor: ' || r_c08_w.nm_profissional_prestador, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
				end if;
			end if;
			
			if (r_c08_w.sg_uf_cons_req IS NOT NULL AND r_c08_w.sg_uf_cons_req::text <> '') then
				select	count(1)
				into STRICT	qt_registro_w
				from	valor_dominio_v
				where	cd_dominio = '50'
				and	vl_dominio = r_c08_w.sg_uf_cons_req;
				
				if (qt_registro_w = 0) then -- Sigla da unidade federativa do conselho profissional do prestador esta incorreta.
					pls_inserir_incon_intercambio(145, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w || chr(10) || 'Prestador requisitante: ' || r_c08_w.nm_prestador_requisitante, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
				end if;
			end if;
			
			if (nr_seq_lote_fat_w IS NOT NULL AND nr_seq_lote_fat_w::text <> '') and (r_c06_w.nr_seq_conta IS NOT NULL AND r_c06_w.nr_seq_conta::text <> '') then
				if (r_c08_w.nr_seq_conta_proc IS NOT NULL AND r_c08_w.nr_seq_conta_proc::text <> '') then
					select	count(1)
					into STRICT	qt_registro_w
					from	pls_conta_pos_estabelecido
					where	nr_seq_conta_proc	= r_c08_w.nr_seq_conta_proc
					and	nr_seq_lote_fat		= nr_seq_lote_fat_w
					and	nr_seq_conta		= r_c06_w.nr_seq_conta
					and	ie_status_faturamento <> 'N'
					and	coalesce(vl_beneficiario, 0)	<> (coalesce(vl_medico, 0) + coalesce(vl_custo_operacional, 0) + coalesce(vl_materiais, 0) + coalesce(vl_lib_taxa_servico, 0) + coalesce(vl_lib_taxa_co, 0) + coalesce(vl_lib_taxa_material, 0));
					
					if (qt_registro_w > 0) then -- O total da soma dos campos detalhados esta diferente do Valor beneficiario
						pls_inserir_incon_intercambio(146, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
					end if;
				elsif (r_c08_w.nr_seq_conta_mat IS NOT NULL AND r_c08_w.nr_seq_conta_mat::text <> '') then
					select	count(1)
					into STRICT	qt_registro_w
					from	pls_conta_pos_estabelecido
					where	nr_seq_conta_mat	= r_c08_w.nr_seq_conta_mat
					and	nr_seq_lote_fat		= nr_seq_lote_fat_w
					and	nr_seq_conta		= r_c06_w.nr_seq_conta
					and	ie_status_faturamento <> 'N'
					and	coalesce(vl_beneficiario, 0) <> (coalesce(vl_medico, 0) + coalesce(vl_custo_operacional, 0) + coalesce(vl_materiais, 0) + coalesce(vl_lib_taxa_servico, 0) + coalesce(vl_lib_taxa_co, 0) + coalesce(vl_lib_taxa_material, 0));
					
					if (qt_registro_w > 0) then -- O total da soma dos campos detalhados esta diferente do Valor beneficiario
						pls_inserir_incon_intercambio(146, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
					end if;
				end if;
			end if;
			
			if (r_c08_w.ie_tipo_pessoa_prestador = 'F') and (coalesce(r_c08_w.sg_cons_prof_prest::text, '') = '') and (r_c08_w.ie_tipo_tabela not in ('2', '3', '5', '6')) and (coalesce(r_c08_w.vl_procedimento, 0) > 0) then -- Nao foi localizada a sigla do conselho profissional do prestador executante (R504)
				pls_inserir_incon_intercambio(153, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w || chr(10) || 'Prestador executante: ' || r_c08_w.nm_profissional_prestador, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
			end if;
			
			if (r_c08_w.ie_tipo_pessoa_prestador = 'F') and (coalesce(r_c08_w.nr_cons_prof_prest::text, '') = '') and (r_c08_w.ie_tipo_tabela not in ('2', '3', '5', '6')) and (coalesce(r_c08_w.vl_procedimento, 0) > 0) then -- Nao foi localizado o numero do conselho profissional do prestador executante (R504)
				pls_inserir_incon_intercambio(154, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w || chr(10) || 'Prestador executante: ' || r_c08_w.nm_profissional_prestador, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
			end if;
			
			if (r_c08_w.ie_tipo_pessoa_prestador = 'F') and (coalesce(r_c08_w.sg_uf_cons_prest::text, '') = '') and (r_c08_w.ie_tipo_tabela not in ('2', '3', '5', '6')) and (coalesce(r_c08_w.vl_procedimento, 0) > 0) then -- Nao foi localizada a sigla da unidade federativa do conselho profissional do prestador executante (R504)
				pls_inserir_incon_intercambio(155, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w || chr(10) || 'Prestador executante: ' || r_c08_w.nm_profissional_prestador, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
			end if;
			
			if (coalesce(r_c08_w.nr_reg_anvisa::text, '') = '') and (upper(r_c08_w.ds_servico) like '%OPME%') and (r_c08_w.ie_tipo_tabela in (2, 3, 5, 6)) then -- O campo registro ANVISA deve ser preenchido para o servico utilizado (R504)
				pls_inserir_incon_intercambio(163, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
			end if;
			
			if (coalesce(r_c08_w.cd_ref_material_fab::text, '') = '') and (upper(r_c08_w.ds_servico) like '%OPME%') and (r_c08_w.ie_tipo_tabela in (2, 3, 5, 6)) then -- O campo codigo referencia do material deve ser preenchido para o servico utilizado (R504)
				pls_inserir_incon_intercambio(164, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
			end if;
			
			-- Os codigos referentes a parto (3130905-4, 3130909-7, 3130912-7 e 3130913-5)  deverao obrigatoriamente ter o campo Numero da Declaracao de Nascimento ou Numero da Declaracao de Obito do RN preenchido.
			if (r_c08_w.cd_servico in (31309054, 31309097, 31309127, 31309135)) and (r_c06_w.tp_nota = 3) then -- Somente nota de internacao vai ter registro na PTU_NOTA_HOSPITALAR
				select	count(1)
				into STRICT	qt_registro_w
				from	ptu_nota_hospitalar	b,
					ptu_nota_hosp_compl	a
				where	b.nr_sequencia		= a.nr_seq_nota_hosp
				and	b.nr_seq_nota_cobr	= r_c06_w.nr_sequencia
				and	((a.nr_declara_vivo IS NOT NULL AND a.nr_declara_vivo::text <> '') or (a.nr_declara_obito IS NOT NULL AND a.nr_declara_obito::text <> ''));
				
				if (qt_registro_w = 0) then
					pls_inserir_incon_intercambio(169, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
				end if;
			end if;
			
			-- A informacao de reembolso do protocolo esta divergente do servico
			if (r_c06_w.ie_reemb_cta != r_c08_w.ie_reembolso) then
				pls_inserir_incon_intercambio(170, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
			end if;
			
			-- Versao 7.0 ou inferior - Detentor Registro ANVISA
			if (r_c01_w.nr_versao <= 25) then
				if (ptu_obter_dados_serv_generico(r_c08_w.cd_servico, 'SE') = 'N') and (r_c08_w.cd_material_a900 IS NOT NULL AND r_c08_w.cd_material_a900::text <> '') and (r_c08_w.ie_tipo_material = '7') and (coalesce(r_c08_w.nr_seq_tuss_mat_item::text, '') = '') and (coalesce(r_c08_w.det_reg_anvisa::text, '') = '') then -- Detentor de registro ANVISA nao informado no material OPME
					pls_inserir_incon_intercambio(173, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
				end if;
			-- Versao 8.0 ou superior - Detentor Registro ANVISA
			elsif (r_c01_w.nr_versao > 25) then
				if (ptu_obter_dados_serv_generico(r_c08_w.cd_servico, 'SE') = 'N') and (r_c08_w.cd_material_a900 IS NOT NULL AND r_c08_w.cd_material_a900::text <> '') and (r_c08_w.ie_tipo_material = '7') and (coalesce(r_c08_w.det_reg_anvisa::text, '') = '') then -- Detentor de registro ANVISA nao informado no material OPME
					pls_inserir_incon_intercambio(173, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
				end if;
			end if;
			
			-- Registro ANVISA - Codigo referencia do material
			if (ptu_obter_dados_serv_generico(r_c08_w.cd_servico, 'SE') = 'N') and (r_c08_w.cd_material_a900 IS NOT NULL AND r_c08_w.cd_material_a900::text <> '') and (r_c08_w.ie_tipo_material = '7') then
				if (coalesce(r_c08_w.nr_reg_anvisa::text, '') = '') then -- O campo registro ANVISA deve ser preenchido para o servico utilizado (R504)
					pls_inserir_incon_intercambio(163, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
				end if;
				
				if (coalesce(r_c08_w.cd_ref_material_fab::text, '') = '') then -- O campo codigo referencia do material deve ser preenchido para o servico utilizado (R504)
					pls_inserir_incon_intercambio(164, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
				end if;
			end if;
		end loop;
		
		--COMPLEMENTO
		for r_c09_w in c09( r_c06_w.nr_sequencia )loop
			ds_complemento_w := 	'Fatura PTU / TASY: ' || r_c01_w.nr_sequencia || ' / ' || r_c01_w.nr_seq_pls_fatura || chr(10) ||
						'Conta: ' || r_c06_w.nr_seq_conta|| chr(10) ||
						'Cobranca: ' || r_c06_w.nr_sequencia|| chr(10) ||
						'Complemento: ' || r_c09_w.nr_sequencia;
						
			if (coalesce(r_c09_w.nr_lote::text, '') = '') then -- Nao foi localizado o numero do lote de notas (R505)
				pls_inserir_incon_intercambio(99, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
			end if;
			
			if (coalesce(r_c09_w.ie_tipo_complemento::text, '') = '') then -- Nao foi localizado o indicador de tipo de registro (R505)
				pls_inserir_incon_intercambio(100, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
			end if;
			
			if (coalesce(r_c09_w.ds_complemento::text, '') = '') then -- Nao foi localizado a descricao do complemento da nota (R505)
				pls_inserir_incon_intercambio(101, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
			end if;
			
			if (coalesce(r_c09_w.nr_nota::text, '') = '') then -- Nao foi localizado o numero da nota de controle da Unimed (R505)
				pls_inserir_incon_intercambio(102, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
			end if;
		end loop;
		
		--NOTA FISCAL
		for r_c10_w in c10( r_c06_w.nr_sequencia )loop
			if (coalesce(r_c10_w.ds_link_nfe::text, '') = '') then -- Nao foi localizado o link para nota fiscal eletronica (R506)
				ds_complemento_w := 	'Fatura PTU / TASY: ' 	|| r_c01_w.nr_sequencia || ' / ' || r_c01_w.nr_seq_pls_fatura || chr(10) ||
							'Cobranca: ' 		|| r_c06_w.nr_sequencia|| chr(10) ||
							'Fiscal: ' 		|| r_c10_w.nr_sequencia;
							
				pls_inserir_incon_intercambio(104, r_c01_w.nr_seq_pls_fatura, null, ds_complemento_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_arquivo_p, null);
			end if;
		end loop;
	end loop;
end loop;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_consistir_dados_inter_a500 ( nr_seq_fatura_p pls_fatura.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type, ie_tipo_arquivo_p w_pls_inconsistencia_int.ie_tipo_arquivo%type) FROM PUBLIC;

