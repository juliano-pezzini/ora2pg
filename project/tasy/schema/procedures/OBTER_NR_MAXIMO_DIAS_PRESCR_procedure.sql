-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE obter_nr_maximo_dias_prescr ((cd_material_p bigint, cd_pessoa_fisica_p text, ie_duracao_p text, dt_inicio_p timestamp, dt_fim_p timestamp, ds_msg_p out text, ie_consistir_p out text ) IS qt_altura_cm_w pessoa_fisica.qt_altura_cm%type) AS $body$
DECLARE

ds_idade_w	varchar(200);
  rule_w RECORD;

BEGIN
	if (qt_idade_ano_p = 1) then
		ds_idade_w := obter_desc_expressao(678860); -- 1 ano
	elsif (qt_idade_ano_p > 1) then
		ds_idade_w := qt_idade_ano_p || ' ' || obter_desc_expressao(1031200); -- anos
	end if;
	if (qt_idade_mes_p = 1) then
		ds_idade_w := ds_idade_w || ' ' || obter_desc_expressao(695724); -- 1 mes
	elsif (qt_idade_mes_p > 1) then
		ds_idade_w := ds_idade_w || ' ' || qt_idade_mes_p || ' ' || obter_desc_expressao(348664); -- meses
	end if;
	if (qt_idade_dia_p = 1) then
		ds_idade_w := ds_idade_w || ' ' || obter_desc_expressao(347503); -- 1 dia
	elsif (qt_idade_dia_p > 1) then
		ds_idade_w := ds_idade_w || ' ' || qt_idade_dia_p || ' ' || obter_desc_expressao(326313); -- dias
	end if;

	return;
end;

function criar_mensagem_regra( qt_peso_min_p  in number,
                               qt_peso_max_p  in number,
                               qt_idade_min_p in number,
                               qt_idade_max_p  in number,
                               qt_idade_mes_min_p in number,
                               qt_idade_mes_max_p  in number,
                               qt_idade_dia_min_p in number,
                               qt_idade_dia_max_p  in number,
                               qt_sc_min_p in number,
                               qt_sc_max_p in number,
                               qt_max_dia_aplic_p in number
                               ) return;

begin

    if (qt_peso_w IS NOT NULL AND qt_peso_w::text <> '') then
        if (qt_peso_min_p IS NOT NULL AND qt_peso_min_p::text <> '' AND qt_peso_max_p IS NOT NULL AND qt_peso_max_p::text <> '') then
            ds_msg_w := ds_msg_w || wheb_mensagem_pck.get_texto(1199961,'QT_PESO_MIN='  || qt_peso_min_p ||
                                                                        ';QT_PESO_MAX=' || qt_peso_max_p || ', ');
        elsif (qt_peso_max_p IS NOT NULL AND qt_peso_max_p::text <> '') then
            ds_msg_w := ds_msg_w || wheb_mensagem_pck.get_texto(1199955,'QT_PESO_MAX=' || qt_peso_max_p || ', ');
        elsif (qt_peso_min_p IS NOT NULL AND qt_peso_min_p::text <> '') then
            ds_msg_w := ds_msg_w || wheb_mensagem_pck.get_texto(1199958,'QT_PESO_MIN=' || qt_peso_min_p || ', ');
        end if;
    end if;		

    ds_idade_max_w := obter_expressao_idade(qt_idade_max_p, qt_idade_mes_max_p, qt_idade_dia_max_p);
    ds_idade_min_w := obter_expressao_idade(qt_idade_min_p, qt_idade_mes_min_p, qt_idade_dia_min_p);

    if (ds_idade_min_w IS NOT NULL AND ds_idade_min_w::text <> '' AND ds_idade_max_w IS NOT NULL AND ds_idade_max_w::text <> '') then
        ds_msg_w := ds_msg_w || wheb_mensagem_pck.get_texto(1199960, 'DS_IDADE_MIN=' || ds_idade_min_w ||
                                                                     ';DS_IDADE_MAX=' || ds_idade_max_w) || ', ';
    elsif (ds_idade_min_w IS NOT NULL AND ds_idade_min_w::text <> '') then
        ds_msg_w := ds_msg_w || wheb_mensagem_pck.get_texto(1199956, 'DS_IDADE_MIN=' || ds_idade_min_w  ) || ', ';
    elsif (ds_idade_max_w IS NOT NULL AND ds_idade_max_w::text <> '') then
        ds_msg_w := ds_msg_w || wheb_mensagem_pck.get_texto(1199954, 'DS_IDADE_MAX=' || ds_idade_max_w ) || ', ';
    end if;

    if (qt_sc_w IS NOT NULL AND qt_sc_w::text <> '') then
        if (qt_sc_max_p IS NOT NULL AND qt_sc_max_p::text <> '' AND qt_sc_min_p IS NOT NULL AND qt_sc_min_p::text <> '') then
           ds_msg_w := ds_msg_w || wheb_mensagem_pck.get_texto(1199964,'DS_SUPERFICIE_MIN='    || qt_sc_min_p ||
                                                                       ';DS_SUPERFICIE_MAX='   || qt_sc_max_p || ', ');
        elsif (qt_sc_max_p IS NOT NULL AND qt_sc_max_p::text <> '') then
              ds_msg_w := ds_msg_w || wheb_mensagem_pck.get_texto(1199959,'DS_SUPERFICIE_MAX=' || qt_sc_max_p || ', ');
        elsif (qt_sc_min_p IS NOT NULL AND qt_sc_min_p::text <> '') then
              ds_msg_w := ds_msg_w || wheb_mensagem_pck.get_texto(1199962,'DS_SUPERFICIE_MIN=' || qt_sc_min_p || ', ');
        end if;
    end if;	

    if (ie_se_material_w = 'S') then
     
        SELECT  max(ds_material)
        INTO STRICT    ds_material_w
        FROM	material 
        WHERE cd_material = cd_material_p;

        ds_msg_w := wheb_mensagem_pck.get_texto(1200667, 'QT_DIAS=' || qt_dias_prescr_w      || 
                                                         ';DS_MEDICAMENTO=' || ds_material_w ||
                                                         ';DS_REGRA=' || ds_msg_w            ||
                                                         ';QT_DIAS_REGRA=' || qt_max_dia_aplic_p);
    else

        SELECT  max(DS_SUBSTANCIA)
        INTO STRICT    ds_princ_ativo_w
        FROM	MEDIC_FICHA_TECNICA 
        WHERE NR_SEQUENCIA = nr_seq_ficha_tecnica_w;

        ds_msg_w := wheb_mensagem_pck.get_texto(1200668, 'QT_DIAS=' || qt_dias_prescr_w      || 
                                                         ';DS_PRINCIPIO_ATIVO=' || ds_princ_ativo_w ||
                                                         ';DS_REGRA=' || ds_msg_w            ||
                                                         ';QT_DIAS_REGRA=' || qt_max_dia_aplic_p);
    end if;

    return;
end;

function exists_regra return;

  v_aux number(10);
  v_ret boolean;
begin
  v_ret := false;
  open c_cur;
  fetch c_cur
    into v_aux;
  if FOUND then
    v_ret := true;
  end if;
  close c_cur;
  return;
end;

begin

	if exists_regra then
		select  max(trunc(coalesce(dt_nascimento, clock_timestamp()))),
				max(qt_peso),
				max(qt_altura_cm)
		into STRICT    dt_nascimento_w,
				qt_peso_w,
				qt_altura_cm_w    
		from	pessoa_fisica
		where 	cd_pessoa_fisica = cd_pessoa_fisica_p;
		
		qt_peso_w := coalesce(obter_ultimo_sinal_vital_pf(cd_pessoa_fisica_p,'PESO'), qt_peso_w);
		qt_altura_cm_w := coalesce(obter_ultimo_sinal_vital_pf(cd_pessoa_fisica_p,'ALTURA'), qt_altura_cm_w);
		qt_sc_w := obter_superficie_corporea(qt_altura_cm_w, qt_peso_w);
		
		qt_dias_prescr_w := pkg_date_utils.get_DiffDate(dt_inicio_p, dt_fim_p, 'DAY%');
		
		select max(coalesce(nr_seq_ficha_tecnica,0))
		into STRICT   nr_seq_ficha_tecnica_w
		from material
		where cd_material = cd_material_p;
	
		for rule_w in (
			SELECT	ie_prescricao,
					qt_peso_min,
					qt_peso_max,
					qt_idade_min ,
					qt_idade_max,
					qt_idade_min_mes,
					qt_idade_max_mes,
					qt_idade_min_dia,
					qt_idade_max_dia,
					qt_sc_min,
					qt_sc_max,
					qt_max_dia_aplic,
					nr_seq_ficha_tecnica
			from	rep_regra_dias_util
			where	coalesce(cd_material, cd_material_p) = cd_material_p
			and     coalesce(cd_pessoa_fisica, cd_pessoa_fisica_p) = cd_pessoa_fisica_p
			and     coalesce(nr_seq_ficha_tecnica, nr_seq_ficha_tecnica_w) = nr_seq_ficha_tecnica_w
			and     coalesce(qt_peso_w,0) between coalesce(qt_peso_min,0) and coalesce(qt_peso_max,999)
			and     dt_nascimento_w
				between
					obter_min_max_data_nascimento(qt_idade_max, qt_idade_max_mes, qt_idade_max_dia, dt_nascimento_w, 'MAX')
				and 
					obter_min_max_data_nascimento(qt_idade_min, qt_idade_min_mes, qt_idade_min_dia,dt_nascimento_w , 'MIN')
			and coalesce(qt_sc_w,0) between coalesce(qt_sc_min,0) and coalesce(qt_sc_max,9999)
			order by coalesce(nr_seq_apresentacao,999) desc
		)
		loop
			if (coalesce(rule_w.nr_seq_ficha_tecnica::text, '') = '')then
				ie_se_material_w := 'S';
			end if;
			
			if (ie_duracao_p = 'C' or qt_dias_prescr_w > rule_w.qt_max_dia_aplic) then
				ie_consistir_w := rule_w.ie_prescricao;
				ds_msg_out_w :=  criar_mensagem_regra(
									rule_w.qt_peso_min,
									rule_w.qt_peso_max,
									rule_w.qt_idade_min ,
									rule_w.qt_idade_max,
									rule_w.qt_idade_min_mes,
									rule_w.qt_idade_max_mes,
									rule_w.qt_idade_min_dia,
									rule_w.qt_idade_max_dia,
									rule_w.qt_sc_min,
									rule_w.qt_sc_max,
									rule_w.qt_max_dia_aplic);
				exit;
			end if;
		
		end loop;
	end if;

    ds_msg_p := ds_msg_out_w;
    ie_consistir_p := ie_consistir_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE obter_nr_maximo_dias_prescr ((cd_material_p bigint, cd_pessoa_fisica_p text, ie_duracao_p text, dt_inicio_p timestamp, dt_fim_p timestamp, ds_msg_p out text, ie_consistir_p out text ) IS qt_altura_cm_w pessoa_fisica.qt_altura_cm%type) FROM PUBLIC;

