-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gera_w_preco_amb (CD_EDICAO_AMB_P bigint, CD_CONVENIO_P bigint, CD_CATEGORIA_P text, CD_ESPECIALIDADE_P bigint, DT_INICIO_VIGENCIA_P timestamp) AS $body$
DECLARE


DT_ATUALIZACAO_W		timestamp		:= clock_timestamp();
qt_pontos_w			preco_amb.qt_pontuacao%type;
CD_PROCEDIMENTO_W       	bigint	:= 0;
VL_PROCEDIMENTO_W       	double precision 	:= 0;
VL_CUSTO_OPERACIONAL_W  	double precision 	:= 0;
VL_ANESTESISTA_W        	double precision 	:= 0;
VL_MEDICO_W             	double precision 	:= 0;
VL_AUXILIARES_W         	double precision 	:= 0;
VL_FILME_W              	double precision 	:= 0;
QT_FILME_W              	double precision 	:= 0;
NR_AUXILIARES_W         	smallint    	:= 0;
NR_INCIDENCIA_W         	smallint    	:= 0;
QT_PORTE_ANESTESICO_W   	smallint    	:= 0;
CD_ESTABELECIMENTO_W    	smallint    	:= 1;

VL_PTO_CUSTO_OPERAC_W	double precision 	:= 0;
VL_PTO_PROCEDIMENTO_W   	double precision 	:= 0;
VL_PTO_ANESTESISTA_W    	double precision 	:= 0;
VL_PTO_MEDICO_W         	double precision 	:= 0;
VL_PTO_AUXILIARES_W     	double precision 	:= 0;
VL_PTO_MATERIAIS_W      	double precision	:= 0;
cd_edicao_amb_w		integer	:= 0;
nr_porte_anestesico_w	smallint	:= 0;
ie_origem_proced_w		bigint;

cd_usuario_convenio_w	varchar(40);
cd_plano_w			varchar(20);
ie_clinica_w			bigint;
cd_empresa_ref_w		bigint;
ie_preco_informado_w		varchar(01);
nr_seq_ajuste_proc_w	bigint;

C01 CURSOR FOR
SELECT	A.CD_PROCEDIMENTO,
       A.QT_FILME,
       A.NR_AUXILIARES,
       A.NR_INCIDENCIA,
       A.QT_PORTE_ANESTESICO,
	a.ie_origem_proced
from	GRUPO_PROC B,
       PROCEDIMENTO C,
       PRECO_AMB A
WHERE	A.CD_EDICAO_AMB    	= CD_EDICAO_AMB_P
AND	A.CD_PROCEDIMENTO  	= C.CD_PROCEDIMENTO
and	a.ie_origem_proced	= c.ie_origem_proced
AND	B.CD_GRUPO_PROC    	= C.CD_GRUPO_PROC
AND	B.CD_ESPECIALIDADE 	= coalesce(CD_ESPECIALIDADE_P,-1)
AND	coalesce(A.DT_INICIO_VIGENCIA, clock_timestamp())	= (
			SELECT 	max( coalesce( x.dt_inicio_vigencia, clock_timestamp()) )
			from	PRECO_AMB x
			where	x.cd_procedimento 	= a.cd_procedimento
			and	x.ie_origem_proced	= a.ie_origem_proced
			and	x.CD_EDICAO_AMB    	= CD_EDICAO_AMB_P
			and	coalesce( x.dt_inicio_vigencia, clock_timestamp())	<= coalesce(DT_INICIO_VIGENCIA_P, coalesce( x.dt_inicio_vigencia, clock_timestamp()) )
			)

union

select	A.CD_PROCEDIMENTO,
	A.QT_FILME,
       A.NR_AUXILIARES,
       A.NR_INCIDENCIA,
       A.QT_PORTE_ANESTESICO,
	a.ie_origem_proced
from	PRECO_AMB A
WHERE	A.CD_EDICAO_AMB    	= CD_EDICAO_AMB_P
and	coalesce(CD_ESPECIALIDADE_P,-1) 	= -1
AND	coalesce( A.DT_INICIO_VIGENCIA, clock_timestamp())	= (
			select 	max( coalesce( x.dt_inicio_vigencia, clock_timestamp()) )
			from	PRECO_AMB x
			where	x.cd_procedimento 	= a.cd_procedimento
			and	x.ie_origem_proced	= a.ie_origem_proced
			and	x.CD_EDICAO_AMB    	= CD_EDICAO_AMB_P
			and	coalesce( x.dt_inicio_vigencia, clock_timestamp())	<= coalesce( DT_INICIO_VIGENCIA_P, coalesce( x.dt_inicio_vigencia, clock_timestamp()) )
			);



BEGIN

/* Limpar tabela W_PRECO_AMB */

begin
DELETE FROM W_PRECO_AMB;
COMMIT;
end;

/* Gerar tabela W_PRECO_AMB a partir da PRECO_AMB */

OPEN C01;
LOOP
   FETCH C01 into	CD_PROCEDIMENTO_W,
                  	QT_FILME_W,
                  	NR_AUXILIARES_W,
                  	NR_INCIDENCIA_W,
                  	QT_PORTE_ANESTESICO_W,
			ie_origem_proced_w;
	if	C01%FOUND then
		begin
		SELECT * FROM Define_Preco_Procedimento(CD_ESTABELECIMENTO_W, CD_CONVENIO_P, CD_CATEGORIA_P, DT_ATUALIZACAO_W, CD_PROCEDIMENTO_W, null, null, null, null, null, null, null, null, cd_usuario_convenio_w, cd_plano_w, ie_clinica_w, cd_empresa_ref_w, null, VL_PROCEDIMENTO_W, VL_CUSTO_OPERACIONAL_W, VL_ANESTESISTA_W, VL_MEDICO_W, VL_AUXILIARES_W, VL_FILME_W, VL_PTO_PROCEDIMENTO_W, VL_PTO_CUSTO_OPERAC_W, VL_PTO_ANESTESISTA_W, VL_PTO_MEDICO_W, VL_PTO_AUXILIARES_W, VL_PTO_MATERIAIS_W, nr_porte_anestesico_w, qt_pontos_w, cd_edicao_amb_w, ie_preco_informado_w, nr_seq_ajuste_proc_w, 0, null, 0, null, null, NULL, NULL, null, null, null, null, null, null, null, null, null, null, null, null, null) INTO STRICT VL_PROCEDIMENTO_W, VL_CUSTO_OPERACIONAL_W, VL_ANESTESISTA_W, VL_MEDICO_W, VL_AUXILIARES_W, VL_FILME_W, VL_PTO_PROCEDIMENTO_W, VL_PTO_CUSTO_OPERAC_W, VL_PTO_ANESTESISTA_W, VL_PTO_MEDICO_W, VL_PTO_AUXILIARES_W, VL_PTO_MATERIAIS_W, nr_porte_anestesico_w, qt_pontos_w, cd_edicao_amb_w, ie_preco_informado_w, nr_seq_ajuste_proc_w;

		INSERT INTO W_PRECO_AMB(
						CD_EDICAO_AMB,
                	    			CD_PROCEDIMENTO,
		        			VL_PROCEDIMENTO,
     			  			VL_CUSTO_OPERACIONAL,
				  		VL_ANESTESISTA,
				  		VL_MEDICO,
				  		VL_FILME,
				  		QT_FILME,
			  			NR_AUXILIARES,
				 		NR_INCIDENCIA,
				  		QT_PORTE_ANESTESICO,
                	    			IE_ORIGEM_PROCED,
                    				VL_AUXILIARES
						)
					VALUES (
						CD_EDICAO_AMB_P,
                	    			CD_PROCEDIMENTO_W,
		        			coalesce(VL_PROCEDIMENTO_W,0),
	    			  		VL_CUSTO_OPERACIONAL_W,
				  		VL_ANESTESISTA_W,
				  		VL_MEDICO_W,
				  		VL_FILME_W,
			  			QT_FILME_W,
				  		NR_AUXILIARES_W,
				  		NR_INCIDENCIA_W,
				  		QT_PORTE_ANESTESICO_W,
                    				ie_origem_proced_w,
                    				VL_AUXILIARES_W
						);
		end;
	else
		exit;
	end if;
END LOOP;
CLOSE C01;

COMMIT;
END	;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gera_w_preco_amb (CD_EDICAO_AMB_P bigint, CD_CONVENIO_P bigint, CD_CATEGORIA_P text, CD_ESPECIALIDADE_P bigint, DT_INICIO_VIGENCIA_P timestamp) FROM PUBLIC;

