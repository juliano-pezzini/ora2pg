-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_ordernar_lote_ted (nr_seq_lote_p pls_lote_mensalidade_ted.nr_sequencia%type) AS $body$
DECLARE

 
tb_nr_seq_mensalidade_ted_w	pls_util_cta_pck.t_number_table;
tb_nr_ordem_w			pls_util_cta_pck.t_number_table;
nr_seq_regra_w			pls_regra_ted.nr_sequencia%type;
sql_base_w			varchar(32000);
sql_order_by_w			varchar(32000) 	:= 'order by ';
ie_possui_regra_w		boolean := false;

		 
C01 CURSOR(	nr_seq_regra_pc		pls_regra_ted.nr_sequencia%type) FOR 
	SELECT	'nvl(' ||nm_atributo || ',''0'')' nm_atributo, 
		CASE WHEN ie_forma_ordem='D' THEN  'desc'  ELSE '' END  ie_forma_ordem 
	from	pls_ted_regra_mens_ordem 
	where	nr_seq_regra_ted = nr_seq_regra_pc 
	order by 
		coalesce(nr_ordem,9999999999);
	
 
C02 REFCURSOR;
	
type fetch_array is table of C01%rowtype index by integer;
tb_c01_w 	fetch_array;
		
BEGIN 
if (nr_seq_lote_p IS NOT NULL AND nr_seq_lote_p::text <> '') then 
	sql_base_w := 	'select	nr_seq_mensalidade_ted, ' || pls_util_pck.enter_w || 
			'	rownum ' || pls_util_pck.enter_w || 
			'from	(select	a.nr_sequencia nr_seq_mensalidade_ted ' || pls_util_pck.enter_w || 
			'	from	pls_mensalidade_ted a ' || pls_util_pck.enter_w || 
			'	where	nr_seq_lote_ted = :nr_seq_lote_ted ' || pls_util_pck.enter_w;
	 
	select	nr_seq_regra 
	into STRICT	nr_seq_regra_w 
	from	pls_lote_mensalidade_ted 
	where	nr_sequencia = nr_seq_lote_p;
	 
	/* Gera o order by de acordo com a regra de ordenação. */
 
	open C01(nr_seq_regra_w);
	loop 
		tb_c01_w.delete;
	fetch C01 bulk collect into tb_c01_w limit 1000;
	exit when tb_c01_w.count = 0;
		for x in tb_c01_w.first..tb_c01_w.last loop 
			sql_order_by_w := sql_order_by_w || tb_c01_w[x].nm_atributo || ' ' || tb_c01_w[x].ie_forma_ordem || ',' || pls_util_pck.enter_w;
		end loop;
		 
		ie_possui_regra_w	:= true;
	end loop;
	close C01;
	 
	if (ie_possui_regra_w) then	 
		sql_base_w := sql_base_w || substr(sql_order_by_w, 1, length(sql_order_by_w) - 3) || ')';
		 
		/* Com o SQL montado, atualiza a ordem dos registros da pls_mensalidade_ted. */
 
		open C02 for EXECUTE sql_base_w using nr_seq_lote_p;
		loop 
			tb_nr_seq_mensalidade_ted_w.delete;
			tb_nr_ordem_w.delete;
		fetch C02 bulk collect into 
			tb_nr_seq_mensalidade_ted_w, 
			tb_nr_ordem_w limit 1000;
		exit when tb_nr_seq_mensalidade_ted_w.count = 0;
			forall x in tb_nr_seq_mensalidade_ted_w.first..tb_nr_seq_mensalidade_ted_w.last 
				update	pls_mensalidade_ted 
				set	nr_ordem 	= tb_nr_ordem_w(x) 
				where	nr_sequencia 	= tb_nr_seq_mensalidade_ted_w(x);
		end loop;
		close C02;	
	end if;
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_ordernar_lote_ted (nr_seq_lote_p pls_lote_mensalidade_ted.nr_sequencia%type) FROM PUBLIC;

