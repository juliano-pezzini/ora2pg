-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE grava_cliente_fsfx ( cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


-- os 733520/1982

-- os 842290_6222

-- alterada por juliana lana - fsfx

/*
Adaptada para nao permitir atualizacao do dados pessoais, bem como carregar as contas de debito automatico, vinculado ao estabelecimento 4.
Incluida funcionalidade de replicar o endereco para residencial para atender a NFe.
*/
nr_seq_cliente_w		w_importa_clientes.nr_sequencia%type;
nr_inconsistencia_w		w_importa_cliente_incons.nr_inconsistencia%type;
cd_pessoa_fisica_w		pessoa_fisica.cd_pessoa_fisica%type;
nr_seq_compl_w			compl_pessoa_fisica.nr_sequencia%type;
nr_seq_tipo_compl_w		tipo_complemento_adicional.nr_sequencia%type;
cd_tipo_pessoa_w		tipo_pessoa_juridica.cd_tipo_pessoa%type;
sql_errm_w			varchar(2000);
qt_pessoa_w			bigint;
cd_pessoa_fisica_estab_w  PESSOA_FIS_CONTA_ESTAB.nr_sequencia%type;
nr_seq_pes_conta_w		pessoa_fisica_conta.nr_sequencia%type;
dt_w varchar(255);

C01 CURSOR FOR
	SELECT	nr_sequencia,
		ie_tipo_pessoa,
		nr_cpf,
		cd_cnpj,
		nm_cliente,
		dt_nascimento,
		nr_documento,
		nr_inscricao_municipal,
		ds_orgao_emissor_ci,
		dt_emissao_ci,
		ds_endereco,
		nr_endereco,
		ds_bairro,
		ds_complemento,
		cd_cep,
		ds_municipio,
		sg_estado,
		cd_pais,
		ds_email,
		nr_telefone,
		nr_fax,
		ie_estado_civil,
		ie_situacao,
		nr_seq_tipo_compl
	from	w_importa_clientes
	where	nm_usuario	= nm_usuario_p;
	
C02 CURSOR FOR
	SELECT	cd_banco,
		nr_agencia,
		nr_conta,
		ie_tipo_conta
	from	w_importa_conta_cliente
	where	nr_seq_cliente	= nr_seq_cliente_w
	and	nm_usuario	= nm_usuario_p;

c01_w	C01%rowtype;
c02_w	C02%rowtype;


BEGIN
open C01;
loop
fetch C01 into	
	c01_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	nr_seq_cliente_w	:= c01_w.nr_sequencia;
	
	if (c01_w.ie_tipo_pessoa = 'F') then /* Pessoa fisica */
		begin
		cd_pessoa_fisica_w	:= null;
		select	max(a.cd_pessoa_fisica)
		into STRICT	cd_pessoa_fisica_w
		from	pessoa_fisica	a
		where	a.nr_cpf	= c01_w.nr_cpf;
		
		/* if	(cd_pessoa_fisica_w is not null) then
     juliana lana - FSFX em 18/03. Interface nao pode alterar dados cadastrais!
			update	pessoa_fisica
			set	nm_pessoa_fisica	= substr(c01_w.nm_cliente,1,60),
				dt_nascimento		= c01_w.dt_nascimento,
				nr_cpf			= c01_w.nr_cpf,
				nr_identidade		= substr(c01_w.nr_documento,1,15),
				ie_estado_civil		= substr(c01_w.ie_estado_civil,1,2),
				cd_nacionalidade	= substr(c01_w.cd_pais,1,8),
				ds_orgao_emissor_ci	= c01_w.ds_orgao_emissor_ci,
				dt_emissao_ci		= c01_w.dt_emissao_ci
			where	cd_pessoa_fisica	= cd_pessoa_fisica_w;
    
		else  */
    if (coalesce(cd_pessoa_fisica_w::text, '') = '') then
			select	nextval('pessoa_fisica_seq')
			into STRICT	cd_pessoa_fisica_w
			;
			
			--dt_w	:= c01_w.dt_nascimento;
			insert into pessoa_fisica(cd_pessoa_fisica,
				ie_tipo_pessoa,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nm_pessoa_fisica,
				dt_nascimento,
				nr_cpf,
				nr_identidade,
				ie_estado_civil,
				cd_nacionalidade,
				ds_orgao_emissor_ci,
				dt_emissao_ci,
				cd_estabelecimento,
				cd_empresa,
				nm_usuario_original,
				dt_cadastro_original,
				ie_funcionario,
				ie_fluencia_portugues,
				ie_revisar,
				ie_dependente,
				ie_perm_sms_email,
				ie_fumante,
				ie_vegetariano,
				ie_fornecedor,
				ie_conselheiro,
				ie_nf_correio,
				ie_emancipado,
				cd_perfil_ativo,
				dt_admissao_hosp,
				dt_revisao)
			values (cd_pessoa_fisica_w,
				2,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				initcap(substr(c01_w.nm_cliente,1,60)),
				to_date(to_char(c01_w.dt_nascimento,'dd/mm/yyyy')),
				c01_w.nr_cpf,
				substr(c01_w.nr_documento,1,15),
				substr(c01_w.ie_estado_civil,1,2),
				substr(c01_w.cd_pais,1,8),
				c01_w.ds_orgao_emissor_ci,
				c01_w.dt_emissao_ci,
				cd_estabelecimento_p,
				obter_empresa_estab(cd_estabelecimento_p),
				nm_usuario_p,
				clock_timestamp(),
				'N',
				'F',
				'N',
				'N',
				'N',
				'N',
				'N',
				'N',
				'N',
				'N',
				'N',
				wheb_usuario_pck.get_cd_perfil,
				clock_timestamp(),
				clock_timestamp());
		end if;


-- ini endereco resp csfx
		begin
		select	nr_sequencia
	  into STRICT	nr_seq_tipo_compl_w
		from	tipo_complemento_adicional
		where	nr_sequencia = 22;

    
		exception
		when others then
			nr_seq_tipo_compl_w := null;
		end;
		
		nr_seq_compl_w	:= null;
		
		select	max(nr_sequencia)
		into STRICT	nr_seq_compl_w
		from	compl_pessoa_fisica	a
		where	a.cd_pessoa_fisica		= cd_pessoa_fisica_w
		and	a.ie_tipo_complemento		= 9
		and	nr_seq_tipo_compl_adic		= c01_w.nr_seq_tipo_compl;
		
		if (nr_seq_compl_w IS NOT NULL AND nr_seq_compl_w::text <> '') then
			update	compl_pessoa_fisica
			set	cd_cep			= c01_w.cd_cep,
				ds_endereco		= c01_w.ds_endereco,
				nr_endereco		= substr(somente_numero_char(c01_w.nr_endereco),1,5),
				ds_bairro		= c01_w.ds_bairro,
				ds_municipio		= substr(c01_w.ds_municipio,1,40),
				sg_estado		= c01_w.sg_estado,
				ds_complemento		= substr(c01_w.ds_complemento,1,40),
				nr_telefone		= substr(c01_w.nr_telefone,1,15),
				ds_fax			= c01_w.nr_fax,
				ds_email		= c01_w.ds_email
			where	cd_pessoa_fisica	= cd_pessoa_fisica_w
			and	nr_sequencia		= nr_seq_compl_w;

		else
			select	coalesce(max(nr_sequencia),0) + 1
			into STRICT	nr_seq_compl_w
			from	compl_pessoa_fisica
			where	cd_pessoa_fisica = cd_pessoa_fisica_w;
			
			insert into compl_pessoa_fisica(cd_pessoa_fisica,
				nr_sequencia,
				ie_tipo_complemento,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_tipo_compl_adic,
				cd_cep,
				ds_endereco,
				nr_endereco,
				ds_bairro,
				ds_municipio,
				sg_estado,
				ds_complemento,
				nr_telefone,
				ds_fax,
				ds_email,
				ie_nao_possui_email,
				ie_obriga_email,
				ie_nf_correio,
				ie_mala_direta)
			values (cd_pessoa_fisica_w,
				nr_seq_compl_w,
				9,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				c01_w.nr_seq_tipo_compl,
				c01_w.cd_cep,
				c01_w.ds_endereco,
				substr(somente_numero_char(c01_w.nr_endereco),1,5),
				c01_w.ds_bairro,
				substr(c01_w.ds_municipio,1,40),
				c01_w.sg_estado,
				substr(c01_w.ds_complemento,1,40),
				substr(c01_w.nr_telefone,1,15),
				c01_w.nr_fax,
				c01_w.ds_email,
				'N',
				'N',
				'N',
				'S');
		end if;

    -- Ini verifica endereco residencial
    


			nr_seq_tipo_compl_w := null;

		
		nr_seq_compl_w	:= null;
		
    -- obtem seq do endereco residencial
		select	max(nr_sequencia)
		into STRICT	nr_seq_compl_w
		from	compl_pessoa_fisica	a
		where	a.cd_pessoa_fisica		= cd_pessoa_fisica_w
		and	a.ie_tipo_complemento		= 1
		and	coalesce(nr_seq_tipo_compl_adic::text, '') = '';

    
    
    
		
	
    -- Nao alterar o encereco residencial caso exista!!!

		--if	(nr_seq_compl_w is not null) then

    /*
			update	compl_pessoa_fisica
			set	cd_cep			= c01_w.cd_cep,
				ds_endereco		= c01_w.ds_endereco,
				nr_endereco		= substr(somente_numero_char(c01_w.nr_endereco),1,5),
				ds_bairro		= c01_w.ds_bairro,
				ds_municipio		= substr(c01_w.ds_municipio,1,40),
				sg_estado		= c01_w.sg_estado,
				ds_complemento		= substr(c01_w.ds_complemento,1,40),
				nr_telefone		= substr(c01_w.nr_telefone,1,15),
				ds_fax			= c01_w.nr_fax,
				ds_email		= c01_w.ds_email
			where	cd_pessoa_fisica	= cd_pessoa_fisica_w
			and	nr_sequencia		= nr_seq_compl_w;
           */
		if (coalesce(nr_seq_compl_w::text, '') = '') then
			select	coalesce(max(nr_sequencia),0) + 1
			into STRICT	nr_seq_compl_w
			from	compl_pessoa_fisica
			where	cd_pessoa_fisica = cd_pessoa_fisica_w;
			
			insert into compl_pessoa_fisica(cd_pessoa_fisica,
				nr_sequencia,
				ie_tipo_complemento,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_tipo_compl_adic,
				cd_cep,
				ds_endereco,
				nr_endereco,
				ds_bairro,
				ds_municipio,
				sg_estado,
				ds_complemento,
				nr_telefone,
				ds_fax,
				ds_email,
				ie_nao_possui_email,
				ie_obriga_email,
				ie_nf_correio,
				ie_mala_direta)
			values (cd_pessoa_fisica_w,
				nr_seq_compl_w,
				1,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				null,
				c01_w.cd_cep,
				c01_w.ds_endereco,
				substr(somente_numero_char(c01_w.nr_endereco),1,5),
				c01_w.ds_bairro,
				substr(c01_w.ds_municipio,1,40),
				c01_w.sg_estado,
				substr(c01_w.ds_complemento,1,40),
				substr(c01_w.nr_telefone,1,15),
				c01_w.nr_fax,
				c01_w.ds_email,
				'N',
				'N',
				'N',
				'S');
		end if;
    
		
		open C02;
		loop
		fetch C02 into	
			c02_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin
			select	max(a.nr_sequencia)
			into STRICT	nr_seq_pes_conta_w
			from	pessoa_fisica_conta	a
			where	a.cd_pessoa_fisica	= cd_pessoa_fisica_w
			and	a.cd_banco		= substr(c02_w.cd_banco,1,5)
			and	a.cd_agencia_bancaria	= substr(c02_w.nr_agencia,1,8)
			and	a.nr_conta		= c02_w.nr_conta;
			
			if (nr_seq_pes_conta_w IS NOT NULL AND nr_seq_pes_conta_w::text <> '') then
				update	pessoa_fisica_conta	a
				set	ie_tipo_conta		= substr(CASE WHEN coalesce(c02_w.ie_tipo_conta,'C')='C' THEN 'CC' WHEN coalesce(c02_w.ie_tipo_conta,'C')='P' THEN 'CP'  ELSE c02_w.ie_tipo_conta END ,1,3),
            ie_conta_pagamento = 'S'
				where	a.cd_pessoa_fisica	= cd_pessoa_fisica_w
				and	a.cd_banco		= substr(c02_w.cd_banco,1,5)
				and	a.cd_agencia_bancaria	= substr(c02_w.nr_agencia,1,8)
				and	a.nr_conta		= c02_w.nr_conta;

        -- Verifica se a conta esta relacionada ao estabelecimento
        select MAX(a.nr_sequencia)
        into STRICT cd_pessoa_fisica_estab_w 
        from PESSOA_FIS_CONTA_ESTAB a
        where a.cd_pessoa_fisica	= cd_pessoa_fisica_w
				and	a.cd_banco		= substr(c02_w.cd_banco,1,5)
				and	a.cd_agencia_bancaria	= substr(c02_w.nr_agencia,1,8)
				and	a.nr_conta		= c02_w.nr_conta 
        and a.cd_estabelecimento = cd_estabelecimento_p;

        if (coalesce(cd_pessoa_fisica_estab_w,0)= 0) then
                  -- inclui relacao conta x estabelecimento    

                           -- obtem prx sequencial
            select	nextval('pessoa_fis_conta_estab_seq')
            into STRICT	cd_pessoa_fisica_estab_w
;

          Insert into PESSOA_FIS_CONTA_ESTAB(NR_SEQUENCIA,
          CD_ESTABELECIMENTO,
          DT_ATUALIZACAO,
          NM_USUARIO,
          DT_ATUALIZACAO_NREC,
          NM_USUARIO_NREC,
          CD_BANCO,
          CD_AGENCIA_BANCARIA,
          NR_CONTA,
          CD_PESSOA_FISICA) values (cd_pessoa_fisica_estab_w, 
          cd_estabelecimento_p, 
          clock_timestamp(), 
          nm_usuario_p, 
          clock_timestamp(),	
          nm_usuario_p,
          substr(c02_w.cd_banco,1,5),
					substr(c02_w.nr_agencia,1,8),	
          c02_w.nr_conta, 
          cd_pessoa_fisica_w);
       end if;

			else
				select	nextval('pessoa_fisica_conta_seq')
				into STRICT	nr_seq_pes_conta_w
				;
				
				insert into pessoa_fisica_conta(cd_pessoa_fisica,
					nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					cd_banco,
					cd_agencia_bancaria,
					nr_conta,
					ie_tipo_conta,
					ie_situacao,
					ie_conta_pagamento,
					ie_conta_repasse,
					ie_conta_pf_pj)
				values (cd_pessoa_fisica_w,
					nr_seq_pes_conta_w,
					clock_timestamp(),
					nm_usuario_p,
					substr(c02_w.cd_banco,1,5),
					substr(c02_w.nr_agencia,1,8),
					c02_w.nr_conta,
					substr(CASE WHEN coalesce(c02_w.ie_tipo_conta,'C')='C' THEN 'CC' WHEN coalesce(c02_w.ie_tipo_conta,'C')='P' THEN 'CP'  ELSE c02_w.ie_tipo_conta END ,1,3),
					'A',
					'S',
					'N',
					'F');

          /* 
          add juliana lana em 23/03/2015 - define a conta de acordo com o estabelecimento 
          */

          
          -- obtem prx sequencial
            select	nextval('pessoa_fis_conta_estab_seq')
            into STRICT	cd_pessoa_fisica_estab_w
;
          -- inclui relacao conta x estabelecimento    
          Insert into PESSOA_FIS_CONTA_ESTAB(NR_SEQUENCIA,
          CD_ESTABELECIMENTO,
          DT_ATUALIZACAO,
          NM_USUARIO,
          DT_ATUALIZACAO_NREC,
          NM_USUARIO_NREC,
          CD_BANCO,
          CD_AGENCIA_BANCARIA,
          NR_CONTA,
          CD_PESSOA_FISICA) values (cd_pessoa_fisica_estab_w,
          cd_estabelecimento_p, 
          clock_timestamp(), 
          nm_usuario_p, 
          clock_timestamp(),	
          nm_usuario_p, 
          substr(c02_w.cd_banco,1,5),
					substr(c02_w.nr_agencia,1,8),	
          c02_w.nr_conta, 
          cd_pessoa_fisica_w);

			end if;
			end;
		end loop;
		close C02;
		end;
	elsif (c01_w.ie_tipo_pessoa = 'J') then /* Pessoa juridica */
		begin
		select	min(cd_tipo_pessoa)
		into STRICT	cd_tipo_pessoa_w
		from	tipo_pessoa_juridica
		where	coalesce(ie_situacao,'A') = 'A'
		and	coalesce(cd_estabelecimento,cd_estabelecimento_p) = cd_estabelecimento_p;

		insert into pessoa_juridica(
				cd_cgc,
				cd_tipo_pessoa,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				ie_situacao,
				ds_razao_social,
				nm_fantasia,
				nr_inscricao_estadual,
				nr_inscricao_municipal,
				nr_seq_pais,
				cd_cep,
				ds_endereco,
				nr_endereco,
				ds_bairro,
				ds_municipio,
				sg_estado,
				ds_complemento,
				nr_telefone,
				nr_fax,
				ie_prod_fabric,
				ie_transporte,
				ie_fornecedor_opme,
				ie_empreendedor_individual)
			values (c01_w.cd_cnpj,
				cd_tipo_pessoa_w,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				coalesce(c01_w.ie_situacao,'A'),
				substr(c01_w.nm_cliente,1,255),
				substr(c01_w.nm_cliente,1,80),
				substr(c01_w.nr_documento,1,20),
				c01_w.nr_inscricao_municipal,
				substr(c01_w.cd_pais,1,10),
				c01_w.cd_cep,
				substr(c01_w.ds_endereco,1,40),
				c01_w.nr_endereco,
				substr(c01_w.ds_bairro,1,40),
				substr(c01_w.ds_municipio,1,40),
				c01_w.sg_estado,
				c01_w.ds_complemento,
				substr(c01_w.nr_telefone,1,15),
				substr(c01_w.nr_fax,1,15),
				'N',
				'N',
				'N',
				'N');

		insert into pessoa_juridica_estab(
				nr_sequencia,
				cd_cgc,
				cd_estabelecimento,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				ds_email,
				ie_conta_dif_nf,
				ie_retem_iss,
				ie_exige_anexo_nf,
				ie_baixa_abat,
				ie_exige_ordem_compra,
				ie_rec_email_comercial,
				ie_moeda_estrangeira,
				ie_rateio_adiant,
				ie_consiste_nr_serie_nf)
			values (nextval('pessoa_juridica_estab_seq'),
				c01_w.cd_cnpj,
				cd_estabelecimento_p,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				c01_w.ds_email,
				'N',
				'N',
				'N',
				'N',
				'N',
				'N',
				'N',
				'P',
				'S');

		open C02;
		loop
		fetch C02 into	
			c02_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin
			select	max(a.nr_sequencia)
			into STRICT	nr_seq_pes_conta_w
			from	pessoa_juridica_conta	a
			where	a.cd_cgc		= cd_pessoa_fisica_w
			and	a.cd_banco		= substr(c02_w.cd_banco,1,5)
			and	a.cd_agencia_bancaria	= substr(c02_w.nr_agencia,1,8)
			and	a.nr_conta		= c02_w.nr_conta;
			
			if (nr_seq_pes_conta_w IS NOT NULL AND nr_seq_pes_conta_w::text <> '') then
				update	pessoa_juridica_conta	a
				set	ie_tipo_conta		= substr(CASE WHEN coalesce(c02_w.ie_tipo_conta,'C')='C' THEN 'CC' WHEN coalesce(c02_w.ie_tipo_conta,'C')='P' THEN 'CP'  ELSE c02_w.ie_tipo_conta END ,1,3)
				where	a.cd_cgc		= c01_w.cd_cnpj
				and	a.cd_banco		= substr(c02_w.cd_banco,1,5)
				and	a.cd_agencia_bancaria	= substr(c02_w.nr_agencia,1,8)
				and	a.nr_conta		= c02_w.nr_conta;
			else
				select	nextval('pessoa_juridica_conta_seq')
				into STRICT	nr_seq_pes_conta_w
				;
				
				insert into pessoa_juridica_conta(
					cd_cgc,
					nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					cd_banco,
					cd_agencia_bancaria,
					nr_conta,
					ie_tipo_conta,
					ie_situacao,
					ie_conta_pagamento,
					ie_conta_repasse,
					ie_prestador_pls)
				values (c01_w.cd_cnpj,
					nr_seq_pes_conta_w,
					clock_timestamp(),
					nm_usuario_p,
					substr(c02_w.cd_banco,1,5),
					substr(c02_w.nr_agencia,1,8),
					c02_w.nr_conta,
					substr(CASE WHEN coalesce(c02_w.ie_tipo_conta,'C')='C' THEN 'CC' WHEN coalesce(c02_w.ie_tipo_conta,'C')='P' THEN 'CP'  ELSE c02_w.ie_tipo_conta END ,1,3),
					'A',
					'N',
					'N',
					'N');
			end if;
			end;
		end loop;
		close C02;
		end;
	end if;

	delete from w_importa_cliente_incons where nr_seq_cliente = c01_w.nr_sequencia;
	delete from w_importa_conta_cliente where nr_seq_cliente = c01_w.nr_sequencia;
	delete from w_importa_clientes where nr_sequencia = c01_w.nr_sequencia;
	
	commit;
	exception
	when others then
		begin
		sql_errm_w := substr(SQLERRM(SQLSTATE),1,255);
		rollback;

		select	coalesce(max(nr_inconsistencia),0) + 1
		into STRICT	nr_inconsistencia_w
		from	w_importa_cliente_incons
		where	nm_usuario = nm_usuario_p;

		insert into w_importa_cliente_incons(
				nr_inconsistencia,
				nr_seq_cliente,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nm_atributo,
				ds_motivo_inconsist)
			values (nr_inconsistencia_w,
				c01_w.nr_sequencia,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				'',
				sql_errm_w);

		commit;
		end;
	end;
end loop;
close C01;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE grava_cliente_fsfx ( cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

