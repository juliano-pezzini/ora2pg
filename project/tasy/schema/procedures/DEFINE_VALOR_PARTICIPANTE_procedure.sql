-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE define_valor_participante ( nr_sequencia_p bigint, nr_seq_partic_p bigint, nm_usuario_p text, vl_anestesista_p bigint, vl_medico_p bigint, vl_participante_p INOUT bigint, qt_ponto_sus_p INOUT bigint, ie_emite_conta_p INOUT text, cd_regra_honorario_p INOUT text, vl_original_p INOUT bigint, vl_conta_p INOUT bigint, pr_participante_p INOUT bigint, cd_cgc_partic_p INOUT text, vl_auxiliares_p bigint, cd_regra_hon_proc_princ_p text, nr_seq_crit_honorario_p INOUT bigint, vl_medico_original_p bigint) AS $body$
DECLARE


dt_atualizacao_w		timestamp			:= clock_timestamp();
vl_medico_w		double precision	:= 0;
vl_co_w			double precision	:= 0;
vl_anestesista_w		double precision	:= 0;
ie_origem_proced_w	bigint		:= 0;
ie_funcao_w		varchar(10);
ie_tipo_servico_sus_w	smallint		:= 0;
ie_tipo_ato_sus_w		smallint		:= 0;
vl_participante_w		double precision	:= 0;
vl_conta_w		double precision	:= 0;
qt_ponto_sus_w		procedimento_participante.qt_ponto_sus%type := 0;
qt_ato_medico_w		smallint		:= 0;
qt_ato_anestesista_w	smallint		:= 0;
ie_valor_informado_w	varchar(1)		:= 'N';
cd_estrutura_w		integer 		:= 0;
cd_estrutura_honor_w	integer 		:= 0;
ie_emite_conta_w           	varchar(3);
cd_convenio_w		integer;
cd_plano_w		varchar(20);
cd_procedimento_w	bigint;
cd_medico_executor_w	varchar(10);
cd_regra_honorario_w	varchar(5);
ie_conta_honorario_w	varchar(1);
ie_calcula_honorario_w	varchar(1)		:= 'S';
cd_cgc_honorario_w	varchar(14);
cd_pessoa_honorario_w	varchar(10);
ie_tipo_atendimento_w	smallint		:= 0;
cd_setor_atendimento_w	integer		:= 0;
cd_estabelecimento_w	smallint		:= 0;
dt_procedimento_w		timestamp;
cd_categoria_w		varchar(10);
ie_responsavel_credito_w	varchar(5);
vl_original_w		double precision	:= 0;
vl_ponto_amb_w		double precision	:= 0;
vl_ponto_co_w		double precision	:= 0;
vl_ponto_amb_anest_w	double precision	:= 0;
tx_valor_medico_w		double precision;
tx_co_w			double precision;
tx_valor_anestesista_w	double precision;
cd_especialidade_medica_w	integer		:= 0;
pr_participante_w		double precision;
nr_seq_criterio_w		bigint;
cd_cgc_prestador_w	varchar(14);
ie_ind_equipe_sus_w	smallint;

cd_area_proc_w		bigint;
cd_espec_proc_w		bigint;
cd_grupo_proc_w		bigint;
nr_seq_proc_pacote_w	bigint;
ie_pacote_w		varchar(1):=	'A';
ie_credenciado_w		varchar(1);

ie_atualiza_cgc_partic_w	varchar(1);
cd_cgc_w		varchar(14);

vl_auxiliares_w		double precision:= 0;
tx_valor_auxiliar_w		double precision;
vl_ponto_amb_aux_w	double precision:= 0;
ie_carater_inter_sus_w	varchar(02);
ie_tipo_convenio_w		smallint;
nr_seq_forma_org_w	bigint := 0;
nr_seq_grupo_w		bigint := 0;
nr_seq_subgrupo_w	bigint := 0;
ie_instrumentador_w	varchar(1);
qt_porte_anestesico_w	smallint;
vl_partic_negociado_w	double precision;
ie_anestesista_w		varchar(1);

cd_estab_conta_w	      	smallint  	:= 0;
nr_interno_conta_w		bigint;
ie_estab_regra_honorario_w	varchar(01):= 'A';
cd_estab_honorario_w	smallint  	:= 0;
cd_estab_logado_w	smallint;
ie_estabelecimento_conta_w	varchar(01);
nr_seq_classif_medico_w	bigint;
nr_atendimento_w		bigint;
cd_procedencia_w		integer;
ie_valor_inf_partic_w	varchar(1);
ie_doc_executor_w		smallint;
cd_cbo_w		varchar(06);
nr_seq_proc_interno_w	bigint;
cd_estab_atend_w	smallint;
ie_partic_resp_cred_w	varchar(1);
ie_gerar_resp_cred_partic_w	varchar(1);
ie_valor_inf_proc_w	varchar(1);
nr_seq_exame_w		bigint;
vl_medico_original_w	procedimento_paciente.vl_medico%type:=0;
nr_seq_ajuste_proc_w	procedimento_paciente.nr_seq_ajuste_proc%type:=0;
tx_ajuste_w		regra_ajuste_proc.tx_ajuste%type:=0;
ie_resp_credito_partic_w procedimento_participante.ie_responsavel_credito%type;

c01 CURSOR FOR
	SELECT	coalesce(tx_valor_medico,0),
		coalesce(tx_valor_anestesista,0),
		coalesce(tx_valor_auxiliar,0),
		coalesce(tx_custo_oper,0)
	from 	funcao_medico_convenio
	where	cd_funcao_medico				= ie_funcao_w
	and 	coalesce(cd_convenio, cd_convenio_w)		= cd_convenio_w
	and 	coalesce(cd_categoria, coalesce(cd_categoria_w,'0'))	= coalesce(cd_categoria_w,'0')
	and 	coalesce(cd_area_proc, cd_area_proc_w)		= cd_area_proc_w
	and 	coalesce(cd_espec_proc, cd_espec_proc_w) 		= cd_espec_proc_w
	and 	coalesce(cd_procedimento, cd_procedimento_w) 	= cd_procedimento_w
	and 	((coalesce(cd_procedimento::text, '') = '') or (((cd_procedimento IS NOT NULL AND cd_procedimento::text <> '') and (coalesce(ie_origem_proced, ie_origem_proced_w) = ie_origem_proced_w ))))
	and	coalesce(nr_seq_grupo,nr_seq_grupo_w)		= nr_seq_grupo_w
	and	coalesce(nr_seq_subgrupo,nr_seq_subgrupo_w)	= nr_seq_subgrupo_w
	and	coalesce(nr_seq_forma_org,nr_seq_forma_org_w)	= nr_seq_forma_org_w
          	and 	((coalesce(ie_credenciado,'T')			= 'T') or (coalesce(ie_credenciado,'T')			= ie_credenciado_w))
	order by	coalesce(cd_categoria,'0'),
			cd_convenio desc,			
			coalesce(nr_seq_forma_org,0) desc,
			coalesce(nr_seq_subgrupo,0) desc,
			coalesce(nr_seq_grupo,0) desc,
			cd_area_proc desc,
			cd_espec_proc desc,
			cd_grupo_proc desc,
			cd_procedimento desc;


BEGIN
qt_ponto_sus_w			:= 0;
vl_participante_w		:= 0;
pr_participante_w		:= 0;

begin
select	a.vl_medico,
		a.vl_anestesista,
		a.ie_origem_proced,
		a.cd_procedimento,
		a.cd_convenio,
		a.cd_categoria,
		a.dt_procedimento,
		a.cd_setor_atendimento,
		a.ie_responsavel_credito,
		b.ie_funcao,
		b.ie_tipo_servico_sus,
		b.ie_tipo_ato_sus,
		coalesce(b.ie_valor_informado,'N'),
		b.cd_pessoa_fisica,
		b.ie_emite_conta,
		c.cd_estabelecimento,
		c.ie_tipo_atendimento,
		b.cd_especialidade,
		cd_cgc_prestador,
		a.nr_seq_proc_pacote,
		b.cd_cgc,
		sus_obter_indicador_equipe(b.ie_funcao),
		c.ie_carater_inter_sus,
		c.ie_tipo_convenio,
		qt_porte_anestesico,
		a.nr_interno_conta,
		c.nr_atendimento,
		a.ie_doc_executor,
		a.cd_cbo,
		a.nr_seq_proc_interno,
		a.vl_custo_operacional,
		coalesce(a.ie_valor_informado,'N'),
		a.nr_seq_exame,
		a.nr_seq_ajuste_proc,
		obter_dado_atend_cat_conv(a.nr_atendimento, a.dt_procedimento, a.cd_convenio, a.cd_categoria, 'P'),
		b.ie_responsavel_credito
into STRICT		vl_medico_w,
		vl_anestesista_w,
		ie_origem_proced_w,
		cd_procedimento_w,
		cd_convenio_w,
		cd_categoria_w,
		dt_procedimento_w,
		cd_setor_atendimento_w,
		ie_responsavel_credito_w,
		ie_funcao_w,
		ie_tipo_servico_sus_w,
		ie_tipo_ato_sus_w,
		ie_valor_informado_w,
		cd_medico_executor_w,
		ie_emite_conta_w,
		cd_estabelecimento_w,
		ie_tipo_atendimento_w,
		cd_especialidade_medica_w,
		cd_cgc_prestador_w,
		nr_seq_proc_pacote_w,
		cd_cgc_w,
		ie_ind_equipe_sus_w,
		ie_carater_inter_sus_w,
		ie_tipo_convenio_w,
		qt_porte_anestesico_w,
		nr_interno_conta_w,
		nr_atendimento_w,
		ie_doc_executor_w,
		cd_cbo_w,
		nr_seq_proc_interno_w,
		vl_co_w,
		ie_valor_inf_proc_w,
		nr_seq_exame_w,
		nr_seq_ajuste_proc_w,
		cd_plano_w,
		ie_resp_credito_partic_w
from		atendimento_paciente c,
		procedimento_paciente a,
		procedimento_participante b
where		a.nr_atendimento		= c.nr_atendimento
and		a.nr_sequencia		= b.nr_sequencia
and		a.nr_sequencia		= nr_sequencia_p
and		b.nr_seq_partic		= nr_seq_partic_p;
exception
     		when others then
		ie_origem_proced_w	:= 0;
end;

cd_estab_atend_w	:= cd_estabelecimento_w;

begin
select	nr_seq_classif_medico
into STRICT	nr_seq_classif_medico_w
from	atendimento_paciente
where 	nr_atendimento     	= nr_atendimento_w;
exception
    	when others then
	nr_seq_classif_medico_w:=null;
end;

begin

select	cd_procedencia
into STRICT	cd_procedencia_w
from 	atendimento_paciente
where 	nr_atendimento 	= nr_atendimento_w;
exception
    	when others then
      	cd_procedencia_w := 0;
end;



begin
select 	cd_estabelecimento
into STRICT	cd_estab_conta_w
from 	conta_paciente
where 	nr_interno_conta = nr_interno_conta_w;
exception
    	when others then
		cd_estab_conta_w:= cd_estabelecimento_w;
end;

select 	wheb_usuario_pck.get_cd_estabelecimento
into STRICT	cd_estab_logado_w
;

select	coalesce(max(ie_estabelecimento_conta), 'A')
into STRICT	ie_estabelecimento_conta_w
from	parametro_faturamento
where	cd_estabelecimento	= cd_estab_logado_w;

if (ie_estabelecimento_conta_w = 'L') then
	cd_estabelecimento_w:= cd_estab_logado_w;
end if;

select	coalesce(max(ie_estab_regra_honorario), 'A'),
	coalesce(max(ie_valor_inf_partic), 'N'),
	coalesce(max(ie_gerar_resp_cred_partic), 'N')
into STRICT	ie_estab_regra_honorario_w,
	ie_valor_inf_partic_w,
	ie_gerar_resp_cred_partic_w
from	parametro_faturamento
where	cd_estabelecimento	= cd_estabelecimento_w;

select	coalesce(max(ie_partic_resp_cred), 'N')
into STRICT	ie_partic_resp_cred_w
from	convenio_estabelecimento
where	cd_convenio		= cd_convenio_w
and	cd_estabelecimento	= cd_estabelecimento_w;

if (ie_estab_regra_honorario_w	= 'C') then
	cd_estab_honorario_w	:= cd_estab_conta_w;
elsif (ie_estab_regra_honorario_w	= 'O') then
	cd_estab_honorario_w	:= cd_estab_atend_w;
else
	cd_estab_honorario_w	:= cd_estabelecimento_w;
end if;

/* obter estrutura do procedimento sus unificado*/

begin
select	c.nr_seq_grupo,
	b.nr_seq_subgrupo,
	a.nr_seq_forma_org
into STRICT	nr_seq_grupo_w,
	nr_seq_subgrupo_w,
	nr_seq_forma_org_w
from	sus_procedimento a,
	sus_forma_organizacao b,
	sus_subgrupo c
where	b.nr_seq_subgrupo	= c.nr_sequencia
and	a.nr_seq_forma_org	= b.nr_sequencia
and	a.cd_procedimento	= cd_procedimento_w
and	a.ie_origem_proced	= ie_origem_proced_w  LIMIT 1;
exception
when others then
	nr_seq_grupo_w		:= 0;
	nr_seq_subgrupo_w	:= 0;
	nr_seq_forma_org_w	:= 0;
end;
/*  obter se medico credenciado  */


/* select		nvl(max(ie_conveniado), 'X')
into		ie_credenciado_w
from		medico_convenio
where		cd_pessoa_fisica		= cd_medico_executor_w
and		cd_convenio			= cd_convenio_w
and		cd_prestador			= nvl(cd_cgc_prestador_w, '0');

if	(ie_credenciado_w	= 'X') then
	begin
	select		nvl(ie_conveniado,'N')
	into		ie_credenciado_w
	from		medico_convenio
	where		cd_pessoa_fisica		= cd_medico_executor_w
	and		cd_convenio			= cd_convenio_w
	and		cd_prestador			is null;
	exception
		when others then
     		ie_credenciado_w 	:= 'N';
	end;
end if; */


/* substituida a rotina acima por essa abaixo os 86907 11/06/2008 fabricio */

select 	obter_se_medico_credenciado(cd_estabelecimento_w, cd_medico_executor_w, cd_convenio_w, cd_cgc_prestador_w, cd_especialidade_medica_w, cd_categoria_w,
		cd_setor_atendimento_w, cd_plano_w, dt_procedimento_w, ie_tipo_atendimento_w, ie_funcao_w, ie_carater_inter_sus_w)
into STRICT	ie_credenciado_w
;


vl_conta_w 					:= 0;
vl_medico_w					:= vl_medico_p;
vl_auxiliares_w					:= vl_auxiliares_p;

if (ie_valor_inf_partic_w = 'S')	and (ie_origem_proced_w not in (2,3,7)) 	and (ie_valor_informado_w = 'S') 	then

	begin
	select	pr_faturar,
		qt_ponto_sus,
		vl_conta,
		vl_original,
		vl_participante
	into STRICT	pr_participante_w,
		qt_ponto_sus_w,
		vl_conta_w,
		vl_original_w,
		vl_participante_w
	from	atendimento_paciente c,
		procedimento_paciente a,
		procedimento_participante b
	where	a.nr_atendimento	= c.nr_atendimento
	and	a.nr_sequencia		= b.nr_sequencia
	and	a.nr_sequencia		= nr_sequencia_p
	and	b.nr_seq_partic		= nr_seq_partic_p;
	exception
			when others then
			ie_origem_proced_w	:= 0;
			pr_participante_w	:= 0;
			qt_ponto_sus_w		:= 0;
			vl_conta_w		:= 0;
			vl_original_w		:= 0;
			vl_participante_w	:= 0;
	end;

end if;

ie_pacote_w:= obter_se_pacote(nr_sequencia_p, nr_seq_proc_pacote_w);

select	coalesce(max(ie_instrumentador),'N'),
	coalesce(max(ie_anestesista),'N')
into STRICT	ie_instrumentador_w,
	ie_anestesista_w
from	funcao_medico
where	cd_funcao	= ie_funcao_w;
if	coalesce(ie_emite_conta_w::text, '') = '' then
	begin
	select vl_parametro_padrao
	into STRICT   ie_emite_conta_w
	from   funcao_parametro
	where  cd_funcao = 81
  	and  	 nr_sequencia = 18;
	exception
     		when others then
          	ie_emite_conta_w := 'N';
	end;
end if;

if (ie_origem_proced_w not in (2,3,7)) 	then

		if (ie_valor_informado_w = 'N') 	then
			begin

			begin
			select		coalesce(vl_medico,vl_participante_w),
					coalesce(vl_anestesista,vl_anestesista_w),
					coalesce(vl_auxiliares, vl_auxiliares_w),
					coalesce(vl_custo_operacional, vl_co_w)
			into STRICT		vl_ponto_amb_w,
					vl_ponto_amb_anest_w,
					vl_ponto_amb_aux_w,
					vl_ponto_co_w
			from		proc_paciente_valor
			where		nr_seq_procedimento	= nr_sequencia_p
			and		ie_tipo_valor		= 2;
			exception
					when others then
					begin
					vl_ponto_amb_w		:= vl_participante_w;
					vl_ponto_amb_anest_w	:= vl_anestesista_w;
					vl_ponto_amb_aux_w	:= vl_auxiliares_w;
					end;
			end;

			/* obter % de participacao */

			select	cd_area_procedimento,
					cd_especialidade,
					cd_grupo_proc
			into STRICT		cd_area_proc_w,
					cd_espec_proc_w,
					cd_grupo_proc_w
			from estrutura_procedimento_v
			where cd_procedimento = cd_procedimento_w
			  and ie_origem_proced = ie_origem_proced_w;

			open c01;
			loop
				fetch c01 into	tx_valor_medico_w,
						tx_valor_anestesista_w,
						tx_valor_auxiliar_w,
						tx_co_w;
				EXIT WHEN NOT FOUND; /* apply on c01 */

			end loop;
			close c01;

			if (tx_valor_medico_w > 0) then
				begin
				vl_participante_w := vl_medico_w 	* tx_valor_medico_w;
				vl_original_w 	:= vl_ponto_amb_w * tx_valor_medico_w;
				pr_participante_w	:= tx_valor_medico_w;			
				end;
			elsif	(tx_valor_auxiliar_w > 0 AND vl_auxiliares_w IS NOT NULL AND vl_auxiliares_w::text <> '') then
				begin
				vl_participante_w 	:= vl_auxiliares_p	* tx_valor_auxiliar_w;
				vl_original_w 		:= vl_ponto_amb_aux_w 	* tx_valor_auxiliar_w;
				pr_participante_w	:= tx_valor_auxiliar_w;
				end;
			else
				begin
				vl_participante_w := vl_anestesista_p	* tx_valor_anestesista_w;
				vl_original_w 	:= vl_ponto_amb_anest_w * tx_valor_anestesista_w;
				pr_participante_w	:= tx_valor_anestesista_w;
				end;
			end if;
			
			if (tx_co_w > 0) then
				begin
				vl_participante_w := vl_participante_w + (vl_co_w * tx_co_w);
				vl_original_w 	  := vl_original_w     + (vl_ponto_co_w * tx_co_w);
				if (pr_participante_w = 0) then
					pr_participante_w:= tx_co_w;
				end if;
				end;
			end if;

			if (ie_instrumentador_w	= 'S') then
				
				vl_medico_original_w := vl_medico_original_p;
			
				if (coalesce(nr_seq_ajuste_proc_w,0) > 0) then
					
					select 	coalesce(tx_ajuste,0)
					into STRICT	tx_ajuste_w
					from	regra_ajuste_proc					
					where	nr_sequencia = nr_seq_ajuste_proc_w;
					
					if (tx_ajuste_w > 0) and (vl_medico_original_p > 0) then
						
						vl_medico_original_w:= dividir(vl_medico_original_p,tx_ajuste_w);
						
					end if;
					
				end if;
				
				vl_partic_negociado_w := obter_regra_ajuste_partic(	cd_estabelecimento_w, cd_convenio_w, qt_porte_anestesico_w, dt_procedimento_w, cd_especialidade_medica_w, vl_partic_negociado_w, vl_medico_original_w);
											
				
				if (coalesce(vl_partic_negociado_w,0) > 0) then
					vl_participante_w	:=vl_partic_negociado_w;
					vl_original_w	:=	vl_partic_negociado_w;
				end if;
			end if;
			
			if (cd_regra_honorario_p IS NOT NULL AND cd_regra_honorario_p::text <> '') then
				select 	coalesce(ie_entra_conta,'S'),
					coalesce(ie_calcula_valor,'S'),
					cd_cgc,
					cd_pessoa_fisica
				into STRICT	ie_conta_honorario_w,
					ie_calcula_honorario_w,
					cd_cgc_honorario_w,
					cd_pessoa_honorario_w
				from	regra_honorario
				where	cd_regra = cd_regra_honorario_p;
			else
				SELECT * FROM obter_regra_honorario(cd_estab_honorario_w, cd_convenio_w, cd_categoria_w, cd_procedimento_w, ie_origem_proced_w, dt_procedimento_w, ie_tipo_atendimento_w, cd_setor_atendimento_w, ie_tipo_servico_sus_w, ie_tipo_ato_sus_w, cd_medico_executor_w, coalesce(cd_cgc_w,cd_cgc_prestador_w), ie_pacote_w, ie_carater_inter_sus_w, cd_plano_w, cd_regra_honorario_w, ie_conta_honorario_w, ie_calcula_honorario_w, cd_cgc_honorario_w, cd_pessoa_honorario_w, nr_seq_criterio_w, cd_especialidade_medica_w, cd_regra_hon_proc_princ_p, ie_funcao_w, null, null, nr_seq_classif_medico_w, cd_procedencia_w, ie_doc_executor_w, cd_cbo_w, nr_seq_proc_interno_w, nr_seq_exame_w) INTO STRICT cd_regra_honorario_w, ie_conta_honorario_w, ie_calcula_honorario_w, cd_cgc_honorario_w, cd_pessoa_honorario_w, nr_seq_criterio_w;
			end if;

			if (ie_calcula_honorario_w 	= 'N') and (ie_valor_informado_w		= 'N') and
				((coalesce(ie_partic_resp_cred_w,'N') = 'N') or ((coalesce(ie_partic_resp_cred_w,'N') = 'S') and (coalesce(cd_regra_hon_proc_princ_p::text, '') = ''))) then
				begin
				pr_participante_w		:= 0;
				vl_participante_w		:= 0;
				end;
			end if;
			if (ie_conta_honorario_w = 'S') then
				vl_conta_w			:= vl_participante_w;
			end if;
			end;
			
		else
			if (ie_gerar_resp_cred_partic_w = 'S') and (ie_valor_inf_proc_w = 'N') then
				
				SELECT * FROM obter_regra_honorario(cd_estab_honorario_w, cd_convenio_w, cd_categoria_w, cd_procedimento_w, ie_origem_proced_w, dt_procedimento_w, ie_tipo_atendimento_w, cd_setor_atendimento_w, ie_tipo_servico_sus_w, ie_tipo_ato_sus_w, cd_medico_executor_w, coalesce(cd_cgc_w,cd_cgc_prestador_w), ie_pacote_w, ie_carater_inter_sus_w, cd_plano_w, cd_regra_honorario_w, ie_conta_honorario_w, ie_calcula_honorario_w, cd_cgc_honorario_w, cd_pessoa_honorario_w, nr_seq_criterio_w, cd_especialidade_medica_w, cd_regra_hon_proc_princ_p, ie_funcao_w, null, null, nr_seq_classif_medico_w, cd_procedencia_w, ie_doc_executor_w, cd_cbo_w, nr_seq_proc_interno_w, nr_seq_exame_w) INTO STRICT cd_regra_honorario_w, ie_conta_honorario_w, ie_calcula_honorario_w, cd_cgc_honorario_w, cd_pessoa_honorario_w, nr_seq_criterio_w;
			end if;
		end if;
end if;
if (ie_origem_proced_w not in (2,3))	then
	begin
	cd_estrutura_w	:= 0;
	SELECT * FROM obter_estrut_conta_proc(
				cd_convenio_w, cd_procedimento_w, ie_origem_proced_w, cd_plano_w, cd_medico_executor_w, coalesce(cd_regra_honorario_p,cd_regra_honorario_w), nr_sequencia_p, cd_setor_atendimento_w, ie_tipo_atendimento_w, cd_estabelecimento_w, cd_especialidade_medica_w, cd_categoria_w, dt_procedimento_w, null, cd_estrutura_w, cd_estrutura_honor_w) INTO STRICT cd_estrutura_w, cd_estrutura_honor_w;

	if (cd_estrutura_honor_w	> 0) then
		ie_emite_conta_w	:= cd_estrutura_honor_w;
	end if;
	end;
end if;

if (ie_origem_proced_w 	= 2)  then
		begin
		begin
		select	qt_ato_medico,
				qt_ato_anestesista,
				vl_medico
		into STRICT		qt_ato_medico_w,
				qt_ato_anestesista_w,
				vl_medico_w
		from		sus_valor_proc_paciente
		where		nr_sequencia 		= nr_sequencia_p;
		exception
				when others then
      			qt_ato_medico_w := 1;
		end;

		vl_participante_w 	:= 0;

		/* cirurgiao */

		if (ie_tipo_ato_sus_w = 1) then
			begin
			pr_participante_w		:= 100;
			qt_ponto_sus_w 		:= qt_ato_medico_w;
			end;
		end if;
		/* 1 auxiliar cirurgico */

		if (ie_tipo_ato_sus_w = 2) then
			begin
			pr_participante_w		:= 0.30;
			qt_ponto_sus_w 		:= trunc(qt_ato_medico_w * 0.30,2);
			end;
		end if;
		/* 2 auxiliar cirurgico */

		if (ie_tipo_ato_sus_w = 3) then
			begin
			pr_participante_w		:= 0.20;
			qt_ponto_sus_w 		:= trunc(qt_ato_medico_w * 0.20,2);
			end;
		end if;
		/* 3 auxiliar cirurgico */

		if (ie_tipo_ato_sus_w = 4) then
			begin
			pr_participante_w		:= 0.20;
			qt_ponto_sus_w 		:= trunc(qt_ato_medico_w * 0.20,2);
			end;
		end if;
		/* demais auxiliares cirurgico */

		if (ie_tipo_ato_sus_w = 5) then
			begin
			pr_participante_w		:= 0.20;
			qt_ponto_sus_w 		:= trunc(qt_ato_medico_w * 0.20,2);
			end;
		end if;
		/* anestesista */

		if (ie_tipo_ato_sus_w = 6) then
			begin
			pr_participante_w		:= 100;
			qt_ponto_sus_w 		:= qt_ato_anestesista_w;
			end;
		end if;

		SELECT * FROM obter_regra_honorario(cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, cd_procedimento_w, ie_origem_proced_w, dt_procedimento_w, ie_tipo_atendimento_w, cd_setor_atendimento_w, ie_tipo_servico_sus_w, ie_tipo_ato_sus_w, cd_medico_executor_w, coalesce(cd_cgc_w,cd_cgc_prestador_w), ie_pacote_w, ie_carater_inter_sus_w, cd_plano_w, cd_regra_honorario_w, ie_conta_honorario_w, ie_calcula_honorario_w, cd_cgc_honorario_w, cd_pessoa_honorario_w, nr_seq_criterio_w, cd_especialidade_medica_w, cd_regra_hon_proc_princ_p, ie_funcao_w, null, null, nr_seq_classif_medico_w, cd_procedencia_w, ie_doc_executor_w, cd_cbo_w, nr_seq_proc_interno_w, nr_seq_exame_w) INTO STRICT cd_regra_honorario_w, ie_conta_honorario_w, ie_calcula_honorario_w, cd_cgc_honorario_w, cd_pessoa_honorario_w, nr_seq_criterio_w;


		if (ie_conta_honorario_w = 'S') then
			vl_conta_w			:= vl_participante_w;
		end if;
		end;
end if;

if (ie_origem_proced_w	= 7) and (ie_tipo_convenio_w	= 3) then
		begin
		begin
		select	qt_ato_medico,
			qt_ato_anestesista,
			vl_medico
		into STRICT	qt_ato_medico_w,
			qt_ato_anestesista_w,
			vl_medico_w
		from	sus_valor_proc_paciente
		where	nr_sequencia 		= nr_sequencia_p;
		exception
			when others then
      			qt_ato_medico_w := 1;
		end;

		vl_participante_w 	:= 0;

		/* cirurgiao */

		if (ie_ind_equipe_sus_w = 1) then
			begin
			pr_participante_w		:= 100;
			qt_ponto_sus_w 		:= qt_ato_medico_w;
			end;
		end if;
		/* 1 auxiliar cirurgico */

		if (ie_ind_equipe_sus_w = 2) then
			begin
			pr_participante_w		:= 0.30;
			qt_ponto_sus_w 		:= trunc(qt_ato_medico_w * 0.30,2);
			end;
		end if;
		/* 2 auxiliar cirurgico */

		if (ie_ind_equipe_sus_w = 3) then
			begin
			pr_participante_w		:= 0.20;
			qt_ponto_sus_w 		:= trunc(qt_ato_medico_w * 0.20,2);
			end;
		end if;
		/* 3 auxiliar cirurgico */

		if (ie_ind_equipe_sus_w = 4) then
			begin
			pr_participante_w		:= 0.20;
			qt_ponto_sus_w 		:= trunc(qt_ato_medico_w * 0.20,2);
			end;
		end if;
		/* demais auxiliares cirurgico */

		if (ie_ind_equipe_sus_w = 5) then
			begin
			pr_participante_w		:= 0.20;
			qt_ponto_sus_w 		:= trunc(qt_ato_medico_w * 0.20,2);
			end;
		end if;
		/* anestesista */

		if (ie_ind_equipe_sus_w = 6) then
			begin
			pr_participante_w		:= 100;
			qt_ponto_sus_w 		:= qt_ato_anestesista_w;
			end;
		end if;

		SELECT * FROM obter_regra_honorario(cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, cd_procedimento_w, ie_origem_proced_w, dt_procedimento_w, ie_tipo_atendimento_w, cd_setor_atendimento_w, ie_tipo_servico_sus_w, ie_tipo_ato_sus_w, cd_medico_executor_w, coalesce(cd_cgc_w,cd_cgc_prestador_w), ie_pacote_w, ie_carater_inter_sus_w, cd_plano_w, cd_regra_honorario_w, ie_conta_honorario_w, ie_calcula_honorario_w, cd_cgc_honorario_w, cd_pessoa_honorario_w, nr_seq_criterio_w, cd_especialidade_medica_w, cd_regra_hon_proc_princ_p, ie_funcao_w, null, null, nr_seq_classif_medico_w, cd_procedencia_w, ie_doc_executor_w, cd_cbo_w, nr_seq_proc_interno_w, nr_seq_exame_w) INTO STRICT cd_regra_honorario_w, ie_conta_honorario_w, ie_calcula_honorario_w, cd_cgc_honorario_w, cd_pessoa_honorario_w, nr_seq_criterio_w;

		if (ie_anestesista_w	= 'S') and (ie_tipo_atendimento_w	<> 1) then
			vl_participante_w	:= vl_anestesista_p;
			if (ie_conta_honorario_w = 'S') then
				vl_conta_w			:= vl_participante_w;
			end if;

		end if;
		end;
end if;

if	((cd_regra_honorario_w = '') or (coalesce(cd_regra_honorario_w::text, '') = '')) then
	if (ie_valor_informado_w = 'S') and (ie_resp_credito_partic_w IS NOT NULL AND ie_resp_credito_partic_w::text <> '') then
		cd_regra_honorario_w	:= ie_resp_credito_partic_w;
	else
		cd_regra_honorario_w	:= ie_responsavel_credito_w;	
	end if;	
end if;

/* edgar 06/06/2005, os 19008, coloquei os nvl */

vl_participante_p		:= coalesce(vl_participante_w, 0);
qt_ponto_sus_p		:= qt_ponto_sus_w;
ie_emite_conta_p		:= ie_emite_conta_w;
cd_regra_honorario_p	:= cd_regra_honorario_w;
nr_seq_crit_honorario_p := coalesce(nr_seq_criterio_w,0);
vl_original_p		:= coalesce(vl_original_w,0);
vl_conta_p		:= coalesce(vl_conta_w,0);
pr_participante_p		:= pr_participante_w;

select 	coalesce(max(ie_atualiza_cgc_partic),'N')
into STRICT	ie_atualiza_cgc_partic_w
from 	parametro_faturamento
where 	cd_estabelecimento = cd_estabelecimento_w;

if (ie_atualiza_cgc_partic_w = 'S') then
	cd_cgc_partic_p			:= coalesce(cd_cgc_honorario_w,cd_cgc_w);
else
	cd_cgc_partic_p			:= cd_cgc_w;
	
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE define_valor_participante ( nr_sequencia_p bigint, nr_seq_partic_p bigint, nm_usuario_p text, vl_anestesista_p bigint, vl_medico_p bigint, vl_participante_p INOUT bigint, qt_ponto_sus_p INOUT bigint, ie_emite_conta_p INOUT text, cd_regra_honorario_p INOUT text, vl_original_p INOUT bigint, vl_conta_p INOUT bigint, pr_participante_p INOUT bigint, cd_cgc_partic_p INOUT text, vl_auxiliares_p bigint, cd_regra_hon_proc_princ_p text, nr_seq_crit_honorario_p INOUT bigint, vl_medico_original_p bigint) FROM PUBLIC;

