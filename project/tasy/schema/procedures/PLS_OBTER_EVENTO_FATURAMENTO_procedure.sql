-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_obter_evento_faturamento ( nr_seq_conta_proc_p pls_conta_proc.nr_sequencia%type, nr_seq_conta_mat_p pls_conta_mat.nr_sequencia%type, dt_referencia_p pls_conta.dt_atualizacao%type, nr_seq_evento_p INOUT pls_evento_faturamento.nr_sequencia%type, nr_seq_regra_p pls_regra_faturamento.nr_sequencia%type, nr_seq_pos_contabil_p pls_conta_pos_estab_contab.nr_sequencia%type, nr_seq_conta_pos_estab_p pls_conta_pos_estabelecido.nr_sequencia%type default null, nr_seq_conta_sus_p pls_processo_conta.nr_sequencia%type default null, ie_tipo_lote_p pls_lote_faturamento.ie_tipo_lote%type default 'C') AS $body$
DECLARE

					
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[ X ]  Objetos do dicionario [  ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
cd_prestador_w			pls_prestador.cd_prestador%type;
cd_prestador_rec_w		pls_prestador.cd_prestador%type;
ie_apresentacao_prot_w		varchar(30);
cd_estabelecimento_w		varchar(20);
cd_pessoa_prest_w		varchar(10) := '0';
ie_tipo_segurado_w		varchar(3);
ie_tipo_desp_proc_w		pls_conta_proc.ie_tipo_despesa%type;
ie_preco_w			pls_plano.ie_preco%type;
ie_tipo_guia_w			varchar(2);
ie_tipo_intercambio_w		varchar(2);
ie_tipo_conta_w			varchar(2);
sg_estado_w			pessoa_juridica.sg_estado%type;
sg_estado_int_w			pessoa_juridica.sg_estado%type;
ie_pcmso_w			varchar(2);
ie_tipo_relacao_w		varchar(2) := 'X';
ie_tipo_pessoa_prest_ptu_w	varchar(2) := 'J';
ie_evento_restritivo_w		pls_parametro_faturamento.ie_evento_restritivo%type;
ie_tipo_despesa_w		varchar(1);
ie_origem_conta_w		varchar(1);
ie_estrut_mat_w			varchar(1);
ie_conta_internacao_w		varchar(1);
ie_tipo_pessoa_w		varchar(1) := 'J';
ie_tipo_pessoa_rec_w		varchar(1) := 'J';
ie_ato_cooperado_w		varchar(1) := 'X';
ie_glosar_cart_w		varchar(1) := 'S';
cd_procedimento_w		bigint;
cd_area_procedimento_w		bigint;
cd_grupo_proc_w			bigint;
nr_seq_segurado_w		bigint;
nr_seq_evento_w			bigint := null;
ie_origem_proced_w		bigint;
nr_seq_estrut_mat_w		bigint;
nr_seq_material_w		bigint;
nr_seq_grupo_rec_mat_w		bigint;
nr_seq_grupo_rec_proc_w		bigint;
nr_seq_tipo_atendimento_w	bigint;
nr_seq_congenere_w		bigint;
nr_seq_prestador_exec_w		bigint;
nr_seq_tipo_prestador_w		bigint := 0;
nr_seq_tipo_prestador_rec_w	bigint;
nr_seq_prestador_regra_w	bigint;
nr_seq_regra_prof_w		bigint;
nr_seq_tipo_conta_w		bigint;
nr_seq_plano_w			bigint;
nr_seq_classif_sca_w		bigint;
nr_seq_classif_prest_w		bigint;
cd_especialidade_w		integer;
cd_material_w			integer;
dt_referencia_w			timestamp;
ie_tipo_congenere_w		pls_congenere.ie_tipo_congenere%type;
nr_seq_congenere_prot_w		pls_congenere.nr_sequencia%type;
ie_nacional_w			pls_congenere.ie_nacional%type;

nr_seq_guia_w			pls_guia_plano.nr_sequencia%type;
ie_ato_cooperado_pag_w		pls_evento_fat_regra_itens.ie_ato_cooperado_pag%type;
ie_tipo_pessoa_prest_pag_w	pls_evento_fat_regra_itens.ie_tipo_pessoa_prest_pag%type := 'J';
nr_seq_prest_atend_w		pls_prestador.nr_sequencia%type;
ie_tipo_pessoa_prest_atend_w	pls_evento_fat_regra_itens.ie_tipo_pessoa_prest_atend%type := 'J';
nr_seq_prest_solic_w		pls_prestador.nr_sequencia%type;
ie_tipo_pessoa_prest_solic_w	pls_evento_fat_regra_itens.ie_tipo_pessoa_prest_solic%type := 'J';
nr_seq_prestador_pgto_w		pls_prestador.nr_sequencia%type;
nr_seq_conta_resumo_w		pls_conta_medica_resumo.nr_sequencia%type;
nr_seq_conta_med_w		pls_conta.nr_sequencia%type;
ie_regra_pag_w			varchar(1);
ie_pcmso_req_w			pls_requisicao.ie_pcmso%type;
nr_seq_conta_princ_w		pls_conta.nr_seq_conta_princ%type;
ie_tipo_guia_princ_w		pls_conta.ie_tipo_guia%type;
nr_seq_regra_tx_opme_w		pls_conta_pos_estabelecido.nr_seq_regra_tx_opme%type;
nr_seq_analise_pos_w		pls_analise_conta.nr_sequencia%type;
ie_origem_analise_pos_w		pls_analise_conta.ie_origem_analise%type;
nr_seq_seg_conta_w		pls_conta.nr_seq_segurado%type;
nr_seq_conta_rec_w		pls_rec_glosa_conta.nr_sequencia%type;
nr_seq_conta_w			pls_conta.nr_sequencia%type;
ie_tipo_protocolo_w		pls_evento_fat_regra_itens.ie_tipo_protocolo%type;
ie_origem_protocolo_w		pls_evento_fat_regra_itens.ie_origem_protocolo%type;
ie_tipo_benef_remido_w		pls_evento_fat_regra_itens.ie_tipo_benef_remido%type;	-- Beneficiario remido
dt_atendimento_referencia_w	pls_conta.dt_atendimento_referencia%type;
nr_seq_regra_event_w		pls_regra_fat_evento.nr_seq_regra%type;
ie_cobertura_especial_w		pls_conta.ie_cobertura_especial%type;
ie_regime_atendimento_w		pls_conta.ie_regime_atendimento%type;
ie_saude_ocupacional_w		pls_conta.ie_saude_ocupacional%type;

-- Cursor da regra
C01 CURSOR FOR					
	SELECT	b.nr_sequencia nr_seq_evento,
		a.nr_seq_estrut_mat,
		a.nr_seq_regra_atend_cart,
		a.nr_sequencia
	from	pls_regra_fat_evento		c,
		pls_evento_faturamento		b,
		pls_evento_fat_regra_itens	a
	
	where	a.nr_seq_evento		= b.nr_sequencia
	and	b.ie_situacao		= 'A'
	and	b.nr_sequencia 		= c.nr_seq_evento
	and	((ie_evento_restritivo_w	= 'N')		or (c.nr_seq_regra			= nr_seq_regra_p))
	and	((coalesce(a.ie_tipo_guia::text, '') = '') 		or (a.ie_tipo_guia			= ie_tipo_guia_w))
	and	((coalesce(a.ie_tipo_guia_princ::text, '') = '') 		or (a.ie_tipo_guia_princ		= ie_tipo_guia_princ_w))
	and	((coalesce(a.nr_seq_tipo_atendimento::text, '') = '') 		or (a.nr_seq_tipo_atendimento		= nr_seq_tipo_atendimento_w))
	and	((coalesce(a.nr_seq_tipo_conta::text, '') = '') 		or (a.nr_seq_tipo_conta			= nr_seq_tipo_conta_w))
	and	((coalesce(a.ie_origem_conta::text, '') = '')		or (a.ie_origem_conta			= ie_origem_conta_w))	
	and	((coalesce(a.ie_tipo_segurado::text, '') = '')		or (a.ie_tipo_segurado			= ie_tipo_segurado_w))
	and	((coalesce(a.ie_internado,'A') = 'A')		or (coalesce(a.ie_internado,'A')		= ie_conta_internacao_w))
	and	((coalesce(a.ie_tipo_benef_remido,'A') = 'A')	or (coalesce(a.ie_tipo_benef_remido,'A') 	= ie_tipo_benef_remido_w))	-- Beneficiario remido
	and	((coalesce(a.ie_tipo_intercambio,'A') = 'A')		or (coalesce(a.ie_tipo_intercambio,'A') 	= coalesce(ie_tipo_intercambio_w,'A')))
	and	((coalesce(a.ie_tipo_conta,'A') = 'A')		or (coalesce(a.ie_tipo_conta,'A') 		= coalesce(ie_tipo_conta_w,'A')))
	and	((coalesce(a.ie_pcmso,'A') = 'A')			or (coalesce(a.ie_pcmso,'N')			= coalesce(ie_pcmso_w,'N')))
	and	((coalesce(a.nr_seq_plano::text, '') = '')		or (a.nr_seq_plano	= nr_seq_plano_w))
	and	((coalesce(a.nr_seq_classificacao_sca::text, '') = '')		or (a.nr_seq_classificacao_sca = nr_seq_classif_sca_w))	
	and	((nr_seq_plano_w <> 0 and pls_se_grupo_preco_produto(a.nr_seq_grupo_produto,nr_seq_plano_w) = 'S') or (coalesce(a.nr_seq_grupo_produto::text, '') = ''))
	-- Procedimento
	and	((coalesce(a.ie_tipo_despesa_proc::text, '') = '') or (a.ie_tipo_despesa_proc = ie_tipo_desp_proc_w ))
	and	((coalesce(a.cd_procedimento::text, '') = '') or (a.cd_procedimento	= cd_procedimento_w))
	and	((coalesce(a.cd_area_procedimento::text, '') = '') or (a.cd_area_procedimento = cd_area_procedimento_w))
	and	((coalesce(a.cd_especialidade::text, '') = '') or (a.cd_especialidade	= cd_especialidade_w))
	and	((coalesce(a.cd_grupo_proc::text, '') = '') or (a.cd_grupo_proc	= cd_grupo_proc_w))
	and	((coalesce(a.ie_preco::text, '') = '') or (a.ie_preco	= ie_preco_w))
	-- Material
	and	((coalesce(a.ie_tipo_despesa_mat::text, '') = '') or (a.ie_tipo_despesa_mat =ie_tipo_despesa_w))
	and	((coalesce(a.nr_seq_material::text, '') = '') or (a.nr_seq_material =  nr_seq_material_w ))
	and	((coalesce(a.nr_seq_grupo_rec::text, '') = '') or (a.nr_seq_grupo_rec = nr_seq_grupo_rec_mat_w) or (a.nr_seq_grupo_rec	= nr_seq_grupo_rec_proc_w))
	and	dt_referencia_w between a.dt_inicio_vigencia and coalesce(a.dt_fim_vigencia,dt_referencia_w)
	-- Prestador
	and	((a.cd_prestador = cd_prestador_w)			or (coalesce(a.cd_prestador::text, '') = ''))
	and	((a.nr_seq_tipo_prestador = nr_seq_tipo_prestador_w)	or (coalesce(a.nr_seq_tipo_prestador::text, '') = ''))
	and	((coalesce(a.ie_tipo_pessoa_prest,'A') = ie_tipo_pessoa_w)	or (coalesce(a.ie_tipo_pessoa_prest,'A') = 'A'))
	and	((a.ie_tipo_relacao = ie_tipo_relacao_w)		or (coalesce(a.ie_tipo_relacao::text, '') = ''))
	and	((a.nr_seq_classif_prest = nr_seq_classif_prest_w)	or (coalesce(a.nr_seq_classif_prest::text, '') = ''))
	and	((a.ie_ato_cooperado = ie_ato_cooperado_w)		or (coalesce(a.ie_ato_cooperado::text, '') = ''))
	-- Prestador recebimento
	and	(((a.cd_prestador_rec = cd_prestador_rec_w) or (coalesce(a.cd_prestador_rec::text, '') = '')) or
		(nr_seq_conta_mat_p IS NOT NULL AND nr_seq_conta_mat_p::text <> '')) -- Nao tem como obter o prestador de recebimento pra materiais
	and	(((a.nr_seq_tipo_prest_rec = nr_seq_tipo_prestador_rec_w) or (coalesce(a.nr_seq_tipo_prest_rec::text, '') = '')) or 
		(nr_seq_conta_mat_p IS NOT NULL AND nr_seq_conta_mat_p::text <> '')) -- Nao tem como obter o prestador de recebimento pra materiais
	and	(((coalesce(a.ie_tipo_pessoa_prest_rec,'A') = ie_tipo_pessoa_rec_w) or (coalesce(a.ie_tipo_pessoa_prest_rec,'A') = 'A')) or 
		(nr_seq_conta_mat_p IS NOT NULL AND nr_seq_conta_mat_p::text <> '')) -- Nao tem como obter o prestador de recebimento pra materiais
	and	((coalesce(a.ie_tipo_pessoa_prest_pag, 'A') = ie_tipo_pessoa_prest_pag_w ) or (coalesce(ie_tipo_pessoa_prest_pag, 'A') = 'A'))
	and	((a.ie_ato_cooperado_pag = ie_ato_cooperado_pag_w)			or (coalesce(a.ie_ato_cooperado_pag::text, '') = ''))
	-- Protocolo
	and	((coalesce(a.ie_apresentacao_prot,'T') = coalesce(ie_apresentacao_prot_w,'A')) or (coalesce(a.ie_apresentacao_prot,'T') = 'T'))
	and	((coalesce(a.ie_tipo_pessoa_prest_atend, 'A') = ie_tipo_pessoa_prest_atend_w ) or (coalesce(ie_tipo_pessoa_prest_atend, 'A') = 'A'))
	-- A500
	and	((coalesce(a.ie_tipo_pessoa_prest_ptu, 'A') = ie_tipo_pessoa_prest_ptu_w ) or (coalesce(ie_tipo_pessoa_prest_ptu, 'A') = 'A'))
	-- Prestador solicitante (guia)
	and	((coalesce(a.ie_tipo_pessoa_prest_solic, 'A') = ie_tipo_pessoa_prest_solic_w) or (coalesce(ie_tipo_pessoa_prest_solic, 'A') = 'A'))
	-- alterado para count a verificacao na table function, isso pois existe um bug no oracle que quando e feito um exists se existe um cursor na table 

	-- ele permanece aberto
	and	((coalesce(a.nr_seq_grupo_servico::text, '') = '') 	or
		((SELECT count(1) from table(pls_grupos_pck.obter_procs_grupo_servico(a.nr_seq_grupo_servico, ie_origem_proced_w,cd_procedimento_w))) > 0))
	and	((a.ie_origem_analise_pos = ie_origem_analise_pos_w)	or (coalesce(a.ie_origem_analise_pos::text, '') = ''))
	and not exists(	select	1
			from	pls_evento_fat_exc_itens z
			where	z.nr_seq_evento	= b.nr_sequencia
			and	((coalesce(z.nr_seq_tipo_conta::text, '') = '')		or (z.nr_seq_tipo_conta = nr_seq_tipo_conta_w))
			and	((coalesce(z.ie_origem_analise_pos::text, '') = '')	or (z.ie_origem_analise_pos = ie_origem_analise_pos_w)))
	and	((a.ie_tipo_protocolo = ie_tipo_protocolo_w) 		or (coalesce(a.ie_tipo_protocolo::text, '') = ''))
	and	((a.ie_origem_protocolo = ie_origem_protocolo_w)	or (coalesce(a.ie_origem_protocolo::text, '') = ''))
	and	((a.ie_cobertura_especial = ie_cobertura_especial_w)	or (coalesce(a.ie_cobertura_especial::text, '') = ''))
	and	((a.ie_regime_atendimento = ie_regime_atendimento_w)	or (coalesce(a.ie_regime_atendimento::text, '') = ''))
	and	((a.ie_saude_ocupacional = ie_saude_ocupacional_w)	or (coalesce(a.ie_saude_ocupacional::text, '') = ''))
	order by
		coalesce(a.nr_seq_plano,0),
		coalesce(a.ie_tipo_intercambio,' '),		
		coalesce(a.ie_tipo_segurado,' '),		
		coalesce(a.ie_preco,' '),		
		coalesce(a.nr_seq_grupo_produto,0),
		coalesce(a.nr_seq_classificacao_sca,0),	
		coalesce(a.ie_pcmso,' '),		
		coalesce(a.cd_procedimento,0),
		coalesce(a.cd_grupo_proc,0),
		coalesce(a.cd_especialidade,0),
		coalesce(a.cd_area_procedimento,0),
		coalesce(a.nr_seq_grupo_servico,0),
		coalesce(a.nr_seq_grupo_rec,0),
		coalesce(a.ie_tipo_despesa_proc,' '),
		coalesce(a.ie_tipo_guia_princ,' '),
		coalesce(a.ie_tipo_guia,' '),
		coalesce(a.nr_seq_material,0),
		coalesce(a.nr_seq_estrut_mat,0),
		coalesce(a.nr_seq_grupo_rec,0),
		coalesce(a.ie_tipo_despesa_mat,' '),
		coalesce(a.cd_prestador,' '),
		coalesce(a.nr_seq_tipo_prestador,0),
		coalesce(a.cd_prestador_rec,' '),
		coalesce(a.nr_seq_tipo_prest_rec,0),
		coalesce(a.nr_seq_tipo_atendimento,0),
		coalesce(a.nr_seq_tipo_conta,0),
		coalesce(a.ie_origem_conta,' '),
		coalesce(a.ie_internado,' '),		
		coalesce(a.ie_tipo_conta,' '),
		coalesce(a.ie_tipo_pessoa_prest,' '),
		coalesce(a.ie_tipo_relacao,' '),
		coalesce(a.nr_seq_classif_prest,0),
		coalesce(a.ie_tipo_pessoa_prest_rec,' '),
		coalesce(a.ie_apresentacao_prot,' '),
		coalesce(a.ie_ato_cooperado, ' '),
		coalesce(a.nr_seq_regra_atend_cart, 0),
		coalesce(a.ie_tipo_pessoa_prest_ptu, ' '),
		coalesce(a.ie_tipo_pessoa_prest_pag, ' '),
		coalesce(a.ie_tipo_pessoa_prest_atend, ' '),
		coalesce(a.ie_tipo_pessoa_prest_solic, ' '),
		coalesce(ie_ato_cooperado_pag, ' '),
		coalesce(a.ie_tipo_protocolo, ' '),
		coalesce(a.ie_origem_protocolo, ' ');
		
BEGIN
dt_referencia_w	:= coalesce(dt_referencia_p, clock_timestamp());

cd_estabelecimento_w := wheb_usuario_pck.get_cd_estabelecimento;

if (coalesce(cd_estabelecimento_w::text, '') = '') then

	select	max(cd_estabelecimento)
	into STRICT	cd_estabelecimento_w
	from	pls_outorgante;
end if;

nr_seq_regra_tx_opme_w := null;
if (nr_seq_pos_contabil_p IS NOT NULL AND nr_seq_pos_contabil_p::text <> '') then

	select	max(w.nr_seq_prestador_pgto),
		max(w.nr_seq_conta_resumo),
		max(w.nr_seq_conta),
		max(x.nr_seq_regra_tx_opme),
		max(x.nr_seq_analise),
		max(x.nr_seq_conta_rec)
	into STRICT	nr_seq_prestador_pgto_w,
		nr_seq_conta_resumo_w,
		nr_seq_conta_med_w,
		nr_seq_regra_tx_opme_w,
		nr_seq_analise_pos_w,
		nr_seq_conta_rec_w
	from	pls_conta_pos_estabelecido	x,
		pls_conta_pos_estab_contab	w
	where	w.nr_sequencia	= nr_seq_pos_contabil_p
	and	x.nr_sequencia	= w.nr_seq_conta_pos;

elsif (nr_seq_conta_pos_estab_p IS NOT NULL AND nr_seq_conta_pos_estab_p::text <> '') then
	select	max(nr_seq_regra_tx_opme),
		max(nr_seq_analise)
	into STRICT	nr_seq_regra_tx_opme_w,
		nr_seq_analise_pos_w
	from	pls_conta_pos_estabelecido
	where	nr_sequencia	= nr_seq_conta_pos_estab_p;
	
elsif (nr_seq_conta_proc_p IS NOT NULL AND nr_seq_conta_proc_p::text <> '') then
	select	max(nr_seq_regra_tx_opme),
		max(nr_seq_analise)
	into STRICT	nr_seq_regra_tx_opme_w,
		nr_seq_analise_pos_w
	from	pls_conta_pos_estabelecido
	where	nr_seq_conta_proc	= nr_seq_conta_proc_p;
	
elsif (nr_seq_conta_mat_p IS NOT NULL AND nr_seq_conta_mat_p::text <> '') then
	select	max(nr_seq_regra_tx_opme),
		max(nr_seq_analise)
	into STRICT	nr_seq_regra_tx_opme_w,
		nr_seq_analise_pos_w
	from	pls_conta_pos_estabelecido
	where	nr_seq_conta_mat	= nr_seq_conta_mat_p;
end if;

if (nr_seq_analise_pos_w IS NOT NULL AND nr_seq_analise_pos_w::text <> '') then
	select	coalesce(max(ie_origem_analise),2) -- Custo Pos-estabelecido
	into STRICT	ie_origem_analise_pos_w
	from	pls_analise_conta
	where	nr_sequencia	= nr_seq_analise_pos_w;
elsif (nr_seq_conta_rec_w IS NOT NULL AND nr_seq_conta_rec_w::text <> '') then
	ie_origem_analise_pos_w := '8'; -- pos de recurso de glosa
end if;

if (nr_seq_prestador_pgto_w IS NOT NULL AND nr_seq_prestador_pgto_w::text <> '') then

	select	CASE WHEN coalesce(cd_cgc::text, '') = '' THEN 'F'  ELSE 'J' END ,
		nr_seq_classificacao
	into STRICT	ie_tipo_pessoa_prest_pag_w,
		nr_seq_classif_prest_w
	from	pls_prestador
	where	nr_sequencia = nr_seq_prestador_pgto_w;
end if;

select	CASE WHEN count(1)=0 THEN 'N'  ELSE 'S' END
into STRICT	ie_regra_pag_w
from	pls_evento_faturamento		a,
	pls_evento_fat_regra_itens	b
where	a.nr_sequencia	= b.nr_seq_evento
and	a.ie_situacao	= 'A'
and (ie_tipo_pessoa_prest_pag != 'A'
or	(ie_ato_cooperado_pag IS NOT NULL AND ie_ato_cooperado_pag::text <> ''));

select	coalesce(max(ie_evento_restritivo),'N')
into STRICT	ie_evento_restritivo_w
from	pls_parametro_faturamento
where	cd_estabelecimento	= cd_estabelecimento_w;

if (nr_seq_conta_proc_p IS NOT NULL AND nr_seq_conta_proc_p::text <> '') then

	-- Dados da conta / beneficiario
	select	max(t.ie_tipo_segurado),
		max(t.ie_origem_conta),
		max(t.nr_seq_tipo_atendimento),
		max(t.ie_tipo_guia),
		max(t.ie_internado),
		max(t.nr_seq_congenere),
		max(t.ie_tipo_conta),
		max(t.nr_seq_prestador_exec),
		max(t.ie_apresentacao),
		max(t.nr_seq_tipo_conta),
		max(t.nr_seq_plano),
		max(t.ie_pcmso),
		max(t.nr_sequencia),
		max(t.nr_seq_congenere_prot),
		max(t.nr_seq_guia),
		max(t.nr_seq_prestador_prot),
		max(t.nr_seq_conta),
		max(t.cd_cgc_prest_prot),
		max(t.cd_area_procedimento),
		max(t.cd_especialidade),
		max(t.cd_grupo_proc),
		max(t.nr_seq_grupo_rec),
		max(t.cd_procedimento),
		max(t.ie_origem_proced),
		max(t.ie_ato_cooperado),
		max(t.ie_tipo_despesa),
		max(t.nr_seq_conta_princ),
		max(t.nr_seq_segurado),
		max(t.nr_seq_conta),
		max(t.ie_tipo_protocolo),
		max(t.ie_origem_protocolo),
		max(t.dt_atendimento_referencia),
		max(t.ie_cobertura_especial),
		max(t.ie_regime_atendimento),
		max(t.ie_saude_ocupacional)
	into STRICT	ie_tipo_segurado_w,
		ie_origem_conta_w,
		nr_seq_tipo_atendimento_w,
		ie_tipo_guia_w,
		ie_conta_internacao_w,
		nr_seq_congenere_w,
		ie_tipo_conta_w,
		nr_seq_prestador_exec_w,
		ie_apresentacao_prot_w,
		nr_seq_tipo_conta_w,
		nr_seq_plano_w,
		ie_pcmso_w,
		nr_seq_segurado_w,
		nr_seq_congenere_prot_w,
		nr_seq_guia_w,
		nr_seq_prest_atend_w,
		nr_seq_conta_med_w,
		ie_tipo_pessoa_prest_atend_w,
		cd_area_procedimento_w,
		cd_especialidade_w,
		cd_grupo_proc_w,
		nr_seq_grupo_rec_proc_w,
		cd_procedimento_w,
		ie_origem_proced_w,
		ie_ato_cooperado_w,
		ie_tipo_desp_proc_w,
		nr_seq_conta_princ_w,
		nr_seq_seg_conta_w,
		nr_seq_conta_w,
		ie_tipo_protocolo_w,
		ie_origem_protocolo_w,
		dt_atendimento_referencia_w,
		ie_cobertura_especial_w,
		ie_regime_atendimento_w,
		ie_saude_ocupacional_w
	from (	SELECT	coalesce(b.ie_tipo_segurado_cta,c.ie_tipo_segurado) ie_tipo_segurado,
			b.ie_origem_conta ie_origem_conta,
			b.nr_seq_tipo_atendimento nr_seq_tipo_atendimento,
			b.ie_tipo_guia ie_tipo_guia,
			b.ie_internado ie_internado,
			coalesce(c.nr_seq_ops_congenere,c.nr_seq_congenere) nr_seq_congenere,
			b.ie_tipo_conta ie_tipo_conta,
			b.nr_seq_prestador_exec nr_seq_prestador_exec,
			a.ie_apresentacao ie_apresentacao,
			b.nr_seq_tipo_conta nr_seq_tipo_conta,
			c.nr_seq_plano nr_seq_plano,
			c.ie_pcmso ie_pcmso,
			c.nr_sequencia nr_sequencia,
			a.nr_seq_congenere_prot nr_seq_congenere_prot,
			a.nr_seq_guia nr_seq_guia,
			a.nr_seq_prestador_prot nr_seq_prestador_prot,
			coalesce(nr_seq_conta_med_w,a.nr_seq_conta) nr_seq_conta_med,
			CASE WHEN coalesce(a.cd_cgc_prest_prot::text, '') = '' THEN 'F'  ELSE 'J' END  cd_cgc_prest_prot,
			a.cd_area_procedimento cd_area_procedimento,
			a.cd_especialidade cd_especialidade,
			a.cd_grupo_proc cd_grupo_proc,
			a.nr_seq_grupo_rec nr_seq_grupo_rec,
			a.cd_procedimento cd_procedimento,
			a.ie_origem_proced ie_origem_proced,
			a.ie_ato_cooperado ie_ato_cooperado,
			a.ie_tipo_despesa ie_tipo_despesa,
			a.nr_seq_conta_princ nr_seq_conta_princ,
			a.nr_seq_segurado nr_seq_segurado,
			a.nr_seq_conta nr_seq_conta,
			a.ie_tipo_protocolo ie_tipo_protocolo,
			a.ie_origem_protocolo ie_origem_protocolo,
			b.dt_atendimento_referencia dt_atendimento_referencia,
			b.ie_cobertura_especial ie_cobertura_especial,
			b.ie_regime_atendimento ie_regime_atendimento,
			b.ie_saude_ocupacional ie_saude_ocupacional
		from	pls_segurado		c,
			pls_conta_pos_cab_v	b,
			pls_conta_proc_v	a
		where	a.nr_seq_conta		= b.nr_sequencia
		and	a.nr_sequencia		= nr_seq_conta_proc_p
		and	b.nr_seq_segurado	= c.nr_sequencia
		and	ie_tipo_lote_p		= 'C'
		
union all

		SELECT	coalesce(b.ie_tipo_segurado,c.ie_tipo_segurado) ie_tipo_segurado,
			b.ie_origem_conta ie_origem_conta,
			b.nr_seq_tipo_atendimento nr_seq_tipo_atendimento,
			b.ie_tipo_guia ie_tipo_guia,
			b.ie_internado ie_internado,
			coalesce(c.nr_seq_ops_congenere,c.nr_seq_congenere) nr_seq_congenere,
			b.ie_tipo_conta ie_tipo_conta,
			b.nr_seq_prestador_exec nr_seq_prestador_exec,
			a.ie_apresentacao ie_apresentacao,
			b.nr_seq_tipo_conta nr_seq_tipo_conta,
			c.nr_seq_plano nr_seq_plano,
			c.ie_pcmso ie_pcmso,
			c.nr_sequencia nr_sequencia,
			a.nr_seq_congenere_prot nr_seq_congenere_prot,
			a.nr_seq_guia nr_seq_guia,
			a.nr_seq_prestador_prot nr_seq_prestador_prot,
			coalesce(nr_seq_conta_med_w,a.nr_seq_conta) nr_seq_conta_med,
			CASE WHEN coalesce(a.cd_cgc_prest_prot::text, '') = '' THEN 'F'  ELSE 'J' END  cd_cgc_prest_prot,
			a.cd_area_procedimento cd_area_procedimento,
			a.cd_especialidade cd_especialidade,
			a.cd_grupo_proc cd_grupo_proc,
			a.nr_seq_grupo_rec nr_seq_grupo_rec,
			a.cd_procedimento cd_procedimento,
			a.ie_origem_proced ie_origem_proced,
			a.ie_ato_cooperado ie_ato_cooperado,
			a.ie_tipo_despesa ie_tipo_despesa,
			a.nr_seq_conta_princ nr_seq_conta_princ,
			a.nr_seq_segurado nr_seq_segurado,
			a.nr_seq_conta nr_seq_conta,
			a.ie_tipo_protocolo ie_tipo_protocolo,
			a.ie_origem_protocolo ie_origem_protocolo,
			b.dt_atendimento dt_atendimento_referencia,
			b.ie_cobertura_especial ie_cobertura_especial,
			b.ie_regime_atendimento ie_regime_atendimento,
			b.ie_saude_ocupacional ie_saude_ocupacional
		from	pls_segurado		c,
			pls_conta_v		b,
			pls_conta_proc_v	a
		where	a.nr_seq_conta		= b.nr_sequencia
		and	a.nr_sequencia		= nr_seq_conta_proc_p
		and	b.nr_seq_segurado	= c.nr_sequencia
		and	ie_tipo_lote_p		= 'A' ) t;
	
	if (ie_tipo_protocolo_w = 'R') or (ie_origem_protocolo_w = 'G') then
		nr_seq_congenere_w := coalesce(nr_seq_congenere_prot_w,nr_seq_congenere_w);
	end if;
	
	
	-- Verificar se o beneficiario e remido -- JTRINDADE - OS 2033146
	ie_tipo_benef_remido_w	:= pls_obter_se_benef_remido( nr_seq_segurado_w, dt_atendimento_referencia_w);
	
	-- Obter dados da conta principal
	if (nr_seq_conta_princ_w IS NOT NULL AND nr_seq_conta_princ_w::text <> '') then
		select	max(ie_tipo_guia),
			coalesce(max(ie_tipo_segurado),ie_tipo_segurado_w)
		into STRICT	ie_tipo_guia_princ_w,
			ie_tipo_segurado_w
		from	pls_conta
		where	nr_sequencia	= nr_seq_conta_princ_w;
	end if;
	
	if (nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '') then

		select	max(nr_seq_prestador)
		into STRICT	nr_seq_prest_solic_w
		from	pls_guia_plano
		where	nr_sequencia = nr_seq_guia_w;
		
		--aaschlote 02/07/2015 OS - 904354
		select	max(c.ie_pcmso)
		into STRICT	ie_pcmso_req_w
		from	pls_requisicao c,
			pls_execucao_req_item a
		where	a.nr_seq_requisicao	= c.nr_sequencia
		and	a.nr_seq_guia		= nr_seq_guia_w;
		
		-- Ira utilizar o pcmso da requisicao se nao foi alterado a carteirinha do segurado na analise, ou seja, o segurado da pos cabecalho e da conta proc esta igual, assim prioriza o pcmso do contrato
		if (ie_pcmso_req_w IS NOT NULL AND ie_pcmso_req_w::text <> '') and (nr_seq_segurado_w = nr_seq_seg_conta_w) then
			ie_pcmso_w	:= ie_pcmso_req_w;
		end if;
		
	end if;

	if (nr_seq_prest_solic_w IS NOT NULL AND nr_seq_prest_solic_w::text <> '') then
	
		select	CASE WHEN coalesce(cd_cgc::text, '') = '' THEN 'F'  ELSE 'J' END
		into STRICT	ie_tipo_pessoa_prest_solic_w
		from	pls_prestador
		where	nr_sequencia = nr_seq_prest_solic_w;	
	end if;
	
	if (nr_seq_conta_resumo_w IS NOT NULL AND nr_seq_conta_resumo_w::text <> '') then

		select	max(ie_ato_cooperado)
		into STRICT	ie_ato_cooperado_pag_w
		from	pls_conta_medica_resumo
		where	nr_sequencia		= nr_seq_conta_resumo_w
		and	nr_seq_conta		= nr_seq_conta_med_w
		and	ie_tipo_item		!= 'I'
		and	ie_situacao		= 'A';
		
	elsif (nr_seq_prestador_pgto_w IS NOT NULL AND nr_seq_prestador_pgto_w::text <> '') then

		select	max(ie_ato_cooperado)
		into STRICT	ie_ato_cooperado_pag_w
		from	pls_conta_medica_resumo
		where	nr_seq_prestador_pgto	= nr_seq_prestador_pgto_w
		and	nr_seq_conta		= nr_seq_conta_med_w
		and	nr_seq_conta_proc	= nr_seq_conta_proc_p
		and	ie_tipo_item		!= 'I'
		and	ie_situacao		= 'A';
	end if;
	
	if (coalesce(ie_ato_cooperado_pag_w::text, '') = '') then
		ie_ato_cooperado_pag_w	:= ie_ato_cooperado_w;
	end if;
	
	--Na Maringa, estava dando problema no refaturamento pois nao tem conta_contab e e nao consegue pegar o ato_cooperado, por isso e feita a validacao abaixo
	if (coalesce(ie_ato_cooperado_w::text, '') = '') then
		select	max(ie_ato_cooperado)
		into STRICT	ie_ato_cooperado_w
		from	pls_conta_medica_resumo
		where	nr_seq_conta_proc	= nr_seq_conta_proc_p
		and	nr_seq_conta		= nr_seq_conta_med_w
		and	ie_tipo_item		!= 'I';	
	end if;
	
	select	max(ie_tipo_congenere)
	into STRICT	ie_tipo_congenere_w
	from	pls_congenere
	where	nr_sequencia = nr_seq_congenere_w;
	
	if (nr_seq_plano_w IS NOT NULL AND nr_seq_plano_w::text <> '') then
		select	coalesce(a.ie_preco,'X'),
			coalesce(a.nr_seq_classificacao,0)
		into STRICT	ie_preco_w,
			nr_seq_classif_sca_w
		from	pls_plano a
		where	a.nr_sequencia = nr_seq_plano_w;
	else
		ie_preco_w		:= 'X';
		nr_seq_classif_sca_w	:= 0;
		nr_seq_plano_w		:= 0;		
	end if;
	
	if (nr_seq_prestador_exec_w IS NOT NULL AND nr_seq_prestador_exec_w::text <> '') then
		
		select	coalesce(a.cd_prestador,0),
			coalesce(a.nr_seq_tipo_prestador,0),
			CASE WHEN coalesce(a.cd_pessoa_fisica::text, '') = '' THEN 'J'  ELSE 'F' END ,
			coalesce(a.cd_pessoa_fisica,0),
			coalesce(a.ie_tipo_relacao,'X'),
			CASE WHEN ie_regra_pag_w='N' THEN nr_seq_classificacao  ELSE nr_seq_classif_prest_w END
		into STRICT	cd_prestador_w,
			nr_seq_tipo_prestador_w,
			ie_tipo_pessoa_w,
			cd_pessoa_prest_w,
			ie_tipo_relacao_w,
			nr_seq_classif_prest_w
		from	pls_prestador	a
		where	a.nr_sequencia	= nr_seq_prestador_exec_w;
	end if;
	
	SELECT * FROM pls_obter_prest_pgto_prof(	nr_seq_prestador_exec_w, cd_pessoa_prest_w, cd_procedimento_w, ie_origem_proced_w, 'Tasy', null, null, nr_seq_prestador_regra_w, nr_seq_regra_prof_w) INTO STRICT nr_seq_prestador_regra_w, nr_seq_regra_prof_w;
	
	-- OS 820363 - wcbernardino - Se nao retornar prestador da regra, tem que utilizar o prestador principal
	if (coalesce(nr_seq_prestador_regra_w::text, '') = '') then

		nr_seq_prestador_regra_w := coalesce(nr_seq_prestador_pgto_w, nr_seq_prestador_exec_w);
	end if;
	
	select	coalesce(max(a.cd_prestador),0),
		coalesce(max(a.nr_seq_tipo_prestador),0),
		CASE WHEN coalesce(max(a.cd_pessoa_fisica)::text, '') = '' THEN 'J'  ELSE 'F' END
	into STRICT	cd_prestador_rec_w,
		nr_seq_tipo_prestador_rec_w,
		ie_tipo_pessoa_rec_w
	from	pls_prestador	a
	where	a.nr_sequencia	= nr_seq_prestador_regra_w;
	
	-- Zerar variaveis do material
	nr_seq_material_w	:= 0;
	nr_seq_estrut_mat_w	:= 0;
	ie_tipo_despesa_w	:= 'X';
	cd_material_w		:= 0;
	nr_seq_grupo_rec_mat_w	:= 0;
	
	if (ie_tipo_congenere_w = 'OP') and (ie_tipo_segurado_w = 'T') then
	
		nr_seq_congenere_w := coalesce(nr_seq_congenere_prot_w, nr_seq_congenere_w);
	end if;
	
	if (nr_seq_congenere_w IS NOT NULL AND nr_seq_congenere_w::text <> '') then

		-- Obter a UF da operadora  - Tasy
		select	coalesce(max(sg_estado),'X')
		into STRICT	sg_estado_w
		from	pessoa_juridica
		where	cd_cgc	= (	SELECT	max(cd_cgc_outorgante)
					from	pls_outorgante
					where	cd_estabelecimento = cd_estabelecimento_w);
		
		-- Obter a UF da operadora do beneficiario eventual ou que enviou o protocolo
		select	coalesce(max(a.sg_estado),'X'),
			coalesce(max(b.ie_nacional),'N')
		into STRICT	sg_estado_int_w,
			ie_nacional_w
		from	pessoa_juridica	a,
			pls_congenere	b
		where	a.cd_cgc	= b.cd_cgc
		and	b.nr_sequencia	= nr_seq_congenere_w;
		
		if (ie_nacional_w = 'S') then

			ie_tipo_intercambio_w	:= 'N';
		
		elsif (sg_estado_w <> 'X') and (sg_estado_int_w <> 'X') then

			if (sg_estado_w	= sg_estado_int_w) then

				ie_tipo_intercambio_w	:= 'E';
			else	
				ie_tipo_intercambio_w	:= 'N';
			end if;
		else
			ie_tipo_intercambio_w	:= 'A';
		end if;
	end if;	
		
	-- Priorizar o ie_tipo_pessoa_prest_ptu_w da PTU_NOTA_COBRANCA
	select	max(b.tp_pessoa)
	into STRICT	ie_tipo_pessoa_prest_ptu_w
	from	ptu_nota_servico	a,
		ptu_nota_cobranca	b,
		pls_conta		c
	where	b.nr_sequencia		= a.nr_seq_nota_cobr
	and	b.nr_sequencia		= c.nr_seq_nota_cobranca
	and	c.nr_sequencia		= nr_seq_conta_princ_w;
		
	-- Caso nao encontre o ie_tipo_pessoa_prest_ptu_w PTU_NOTA_COBRANCA, pega da PTU_NOTA_SERVICO
	if (coalesce(ie_tipo_pessoa_prest_ptu_w::text, '') = '') then
		select	max(a.ie_tipo_pessoa_prestador)
		into STRICT	ie_tipo_pessoa_prest_ptu_w
		from	ptu_nota_servico a
		where	a.nr_seq_conta_proc = nr_seq_conta_proc_p;
	end if;
	
	-- Em alguns casos, as contas de A500 tem itens cancelados e substituidos, ou ainda sao inseridos manualmente.

	-- Nesta situacao, o ie_tipo_pessoa_prest_ptu vem null, e fica com o default 'A' - Ambos. Isto acaba gerando problemas

	-- em algumas regras de evento, onde o mesmo prestador pode faturar para pessoa juridica ou fisica, mas a regra entende

	-- que na inexistencia do ie_tipo_pessoa_prest_ptu, sera considerado o tipo "Ambos", deixando de faturar a guia.

	-- Para evitar essa situacao, na OS 1345324 sera extendida a busca, para o seguinte:

	-- 	1 - Busca diretamente no ptu_nota_servico

	-- 	2 - Se nao achar, tenta buscar atraves do item principal

	--	3 - Se nao achar, tenta buscar o "Tipo pessoa exec" da conta informado no A500

	--	4 - Se nao achar, tenta buscar o Tipo pessoa exec" da conta informado no A500 da conta principal do atendimento

	--	5 - Se nao achar, utiliza o valor padrao atual "A - Ambos"

	
	-- Filtra tambem pela origem da conta, se nao for de A500, nao faz o restante, por motivos de performance
	if (coalesce(ie_tipo_pessoa_prest_ptu_w::text, '') = '') and (ie_origem_conta_w = 'A')then
	
		-- Tenta buscar pelo item principal
		select	max(a.ie_tipo_pessoa_prestador)
		into STRICT	ie_tipo_pessoa_prest_ptu_w
		from	ptu_nota_servico a
		where	a.nr_seq_conta_proc = (	SELECT	max(x.nr_seq_proc_princ)
						from	pls_conta_proc	x
						where	x.nr_sequencia	= nr_seq_conta_proc_p);
		
		-- Se nao achou atraves do item principal, tenta busca a informacao da conta A500,
		if (coalesce(ie_tipo_pessoa_prest_ptu_w::text, '') = '') then
		
			select	max(a.ie_tipo_pessoa_prestador)
			into STRICT	ie_tipo_pessoa_prest_ptu_w
			from	ptu_nota_servico	a,
				ptu_nota_cobranca	b,
				pls_conta		c
			where	b.nr_sequencia		= a.nr_seq_nota_cobr
			and	b.nr_sequencia		= c.nr_seq_nota_cobranca
			and	c.nr_sequencia		= nr_seq_conta_w;
			
		end if;
		
		-- Se nao achou atraves da conta, tenta busca a informacao da conta A500 atraves da conta principal do atendimento se houver, se nao encontrar usa o valor padrao "A - Ambos"
		if (coalesce(ie_tipo_pessoa_prest_ptu_w::text, '') = '') and (nr_seq_conta_princ_w IS NOT NULL AND nr_seq_conta_princ_w::text <> '') then
		
			select	coalesce(max(a.ie_tipo_pessoa_prestador), 'J')
			into STRICT	ie_tipo_pessoa_prest_ptu_w
			from	ptu_nota_servico	a,
				ptu_nota_cobranca	b,
				pls_conta		c
			where	b.nr_sequencia		= a.nr_seq_nota_cobr
			and	b.nr_sequencia		= c.nr_seq_nota_cobranca
			and	c.nr_sequencia		= nr_seq_conta_princ_w;
		end if;
		
		
	end if;
	
	-- Se nao conseguiu levantar o tipo da pessoa do PTU, usa o padrao "[A] - Ambos"
	ie_tipo_pessoa_prest_ptu_w	:= coalesce(ie_tipo_pessoa_prest_ptu_w, 'J');
	
	
	-- Se o item for gerado pela regra de taxa OPME do cadastro de regras,

	-- entao o tipo de pessoa e "J" (juridica)
	if (nr_seq_regra_tx_opme_w IS NOT NULL AND nr_seq_regra_tx_opme_w::text <> '') then
		ie_tipo_pessoa_prest_ptu_w := 'J';
	
	end if;
	
	-- Se a origem da conta for A500, nao tem prestador_pag, entao pega do prestador_ptu
	if (ie_origem_conta_w = 'A') then
		ie_tipo_pessoa_prest_pag_w	:= ie_tipo_pessoa_prest_ptu_w;
	end if;
		
	for r_c01_w in c01 loop

		select	coalesce(max(a.nr_seq_regra), 0)
		into STRICT	nr_seq_regra_event_w
		from	pls_regra_fat_evento	a
		where	a.nr_seq_evento = r_c01_w.nr_seq_evento
		and 	a.nr_seq_regra	= nr_seq_regra_p;
		
		if (nr_seq_regra_p = nr_seq_regra_event_w) then
		
			ie_glosar_cart_w	:= 'S';
		
		-- Regra carteira atendimento 
			if (r_c01_w.nr_seq_regra_atend_cart IS NOT NULL AND r_c01_w.nr_seq_regra_atend_cart::text <> '') then

				ie_glosar_cart_w := pls_consistir_regra_atend_cart(nr_seq_segurado_w, r_c01_w.nr_seq_regra_atend_cart, ie_glosar_cart_w);
			end if;
			
			if (ie_glosar_cart_w = 'S') and (coalesce(r_c01_w.nr_seq_estrut_mat::text, '') = '') then
				nr_seq_evento_w	:= r_c01_w.nr_seq_evento;
			end if;
		end if;
	
	end loop;
	
elsif (nr_seq_conta_mat_p IS NOT NULL AND nr_seq_conta_mat_p::text <> '') then

	-- Dados da conta / beneficiario
	select	coalesce(max(t.ie_tipo_segurado),'X'),
		coalesce(max(t.ie_origem_conta),'X'),
		coalesce(max(t.nr_seq_tipo_atendimento),0),
		coalesce(max(t.ie_tipo_guia),'X'),
		coalesce(substr(max(t.ie_conta_internacao),1,1),'X'),
		max(t.nr_seq_congenere),
		max(t.ie_tipo_conta),
		max(t.nr_seq_prestador_exec),
		coalesce(max(t.ie_apresentacao),'X'),
		coalesce(max(t.nr_seq_tipo_conta),0),
		max(t.nr_seq_plano),
		coalesce(max(t.ie_pcmso),'N'),
		max(t.nr_sequencia),
		max(t.nr_seq_congenere),
		max(t.nr_seq_guia),
		max(t.nr_seq_prestador),
		max(t.nr_seq_conta_princ) nr_seq_conta_princ,
		max(t.nr_seq_segurado),
		max(t.nr_seq_conta_med),
		max(t.ie_tipo_protocolo),
		max(t.ie_origem_protocolo),
		max(t.dt_atendimento_referencia),
		max(t.ie_cobertura_especial),
		max(t.ie_regime_atendimento),
		max(t.ie_saude_ocupacional)
	into STRICT	ie_tipo_segurado_w,
		ie_origem_conta_w,
		nr_seq_tipo_atendimento_w,
		ie_tipo_guia_w,
		ie_conta_internacao_w,
		nr_seq_congenere_w,
		ie_tipo_conta_w,
		nr_seq_prestador_exec_w,
		ie_apresentacao_prot_w,
		nr_seq_tipo_conta_w,
		nr_seq_plano_w,
		ie_pcmso_w,
		nr_seq_segurado_w,
		nr_seq_congenere_prot_w,
		nr_seq_guia_w,
		nr_seq_prest_atend_w,
		nr_seq_conta_princ_w,
		nr_seq_seg_conta_w,
		nr_seq_conta_med_w,
		ie_tipo_protocolo_w,
		ie_origem_protocolo_w,
		dt_atendimento_referencia_w,
		ie_cobertura_especial_w,
		ie_regime_atendimento_w,
		ie_saude_ocupacional_w
	from(	SELECT	coalesce(coalesce(b.ie_tipo_segurado_cta,c.ie_tipo_segurado),'X') ie_tipo_segurado,
			coalesce(b.ie_origem_conta,'X') ie_origem_conta,
			coalesce(b.nr_seq_tipo_atendimento,0) nr_seq_tipo_atendimento,
			coalesce(b.ie_tipo_guia,'X') ie_tipo_guia,
			coalesce(substr(pls_obter_se_internado(b.nr_sequencia,'X'),1,1),'X') ie_conta_internacao,
			coalesce(c.nr_seq_ops_congenere,c.nr_seq_congenere) nr_seq_congenere,
			b.ie_tipo_conta ie_tipo_conta,
			b.nr_seq_prestador_exec nr_seq_prestador_exec,
			coalesce(d.ie_apresentacao,'X') ie_apresentacao,
			coalesce(b.nr_seq_tipo_conta,0) nr_seq_tipo_conta,
			c.nr_seq_plano nr_seq_plano,
			coalesce(c.ie_pcmso,'N') ie_pcmso,
			c.nr_sequencia nr_sequencia,
			d.nr_seq_congenere nr_seq_congenere_prot,
			b.nr_seq_guia nr_seq_guia,
			d.nr_seq_prestador nr_seq_prestador,
			(select max(x.nr_seq_conta_princ) from pls_conta x where x.nr_sequencia = a.nr_seq_conta) nr_seq_conta_princ,
			a.nr_seq_segurado nr_seq_segurado,
			coalesce(nr_seq_conta_med_w,a.nr_seq_conta) nr_seq_conta_med,
			d.ie_tipo_protocolo ie_tipo_protocolo,
			d.ie_origem_protocolo ie_origem_protocolo,
			b.dt_atendimento_referencia dt_atendimento_referencia,
			b.ie_cobertura_especial ie_cobertura_especial,
			b.ie_regime_atendimento ie_regime_atendimento,
			b.ie_saude_ocupacional ie_saude_ocupacional
		from	pls_protocolo_conta	d,
			pls_segurado		c,
			pls_conta_pos_cab_v	b,
			pls_conta_mat_v		a
		where	a.nr_seq_conta		= b.nr_sequencia
		and	b.nr_seq_segurado	= c.nr_sequencia
		and	d.nr_sequencia		= b.nr_seq_protocolo
		and	a.nr_sequencia		= nr_seq_conta_mat_p
		and	ie_tipo_lote_p		= 'C'
		
union all

		SELECT	coalesce(coalesce(b.ie_tipo_segurado,c.ie_tipo_segurado),'X') ie_tipo_segurado,
			coalesce(b.ie_origem_conta,'X') ie_origem_conta,
			coalesce(b.nr_seq_tipo_atendimento,0) nr_seq_tipo_atendimento,
			coalesce(b.ie_tipo_guia,'X') ie_tipo_guia,
			coalesce(substr(pls_obter_se_internado(b.nr_sequencia,'X'),1,1),'X') ie_conta_internacao,
			coalesce(c.nr_seq_ops_congenere,c.nr_seq_congenere) nr_seq_congenere,
			b.ie_tipo_conta ie_tipo_conta,
			b.nr_seq_prestador_exec nr_seq_prestador_exec,
			coalesce(d.ie_apresentacao,'X') ie_apresentacao,
			coalesce(b.nr_seq_tipo_conta,0) nr_seq_tipo_conta,
			c.nr_seq_plano nr_seq_plano,
			coalesce(c.ie_pcmso,'N') ie_pcmso,
			c.nr_sequencia nr_sequencia,
			d.nr_seq_congenere nr_seq_congenere_prot,
			b.nr_seq_guia nr_seq_guia,
			d.nr_seq_prestador nr_seq_prestador,
			(select max(x.nr_seq_conta_princ) from pls_conta x where x.nr_sequencia = a.nr_seq_conta) nr_seq_conta_princ,
			a.nr_seq_segurado nr_seq_segurado,
			coalesce(nr_seq_conta_med_w,a.nr_seq_conta) nr_seq_conta_med,
			d.ie_tipo_protocolo ie_tipo_protocolo,
			d.ie_origem_protocolo ie_origem_protocolo,
			b.dt_atendimento dt_atendimento_referencia,
			b.ie_cobertura_especial ie_cobertura_especial,
			b.ie_regime_atendimento ie_regime_atendimento,
			b.ie_saude_ocupacional ie_saude_ocupacional
		from	pls_protocolo_conta	d,
			pls_segurado		c,
			pls_conta_v		b,
			pls_conta_mat_v		a
		where	a.nr_seq_conta		= b.nr_sequencia
		and	b.nr_seq_segurado	= c.nr_sequencia
		and	d.nr_sequencia		= b.nr_seq_protocolo
		and	a.nr_sequencia		= nr_seq_conta_mat_p
		and	ie_tipo_lote_p		= 'A') t;
	
	select	max(ie_ato_cooperado)
	into STRICT	ie_ato_cooperado_w
	from	pls_conta_mat
	where	nr_sequencia = nr_seq_conta_mat_p;
	
	if (ie_tipo_protocolo_w = 'R') or (ie_origem_protocolo_w = 'G') then
		nr_seq_congenere_w := coalesce(nr_seq_congenere_prot_w,nr_seq_congenere_w);
	end if;
	
	-- Verificar se o beneficiario e remido -- JTRINDADE - OS 2033146
	ie_tipo_benef_remido_w	:= pls_obter_se_benef_remido( nr_seq_segurado_w, dt_atendimento_referencia_w);
	
	-- Obter dados da conta principal
	if (nr_seq_conta_princ_w IS NOT NULL AND nr_seq_conta_princ_w::text <> '') then
		select	max(ie_tipo_guia),
			coalesce(max(ie_tipo_segurado),ie_tipo_segurado_w)
		into STRICT	ie_tipo_guia_princ_w,
			ie_tipo_segurado_w
		from	pls_conta
		where	nr_sequencia	= nr_seq_conta_princ_w;
	end if;
	
	if (nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '') then
	
		select	max(nr_seq_prestador)
		into STRICT	nr_seq_prest_solic_w
		from	pls_guia_plano
		where	nr_sequencia	= nr_seq_guia_w;
		
		--aaschlote 02/07/2015 OS - 904354
		select	max(c.ie_pcmso)
		into STRICT	ie_pcmso_req_w
		from	pls_requisicao c,
			pls_execucao_req_item a
		where	a.nr_seq_requisicao	= c.nr_sequencia
		and	a.nr_seq_guia		= nr_seq_guia_w;
		
		-- Ira utilizar o pcmso da requisicao se nao foi alterado a carteirinha do segurado na analise, ou seja, o segurado da pos cabecalho e da conta mat esta igual, assim prioriza o pcmso do contrato
		if (ie_pcmso_req_w IS NOT NULL AND ie_pcmso_req_w::text <> '') and (nr_seq_segurado_w = nr_seq_seg_conta_w) then
			ie_pcmso_w := ie_pcmso_req_w;
		end if;
	end if;
	
	if (nr_seq_prest_atend_w IS NOT NULL AND nr_seq_prest_atend_w::text <> '') then

		select	CASE WHEN coalesce(cd_cgc::text, '') = '' THEN 'F'  ELSE 'J' END
		into STRICT	ie_tipo_pessoa_prest_atend_w
		from	pls_prestador
		where	nr_sequencia	= nr_seq_prest_atend_w;	
	end if;
	
	if (nr_seq_prest_solic_w IS NOT NULL AND nr_seq_prest_solic_w::text <> '') then

		select	CASE WHEN coalesce(cd_cgc::text, '') = '' THEN 'F'  ELSE 'J' END
		into STRICT	ie_tipo_pessoa_prest_solic_w
		from	pls_prestador
		where	nr_sequencia	= nr_seq_prest_solic_w;	
	end if;
	
	if (nr_seq_conta_resumo_w IS NOT NULL AND nr_seq_conta_resumo_w::text <> '') then

		select	max(ie_ato_cooperado)
		into STRICT	ie_ato_cooperado_pag_w
		from	pls_conta_medica_resumo
		where	nr_sequencia = nr_seq_conta_resumo_w
		and	nr_seq_conta = nr_seq_conta_med_w;
		
	elsif (nr_seq_prestador_pgto_w IS NOT NULL AND nr_seq_prestador_pgto_w::text <> '') then
	
		select	max(ie_ato_cooperado)
		into STRICT	ie_ato_cooperado_pag_w
		from	pls_conta_medica_resumo
		where	nr_seq_prestador_pgto	= nr_seq_prestador_pgto_w
		and	nr_seq_conta		= nr_seq_conta_med_w
		and	nr_seq_conta_proc	= nr_seq_conta_mat_p
		and	ie_tipo_item		!= 'I'
		and	ie_situacao		= 'A';
	end if;
	
	if (coalesce(ie_ato_cooperado_pag_w::text, '') = '') then
	
		select	max(ie_ato_cooperado)
		into STRICT	ie_ato_cooperado_pag_w
		from	pls_conta_mat
		where	nr_sequencia	= nr_seq_conta_mat_p;
	end if;
	
	if (coalesce(ie_ato_cooperado_pag_w::text, '') = '') then
		ie_ato_cooperado_pag_w	:= ie_ato_cooperado_w;
	end if;
	
	--Na Maringa, estava dando problema no refaturamento pois nao tem conta_contab e e nao consegue pegar o ato_cooperado, por isso e feita a validacao abaixo
	if (coalesce(ie_ato_cooperado_w::text, '') = '') then
		select	max(ie_ato_cooperado)
		into STRICT	ie_ato_cooperado_w
		from	pls_conta_medica_resumo
		where	nr_seq_conta_mat	= nr_seq_conta_mat_p
		and	nr_seq_conta		= nr_seq_conta_med_w
		and	ie_tipo_item		!= 'I';	
	end if;
	
	select	max(ie_tipo_congenere)
	into STRICT	ie_tipo_congenere_w
	from	pls_congenere
	where	nr_sequencia = nr_seq_congenere_w;
	
	if (nr_seq_plano_w IS NOT NULL AND nr_seq_plano_w::text <> '') then
	
		select	coalesce(a.ie_preco,'X'),
			coalesce(a.nr_seq_classificacao,0)
		into STRICT	ie_preco_w,
			nr_seq_classif_sca_w
		from	pls_plano a
		where	a.nr_sequencia = nr_seq_plano_w;
	else
		ie_preco_w		:= 'X';
		nr_seq_classif_sca_w	:= 0;
		nr_seq_plano_w		:= 0;
	end if;
	
	if (nr_seq_prestador_exec_w IS NOT NULL AND nr_seq_prestador_exec_w::text <> '') then

		select	coalesce(a.cd_prestador,0),
			coalesce(a.nr_seq_tipo_prestador,0),
			CASE WHEN coalesce(a.cd_pessoa_fisica::text, '') = '' THEN 'J'  ELSE 'F' END ,
			coalesce(a.ie_tipo_relacao,'X'),
			CASE WHEN ie_regra_pag_w='N' THEN a.nr_seq_classificacao  ELSE nr_seq_classif_prest_w END
		into STRICT	cd_prestador_w,
			nr_seq_tipo_prestador_w,
			ie_tipo_pessoa_w,
			ie_tipo_relacao_w,
			nr_seq_classif_prest_w
		from	pls_prestador	a
		where	a.nr_sequencia	= nr_seq_prestador_exec_w;
	end if;
	
	select	coalesce(max(b.nr_sequencia),0),
		coalesce(max(b.nr_seq_estrut_mat),0),
		coalesce(max(b.ie_tipo_despesa),'X'),
		coalesce(max(b.cd_material),0)
	into STRICT	nr_seq_material_w,
		nr_seq_estrut_mat_w,
		ie_tipo_despesa_w,
		cd_material_w
	from	pls_material	b,
		pls_conta_mat	a
	where	a.nr_seq_material = b.nr_sequencia
	and	a.nr_sequencia = nr_seq_conta_mat_p;
	
	if (cd_material_w IS NOT NULL AND cd_material_w::text <> '') then

		select	coalesce(max(a.nr_seq_grupo_rec),0)
		into STRICT	nr_seq_grupo_rec_mat_w
		from	material	a
		where	a.cd_material	= cd_material_w;
	end if;
	
	-- Variaveis procedimento, zerar
	cd_procedimento_w	:= 0;
	ie_origem_proced_w	:= 0;
	nr_seq_grupo_rec_proc_w	:= 0;
	cd_area_procedimento_w	:= 0;
	cd_especialidade_w	:= 0;
	cd_grupo_proc_w		:= 0;
	ie_tipo_desp_proc_w	:= 'X';	
	
	if (ie_tipo_congenere_w = 'OP') and (ie_tipo_segurado_w = 'T') then
	
		nr_seq_congenere_w := coalesce(nr_seq_congenere_prot_w, nr_seq_congenere_w);
	end if;
	
	if (nr_seq_congenere_w IS NOT NULL AND nr_seq_congenere_w::text <> '') then
	
		-- Obter a UF da operadora  - Tasy
		select	coalesce(max(sg_estado),'X')
		into STRICT	sg_estado_w
		from	pessoa_juridica
		where	cd_cgc	=(	SELECT	max(cd_cgc_outorgante)
					from	pls_outorgante
					where	cd_estabelecimento = cd_estabelecimento_w);
		
		-- Obter a UF da operadora do beneficiario eventual ou que enviou o protocolo
		select	coalesce(max(a.sg_estado),'X'),
			coalesce(max(b.ie_nacional),'N')
		into STRICT	sg_estado_int_w,
			ie_nacional_w
		from	pessoa_juridica	a,
			pls_congenere	b
		where	a.cd_cgc	= b.cd_cgc
		and	b.nr_sequencia	= nr_seq_congenere_w;
		
		if (ie_nacional_w = 'S') then
		
			ie_tipo_intercambio_w	:= 'N';
		
		elsif (sg_estado_w <> 'X') and (sg_estado_int_w <> 'X') then
			
			if (sg_estado_w	= sg_estado_int_w) then
			
				ie_tipo_intercambio_w	:= 'E';
			else	
				ie_tipo_intercambio_w	:= 'N';
			end if;
		else
			ie_tipo_intercambio_w	:= 'A';
		end if;
	end if;
	
	-- Priorizar o ie_tipo_pessoa_prest_ptu_w da PTU_NOTA_COBRANCA
	select	max(b.tp_pessoa)
	into STRICT	ie_tipo_pessoa_prest_ptu_w
	from	ptu_nota_servico	a,
		ptu_nota_cobranca	b,
		pls_conta		c
	where	b.nr_sequencia		= a.nr_seq_nota_cobr
	and	b.nr_sequencia		= c.nr_seq_nota_cobranca
	and	c.nr_sequencia		= nr_seq_conta_princ_w;
	
	-- Caso nao encontre o ie_tipo_pessoa_prest_ptu_w PTU_NOTA_COBRANCA, pega da PTU_NOTA_SERVICO
	if (coalesce(ie_tipo_pessoa_prest_ptu_w::text, '') = '') then
		select	coalesce(max(a.ie_tipo_pessoa_prestador), 'J')
		into STRICT	ie_tipo_pessoa_prest_ptu_w
		from	ptu_nota_servico a
		where	a.nr_seq_conta_mat = nr_seq_conta_mat_p;
	end if;
	
	-- Se o item for gerado pela regra de taxa OPME do cadastro de regras,

	-- entao o tipo de pessoa e "J" (juridica)
	if (nr_seq_regra_tx_opme_w IS NOT NULL AND nr_seq_regra_tx_opme_w::text <> '') then
		ie_tipo_pessoa_prest_ptu_w := 'J';
	end if;
	
	-- Se a origem da conta for A500, nao tem prestador_pag, entao pega do prestador_ptu
	if (ie_origem_conta_w = 'A') then
		ie_tipo_pessoa_prest_pag_w	:= ie_tipo_pessoa_prest_ptu_w;
	end if;
	
	for r_c01_w in c01 loop
	
		select	coalesce(max(a.nr_seq_regra), 0)
		into STRICT	nr_seq_regra_event_w
		from	pls_regra_fat_evento	a
		where	a.nr_seq_evento = r_c01_w.nr_seq_evento
		and 	a.nr_seq_regra	= nr_seq_regra_p;
		
		
		if (nr_seq_regra_p = nr_seq_regra_event_w) then
		
			ie_estrut_mat_w		:= 'S';
			ie_glosar_cart_w 	:= 'S';
			
			-- verifica a estrutura do material
			if (r_c01_w.nr_seq_estrut_mat IS NOT NULL AND r_c01_w.nr_seq_estrut_mat::text <> '') then

				-- retorna S se for da estrutura ou N caso nao seja
				ie_estrut_mat_w	:= pls_obter_se_mat_estrutura(nr_seq_material_w, r_c01_w.nr_seq_estrut_mat);
			end if;
			
			-- Regra carteira atendimento
			if (r_c01_w.nr_seq_regra_atend_cart IS NOT NULL AND r_c01_w.nr_seq_regra_atend_cart::text <> '') then

				ie_glosar_cart_w := pls_consistir_regra_atend_cart(nr_seq_segurado_w, r_c01_w.nr_seq_regra_atend_cart, ie_glosar_cart_w);
			end if;
			
			if (ie_estrut_mat_w = 'S') and (ie_glosar_cart_w = 'S') then

				nr_seq_evento_w	:= r_c01_w.nr_seq_evento;
			end if;
		end if;		
	end loop;
-- Ressarcimento ao SUS
elsif (nr_seq_conta_sus_p IS NOT NULL AND nr_seq_conta_sus_p::text <> '') then

	ie_tipo_protocolo_w	:= 'S';
	ie_tipo_benef_remido_w	:= 'S';
	
	for r_c01_w in c01 loop
	
		select	coalesce(max(a.nr_seq_regra), 0)
		into STRICT	nr_seq_regra_event_w
		from	pls_regra_fat_evento	a
		where	a.nr_seq_evento = r_c01_w.nr_seq_evento
		and 	a.nr_seq_regra	= nr_seq_regra_p;
		
		
		if (nr_seq_regra_p = nr_seq_regra_event_w) then
			nr_seq_evento_w	:= r_c01_w.nr_seq_evento;
		end if;
	end loop;
end if;

-- Apenas retorno, sem commit
nr_seq_evento_p := nr_seq_evento_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_obter_evento_faturamento ( nr_seq_conta_proc_p pls_conta_proc.nr_sequencia%type, nr_seq_conta_mat_p pls_conta_mat.nr_sequencia%type, dt_referencia_p pls_conta.dt_atualizacao%type, nr_seq_evento_p INOUT pls_evento_faturamento.nr_sequencia%type, nr_seq_regra_p pls_regra_faturamento.nr_sequencia%type, nr_seq_pos_contabil_p pls_conta_pos_estab_contab.nr_sequencia%type, nr_seq_conta_pos_estab_p pls_conta_pos_estabelecido.nr_sequencia%type default null, nr_seq_conta_sus_p pls_processo_conta.nr_sequencia%type default null, ie_tipo_lote_p pls_lote_faturamento.ie_tipo_lote%type default 'C') FROM PUBLIC;

