-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consistir_periodo_solic_pront ( nr_atendimento_p bigint, dt_inicio_solic_p timestamp, dt_final_solic_p timestamp, nr_sequencia_p bigint default 0) AS $body$
DECLARE


dt_entrada_w		timestamp;
dt_saida_real_w		timestamp;

nr_sequencia_w		bigint;
nr_seq_lote_w		bigint;
dt_periodo_inicial_w	timestamp;
dt_periodo_final_w	timestamp;

nr_dias_w		integer;

ds_mensagem_w		varchar(255);
ie_tem_prontuario_w	boolean;
ie_achou_w		boolean;

c01 CURSOR FOR /* Verificar se está solicitado */
	SELECT	nr_sequencia,
		nr_seq_lote,
		dt_periodo_inicial,
		dt_periodo_final
	from	same_solic_pront
	where	nr_atendimento		= nr_atendimento_p
	and	ie_status		= 'P';

c02 CURSOR FOR /* Verificar se está entregue */
	SELECT	nr_sequencia,
		nr_seq_lote,
		dt_periodo_inicial,
		dt_periodo_final
	from	same_solic_pront
	where	nr_atendimento		= nr_atendimento_p
	and	ie_status		in ('E','R');

c03 CURSOR FOR /* Pegar todos os prontuários cadastrados do paciente */
	SELECT	dt_periodo_inicial,
		coalesce(dt_periodo_final,clock_timestamp())
	from	same_prontuario
	where	nr_atendimento		= nr_atendimento_p
	and	ie_status 		not in ('2','5','6','10')
	order by
		dt_periodo_inicial,
		coalesce(dt_periodo_final,clock_timestamp());
BEGIN

if (dt_final_solic_p < dt_inicio_solic_p) then
	/*'A data final é menor que a data inicial.*/

	CALL Wheb_mensagem_pck.exibir_mensagem_abort(196818);
end if;

ie_tem_prontuario_w	:= false;
ie_achou_w		:= false;

open c03;
	loop
	fetch c03 into
		dt_periodo_inicial_w,
		dt_periodo_final_w;
	EXIT WHEN NOT FOUND; /* apply on c03 */
		begin

		if	(dt_inicio_solic_p >= dt_periodo_inicial_w AND dt_final_solic_p <= dt_periodo_final_w) then
			ie_achou_w	:= true;
		end if;

		ie_tem_prontuario_w	:= true;

		end;
	end loop;
close c03;

if (ie_achou_w = false) then
	/*'Não é possível realizar esta solicitação pois o período informado está fora do período do atendimento. Verifique o cadastro do prontuário.#@#@'*/

	CALL Wheb_mensagem_pck.exibir_mensagem_abort(196819);
end if;

if (ie_tem_prontuario_w = false) then
	/*'Não foi encontrado nenhum prontuário cadastrado para este atendimento.#@#@'*/

	CALL Wheb_mensagem_pck.exibir_mensagem_abort(196820);
end if;

nr_dias_w	:= obter_dias_entre_datas(dt_inicio_solic_p, dt_final_solic_p);

if (nr_dias_w = 0) then
	nr_dias_w	:= 1;
end if;

/* Verifica se tem alguma solicitação no período informado */

open c01;
	loop
	fetch c01 into
		nr_sequencia_w,
		nr_seq_lote_w,
		dt_periodo_inicial_w,
		dt_periodo_final_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin

		for i in 0..nr_dias_w-1 loop
			begin

			if	(((dt_inicio_solic_p+i) between dt_periodo_inicial_w and dt_periodo_final_w) and
				 ((nr_sequencia_p <> nr_sequencia_w) and nr_sequencia_p > 0))then
				ds_mensagem_w	:= ds_mensagem_w || wheb_mensagem_pck.get_texto(800324) || ' ' || wheb_mensagem_pck.get_texto(800325) || ' ' || nr_sequencia_w;
				if (nr_seq_lote_w > 0) then
					ds_mensagem_w	:= ds_mensagem_w || ' - ' || wheb_mensagem_pck.get_texto(800326) || ' ' || nr_seq_lote_w;
				end if;
				ds_mensagem_w	:= ds_mensagem_w || '#@#@';
				/*'Já há solicitação para este prontuário neste período. Solicitação: '||nr_sequencia_w ' - Lote: '||nr_seq_lote_w*/

				CALL Wheb_mensagem_pck.exibir_mensagem_abort(196821,'MSG=' || ds_mensagem_w);
			end if;
			end;
		end loop;

		end;
	end loop;
close c01;

/* Verifica se tem alguma solicitação entregue */

open c02;
	loop
	fetch c02 into
		nr_sequencia_w,
		nr_seq_lote_w,
		dt_periodo_inicial_w,
		dt_periodo_final_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin

		for i in 0..nr_dias_w-1 loop
			begin
			if	((dt_inicio_solic_p+i) between dt_periodo_inicial_w and dt_periodo_final_w) then
				ds_mensagem_w	:= ds_mensagem_w || wheb_mensagem_pck.get_texto(800327) || ' ' || wheb_mensagem_pck.get_texto(800325) || ' ' || nr_sequencia_w;
				if (nr_seq_lote_w > 0) then
					ds_mensagem_w	:= ds_mensagem_w || ' - ' || wheb_mensagem_pck.get_texto(800326) || ' ' || nr_seq_lote_w;
				end if;
				ds_mensagem_w	:= ds_mensagem_w || '#@#@';
				/*'Este período de prontuário já está emprestado. Solicitação: '||nr_sequencia_w' - Lote: '||nr_seq_lote_w*/

				CALL Wheb_mensagem_pck.exibir_mensagem_abort(196822,'MSG2=' || ds_mensagem_w);
			end if;
			end;
		end loop;

		end;
	end loop;
close c02;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consistir_periodo_solic_pront ( nr_atendimento_p bigint, dt_inicio_solic_p timestamp, dt_final_solic_p timestamp, nr_sequencia_p bigint default 0) FROM PUBLIC;

