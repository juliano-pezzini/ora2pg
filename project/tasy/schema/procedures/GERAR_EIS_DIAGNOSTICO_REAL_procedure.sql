-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_eis_diagnostico_real (dt_parametro_p timestamp, nm_usuario_p text) AS $body$
DECLARE

 
				   
nr_atendimento_w		bigint;
cd_estabelecimento_w		smallint;
cd_medico_w			varchar(10);
cd_procedencia_w		integer;
ie_clinica_w			integer;
cd_convenio_w			integer;
qt_obito_w			integer	:= 0;
ie_diagnostico_w		varchar(01);
cd_doenca_w			varchar(10);
cd_categoria_cid_w		varchar(10);
ie_tipo_atendimento_w		smallint;
dt_diagnostico_w		timestamp;
cd_setor_atendimento_w		integer;
ie_tipo_diagnostico_w		bigint;					
nm_usuario_w				varchar(30);
ie_profissional_w			varchar(255);
nr_sequencia_w				bigint;

				   
C01 CURSOR FOR 
	SELECT 	a.nr_atendimento, 
		a.cd_estabelecimento, 
		a.cd_procedencia, 
		a.ie_clinica, 
		a.ie_tipo_atendimento, 
		CASE WHEN obter_se_motivo_alta_obito(a.cd_motivo_alta)='S' THEN 1  ELSE 0 END  qt_obito, 
		obter_convenio_atendimento(a.nr_atendimento) cd_convenio, 
		obter_setor_atendimento(a.nr_atendimento) cd_setor_atendimento, 
		c.cd_doenca, 
		d.cd_categoria_cid, 
		coalesce(c.ie_classificacao_doenca,'N') ie_diagnostico, 
		trunc(c.dt_diagnostico), 
		c.ie_tipo_diagnostico, 
		c.cd_medico, 
		c.nm_usuario 
	from	cid_doenca d, 
		diagnostico_doenca c, 
		atendimento_paciente a 
	where 	a.nr_atendimento = c.nr_atendimento 
	and	c.cd_doenca = d.cd_doenca_cid 
	and	trunc(c.dt_diagnostico) between trunc(dt_parametro_p, 'month') and fim_mes(dt_parametro_p);

				   

BEGIN 
 
delete from eis_diagnostico_realizado 
where trunc(dt_referencia,'mm') 	= trunc(dt_parametro_p,'mm');
nr_sequencia_w := Gravar_Log_Indicador(742, obter_desc_expressao(559808), clock_timestamp(), trunc(dt_parametro_p, 'month'), nm_usuario_p, nr_sequencia_w);
open C01;
loop 
fetch C01 into	 
	nr_atendimento_w, 
	cd_estabelecimento_w, 
	cd_procedencia_w, 
	ie_clinica_w, 
	ie_tipo_atendimento_w, 
	qt_obito_w, 
	cd_convenio_w, 
	cd_setor_atendimento_w, 
	cd_doenca_w, 
	cd_categoria_cid_w, 
	ie_diagnostico_w, 
	dt_diagnostico_w, 
	ie_tipo_diagnostico_w, 
	cd_medico_w, 
	nm_usuario_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	 
	 
	select	max(ie_profissional) 
	into STRICT	ie_profissional_w 
	from	usuario 
	where	nm_usuario	= nm_usuario_w;
	 
	insert into eis_diagnostico_realizado(	nr_atendimento, 
						cd_estabelecimento, 
						cd_procedencia, 
						ie_clinica, 
						ie_tipo_atendimento, 
						qt_obito, 
						cd_convenio, 
						cd_setor_atendimento, 
						cd_doenca, 
						cd_categoria_doenca, 
						ie_diagnostico, 
						dt_referencia, 
						ie_tipo_diagnostico, 
						cd_medico, 
						dt_atualizacao, 
						nm_usuario, 
						qt_ocorrencia, 
						ie_profissional) 
				values (	nr_atendimento_w, 
						cd_estabelecimento_w, 
						cd_procedencia_w, 
						ie_clinica_w, 
						ie_tipo_atendimento_w, 
						qt_obito_w, 
						cd_convenio_w, 
						cd_setor_atendimento_w, 
						cd_doenca_w, 
						cd_categoria_cid_w, 
						ie_diagnostico_w, 
						dt_diagnostico_w, 
						ie_tipo_diagnostico_w, 
						cd_medico_w, 
						clock_timestamp(), 
						nm_usuario_p, 
						1, 
						ie_profissional_w);
	end;
end loop;
close C01;
 
CALL Atualizar_Log_Indicador(clock_timestamp(), nr_sequencia_w);
 
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_eis_diagnostico_real (dt_parametro_p timestamp, nm_usuario_p text) FROM PUBLIC;

