-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_guia_lesoes_nom ( dt_inicio_p timestamp, dt_final_p timestamp, nm_usuario_p text) AS $body$
DECLARE


	qt_linha_w    bigint;

C01 CURSOR FOR
	SELECT
		pj.cd_internacional clues,
		b.nr_atendimento folio,
		--DADOS PACIENTE--
		coalesce(substr(upper(a.cd_curp),1,18), 'XXXX999999XXXXXX99') curppaciente,
		substr(upper(y.ds_given_name),1,50) nombre,
		coalesce(substr(upper(y.ds_family_name),1,50), 'XX') primerapellido,
		coalesce(substr(upper(y.ds_component_name_1),1,50), 'XX') segundoapellido,
		to_char(a.dt_nascimento, 'dd/mm/yyyy') fechanacimiento,
		CASE WHEN i.ie_brasileiro='N' THEN  0  WHEN i.ie_brasileiro='S' THEN  1 END  nacioextranjero,
		CASE WHEN i.ie_brasileiro='S' THEN  i.cd_externo  ELSE '142 – MÉXICO' END  paisorigen,
		CASE WHEN i.ie_brasileiro='S' THEN  97  ELSE obter_dados_cat_entidade(a.cd_pessoa_fisica, 'CD_ENTIDADE') END  entidadnacimiento,
		case
			when obter_idade(a.dt_nascimento, clock_timestamp(), 'A') > 5
			then CASE WHEN a.ie_grau_instrucao=7 THEN  1 WHEN a.ie_grau_instrucao=8 THEN  3 WHEN a.ie_grau_instrucao=3 THEN  4 WHEN a.ie_grau_instrucao=9 THEN  5 WHEN a.ie_grau_instrucao=4 THEN  6  ELSE 13 END
		end as escolaridad,
		case
			when obter_idade(a.dt_nascimento, clock_timestamp(), 'A') > 5
			then CASE WHEN a.ie_grau_instrucao=11 THEN 0 WHEN a.ie_grau_instrucao=14 THEN  9  ELSE 1 END 
			when a.ie_grau_instrucao in (7,8,3,9,4)
			then 1
		end as sabeleerescribir,
		case
			when (obter_idade(a.dt_nascimento, b.dt_entrada, 'A') IS NOT NULL AND (obter_idade(a.dt_nascimento, b.dt_entrada, 'A'))::text <> '')
			then obter_idade_imc_nom(b.nr_atendimento,a.dt_nascimento,b.dt_entrada,'IDADE')
			ELSE 999
		end as edad,
		case
			when (obter_idade(a.dt_nascimento, b.dt_entrada, 'A') IS NOT NULL AND (obter_idade(a.dt_nascimento, b.dt_entrada, 'A'))::text <> '')
			then obter_idade_imc_nom(b.nr_atendimento,a.dt_nascimento,b.dt_entrada,'CLAVEEDAD')
			ELSE 9
		end as claveedad,
		CASE WHEN a.ie_sexo='F' THEN  2 WHEN a.ie_sexo='M' THEN  1  ELSE 9 END  sexo,
		k.cd_der_lesiones afiliacion,
		case
			when k.cd_der_lesiones = 12
			then CASE WHEN n.ie_classif_contabil='3' THEN  1  ELSE 0 END 
		end as gratuidad,
		case
			when n.ie_classif_contabil = 3 and k.cd_der_lesiones <> 0 and k.cd_der_lesiones <> 98
			then substr(n.cd_integracao,1,16)
		end as numeroafiliacion,
		CASE WHEN k.cd_der_lesiones=11 THEN  n.nr_prim_digitos  ELSE 0 END  digitoverificador,
		CASE WHEN a.nr_seq_cor_pele=201 THEN  1  ELSE 0 END  seconsideraindigena,
		CASE WHEN coalesce(a.nr_seq_lingua_indigena::text, '') = '' THEN  0  ELSE 1 END  hablalenguaindigena,
		CASE WHEN a.nr_seq_cor_pele=201 THEN  coalesce(a.nr_seq_lingua_indigena, '-1')  ELSE '-1' END  cuallengua,
		coalesce(b.ie_paciente_gravida, '-1') mujerfertil,
		coalesce(e.ie_deficiencia, '-1') discapacidad,
		--EVENTO--
		to_char(c.dt_notificacao, 'dd/mm/yyyy') fechaevento,
		to_char(c.dt_notificacao, 'hh:mm') horaevento,
		c.ie_dia_festivo diafestivo,
		CASE WHEN d.ds_local_ocorrencia=3 THEN 2 WHEN d.ds_local_ocorrencia=4 THEN 3 WHEN d.ds_local_ocorrencia=6 THEN 4 WHEN d.ds_local_ocorrencia=7 THEN 5 WHEN d.ds_local_ocorrencia=9 THEN 6 WHEN d.ds_local_ocorrencia=5 THEN 8 WHEN d.ds_local_ocorrencia=10 THEN 9 WHEN d.ds_local_ocorrencia=11 THEN 10  ELSE 12 END  sitioocurrencia,
		coalesce(d.nr_seq_entidade, 99) entidadocurrencia,
		coalesce(d.nr_seq_municipio, 999) municipioocurrencia,
		coalesce(d.nr_seq_localidade, 9999) localidadocurrencia,
		case
			when coalesce(d.nr_seq_localidade, 9999) = 9999
			then substr(upper(d.ds_complemento),1,50)
		end asotralocalidad,
		d.nr_seq_cod_postal codigopostal,
		d.ie_possue_codigo_postal seignoracp,
		coalesce(d.nr_seq_tipo_via, 99) tipovialidad,
		coalesce(to_char(d.nr_seq_vialidade),  'SIN INFORMACIÓN') nombrevialidad,
		d.nr_endereco numeroexteriornumerico,
		coalesce(d.nr_seq_tipo_assen, 99) tipoasentamiento,
		coalesce(to_char(substr(d.nr_seq_assentamento,1,100)),  'SIN INFORMACIÓN') nombreasentamiento,
		--ATENCIÓN PRE-HOSPITALARIA--
		CASE WHEN coalesce(c.dt_tempo_translado::text, '') = '' THEN  'N'  ELSE 'S' END  atencionprehospitalaria,
		CASE WHEN c.dt_tempo_translado='S' THEN  to_char(c.dt_tempo_translado, 'hh:mm') END  tiempotrasladouh,
		e.ie_efeito_drogas_alcool sospechabajoefectosde,
		--CIRCUNSTANCIAS EN LAS QUE OCURRIÓ EL EVENTO--
		v.ie_tipo_violencia intencionalidad,
		case
			when v.ie_tipo_violencia in (2,3,4)
			then v.ie_causador_violencia
			else -1
		end as eventorepetido,
		case
			when r.ie_violencia_fisica = 1 or r.ie_violencia_sexual = 1 then 97
			else v.ie_agente_violencia
		end as agentelesion,
		CASE WHEN v.ie_agente_violencia=25 THEN  substr(trim(both v.ds_outro),1,50) END  especifique,
		--en caso de accidente--
		CASE WHEN v.ie_agente_violencia=20 THEN  v.ie_tipo_condutor  ELSE '-1' END  lesionadovehiculomotor,
		case
			when v.ie_tipo_condutor in (1.2)
			then v.ie_sinto_seguranca
			else -1
		end as usoequiposeguridad,
		CASE WHEN v.ie_sinto_seguranca=1 THEN v.ie_item_utilizado  ELSE '-1' END  equipoutilizado,
		CASE WHEN v.ie_item_utilizado=4 THEN (' '||substr(v.ds_item_utilizado,1,50)||' ') END  especifiqueequipo,
		--EN CASO DE VIOLENCIA--
		coalesce(substr(CASE WHEN r.ie_violencia_fisica='s' THEN  chr(38)||'6'  ELSE null END ||CASE WHEN r.ie_violencia_sexual='S' THEN  chr(38)||'7'  ELSE null END ||CASE WHEN r.ie_violencia_psicologica='S' THEN  chr(38)||'8'  ELSE null END ||CASE WHEN r.ie_violencia_fin_eco='S' THEN  chr(38)||'9'  ELSE null END ||CASE WHEN r.ie_neglicegencia_abandono='S' THEN  chr(38)||'10'  ELSE null END , 2,5), '-1') as tipoviolencia ,
		--DATOS DEL AGRESOR--
		case
			when v.ie_causador_violencia = 1
			then
			case
				when ie_tipo_violencia in (2,3)
				then
				case
					when j.ie_vinculo_pai = 'S'  then 1
					when j.ie_vinculo_mae = 'S' then 2
					when j.ie_vinculo_filho = 'S' then 6
					when j.ie_vinculo_padastro = 'S' then 8
					when j.ie_vinculo_madastra = 'S' then 9
					when j.ie_vinculo_desconhecido = 'S' then 17
					when j.ds_outro_vinculo = 'S' then 19
				end
			end
			else -1
		end as parentescoafetado,
		case
			when v.ie_tipo_violencia in (2,3)
			then j.nr_envolvido
			else -1
		end as numeroagresores,
		case
			when v.ie_tipo_violencia = 2 and j.nr_envolvido = 1 and j.ds_outro_vinculo = 'S'
			then j.ds_outro_vinculo
		end as especifiqueparentesco,
		case
			when v.ie_tipo_violencia in (2,3)
			then j.ie_uso_alcool
			else -1
		end as agresorbajoefectos,
			--atención médica--
		to_char(b.dt_entrada, 'dd/mm/yyyy') fechaingreso,
		to_char(b.dt_entrada, 'hh:mm') horaingreso,
		ss.ie_servico_especializado servicioatencion,
		c.ie_tipo_atendimento tipoatencion,
		v.ie_local_violencia areaanatomica,
		CASE WHEN v.ie_local_violencia=16 THEN  substr(trim(both v.ds_local_violencia),1,50) END  especifiquearea,
		v.ie_consequencia_violencia consecuenciagravedad,
		CASE WHEN v.ie_consequencia_violencia=22 THEN  substr(trim(both v.ds_outra_consequencia),1,50) END  especifiqueconsecuencia,
		to_char(b.dt_saida_real, 'mm') mesestadistico,
		elimina_caractere_especial(substr( obter_diagnost_doenca_nom(b.nr_atendimento) ,1, 255)) descripcionafeccionprincipal,
		(SELECT max(cc1.cd_doenca)
		from 	cid_doenca cc1, diagnostico_doenca dd
		where (cc1.cd_categoria_cid like('%T%') or cc1.cd_categoria_cid like('%S%') or cc1.cd_categoria_cid like('%F%')) or (cc1.cd_doenca_cid in ('O04','O05','O06','','O07','O20','O267','O267','O429','O468','O469','O68','O710','O713','O714','O715','O716','O717','O718','O719','O95','O9'))
		and cc1.cd_doenca_cid like dd.cd_doenca and dd.nr_atendimento = b.nr_atendimento) afeccionprincipal,
		--afecciones--
		substr(get_afecciones_sinan(c.nr_atendimento),1,2000) afeccionlesione,
		trim((select max(dd.cd_doenca) from diagnostico_doenca dd where dd.nr_atendimento = b.nr_atendimento and dd.ie_tipo_doenca = 's')) afeccionreseleccionada,
		substr(trim(substr(obter_desc_cid((select max(dd.cd_doenca) from diagnostico_doenca dd where dd.nr_atendimento = b.nr_atendimento)),1, 250)),1,250) causaexterna,
		t.ds_observacao codigocausaexterna,
		CASE WHEN v.ie_consequencia_violencia=19 THEN  coalesce(v.ie_destino, 5) END  despuesatencion,
		CASE WHEN v.ie_destino=11 THEN  substr(trim(both v.ds_outro_destino),1,250) END  especifiquedestino,
		case
			when v.ie_destino = 5 and ie_envio_ministerio = 2
			then substr(xx.nr_declaracao, 1,9)
		end as foliocertificadodefuncion,
		CASE WHEN v.ie_destino=5 THEN  v.ie_envio_ministerio  ELSE -1 END  ministeriopublico,
		--profesional responsable de la salud--
		coalesce(v.ie_tipo_atendimento,'-1') responsableatencion,
		upper(coalesce(aa.cd_curp, 'XXXX999999XXXXXX99')) as curpresponsable,
		upper(yy.ds_given_name) nombreresponsable,
		upper(yy.ds_component_name_1) primerapellidoresponsable,
		upper(yy.ds_component_name_2) segundoapellidoresponsable,
		coalesce(aa.ds_codigo_prof, mm.nr_crm) cedularesponsable,
		b.dt_entrada dt_entrada,
		c.dt_notificacao dt_notificacao,
		b.nr_atendimento nr_atendimento
	FROM table(pkg_name_utils.search_names_legacy('', 'main')) yy, table(pkg_name_utils.search_names_legacy('', 'main')) y, sinan_inf_violencia v, sinan_inf_complementar t, sinan_violencia r, pessoa_juridica pj, atend_categoria_convenio p, medico mm, categoria_convenio m, sinan_dados_agressao j, nacionalidade i, estabelecimento ee, sinan_dados_complementares e, pessoa_fisica aa, pessoa_fisica a
LEFT OUTER JOIN sus_municipio s ON (a.cd_municipio_ibge = s.cd_municipio_ibge)
LEFT OUTER JOIN cat_entidade ce ON (s.nr_seq_entidade_mx = ce.nr_sequencia)
, atendimento_paciente b
LEFT OUTER JOIN declaracao_obito xx ON (b.nr_atendimento = xx.nr_atendimento)
LEFT OUTER JOIN classificacao_atendimento ss ON (b.nr_seq_classificacao = ss.nr_sequencia)
, notificacao_sinan c
LEFT OUTER JOIN sinan_dados_ocorrencia d ON (c.nr_sequencia = d.nr_seq_notificacao)
, convenio n
LEFT OUTER JOIN cat_derechohabiencia k ON (n.cd_tipo_convenio_mx = k.nr_sequencia)
WHERE a.cd_pessoa_fisica	= b.cd_pessoa_fisica and c.nr_atendimento	= b.nr_atendimento and e.nr_seq_notificacao 	= c.nr_sequencia  and v.nr_seq_notificacao 	= c.nr_sequencia and j.nr_seq_notificacao 	= c.nr_sequencia and t.nr_seq_notificacao  	= c.nr_sequencia and r.nr_seq_notificacao  	= c.nr_sequencia and i.cd_nacionalidade 	= a.cd_nacionalidade    and p.nr_atendimento 	= b.nr_atendimento and p.cd_convenio 		= m.cd_convenio and p.cd_categoria 		= m.cd_categoria and n.cd_convenio 		= m.cd_convenio  and aa.cd_pessoa_fisica  	= b.cd_medico_resp  and c.nr_seq_doenca_compulsoria = 109 and b.cd_estabelecimento 	= ee.cd_estabelecimento and pj.cd_cgc 		= ee.cd_cgc and aa.cd_pessoa_fisica 	= mm.cd_pessoa_fisica and y.nr_sequencia 		= a.nr_seq_person_name and yy.nr_sequencia 	= aa.nr_seq_person_name and b.dt_entrada between dt_inicio_p and dt_final_p;


BEGIN

	delete from w_geracao_guia
	where nm_usuario = nm_usuario_p;

	commit;

	for r_c01 in C01 loop
	begin

		qt_linha_w := C01%ROWCOUNT;

		CALL grava_campos_nom(qt_linha_w, 'clues', r_c01.clues, 42, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'folio', r_c01.folio, 42, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'curppaciente', r_c01.curppaciente, 42, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'nombre', r_c01.nombre, 42, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'primerapellido', r_c01.primerapellido, 42, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'segundoapellido', r_c01.segundoapellido, 42, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'fechanacimiento', r_c01.fechanacimiento, 42, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'nacioextranjero', r_c01.nacioextranjero, 42, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'paisorigen', r_c01.paisorigen, 42, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'entidadnacimiento', r_c01.entidadnacimiento, 42, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'escolaridad', r_c01.escolaridad, 42, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'sabeleerescribir', r_c01.sabeleerescribir, 42, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'edad', r_c01.edad, 42, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'claveedad', r_c01.claveedad, 42, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'sexo', r_c01.sexo, 42, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'afiliacion', r_c01.afiliacion, 42, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'gratuidad', r_c01.gratuidad, 42, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'numeroafiliacion', r_c01.numeroafiliacion, 42, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'digitoverificador', r_c01.digitoverificador, 42, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'seconsideraindigena', r_c01.seconsideraindigena, 42, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'hablalenguaindigena', r_c01.hablalenguaindigena, 42, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'cuallengua', r_c01.cuallengua, 42, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'mujerfertil', r_c01.mujerfertil, 42, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'discapacidad', r_c01.discapacidad, 42, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'fechaevento', r_c01.fechaevento, 42, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'horaevento', r_c01.horaevento, 42, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'diafestivo', r_c01.diafestivo, 42, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'sitioocurrencia', r_c01.sitioocurrencia, 42, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'entidadocurrencia', r_c01.entidadocurrencia, 42, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'municipioocurrencia', r_c01.municipioocurrencia, 42, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'localidadocurrencia', r_c01.localidadocurrencia, 42, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'asotralocalidad', r_c01.asotralocalidad, 42, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'codigopostal', r_c01.codigopostal, 42, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'seignoracp', r_c01.seignoracp, 42, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'tipovialidad', r_c01.tipovialidad, 42, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'nombrevialidad', r_c01.nombrevialidad, 42, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'numeroexteriornumerico', r_c01.numeroexteriornumerico, 42, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'tipoasentamiento', r_c01.tipoasentamiento, 42, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'nombreasentamiento', r_c01.nombreasentamiento, 42, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'atencionprehospitalaria', r_c01.atencionprehospitalaria, 42, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'tiempotrasladouh', r_c01.tiempotrasladouh, 42, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'sospechabajoefectosde', r_c01.sospechabajoefectosde, 42, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'intencionalidad', r_c01.intencionalidad, 42, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'eventorepetido', r_c01.eventorepetido, 42, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'agentelesion', r_c01.agentelesion, 42, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'especifique', r_c01.especifique, 42, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'lesionadovehiculomotor', r_c01.lesionadovehiculomotor, 42, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'usoequiposeguridad', r_c01.usoequiposeguridad, 42, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'equipoutilizado', r_c01.equipoutilizado, 42, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'especifiqueequipo', r_c01.especifiqueequipo, 42, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'tipoviolencia', r_c01.tipoviolencia, 42, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'parentescoafetado', r_c01.parentescoafetado, 42, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'numeroagresores', r_c01.numeroagresores, 42, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'especifiqueparentesco', r_c01.especifiqueparentesco, 42, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'agresorbajoefectos', r_c01.agresorbajoefectos, 42, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'fechaingreso', r_c01.fechaingreso, 42, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'horaingreso', r_c01.horaingreso, 42, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'servicioatencion', r_c01.servicioatencion, 42, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'tipoatencion', r_c01.tipoatencion, 42, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'areaanatomica', r_c01.areaanatomica, 42, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'especifiquearea', r_c01.especifiquearea, 42, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'consecuenciagravedad', r_c01.consecuenciagravedad, 42, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'especifiqueconsecuencia', r_c01.especifiqueconsecuencia, 42, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'mesestadistico', r_c01.mesestadistico, 42, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'descripcionafeccionprincipal', r_c01.descripcionafeccionprincipal, 42, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'afeccionprincipal', r_c01.afeccionprincipal, 42, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'afeccionlesione', r_c01.afeccionlesione, 42, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'afeccionreseleccionada', r_c01.afeccionreseleccionada, 42, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'causaexterna', r_c01.causaexterna, 42, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'codigocausaexterna', r_c01.codigocausaexterna, 42, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'despuesatencion', r_c01.despuesatencion, 42, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'especifiquedestino', r_c01.especifiquedestino, 42, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'foliocertificadodefuncion', r_c01.foliocertificadodefuncion, 42, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'ministeriopublico', r_c01.ministeriopublico, 42, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'responsableatencion', r_c01.responsableatencion,  42, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'curpresponsable', r_c01.curpresponsable, 42, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'nombreresponsable', r_c01.nombreresponsable, 42, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'primerapellidoresponsable', r_c01.primerapellidoresponsable, 42, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'segundoapellidoresponsable', r_c01.segundoapellidoresponsable, 42, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'cedularesponsable', r_c01.cedularesponsable, 42, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'dt_entrada', r_c01.dt_entrada, 42, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'dt_notificacao', r_c01.dt_notificacao, 42, nm_usuario_p);
		CALL grava_campos_nom(qt_linha_w, 'nr_atendimento', r_c01.nr_atendimento, 42, nm_usuario_p);

	end;

   END LOOP;

 end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_guia_lesoes_nom ( dt_inicio_p timestamp, dt_final_p timestamp, nm_usuario_p text) FROM PUBLIC;

