-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_nom_rc_resp_leg_doc (nr_seq_cabecalho_p bigint, nm_usuario_p text) AS $body$
DECLARE

								

nr_atendimento_w					atendimento_paciente.nr_atendimento%type;
nr_seq_episodio_w					episodio_paciente.nr_sequencia%type;
cd_estabelecimento_w				estabelecimento.cd_estabelecimento%type;
cd_pessoa_fisica_w					pessoa_fisica.cd_pessoa_fisica%type;
nr_seq_pessoa_endereco_w			compl_pessoa_fisica.nr_seq_pessoa_endereco%type;

cd_assinatura_resp_legal_w			varchar(255);	-- id_161						
nr_cod_prof_resp_legal_w			varchar(30);	-- id_162								
ds_domicilio_w						varchar(2000);	-- id_163								
cd_tipo_vialidade_w					varchar(10);	-- id_164										
nm_vialidade_w						varchar(255); 	-- id_165
nr_domicilio_ext_w					varchar(255);	-- id_166
nr_domicilio_int_alfa_w				varchar(255);	-- id_169					
cd_tipo_assentamento_w				varchar(10);	-- id_170								
nm_assentamento_w					varchar(255);	-- id_171								
cd_localidade_w						varchar(10);	-- id_172								
cd_municipio_w						varchar(10);	-- id_173
cd_entidade_fed_w					varchar(10);	-- id_174
cd_postal_w							varchar(10);	-- id_175
cd_pais_w							varchar(10);	-- id_176
nr_telefone_w						varchar(30);	-- id_177
ds_email_w							varchar(255);	-- id_178
nm_primeiro_nome_w					varchar(255);	-- id_179	
nm_sobrenome_1_pai_w				varchar(255);	-- id_180	
nm_sobrenome_2_mae_w				varchar(255);	-- id_181
dt_liberacao_w						timestamp;
num_ext_alfa_w						varchar(255);
num_int_w							varchar(255);
cd_cgc_w							pessoa_juridica.cd_cgc%type;

nr_seq_catalogo_w				end_catalogo.nr_sequencia%type;


BEGIN

delete FROM nom_rc_pessoa_fisica where nr_seq_cabecalho = nr_seq_cabecalho_p and ie_tipo = 'LEG';

select	a.nr_atendimento,
		a.nr_seq_episodio,
		a.cd_estabelecimento,
		a.dt_liberacao
into STRICT	nr_atendimento_w,
		nr_seq_episodio_w,
		cd_estabelecimento_w,
		dt_liberacao_w
from	nom_rc_cabecalho a
where	a.nr_sequencia	= nr_seq_cabecalho_p;

select	a.cd_cgc
into STRICT	cd_cgc_w
from	estabelecimento a
where	a.cd_estabelecimento = cd_estabelecimento_w;

select	max(a.cd_pessoa_fisica)
into STRICT	cd_pessoa_fisica_w
from	empresa_estab_resp a
where	a.cd_empresa = cd_estabelecimento_w and a.ie_resp_medico = 'S';

if (coalesce(cd_pessoa_fisica_w::text, '') = '') then
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(1074378);
end if;

if	((coalesce(nr_atendimento_w::text, '') = '') and (nr_seq_episodio_w IS NOT NULL AND nr_seq_episodio_w::text <> '')) then
	select	min(nr_atendimento)
	into STRICT	nr_atendimento_w
	from	atendimento_paciente a
	where	a.nr_seq_episodio = nr_seq_episodio_w;
end if;

if (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') then

	select	d.cd_pessoa_fisica cd_pessoa_fisica,
			coalesce(substr(obter_crm_medico(f.cd_pessoa_fisica), 1, 255),d.ds_codigo_prof) nr_crm,							/*id_162*/
			z.ds_given_name nm_primeiro_nome, 			/*id_179*/
			z.ds_family_name nm_sobrenome_pai,			/*id_180*/
			coalesce(z.ds_component_name_1,'SIN INFORMACION') nm_sobrenome_mae,		/*id_181*/
			obter_nom_rc_telefone(e.cd_pessoa_fisica, null, null) nr_telefone, /*id_177*/
			e.ds_email ds_email,						/*id_178*/
			'S' ds_assinatura							/*id_161*/
	into STRICT
			cd_pessoa_fisica_w,
			nr_cod_prof_resp_legal_w,
			nm_primeiro_nome_w,
			nm_sobrenome_1_pai_w,
			nm_sobrenome_2_mae_w,
			nr_telefone_w,
			ds_email_w,
			cd_assinatura_resp_legal_w
	FROM person_name z, pessoa_fisica d
LEFT OUTER JOIN medico f ON (d.cd_pessoa_fisica = f.cd_pessoa_fisica)
LEFT OUTER JOIN compl_pessoa_fisica e ON (d.cd_pessoa_fisica = e.cd_pessoa_fisica AND 1 = e.ie_tipo_complemento)
WHERE d.cd_pessoa_fisica = cd_pessoa_fisica_w and d.nr_seq_person_name = z.nr_sequencia;

	if (cd_cgc_w IS NOT NULL AND cd_cgc_w::text <> '') then
		select	nr_seq_pessoa_endereco,	
				get_complete_address_desc(a.nr_seq_pessoa_endereco,null,null,null,null,'Y') ds_endereco_completo, /*id_163*/
				get_info_end_endereco(a.nr_seq_pessoa_endereco,'TIPO_LOGRAD','C') cd_tipo_vialidade, 	/*id_164*/
				get_info_end_endereco(a.nr_seq_pessoa_endereco,'RUA_VIALIDADE','D') ds_rua_vialidade, 	/*id_165*/
				get_info_end_endereco(a.nr_seq_pessoa_endereco,'NUMERO','D') nr_numero_externo, 		/*id_166*/
				get_info_end_endereco(a.nr_seq_pessoa_endereco,'NUM_EXT_ALFA','D') num_ext_alfa,
				get_info_end_endereco(a.nr_seq_pessoa_endereco,'NUMERO_INT','D') num_int,
				get_info_end_endereco(a.nr_seq_pessoa_endereco,'COMPLEMENTO','D') nr_numero_interno, 	/*id_169*/
				get_info_end_endereco(a.nr_seq_pessoa_endereco,'TIPO_BAIRRO','C') cd_tipo_asentamento, 	/*id_170*/
				get_info_end_endereco(a.nr_seq_pessoa_endereco,'BAIRRO_VILA','D') nm_assentamento, 	/*id_171*/
				get_info_end_endereco(a.nr_seq_pessoa_endereco,'LOCALIDADE_AREA','C') cd_localidade, 	/*id_172*/
				get_info_end_endereco(a.nr_seq_pessoa_endereco,'MUNICIPIO','C') cd_municipio, 			/*id_173*/
				get_info_end_endereco(a.nr_seq_pessoa_endereco,'ESTADO_PROVINCI','C') cd_entidade, 		/*id_174*/
				get_info_end_endereco(a.nr_seq_pessoa_endereco,'CODIGO_POSTAL','D') cd_postal, 			/*id_175*/
				get_info_end_endereco(a.nr_seq_pessoa_endereco,'PAIS','C') cd_pais						/*id_176*/
				
		into STRICT	nr_seq_pessoa_endereco_w,	
				ds_domicilio_w,
				cd_tipo_vialidade_w,
				nm_vialidade_w,
				nr_domicilio_ext_w,
				num_ext_alfa_w,
				num_int_w,
				nr_domicilio_int_alfa_w,
				cd_tipo_assentamento_w, 
				nm_assentamento_w,
				cd_localidade_w,
				cd_municipio_w,
				cd_entidade_fed_w,
				cd_postal_w,
				cd_pais_w
		from	pessoa_juridica a
		where	a.cd_cgc = cd_cgc_w;

		select	max(b.nr_seq_catalogo)
		into STRICT	nr_seq_catalogo_w
		from	end_endereco b,
				pessoa_endereco_item a
		where	b.nr_sequencia = a.nr_seq_end_endereco
		and		a.nr_seq_pessoa_endereco = nr_seq_pessoa_endereco_w;
	end if;

	insert into nom_rc_pessoa_fisica(
			nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_cabecalho,
			ie_tipo,
			dt_assinatura_resp_legal,
			cd_assinatura_resp_legal,
			nr_cod_prof_resp_legal,
			ds_domicilio,
			cd_tipo_vialidade,
			nr_domicilio_ext,
			nr_domicilio_ext_alfa,
			nr_domicilio_int,
			nr_domicilio_int_alfa,
			cd_tipo_assentamento,
			nm_assentamento,
			cd_localidade,
			cd_municipio,
			cd_entidade_fed,
			cd_postal,
			cd_pais,
			nr_telefone,
			ds_email,
			nm_primeiro_nome,
			nm_sobrenome_1_pai,
			nm_sobrenome_2_mae,
			nr_seq_catalogo,
			nm_vialidade
			) values (
			nextval('nom_rc_pessoa_fisica_seq'),
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_cabecalho_p,
			'LEG',
			clock_timestamp(),		/*id_160 dt_assinatura_resp_legal*/
			cd_assinatura_resp_legal_w,
			nr_cod_prof_resp_legal_w,
			ds_domicilio_w,
			cd_tipo_vialidade_w,
			nr_domicilio_ext_w,
			num_ext_alfa_w,
			num_int_w,
			nr_domicilio_int_alfa_w,
			cd_tipo_assentamento_w,
			nm_assentamento_w,
			cd_localidade_w,
			cd_municipio_w,
			cd_entidade_fed_w,
			cd_postal_w,
			cd_pais_w,
			nr_telefone_w,
			ds_email_w,
			nm_primeiro_nome_w,
			nm_sobrenome_1_pai_w,
			nm_sobrenome_2_mae_w,
			nr_seq_catalogo_w,
			nm_vialidade_w);
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_nom_rc_resp_leg_doc (nr_seq_cabecalho_p bigint, nm_usuario_p text) FROM PUBLIC;

