-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_atualizar_conta_aut ( nr_seq_guia_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Realiza a atualizacao da autorizacao
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[  x]  Objetos do dicionario [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao:Performance.
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
				
ie_tipo_guia_w			varchar(2);
ie_preco_w			varchar(2);
nr_seq_segurado_w		bigint;
nr_contrato_w			bigint;
ie_tipo_segurado_w		varchar(3);
nr_seq_prestador_w		bigint;
ie_tipo_processo_w		varchar(1);
nr_seq_regra_w			bigint;
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
nr_seq_material_w		bigint;
ie_exige_procedimento_w		varchar(2);
qt_procedimento_w		bigint;
qt_material_w			bigint;
nr_seq_regra_ww			bigint;
ie_regra_w			varchar(2);
nr_seq_grupo_servico_w		bigint;
nr_seq_classificacao_w		bigint;
nr_seq_contrato_w		bigint;
dt_solicitacao_w		timestamp;
ie_estagio_complemento_w 	bigint;
nr_seq_intercambio_w		bigint;	
cd_prestador_w			varchar(30);
nr_seq_tipo_prestador_w		bigint;
ie_tipo_relacao_w		varchar(2);
ie_origem_solic_w		varchar(2);
ds_observacao_w			pls_log_temporario.ds_observacao%type;
ie_apresentacao_automatica_w	pls_controle_estab.ie_apresentacao_automatica%type;
ie_tipo_atend_tiss_w		pls_guia_plano.ie_tipo_atend_tiss%type;
cd_medico_solicitante_w		pls_guia_plano.cd_medico_solicitante%type;
nm_usuario_atendimento_w	pls_guia_plano.nm_usuario_atendimento%type;	
nm_usuario_guia_w			pls_guia_plano.nm_usuario_nrec%type;
nr_seq_grupo_rec_w			grupo_receita.nr_sequencia%type;
qt_proc_grupo_rec_w			integer;
ie_origem_execucao_w		pls_guia_plano.ie_origem_execucao%type;

C01 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.cd_procedimento,
		a.ie_origem_proced,
		a.nr_seq_material,
		a.ie_exige_procedimento,
		a.nr_seq_grupo_servico,
		a.nr_seq_grupo_rec
	from	pls_regra_conta_aut	 a
	where	a.cd_estabelecimento				= cd_estabelecimento_p
	and	coalesce(ie_situacao,'A')				= 'A'
	and	((coalesce(ie_complemento_guia,'S') = 'N') or (ie_estagio_complemento_w = '3'))
	and	trunc(dt_solicitacao_w) between trunc(dt_inicio_vigencia) and trunc(coalesce(dt_fim_vigencia, clock_timestamp()))
	and	coalesce(a.ie_tipo_guia,ie_tipo_guia_w)		= ie_tipo_guia_w
	and	((coalesce(a.ie_preco::text, '') = '') or (a.ie_preco		= ie_preco_w))
	and	((coalesce(a.nr_contrato::text, '') = '') or (a.nr_contrato	= nr_contrato_w))
	and	((coalesce(a.ie_tipo_segurado::text, '') = '') or (a.ie_tipo_segurado = ie_tipo_segurado_w))
	and	coalesce(a.nr_seq_prestador,nr_seq_prestador_w)	= nr_seq_prestador_w
	and	((coalesce(a.cd_prestador::text, '') = '') or (a.cd_prestador = coalesce(cd_prestador_w,'0')))
	and	((coalesce(a.cd_doenca_cid::text, '') = '') or (exists (SELECT	z.cd_doenca
							 from	pls_diagnostico z
							 where	z.cd_doenca = a.cd_doenca_cid
							 and	z.nr_seq_guia = nr_seq_guia_p)))	
	and	((coalesce(a.nr_seq_grupo_prestador,0) = 0) or (pls_se_grupo_preco_prestador(a.nr_seq_grupo_prestador, nr_seq_prestador_w, nr_seq_classificacao_w) = 'S'))
	and	((coalesce(a.nr_seq_grupo_contrato,0) = 0) or (pls_se_grupo_preco_contrato(a.nr_seq_grupo_contrato, nr_seq_contrato_w, null) = 'S'))
	and	coalesce(a.ie_tipo_processo_autor,ie_tipo_processo_w)  = ie_tipo_processo_w
	and	((coalesce(a.nr_seq_intercambio,0) = 0) or (a.nr_seq_intercambio = nr_seq_intercambio_w))	
	and	((coalesce(nr_seq_tipo_prestador::text, '') = '')or (nr_seq_tipo_prestador = nr_seq_tipo_prestador_w))
	and	((coalesce(ie_tipo_relacao::text, '') = '')	or (ie_tipo_relacao = ie_tipo_relacao_w))
	and	((coalesce(nr_seq_classificacao::text, '') = '')	or (nr_seq_classificacao = nr_seq_classificacao_w))
	and	((coalesce(a.ie_origem_solic::text, '') = '') or (a.ie_origem_solic = ie_origem_solic_w))
	and	((coalesce(a.ie_tipo_atend_tiss::text, '') = '') or (a.ie_tipo_atend_tiss= ie_tipo_atend_tiss_w))
	and	((coalesce(a.cd_medico_solicitante::text, '') = '') or (a.cd_medico_solicitante	= cd_medico_solicitante_w))
	and	((coalesce(a.nm_usuario_atendimento::text, '') = '') or (a.nm_usuario_atendimento	= nm_usuario_atendimento_w))
	and ((coalesce(a.nm_usuario_web::text, '') = '') or (a.nm_usuario_web = nm_usuario_guia_w))
	and	((coalesce(a.ie_origem_execucao::text, '') = '') or (a.ie_origem_execucao = ie_origem_execucao_w))
	order by coalesce(a.nr_seq_grupo_contrato,0),
		coalesce(a.nr_contrato,0),
		coalesce(a.nr_seq_grupo_servico,0),
		coalesce(a.cd_procedimento,0),
		coalesce(a.ie_tipo_atend_tiss,0),
		coalesce(a.cd_medico_solicitante,'A'),
		coalesce(a.nm_usuario_atendimento,'A'),
		coalesce(cd_doenca_cid,'A'),
		coalesce(cd_prestador,'0'),             
		coalesce(ie_complemento_guia, 'N'),      
		coalesce(ie_exige_procedimento,'N'),    
		coalesce(ie_origem_proced,0),        
		coalesce(ie_origem_solic, 'A'),
		coalesce(ie_origem_execucao, 'A'),
		coalesce(ie_preco, '0'),                               
		coalesce(ie_tipo_guia, '0'),                    
		coalesce(ie_tipo_processo_autor, '0'),  
		coalesce(ie_tipo_relacao,'A'),         
		coalesce(ie_tipo_segurado, ' '),--espaco em branco vem antes da ordenacao,  entao uso aqui, ja que existe valor valido 'A' e ess eprecisa ser priorizado em relacao a campo com valor nulo        
		coalesce(ie_via_acesso, ' '),          
		coalesce(nr_seq_classificacao,0),     
		coalesce(nr_seq_grau_partic,0),       
		coalesce(nr_seq_grupo_prestador,0),   
		coalesce(nr_seq_intercambio,0),       
		coalesce(nr_seq_material,0),          
		coalesce(nr_seq_prestador,0),         
		coalesce(nr_seq_tipo_prestador,0),
		coalesce(nm_usuario_web, ' '),
		coalesce(nr_seq_grupo_rec, 0);

	 
		 
C02 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.cd_procedimento,
		a.ie_origem_proced,
		a.nr_seq_material,
		a.ie_exige_procedimento,
		a.nr_seq_grupo_servico,
		a.nr_seq_grupo_rec
	from	pls_regra_conta_aut a
	where	coalesce(ie_situacao,'A')				= 'A'
	and	((coalesce(ie_complemento_guia,'S') = 'N') or (ie_estagio_complemento_w = '3'))
	and	trunc(dt_solicitacao_w) between trunc(dt_inicio_vigencia) and trunc(coalesce(dt_fim_vigencia, clock_timestamp()))
	and	coalesce(a.ie_tipo_guia,ie_tipo_guia_w)		= ie_tipo_guia_w
	and	((coalesce(a.ie_preco::text, '') = '') or (a.ie_preco		= ie_preco_w))
	and	((coalesce(a.nr_contrato::text, '') = '') or (a.nr_contrato	= nr_contrato_w))
	and	((coalesce(a.ie_tipo_segurado::text, '') = '') or (a.ie_tipo_segurado = ie_tipo_segurado_w))
	and	coalesce(a.nr_seq_prestador,nr_seq_prestador_w)	= nr_seq_prestador_w
	and	((coalesce(a.cd_prestador::text, '') = '') or (a.cd_prestador = coalesce(cd_prestador_w,'0')))
	and	((coalesce(a.cd_doenca_cid::text, '') = '') or (exists (SELECT	z.cd_doenca
							 from	pls_diagnostico z
							 where	z.cd_doenca = a.cd_doenca_cid
							 and	z.nr_seq_guia = nr_seq_guia_p)))	
	and	((coalesce(a.nr_seq_grupo_prestador,0) = 0) or (pls_se_grupo_preco_prestador(a.nr_seq_grupo_prestador, nr_seq_prestador_w, nr_seq_classificacao_w) = 'S'))
	and	((coalesce(a.nr_seq_grupo_contrato,0) = 0) or (pls_se_grupo_preco_contrato(a.nr_seq_grupo_contrato, nr_seq_contrato_w, null) = 'S'))
	and	coalesce(a.ie_tipo_processo_autor,ie_tipo_processo_w)  = ie_tipo_processo_w
	and	((coalesce(a.nr_seq_intercambio,0) = 0) or (a.nr_seq_intercambio = nr_seq_intercambio_w))	
	and	((coalesce(nr_seq_tipo_prestador::text, '') = '')or (nr_seq_tipo_prestador = nr_seq_tipo_prestador_w))
	and	((coalesce(ie_tipo_relacao::text, '') = '')	or (ie_tipo_relacao = ie_tipo_relacao_w))
	and	((coalesce(nr_seq_classificacao::text, '') = '')	or (nr_seq_classificacao = nr_seq_classificacao_w))
	and	((coalesce(a.ie_origem_solic::text, '') = '') or (a.ie_origem_solic = ie_origem_solic_w))
	and	((coalesce(a.ie_tipo_atend_tiss::text, '') = '') or (a.ie_tipo_atend_tiss= ie_tipo_atend_tiss_w))
	and	((coalesce(a.cd_medico_solicitante::text, '') = '') or (a.cd_medico_solicitante	= cd_medico_solicitante_w))
	and	((coalesce(a.nm_usuario_atendimento::text, '') = '') or (a.nm_usuario_atendimento	= nm_usuario_atendimento_w))
	and ((coalesce(a.nm_usuario_web::text, '') = '') or (a.nm_usuario_web = nm_usuario_guia_w))
	and	((coalesce(a.ie_origem_execucao::text, '') = '') or (a.ie_origem_execucao = ie_origem_execucao_w))
	order by coalesce(a.nr_seq_grupo_contrato,0),
		coalesce(a.nr_contrato,0),
		coalesce(a.nr_seq_grupo_servico,0),
		coalesce(a.cd_procedimento,0),
		coalesce(a.ie_tipo_atend_tiss,0),
		coalesce(a.cd_medico_solicitante,'A'),
		coalesce(a.nm_usuario_atendimento,'A'),
		coalesce(cd_doenca_cid,'A'),                     
		coalesce(cd_prestador,'0'),             
		coalesce(ie_complemento_guia, 'N'),      
		coalesce(ie_exige_procedimento,'N'),    
		coalesce(ie_origem_proced,0),        
		coalesce(ie_origem_solic, 'A'),
		coalesce(ie_origem_execucao, 'A'),
		coalesce(ie_preco, '0'),                               
		coalesce(ie_tipo_guia, '0'),                    
		coalesce(ie_tipo_processo_autor, '0'),  
		coalesce(ie_tipo_relacao,'A'),         
		coalesce(ie_tipo_segurado, ' '),--espaco em branco vem antes da ordenacao,  entao uso aqui, ja que existe valor valido 'A' e ess eprecisa ser priorizado em relacao a campo com valor nulo        
		coalesce(ie_via_acesso, ' '),          
		coalesce(nr_seq_classificacao,0),     
		coalesce(nr_seq_grau_partic,0),       
		coalesce(nr_seq_grupo_prestador,0),   
		coalesce(nr_seq_intercambio,0),       
		coalesce(nr_seq_material,0),          
		coalesce(nr_seq_prestador,0),         
		coalesce(nr_seq_tipo_prestador,0),
		coalesce(nm_usuario_web, ' '),
		coalesce(nr_seq_grupo_rec, 0);
	

BEGIN
	
/*Obter dados da guia*/

select	coalesce(nr_seq_prestador,0),
	ie_tipo_guia,
	nr_seq_segurado,
	ie_tipo_processo,
	dt_solicitacao,
	coalesce(ie_estagio_complemento,3),
	ie_origem_solic,
	ie_tipo_atend_tiss,
	cd_medico_solicitante,
	nm_usuario_atendimento,
	nm_usuario_nrec,
	ie_origem_execucao
into STRICT	nr_seq_prestador_w,
	ie_tipo_guia_w,
	nr_seq_segurado_w,
	ie_tipo_processo_w,
	dt_solicitacao_w,
	ie_estagio_complemento_w,
	ie_origem_solic_w,
	ie_tipo_atend_tiss_w,
	cd_medico_solicitante_w,
	nm_usuario_atendimento_w,
	nm_usuario_guia_w,
	ie_origem_execucao_w
from	pls_guia_plano
where	nr_sequencia 		= nr_seq_guia_p;

begin
	select 	nr_seq_intercambio
	into STRICT 	nr_seq_intercambio_w
	from 	pls_segurado
	where	nr_sequencia = nr_seq_segurado_w;
exception
when others then
	nr_seq_intercambio_w := 0;
end;

select	max(nr_seq_classificacao),
	max(cd_prestador),
	max(ie_tipo_relacao),
	max(nr_seq_tipo_prestador)
into STRICT	nr_seq_classificacao_w,
	cd_prestador_w,
	ie_tipo_relacao_w,
	nr_seq_tipo_prestador_w
from	pls_prestador
where	nr_sequencia = nr_seq_prestador_w;

--Obter dados do segurado, contrato
begin
select	b.ie_preco,
	c.nr_contrato,
	c.nr_sequencia,
	a.ie_tipo_segurado
into STRICT	ie_preco_w,
	nr_contrato_w,
	nr_seq_contrato_w,
	ie_tipo_segurado_w
from	pls_segurado 	a,
	pls_plano  	b,
	pls_contrato 	c
where	a.nr_sequencia 		= nr_seq_segurado_w
and	a.nr_seq_plano 		= b.nr_sequencia
and	a.nr_seq_contrato	= c.nr_sequencia;
exception
when others then
	ie_preco_w := null;
	nr_contrato_w := null;
	ie_tipo_segurado_w := null;
end;

if ( ie_origem_solic_w = 'P' ) then
	ds_observacao_w := '2 - Parametros regra  CD_ESTABELECIMENTO_P:'||cd_estabelecimento_p||' IE_ESTAGIO_COMPLEMENTO_W:'||ie_estagio_complemento_w||' DT_SOLICITACAO_W:'||dt_solicitacao_w||' IE_TIPO_GUIA_W:'||ie_tipo_guia_w||' IE_PRECO_W:'
			   || ie_preco_w||' NR_CONTRATO_W:'||nr_contrato_w||' IE_TIPO_SEGURADO_W:'||ie_tipo_segurado_w||' NR_SEQ_PRESTADOR_W:'||nr_seq_prestador_w||' NR_SEQ_CLASSIFICACAO_W:'||nr_seq_classificacao_w||' NR_SEQ_CONTRATO_W:'
			   || nr_seq_contrato_w||' IE_TIPO_PROCESSO_W:'||ie_tipo_processo_w||' NR_SEQ_INTERCAMBIO_W:'||nr_seq_intercambio_w||' NR_SEQ_TIPO_PRESTADOR_W:'||nr_seq_tipo_prestador_w||' IE_TIPO_RELACAO_W:'||ie_tipo_relacao_w || ' IE_TIPO_ATEND_TISS_W:' ||ie_tipo_atend_tiss_w;
	--Rotina utilizada para gerar log na regra de apresentacao automatica de canta medica */

	--pls_geracao_log_temporario(nr_seq_guia_p, substr(ds_observacao_w,0,4000), nm_usuario_p);
end if;

select	max(ie_apresentacao_automatica)
into STRICT	ie_apresentacao_automatica_w
from	pls_controle_estab;

if (coalesce(ie_apresentacao_automatica_w,'S') = 'S') then
	open C01;
	loop
	fetch C01 into	
		nr_seq_regra_w,
		cd_procedimento_w,
		ie_origem_proced_w,
		nr_seq_material_w,
		ie_exige_procedimento_w,
		nr_seq_grupo_servico_w,
		nr_seq_grupo_rec_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin	
		
		--Retirado tratamento para geracao de log estava deixando em lock a rotina de consistencia 17/05/2014 - OS737412

		--if	( ie_origem_solic_w = 'P' ) then

		--	Rotina utilizada para gerar log na regra de apresentacao automatica de canta medica 

		--	pls_geracao_log_temporario(nr_seq_guia_p, '3 - Regra encontrada '||nr_seq_regra_w, nm_usuario_p);

		--end if;
		if (coalesce(cd_procedimento_w,0) > 0) then		
			select	count(1)
			into STRICT	qt_procedimento_w
			from	pls_guia_plano_proc
			where	nr_seq_guia 	 = nr_seq_guia_p
			and	cd_procedimento  = cd_procedimento_w
			and	ie_origem_proced = ie_origem_proced;
			
			if (qt_procedimento_w = 0) then
				goto final;
			end if;		
		end if;	
		
		if (coalesce(nr_seq_material_w,0) > 0) then			
			select	count(1)
			into STRICT	qt_material_w
			from	pls_guia_plano_mat
			where	nr_seq_guia 	 = nr_seq_guia_p
			and	nr_seq_material  = nr_seq_material_w;
			
			if (qt_material_w = 0) then
				goto final;
			end if;			
		end if;
		
		if (coalesce(ie_exige_procedimento_w,'N') <> 'N') then
		
			ie_regra_w := pls_exige_procedimento(	nr_seq_grupo_servico_w, ie_exige_procedimento_w, nr_seq_guia_p, null, nm_usuario_p, cd_estabelecimento_p, cd_procedimento_w, ie_origem_proced_w, ie_regra_w);
			
			if (ie_regra_w = 'N') then
				goto final;
			end if;
			
		end if;
		
		if (nr_seq_grupo_rec_w IS NOT NULL AND nr_seq_grupo_rec_w::text <> '') then
		
			select count(1)
			into STRICT	qt_proc_grupo_rec_w
			from	pls_guia_plano_proc a,
					pls_guia_plano b,
					procedimento c
			where	a.nr_seq_guia = b.nr_sequencia
			and		a.cd_procedimento = c.cd_procedimento
			and		a.ie_origem_proced = c.ie_origem_proced
			and		b.nr_sequencia = nr_seq_guia_p
			and		c.nr_seq_grupo_rec = nr_seq_grupo_rec_w;
				
			if (qt_proc_grupo_rec_w = 0) then
				goto final;
			end if;
				
		end if;
						
		nr_seq_regra_ww := nr_seq_regra_w;
		
		<<final>>
		
		nr_seq_regra_ww := nr_seq_regra_ww;
		
		end;
	end loop;
	close C01;
else
	open C02;
	loop
	fetch C02 into	
		nr_seq_regra_w,
		cd_procedimento_w,
		ie_origem_proced_w,
		nr_seq_material_w,
		ie_exige_procedimento_w,
		nr_seq_grupo_servico_w,
		nr_seq_grupo_rec_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin	
		
		--Retirado tratamento para geracao de log estava deixando em lock a rotina de consistencia 17/05/2014 - OS737412

		--if	( ie_origem_solic_w = 'P' ) then

		--	Rotina utilizada para gerar log na regra de apresentacao automatica de canta medica 

		--	pls_geracao_log_temporario(nr_seq_guia_p, '3 - Regra encontrada '||nr_seq_regra_w, nm_usuario_p);

		--end if;
		
		if (coalesce(cd_procedimento_w,0) > 0) then		
			select	count(1)
			into STRICT	qt_procedimento_w
			from	pls_guia_plano_proc
			where	nr_seq_guia 	 = nr_seq_guia_p
			and	cd_procedimento  = cd_procedimento_w
			and	ie_origem_proced = ie_origem_proced;
			
			if (qt_procedimento_w = 0) then
				goto final;
			end if;		
		end if;	
		
		if (coalesce(nr_seq_material_w,0) > 0) then			
			select	count(1)
			into STRICT	qt_material_w
			from	pls_guia_plano_mat
			where	nr_seq_guia 	 = nr_seq_guia_p
			and	nr_seq_material  = nr_seq_material_w;
			
			if (qt_material_w = 0) then
				goto final;
			end if;			
		end if;
		
		if (coalesce(ie_exige_procedimento_w,'N') <> 'N') then 
		
			ie_regra_w := pls_exige_procedimento(	nr_seq_grupo_servico_w, ie_exige_procedimento_w, nr_seq_guia_p, null, nm_usuario_p, cd_estabelecimento_p, cd_procedimento_w, ie_origem_proced_w, ie_regra_w);
			
			if (ie_regra_w = 'N') then
				goto final;
			end if;
			
		end if;
		
		if (nr_seq_grupo_rec_w IS NOT NULL AND nr_seq_grupo_rec_w::text <> '') then
		
			select count(1)
			into STRICT	qt_proc_grupo_rec_w
			from	pls_guia_plano_proc a,
					pls_guia_plano b,
					procedimento c
			where	a.nr_seq_guia = b.nr_sequencia
			and		a.cd_procedimento = c.cd_procedimento
			and		a.ie_origem_proced = c.ie_origem_proced
			and		b.nr_sequencia = nr_seq_guia_p
			and		c.nr_seq_grupo_rec = nr_seq_grupo_rec_w;
			
			if (qt_proc_grupo_rec_w = 0) then
				goto final;
			end if;
		
		end if;
		
		nr_seq_regra_ww := nr_seq_regra_w;
		
		<<final>>
		
		nr_seq_regra_ww := nr_seq_regra_ww;
		
		end;
	end loop;
	close C02;
end if;	

-- Retirado tratamento para geracao de log estava deixando em lock a rotina de consistencia 17/05/2014 - OS737412

--if	( ie_origem_solic_w = 'P' ) then

--	Rotina utilizada para gerar log na regra de apresentacao automatica de canta medica *

--	pls_geracao_log_temporario(nr_seq_guia_p, '4 - Regra gerada '||nr_seq_regra_ww, nm_usuario_p);

--end if;
if (coalesce(nr_seq_regra_ww,0) > 0) then

	update	pls_guia_plano
	set		ie_pagamento_automatico = 'PA',
			nr_seq_pgto_aut		= nr_seq_regra_ww
	where	nr_sequencia 		= nr_seq_guia_p;
end if;

/*commit;*/

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_atualizar_conta_aut ( nr_seq_guia_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

