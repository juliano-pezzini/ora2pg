-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_dados_pre_agenda ( cd_procedimento_p bigint default null, ie_origem_proced_p bigint default null, nr_sequencia_p bigint DEFAULT NULL, nr_seq_proc_interno_p bigint DEFAULT NULL, cd_medico_p text DEFAULT NULL, cd_pessoa_fisica_p text DEFAULT NULL, nm_usuario_p text DEFAULT NULL, cd_convenio_p bigint DEFAULT NULL, cd_plano_agenda_p text default null, ds_orientacao_p text DEFAULT NULL, cd_estabelecimento_p bigint DEFAULT NULL, ie_gerar_equip_p text DEFAULT NULL, ie_gerar_cme_p text DEFAULT NULL, ie_gerar_opme_p text DEFAULT NULL, ie_Gerar_servico_p text DEFAULT NULL, ie_gerar_caixa_opme_p text DEFAULT NULL, ds_erro_p INOUT text DEFAULT NULL, ds_erro_2_p INOUT text DEFAULT NULL) AS $body$
DECLARE


nr_seq_classif_equip_w		bigint;
nr_seq_conjunto_w			bigint;
qt_conjunto_w			bigint;
cd_material_w			bigint;
qt_material_w			double precision;
nr_sequencia_w			bigint;
nr_seq_proc_servico_w		bigint;
ie_tipo_orientacao_w		smallint;
qt_equip_class_w			smallint;
cd_equipamento_w			bigint;
ie_obrigatorio_w			varchar(3);
ie_padrao_w			varchar(1);
nr_seq_tipo_caixa_opme_w		bigint;
ie_consiste_w			varchar(15);
ds_erro_w			varchar(255) := '';
ds_erro_equip_w			varchar(255);
ie_consiste_cme_w			varchar(15);
ds_erro_cme_w			varchar(255);
cd_medico_conjunto_w		varchar(10);
cd_equipamento_proc_w		bigint;
nr_seq_classif_equip_ww		bigint;
cd_equipamento_ww		bigint;
cd_cgc_w			varchar(14);
nr_seq_proc_interno_w		bigint;
ie_classif_equip_w			varchar(15);
nr_seq_grupo_w			bigint;
ie_tipagem_sanguinea_w		varchar(1);
qt_servico_w			bigint;
ie_modo_obter_sangue_w		varchar(1);
ie_possui_registro_w		varchar(1);
ie_GerarCMEIndividualizado_w	varchar(1);
ie_tem_medico_w				varchar(1);
ds_observacao_w				varchar(255);
ds_observacao_ww		varchar(255);
ie_registra_observacao_w	varchar(1);
ie_pacote_w			varchar(1);
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
cd_especialidade_w		bigint;
ie_sexo_w			varchar(15);
hr_inicio_w			timestamp;
qt_idade_w			bigint;
nr_seq_evento_w			bigint;
ie_carater_cirurgia_w		varchar(15);
cd_setor_exclusivo_w		integer;
cd_setor_equipamento_w		integer;
cd_estab_cme_w				bigint;
ie_considera_estab_agenda_w	varchar(3);
ie_gerar_prime_cme_disp_w	varchar(1);
cd_agenda_w			bigint;
ie_status_agenda_w		varchar(3) := null;
ie_tipo_convenio_w		smallint	:= 0;
cd_estabelecimento_w		integer;
cd_perfil_w			integer;
ds_erro_opme_w			varchar(1000);
cd_convenio_w			integer;
nr_seq_pro_interno_w		bigint;
ie_consistir_material_opme_w	varchar(1);
qt_anos_pac_w			smallint;
qt_meses_pac_w			smallint;
qt_total_meses_pac_w		smallint;
ie_servico_w			varchar(1):='N';
ie_status_equipamento_w	 varchar(15);
ie_status_cme_w			agenda_pac_cme.ie_status_cme%type;
cd_plano_agenda_w		agenda_paciente.cd_plano%type;
cd_plano_w				proc_interno_opme.cd_plano%type;
cd_estab_opme_w			agenda.cd_estabelecimento%type;
cd_estab_agenda_w		agenda.cd_estabelecimento%type;
	
c00 CURSOR FOR
	SELECT	coalesce(a.nr_seq_classif_equip,0),
		coalesce(a.cd_equipamento,0),
		coalesce(a.ie_obrigatorio,'S')
	from	proc_interno_equip a
	where	a.nr_seq_proc_interno	=	nr_seq_proc_interno_p
	and 	coalesce(a.cd_medico::text, '') = ''		
	and	((ie_classif_equip_w = 'C' AND nr_seq_classif_equip IS NOT NULL AND nr_seq_classif_equip::text <> '') or (ie_classif_equip_w = 'E' AND cd_equipamento IS NOT NULL AND cd_equipamento::text <> ''))
	and	((coalesce(a.cd_especialidade::text, '') = '') or (a.cd_especialidade = cd_especialidade_w))
	and not exists (	SELECT	1
			from	agenda_pac_equip x
			where	x.nr_seq_agenda		= nr_sequencia_p
			and	coalesce(x.ie_origem_inf,'I') =	'I'
			and (x.nr_seq_classif_equip	= a.nr_seq_classif_equip or x.cd_equipamento = a.cd_equipamento))
        and 	exists (select 	1 	
			from    equipamento z
			where 	coalesce(z.ie_situacao,'A') = 'A'
			and	((a.cd_equipamento = z.cd_equipamento) or (ie_classif_equip_w = 'C' AND nr_seq_classif_equip IS NOT NULL AND nr_seq_classif_equip::text <> ''))
			and 	coalesce(z.cd_setor_atendimento,cd_setor_equipamento_w) = cd_setor_equipamento_w)			
	
union
	
	select	coalesce(a.nr_seq_classif_equip,0),
		coalesce(a.cd_equipamento,0),
		coalesce(a.ie_obrigatorio,'S')
	from	proc_interno_equip a
	where	a.nr_seq_proc_interno	=	nr_seq_proc_interno_p
	and 	a.cd_medico		= 	cd_medico_p
	and	((ie_classif_equip_w = 'C' AND nr_seq_classif_equip IS NOT NULL AND nr_seq_classif_equip::text <> '') or (ie_classif_equip_w = 'E' AND cd_equipamento IS NOT NULL AND cd_equipamento::text <> ''))
	and	((coalesce(a.cd_especialidade::text, '') = '') or (a.cd_especialidade = cd_especialidade_w))
	and not exists (	select	1
			from	agenda_pac_equip x
			where	x.nr_seq_agenda		=	nr_sequencia_p
			and	coalesce(x.ie_origem_inf,'I') =	'I'
			and (x.nr_seq_classif_equip	= a.nr_seq_classif_equip or x.cd_equipamento = a.cd_equipamento))
	and 		exists (select 	1 	
			from    equipamento z
			where 	coalesce(z.ie_situacao,'A') = 'A'
			and	((a.cd_equipamento = z.cd_equipamento) or (ie_classif_equip_w = 'C' AND nr_seq_classif_equip IS NOT NULL AND nr_seq_classif_equip::text <> ''))
			and 	coalesce(z.cd_setor_atendimento,cd_setor_equipamento_w) = cd_setor_equipamento_w);

c01 CURSOR FOR
	SELECT		a.nr_seq_conjunto,
			a.qt_conjunto,
			coalesce(a.ie_obrigatorio,'S'),
			0 nr_seq_grupo
from		proc_interno_cme a,
		cm_conjunto b
where		a.nr_seq_conjunto = b.nr_sequencia
and		coalesce(b.ie_situacao,'A') = 'A'
and 		coalesce(qt_total_meses_pac_w,0) between coalesce(b.qt_idade_min,0) and  coalesce(b.qt_idade_max,9999)
and		a.nr_seq_proc_interno	=	nr_seq_proc_interno_p
and			coalesce(a.cd_medico::text, '') = ''
and			coalesce(a.NR_SEQ_CLASSIF::text, '') = ''
and			coalesce(a.NR_SEQ_GRUPO::text, '') = ''	
and			((coalesce(a.cd_estabelecimento::text, '') = '') or (a.cd_estabelecimento = cd_estab_cme_w))
and			((coalesce(a.cd_especialidade::text, '') = '') or (a.cd_especialidade = cd_especialidade_w))
and 		not exists (	SELECT	1
						from	agenda_pac_cme x
						where	x.nr_seq_agenda		=	nr_sequencia_p
						and	x.nr_seq_conjunto	=	a.nr_seq_conjunto)

union

select		a.nr_seq_conjunto,
			a.qt_conjunto,
			coalesce(a.ie_obrigatorio,'S'),
			0 nr_seq_grupo
from		proc_interno_cme a,
		cm_conjunto b
where		a.nr_seq_conjunto = b.nr_sequencia
and		coalesce(b.ie_situacao,'A') = 'A'
and		a.nr_seq_proc_interno	=	nr_seq_proc_interno_p
and 		coalesce(qt_total_meses_pac_w,0) between coalesce(b.qt_idade_min,0) and  coalesce(b.qt_idade_max,9999)
and			a.cd_medico		=	cd_medico_p
and			coalesce(a.NR_SEQ_CLASSIF::text, '') = ''
and			coalesce(a.NR_SEQ_GRUPO::text, '') = ''
and			((coalesce(a.cd_estabelecimento::text, '') = '') or (a.cd_estabelecimento = cd_estab_cme_w))
and			((coalesce(a.cd_especialidade::text, '') = '') or (a.cd_especialidade = cd_especialidade_w))
and 		not exists (	select	1
						from	agenda_pac_cme x
						where	x.nr_seq_agenda		=	nr_sequencia_p
						and	x.nr_seq_conjunto	=	a.nr_seq_conjunto)

union

select		b.nr_sequencia,
			a.qt_conjunto,
			coalesce(a.ie_obrigatorio,'S'),
			0 nr_seq_grupo
from		cm_conjunto b,
		proc_interno_cme a
where		a.nr_seq_conjunto = b.nr_sequencia	
and		a.nr_seq_proc_interno				= nr_seq_proc_interno_p
and 		coalesce(qt_total_meses_pac_w,0) between coalesce(b.qt_idade_min,0) and  coalesce(b.qt_idade_max,9999)
and			coalesce(a.cd_medico, coalesce(cd_medico_p, 'X')) 	= coalesce(cd_medico_p,'X')
and			a.NR_SEQ_CLASSIF 				= b.NR_SEQ_CLASSIF
and			coalesce(b.ie_situacao, 'A')				= 'A'
and			coalesce(NR_SEQ_GRUPO::text, '') = ''
and			((coalesce(a.cd_estabelecimento::text, '') = '') or (a.cd_estabelecimento = cd_estab_cme_w))
and			((coalesce(a.cd_especialidade::text, '') = '') or (a.cd_especialidade = cd_especialidade_w))
and 		not exists (	select	1
						from	agenda_pac_cme x
						where	x.nr_seq_agenda		=	nr_sequencia_p
						and	x.nr_seq_conjunto	=	a.nr_seq_conjunto)

union

select		b.nr_sequencia,
			a.qt_conjunto,
			coalesce(a.ie_obrigatorio,'S'),
			c.NR_SEQ_GRUPO
from		cm_grupo_conjunto d,
			cm_grupo_classif c, 
			cm_conjunto b, 
			proc_interno_cme a
where		a.nr_seq_proc_interno				= nr_seq_proc_interno_p
and			c.nr_seq_grupo					= d.nr_sequencia
and 		coalesce(qt_total_meses_pac_w,0) between coalesce(b.qt_idade_min,0) and  coalesce(b.qt_idade_max,9999)
and			coalesce(a.cd_medico, coalesce(cd_medico_p, 'X')) 	= coalesce(cd_medico_p, 'X')
and			b.NR_SEQ_CLASSIF 				= c.NR_SEQ_CLASSIFICACAO
and			a.NR_SEQ_GRUPO   				= c.NR_SEQ_GRUPO
and			coalesce(d.ie_situacao, 'A')				= 'A'
and			coalesce(b.ie_situacao, 'A')				= 'A'
and			((coalesce(a.cd_estabelecimento::text, '') = '') or (a.cd_estabelecimento = cd_estab_cme_w))
and			((coalesce(a.cd_especialidade::text, '') = '') or (a.cd_especialidade = cd_especialidade_w))
and 		not exists (	select	1
						from	agenda_pac_cme x
						where	x.nr_seq_agenda		=	nr_sequencia_p
						and	x.nr_seq_conjunto	=	a.nr_seq_conjunto)
and (ie_GerarCMEIndividualizado_w = 'N')								

union

select		b.nr_sequencia,
			a.qt_conjunto,
			coalesce(a.ie_obrigatorio,'S'),
			c.NR_SEQ_GRUPO
from		cm_grupo_conjunto d,
			cm_grupo_classif c, 
			cm_conjunto b, 
			proc_interno_cme a
where		a.nr_seq_proc_interno					= nr_seq_proc_interno_p
and			c.nr_seq_grupo							= d.nr_sequencia
and 		coalesce(qt_total_meses_pac_w,0) between coalesce(b.qt_idade_min,0) and  coalesce(b.qt_idade_max,9999)
and			((ie_tem_medico_w = 'S' AND a.cd_medico = cd_medico_p) or
			((ie_tem_medico_w = 'N') and (coalesce(a.cd_medico::text, '') = ''))) 
and			b.NR_SEQ_CLASSIF 						= c.NR_SEQ_CLASSIFICACAO
and			a.NR_SEQ_GRUPO   						= c.NR_SEQ_GRUPO
and			coalesce(d.ie_situacao, 'A')					= 'A'
and			coalesce(b.ie_situacao, 'A')					= 'A'
and			((coalesce(a.cd_estabelecimento::text, '') = '') or (a.cd_estabelecimento = cd_estab_cme_w))
and			((coalesce(a.cd_especialidade::text, '') = '') or (a.cd_especialidade = cd_especialidade_w))
and 		not exists (	select	1
						from	agenda_pac_cme x
						where	x.nr_seq_agenda	=	nr_sequencia_p
						and	x.nr_seq_conjunto	=	a.nr_seq_conjunto)
and (ie_GerarCMEIndividualizado_w = 'S');					
	
	
-- (S,O,N)(Sim,Não,Ambos)
c02 CURSOR FOR
	SELECT	a.cd_material,
		a.qt_material,
		coalesce(a.ie_padrao,'S'),
		a.cd_cgc,
		a.ds_observacao
	from	proc_interno_opme a
	where	a.nr_seq_proc_interno	=	nr_seq_proc_interno_p
	and	coalesce(a.cd_medico::text, '') = ''
	and	coalesce(a.cd_convenio,coalesce(cd_convenio_p,0))		= coalesce(cd_convenio_p,0)
	and	coalesce(a.ie_tipo_convenio,ie_tipo_convenio_w)	= ie_tipo_convenio_w
	and	coalesce(a.cd_plano, coalesce(cd_plano_agenda_w,'XPTO'))	= coalesce(cd_plano_agenda_w,'XPTO')
	and	coalesce(a.cd_estabelecimento, cd_estab_opme_w)	= cd_estab_opme_w
	and	((coalesce(ie_pacote,'N') = 'N') or
		 ((coalesce(ie_pacote,'N') = 'S') and (ie_pacote_w = 'S')) or
		 ((coalesce(ie_pacote,'N') = 'O') and (ie_pacote_w = 'N')))
	and	((coalesce(a.cd_especialidade::text, '') = '') or (a.cd_especialidade = cd_especialidade_w))
	and not exists (	SELECT	1
			from	agenda_pac_opme x
			where	x.nr_seq_agenda		=	nr_sequencia_p
			and	x.cd_material		=	a.cd_material
			and	x.ie_origem_inf		=	'I')
	and 	(((a.ie_somente_exclusivo = 'S') and not exists (	select  1
									from	proc_interno_opme x
									where	a.nr_seq_proc_interno     	= x.nr_seq_proc_interno
									and	x.cd_medico			= cd_medico_p)) or (coalesce(a.ie_somente_exclusivo,'N') = 'N'))
	and	coalesce(a.nr_seq_grupo::text, '') = ''									
	
union

	select	a.cd_material,
		a.qt_material,
		coalesce(a.ie_padrao,'S'),
		a.cd_cgc,
		a.ds_observacao
	from	proc_interno_opme a
	where	a.nr_seq_proc_interno	=	nr_seq_proc_interno_p
	and	a.cd_medico		=	cd_medico_p
	and	coalesce(a.cd_convenio,coalesce(cd_convenio_p,0))	= coalesce(cd_convenio_p,0)
	and	coalesce(a.ie_tipo_convenio,ie_tipo_convenio_w)	= ie_tipo_convenio_w
	and	coalesce(a.cd_plano, coalesce(cd_plano_agenda_w,'XPTO'))	= coalesce(cd_plano_agenda_w,'XPTO')
	and	coalesce(a.cd_estabelecimento, cd_estab_opme_w)	= cd_estab_opme_w	
	and	((coalesce(ie_pacote,'N') = 'N') or
		 ((coalesce(ie_pacote,'N') = 'S') and (ie_pacote_w = 'S')) or
		 ((coalesce(ie_pacote,'N') = 'O') and (ie_pacote_w = 'N')))
	and	((coalesce(a.cd_especialidade::text, '') = '') or (a.cd_especialidade = cd_especialidade_w))
	and not exists (	select	1
			from	agenda_pac_opme x
			where	x.nr_seq_agenda		=	nr_sequencia_p
			and	x.cd_material		=	a.cd_material
			and	x.ie_origem_inf		=	'I')
	and	coalesce(a.nr_seq_grupo::text, '') = '';


c03 CURSOR FOR
	SELECT	a.nr_seq_proc_servico
	from	proc_interno_servico a,
		proc_interno b
	where	a.nr_seq_proc_servico 	= b.nr_sequencia
	and	a.nr_seq_proc_interno	= nr_seq_proc_interno_p
	and	b.ie_tipo_util 		= 'SC'
	and	coalesce(b.ie_situacao,'A')	= 'A'
	and not exists (	SELECT	1
			from	agenda_pac_servico x
			where	x.nr_seq_agenda		=	nr_sequencia_p
			and	x.nr_seq_proc_servico	=	a.nr_seq_proc_servico);


c04 CURSOR FOR
	SELECT	a.nr_seq_tipo_caixa_opme,
		coalesce(a.ie_padrao,'S')
	from	proc_interno_caixa_opme a
	where	a.nr_seq_proc_interno	=	nr_seq_proc_interno_p
	and	coalesce(a.cd_medico::text, '') = ''
	and not exists (	SELECT	1
			from	agenda_pac_caixa_opme x
			where	x.nr_seq_agenda			= nr_sequencia_p
			and	x.nr_seq_tipo_caixa_opme	= a.nr_seq_tipo_caixa_opme)
	
union

	select	a.nr_seq_tipo_caixa_opme,
		coalesce(a.ie_padrao,'S')
	from	proc_interno_caixa_opme a
	where	a.nr_seq_proc_interno	=	nr_seq_proc_interno_p
	and	a.cd_medico		=	cd_medico_p
	and not exists (	select	1
			from	agenda_pac_caixa_opme x
			where	x.nr_seq_agenda			= nr_sequencia_p
			and	x.nr_seq_tipo_caixa_opme	= a.nr_seq_tipo_caixa_opme);

c05 CURSOR FOR			
SELECT		a.nr_seq_proc_servico,
		b.ie_tipagem_sanguinea, 
		a.qt_servico
from		proc_interno b,
		proc_interno_servico a
where		a.nr_seq_proc_servico 	= b.nr_sequencia
and		a.nr_seq_proc_interno	= nr_seq_proc_interno_p
and		b.ie_tipo = 'BS'
and		not exists (SELECT	1
			from 	agenda_pac_sangue x
			where	x.nr_seq_proc_interno 	= a.nr_seq_proc_servico
			and	x.nr_seq_agenda 	= nr_sequencia_p);
			
c06 CURSOR FOR
	SELECT	nr_seq_evento
	from	regra_envio_sms
	where	cd_estabelecimento		= wheb_usuario_pck.get_cd_estabelecimento
	and	ie_evento_disp			= 'IOPME'
	and	coalesce(qt_idade_w,0) between coalesce(qt_idade_min,0)	and coalesce(qt_idade_max,9999)
	and	coalesce(ie_sexo,coalesce(ie_sexo_w,'XPTO'))  = coalesce(ie_sexo_w,'XPTO')
	and	coalesce(cd_medico,coalesce(cd_medico_p,'0')) = coalesce(cd_medico_p,'0')
	and (obter_se_convenio_rec_alerta(cd_convenio_p,nr_sequencia) = 'S')
	and (obter_se_proc_rec_alerta(nr_seq_proc_interno_p,nr_sequencia,cd_procedimento_p,ie_origem_proced_p) = 'S')
	and (obter_se_mat_rec_alerta(cd_material_w,nr_sequencia) = 'S')
	and	coalesce(nr_seq_classif,coalesce(obter_classificacao_pf(cd_pessoa_fisica_p),0)) = coalesce(obter_classificacao_pf(cd_pessoa_fisica_p),0)
	and (obter_regra_alerta_agenda(nr_sequencia,cd_agenda_w,ie_status_agenda_w) = 'S')
	and (obter_classif_regra(nr_sequencia,coalesce(obter_classificacao_pf(cd_pessoa_fisica_p),0)) = 'S')
	and	coalesce(ie_situacao,'A') = 'A';
	
c07 CURSOR FOR
	SELECT	a.nr_seq_proc_servico
	from	regra_ger_reg_agenda_cir a
	where	a.cd_medico = cd_medico_p
	and 	not exists (	SELECT	1
				from	agenda_pac_servico x
				where	x.nr_seq_agenda		=	nr_sequencia_p
				and	x.nr_seq_proc_servico	=	a.nr_seq_proc_servico);	

BEGIN
if (cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') then
	select 	max(Obter_Idade(dt_nascimento,clock_timestamp(),'M'	))
	into STRICT	qt_total_meses_pac_w
	from	pessoa_fisica
	where 	cd_pessoa_fisica = cd_pessoa_fisica_p;
else
	qt_total_meses_pac_w := 0;
end if;

CALL excluir_inconsistencia_agenda(nr_sequencia_p,'GERAR_DADOS_PRE_AGENDA');

cd_perfil_w		:=	obter_perfil_ativo;
cd_estabelecimento_w	:= 	wheb_usuario_pck.get_cd_estabelecimento;

ie_consiste_w := Obter_Param_Usuario(871, 81, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_consiste_w);
ie_consiste_cme_w := Obter_Param_Usuario(871, 101, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_consiste_cme_w);
ie_classif_equip_w := Obter_Param_Usuario(871, 100, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_classif_equip_w);
ie_modo_obter_sangue_w := Obter_Param_Usuario(871, 224, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_modo_obter_sangue_w);
ie_GerarCMEIndividualizado_w := Obter_Param_Usuario(871, 261, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_GerarCMEIndividualizado_w);
ie_registra_observacao_w := Obter_Param_Usuario(871, 281, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_registra_observacao_w);
ie_consistir_material_opme_w := Obter_Param_Usuario(871, 334, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_consistir_material_opme_w);
ie_considera_estab_agenda_w := Obter_Param_Usuario(871, 648, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_considera_estab_agenda_w);
ie_gerar_prime_cme_disp_w := Obter_Param_Usuario(871, 649, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_gerar_prime_cme_disp_w);


ie_tipo_convenio_w	:= 	coalesce(obter_tipo_convenio(cd_convenio_p),0);

cd_especialidade_w	:=	obter_especialidade_medico(cd_medico_p,'C');

select	max(coalesce(cd_plano,cd_plano_agenda_p))
into STRICT	cd_plano_agenda_w
from	agenda_paciente
where	nr_sequencia = nr_sequencia_p;

select 		max(cd_estabelecimento)
into STRICT		cd_estab_agenda_w
from		agenda a,
			agenda_paciente b
where		a.cd_agenda = b.cd_agenda
and		    b.nr_sequencia = nr_sequencia_p;

if (ie_considera_estab_agenda_w = 'S') then
	cd_estab_cme_w := cd_estab_agenda_w;	
	cd_estab_opme_w := wheb_usuario_pck.get_cd_estabelecimento;
elsif (ie_considera_estab_agenda_w = 'O') then
	cd_estab_cme_w := wheb_usuario_pck.get_cd_estabelecimento;
	cd_estab_opme_w := cd_estab_agenda_w;
elsif (ie_considera_estab_agenda_w = 'CO') then
	cd_estab_cme_w := cd_estab_agenda_w;
	cd_estab_opme_w := cd_estab_agenda_w;
else
	cd_estab_cme_w := wheb_usuario_pck.get_cd_estabelecimento;
	cd_estab_opme_w := wheb_usuario_pck.get_cd_estabelecimento;
end if;

select  MAX(cd_agenda),
	MAX(ie_status_agenda),
	MAX(cd_convenio),
	MAX(nr_seq_proc_interno),
	MAX(cd_procedimento),
	MAX(ie_origem_proced)
into STRICT	cd_agenda_w,
	ie_status_agenda_w,
	cd_convenio_w,
	nr_seq_pro_interno_w,
	cd_procedimento_w,
	ie_origem_proced_w
from	agenda_paciente
where	nr_sequencia = nr_sequencia_p;


select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
into STRICT	ie_tem_medico_w
from 	proc_interno_cme 
where	cd_medico 			= cd_medico_p
and	nr_seq_proc_interno = nr_seq_proc_interno_p
and	((coalesce(cd_estabelecimento::text, '') = '') or (cd_estabelecimento = cd_estabelecimento_p));

select 	coalesce(max(nr_seq_proc_interno),0),
	max(ie_carater_cirurgia)
into STRICT	nr_seq_proc_interno_w,
	ie_carater_cirurgia_w
from	agenda_paciente
where	nr_sequencia = nr_sequencia_p;

if (ie_Gerar_equip_p	= 'S') then
	if (nr_seq_proc_interno_w > 0) then
	
		delete	FROM agenda_pac_equip
		where	nr_seq_agenda 		= nr_sequencia_p
		and	nr_seq_proc_interno	= nr_seq_proc_interno_w;
	end if;
	
select 		coalesce(MAX(a.cd_setor_exclusivo),0)
into STRICT		cd_setor_equipamento_w
from		agenda a,
		agenda_paciente b
where		a.cd_agenda 	= 	b.cd_agenda
and		b.nr_sequencia	= 	nr_sequencia_p;
	
	open c00;
	loop
	fetch c00 into
		nr_seq_classif_equip_w,
		cd_equipamento_proc_w,
		ie_obrigatorio_w;
	EXIT WHEN NOT FOUND; /* apply on c00 */
		begin
		if (ie_consiste_w <> 'N') then
			begin
			if (nr_seq_classif_equip_w > 0) then
				ds_erro_equip_w := obter_se_classif_equip_disp(nr_sequencia_p, nr_seq_classif_equip_w, ds_erro_equip_w, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, 0, 'S');
			elsif (cd_equipamento_proc_w > 0) then
				ds_erro_equip_w := obter_se_equip_disp_cirur(nr_sequencia_p, cd_equipamento_proc_w, ds_erro_equip_w, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, 0, 'S');
			end if;
			
			if (ds_erro_equip_w IS NOT NULL AND ds_erro_equip_w::text <> '') then
				if (ie_consiste_w = 'S') then
					CALL gerar_inconsistencia_agenda(nr_sequencia_p,'N','E',ds_erro_equip_w,'GERAR_DADOS_PRE_AGENDA',nm_usuario_p);
				else	
					CALL gerar_inconsistencia_agenda(nr_sequencia_p,'S','E',ds_erro_equip_w,'GERAR_DADOS_PRE_AGENDA',nm_usuario_p);
				end if;	
			end if;	
			
			if (ds_erro_equip_w IS NOT NULL AND ds_erro_equip_w::text <> '') and (coalesce(ds_erro_w::text, '') = '') then
				ds_erro_w	:= substr(ds_erro_equip_w || chr(13) || chr(10) || ds_erro_w, 1, 255);
			end if;
			end;
		end if;

		
		if (ie_consiste_w = 'N') or (ie_consiste_w = 'A') or
			((ie_consiste_w = 'S') and (coalesce(ds_erro_equip_w::text, '') = '')) or
			(ie_consiste_w = 'E' AND ie_carater_cirurgia_w = 'U')  then
			begin
			select	nextval('agenda_pac_equip_seq')
			into STRICT	nr_sequencia_w
			;

			cd_equipamento_w	:= null;
			
			select 		a.cd_setor_exclusivo
			into STRICT		cd_setor_exclusivo_w
			from		agenda a,
					agenda_paciente b
			where		a.cd_agenda 	= 	b.cd_agenda
			and		b.nr_sequencia	= 	nr_sequencia_p;
					
			if (nr_seq_classif_equip_w > 0) then
				begin
				select	count(*)
				into STRICT	qt_equip_class_w
				from	equipamento
				where	cd_classificacao = nr_seq_classif_equip_w
				and 	coalesce(cd_setor_atendimento,cd_setor_exclusivo_w) = cd_setor_exclusivo_w;		
				
				if (qt_equip_class_w = 1) then
					begin
					select	cd_equipamento
					into STRICT	cd_equipamento_w
					from	equipamento
					where	cd_classificacao = nr_seq_classif_equip_w
					and 	coalesce(cd_setor_atendimento,cd_setor_exclusivo_w) = cd_setor_exclusivo_w;
					end;
				end if;
				end;
			end if;
			
			nr_seq_classif_equip_ww	:= null;		
			if (nr_seq_classif_equip_w > 0) then
				begin
				nr_seq_classif_equip_ww	:= nr_seq_classif_equip_w;
				cd_equipamento_ww	:= cd_equipamento_w;
				end;
			elsif (cd_equipamento_proc_w > 0) then
				cd_equipamento_ww	:= cd_equipamento_proc_w;
			end if;

			if (ie_classif_equip_w = 'C') then
				cd_equipamento_ww	:= null;
			else
				nr_seq_classif_equip_ww	:= null;
			end if;			
				
			ie_status_equipamento_w := null;
			if (coalesce(cd_equipamento_proc_w, 0) > 0) then
				ie_status_equipamento_w := obter_status_equipamento(nr_sequencia_p,cd_equipamento_proc_w,'S');
			end if;
			
			insert into agenda_pac_equip(
				nr_seq_classif_equip,
				nr_sequencia,
				nr_seq_agenda,
				dt_atualizacao,
				nm_usuario,
				ie_origem_inf,
				cd_equipamento,
				nr_seq_proc_interno,
				ie_obrigatorio,
				nm_usuario_nrec,
				dt_atualizacao_nrec,
				ie_status_equipamento)
			values (
				nr_seq_classif_equip_ww,
				nr_sequencia_w,
				nr_sequencia_p,
				clock_timestamp(),
				nm_usuario_p,
				'I',
				cd_equipamento_ww,
				nr_seq_proc_interno_p,
				ie_obrigatorio_w,
				nm_usuario_p,
				clock_timestamp(),
				ie_status_equipamento_w);
				
			CALL enviar_email_regra_equipamento( nr_sequencia_p, 'AE', nm_usuario_p, cd_estabelecimento_p, cd_equipamento_ww);
			
			end;
		end if;	
		end;	
	end loop;
	close c00;
end if;





if (ie_Gerar_cme_p	= 'S') then
	if (nr_seq_proc_interno_w > 0) then

		delete	FROM agenda_pac_cme
		where	nr_seq_agenda 		= nr_sequencia_p
		and	nr_seq_proc_interno	= nr_seq_proc_interno_w;
	end if;
	
	if (ie_gerar_prime_cme_disp_w = 'S') then
		begin
		ds_erro_cme_w := Gerar_unico_cme_agenda(nm_usuario_p, nr_sequencia_p, nr_seq_proc_interno_p, cd_estab_cme_w, cd_especialidade_w, cd_medico_p, ie_GerarCMEIndividualizado_w, ie_tem_medico_w, ie_consiste_cme_w, ds_erro_cme_w);
		if (ds_erro_cme_w IS NOT NULL AND ds_erro_cme_w::text <> '') and (coalesce(ds_erro_w::text, '') = '') then
			ds_erro_w:= substr(ds_erro_cme_w, 1, 255);
		end if; 								
		end;
	else

		open c01;
		loop
			fetch c01	into
				nr_seq_conjunto_w,
				qt_conjunto_w,
				ie_obrigatorio_w,
				nr_seq_grupo_w;
			EXIT WHEN NOT FOUND; /* apply on c01 */
			begin
			ie_status_cme_w := null;
			
			select	coalesce(max(cd_medico),'0')
			into STRICT	cd_medico_conjunto_w
			from	cm_conjunto
			where	nr_sequencia		= nr_seq_conjunto_w;
			
			if (cd_medico_conjunto_w 	= '0') or (cd_medico_conjunto_w	= coalesce(cd_medico_p, cd_medico_conjunto_w)) then
				begin
			
				/* Consistir conforme o parâmetro [101] */

				if (ie_consiste_cme_w <> 'N') AND (nr_seq_grupo_w = 0) then
					begin
					ds_erro_cme_w := cme_consistir_conj_agenda(nr_sequencia_p, nr_seq_conjunto_w, 'S', nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ds_erro_cme_w);
					ie_status_cme_w := obter_status_cme_agenda(nr_sequencia_p,nr_seq_conjunto_w,'S');
										
					if (ds_erro_cme_w IS NOT NULL AND ds_erro_cme_w::text <> '') then
						if (ie_consiste_cme_w = 'S') then
							CALL gerar_inconsistencia_agenda(nr_sequencia_p,'N','C',ds_erro_cme_w,'GERAR_DADOS_PRE_AGENDA',nm_usuario_p);
						else	
							CALL gerar_inconsistencia_agenda(nr_sequencia_p,'S','C',ds_erro_cme_w,'GERAR_DADOS_PRE_AGENDA',nm_usuario_p);
						end if;	
					end if;	

					if (ds_erro_cme_w IS NOT NULL AND ds_erro_cme_w::text <> '') and (coalesce(ds_erro_w::text, '') = '') then
						ds_erro_w	:= substr(ds_erro_cme_w || chr(13) || chr(10) || ds_erro_w, 1, 255);
					end if;
					end;
				end if;
				
				if (ie_consiste_cme_w <> 'N') and (nr_seq_grupo_w > 0) then
					begin
								
					ds_erro_cme_w := cme_consistir_grupo_agenda(nr_sequencia_p, nr_seq_grupo_w, 'S', nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ds_erro_cme_w);
					
					if (ds_erro_cme_w IS NOT NULL AND ds_erro_cme_w::text <> '') then
						if (ie_consiste_cme_w = 'S') then
							CALL gerar_inconsistencia_agenda(nr_sequencia_p,'N','C',ds_erro_cme_w,'GERAR_DADOS_PRE_AGENDA',nm_usuario_p);
						else	
							CALL gerar_inconsistencia_agenda(nr_sequencia_p,'S','C',ds_erro_cme_w,'GERAR_DADOS_PRE_AGENDA',nm_usuario_p);
						end if;	
					end if;	

					if (ds_erro_cme_w IS NOT NULL AND ds_erro_cme_w::text <> '') and (coalesce(ds_erro_w::text, '') = '') then
						ds_erro_w	:= substr(ds_erro_cme_w || chr(13) || chr(10) || ds_erro_w, 1, 255);
					end if;
					end;
				end if;


				if (ie_consiste_cme_w = 'N') or (ie_consiste_cme_w = 'A') or
					((ie_consiste_cme_w = 'S') and (coalesce(ds_erro_cme_w::text, '') = '')) then
					begin
					
					select	nextval('agenda_pac_cme_seq')
					into STRICT	nr_sequencia_w
					;

					insert into agenda_pac_cme(
						nr_seq_conjunto,
						qt_conjunto,
						nr_sequencia,
						nr_seq_agenda,
						dt_atualizacao,
						nm_usuario,
						ie_origem_inf,
						ie_obrigatorio,
						nr_seq_proc_interno,
						nr_seq_grupo,
						ie_status_cme,
						dt_atualizacao_nrec,
						nm_usuario_nrec)
					values (
						nr_seq_conjunto_w,
						qt_conjunto_w,
						nr_sequencia_w,
						nr_sequencia_p,
						clock_timestamp(),
						nm_usuario_p,
						'I',
						ie_obrigatorio_w,
						nr_seq_proc_interno_p,
						CASE WHEN nr_seq_grupo_w=0 THEN null  ELSE nr_seq_grupo_w END ,
						ie_status_cme_w,
						clock_timestamp(),
						nm_usuario_p);
					end;
				end if;
				end;
			end if;
			end;
		end loop;
		close c01;
	end if;

ds_erro_p	:= substr(ds_erro_w,1,255);
ds_erro_2_p	:= substr(ds_erro_w,1,255);

end if;

if (ie_gerar_opme_p	= 'S') then

	if (nr_seq_proc_interno_w > 0) then
		delete	FROM agenda_pac_opme
		where	nr_seq_agenda 		= nr_sequencia_p
		and	nr_seq_proc_interno	= nr_seq_proc_interno_w;
		commit;
	end if;
	
	select	MAX(cd_procedimento),
		MAX(ie_origem_proced)
	into STRICT	cd_procedimento_w,
			ie_origem_proced_w
	from	agenda_paciente
	where	nr_sequencia = nr_sequencia_p;
		
	select	coalesce(max('S'),'N')
	into STRICT	ie_pacote_w
	from	pacote
	where	cd_proced_pacote	=	cd_procedimento_p
	and	ie_origem_proced	=	ie_origem_proced_p
	and	cd_convenio		=	cd_convenio_p
	and	ie_situacao		=	'A';
	
	qt_idade_w	:= obter_idade_pf(cd_pessoa_fisica_p,clock_timestamp(),'A');
	ie_sexo_w	:= Obter_Sexo_PF(cd_pessoa_fisica_p,'C');
	select	max(hr_inicio),
		substr(max(ds_observacao),1,255)
	into STRICT	hr_inicio_w,
		ds_observacao_ww
	from	agenda_paciente
	where	nr_sequencia = nr_sequencia_p;
			
	open c02;
	loop
		fetch c02 into
			cd_material_w,
			qt_material_w,
			ie_padrao_w,
			cd_cgc_w,
			ds_observacao_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
		begin
			ds_erro_opme_w := null;
		
			if (ie_consistir_material_opme_w <> 'N') and (Sus_Obter_Se_Mat_Compativel(cd_estabelecimento_p,cd_convenio_p,nr_seq_proc_interno_p,cd_procedimento_p,ie_origem_proced_p,cd_material_w) = 'N') then
				ds_erro_opme_w := wheb_mensagem_pck.get_texto(278815, 'CD_MATERIAL_P=' || substr(obter_desc_material(cd_material_w),1,80));
			end if;	
			
			if (ds_erro_opme_w IS NOT NULL AND ds_erro_opme_w::text <> '') then
				if (ie_consistir_material_opme_w = 'S') then
					CALL gerar_inconsistencia_agenda(nr_sequencia_p,'N','O',ds_erro_opme_w,'GERAR_DADOS_PRE_AGENDA',nm_usuario_p);
				else	
					CALL gerar_inconsistencia_agenda(nr_sequencia_p,'S','O',ds_erro_opme_w,'GERAR_DADOS_PRE_AGENDA',nm_usuario_p);
				end if;	
			end if;
			
			if (coalesce(ds_erro_opme_w::text, '') = '') or (ie_consistir_material_opme_w <> 'S') then
		
				select	nextval('agenda_pac_opme_seq')
				into STRICT	nr_sequencia_w
				;

				insert into agenda_pac_opme(
					cd_material,
					qt_material,
					nr_sequencia,
					nr_seq_agenda,
					dt_atualizacao,
					nm_usuario,
					nr_seq_apres,
					ie_origem_inf,
					ie_autorizado,
					ie_padrao,
					cd_cgc,
					nr_seq_proc_interno,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					ds_observacao)			
				values (
					cd_material_w,
					qt_material_w,
					nr_sequencia_w,
					nr_sequencia_p,
					clock_timestamp(),
					nm_usuario_p,
					500,
					'I',
					'P',
					ie_padrao_w,
					cd_cgc_w,
					nr_seq_proc_interno_p,
					clock_timestamp(),
					nm_usuario_p,
					CASE WHEN ie_registra_observacao_w='S' THEN ds_observacao_w  ELSE null END );
			end if;	
			
			open c06;
			loop
			fetch c06 into
				nr_seq_evento_w;
			EXIT WHEN NOT FOUND; /* apply on c06 */
				begin
				CALL gerar_evento_agenda_trigger(	nr_seq_evento_w,
								null,
								cd_pessoa_fisica_p,
								null,
								nm_usuario_p,
								null,
								hr_inicio_w,
								cd_medico_p,
								cd_procedimento_p,
								ie_origem_proced_p,
								null,
								cd_material_w,
								qt_material_w,
								'P',
								null,
								null,
								'N',
								nr_sequencia_p,
								null,
								null,
								null,
								null,
								ds_observacao_ww);
				end;
			end loop;
			close c06;	

			CALL gerar_autor_regra(null,
					null,
					null,
					null,
					null,
					null,
					'AP',
					nm_usuario_p,
					nr_sequencia_p,
					null,
					null,
					null,
					nr_sequencia_w,
					null,
					'',
					'',
					'');
		end;
	end loop;
	close c02;
end if;
	
if (ie_gerar_servico_p	= 'S') then
	open c03;
	loop
		fetch c03	into
			nr_seq_proc_servico_w;
		EXIT WHEN NOT FOUND; /* apply on c03 */
		begin
	
			select	nextval('agenda_pac_servico_seq')
			into STRICT	nr_sequencia_w
			;

			insert into agenda_pac_servico(
				nr_seq_proc_servico,
				nr_sequencia,
				nr_seq_agenda,
				dt_atualizacao,
				nm_usuario,
				ie_origem_inf,
				ie_status,
				dt_atualizacao_nrec,
				nm_usuario_nrec)
			values (
				nr_seq_proc_servico_w,
				nr_sequencia_w,
				nr_sequencia_p,
				clock_timestamp(),
				nm_usuario_p,
				'I',
				'G',
				clock_timestamp(),
				nm_usuario_p);
			ie_servico_w := 'S';
		end;
	end loop;
	close c03;
end if;

if (ie_Gerar_caixa_opme_p	= 'S') then
	open c04;
	loop
		fetch c04	into
			nr_seq_tipo_caixa_opme_w,
			ie_padrao_w;
		EXIT WHEN NOT FOUND; /* apply on c04 */
		begin

			select	nextval('agenda_pac_caixa_opme_seq')
			into STRICT	nr_sequencia_w
			;

			insert into agenda_pac_caixa_opme(
				nr_seq_tipo_caixa_opme,
				nr_sequencia,
				nr_seq_agenda,
				dt_atualizacao,
				nm_usuario,
				nr_seq_apres,
				ie_origem_inf,
				ie_autorizado,
				ie_padrao,
				dt_atualizacao_nrec,
				nm_usuario_nrec)
			values (
				nr_seq_tipo_caixa_opme_w,
				nr_sequencia_w,
				nr_sequencia_p,
				clock_timestamp(),
				nm_usuario_p,
				500,
				'I',
				'P',
				ie_padrao_w,
				clock_timestamp(),
				nm_usuario_p);
		CALL gerar_itens_caixa_opme_agenda(nr_seq_tipo_caixa_opme_w, nr_sequencia_w, 'I', nm_usuario_p);		
		end;
	end loop;
	close c04;
end if;

if (nr_sequencia_p > 0) then
	select	nextval('agenda_pac_orientacao_seq')
	into STRICT	nr_sequencia_w
	;
	
	select	coalesce(max('S'),'N')
	into STRICT	ie_possui_registro_w
	from	agenda_paciente
	where	nr_sequencia = nr_sequencia_p;
		
	if (ie_possui_registro_w = 'S') then
		insert into agenda_pac_orientacao(
			ds_orientacao,
			nr_sequencia,
			nr_seq_agenda,
			dt_atualizacao,
			nm_usuario,
         dt_atualizacao_nrec,
			nm_usuario_nrec)
		values (
			ds_orientacao_p,
			nr_sequencia_w,
			nr_sequencia_p,
			clock_timestamp(),
			nm_usuario_p,
         clock_timestamp(),
			nm_usuario_p);
	end if;
end if;

if (ie_modo_obter_sangue_w in ('S','A'))	then
	open c05;
	loop
		fetch c05	into
			nr_seq_proc_servico_w,
			ie_tipagem_sanguinea_w,
			qt_servico_w;
		EXIT WHEN NOT FOUND; /* apply on c05 */
		begin
		
		if (ie_modo_obter_sangue_w = 'A') then
			select	max(ie_tipagem_sanguinea)
			into STRICT	ie_tipagem_sanguinea_w
			from	proc_interno
			where	nr_sequencia	=	nr_seq_proc_interno_p;	
		end if;
		
		insert into agenda_pac_sangue(
			nr_sequencia,
			nr_seq_proc_interno,
			nr_seq_agenda,
			qt_bolsas_sangue,
			ie_tipagem_sanguinea,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec)
			SELECT nextval('agenda_pac_sangue_seq'),
			nr_seq_proc_servico_w,
			nr_sequencia_p,
			qt_servico_w,
			ie_tipagem_sanguinea_w,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p;
		end;
	end loop;
	close c05;
end if;	

open c07;
loop
fetch c07	into
	nr_seq_proc_servico_w;
EXIT WHEN NOT FOUND; /* apply on c07 */
	begin
	select	nextval('agenda_pac_servico_seq')
	into STRICT	nr_sequencia_w
	;

	insert into agenda_pac_servico(
		nr_seq_proc_servico,
		nr_sequencia,
		nr_seq_agenda,
		dt_atualizacao,
		nm_usuario,
		ie_origem_inf,
		ie_status,
		dt_atualizacao_nrec,
		nm_usuario_nrec)
	values (
		nr_seq_proc_servico_w,
		nr_sequencia_w,
		nr_sequencia_p,
		clock_timestamp(),
		nm_usuario_p,
		'I',
		'G',
		clock_timestamp(),
		nm_usuario_p);
		
	ie_servico_w := 'S';	
	end;
end loop;
close c07;

if (ie_servico_w = 'S') then
	CALL enviar_email_regra(nr_sequencia_p,'IS',nm_usuario_p,cd_estabelecimento_p);
end if;	

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_dados_pre_agenda ( cd_procedimento_p bigint default null, ie_origem_proced_p bigint default null, nr_sequencia_p bigint DEFAULT NULL, nr_seq_proc_interno_p bigint DEFAULT NULL, cd_medico_p text DEFAULT NULL, cd_pessoa_fisica_p text DEFAULT NULL, nm_usuario_p text DEFAULT NULL, cd_convenio_p bigint DEFAULT NULL, cd_plano_agenda_p text default null, ds_orientacao_p text DEFAULT NULL, cd_estabelecimento_p bigint DEFAULT NULL, ie_gerar_equip_p text DEFAULT NULL, ie_gerar_cme_p text DEFAULT NULL, ie_gerar_opme_p text DEFAULT NULL, ie_Gerar_servico_p text DEFAULT NULL, ie_gerar_caixa_opme_p text DEFAULT NULL, ds_erro_p INOUT text DEFAULT NULL, ds_erro_2_p INOUT text DEFAULT NULL) FROM PUBLIC;

