-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_procedimentos_int_ap_ws ( cd_perfil_p bigint, nr_prescricao_p bigint, nr_acesso_dicom_p text, cd_procedimento_tuss_p bigint, dt_procedimento_p timestamp, qt_procedimento_p bigint, nm_usuario_p text, ds_observacao_p text, ds_erro_p INOUT text) AS $body$
DECLARE


nr_sequencia_w		procedimento_paciente.nr_sequencia%type;
cd_procedimento_w	procedimento_paciente.cd_procedimento%type;
ie_origem_proced_w	procedimento_paciente.ie_origem_proced%type;
nr_seq_proc_interno_w	procedimento_paciente.nr_seq_proc_interno%type;
cd_setor_atendimento_w	procedimento_paciente.cd_setor_atendimento%type;
nr_seq_atepacu_w	procedimento_paciente.nr_seq_atepacu%type;
dt_entrada_unidade_w	procedimento_paciente.dt_entrada_unidade%type;
cd_medico_w		procedimento_paciente.cd_medico_executor%type;
qt_procedimento_w	procedimento_paciente.qt_procedimento%type;
nr_interno_conta_w	procedimento_paciente.nr_interno_conta%type;

nr_atendimento_w	atendimento_paciente.nr_atendimento%type;
cd_estabelecimento_w	atendimento_paciente.cd_estabelecimento%type;
ie_tipo_atendimento_w	atendimento_paciente.ie_tipo_atendimento%type;
cd_convenio_w		atend_categoria_convenio.cd_convenio%type;
cd_categoria_w		atend_categoria_convenio.cd_categoria%type;
cd_plano_convenio_w	atend_categoria_convenio.cd_plano_convenio%type;
cd_tipo_acomodacao_w	atend_categoria_convenio.cd_tipo_acomodacao%type;

ie_medico_executor_w	consiste_setor_proc.ie_medico_executor%type;
cd_cgc_regra_w		consiste_setor_proc.cd_cgc%type;
cd_medico_regra_w	consiste_setor_proc.cd_medico_executor%type;
cd_pessoa_regra_w	consiste_setor_proc.cd_pessoa_fisica%type;

ds_retorno_w		varchar(2000);
ie_bloqueia_agenda_w	varchar(10);
ie_regra_w		varchar(10);
nr_seq_regra_w		bigint;

dt_procedimento_w	timestamp;

qt_passagem_w		bigint;

e_erro			exception;
ds_erro_w		varchar(2000);
ds_msg_err_w		varchar(255);
					

BEGIN

if (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') then

	begin

	begin
	select	a.nr_atendimento,
		a.cd_setor_atendimento,
		a.cd_medico
	into STRICT	nr_atendimento_w,
		cd_setor_atendimento_w,
		cd_medico_w
	from	prescr_medica a
	where	a.nr_prescricao = nr_prescricao_p;
	exception
		when others then
		nr_atendimento_w	:= 0;
		ds_erro_w	:= obter_desc_expressao(503564,'');
		raise e_erro;
	end;
	
	if (coalesce(nr_acesso_dicom_p,0) > 0) then
		select	max(cd_setor_atendimento),
			max(nr_seq_proc_interno)
		into STRICT 	cd_setor_atendimento_w,
			nr_seq_proc_interno_w
		from	prescr_procedimento
		where	nr_prescricao = nr_prescricao_p
		and	nr_acesso_dicom = nr_acesso_dicom_p;
	end if;

	begin
	select	cd_estabelecimento,
		cd_convenio,
		cd_categoria,
		cd_plano_convenio,
		ie_tipo_atendimento,
		cd_tipo_acomod_conv
	into STRICT	cd_estabelecimento_w,
		cd_convenio_w,
		cd_categoria_w,
		cd_plano_convenio_w,
		ie_tipo_atendimento_w,
		cd_tipo_acomodacao_w
	from	atendimento_paciente_v
	where	nr_atendimento = nr_atendimento_w;
	exception
		when others then
		nr_atendimento_w	:= 0;
		ds_erro_w	:= obter_desc_expressao(621578,'');
		raise e_erro;
	end;
		
	dt_procedimento_w	:= coalesce(dt_procedimento_p, clock_timestamp());
		
	if (coalesce(cd_procedimento_tuss_p,0) > 0) then
		select	max(nr_seq_proc_interno)
		into STRICT	nr_seq_proc_interno_w
		from	proc_interno_conv_tuss
		where	cd_procedimento = cd_procedimento_tuss_p
		and	coalesce(cd_convenio, coalesce(cd_convenio_w,0)) = coalesce(cd_convenio_w,0);

		if (coalesce(nr_seq_proc_interno_w,0) = 0) then
			select	max(nr_sequencia)
			into STRICT	nr_seq_proc_interno_w
			from	proc_interno
			where	cd_procedimento_tuss = cd_procedimento_tuss_p;			
		end if;
	end if;	
	
	select	count(*)
	into STRICT	qt_passagem_w
	from	atend_paciente_unidade
	where	nr_atendimento = nr_atendimento_w
	and	cd_setor_atendimento = cd_setor_atendimento_w
	and	dt_entrada_unidade <= dt_procedimento_w;

	if (qt_passagem_w = 0) then
		begin
		CALL gerar_passagem_setor_atend(nr_atendimento_w, cd_setor_atendimento_w, dt_procedimento_w, 'N', nm_usuario_p);
		exception
			when others then
			ds_erro_w	:= obter_desc_expressao(738317,'');
			raise e_erro;
		end;
	end if;

	select	max(nr_seq_interno)
	into STRICT	nr_seq_atepacu_w
	from	atend_paciente_unidade
	where	nr_atendimento = nr_atendimento_w
	and	cd_setor_atendimento = cd_setor_atendimento_w
	and	dt_entrada_unidade <= dt_procedimento_w;
	
	if (coalesce(nr_seq_atepacu_w::text, '') = '') then
		ds_erro_w	:= obter_desc_expressao(738319,'');
		raise e_erro;			
	end if;
		
	select	max(dt_entrada_unidade)
	into STRICT	dt_entrada_unidade_w
	from	atend_paciente_unidade
	where	nr_seq_interno = nr_seq_atepacu_w;
	
	begin
	
	if (NR_SEQ_PROC_INTERNO_W != 0) then
		SELECT * FROM Obter_Proc_Tab_Interno_Conv(nr_seq_proc_interno_w, cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, cd_plano_convenio_w, cd_setor_atendimento_w, cd_procedimento_w, ie_origem_proced_w, null, dt_procedimento_w, cd_tipo_acomodacao_w, null, null, null, ie_tipo_atendimento_w, null, null, null) INTO STRICT cd_procedimento_w, ie_origem_proced_w;
	
		SELECT * FROM consiste_plano_mat_proc(cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, cd_plano_convenio_w, null, cd_procedimento_w, ie_origem_proced_w, null, ie_tipo_atendimento_w, 0, 0, null, nr_seq_proc_interno_w, ds_retorno_w, ie_bloqueia_agenda_w, ie_regra_w, nr_seq_regra_w) INTO STRICT ds_retorno_w, ie_bloqueia_agenda_w, ie_regra_w, nr_seq_regra_w;
		
		SELECT * FROM consiste_medico_executor(cd_estabelecimento_w, cd_convenio_w, cd_setor_atendimento_w, cd_procedimento_w, ie_origem_proced_w, ie_tipo_atendimento_w, null, nr_seq_proc_interno_w, ie_medico_executor_w, cd_cgc_regra_w, cd_medico_regra_w, cd_pessoa_regra_w, cd_medico_w, dt_procedimento_w, null, null, null, null, null) INTO STRICT ie_medico_executor_w, cd_cgc_regra_w, cd_medico_regra_w, cd_pessoa_regra_w;
		
		select	nextval('procedimento_paciente_seq')
		into STRICT	nr_sequencia_w
		;
		
		begin
		insert into procedimento_paciente(
			nr_sequencia,
			nr_atendimento,
			dt_atualizacao,
			nm_usuario,
			nm_usuario_original,
			cd_procedimento,
			ie_origem_proced,
			nr_seq_proc_interno,
			qt_procedimento,
			dt_procedimento,
			dt_conta,
			cd_convenio,
			cd_categoria,
			nr_seq_atepacu,
			cd_setor_atendimento,
			dt_entrada_unidade,
			cd_setor_paciente,
			cd_medico_executor,
			cd_pessoa_fisica,
			cd_cgc_prestador,
			tx_anestesia,
			tx_procedimento,
			tx_medico,
			ie_valor_informado,
			ie_auditoria,
			ie_video,
			ie_guia_informada,
			ie_dispersao,
			ie_intercorrencia,
			ie_proc_princ_atend,
			ds_observacao
		) values (
			nr_sequencia_w,
			nr_atendimento_w,
			clock_timestamp(),
			nm_usuario_p,
			nm_usuario_p,
			cd_procedimento_w,
			ie_origem_proced_w,
			nr_seq_proc_interno_w,
			coalesce(qt_procedimento_p,1),
			dt_procedimento_w,
			dt_procedimento_w,
			cd_convenio_w,
			cd_categoria_w,
			nr_seq_atepacu_w,
			cd_setor_atendimento_w,
			dt_entrada_unidade_w,
			cd_setor_atendimento_w,
			coalesce(cd_medico_regra_w, cd_medico_w),
			cd_pessoa_regra_w,
			cd_cgc_regra_w,
			100,
			100,
			100,
			'N',
			'N',
			'N',
			'N',
			'N',
			'N',
			'N',
			ds_observacao_p
		);
		exception
			when others then
			ds_erro_w	:= obter_desc_expressao(738321,'');
			raise e_erro;
		end;
		
		begin
		CALL atualiza_preco_procedimento(nr_sequencia_w, cd_convenio_w, nm_usuario_p);
		exception
			when others then
			ds_erro_w	:= obter_desc_expressao(619362,'');
			raise e_erro;
		end;
		
		select	max(nr_interno_conta)
		into STRICT	nr_interno_conta_w
		from	procedimento_paciente
		where	nr_sequencia = nr_sequencia_w;
		
		begin
		CALL gerar_lancamento_automatico(nr_atendimento_w, null, 34, nm_usuario_p, nr_sequencia_w, null, null, null, null, nr_interno_conta_w);
		exception
			when others then
			ds_erro_w	:= obter_desc_expressao(738323,'');
			raise e_erro;
		end;
		
		begin
		CALL gerar_autor_regra(nr_atendimento_w, null, nr_sequencia_w, null, null, null, 'EP', nm_usuario_p, null, nr_seq_proc_interno_w, null, null, null, null, '', '', '');
		exception
			when others then
			ds_erro_w	:= obter_desc_expressao(755534,'');
			raise e_erro;
		end;	
	
	end if;
	
	exception
		when others then
		ds_erro_w	:= obter_desc_expressao(738325,'');
		raise e_erro;
		
	end;
	
	exception
	
		when e_erro then
		rollback;
		ds_erro_p	:= ds_erro_w;
		
		when others then
		rollback;		
		ds_erro_p	:= substr(sqlerrm,1,255);
	
	end;
	
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_procedimentos_int_ap_ws ( cd_perfil_p bigint, nr_prescricao_p bigint, nr_acesso_dicom_p text, cd_procedimento_tuss_p bigint, dt_procedimento_p timestamp, qt_procedimento_p bigint, nm_usuario_p text, ds_observacao_p text, ds_erro_p INOUT text) FROM PUBLIC;

