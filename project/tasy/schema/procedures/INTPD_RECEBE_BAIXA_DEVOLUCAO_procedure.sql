-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE intpd_recebe_baixa_devolucao ( nr_sequencia_p bigint, xml_p xml) AS $body$
DECLARE


_ora2pg_r RECORD;
devolucao_material_pac_w	devolucao_material_pac%rowtype;
item_dev_material_pac_w	item_devolucao_material_pac%rowtype;
reg_integracao_w		gerar_int_padrao.reg_integracao_conv;
ie_conversao_w		intpd_eventos_sistema.ie_conversao%type;
nr_seq_projeto_xml_w	intpd_eventos_sistema.nr_seq_projeto_xml%type;
nr_seq_sistema_w		intpd_eventos_sistema.nr_seq_sistema%type;
nr_seq_regra_w		conversao_meio_externo.nr_seq_regra%type;
ie_sistema_externo_w	varchar(15);
nr_seq_lote_agrup_w	bigint;
ds_erro_w		varchar(4000);
i			integer;

cd_material_w			material.cd_material%type;
qt_material_w			double precision;
nr_seq_lote_fornec_w	material_lote_fornec.nr_sequencia%type;
nr_seq_loteagrup_w		bigint;
cd_kit_mat_w			integer;
ds_validade_w			varchar(10);
ds_material_w			varchar(255);
cd_unid_med_w			varchar(30);
nr_etiqueta_lp_w		varchar(10);
qt_minutos_w			bigint;
cd_estabelecimento_w	estabelecimento.cd_estabelecimento%type;

cd_perfil_w				perfil.cd_perfil%type;
nm_usuario_w			usuario.nm_usuario%type;

/*'Efetua a consulta transformando o elemento XML num tipo de tabela'*/

c01 CURSOR FOR
SELECT	*
from	xmltable('/STRUCTURE/MATERIAL_RETURN' passing xml_p columns
	NR_DEVOLUCAO		bigint	path	'NR_RETURN',
	DT_BAIXA_TOTAL		timestamp		path	'DT_TOTAL_SETTLEMENT',
	cd_perfil			bigint	path	'CD_PROFILE',
	xml_itens			xml		path	'ITEMS');

c01_w	c01%rowtype;

/*'Efetua a consulta transformando o elemento XML num tipo de tabela'*/

c02 CURSOR FOR
SELECT	*
from	xmltable('/ITEMS/ITEM_MATERIAL_RETURN' passing c01_w.xml_itens columns
	NR_SEQUENCIA			bigint		path	'NR_SEQUENCE',
	CD_MATERIAL				integer		path	'CD_MATERIAL',
	QT_MATERIAL				varchar(40)	path	'QT_MATERIAL',
	NR_SEQ_LOTE_FORNEC		varchar(10)	path	'NR_SEQ_SUPPLIER_BATCH',
	CD_CGC_FORNEC			varchar(40)	path	'CD_SUPPLIER_CODE',
	CD_PESSOA_FISICA_RECEB	varchar(10)	path	'CD_RECEIPT_PERSON',
	IE_TIPO_BAIXA_ESTOQUE	varchar(3)		path	'IE_STOCK_SETTLEMENT_TYPE',
	IE_BAIXA				varchar(1)		path	'IE_SETTLEMENT',
	NM_USUARIO_RECEB		varchar(15)	path	'NM_USER_RECEIPT',
	CD_LOCAL_ESTOQUE		smallint		path	'CD_STOCK_LOCATION');
	
c02_w	c02%rowtype;


BEGIN
/*'Atualiza o status da fila para Em processamento'*/

update	intpd_fila_transmissao
set	ie_status = 'R'
where	nr_sequencia = nr_sequencia_p;
/*'Realiza o commit para nao alterar o status de processamento em caso de rollback por existir consistencia. Existe tratamento de excecao abaixo para colocar o status de erro em caso de falha'*/

commit;

cd_perfil_w		:= wheb_usuario_pck.get_cd_perfil;
nm_usuario_w	:= wheb_usuario_pck.get_nm_usuario;
CALL wheb_usuario_pck.set_nm_usuario('WMS');

/*'Inicio de controle de falha'*/

begin

/*'Busca os dados da regra do registro da fila que esta em processamento'*/

select	coalesce(b.ie_conversao,'I'),
	nr_seq_sistema,
	nr_seq_projeto_xml,
	nr_seq_regra_conv
into STRICT	ie_conversao_w,
	nr_seq_sistema_w,
	nr_seq_projeto_xml_w,
	nr_seq_regra_w
from	intpd_fila_transmissao a,
	intpd_eventos_sistema b
where	a.nr_seq_evento_sistema = b.nr_sequencia
and	a.nr_sequencia = nr_sequencia_p;

ie_sistema_externo_w	:=	nr_seq_sistema_w;

/*'Alimenta as informacoes iniciais de controle e consistencia de cada atributo do XML'*/

reg_integracao_w.nr_seq_fila_transmissao	:= nr_sequencia_p;
reg_integracao_w.ie_envio_recebe		:= 'R';
reg_integracao_w.ie_sistema_externo		:= ie_sistema_externo_w;
reg_integracao_w.ie_conversao		:= ie_conversao_w;
reg_integracao_w.nr_seq_projeto_xml		:= nr_seq_projeto_xml_w;
reg_integracao_w.nr_seq_regra_conversao	:= nr_seq_regra_w;
reg_integracao_w.qt_reg_log			:= 0;
reg_integracao_w.intpd_log_receb.delete;


open c01;
loop
fetch c01 into	
	c01_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin

	CALL wheb_usuario_pck.set_cd_perfil(c01_w.cd_perfil);
	
	select	max(cd_estabelecimento)
	into STRICT	cd_estabelecimento_w
	from	devolucao_material_pac
	where	nr_devolucao = c01_w.nr_devolucao;

	open c02;
	loop
	fetch c02 into	
		c02_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
	
		SELECT * FROM converte_codigo_barras(coalesce(c02_w.nr_seq_lote_fornec, c02_w.cd_material), cd_estabelecimento_w, null, c02_w.cd_local_estoque, cd_material_w, qt_material_w, nr_seq_lote_fornec_w, nr_seq_loteagrup_w, cd_kit_mat_w, ds_validade_w, ds_material_w, cd_unid_med_w, nr_etiqueta_lp_w, ds_erro_w, 7029, null) INTO STRICT cd_material_w, qt_material_w, nr_seq_lote_fornec_w, nr_seq_loteagrup_w, cd_kit_mat_w, ds_validade_w, ds_material_w, cd_unid_med_w, nr_etiqueta_lp_w, ds_erro_w;
				
		if (ds_erro_w IS NOT NULL AND ds_erro_w::text <> '') then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(ds_erro_w);
		end if;
		
		CALL consiste_lote_fornec_regra(c02_w.cd_material,c02_w.nr_seq_lote_fornec,null,null,295);
		end;
	end loop;
	close c02;
	
	/*'Alimenta as informacaes de controle e consistencia referente ao Elemento a ser processado no momento. E importante manter dentro do cursor e neo fora.'*/

	reg_integracao_w.nm_tabela		:=	'DEVOLUCAO_MATERIAL_PAC';
	reg_integracao_w.nm_elemento	:=	'MATERIAL_RETURN';
	reg_integracao_w.nr_seq_visao	:=	null;	
	
	/*'Consiste cada atributo do XML'*/

	SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'NR_DEVOLUCAO', c01_w.nr_devolucao, 'N', devolucao_material_pac_w.nr_devolucao) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; devolucao_material_pac_w.nr_devolucao := _ora2pg_r.ds_valor_retorno_p;
	SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'DT_BAIXA_TOTAL', c01_w.dt_baixa_total, 'N', devolucao_material_pac_w.dt_baixa_total) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; devolucao_material_pac_w.dt_baixa_total := _ora2pg_r.ds_valor_retorno_p;
	
	nr_seq_lote_agrup_w := 0;
		
	open c02;
	loop
	fetch c02 into	
		c02_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin
		/*'Alimenta as informacaes de controle e consistencia referente ao Elemento a ser processado no momento. E importante manter dentro do cursor e nao fora.'*/

		reg_integracao_w.nm_tabela		:=	'ITEM_DEVOLUCAO_MATERIAL_PAC';
		reg_integracao_w.nm_elemento	:=	'ITEM_MATERIAL_RETURN';
		reg_integracao_w.nr_seq_visao	:=	null;
		
		SELECT * FROM converte_codigo_barras(coalesce(c02_w.nr_seq_lote_fornec, c02_w.cd_material), cd_estabelecimento_w, null, c02_w.cd_local_estoque, cd_material_w, qt_material_w, nr_seq_lote_fornec_w, nr_seq_loteagrup_w, cd_kit_mat_w, ds_validade_w, ds_material_w, cd_unid_med_w, nr_etiqueta_lp_w, ds_erro_w, 7029, null) INTO STRICT cd_material_w, qt_material_w, nr_seq_lote_fornec_w, nr_seq_loteagrup_w, cd_kit_mat_w, ds_validade_w, ds_material_w, cd_unid_med_w, nr_etiqueta_lp_w, ds_erro_w;

		/*'Consiste cada atributo do XML'*/

		SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'NR_SEQUENCIA', c02_w.nr_sequencia, 'N', item_dev_material_pac_w.nr_sequencia) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; item_dev_material_pac_w.nr_sequencia := _ora2pg_r.ds_valor_retorno_p;
		SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_MATERIAL', c02_w.cd_material, 'N', item_dev_material_pac_w.cd_material) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; item_dev_material_pac_w.cd_material := _ora2pg_r.ds_valor_retorno_p;
		SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'QT_MATERIAL', (somente_numero_virg_char(replace(c02_w.qt_material, '.', ',')))::numeric , 'N', item_dev_material_pac_w.qt_material) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; item_dev_material_pac_w.qt_material := _ora2pg_r.ds_valor_retorno_p;
		SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'NR_SEQ_LOTE_FORNEC', nr_seq_lote_fornec_w, 'N', item_dev_material_pac_w.nr_seq_lote_fornec) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; item_dev_material_pac_w.nr_seq_lote_fornec := _ora2pg_r.ds_valor_retorno_p;
		SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_CGC_FORNEC', c02_w.cd_cgc_fornec, 'N', item_dev_material_pac_w.cd_cgc_fornec) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; item_dev_material_pac_w.cd_cgc_fornec := _ora2pg_r.ds_valor_retorno_p;
		SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_PESSOA_FISICA_RECEB', c02_w.cd_pessoa_fisica_receb, 'N', item_dev_material_pac_w.cd_pessoa_fisica_receb) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; item_dev_material_pac_w.cd_pessoa_fisica_receb := _ora2pg_r.ds_valor_retorno_p;
		SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_TIPO_BAIXA_ESTOQUE', c02_w.ie_tipo_baixa_estoque, 'N', item_dev_material_pac_w.ie_tipo_baixa_estoque) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; item_dev_material_pac_w.ie_tipo_baixa_estoque := _ora2pg_r.ds_valor_retorno_p;
		SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_BAIXA', c02_w.ie_baixa, 'N', item_dev_material_pac_w.ie_baixa) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; item_dev_material_pac_w.ie_baixa := _ora2pg_r.ds_valor_retorno_p;
		SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'NM_USUARIO_RECEB', c02_w.nm_usuario_receb, 'N', item_dev_material_pac_w.nm_usuario_receb) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; item_dev_material_pac_w.nm_usuario_receb := _ora2pg_r.ds_valor_retorno_p;
		SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_LOCAL_ESTOQUE', c02_w.cd_local_estoque, 'N', item_dev_material_pac_w.cd_local_estoque) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; item_dev_material_pac_w.cd_local_estoque := _ora2pg_r.ds_valor_retorno_p;
		
		if (reg_integracao_w.qt_reg_log = 0) then
			begin
			
			ds_erro_w := recebe_baixa_dev_integracao(
					devolucao_material_pac_w.nr_devolucao, item_dev_material_pac_w.nr_sequencia, item_dev_material_pac_w.nm_usuario_receb, item_dev_material_pac_w.ie_tipo_baixa_estoque, item_dev_material_pac_w.qt_material, item_dev_material_pac_w.nr_seq_lote_fornec, item_dev_material_pac_w.cd_cgc_fornec, item_dev_material_pac_w.cd_pessoa_fisica_receb, item_dev_material_pac_w.cd_local_estoque, item_dev_material_pac_w.ie_baixa, ds_erro_w);
				
			if (coalesce(ds_erro_w::text, '') = '') then
				update	intpd_fila_transmissao
				set	ie_status = 'S',
					nr_seq_documento = devolucao_material_pac_w.nr_devolucao
				where	nr_sequencia = nr_sequencia_p;
			else
				reg_integracao_w.intpd_log_receb[reg_integracao_w.qt_reg_log].ds_log	:=	substr(ds_erro_w,1,4000);
				reg_integracao_w.qt_reg_log						:=	reg_integracao_w.qt_reg_log + 1;
			end if;
			
			end;
		end if;
		
		end;
	end loop;
	close c02;
	end;
end loop;
close c01;
exception
when others then
	begin
	ds_erro_w	:=	substr(sqlerrm,1,4000);
	rollback;
	update	intpd_fila_transmissao
	set	ie_status = 'E',
		ds_log = ds_erro_w
	where	nr_sequencia = nr_sequencia_p;
	end;
end;

if (reg_integracao_w.qt_reg_log > 0) then
	begin
	/*'Em caso de qualquer consistencia o sistema efetua rollback, atualiza o status para Erro e registra todos os logs de consistencia'*/

	rollback;
	
	update	intpd_fila_transmissao
	set	ie_status = 'E',
		ds_log = ds_erro_w
	where	nr_sequencia = nr_sequencia_p;
	
	for i in 0..reg_integracao_w.qt_reg_log-1 loop
		intpd_gravar_log_recebimento(nr_sequencia_p,reg_integracao_w.intpd_log_receb[i].ds_log,'INTPDTASY');
	end loop;
	end;
end if;

commit;

CALL wheb_usuario_pck.set_cd_perfil(cd_perfil_w);
CALL wheb_usuario_pck.set_nm_usuario(nm_usuario_w);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE intpd_recebe_baixa_devolucao ( nr_sequencia_p bigint, xml_p xml) FROM PUBLIC;

