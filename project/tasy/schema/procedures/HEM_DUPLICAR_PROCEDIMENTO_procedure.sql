-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE hem_duplicar_procedimento ( nr_seq_proc_p bigint, ie_pasta_p text, nm_usuario_p text, nr_atendimento_p bigint, nr_seq_proc_novo_p INOUT bigint) AS $body$
DECLARE


nr_seq_laudo_w		bigint;
nr_seq_proc_novo_w	bigint;
cd_estabelecimento_w	smallint;
cd_pessoa_fisica_w	hem_proc.cd_pessoa_fisica%type;
nr_procedimento_w	hem_proc.nr_procedimento%type;
nr_atendimento_w	hem_proc.nr_atendimento%type;
dt_procedimento_w	hem_proc.dt_procedimento%type;
cd_medico_resp_w	hem_proc.cd_medico_resp%type;
ie_classif_w		hem_proc.ie_classif%type;
nr_seq_motivo_w		hem_proc.nr_seq_motivo%type;
ie_acesso_w		hem_proc.ie_acesso%type;
ie_tipo_acesso_w	hem_proc.ie_tipo_acesso%type;
ie_vaso_acesso_w	hem_proc.ie_vaso_acesso%type;
ie_lat_acesso_w		hem_proc.ie_lat_acesso%type;
nr_introdutor_w		hem_proc.nr_introdutor%type;
cd_setor_exec_w		hem_proc.cd_setor_exec%type;
cd_setor_orig_w		hem_proc.cd_setor_orig%type;
ds_observacao_w		hem_proc.ds_observacao%type;
qt_min_fluoroscopia_w	hem_proc.qt_min_fluoroscopia%type;
qt_min_cine_w		hem_proc.qt_min_cine%type;
nr_seq_procedimento_w	hem_proc.nr_seq_procedimento%type;
ie_tipo_anestesia_w	hem_proc.ie_tipo_anestesia%type;
ie_exame_w		hem_proc.ie_exame%type;
ds_obs_laudo_w		hem_proc.ds_obs_laudo%type;
nr_seq_conduta_w	hem_proc.nr_seq_conduta%type;
nr_seq_complicacao_w	hem_proc.nr_seq_complicacao%type;
nr_seq_cirurgia_w	hem_proc.nr_seq_cirurgia%type;
ie_situacao_clinica_w	hem_proc.ie_situacao_clinica%type;
ie_complexidade_w	hem_proc.ie_complexidade%type;
nr_seq_ventric_ve_w	hem_proc.nr_seq_ventric_ve%type;
ds_laudo_w		hem_proc.ds_laudo%type;
ie_primaria_w		hem_proc.ie_primaria%type;
dt_entrada_w		hem_proc.dt_entrada%type;
dt_prim_insulf_w	hem_proc.dt_prim_insulf%type;

ie_pasta_w			varchar(1);


BEGIN
if (coalesce(nr_seq_proc_p,0) > 0) then

	select	nextval('hem_proc_seq'),
		cd_estabelecimento,
		cd_pessoa_fisica,
		nr_procedimento,
		nr_atendimento_p,
		dt_procedimento,
		cd_medico_resp,
		ie_classif,
		nr_seq_motivo,
		ie_acesso,
		ie_tipo_acesso,
		ie_vaso_acesso,
		ie_lat_acesso,
		nr_introdutor,
		cd_setor_exec,
		cd_setor_orig,
		ds_observacao,
		qt_min_fluoroscopia,
		qt_min_cine,
		nr_seq_procedimento,
		ie_tipo_anestesia,
		ie_exame,
		ds_obs_laudo,
		nr_seq_conduta,
		nr_seq_cirurgia,
		ie_situacao_clinica,
		ie_complexidade,
		nr_seq_ventric_ve,
		--ds_laudo,
		nr_seq_complicacao,
		ie_primaria,
		dt_entrada,
		dt_prim_insulf
	into STRICT	nr_seq_proc_novo_w,
		cd_estabelecimento_w,
		cd_pessoa_fisica_w,
		nr_procedimento_w,
		nr_atendimento_w,
		dt_procedimento_w,
		cd_medico_resp_w,
		ie_classif_w,
		nr_seq_motivo_w,
		ie_acesso_w,
		ie_tipo_acesso_w,
		ie_vaso_acesso_w,
		ie_lat_acesso_w,
		nr_introdutor_w,
		cd_setor_exec_w,
		cd_setor_orig_w,
		ds_observacao_w,
		qt_min_fluoroscopia_w,
		qt_min_cine_w,
		nr_seq_procedimento_w,
		ie_tipo_anestesia_w,
		ie_exame_w,
		ds_obs_laudo_w,
		nr_seq_conduta_w,
		nr_seq_cirurgia_w,
		ie_situacao_clinica_w,
		ie_complexidade_w,
		nr_seq_ventric_ve_w,
		--ds_laudo_w,
		nr_seq_complicacao_w,
		ie_primaria_w,
		dt_entrada_w,
		dt_prim_insulf_w
	from	hem_proc
	where	nr_sequencia = nr_seq_proc_p;

	insert into hem_proc(
			nr_sequencia,
			cd_estabelecimento,
			cd_pessoa_fisica,
			nr_procedimento,
			dt_atualizacao,
			nm_usuario,
			nr_atendimento,
			dt_procedimento,
			cd_medico_resp,
			ie_classif,
			nr_seq_motivo,
			ie_acesso,
			ie_tipo_acesso,
			ie_vaso_acesso,
			ie_lat_acesso,
			nr_introdutor,
			cd_setor_exec,
			cd_setor_orig,
			ds_observacao,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			qt_min_fluoroscopia,
			qt_min_cine,
			nr_seq_procedimento,
			ie_tipo_anestesia,
			ie_exame,
			ds_obs_laudo,
			nr_seq_conduta,
			nr_seq_cirurgia,
			ie_situacao_clinica,
			ie_complexidade,
			nr_seq_ventric_ve,
			--ds_laudo,
			nr_seq_complicacao,
			ie_primaria,
			dt_entrada,
			dt_prim_insulf
		) values (
			nr_seq_proc_novo_w,
			cd_estabelecimento_w,
			cd_pessoa_fisica_w,
			nr_procedimento_w,
			clock_timestamp(),
			nm_usuario_p,
			nr_atendimento_w,
			dt_procedimento_w,
			cd_medico_resp_w,
			ie_classif_w,
			nr_seq_motivo_w,
			ie_acesso_w,
			ie_tipo_acesso_w,
			ie_vaso_acesso_w,
			ie_lat_acesso_w,
			nr_introdutor_w,
			cd_setor_exec_w,
			cd_setor_orig_w,
			ds_observacao_w,
			clock_timestamp(),
			nm_usuario_p,
			qt_min_fluoroscopia_w,
			qt_min_cine_w,
			nr_seq_procedimento_w,
			ie_tipo_anestesia_w,
			ie_exame_w,
			ds_obs_laudo_w,
			nr_seq_conduta_w,
			nr_seq_cirurgia_w,
			ie_situacao_clinica_w,
			ie_complexidade_w,
			nr_seq_ventric_ve_w,
			--ds_laudo_w,
			nr_seq_complicacao_w,
			ie_primaria_w,
			dt_entrada_w,
			dt_prim_insulf_w);

	insert into hem_acesso(
			nr_sequencia,
			dt_atualizacao,
			nm_usuario ,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_proc,
			ie_vaso_acesso,
			ie_acesso,
			ie_lat_acesso,
			ie_tipo_acesso,
			nr_introdutor,
			nr_seq_cirurgia,
			nr_seq_oclusor,
			qt_oclusor
		) (
			SELECT	nextval('hem_acesso_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_proc_novo_w,
				ie_vaso_acesso,
				ie_acesso,
				ie_lat_acesso,
				ie_tipo_acesso,
				nr_introdutor,
				nr_seq_cirurgia,
				nr_seq_oclusor,
				qt_oclusor
			from	hem_acesso
			where	nr_seq_proc = nr_seq_proc_p);

	insert into hem_proc_partic(
			nr_sequencia,
			nr_seq_proc,
			dt_atualizacao,
			nm_usuario,
			cd_pessoa_fisica,
			cd_funcao,
			dt_atualizacao_nrec,
			nm_usuario_nrec
		)(
			SELECT	nextval('hem_proc_partic_seq'),
				nr_seq_proc_novo_w,
				clock_timestamp(),
				nm_usuario_p,
				cd_pessoa_fisica,
				cd_funcao,
				clock_timestamp(),
				nm_usuario_p
			from	hem_proc_partic
			where	nr_seq_proc = nr_seq_proc_p);

		ie_pasta_w	:= ie_pasta_p;

	if (coalesce(ie_pasta_p::text, '') = '') then
		select	CASE WHEN max(ie_classif)='CAT' THEN 'L' WHEN max(ie_classif)='ATC' THEN 'A' WHEN max(ie_classif)='COD' THEN 'C'  ELSE '' END
		into STRICT	ie_pasta_w
		from	hem_proc
		where	nr_sequencia = nr_seq_proc_p;
	end if;

	if (ie_pasta_w = 'L')	then
		select	max(nr_sequencia)
		into STRICT	nr_seq_laudo_w
		from	hem_laudo
		where	nr_seq_proc = nr_seq_proc_p;
		if (coalesce(nr_seq_laudo_w,0) > 0) then
			CALL hem_duplicar_laudo(nr_seq_laudo_w, nr_seq_proc_novo_w, nm_usuario_p);
		end if;
	end if;
	if (ie_pasta_w = 'C') then
		CALL hem_duplicar_laudo_congenitas(nr_seq_proc_p, nr_seq_proc_novo_w, nm_usuario_p);
	end if;
	if (ie_pasta_w = 'A') then
		CALL hem_duplicar_laudo_angio(nr_seq_proc_p, nr_seq_proc_novo_w, nm_usuario_p);
	end if;

end if;

nr_seq_proc_novo_p := nr_seq_proc_novo_w;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE hem_duplicar_procedimento ( nr_seq_proc_p bigint, ie_pasta_p text, nm_usuario_p text, nr_atendimento_p bigint, nr_seq_proc_novo_p INOUT bigint) FROM PUBLIC;

