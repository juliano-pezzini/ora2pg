-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_regra_prontuario_conv (nr_atendimento_p bigint, nm_usuario_p text, cd_convenio_p bigint, cd_municipio_convenio_p bigint) AS $body$
DECLARE

 
nr_prontuario_w			bigint;
cd_estabelecimento_w		smallint;
ie_tipo_atendimento_w		smallint;
ie_clinica_w			integer;
ie_prontuario_w			varchar(1)	:= 'N';
ie_gerar_pront_w			varchar(1)	:= 'N';
ie_forma_gerar_w			varchar(1)	:= 'N';
cd_pessoa_fisica_w		varchar(10);


BEGIN 
 
/* Rafael em 8/9/2007 OS68015 */
 
-- obter dados pf 
/*select	nvl(max(nr_prontuario),0) 
into	nr_prontuario_w 
from	pessoa_fisica 
where	cd_pessoa_fisica = obter_pessoa_atendimento(nr_atendimento_p,'C');*/
 
 
cd_pessoa_fisica_w	:= obter_pessoa_atendimento(nr_atendimento_p,'C');
 
select	max(cd_estabelecimento) 
into STRICT	cd_estabelecimento_w 
from	atendimento_paciente 
where	nr_atendimento	= nr_atendimento_p;
 
/*Matheus OS 182242*/
 
nr_prontuario_w		:= coalesce(obter_prontuario_pf(cd_estabelecimento_w, cd_pessoa_fisica_w),0);
 
-- obter par√¢metros 
select	obter_valor_param_usuario(0,32,0,nm_usuario_p,cd_estabelecimento_w) 
into STRICT	ie_prontuario_w
;
 
select	obter_valor_param_usuario(5,24,obter_perfil_ativo,nm_usuario_p,cd_estabelecimento_w) 
into STRICT	ie_forma_gerar_w
;
 
if (nr_prontuario_w = 0) and (ie_prontuario_w = 'N') then 
	 
	-- obter dados atend 
	select	max(cd_estabelecimento), 
		coalesce(max(ie_tipo_atendimento),0), 
		coalesce(max(ie_clinica),0) 
	into STRICT	cd_estabelecimento_w, 
		ie_tipo_atendimento_w, 
		ie_clinica_w 
	from	atendimento_paciente 
	where	nr_atendimento = nr_atendimento_p;
 
	select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END  
	into STRICT	ie_gerar_pront_w 
	from	regra_prontuario 
	where	cd_estabelecimento						= cd_estabelecimento_w 
	and	coalesce(ie_tipo_atendimento,ie_tipo_atendimento_w)		= ie_tipo_atendimento_w 
	and	coalesce(ie_clinica,ie_clinica_w)				= ie_clinica_w 
	and	coalesce(cd_convenio,coalesce(cd_convenio_p,0))		= coalesce(cd_convenio_p,0) 
	and	coalesce(cd_municipio,coalesce(cd_municipio_convenio_p,0))	= coalesce(cd_municipio_convenio_p,0) 
	and	ie_tipo_regra					= 5;
 
	if (ie_gerar_pront_w = 'S') then 
		if (ie_forma_gerar_w <> 'N') then 
			nr_prontuario_w := gerar_prontuario_anual(ie_forma_gerar_w, nm_usuario_p, nr_prontuario_w);
			 
			update	pessoa_fisica 
			set	nr_prontuario = nr_prontuario_w 
			where	cd_pessoa_fisica = obter_pessoa_atendimento(nr_atendimento_p,'C');
			 
		else	 
			/*Matheus OS 182242 */
 
			nr_prontuario_w := gerar_prontuario_pac( cd_estabelecimento_w, cd_pessoa_fisica_w, 'N', nm_usuario_p, nr_prontuario_w);
		end if;
		 
	end if;
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_regra_prontuario_conv (nr_atendimento_p bigint, nm_usuario_p text, cd_convenio_p bigint, cd_municipio_convenio_p bigint) FROM PUBLIC;

