-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pfcs_surgeries_after_deadline ( nr_seq_indicator_p bigint, cd_estabelecimento_p text, nm_usuario_p text) AS $body$
DECLARE


	qt_total_w						bigint := 0;
	pfcs_panel_detail_seq_w			pfcs_panel_detail.nr_sequencia%type;
	pfcs_panel_seq_w				pfcs_panel.nr_sequencia%type;
	nr_seq_operational_level_w		pfcs_operational_level.nr_sequencia%type;
    qt_time_outside_period_w        pfcs_detail_schedule.qt_time_outside_period%type;
	qt_time_rule_w					pfcs_time_surgery_deadline.qt_time%type;
	
	c01 CURSOR FOR
    SELECT 	cd_especialidade,
			ds_especialidade
    from 	especialidade_medica;
	
	c02 CURSOR(cd_especialidade_p bigint) FOR
    SELECT
	coalesce(get_formatted_person_name(a.cd_medico,'list'), obter_nome_medico(a.cd_medico,'N')) nm_medico,
	coalesce(get_formatted_person_name(a.cd_medico_exec,'list'), obter_nome_medico(a.cd_medico_exec,'N')) nm_medico_exec,
			obter_especialidade_medico(a.cd_medico,'C') cd_especialidade_medico,
			obter_especialidade_medico(a.cd_medico,'D') ds_especialidade_medico,
			b.cd_estabelecimento,
			obter_desc_classif_pac(a.nr_seq_tipo_classif_pac) ds_classification,
			substr(obter_exame_agenda(a.cd_procedimento, a.ie_origem_proced, a.nr_seq_proc_interno),1,240) ds_procedimento,
			substr(obter_Sexo_pf(a.cd_pessoa_fisica,'D'),1,60) ds_gender,
			substr(obter_unid_setor_cirurgia(a.nr_cirurgia,'S'),1,120),
			substr(obter_nome_sala_cirur(coalesce(a.nr_seq_sala_cir,b.nr_seq_sala_cir),'1'),1,255) ds_room,
			coalesce(get_formatted_person_name(a.cd_pessoa_fisica, 'list'), 
            obter_nome_pf(a.cd_pessoa_fisica)) nm_patient,
            obter_dados_pf(a.cd_pessoa_fisica, 'I') qt_idade_patient,
            a.*
    from	agenda_paciente a,
            agenda b
    where	a.cd_agenda 	   	 	  = b.cd_agenda
    and		b.cd_estabelecimento = (cd_estabelecimento_p)::numeric 
    and		b.cd_tipo_agenda		  = 1
    and		a.ie_status_agenda	  not in ('L','B','C','R','I','F')
    and		trunc(a.dt_agenda)	  > trunc(clock_timestamp())
    and		(a.dt_agendamento IS NOT NULL AND a.dt_agendamento::text <> '')
    and		a.hr_inicio			  > (a.dt_agendamento + qt_time_rule_w);

	
BEGIN
        select	max(qt_time)
		into STRICT	qt_time_rule_w
		from	pfcs_time_surgery_deadline;

		nr_seq_operational_level_w := pfcs_get_structure_level(
			cd_establishment_p => cd_estabelecimento_p,
			ie_level_p => 'O',
			ie_info_p => 'C');

		for c01_w in c01 loop
			begin
				for c02_w in c02(c01_w.cd_especialidade) loop
					begin
                        if c01_w.cd_especialidade = c02_w.cd_especialidade_medico then
                            qt_total_w := qt_total_w + 1;

                            select	nextval('pfcs_panel_detail_seq')
                            into STRICT	pfcs_panel_detail_seq_w
;

                            qt_time_outside_period_w := c02_w.hr_inicio - (qt_time_rule_w + clock_timestamp());
							
                            insert into pfcs_panel_detail(
                                nr_sequencia,
                                nm_usuario,
                                dt_atualizacao,
                                nm_usuario_nrec,
                                dt_atualizacao_nrec,
                                ie_situation,
                                nr_seq_indicator,
                                nr_seq_operational_level)
                            values (
                                pfcs_panel_detail_seq_w,
                                nm_usuario_p,
                                clock_timestamp(),
                                nm_usuario_p,
                                clock_timestamp(),
                                'T',
                                nr_seq_indicator_p,
                                nr_seq_operational_level_w);

                            insert into pfcs_detail_patient(
                                nr_sequencia,
                                nm_usuario,
                                dt_atualizacao,
                                nm_usuario_nrec,
                                dt_atualizacao_nrec,
                                nr_seq_detail,
                                nr_encounter,
                                id_patient,
                                nm_patient,
                                ds_gender,
                                ds_classification,
                                dt_birthdate,
                                ds_age_range,
                                ie_over_threshold)
                            values (
                                nextval('pfcs_detail_patient_seq'),
                                nm_usuario_p,
                                clock_timestamp(),
                                nm_usuario_p,
                                clock_timestamp(),
                                pfcs_panel_detail_seq_w,
                                c02_w.nr_atendimento,
                                c02_w.cd_pessoa_fisica,
                                c02_w.nm_patient,
                                c02_w.ds_gender,
                                c02_w.ds_classification,
                                c02_w.dt_nascimento_pac,
                                c02_w.qt_idade_patient,
                                'S');

                            insert into pfcs_detail_schedule(
                                nr_sequencia,
                                nm_usuario,
                                dt_atualizacao,
                                nm_usuario_nrec,
                                dt_atualizacao_nrec,
                                nr_seq_detail,
								                nm_executing_physician,
                                cd_executing_physician,
								                nm_physician,
                                cd_physician,
                                cd_procedure,
                                cd_requesting_physician,
                                ds_procedure,
                                ds_room,
                                dt_schedule,
                                dt_scheduling,
                                hr_start,
                                qt_duration_minutes,
                                qt_time_outside_period,
                                ie_status_schedule,
								                cd_specialty,
                                ds_specialty)
                            values (
                                nextval('pfcs_detail_schedule_seq'),
                                nm_usuario_p,
                                clock_timestamp(),
                                nm_usuario_p,
                                clock_timestamp(),
                                pfcs_panel_detail_seq_w,
								                c02_w.nm_medico_exec,
                                c02_w.cd_medico_exec,
								                c02_w.nm_medico,
                                c02_w.cd_medico,
                                c02_w.cd_procedimento,
                                c02_w.cd_medico_req,
                                c02_w.ds_procedimento,
                                c02_w.ds_room,
                                c02_w.dt_agenda,
                                c02_w.dt_agendamento,
                                c02_w.hr_inicio,
                                c02_w.nr_minuto_duracao,
                                qt_time_outside_period_w,
                                c02_w.ie_status_agenda,
								c02_w.cd_especialidade_medico,
								c02_w.ds_especialidade_medico);
                        end if;
					end;
				end loop;

				commit;

				 := pfcs_pck.pfcs_generate_results(
						vl_indicator_p => qt_total_w, ds_reference_value_p => c01_w.ds_especialidade, cd_reference_value_p => c01_w.cd_especialidade, nr_seq_indicator_p => nr_seq_indicator_p, nr_seq_operational_level_p => nr_seq_operational_level_w, nm_usuario_p => nm_usuario_p, nr_seq_panel_p => pfcs_panel_seq_w);

				CALL pfcs_pck.pfcs_update_detail(
						nr_seq_indicator_p => nr_seq_indicator_p,
						nr_seq_panel_p => pfcs_panel_seq_w,
						nr_seq_operational_level_p => nr_seq_operational_level_w,
						nm_usuario_p => nm_usuario_p);

				qt_total_w := 0;

			end;
		end loop;

		CALL pfcs_pck.pfcs_activate_records(
				nr_seq_indicator_p => nr_seq_indicator_p,
				nr_seq_operational_level_p => nr_seq_operational_level_w,
				nm_usuario_p => nm_usuario_p);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pfcs_surgeries_after_deadline ( nr_seq_indicator_p bigint, cd_estabelecimento_p text, nm_usuario_p text) FROM PUBLIC;

