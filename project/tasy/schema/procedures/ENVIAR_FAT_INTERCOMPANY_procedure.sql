-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



--
-- dblink wrapper to call function enviar_fat_intercompany as an autonomous transaction
--
CREATE EXTENSION IF NOT EXISTS dblink;

CREATE OR REPLACE PROCEDURE enviar_fat_intercompany ( nr_seq_protocolo_p bigint, nm_usuario_p text) AS $body$
DECLARE
	-- Change this to reflect the dblink connection string
	v_conn_str  text := format('port=%s dbname=%s user=%s', current_setting('port'), current_database(), current_user);
	v_query     text;

BEGIN
	v_query := 'CALL enviar_fat_intercompany_atx ( ' || quote_nullable(nr_seq_protocolo_p) || ',' || quote_nullable(nm_usuario_p) || ' )';
	PERFORM * FROM dblink(v_conn_str, v_query) AS p (ret boolean);

END;
$body$ LANGUAGE plpgsql SECURITY DEFINER;




CREATE OR REPLACE PROCEDURE enviar_fat_intercompany_atx ( nr_seq_protocolo_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_regra_convert_w                regra_conv_meio_ext.nr_sequencia%type;
nr_atendimento_ant_w                  conta_paciente.nr_atendimento%type;
nr_atendimento_ant_iw                 conta_paciente.nr_atendimento%type;
nr_atendimento_ant_tw                 conta_paciente.nr_atendimento%type;
guia_item_seq_w                       bigint;
intern_item_seq_w                     w_tmp_carga_hosp_int_item.intern_item%type;
terc_item_seq_w                       w_tmp_atend_terc_prop_item.item_seq%type;
nr_atendimento_w                      conta_paciente.nr_atendimento%type;
hosp_guia_w                           bigint;
hosp_guia_itern_w                     bigint;
terc_proprio_w                        bigint;
vl_tot_w                              w_tmp_carga_hosp_int_item.intern_item_vlr%type;
clinica_w                             tiss_tipo_internacao.ie_tipo_internacao_tiss%type;
tcmo_tbl_rfr_w                        bigint;
msg_dup_w                             varchar(1000);
msg_atd_w                             varchar(1000);
msg_elim_w                            varchar(1000);
contador_w		bigint;c01 CURSOR FOR  --W_TMP_CARGA_HOSP_INTERN    --W_TMP_CARGA_HOSP_GUIA   --W_TMP_ATEND_TERC_PROPRIO
	SELECT  trunc(b.dt_mesano_referencia, 'MM') dt_mesano_referencia,
		obter_conversao_meio_ext(nr_seq_regra_convert_w,a.cd_cgc,'ESTABELECIMENTO','CD_INTERNO','E',a.cd_interno) cd_interno,
		b.cd_autorizacao,
		c.nr_atendimento,
		c.ie_clinica,
		trunc(coalesce(c.dt_alta, clock_timestamp()) - c.dt_entrada) qt_dia_permanencia_a,
		d.dt_final_vigencia,
		c.dt_entrada,
		obter_dados_pf(c.cd_pessoa_fisica, 'NP') nr_prontuario,
		min(e.cd_doenca) cd_doenca,
		obter_codigo_proced_princ(c.nr_atendimento,1) cd_proc_princ,-- b.cd_proc_princ,
		(SELECT min(x.dt_entrada_unidade) from atend_paciente_unidade x
		where c.nr_atendimento = x.nr_atendimento
		and x.cd_tipo_acomodacao in (3,51,57,53,58,52,59)) dt_entrada_unidade,
		(select max(x.dt_saida_unidade) from atend_paciente_unidade x
		where c.nr_atendimento = x.nr_atendimento
		and x.cd_tipo_acomodacao in (3,51,57,53,58,52,59)) dt_saida_unidade,
		CASE WHEN (select x.cd_tipo_acomodacao from atend_paciente_unidade x where x.nr_seq_interno = (select max(w.nr_seq_interno) from atend_paciente_unidade w where w.nr_atendimento = c.nr_atendimento and w.ie_passagem_setor = 'N'))=1 THEN 1 WHEN (select x.cd_tipo_acomodacao from atend_paciente_unidade x where x.nr_seq_interno = (select max(w.nr_seq_interno) from atend_paciente_unidade w where w.nr_atendimento = c.nr_atendimento and w.ie_passagem_setor = 'N'))=5 THEN 1 WHEN (select x.cd_tipo_acomodacao from atend_paciente_unidade x where x.nr_seq_interno = (select max(w.nr_seq_interno) from atend_paciente_unidade w where w.nr_atendimento = c.nr_atendimento and w.ie_passagem_setor = 'N'))=8 THEN 1 WHEN (select x.cd_tipo_acomodacao from atend_paciente_unidade x where x.nr_seq_interno = (select max(w.nr_seq_interno) from atend_paciente_unidade w where w.nr_atendimento = c.nr_atendimento and w.ie_passagem_setor = 'N'))=  --apartamento
			   3 THEN 2 WHEN (select x.cd_tipo_acomodacao from atend_paciente_unidade x where x.nr_seq_interno = (select max(w.nr_seq_interno) from atend_paciente_unidade w where w.nr_atendimento = c.nr_atendimento and w.ie_passagem_setor = 'N'))=10 THEN 2 WHEN (select x.cd_tipo_acomodacao from atend_paciente_unidade x where x.nr_seq_interno = (select max(w.nr_seq_interno) from atend_paciente_unidade w where w.nr_atendimento = c.nr_atendimento and w.ie_passagem_setor = 'N'))=12 THEN 2 WHEN (select x.cd_tipo_acomodacao from atend_paciente_unidade x where x.nr_seq_interno = (select max(w.nr_seq_interno) from atend_paciente_unidade w where w.nr_atendimento = c.nr_atendimento and w.ie_passagem_setor = 'N'))=--enfermaria
			   7 THEN 4 WHEN (select x.cd_tipo_acomodacao from atend_paciente_unidade x where x.nr_seq_interno = (select max(w.nr_seq_interno) from atend_paciente_unidade w where w.nr_atendimento = c.nr_atendimento and w.ie_passagem_setor = 'N'))=9 THEN 4 WHEN (select x.cd_tipo_acomodacao from atend_paciente_unidade x where x.nr_seq_interno = (select max(w.nr_seq_interno) from atend_paciente_unidade w where w.nr_atendimento = c.nr_atendimento and w.ie_passagem_setor = 'N'))=4 THEN 4 WHEN (select x.cd_tipo_acomodacao from atend_paciente_unidade x where x.nr_seq_interno = (select max(w.nr_seq_interno) from atend_paciente_unidade w where w.nr_atendimento = c.nr_atendimento and w.ie_passagem_setor = 'N'))=  --coletivo
			   6 THEN 5 WHEN (select x.cd_tipo_acomodacao from atend_paciente_unidade x where x.nr_seq_interno = (select max(w.nr_seq_interno) from atend_paciente_unidade w where w.nr_atendimento = c.nr_atendimento and w.ie_passagem_setor = 'N'))=11 THEN 5 WHEN (select x.cd_tipo_acomodacao from atend_paciente_unidade x where x.nr_seq_interno = (select max(w.nr_seq_interno) from atend_paciente_unidade w where w.nr_atendimento = c.nr_atendimento and w.ie_passagem_setor = 'N'))=13 THEN 5 WHEN (select x.cd_tipo_acomodacao from atend_paciente_unidade x where x.nr_seq_interno = (select max(w.nr_seq_interno) from atend_paciente_unidade w where w.nr_atendimento = c.nr_atendimento and w.ie_passagem_setor = 'N'))=14 THEN 5 WHEN (select x.cd_tipo_acomodacao from atend_paciente_unidade x where x.nr_seq_interno = (select max(w.nr_seq_interno) from atend_paciente_unidade w where w.nr_atendimento = c.nr_atendimento and w.ie_passagem_setor = 'N'))=16 THEN 5  ELSE  --uti
			   0 END  cd_tipo_acomodacao,
		CASE WHEN coalesce(c.dt_alta::text, '') = '' THEN  'P'  ELSE 'T' END  ie_tipo_fatur_tiss,
		c.ie_carater_inter_sus,
		d.ie_regime_internacao,
		(select count(1) from nascimento x where c.nr_atendimento = x.nr_atendimento and x.ie_tipo_nascimento = 8) tchi_qtd_obi_nen_pcc,
		(select count(1) from nascimento x where c.nr_atendimento = x.nr_atendimento and x.ie_tipo_nascimento = 7) tchi_qtd_obi_nen_tad,
		coalesce(h.ie_parto_normal, 'N') ie_parto_normal,
		coalesce(h.ie_parto_cesaria, 'N') ie_parto_cesaria,
		b.nr_seq_saida_int,
		(select max(x.nr_dnv) from nascimento x where c.nr_atendimento = x.nr_atendimento) nr_dnv,
		h.qt_nasc_vivos,
		(select count(x.nr_sequencia) from nascimento x where x.nr_atendimento = c.nr_atendimento and x.ie_tipo_nascimento = 3) tchi_qtd_nas_viv_pma,
		h.qt_nasc_mortos,
		obter_tipo_acidente_tiss(c.nr_seq_tipo_acidente) nr_seq_tipo_acidente,
		CASE WHEN b.ie_tipo_atend_conta=1 THEN  tiss_obter_tipo_saida('I',b.nr_interno_conta)  WHEN b.ie_tipo_atend_conta=8 THEN  tiss_obter_tipo_saida('SPSADT',b.nr_interno_conta) WHEN b.ie_tipo_atend_conta=7 THEN  tiss_obter_tipo_saida('C',b.nr_interno_conta) WHEN b.ie_tipo_atend_conta=3 THEN  tiss_obter_tipo_saida('C',b.nr_interno_conta)  ELSE 0 END  tchi_mtv_sai,
		k.cd_cid_direta,
		k.nr_declaracao,
		d.cd_senha,
		b.ie_tipo_guia,
		d.cd_usuario_convenio,
		d.dt_inicio_vigencia,
		ss_obter_qtd_item_conta(b.cd_autorizacao) guia_qtd_incid,
		sum(obter_valor_conta(b.nr_interno_conta, 0)) guia_vlr_apres,
		upper(substr(obter_nome_pf(c.cd_pessoa_fisica),1,40)) guia_nome_pac,
		somente_numero(substr(obter_idade_pf(c.cd_pessoa_fisica, clock_timestamp(), 'A'),1,3)) guia_idd,
		d.cd_plano_convenio,
		d.ie_cod_usuario_mae_resp,
		CASE WHEN c.ie_tipo_atendimento=1 THEN  12  ELSE 13 END  guia_id,
		somente_numero(substr(obter_dados_medico(c.cd_medico_atendimento, 'CRM'),1,10)) crm_medico,
		substr(obter_dados_medico(c.cd_medico_atendimento, 'UFCRM'),1,2) uf_crm_medico,
		c.dt_alta_medico,
		CASE WHEN coalesce(c.dt_alta::text, '') = '' THEN  last_day(trunc(dt_mesano_referencia))  ELSE c.dt_alta END  dt_alta,
		somente_numero(substr(obter_prestador_convenio(obter_cgc_estabelecimento(b.cd_estabelecimento),
		b.cd_convenio_parametro, b.cd_categoria_parametro, null),1,5)) cd_prestador,
		c.dt_entrada guia_exec_dt,
		c.ie_tipo_atendimento
	FROM atend_categoria_convenio d, conta_paciente b, estabelecimento a, atendimento_paciente c
LEFT OUTER JOIN diagnostico_doenca e ON (c.nr_atendimento = e.nr_atendimento)
LEFT OUTER JOIN parto h ON (c.nr_atendimento = h.nr_atendimento)
LEFT OUTER JOIN declaracao_obito k ON (c.nr_atendimento = k.nr_atendimento)
WHERE b.nr_seq_protocolo = nr_seq_protocolo_p and b.nr_atendimento = nr_atendimento_w and b.nr_atendimento = c.nr_atendimento and c.nr_atendimento = d.nr_atendimento    and a.cd_estabelecimento = c.cd_estabelecimento and a.cd_cgc in ( select  cd_cgc
	from  conversao_meio_externo
	where (cd_externo IS NOT NULL AND cd_externo::text <> '')
	and nr_seq_regra = nr_seq_regra_convert_w
	and cd_cgc = a.cd_cgc) group by
		b.dt_mesano_referencia,
		obter_conversao_meio_ext(nr_seq_regra_convert_w,a.cd_cgc,'ESTABELECIMENTO','CD_INTERNO','E',a.cd_interno),
		b.cd_autorizacao,
		c.ie_clinica,
		trunc(coalesce(c.dt_alta, clock_timestamp()) - c.dt_entrada),
		d.dt_final_vigencia,
		c.dt_entrada,
		c.dt_alta,
		obter_dados_pf(c.cd_pessoa_fisica, 'NP'),
		--e.cd_doenca,
		b.cd_proc_princ,
		-- b.ie_tipo_fatur_tiss,
		c.ie_carater_inter_sus,
		d.ie_regime_internacao,
		coalesce(h.ie_parto_normal, 'N'),
		coalesce(h.ie_parto_cesaria, 'N'),
		b.nr_seq_saida_int,
		h.qt_nasc_vivos,
		h.qt_nasc_mortos,
		obter_tipo_acidente_tiss(c.nr_seq_tipo_acidente),
		CASE WHEN b.ie_tipo_atend_conta=1 THEN  tiss_obter_tipo_saida('I',b.nr_interno_conta)  WHEN b.ie_tipo_atend_conta=8 THEN  tiss_obter_tipo_saida('SPSADT',b.nr_interno_conta) WHEN b.ie_tipo_atend_conta=7 THEN  tiss_obter_tipo_saida('C',b.nr_interno_conta) WHEN b.ie_tipo_atend_conta=3 THEN  tiss_obter_tipo_saida('C',b.nr_interno_conta)  ELSE 0 END ,
		k.cd_cid_direta,
		k.nr_declaracao,
		d.cd_senha,
		b.ie_tipo_guia,
		d.cd_usuario_convenio,
		d.dt_inicio_vigencia,
		CASE WHEN c.ie_tipo_atendimento=1 THEN  ss_obter_qtd_item_conta(b.cd_autorizacao)  ELSE null END ,
		substr(obter_nome_pf(c.cd_pessoa_fisica),1,40),
		somente_numero(substr(obter_idade_pf(c.cd_pessoa_fisica, clock_timestamp(), 'A'),1,3)),
		d.cd_plano_convenio,
		d.ie_cod_usuario_mae_resp,
		CASE WHEN c.ie_tipo_atendimento=1 THEN  12  ELSE 13 END ,
		c.nr_atendimento,
		somente_numero(substr(obter_dados_medico(c.cd_medico_atendimento, 'CRM'),1,10)),
		substr(obter_dados_medico(c.cd_medico_atendimento, 'UFCRM'),1,2),
		c.dt_alta_medico,
		somente_numero(substr(obter_prestador_convenio(obter_cgc_estabelecimento(b.cd_estabelecimento),b.cd_convenio_parametro, b.cd_categoria_parametro, null),1,5)),
		c.ie_tipo_atendimento;

c02 CURSOR FOR  --W_TMP_CARGA_HOSP_INT_ITEM    --W_TMP_CARGA_HOSP_GUIA_ITEM    --W_TMP_ATEND_TERC_PROP_ITEM
	SELECT  c.nr_atendimento,
		trunc(a.dt_mesano_referencia, 'MM') dt_mesano_referencia,
		obter_conversao_meio_ext(nr_seq_regra_convert_w,d.cd_cgc,'ESTABELECIMENTO','CD_INTERNO','E',d.cd_interno) cd_interno,
		coalesce(b.cd_procedimento_tuss, b.cd_procedimento) intern_item_esp,
		trunc(c.dt_entrada) intern_item_dt,
		b.qt_procedimento intern_item_qtd,
		b.vl_procedimento intern_item_vlr,
		b.nr_doc_convenio intern_item_prest_guia_nr,
		b.cd_senha intern_item_senha,
		CASE WHEN coalesce(b.dt_inicio_procedimento::text, '') = '' THEN  c.dt_entrada  ELSE b.dt_inicio_procedimento END  dt_inicio_procedimento,
		CASE WHEN coalesce(b.dt_final_procedimento::text, '') = '' THEN  c.dt_entrada  ELSE b.dt_final_procedimento END  dt_final_procedimento,
		coalesce(b.cd_edicao_amb,'01') cd_edicao_amb, -- adicionado tratamento para tbl 01 - outros
		CASE WHEN b.ie_via_acesso='U' THEN 1 WHEN b.ie_via_acesso='M' THEN 2 WHEN b.ie_via_acesso='D' THEN  3  ELSE null END  ie_via_acesso,
		CASE WHEN b.ie_tecnica_utilizada='C' THEN 1 WHEN b.ie_tecnica_utilizada='V' THEN 2 WHEN b.ie_tecnica_utilizada='R' THEN 3  ELSE null END  tchi_tec_utl_pcm,
		dividir(b.vl_procedimento, b.qt_procedimento) vl_unitario,
		a.cd_autorizacao,
		c.ie_tipo_atendimento,
		c.ie_carater_inter_sus,
		somente_numero(substr(obter_prestador_convenio(obter_cgc_estabelecimento(a.cd_estabelecimento),a.cd_convenio_parametro, a.cd_categoria_parametro, null),1,5)) cd_prestador,
		CASE WHEN c.ie_tipo_atendimento=1 THEN  12  ELSE 13 END  guia_id,
		ww.cd_prestador_convenio cd_prestador_convenio
	FROM estabelecimento d, atendimento_paciente c, a.cd_estabelecimento,a, conta_paciente a, procedimento_paciente b
LEFT OUTER JOIN (SELECT distinct x.cd_pessoa_fisica cd_pessoa_fisica,
		y.cd_prestador_convenio cd_prestador_convenio, t.nr_sequencia sequencia, y.cd_convenio cd_convenio
		from terceiro_pessoa_fisica x,
		terceiro t, convenio_prestador y
		where  x.nr_seq_terceiro = t.nr_sequencia
		and  t.cd_cgc = y.cd_cgc
		) ww ON (b.cd_medico_executor = ww.cd_pessoa_fisica)
WHERE a.nr_interno_conta = b.nr_interno_conta and a.nr_seq_protocolo = nr_seq_protocolo_p and a.nr_atendimento = c.nr_atendimento and d.cd_estabelecimento = c.cd_estabelecimento and b.nr_interno_conta = b.nr_interno_conta and d.cd_cgc in ( select  cd_cgc
	from  conversao_meio_externo
	where (cd_externo IS NOT NULL AND cd_externo::text <> '')
	and nr_seq_regra = nr_seq_regra_convert_w
	and cd_cgc = d.cd_cgc)    
union all

	select  c.nr_atendimento,
		trunc(a.dt_mesano_referencia, 'MM') dt_mesano_referencia,
		obter_conversao_meio_ext(nr_seq_regra_convert_w,d.cd_cgc,'ESTABELECIMENTO','CD_INTERNO','E',d.cd_interno) cd_interno,
		CASE WHEN obter_tipo_material(b.cd_material,'C')=0 THEN  80071104 WHEN obter_tipo_material(b.cd_material,'C')= --med
					 2 THEN  80071104 WHEN obter_tipo_material(b.cd_material,'C')=3 THEN  80071104 WHEN obter_tipo_material(b.cd_material,'C')=5 THEN  80071104 WHEN obter_tipo_material(b.cd_material,'C')=6 THEN  80071104 WHEN obter_tipo_material(b.cd_material,'C')=8 THEN  80071104 WHEN obter_tipo_material(b.cd_material,'C')=9 THEN  80071104 WHEN obter_tipo_material(b.cd_material,'C')=1 THEN  CASE WHEN obter_estrutura_material(b.cd_material,'G')= --mat
								       13 THEN  80071210  ELSE 80071201 END  WHEN obter_tipo_material(b.cd_material,'C')= -- se opme 80071210 se mat 80071201
					 7 THEN  80071201 WHEN obter_tipo_material(b.cd_material,'C')=10 THEN  80071201  ELSE b.cd_material END  intern_item_esp,
		trunc(c.dt_entrada) intern_item_dt,-- b.dt_atendimento intern_item_dt,
		1 intern_item_qtd, --sum(b.qt_material) intern_item_qtd,
		sum(b.vl_material) intern_item_vlr, --b.vl_material intern_item_vlr,
		b.nr_doc_convenio intern_item_prest_guia_nr,
		obter_dados_categ_conv(a.nr_atendimento,'S') intern_item_senha,
		c.dt_entrada,
		c.dt_entrada,
		CASE WHEN obter_tipo_material(b.cd_material,'C')=0 THEN  '96' WHEN obter_tipo_material(b.cd_material,'C')= --med
					 2 THEN  '96' WHEN obter_tipo_material(b.cd_material,'C')=3 THEN  '96' WHEN obter_tipo_material(b.cd_material,'C')=5 THEN  '96' WHEN obter_tipo_material(b.cd_material,'C')=6 THEN  '96' WHEN obter_tipo_material(b.cd_material,'C')=8 THEN  '96' WHEN obter_tipo_material(b.cd_material,'C')=9 THEN  '96' WHEN obter_tipo_material(b.cd_material,'C')=1 THEN  CASE WHEN obter_estrutura_material(b.cd_material,'G')= --mat
								       13 THEN  '19'  ELSE '95' END  WHEN obter_tipo_material(b.cd_material,'C')= -- se opme 19 se mat 95
					 7 THEN  '95' WHEN obter_tipo_material(b.cd_material,'C')=10 THEN  '95'  ELSE '' END  cd_edicao_amb,
		null ie_via_acesso,
		null tchi_tec_utl_pcm,
		sum(b.vl_material)  vl_unitario,
		a.cd_autorizacao,
		c.ie_tipo_atendimento,
		c.ie_carater_inter_sus,
		somente_numero(substr(obter_prestador_convenio(obter_cgc_estabelecimento(a.cd_estabelecimento),
		a.cd_convenio_parametro, a.cd_categoria_parametro, null),1,5)) cd_prestador,
		CASE WHEN c.ie_tipo_atendimento=1 THEN  12  ELSE 13 END  guia_id,
		null cd_prestador_convenio
	from    conta_paciente a,
		material_atend_paciente b,
		atendimento_paciente c,
		estabelecimento d
	where a.nr_interno_conta = b.nr_interno_conta
	and a.nr_seq_protocolo = nr_seq_protocolo_p
	and a.nr_atendimento = c.nr_atendimento
	and d.cd_estabelecimento = c.cd_estabelecimento
	and d.cd_cgc in (   select  cd_cgc
	from  conversao_meio_externo
	where (cd_externo IS NOT NULL AND cd_externo::text <> '')
	and nr_seq_regra = nr_seq_regra_convert_w
	and cd_cgc = d.cd_cgc)
	group by
		c.nr_atendimento,
		trunc(a.dt_mesano_referencia, 'MM'),
		obter_conversao_meio_ext(nr_seq_regra_convert_w,d.cd_cgc,'ESTABELECIMENTO','CD_INTERNO','E',d.cd_interno) ,
		CASE WHEN obter_tipo_material(b.cd_material,'C')=0 THEN  80071104 WHEN obter_tipo_material(b.cd_material,'C')=2 THEN  80071104 WHEN obter_tipo_material(b.cd_material,'C')=3 THEN  80071104 WHEN obter_tipo_material(b.cd_material,'C')=5 THEN  80071104 WHEN obter_tipo_material(b.cd_material,'C')=6 THEN  80071104 WHEN obter_tipo_material(b.cd_material,'C')=8 THEN  80071104 WHEN obter_tipo_material(b.cd_material,'C')=9 THEN  80071104 WHEN obter_tipo_material(b.cd_material,'C')=1 THEN  CASE WHEN obter_estrutura_material(b.cd_material,'G')=13 THEN  80071210  ELSE 80071201 END  WHEN obter_tipo_material(b.cd_material,'C')=7 THEN  80071201 WHEN obter_tipo_material(b.cd_material,'C')=10 THEN  80071201  ELSE b.cd_material END ,
		c.dt_entrada ,
		b.nr_doc_convenio,
		obter_dados_categ_conv(a.nr_atendimento,'S') ,
		a.cd_autorizacao,
		c.ie_tipo_atendimento,
		c.ie_carater_inter_sus,
		somente_numero(substr(obter_prestador_convenio(obter_cgc_estabelecimento(a.cd_estabelecimento),a.cd_convenio_parametro, a.cd_categoria_parametro, null),1,5)) ,
		CASE WHEN c.ie_tipo_atendimento=1 THEN  12  ELSE 13 END ,
		CASE WHEN obter_tipo_material(b.cd_material,'C')=0 THEN  '96' WHEN obter_tipo_material(b.cd_material,'C')=2 THEN  '96' WHEN obter_tipo_material(b.cd_material,'C')=3 THEN  '96' WHEN obter_tipo_material(b.cd_material,'C')=5 THEN  '96' WHEN obter_tipo_material(b.cd_material,'C')=6 THEN  '96' WHEN obter_tipo_material(b.cd_material,'C')=8 THEN  '96' WHEN obter_tipo_material(b.cd_material,'C')=9 THEN  '96' WHEN obter_tipo_material(b.cd_material,'C')=1 THEN  CASE WHEN obter_estrutura_material(b.cd_material,'G')=13 THEN  '19'  ELSE '95' END  WHEN obter_tipo_material(b.cd_material,'C')=7 THEN  '95' WHEN obter_tipo_material(b.cd_material,'C')=10 THEN  '95'  ELSE '' END 
		order by nr_atendimento;

c03 CURSOR FOR     -- W_TMP_TCMO_CGA_MTL_MDC_OMM
	SELECT  trunc(a.dt_mesano_referencia, 'MM') dt_mesano_referencia,
		b.dt_atendimento,
		somente_numero(substr(obter_estrutura_material(b.cd_material,'G'),1,2)) tcmo_tbl_rfr,
		coalesce(b.cd_material_tuss, b.cd_material) cd_material_tuss,
		b.qt_material,
		upper(substr(b.cd_unidade_medida,1,3)) cd_unidade_medida,
		b.vl_unitario,
		b.vl_material,
		substr(obter_dados_material_estab(b.cd_material, a.cd_estabelecimento, 'RA'),1,15) nr_registro_anvisa,
		substr(obter_dados_material(b.cd_material, 'CR'),1,30) cd_fabricante,
		upper(substr(obter_dados_material(b.cd_material, 'D'),1,150)) ds_material,
		round((obter_custo_medio_material(a.cd_estabelecimento, b.dt_atendimento, b.cd_material) * b.qt_material ),2)vl_custo_medio,
		-- decode(b.nr_seq_grupo_rec, 1,2, 2,3, 23,3, 3,8, 3) nr_seq_grupo_rec,
		CASE WHEN obter_tipo_material(b.cd_material,'C')=0 THEN 2 WHEN obter_tipo_material(b.cd_material,'C')= --med
					 2 THEN 2 WHEN obter_tipo_material(b.cd_material,'C')=3 THEN 2 WHEN obter_tipo_material(b.cd_material,'C')=5 THEN 2 WHEN obter_tipo_material(b.cd_material,'C')=6 THEN 2 WHEN obter_tipo_material(b.cd_material,'C')=8 THEN 2 WHEN obter_tipo_material(b.cd_material,'C')=9 THEN 2 WHEN obter_tipo_material(b.cd_material,'C')=1 THEN  CASE WHEN obter_estrutura_material(b.cd_material,'G')= --mat
								       13 THEN 8  ELSE 3 END  WHEN obter_tipo_material(b.cd_material,'C')= -- se opme 8 se mat 3
					 7 THEN 3 WHEN obter_tipo_material(b.cd_material,'C')= --mat
					 10 THEN 3  ELSE 3 END  nr_seq_grupo_rec,
		--somente_numero(substr(obter_prestador_convenio(obter_cgc_estabelecimento(a.cd_estabelecimento), a.cd_convenio_parametro, a.cd_categoria_parametro, null),1,5)) cd_prestador,
		obter_conversao_meio_ext(nr_seq_regra_convert_w,d.cd_cgc,'ESTABELECIMENTO','CD_INTERNO','E',d.cd_interno) cd_interno,
		CASE WHEN c.ie_tipo_atendimento=1 THEN  12  ELSE 13 END  guia_id,
		a.cd_autorizacao,
		a.nr_atendimento,
		CASE WHEN coalesce(b.cd_cgc_fornecedor::text, '') = '' THEN		coalesce(( SELECT max(x.nr_autor_func)		from pessoa_juridica x, material_autorizado y		where x.cd_cgc = y.cd_cgc_fabricante and y.nr_sequencia = b.nr_seq_mat_autor), null)  ELSE ( select  max(x.nr_autor_func)		from  pessoa_juridica x		where x.cd_cgc = b.cd_cgc_fornecedor) END  nr_autor_func
	from    conta_paciente a,
		material_atend_paciente b,
		atendimento_paciente c,
		estabelecimento d
	where a.nr_interno_conta = b.nr_interno_conta
	and a.nr_atendimento = c.nr_atendimento
	and a.nr_seq_protocolo = nr_seq_protocolo_p
	and d.cd_estabelecimento = c.cd_estabelecimento
	and d.cd_cgc in ( select  cd_cgc
	from  conversao_meio_externo
	where (cd_externo IS NOT NULL AND cd_externo::text <> '')
	and nr_seq_regra = nr_seq_regra_convert_w
	and cd_cgc = d.cd_cgc)
	order by nr_atendimento;

c04 CURSOR FOR  -- atualizar valores totais nas tabelas de capa
	SELECT  guia_id, mes_ref, prest_id, guia_nr
	from  w_tmp_carga_hosp_guia
	where nr_seq_protocolo =  nr_seq_protocolo_p;

c01_w c01%rowtype;
c02_w c02%rowtype;
c03_w c03%rowtype;
c04_w c04%rowtype;


BEGIN

select  max(nr_sequencia)
into STRICT  nr_seq_regra_convert_w
from  regra_conv_meio_ext
where ds_regra = 'Integração Intercompany'
and ie_situacao = 'A';

hosp_guia_w := 0;
guia_item_seq_w := 0;
intern_item_seq_w := 0;
terc_item_seq_w := 0;

-- Mensagens de Consistência
msg_dup_w := 'Conta/atendimento duplicado.'||chr(13)||chr(10)||' É necessário que as contas do mesmo atendimento/mês ref. fiquem no mesmo protocolo!'||chr(13)||chr(10)||' Processo abortado!';
msg_atd_w := 'Erro ao inserir atendimento.'||chr(13)||chr(10)||' Verificar dados do item abaixo!'||chr(13)||chr(10)||' Processo abortado!';
msg_elim_w := 'Protocolo Eliminado.'||chr(13)||chr(10)||' Usuario ti_master - Protocolo:';

if	nm_usuario_p = 'ti_master' THEN
	begin
	delete  from w_tmp_atend_terc_prop_item a
	where nr_seq_protocolo = nr_seq_protocolo_p
	and coalesce(dt_lib_intercompany::text, '') = '';

	delete  from w_tmp_carga_hosp_int_item a
	where nr_seq_protocolo = nr_seq_protocolo_p
	and coalesce(dt_lib_intercompany::text, '') = '';

	delete  from w_tmp_carga_hosp_guia_item a
	where nr_seq_protocolo = nr_seq_protocolo_p
	and coalesce(dt_lib_intercompany::text, '') = '';

	delete  from w_tmp_carga_hosp_intern a
	where nr_seq_protocolo = nr_seq_protocolo_p
	and coalesce(dt_lib_intercompany::text, '') = '';

	delete  from w_tmp_carga_hosp_guia a
	where nr_seq_protocolo = nr_seq_protocolo_p
	and coalesce(dt_lib_intercompany::text, '') = '';

	delete  from w_tmp_atend_terc_proprio a
	where nr_seq_protocolo = nr_seq_protocolo_p
	and coalesce(dt_lib_intercompany::text, '') = '';

	delete  from w_tmp_tcmo_cga_mtl_mdc_omm a
	where nr_seq_protocolo = nr_seq_protocolo_p
	and coalesce(dt_lib_intercompany::text, '') = '';
	end;
else
-- antes de inserir,  limpar os dados sem data de integração intercompany, com data de liberacao preenchida não deve ser removido pois ja foram integrados.para operadora
	begin
	delete  from w_tmp_atend_terc_prop_item a
	where nr_seq_protocolo = nr_seq_protocolo_p
	and coalesce(dt_lib_intercompany::text, '') = '';

	delete  from w_tmp_carga_hosp_int_item a
	where nr_seq_protocolo = nr_seq_protocolo_p
	and coalesce(dt_lib_intercompany::text, '') = '';

	delete  from w_tmp_carga_hosp_guia_item a
	where nr_seq_protocolo = nr_seq_protocolo_p
	and coalesce(dt_lib_intercompany::text, '') = '';

	delete  from w_tmp_carga_hosp_intern a
	where nr_seq_protocolo = nr_seq_protocolo_p
	and coalesce(dt_lib_intercompany::text, '') = '';

	delete  from w_tmp_carga_hosp_guia a
	where nr_seq_protocolo = nr_seq_protocolo_p
	and coalesce(dt_lib_intercompany::text, '') = '';

	delete  from w_tmp_atend_terc_proprio a
	where nr_seq_protocolo = nr_seq_protocolo_p
	and coalesce(dt_lib_intercompany::text, '') = '';

	delete  from w_tmp_tcmo_cga_mtl_mdc_omm a
	where nr_seq_protocolo = nr_seq_protocolo_p
	and coalesce(dt_lib_intercompany::text, '') = '';
	end;
end if;
-- ALTERAÇÃO
open c02;
loop
fetch c02 into
	c02_w;
EXIT WHEN NOT FOUND; /* apply on c02 */
	begin

	terc_proprio_w    := 0;
	hosp_guia_w   := 0;
	hosp_guia_itern_w := 0;
	vl_tot_w    := 0;

	nr_atendimento_w  := c02_w.nr_atendimento;

	open c01;
	loop
	fetch c01 into
		c01_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin

		-- busca clinica TISS
		select ie_tipo_internacao_tiss
		into STRICT clinica_w
		from tiss_tipo_internacao
		where ie_clinica = c01_w.ie_clinica  LIMIT 1;

		-- Verifica se tem registro(PK) da carga hosp_guia
		select    count(1)
		into STRICT     hosp_guia_w
		from     w_tmp_carga_hosp_guia
		where    mes_ref  =  c02_w.dt_mesano_referencia
		and    prest_id =  somente_numero(substr(c02_w.cd_interno,1,5))
		and    grp_emp_id = 1
		and    guia_id  =  c02_w.guia_id
		and    guia_nr = somente_numero(substr(c02_w.nr_atendimento,1,12));


		if (hosp_guia_w = 0) and (c02_w.cd_prestador_convenio is  null or substr(c02_w.intern_item_esp,1,3) = 600 ) then

		insert into w_tmp_carga_hosp_guia(
		      dt_lib_intercompany, --1
		      ie_lib_intercompany, --2
		      mes_ref, --3
		      prest_id, --4
		      grp_emp_id, --5
		      guia_id, --6
		      guia_nr, --7
		      tp_conv_id, --8
		      cli_id, --9
		      ass_id, --10
		      guia_benef, --11
		      guia_dep, --12
		      guia_contr_fis_id, --13
		      guia_contr_fis_serie, --14
		      guia_cid_inicial, --15
		      guia_cid_final, --16
		      guia_clas, --17
		      guia_emissor,
		      guia_emis_dt,
		      guia_med,
		      guia_med_uf,
		      guia_qtd_incid,
		      guia_atend,
		      guia_vlr_apres,
		      guia_dig_seq,
		      guia_identif_string,
		      guia_tp_assoc,
		      guia_nome_pac,
		      guia_ind_hosp_dia,
		      guia_idd,
		      guia_pla_id,
		      tchg_flg_reg_prv,
		      tchg_ind_att,
		      tchg_nro_dia_att,
		      tchg_ind_gui_rcn,
		      nr_seq_protocolo )
		values (null, --1
		      'N', --2
		      c01_w.dt_mesano_referencia, --3
		      somente_numero(substr(c01_w.cd_interno,1,5)), --4
		      1, --5
		      c01_w.guia_id, --6
		      somente_numero(substr(c01_w.nr_atendimento,1,12)), --7
		      1, --8
		      somente_numero(substr(c01_w.cd_usuario_convenio,1,8)), --9
		      somente_numero(substr(c01_w.cd_usuario_convenio,9,8)), --10
		      CASE WHEN substr(c01_w.cd_usuario_convenio,17,1)=0 THEN  null WHEN substr(c01_w.cd_usuario_convenio,17,1)=1 THEN  'D' WHEN substr(c01_w.cd_usuario_convenio,17,1)=2 THEN  'A' END , --11
		      somente_numero(substr(c01_w.cd_usuario_convenio,18,2)), --12
		      null, --13
		      null, --14
		      substr(c01_w.cd_doenca,1,5), --15
		      substr(c01_w.cd_doenca,1,5), --16
		      1, --17
		      somente_numero(substr(c01_w.cd_interno,1,5)), --18
		      c01_w.dt_inicio_vigencia,
		      c01_w.crm_medico,
		      c01_w.uf_crm_medico,
		      coalesce(c01_w.guia_qtd_incid,0),
		      CASE WHEN c01_w.ie_tipo_atendimento=1 THEN  'E'  ELSE 'U' END ,
		      c01_w.guia_vlr_apres,
		      null,
		      --substr(c01_w.cd_usuario_convenio,1,23),
		      lpad(somente_numero(c01_w.cd_usuario_convenio),19,0),
		      'N',
		      c01_w.guia_nome_pac,
		      null,
		      c01_w.guia_idd,
		      somente_numero(substr(c01_w.cd_plano_convenio,1,4)),
		      null,
		      null,
		      null,
		      c01_w.ie_cod_usuario_mae_resp,
		      nr_seq_protocolo_p );
		end if;

		    -- Verifica se tem registro(PK) da carga hosp_guia_intern
		select     count(1)
		into STRICT     hosp_guia_itern_w
		from     w_tmp_carga_hosp_intern
		where     mes_ref  =  c02_w.dt_mesano_referencia
		and prest_id =  somente_numero(substr(c02_w.cd_interno,1,5))
		and grp_emp_id = 1
		and guia_id  =  c02_w.guia_id
		and guia_nr = somente_numero(substr(c02_w.nr_atendimento,1,12));


		if (hosp_guia_itern_w = 0) and (c02_w.ie_tipo_atendimento = 1) and (c02_w.cd_prestador_convenio is  null or substr(c02_w.intern_item_esp,1,3) = 600) then

			insert into w_tmp_carga_hosp_intern(
				dt_lib_intercompany, --1
				ie_lib_intercompany, --2
				mes_ref, --3
				prest_id, --4
				grp_emp_id, --5
				guia_id, --6
				guia_nr, --7
				intern_atend, --8
				intern_dias, --9
				intern_valid, --10
				intern_entr, --11
				intern_entr_hr, --12
				intern_saida, --13
				intern_saida_hr, --14
				intern_pront, --15
				intern_cid, --16
				intern_princ, --17
				intern_uti_ent, --18
				intern_uti_ent_hr, --19
				intern_uti_sai, --20
				intern_uti_sai_hr, --21
				acomod_id, --22
				tchi_tip_fat, --23
				tchi_cte_int, --24
				tchi_rgm_int, --25
				tchi_tip_int, --26
				tchi_inf_int_ott, --27
				tchi_obi_mlh, --28
				tchi_qtd_obi_nen_pcc, --29
				tchi_qtd_obi_nen_tad, --30
				tchi_nro_dcl_nas, --31
				tchi_qtd_nas_viv_trm, --32
				tchi_qtd_nas_viv_pma, --33
				tchi_qtd_nas_mor, --34
				tchi_ci1_int, --35
				tchi_ci2_int, --36
				tchi_ci3_int, --37
				tchi_ind_aci_cid_prp, --38
				tchi_mtv_sai, --39
				tchi_cid_obi, --40
				tchi_nro_dcl_obi, --41
				tchi_nro_snh_aut, --42
				nr_seq_protocolo ) --43
				values (null, --1
				'N', --2
				c01_w.dt_mesano_referencia, --3
				somente_numero(substr(c01_w.cd_interno,1,5)),--4
				1, --5
				12, --6
				somente_numero(substr(c01_w.nr_atendimento,1,12)), --7
				clinica_w, --8
				c01_w.qt_dia_permanencia_a,--9
				c01_w.dt_final_vigencia, --10
				c01_w.dt_entrada, --11
				c01_w.dt_entrada, --12
				c01_w.dt_alta, --13
				c01_w.dt_alta, --14
				c01_w.nr_prontuario, --15
				substr(c01_w.cd_doenca,1,5), --16
				somente_numero(substr(c01_w.cd_proc_princ,1,8)), --17
				c01_w.dt_entrada_unidade, --18
				c01_w.dt_entrada_unidade, --19
				c01_w.dt_saida_unidade, --20
				c01_w.dt_saida_unidade, --21
				c01_w.cd_tipo_acomodacao, --22
				c01_w.ie_tipo_fatur_tiss, --23
				CASE WHEN c01_w.ie_tipo_atendimento=1 THEN  'E'  ELSE 'U' END , --24
				1,--25
				clinica_w, --26
				CASE WHEN c01_w.ie_parto_normal='S' THEN  'PN' WHEN c01_w.ie_parto_normal=c01_w.ie_parto_cesaria THEN  'S' WHEN c01_w.ie_parto_normal='PC' THEN  null END , --27
				null,--somente_numero(substr(c01_w.nr_seq_saida_int,1,1)), --28
				c01_w.tchi_qtd_obi_nen_pcc, --29
				c01_w.tchi_qtd_obi_nen_tad, --30
				substr(c01_w.nr_dnv,1,20), --31
				c01_w.qt_nasc_vivos, --32
				c01_w.tchi_qtd_nas_viv_pma, --33
				c01_w.qt_nasc_mortos, --34
				substr(c01_w.cd_doenca,1,5), --35
				substr(c01_w.cd_doenca,1,5), --36
				substr(c01_w.cd_doenca,1,5), --37
				somente_numero(substr(c01_w.nr_seq_tipo_acidente,1,1)), --38
				c01_w.tchi_mtv_sai,  --39
				substr(c01_w.cd_cid_direta,1,5), --40
				c01_w.nr_declaracao, --41
				c01_w.cd_senha, --42
				nr_seq_protocolo_p    ); --43
		end if;

		-- Verificar se tem registro na tabela de terceiro (PK)
		select    count(1)
		into STRICT     terc_proprio_w
		from     w_tmp_atend_terc_proprio
		where    mes_ref  =  c02_w.dt_mesano_referencia
		and    prest_id =  c02_w.cd_prestador_convenio
		and	guia_id  =  c02_w.guia_id
		and guia_nr  = somente_numero(substr(c02_w.nr_atendimento,1,12))
		and prest_id_ppo =  somente_numero(substr(c02_w.cd_interno,1,5));


		if (terc_proprio_w = 0)  and (c02_w.cd_prestador_convenio IS NOT NULL AND c02_w.cd_prestador_convenio::text <> '') then

			insert into w_tmp_atend_terc_proprio(
				dt_lib_intercompany, --1
				ie_lib_intercompany, --2
				mes_ref, --3
				prest_id, --4
				guia_id, --5
				guia_nr, --6
				prest_id_ppo, --7
				guia_exec_dt, --8
				guia_ind_hosp_dia, --9
				guia_senha, --10
				guia_id_ppo, --11
				guia_cid_inicial, --12
				nr_registro_ppo, --13
				guia_clas, --14
				tp_conv_id,
				cli_id,
				ass_id,
				ass_benef,
				ass_seq,
				guia_nr_via,
				guia_dig_verif,
				guia_id_cli1,
				guia_id_cli2,
				guia_id_ass1,
				guia_id_ass2,
				guia_id_via,
				dt_ult_pagto,
				guia_tp_assoc,
				guia_nome_pac,
				guia_idd,
				guia_pla_id,
				identif_string,
				guia_pcm_princ,
				guia_crm_solic,
				guia_crm_uf_solic,
				intern_valid,
				intern_dias,
				acomod_id,
				intern_atend,
				intern_entr,
				intern_saida,
				intern_entr_uti,
				intern_saida_uti,
				proc_dst,
				dat_ics_dst,
				prest_id_solic,
				attp_flg_reg_prv_slt,
				nr_seq_protocolo )
			values (null, --1
				'N', --2
				c01_w.dt_mesano_referencia, --3
				c02_w.cd_prestador_convenio, --4
				c01_w.guia_id, --5
				somente_numero(substr(c01_w.nr_atendimento,1,12)), --6
				somente_numero(substr(c01_w.cd_interno,1,5)), --7
				coalesce(c01_w.guia_exec_dt, clock_timestamp()), --8
				'N', --9
				somente_numero(substr(c01_w.cd_senha,1,12)), --10
				c01_w.guia_id, --11
				substr(c01_w.cd_doenca,1,5), --12
				somente_numero(substr(c01_w.nr_atendimento,1,8)), --13
				1, --14
				1,
				somente_numero(substr(c01_w.cd_usuario_convenio,1,8)),
				somente_numero(substr(c01_w.cd_usuario_convenio,9,8)),
				CASE WHEN somente_numero(substr(c01_w.cd_usuario_convenio,17,1))=0 THEN  'T' WHEN somente_numero(substr(c01_w.cd_usuario_convenio,17,1))=1 THEN  'D' WHEN somente_numero(substr(c01_w.cd_usuario_convenio,17,1))=2 THEN  'A' END ,
				somente_numero(substr(c01_w.cd_usuario_convenio,18,2)),
				null,
				null,
				somente_numero(substr(c01_w.cd_usuario_convenio,1,4)),
				somente_numero(substr(c01_w.cd_usuario_convenio,5,4)),
				somente_numero(substr(c01_w.cd_usuario_convenio,9,8)),--somente_numero(substr(c01_w.cd_usuario_convenio,1,4)),
				somente_numero(substr(c01_w.cd_usuario_convenio,17,3)),--somente_numero(substr(c01_w.cd_usuario_convenio,5,4)),
				null,
				null,
				'N',
				c01_w.guia_nome_pac,
				c01_w.guia_idd,
				somente_numero(substr(c01_w.cd_plano_convenio,1,4)),
				--substr(c01_w.cd_usuario_convenio,1,23),
				lpad(somente_numero(c01_w.cd_usuario_convenio),19,0),
				somente_numero(substr(c01_w.cd_proc_princ,1,8)),
				c01_w.crm_medico,
				c01_w.uf_crm_medico,
				c01_w.dt_final_vigencia,
				c01_w.qt_dia_permanencia_a,
				c01_w.cd_tipo_acomodacao,
				clinica_w,
				c01_w.dt_entrada,
				c01_w.dt_alta,
				c01_w.dt_entrada_unidade,
				c01_w.dt_saida_unidade,
				null,
				null,
				null,
				null,
				nr_seq_protocolo_p );

		end if;
		exception
			when unique_violation then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(msg_dup_w ||chr(13)||chr(10)||
				  'Capa/Guia - Atendimento: '|| c01_w.nr_atendimento);
			when OTHERS then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(msg_atd_w ||chr(13)||chr(10)||
				  'Capa/Guia - Atendimento: ' || c01_w.nr_atendimento);

		end;
		contador_w := contador_w + 1;
		if (contador_w > 2000)then
			commit;
			contador_w := 0;
		end if;
	end loop;
	close c01;
	contador_w := 0;
        --- INSERE OS ITENS
        if (coalesce(c02_w.cd_prestador_convenio::text, '') = '' or substr(c02_w.intern_item_esp,1,3) = 600   ) then
		begin
		if (c02_w.ie_tipo_atendimento = 1) then
			begin
			if (coalesce(nr_atendimento_ant_iw::text, '') = '') or ( nr_atendimento_ant_iw <> c02_w.nr_atendimento) then
				nr_atendimento_ant_iw := c02_w.nr_atendimento;
				intern_item_seq_w := 0;
			end if;

			intern_item_seq_w :=  intern_item_seq_w + 1;

			insert into w_tmp_carga_hosp_int_item(
				dt_lib_intercompany, --1
				ie_lib_intercompany, --2
				mes_ref, --3
				prest_id, --4
				grp_emp_id, --5
				guia_id, --6
				guia_nr, --7
				intern_item, --8
				intern_item_esp,
				intern_item_emerg,
				intern_item_dt,
				intern_item_qtd,
				intern_item_vlr,
				intern_item_prest_id,
				intern_item_prest_guia_nr,
				intern_item_senha,
				intern_item_prest_guia_id,
				tchi_hor_ini_rlz_pcm,
				tchi_hor_fim_rlz_pcm,
				tchi_tbl_rfr,
				tchi_via_acs_pcm,
				tchi_tec_utl_pcm,
				tchi_fat_rdt_acr,
				tchi_vlr_unt_pcm,
				nr_seq_protocolo )
			values (null, --1
				'N', --2
				c02_w.dt_mesano_referencia, --3
				somente_numero(substr(c02_w.cd_interno,1,5)), --4
				1, --5
				c02_w.guia_id, --6
				somente_numero(substr(c02_w.nr_atendimento,1,12)), --7
				intern_item_seq_w, --8
				somente_numero(substr(c02_w.intern_item_esp,1,8)),
				CASE WHEN c02_w.ie_tipo_atendimento=1 THEN  'N'  ELSE 'S' END ,
				c02_w.intern_item_dt,
				substr(c02_w.intern_item_qtd,1,7),
				c02_w.intern_item_vlr,
				null,
				somente_numero(substr(c02_w.nr_atendimento,1,8)),
				somente_numero(substr(c02_w.intern_item_senha,1,12)),
				null,
				c02_w.dt_inicio_procedimento,
				c02_w.dt_final_procedimento,
				substr(lpad(c02_w.cd_edicao_amb,4,0),3,2),
				c02_w.ie_via_acesso,
				substr(c02_w.tchi_tec_utl_pcm,1,1),
				null,
				substr(c02_w.vl_unitario,1,6),
				nr_seq_protocolo_p );

			end;
		else
			begin

			if (coalesce(nr_atendimento_ant_w::text, '') = '') or ( nr_atendimento_ant_w <> c02_w.nr_atendimento) then
				nr_atendimento_ant_w := c02_w.nr_atendimento;
				guia_item_seq_w := 0;
			end if;

			guia_item_seq_w :=  guia_item_seq_w + 1;

			insert into w_tmp_carga_hosp_guia_item(
				dt_lib_intercompany, --1
				ie_lib_intercompany, --2
				mes_ref, --3
				prest_id, --4
				grp_emp_id, --5
				guia_id, --6
				guia_nr, --7
				guia_item_seq, --8
				guia_item_esp, --9
				guia_item_qtd, --10
				guia_item_vlr,
				tchu_hor_ini_rlz_pcm,
				tchu_hor_fim_rlz_pcm,
				tchu_tbl_rfr,
				tchu_via_acs,
				tchu_tec_utl_pcm,
				tchu_fat_rdt_acr,
				tchu_vlr_unt_pcm,
				nr_seq_protocolo )
			values (null, --1
				'N', --2
				c02_w.dt_mesano_referencia, --3
				somente_numero(substr(c02_w.cd_interno,1,5)), --4
				1, --5
				c02_w.guia_id, --6
				somente_numero(substr(c02_w.nr_atendimento,1,12)),  --7
				guia_item_seq_w, --8
				somente_numero(substr(c02_w.intern_item_esp,1,8)), --9
				substr(c02_w.intern_item_qtd,1,7), --10
				c02_w.intern_item_vlr,
				c02_w.dt_inicio_procedimento,
				c02_w.dt_final_procedimento,
				--substr(c02_w.cd_edicao_amb,1,2),
				substr(lpad(c02_w.cd_edicao_amb,4,0),3,2),
				c02_w.ie_via_acesso,
				substr(c02_w.tchi_tec_utl_pcm,1,1),
				null,
				substr(c02_w.vl_unitario,1,6),
				nr_seq_protocolo_p );
			end;
		end if;
		exception
			when unique_violation then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(msg_dup_w ||chr(13)||chr(10)||
				'Item/Guia - Atendimento: '|| c02_w.nr_atendimento);
			when OTHERS then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(msg_atd_w ||chr(13)||chr(10)||
				'Item/Guia - Atendimento: ' || c02_w.nr_atendimento);
		end;
	else
		begin

		if (coalesce(nr_atendimento_ant_tw::text, '') = '') or ( nr_atendimento_ant_tw <> c02_w.nr_atendimento) then
			nr_atendimento_ant_tw := c02_w.nr_atendimento;
			terc_item_seq_w := 0;
		end if;

		terc_item_seq_w :=  terc_item_seq_w + 1;

		insert into w_tmp_atend_terc_prop_item(
			dt_lib_intercompany,
			ie_lib_intercompany,
			mes_ref,
			prest_id,
			guia_id,
			guia_nr,
			prest_id_ppo,
			item_seq,
			item_exec_dt,
			item_pcdm_cod,
			item_qtd,
			item_emerg,
			item_vlr,
			nr_seq_protocolo )
		values (null,
			'N',
			c02_w.dt_mesano_referencia,
			c02_w.cd_prestador_convenio,
			c02_w.guia_id,
			somente_numero(substr(c02_w.nr_atendimento,1,12)),
			somente_numero(substr(c02_w.cd_interno,1,5)),
			terc_item_seq_w,
			c02_w.dt_mesano_referencia,
			c02_w.intern_item_esp,
			c02_w.intern_item_qtd,
			CASE WHEN c02_w.ie_tipo_atendimento=1 THEN  'N'  ELSE 'S' END ,
			c02_w.intern_item_vlr,
			nr_seq_protocolo_p );

		exception
		when unique_violation then
			  CALL wheb_mensagem_pck.exibir_mensagem_abort(msg_dup_w ||chr(13)||chr(10)||
			  'Item/Terc - Atendimento: '|| c02_w.nr_atendimento);
		when OTHERS then
			  CALL wheb_mensagem_pck.exibir_mensagem_abort(msg_atd_w ||chr(13)||chr(10)||
			  'Item/Terc - Atendimento: ' || c02_w.nr_atendimento);

		end;
	end if;
	contador_w := contador_w + 1;
	if (contador_w > 2000)then
		commit;
		contador_w := 0;
	end if;
	end;	
end loop;
close c02;
contador_w := 0;
-- atualiza capas
open c04;
loop
fetch c04
into c04_w;
EXIT WHEN NOT FOUND; /* apply on c04 */
	begin
	if (c04_w.guia_id  = 12) then
		begin
		select  sum(intern_item_vlr)
		into STRICT  vl_tot_w
		from  w_tmp_carga_hosp_int_item a
		where nr_seq_protocolo  = nr_seq_protocolo_p
		and mes_ref   = c04_w.mes_ref
		and prest_id  = c04_w.prest_id
		and grp_emp_id  = 1
		and guia_id   = c04_w.guia_id
		and guia_nr   = c04_w.guia_nr;

		update  w_tmp_carga_hosp_guia
		set guia_vlr_apres  = vl_tot_w
		where nr_seq_protocolo  =  nr_seq_protocolo_p
		and mes_ref   = c04_w.mes_ref
		and prest_id  = c04_w.prest_id
		and grp_emp_id  = 1
		and guia_id   = c04_w.guia_id
		and guia_nr   = c04_w.guia_nr;
		end;
	else
		begin
		vl_tot_w:= 0;
		select  sum(guia_item_vlr)
		into STRICT  vl_tot_w
		from  w_tmp_carga_hosp_guia_item a
		where nr_seq_protocolo =  nr_seq_protocolo_p
		and mes_ref  = c04_w.mes_ref
		and prest_id = c04_w.prest_id
		and grp_emp_id = 1
		and guia_id    = c04_w.guia_id
		and guia_nr    = c04_w.guia_nr;

		update  w_tmp_carga_hosp_guia
		set guia_vlr_apres = vl_tot_w
		where nr_seq_protocolo =  nr_seq_protocolo_p
		and mes_ref  = c04_w.mes_ref
		and prest_id = c04_w.prest_id
		and grp_emp_id = 1
		and guia_id    = c04_w.guia_id
		and guia_nr    = c04_w.guia_nr;
		end;
	end if;
	end;
	contador_w := contador_w + 1;
	if (contador_w > 2000)then
		commit;
		contador_w := 0;
	end if;
end loop;
close c04;
contador_w := 0;
nr_atendimento_ant_w    := null;
--nr_atendimento_ant_iw   := null;

--nr_atendimento_ant_tw   := null;
guia_item_seq_w         := 0;
--intern_item_seq_w       := 0;

--terc_item_seq_w         := 0;
open c03;
loop
fetch c03 into
    c03_w;
EXIT WHEN NOT FOUND; /* apply on c03 */
	begin

	if (coalesce(nr_atendimento_ant_w::text, '') = '') or ( nr_atendimento_ant_w <> c03_w.nr_atendimento) then
		nr_atendimento_ant_w := c03_w.nr_atendimento;
		guia_item_seq_w := 0;
	end if;

	guia_item_seq_w :=  guia_item_seq_w + 1;

	-- GRAVAR A TABELA TISS
	if (c03_w.nr_seq_grupo_rec = 2) then
		tcmo_tbl_rfr_w := 96;
	elsif (c03_w.nr_seq_grupo_rec = 3)  then
		tcmo_tbl_rfr_w :=95;
	elsif (c03_w.nr_seq_grupo_rec = 8)  then
		tcmo_tbl_rfr_w :=19;
	else
		tcmo_tbl_rfr_w :=95;
	end if;

	insert into w_tmp_tcmo_cga_mtl_mdc_omm(
		dt_lib_intercompany, --1
		ie_lib_intercompany, --2
		nr_seq_protocolo, --3
		tcmo_mes_rfr, --4
		tcmo_prtd_cod, --5
		tcmo_cod_emp, --6
		tcmo_tip_gui, --7
		tcmo_nro_gui, --8
		tcmo_tip_dsp, --9
		tcmo_seq_ite, --10
		tcmo_dat_exu_ral, --11
		tcmo_hor_ini_exu_ral, --12
		tcmo_hor_fim_exu_ral, --13
		tcmo_tbl_rfr, --14
		tcmo_cod_ite, -- 15
		tcmo_qtd_ite,
		tcmo_und_mdd_ite,
		tcmo_fat_rdt_acr_ite,
		tcmo_vlr_unt_ite,
		tcmo_vlr_tot_ite,
		tcmo_nro_reg_mtl_avv,
		tcmo_cod_rfr_mtl_fab,
		tcmo_nro_aut_emp_vdo,
		tcmo_des_ite,
		tcmo_val_cst_mdi_unt )
	values (  null, --1
		'N', --2
		nr_seq_protocolo_p, --3
		c03_w.dt_mesano_referencia, --4
		c03_w.cd_interno, --5
		1, --6
		c03_w.guia_id, --7
		somente_numero(substr(c03_w.nr_atendimento,1,12)), --8
		c03_w.nr_seq_grupo_rec, --9
		guia_item_seq_w, --10
		c03_w.dt_atendimento, --1 1
		c03_w.dt_atendimento, --12
		to_date(to_char(trunc(c03_w.dt_atendimento), 'dd/mm/yyyy') || '23:59', 'dd/mm/yyyy hh24:mi:ss'), --13
		tcmo_tbl_rfr_w,-- c03_w.tcmo_tbl_rfr, --14
		c03_w.cd_material_tuss, --15
		substr(c03_w.qt_material,1,7),
		c03_w.cd_unidade_medida,
		null,
		c03_w.vl_unitario,
		c03_w.vl_material,
		c03_w.nr_registro_anvisa,
		c03_w.cd_fabricante,
		c03_w.nr_autor_func,
		c03_w.ds_material,
		c03_w.vl_custo_medio );

	exception
	when unique_violation then
		  CALL wheb_mensagem_pck.exibir_mensagem_abort(msg_dup_w ||chr(13)||chr(10)||
		  'Item/Med - Atendimento: '|| c02_w.nr_atendimento);
	when OTHERS then
		  CALL wheb_mensagem_pck.exibir_mensagem_abort(msg_atd_w ||chr(13)||chr(10)||
		  'Item/Med - Atendimento: ' || c02_w.nr_atendimento);

	end;
	contador_w := contador_w + 1;
	if (contador_w > 2000)then
		commit;
		contador_w := 0;
	end if;
end loop;
close c03;

if (wheb_usuario_pck.get_ie_commit = 'S') then
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE enviar_fat_intercompany ( nr_seq_protocolo_p bigint, nm_usuario_p text) FROM PUBLIC; -- REVOKE ALL ON PROCEDURE enviar_fat_intercompany_atx ( nr_seq_protocolo_p bigint, nm_usuario_p text) FROM PUBLIC;

