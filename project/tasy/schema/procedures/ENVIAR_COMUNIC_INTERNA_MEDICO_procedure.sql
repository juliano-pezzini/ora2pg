-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE enviar_comunic_interna_medico ( cd_evolucao_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
vl_parametro105_w		varchar(255);
vl_parametro630_w		varchar(255);
nm_usuario_w			varchar(15);
nm_usuario_ww			varchar(15);
nr_atendimento_w		bigint;
ie_evolucao_clinica_w		varchar(3);
cd_medico_w			varchar(10);
nm_usuarios_dest_w		varchar(4000);
cd_especialidade_w		integer;
qt_registros_w			bigint;
ds_medico_w			varchar(255);
tipo_atendimento_w		varchar(255);
unidade_atendimento_w		varchar(255);
cd_estabelecimento_w		bigint;
texto_comunic_w			varchar(32000);
cd_pessoa_fisica_w		varchar(10);
ds_evolucao_w			varchar(32000);
ds_pos_inicio_rtf_w	bigint;
nr_seq_classif_w	bigint;
nm_pessoa_fisica_w		varchar(255);
ds_unidade_w			varchar(255);			
 
C01 CURSOR FOR 
	SELECT	nm_usuario 
	from	usuario 
	where 	cd_pessoa_fisica 	in (SELECT	cd_pessoa_fisica 
					from	pessoa_destino_evolucao 
					where	cd_evolucao			= cd_evolucao_p 
  				     and	(cd_pessoa_fisica IS NOT NULL AND cd_pessoa_fisica::text <> '') 
					 and	cd_pessoa_fisica 	<> (select	coalesce(max(cd_medico_parecer),0) 
										from	evolucao_paciente 
										where	cd_evolucao 	= cd_evolucao_p) 
					
union
 
					select	c.cd_pessoa_fisica 
					from	pessoa_destino_evolucao b, 
						grupo_paracer_pessoa c 
					where	c.nr_seq_grupo		= b.nr_seq_grupo 
					 and	cd_evolucao			= cd_evolucao_p 
					 and	c.cd_pessoa_fisica 	<> (select	coalesce(max(cd_medico_parecer),0) 
					from	evolucao_paciente 
					where	cd_evolucao 	= cd_evolucao_p));

C02 CURSOR FOR 
	SELECT	nm_usuario 
	from	usuario 
	where 	cd_pessoa_fisica 	in (SELECT	cd_pessoa_fisica 
						from	medico_especialidade 
						where	cd_especialidade	= cd_especialidade_w) 
	and	cd_estabelecimento	= cd_estabelecimento_w;
																	

BEGIN 
 
select	max(nm_usuario)	 
into STRICT	nm_usuario_w 
from	usuario 
where	cd_pessoa_fisica 	= (	SELECT	max(cd_medico_parecer) 
					from	evolucao_paciente 
					where	cd_evolucao 	= cd_evolucao_p);
 
select 	max(ie_evolucao_clinica), 
	max(cd_especialidade), 
	max(cd_medico), 
	max(nr_atendimento), 
	max(cd_pessoa_fisica) 
into STRICT	ie_evolucao_clinica_w, 
	cd_especialidade_w, 
	cd_medico_w, 
	nr_atendimento_w, 
	cd_pessoa_fisica_w 
from	evolucao_paciente 
where	cd_evolucao 	= cd_evolucao_p;
 
 
select	max(nr_seq_classif) 
into STRICT	nr_seq_classif_w 
from	tipo_evolucao 
where	cd_tipo_evolucao	= ie_evolucao_clinica_w;
 
 
if (cd_evolucao_p IS NOT NULL AND cd_evolucao_p::text <> '') then 
	select	ds_evolucao 
	into STRICT	ds_evolucao_w 
	from	evolucao_paciente 
	where	cd_evolucao 	= cd_evolucao_p;
end if;
 
cd_estabelecimento_w	:= wheb_usuario_pck.get_cd_estabelecimento;
 
if (obter_se_medico(cd_medico_w,'M')	= 'S')	then 
	ds_medico_w	:= Wheb_mensagem_pck.get_texto(308082, 'NM_MEDICO='||obter_nome_medico(cd_medico_w,'N')) /*'Médico: ' || obter_nome_medico(cd_medico_w,'N')*/ ||' \par ';
else 
	ds_medico_w	:= Wheb_mensagem_pck.get_texto(308083, 'DS_PROFISSIONAL='||obter_nome_medico(cd_medico_w,'N')) /*'Profissional: ' || obter_nome_medico(cd_medico_w,'N')*/ ||' \par ';
end if;	
 
if (ie_evolucao_clinica_w = 'P') then -- Pedido de parecer 
 
		ds_pos_inicio_rtf_w := position('rtf1' in ds_evolucao_w)+4;
		texto_comunic_w 	:= substr(ds_evolucao_w,1, ds_pos_inicio_rtf_w ) || ' ';
	 
	vl_parametro105_w := '';
	vl_parametro630_w := '';
	 
	-- [105] - Forma de envio ao médico ao liberar evolução do tipo parecer 
	vl_parametro105_w := Obter_Param_Usuario(281, 105, obter_perfil_ativo, nm_usuario_p, 0, vl_parametro105_w);
	-- [630] - Enviar comunicação interna aos médicos da especialidade do paciente na evolução paciente 
	vl_parametro630_w := Obter_Param_Usuario(281, 630, obter_perfil_ativo, nm_usuario_p, 0, vl_parametro630_w);
	 
	if (vl_parametro105_w = 'S') or (vl_parametro105_w = 'EC') then	 
		nm_usuarios_dest_w := nm_usuario_w;
		 
		open C01;
		loop 
		fetch C01 into	 
			nm_usuario_w;		
		EXIT WHEN NOT FOUND; /* apply on C01 */
			if (coalesce(nm_usuarios_dest_w::text, '') = '') then 
				nm_usuarios_dest_w	:= nm_usuario_w;
			else 
				nm_usuarios_dest_w	:=	substr(nm_usuarios_dest_w || ',' || nm_usuario_w,1,4000);
			end if;
		end loop;
		close C01;
		 
		texto_comunic_w	:=	texto_comunic_w|| Wheb_mensagem_pck.get_texto(308084, 'NR_ATENDIMENTO_W='||nr_atendimento_w) /*'Existe um pedido de parecer referente ao Atendimento: ' || nr_atendimento_w*/	||' \par '|| 
					Wheb_mensagem_pck.get_texto(308085, 'NM_PAC='||substr(obter_nome_pf(cd_pessoa_fisica_w),1,60)) /*'Paciente: ' || substr(obter_nome_pf(cd_pessoa_fisica_w),1,60)*/ ||' \par '|| 
					Wheb_mensagem_pck.get_texto(308086, 'ds_setor_adicional='|| SUBSTR(Obter_Unidade_Atendimento(nr_atendimento_w,'A','S'),1,120)); --'Setor: ' || SUBSTR(Obter_Unidade_Atendimento(nr_atendimento_w,'A','S'),1,120); 
		if (vl_parametro630_w = 'S') then 
		 
			open C02;
			loop 
			fetch C02 into	 
				nm_usuario_w;		
			EXIT WHEN NOT FOUND; /* apply on C02 */
				if (coalesce(nm_usuarios_dest_w::text, '') = '') or (position(','||nm_usuario_w in ','||nm_usuarios_dest_w) = 0) then 
					nm_usuarios_dest_w	:= substr(nm_usuarios_dest_w || ',' || nm_usuario_w,1,4000);
				end if;
			end loop;
			close C02;
		 
			select 	nm_unidade, 
				ds_tipo_atendimento 
			into STRICT	unidade_atendimento_w, 
				tipo_atendimento_w 
			from  atendimento_paciente_v 
			where  nr_atendimento = nr_atendimento_w;
		 
			texto_comunic_w	:=	texto_comunic_w || ' \par '|| Wheb_mensagem_pck.get_texto(308087) || ' ' /*'Unidade: '*/ || unidade_atendimento_w || ' \par '|| 
						Wheb_mensagem_pck.get_texto(308092) || ' ' /*'Tipo de atendimento: '*/ || tipo_atendimento_w;
			 
		end if;
 
		texto_comunic_w	:=	texto_comunic_w || ' \par '|| ds_medico_w || 
					Wheb_mensagem_pck.get_texto(308094) || ' \par ' /*'Favor verificar no PEP item Evoluções \par'*/|| 
					Wheb_mensagem_pck.get_texto(308095) || ': \par \par '; /*'Pedido parecer: \par \par';*/
 
 
	 
		--texto_comunic_w	:= replace(texto_comunic_w,chr(13) || chr(10),'\par'); 
		
		texto_comunic_w := texto_comunic_w || ' \par \par '|| substr(ds_evolucao_w,ds_pos_inicio_rtf_w,length(ds_evolucao_w));
		 
		insert	into comunic_interna(nr_sequencia, 
			dt_comunicado, 
			ds_titulo, 
			ds_comunicado, 
			nm_usuario, 
			nm_usuario_destino, 
			dt_atualizacao, 
			ie_geral, 
			ie_gerencial, 
			dt_liberacao, 
			nr_seq_classif) 
		Values (nextval('comunic_interna_seq'), 
			clock_timestamp(), 
			Wheb_mensagem_pck.get_texto(308096) /*'Pedido de Parecer'*/
, 
			texto_comunic_w, 
			nm_usuario_p, 
			nm_usuarios_dest_w, 
			clock_timestamp(), 
			'N', 
			'N', 
			clock_timestamp(), 
			nr_seq_classif_w);
		 
	end if;
		 
end if;	
 
if (ie_evolucao_clinica_w = 'R') then -- Resposta de parecer 
nm_usuario_ww := '';
 
		select	max(cd_medico) 
		into STRICT	cd_medico_w 
		from	evolucao_paciente 
		where	cd_evolucao 	= cd_evolucao_p;
		 
		select	substr(obter_nome_pf(cd_pessoa_fisica_w),1,60),			 
			SUBSTR(Obter_Unidade_Atendimento(nr_atendimento_w,'A','S'),1,120) 
		into STRICT	nm_pessoa_fisica_w, 
			ds_unidade_w 
		;		
	 
		select	max(nm_usuario)	 
		into STRICT	nm_usuario_ww 
		from	usuario 
		where	cd_pessoa_fisica 	= (	SELECT	cd_medico 
							from	evolucao_paciente 
							where		cd_evolucao = (	select	max(cd_evolucao) 
											from	evolucao_paciente 
											where	ie_evolucao_clinica = 'P' 
											and		nr_atendimento = nr_atendimento_w));
 
	insert	into comunic_interna(nr_sequencia, 
		dt_comunicado, 
		ds_titulo, 
		ds_comunicado, 
		nm_usuario, 
		nm_usuario_destino, 
		dt_atualizacao, 
		ie_geral, 
		ie_gerencial, 
		dt_liberacao, 
		nr_seq_classif) 
	Values (nextval('comunic_interna_seq'), 
		clock_timestamp(), 
		Wheb_mensagem_pck.get_texto(308097) /*'Resposta ao Pedido de Parecer'*/
, 
		Wheb_mensagem_pck.get_texto(308098, 'NR_ATENDIMENTO_W='||NR_ATENDIMENTO_W) /*'Existe uma resposta ao pedido de parecer referente ao Atendimento: ' || nr_atendimento_w*/|| chr(13) || chr(10) ||  
		Wheb_mensagem_pck.get_texto(308100) || ' ' /*'Paciente: '*/ || nm_pessoa_fisica_w || chr(13) || chr(10) || 
		Wheb_mensagem_pck.get_texto(308102) || ' ' /*'Setor: '*/ || ds_unidade_w	|| chr(13) || chr(10) || 
		ds_medico_w	|| 
		Wheb_mensagem_pck.get_texto(308094) /*'Favor verificar no PEP item Evoluções'*/
, 
		nm_usuario_p, 
		nm_usuario_ww, 
		clock_timestamp(), 
		'N', 
		'N', 
		clock_timestamp(), 
		nr_seq_classif_w);
end if;
 
commit;
 
end	;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE enviar_comunic_interna_medico ( cd_evolucao_p bigint, nm_usuario_p text) FROM PUBLIC;

