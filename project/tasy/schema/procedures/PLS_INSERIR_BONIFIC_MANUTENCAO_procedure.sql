-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_inserir_bonific_manutencao ( nr_seq_vinculo_p bigint, ie_opcao_p text, nm_usuario_p text) AS $body$
DECLARE


/*
ie_opcao_p
PA - Prospota de Adesão
BP - Beneficiário de plano de saúde
BE - Beneficiários de plano de saúde(contatos)
CO- Contratos de plano de saúde
PC - Pagador de plano de saúde(contatos)
SC - SCA
*/
nr_seq_bonficacao_w	bigint;
tx_bonificacao_w	double precision;
vl_bonificacao_w	double precision;
qt_registros_w		bigint;
qt_alteracao_bonific_w	bigint;
dt_inicio_vigencia_w	timestamp;
dt_fim_vigencia_w	timestamp;

C01 CURSOR FOR
	SELECT	nr_seq_bonificacao,
		tx_bonificacao,
		vl_bonificacao,
		dt_inicio_vigencia,
		dt_fim_vigencia
	from	w_pls_bonificacao_vinculo
	where	nr_seq_proposta	= nr_seq_vinculo_p
	and	ie_opcao_p		= 'PA'
	
union

	SELECT	nr_seq_bonificacao,
		tx_bonificacao,
		vl_bonificacao,
		dt_inicio_vigencia,
		dt_fim_vigencia
	from	w_pls_bonificacao_vinculo
	where	nr_seq_benef_proposta	= nr_seq_vinculo_p
	and	ie_opcao_p		= 'BP';


BEGIN

open C01;
loop
fetch C01 into
	nr_seq_bonficacao_w,
	tx_bonificacao_w,
	vl_bonificacao_w,
	dt_inicio_vigencia_w,
	dt_fim_vigencia_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	if (ie_opcao_p = 'PA') then
		select	count(*)
		into STRICT	qt_registros_w
		from	pls_bonificacao_vinculo
		where	nr_seq_proposta	= nr_seq_vinculo_p
		and	nr_seq_bonificacao	= nr_seq_bonficacao_w;

		if (qt_registros_w	= 0) then
			insert into pls_bonificacao_vinculo(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
					nr_seq_proposta,nr_seq_bonificacao,tx_bonificacao,vl_bonificacao,dt_inicio_vigencia,
					dt_fim_vigencia)
			values (	nextval('pls_bonificacao_vinculo_seq'),clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,
					nr_seq_vinculo_p,nr_seq_bonficacao_w,tx_bonificacao_w,vl_bonificacao_w,dt_inicio_vigencia_w,
					dt_fim_vigencia_w);
		elsif (qt_registros_w	> 0) then
			select	count(*)
			into STRICT	qt_alteracao_bonific_w
			from	pls_bonificacao_vinculo
			where	nr_seq_proposta				= nr_seq_vinculo_p
			and	nr_seq_bonificacao			= nr_seq_bonficacao_w
			and	coalesce(tx_bonificacao,0)			= coalesce(tx_bonificacao_w,0)
			and	coalesce(vl_bonificacao,0)			= coalesce(vl_bonificacao_w,0)
			and	coalesce(dt_inicio_vigencia,'01/01/1900')	= coalesce(dt_inicio_vigencia_w,'01/01/1900')
			and	coalesce(dt_fim_vigencia,'01/01/1900') 	= coalesce(dt_fim_vigencia_w,'01/01/1900');

			if (qt_alteracao_bonific_w	= 0) then
				update	pls_bonificacao_vinculo
				set	tx_bonificacao		= tx_bonificacao_w,
					vl_bonificacao		= vl_bonificacao_w,
					dt_inicio_vigencia	= dt_inicio_vigencia_w,
					dt_fim_vigencia		= dt_fim_vigencia_w,
					dt_atualizacao		= clock_timestamp(),
					nm_usuario		= nm_usuario_p
				where	nr_seq_proposta	= nr_seq_vinculo_p
				and	nr_seq_bonificacao	= nr_seq_bonficacao_w;
			end if;
		end if;
	elsif (ie_opcao_p = 'BP') then
		select	count(*)
		into STRICT	qt_registros_w
		from	pls_bonificacao_vinculo
		where	nr_seq_segurado_prop	= nr_seq_vinculo_p
		and	nr_seq_bonificacao	= nr_seq_bonficacao_w;

		if (qt_registros_w	= 0) then
			insert into pls_bonificacao_vinculo(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
					nr_seq_segurado_prop,nr_seq_bonificacao,tx_bonificacao,vl_bonificacao,dt_inicio_vigencia,
					dt_fim_vigencia)
			values (	nextval('pls_bonificacao_vinculo_seq'),clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,
					nr_seq_vinculo_p,nr_seq_bonficacao_w,tx_bonificacao_w,vl_bonificacao_w,dt_inicio_vigencia_w,
					dt_fim_vigencia_w);
		elsif (qt_registros_w	> 0) then
			select	count(*)
			into STRICT	qt_alteracao_bonific_w
			from	pls_bonificacao_vinculo
			where	nr_seq_segurado_prop			= nr_seq_vinculo_p
			and	nr_seq_bonificacao			= nr_seq_bonficacao_w
			and	coalesce(tx_bonificacao,0)			= coalesce(tx_bonificacao_w,0)
			and	coalesce(vl_bonificacao,0)			= coalesce(vl_bonificacao_w,0)
			and	coalesce(dt_inicio_vigencia,'01/01/1900')	= coalesce(dt_inicio_vigencia_w,'01/01/1900')
			and	coalesce(dt_fim_vigencia,'01/01/1900') 	= coalesce(dt_fim_vigencia_w,'01/01/1900');

			if (qt_alteracao_bonific_w	= 0) then
				update	pls_bonificacao_vinculo
				set	tx_bonificacao		= tx_bonificacao_w,
					vl_bonificacao		= vl_bonificacao_w,
					dt_inicio_vigencia	= dt_inicio_vigencia_w,
					dt_fim_vigencia		= dt_fim_vigencia_w,
					dt_atualizacao		= clock_timestamp(),
					nm_usuario		= nm_usuario_p
				where	nr_seq_segurado_prop	= nr_seq_vinculo_p
				and	nr_seq_bonificacao	= nr_seq_bonficacao_w;
			end if;
		end if;
	end if;
	end;
end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_inserir_bonific_manutencao ( nr_seq_vinculo_p bigint, ie_opcao_p text, nm_usuario_p text) FROM PUBLIC;

