-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE validar_proc_paciente_eup_js ( ie_possui_registros_p text, ie_pasta_laboratorio_p text, nr_exame_p bigint, nr_seq_material_p text, dt_prescr_exame_p timestamp, ie_origem_proced_p text, cd_convenio_p bigint, nr_atendimento_p bigint, cd_procedimento_p bigint, cd_setor_atendimento_p bigint, cd_medico_executor_p text, ie_tipo_atendimento_p bigint, nr_seq_exame_p bigint, ds_sexo_paciente_p text, qt_procedimento_p bigint, cd_pessoa_fisica_p text, nr_seq_proc_interno_p bigint, ie_edicao_novo_p text, nm_usuario_p text, cd_estabelecimento_p text, cd_perfil_p bigint, ds_msg_erro_p INOUT text, ds_msg_alerta_p INOUT text, ie_cancelar_edicao_p INOUT text, ds_msg_info_p INOUT text) AS $body$
DECLARE

 
					 
					 
ie_permite_w			varchar(1);
ds_msg_erro_w			varchar(255)	:= '';
ds_msg_alerta_w			varchar(255)	:= '';
ds_msg_info_w			varchar(255)	:= '';
ie_cancelar_edicao_w		varchar(1)	:= 'N';
ie_continuar_exec_w		varchar(1)	:= 'S';
ds_valor_parametro_w		varchar(1);
ie_tipo_convenio_w		smallint;
ie_sus_consiste_proced_atend_w	varchar(10);
cd_estabelecimento_base_w	smallint;
ie_regra_w			varchar(1);
ds_convenio_w			varchar(255);
ie_sexo_w			varchar(1);
ie_sexo_exclusivo_proc_w	varchar(1);
ie_idade_paciente_proc_w	varchar(1);
ie_obter_proc_interno_conv_w	varchar(1);


BEGIN 
 
IF (ie_possui_registros_p = 'S')AND (ie_pasta_laboratorio_p = 'S')THEN 
	BEGIN 
 
	ie_permite_w := valida_exame_dia_semana(nr_exame_p, nr_seq_material_p, dt_prescr_exame_p, nm_usuario_p, cd_estabelecimento_p, ie_permite_w);
 
	IF (ie_permite_w IS NOT NULL AND ie_permite_w::text <> '')THEN 
		BEGIN 
 
		IF (ie_permite_w = 'N') THEN 
			BEGIN 
			ds_msg_erro_w		:= Wheb_mensagem_pck.get_texto(345697); --Este exame não pode ser prescrito neste dia. 
			ie_continuar_exec_w	:= 'N';
			END;
		END IF;
 
		IF (ie_permite_w = 'L') THEN 
			BEGIN 
			ds_msg_info_w 		:= Wheb_mensagem_pck.get_texto(231969); --Este exame não pode ser prescrito neste dia. O mesmo será lançado com data de resultado conforme regra LAB - Dias de realização dos Exames. 
			ie_continuar_exec_w	:= 'S';
			END;
		END IF;
 
 
		END;
	END IF;
 
	END;
END IF;
 
IF (ie_continuar_exec_w = 'S')THEN 
	BEGIN 
 
	ds_valor_parametro_w := obter_param_usuario(916, 436, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ds_valor_parametro_w);
 
	SELECT 	MAX(ie_tipo_convenio) 
	INTO STRICT	ie_tipo_convenio_w 
	FROM 	convenio 
	WHERE 	cd_convenio = cd_convenio_p;
 
	ie_sus_consiste_proced_atend_w	:= sus_consiste_proced_Atend(nr_atendimento_p, cd_procedimento_p, ie_origem_proced_p);
 
	IF (ds_valor_parametro_w = 'S')AND (ie_origem_proced_p = '7')AND (ie_tipo_convenio_w = 3)AND (ie_sus_consiste_proced_atend_w = 'N')THEN 
		BEGIN 
 
		ds_msg_erro_w		:= Wheb_mensagem_pck.get_texto(345696); --Procedimento incompatível com o tipo do atendimento. Parâmetro [436] 
		ie_continuar_exec_w	:= 'N';
 
		END;
	END IF;
 
	END;
END IF;
 
IF (ie_continuar_exec_w = 'S')THEN 
	BEGIN 
 
	ds_valor_parametro_w := obter_param_usuario(916, 420, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ds_valor_parametro_w);
 
	SELECT	MAX(cd_estabelecimento_base) 
	INTO STRICT	cd_estabelecimento_base_w 
	FROM  setor_atendimento 
	WHERE  cd_setor_atendimento = cd_setor_atendimento_p;
 
	IF (ds_valor_parametro_w = 'N')AND (cd_setor_atendimento_p <> 0)AND (cd_estabelecimento_base_w <> cd_estabelecimento_p)THEN 
		BEGIN 
 
		ds_msg_erro_w		:= Wheb_mensagem_pck.get_texto(345695); --Não é permitido prescrever exames/procedimentos para setores de outros estabelecimentos. Parâmetro [420] 
		ie_continuar_exec_w	:= 'N';
 
		END;
	END IF;
 
	END;
END IF;
 
IF (ie_continuar_exec_w = 'S')THEN 
	BEGIN 
 
	ds_valor_parametro_w := obter_param_usuario(916, 374, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ds_valor_parametro_w);
 
	IF (ds_valor_parametro_w = 'S')AND (cd_medico_executor_p <> 0)THEN 
		BEGIN 
 
		ie_regra_w	:= coalesce(obter_convenio_regra_atend(cd_medico_executor_p, cd_convenio_p, ie_tipo_atendimento_p, cd_estabelecimento_p, 'E', NULL, NULL), 'S');
 
		IF (ie_regra_w = 'N')THEN 
			BEGIN 
 
			SELECT 	MAX(ds_convenio) 
			INTO STRICT	ds_convenio_w 
			FROM 	convenio 
			WHERE 	cd_convenio = cd_convenio_p;
 
			ds_msg_alerta_w	:= Wheb_mensagem_pck.get_texto(345694, 'DS_CONVENIO_W=' || ds_convenio_w); --O médico não esta cadastrado para executar procedimentos para o convênio: #@DS_CONVENIO_W#@. Deseja continuar? 
			ie_continuar_exec_w	:= 'N';
 
			END;
		END IF;
 
		END;
	END IF;
 
	END;
END IF;
 
IF (ie_continuar_exec_w = 'S')THEN 
	BEGIN 
 
	IF (nr_seq_exame_p <> 0)THEN 
		BEGIN 
 
		SELECT  MAX(ie_sexo) 
		INTO STRICT	 ie_sexo_w 
		FROM   exame_laboratorio 
		WHERE  nr_seq_exame = nr_seq_exame_p;
 
		IF (ie_sexo_w <> '')AND (ie_sexo_w <> ds_sexo_paciente_p)THEN 
			BEGIN 
 
			ds_msg_erro_w		:= Wheb_mensagem_pck.get_texto(345692); --O sexo do paciente é incompatível com o sexo do exame laboratorial. 
			ie_continuar_exec_w	:= 'N';
 
			END;
		END IF;
 
		END;
	END IF;
 
	END;
END IF;
 
IF (ie_continuar_exec_w = 'S')THEN 
	BEGIN 
 
	ds_valor_parametro_w := obter_param_usuario(916, 250, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ds_valor_parametro_w);
 
	IF (ds_valor_parametro_w <> 'S')AND (qt_procedimento_p <> TRUNC(qt_procedimento_p))THEN 
		BEGIN 
 
		ds_msg_erro_w		:= Wheb_mensagem_pck.get_texto(345691); --Não é permitido procedimentos com quantidade fracionada. Parâmetro [250] 
		ie_continuar_exec_w	:= 'N';
 
		END;
	END IF;
 
	END;
END IF;
 
IF (ie_continuar_exec_w = 'S')THEN 
	BEGIN 
 
	ds_valor_parametro_w := obter_param_usuario(916, 129, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ds_valor_parametro_w);
	ie_sexo_exclusivo_proc_w	:= consistir_sexo_exclusivo_proc(cd_pessoa_fisica_p, nr_seq_proc_interno_p, cd_procedimento_p, ie_origem_proced_p);
 
 
	IF (ds_valor_parametro_w = 'S')AND (ie_sexo_exclusivo_proc_w = 'N')THEN 
		BEGIN 
 
		ds_msg_erro_w		:= Wheb_mensagem_pck.get_texto(345690); --O sexo do paciente não confere com o sexo exclusivo do procedimento! 
		ie_continuar_exec_w	:= 'N';
 
		END;
	END IF;
 
	END;
END IF;
 
IF (ie_continuar_exec_w = 'S')THEN 
	BEGIN 
 
	ds_valor_parametro_w := obter_param_usuario(916, 303, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ds_valor_parametro_w);
	ie_idade_paciente_proc_w	:= consistir_idade_paciente_proc(cd_pessoa_fisica_p, cd_procedimento_p, ie_origem_proced_p);
 
	IF (ds_valor_parametro_w = 'S')AND (ie_idade_paciente_proc_w = 'N')THEN 
		BEGIN 
 
		ds_msg_erro_w		:= Wheb_mensagem_pck.get_texto(345619); --A idade do paciente está fora do período mín/máx do procedimento. 
		ie_continuar_exec_w	:= 'N';
 
		END;
	END IF;
 
	END;
END IF;
 
IF (ie_continuar_exec_w = 'S')THEN 
	BEGIN 
 
	ds_valor_parametro_w := obter_param_usuario(916, 105, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ds_valor_parametro_w);
 
	IF (ds_valor_parametro_w IN ('S', 'A'))AND (nr_seq_proc_interno_p <> 0)THEN 
		BEGIN 
 
		ie_obter_proc_interno_conv_w		:= coalesce(obter_se_proc_interno_conv(nr_seq_proc_interno_p, nr_atendimento_p), 'N');
 
		IF (ie_edicao_novo_p = 'S')AND ( ie_obter_proc_interno_conv_w = 'N')THEN 
			BEGIN 
			IF (ds_valor_parametro_w = 'A') THEN 
				ds_msg_info_w		:= Wheb_mensagem_pck.get_texto(345618); --Este procedimento interno não possui nenhum vínculo com este convênio! 
			ELSE
				ie_cancelar_edicao_w	:= 'S';
				ds_msg_erro_w		:= Wheb_mensagem_pck.get_texto(345618); --Este procedimento interno não possui nenhum vínculo com este convênio! 
				ie_continuar_exec_w	:= 'N';
			END IF;
			END;
		END IF;
 
		END;
	END IF;
 
	END;
END IF;
 
ds_msg_erro_p		:= ds_msg_erro_w;
ds_msg_alerta_p		:= ds_msg_alerta_w;
ie_cancelar_edicao_p	:= ie_cancelar_edicao_w;
ds_msg_info_p	:= ds_msg_info_w;
 
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE validar_proc_paciente_eup_js ( ie_possui_registros_p text, ie_pasta_laboratorio_p text, nr_exame_p bigint, nr_seq_material_p text, dt_prescr_exame_p timestamp, ie_origem_proced_p text, cd_convenio_p bigint, nr_atendimento_p bigint, cd_procedimento_p bigint, cd_setor_atendimento_p bigint, cd_medico_executor_p text, ie_tipo_atendimento_p bigint, nr_seq_exame_p bigint, ds_sexo_paciente_p text, qt_procedimento_p bigint, cd_pessoa_fisica_p text, nr_seq_proc_interno_p bigint, ie_edicao_novo_p text, nm_usuario_p text, cd_estabelecimento_p text, cd_perfil_p bigint, ds_msg_erro_p INOUT text, ds_msg_alerta_p INOUT text, ie_cancelar_edicao_p INOUT text, ds_msg_info_p INOUT text) FROM PUBLIC;

