-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_lanc_aut_contr_inter ( nr_seq_intercambio_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE

				
qt_registros_w			bigint;
NR_SEQ_GRUPO_INTERCAMBIO_w	bigint;
nr_seq_regra_lanc_aut_w		bigint;
dt_contrato_w			timestamp;
nr_seq_regra_coparticipacao_w	bigint;
nr_seq_tipo_coparticipacao_w	bigint;
nr_seq_limitacao_w		bigint;
nr_seq_tipo_limitacao_w		bigint;
nr_seq_rede_atend_w		bigint;
nr_seq_rede_w			bigint;

C01 CURSOR FOR
	SELECT	nr_sequencia,
		nr_seq_tipo_coparticipacao
	from	pls_regra_coparticipacao
	where	nr_seq_regra_lanc_aut	= nr_seq_regra_lanc_aut_w;
	
C02 CURSOR FOR
	SELECT	nr_sequencia,
		nr_seq_tipo_limitacao
	from	pls_limitacao
	where	nr_seq_regra_lanc_aut	= nr_seq_regra_lanc_aut_w;
	
C03 CURSOR FOR
	SELECT	nr_sequencia,
		nr_seq_rede
	from	pls_plano_rede_atend
	where	nr_seq_regra_lanc_aut	= nr_seq_regra_lanc_aut_w;


BEGIN

select	dt_inclusao,
	nr_seq_grupo_intercambio
into STRICT	dt_contrato_w,
	nr_seq_grupo_intercambio_w
from	pls_intercambio
where	nr_sequencia			= nr_seq_intercambio_p;

select	count(1)
into STRICT	qt_registros_w
from	pls_regra_lanc_automatico
where	ie_evento		= '11'
and	ie_situacao		= 'A'
and	cd_estabelecimento	= cd_estabelecimento_p
and	dt_contrato_w between coalesce(dt_inicio_vigencia,dt_contrato_w) and coalesce(dt_fim_vigencia,dt_contrato_w)
and	nr_seq_grupo_intercambio = nr_seq_grupo_intercambio_w;

if (qt_registros_w > 0) then
	select	max(nr_sequencia)
	into STRICT	nr_seq_regra_lanc_aut_w
	from	pls_regra_lanc_automatico
	where	ie_evento		= '11'
	and	ie_situacao		= 'A'
	and	cd_estabelecimento	= cd_estabelecimento_p
	and	dt_contrato_w between coalesce(dt_inicio_vigencia,dt_contrato_w) and coalesce(dt_fim_vigencia,dt_contrato_w)
	and	nr_seq_grupo_intercambio = nr_seq_grupo_intercambio_w;
	
	if (nr_seq_regra_lanc_aut_w IS NOT NULL AND nr_seq_regra_lanc_aut_w::text <> '') then
		open C01;
		loop
		fetch C01 into	
			nr_seq_regra_coparticipacao_w,
			nr_seq_tipo_coparticipacao_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin
			
			select	count(1)
			into STRICT	qt_registros_w
			from	pls_regra_coparticipacao
			where	nr_seq_intercambio	= nr_seq_intercambio_p
			and	nr_seq_tipo_coparticipacao	= nr_seq_tipo_coparticipacao_w;
			
			if (qt_registros_w = 0) then
				insert into pls_regra_coparticipacao(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
						nr_seq_tipo_coparticipacao,qt_eventos_minimo,qt_meses_intervalo,ie_tipo_data_consistencia,ie_tipo_atendimento,
						ie_prestador_cooperado,dt_inicio_vigencia,dt_fim_vigencia,dt_contrato_de,dt_contrato_ate,qt_idade_min,
						qt_idade_max,ie_titularidade,ie_tipo_parentesco,qt_ocorrencias,ie_tipo_ocorrencia,
						qt_diaria_inicial,qt_diaria_final,qt_ocorrencia_grupo_serv,qt_periodo_ocor,ie_tipo_periodo_ocor,
						nr_seq_grupo_serv,cd_procedimento,tx_coparticipacao,vl_maximo,vl_coparticipacao,
						ie_reajuste,nr_seq_intercambio,ie_situacao,ie_incidencia_valor_maximo,ie_forma_cobr_internacao,ie_periodo_valor_maximo,ie_ano_calendario_outras_ocor,
						vl_base_min, vl_base_max, ie_incidencia_psiquiatria)
					(SELECT	nextval('pls_regra_coparticipacao_seq'),clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,
						nr_seq_tipo_coparticipacao,qt_eventos_minimo,qt_meses_intervalo,ie_tipo_data_consistencia,ie_tipo_atendimento,
						ie_prestador_cooperado,dt_inicio_vigencia,dt_fim_vigencia,dt_contrato_de,dt_contrato_ate,qt_idade_min,
						qt_idade_max,ie_titularidade,ie_tipo_parentesco,qt_ocorrencias,ie_tipo_ocorrencia,
						qt_diaria_inicial,qt_diaria_final,qt_ocorrencia_grupo_serv,qt_periodo_ocor,ie_tipo_periodo_ocor,
						nr_seq_grupo_serv,cd_procedimento,tx_coparticipacao,vl_maximo,vl_coparticipacao,
						ie_reajuste,nr_seq_intercambio_p,'A',ie_incidencia_valor_maximo,ie_forma_cobr_internacao,ie_periodo_valor_maximo,ie_ano_calendario_outras_ocor,
						vl_base_min, vl_base_max, ie_incidencia_psiquiatria
					from	pls_regra_coparticipacao
					where	nr_sequencia	= nr_seq_regra_coparticipacao_w);
			end if;
			end;
		end loop;
		close C01;
		
		open C02;
		loop
		fetch C02 into	
			nr_seq_limitacao_w,
			nr_seq_tipo_limitacao_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin
			
			select	count(1)
			into STRICT	qt_registros_w
			from	pls_limitacao
			where	nr_seq_intercambio	= nr_seq_intercambio_p
			and	nr_seq_tipo_limitacao	= nr_seq_tipo_limitacao_w;
			
			if (qt_registros_w = 0) then
				insert into pls_limitacao(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
						nr_seq_tipo_limitacao,qt_permitida,qt_meses_intervalo,ie_tipo_periodo,qt_dia_internacao,
						ie_periodo,nr_seq_intercambio)
					(SELECT	nextval('pls_limitacao_seq'),clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,
						nr_seq_tipo_limitacao,qt_permitida,qt_meses_intervalo,ie_tipo_periodo,qt_dia_internacao,
						ie_periodo,nr_seq_intercambio_p
					from	pls_limitacao
					where	nr_sequencia	= nr_seq_limitacao_w);
			end if;
			
			end;
		end loop;
		close C02;
		
		open C03;
		loop
		fetch C03 into
			nr_seq_rede_atend_w,
			nr_seq_rede_w;
		EXIT WHEN NOT FOUND; /* apply on C03 */
			begin
			
			select	count(1)
			into STRICT	qt_registros_w
			from	pls_plano_rede_atend
			where	nr_seq_rede			= nr_seq_rede_w
			and		nr_seq_intercambio	= nr_seq_intercambio_p;
			
			if (qt_registros_w = 0) then
				insert into pls_plano_rede_atend(nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
						nr_seq_rede, nr_seq_intercambio, dt_inicio_vigencia, dt_fim_vigencia)
						(SELECT	nextval('pls_plano_rede_atend_seq'), clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p,
							nr_seq_rede, nr_seq_intercambio_p, dt_inicio_vigencia, dt_fim_vigencia
						from	pls_plano_rede_atend
						where	nr_sequencia	= nr_seq_rede_atend_w);
			
			end if;
			end;
		end loop;
		close C03;
		
	end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_lanc_aut_contr_inter ( nr_seq_intercambio_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

