-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_oc_cta_tratar_val_30_imp ( nr_seq_combinada_p pls_oc_cta_combinada.nr_sequencia%type, ie_regra_excecao_p pls_oc_cta_combinada.ie_excecao%type, nr_id_transacao_p pls_oc_cta_selecao_imp.nr_id_transacao%type) AS $body$
DECLARE


_ora2pg_r RECORD;
nr_index_sel_w					integer;
ie_gera_ocorrencia_w				varchar(1);
ds_observacao_1_w				varchar(255);
ds_observacao_2_w				varchar(255);
ds_observacao_3_w				varchar(255);
tb_seq_selecao_w				pls_util_cta_pck.t_number_table;
tb_valido_w					pls_util_cta_pck.t_varchar2_table_1;
tb_observacao_w					pls_util_cta_pck.t_varchar2_table_4000;

-- Informações da regra de validação dos materiais não habilitados.
C01 CURSOR(	nr_seq_oc_cta_comb_pc		pls_oc_cta_combinada.nr_sequencia%type) FOR
	SELECT	ie_valida_mat_prestador
	from	pls_oc_cta_val_mat_prest
	where	nr_seq_oc_cta_comb		= nr_seq_oc_cta_comb_pc;

-- Mateirias da tabela de seleção que não estão habilitados para o prestador quandoa  validação estiver sendo feita na importação do arquivo
C02 CURSOR(	nr_id_transacao_pc	pls_oc_cta_selecao_ocor_v.nr_id_transacao%type) FOR
	SELECT	sel.nr_sequencia,
		(	SELECT	count(1)
			from	table(	pls_grupos_aux_pck.obter_materiais_lib_prest(	conta.nr_seq_prest_exec_conv,
												coalesce(mat.nr_seq_fornec_mat_conv, conta.nr_seq_prest_exec_conv),
												mat.dt_execucao_conv,
												conta.ie_tipo_internado_conv,
												prest.nr_seq_tipo_prestador,
												mat.nr_seq_material_conv
											)
					) pm
		) qt_mat_lib,
		conta.nr_seq_prest_exec_conv 					nr_seq_prest_exec_conv,
		coalesce(mat.nr_seq_fornec_mat_conv, conta.nr_seq_prest_exec_conv)	nr_seq_prest_fornec_conv
	from	pls_oc_cta_selecao_imp		sel,
		pls_conta_imp			conta,
		pls_conta_mat_imp		mat,
		pls_prestador			prest
	where	sel.nr_id_transacao		= nr_id_transacao_pc
	and	sel.ie_valido			= 'S'
	and	(mat.nr_seq_material_conv IS NOT NULL AND mat.nr_seq_material_conv::text <> '')
	and	mat.nr_sequencia		= sel.nr_seq_conta_mat
	and	conta.nr_sequencia		= mat.nr_seq_conta
	and	prest.nr_sequencia		= conta.nr_seq_prest_exec_conv;
BEGIN

-- Deve exisitr informação da regra para executar a validação
if (nr_seq_combinada_p IS NOT NULL AND nr_seq_combinada_p::text <> '') and (nr_id_transacao_p IS NOT NULL AND nr_id_transacao_p::text <> '')  then

	--'O material informado não está habilitado para ser administrado pelo'
	ds_observacao_1_w := wheb_mensagem_pck.get_texto(376351);
	--' fornecedor - '
	ds_observacao_2_w := wheb_mensagem_pck.get_texto(376503);
	--' prestador executor desta conta - '
	ds_observacao_3_w := wheb_mensagem_pck.get_texto(376504);
	-- usa uma tabela para armazenar as estruturas dos materiais
	CALL pls_gerencia_upd_obj_pck.atualizar_objetos('tasy', 'PLS_OC_CTA_TRATAR_VAL_30_IMP', 'PLS_ESTRUTURA_MATERIAL_TM');
	-- tratamento em campo auxiliar para identificar posteriormente os registros que foram alterados
	CALL pls_ocor_imp_pck.atualiza_campo_auxiliar('V', 'N', nr_id_transacao_p, null);
	--limpa as variáveis
	SELECT * FROM pls_ocor_imp_pck.limpar_nested_tables(	tb_seq_selecao_w, tb_valido_w, tb_observacao_w) INTO STRICT _ora2pg_r;
 	tb_seq_selecao_w := _ora2pg_r.tb_nr_seq_selecao_p; tb_valido_w := _ora2pg_r.tb_ie_valido_p; tb_observacao_w := _ora2pg_r.tb_ds_observacao_p;
	-- Informações da regra de validação da carteira.
	for	r_C01_w in C01(nr_seq_combinada_p) loop
		-- Se tiver informação na tabela e a informação for diferente de nenhuma será verificado, caso contrário sai da rotina e nem abre as informações das contas.
		if (r_C01_w.ie_valida_mat_prestador = 'S') then

			nr_index_sel_w := 0;
			-- Quando a consistência for executada durante a importação do arquivo então o acesso as tabela muda e estamos  usando outro cursor.
			-- Favor quando alterar qualquer um dos dois cursores verificar se não deve ser alterado o outro também.
			-- Buscar os materiais que não estão habilitados para o prestador da conta.
			for 	r_C02_w in C02(nr_id_transacao_p) loop

				ie_gera_ocorrencia_w := 'N';

				if ( r_C02_w.qt_mat_lib = 0) then
					ie_gera_ocorrencia_w := 'S';
				end if;

				if (ie_gera_ocorrencia_w = 'S') then

					tb_seq_selecao_w(nr_index_sel_w) := r_C02_w.nr_sequencia;
					tb_valido_w(nr_index_sel_w) 	 := 'S';

					if (r_C02_w.nr_seq_prest_fornec_conv IS NOT NULL AND r_C02_w.nr_seq_prest_fornec_conv::text <> '') then
						tb_observacao_w(nr_index_sel_w)  := ds_observacao_1_w || ds_observacao_2_w || r_C02_w.nr_seq_prest_fornec_conv || ' ' || pls_obter_dados_prestador(r_C02_w.nr_seq_prest_fornec_conv, 'N');
					else
						tb_observacao_w(nr_index_sel_w)  := ds_observacao_1_w || ds_observacao_3_w || r_C02_w.nr_seq_prest_exec_conv || ' ' || pls_obter_dados_prestador(r_C02_w.nr_seq_prest_exec_conv, 'N');
					end if;

					if (nr_index_sel_w >= pls_cta_consistir_pck.qt_registro_transacao_w ) then

						--Grava o que restar nas variáveis na tabela
						CALL pls_ocor_imp_pck.gerencia_selecao_validacao(	tb_seq_selecao_w, tb_valido_w,
												tb_observacao_w, nr_id_transacao_p,
												'SEQ');
						--limpa as variáveis
						SELECT * FROM pls_ocor_imp_pck.limpar_nested_tables(	tb_seq_selecao_w, tb_valido_w, tb_observacao_w) INTO STRICT _ora2pg_r;
 	tb_seq_selecao_w := _ora2pg_r.tb_nr_seq_selecao_p; tb_valido_w := _ora2pg_r.tb_ie_valido_p; tb_observacao_w := _ora2pg_r.tb_ds_observacao_p;

						nr_index_sel_w		:= 0;
					else
						nr_index_sel_w := nr_index_sel_w + 1;
					end if;
				end if;
			end loop; -- C02
		end if;
	end loop; -- C01
	--Grava o que restar nas variáveis na tabela
	CALL pls_ocor_imp_pck.gerencia_selecao_validacao(	tb_seq_selecao_w, tb_valido_w,
							tb_observacao_w, nr_id_transacao_p,
							'SEQ');
	-- seta os registros que serão válidos ou inválidos após o processamento
	CALL pls_ocor_imp_pck.atualiza_campo_valido('V', 'N',
						ie_regra_excecao_p, null,
						nr_id_transacao_p, null);
end if;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_oc_cta_tratar_val_30_imp ( nr_seq_combinada_p pls_oc_cta_combinada.nr_sequencia%type, ie_regra_excecao_p pls_oc_cta_combinada.ie_excecao%type, nr_id_transacao_p pls_oc_cta_selecao_imp.nr_id_transacao%type) FROM PUBLIC;

