-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pfcs_calc_recommend_stats_tele ( nr_seq_indicator_p bigint, cd_estabelecimento_p text, nm_usuario_p text ) AS $body$
DECLARE

  nr_total_req_count_tasy			    bigint := 0;
  nr_total_req_count_pfcs			    bigint := 0;

  pfcs_panel_detail_seq_w               pfcs_panel_detail.nr_sequencia%type;
  nr_seq_operational_level_w            pfcs_operational_level.nr_sequencia%type;
  nr_seq_panel_w                        pfcs_panel.nr_sequencia%type;
  pfcs_flag_settings          			bigint := 0;

  ds_pat                       			varchar(15) := 'Patient';
  ds_prac             					varchar(15) := 'Practitioner';
  ds_bed_const							varchar(10) := 'Bed';
  ds_department_const					varchar(20) := 'Department';
  ie_requested_status 					varchar(5) := 'R';
  ie_matching_status					varchar(5) := 'S';

  ds_active_status						varchar(15) := 'ACTIVE';
  ds_planned_status						varchar(15) := 'PLANNED';
  ds_arrived_status						varchar(15) := 'ARRIVED';

  ds_monitor_dev_type 					varchar(10) := 'Monitor';
  ds_service_requested					varchar(10) := 'E0404';
  cd_attending_role						varchar(20) := '405279007';
  ie_active								smallint := 1;
  --Declare cursor begins
  /*Cursor to calculate total telemetry request from pfcs integration table */

  cur_get_tot_tele_req_pfcs CURSOR FOR
	SELECT eid.ds_value nr_encounter,
		pat.patient_id id_patient,
		pfcs_get_human_name(enc.nr_seq_patient, ds_pat) nm_patient,
		pfcs_get_tele_time(sr.nr_sequencia, ie_requested_status) nr_time_waiting,
		enc.ds_reason diagnosis,
		pat.birthdate dob_patiente,
        trunc(months_between(coalesce(pat.deceased_date, clock_timestamp()), pat.birthdate)/12) qt_idade_paciente,
		pat.gender gender,
		enc.ds_classification ds_classification,
		enc.period_start dt_entrance,
		pfcs_get_human_name(pfcs_get_practitioner_seq(enc.nr_sequencia, cd_attending_role), ds_prac) ds_attending_physician,
		pfcs_get_code_status_tl(pat.nr_sequencia) ds_dnr_status,
		pfcs_get_location(enc.nr_sequencia, ds_department_const) ds_department,
		pfcs_get_location(enc.nr_sequencia, ds_bed_const) ds_bed
	from pfcs_service_request sr,
		pfcs_encounter enc,
		pfcs_patient pat,
		pfcs_encounter_identifier eid
	where
		sr.si_status = ds_active_status
		and sr.cd_service = ds_service_requested
		and sr.nr_seq_encounter = enc.nr_sequencia
		and enc.si_status in (ds_planned_status, ds_arrived_status)
		and eid.nr_seq_encounter = enc.nr_sequencia
		and enc.nr_seq_patient = pat.nr_sequencia
		and pat.ie_active = ie_active
		and pat.nr_seq_organization = (cd_estabelecimento_p)::numeric
		and pat.nr_sequencia not in (
			SELECT dev.nr_seq_patient
			from pfcs_device dev
			where dev.si_status = ds_active_status
				and dev.ds_device_type = ds_monitor_dev_type
				and (dev.nr_seq_patient IS NOT NULL AND dev.nr_seq_patient::text <> '')
    );

  --Declare cursor Ends
  /*Cursor to calculate total telemetry request from tasy table */

  cur_get_tot_tele_req_tasy CURSOR FOR
    SELECT cr.nr_sequencia,
		ap.nr_atendimento nr_encounter,
		ap.cd_pessoa_fisica id_patient,
		coalesce(get_formatted_person_name(ap.cd_pessoa_fisica, 'capitalizeFirstLetter'), obter_nome_pf(ap.cd_pessoa_fisica))  nm_patient,
		pfcs_get_recommendation_time(cr.nr_sequencia, ie_requested_status) nr_time_waiting,
		ap.ds_sintoma_paciente diagnosis,
		pc_obter_dt_nascimento(ap.cd_pessoa_fisica) dob_patiente,
        obter_dados_pf(ap.cd_pessoa_fisica, 'I') qt_idade_paciente,
		substr(obter_Sexo_PF(ap.cd_pessoa_fisica,'D'),1,20) gender,
		pfcs_obter_lista_dados_classif(ap.cd_pessoa_fisica) ds_classification,
		ap.dt_entrada dt_entrance,
		coalesce(get_formatted_person_name(ap.cd_medico_resp, 'capitalizeFirstLetter'), obter_nome_pf(ap.cd_medico_resp)) ds_attending_physician,
		pfcs_get_dnr_status(ap.nr_atendimento, cd_estabelecimento_p) ds_dnr_status
	from
		atendimento_paciente ap,
		cpoe_recomendacao cr,
		tipo_recomendacao tr
	where ap.nr_atendimento = cr.nr_atendimento
		and coalesce(ap.dt_alta::text, '') = ''
		and coalesce(ap.dt_alta_medico::text, '') = ''
		and coalesce(ap.dt_cancelamento::text, '') = ''
		and ap.cd_estabelecimento = (cd_estabelecimento_p)::numeric
		and cr.cd_recomendacao = tr.cd_tipo_recomendacao
		and coalesce(cr.dt_lib_suspensao::text, '') = ''
    and (cr.dt_liberacao IS NOT NULL AND cr.dt_liberacao::text <> '')
		and pfcs_get_recommendation_status(cr.nr_sequencia) = ie_requested_status
		and tr.ie_telemetria = ie_matching_status;

  --Declare cursor Ends
BEGIN
	nr_seq_operational_level_w := pfcs_get_structure_level(
									cd_establishment_p => cd_estabelecimento_p,
									ie_level_p => 'O',
									ie_info_p => 'C');

	select ie_table_origin into STRICT pfcs_flag_settings
	from pfcs_general_rule;

	/* Read from Tasy cursor*/

	if (pfcs_flag_settings = 0 or pfcs_flag_settings = 2)
	then
		for r_c01 in cur_get_tot_tele_req_tasy
		loop
			nr_total_req_count_tasy := nr_total_req_count_tasy + 1;
			select nextval('pfcs_panel_detail_seq') into STRICT pfcs_panel_detail_seq_w;

			CALL pfcs_pck_v2.pfcs_insert_details(
				nr_seq_indicator_p => nr_seq_indicator_p,
				nr_seq_operational_level_p	=> nr_seq_operational_level_w,
				nm_usuario_p => nm_usuario_p,
				nr_panel_detail_seq_p => pfcs_panel_detail_seq_w,
				nr_encounter_p => r_c01.nr_encounter,
				id_patient_p => r_c01.id_patient,
				nm_patient_p => r_c01.nm_patient,
				dt_birthdate_p => r_c01.dob_patiente,
				ds_primary_diagnosis_p => r_c01.diagnosis,
				ds_gender_p => r_c01.gender,
				ds_dnr_status_p => r_c01.ds_dnr_status,
				qt_time_telemetry_p => r_c01.nr_time_waiting,
				ds_classification_p => r_c01.ds_classification,
				dt_entrance_p => r_c01.dt_entrance,
				ds_service_line_p => r_c01.ds_attending_physician,
				cd_department_p => obter_setor_atual_paciente(r_c01.nr_encounter),
				ds_department_p => obter_desc_setor_atend(obter_setor_atual_paciente(r_c01.nr_encounter)),
				ds_bed_location_p => obter_unidade_atendimento(r_c01.nr_encounter,'IAA','U'),
                ds_age_range_p => r_c01.qt_idade_paciente
			);
		end loop;
		 := pfcs_pck_v2.pfcs_generate_results(
			vl_indicator_p => nr_total_req_count_tasy, ds_reference_value_p => null, nr_seq_indicator_p => nr_seq_indicator_p, nr_seq_operational_level_p => nr_seq_operational_level_w, nm_usuario_p => nm_usuario_p, nr_seq_panel_p => nr_seq_panel_w);

		CALL pfcs_pck_v2.pfcs_update_detail(
			nr_seq_indicator_p => nr_seq_indicator_p,
			nr_seq_panel_p => nr_seq_panel_w,
			nr_seq_operational_level_p => nr_seq_operational_level_w,
			nm_usuario_p => nm_usuario_p);
	end if;

	/* Read from PFCS Integration cursor*/

	if (pfcs_flag_settings = 1 or pfcs_flag_settings = 2)
	then
		for r_c01 in cur_get_tot_tele_req_pfcs
		loop
			/* For pfcs_flag_settings = 2 append to data read from Tasy */

			nr_total_req_count_pfcs := nr_total_req_count_pfcs + 1;
			select nextval('pfcs_panel_detail_seq') into STRICT pfcs_panel_detail_seq_w;

			CALL pfcs_pck_v2.pfcs_insert_details(
				nr_seq_indicator_p => nr_seq_indicator_p,
				nr_seq_operational_level_p	=> nr_seq_operational_level_w,
				nm_usuario_p => nm_usuario_p,
				nr_panel_detail_seq_p => pfcs_panel_detail_seq_w,
				nr_encounter_p => r_c01.nr_encounter,
				id_patient_p => r_c01.id_patient,
				nm_patient_p => r_c01.nm_patient,
				dt_birthdate_p => r_c01.dob_patiente,
				ds_primary_diagnosis_p => r_c01.diagnosis,
				ds_gender_p => r_c01.gender,
				ds_dnr_status_p => r_c01.ds_dnr_status,
				qt_time_telemetry_p => r_c01.nr_time_waiting,
				ds_classification_p => r_c01.ds_classification,
				dt_entrance_p => r_c01.dt_entrance,
				ds_service_line_p => r_c01.ds_attending_physician,
				cd_department_p => r_c01.ds_department,
				ds_department_p => r_c01.ds_department,
				ds_bed_location_p => r_c01.ds_bed,
                ds_age_range_p => r_c01.qt_idade_paciente
			);
		end loop;
		 := pfcs_pck_v2.pfcs_generate_results(
			vl_indicator_p => nr_total_req_count_pfcs, ds_reference_value_p => null, nr_seq_indicator_p => nr_seq_indicator_p, nr_seq_operational_level_p => nr_seq_operational_level_w, nm_usuario_p => nm_usuario_p, nr_seq_panel_p => nr_seq_panel_w);

		CALL pfcs_pck_v2.pfcs_update_detail(
			nr_seq_indicator_p => nr_seq_indicator_p,
			nr_seq_panel_p => nr_seq_panel_w,
			nr_seq_operational_level_p => nr_seq_operational_level_w,
			nm_usuario_p => nm_usuario_p);
	end if;
  commit;

  CALL pfcs_pck_v2.pfcs_activate_records(
		nr_seq_indicator_p => nr_seq_indicator_p,
		nr_seq_operational_level_p => nr_seq_operational_level_w,
		nm_usuario_p => nm_usuario_p);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pfcs_calc_recommend_stats_tele ( nr_seq_indicator_p bigint, cd_estabelecimento_p text, nm_usuario_p text ) FROM PUBLIC;

