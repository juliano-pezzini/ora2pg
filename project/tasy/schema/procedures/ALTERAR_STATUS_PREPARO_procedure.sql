-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE alterar_status_preparo ( nr_seq_preparo_p bigint, ie_status_p text, nm_usuario_p text, cd_setor_atendimento_p bigint, cd_estabelecimento_p bigint, cd_motivo_cancelamento_p bigint default null) AS $body$
DECLARE


ie_todos_gerados_w	varchar(1);
nr_lote_producao_w	bigint;
ie_status_w		varchar(15);
cd_material_w		integer;
qt_material_w		double precision;
cd_unidade_medida_w	varchar(30);
cd_local_estoque_w	smallint;
ie_baixa_estoque_w	varchar(15);
cd_material_ww		integer;
qt_real_w		double precision;
cd_unidade_medida_ww	varchar(30);
ie_gera_estoque_w		varchar(15);
ie_param25_w			varchar(1);
ie_consignado_w		material.ie_consignado%type;
ie_regra_saldo_consig_w	parametro_estoque.ie_regra_saldo_consig%type;
cd_local_estoque_comp_w	lote_producao_comp.cd_local_estoque%type;
cd_cgc_fornecedor_w	lote_producao_comp.cd_fornecedor%type;
nr_seq_lote_fornec_w	lote_producao_comp.nr_seq_lote_fornec%type;
qt_movimento_w		double precision;

C01 CURSOR FOR
	SELECT	c.cd_material,
		i.qt_material,
		coalesce(i.cd_unidade_medida, c.cd_unidade_medida),
		c.cd_local_estoque,
		c.cd_fornecedor,
		c.nr_seq_lote_fornec
	from	lote_producao_comp c,
		lp_item_util i
	where	c.nr_lote_producao = nr_lote_producao_w
	and	c.nr_lote_producao = i.nr_lote_producao
	and	c.cd_material = i.cd_material
	and	coalesce(c.ie_necessita_disp,'S') = 'S';
	
C02 CURSOR FOR
	SELECT	cd_material,
			QT_PREVISTA,
			cd_unidade_medida
	from	lote_producao
	where	nr_lote_producao = nr_lote_producao_w;
					

BEGIN

ie_baixa_estoque_w := obter_param_usuario(9044, 8, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_baixa_estoque_w);
ie_gera_estoque_w := obter_param_usuario(9044, 24, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_gera_estoque_w);
ie_param25_w := obter_param_usuario(9044, 25, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_param25_w);

select	coalesce(max(ie_regra_saldo_consig), 0)
into STRICT	ie_regra_saldo_consig_w
from	parametro_estoque
where	cd_estabelecimento = cd_estabelecimento_p;

if (nr_seq_preparo_p > 0) then

	select	max(nr_lote_producao)
	into STRICT	nr_lote_producao_w
	from	lp_individual
	where	nr_sequencia = nr_seq_preparo_p;

	if (ie_status_p = 'G') then
		update	lp_individual
		set	dt_inicio_preparo	 = NULL,
			ie_status		=	'G'
		where	nr_sequencia 		= 	nr_seq_preparo_p;	
	elsif (ie_status_p = 'E') then
		update	lp_individual
		set	nm_usuario_preparo	=	nm_usuario_p,
			dt_inicio_preparo	=	clock_timestamp(),
			ie_status		=	'E'
		where	nr_sequencia 		= 	nr_seq_preparo_p;	
	elsif (ie_status_p = 'P') then
		select	cd_material
		into STRICT	cd_material_w
		from	lote_producao
		where	nr_lote_producao	=	nr_lote_producao_w;
				
		update	lp_individual
		set	ie_status		=	'P',
			dt_preparo		=	clock_timestamp(),
			dt_estabilidade		=	clock_timestamp() + dividir(coalesce(obter_estabilidade_mat(cd_material_w),0),24)
		where	nr_sequencia 		= 	nr_seq_preparo_p;
				
		select	coalesce(max('N'),'S')
		into STRICT	ie_todos_gerados_w
		from	lp_individual
		where	nr_lote_producao = nr_lote_producao_w
		and	ie_status in ('G','E');
		
		if (ie_todos_gerados_w = 'S') then
			update	lote_producao
			set	ie_etapa		=	'P',
				nm_usuario_preparacao	=	nm_usuario,
				dt_preparacao		=	clock_timestamp()
			where	nr_lote_producao	=	nr_lote_producao_w;
		end if;
		
		if (ie_gera_estoque_w = 'S') then		
			open C02;
			loop
			fetch C02 into	
				cd_material_ww,
				qt_real_w,
				cd_unidade_medida_ww;
			EXIT WHEN NOT FOUND; /* apply on C02 */
				begin
				
				if (ie_param25_w = 'S') then
					qt_real_w	:= 1;
				end if;
				
				select	cd_local_estoque
				into STRICT	cd_local_estoque_w
				from	lote_producao
				where	nr_lote_producao	= nr_lote_producao_w;				
				
				CALL Gerar_Prescricao_Estoque(cd_estabelecimento_p,null,null, cd_material_ww,clock_timestamp(),1,cd_local_estoque_w,
							qt_real_w,cd_setor_atendimento_p,cd_unidade_medida_ww,nm_usuario_p,'I',null,null,null,null,null,null,
							nr_seq_lote_fornec_w, null, null, null, 'P', null, nr_lote_producao_w);
				
				end;
			end loop;
			close C02;
		end if;
		
		
	elsif (ie_status_p = 'C') then
		
		select	max(ie_status)
		into STRICT	ie_status_w
		from	lp_individual
		where	nr_sequencia 		= 	nr_seq_preparo_p;
		
		if (ie_baixa_estoque_w = 'S') and (ie_status_w = 'G') then
		
			open C01;
			loop
			fetch C01 into	
				cd_material_w,
				qt_material_w,
				cd_unidade_medida_w,
				cd_local_estoque_comp_w,
				cd_cgc_fornecedor_w,
				nr_seq_lote_fornec_w;
			EXIT WHEN NOT FOUND; /* apply on C01 */
				begin
				
				select	coalesce(ie_consignado, '0')
				into STRICT	ie_consignado_w
				from	material
				where	cd_material = cd_material_w;
				
				if (ie_consignado_w = '2') and (ie_regra_saldo_consig_w > 0) and (coalesce(cd_cgc_fornecedor_w::text, '') = '') then

					CALL gerar_movimento_consig_ambos(
						cd_material_p		=> cd_material_w,
						qt_movimento_p		=> qt_material_w,
						cd_unidade_medida_p	=> cd_unidade_medida_w,
						ie_acao_p		=> 1,
						cd_local_estoque_p	=> cd_local_estoque_comp_w,
						cd_estabelecimento_p	=> cd_estabelecimento_p,
						ie_rotina_movimento_p	=> 'GPE',
						nm_usuario_p		=> nm_usuario_p,
						nr_seq_lote_fornec_p	=> nr_seq_lote_fornec_w,
						nr_sequencia_p		=> nr_lote_producao_w,
						cd_setor_atendimento_p	=> cd_setor_atendimento_p);
				else

					CALL Gerar_Prescricao_Estoque(cd_estabelecimento_p, null, null, cd_material_w, clock_timestamp(), 1, cd_local_estoque_comp_w,
								qt_material_w, cd_setor_atendimento_p, cd_unidade_medida_w, nm_usuario_p, 'E',
								null, null, null, null, cd_cgc_fornecedor_w, null, nr_seq_lote_fornec_w,
								null, null, null, 'X', null, nr_lote_producao_w);
				end if;
				end;
			end loop;
			close C01;

		end if;
	
		update	lp_individual
		set	dt_cancelamento		=	clock_timestamp(),
			nm_usuario_cancelamento	=	nm_usuario_p,
			ie_status		=	'C',
			nr_seq_motivo_cancel	= 	cd_motivo_cancelamento_p
		where	nr_sequencia 		= 	nr_seq_preparo_p;
	end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE alterar_status_preparo ( nr_seq_preparo_p bigint, ie_status_p text, nm_usuario_p text, cd_setor_atendimento_p bigint, cd_estabelecimento_p bigint, cd_motivo_cancelamento_p bigint default null) FROM PUBLIC;

