-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE qua_troca_doc_resp ( nr_seq_troca_p bigint, nm_usuario_p text) AS $body$
DECLARE


ie_pessoa_elaboracao_w		varchar(01);
ie_pessoa_aprovacao_w		varchar(01);
ie_pessoa_validacao_w		varchar(01);
ie_pf_abertura_nc_w		varchar(01);
ie_pf_resp_ocor_nc_w		varchar(01);
ie_pf_resp_eficacia_nc_w	varchar(01);
ie_pf_eficacia_acao_w		varchar(01);
ie_setor_abert_nc_w		varchar(01);
ie_setor_eficacia_nc_w		varchar(01);
ie_setor_resp_nc_w		varchar(01);
ie_setor_resp_doc_w		varchar(01);
cd_setor_atend_origem_w		varchar(20);
cd_setor_atend_destino_w	varchar(20);
cd_pessoa_destino_w		varchar(20);
cd_pessoa_origem_w		varchar(20);
nr_sequencia_w			bigint;
qt_reg_w			integer;
ie_tipo_documento_w		varchar(02);

C01 CURSOR FOR  	-- Documento
	SELECT	nr_sequencia
	from	qua_documento
	where	((cd_pessoa_validacao 	= cd_pessoa_origem_w and ie_pessoa_validacao_w = 'S') or (cd_pessoa_aprov 	= cd_pessoa_origem_w and ie_pessoa_aprovacao_w = 'S') or (cd_pessoa_elaboracao 	= cd_pessoa_origem_w and ie_pessoa_elaboracao_w = 'S'));

C02 CURSOR FOR  	-- Não-conformidade
	SELECT	nr_sequencia
	from	qua_nao_conformidade
	where	((cd_pf_resp_ocorrencia	= cd_pessoa_origem_w and ie_pf_resp_ocor_nc_w = 'S') or (cd_pf_resp_eficacia	= cd_pessoa_origem_w and ie_pf_resp_eficacia_nc_w = 'S') or (cd_pf_abertura		= cd_pessoa_origem_w and ie_pf_abertura_nc_w = 'S' ));

C03 CURSOR FOR 	-- Ação
	SELECT	nr_sequencia
	from	man_ordem_servico
	where	cd_pf_eficacia	= cd_pessoa_origem_w
	and 	ie_pf_eficacia_acao_w = 'S'
	and	ie_status_ordem <> 3;


BEGIN

select	coalesce(ie_pessoa_elaboracao,'N'),
	coalesce(ie_pessoa_aprovacao,'N'),
	coalesce(ie_pessoa_validacao,'N'),
	cd_pessoa_destino,
	cd_pessoa_origem,
	coalesce(ie_pf_abertura_nc,'N'),
	coalesce(ie_pf_resp_ocor_nc,'N'),
	coalesce(ie_pf_resp_eficacia_nc,'N'),
	ie_tipo_documento,
	coalesce(ie_pf_eficacia_acao,'N'),
	coalesce(ie_setor_abert_nc,'N'),
	coalesce(ie_setor_eficacia_nc,'N'),
	coalesce(ie_setor_resp_nc,'N'),
	coalesce(ie_setor_resp_doc,'N'),
	cd_setor_atend_origem,
	cd_setor_atend_destino
into STRICT	ie_pessoa_elaboracao_w,
	ie_pessoa_aprovacao_w,
	ie_pessoa_validacao_w,
	cd_pessoa_destino_w,
	cd_pessoa_origem_w,
	ie_pf_abertura_nc_w,
	ie_pf_resp_ocor_nc_w,
	ie_pf_resp_eficacia_nc_w,
	ie_tipo_documento_w,
	ie_pf_eficacia_acao_w,
	ie_setor_abert_nc_w,
	ie_setor_eficacia_nc_w,
	ie_setor_resp_nc_w,
	ie_setor_resp_doc_w,
	cd_setor_atend_origem_w,
	cd_setor_atend_destino_w
from	qua_doc_troca_resp
where	nr_sequencia = nr_seq_troca_p;

if (ie_tipo_documento_w = 'D') then
	begin
	select	count(*)
	into STRICT	qt_reg_w
	from	qua_documento
	where	((cd_pessoa_validacao 	= cd_pessoa_origem_w and ie_pessoa_validacao_w = 'S') or (cd_pessoa_aprov 	= cd_pessoa_origem_w and ie_pessoa_aprovacao_w = 'S') or (cd_pessoa_elaboracao 	= cd_pessoa_origem_w and ie_pessoa_elaboracao_w = 'S'));

	if (qt_reg_w = 0) then
		/*(-20111,'Não existem documentos com a pessoa origem selecionada!');*/

		CALL wheb_mensagem_pck.exibir_mensagem_abort(263181);
	end if;

	if	((coalesce(cd_setor_atend_origem_w ,0) = 0) or (coalesce(cd_setor_atend_destino_w,0) = 0)) and (ie_setor_resp_doc_w = 'S') then
		/*(-20011,'Os campos setor origem e setor destino devem estar informados!');*/

		CALL wheb_mensagem_pck.exibir_mensagem_abort(263182);
	end if;

	open C01;
	loop
	fetch C01 into
		nr_sequencia_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		if (ie_pessoa_elaboracao_w = 'S') then
			update	qua_documento
			set	cd_pessoa_elaboracao = cd_pessoa_destino_w,
				dt_atualizacao 	= clock_timestamp(),
				nm_usuario	= nm_usuario_p
			where	nr_sequencia	= nr_sequencia_w;
		end if;
		if (ie_pessoa_aprovacao_w = 'S') then
			update	qua_documento
			set	cd_pessoa_aprov = cd_pessoa_destino_w,
				dt_atualizacao	= clock_timestamp(),
				nm_usuario	= nm_usuario_p
			where	nr_sequencia	= nr_sequencia_w;
		end if;
		if (ie_pessoa_validacao_w = 'S') then
			update	qua_documento
			set	cd_pessoa_validacao = cd_pessoa_destino_w,
				dt_atualizacao	= clock_timestamp(),
				nm_usuario	= nm_usuario_p
			where	nr_sequencia	= nr_sequencia_w;
		end if;
		if (ie_setor_resp_doc_w = 'S') then
			update	qua_documento
			set	cd_setor_atendimento	= cd_setor_atend_destino_w,
				dt_atualizacao		= clock_timestamp(),
				nm_usuario		= nm_usuario_p
			where	nr_sequencia		= nr_sequencia_w
			and	cd_setor_atendimento	= cd_setor_atend_origem_w;
		end if;

		select	count(*)
		into STRICT	qt_reg_w
		from	qua_doc_troca_doc
		where	nr_seq_troca	= nr_seq_troca_p
		and	nr_seq_documento= nr_sequencia_w;

		if (qt_reg_w = 0) then
			begin
			insert into qua_doc_troca_doc(
					nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_seq_troca,
					nr_seq_documento)
				values (	nextval('qua_doc_troca_doc_seq'),
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_troca_p,
					nr_sequencia_w);
			end;
		end if;
		end;
	end loop;
	close C01;

	end;
elsif (ie_tipo_documento_w = 'NC') then
	begin
	select	count(*)
	into STRICT	qt_reg_w
	from	qua_nao_conformidade
	where	((cd_pf_resp_ocorrencia	= cd_pessoa_origem_w and ie_pf_resp_ocor_nc_w = 'S') or (cd_pf_resp_eficacia	= cd_pessoa_origem_w and ie_pf_resp_eficacia_nc_w = 'S') or (cd_pf_abertura		= cd_pessoa_origem_w and ie_pf_abertura_nc_w = 'S' ));

	if (qt_reg_w = 0) then
		/*(-20111,'Não existem documentos com a pessoa origem selecionada!');*/

		CALL wheb_mensagem_pck.exibir_mensagem_abort(263183);
	end if;

	if	((coalesce(cd_setor_atend_origem_w ,0) = 0) or (coalesce(cd_setor_atend_destino_w,0) = 0)) and
		((ie_setor_eficacia_nc_w = 'S') or (ie_setor_resp_nc_w = 'S') or (ie_setor_abert_nc_w = 'S')) then
		/*(-20011,'Os campos setor origem e setor destino devem estar informados!');*/

		CALL wheb_mensagem_pck.exibir_mensagem_abort(263184);
	end if;

	open C02;
	loop
	fetch C02 into
		nr_sequencia_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin

		if (ie_pf_resp_ocor_nc_w = 'S') then
			update	qua_nao_conformidade
			set	cd_pf_resp_ocorrencia = cd_pessoa_destino_w,
				dt_atualizacao 	= clock_timestamp(),
				nm_usuario	= nm_usuario_p
			where	nr_sequencia	= nr_sequencia_w;
		end if;
		if (ie_pf_resp_eficacia_nc_w = 'S') then
			update	qua_nao_conformidade
			set	cd_pf_resp_eficacia = cd_pessoa_destino_w,
				dt_atualizacao	= clock_timestamp(),
				nm_usuario	= nm_usuario_p
			where	nr_sequencia	= nr_sequencia_w;
		end if;
		if (ie_pf_abertura_nc_w = 'S') then
			update	qua_nao_conformidade
			set	cd_pf_abertura = cd_pessoa_destino_w,
				dt_atualizacao	= clock_timestamp(),
				nm_usuario	= nm_usuario_p
			where	nr_sequencia	= nr_sequencia_w;
		end if;
		if (ie_setor_eficacia_nc_w = 'S') then
			update	qua_nao_conformidade
			set	cd_setor_eficacia	= cd_setor_atend_destino_w,
				dt_atualizacao		= clock_timestamp(),
				nm_usuario		= nm_usuario_p
			where	nr_sequencia		= nr_sequencia_w
			and	cd_setor_eficacia	= cd_setor_atend_origem_w;
		end if;
		if (ie_setor_resp_nc_w = 'S') then
			update	qua_nao_conformidade
			set	cd_setor_resp		= cd_setor_atend_destino_w,
				dt_atualizacao		= clock_timestamp(),
				nm_usuario		= nm_usuario_p
			where	nr_sequencia		= nr_sequencia_w
			and	cd_setor_resp		= cd_setor_atend_origem_w;
		end if;
		if (ie_setor_abert_nc_w = 'S') then
			update	qua_nao_conformidade
			set	cd_setor_atendimento 	= cd_setor_atend_destino_w,
				dt_atualizacao		= clock_timestamp(),
				nm_usuario		= nm_usuario_p
			where	nr_sequencia		= nr_sequencia_w
			and	cd_setor_atendimento 	= cd_setor_atend_origem_w;
		end if;

		select	count(*)
		into STRICT	qt_reg_w
		from	qua_doc_troca_doc
		where	nr_seq_troca = nr_seq_troca_p
		and	nr_seq_nao_conform = nr_sequencia_w;

		if (qt_reg_w = 0) then
			begin
			insert into qua_doc_troca_doc(
					nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_seq_troca,
					nr_seq_nao_conform)
				values (	nextval('qua_doc_troca_doc_seq'),
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_troca_p,
					nr_sequencia_w);
			end;
		end if;
		end;
	end loop;
	close C02;

	end;
elsif (ie_tipo_documento_w = 'A') then
	begin
	select	count(*)
	into STRICT	qt_reg_w
	from	man_ordem_servico
	where (cd_pf_eficacia	= cd_pessoa_origem_w and ie_pf_eficacia_acao_w = 'S');

	if (qt_reg_w = 0) then
		/*(-20111,'Não existem documentos com a pessoa origem selecionada!');*/

		CALL wheb_mensagem_pck.exibir_mensagem_abort(263185);
	end if;

	open C03;
	loop
	fetch C03 into
		nr_sequencia_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin

		if (ie_pf_eficacia_acao_w = 'S') then
			update	man_ordem_servico
			set	cd_pf_eficacia = cd_pessoa_destino_w,
				dt_atualizacao 	= clock_timestamp(),
				nm_usuario	= nm_usuario_p
			where	nr_sequencia	= nr_sequencia_w;
		end if;

		select	count(*)
		into STRICT	qt_reg_w
		from	qua_doc_troca_doc
		where	nr_seq_troca = nr_seq_troca_p
		and	nr_seq_ordem_serv = nr_sequencia_w;

		if (qt_reg_w = 0) then
			begin
			insert into qua_doc_troca_doc(
					nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_seq_troca,
					nr_seq_ordem_serv)
				values (	nextval('qua_doc_troca_doc_seq'),
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_troca_p,
					nr_sequencia_w);
			end;
		end if;
		end;
	end loop;
	close C03;

	end;
end if;

select	count(*)
into STRICT	qt_reg_w
from	qua_doc_troca_doc
where	nr_seq_troca = nr_seq_troca_p;

if (qt_reg_w > 0) then
	update	qua_doc_troca_resp
	set	dt_troca 	= clock_timestamp(),
		dt_atualizacao 	= clock_timestamp(),
		nm_usuario 	= nm_usuario_p
	where	nr_sequencia 	= nr_seq_troca_p;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE qua_troca_doc_resp ( nr_seq_troca_p bigint, nm_usuario_p text) FROM PUBLIC;

