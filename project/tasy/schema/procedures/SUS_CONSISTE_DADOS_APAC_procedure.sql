-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE sus_consiste_dados_apac ( nm_campo_p text, nr_apac_p bigint, nr_seq_apac_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, cd_cid_princ_p text, nm_usuario_p text, ie_tipo_consiste_p bigint, ds_erro_p INOUT text) AS $body$
DECLARE



/* ie_tipo_consiste_p
	- 1 fechamento da conta
	- 2 saida do campo
*/
ie_sexo_cid_w		varchar(15)	:= 'A';
ds_detalhe_w		varchar(255)	:= '';
ds_erro_w		varchar(255)	:= '';
nr_seq_geral_w		bigint;
nr_interno_conta_w	bigint;
cd_estabelecimento_w	smallint;
cd_cid_topografia_w	varchar(4);
cd_estadio_w		smallint;
ie_estadio_w		varchar(10);
ie_sexo_pac_w		varchar(15);
nr_atendimento_w	Sus_Apac_Unif.nr_atendimento%type;
ie_tipo_laudo_apac_w    sus_procedimento.ie_tipo_laudo_apac%type;


BEGIN
if (ie_tipo_consiste_p = 1) then
	begin
	select	coalesce(nr_interno_conta,0),
		cd_estabelecimento,
		cd_cid_topografia,
		cd_estadio,
		nr_atendimento
	into STRICT	nr_interno_conta_w,
		cd_estabelecimento_w,
		cd_cid_topografia_w,
		cd_estadio_w,
		nr_atendimento_w
	from	sus_apac_unif
	where	nr_apac		= nr_apac_p
	and	nr_sequencia	= nr_seq_apac_p;

	select	coalesce(max(ie_tipo_laudo_apac),'00')
	into STRICT	ie_tipo_laudo_apac_w
	from	sus_procedimento
	where	cd_procedimento		= cd_procedimento_p
	and	ie_origem_proced	= ie_origem_proced_p;
	end;
end if;

if (Sus_Obter_Inco_Ativa(54)) and (cd_cid_princ_p IS NOT NULL AND cd_cid_princ_p::text <> '') then
	begin
	nr_seq_geral_w	:= 0;
	
	select	coalesce(max(nr_sequencia),0)
	into STRICT	nr_seq_geral_w
	from	sus_procedimento_cid
	where	cd_procedimento		= cd_procedimento_p
	and	ie_origem_proced	= 7
	and	cd_doenca_cid		= cd_cid_princ_p;
	
	if (nr_seq_geral_w		= 0) then
		begin
		if (ie_tipo_consiste_p = 1) then
			ds_detalhe_w	:= WHEB_MENSAGEM_PCK.get_texto(279347) || nr_apac_p || WHEB_MENSAGEM_PCK.get_texto(279348) || cd_procedimento_p || WHEB_MENSAGEM_PCK.get_texto(279349) || cd_cid_princ_p;
			CALL sus_gravar_inconsistencia(nr_interno_conta_w, 54, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
		elsif (ie_tipo_consiste_p 	= 2) and (nm_campo_p		= 'CD_CID_PRINCIPAL') then
			ds_erro_w	:= ds_erro_w || '54, ';
		end if;
		end;
	end if;
	end;
end if;	

if (Sus_Obter_Inco_Ativa(86)) and (cd_cid_topografia_w IS NOT NULL AND cd_cid_topografia_w::text <> '') and (ie_tipo_laudo_apac_w in ('03','04')) then
	begin
	select	coalesce(max(ie_estadio), 'N')
	into STRICT	ie_estadio_w
	from	cid_doenca
	where	cd_doenca_cid	= cd_cid_topografia_w;
	
	if	((ie_estadio_w	= 'N') and
		not(coalesce(cd_estadio_w::text, '') = '')) or
		((ie_estadio_w	= 'S') and (coalesce(cd_estadio_w::text, '') = '')) then
		begin
		if (ie_tipo_consiste_p = 1) then
			ds_detalhe_w	:= WHEB_MENSAGEM_PCK.get_texto(279347) || nr_apac_p || WHEB_MENSAGEM_PCK.get_texto(279348) || cd_procedimento_p || WHEB_MENSAGEM_PCK.get_texto(279351) || cd_cid_topografia_w;
			CALL sus_gravar_inconsistencia(nr_interno_conta_w, 86, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
		elsif (ie_tipo_consiste_p 	= 2) and (nm_campo_p		= 'CD_ESTADIO') then
			ds_erro_w	:= ds_erro_w || '86, ';
		end if;
		end;
	end if;
	end;
end if;

/*cid principal da apac incompativel com o sexo do paciente */

if (Sus_Obter_Inco_Ativa(289)) then
	begin
	select	coalesce(max(a.ie_sexo),'A')
	into STRICT	ie_sexo_cid_w
	from	cid_doenca a
	where	a.cd_doenca_cid = cd_cid_princ_p;
	exception
		when others then
		ie_sexo_cid_w := 'A';
	end;
	begin
	select	coalesce(obter_sexo_pf(cd_pessoa_fisica,'C'),'X')
	into STRICT	ie_sexo_pac_w
	from	atendimento_paciente
	where	nr_atendimento = nr_atendimento_w;
	exception
		when others then
		ie_sexo_pac_w := 'X';
	end;
	
	if (ie_sexo_cid_w <> 'A') and (ie_sexo_pac_w <> 'X') and (ie_sexo_cid_w <> ie_sexo_pac_w) then		
		if (ie_tipo_consiste_p = 1) then
			ds_detalhe_w	:= substr(wheb_mensagem_pck.get_texto(278139) || cd_cid_princ_p || wheb_mensagem_pck.get_texto(278141) || ie_sexo_cid_w || wheb_mensagem_pck.get_texto(278142) || ie_sexo_pac_w,1,255);
			CALL sus_gravar_inconsistencia(nr_interno_conta_w, 289, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
		end if;
		
	end if;
	
end if;

ds_erro_p	:= ds_erro_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE sus_consiste_dados_apac ( nm_campo_p text, nr_apac_p bigint, nr_seq_apac_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, cd_cid_princ_p text, nm_usuario_p text, ie_tipo_consiste_p bigint, ds_erro_p INOUT text) FROM PUBLIC;

