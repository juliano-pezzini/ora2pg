-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE fis_gerar_reg_0500_efd ( nr_seq_controle_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, dt_inicio_p timestamp, dt_fim_p timestamp, cd_empresa_p bigint, ds_separador_p text, qt_linha_p INOUT bigint, nr_sequencia_p INOUT bigint) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[ X ]  Objetos do dicionário [  ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
-------------------------------------------------------------------------------------------------------------------
Referências:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
nr_seq_regra_efd_w		bigint;
nr_versao_efd_w			varchar(5);
tp_registro_w			varchar(4);
cd_municipio_ibge_w		varchar(7);
nr_linha_w			bigint	:= qt_linha_p;
nr_seq_registro_w		bigint	:= nr_sequencia_p;
ds_arquivo_w			varchar(4000);
ds_arquivo_compl_w		varchar(4000);
ds_linha_w			varchar(8000);
sep_w				varchar(1)	:= ds_separador_p;

c01 CURSOR FOR
	SELECT	'0500' tp_registro,
		to_char(a.dt_atualizacao,'ddmmyyyy') dt_alt,
		CASE WHEN b.ie_tipo='A' THEN  '01' WHEN b.ie_tipo='P' THEN  '02'  ELSE '09' END  cod_nat_cc,
		CASE WHEN a.ie_tipo='A' THEN 'A' WHEN a.ie_tipo='T' THEN 'S' END  ind_cta,
		ctb_obter_nivel_conta(a.cd_conta_contabil) nivel,
		a.cd_conta_contabil cod_cta,
		substr(replace(a.ds_conta_contabil,'|',''),1,60) nome_cta,
		'' cod_cta_ref,
		'' cnpj_est
	from	conta_contabil	a,
		ctb_grupo_conta	b,
		fis_efd_conta_contabil c
	where	a.cd_grupo	= b.cd_grupo
	and     a.cd_empresa	= cd_empresa_p
	and	c.cd_conta_contabil = a.cd_conta_contabil
	and	coalesce(NR_SEQ_TIPO_CT,0) > 0
	group by CASE WHEN b.ie_tipo='A' THEN  '01' WHEN b.ie_tipo='P' THEN  '02'  ELSE '09' END , CASE WHEN a.ie_tipo='A' THEN 'A' WHEN a.ie_tipo='T' THEN 'S' END , a.dt_atualizacao, a.cd_conta_contabil, a.ds_conta_contabil;

vet01	C01%RowType;


BEGIN
open C01;
loop
fetch C01 into
	vet01;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	ds_linha_w	:= substr(	sep_w || vet01.tp_registro 	||
					sep_w || vet01.dt_alt		||
					sep_w || vet01.cod_nat_cc	||
					sep_w || vet01.ind_cta		||
					sep_w || vet01.nivel		||
					sep_w || vet01.cod_cta		||
					sep_w || vet01.nome_cta		||
					sep_w || vet01.cod_cta_ref 	||
					sep_w || vet01.cnpj_est		||
					sep_w,1,8000);

	ds_arquivo_w		:= substr(ds_linha_w,1,4000);
	ds_arquivo_compl_w	:= substr(ds_linha_w,4001,4000);
	nr_seq_registro_w	:= nr_seq_registro_w + 1;
	nr_linha_w		:= nr_linha_w + 1;

	insert into fis_efd_arquivo(nr_sequencia,
		nm_usuario,
		dt_atualizacao,
		nm_usuario_nrec,
		dt_atualizacao_nrec,
		nr_seq_controle_efd,
		nr_linha,
		cd_registro,
		ds_arquivo,
		ds_arquivo_compl)
	values (nr_seq_registro_w,
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nr_seq_controle_p,
		nr_linha_w,
		vet01.tp_registro,
		ds_arquivo_w,
		ds_arquivo_compl_w);
	end;
end loop;
close C01;

commit;

qt_linha_p	:= nr_linha_w;
nr_sequencia_p	:= nr_seq_registro_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE fis_gerar_reg_0500_efd ( nr_seq_controle_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, dt_inicio_p timestamp, dt_fim_p timestamp, cd_empresa_p bigint, ds_separador_p text, qt_linha_p INOUT bigint, nr_sequencia_p INOUT bigint) FROM PUBLIC;

