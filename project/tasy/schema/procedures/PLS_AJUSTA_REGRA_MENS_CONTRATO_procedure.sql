-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_ajusta_regra_mens_contrato () AS $body$
DECLARE


nr_seq_regra_w			bigint;
dt_inicio_vigencia_w		timestamp;
dt_atualizacao_w		timestamp;
nm_usuario_w			varchar(15);
dt_atualizacao_nrec_w		timestamp;
nm_usuario_nrec_w		varchar(15);
dt_fim_vigencia_w		timestamp;
nr_seq_reajuste_w		bigint;
nr_seq_contrato_w		bigint;
nr_seq_intercambio_w		bigint;
ie_pessoa_contrato_w		varchar(2);
pr_aplicacao_reajuste_w		double precision;
nr_seq_regra_origem_w		bigint;
vl_minimo_w			double precision;
dt_limite_movimentacao_w	smallint;
ie_tipo_data_limite_w		varchar(2);
qt_interv_mes_mensalidade_w	integer;
ie_mensalidade_mes_rescisao_w	varchar(1);
ie_agrupar_valor_w		varchar(1);
vl_minimo_abat_fatura_w		double precision;
cd_estabelecimento_w		smallint;
qt_table_w			bigint;

C01 CURSOR FOR
	SELECT	nr_sequencia,
		dt_inicio_vigencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		dt_fim_vigencia,
		nr_seq_reajuste,
		nr_seq_contrato,
		nr_seq_intercambio,
		ie_pessoa_contrato,
		pr_aplicacao_reajuste,
		nr_seq_regra_origem,
		vl_minimo,
		dt_limite_movimentacao,
		ie_tipo_data_limite,
		qt_interv_mes_mensalidade,
		ie_mensalidade_mes_rescisao,
		ie_agrupar_valor,
		vl_minimo_abat_fatura,
		cd_estabelecimento
	from	pls_regra_mens_contrato
	where	coalesce(ie_tipo_regra::text, '') = ''
	order by coalesce(nr_seq_regra_origem,0) desc;


BEGIN
/*select	count(*)
into	qt_table_w
from	tab
where	upper(tname) = 'PLS_REGRA_MENS_CONTRATO_BCK';

if	(qt_table_w = 0) then
	begin
	exec_sql_dinamico('Lepinski','create table PLS_REGRA_MENS_CONTRATO_BCK as select * from PLS_REGRA_MENS_CONTRATO');
	exception
	when others then
		null;
	end;
end if;*/
open C01;
loop
fetch C01 into
	nr_seq_regra_w,
	dt_inicio_vigencia_w,
	dt_atualizacao_w,
	nm_usuario_w,
	dt_atualizacao_nrec_w,
	nm_usuario_nrec_w,
	dt_fim_vigencia_w,
	nr_seq_reajuste_w,
	nr_seq_contrato_w,
	nr_seq_intercambio_w,
	ie_pessoa_contrato_w,
	pr_aplicacao_reajuste_w,
	nr_seq_regra_origem_w,
	vl_minimo_w,
	dt_limite_movimentacao_w,
	ie_tipo_data_limite_w,
	qt_interv_mes_mensalidade_w,
	ie_mensalidade_mes_rescisao_w,
	ie_agrupar_valor_w,
	vl_minimo_abat_fatura_w,
	cd_estabelecimento_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	if (ie_mensalidade_mes_rescisao_w IS NOT NULL AND ie_mensalidade_mes_rescisao_w::text <> '') then
		insert	into	pls_regra_mens_contrato(	nr_sequencia,
				cd_estabelecimento,
				dt_inicio_vigencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				dt_fim_vigencia,
				nr_seq_reajuste,
				nr_seq_contrato,
				nr_seq_intercambio,
				ie_pessoa_contrato,
				pr_aplicacao_reajuste,
				ie_mensalidade_mes_rescisao,
				ie_tipo_regra)
			values (	nextval('pls_regra_mens_contrato_seq'),
				cd_estabelecimento_w,
				dt_inicio_vigencia_w,
				dt_atualizacao_w,
				nm_usuario_w,
				dt_atualizacao_nrec_w,
				nm_usuario_nrec_w,
				dt_fim_vigencia_w,
				nr_seq_reajuste_w,
				nr_seq_contrato_w,
				nr_seq_intercambio_w,
				ie_pessoa_contrato_w,
				pr_aplicacao_reajuste_w,
				ie_mensalidade_mes_rescisao_w,
				'G');
	end if;

	if (dt_limite_movimentacao_w IS NOT NULL AND dt_limite_movimentacao_w::text <> '') then

		insert	into	pls_regra_mens_contrato(	nr_sequencia,
				cd_estabelecimento,
				dt_inicio_vigencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				dt_fim_vigencia,
				nr_seq_reajuste,
				nr_seq_contrato,
				nr_seq_intercambio,
				ie_pessoa_contrato,
				pr_aplicacao_reajuste,
				dt_limite_movimentacao,
				ie_tipo_data_limite,
				ie_agrupar_valor,
				ie_tipo_regra)
			values (	nextval('pls_regra_mens_contrato_seq'),
				cd_estabelecimento_w,
				dt_inicio_vigencia_w,
				dt_atualizacao_w,
				nm_usuario_w,
				dt_atualizacao_nrec_w,
				nm_usuario_nrec_w,
				dt_fim_vigencia_w,
				nr_seq_reajuste_w,
				nr_seq_contrato_w,
				nr_seq_intercambio_w,
				ie_pessoa_contrato_w,
				pr_aplicacao_reajuste_w,
				dt_limite_movimentacao_w,
				ie_tipo_data_limite_w,
				ie_agrupar_valor_w,
				'L');
	end if;

	if (vl_minimo_w IS NOT NULL AND vl_minimo_w::text <> '') or (vl_minimo_abat_fatura_w IS NOT NULL AND vl_minimo_abat_fatura_w::text <> '') then

		insert	into	pls_regra_mens_contrato(	nr_sequencia,
				cd_estabelecimento,
				dt_inicio_vigencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				dt_fim_vigencia,
				nr_seq_reajuste,
				nr_seq_contrato,
				nr_seq_intercambio,
				ie_pessoa_contrato,
				pr_aplicacao_reajuste,
				vl_minimo,
				vl_minimo_abat_fatura,
				ie_tipo_regra)
			values (	nextval('pls_regra_mens_contrato_seq'),
				cd_estabelecimento_w,
				dt_inicio_vigencia_w,
				dt_atualizacao_w,
				nm_usuario_w,
				dt_atualizacao_nrec_w,
				nm_usuario_nrec_w,
				dt_fim_vigencia_w,
				nr_seq_reajuste_w,
				nr_seq_contrato_w,
				nr_seq_intercambio_w,
				ie_pessoa_contrato_w,
				pr_aplicacao_reajuste_w,
				vl_minimo_w,
				vl_minimo_abat_fatura_w,
				'VM');
	end if;

	if (qt_interv_mes_mensalidade_w IS NOT NULL AND qt_interv_mes_mensalidade_w::text <> '') then

		insert	into	pls_regra_mens_contrato(	nr_sequencia,
				cd_estabelecimento,
				dt_inicio_vigencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				dt_fim_vigencia,
				nr_seq_reajuste,
				nr_seq_contrato,
				nr_seq_intercambio,
				ie_pessoa_contrato,
				pr_aplicacao_reajuste,
				qt_interv_mes_mensalidade,
				ie_agrupar_valor,
				ie_tipo_regra)
			values (	nextval('pls_regra_mens_contrato_seq'),
				cd_estabelecimento_w,
				dt_inicio_vigencia_w,
				dt_atualizacao_w,
				nm_usuario_w,
				dt_atualizacao_nrec_w,
				nm_usuario_nrec_w,
				dt_fim_vigencia_w,
				nr_seq_reajuste_w,
				nr_seq_contrato_w,
				nr_seq_intercambio_w,
				ie_pessoa_contrato_w,
				pr_aplicacao_reajuste_w,
				qt_interv_mes_mensalidade_w,
				ie_agrupar_valor_w,
				'F');
	end if;

	delete	from	pls_regra_mens_contrato
	where	nr_sequencia	= nr_seq_regra_w;
	end;
end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_ajusta_regra_mens_contrato () FROM PUBLIC;

