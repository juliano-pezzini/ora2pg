-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE t_pls_conta_copartic_contab AS (	nr_id	t_rowid);
CREATE TYPE t_pls_conta_coparticipacao AS (	nr_id	t_rowid);
CREATE TYPE t_pls_protocolo_conta AS (	nr_id	t_rowid);


CREATE OR REPLACE PROCEDURE ctb_pls_provisao_copart_proj ( nr_lote_contabil_p bigint, nm_usuario_p text, ie_exclusao_p text, ds_retorno_p INOUT text) AS $body$
DECLARE

 
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
Finalidade: 
------------------------------------------------------------------------------------------------------------------- 
Locais de chamada direta: 
[ ] Objetos do dicionário [ X ] Tasy (Delphi/Java) [ ] Portal [ ] Relatórios [ ] Outros: 
 ------------------------------------------------------------------------------------------------------------------ 
Pontos de atenção: 
------------------------------------------------------------------------------------------------------------------- 
Referências: 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
 
 
cd_estabelecimento_w		w_movimento_contabil.cd_estabelecimento%type;
cd_conta_debito_w		w_movimento_contabil.cd_conta_contabil%type;
cd_conta_credito_w		w_movimento_contabil.cd_conta_contabil%type;
vl_contabil_w			w_movimento_contabil.vl_movimento%type;
nr_seq_w_movto_cont_w		w_movimento_contabil.nr_sequencia%type;
cd_historico_w			w_movimento_contabil.cd_historico%type;
nr_seq_conta_w			pls_conta.nr_sequencia%type;
cd_centro_custo_deb_w		w_movimento_contabil.cd_centro_custo%type;
cd_centro_custo_cred_w		w_movimento_contabil.cd_centro_custo%type;
ie_centro_custo_deb_w		conta_contabil.ie_centro_custo%type;
ie_centro_custo_cred_w		conta_contabil.ie_centro_custo%type;
nr_lote_contabil_w		w_movimento_contabil.nr_lote_contabil%type;
nr_seq_prest_cong_w		pls_prestador.nr_sequencia%type;
nr_seq_protocolo_w		pls_protocolo_conta.nr_sequencia%type;
cd_cgc_prest_cong_w		pessoa_juridica.cd_cgc%type;
cd_cpf_prestador_w		pessoa_fisica.nr_cpf%type;
nr_seq_regra_cc_w		pls_regra_centro_custo.nr_sequencia%type;
nr_seq_segurado_w		pls_segurado.nr_sequencia%type;
nr_seq_plano_w			pls_plano.nr_sequencia%type;
ie_regulamentacao_w		pls_plano.ie_regulamentacao%type;
cd_pessoa_fisica_w		pessoa_fisica.cd_pessoa_fisica%type;
nr_seq_conta_copartic_w		pls_conta_coparticipacao.nr_sequencia%type;
nr_seq_copartic_contab_w	pls_conta_copartic_contab.nr_sequencia%type;
nr_nota_fiscal_w		pls_prot_conta_titulo.nr_nota_fiscal%type;
nr_seq_prot_conta_w		pls_protocolo_conta.nr_sequencia%type;
nr_seq_info_ctb_w		informacao_contabil.nr_sequencia%type;
nm_tabela_w			w_movimento_contabil.nm_tabela%type;
nm_atributo_w			w_movimento_contabil.nm_atributo%type;
cd_tipo_lote_contabil_w		lote_contabil.cd_tipo_lote_contabil%type;
nm_agrupador_w			agrupador_contabil.nm_atributo%type;
nr_seq_agrupamento_w		w_movimento_contabil.nr_seq_agrupamento%type;
nr_seq_resumo_w			pls_conta_medica_resumo.nr_sequencia%type;
nm_prestador_pgto_w		pls_conta_medica_resumo.nm_prestador_pgto%type;
nr_seq_pagador_w		pls_segurado.nr_seq_pagador%type;
nr_titulo_w			titulo_receber.nr_titulo%type;
nr_seq_protocolo_ant_w		pls_protocolo_conta.nr_sequencia%type;
nr_seq_conta_copartic_ant_w	pls_conta_coparticipacao.nr_sequencia%type;
ds_conteudo_w			varchar(4000);
vl_retorno_w			varchar(2000);
ds_item_w			varchar(255);
nm_prest_cong_w			varchar(255);
ds_compl_historico_w		varchar(255);
ds_compl_historico_ww		varchar(255);
nm_segurado_w			varchar(255);
nm_pagador_w			varchar(80);
ie_compl_hist_w			varchar(2);
ie_estorno_custo_w		varchar(1);
ie_estorno_w			varchar(1);
ie_existe_copartic_w		varchar(1);
qt_compl_hist_w			bigint;
dt_referencia_w			timestamp;
dt_contabil_w			timestamp;
dt_referencia_month_w		timestamp;
dt_recebimento_w		timestamp;
dt_referencia_fm_w		timestamp;
nr_id_prot_conta_w		oid;
nr_id_copartic_w		oid;
nr_id_copartic_contab_w		oid;

type t_rowid is table of varchar(18) index by integer;
pls_copartic_contab_prov_w		t_pls_conta_copartic_contab;
pls_copartic_contab_estorno_w		t_pls_conta_copartic_contab;
pls_conta_copartic_prov_w		t_pls_conta_coparticipacao;
pls_conta_copartic_estorno_w		t_pls_conta_coparticipacao;
pls_protocolo_conta_w	t_pls_protocolo_conta;

type t_movimento_contabil is table 
	of w_movimento_contabil%rowtype index by integer;
movimento_contabil_w	t_movimento_contabil;
item_mov_contabil_w	w_movimento_contabil%rowtype;

c_prov_copart CURSOR FOR 
	SELECT	c.nr_sequencia, 
		--'Provisão de coparticipação da conta: ' 
		wheb_mensagem_pck.get_texto(300258)||a.nr_sequencia ds_item, 
		c.cd_conta_deb_provisao, 
		c.cd_conta_cred_provisao, 
		coalesce(c.vl_coparticipacao,0), 
		c.dt_mes_competencia, 
		c.cd_historico_provisao, 
		a.nr_sequencia, 
		a.nr_seq_segurado, 
		a.nr_seq_protocolo, 
		a.nr_seq_prestador_exec, 
		d.ie_regulamentacao, 
		d.nr_sequencia, 
		a.nr_seq_prot_conta, 
		b.ie_estorno_custo, 
		x.dt_recebimento, 
		'PLS_CONTA_COPARTIC_CONTAB' nm_tabela, 
		'VL_COPARTICIPACAO' nm_atributo, 
		null nr_sequencia, 
		(	SELECT	nm_prestador_pgto 
			from	pls_conta_medica_resumo		r 
			where	r.nr_sequencia	= c.nr_seq_conta_resumo 
			and	r.nr_seq_conta	= a.nr_sequencia 
		), 
		substr(pls_obter_dados_segurado(a.nr_seq_segurado,'N'),1,255) nm_segurado, 
		'N' ie_estorno, 
		b.nr_sequencia nr_seq_conta_copartic, 
		x.oid nr_id_prot_conta, 
		b.oid nr_id_copartic, 
		c.oid nr_id_copartic_contab 
	from	pls_conta 			a, 
		pls_conta_coparticipacao	b, 
		pls_conta_copartic_contab	c, 
		pls_plano			d, 
		pls_protocolo_conta 		x 
	where	a.nr_sequencia			= b.nr_seq_conta 
	and	b.nr_sequencia			= c.nr_seq_conta_copartic 
	and	a.nr_sequencia			= b.nr_seq_conta 
	and	x.nr_sequencia			= a.nr_seq_protocolo 
	and	d.nr_sequencia			= a.nr_seq_plano 
	and	coalesce(c.vl_coparticipacao,0)	> 0 
	and	a.ie_status			in ('F','S') 
	and	((x.ie_tipo_protocolo		in ('C','I','F') 
	and	b.ie_status_coparticipacao	in ('D','S')) 
	or (x.ie_tipo_protocolo		= 'R' 
	and	b.ie_status_coparticipacao	<> 'N')) 
	and	c.dt_mes_competencia between dt_referencia_month_w and dt_referencia_fm_w 
	and	x.cd_estabelecimento		= cd_estabelecimento_w 
	and	coalesce(c.nr_lote_contabil_prov,0)	= 0 
	
union all
 
	select	c.nr_sequencia, 
		--'Estorno da provisão de coparticipação da conta: ' 
		wheb_mensagem_pck.get_texto(300261)||a.nr_sequencia ds_item, 
		c.cd_conta_deb_provisao, 
		c.cd_conta_cred_provisao, 
		coalesce(c.vl_coparticipacao,0), 
		b.dt_estorno, 
		c.cd_historico_provisao, 
		a.nr_sequencia, 
		a.nr_seq_segurado, 
		a.nr_seq_protocolo, 
		a.nr_seq_prestador_exec, 
		d.ie_regulamentacao, 
		d.nr_sequencia, 
		a.nr_seq_prot_conta, 
		b.ie_estorno_custo, 
		x.dt_recebimento, 
		'PLS_CONTA_COPARTIC_CONTAB' nm_tabela, 
		'VL_COPARTICIPACAO' nm_atributo, 
		null nr_sequencia, 
		(	select	nm_prestador_pgto 
			from	pls_conta_medica_resumo		r 
			where	r.nr_sequencia	= c.nr_seq_conta_resumo 
			and	r.nr_seq_conta	= a.nr_sequencia 
		), 
		substr(pls_obter_dados_segurado(a.nr_seq_segurado,'N'),1,255) nm_segurado, 
		'S' ie_estorno, 
		b.nr_sequencia nr_seq_conta_copartic, 
		x.oid nr_id_prot_conta, 
		b.oid nr_id_copartic, 
		c.oid nr_id_copartic_contab 
	from	pls_conta 			a, 
		pls_conta_coparticipacao	b, 
		pls_conta_copartic_contab	c, 
		pls_plano			d, 
		pls_protocolo_conta 		x 
	where	a.nr_sequencia			= b.nr_seq_conta 
	and	b.nr_sequencia			= c.nr_seq_conta_copartic 
	and	a.nr_sequencia			= b.nr_seq_conta 
	and	x.nr_sequencia			= a.nr_seq_protocolo 
	and	d.nr_sequencia			= a.nr_seq_plano 
	and	a.ie_status			in ('F','S') -- Conta fechada 
	and	coalesce(b.ie_estorno_custo,'N')	= 'S' 
	and	((x.ie_tipo_protocolo		in ('C','I','F') 
	and	b.ie_status_coparticipacao	in ('D','S')) 
	or (x.ie_tipo_protocolo		= 'R')) 
	and	b.dt_estorno between dt_referencia_month_w and dt_referencia_fm_w 
	and	x.cd_estabelecimento		= cd_estabelecimento_w 
	and	coalesce(c.nr_lote_contabil_estorno,0) = 0 
	and	coalesce(c.vl_coparticipacao,0)	< 0 
	
union all
 
	select	c.nr_sequencia, 
		--'Estorno da provisão de coparticipação da conta: ' 
		wheb_mensagem_pck.get_texto(300261)||a.nr_sequencia ds_item, 
		c.cd_conta_deb_provisao,		 
		c.cd_conta_cred_provisao, 
		coalesce(c.vl_coparticipacao,0) * -1, 
		b.dt_fechamento_discussao, 
		c.cd_historico_provisao, 
		a.nr_sequencia, 
		a.nr_seq_segurado, 
		a.nr_seq_protocolo, 
		a.nr_seq_prestador_exec, 
		d.ie_regulamentacao, 
		d.nr_sequencia, 
		a.nr_seq_prot_conta, 
		b.ie_estorno_custo, 
		x.dt_recebimento, 
		'PLS_CONTA_COPARTIC_CONTAB' nm_tabela, 
		'VL_COPARTICIPACAO' nm_atributo, 
		null nr_sequencia, 
		(	select	nm_prestador_pgto 
			from	pls_conta_medica_resumo		r 
			where	r.nr_sequencia	= c.nr_seq_conta_resumo 
			and	r.nr_seq_conta	= a.nr_sequencia 
		), 
		substr(pls_obter_dados_segurado(a.nr_seq_segurado,'N'),1,255) nm_segurado, 
		'S' ie_estorno, 
		b.nr_sequencia nr_seq_conta_copartic, 
		x.oid nr_id_prot_conta, 
		b.oid nr_id_copartic, 
		c.oid nr_id_copartic_contab 
	from	pls_conta 			a, 
		pls_conta_coparticipacao	b, 
		pls_conta_copartic_contab	c, 
		pls_plano			d, 
		pls_protocolo_conta 		x 
	where	a.nr_sequencia			= b.nr_seq_conta 
	and	b.nr_sequencia			= c.nr_seq_conta_copartic 
	and	a.nr_sequencia			= b.nr_seq_conta 
	and	x.nr_sequencia			= a.nr_seq_protocolo 
	and	d.nr_sequencia			= a.nr_seq_plano 
	and	b.ie_status_coparticipacao 	= 'F' 
	and	a.ie_status			in ('F','S') -- Conta fechada 
	and	coalesce(b.ie_estorno_custo,'N')	= 'N' 
	and	x.ie_tipo_protocolo		in ('C','I','R','F') 
	and	(b.dt_fechamento_discussao IS NOT NULL AND b.dt_fechamento_discussao::text <> '') 
	and	x.cd_estabelecimento	= cd_estabelecimento_w	 
	and	(c.nr_lote_contabil_prov IS NOT NULL AND c.nr_lote_contabil_prov::text <> '') 
	and	coalesce(c.nr_lote_contabil_estorno,0) = 0;

c_movimento_w CURSOR FOR 
	SELECT	oid 
	from	w_movimento_contabil 
	where	nr_lote_contabil	= nr_lote_contabil_p;

-- Variávei do c_movimento_w | cursor para limpar a tabela 
type c_movimento_w_type is table of oid;
c_movimento_w_regs_w c_movimento_w_type;

c_movimento CURSOR FOR 
	SELECT	oid 
	from	movimento_contabil 
	where	nr_lote_contabil	= nr_lote_contabil_p;

-- Variávei do c_movimento | cursor para limpar a tabela 
type c_movimento_type is table of oid;
c_movimento_regs_w c_movimento_type;


BEGIN 
select	dt_referencia, 
	cd_estabelecimento, 
	nr_lote_contabil, 
	cd_tipo_lote_contabil 
into STRICT 	dt_referencia_w, 
	cd_estabelecimento_w, 
	nr_lote_contabil_w, 
	cd_tipo_lote_contabil_w 
from 	lote_contabil 
where 	nr_lote_contabil 	= nr_lote_contabil_p;
 
dt_referencia_month_w	:= trunc(dt_referencia_w,'month');
dt_referencia_fm_w	:= fim_dia(fim_mes(dt_referencia_month_w));
 
delete	from w_pls_movimento_sem_conta 
where	ie_tipo_item in ('PC') 
and	dt_referencia between dt_referencia_month_w and dt_referencia_fm_w;
 
if (ie_exclusao_p = 'S') then 
	CALL wheb_usuario_pck.set_ie_lote_contabil('S');
	 
	open c_movimento;
	loop 
	fetch c_movimento bulk collect into c_movimento_regs_w limit 1000;
 
		-- Deletar em massa os registros da tabela temporária 
		forall i in c_movimento_regs_w.first .. c_movimento_regs_w.last 
			delete	from movimento_contabil 
			where	rowid = c_movimento_regs_w(i);
 
		commit;
	EXIT WHEN NOT FOUND; /* apply on c_movimento */
	end loop;
	close c_movimento;
 
	update	lote_contabil 
	set	vl_credito 		= 0, 
		vl_debito 		= 0, 
		dt_geracao_lote		 = NULL 
	where	nr_lote_contabil	= nr_lote_contabil_p;
 
	commit;
	 
	update	pls_conta_coparticipacao a 
	set	a.nr_lote_contabil_prov	= 0 
	where	a.nr_lote_contabil_prov	= nr_lote_contabil_p;
	 
	update	pls_conta_coparticipacao 
	set	nr_lote_contabil_estorno	= 0 
	where	nr_lote_contabil_estorno	= nr_lote_contabil_p;
	 
	commit;
 
	update	pls_protocolo_conta 
	set	nr_lote_prov_copartic	= 0 
	where	nr_lote_prov_copartic	= nr_lote_contabil_p;
	 
	commit;
 
	update	pls_conta_copartic_contab 
	set	nr_lote_contabil_prov	= 0 
	where	nr_lote_contabil_prov	= nr_lote_contabil_p;
	 
	commit;
	 
	update	pls_conta_copartic_contab 
	set	nr_lote_contabil_estorno	= 0 
	where	nr_lote_contabil_estorno	= nr_lote_contabil_p;
	 
	commit;
	 
	CALL wheb_usuario_pck.set_ie_lote_contabil('N');
else 
	CALL wheb_usuario_pck.set_ie_lote_contabil('S');
	 
	open c_movimento_w;
	loop 
	fetch c_movimento_w bulk collect into c_movimento_w_regs_w limit 1000;
 
		-- Deletar em massa os registros da tabela temporária 
		forall i in c_movimento_w_regs_w.first .. c_movimento_w_regs_w.last 
			delete	from w_movimento_contabil 
			where	rowid = c_movimento_w_regs_w(i);
 
		commit;
	EXIT WHEN NOT FOUND; /* apply on c_movimento_w */
	end loop;
	close c_movimento_w;
 
	CALL wheb_usuario_pck.set_ie_lote_contabil('N');
 
	/* Paulo 29/09/2009 - OS 168594 */
 
	begin 
	ie_compl_hist_w	:= obter_se_compl_tipo_lote(cd_estabelecimento_w, cd_tipo_lote_contabil_w);
	exception 
	when others then 
		ie_compl_hist_w	:= 'N';
	end;
 
	nm_agrupador_w := coalesce(trim(both obter_agrupador_contabil(cd_tipo_lote_contabil_w)), 'NR_SEQ_CONTA');
 
	nr_seq_w_movto_cont_w	:= 0;
	nr_seq_info_ctb_w	:= 41;
 
	open c_prov_copart;
	loop 
	fetch c_prov_copart into 
		nr_seq_copartic_contab_w, 
		ds_item_w, 
		cd_conta_debito_w, 
		cd_conta_credito_w, 
		vl_contabil_w, 
		dt_contabil_w, 
		cd_historico_w, 
		nr_seq_conta_w, 
		nr_seq_segurado_w, 
		nr_seq_protocolo_w, 
		nr_seq_prest_cong_w, 
		ie_regulamentacao_w, 
		nr_seq_plano_w, 
		nr_seq_prot_conta_w, 
		ie_estorno_custo_w, 
		dt_recebimento_w, 
		nm_tabela_w, 
		nm_atributo_w, 
		nr_seq_resumo_w, 
		nm_prestador_pgto_w, 
		nm_segurado_w, 
		ie_estorno_w, 
		nr_seq_conta_copartic_w, 
		nr_id_prot_conta_w, 
		nr_id_copartic_w, 
		nr_id_copartic_contab_w;
	EXIT WHEN NOT FOUND; /* apply on c_prov_copart */
		begin 
		cd_centro_custo_deb_w	:= null;
		cd_centro_custo_cred_w	:= null;
		nm_prest_cong_w		:= null;
		cd_pessoa_fisica_w	:= null;
		cd_cgc_prest_cong_w   := null;
		 
		if (coalesce(cd_conta_debito_w::text, '') = '') then 
			insert into w_pls_movimento_sem_conta(nr_sequencia, 
				cd_item, 
				ds_item, 
				ie_tipo_item, 
				dt_atualizacao, 
				nm_usuario, 
				vl_item, 
				dt_referencia, 
				nr_lote_contabil, 
				ie_proc_mat_item, 
				ie_deb_cred, 
				ds_observacao) 
			values (nextval('w_pls_movimento_sem_conta_seq'), 
				nr_seq_copartic_contab_w, 
				ds_item_w, 
				'PC', 
				clock_timestamp(), 
				nm_usuario_p, 
				vl_contabil_w, 
				dt_referencia_w, 
				nr_lote_contabil_w, 
				null, 
				'D', 
				--'Provisão de produção médica' 
				wheb_mensagem_pck.get_texto(300262));
		end if;
		 
		if (coalesce(cd_conta_credito_w::text, '') = '') then 
			insert into w_pls_movimento_sem_conta(nr_sequencia, 
				cd_item, 
				ds_item, 
				ie_tipo_item, 
				dt_atualizacao, 
				nm_usuario, 
				vl_item, 
				dt_referencia, 
				nr_lote_contabil, 
				ie_proc_mat_item, 
				ie_deb_cred, 
				ds_observacao) 
			values (nextval('w_pls_movimento_sem_conta_seq'), 
				nr_seq_copartic_contab_w, 
				ds_item_w, 
				'PC', 
				clock_timestamp(), 
				nm_usuario_p, 
				vl_contabil_w, 
				dt_referencia_w, 
				nr_lote_contabil_w, 
				null, 
				'C', 
				--'Provisão de produção médica' 
				wheb_mensagem_pck.get_texto(300262));
		end if;
		 
		if (cd_conta_debito_w IS NOT NULL AND cd_conta_debito_w::text <> '') or (cd_conta_credito_w IS NOT NULL AND cd_conta_credito_w::text <> '') then 
			 
			ds_compl_historico_w	:= null;
 
			if (ie_compl_hist_w = 'S') then 
				select	count(1) 
				into STRICT	qt_compl_hist_w 
				from	historico_padrao_atributo 
				where	cd_tipo_lote_contabil	= cd_tipo_lote_contabil_w 
				and	cd_historico		= cd_historico_w  LIMIT 1;
 
				if (qt_compl_hist_w > 0) then				 
					if (coalesce(nr_seq_prest_cong_w,0) > 0) then 
						select	a.cd_pessoa_fisica, 
							a.cd_cgc, 
							substr(obter_nome_pf_pj(a.cd_pessoa_fisica,a.cd_cgc),1,255) 
						into STRICT	cd_pessoa_fisica_w, 
							cd_cgc_prest_cong_w, 
							nm_prest_cong_w 
						from	pls_prestador	a 
						where	a.nr_sequencia	= nr_seq_prest_cong_w;
 
						select	max(nr_cpf) 
						into STRICT	cd_cpf_prestador_w 
						from	pessoa_fisica 
						where	cd_pessoa_fisica	= cd_pessoa_fisica_w;
					else					 
						select	substr(max(pls_obter_nome_congenere(a.nr_sequencia)),1,255), 
							max(a.cd_cgc), 
							max(a.nr_sequencia) 
						into STRICT	nm_prest_cong_w, 
							cd_cgc_prest_cong_w, 
							nr_seq_prest_cong_w 
						from	pls_congenere		a, 
							pls_protocolo_conta	b, 
							pls_conta		c 
						where	a.nr_sequencia	= b.nr_seq_congenere 
						and	b.nr_sequencia	= c.nr_seq_protocolo 
						and	c.nr_sequencia	= nr_seq_conta_w;
					end if;
					 
					select	max(nr_nota_fiscal) 
					into STRICT	nr_nota_fiscal_w 
					from	pls_prot_conta_titulo 
					where	nr_sequencia	= nr_seq_prot_conta_w;
					 
					select	max(g.nr_titulo) 
					into STRICT	nr_titulo_w 
					from 	pls_conta			a, 
						pls_conta_coparticipacao	b, 
						pls_conta_copartic_contab	c, 
						pls_mensalidade_seg_item	d, 
						pls_mensalidade_segurado	e, 
						pls_mensalidade			f, 
						titulo_receber			g 
					where	a.nr_sequencia	= b.nr_seq_conta 
					and	b.nr_sequencia	= c.nr_seq_conta_copartic 
					and	e.nr_sequencia	= d.nr_seq_mensalidade_seg 
					and	f.nr_sequencia	= e.nr_seq_mensalidade 
					and	f.nr_sequencia	= g.nr_seq_mensalidade 
					and	e.nr_sequencia	= b.nr_seq_mensalidade_seg 
					and	a.nr_sequencia	= nr_seq_conta_w 
					and	c.nr_sequencia	= nr_seq_copartic_contab_w;
					 
					select	max(obter_nome_pf_pj(a.cd_pessoa_fisica,a.cd_cgc)), 
						max(b.nr_seq_pagador) 
					into STRICT	nm_pagador_w, 
						nr_seq_pagador_w 
					from	pls_contrato_pagador a, 
						pls_segurado b 
					where	a.nr_sequencia	= b.nr_seq_pagador 
					and	b.nr_sequencia	= nr_seq_segurado_w;
					 
					ds_conteudo_w	:= substr(	nr_seq_prest_cong_w		|| '#@' || 
									nm_prest_cong_w 		|| '#@' || 
									nr_seq_protocolo_w		|| '#@' || 
									nr_seq_conta_w			|| '#@' || 
									cd_cgc_prest_cong_w		|| '#@' || 
									cd_cpf_prestador_w		|| '#@' || 
									nr_nota_fiscal_w		|| '#@' || 
									nr_seq_pagador_w		|| '#@' || 
									nm_prestador_pgto_w		|| '#@' || 
									nm_segurado_w			|| '#@' || 
									nm_pagador_w			|| '#@' || 
									nr_titulo_w,1,4000);
					 
					begin 
					ds_compl_historico_ww	:= substr(obter_compl_historico(cd_tipo_lote_contabil_w, cd_historico_w, ds_conteudo_w),1,255);
					exception 
					when others then 
						ds_compl_historico_ww	:= null;
					end;
 
					ds_compl_historico_w	:= substr(coalesce(ds_compl_historico_ww, ds_compl_historico_w),1,255);
				end if;
			end if;
 
			nr_seq_agrupamento_w	:= null;
 
			if (nm_agrupador_w = 'NR_SEQ_CONTA') then 
				nr_seq_agrupamento_w	:= somente_numero(substr(nr_seq_conta_w, 1, 10));
			end if;
 
			if (cd_conta_debito_w IS NOT NULL AND cd_conta_debito_w::text <> '') then 
			 
				select	ie_centro_custo 
				into STRICT	ie_centro_custo_deb_w 
				from	conta_contabil 
				where	cd_conta_contabil	= cd_conta_debito_w;
 
				if (ie_centro_custo_deb_w = 'S') then 
					SELECT * FROM pls_obter_centro_custo(	'D', nr_seq_plano_w, cd_estabelecimento_w, '', '', ie_regulamentacao_w, nr_seq_segurado_w, '', cd_centro_custo_deb_w, nr_seq_regra_cc_w) INTO STRICT cd_centro_custo_deb_w, nr_seq_regra_cc_w;
				end if;
				 
				nr_seq_w_movto_cont_w	:= nr_seq_w_movto_cont_w + 1;
 
				item_mov_contabil_w.nr_lote_contabil	:= nr_lote_contabil_p;
				item_mov_contabil_w.nr_sequencia	:= nr_seq_w_movto_cont_w;
				item_mov_contabil_w.cd_conta_contabil	:= cd_conta_debito_w;
				item_mov_contabil_w.ie_debito_credito	:= 'D';
				item_mov_contabil_w.cd_historico	:= cd_historico_w;
				item_mov_contabil_w.dt_movimento	:= dt_contabil_w;
				item_mov_contabil_w.vl_movimento	:= vl_contabil_w;
				item_mov_contabil_w.cd_estabelecimento	:= cd_estabelecimento_w;
				item_mov_contabil_w.cd_centro_custo	:= cd_centro_custo_deb_w;
				item_mov_contabil_w.ds_compl_historico	:= ds_compl_historico_w;
				item_mov_contabil_w.nr_seq_agrupamento	:= nr_seq_agrupamento_w;
				item_mov_contabil_w.nr_seq_tab_orig	:= nr_seq_copartic_contab_w;
				item_mov_contabil_w.nr_seq_info		:= nr_seq_info_ctb_w;
				item_mov_contabil_w.nm_tabela		:= nm_tabela_w;
				item_mov_contabil_w.nm_atributo		:= nm_atributo_w;
				 
				movimento_contabil_w(movimento_contabil_w.count) := item_mov_contabil_w;
			end if;
			 
			if (cd_conta_credito_w IS NOT NULL AND cd_conta_credito_w::text <> '') then 
			 
				select	ie_centro_custo 
				into STRICT	ie_centro_custo_cred_w 
				from	conta_contabil 
				where	cd_conta_contabil	= cd_conta_credito_w;
 
				if (ie_centro_custo_cred_w = 'S') then 
					SELECT * FROM pls_obter_centro_custo(	'D', nr_seq_plano_w, cd_estabelecimento_w, '', '', ie_regulamentacao_w, nr_seq_segurado_w, '', cd_centro_custo_cred_w, nr_seq_regra_cc_w) INTO STRICT cd_centro_custo_cred_w, nr_seq_regra_cc_w;
				end if;
				 
				nr_seq_w_movto_cont_w	:= nr_seq_w_movto_cont_w + 1;
				 
				item_mov_contabil_w.nr_lote_contabil	:= nr_lote_contabil_p;
				item_mov_contabil_w.nr_sequencia	:= nr_seq_w_movto_cont_w;
				item_mov_contabil_w.cd_conta_contabil	:= cd_conta_credito_w;
				item_mov_contabil_w.ie_debito_credito	:= 'C';
				item_mov_contabil_w.cd_historico	:= cd_historico_w;
				item_mov_contabil_w.dt_movimento	:= dt_contabil_w;
				item_mov_contabil_w.vl_movimento	:= vl_contabil_w;
				item_mov_contabil_w.cd_estabelecimento	:= cd_estabelecimento_w;
				item_mov_contabil_w.cd_centro_custo	:= cd_centro_custo_cred_w;
				item_mov_contabil_w.ds_compl_historico	:= ds_compl_historico_w;
				item_mov_contabil_w.nr_seq_agrupamento	:= nr_seq_agrupamento_w;
				item_mov_contabil_w.nr_seq_tab_orig	:= nr_seq_copartic_contab_w;
				item_mov_contabil_w.nr_seq_info		:= nr_seq_info_ctb_w;
				item_mov_contabil_w.nm_tabela		:= nm_tabela_w;
				item_mov_contabil_w.nm_atributo		:= nm_atributo_w;
				 
				movimento_contabil_w(movimento_contabil_w.count) := item_mov_contabil_w;
				 
			end if;
			 
			if (movimento_contabil_w.count >= 1000) then 
				begin 
				forall i in movimento_contabil_w.first .. movimento_contabil_w.last 
					insert into w_movimento_contabil values movimento_contabil_w(i);
				commit;
				movimento_contabil_w.delete;
				end;
			end if;
		end if;
		 
		CALL wheb_usuario_pck.set_ie_lote_contabil('S');
		 
		if (ie_estorno_w = 'N') then 
			pls_copartic_contab_prov_w.nr_id(pls_copartic_contab_prov_w.nr_id.count)	:= nr_id_copartic_contab_w;
			 
			if (not pls_conta_copartic_prov_w.nr_id.exists(nr_seq_conta_copartic_w)) then 
				pls_conta_copartic_prov_w.nr_id(nr_seq_conta_copartic_w)	:= nr_id_copartic_w;
			end if;
		 
			if (pls_conta_copartic_prov_w.nr_id.count >= 1000) then 
				begin 
				forall i in indices of pls_conta_copartic_prov_w.nr_id 
					update	pls_conta_coparticipacao a 
					set	a.nr_lote_contabil_prov	= nr_lote_contabil_p 
					where	rowid			= pls_conta_copartic_prov_w.nr_id(i);
				commit;
				pls_conta_copartic_prov_w.nr_id.delete;
				end;
			end if;
			 
			if (not pls_protocolo_conta_w.nr_id.exists(nr_seq_protocolo_w)) then 
				pls_protocolo_conta_w.nr_id(nr_seq_protocolo_w)	:= nr_id_prot_conta_w;
			end if;
		 
			if (pls_protocolo_conta_w.nr_id.count >= 1000) then 
				begin 
				forall i in indices of pls_protocolo_conta_w.nr_id 
					update	pls_protocolo_conta a 
					set	a.nr_lote_prov_copartic	= nr_lote_contabil_p 
					where	rowid			= pls_protocolo_conta_w.nr_id(i);
				commit;
				pls_protocolo_conta_w.nr_id.delete;
				end;
			end if;
		else	 
			pls_copartic_contab_estorno_w.nr_id(pls_copartic_contab_estorno_w.nr_id.count)	:= nr_id_copartic_contab_w;
		 
			if (pls_copartic_contab_estorno_w.nr_id.count >= 1000) then 
				begin 
				forall i in pls_copartic_contab_estorno_w.nr_id.first .. pls_copartic_contab_estorno_w.nr_id.last 
					update	pls_conta_copartic_contab a 
					set	a.nr_lote_contabil_estorno	= nr_lote_contabil_p 
					where	rowid				= pls_copartic_contab_estorno_w.nr_id(i);
				commit;
				pls_copartic_contab_estorno_w.nr_id.delete;
				end;
			end if;
			 
			if (not pls_conta_copartic_estorno_w.nr_id.exists(nr_seq_conta_copartic_w)) then 
				pls_conta_copartic_estorno_w.nr_id(nr_seq_conta_copartic_w)	:= nr_id_copartic_w;
			end if;
			 
			if (pls_conta_copartic_estorno_w.nr_id.count >= 1000) then 
				begin 
				forall i in indices of pls_conta_copartic_estorno_w.nr_id 
					update	pls_conta_coparticipacao a 
					set	a.nr_lote_contabil_estorno 	= nr_lote_contabil_p 
					where	rowid				= pls_conta_copartic_estorno_w.nr_id(i);
				commit;
				pls_conta_copartic_estorno_w.nr_id.delete;
				end;
			end if;
		end if;
		 
		CALL wheb_usuario_pck.set_ie_lote_contabil('N');
		 
		end;
	end loop;
	close c_prov_copart;
	 
	if (movimento_contabil_w.count >= 0) then	 
		forall i in movimento_contabil_w.first .. movimento_contabil_w.last 
			insert into w_movimento_contabil values movimento_contabil_w(i);
		commit;
		movimento_contabil_w.delete;
	end if;
	 
	CALL wheb_usuario_pck.set_ie_lote_contabil('S');
	 
	if (pls_copartic_contab_prov_w.nr_id.count > 0) then 
		forall i in pls_copartic_contab_prov_w.nr_id.first .. pls_copartic_contab_prov_w.nr_id.last 
			update	pls_conta_copartic_contab a 
			set	a.nr_lote_contabil_prov	= nr_lote_contabil_p 
			where	rowid			= pls_copartic_contab_prov_w.nr_id(i);
		commit;
		pls_copartic_contab_prov_w.nr_id.delete;
	end if;
	 
	if (pls_copartic_contab_estorno_w.nr_id.count > 0) then 
		forall i in pls_copartic_contab_estorno_w.nr_id.first .. pls_copartic_contab_estorno_w.nr_id.last 
			update	pls_conta_copartic_contab a 
			set	a.nr_lote_contabil_estorno	= nr_lote_contabil_p 
			where	rowid				= pls_copartic_contab_estorno_w.nr_id(i);
		commit;
		pls_copartic_contab_estorno_w.nr_id.delete;
	end if;
	 
	if (pls_conta_copartic_prov_w.nr_id.count > 0) then 
		forall i in indices of pls_conta_copartic_prov_w.nr_id 
			update	pls_conta_coparticipacao a 
			set	a.nr_lote_contabil_prov	= nr_lote_contabil_p 
			where	rowid			= pls_conta_copartic_prov_w.nr_id(i);
		commit;
		pls_conta_copartic_prov_w.nr_id.delete;
	end if;
	 
	if (pls_conta_copartic_estorno_w.nr_id.count > 0) then 
		forall i in indices of pls_conta_copartic_estorno_w.nr_id 
			update	pls_conta_coparticipacao a 
			set	a.nr_lote_contabil_estorno 	= nr_lote_contabil_p 
			where	rowid				= pls_conta_copartic_estorno_w.nr_id(i);
		commit;
		pls_conta_copartic_estorno_w.nr_id.delete;
	end if;
	 
	if (pls_protocolo_conta_w.nr_id.count > 0) then 
		forall i in indices of pls_protocolo_conta_w.nr_id 
			update	pls_protocolo_conta a 
			set	a.nr_lote_prov_copartic	= nr_lote_contabil_p 
			where	rowid			= pls_protocolo_conta_w.nr_id(i);
		commit;
		pls_protocolo_conta_w.nr_id.delete;
	end if;
	 
	CALL wheb_usuario_pck.set_ie_lote_contabil('N');
	 
	CALL agrupa_movimento_contabil(	nr_lote_contabil_p, 
					nm_usuario_p);
end if;
 
if (coalesce(ds_retorno_p::text, '') = '') then 
	begin 
	update	lote_contabil 
	set	ie_situacao 		= 'A', 
		dt_geracao_lote		= CASE WHEN ie_exclusao_p='N' THEN clock_timestamp() WHEN ie_exclusao_p='S' THEN null END  
	where	nr_lote_contabil 	= nr_lote_contabil_p;
 
   	if (ie_exclusao_p	= 'S') then 
		ds_retorno_p	:= wheb_mensagem_pck.get_texto(165188);
	else 
		ds_retorno_p	:= wheb_mensagem_pck.get_texto(165187);
	end if;
 
	commit;
	end;
else 
	rollback;
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_pls_provisao_copart_proj ( nr_lote_contabil_p bigint, nm_usuario_p text, ie_exclusao_p text, ds_retorno_p INOUT text) FROM PUBLIC;

