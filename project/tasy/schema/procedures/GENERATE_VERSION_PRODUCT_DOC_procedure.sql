-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE generate_version_product_doc (nr_seq_intencao_uso_p bigint, ds_version_p text) AS $body$
DECLARE


  nr_seq_new_intencao_uso_w      reg_intencao_uso.nr_sequencia%type;
  new_seq_reg_area_customer_w    reg_area_customer.nr_sequencia%type;
  new_seq_features_customer_w    reg_features_customer.nr_sequencia%type;
  new_seq_customer_requirement_w reg_customer_requirement.nr_sequencia%type;
  new_seq_product_requirement_w  reg_product_requirement.nr_sequencia%type;
  new_seq_funcao_pr_w            reg_funcao_pr.nr_sequencia%type;
  new_seq_escopo_product_req_w   reg_escopo_product_req.nr_sequencia%type;
  new_seq_product_req_loc_w      reg_product_req_loc.nr_sequencia%type;
  new_seq_escopo_customer_req_w  reg_escopo_customer_req.nr_sequencia%type;
  new_seq_pcustomer_req_loc_w    reg_customer_req_loc.nr_sequencia%type;
  new_seq_reg_caso_teste_w       reg_caso_teste.nr_sequencia%type;
  new_seq_reg_acao_teste_w       reg_acao_teste.nr_sequencia%type;
  new_seq_reg_anexo_teste_w      reg_anexo_teste.nr_sequencia%type;
  new_seq_reg_escopo_w           reg_escopo.nr_sequencia%type;
  new_seq_plataform_pr_w         reg_product_req_plat.nr_sequencia%type;

  err_msg varchar(100);

  -- Cursor das Areas (REG_AREA_CUSTOMER)
  c01 CURSOR(nr_sequencia_w  bigint) FOR
    SELECT *
      from reg_area_customer
     where nr_seq_intencao_uso = nr_sequencia_w;

  -- Cursor das Features (REG_FEATURES_CUSTOMER)
  c02 CURSOR(nr_sequencia_w  bigint) FOR
    SELECT *
      from reg_features_customer
     where nr_seq_area_customer = nr_sequencia_w;

  -- Cursor das URS (REG_CUSTOMER_REQUIREMENT)
  c03 CURSOR(nr_sequencia_w  bigint) FOR
    SELECT *
      from reg_customer_requirement
     where nr_seq_features = nr_sequencia_w;

  -- Cursor das PRS (REG_PRODUCT_REQUIREMENT)
  c04 CURSOR(nr_sequencia_w  bigint) FOR
    SELECT *
      from reg_product_requirement
     where nr_customer_requirement = nr_sequencia_w;

  -- Cursor das Funcoes do PRS (REG_FUNCAO_PR)
  c05 CURSOR(nr_sequencia_w  bigint) FOR
    SELECT * from reg_funcao_pr where nr_seq_product_req = nr_sequencia_w;

  -- Cursor dos Escopos do PRS (REG_ESCOPO_PRODUCT_REQ)
  c06 CURSOR(nr_sequencia_w  bigint) FOR
    SELECT *
      from reg_escopo_product_req
     where nr_seq_product_req = nr_sequencia_w;

  -- Cursor das Localizacoes do PRS (REG_PRODUCT_REQ_LOC)
  c07 CURSOR(nr_sequencia_w  bigint) FOR
    SELECT *
      from reg_product_req_loc
     where nr_seq_product_req = nr_sequencia_w;

  -- Cursor das Plataformas do PRS (REG_PRODUCT_REQ_PLAT)
  c16 CURSOR(nr_sequencia_w  bigint) FOR
    SELECT *
      from reg_product_req_plat
     where nr_seq_product_req = nr_sequencia_w;

  -- Cursor dos Escopos do URS (REG_ESCOPO_CUSTOMER_REQ)
  c08 CURSOR(nr_sequencia_w  bigint) FOR
    SELECT *
      from reg_escopo_customer_req
     where NR_CUSTOMER_REQ = nr_sequencia_w;

  -- Cursor das Localizacoes do URS (REG_CUSTOMER_REQ_LOC)
  c09 CURSOR(nr_sequencia_w  bigint) FOR
    SELECT *
      from reg_customer_req_loc
     where NR_SEQ_CUSTOMER_REQ = nr_sequencia_w;

  -- Cursor dos casos de teste de URS (REG_CASO_TESTE)
  c10 CURSOR(nr_sequencia_w  bigint) FOR
    SELECT * from reg_caso_teste where nr_seq_customer = nr_sequencia_w;

  -- Cursor dos casos de teste de PRS (REG_CASO_TESTE)
  c11 CURSOR(nr_sequencia_w  bigint) FOR
    SELECT * from reg_caso_teste where nr_seq_product = nr_sequencia_w;

  -- Cursor das acoes dos casos de teste (REG_ACAO_TESTE)
  c12 CURSOR(nr_sequencia_w  bigint) FOR
    SELECT * from reg_acao_teste where nr_seq_caso_teste = nr_sequencia_w;

  -- Cursor dos anexos dos casos de teste (REG_ANEXO_TESTE)
  c13 CURSOR(nr_sequencia_w  bigint) FOR
    SELECT * from reg_anexo_teste where nr_seq_caso_teste = nr_sequencia_w;

  -- Cursor dos escopos da intencao de uso (REG_ESCOPO)
  c14 CURSOR(nr_sequencia_w  bigint) FOR
    SELECT * from reg_escopo where nr_seq_intencao_uso = nr_sequencia_w;

  -- Cursor das localizacoes da intencao de uso (REG_LOCALE)
  c15 CURSOR(nr_sequencia_w  bigint) FOR
    SELECT * from reg_locale where nr_seq_intencao_uso = nr_sequencia_w;

  r01 c01%rowtype;
  r02 c02%rowtype;
  r03 c03%rowtype;
  r04 c04%rowtype;
  r05 c05%rowtype;
  r06 c06%rowtype;
  r07 c07%rowtype;
  r08 c08%rowtype;
  r09 c09%rowtype;
  r10 c10%rowtype;
  r11 c11%rowtype;
  r12 c12%rowtype;
  r13 c13%rowtype;
  r14 c14%rowtype;
  r15 c15%rowtype;
  r16 c16%rowtype;


BEGIN

  -- Desabilita trigger de geracao de historico da intencao de uso
  EXECUTE 'alter trigger REG_INTENCAO_USO_AFTER disable';
  -- Desabilita trigger de features
  EXECUTE 'alter trigger REG_FEATURES_CUSTOMER_INSERT disable';
  -- Desabilita trigger de geracao de ID de URS
  EXECUTE 'alter trigger reg_customer_req_update disable';
  -- Desabilita trigger de geracao de ID de CT
  EXECUTE 'alter trigger REG_CASO_TESTE_BEFORE_INSERT disable';
  -- Desabilita trigger de geracao de ID de PRS
  EXECUTE 'alter trigger REG_PRODUCT_REQ_UPDATE disable';
  -- Desabilita trigger de validacao de URS
  EXECUTE 'alter trigger REG_CUSTOMER_REQ_INSERT disable';
  -- Desabilita trigger de validacao de PRS
  EXECUTE 'alter trigger REG_PRODUCT_REQUIREMENT_INSERT disable';

  -- Atualiza a versao da intencao de uso
  update reg_intencao_uso
     set cd_versao = ds_version_p
   where nr_sequencia = nr_seq_intencao_uso_p;

  -- Gera uma sequencia para nova intencao de uso
  select nextval('reg_intencao_uso_seq')
    into STRICT nr_seq_new_intencao_uso_w
;

  -- Cria uma nova intencao de uso sem versao copiando a intencao de uso anterior
  insert into reg_intencao_uso(cd_versao,
     ds_briefing,
     ds_descricao,
     ds_intencao_uso,
     ds_obs_briefing,
     ds_prefixo,
     dt_aprovacao,
     dt_atualizacao,
     dt_atualizacao_nrec,
     ie_situacao,
     nm_usuario,
     nm_usuario_nrec,
     nr_seq_estagio,
     nr_sequencia,
     nr_seq_intencao_uso_pai)
    SELECT null,
           ds_briefing,
           ds_descricao,
           ds_intencao_uso,
           ds_obs_briefing,
           ds_prefixo,
           dt_aprovacao,
           dt_atualizacao,
           dt_atualizacao_nrec,
           ie_situacao,
           nm_usuario,
           nm_usuario_nrec,
           nr_seq_estagio,
           nr_seq_new_intencao_uso_w,
           coalesce(nr_seq_intencao_uso_pai, nr_seq_intencao_uso_p)
      from reg_intencao_uso
     where nr_sequencia = nr_seq_intencao_uso_p;

  -- Copia os escopos
  for r14 in c14(nr_seq_intencao_uso_p) loop

    -- Gera uma sequencia para o novo escopo
    select nextval('reg_escopo_seq') into STRICT new_seq_reg_escopo_w;

    -- Insere a copia do escopo
    insert into reg_escopo(ds_escopo,
       dt_atualizacao,
       dt_atualizacao_nrec,
       ie_situacao,
       nm_usuario,
       nm_usuario_nrec,
       nr_seq_intencao_uso,
       nr_sequencia)
    values (r14.ds_escopo,
       r14.dt_atualizacao,
       r14.dt_atualizacao_nrec,
       r14.ie_situacao,
       r14.nm_usuario,
       r14.nm_usuario_nrec,
       nr_seq_new_intencao_uso_w,
       new_seq_reg_escopo_w);

  end loop;

  -- Copia as areas
  for r01 in c01(nr_seq_intencao_uso_p) loop

    -- Gera sequencia para nova area
    select nextval('reg_area_customer_seq')
      into STRICT new_seq_reg_area_customer_w
;

    -- Insere copia da area
    insert into reg_area_customer(cd_versao,
       ds_area,
       ds_descricao,
       ds_motivo_inativacao,
       ds_obervacao,
       dt_aprovacao,
       dt_atualizacao,
       dt_atualizacao_nrec,
       dt_inativacao,
       dt_liberacao,
       ie_situacao,
       nm_usuario,
       nm_usuario_aprovacao,
       nm_usuario_inativacao,
       nm_usuario_liberacao,
       nm_usuario_nrec,
       nr_seq_apresentacao,
       nr_seq_estagio,
       nr_seq_intencao_uso,
       nr_sequencia)
    values (r01.cd_versao,
       r01.ds_area,
       r01.ds_descricao,
       r01.ds_motivo_inativacao,
       r01.ds_obervacao,
       r01.dt_aprovacao,
       r01.dt_atualizacao,
       r01.dt_atualizacao_nrec,
       r01.dt_inativacao,
       r01.dt_liberacao,
       r01.ie_situacao,
       r01.nm_usuario,
       r01.nm_usuario_aprovacao,
       r01.nm_usuario_inativacao,
       r01.nm_usuario_liberacao,
       r01.nm_usuario_nrec,
       r01.nr_seq_apresentacao,
       r01.nr_seq_estagio,
       nr_seq_new_intencao_uso_w,
       new_seq_reg_area_customer_w);

    -- Copia as features
    for r02 in c02(r01.nr_sequencia) loop
    
      -- Gera sequencia para nova area
      select nextval('reg_features_customer_seq')
        into STRICT new_seq_features_customer_w
;

      -- Insere copia da feature
      insert into reg_features_customer(cd_versao,
         ds_feature,
         ds_motivo_inativacao,
         ds_overall_desc_rel,
         ds_overall_description,
         dt_aprovacao,
         dt_atualizacao,
         dt_atualizacao_nrec,
         dt_inativacao,
         dt_liberacao,
         ie_situacao,
         nm_usuario,
         nm_usuario_aprovacao,
         nm_usuario_inativacao,
         nm_usuario_liberacao,
         nm_usuario_nrec,
         nr_seq_apresentacao,
         nr_seq_area_customer,
         nr_seq_estagio,
         nr_seq_grupo,
         nr_sequencia)
      values (r02.cd_versao,
         r02.ds_feature,
         r02.ds_motivo_inativacao,
         r02.ds_overall_desc_rel,
         r02.ds_overall_description,
         r02.dt_aprovacao,
         r02.dt_atualizacao,
         r02.dt_atualizacao_nrec,
         r02.dt_inativacao,
         r02.dt_liberacao,
         r02.ie_situacao,
         r02.nm_usuario,
         r02.nm_usuario_aprovacao,
         r02.nm_usuario_inativacao,
         r02.nm_usuario_liberacao,
         r02.nm_usuario_nrec,
         r02.nr_seq_apresentacao,
         new_seq_reg_area_customer_w,
         r02.nr_seq_estagio,
         r02.nr_seq_grupo,
         new_seq_features_customer_w);

      -- Copia os URS
      for r03 in c03(r02.nr_sequencia) loop
      
        -- Gera sequencia para nova URS
        select nextval('reg_customer_requirement_seq')
          into STRICT new_seq_customer_requirement_w
;

        -- Insere copia dos URS  
        insert into reg_customer_requirement(cd_code,
           cd_crs_id,
           cd_versao,
           ds_descricao_cr,
           ds_motivo_inativacao,
           ds_racional_clinico,
           ds_rationale,
           ds_title,
           dt_aprovacao,
           dt_atualizacao,
           dt_atualizacao_nrec,
           dt_inativacao,
           dt_lancamento,
           dt_liberacao,
           dt_liberacao_vv,
           ie_clinico,
           ie_internal_feature,
           ie_situacao,
           nm_curto,
           nm_liberacao_vv,
           nm_usuario,
           nm_usuario_aprovacao,
           nm_usuario_inativacao,
           nm_usuario_lancamento,
           nm_usuario_liberacao,
           nm_usuario_nrec,
           nr_seq_apresentacao,
           nr_seq_estagio,
           nr_seq_features,
           nr_seq_intencao_uso,
           nr_sequencia)
        values (r03.cd_code,
           r03.cd_crs_id,
           r03.cd_versao,
           r03.ds_descricao_cr,
           r03.ds_motivo_inativacao,
           r03.ds_racional_clinico,
           r03.ds_rationale,
           r03.ds_title,
           r03.dt_aprovacao,
           r03.dt_atualizacao,
           r03.dt_atualizacao_nrec,
           r03.dt_inativacao,
           r03.dt_lancamento,
           r03.dt_liberacao,
           r03.dt_liberacao_vv,
           r03.ie_clinico,
           r03.ie_internal_feature,
           r03.ie_situacao,
           r03.nm_curto,
           r03.nm_liberacao_vv,
           r03.nm_usuario,
           r03.nm_usuario_aprovacao,
           r03.nm_usuario_inativacao,
           r03.nm_usuario_lancamento,
           r03.nm_usuario_liberacao,
           r03.nm_usuario_nrec,
           r03.nr_seq_apresentacao,
           r03.nr_seq_estagio,
           new_seq_features_customer_w,
           nr_seq_new_intencao_uso_w,
           new_seq_customer_requirement_w);

        -- Copia os casos de teste de URS
        for r10 in c10(r03.nr_sequencia) loop
        
          -- Gera sequencia para novo caso de teste de URS
          select nextval('reg_caso_teste_seq')
            into STRICT new_seq_reg_caso_teste_w
;

          -- Insere a copia do caso de teste de URS
          insert into reg_caso_teste(cd_ct_id,
             cd_versao,
             ds_descricao,
             ds_motivo_inativacao,
             ds_pre_condicao,
             dt_aprovacao,
             dt_atualizacao,
             dt_atualizacao_nrec,
             dt_inativacao,
             dt_liberacao_vv,
             dt_revisao,
             ie_obrigatorio,
             ie_situacao,
             ie_tipo_documento,
             ie_tipo_execucao,
             ie_tipo_revisao,
             ie_tipo_teste,
             nm_usuario,
             nm_usuario_aprovacao,
             nm_usuario_inativacao,
             nm_usuario_liberacao,
             nm_usuario_nrec,
             nr_seq_agrupador,
             nr_seq_customer,
             nr_seq_estagio,
             nr_seq_feature,
             nr_seq_intencao_uso,
             nr_seq_product,
             nr_seq_revisao,
             nr_seq_test_script,
             nr_sequencia,
             nr_seq_usability_principle,
             nr_tempo_estimado)
          values (r10.cd_ct_id,
             r10.cd_versao,
             r10.ds_descricao,
             r10.ds_motivo_inativacao,
             r10.ds_pre_condicao,
             r10.dt_aprovacao,
             r10.dt_atualizacao,
             r10.dt_atualizacao_nrec,
             r10.dt_inativacao,
             r10.dt_liberacao_vv,
             r10.dt_revisao,
             r10.ie_obrigatorio,
             r10.ie_situacao,
             r10.ie_tipo_documento,
             r10.ie_tipo_execucao,
             r10.ie_tipo_revisao,
             r10.ie_tipo_teste,
             r10.nm_usuario,
             r10.nm_usuario_aprovacao,
             r10.nm_usuario_inativacao,
             r10.nm_usuario_liberacao,
             r10.nm_usuario_nrec,
             r10.nr_seq_agrupador,
             new_seq_customer_requirement_w,
             r10.nr_seq_estagio,
             r10.nr_seq_feature,
             nr_seq_new_intencao_uso_w,
             r10.nr_seq_product,
             r10.nr_seq_revisao,
             r10.nr_seq_test_script,
             new_seq_reg_caso_teste_w,
             r10.nr_seq_usability_principle,
             r10.nr_tempo_estimado);

          -- Copia as acoes dos casos de teste de URS
          for r12 in c12(r10.nr_sequencia) loop
          
            -- Gera sequencia para nova acao do caso de teste de URS
            select nextval('reg_acao_teste_seq')
              into STRICT new_seq_reg_acao_teste_w
;

            insert into reg_acao_teste(cd_versao,
               ds_funcionalidade,
               ds_passo,
               ds_resultado,
               ds_result_fail,
               ds_result_pass,
               dt_atualizacao,
               dt_atualizacao_nrec,
               dt_inativacao,
               ie_situacao,
               nm_usuario,
               nm_usuario_inativacao,
               nm_usuario_nrec,
               nr_ordenacao,
               nr_seq_caso_teste,
               nr_seq_script,
               nr_sequencia)
            values (r12.cd_versao,
               r12.ds_funcionalidade,
               r12.ds_passo,
               r12.ds_resultado,
               r12.ds_result_fail,
               r12.ds_result_pass,
               r12.dt_atualizacao,
               r12.dt_atualizacao_nrec,
               r12.dt_inativacao,
               r12.ie_situacao,
               r12.nm_usuario,
               r12.nm_usuario_inativacao,
               r12.nm_usuario_nrec,
               r12.nr_ordenacao,
               new_seq_reg_caso_teste_w,
               r12.nr_seq_script,
               new_seq_reg_acao_teste_w);

          end loop;

          -- Copia os anexos dos casos de teste de URS
          for r13 in c13(r10.nr_sequencia) loop
          
            -- Gera sequencia para novo anexo do caso de teste de URS
            select nextval('reg_anexo_teste_seq')
              into STRICT new_seq_reg_anexo_teste_w
;

            -- Insere a copia do anexo do caso de teste de URS  
            insert into reg_anexo_teste(ds_anexo,
               dt_atualizacao,
               dt_atualizacao_nrec,
               nm_usuario,
               nm_usuario_nrec,
               nr_seq_caso_teste,
               nr_sequencia)
            values (r13.ds_anexo,
               r13.dt_atualizacao,
               r13.dt_atualizacao_nrec,
               r13.nm_usuario,
               r13.nm_usuario_nrec,
               new_seq_reg_caso_teste_w,
               new_seq_reg_anexo_teste_w);

          end loop;

        end loop;

        -- Copia os PRS
        for r04 in c04(r03.nr_sequencia) loop
        
          -- Gera sequencia para nova PRS
          select nextval('reg_product_requirement_seq')
            into STRICT new_seq_product_requirement_w
;

          -- Insere copia dos PRS  
          insert into reg_product_requirement(cd_code,
             cd_prs_id,
             cd_versao,
             ds_description,
             ds_description_pr,
             ds_motivo_inativacao,
             ds_racional_clinico,
             ds_title,
             dt_aprovacao,
             dt_atualizacao,
             dt_atualizacao_nrec,
             dt_inativacao,
             dt_liberacao,
             dt_liberacao_dev,
             dt_liberacao_vv,
             dt_liberou_ger_vv,
             dt_revisao,
             ie_aprovacao_espec,
             ie_clinico,
             ie_situacao,
             ie_tipo_revisao,
             nm_analista_liberou,
             nm_liberou_ger_vv,
             nm_liberou_vv,
             nm_usuario,
             nm_usuario_aprovacao,
             nm_usuario_inativacao,
             nm_usuario_liberacao,
             nm_usuario_nrec,
             nr_customer_requirement,
             nr_seq_apresentacao,
             nr_seq_idioma,
             nr_seq_intencao_uso,
             nr_seq_ordem_serv,
             nr_seq_product_sup,
             nr_seq_revisao,
             nr_seq_type,
             nr_sequencia)
          values (r04.cd_code,
             r04.cd_prs_id,
             r04.cd_versao,
             r04.ds_description,
             r04.ds_description_pr,
             r04.ds_motivo_inativacao,
             r04.ds_racional_clinico,
             r04.ds_title,
             r04.dt_aprovacao,
             r04.dt_atualizacao,
             r04.dt_atualizacao_nrec,
             r04.dt_inativacao,
             r04.dt_liberacao,
             r04.dt_liberacao_dev,
             r04.dt_liberacao_vv,
             r04.dt_liberou_ger_vv,
             r04.dt_revisao,
             r04.ie_aprovacao_espec,
             r04.ie_clinico,
             r04.ie_situacao,
             r04.ie_tipo_revisao,
             r04.nm_analista_liberou,
             r04.nm_liberou_ger_vv,
             r04.nm_liberou_vv,
             r04.nm_usuario,
             r04.nm_usuario_aprovacao,
             r04.nm_usuario_inativacao,
             r04.nm_usuario_liberacao,
             r04.nm_usuario_nrec,
             new_seq_customer_requirement_w,
             r04.nr_seq_apresentacao,
             r04.nr_seq_idioma,
             nr_seq_new_intencao_uso_w,
             r04.nr_seq_ordem_serv,
             r04.nr_seq_product_sup,
             r04.nr_seq_revisao,
             r04.nr_seq_type,
             new_seq_product_requirement_w);

          -- Copia as plataformas do PRS
          for r16 in c16(r04.nr_sequencia) loop
          
            -- Gera sequencia para nova plataforma do PRS
            select nextval('reg_product_req_plat_seq')
              into STRICT new_seq_plataform_pr_w
;

            -- Copia as funcoes do PRS (REG_FUNCAO_PR)
            insert into reg_product_req_plat(ds_nome,
               dt_atualizacao,
               dt_atualizacao_nrec,
               ie_situacao,
               nm_usuario,
               nm_usuario_nrec,
               nr_seq_product_req,
               nr_sequencia)
            values (r16.ds_nome,
               r16.dt_atualizacao,
               r16.dt_atualizacao_nrec,
               r16.ie_situacao,
               r16.nm_usuario,
               r16.nm_usuario_nrec,
               new_seq_product_requirement_w,
               new_seq_plataform_pr_w);

          end loop;

          -- Copia os casos de teste de PRS
          for r11 in c11(r04.nr_sequencia) loop
          
            -- Gera sequencia para novo caso de teste de PRS
            select nextval('reg_caso_teste_seq')
              into STRICT new_seq_reg_caso_teste_w
;

            insert into reg_caso_teste(cd_ct_id,
               cd_versao,
               ds_descricao,
               ds_motivo_inativacao,
               ds_pre_condicao,
               dt_aprovacao,
               dt_atualizacao,
               dt_atualizacao_nrec,
               dt_inativacao,
               dt_liberacao_vv,
               dt_revisao,
               ie_obrigatorio,
               ie_situacao,
               ie_tipo_documento,
               ie_tipo_execucao,
               ie_tipo_revisao,
               ie_tipo_teste,
               nm_usuario,
               nm_usuario_aprovacao,
               nm_usuario_inativacao,
               nm_usuario_liberacao,
               nm_usuario_nrec,
               nr_seq_agrupador,
               nr_seq_customer,
               nr_seq_estagio,
               nr_seq_feature,
               nr_seq_intencao_uso,
               nr_seq_product,
               nr_seq_revisao,
               nr_seq_test_script,
               nr_sequencia,
               nr_seq_usability_principle,
               nr_tempo_estimado)
            values (r11.cd_ct_id,
               r11.cd_versao,
               r11.ds_descricao,
               r11.ds_motivo_inativacao,
               r11.ds_pre_condicao,
               r11.dt_aprovacao,
               r11.dt_atualizacao,
               r11.dt_atualizacao_nrec,
               r11.dt_inativacao,
               r11.dt_liberacao_vv,
               r11.dt_revisao,
               r11.ie_obrigatorio,
               r11.ie_situacao,
               r11.ie_tipo_documento,
               r11.ie_tipo_execucao,
               r11.ie_tipo_revisao,
               r11.ie_tipo_teste,
               r11.nm_usuario,
               r11.nm_usuario_aprovacao,
               r11.nm_usuario_inativacao,
               r11.nm_usuario_liberacao,
               r11.nm_usuario_nrec,
               r11.nr_seq_agrupador,
               r11.nr_seq_customer,
               r11.nr_seq_estagio,
               r11.nr_seq_feature,
               nr_seq_new_intencao_uso_w,
               new_seq_product_requirement_w,
               r11.nr_seq_revisao,
               r11.nr_seq_test_script,
               new_seq_reg_caso_teste_w,
               r11.nr_seq_usability_principle,
               r11.nr_tempo_estimado);

            -- Copia as acoes dos casos de teste de PRS
            for r12 in c12(r11.nr_sequencia) loop
            
              -- Gera sequencia para nova acao do caso de teste de PRS
              select nextval('reg_acao_teste_seq')
                into STRICT new_seq_reg_acao_teste_w
;

              insert into reg_acao_teste(cd_versao,
                 ds_funcionalidade,
                 ds_passo,
                 ds_resultado,
                 ds_result_fail,
                 ds_result_pass,
                 dt_atualizacao,
                 dt_atualizacao_nrec,
                 dt_inativacao,
                 ie_situacao,
                 nm_usuario,
                 nm_usuario_inativacao,
                 nm_usuario_nrec,
                 nr_ordenacao,
                 nr_seq_caso_teste,
                 nr_seq_script,
                 nr_sequencia)
              values (r12.cd_versao,
                 r12.ds_funcionalidade,
                 r12.ds_passo,
                 r12.ds_resultado,
                 r12.ds_result_fail,
                 r12.ds_result_pass,
                 r12.dt_atualizacao,
                 r12.dt_atualizacao_nrec,
                 r12.dt_inativacao,
                 r12.ie_situacao,
                 r12.nm_usuario,
                 r12.nm_usuario_inativacao,
                 r12.nm_usuario_nrec,
                 r12.nr_ordenacao,
                 new_seq_reg_caso_teste_w,
                 r12.nr_seq_script,
                 new_seq_reg_acao_teste_w);

            end loop;

            -- Copia os anexos dos casos de teste de PRS
            for r13 in c13(r11.nr_sequencia) loop
            
              -- Gera sequencia para novo anexo do caso de teste de PRS
              select nextval('reg_anexo_teste_seq')
                into STRICT new_seq_reg_anexo_teste_w
;

              -- Insere a copia do anexo do caso de teste de PRS  
              insert into reg_anexo_teste(ds_anexo,
                 dt_atualizacao,
                 dt_atualizacao_nrec,
                 nm_usuario,
                 nm_usuario_nrec,
                 nr_seq_caso_teste,
                 nr_sequencia)
              values (r13.ds_anexo,
                 r13.dt_atualizacao,
                 r13.dt_atualizacao_nrec,
                 r13.nm_usuario,
                 r13.nm_usuario_nrec,
                 new_seq_reg_caso_teste_w,
                 new_seq_reg_anexo_teste_w);

            end loop;

          end loop;

          -- Copia as funcoes do PRS
          for r05 in c05(r04.nr_sequencia) loop
          
            -- Gera sequencia para nova funcao do PRS
            select nextval('reg_funcao_pr_seq')
              into STRICT new_seq_funcao_pr_w
;

            -- Copia as funcoes do PRS (REG_FUNCAO_PR)
            insert into reg_funcao_pr(cd_funcao,
               dt_atualizacao,
               dt_atualizacao_nrec,
               ie_escopo_teste,
               ie_status_ccb,
               nm_usuario,
               nm_usuario_nrec,
               nr_seq_analise_impacto,
               nr_seq_product_req,
               nr_sequencia)
            values (r05.cd_funcao,
               r05.dt_atualizacao,
               r05.dt_atualizacao_nrec,
               r05.ie_escopo_teste,
               r05.ie_status_ccb,
               r05.nm_usuario,
               r05.nm_usuario_nrec,
               r05.nr_seq_analise_impacto,
               new_seq_product_requirement_w,
               new_seq_funcao_pr_w);

          end loop;

          -- Copia os Escopos do PRS
          for r06 in c06(r04.nr_sequencia) loop
          
            -- Gera sequencia para o novo escopo do PRS
            select nextval('reg_escopo_product_req_seq')
              into STRICT new_seq_escopo_product_req_w
;

            -- Insere copia do escopo do PRS
            insert into reg_escopo_product_req(dt_atualizacao,
               dt_atualizacao_nrec,
               ie_status_ccb,
               nm_usuario,
               nm_usuario_nrec,
               nr_seq_analise_impacto,
               nr_seq_escopo,
               nr_seq_product_req,
               nr_sequencia)
            values (r06.dt_atualizacao,
               r06.dt_atualizacao_nrec,
               r06.ie_status_ccb,
               r06.nm_usuario,
               r06.nm_usuario_nrec,
               r06.nr_seq_analise_impacto,
               r06.nr_seq_escopo,
               new_seq_product_requirement_w,
               new_seq_escopo_product_req_w);

          end loop;

          -- Copia as Localidades do PRS
          for r07 in c07(r04.nr_sequencia) loop
          
            -- Gera sequencia para nova localizacao do PRS
            select nextval('reg_product_req_loc_seq')
              into STRICT new_seq_product_req_loc_w
;

            -- Insere copia da localidade do PRS
            insert into reg_product_req_loc(dt_atualizacao,
               dt_atualizacao_nrec,
               ie_status_ccb,
               nm_usuario,
               nm_usuario_nrec,
               nr_seq_analise_impacto,
               nr_seq_product_req,
               nr_seq_reg_loc,
               nr_sequencia)
            values (r07.dt_atualizacao,
               r07.dt_atualizacao_nrec,
               r07.ie_status_ccb,
               r07.nm_usuario,
               r07.nm_usuario_nrec,
               r07.nr_seq_analise_impacto,
               new_seq_product_requirement_w,
               r07.nr_seq_reg_loc,
               new_seq_product_req_loc_w);

          end loop;

        end loop;

        -- Copia os Escopos do URS
        for r08 in c08(r03.nr_sequencia) loop
        
          -- Gera sequencia para nova localizacao do URS
          select nextval('reg_escopo_customer_req_seq')
            into STRICT new_seq_escopo_customer_req_w
;

          -- Insere copia do escopo da URS
          insert into reg_escopo_customer_req(dt_atualizacao,
             dt_atualizacao_nrec,
             ie_status_ccb,
             nm_usuario,
             nm_usuario_nrec,
             nr_customer_req,
             nr_seq_analise_impacto,
             nr_seq_escopo,
             nr_sequencia)
          values (r08.dt_atualizacao,
             r08.dt_atualizacao_nrec,
             r08.ie_status_ccb,
             r08.nm_usuario,
             r08.nm_usuario_nrec,
             new_seq_customer_requirement_w,
             r08.nr_seq_analise_impacto,
             r08.nr_seq_escopo,
             new_seq_escopo_customer_req_w);

        end loop;

        -- Copia as Localidades do URS
        for r09 in c09(r03.nr_sequencia) loop
        
          -- Gera sequencia para nova localizacao do URS
          select nextval('reg_customer_req_loc_seq')
            into STRICT new_seq_pcustomer_req_loc_w
;

          -- Insere copia da localidade da URS
          insert into reg_customer_req_loc(dt_atualizacao,
             dt_atualizacao_nrec,
             ie_status_ccb,
             nm_usuario,
             nm_usuario_nrec,
             nr_seq_analise_impacto,
             nr_seq_customer_req,
             nr_seq_reg_loc,
             nr_sequencia)
          values (r09.dt_atualizacao,
             r09.dt_atualizacao_nrec,
             r09.ie_status_ccb,
             r09.nm_usuario,
             r09.nm_usuario_nrec,
             r09.nr_seq_analise_impacto,
             new_seq_customer_requirement_w,
             r09.nr_seq_reg_loc,
             new_seq_pcustomer_req_loc_w);

        end loop;

      end loop;

    end loop;

  end loop;

  -- Copia as permissoes de acesso na intencao de uso
  insert into reg_permissao(cd_cargo,
     dt_atualizacao,
     dt_atualizacao_nrec,
     dt_fim,
     dt_inicio,
     ie_documento,
     ie_tipo_acao,
     nm_usuario,
     nm_usuario_nrec,
     nm_usuario_permissao,
     nr_seq_intencao_uso,
     nr_sequencia)
    SELECT cd_cargo,
           dt_atualizacao,
           dt_atualizacao_nrec,
           dt_fim,
           dt_inicio,
           ie_documento,
           ie_tipo_acao,
           nm_usuario,
           nm_usuario_nrec,
           nm_usuario_permissao,
           nr_seq_new_intencao_uso_w,
           nextval('reg_permissao_seq')
      from reg_permissao
     where nr_seq_intencao_uso = nr_seq_intencao_uso_p;

  commit;

  -- Habilita trigger de geracao de historico da intencao de uso
  EXECUTE 'alter trigger REG_INTENCAO_USO_AFTER enable';
  -- Habilita trigger de features
  EXECUTE 'alter trigger REG_FEATURES_CUSTOMER_INSERT enable';
  -- Habilita trigger de geracao de ID de URS
  EXECUTE 'alter trigger reg_customer_req_update enable';
  -- Habilita trigger de geracao de ID de CT
  EXECUTE 'alter trigger REG_CASO_TESTE_BEFORE_INSERT enable';
  -- Habilita trigger de geracao de ID de PRS
  EXECUTE 'alter trigger REG_PRODUCT_REQ_UPDATE enable';
  -- Habilita trigger de validacao de URS
  EXECUTE 'alter trigger REG_CUSTOMER_REQ_INSERT enable';
  -- Habilita trigger de validacao de PRS
  EXECUTE 'alter trigger REG_PRODUCT_REQUIREMENT_INSERT enable';

EXCEPTION
  WHEN OTHERS THEN
    -- Habilita trigger de geracao de historico da intencao de uso
    EXECUTE 'alter trigger REG_INTENCAO_USO_AFTER enable';
    -- Habilita trigger de features
    EXECUTE 'alter trigger REG_FEATURES_CUSTOMER_INSERT enable';
    -- Habilita trigger de geracao de ID de URS
    EXECUTE 'alter trigger reg_customer_req_update enable';
    -- Habilita trigger de geracao de ID de CT
    EXECUTE 'alter trigger REG_CASO_TESTE_BEFORE_INSERT enable';
    -- Habilita trigger de geracao de ID de PRS
    EXECUTE 'alter trigger REG_PRODUCT_REQ_UPDATE enable';
    -- Habilita trigger de validacao de URS
    EXECUTE 'alter trigger REG_CUSTOMER_REQ_INSERT enable';
    -- Habilita trigger de validacao de PRS
    EXECUTE 'alter trigger REG_PRODUCT_REQUIREMENT_INSERT enable';

    CALL delete_intencao_uso(nr_seq_new_intencao_uso_w);
    err_msg := SUBSTR(SQLERRM, 1, 120);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE generate_version_product_doc (nr_seq_intencao_uso_p bigint, ds_version_p text) FROM PUBLIC;

