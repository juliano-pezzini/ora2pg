-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_oc_cta_tratar_val_10 ( dados_regra_p pls_tipos_ocor_pck.dados_regra, nr_id_transacao_p pls_oc_cta_selecao_ocor_v.nr_id_transacao%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:  Aplicar a validação das contas cujo beneficiário da autorização (guia) é diferente
do da conta
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[ X]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
-------------------------------------------------------------------------------------------------------------------
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
ds_select_w		varchar(4000);
ds_restricao_w		varchar(1000);
nr_seq_selecao_w	pls_oc_cta_selecao_ocor_v.nr_sequencia%type;
qtde_casou_w		integer;
i			integer;
tb_nr_seq_selecao_w	dbms_sql.number_table;
tb_ie_valido_w		dbms_sql.varchar2_table;
tb_ds_observacao_w	dbms_sql.varchar2_table;
cursor_w		sql_pck.t_cursor;
bind_sql_valor_w	sql_pck.t_dado_bind;
ds_restricao_seg_w	varchar(255);

-- Informações da validação de beneficiário autorização
C01 CURSOR(	nr_seq_oc_cta_comb_p	dados_regra_p.nr_sequencia%type) FOR
SELECT	a.nr_sequencia	nr_seq_validacao,
	a.ie_numero_guia
from	pls_oc_cta_val_benef_autor a
where	a.nr_seq_oc_cta_comb	= nr_seq_oc_cta_comb_p;

BEGIN

-- Deve exisitr informação da regra para executar a validação
if (dados_regra_p.nr_sequencia IS NOT NULL AND dados_regra_p.nr_sequencia::text <> '') then

	-- tratamento em campo auxiliar para identificar posteriormente os registros que foram alterados
	CALL pls_tipos_ocor_pck.atualiza_campo_auxiliar('V', nr_id_transacao_p, null, dados_regra_p);

	tb_nr_seq_selecao_w.delete;
	tb_ds_observacao_w.delete;
	tb_ie_valido_w.delete;
	i := 0;
	-- Buscar a parametrização da validação conforme cadastrado pelos usuarios.
	for	r_C01_w in C01(dados_regra_p.nr_sequencia) loop

		--Limpa a restrição para cada item
		ds_restricao_w := '';
		ds_restricao_seg_w := '';
		-- Verificar qual o número de guia informado na conta deve ser utilizado para buscar a guia.
		-- Guia
		if (r_C01_w.ie_numero_guia = 'G') then

			-- Deve ser verificado o momento no qual a geração da ocorrência será feita. Se for durante a importação de aquivo então
			-- olha para os campos imp, caso contrário para os campos quentes.
			if (dados_regra_p.ie_evento = 'IMP') then

				ds_restricao_w := ' and    guia.cd_guia = conta.cd_guia_imp ';
			else
				ds_restricao_w := ' and    guia.cd_guia = conta.cd_guia ';
			end if;
		-- Guia de referência
		elsif (r_C01_w.ie_numero_guia = 'R') then

			-- Para a guia de referencia não é necessário olhar o evento pois a mesma não possui um campo imp para ser armazenada.
			ds_restricao_w := ' and    guia.cd_guia = conta.cd_guia_ref ';
		-- Guia prestador
		elsif (r_C01_w.ie_numero_guia = 'P') then

			if (dados_regra_p.ie_evento = 'IMP') then

				ds_restricao_w := ' and    guia.cd_guia_prestador = conta.cd_guia_prestador_imp ';
			else
				ds_restricao_w := ' and    guia.cd_guia_prestador = conta.cd_guia_prestador ';
			end if;
		-- Guia ou guia de referencia (Ambos)
		elsif (r_C01_w.ie_numero_guia = 'A') then

			-- Deve ser verificado o momento no qual a geração da ocorrência será feita. Se for durante a importação de aquivo então
			-- olha para os campos imp, caso contrário para os campos quentes.
			if (dados_regra_p.ie_evento = 'IMP') then

				ds_restricao_w := ' and	guia.cd_guia in (conta.cd_guia_imp, conta.cd_guia_ref, conta.cd_guia_prestador_imp) ';
			else
				ds_restricao_w := ' and	guia.cd_guia in (conta.cd_guia, conta.cd_guia_ref, conta.cd_guia_prestador) ';
			end if;
		end if;

		if (dados_regra_p.ie_evento = 'RE') then
			ds_restricao_seg_w := '	and    	guia.nr_seq_segurado <> conta.nr_seq_segurado_prot ';
		else
			ds_restricao_seg_w := '	and    	guia.nr_seq_segurado <> conta.nr_seq_segurado ';
		end if;


		ds_select_w :=	'select sel.nr_sequencia nr_seq_selecao, ' || pls_tipos_ocor_pck.enter_w ||
				'	(select count(1) ' || pls_tipos_ocor_pck.enter_w ||
				'	from  	pls_guia_plano guia ' || pls_tipos_ocor_pck.enter_w ||
				'	where  	guia.ie_status = ''1'' ' || pls_tipos_ocor_pck.enter_w ||
				ds_restricao_seg_w || pls_tipos_ocor_pck.enter_w ||
				ds_restricao_w || ' ) qtde_casou '||pls_tipos_ocor_pck.enter_w ||
				'from  	pls_selecao_ocor_cta sel, ' || pls_tipos_ocor_pck.enter_w ||
				'      	pls_conta_ocor_v conta ' || pls_tipos_ocor_pck.enter_w ||
				'where  sel.nr_id_transacao = :nr_id_transacao ' || pls_tipos_ocor_pck.enter_w ||
				'and    sel.ie_valido = ''S'' ' || pls_tipos_ocor_pck.enter_w ||
				'and    conta.nr_sequencia = sel.nr_seq_conta ';

		bind_sql_valor_w := sql_pck.bind_variable(':nr_id_transacao', nr_id_transacao_p, bind_sql_valor_w);
		bind_sql_valor_w := sql_pck.executa_sql_cursor(ds_select_w, bind_sql_valor_w);

		loop
		fetch	cursor_w
		into	nr_seq_selecao_w, qtde_casou_w;
		EXIT WHEN NOT FOUND; /* apply on cursor_w */

			if (qtde_casou_w > 0) then

				tb_ie_valido_w(i) := 'S';
				tb_ds_observacao_w(i) := null;
				tb_nr_seq_selecao_w(i) := nr_seq_selecao_w;

				if (i >= pls_util_pck.qt_registro_transacao_w) then
					CALL pls_tipos_ocor_pck.gerencia_selecao_validacao(	tb_nr_seq_selecao_w, pls_tipos_ocor_pck.clob_table_vazia, 'SEQ',
											tb_ds_observacao_w, tb_ie_valido_w, nm_usuario_p);
					tb_nr_seq_selecao_w.delete;
					tb_ds_observacao_w.delete;
					tb_ie_valido_w.delete;
					i := 0;
				else
					i := i + 1;
				end if;
			end if;
		end loop;
		close cursor_w;
	end loop; -- C01
	CALL pls_tipos_ocor_pck.gerencia_selecao_validacao(	tb_nr_seq_selecao_w, pls_tipos_ocor_pck.clob_table_vazia, 'SEQ',
							tb_ds_observacao_w, tb_ie_valido_w, nm_usuario_p);
	tb_nr_seq_selecao_w.delete;
	tb_ds_observacao_w.delete;
	tb_ie_valido_w.delete;

	-- seta os registros que serão válidos ou inválidos após o processamento
	CALL pls_tipos_ocor_pck.atualiza_campo_valido('V', nr_id_transacao_p, null, dados_regra_p);
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_oc_cta_tratar_val_10 ( dados_regra_p pls_tipos_ocor_pck.dados_regra, nr_id_transacao_p pls_oc_cta_selecao_ocor_v.nr_id_transacao%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;

