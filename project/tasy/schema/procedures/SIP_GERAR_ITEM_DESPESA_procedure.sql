-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE sip_gerar_item_despesa ( nr_seq_lote_sip_p bigint, nm_usuario_p text) AS $body$
DECLARE


dt_periodo_inicial_w		timestamp;
dt_periodo_final_w		timestamp;
ie_ind_familiar_w		varchar(1);
ie_coletivo_sem_patro_w		varchar(1);
ie_coletivo_com_patro_w		varchar(1);
nr_seq_estrut_proc_w		bigint;
cd_estrutura_sip_w		varchar(40);
ds_estrutura_sip_w		varchar(80);
qt_eventos_proc_w		bigint	:= 0;
vl_despesa_w			double precision	:= 0;
vl_despesa_ww			double precision	:= 0;
vl_glosa_w			double precision	:= 0;
ie_tipo_w			varchar(1);
nr_seq_classif_sup_w		bigint;
cd_estrutura_sup_w		varchar(40);
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
ie_tipo_beneficiario_w		varchar(3);
ie_tipo_plano_w			varchar(3);
ie_expostos_w			varchar(1);
ie_eventos_w			varchar(1);
ie_total_despesa_w		varchar(1);
ie_coparticipacao_w		varchar(1);
ie_seguros_w			varchar(1);
ie_tipo_despesa_w		varchar(3);
ie_tipo_guia_w			varchar(2);
nr_seq_tipo_atend_w		bigint;
cd_tiss_w			varchar(20);
vl_coparticipacao_w		double precision	:= 0;
nr_seq_proc_anexo_ii_w		bigint;

C01 CURSOR FOR
	/* Ambulatorial */

	SELECT	'A',
		'X' cd_estrutura_sip,
		ie_tipo_beneficiario,
		ie_tipo_plano,
		cd_procedimento,
		ie_origem_proced,
		coalesce(sum(c.qt_procedimento),0),
		coalesce(sum(c.vl_liberado),0) vl_despea,
		--nvl(sum(decode(a.ie_tipo_protocolo,'C',c.vl_liberado,'R',c.vl_liquido)),0) vl_despesa,
		coalesce(sum(c.vl_glosa),0) vl_glosa
	from	pls_conta_proc		c,
		pls_conta		b,
		pls_protocolo_conta	a
	where	a.nr_sequencia	= b.nr_seq_protocolo
	and	b.nr_sequencia	= c.nr_seq_conta
	and	a.ie_status	= 3
	and	a.dt_mes_competencia between dt_periodo_inicial_w and fim_dia(dt_periodo_final_w)
	and	pls_obter_se_internado(b.nr_sequencia, 'C')	= 'N'
	and	coalesce(b.ie_tipo_segurado,'B')	= 'B'
	group by
		ie_tipo_beneficiario,
		ie_tipo_plano,
		cd_procedimento,
		ie_origem_proced
	
union

	/* Procedimentos para internações menores de 24 horas*/

	SELECT	'C1',
		'1.04.1' cd_estrutura_sip,
		ie_tipo_beneficiario,
		ie_tipo_plano,
		0 cd_procedimento,
		0 ie_origem_proced,
		0 qt_eventos_proc,
		coalesce(sum(c.vl_liberado),0) vl_despea,
		--nvl(sum(decode(a.ie_tipo_protocolo,'C',c.vl_liberado,'R',c.vl_liquido)),0) vl_despesa,
		coalesce(sum(c.vl_glosa),0) vl_glosa
	from	pls_conta_proc		c,
		pls_conta		b,
		pls_protocolo_conta	a
	where	a.nr_sequencia	= b.nr_seq_protocolo
	and	b.nr_sequencia	= c.nr_seq_conta
	and	a.ie_status	= 3
	and	a.dt_mes_competencia between dt_periodo_inicial_w and fim_dia(dt_periodo_final_w)
	and	coalesce(b.qt_diarias_sip,2)	= 1
	and	pls_obter_se_internado(b.nr_sequencia, 'C')	= 'S'
	and	coalesce(b.ie_tipo_segurado,'B')	= 'B'
	group by
		ie_tipo_beneficiario,
		ie_tipo_plano
	
union

	/* Procedimentos para internações maiores do que 24 horas*/

	select	'C2',
		'1.04.2' cd_estrutura_sip,
		ie_tipo_beneficiario,
		ie_tipo_plano,
		0 cd_procedimento,
		0 ie_origem_proced,
		0 qt_eventos_proc,
		coalesce(sum(c.vl_liberado),0) vl_despea,
		--nvl(sum(decode(a.ie_tipo_protocolo,'C',c.vl_liberado,'R',c.vl_liquido)),0) vl_despesa,
		coalesce(sum(c.vl_glosa),0) vl_glosa
	from	pls_conta_proc		c,
		pls_conta		b,
		pls_protocolo_conta	a
	where	a.nr_sequencia	= b.nr_seq_protocolo
	and	b.nr_sequencia	= c.nr_seq_conta
	and	a.ie_status	= 3
	and	a.dt_mes_competencia between dt_periodo_inicial_w and fim_dia(dt_periodo_final_w)
	and	coalesce(b.qt_diarias_sip,2)	<> 1
	and	pls_obter_se_internado(b.nr_sequencia, 'C')	= 'S'
	and	coalesce(b.ie_tipo_segurado,'B')	= 'B'
	group by
		ie_tipo_beneficiario,
		ie_tipo_plano
	
union

	/* Material ambulatorial */

	select	'MA',
		'1.05' cd_estrutura_sip,
		ie_tipo_beneficiario,
		ie_tipo_plano,
		0 cd_item,
		0 ie_origem_proced,
		0 qt_item,
		coalesce(sum(c.vl_liberado),0) vl_despesa,
		coalesce(sum(c.vl_glosa),0) vl_glosa
	from	pls_conta_mat		c,
		pls_conta		b,
		pls_protocolo_conta	a
	where	a.nr_sequencia	= b.nr_seq_protocolo
	and	b.nr_sequencia	= c.nr_seq_conta
	and	a.ie_status	= 3
	and	a.dt_mes_competencia between dt_periodo_inicial_w and fim_dia(dt_periodo_final_w)
	and	pls_obter_se_internado(b.nr_sequencia, 'C')	= 'N'
		and	coalesce(b.ie_tipo_segurado,'B')	= 'B'
	group by
		ie_tipo_beneficiario,
		ie_tipo_plano
	
union

	/* Material para internações menores de 24 horas*/

	select	'MI1',
		'1.04.1' cd_estrutura_sip,
		ie_tipo_beneficiario,
		ie_tipo_plano,
		0 cd_item,
		0 ie_origem_proced,
		0 qt_item,
		coalesce(sum(c.vl_liberado),0) vl_despesa,
		coalesce(sum(c.vl_glosa),0) vl_glosa
	from	pls_conta_mat		c,
		pls_conta		b,
		pls_protocolo_conta	a
	where	a.nr_sequencia	= b.nr_seq_protocolo
	and	b.nr_sequencia	= c.nr_seq_conta
	and	a.ie_status	= 3
	and	a.dt_mes_competencia between dt_periodo_inicial_w and fim_dia(dt_periodo_final_w)
	and	coalesce(b.qt_diarias_sip,2)	= 1
	and	pls_obter_se_internado(b.nr_sequencia, 'C')	= 'S'
	and	coalesce(b.ie_tipo_segurado,'B')	= 'B'
	group by
		ie_tipo_beneficiario,
		ie_tipo_plano
	
union

	/* Material para internações maiores do que 24 horas*/

	select	'MI2',
		'1.04.2' cd_estrutura_sip,
		ie_tipo_beneficiario,
		ie_tipo_plano,
		0 cd_item,
		0 ie_origem_proced,
		0 qt_item,
		coalesce(sum(c.vl_liberado),0) vl_despesa,
		coalesce(sum(c.vl_glosa),0) vl_glosa
	from	pls_conta_mat		c,
		pls_conta		b,
		pls_protocolo_conta	a
	where	a.nr_sequencia	= b.nr_seq_protocolo
	and	b.nr_sequencia	= c.nr_seq_conta
	and	a.ie_status	= 3
	and	a.dt_mes_competencia between dt_periodo_inicial_w and fim_dia(dt_periodo_final_w)
	and	coalesce(b.qt_diarias_sip,2)	<> 1
	and	pls_obter_se_internado(b.nr_sequencia, 'C')	= 'S'
	and	coalesce(b.ie_tipo_segurado,'B')	= 'B'
	group by
		ie_tipo_beneficiario,
		ie_tipo_plano;


BEGIN

CALL sip_calcular_nr_expostos(nr_seq_lote_sip_p, nm_usuario_p);

begin
select	dt_periodo_inicial,
	coalesce(dt_periodo_final, clock_timestamp()),
	ie_ind_familiar,
	ie_coletivo_sem_patroci,
	ie_coletivo_com_patroci
into STRICT	dt_periodo_inicial_w,
	dt_periodo_final_w,
	ie_ind_familiar_w,
	ie_coletivo_sem_patro_w,
	ie_coletivo_com_patro_w
from	pls_lote_sip
where	nr_sequencia	= nr_seq_lote_sip_p;
exception
	when others then
	ie_ind_familiar_w	:= 'N';
	ie_coletivo_sem_patro_w	:= 'N';
	ie_coletivo_com_patro_w	:= 'N';
	CALL wheb_mensagem_pck.exibir_mensagem_abort('Problema na leitura dos dados do lote SIP (' || nr_seq_lote_sip_p || ')');
end;

/*delete from logxxxxxx_tasy where cd_log = 2008;*/

open C01;
loop
fetch C01 into
	ie_tipo_despesa_w,
	cd_estrutura_sip_w,
	ie_tipo_beneficiario_w,
	ie_tipo_plano_w,
	cd_procedimento_w,
	ie_origem_proced_w,
	qt_eventos_proc_w,
	vl_despesa_w,
	vl_glosa_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	ie_tipo_w		:= 'X';
	/* Para os ambulatoriais deve ser identificado qual a estrutura do SIP que irá se encaixar os valores */

	if (ie_tipo_despesa_w = 'A') then
		/* Obter a estrutura SIP cadastrada para o procedimento, caso não encontre então busca na procedure SIP_OBTER_ESTRUTURA_PROCED */

		select	coalesce(max(cd_estrutura_sip),'X')
		into STRICT	cd_estrutura_sip_w
		from	sip_anexo_ii_procedimento
		where	cd_procedimento		= cd_procedimento_w
		and	ie_origem_proced	= ie_origem_proced_w
		and	nr_seq_lote_sip		= nr_seq_lote_sip_p;
		if (cd_estrutura_sip_w	= 'X') then
			cd_estrutura_sip_w	:= sip_obter_estrutura_proced(cd_procedimento_w, ie_origem_proced_w, 'C');
		end if;
	end if;

	/* Obter dados da estrutura SIP do procedimento */

	begin
	select	coalesce(ds_estrutura,''),
		coalesce(ie_expostos,'S'),
		coalesce(ie_eventos,'S'),
		coalesce(ie_total_despesa,'S'),
		coalesce(ie_coparticipacao,'S'),
		coalesce(ie_seguros,'S'),
		coalesce(ie_tipo,'P'),
		nr_seq_classif_sup
	into STRICT	ds_estrutura_sip_w,
		ie_expostos_w,
		ie_eventos_w,
		ie_total_despesa_w,
		ie_coparticipacao_w,
		ie_seguros_w,
		ie_tipo_w,
		nr_seq_classif_sup_w
	from	sip_estrutura_proc
	where	ie_situacao	= 'A'
	and	cd_estrutura	= cd_estrutura_sip_w;
	exception
		when others then
		ie_tipo_w	:= 'X';
	end;

	if (ie_tipo_despesa_w	= 'C1') then
		select	count(*)
		into STRICT	qt_eventos_proc_w
		from	pls_beneficiario_internado
		where	dt_mesref_protocolo between dt_periodo_inicial_w and dt_periodo_final_w
		and	ie_tipo_beneficiario	= ie_tipo_beneficiario_w
		and	ie_tipo_plano		= ie_tipo_plano_w
		and	coalesce(qt_diarias,2)	= 1;
	elsif (ie_tipo_despesa_w	= 'C2') then
		select	count(*)
		into STRICT	qt_eventos_proc_w
		from	pls_beneficiario_internado
		where	dt_mesref_protocolo between dt_periodo_inicial_w and dt_periodo_final_w
		and	ie_tipo_beneficiario	= ie_tipo_beneficiario_w
		and	ie_tipo_plano		= ie_tipo_plano_w
		and	coalesce(qt_diarias,2)	<> 1;
	end if;

	/* Tratamento feito para verificar se o item não possui valor de despesa então não pode ter Nº de eventos, isso porque não encaixou em nenhuma regra do SIP  das contas comtábeis*/

	if (vl_despesa_w	= 0) then
		qt_eventos_proc_w	:= 0;
	end if;

	select	coalesce(max(nr_sequencia),0)
	into STRICT	nr_seq_proc_anexo_ii_w
	from	sip_anexo_ii_procedimento
	where	nr_seq_lote_sip		= nr_seq_lote_sip_p
	and	cd_procedimento		= cd_procedimento_w
	and	ie_origem_proced	= ie_origem_proced_w
	and	cd_estrutura_sip	= cd_estrutura_sip_w;

	/* Gravar os procedimentos lidos em uma tabela separada */

	if (nr_seq_proc_anexo_ii_w	= 0) then
		begin
		insert into sip_anexo_ii_procedimento(nr_sequencia, nr_seq_lote_sip, cd_procedimento,
			ie_origem_proced, dt_atualizacao, nm_usuario,
			dt_atualizacao_nrec, nm_usuario_nrec, cd_estrutura_sip,
			qt_procedimento)
		values (	nextval('sip_anexo_ii_procedimento_seq'), nr_seq_lote_sip_p, cd_procedimento_w,
			ie_origem_proced_w, clock_timestamp(), nm_usuario_p,
			clock_timestamp(), nm_usuario_p, cd_estrutura_sip_w,
			qt_eventos_proc_w);
		exception
			when others then
			cd_procedimento_w	:= cd_procedimento_w;
		end;
	else
		update	sip_anexo_ii_procedimento
		set	qt_procedimento	= qt_procedimento + qt_eventos_proc_w
		where	nr_sequencia	= nr_seq_proc_anexo_ii_w;
	end if;

	/* Gravar os dados lidos */

	CALL sip_gravar_item_despesa(null, null, null,
			cd_estrutura_sip_w, 0, qt_eventos_proc_w,
			vl_despesa_w, vl_coparticipacao_w, 0,
			nr_seq_lote_sip_p, ie_tipo_plano_w, ds_estrutura_sip_w,
			ie_tipo_beneficiario_w, ie_expostos_w, ie_eventos_w,
			ie_total_despesa_w, ie_coparticipacao_w, ie_seguros_w,
			0, ie_tipo_despesa_w, nm_usuario_p,
			0, 0, 0);
	/* Log de progresso da geração dos dados do SIP*/

	/*insert into logxxxx_tasy
		(dt_atualizacao, nm_usuario, cd_log,
		ds_log)
	values (sysdate, nm_usuario_p, 2008,
		ie_tipo_plano_w || ' - ' || ie_tipo_beneficiario_w);*/
	commit;
	/* Controle da barra de progressão */

	CALL gravar_processo_longo('Cursor C01','SIP_GERAR_ITEM_DESPESA',-1);
	end;
end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE sip_gerar_item_despesa ( nr_seq_lote_sip_p bigint, nm_usuario_p text) FROM PUBLIC;

