-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE copiar_man_grupo_trab_estab ( cd_estab_origem_p bigint, cd_estab_destino_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_sequencia_w				bigint;
cd_empresa_w				smallint;

c01 CURSOR FOR
SELECT	a.nr_sequencia,
	a.ds_grupo_trabalho,
	a.nr_seq_operacao,
	a.ie_situacao,
	a.qt_tempo_meta,
	a.ie_periodo_meta,
	a.nr_seq_escala_classif,
	cd_exp_grupo_trabalho
from	man_grupo_trabalho a
where	a.cd_estabelecimento	= cd_estab_origem_p;

vet01	C01%RowType;

c02 CURSOR FOR
SELECT	a.nr_sequencia,
	a.ds_causa,
	a.ie_situacao
from	man_causa_dano a
where	a.cd_estabelecimento	= cd_estab_origem_p
and	a.nr_seq_grupo_trab	= vet01.nr_sequencia;

vet02	C02%RowType;


BEGIN
select	max(cd_empresa)
into STRICT	cd_empresa_w
from	estabelecimento
where	cd_estabelecimento = cd_estab_destino_p;

open C01;
loop
fetch C01 into
	vet01;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	select	nextval('man_grupo_trabalho_seq')
	into STRICT	nr_sequencia_w
	;

	insert into man_grupo_trabalho(
		nr_sequencia,
		ds_grupo_trabalho,
		cd_estabelecimento,
		dt_atualizacao,
		nm_usuario,
		ie_situacao,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_seq_operacao,
		qt_tempo_meta,
		ie_periodo_meta,
		nr_seq_escala_classif,
		cd_empresa,
		cd_exp_grupo_trabalho)
	values ( nr_sequencia_w,
		vet01.ds_grupo_trabalho,
		cd_estab_destino_p,
		clock_timestamp(),
		nm_usuario_p,
		vet01.ie_situacao,
		clock_timestamp(),
		nm_usuario_p,
		vet01.nr_seq_operacao,
		vet01.qt_tempo_meta,
		vet01.ie_periodo_meta,
		vet01.nr_seq_escala_classif,
		cd_empresa_w,
		vet01.cd_exp_grupo_trabalho);

	/*Usuários */

	insert into man_grupo_trab_usuario(
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_seq_grupo_trab,
		nm_usuario_param)
	SELECT	clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		nr_sequencia_w,
		nm_usuario_param
	from	man_grupo_trab_usuario
	where	nr_seq_grupo_trab = vet01.nr_sequencia;

	/*Funções da manutenção*/

	insert into man_tipo_funcao(
		nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_seq_grupo_trab,
		cd_cargo,
		ds_funcao,
		ie_situacao)
	SELECT	nextval('man_tipo_funcao_seq'),
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		nr_sequencia_w,
		cd_cargo,
		ds_funcao,
		ie_situacao
	from	man_tipo_funcao
	where	nr_seq_grupo_trab = vet01.nr_sequencia;

	/* Tipo de Solução */

	insert into man_tipo_solucao(
		nr_sequencia,
		nm_usuario,
		dt_atualizacao,
		nr_seq_grupo_trab,
		ds_solucao,
		ie_situacao)
	SELECT	nextval('man_tipo_solucao_seq'),
		nm_usuario_p,
		clock_timestamp(),
		nr_sequencia_w,
		ds_solucao,
		ie_situacao
	from	man_tipo_solucao
	where	nr_seq_grupo_trab	= vet01.nr_sequencia;

	open C02;
	loop
	fetch C02 into
		vet02;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin

		insert into man_causa_dano(
			nr_sequencia,
			cd_estabelecimento,
			dt_atualizacao,
			nm_usuario,
			ds_causa,
			ie_situacao,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_grupo_trab,
			cd_empresa)
		values (	nextval('man_causa_dano_seq'),
			cd_estab_destino_p,
			clock_timestamp(),
			nm_usuario_p,
			vet02.ds_causa,
			vet02.ie_situacao,
			clock_timestamp(),
			nm_usuario_p,
			nr_sequencia_w,
			cd_empresa_w);
		end;
	end loop;
	close C02;

	end;
end loop;
close C01;

/*Copiar as Causas de dano que não possuem Grupo de trabalho */

insert into man_causa_dano(
	nr_sequencia,
	cd_estabelecimento,
	dt_atualizacao,
	nm_usuario,
	ds_causa,
	ie_situacao,
	dt_atualizacao_nrec,
	nm_usuario_nrec,
	nr_seq_grupo_trab)
SELECT	nextval('man_causa_dano_seq'),
	cd_estab_destino_p,
	clock_timestamp(),
	nm_usuario_p,
	ds_causa,
	ie_situacao,
	clock_timestamp(),
	nm_usuario_p,
	null
from	man_causa_dano
where	cd_estabelecimento	= cd_estab_origem_p
and	coalesce(nr_seq_grupo_trab::text, '') = '';

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE copiar_man_grupo_trab_estab ( cd_estab_origem_p bigint, cd_estab_destino_p bigint, nm_usuario_p text) FROM PUBLIC;

