-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_atualizar_mat_med_solic ( nr_seq_solic_p pls_solic_lib_mat_med.nr_sequencia%type, ie_opcao_p text, nm_usuario_p usuario.nm_usuario%type, ie_commit_p text, ds_observacao_p text default null) AS $body$
DECLARE

				 
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
Finalidade: Atualiza materiais\medicamentos(pls_solic_lib_mat_med) 
------------------------------------------------------------------------------------------------------------------- 
Locais de chamada direta: 
[ X ] Objetos do dicionário [ ] Tasy (Delphi/Java) [ ] Portal [ ] Relatórios [ ] Outros: 
 ------------------------------------------------------------------------------------------------------------------ 
Pontos de atenção: 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
 
				 
/* 
IE_OPCAO_P 
 A - Aprovado 
 R - Reprovado 
 C - Cancelado 
 J - Solicitação de justificativa 
 D - Desfazer solicitação de justificativa 
 
*/
 
cd_guia_w			pls_conta.cd_guia%type;
dt_liberacao_w			pls_solic_lib_mat_med.dt_liberacao%type := null;
ie_status_w			pls_solic_lib_mat_med.ie_status%type;
ie_origem_solicitacao_w		pls_solic_lib_mat_med.ie_origem_solicitacao%type;
nr_seq_material_w		pls_solic_lib_mat_med.nr_seq_material%type;
nr_seq_guia_w			pls_solic_lib_mat_med.nr_seq_guia%type;
nr_seq_prest_fornec_w		pls_solic_lib_mat_med.nr_seq_prest_fornec%type;
nr_seq_segurado_w		pls_solic_lib_mat_med.nr_seq_segurado%type;
nr_seq_conta_w			pls_conta.nr_sequencia%type;
qt_reg_w			integer;
vl_unit_aprovado_w		pls_solic_lib_mat_med.vl_unit_aprovado%type;
qt_mat_guia_w			integer;
ds_observacao_w			varchar(255);

 

BEGIN 
/* jtonon - OS 612385 - Linha adicionada para não acionar a trigger que impedi inclusão de itens em guias já autorizadas */
 
dbms_application_info.SET_ACTION('INCMATMED');
 
--Obtém informações da solicitação 
select	nr_seq_material, 
	nr_seq_guia, 
	nr_seq_prest_fornec, 
	substr(pls_obter_cd_seq_guia(nr_seq_guia,''),1,20), 
	nr_seq_segurado, 
	ie_origem_solicitacao, 
	vl_unit_aprovado 
into STRICT	nr_seq_material_w, 
	nr_seq_guia_w, 
	nr_seq_prest_fornec_w, 
	cd_guia_w, 
	nr_seq_segurado_w, 
	ie_origem_solicitacao_w, 
	vl_unit_aprovado_w 
from	pls_solic_lib_mat_med 
where	nr_sequencia	= nr_seq_solic_p;
 
if (ie_opcao_p	= 'A') then	 
	ie_status_w := 3;	
 
	select	count(1) 
	into STRICT	qt_reg_w 
	from	pls_conta 
	where	((ie_tipo_guia <> 4 and cd_guia_referencia = cd_guia_w) 
	or (ie_tipo_guia = 4 and cd_guia = cd_guia_w)) 
	and	nr_seq_segurado	= nr_seq_segurado_w 
	and (ie_estagio_complemento not in (1,4) or coalesce(ie_estagio_complemento::text, '') = '') 
	and	ie_status not in ('C','U');
	 
	if (qt_reg_w = 0) or (ie_origem_solicitacao_w = 2) then 
		dt_liberacao_w := clock_timestamp();
		 
		select	count(1) 
		into STRICT	qt_mat_guia_w 
		from	pls_guia_plano_mat 
		where	nr_seq_guia	= nr_seq_guia_w 
		and	nr_seq_material	= nr_seq_material_w;
		 
		if (qt_mat_guia_w = 0) then 
			insert	into pls_guia_plano_mat(nr_sequencia, dt_atualizacao, nm_usuario, 
				 nr_seq_material, qt_solicitada, qt_autorizada, 
				 ie_status, dt_liberacao, nm_usuario_liberacao, 
				 nr_seq_guia, nr_seq_prest_fornec) 
			values (nextval('pls_guia_plano_mat_seq'), clock_timestamp(), nm_usuario_p, 
				 nr_seq_material_w, 1, 1, 
				 'L', clock_timestamp(),nm_usuario_p, 
				 nr_seq_guia_w, nr_seq_prest_fornec_w);
		else 
			ds_observacao_w	:= substr('O material ' || to_char(nr_seq_material_w) || ' - ' || pls_obter_desc_material(nr_seq_material_w) || ' não foi inserido pois já existe um material com este mesmo código na guia.',1,255);
			CALL pls_guia_gravar_historico(nr_seq_guia_w, 2, ds_observacao_w, null, nm_usuario_p);
			CALL pls_gravar_hist_solic(nr_seq_solic_p, 7, ds_observacao_w, nm_usuario_p);
		end if;
		 
		select	max(nr_sequencia) 
		into STRICT	nr_seq_conta_w 
		from	pls_conta 
		where	((ie_tipo_guia <> 4 and cd_guia_referencia = cd_guia_w) 
		or (ie_tipo_guia = 4 and cd_guia = cd_guia_w)) 
		and	nr_seq_segurado	= nr_seq_segurado_w 
		and (ie_estagio_complemento in (1,4)) 
		and	coalesce(dt_lib_complemento::text, '') = '';
		 
		if (coalesce(nr_seq_conta_w,0) > 0) then 
			 
			insert into pls_conta_mat( 
				nr_sequencia, dt_atualizacao, nm_usuario, 
				nr_seq_conta, nr_seq_material, ie_tipo_despesa, 
				qt_material_imp, ie_estagio_complemento, ie_situacao, 
				ie_status, dt_atualizacao_nrec, nm_usuario_nrec, 
				ie_alterado_prestador, nr_seq_prest_fornec, dt_atendimento, 
				ie_valor_informado, vl_unitario_imp, vl_material_imp) 
			values (nextval('pls_conta_mat_seq'), clock_timestamp(), nm_usuario_p, 
				nr_seq_conta_w, nr_seq_material_w, 2, 
				1, 2, 'I', 
				'U', clock_timestamp(), nm_usuario_p, 
				'I', nr_seq_prest_fornec_w, clock_timestamp(), 
				'N', vl_unit_aprovado_w, vl_unit_aprovado_w);		
		end if;		
	else		 
		CALL wheb_mensagem_pck.exibir_mensagem_abort(191015);
		--(-20011,'Guia já foi apresentada, paga e/ou faturada. A solicitação mat/med não pode ser aprovada! '||'#@#@'); 
	end if;
	 
elsif (ie_opcao_p	= 'R') then 
	ie_status_w := 4;	
	dt_liberacao_w := clock_timestamp();
elsif (ie_opcao_p	= 'J') then 
	ie_status_w := 2;
elsif (ie_opcao_p	= 'C') then	 
	ie_status_w := 5;
elsif (ie_opcao_p	= 'D') then	 
	ie_status_w := 1;
end if;
 
update	pls_solic_lib_mat_med 
set	ie_status	= ie_status_w, 
	dt_atualizacao	= clock_timestamp(), 
	nm_usuario	= nm_usuario_p, 
	dt_liberacao	= dt_liberacao_w 
where	nr_sequencia	= nr_seq_solic_p;
 
if (ie_opcao_p	= 'A' or ie_opcao_p = 'R' or ie_opcao_p = 'C')then 
	update	pls_solic_lib_mat_med	 
	set	nm_usuario_liberacao = nm_usuario_p 
	where	nr_sequencia	= nr_seq_solic_p;
end if;
 
if 	(ie_opcao_p = 'R' AND ds_observacao_p IS NOT NULL AND ds_observacao_p::text <> '') then 
		CALL pls_gravar_hist_solic(nr_seq_solic_p, 6, ds_observacao_p, nm_usuario_p);
	end if;
 
CALL pls_enviar_email_autorizacao(nr_seq_guia_w,3,null,nm_usuario_p,nr_seq_solic_p);
if (coalesce(ie_commit_p,'S') = 'S') then 
	commit;
end if;
 
dbms_application_info.SET_ACTION('');
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_atualizar_mat_med_solic ( nr_seq_solic_p pls_solic_lib_mat_med.nr_sequencia%type, ie_opcao_p text, nm_usuario_p usuario.nm_usuario%type, ie_commit_p text, ds_observacao_p text default null) FROM PUBLIC;

