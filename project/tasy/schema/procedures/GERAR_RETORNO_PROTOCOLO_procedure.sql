-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_retorno_protocolo ( nr_seq_retorno_p bigint, nr_seq_protocolo_p bigint, nr_seq_prot_adic_p text, ie_liberar_repasse_p text, ie_analisada_p text, ie_restringir_data_p text, nr_convenio_p bigint, nm_usuario_p text, ie_gerar_com_retorno_p text, ds_mensagem_p INOUT text) AS $body$
DECLARE


cd_convenio_w					bigint;
cd_estabelecimento_w			bigint;
		
nr_interno_conta_w				bigint;
cd_autorizacao_w				varchar(255);
vl_guia_w						double precision;
		
nr_sequencia_w					bigint;
vl_pago_w						double precision;
vl_glosado_w					double precision;
		
dt_inicial_w					timestamp;
dt_final_w						timestamp;
		
cd_convenio_retorno_w			bigint;
ie_tipo_convenio_w				bigint;
		
vl_conta_w						double precision;
vl_saldo_titulo_w				double precision;
qt_itens_retorno_w				bigint;
		
ie_primeiro_item_w				varchar(255);
nr_seq_protocolo_w				bigint;
ds_mensagem_w					varchar(4000);
vl_glosa_grg_w					double precision;
vl_pago_grg_w					double precision;
nr_titulo_w						bigint;
		
ds_lista_informacao_w			varchar(4000);
ie_restringe_convenio_w			varchar(255);
qt_tam_lista_w					bigint;
qt_pos_virgula_w				bigint;
nr_protocolo_w					varchar(255);
ie_demontrativo_w				varchar(255);
nr_demontrativo_w				varchar(255);
ie_libera_repasse_w				varchar(5);

ie_contas_canc_estornadas_w		varchar(50);
nr_seq_lote_prot_w				bigint;
ie_permitecontasoutroretorno_w	varchar(1);
ie_estab_financ_w				varchar(10);
vl_desconto_w					double precision;
cd_estab_logado_w				estabelecimento.cd_estabelecimento%type := wheb_usuario_pck.get_cd_estabelecimento;
nr_mes_ant_w			bigint;
vl_total_guias_w		double precision;
vl_saldo_guia_w			double precision;

C01 CURSOR FOR
SELECT	b.nr_interno_conta,
	b.cd_autorizacao,
	b.vl_guia,
	a.vl_conta,
	(obter_titulo_conta_guia(a.nr_interno_conta,b.cd_autorizacao,nr_seq_retorno_p,a.nr_seq_protocolo))::numeric ,
	obter_saldo_conpaci(b.nr_interno_conta,b.cd_autorizacao) vl_saldo_guia
from	conta_paciente_guia b,
	conta_paciente a
where	not exists (SELECT	1
	from	convenio_retorno_item x
	where	coalesce(x.cd_autorizacao,obter_desc_expressao(622834)) = coalesce(b.cd_autorizacao,obter_desc_expressao(622834))
	and	x.nr_interno_conta	= b.nr_interno_conta
	and	x.nr_seq_retorno	= nr_seq_retorno_p)
and	a.nr_interno_conta	= b.nr_interno_conta
and	a.ie_status_acerto	= 2
--and	a.ie_cancelamento	is null OS 2190848
and	a.nr_seq_protocolo	= somente_numero(nr_protocolo_w)
and	((a.cd_estabelecimento	= cd_estab_logado_w) or (ie_estab_financ_w	= 'S' and obter_estab_financeiro(a.cd_estabelecimento) = cd_estab_logado_w))
and	coalesce(a.nr_conta_convenio,0) = CASE WHEN coalesce(nr_convenio_p,0)=0 THEN  coalesce(a.nr_conta_convenio,0)  ELSE nr_convenio_p END
and	((ie_restringir_data_p = 'N')	or (a.dt_mesano_referencia  between coalesce(dt_inicial_w, clock_timestamp() + interval '1 days') and coalesce(dt_final_w, clock_timestamp() - interval '1 days')))
and (coalesce(a.ie_cancelamento, '1') not in ('C', 'E') or (coalesce(ie_contas_canc_estornadas_w,'S') in ('C','S')));


BEGIN

if	coalesce(nr_seq_protocolo_p,0) <> 0 then
	ds_lista_informacao_w	:= ds_lista_informacao_w || nr_seq_protocolo_p || ',';
end if;

ds_lista_informacao_w	:= ds_lista_informacao_w || nr_seq_prot_adic_p || ',';

ds_lista_informacao_w := replace(ds_lista_informacao_w,';',',');

ie_permitecontasoutroretorno_w := obter_param_usuario(27, 100, obter_perfil_ativo, nm_usuario_p, cd_estab_logado_w, ie_permitecontasoutroretorno_w);
ie_estab_financ_w := obter_param_usuario(27, 277, obter_perfil_ativo, nm_usuario_p, cd_estab_logado_w, ie_estab_financ_w);

while	(ds_lista_informacao_w IS NOT NULL AND ds_lista_informacao_w::text <> '') loop
	begin
	qt_tam_lista_w		:= length(ds_lista_informacao_w);
	qt_pos_virgula_w	:= position(',' in ds_lista_informacao_w);
	nr_protocolo_w		:= substr(ds_lista_informacao_w,1,qt_pos_virgula_w - 1);

	if (qt_pos_virgula_w <> 0) then
		ds_lista_informacao_w	:= substr(ds_lista_informacao_w,(qt_pos_virgula_w + 1),qt_tam_lista_w);
	end if;

	ie_primeiro_item_w := 'S';
	
	begin
		nr_seq_protocolo_w := Somente_Numero(nr_protocolo_w);
	exception
	when others then
		ds_mensagem_p := wheb_mensagem_pck.get_texto(900806,'NR_SEQ_PROTOCOLO_W='||nr_protocolo_w);
		return;
	end;

	select	max(cd_estabelecimento),
		max(cd_convenio),
		max(obter_tipo_convenio(cd_convenio)),
		max(nr_demonst_pagto)
	into STRICT	cd_estabelecimento_w,
		cd_convenio_w,
		ie_tipo_convenio_w,
		nr_demontrativo_w
	from	protocolo_convenio
	where	nr_seq_protocolo	= nr_protocolo_w;

	select	dt_inicial,
		dt_final,
		cd_convenio
	into STRICT	dt_inicial_w,
		dt_final_w,
		cd_convenio_retorno_w
	from	convenio_retorno
	where	nr_sequencia	= nr_seq_retorno_p;

	ie_restringe_convenio_w := obter_param_usuario(27, 70, obter_perfil_ativo, nm_usuario_p, cd_estab_logado_w, ie_restringe_convenio_w);

	if (cd_convenio_retorno_w <> cd_convenio_w) and (coalesce(ie_restringe_convenio_w, 'N') = 'N') then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(190393,'NR_SEQ_PROTOCOLO_W='||NR_SEQ_PROTOCOLO_W);
	end if;

	ds_mensagem_w	:= null;

	nr_mes_ant_w := obter_param_usuario(27, 9, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, nr_mes_ant_w);	
	ie_contas_canc_estornadas_w := obter_param_usuario(27, 150, obter_perfil_ativo, nm_usuario_p, cd_estab_logado_w, ie_contas_canc_estornadas_w);
	ie_demontrativo_w := obter_param_usuario(27, 246, obter_perfil_ativo, nm_usuario_p, cd_estab_logado_w, ie_demontrativo_w);

	if (coalesce(ie_demontrativo_w, 'N') = 'N') then
		nr_demontrativo_w := null;
	end if;
	
	select	sum(vl_saldo_guia)
	into STRICT	vl_total_guias_w
	from (SELECT	obter_saldo_conpaci(b.nr_interno_conta,b.cd_autorizacao) vl_saldo_guia,
			b.vl_guia
		from	conta_paciente_guia b,
			conta_paciente a
		where	coalesce(b.dt_convenio,clock_timestamp())	>= clock_timestamp() - coalesce(nr_mes_ant_w,3) * 30
		and	a.nr_interno_conta	= b.nr_interno_conta
		and	coalesce(a.nr_conta_convenio,0)	= CASE WHEN coalesce(nr_convenio_p,0)=0 THEN  coalesce(a.nr_conta_convenio,0)  ELSE nr_convenio_p END 
		and	a.ie_status_acerto	= 2
		and	coalesce(a.ie_cancelamento::text, '') = ''
		and	a.cd_estabelecimento	= cd_estabelecimento_w
		and	a.nr_seq_protocolo	= nr_seq_protocolo_w) alias10
	where (vl_saldo_guia > 0) or (vl_guia < 0 and ((coalesce(vl_guia,0) - coalesce(vl_saldo_guia,0)) = 0));	

	open c01;
	loop
	fetch c01 into
		nr_interno_conta_w,
		cd_autorizacao_w,
		vl_guia_w,
		vl_conta_w,
		nr_titulo_w,
		vl_saldo_guia_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
	
		if	(((vl_saldo_guia_w > 0) or ((vl_guia_w < 0) and ((coalesce(vl_guia_w,0) - coalesce(vl_saldo_guia_w,0)) = 0))) and (coalesce(vl_total_guias_w,0) <> 0)
		or (ie_tipo_convenio_w in ('1','3','6'))) then
			
			if (coalesce(nr_titulo_w,0) = 0) then
				begin
				select	coalesce(max(NR_SEQ_LOTE_PROTOCOLO),0)	
				into STRICT	nr_seq_lote_prot_w
				from	protocolo_convenio
				where	nr_seq_protocolo = nr_seq_protocolo_w;
				
				
				select	max(nr_titulo)
				into STRICT	nr_titulo_w
				from	titulo_receber
				where	nr_seq_lote_prot = nr_seq_lote_prot_w;
				
				end;
			end if;
				

			if (ie_tipo_convenio_w = 3) and (vl_guia_w < vl_conta_w) then
				CALL gerar_conta_paciente_guia(nr_interno_conta_w, 2);
				CALL atualizar_resumo_conta(nr_interno_conta_w, 2);
			end if;

			select	coalesce(sum(vl_pago),0),
				coalesce(sum(vl_glosado),0),
				coalesce(sum(vl_desconto),0)
			into STRICT	vl_pago_w,
				vl_glosado_w,
				vl_desconto_w
			from	convenio_retorno_item b,
				convenio_retorno a
			where	a.nr_sequencia		= b.nr_seq_retorno
			and	((a.cd_convenio		= cd_convenio_w) or (a.cd_convenio		= cd_convenio_retorno_w and coalesce(ie_restringe_convenio_w, 'N') = 'S'))
			and	a.cd_estabelecimento	= cd_estabelecimento_w
			and	b.nr_interno_conta	= nr_interno_conta_w
			and	b.cd_autorizacao	= cd_autorizacao_w;

			vl_pago_grg_w	:= coalesce((obter_valor_guia_grg(nr_interno_conta_w, cd_autorizacao_w, 'VP'))::numeric ,0);
			vl_glosa_grg_w	:= coalesce((obter_valor_guia_grg(nr_interno_conta_w, cd_autorizacao_w, 'VG'))::numeric ,0);

			select	count(*)
			into STRICT	qt_itens_retorno_w
			from	convenio_retorno_item b,
				convenio_retorno a
			where	a.nr_sequencia		= b.nr_seq_retorno
			and	((a.cd_convenio		= cd_convenio_w) or (a.cd_convenio		= cd_convenio_retorno_w and coalesce(ie_restringe_convenio_w, 'N') = 'S'))
			and	a.cd_estabelecimento	= cd_estabelecimento_w
			and	b.nr_interno_conta	= nr_interno_conta_w
			and	b.cd_autorizacao	= cd_autorizacao_w;


			if (qt_itens_retorno_w = 0) or (ie_gerar_com_retorno_p = 'S') then

				select	coalesce(sum(vl_saldo_titulo),0)
				into STRICT	vl_saldo_titulo_w
				from (SELECT	coalesce(vl_saldo_titulo,0) vl_saldo_titulo
					from	titulo_receber
					where (nr_documento IS NOT NULL AND nr_documento::text <> '')
					and	nr_documento <> nr_interno_conta_w
					and	nr_interno_conta = nr_interno_conta_w
					
union

					SELECT	coalesce(vl_saldo_titulo,0) vl_saldo_titulo
					from	titulo_receber
					where	(nr_interno_conta_w IS NOT NULL AND nr_interno_conta_w::text <> '')
					and	((nr_documento = nr_interno_conta_w) or (coalesce(nr_documento::text, '') = ''))
					and	nr_interno_conta = nr_interno_conta_w
					
union

					select	coalesce(vl_saldo_titulo,0) vl_saldo_titulo
					from	titulo_receber
					where	nr_seq_protocolo = nr_seq_protocolo_w
					and	coalesce(nr_interno_conta::text, '') = '') alias14;

				if (vl_saldo_titulo_w = 0) and (length(ds_mensagem_w) < 3980) then

					if (ie_primeiro_item_w =  'S') then
						ds_mensagem_w	:= wheb_mensagem_pck.get_texto(304128,'cd_autorizacao=' || cd_autorizacao_w);							
					else
						ds_mensagem_w	:= ds_mensagem_w || ',' || cd_autorizacao_w;
					end if;

					ie_primeiro_item_w := 'N';
				end if;
			end if;

			if	(((vl_pago_w + vl_glosado_w + vl_pago_grg_w + vl_glosa_grg_w + vl_desconto_w) < vl_guia_w) or
				((vl_guia_w < 0) and ((vl_pago_w + vl_glosado_w) = 0)) or (ie_gerar_com_retorno_p = 'S')) then

				select	max(a.ie_libera_repasse)
				into STRICT	ie_libera_repasse_w
				from	regra_campo_lib_rep a
				where	a.cd_estabelecimento		= cd_estab_logado_w
				and	coalesce(a.cd_convenio,cd_convenio_w) = cd_convenio_w
				and	a.ie_regra	= 1;

				if (coalesce(ie_permitecontasoutroretorno_w,'S') = 'N')	and (obter_conta_outro_retorno(nr_seq_retorno_p,nr_interno_conta_w,cd_autorizacao_w) <> 0) then
					CALL wheb_mensagem_pck.exibir_mensagem_abort(255816);
				end if;	

                if (ie_contas_canc_estornadas_w = 'C') then
                    vl_glosado_w := vl_guia_w;
                end if;
				
				select	nextval('convenio_retorno_item_seq')
				into STRICT	nr_sequencia_w
				;

				insert into convenio_retorno_item(nr_sequencia,
					 nr_seq_retorno,
					 vl_pago,
					 vl_glosado,
					 dt_atualizacao,
					 nm_usuario,
					 ie_glosa,
					 nr_interno_conta,
					 cd_autorizacao,
					 vl_adicional,
					 vl_amenor,
					 ie_libera_repasse,
					 ie_analisada,
					 nr_titulo,
					 nr_demonst_pagto,
					 vl_guia)
				values (nr_sequencia_w,
					   nr_seq_retorno_p,
					   vl_guia_w - vl_pago_w - vl_glosado_w - vl_glosa_grg_w - vl_pago_grg_w - vl_desconto_w,
					   CASE WHEN ie_contas_canc_estornadas_w='C' THEN  vl_glosado_w  ELSE 0 END ,
					   clock_timestamp(),
					   nm_usuario_p,
					   'N',
					   nr_interno_conta_w,
					   cd_autorizacao_w,
					   0,
					   0,
					   coalesce(ie_libera_repasse_w,ie_liberar_repasse_p),
					   ie_analisada_p,
					   nr_titulo_w,
					   nr_demontrativo_w,
					   vl_guia_w);
					
			elsif 	(not ((vl_saldo_guia_w > 0) or ((vl_guia_w < 0) and ((coalesce(vl_guia_w,0) - coalesce(vl_saldo_guia_w,0)) = 0))) and (coalesce(vl_total_guias_w,0) <> 0)) then
				if (ie_primeiro_item_w =  'S') then
					ds_mensagem_w	:= substr(wheb_mensagem_pck.get_texto(304128,'cd_autorizacao=' || cd_autorizacao_w),1,4000);							
				else
					ds_mensagem_w	:= substr(ds_mensagem_w || ',' || cd_autorizacao_w,1,4000);
				end if;

				ie_primeiro_item_w := 'N';
			end if;
		
		elsif 	(not ((vl_saldo_guia_w > 0) or ((vl_guia_w < 0) and ((coalesce(vl_guia_w,0) - coalesce(vl_saldo_guia_w,0)) = 0))) and (coalesce(vl_total_guias_w,0) <> 0)) then
			if (ie_primeiro_item_w =  'S') then
				ds_mensagem_w	:= substr(wheb_mensagem_pck.get_texto(304128,'cd_autorizacao=' || cd_autorizacao_w),1,4000);							
			else
				ds_mensagem_w	:= substr(ds_mensagem_w || ',' || cd_autorizacao_w,1,4000);
			end if;

			ie_primeiro_item_w := 'N';
		end if;
	end loop;
	close c01;
	ds_mensagem_p	:= substr(ds_mensagem_w,1,255);

	end;
end loop;

commit;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_retorno_protocolo ( nr_seq_retorno_p bigint, nr_seq_protocolo_p bigint, nr_seq_prot_adic_p text, ie_liberar_repasse_p text, ie_analisada_p text, ie_restringir_data_p text, nr_convenio_p bigint, nm_usuario_p text, ie_gerar_com_retorno_p text, ds_mensagem_p INOUT text) FROM PUBLIC;

