-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE alterar_status_solucao_adep ( ie_tipo_solucao_p bigint, nr_prescricao_p bigint, nr_seq_solucao_p bigint, ie_alteracao_p bigint, ds_observacao_p text, ds_justificativa_p text, nr_seq_motivo_p bigint, nr_seq_motivo_susp_p bigint, nr_prescricoes_p text, qt_dose_p bigint, cd_intervalo_p text, cd_item_p bigint, cd_funcao_p text, nm_usuario_p text, nr_seq_assinatura_p bigint default null) AS $body$
DECLARE


ie_suspenso_w			varchar(1);
nr_prescricoes_w		varchar(2000);
nr_seq_evento_w			bigint;
nr_prescricao_w			bigint;
tam_lista_w				bigint;
nr_seq_solucao_w		bigint;
ie_pos_virgula_w		bigint;
nr_seq_ordem_w			bigint;
ie_susp_ordem_medic_w	varchar(1);
ie_sol_dialise_w		varchar(1);
ds_item_w				varchar(255);
nr_atendimento_w		bigint;
nr_prescr_orig_w		bigint;
nr_seq_orig_w			bigint;
nr_prescricao_futura_w	bigint;
nr_seq_futura_w			bigint;
ie_alteracao_w			varchar(1);
cd_evolucao_w			bigint;
ds_texto_aux_w			varchar(255);
ie_tipo_item_cpoe_w		varchar(5);
ie_param716_w			varchar(1);
nr_seq_item_cpoe_w		cpoe_material.nr_sequencia%type;

C03 CURSOR FOR
SELECT	a.nr_sequencia,
		c.ie_suspensao
from	ordem_medica c,
		prescr_medica_ordem b,
		prescr_ordem_hor a
where	a.nr_seq_ordem	 = b.nr_sequencia
and		b.nr_seq_ordem   = c.nr_sequencia
and 	b.nr_prescricao	 = nr_prescricao_p
and 	b.nr_seq_solucao = nr_seq_solucao_p;

BEGIN

if (ie_tipo_solucao_p IS NOT NULL AND ie_tipo_solucao_p::text <> '') and (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') and (nr_seq_solucao_p IS NOT NULL AND nr_seq_solucao_p::text <> '') and (ie_alteracao_p IS NOT NULL AND ie_alteracao_p::text <> '') and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') then
	-- obter status alteracao
	if (ie_alteracao_p = 7) then
		ie_suspenso_w := 'S';
	elsif (ie_alteracao_p = 8) then
		ie_suspenso_w := 'N';
	end if;

	nr_prescricoes_w	:= nr_prescricoes_p;
	if (coalesce(nr_prescricoes_p::text, '') = '') then
		nr_prescricoes_w := nr_prescricao_p;
	end if;
	
	-- alterar status conforme tipo solucao 
	if (ie_tipo_solucao_p = 1) then -- solucoes
		-- alterar status 
		if (ie_suspenso_w = 'S') then
			update	prescr_solucao
			set		ie_suspenso	= ie_suspenso_w,
					dt_suspensao	= clock_timestamp(),
					nm_usuario_susp	= nm_usuario_p,
					ie_status	= 'S',
					ds_motivo_susp	= ds_justificativa_p,
					nr_seq_motivo_susp = nr_Seq_motivo_susp_p
			where	nr_prescricao	= nr_prescricao_p
			and		nr_seq_solucao	= nr_seq_solucao_p;

			-- Check if there is CPOE record to suspend
			select	max(nr_seq_mat_cpoe)
			into STRICT	nr_seq_item_cpoe_w
			from	prescr_material
			where	nr_prescricao	= nr_prescricao_p
			and		nr_sequencia_solucao	= nr_seq_solucao_p;
			
			if (nr_seq_item_cpoe_w IS NOT NULL AND nr_seq_item_cpoe_w::text <> '') then
				update	cpoe_material
				set		dt_suspensao = clock_timestamp(),
						dt_lib_suspensao = clock_timestamp(),
						nm_usuario_susp = nm_usuario_p/*,
						dt_fim = sysdate */
 --Nao pode setar fim, pois pode estar sendo feito uma suspensao por horario
				where	nr_sequencia = nr_seq_item_cpoe_w;
			end if;
			
			if (coalesce(cd_funcao_p,8030) <> 1113) and
				-- Suspensao
				(coalesce(ds_observacao_p,wheb_mensagem_pck.get_texto(323040)) not in (
				-- Suspensao conforme prescricao futura
				wheb_mensagem_pck.get_texto(300565),
				-- Suspensao conforme prescricao anterior
				wheb_mensagem_pck.get_texto(300566))) then				

				select	coalesce(max(b.nr_prescricao_anterior),0),
						coalesce(max(b.nr_sequencia_anterior),0),
						max(nr_atendimento)
				into STRICT	nr_prescr_orig_w,
						nr_seq_orig_w,
						nr_atendimento_w
				from	prescr_solucao b,
						prescr_medica a
				where	a.nr_prescricao	 = nr_prescricao_p
				and		a.nr_prescricao	 = b.nr_prescricao
				and		b.nr_seq_solucao = nr_seq_solucao_p;	
				
				select	coalesce(max(a.nr_prescricao),0),
						coalesce(max(b.nr_seq_solucao),0)
				into STRICT	nr_prescricao_futura_w,
						nr_seq_futura_w
				from	prescr_solucao b,
						prescr_medica a
				where	a.nr_prescricao	 = b.nr_prescricao
				and		a.nr_atendimento = nr_atendimento_w
				and		b.nr_sequencia_anterior = nr_seq_solucao_p
				and		b.nr_prescricao_anterior = nr_prescricao_p;

				if (nr_prescr_orig_w > 0) and (nr_seq_orig_w > 0) then
					-- Suspensao conforme prescricao futura
					ds_texto_aux_w	:= wheb_mensagem_pck.get_texto(300565);
					
					if (coalesce(substr(obter_status_solucao_prescr(1,nr_prescr_orig_w,nr_seq_orig_w),1,3),'N') = 'N') then
						
						CALL alterar_status_solucao_adep(	ie_tipo_solucao_p,
											nr_prescr_orig_w,
											nr_seq_orig_w,
											ie_alteracao_p,
											ds_texto_aux_w,
											null,
											null,
											null,
											null,
											null,
											null,
											null,
											cd_funcao_p,
											nm_usuario_p,
											nr_seq_assinatura_p);
					end if;	
				end if;	
				
				if (nr_prescricao_futura_w > 0) and (nr_seq_futura_w > 0) then
					-- Suspensao conforme prescricao anterior
					ds_texto_aux_w	:= wheb_mensagem_pck.get_texto(300566);	
					
					if (coalesce(substr(obter_status_solucao_prescr(1,nr_prescricao_futura_w,nr_seq_futura_w),1,3),'N') = 'N') then
						
						CALL alterar_status_solucao_adep(	ie_tipo_solucao_p,
											nr_prescricao_futura_w,
											nr_seq_futura_w,
											ie_alteracao_p,
											ds_texto_aux_w,
											null,
											null,
											null,
											null,
											null,
											null,
											null,
											cd_funcao_p,
											nm_usuario_p,
											nr_seq_assinatura_p);
					end if;	
				end if;					
				
			end if;
			
			open C03;
			loop
			fetch C03 into	
				nr_seq_ordem_w,
				ie_susp_ordem_medic_w;
			EXIT WHEN NOT FOUND; /* apply on C03 */
				begin
				if (coalesce(ie_susp_ordem_medic_w,'N') = 'N') then
					begin
					update	prescr_ordem_hor
					set		dt_suspensao = clock_timestamp(),
							dt_atualizacao = clock_timestamp(),
							nm_usuario_susp	= nm_usuario_p,
							nm_usuario	= nm_usuario_p
					where	nr_sequencia	= nr_seq_ordem_w
					and 	coalesce(dt_fim_horario::text, '') = ''
					and 	coalesce(dt_suspensao::text, '') = '';
					end;
				else
					begin
					update	prescr_ordem_hor
					set	dt_fim_horario = clock_timestamp(),
						dt_atualizacao = clock_timestamp(),
						nm_usuario_susp	= nm_usuario_p,
						nm_usuario	= nm_usuario_p
					where	nr_sequencia	= nr_seq_ordem_w
					and 	coalesce(dt_fim_horario::text, '') = ''
					and 	coalesce(dt_suspensao::text, '') = '';
					end;
				end if;	
				end;
			end loop;
			close C03;			
			
		elsif (ie_suspenso_w = 'N') then
			update	prescr_solucao
			set		ie_suspenso	= ie_suspenso_w,
					dt_suspensao	 = NULL,
					nm_usuario_susp	 = NULL,
					ie_status	= 'N',
					ds_motivo_susp	 = NULL
			where	nr_prescricao	= nr_prescricao_p
			and		nr_seq_solucao	= nr_seq_solucao_p;
		end if;

		-- gerar evento alteracao
		if (ie_suspenso_w in ('S','N')) and (nr_seq_solucao_p > 0) and (nr_prescricao_p > 0) then
			select	nextval('prescr_solucao_evento_seq')
			into STRICT	nr_seq_evento_w
			;
			
			insert into prescr_solucao_evento(nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_prescricao,
				nr_seq_solucao,
				nr_seq_material,
				nr_seq_procedimento,
				nr_seq_nut,
				nr_seq_nut_neo,
				ie_tipo_dosagem,
				qt_dosagem,
				qt_vol_infundido,
				qt_vol_desprezado,
				cd_pessoa_fisica,
				ie_alteracao,
				dt_alteracao,
				ie_evento_valido,
				nr_seq_motivo,
				ds_observacao,
				ds_justificativa,
				ie_tipo_solucao,
				nr_seq_assinatura
				)
			values (
				nr_seq_evento_w,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				nr_prescricao_p,
				nr_seq_solucao_p,
				null,
				null,
				null,
				null,
				null,
				null,
				null,
				null,
				obter_dados_usuario_opcao(nm_usuario_p, 'C'),
				ie_alteracao_p,
				clock_timestamp(),
				'S',
				nr_seq_motivo_p,
				null,
				ds_justificativa_p,
				ie_tipo_solucao_p,
				nr_seq_assinatura_p
				);

			-- Suspensao para solucoes de dialise
			select	coalesce(max('S'),'N')
			into STRICT	ie_sol_dialise_w
			from	prescr_solucao
			where	nr_prescricao	= nr_prescricao_p
			and		nr_seq_solucao	= nr_seq_solucao_p
			and		(nr_seq_dialise IS NOT NULL AND nr_seq_dialise::text <> '');
			
			if (ie_sol_dialise_w = 'S') then
				insert into hd_prescricao_evento(
					nr_sequencia,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					dt_atualizacao,
					nm_usuario,
					nr_prescricao,
					nr_seq_solucao,
					nr_etapa_evento,
					ie_evento,
					dt_evento,
					cd_pessoa_evento,
					dt_ciclo)
				values (
					nextval('hd_prescricao_evento_seq'),
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_prescricao_p,
					nr_seq_solucao_p,
					null,
					'SI',
					clock_timestamp(),
					substr(obter_dados_usuario_opcao(nm_usuario_p,'C'),1,10),
					null);
			end if;			
		end if;

	elsif (ie_tipo_solucao_p = 2) then -- suporte nutricional enteral
	
		--nr_prescricoes_w	:= nr_prescricoes_p; 		Alan OS 293651
		while(nr_prescricoes_w IS NOT NULL AND nr_prescricoes_w::text <> '') loop			
			tam_lista_w		:= length(nr_prescricoes_w);
			ie_pos_virgula_w	:= position(',' in nr_prescricoes_w);

			if (ie_pos_virgula_w <> 0) then
				nr_prescricao_w		:= (substr(nr_prescricoes_w,1,(ie_pos_virgula_w - 1)))::numeric;
				nr_prescricoes_w	:= substr(nr_prescricoes_w,(ie_pos_virgula_w + 1),tam_lista_w);
			else
				nr_prescricao_w		:= (nr_prescricoes_w)::numeric;
				nr_prescricoes_w	:= null;
			end if;
			
			if (cd_funcao_p	= 8030) then
				select  max(nr_sequencia)
				into STRICT	nr_seq_solucao_w
				from    prescr_material
				where   cd_intervalo	= cd_intervalo_p
				and     cd_material	= cd_item_p
				and     ie_agrupador	= 8
				and     coalesce(qt_dose,0)	= coalesce(qt_dose_p,0)
				and     nr_prescricao	= nr_prescricao_w;
			else
				nr_seq_solucao_w	:= nr_seq_solucao_p;
			end if;
				
			-- alterar status 
			if (ie_suspenso_w = 'S') then
				update	prescr_material
				set		ie_suspenso	= ie_suspenso_w,
						dt_suspensao	= clock_timestamp(),
						nm_usuario_susp	= nm_usuario_p,
						ie_status	= 'S',
						ds_motivo_susp	= substr(ds_justificativa_p,1,255),
						nr_seq_motivo_susp = nr_seq_motivo_susp_p
				where	nr_prescricao	= nr_prescricao_w
				and		nr_sequencia	= nr_seq_solucao_w
				and		ie_agrupador	= 8;
				
				-- Check if there is CPOE record to suspend
				select	max(nr_seq_dieta_cpoe)
				into STRICT	nr_seq_item_cpoe_w
				from	prescr_material
				where	nr_prescricao	= nr_prescricao_p
				and		nr_sequencia	= nr_seq_solucao_p
				and		ie_agrupador	= 8;
				
				if (nr_seq_item_cpoe_w IS NOT NULL AND nr_seq_item_cpoe_w::text <> '') then
					update	cpoe_dieta
					set		dt_suspensao = clock_timestamp(),
							dt_lib_suspensao = clock_timestamp(),
							nm_usuario_susp = nm_usuario_p,
							dt_fim = clock_timestamp()
					where	nr_sequencia = nr_seq_item_cpoe_w;
				end if;
			elsif (ie_suspenso_w = 'N') then
				update	prescr_material
				set		ie_suspenso	= ie_suspenso_w,
						dt_suspensao	 = NULL,
						nm_usuario_susp	 = NULL,
						ie_status	= 'N'
				where	nr_prescricao	= nr_prescricao_w
				and		nr_sequencia	= nr_seq_solucao_w
				and		ie_agrupador	= 8;
			end if;

			-- gerar evento alteracao 
			if (ie_suspenso_w in ('S','N')) then
				select	nextval('prescr_solucao_evento_seq')
				into STRICT	nr_seq_evento_w
				;

				insert into prescr_solucao_evento(
						nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_prescricao,
						nr_seq_solucao,
						nr_seq_material,
						nr_seq_procedimento,
						nr_seq_nut,
						nr_seq_nut_neo,
						ie_tipo_dosagem,
						qt_dosagem,
						qt_vol_infundido,
						qt_vol_desprezado,
						cd_pessoa_fisica,
						ie_alteracao,
						dt_alteracao,
						ie_evento_valido,
						nr_seq_motivo,
						ds_observacao,
						ds_justificativa,
						ie_tipo_solucao,
						nr_seq_assinatura
						)
					values (
						nr_seq_evento_w,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						nr_prescricao_w,
						null,
						nr_seq_solucao_w,
						null,
						null,
						null,
						null,
						null,
						null,
						null,
						obter_dados_usuario_opcao(nm_usuario_p, 'C'),
						ie_alteracao_p,
						clock_timestamp(),
						'S',
						null,
						null,
						ds_justificativa_p,
						ie_tipo_solucao_p,
						nr_seq_assinatura_p
						);
			end if;
		end loop;
	elsif (ie_tipo_solucao_p = 3) then -- hemocomponente
		-- alterar status 
		if (ie_suspenso_w = 'S') then
			update	prescr_procedimento
			set	ie_suspenso		= ie_suspenso_w,
				dt_suspensao		= clock_timestamp(),
				nm_usuario_susp		= nm_usuario_p
			where	nr_prescricao		= nr_prescricao_p
			and	nr_sequencia		= nr_seq_solucao_p
			and	(nr_seq_solic_sangue IS NOT NULL AND nr_seq_solic_sangue::text <> '')
			and	((nr_seq_derivado IS NOT NULL AND nr_seq_derivado::text <> '') or (Obter_se_exibe_proced(nr_prescricao,nr_sequencia,ie_tipo_proced,'BSST') = 'S'));
		elsif (ie_suspenso_w = 'N') then
			update	prescr_procedimento
			set	ie_suspenso		= ie_suspenso_w,
				dt_suspensao		 = NULL,
				nm_usuario_susp		 = NULL
			where	nr_prescricao		= nr_prescricao_p
			and	nr_sequencia		= nr_seq_solucao_p
			and	(nr_seq_solic_sangue IS NOT NULL AND nr_seq_solic_sangue::text <> '')
			and	((nr_seq_derivado IS NOT NULL AND nr_seq_derivado::text <> '') or (Obter_se_exibe_proced(nr_prescricao,nr_sequencia,ie_tipo_proced,'BSST') = 'S'));
		end if;

		-- gerar evento alteracao 
		if (ie_suspenso_w in ('S','N')) then
			select	nextval('prescr_solucao_evento_seq')
			into STRICT	nr_seq_evento_w
			;
	
			insert into prescr_solucao_evento(
								nr_sequencia,
								dt_atualizacao,
								nm_usuario,
								dt_atualizacao_nrec,
								nm_usuario_nrec,
								nr_prescricao,
								nr_seq_solucao,
								nr_seq_material,
								nr_seq_procedimento,
								nr_seq_nut,
								nr_seq_nut_neo,
								ie_tipo_dosagem,
								qt_dosagem,
								qt_vol_infundido,
								qt_vol_desprezado,
								cd_pessoa_fisica,
								ie_alteracao,
								dt_alteracao,
								ie_evento_valido,
								nr_seq_motivo,
								ds_observacao,
								ds_justificativa,
								ie_tipo_solucao,
								nr_seq_assinatura
								)
							values (
								nr_seq_evento_w,
								clock_timestamp(),
								nm_usuario_p,
								clock_timestamp(),
								nm_usuario_p,
								nr_prescricao_p,
								null,
								null,
								nr_seq_solucao_p,
								null,
								null,
								null,
								null,
								null,
								null,
								obter_dados_usuario_opcao(nm_usuario_p, 'C'),
								ie_alteracao_p,
								clock_timestamp(),
								'S',
								null,
								null,
								ds_justificativa_p,
								ie_tipo_solucao_p,
								nr_seq_assinatura_p
								);
								
			if (ie_suspenso_w = 'S') then
				select	substr(coalesce(coalesce(max(Obter_desc_san_derivado(b.nr_seq_derivado)),max(Obter_desc_san_exame(b.nr_seq_exame_sangue))),max(Obter_desc_prescr_proc(b.cd_procedimento,b.ie_origem_proced, b.nr_seq_proc_interno))),1,100),
					max(a.nr_atendimento)
				into STRICT	ds_item_w,
					nr_atendimento_w
				from	prescr_procedimento b,
					prescr_medica a
				where	a.nr_prescricao	= b.nr_prescricao
				and	a.nr_prescricao	= nr_prescricao_p
				and	b.nr_sequencia	= nr_seq_solucao_p;
				
				cd_evolucao_w := Gerar_evolPaci_automa('H', nm_usuario_p, nr_atendimento_w, ds_item_w, null, 'S', '', null, null, null, null, null, cd_evolucao_w);
			end if;
		end if;

	elsif (ie_tipo_solucao_p = 4) then -- npt adulto
		-- alterar status 
		if (ie_suspenso_w = 'S') then
			update	nut_paciente
			set	ie_suspenso	= ie_suspenso_w,
				dt_suspensao	= clock_timestamp(),
				nm_usuario_susp	= nm_usuario_p
			where	nr_prescricao	= nr_prescricao_p
			and	nr_sequencia	= nr_seq_solucao_p;
		elsif (ie_suspenso_w = 'N') then
			update	nut_paciente
			set	ie_suspenso	= ie_suspenso_w,
				dt_suspensao	 = NULL,
				nm_usuario_susp	 = NULL
			where	nr_prescricao	= nr_prescricao_p
			and	nr_sequencia	= nr_seq_solucao_p;
		end if;

		-- gerar evento alteracao 
		if (ie_suspenso_w in ('S','N')) then
			select	nextval('prescr_solucao_evento_seq')
			into STRICT	nr_seq_evento_w
			;
	
			insert into prescr_solucao_evento(
								nr_sequencia,
								dt_atualizacao,
								nm_usuario,
								dt_atualizacao_nrec,
								nm_usuario_nrec,
								nr_prescricao,
								nr_seq_solucao,
								nr_seq_material,
								nr_seq_procedimento,
								nr_seq_nut,
								nr_seq_nut_neo,
								ie_tipo_dosagem,
								qt_dosagem,
								qt_vol_infundido,
								qt_vol_desprezado,
								cd_pessoa_fisica,
								ie_alteracao,
								dt_alteracao,
								ie_evento_valido,
								nr_seq_motivo,
								ds_observacao,
								ds_justificativa,
								ie_tipo_solucao,
								nr_seq_assinatura
								)
							values (
								nr_seq_evento_w,
								clock_timestamp(),
								nm_usuario_p,
								clock_timestamp(),
								nm_usuario_p,
								nr_prescricao_p,
								null,
								null,
								null,
								nr_seq_solucao_p,
								null,
								null,
								null,
								null,
								null,
								obter_dados_usuario_opcao(nm_usuario_p, 'C'),
								ie_alteracao_p,
								clock_timestamp(),
								'S',
								null,
								null,
								ds_justificativa_p,
								ie_tipo_solucao_p,
								nr_seq_assinatura_p
								);
		end if;

	elsif (ie_tipo_solucao_p in (5,6)) then -- npt neo
		-- alterar status 
		if (ie_suspenso_w = 'S') then
			update	nut_pac
			set		ie_suspenso	= ie_suspenso_w,
					dt_suspensao	= clock_timestamp(),
					nm_usuario_susp	= nm_usuario_p
			where	nr_prescricao	= nr_prescricao_p
			and		nr_sequencia	= nr_seq_solucao_p;
			
			update	nut_paciente_hor
			set		dt_suspensao	= clock_timestamp(),
					nm_usuario_susp	= nm_usuario_p,
					ie_status = 'S'
			where	nr_seq_nut_protocolo = nr_seq_solucao_p
			and		coalesce(dt_suspensao::text, '') = ''
			and		coalesce(dt_fim_horario::text, '') = '';
			
			if (coalesce(cd_funcao_p,8030) = 1113)  then
				ie_alteracao_w := 6;
			else
				ie_alteracao_w := ie_tipo_solucao_p;
			end if;
		elsif (ie_suspenso_w = 'N') then
			update	nut_pac
			set		ie_suspenso	= ie_suspenso_w,
					dt_suspensao	 = NULL,
					nm_usuario_susp	 = NULL
			where	nr_prescricao	= nr_prescricao_p
			and		nr_sequencia	= nr_seq_solucao_p;
			
			ie_alteracao_w := ie_tipo_solucao_p;
		end if;

		-- gerar evento alteracao 
		if (ie_suspenso_w in ('S','N')) then
			select	nextval('prescr_solucao_evento_seq')
			into STRICT	nr_seq_evento_w
			;
	
			insert into prescr_solucao_evento(
								nr_sequencia,
								dt_atualizacao,
								nm_usuario,
								dt_atualizacao_nrec,
								nm_usuario_nrec,
								nr_prescricao,
								nr_seq_solucao,
								nr_seq_material,
								nr_seq_procedimento,
								nr_seq_nut,
								nr_seq_nut_neo,
								ie_tipo_dosagem,
								qt_dosagem,
								qt_vol_infundido,
								qt_vol_desprezado,
								cd_pessoa_fisica,
								ie_alteracao,
								dt_alteracao,
								ie_evento_valido,
								nr_seq_motivo,
								ds_observacao,
								ds_justificativa,
								ie_tipo_solucao,
								nr_seq_assinatura
								)
							values (
								nr_seq_evento_w,
								clock_timestamp(),
								nm_usuario_p,
								clock_timestamp(),
								nm_usuario_p,
								nr_prescricao_p,
								null,
								null,
								null,
								null,
								nr_seq_solucao_p,
								null,
								null,
								null,
								null,
								obter_dados_usuario_opcao(nm_usuario_p, 'C'),
								ie_alteracao_p,
								clock_timestamp(),
								'S',
								null,
								null,
								ds_justificativa_p,
								ie_alteracao_w,
								nr_seq_assinatura_p
								);
		end if;
	end if;
	
	ie_param716_w := obter_param_usuario(1113, 716, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, coalesce(wheb_usuario_pck.get_cd_estabelecimento, 1), ie_param716_w);
	
	if (ie_param716_w <> 'N') then
		ie_tipo_item_cpoe_w := obter_tipo_solucao_adep(ie_tipo_solucao_p);
		nr_seq_item_cpoe_w := obter_nr_sequencia_cpoe(nr_seq_solucao_p, nr_prescricao_p, ie_tipo_item_cpoe_w);
		
		select
			max(nr_atendimento)
		into STRICT
			nr_atendimento_w
		from prescr_medica
		where nr_prescricao = nr_prescricao_p;

		CALL generate_nurse_ack(ie_suspenso_w, ie_tipo_item_cpoe_w, nr_atendimento_w, nr_seq_item_cpoe_w, cd_item_p);
	end if;

end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE alterar_status_solucao_adep ( ie_tipo_solucao_p bigint, nr_prescricao_p bigint, nr_seq_solucao_p bigint, ie_alteracao_p bigint, ds_observacao_p text, ds_justificativa_p text, nr_seq_motivo_p bigint, nr_seq_motivo_susp_p bigint, nr_prescricoes_p text, qt_dose_p bigint, cd_intervalo_p text, cd_item_p bigint, cd_funcao_p text, nm_usuario_p text, nr_seq_assinatura_p bigint default null) FROM PUBLIC;

