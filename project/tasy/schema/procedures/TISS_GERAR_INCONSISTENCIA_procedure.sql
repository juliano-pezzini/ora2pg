-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE tiss_gerar_inconsistencia (nr_sequencia_autor_p bigint, nr_interno_conta_p bigint, nr_seq_protocolo_p bigint, nr_seq_reap_conta_p bigint, nr_seq_projeto_p bigint, nm_usuario_p text) AS $body$
DECLARE


/*
nao tirar TRATAMENTOS FORA DO PADRAO desta procedure
oracle 8 nao funciona
*/
cont_w				bigint;
cont_contas_w			bigint;
nr_seq_conta_guia_w		bigint;
qt_nascimentos_w			bigint;
cont_senha_w			bigint;
cd_plano_convenio_w		varchar(255);
cd_usuario_convenio_w		varchar(255);
cd_cnes_w			varchar(255);
cd_ans_w			varchar(255);
cd_interno_w			varchar(255);
cd_cgc_w				varchar(255);
ds_versao_projeto_w		varchar(255);
sg_conselho_w			varchar(255);
ds_indicacao_w			varchar(4000);
ds_despesa_w			varchar(255);
ds_observacao_w			varchar(255);
ie_carater_internacao_w		varchar(3);
ie_consiste_cid_autor_w		varchar(3);
IE_MEDICO_SOLIC_ATEND_w	varchar(3);
ie_consiste_tipo_saida_w		varchar(3);
ie_consiste_tec_util_w		varchar(3);
ie_tecnica_utilizada_w		varchar(40);
ie_tipo_nascimento_w		varchar(10);
ds_versao_w			varchar(30);
ie_crm_w				varchar(3);
ie_tipo_autorizacao_w		varchar(3);
ie_via_acesso_w			varchar(10);
ie_consiste_via_acesso_w		varchar(10);
nr_crm_aux_w			varchar(20);
nr_crm_w			varchar(20);
ie_consistir_obs_w			varchar(20);
ie_consiste_indicacao_w 		varchar(3);
ie_consistir_proc_w		varchar(3);
ie_consistir_guia_senha_w 		varchar(3);
ie_tipo_atendimento_w		smallint;
nr_seq_procedimento_w		bigint;
cd_convenio_w			bigint;
qt_guias_w			bigint;
cd_estabelecimento_w		bigint;
nr_atendimento_w			bigint;
vl_total_guia_w			double precision;
qt_guias_honor_w			bigint;
qt_guias_RI_w			bigint;
qt_tipo_guia_w			bigint;
nr_sequencia_autor_w		bigint;
qt_procedimento_w		bigint;
nr_dnv_w			varchar(255);
nr_seq_agenda_consulta_w 		bigint;
cd_autorizacao_w			varchar(255);
nr_interno_conta_w		bigint;
cd_medico_executor_w		varchar(255);
cd_medico_exec_w			varchar(255);
ds_tipo_tabela_w			varchar(255);
cd_doenca_cid_w			varchar(255);
cd_doenca_cid_2_w		varchar(255);
cd_doenca_aux_w			varchar(255);
ie_honorario_w			varchar(255);
ie_cid_spsadt_w			varchar(10);
ie_consiste_codigo_w		varchar(2);
ie_funcao_medico_w		varchar(20);
ds_procedimento_w		varchar(255);
ds_funcao_medico_w		varchar(255);
ie_tipo_atend_tiss_w		varchar(255);
ie_tipo_guia_w			varchar(255);
ie_tipo_guia_proc_w		varchar(255);
ie_tipo_saida_tiss_w		varchar(255);
nm_medico_solicitante_w		varchar(255);
ds_diagnostico_w			varchar(255);
uf_crm_w			varchar(255);
nr_cpf_w				varchar(255);
nm_medico_w			varchar(255);
ie_clinica_w			varchar(255);
cd_autorizacao_tag_w		varchar(255);
ie_tipo_convenio_w		varchar(255);
cd_medico_guia_w			varchar(255);
cd_cgc_prestador_w		varchar(255);
ie_consiste_tiss_w			varchar(10);
ie_consiste_autor_spsadt_w 		varchar(3);
ie_consiste_desp_neg_w		varchar(3);
cd_tipo_acomodacao_w		varchar(255);
ie_exec_spsadt_w			varchar(20);
ie_proc_partic_w			varchar(20);
dt_geracao_tiss_w			timestamp;
dt_item_w			timestamp;
vl_despesas_w			double precision;
cd_edicao_amb_w			varchar(20);
ie_tipo_despesa_w			varchar(5);
cd_despesa_w			varchar(20);
cd_motivo_alta_w			bigint;
IE_OBITO_w			varchar(20);
ie_tipo_saida_consulta_w 		varchar(255);
NR_DECLARACAO_OBITO_w		varchar(255);
ie_tipo_logradouro_w		varchar(10);
ds_logradouro_w			varchar(255);
cd_municipio_ibge_w		varchar(30);
nr_endereco_w			varchar(20);
sg_estado_w			varchar(10);
cd_cep_w			varchar(20);
cd_cgc_solic_w			varchar(15);
nr_cpf_solic_w			varchar(15);
cd_interno_solic_w			varchar(30);
nm_contratado_solic_w		varchar(255);
ie_consistir_decl_obito_w		varchar(5);
ie_envio_w			varchar(255);
ie_consistir_uf_crm_solic_w		varchar(255);
IE_CONSISTIR_GUIA_DUP_W	varchar(255);
cd_autorizacao_guia_w		varchar(255);
nr_interno_conta_dup_w		bigint;
cont_guia_dup_w			bigint;
ie_consiste_proc_neg_w		varchar(255);
ie_cons_tempo_doenca_w	varchar(255);
qt_tempo_cid_w			varchar(255);
ie_unidade_tempo_cid_w		varchar(255);
cd_cbos_w			varchar(15);
ie_consiste_cbo_w		varchar(255);
nr_seq_proc_pacote_w		bigint;
nr_atend_conta_w		bigint;
count_senha_autor_w		bigint;
ie_consiste_senha_autor_w	varchar(5);
cd_procedimento_w		bigint;
qt_proc_guia_w			double precision;
qt_proc_conta_w			double precision;
ds_proc_guia_w			varchar(255);
cd_autorizacao_proc_guia_w	varchar(40);
ie_consiste_qt_proc_w		varchar(255);
ie_consistir_cpf_w		varchar(255);
ie_cid_ri_w			varchar(255);
ie_guia_numerica_w		varchar(255);
cd_autorizacao_princ_w		varchar(20);
ie_consiste_grau_partic_w	varchar(10);
ie_consiste_cns_w		varchar(1)	:= 'N';
nr_cartao_nac_sus_w		varchar(255);
ie_consiste_codigo_ans_w	varchar(1);
cd_unidade_medida_tiss_w	varchar(255);
ie_mascara_cid_w		varchar(10);
ds_tipo_fatur_w			varchar(10);
ie_tipo_saida_parcial_w		varchar(10);
ie_consiste_valor_guia_w	varchar(1):= 'N';
vl_total_guias_w		double precision;
vl_conta_w			double precision;
qt_contas_protocolo_w		bigint;
ie_tiss_tipo_guia_autor_w	varchar(20);
ds_versao_autor_w		varchar(30);
ie_tiss_tipo_anexo_autor_w	varchar(10);
nr_seq_projeto_autor_w		bigint;
cd_cbo_saude_w			varchar(15);
nr_seq_cbo_w			bigint;
qt_regra_w			bigint;
qt_dia_solicitado_w		smallint;
ie_obito_parcial_w		varchar(1);
ie_consiste_tuss_autor_w	varchar(1);
ds_inconsistencia_tuss_w	varchar(2000);
ie_consiste_just_espec_opm_w	varchar(1);
ie_gravar_log_inconsist_w	varchar(1);
ie_participante_ri_w		varchar(255);
ie_cons_dias_solic_int_w    varchar(1);
qt_guias_protocolo_w  	    bigint;

nr_telefone_contrat_w		tiss_anexo_guia.nr_telefone_contrat%type;
nm_contratado_anexo_w		tiss_anexo_guia.nm_contratado%type;
ds_especific_mat_w		tiss_anexo_guia.ds_especific_mat%type;
ds_justificativa_tec_w		tiss_anexo_guia.ds_justificativa%type;
cd_estadiamento_tumor_w		tiss_anexo_guia_diag.cd_estadiamento_tumor%type;
cd_finalidade_tratamento_w	tiss_anexo_guia_diag.cd_finalidade_tratamento%type;
cd_ecog_w			tiss_anexo_guia_diag.cd_ecog%type;
ds_diag_histopatologico_w	tiss_anexo_guia_diag.ds_diag_histopatologico%type;
cd_tipo_quimio_w		tiss_anexo_guia_diag.cd_tipo_quimio%type;
ds_plano_terapeutico_w		tiss_anexo_guia_diag.ds_plano_terapeutico%type;
cd_item_w			tiss_anexo_guia_item.cd_item%type;
ds_item_w			tiss_anexo_guia_item.ds_item%type;
count_param_w			bigint;
dt_mesano_referencia_w		timestamp;
cd_categoria_conv_w		categoria_convenio.cd_categoria%type;
ds_tipo_guia_w			varchar(10);
nr_versao_tiss_w		bigint := 0;
ie_tipo_tiss_w            	varchar(30);
nr_seq_estagio_w    		autorizacao_convenio.nr_seq_estagio%type;

ds_nao_informada_w			varchar(25);
ds_exp_convenio_w			varchar(25);
ds_exp_medico_w				varchar(25);
ds_exp_autorizacao_w			varchar(25);
ds_exp_versao_tiss_convenio_w 		varchar(225);
ds_exp_codigo_despesa_w			varchar(25);
ds_exp_codigo_convenio_w		varchar(25);
ds_exp_pessoa_fisica_w			varchar(25);
ds_exp_guia_honor_indiv_w		varchar(40);
ds_exp_guia_ri_w			varchar(40);
ds_exp_nr_guia_dup_w			varchar(40);
ds_exp_total_conta_dif_guias		varchar(225);
ds_exp_desc_diag_info_w			varchar(225);
ds_exp_tempo_doenca_atend_w     	varchar(225);
qt_exec_comp_w				integer := 0;
ds_exp_nr_guia_prot_w           	varchar(100);
ds_exp_protocolo_w              	varchar(100);
qt_guias_permitidas_w			bigint;
IE_EXIGE_DECLARACAO_w   		motivo_alta.ie_exige_declaracao%type;

c01 CURSOR FOR
SELECT	a.ie_tiss_tipo_guia,
	a.cd_autorizacao,
	a.nr_interno_conta,
	b.nr_atendimento,
	a.ie_honorario,
	a.ie_tipo_atend_tiss,
	a.ie_tipo_saida,
	b.ie_tipo_internacao,
	a.cd_autorizacao_tag,
	a.cd_medico_executor,
	b.ie_tipo_acomodacao,
	a.nr_sequencia,
	a.vl_total,
	b.nr_declaracao_obito,
	b.ie_tipo_saida_consulta,
	b.nr_dnv,
	a.ds_indicacao,
	a.cd_autorizacao_princ,
	b.nr_cartao_nac_sus,
	b.ds_tipo_fatur
from	tiss_conta_atend b,
	tiss_conta_guia a,
	tiss_protocolo_guia c
where	a.nr_interno_conta	= b.nr_interno_conta
and	c.nr_sequencia		= a.nr_seq_prot_guia
and	c.nr_seq_protocolo	= nr_seq_protocolo_p

union

SELECT	a.ie_tiss_tipo_guia,
	a.cd_autorizacao,
	a.nr_interno_conta,
	b.nr_atendimento,
	a.ie_honorario,
	a.ie_tipo_atend_tiss,
	a.ie_tipo_saida,
	b.ie_tipo_internacao,
	a.cd_autorizacao_tag,
	a.cd_medico_executor,
	b.ie_tipo_acomodacao,
	a.nr_sequencia,
	a.vl_total,
	b.nr_declaracao_obito,
	b.ie_tipo_saida_consulta,
	b.nr_dnv,
	a.ds_indicacao,
	a.cd_autorizacao_princ,
	b.nr_cartao_nac_sus,
	b.ds_tipo_fatur
from	tiss_conta_atend b,
	tiss_conta_guia a
where	a.nr_interno_conta	= b.nr_interno_conta
and	a.nr_interno_conta	= nr_interno_conta_p

union

select	a.ie_tiss_tipo_guia,
	a.cd_autorizacao,
	a.nr_interno_conta,
	b.nr_atendimento,
	a.ie_honorario,
	a.ie_tipo_atend_tiss,
	a.ie_tipo_saida,
	b.ie_tipo_internacao,
	a.cd_autorizacao_tag,
	a.cd_medico_executor,
	b.ie_tipo_acomodacao,
	a.nr_sequencia,
	a.vl_total,
	b.nr_declaracao_obito,
	b.ie_tipo_saida_consulta,
	b.nr_dnv,
	a.ds_indicacao,
	a.cd_autorizacao_princ,
	b.nr_cartao_nac_sus,
	b.ds_tipo_fatur
from	tiss_conta_atend b,
	tiss_conta_guia a
where	a.nr_interno_conta		= b.nr_interno_conta
and	a.nr_seq_reap_conta	= nr_seq_reap_conta_p;

c08 CURSOR FOR
SELECT	cd_cnes,
	ie_tipo_logradouro,
	ds_logradouro,
	cd_municipio_ibge,
	nr_endereco,
	sg_estado,
	cd_cep
from	tiss_conta_contrat_exec
where	nr_seq_guia		= nr_seq_conta_guia_w;

c02 CURSOR FOR
SELECT	ie_tiss_tipo_guia,
	nr_sequencia,
	ds_procedimento,
	cd_medico_executor,
	ie_funcao_medico,
	ie_via_acesso,
	qt_procedimento,
	ie_tecnica_utilizada	
from	tiss_conta_proc
where	nr_seq_guia		= nr_seq_conta_guia_w;

c03 CURSOR FOR
SELECT	ie_funcao_medico,
	sg_conselho,
	uf_crm,
	nm_medico_executor,
	nr_cpf,
	cd_medico_convenio,
	nr_crm,
	cd_cbos
from	tiss_conta_partic
where	nr_seq_proc		= nr_seq_procedimento_w;

c04 CURSOR FOR
SELECT	nr_interno_conta,
	nr_atendimento
from	conta_paciente
where	nr_seq_protocolo		= nr_seq_protocolo_p

union

SELECT	nr_interno_conta,
	nr_atendimento
from	conta_paciente
where	nr_interno_conta		= nr_interno_conta_p;

c05 CURSOR FOR
SELECT	sg_conselho_solic,
	uf_conselho_solic,
	nm_solicitante,
	cd_cgc,
	nr_cpf,
	cd_interno,
	nm_contratado,
	cd_cbos_solic
from	tiss_conta_contrat_solic
where	nr_seq_guia		= nr_seq_conta_guia_w;

c06 CURSOR FOR
SELECT	a.nr_interno_conta,
	a.cd_autorizacao,
	a.cd_cgc_prestador
from	tiss_conta_desp a,
	tiss_conta_guia x,
	tiss_protocolo_guia c
where	c.nr_seq_protocolo 	= nr_seq_protocolo_p
and	c.nr_sequencia		= x.nr_seq_prot_guia
and	a.nr_interno_conta	= x.nr_interno_conta
and	coalesce(a.ie_tiss_tipo_guia, a.ie_tiss_tipo_guia_desp) = '7'

union

SELECT	b.nr_interno_conta,
	b.cd_autorizacao,
	b.cd_cgc_prestador
from (select	x.*
	from	tiss_conta_desp x		
	where	x.nr_interno_conta	= nr_interno_conta_p
	and	coalesce(x.ie_tiss_tipo_guia, x.ie_tiss_tipo_guia_desp) = '7') b;

c07 CURSOR FOR
SELECT	sum(vl_item),
	ds_procedimento,
	ie_tipo_despesa,
	trunc(dt_item,'dd') dt_item,
	cd_edicao_amb,
	cd_procedimento,
	cd_unidade_medida_tiss
from	tiss_conta_desp
where	nr_seq_guia	= nr_seq_conta_guia_w
group by	ds_procedimento,
	ie_tipo_despesa,
	trunc(dt_item,'dd'),
	dt_hora_item,
	dt_final,
	cd_edicao_amb,
	cd_procedimento,
	cd_unidade_medida_tiss;

c09 CURSOR FOR
SELECT	distinct
	a.cd_autorizacao,
	a.nr_atendimento
from	conta_paciente_guia a
where	a.nr_interno_conta	= nr_interno_conta_p;

c10 CURSOR FOR
SELECT 	sum(qt_procedimento),
	cd_procedimento,
	ds_procedimento,
	cd_autorizacao
from 	tiss_conta_proc
where	nr_interno_conta	= nr_interno_conta_w
and	(nr_seq_guia IS NOT NULL AND nr_seq_guia::text <> '')
group by cd_procedimento,
	ds_procedimento,
	cd_autorizacao;

c11 CURSOR FOR
SELECT	x.cd_doenca	
from (SELECT	a.cd_doenca cd_doenca		
	from	cid_doenca c,
		diagnostico_medico b,
		diagnostico_doenca a
	where	a.nr_atendimento		= nr_atendimento_w
	and	a.nr_atendimento		= b.nr_atendimento
	and	a.dt_diagnostico		= b.dt_diagnostico
	and	c.cd_doenca_cid			= a.cd_doenca	
	and	c.ie_situacao			= 'A'
	and	c.ie_cad_interno		= 'N'
	
union 	all

	select	a.cd_doenca		
	from	diagnostico_medico b,
		diagnostico_doenca a
	where	a.nr_atendimento		= nr_atendimento_w
	and	a.nr_atendimento		= b.nr_atendimento	
	and	a.dt_diagnostico		= b.dt_diagnostico) x;	

c12 CURSOR FOR
SELECT	a.cd_item,
	a.ds_item
from	tiss_anexo_guia_item a,
	tiss_anexo_guia b
where	a.nr_seq_guia		= b.nr_sequencia
and	b.nr_sequencia_autor	= nr_sequencia_autor_p
and	coalesce(a.ie_via_aplicacao::text, '') = '';

c13 CURSOR FOR
SELECT	a.cd_procedimento cd_item,
	substr(b.ds_procedimento,1,60) ds_item
from	procedimento_autorizado a,
	procedimento b
where	a.cd_procedimento	= b.cd_procedimento
and	a.ie_origem_proced	= b.ie_origem_proced
and	a.nr_sequencia_autor	= nr_sequencia_autor_p
and	coalesce(a.cd_procedimento_tuss,0) = 0

union

SELECT	a.cd_material cd_item,
	substr(b.ds_material,1,60) ds_item
from	material_autorizado a,
	material b
where	a.cd_material		= b.cd_material
and	a.nr_sequencia_autor	= nr_sequencia_autor_p
and	coalesce(a.cd_material_tuss,0) = 0;

c13_w	c13%rowtype;


BEGIN

ds_nao_informada_w := wheb_mensagem_pck.get_texto(1028876);
ds_exp_convenio_w := wheb_mensagem_pck.get_texto(302019);
ds_exp_medico_w := wheb_mensagem_pck.get_texto(279540) || ' ';
ds_exp_autorizacao_w := wheb_mensagem_pck.get_texto(307563) || ' ';
ds_exp_versao_tiss_convenio_w := wheb_mensagem_pck.get_texto(315039) || ' TISS ' || ds_exp_convenio_w;
ds_exp_guia_ri_w := obter_desc_expressao(1037394) || ' ';
ds_exp_guia_honor_indiv_w := obter_desc_expressao(1037398) || ' ';
ds_exp_nr_guia_dup_w := obter_desc_expressao(1037402) || ' ';
ds_exp_total_conta_dif_guias := obter_desc_expressao(1037404);
ds_exp_codigo_convenio_w := obter_desc_expressao(285370) || ': ';
ds_exp_codigo_despesa_w := obter_desc_expressao(1037408) || ' ';
ds_exp_pessoa_fisica_w := obter_desc_expressao(329357) || ' ';
ds_exp_desc_diag_info_w := obter_desc_expressao(1037410);
ds_exp_tempo_doenca_atend_w := obter_desc_expressao(1037412);
ds_exp_nr_guia_prot_w := obter_desc_expressao(752026) || ': ';
ds_exp_protocolo_w := obter_desc_expressao(347317);

select	max(ds_versao)
into STRICT	ds_versao_projeto_w
from	xml_projeto
where	nr_sequencia	= nr_seq_projeto_p;

begin
	nr_versao_tiss_w := coalesce((elimina_caracteres_especiais(ds_versao_projeto_w))::numeric ,0);
exception
	when others then
	nr_versao_tiss_w := 0;
end;


delete 	from w_tiss_inconsistencia
where	((nr_sequencia_autor 	= nr_sequencia_autor_p) or (nr_seq_protocolo		= nr_seq_protocolo_p)or (nr_interno_conta		= nr_interno_conta_p));

if (coalesce(nr_seq_protocolo_p,0) > 0) then

	begin
	select	1
	into STRICT	qt_contas_protocolo_w
	from	conta_paciente
	where	nr_seq_protocolo = nr_seq_protocolo_p  LIMIT 1;
	exception
	when others then
		qt_contas_protocolo_w := 0;
	end;

end if;

if (coalesce(nr_sequencia_autor_p,0) > 0) then
	select	cd_convenio,
		obter_dados_autor_convenio(nr_sequencia, 'E'),
		nr_atendimento,
		ds_indicacao,
		ie_tipo_autorizacao,
		nr_seq_estagio
	into STRICT	cd_convenio_w,
		cd_estabelecimento_w,
		nr_atendimento_w,
		ds_indicacao_w,
		ie_tipo_autorizacao_w,
		nr_seq_estagio_w
	from	autorizacao_convenio
	where	nr_sequencia	= nr_sequencia_autor_p;	

	if (coalesce(cd_estabelecimento_w::text, '') = '') then
		select	max(cd_estabelecimento)
		into STRICT	cd_estabelecimento_w
		from	autorizacao_convenio_tiss			
		where	nr_sequencia_autor	= nr_sequencia_autor_p;
	end if;

elsif (coalesce(nr_interno_conta_p, 0) > 0) then

	select	max(cd_convenio_parametro),
		max(cd_estabelecimento),
		max(dt_geracao_tiss),
		max(dt_mesano_referencia)
	into STRICT	cd_convenio_w,
		cd_estabelecimento_w,
		dt_geracao_tiss_w,
		dt_mesano_referencia_w
	from	conta_paciente
	where	nr_interno_conta	= nr_interno_conta_p;

	if (coalesce(dt_geracao_tiss_w::text, '') = '') then
		CALL TISS_ATUALIZAR_PROT_CONTA(null, nr_interno_conta_p, nr_atendimento_w, null, 'S', cd_estabelecimento_w, nm_usuario_p);
	end if;

elsif (coalesce(nr_seq_protocolo_p, 0) > 0) then

	select	cd_convenio,
		cd_estabelecimento,
		coalesce(dt_referencia_tiss,dt_mesano_referencia)
	into STRICT	cd_convenio_w,
		cd_estabelecimento_w,
		dt_mesano_referencia_w
	from	protocolo_convenio
	where	nr_seq_protocolo	= nr_seq_protocolo_p;

	select	count(*)
	into STRICT	cont_contas_w
	from	conta_paciente
	where	nr_seq_protocolo	= nr_seq_protocolo_p
	and	coalesce(dt_geracao_tiss::text, '') = '';

	if (cont_contas_w > 0) then
		CALL TISS_ATUALIZAR_PROT_CONTA(nr_seq_protocolo_p, null, nr_atendimento_w, null, 'S', cd_estabelecimento_w, nm_usuario_p);
	end if;
elsif (coalesce(nr_seq_reap_conta_p,0)>0) then

	select	b.cd_convenio,
		b.cd_estabelecimento
	into STRICT	cd_convenio_w,
		cd_estabelecimento_w
	from	tiss_reap_conta a,
		tiss_reap_lote b
	where	a.nr_seq_lote	= b.nr_sequencia
	and	a.nr_sequencia	= nr_seq_reap_conta_p;	

end if;

select	max(tiss_obter_versao(cd_convenio_w, cd_estabelecimento_w,dt_mesano_referencia_w))
into STRICT	ds_versao_w
;


select	count(*),
	max(ie_cid_spsadt),
	max(ie_consiste_codigo),
	coalesce(max(ie_exec_spsadt), 'N'),
	coalesce(max(ie_consiste_tiss),'S'),
	coalesce(max(ie_proc_partic), 'N'),
	coalesce(max(ie_consiste_autor_spsadt), 'N'),
	coalesce(max(ie_consiste_desp_neg), 'S'),
	coalesce(max(ie_consiste_via_acesso), 'N'),
	coalesce(max(ie_crm),'N'),
	coalesce(max(ie_consistir_obs),'N'),
	coalesce(max(ie_consiste_indicacao),'S'),
	coalesce(max(ie_consistir_proc), 'S'),
	coalesce(max(ie_consistir_decl_obito), 'S'),
	coalesce(max(ie_consiste_tec_util), 'N'),
	coalesce(max(ie_consistir_guia_senha), 'N'),
	coalesce(max(IE_MEDICO_SOLIC_ATEND),'S'),
	coalesce(max(ie_consiste_tipo_saida), 'S'),
	coalesce(max(ie_consiste_cid_autor), 'S'),
	coalesce(max(ie_consistir_uf_crm_solic), 'S'),
	coalesce(max(IE_CONSISTIR_GUIA_DUP),'N'),
	coalesce(max(ie_consistir_proc_zerado),'S'),
	coalesce(max(ie_cons_tempo_doenca),'N'),
	coalesce(max(ie_consiste_cbo),'N'),
	coalesce(max(ie_consiste_senha_autor),'N'),
	coalesce(max(ie_consiste_qt_proc),'N'),
	coalesce(max(ie_consistir_cpf),'S'),
	coalesce(max(ie_cid_ri),'S'),
	coalesce(max(ie_guia_numerica),'N'),
	coalesce(max(ie_consiste_grau_partic),'S'),
	coalesce(max(ie_consiste_cns),'N'),
	coalesce(max(ie_consiste_codigo_ans),'S'),
	coalesce(max(ie_mascara_cid), 'N'),
	coalesce(max(ie_tipo_saida_parcial), 'S'),
	coalesce(max(ie_consiste_valor_guia), 'N'),
	coalesce(max(ie_obito_parcial), 'S'),
	coalesce(max(ie_consiste_tuss_autor), 'N'),
	coalesce(max(ie_consiste_just_espec_opm), 'N'),
	coalesce(max(ie_participante_ri), 'N'),
	coalesce(max(ie_cons_dias_solic_int), 'S'),
	coalesce(max(qt_guias_protocolo),0)
into STRICT	count_param_w,
	ie_cid_spsadt_w,
	ie_consiste_codigo_w,
	ie_exec_spsadt_w,
	ie_consiste_tiss_w,
	ie_proc_partic_w,
	ie_consiste_autor_spsadt_w,
	ie_consiste_desp_neg_w,
	ie_consiste_via_acesso_w,
	ie_crm_w,
	ie_consistir_obs_w,
	ie_consiste_indicacao_w,
	ie_consistir_proc_w,
	ie_consistir_decl_obito_w,
	ie_consiste_tec_util_w,
	ie_consistir_guia_senha_w,
	IE_MEDICO_SOLIC_ATEND_w,
	ie_consiste_tipo_saida_w,
	ie_consiste_cid_autor_w,
	ie_consistir_uf_crm_solic_w,
	IE_CONSISTIR_GUIA_DUP_W,
	ie_consiste_proc_neg_w,
	ie_cons_tempo_doenca_w,
	ie_consiste_cbo_w,
	ie_consiste_senha_autor_w,
	ie_consiste_qt_proc_w,
	ie_consistir_cpf_w,
	ie_cid_ri_w,
	ie_guia_numerica_w,
	ie_consiste_grau_partic_w,
	ie_consiste_cns_w,
	ie_consiste_codigo_ans_w,
	ie_mascara_cid_w,
	ie_tipo_saida_parcial_w,
	ie_consiste_valor_guia_w,
	ie_obito_parcial_w,
	ie_consiste_tuss_autor_w,
	ie_consiste_just_espec_opm_w,
	ie_participante_ri_w,
	ie_cons_dias_solic_int_w,
	qt_guias_permitidas_w
from	tiss_parametros_convenio
where	cd_convenio		= cd_convenio_w
and	cd_estabelecimento	= cd_estabelecimento_w;

select	coalesce(max(ie_gravar_log_inconsist),'N')
into STRICT	ie_gravar_log_inconsist_w
from	tiss_parametros
where	cd_estabelecimento	= cd_estabelecimento_w;

CALL tiss_convenio_pck.set_gravar_log_inconsist(ie_gravar_log_inconsist_w);

if (count_param_w > 0) then

	select	ie_tipo_convenio
	into STRICT	ie_tipo_convenio_w
	from	convenio
	where	cd_convenio		= cd_convenio_w;

	if (coalesce(nr_sequencia_autor_p,0) > 0) and (ie_tipo_convenio_w not in ('1','3')) and (ie_consiste_tiss_w = 'S') then

		TISS_OBTER_PROJETO_TISS_AUTOR(cd_estabelecimento_w, cd_convenio_w, nr_sequencia_autor_p, ie_tipo_autorizacao_w, nr_seq_estagio_w, nr_seq_projeto_autor_w, ie_tiss_tipo_guia_autor_w);

		select tiss_convenio_pck.tiss_obter_versao(cd_convenio_w, cd_estabelecimento_w, dt_mesano_referencia_w, ie_tiss_tipo_guia_autor_w)
		into STRICT ds_versao_autor_w
		;

		-- inconsistencias do cabecalho da mensagem
		select	Obter_Valor_Conv_Estab(cd_convenio, cd_estabelecimento_w, 'CD_INTERNO'),
			cd_cgc
		into STRICT	cd_interno_w,
			cd_cgc_w
		from	convenio
		where	cd_convenio	= cd_convenio_w;

		if (coalesce(cd_interno_w::text, '') = '') and (coalesce(ie_consiste_codigo_w,'S') = 'S') then
			CALL tiss_gravar_inconsistencia(1,
				nr_sequencia_autor_p,
				null,
				null,
				nm_usuario_p,
				null);
		end if;

		select	max(cd_ans)
		into STRICT	cd_ans_w
		from	pessoa_juridica
		where	cd_cgc		= cd_cgc_w;

		if (coalesce(cd_ans_w::text, '') = '') and (ie_consiste_codigo_ans_w = 'S') then
			CALL tiss_gravar_inconsistencia(3,
				nr_sequencia_autor_p,
				null,
				null,
				nm_usuario_p,
				null);
		end if;

		-- inconsistencias dos itens da mensagem
		select	max(cd_plano_convenio),
			max(cd_usuario_convenio),
			max(cd_categoria)
		into STRICT	cd_plano_convenio_w,
			cd_usuario_convenio_w,
			cd_categoria_conv_w
		from	atend_categoria_convenio
		where	nr_atendimento						= nr_atendimento_w
		and	obter_atecaco_atend_conv(nr_atendimento, cd_convenio_w) 	= nr_seq_interno;

		if (coalesce(cd_plano_convenio_w::text, '') = '') then
			select	max(ds_plano)
			into STRICT	cd_plano_convenio_w
			from	TISS_DADOS_PACIENTE_V
			where	nr_sequencia_autor	= nr_sequencia_autor_p;
		end if;

		if (coalesce(cd_usuario_convenio_w::text, '') = '') then
			select	max(cd_usuario_convenio)
			into STRICT	cd_usuario_convenio_w
			from	TISS_DADOS_PACIENTE_V
			where	nr_sequencia_autor	= nr_sequencia_autor_p;
		end if;

		if (coalesce(cd_plano_convenio_w::text, '') = '') and (obter_se_projeto_versao(0,12,ds_versao_autor_w,0) = 'N') then --Na versao 3 nao existe informacao de plano
			CALL tiss_gravar_inconsistencia(10,
				nr_sequencia_autor_p,
				null,
				null,
				nm_usuario_p,
				null);
		end if;

		if (coalesce(cd_usuario_convenio_w::text, '') = '') then
			CALL tiss_gravar_inconsistencia(11,
				nr_sequencia_autor_p,
				null,
				null,
				nm_usuario_p,
				null);
		end if;

		select	max(ie_tipo_autorizacao),
			max(nr_seq_agenda_consulta),
			max(qt_dia_solicitado),
			max(ie_tiss_tipo_anexo_autor)			
		into STRICT	ie_tipo_autorizacao_w,
			nr_seq_agenda_consulta_w,
			qt_dia_solicitado_w,
			ie_tiss_tipo_anexo_autor_w			
		from	autorizacao_convenio
		where	nr_sequencia = nr_sequencia_autor_p;

		select	count(*)
		into STRICT	cont_w
		from	tiss_diagnostico_v
		where	nr_sequencia_autor 	= nr_sequencia_autor_p
		and	ds_versao		= '2.01.01'
		and	ie_origem		in ('AC','ACD');

		if (coalesce(ie_consiste_cid_autor_w, 'S') = 'S') and (ie_tipo_autorizacao_w	in ('3', '4', '6')) and (cont_w 		= 0) and (coalesce(nr_seq_agenda_consulta_w::text, '') = '') then
			CALL tiss_gravar_inconsistencia(9,
				nr_sequencia_autor_p,
				null,
				null,
				nm_usuario_p,
				null);
		end if;

		select	count(*)
		into STRICT	cont_w
		from	procedimento_autorizado
		where	nr_sequencia_autor	= nr_sequencia_autor_p;

		if (cont_w = 0) and (ie_tiss_tipo_guia_autor_w <> '8') and --Na prorrogacao procedimento nao e obrigatorio
			((coalesce(ie_tiss_tipo_anexo_autor_w::text, '') = '') and (obter_se_projeto_versao(0,12,ds_versao_autor_w,0) = 'N')) then --Na V3 Se anexo clinico, nao e obrigado ter um procedimento.
			CALL tiss_gravar_inconsistencia(12,
				nr_sequencia_autor_p,
				null,
				null,
				nm_usuario_p,
				null);
		end if;

		select	max(ie_carater_int_tiss)
		into STRICT	ie_carater_internacao_w
		from	autorizacao_convenio
		where	nr_sequencia	= nr_sequencia_autor_p;

		if (coalesce(ie_carater_internacao_w::text, '') = '') and (ie_tipo_autorizacao_w	= '1') then
			CALL tiss_gravar_inconsistencia(37,
				nr_sequencia_autor_p,
				null,
				null,
				nm_usuario_p,
				null);
		end if;

		select	max(sg_conselho),
            max(uf_crm),
            max(nm_medico_solicitante)
		into STRICT	sg_conselho_w,
            uf_crm_w,
            nm_medico_solicitante_w
		from	tiss_dados_solicitante_v
		where	nr_sequencia_autor	= nr_sequencia_autor_p
		and	ds_versao		= '2.01.01'
		and	ie_origem		= 'AC';

		if (coalesce(sg_conselho_w::text, '') = '') then
			CALL tiss_gravar_inconsistencia(6,
				nr_sequencia_autor_p,
				null,
				null,
				nm_usuario_p,
				null);
		elsif (sg_conselho_w not in ('CRAS','COREN','CRF','CREFITO','CRM','CRV','CRN','CRO','CRP','OUT','CRFA')) then
			CALL tiss_gravar_inconsistencia(25,
				nr_sequencia_autor_p,
				null,
				null,
				nm_usuario_p,
				null);
		end if;

        if	((coalesce(uf_crm_w::text, '') = '') and (ie_consistir_uf_crm_solic_w = 'S')) then
                CALL tiss_gravar_inconsistencia(21,
                    nr_sequencia_autor_p,
                    null,
                    null,
                    nm_usuario_p,
                    ds_exp_medico_w || nm_medico_solicitante_w);
					end if;

		if (ie_consiste_cns_w = 'S') then

			select	max(nr_cartao_nac_sus)
			into STRICT	nr_cartao_nac_sus_w
			from	tiss_dados_paciente_v
			where	nr_sequencia_autor	= nr_sequencia_autor_p;

			if (coalesce(nr_cartao_nac_sus_w::text, '') = '') then
				CALL tiss_gravar_inconsistencia(68,
					nr_sequencia_autor_p,
					null,
					null,
					nm_usuario_p,
					null);
			end if;

			if (length(nr_cartao_nac_sus_w) > 15) then
				CALL tiss_gravar_inconsistencia(88,
					nr_sequencia_autor_p,
					null,
					null,
					nm_usuario_p,
					'CNS: ' || nr_cartao_nac_sus_w);
			end if;

		end if;

		--lhalves OS 779352 em 26/08/2014
		if (coalesce(ie_consiste_tuss_autor_w,'N') = 'S') then

			ds_inconsistencia_tuss_w	:= null;		
			open C13;
			loop
			fetch C13 into	
				c13_w;
			EXIT WHEN NOT FOUND; /* apply on C13 */
				begin								
				ds_inconsistencia_tuss_w := substr(ds_inconsistencia_tuss_w||'Item: '|| c13_w.cd_item ||' - '||c13_w.ds_item || chr(13), 1, 1999);
				end;
			end loop;
			close C13;

			if (ds_inconsistencia_tuss_w IS NOT NULL AND ds_inconsistencia_tuss_w::text <> '') then
				CALL tiss_gravar_inconsistencia(83,
					nr_sequencia_autor_p,
					null,
					null,
					nm_usuario_p,
					ds_inconsistencia_tuss_w);
			end if;		
		end if;

		if (obter_se_projeto_versao(0,12,ds_versao_autor_w,0) = 'S') then --Inconsistencias da versao 3.01.00
			select	max(a.nm_medico_solicitante),
				max(a.cd_cbo_saude) cd_cbo_saude
			into STRICT	nm_medico_solicitante_w,
				cd_cbo_saude_w
			from	tiss_dados_solicitante_v a
			where	a.nr_sequencia_autor	= nr_sequencia_autor_p
			and	a.ds_versao		= '2.01.01'
			and	a.ie_origem		= 'AC';

			if (nm_medico_solicitante_w IS NOT NULL AND nm_medico_solicitante_w::text <> '') and (coalesce(cd_cbo_saude_w::text, '') = '') then
				CALL tiss_gravar_inconsistencia(79,nr_sequencia_autor_p,null,null,nm_usuario_p, ds_exp_medico_w || nm_medico_solicitante_w);				
			end if;

			if (nm_medico_solicitante_w IS NOT NULL AND nm_medico_solicitante_w::text <> '') and (cd_cbo_saude_w IS NOT NULL AND cd_cbo_saude_w::text <> '') then

				select	max(nr_sequencia)
				into STRICT	nr_seq_cbo_w
				from	cbo_saude
				where	cd_cbo	= cd_cbo_saude_w
				and	coalesce(ie_situacao,'A') = 'A';

				if (TISS_OBTER_SE_CBO_VERSAO(nr_seq_cbo_w,ds_versao_autor_w) <> 'S') then
					CALL tiss_gravar_inconsistencia(80,	nr_sequencia_autor_p,null,null,nm_usuario_p,
					ds_exp_medico_w ||nm_medico_solicitante_w|| chr(13) ||
					'CBOS: '||cd_cbo_saude_w|| chr(13)||
					ds_exp_versao_tiss_convenio_w ||ds_versao_autor_w);				
				end if;

			end if;	

			if (ie_tiss_tipo_anexo_autor_w = '1') then --OPME
				select	max(ds_justificativa),
					max(ds_especific_mat)
				into STRICT	ds_justificativa_tec_w,
					ds_especific_mat_w
				from	tiss_anexo_guia
				where	nr_sequencia_autor	= nr_sequencia_autor_p;

				if (ie_consiste_just_espec_opm_w = 'S') and (coalesce(ds_justificativa_tec_w::text, '') = '' or coalesce(ds_especific_mat_w::text, '') = '') then

					CALL tiss_gravar_inconsistencia(84,nr_sequencia_autor_p,null,null,nm_usuario_p,null);

				end if;			

			elsif (ie_tiss_tipo_anexo_autor_w = '2') then --Quimio
				select	max(nr_telefone_contrat),
					max(nm_contratado)
				into STRICT	nr_telefone_contrat_w,
					nm_contratado_anexo_w	
				from	tiss_anexo_guia
				where	nr_sequencia_autor	= nr_sequencia_autor_p;

				if (coalesce(nr_telefone_contrat_w::text, '') = '') then
					CALL tiss_gravar_inconsistencia(72,nr_sequencia_autor_p,null,null,nm_usuario_p, ds_exp_medico_w || nm_contratado_anexo_w);
				end if;

				select	max(cd_estadiamento_tumor),
					max(cd_finalidade_tratamento),
					max(cd_ecog),
					max(ds_diag_histopatologico),
					max(cd_tipo_quimio),
					max(ds_plano_terapeutico)
				into STRICT	cd_estadiamento_tumor_w,
					cd_finalidade_tratamento_w,
					cd_ecog_w,
					ds_diag_histopatologico_w,
					cd_tipo_quimio_w,
					ds_plano_terapeutico_w
				from	tiss_anexo_guia_diag a,
					tiss_anexo_guia b
				where	a.nr_seq_guia		= b.nr_sequencia
				and	b.nr_sequencia_autor	= nr_sequencia_autor_p;

				if (coalesce(cd_estadiamento_tumor_w::text, '') = '') then
					CALL tiss_gravar_inconsistencia(73,nr_sequencia_autor_p,null,null,nm_usuario_p,null);
				end if;
				if (coalesce(cd_finalidade_tratamento_w::text, '') = '') then
					CALL tiss_gravar_inconsistencia(74,nr_sequencia_autor_p,null,null,nm_usuario_p,null);
				end if;
				if (coalesce(cd_ecog_w::text, '') = '') then
					CALL tiss_gravar_inconsistencia(75,nr_sequencia_autor_p,null,null,nm_usuario_p,null);
				end if;
				if (coalesce(ds_diag_histopatologico_w::text, '') = '') then
					CALL tiss_gravar_inconsistencia(76,nr_sequencia_autor_p,null,null,nm_usuario_p,null);
				end if;
				if (coalesce(cd_tipo_quimio_w::text, '') = '') then
					CALL tiss_gravar_inconsistencia(77,nr_sequencia_autor_p,null,null,nm_usuario_p,null);
				end if;
				if (coalesce(ds_plano_terapeutico_w::text, '') = '') then
					CALL tiss_gravar_inconsistencia(78,nr_sequencia_autor_p,null,null,nm_usuario_p,null);
				end if;

				open C12;
				loop
				fetch C12 into	
					cd_item_w,
					ds_item_w;
				EXIT WHEN NOT FOUND; /* apply on C12 */
					begin

					CALL tiss_gravar_inconsistencia(81,nr_sequencia_autor_p,null,null,nm_usuario_p,
								'Medicamento: '||cd_item_w||' - '||ds_item_w);

					end;
				end loop;
				close C12;

			end if;

			if (ie_tipo_autorizacao_w in ('1','2')) and (coalesce(qt_dia_solicitado_w::text, '') = '') and (ie_cons_dias_solic_int_w = 'S') then

				CALL tiss_gravar_inconsistencia(82,nr_sequencia_autor_p,null,null,nm_usuario_p,null);

			end if;

		end if;

		if	((ie_tiss_tipo_guia_autor_w	= '1') or (ie_tiss_tipo_guia_autor_w	= '2') or (ie_tiss_tipo_guia_autor_w	= '8'))and (coalesce(ds_indicacao_w::text, '') = '') and (ie_consiste_indicacao_w	= 'S') then

			CALL tiss_gravar_inconsistencia(50,
				nr_sequencia_autor_p,
				null,
				null,
				nm_usuario_p,
				'Atendimento: ' || nr_atendimento_w || chr(13) || chr(10) ||
				ds_exp_autorizacao_w || nr_sequencia_autor_p);
		end if;

	elsif	(((coalesce(nr_seq_protocolo_p,0) > 0) and (qt_contas_protocolo_w > 0)) or (coalesce(nr_interno_conta_p, 0) > 0)) and (ie_tipo_convenio_w not in ('1','3')) and (ie_consiste_tiss_w = 'S') then

		if (coalesce(nr_seq_protocolo_p, 0) > 0) then
			select	count(*)
			into STRICT	qt_guias_w
			from	tiss_conta_guia a,
				tiss_protocolo_guia c
			where	c.nr_sequencia		= a.nr_seq_prot_guia
			and	c.nr_seq_protocolo	= nr_seq_protocolo_p
			and	a.ie_tiss_tipo_guia	= '4';

			select	count(*)
			into STRICT	qt_guias_RI_w
			from	tiss_conta_guia a,
				tiss_protocolo_guia c
			where	c.nr_sequencia		= a.nr_seq_prot_guia
			and	c.nr_seq_protocolo	= nr_seq_protocolo_p
			and	a.ie_tiss_tipo_guia	= '5';

			select	count(*)
			into STRICT	qt_guias_honor_w
			from	tiss_conta_guia a,
				tiss_protocolo_guia c
			where	c.nr_sequencia		= a.nr_seq_prot_guia
			and	c.nr_seq_protocolo	= nr_seq_protocolo_p
			and	a.ie_tiss_tipo_guia	= '6';

			if	((coalesce(ds_versao_w, '2.01.02')	<> '2.01.01') or (coalesce(ds_versao_w, '2.01.02')	<> '2.02.02')) and
				((coalesce(qt_guias_w, 0)		> 100) or (coalesce(qt_guias_RI_w, 0) 		> 100) or (coalesce(qt_guias_honor_w, 0) 	> 100)) then
				CALL tiss_gravar_inconsistencia(49,
					null,
					null,
					nr_seq_protocolo_p,
					nm_usuario_p,
					ds_exp_guia_ri_w || qt_guias_RI_w || chr(13) ||
					ds_exp_guia_honor_indiv_w || qt_guias_honor_w || chr(13) ||
					'Guias de SP/SADT: ' || qt_guias_w);
			end if;
		end if;	

		if	((coalesce(nr_interno_conta_p, 0) > 0) and (coalesce(IE_CONSISTIR_GUIA_DUP_W, 'N') in ('S', 'C'))) then

			open c09;
			loop
			fetch c09 into
				cd_autorizacao_guia_w,
				nr_atend_conta_w;
			EXIT WHEN NOT FOUND; /* apply on c09 */			

				if (coalesce(IE_CONSISTIR_GUIA_DUP_W, 'N') = 'S') then
					select	count(*),
						max(a.nr_interno_conta)
					into STRICT	cont_guia_dup_w,
						nr_interno_conta_dup_w
					from	conta_paciente_guia a,
						conta_paciente b
					where	a.cd_autorizacao				= cd_autorizacao_guia_w
					and 	a.nr_atendimento 				= nr_atend_conta_w
					and	coalesce(b.ie_cancelamento::text, '') = ''
					and	a.nr_interno_conta				= b.nr_interno_conta
					and	b.cd_convenio_parametro				= obter_conv_conta(nr_interno_conta_p);

				elsif (coalesce(IE_CONSISTIR_GUIA_DUP_W, 'N') = 'C') then
					select	count(*),
						max(a.nr_interno_conta)
					into STRICT	cont_guia_dup_w,
						nr_interno_conta_dup_w
					from	conta_paciente_guia a,
						conta_paciente b
					where	b.nr_interno_conta				= a.nr_interno_conta
					and	coalesce(b.ie_cancelamento::text, '') = ''
					and	a.cd_autorizacao				= cd_autorizacao_guia_w
					and	b.cd_convenio_parametro				= cd_convenio_w;
				end if;

				if (cont_guia_dup_w > 1) then

					CALL tiss_gravar_inconsistencia(57,
						null,
						nr_interno_conta_p,
						null,
						nm_usuario_p,
						ds_exp_nr_guia_dup_w || cd_autorizacao_guia_w || chr(13) ||
						'Conta: ' || nr_interno_conta_dup_w);
				end if;
			end loop;
			close c09;

		end if;
		
		if((coalesce(nr_seq_protocolo_p,0) > 0) and (qt_guias_permitidas_w > 0)) then

			select 	count(*)
			into STRICT	qt_guias_protocolo_w
			from   	conta_paciente c,
				tiss_conta_guia a
			where  	c.nr_interno_conta 	= a.nr_interno_conta
			and    	c.nr_seq_protocolo	= nr_seq_protocolo_p;
		
			if (qt_guias_protocolo_w > qt_guias_permitidas_w) then

				CALL tiss_gravar_inconsistencia(89,
					null,
					null,
					nr_seq_protocolo_p,
					nm_usuario_p,
					ds_exp_protocolo_w||nr_seq_protocolo_p|| chr(13) ||
					ds_exp_nr_guia_prot_w||qt_guias_protocolo_w);
			end if;
			
		end if;

		select	Obter_Valor_Conv_Estab(cd_convenio, cd_estabelecimento_w, 'CD_INTERNO'),
			cd_cgc
		into STRICT	cd_interno_w,
			cd_cgc_w
		from	convenio
		where	cd_convenio	= cd_convenio_w;

		if (coalesce(cd_interno_w::text, '') = '') and (coalesce(ie_consiste_codigo_w,'S') = 'S') then
			CALL tiss_gravar_inconsistencia(	1,
				null,
				nr_interno_conta_p,
				nr_seq_protocolo_p,
				nm_usuario_p,
				null);
		end if;

		select	cd_ans
		into STRICT	cd_ans_w
		from	pessoa_juridica
		where	cd_cgc		= cd_cgc_w;

		if (coalesce(cd_ans_w::text, '') = '') and (ie_consiste_codigo_ans_w = 'S') then
			CALL tiss_gravar_inconsistencia(3,
				null,
				nr_interno_conta_p,
				nr_seq_protocolo_p,
				nm_usuario_p,
				null);
		end if;

		if (coalesce(nr_interno_conta_p,0) > 0) and (ie_consiste_valor_guia_w <> 'N') then

			/*
			S - Consiste
			N - Nao consisre
			H - Considerar valor das guias de honorario individual na consistencia de valor total das guias TISS com valor do protocolo
			*/
			if (ie_consiste_valor_guia_w = 'H') then

				select 	coalesce(sum(a.vl_total),0) vl_total_guias
				into STRICT	vl_total_guias_w
				from   	tiss_conta_guia a
				where  	a.nr_interno_conta   = nr_interno_conta_p;

			else
				select 	coalesce(sum(a.vl_total),0) vl_total_guias
				into STRICT	vl_total_guias_w
				from   	tiss_conta_guia a
				where  	a.nr_interno_conta   = nr_interno_conta_p
				and 	a.ie_tiss_tipo_guia  <>  '6';

			end if;

			select 	coalesce(obter_valor_conta(nr_interno_conta_p,0),0)
			into STRICT	vl_conta_w
			;

			if (vl_total_guias_w <> vl_conta_w) then

				CALL tiss_gravar_inconsistencia(71,
					null,
					nr_interno_conta_p,
					null,
					nm_usuario_p,
					ds_exp_total_conta_dif_guias || chr(13) || chr(10) ||
					'Valor Conta: ' || vl_conta_w || chr(13) ||
					'Valor Guias: ' || vl_total_guias_w);

			end if;
		end if;

		open c01;
		loop
		fetch c01 into
			ie_tipo_guia_w,
			cd_autorizacao_w,
			nr_interno_conta_w,
			nr_atendimento_w,
			ie_honorario_w,
			ie_tipo_atend_tiss_w,
			ie_tipo_saida_tiss_w,
			ie_clinica_w,
			cd_autorizacao_tag_w,
			cd_medico_guia_w,
			cd_tipo_acomodacao_w,
			nr_seq_conta_guia_w,
			vl_total_guia_w,
			NR_DECLARACAO_OBITO_w,
			ie_tipo_saida_consulta_w,
			nr_dnv_w,
			ds_indicacao_w,
			cd_autorizacao_princ_w,
			nr_cartao_nac_sus_w,
			ds_tipo_fatur_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
	--		begin
			if (ie_tipo_guia_w = '3') and (coalesce(ie_tipo_saida_consulta_w::text, '') = '') and (coalesce(ie_consiste_tipo_saida_w, 'S') = 'S') then
				CALL tiss_gravar_inconsistencia(38,
					null,
					nr_interno_conta_p,
					nr_seq_protocolo_p,
					nm_usuario_p,
					'Atendimento: ' || nr_atendimento_w || chr(13) || chr(10) ||
					'Conta: ' || nr_interno_conta_w);

			end if;

			if (coalesce(ie_consistir_guia_senha_w,'N')	= 'S') then

				select	coalesce(count(distinct a.cd_senha), 0)
				into STRICT	cont_senha_w
				from	tiss_conta_guia a
				where	nr_interno_conta	= nr_interno_conta_w
				and	cd_autorizacao		= cd_autorizacao_w;

				if (coalesce(cont_senha_w,0) > 1) then
					CALL tiss_gravar_inconsistencia(56,
						null,
						nr_interno_conta_p,
						nr_seq_protocolo_p,
						nm_usuario_p,
						'Atendimento: ' || nr_atendimento_w || chr(13) || chr(10) ||
						'Conta: ' || nr_interno_conta_w || chr(13) || chr(10) ||
						'Guia: ' || cd_autorizacao_w);
				end if;

			end if;

			select	max(cd_motivo_alta)
			into STRICT	cd_motivo_alta_w
			from	atendimento_paciente
			where	nr_atendimento	= nr_atendimento_w;

			IE_OBITO_w := null;
			ds_tipo_guia_w := 'X';
			if (cd_motivo_alta_w IS NOT NULL AND cd_motivo_alta_w::text <> '') then

				select	IE_OBITO,
					CASE WHEN ie_tipo_guia_w=1 THEN 'I' WHEN ie_tipo_guia_w=3 THEN 'C' WHEN ie_tipo_guia_w=4 THEN 'SPSADT'  ELSE 'X' END ,
					coalesce(ie_exige_declaracao,'X')
				into STRICT	IE_OBITO_w,
					ds_tipo_guia_w,
					IE_EXIGE_DECLARACAO_w
				from	motivo_alta
				where	cd_motivo_alta	= cd_motivo_alta_w;

				if (IE_OBITO_w = 'S') and
					((coalesce(NR_DECLARACAO_OBITO_w::text, '') = '') and (IE_EXIGE_DECLARACAO_w <> 'N')) and
					((coalesce(tiss_obter_tipo_saida(ds_tipo_guia_w,nr_interno_conta_w),'X') <> '42') and (ie_consistir_decl_obito_w = 'S')) and
					((ie_obito_parcial_w = 'S') or (ie_obito_parcial_w = 'N' and ds_tipo_fatur_w <> 'P')) then
					CALL tiss_gravar_inconsistencia(36,
						null,
						nr_interno_conta_p,
						nr_seq_protocolo_p,
						nm_usuario_p,
						'Atendimento: ' || nr_atendimento_w || chr(13) || chr(10) ||
						'Conta: ' || nr_interno_conta_w || chr(13) || chr(10) ||
						'Guia: ' || cd_autorizacao_w);
				end if;

			end if;

			select	max(ie_tipo_atendimento),
				max(ds_observacao)
			into STRICT	ie_tipo_atendimento_w,
				ds_observacao_w
			from	atendimento_paciente
			where	nr_atendimento	= nr_atendimento_w;

			if (ie_consistir_obs_w	= 'S') and (ie_tipo_guia_w		in ('3', '4')) and (coalesce(ds_observacao_w::text, '') = '') then
				CALL tiss_gravar_inconsistencia(52,
					null,
					nr_interno_conta_p,
					nr_seq_protocolo_p,
					nm_usuario_p,
					ds_exp_convenio_w || obter_nome_convenio(cd_convenio_w));
			end if;

			if (ie_tipo_atendimento_w	= 1) and (ie_consistir_proc_w	= 'S') then

				select	count(*)
				into STRICT	cont_w
				from	procedimento b,
					procedimento_paciente a
				where	a.cd_procedimento	= b.cd_procedimento
				and	a.ie_origem_proced	= b.ie_origem_proced
				and	a.nr_interno_conta	= nr_interno_conta_w
				and	b.ie_classificacao	= 1
				and	coalesce(a.cd_motivo_exc_conta::text, '') = '';

				if (cont_w = 0) then
					CALL tiss_gravar_inconsistencia(15,
						null,
						nr_interno_conta_p,
						nr_seq_protocolo_p,
						nm_usuario_p,
						'Atendimento: ' || nr_atendimento_w || chr(13) || chr(10) ||
						'Conta: ' || nr_interno_conta_w);
				end if;
			end if;

			/*lhalves OS 225008 em 03/07/2010*/

			if (ie_consiste_senha_autor_w = 'S') then

				select 	count(*)
				into STRICT 	count_senha_autor_w
				from 	tiss_conta_guia a,
					conta_paciente b	
				where	a.nr_interno_conta 	= nr_interno_conta_w
				and 	a.nr_interno_conta	= b.nr_interno_conta
				and 	coalesce(a.cd_senha::text, '') = ''
				and 	exists (SELECT 1
						from 	autorizacao_convenio x,
							estagio_autorizacao y
						where	x.nr_atendimento  	= b.nr_atendimento
						and	y.nr_sequencia		= x.nr_seq_estagio
						and 	coalesce(x.cd_senha::text, '') = ''
						and	y.ie_interno not in ('70','90'));				

				if (count_senha_autor_w > 0) then
					CALL tiss_gravar_inconsistencia(64,
						null,
						nr_interno_conta_p,
						nr_seq_protocolo_p,
						nm_usuario_p,
						'Atendimento: ' || nr_atendimento_w);
				end if;			
			end if;

			if (ie_consiste_qt_proc_w = 'S') then /*lhalves OS268010 em 26/11/2010*/
		

				open c10;
				loop
				fetch c10 into
					qt_proc_guia_w,
					cd_procedimento_w,
					ds_proc_guia_w,
					cd_autorizacao_proc_guia_w;
				EXIT WHEN NOT FOUND; /* apply on c10 */

					select	coalesce(sum(qt_procedimento),0)
					into STRICT	qt_proc_conta_w
					from 	procedimento_paciente
					where	nr_interno_conta	= nr_interno_conta_w
					and 	cd_procedimento		= cd_procedimento_w
					and	cd_convenio		= cd_convenio_w
					and	coalesce(nr_doc_convenio,coalesce(cd_autorizacao_proc_guia_w,'X')) = coalesce(cd_autorizacao_proc_guia_w,'X')
					and 	coalesce(cd_motivo_exc_conta::text, '') = '';

					if (qt_proc_conta_w > qt_proc_guia_w) then
						CALL tiss_gravar_inconsistencia(65,
									null,
									nr_interno_conta_p,
									nr_seq_protocolo_p,
									nm_usuario_p,
									'Conta: ' || nr_interno_conta_w || chr(13) || chr(10) ||
									'Procedimento: ' || cd_procedimento_w ||' - '||ds_proc_guia_w|| chr(13) || chr(10) ||
									'Qtd Proc Guia: '||qt_proc_guia_w||chr(13) || chr(10) ||
									'Qtd Proc Conta: '||qt_proc_conta_w);
					end if;

				end loop;
				close c10;
			end if;

			if (coalesce(ie_guia_numerica_w,'N') = 'S') and
				(((coalesce(obter_se_somente_numero(cd_autorizacao_w),'S') = 'N') and coalesce(cd_autorizacao_w, ds_nao_informada_w) <> ds_nao_informada_w) or
				 ((coalesce(obter_se_somente_numero(cd_autorizacao_princ_w),'S') = 'N') and coalesce(cd_autorizacao_princ_w, ds_nao_informada_w) <> ds_nao_informada_w)) then

				CALL tiss_gravar_inconsistencia(67,
						null,
						nr_interno_conta_p,
						nr_seq_protocolo_p,
						nm_usuario_p,
						'Conta: ' || nr_interno_conta_w || chr(13) || chr(10) ||
						'Guia: ' || cd_autorizacao_w || chr(13) || chr(10) ||
						'Guia principal: ' || cd_autorizacao_princ_w);

			end if;

			if (ie_tipo_guia_w = '5') then

				open c08;
				loop
				fetch c08 into
					cd_cnes_w,
					ie_tipo_logradouro_w,
					ds_logradouro_w,
					cd_municipio_ibge_w,
					nr_endereco_w,
					sg_estado_w,
					cd_cep_w;
				EXIT WHEN NOT FOUND; /* apply on c08 */

					select	max(cd_cgc_prestador)
					into STRICT	cd_cgc_prestador_w
					from	tiss_conta_guia
					where	nr_sequencia	= nr_seq_conta_guia_w;
					-- Diego dos Santos em 25/06/2009 -> nao consistir os dados referentes a prestador se nao houver prestador na guia.
					if (cd_cgc_prestador_w IS NOT NULL AND cd_cgc_prestador_w::text <> '') then

						if (coalesce(cd_cnes_w::text, '') = '') then
							CALL tiss_gravar_inconsistencia(4,
								null,
								nr_interno_conta_p,
								nr_seq_protocolo_p,
								nm_usuario_p,
								'Atendimento: ' || nr_atendimento_w || chr(13) || chr(10) ||
								'Conta: ' || nr_interno_conta_w || chr(13) || chr(10) ||
								'CNPJ: ' || cd_cgc_prestador_w);
						end if;

						if (coalesce(ie_tipo_logradouro_w::text, '') = '') then
							CALL tiss_gravar_inconsistencia(39,
								null,
								nr_interno_conta_p,
								nr_seq_protocolo_p,
								nm_usuario_p,
								'Atendimento: ' || nr_atendimento_w || chr(13) || chr(10) ||
								'Conta: ' || nr_interno_conta_w);
						end if;

						if (coalesce(ds_logradouro_w::text, '') = '') then
							CALL tiss_gravar_inconsistencia(42,
								null,
								nr_interno_conta_p,
								nr_seq_protocolo_p,
								nm_usuario_p,
								'Atendimento: ' || nr_atendimento_w || chr(13) || chr(10) ||
								'Conta: ' || nr_interno_conta_w);
						end if;

						if (coalesce(nr_endereco_w::text, '') = '') then
							CALL tiss_gravar_inconsistencia(43,
								null,
								nr_interno_conta_p,
								nr_seq_protocolo_p,
								nm_usuario_p,
								'Atendimento: ' || nr_atendimento_w || chr(13) || chr(10) ||
								'Conta: ' || nr_interno_conta_w || chr(13) || chr(10) ||
								'CNPJ: ' || cd_cgc_prestador_w);
						end if;

						if (coalesce(cd_municipio_ibge_w::text, '') = '') then
							CALL tiss_gravar_inconsistencia(44,
								null,
								nr_interno_conta_p,
								nr_seq_protocolo_p,
								nm_usuario_p,
								'Atendimento: ' || nr_atendimento_w || chr(13) || chr(10) ||
								'Conta: ' || nr_interno_conta_w || chr(13) || chr(10) ||
								'CNPJ: ' || cd_cgc_prestador_w);
						end if;

						if (coalesce(sg_estado_w::text, '') = '') then
							CALL tiss_gravar_inconsistencia(45,
								null,
								nr_interno_conta_p,
								nr_seq_protocolo_p,
								nm_usuario_p,
								'Atendimento: ' || nr_atendimento_w || chr(13) || chr(10) ||
								'Conta: ' || nr_interno_conta_w);
						end if;

						if (coalesce(cd_cep_w::text, '') = '') then
							CALL tiss_gravar_inconsistencia(46,
								null,
								nr_interno_conta_p,
								nr_seq_protocolo_p,
								nm_usuario_p,
								'Atendimento: ' || nr_atendimento_w || chr(13) || chr(10) ||
								'Conta: ' || nr_interno_conta_w);
						end if;

					end if;

				end loop;
				close c08;

			end if;

			if (ie_tipo_guia_w = '4') then

				select	count(*)
				into STRICT	cont_w
				from	tiss_conta_contrat_solic
				where	nr_seq_guia	= nr_seq_conta_guia_w
				and	coalesce(nm_solicitante::text, '') = '';

				if (cont_w		> 0) and (coalesce(IE_MEDICO_SOLIC_ATEND_w,'S') <> 'N') then
					CALL tiss_gravar_inconsistencia(32,
						null,
						nr_interno_conta_p,
						nr_seq_protocolo_p,
						nm_usuario_p,
						'Atendimento: ' || nr_atendimento_w || chr(13) || chr(10) ||
						'Conta: ' || nr_interno_conta_w || chr(13) || chr(10) ||
						'Guia: ' || cd_autorizacao_w);
				end if;

			end if;

			/* Versao 3 foram inclusos mais tres digitos para o valor total. */

			if	((coalesce(vl_total_guia_w, 0)	> 99999) and (coalesce(ds_versao_w, '2.01.02')	= '2.01.02')) or
				((coalesce(vl_total_guia_w, 0)	> 99999999) and (coalesce(ds_versao_w, '2.01.02')	<> '2.01.02')) then
				CALL tiss_gravar_inconsistencia(33,
					null,
					nr_interno_conta_w,
					null,
					nm_usuario_p,
					'Conta: ' || nr_interno_conta_w || chr(13) || chr(10) ||
					'Guia: ' || cd_autorizacao_w);
			end if;

			open c07;
			loop
			fetch c07 into
				vl_despesas_w,
				ds_despesa_w,
				ie_tipo_despesa_w,
				dt_item_w,
				cd_edicao_amb_w,
				cd_despesa_w,
				cd_unidade_medida_tiss_w;
			EXIT WHEN NOT FOUND; /* apply on c07 */

				if (ie_consiste_desp_neg_w = 'S') and (coalesce(vl_despesas_w, 0)	< 0) then
					CALL tiss_gravar_inconsistencia(34,
						null,
						nr_interno_conta_w,
						null,
						nm_usuario_p,
						'Conta: ' || nr_interno_conta_w || chr(13) || chr(10) ||
						ds_exp_codigo_convenio_w || cd_despesa_w || chr(13) || chr(10) ||
						'Despesa conv.: ' || ds_despesa_w || chr(13) || chr(10) ||
						'Dt item: ' || to_char(dt_item_w, 'dd/mm/yyyy'));
				end if;

				if (obter_se_projeto_versao(0,12,ds_versao_w,0) = 'S') and (coalesce(cd_unidade_medida_tiss_w::text, '') = '') then

					CALL tiss_gravar_inconsistencia(69,
						null,
						nr_interno_conta_w,
						nr_seq_protocolo_p,
						nm_usuario_p,
						'Conta: ' || nr_interno_conta_w || chr(13) || chr(10) ||
						ds_exp_codigo_despesa_w || cd_despesa_w || chr(13) || chr(10) ||
						'Despesa: ' || ds_despesa_w || chr(13) || chr(10) ||
						'Dt item: ' || to_char(dt_item_w, 'dd/mm/yyyy'));

				end if;

			end loop;
			close c07;		

			if (ie_tipo_guia_w = '5') and (coalesce(cd_tipo_acomodacao_w::text, '') = '') then
				CALL tiss_gravar_inconsistencia(29,
					null,
					nr_interno_conta_p,
					nr_seq_protocolo_p,
					nm_usuario_p,
					'Atendimento: ' || nr_atendimento_w);
			end if;

			if (ie_tipo_guia_w = '4') then

				select	max(a.sg_conselho),
					max(a.nm_medico_executor),
					max(a.nr_cpf),
					max(a.nr_crm)
				into STRICT	sg_conselho_w,
					nm_medico_w,
					nr_cpf_w,
					nr_crm_aux_w
				from	tiss_medico_v a
				where	a.cd_medico		= cd_medico_guia_w;

				select	max(nr_sequencia)
				into STRICT	nr_sequencia_autor_w
				from	autorizacao_convenio
				where	nr_atendimento	= nr_atendimento_w
				and	cd_autorizacao	= cd_autorizacao_w;

				if (coalesce(nr_sequencia_autor_w::text, '') = '') and (ie_consiste_autor_spsadt_w = 'S') then
					CALL tiss_gravar_inconsistencia(31,
						null,
						nr_interno_conta_p,
						nr_seq_protocolo_p,
						nm_usuario_p,
						'Atendimento: ' || nr_atendimento_w || chr(13) || chr(10) ||
						'Conta: ' || nr_interno_conta_w || chr(13) || chr(10) ||
						'Guia: ' || cd_autorizacao_w);
				end if;
				
				select	count(*)	
				into STRICT	qt_exec_comp_w	
				from	tiss_conta_contrat_exec x	
				where	x.nm_contratado <> coalesce(x.nm_exec_compl,x.nm_contratado)	
				and	ie_exec_spsadt_w = 'N'	
				and	coalesce(x.nr_cpf_compl::text, '') = ''	
				and	coalesce(x.nr_cpf::text, '') = ''	
				and 	x.cd_pessoa_fisica = cd_medico_guia_w	
				and	tiss_obter_codigo_prestador(cd_convenio_w, cd_estabelecimento_w, cd_medico_guia_w, null, (null)::numeric , 'CI', NULL,ie_tipo_atendimento_w,cd_categoria_conv_w) is null	
				and	x.nr_seq_guia in (	SELECT 	t.nr_sequencia		
								from	tiss_conta_guia t	
								where	t.nr_interno_conta = nr_interno_conta_w	
								and 	t.ie_tiss_tipo_guia = '4');

				if (ie_exec_spsadt_w in ('N','S','MC','R','F','L')) and 	-- Neste caso, "N" = Medico do atendimento
					(nm_medico_w IS NOT NULL AND nm_medico_w::text <> '') and (qt_exec_comp_w = 0) then 	-- Edgar 27/07/2007, OS 63390, so consistir se o medico complementar da guia for obrigatorio
					if (ie_consistir_cpf_w = 'S') and (coalesce(nr_cpf_w::text, '') = '') and
						(((ie_crm_w = 'S') and (coalesce(nr_crm_aux_w::text, '') = '')) or
						 ie_crm_w   = 'N') then
						CALL tiss_gravar_inconsistencia(23,
							null,
							nr_interno_conta_p,
							nr_seq_protocolo_p,
							nm_usuario_p,
							'Atendimento: ' || nr_atendimento_w || chr(13) || chr(10) ||
							ds_exp_medico_w || nm_medico_w);
					elsif (length(nr_cpf_w) <> 11) and (ie_crm_w = 'N') then
						CALL tiss_gravar_inconsistencia(30,
							null,
							nr_interno_conta_p,
							nr_seq_protocolo_p,
							nm_usuario_p,
							'Atendimento: ' || nr_atendimento_w || chr(13) || chr(10) ||
							ds_exp_pessoa_fisica_w || nm_medico_w);
					end if;

					if (coalesce(sg_conselho_w::text, '') = '') then
						CALL tiss_gravar_inconsistencia(6,
							null,
							nr_interno_conta_p,
							nr_seq_protocolo_p,
							nm_usuario_p,
							'Atendimento: ' || nr_atendimento_w || chr(13) || chr(10) ||
							ds_exp_medico_w || nm_medico_w);
					elsif (sg_conselho_w not in ('CRAS','COREN','CRF','CREFITO','CRM','CRV','CRN','CRO','CRP','OUT','CRFA')) then
						CALL tiss_gravar_inconsistencia(25,
							null,
							nr_interno_conta_p,
							nr_seq_protocolo_p,
							nm_usuario_p,
							'Atendimento: ' || nr_atendimento_w || chr(13) || chr(10) ||
							ds_exp_medico_w || nm_medico_w);
					end if;
				end if;

			end if;

			-- inconsistencias dos itens da mensagem
			select	max(cd_plano_convenio),
				max(cd_usuario_convenio),
				max(cd_categoria)
			into STRICT	cd_plano_convenio_w,
				cd_usuario_convenio_w,
				cd_categoria_conv_w
			from	atend_categoria_convenio
			where	nr_atendimento				= nr_atendimento_w
			and	obter_atecaco_atend_conv(nr_atendimento, cd_convenio_w) 	= nr_seq_interno;


			if (coalesce(cd_plano_convenio_w::text, '') = '') and
				((obter_se_projeto_versao(0,12,ds_versao_w,0) = 'N') or --Na versao 3 nao existe o plano, apenas nas guias de Odonto.
				 (ie_tipo_guia_w = '11'))then
				CALL tiss_gravar_inconsistencia(10,
					null,
					nr_interno_conta_p,
					nr_seq_protocolo_p,
					nm_usuario_p,
					'Atendimento: ' || nr_atendimento_w);
			end if;

			if (coalesce(cd_usuario_convenio_w::text, '') = '') then
				CALL tiss_gravar_inconsistencia(11,
					null,
					nr_interno_conta_p,
					nr_seq_protocolo_p,
					nm_usuario_p,
					'Atendimento: ' || nr_atendimento_w);
			end if;

			select	CD_TABELA_CID,
				CD_CID,
				cd_cid_2,
				DS_CID,
				QT_TEMPO_CID,
				IE_UNIDADE_TEMPO_CID
			into STRICT	ds_tipo_tabela_w,
				cd_doenca_cid_w,
				cd_doenca_cid_2_w,
				ds_diagnostico_w,
				qt_tempo_cid_w,
				ie_unidade_tempo_cid_w
			from	tiss_conta_guia
			where	nr_sequencia	= nr_seq_conta_guia_w;

			if	((coalesce(ds_tipo_tabela_w::text, '') = '') or (coalesce(cd_doenca_cid_w::text, '') = '') or (coalesce(ds_diagnostico_w::text, '') = '')) and
				((coalesce(ie_tipo_atend_tiss_w, '0') in ('2', '3', '7')) or			-- rafael. os57280. 22/05/2007. tratar tipo atendimento.
				 (ie_tipo_guia_w	in ('4', '5'))) then			-- Retirado tipo de atendimento 5(exames). OS62081.
				if (ds_versao_projeto_w	= '2.01.01') or			-- edgar, 12/06/2007 os 57047, na versao 2.01.01 e obrigatorio
					((ie_tipo_guia_w	= '5') and (coalesce(ie_cid_ri_w,'S')	= 'S')) then			-- na versao 2.01.02, so eh obrigatorio na guia de internacao
					CALL tiss_gravar_inconsistencia(9,
						null,
						nr_interno_conta_p,
						nr_seq_protocolo_p,
						nm_usuario_p,
						'Atendimento: ' || nr_atendimento_w || chr(13) || chr(10) ||
						ds_exp_desc_diag_info_w);

				elsif (ds_versao_projeto_w	<> '2.01.01') and (nr_versao_tiss_w < 30000) and (ie_tipo_guia_w		= '4') and (coalesce(ie_cid_spsadt_w,'N') = 'S') then

					CALL tiss_gravar_inconsistencia(9,
						null,
						nr_interno_conta_p,
						nr_seq_protocolo_p,
						nm_usuario_p,
						'Atendimento: ' || nr_atendimento_w || chr(13) || chr(10) ||
						ds_exp_desc_diag_info_w);

				end if;

			end if;

			if 	(((cd_doenca_cid_w IS NOT NULL AND cd_doenca_cid_w::text <> '') or (ds_diagnostico_w IS NOT NULL AND ds_diagnostico_w::text <> '')) and
				((coalesce(ie_tipo_atend_tiss_w, 0) in (2, 3, 7)) or (ie_tipo_guia_w	in ('4', '5'))) 
				and (ie_cons_tempo_doenca_w = 'S') and
				((coalesce(qt_tempo_cid_w::text, '') = '') or (coalesce(ie_unidade_tempo_cid_w::text, '') = ''))) then 

				CALL tiss_gravar_inconsistencia(59,
						null,
						nr_interno_conta_p,
						nr_seq_protocolo_p,
						nm_usuario_p,
						'Atendimento: ' || nr_atendimento_w || chr(13) || chr(10) ||
						ds_exp_tempo_doenca_atend_w);
			end if;

			if (ie_tipo_guia_w = '4') and (coalesce(ie_tipo_atend_tiss_w::text, '') = '') then

				CALL tiss_gravar_inconsistencia(16,
					null,
					nr_interno_conta_p,
					nr_seq_protocolo_p,
					nm_usuario_p,
					'Atendimento: ' || nr_atendimento_w || chr(13) || chr(10) ||
					'Conta: ' || nr_interno_conta_w);

			end if;

			if (coalesce(ie_consiste_tipo_saida_w, 'S') = 'S') and (coalesce(ie_tipo_saida_tiss_w::text, '') = '') and (ie_tipo_saida_parcial_w = 'S' or coalesce(ds_tipo_fatur_w,'T') <> 'P') and
				(((ie_tipo_guia_w = '4') and
				  ((obter_se_projeto_versao(0,12,ds_versao_projeto_w,0) = 'N') or (coalesce(ie_obito_w,'N') = 'S' and (obter_se_projeto_versao(0,12,ds_versao_projeto_w,0) = 'S')))) or 
				 ((ie_tipo_guia_w = '5') and (coalesce(ds_versao_projeto_w,'0') <> '0'))) then

				CALL tiss_gravar_inconsistencia(18,
					null,
					nr_interno_conta_p,
					nr_seq_protocolo_p,
					nm_usuario_p,
					'Atendimento: ' || nr_atendimento_w || chr(13) || chr(10) ||
					'Conta: ' || nr_interno_conta_w);

			end if;

			if (ie_tipo_guia_w = '5') and (coalesce(ie_clinica_w,'X') not in ('1','2','3','4','5')) then

				CALL tiss_gravar_inconsistencia(24,
					null,
					nr_interno_conta_p,
					nr_seq_protocolo_p,
					nm_usuario_p,
					'Atendimento: ' || nr_atendimento_w);
			end if;

			begin
			select	1
			into STRICT	qt_regra_w
			from	tiss_regra_cid
			where	cd_estabelecimento	= cd_estabelecimento_w  LIMIT 1;		
			exception
			when others then
				qt_regra_w	:= 0;
			end;

			if (qt_regra_w > 0) then
				ie_envio_w := TISS_OBTER_SE_GERA_CID(nr_interno_conta_p, nr_seq_protocolo_p, ie_tipo_guia_w, ie_envio_w, nm_usuario_p);					
			end if;

			if (ie_tipo_guia_w	= '4') and (coalesce(ie_envio_w,'S') = 'S') and (coalesce(ds_indicacao_w::text, '') = '') and (coalesce(ie_tipo_atend_tiss_w, 'X') in ('02','03','04','08','09','10')) and (ie_consiste_indicacao_w	= 'S') then

				CALL tiss_gravar_inconsistencia(50,
					null,
					nr_interno_conta_p,
					nr_seq_protocolo_p,
					nm_usuario_p,
					'Atendimento: ' || nr_atendimento_w || chr(13) || chr(10) ||
					'Conta: ' || nr_interno_conta_w);
			end if;

			open C11;
			loop
			fetch C11 into	
				cd_doenca_aux_w;
			EXIT WHEN NOT FOUND; /* apply on C11 */
				begin			
				if (cd_doenca_aux_w IS NOT NULL AND cd_doenca_aux_w::text <> '') and (tiss_obter_regra_cid_invalido(cd_estabelecimento_w,cd_convenio_w,cd_doenca_aux_w,ie_tipo_atendimento_w) = 'S') then

					CALL tiss_gravar_inconsistencia(70,
						null,
						nr_interno_conta_p,
						nr_seq_protocolo_p,
						nm_usuario_p,
						'Atendimento: ' || nr_atendimento_w || chr(13) || chr(10) ||
						'Conta: ' || nr_interno_conta_w || chr(13) || chr(10) ||
						'CID: ' || cd_doenca_aux_w ||' - '||substr(Obter_Desc_CID_Doenca(cd_doenca_aux_w),1,255));
				end if;		

				end;
			end loop;
			close C11;		

			select	count(*)
			into STRICT	qt_nascimentos_w
			from	nascimento
			where	nr_atendimento		= nr_atendimento_w
			and	ie_unico_nasc_vivo	= 'S'
			and	coalesce(nr_dnv::text, '') = '';

			select	max(ie_tipo_nascimento)
			into STRICT	ie_tipo_nascimento_w
			from	nascimento
			where	nr_atendimento		= nr_atendimento_w
			and	ie_unico_nasc_vivo	= 'S'
			and	coalesce(nr_dnv::text, '') = '';

			if (coalesce(ie_clinica_w,'X')	= '3') and (coalesce(nr_dnv_w::text, '') = '') and (ie_tipo_nascimento_w	<> '2') and (ie_tipo_guia_w		= '5') and (qt_nascimentos_w	> 0) then

				CALL tiss_gravar_inconsistencia(47,
					null,
					nr_interno_conta_p,
					nr_seq_protocolo_p,
					nm_usuario_p,
					'Atendimento: ' || nr_atendimento_w);

			end if;

			if (ie_tipo_guia_w = '6') and (coalesce(cd_autorizacao_tag_w::text, '') = '') then

				CALL tiss_gravar_inconsistencia(26,
					null,
					nr_interno_conta_p,
					nr_seq_protocolo_p,
					nm_usuario_p,
					'Atendimento: ' || nr_atendimento_w || chr(13) || chr(10) ||
					'Conta: ' || nr_interno_conta_w);

			end if;

			if (ie_consiste_cns_w = 'S') and (coalesce(nr_cartao_nac_sus_w::text, '') = '') then
				CALL tiss_gravar_inconsistencia(68,
					null,
					nr_interno_conta_p,
					nr_seq_protocolo_p,
					nm_usuario_p,
					'Atendimento: ' || nr_atendimento_w ||' - '||obter_pessoa_atendimento(nr_atendimento_w,'N') || chr(13) || chr(10) ||				
					'Conta: ' || nr_interno_conta_w);			
			end if;

			if (ie_consiste_cns_w = 'S') and (length(nr_cartao_nac_sus_w) > 15) then
				CALL tiss_gravar_inconsistencia(88,
					null,
					nr_interno_conta_p,
					nr_seq_protocolo_p,
					nm_usuario_p,
					'Atendimento: ' || nr_atendimento_w ||' - '||obter_pessoa_atendimento(nr_atendimento_w,'N') || chr(13) || chr(10) ||				
					'Conta: ' || nr_interno_conta_w || chr(13) || chr(10) ||
					'CNS: ' || nr_cartao_nac_sus_w);
			end if;

			open c05;
			loop
			fetch c05 into
				sg_conselho_w,
				uf_crm_w,
				nm_medico_solicitante_w,
				cd_cgc_solic_w,
				nr_cpf_solic_w,
				cd_interno_solic_w,
				nm_contratado_solic_w,
				cd_cbos_w;
			EXIT WHEN NOT FOUND; /* apply on c05 */

				if (nm_medico_solicitante_w IS NOT NULL AND nm_medico_solicitante_w::text <> '') then
					if (coalesce(sg_conselho_w::text, '') = '') then
						CALL tiss_gravar_inconsistencia(6,
							null,
							nr_interno_conta_p,
							nr_seq_protocolo_p,
							nm_usuario_p,
							'Atendimento: ' || nr_atendimento_w || chr(13) || chr(10) ||
							ds_exp_medico_w || nm_medico_solicitante_w);
					elsif (sg_conselho_w not in ('CRAS','COREN','CRF','CREFITO','CRM','CRV','CRN','CRO','CRP','OUT','CRFA')) then
						CALL tiss_gravar_inconsistencia(25,
							null,
							nr_interno_conta_p,
							nr_seq_protocolo_p,
							nm_usuario_p,
							ds_exp_medico_w || nm_medico_solicitante_w);
					end if;

					if	((coalesce(uf_crm_w::text, '') = '') and (ie_consistir_uf_crm_solic_w = 'S')) then
						CALL tiss_gravar_inconsistencia(21,
							null,
							nr_interno_conta_p,
							nr_seq_protocolo_p,
							nm_usuario_p,
							'Atendimento: ' || nr_atendimento_w || chr(13) || chr(10) ||
							ds_exp_medico_w || nm_medico_solicitante_w);
					end if;
				end if;

				if (nm_contratado_solic_w IS NOT NULL AND nm_contratado_solic_w::text <> '') and (coalesce(cd_cgc_solic_w::text, '') = '') and (coalesce(nr_cpf_solic_w::text, '') = '') and (coalesce(cd_interno_solic_w::text, '') = '') then
					CALL tiss_gravar_inconsistencia(48,
							null,
							nr_interno_conta_p,
							nr_seq_protocolo_p,
							nm_usuario_p,
							'Atendimento: ' || nr_atendimento_w || chr(13) || chr(10) ||
							'Conta: ' || nr_interno_conta_w || chr(13) || chr(10) ||
							'Contratado: ' || nm_contratado_solic_w);
				end if;

				--OS 781976 em 24/09/2014 - So para o TISS 3, o CBO e obrigatorio para o solicitante, entao consiste se habilitado parametro.
				if (coalesce(cd_cbos_w::text, '') = '') and (nm_medico_solicitante_w IS NOT NULL AND nm_medico_solicitante_w::text <> '') and (ie_consiste_cbo_w = 'S') and (obter_se_projeto_versao(0,12,ds_versao_w,0) = 'S') then

					CALL tiss_gravar_inconsistencia(62,
							null,
							nr_interno_conta_p,
							nr_seq_protocolo_p,
							nm_usuario_p,
							'Atendimento: ' || nr_atendimento_w || chr(13) || chr(10) ||
							ds_exp_medico_w || nm_medico_solicitante_w);					
				end if;

			end loop;
			close c05;

			open c02;
			loop
			fetch c02 into
				ie_tipo_guia_proc_w,
				nr_seq_procedimento_w,
				ds_procedimento_w,
				cd_medico_exec_w,
				ie_funcao_medico_w,
				ie_via_acesso_w,
				qt_procedimento_w,
				ie_tecnica_utilizada_w;
			EXIT WHEN NOT FOUND; /* apply on c02 */

				open c03;
				loop
				fetch c03 into
					ds_funcao_medico_w,
					sg_conselho_w,
					uf_crm_w,
					nm_medico_w,
					nr_cpf_w,
					cd_medico_executor_w,
					nr_crm_w,
					cd_cbos_w;
				EXIT WHEN NOT FOUND; /* apply on c03 */

					if (coalesce(ie_consiste_grau_partic_w,'S') = 'S') and (coalesce(ds_funcao_medico_w::text, '') = '') and (nm_medico_w IS NOT NULL AND nm_medico_w::text <> '') then
						CALL tiss_gravar_inconsistencia(14,
							null,
							nr_interno_conta_p,
							nr_seq_protocolo_p,
							nm_usuario_p,
							'Atendimento: ' || nr_atendimento_w || chr(13) || chr(10) ||
							'Conta: ' || nr_interno_conta_w || chr(13) || chr(10) ||
							'Procedimento: ' || ds_procedimento_w);

					end if;

					if (coalesce(nr_crm_w::text, '') = '') and (nm_medico_w IS NOT NULL AND nm_medico_w::text <> '') and (ie_tipo_guia_proc_w	  = '5') then
						CALL tiss_gravar_inconsistencia(54,
							null,
							nr_interno_conta_p,
							nr_seq_protocolo_p,
							nm_usuario_p,
							'Atendimento: ' || nr_atendimento_w || chr(13) || chr(10) ||
							'Conta: ' || nr_interno_conta_w || chr(13) || chr(10) ||
							'Procedimento: ' || ds_procedimento_w);
					end if;

					if	((coalesce(uf_crm_w::text, '') = '') and (ie_consistir_uf_crm_solic_w = 'S')) then
						CALL tiss_gravar_inconsistencia(21,
							null,
							nr_interno_conta_p,
							nr_seq_protocolo_p,
							nm_usuario_p,
							'Atendimento: ' || nr_atendimento_w || chr(13) || chr(10) ||
							ds_exp_medico_w || nm_medico_w);
					end if;

					if (coalesce(sg_conselho_w::text, '') = '') then
						CALL tiss_gravar_inconsistencia(6,
							null,
							nr_interno_conta_p,
							nr_seq_protocolo_p,
							nm_usuario_p,
							'Atendimento: ' || nr_atendimento_w || chr(13) || chr(10) ||
							'Conta: ' || nr_interno_conta_w || chr(13) || chr(10) ||
							ds_exp_medico_w || nm_medico_w || chr(13) || chr(10) ||
							'Procedimento: ' || ds_procedimento_w);

					elsif (sg_conselho_w not in ('CRAS','COREN','CRF','CREFITO','CRM','CRV','CRN','CRO','CRP','OUT','CRFA')) then
						CALL tiss_gravar_inconsistencia(25,
							null,
							nr_interno_conta_p,
							nr_seq_protocolo_p,
							nm_usuario_p,
							ds_exp_medico_w || nm_medico_w);
					end if;

					if	((ie_tipo_guia_proc_w = '5') or (nm_medico_w IS NOT NULL AND nm_medico_w::text <> ''))and (tiss_obter_codigo_prestador(cd_convenio_w, cd_estabelecimento_w, cd_medico_executor_w, null, (null)::numeric , 'CI', NULL,ie_tipo_atendimento_w,cd_categoria_conv_w) is null) then

						if (ie_consistir_cpf_w = 'S') and (coalesce(nr_cpf_w::text, '') = '')  and (coalesce(cd_medico_executor_w::text, '') = '') then
							CALL tiss_gravar_inconsistencia(23,
								null,
								nr_interno_conta_p,
								nr_seq_protocolo_p,
								nm_usuario_p,
								'Atendimento: ' || nr_atendimento_w || chr(13) || chr(10) ||
								ds_exp_medico_w || nm_medico_w || chr(13) || chr(10) ||
								'Procedimento: ' || ds_procedimento_w);
						elsif (length(nr_cpf_w) <> 11) then
							CALL tiss_gravar_inconsistencia(30,
								null,
								nr_interno_conta_p,
								nr_seq_protocolo_p,
								nm_usuario_p,
								'Atendimento: ' || nr_atendimento_w || chr(13) || chr(10) ||
								ds_exp_medico_w || nm_medico_w || chr(13) || chr(10) ||
								'Procedimento: ' || ds_procedimento_w);
						end if;
					end if;

					select 	coalesce(max(a.nr_seq_proc_pacote),0)
					into STRICT	nr_seq_proc_pacote_w
					from 	procedimento_paciente a,
						tiss_conta_proc b
					where	b.nr_sequencia 		= nr_seq_procedimento_w
					and	b.nr_seq_proc		= a.nr_sequencia;

					if (coalesce(nr_seq_proc_pacote_w,0) = 0) and (ie_consiste_cbo_w = 'S') and (coalesce(cd_cbos_w::text, '') = '') then
						CALL tiss_gravar_inconsistencia(62,
							null,
							nr_interno_conta_p,
							nr_seq_protocolo_p,
							nm_usuario_p,
							'Atendimento: ' || nr_atendimento_w || chr(13) || chr(10) ||
							ds_exp_medico_w || nm_medico_w || chr(13) || chr(10) ||
							'Procedimento: ' || ds_procedimento_w);
					end if;				

				end loop;
				close c03;

				if (ie_tipo_guia_proc_w	  in ('4', '5')) and (coalesce(qt_procedimento_w, 0) < 0) and (ie_consiste_proc_neg_w = 'S') then
					CALL tiss_gravar_inconsistencia(53,
						null,
						nr_interno_conta_p,
						null,
						nm_usuario_p,
						'Atendimento: ' || nr_atendimento_w || chr(13) || chr(10) ||
						'Conta: ' || nr_interno_conta_w || chr(13) || chr(10) ||
						'Procedimento: ' || ds_procedimento_w);
				end if;

				if (ie_tipo_guia_proc_w	  in ('4', '5')) and (ie_consiste_proc_neg_w = 'S') and (coalesce(qt_procedimento_w, 0) < 0) and (ie_participante_ri_w = 'S') then
					CALL tiss_gravar_inconsistencia(85,
						null,
						nr_interno_conta_p,
						null,
						nm_usuario_p,
						'Atendimento: ' || nr_atendimento_w || chr(13) || chr(10) ||
						'Conta: ' || nr_interno_conta_w || chr(13) || chr(10) ||
						'Procedimento: ' || ds_procedimento_w);
				end if;


				if (ie_tipo_guia_proc_w in ('4', '5')) and (coalesce(ie_tecnica_utilizada_w::text, '') = '') and (ie_consiste_tec_util_w	= 'S') then
					CALL tiss_gravar_inconsistencia(55,
						null,
						nr_interno_conta_p,
						null,
						nm_usuario_p,
						'Atendimento: ' || nr_atendimento_w || chr(13) || chr(10) ||
						'Conta: ' || nr_interno_conta_w || chr(13) || chr(10) ||
						'Procedimento: ' || ds_procedimento_w);
				end if;

				if (ie_tipo_guia_proc_w in ('4', '5')) and (coalesce(ie_via_acesso_w::text, '') = '') and (ie_consiste_via_acesso_w = 'S') then

					CALL tiss_gravar_inconsistencia(35,
						null,
						nr_interno_conta_p,
						null,
						nm_usuario_p,
						'Conta: ' || nr_interno_conta_w || chr(13) || chr(10) ||
						'Procedimento: ' || ds_procedimento_w);
				end if;

				if	((ie_tipo_guia_proc_w in ('4', '5')) or (cd_medico_exec_w IS NOT NULL AND cd_medico_exec_w::text <> '')) then
					if (coalesce(cd_medico_exec_w::text, '') = '') then -- se o ie_proc_partic_w for "S", o medico se torna obrigatorio em todas as guias.
						if (ie_tipo_guia_proc_w not in ('4','5')) then
							CALL tiss_gravar_inconsistencia(20,
								null,
								nr_interno_conta_p,
								nr_seq_protocolo_p,
								nm_usuario_p,
								'Atendimento: ' || nr_atendimento_w || chr(13) || chr(10) ||
								'Conta: ' || nr_interno_conta_w || chr(13) || chr(10) ||
								'Procedimento: ' || ds_procedimento_w);
						end if;
					else

						select	max(a.nr_cpf),
							max(a.nm_pessoa_fisica),
							max(b.uf_crm),
							max(coalesce(c.ie_conselho_prof_tiss, c.sg_conselho))
						into STRICT	nr_cpf_w,
							nm_medico_w,
							uf_crm_w,
							sg_conselho_w
						FROM conselho_profissional c, pessoa_fisica a
LEFT OUTER JOIN medico b ON (a.cd_pessoa_fisica = b.cd_pessoa_fisica)
WHERE c.sg_conselho	= OBTER_CONSELHO_PROFISSIONAL(a.nr_seq_conselho, 'S') and a.cd_pessoa_fisica	= cd_medico_exec_w;

						if	((coalesce(uf_crm_w::text, '') = '') and (ie_consistir_uf_crm_solic_w = 'S')) then
							CALL tiss_gravar_inconsistencia(21,
								null,
								nr_interno_conta_p,
								nr_seq_protocolo_p,
								nm_usuario_p,
								'Atendimento: ' || nr_atendimento_w || chr(13) || chr(10) ||
								ds_exp_medico_w || nm_medico_w);
						end if;

						if (coalesce(ie_consiste_grau_partic_w,'S') = 'S') and (coalesce(ie_funcao_medico_w::text, '') = '') and (ie_tipo_guia_proc_w <> '4') and (obter_se_projeto_versao(0,4,ds_versao_projeto_w,0) = 'N') then --Na v3 somente envia o grau de partic nos membros de equipe
							CALL tiss_gravar_inconsistencia(14,
								null,
								nr_interno_conta_p,
								nr_seq_protocolo_p,
								nm_usuario_p,
								'Atendimento: ' || nr_atendimento_w || chr(13) || chr(10) ||
								'Conta: ' || nr_interno_conta_w || chr(13) || chr(10) ||							
								'Procedimento: ' || ds_procedimento_w);
						end if;

						if (coalesce(sg_conselho_w::text, '') = '') then
							CALL tiss_gravar_inconsistencia(6,
								null,
								nr_interno_conta_p,
								nr_seq_protocolo_p,
								nm_usuario_p,
								'Atendimento: ' || nr_atendimento_w || chr(13) || chr(10) ||
								'Conta: ' || nr_interno_conta_w || chr(13) || chr(10) ||
								ds_exp_medico_w || nm_medico_w || chr(13) || chr(10) ||
								'Procedimento: ' || ds_procedimento_w);

						elsif (sg_conselho_w not in ('CRAS','COREN','CRF','CREFITO','CRM','CRV','CRN','CRO','CRP','OUT','CRFA')) then
							CALL tiss_gravar_inconsistencia(25,
								null,
								nr_interno_conta_p,
								nr_seq_protocolo_p,
								nm_usuario_p,
								ds_exp_medico_w || nm_medico_w);
						end if;
					end if;

				end if;

			end loop;
			close c02;

		end loop;
		close c01;

	end if;

end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE tiss_gerar_inconsistencia (nr_sequencia_autor_p bigint, nr_interno_conta_p bigint, nr_seq_protocolo_p bigint, nr_seq_reap_conta_p bigint, nr_seq_projeto_p bigint, nm_usuario_p text) FROM PUBLIC;

