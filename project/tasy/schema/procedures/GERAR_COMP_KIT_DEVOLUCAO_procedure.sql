-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_comp_kit_devolucao ( nr_atendimento_p bigint, nr_devolucao_p bigint, cd_setor_atendimento_p bigint, cd_motivo_devolucao_p bigint, cd_kit_material_p bigint, nr_seq_item_dev_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
 
nr_sequencia_w		bigint;
cd_material_w		integer;
cd_material_ww		integer;
dt_atendimento_w		timestamp;
cd_unidade_medida_w	varchar(30);
qt_material_w		double precision;
nr_sequencia_prescricao_w	integer;
dt_entrada_unidade_w	timestamp;
nr_seq_atendimento_w	bigint;
nr_prescricao_w		bigint;
nr_prescr_w		bigint;
nr_seq_prescricao_w	bigint;
cd_local_estoque_w	smallint;
nr_seq_lote_fornec_w	bigint;

C001 CURSOR FOR 
	SELECT	cd_material 
	from 	componente_kit 
	where 	cd_kit_material = cd_kit_material_p;

C01 CURSOR FOR 
	SELECT	a.cd_material, 
		a.cd_unidade_medida, 
		a.nr_sequencia_prescricao, 
		a.dt_entrada_unidade, 
		a.nr_prescricao, 
		sum(a.qt_material), 
		a.nr_seq_lote_fornec 
	FROM prescr_material d, material b, material_em_devolucao_v a
LEFT OUTER JOIN tipo_baixa_prescricao c ON (a.cd_motivo_baixa = c.cd_tipo_baixa AND a.ie_prescr_dev = c.ie_prescricao_devolucao)
WHERE a.nr_prescricao	= d.nr_prescricao and a.cd_material	= d.cd_material and a.nr_sequencia_prescricao = d.nr_sequencia and d.nr_seq_kit	= nr_seq_prescricao_w and a.cd_material	= b.cd_material and a.nr_atendimento	= nr_atendimento_p and a.cd_material		= cd_material_ww and a.cd_setor_atendimento	= coalesce(cd_setor_atendimento_p, a.cd_setor_atendimento)   and (a.cd_local_estoque IS NOT NULL AND a.cd_local_estoque::text <> '') and ((nr_prescr_w > 0 and nr_prescr_w = a.nr_prescricao) or (nr_prescr_w = 0)) and not exists (	SELECT 1 from item_devolucao_material_pac w where w.nr_devolucao = nr_devolucao_p and w.nr_sequencia_prescricao = a.nr_sequencia_prescricao) and exists(	select	1 
			from	prescr_medica z, 
				prescr_material x 
			where	z.nr_prescricao = x.nr_prescricao 
			and	z.nr_atendimento = a.nr_atendimento 
			and	z.nr_prescricao = a.nr_prescricao 
			and	x.cd_kit_material = cd_kit_material_p 
			and	x.cd_material = a.cd_material 
			and	x.nr_sequencia = a.nr_sequencia_prescricao 
			and	((nr_seq_prescricao_w > 0 and nr_seq_prescricao_w = x.nr_seq_kit) or (nr_seq_prescricao_w = 0)) 
			and	(x.nr_seq_kit IS NOT NULL AND x.nr_seq_kit::text <> '')) and ((a.qt_material < 0) or (a.cd_local_estoque IS NOT NULL AND a.cd_local_estoque::text <> '') or (c.ie_atualiza_estoque = 'N' AND c.ie_conta_paciente = 'S')) 
	having	sum(a.qt_material) > 0 group by 
		a.cd_material, 
		a.cd_unidade_medida, 
		a.nr_sequencia_prescricao, 
		a.dt_entrada_unidade, 
		a.nr_prescricao, 
		a.nr_seq_lote_fornec;


BEGIN 
 
select	coalesce(max(nr_prescricao),0), 
	coalesce(max(nr_sequencia_prescricao),0) 
into STRICT	nr_prescr_w, 
	nr_seq_prescricao_w 
from	item_devolucao_material_pac 
where	nr_devolucao = nr_devolucao_p 
and	nr_sequencia = nr_seq_item_dev_p;
 
open C001;
loop 
fetch C001 into	 
	cd_material_ww;
EXIT WHEN NOT FOUND; /* apply on C001 */
	begin 
	open C01;
	loop 
	fetch C01 into 
		cd_material_w, 
		cd_unidade_medida_w, 
		nr_sequencia_prescricao_w, 
		dt_entrada_unidade_w, 
		nr_prescricao_w, 
		qt_material_w, 
		nr_seq_lote_fornec_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin 
		 
		select	coalesce(max(nr_sequencia),0), 
			coalesce(max(dt_atendimento),clock_timestamp()), 
			coalesce(max(cd_local_estoque),0) 
		into STRICT	nr_seq_atendimento_w, 
			dt_atendimento_w, 
			cd_local_estoque_w 
		from	material_atend_paciente 
		where	nr_atendimento = nr_atendimento_p 
		and	nr_prescricao = nr_prescricao_w 
		and	nr_sequencia_prescricao = nr_sequencia_prescricao_w 
		having	sum(qt_material) > 0;
		 
		select	coalesce(max(nr_sequencia),0) + 1 
		into STRICT	nr_sequencia_w 
		from	item_devolucao_material_pac 
		where	nr_devolucao = nr_devolucao_p;
 
		insert into ITEM_DEVOLUCAO_MATERIAL_PAC( 
			nr_devolucao, 
			nr_sequencia, 
			cd_material, 
			dt_atendimento, 
			cd_local_estoque, 
			cd_unidade_medida, 
			cd_motivo_devolucao, 
			dt_atualizacao, 
			nm_usuario_devol, 
			qt_material, 
			nr_prescricao, 
			nr_sequencia_prescricao, 
			ie_tipo_baixa_estoque, 
			dt_entrada_unidade, 
			nr_seq_atendimento, 
			nm_usuario, 
			nr_seq_lote_fornec) 
		values ( 
			nr_devolucao_p, 
			nr_sequencia_w, 
			cd_material_w, 
			dt_atendimento_w, 
			cd_local_estoque_w, 
			cd_unidade_medida_w, 
			cd_motivo_devolucao_p, 
			clock_timestamp(), 
			nm_usuario_p, 
			qt_material_w, 
			CASE WHEN coalesce(nr_prescricao_w,0)=0 THEN null  ELSE nr_prescricao_w END , 
			nr_sequencia_prescricao_w, 
			0, 
			dt_entrada_unidade_w, 
			nr_seq_atendimento_w, 
			nm_usuario_p, 
			nr_seq_lote_fornec_w);
		end;
	end loop;
	close c01;
	end;
end loop;
close C001;
 
commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_comp_kit_devolucao ( nr_atendimento_p bigint, nr_devolucao_p bigint, cd_setor_atendimento_p bigint, cd_motivo_devolucao_p bigint, cd_kit_material_p bigint, nr_seq_item_dev_p bigint, nm_usuario_p text) FROM PUBLIC;

