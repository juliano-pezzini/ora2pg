-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE fin_gerar_oc_repasse ( nr_seq_nf_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
 
dt_emissao_w			timestamp;
dt_inicio_w			timestamp;
dt_final_w			timestamp;
vl_rat_w				double precision;
nr_ordem_compra_w		bigint;
ds_cliente_w			varchar(80);
ds_obs_w			varchar(255);
cd_comprador_w			varchar(10);
cd_cnpj_w			varchar(14);
cd_pessoa_fisica_w		varchar(10);
cd_cond_pagto_w			bigint;	
dt_ordem_compra_w		timestamp;
dt_entrega_w			timestamp;
cd_moeda_w			bigint;
cd_material_w			integer;
cd_unidade_w			varchar(30);
cd_local_estoque_w		bigint;
cd_estabelecimento_w		bigint;
vl_repasse_w			double precision;
nr_sequencia_w			bigint;
nr_seq_item_nf_w			bigint;
nr_seq_item_oc_w			bigint;
ds_complemento_w			varchar(255);
nr_seq_item_oci_w			bigint;

C01 CURSOR FOR 
	SELECT	a.cd_pessoa_fisica, 
		a.cd_cnpj, 
		min(b.cd_cond_pagto) 
	from	com_cli_regra_valor_rep b, 
		nota_fiscal_item_rep a 
	where	a.nr_seq_nf	= nr_seq_nf_p 
	and	b.nr_sequencia	= a.nr_seq_regra_rep 
	and	coalesce(a.nr_ordem_compra::text, '') = '' 
	and	((coalesce(b.dt_vigencia::text, '') = '') or 
		((b.dt_vigencia IS NOT NULL AND b.dt_vigencia::text <> '') and (trunc(b.dt_vigencia,'dd') >= trunc(clock_timestamp(),'dd')))) 
	group by a.cd_pessoa_fisica, 
		a.cd_cnpj;

C02 CURSOR FOR 
	SELECT	a.nr_sequencia, 
		a.nr_seq_item_nf, 
		a.vl_repasse, 
		b.cd_material, 
		b.cd_cond_pagto 
	from	com_cli_regra_valor_rep b, 
		nota_fiscal_item_rep a 
	where	a.nr_seq_nf	= nr_seq_nf_p 
	and	b.nr_sequencia	= a.nr_seq_regra_rep 
	and	((coalesce(b.dt_vigencia::text, '') = '') or 
		((b.dt_vigencia IS NOT NULL AND b.dt_vigencia::text <> '') and (trunc(b.dt_vigencia,'dd') >= trunc(clock_timestamp(),'dd')))) 
	and	((coalesce(cd_pessoa_fisica_w::text, '') = '') or (a.cd_pessoa_fisica	= cd_pessoa_fisica_w)) 
	and	((coalesce(cd_cnpj_w::text, '') = '') or (a.cd_cnpj		= cd_cnpj_w));


BEGIN 
 
select	cd_pessoa_fisica 
into STRICT	cd_comprador_w 
from	usuario 
where	nm_usuario	= nm_usuario_p;
 
select	min(cd_moeda) 
into STRICT	cd_moeda_w 
from	moeda 
where	cd_moeda_banco > 0;
 
select	cd_estabelecimento 
into STRICT	cd_estabelecimento_w 
from	nota_fiscal 
where	nr_sequencia	= nr_seq_nf_p;
 
dt_emissao_w		:= trunc(clock_timestamp(),'dd');
dt_ordem_compra_w	:= clock_timestamp();
dt_entrega_w		:= trunc(clock_timestamp(),'dd');
 
OPEN C01;
LOOP 
FETCH C01 into 
	cd_pessoa_fisica_w, 
	cd_cnpj_w, 
	cd_cond_pagto_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	if (coalesce(cd_cond_pagto_w::text, '') = '') then 
		select	substr(obter_nome_pf_pj(a.cd_pessoa_fisica, a.cd_cgc),1,255) 
		into STRICT	ds_complemento_w 
		from	nota_fiscal a 
		where	a.nr_sequencia	= nr_seq_nf_p;
		/*(-20011,'NF: ' || NR_SEQ_NF_P || ' Cliente: ' || DS_COMPLEMENTO_W || ' Falta condição pagamento');*/
		 
		CALL wheb_mensagem_pck.exibir_mensagem_abort(194510,	'NR_SEQ_NF_P='||NR_SEQ_NF_P||';'|| 
								'DS_COMPLEMENTO_P='||DS_COMPLEMENTO_W);
	end if;
	select	nextval('ordem_compra_seq') 
	into STRICT	nr_ordem_compra_w 
	;
 
	insert	into ordem_compra( 
		nr_ordem_compra, 
		cd_estabelecimento, 
 		cd_cgc_fornecedor, 
		cd_pessoa_fisica, 
 		cd_condicao_pagamento, 
	 	cd_comprador, 
 		dt_ordem_compra, 
	 	dt_atualizacao, 
	 	nm_usuario, 
	 	cd_moeda, 
	 	ie_situacao, 
	 	dt_inclusao, 
	 	cd_pessoa_solicitante, 
	 	ie_frete, 
		vl_despesa_acessoria, 
	 	pr_multa_atraso, 
	 	pr_desconto, 
	 	pr_desc_pgto_antec, 
	 	pr_juros_negociado, 
	 	dt_entrega, 
	 	ie_aviso_chegada, 
		ie_emite_obs, 
		ie_urgente, 
		ie_somente_pagto, 
		ds_observacao, 
		nr_seq_nf_repasse) 
	values ( 
		nr_ordem_compra_w, 
		cd_estabelecimento_w, 
		cd_cnpj_w, 
		cd_pessoa_fisica_w, 
		cd_cond_pagto_w, 
		cd_comprador_w, 
	   	dt_ordem_compra_w, 
		clock_timestamp(), 
		nm_usuario_p, 
		cd_moeda_w, 
		'A', 
		clock_timestamp(), 
		cd_comprador_w, 
		'N', 
		0, 
		0, 
		0, 
		0, 
		0, 
		dt_entrega_w, 
		'N', 
		'N', 
		'N', 
		'N', 
		ds_obs_w, 
		nr_seq_nf_p);
		nr_seq_item_oc_w	:= 0;
	OPEN C02;
	LOOP 
	FETCH C02 into 
		nr_sequencia_w, 
		nr_seq_item_nf_w, 
		vl_repasse_w, 
		cd_material_w, 
		cd_cond_pagto_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		nr_seq_item_oc_w	:= nr_seq_item_oc_w + 1;
		select	substr(obter_dados_material_estab(cd_material,cd_estabelecimento_w,'UMC'),1,30) cd_unidade_medida_compra 
		into STRICT	cd_unidade_w 
		from	material 
		where	cd_material		= cd_material_w;
 
		select	substr('NF: ' || a.nr_nota_fiscal || ' Cliente: ' || obter_nome_pf_pj(a.cd_pessoa_fisica, a.cd_cgc) || 
			chr(10) || b.ds_complemento,1,255) 
		into STRICT	ds_complemento_w 
		from	nota_fiscal_item b, 
			nota_fiscal a 
		where	a.nr_sequencia	= nr_seq_nf_p	 
		and	b.nr_sequencia	= nr_seq_nf_p 
		and	b.nr_item_nf		= nr_seq_item_nf_w;
 
		begin 
		select	coalesce(max(nr_item_oci), 0) + 1 
		into STRICT	nr_seq_item_oci_w 
		from	ordem_compra_item 
		where	nr_ordem_compra = nr_ordem_compra_w;
		exception 
			when no_data_found then 
				nr_seq_item_oci_w := 1;
		end;
 
		insert into ordem_compra_item( 
			nr_ordem_compra, 
			nr_item_oci, 
			cd_material, 
			cd_unidade_medida_compra, 
			vl_unitario_material, 
			qt_material, 
			qt_original, 
			dt_atualizacao, 
			nm_usuario, 
			ie_situacao, 
			qt_material_entregue, 
			pr_descontos, 
			cd_local_estoque, 
			ds_material_direto, 
			vl_total_item) 
		values (	nr_ordem_compra_w, 
			nr_seq_item_oci_w, 
			cd_material_w, 
			cd_unidade_w, 
			vl_repasse_w, 
			1, 
			1, 
			clock_timestamp(), 
			nm_usuario_p, 
			'A', 
			0, 
			0, 
			cd_local_estoque_w, 
			ds_complemento_w, 
			round((1 * vl_repasse_w)::numeric,4));
		 
		insert	into ordem_compra_item_entrega( 
			nr_sequencia, 
			nr_ordem_compra, 
			nr_item_oci, 
			dt_prevista_entrega, 
			dt_entrega_original, 
			dt_entrega_limite, 
			qt_prevista_entrega, 
			dt_atualizacao, 
			nm_usuario) 
		values (	nextval('ordem_compra_item_entrega_seq'), 
			nr_ordem_compra_w, 
			nr_seq_item_oci_w, 
			dt_entrega_w, 
			dt_entrega_w, 
			dt_entrega_w, 
			1, 
			clock_timestamp(), 
			nm_usuario_p);
		 
		update nota_fiscal_item_rep 
		set	nr_ordem_compra	= nr_ordem_compra_w, 
			nr_seq_item_oc	= nr_seq_item_oc_w 
		where	nr_sequencia		= nr_sequencia_w;
	END LOOP;
	CLOSE C02;
 
	CALL gerar_ordem_compra_venc( 
		nr_ordem_compra_w, 
		nm_usuario_p);
	calcular_liquido_ordem_compra( 
		nr_ordem_compra_w, 
		nm_usuario_p);
	end;
END LOOP;
CLOSE C01;
 
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE fin_gerar_oc_repasse ( nr_seq_nf_p bigint, nm_usuario_p text) FROM PUBLIC;

