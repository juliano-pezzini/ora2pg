-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualizar_proc_partic_cirurgia ( nr_cirurgia_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE



nr_seq_procedimento_w		bigint;
ie_funcao_w			varchar(10);
cd_pessoa_fisica_w		varchar(10);
nm_participante_w		varchar(60);
ds_observacao_w			varchar(255);
ie_existe_w			varchar(1);
dt_entrada_w			timestamp;
dt_saida_w			timestamp;
nr_seq_interno_w		bigint;
nr_sequencia_w			bigint;
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
cd_convenio_w			procedimento_paciente.cd_convenio%type;

						
						
c01 CURSOR FOR
	SELECT 	distinct
		a.cd_procedimento,
		a.ie_origem_proced
	FROM 	procedimento b,
		procedimento_paciente a,
		conta_paciente c
	WHERE	a.cd_procedimento 	  = b.cd_procedimento
	AND	a.ie_origem_proced 	  = b.ie_origem_proced
	AND	a.nr_interno_conta	  = c.nr_interno_conta
	AND	a.nr_cirurgia 		  = nr_cirurgia_p
	AND	ie_classificacao 	  = '1'
	AND	coalesce(cd_motivo_exc_conta::text, '') = ''
	AND	c.ie_status_acerto 	  = 1
	ORDER BY 1;
	
c02 CURSOR FOR
	SELECT	ie_funcao,
		cd_pessoa_fisica,
		nm_participante,
		ds_observacao,
		dt_entrada,
		dt_saida,
		nr_seq_interno
	from	cirurgia_participante
	where	nr_cirurgia 		= nr_cirurgia_p;
						

BEGIN

open c01;
loop
fetch c01 into
	cd_procedimento_w,
	ie_origem_proced_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	SELECT 	max(a.nr_sequencia)
	into STRICT	nr_seq_procedimento_w
	FROM 	procedimento b,
		procedimento_paciente a,
		conta_paciente c
	WHERE	a.cd_procedimento 	= cd_procedimento_w
	AND	a.ie_origem_proced 	= ie_origem_proced_w
	AND	a.nr_interno_conta	  = c.nr_interno_conta
	AND	a.nr_cirurgia 		= nr_cirurgia_p
	AND	ie_classificacao 	= '1'
	AND	coalesce(cd_motivo_exc_conta::text, '') = ''
	AND	c.ie_status_acerto 	  = 1;
	
	open c02;
	loop
	fetch c02 into
		ie_funcao_w,
		cd_pessoa_fisica_w,
		nm_participante_w,
		ds_observacao_w,
		dt_entrada_w,
		dt_saida_w,
		nr_seq_interno_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin
		select	coalesce(max('S'),'N')
		into STRICT	ie_existe_w
		from	cirurgia_participante
		where	coalesce(cd_pessoa_fisica, 'XPTO') = coalesce(cd_pessoa_fisica_w,'XPTO')
		and	nr_cirurgia		= nr_cirurgia_p
		and	nr_seq_procedimento	= nr_seq_procedimento_w;
		
		if (ie_existe_w = 'N') then
			update	cirurgia_participante
			set	nr_seq_procedimento 	= nr_seq_procedimento_w
			where	nr_cirurgia 		= nr_cirurgia_p
			and	coalesce(nr_seq_procedimento::text, '') = '';
		end if;	
		
		select	coalesce(max('S'),'N')
		into STRICT	ie_existe_w
		from	cirurgia_participante
		where	coalesce(cd_pessoa_fisica, 'XPTO') = coalesce(cd_pessoa_fisica_w,'XPTO')
		and	nr_cirurgia		= nr_cirurgia_p
		and	nr_seq_procedimento	= nr_seq_procedimento_w;
		
		if (ie_existe_w = 'N') then
			select	coalesce(max(nr_sequencia),1)+1
			into STRICT	nr_sequencia_w
			from	cirurgia_participante
			where	nr_cirurgia = nr_cirurgia_p;

			insert	into 	cirurgia_participante(
					nr_cirurgia,
					nr_sequencia,
					ie_funcao,
					nm_usuario,
					dt_atualizacao,
					cd_pessoa_fisica,
					nm_participante,
					ds_observacao,
					dt_entrada,
					dt_saida,
					nr_seq_procedimento,
					nr_seq_interno,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					ie_situacao
					)
			SELECT		nr_cirurgia_p,
					nr_sequencia_w,
					ie_funcao_w,
					nm_usuario_p,
					clock_timestamp(),
					cd_pessoa_fisica_w,
					nm_participante_w,
					ds_observacao_w,
					dt_entrada_w,
					dt_saida_w,
					nr_seq_procedimento_w,
					nextval('cirurgia_participante_seq'),
					clock_timestamp(),
					nm_usuario_p,
					'A';
		end if;			
		end;
	end loop;
	close c02;
	end;
	
	if (coalesce(nr_seq_procedimento_w,0) > 0) then
		select	max(cd_convenio)
		into STRICT	cd_convenio_w
		from	procedimento_paciente
		where	nr_sequencia = nr_seq_procedimento_w;
		
		CALL atualiza_preco_procedimento(nr_seq_procedimento_w, cd_convenio_w, nm_usuario_p);
	end if;
end loop;
close c01;

commit;
	
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualizar_proc_partic_cirurgia ( nr_cirurgia_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

