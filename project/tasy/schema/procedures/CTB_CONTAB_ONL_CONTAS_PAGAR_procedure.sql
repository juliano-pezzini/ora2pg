-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ctb_contab_onl_contas_pagar ( doc_p INOUT ctb_documento, nm_usuario_p text) AS $body$
DECLARE

/*
===============================================================================
Purpose: Indentacao

Remarks: n/a

Who         When            What
----------  -----------     --------------------------------------------------

chjreinert  13/mai/2021     OS 2444975 - Indentacao

===============================================================================
*/
cd_conta_financ_regra_w         tributo_conta_pagar.cd_conta_financ%type;
cd_conta_transitoria_w          ctb_regra_estab_dif.cd_conta_contabil%type;
cd_empresa_w                    empresa.cd_empresa%type;
cd_estab_financeiro_w           titulo_pagar.cd_estabelecimento%type;
cd_estab_titulo_w               titulo_pagar.cd_estabelecimento%type;
cd_estab_titulo_ww              titulo_pagar.cd_estabelecimento%type;
cd_natureza_operacao_w          nota_fiscal.cd_natureza_operacao%type;
cd_operacao_nf_w                nota_fiscal.cd_operacao_nf%type;
cd_tributo_w                    titulo_pagar.cd_tributo%type;
cd_tributo_ww                   titulo_pagar_imposto.cd_tributo%type;
ctb_movimento_w                 ctb_movimento%rowtype;
ctb_param_lote_contas_pag_w     ctb_param_lote_contas_pag%rowtype;
dados_contab_w                  ctb_contab_onl_lote_fin_pck.dados_contab_tf;
ds_atributos_w                  varchar(4000);
ds_banco_w                      banco_estabelecimento_v.ds_banco%type;
ds_benef_origem_w               pessoa_juridica.ds_razao_social%type := '';
ds_benefic_w                    pessoa_juridica.ds_razao_social%type;
ds_bordero_w                    bordero_pagamento.ds_bordero%type := '';
ds_compl_contab_w               titulo_pagar.ds_compl_contab%type;
ds_estab_titulo_w               pessoa_juridica.ds_razao_social%type;
ds_estorno_w                    varchar(255);
ds_hist_movto_trans_financ_w    movto_trans_financ.ds_historico%type := '';
ds_irrelevante_w                double precision;
ds_irrelevante_w_2              varchar(255);
ds_mes_competencia_w            varchar(10) := '';
ds_mesano_ref_repasse_w         varchar(10);
ds_motivo_dev_w                 adiant_pago_dev.ds_motivo_dev%type;
ds_nota_credito_w               varchar(200) := '';
ds_obs_adiant_pago_w            adiantamento_pago.ds_observacao%type;
ds_obs_baixa_titulo_w           titulo_pagar_baixa.ds_observacao%type;
ds_observacao_titulo_w          titulo_pagar.ds_observacao_titulo%type;
ds_pessoa_titulo_w              pessoa_juridica.ds_razao_social%type := '';
ds_titulo_w                     varchar(30);
ds_tributo_w                    tributo.ds_tributo%type;
dt_contabil_titulo_w            titulo_pagar.dt_contabil%type;
dt_mesano_contab_w              varchar(7);
ie_contab_cp_no_cb_w            parametro_controle_banc.ie_contab_cp_no_cb%type;
ie_contab_valor_trib_w          tributo_conta_pagar.ie_contab_valor_trib%type;
ie_contab_w                     varchar(1) := 'S';
ie_nf_nfe_w                     varchar(3);
ie_origem_titulo_w              titulo_pagar.ie_origem_titulo%type;
ie_permite_estab_dif_w          ctb_regra_estab_dif.ie_permite%type;
ie_regra_w                      varchar(1);
ie_situacao_w                   titulo_pagar.ie_situacao%type;
ie_tipo_titulo_w                titulo_pagar.ie_tipo_titulo%type;
nm_agrupador_w                  agrupador_contabil.nm_atributo%type;
nm_fantasia_pj_w                pessoa_juridica.nm_fantasia%type;
nm_pf_pj_tit_orig_w             pessoa_juridica.ds_razao_social%type := '';
nm_terceiro_w                   pessoa_juridica.ds_razao_social%type;
nr_adiantamento_w               titulo_pagar_adiant.nr_adiantamento%type;
nr_bloqueto_w                   titulo_pagar.nr_bloqueto%type;
nr_bordero_w                    bordero_pagamento.nr_bordero%type;
nr_cheque_w                     varchar(255);
nr_doc_vl_pago_w                bordero_pagamento.nr_cheque%type;
nr_documento_tit_w              titulo_pagar.nr_documento%type;
nr_documento_tit_ww             titulo_pagar.nr_documento%type;
nr_documento_w                  titulo_pagar.nr_documento%type;
nr_documento_ww                 ctb_movimento.nr_documento%type;
nr_lote_recurso_w               lote_audit_hist.nr_seq_lote_audit%type;
nr_nfe_imp_w                    nota_fiscal.nr_nfe_imp%type := '';
nr_nota_fiscal_w                nota_fiscal.nr_nota_fiscal%type;
nr_nota_fiscal_ww               nota_fiscal.nr_nota_fiscal%type;
nr_parcelas_w                   titulo_pagar.nr_parcelas%type;
nr_ret_convenio_w               lote_auditoria.nr_seq_retorno%type;
nr_seq_adiant_dev_w             adiant_pago_dev.nr_sequencia%type;
nr_seq_baixa_w                  titulo_pagar_baixa.nr_sequencia%type;
nr_seq_classe_w                 titulo_pagar.nr_seq_classe%type;
nr_seq_escrit_w                 banco_escritural.nr_sequencia%type;
nr_seq_info_ctb_w               w_movimento_contabil.nr_seq_info%type;
nr_seq_lote_pagamento_w         pls_pagamento_prestador.nr_seq_lote%type;
nr_seq_lote_res_pls_w           titulo_pagar.nr_seq_lote_res_pls%type;
nr_seq_movto_trans_fin_w        titulo_pagar_baixa.nr_seq_movto_trans_fin%type;
nr_seq_nota_credito_w           bordero_nc_nota_credito.nr_seq_nota_credito%type;
nr_seq_nota_fiscal_w            titulo_pagar.nr_seq_nota_fiscal%type;
nr_seq_regra_w                  tributo_conta_pagar.nr_sequencia%type;
nr_seq_rpa_w                    titulo_pagar.nr_seq_rpa%type;
nr_seq_terceiro_w               repasse_terceiro.nr_seq_terceiro%type;
nr_seq_trans_fin_baixa_w        titulo_pagar.nr_seq_trans_fin_baixa%type;
nr_tit_orig_adiant_w            adiantamento_pago.nr_titulo_original%type;
nr_titulo_bloqueto_w            titulo_pagar_baixa_contab_v.nr_titulo%type;
nr_titulo_original_w            titulo_pagar.nr_titulo_original%type;
nr_total_parcelas_w             titulo_pagar.nr_total_parcelas%type;
qt_cheque_w                     bigint;
qt_movto_contab_w               bigint;
qt_pago_outros_w                bigint;
vl_base_calculo_w               titulo_pagar_imposto.vl_base_calculo%type;
vl_original_w                   titulo_pagar_classif.vl_original%type;
vl_out_desp_bordero_w           titulo_pagar.vl_out_desp_bordero%type;
vl_outras_despesas_w            titulo_pagar.vl_outras_despesas%type;
vl_total_tributo_w              titulo_pagar_imposto.vl_imposto%type;
vl_tributo_w                    titulo_pagar_imposto.vl_imposto%type;
cd_interno_intercompany_ori_w   estabelecimento.cd_interno%type;
cd_interno_intercompany_des_w   estabelecimento.cd_interno%type;
ie_intercompany_w               varchar(1)     := 'N';
nr_seq_nota_orig_w              nota_fiscal.nr_sequencia%type;
nr_nota_orig_w                  nota_fiscal.nr_nota_fiscal%type;
cd_serie_nf_orig_w              nota_fiscal.cd_serie_nf%type;
nr_nfe_imp_orig_w               nota_fiscal.nr_nfe_imp%type;

c02 CURSOR FOR
    SELECT  coalesce(a.vl_imposto,0),
            cd_tributo,
            a.vl_base_calculo
    from    titulo_Pagar_imposto    a
    where   a.nr_titulo     = dados_contab_w.nr_titulo_pagar
    and     (substr(Obter_Titulo_Imposto(a.nr_sequencia),1,10))::numeric  > 0
    and     not exists (     SELECT  1
                            from    titulo_pagar y
                            where   y.nr_seq_tributo = a.nr_sequencia);

c03 CURSOR FOR
    SELECT  b.nr_titulo,
            a.vl_out_desp_bordero
    from    titulo_pagar_baixa_contab_v b,
            titulo_pagar a
    where   a.nr_titulo             = b.nr_titulo
    and     b.ds_atributo           = doc_p.nm_atributo
    and     a.nr_bloqueto           = nr_bloqueto_w
    and     doc_p.nm_atributo       = 'VL_BAIXA'
    and     a.nr_titulo_transf      = dados_contab_w.nr_titulo_pagar
    and     b.nr_seq_baixa          = nr_seq_baixa_w
    and     a.nr_titulo             = dados_contab_w.nr_titulo_pagar;


BEGIN
dados_contab_w  := null;
ctb_movimento_w := null;

dados_contab_w.doc              := doc_p;
if (doc_p.nm_tabela        not  ('ADIANTAMENTO_PAGO','ADIANT_PAGO_DEV')) then
        dados_contab_w.nr_titulo_pagar  := doc_p.nr_documento;
end if;

dados_contab_w.dt_transacao     := doc_p.dt_competencia;
dados_contab_w.nr_seq_trans_fin := doc_p.nr_seq_trans_financ;
ctb_movimento_w.vl_movimento    := doc_p.vl_movimento;

CALL ctb_online_pck.definir_regra_lote_esta_dif(doc_p.cd_tipo_lote_contabil, doc_p.cd_estabelecimento);
ie_permite_estab_dif_w          := ctb_online_pck.get_permite_estab_dif(doc_p.cd_tipo_lote_contabil, doc_p.cd_estabelecimento);
cd_conta_transitoria_w          := ctb_online_pck.get_conta_transitoria_estab(doc_p.cd_tipo_lote_contabil, doc_p.cd_estabelecimento);
ctb_movimento_w.cd_historico    := ctb_online_pck.get_historico_transit_estab(doc_p.cd_tipo_lote_contabil, doc_p.cd_estabelecimento);

cd_empresa_w                    := obter_empresa_estab(doc_p.cd_estabelecimento);

select  x.*
into STRICT    ctb_param_lote_contas_pag_w
from (
SELECT  a.*
from    ctb_param_lote_contas_pag a
where   a.cd_empresa    = cd_empresa_w
and     coalesce(a.cd_estab_exclusivo, doc_p.cd_estabelecimento) = doc_p.cd_estabelecimento
order   by coalesce(a.cd_estab_exclusivo,0) desc) x LIMIT 1;

begin
select  x.ie_contab_cp_no_cb
into STRICT    ie_contab_cp_no_cb_w
from (
SELECT  coalesce(a.ie_contab_cp_no_cb,'N') ie_contab_cp_no_cb
from    ctb_param_lote_cont_banco a
where   a.cd_empresa    = cd_empresa_w
and     coalesce(a.cd_estab_exclusivo, doc_p.cd_estabelecimento) = doc_p.cd_estabelecimento
order   by coalesce(a.cd_estab_exclusivo,0) desc) x LIMIT 1;
exception
        when no_data_found then ie_contab_cp_no_cb_w := 'N';
        when too_many_rows then ie_contab_cp_no_cb_w := 'N';
        when others then ie_contab_cp_no_cb_w := 'N';
end;

begin
select  cd_estab_financeiro
into STRICT    cd_estab_financeiro_w
from    estabelecimento
where   cd_estabelecimento = doc_p.cd_estabelecimento;
exception
        when no_data_found then cd_estab_financeiro_w := null;
        when too_many_rows then cd_estab_financeiro_w := null;
        when others then cd_estab_financeiro_w := null;
end;

if (coalesce(dados_contab_w.nr_titulo_pagar,0) != 0) then
    begin
    select      ie_tipo_titulo,
                nr_seq_proj_rec
    into STRICT        ie_tipo_titulo_w,
                dados_contab_w.nr_seq_proj_rec
    from        titulo_pagar
    where       nr_titulo = dados_contab_w.nr_titulo_pagar;
    exception
        when no_data_found then
                ie_tipo_titulo_w := null;
                dados_contab_w.nr_seq_proj_rec := null;
        when too_many_rows then
                ie_tipo_titulo_w := null;
                dados_contab_w.nr_seq_proj_rec := null;
        when others then
                ie_tipo_titulo_w := null;
                dados_contab_w.nr_seq_proj_rec := null;
    end;
end if;

begin
if (doc_p.nm_atributo = 'VL_ADIANT_DEV' and doc_p.nm_tabela = 'ADIANT_PAGO_DEV' and ctb_param_lote_contas_pag_w.ie_contab_adiant_dev_cp = 'S') then
    begin
    select  a.nr_adiantamento, --11
            a.nr_sequencia nr_seq_adiant_dev --13
    into STRICT    nr_adiantamento_w, --11
            nr_seq_adiant_dev_w --13
    from    adiantamento_pago b,
            adiant_pago_dev a
    where   a.nr_adiantamento       = doc_p.nr_documento
    and     a.nr_sequencia          = doc_p.nr_seq_doc_compl
    and     a.nr_adiantamento       = b.nr_adiantamento
    and     (a.nr_seq_trans_fin IS NOT NULL AND a.nr_seq_trans_fin::text <> '');
    end;

elsif (doc_p.nm_atributo = 'VL_ADIANT_PAGO' and doc_p.nm_tabela = 'ADIANTAMENTO_PAGO') then
    begin
    select  b.nr_adiantamento --11
    into STRICT    nr_adiantamento_w --11
    from    adiantamento_pago b
    where   b.nr_adiantamento = doc_p.nr_documento;
    end;

elsif (doc_p.nm_tabela = 'TITULO_PAGAR_ADIANT') then
    if (doc_p.nm_atributo = 'VL_ADIANT_TIT_PAGAR') then
        begin
        select  max(a.nr_adiantamento)
        into STRICT    nr_adiantamento_w --11
        from    titulo_pagar_adiant a
        where   a.nr_titulo     = doc_p.nr_documento
        and     a.nr_sequencia  = doc_p.nr_seq_doc_compl
        and     (a.nr_seq_trans_fin IS NOT NULL AND a.nr_seq_trans_fin::text <> '');
        end;
    elsif (doc_p.nm_atributo = 'VL_IMPOSTO_ADIANT') then
        begin
        select  max(a.nr_adiantamento)
        into STRICT    nr_adiantamento_w --11
        from    titulo_pagar_adiant a
        where   a.nr_titulo     = doc_p.nr_documento
        and     a.nr_sequencia  = doc_p.nr_seq_doc_compl
        and     (a.nr_seq_trans_fin IS NOT NULL AND a.nr_seq_trans_fin::text <> '')
        and     coalesce(vl_imposto,0) <> 0;
        end;
    end if;

elsif (doc_p.nm_tabela = 'TITULO_PAGAR') then
    if (doc_p.nm_atributo = 'VL_BAIXA_SEM_TRIB') then
        begin
        select  b.nr_seq_conta_banco, --3
                a.nr_seq_classe, --17
                b.cd_tipo_baixa, --18
                a.nr_seq_proj_rec, --21
                a.ie_origem_titulo, --25
                CASE WHEN coalesce(b.nr_seq_baixa_origem::text, '') = '' THEN ''  ELSE obter_desc_expressao(304277) END  ds_estorno --26
        into STRICT    dados_contab_w.nr_seq_conta_banco, --3
                nr_seq_classe_w, --17
                dados_contab_w.cd_tipo_baixa, --18
                dados_contab_w.nr_seq_proj_rec, --21
                ie_origem_titulo_w, --25
                ds_estorno_w --26
        from    titulo_pagar_baixa b,
                titulo_pagar a
        where   a.nr_titulo     = doc_p.nr_documento
        and     b.nr_sequencia  = doc_p.nr_seq_doc_compl
        and     a.nr_titulo     = b.nr_titulo
        and (b.vl_baixa - coalesce(b.vl_imposto,0)) <> 0;
        end;
    elsif (doc_p.nm_atributo = 'VL_CURTO_PRAZO' and ctb_param_lote_contas_pag_w.ie_contab_curto_prazo = 'S') then
        begin
        select  a.nr_seq_classe, --17
                a.nr_seq_proj_rec, --21
                a.ie_origem_titulo --25
        into STRICT    nr_seq_classe_w, --17
                dados_contab_w.nr_seq_proj_rec, --21
                ie_origem_titulo_w --25
        from    titulo_pagar a
        where   a.nr_titulo = doc_p.nr_documento
        and     a.nr_lote_contabil <> a.nr_lote_contabil_curto_prazo
        and     a.nr_lote_contabil <> 0
        and     (a.nr_seq_tf_curto_prazo IS NOT NULL AND a.nr_seq_tf_curto_prazo::text <> '');
        end;
    elsif (doc_p.nm_atributo = 'VL_LONGO_PRAZO' and ctb_param_lote_contas_pag_w.ie_contab_curto_prazo = 'S') then
        begin
        select  a.nr_seq_classe, --17
                a.nr_seq_proj_rec, --21
                a.ie_origem_titulo --25
        into STRICT    nr_seq_classe_w, --17
                dados_contab_w.nr_seq_proj_rec, --21
                ie_origem_titulo_w --25
        from    titulo_pagar a
        where   a.nr_titulo = doc_p.nr_documento
        and     a.dt_vencimento_atual > PKG_DATE_UTILS.ADD_MONTH(doc_p.dt_competencia,12,0)
        and     (a.nr_seq_tf_curto_prazo IS NOT NULL AND a.nr_seq_tf_curto_prazo::text <> '');
        end;
    elsif (doc_p.nm_atributo = 'VL_TITULO' and ctb_param_lote_contas_pag_w.ie_contab_classif = 'N') then
        begin
        begin
        select  a.nr_seq_classe, --17
                a.nr_seq_proj_rec, --21
                a.ie_origem_titulo --25
        into STRICT    nr_seq_classe_w, --17
                dados_contab_w.nr_seq_proj_rec, --21
                ie_origem_titulo_w --25
        from    titulo_pagar a
        where   a.nr_titulo = doc_p.nr_documento
        and     not exists (SELECT 1 from titulo_pagar_classif x where x.nr_titulo = a.nr_titulo);
        exception when others then
                doc_p.vl_movimento      := 0;
                nr_seq_classe_w         := null;
        end;
        end;
    end if;
elsif (doc_p.nm_atributo = 'VL_ALTERADO' and doc_p.nm_tabela = 'TITULO_PAGAR_ALT_VALOR') then
        /*Todas as informacoes estao em doc_p*/

null;
elsif (doc_p.nm_tabela = 'TITULO_PAGAR_BAIXA') then
    if (doc_p.nm_atributo = 'VL_IVA_LIQ') then
        begin
        select  a.nr_bordero, -- 6
                a.cd_centro_custo, --8
                a.cd_conta_contabil, --9
                a.cd_tipo_baixa, --18
                CASE WHEN coalesce(nr_seq_baixa_origem::text, '') = '' THEN ''  ELSE obter_desc_expressao(304277) END  ds_estorno --26
        into STRICT    nr_bordero_w, --6
                dados_contab_w.cd_centro_custo, --8
                dados_contab_w.cd_conta_contabil, --9
                dados_contab_w.cd_tipo_baixa, --18
                ds_estorno_w --26
        from    titulo_pagar_baixa a
        where   a.nr_titulo     = doc_p.nr_documento
        and     a.nr_sequencia  = doc_p.nr_seq_doc_compl;
        end;
    elsif (doc_p.nm_atributo = 'VL_OUTRAS_DESPESAS') then
        begin
        select  a.nr_seq_classe, --17
                b.cd_tipo_baixa, --18
                a.nr_seq_proj_rec, --21
                a.ie_origem_titulo, --25
                CASE WHEN coalesce(b.nr_seq_baixa_origem::text, '') = '' THEN ''  ELSE obter_desc_expressao(304277) END  ds_estorno --26
        into STRICT    nr_seq_classe_w, --17
                dados_contab_w.cd_tipo_baixa, --18
                dados_contab_w.nr_seq_proj_rec, --21
                ie_origem_titulo_w, --25
                ds_estorno_w --26
        from    titulo_pagar_baixa b,
                titulo_pagar a
        where   a.nr_titulo     = doc_p.nr_documento
        and     b.nr_sequencia  = doc_p.nr_seq_doc_compl
        and     a.nr_titulo     = b.nr_titulo;
        end;
    elsif (doc_p.nm_atributo = 'VL_TRANSF_TRIBUTO' and ctb_param_lote_contas_pag_w.ie_contab_imposto in ('S','D')) then
        begin
        select  a.nr_seq_movto_trans_fin, --16
                r.nr_seq_classe, --17
                a.cd_tipo_baixa, --18
                r.nr_seq_proj_rec, --21
                r.ie_origem_titulo, --25
                CASE WHEN coalesce(a.nr_seq_baixa_origem::text, '') = '' THEN ''  ELSE obter_desc_expressao(304277) END  ds_estorno --26
        into STRICT    nr_seq_movto_trans_fin_w, --16
                nr_seq_classe_w, --17
                dados_contab_w.cd_tipo_baixa, --18
                dados_contab_w.nr_seq_proj_rec, --21
                ie_origem_titulo_w, --25
                ds_estorno_w --26
        from    titulo_pagar r,
                tributo t,
                titulo_pagar_imposto i,
                titulo_pagar_baixa a
        where   a.nr_titulo     = doc_p.nr_documento
        and     a.nr_sequencia  = doc_p.nr_seq_doc_compl
        and     i.nr_sequencia  = doc_p.nr_doc_analitico
        and     (t.nr_seq_trans_imp IS NOT NULL AND t.nr_seq_trans_imp::text <> '')
        and     a.nr_titulo     = i.nr_titulo
        and     i.cd_tributo    = t.cd_tributo
        and     r.nr_seq_tributo = i.nr_sequencia
        and     (substr(Obter_Titulo_Imposto(i.nr_sequencia),1,10))::numeric  > 0
        and     r.ie_status_tributo = 'NT'
        and (SELECT max(o.nr_sequencia) from titulo_pagar_baixa o where o.nr_titulo = a.nr_titulo) = a.nr_sequencia;
        end;
    end if;
elsif (doc_p.nm_tabela = 'TITULO_PAGAR_BAIXA_CC') then
    if (doc_p.nm_atributo = 'VL_BAIXA_ESTRANG') then
        begin
        select  a.nr_seq_conta_banco, --3
                a.nr_bordero, --6
                a.nr_seq_escrit, --7
                coalesce(b.cd_centro_custo, b.cd_centro_custo) cd_centro_custo, --8
                coalesce(b.cd_conta_contabil, b.cd_conta_contabil) cd_conta_contabil, --9
                b.nr_seq_baixa, --14
                a.nr_seq_movto_trans_fin, --16
                c.nr_seq_classe, --17
                a.cd_tipo_baixa, --18
                c.nr_seq_proj_rec, --21
                c.ie_origem_titulo, --25
                CASE WHEN coalesce(a.nr_seq_baixa_origem::text, '') = '' THEN ''  ELSE obter_desc_expressao(304277) END  ds_estorno --26
        into STRICT    dados_contab_w.nr_seq_conta_banco, --3
                nr_bordero_w, --6
                nr_seq_escrit_w, --7
                dados_contab_w.cd_centro_custo, --8
                dados_contab_w.cd_conta_contabil, --9
                nr_seq_baixa_w, --14
                nr_seq_movto_trans_fin_w, --16
                nr_seq_classe_w, --17
                dados_contab_w.cd_tipo_baixa, --18
                dados_contab_w.nr_seq_proj_rec, --21
                ie_origem_titulo_w, --25
                ds_estorno_w --26
        FROM titulo_pagar c, titulo_pagar_baixa a
LEFT OUTER JOIN titulo_pagar_baixa_cc b ON (a.nr_titulo = b.nr_titulo AND a.nr_sequencia = b.nr_seq_baixa)
WHERE b.nr_titulo     = doc_p.nr_documento and b.nr_seq_baixa  = doc_p.nr_seq_doc_compl and b.nr_sequencia  = doc_p.nr_doc_analitico   and c.nr_titulo     = a.nr_titulo and coalesce(b.vl_baixa_estrang,0) <> 0;
        end;
    elsif (doc_p.nm_atributo = 'VL_MOEDA_COMPLEMENTAR') then
        begin
        select  a.nr_seq_conta_banco, --3
                a.nr_bordero, --6
                a.nr_seq_escrit, --7
                coalesce(b.cd_centro_custo, b.cd_centro_custo) cd_centro_custo, --8
                coalesce(b.cd_conta_contabil, b.cd_conta_contabil) cd_conta_contabil, --9
                b.nr_seq_baixa, --14
                a.nr_seq_movto_trans_fin, --16
                c.nr_seq_classe, --17
                a.cd_tipo_baixa, --18
                c.nr_seq_proj_rec, --21
                c.ie_origem_titulo, --25
                CASE WHEN coalesce(a.nr_seq_baixa_origem::text, '') = '' THEN ''  ELSE obter_desc_expressao(304277) END  ds_estorno --26
        into STRICT    dados_contab_w.nr_seq_conta_banco, --3
                nr_bordero_w, --6
                nr_seq_escrit_w, --7
                dados_contab_w.cd_centro_custo, --8
                dados_contab_w.cd_conta_contabil, --9
                nr_seq_baixa_w, --14
                nr_seq_movto_trans_fin_w, --16
                nr_seq_classe_w, --17
                dados_contab_w.cd_tipo_baixa, --18
                dados_contab_w.nr_seq_proj_rec, --21
                ie_origem_titulo_w, --25
                ds_estorno_w --26
        FROM titulo_pagar c, titulo_pagar_baixa a
LEFT OUTER JOIN titulo_pagar_baixa_cc b ON (a.nr_titulo = b.nr_titulo AND a.nr_sequencia = b.nr_seq_baixa)
WHERE b.nr_titulo     = doc_p.nr_documento and b.nr_seq_baixa  = doc_p.nr_seq_doc_compl and b.nr_sequencia  = doc_p.nr_doc_analitico   and c.nr_titulo     = a.nr_titulo and coalesce(b.vl_complemento,0) <> 0;
        end;
    elsif (ctb_param_lote_contas_pag_w.ie_contab_classif_baixa = 'S' and ie_tipo_titulo_w in ('5','14','26') and doc_p.nm_atributo <> 'VL_JUROS') then
        begin
        select  a.nr_seq_conta_banco, --3
                a.nr_bordero, --6
                a.nr_seq_escrit, --7
                b.cd_centro_custo, --8
                b.cd_conta_contabil, --9
                a.nr_seq_baixa, --14
                a.nr_seq_movto_trans_fin, --16
                c.nr_seq_classe, --17
                a.cd_tipo_baixa, --18
                a.cd_tributo, --20
                c.nr_seq_proj_rec, --21
                c.ie_origem_titulo, --25
                CASE WHEN coalesce(a.nr_seq_baixa_origem::text, '') = '' THEN ''  ELSE obter_desc_expressao(304277) END  ds_estorno --26
        into STRICT    dados_contab_w.nr_seq_conta_banco, --3
                nr_bordero_w, --6
                nr_seq_escrit_w, --7
                dados_contab_w.cd_centro_custo, --8
                dados_contab_w.cd_conta_contabil, --9
                nr_seq_baixa_w, --14
                nr_seq_movto_trans_fin_w, --16
                nr_seq_classe_w, --17
                dados_contab_w.cd_tipo_baixa, --18
                dados_contab_w.cd_tributo, --20
                dados_contab_w.nr_seq_proj_rec, --21
                ie_origem_titulo_w, --25
                ds_estorno_w --26
        FROM titulo_pagar c, titulo_pagar_baixa_contab_v a
LEFT OUTER JOIN titulo_pagar_baixa_cc b ON (a.nr_titulo = b.nr_titulo AND a.nr_seq_baixa = b.nr_seq_baixa)
WHERE b.nr_titulo     = doc_p.nr_documento and b.nr_seq_baixa  = doc_p.nr_seq_doc_compl and b.nr_sequencia  = doc_p.nr_doc_analitico and a.ds_atributo   = doc_p.nm_atributo   and c.nr_titulo     = a.nr_titulo and a.nr_seq_baixa = (SELECT MAX(alf.nr_seq_baixa) FROM titulo_pagar_baixa_contab_v alf WHERE alf.nr_titulo = a.nr_titulo);
        end;
    elsif (ctb_param_lote_contas_pag_w.ie_contab_classif_baixa = 'S' and ie_tipo_titulo_w = '21' and doc_p.nm_atributo <> 'VL_BAIXA' ) then
        begin
        select  a.nr_seq_conta_banco, --3
                a.nr_bordero, --6
                a.nr_seq_escrit, --7
                b.cd_centro_custo, --8
                b.cd_conta_contabil, --9
                a.nr_seq_baixa, --14
                a.nr_seq_movto_trans_fin, --16
                c.nr_seq_classe, --17
                a.cd_tipo_baixa, --18
                a.cd_tributo, --20
                c.nr_seq_proj_rec, --21
                c.ie_origem_titulo, --25
                CASE WHEN coalesce(a.nr_seq_baixa_origem::text, '') = '' THEN ''  ELSE obter_desc_expressao(304277) END  ds_estorno --26
        into STRICT    dados_contab_w.nr_seq_conta_banco, --3
                nr_bordero_w, --6
                nr_seq_escrit_w, --7
                dados_contab_w.cd_centro_custo, --8
                dados_contab_w.cd_conta_contabil, --9
                nr_seq_baixa_w, --14
                nr_seq_movto_trans_fin_w, --16
                nr_seq_classe_w, --17
                dados_contab_w.cd_tipo_baixa, --18
                dados_contab_w.cd_tributo, --20
                dados_contab_w.nr_seq_proj_rec, --21
                ie_origem_titulo_w, --25
                ds_estorno_w --26
        FROM titulo_pagar c, titulo_pagar_baixa_contab_v a
LEFT OUTER JOIN titulo_pagar_baixa_cc b ON (a.nr_titulo = b.nr_titulo AND a.nr_seq_baixa = b.nr_seq_baixa)
WHERE b.nr_titulo     = doc_p.nr_documento and b.nr_seq_baixa  = doc_p.nr_seq_doc_compl and b.nr_sequencia  = doc_p.nr_doc_analitico and a.ds_atributo   = doc_p.nm_atributo   and c.nr_titulo     = a.nr_titulo;
        end;
    end if;
elsif (doc_p.nm_tabela = 'TITULO_PAGAR_CLASSIF') then
    if (doc_p.nm_atributo = 'VL_TITULO') then
        begin
        select  b.cd_centro_custo, --8
                b.cd_conta_contabil, --9
                b.vl_original, --12
                a.nr_seq_classe, --17
                a.nr_seq_proj_rec, --21
                a.ie_origem_titulo --25
        into STRICT    dados_contab_w.cd_centro_custo, --8
                dados_contab_w.cd_conta_contabil, --9
                vl_original_w, --12
                nr_seq_classe_w, --17
                dados_contab_w.nr_seq_proj_rec, --21
                ie_origem_titulo_w --25
        from    titulo_pagar_classif b,
                titulo_pagar a
        where   b.nr_titulo     = doc_p.nr_documento
        and     b.nr_sequencia  = doc_p.nr_seq_doc_compl
        and     a.nr_titulo     = b.nr_titulo;
        end;
    elsif (doc_p.nm_atributo = 'VL_TIT_LIQ_IMP') then
        begin
        select  coalesce(dados_contab_w.nr_seq_trans_fin, a.nr_seq_trans_fin_contab), --4
                b.cd_centro_custo, --8
                b.cd_conta_contabil, --9
                b.vl_original, --12
                a.nr_seq_classe, --17
                a.nr_seq_proj_rec, --21
                a.ie_origem_titulo --25
        into STRICT    dados_contab_w.nr_seq_trans_fin, --4
                dados_contab_w.cd_centro_custo, --8
                dados_contab_w.cd_conta_contabil, --9
                vl_original_w, --12
                nr_seq_classe_w, --17
                dados_contab_w.nr_seq_proj_rec, --21
                ie_origem_titulo_w --25
        from    titulo_pagar_classif b,
                titulo_pagar a
        where   a.nr_titulo     = doc_p.nr_documento
        and     b.nr_sequencia  = doc_p.nr_seq_doc_compl
        and     a.nr_titulo     = b.nr_titulo;
        end;
    end if;
elsif (doc_p.nm_atributo = 'VL_PROV_TRIBUTO' and doc_p.nm_tabela = 'TITULO_PAGAR_IMPOSTO' and ctb_param_lote_contas_pag_w.ie_contab_prov_tributo = 'S') then
    begin
    select  r.nr_seq_classe, --17
            i.cd_tributo, --20
            r.nr_seq_proj_rec, --21
            r.ie_origem_titulo --25
    into STRICT    nr_seq_classe_w, --17
            dados_contab_w.cd_tributo, --20
            dados_contab_w.nr_seq_proj_rec, --21
            ie_origem_titulo_w --25
    from    titulo_pagar r,
            tributo t,
            titulo_pagar_imposto i
    where   i.nr_titulo     = doc_p.nr_documento
    and     i.nr_seq_baixa  = doc_p.nr_seq_doc_compl
    and     i.nr_sequencia  = doc_p.nr_doc_analitico
    and     i.cd_tributo    = t.cd_tributo
    and     r.nr_titulo     = i.nr_titulo
    and     t.ie_contab_prov_cp = 'S';
    end;

elsif (doc_p.nm_tabela = 'TITULO_PAGAR_BAIXA_CC_CONTAB_V' and ctb_param_lote_contas_pag_w.ie_contab_classif_baixa = 'T') then
    begin
    select  a.nr_seq_conta_banco, --3
            a.nr_bordero, --6
            a.nr_seq_escrit, --7
            a.cd_centro_custo, --8
            a.cd_conta_contabil, --9
            a.nr_seq_baixa, --14
            a.nr_seq_movto_trans_fin, --16
            c.nr_seq_classe, --17
            a.cd_tipo_baixa, --18
            c.nr_seq_proj_rec, --21
            c.ie_origem_titulo, --25
            CASE WHEN coalesce(a.nr_seq_baixa_origem::text, '') = '' THEN ''  ELSE obter_desc_expressao(304277) END  ds_estorno --26
    into STRICT    dados_contab_w.nr_seq_conta_banco, --3
            nr_bordero_w, --6
            nr_seq_escrit_w, --7
            dados_contab_w.cd_centro_custo, --8
            dados_contab_w.cd_conta_contabil, --9
            nr_seq_baixa_w, --14
            nr_seq_movto_trans_fin_w, --16
            nr_seq_classe_w, --17
            dados_contab_w.cd_tipo_baixa, --18
            dados_contab_w.nr_seq_proj_rec, --21
            ie_origem_titulo_w, --25
            ds_estorno_w --26
    from    titulo_pagar_baixa_cc_contab_v a,
            titulo_pagar c
    where   a.nr_titulo             = doc_p.nr_documento
    and     a.nr_seq_baixa          = doc_p.nr_seq_doc_compl
    and     a.nr_seq_baixa_cc       = doc_p.nr_doc_analitico
    and     a.nr_titulo             = c.nr_titulo
    and     a.ds_atributo           = doc_p.nm_atributo;
    end;

elsif (doc_p.nm_tabela = 'TITULO_PAGAR_BAIXA_CONTAB_V') then
    if (doc_p.nm_atributo = 'VL_NOTA_CREDITO') then
        begin
        select  d.nr_seq_conta_banco, --3
                d.nr_bordero, --6
                d.nr_seq_escrit, --7
                d.cd_centro_custo, --8
                d.cd_conta_contabil, --9
                d.nr_seq_baixa, --14
                a.nr_seq_nota_credito, --15
                d.nr_seq_movto_trans_fin, --16
                c.nr_seq_classe, --17
                d.cd_tipo_baixa, --18
                d.cd_tributo, --20
                c.nr_seq_proj_rec, --21
                c.ie_origem_titulo, --25
                CASE WHEN coalesce(d.nr_seq_baixa_origem::text, '') = '' THEN ''  ELSE 'Estorno' END  ds_estorno --26
        into STRICT    dados_contab_w.nr_seq_conta_banco, --3
                nr_bordero_w, --6
                nr_seq_escrit_w, --7
                dados_contab_w.cd_centro_custo, --8
                dados_contab_w.cd_conta_contabil, --9
                nr_seq_baixa_w, --14
                nr_seq_nota_credito_w, --15
                nr_seq_movto_trans_fin_w, --16
                nr_seq_classe_w, --17
                dados_contab_w.cd_tipo_baixa, --18
                dados_contab_w.cd_tributo, --20
                dados_contab_w.nr_seq_proj_rec, --21
                ie_origem_titulo_w, --25
                ds_estorno_w --26
        from    titulo_pagar_baixa_contab_v d,
                titulo_pagar c,
                bordero_nc b,
                bordero_nc_nota_credito a
        where   d.nr_titulo             = doc_p.nr_documento
        and     d.nr_seq_baixa          = doc_p.nr_seq_doc_compl
        and     a.nr_seq_bordero        = b.nr_sequencia
        and     b.nr_sequencia          = c.nr_seq_bordero_nc
        and     d.nr_titulo             = c.nr_titulo
        and     d.ds_atributo           = 'VL_BAIXA'
        and     c.ie_tipo_titulo        = '21';
        end;
    elsif ((ctb_param_lote_contas_pag_w.ie_contab_classif_baixa = 'N')
        or ((ctb_param_lote_contas_pag_w.ie_contab_classif_baixa = 'S')
        and (ie_tipo_titulo_w not in ('5','14','21','26')))) then
        begin
        select  a.nr_seq_conta_banco, --3
                a.nr_bordero, --6
                a.nr_seq_escrit, --7
                a.cd_centro_custo, --8
                a.cd_conta_contabil, --9
                a.nr_seq_baixa, --14
                a.nr_seq_movto_trans_fin, --16
                c.nr_seq_classe, --17
                a.cd_tipo_baixa, --18
                a.cd_tributo, --20
                c.nr_seq_proj_rec, --21
                c.ie_origem_titulo, --25
                CASE WHEN coalesce(a.nr_seq_baixa_origem::text, '') = '' THEN ''  ELSE obter_desc_expressao(304277) END  ds_estorno --26
        into STRICT    dados_contab_w.nr_seq_conta_banco, --3
                nr_bordero_w, --6
                nr_seq_escrit_w, --7
                dados_contab_w.cd_centro_custo, --8
                dados_contab_w.cd_conta_contabil, --9
                nr_seq_baixa_w, --14
                nr_seq_movto_trans_fin_w, --16
                nr_seq_classe_w, --17
                dados_contab_w.cd_tipo_baixa, --18
                dados_contab_w.cd_tributo, --20
                dados_contab_w.nr_seq_proj_rec, --21
                ie_origem_titulo_w, --25
                ds_estorno_w --26
        from    titulo_pagar c,
                titulo_pagar_baixa_contab_v a
        where   a.nr_titulo     = doc_p.nr_documento
        and     a.nr_seq_baixa  = doc_p.nr_seq_doc_compl
        and     coalesce(a.nr_seq_trib_baixa,0) = coalesce(doc_p.nr_doc_analitico,0)
        and     a.ds_atributo   = doc_p.nm_atributo
        and     a.nr_titulo     = c.nr_titulo;
        end;
    elsif (ctb_param_lote_contas_pag_w.ie_contab_classif_baixa = 'S'
        and ie_tipo_titulo_w in ('5','14','26')
        and doc_p.nm_atributo <> 'VL_JUROS') then
        begin
        select  a.nr_seq_conta_banco, --3
                a.nr_bordero, --6
                a.nr_seq_escrit, --7
                a.cd_centro_custo, --8
                a.cd_conta_contabil, --9
                a.nr_seq_baixa, --14
                a.nr_seq_movto_trans_fin, --16
                c.nr_seq_classe, --17
                a.cd_tipo_baixa, --18
                a.cd_tributo, --20
                c.nr_seq_proj_rec, --21
                c.ie_origem_titulo, --25
                CASE WHEN coalesce(a.nr_seq_baixa_origem::text, '') = '' THEN ''  ELSE obter_desc_expressao(304277) END  ds_estorno --26
        into STRICT    dados_contab_w.nr_seq_conta_banco, --3
                nr_bordero_w, --6
                nr_seq_escrit_w, --7
                dados_contab_w.cd_centro_custo, --8
                dados_contab_w.cd_conta_contabil, --9
                nr_seq_baixa_w, --14
                nr_seq_movto_trans_fin_w, --16
                nr_seq_classe_w, --17
                dados_contab_w.cd_tipo_baixa, --18
                dados_contab_w.cd_tributo, --20
                dados_contab_w.nr_seq_proj_rec, --21
                ie_origem_titulo_w, --25
                ds_estorno_w --26
        from    titulo_pagar_baixa_contab_v a,
                titulo_pagar c
        where   a.nr_titulo     = doc_p.nr_documento
        and     a.nr_seq_baixa  = doc_p.nr_seq_doc_compl
        and     a.ds_atributo   = doc_p.nm_atributo
        and     c.nr_titulo     = a.nr_titulo
        and     a.nr_seq_baixa = (SELECT max(alf.nr_seq_baixa) from titulo_pagar_baixa_contab_v alf where alf.nr_titulo = a.nr_titulo);
        end;

    elsif (ctb_param_lote_contas_pag_w.ie_contab_classif_baixa = 'S' and ie_tipo_titulo_w = '21' and doc_p.nm_atributo <> 'VL_BAIXA' ) then
        begin
        select  a.nr_seq_conta_banco, --3
                a.nr_bordero, --6
                a.nr_seq_escrit, --7
                a.cd_centro_custo, --8
                a.cd_conta_contabil, --9
                a.nr_seq_baixa, --14
                a.nr_seq_movto_trans_fin, --16
                c.nr_seq_classe, --17
                a.cd_tipo_baixa, --18
                a.cd_tributo, --20
                c.nr_seq_proj_rec, --21
                c.ie_origem_titulo, --25
                CASE WHEN coalesce(a.nr_seq_baixa_origem::text, '') = '' THEN ''  ELSE obter_desc_expressao(304277) END  ds_estorno --26
        into STRICT    dados_contab_w.nr_seq_conta_banco, --3
                nr_bordero_w, --6
                nr_seq_escrit_w, --7
                dados_contab_w.cd_centro_custo, --8
                dados_contab_w.cd_conta_contabil, --9
                nr_seq_baixa_w, --14
                nr_seq_movto_trans_fin_w, --16
                nr_seq_classe_w, --17
                dados_contab_w.cd_tipo_baixa, --18
                dados_contab_w.cd_tributo, --20
                dados_contab_w.nr_seq_proj_rec, --21
                ie_origem_titulo_w, --25
                ds_estorno_w --26
        from    titulo_pagar_baixa_contab_v a,
                titulo_pagar c
        where   a.nr_titulo     = doc_p.nr_documento
        and     a.nr_seq_baixa  = doc_p.nr_seq_doc_compl
        and     a.ds_atributo   = doc_p.nm_atributo
        and     c.nr_titulo     = a.nr_titulo;
        end;
    end if;
end if;
end;

begin
if (ie_origem_titulo_w = 20) then
    begin
    select  b.nr_seq_lote
    into STRICT    nr_seq_lote_pagamento_w
    from    pls_pag_prest_vencimento a,
            pls_pagamento_prestador b
    where   a.nr_seq_pag_prestador  = b.nr_sequencia
    and     a.nr_titulo = dados_contab_w.nr_titulo_pagar;
    exception when others then
        nr_seq_lote_pagamento_w := 0;
    end;
end if;

if (doc_p.nm_atributo <> 'VL_BAIXA') and (doc_p.nm_atributo <> 'VL_TITULO') and (doc_p.nm_atributo <> 'VL_TIT_LIQ_IMP') and (ctb_param_lote_contas_pag_w.ie_contab_classif_baixa <> 'T') then    -- edgar 07/01/2008, os 73435, incluido vl_tit_liq_imp
                dados_contab_w.cd_conta_contabil        := null;
                dados_contab_w.cd_centro_custo          := null;
end if;

if (coalesce(nr_seq_movto_trans_fin_w,0) <> 0) then
    begin
    select  substr(ds_historico,1,200)
    into STRICT    ds_hist_movto_trans_financ_w
    from    movto_trans_financ
    where   nr_sequencia = nr_seq_movto_trans_fin_w;
    exception when others then
        ds_hist_movto_trans_financ_w := '';
    end;
end if;

if (doc_p.nm_atributo = 'VL_BAIXA') and (ie_tipo_titulo_w not in ('5','14','21','26')) and (coalesce(dados_contab_w.cd_conta_contabil,'X') <> 'X') and (ctb_param_lote_contas_pag_w.ie_contab_tit_adiant = 'N') and (ctb_param_lote_contas_pag_w.ie_contab_classif_baixa <> 'T') then
     dados_contab_w.cd_conta_contabil := null;
end if;

if (doc_p.nm_atributo = 'VL_ADIANT_TIT_PAGAR') then
        nr_tit_orig_adiant_w := (substr(obter_dados_adiant_pago(nr_adiantamento_w, 'O'), 1, 10))::numeric;

elsif (doc_p.nm_atributo not in ('VL_ADIANT_DEV', 'VL_ADIANT_PAGO')) then
        nr_adiantamento_w := (substr(obter_dados_tit_pagar(dados_contab_w.nr_titulo_pagar, 'AD'), 1, 10))::numeric;

        if (coalesce(nr_adiantamento_w,0) <> 0) then
                nr_tit_orig_adiant_w := (substr(obter_dados_adiant_pago(nr_adiantamento_w, 'O'), 1, 10))::numeric;
        end if;
end if;

if (coalesce(dados_contab_w.nr_titulo_pagar,0) <> 0) then
        nr_ret_convenio_w       := OBTER_DADOS_TIT_PAGAR(dados_contab_w.nr_titulo_pagar, 'RET');
        nr_lote_recurso_w       := OBTER_DADOS_TIT_PAGAR(dados_contab_w.nr_titulo_pagar, 'LA');
end if;

if (coalesce(dados_contab_w.nr_titulo_pagar,0) <> 0) and (coalesce(nr_seq_baixa_w,0) <> 0) then

    begin
    select  ds_observacao
    into STRICT    ds_obs_baixa_titulo_w
    from    titulo_pagar_baixa
    where   nr_titulo       = dados_contab_w.nr_titulo_pagar
    and     nr_sequencia    = nr_seq_baixa_w;
    exception when others then
        ds_obs_baixa_titulo_w := '';
    end;
end if;

if (doc_p.nm_atributo not in ('VL_ADIANT_DEV','VL_ADIANT_PAGO')) then
    select  a.cd_pessoa_fisica,
            a.cd_cgc,
            coalesce(a.nr_documento,0),
            coalesce(b.nm_pessoa_fisica, c.ds_razao_social),
            ds_compl_contab,
            a.dt_contabil,
            coalesce(b.nm_pessoa_fisica, c.ds_razao_social),
            a.nr_repasse_terceiro,
            a.cd_tributo,
            a.nr_seq_trans_fin_baixa,
            coalesce(a.nr_seq_lote_res_pls,0),
            c.nm_fantasia,
            a.cd_estabelecimento,
            substr(obter_nome_estabelecimento(a.cd_estabelecimento),1,80),
            substr(replace(a.ds_observacao_titulo,'#@',''),1,255),
            a.ie_situacao,
            a.nr_bloqueto,
            a.nr_seq_rpa,
            substr(obter_dados_nota_fiscal(a.nr_seq_nota_fiscal,0),1,255),
            substr(obter_tributo_titulo_pagar(a.nr_seq_tributo,0),1,40),
            substr(CASE WHEN coalesce(obter_dados_operacao_nota(a.nr_seq_nota_fiscal,8),'N')='N' THEN 'NF'  ELSE 'NFE' END ,1,3) ie_nf_nfe,
            a.nr_seq_nota_fiscal,
            a.nr_seq_proj_rec
    into STRICT    dados_contab_w.cd_pessoa_fisica,
            dados_contab_w.cd_cnpj,
            nr_documento_w,
            ds_benefic_w,
            ds_compl_contab_w,
            dt_contabil_titulo_w,
            ds_pessoa_titulo_w,
            dados_contab_w.nr_repasse_terceiro,
            cd_tributo_w,
            nr_seq_trans_fin_baixa_w,
            nr_seq_lote_res_pls_w,
            nm_fantasia_pj_w,
            cd_estab_titulo_w,
            ds_estab_titulo_w,
            ds_observacao_titulo_w,
            ie_situacao_w,
            nr_bloqueto_w,
            nr_seq_rpa_w,
            nr_nota_fiscal_w,
            ds_tributo_w,
            ie_nf_nfe_w,
            nr_seq_nota_fiscal_w,
            dados_contab_w.nr_seq_proj_rec
    FROM titulo_pagar a
LEFT OUTER JOIN pessoa_fisica b ON (a.cd_pessoa_fisica = b.cd_pessoa_fisica)
LEFT OUTER JOIN pessoa_juridica c ON (a.cd_cgc = c.cd_cgc)
WHERE nr_titulo = dados_contab_w.nr_titulo_pagar;

elsif (doc_p.nm_atributo = 'VL_ADIANT_DEV') then
    select  a.cd_pessoa_fisica,
            a.cd_cgc,
            a.ds_observacao,
            b.ds_motivo_dev
    into STRICT    dados_contab_w.cd_pessoa_fisica,
            dados_contab_w.cd_cnpj,
            ds_obs_adiant_pago_w,
            ds_motivo_dev_w
    from    adiantamento_pago       a,
            adiant_pago_dev         b
    where   a.nr_adiantamento       = b.nr_adiantamento
    and     a.nr_adiantamento   = nr_adiantamento_w
    and     b.nr_sequencia      = nr_seq_adiant_dev_w;

    if (dados_contab_w.cd_cnpj IS NOT NULL AND dados_contab_w.cd_cnpj::text <> '') then
            nm_fantasia_pj_w := substr(obter_dados_pf_pj(null,dados_contab_w.cd_cnpj,'F'),1,80);
    end if;

elsif (doc_p.nm_atributo = 'VL_ADIANT_PAGO') and (coalesce(nr_adiantamento_w,0) <> 0) then
    select  a.cd_pessoa_fisica,
            a.cd_cgc,
            a.ds_observacao
    into STRICT    dados_contab_w.cd_pessoa_fisica,
            dados_contab_w.cd_cnpj,
            ds_obs_adiant_pago_w
    from    adiantamento_pago       a
    where   a.nr_adiantamento = nr_adiantamento_w;
end if;

if (coalesce(dados_contab_w.cd_tributo,0) = 0) then
        dados_contab_w.cd_tributo := cd_tributo_w;
end if;

cd_estab_titulo_ww  := cd_estab_titulo_w;

/* Alteracoes CPSL */

if (ie_situacao_w = 'D') and (doc_p.nm_atributo = 'VL_TITULO') and (coalesce(ctb_movimento_w.vl_movimento,0) = 0) and (ctb_param_lote_contas_pag_w.ie_contab_vl_original = 'S') then

        ctb_movimento_w.vl_movimento := coalesce(vl_original_w, ctb_movimento_w.vl_movimento);
end if;

if (nr_seq_nota_fiscal_w IS NOT NULL AND nr_seq_nota_fiscal_w::text <> '') then
        select  nr_nfe_imp
        into STRICT    nr_nfe_imp_w
        from    nota_fiscal
        where   nr_sequencia = nr_seq_nota_fiscal_w;
end if;

if (nr_nota_fiscal_w IS NOT NULL AND nr_nota_fiscal_w::text <> '') then
        begin
        select  cd_natureza_operacao,
                cd_operacao_nf
        into STRICT    cd_natureza_operacao_w,
                cd_operacao_nf_w
        from    nota_fiscal
        where   nr_sequencia = nr_nota_fiscal_w;
        exception when others then
                cd_natureza_operacao_w := 0;
                cd_operacao_nf_w := 0;
        end;
end if;

if (doc_p.nm_atributo = 'VL_TITULO') then
    vl_total_tributo_w      := 0;

    open C02;
    loop
    fetch C02 into
            vl_tributo_w,
            cd_tributo_ww,
            vl_base_calculo_w;
    EXIT WHEN NOT FOUND; /* apply on C02 */
    begin
    select  count(*)
    into STRICT    qt_pago_outros_w
    from    titulo_pagar_imposto
    where   nr_titulo       = dados_contab_w.nr_titulo_pagar
    and     cd_tributo      = cd_tributo_ww
    and     ie_pago_prev    = 'P';

    SELECT * FROM obter_dados_trib_tit_pagar( cd_tributo_ww, doc_p.cd_estabelecimento, dados_contab_w.cd_cnpj, dados_contab_w.cd_pessoa_fisica, ds_irrelevante_w_2, ds_irrelevante_w, ds_irrelevante_w, cd_conta_financ_regra_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w_2, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, clock_timestamp(), ds_irrelevante_w_2, ds_irrelevante_w_2, 'N', cd_natureza_operacao_w, null, null, null, null, nr_seq_regra_w, cd_operacao_nf_w, qt_pago_outros_w, ds_irrelevante_w, ds_irrelevante_w, vl_base_calculo_w, 'N', nr_seq_classe_w, ie_origem_titulo_w, null, null) INTO STRICT ds_irrelevante_w_2, ds_irrelevante_w, ds_irrelevante_w, cd_conta_financ_regra_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w_2, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w_2, ds_irrelevante_w_2, nr_seq_regra_w, ds_irrelevante_w, ds_irrelevante_w;
    begin
    select  ie_contab_valor_trib
    into STRICT    ie_contab_valor_trib_w
    from    tributo_conta_pagar
    where   nr_sequencia = nr_seq_regra_w;
    exception when others then
            ie_contab_valor_trib_w  := 'N';
    end;

    if (ie_contab_valor_trib_w = 'S') then
            vl_total_tributo_w      := vl_total_tributo_w + vl_tributo_w;
    end if;

    end;
    end loop;
    close C02;

    begin
    if (vl_total_tributo_w <> 0) then
            ctb_movimento_w.vl_movimento    := ctb_movimento_w.vl_movimento + vl_total_tributo_w;
    end if;
    end;
end if;

dt_mesano_contab_w  := to_char(dt_contabil_titulo_w, 'mm/yyyy');
nr_documento_tit_w  := somente_numero(substr(nr_documento_w,1,20));

if (ctb_param_lote_contas_pag_w.ie_contab_trans_fin_baixa = 'S') and (coalesce(nr_seq_escrit_w,0) <> 0) then
        dados_contab_w.nr_seq_trans_fin := coalesce(nr_seq_trans_fin_baixa_w, dados_contab_w.nr_seq_trans_fin);
end if;

if (nr_seq_lote_res_pls_w <> 0) then
        select  to_char(dt_mes_competencia,'dd/mm/yyyy')
        into STRICT    ds_mes_competencia_w
        from    pls_lote_protocolo
        where   nr_sequencia = nr_seq_lote_res_pls_w;
end if;

if (dados_contab_w.nr_repasse_terceiro IS NOT NULL AND dados_contab_w.nr_repasse_terceiro::text <> '') then
        select  a.nr_seq_terceiro,
                to_char(a.dt_mesano_referencia,'dd/mm/yyyy')
        into STRICT    nr_seq_terceiro_w,
                ds_mesano_ref_repasse_w
        from    repasse_terceiro a
        where   nr_repasse_terceiro     = dados_contab_w.nr_repasse_terceiro;

        select  obter_nome_pf_pj(dados_contab_w.cd_pessoa_fisica, dados_contab_w.cd_cnpj)
        into STRICT    nm_terceiro_w
        from    terceiro
        where   nr_sequencia = nr_seq_terceiro_w;
end if;

if (coalesce(nr_bordero_w ,0) <> 0) then
        begin
        select  ds_bordero
        into STRICT    ds_bordero_w
        from    bordero_pagamento
        where   nr_bordero = nr_bordero_w;
        exception when others then
                ds_bordero_w := '';
        end;
end if;

if (dados_contab_w.nr_titulo_pagar <> 0) and (ctb_param_lote_contas_pag_w.ie_benef_orig_trib_contab = 'S') then
        ds_benef_origem_w       := obter_benef_orig_trib(dados_contab_w.nr_titulo_pagar);
end if;

if (ds_benef_origem_w IS NOT NULL AND ds_benef_origem_w::text <> '') then
        ds_benefic_w := ds_benef_origem_w;
end if;

if (doc_p.nm_atributo not in ('VL_ADIANT_DEV', 'VL_ADIANT_PAGO')) then
    select  coalesce(nr_parcelas, 0),
            coalesce(nr_total_parcelas, 0)
    into STRICT    nr_parcelas_w,
            nr_total_parcelas_w
    from    titulo_pagar
    where   nr_titulo = dados_contab_w.nr_titulo_pagar;

    if (ctb_param_lote_contas_pag_w.ie_tit_contab_baixa = 'S') then
            if (nr_parcelas_w <> 0) then
                    ds_titulo_w     := ' (' || dados_contab_w.nr_titulo_pagar || ' Parc. ' || nr_parcelas_w || ')';
            else
                    ds_titulo_w     := ' (' || dados_contab_w.nr_titulo_pagar || ')';
            end if;
    else
            ds_titulo_w := '';
    end if;
end if;

begin
        nr_cheque_w := substr(obter_cheque_tit_pagar(dados_contab_w.nr_titulo_pagar),1,250);
        qt_cheque_w := position(',' in substr(obter_cheque_tit_pagar(dados_contab_w.nr_titulo_pagar),1,250));
end;

nm_agrupador_w  := coalesce(trim(both obter_agrupador_contabil(doc_p.cd_tipo_lote_contabil)),'NR_TITULO');

if (nm_agrupador_w = 'NR_TITULO') then
        dados_contab_w.nr_seq_agrupamento := dados_contab_w.nr_titulo_pagar;

elsif (nm_agrupador_w = 'NR_SEQ_ESCRIT') then
        dados_contab_w.nr_seq_agrupamento := nr_seq_escrit_w;

elsif (nm_agrupador_w = 'NR_BORDERO') then
        dados_contab_w.nr_seq_agrupamento := nr_bordero_w;

elsif (nm_agrupador_w = 'NR_ADIANTAMENTO') then
        dados_contab_w.nr_seq_agrupamento := nr_adiantamento_w;

elsif (nm_agrupador_w = 'NR_BORDERO_ESCRIT') then
        dados_contab_w.nr_seq_agrupamento := coalesce(nr_bordero_w,nr_seq_escrit_w);

elsif (nm_agrupador_w = 'NR_SEQ_LOTE_PAGAMENTO') then
        dados_contab_w.nr_seq_agrupamento := coalesce(nr_seq_lote_pagamento_w,0);

elsif (nm_agrupador_w = 'NR_CHEQUE_BORDERO_TITULO') then
        begin
        dados_contab_w.nr_seq_agrupamento := coalesce(nr_bordero_w,dados_contab_w.nr_titulo_pagar);

        if (coalesce(qt_cheque_w, 0) = 0) and (coalesce(nr_cheque_w, '0') <> '0') then
                dados_contab_w.nr_seq_agrupamento := somente_numero(nr_cheque_w);
        end if;
        end;
elsif (nm_agrupador_w = 'NR_CHEQUE_BORDERO_TITULO_ESCRIT') then
        begin
        dados_contab_w.nr_seq_agrupamento := coalesce(nr_bordero_w,nr_seq_escrit_w,dados_contab_w.nr_titulo_pagar);

        if (coalesce(qt_cheque_w, 0) = 0) and (coalesce(nr_cheque_w, '0') <> '0') then
                dados_contab_w.nr_seq_agrupamento := somente_numero(nr_cheque_w);
        end if;
        end;
end if;

if (coalesce(dados_contab_w.nr_seq_agrupamento,0) = 0)   then
        select  coalesce(CASE WHEN dados_contab_w.nr_titulo_pagar=0 THEN  null  ELSE dados_contab_w.nr_titulo_pagar END ,nr_adiantamento_w)
        into STRICT    dados_contab_w.nr_seq_agrupamento
;
end if;

if (doc_p.nm_atributo = 'VL_PAGO') then
    begin
    if (coalesce(nr_bordero_w,0) <> 0) then
        select  max(coalesce(nr_cheque, to_char(nr_bordero))),
                max(coalesce(dados_contab_w.nr_seq_conta_banco, nr_seq_conta_banco))
        into STRICT    nr_doc_vl_pago_w,
                dados_contab_w.nr_seq_conta_banco
        from    bordero_pagamento
        where   nr_bordero      = nr_bordero_w;

    elsif (coalesce(nr_seq_escrit_w,0) <> 0) then
        select  max(nr_seq_escrit_w),
                max(coalesce(dados_contab_w.nr_seq_conta_banco, nr_seq_conta_banco))
        into STRICT    nr_doc_vl_pago_w,
                dados_contab_w.nr_seq_conta_banco
        from    banco_escritural
        where   nr_sequencia    = nr_seq_escrit_w;
    end if;
    end;
end if;

nr_bloqueto_w   := coalesce(nr_bloqueto_w,'X');

if ( ie_tipo_titulo_w = '21' ) then
        ds_nota_credito_w       := substr(obter_nota_credito_tit_pag(dados_contab_w.nr_titulo_pagar),1,200);
end if;

if (coalesce(dados_contab_w.nr_seq_conta_banco,0) > 0) then
    begin
    select  ds_banco
    into STRICT    ds_banco_w
    from    banco_estabelecimento_v
    where   nr_sequencia = dados_contab_w.nr_seq_conta_banco;
    exception when others then
            ds_banco_w := '';
    end;
end if;

begin
    select a.nr_sequencia,
        a.nr_nota_fiscal,
        a.cd_serie_nf,
        coalesce(a.nr_nfe_imp,' ')
    into STRICT nr_seq_nota_orig_w,
        nr_nota_orig_w,
        cd_serie_nf_orig_w,
        nr_nfe_imp_orig_w
    from nota_fiscal  a,
        titulo_pagar b,
        nf_credito c
    where a.nr_sequencia = c.nr_seq_nf_orig
    and c.nr_seq_nf_gerada = b.nr_seq_nota_fiscal
    and b.nr_seq_nota_fiscal = nr_seq_nota_fiscal_w;
exception
    when no_data_found then
        nr_seq_nota_orig_w := null;
        nr_nfe_imp_orig_w := null;
        cd_serie_nf_orig_w := null;
        nr_nota_orig_w := null;
    when too_many_rows then 
        nr_seq_nota_orig_w := null;
        nr_nfe_imp_orig_w := null;
        cd_serie_nf_orig_w := null;
        nr_nota_orig_w := null;
end;

CALL ctb_online_pck.definir_atrib_compl(doc_p.cd_tipo_lote_contabil);
CALL ctb_online_pck.set_value_compl_hist('NR_BORDERO', nr_bordero_w);
CALL ctb_online_pck.set_value_compl_hist('NR_SEQ_ESCRIT', nr_seq_escrit_w);
CALL ctb_online_pck.set_value_compl_hist('NR_CHEQUE', nr_cheque_w);
CALL ctb_online_pck.set_value_compl_hist('CD_PESSOA_FISICA', dados_contab_w.cd_pessoa_fisica);
CALL ctb_online_pck.set_value_compl_hist('CD_CGC', dados_contab_w.cd_cnpj);
CALL ctb_online_pck.set_value_compl_hist('DS_BENEFICIARIO', ds_pessoa_titulo_w);
CALL ctb_online_pck.set_value_compl_hist('DS_COMPL_CONTAB', ds_compl_contab_w);
CALL ctb_online_pck.set_value_compl_hist('DS_BORDERO', ds_bordero_w);
CALL ctb_online_pck.set_value_compl_hist('DS_BENEF_ORIGEM', ds_benef_origem_w);
CALL ctb_online_pck.set_value_compl_hist('NR_PARCELAS', nr_parcelas_w);
CALL ctb_online_pck.set_value_compl_hist('DT_CONTABIL', doc_p.dt_competencia);
CALL ctb_online_pck.set_value_compl_hist('DT_MESANO_CONTAB', dt_mesano_contab_w);
CALL ctb_online_pck.set_value_compl_hist('NR_TITULO_ORIGINAL', dados_contab_w.nr_titulo_pagar);
CALL ctb_online_pck.set_value_compl_hist('NR_TOTAL_PARCELAS', nr_total_parcelas_w);
CALL ctb_online_pck.set_value_compl_hist('NM_TERCEIRO', nm_terceiro_w);
CALL ctb_online_pck.set_value_compl_hist('DS_MESANO_REF_REPASSE', ds_mesano_ref_repasse_w);
CALL ctb_online_pck.set_value_compl_hist('NR_ADIANTAMENTO', nr_adiantamento_w);
CALL ctb_online_pck.set_value_compl_hist('NR_TITULO_ORIG_ADIANT', nr_tit_orig_adiant_w);
CALL ctb_online_pck.set_value_compl_hist('DS_MES_COMPETENCIA_OPS', ds_mes_competencia_w);
CALL ctb_online_pck.set_value_compl_hist('DS_BANCO', ds_banco_w);
CALL ctb_online_pck.set_value_compl_hist('NM_FANTASIA_PJ', nm_fantasia_pj_w);
CALL ctb_online_pck.set_value_compl_hist('CD_ESTABELECIMENTO', cd_estab_titulo_w);
CALL ctb_online_pck.set_value_compl_hist('DS_ESTABELECIMENTO', ds_estab_titulo_w);
CALL ctb_online_pck.set_value_compl_hist('NR_SEQ_RPA', nr_seq_rpa_w);
CALL ctb_online_pck.set_value_compl_hist('DS_OBS_ADIANT_PAGO', ds_obs_adiant_pago_w);
CALL ctb_online_pck.set_value_compl_hist('DS_OBS_BAIXA_TITULO', ds_obs_baixa_titulo_w);
CALL ctb_online_pck.set_value_compl_hist('DS_MOTIVO_DEV', ds_motivo_dev_w);
CALL ctb_online_pck.set_value_compl_hist('NR_RET_CONVENIO', nr_ret_convenio_w);
CALL ctb_online_pck.set_value_compl_hist('NR_LOTE_RECURSO', nr_lote_recurso_w);
CALL ctb_online_pck.set_value_compl_hist('DS_NOTA_CREDITO', ds_nota_credito_w);
CALL ctb_online_pck.set_value_compl_hist('NR_SEQ_NOTA_CREDITO', nr_seq_nota_credito_w);
CALL ctb_online_pck.set_value_compl_hist('DS_HIST_MOVTO_TRANS_FINANC', ds_hist_movto_trans_financ_w);
CALL ctb_online_pck.set_value_compl_hist('DS_TRIBUTO', ds_tributo_w);
CALL ctb_online_pck.set_value_compl_hist('VL_OUTRAS_DESPESAS', vl_outras_despesas_w);
CALL ctb_online_pck.set_value_compl_hist('NM_PF_PJ_TIT_ORIGINAL', nm_pf_pj_tit_orig_w);
CALL ctb_online_pck.set_value_compl_hist('IE_NF_NFE', ie_nf_nfe_w);
CALL ctb_online_pck.set_value_compl_hist('DS_ESTORNO', ds_estorno_w);
CALL ctb_online_pck.set_value_compl_hist('DS_OBSERVACAO_TITULO', '');
CALL ctb_online_pck.set_value_compl_hist('NR_SEQ_NOTA_ORIG',nr_seq_nota_orig_w);
CALL ctb_online_pck.set_value_compl_hist('NR_NOTA_ORIG',nr_nota_orig_w);
CALL ctb_online_pck.set_value_compl_hist('CD_SERIE_NF_ORIG',cd_serie_nf_orig_w);
CALL ctb_online_pck.set_value_compl_hist('NR_NFE_IMP_ORIG',nr_nfe_imp_orig_w);

if (coalesce(dados_contab_w.cd_cnpj, '0') <> '0') then
    ie_intercompany_w := holding_pck.get_se_intercompany_cnpj(cd_estabelecimento_p => doc_p.cd_estabelecimento, cd_cgc_emitente_p => dados_contab_w.cd_cnpj);
end if;

if (ie_intercompany_w = 'S') then
    CALL ctb_online_pck.set_value_compl_hist(
        nm_atributo_p => 'CD_ESTAB_INTERCOMPANY_ORI', ds_valor_p => cd_estab_titulo_w);
    CALL ctb_online_pck.set_value_compl_hist(
        nm_atributo_p => 'DS_ESTAB_INTERCOMPANY_ORI', ds_valor_p => ds_estab_titulo_w);
    CALL ctb_online_pck.set_value_compl_hist(
        nm_atributo_p => 'CD_ESTAB_INTERCOMPANY_DES', ds_valor_p => doc_p.cd_estabelecimento);
    CALL ctb_online_pck.set_value_compl_hist(
        nm_atributo_p => 'DS_ESTAB_INTERCOMPANY_DES',
        ds_valor_p => substr(obter_nome_estabelecimento(doc_p.cd_estabelecimento),1,80));

    begin
        select cd_interno
        into STRICT cd_interno_intercompany_ori_w
        from estabelecimento
        where cd_estabelecimento = cd_estab_titulo_w
        and cd_empresa = obter_empresa_estab(cd_estab_titulo_w);
    exception
        when no_data_found then
            cd_interno_intercompany_ori_w := null;
        when too_many_rows then
            cd_interno_intercompany_ori_w := null;
        when others then
            cd_interno_intercompany_ori_w := null;
    end;

    begin
        select cd_interno
        into STRICT cd_interno_intercompany_des_w
        from estabelecimento
        where cd_estabelecimento = doc_p.cd_estabelecimento
        and cd_empresa = obter_empresa_estab(doc_p.cd_estabelecimento);
    exception
        when no_data_found then
            cd_interno_intercompany_des_w := null;
        when too_many_rows then
            cd_interno_intercompany_des_w := null;
        when others then
            cd_interno_intercompany_des_w := null;
    end;

    CALL ctb_online_pck.set_value_compl_hist(
        nm_atributo_p => 'CD_INTERNO_INTERCOMPANY_ORI', ds_valor_p => cd_interno_intercompany_ori_w);
    CALL ctb_online_pck.set_value_compl_hist(
        nm_atributo_p => 'CD_INTERNO_INTERCOMPANY_DES', ds_valor_p => cd_interno_intercompany_des_w);
else
    CALL ctb_online_pck.set_value_compl_hist(
        nm_atributo_p => 'CD_ESTAB_INTERCOMPANY_ORI', ds_valor_p => null);
    CALL ctb_online_pck.set_value_compl_hist(
        nm_atributo_p => 'DS_ESTAB_INTERCOMPANY_ORI', ds_valor_p => null);
    CALL ctb_online_pck.set_value_compl_hist(
        nm_atributo_p => 'CD_ESTAB_INTERCOMPANY_DES', ds_valor_p => null);
    CALL ctb_online_pck.set_value_compl_hist(
        nm_atributo_p => 'DS_ESTAB_INTERCOMPANY_DES', ds_valor_p => null);
    CALL ctb_online_pck.set_value_compl_hist(
        nm_atributo_p => 'CD_INTERNO_INTERCOMPANY_ORI', ds_valor_p => null);
    CALL ctb_online_pck.set_value_compl_hist(
        nm_atributo_p => 'CD_INTERNO_INTERCOMPANY_DES', ds_valor_p => null);
end if;

if (ctb_param_lote_contas_pag_w.ie_contab_tit_bloqueto = 'A') and (nr_bloqueto_w <> 'X') and (dados_contab_w.nr_seq_trans_fin IS NOT NULL AND dados_contab_w.nr_seq_trans_fin::text <> '') then

    open C03;
    loop
    fetch C03 into
            nr_titulo_bloqueto_w,
            vl_out_desp_bordero_w;
    EXIT WHEN NOT FOUND; /* apply on C03 */
    begin
            ie_contab_w := 'N';

            if (ie_permite_estab_dif_w <> 'PCCT') then
                    cd_estab_titulo_ww      := null;
            end if;

            if ((doc_p.nm_atributo = 'VL_ADIANT_TIT_PAGAR') and (coalesce(dados_contab_w.cd_conta_contabil,'0') = '0') and (coalesce(dados_contab_w.nr_titulo_pagar,0) <> 0) and (ctb_param_lote_contas_pag_w.ie_conta_contab_tit_adiant = 'S')) then --21/11/2012
                begin
                select  b.cd_conta_contabil,
                        b.cd_centro_custo
                into STRICT    dados_contab_w.cd_conta_contabil,
                        dados_contab_w.cd_centro_custo
                from    titulo_pagar_classif b,
                        titulo_pagar a
                where   b.nr_titulo             = dados_contab_w.nr_titulo_pagar
                and     a.nr_titulo             = b.nr_titulo;
                exception when others then
                        dados_contab_w.cd_centro_custo  := null;
                        dados_contab_w.cd_conta_contabil:= '';
                end;
            end if;

            select  substr(obter_dados_nota_fiscal(a.nr_seq_nota_fiscal,0),1,255),
                    a.nr_documento
            into STRICT    nr_nota_fiscal_ww,
                    nr_documento_tit_ww
            from    titulo_pagar a
            where   a.nr_titulo     = nr_titulo_bloqueto_w;

            update  titulo_pagar_baixa a
            set     a.nr_lote_contabil      = dados_contab_w.nr_lote_contabil
            where   a.nr_titulo             = nr_titulo_bloqueto_w
            and     a.nr_sequencia          = doc_p.nr_seq_doc_compl;

            CALL ctb_online_pck.set_value_compl_hist('NR_TITULO', nr_titulo_bloqueto_w);
            CALL ctb_online_pck.set_value_compl_hist('VL_OUT_DESP_BORDERO', vl_out_desp_bordero_w);
            CALL ctb_online_pck.set_value_compl_hist('NR_NOTA_FISCAL', nr_nota_fiscal_ww);
            CALL ctb_online_pck.set_value_compl_hist('NR_DOCUMENTO', nr_documento_tit_ww);

            dados_contab_w.ie_origem_documento  := null;
            nr_documento_ww                     := null;
            ds_atributos_w                      := null;

            ds_atributos_w  :=      'NR_NOTA_FISCAL='       || nr_nota_fiscal_ww                    || ';' ||
                                    'NR_TITULO_PAGAR='      || dados_contab_w.nr_titulo_pagar       || ';' ||
                                    'NR_SEQ_NOTA_FISCAL='   || nr_seq_nota_fiscal_w                 || ';' ||
                                    'NR_NFE_IMP='           || nr_nfe_imp_w;

            ctb_obter_doc_movto(    doc_p.cd_tipo_lote_contabil,
                                    doc_p.nm_atributo,
                                    'VR',
                                    dados_contab_w.dt_transacao,
                                    null,
                                    null,
                                    ds_atributos_w,
                                    nm_usuario_p,
                                    ie_regra_w,
                                    nr_documento_ww,
                                    dados_contab_w.ie_origem_documento);

            dados_contab_w.cd_estab_movto   := cd_estab_titulo_ww;
            dados_contab_w.cd_tributo_regra := dados_contab_w.cd_tributo;
            dados_contab_w.nr_doc_movto     := nr_documento_ww;

            ctb_contab_onl_lote_fin_pck.contabiliza_trans_financ(dados_contab_w, nm_usuario_p);
    end;
    end loop;
    close C03;
end if;

begin
select  nr_titulo_original
into STRICT    nr_titulo_original_w
from    titulo_pagar
where   nr_titulo = dados_contab_w.nr_titulo_pagar;
exception when others then
        nr_titulo_original_w := 0;
end;

if (nr_titulo_original_w <> 0) then
    begin
    select  substr(obter_dados_pf_pj(dados_contab_w.cd_pessoa_fisica, dados_contab_w.cd_cnpj,'N'),1,80)
    into STRICT    nm_pf_pj_tit_orig_w
    from    titulo_pagar
    where   nr_titulo       = nr_titulo_original_w;
    exception when others then
            nm_pf_pj_tit_orig_w     := null;
    end;
end if;

if (dados_contab_w.nr_titulo_pagar IS NOT NULL AND dados_contab_w.nr_titulo_pagar::text <> '') then
    select  sum(vl_outras_despesas),
            sum(vl_out_desp_bordero)
    into STRICT    vl_outras_despesas_w,
            vl_out_desp_bordero_w
    from    titulo_pagar
    where   nr_titulo       =  dados_contab_w.nr_titulo_pagar;
end if;

CALL ctb_online_pck.set_value_compl_hist('NR_TITULO', dados_contab_w.nr_titulo_pagar);
CALL ctb_online_pck.set_value_compl_hist('NR_DOCUMENTO', nr_documento_tit_w);
CALL ctb_online_pck.set_value_compl_hist('DS_OBSERVACAO_TITULO', ds_observacao_titulo_w);
CALL ctb_online_pck.set_value_compl_hist('NR_NOTA_FISCAL', nr_nota_fiscal_w);
CALL ctb_online_pck.set_value_compl_hist('VL_OUTRAS_DESPESAS', vl_outras_despesas_w);
CALL ctb_online_pck.set_value_compl_hist('NM_PF_PJ_TIT_ORIGINAL', nm_pf_pj_tit_orig_w);
CALL ctb_online_pck.set_value_compl_hist('VL_OUT_DESP_BORDERO', vl_out_desp_bordero_w);

if (ie_contab_w = 'S') then
    begin
    if (ie_permite_estab_dif_w <> 'PCCT') then
            cd_estab_titulo_ww  := null;
    end if;

    if      ((doc_p.nm_atributo = 'VL_ADIANT_TIT_PAGAR') and (coalesce(dados_contab_w.cd_conta_contabil,'0') = '0') and (coalesce(dados_contab_w.nr_titulo_pagar,0) <> 0) and (ctb_param_lote_contas_pag_w.ie_conta_contab_tit_adiant = 'S')) then --21/11/2012
                    select  coalesce(max(b.cd_conta_contabil),'0'),
                            coalesce(max(b.cd_centro_custo),0)
                    into STRICT    dados_contab_w.cd_conta_contabil,
                            dados_contab_w.cd_centro_custo
                    from    titulo_pagar_classif    b,
                            titulo_pagar            a
                    where   b.nr_titulo             = dados_contab_w.nr_titulo_pagar
                    and     a.nr_titulo             = b.nr_titulo;
    end if;

    dados_contab_w.ie_origem_documento      := null;
    nr_documento_ww                         := null;
    ds_atributos_w                          := null;

    ds_atributos_w  :=  'NR_NOTA_FISCAL='     || nr_nota_fiscal_w               || ';' ||
                        'NR_TITULO_PAGAR='    || dados_contab_w.nr_titulo_pagar || ';' ||
                        'NR_SEQ_NOTA_FISCAL=' || nr_seq_nota_fiscal_w           || ';' ||
                        'NR_NFE_IMP='         || nr_nfe_imp_w;

    ctb_obter_doc_movto(    doc_p.cd_tipo_lote_contabil,
                            doc_p.nm_atributo,
                            'VR',
                            dados_contab_w.dt_transacao,
                            null,
                            null,
                            ds_atributos_w,
                            nm_usuario_p,
                            ie_regra_w,
                            nr_documento_ww,
                            dados_contab_w.ie_origem_documento);

    dados_contab_w.cd_estab_movto   := cd_estab_titulo_ww;
    dados_contab_w.cd_tributo_regra := dados_contab_w.cd_tributo;
    dados_contab_w.nr_doc_movto     := nr_documento_ww;

    if (doc_p.vl_movimento != 0) then
            ctb_contab_onl_lote_fin_pck.contabiliza_trans_financ(dados_contab_w,doc_p.nm_usuario);
    end if;

    if (coalesce(dados_contab_w.doc.nr_Lote_contabil,0) != 0) then
            begin
            if (doc_p.nm_atributo = 'VL_TITULO') then
                begin

                update  titulo_pagar a
                set     nr_lote_contabil        = dados_contab_w.doc.nr_Lote_contabil
                where   nr_titulo               = doc_p.nr_documento;
                end;
            elsif (doc_p.nm_atributo in ('VL_CURTO_PRAZO', 'VL_LONGO_PRAZO')) then
                begin
                update  titulo_pagar    t
                set     t.nr_lote_contabil_curto_prazo = dados_contab_w.doc.nr_Lote_contabil
                where   t.nr_lote_contabil      <> 0
                and     t.nr_lote_contabil      <> dados_contab_w.doc.nr_Lote_contabil
                and     t.nr_titulo             = doc_p.nr_documento;
                end;
            end if;

            if (doc_p.nm_tabela in ('TITULO_PAGAR_BAIXA_CONTAB_V','TITULO_PAGAR_BAIXA','TITULO_PAGAR_BAIXA_CC','TITULO_PAGAR_BAIXA_CC_CONTAB_V')) then
                update  titulo_pagar_baixa
                set     nr_lote_contabil        = dados_contab_w.doc.nr_lote_contabil
                where   nr_titulo               = doc_p.nr_documento
                and     nr_sequencia            = doc_p.nr_seq_doc_compl;
            end if;
            end;
    end if;

    if (((doc_p.nm_atributo = 'VL_ADIANT_TIT_PAGAR') or (ie_contab_cp_no_cb_w = 'N')) and (ie_permite_estab_dif_w = 'PCCT') and (dados_contab_w.nr_titulo_pagar IS NOT NULL AND dados_contab_w.nr_titulo_pagar::text <> '') and (doc_p.nm_atributo <> 'VL_PAGO') and (coalesce(dados_contab_w.nr_lote_contabil,0) != 0) and (cd_conta_transitoria_w IS NOT NULL AND cd_conta_transitoria_w::text <> '')) then
        begin

        select  count(a.nr_sequencia)
        into STRICT    qt_movto_contab_w
        from    ctb_movimento a,
                movimento_contabil_doc b
        where   a.nr_sequencia          = b.nr_seq_ctb_movto
        and     b.nr_lote_contabil      = doc_p.nr_lote_contabil
        and     a.dt_movimento          = dados_contab_w.dt_transacao
        and     b.nm_atributo           = doc_p.nm_atributo
        and     b.nr_seq_ctb_documento  = doc_p.nr_documento;

        if (qt_movto_contab_w > 0) then
            begin
            if (ctb_param_lote_contas_pag_w.ie_contab_cp_estab = 'ET') and (cd_estab_titulo_w <> doc_p.cd_estabelecimento) then
                begin

                ctb_movimento_w.nr_lote_contabil        := dados_contab_w.nr_lote_contabil;
                ctb_movimento_w.nr_documento            := dados_contab_w.nr_titulo_pagar;
                ctb_movimento_w.dt_movimento            := dados_contab_w.dt_transacao;
                ctb_movimento_w.ie_origem_documento     := dados_contab_w.ie_origem_documento;
                ctb_movimento_w.nr_seq_agrupamento      := dados_contab_w.nr_seq_agrupamento;
                ctb_movimento_w.nr_seq_proj_rec         := dados_contab_w.nr_seq_proj_rec;

                /*MOVIMENTO TRANSITORIO DEBITO*/

                ctb_movimento_w.cd_conta_debito     := cd_conta_transitoria_w;
                ctb_movimento_w.cd_conta_credito    := null;
                ctb_movimento_w.cd_estabelecimento  := doc_p.cd_estabelecimento;
                ctb_movimento_w := ctb_online_pck.ctb_gerar_movto_conta_transit(ctb_movimento_w, nm_usuario_p);

                ctb_movimento_w.cd_estabelecimento  := cd_estab_titulo_w;
                ctb_movimento_w.cd_conta_credito    := cd_conta_transitoria_w;
                ctb_movimento_w.cd_conta_debito     := null;
                /*MOVIMENTO TRANSITORIO CREDITO*/

                ctb_movimento_w := ctb_online_pck.ctb_gerar_movto_conta_transit(ctb_movimento_w, nm_usuario_p);
                end;
            end if;

            if (ctb_param_lote_contas_pag_w.ie_contab_cp_estab = 'EF') and (cd_estab_financeiro_w IS NOT NULL AND cd_estab_financeiro_w::text <> '') and (cd_estab_financeiro_w <> doc_p.cd_estabelecimento) and (doc_p.nm_atributo in ('VL_TITULO', 'VL_BAIXA')) then

                ctb_movimento_w.nr_lote_contabil    := dados_contab_w.nr_lote_contabil;
                ctb_movimento_w.nr_documento        := dados_contab_w.nr_titulo_pagar;
                ctb_movimento_w.dt_movimento        := dados_contab_w.dt_transacao;
                ctb_movimento_w.ie_origem_documento := dados_contab_w.ie_origem_documento;
                ctb_movimento_w.nr_seq_agrupamento  := dados_contab_w.nr_seq_agrupamento;
                ctb_movimento_w.nr_seq_proj_rec     := dados_contab_w.nr_seq_proj_rec;

                /*MOVIMENTO TRANSITORIO DEBITO*/

                ctb_movimento_w.cd_estabelecimento  := cd_estab_financeiro_w;
                ctb_movimento_w.cd_conta_debito     := cd_conta_transitoria_w;
                ctb_movimento_w.cd_conta_credito    := null;
                ctb_movimento_w := ctb_online_pck.ctb_gerar_movto_conta_transit(ctb_movimento_w, nm_usuario_p);

                /*MOVIMENTO TRANSITORIO CREDITO*/

                ctb_movimento_w.cd_estabelecimento  := doc_p.cd_estabelecimento;
                ctb_movimento_w.cd_conta_credito    := cd_conta_transitoria_w;
                ctb_movimento_w.cd_conta_debito     := null;
                ctb_movimento_w := ctb_online_pck.ctb_gerar_movto_conta_transit(ctb_movimento_w, nm_usuario_p);
            end if;
            end;
        end if;
        end;
    end if;
    end;
end if;
end;

doc_p  := dados_contab_w.doc;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_contab_onl_contas_pagar ( doc_p INOUT ctb_documento, nm_usuario_p text) FROM PUBLIC;

