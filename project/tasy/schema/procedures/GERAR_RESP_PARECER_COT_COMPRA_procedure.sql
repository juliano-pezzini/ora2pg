-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_resp_parecer_cot_compra ( nr_sequencia_p bigint, ds_resposta_p text, nm_usuario_p text ) AS $body$
DECLARE


nr_cot_compra_w           cot_compra_hist.nr_cot_compra%type;
nr_seq_regra_w            regra_envio_comunic_evento.nr_sequencia%type;
nr_sequencia_w            comunic_interna.nr_sequencia%type;
nr_seq_classif_w          comunic_interna.nr_seq_classif%type;
nr_ordem_solic_w          bigint;
ds_estabelecimento_w      varchar(255);
ds_titulo_w               comunic_interna.ds_titulo%type;
ds_comunicado_w           comunic_interna.ds_comunicado%type;
ds_historico_w            cot_compra_hist.ds_historico%type;
ie_origem_w               cot_compra_hist.ie_origem%type;
ie_tipo_w                 cot_compra_hist.ie_tipo%type;
ds_documento_w            varchar(80) := wheb_mensagem_pck.get_texto(302780);
ds_documento_ww           varchar(80) := wheb_mensagem_pck.get_texto(302780);
nm_usuario_w              comunic_interna.nm_usuario%type;
qt_regra_usuario_w        bigint;
cd_perfil_w               comunic_interna.cd_perfil%type;
ie_ci_lida_w              regra_envio_comunic_evento.ie_ci_lida%type;
ds_setor_adicional_w      comunic_interna.ds_setor_adicional%type := '';
cd_setor_regra_usuario_w  regra_envio_comunic_usu.cd_setor_atendimento%type;
nr_seq_hist_w             cot_compra_hist.nr_sequencia%type;

c01 CURSOR FOR
SELECT b.nr_sequencia,
	b.cd_perfil
from regra_envio_comunic_compra  a,
	regra_envio_comunic_evento  b
where a.nr_sequencia = b.nr_seq_regra
and a.cd_funcao = 267
and b.cd_evento = 7
and b.ie_situacao = 'A'
and a.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento
and ds_documento_w <> wheb_mensagem_pck.get_texto(302799)
and substr(obter_se_envia_ci_regra_compra(b.nr_sequencia, 0, 'X', obter_perfil_ativo, nm_usuario_p, null), 1, 1) = 'S';

c02 CURSOR FOR
SELECT coalesce(a.cd_setor_atendimento, 0) cd_setor_atendimento
from regra_envio_comunic_usu a
where a.nr_seq_evento = nr_seq_regra_w;


BEGIN

select nextval('cot_compra_hist_seq')
into STRICT nr_seq_hist_w
;

select nr_cot_compra,
	ds_titulo,
    ie_origem,
    ie_tipo
into STRICT nr_cot_compra_w,
    ds_titulo_w,
    ie_origem_w,
    ie_tipo_w
from cot_compra_hist
where nr_sequencia = nr_sequencia_p;

open c01;
loop
fetch c01 into
    nr_seq_regra_w,
    cd_perfil_w;
EXIT WHEN NOT FOUND; /* apply on c01 */

begin

    select b.ds_titulo,
		substr(ds_comunicacao, 1, 2000) ds_comunicacao
    into STRICT ds_titulo_w,
		ds_comunicado_w
    from regra_envio_comunic_evento  b,
		regra_envio_comunic_compra  a
    where a.nr_sequencia = b.nr_seq_regra
    and b.nr_sequencia = nr_seq_regra_w;

    ds_comunicado_w := substr(replace_macro(ds_comunicado_w, '@parecer', ds_resposta_p), 1, 2000);
    ds_comunicado_w := substr(replace_macro(ds_comunicado_w, '@usuario', nm_usuario_p), 1, 2000);
    ds_comunicado_w := substr(replace_macro(ds_comunicado_w, '@nr_documento', nr_sequencia_p), 1, 2000);
    ds_comunicado_w := substr(replace_macro(ds_comunicado_w, '@ds_documento', ds_documento_ww), 1, 2000);
    ds_comunicado_w := substr(replace_macro(ds_comunicado_w, '@nr_ordem_solic', nr_ordem_solic_w), 1, 2000);
    ds_comunicado_w := substr(replace_macro(ds_comunicado_w, '@estabelecimento', ds_estabelecimento_w), 1, 2000);

    begin
    select nm_usuario 
    into STRICT nm_usuario_w
    from cot_compra 
    where nr_cot_compra = nr_cot_compra_w;
    exception when no_data_found or too_many_rows then
    	nm_usuario_w := null;
    end;

    select obter_classif_comunic('P')
    into STRICT nr_seq_classif_w
;

    select nextval('comunic_interna_seq')
    into STRICT nr_sequencia_w
;

    select count(*)
    into STRICT qt_regra_usuario_w
    from regra_envio_comunic_compra a,
        regra_envio_comunic_evento b,
        regra_envio_comunic_usu c
    where a.nr_sequencia = b.nr_seq_regra
    and b.nr_sequencia = c.nr_seq_evento
    and b.nr_sequencia = nr_seq_regra_w;

    ds_titulo_w := substr(wheb_mensagem_pck.get_texto(302231) || ds_titulo_w, 1, 80);

    select coalesce(ie_ci_lida, 'N')
    into STRICT ie_ci_lida_w
    from regra_envio_comunic_evento
    where nr_sequencia = nr_seq_regra_w;

    open c02;
    loop
    fetch c02 into
		cd_setor_regra_usuario_w;
    EXIT WHEN NOT FOUND; /* apply on c02 */
	
    begin
	
        if ( cd_setor_regra_usuario_w <> 0 ) and ( obter_se_contido_char(cd_setor_regra_usuario_w, ds_setor_adicional_w) = 'N' ) then
            ds_setor_adicional_w := substr(ds_setor_adicional_w || cd_setor_regra_usuario_w || ',', 1, 2000);
        end if;
		
    end;

    end loop;

    close c02;
	
    if ( qt_regra_usuario_w > 0 ) then
        nm_usuario_w := substr(obter_usuarios_comunic_compras(nr_sequencia_p, null, 7, nr_seq_regra_w, nm_usuario_w), 1, 4000);
    end if;

    insert into comunic_interna(
        dt_comunicado,
        ds_titulo,
        ds_comunicado,
        nm_usuario,
        dt_atualizacao,
        ie_geral,
        nm_usuario_destino,
        nr_sequencia,
        ie_gerencial,
        nr_seq_classif,
        dt_liberacao,
        ds_perfil_adicional,
        ds_setor_adicional
    ) values (
        clock_timestamp(),
        ds_titulo_w,
        ds_comunicado_w,
        nm_usuario_p,
        clock_timestamp(),
        'N',
        nm_usuario_w,
        nr_sequencia_w,
        'N',
        nr_seq_classif_w,
        clock_timestamp(),
        cd_perfil_w,
        ds_setor_adicional_w
    );

    /*Para que a comunicacao seja gerada como lida ao proprio usuario */

    if ( ie_ci_lida_w = 'S' ) then
	
        insert into comunic_interna_lida(
            nr_sequencia,
            nm_usuario,
            dt_atualizacao
        ) values (
            nr_sequencia_w,
            nm_usuario_p,
            clock_timestamp()
        );

    end if;

end;

end loop;

close c01;

ds_historico_w := substr(ds_resposta_p, 1, 4000);

insert into cot_compra_hist(
    nr_sequencia,
    nr_cot_compra,
    dt_historico,
    ds_titulo,
    ds_historico,
    ie_origem,
    ie_tipo,
    dt_liberacao,
    ds_usuarios_envio_comunic,
    nm_usuario_nrec,
    nm_usuario,
    nm_usuario_lib,
    dt_atualizacao_nrec,
    dt_atualizacao,
    nr_seq_superior,
    ie_evento
) values (
    nr_seq_hist_w,
    nr_cot_compra_w,
    clock_timestamp(),
    ds_titulo_w,
    ds_historico_w,
    ie_origem_w,
    ie_tipo_w,
    clock_timestamp(),
    null,
    nm_usuario_p,
    nm_usuario_p,
    nm_usuario_p,
    clock_timestamp(),
    clock_timestamp(),
    nr_sequencia_p,
    'R'
);

insert into cot_compra_anexo(
    nr_sequencia,
    dt_atualizacao,
    nm_usuario,
    dt_atualizacao_nrec,
    nm_usuario_nrec,
    nr_cot_compra,
    ds_arquivo,
    ie_enviar,
    ie_origem,
    nr_seq_parecer,
    ie_envio_retorno_parecer
)
SELECT nextval('cot_compra_anexo_seq'),
    clock_timestamp(),
    nm_usuario_p,
    clock_timestamp(),
    nm_usuario_p,
    nr_cot_compra,
    ds_arquivo,
    'S',
    'R',
    nr_seq_hist_w,
    ie_envio_retorno_parecer
from cot_compra_anexo
where nr_cot_compra = nr_cot_compra_w
and nr_seq_parecer = nr_sequencia_p;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_resp_parecer_cot_compra ( nr_sequencia_p bigint, ds_resposta_p text, nm_usuario_p text ) FROM PUBLIC;

