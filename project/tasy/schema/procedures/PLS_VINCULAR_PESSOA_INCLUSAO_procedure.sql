-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_vincular_pessoa_inclusao ( nr_seq_solicitacao_p bigint, cd_pessoa_fisica_p text, nm_usuario_p text) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Comparar as informacoes da solicitacao de inclussao com as da pessoa fisica, se
forem diferentes e gerarda a solicitacao de alteracao.
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[  ]  Objetos do dicionario [ X ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao:
-------------------------------------------------------------------------------------------------------------------

Referencias:
	OPS - Proposta de Adesao Eletronica
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
nr_seq_intercambio_w		bigint;
cd_estabelecimento_w		smallint;
ie_gerar_solic_alt_pf_w		varchar(1);
ie_formatacao_nome_pf_w		varchar(255);
nm_pessoa_fisica_w		varchar(255);
dt_nascimento_w			timestamp;
cd_nacionalidade_w		varchar(8);
nr_cpf_w			varchar(11);
ie_estado_civil_w		varchar(2);
ie_sexo_w			varchar(1);
ds_email_w			varchar(255);
nr_identidade_w			varchar(15);
dt_emissao_ci_w			timestamp;
sg_emissora_ci_w		valor_dominio.vl_dominio%type;
nr_seq_pais_w			bigint;
ds_orgao_emissor_ci_w		pessoa_fisica.ds_orgao_emissor_ci%type;
nr_reg_geral_estrang_w		varchar(30);
cd_cep_w			varchar(15);
cd_cep_ww			bigint;
ds_endereco_w			varchar(100);
nr_endereco_w			varchar(5);
ds_complemento_w		varchar(40);
ds_bairro_w			varchar(80);
cd_municipio_ibge_w		varchar(6);
sg_estado_w			valor_dominio.vl_dominio%type;
nr_ddd_telefone_w		varchar(3);
nr_ddi_telefone_w		varchar(3);
nr_telefone_w			varchar(15);
nr_telefone_celular_w		varchar(40);
nr_ctps_w			pls_inclusao_beneficiario.nr_ctps%type;
nr_serie_ctps_w			pls_inclusao_beneficiario.nr_serie_ctps%type;
uf_emissora_ctps_w		valor_dominio.vl_dominio%type;
ds_municipio_w			varchar(255);
nr_pis_pasep_w			varchar(15);
nr_ddd_fax_w			varchar(3);
nr_fax_w			varchar(80);
cd_declaracao_nasc_vivo_w	pessoa_fisica.cd_declaracao_nasc_vivo%type;
nr_cartao_nac_sus_w		varchar(20);
nr_ddd_celular_w		varchar(3);
nr_cert_casamento_w		pls_inclusao_beneficiario.nr_cert_casamento%type;
dt_emissao_cert_casamento_w	timestamp;
nr_titulo_eleitor_w		varchar(20);
ds_tipo_logradouro_w		varchar(125);
cd_tipo_logradouro_w		varchar(3);
nm_abreviado_w			varchar(255);
nm_pessoa_fisica_old_w		varchar(255);
dt_nascimento_old_w		timestamp;
cd_nacionalidade_old_w		varchar(8);
nr_cpf_old_w			varchar(11);
ie_estado_civil_old_w		varchar(2);
ie_sexo_old_w			varchar(1);
ds_email_old_w			varchar(255);
nr_identidade_old_w		varchar(15);
dt_emissao_ci_old_w		timestamp;
sg_emissora_ci_old_w		valor_dominio.vl_dominio%type;
nr_seq_pais_old_w		bigint;
ds_orgao_emissor_ci_old_w	pessoa_fisica.ds_orgao_emissor_ci%type;
nr_reg_geral_estrang_old_w	varchar(30);
cd_cep_old_w			varchar(15);
ds_endereco_old_w		varchar(40);
nr_endereco_old_w		varchar(5);
ds_complemento_old_w		varchar(40);
ds_bairro_old_w			varchar(80);
cd_municipio_ibge_old_w		varchar(6);
sg_estado_old_w			valor_dominio.vl_dominio%type;
nr_ddd_telefone_old_w		varchar(3);
nr_ddi_telefone_old_w		varchar(3);
nr_telefone_old_w		varchar(15);
nr_telefone_celular_old_w	varchar(40);
nr_ctps_old_w			pessoa_fisica.nr_ctps%type;
nr_serie_ctps_old_w		pessoa_fisica.nr_serie_ctps%type;
uf_emissora_ctps_old_w		valor_dominio.vl_dominio%type;
ds_municipio_old_w		varchar(255);
nr_pis_pasep_old_w		varchar(15);
nr_ddd_fax_old_w		varchar(3);
nr_fax_old_w			varchar(80);
cd_declaracao_nasc_vivo_old_w	numeric(30);
nr_cartao_nac_sus_old_w		varchar(20);
nr_ddd_celular_old_w		varchar(3);
nr_cert_casamento_old_w		varchar(20);
dt_emissao_cert_casament_old_w	timestamp;
nr_titulo_eleitor_old_w		varchar(20);
ds_tipo_logradouro_old_w	varchar(125);
cd_tipo_logradouro_old_w	varchar(3);
nm_abreviado_old_w		varchar(255);
nm_mae_old_w			varchar(255);
nm_mae_w			varchar(255);
nm_pai_old_w			varchar(255);
nm_pai_w			varchar(255);
dt_adocao_old_w			timestamp;
dt_adocao_w			timestamp;
ie_consistir_sib_w		varchar(1);
cd_municipio_ibge_nasc_old_w	pessoa_fisica.cd_municipio_ibge%type;
cd_municipio_ibge_nasc_w	pls_inclusao_beneficiario.cd_municipio_ibge_nasc%type;
sg_estado_nasc_old_w		pessoa_fisica.sg_estado_nasc%type;
sg_estado_nasc_w		pls_inclusao_beneficiario.sg_estado_nasc%type;
nm_social_old_w			pessoa_fisica.nm_social%type;
nm_social_w			pls_inclusao_beneficiario.nm_social%type;
cd_cbo_old_w			pessoa_fisica.cd_cbo_sus%type;
cd_cbo_w			pls_inclusao_beneficiario.cd_cbo%type;
qt_complemento_w		integer;
nr_seq_complemento_pf_w		compl_pessoa_fisica.nr_sequencia%type;

tb_ie_acao_w			pls_util_cta_pck.t_varchar2_table_1;

c01 CURSOR FOR
	SELECT	nr_sequencia,
		CASE WHEN ie_gerar_solic_alt_pf_w='R' THEN  ie_acao  ELSE ie_gerar_solic_alt_pf_w END  ie_acao
	from	pls_regra_atrib_inc_benef;

BEGIN
cd_estabelecimento_w	:= wheb_usuario_pck.get_cd_estabelecimento;
ie_gerar_solic_alt_pf_w	:= coalesce(obter_valor_param_usuario(1232, 91, Obter_Perfil_Ativo, nm_usuario_p, cd_estabelecimento_w),'S');
ie_consistir_sib_w	:= coalesce(obter_valor_param_usuario(1232, 65, Obter_Perfil_Ativo, nm_usuario_p, cd_estabelecimento_w),'S');

select	nm_pessoa_fisica,
	dt_nascimento,
	cd_nacionalidade,
	nr_cpf,
	ie_estado_civil,
	ie_sexo,
	ds_email,
	nr_identidade,
	dt_emissao_ci,
	sg_emissora_ci,
	nr_seq_pais,
	ds_orgao_emissor_ci,
	nr_reg_geral_estrang,
	cd_cep,
	ds_endereco,
	nr_endereco,
	ds_complemento,
	ds_bairro,
	cd_municipio_ibge,
	sg_estado,
	nr_ddd_telefone,
	nr_ddi_telefone,
	nr_telefone,
	nr_telefone_celular,
	nr_ctps,
	nr_serie_ctps,
	uf_emissora_ctps,
	ds_municipio,
	nr_pis_pasep,
	nr_ddd_fax,
	nr_fax,
	cd_declaracao_nasc_vivo,
	nr_cartao_nac_sus,
	nr_ddd_celular,
	nr_cert_casamento,
	dt_emissao_cert_casamento,
	nr_titulo_eleitor,
	cd_tipo_logradouro,
	nm_mae,
	nm_pai,
	dt_adocao,
	cd_municipio_ibge_nasc,
	nr_seq_intercambio,
	sg_estado_nasc,
	nm_social,
	cd_cbo
into STRICT	nm_pessoa_fisica_w,
	dt_nascimento_w,
	cd_nacionalidade_w,
	nr_cpf_w,
	ie_estado_civil_w,
	ie_sexo_w,
	ds_email_w,
	nr_identidade_w,
	dt_emissao_ci_w,
	sg_emissora_ci_w,
	nr_seq_pais_w,
	ds_orgao_emissor_ci_w,
	nr_reg_geral_estrang_w,
	cd_cep_w,
	ds_endereco_w,
	nr_endereco_w,
	ds_complemento_w,
	ds_bairro_w,
	cd_municipio_ibge_w,
	sg_estado_w,
	nr_ddd_telefone_w,
	nr_ddi_telefone_w,
	nr_telefone_w,
	nr_telefone_celular_w,
	nr_ctps_w,
	nr_serie_ctps_w,
	uf_emissora_ctps_w,
	ds_municipio_w,
	nr_pis_pasep_w,
	nr_ddd_fax_w,
	nr_fax_w,
	cd_declaracao_nasc_vivo_w,
	nr_cartao_nac_sus_w,
	nr_ddd_celular_w,
	nr_cert_casamento_w,
	dt_emissao_cert_casamento_w,
	nr_titulo_eleitor_w,
	cd_tipo_logradouro_w,
	nm_mae_w,
	nm_pai_w,
	dt_adocao_w,
	cd_municipio_ibge_nasc_w,
	nr_seq_intercambio_w,
	sg_estado_nasc_w,
	nm_social_w,
	cd_cbo_w
from	pls_inclusao_beneficiario
where	nr_sequencia	= nr_seq_solicitacao_p;

tb_ie_acao_w.delete;

for r_c01_w in c01 loop
	begin
	tb_ie_acao_w(r_c01_w.nr_sequencia)	:= r_c01_w.ie_acao;
	end;
end loop;
	
if (ie_gerar_solic_alt_pf_w in ('S', 'R')) then
	select	nm_pessoa_fisica,
		dt_nascimento,
		cd_nacionalidade,
		nr_cpf,
		ie_estado_civil,
		ie_sexo,
		nr_identidade,
		dt_emissao_ci,
		sg_emissora_ci,
		nr_seq_pais,
		ds_orgao_emissor_ci,
		nr_reg_geral_estrang,
		nr_telefone_celular,
		nr_ctps,
		nr_serie_ctps,
		uf_emissora_ctps,
		nr_pis_pasep,
		cd_declaracao_nasc_vivo,
		nr_cartao_nac_sus,
		nr_ddd_celular,
		nr_cert_casamento,
		dt_emissao_cert_casamento,
		nr_titulo_eleitor,
		nm_abreviado,
		dt_adocao,
		cd_municipio_ibge,
		sg_estado_nasc,
		cd_cbo_sus,
		nm_social
	into STRICT	nm_pessoa_fisica_old_w,
		dt_nascimento_old_w,
		cd_nacionalidade_old_w,
		nr_cpf_old_w,
		ie_estado_civil_old_w,
		ie_sexo_old_w,
		nr_identidade_old_w,
		dt_emissao_ci_old_w,
		sg_emissora_ci_old_w,
		nr_seq_pais_old_w,
		ds_orgao_emissor_ci_old_w,
		nr_reg_geral_estrang_old_w,
		nr_telefone_celular_old_w,
		nr_ctps_old_w,
		nr_serie_ctps_old_w,
		uf_emissora_ctps_old_w,
		nr_pis_pasep_old_w,
		cd_declaracao_nasc_vivo_old_w,
		nr_cartao_nac_sus_old_w,
		nr_ddd_celular_old_w,
		nr_cert_casamento_old_w,
		dt_emissao_cert_casament_old_w,
		nr_titulo_eleitor_old_w,
		nm_abreviado_old_w,
		dt_adocao_old_w,
		cd_municipio_ibge_nasc_old_w,
		sg_estado_nasc_old_w,
		cd_cbo_old_w,
		nm_social_old_w
	from	pessoa_fisica
	where	cd_pessoa_fisica	= cd_pessoa_fisica_p;
	
	begin
	select	ds_fax,
		nr_ddd_fax,
		ds_municipio,
		nr_ddd_telefone,
		nr_ddi_telefone,
		nr_telefone,
		ds_bairro,
		cd_municipio_ibge,
		sg_estado,
		cd_cep,
		ds_endereco,
		nr_endereco,
		ds_complemento,
		ds_email,
		cd_tipo_logradouro
	into STRICT	nr_fax_old_w,
		nr_ddd_fax_old_w,
		ds_municipio_old_w,
		nr_ddd_telefone_old_w,
		nr_ddi_telefone_old_w,
		nr_telefone_old_w,
		ds_bairro_old_w,
		cd_municipio_ibge_old_w,
		sg_estado_old_w,
		cd_cep_old_w,
		ds_endereco_old_w,
		nr_endereco_old_w,
		ds_complemento_old_w,
		ds_email_old_w,
		cd_tipo_logradouro_old_w
	from	compl_pessoa_fisica
	where	cd_pessoa_fisica	= cd_pessoa_fisica_p
	and	ie_tipo_complemento	= 1;
	exception
	when others then
		nr_fax_old_w		:= null;
		nr_ddd_fax_old_w	:= null;
		ds_municipio_old_w	:= null;
		nr_ddd_telefone_old_w	:= null;
		nr_ddi_telefone_old_w	:= null;
		nr_telefone_old_w	:= null;
		ds_bairro_old_w		:= null;
		cd_municipio_ibge_old_w	:= null;
		sg_estado_old_w		:= null;
		cd_cep_old_w		:= null;
		ds_endereco_old_w	:= null;
		nr_endereco_old_w	:= null;
		ds_complemento_old_w	:= null;
		ds_email_old_w		:= null;
		cd_tipo_logradouro_old_w:= null;
	end;
	
	begin
	select	nm_contato
	into STRICT	nm_mae_old_w
	from	compl_pessoa_fisica
	where	cd_pessoa_fisica	= cd_pessoa_fisica_p
	and	ie_tipo_complemento	= 5;
	exception
	when others then
		nm_mae_old_w	:= null;
	end;
	
	begin
	select	nm_contato
	into STRICT	nm_pai_old_w
	from	compl_pessoa_fisica
	where	cd_pessoa_fisica	= cd_pessoa_fisica_p
	and	ie_tipo_complemento	= 4;
	exception
	when others then
		nm_pai_old_w	:= null;
	end;
	
	if (coalesce(cd_municipio_ibge_w::text, '') = '') and (cd_cep_w IS NOT NULL AND cd_cep_w::text <> '') then
		cd_cep_ww	:= Somente_Numero(cd_cep_w);
		
		select	max(cd_municipio_ibge)
		into STRICT	cd_municipio_ibge_w
		from	cep_municipio
		where	cd_cep	= cd_cep_ww;
	end if;
	
	ie_formatacao_nome_pf_w	:= coalesce(obter_valor_param_usuario(1232, 87, Obter_Perfil_Ativo, nm_usuario_p, cd_estabelecimento_w),'S');
	
	if (ie_formatacao_nome_pf_w = 'MA') then --Letras maiusculas e sem acentuacao
		nm_pessoa_fisica_w	:= Elimina_Acentuacao(upper(nm_pessoa_fisica_w));
	end if;
	
	if ((trim(both cd_cep_w) IS NOT NULL AND (trim(both cd_cep_w))::text <> '')) then
		begin
		select	max(ds_tipo_logradouro)
		into STRICT	ds_tipo_logradouro_w
		from	cep_logradouro_v
		where	cd_cep	= cd_cep_w;
		exception
		when others then
			ds_tipo_logradouro_w	:= '';
		end;

	end if;
	
	/*Retornar os dados do endereco pelo CEP*/

	SELECT * FROM pls_obter_enderec_homonimo_alt(	cd_cep_w, ds_endereco_w, ds_bairro_w, cd_municipio_ibge_w, ds_municipio_w, sg_estado_w, ds_endereco_w, ds_bairro_w, cd_municipio_ibge_w, ds_municipio_w, sg_estado_w, cd_estabelecimento_w, nm_usuario_p) INTO STRICT ds_endereco_w, ds_bairro_w, cd_municipio_ibge_w, ds_municipio_w, sg_estado_w;
	
	nm_abreviado_w	:= pls_gerar_nome_abreviado(nm_pessoa_fisica_w);
	
	--PESSOA
	if (tb_ie_acao_w(1) = 'S') and (nm_pessoa_fisica_w IS NOT NULL AND nm_pessoa_fisica_w::text <> '') and (upper(nm_pessoa_fisica_w) <> upper(nm_pessoa_fisica_old_w) or coalesce(nm_pessoa_fisica_old_w::text, '') = '') then
		CALL pls_gerar_solicitacao_alt(nm_pessoa_fisica_old_w, nm_pessoa_fisica_w, 'NM_PESSOA_FISICA', cd_pessoa_fisica_p, cd_estabelecimento_w, nm_usuario_p);
	end if;
	
	if (tb_ie_acao_w(35) = 'S') and (sg_estado_nasc_w IS NOT NULL AND sg_estado_nasc_w::text <> '') and (upper(sg_estado_nasc_w) <> upper(sg_estado_nasc_old_w) or coalesce(sg_estado_nasc_old_w::text, '') = '') then
		CALL pls_gerar_solicitacao_alt(sg_estado_nasc_old_w, sg_estado_nasc_w, 'SG_ESTADO_NASC', cd_pessoa_fisica_p, cd_estabelecimento_w, nm_usuario_p);
	end if;

	if (tb_ie_acao_w(37) = 'S') and (nm_social_w IS NOT NULL AND nm_social_w::text <> '') and (upper(nm_social_w) <> upper(nm_social_old_w) or coalesce(nm_social_old_w::text, '') = '') then
		CALL pls_gerar_solicitacao_alt(nm_social_old_w, nm_social_w, 'NM_SOCIAL', cd_pessoa_fisica_p, cd_estabelecimento_w, nm_usuario_p);
	end if;
	
	if (tb_ie_acao_w(24) = 'S') and (cd_cbo_w IS NOT NULL AND cd_cbo_w::text <> '') and (upper(cd_cbo_w) <> upper(cd_cbo_old_w) or coalesce(cd_cbo_old_w::text, '') = '') then
		CALL pls_gerar_solicitacao_alt(cd_cbo_old_w, cd_cbo_w, 'CD_CBO_SUS', cd_pessoa_fisica_p, cd_estabelecimento_w, nm_usuario_p);
	end if;
	
	if (tb_ie_acao_w(34) = 'S') and (cd_municipio_ibge_nasc_w IS NOT NULL AND cd_municipio_ibge_nasc_w::text <> '') and (upper(cd_municipio_ibge_nasc_w) <> upper(cd_municipio_ibge_nasc_old_w) or coalesce(cd_municipio_ibge_nasc_old_w::text, '') = '') then
		CALL pls_gerar_solicitacao_alt(cd_municipio_ibge_nasc_old_w, cd_municipio_ibge_nasc_w, 'CD_MUNICIPIO_IBGE', cd_pessoa_fisica_p, cd_estabelecimento_w, nm_usuario_p);
	end if;
	
	if (tb_ie_acao_w(2) = 'S') and (dt_nascimento_w IS NOT NULL AND dt_nascimento_w::text <> '') and (dt_nascimento_w <> dt_nascimento_old_w or coalesce(dt_nascimento_old_w::text, '') = '') then
		CALL pls_gerar_solicitacao_alt(dt_nascimento_old_w, dt_nascimento_w, 'DT_NASCIMENTO', cd_pessoa_fisica_p, cd_estabelecimento_w, nm_usuario_p);
	end if;
	
	if (tb_ie_acao_w(4) = 'S') and (cd_nacionalidade_w IS NOT NULL AND cd_nacionalidade_w::text <> '') and (cd_nacionalidade_w <> cd_nacionalidade_old_w or coalesce(cd_nacionalidade_old_w::text, '') = '') then
		CALL pls_gerar_solicitacao_alt(cd_nacionalidade_old_w, cd_nacionalidade_w, 'CD_NACIONALIDADE', cd_pessoa_fisica_p, cd_estabelecimento_w, nm_usuario_p);
	end if;
	
	if (tb_ie_acao_w(7) = 'S') and (nr_cpf_w IS NOT NULL AND nr_cpf_w::text <> '') and (nr_cpf_w <> nr_cpf_old_w or coalesce(nr_cpf_old_w::text, '') = '') then
		CALL pls_gerar_solicitacao_alt(nr_cpf_old_w, nr_cpf_w, 'NR_CPF', cd_pessoa_fisica_p, cd_estabelecimento_w, nm_usuario_p);
	end if;
	
	if (tb_ie_acao_w(3) = 'S') and (ie_estado_civil_w IS NOT NULL AND ie_estado_civil_w::text <> '') and (ie_estado_civil_w <> ie_estado_civil_old_w or coalesce(ie_estado_civil_old_w::text, '') = '') then
		CALL pls_gerar_solicitacao_alt(ie_estado_civil_old_w, ie_estado_civil_w, 'IE_ESTADO_CIVIL', cd_pessoa_fisica_p, cd_estabelecimento_w, nm_usuario_p);
	end if;
	
	if (tb_ie_acao_w(5) = 'S') and (ie_sexo_w IS NOT NULL AND ie_sexo_w::text <> '') and (ie_sexo_w <> ie_sexo_old_w or coalesce(ie_sexo_old_w::text, '') = '') then
		CALL pls_gerar_solicitacao_alt(ie_sexo_old_w, ie_sexo_w, 'IE_SEXO', cd_pessoa_fisica_p, cd_estabelecimento_w, nm_usuario_p);
	end if;
	
	if (tb_ie_acao_w(8) = 'S') and (nr_identidade_w IS NOT NULL AND nr_identidade_w::text <> '') and (nr_identidade_w <> nr_identidade_old_w or coalesce(nr_identidade_old_w::text, '') = '') then
		CALL pls_gerar_solicitacao_alt(nr_identidade_old_w, nr_identidade_w, 'NR_IDENTIDADE', cd_pessoa_fisica_p, cd_estabelecimento_w, nm_usuario_p);
	end if;
	
	if (tb_ie_acao_w(9) = 'S') and (dt_emissao_ci_w IS NOT NULL AND dt_emissao_ci_w::text <> '') and (dt_emissao_ci_w <> dt_emissao_ci_old_w or coalesce(dt_emissao_ci_old_w::text, '') = '') then
		CALL pls_gerar_solicitacao_alt( dt_emissao_ci_old_w, dt_emissao_ci_w, 'DT_EMISSAO_CI', cd_pessoa_fisica_p, cd_estabelecimento_w, nm_usuario_p);
	end if;
	
	if (tb_ie_acao_w(10) = 'S') and (sg_emissora_ci_w IS NOT NULL AND sg_emissora_ci_w::text <> '') and (sg_emissora_ci_w <> sg_emissora_ci_old_w or coalesce(sg_emissora_ci_old_w::text, '') = '') then
		CALL pls_gerar_solicitacao_alt(sg_emissora_ci_old_w, sg_emissora_ci_w, 'SG_EMISSORA_CI', cd_pessoa_fisica_p, cd_estabelecimento_w, nm_usuario_p);
	end if;
	
	if (tb_ie_acao_w(12) = 'S') and (nr_seq_pais_w IS NOT NULL AND nr_seq_pais_w::text <> '') and (nr_seq_pais_w <> nr_seq_pais_old_w or coalesce(nr_seq_pais_old_w::text, '') = '') then
		CALL pls_gerar_solicitacao_alt(nr_seq_pais_old_w, nr_seq_pais_w, 'NR_SEQ_PAIS', cd_pessoa_fisica_p, cd_estabelecimento_w, nm_usuario_p);
	end if;
	
	if (tb_ie_acao_w(11) = 'S') and (ds_orgao_emissor_ci_w IS NOT NULL AND ds_orgao_emissor_ci_w::text <> '') and (upper(ds_orgao_emissor_ci_w) <> upper(ds_orgao_emissor_ci_old_w) or coalesce(ds_orgao_emissor_ci_old_w::text, '') = '') then
		CALL pls_gerar_solicitacao_alt(ds_orgao_emissor_ci_old_w, ds_orgao_emissor_ci_w, 'DS_ORGAO_EMISSOR_CI', cd_pessoa_fisica_p, cd_estabelecimento_w, nm_usuario_p);
	end if;
	
	if (tb_ie_acao_w(13) = 'S') and (nr_reg_geral_estrang_w IS NOT NULL AND nr_reg_geral_estrang_w::text <> '') and (nr_reg_geral_estrang_w <> nr_reg_geral_estrang_old_w or coalesce(nr_reg_geral_estrang_old_w::text, '') = '') then
		CALL pls_gerar_solicitacao_alt(nr_reg_geral_estrang_old_w, nr_reg_geral_estrang_w, 'NR_REG_GERAL_ESTRANG', cd_pessoa_fisica_p, cd_estabelecimento_w, nm_usuario_p);
	end if;
	
	if (tb_ie_acao_w(23) = 'S') and (nr_telefone_celular_w IS NOT NULL AND nr_telefone_celular_w::text <> '') and (nr_telefone_celular_w <> nr_telefone_celular_old_w or coalesce(nr_telefone_celular_old_w::text, '') = '') then
		CALL pls_gerar_solicitacao_alt(nr_telefone_celular_old_w, nr_telefone_celular_w, 'NR_TELEFONE_CELULAR', cd_pessoa_fisica_p, cd_estabelecimento_w, nm_usuario_p);
	end if;
	
	if (tb_ie_acao_w(25) = 'S') and (nr_ctps_w IS NOT NULL AND nr_ctps_w::text <> '') and (nr_ctps_w <> nr_ctps_old_w or coalesce(nr_ctps_old_w::text, '') = '') then
		CALL pls_gerar_solicitacao_alt(nr_ctps_old_w, nr_ctps_w, 'NR_CTPS', cd_pessoa_fisica_p, cd_estabelecimento_w, nm_usuario_p);
	end if;
	
	if (tb_ie_acao_w(26) = 'S') and (nr_serie_ctps_w IS NOT NULL AND nr_serie_ctps_w::text <> '') and (nr_serie_ctps_w <> nr_serie_ctps_old_w or coalesce(nr_serie_ctps_old_w::text, '') = '') then
		CALL pls_gerar_solicitacao_alt(nr_serie_ctps_old_w, nr_serie_ctps_w, 'NR_SERIE_CTPS', cd_pessoa_fisica_p, cd_estabelecimento_w, nm_usuario_p);
	end if;
	
	if (tb_ie_acao_w(27) = 'S') and (uf_emissora_ctps_w IS NOT NULL AND uf_emissora_ctps_w::text <> '') and (uf_emissora_ctps_w <> uf_emissora_ctps_old_w or coalesce(uf_emissora_ctps_old_w::text, '') = '') then
		CALL pls_gerar_solicitacao_alt(uf_emissora_ctps_old_w, uf_emissora_ctps_w, 'UF_EMISSORA_CTPS', cd_pessoa_fisica_p, cd_estabelecimento_w, nm_usuario_p);
	end if;
	
	if (tb_ie_acao_w(30) = 'S') and (nr_pis_pasep_w IS NOT NULL AND nr_pis_pasep_w::text <> '') and (nr_pis_pasep_w <> nr_pis_pasep_old_w or coalesce(nr_pis_pasep_old_w::text, '') = '') then
		CALL pls_gerar_solicitacao_alt(nr_pis_pasep_old_w, nr_pis_pasep_w, 'NR_PIS_PASEP', cd_pessoa_fisica_p, cd_estabelecimento_w, nm_usuario_p);
	end if;
	
	if (tb_ie_acao_w(29) = 'S') and (cd_declaracao_nasc_vivo_w IS NOT NULL AND cd_declaracao_nasc_vivo_w::text <> '') and (cd_declaracao_nasc_vivo_w <> cd_declaracao_nasc_vivo_old_w or coalesce(cd_declaracao_nasc_vivo_old_w::text, '') = '') then
		CALL pls_gerar_solicitacao_alt(cd_declaracao_nasc_vivo_old_w, cd_declaracao_nasc_vivo_w, 'CD_DECLARACAO_NASC_VIVO', cd_pessoa_fisica_p, cd_estabelecimento_w, nm_usuario_p);
	end if;
	
	if (tb_ie_acao_w(28) = 'S') and (nr_cartao_nac_sus_w IS NOT NULL AND nr_cartao_nac_sus_w::text <> '') and (nr_cartao_nac_sus_w <> nr_cartao_nac_sus_old_w or coalesce(nr_cartao_nac_sus_old_w::text, '') = '') then
		CALL pls_gerar_solicitacao_alt(nr_cartao_nac_sus_old_w, nr_cartao_nac_sus_w, 'NR_CARTAO_NAC_SUS', cd_pessoa_fisica_p, cd_estabelecimento_w, nm_usuario_p);
	end if;
	
	if (tb_ie_acao_w(23) = 'S') and (nr_ddd_celular_w IS NOT NULL AND nr_ddd_celular_w::text <> '') and (nr_ddd_celular_w <> nr_ddd_celular_old_w or coalesce(nr_ddd_celular_old_w::text, '') = '') then
		CALL pls_gerar_solicitacao_alt(nr_ddd_celular_old_w, nr_ddd_celular_w, 'NR_DDD_CELULAR', cd_pessoa_fisica_p, cd_estabelecimento_w, nm_usuario_p);
	end if;
	
	if (tb_ie_acao_w(39) = 'S') and (nr_cert_casamento_w IS NOT NULL AND nr_cert_casamento_w::text <> '') and (nr_cert_casamento_w <> nr_cert_casamento_old_w or coalesce(nr_cert_casamento_old_w::text, '') = '') then
		CALL pls_gerar_solicitacao_alt(nr_cert_casamento_old_w, nr_cert_casamento_w, 'NR_CERT_CASAMENTO', cd_pessoa_fisica_p, cd_estabelecimento_w, nm_usuario_p);
	end if;
	
	if (tb_ie_acao_w(38) = 'S') and (dt_emissao_cert_casamento_w IS NOT NULL AND dt_emissao_cert_casamento_w::text <> '') and (dt_emissao_cert_casamento_w <> dt_emissao_cert_casament_old_w or coalesce(dt_emissao_cert_casament_old_w::text, '') = '') then
		CALL pls_gerar_solicitacao_alt(dt_emissao_cert_casament_old_w, dt_emissao_cert_casamento_w, 'DT_EMISSAO_CERT_CASAMENTO', cd_pessoa_fisica_p, cd_estabelecimento_w, nm_usuario_p);
	end if;
	
	if (tb_ie_acao_w(31) = 'S') and (nr_titulo_eleitor_w IS NOT NULL AND nr_titulo_eleitor_w::text <> '') and (nr_titulo_eleitor_w <> nr_titulo_eleitor_old_w or coalesce(nr_titulo_eleitor_old_w::text, '') = '') then
		CALL pls_gerar_solicitacao_alt(nr_titulo_eleitor_old_w, nr_titulo_eleitor_w, 'NR_TITULO_ELEITOR', cd_pessoa_fisica_p, cd_estabelecimento_w, nm_usuario_p);
	end if;
	
	if (tb_ie_acao_w(1) = 'S') and (nm_abreviado_w IS NOT NULL AND nm_abreviado_w::text <> '') and (upper(nm_abreviado_w) <> upper(nm_abreviado_old_w) or coalesce(nm_abreviado_old_w::text, '') = '') then
		CALL pls_gerar_solicitacao_alt(nm_abreviado_old_w, nm_abreviado_w, 'NM_ABREVIADO', cd_pessoa_fisica_p, cd_estabelecimento_w, nm_usuario_p);
	end if;
	
	if (tb_ie_acao_w(36) = 'S') and (dt_adocao_w IS NOT NULL AND dt_adocao_w::text <> '') and (dt_adocao_w <> dt_adocao_old_w or coalesce(dt_adocao_old_w::text, '') = '') then
		CALL pls_gerar_solicitacao_alt(dt_adocao_old_w, dt_adocao_w, 'DT_ADOCAO', cd_pessoa_fisica_p, cd_estabelecimento_w, nm_usuario_p);
	end if;	
	
	CALL pls_tasy_gerar_solicitacao(cd_pessoa_fisica_p,'W');
	
	--COMPLEMENTO
	if (tb_ie_acao_w(22) = 'S') and (nr_fax_w IS NOT NULL AND nr_fax_w::text <> '') and (nr_fax_w <> nr_fax_old_w or coalesce(nr_fax_old_w::text, '') = '') then
		CALL pls_gerar_solicitacao_alt(nr_fax_old_w, nr_fax_w, 'DS_FAX', cd_pessoa_fisica_p, cd_estabelecimento_w, nm_usuario_p);
	end if;
	
	if (tb_ie_acao_w(22) = 'S') and (nr_ddd_fax_w IS NOT NULL AND nr_ddd_fax_w::text <> '') and (nr_ddd_fax_w <> nr_ddd_fax_old_w or coalesce(nr_ddd_fax_old_w::text, '') = '') then
		CALL pls_gerar_solicitacao_alt(nr_ddd_fax_old_w, nr_ddd_fax_w, 'NR_DDD_FAX', cd_pessoa_fisica_p, cd_estabelecimento_w, nm_usuario_p);
	end if;
	
	if (tb_ie_acao_w(20) = 'S') and (ds_municipio_w IS NOT NULL AND ds_municipio_w::text <> '') and (upper(ds_municipio_w) <> upper(ds_municipio_old_w) or coalesce(ds_municipio_old_w::text, '') = '') then
		CALL pls_gerar_solicitacao_alt(ds_municipio_old_w, ds_municipio_w, 'DS_MUNICIPIO', cd_pessoa_fisica_p, cd_estabelecimento_w, nm_usuario_p);
	end if;
	
	if (tb_ie_acao_w(22) = 'S') and (nr_ddd_telefone_w IS NOT NULL AND nr_ddd_telefone_w::text <> '') and (nr_ddd_telefone_w <> nr_ddd_telefone_old_w or coalesce(nr_ddd_telefone_old_w::text, '') = '') then
		CALL pls_gerar_solicitacao_alt(nr_ddd_telefone_old_w, nr_ddd_telefone_w, 'NR_DDD_TELEFONE', cd_pessoa_fisica_p, cd_estabelecimento_w, nm_usuario_p);
	end if;
	
	if (tb_ie_acao_w(22) = 'S') and (nr_ddi_telefone_w IS NOT NULL AND nr_ddi_telefone_w::text <> '') and (nr_ddi_telefone_w <> nr_ddi_telefone_old_w or coalesce(nr_ddi_telefone_old_w::text, '') = '') then
		CALL pls_gerar_solicitacao_alt(nr_ddi_telefone_old_w, nr_ddi_telefone_w, 'NR_DDI_TELEFONE', cd_pessoa_fisica_p, cd_estabelecimento_w, nm_usuario_p);
	end if;
	
	if (tb_ie_acao_w(22) = 'S') and (nr_telefone_w IS NOT NULL AND nr_telefone_w::text <> '') and (nr_telefone_w <> nr_telefone_old_w or coalesce(nr_telefone_old_w::text, '') = '') then
		CALL pls_gerar_solicitacao_alt(nr_telefone_old_w, nr_telefone_w, 'NR_TELEFONE', cd_pessoa_fisica_p, cd_estabelecimento_w, nm_usuario_p);
	end if;
	
	if (tb_ie_acao_w(19) = 'S') and (ds_bairro_w IS NOT NULL AND ds_bairro_w::text <> '') and (upper(ds_bairro_w) <> upper(ds_bairro_old_w) or coalesce(ds_bairro_old_w::text, '') = '') then
		CALL pls_gerar_solicitacao_alt(ds_bairro_old_w, ds_bairro_w, 'DS_BAIRRO', cd_pessoa_fisica_p, cd_estabelecimento_w, nm_usuario_p);
	end if;
	
	if (tb_ie_acao_w(20) = 'S') and (cd_municipio_ibge_w IS NOT NULL AND cd_municipio_ibge_w::text <> '') and (cd_municipio_ibge_w <> cd_municipio_ibge_old_w or coalesce(cd_municipio_ibge_old_w::text, '') = '') then
		CALL pls_gerar_solicitacao_alt(cd_municipio_ibge_old_w, cd_municipio_ibge_w, 'CD_MUNICIPIO_IBGE', cd_pessoa_fisica_p, cd_estabelecimento_w, nm_usuario_p);
	end if;
	
	if (tb_ie_acao_w(21) = 'S') and (sg_estado_w IS NOT NULL AND sg_estado_w::text <> '') and (sg_estado_w <> sg_estado_old_w or coalesce(sg_estado_old_w::text, '') = '') then
		CALL pls_gerar_solicitacao_alt(sg_estado_old_w, sg_estado_w, 'SG_ESTADO', cd_pessoa_fisica_p, cd_estabelecimento_w, nm_usuario_p);
	end if;
	
	if (tb_ie_acao_w(15) = 'S') and (cd_cep_w IS NOT NULL AND cd_cep_w::text <> '') and (cd_cep_w <> cd_cep_old_w or coalesce(cd_cep_old_w::text, '') = '') then
		CALL pls_gerar_solicitacao_alt(cd_cep_old_w, cd_cep_w, 'CD_CEP', cd_pessoa_fisica_p, cd_estabelecimento_w, nm_usuario_p);
	end if;
	
	if (tb_ie_acao_w(16) = 'S') and (ds_endereco_w IS NOT NULL AND ds_endereco_w::text <> '') and (upper(ds_endereco_w) <> upper(ds_endereco_old_w) or coalesce(ds_endereco_old_w::text, '') = '') then
		CALL pls_gerar_solicitacao_alt( ds_endereco_old_w, ds_endereco_w, 'DS_ENDERECO', cd_pessoa_fisica_p, cd_estabelecimento_w, nm_usuario_p);
	end if;
	
	if (tb_ie_acao_w(17) = 'S') and (nr_endereco_w IS NOT NULL AND nr_endereco_w::text <> '') and (nr_endereco_w <> nr_endereco_old_w or coalesce(nr_endereco_old_w::text, '') = '') then
		CALL pls_gerar_solicitacao_alt(nr_endereco_old_w, nr_endereco_w, 'NR_ENDERECO', cd_pessoa_fisica_p, cd_estabelecimento_w, nm_usuario_p);
	end if;
	
	if (tb_ie_acao_w(18) = 'S') and (ds_complemento_w IS NOT NULL AND ds_complemento_w::text <> '') and (upper(ds_complemento_w) <> upper(ds_complemento_old_w) or coalesce(ds_complemento_old_w::text, '') = '') then
		CALL pls_gerar_solicitacao_alt(ds_complemento_old_w, ds_complemento_w, 'DS_COMPLEMENTO', cd_pessoa_fisica_p, cd_estabelecimento_w, nm_usuario_p);
	end if;
	
	if (tb_ie_acao_w(14) = 'S') and (ds_email_w IS NOT NULL AND ds_email_w::text <> '') and (upper(ds_email_w) <> upper(ds_email_old_w) or coalesce(ds_email_old_w::text, '') = '') then
		CALL pls_gerar_solicitacao_alt(ds_email_old_w, ds_email_w, 'DS_EMAIL', cd_pessoa_fisica_p, cd_estabelecimento_w, nm_usuario_p);
	end if;
	
	if (tb_ie_acao_w(32) = 'S') and (cd_tipo_logradouro_w IS NOT NULL AND cd_tipo_logradouro_w::text <> '') and (cd_tipo_logradouro_w <> cd_tipo_logradouro_old_w or coalesce(cd_tipo_logradouro_old_w::text, '') = '') then
		CALL pls_gerar_solicitacao_alt(cd_tipo_logradouro_old_w, cd_tipo_logradouro_w, 'CD_TIPO_LOGRADOURO', cd_pessoa_fisica_p, cd_estabelecimento_w, nm_usuario_p);
	end if;
	
	CALL pls_tasy_gerar_solic_compl(cd_pessoa_fisica_p, 1,'W','PLS_VINCULAR_PESSOA_INCLUSAO');
	
	--Endereco da MAE
	if (tb_ie_acao_w(6) = 'S') and (nm_mae_w IS NOT NULL AND nm_mae_w::text <> '') and (upper(nm_mae_w) <> upper(nm_mae_old_w) or coalesce(nm_mae_old_w::text, '') = '') then
		CALL pls_gerar_solicitacao_alt(nm_mae_old_w, nm_mae_w, 'NM_CONTATO', cd_pessoa_fisica_p, cd_estabelecimento_w, nm_usuario_p);
	end if;	
	CALL pls_tasy_gerar_solic_compl(cd_pessoa_fisica_p, 5,'W','PLS_VINCULAR_PESSOA_INCLUSAO');
	
	--Endereco da Pai
	if (tb_ie_acao_w(33) = 'S') and (nm_pai_w IS NOT NULL AND nm_pai_w::text <> '') and (upper(nm_pai_w) <> upper(nm_pai_old_w) or coalesce(nm_pai_old_w::text, '') = '') then
		CALL pls_gerar_solicitacao_alt(nm_pai_old_w, nm_pai_w, 'NM_CONTATO', cd_pessoa_fisica_p, cd_estabelecimento_w, nm_usuario_p);
	end if;
	CALL pls_tasy_gerar_solic_compl(cd_pessoa_fisica_p, 4,'W','PLS_VINCULAR_PESSOA_INCLUSAO');
end if;
	
if (ie_gerar_solic_alt_pf_w in ('A','R')) then
	update 	pessoa_fisica
	set 	nm_pessoa_fisica 		= CASE WHEN tb_ie_acao_w(1)='A' THEN  coalesce(nm_pessoa_fisica_w,nm_pessoa_fisica)  ELSE nm_pessoa_fisica END ,
		dt_nascimento 			= CASE WHEN tb_ie_acao_w(2)='A' THEN  coalesce(dt_nascimento_w,dt_nascimento)  ELSE dt_nascimento END ,
		cd_nacionalidade		= CASE WHEN tb_ie_acao_w(4)='A' THEN  coalesce(cd_nacionalidade_w,cd_nacionalidade)  ELSE cd_nacionalidade END ,
		nr_cpf				= CASE WHEN tb_ie_acao_w(7)='A' THEN  coalesce(nr_cpf_w,nr_cpf)  ELSE nr_cpf END ,
		ie_estado_civil			= CASE WHEN tb_ie_acao_w(3)='A' THEN  coalesce(ie_estado_civil_w,ie_estado_civil)  ELSE ie_estado_civil END ,
		ie_sexo				= CASE WHEN tb_ie_acao_w(5)='A' THEN  coalesce(ie_sexo_w,ie_sexo)  ELSE ie_sexo END ,
		nr_identidade			= CASE WHEN tb_ie_acao_w(8)='A' THEN  coalesce(nr_identidade_w,nr_identidade)  ELSE nr_identidade END ,
		dt_emissao_ci			= CASE WHEN tb_ie_acao_w(9)='A' THEN  coalesce(dt_emissao_ci_w,dt_emissao_ci)  ELSE dt_emissao_ci END ,
		sg_emissora_ci			= CASE WHEN tb_ie_acao_w(10)='A' THEN  coalesce(sg_emissora_ci_w,sg_emissora_ci)  ELSE sg_emissora_ci END ,
		nr_seq_pais			= CASE WHEN tb_ie_acao_w(12)='A' THEN  coalesce(nr_seq_pais_w,nr_seq_pais)  ELSE nr_seq_pais END ,
		ds_orgao_emissor_ci		= CASE WHEN tb_ie_acao_w(11)='A' THEN  coalesce(ds_orgao_emissor_ci_w,ds_orgao_emissor_ci)  ELSE ds_orgao_emissor_ci END ,
		nr_reg_geral_estrang		= CASE WHEN tb_ie_acao_w(13)='A' THEN  coalesce(nr_reg_geral_estrang_w,nr_reg_geral_estrang)  ELSE nr_reg_geral_estrang END ,
		nr_telefone_celular		= CASE WHEN tb_ie_acao_w(23)='A' THEN  coalesce(nr_telefone_celular_w,nr_telefone_celular)  ELSE nr_telefone_celular END ,
		nr_ctps				= CASE WHEN tb_ie_acao_w(25)='A' THEN  coalesce(nr_ctps_w,nr_ctps)  ELSE nr_ctps END ,
		nr_serie_ctps			= CASE WHEN tb_ie_acao_w(26)='A' THEN  coalesce(nr_serie_ctps_w,nr_serie_ctps)  ELSE nr_serie_ctps END ,
		uf_emissora_ctps		= CASE WHEN tb_ie_acao_w(27)='A' THEN  coalesce(uf_emissora_ctps_w,uf_emissora_ctps)  ELSE uf_emissora_ctps END ,
		nr_pis_pasep			= CASE WHEN tb_ie_acao_w(30)='A' THEN  coalesce(nr_pis_pasep_w,nr_pis_pasep)  ELSE nr_pis_pasep END ,
		cd_declaracao_nasc_vivo		= CASE WHEN tb_ie_acao_w(29)='A' THEN  coalesce(cd_declaracao_nasc_vivo_w,cd_declaracao_nasc_vivo)  ELSE cd_declaracao_nasc_vivo END ,
		nr_cartao_nac_sus		= CASE WHEN tb_ie_acao_w(28)='A' THEN  coalesce(nr_cartao_nac_sus_w,nr_cartao_nac_sus)  ELSE nr_cartao_nac_sus END ,
		nr_ddd_celular			= CASE WHEN tb_ie_acao_w(23)='A' THEN  coalesce(nr_ddd_celular_w,nr_ddd_celular)  ELSE nr_ddd_celular END ,
		nr_cert_casamento		= CASE WHEN tb_ie_acao_w(39)='A' THEN  coalesce(nr_cert_casamento_w,nr_cert_casamento)  ELSE nr_cert_casamento END ,
		dt_emissao_cert_casamento	= CASE WHEN tb_ie_acao_w(38)='A' THEN  coalesce(dt_emissao_cert_casamento_w,dt_emissao_cert_casamento)  ELSE dt_emissao_cert_casamento END ,
		nr_titulo_eleitor		= CASE WHEN tb_ie_acao_w(31)='A' THEN  coalesce(nr_titulo_eleitor_w,nr_titulo_eleitor)  ELSE nr_titulo_eleitor END ,
		nm_abreviado			= CASE WHEN tb_ie_acao_w(1)='A' THEN  coalesce(nm_abreviado_w,nm_abreviado)  ELSE nm_abreviado END ,
		dt_adocao			= CASE WHEN tb_ie_acao_w(36)='A' THEN  coalesce(dt_adocao_w,dt_adocao)  ELSE dt_adocao END ,
		cd_municipio_ibge		= CASE WHEN tb_ie_acao_w(34)='A' THEN  coalesce(cd_municipio_ibge_nasc_w,cd_municipio_ibge)  ELSE cd_municipio_ibge END ,
		sg_estado_nasc			= CASE WHEN tb_ie_acao_w(35)='A' THEN  coalesce(sg_estado_nasc_w,sg_estado_nasc)  ELSE sg_estado_nasc END ,
		cd_cbo_sus			= CASE WHEN tb_ie_acao_w(24)='A' THEN  coalesce(cd_cbo_w,cd_cbo_sus)  ELSE cd_cbo_sus END ,
		nm_social			= CASE WHEN tb_ie_acao_w(37)='A' THEN  coalesce(nm_social_w,nm_social)  ELSE nm_social END ,
		dt_atualizacao			= clock_timestamp(),
		nm_usuario			= nm_usuario_p
	where	cd_pessoa_fisica		= cd_pessoa_fisica_p;
	
	update	compl_pessoa_fisica
	set	ds_fax 				= CASE WHEN tb_ie_acao_w(22)='A' THEN  coalesce(nr_fax_w,ds_fax)  ELSE ds_fax END ,
		nr_ddd_fax 			= CASE WHEN tb_ie_acao_w(22)='A' THEN  coalesce(nr_ddd_fax_w,nr_ddd_fax)  ELSE nr_ddd_fax END ,
		ds_municipio 			= CASE WHEN tb_ie_acao_w(20)='A' THEN  coalesce(ds_municipio_w,ds_municipio)  ELSE ds_municipio END ,
		nr_ddd_telefone			= CASE WHEN tb_ie_acao_w(22)='A' THEN  coalesce(nr_ddd_telefone_w,nr_ddd_telefone)  ELSE nr_ddd_telefone END ,
		nr_ddi_telefone			= CASE WHEN tb_ie_acao_w(22)='A' THEN  coalesce(nr_ddi_telefone_w,nr_ddi_telefone)  ELSE nr_ddi_telefone END ,
		nr_telefone			= CASE WHEN tb_ie_acao_w(22)='A' THEN  coalesce(nr_telefone_w,nr_telefone)  ELSE nr_telefone END ,
		ds_bairro			= CASE WHEN tb_ie_acao_w(19)='A' THEN  coalesce(ds_bairro_w,ds_bairro)  ELSE ds_bairro END ,
		cd_municipio_ibge		= CASE WHEN tb_ie_acao_w(22)='A' THEN  coalesce(cd_municipio_ibge_w,cd_municipio_ibge)  ELSE cd_municipio_ibge END ,
		sg_estado			= CASE WHEN tb_ie_acao_w(21)='A' THEN  coalesce(sg_estado_w,sg_estado)  ELSE sg_estado END ,
		cd_cep				= CASE WHEN tb_ie_acao_w(15)='A' THEN  coalesce(cd_cep_w,cd_cep)  ELSE cd_cep END ,
		ds_endereco			= CASE WHEN tb_ie_acao_w(16)='A' THEN  coalesce(ds_endereco_w,ds_endereco)  ELSE ds_endereco END ,
		nr_endereco			= CASE WHEN tb_ie_acao_w(17)='A' THEN  coalesce(nr_endereco_w,nr_endereco)  ELSE nr_endereco END ,
		ds_complemento			= CASE WHEN tb_ie_acao_w(18)='A' THEN  coalesce(ds_complemento_w,ds_complemento)  ELSE ds_complemento END ,
		ds_email			= CASE WHEN tb_ie_acao_w(14)='A' THEN  coalesce(ds_email_w,ds_email)  ELSE ds_email END ,
		cd_tipo_logradouro		= CASE WHEN tb_ie_acao_w(32)='A' THEN  coalesce(cd_tipo_logradouro_w,cd_tipo_logradouro)  ELSE cd_tipo_logradouro END ,
		dt_atualizacao			= clock_timestamp(),
		nm_usuario			= nm_usuario_p
	where	cd_pessoa_fisica		= cd_pessoa_fisica_p
	and	ie_tipo_complemento		= 1;	
	
	select	coalesce(max(nr_sequencia), 0) + 1
	into STRICT	nr_seq_complemento_pf_w
	from	compl_pessoa_fisica
	where	cd_pessoa_fisica = cd_pessoa_fisica_p;
	
	if	((nm_mae_w IS NOT NULL AND nm_mae_w::text <> '') and (tb_ie_acao_w(6) = 'A')) then
		select	count(1)
		into STRICT	qt_complemento_w
		from	compl_pessoa_fisica
		where	cd_pessoa_fisica	= cd_pessoa_fisica_p
		and	ie_tipo_complemento	= 5;
		
		if (qt_complemento_w > 0) then
			update	compl_pessoa_fisica
			set	nm_contato		= CASE WHEN tb_ie_acao_w(6)='A' THEN  coalesce(nm_mae_w,nm_contato)  ELSE nm_contato END
			where	cd_pessoa_fisica	= cd_pessoa_fisica_p
			and	ie_tipo_complemento	= 5;
		else
			insert into compl_pessoa_fisica(cd_pessoa_fisica, nr_sequencia, ie_tipo_complemento,
				dt_atualizacao, nm_usuario, dt_atualizacao_nrec,
				nm_usuario_nrec, nm_contato)
			values (	cd_pessoa_fisica_p, nr_seq_complemento_pf_w, 5,
				clock_timestamp(), nm_usuario_p, clock_timestamp(),
				nm_usuario_p, nm_mae_w);
				
			nr_seq_complemento_pf_w	:= nr_seq_complemento_pf_w + 1;
		end if;
	end if;
	
	if	((nm_pai_w IS NOT NULL AND nm_pai_w::text <> '') and (tb_ie_acao_w(33) = 'A')) then
		select	count(1)
		into STRICT	qt_complemento_w
		from	compl_pessoa_fisica
		where	cd_pessoa_fisica	= cd_pessoa_fisica_p
		and	ie_tipo_complemento	= 4;
		
		if (qt_complemento_w > 0) then
			update	compl_pessoa_fisica
			set	nm_contato			= CASE WHEN tb_ie_acao_w(33)='A' THEN  coalesce(nm_pai_w,nm_contato)  ELSE nm_contato END
			where	cd_pessoa_fisica		= cd_pessoa_fisica_p
			and	ie_tipo_complemento		= 4;
		else
			insert into compl_pessoa_fisica(cd_pessoa_fisica, nr_sequencia, ie_tipo_complemento,
				dt_atualizacao, nm_usuario, dt_atualizacao_nrec,
				nm_usuario_nrec, nm_contato)
			values (	cd_pessoa_fisica_p, nr_seq_complemento_pf_w, 4,
				clock_timestamp(), nm_usuario_p, clock_timestamp(),
				nm_usuario_p, nm_pai_w);
		end if;
	end if;
end if;

--Quando for intercambio alterar a etapa de solicitacao de intercambio
update	pls_inclusao_beneficiario
set	cd_pessoa_fisica		= cd_pessoa_fisica_p,
	nm_usuario			= nm_usuario_p,
	ie_etapa_solicitacao		= CASE WHEN nr_seq_intercambio_w = NULL THEN  'CV'  ELSE ie_etapa_solicitacao END ,
	ie_etapa_solic_intercambio	= CASE WHEN nr_seq_intercambio_w = NULL THEN  ie_etapa_solic_intercambio  ELSE 'CV' END ,
	dt_atualizacao			= clock_timestamp()
where	nr_sequencia			= nr_seq_solicitacao_p;

--Apos vincular a pessoa deve consistir novamente a inclusao, pois existe a consistencia [5] - Ja existe beneficiario cadastrado no contrato com a pessoa fisica vinculada
CALL pls_consistir_inclusao_benef(null, nr_seq_solicitacao_p, ie_consistir_sib_w, 'S', null, nm_usuario_p, 'T');

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_vincular_pessoa_inclusao ( nr_seq_solicitacao_p bigint, cd_pessoa_fisica_p text, nm_usuario_p text) FROM PUBLIC;

