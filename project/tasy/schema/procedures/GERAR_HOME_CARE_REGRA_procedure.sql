-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_home_care_regra ( nr_atendimento_p bigint, ie_tipo_atendimento_p bigint, ie_tipo_guia_p text, nm_usuario_p text, cd_convenio_p bigint, cd_plano_p text, cd_usuario_convenio_p text) AS $body$
DECLARE

 
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
Finalidade: Gerar registro de home care para o paciente do atendimento 
------------------------------------------------------------------------------------------------------------------- 
Locais de chamada direta: 
[ X ] Objetos do dicionário [ ] Tasy (Delphi/Java) [ ] Portal [ ] Relatórios [ ] Outros: 
 ------------------------------------------------------------------------------------------------------------------ 
Pontos de atenção: 
	867 - [92] - Forma de validação ao registrar o paciente 
 
------------------------------------------------------------------------------------------------------------------- 
Referências: 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
 
 
cd_pessoa_fisica_w		varchar(60);
ie_tipo_atendimento_w		bigint;
nr_seq_regra_w			bigint;
qt_home_care_pac_w		bigint;
cd_usuario_convenio_w		paciente_home_care.cd_usuario_convenio%type;
cd_plano_w			paciente_home_care.cd_plano%type;
nr_seq_pac_home_care_w		paciente_home_care.nr_sequencia%type;
ie_classificacao_w		varchar(15);
ie_forma_consistir_pac_w	varchar(1);
	

BEGIN 
/*Regra de geração de paciente em home care (Shift+F11)*/
 
select	coalesce(max(nr_sequencia),0) 
into STRICT	nr_seq_regra_w 
from	regra_gerar_pac_home_care 
where (ie_tipo_atendimento 	= ie_tipo_atendimento_p or coalesce(ie_tipo_atendimento::text, '') = '') 
and (ie_tipo_guia		= ie_tipo_guia_p or coalesce(ie_tipo_guia::text, '') = '') 
and (cd_estabelecimento 	= wheb_usuario_pck.get_cd_estabelecimento or coalesce(cd_estabelecimento::text, '') = '');
 
if (nr_seq_regra_w > 0) then	 
	ie_forma_consistir_pac_w := obter_param_usuario(867, 92, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_forma_consistir_pac_w);
	 
	select	max(cd_pessoa_fisica) 
	into STRICT	cd_pessoa_fisica_w 
	from	atendimento_paciente 
	where	nr_atendimento	= nr_atendimento_p;	
 
	/*Verifica se existe registro no home care para o paciente do atendimento*/
 
	select	count(*) 
	into STRICT	qt_home_care_pac_w 
	from	paciente_home_care 
	where	cd_pessoa_fisica	= cd_pessoa_fisica_w 
	and	(dt_inicio IS NOT NULL AND dt_inicio::text <> '') 
	and (coalesce(dt_final::text, '') = '' or dt_final > clock_timestamp()) 
	and (ie_forma_consistir_pac_w = 'P' or nr_atendimento_origem = nr_atendimento_p);
 
	if (qt_home_care_pac_w = 0) then	 
		CALL inclui_home_care_regra(	nr_atendimento_p, 
					nr_seq_regra_w, 
					nm_usuario_p, 
					cd_convenio_p, 
					cd_plano_p, 
					cd_usuario_convenio_p);
	else 
		select	max(cd_usuario_convenio), 
			max(cd_plano) , 
			max(nr_sequencia) 
		into STRICT	cd_usuario_convenio_w, 
			cd_plano_w, 
			nr_seq_pac_home_care_w		 
		from	paciente_home_care 
		where	cd_pessoa_fisica	= cd_pessoa_fisica_w 
		and	nr_atendimento_origem	= nr_atendimento_p 
		and	cd_convenio		= cd_convenio_p;		
 
		/*Atualiza as informações do código de convênio caso tenha sido alterado*/
 
		if	((cd_usuario_convenio_w <> cd_usuario_convenio_p) or (coalesce(cd_usuario_convenio_w::text, '') = '' and (cd_usuario_convenio_p IS NOT NULL AND cd_usuario_convenio_p::text <> '')) or (coalesce(cd_usuario_convenio_p::text, '') = '' and (cd_usuario_convenio_w IS NOT NULL AND cd_usuario_convenio_w::text <> ''))) and (nr_seq_pac_home_care_w IS NOT NULL AND nr_seq_pac_home_care_w::text <> '') then 
			update	paciente_home_care 
			set	cd_usuario_convenio	= cd_usuario_convenio_p 
			where	nr_sequencia		= nr_seq_pac_home_care_w;
		end if;					
 
		/*Atualiza as informações do código de plano caso tenha sido alterado*/
 
		if	((cd_plano_w <> cd_plano_p) or (coalesce(cd_plano_w::text, '') = '' and (cd_plano_p IS NOT NULL AND cd_plano_p::text <> '')) or (coalesce(cd_plano_p::text, '') = '' and (cd_plano_w IS NOT NULL AND cd_plano_w::text <> ''))) and (nr_seq_pac_home_care_w IS NOT NULL AND nr_seq_pac_home_care_w::text <> '') then 
			update	paciente_home_care 
			set	cd_plano	= cd_plano_p 
			where	nr_sequencia	= nr_seq_pac_home_care_w;
		end if;	
	end if;
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_home_care_regra ( nr_atendimento_p bigint, ie_tipo_atendimento_p bigint, ie_tipo_guia_p text, nm_usuario_p text, cd_convenio_p bigint, cd_plano_p text, cd_usuario_convenio_p text) FROM PUBLIC;

