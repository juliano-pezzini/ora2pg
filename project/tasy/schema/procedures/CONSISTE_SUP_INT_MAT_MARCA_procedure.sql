-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consiste_sup_int_mat_marca ( nr_sequencia_p bigint, cd_material_p bigint, cd_unidade_medida_p text, ie_padronizado_p text, nr_seq_status_aval_p bigint, nm_usuario_p text) AS $body$
DECLARE


qt_existe_material_w		bigint;
qt_existe_marca_w		bigint;
qt_existe_unidade_medida_w	bigint;
qt_existe_status_aval_w		bigint;
nr_inconsistencia_w		integer;


BEGIN

delete 	from sup_int_marca_consist
where	nr_sequencia = nr_sequencia_p
and	ie_integracao = '1';

select 	count(*)
into STRICT	qt_existe_material_w
from 	material
where 	cd_sistema_ant = to_char(cd_material_p);

select 	count(*)
into STRICT	qt_existe_marca_w
from 	marca
where	cd_sistema_ant = to_char(nr_sequencia_p);

if (qt_existe_material_w = 0) then

	select	coalesce(max(nr_inconsistencia),0) + 1
	into STRICT	nr_inconsistencia_w
	from	sup_int_marca_consist
	where	nr_sequencia = nr_sequencia_p
	and	ie_integracao = '1';

	insert into sup_int_marca_consist(
		nr_sequencia,
		nr_inconsistencia,
		ds_mensagem,
		ie_integracao,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec)
	values (	nr_sequencia_p,
		nr_inconsistencia_w,
		wheb_mensagem_pck.get_texto(1043741),
		1,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p);

end if;

if (qt_existe_marca_w = 0) then

	select	coalesce(max(nr_inconsistencia),0) + 1
	into STRICT	nr_inconsistencia_w
	from	sup_int_marca_consist
	where	nr_sequencia = nr_sequencia_p
	and	ie_integracao = '1';

	insert into sup_int_marca_consist(
		nr_sequencia,
		nr_inconsistencia,
		ds_mensagem,
		ie_integracao,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec)
	values (	nr_sequencia_p,
		nr_inconsistencia_w,
		wheb_mensagem_pck.get_texto(1043742),
		1,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p);

end if;

if (cd_unidade_medida_p IS NOT NULL AND cd_unidade_medida_p::text <> '') then

	select	count(*)
	into STRICT	qt_existe_unidade_medida_w
	from	unidade_medida
	where	upper(cd_unidade_medida) = upper(cd_unidade_medida_p);

	if (qt_existe_unidade_medida_w = 0) then

		select	coalesce(max(nr_inconsistencia),0) + 1
		into STRICT	nr_inconsistencia_w
		from	sup_int_marca_consist
		where	nr_sequencia = nr_sequencia_p
		and	ie_integracao = '1';

		insert into sup_int_marca_consist(
			nr_sequencia,
			nr_inconsistencia,
			ds_mensagem,
			ie_integracao,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec)
		values (	nr_sequencia_p,
			nr_inconsistencia_w,
			wheb_mensagem_pck.get_texto(1043743),
			1,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p);

	end if;

end if;

if ((ie_padronizado_p IS NOT NULL AND ie_padronizado_p::text <> '') and ie_padronizado_p <> 'S' and ie_padronizado_p <> 'N') then

	select	coalesce(max(nr_inconsistencia),0) + 1
	into STRICT	nr_inconsistencia_w
	from	sup_int_marca_consist
	where	nr_sequencia = nr_sequencia_p
	and	ie_integracao = '1';

	insert into sup_int_marca_consist(
		nr_sequencia,
		nr_inconsistencia,
		ds_mensagem,
		ie_integracao,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec)
	values (	nr_sequencia_p,
		nr_inconsistencia_w,
		wheb_mensagem_pck.get_texto(1043744),
		1,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p);

end if;

if (nr_seq_status_aval_p IS NOT NULL AND nr_seq_status_aval_p::text <> '') then

	select	count(*)
	into STRICT	qt_existe_status_aval_w
	from	status_avaliacao_marca
	where	nr_sequencia = nr_seq_status_aval_p;

	if (qt_existe_status_aval_w = 0) then

		select	coalesce(max(nr_inconsistencia),0) + 1
		into STRICT	nr_inconsistencia_w
		from	sup_int_marca_consist
		where	nr_sequencia = nr_sequencia_p
		and	ie_integracao = '1';

		insert into sup_int_marca_consist(
			nr_sequencia,
			nr_inconsistencia,
			ds_mensagem,
			ie_integracao,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec)
		values (	nr_sequencia_p,
			nr_inconsistencia_w,
			wheb_mensagem_pck.get_texto(1043745),
			1,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p);

	end if;

end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consiste_sup_int_mat_marca ( nr_sequencia_p bigint, cd_material_p bigint, cd_unidade_medida_p text, ie_padronizado_p text, nr_seq_status_aval_p bigint, nm_usuario_p text) FROM PUBLIC;

