-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE enviar_sms_agenda_cons ( ds_remetente_p text, ds_destinatario_p text, ds_mensagem_p text, cd_agenda_p bigint, nr_seq_agenda_p bigint, nm_usuario_p text, ds_erro_p INOUT text) AS $body$
DECLARE

				
nr_sequencia_w				bigint;
id_sms_w					bigint;
ie_cons_perm_env_sms_pac_w		varchar(1);
cd_pessoa_fisica_w			varchar(20);
ie_perm_receb_sms_email_w			varchar(1);
nr_celular_w				varchar(50);
nr_pos_ddd0_w				bigint := 0;
ds_erro_w				varchar(2000);



BEGIN
nr_celular_w := trim(both ds_destinatario_p);	

if (coalesce(pkg_i18n.get_user_locale, 'pt_BR')	 <> 'en_AU') then

	if (substr(nr_celular_w,1,2) <> '55') then
		nr_celular_w :=  '55'||nr_celular_w;
	end if;


	if (substr(nr_celular_w,1,3) = '550')then
		nr_celular_w := '55'||substr(nr_celular_w,4,50);	
	end if;

end if;

ie_cons_perm_env_sms_pac_w := Obter_Param_Usuario(821, 395, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_cons_perm_env_sms_pac_w);

if (ie_cons_perm_env_sms_pac_w <> 'N')then
	select	max(a.cd_pessoa_fisica)
	into STRICT	cd_pessoa_fisica_w
	from	agenda_consulta a
	where	a.nr_sequencia	= nr_seq_agenda_p;
	
	if (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '')then
		select	coalesce(max(a.ie_perm_sms_email),'N')
		into STRICT	ie_perm_receb_sms_email_w
		from	pessoa_fisica a
		where	a.cd_pessoa_fisica	= cd_pessoa_fisica_w;	
	end if;
else
	ie_perm_receb_sms_email_w	:= 'S';

end if;

if (ds_remetente_p IS NOT NULL AND ds_remetente_p::text <> '') and (nr_celular_w IS NOT NULL AND nr_celular_w::text <> '') and (ds_mensagem_p IS NOT NULL AND ds_mensagem_p::text <> '') and (cd_agenda_p IS NOT NULL AND cd_agenda_p::text <> '') and (nr_seq_agenda_p IS NOT NULL AND nr_seq_agenda_p::text <> '') and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') and (ie_perm_receb_sms_email_w <> 'N')then
	
	/* enviar sms */
	
	begin
	id_sms_w := wheb_sms.enviar_sms(ds_remetente_p, nr_celular_w, ds_mensagem_p, nm_usuario_p, id_sms_w);
	update	agenda_consulta
	set	ie_envio_sms = 'S'
	where	nr_sequencia = nr_seq_agenda_p;
	
	exception
	when others then
	/*gravar log na agenda_consulta caso ocorra algum problema no envio da mensagem*/
		
		update	agenda_consulta
		set	ie_envio_sms = 'E'
		where	nr_sequencia = nr_seq_agenda_p;	
		commit;		
			
		ds_erro_w := wheb_mensagem_pck.get_texto(262633, 'SQLERRM='||sqlerrm);	
		--Wheb_mensagem_pck.exibir_mensagem_abort( 262328 , 'DS_MENSAGEM='||'Ocorreu algum erro no envio de SMS.'||chr(10)||sqlerrm);		
	end;
	
	if (coalesce(ds_erro_w::text, '') = '') then
		/* gravar log */

		select	nextval('log_envio_sms_seq')
		into STRICT	nr_sequencia_w
		;

		insert into log_envio_sms(
			nr_sequencia,
			dt_atualizacao_nrec,
			nm_usuario_nrec,	
			dt_atualizacao,
			nm_usuario,
			dt_envio,
			cd_agenda,
			nr_seq_agenda,
			nr_telefone,
			ds_mensagem,
			id_sms)
		values (
			nr_sequencia_w,
			clock_timestamp(), 
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			cd_agenda_p,
			nr_seq_agenda_p,
			ds_destinatario_p,
			ds_mensagem_p,
			id_sms_w);
			
	end if;
end if;
	
ds_erro_p := substr(ds_erro_w,1,255);	
	
commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE enviar_sms_agenda_cons ( ds_remetente_p text, ds_destinatario_p text, ds_mensagem_p text, cd_agenda_p bigint, nr_seq_agenda_p bigint, nm_usuario_p text, ds_erro_p INOUT text) FROM PUBLIC;

