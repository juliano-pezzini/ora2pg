-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualizar_vencimento_orcamento ( nr_sequencia_p bigint, cd_estabelecimento_P bigint, cd_condicao_pagamento_P bigint, dt_base_p timestamp, nm_usuario_p text) AS $body$
DECLARE


ie_forma_pagamento_w		condicao_pagamento.ie_forma_pagamento%type;
nr_parcela_w			parcela.nr_parcela%type;
nr_ult_parcela_w		parcela.nr_parcela%type;
qt_dias_parcela_w		parcela.qt_dias_parcela%type;
tx_fracao_parcela_w		parcela.tx_fracao_parcela%type;
tx_acrescimo_w			parcela.nr_parcela%type;
dt_base_w			timestamp		:= clock_timestamp();
dia_semana_w			smallint	:= 0;
dia_mes_w			smallint	:= 0;
dt_parcela_w     		timestamp		:= clock_timestamp();
dt_feriado_w     		timestamp		:= clock_timestamp();
ie_acao_nao_util_w		condicao_pagamento.ie_acao_nao_util%type;
ie_corrido_util_w		parcela.ie_corrido_util%type;
vl_orcamento_w			orcamento_paciente_venc.vl_vencimento%type;
vl_vencimentos_w		orcamento_paciente_venc.vl_vencimento%type;
vl_diferenca_w			orcamento_paciente_venc.vl_vencimento%type;
dt_venc_w			timestamp;
vl_venc_w			orcamento_paciente_venc.vl_vencimento%type;
vl_base_juros_w			double precision;
vl_vencimento_w			orcamento_paciente_venc.vl_vencimento%type;
ie_tipo_acrescimo_w		condicao_pagamento.ie_tipo_acrescimo%type := 'P';
vl_juros_w			double precision	:= 0;

C01 CURSOR FOR
      SELECT nr_parcela,
             qt_dias_parcela,
             tx_fracao_parcela,
             coalesce(tx_acrescimo,0),
	     coalesce(ie_corrido_util,'C')
       from  parcela
       where cd_condicao_pagamento = cd_condicao_pagamento_p
       order by nr_parcela;


BEGIN

dt_base_w	:= dt_base_p;

select 	obter_valor_orc_pac(nr_sequencia_p)
into STRICT	vl_orcamento_w
;

SELECT	IE_FORMA_PAGAMENTO,
	IE_ACAO_NAO_UTIL,
	coalesce(max(ie_tipo_acrescimo),'P')
  INTO STRICT	ie_forma_pagamento_w,
	ie_acao_nao_util_w,
	ie_tipo_acrescimo_w
FROM	CONDICAO_PAGAMENTO
WHERE	CD_CONDICAO_PAGAMENTO = cd_condicao_pagamento_p
GROUP BY 	IE_FORMA_PAGAMENTO,
		IE_ACAO_NAO_UTIL;

SELECT	MAX(NR_PARCELA)
  INTO STRICT 	nr_ult_parcela_w
FROM	PARCELA
WHERE	CD_CONDICAO_PAGAMENTO = cd_condicao_pagamento_p;

/* (Fora Semana) */

if (ie_forma_pagamento_w = 3) then
     	dia_semana_w := pkg_date_utils.get_WeekDay(dt_base_w);
        dt_base_w := dt_base_w + (8 - dia_semana_w);
end if;

/* (Fora Dezena) */

if (ie_forma_pagamento_w = 4) then
      begin
      dia_mes_w := (to_char(dt_base_w,'dd'))::numeric;
      if   dia_mes_w < 10 then
           dt_base_w := to_date('10/'||to_char(dt_base_w,'mm/yyyy'),'dd/mm/yyyy');
      else
           if   dia_mes_w < 20 then
                dt_base_w := to_date('20/'||to_char(dt_base_w,'mm/yyyy'),'dd/mm/yyyy');
           else
                dt_base_w := to_date('01/'||to_char(PKG_DATE_UTILS.ADD_MONTH(dt_base_w, 1, 0),'mm/yyyy'),'dd/mm/yyyy');
           end if;
      end if;
      end;
end if;

/*  (Fora Quinzena) */

if (ie_forma_pagamento_w = 5) then
      begin
      dia_mes_w := (to_char(dt_base_w,'dd'))::numeric;
      if   dia_mes_w < 15 then
           dt_base_w := to_date('15/'||to_char(dt_base_w,'mm/yyyy'),'dd/mm/yyyy');
      else
           dt_base_w := to_date('01/'||to_char(PKG_DATE_UTILS.ADD_MONTH(dt_base_w, 1, 0),'mm/yyyy'),'dd/mm/yyyy');
      end if;
      end;
end if;

/* (Fora Mes) */

if (ie_forma_pagamento_w = 6) then
      dt_base_w := to_date('01/'||to_char(PKG_DATE_UTILS.ADD_MONTH(dt_base_w, 1, 0),'mm/yyyy'),'dd/mm/yyyy');
end if;

/* (Quinzenal - Fora semana) */

if (ie_forma_pagamento_w = 8) then
	dia_mes_w := (to_char(dt_base_w,'dd'))::numeric;
	if  	dia_mes_w <= 15 then	-- Edgar 03/02/2005, OS 14820, mudei para considerar o dia 15 como da 1a quinzena
		dt_base_w := to_date('15/'||to_char(dt_base_w,'mm/yyyy'),'dd/mm/yyyy');
	else
/*		dt_base_w := to_date('01/'||to_char(add_months(dt_base_w, 1),'mm/yyyy'),'dd/mm/yyyy'); Elemar - 22/12/05 - OS25585*/

		dt_base_w := pkg_date_utils.get_datetime(pkg_date_utils.end_of(dt_base_w, 'MONTH'), COALESCE(dt_base_w, PKG_DATE_UTILS.GET_TIME('00:00:00')));
	end if;
     	dia_semana_w := pkg_date_utils.get_WeekDay(dt_base_w);
        dt_base_w := dt_base_w + (8 - dia_semana_w);
end if;

if (ie_tipo_acrescimo_w = 'B') then
	vl_base_juros_w	:= obter_base_acresc_cond_pagto(cd_condicao_pagamento_p, vl_orcamento_w);
end if;

/*  (a prazo) */

if (ie_forma_pagamento_w > 1) then
      begin
      OPEN  C01;
      LOOP
            FETCH C01 into
      	    	nr_parcela_w,
            	qt_dias_parcela_w,
            	tx_fracao_parcela_w,
            	tx_acrescimo_w,
		ie_corrido_util_w;
      	EXIT WHEN NOT FOUND; /* apply on c01 */
            begin
		vl_vencimento_w 	:= ((vl_orcamento_w * tx_fracao_parcela_w) / 100);

		select	Obter_data_vencimento(	DT_BASE_W,
						QT_DIAS_PARCELA_W,
						CD_ESTABELECIMENTO_p,
						ie_corrido_util_w,
						ie_acao_nao_util_w)
		into STRICT	dt_parcela_w
		;		

		if (tx_acrescimo_w <> 0) then
			if (coalesce(ie_tipo_acrescimo_w,'P') = 'P') then
				vl_juros_w	:= vl_juros_w + ((vl_vencimento_w * tx_acrescimo_w) / 100);
              			vl_vencimento_w	:= vl_vencimento_w + ((vl_vencimento_w * tx_acrescimo_w) / 100);				
			elsif (coalesce(ie_tipo_acrescimo_w,'B') = 'B') then
				vl_vencimento_w	:= vl_vencimento_w + ((vl_base_juros_w * tx_acrescimo_w) / 100);
				vl_juros_w	:= vl_juros_w + ((vl_base_juros_w * tx_acrescimo_w) / 100);
			end if;
		else
			vl_vencimento_w	:= vl_orcamento_w * (tx_fracao_parcela_w / 100);
      		end if;
		
		insert into orcamento_paciente_venc(
						nr_sequencia_orcamento,
						dt_vencimento,
						vl_vencimento,
						dt_atualizacao,
						nm_usuario)
					values (nr_sequencia_p,
						dt_parcela_w,
						vl_vencimento_w,
						clock_timestamp(),
						nm_usuario_p);
      	end;
      END LOOP;
      CLOSE C01;
      end;

      COMMIT;

      /* Ajustar o valor da ultima parcela devido as casas decimais */

      select 	sum(vl_vencimento)
      into STRICT	vl_vencimentos_W
      from 	orcamento_paciente_venc
      where 	nr_sequencia_orcamento = nr_sequencia_p;

      if	(vl_orcamento_w <> (vl_vencimentos_w - vl_juros_w)) then

		select	max(dt_vencimento)
		into STRICT	dt_venc_w
		from	orcamento_paciente_venc
		where	nr_sequencia_orcamento =  nr_sequencia_p;

		select	max( coalesce( vl_vencimento , 0) )
		into STRICT	vl_venc_w
		from	orcamento_paciente_venc
		where	dt_vencimento = dt_venc_w
		and	nr_sequencia_orcamento =  nr_sequencia_p;

		vl_diferenca_w	:= abs(vl_orcamento_w - vl_vencimentos_w + vl_juros_w);

		if (vl_diferenca_w > 0) then
			update	orcamento_paciente_venc
			set 	vl_vencimento = (vl_venc_w + vl_diferenca_w)
			where	dt_vencimento = dt_venc_w
			and 	nr_sequencia_orcamento = nr_sequencia_p;
		elsif (vl_diferenca_w < 0) then
			update	orcamento_paciente_venc
			set 	vl_vencimento = (vl_venc_w + vl_diferenca_w)
			where	dt_vencimento = dt_venc_w
			and 	nr_sequencia_orcamento = nr_sequencia_p;
		end if;
     end if;
end if;

/* A vista */

if (ie_forma_pagamento_w = 1) then
	insert into orcamento_paciente_venc(
					nr_sequencia_orcamento,
					dt_vencimento,
					vl_vencimento,
					dt_atualizacao,
					nm_usuario)
				values (nr_sequencia_p,
					dt_base_p,
					vl_orcamento_w,
					clock_timestamp(),
					nm_usuario_p);
end if;


END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualizar_vencimento_orcamento ( nr_sequencia_p bigint, cd_estabelecimento_P bigint, cd_condicao_pagamento_P bigint, dt_base_p timestamp, nm_usuario_p text) FROM PUBLIC;

