-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_reabrir_franq_pag ( nr_seq_franq_pag_p pls_franq_pag.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE

 
nr_seq_lote_evento_w	pls_lote_evento.nr_sequencia%type;
cd_estabelecimento_w	pls_lote_evento.cd_estabelecimento%type;
cont_w			bigint;
qt_evento_movimento_w	integer;

c01 CURSOR(nr_seq_franq_pag_w		pls_franq_pag_prest.nr_seq_franq_pag%type)FOR 
	SELECT	a.nr_sequencia 
	from	pls_pagamento_item a 
	where	a.nr_sequencia	in (	SELECT	x.nr_seq_pag_item 
					from	pls_franq_pag_prest x 
					where	x.nr_seq_franq_pag		= nr_seq_franq_pag_w);
					
BEGIN 
 
select	max(nr_sequencia), 
	max(cd_estabelecimento) 
into STRICT	nr_seq_lote_evento_w, 
	cd_estabelecimento_w 
from	pls_lote_evento 
where	nr_seq_franq_pag		= nr_seq_franq_pag_p;
 
if (nr_seq_lote_evento_w IS NOT NULL AND nr_seq_lote_evento_w::text <> '') then 
 
	select	count(*) 
	into STRICT	cont_w 
	from	pls_lote_pagamento c, 
		pls_pagamento_prestador e, 
		pls_pagamento_item b, 
		pls_franq_pag_prest a 
	where	a.nr_seq_pag_item		= b.nr_sequencia 
	and	b.nr_seq_pagamento	= e.nr_sequencia 
	and	e.nr_seq_lote		= c.nr_sequencia 
	and	c.ie_status		= 'D' 
	and	a.nr_seq_franq_pag		= nr_seq_franq_pag_p 
	and	(a.nr_seq_pag_item IS NOT NULL AND a.nr_seq_pag_item::text <> '');
	 
	if (cont_w > 0) then 
		CALL wheb_mensagem_pck.exibir_mensagem_abort(283014);
	else 
 
		for	r_c01_w in c01(nr_seq_franq_pag_p) loop 
			update	pls_franq_pag_prest 
			set	nr_seq_pag_item		 = NULL 
			where	nr_seq_pag_item		= r_c01_w.nr_sequencia;
			 
			update	pls_evento_movimento 
			set	nr_seq_pagamento_item  = NULL 
			where	nr_seq_pagamento_item = r_c01_w.nr_sequencia;
			 
			delete	from pls_pagamento_item a 
			where	a.nr_sequencia		= r_c01_w.nr_sequencia;
		end loop;
	end if;
 
	update	pls_franq_pag_prest 
	set	nr_seq_evento_movto	 = NULL 
	where	nr_seq_franq_pag		= nr_seq_franq_pag_p;
 
	CALL pls_liberar_lote_evento(nr_seq_lote_evento_w, 'D', nm_usuario_p, null, 'N');
	CALL pls_gerar_evento_movto_fixo(nr_seq_lote_evento_w, cd_estabelecimento_w, nm_usuario_p, 'DC', 'N');
	 
	select	count(1) 
	into STRICT	qt_evento_movimento_w 
	from	pls_evento_movimento 
	where	nr_seq_lote = nr_seq_lote_evento_w;
	 
	if (qt_evento_movimento_w = 0) then 
		delete from pls_lote_evento where nr_sequencia = nr_seq_lote_evento_w;
	end if;
end if;
 
update 	pls_franq_pag 
set 	dt_fechamento_lote  = NULL 
where	nr_sequencia = nr_seq_franq_pag_p;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_reabrir_franq_pag ( nr_seq_franq_pag_p pls_franq_pag.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;

