-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE contabiliza_contas_pagar (nr_lote_contabil_p bigint, nm_usuario_p text, ie_exclusao_p text, ds_retorno_p INOUT text) AS $body$
DECLARE


cd_conta_contabil_w             varchar(20);
cd_centro_custo_w               bigint;
cd_estabelecimento_w            smallint;
cd_empresa_w                    empresa.cd_empresa%type;
nr_titulo_w                     bigint;
nr_documento_w                  varchar(4000);
nr_documento_tit_w              numeric(20);
nr_doc_vl_pago_w                varchar(255);
nr_ret_convenio_w               varchar(255);
nr_lote_recurso_w               varchar(255);
vl_transacao_w                  double precision;
vl_transacao_ww                 double precision;
vl_total_transacao_w            double precision;
cd_pessoa_fisica_w              varchar(10);
vl_outras_despesas_w            double precision;
cd_cgc_w                        varchar(14);
nr_seq_conta_banco_w            bigint;
nr_seq_trans_fin_w              bigint;
nr_seq_agrupamento_w            bigint;
nm_atributo_w                   varchar(50);
dt_contabil_w                   timestamp;
dt_contabil_inicial_w           timestamp;
dt_contabil_final_w             timestamp;
dt_movimento_w                  timestamp;
vl_retorno_w                    double precision;
nr_bordero_w                    bordero_pagamento.nr_bordero%type;
nr_seq_escrit_w                 banco_escritural.nr_sequencia%type;
cd_convenio_w                   integer;
ds_benefic_w                    pessoa_juridica.ds_razao_social%type;
ds_benef_origem_w               varchar(80);
ds_compl_contab_w               varchar(255);
ie_benef_baixa_contab_w         varchar(01);
ie_tit_contab_baixa_w           varchar(01);
ie_benef_orig_trib_contab_w     varchar(01);
ie_gerar_contab_reg_tit_w       varchar(01);
ie_contab_cp_no_cb_w            varchar(01);
ie_cont_prov_adiant_pago_w      varchar(1);
ie_contab_analitico_w           varchar(01);
ie_hist_fornec_banco_w          varchar(01);
ds_titulo_w                     varchar(30);
ds_bordero_w                    varchar(100);
ie_desc_bord_compl_ctb_w        varchar(01);
ie_contab_imposto_w             varchar(15);
ie_contab_doc_pagto_w           varchar(1);
ie_contab_classif_w             varchar(1);
nr_parcelas_w                   integer;
nr_cheque_w                     varchar(255);
ds_conteudo_w                   varchar(4000) := '';
ie_compl_hist_w                 varchar(3);
ie_contab_cp_tesouraria_w       varchar(1);
ie_contab_tit_cancelado_w       varchar(1);
dt_mesano_contab_w              varchar(100);
ds_pessoa_titulo_w              varchar(255);
ie_tipo_conta_w                 varchar(255);
nr_bloqueto_w                   varchar(100);
nr_titulo_doc_w                 bigint;
nr_titulo_doc_ww                bigint;
nr_titulo_original_w            bigint;
nr_titulo_bloqueto_w            bigint;
dt_contabil_titulo_w            timestamp;
nr_total_parcelas_w             integer;
nr_repasse_terceiro_w           bigint;
nr_seq_terceiro_w               bigint;
ds_mesano_ref_repasse_w         varchar(10);
nm_terceiro_w                   varchar(255);
ie_contab_tit_desdob_w          varchar(255);
nr_adiantamento_w               bigint;
nr_tit_orig_adiant_w            bigint;
cd_tributo_w                    bigint;
ie_contab_trans_fin_baixa_w     varchar(1);
nr_seq_trans_fin_baixa_w        bigint;
nr_seq_lote_res_pls_w           bigint;
ds_mes_competencia_w            varchar(10);
ds_banco_w                      varchar(100);
ie_contab_tit_adiant_w          varchar(100);
ie_tipo_titulo_w                varchar(2);
nm_fantasia_pj_w                varchar(80);
cd_estab_titulo_w               smallint;
cd_estab_titulo_ww              smallint;
ds_estab_titulo_w               varchar(80);
ds_observacao_titulo_w          varchar(255);
ie_situacao_w                   varchar(1);
vl_original_w                   double precision;
vl_tributo_w                    double precision;
vl_total_tributo_w              double precision;
ie_contab_valor_trib_w          varchar(1);
ie_contab_vl_original_w         varchar(1);
ie_contab_classif_baixa_w       varchar(1);
ie_contab_tit_bloqueto_w        varchar(1) := 'S';
ie_contab_w                     varchar(1);
nr_seq_rpa_w                    bigint;
nr_nota_fiscal_w                varchar(255);
nr_sequencia_movto_w            bigint;
ie_contab_adiant_dev_cp_w       varchar(1);
nr_seq_adiant_dev_w             bigint;
ds_motivo_dev_w                 varchar(255);
ds_obs_adiant_pago_w            varchar(255);
ds_obs_baixa_titulo_w           varchar(255);
nr_seq_baixa_w                  bigint;
nr_nota_fiscal_ww               varchar(255);
nr_documento_tit_ww             numeric(20);
ie_dt_movto_contab_cp_w         varchar(1);
ds_nota_credito_w               varchar(200);
ie_permite_estab_dif_w          varchar(15);
cd_conta_transitoria_w          varchar(20);
cd_historico_ct_w               bigint;
cd_tipo_lote_contabil_w         bigint;
nr_seq_nota_credito_w           bigint;
ie_contab_tit_contrato_w        varchar(1);
cd_estab_financeiro_w           bigint;
ie_contab_cp_estab_w            varchar(15);
ie_contab_bordero_cp_w          varchar(1);
cd_conta_financ_regra_w         bigint;
cd_benef_regra_w                varchar(255);
qt_pago_outros_w                bigint;
cd_natureza_operacao_w          bigint;
cd_operacao_nf_w                smallint;
ds_irrelevante_w                double precision;
nr_seq_regra_w                  bigint;
cd_tributo_ww                   bigint;
ds_irrelevante_w_2              varchar(255);
ds_hist_movto_trans_financ_w    varchar(200);
nr_seq_movto_trans_fin_w        bigint;
vl_base_calculo_w               double precision;
ds_tributo_w                    varchar(255);
nr_seq_classe_w                 bigint;
ie_contab_curto_prazo_w         varchar(1);
cd_tipo_baixa_w                 integer;
ie_conta_contab_tit_adiant_w    varchar(1);
ie_contab_trib_nota_w           varchar(1);
nm_pf_pj_tit_orig_w             varchar(80);
nr_nfe_imp_w                    varchar(255);
ie_estab_dif_provisao_w         varchar(1);
qt_contador_w                   bigint;
qt_cheque_w                     bigint;
nm_tabela_w                     lote_contabil_log.nm_tabela%type;
ie_contab_prov_tributo_w        parametros_contas_pagar.ie_contab_prov_tributo%type;
nr_seq_proj_rec_w               titulo_pagar.nr_seq_proj_rec%type;
nr_documento_ww                 movimento_contabil.nr_documento%type;
ie_origem_documento_w           movimento_contabil.ie_origem_documento%type;
ie_origem_tit_param_w           titulo_pagar.ie_origem_titulo%type;
ie_processo_camara_w            pls_parametros_camara.ie_processo_camara%type;
ie_nf_nfe_w                     varchar(15);
nr_seq_tab_orig_w               w_movimento_contabil.nr_seq_tab_orig%type;
nr_seq_tab_compl_w              w_movimento_contabil.nr_seq_tab_compl%type;
nr_seq_info_ctb_w               w_movimento_contabil.nr_seq_info%type;
ie_regra_w                      varchar(255);
ds_atributos_w                  varchar(4000);
ie_contab_provisorio_w          parametros_contas_pagar.ie_contab_provisorio%type;
nm_agrupador_w                  varchar(255);
ie_origem_titulo_w              titulo_pagar.ie_origem_titulo%type;
nr_seq_lote_pagamento_w         pls_pagamento_prestador.nr_seq_lote%type;
nr_sequencia_w                  w_movimento_contabil.nr_sequencia%type := 0;
nr_seq_nota_fiscal_w            titulo_pagar.nr_seq_nota_fiscal%type;
qt_movto_contab_w               bigint;
vl_out_desp_bordero_w           titulo_pagar.vl_out_desp_bordero%type;
cd_tributo_regra_w              titulo_pagar_imposto.cd_tributo%type;
ds_estorno_w                    varchar(255);
ds_classif_tit_w                lote_contabil_parametro.ds_valor_parametro%type;
cd_estab_banco_w                estabelecimento.cd_estabelecimento%type;
cd_estab_intercompany_ori_w     estabelecimento.cd_estabelecimento%type;
ds_estab_intercompany_ori_w     varchar(255);
cd_estab_intercompany_des_w     estabelecimento.cd_estabelecimento%type;
ds_estab_intercompany_des_w     varchar(255);
cd_interno_intercompany_ori_w   estabelecimento.cd_interno%type;
cd_interno_intercompany_des_w   estabelecimento.cd_interno%type;
ie_intercompany_w               varchar(1)     := 'N';
nr_seq_nota_orig_w              nota_fiscal.nr_sequencia%type;
nr_nota_orig_w                  nota_fiscal.nr_nota_fiscal%type;
cd_serie_nf_orig_w              nota_fiscal.cd_serie_nf%type;
nr_nfe_imp_orig_w               nota_fiscal.nr_nfe_imp%type;

/* cursor para ler movimento a ser contabilizado */

c010 CURSOR FOR
        SELECT  a.nr_titulo,
                a.vl_transacao,
                a.nr_seq_conta_banco,
                a.nr_seq_trans_fin,
                a.ds_atributo,
                a.nr_bordero,
                a.nr_seq_escrit,
                a.cd_centro_custo,
                a.cd_conta_contabil,
                a.dt_baixa,
                null nr_adiantamento,
                0 vl_original,
                null nr_seq_adiant_dev,
                a.nr_seq_baixa,
                null nr_seq_nota_credito,
                a.nr_seq_movto_trans_fin,
                c.nr_seq_classe,
                a.cd_tipo_baixa,
                'TITULO_PAGAR_BAIXA_CONTAB_V',
                a.cd_tributo,
                c.nr_seq_proj_rec,
                c.nr_titulo nr_seq_tab_orig,
                a.nr_seq_baixa nr_seq_tab_compl,
                13 nr_seq_info_ctb,
                c.ie_origem_titulo,
                CASE WHEN coalesce(a.nr_seq_baixa_origem::text, '') = '' THEN ''  ELSE obter_desc_expressao(304277) END  ds_estorno
        from    titulo_pagar c,
                titulo_pagar_baixa_contab_v a
        where   a.nr_titulo                     = c.nr_titulo
        and     a.nr_lote_contabil              = nr_lote_contabil_p
        and     ((ie_contab_classif_baixa_w     = 'N') or ((ie_contab_classif_baixa_w = 'S') and (c.ie_tipo_titulo not in ('5','14','21','26'))))
        and     a.ds_atributo <> 'VL_OUTRAS_DESPESAS'

union all

        SELECT  coalesce(b.nr_titulo, a.nr_titulo) nr_titulo,
                coalesce(b.vl_baixa, a.vl_transacao) + coalesce(vl_juros, 0) vl_transacao,
                a.nr_seq_conta_banco,
                a.nr_seq_trans_fin,
                a.ds_atributo,
                a.nr_bordero,
                a.nr_seq_escrit,
                coalesce(b.cd_centro_custo, a.cd_centro_custo) cd_centro_custo,
                coalesce(b.cd_conta_contabil, a.cd_conta_contabil) cd_conta_contabil,
                a.dt_baixa,
                null nr_adiantamento,
                0 vl_original,
                null nr_seq_adiant_dev,
                a.nr_seq_baixa,
                null nr_seq_nota_credito,
                a.nr_seq_movto_trans_fin,
                c.nr_seq_classe,
                a.cd_tipo_baixa,
                CASE WHEN coalesce(b.nr_titulo::text, '') = '' THEN 'TITULO_PAGAR_BAIXA_CONTAB_V'  ELSE 'TITULO_PAGAR_BAIXA_CC' END  nm_tabela,
                a.cd_tributo,
                c.nr_seq_proj_rec,
                coalesce(b.nr_sequencia, a.nr_titulo) nr_seq_tab_orig,
                a.nr_seq_baixa,
                13,
                c.ie_origem_titulo,
                CASE WHEN coalesce(a.nr_seq_baixa_origem::text, '') = '' THEN ''  ELSE obter_desc_expressao(304277) END  ds_estorno
        FROM titulo_pagar c, titulo_pagar_baixa_contab_v a
LEFT OUTER JOIN titulo_pagar_baixa_cc b ON (a.nr_titulo = b.nr_titulo AND a.nr_seq_baixa = b.nr_seq_baixa)
WHERE c.nr_titulo                     = a.nr_titulo and c.ie_tipo_titulo in ('5','14','26') and a.nr_lote_contabil              = nr_lote_contabil_p and ie_contab_classif_baixa_w       = 'S' and a.ds_atributo <> 'VL_JUROS' and a.nr_seq_baixa = (SELECT MAX(alf.nr_seq_baixa) FROM titulo_pagar_baixa_contab_v alf WHERE alf.nr_titulo = a.nr_titulo)
         
union all

        select  coalesce(b.nr_titulo, a.nr_titulo) nr_titulo,
                coalesce(b.vl_baixa, a.vl_transacao) vl_transacao,
                a.nr_seq_conta_banco,
                a.nr_seq_trans_fin,
                a.ds_atributo,
                a.nr_bordero,
                a.nr_seq_escrit,
                coalesce(b.cd_centro_custo, a.cd_centro_custo) cd_centro_custo,
                coalesce(b.cd_conta_contabil, a.cd_conta_contabil) cd_conta_contabil,
                a.dt_baixa,
                null nr_adiantamento,
                0 vl_original,
                null nr_seq_adiant_dev,
                a.nr_seq_baixa,
                null nr_seq_nota_credito,
                a.nr_seq_movto_trans_fin,
                c.nr_seq_classe,
                a.cd_tipo_baixa,
                CASE WHEN coalesce(b.nr_titulo::text, '') = '' THEN 'TITULO_PAGAR_BAIXA_CONTAB_V'  ELSE 'TITULO_PAGAR_BAIXA_CC' END  nm_tabela,
                a.cd_tributo,
                c.nr_seq_proj_rec,
                coalesce(b.nr_sequencia, a.nr_titulo) nr_seq_tab_orig,
                a.nr_seq_baixa,
                13,
                c.ie_origem_titulo,
                CASE WHEN coalesce(a.nr_seq_baixa_origem::text, '') = '' THEN ''  ELSE obter_desc_expressao(304277) END  ds_estorno
        FROM titulo_pagar c, titulo_pagar_baixa_contab_v a
LEFT OUTER JOIN titulo_pagar_baixa_cc b ON (a.nr_titulo = b.nr_titulo AND a.nr_seq_baixa = b.nr_seq_baixa)
WHERE c.nr_titulo                     = a.nr_titulo and c.ie_tipo_titulo                = '21' and a.nr_lote_contabil              = nr_lote_contabil_p and a.ds_atributo                   <> 'VL_BAIXA' and ie_contab_classif_baixa_w       = 'S'
         
union all

        select  a.nr_titulo,
                a.vl_transacao vl_transacao,
                a.nr_seq_conta_banco,
                a.nr_seq_trans_fin,
                a.ds_atributo,
                a.nr_bordero,
                a.nr_seq_escrit,
                a.cd_centro_custo,
                a.cd_conta_contabil,
                a.dt_baixa,
                null nr_adiantamento,
                0 vl_original,
                null nr_seq_adiant_dev,
                a.nr_seq_baixa,
                null nr_seq_nota_credito,
                a.nr_seq_movto_trans_fin,
                c.nr_seq_classe,
                a.cd_tipo_baixa,
                'TITULO_PAGAR_BAIXA_CC_CONTAB_V',
                null cd_tributo,
                c.nr_seq_proj_rec,
                coalesce(a.nr_seq_baixa_cc, a.nr_titulo) nr_seq_tab_orig,
                a.nr_seq_baixa nr_seq_tab_compl,
                13 nr_seq_info_ctb,
                c.ie_origem_titulo,
                CASE WHEN coalesce(a.nr_seq_baixa_origem::text, '') = '' THEN ''  ELSE obter_desc_expressao(304277) END  ds_estorno
        from    titulo_pagar_baixa_cc_contab_v a,
                titulo_pagar c
        where   a.nr_titulo                     = c.nr_titulo
        and     a.nr_lote_contabil              = nr_lote_contabil_p
        and     ie_contab_classif_baixa_w       = 'T'
        
union all

        select  b.nr_titulo,
                b.vl_titulo,
                0,
                coalesce(b.nr_seq_trans_fin, a.nr_seq_trans_fin_contab),
                'VL_TITULO',
                null,
                null,
                b.cd_centro_custo,
                b.cd_conta_contabil,
                dt_contabil,
                null nr_adiantamento,
                b.vl_original,
                null nr_seq_adiant_dev,
                0 nr_seq_baixa,
                null nr_seq_nota_credito,
                null nr_seq_movto_trans_fin,
                a.nr_seq_classe,
                null cd_tipo_baixa,
                'TITULO_PAGAR_CLASSIF',
                null cd_tributo,
                a.nr_seq_proj_rec,
                a.nr_titulo nr_seq_tab_orig,
                b.nr_sequencia nr_seq_tab_compl,
                2 nr_seq_info_ctb,
                a.ie_origem_titulo,
                '' ds_estorno
        from    titulo_pagar_classif b,
                titulo_pagar a
        where   a.nr_lote_contabil              = nr_lote_contabil_p
        and     a.nr_titulo                     = b.nr_titulo
        
union all

        select  b.nr_titulo,
                (coalesce(CASE WHEN coalesce(b.vl_original,0)=0 THEN  null  ELSE b.vl_original END , b.vl_titulo))::numeric ,
                0,
                coalesce(b.nr_seq_trans_fin, a.nr_seq_trans_fin_contab),
                'VL_TIT_LIQ_IMP',
                null,
                null,
                b.cd_centro_custo,
                b.cd_conta_contabil,
                dt_contabil,
                null nr_adiantamento,
                b.vl_original,
                null nr_seq_adiant_dev,
                0 nr_seq_baixa,
                null nr_seq_nota_credito,
                null nr_seq_movto_trans_fin,
                a.nr_seq_classe,
                null cd_tipo_baixa,
                'TITULO_PAGAR_CLASSIF',
                null cd_tributo,
                a.nr_seq_proj_rec,
                a.nr_titulo nr_seq_tab_orig,
                b.nr_sequencia nr_seq_tab_compl,
                2 nr_seq_info_ctb,
                a.ie_origem_titulo,
                '' ds_estorno
        from    titulo_pagar_classif b,
                titulo_pagar a
        where   a.nr_lote_contabil              = nr_lote_contabil_p
        and     a.nr_titulo                     = b.nr_titulo
        
union all

        select  a.nr_titulo,
                a.vl_titulo,
                0,
                a.nr_seq_trans_fin_contab,
                'VL_TITULO',
                null,
                null,
                null cd_centro_custo,
                null cd_conta_contabil,
                a.dt_contabil,
                null nr_adiantamento,
                0,
                null nr_seq_adiant_dev,
                0 nr_seq_baixa,
                null nr_seq_nota_credito,
                null nr_seq_movto_trans_fin,
                a.nr_seq_classe,
                null cd_tipo_baixa,
                'TITULO_PAGAR',
                null cd_tributo,
                a.nr_seq_proj_rec,
                a.nr_titulo nr_seq_tab_orig,
                null nr_seq_tab_compl,
                2 nr_seq_info_ctb,
                a.ie_origem_titulo,
                '' ds_estorno
        from    titulo_pagar a
        where   a.nr_lote_contabil              = nr_lote_contabil_p
        and     not exists (select 1 from titulo_pagar_classif x where x.nr_titulo = a.nr_titulo)
        and     ie_contab_classif_w             = 'N'
        
union all

        select a.nr_titulo,
                coalesce(vl_alteracao,0) - coalesce(vl_anterior,0),
                0,
                nr_seq_trans_fin,
                'VL_ALTERADO',
                null,
                null,
                null cd_centro_custo,
                null cd_conta_contabil,
                dt_alteracao,
                null nr_adiantamento,
                0,
                null nr_seq_adiant_dev,
                0 nr_seq_baixa,
                null nr_seq_nota_credito,
                null nr_seq_movto_trans_fin,
                null nr_seq_classe,
                null cd_tipo_baixa,
                'TITULO_PAGAR_ALT_VALOR',
                null cd_tributo,
                null nr_seq_proj_rec,
                a.nr_titulo nr_seq_tab_orig,
                a.nr_sequencia nr_seq_tab_compl,
                15 nr_seq_info_ctb,
                '0',
                '' ds_estorno
        from    titulo_pagar_alt_valor a
        where   nr_lote_contabil                = nr_lote_contabil_p
        and     (a.nr_seq_trans_fin IS NOT NULL AND a.nr_seq_trans_fin::text <> '')
        
union all

        select a.nr_titulo,
                coalesce(vl_adiantamento,0),
                0,
                nr_seq_trans_fin,
                'VL_ADIANT_TIT_PAGAR',
                null,
                null,
                null cd_centro_custo,
                null cd_conta_contabil,
                coalesce(a.dt_contabil, a.dt_atualizacao) dt_movimento,
                a.nr_adiantamento,
                0,
                null nr_seq_adiant_dev,
                0 nr_seq_baixa,
                null nr_seq_nota_credito,
                null nr_seq_movto_trans_fin,
                null nr_seq_classe,
                null cd_tipo_baixa,
                'TITULO_PAGAR_ADIANT',
                null cd_tributo,
                null nr_seq_proj_rec,
                a.nr_titulo nr_seq_tab_orig,
                a.nr_sequencia nr_seq_tab_compl,
                16 nr_seq_info_ctb,
                '0',
                '' ds_estorno
        from    titulo_pagar_adiant a
        where   nr_lote_contabil                = nr_lote_contabil_p
        and     (a.nr_seq_trans_fin IS NOT NULL AND a.nr_seq_trans_fin::text <> '')
        
union all

        select distinct
                a.nr_titulo,
                r.vl_titulo,
                0,
                t.nr_seq_trans_imp,
                'VL_TRANSF_TRIBUTO',
                null,
                null,
                null cd_centro_custo,
                null cd_conta_contabil,
                a.dt_baixa,
                null nr_adiantamento,
                0,
                null nr_seq_adiant_dev,
                0 nr_seq_baixa,
                null nr_seq_nota_credito,
                a.nr_seq_movto_trans_fin,
                r.nr_seq_classe,
                a.cd_tipo_baixa,
                'TITULO_PAGAR_BAIXA',
                null cd_tributo,
                r.nr_seq_proj_rec,
                a.nr_titulo nr_seq_tab_orig,
                a.nr_sequencia nr_seq_tab_compl,
                13 nr_seq_info_ctb,
                r.ie_origem_titulo,
                CASE WHEN coalesce(a.nr_seq_baixa_origem::text, '') = '' THEN ''  ELSE obter_desc_expressao(304277) END  ds_estorno
        from    titulo_pagar r,
                tributo t,
                titulo_pagar_imposto i,
                titulo_pagar_baixa a
        where   a.nr_lote_contabil              = CASE WHEN 'N'='S' THEN a.nr_lote_contabil  ELSE nr_lote_contabil_p END 
        and     (t.nr_seq_trans_imp IS NOT NULL AND t.nr_seq_trans_imp::text <> '')
        and     a.nr_titulo                     = i.nr_titulo
        and     i.cd_tributo                    = t.cd_tributo
        and     r.nr_seq_tributo                = i.nr_sequencia
        and     (substr(Obter_Titulo_Imposto(i.nr_sequencia),1,10))::numeric  > 0
        and     ie_contab_imposto_w             in ('S','D')
        and     r.ie_status_tributo             = 'NT'
        and     r.nr_lote_transf_trib   = nr_lote_contabil_p
        and (select max(o.nr_sequencia)
                from titulo_pagar_baixa o, tipo_baixa_cpa b
                where o.cd_tipo_baixa = b.cd_tipo_baixa
                and b.ie_tipo_consistencia != 3
                and o.nr_titulo     = a.nr_titulo) = a.nr_sequencia
                and r.nr_lote_transf_trib   = nr_lote_contabil_p
        
union all

        select  0 nr_titulo,
                a.vl_devolucao,
                0,
                a.nr_seq_trans_fin,
                'VL_ADIANT_DEV',
                null,
                null,
                null cd_centro_custo,
                null cd_conta_contabil,
                a.dt_devolucao,
                a.nr_adiantamento,
                0,
                a.nr_sequencia nr_seq_adiant_dev,
                0 nr_seq_baixa,
                null nr_seq_nota_credito,
                null nr_seq_movto_trans_fin,
                null nr_seq_classe,
                null cd_tipo_baixa,
                'ADIANT_PAGO_DEV',
                null cd_tributo,
                null nr_seq_proj_rec,
                a.nr_adiantamento nr_seq_tab_orig,
                a.nr_sequencia nr_seq_tab_compl,
                17 nr_seq_info_ctb,
                '0',
                '' ds_estorno
        from    adiantamento_pago b,
                adiant_pago_dev a
        where   a.nr_adiantamento       = b.nr_adiantamento
        and     a.nr_lote_contabil      = nr_lote_contabil_p
        and     (a.nr_seq_trans_fin IS NOT NULL AND a.nr_seq_trans_fin::text <> '')
        and     ie_contab_adiant_dev_cp_w = 'S'
        
union all

        select  c.nr_titulo,
                CASE WHEN sign(d.vl_transacao)=1 THEN a.vl_nota_credito WHEN sign(d.vl_transacao)=-1 THEN a.vl_nota_credito * -1 END  vl_transacao,
                d.nr_seq_conta_banco,
                d.nr_seq_trans_fin,
                'VL_NOTA_CREDITO',
                d.nr_bordero,
                d.nr_seq_escrit,
                d.cd_centro_custo,
                d.cd_conta_contabil,
                d.dt_baixa,
                null nr_adiantamento,
                0 vl_original,
                null nr_seq_adiant_dev,
                d.nr_seq_baixa,
                a.nr_seq_nota_credito,
                d.nr_seq_movto_trans_fin,
                c.nr_seq_classe,
                d.cd_tipo_baixa,
                'TITULO_PAGAR_BAIXA_CONTAB_V',
                d.cd_tributo,
                c.nr_seq_proj_rec,
                c.nr_titulo nr_seq_tab_orig,
                d.nr_seq_baixa nr_seq_tab_compl,
                13 nr_seq_info_ctb,
                c.ie_origem_titulo,
                CASE WHEN coalesce(d.nr_seq_baixa_origem::text, '') = '' THEN ''  ELSE 'Estorno' END  ds_estorno
        from    titulo_pagar_baixa_contab_v d,
                titulo_pagar c,
                bordero_nc b,
                bordero_nc_nota_credito a
        where   a.nr_seq_bordero= b.nr_sequencia
        and     b.nr_sequencia  = c.nr_seq_bordero_nc
        and     d.nr_titulo     = c.nr_titulo
        and     d.ds_atributo   = 'VL_BAIXA'
        and     c.ie_tipo_titulo= '21'
        and     d.nr_lote_contabil      = nr_lote_contabil_p
        
union all

        select  0 nr_titulo,
                b.vl_adiantamento,
                0,
                b.nr_seq_trans_fin,
                'VL_ADIANT_PAGO',
                null,
                null,
                null cd_centro_custo,
                null cd_conta_contabil,
                b.dt_adiantamento,
                b.nr_adiantamento,
                0,
                null nr_seq_adiant_dev,
                0 nr_seq_baixa,
                null nr_seq_nota_credito,
                null nr_seq_movto_trans_fin,
                null nr_seq_classe,
                null cd_tipo_baixa,
                'ADIANTAMENTO_PAGO',
                null cd_tributo,
                null nr_seq_proj_rec,
                b.nr_adiantamento nr_seq_tab_orig,
                null nr_seq_tab_compl,
                18,
                '0',
                '' ds_estorno
        from    adiantamento_pago b
        where   b.nr_lote_contabil              = nr_lote_contabil_p
        and     ie_cont_prov_adiant_pago_w = 'S'
        
union all

        select  a.nr_titulo,
                a.vl_titulo,
                0,
                a.nr_seq_tf_curto_prazo,
                'VL_CURTO_PRAZO',
                null,
                null,
                null cd_centro_custo,
                null cd_conta_contabil,
                PKG_DATE_UTILS.ADD_MONTH(a.dt_vencimento_atual,-12,0),
                null nr_adiantamento,
                0,
                null nr_seq_adiant_dev,
                0 nr_seq_baixa,
                null nr_seq_nota_credito,
                null nr_seq_movto_trans_fin,
                a.nr_seq_classe,
                null cd_tipo_baixa,
                'TITULO_PAGAR',
                null cd_tributo,
                a.nr_seq_proj_rec,
                a.nr_titulo nr_seq_tab_orig,
                null,
                2,
                a.ie_origem_titulo,
                '' ds_estorno
        from    titulo_pagar a
        where   a.nr_lote_contabil              <> a.nr_lote_contabil_curto_prazo
        and     a.nr_lote_contabil <> 0
        and     a.nr_lote_contabil_curto_prazo =  nr_lote_contabil_p
        and     (a.nr_seq_tf_curto_prazo IS NOT NULL AND a.nr_seq_tf_curto_prazo::text <> '')
        and     ie_contab_curto_prazo_w = 'S'
        
union all

        select  a.nr_titulo,
                a.vl_titulo,
                0,
                a.nr_seq_tf_curto_prazo,
                'VL_LONGO_PRAZO',
                null,
                null,
                null cd_centro_custo,
                null cd_conta_contabil,
                a.dt_contabil,
                null nr_adiantamento,
                0,
                null nr_seq_adiant_dev,
                0 nr_seq_baixa,
                null nr_seq_nota_credito,
                null nr_seq_movto_trans_fin,
                a.nr_seq_classe,
                null cd_tipo_baixa,
                'TITULO_PAGAR',
                null cd_tributo,
                a.nr_seq_proj_rec,
                a.nr_titulo nr_seq_tab_orig,
                null,
                2,
                a.ie_origem_titulo,
                '' ds_estorno
        from    titulo_pagar a
        where   a.nr_lote_contabil              =  nr_lote_contabil_p
        AND     a.dt_vencimento_atual           > PKG_DATE_UTILS.ADD_MONTH(dt_contabil_w,12,0)
        and     (a.nr_seq_tf_curto_prazo IS NOT NULL AND a.nr_seq_tf_curto_prazo::text <> '')
        and     ie_contab_curto_prazo_w = 'S'
        
union all
 /*Desativado em 08/07/2014 por Matheus - atributo busca valores do CR*/
        select  a.nr_titulo,
                (b.vl_baixa - coalesce(b.vl_imposto,0)) vl_transacao,
                b.nr_seq_conta_banco,
                b.nr_seq_trans_fin,
                'VL_BAIXA_SEM_TRIB',
                0,
                0,
                0,
                '0',
                a.dt_contabil,
                null nr_adiantamento,
                0,
                null nr_seq_adiant_dev,
                0 nr_seq_baixa,
                null nr_seq_nota_credito,
                null nr_seq_movto_trans_fin,
                a.nr_seq_classe,
                b.cd_tipo_baixa,
                'TITULO_PAGAR',
                null cd_tributo,
                a.nr_seq_proj_rec,
                a.nr_titulo nr_seq_tab_orig,
                b.nr_sequencia,
                13,
                a.ie_origem_titulo,
                CASE WHEN coalesce(b.nr_seq_baixa_origem::text, '') = '' THEN ''  ELSE obter_desc_expressao(304277) END  ds_estorno
        from    titulo_pagar_baixa b,
                titulo_pagar a
        where   b.nr_lote_contabil              = nr_lote_contabil_p
        and     a.nr_titulo = b.nr_titulo
        and (b.vl_baixa - coalesce(b.vl_imposto,0)) <> 0
        
union all

        select  a.nr_titulo,
                b.vl_outras_despesas,
                0,
                b.nr_seq_trans_fin,
                'VL_OUTRAS_DESPESAS',
                null,
                null,
                null cd_centro_custo,
                null cd_conta_contabil,
                b.dt_baixa,
                null nr_adiantamento,
                0,
                null nr_seq_adiant_dev,
                0 nr_seq_baixa,
                null nr_seq_nota_credito,
                null nr_seq_movto_trans_fin,
                a.nr_seq_classe,
                b.cd_tipo_baixa,
                'TITULO_PAGAR_BAIXA',
                null cd_tributo,
                a.nr_seq_proj_rec,
                a.nr_titulo nr_seq_tab_orig,
                b.nr_sequencia,
                13,
                a.ie_origem_titulo,
                CASE WHEN coalesce(b.nr_seq_baixa_origem::text, '') = '' THEN ''  ELSE obter_desc_expressao(304277) END  ds_estorno
        from    titulo_pagar_baixa b,
                titulo_pagar a
        where   b.nr_lote_contabil              = nr_lote_contabil_p
        and     a.nr_titulo = b.nr_titulo
        
union all

        select  r.nr_titulo,
                i.vl_imposto,
                0,
                r.nr_seq_trans_fin_contab,
                'VL_PROV_TRIBUTO',
                null,
                null,
                null cd_centro_custo,
                null cd_conta_contabil,
                i.dt_imposto,
                null nr_adiantamento,
                0,
                null nr_seq_adiant_dev,
                0 nr_seq_baixa,
                null nr_seq_nota_credito,
                null nr_seq_movto_trans_fin,
                r.nr_seq_classe,
                null cd_tipo_baixa,
                'TITULO_PAGAR_IMPOSTO',
                i.cd_tributo,
                r.nr_seq_proj_rec,
                i.nr_sequencia,
                i.nr_titulo,
                59 nr_seq_info_ctb,
                r.ie_origem_titulo,
                '' ds_estorno
        from    titulo_pagar r,
                tributo t,
                titulo_pagar_imposto i
        where   i.cd_tributo                    = t.cd_tributo
        and     r.nr_titulo                     = i.nr_titulo
        and     i.nr_lote_contabil              = nr_lote_contabil_p
        and     t.ie_contab_prov_cp             = 'S'
        and     ie_contab_prov_tributo_w        = 'S'
        
union all

        select  a.nr_titulo,
                c.vl_movimento vl_transacao,
                0 nr_seq_conta_banco,
                b.nr_seq_trans_fin,
                CASE WHEN c.ie_origem='E' THEN  'VL_EVENTO_OPS' WHEN c.ie_origem='P' THEN  'VL_PAGAMENTO_OPS' WHEN c.ie_origem='I' THEN  'VL_INTERCAMBIO' WHEN c.ie_origem='R' THEN  'VL_REEMBOLSO' WHEN c.ie_origem='C' THEN  'VL_COPARTICIPACAO' END  nm_atributo,
                b.nr_bordero,
                b.nr_seq_escrit,
                null cd_centro_custo,
                c.cd_conta_contabil,
                b.dt_baixa dt_movimento,
                null nr_adiantamento,
                0 vl_original,
                null nr_seq_adiant_dev,
                b.nr_sequencia nr_seq_baixa,
                null nr_seq_nota_credito,
                null nr_seq_movto_trans_fin,
                a.nr_seq_classe,
                b.cd_tipo_baixa,
                'TITULO_PAGAR_BAIXA_OPS' nm_tabela,
                null cd_tributo,
                null nr_seq_proj_rec,
                c.nr_sequencia nr_seq_tab_orig,
                b.nr_sequencia nr_seq_tab_compl,
                13 nr_seq_info_ctb,
                a.ie_origem_titulo,
                CASE WHEN coalesce(b.nr_seq_baixa_origem::text, '') = '' THEN ''  ELSE obter_desc_expressao(304277) END  ds_estorno
        from    titulo_pagar_baixa_ops  c,
                titulo_pagar_baixa      b,
                titulo_pagar            a
        where   a.nr_titulo             = b.nr_titulo
        and     a.nr_titulo             = c.nr_titulo
        and     b.nr_sequencia          = c.nr_seq_baixa
        and     c.nr_lote_contabil      = nr_lote_contabil_p
        
union all

        select  coalesce(b.nr_titulo, a.nr_titulo) nr_titulo,
                b.vl_baixa_estrang vl_transacao,
                a.nr_seq_conta_banco,
                a.nr_seq_trans_fin,
                'VL_BAIXA_ESTRANG' nm_atributo,
                a.nr_bordero,
                a.nr_seq_escrit,
                coalesce(b.cd_centro_custo, b.cd_centro_custo) cd_centro_custo,
                coalesce(b.cd_conta_contabil, b.cd_conta_contabil) cd_conta_contabil,
                a.dt_baixa,
                null nr_adiantamento,
                0 vl_original,
                null nr_seq_adiant_dev,
                b.nr_seq_baixa,
                null nr_seq_nota_credito,
                a.nr_seq_movto_trans_fin,
                c.nr_seq_classe,
                a.cd_tipo_baixa,
                'TITULO_PAGAR_BAIXA_CC' nm_tabela,
                null cd_tributo,
                c.nr_seq_proj_rec,
                coalesce(b.nr_sequencia, b.nr_titulo) nr_seq_tab_orig,
                b.nr_seq_baixa,
                13,
                c.ie_origem_titulo,
                CASE WHEN coalesce(a.nr_seq_baixa_origem::text, '') = '' THEN ''  ELSE obter_desc_expressao(304277) END  ds_estorno
        FROM titulo_pagar c, titulo_pagar_baixa a
LEFT OUTER JOIN titulo_pagar_baixa_cc b ON (a.nr_titulo = b.nr_titulo AND a.nr_sequencia = b.nr_seq_baixa)
WHERE c.nr_titulo                     = a.nr_titulo and a.nr_lote_contabil              = nr_lote_contabil_p and coalesce(b.vl_baixa_estrang,0)       <> 0
         
union all

        select  coalesce(b.nr_titulo, a.nr_titulo) nr_titulo,
                coalesce(b.vl_complemento,0) vl_transacao,
                a.nr_seq_conta_banco,
                a.nr_seq_trans_fin,
                'VL_MOEDA_COMPLEMENTAR' nm_atributo,
                a.nr_bordero,
                a.nr_seq_escrit,
                coalesce(b.cd_centro_custo, b.cd_centro_custo) cd_centro_custo,
                coalesce(b.cd_conta_contabil, b.cd_conta_contabil) cd_conta_contabil,
                a.dt_baixa,
                null nr_adiantamento,
                0 vl_original,
                null nr_seq_adiant_dev,
                b.nr_seq_baixa,
                null nr_seq_nota_credito,
                a.nr_seq_movto_trans_fin,
                c.nr_seq_classe,
                a.cd_tipo_baixa,
                'TITULO_PAGAR_BAIXA_CC' nm_tabela,
                null cd_tributo,
                c.nr_seq_proj_rec,
                coalesce(b.nr_sequencia, b.nr_titulo) nr_seq_tab_orig,
                b.nr_seq_baixa,
                13,
                c.ie_origem_titulo,
                CASE WHEN coalesce(a.nr_seq_baixa_origem::text, '') = '' THEN ''  ELSE obter_desc_expressao(304277) END  ds_estorno
        FROM titulo_pagar c, titulo_pagar_baixa a
LEFT OUTER JOIN titulo_pagar_baixa_cc b ON (a.nr_titulo = b.nr_titulo AND a.nr_sequencia = b.nr_seq_baixa)
WHERE c.nr_titulo                     = a.nr_titulo and a.nr_lote_contabil              = nr_lote_contabil_p and coalesce(b.vl_complemento,0)         <> 0
         
union all

        select a.nr_titulo,
                coalesce(vl_imposto,0),
                0,
                nr_seq_trans_fin,
                'VL_IMPOSTO_ADIANT',
                null,
                null,
                null cd_centro_custo,
                null cd_conta_contabil,
                coalesce(a.dt_contabil, a.dt_atualizacao) dt_movimento,
                a.nr_adiantamento,
                0,
                null nr_seq_adiant_dev,
                0 nr_seq_baixa,
                null nr_seq_nota_credito,
                null nr_seq_movto_trans_fin,
                null nr_seq_classe,
                null cd_tipo_baixa,
                'TITULO_PAGAR_ADIANT',
                null cd_tributo,
                null nr_seq_proj_rec,
                a.nr_titulo nr_seq_tab_orig,
                a.nr_sequencia nr_seq_tab_compl,
                16 nr_seq_info_ctb,
                '0',
                '' ds_estorno
        from    titulo_pagar_adiant a
        where   nr_lote_contabil                = nr_lote_contabil_p
        and     (a.nr_seq_trans_fin IS NOT NULL AND a.nr_seq_trans_fin::text <> '')
        and     coalesce(vl_imposto,0) <> 0
        
union all

        select  a.nr_titulo,
                obter_vl_iva_ret(0,a.nr_titulo,a.nr_sequencia) vl_transacao,
                0 nr_seq_conta_banco,
                a.nr_seq_trans_fin nr_seq_trans_fin,
                'VL_IVA_LIQ' nm_atributo,
                a.nr_bordero,
                null nr_seq_escrit,
                a.cd_centro_custo,
                a.cd_conta_contabil,
                a.dt_baixa dt_movimento,
                null nr_adiantamento,
                0 vl_original,
                null nr_seq_adiant_dev,
                0 nr_seq_baixa,
                null nr_seq_nota_credito,
                null nr_seq_movto_trans_fin,
                null nr_seq_classe,
                a.cd_tipo_baixa,
                'TITULO_PAGAR_BAIXA',
                null cd_tributo,
                null nr_seq_proj_rec,
                a.nr_titulo nr_seq_tab_orig,
                a.nr_sequencia nr_seq_tab_compl,
                13 nr_seq_info_ctb,
                '0' ie_origem_titulo,
                CASE WHEN coalesce(nr_seq_baixa_origem::text, '') = '' THEN ''  ELSE obter_desc_expressao(304277) END  ds_estorno
        from    titulo_pagar_baixa a
        where   obter_vl_iva_ret(0,a.nr_titulo,a.nr_sequencia) <> 0
        and     a.nr_lote_contabil = nr_lote_contabil_p;

c02 CURSOR FOR
        SELECT  coalesce(a.vl_imposto,0),
                cd_tributo,
                a.vl_base_calculo
        from    titulo_Pagar_imposto    a
        where   a.nr_titulo     = nr_titulo_w
        and     (substr(Obter_Titulo_Imposto(a.nr_sequencia),1,10))::numeric  > 0
        and     not exists (     SELECT  1
                                from    titulo_pagar y
                                where   y.nr_seq_tributo = a.nr_sequencia);

c03 CURSOR FOR
        SELECT      b.nr_titulo,
                        b.vl_transacao,
                        a.vl_out_desp_bordero
        from    titulo_pagar_baixa_contab_v     b,
                    titulo_pagar    a
        where   a.nr_titulo             = b.nr_titulo
        and     b.ds_atributo           = nm_atributo_w
        and     a.nr_bloqueto           = nr_bloqueto_w
        and     nm_atributo_w           = 'VL_BAIXA'
        and     a.nr_titulo_transf      = nr_titulo_w
        and b.nr_seq_baixa      = nr_seq_baixa_w
        and a.nr_titulo         = nr_titulo_w;
        /* and  nvl(b.nr_lote_contabil,0) = 0*/

c04 CURSOR FOR
        SELECT  b.nr_titulo
        from    titulo_pagar_baixa b,
                titulo_pagar a
        where   a.nr_titulo             = b.nr_titulo
        and     (a.nr_bloqueto IS NOT NULL AND a.nr_bloqueto::text <> '')
        and     (a.nr_titulo_transf IS NOT NULL AND a.nr_titulo_transf::text <> '')
        and     exists (SELECT 1
                        from    titulo_pagar_baixa y
                        where   y.nr_titulo             = a.nr_titulo_transf
                        and     y.nr_lote_contabil      = nr_lote_contabil_p);


BEGIN
/*Validacao para impedir a geracao em lotes incorretos */

if (ie_exclusao_p <> 'S') then
        select b.cd_tipo_lote_contabil
        into STRICT cd_tipo_lote_contabil_w
        from lote_contabil b
        where b.nr_lote_contabil = nr_lote_contabil_p;
        if (cd_tipo_lote_contabil_w <> 7) then
                CALL wheb_mensagem_pck.exibir_mensagem_abort(261346);
        end if;
end if;
/* identifica o tipo de titulos a receber
p = somente de provisao
b = somente de baixas
a = ambos*/
delete
from    lote_contabil_log
where   nr_lote_contabil        = nr_lote_contabil_p
and     cd_log_lote in (9,10);
commit;

select  coalesce(max(ds_valor_parametro),'A')
into STRICT    ie_tipo_conta_w
from    lote_contabil_parametro
where   nr_lote_contabil        = nr_lote_contabil_p
and     nr_seq_parametro        = 1;

select  to_char(coalesce(max(vl_parametro),0))
into STRICT    ie_origem_tit_param_w
from    lote_contabil_parametro
where   nr_lote_contabil        = nr_lote_contabil_p
and     nr_seq_parametro        = 2;

select  max(ds_valor_parametro) || ',' || max(ds_valor_parametro_compl)
into STRICT    ds_classif_tit_w
from    lote_contabil_parametro
where   nr_lote_contabil        = nr_lote_contabil_p
and     nr_seq_parametro    = 3;

if (ds_classif_tit_w = ',') then
        ds_classif_tit_w := null;
end if;

if (ie_tipo_conta_w not in ('P','B','A')) then
        CALL wheb_mensagem_pck.exibir_mensagem_abort(187216);
end if;

select  dt_referencia,
        cd_estabelecimento,
        obter_se_compl_tipo_lote(cd_estabelecimento, cd_tipo_lote_contabil),
        cd_tipo_lote_contabil
into STRICT    dt_contabil_w,
        cd_estabelecimento_w,
        ie_compl_hist_w,
        cd_tipo_lote_contabil_w
from    lote_contabil
where   nr_lote_contabil        = nr_lote_contabil_p;

cd_empresa_w := obter_empresa_estab(cd_estabelecimento_w);

dt_contabil_inicial_w   := trunc(dt_contabil_w,'mm');
dt_contabil_final_w     := fim_dia(dt_contabil_w);

select  coalesce(max(ie_benef_baixa_contab),'S'),
        coalesce(max(ie_tit_contab_baixa),'S'),
        coalesce(max(ie_benef_orig_trib_contab),'N'),
        coalesce(max(ie_gerar_contab_reg_tit),'N'),
        coalesce(max(ie_conta_analitico),'S'),
        coalesce(max(ie_hist_fornec_banco),'N'),
        coalesce(max(ie_desc_bord_compl_ctb),'N'),
        coalesce(max(ie_contab_imposto),'N'),
        coalesce(max(ie_contab_doc_pagamento),'S'),
        coalesce(max(ie_contab_classif),'S'),
        coalesce(max(ie_contab_tit_cancelado),'S'),
        coalesce(max(ie_contab_tit_desdob), 'S'),
        coalesce(max(ie_contab_trans_fin_baixa), 'N'),
        coalesce(max(ie_contab_tit_adiant), 'S'),
        coalesce(max(ie_contab_vl_original), 'N'),
        coalesce(max(ie_contab_classif_baixa),'N'),
        coalesce(max(ie_contab_tit_bloqueto),'S'),
        coalesce(max(ie_contab_adiant_dev_cp),'N'),
        coalesce(max(ie_dt_movto_contab_cp),'L'),
        coalesce(max(ie_contab_tit_contrato),'N'),
        coalesce(max(ie_contab_cp_estab),'ET'),
        coalesce(max(ie_contab_curto_prazo),'N'),
        coalesce(max(ie_conta_contab_tit_adiant),'N'),
        coalesce(max(ie_contab_trib_nota),'N'),
        coalesce(max(ie_estab_dif_provisao),'N'),
        coalesce(max(ie_contab_prov_tributo),'N'),
        coalesce(max(ie_contab_provisorio), 'S')
into STRICT    ie_benef_baixa_contab_w,
        ie_tit_contab_baixa_w,
        ie_benef_orig_trib_contab_w,
        ie_gerar_contab_reg_tit_w,
        ie_contab_analitico_w,
        ie_hist_fornec_banco_w,
        ie_desc_bord_compl_ctb_w,
        ie_contab_imposto_w,
        ie_contab_doc_pagto_w,
        ie_contab_classif_w,
        ie_contab_tit_cancelado_w,
        ie_contab_tit_desdob_w,
        ie_contab_trans_fin_baixa_w,
        ie_contab_tit_adiant_w,
        ie_contab_vl_original_w,
        ie_contab_classif_baixa_w,
        ie_contab_tit_bloqueto_w,
        ie_contab_adiant_dev_cp_w,
        ie_dt_movto_contab_cp_w,
        ie_contab_tit_contrato_w,
        ie_contab_cp_estab_w,
        ie_contab_curto_prazo_w,
        ie_conta_contab_tit_adiant_w,
        ie_contab_trib_nota_w,
        ie_estab_dif_provisao_w,
        ie_contab_prov_tributo_w,
        ie_contab_provisorio_w
from    parametros_contas_pagar
where   cd_estabelecimento      = cd_estabelecimento_w;

select  coalesce(max(ie_contab_cp_no_cb),'N'),
        coalesce(max(ie_contab_bordero_cp),'N')
into STRICT    ie_contab_cp_no_cb_w,
        ie_contab_bordero_cp_w
from    parametro_controle_banc
where   cd_estabelecimento      = cd_estabelecimento_w;

select  coalesce(max(ie_contab_cp),'N')
into STRICT    ie_contab_cp_tesouraria_w
from    parametro_tesouraria
where   cd_estabelecimento      = cd_estabelecimento_w;

select  coalesce(ie_contab_prov_adiant_pago,'N')
into STRICT    ie_cont_prov_adiant_pago_w
from    parametros_contas_pagar
where   cd_estabelecimento      = cd_estabelecimento_w;

select  max(cd_estab_financeiro)
into STRICT    cd_estab_financeiro_w
from    estabelecimento
where   cd_estabelecimento      = cd_estabelecimento_w;

select  max(coalesce(ie_processo_camara,'CO'))
into STRICT    ie_processo_camara_w
from    pls_parametros_camara
where   cd_estabelecimento      = cd_estabelecimento_w;

SELECT * FROM ctb_obter_regra_estab_dif(cd_estabelecimento_w, cd_tipo_lote_contabil_w, null, ie_permite_estab_dif_w, cd_conta_transitoria_w, cd_historico_ct_w) INTO STRICT ie_permite_estab_dif_w, cd_conta_transitoria_w, cd_historico_ct_w;

if (ie_exclusao_p = 'S') then
        CALL wheb_usuario_pck.set_ie_lote_contabil('S');

        CALL ctb_regras_contabil.comprovante_cache_storage(nr_lote_contabil_p, nm_usuario_p);
        delete  from movimento_contabil
        where   nr_lote_contabil        = nr_lote_contabil_p;

        commit;

        update lote_contabil
        set     vl_credito              = 0,
                vl_debito               = 0
        where   nr_lote_contabil        = nr_lote_contabil_p;

        update  titulo_pagar a
        set     nr_lote_contabil        = 0
        where   nr_lote_contabil        = nr_lote_contabil_p;

        update  titulo_pagar
        set     nr_lote_contabil_curto_prazo    = 0
        where   nr_lote_contabil_curto_prazo    = nr_lote_contabil_p;

        update  titulo_pagar_baixa a
        set     a.nr_lote_contabil      = 0
        where   a.nr_lote_contabil      = nr_lote_contabil_p;

        update  titulo_pagar_alt_valor
        set     nr_lote_contabil        = 0
        where   nr_lote_contabil        = nr_lote_contabil_p;

        update  titulo_pagar_adiant
        set     nr_lote_contabil        = 0
        where   nr_lote_contabil        = nr_lote_contabil_p;

        update  titulo_pagar
        set     nr_lote_transf_trib     = 0,
                ie_status_tributo       = 'NT'
        where   nr_lote_transf_trib     = nr_lote_contabil_p;

        update  adiant_pago_dev
        set     nr_lote_contabil        = 0
        where   nr_lote_contabil        = nr_lote_contabil_p;

        if (ie_cont_prov_adiant_pago_w = 'S') then
                update  adiantamento_pago a
                set     a.nr_lote_contabil      = 0
                where   nr_lote_contabil        = nr_lote_contabil_p;
        end if;

        update  titulo_pagar_imposto    a
        set     a.nr_lote_contabil      = 0
        where   a.nr_lote_contabil      = nr_lote_contabil_p;

        update  titulo_pagar_baixa_ops
        set     nr_lote_contabil        = 0
        where   nr_lote_contabil        = nr_lote_contabil_p;

        CALL wheb_usuario_pck.set_ie_lote_contabil('N');
else
        CALL wheb_usuario_pck.set_ie_lote_contabil('S');

        --obter_valor_dinamico('Truncate Table W_Movimento_Contabil', vl_retorno_w);
        delete  FROM w_movimento_contabil
        where   nr_lote_contabil        = nr_lote_contabil_p;

        commit;

        update  titulo_pagar_baixa a
        set     nr_lote_contabil                = nr_lote_contabil_p
        where   nr_lote_contabil                = 0
        and     trunc(dt_baixa,'month')         = trunc(dt_contabil_w, 'month')
        and     trunc(dt_baixa,'dd')            <= trunc(dt_contabil_w, 'dd')
        and     ie_tipo_conta_w                 in ('B','A')
        and     coalesce(nr_seq_lote_enc_contas::text, '') = '' /* Francisco - 30/10/2010 - Vai entrar em outro lote */
        and     coalesce(nr_seq_pls_lote_camara::text, '') = '' /* Francisco - 30/10/2010 - Vai entrar em outro lote */
        and     not exists (SELECT 1
                                from    titulo_pagar    x,
                                        ptu_fatura      y
                                where   x.nr_titulo             = y.nr_titulo
                                and     x.nr_titulo             = a.nr_titulo
                                and     x.ie_origem_titulo      = '16')
        and     not exists (select 1
                                from    titulo_pagar    x,
                                        ptu_fatura      y
                                where   x.nr_titulo             = y.nr_titulo_ndc
                                and     x.nr_titulo             = a.nr_titulo
                                and     x.ie_origem_titulo      = '16')
        and     not exists      (select 1
                                from    titulo_pagar    x
                                where   x.nr_titulo             = a.nr_titulo
                                and     x.ie_origem_titulo      = '19'
                                and     ((x.nr_seq_pls_lote_contest IS NOT NULL AND x.nr_seq_pls_lote_contest::text <> '') or (x.nr_seq_pls_lote_disc IS NOT NULL AND x.nr_seq_pls_lote_disc::text <> '')))
        and     not exists (select 1
                                from    pls_lote_camara_comp x
                                where   x.nr_tit_pagar_taxa     = a.nr_titulo
                                and     ie_processo_camara_w    = 'CA')
        and     exists (select 1
                        from    estabelecimento e,
                                titulo_pagar t
                        where   t.cd_estabelecimento    = e.cd_estabelecimento
                        and     t.nr_titulo             = a.nr_titulo
                        and     e.cd_empresa            = cd_empresa_w)
        and     exists  (select 1
                        from    titulo_pagar t
                        where   a.nr_titulo             = t.nr_titulo
                        and     ((ie_permite_estab_dif_w <> 'N') or (t.cd_estabelecimento       = cd_estabelecimento_w))
                        and (t.ie_situacao  <> 'C' or ie_contab_tit_cancelado_w = 'S')
                        and (t.ie_origem_titulo = ie_origem_tit_param_w or ie_origem_tit_param_w = 0))
        and     exists (select 1

                        where   coalesce(ds_classif_tit_w::text, '') = ''
                        
union all

                        SELECT 1
                        from    titulo_pagar t
                        where   t.nr_titulo     = a.nr_titulo
                        and     t.nr_seq_classe in (
                                        select somente_numero(nr_seq_classif_tit) nr_seq_classif_tit
                                        from (WITH RECURSIVE cte AS (
select regexp_substr(nr_classif_tit, '[^,]+', 1, 1) nr_seq_classif_tit
                                        from (select ds_classif_tit_w nr_classif_tit )  x(regexp_substr(nr_classif_tit, '[^,]+', 1, level) IS NOT NULL AND (regexp_substr(nr_classif_tit, '[^,]+', 1, level))::text <> '')  UNION ALL
select regexp_substr(nr_classif_tit, '[^,]+', 1, (c.level+1)) nr_seq_classif_tit
                                        from (select ds_classif_tit_w nr_classif_tit )  x
                                        (regexp_substr(nr_classif_tit, '[^,]+', 1, level) IS NOT NULL AND (regexp_substr(nr_classif_tit, '[^,]+', 1, level))::text <> '') JOIN cte c ON ()

) SELECT * FROM cte;
)));
        commit;

        /*      nao contabilizar no cp se o valor vai ser contabilizado no cb */

        if (ie_contab_cp_no_cb_w = 'S') then
                update  titulo_pagar_baixa a
                set     nr_lote_contabil        = 0
                where   nr_lote_contabil        = nr_lote_contabil_p
                and (ie_contab_bordero_cp_w = 'N' or (ie_contab_bordero_cp_w = 'S' and (nr_bordero IS NOT NULL AND nr_bordero::text <> ''))) /*OS233441 X OS273118*/
                and     ie_tipo_conta_w         in ('B','A')
                and     coalesce(nr_seq_lote_enc_contas::text, '') = '' /* Francisco - 30/10/2010 - Vai entrar em outro lote */
                and     coalesce(nr_seq_pls_lote_camara::text, '') = '' /* Francisco - 30/10/2010 - Vai entrar em outro lote */
                and     not exists (SELECT 1
                                        from    titulo_pagar    x,
                                                ptu_fatura      y
                                        where   x.nr_titulo             = y.nr_titulo
                                        and     x.nr_titulo             = a.nr_titulo
                                        and     x.ie_origem_titulo      = '16')
                and     not exists (select 1
                                        from    titulo_pagar    x,
                                                ptu_fatura      y
                                        where   x.nr_titulo             = y.nr_titulo_ndc
                                        and     x.nr_titulo             = a.nr_titulo
                                        and     x.ie_origem_titulo      = '16')
                and     not exists      (select 1
                                        from    titulo_pagar    x
                                        where   x.nr_titulo             = a.nr_titulo
                                        and     x.ie_origem_titulo      = '19'
                                        and     ((x.nr_seq_pls_lote_contest IS NOT NULL AND x.nr_seq_pls_lote_contest::text <> '') or (x.nr_seq_pls_lote_disc IS NOT NULL AND x.nr_seq_pls_lote_disc::text <> '')))
                and     (nr_seq_conta_banco IS NOT NULL AND nr_seq_conta_banco::text <> '') /*Gazimmermann - 03/10/2011 - Vai contabilizar no controle bancario*/
                and     exists (select 1
                                from    estabelecimento e,
                                        titulo_pagar t
                                where   t.cd_estabelecimento    = e.cd_estabelecimento
                                and     t.nr_titulo             = a.nr_titulo
                                and     e.cd_empresa            = cd_empresa_w)
                and (exists (select 1
                                from    movto_trans_financ b
                                where   a.nr_bordero    = b.nr_bordero
                                and     (nr_seq_saldo_banco IS NOT NULL AND nr_seq_saldo_banco::text <> '')) or
                        exists (select 1
                                from    movto_trans_financ c
                                where   c.nr_seq_titulo_pagar = a.nr_titulo
                                and     (nr_seq_saldo_banco IS NOT NULL AND nr_seq_saldo_banco::text <> '')) or
                        exists (select 1
                                from    movto_trans_financ z
                                where   z.nr_seq_banco_escrit   = a.nr_seq_escrit))
                and     exists (select 1
                                from    titulo_pagar x
                                where   x.nr_titulo     = a.nr_titulo
                                and (x.ie_origem_titulo = ie_origem_tit_param_w or ie_origem_tit_param_w = 0)) /* francisco - 20/03/2008 - inclui o or para buscar do titulo tbem*/
                and     exists (select 1

                                where   coalesce(ds_classif_tit_w::text, '') = ''
                                
union all

                                SELECT 1
                                from    titulo_pagar t
                                where   t.nr_titulo     = a.nr_titulo
                                and     t.nr_seq_classe in (
                                                select somente_numero(nr_seq_classif_tit) nr_seq_classif_tit
                                                from (WITH RECURSIVE cte AS (
select regexp_substr(nr_classif_tit, '[^,]+', 1, 1) nr_seq_classif_tit
                                                from (select ds_classif_tit_w nr_classif_tit )  x(regexp_substr(nr_classif_tit, '[^,]+', 1, level) IS NOT NULL AND (regexp_substr(nr_classif_tit, '[^,]+', 1, level))::text <> '')  UNION ALL
select regexp_substr(nr_classif_tit, '[^,]+', 1, (c.level+1)) nr_seq_classif_tit
                                                from (select ds_classif_tit_w nr_classif_tit )  x
                                                (regexp_substr(nr_classif_tit, '[^,]+', 1, level) IS NOT NULL AND (regexp_substr(nr_classif_tit, '[^,]+', 1, level))::text <> '') JOIN cte c ON ()

) SELECT * FROM cte;
)));
                commit;
        end if;

        /* francisco - os 53121 21/04/07 - nao contabilizar no cp se contabilizar na tesouraria */

        if (ie_contab_cp_tesouraria_w = 'S') then
                update  titulo_pagar_baixa a
                set     nr_lote_contabil        = 0
                where   nr_lote_contabil        = nr_lote_contabil_p
                and     ie_tipo_conta_w         in ('B','A')
                and     coalesce(nr_seq_lote_enc_contas::text, '') = '' /* Francisco - 30/10/2010 - Vai entrar em outro lote */
                and     coalesce(nr_seq_pls_lote_camara::text, '') = '' /* Francisco - 30/10/2010 - Vai entrar em outro lote */
                and     exists (SELECT 1
                                from    estabelecimento e,
                                        titulo_pagar t
                                where   t.cd_estabelecimento    = e.cd_estabelecimento
                                and     t.nr_titulo             = a.nr_titulo
                                and     e.cd_empresa            = cd_empresa_w)
                and     not exists (select 1
                                        from    titulo_pagar    x,
                                                ptu_fatura      y
                                        where   x.nr_titulo             = y.nr_titulo
                                        and     x.nr_titulo             = a.nr_titulo
                                        and     x.ie_origem_titulo      = '16')
                and     not exists (select 1
                                        from    titulo_pagar    x,
                                                ptu_fatura      y
                                        where   x.nr_titulo             = y.nr_titulo_ndc
                                        and     x.nr_titulo             = a.nr_titulo
                                        and     x.ie_origem_titulo      = '16')
                and     not exists      (select 1
                                        from    titulo_pagar    x
                                        where   x.nr_titulo             = a.nr_titulo
                                        and     x.ie_origem_titulo      = '19'
                                        and     ((x.nr_seq_pls_lote_contest IS NOT NULL AND x.nr_seq_pls_lote_contest::text <> '') or (x.nr_seq_pls_lote_disc IS NOT NULL AND x.nr_seq_pls_lote_disc::text <> '')))
                and     exists (select 1
                                from    movto_trans_financ x
                                where   x.nr_seq_titulo_pagar   = a.nr_titulo
                                and     (x.nr_seq_caixa IS NOT NULL AND x.nr_seq_caixa::text <> '')
                                and     x.nr_sequencia          = a.nr_seq_movto_trans_fin

union all

                                SELECT  1
                                from    movto_trans_financ x
                                where   x.nr_bordero            = a.nr_bordero
                                and     (x.nr_seq_caixa IS NOT NULL AND x.nr_seq_caixa::text <> '')
                                and     x.nr_sequencia          = a.nr_seq_movto_trans_fin)
                and     exists ( select  1
                                from    titulo_pagar x
                                where   x.nr_titulo     = a.nr_titulo
                                and (x.ie_origem_titulo = ie_origem_tit_param_w or ie_origem_tit_param_w = 0))
                and     exists (select 1
                                
                                where   coalesce(ds_classif_tit_w::text, '') = ''
                                
union all

                                select 1
                                from    titulo_pagar t
                                where   t.nr_titulo     = a.nr_titulo
                                and     t.nr_seq_classe in (
                                                select somente_numero(nr_seq_classif_tit) nr_seq_classif_tit
                                                from (WITH RECURSIVE cte AS (
select regexp_substr(nr_classif_tit, '[^,]+', 1, 1) nr_seq_classif_tit
                                                from (select ds_classif_tit_w nr_classif_tit )  x(regexp_substr(nr_classif_tit, '[^,]+', 1, level) IS NOT NULL AND (regexp_substr(nr_classif_tit, '[^,]+', 1, level))::text <> '')  UNION ALL
select regexp_substr(nr_classif_tit, '[^,]+', 1, (c.level+1)) nr_seq_classif_tit
                                                from (select ds_classif_tit_w nr_classif_tit )  x
                                                (regexp_substr(nr_classif_tit, '[^,]+', 1, level) IS NOT NULL AND (regexp_substr(nr_classif_tit, '[^,]+', 1, level))::text <> '') JOIN cte c ON ()

) SELECT * FROM cte;
)));
                commit;
        end if;

        if (ie_contab_prov_tributo_w = 'S') then
                if (philips_param_pck.get_cd_pais = 2) then
                        update  titulo_pagar_imposto a
                        set     a.nr_lote_contabil      = nr_lote_contabil_p
                        where   coalesce(a.nr_lote_contabil,0) = 0
                        and     trunc(coalesce(a.dt_contabil,dt_contabil_w),'month') = trunc(dt_contabil_w,'month')
                        and     trunc(coalesce(a.dt_contabil,dt_contabil_w),'dd') <= trunc(dt_contabil_w,'dd')
                        and     exists (SELECT 1
                                        from    tributo t
                                        where   t.cd_tributo            = a.cd_tributo
                                        and     t.ie_contab_prov_cp     = 'S')
                        and     exists  (select 1
                                        from    titulo_pagar_baixa y
                                        where   y.nr_titulo             = a.nr_titulo
                                        and     ((y.nr_sequencia                = a.nr_seq_baixa)
                                                or (philips_param_pck.get_cd_pais = 2) and (a.vl_imposto IS NOT NULL AND a.vl_imposto::text <> ''))
                                        and     y.nr_lote_contabil      = nr_lote_contabil_p);
                else
                        update  titulo_pagar_imposto a
                        set     a.nr_lote_contabil      = nr_lote_contabil_p
                        where   coalesce(a.nr_lote_contabil,0) = 0
                        and     trunc(coalesce(a.dt_contabil,dt_contabil_w),'month') = trunc(dt_contabil_w,'month')
                        and     trunc(coalesce(a.dt_contabil,dt_contabil_w),'dd') <= trunc(dt_contabil_w,'dd')
                        and     exists (SELECT 1
                                        from    tributo t
                                        where   t.cd_tributo            = a.cd_tributo
                                        and     t.ie_contab_prov_cp     = 'S')
                        and     exists (select 1
                                        from    titulo_pagar_baixa y
                                        where   y.nr_titulo             = a.nr_titulo
                                        and     y.nr_sequencia          = a.nr_seq_baixa
                                        and     y.nr_lote_contabil      = nr_lote_contabil_p);
                end if;
                commit;
        end if;

        update  titulo_pagar_alt_valor a
        set     nr_lote_contabil                = nr_lote_contabil_p
        where   coalesce(nr_lote_contabil,0)         = 0
        and     trunc(dt_alteracao,'month')     = trunc(dt_contabil_w, 'month')
        and     trunc(dt_alteracao,'dd')        <= trunc(dt_contabil_w, 'dd')
        and     ie_tipo_conta_w in ('B','A')
        and     exists (SELECT 1
                        from    estabelecimento e,
                                titulo_pagar    t
                        where   t.cd_estabelecimento    = e.cd_estabelecimento
                        and     t.nr_titulo             = a.nr_titulo
                        and     e.cd_empresa            = cd_empresa_w)
        and     exists  (select 1
                        from    titulo_pagar    t
                        where   a.nr_titulo             = t.nr_titulo
                        and     ((ie_permite_estab_dif_w <> 'N') or (t.cd_estabelecimento       = cd_estabelecimento_w))
                        and (t.ie_situacao  <> 'C' or ie_contab_tit_cancelado_w = 'S'));

        update  titulo_pagar_adiant a
        set     nr_lote_contabil                = nr_lote_contabil_p
        where   coalesce(nr_lote_contabil,0) = 0
        and     trunc(coalesce(dt_contabil, dt_atualizacao),'month')= trunc(dt_contabil_w, 'month')
        and     trunc(coalesce(dt_contabil, dt_atualizacao),'dd')    <= trunc(dt_contabil_w, 'dd')
        and     ie_tipo_conta_w         in ('B','A')
        and     exists (SELECT 1
                        from    estabelecimento         e,
                                titulo_pagar            t
                        where   t.cd_estabelecimento    = e.cd_estabelecimento
                        and     t.nr_titulo             = a.nr_titulo
                        and     e.cd_empresa            = cd_empresa_w)
        and     exists  (select 1
                        from    titulo_pagar    t
                        where   a.nr_titulo             = t.nr_titulo
                        and     ((ie_permite_estab_dif_w <> 'N') or (t.cd_estabelecimento       = cd_estabelecimento_w))
                        and (t.ie_situacao  <> 'C' or ie_contab_tit_cancelado_w = 'S'));
        commit;

        update  titulo_pagar a
        set     nr_lote_contabil                = nr_lote_contabil_p
        where   ((ie_origem_titulo              in (2,4,7,14,21,10,23,24,26))
        or      (ie_origem_titulo = 1 AND ie_contab_trib_nota_w = 'S'))
        and (a.ie_origem_titulo = ie_origem_tit_param_w or ie_origem_tit_param_w = 0)
        and     trunc(dt_contabil,'dd') between dt_contabil_inicial_w and dt_contabil_final_w
        and     coalesce(nr_lote_contabil,0)         = 0
        and     ie_gerar_contab_reg_tit_w       = 'S'
        and     ((a.cd_estabelecimento          = cd_estabelecimento_w)
        or (ie_estab_dif_provisao_w = 'S'))
        and     ie_tipo_conta_w                 in ('P','A')
        and     coalesce(nr_seq_lote_enc_contas::text, '') = '' /* Francisco - 30/10/2010 - Vai entrar em outro lote */
        and     coalesce(nr_seq_pls_lote_camara::text, '') = '' /* Francisco - 30/10/2010 - Vai entrar em outro lote */
        and     coalesce(a.nr_seq_pls_lote_contest::text, '') = ''
        and     coalesce(a.nr_seq_pls_lote_disc::text, '') = ''
        and     exists (SELECT 1
                        from    estabelecimento x
                        where   a.cd_estabelecimento    = x.cd_estabelecimento
                        and     x.cd_empresa            = cd_empresa_w)
        and     not exists (select 1
                                from    ptu_fatura      x
                                where   x.nr_titulo     = a.nr_titulo)
        and     not exists (select 1
                                from    ptu_fatura      y
                                where   a.nr_titulo             = y.nr_titulo_ndc)
        and     not exists (select 1
                                from    pls_lote_camara_comp    x
                                where   x.nr_tit_pagar_taxa     = a.nr_titulo)
        and     ((obter_se_classif_valor(a.nr_titulo, a.nr_seq_nota_fiscal, a.nr_repasse_terceiro, a.vl_titulo, a.cd_estabelecimento) = 'S')
        or      ((ie_contab_classif_w  = 'N') and not exists (select 1 from titulo_pagar_classif x where x.nr_titulo = a.nr_titulo)))
        and     exists (select 1

                        where   (a.nr_seq_trans_fin_contab IS NOT NULL AND a.nr_seq_trans_fin_contab::text <> '')
                        
union all

                        SELECT  1
                        from    titulo_pagar_classif b
                        where   a.nr_titulo     = b.nr_titulo
                        and     (b.nr_seq_trans_fin IS NOT NULL AND b.nr_seq_trans_fin::text <> ''))
        and     ((obter_se_tit_pagar_desdob(nr_titulo) = 'N')
        or (ie_contab_tit_desdob_w = 'S'))
        and (ie_situacao    <> 'C' or ie_contab_tit_cancelado_w = 'S')
        and     ((ie_contab_tit_adiant_w = 'S') or (a.ie_tipo_titulo not in ('5','14')))
        and     a.ie_tipo_titulo not in (21,26)
        and     ((ie_contab_provisorio_w = 'S') or (coalesce(a.ie_status,'D') = 'D')) /*Nao contabilizar provisao de titulos de NC*/
        and     exists (select 1
                        
                        where   coalesce(ds_classif_tit_w::text, '') = ''
                        
union all

                        select 1
                        from    titulo_pagar t
                        where   t.nr_titulo     = a.nr_titulo
                        and     t.nr_seq_classe in (
                                        select somente_numero(nr_seq_classif_tit) nr_seq_classif_tit
                                        from (WITH RECURSIVE cte AS (
select regexp_substr(nr_classif_tit, '[^,]+', 1, 1) nr_seq_classif_tit
                                        from (select ds_classif_tit_w nr_classif_tit )  x(regexp_substr(nr_classif_tit, '[^,]+', 1, level) IS NOT NULL AND (regexp_substr(nr_classif_tit, '[^,]+', 1, level))::text <> '')  UNION ALL
select regexp_substr(nr_classif_tit, '[^,]+', 1, (c.level+1)) nr_seq_classif_tit
                                        from (select ds_classif_tit_w nr_classif_tit )  x
                                        (regexp_substr(nr_classif_tit, '[^,]+', 1, level) IS NOT NULL AND (regexp_substr(nr_classif_tit, '[^,]+', 1, level))::text <> '') JOIN cte c ON ()

) SELECT * FROM cte;
)));
        commit;

        if (ie_contab_tit_contrato_w = 'N') then
                update  titulo_pagar
                set     nr_lote_contabil        = 0
                where   nr_lote_contabil        = nr_lote_contabil_p
                and     ie_origem_titulo        = 14;
                commit;
        end if;

        /*      transferir o imposto da conta do fornecedor para conta do tributo marcus 05/04/2006 */

        if (ie_contab_imposto_w = 'S') then
                update  titulo_pagar a
                set     nr_lote_transf_trib     = nr_lote_contabil_p
                where   nr_titulo in (
                                SELECT r.nr_titulo
                                from    titulo_pagar            r,
                                        tributo                 t,
                                        titulo_pagar_imposto    i,
                                        titulo_pagar_baixa      a
                                where   a.nr_lote_contabil      = CASE WHEN ie_contab_cp_no_cb_w='S' THEN a.nr_lote_contabil  ELSE nr_lote_contabil_p END
                                and     (t.nr_seq_trans_imp IS NOT NULL AND t.nr_seq_trans_imp::text <> '')
                                --and   to_number(substr(Obter_Titulo_Imposto(i.nr_sequencia),1,10)) > 0
                                and     a.nr_titulo                     = i.nr_titulo
                                and     i.cd_tributo                    = t.cd_tributo
                                and     r.nr_seq_tributo                = i.nr_sequencia
                                and     r.ie_status_tributo             = 'NT'
                                and     coalesce(r.nr_lote_transf_trib,0)    = 0)
                                and (ie_situacao <> 'C' or ie_contab_tit_cancelado_w = 'S')
                                and     ie_tipo_conta_w in ('P','A')
                                and (ie_origem_titulo = ie_origem_tit_param_w or ie_origem_tit_param_w = 0)
                                and     ((ie_contab_provisorio_w = 'S') or (coalesce(ie_status,'D') = 'D'))
                                and     exists (SELECT 1
                                        
                                        where   coalesce(ds_classif_tit_w::text, '') = ''
                                        
union all

                                        select 1
                                        from    titulo_pagar t
                                        where   t.nr_titulo     = a.nr_titulo
                                        and     t.nr_seq_classe in (
                                                        select somente_numero(nr_seq_classif_tit) nr_seq_classif_tit
                                                        from (WITH RECURSIVE cte AS (
select regexp_substr(nr_classif_tit, '[^,]+', 1, 1) nr_seq_classif_tit
                                                        from (select ds_classif_tit_w nr_classif_tit )  x(regexp_substr(nr_classif_tit, '[^,]+', 1, level) IS NOT NULL AND (regexp_substr(nr_classif_tit, '[^,]+', 1, level))::text <> '')  UNION ALL
select regexp_substr(nr_classif_tit, '[^,]+', 1, (c.level+1)) nr_seq_classif_tit
                                                        from (select ds_classif_tit_w nr_classif_tit )  x
                                                        (regexp_substr(nr_classif_tit, '[^,]+', 1, level) IS NOT NULL AND (regexp_substr(nr_classif_tit, '[^,]+', 1, level))::text <> '') JOIN cte c ON ()

) SELECT * FROM cte;
)));
                commit;
        elsif (ie_contab_imposto_w = 'D') then
                update  titulo_pagar
                set     nr_lote_transf_trib     = nr_lote_contabil_p
                where   nr_titulo in (
                                SELECT r.nr_titulo
                                from    titulo_pagar            r,
                                        tributo                 t,
                                        titulo_pagar_imposto    i,
                                        titulo_pagar_baixa      a
                                where   a.nr_lote_contabil      = CASE WHEN ie_contab_cp_no_cb_w='S' THEN a.nr_lote_contabil  ELSE nr_lote_contabil_p END
                                and     (t.nr_seq_trans_imp IS NOT NULL AND t.nr_seq_trans_imp::text <> '')
                                --and   to_number(substr(Obter_Titulo_Imposto(i.nr_sequencia),1,10)) > 0
                                and     a.nr_titulo                     = i.nr_titulo
                                and     i.cd_tributo                    = t.cd_tributo
                                and     r.nr_seq_tributo                = i.nr_sequencia
                                and     r.ie_status_tributo             = 'NT'
                                and     a.vl_imposto                    <> 0
                                and     trunc(dt_baixa,'month')         = trunc(dt_contabil_w, 'month')
                                and     trunc(dt_baixa,'dd')            <= trunc(dt_contabil_w, 'dd')
                                and     coalesce(r.nr_lote_transf_trib,0)    = 0)
                                and (ie_situacao    <> 'C' or ie_contab_tit_cancelado_w = 'S')
                                and     ie_tipo_conta_w         in ('P','A')
                                and (ie_origem_titulo = ie_origem_tit_param_w or ie_origem_tit_param_w = 0)
                                and     ((ie_contab_provisorio_w = 'S') or (coalesce(ie_status,'D') = 'D'))
                                and     exists (SELECT 1
                                        
                                        where   coalesce(ds_classif_tit_w::text, '') = ''
                                        
union all

                                        select 1
                                        from    titulo_pagar t
                                        where   t.nr_titulo     = nr_titulo
                                        and     t.nr_seq_classe in (
                                                        select somente_numero(nr_seq_classif_tit) nr_seq_classif_tit
                                                        from (WITH RECURSIVE cte AS (
select regexp_substr(nr_classif_tit, '[^,]+', 1, 1) nr_seq_classif_tit
                                                        from (select ds_classif_tit_w nr_classif_tit )  x(regexp_substr(nr_classif_tit, '[^,]+', 1, level) IS NOT NULL AND (regexp_substr(nr_classif_tit, '[^,]+', 1, level))::text <> '')  UNION ALL
select regexp_substr(nr_classif_tit, '[^,]+', 1, (c.level+1)) nr_seq_classif_tit
                                                        from (select ds_classif_tit_w nr_classif_tit )  x
                                                        (regexp_substr(nr_classif_tit, '[^,]+', 1, level) IS NOT NULL AND (regexp_substr(nr_classif_tit, '[^,]+', 1, level))::text <> '') JOIN cte c ON ()

) SELECT * FROM cte;
)));
                commit;
        end if;

        begin
        update  titulo_pagar_baixa a
        set     nr_seq_trans_fin        = (SELECT nr_seq_trans_fin_baixa
                                        from titulo_pagar       b
                                        where a.nr_titulo       = b.nr_titulo)
        where   nr_lote_contabil        = nr_lote_contabil_p
        and     ie_tipo_conta_w in ('B','A')
        and     coalesce(nr_seq_lote_enc_contas::text, '') = '' /* Francisco - 30/10/2010 - Vai entrar em outro lote */
        and     coalesce(nr_seq_pls_lote_camara::text, '') = '' /* Francisco - 30/10/2010 - Vai entrar em outro lote */
        and     not exists (select 1
                                from    titulo_pagar    x,
                                        ptu_fatura      y
                                where   x.nr_titulo             = y.nr_titulo
                                and     x.nr_titulo             = a.nr_titulo
                                and     x.ie_origem_titulo      = '16')
        and     not exists (select 1
                                from    titulo_pagar    x,
                                        ptu_fatura      y
                                where   x.nr_titulo             = y.nr_titulo_ndc
                                and     x.nr_titulo             = a.nr_titulo
                                and     x.ie_origem_titulo      = '16')
        and     not exists      (select 1
                                from    titulo_pagar    x
                                where   x.nr_titulo             = a.nr_titulo
                                and     x.ie_origem_titulo      = '19'
                                and     ((x.nr_seq_pls_lote_contest IS NOT NULL AND x.nr_seq_pls_lote_contest::text <> '')
                                or (x.nr_seq_pls_lote_disc IS NOT NULL AND x.nr_seq_pls_lote_disc::text <> '')))
        and     coalesce(a.nr_seq_trans_fin::text, '') = ''
        and     exists (select 1
                        from    estabelecimento e,
                                titulo_pagar    t
                        where   t.cd_estabelecimento    = e.cd_estabelecimento
                        and     t.nr_titulo             = a.nr_titulo
                        and     e.cd_empresa            = cd_empresa_w)
        and     exists (select 1
                        from    titulo_pagar x
                        where   x.nr_titulo     = a.nr_titulo
                        and (x.ie_origem_titulo = ie_origem_tit_param_w or ie_origem_tit_param_w = 0))
        and     exists (select 1

                        where   coalesce(ds_classif_tit_w::text, '') = ''
                        
union all

                        SELECT 1
                        from    titulo_pagar t
                        where   t.nr_titulo     = a.nr_titulo
                        and     t.nr_seq_classe in (
                                        select somente_numero(nr_seq_classif_tit) nr_seq_classif_tit
                                        from (WITH RECURSIVE cte AS (
select regexp_substr(nr_classif_tit, '[^,]+', 1, 1) nr_seq_classif_tit
                                        from (select ds_classif_tit_w nr_classif_tit )  x(regexp_substr(nr_classif_tit, '[^,]+', 1, level) IS NOT NULL AND (regexp_substr(nr_classif_tit, '[^,]+', 1, level))::text <> '')  UNION ALL
select regexp_substr(nr_classif_tit, '[^,]+', 1, (c.level+1)) nr_seq_classif_tit
                                        from (select ds_classif_tit_w nr_classif_tit )  x
                                        (regexp_substr(nr_classif_tit, '[^,]+', 1, level) IS NOT NULL AND (regexp_substr(nr_classif_tit, '[^,]+', 1, level))::text <> '') JOIN cte c ON ()

) SELECT * FROM cte;
)));
        commit;

        if (ie_cont_prov_adiant_pago_w = 'S') then
                update  adiantamento_pago a
                set     a.nr_lote_contabil      = nr_lote_contabil_p
                where   coalesce(a.nr_lote_contabil,0)       = 0
                and     a.dt_adiantamento between dt_contabil_inicial_w and dt_contabil_final_w
                and     (a.nr_seq_trans_fin IS NOT NULL AND a.nr_seq_trans_fin::text <> '');
                commit;
        end if;

        update  titulo_pagar_baixa a
        set     nr_seq_trans_fin        =       (SELECT nr_seq_trans_fin
                                                from tipo_baixa_cpa     b
                                                where a.cd_tipo_baixa   = b.cd_tipo_baixa)
        where   nr_lote_contabil        = nr_lote_contabil_p
        and     ie_tipo_conta_w         in ('B','A')
        and     coalesce(nr_seq_lote_enc_contas::text, '') = '' /* Francisco - 30/10/2010 - Vai entrar em outro lote */
        and     coalesce(nr_seq_pls_lote_camara::text, '') = '' /* Francisco - 30/10/2010 - Vai entrar em outro lote */
        and     not exists (select 1
                                from    titulo_pagar    x,
                                        ptu_fatura      y
                                where   x.nr_titulo             = y.nr_titulo
                                and     x.nr_titulo             = a.nr_titulo
                                and     x.ie_origem_titulo      = '16')
        and     not exists (select 1
                                from    titulo_pagar    x,
                                        ptu_fatura      y
                                where   x.nr_titulo             = y.nr_titulo_ndc
                                and     x.nr_titulo             = a.nr_titulo
                                and     x.ie_origem_titulo      = '16')
        and     not exists      (select 1
                                from    titulo_pagar    x
                                where   x.nr_titulo             = a.nr_titulo
                                and     x.ie_origem_titulo      = '19'
                                and     ((x.nr_seq_pls_lote_contest IS NOT NULL AND x.nr_seq_pls_lote_contest::text <> '') or (x.nr_seq_pls_lote_disc IS NOT NULL AND x.nr_seq_pls_lote_disc::text <> '')))
        and     coalesce(a.nr_seq_trans_fin::text, '') = ''
        and     exists (select 1
                        from    titulo_pagar x
                        where   x.nr_titulo     = a.nr_titulo
                        and (x.ie_origem_titulo = ie_origem_tit_param_w or ie_origem_tit_param_w = 0))
        and     exists (select 1

                        where   coalesce(ds_classif_tit_w::text, '') = ''
                        
union all

                        SELECT 1
                        from    titulo_pagar t
                        where   t.nr_titulo     = a.nr_titulo
                        and     t.nr_seq_classe in (
                                        select somente_numero(nr_seq_classif_tit) nr_seq_classif_tit
                                        from (WITH RECURSIVE cte AS (
select regexp_substr(nr_classif_tit, '[^,]+', 1, 1) nr_seq_classif_tit
                                        from (select ds_classif_tit_w nr_classif_tit )  x(regexp_substr(nr_classif_tit, '[^,]+', 1, level) IS NOT NULL AND (regexp_substr(nr_classif_tit, '[^,]+', 1, level))::text <> '')  UNION ALL
select regexp_substr(nr_classif_tit, '[^,]+', 1, (c.level+1)) nr_seq_classif_tit
                                        from (select ds_classif_tit_w nr_classif_tit )  x
                                        (regexp_substr(nr_classif_tit, '[^,]+', 1, level) IS NOT NULL AND (regexp_substr(nr_classif_tit, '[^,]+', 1, level))::text <> '') JOIN cte c ON ()

) SELECT * FROM cte;
)));
        exception
        when others then
                CALL wheb_mensagem_pck.exibir_mensagem_abort(187223);
        end;

        if (ie_contab_adiant_dev_cp_w = 'S') then
                update  adiant_pago_dev b
                set     nr_lote_contabil        = nr_lote_contabil_p
                where   coalesce(nr_lote_contabil,0) = 0
                and     (nr_seq_trans_fin IS NOT NULL AND nr_seq_trans_fin::text <> '')
                and     dt_devolucao between dt_contabil_inicial_w and dt_contabil_final_w
                and     exists  (SELECT 1
                                from    adiantamento_pago a,
                                        estabelecimento e
                                where   a.cd_estabelecimento    = e.cd_estabelecimento
                                and     a.nr_adiantamento       = b.nr_adiantamento
                                and     e.cd_empresa            = cd_empresa_w
                                and     ((ie_permite_estab_dif_w <> 'N') or (a.cd_estabelecimento = cd_estabelecimento_w)));
                commit;
        end if;

        if (ie_contab_curto_prazo_w = 'S') then
                update  titulo_pagar    t
                set     t.nr_lote_contabil_curto_prazo = nr_lote_contabil_p
                where   t.nr_lote_contabil      <> 0
                and     t.nr_lote_contabil      <> nr_lote_contabil_p
                and     coalesce(t.nr_lote_contabil_curto_prazo,0) = 0
                and     (t.nr_seq_tf_curto_prazo IS NOT NULL AND t.nr_seq_tf_curto_prazo::text <> '')
                and     dt_contabil_w > (SELECT l.dt_referencia from lote_contabil l where l.nr_lote_contabil = t.nr_lote_contabil)
                and     PKG_DATE_UTILS.ADD_MONTH(t.dt_vencimento_atual,-12,0) = dt_contabil_w
                and (t.ie_origem_titulo = ie_origem_tit_param_w or ie_origem_tit_param_w = 0)
                and     ((ie_contab_provisorio_w = 'S') or (coalesce(t.ie_status,'D') = 'D'))
                and     exists (select 1

                                where   coalesce(ds_classif_tit_w::text, '') = ''
                                
union all

                                SELECT 1
                                from    titulo_pagar tp
                                where   tp.nr_titulo     = t.nr_titulo
                                and     tp.nr_seq_classe in (
                                                select somente_numero(nr_seq_classif_tit) nr_seq_classif_tit
                                                from (WITH RECURSIVE cte AS (
select regexp_substr(nr_classif_tit, '[^,]+', 1, 1) nr_seq_classif_tit
                                                from (select ds_classif_tit_w nr_classif_tit )  x(regexp_substr(nr_classif_tit, '[^,]+', 1, level) IS NOT NULL AND (regexp_substr(nr_classif_tit, '[^,]+', 1, level))::text <> '')  UNION ALL
select regexp_substr(nr_classif_tit, '[^,]+', 1, (c.level+1)) nr_seq_classif_tit
                                                from (select ds_classif_tit_w nr_classif_tit )  x
                                                (regexp_substr(nr_classif_tit, '[^,]+', 1, level) IS NOT NULL AND (regexp_substr(nr_classif_tit, '[^,]+', 1, level))::text <> '') JOIN cte c ON ()

) SELECT * FROM cte;
)));
                commit;
        end if;

        if (ie_contab_tit_bloqueto_w = 'A') then
                qt_contador_w   := 0;
                open C04;
                loop
                fetch C04 into
                        nr_titulo_bloqueto_w;
                EXIT WHEN NOT FOUND; /* apply on C04 */
                        qt_contador_w   := qt_contador_w + 1;
                        update  titulo_pagar_baixa a
                        set     a.nr_lote_contabil      = 0
                        where   a.nr_titulo             = nr_titulo_bloqueto_w
                        and     a.nr_lote_contabil      <> 0
                        and     exists (SELECT 1
                                        from    titulo_pagar    x
                                        where   x.nr_titulo     = a.nr_titulo
                                        and (x.ie_origem_titulo = ie_origem_tit_param_w or ie_origem_tit_param_w = 0))
                        and     exists (select 1

                                        where   coalesce(ds_classif_tit_w::text, '') = ''
                                        
union all

                                        SELECT 1
                                        from    titulo_pagar t
                                        where   t.nr_titulo     = a.nr_titulo
                                        and     t.nr_seq_classe in (
                                                        select somente_numero(nr_seq_classif_tit) nr_seq_classif_tit
                                                        from (WITH RECURSIVE cte AS (
select regexp_substr(nr_classif_tit, '[^,]+', 1, 1) nr_seq_classif_tit
                                                        from (select ds_classif_tit_w nr_classif_tit )  x(regexp_substr(nr_classif_tit, '[^,]+', 1, level) IS NOT NULL AND (regexp_substr(nr_classif_tit, '[^,]+', 1, level))::text <> '')  UNION ALL
select regexp_substr(nr_classif_tit, '[^,]+', 1, (c.level+1)) nr_seq_classif_tit
                                                        from (select ds_classif_tit_w nr_classif_tit )  x
                                                        (regexp_substr(nr_classif_tit, '[^,]+', 1, level) IS NOT NULL AND (regexp_substr(nr_classif_tit, '[^,]+', 1, level))::text <> '') JOIN cte c ON ()

) SELECT * FROM cte;
)));

                        if (qt_contador_w >= 100) then
                                commit;
                                qt_contador_w := 0;
                        end if;
                end loop;
                close C04;

                nr_titulo_bloqueto_w    := null;
        end if;

        update  titulo_pagar_baixa_ops  a
        set     a.nr_lote_contabil              = nr_lote_contabil_p
        where   coalesce(a.nr_lote_contabil,0)       = 0
        and     exists (SELECT 1
                        from    titulo_pagar_baixa      x
                        where   x.nr_titulo             = a.nr_titulo
                        and     x.nr_sequencia          = a.nr_seq_baixa
                        and     x.nr_lote_contabil      = nr_lote_contabil_p);

        CALL wheb_usuario_pck.set_ie_lote_contabil('N');
        qt_contador_w := 0;
        nm_agrupador_w  := coalesce(trim(both obter_agrupador_contabil(7)),'NR_TITULO');

        open c010;
        loop
        fetch c010 into
                nr_titulo_w,
                vl_transacao_w,
                nr_seq_conta_banco_w,
                nr_seq_trans_fin_w,
                nm_atributo_w,
                nr_bordero_w,
                nr_seq_escrit_w,
                cd_centro_custo_w,
                cd_conta_contabil_w,
                dt_movimento_w,
                nr_adiantamento_w,
                vl_original_w,
                nr_seq_adiant_dev_w,
                nr_seq_baixa_w,
                nr_seq_nota_credito_w,
                nr_seq_movto_trans_fin_w,
                nr_seq_classe_w,
                cd_tipo_baixa_w,
                nm_tabela_w,
                cd_tributo_regra_w,
                nr_seq_proj_rec_w,
                nr_seq_tab_orig_w,
                nr_seq_tab_compl_w,
                nr_seq_info_ctb_w,
                ie_origem_titulo_w,
                ds_estorno_w;
        EXIT WHEN NOT FOUND; /* apply on c010 */
                if (ie_origem_titulo_w = 20) then
                        select  coalesce(max(b.nr_seq_lote),0)
                        into STRICT    nr_seq_lote_pagamento_w
                        from    pls_pag_prest_vencimento a,
                                pls_pagamento_prestador b
                        where   a.nr_seq_pag_prestador  = b.nr_sequencia
                        and     a.nr_titulo             = nr_titulo_w;
                end if;

                ds_pessoa_titulo_w              := '';
                nr_nfe_imp_w                    := '';
                cd_estab_titulo_w               := null;
                ie_contab_w                     := 'S';
                ds_hist_movto_trans_financ_w    := null;
                nr_titulo_doc_w                 := nr_titulo_w;
                ds_bordero_w                    := '';
                ds_nota_credito_w               := '';
                nm_pf_pj_tit_orig_w             := '';
                qt_contador_w                   := qt_contador_w + 1;
                ds_hist_movto_trans_financ_w    := '';

                if (ie_contab_classif_baixa_w <> 'T') and (nm_atributo_w <> 'VL_BAIXA') and (nm_atributo_w <> 'VL_TITULO') and (nm_atributo_w <> 'VL_TIT_LIQ_IMP') then
                        cd_conta_contabil_w     := null;
                        cd_centro_custo_w       := null;
                end if;

                if (coalesce(nr_seq_movto_trans_fin_w,0) <> 0) then
                        select  substr(max(ds_historico),1,200)
                        into STRICT    ds_hist_movto_trans_financ_w
                        from    movto_trans_financ
                        where   nr_sequencia    = nr_seq_movto_trans_fin_w;
                end if;

                select  max(ie_tipo_titulo)
                into STRICT    ie_tipo_titulo_w
                from    titulo_pagar
                where   nr_titulo       = nr_titulo_w;

                if (ie_contab_tit_adiant_w = 'N') and (nm_atributo_w  = 'VL_BAIXA') and (ie_contab_classif_baixa_w <> 'T') and (coalesce(cd_conta_contabil_w,'X') <> 'X') then
                        if (ie_tipo_titulo_w not in ('5','14','21','26')) then
                                cd_conta_contabil_w     := null;
                        end if;
                end if;

                if (nm_atributo_w = 'VL_ADIANT_TIT_PAGAR') then
                        nr_tit_orig_adiant_w    := (substr(obter_dados_adiant_pago(nr_adiantamento_w,'O'),1,10))::numeric;
                else
                        if (nm_atributo_w not in ('VL_ADIANT_DEV','VL_ADIANT_PAGO'))then
                                nr_adiantamento_w       := (substr(obter_dados_tit_pagar(nr_titulo_w,'AD'),1,10))::numeric;

                                if (coalesce(nr_adiantamento_w,0) <> 0) then
                                nr_tit_orig_adiant_w    := (substr(obter_dados_adiant_pago(nr_adiantamento_w,'O'),1,10))::numeric;
                                end if;
                        end if;
                end if;

                if (coalesce(nr_titulo_w,0) <> 0) then
                        nr_ret_convenio_w       := OBTER_DADOS_TIT_PAGAR(nr_titulo_w, 'RET');
                        nr_lote_recurso_w       := OBTER_DADOS_TIT_PAGAR(nr_titulo_w, 'LA');
                end if;

                if (coalesce(nr_titulo_w,0) <> 0) and (coalesce(nr_seq_baixa_w,0) <> 0) then
                        select  coalesce(max(ds_observacao),'')
                        into STRICT    ds_obs_baixa_titulo_w
                        from    titulo_pagar_baixa
                        where   nr_titulo       = nr_titulo_w
                        and     nr_sequencia    = nr_seq_baixa_w;
                end if;

                if (nm_atributo_w not in ('VL_ADIANT_DEV','VL_ADIANT_PAGO'))then
                        select  a.cd_pessoa_fisica,
                                a.cd_cgc,
                                coalesce(a.nr_documento,0),
                                coalesce(b.nm_pessoa_fisica, c.ds_razao_social),
                                ds_compl_contab,
                                a.dt_contabil,
                                coalesce(b.nm_pessoa_fisica, c.ds_razao_social),
                                a.nr_repasse_terceiro,
                                a.cd_tributo,
                                a.nr_seq_trans_fin_baixa,
                                coalesce(a.nr_seq_lote_res_pls,0),
                                c.nm_fantasia,
                                a.cd_estabelecimento,
                                substr(obter_nome_estabelecimento(a.cd_estabelecimento),1,80),
                                substr(replace(a.ds_observacao_titulo,'#@',''),1,255),
                                a.ie_situacao,
                                a.nr_bloqueto,
                                a.nr_seq_rpa,
                                substr(obter_dados_nota_fiscal(a.nr_seq_nota_fiscal,0),1,255),
                                substr(obter_tributo_titulo_pagar(a.nr_seq_tributo,0),1,40),
                                substr(CASE WHEN coalesce(obter_dados_operacao_nota(a.nr_seq_nota_fiscal,8),'N')='N' THEN 'NF'  ELSE 'NFE' END ,1,3) ie_nf_nfe,
                                a.nr_seq_nota_fiscal
                        into STRICT    cd_pessoa_fisica_w,
                                cd_cgc_w,
                                nr_documento_w,
                                ds_benefic_w,
                                ds_compl_contab_w,
                                dt_contabil_titulo_w,
                                ds_pessoa_titulo_w,
                                nr_repasse_terceiro_w,
                                cd_tributo_w,
                                nr_seq_trans_fin_baixa_w,
                                nr_seq_lote_res_pls_w,
                                nm_fantasia_pj_w,
                                cd_estab_titulo_w,
                                ds_estab_titulo_w,
                                ds_observacao_titulo_w,
                                ie_situacao_w,
                                nr_bloqueto_w,
                                nr_seq_rpa_w,
                                nr_nota_fiscal_w,
                                ds_tributo_w,
                                ie_nf_nfe_w,
                                nr_seq_nota_fiscal_w
                        FROM titulo_pagar a
LEFT OUTER JOIN pessoa_fisica b ON (a.cd_pessoa_fisica = b.cd_pessoa_fisica)
LEFT OUTER JOIN pessoa_juridica c ON (a.cd_cgc = c.cd_cgc)
WHERE nr_titulo               = nr_titulo_w;
                elsif (nm_atributo_w = 'VL_ADIANT_DEV') then
                        select  a.cd_pessoa_fisica,
                                a.cd_cgc,
                                a.ds_observacao,
                                b.ds_motivo_dev
                        into STRICT    cd_pessoa_fisica_w,
                                cd_cgc_w,
                                ds_obs_adiant_pago_w,
                                ds_motivo_dev_w
                        from    adiantamento_pago       a,
                                adiant_pago_dev         b
                        where   a.nr_adiantamento       = b.nr_adiantamento
                        and     a.nr_adiantamento       = nr_adiantamento_w
                        and     b.nr_sequencia          = nr_seq_adiant_dev_w;

                        if (cd_cgc_w IS NOT NULL AND cd_cgc_w::text <> '') then
                                nm_fantasia_pj_w := substr(obter_dados_pf_pj(null,cd_cgc_w,'F'),1,80);
                        end if;

                elsif (nm_atributo_w = 'VL_ADIANT_PAGO') and (coalesce(nr_adiantamento_w,0) <> 0) then
                        select  a.cd_pessoa_fisica,
                                a.cd_cgc,
                                a.ds_observacao
                        into STRICT    cd_pessoa_fisica_w,
                                cd_cgc_w,
                                ds_obs_adiant_pago_w
                        from    adiantamento_pago       a
                        where   a.nr_adiantamento       = nr_adiantamento_w;
                end if;

                if (coalesce(cd_tributo_regra_w,0) = 0) then
                        cd_tributo_regra_w := cd_tributo_w;
                end if;

                cd_estab_titulo_ww      := cd_estab_titulo_w;

                if (ie_situacao_w = 'D') and (nm_atributo_W = 'VL_TITULO') and (coalesce(vl_transacao_w,0) = 0) and (ie_contab_vl_original_w = 'S') then
                        vl_transacao_w  := coalesce(vl_original_w,vl_transacao_w);
                end if;

                if (nr_seq_nota_fiscal_w IS NOT NULL AND nr_seq_nota_fiscal_w::text <> '') then
                        select  nr_nfe_imp
                        into STRICT    nr_nfe_imp_w
                        from    nota_fiscal
                        where   nr_sequencia = nr_seq_nota_fiscal_w;
                end if;

                if (nr_nota_fiscal_w IS NOT NULL AND nr_nota_fiscal_w::text <> '') then
                        select  max(cd_natureza_operacao),
                                max(cd_operacao_nf)
                        into STRICT    cd_natureza_operacao_w,
                                cd_operacao_nf_w
                        from    nota_fiscal
                        where   nr_sequencia    = nr_nota_fiscal_w;
                end if;

                if (nm_atributo_w = 'VL_TITULO') then
                        vl_total_tributo_w      := 0;

                        open C02;
                        loop
                        fetch C02 into
                                vl_tributo_w,
                                cd_tributo_ww,
                                vl_base_calculo_w;
                        EXIT WHEN NOT FOUND; /* apply on C02 */
                                select  count(*)
                                into STRICT    qt_pago_outros_w
                                from    titulo_pagar_imposto
                                where   nr_titulo       = nr_titulo_w
                                and     cd_tributo      = cd_tributo_ww
                                and     ie_pago_prev    = 'P';
                                        SELECT * FROM obter_dados_trib_tit_pagar(
                                                cd_tributo_ww, cd_estabelecimento_w, cd_cgc_w, cd_pessoa_fisica_w, cd_benef_regra_w, ds_irrelevante_w, ds_irrelevante_w, cd_conta_financ_regra_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w_2, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, clock_timestamp(), ds_irrelevante_w_2, ds_irrelevante_w_2, 'N', cd_natureza_operacao_w, null, null, null, null, nr_seq_regra_w, cd_operacao_nf_w, qt_pago_outros_w, ds_irrelevante_w, ds_irrelevante_w, vl_base_calculo_w, 'N', nr_seq_classe_w, ie_origem_titulo_w, null, null) INTO STRICT cd_benef_regra_w, ds_irrelevante_w, ds_irrelevante_w, cd_conta_financ_regra_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w_2, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w_2, ds_irrelevante_w_2, nr_seq_regra_w, ds_irrelevante_w, ds_irrelevante_w;

                                                begin
                                                select  coalesce(max(ie_contab_valor_trib),'N')
                                                into STRICT    ie_contab_valor_trib_w
                                                from    tributo_conta_pagar
                                                where   nr_sequencia    = nr_seq_regra_w;
                                                exception when others then
                                                        ie_contab_valor_trib_w  := 'N';
                                                end;

                                                if (ie_contab_valor_trib_w = 'S') then
                                                        vl_total_tributo_w      := vl_total_tributo_w + vl_tributo_w;
                                                end if;
                        end loop;
                        close C02;

                        if (vl_total_tributo_w <> 0) then
                                vl_transacao_w  := vl_transacao_w + vl_total_tributo_w;
                        end if;
                end if;

                dt_mesano_contab_w      := to_char(dt_contabil_titulo_w, 'mm/yyyy');
                nr_documento_tit_w      := somente_numero(substr(nr_documento_w,1,20));

                if (ie_contab_trans_fin_baixa_w = 'S') and (coalesce(nr_seq_escrit_w,0) <> 0) then
                        nr_seq_trans_fin_w      := coalesce(nr_seq_trans_fin_baixa_w,nr_seq_trans_fin_w);
                end if;

                ds_mes_competencia_w    := '';

                if (nr_seq_lote_res_pls_w <> 0) then
                        select  to_char(dt_mes_competencia,'dd/mm/yyyy')
                        into STRICT    ds_mes_competencia_w
                        from    pls_lote_protocolo
                        where   nr_sequencia    = nr_seq_lote_res_pls_w;
                end if;

                if (nr_repasse_terceiro_w IS NOT NULL AND nr_repasse_terceiro_w::text <> '') then
                        select  max(a.nr_seq_terceiro),
                                to_char(max(a.dt_mesano_referencia),'dd/mm/yyyy')
                        into STRICT    nr_seq_terceiro_w,
                                ds_mesano_ref_repasse_w
                        from    repasse_terceiro a
                        where   nr_repasse_terceiro     = nr_repasse_terceiro_w;

                        select  max(obter_nome_pf_pj(cd_pessoa_fisica,cd_cgc))
                        into STRICT    nm_terceiro_w
                        from    terceiro
                        where   nr_sequencia    = nr_seq_terceiro_w;
                end if;

                if (ie_desc_bord_compl_ctb_w = 'S') and (coalesce(nr_bordero_w,0) <> 0) then
                        select  max(ds_bordero)
                        into STRICT    ds_bordero_w
                        from    bordero_pagamento
                        where   nr_bordero      = nr_bordero_w;
                end if;

                ds_benef_origem_w               := '';

                if (ie_benef_orig_trib_contab_w = 'S') and (nr_titulo_w <> 0) then
                        ds_benef_origem_w       := obter_benef_orig_trib(nr_titulo_w);
                end if;

                if (ds_benef_origem_w IS NOT NULL AND ds_benef_origem_w::text <> '') then
                        ds_benefic_w            := ds_benef_origem_w;
                end if;

                if (nm_atributo_w not in ('VL_ADIANT_DEV','VL_ADIANT_PAGO')) then
                        select  coalesce(nr_parcelas,0),
                                coalesce(nr_total_parcelas,0)
                        into STRICT    nr_parcelas_w,
                                nr_total_parcelas_w
                        from    titulo_pagar
                        where   nr_titulo       = nr_titulo_w;

                        if (ie_tit_contab_baixa_w = 'S') then
                                if (nr_parcelas_w <> 0) then
                                        ds_titulo_w     := ' (' || nr_titulo_w || ' Parc. ' || nr_parcelas_w || ')';
                                else
                                        ds_titulo_w     := ' (' || nr_titulo_w || ')';
                                end if;
                        else
                                ds_titulo_w     := '';
                        end if;
                end if;

                if (ds_compl_contab_w IS NOT NULL AND ds_compl_contab_w::text <> '') then
                        nr_documento_w  := ds_compl_contab_w;
                elsif (ie_benef_baixa_contab_w = 'N') and (nm_atributo_w = 'VL_BAIXA') then
                        nr_documento_w  := nr_documento_w || ds_titulo_w;
                else
                        nr_documento_w  := nr_documento_w || ds_titulo_w || ' ' || substr(ds_benefic_w,1,255);
                end if;
                /*nr_seq_agrupamento_w  := nr_titulo_w; retirado por fabio em 06/02 - adicionei a rotina abaixo para fazer o mesmo agrupamento*/

                begin
                select  substr(obter_cheque_tit_pagar(nr_titulo_w),1,250),
                                position(',' in substr(obter_cheque_tit_pagar(nr_titulo_w),1,250))
                into STRICT    nr_cheque_w,
                        qt_cheque_w
;
                exception
                when others then
                        nr_cheque_w := null;
                        qt_cheque_w:= null;
                end;

                if (nm_agrupador_w = 'NR_TITULO')then
                        nr_seq_agrupamento_w := nr_titulo_w;
                elsif (nm_agrupador_w = 'NR_SEQ_ESCRIT')then
                        nr_seq_agrupamento_w    := nr_seq_escrit_w;
                elsif (nm_agrupador_w = 'NR_BORDERO')then
                        nr_seq_agrupamento_w    := nr_bordero_w;
                elsif (nm_agrupador_w = 'NR_ADIANTAMENTO')then
                        nr_seq_agrupamento_w    := nr_adiantamento_w;
                elsif (nm_agrupador_w = 'NR_BORDERO_ESCRIT')then
                        nr_seq_agrupamento_w    := coalesce(nr_bordero_w,nr_seq_escrit_w);
                elsif (nm_agrupador_w = 'NR_SEQ_LOTE_PAGAMENTO') then
                        nr_seq_agrupamento_w    := coalesce(nr_seq_lote_pagamento_w,0);
                elsif (nm_agrupador_w = 'NR_CHEQUE_BORDERO_TITULO') then
                        nr_seq_agrupamento_w    := coalesce(nr_bordero_w,nr_titulo_w);
                        if (coalesce(qt_cheque_w, 0) = 0) and (coalesce(nr_cheque_w, '0') <> '0') then
                                nr_seq_agrupamento_w    := somente_numero(nr_cheque_w);
                        end if;
                elsif (nm_agrupador_w = 'NR_CHEQUE_BORDERO_TITULO_ESCRIT') then
                        nr_seq_agrupamento_w    := coalesce(nr_bordero_w,nr_seq_escrit_w,nr_titulo_w);
                        if (coalesce(qt_cheque_w, 0) = 0) and (coalesce(nr_cheque_w, '0') <> '0') then
                                nr_seq_agrupamento_w    := somente_numero(nr_cheque_w);
                        end if;
                end if;

                if (coalesce(nr_seq_agrupamento_w,0) = 0)    then
                        select  coalesce(CASE WHEN nr_titulo_w=0 THEN  null  ELSE nr_titulo_w END ,nr_adiantamento_w)
                        into STRICT    nr_seq_agrupamento_w
;
                end if;

                if (nm_atributo_w = 'VL_PAGO') then

                        if (coalesce(nr_bordero_w,0) <> 0) then
                                select  max(CASE WHEN ie_contab_doc_pagto_w='N' THEN ' '  ELSE coalesce(nr_cheque, to_char(nr_bordero)) END ),
                                        max(coalesce(nr_seq_conta_banco_w, nr_seq_conta_banco))
                                into STRICT    nr_doc_vl_pago_w,
                                        nr_seq_conta_banco_w
                                from    bordero_pagamento
                                where   nr_bordero      = nr_bordero_w;
                        elsif (coalesce(nr_seq_escrit_w,0) <> 0) then
                                select  max(nr_seq_escrit_w),
                                        max(coalesce(nr_seq_conta_banco_w, nr_seq_conta_banco))
                                into STRICT    nr_doc_vl_pago_w,
                                        nr_seq_conta_banco_w
                                from    banco_escritural
                                where   nr_sequencia    = nr_seq_escrit_w;
                        end if;

                        if (ie_hist_fornec_banco_w = 'S') then
                                /*anderson 05/07/06 os 36645 - inclui o nr_documento_tit_w e o if*/

                                if (nr_documento_tit_w <> 0) then
                                        nr_documento_w  := nr_documento_tit_w || ' ' || nr_doc_vl_pago_w || ' ' || ds_titulo_w || ' ' || substr(ds_benefic_w,1,255);
                                else
                                        nr_documento_w  := nr_doc_vl_pago_w || ' ' || ds_titulo_w || ' ' || substr(ds_benefic_w,1,255);
                                end if;
                        else
                                nr_documento_w  := coalesce(nr_doc_vl_pago_w, nr_documento_w);
                        end if;
                end if;

                if (ds_bordero_w IS NOT NULL AND ds_bordero_w::text <> '') then
                        nr_documento_w  := nr_documento_w || ' ' || ds_bordero_w;
                end if;

                if (ie_contab_analitico_w = 'N') then
                        nr_documento_w          := to_char(dt_contabil_w,'dd/mm/yyyy');
                        nr_titulo_doc_w         := null;
                elsif (ie_contab_analitico_w = 'T') then
                        nr_documento_w          := nr_titulo_w;
                        nr_titulo_doc_w         := nr_titulo_w;
                end if;

                nr_documento_w  := substr(nr_documento_w,1,255);
                ds_conteudo_w           := '';
                nr_bloqueto_w           := coalesce(nr_bloqueto_w,'X');

                if (ie_tipo_titulo_w = '21') then
                        ds_nota_credito_w       := substr(obter_nota_credito_tit_pag(nr_titulo_w),1,200);
                end if;

                /* Contabilizacao Analitica dos Titulos unificados de Bloqueto OS 170238*/



                /*if    (nm_atributo_w not in ('VL_ADIANT_DEV','VL_ADIANT_PAGO'))then
                        nr_titulo_w     := null;
                end if;*/
                dt_movimento_w  := coalesce(dt_movimento_w, dt_contabil_w);

                if (ie_dt_movto_contab_cp_w = 'L') then
                        dt_movimento_w  := dt_contabil_w;
                end if;

        if (coalesce(cd_cgc_w, '0') <> '0') then
                    ie_intercompany_w := holding_pck.get_se_intercompany_cnpj(
                        cd_estabelecimento_p => cd_estabelecimento_w,
                        cd_cgc_emitente_p => cd_cgc_w);
                end if;

                cd_estab_intercompany_ori_w := null;
                ds_estab_intercompany_ori_w := null;
                cd_estab_intercompany_des_w := null;
                ds_estab_intercompany_des_w := null;
                cd_interno_intercompany_ori_w := null;
                cd_interno_intercompany_des_w := null;

                if (ie_intercompany_w = 'S') then                    
                    cd_estab_intercompany_ori_w := cd_estab_titulo_w;
                    ds_estab_intercompany_ori_w := ds_estab_titulo_w;
                    cd_estab_intercompany_des_w := cd_estabelecimento_w;
                    ds_estab_intercompany_des_w := substr(obter_nome_estabelecimento(cd_estabelecimento_w),1,80);

                    begin
                        select cd_interno
                        into STRICT cd_interno_intercompany_ori_w
                        from estabelecimento
                        where cd_estabelecimento = cd_estab_intercompany_ori_w
                        and cd_empresa = obter_empresa_estab(cd_estab_intercompany_ori_w);
                    exception
                        when no_data_found then
				cd_interno_intercompany_ori_w := null;
			when too_many_rows then
				cd_interno_intercompany_ori_w := null;
			when others then
				cd_interno_intercompany_ori_w := null;
                    end;

                    begin
                        select cd_interno
                        into STRICT cd_interno_intercompany_des_w
                        from estabelecimento
                        where cd_estabelecimento = cd_estab_intercompany_des_w
                        and cd_empresa = obter_empresa_estab(cd_estab_intercompany_des_w);
                    exception
                        when no_data_found then
                            cd_interno_intercompany_des_w := null;
			when too_many_rows then
				cd_interno_intercompany_des_w := null;
			when others then
				cd_interno_intercompany_des_w := null;
                    end;
                end if;

                begin
                    select a.nr_sequencia,
                        a.nr_nota_fiscal,
                        a.cd_serie_nf,
                        a.nr_nfe_imp
                    into STRICT nr_seq_nota_orig_w,
                        nr_nota_orig_w,
                        cd_serie_nf_orig_w,
                        nr_nfe_imp_orig_w
                    from nota_fiscal  a,
                        titulo_pagar b,
                        nf_credito c
                    where a.nr_sequencia = c.nr_seq_nf_orig
                    and c.nr_seq_nf_gerada = b.nr_seq_nota_fiscal
                    and b.nr_seq_nota_fiscal = nr_seq_nota_fiscal_w;
                exception
                    when no_data_found then
                        nr_seq_nota_orig_w := null;
                        nr_nfe_imp_orig_w := null;
                        cd_serie_nf_orig_w := null;
                        nr_nota_orig_w := null;
                    when too_many_rows then 
                        nr_seq_nota_orig_w := null;
                        nr_nfe_imp_orig_w := null;
                        cd_serie_nf_orig_w := null;
                        nr_nota_orig_w := null;
                end;

                if (ie_contab_tit_bloqueto_w = 'A') and (nr_bloqueto_w <> 'X') and (nr_seq_trans_fin_w IS NOT NULL AND nr_seq_trans_fin_w::text <> '') then
                        vl_total_transacao_w    := 0;

                        open C03;
                        loop
                        fetch C03 into
                                nr_titulo_bloqueto_w,
                                vl_transacao_ww,
                                vl_out_desp_bordero_w;
                        EXIT WHEN NOT FOUND; /* apply on C03 */

                                if (vl_transacao_w < 0) then
                                        vl_transacao_ww := vl_transacao_ww * -1;
                                end if;


                                ie_contab_w             := 'N';
                                vl_total_transacao_w    := vl_total_transacao_w + abs(vl_transacao_ww);

                                if (ie_contab_analitico_w = 'S') then
                                        nr_titulo_doc_ww        := nr_titulo_bloqueto_w;
                                end if;

                                select  substr(obter_dados_nota_fiscal(a.nr_seq_nota_fiscal,0),1,255),
                                        a.nr_documento
                                into STRICT    nr_nota_fiscal_ww,
                                        nr_documento_tit_ww
                                from    titulo_pagar a
                                where   a.nr_titulo     = nr_titulo_bloqueto_w;

                                update  titulo_pagar_baixa a
                                set     a.nr_lote_contabil      = nr_lote_contabil_p
                                where   a.nr_titulo             = nr_titulo_bloqueto_w
                                and     exists ( SELECT  1
                                                from    titulo_pagar x
                                                where   x.nr_titulo     = a.nr_titulo
                                                and (x.ie_origem_titulo = ie_origem_tit_param_w or ie_origem_tit_param_w = 0))
                                and     exists (select 1

                                                where   coalesce(ds_classif_tit_w::text, '') = ''
                                                
union all

                                                SELECT 1
                                                from    titulo_pagar t
                                                where   t.nr_titulo     = a.nr_titulo
                                                and     t.nr_seq_classe in (select somente_numero(nr_seq_classif_tit) nr_seq_classif_tit
                                                                                from (WITH RECURSIVE cte AS (

                                                                                                select regexp_substr(nr_classif_tit, '[^,]+', 1, 1) nr_seq_classif_tit
                                                                                                from (
                                                                                                        select ds_classif_tit_w nr_classif_tit
                                                                                                        
                                                                                                )  x(regexp_substr(nr_classif_tit, '[^,]+', 1, level) IS NOT NULL AND (regexp_substr(nr_classif_tit, '[^,]+', 1, level))::text <> '')

                                                                                          UNION ALL

                                                                                                select regexp_substr(nr_classif_tit, '[^,]+', 1, (c.level+1)) nr_seq_classif_tit
                                                                                                from (
                                                                                                        select ds_classif_tit_w nr_classif_tit
                                                                                                        
                                                                                                )  x
                                                                                                (regexp_substr(nr_classif_tit, '[^,]+', 1, level) IS NOT NULL AND (regexp_substr(nr_classif_tit, '[^,]+', 1, level))::text <> '')

                                                                                         JOIN cte c ON ()

) SELECT * FROM cte;
)
                                                                                ));

                                ds_conteudo_w   := substr(      nr_titulo_bloqueto_w            || '#@' ||
                                                                nr_bordero_w                    || '#@' ||
                                                                nr_seq_escrit_w                 || '#@' ||
                                                                nr_cheque_w                     || '#@' ||
                                                                nr_documento_tit_ww             || '#@' ||
                                                                cd_pessoa_fisica_w              || '#@' ||
                                                                cd_cgc_w                        || '#@' ||
                                                                ds_pessoa_titulo_w              || '#@' ||
                                                                ds_compl_contab_w               || '#@' ||
                                                                ds_bordero_w                    || '#@' ||
                                                                ds_benef_origem_w               || '#@' ||
                                                                nr_parcelas_w                   || '#@' ||
                                                                dt_contabil_w                   || '#@' ||
                                                                dt_mesano_contab_w              || '#@' ||
                                                                nr_titulo_w                     || '#@' ||
                                                                nr_total_parcelas_w             || '#@' ||
                                                                nm_terceiro_w                   || '#@' ||
                                                                ds_mesano_ref_repasse_w         || '#@' ||
                                                                nr_adiantamento_w               || '#@' ||
                                                                nr_tit_orig_adiant_w            || '#@' ||
                                                                ds_mes_competencia_w            || '#@' ||
                                                                ds_banco_w                      || '#@' ||
                                                                nm_fantasia_pj_w                || '#@' ||
                                                                cd_estab_titulo_w               || '#@' ||
                                                                ds_estab_titulo_w               || '#@' ||
                                                                null                            || '#@' ||
                                                                nr_seq_rpa_w                    || '#@' ||
                                                                nr_nota_fiscal_ww               || '#@' ||
                                                                ds_obs_adiant_pago_w            || '#@' ||
                                                                ds_obs_baixa_titulo_w           || '#@' ||
                                                                ds_motivo_dev_w                 || '#@' ||
                                                                nr_ret_convenio_w               || '#@' ||
                                                                nr_lote_recurso_w               || '#@' ||
                                                                ds_nota_credito_w               || '#@' ||
                                                                nr_seq_nota_credito_w           || '#@' ||
                                                                ds_hist_movto_trans_financ_w    || '#@' ||
                                                                ds_tributo_w                    || '#@' ||
                                                                vl_outras_despesas_w            || '#@' ||
                                                                nm_pf_pj_tit_orig_w             || '#@' ||
                                                                null                            || '#@' ||
                                                                ie_nf_nfe_w                     || '#@' ||
                                                                vl_out_desp_bordero_w           || '#@' ||
                                                                ds_estorno_w                    || '#@' ||
                                                                cd_estab_intercompany_ori_w     || '#@' ||
                                                                ds_estab_intercompany_ori_w     || '#@' ||
                                                                cd_estab_intercompany_des_w     || '#@' ||
                                                                ds_estab_intercompany_des_w     || '#@' ||
                                                                cd_interno_intercompany_ori_w   || '#@' ||
                                                                cd_interno_intercompany_des_w   || '#@' ||
                                                                nr_seq_nota_orig_w              || '#@' ||
                                                                nr_nota_orig_w                  || '#@' ||
                                                                cd_serie_nf_orig_w              || '#@' ||
                                                                nr_nfe_imp_orig_w,1,4000);
                                if (ie_permite_estab_dif_w <> 'PCCT') then
                                        cd_estab_titulo_ww      := null;
                                end if;

                                if      ((nm_atributo_w = 'VL_ADIANT_TIT_PAGAR') and (coalesce(cd_conta_contabil_w,'0') = '0') and (coalesce(nr_titulo_w,0) <> 0) and (ie_conta_contab_tit_adiant_w = 'S')) then --21/11/2012
                                        select  b.cd_conta_contabil,
                                                b.cd_centro_custo
                                        into STRICT    cd_conta_contabil_w,
                                                cd_centro_custo_w
                                        from    titulo_pagar_classif b,
                                                titulo_pagar a
                                        where   a.nr_lote_contabil      = nr_lote_contabil_p
                                        and     b.nr_titulo             = nr_titulo_w
                                        and     a.nr_titulo             = b.nr_titulo;
                                end if;

                                ie_origem_documento_w   := null;
                                nr_documento_ww         := null;
                                ds_atributos_w  := null;
                                ds_atributos_w  :=      'NR_NOTA_FISCAL=' || nr_nota_fiscal_ww || ';' ||
                                                        'NR_TITULO_PAGAR=' || nr_titulo_w || ';' ||
                                                        'NR_SEQ_NOTA_FISCAL=' || nr_seq_nota_fiscal_w || ';' ||
                                                        'NR_NFE_IMP=' || nr_nfe_imp_w;
                                ctb_obter_doc_movto(    cd_tipo_lote_contabil_w,
                                                        nm_atributo_w,
                                                        'VR',
                                                        dt_movimento_w,
                                                        null,
                                                        null,
                                                        ds_atributos_w,
                                                        nm_usuario_p,
                                                        ie_regra_w,
                                                        nr_documento_ww,
                                                        ie_origem_documento_w);

                                nr_seq_w_movimento_p    =>  nr_sequencia_w := gerar_contab_trans_financ(cd_estabelecimento_p   =>  cd_estabelecimento_w, cd_estab_movto_p        =>  cd_estab_titulo_ww, nr_lote_contabil_p      =>  nr_lote_contabil_p, nm_usuario_p            =>  nm_usuario_p, cd_conta_contabil_p     =>  cd_conta_contabil_w, cd_centro_custo_p       =>  cd_centro_custo_w, ds_documento_p          =>  nr_documento_w, nr_seq_agrupamento_p    =>  nr_seq_agrupamento_w, dt_transacao_p          =>  dt_movimento_w, vl_transacao_p          =>  vl_transacao_w, nr_seq_trans_fin_p      =>  nr_seq_trans_fin_w, nr_seq_conta_banco_p    =>  nr_seq_conta_banco_w, nm_atributo_p           =>  nm_atributo_w, cd_pessoa_fisica_p      =>  cd_pessoa_fisica_w, cd_cgc_p                =>  cd_cgc_w, cd_setor_p              =>  0, cd_convenio_p           =>  cd_convenio_w, nr_documento_p          =>  nr_documento_ww, cd_historico_p          =>  null, ds_atrib_compl_hist_p   =>  ds_conteudo_w, nr_seq_caixa_p          =>  null, nr_seq_produto_p        =>  null, nr_seq_caixa_od_p       =>  null, cd_tributo_p            =>  cd_tributo_regra_w, nr_titulo_pagar_p       =>  nr_titulo_w, nr_seq_bandeira_p       =>  null, cd_tributo_regra_p      =>  cd_tributo_regra_w, ie_origem_tit_rec_p     =>  null, nr_seq_banco_od_p       =>  null, ie_tipo_conta_glosa_p   =>  null, nr_repasse_terceiro_p   =>  nr_repasse_terceiro_w, cd_estab_inf_movto_p    =>  null, cd_tipo_baixa_p         =>  cd_tipo_baixa_w, cd_tipo_recebimento_p   =>  null, nr_seq_w_movimento_p    =>  nr_sequencia_w, nm_tabela_p             =>  nm_tabela_w, nr_titulo_receber_p     =>  null, nr_seq_proj_rec_p       =>  nr_seq_proj_rec_w, ie_origem_documento_p   =>  ie_origem_documento_w, nr_seq_tab_orig_p       =>  nr_seq_tab_orig_w, nr_seq_tab_compl_p      =>  nr_seq_tab_compl_w, nr_seq_info_ctb_p       =>  nr_seq_info_ctb_w);
                        end loop;
                        close C03;

                        if (ie_contab_w = 'N') and (vl_total_transacao_w <> 0) and (abs(vl_total_transacao_w) = abs(vl_transacao_ww)) then
                                select  coalesce(max(nr_sequencia),0)
                                into STRICT    nr_sequencia_movto_w
                                from    w_movimento_contabil
                                where   nr_lote_contabil        = nr_lote_contabil_p
                                and     nr_sequencia            > nr_sequencia_movto_w
                                and     ie_debito_credito       = 'C';

                                if (nr_sequencia_movto_w > 0) then
                                        update  w_movimento_contabil a
                                        set     vl_movimento            = vl_total_transacao_w
                                        where   nr_lote_contabil        = nr_lote_contabil_p
                                        and     nr_sequencia            = nr_sequencia_movto_w;

                                        delete  FROM w_movimento_contabil
                                        where   nr_lote_contabil        = nr_lote_contabil_p
                                        and     nr_sequencia            > nr_sequencia_movto_w
                                        and     ie_debito_credito       = 'C';
                                end if;
                        end if;
                end if;

                if (ie_compl_hist_w = 'S') then
                        if (coalesce(nr_seq_conta_banco_w,0) > 0) then
                                select  max(ds_banco)
                                into STRICT    ds_banco_w
                                from    banco_estabelecimento_v
                                where   nr_sequencia    = nr_seq_conta_banco_w;
                        end if;

                        select  coalesce(max(nr_titulo_original),0)
                        into STRICT    nr_titulo_original_w
                        from    titulo_pagar
                        where   nr_titulo       = nr_titulo_w;

                        if (nr_titulo_original_w <> 0) then
                                begin
                                select  substr(obter_dados_pf_pj(cd_pessoa_fisica,cd_cgc,'N'),1,80)
                                into STRICT    nm_pf_pj_tit_orig_w
                                from    titulo_pagar
                                where   nr_titulo       = nr_titulo_original_w;
                                exception
                                when others then
                                        nm_pf_pj_tit_orig_w     := null;
                                end;
                        end if;

                        if (nr_titulo_w IS NOT NULL AND nr_titulo_w::text <> '') then
                                select  sum(vl_outras_despesas),
                                                sum(vl_out_desp_bordero)
                                into STRICT    vl_outras_despesas_w,
                                                vl_out_desp_bordero_w
                                from    titulo_pagar
                                where   nr_titulo       =  nr_titulo_w;
                        end if;

                        ds_conteudo_w   := substr(      nr_titulo_w                     || '#@' ||
                                                        nr_bordero_w                    || '#@' ||
                                                        nr_seq_escrit_w                 || '#@' ||
                                                        nr_cheque_w                     || '#@' ||
                                                        nr_documento_tit_w              || '#@' ||
                                                        cd_pessoa_fisica_w              || '#@' ||
                                                        cd_cgc_w                        || '#@' ||
                                                        ds_pessoa_titulo_w              || '#@' ||
                                                        ds_compl_contab_w               || '#@' ||
                                                        ds_bordero_w                    || '#@' ||
                                                        ds_benef_origem_w               || '#@' ||
                                                        nr_parcelas_w                   || '#@' ||
                                                        dt_contabil_w                   || '#@' ||
                                                        dt_mesano_contab_w              || '#@' ||
                                                        nr_titulo_original_w            || '#@' ||
                                                        nr_total_parcelas_w             || '#@' ||
                                                        nm_terceiro_w                   || '#@' ||
                                                        ds_mesano_ref_repasse_w         || '#@' ||
                                                        nr_adiantamento_w               || '#@' ||
                                                        nr_tit_orig_adiant_w            || '#@' ||
                                                        ds_mes_competencia_w            || '#@' ||
                                                        ds_banco_w                      || '#@' ||
                                                        nm_fantasia_pj_w                || '#@' ||
                                                        cd_estab_titulo_w               || '#@' ||
                                                        ds_estab_titulo_w               || '#@' ||
                                                        ds_observacao_titulo_w          || '#@' ||
                                                        nr_seq_rpa_w                    || '#@' ||
                                                        nr_nota_fiscal_w                || '#@' ||
                                                        ds_obs_adiant_pago_w            || '#@' ||
                                                        ds_obs_baixa_titulo_w           || '#@' ||
                                                        ds_motivo_dev_w                 || '#@' ||
                                                        nr_ret_convenio_w               || '#@' ||
                                                        nr_lote_recurso_w               || '#@' ||
                                                        ds_nota_credito_w               || '#@' ||
                                                        nr_seq_nota_credito_w           || '#@' ||
                                                        ds_hist_movto_trans_financ_w    || '#@' ||
                                                        ds_tributo_w                    || '#@' ||
                                                        vl_outras_despesas_w            || '#@' ||
                                                        nm_pf_pj_tit_orig_w             || '#@' ||
                                                        null                            || '#@' ||
                                                        ie_nf_nfe_w                     || '#@' ||
                                                        vl_out_desp_bordero_w           || '#@' ||
                                                        ds_estorno_w                    || '#@' ||
                                                        cd_estab_intercompany_ori_w     || '#@' ||
                                                        ds_estab_intercompany_ori_w     || '#@' ||
                                                        cd_estab_intercompany_des_w     || '#@' ||
                                                        ds_estab_intercompany_des_w     || '#@' ||
                                                        cd_interno_intercompany_ori_w   || '#@' ||
                                                        cd_interno_intercompany_des_w   || '#@' ||
                                                        nr_seq_nota_orig_w              || '#@' ||
                                                        nr_nota_orig_w                  || '#@' ||
                                                        cd_serie_nf_orig_w              || '#@' ||
                                                        nr_nfe_imp_orig_w,1,4000);
                end if;

                if (ie_contab_w = 'S') then
                        if (ie_permite_estab_dif_w <> 'PCCT') then
                                cd_estab_titulo_ww      := null;
                        end if;

                        if      ((nm_atributo_w = 'VL_ADIANT_TIT_PAGAR') and (coalesce(cd_conta_contabil_w,'0') = '0') and (coalesce(nr_titulo_w,0) <> 0) and (ie_conta_contab_tit_adiant_w = 'S')) then --21/11/2012
                                select  coalesce(max(b.cd_conta_contabil),'0'),
                                        coalesce(max(b.cd_centro_custo),0)
                                into STRICT    cd_conta_contabil_w,
                                        cd_centro_custo_w
                                from    titulo_pagar_classif    b,
                                        titulo_pagar            a
                                where   a.nr_lote_contabil      = nr_lote_contabil_p
                                and     b.nr_titulo             = nr_titulo_w
                                and     a.nr_titulo             = b.nr_titulo;
                        end if;

                        ie_origem_documento_w   := null;
                        nr_documento_ww         := null;
                        ds_atributos_w          := null;

                        ds_atributos_w          :=      'NR_NOTA_FISCAL=' || nr_nota_fiscal_w || ';' ||
                                                        'NR_TITULO_PAGAR=' || nr_titulo_w || ';' ||
                                                        'NR_SEQ_NOTA_FISCAL=' || nr_seq_nota_fiscal_w || ';' ||
                                                        'NR_NFE_IMP=' || nr_nfe_imp_w;


                        ctb_obter_doc_movto(    cd_tipo_lote_contabil_w,
                                                nm_atributo_w,
                                                'VR',
                                                dt_movimento_w,
                                                null,
                                                null,
                                                ds_atributos_w,
                                                nm_usuario_p,
                                                ie_regra_w,
                                                nr_documento_ww,
                                                ie_origem_documento_w);


                        nr_seq_w_movimento_p =>  nr_sequencia_w := gerar_contab_trans_financ(cd_estabelecimento_p =>  cd_estabelecimento_w, cd_estab_movto_p     =>  cd_estab_titulo_ww, nr_lote_contabil_p   =>  nr_lote_contabil_p, nm_usuario_p         =>  nm_usuario_p, cd_conta_contabil_p  =>  cd_conta_contabil_w, cd_centro_custo_p    =>  cd_centro_custo_w, ds_documento_p       =>  nr_documento_w, nr_seq_agrupamento_p =>  nr_seq_agrupamento_w, dt_transacao_p       =>  dt_movimento_w, vl_transacao_p       =>  vl_transacao_w, nr_seq_trans_fin_p   =>  nr_seq_trans_fin_w, nr_seq_conta_banco_p =>  nr_seq_conta_banco_w, nm_atributo_p        =>  nm_atributo_w, cd_pessoa_fisica_p   =>  cd_pessoa_fisica_w, cd_cgc_p             =>  cd_cgc_w, cd_setor_p           =>  0, cd_convenio_p        =>  cd_convenio_w, nr_documento_p       =>  nr_documento_ww, cd_historico_p       =>  null, ds_atrib_compl_hist_p=>  ds_conteudo_w, nr_seq_caixa_p       =>  null, nr_seq_produto_p     =>  null, nr_seq_caixa_od_p    =>  null, cd_tributo_p         =>  cd_tributo_regra_w, nr_titulo_pagar_p    =>  nr_titulo_w, nr_seq_bandeira_p    =>  null, cd_tributo_regra_p   =>  cd_tributo_regra_w, ie_origem_tit_rec_p  =>  null, nr_seq_banco_od_p    =>  null, ie_tipo_conta_glosa_p=>  null, nr_repasse_terceiro_p=>  nr_repasse_terceiro_w, cd_estab_inf_movto_p =>  null, cd_tipo_baixa_p      =>  cd_tipo_baixa_w, cd_tipo_recebimento_p=>  null, nr_seq_w_movimento_p =>  nr_sequencia_w, nm_tabela_p          =>  nm_tabela_w, nr_titulo_receber_p  =>  null, nr_seq_proj_rec_p    =>  nr_seq_proj_rec_w, ie_origem_documento_p=>  ie_origem_documento_w, nr_seq_tab_orig_p    =>  nr_seq_tab_orig_w, nr_seq_tab_compl_p   =>  nr_seq_tab_compl_w, nr_seq_info_ctb_p    =>  nr_seq_info_ctb_w);

                        begin
                        select  max(b.cd_estabelecimento)
                        into STRICT    cd_estab_banco_w
                        from    banco_estabelecimento b,
                                titulo_pagar_baixa t
                        where   t.nr_seq_conta_banco    = b.nr_sequencia
                        and     t.nr_titulo             = nr_titulo_w
                        and     t.nr_sequencia          = nr_seq_tab_compl_w;
                        exception
                        when no_data_found then
                            cd_estab_banco_w := null;
                        end;

                        if      ((nm_atributo_w = 'VL_ADIANT_TIT_PAGAR') or (ie_contab_cp_no_cb_w = 'N')) and (ie_permite_estab_dif_w = 'PCCT') and (nr_titulo_w IS NOT NULL AND nr_titulo_w::text <> '') and
                                ((cd_estab_titulo_w <> coalesce(cd_estab_banco_w, cd_estabelecimento_w)) or
                                (       (ie_contab_cp_estab_w = 'EF') and (cd_estab_titulo_w <> coalesce(cd_estab_financeiro_w, cd_estabelecimento_w))))and
                                --(nm_atributo_w <> 'VL_PAGO') and
                                (cd_conta_transitoria_w IS NOT NULL AND cd_conta_transitoria_w::text <> '') then

                                select  count(a.nr_sequencia)
                                into STRICT    qt_movto_contab_w
                                from    w_movimento_contabil a
                                where   a.nr_lote_contabil      = nr_lote_contabil_p
                                and     a.dt_movimento          = dt_movimento_w
                                and     a.nm_atributo           = nm_atributo_w
                                and     a.nr_seq_tab_orig       = nr_seq_tab_orig_w;

                                if (qt_movto_contab_w > 0) then

                                        if (ie_contab_cp_estab_w = 'ET') and (cd_estab_titulo_w <> cd_estabelecimento_w) then

                                                if (nm_atributo_w = 'VL_ADIANT_TIT_PAGAR') then
                                                    select  coalesce(max(nr_sequencia),0)
                                                    into STRICT    nr_sequencia_movto_w
                                                    from    w_movimento_contabil
                                                    where   nr_lote_contabil        = nr_lote_contabil_p
                                                    and     ie_debito_credito       = 'C';
                                                elsif (nm_atributo_w = 'VL_PAGO') then
                                                    select  coalesce(max(nr_sequencia),0)
                                                    into STRICT    nr_sequencia_movto_w
                                                    from    w_movimento_contabil
                                                    where   nr_lote_contabil        = nr_lote_contabil_p
                                                    and     ie_debito_credito       = 'C'
                                                    and     ie_transitorio          = 'N'
                                                    and     nr_seq_agrupamento      = nr_titulo_w;
                                                end if;

                                                if (nr_sequencia_movto_w IS NOT NULL AND nr_sequencia_movto_w::text <> '') then
                                                    update  w_movimento_contabil
                                                    set     cd_estabelecimento      = cd_estabelecimento_w
                                                    where   nr_lote_contabil        = nr_lote_contabil_p
                                                    and     nr_sequencia            = nr_sequencia_movto_w;
                                                end if;

                                                if (nm_atributo_w in ('VL_PAGO', 'VL_ADIANT_TIT_PAGAR')) then
                                                      nr_lote_contabil_p := ctb_gerar_movto_conta_transit(  nr_lote_contabil_p, cd_estabelecimento_w, cd_conta_transitoria_w, cd_historico_ct_w);

                                                      nr_lote_contabil_p := ctb_gerar_movto_conta_transit(  nr_lote_contabil_p, cd_estab_titulo_w, cd_conta_transitoria_w, cd_historico_ct_w);
                                                end if;
                                        end if;

                                       if (ie_contab_cp_estab_w = 'EF') and (cd_estab_financeiro_w IS NOT NULL AND cd_estab_financeiro_w::text <> '') and (cd_estab_financeiro_w <> cd_estab_titulo_w) and (nm_atributo_w in ('VL_TITULO', /*'VL_BAIXA',*/ 'VL_PAGO')) then

                                                select  coalesce(max(nr_sequencia),0)
                                                into STRICT    nr_sequencia_movto_w
                                                from    w_movimento_contabil
                                                where   nr_lote_contabil        = nr_lote_contabil_p
                                                and     ie_debito_credito       = 'C'
                                                and     ie_transitorio          = 'N'
                                                and     nr_seq_agrupamento      = nr_titulo_w;

                                                if (nr_sequencia_movto_w IS NOT NULL AND nr_sequencia_movto_w::text <> '') then
                                                    update  w_movimento_contabil
                                                    set     cd_estabelecimento      = cd_estab_financeiro_w
                                                    where   nr_lote_contabil        = nr_lote_contabil_p
                                                    and     nr_sequencia            = nr_sequencia_movto_w;
                                                end if;

                                                select  coalesce(max(nr_sequencia),0)
                                                into STRICT    nr_sequencia_movto_w
                                                from    w_movimento_contabil
                                                where   nr_lote_contabil        = nr_lote_contabil_p
                                                and     ie_debito_credito       = 'D'
                                                and     ie_transitorio          = 'N'
                                                and     nr_seq_agrupamento      = nr_titulo_w;

                                                if (nr_sequencia_movto_w IS NOT NULL AND nr_sequencia_movto_w::text <> '') then
                                                    update  w_movimento_contabil
                                                    set     cd_estabelecimento      = cd_estab_titulo_w
                                                    where   nr_lote_contabil        = nr_lote_contabil_p
                                                    and     nr_sequencia            = nr_sequencia_movto_w;
                                                end if;

                                                  nr_lote_contabil_p := ctb_gerar_movto_conta_transit(  nr_lote_contabil_p, cd_estab_financeiro_w, cd_conta_transitoria_w, cd_historico_ct_w);

                                                  nr_lote_contabil_p := ctb_gerar_movto_conta_transit(  nr_lote_contabil_p, cd_estab_titulo_w, cd_conta_transitoria_w, cd_historico_ct_w);
                                        end if;
                                end if;
                        end if;
                end if;
                if (qt_contador_w >= 100) then
                        commit;
                        qt_contador_w   := 0;
                end if;
        end loop;
        close c010;

        if (pkg_i18n.get_user_locale = 'es_BO' AND ie_exclusao_p = 'N') then
                BEGIN
                        CALL ctb_regras_contabil.ctb_gerar_cd_controle_pag(nr_lote_contabil_p, nm_usuario_p);
                EXCEPTION WHEN OTHERS THEN
                        CALL ctb_gravar_log_lote(nr_lote_contabil_p, 1, SQLERRM, nm_usuario_p);
                END;
        end if;

        CALL agrupa_movimento_contabil(nr_lote_contabil_p, nm_usuario_p);
end if;

if (ie_contab_imposto_w = 'S')  then
        update  titulo_pagar
        set     ie_status_tributo       = 'T'
        where   nr_lote_transf_trib     = nr_lote_contabil_p
        and (ie_origem_titulo = ie_origem_tit_param_w or ie_origem_tit_param_w = 0)
        and     exists (SELECT 1

                        where   coalesce(ds_classif_tit_w::text, '') = ''
                        
union all

                        SELECT 1
                        from    titulo_pagar t
                        where   t.nr_titulo     = nr_titulo
                        and     t.nr_seq_classe in (select somente_numero(nr_seq_classif_tit) nr_seq_classif_tit
                                                        from (WITH RECURSIVE cte AS (
select regexp_substr(nr_classif_tit, '[^,]+', 1, 1) nr_seq_classif_tit
                                                                from (select ds_classif_tit_w nr_classif_tit
                                                                        
                                                                )  x(regexp_substr(nr_classif_tit, '[^,]+', 1, level) IS NOT NULL AND (regexp_substr(nr_classif_tit, '[^,]+', 1, level))::text <> '')

                                                                  UNION ALL
select regexp_substr(nr_classif_tit, '[^,]+', 1, (c.level+1)) nr_seq_classif_tit
                                                                from (select ds_classif_tit_w nr_classif_tit
                                                                        
                                                                )  x
                                                                (regexp_substr(nr_classif_tit, '[^,]+', 1, level) IS NOT NULL AND (regexp_substr(nr_classif_tit, '[^,]+', 1, level))::text <> '')

                                                                 JOIN cte c ON ()

) SELECT * FROM cte;
)
                                                        ));
end if;

if (coalesce(ds_retorno_p::text, '') = '') then
        update  lote_contabil
        set     ie_situacao             = 'A',
                dt_geracao_lote         = clock_timestamp()
        where   nr_lote_contabil        = nr_lote_contabil_p;

        if (ie_exclusao_p = 'S') then
                ds_retorno_p    := Wheb_mensagem_pck.get_texto(165188);

                CALL ctb_gravar_log_lote(    nr_lote_contabil_p,
                                        2,
                                        '',
                                        nm_usuario_p);
        else
                ds_retorno_p    := Wheb_mensagem_pck.get_texto(165187);

                CALL ctb_gravar_log_lote(    nr_lote_contabil_p,
                                        1,
                                        '',
                                        nm_usuario_p);
        end if;

        commit;
else
        rollback;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE contabiliza_contas_pagar (nr_lote_contabil_p bigint, nm_usuario_p text, ie_exclusao_p text, ds_retorno_p INOUT text) FROM PUBLIC;

