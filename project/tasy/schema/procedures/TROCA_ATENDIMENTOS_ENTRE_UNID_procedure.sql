-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE troca_atendimentos_entre_unid ( nm_usuario_p text, nr_atendimento_p bigint, nr_atendimento_troca_p bigint, dt_entrada_unidade_p timestamp default null, ds_retorno_p INOUT text DEFAULT NULL) AS $body$
DECLARE


cd_setor_atendimento_w		integer;
cd_unidade_basica_w		varchar(10);	
cd_unidade_compl_w		varchar(10);
cd_tipo_acomodacao_w		smallint;
nr_acompanhante_w		smallint;
nr_seq_interno_w		bigint;
nr_sequencia_w			bigint;
cd_setor_atendimento_troca_w	integer;
cd_unidade_basica_troca_w	varchar(10);
cd_unidade_compl_troca_w	varchar(10);
cd_tipo_acomodacao_troca_w	smallint;
nr_acompanhante_troca_w		smallint;
nr_seq_interno_troca_w		bigint;
nr_sequencia_troca_w		bigint;
nr_seq_atepacu_atend_w		bigint;
nr_seq_atepacu_atend_troca_w	bigint;
ie_leito_monit_orig_w		varchar(1);
ie_leito_monit_dest_w		varchar(1);
ds_param_integ_hl7_w		varchar(4000);
ds_sep_bv_w			varchar(100);
ie_considerar_troca_leito_w	varchar(1);
ie_passagem_setor_w		varchar(1) := 'N';

BEGIN

ds_retorno_p := '';
ie_considerar_troca_leito_w := obter_param_usuario(3111, 166, obter_perfil_ativo, nm_usuario_p, obter_estabelecimento_ativo, ie_considerar_troca_leito_w);


if (coalesce(nr_atendimento_p,0) > 0) and (coalesce(nr_atendimento_troca_p,0) >0) then

	nr_seq_atepacu_atend_w :=	obter_atepacu_paciente(nr_atendimento_p, 'A');
	nr_seq_atepacu_atend_troca_w := obter_atepacu_paciente(nr_atendimento_troca_p, 'A');

RAISE NOTICE '%', nr_seq_atepacu_atend_troca_w;
	if (coalesce(nr_seq_atepacu_atend_w,0) > 0) and (coalesce(nr_seq_atepacu_atend_troca_w,0) >0) then

		select 	a.cd_setor_atendimento,
			a.cd_unidade_basica,
			a.cd_unidade_compl,
			a.cd_tipo_acomodacao,
			a.nr_acompanhante
		into STRICT	cd_setor_atendimento_w,
			cd_unidade_basica_w,
			cd_unidade_compl_w,
			cd_tipo_acomodacao_w,
			nr_acompanhante_w
		from	atend_paciente_unidade a
		where	a.nr_seq_interno = nr_seq_atepacu_atend_w;

		update	atend_paciente_unidade
		set	dt_saida_unidade = coalesce(dt_entrada_unidade_p, clock_timestamp()) --sysdate
		where	nr_seq_interno = nr_seq_atepacu_atend_w;

		select 	a.cd_setor_atendimento,
				a.cd_unidade_basica,
				a.cd_unidade_compl,
				a.cd_tipo_acomodacao,
				a.nr_acompanhante
		into STRICT	cd_setor_atendimento_troca_w,
				cd_unidade_basica_troca_w,
				cd_unidade_compl_troca_w,
				cd_tipo_acomodacao_troca_w,
				nr_acompanhante_troca_w
		from	atend_paciente_unidade a
		where	a.nr_seq_interno = nr_seq_atepacu_atend_troca_w;

		update	atend_paciente_unidade
		set	dt_saida_unidade = coalesce(dt_entrada_unidade_p, clock_timestamp()) --sysdate
		where	nr_seq_interno = nr_seq_atepacu_atend_troca_w;

		update	unidade_atendimento
		set		ie_status_unidade	= 'L',
				nm_usuario		= nm_usuario_p,
				dt_atualizacao		= clock_timestamp(),
				dt_entrada_unidade	 = NULL,
				nr_atendimento		 = NULL
		where	cd_setor_atendimento    = cd_setor_atendimento_w
		and		cd_unidade_basica	= cd_unidade_basica_w
		and		cd_unidade_compl	= cd_unidade_compl_w;

		select	nextval('atend_paciente_unidade_seq')
		into STRICT	nr_seq_interno_troca_w
		;

		select	coalesce(max(nr_sequencia),0) + 1
		into STRICT	nr_sequencia_troca_w
		from	atend_paciente_unidade
		where	nr_atendimento		= nr_atendimento_troca_p;
		
		if (ie_considerar_troca_leito_w = 'S') and (cd_setor_atendimento_troca_w = cd_setor_atendimento_w) then
			begin
			ie_passagem_setor_w	:=	'L';	
			end;
		end if;


		insert	into atend_paciente_unidade(nr_atendimento,
			nr_sequencia,
			cd_setor_atendimento,
			cd_unidade_basica,
			cd_unidade_compl,
			dt_entrada_unidade,
			dt_atualizacao,
			nm_usuario,
			cd_tipo_acomodacao,
			dt_saida_unidade,
			nr_atend_dia,
			nm_usuario_original,
			dt_saida_interno,
			ie_passagem_setor,
			nr_acompanhante,
			nr_seq_interno)
		values (nr_atendimento_troca_p,
			nr_sequencia_troca_w,
			cd_setor_atendimento_w,
			cd_unidade_basica_w,
			cd_unidade_compl_w,
			coalesce(dt_entrada_unidade_p, clock_timestamp()), --sysdate,
			clock_timestamp(),
			nm_usuario_p,
			cd_tipo_acomodacao_troca_w,
			null,
			null,
			nm_usuario_p,
			to_date('30/12/2999 00:00:00', 'dd/mm/yyyy hh24:mi:ss'),
			ie_passagem_setor_w,
			nr_acompanhante_troca_w,
			nr_seq_interno_troca_w);

		update	unidade_atendimento
		set	ie_status_unidade	= 'L',
			nm_usuario		= nm_usuario_p,
			dt_atualizacao		= clock_timestamp(),
			dt_entrada_unidade	 = NULL,
			nr_atendimento		 = NULL
		where	cd_setor_atendimento    = cd_setor_atendimento_troca_w
		and	cd_unidade_basica	= cd_unidade_basica_troca_w
		and	cd_unidade_compl	= cd_unidade_compl_troca_w;

		select	nextval('atend_paciente_unidade_seq')
		into STRICT	nr_seq_interno_w
		;

		select	coalesce(max(nr_sequencia),0) + 1
		into STRICT	nr_sequencia_w
		from	atend_paciente_unidade
		where	nr_atendimento		= nr_atendimento_p;

		insert	into atend_paciente_unidade(nr_atendimento,
			nr_sequencia,
			cd_setor_atendimento,
			cd_unidade_basica,
			cd_unidade_compl,
			dt_entrada_unidade,
			dt_atualizacao,
			nm_usuario,
			cd_tipo_acomodacao,
			dt_saida_unidade,
			nr_atend_dia,
			nm_usuario_original,
			dt_saida_interno,
			ie_passagem_setor,
			nr_acompanhante,
			nr_seq_interno)
		values (nr_atendimento_p,
			nr_sequencia_w,
			cd_setor_atendimento_troca_w,
			cd_unidade_basica_troca_w,
			cd_unidade_compl_troca_w,
			coalesce(dt_entrada_unidade_p, clock_timestamp()), --sysdate,
			clock_timestamp(),
			nm_usuario_p,
			cd_tipo_acomodacao_w,
			null,
			null,
			nm_usuario_p,
			to_date('30/12/2999 00:00:00', 'dd/mm/yyyy hh24:mi:ss'),
			ie_passagem_setor_w,
			nr_acompanhante_w,
			nr_seq_interno_w);

		ds_retorno_p := Wheb_mensagem_pck.get_texto(307858); --'Troca de pacientes entre leitos realizada com sucesso!';
	end if;

	select	coalesce(obter_se_leito_atual_monit(nr_atendimento_p),'N')
	into STRICT	ie_leito_monit_orig_w
	;

	select	coalesce(obter_se_leito_atual_monit(nr_atendimento_troca_p),'N')
	into STRICT	ie_leito_monit_dest_w
	;
	
	ds_sep_bv_w := obter_separador_bv;
	
	if	((ie_leito_monit_orig_w = 'S') or (ie_leito_monit_dest_w = 'S')) then
		begin
			ds_param_integ_hl7_w :=	'nr_atendimento=' || nr_atendimento_p || ds_sep_bv_w ||
						'nr_seq_interno=' || nr_seq_atepacu_atend_w || ds_sep_bv_w ||
						'nr_atendimento_dois=' || nr_atendimento_troca_p || ds_sep_bv_w ||
						'nr_seq_interno_dois=' || nr_seq_atepacu_atend_troca_w || ds_sep_bv_w;
			CALL gravar_agend_integracao(22, ds_param_integ_hl7_w);
			
			CALL patient_swap_tie(nm_usuario_p,nr_atendimento_troca_p,nr_atendimento_p);
			
		end;
	
	end if;

end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE troca_atendimentos_entre_unid ( nm_usuario_p text, nr_atendimento_p bigint, nr_atendimento_troca_p bigint, dt_entrada_unidade_p timestamp default null, ds_retorno_p INOUT text DEFAULT NULL) FROM PUBLIC;

