-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_ret_cobr_santander_400 ( nr_seq_cobr_escrit_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
nr_titulo_w			bigint;
vl_juros_w			double precision;
vl_desconto_w			double precision;
vl_abatimento_w			double precision;
vl_liquido_w			double precision;
dt_liquidacao_w			timestamp;
nr_dt_liquidacao_w		bigint;
cont_w				bigint;
ie_tipo_carteira_w		varchar(255);
ds_titulo_w			varchar(255);
vl_cobranca_w			double precision;
cd_ocorrencia_w			bigint;
nr_seq_ocorrencia_ret_w		bigint;
vl_tarifa_cobranca_w		double precision;
vl_saldo_titulo_w		double precision;
cd_banco_w			smallint;
cd_banco_cobr_w			integer;
cd_centro_custo_desc_w		integer;
nr_seq_motivo_desc_w		bigint;
nr_seq_tit_rec_cobr_w		bigint;
cd_pessoa_fisica_desc_w		varchar(10);
cd_cgc_desc_w			varchar(14);
cd_carteira_w			varchar(40);
ie_separa_carteira_w		varchar(1);
cd_estabelecimento_w		smallint;
nr_nosso_numero_w		varchar(8);
nr_seq_tf_cobr_desp_w		bigint;
nr_seq_trans_desp_banco_w	bigint;
vl_acrescimo_w			double precision;
ie_digito_nosso_num_w		varchar(1);
nr_titulo_temp_w		bigint;
nr_nosso_numero_temp_w		bigint;
ds_nosso_numero_w		varchar(9);
vl_desc_previsto_w		titulo_receber.vl_desc_previsto%type;
vl_juros_titulo_w		double precision;
vl_multa_titulo_w		double precision;
vl_multa_w			double precision;

c01 CURSOR FOR 
SELECT	trim(both substr(ds_string,38,25)), 
	(substr(ds_string,153,13))::numeric /100, 
	(substr(ds_string,267,13))::numeric /100, 
	(substr(ds_string,241,13))::numeric /100, 
	(substr(ds_string,228,13))::numeric /100, 
	(substr(ds_string,254,13))::numeric /100, 
	(substr(ds_string,176,13))::numeric /100, 
	somente_numero(substr(ds_string,296,6)), 
	substr(ds_string,109,2), 
	substr(ds_string,63,8) nr_nosso_numero, 
	substr(ds_string,70,1) ie_digito_nosso_num 
from	w_retorno_banco 
where	nr_seq_cobr_escrit	= nr_seq_cobr_escrit_p 
and	substr(ds_string,1,1)	= '1' 
and (coalesce(ie_separa_carteira_w,'N') = 'N' or coalesce(cd_carteira_w::text, '') = '' or trim(both substr(ds_string,83,3)) = cd_carteira_w);


BEGIN 
 
select	max((substr(ds_string,77,3))::numeric ) 
into STRICT	cd_banco_w 
from	w_retorno_banco 
where	nr_seq_cobr_escrit	= nr_seq_cobr_escrit_p 
and	substr(ds_string,1,1)	= '0';
 
select	max(a.cd_banco), 
	max(b.cd_carteira), 
	max(a.cd_estabelecimento) 
into STRICT	cd_banco_cobr_w, 
	cd_carteira_w, 
	cd_estabelecimento_w 
FROM cobranca_escritural a
LEFT OUTER JOIN banco_carteira b ON (a.nr_seq_carteira_cobr = b.nr_sequencia)
WHERE a.nr_sequencia		= nr_seq_cobr_escrit_p;
 
if (cd_banco_w <> cd_banco_cobr_w) then 
	/* O banco do arquivo é diferente do banco da cobrança no sistema! 
	Posição do código do banco no arquivo: 77 - 79 */
 
	CALL wheb_mensagem_pck.exibir_mensagem_abort(226931);
end if;
 
select	max(a.nr_seq_tf_cobr_desp), 
	max(a.nr_seq_trans_desp_banco) 
into STRICT	nr_seq_tf_cobr_desp_w, 
	nr_seq_trans_desp_banco_w 
from	parametro_contas_receber a 
where	a.cd_estabelecimento	= cd_estabelecimento_w;
 
ie_separa_carteira_w := obter_param_usuario(815, 5, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_separa_carteira_w);
 
open C01;
loop 
fetch C01 into	 
	ds_titulo_w, 
	vl_cobranca_w, 
	vl_juros_w, 
	vl_desconto_w, 
	vl_abatimento_w, 
	vl_liquido_w, 
	vl_tarifa_cobranca_w, 
	nr_dt_liquidacao_w, 
	cd_ocorrencia_w, 
	nr_nosso_numero_w, 
	ie_digito_nosso_num_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
 
	if (ds_titulo_w IS NOT NULL AND ds_titulo_w::text <> '') then 
 
		nr_titulo_temp_w	:= somente_numero(ds_titulo_w);
	 
		select	max(nr_titulo), 
			coalesce(max(vl_saldo_titulo),0), 
			max(vl_desc_previsto), 
			obter_juros_multa_titulo(max(nr_titulo),clock_timestamp(),'R','J'), 
			obter_juros_multa_titulo(max(nr_titulo),clock_timestamp(),'R','M') 
		into STRICT	nr_titulo_w, 
			vl_saldo_titulo_w, 
			vl_desc_previsto_w, 
			vl_juros_titulo_w, 
			vl_multa_titulo_w 
		from	titulo_receber 
		where	nr_titulo	= nr_titulo_temp_w;
 
	else 
 
		nr_titulo_w		:= null;
 
	end if;
 
	if (coalesce(nr_titulo_w::text, '') = '') then 
 
		nr_nosso_numero_temp_w	:= somente_numero(nr_nosso_numero_w);
 
		if (nr_nosso_numero_temp_w	<> 0) then 
 
			ds_nosso_numero_w	:= nr_nosso_numero_temp_w || ie_digito_nosso_num_w;
 
			select	max(a.nr_titulo), 
				coalesce(max(a.vl_saldo_titulo),0), 
				max(a.vl_desc_previsto), 
				obter_juros_multa_titulo(max(a.nr_titulo),clock_timestamp(),'R','J'), 
				obter_juros_multa_titulo(max(a.nr_titulo),clock_timestamp(),'R','M') 
			into STRICT	nr_titulo_w, 
				vl_saldo_titulo_w, 
				vl_desc_previsto_w, 
				vl_juros_titulo_w, 
				vl_multa_titulo_w 
			from	titulo_receber a 
			where	a.nr_documento	= ds_nosso_numero_w 
			and	(a.nr_documento IS NOT NULL AND a.nr_documento::text <> '');
 
			if (coalesce(nr_titulo_w::text, '') = '') then 
 
				select	max(a.nr_titulo), 
					coalesce(max(a.vl_saldo_titulo),0), 
					max(a.vl_desc_previsto), 
					obter_juros_multa_titulo(max(a.nr_titulo),clock_timestamp(),'R','J'), 
					obter_juros_multa_titulo(max(a.nr_titulo),clock_timestamp(),'R','M') 
				into STRICT	nr_titulo_w, 
					vl_saldo_titulo_w, 
					vl_desc_previsto_w, 
					vl_juros_titulo_w, 
					vl_multa_titulo_w 
				from	titulo_receber a 
				where	a.nr_documento	= nr_nosso_numero_w 
				and	(a.nr_documento IS NOT NULL AND a.nr_documento::text <> '');
 
				if (coalesce(nr_titulo_w::text, '') = '') then 
 
					select	max(a.nr_titulo), 
						coalesce(max(a.vl_saldo_titulo),0), 
						max(a.vl_desc_previsto), 
						obter_juros_multa_titulo(max(a.nr_titulo),clock_timestamp(),'R','J'), 
						obter_juros_multa_titulo(max(a.nr_titulo),clock_timestamp(),'R','M') 
					into STRICT	nr_titulo_w, 
						vl_saldo_titulo_w, 
						vl_desc_previsto_w, 
						vl_juros_titulo_w, 
						vl_multa_titulo_w 
					from	titulo_receber a 
					where	ltrim(a.nr_nosso_numero,'0')	= nr_nosso_numero_w 
					and	(a.nr_nosso_numero IS NOT NULL AND a.nr_nosso_numero::text <> '');
 
					if (coalesce(nr_titulo_w::text, '') = '') then 
 
						select	max(a.nr_titulo), 
							coalesce(max(a.vl_saldo_titulo),0), 
							max(a.vl_desc_previsto), 
							obter_juros_multa_titulo(max(a.nr_titulo),clock_timestamp(),'R','J'), 
							obter_juros_multa_titulo(max(a.nr_titulo),clock_timestamp(),'R','M') 
						into STRICT	nr_titulo_w, 
							vl_saldo_titulo_w, 
							vl_desc_previsto_w, 
							vl_juros_titulo_w, 
							vl_multa_titulo_w 
						from	titulo_receber a 
						where	somente_numero(a.nr_nosso_numero)	= nr_nosso_numero_temp_w 
						and	(a.nr_nosso_numero IS NOT NULL AND a.nr_nosso_numero::text <> '');
 
						if (coalesce(nr_titulo_w::text, '') = '') then 
 
							nr_nosso_numero_temp_w	:= somente_numero(ds_nosso_numero_w);
 
							select	max(a.nr_titulo), 
								coalesce(max(a.vl_saldo_titulo),0), 
								max(a.vl_desc_previsto), 
								obter_juros_multa_titulo(max(a.nr_titulo),clock_timestamp(),'R','J'), 
								obter_juros_multa_titulo(max(a.nr_titulo),clock_timestamp(),'R','M') 
							into STRICT	nr_titulo_w, 
								vl_saldo_titulo_w, 
								vl_desc_previsto_w, 
								vl_juros_titulo_w, 
								vl_multa_titulo_w 
							from	titulo_receber a 
							where	a.nr_titulo	= nr_nosso_numero_temp_w;
 
							/*Tratativa efetuada para quando n achar o título OS 949694. */
 
							if (coalesce(nr_titulo_w::text, '') = '') then 
							 
								select	max(a.nr_titulo), 
										coalesce(max(a.vl_saldo_titulo),0), 
										max(a.vl_desc_previsto), 
										obter_juros_multa_titulo(max(a.nr_titulo),clock_timestamp(),'R','J'), 
										obter_juros_multa_titulo(max(a.nr_titulo),clock_timestamp(),'R','M') 
								into STRICT	nr_titulo_w, 
										vl_saldo_titulo_w, 
										vl_desc_previsto_w, 
										vl_juros_titulo_w, 
										vl_multa_titulo_w 
							from		titulo_receber a 
							where		(a.nr_nosso_numero IS NOT NULL AND a.nr_nosso_numero::text <> '') 
							and			somente_numero(a.nr_nosso_numero)	= nr_nosso_numero_w || ie_digito_nosso_num_w;
							 
							end if;
							 
						end if;
 
					end if;
 
				end if;
 
			end if;
 
		else 
 
			select	max(a.nr_titulo), 
				coalesce(max(a.vl_saldo_titulo),0), 
				max(a.vl_desc_previsto), 
				obter_juros_multa_titulo(max(a.nr_titulo),clock_timestamp(),'R','J'), 
				obter_juros_multa_titulo(max(a.nr_titulo),clock_timestamp(),'R','M') 
			into STRICT	nr_titulo_w, 
				vl_saldo_titulo_w, 
				vl_desc_previsto_w, 
				vl_juros_titulo_w, 
				vl_multa_titulo_w 
			from	titulo_receber a 
			where	somente_numero(a.nr_nosso_numero)	= nr_titulo_temp_w 
			and	(a.nr_nosso_numero IS NOT NULL AND a.nr_nosso_numero::text <> '');
 
		end if;
 
	end if;
 
	/* Se encontrou o título importa, senão grava no log */
 
	if (nr_titulo_w IS NOT NULL AND nr_titulo_w::text <> '') then 
 
		ie_tipo_carteira_w	:= OBTER_TIPO_CARTEIRA_REGRA(nr_titulo_w);
 
		update	titulo_receber 
		set	ie_tipo_carteira	= ie_tipo_carteira_w 
		where	nr_titulo		= nr_titulo_w 
		and	coalesce(ie_tipo_carteira::text, '') = '';
 
		select 	max(a.nr_sequencia) 
		into STRICT	nr_seq_ocorrencia_ret_w 
		from	banco_ocorr_escrit_ret a 
		where	a.cd_banco = cd_banco_cobr_w 
		and	a.cd_ocorrencia = cd_ocorrencia_w;
 
		select	max(a.cd_centro_custo), 
			max(a.nr_seq_motivo_desc), 
			max(a.cd_pessoa_fisica), 
			max(a.cd_cgc) 
		into STRICT	cd_centro_custo_desc_w, 
			nr_seq_motivo_desc_w, 
			cd_pessoa_fisica_desc_w, 
			cd_cgc_desc_w 
		from	titulo_receber_liq_desc a 
		where	a.nr_titulo	= nr_titulo_w 
		and	coalesce(a.nr_bordero::text, '') = '' 
		and	coalesce(a.nr_seq_liq::text, '') = '';
 
		if (coalesce(trim(both nr_dt_liquidacao_w),0) <> 0) then 
			dt_liquidacao_w	:= to_date(to_char(nr_dt_liquidacao_w, '000000'),'ddmmyy');
		end if;
 
		select	count(*) 
		into STRICT	cont_w 
		from	titulo_receber 
		where	nr_titulo	= nr_titulo_w;
 
		if (cont_w = 0) then 
			/* O título a receber nr_titulo_w retornado no arquivo não existe na base! */
 
			CALL wheb_mensagem_pck.exibir_mensagem_abort(226932,'NR_TITULO_W='||nr_titulo_w);
		end if;
 
		if (coalesce(nr_seq_tf_cobr_desp_w::text, '') = '') and (coalesce(nr_seq_trans_desp_banco_w::text, '') = '') then 
			vl_tarifa_cobranca_w	:= 0;
		end if;
 
		if	((coalesce(vl_desconto_w,0) + coalesce(vl_abatimento_w,0)) = 0) and (coalesce(vl_saldo_titulo_w,0) > coalesce(vl_liquido_w,0)) then 
			vl_desconto_w	:= coalesce(vl_desc_previsto_w,0);
 
			/* Removi o tratamento abaixo porque estava interferindo nos bloquetos pagos parcialmente 
			Se o bloqueto tiver desconto, esse desconto precisará estar no arquivo (posição 241) ou, pelo menos, cadastrado no título como desconto previsto 
 
			if	(nvl(vl_desconto_w,0)		= 0) and 
				(nvl(vl_saldo_titulo_w,0)	> nvl(vl_cobranca_w,0)) then 
				vl_desconto_w	:= nvl(vl_saldo_titulo_w,0) - nvl(vl_cobranca_w,0); 
				vl_cobranca_w	:= nvl(vl_saldo_titulo_w,0); 
			end if; */
 
 
		end if;
 
		if (coalesce(vl_liquido_w,0)	> coalesce(vl_cobranca_w,0)) then 
			vl_acrescimo_w	:= coalesce(vl_liquido_w,0) - coalesce(vl_cobranca_w,0);
		elsif (coalesce(vl_cobranca_w,0)	> coalesce(vl_saldo_titulo_w,0)) then 
			vl_acrescimo_w	:= coalesce(vl_cobranca_w,0) - coalesce(vl_saldo_titulo_w,0);
			vl_cobranca_w	:= coalesce(vl_saldo_titulo_w,0);
		else 
			vl_acrescimo_w	:= 0;
		end if;
 
		select	nextval('titulo_receber_cobr_seq') 
		into STRICT	nr_seq_tit_rec_cobr_w 
		;
 
		insert	into titulo_receber_cobr( 
			nr_sequencia, 
			nr_titulo, 
			cd_banco, 
			vl_cobranca, 
			vl_desconto, 
			vl_acrescimo, 
			vl_despesa_bancaria, 
			vl_liquidacao, 
			vl_juros, 
			dt_liquidacao, 
			dt_atualizacao, 
			nm_usuario, 
			nr_seq_cobranca, 
			nr_seq_ocorrencia_ret, 
			vl_saldo_inclusao, 
			nr_seq_motivo_desc, 
			cd_centro_custo_desc, 
			vl_multa) 
		values (	nr_seq_tit_rec_cobr_w, 
			nr_titulo_w, 
			cd_banco_cobr_w, 
			coalesce(vl_cobranca_w,0), 
			coalesce(vl_desconto_w,0) + coalesce(vl_abatimento_w,0), 
			coalesce(vl_acrescimo_w,0), 
			coalesce(vl_tarifa_cobranca_w,0), 
			coalesce(vl_liquido_w,0), 
			coalesce(vl_juros_W,0), 
			coalesce(dt_liquidacao_w,clock_timestamp()), 
			clock_timestamp(), 
			nm_usuario_p, 
			nr_seq_cobr_escrit_p, 
			nr_seq_ocorrencia_ret_w, 
			coalesce(vl_saldo_titulo_w,0), 
			nr_seq_motivo_desc_w, 
			cd_centro_custo_desc_w, 
			vl_multa_w);
 
		insert	into titulo_rec_cobr_desc( 
			cd_cgc, 
			cd_pessoa_fisica, 
			dt_atualizacao, 
			nm_usuario, 
			nr_seq_tit_rec_cobr, 
			nr_sequencia) 
		values (cd_cgc_desc_w, 
			cd_pessoa_fisica_desc_w, 
			clock_timestamp(), 
			nm_usuario_p, 
			nr_seq_tit_rec_cobr_w, 
			nextval('titulo_rec_cobr_desc_seq'));
 
	else 
 
		insert	into cobranca_escrit_log(ds_log, 
			dt_atualizacao, 
			dt_atualizacao_nrec, 
			nm_usuario, 
			nm_usuario_nrec, 
			nr_nosso_numero, 
			nr_seq_cobranca, 
			nr_sequencia) 
		values ('Não foi importado o título ' || ds_titulo_w || ' (nosso número: ' || nr_nosso_numero_w || ie_digito_nosso_num_w || '), pois não foi encontrado no Tasy', 
			clock_timestamp(), 
			clock_timestamp(), 
			nm_usuario_p, 
			nm_usuario_p, 
			nr_nosso_numero_w, 
			nr_seq_cobr_escrit_p, 
			nextval('cobranca_escrit_log_seq'));
 
	end if;
 
	end;
end loop;
close c01;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_ret_cobr_santander_400 ( nr_seq_cobr_escrit_p bigint, nm_usuario_p text) FROM PUBLIC;

