-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ageint_consistir_proc_conv_qtd ( cd_estabelecimento_p bigint, dt_referencia_p timestamp, cd_agenda_p bigint, cd_convenio_p bigint, cd_categoria_p text, nr_seq_ageint_item_p bigint, cd_medico_p text, ie_medico_p text, cd_plano_p text, cd_pessoa_fisica_p text, ie_consistencia_p INOUT text, ie_agenda_p INOUT text, nr_seq_regra_p INOUT bigint, cd_procedimento_p agenda_paciente.cd_procedimento%type default null, nr_seq_proc_interno_p agenda_paciente.nr_seq_proc_interno%type default null, ie_origem_proced_p agenda_paciente.ie_origem_proced%type default null) AS $body$
DECLARE

cd_procedimento_w	bigint;
nr_seq_proc_interno_w	bigint;
ie_origem_proced_w	bigint;					
cd_area_proced_w	area_procedimento.cd_area_procedimento%type;
cd_espec_proced_w	especialidade_proc.cd_especialidade%type;
cd_grupo_proced_w	grupo_proc.cd_grupo_proc%type;
nr_seq_regra_w		bigint;
ie_agenda_w		varchar(1)	:= 'S';
ds_mensagem_padrao_w	varchar(2000);
dia_da_semana_w		varchar(100);
ds_inicio_w		varchar(100);
ds_fim_w		varchar(100);
ds_hora_referencia_w	varchar(100);
hr_inicio_w			timestamp;
hr_fim_w			timestamp;
ie_consiste_qtd_hora_w	varchar(1);
ie_forma_consistencia_w	varchar(1)	:= 'M';
qt_regra_w		bigint;
cd_medico_regra_w	varchar(10);
ie_consistencia_w	varchar(255)	:= '';
qt_agenda_w		bigint;
dt_referencia_w		timestamp;
qt_agenda_adic_w	bigint;
qt_idade_pac_w		bigint;		
dt_nascimento_w		timestamp;
qt_idade_min_w		bigint;
qt_idade_max_w		bigint;
qt_regra_ag_qt_w		agenda_regra_quantidade.qt_regra%type;
ie_forma_consistencia_ag_qt_w 	agenda_regra_quantidade.ie_forma_consistencia%type;
ds_mensagem_ag_qt_w		agenda_regra_quantidade.ds_mensagem%type;
qt_feriado_w		bigint;
ie_validar_dias_semana_w	agenda_regra.ie_validar_dias_semana%type;
ie_tipo_convenio_w		bigint;
nr_seq_regra_nova_w		agenda_regra.nr_sequencia%type;
nr_seq_agenda_regra_w	agenda_regra.nr_sequencia%type;
nr_seq_agenda_int_w		agenda_integrada.nr_sequencia%type;
qtd_agenda_proc_w		agenda_regra.nr_seq_regra%type;
qt_regra_proc_w			agenda_regra.nr_seq_regra%type;
nr_seq_agenda_regra_old_w    agenda_regra.nr_sequencia%type;
			
C01 CURSOR FOR
	SELECT	coalesce(nr_sequencia,0)
	from	agenda_regra b,
		agenda a
	where	a.cd_agenda	= b.cd_agenda
	and	a.cd_agenda	= cd_agenda_p
	and	coalesce(a.ie_agenda_integrada,'N')	= 'S'
	and	coalesce(a.ie_situacao,'A') 		= 'A'
	and     a.cd_tipo_agenda	= 2
	and	((b.cd_convenio = cd_convenio_p) or (coalesce(b.cd_convenio::text, '') = ''))
	and	((b.ie_tipo_convenio = ie_tipo_convenio_w) or (coalesce(b.ie_tipo_convenio::text, '') = ''))
	and	((b.cd_plano_convenio = cd_plano_p) or (coalesce(b.cd_plano_convenio::text, '') = ''))	
	and	((b.cd_categoria = cd_categoria_p) or (coalesce(cd_categoria::text, '') = ''))
	and	((b.cd_medico = cd_medico_p) or (coalesce(cd_medico::text, '') = '') or ((coalesce(cd_medico_p::text, '') = '') and (coalesce(b.cd_medico::text, '') = '')))
	and (coalesce(ie_medico, 'E') = ie_medico_p)
	and	((b.cd_area_proc = cd_area_proced_w) or (coalesce(b.cd_area_proc::text, '') = ''))
	and	((b.cd_especialidade = cd_espec_proced_w) or (coalesce(b.cd_especialidade::text, '') = ''))
	and	((b.cd_grupo_proc = cd_grupo_proced_w) or (coalesce(b.cd_grupo_proc::text, '') = ''))
	and	((b.nr_seq_proc_interno = nr_seq_proc_interno_w) or (coalesce(b.nr_seq_proc_interno::text, '') = ''))
	and	((b.cd_procedimento = cd_procedimento_w) or (coalesce(b.cd_procedimento::text, '') = ''))
	and	((coalesce(b.cd_procedimento::text, '') = '') or ((b.ie_origem_proced = ie_origem_proced_w) or (coalesce(b.ie_origem_proced::text, '') = '')))
	and	((coalesce(b.ie_dia_semana,dia_da_Semana_w) = dia_da_Semana_w) or ((coalesce(b.ie_dia_semana,dia_da_Semana_w) = 9) and (dia_da_Semana_w not in (7,1))))
	and	dt_referencia_p between to_date(to_char(dt_referencia_p,'dd/mm/yyyy') || ' ' || coalesce(to_char(dt_inicio_agenda,'hh24:mi:ss'),'00:00:00'),'dd/mm/yyyy hh24:mi:ss') and
					to_date(to_char(dt_referencia_p,'dd/mm/yyyy') || ' ' || coalesce(to_char(dt_fim_agenda,'hh24:mi:ss'),'23:59:59'),'dd/mm/yyyy hh24:mi:ss')
	and	(b.qt_regra IS NOT NULL AND b.qt_regra::text <> '')
	and	coalesce(qt_idade_pac_w,0) >= coalesce(qt_idade_min,0)
	and 	coalesce(qt_idade_pac_w,0) <= coalesce(qt_idade_max,999)	
	and	coalesce(b.ie_situacao,'A') = 'A'
	and ((not exists (SELECT 1 from agenda_regra_proc x where x.nr_seq_regra = b.nr_sequencia)) or (b.nr_sequencia = nr_seq_regra_nova_w))
	order by coalesce(b.cd_convenio,0),		 
		coalesce(b.cd_procedimento,0), 
		coalesce(b.nr_seq_proc_interno,0),
		coalesce(b.cd_grupo_proc,0),
		coalesce(b.cd_especialidade,0),
		coalesce(b.cd_area_proc,0),
		coalesce(b.nr_seq_forma_org,0),
		coalesce(b.nr_seq_subgrupo,0),
		coalesce(b.nr_seq_grupo,0),
		coalesce(b.cd_medico,'0'),
		coalesce(b.cd_perfil,0),
		coalesce(b.nr_seq_classif,0);
		
c03 CURSOR FOR
	SELECT	qt_regra,
			ie_forma_consistencia,
			ds_mensagem
	from	agenda_regra_quantidade
	where	ie_situacao = 'A'
	and		nr_seq_regra = nr_seq_regra_w
	order by qt_regra desc;

C04 CURSOR FOR
	SELECT	coalesce(b.nr_sequencia,0)
	from	agenda_regra b,
		agenda a,
		agenda_regra_proc c 
	where	a.cd_agenda	= b.cd_agenda
	and b.nr_sequencia = c.nr_seq_regra
	and	a.cd_agenda	= cd_agenda_p
	and	coalesce(a.ie_agenda_integrada,'N')	= 'S'
	and	coalesce(a.ie_situacao,'A') 		= 'A'
	and     a.cd_tipo_agenda	= 2
	and	((b.cd_convenio = cd_convenio_p) or (coalesce(b.cd_convenio::text, '') = ''))
	and	((b.ie_tipo_convenio = ie_tipo_convenio_w) or (coalesce(b.ie_tipo_convenio::text, '') = ''))
	and	((b.cd_plano_convenio = cd_plano_p) or (coalesce(b.cd_plano_convenio::text, '') = ''))	
	and	((b.cd_categoria = cd_categoria_p) or (coalesce(cd_categoria::text, '') = ''))
	and	((b.cd_medico = cd_medico_p) or (coalesce(cd_medico::text, '') = '') or ((coalesce(cd_medico_p::text, '') = '') and (coalesce(b.cd_medico::text, '') = '')))
	and (coalesce(ie_medico, 'E') = ie_medico_p)
	and	((b.cd_area_proc = cd_area_proced_w) or (coalesce(b.cd_area_proc::text, '') = ''))
	and	((b.cd_especialidade = cd_espec_proced_w) or (coalesce(b.cd_especialidade::text, '') = ''))
	and	((b.cd_grupo_proc = cd_grupo_proced_w) or (coalesce(b.cd_grupo_proc::text, '') = ''))
	and	((b.nr_seq_proc_interno = nr_seq_proc_interno_w) or (coalesce(b.nr_seq_proc_interno::text, '') = ''))
	and	((b.cd_procedimento = cd_procedimento_w) or (coalesce(b.cd_procedimento::text, '') = ''))
	and	((coalesce(b.cd_procedimento::text, '') = '') or ((b.ie_origem_proced = ie_origem_proced_w) or (coalesce(b.ie_origem_proced::text, '') = '')))
	and	((coalesce(b.ie_dia_semana,dia_da_Semana_w) = dia_da_Semana_w) or ((coalesce(b.ie_dia_semana,dia_da_Semana_w) = 9) and (dia_da_Semana_w not in (7,1))))
	and	dt_referencia_p between to_date(to_char(dt_referencia_p,'dd/mm/yyyy') || ' ' || coalesce(to_char(dt_inicio_agenda,'hh24:mi:ss'),'00:00:00'),'dd/mm/yyyy hh24:mi:ss') and
					to_date(to_char(dt_referencia_p,'dd/mm/yyyy') || ' ' || coalesce(to_char(dt_fim_agenda,'hh24:mi:ss'),'23:59:59'),'dd/mm/yyyy hh24:mi:ss')
	and	(b.qt_regra IS NOT NULL AND b.qt_regra::text <> '')
	and	coalesce(qt_idade_pac_w,0) >= coalesce(qt_idade_min,0) 
	and 	coalesce(qt_idade_pac_w,0) <= coalesce(qt_idade_max,999)	
	and	coalesce(b.ie_situacao,'A') = 'A'
	order by coalesce(b.cd_convenio,0),		 
		coalesce(b.cd_procedimento,0), 
		coalesce(b.nr_seq_proc_interno,0),
		coalesce(b.cd_grupo_proc,0),
		coalesce(b.cd_especialidade,0),
		coalesce(b.cd_area_proc,0),
		coalesce(b.nr_seq_forma_org,0),
		coalesce(b.nr_seq_subgrupo,0),
		coalesce(b.nr_seq_grupo,0),
		coalesce(b.cd_medico,'0'),
		coalesce(b.cd_perfil,0),
		coalesce(b.nr_seq_classif,0);
		

BEGIN

dt_referencia_w		:= trunc(dt_referencia_p, 'month');

if (coalesce(cd_pessoa_fisica_p::text, '') = '') then
	select	max(a.dt_nascimento)
	into STRICT	dt_nascimento_w
	from	agenda_integrada a,
		agenda_integrada_item b
	where	b.nr_seq_agenda_int = a.nr_sequencia
	and	b.nr_sequencia = nr_seq_ageint_item_p;
	if (dt_nascimento_w IS NOT NULL AND dt_nascimento_w::text <> '') then
		qt_idade_pac_w		:= obter_idade(dt_nascimento_w, clock_timestamp(), 'A');
	end if;
else
	qt_idade_pac_w		:= obter_idade_pf(cd_pessoa_fisica_p,clock_timestamp(),'A');
end if;

select  Obter_Cod_Dia_Semana(dt_referencia_p),
	to_char(dt_referencia_p,'hh24:mi')/*, 
	obter_se_feriado(cd_estabelecimento_p, dt_referencia_p)*/
into STRICT 	dia_da_semana_w,
	ds_hora_referencia_w/*,
	qt_feriado_w*/
;

if ((cd_procedimento_p IS NOT NULL AND cd_procedimento_p::text <> '') and
		(nr_seq_proc_interno_p IS NOT NULL AND nr_seq_proc_interno_p::text <> '') and
			(ie_origem_proced_p IS NOT NULL AND ie_origem_proced_p::text <> '')) then

	cd_procedimento_w := cd_procedimento_p;
	nr_seq_proc_interno_w := nr_seq_proc_interno_p;
	ie_origem_proced_w := ie_origem_proced_p;
else
	select	max(cd_procedimento),
			max(nr_seq_proc_interno),
			max(ie_origem_proced)
	into STRICT	cd_procedimento_w,
			nr_seq_proc_interno_w,
			ie_origem_proced_w
	from	agenda_integrada_item
	where	nr_sequencia = nr_seq_ageint_item_p;
end if;

/* obter informacao procedimento */

select	coalesce(max(cd_area_procedimento),0),
	coalesce(max(cd_especialidade),0),
	coalesce(max(cd_grupo_proc),0)
into STRICT	cd_area_proced_w,
	cd_espec_proced_w,
	cd_grupo_proced_w
from	estrutura_procedimento_v
where	cd_procedimento = cd_procedimento_w
and	ie_origem_proced = ie_origem_proced_w;

select	max(ie_tipo_convenio)
into STRICT 	ie_tipo_convenio_w
from 	convenio
where 	cd_convenio = cd_convenio_p;

select max(a.nr_seq_agenda_int)
into STRICT   nr_seq_agenda_int_w
from   agenda_integrada_item a
where  a.nr_sequencia = nr_seq_ageint_item_p;	

if (coalesce(nr_seq_agenda_int_w,0) > 0) then

	select 	coalesce(max(1),0)
	into STRICT	qtd_agenda_proc_w
	from 	agenda_regra_proc a, agenda_regra b 
	where 	a.nr_seq_Regra = b.nr_sequencia 
	and (b.cd_agenda = cd_agenda_p or (coalesce(b.cd_agenda::text, '') = '' and b.cd_convenio = cd_convenio_p))  LIMIT 1;

	if (qtd_agenda_proc_w > 0) then
		open C04;
		loop                                                                          
		fetch C04 into                                                                
			nr_seq_agenda_regra_w;
		EXIT WHEN NOT FOUND; /* apply on C04 */
			begin                                                                        
			if (coalesce(nr_seq_agenda_regra_old_w::text, '') = '' or nr_seq_agenda_regra_old_w <> nr_seq_agenda_regra_w) then
				select 	coalesce(max(1),0)
				into STRICT	qt_regra_proc_w
				from 	agenda_regra_proc x, agenda_integrada_item b, estrutura_procedimento_v c
				where	x.nr_seq_regra = nr_seq_agenda_regra_w  
				and		b.nr_seq_agenda_int = nr_seq_agenda_int_w
				and 	b.ie_tipo_agendamento in ('E','S')				
				and		b.nr_sequencia <> nr_seq_ageint_item_p
				and  	c.cd_procedimento = b.cd_procedimento
				and  	c.ie_origem_proced = b.ie_origem_proced
				and 	((b.nr_seq_proc_interno = x.nr_seq_proc_interno) or (coalesce(x.nr_seq_proc_interno::text, '') = ''))
				and		((b.cd_procedimento = x.cd_procedimento) or (coalesce(x.cd_procedimento::text, '') = ''))
				and		((b.ie_origem_proced = x.ie_origem_proced) or (coalesce(x.ie_origem_proced::text, '') = ''))
				and		((c.cd_area_procedimento = x.cd_area_procedimento) or (coalesce(x.cd_area_procedimento::text, '') = ''))
				and		((c.cd_especialidade = x.cd_especialidade) or (coalesce(x.cd_especialidade::text, '') = ''))
				and		((c.cd_grupo_proc = x.cd_grupo_proc) or (coalesce(x.cd_grupo_proc::text, '') = ''));
			end if;
			if (qt_regra_proc_w > 0) then
				nr_seq_regra_nova_w	:= nr_seq_agenda_regra_w;
			end if;
			qt_regra_proc_w := 0;
			nr_seq_agenda_regra_old_w := nr_seq_agenda_regra_w;
			end;
		end loop;
		close C04;
	end if;

end if;

open C01;
loop
fetch C01 into	
	nr_seq_regra_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	nr_seq_regra_w := nr_seq_regra_w;
	end;
end loop;
close C01;

if (nr_seq_regra_w > 0) then
		
	select	coalesce(max(ie_permite),'S'),
		max(ds_mensagem)
	into STRICT	ie_agenda_w,
		ds_mensagem_padrao_w
	from	agenda_regra
	where	nr_sequencia = nr_seq_regra_w;
	
	
	select 	TO_CHAR(dt_inicio_agenda,'hh24:mi'),
		TO_CHAR(dt_fim_agenda,'hh24:mi'),
		hr_inicio,
		hr_fim,
		coalesce(ie_consiste_qtd_hora,'N'),
		ie_validar_dias_semana
	into STRICT	ds_inicio_w,
		ds_fim_w,
		hr_inicio_w,
		hr_fim_w,
		ie_consiste_qtd_hora_w,
		ie_validar_dias_semana_w
	from	agenda_regra
	where	nr_sequencia 	= nr_seq_regra_w
	and	((coalesce(ie_dia_semana,dia_da_Semana_w) = dia_da_Semana_w) or
		 ((coalesce(ie_dia_semana,dia_da_Semana_w) = 9) and (dia_da_Semana_w between 2 and 6)));
				
	if (ie_agenda_w = 'S') then		
		if 	(ds_inicio_w IS NOT NULL AND ds_inicio_w::text <> '' AND ds_fim_w IS NOT NULL AND ds_fim_w::text <> '') then
		
			if (ds_hora_referencia_w < ds_inicio_w ) or (ds_hora_referencia_w > ds_fim_w) then
				ie_agenda_w := 'H';							
				if (ds_mensagem_padrao_w IS NOT NULL AND ds_mensagem_padrao_w::text <> '') then
					ie_consistencia_w := substr(ds_mensagem_padrao_w,1,255);
				else
					ie_consistencia_w := obter_texto_tasy(262542, wheb_usuario_pck.get_nr_seq_idioma);
				end if;
				
			end if;
		end if;		
		
		select	coalesce(max(qt_regra),0),
			coalesce(max(ie_forma_consistencia),'M'),
			max(cd_medico),
			coalesce(max(qt_idade_min),0),
			coalesce(max(qt_idade_max),0)
		into STRICT	qt_regra_w,
			ie_forma_consistencia_w,
			cd_medico_regra_w,
			qt_idade_min_w,
			qt_idade_max_w
		from	agenda_regra
		where	nr_sequencia = nr_seq_regra_w;	
		
		select CASE WHEN qt_idade_min_w=0 THEN  -1  ELSE qt_idade_min_w END
		into STRICT  qt_idade_min_w
		;
		
		select CASE WHEN qt_idade_max_w=0 THEN  999  ELSE qt_idade_max_w END
		into STRICT  qt_idade_max_w
		;
					
		if (qt_regra_w	> 0) then
			
			select	count(*)
			into STRICT	qt_agenda_w
			from	agenda_paciente
			where	cd_agenda			= cd_agenda_p
			and	(((ie_forma_consistencia_w = 'M')	and (trunc(dt_agenda, 'month')	= dt_referencia_w)) or
				 ((ie_forma_consistencia_w = 'D')	and (to_char(dt_agenda, 'dd/mm/yyyy')	= to_char(dt_referencia_p, 'dd/mm/yyyy'))) or
				 ((ie_forma_consistencia_w = 'A')	and (trunc(dt_agenda, 'year')	= trunc(dt_referencia_w,'year'))))
			and	ie_status_agenda		<> 'C'
			and	coalesce(qt_idade_paciente,0) between coalesce(qt_idade_min_w,-1) and coalesce(qt_idade_max_w,999)
			and	((ie_consiste_qtd_hora_w = 'S'
				and hr_inicio between to_date(to_char(dt_agenda, 'dd/mm/yyyy') || ' ' || coalesce(to_char(hr_inicio_w,'hh24:mi:ss'),'00:00:00'),'dd/mm/yyyy hh24:mi:ss') 
									and to_date(to_char(dt_agenda, 'dd/mm/yyyy') || ' ' || coalesce(to_char(hr_fim_w,'hh24:mi:ss'),'23:59:59'),'dd/mm/yyyy hh24:mi:ss')) 
				or	ie_consiste_qtd_hora_w	= 'N')
			and	(((((CD_MEDICO_EXEC = cd_medico_regra_w) or (coalesce(cd_medico_regra_w::text, '') = ''))) and (ie_medico_p = 'E')) or 
				((((CD_MEDICO_REQ = cd_medico_regra_w) or (coalesce(cd_medico_regra_w::text, '') = ''))) and (ie_medico_p = 'R')))					
			and (cd_procedimento = cd_procedimento_w)
			and (nr_seq_proc_interno = nr_seq_proc_interno_w)
			and (ie_origem_proced = ie_origem_proced_w)
			and 	((coalesce(ie_validar_dias_semana_w,'A') = 'A')
			or (ie_validar_dias_semana_w = 'F' and obter_se_feriado(cd_estabelecimento_p, dt_agenda) > 0)
			or (ie_validar_dias_semana_w = 'D' and obter_se_feriado(cd_estabelecimento_p, dt_agenda) = 0));
			
			if (ie_consiste_qtd_hora_w	= 'S') then
				select	count(*)
				into STRICT	qt_agenda_adic_w
				from	agenda_paciente a,
						AGENDA_PACIENTE_PROC b
				where	cd_agenda			= cd_agenda_p
				and		a.nr_sequencia		= b.nr_sequencia
				and	coalesce(a.qt_idade_paciente,0) between coalesce(qt_idade_min_w,-1) and coalesce(qt_idade_max_w,999)
				and	(((ie_forma_consistencia_w = 'M')	and (trunc(dt_agenda, 'month')	= dt_referencia_w)) or
					 ((ie_forma_consistencia_w = 'D')	and (to_char(dt_agenda, 'dd/mm/yyyy')	= to_char(dt_referencia_p, 'dd/mm/yyyy'))) or
					 ((ie_forma_consistencia_w = 'A')	and (trunc(dt_agenda, 'year')	= trunc(dt_referencia_w,'year'))))
				and	ie_status_agenda		<> 'C'
				and	hr_inicio between to_date(to_char(dt_agenda, 'dd/mm/yyyy') || ' ' || coalesce(to_char(hr_inicio_w,'hh24:mi:ss'),'00:00:00'),'dd/mm/yyyy hh24:mi:ss')
										and to_date(to_char(dt_agenda, 'dd/mm/yyyy') || ' ' || coalesce(to_char(hr_fim_w,'hh24:mi:ss'),'23:59:59'),'dd/mm/yyyy hh24:mi:ss')
				and	(((((a.CD_MEDICO_EXEC = cd_medico_regra_w) or (coalesce(cd_medico_regra_w::text, '') = ''))) and (ie_medico_p = 'E')) or 
					((((a.CD_MEDICO_REQ = cd_medico_regra_w) or (coalesce(cd_medico_regra_w::text, '') = ''))) and (ie_medico_p = 'R')))					
				and (b.cd_procedimento = cd_procedimento_w)
				and (b.nr_seq_proc_interno = nr_seq_proc_interno_w)
				and (b.ie_origem_proced = ie_origem_proced_w)
				and 	((coalesce(ie_validar_dias_semana_w,'A') = 'A')
				or (ie_validar_dias_semana_w = 'F' and obter_se_feriado(cd_estabelecimento_p, dt_agenda) > 0)
				or (ie_validar_dias_semana_w = 'D' and obter_se_feriado(cd_estabelecimento_p, dt_agenda) = 0));

				qt_agenda_w	:= qt_Agenda_w + qt_agenda_adic_w;
			end if;
							
			if (qt_agenda_w >= qt_regra_w) then
				ie_agenda_w	:= 'Q';
			end if;
			
			if ( ie_agenda_w <> 'Q' )  then
				open C03;
				loop
				fetch C03 into	
					qt_regra_ag_qt_w,
					ie_forma_consistencia_ag_qt_w,
					ds_mensagem_ag_qt_w;
				EXIT WHEN NOT FOUND; /* apply on C03 */
					begin
					
					select	count(*)
					into STRICT	qt_agenda_w
					from	agenda_paciente
					where	cd_agenda			= cd_agenda_p
					and	((( ie_forma_consistencia_ag_qt_w = 'M')	and (trunc(dt_agenda, 'month')	= dt_referencia_w)) or
						 (( ie_forma_consistencia_ag_qt_w = 'D')	and (to_char(dt_agenda, 'dd/mm/yyyy')	= to_char(dt_referencia_p, 'dd/mm/yyyy'))) or
						 (( ie_forma_consistencia_ag_qt_w = 'A')	and (trunc(dt_agenda, 'year')	= trunc(dt_referencia_w,'year'))))
					and	ie_status_agenda		<> 'C'
					and	coalesce(qt_idade_paciente,0) between coalesce(qt_idade_min_w,-1) and coalesce(qt_idade_max_w,999)
					and	((ie_consiste_qtd_hora_w = 'S'
						and hr_inicio between to_date(to_char(dt_agenda, 'dd/mm/yyyy') || ' ' || coalesce(to_char(hr_inicio_w,'hh24:mi:ss'),'00:00:00'),'dd/mm/yyyy hh24:mi:ss') 
											and to_date(to_char(dt_agenda, 'dd/mm/yyyy') || ' ' || coalesce(to_char(hr_fim_w,'hh24:mi:ss'),'23:59:59'),'dd/mm/yyyy hh24:mi:ss')) 
						or	ie_consiste_qtd_hora_w	= 'N')
					and	(((((CD_MEDICO_EXEC = cd_medico_regra_w) or (coalesce(cd_medico_regra_w::text, '') = ''))) and (ie_medico_p = 'E')) or 
						((((CD_MEDICO_REQ = cd_medico_regra_w) or (coalesce(cd_medico_regra_w::text, '') = ''))) and (ie_medico_p = 'R')))					
					and (cd_procedimento = cd_procedimento_w)
					and (nr_seq_proc_interno = nr_seq_proc_interno_w)
					and (ie_origem_proced = ie_origem_proced_w)
					and 	((coalesce(ie_validar_dias_semana_w,'A') = 'A')
					or (ie_validar_dias_semana_w = 'F' and obter_se_feriado(cd_estabelecimento_p, dt_agenda) > 0)
					or (ie_validar_dias_semana_w = 'D' and obter_se_feriado(cd_estabelecimento_p, dt_agenda) = 0));	
					
					if (ie_consiste_qtd_hora_w	= 'S') then
						select	count(*)
						into STRICT	qt_agenda_adic_w
						from	agenda_paciente a,
								AGENDA_PACIENTE_PROC b
						where	cd_agenda			= cd_agenda_p
						and		a.nr_sequencia		= b.nr_sequencia
						and	coalesce(a.qt_idade_paciente,0) between coalesce(qt_idade_min_w,-1) and coalesce(qt_idade_max_w,999)
						and	((( ie_forma_consistencia_ag_qt_w = 'M')	and (trunc(dt_agenda, 'month')	= dt_referencia_w)) or
							 (( ie_forma_consistencia_ag_qt_w = 'D')	and (to_char(dt_agenda, 'dd/mm/yyyy')	= to_char(dt_referencia_p, 'dd/mm/yyyy'))) or
							 (( ie_forma_consistencia_ag_qt_w = 'A')	and (trunc(dt_agenda, 'year')	= trunc(dt_referencia_w,'year'))))
						and	ie_status_agenda		<> 'C'
						and	hr_inicio between to_date(to_char(dt_agenda, 'dd/mm/yyyy') || ' ' || coalesce(to_char(hr_inicio_w,'hh24:mi:ss'),'00:00:00'),'dd/mm/yyyy hh24:mi:ss')
												and to_date(to_char(dt_agenda, 'dd/mm/yyyy') || ' ' || coalesce(to_char(hr_fim_w,'hh24:mi:ss'),'23:59:59'),'dd/mm/yyyy hh24:mi:ss')
						and	(((((a.CD_MEDICO_EXEC = cd_medico_regra_w) or (coalesce(cd_medico_regra_w::text, '') = ''))) and (ie_medico_p = 'E')) or 
							((((a.CD_MEDICO_REQ = cd_medico_regra_w) or (coalesce(cd_medico_regra_w::text, '') = ''))) and (ie_medico_p = 'R')))					
						and (b.cd_procedimento = cd_procedimento_w)
						and (b.nr_seq_proc_interno = nr_seq_proc_interno_w)
						and (b.ie_origem_proced = ie_origem_proced_w)
						and 	((coalesce(ie_validar_dias_semana_w,'A') = 'A')
						or (ie_validar_dias_semana_w = 'F' and obter_se_feriado(cd_estabelecimento_p, dt_agenda) > 0)
						or (ie_validar_dias_semana_w = 'D' and obter_se_feriado(cd_estabelecimento_p, dt_agenda) = 0));

						qt_agenda_w	:= qt_agenda_w + qt_agenda_adic_w;
					end if;	
					
					if ( qt_agenda_w >= qt_regra_ag_qt_w ) then
						ie_agenda_w	:= 'Q';
						if (ds_mensagem_ag_qt_w IS NOT NULL AND ds_mensagem_ag_qt_w::text <> '') then
							ds_mensagem_padrao_w := ds_mensagem_ag_qt_w;
						end if;
						EXIT;
					end if;
					
					end;
				end loop;
				close C03;
			end if;
				
		end if;
	else		
		if 	(ds_inicio_w IS NOT NULL AND ds_inicio_w::text <> '' AND ds_fim_w IS NOT NULL AND ds_fim_w::text <> '') then
			if (ie_agenda_w = 'N') then
				if (ds_hora_referencia_w >= ds_inicio_w ) and (ds_hora_referencia_w <= ds_fim_w) then
					ie_agenda_w := 'H';							
					if (ds_mensagem_padrao_w IS NOT NULL AND ds_mensagem_padrao_w::text <> '') then
						ie_consistencia_w := substr(ds_mensagem_padrao_w,1,255);
					else
						ie_consistencia_w := obter_texto_tasy(262540, wheb_usuario_pck.get_nr_seq_idioma);

					end if;
				else
					ie_agenda_w := 'S';
				end if;	
			end if;
		end if;
	end if;

	if (ie_agenda_w in ('N', 'Q'))  then	
		if (ds_mensagem_padrao_w IS NOT NULL AND ds_mensagem_padrao_w::text <> '') then
			ie_consistencia_w := substr(ds_mensagem_padrao_w,1,255);
		else
			ie_consistencia_w := obter_texto_tasy(262538, wheb_usuario_pck.get_nr_seq_idioma);
		end if;						
	end if;	
end if;

--20011,qt_agenda_w ||'-'||qt_regra_w||'-'||ie_agenda_w||'#@#@');
ie_consistencia_p := ie_consistencia_w;
nr_seq_regra_p	:= nr_seq_regra_w;
ie_agenda_p := ie_agenda_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ageint_consistir_proc_conv_qtd ( cd_estabelecimento_p bigint, dt_referencia_p timestamp, cd_agenda_p bigint, cd_convenio_p bigint, cd_categoria_p text, nr_seq_ageint_item_p bigint, cd_medico_p text, ie_medico_p text, cd_plano_p text, cd_pessoa_fisica_p text, ie_consistencia_p INOUT text, ie_agenda_p INOUT text, nr_seq_regra_p INOUT bigint, cd_procedimento_p agenda_paciente.cd_procedimento%type default null, nr_seq_proc_interno_p agenda_paciente.nr_seq_proc_interno%type default null, ie_origem_proced_p agenda_paciente.ie_origem_proced%type default null) FROM PUBLIC;

