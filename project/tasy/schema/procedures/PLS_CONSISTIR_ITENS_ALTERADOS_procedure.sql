-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_consistir_itens_alterados ( nr_seq_auditoria_p bigint, nr_seq_item_p bigint, nr_seq_requisicao_p bigint, nr_seq_guia_p bigint, ie_tipo_item_p text, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Ao alterar um item da analise, essa rotina sera chamada para reconsistir o item alterado
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[ X]  Objetos do dicionario [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */

/*
ie_tipo_item_p
P - Procediemnto
M - Material
*/
ie_status_w			varchar(4);
ie_tipo_processo_w		varchar(2);

nr_seq_ocorrencia_w		bigint;
nr_seq_grupo_w			bigint;
nr_seq_ordem_w			bigint;
qt_grupos_w			bigint;
nr_seq_guia_mat_w		bigint;
nr_seq_segurado_w		bigint;

nr_seq_proc_origem_w		bigint;
nr_seq_mat_origem_w		bigint;

cd_procedimento_w		bigint;
ie_origem_proced_w		integer;
nr_seq_material_w		bigint;
vl_item_w			double precision;
qt_ajuste_w			pls_auditoria_item.qt_ajuste%type;

ie_tipo_intercambio_w		varchar(10);
ie_pacote_ptu_w			pls_auditoria_item.ie_pacote_ptu%type;

ie_status_atual_w		varchar(4);
ie_status_solicitacao_w		pls_auditoria_item.ie_status_solicitacao%type;
ie_status_analise_w		pls_auditoria_item.ie_status%type;

C01 CURSOR FOR
	SELECT	nr_seq_ocorrencia
	from	pls_ocorrencia_benef
	where	nr_seq_proc	= nr_seq_proc_origem_w
	and	nr_seq_requisicao = nr_seq_requisicao_p
	
union

	SELECT	nr_seq_ocorrencia
	from	pls_ocorrencia_benef
	where	nr_seq_mat	= nr_seq_mat_origem_w
	and	nr_seq_requisicao = nr_seq_requisicao_p;

C02 CURSOR FOR
	SELECT	nr_seq_grupo
	from	pls_ocorrencia_grupo
	where	nr_seq_ocorrencia	= nr_seq_ocorrencia_w
	and	(((nr_seq_guia_p IS NOT NULL AND nr_seq_guia_p::text <> '')	and (coalesce(ie_autorizacao::text, '') = ''	or ie_autorizacao	= 'S'))
	or ((nr_seq_requisicao_p IS NOT NULL AND nr_seq_requisicao_p::text <> '')	and (coalesce(ie_requisicao::text, '') = ''	or ie_requisicao	= 'S')))
	and	ie_situacao		= 'A';
	
C03 CURSOR FOR
	SELECT	nr_seq_ocorrencia
	from	pls_ocorrencia_benef
	where	nr_seq_proc	= nr_seq_proc_origem_w
	and	nr_seq_guia_plano = nr_seq_guia_p
	
union

	SELECT	nr_seq_ocorrencia
	from	pls_ocorrencia_benef
	where	nr_seq_mat	= nr_seq_mat_origem_w
	and	nr_seq_guia_plano = nr_seq_guia_p;

cMatAud CURSOR FOR
	SELECT	nr_sequencia,
		nr_seq_mat_origem
	from	pls_auditoria_item
	where	nr_seq_auditoria	= nr_seq_auditoria_p
	and	nr_sequencia		<> nr_seq_item_p
	and	coalesce(nr_seq_proc_origem::text, '') = ''
	and	(nr_seq_mat_origem IS NOT NULL AND nr_seq_mat_origem::text <> '')
	and	ie_status_solicitacao	in ('A','N');

cProcAud CURSOR FOR
	SELECT	nr_sequencia,
		nr_seq_proc_origem
	from	pls_auditoria_item
	where	nr_seq_auditoria	= nr_seq_auditoria_p
	and	nr_sequencia		<> nr_seq_item_p
	and	coalesce(nr_seq_mat_origem::text, '') = ''
	and	(nr_seq_proc_origem IS NOT NULL AND nr_seq_proc_origem::text <> '')
	and	ie_status_solicitacao	in ('A','N');

BEGIN

if (nr_seq_requisicao_p	<> 0) then
	begin
		select	ie_tipo_processo,
			nr_seq_segurado,
			ie_tipo_intercambio
		into STRICT	ie_tipo_processo_w,
			nr_seq_segurado_w,
			ie_tipo_intercambio_w
		from	pls_requisicao
		where	nr_sequencia	= nr_seq_requisicao_p;
	exception
	when others then
		ie_tipo_processo_w	:= null;
		ie_tipo_intercambio_w	:= 'X';
	end;
	if (ie_tipo_item_p	= 'P') then
		/*select	pls_requisicao_proc_seq.nextval
		into	nr_seq_req_proc_w
		from	dual;*/
		
		select	nr_seq_proc_origem,
			cd_procedimento,
			ie_origem_proced, 
			qt_ajuste,
			vl_item,
			ie_pacote_ptu
		into STRICT	nr_seq_proc_origem_w,
			cd_procedimento_w,
			ie_origem_proced_w,
			qt_ajuste_w,
			vl_item_w,
			ie_pacote_ptu_w
		from	pls_auditoria_item
		where	nr_seq_auditoria	= nr_seq_auditoria_p
		and	nr_sequencia		= nr_seq_item_p;

		update	pls_requisicao_proc
		set	ie_status		= 'U',
			cd_procedimento		= cd_procedimento_w,
			ie_origem_proced 	= ie_origem_proced_w,
			qt_solicitado		= qt_ajuste_w,
			dt_atualizacao		= clock_timestamp(),
			nm_usuario		= nm_usuario_p,
			ie_estagio		= 'AE',
			vl_procedimento		= vl_item_w,
			cd_procedimento_ptu	 = NULL,
			ie_pacote_ptu		= coalesce(ie_pacote_ptu_w,'N')
		where	nr_sequencia		= nr_seq_proc_origem_w;			
			
		
		CALL pls_consistir_requisicao_proc(	nr_seq_proc_origem_w, cd_estabelecimento_p, nm_usuario_p);
		CALL pls_gerar_ocor_aut_combinada(	nr_seq_segurado_w, null, nr_seq_requisicao_p,
						null, null, null,
						null, null, null,
						nm_usuario_p, cd_estabelecimento_p);
						
		/*aaschlote 16/10/2013 656658 - Rotina generica para a consistencia da liminar juridica de ocorrencia*/

		CALL pls_consist_lim_ocorr_req_guia(nr_seq_segurado_w,nr_seq_requisicao_p,null,ie_tipo_intercambio_w,cd_estabelecimento_p,nm_usuario_p);
		
		CALL pls_inserir_ocorr_cabeca_item(	nr_seq_requisicao_p, nr_seq_proc_origem_w, null, nm_usuario_p);
		CALL pls_ger_ocor_glos_aud_req_item(	nr_seq_auditoria_p, nr_seq_item_p, nr_seq_proc_origem_w, 0, nm_usuario_p);
		
		if (ie_tipo_processo_w	= 'I') then
			CALL pls_gerar_de_para_req_intercam(	nr_seq_proc_origem_w, null, null,
							null, null, null,
							null, cd_estabelecimento_p, nm_usuario_p);
		end if;
		
		begin
		select	ie_status
		into STRICT	ie_status_w
		from	pls_requisicao_proc
		where	nr_sequencia	= nr_seq_proc_origem_w;
		exception
		when others then
			ie_status_w	:= 'X';
		end;

		update	pls_auditoria_item
		set	ie_status		= CASE WHEN ie_status_w='A' THEN  'P' WHEN ie_status_w='S' THEN  'A' WHEN ie_status_w='I' THEN  'A'  ELSE 'P' END ,
			ie_status_solicitacao	= CASE WHEN ie_status_w='A' THEN  'P' WHEN ie_status_w='S' THEN  'A' WHEN ie_status_w='I' THEN  'A'  ELSE 'P' END
			--nr_seq_proc_origem	= nr_seq_proc_origem_w
		where	nr_sequencia		= nr_seq_item_p;
	elsif (ie_tipo_item_p	= 'M') then
		/*select	pls_requisicao_mat_seq.nextval
		into	nr_seq_req_mat_w
		from	dual;*/
		
		select	nr_seq_mat_origem,
			nr_seq_material,			
			qt_ajuste,
			vl_item
		into STRICT	nr_seq_mat_origem_w,
			nr_seq_material_w,
			qt_ajuste_w,
			vl_item_w
		from	pls_auditoria_item
		where	nr_seq_auditoria	= nr_seq_auditoria_p
		and	nr_sequencia		= nr_seq_item_p;

		update	pls_requisicao_mat
		set	ie_status		= 'U',
			nr_seq_material		= nr_seq_material_w,			
			qt_solicitado		= qt_ajuste_w,
			dt_atualizacao		= clock_timestamp(),
			nm_usuario		= nm_usuario_p,
			ie_estagio		= 'AE',
			vl_material		= vl_item_w,
			cd_material_ptu		 = NULL
		where	nr_sequencia		= nr_seq_mat_origem_w;

		CALL pls_consistir_requisicao_mat(	nr_seq_mat_origem_w, cd_estabelecimento_p, nm_usuario_p);
		CALL pls_gerar_ocor_aut_combinada(	nr_seq_segurado_w, null, nr_seq_requisicao_p,
						null, null, null,
						null, null, null,
						nm_usuario_p, cd_estabelecimento_p);
						
		/*aaschlote 16/10/2013 656658 - Rotina generica para a consistencia da liminar juridica de ocorrencia*/

		CALL pls_consist_lim_ocorr_req_guia(nr_seq_segurado_w,nr_seq_requisicao_p,null,ie_tipo_intercambio_w,cd_estabelecimento_p,nm_usuario_p);
		
		CALL pls_inserir_ocorr_cabeca_item(	nr_seq_requisicao_p, null, nr_seq_mat_origem_w, nm_usuario_p);
		CALL pls_ger_ocor_glos_aud_req_item(	nr_seq_auditoria_p, nr_seq_item_p, 0, nr_seq_mat_origem_w, nm_usuario_p);
		
		if (ie_tipo_processo_w	= 'I') then
			CALL pls_gerar_de_para_req_intercam(	null, nr_seq_mat_origem_w, null,
							null, null, null,
							null, cd_estabelecimento_p, nm_usuario_p);
		end if;

		begin
		select	ie_status
		into STRICT	ie_status_w
		from	pls_requisicao_mat
		where	nr_sequencia	= nr_seq_mat_origem_w;
		exception
		when others then
			ie_status_w	:= 'X';
		end;

		update	pls_auditoria_item
		set	ie_status		= CASE WHEN ie_status_w='A' THEN  'P' WHEN ie_status_w='S' THEN  'A' WHEN ie_status_w='I' THEN  'A'  ELSE 'P' END ,
			ie_status_solicitacao	= CASE WHEN ie_status_w='A' THEN  'P' WHEN ie_status_w='S' THEN  'A' WHEN ie_status_w='I' THEN  'A'  ELSE 'P' END
			--nr_seq_mat_origem	= nr_seq_mat_origem_w
		where	nr_sequencia		= nr_seq_item_p;
	end if;

	if (ie_status_w	<> 'X') then
		if (ie_status_w	= 'A') then
			open C01;
			loop
			fetch C01 into
				nr_seq_ocorrencia_w;
			EXIT WHEN NOT FOUND; /* apply on C01 */
				begin
				open C02;
				loop
				fetch C02 into
					nr_seq_grupo_w;
				EXIT WHEN NOT FOUND; /* apply on C02 */
					begin
					select	count(1)
					into STRICT	qt_grupos_w
					from	pls_auditoria_grupo
					where	nr_seq_grupo		= nr_seq_grupo_w
					and	nr_seq_auditoria	= nr_seq_auditoria_p;

					if (qt_grupos_w	= 0) then
						select	max(nr_seq_ordem) + 1
						into STRICT	nr_seq_ordem_w
						from	pls_auditoria_grupo
						where	nr_seq_auditoria	= nr_seq_auditoria_p;

						insert	into pls_auditoria_grupo(nr_sequencia, nm_usuario, dt_atualizacao,
							 ie_manual, ie_status, nr_seq_auditoria,
							 nr_seq_grupo, nr_seq_ordem)
						values (nextval('pls_auditoria_grupo_seq'), nm_usuario_p, clock_timestamp(),
							 'N', 'U', nr_seq_auditoria_p,
							 nr_seq_grupo_w, nr_seq_ordem_w);
					end if;
					end;
				end loop;
				close C02;
				end;
			end loop;
			close C01;
		end if;
	end if;

	for cProcAud_w in cProcAud loop
		begin			
			select	ie_status
			into STRICT	ie_status_atual_w
			from	pls_requisicao_proc
			where	nr_sequencia		= cProcAud_w.nr_seq_proc_origem;
		exception
		when others then
			ie_status_atual_w := 'X';
		end;

		select	ie_status_solicitacao,
			ie_status
		into STRICT	ie_status_solicitacao_w,
			ie_status_analise_w
		from	pls_auditoria_item
		where	nr_sequencia		= cProcAud_w.nr_sequencia;

		if (ie_status_atual_w <> 'X') and (ie_status_atual_w = 'A') then
			if (ie_status_analise_w <> ie_status_solicitacao_w) then
				update	pls_requisicao_proc
				set	ie_status		= CASE WHEN ie_status_analise_w='A' THEN  'S' WHEN ie_status_analise_w='N' THEN  'N'  ELSE ie_status END
				where	nr_sequencia		= cProcAud_w.nr_seq_proc_origem;
			else
				update	pls_requisicao_proc
				set	ie_status		= CASE WHEN ie_status_solicitacao_w='A' THEN  'S' WHEN ie_status_solicitacao_w='N' THEN  'N'  ELSE ie_status END
				where	nr_sequencia		= cProcAud_w.nr_seq_proc_origem;
			end if;

			CALL pls_requisicao_gravar_hist(nr_seq_requisicao_p,'L','Ha ocorrencias geradas para o procedimento, sequencia: ' || cProcAud_w.nr_seq_proc_origem || ' durante o processo de consistencia dos itens alterados na analise.',null,nm_usuario_p);
		end if;
	end loop;

	for cMatAud_w in cMatAud loop
		begin			
			select	ie_status
			into STRICT	ie_status_atual_w
			from	pls_requisicao_mat
			where	nr_sequencia		= cMatAud_w.nr_seq_mat_origem;
		exception
		when others then
			ie_status_atual_w := 'X';
		end;

		select	ie_status_solicitacao,
			ie_status
		into STRICT	ie_status_solicitacao_w,
			ie_status_analise_w
		from	pls_auditoria_item
		where	nr_sequencia		= cMatAud_w.nr_sequencia;

		if (ie_status_atual_w <> 'X') and (ie_status_atual_w = 'A') then
			if (ie_status_analise_w <> ie_status_solicitacao_w) then
				update	pls_requisicao_mat
				set	ie_status		= CASE WHEN ie_status_analise_w='A' THEN  'S' WHEN ie_status_analise_w='N' THEN  'N'  ELSE ie_status END
				where	nr_sequencia		= cMatAud_w.nr_seq_mat_origem;
			else
				update	pls_requisicao_mat
				set	ie_status		= CASE WHEN ie_status_solicitacao_w='A' THEN  'S' WHEN ie_status_solicitacao_w='N' THEN  'N'  ELSE ie_status END
				where	nr_sequencia		= cMatAud_w.nr_seq_mat_origem;
			end if;

			CALL pls_requisicao_gravar_hist(nr_seq_requisicao_p,'L','Ha ocorrencias geradas para o material, sequencia: ' || cMatAud_w.nr_seq_mat_origem || ' durante o processo de consistencia dos itens alterados na analise.',null,nm_usuario_p);
		end if;
	end loop;
end if;

if (nr_seq_guia_p	<> 0) then
	begin
		select	ie_tipo_processo,
			nr_seq_segurado,
			ie_tipo_intercambio
		into STRICT	ie_tipo_processo_w,
			nr_seq_segurado_w,
			ie_tipo_intercambio_w
		from	pls_guia_plano
		where	nr_sequencia	= nr_seq_guia_p;
	exception
	when others then
		ie_tipo_processo_w	:= null;
		ie_tipo_intercambio_w	:= 'X';
	end;
	if (ie_tipo_item_p	= 'P') then
		
		select	nr_seq_proc_origem,
			cd_procedimento,
			ie_origem_proced, 
			qt_ajuste,
			vl_item,
			ie_pacote_ptu
		into STRICT	nr_seq_proc_origem_w,
			cd_procedimento_w,
			ie_origem_proced_w,
			qt_ajuste_w,
			vl_item_w,
			ie_pacote_ptu_w
		from	pls_auditoria_item
		where	nr_seq_auditoria	= nr_seq_auditoria_p
		and	nr_sequencia		= nr_seq_item_p;

		update	pls_guia_plano_proc
		set	ie_status		= 'U',
			cd_procedimento		= cd_procedimento_w,
			ie_origem_proced 	= ie_origem_proced_w,
			qt_solicitada		= qt_ajuste_w,
			dt_atualizacao		= clock_timestamp(),
			nm_usuario		= nm_usuario_p,
			vl_procedimento		= vl_item_w,
			ie_pacote_ptu		= coalesce(ie_pacote_ptu_w,'N'),
			cd_procedimento_ptu	 = NULL
		where	nr_sequencia		= nr_seq_proc_origem_w;	

		CALL pls_consistir_proc_guia(nr_seq_guia_p, cd_estabelecimento_p, nm_usuario_p);
		CALL pls_gerar_ocor_aut_combinada(	nr_seq_segurado_w, nr_seq_guia_p, null,
						null, null, null,
						null, null, null,
						nm_usuario_p, cd_estabelecimento_p);
								
		/*aaschlote 16/10/2013 656658 - Rotina generica para a consistencia da liminar juridica de ocorrencia*/

		CALL pls_consist_lim_ocorr_req_guia(nr_seq_segurado_w,null,nr_seq_guia_p,ie_tipo_intercambio_w,cd_estabelecimento_p,nm_usuario_p);
		
		CALL pls_ger_ocor_glos_aud_guia_itm(	nr_seq_auditoria_p, nr_seq_item_p, nr_seq_proc_origem_w, 0, nm_usuario_p);
		
		if (ie_tipo_processo_w	= 'I') then
			CALL pls_gerar_de_para_aut_intercam(	nr_seq_proc_origem_w, null, cd_estabelecimento_p, nm_usuario_p);
		end if;
		
		begin
		select	ie_status
		into STRICT	ie_status_w
		from	pls_guia_plano_proc
		where	nr_sequencia	= nr_seq_proc_origem_w;
		exception
		when others then
			ie_status_w	:= 'X';
		end;

		update	pls_auditoria_item
		set	ie_status		= CASE WHEN ie_status_w='A' THEN  'P' WHEN ie_status_w='S' THEN  'A' WHEN ie_status_w='I' THEN  'A'  ELSE 'P' END ,
			ie_status_solicitacao	= CASE WHEN ie_status_w='A' THEN  'P' WHEN ie_status_w='S' THEN  'A' WHEN ie_status_w='I' THEN  'A'  ELSE 'P' END
			--nr_seq_proc_origem	= nr_seq_guia_proc_w
		where	nr_sequencia		= nr_seq_item_p;
		
	elsif (ie_tipo_item_p	= 'M') then
		select	nextval('pls_guia_plano_mat_seq')
		into STRICT	nr_seq_guia_mat_w
		;
		
		select	nr_seq_mat_origem,
			nr_seq_material,			
			qt_ajuste,
			vl_item
		into STRICT	nr_seq_mat_origem_w,
			nr_seq_material_w,
			qt_ajuste_w,
			vl_item_w
		from	pls_auditoria_item
		where	nr_seq_auditoria	= nr_seq_auditoria_p
		and	nr_sequencia		= nr_seq_item_p;

		update	pls_guia_plano_mat
		set	ie_status		= 'U',
			nr_seq_material		= nr_seq_material_w,			
			qt_solicitada		= qt_ajuste_w,
			dt_atualizacao		= clock_timestamp(),
			nm_usuario		= nm_usuario_p,
			vl_material		= vl_item_w,
			cd_material_ptu		 = NULL
		where	nr_sequencia		= nr_seq_mat_origem_w;

		CALL pls_consistir_mat_guia(nr_seq_guia_p, cd_estabelecimento_p, nm_usuario_p);
		CALL pls_gerar_ocor_aut_combinada(	nr_seq_segurado_w, nr_seq_guia_p, null,
						null, null, null,
						null, null, null,
						nm_usuario_p, cd_estabelecimento_p);
		CALL pls_ger_ocor_glos_aud_guia_itm(	nr_seq_auditoria_p, nr_seq_item_p, 0,
						nr_seq_mat_origem_w, nm_usuario_p);
						
		if (ie_tipo_processo_w	= 'I') then
			CALL pls_gerar_de_para_aut_intercam(	null, nr_seq_mat_origem_w, cd_estabelecimento_p, nm_usuario_p);
		end if;
		
		begin
		select	ie_status
		into STRICT	ie_status_w
		from	pls_guia_plano_mat
		where	nr_sequencia	= nr_seq_mat_origem_w;
		exception
		when others then
			ie_status_w	:= 'X';
		end;

		update	pls_auditoria_item
		set	ie_status		= CASE WHEN ie_status_w='A' THEN  'P' WHEN ie_status_w='S' THEN  'A' WHEN ie_status_w='I' THEN  'A'  ELSE 'P' END ,
			ie_status_solicitacao	= CASE WHEN ie_status_w='A' THEN  'P' WHEN ie_status_w='S' THEN  'A' WHEN ie_status_w='I' THEN  'A'  ELSE 'P' END 			
		where	nr_sequencia		= nr_seq_item_p;
	end if;

	if (ie_status_w	<> 'X') then
		if (ie_status_w	= 'A') then
			open C03;
			loop
			fetch C03 into
				nr_seq_ocorrencia_w;
			EXIT WHEN NOT FOUND; /* apply on C03 */
				begin
				open C02;
				loop
				fetch C02 into
					nr_seq_grupo_w;
				EXIT WHEN NOT FOUND; /* apply on C02 */
					begin
					select	count(1)
					into STRICT	qt_grupos_w
					from	pls_auditoria_grupo
					where	nr_seq_grupo		= nr_seq_grupo_w
					and	nr_seq_auditoria	= nr_seq_auditoria_p;

					if (qt_grupos_w	= 0) then
						select	max(nr_seq_ordem) + 1
						into STRICT	nr_seq_ordem_w
						from	pls_auditoria_grupo
						where	nr_seq_auditoria	= nr_seq_auditoria_p;

						insert	into pls_auditoria_grupo(nr_sequencia, nm_usuario, dt_atualizacao,
							 ie_manual, ie_status, nr_seq_auditoria,
							 nr_seq_grupo, nr_seq_ordem)
						values (nextval('pls_auditoria_grupo_seq'), nm_usuario_p, clock_timestamp(),
							 'N', 'U', nr_seq_auditoria_p,
							 nr_seq_grupo_w, nr_seq_ordem_w);
					end if;
					end;
				end loop;
				close C02;
				end;
			end loop;
			close C03;
		end if;
	end if;

	for cProcAud_w in cProcAud loop
		begin			
			select	ie_status
			into STRICT	ie_status_atual_w
			from	pls_guia_plano_proc
			where	nr_sequencia		= cProcAud_w.nr_seq_proc_origem;
		exception
		when others then
			ie_status_atual_w := 'X';
		end;

		select	ie_status_solicitacao,
			ie_status
		into STRICT	ie_status_solicitacao_w,
			ie_status_analise_w
		from	pls_auditoria_item
		where	nr_sequencia		= cProcAud_w.nr_sequencia;

		if (ie_status_atual_w <> 'X') and (ie_status_atual_w = 'A') then
			if (ie_status_analise_w <> ie_status_solicitacao_w) then
				update	pls_guia_plano_proc
				set	ie_status		= CASE WHEN ie_status_analise_w='A' THEN  'S' WHEN ie_status_analise_w='N' THEN  'N'  ELSE ie_status END
				where	nr_sequencia		= cProcAud_w.nr_seq_proc_origem;
			else
				update	pls_guia_plano_proc
				set	ie_status		= CASE WHEN ie_status_solicitacao_w='A' THEN  'S' WHEN ie_status_solicitacao_w='N' THEN  'N'  ELSE ie_status END
				where	nr_sequencia		= cProcAud_w.nr_seq_proc_origem;
			end if;

			CALL pls_guia_gravar_historico(nr_seq_guia_p, 3, 'Ha ocorrencias geradas para o procedimento, sequencia: ' || cProcAud_w.nr_seq_proc_origem || ' durante o processo de consistencia dos itens alterados na analise.', null, nm_usuario_p);
		end if;
	end loop;

	for cMatAud_w in cMatAud loop
		begin			
			select	ie_status
			into STRICT	ie_status_atual_w
			from	pls_guia_plano_mat
			where	nr_sequencia		= cMatAud_w.nr_seq_mat_origem;
		exception
		when others then
			ie_status_atual_w := 'X';
		end;

		select	ie_status_solicitacao,
			ie_status
		into STRICT	ie_status_solicitacao_w,
			ie_status_analise_w
		from	pls_auditoria_item
		where	nr_sequencia		= cMatAud_w.nr_sequencia;

		if (ie_status_atual_w <> 'X') and (ie_status_atual_w = 'A') then
			if (ie_status_analise_w <> ie_status_solicitacao_w) then
				update	pls_guia_plano_mat
				set	ie_status		= CASE WHEN ie_status_analise_w='A' THEN  'S' WHEN ie_status_analise_w='N' THEN  'N'  ELSE ie_status END
				where	nr_sequencia		= cMatAud_w.nr_seq_mat_origem;
			else
				update	pls_guia_plano_mat
				set	ie_status		= CASE WHEN ie_status_solicitacao_w='A' THEN  'S' WHEN ie_status_solicitacao_w='N' THEN  'N'  ELSE ie_status END
				where	nr_sequencia		= cMatAud_w.nr_seq_mat_origem;
			end if;

			CALL pls_guia_gravar_historico(nr_seq_guia_p, 3, 'Ha ocorrencias geradas para o material, sequencia: ' || cMatAud_w.nr_seq_mat_origem || ' durante o processo de consistencia dos itens alterados na analise.', null, nm_usuario_p);
		end if;
	end loop;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_consistir_itens_alterados ( nr_seq_auditoria_p bigint, nr_seq_item_p bigint, nr_seq_requisicao_p bigint, nr_seq_guia_p bigint, ie_tipo_item_p text, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

