-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_prescr_agecons (nr_seq_agenda_p bigint, nm_usuario_p text) AS $body$
DECLARE


cd_medico_agenda_w	varchar(10);
cd_pessoa_fisica_W	varchar(10);
nr_atendimento_w	bigint;
cd_setor_atendimento_w	bigint;
cd_setor_usuario_w	bigint;
nr_prescricao_w		bigint;
cd_estabelecimento_w	bigint;
ie_origem_inf_w		varchar(1);
dt_prescricao_w		timestamp;
dt_resultado_w		timestamp;
nr_sequencia_w		bigint;
cd_procedimento_w	bigint;
ie_origem_proced_w	bigint;
ie_status_agenda_w	varchar(03);
nr_seq_proc_interno_w	bigint;
qt_procedimento_adic_w	bigint;
ie_gerar_proc_adic_w	varchar(1);
ie_lado_w agenda_consulta_proc.ie_lado%type;
C01 CURSOR FOR
	SELECT	b.cd_procedimento,
		b.ie_origem_proced,
		b.nr_seq_proc_interno,
		a.ie_status_agenda,
		coalesce(b.qt_procedimento,1),
		b.ie_lado
	from 	Agenda_consulta_proc b,
		agenda_consulta a
	where  	a.nr_sequencia	= nr_seq_agenda_p
	and	a.nr_sequencia	= b.nr_seq_agenda;



BEGIN

ie_gerar_proc_adic_w := Obter_Param_Usuario(916, 301, obter_perfil_ativo, nm_usuario_p, obter_estabelecimento_ativo, ie_gerar_proc_adic_w);

select 	coalesce(max('1'),'3')
into STRICT	ie_origem_inf_w
from	Medico b,
	Usuario a
where 	a.nm_usuario		= nm_usuario_p
  and	a.cd_pessoa_fisica	= b.cd_pessoa_fisica;


select	max(cd_setor_atendimento)
into STRICT	cd_setor_usuario_w
from	usuario
where	nm_usuario	= nm_usuario_p;

select	max(a.cd_pessoa_fisica),
	max(a.cd_estabelecimento),
	max(b.nr_atendimento),
	max(b.cd_pessoa_fisica)
into STRICT	cd_medico_agenda_w,
	cd_estabelecimento_w,
	nr_atendimento_w,
	cd_pessoa_fisica_w
from	agenda a, agenda_consulta b
where	b.nr_sequencia		= nr_seq_agenda_p
and	a.cd_agenda		= b.cd_agenda;

select 	coalesce(max(cd_setor_atendimento),coalesce(cd_setor_usuario_w,0))
into STRICT 	cd_setor_atendimento_w
from 	atend_paciente_unidade
where 	nr_seq_interno = obter_atepacu_paciente(nr_atendimento_w, 'A');

dt_prescricao_w		:= clock_timestamp();

Select	nextval('prescr_medica_seq')
into STRICT  	nr_prescricao_w
;

insert into prescr_medica(
 	NR_PRESCRICAO            ,
 	CD_PESSOA_FISICA         ,      
	NR_ATENDIMENTO           ,      
	CD_MEDICO                ,      
	DT_PRESCRICAO            ,      
	DT_ATUALIZACAO           ,      
	NM_USUARIO               ,
	NM_USUARIO_ORIGINAL	 ,      
	NR_HORAS_VALIDADE        ,      
	DT_PRIMEIRO_HORARIO      ,      
	DT_LIBERACAO             ,      
	CD_SETOR_ATENDIMENTO,
	CD_SETOR_entrega,
	dt_entrega,
	ie_recem_nato,
      	IE_ORIGEM_INF,
	cd_estabelecimento,
	NR_SEQ_AGECONS,
	cd_prescritor)
values (nr_prescricao_w,
      	cd_pessoa_fisica_w,
      	nr_atendimento_w,
      	cd_medico_agenda_w,
      	dt_prescricao_w,
      	clock_timestamp(),
      	nm_usuario_p,
	nm_usuario_p,	
      	24,
	null,   
      	null,
      	cd_setor_atendimento_w,
      	cd_setor_atendimento_w,
	clock_timestamp(),
	'N',
      	ie_origem_inf_w,
	cd_estabelecimento_w,
	nr_seq_agenda_p,
	obter_dados_usuario_opcao(nm_usuario_p, 'C'));


OPEN C01;
LOOP
FETCH C01 into
	cd_procedimento_w,
	ie_origem_proced_w,
	nr_seq_proc_interno_w,
	ie_status_agenda_w,
	qt_procedimento_adic_w,
	ie_lado_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin

	select 	coalesce(max(nr_sequencia),0) + 1
	into STRICT 	nr_sequencia_w
	from 	prescr_procedimento
	where 	nr_prescricao	= nr_prescricao_w;

	dt_resultado_w := obter_entrega_laudo(nr_prescricao_w, clock_timestamp(), nr_seq_proc_interno_w, cd_procedimento_w, ie_origem_proced_w, cd_setor_atendimento_w, nm_usuario_p, dt_resultado_w);

	insert into Prescr_Procedimento(
		nr_prescricao, nr_sequencia, cd_procedimento,
		qt_procedimento, dt_atualizacao, nm_usuario,
		cd_motivo_baixa, ie_origem_proced,
		ie_urgencia, cd_setor_atendimento,
		dt_prev_execucao, ie_suspenso, ie_status_atend,
		ie_origem_inf, dt_resultado, cd_medico_exec, ie_autorizacao, nr_seq_interno, ie_lado,
		ie_avisar_result)
	values (
		nr_prescricao_w, nr_sequencia_w, cd_procedimento_w,
		qt_procedimento_adic_w, clock_timestamp(), nm_usuario_p,
		0, ie_origem_proced_w,
		'N', cd_setor_atendimento_w,
		clock_timestamp(), 'N', 5, '1', 
		dt_resultado_w, cd_medico_agenda_w, null, nextval('prescr_procedimento_seq'), ie_lado_w,
		'N');
		
	if (ie_gerar_proc_adic_w = 'S') then
		CALL Gerar_Prescr_Proc_Assoc(Nr_prescricao_w, nr_sequencia_w, nm_usuario_p);
	end if;
	
	CALL Gerar_med_mat_assoc(nr_prescricao_w, nr_sequencia_w);
	
	end;
END LOOP;
Close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_prescr_agecons (nr_seq_agenda_p bigint, nm_usuario_p text) FROM PUBLIC;

