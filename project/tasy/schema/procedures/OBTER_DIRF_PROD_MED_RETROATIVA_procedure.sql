-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE obter_dirf_prod_med_retroativa ( nr_sequencia_p bigint, cd_estabelecimento_p bigint, cd_tributo_p bigint, cd_darf_p text, ie_tipo_data_p bigint, ie_consistir_retencao_p text, dt_mes_referencia_p timestamp, ie_trib_titulo_p text, cd_empresa_p bigint, ie_pf_pj_p text) AS $body$
DECLARE


nr_titulo_w		titulo_pagar.nr_titulo%type;
vl_rendimento_w		pls_pag_prest_venc_trib.vl_base_calculo%type;
vl_imposto_w		pls_pag_prest_venc_trib.vl_imposto%type;
cd_pessoa_fisica_w	pls_prestador.cd_pessoa_fisica%type;
cd_cgc_w		pls_prestador.cd_cgc%type;
dt_vencimento_w		pls_pag_prest_vencimento.dt_vencimento%type;
ie_gerar_w		varchar(1);

C01 CURSOR FOR
SELECT  coalesce(t.vl_base_calculo, 0) - coalesce(t.vl_base_adic, 0) + (	select	coalesce(sum(p.vl_imposto), 0)
									vl_imposto
								from 	pls_pag_prest_vencimento x,
									pls_pag_prest_venc_trib p,
									tributo w
								where 	x.nr_sequencia = p.nr_seq_vencimento
								and 	x.nr_seq_pag_prestador = v.nr_seq_pag_prestador
								and 	obter_ds_titulo_pagar(p.nr_sequencia) > 0
								and 	w.cd_tributo = p.cd_tributo
								and 	w.ie_tipo_tributo = 'INSS'
								and 	w.cd_tributo <> t.cd_tributo) vl_rendimento,
	coalesce(t.vl_imposto, 0) vl_imposto,
	z.cd_pessoa_fisica,
  	z.cd_cgc,
  	v.dt_vencimento
from	pls_lote_pagamento l,
	pls_pagamento_prestador p,
	pls_prestador z,
	pls_pag_prest_vencimento v,
	pls_pag_prest_venc_trib t
where  	l.nr_sequencia = p.nr_seq_lote
and	z.nr_sequencia  = p.nr_seq_prestador
and 	p.nr_sequencia = v.nr_seq_pag_prestador
and 	v.nr_sequencia = t.nr_seq_vencimento
and 	coalesce(obter_ds_titulo_pagar(t.nr_sequencia)::text, '') = ''
and 	v.dt_vencimento <= fim_mes(dt_mes_referencia_p)
and  	t.vl_base_calculo > 0
and	to_char(v.dt_vencimento, 'yyyy') = to_char(dt_mes_referencia_p, 'yyyy')
--and  	to_char(v.dt_vencimento, 'MM') = to_char(dt_mes_referencia_p, 'MM')
and	t.cd_tributo = cd_tributo_p
and 	t.cd_darf = cd_darf_p
and 	((	select 	max(y.vl_liquido)
		from 	pls_pag_prest_vencimento y
		where 	y.nr_seq_pag_prestador = p.nr_sequencia) <= 0)
and	CASE WHEN upper(ie_pf_pj_p)='PF' THEN  z.cd_pessoa_fisica  ELSE z.cd_cgc (END IS NOT NULL AND END::text <> '');


BEGIN

open C01;
loop
fetch C01 into
	vl_rendimento_w,
	vl_imposto_w,
	cd_pessoa_fisica_w,
	cd_cgc_w,
	dt_vencimento_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin


	select	max(w.nr_titulo)
	into STRICT	nr_titulo_w
	from 	titulo_pagar a,
		dirf_titulo_pagar w
	where	a.nr_titulo = w.nr_titulo
	and	CASE WHEN coalesce(cd_cgc_w::text, '') = '' THEN  a.cd_pessoa_fisica  ELSE a.cd_cgc END  = coalesce(cd_cgc_w, cd_pessoa_fisica_w)
	and	w.cd_tributo = cd_tributo_p
	and 	w.cd_darf = cd_darf_p
	and	to_char(w.dt_base_titulo, 'yyyy') = to_char(dt_mes_referencia_p, 'yyyy');

	if (coalesce(nr_titulo_w::text, '') = '') then
		select	max(nr_titulo)
		into STRICT	nr_titulo_w
		from 	dirf_titulo_pagar w
		where	CASE WHEN coalesce(cd_cgc_w::text, '') = '' THEN  w.cd_pessoa_fisica  ELSE w.cd_cgc END  = coalesce(cd_cgc_w, cd_pessoa_fisica_w)
		and	w.cd_tributo = cd_tributo_p
		and 	w.cd_darf = cd_darf_p
		and	to_char(w.dt_base_titulo, 'yyyy') = to_char(dt_mes_referencia_p, 'yyyy');
	end if;

	select  coalesce(max('N'), 'S')
	into STRICT	ie_gerar_w
	from 	dirf_titulo_pagar w
	where	CASE WHEN coalesce(cd_cgc_w::text, '') = '' THEN  w.cd_pessoa_fisica  ELSE w.cd_cgc END  = coalesce(cd_cgc_w, cd_pessoa_fisica_w)
	and	w.cd_tributo = cd_tributo_p
	and 	w.cd_darf = cd_darf_p
	and	w.dt_base_titulo = dt_vencimento_w
	and 	w.vl_rendimento = vl_rendimento_w
	and	w.vl_imposto = vl_imposto_w
	and	w.ie_origem = 'PR';

	if (nr_titulo_w IS NOT NULL AND nr_titulo_w::text <> '') and (ie_gerar_w = 'S') then

		insert into dirf_titulo_pagar(nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_lote_dirf,
			nr_titulo,
			vl_rendimento,
			vl_imposto,
			cd_tributo,
			cd_darf,
			dt_base_titulo,
			ie_origem,
			cd_pessoa_fisica,
			cd_cgc)
		values (nextval('dirf_titulo_pagar_seq'),
			clock_timestamp(),
			'Tasy4',
			clock_timestamp(),
			'Tasy4',
			nr_sequencia_p,
			nr_titulo_w,
			vl_rendimento_w,
			vl_imposto_w,
			cd_tributo_p,
			cd_darf_p,
			dt_vencimento_w,
			'PR',
			cd_pessoa_fisica_w,
			cd_cgc_w);

	end if;

	end;
end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE obter_dirf_prod_med_retroativa ( nr_sequencia_p bigint, cd_estabelecimento_p bigint, cd_tributo_p bigint, cd_darf_p text, ie_tipo_data_p bigint, ie_consistir_retencao_p text, dt_mes_referencia_p timestamp, ie_trib_titulo_p text, cd_empresa_p bigint, ie_pf_pj_p text) FROM PUBLIC;

