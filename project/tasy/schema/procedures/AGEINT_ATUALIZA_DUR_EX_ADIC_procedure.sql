-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ageint_atualiza_dur_ex_adic ( nr_seq_item_p bigint, ie_tipo_item_p text, ie_tipo_acao_p text) AS $body$
DECLARE



nr_seq_exame_adic_w		bigint;
ie_lado_adic_w			varchar(1);
cd_convenio_w			integer;
cd_Categoria_w			varchar(10);
cd_plano_w			varchar(10);
qt_min_duracao_adic_w		bigint := 0;
qt_min_duracao_adic_ww		bigint := 0;
qt_min_dur_tot_adic_w		bigint := 0;
nr_minuto_dur_item_w		bigint;
nr_minuto_dur_atual_w		bigint;
nr_seq_item_w			bigint;
ie_tipo_item_w			varchar(1);
ie_tipo_acao_w			varchar(1);
ie_consiste_anest_w		varchar(1) := 'N';
cd_pessoa_fisica_w		pessoa_fisica.cd_pessoa_fisica%type;

nr_seq_agenda_cons_w		agenda_integrada_item.nr_seq_agenda_cons%type;
nr_seq_agenda_exame_w		agenda_integrada_item.nr_seq_agenda_exame%type;
nr_sequencia_w			bigint;
ie_dia_semana_w			smallint;

/*
ie_tipo_item_p
A - Exames adicionais(pasta Exames adicionais)
E - Exame normal(pasta Dados agendamento)

ie_tipo_acao_p
L - Lancar exames
E - Excluir exames
*/
C01 CURSOR FOR
	SELECT	nr_seq_proc_interno,
		ie_lado
	from	ageint_exame_adic_item
	where	nr_seq_item	= nr_seq_item_w;
	
C02 CURSOR FOR
	SELECT	nr_seq_proc_interno,
		ie_lado
	from	agenda_integrada_item
	where	nr_sequencia = nr_seq_item_w;
	

BEGIN
ie_consiste_anest_w := obter_param_usuario(869, 264, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, obter_estabelecimento_ativo, ie_consiste_anest_w);

nr_seq_item_w			:= nr_seq_item_p;
ie_tipo_item_w			:= ie_tipo_item_p;
ie_tipo_acao_w			:= ie_tipo_acao_p;

select	max(a.cd_pessoa_fisica),
	max(b.nr_seq_agenda_cons),
	max(b.nr_seq_agenda_exame),
	max(b.nr_sequencia)
into STRICT	cd_pessoa_fisica_w,
	nr_seq_agenda_cons_w,
	nr_seq_agenda_exame_w,
	nr_sequencia_w
from	agenda_integrada a,
	agenda_integrada_item b
where	a.nr_sequencia = b.nr_seq_agenda_int
and	b.nr_sequencia = nr_seq_item_w;

ie_dia_semana_w := obter_cod_dia_semana(coalesce(Obter_Horario_item_Ageint(nr_seq_agenda_cons_w,nr_seq_agenda_exame_w,nr_sequencia_w),qt_obter_horario_agendado(nr_sequencia_w)));

if (nr_seq_item_w IS NOT NULL AND nr_seq_item_w::text <> '')then
	begin
	/*Exames adicionais*/

	if (ie_tipo_item_w = 'A')then
		begin
		
		open C01;
		loop
		fetch C01 into	
			nr_seq_exame_adic_w,
			ie_lado_adic_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin
			
			select	max(a.cd_convenio),
				max(a.cd_categoria),
				max(a.cd_plano)
			into STRICT	cd_convenio_w,
				cd_Categoria_w,
				cd_plano_w
			from	agenda_integrada a,
				agenda_integrada_item b				
			where	a.nr_sequencia	= b.nr_seq_agenda_int
			and	b.nr_sequencia	= nr_seq_item_w;			
			
			qt_min_duracao_adic_w := Obter_Tempo_Padrao_Ageint(nr_seq_exame_adic_w, null, null, null, null, cd_pessoa_fisica_w, qt_min_duracao_adic_w, ie_lado_adic_w, cd_convenio_w, cd_categoria_w, cd_plano_w, null, ie_dia_semana_w);
			
			end;
		end loop;
		close C01;
		
		if (ie_tipo_acao_w = 'L')then
			begin
			
			if (qt_min_duracao_adic_w > 0)then
		
				update	agenda_integrada_item
				set	nr_minuto_duracao 	= nr_minuto_duracao + qt_min_duracao_adic_w
				where	nr_sequencia		= nr_seq_item_w;
				
				commit;
		
			end if;
			
			end;
		elsif (ie_tipo_acao_w = 'E')then
				begin				
				--Se for exlcuir o exame, busca a duracao novamente para diminuir dos minutos totais do item
				qt_min_duracao_adic_w := Obter_Tempo_Padrao_Ageint(nr_seq_exame_adic_w, null, null, null, null, cd_pessoa_fisica_w, qt_min_duracao_adic_w, ie_lado_adic_w, cd_convenio_w, cd_categoria_w, cd_plano_w, null, ie_dia_semana_w);
				
				if (qt_min_duracao_adic_w > 0)then
				
					update	agenda_integrada_item
					set	nr_minuto_duracao 	= nr_minuto_duracao - qt_min_duracao_adic_w
					where	nr_sequencia		= nr_seq_item_w;
					
					commit;
				
				end if;
				
				end;
		end if;
		
		end;
	elsif	/*Exames normais*/
			(ie_tipo_item_w = 'E')then
			begin
			
			--Verificar se para a seq. do item agendado existe algum exame adicional
			open C01;
			loop
			fetch C01 into	
				nr_seq_exame_adic_w,
				ie_lado_adic_w;
			EXIT WHEN NOT FOUND; /* apply on C01 */
				begin
				
				select	max(a.cd_convenio),
					max(a.cd_categoria),
					max(a.cd_plano)
				into STRICT	cd_convenio_w,
					cd_Categoria_w,
					cd_plano_w
				from	agenda_integrada a,
					agenda_integrada_item b				
				where	a.nr_sequencia	= b.nr_seq_agenda_int
				and	b.nr_sequencia	= nr_seq_item_w;
				
				qt_min_duracao_adic_ww := Obter_Tempo_Padrao_Ageint(nr_seq_exame_adic_w, null, null, null, null, cd_pessoa_fisica_w, qt_min_duracao_adic_ww, ie_lado_adic_w, cd_convenio_w, cd_categoria_w, cd_plano_w, null, ie_dia_semana_w);
				
				qt_min_dur_tot_adic_w	:= qt_min_dur_tot_adic_w + qt_min_duracao_adic_ww;				
				
				end;
			end loop;
			close C01;
			
			open C02;
			loop
			fetch C02 into	
				nr_seq_exame_adic_w,
				ie_lado_adic_w;
			EXIT WHEN NOT FOUND; /* apply on C02 */
				begin
				
				select	max(a.cd_convenio),
					max(a.cd_categoria),
					max(a.cd_plano)
				into STRICT	cd_convenio_w,
					cd_Categoria_w,
					cd_plano_w
				from	agenda_integrada a,
					agenda_integrada_item b				
				where	a.nr_sequencia	= b.nr_seq_agenda_int
				and	b.nr_sequencia	= nr_seq_item_w;			
				
				qt_min_duracao_adic_w := Obter_Tempo_Padrao_Ageint(nr_seq_exame_adic_w, null, null, null, null, cd_pessoa_fisica_w, qt_min_duracao_adic_w, ie_lado_adic_w, cd_convenio_w, cd_categoria_w, cd_plano_w, null, ie_dia_semana_w);
				
				end;
			end loop;
			close C02;			
		
			if (qt_min_duracao_adic_w > 0) and (ie_consiste_anest_w = 'N')then
			
				update	agenda_integrada_item
				set	nr_minuto_duracao 	= qt_min_dur_tot_adic_w + qt_min_duracao_adic_w
				where	nr_sequencia		= nr_seq_item_w;
				
				commit;
			
			end if;
				
			end;
	
	end if;	
	end;
	
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ageint_atualiza_dur_ex_adic ( nr_seq_item_p bigint, ie_tipo_item_p text, ie_tipo_acao_p text) FROM PUBLIC;

