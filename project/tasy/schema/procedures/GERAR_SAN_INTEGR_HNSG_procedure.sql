-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_san_integr_hnsg (ie_tipo_p text, cd_tipo_p bigint, nr_doc_solicitacao_p bigint, qt_procedimento_p bigint, dt_transfusao_p timestamp, nm_usuario_p text) AS $body$
DECLARE

 
cd_proced_w					bigint := null;
ie_origem_proced_w			bigint := null;
nr_seq_derivado_w			bigint := null;
nr_doc_convenio_w			varchar(20);
ie_tipo_guia_w				varchar(2);
qt_proced_w					smallint := null;
cd_estabelecimento_w		integer;
ie_tipo_atendimento_w		integer;
nr_atend_w					bigint := null;
nr_prescr_w					bigint := null;
dt_prescr_w					timestamp;
cd_convenio_w				integer;
cd_categoria_w				varchar(10);
ie_tipo_convenio_w			smallint;
dt_ent_unidade_w			timestamp;
nr_seq_atepacu_w			bigint;
nr_seq_prescr_w				integer;
nr_sequencia_w				bigint;
ds_erro_w					varchar(2000) := '';
cd_cgc_prestador_w			varchar(14);
cd_cgc_consisitdo_w			varchar(14);
ie_medico_executor_w		varchar(30);
cd_medico_regra_w			varchar(10);
cd_setor_atend_w			integer;
cd_setor_atendimento_w		integer;
nr_seq_proc_interno_w		bigint;
cd_local_estoque_w			smallint;
cd_baixa_incorreta_w		smallint;
cd_motivo_baixa_w			smallint;
ie_baixa_sem_estoque_w		varchar(1);
cd_material_w				integer;
qt_material_w				double precision;
qt_dispensar_w				double precision;
qt_dias_solic_w				smallint;
qt_dias_lib_w				smallint;
ie_status_w					varchar(2);
ie_baixa_paciente_w			varchar(1) := 'S';
ie_via_aplicacao_w			varchar(5);
cd_unidade_medida_w			varchar(30);
cd_fornec_consignado_w		varchar(14);
nr_seq_lote_fornec_w		bigint;
ie_disp_estoque_w			varchar(1) := 'S';
cd_senha_w					varchar(20);
cd_profissional_w			varchar(10);
ie_consiste_baixa_estoque_w	varchar(01) := 'N';
ie_material_estoque_w		varchar(01) := 'N';
ie_mat_estoque_mat_w		varchar(01) := 'N';
cd_convenio_ww				integer;
cd_categoria_ww				varchar(10);
dt_passagem_w				timestamp;
nr_seq_proc_interno_regra_w	bigint;
nr_seq_classificacao_w		bigint;
sql_errm_w					varchar(255);
ds_msg_w					varchar(255);
qt_exames_conta_w			varchar(5);


BEGIN 
 
begin 
 
	ds_msg_w		:= '';
	dt_ent_unidade_w 	:= dt_transfusao_p;
	nr_seq_derivado_w 	:= cd_tipo_p;
	qt_proced_w		:= qt_procedimento_p;
 
 
	select 	nr_atendimento, 
		nr_prescricao, 
		dt_prescricao, 
		cd_setor_atendimento 
	into STRICT	nr_atend_w, 
		nr_prescr_w, 
		dt_prescr_w, 
		cd_setor_atendimento_w 
	from 	prescr_medica 
	where 	nr_prescricao = nr_doc_solicitacao_p;
 
	select	coalesce(obter_setor_usuario(nm_usuario_p),cd_setor_atendimento_w) 
	into STRICT	cd_setor_atendimento_w 
	;
 
	--insert into log_XXtasy (cd_log, ds_log, dt_atualizacao, nm_usuario) 
		--values (720, '(GERAR_SAN_INTEGR_HNSG) Prescrição = ' || nr_prescr_w || ' Atendimento = ' || nr_atend_w, sysdate, nm_usuario_p); 
 
	select	a.cd_cgc, 
		a.cd_estabelecimento, 
		b.ie_tipo_atendimento, 
		nr_seq_classificacao 
	into STRICT	cd_cgc_prestador_w, 
		cd_estabelecimento_w, 
		ie_tipo_atendimento_w, 
		nr_seq_classificacao_w 
	from	estabelecimento a, 
		atendimento_paciente b 
	where	a.cd_estabelecimento = b.cd_estabelecimento 
	and	b.nr_atendimento = nr_atend_w;
 
	select	max(cd_local_estoque) 
	into STRICT	cd_local_estoque_w 
	from	setor_atendimento 
	where	cd_setor_atendimento	= cd_setor_atendimento_w;
 
	select	cd_convenio, 
		cd_categoria, 
		ie_tipo_convenio 
	into STRICT	cd_convenio_w, 
		cd_categoria_w, 
		ie_tipo_convenio_w 
	from	atendimento_paciente_v 
	where	nr_atendimento = nr_atend_w;
 
	if (dt_ent_unidade_w > clock_timestamp()) then /* rafael 1/3/8 -> tratar prescrições futuras */
 
		dt_passagem_w := dt_ent_unidade_w;
	else 
		dt_passagem_w := clock_timestamp();
	end if;
 
	/* rafael em 21/2/8 os76992 */
 
	begin 
	select	max(nr_seq_interno) 
	into STRICT	nr_seq_atepacu_w 
	from 	atend_paciente_unidade 
	where 	cd_setor_atendimento	= cd_setor_atendimento_w 
	and	nr_atendimento 		= nr_atend_w 
	--and	dt_ent_unidade_w between dt_entrada_unidade and nvl(dt_saida_unidade, sysdate); 
	and	dt_ent_unidade_w between dt_entrada_unidade and coalesce(dt_saida_unidade, dt_passagem_w);
	exception 
	when others then 
		nr_seq_atepacu_w := 0;
	end;		
 
	if (coalesce(nr_seq_atepacu_w,0) = 0) then /* rafael em 21/2/8 os76992 incluído o if */
 
		CALL gerar_passagem_setor_atend(nr_atend_w, cd_setor_atendimento_w, dt_ent_unidade_w, 'S', nm_usuario_p);
	end if;
 
	select	max(nr_seq_interno) 
	into STRICT	nr_seq_atepacu_w 
	from	atend_paciente_unidade 
	where	nr_atendimento 			= nr_atend_w 
	and	cd_setor_atendimento		= cd_setor_atendimento_w 
	and	trunc(dt_entrada_unidade,'dd')= trunc(dt_ent_unidade_w,'dd');
 
	select dt_entrada_unidade 
	into STRICT dt_ent_unidade_w 
	from atend_paciente_unidade 
	where nr_seq_interno = nr_seq_atepacu_w;
 
 
 
 
	if (ie_tipo_p in ('H','P')) then 
 
		select	b.cd_procedimento, 
			b.ie_origem_proced, 
			b.nr_sequencia, 
			b.nr_seq_proc_interno 
		into STRICT 	cd_proced_w, 
			ie_origem_proced_w, 
			nr_seq_derivado_w, 
			nr_seq_proc_interno_w 
		from	san_derivado b 
		where	b.nr_sequencia = cd_tipo_p;
 
		SELECT * FROM obter_san_proced_convenio(0, nr_seq_derivado_w, cd_estabelecimento_w, ie_tipo_atendimento_w, ie_tipo_convenio_w, cd_convenio_w, cd_categoria_w, cd_setor_atend_w, cd_proced_w, ie_origem_proced_w, 0, nr_seq_proc_interno_w, clock_timestamp(), nr_seq_proc_interno_regra_w, qt_exames_conta_w) INTO STRICT cd_setor_atend_w, cd_proced_w, ie_origem_proced_w, nr_seq_proc_interno_regra_w, qt_exames_conta_w;
 
		select min(nr_sequencia) 
		into STRICT nr_seq_prescr_w 
		from prescr_procedimento 
		where nr_prescricao = nr_prescr_w 
		and cd_procedimento = cd_proced_w 
		and ie_origem_proced = ie_origem_proced_w;
 
		select nextval('procedimento_paciente_seq') 
		into STRICT nr_sequencia_w 
		;
 
		SELECT * FROM consiste_medico_executor(cd_estabelecimento_w, cd_convenio_w, cd_setor_atendimento_w, cd_proced_w, ie_origem_proced_w, ie_tipo_atendimento_w, null, nr_seq_proc_interno_w, ie_medico_executor_w, cd_cgc_consisitdo_w, cd_medico_regra_w, cd_profissional_w, null, coalesce(dt_transfusao_p,dt_prescr_w), nr_seq_classificacao_w, 'N', null, null) INTO STRICT ie_medico_executor_w, cd_cgc_consisitdo_w, cd_medico_regra_w, cd_profissional_w;
 
		insert into procedimento_paciente(nr_sequencia, 
				nr_atendimento, 
				dt_entrada_unidade, 
				cd_procedimento, 
				dt_procedimento, 
				qt_procedimento, 
				dt_atualizacao, 
				nm_usuario, 
				cd_convenio, 
				cd_categoria, 
				dt_prescricao, 
				nr_prescricao, 
				nr_sequencia_prescricao, 
				cd_acao, 
				cd_setor_atendimento, 
				ie_origem_proced, 
				tx_procedimento, 
				nm_usuario_original, 
				nr_seq_atepacu, 
				ds_observacao, 
				ie_auditoria, 
				cd_cgc_prestador, 
				nr_seq_proc_interno, 
				cd_pessoa_fisica) 
			values (nr_sequencia_w, 
				nr_atend_w, 
				dt_ent_unidade_w, 
				cd_proced_w, 
				coalesce(dt_transfusao_p,dt_prescr_w), 
				qt_proced_w, 
				clock_timestamp(), 
				nm_usuario_p, 
				cd_convenio_w, 
				cd_categoria_w, 
				coalesce(dt_prescr_w,dt_ent_unidade_w), 
				nr_prescr_w, 
				nr_seq_prescr_w, 
				1, 
				cd_setor_atendimento_w, 
				ie_origem_proced_w, 
				100, 
				nm_usuario_p, 
				nr_seq_atepacu_w, 
				null, 
				'N', 
				coalesce(cd_cgc_consisitdo_w, cd_cgc_prestador_w), 
				nr_seq_proc_interno_w, 
				cd_profissional_w);
		ds_msg_w := 'Seq procedimento paciente:'||nr_sequencia_w||obter_desc_expressao(296423)/*' Procedimento:'*/||cd_proced_w||obter_desc_expressao(327633)/*'Origem:'*/||ie_origem_proced_w||obter_desc_expressao(326148)/*' Convênio: '*/||cd_convenio_w||obter_desc_expressao(651009)/*' Categoria:'*/||cd_categoria_w|| 
					obter_desc_expressao(298272)/*'Seq prescrição:'*/
||': '||nr_seq_prescr_w||obter_desc_expressao(347248)/*'Proc interno:'*/||': '||nr_seq_proc_interno_w||obter_desc_expressao(285430)/*' Código profissional:'*/||cd_profissional_w||' CGC:'||coalesce(cd_cgc_consisitdo_w, cd_cgc_prestador_w);
		ds_erro_w := consiste_exec_procedimento(nr_sequencia_w, ds_erro_w);
		CALL atualiza_preco_procedimento(nr_sequencia_w, cd_convenio_w, nm_usuario_p);
		CALL gerar_lancamento_automatico(nr_atend_w,cd_local_estoque_w,34,nm_usuario_p,nr_sequencia_w,null,null,null,null,null);
 
	elsif (ie_tipo_p = 'M') then 
		 
		select nextval('material_atend_paciente_seq') 
		into STRICT nr_sequencia_w;
 
		select min(nr_sequencia), 
			min(cd_material), 
			min(qt_material), 
			min(qt_total_dispensar), 
			min(coalesce(qt_dias_solicitado,0)), 
			min(coalesce(qt_dias_liberado,0)), 
			min(ie_status_cirurgia), 
			min(obter_se_baixa_estoque_pac(cd_setor_atendimento_w, cd_material,null,0)), 
			min(ie_via_aplicacao), 
			min(cd_unidade_medida), 
			min(cd_fornec_consignado), 
			min(nr_seq_lote_fornec), 
			min(cd_convenio), 
			min(cd_categoria) 
		into STRICT	nr_seq_prescr_w, 
			cd_material_w, 
			qt_material_w, 
			qt_dispensar_w, 
			qt_dias_solic_w, 
			qt_dias_lib_w, 
			ie_status_w, 
			ie_baixa_paciente_w, 
			ie_via_aplicacao_w, 
			cd_unidade_medida_w, 
			cd_fornec_consignado_w, 
			nr_seq_lote_fornec_w, 
			cd_convenio_ww, 
			cd_categoria_ww 
		from prescr_material 
		where nr_prescricao = nr_prescr_w 
		and cd_material = cd_tipo_p;
 
 
		ie_disp_estoque_w 		:= 'S';
		 
		select	max(ie_material_estoque) 
		into STRICT	ie_mat_estoque_mat_w 
		from	material 
		where	cd_material		= cd_material_w;	
 
		select	coalesce(max(ie_material_estoque), ie_mat_estoque_mat_w) 
		into STRICT	ie_material_estoque_w 
		from	material_estab	 
		where	cd_estabelecimento	= cd_estabelecimento_w 
		and	cd_material		= cd_material_w;
 
		ie_disp_estoque_w := obter_disp_estoque(cd_material_w, cd_local_estoque_w, cd_estabelecimento_w, 0, qt_procedimento_p, cd_fornec_consignado_w, ie_disp_estoque_w);
 
		if (ie_disp_estoque_w = 'N') and (ie_material_estoque_w = 'S') then 
			-- Não existe Saldo de Estoque para este material #@CD_MATERIAL#@ 
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(191443,'CD_MATERIAL=' || cd_material_w);
		end if;
 
 
		if (coalesce(cd_convenio_ww::text, '') = '') then 
			SELECT * FROM obter_convenio_execucao(nr_atend_w, clock_timestamp(), cd_convenio_w, cd_categoria_w, nr_doc_convenio_w, ie_tipo_guia_w, cd_senha_w) INTO STRICT cd_convenio_w, cd_categoria_w, nr_doc_convenio_w, ie_tipo_guia_w, cd_senha_w;
		else 
			cd_convenio_w	:= cd_convenio_ww;
			cd_categoria_w	:= cd_categoria_ww;
		end if;
 
		insert into material_atend_paciente(	nr_sequencia, 
							nr_atendimento, 
							dt_entrada_unidade, 
							cd_material, 
							dt_atendimento, 
							cd_unidade_medida, 
							qt_material, 
							dt_atualizacao, 
							nm_usuario, 
							cd_acao, 
							cd_setor_atendimento, 
							nr_seq_atepacu, 
							cd_material_prescricao, 
							cd_material_exec, 
							ie_via_aplicacao, 
							dt_prescricao, 
							nr_prescricao, 
							nr_sequencia_prescricao, 
							cd_cgc_fornecedor, 
							qt_executada, 
							nr_cirurgia, 
							cd_local_estoque, 
							vl_unitario, 
							qt_ajuste_conta, 
							ie_valor_informado, 
							ie_guia_informada, 
							ie_auditoria, 
							nm_usuario_original, 
							cd_situacao_glosa, 
							cd_convenio, 
							cd_categoria, 
							nr_doc_convenio, 
							ie_tipo_guia, 
							nr_seq_lote_fornec, 
							cd_senha) 
					values (	nr_sequencia_w, 
							nr_atend_w, 
							dt_ent_unidade_w, 
							cd_tipo_p, 
							clock_timestamp(), 
							cd_unidade_medida_w, 
							qt_procedimento_p, 
							clock_timestamp(), 
							nm_usuario_p, 
							'1', 
							cd_setor_atendimento_w, 
							nr_seq_atepacu_w, 
							cd_material_w, 
							cd_material_w, 
							ie_via_aplicacao_w, 
							dt_prescr_w, 
							nr_doc_solicitacao_p, 
							nr_seq_prescr_w, 
							cd_fornec_consignado_w, 
							qt_procedimento_p, 
							null, 
							cd_local_estoque_w, 
							0, 
							0, 
							'N', 
							'N', 
							'N', 
							nm_usuario_p, 
							0, 
							cd_convenio_w, 
							cd_categoria_w, 
							nr_doc_convenio_w, 
							ie_tipo_guia_w, 
							nr_seq_lote_fornec_w, cd_senha_w);
		CALL atualiza_preco_material(nr_sequencia_w, nm_usuario_p);
		 
		ds_msg_w := ' Seq prescr material:'||nr_sequencia_w||obter_desc_expressao(326091)/*' Material:'*/||cd_material_w||obter_desc_expressao(301673)/*' Via aplicação: '*/||ie_via_aplicacao_w||obter_desc_expressao(298272)/*'Seq prescrição:'*/||': '||nr_seq_prescr_w|| 
			  ' CGC consignado:'||cd_fornec_consignado_w||obter_desc_expressao(292679)/*' Local estoque '*/||cd_local_estoque_w||obter_desc_expressao(326148)/*' Convênio: '*/||cd_convenio_w||obter_desc_expressao(288101)/*' Doc Convênio: '*/||': '||nr_doc_convenio_w|| 
			  obter_desc_expressao(299808)/*' Tipo guia: '*/
||': '||ie_tipo_guia_w||obter_desc_expressao(306362)/*' Seq lote fornecedor: '*/||nr_seq_lote_fornec_w;
 
 
	end if;
 
	insert into san_log_integracao(	nr_sequencia, 
					dt_atualizacao, 
					nm_usuario, 
					dt_registro, 
					ie_erro, 
					ds_erro , 
					ie_tipo, 
					nm_usuario_registro, 
					cd_tipo,         
					nr_doc_solicitacao, 
					dt_transfusao,      
					qt_procedimento, 
					nr_atendimento, 
					nr_prescricao) 
			values (	nextval('san_log_integracao_seq'), 
					clock_timestamp(), 
					nm_usuario_p, 
					clock_timestamp(), 
					'M', 
					ds_erro_w, 
					ie_tipo_p, 
					nm_usuario_p, 
					cd_tipo_p,         
					nr_doc_solicitacao_p, 
					dt_transfusao_p,      
					qt_procedimento_p, 
					nr_atend_w, 
					nr_prescr_w);
exception 
	when others then 
	sql_errm_w	:= sqlerrm;
	insert into san_log_integracao(	nr_sequencia, 
					dt_atualizacao, 
					nm_usuario, 
					dt_registro, 
					ie_erro, 
					ds_erro , 
					ie_tipo, 
					nm_usuario_registro, 
					cd_tipo,         
					nr_doc_solicitacao, 
					dt_transfusao,      
					qt_procedimento, 
					nr_atendimento, 
					nr_prescricao) 
			values (	nextval('san_log_integracao_seq'), 
					clock_timestamp(), 
					nm_usuario_p, 
					clock_timestamp(), 
					'E', 
					sql_errm_w, 
					ie_tipo_p, 
					nm_usuario_p, 
					cd_tipo_p,         
					nr_doc_solicitacao_p, 
					dt_transfusao_p,      
					qt_procedimento_p, 
					nr_atend_w, 
					nr_prescr_w);
					commit;
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(191444,'DS_ERRO=' || sql_errm_w);
end;			
 
commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_san_integr_hnsg (ie_tipo_p text, cd_tipo_p bigint, nr_doc_solicitacao_p bigint, qt_procedimento_p bigint, dt_transfusao_p timestamp, nm_usuario_p text) FROM PUBLIC;

