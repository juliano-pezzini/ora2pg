-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_tit_rec_mens_pag ( nr_titulo_p titulo_receber.nr_titulo%type, nr_seq_mensalidade_p pls_mensalidade.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE

 
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
Finalidade: Gerar mensagens para os itens pagos da mensalidade que não possuem coparticipação. 
------------------------------------------------------------------------------------------------------------------- 
Locais de chamada direta: 
[X] Objetos do dicionário [ ] Tasy (Delphi/Java) [ ] Portal [ ] Relatórios [ ] Outros: 
 ------------------------------------------------------------------------------------------------------------------ 
Pontos de atenção: 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
 
 
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
cd_area_w			bigint;
cd_especialidade_w		bigint;
cd_grupo_w			bigint;
ie_origem_proced_ww		bigint;
nr_seq_regra_internacao_w	pls_conv_serv_extrat_mens.nr_sequencia%type;
ds_servico_dest_w		pls_conv_serv_extrat_mens.ds_servico_dest%type;
ie_cooperado_w			varchar(1);
cd_pessoa_fisica_w		pessoa_fisica.cd_pessoa_fisica%type;
qt_coop_w			bigint;
cd_pf_prest_w			pls_prestador.cd_pessoa_fisica%type;
cd_cgc_prest_w			pls_prestador.cd_cgc%type;
qt_coop_prest_w			integer;
ie_prest_exec_w			varchar(1);

C01 CURSOR(	nr_seq_mensalidade_pc 	pls_mensalidade.nr_sequencia%type) FOR 
	SELECT	f.cd_procedimento, 
		f.ie_origem_proced 
	from	pls_conta_proc			f, 
		pls_conta_medica_resumo		e, 
		pls_conta			d, 
		pls_mensalidade_seg_item	c, 
		pls_mensalidade_segurado	b, 
		pls_mensalidade			a 
	where	f.nr_sequencia 			= e.nr_seq_conta_proc 
	and	d.nr_sequencia 			= e.nr_seq_conta 
	and	d.nr_sequencia			= c.nr_seq_conta 
	and	b.nr_sequencia			= c.nr_seq_mensalidade_seg 
	and	a.nr_sequencia 			= b.nr_seq_mensalidade 
	and	a.nr_sequencia			= nr_seq_mensalidade_pc 
	and	not exists (	SELECT		1 
				from		pls_conta_coparticipacao x 
				where		x.nr_seq_conta 		= d.nr_sequencia) 
	group by 
		f.cd_procedimento, 
		f.ie_origem_proced;

C02 CURSOR(	nr_seq_mensalidade_pc 	pls_mensalidade.nr_sequencia%type) FOR 
	SELECT	e.dt_item, 
		substr(pls_obter_dados_segurado(d.nr_seq_segurado,'N'),1,255) nm_segurado, 
		substr(pls_obter_dados_segurado(d.nr_seq_segurado,'C'),1,255) cd_usuario_plano, 
		sum(e.vl_liberado) vl_liberado, 
		g.ds_servico_dest ds_item, 
		d.nr_seq_segurado nr_seq_segurado, 
		a.dt_referencia dt_referencia, 
		coalesce(g.ie_benef_cooperado,'A') ie_benef_cooperado, 
		d.nr_seq_prestador_exec nr_seq_prestador_exec, 
		coalesce(g.ie_prestador_exec_cooperado,'A') ie_prestador_exec_cooperado 
	from	pls_conv_serv_extrat_mens		g, 
		pls_conta_proc				f, 
		pls_conta_medica_resumo			e, 
		pls_conta				d, 
		pls_mensalidade_seg_item		c, 
		pls_mensalidade_segurado		b, 
		pls_mensalidade				a 
	where	f.nr_sequencia 				= e.nr_seq_conta_proc 
	and	d.nr_sequencia 				= e.nr_seq_conta 
	and	d.nr_sequencia				= c.nr_seq_conta 
	and	b.nr_sequencia				= c.nr_seq_mensalidade_seg 
	and	a.nr_sequencia 				= b.nr_seq_mensalidade 
	and	a.nr_sequencia				= nr_seq_mensalidade_pc 
	and	coalesce(g.nr_seq_material,1)		= coalesce(g.nr_seq_material,1) 
	and	coalesce(g.ie_origem_proced,1)		= coalesce(g.ie_origem_proced,1) 
	and	((coalesce(g.cd_procedimento,1)		= coalesce(g.cd_procedimento,1)) or (g.cd_procedimento = cd_procedimento_w) 
	and (coalesce(g.ie_origem_proced,ie_origem_proced_ww) = ie_origem_proced_ww))	 
	and	((coalesce(g.cd_area_procedimento::text, '') = '') or (g.cd_area_procedimento	= cd_area_w)) 
	and	((coalesce(g.cd_especialidade::text, '') = '') or (g.cd_especialidade		= cd_especialidade_w)) 
	and	((coalesce(g.cd_grupo_proc::text, '') = '') or (g.cd_grupo_proc		= cd_grupo_w)) 
	and	((coalesce(g.ie_tipo_despesa::text, '') = '') or (g.ie_tipo_despesa		= f.ie_tipo_despesa)) 
	and 	coalesce(g.ie_atend_internacao,'N') = 'N' 
	and	((coalesce(nr_seq_regra_internacao_w,0) = 0) or ((coalesce(nr_seq_regra_internacao_w,0) > 0) and 	exists (SELECT 1 
														from	pls_conta x 
														where	x.nr_sequencia = d.nr_seq_conta_princ 
														and	x.ie_tipo_guia <> 5))) 
	and	not exists (	select	1 
				from	pls_conta_coparticipacao x 
				where	x.nr_seq_conta 		= d.nr_sequencia) 
	group by 
		e.dt_item, 
		d.nr_seq_segurado, 
		g.ds_servico_dest, 
		a.dt_referencia, 
		g.ie_benef_cooperado, 
		d.nr_seq_prestador_exec, 
		g.ie_Prestador_exec_cooperado;

C03 CURSOR(	nr_seq_mensalidade_pc 	pls_mensalidade.nr_sequencia%type) FOR 
	SELECT	e.dt_item, 
		substr(pls_obter_dados_segurado(d.nr_seq_segurado,'N'),1,255) nm_segurado, 
		substr(pls_obter_dados_segurado(d.nr_seq_segurado,'C'),1,255) cd_usuario_plano, 
		sum(e.vl_liberado) vl_liberado, 
		g.ds_servico_dest ds_item, 
		d.nr_seq_segurado nr_seq_segurado, 
		a.dt_referencia dt_referencia, 
		coalesce(g.ie_benef_cooperado,'A') ie_benef_cooperado, 
		d.nr_seq_prestador_exec nr_seq_prestador_exec, 
		coalesce(g.ie_prestador_exec_cooperado,'A') ie_prestador_exec_cooperado 
	from	pls_conv_serv_extrat_mens		g, 
		pls_conta_mat				f, 
		pls_conta_medica_resumo			e, 
		pls_conta				d, 
		pls_mensalidade_seg_item		c, 
		pls_mensalidade_segurado		b, 
		pls_mensalidade				a 
	where	coalesce(g.cd_procedimento,1)		= coalesce(g.cd_procedimento,1) 
	and	coalesce(g.ie_origem_proced,1)		= coalesce(g.ie_origem_proced,1) 
	and	coalesce(g.nr_seq_material,1)		= coalesce(g.nr_seq_material,1) 
	and	f.nr_seq_material 			= g.nr_seq_material 
	and	f.nr_sequencia				= e.nr_seq_conta_mat 
	and	d.nr_sequencia 				= e.nr_seq_conta 
	and	d.nr_sequencia				= c.nr_seq_conta 
	and	b.nr_sequencia				= c.nr_seq_mensalidade_seg 
	and	a.nr_sequencia 				= b.nr_seq_mensalidade 
	and	a.nr_sequencia				= nr_seq_mensalidade_pc 
	and 	coalesce(g.ie_atend_internacao,'N') = 'N' 
	and	((nr_seq_regra_internacao_w = 0) or ((nr_seq_regra_internacao_w > 0) and exists (SELECT 1 
												from	pls_conta x 
												where	x.nr_sequencia = d.nr_seq_conta_princ 
												and	x.ie_tipo_guia <> 5))) 
	and	not exists (	select	1 
				from	pls_conta_coparticipacao x 
				where	x.nr_seq_conta 		= d.nr_sequencia) 
	group by 
		e.dt_item, 
		d.nr_seq_segurado, 
		g.ds_servico_dest, 
		a.dt_referencia, 
		g.ie_benef_cooperado, 
		d.nr_seq_prestador_exec, 
		g.ie_prestador_exec_cooperado;

C04 CURSOR(	nr_seq_mensalidade_pc 	pls_mensalidade.nr_sequencia%type) FOR 
	SELECT	a.dt_item, 
		substr(pls_obter_dados_segurado(b.nr_seq_segurado,'N'),1,255) nm_segurado, 
		substr(pls_obter_dados_segurado(b.nr_seq_segurado,'C'),1,255) cd_usuario_plano, 
		sum(a.vl_liberado) vl_liberado 
	from	pls_conta_medica_resumo			a, 
		pls_conta				b, 
		pls_mensalidade_seg_item		c, 
		pls_mensalidade_segurado		d, 
		pls_mensalidade				e 
	where	b.nr_sequencia	= c.nr_seq_conta 
	and	c.nr_seq_mensalidade_seg = d.nr_sequencia 
	and	d.nr_seq_mensalidade = e.nr_sequencia 
	and	a.nr_seq_conta = b.nr_sequencia 
	and	e.nr_sequencia = nr_seq_mensalidade_pc 
	and 	exists (SELECT 1 
			from	pls_conta x 
			where	x.nr_sequencia = b.nr_seq_conta_princ 
			and	x.ie_tipo_guia = 5) 
	and	not exists (	select			1 
				from			pls_conta_coparticipacao x 
				where			x.nr_seq_conta 		= b.nr_sequencia) 
	group by 
		a.dt_item, 
		b.nr_seq_segurado;
	
BEGIN 
 
begin 
select	max(nr_sequencia), 
	max(ds_servico_dest) 
into STRICT	nr_seq_regra_internacao_w, 
	ds_servico_dest_w 
from	pls_conv_serv_extrat_mens 
where	coalesce(ie_atend_internacao,'N') = 'S';
 
exception 
when others then 
	nr_seq_regra_internacao_w := 0;
	ds_servico_dest_w	:= null;
end;
 
if (nr_titulo_p IS NOT NULL AND nr_titulo_p::text <> '') and (nr_seq_mensalidade_p IS NOT NULL AND nr_seq_mensalidade_p::text <> '') then 
	for r_c01_w in C01(nr_seq_mensalidade_p) loop 
		begin		 
		cd_procedimento_w	:= r_c01_w.cd_procedimento;
		ie_origem_proced_w	:= r_c01_w.ie_origem_proced;
		SELECT * FROM pls_obter_estrut_proc( cd_procedimento_w, ie_origem_proced_w, cd_area_w, cd_especialidade_w, cd_grupo_w, ie_origem_proced_ww ) INTO STRICT cd_area_w, cd_especialidade_w, cd_grupo_w, ie_origem_proced_ww;
 
		for r_c02_w in C02(nr_seq_mensalidade_p) loop 
			begin 
			select	max(cd_pessoa_fisica) 
			into STRICT	cd_pessoa_fisica_w 
			from	pls_segurado 
			where	nr_sequencia = r_c02_w.nr_seq_segurado;
			 
			select	count(1) 
			into STRICT	qt_coop_w 
			from	pls_cooperado 
			where	cd_pessoa_fisica = cd_pessoa_fisica_w 
			and	ie_status = 'A' 
			and	dt_inclusao <= r_c02_w.dt_referencia;
		 
			if (qt_coop_w > 0) then 
				ie_cooperado_w := 'C';
			else 
				ie_cooperado_w := 'N';
			end if;
 
			if (r_c02_w.nr_seq_prestador_exec IS NOT NULL AND r_c02_w.nr_seq_prestador_exec::text <> '') then 
				select	max(cd_pessoa_fisica), 
					max(cd_cgc) 
				into STRICT	cd_pf_prest_w, 
					cd_cgc_prest_w 
				from	pls_prestador 
				where	nr_sequencia = r_c02_w.nr_seq_prestador_exec;
 
				if (cd_pf_prest_w IS NOT NULL AND cd_pf_prest_w::text <> '') then 
					select	count(1) 
					into STRICT	qt_coop_prest_w 
					from	pls_cooperado 
					where	cd_pessoa_fisica = cd_pf_prest_w 
					and	ie_status = 'A' 
					and	dt_inclusao <= r_c02_w.dt_referencia;
				elsif (cd_cgc_prest_w IS NOT NULL AND cd_cgc_prest_w::text <> '') then 
					select	count(1) 
					into STRICT	qt_coop_prest_w 
					from	pls_cooperado 
					where	cd_cgc = cd_cgc_prest_w 
					and	ie_status = 'A' 
					and	dt_inclusao <= r_c02_w.dt_referencia;
				end if;
				 
				if (qt_coop_prest_w > 0) then 
					ie_prest_exec_w := 'C';
				else 
					ie_prest_exec_w := 'N';
				end if;
			else 
				ie_prest_exec_w := 'A';
			end if;	
 
			if	((r_c02_w.ie_benef_cooperado = 'A') or (ie_cooperado_w = r_c02_w.ie_benef_cooperado)) and 
				((r_c02_w.ie_prestador_exec_cooperado = 'A') or (ie_prest_exec_w = r_c02_w.ie_prestador_exec_cooperado) or (ie_prest_exec_w = 'A')) then 
				CALL gerar_titulo_receber_mens_ops(	nr_titulo_p, 
								'SC', 
								'Mensagem gerada automaticamente pelo sistema com o detalhamento da utilização do plano', 
								r_c02_w.dt_item, 
								r_c02_w.cd_usuario_plano, 
								r_c02_w.nm_segurado, 
								null, 
								null, 
								r_c02_w.vl_liberado, 
								r_c02_w.ds_item, 
								null, 
								null, 
								'T', 
								nm_usuario_p, 
								'N');
			end if;
			end;
		end loop;		
		end;
	end loop;
 
	for r_c03_w in C03(nr_seq_mensalidade_p) loop 
		begin 
		select	max(cd_pessoa_fisica) 
		into STRICT	cd_pessoa_fisica_w 
		from	pls_segurado 
		where	nr_sequencia = r_c03_w.nr_seq_segurado;
		 
		select	count(1) 
		into STRICT	qt_coop_w 
		from	pls_cooperado 
		where	cd_pessoa_fisica = cd_pessoa_fisica_w 
		and	ie_status = 'A' 
		and	dt_inclusao <= r_c03_w.dt_referencia;
	 
		if (qt_coop_w > 0) then 
			ie_cooperado_w := 'C';
		else 
			ie_cooperado_w := 'N';
		end if;
		 
		if (r_c03_w.nr_seq_prestador_exec IS NOT NULL AND r_c03_w.nr_seq_prestador_exec::text <> '') then 
			select	max(cd_pessoa_fisica), 
				max(cd_cgc) 
			into STRICT	cd_pf_prest_w, 
				cd_cgc_prest_w 
			from	pls_prestador 
			where	nr_sequencia = r_c03_w.nr_seq_prestador_exec;
 
			if (cd_pf_prest_w IS NOT NULL AND cd_pf_prest_w::text <> '') then 
				select	count(1) 
				into STRICT	qt_coop_prest_w 
				from	pls_cooperado 
				where	cd_pessoa_fisica = cd_pf_prest_w 
				and	ie_status = 'A' 
				and	dt_inclusao <= r_c03_w.dt_referencia;
			elsif (cd_cgc_prest_w IS NOT NULL AND cd_cgc_prest_w::text <> '') then 
				select	count(1) 
				into STRICT	qt_coop_prest_w 
				from	pls_cooperado 
				where	cd_cgc = cd_cgc_prest_w 
				and	ie_status = 'A' 
				and	dt_inclusao <= r_c03_w.dt_referencia;
			end if;
			 
			if (qt_coop_prest_w > 0) then 
				ie_prest_exec_w := 'C';
			else 
				ie_prest_exec_w := 'N';
			end if;
		else 
			ie_prest_exec_w := 'A';
		end if;	
 
		if	((r_c03_w.ie_benef_cooperado = 'A') or (ie_cooperado_w = r_c03_w.ie_benef_cooperado)) and 
			((r_c03_w.ie_prestador_exec_cooperado = 'A') or (ie_prest_exec_w = r_c03_w.ie_prestador_exec_cooperado) or (ie_prest_exec_w = 'A')) then 
			CALL gerar_titulo_receber_mens_ops(	nr_titulo_p, 
							'SC', 
							'Mensagem gerada automaticamente pelo sistema com o detalhamento da utilização do plano', 
							r_c03_w.dt_item, 
							r_c03_w.cd_usuario_plano, 
							r_c03_w.nm_segurado, 
							null, 
							null, 
							r_c03_w.vl_liberado, 
							r_c03_w.ds_item, 
							null, 
							null, 
							'T', 
							nm_usuario_p, 
							'N');
		end if;
		end;
	end loop;
	 
	if (coalesce(nr_seq_regra_internacao_w,0) > 0) then 
		for r_c04_w in C04(nr_seq_mensalidade_p) loop 
			begin 
			CALL gerar_titulo_receber_mens_ops(	nr_titulo_p, 
							'SC', 
							'Mensagem gerada automaticamente pelo sistema com o detalhamento da utilização do plano', 
							r_c04_w.dt_item, 
							r_c04_w.cd_usuario_plano, 
							r_c04_w.nm_segurado, 
							null, 
							null, 
							r_c04_w.vl_liberado, 
							ds_servico_dest_w, 
							null, 
							null, 
							'T', 
							nm_usuario_p, 
							'N');
			end;
		end loop;
	end if;
end if;
/* Sem commit */
 
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_tit_rec_mens_pag ( nr_titulo_p titulo_receber.nr_titulo%type, nr_seq_mensalidade_p pls_mensalidade.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;

