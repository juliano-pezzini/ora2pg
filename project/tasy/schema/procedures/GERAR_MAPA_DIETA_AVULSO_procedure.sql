-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_mapa_dieta_avulso ( cd_setor_atendimento_p bigint, nm_usuario_p text, cd_pessoa_fisica_p text, nr_atendimento_p bigint, dt_dieta_p timestamp, cd_refeicao_p text) AS $body$
DECLARE

 
 
nr_sequencia_w			bigint;
ie_destino_dieta_w		varchar(01)	:= 'P';
cd_unidade_basica_w		varchar(10);
cd_unidade_compl_w		varchar(10);
dt_entrada_unidade_w		timestamp;
ie_gravar_local_obs_w		varchar(1);
ds_breve_local_w		varchar(255);
ie_liberar_dieta_w		varchar(1);

C010 CURSOR FOR 
	SELECT 	dt_entrada_unidade, 
		cd_unidade_basica, 
		cd_unidade_compl, 
		SUBSTR(obter_desc_abrev_local_pa(nr_seq_local_pa),1,255) ds_breve_local 
	from 	Atend_paciente_unidade b, 
		Atendimento_paciente a 
	where 	a.nr_atendimento	= b.nr_atendimento 
	 and	a.cd_pessoa_fisica	= cd_pessoa_fisica_p 
	 and	b.cd_setor_atendimento	= cd_setor_atendimento_p 
	 and (a.nr_atendimento 	= nr_atendimento_p or coalesce(nr_atendimento_p::text, '') = '') 
	order by 1, 2, 3;


BEGIN 
 
ie_gravar_local_obs_w := obter_param_usuario(1000, 101, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_gravar_local_obs_w);
ie_liberar_dieta_w := obter_param_usuario(1000, 128, obter_perfil_ativo, nm_usuario_p, coalesce(wheb_usuario_pck.get_cd_estabelecimento,0), ie_liberar_dieta_w);
 
OPEN C010;
LOOP 
	FETCH C010 INTO 
		dt_entrada_unidade_w, 
		cd_unidade_basica_w, 
		cd_unidade_compl_w, 
		ds_breve_local_w;
	EXIT WHEN NOT FOUND; /* apply on c010 */
		cd_unidade_basica_w	:= cd_unidade_basica_w;
END LOOP;
CLOSE C010;
 
select nextval('mapa_dieta_seq') 
into STRICT nr_sequencia_w
;
 
if (cd_unidade_basica_w IS NOT NULL AND cd_unidade_basica_w::text <> '') then 
	Insert into Mapa_Dieta( 
		CD_PESSOA_FISICA, 
	    	NR_SEQUENCIA, 
		DT_DIETA, 
		CD_REFEICAO,       
		DT_ATUALIZACAO,     
		NM_USUARIO,       
		CD_SETOR_ATENDIMENTO,  
		CD_UNIDADE_BASICA,    
		CD_UNIDADE_COMPL,    
		IE_DESTINO_DIETA,    
		CD_DIETA, 
		nr_atendimento, 
    	IE_STATUS, 
		NM_USUARIO_NREC, 
		DT_ATUALIZACAO_NREC, 
		ds_observacao) 
	values (CD_PESSOA_FISICA_P, 
		NR_SEQUENCIA_W, 
		DT_DIETA_P, 
		CD_REFEICAO_P,       
		clock_timestamp(),     
		NM_USUARIO_P,       
		CD_SETOR_ATENDIMENTO_P,  
		CD_UNIDADE_BASICA_W,    
		CD_UNIDADE_COMPL_W,    
		ie_destino_dieta_w,    
		null, 
		nr_atendimento_p, 
		'A', 
		NM_USUARIO_P, 
		clock_timestamp(), 
		CASE WHEN ie_gravar_local_obs_w='S' THEN  wheb_mensagem_pck.get_texto(795998) || ' ' || ds_breve_local_w  ELSE null END );
		 
	if (ie_liberar_dieta_w = 'S') then 
		CALL liberar_dieta(nr_sequencia_w, nm_usuario_p);
	end if;
	 
	end if;
commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_mapa_dieta_avulso ( cd_setor_atendimento_p bigint, nm_usuario_p text, cd_pessoa_fisica_p text, nr_atendimento_p bigint, dt_dieta_p timestamp, cd_refeicao_p text) FROM PUBLIC;

