-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE cpoe_gerar_grid_gas ( nr_atendimento_p bigint, nr_seq_gasoterapia_p bigint, nm_usuario_p text, dt_referencia_p timestamp default clock_timestamp()) is type gas_event_record is record ( dt_evento prescr_gasoterapia_evento.dt_evento%type, ie_evento prescr_gasoterapia_evento.ie_evento%type DEFAULT NULL, nr_etapa_evento prescr_gasoterapia_evento.nr_etapa_evento%type DEFAULT NULL, ie_modo_adm prescr_gasoterapia.ie_modo_adm%type DEFAULT NULL) RETURNS varchar AS $body$
DECLARE

 
	ds_retorno_w		varchar(30);
	
BEGIN
 
	ds_retorno_w := '';
	if (nr_min_p = 0) then 
		ds_retorno_w	:= ';B;B;B;B';
	elsif (nr_min_p <= 15) then 
		ds_retorno_w	:= ';P;B;B;B';
	elsif (nr_min_p > 15 AND nr_min_p <= 30) then 
		ds_retorno_w	:= ';P;P;B;B';
	elsif (nr_min_p > 30 AND nr_min_p <= 45) then 
		ds_retorno_w	:= ';P;P;P;B';
	elsif (nr_min_p > 45) then 
		ds_retorno_w	:= ';P;P;P;P';
	else 
		ds_retorno_w	:= '';
	end if;
 
	return ds_retorno_w;
	end;
		 
--Setar o valor da hora entre uma hora inicial e uma final 
	procedure setar_valor_entre_horas( 
								nr_atendimento_p		cpoe_gasoterapia.nr_atendimento%type, 
								nr_seq_gaso_p			cpoe_gasoterapia.nr_sequencia%type, 
								nr_hora_inicio_p		number, 
								nr_hora_fim_p			number, 
								ds_valor_p				varchar2) is 
								 
	ds_comando_w		varchar2(4000);
	ds_parametro_w		varchar2(4000);
	ds_hora_w			varchar2(5);
	begin 
	RAISE NOTICE 'nr_hora_fim_p = %', nr_hora_fim_p;
	RAISE NOTICE 'nr_hora_inicio_p = %', nr_hora_inicio_p;
	if (nr_hora_inicio_p IS NOT NULL AND nr_hora_inicio_p::text <> '') then 
	 
		if (nr_hora_inicio_p > nr_hora_fim_p) then 
			for i in nr_hora_inicio_p .. 23 loop 
				begin 
				ds_hora_w		:= lpad(i,2,'0');
				ds_comando_w	:= ' update cpoe_gasoterapia ' || 
									' set 	ds_hora_' || ds_hora_w || ' = '''|| ds_valor_p ||''' ' || 
									' where	nr_atendimento = :nr_atendimento ' || 
									' and	nr_sequencia = :nr_seq_gasoterapia ' || 
									' and	ds_hora_' || ds_hora_w || ' is null ';				
				ds_parametro_w	:= 'nr_atendimento='||nr_atendimento_p||'#@#@nr_seq_gasoterapia='||nr_seq_gaso_p||'#@#@';				
				CALL exec_sql_dinamico_bv('CPOE', ds_comando_w,ds_parametro_w);
				commit;
				end;
			end loop;
			 
			for i in 0 .. nr_hora_fim_p loop 
				begin 
				ds_hora_w		:= lpad(i,2,'0');
				ds_comando_w	:= ' update cpoe_gasoterapia ' || 
									' set 	ds_hora_' || ds_hora_w || ' = '''|| ds_valor_p ||''' ' || 
										' where	nr_atendimento = :nr_atendimento ' || 
										' and	nr_sequencia = :nr_seq_gasoterapia ' || 
										' and	ds_hora_' || ds_hora_w || ' is null ';				
				ds_parametro_w	:= 'nr_atendimento='||nr_atendimento_p||'#@#@nr_seq_gasoterapia='||nr_seq_gaso_p||'#@#@';				
				CALL exec_sql_dinamico_bv('CPOE', ds_comando_w,ds_parametro_w);
				commit; 			
				end;
				end loop;
		else 
			if (nr_hora_fim_p IS NOT NULL AND nr_hora_fim_p::text <> '') then 
				for i in nr_hora_inicio_p .. nr_hora_fim_p loop 
					begin 
					ds_hora_w		:= lpad(i,2,'0');
					ds_comando_w	:= ' update cpoe_gasoterapia ' || 
										' set 	ds_hora_' || ds_hora_w || ' = '''|| ds_valor_p ||''' ' || 
											' where	nr_atendimento = :nr_atendimento ' || 
											' and	nr_sequencia = :nr_seq_gasoterapia ' || 
											' and	ds_hora_' || ds_hora_w || ' is null ';				
					ds_parametro_w	:= 'nr_atendimento='||nr_atendimento_p||'#@#@nr_seq_gasoterapia='||nr_seq_gaso_p||'#@#@';				
					CALL exec_sql_dinamico_bv('CPOE', ds_comando_w,ds_parametro_w);
					commit;			
					end;
					end loop;
			end if;
		end if;
	 
	end if;
	commit;
	end;
 
 
begin 
return;
if (trunc(dt_referencia_p) = trunc(clock_timestamp())) then 
	dt_referencia_w		:= clock_timestamp();
else 
	dt_referencia_w		:= to_date(to_char(dt_referencia_p,'dd/mm/yyyy')||' 14:00:00','dd/mm/yyyy hh24:mi:ss');
end if;
dt_inicio_w	:= trunc(dt_referencia_w,'hh24') - (6/24);
dt_fim_w 	:= ((trunc(dt_referencia_w,'hh24') + (18/24)) - ( 1/86400));
 
open c00;
loop 
fetch c00 into	nr_seq_gasoterapia_w;
EXIT WHEN NOT FOUND; /* apply on c00 */
	begin 
 
	nr_etapa_w 		:= 0;
	nr_etapa_ant_w	:= 0;
	nr_etapa_min_w	:= 999;
	ds_valor_hora_w := null;
	ds_hora_w		:= null;
	 
	-- Limpa todos os campos de horas se tiver algum evento 
	for i in 0..23 loop 
		begin 
		ds_hora_w		:= lpad(i,2,'0');
		ds_comando_w	:= ' update cpoe_gasoterapia ' || 
							' set 	ds_hora_' || ds_hora_w || ' = null' || 
							' where	nr_atendimento = :nr_atendimento ' || 
							' and	nr_sequencia = :nr_seq_gasoterapia ';				
		ds_parametro_w	:= 'nr_atendimento='||nr_atendimento_p||'#@#@nr_seq_gasoterapia='||nr_seq_gasoterapia_w||'#@#@';				
		CALL exec_sql_dinamico_bv('CPOE', ds_comando_w,ds_parametro_w);
 
		commit;
		end;
	end loop;	
	--- Abrir o cursor de eventos realizados da gasoterapia 
  open c01;
	fetch c01 
	bulk collect 
	into gasoterapia_evento_w;
	close c01;
	 
	for i in 1..gasoterapia_evento_w.count loop 
		begin 
		 
		ie_evento_w		:= gasoterapia_evento_w[i].ie_evento;
		nr_etapa_w 		:= gasoterapia_evento_w(i).nr_etapa_evento;
		-- verificação para adicionar o valor a variável de etapa_ant  
		if (nr_etapa_ant_w = 0) then 
			nr_etapa_ant_w := nr_etapa_w;
		end if;
		-- Seta o valor anterior para a variável e seta os valores entre as horas quando altera as etapas  
		if (nr_etapa_w <> nr_etapa_ant_w) then 
			nr_etapa_ant_w := nr_etapa_w;
			CALL setar_valor_entre_horas( nr_atendimento_p, nr_seq_gasoterapia_w, nr_hora_inicio_w, nr_hora_fim_w, 'C');
		end if;
		-- Verificação para caso o primeiro evento dentro do filtro não seja de inicio ele inicia no primeiro horário das seis horas anteriores 
		if (gasoterapia_evento_w[i].ie_evento in ('IN','T')) and (i = 1) then 
			ds_hora_w 			:= to_char(dt_inicio_w,'hh24');
			nr_hora_inicio_w	:= (ds_hora_w)::numeric;
			ds_valor_hora_w		:= 'C';
			ds_comando_w		:= ' update cpoe_gasoterapia ' || 
									' set 	ds_hora_' || ds_hora_w || ' = '''|| ds_valor_hora_w ||''' ' || 
									' where	nr_atendimento = :nr_atendimento ' || 
									' and	nr_sequencia = :nr_seq_gasoterapia ';
			ds_parametro_w		:= 'nr_atendimento='||nr_atendimento_p||'#@#@nr_seq_gasoterapia='||nr_seq_gasoterapia_w||'#@#@';
			CALL exec_sql_dinamico_bv('CPOE', ds_comando_w,ds_parametro_w);
			commit;
		end if;
		-- Limpa a variavel de valor de hora e pega a hora do evento  
		ds_valor_hora_w := null;
		ds_hora_w 	:= to_char(gasoterapia_evento_w[i].dt_evento,'hh24');
		nr_min_w	:= 	coalesce((to_char(gasoterapia_evento_w[i].dt_evento,'hh24'))::numeric ,0);		
		-- Grava as horas de inicio e fim da etapa para adicionar os valores nas horas entre elas 
		nr_hora_fim_w := (ds_hora_w)::numeric;
		if (coalesce(nr_hora_inicio_w::text, '') = '') then 
			nr_hora_inicio_w := (ds_hora_w)::numeric;
		end if;
		-- Adiciona o valor da hora de acordo com o evento 
		if (ie_evento_w = 'I') then 
			ds_valor_hora_w	:= 'I' || formata_ds_hora((nr_min_w)::numeric );
		elsif (ie_evento_w = 'IN') then 
			ds_valor_hora_w	:= 'C' || formata_ds_hora((nr_min_w)::numeric );
		elsif (ie_evento_w = 'R') then 
			ds_valor_hora_w	:= 'C' || formata_ds_hora((nr_min_w)::numeric );
		elsif (ie_evento_w = 'T') then 
			ds_valor_hora_w	:= 'T' || formata_ds_hora((nr_min_w)::numeric );
		end if;
 
		ds_comando_w	:= ' update cpoe_gasoterapia ' || 
							' set 	ds_hora_' ||ds_hora_w|| ' = '''||ds_valor_hora_w||''' ' || 
							' where	nr_atendimento = :nr_atendimento ' || 
							' and	nr_sequencia = :nr_seq_gasoterapia ';
		ds_parametro_w	:= 'nr_atendimento='||nr_atendimento_p||'#@#@nr_seq_gasoterapia='||nr_seq_gasoterapia_w||'#@#@';
		CALL exec_sql_dinamico_bv('CPOE', ds_comando_w,ds_parametro_w);		
		end;
	end loop;
	 
	-- Busca o ultimo evento caso não entre no cursor para ver se o item não esta com sua administração correndo 
	if (gasoterapia_evento_w.count = 0) then 
		nr_seq_envento_aux_w := null;
		 
		select	max(a.nr_prescricao) 
		into STRICT	nr_prescricao_aux_w 
		from	prescr_medica a, 
				prescr_gasoterapia b, 
				cpoe_gasoterapia c 
		where	a.nr_atendimento	= nr_atendimento_p 
		and		a.nr_prescricao		= b.nr_prescricao 
		and 	b.nr_seq_gas_cpoe 	= c.nr_sequencia 
		and		c.nr_sequencia 		= nr_seq_gasoterapia_w;
		 
		select	max(b.nr_sequencia) 
		into STRICT	nr_seq_envento_aux_w 
		from	prescr_medica a, 
				prescr_gasoterapia b, 
				prescr_gasoterapia_evento c 
		where	a.nr_prescricao 	= b.nr_prescricao 
		and		b.nr_sequencia 		= c.nr_seq_gasoterapia 
		and		c.ie_evento 		in ('I','R') 
		and		coalesce(c.ie_evento_valido,'N')	= 'S' 
		and 	b.nr_seq_gas_cpoe 	= nr_seq_gasoterapia_w 
		and		b.nr_prescricao 	= nr_prescricao_aux_w 
		and		a.nr_atendimento 	= nr_atendimento_p 
		order	by to_char(c.dt_evento,'hh24:mi');
		 
		if (nr_seq_envento_aux_w IS NOT NULL AND nr_seq_envento_aux_w::text <> '') then 
			select	max(ie_evento), 
					max(nr_etapa_evento) 
			into STRICT	ie_evento_w, 
					nr_etapa_w 
			from	prescr_gasoterapia_evento 
			where	nr_sequencia = nr_seq_envento_aux_w;
			 
			ds_hora_w 			:= 	to_char(dt_inicio_w,'hh24');
			nr_min_w			:= 	0;
			ds_valor_hora_w 	:= 	'C';
			nr_hora_inicio_w	:= 	(ds_hora_w)::numeric;
			ds_comando_w		:= ' update cpoe_gasoterapia ' || 
									' set 	ds_hora_' || ds_hora_w || ' = '''|| ds_valor_hora_w ||''' ' || 
									' where	nr_atendimento = :nr_atendimento ' || 
									' and	nr_sequencia = :nr_seq_gasoterapia ';
			ds_parametro_w		:= 	'nr_atendimento='||nr_atendimento_p||'#@#@nr_seq_gasoterapia='||nr_seq_gasoterapia_w||'#@#@';
			CALL exec_sql_dinamico_bv('CPOE', ds_comando_w,ds_parametro_w);
			commit;			
			 
		end if;		
	end if;
	 
	-- Tratamento para correr a barra enquanto ela esta correndo 
	if 	((gasoterapia_evento_w.count > 0) or (nr_seq_envento_aux_w IS NOT NULL AND nr_seq_envento_aux_w::text <> '')) and (trunc(dt_referencia_w) = trunc(clock_timestamp())) then 
		if (ie_evento_w in ('I','R')) then 
			 
			ds_hora_w 	:= to_char(dt_referencia_w,'hh24');
			nr_min_w	:= to_char(dt_referencia_w,'mi');
			RAISE NOTICE '%', nr_min_w;
			ds_valor_hora_w := 'C'||formata_ds_hora((nr_min_w)::numeric );
			nr_hora_fim_w := (ds_hora_w)::numeric;
			ds_comando_w		:= ' update cpoe_gasoterapia ' || 
									' set 	ds_hora_' || ds_hora_w || ' = '''|| ds_valor_hora_w ||''' ' || 
									' where	nr_atendimento = :nr_atendimento ' || 
									' and	nr_sequencia = :nr_seq_gasoterapia ';
			ds_parametro_w		:= 'nr_atendimento='||nr_atendimento_p||'#@#@nr_seq_gasoterapia='||nr_seq_gasoterapia_w||'#@#@';
			CALL exec_sql_dinamico_bv('CPOE', ds_comando_w,ds_parametro_w);
			commit;
		end if;
		-- Para setar os valores da hora da ultima etapa que passsou no for  
		CALL setar_valor_entre_horas( nr_atendimento_p, nr_seq_gasoterapia_w, nr_hora_inicio_w, nr_hora_fim_w, 'C');
	end if;
 
	-- Calcula a duração das etapas 
	select	dividir(obter_minutos_hora(rpad(lpad(max(qt_hora_fase),2,'0'),5,'0')),60), 
			max(nr_ocorrencia), 
			max(dt_inicio), 
			max(hr_prim_horario) 
	into STRICT	qt_hora_fase_w, 
			nr_ocorrencia_w, 
			dt_inicio_item_w, 
			hr_prim_horario_w 
	from	cpoe_gasoterapia 
	where	nr_atendimento = nr_atendimento_p 
	and		nr_sequencia = nr_seq_gasoterapia_w;
 
	if (coalesce(qt_hora_fase_w::text, '') = '') then 
		qt_hora_etapa_w := dividir(24,nr_ocorrencia_w);
	end if;
 
	dt_inicio_item_w := to_date(to_char(dt_inicio_item_w,'dd/mm/yyyy')||hr_prim_horario_w,'dd/mm/yyyy hh24:mi:ss');
	 
	-- Abre o cursor de busca dos horários pendentes 
	open c02;
	fetch c02 
	bulk collect 
	into gasoterapia_horario_w;
	close c02;
	 
	for i in 1..gasoterapia_horario_w.count loop 
		begin 
		if (nr_etapa_min_w > gasoterapia_horario_w[i].nr_etapa) then 
			nr_etapa_min_w := gasoterapia_horario_w[i].nr_etapa;
		end if;
		dt_horario_w := gasoterapia_horario_w[i].dt_horario;
		-- Seta o valor da hora inicial 
		ds_hora_w := to_char(dt_horario_w,'hh24');
		ds_valor_hora_w := 'N';
		nr_hora_inicio_w := (ds_hora_w)::numeric;
		ds_comando_w	:= ' update cpoe_gasoterapia ' || 
							' set 	ds_hora_' || ds_hora_w || ' = '''|| ds_valor_hora_w ||''' ' || 
							' where	nr_atendimento = :nr_atendimento ' || 
							' and	nr_sequencia = :nr_seq_gasoterapia ' || 
							' and	ds_hora_' || ds_hora_w || ' is null ';				
		ds_parametro_w	:= 	'nr_atendimento='||nr_atendimento_p||'#@#@nr_seq_gasoterapia='||nr_seq_gasoterapia_w||'#@#@';
		CALL exec_sql_dinamico_bv('CPOE', ds_comando_w,ds_parametro_w);
		commit;		
		-- Seta o valor de hora final 
		dt_horario_w := dt_horario_w + ((qt_hora_etapa_w - 1)/24);
		-- Verifica se o ultimo horário esta dentro do filtro se não seta como a data do filtro 
		if (dt_horario_w <= dt_fim_w) then 
			ds_hora_w := to_char(dt_horario_w,'hh24');
			ds_valor_hora_w := 'F';
		else 
			ds_hora_w := to_char(dt_fim_w,'hh24');
			ds_valor_hora_w := 'P';
		end if;
		nr_hora_fim_w := (ds_hora_w)::numeric;
		ds_comando_w	:= ' update cpoe_gasoterapia ' || 
							' set 	ds_hora_' || ds_hora_w || ' = '''|| ds_valor_hora_w ||''' ' || 
							' where	nr_atendimento = :nr_atendimento ' || 
							' and	nr_sequencia = :nr_seq_gasoterapia ' || 
							' and	ds_hora_' || ds_hora_w || ' is null ';				
		ds_parametro_w	:= 'nr_atendimento='||nr_atendimento_p||'#@#@nr_seq_gasoterapia='||nr_seq_gasoterapia_w||'#@#@';
		CALL exec_sql_dinamico_bv('CPOE', ds_comando_w,ds_parametro_w);
		commit;		
		-- Popula as horas entre a hora de inicio e fim 
		CALL setar_valor_entre_horas( nr_atendimento_p, nr_seq_gasoterapia_w, nr_hora_inicio_w, nr_hora_fim_w, 'P');
		end;
	end loop;
	 
	-- Carregar o horário pendente mesmo fora do filtro onde seu fim é após a hora de inicio do filtro 
	if (gasoterapia_horario_susp_w.count > 0) and (nr_etapa_min_w > 1) then 
	 
		select	max(c.dt_horario) 
		into STRICT	dt_horario_w 
		from	prescr_medica a, 
				prescr_gasoterapia b, 
				prescr_gasoterapia_hor c 
		where	a.nr_atendimento		= nr_atendimento_p 
		and		a.nr_prescricao			= b.nr_prescricao 
		and		b.nr_prescricao			= c.nr_prescricao 
		and		b.nr_sequencia			= c.nr_seq_gasoterapia 
		and		b.nr_seq_gas_cpoe 		= nr_seq_gasoterapia_w 
		and		coalesce(c.ie_horario_especial,'N') = 'N' 
		and 	coalesce(c.dt_suspensao::text, '') = '' 
		and		c.nr_etapa 				< nr_etapa_min_w 
		and		c.nr_etapa 				> nr_etapa_w 
		order 	by c.dt_horario;
		 
		dt_horario_w := dt_horario_w + ((qt_hora_etapa_w - 1)/24);
		if (dt_horario_w >= dt_inicio_w) then 
			ds_hora_w 			:= 	to_char(dt_horario_w,'hh24');
			nr_hora_inicio_w 	:= 	(to_char(dt_inicio_w,'hh24'))::numeric;
			nr_hora_fim_w 		:= 	(ds_hora_w)::numeric;
			ds_valor_hora_w		:= 	'F';
			ds_comando_w		:= ' update cpoe_gasoterapia ' || 
									' set 	ds_hora_' || ds_hora_w || ' = '''|| ds_valor_hora_w ||''' ' || 
									' where	nr_atendimento = :nr_atendimento ' || 
									' and	nr_sequencia = :nr_seq_gasoterapia ' || 
									' and	ds_hora_' || ds_hora_w || ' is null ';				
			ds_parametro_w		:= 'nr_atendimento='||nr_atendimento_p||'#@#@nr_seq_gasoterapia='||nr_seq_gasoterapia_w||'#@#@';
			CALL exec_sql_dinamico_bv('CPOE', ds_comando_w,ds_parametro_w);
			commit;
			CALL setar_valor_entre_horas( nr_atendimento_p, nr_seq_gasoterapia_w, nr_hora_inicio_w, nr_hora_fim_w, 'P');
		end if;			
	end if;
	 
	-- Busca a data de fim do item  
	select	max(dt_fim_horario) 
	into STRICT	dt_fim_item_w 
	from (	SELECT	max(d.dt_horario) + qt_hora_etapa_w dt_fim_horario 
				from	prescr_medica a, 
						cpoe_material b, 
						prescr_gasoterapia c, 
						prescr_gasoterapia_hor d 
				where	a.nr_atendimento	= nr_atendimento_p 
				and		a.nr_atendimento	= b.nr_atendimento 
				and		a.nr_prescricao		= c.nr_prescricao 
				and		b.nr_sequencia		= c.nr_seq_gas_cpoe 
				and		c.nr_prescricao		= d.nr_prescricao 
				and		c.nr_sequencia		= d.nr_seq_gasoterapia 
				and		b.nr_sequencia		= nr_seq_gasoterapia_w 
				and		coalesce(d.ie_horario_especial,'N') = 'N' 
				and		d.dt_horario 		between dt_inicio_w and dt_fim_w 
				and		b.dt_fim			< d.dt_horario 
				and		(b.dt_fim IS NOT NULL AND b.dt_fim::text <> '') 
				
union	all
 
				PERFORM	max(dt_fim) dt_fim_horario 
				from	cpoe_gasoterapia 
				where	nr_atendimento	= nr_atendimento_p 
				and		nr_sequencia	= nr_seq_gasoterapia_w 
				and		(dt_fim IS NOT NULL AND dt_fim::text <> '')) alias6;				
 
	-- INÍCIO: Horários/Etapas suspensas 
	open c03;
	fetch c03 
	bulk collect 
	into gasoterapia_horario_susp_w;
	close c03;
	 
	for i in 1..gasoterapia_horario_susp_w.count loop 
		begin 
		if (nr_etapa_min_w > gasoterapia_horario_susp_w[i].nr_etapa) then 
			nr_etapa_min_w := gasoterapia_horario_susp_w[i].nr_etapa;
		end if;
		dt_horario_w := gasoterapia_horario_susp_w[i].dt_horario;
		-- Seta o valor da hora inicial 
		ds_hora_w := to_char(dt_horario_w,'hh24');
		ds_valor_hora_w := 'SI';
		nr_hora_inicio_w := (ds_hora_w)::numeric;
		ds_comando_w	:= ' update cpoe_gasoterapia ' || 
							' set 	ds_hora_' || ds_hora_w || ' = '''|| ds_valor_hora_w ||''' ' || 
							' where	nr_atendimento = :nr_atendimento ' || 
							' and	nr_sequencia = :nr_seq_gasoterapia ' || 
							' and	ds_hora_' || ds_hora_w || ' is null ';
		ds_parametro_w	:= 	'nr_atendimento='||nr_atendimento_p||'#@#@nr_seq_gasoterapia='||nr_seq_gasoterapia_w||'#@#@';
		CALL exec_sql_dinamico_bv('CPOE', ds_comando_w,ds_parametro_w);
		commit;		
		-- Seta o valor de hora final 
		dt_horario_w := dt_horario_w + ((qt_hora_etapa_w - 1)/24);
		-- Verifica se o ultimo horário esta dentro do filtro se não seta como a data do filtro 
		if (dt_horario_w <= dt_fim_w) then 
			ds_hora_w := to_char(dt_horario_w,'hh24');
			ds_valor_hora_w := 'SF';
		else 
			ds_hora_w := to_char(dt_fim_w,'hh24');
			ds_valor_hora_w := 'SC';
		end if;
		nr_hora_fim_w := (ds_hora_w)::numeric;
		ds_comando_w	:= ' update cpoe_gasoterapia ' || 
							' set 	ds_hora_' || ds_hora_w || ' = '''|| ds_valor_hora_w ||''' ' || 
							' where	nr_atendimento = :nr_atendimento ' || 
							' and	nr_sequencia = :nr_seq_gasoterapia ' || 
							' and	ds_hora_' || ds_hora_w || ' is null ';				
		ds_parametro_w	:= 'nr_atendimento='||nr_atendimento_p||'#@#@nr_seq_gasoterapia='||nr_seq_gasoterapia_w||'#@#@';
		CALL exec_sql_dinamico_bv('CPOE', ds_comando_w,ds_parametro_w);
		-- Popula as horas entre a hora de inicio e fim 
		CALL setar_valor_entre_horas( nr_atendimento_p, nr_seq_gasoterapia_w, nr_hora_inicio_w, nr_hora_fim_w, 'SC');
		commit;
		end;
	end loop;
	 
	-- Carregar o horário pendente mesmo fora do filtro onde seu fim é após a hora de inicio do filtro 
	if (gasoterapia_horario_susp_w.count > 0) and (nr_etapa_min_w > 1) then 
	 
		select	max(c.dt_horario) 
		into STRICT	dt_horario_w 
		from	prescr_medica a, 
				prescr_gasoterapia b, 
				prescr_gasoterapia_hor c 
		where	a.nr_atendimento		= nr_atendimento_p 
		and		a.nr_prescricao			= b.nr_prescricao 
		and		b.nr_prescricao			= c.nr_prescricao 
		and		b.nr_sequencia			= c.nr_seq_gasoterapia 
		and		b.nr_seq_gas_cpoe 		= nr_seq_gasoterapia_w 
		and		coalesce(c.ie_horario_especial,'N') = 'N' 
		and 	(c.dt_suspensao IS NOT NULL AND c.dt_suspensao::text <> '') 
		and		c.nr_etapa 				< nr_etapa_min_w 
		and		c.nr_etapa 				> nr_etapa_w 
		order 	by c.dt_horario;
		 
		dt_horario_w := dt_horario_w + ((qt_hora_etapa_w - 1)/24);
		if (dt_horario_w >= dt_inicio_w) then 
			ds_hora_w 			:= 	to_char(dt_horario_w,'hh24');
			nr_hora_inicio_w 	:= 	(to_char(dt_inicio_w,'hh24'))::numeric;
			nr_hora_fim_w 		:= 	(ds_hora_w)::numeric;
			ds_valor_hora_w		:= 	'SF';
			ds_comando_w		:= ' update cpoe_gasoterapia ' || 
									' set 	ds_hora_' || ds_hora_w || ' = '''|| ds_valor_hora_w ||''' ' || 
									' where	nr_atendimento = :nr_atendimento ' || 
									' and	nr_sequencia = :nr_seq_gasoterapia ' || 
									' and	ds_hora_' || ds_hora_w || ' is null ';				
			ds_parametro_w		:= 'nr_atendimento='||nr_atendimento_p||'#@#@nr_seq_gasoterapia='||nr_seq_gasoterapia_w||'#@#@';
			CALL exec_sql_dinamico_bv('CPOE', ds_comando_w,ds_parametro_w);
			commit;
			CALL setar_valor_entre_horas( nr_atendimento_p, nr_seq_gasoterapia_w, nr_hora_inicio_w, nr_hora_fim_w, 'SC');
		end if;			
	end if;
	-- FIM: Horários/Etapas suspensas 
				 
	-- Retira os itens após e antes da validade do item 
	if (gasoterapia_evento_w.count > 0) and (gasoterapia_evento_w[1].dt_evento < dt_inicio_item_w) then 
		dt_inicio_item_w := gasoterapia_evento_w[1].dt_evento;
	end if;
	 
  if (dt_inicio_item_w IS NOT NULL AND dt_inicio_item_w::text <> '') and (trunc(dt_inicio_item_w) = trunc(dt_referencia_w)) and (dt_inicio_item_w > dt_inicio_w) then 
		nr_hora_inicio_w 	:= (to_char(trunc(dt_inicio_w,'hh24'),'hh24'))::numeric;
		nr_hora_fim_w		:= (to_char(trunc(dt_inicio_item_w,'hh24'),'hh24'))::numeric  - 1;
		CALL setar_valor_entre_horas( nr_atendimento_p, nr_seq_gasoterapia_w, nr_hora_inicio_w, nr_hora_fim_w, 'FV');
	end if;	
 
	if (dt_fim_item_w IS NOT NULL AND dt_fim_item_w::text <> '') and (trunc(dt_fim_item_w) = trunc(dt_referencia_w))then 
		nr_hora_inicio_w 	:= (to_char(trunc(dt_fim_item_w,'hh24'),'hh24'))::numeric;
		nr_hora_fim_w		:= (to_char(trunc(dt_inicio_w,'hh24'),'hh24'))::numeric;
		CALL setar_valor_entre_horas( nr_atendimento_p, nr_seq_gasoterapia_w, nr_hora_inicio_w, nr_hora_fim_w, 'FV');
	end if;	
	commit;	
	end;
end loop;
close c00;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE cpoe_gerar_grid_gas ( nr_atendimento_p bigint, nr_seq_gasoterapia_p bigint, nm_usuario_p text, dt_referencia_p timestamp default clock_timestamp()) is type gas_event_record is record ( dt_evento prescr_gasoterapia_evento.dt_evento%type, ie_evento prescr_gasoterapia_evento.ie_evento%type DEFAULT NULL, nr_etapa_evento prescr_gasoterapia_evento.nr_etapa_evento%type DEFAULT NULL, ie_modo_adm prescr_gasoterapia.ie_modo_adm%type DEFAULT NULL) FROM PUBLIC;

