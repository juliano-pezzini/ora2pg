-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_susp_mens_contrato_notif ( nr_seq_lote_p pls_notificacao_lote.nr_sequencia%type, nr_seq_pagador_p pls_contrato_pagador.nr_sequencia%type, dt_inicio_susp_p pls_contrato_susp_mens.dt_inicio_suspensao%type, nr_seq_etapa_cobr_p etapa_cobranca.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


nr_seq_regra_w			bigint;
nr_seq_motivo_susp_cobr_w	bigint;
qt_pagador_susp_w		integer;
ie_suspensao_mens_w		varchar(1);
nr_seq_processo_w		processo_judicial_liminar.nr_sequencia%type;
qt_regra_processo_susp_w	integer;

c01 CURSOR FOR
	SELECT	a.nr_seq_pagador,
		a.nr_sequencia nr_seq_notificacao_pagador
	from	pls_notificacao_pagador a,
		pls_contrato_pagador b
	where	b.nr_sequencia	= a.nr_seq_pagador
	and	a.nr_seq_lote	= nr_seq_lote_p
	and (nr_seq_pagador_p = 0 or a.nr_seq_pagador = nr_seq_pagador_p);

C02 CURSOR(	nr_seq_notific_pagador_pc	pls_notificacao_pagador.nr_sequencia%type) FOR
	SELECT	obter_cobranca_titulo(a.nr_titulo,'S') nr_seq_cobranca
	from	pls_notificacao_item a
	where	a.nr_seq_notific_pagador	= nr_seq_notific_pagador_pc;

BEGIN
select	a.nr_seq_regra,
	b.nr_seq_motivo_susp_cobr
into STRICT	nr_seq_regra_w,
	nr_seq_motivo_susp_cobr_w
from	pls_notificacao_lote	a,
	pls_notificacao_regra	b
where	b.nr_sequencia	= a.nr_seq_regra
and	a.nr_sequencia	= nr_seq_lote_p;

if (coalesce(nr_seq_motivo_susp_cobr_w::text, '') = '') then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(264797);
end if;

for r_c01_w in C01 loop
	begin
	ie_suspensao_mens_w := 'S';
	
	select	max(z.nr_sequencia)
	into STRICT	nr_seq_processo_w
	from	processo_judicial_liminar 	z,
		pls_segurado			y,
		pls_contrato_pagador		x
	where	y.nr_seq_pagador	= x.nr_sequencia
	and (y.nr_sequencia		= z.nr_seq_segurado or
		z.nr_seq_contrato	= y.nr_seq_contrato)
	and	x.nr_sequencia		= r_c01_w.nr_seq_pagador
	and	z.ie_estagio		= 2
	and	z.ie_impacto_notificacao = 'S';
	
	if (nr_seq_processo_w IS NOT NULL AND nr_seq_processo_w::text <> '') then
		select	count(1)
		into STRICT	qt_regra_processo_susp_w
		from	pls_processo_jud_notif
		where	nr_seq_processo = nr_seq_processo_w
		and	((coalesce(nr_seq_regra_notif::text, '') = '') or (nr_seq_regra_notif = nr_seq_regra_w))
		and	ie_permite_susp_mens = 'S';
	
		if (qt_regra_processo_susp_w = 0) then
			ie_suspensao_mens_w := 'N';
			CALL wheb_mensagem_pck.exibir_mensagem_abort(337228,'NR_PROCESSO_P=' ||to_char(nr_seq_processo_w));
		end if;
	end if;
	
	if (nr_seq_pagador_p = 0 and ie_suspensao_mens_w = 'S') or (nr_seq_pagador_p <> 0) then
		if (r_c01_w.nr_seq_pagador IS NOT NULL AND r_c01_w.nr_seq_pagador::text <> '') then
			insert into pls_contrato_susp_mens(
				nr_sequencia,
				nr_seq_pagador,
				nr_seq_motivo_suspensao,
				dt_inicio_suspensao,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				dt_fim_suspensao,
				dt_liberacao,
				nm_usuario_liberacao,
				ds_observacao,
				nr_seq_notificacao,
				ie_cobrar_periodo_susp)
			values (	nextval('pls_contrato_susp_mens_seq'),
				r_c01_w.nr_seq_pagador,
				nr_seq_motivo_susp_cobr_w,
				dt_inicio_susp_p,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				null,
				clock_timestamp(),
				nm_usuario_p,
				wheb_mensagem_pck.get_texto(1180074, 'NR_SEQ_LOTE='||nr_seq_lote_p),
				nr_seq_lote_p,
				'S');
			
			if (nr_seq_etapa_cobr_p IS NOT NULL AND nr_seq_etapa_cobr_p::text <> '') then
				for r_c02_w in C02(r_c01_w.nr_seq_notificacao_pagador) loop
					begin
					
					if (r_c02_w.nr_seq_cobranca IS NOT NULL AND r_c02_w.nr_seq_cobranca::text <> '') then
						insert	into	cobranca_etapa(	nr_sequencia, nr_seq_cobranca, nr_seq_etapa,
								dt_etapa, ds_observacao, dt_atualizacao,
								dt_atualizacao_nrec, nm_usuario, nm_usuario_nrec)
							values (	nextval('cobranca_etapa_seq'), r_c02_w.nr_seq_cobranca, nr_seq_etapa_cobr_p,
								clock_timestamp(), wheb_mensagem_pck.get_texto(1180075), clock_timestamp(),
								clock_timestamp(), nm_usuario_p, nm_usuario_p);
						
						CALL atualizar_cobranca_etapa(r_c02_w.nr_seq_cobranca, nm_usuario_p);
					end if;
					
					end;
				end loop;
			end if;
			
			update	pls_notificacao_pagador
			set	dt_susp_mens		= clock_timestamp(),
				dt_atualizacao		= clock_timestamp(),
				nm_usuario		= nm_usuario_p
			where	nr_sequencia		= r_c01_w.nr_seq_notificacao_pagador;
		end if;
	end if;
	
	end;
end loop; --C01
select	count(1)
into STRICT	qt_pagador_susp_w

where	exists (SELECT	1
		from	pls_notificacao_pagador
		where 	nr_seq_lote = nr_seq_lote_p
		and	coalesce(dt_susp_mens::text, '') = '');

if (coalesce(nr_seq_pagador_p,0) = 0 or qt_pagador_susp_w = 0) then
	update	pls_notificacao_lote
	set	dt_susp_mens		= clock_timestamp(),
		dt_atualizacao		= clock_timestamp(),
		nm_usuario		= nm_usuario_p
	where	nr_sequencia		= nr_seq_lote_p;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_susp_mens_contrato_notif ( nr_seq_lote_p pls_notificacao_lote.nr_sequencia%type, nr_seq_pagador_p pls_contrato_pagador.nr_sequencia%type, dt_inicio_susp_p pls_contrato_susp_mens.dt_inicio_suspensao%type, nr_seq_etapa_cobr_p etapa_cobranca.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;

