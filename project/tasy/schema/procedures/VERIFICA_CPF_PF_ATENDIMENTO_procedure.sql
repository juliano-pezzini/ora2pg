-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE verifica_cpf_pf_atendimento ( nr_atendimento_p bigint, cd_convenio_p bigint, ie_tipo_atendimento_p bigint, ds_erro_p INOUT text) AS $body$
DECLARE

											 
cd_pessoa_fisica_w		varchar(10);
cd_pessoa_resp_w		varchar(10);
cd_nacionalidade_w		nacionalidade.cd_nacionalidade%type;
nr_cpf_w				bigint;
nr_cartao_estrangeiro_w 		bigint;
nr_reg_geral_estrang_w		pessoa_fisica.nr_reg_geral_estrang%type;
qt_itens_regra_w			integer;
NR_PASSAPORTE_w		varchar(255);
ie_tipo_convenio_w			smallint;
ie_obriga_cpf_estrangeiro_w	varchar(1);
ie_consiste_resp_w	varchar(1);
ie_consiste_responsavel_w	varchar(1) := 'N';
ie_passaporte_pac_conv_estab_w	varchar(1) := 'N';
ie_consiste_cpf_w		varchar(1) := 'N';
ie_brasileiro_w		nacionalidade.ie_brasileiro%type;

quebra_w				varchar(10)	:= chr(13)||chr(10);


BEGIN	 
	ie_consiste_cpf_w 		:= obter_valor_param_usuario(916, 501, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento);	
	ie_obriga_cpf_estrangeiro_w 	:= obter_valor_param_usuario(916, 665, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento);
	ie_consiste_resp_w 		:= obter_valor_param_usuario(916, 718, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento);	
 
	ie_passaporte_pac_conv_estab_w := Obter_Valor_Conv_Estab(cd_convenio_p, wheb_usuario_pck.get_cd_estabelecimento, 'IE_EXIGE_PASSAPORTE_PACIENTE');
	 
	select 	max(a.cd_pessoa_responsavel), 
		max(a.cd_pessoa_fisica), 
		max(ie_tipo_convenio) 
	into STRICT	cd_pessoa_resp_w, 
		cd_pessoa_fisica_w, 
		ie_tipo_convenio_w 
	from	atendimento_paciente a 
	where 	nr_atendimento = nr_atendimento_p;
	 
	if (coalesce(ie_tipo_convenio_w::text, '') = '') then 
		select	max(ie_tipo_convenio) 
		into STRICT	ie_tipo_convenio_w 
		from	convenio 
		where	cd_convenio	= cd_convenio_p;
	end if;
	 
	select 	count(*) 
	into STRICT	qt_itens_regra_w 
	from	regra_consiste_pac_conv 
	where	coalesce(ie_tipo_atendimento,ie_tipo_atendimento_p) 	= ie_tipo_atendimento_p 
	and	coalesce(cd_convenio,cd_convenio_p) 			= cd_convenio_p 
	and	coalesce(ie_tipo_convenio,ie_tipo_convenio_w)	= ie_tipo_convenio_w 
	and	ie_resp_atendimento = 'S';
	 
	If (ie_consiste_resp_w = 'N') then 
		cd_pessoa_fisica_w := coalesce(cd_pessoa_resp_w, cd_pessoa_fisica_w);
	End if;		
	 
	If (ie_obriga_cpf_estrangeiro_w = 'S') 
	Or	(qt_itens_regra_w > 0 AND cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') 
	And (ie_passaporte_pac_conv_estab_w <> 'N') then		 
 
		select	max(a.cd_nacionalidade), 
			max(a.nr_cpf), 
			max(a.nr_cartao_estrangeiro), 
			max(a.nr_reg_geral_estrang), 
			max(a.NR_PASSAPORTE) 
		into STRICT	cd_nacionalidade_w, 
			nr_cpf_w, 
			nr_cartao_estrangeiro_w, 
			nr_reg_geral_estrang_w, 
			NR_PASSAPORTE_w 
		from	pessoa_fisica a 
		where	a.cd_pessoa_fisica = cd_pessoa_fisica_w;
		 
		If (ie_consiste_resp_w = 'S') then 
		 
			select	coalesce(max(ie_brasileiro), 'N') 
			into STRICT	ie_brasileiro_w 
			from 	nacionalidade 
			where	cd_nacionalidade = cd_nacionalidade_w;
		 
			ie_consiste_responsavel_w := 'N';
			if (ie_brasileiro_w = 'S' or cd_nacionalidade_w = '10') then 
				if (coalesce(nr_cpf_w::text, '') = '') 
				or (obter_idade_pf(cd_pessoa_fisica_w, clock_timestamp(), 'A') < 18) then 
					ie_consiste_responsavel_w := 'S';					
				end if;
			elsif	((coalesce(NR_PASSAPORTE_w::text, '') = '') and (coalesce(nr_reg_geral_estrang_w::text, '') = '')) 
			or (obter_idade_pf(cd_pessoa_fisica_w, clock_timestamp(), 'A') < 18) then 
				ie_consiste_responsavel_w := 'S';
			end if;
			 
			If (ie_consiste_responsavel_w = 'S') then			 
				cd_pessoa_fisica_w := coalesce(cd_pessoa_resp_w, cd_pessoa_fisica_w);				
				select	max(a.cd_nacionalidade), 
					max(a.nr_cpf), 
					max(a.nr_cartao_estrangeiro), 
					max(a.nr_reg_geral_estrang), 
					max(a.NR_PASSAPORTE) 
				into STRICT	cd_nacionalidade_w, 
					nr_cpf_w, 
					nr_cartao_estrangeiro_w, 
					nr_reg_geral_estrang_w, 
					NR_PASSAPORTE_w 
				from	pessoa_fisica a 
				where	a.cd_pessoa_fisica = cd_pessoa_fisica_w;				
			end if;
		End if;		
		 
		select	coalesce(max(ie_brasileiro), 'N') 
		into STRICT	ie_brasileiro_w 
		from 	nacionalidade 
		where	cd_nacionalidade = cd_nacionalidade_w;
		 
		if (ie_brasileiro_w = 'S' or cd_nacionalidade_w = '10') then 
			if (coalesce(nr_cpf_w::text, '') = '') then 
				--, o CPF do paciente ou responsável deve ser informado. 
				ds_erro_p := ds_erro_p || wheb_mensagem_pck.get_texto(279661);
			end if;
		elsif (coalesce(NR_PASSAPORTE_w::text, '') = '') and (coalesce(nr_reg_geral_estrang_w::text, '') = '') then 
			if (cd_pessoa_resp_w IS NOT NULL AND cd_pessoa_resp_w::text <> '')then 
				-- Passaporte ou Rg estrangeiro do(a) responsável #@CD_PESSOA_FISICA_P#@ deve ser informado 
				ds_erro_p := ds_erro_p || ' ' || wheb_mensagem_pck.get_texto(279663, 'CD_PESSOA_FISICA_P=' || obter_nome_pf(cd_pessoa_fisica_w));		
			else 
				-- Passaporte ou Rg estrangeiro do(a) #@CD_PESSOA_FISICA_P#@ deve ser informado 
				ds_erro_p := ds_erro_p || ' ' || wheb_mensagem_pck.get_texto(286466, 'CD_PESSOA_FISICA_P=' || obter_nome_pf(cd_pessoa_fisica_w));		
			end if;
		end if;
	elsif (ie_consiste_cpf_w = 'S') then 
		select	max(a.nr_cpf) 
		into STRICT	nr_cpf_w 
		from	pessoa_fisica a 
		where	a.cd_pessoa_fisica = cd_pessoa_fisica_w;
	 
		if (coalesce(nr_cpf_w::text, '') = '') then 
			--, o CPF do paciente ou responsável deve ser informado. 
			ds_erro_p := ds_erro_p || wheb_mensagem_pck.get_texto(279661);
		end if;
	end if;
	ds_erro_p := replace(substr(ds_erro_p,2,254),',',quebra_w);	
	 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE verifica_cpf_pf_atendimento ( nr_atendimento_p bigint, cd_convenio_p bigint, ie_tipo_atendimento_p bigint, ds_erro_p INOUT text) FROM PUBLIC;

