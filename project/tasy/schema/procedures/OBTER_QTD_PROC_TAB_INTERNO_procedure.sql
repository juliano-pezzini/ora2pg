-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE obter_qtd_proc_tab_interno (nr_seq_interno_p bigint, nr_prescricao_p bigint, nr_atendimento_p bigint, nr_interno_conta_p bigint, qt_procedimento_p INOUT bigint) AS $body$
DECLARE


nr_atendimento_w			bigint;
cd_convenio_w			integer;
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
cd_edicao_amb_w			integer;
cd_estabelecimento_w		smallint;
ie_tipo_atendimento_w		smallint;
cd_categoria_w			varchar(10);
vl_retorno_w			double precision;
ie_preco_informado_w		varchar(10);
ie_glosa_w			varchar(10);
cd_edicao_ajuste_w		integer;
ie_atend_retorno_w			varchar(01);
ie_prioridade_edicao_w		varchar(01);	
ie_prioridade_ajuste_proc_w	varchar(01);
vl_ch_honorarios_w		double precision	:= 1;
vl_ch_custo_oper_w		double precision	:= 1;
vl_m2_filme_w			double precision	:= 0;
tx_ajuste_geral_w			double precision	:= 1;
dt_inicio_vigencia_w		timestamp;
dt_conta_w			timestamp := clock_timestamp();
ie_autor_particular_w		varchar(1);
cd_convenio_glosa_ww		integer;
cd_categoria_glosa_ww		varchar(10);
nr_seq_ajuste_proc_ww		bigint;
qt_procedimento_w			double precision;
cd_setor_atendimento_w		integer;
nr_seq_cbhpm_edicao_w		bigint;
dt_vigencia_w			timestamp;
cd_setor_prescricao_w		integer;
cd_medico_resp_w		varchar(10);
ie_carater_inter_sus_w		varchar(2);
ie_reg_qt_proc_glos_part_w 	varchar(1);
nr_seq_origem_w			convenio_origem_usuario.nr_sequencia%type;
nr_seq_classif_medico_w		atendimento_paciente.nr_seq_classif_medico%type;
nr_sequencia_w 				proc_interno_conv.nr_sequencia%type;
cd_procedimento_ww 			proc_interno_conv.cd_procedimento%type;
ie_tipo_convenio_w		smallint; -- Recuperar tipo convenio
nr_seq_tipo_admissao_fat_w  atendimento_paciente.nr_seq_tipo_admissao_fat%type;
nr_seq_classif_esp_w  atendimento_paciente.nr_seq_classif_esp%type;

C01 CURSOR FOR
SELECT	qt_procedimento,
		nr_sequencia,
		cd_procedimento
from	proc_interno_conv
where	nr_seq_proc_interno	= nr_seq_interno_p
and (cd_convenio		= cd_convenio_w OR coalesce(cd_convenio::text, '') = '')
and (cd_edicao_amb		= cd_edicao_amb_w OR coalesce(cd_edicao_amb::text, '') = '')
and (ie_tipo_atendimento	= ie_tipo_atendimento_w OR coalesce(ie_tipo_atendimento::text, '') = '')
and 	((cd_setor_atendimento  = cd_setor_atendimento_w) or (coalesce(cd_setor_atendimento::text, '') = ''))
and 	((cd_estabelecimento   = coalesce(cd_estabelecimento_w, wheb_usuario_pck.get_cd_estabelecimento)) or (coalesce(cd_estabelecimento::text, '') = ''))
and	dt_vigencia_w between coalesce(dt_inicio_vigencia, dt_vigencia_w) and coalesce(dt_final_vigencia, dt_vigencia_w)
and (ie_tipo_convenio 	= ie_tipo_convenio_w OR coalesce(ie_tipo_convenio::text, '') = '')
and (nr_seq_tipo_admissao_fat  	= nr_seq_tipo_admissao_fat_w OR coalesce(nr_seq_tipo_admissao_fat::text, '') = '')
and (nr_seq_classif_esp  	= nr_seq_classif_esp_w OR coalesce(nr_seq_classif_esp::text, '') = '')
and     (((ie_reg_qt_proc_glos_part_w = 'N') and (ie_glosa_w not in ('T','G'))) or (ie_reg_qt_proc_glos_part_w = 'S'))
and	ie_situacao 		= 'A'
order by 
	coalesce(cd_edicao_amb,0),
	coalesce(cd_convenio,0),
	coalesce(ie_tipo_atendimento,0),
	coalesce(cd_setor_atendimento,0),
	coalesce(cd_estabelecimento,0),
    coalesce(ie_tipo_convenio,0),
	coalesce(nr_seq_tipo_admissao_fat,0),
	coalesce(nr_seq_classif_esp,0);



BEGIN

dt_vigencia_w	:= trunc(clock_timestamp());

begin
select	coalesce(max(cd_convenio_parametro),0),
	coalesce(max(cd_categoria_parametro),'0')
into STRICT	cd_convenio_w,
	cd_categoria_w
from	conta_paciente
where	nr_interno_conta	= nr_interno_conta_p;
exception
	when others then
	cd_convenio_w	:= 0;
end;

select	coalesce(max(nr_atendimento),0),
	max(cd_setor_atendimento)
into STRICT	nr_atendimento_w,
	cd_setor_prescricao_w
from	prescr_medica
where	nr_prescricao		= nr_prescricao_p;

if (nr_atendimento_w = 0) then
	select	coalesce(max(nr_atendimento_p),0)
	into STRICT	nr_atendimento_w
	;
end if;


select	max(cd_procedimento),
	max(ie_origem_proced)
into STRICT	cd_procedimento_w,
	ie_origem_proced_w
from	proc_interno
where	nr_sequencia		= nr_seq_interno_p;

select 	max(obter_setor_atendimento(nr_atendimento_w))
into STRICT	cd_setor_atendimento_w
;

ie_reg_qt_proc_glos_part_w := Obter_param_Usuario(916, 1059, Obter_perfil_Ativo, Obter_Usuario_Ativo, obter_estabelecimento_ativo, ie_reg_qt_proc_glos_part_w);

if (nr_atendimento_w > 0) then
	begin

	select	cd_estabelecimento,
		ie_tipo_atendimento,
		CASE WHEN coalesce(nr_atend_original::text, '') = '' THEN  'N'  ELSE 'S' END ,
		cd_medico_resp,
		ie_carater_inter_sus,
		coalesce((obter_dados_categ_conv(nr_atendimento,'OC'))::numeric ,0),
		coalesce(nr_seq_classif_medico,0),
        coalesce(nr_seq_tipo_admissao_fat,0),
        coalesce(nr_seq_classif_esp,0),
        coalesce(ie_tipo_convenio,0)
	into STRICT	cd_estabelecimento_w,
		ie_tipo_atendimento_w,
		ie_atend_retorno_w,
		cd_medico_resp_w,
		ie_carater_inter_sus_w,
		nr_seq_origem_w,
		nr_seq_classif_medico_w,
        nr_seq_tipo_admissao_fat_w,
        nr_seq_classif_esp_w,
        ie_tipo_convenio_w
	from	atendimento_paciente
	where	nr_atendimento		= nr_atendimento_w;

	select	coalesce(max(ie_prioridade_edicao_amb), 'N'),
		coalesce(max(IE_PRIORIDADE_AJUSTE_PROC), 'N')
	into STRICT	ie_prioridade_edicao_w,
		IE_PRIORIDADE_AJUSTE_PROC_w
	from	parametro_faturamento
	where	cd_estabelecimento	= cd_estabelecimento_w;

	if (cd_convenio_w = 0) then
		select	coalesce(max(obter_convenio_atendimento(nr_atendimento_w)),0)
		into STRICT	cd_convenio_w
		;

		select	coalesce(max(obter_categoria_atendimento(nr_atendimento_w)),0)
		into STRICT	cd_categoria_w
		;

	end if;
	
	if (ie_prioridade_edicao_w = 'N') then	
		SELECT	coalesce(max(CD_EDICAO_AMB),0)
		INTO STRICT	CD_EDICAO_AMB_W
		FROM 	CONVENIO_AMB
		WHERE (CD_ESTABELECIMENTO     = cd_estabelecimento_w)
		AND (CD_CONVENIO            = cd_convenio_w)
  		AND (coalesce(IE_SITUACAO,'A')   = 'A')
		and	((cd_categoria_w = 0) or (cd_categoria = cd_categoria_w))
  		AND 	(DT_INICIO_VIGENCIA     =
				(SELECT	MAX(DT_INICIO_VIGENCIA)
				FROM 	CONVENIO_AMB A	
				WHERE (A.CD_ESTABELECIMENTO  	= cd_estabelecimento_w)
				AND (A.CD_CONVENIO         	= CD_CONVENIO_w)
				AND (coalesce(A.IE_SITUACAO,'A')	= 'A')
				and	((cd_categoria_w = 0) or (a.cd_categoria = cd_categoria_w))
				AND (A.DT_INICIO_VIGENCIA 	<=  clock_timestamp())));
	else
		SELECT * FROM Obter_Edicao_Proc_Conv(cd_estabelecimento_w, CD_CONVENIO_W, CD_CATEGORIA_W, dt_conta_w, cd_procedimento_w, CD_EDICAO_AMB_W, VL_CH_HONORARIOS_W, VL_CH_CUSTO_OPER_W, VL_M2_FILME_W, dt_inicio_vigencia_w, tx_ajuste_geral_w, nr_seq_cbhpm_edicao_w) INTO STRICT CD_EDICAO_AMB_W, VL_CH_HONORARIOS_W, VL_CH_CUSTO_OPER_W, VL_M2_FILME_W, dt_inicio_vigencia_w, tx_ajuste_geral_w, nr_seq_cbhpm_edicao_w;
	end if;
	
	begin
	SELECT * FROM obter_regra_ajuste_proc(cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, cd_procedimento_w, ie_origem_proced_w, null, clock_timestamp(), 0, 0, 0, null, 0, 0, null, 0, null, null, null, null, null, vl_retorno_w, vl_retorno_w, vl_retorno_w, vl_retorno_w, vl_retorno_w, vl_retorno_w, ie_preco_informado_w, ie_glosa_w, vl_retorno_w, vl_retorno_w, cd_edicao_ajuste_w, vl_retorno_w, vl_retorno_w, vl_retorno_w, vl_retorno_w, vl_retorno_w, vl_retorno_w, vl_retorno_w, vl_retorno_w, ie_atend_retorno_w, 0, ie_autor_particular_w, cd_convenio_glosa_ww, cd_categoria_glosa_ww, nr_seq_ajuste_proc_ww, null, null, null, null, null, null, null, null, vl_retorno_w, null, cd_setor_prescricao_w, null, cd_medico_resp_w, ie_carater_inter_sus_w, null, null, nr_seq_origem_w, null, nr_seq_classif_medico_w) INTO STRICT vl_retorno_w, vl_retorno_w, vl_retorno_w, vl_retorno_w, vl_retorno_w, vl_retorno_w, ie_preco_informado_w, ie_glosa_w, vl_retorno_w, vl_retorno_w, cd_edicao_ajuste_w, vl_retorno_w, vl_retorno_w, vl_retorno_w, vl_retorno_w, vl_retorno_w, vl_retorno_w, vl_retorno_w, vl_retorno_w, ie_autor_particular_w, cd_convenio_glosa_ww, cd_categoria_glosa_ww, nr_seq_ajuste_proc_ww, vl_retorno_w;	
	exception
	when others then
		cd_edicao_ajuste_w	:= 0;
	end;		

	if (cd_edicao_ajuste_w IS NOT NULL AND cd_edicao_ajuste_w::text <> '') and (cd_edicao_ajuste_w <> 0) then
		cd_edicao_amb_w		:= cd_edicao_ajuste_w;
	end if;
	

	
	if (cd_convenio_w > 0) or (cd_edicao_amb_w > 0) or (ie_tipo_atendimento_w > 0) or (cd_setor_atendimento_w > 0) then
		
		OPEN C01;
		LOOP
		FETCH C01 into
			
			qt_procedimento_w,
			nr_sequencia_w,
			cd_procedimento_ww;
			
				
		EXIT WHEN NOT FOUND; /* apply on c01 */
		END LOOP;
		CLOSE C01;

 	end if;

	end;
end if;

qt_procedimento_p	:= qt_procedimento_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE obter_qtd_proc_tab_interno (nr_seq_interno_p bigint, nr_prescricao_p bigint, nr_atendimento_p bigint, nr_interno_conta_p bigint, qt_procedimento_p INOUT bigint) FROM PUBLIC;

