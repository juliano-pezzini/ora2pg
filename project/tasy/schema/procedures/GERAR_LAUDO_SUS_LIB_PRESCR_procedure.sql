-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_laudo_sus_lib_prescr ( nr_prescricao_p bigint, nm_usuario_p text) AS $body$
DECLARE


cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
nr_seq_proc_interno_w		bigint;
nr_sequencia_w			integer;
cd_area_procedimento_prescr_w	bigint;
cd_especialidade_prescr_w		bigint;
cd_grupo_proc_prescr_w		bigint;
cd_estabelecimento_w		smallint;
ie_gerar_laudo_w			bigint;
nr_seq_propaci_w			bigint;
nr_atendimento_w			bigint;
qt_procedimento_w			double precision;
cd_medico_w			varchar(10);
ie_classificacao_w			smallint;
ie_tipo_atendimento_w		smallint;
nr_laudo_sus_w			smallint;
ds_dado_clinico_w			varchar(2000);
ds_resumo_clinico_w		varchar(2000);
ds_exame_fis_achado_cirur_w	varchar(2000);
ie_tipo_laudo_apac_w		smallint;
cd_doenca_cid_w			varchar(10);
ie_urgencia_w			varchar(1);
qt_cid_compat_w			bigint	:= 0;
cd_pessoa_fisica_w		varchar(10);
nr_seq_w				bigint;

C01 CURSOR FOR
	SELECT	b.cd_procedimento,
		b.ie_origem_proced,
		b.qt_procedimento,
		b.nr_seq_proc_interno,
		b.nr_sequencia,
		substr(b.ds_dado_clinico,1,2000),
		substr(b.ds_resumo_clinico,1,2000),
		substr(b.ds_exame_fis_achado_cirur,1,2000),
		coalesce(b.ie_urgencia,'N')
	from	prescr_procedimento b,
		prescr_medica a
	where	a.nr_prescricao	= nr_prescricao_p
	and	a.nr_prescricao	= b.nr_prescricao;

C02 CURSOR FOR
	SELECT	ie_classificacao,
		ie_tipo_laudo_apac
	from	regra_laudo_sus_proc
	where	coalesce(cd_area_procedimento, coalesce(cd_area_procedimento_prescr_w,0))	= coalesce(cd_area_procedimento_prescr_w,0)
	and	coalesce(cd_especialidade, coalesce(cd_especialidade_prescr_w,0))		= coalesce(cd_especialidade_prescr_w,0)
	and	coalesce(cd_grupo_proc, coalesce(cd_grupo_proc_prescr_w,0))		= coalesce(cd_grupo_proc_prescr_w,0)
	and	coalesce(nr_seq_exame_interno, coalesce(nr_seq_proc_interno_w,0))		= coalesce(nr_seq_proc_interno_w,0)
	and	coalesce(ie_origem_proced, coalesce(ie_origem_proced_w,0))		= coalesce(ie_origem_proced_w,0)
	and	coalesce(cd_procedimento, coalesce(cd_procedimento_w,0))			= coalesce(cd_procedimento_w,0)
	and	coalesce(ie_tipo_atendimento,coalesce(ie_tipo_atendimento_w,0))		= coalesce(ie_tipo_atendimento_w,0)
	and	cd_estabelecimento						= cd_estabelecimento_w
	order by
		coalesce(ie_tipo_atendimento,0),
		coalesce(cd_procedimento,0),
		coalesce(ie_origem_proced,0),
		coalesce(nr_seq_exame_interno,0),
		coalesce(cd_grupo_proc,0),
		coalesce(cd_especialidade,0),
		coalesce(cd_area_procedimento,0);


BEGIN

begin
select	cd_estabelecimento,
	nr_atendimento,
	cd_medico,
	obter_tipo_atendimento(nr_atendimento),
	cd_pessoa_fisica
into STRICT	cd_estabelecimento_w,
	nr_atendimento_w,
	cd_medico_w,
	ie_tipo_atendimento_w,
	cd_pessoa_fisica_w
from	prescr_medica
where	nr_prescricao = nr_prescricao_p;
exception
	when others then
		cd_estabelecimento_w := 1;
end;

open	c01;
loop
fetch	c01 into
	cd_procedimento_w,
	ie_origem_proced_w,
	qt_procedimento_w,
	nr_seq_proc_interno_w,
	nr_sequencia_w,
	ds_dado_clinico_w,
	ds_resumo_clinico_w,
	ds_exame_fis_achado_cirur_w,
	ie_urgencia_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	ie_classificacao_w	:= 0;

	select	cd_grupo_proc,
		cd_especialidade,
		cd_area_procedimento
	into STRICT	cd_grupo_proc_prescr_w,
		cd_especialidade_prescr_w,
		cd_area_procedimento_prescr_w
	from	estrutura_procedimento_v
	where	cd_procedimento 	= cd_procedimento_w
	and	ie_origem_proced	= ie_origem_proced_w;

	open	c02;
	loop
	fetch	c02 into
		ie_classificacao_w,
		ie_tipo_laudo_apac_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin
		ie_classificacao_w	:= ie_classificacao_w;
		end;
	end loop;
	close c02;

	if (ie_classificacao_w > 0) then

		select	coalesce(max(nr_laudo_sus),0) + 1
		into STRICT	nr_laudo_sus_w
		from	sus_laudo_paciente
		where	nr_atendimento		= nr_atendimento_w
		and	ie_tipo_laudo_sus	= 0;

		select	obter_ultimo_cid_ama(nr_atendimento_w)
		into STRICT	cd_doenca_cid_w
		;

		select	count(*)
		into STRICT	qt_cid_compat_w
		from	sus_procedimento_cid
		where	cd_procedimento		= cd_procedimento_w
		and	ie_origem_proced	= ie_origem_proced_w;

		if (coalesce(cd_doenca_cid_w::text, '') = '') and (qt_cid_compat_w <> 0) then

			select	coalesce(max(a.nr_sequencia),0)
			into STRICT	nr_seq_w
			from	atend_medico_ambulatorial a
			where	(a.cd_doenca_cid IS NOT NULL AND a.cd_doenca_cid::text <> '')
			and	obter_pessoa_atendimento(a.nr_atendimento, 'C')	= cd_pessoa_fisica_W
			and	exists (SELECT 1
					from	sus_procedimento_cid b
					where	a.cd_doenca_cid		= b.cd_doenca_cid
					and	b.cd_procedimento	= cd_procedimento_w
					and	b.ie_origem_proced	= ie_origem_proced_w);

			if (nr_seq_w > 0) then
				begin
				select	cd_doenca_cid
				into STRICT	cd_doenca_cid_w
				from	atend_medico_ambulatorial
				where	nr_sequencia	= nr_seq_w;
				exception
					when others then
					cd_doenca_cid_w	:= null;
				end;
			else
				cd_doenca_cid_w	:= null;
			end if;

		elsif (coalesce(cd_doenca_cid_w::text, '') = '') and (qt_cid_compat_w = 0) then

			select	coalesce(max(a.nr_sequencia),0)
			into STRICT	nr_seq_w
			from	atendimento_paciente b,
				atend_medico_ambulatorial a
			where	coalesce(a.cd_doenca_cid,'X') <> 'X'
			and	a.nr_atendimento = b.nr_atendimento
			and	b.cd_pessoa_fisica = cd_pessoa_fisica_w;


			if (nr_seq_w > 0) then
				begin
				select	cd_doenca_cid
				into STRICT	cd_doenca_cid_w
				from	atend_medico_ambulatorial
				where	nr_sequencia	= nr_seq_w;
				exception
					when others then
					cd_doenca_cid_w	:= null;
				end;
			else
				cd_doenca_cid_w	:= null;
			end if;
		end if;

		insert into sus_laudo_paciente(
			nr_atendimento,
			ie_tipo_laudo_sus,
			nr_laudo_sus,
			dt_emissao,
			cd_procedimento_solic,
			ie_origem_proced,
			qt_procedimento_solic,
			cd_medico_requisitante,
			dt_atualizacao,
			nm_usuario,
			nr_seq_interno,
			ie_classificacao,
			ds_hipotese_diag,
			ds_resumo_exame_fis,
			ds_exame_resultado,
			ie_tipo_laudo_apac,
			ie_origem_laudo_apac,
			ie_status_processo,
			cd_cid_principal,
			ie_urgente,
			ie_diaria_acomp,
			nr_prescricao)
		values (	nr_atendimento_w,
			0,
			nr_laudo_sus_w,
			clock_timestamp(),
			cd_procedimento_w,
			ie_origem_proced_w,
			qt_procedimento_w,
			cd_medico_w,
			clock_timestamp(),
			nm_usuario_p,
			nextval('sus_laudo_paciente_seq'),
			ie_classificacao_w,
			ds_dado_clinico_w,
			ds_resumo_clinico_w,
			ds_exame_fis_achado_cirur_w,
			ie_tipo_laudo_apac_w,
			0,
			1,
			cd_doenca_cid_w,
			ie_urgencia_w,
			'N',
			nr_prescricao_p);
	end if;

	end;
end loop;
close c01;

if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_laudo_sus_lib_prescr ( nr_prescricao_p bigint, nm_usuario_p text) FROM PUBLIC;

