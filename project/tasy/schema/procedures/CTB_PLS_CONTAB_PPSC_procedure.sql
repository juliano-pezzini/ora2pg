-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ctb_pls_contab_ppsc ( nr_lote_contabil_p bigint, nm_usuario_p text, ie_exclusao_p text, ds_retorno_p INOUT text) AS $body$
DECLARE


ds_item_w			w_pls_movimento_sem_conta.ds_item%type;
ds_compl_historico_w		w_movimento_contabil.ds_compl_historico%type;
nm_pagador_w			w_pls_movimento_sem_conta.ds_observacao%type;
cd_conta_contabil_w		w_movimento_contabil.cd_conta_contabil%type;
ie_debito_credito_w		w_movimento_contabil.ie_debito_credito%type;
ie_centro_custo_w		conta_contabil.ie_centro_custo%type;
vl_contabil_w			w_movimento_contabil.vl_movimento%type;
nr_seq_w_movto_cont_w		w_movimento_contabil.nr_sequencia%type;
cd_historico_w			w_movimento_contabil.cd_historico%type;
nr_lote_contabil_w		w_pls_movimento_sem_conta.nr_lote_contabil%type;
nr_titulo_w			titulo_receber.nr_titulo%type;
nr_seq_regra_cc_item_w		pls_regra_centro_custo.nr_sequencia%type;
nr_seq_trans_fin_baixa_prov_w	pls_parametros.nr_seq_trans_fin_baixa_prov%type;
nr_seq_movimento_item_w		pls_ppsc_movimento_item.nr_sequencia%type;
cd_centro_custo_w		w_movimento_contabil.cd_centro_custo%type;
cd_centro_custo_item_w		w_movimento_contabil.cd_centro_custo%type;
cd_centro_custo_ww		w_movimento_contabil.cd_centro_custo%type;
cd_estabelecimento_w		w_movimento_contabil.cd_estabelecimento%type;
nr_seq_info_ctb_w		informacao_contabil.nr_sequencia%type;
nm_tabela_w			w_movimento_contabil.nm_tabela%type;
nm_atributo_w			w_movimento_contabil.nm_atributo%type;
nr_seq_item_w			w_movimento_contabil.nr_seq_tab_orig%type;
cd_tipo_lote_contabil_w		lote_contabil.cd_tipo_lote_contabil%type;
nr_seq_cheque_w			cheque_cr.nr_seq_cheque%type;
ie_tipo_operacao_w		pls_ppsc_movimento.ie_tipo_operacao%type;
qt_lote_contabil_w		bigint;
qt_compl_hist_w			bigint;
ie_compl_hist_w			varchar(2);
ds_compl_historico_ww		varchar(255);
nr_cheque_cr_w			varchar(255);
ds_tipo_operacao_w		varchar(255);
ds_conteudo_w			varchar(4000);
dt_referencia_w			timestamp;
dt_ref_inicial_w		timestamp;
dt_ref_final_w			timestamp;
dt_ref_inicial_ant_w		timestamp;
dt_ref_final_ant_w		timestamp;
nm_agrupador_w			varchar(255);
nr_seq_agrupamento_w		w_movimento_contabil.nr_seq_agrupamento%type;
nr_seq_lote_w			pls_ppsc_lote.nr_sequencia%type;

c_reversao CURSOR FOR
	SELECT	'D',
		b.cd_conta_deb_reversao,
		coalesce(obter_saldo_titulo_receber(c.nr_titulo,add_months(dt_referencia_w,-1)),0),
		b.cd_historico_reversao,
		c.nr_titulo,
		null nr_seq_movimento_items,
		'TITULO_RECEBER' nm_tabela,
		'VL_SALDO_TITULO' nm_atributo,
		34 nr_seq_info_ctb,
		null nr_seq_cheque,
		b.ie_tipo_operacao,
		a.nr_sequencia
	from	titulo_receber		c,
		pls_ppsc_movimento	b,
		pls_ppsc_lote		a
	where	a.nr_sequencia	= b.nr_seq_lote
	and	c.nr_titulo	= b.nr_seq_titulo
	and	a.dt_lote between dt_ref_inicial_ant_w and dt_ref_final_ant_w
	and	not exists ( SELECT	1
			     from	pls_ppsc_movimento_item	x
			     where	b.nr_sequencia	= x.nr_seq_movimento)
	
union all

	select	'C',
		b.cd_conta_cred_reversao,
		coalesce(obter_saldo_titulo_receber(c.nr_titulo,add_months(dt_referencia_w,-1)),0),
		b.cd_historico_reversao,
		c.nr_titulo,
		null,
		'TITULO_RECEBER' nm_tabela,
		'VL_SALDO_TITULO' nm_atributo,
		34 nr_seq_info_ctb,
		null nr_seq_cheque,
		b.ie_tipo_operacao,
		a.nr_sequencia
	from	titulo_receber		c,
		pls_ppsc_movimento	b,
		pls_ppsc_lote		a
	where	a.nr_sequencia	= b.nr_seq_lote
	and	c.nr_titulo	= b.nr_seq_titulo
	and	a.dt_lote between dt_ref_inicial_ant_w and dt_ref_final_ant_w
	and	not exists ( select	1
		             from	pls_ppsc_movimento_item	x
			     where	b.nr_sequencia	= x.nr_seq_movimento)
	
union all

	/* Cheque */

	select	'D',
		b.cd_conta_deb_reversao,
		c.vl_cheque,
		b.cd_historico_reversao,
		c.nr_titulo,
		null nr_seq_movimento_items,
		'CHEQUE_CR' nm_tabela,
		'VL_CHEQUE' nm_atributo,
		66 nr_seq_info_ctb,
		c.nr_seq_cheque,
		b.ie_tipo_operacao,
		a.nr_sequencia
	from	cheque_cr		c,
		pls_ppsc_movimento	b,
		pls_ppsc_lote		a
	where	a.nr_sequencia	= b.nr_seq_lote
	and	c.nr_seq_cheque	= b.nr_seq_cheque
	and	a.dt_lote between dt_ref_inicial_ant_w and dt_ref_final_ant_w
	and	not exists ( select	1
			     from	pls_ppsc_movimento_item	x
			     where	b.nr_sequencia	= x.nr_seq_movimento)
	
union all

	select	'C',
		b.cd_conta_cred_reversao,
		c.vl_cheque,
		b.cd_historico_reversao,
		c.nr_titulo,
		null,
		'CHEQUE_CR' nm_tabela,
		'VL_CHEQUE' nm_atributo,
		66 nr_seq_info_ctb,
		c.nr_seq_cheque,
		b.ie_tipo_operacao,
		a.nr_sequencia
	from	cheque_cr		c,
		pls_ppsc_movimento	b,
		pls_ppsc_lote		a
	where	a.nr_sequencia	= b.nr_seq_lote
	and	c.nr_seq_cheque	= b.nr_seq_cheque
	and	a.dt_lote between dt_ref_inicial_ant_w and dt_ref_final_ant_w
	and	not exists ( select	1
			     from	pls_ppsc_movimento_item	x
			     where	b.nr_sequencia	= x.nr_seq_movimento)
	
union all

	select	'D',
		d.cd_conta_deb_reversao,
		coalesce(coalesce(d.vl_saldo_contabil,d.vl_item),0),
		d.cd_historico_reversao,
		c.nr_titulo,
		d.nr_sequencia,
		'PLS_PPSC_MOVIMENTO_ITEM' nm_tabela,
		CASE WHEN coalesce(d.vl_saldo_contabil::text, '') = '' THEN 'VL_ITEM'  ELSE 'VL_SALDO_CONTABIL' END  nm_atributo,
		34 nr_seq_info_ctb,
		null nr_seq_cheque,
		b.ie_tipo_operacao,
		a.nr_sequencia
	from	pls_ppsc_movimento_item	d,
		titulo_receber		c,
		pls_ppsc_movimento	b,
		pls_ppsc_lote		a
	where	a.nr_sequencia	= b.nr_seq_lote	
	and	c.nr_titulo	= b.nr_seq_titulo
	and	b.nr_sequencia	= d.nr_seq_movimento
	and	a.dt_lote between dt_ref_inicial_ant_w and dt_ref_final_ant_w
	
union all

	select	'C',
		d.cd_conta_cred_reversao,
		coalesce(coalesce(d.vl_saldo_contabil,d.vl_item),0),
		d.cd_historico_reversao,
		c.nr_titulo,
		d.nr_sequencia,
		'PLS_PPSC_MOVIMENTO_ITEM' nm_tabela,
		CASE WHEN coalesce(d.vl_saldo_contabil::text, '') = '' THEN 'VL_ITEM'  ELSE 'VL_SALDO_CONTABIL' END  nm_atributo,
		34 nr_seq_info_ctb,
		null nr_seq_cheque,
		b.ie_tipo_operacao,
		a.nr_sequencia
	from	pls_ppsc_movimento_item	d,
		titulo_receber		c,
		pls_ppsc_movimento	b,
		pls_ppsc_lote		a
	where	a.nr_sequencia	= b.nr_seq_lote
	and	c.nr_titulo	= b.nr_seq_titulo
	and	b.nr_sequencia	= d.nr_seq_movimento
	and	a.dt_lote between dt_ref_inicial_ant_w and dt_ref_final_ant_w;

c_provisao CURSOR FOR
	SELECT	'D',
		b.cd_conta_debito,
		coalesce(b.vl_saldo_titulo,0),
		b.cd_historico,
		c.nr_titulo,
		null nr_seq_movimento_item,
		'PLS_PPSC_MOVIMENTO' nm_tabela,
		'VL_SALDO_TITULO' nm_atributo,
		34 nr_seq_info_ctb,
		null nr_seq_cheque,
		b.ie_tipo_operacao,
		a.nr_sequencia
	from	titulo_receber		c,
		pls_ppsc_movimento	b,
		pls_ppsc_lote		a
	where	a.nr_sequencia	= b.nr_seq_lote
	and	c.nr_titulo	= b.nr_seq_titulo
	and	a.dt_lote between dt_ref_inicial_w and dt_ref_final_w
	and	not exists ( SELECT	1
			     from	pls_ppsc_movimento_item	x
			     where	b.nr_sequencia	= x.nr_seq_movimento)
	
union all

	select	'C',
		b.cd_conta_credito,
		coalesce(b.vl_saldo_titulo,0),
		b.cd_historico,
		c.nr_titulo,
		null nr_seq_movimento_item,
		'PLS_PPSC_MOVIMENTO' nm_tabela,
		'VL_SALDO_TITULO' nm_atributo,
		34 nr_seq_info_ctb,
		null nr_seq_cheque,
		b.ie_tipo_operacao,
		a.nr_sequencia
	from	titulo_receber		c,
		pls_ppsc_movimento	b,
		pls_ppsc_lote		a
	where	a.nr_sequencia	= b.nr_seq_lote
	and	c.nr_titulo	= b.nr_seq_titulo
	and	a.dt_lote between dt_ref_inicial_w and dt_ref_final_w
	and	not exists ( select	1
			     from	pls_ppsc_movimento_item	x
			     where	b.nr_sequencia	= x.nr_seq_movimento)
	
union all

	/* Check */

	select	'D',
		b.cd_conta_debito,
		c.vl_cheque,
		b.cd_historico,
		c.nr_titulo,
		null nr_seq_movimento_items,
		'CHEQUE_CR' nm_tabela,
		'VL_CHEQUE' nm_atributo,
		66 nr_seq_info_ctb,
		c.nr_seq_cheque,
		b.ie_tipo_operacao,
		a.nr_sequencia
	from	cheque_cr		c,
		pls_ppsc_movimento	b,
		pls_ppsc_lote		a
	where	a.nr_sequencia	= b.nr_seq_lote
	and	c.nr_seq_cheque	= b.nr_seq_cheque
	and	a.dt_lote between dt_ref_inicial_w and dt_ref_final_w
	and	not exists ( select	1
			     from	pls_ppsc_movimento_item	x
			     where	b.nr_sequencia	= x.nr_seq_movimento)
	
union all

	select	'C',
		b.cd_conta_credito,
		c.vl_cheque,
		b.cd_historico,
		c.nr_titulo,
		null,
		'CHEQUE_CR' nm_tabela,
		'VL_CHEQUE' nm_atributo,
		66 nr_seq_info_ctb,
		c.nr_seq_cheque,
		b.ie_tipo_operacao,
		a.nr_sequencia
	from	cheque_cr		c,
		pls_ppsc_movimento	b,
		pls_ppsc_lote		a
	where	a.nr_sequencia	= b.nr_seq_lote
	and	c.nr_seq_cheque	= b.nr_seq_cheque
	and	a.dt_lote between dt_ref_inicial_w and dt_ref_final_w
	and	not exists ( select	1
			     from	pls_ppsc_movimento_item	x
			     where	b.nr_sequencia	= x.nr_seq_movimento)
	
union all

	select	'D',
			d.cd_conta_deb,
			coalesce(coalesce(d.vl_saldo_contabil,d.vl_item),0),
			d.cd_historico,
			c.nr_titulo,
			d.nr_sequencia,
			'PLS_PPSC_MOVIMENTO_ITEM' nm_tabela,
			CASE WHEN coalesce(d.vl_saldo_contabil::text, '') = '' THEN 'VL_ITEM'  ELSE 'VL_SALDO_CONTABIL' END  nm_atributo,
			34 nr_seq_info_ctb,
			null nr_seq_cheque,
			b.ie_tipo_operacao,
			a.nr_sequencia
	from	pls_ppsc_movimento_item	d,
			titulo_receber		c,
			pls_ppsc_movimento	b,
			pls_ppsc_lote		a
	where	a.nr_sequencia	= b.nr_seq_lote
	and		c.nr_titulo	= b.nr_seq_titulo
	and		b.nr_sequencia	= d.nr_seq_movimento
	and		a.dt_lote between dt_ref_inicial_w and dt_ref_final_w
	
union all

	select	'C',
			d.cd_conta_cred,
			coalesce(coalesce(d.vl_saldo_contabil,d.vl_item),0),
			d.cd_historico,
			c.nr_titulo,
			d.nr_sequencia,
			'PLS_PPSC_MOVIMENTO_ITEM' nm_tabela,
			CASE WHEN coalesce(d.vl_saldo_contabil::text, '') = '' THEN 'VL_ITEM'  ELSE 'VL_SALDO_CONTABIL' END  nm_atributo,
			34 nr_seq_info_ctb,
			null nr_seq_cheque,
			b.ie_tipo_operacao,
			a.nr_sequencia
	from	pls_ppsc_movimento_item	d,
			titulo_receber		c,
			pls_ppsc_movimento	b,
			pls_ppsc_lote		a
	where	a.nr_sequencia	= b.nr_seq_lote
	and		c.nr_titulo	= b.nr_seq_titulo
	and		b.nr_sequencia	= d.nr_seq_movimento
	and		a.dt_lote between dt_ref_inicial_w and dt_ref_final_w;
	
c_movimento CURSOR FOR
	SELECT	oid
	from	movimento_contabil
	where	nr_lote_contabil	= nr_lote_contabil_p;
	
c_movimento_w CURSOR FOR
	SELECT	oid
	from	w_movimento_contabil
	where	nr_lote_contabil	= nr_lote_contabil_p;
BEGIN
/*Validacao para impedir a geracao em lotes incorretos*/

if (ie_exclusao_p <> 'S') then
        select b.cd_tipo_lote_contabil
        into STRICT cd_tipo_lote_contabil_w
        from lote_contabil b
        where b.nr_lote_contabil = nr_lote_contabil_p;
        if (cd_tipo_lote_contabil_w <> 32) then
                CALL wheb_mensagem_pck.exibir_mensagem_abort(261346);
        end if;
end if;
select	dt_referencia,
	cd_estabelecimento,
	nr_lote_contabil,
	cd_tipo_lote_contabil
into STRICT 	dt_referencia_w,
	cd_estabelecimento_w,
	nr_lote_contabil_w,
	cd_tipo_lote_contabil_w
from 	lote_contabil
where 	nr_lote_contabil 	= nr_lote_contabil_p;

delete	from w_pls_movimento_sem_conta
where	ie_tipo_item	= 'PTP';

if (ie_exclusao_p = 'S') then
	begin
	CALL wheb_usuario_pck.set_ie_lote_contabil('S');
	
	for reg in c_movimento
		loop
		delete	from movimento_contabil
		where   rowid	= reg.rowid;
		end loop;
	
	update	lote_contabil
	set	vl_credito 		= 0,
		vl_debito  		= 0
	where	nr_lote_contabil 	= nr_lote_contabil_p;
	
	commit;

	update	pls_ppsc_movimento
	set	nr_lote_contabil	= 0
	where	nr_lote_contabil	= nr_lote_contabil_p;
	
	commit;
	
	update	pls_ppsc_movimento_item
	set	nr_lote_contabil	= 0
	where	nr_lote_contabil	= nr_lote_contabil_p;
	
	commit;
	
	CALL wheb_usuario_pck.set_ie_lote_contabil('N');
	end;
else
	begin
	
	CALL ctb_gravar_log_lote(	nr_lote_contabil_p,
				1,
				wheb_mensagem_pck.get_texto(1097173),
				nm_usuario_p);

	dt_referencia_w 	:= trunc(dt_referencia_w,'month');
	
	dt_ref_inicial_w	:= trunc(dt_referencia_w,'dd');
	dt_ref_final_w		:= fim_dia(fim_mes(dt_referencia_w));

	dt_ref_inicial_ant_w	:= trunc(add_months(dt_referencia_w,-1),'dd');
	dt_ref_final_ant_w	:= fim_dia(fim_mes(add_months(dt_referencia_w,-1)));

	if (ie_exclusao_p <> 'S') then
		select	count(1)
		into STRICT 	qt_lote_contabil_w
		from 	lote_contabil
		where 	cd_tipo_lote_contabil	= cd_tipo_lote_contabil_w
		and	nr_lote_contabil 	<> nr_lote_contabil_p
		and	coalesce(cd_estabelecimento, cd_estabelecimento_w) = cd_estabelecimento_w
		and	dt_referencia between dt_ref_inicial_w and dt_ref_final_w  LIMIT 1;

		if (qt_lote_contabil_w > 0) then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(183979, 'DT_REFERENCIA=' || to_char(dt_referencia_w,'mm/yyyy'));
		end if;
	end if;
	
	/* Obtain cost center */

	SELECT * FROM pls_obter_centro_custo(	'R', null, cd_estabelecimento_w, '', '', '', '', '', cd_centro_custo_item_w, nr_seq_regra_cc_item_w) INTO STRICT cd_centro_custo_item_w, nr_seq_regra_cc_item_w;
	
	begin
	select	nr_seq_trans_fin_baixa_prov
	into STRICT	nr_seq_trans_fin_baixa_prov_w
	from	pls_parametros
	where	cd_estabelecimento	= cd_estabelecimento_w;
	exception
	when others then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(183980);
	end;
	
	CALL wheb_usuario_pck.set_ie_lote_contabil('S');

	for reg in c_movimento_w
		loop
		delete	from w_movimento_contabil
		where   rowid	= reg.rowid;
		end loop;
	
	/* Update the accounting batch number */

	update	pls_ppsc_movimento a
	set	nr_lote_contabil	= nr_lote_contabil_p
	where	a.nr_seq_lote in (SELECT	b.nr_sequencia
					from	pls_ppsc_lote b
					where	b.dt_lote between dt_ref_inicial_ant_w and dt_ref_final_ant_w);
					
	commit;				
				
	update	pls_ppsc_movimento_item a
	set	nr_lote_contabil	= nr_lote_contabil_p
	where	exists (SELECT	1
			from	pls_ppsc_lote		c,
				pls_ppsc_movimento	b
			where	b.nr_sequencia	= a.nr_seq_movimento
			and	c.nr_sequencia	= b.nr_seq_lote
			and	c.dt_lote between dt_ref_inicial_w and dt_ref_final_w);
			
	commit;		
			
	update	pls_ppsc_movimento a
	set	nr_lote_contabil	= nr_lote_contabil_p
	where	a.nr_seq_lote in (SELECT	b.nr_sequencia
					from	pls_ppsc_lote b
					where	b.dt_lote between dt_ref_inicial_w and dt_ref_final_w);
					
	commit;				
			
	CALL wheb_usuario_pck.set_ie_lote_contabil('N');
	
	begin
	ie_compl_hist_w	:= obter_se_compl_tipo_lote(cd_estabelecimento_w, cd_tipo_lote_contabil_w);
	exception
	when others then
		ie_compl_hist_w	:= 'N';
	end;
	
	nr_seq_w_movto_cont_w	:= 0;
	
	nm_agrupador_w := coalesce(trim(both obter_agrupador_contabil(cd_tipo_lote_contabil_w)),'NR_SEQ_LOTE');
	
	open c_reversao;
	loop
	fetch c_reversao into	
		ie_debito_credito_w,
		cd_conta_contabil_w,
		vl_contabil_w,
		cd_historico_w,
		nr_titulo_w,
		nr_seq_movimento_item_w,
		nm_tabela_w,
		nm_atributo_w,
		nr_seq_info_ctb_w,
		nr_seq_cheque_w,
		ie_tipo_operacao_w,
		nr_seq_lote_w;
	EXIT WHEN NOT FOUND; /* apply on c_reversao */
		begin
		nr_seq_item_w	:= null;
		
		if (nm_tabela_w = 'TITULO_RECEBER') then
			nr_seq_item_w	:= nr_titulo_w;
		elsif (nm_tabela_w = 'PLS_PPSC_MOVIMENTO_ITEM') then
			nr_seq_item_w	:= nr_seq_movimento_item_w;
		elsif (nm_tabela_w = 'CHEQUE_CR') then
			nr_seq_item_w	:= nr_seq_cheque_w;
		end if;
		
		if (nm_agrupador_w = 'NR_SEQ_LOTE')then
			nr_seq_agrupamento_w	:=	nr_seq_lote_w;
		elsif (nm_agrupador_w = 'NR_TITULO') then
			nr_seq_agrupamento_w	:=	nr_titulo_w;
		end if;
		
		if (coalesce(nr_seq_agrupamento_w,0) = 0)then
			nr_seq_agrupamento_w	:=	nr_seq_lote_w;
		end if;
		
		cd_centro_custo_ww	:= null;	
		
		if (coalesce(cd_conta_contabil_w::text, '') = '') then
			nm_pagador_w	:= null;
			
			if (nr_titulo_w IS NOT NULL AND nr_titulo_w::text <> '') then
				select	substr(Obter_nome_pf_pj(cd_pessoa_fisica, cd_cgc),1,255)
				into STRICT	nm_pagador_w
				from	titulo_receber
				where	nr_titulo	= nr_titulo_w;
			elsif (nr_seq_cheque_w IS NOT NULL AND nr_seq_cheque_w::text <> '') then
				select	substr(Obter_nome_pf_pj(cd_pessoa_fisica, cd_cgc),1,255)
				into STRICT	nm_pagador_w
				from	cheque_cr
				where	nr_seq_cheque	= nr_seq_cheque_w;
			end if;
			
			insert into w_pls_movimento_sem_conta(nr_sequencia,
				cd_item,
				ds_item,
				ie_tipo_item,
				dt_atualizacao,
				nm_usuario,
				vl_item,
				dt_referencia,
				nr_lote_contabil,
				ie_proc_mat_item,
				ie_deb_cred,
				ds_observacao)
			values (nextval('w_pls_movimento_sem_conta_seq'),
				nr_seq_item_w,
				ds_item_w,
				'M',
				clock_timestamp(),
				nm_usuario_p,
				vl_contabil_w,
				dt_referencia_w,
				nr_lote_contabil_w,
				null,
				ie_debito_credito_w,
				nm_pagador_w);
		else		
			ds_compl_historico_w	:= null;
			
			if (ie_compl_hist_w = 'S') then
				select	count(1)
				into STRICT	qt_compl_hist_w
				from	historico_padrao_atributo
				where	cd_tipo_lote_contabil	= cd_tipo_lote_contabil_w
				and	cd_historico		= cd_historico_w  LIMIT 1;

				
				if (qt_compl_hist_w > 0) then
					ds_tipo_operacao_w	:= substr(obter_valor_dominio(4005,ie_tipo_operacao_w),1,255);
					
					if (nr_titulo_w IS NOT NULL AND nr_titulo_w::text <> '') then
						select	substr(Obter_nome_pf_pj(cd_pessoa_fisica, cd_cgc),1,255)
						into STRICT	nm_pagador_w
						from	titulo_receber
						where	nr_titulo	= nr_titulo_w;
					elsif (nr_seq_cheque_w IS NOT NULL AND nr_seq_cheque_w::text <> '') then
						select	substr(Obter_nome_pf_pj(cd_pessoa_fisica, cd_cgc),1,255)
						into STRICT	nm_pagador_w
						from	cheque_cr
						where	nr_seq_cheque	= nr_seq_cheque_w;
					end if;
					
					ds_conteudo_w	:= substr(	nr_titulo_w	|| '#@' ||
									nr_seq_cheque_w || '#@' ||
									nr_cheque_cr_w	|| '#@' ||
									nm_pagador_w	|| '#@' ||
									ds_tipo_operacao_w,1,4000);
					begin
					ds_compl_historico_ww	:= substr(obter_compl_historico(cd_tipo_lote_contabil_w, cd_historico_w, ds_conteudo_w),1,255);
					exception
					when others then
						ds_compl_historico_ww	:= null;
					end;
					
					ds_compl_historico_w	:= substr(coalesce(ds_compl_historico_ww, ds_compl_historico_w),1,255);
				end if;
			end if;
			
			select	max(ie_centro_custo)
			into STRICT	ie_centro_custo_w
			from	conta_contabil
			where	cd_conta_contabil	= cd_conta_contabil_w;
			
			if (coalesce(ie_centro_custo_w,'N') = 'N') then
				cd_centro_custo_w	:= null;
			else
				select	max(cd_centro_custo)
				into STRICT	cd_centro_custo_w
				from	conta_contabil
				where	cd_conta_contabil	= cd_conta_contabil_w;
				
				if (coalesce(cd_centro_custo_w::text, '') = '') then
					select 	max(cd_centro_custo)
					into STRICT	cd_centro_custo_w
					from	conta_contabil_estab
					where	coalesce(cd_estabelecimento,cd_estabelecimento_w) = cd_estabelecimento_w
					and	cd_conta_contabil = cd_conta_contabil_w;
				end if;
			end if;
			
			if	((ie_centro_custo_w = 'S') and (coalesce(cd_centro_custo_w::text, '') = '')) then
				cd_centro_custo_w	:= cd_centro_custo_item_w;
			end if;
			
			nr_seq_w_movto_cont_w	:= nr_seq_w_movto_cont_w + 1;
			
			insert into w_movimento_contabil(nr_lote_contabil,
				nr_sequencia,
				cd_conta_contabil,
				ie_debito_credito,
				cd_historico,
				dt_movimento,
				vl_movimento,
				cd_estabelecimento,
				cd_centro_custo,
				ds_compl_historico,
				nr_seq_agrupamento,
				nr_seq_trans_fin,
				nr_seq_tab_orig,
				nr_seq_info,
				nm_tabela,
				nm_atributo)
			values (nr_lote_contabil_p,
				nr_seq_w_movto_cont_w,
				cd_conta_contabil_w,
				ie_debito_credito_w,
				cd_historico_w,
				dt_referencia_w,
				vl_contabil_w,
				cd_estabelecimento_w,
				cd_centro_custo_w,
				obter_desc_expressao(327620), 
				nr_seq_agrupamento_w,
				nr_seq_trans_fin_baixa_prov_w,
				nr_seq_item_w,
				nr_seq_info_ctb_w,
				nm_tabela_w,
				nm_atributo_w);
			
			cd_centro_custo_w	:= null;
		end if;
		end;
	end loop;
	close c_reversao;
	
	/* Account the PPSC Provision for the reference month fo the accounting batch */

	open c_provisao;
	loop
	fetch c_provisao into
		ie_debito_credito_w,
		cd_conta_contabil_w,
		vl_contabil_w,
		cd_historico_w,
		nr_titulo_w,
		nr_seq_movimento_item_w,
		nm_tabela_w,
		nm_atributo_w,
		nr_seq_info_ctb_w,
		nr_seq_cheque_w,
		ie_tipo_operacao_w,
		nr_seq_lote_w;
	EXIT WHEN NOT FOUND; /* apply on c_provisao */
		begin
		nr_seq_item_w	:= null;
		
		if (nm_tabela_w = 'TITULO_RECEBER') then
			nr_seq_item_w	:= nr_titulo_w;
		elsif (nm_tabela_w = 'PLS_PPSC_MOVIMENTO_ITEM') then
			nr_seq_item_w	:= nr_seq_movimento_item_w;
		elsif (nm_tabela_w = 'CHEQUE_CR') then
			nr_seq_item_w	:= nr_seq_cheque_w;
		end if;
		
		if (nm_agrupador_w = 'NR_SEQ_LOTE')then
			nr_seq_agrupamento_w	:=	nr_seq_lote_w;
		elsif (nm_agrupador_w = 'NR_TITULO') then
			nr_seq_agrupamento_w	:=	nr_titulo_w;
		end if;
		
		if (coalesce(nr_seq_agrupamento_w,0) = 0)then
			nr_seq_agrupamento_w	:=	nr_seq_lote_w;
		end if;
		
		cd_centro_custo_ww	:= null;	
		
		if (coalesce(cd_conta_contabil_w::text, '') = '') then
			nm_pagador_w	:= null;
			
			if (nr_titulo_w IS NOT NULL AND nr_titulo_w::text <> '') then
				select	substr(Obter_nome_pf_pj(cd_pessoa_fisica, cd_cgc),1,255)
				into STRICT	nm_pagador_w
				from	titulo_receber
				where	nr_titulo	= nr_titulo_w;
			elsif (nr_seq_cheque_w IS NOT NULL AND nr_seq_cheque_w::text <> '') then
				select	substr(Obter_nome_pf_pj(cd_pessoa_fisica, cd_cgc),1,255)
				into STRICT	nm_pagador_w
				from	cheque_cr
				where	nr_seq_cheque	= nr_seq_cheque_w;
			end if;
			
			insert into w_pls_movimento_sem_conta(nr_sequencia,
				cd_item,
				ds_item,
				ie_tipo_item,
				dt_atualizacao,
				nm_usuario,
				vl_item,
				dt_referencia,
				nr_lote_contabil,
				ie_proc_mat_item,
				ie_deb_cred,
				ds_observacao)
			values (nextval('w_pls_movimento_sem_conta_seq'),
				nr_seq_item_w,
				ds_item_w,
				'M',
				clock_timestamp(),
				nm_usuario_p,
				vl_contabil_w,
				dt_ref_final_w,
				nr_lote_contabil_w,
				null,
				ie_debito_credito_w,
				nm_pagador_w);
		else

			ds_compl_historico_w	:= null;
			
			if (ie_compl_hist_w = 'S') then
				select	count(1)
				into STRICT	qt_compl_hist_w
				from	historico_padrao_atributo
				where	cd_tipo_lote_contabil	= cd_tipo_lote_contabil_w
				and	cd_historico		= cd_historico_w  LIMIT 1;

				if (qt_compl_hist_w > 0) then
				
					ds_tipo_operacao_w	:= substr(obter_valor_dominio(4005,ie_tipo_operacao_w),1,255);
					
					if (nr_titulo_w IS NOT NULL AND nr_titulo_w::text <> '') then
						select	substr(Obter_nome_pf_pj(cd_pessoa_fisica, cd_cgc),1,255)
						into STRICT	nm_pagador_w
						from	titulo_receber
						where	nr_titulo	= nr_titulo_w;
					elsif (nr_seq_cheque_w IS NOT NULL AND nr_seq_cheque_w::text <> '') then
						select	substr(Obter_nome_pf_pj(cd_pessoa_fisica, cd_cgc),1,255)
						into STRICT	nm_pagador_w
						from	cheque_cr
						where	nr_seq_cheque	= nr_seq_cheque_w;
					end if;
					
					ds_conteudo_w	:= substr(	nr_titulo_w	|| '#@' ||
									nr_seq_cheque_w || '#@' ||
									nr_cheque_cr_w	|| '#@' ||
									nm_pagador_w	|| '#@' ||
									ds_tipo_operacao_w,1,4000);			
					begin
					ds_compl_historico_ww	:= substr(obter_compl_historico(cd_tipo_lote_contabil_w, cd_historico_w, ds_conteudo_w),1,255);
					exception
					when others then
						ds_compl_historico_ww	:= null;
					end;
					
					ds_compl_historico_w	:= substr(coalesce(ds_compl_historico_ww, ds_compl_historico_w),1,255);
				end if;
			end if;
			
			select	max(ie_centro_custo)
			into STRICT	ie_centro_custo_w
			from	conta_contabil
			where	cd_conta_contabil	= cd_conta_contabil_w;
			
			if (coalesce(ie_centro_custo_w,'N') = 'N') then
				cd_centro_custo_w	:= null;				
			else
				select	max(cd_centro_custo)
				into STRICT	cd_centro_custo_w
				from	conta_contabil
				where	cd_conta_contabil	= cd_conta_contabil_w;
				
				if (coalesce(cd_centro_custo_w::text, '') = '') then
					select 	max(cd_centro_custo)
					into STRICT	cd_centro_custo_w
					from	conta_contabil_estab
					where	coalesce(cd_estabelecimento,cd_estabelecimento_w) = cd_estabelecimento_w
					and	cd_conta_contabil = cd_conta_contabil_w;
				end if;
			end if;			
			
			if	((ie_centro_custo_w = 'S') and (coalesce(cd_centro_custo_w::text, '') = '')) then
				cd_centro_custo_w	:= cd_centro_custo_item_w;
			end if;
			
			nr_seq_w_movto_cont_w	:= nr_seq_w_movto_cont_w + 1;
			
			insert into w_movimento_contabil(nr_lote_contabil,
				nr_sequencia,
				cd_conta_contabil,
				ie_debito_credito,
				cd_historico,
				dt_movimento,
				vl_movimento,
				cd_estabelecimento,
				cd_centro_custo,
				ds_compl_historico,
				nr_seq_agrupamento,
				nr_seq_trans_fin,
				nr_seq_tab_orig,
				nr_seq_info,
				nm_tabela,
				nm_atributo)
			values (nr_lote_contabil_p,
				nr_seq_w_movto_cont_w,
				cd_conta_contabil_w,
				ie_debito_credito_w,
				cd_historico_w,
				dt_ref_final_w,
				vl_contabil_w,
				cd_estabelecimento_w,
				cd_centro_custo_w,
				ds_compl_historico_w,
				nr_seq_agrupamento_w,
				nr_seq_trans_fin_baixa_prov_w,
				nr_seq_item_w,
				nr_seq_info_ctb_w,
				nm_tabela_w,
				nm_atributo_w);
				
			cd_centro_custo_w	:= null;
		end if;
		end;
	end loop;
	close c_provisao;
	
	CALL agrupa_movimento_contabil(	nr_lote_contabil_p,
					nm_usuario_p);
	end;
end if;

if (coalesce(ds_retorno_p::text, '') = '') then
	begin
	update	lote_contabil
	set	ie_situacao		= 'A',
		dt_geracao_lote		= CASE WHEN ie_exclusao_p='N' THEN clock_timestamp() WHEN ie_exclusao_p='S' THEN null END
	where	nr_lote_contabil 	= nr_lote_contabil_p;

	if (ie_exclusao_p = 'S') then
		ds_retorno_p	:= wheb_mensagem_pck.get_texto(165188);

		CALL ctb_gravar_log_lote(	nr_lote_contabil_p,
					2,
					'',
					nm_usuario_p);
	else
		ds_retorno_p	:= wheb_mensagem_pck.get_texto(165187);

		CALL ctb_gravar_log_lote(	nr_lote_contabil_p,
					1,
					wheb_mensagem_pck.get_texto(1097175),
					nm_usuario_p);
	end if;

	commit;
	end;
else
	rollback;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_pls_contab_ppsc ( nr_lote_contabil_p bigint, nm_usuario_p text, ie_exclusao_p text, ds_retorno_p INOUT text) FROM PUBLIC;

