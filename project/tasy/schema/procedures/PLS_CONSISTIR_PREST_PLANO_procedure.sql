-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_consistir_prest_plano ( ie_evento_p text, nr_seq_prestador_p bigint, nr_seq_conta_p bigint, nr_seq_guia_p bigint, nr_seq_requisicao_p bigint, nr_seq_execucao_p bigint, nr_seq_exec_req_item_proc_p bigint, nr_seq_exec_req_item_mat_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE

								
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Realiza a consistencia  de prestador do plano.
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[  x]  Objetos do dicionario [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao:Performance.
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
ie_lanca_glosa_w		varchar(2)	:= 'N';
ie_permite_w			varchar(1)	:= 'S';
ie_tipo_consistencia_w		varchar(1);
ie_regulamentacao_w		varchar(1);
ie_carater_internacao_w		varchar(1);
ie_tipo_atendimento_w		varchar(1);
nr_seq_plano_regra_w		bigint	:= null;
nr_seq_conta_w			bigint;
nr_seq_guia_w			bigint;
nr_seq_prestador_w		bigint;
nr_seq_plano_guia_conta_w	bigint;
qt_inconsistencia_w		bigint;
nr_seq_internado_guia_w		bigint;
dt_ref_atendimento_w		timestamp;
nr_seq_segurado_w		bigint;
dt_inicio_proc_w		timestamp;
dt_procedimento_w		timestamp;
qt_alt_plano_w			bigint;

/* NR_SEQ_PRESTADOR_P nao e mais utilizado */

C01 CURSOR FOR
	SELECT	coalesce(ie_permite,'S') ie_permite,
		dt_inicio_vigencia,
		dt_fim_vigencia,
		ie_carater_internacao,
		ie_tipo_atendimento
	from	pls_prestador_plano
	where	nr_seq_prestador	= nr_seq_prestador_w
	and	((nr_seq_plano = coalesce(nr_seq_plano_guia_conta_w,nr_seq_plano)) or (coalesce(nr_seq_plano::text, '') = ''))
	and	ie_situacao		= 'A'
	order by
		coalesce(nr_seq_plano,0),
		coalesce(ie_tipo_atendimento,' '),
		coalesce(ie_carater_internacao,' ');
		
BEGIN
if (coalesce(nr_seq_guia_p,0) > 0) then
	ie_tipo_consistencia_w	:= 'G';
elsif (coalesce(nr_seq_conta_p,0) > 0) then
	ie_tipo_consistencia_w	:= 'C';
elsif (coalesce(nr_seq_requisicao_p,0) > 0) then
	ie_tipo_consistencia_w	:= 'R';
elsif (coalesce(nr_seq_execucao_p,0) > 0) then
	ie_tipo_consistencia_w	:= 'E';
end if;

if (ie_tipo_consistencia_w in ('G','C','R','E')) then
	if (ie_tipo_consistencia_w = 'C') then	
		--alterei para que seja obtido o produto do beneficiario direto da pls_segurado, pois o sistema so insere valor no NR_SEQ_PLANO  da pls_conta depois desta procedure. 
		begin
			if (ie_evento_p = 'IA') then
				select	a.nr_seq_segurado,
					a.dt_atendimento_referencia,
					a.ie_carater_internacao_imp,
					pls_obter_internado_guia(a.nr_sequencia,'C')
				into STRICT	nr_seq_segurado_w,
					dt_ref_atendimento_w,
					ie_carater_internacao_w,
					ie_tipo_atendimento_w
				from	pls_conta a
				where	a.nr_sequencia	= nr_seq_conta_p;
				
				nr_seq_prestador_w:=	nr_seq_prestador_p;
			else
				select	a.nr_seq_segurado,
					a.nr_seq_prestador_exec,
					a.dt_atendimento_referencia,
					a.ie_carater_internacao,
					pls_obter_internado_guia(a.nr_sequencia,'C')
				into STRICT	nr_seq_segurado_w,
					nr_seq_prestador_w,
					dt_ref_atendimento_w,
					ie_carater_internacao_w,
					ie_tipo_atendimento_w
				from	pls_conta a
				where	a.nr_sequencia	= nr_seq_conta_p;
			end if;
		exception
		when others then
			nr_seq_segurado_w		:= null;
			nr_seq_prestador_w 		:= null;
			dt_ref_atendimento_w			:= trunc(clock_timestamp(),'dd');
		end;
		
		dt_ref_atendimento_w	:= trunc(dt_ref_atendimento_w,'dd');

		if (nr_seq_segurado_w IS NOT NULL AND nr_seq_segurado_w::text <> '') then
			begin
				select	max(dt_procedimento),
					max(dt_inicio_proc)
				into STRICT	dt_procedimento_w,
					dt_inicio_proc_w
				from	pls_conta_proc
				where	nr_seq_conta = nr_seq_conta_p;
			exception
			when others then
				dt_procedimento_w 	:= null;
				dt_inicio_proc_w 	:= null;
			end;

			if (dt_procedimento_w IS NOT NULL AND dt_procedimento_w::text <> '') then
				if (dt_inicio_proc_w IS NOT NULL AND dt_inicio_proc_w::text <> '') then
					begin
					dt_inicio_proc_w	:= to_date(to_char(dt_procedimento_w,'dd/mm/yyyy') || ' ' || to_char(dt_inicio_proc_w,'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss');
					exception
					when others then
						dt_inicio_proc_w	:= dt_procedimento_w;
					end;
				else
					dt_inicio_proc_w	:= dt_procedimento_w;
				end if;
				
				select	count(1)
				into STRICT	qt_alt_plano_w
				from	pls_segurado_alt_plano
				where	nr_seq_segurado = nr_seq_segurado_w
				and	ie_situacao 	= 'A'  LIMIT 1;
				
				if (qt_alt_plano_w > 0) then
					begin
						select	min(nr_seq_plano_ant)
						into STRICT	nr_seq_plano_guia_conta_w
						from	pls_segurado_alt_plano
						where	nr_seq_segurado = nr_seq_segurado_w
						and	ie_situacao = 'A'
						and	dt_alteracao > dt_inicio_proc_w;
					exception
					when others then
						nr_seq_plano_guia_conta_w := null;
					end;
				end if;
			end if;
		end if;
		
		if (coalesce(nr_seq_plano_guia_conta_w::text, '') = '') then
			begin
				select	nr_seq_plano
				into STRICT	nr_seq_plano_guia_conta_w
				from	pls_segurado
				where	nr_sequencia	= nr_seq_segurado_w;
			exception
			when others then
				nr_seq_plano_guia_conta_w			:= null;
			end;
		end if;
	elsif (ie_tipo_consistencia_w = 'G') then	
		begin
		select	nr_seq_plano,
			nr_seq_prestador,
			trunc(dt_solicitacao,'dd'),
			ie_carater_internacao,
			pls_obter_internado_guia(nr_sequencia,'A')
		into STRICT	nr_seq_plano_guia_conta_w,
			nr_seq_prestador_w,
			dt_ref_atendimento_w,
			ie_carater_internacao_w,
			ie_tipo_atendimento_w
		from	pls_guia_plano
		where	nr_sequencia	= nr_seq_guia_p;
		exception
		when others then
			nr_seq_plano_guia_conta_w	:= null;
			nr_seq_prestador_w 		:= null;
			dt_ref_atendimento_w		:= trunc(clock_timestamp(),'dd');
		end;
	elsif (ie_tipo_consistencia_w = 'R') then
		begin
		select	nr_seq_plano,
			nr_seq_prestador_exec,
			trunc(dt_requisicao,'dd'),
			ie_carater_atendimento,
			pls_obter_internado_guia(nr_sequencia,'R')
		into STRICT	nr_seq_plano_guia_conta_w,
			nr_seq_prestador_w,
			dt_ref_atendimento_w,
			ie_carater_internacao_w,
			ie_tipo_atendimento_w
		from	pls_requisicao
		where	nr_sequencia	= nr_seq_requisicao_p;
		exception
		when others then
			nr_seq_plano_guia_conta_w	:= null;
			nr_seq_prestador_w 		:= null;
			dt_ref_atendimento_w		:= trunc(clock_timestamp(),'dd');
		end;
	elsif (ie_tipo_consistencia_w = 'E') then				
		begin
		select	a.nr_seq_plano,
			b.nr_seq_prestador,
			trunc(b.dt_execucao,'dd'),
			a.ie_carater_atendimento,
			pls_obter_internado_guia(b.nr_seq_requisicao,'R')
		into STRICT	nr_seq_plano_guia_conta_w,
			nr_seq_prestador_w,
			dt_ref_atendimento_w,
			ie_carater_internacao_w,
			ie_tipo_atendimento_w
		from	pls_requisicao		a,
			pls_execucao_requisicao b
		where	b.nr_seq_requisicao = a.nr_sequencia
		and	b.nr_sequencia = nr_seq_execucao_p;
		exception
		when others then
			nr_seq_plano_guia_conta_w	:= null;
			nr_seq_prestador_w 		:= null;
			dt_ref_atendimento_w		:= trunc(clock_timestamp(),'dd');
		end;
	end if;		
end if;

for r_c01_w in C01 loop
	begin
	/*Faz a condicao para verificar se encaixa na regra*/

	if (dt_ref_atendimento_w >= trunc(r_c01_w.dt_inicio_vigencia,'dd') or coalesce(r_c01_w.dt_inicio_vigencia::text, '') = '') and (dt_ref_atendimento_w <= trunc(r_c01_w.dt_fim_vigencia,'dd') or coalesce(r_c01_w.dt_fim_vigencia::text, '') = '') and (r_c01_w.ie_carater_internacao	= ie_carater_internacao_w	or coalesce(r_c01_w.ie_carater_internacao::text, '') = '') and (r_c01_w.ie_tipo_atendimento	= ie_tipo_atendimento_w		or coalesce(r_c01_w.ie_tipo_atendimento,'T') = 'T') then
		--Caso se encaixar, entao coloca a sua permissao
		ie_permite_w	:= r_c01_w.ie_permite;		
	end if;
	
	end;
end loop;

if (ie_permite_w = 'S') then
	ie_lanca_glosa_w	:= 'N';
else
	ie_lanca_glosa_w	:= 'S';
end if;

if (ie_lanca_glosa_w = 'S') then
	if (ie_tipo_consistencia_w = 'G') then
		CALL pls_gravar_motivo_glosa('2514',nr_seq_guia_p,null,null,wheb_mensagem_pck.get_texto(1108908, 'NR_SEQ_PLANO_GUIA_CONTA='||nr_seq_plano_guia_conta_w),
					nm_usuario_p,'P',ie_evento_p,nr_seq_prestador_w,'',null);
	elsif (ie_tipo_consistencia_w = 'C') then
		CALL pls_gravar_conta_glosa('2514',nr_seq_conta_p, null,null,'N',wheb_mensagem_pck.get_texto(1108908, 'NR_SEQ_PLANO_GUIA_CONTA='||nr_seq_plano_guia_conta_w),nm_usuario_p, 'A',ie_evento_p,
					nr_seq_prestador_w, cd_estabelecimento_p, '', null);
	elsif (ie_tipo_consistencia_w = 'R') then
		CALL pls_gravar_requisicao_glosa('2514', nr_seq_requisicao_p, null,
					null, wheb_mensagem_pck.get_texto(1108908, 'NR_SEQ_PLANO_GUIA_CONTA='||nr_seq_plano_guia_conta_w), nm_usuario_p,
					nr_seq_prestador_w, cd_estabelecimento_p, null,
					null);
	elsif (ie_tipo_consistencia_w = 'E') then
		CALL pls_gravar_execucao_req_glosa('2514', nr_seq_execucao_p, nr_seq_exec_req_item_proc_p,
					nr_seq_exec_req_item_mat_p, wheb_mensagem_pck.get_texto(1108908, 'NR_SEQ_PLANO_GUIA_CONTA='||nr_seq_plano_guia_conta_w), nm_usuario_p,
					nr_seq_prestador_w, cd_estabelecimento_p, null,
					null);
	end if;	
end if;	

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_consistir_prest_plano ( ie_evento_p text, nr_seq_prestador_p bigint, nr_seq_conta_p bigint, nr_seq_guia_p bigint, nr_seq_requisicao_p bigint, nr_seq_execucao_p bigint, nr_seq_exec_req_item_proc_p bigint, nr_seq_exec_req_item_mat_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

