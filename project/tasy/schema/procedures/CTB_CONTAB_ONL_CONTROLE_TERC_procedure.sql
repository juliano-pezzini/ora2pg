-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ctb_contab_onl_controle_terc ( nr_seq_conta_p terceiro_conta.nr_sequencia%type, ie_status_p text, nm_usuario_p text) AS $body$
DECLARE

/*
===============================================================================
Purpose: Indentacao

Remarks: n/a

Who         When            What
----------  -----------     --------------------------------------------------
chjreinert  13/mai/2021     OS 2444975 - Indentacao

===============================================================================
*/
cd_tipo_lote_contabil_w                 tipo_lote_contabil.cd_tipo_lote_contabil%type   := 9;/* Controle de Terceiros */
dados_contab_w                          ctb_contab_onl_lote_fin_pck.dados_contab_tf     := null;
nr_seq_agrupamento_w                    movimento_contabil.nr_seq_agrupamento%type;
nr_lote_contabil_w                      terceiro_operacao.nr_lote_contabil%type;
ctb_param_lote_cont_terc_w              ctb_param_lote_cont_terc%rowtype;
nr_seq_mes_ref_w                        ctb_mes_ref.nr_sequencia%type;
nr_seq_terceiro_w                       terceiro.nr_sequencia%type;
cd_empresa_w                            empresa.cd_empresa%type;
conta_w                                 terceiro_conta%rowtype;
doc_w                                   ctb_documento%rowtype;
ds_conteudo_w                           varchar(255) := '';
ds_erro_w                               varchar(255);
ie_situacao_mes_contabil_w              varchar(1);
nm_agrupador_w                          varchar(255);
nm_terceiro_w                           varchar(80);
nr_titulo_w                             varchar(255);
dt_contabil_w                           timestamp;
vl_transacao_w                          terceiro_operacao.vl_operacao%type;
dt_atualizacao_saldo_w                  timestamp;

c010 CURSOR FOR
    SELECT  a.nr_doc,
            round((trunc(coalesce(a.vl_operacao,0) * coalesce(a.qt_operacao,1),2))::numeric,2) vl_transacao,
            coalesce(a.nr_seq_trans_fin, b.nr_seq_trans_fin),
            c.cd_conta_contabil,
            coalesce(c.cd_centro_custo,0),
            c.cd_pessoa_fisica,
            c.cd_cgc,
            c.nr_sequencia,
            substr(obter_nome_pf_pj(c.cd_pessoa_fisica, c.cd_cgc),1,80)
    from    Terceiro c,
            Operacao_terceiro b,
            Terceiro_Operacao a,
            terceiro_conta d
    where   a.nr_seq_operacao       = b.nr_sequencia
    and     a.nr_seq_terceiro       = c.nr_sequencia
    and     a.nr_seq_terceiro       = d.nr_seq_terceiro
    and     d.nr_sequencia          = a.nr_seq_conta
    and     d.nr_sequencia      = nr_seq_conta_p
    and     (coalesce(a.nr_seq_trans_fin, b.nr_seq_trans_fin) IS NOT NULL AND (coalesce(a.nr_seq_trans_fin, b.nr_seq_trans_fin))::text <> '')
    and     ie_status_p     != 'P'
    and     coalesce(a.vl_operacao,0)    <> 0
    and     ((ctb_param_lote_cont_terc_w.ie_contab_som_terc_conta = 'N')
            or ((ctb_param_lote_cont_terc_w.ie_contab_som_terc_conta = 'S')
    and (coalesce(c.cd_conta_contabil,'0') <> '0')));

  mov_w RECORD;

BEGIN
select  a.cd_estabelecimento,
                a.dt_mesano_referencia,
                a.ie_status_conta
into STRICT    conta_w.cd_estabelecimento,
                conta_w.dt_mesano_referencia,
                conta_w.ie_status_conta
from    terceiro_conta a
where   a.nr_sequencia  = nr_seq_conta_p;

cd_empresa_w := obter_empresa_estab(conta_w.cd_estabelecimento);

/* Parametros Lote Controle Terceiro */

select  a.*
into STRICT    ctb_param_lote_cont_terc_w
from    ctb_param_lote_cont_terc a
where   a.cd_empresa    = cd_empresa_w
and coalesce(a.cd_estab_exclusivo, conta_w.cd_estabelecimento) = conta_w.cd_estabelecimento;

begin
if (ie_status_p    = 'D') then
    begin
    nr_lote_contabil_w := ctb_online_pck.get_lote_contabil( cd_tipo_lote_contabil_w,
                                                                                            conta_w.cd_estabelecimento,
                                                                                            conta_w.dt_mesano_referencia,
                                                                                            nm_usuario_p);
    update  terceiro_operacao a
    set     a.nr_lote_contabil = nr_lote_contabil_w
    where   coalesce(a.nr_lote_contabil,0)       = 0
    and     a.nr_seq_conta                  = nr_seq_conta_p;

    commit;
    end;
elsif (ie_status_p    = 'P') then
    begin
    select  coalesce(max(a.nr_lote_contabil),0)
    into STRICT    nr_lote_contabil_w
    from    terceiro_operacao a
    where   a.nr_seq_conta  = nr_seq_conta_p
    and     coalesce(a.nr_lote_contabil,0) != 0;

    ie_situacao_mes_contabil_w              := 'A';

    if (coalesce(nr_lote_contabil_w,0) != 0) then
            select  nr_seq_mes_ref,
                    dt_atualizacao_saldo
            into STRICT    nr_seq_mes_ref_w,
                    dt_atualizacao_saldo_w
            from    lote_contabil a
            where   a.nr_lote_contabil      = nr_lote_contabil_w;

            ie_situacao_mes_contabil_w      := ctb_obter_se_mes_fechado(nr_seq_mes_ref_w,
                                                            conta_w.cd_estabelecimento);
    end if;

    if (ie_situacao_mes_contabil_w     = 'A') then
            begin
            if (dt_atualizacao_saldo_w IS NOT NULL AND dt_atualizacao_saldo_w::text <> '') then
                    ds_erro_w := ctb_desatualizar_lote(nr_lote_contabil_w, nm_usuario_p, ds_erro_w);
            end if;

            update  terceiro_operacao a
            set     a.nr_lote_contabil              = 0
            where   coalesce(a.nr_lote_contabil,0)       = nr_lote_contabil_w
            and     a.nr_seq_conta                  = nr_seq_conta_p;

            for     mov_w in (SELECT  y.nr_seq_ctb_movto,
                                      y.nr_sequencia
                              from    movimento_contabil_doc y,
                                      ctb_movimento x
                              where   x.nr_sequencia          = y.nr_seq_ctb_movto
                              and     y.nr_lote_contabil      = nr_lote_contabil_w
                              and     y.nr_documento          = nr_seq_conta_p
                              and     y.nr_seq_info           = 88
                              order by coalesce(x.nr_seq_movto_partida,0) desc) loop
                    begin
                    delete  FROM ctb_movimento a
                    where   a.nr_sequencia          = mov_w.nr_seq_ctb_movto;

                    delete  FROM movimento_contabil_doc a
                    where   nr_sequencia            = mov_w.nr_sequencia;
                    end;
                    end loop;
            end;
    elsif (ie_situacao_mes_contabil_w     = 'F') then
            begin
            CALL wheb_mensagem_pck.exibir_mensagem_abort(237763);

            end;
    end if;
    end;
end if;

nm_agrupador_w := coalesce(trim(both obter_agrupador_contabil(9)),'NR_SEQ_CONTA');

open c010;
loop
fetch c010 into
    dados_contab_w.nr_doc_movto,
    vl_transacao_w,
    dados_contab_w.nr_seq_trans_fin,
    dados_contab_w.cd_conta_contabil,
    dados_contab_w.cd_centro_custo,
    dados_contab_w.cd_pessoa_fisica,
    dados_contab_w.cd_cnpj,
    nr_seq_terceiro_w,
    nm_terceiro_w;
EXIT WHEN NOT FOUND; /* apply on c010 */
    begin
    nr_titulo_w             := '';
    doc_w                   := null;
    if (nm_agrupador_w = 'NR_SEQ_TERCEIRO')then
            nr_seq_agrupamento_w    :=      nr_seq_terceiro_w;
    elsif (nm_agrupador_w = 'NR_SEQ_CONTA')then
            nr_seq_agrupamento_w    :=      nr_seq_conta_p;
    elsif (nm_agrupador_w = 'NR_DOC')then
            nr_seq_agrupamento_w    :=      somente_numero(dados_contab_w.nr_doc_movto);
    end if;

    if (coalesce(nr_seq_agrupamento_w,0) =  0) then
            nr_seq_agrupamento_w    := somente_numero(nr_seq_conta_p);
    end if;

    if (coalesce(dados_contab_w.nr_seq_conta_banco,0) <> 0)then
            nr_titulo_w     := substr(obter_tit_rec_terc_conta(nr_seq_conta_p,'T'),1,200);
    end if;

    /* Parametros Historico */

    CALL ctb_online_pck.definir_atrib_compl(cd_tipo_lote_contabil_w);
    CALL ctb_online_pck.set_value_compl_hist('VL_OPERACAO', vl_transacao_w);
    CALL ctb_online_pck.set_value_compl_hist('NM_TERCEIRO', nm_terceiro_w);
    CALL ctb_online_pck.set_value_compl_hist('NR_DOCUMENTO', dados_contab_w.nr_doc_movto);
    CALL ctb_online_pck.set_value_compl_hist('NR_TITULO', nr_titulo_w);
    doc_w.cd_estabelecimento                := conta_w.cd_estabelecimento;
    doc_w.nr_seq_trans_financ               := dados_contab_w.nr_seq_trans_fin;
    doc_w.nr_documento                      := nr_seq_conta_p;
    doc_w.nr_seq_info                       := 88;
    doc_w.nm_tabela                         := 'TERCEIRO_OPERACAO';
    doc_w.nm_atributo                       := 'VL_OPERACAO';
    doc_w.dt_competencia                    := conta_w.dt_mesano_referencia;
    doc_w.vl_movimento                      := vl_transacao_w;
    doc_w.cd_tipo_lote_contabil             := cd_tipo_lote_contabil_w;
    /* Carrega atributos */

    dados_contab_w.cd_estab_movto           := conta_w.cd_estabelecimento;
    dados_contab_w.nr_lote_contabil         := nr_lote_contabil_w;
    dados_contab_w.dt_transacao             := conta_w.dt_mesano_referencia;
    dados_contab_w.nr_seq_agrupamento       := nr_seq_agrupamento_w;
    dados_contab_w.ds_atrib_compl_hist      := ds_conteudo_w;
    dados_contab_w.nm_tabela                := 'TERCEIRO_OPERACAO';
    dados_contab_w.nm_atributo              := 'VL_OPERACAO';
    dados_contab_w.doc                      := doc_w;

    /* Contabilizacao por Transacao Financeira */

    ctb_contab_onl_lote_fin_pck.contabiliza_trans_financ(dados_contab_w , nm_usuario_p );

    end;
end loop;
close c010;
end;

update  lote_contabil
set     dt_geracao_lote = CASE WHEN ie_status_p='D' THEN clock_timestamp() WHEN ie_status_p='P' THEN null END ,
        dt_integracao   = CASE WHEN dt_integracao = NULL THEN clock_timestamp()  ELSE dt_integracao END ,
        nm_usuario      = nm_usuario_p,
        dt_atualizacao  = clock_timestamp()
where   nr_lote_contabil = nr_lote_contabil_w;

commit;

if (ie_status_p    = 'D') then
    begin
    ds_erro_w := ctb_atualizar_saldo(  nr_lote_contabil_w, 'S', nm_usuario_p, 'N', ds_erro_w, 'S');
    exception when others then
            null;
    end;
end if;

/* Atualizar LOTE CONTABIL */

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_contab_onl_controle_terc ( nr_seq_conta_p terceiro_conta.nr_sequencia%type, ie_status_p text, nm_usuario_p text) FROM PUBLIC;

