-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE sim_calcular_valores ( nm_usuario_p text, nr_seq_sim_p bigint) AS $body$
DECLARE


qt_pontos_w			preco_amb.qt_pontuacao%type;
nr_seq_regra_w			bigint;
nr_interno_conta_w		bigint;
ie_converte_sus_amb_w		varchar(1);
nr_seq_resumo_w			integer;
qt_resumo_w			double precision;
vl_medico_w			double precision;
vl_auxiliares_w			double precision;
vl_custo_operacional_w		double precision;
vl_anestesista_w		double precision;
vl_materiais_w			double precision;
vl_procedimento_w		double precision;
vl_material_w			double precision;
vl_repasse_terceiro_w		double precision;
vl_imposto_w			double precision;
vl_desconto_w			double precision;
vl_custo_w			double precision;
vl_custo_dir_apoio_w		double precision;
vl_custo_mao_obra_w		double precision;
vl_custo_direto_w		double precision;
vl_custo_indireto_w		double precision;
vl_custo_variavel_w		double precision;
vl_despesa_w			double precision;
vl_custo_sadt_w			double precision;
tx_quant_w			double precision;
tx_valor_w			double precision;
tx_custo_oper_w			double precision;
tx_medico_w			double precision;
tx_material_w			double precision;

cd_setor_atendimento_w		integer;
ie_tipo_atendimento_w		integer;
cd_conta_contabil_w		varchar(20);

cd_grupo_mat_w			integer;
cd_subgrupo_mat_w		integer;
cd_classe_mat_w			integer;
cd_material_w			integer;

cd_area_proc_w			bigint;
cd_especialidade_w		bigint;
cd_grupo_proc_w			bigint;
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
ie_classificacao_w		varchar(01);

ie_regra_w			varchar(03);
dt_regra_w			timestamp;
cd_convenio_w			integer;
cd_categoria_w			varchar(10);

vl_preco_w			double precision;
vl_servico_w			double precision;
dt_ult_vigencia_w		timestamp;
cd_tab_preco_mat_w		smallint;
ie_origem_preco_w		smallint;
cd_estabelecimento_w		integer;
cd_convenio_conta_w		integer;
cd_categoria_conta_w		varchar(10);
dt_final_conta_w		timestamp;
nr_seq_proc_pacote_w		bigint;
dt_base_w			timestamp;

/* Campos para obter valor procedimento */

vl_proc_w			double precision;
vl_co_w				double precision;
vl_anest_w			double precision;
vl_med_w			double precision;
vl_aux_w			double precision;
vl_mat_w			double precision;
qt_pto_proc_w			double precision;
qt_pto_co_w			double precision;
qt_pto_anest_w			double precision;
qt_pto_medico_w			double precision;
qt_pto_aux_w			double precision;
qt_pto_mat_w			double precision;
qt_porte_w			double precision;
cd_edicao_w			double precision;
qt_idade_w			bigint;
cd_usuario_convenio_w		varchar(40);
cd_plano_w			varchar(20);
ie_clinica_w			bigint;
cd_empresa_ref_w		bigint;
ie_sexo_w			varchar(01);
ie_preco_informado_w		varchar(01);
ie_atend_retorno_w		varchar(01);

vl_mat_original_w		double precision;
vl_proc_original_w		double precision;

ie_valor_anterior_w		varchar(01);
cd_proc_convertido_w		bigint;
ie_origem_proced_convertido_w	bigint;

ie_simulacao_resumo_w		varchar(1)	:= 'S';
nr_seq_item_w			bigint;
cd_medico_executor_w		varchar(10);
cd_tabela_custo_w		bigint;
nr_seq_proc_interno_w		bigint;
nr_seq_exame_lab_w		bigint;
ie_apuracao_custo_w		varchar(10);
vl_custo_unitario_w		double precision	:= 0;
vl_custo_hm_w			double precision;
pr_imposto_w			double precision	:= 0;
dt_conta_w			timestamp;
cd_tipo_acomodacao_w      	smallint;
ie_funcao_medico_w		varchar(10);
ie_pacote_w			varchar(1)	:= 'A';
ie_carater_inter_sus_w		varchar(2);
cd_cgc_prestador_w		varchar(14);
cd_regra_honorario_w		varchar(5);
ie_conta_honorario_w		varchar(1);
ie_calcula_honorario_w		varchar(1)	:= 'S';
cd_cgc_honorario_w		varchar(14);
cd_pessoa_honorario_w		varchar(10);
nr_seq_criterio_w		bigint;
cd_especialidade_medica_w	integer	:= 0;
vl_medico_conta_w         	double precision 	:= 0;
dt_ref_custo_w			timestamp;
ds_criterio_w			varchar(20);
ie_custo_oc_consig_w		varchar(01);
cd_cgc_fornec_w			varchar(14);
nr_prescricao_w			bigint;
dt_mesano_ref_w			timestamp;
vl_custo_resumo_w		double precision	:= 0;
nr_seq_classif_medico_w		bigint;
nr_atendimento_w		bigint;

nr_aux_partic_w			bigint;
nr_anest_partic_w		bigint;
nr_instrumentador_w		bigint;
varconsideraparticvalor_w	varchar(1);
pr_procedimento_w		double precision;
vl_instrumentador_w		double precision	:= 0;


tx_adic_medico_w    		double precision	:= 1;
tx_adic_anestesista_w 		double precision	:= 1;
tx_adic_auxiliares_w 		double precision	:= 1;
tx_adic_custo_operacional_w	double precision	:= 1;
tx_adic_materiais_w 		double precision	:= 1;
tx_adic_procedimento_w		double precision	:= 1;
vl_adic_proc_w			double precision	:= 0;
vl_adic_medico_w		double precision	:= 0;
cd_proced_calculo_horario_w	bigint;
ie_origem_proced_horario_w	bigint;
nr_seq_adic_w			bigint;
tx_procedimento_w		double precision;
ie_aplica_taxa_filme_w		varchar(01)	:= 'N';
cd_procedencia_w		integer;
ie_doc_executor_w		smallint;
cd_cbo_w			varchar(06);

cd_material_prescricao_w	integer;
cd_material_exec_w		integer;
cd_local_estoque_w		smallint;
ie_regra_mat_conta_w		varchar(1);
dt_entrada_w			timestamp;
nr_seq_bras_preco_w		bigint;
nr_seq_mat_bras_w		bigint;
nr_seq_conv_bras_w		bigint;
nr_seq_grupo_rec_w		bigint;
nr_seq_conv_simpro_w		bigint;
nr_seq_mat_simpro_w		bigint;
nr_seq_simpro_preco_w		bigint;
nr_seq_exame_w			bigint;
vl_preco_calculado_w	double precision;
nr_seq_ajuste_proc_w		bigint;
nr_seq_ajuste_mat_w		bigint;
cd_plano_ww			sim_regra_proc.cd_plano%type;
cd_plano_conta_w		sim_regra_proc.cd_plano%type;
nr_seq_origem_w			bigint;
nr_seq_pacote_simulado_w	bigint;
nr_seq_tipo_acomod_w		bigint;
ie_retorno_w			varchar(1);
dt_procedimento_w		timestamp;
qt_dias_inter_w			bigint;
ie_acomp_w			varchar(01);
cd_centro_custo_w		bigint;
ie_tipo_atend_conta_w		bigint;

cd_proc_pacote_w		bigint;
ie_origem_proc_pacote_w		bigint;
vl_pacote_w			double precision;
nr_seq_familia_w		bigint;
vl_unitario_w			double precision;
ie_inclui_exclui_w		varchar(3);
qt_limite_w			bigint;
nr_seq_sim_pacote_w		bigint;
qt_material_w			double precision;
qt_procedimento_w		double precision;
qt_pacote_w			double precision;
vl_tot_material_w		double precision;
vl_tot_procedimento_w		double precision;
vl_total_w			double precision;
pr_mat_w			double precision;
pr_proc_w			double precision;
vl_pacote_calculado_w		double precision;
vl_diferenca_w			double precision;
nr_seq_max_valor_w		bigint;
nr_interno_conta_sim_w		bigint;
ie_compara_pacote_w		varchar(1)	:= 'N';
nr_seq_proc_pacote_sim_w	bigint;
nr_seq_classif_w		bigint;
dt_atendimento_w		timestamp;
nr_seq_classif_atend_w		atendimento_paciente.nr_seq_classificacao%type;
nr_seq_classif_atend_mat_w	atendimento_paciente.nr_seq_classificacao%type;
ie_glosa_w			varchar(1)	:= 'X';
cd_tab_preco_mat_regra_w	smallint;
dt_periodo_inicial_w		timestamp;
dt_periodo_final_w		timestamp;
qt_preco_mat_w			bigint;
dt_preco_w		  	timestamp;
dt_alta_preco_w			timestamp;
nr_seq_proc_interno_ww		bigint;

c01 CURSOR FOR
	SELECT	b.nr_interno_conta,
		b.nr_sequencia,
		coalesce(b.cd_material,0),
		coalesce(b.cd_procedimento,0),
		coalesce(b.ie_origem_proced,0),
		coalesce(cd_setor_atendimento,0),
		coalesce(null,0),
		coalesce(cd_conta_contabil,'0'),
		coalesce(qt_resumo,0),
		coalesce(vl_medico,0),
		coalesce(vl_auxiliares,0),
		coalesce(vl_custo_operacional,0),
		coalesce(vl_anestesista,0),
		coalesce(vl_materiais,0),
		coalesce(vl_procedimento,0),
		coalesce(vl_material,0),
		coalesce(vl_repasse_terceiro,0),
		coalesce(vl_imposto,0),
		coalesce(b.vl_desconto,0),
		coalesce(vl_custo,0),
		coalesce(vl_custo_dir_apoio,0),
		coalesce(vl_custo_mao_obra,0),
		coalesce(vl_custo_direto,0),
		coalesce(vl_custo_indireto,0),
		coalesce(vl_custo_variavel,0),
		coalesce(vl_despesa,0),
		coalesce(vl_custo_sadt,0),
		coalesce(cd_convenio_calculo,cd_convenio_parametro),
		coalesce(cd_categoria_calculo,cd_categoria_parametro),
		dt_periodo_final,
		b.nr_seq_proc_pacote,
		coalesce(vl_procedimento,0),
		coalesce(vl_material,0),
		c.nr_atendimento,
		obter_plano_atendimento(c.nr_atendimento,'C'),
		dt_referencia,
		coalesce(b.nr_seq_proc_interno,0)
	from	conta_paciente c,
		conta_paciente_resumo b,
		sim_conta a
	where	a.nr_seq_sim		= nr_seq_sim_p
	and	a.nr_interno_conta	= b.nr_interno_conta
	and	a.nr_interno_conta	= c.nr_interno_conta
	and	b.qt_resumo		<> 0;

c02 CURSOR FOR
	SELECT	tx_quant,
		tx_valor,
		nr_sequencia,
		ie_regra,
		dt_regra,
		coalesce(cd_convenio, cd_convenio_conta_w),
		coalesce(cd_categoria, cd_categoria_conta_w),
		dt_base,
		coalesce(cd_plano,cd_plano_ww)
	from 	sim_regra_mat
	where	nr_seq_sim						= nr_seq_sim_p
	and	coalesce(cd_material,cd_material_w)	   		= cd_material_w
	and	coalesce(cd_classe_material,cd_classe_mat_w)		= cd_classe_mat_w
	and	coalesce(cd_subgrupo_material,cd_subgrupo_mat_w)	= cd_subgrupo_mat_w
	and	coalesce(cd_grupo_material,cd_grupo_mat_w) 		= cd_grupo_mat_w
	and	coalesce(cd_setor_atendimento,cd_setor_atendimento_w)= cd_setor_atendimento_w
	and	coalesce(ie_tipo_atendimento,ie_tipo_atendimento_w)	= ie_tipo_atendimento_w
	and	coalesce(cd_conta_contabil, cd_conta_contabil_w)	= cd_conta_contabil_w
	and	((coalesce(ie_pacote,'N') = 'N') or (nr_seq_proc_pacote_w IS NOT NULL AND nr_seq_proc_pacote_w::text <> ''))
	order by
		coalesce(cd_material,0),
		coalesce(cd_classe_material,0),
		coalesce(cd_subgrupo_material,0),
		coalesce(cd_grupo_material,0),
		coalesce(ie_tipo_atendimento,0),
		coalesce(cd_setor_atendimento,0),
		coalesce(cd_conta_contabil,0);

c03 CURSOR FOR
	SELECT	tx_quantidade,
		tx_custo_oper,
		tx_medico,
		tx_material,
		nr_sequencia,
		ie_regra,
		dt_referencia,
		coalesce(cd_convenio, cd_convenio_conta_w),
		coalesce(cd_categoria, cd_categoria_conta_w),
		dt_base,
		coalesce(cd_plano,cd_plano_ww)
	from 	sim_regra_proc
	where	nr_seq_sim						= nr_seq_sim_p
	and	coalesce(cd_procedimento, cd_procedimento_w)  		= cd_procedimento_w
	and	((coalesce(cd_procedimento::text, '') = '') or (coalesce(ie_origem_proced, ie_origem_proced_w) 	= ie_origem_proced_w))
	and	coalesce(cd_grupo_proc, cd_grupo_proc_w)  		= cd_grupo_proc_w
	and	coalesce(cd_especialidade, cd_especialidade_w)	= cd_especialidade_w
	and	coalesce(cd_area_procedimento, cd_area_proc_w)	= cd_area_proc_w
	and	coalesce(cd_setor_atendimento,cd_setor_atendimento_w)= cd_setor_atendimento_w
	and	coalesce(ie_tipo_atendimento,ie_tipo_atendimento_w)	= ie_tipo_atendimento_w
	and	coalesce(cd_conta_contabil, cd_conta_contabil_w)	= cd_conta_contabil_w
	and	((coalesce(ie_pacote,'N') = 'N') or (nr_seq_proc_pacote_w IS NOT NULL AND nr_seq_proc_pacote_w::text <> ''))
	order by
		coalesce(cd_procedimento,0),
		coalesce(cd_grupo_proc,0),
		coalesce(cd_especialidade,0),
		coalesce(cd_area_procedimento,0),
		coalesce(ie_tipo_atendimento,0),
		coalesce(cd_setor_atendimento,0),
		coalesce(cd_conta_contabil,0);

c04 CURSOR FOR
	SELECT	b.nr_interno_conta,
		b.nr_sequencia,
		coalesce(b.cd_procedimento,0),
		coalesce(b.ie_origem_proced,0),
		coalesce(b.nr_seq_proc_interno,0),
		coalesce(b.nr_seq_exame,0),
		coalesce(b.cd_setor_atendimento,0),
		coalesce(obter_tipo_atendimento(c.nr_atendimento),0),
		coalesce(b.cd_conta_contabil,'0'),
		coalesce(b.qt_procedimento,0),
		coalesce(b.vl_medico,0),
		coalesce(b.vl_auxiliares,0),
		coalesce(b.vl_custo_operacional,0),
		coalesce(b.vl_anestesista,0),
		coalesce(b.vl_materiais,0),
		coalesce(b.vl_procedimento,0),
		coalesce(b.cd_medico_executor,'0'),
		coalesce(c.cd_convenio_calculo, c.cd_convenio_parametro),
		coalesce(c.cd_categoria_calculo, c.cd_categoria_parametro),
		c.dt_periodo_final,
		b.nr_seq_proc_pacote,
		coalesce(vl_procedimento,0),
		coalesce(b.dt_conta, b.dt_procedimento),
		b.ie_funcao_medico,
		b.cd_cgc_prestador,
		b.cd_especialidade,
		coalesce(b.tx_procedimento,100),
		b.ie_doc_executor,
		b.cd_cbo,
		b.nr_seq_grupo_rec,
		b.nr_seq_exame,
		obter_plano_atendimento(c.nr_atendimento,'C')		
	from	procedimento_paciente b,
		conta_paciente c,
		sim_conta a
	where	a.nr_seq_sim		= nr_seq_sim_p
	and	a.nr_interno_conta	= c.nr_interno_conta
	and	c.nr_interno_conta	= b.nr_interno_conta
	and	b.qt_procedimento	<> 0;

c05 CURSOR FOR
	SELECT	b.nr_interno_conta,
		b.nr_sequencia,
		coalesce(b.cd_material,0),
		coalesce(b.cd_setor_atendimento,0),
		coalesce(obter_tipo_atendimento(c.nr_atendimento),0),
		coalesce(b.cd_conta_contabil,'0'),
		coalesce(b.qt_material,0),
		coalesce(b.vl_material,0),
		coalesce(c.cd_convenio_calculo, c.cd_convenio_parametro),
		coalesce(c.cd_categoria_calculo, c.cd_categoria_parametro),
		c.dt_periodo_final,
		b.nr_seq_proc_pacote,
		coalesce(vl_material,0),
		coalesce(b.dt_conta, coalesce(b.dt_prescricao, b.dt_atendimento)),
		b.cd_cgc_fornecedor,
		b.nr_prescricao,
		obter_plano_atendimento(c.nr_atendimento,'C'),
		somente_numero(obter_classif_atendimento(c.nr_atendimento)),
		c.nr_atendimento
	from	material_atend_paciente b,
		conta_paciente c,
		sim_conta a
	where	a.nr_seq_sim		= nr_seq_sim_p
	and	a.nr_interno_conta	= c.nr_interno_conta
	and	c.nr_interno_conta	= b.nr_interno_conta
	and	b.qt_material	<> 0;


c06 CURSOR FOR
	 SELECT x.nr_seq_proc_origem,
		x.ie_tipo_acomod,
		x.nr_seq_procedimento
	from    atendimento_pacote x
	where   x.nr_seq_proc_origem in (SELECT b.nr_seq_item
					 from    sim_valor b
					 where   b.nr_seq_sim = nr_seq_sim_p
					 and     b.ie_proc_mat = 'P');

c07 CURSOR FOR
	SELECT 	ie_proc_mat,
		nr_seq_item,
		nr_sequencia
	from 	sim_valor
	where	nr_seq_sim = nr_seq_sim_p
	and 	coalesce(nr_seq_sim_pacote::text, '') = ''
	and 	nr_interno_conta = nr_interno_conta_sim_w
	order by
		ie_proc_mat;

c08 CURSOR FOR
	SELECT	ie_inclui_exclui,
		coalesce(qt_limite,0) qt_limite
	from	pacote_material a
	where	a.nr_seq_pacote	= nr_seq_pacote_simulado_w
	and	coalesce(a.cd_material,cd_material_w)	= cd_material_w
	and	coalesce(a.cd_classe_material,cd_classe_mat_w)	= cd_classe_mat_w
	and	coalesce(a.cd_subgrupo_material,cd_subgrupo_mat_w)= cd_subgrupo_mat_w
	and	coalesce(a.cd_grupo_material,cd_grupo_mat_w)	= cd_grupo_mat_w
	and	coalesce(a.cd_setor_atendimento,cd_setor_atendimento_w)= cd_setor_atendimento_w
	and	coalesce(a.ie_tipo_atendimento,ie_tipo_atendimento_w)	= ie_tipo_atendimento_w
	and	qt_idade_w		between coalesce(qt_idade_min, 0) and coalesce(qt_idade_max, 999)	-- edgar 06/10/2005 os 23079
	and	((ie_valor	= 'N') or
		((ie_valor	= 'U') and (vl_unitario_w <= vl_maximo) and (vl_unitario_w >= vl_minimo)) or
		((ie_valor	= 'T') and (vl_material_w <= vl_maximo) and (vl_material_w >= vl_minimo)))
	and	coalesce(a.nr_seq_familia,nr_seq_familia_w)	= nr_seq_familia_w
	and	coalesce(ie_sexo, coalesce(ie_sexo_w,'A'))	= coalesce(ie_sexo_w,'A')
	and	coalesce(cd_centro_custo, coalesce(cd_centro_custo_w, 0)) = coalesce(cd_centro_custo_w, 0)
	and	((coalesce(nr_seq_estrutura::text, '') = '') or (consistir_se_mat_estrut_vig(nr_seq_estrutura,cd_material_w, dt_atendimento_w) = 'S'))
	order by
		coalesce(a.cd_material, 0),
		coalesce(a.cd_classe_material, 0),
		coalesce(a.cd_subgrupo_material, 0),
		coalesce(a.cd_grupo_material, 0),
		coalesce(a.cd_setor_atendimento, 0),
		coalesce(a.ie_tipo_atendimento, 0),
		coalesce(a.nr_seq_familia,0),
		coalesce(a.ie_sexo, 'A'),
		coalesce(cd_centro_custo, 0),
		coalesce(nr_seq_estrutura,0);

c09 CURSOR FOR
	SELECT	ie_inclui_exclui,
		coalesce(qt_limite,0) qt_limite
	from	Pacote_Procedimento a
	where	a.nr_seq_pacote		= nr_seq_pacote_simulado_w
	and 	coalesce(a.cd_setor_atendimento,cd_setor_atendimento_w)	= cd_setor_atendimento_w
	and 	coalesce(a.ie_tipo_atendimento,ie_tipo_atendimento_w)	= ie_tipo_atendimento_w
	and 	coalesce(a.cd_procedimento,cd_procedimento_w)	= cd_procedimento_w
	and 	coalesce(a.ie_origem_proced,ie_origem_proced_w)	= ie_origem_proced_w
	and 	coalesce(a.cd_grupo_proced, cd_grupo_Proc_w)		= cd_grupo_proc_w
	and 	coalesce(a.cd_especial_proced,cd_especialidade_w)	= cd_especialidade_w
	and 	coalesce(a.cd_area_proced, cd_area_proc_w)		= cd_area_proc_w
	and 	coalesce(a.cd_medico, coalesce(cd_medico_executor_w,'0'))		= coalesce(cd_medico_executor_w,'0')
	and 	coalesce(a.nr_seq_proc_interno, nr_seq_proc_interno_w) = nr_seq_proc_interno_w
	and	qt_idade_w			between coalesce(qt_idade_min, 0) and coalesce(qt_idade_max, 999)
	and	((ie_tipo_valor <> 'P') or (vl_procedimento_w between coalesce(vl_minimo, vl_procedimento_w) and coalesce(vl_maximo, vl_procedimento_w)))
	and	coalesce(a.ie_sexo, coalesce(ie_sexo_w,'A')) = coalesce(ie_sexo_w,'A')
	and	coalesce(a.cd_cgc_prestador, coalesce(cd_cgc_prestador_w,'0')) = coalesce(cd_cgc_prestador_w,'0')
	and	coalesce(a.cd_centro_custo, coalesce(cd_centro_custo_w, 0)) = coalesce(cd_centro_custo_w, 0)
	and 	coalesce(a.nr_seq_classif, coalesce(nr_seq_classif_w, 0)) = coalesce(nr_seq_classif_w, 0)
	order by
		coalesce(a.nr_seq_proc_interno,0),
		coalesce(a.cd_procedimento, 0),
		coalesce(a.ie_origem_proced, 0),
		coalesce(a.cd_grupo_proced, 0),
		coalesce(a.cd_especial_proced, 0),
		coalesce(a.cd_area_proced, 0),
		coalesce(a.cd_setor_atendimento,0),
		coalesce(a.ie_sexo, 'A'),
		coalesce(a.cd_cgc_prestador,'0'),
		coalesce(a.cd_centro_custo, 0),
		coalesce(nr_seq_classif,0);

c06_w	c06%RowType;
c07_w	c07%RowType;
c08_w	c08%RowType;
c09_w	c09%RowType;


BEGIN

delete	from sim_valor
where	nr_seq_sim	= nr_seq_sim_p;

select	cd_estabelecimento
into STRICT	cd_estabelecimento_w
from	simulacao
where	nr_sequencia	= nr_seq_sim_p;

ie_valor_anterior_w := obter_param_usuario(1800, 1, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_valor_anterior_w);
ie_converte_sus_amb_w      := obter_valor_param_usuario(1800,2,obter_perfil_ativo,nm_usuario_p,0);
ie_simulacao_resumo_w	   := coalesce(obter_valor_param_usuario(1800,3,obter_perfil_ativo,nm_usuario_p,cd_estabelecimento_w),'S');
varconsideraparticvalor_w  := coalesce(obter_valor_param_usuario(1800,4,obter_perfil_ativo,nm_usuario_p,cd_estabelecimento_w),'S');
ie_regra_mat_conta_w	   := coalesce(obter_valor_param_usuario(1800,7,obter_perfil_ativo,nm_usuario_p,cd_estabelecimento_w),'S');
ie_compara_pacote_w	   := coalesce(obter_valor_param_usuario(1800,8,obter_perfil_ativo,nm_usuario_p,cd_estabelecimento_w),'N');

select 	coalesce(max(cd_tab_preco_mat),0)
into STRICT	cd_tab_preco_mat_regra_w
from 	regra_data_preco_mat
where 	ie_situacao 		= 'A'
and 	cd_convenio 		= cd_convenio_w
and 	cd_estabelecimento 	= cd_estabelecimento_w;

if (coalesce(ie_simulacao_resumo_w,'S') = 'S') then

	open c01;
	loop
	fetch c01 into
			nr_interno_conta_w,
			nr_seq_resumo_w,
			cd_material_w,
			cd_procedimento_w,
			ie_origem_proced_w,
			cd_setor_atendimento_w,
			ie_tipo_atendimento_w,
			cd_conta_contabil_w,
			qt_resumo_w,
			vl_medico_w,
			vl_auxiliares_w,
			vl_custo_operacional_w,
			vl_anestesista_w,
			vl_materiais_w,
			vl_procedimento_w,
			vl_material_w,
			vl_repasse_terceiro_w,
			vl_imposto_w,
			vl_desconto_w,
			vl_custo_w,
			vl_custo_dir_apoio_w,
			vl_custo_mao_obra_w,
			vl_custo_direto_w,
			vl_custo_indireto_w,
			vl_custo_variavel_w,
			vl_despesa_w,
			vl_custo_sadt_w,
			cd_convenio_conta_w,
			cd_categoria_conta_w,
			dt_final_conta_w,
			nr_seq_proc_pacote_w,
			vl_proc_original_w,
			vl_mat_original_w,
			nr_atendimento_w,
			cd_plano_ww,
			dt_conta_w,
			nr_seq_proc_interno_ww;
		EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		
		begin
		select	nr_seq_classif_medico,
			ie_tipo_atendimento,
			nr_seq_classificacao
		into STRICT	nr_seq_classif_medico_w,
			ie_tipo_atendimento_w,
			nr_seq_classif_atend_w
		from	atendimento_paciente
		where 	nr_atendimento     	= nr_atendimento_w;
		exception
			when others then
			nr_seq_classif_medico_w:=null;
			ie_tipo_atendimento_w	:= 0;
			nr_seq_classif_atend_w	:= null;
		end;

		begin

		select	cd_procedencia
		into STRICT	cd_procedencia_w
		from 	atendimento_paciente
		where 	nr_atendimento 	= nr_atendimento_w;
		exception
			when others then
			cd_procedencia_w := 0;
		end;

		vl_custo_resumo_w:= vl_custo_w;

		select	campo_numerico(obter_idade_pf(c.cd_pessoa_fisica, dt_entrada, 'A')),
			ie_clinica,
			obter_dado_atend_cat_conv(a.nr_atendimento, dt_periodo_final, cd_convenio_calculo, cd_categoria_calculo, 'E'),
			obter_dado_atend_cat_conv(a.nr_atendimento, dt_periodo_final, cd_convenio_calculo, cd_categoria_calculo, 'P'),
			obter_dado_atend_cat_conv(a.nr_atendimento, dt_periodo_final, cd_convenio_calculo, cd_categoria_calculo, 'U'),
			c.ie_sexo,
			CASE WHEN coalesce(b.nr_atend_original::text, '') = '' THEN  'N'  ELSE 'S' END  ie_atend_retorno,
			b.dt_entrada,
			coalesce((obter_dados_categ_conv(b.nr_atendimento,'OC'))::numeric ,0),
			a.dt_periodo_inicial,
			a.dt_periodo_final,
			b.dt_alta
		into STRICT	qt_idade_w,
			ie_clinica_w,
			cd_empresa_ref_w,
			cd_plano_w,
			cd_usuario_convenio_w,
			ie_sexo_w,
			ie_atend_retorno_w,
			dt_entrada_w,
			nr_seq_origem_w,			
			dt_periodo_inicial_w,
			dt_periodo_final_w,
			dt_alta_preco_w
		from	pessoa_fisica c,
			atendimento_paciente b,
			conta_paciente a
		where	a.nr_atendimento	= b.nr_atendimento
		and	a.nr_interno_conta	= nr_interno_conta_w
		and	b.cd_pessoa_fisica	= c.cd_pessoa_fisica;

		tx_quant_w		:= 1;
		tx_valor_w		:= 1;
		nr_seq_regra_w	:= 0;
		/*ie_regra_w 		:= 'I'; */

		if (cd_material_w > 0) then
			select cd_grupo_material,
				cd_subgrupo_material,
				cd_classe_material
			into STRICT	cd_grupo_mat_w,
				cd_subgrupo_mat_w,
				cd_classe_mat_w
			from 	estrutura_material_v
			where 	cd_material		= cd_material_w;

			ie_regra_w		:= null;

			open c02;
			loop
			fetch c02 into
				tx_quant_w,
				tx_valor_w,
				nr_seq_regra_w,
				ie_regra_w,
				dt_regra_w,
				cd_convenio_w,
				cd_categoria_w,
				dt_base_w,
				cd_plano_conta_w;
			EXIT WHEN NOT FOUND; /* apply on c02 */
				tx_quant_w		:= tx_quant_w;
			end loop;
			close c02;						
			qt_resumo_w			:= qt_resumo_w * tx_quant_w;
			if (ie_regra_w = 'I') then
				vl_custo_w		:= vl_custo_w * tx_quant_w;
				vl_custo_variavel_w	:= vl_custo_variavel_w * tx_quant_w;
				vl_material_w		:= vl_material_w * tx_valor_w;
			elsif (ie_regra_w = 'PC') then
				vl_custo_w		:= vl_custo_w * tx_quant_w;
				vl_custo_variavel_w	:= vl_custo_variavel_w * tx_quant_w;
				vl_material_w		:= vl_material_w * tx_valor_w;
				
				qt_preco_mat_w:= 0;
				if (cd_tab_preco_mat_regra_w > 0) then
					select 	count(*)
					into STRICT	qt_preco_mat_w
					from 	preco_material
					where 	cd_tab_preco_mat 	    = cd_tab_preco_mat_regra_w
					and 	cd_estabelecimento    = cd_estabelecimento_w
					and 	cd_material	    = cd_material_w
					and	PKG_DATE_UTILS.start_of(dt_conta_w,'dd',0)
					between coalesce(PKG_DATE_UTILS.start_of(dt_inicio_vigencia,'dd',0), clock_timestamp() - interval '3650 days') and coalesce(dt_final_vigencia, dt_conta_w);
				end if;

				if (qt_preco_mat_w > 0) then
					dt_preco_w:= dt_conta_w;
				else					
					select	obter_regra_data_preco('M',cd_convenio_w, dt_entrada_w, dt_conta_w, dt_alta_preco_w, dt_final_conta_w, null, dt_periodo_inicial_w, dt_periodo_final_w)
					into STRICT	dt_preco_w
					;				
				end if;
			
				SELECT * FROM define_preco_material(	cd_estabelecimento_w, 						-- cd_estabelecimento_p		number,
							cd_convenio_w,                                                   -- cd_convenio_p          	number,
							cd_categoria_w,                                                  -- cd_categoria_p         	varchar2,
							coalesce(coalesce(coalesce(dt_base_w,dt_preco_w),dt_final_conta_w),clock_timestamp()), 	-- dt_vigencia_p          	date,
							cd_material_w,                                                   -- cd_material_p          	number,
							0,                                                               -- cd_tipo_acomodacao_p   	number,
							ie_tipo_atendimento_w,                                           -- ie_tipo_atendimento_p  	number,
							cd_setor_atendimento_w,                                          -- cd_setor_atendimento_p 	number,
							'',                                                              -- cd_cgc_fornecedor_p		varchar2,
							null, 							        -- qt_idade_p			number,
							null,                                                            -- nr_sequencia_p		number,
							cd_plano_conta_w,                                                -- cd_plano_p			varchar2,
							null,                                                            -- cd_proc_referencia_p		number,
							null,                                                            -- ie_origem_proc_p		number,
							null,                                                            -- nr_seq_marca_p		number,
							null,                                                            -- ie_clinica_p			number,
							nr_seq_classif_atend_w,                                          -- nr_seq_classif_atend_p	number,
							nr_atendimento_w,                                                -- nr_atendimento_p		number,
							null,                                                            -- ie_vago_4_p			varchar2,
							vl_preco_w,                                                      -- vl_material_p      	 out 	number,
							dt_ult_vigencia_w,                                               -- dt_ult_vigencia_p  	 out 	date,
							cd_tab_preco_mat_w,                                              -- cd_tab_preco_mat_p 	 out 	number,
							ie_origem_preco_w,                                               -- ie_origem_preco_p  	 out 	number,
							nr_seq_bras_preco_w,                                             -- nr_seq_bras_preco_p	 out	number,
							nr_seq_mat_bras_w,                                               -- nr_seq_mat_bras_p	 out	number,
							nr_seq_conv_bras_w,                                              -- nr_seq_conv_bras_p	 out	number,
							nr_seq_conv_simpro_w,                                            -- nr_seq_conv_simpro_p	 out	number,
							nr_seq_mat_simpro_w,                                             -- nr_seq_mat_simpro_p	 out	number,
							nr_seq_simpro_preco_w,                                           -- nr_seq_simpro_preco_p out	number,
							nr_seq_ajuste_mat_w) INTO STRICT 
							vl_preco_w, 
							dt_ult_vigencia_w, 
							cd_tab_preco_mat_w, 
							ie_origem_preco_w, 
							nr_seq_bras_preco_w, 
							nr_seq_mat_bras_w, 
							nr_seq_conv_bras_w, 
							nr_seq_conv_simpro_w, 
							nr_seq_mat_simpro_w, 
							nr_seq_simpro_preco_w, 
							nr_seq_ajuste_mat_w;                                           -- nr_seq_ajuste_mat_p	 out	number
				vl_preco_w		:= coalesce(vl_preco_w,0);
				vl_material_w		:= qt_resumo_w * vl_preco_w;

				if (ie_valor_anterior_w = 'S') and (vl_material_w = 0) then
					vl_material_w	:= vl_mat_original_w;
				end if;
				
								
				if (coalesce(nr_seq_ajuste_mat_w,0) > 0) and (coalesce(vl_preco_w,0) > 0 )then
					select 	coalesce(ie_glosa,'X')
					into STRICT 	ie_glosa_w
					from 	regra_ajuste_material
					where 	nr_sequencia = nr_seq_ajuste_mat_w;
					
					if (ie_glosa_w in ('M','Z')) then
						vl_material_w 	:= 0;
						vl_preco_w 	:= 0;
					end if;
				end if;

			end if;
		else
			if (ie_origem_proced_w	= 7) and (ie_converte_sus_amb_w	= 'S') then

				select	coalesce(max(cd_procedimento),0),
					coalesce(max(ie_origem_proced),0)
				into STRICT	cd_proc_convertido_w,
					ie_origem_proced_convertido_w
				from	procedimento_conv_sus
				where	cd_procedimento_sus	= cd_procedimento_w
				and	ie_origem_proced_sus	= ie_origem_proced_w;
				if (cd_proc_convertido_w	> 0)		then
					cd_procedimento_w	:= cd_proc_convertido_w;
					ie_origem_proced_w	:= ie_origem_proced_convertido_w;
				end if;
			end if;

			select	max(cd_grupo_proc),
				max(cd_especialidade),
				max(cd_area_procedimento)
			into STRICT	cd_grupo_proc_w,
				cd_especialidade_w,
				cd_area_proc_w
			from 	estrutura_procedimento_v
			where cd_procedimento	= cd_procedimento_w
			and	ie_origem_proced	= ie_origem_proced_w;
			tx_quant_w		:= 1;
			tx_custo_oper_w		:= 1;
			tx_medico_w		:= 1;
			tx_material_w		:= 1;
			nr_seq_regra_w		:= 0;
			ie_regra_w		:= null;
			open c03;
			loop
			fetch c03 into
				tx_quant_w,
				tx_custo_oper_w,
				tx_medico_w,
				tx_material_w,
				nr_seq_regra_w,
				ie_regra_w,
				dt_regra_w,
				cd_convenio_w,
				cd_categoria_w,
				dt_base_w,
				cd_plano_conta_w;
			EXIT WHEN NOT FOUND; /* apply on c03 */
				tx_quant_w	:= tx_quant_w;
			end loop;
			close c03;
			
			if (nr_seq_proc_interno_ww > 0) then
				SELECT * FROM obter_proc_tab_interno_conv(nr_seq_proc_interno_ww, cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, cd_plano_conta_w, null, cd_procedimento_w, ie_origem_proced_w, null, dt_regra_w, null, null, null, null, null, null, null, null) INTO STRICT cd_procedimento_w, ie_origem_proced_w;
			end if;
			
			qt_resumo_w		:= qt_resumo_w * tx_quant_w;
			vl_custo_w		:= vl_custo_w * tx_quant_w;
			vl_custo_variavel_w	:= vl_custo_variavel_w * tx_quant_w;
			vl_custo_dir_apoio_w	:= vl_custo_dir_apoio_w * tx_quant_w;
			vl_custo_mao_obra_w	:= vl_custo_mao_obra_w * tx_quant_w;
			vl_custo_direto_w	:= vl_custo_direto_w * tx_quant_w;
			vl_custo_indireto_w	:= vl_custo_indireto_w * tx_quant_w;
			vl_despesa_w		:= vl_despesa_w * tx_quant_w;
			vl_custo_sadt_w	:= vl_custo_sadt_w * tx_quant_w;
			vl_repasse_terceiro_w:= vl_repasse_terceiro_w * 1;
			vl_imposto_w		:= vl_imposto_w * 1;
			vl_desconto_w		:= vl_desconto_w * 1;

			if (ie_regra_w = 'I') then
				if	((vl_custo_operacional_w + vl_medico_w + vl_anestesista_w + vl_materiais_w) = 0) and (vl_procedimento_w	<> 0) then
					vl_procedimento_w	:= vl_procedimento_w * tx_custo_oper_w;
				else
					vl_medico_w		:= vl_medico_w * tx_medico_w;
					vl_auxiliares_w	:= vl_auxiliares_w * tx_medico_w;
					vl_custo_operacional_w:= vl_custo_operacional_w * tx_custo_oper_w;
					vl_anestesista_w	:= vl_anestesista_w * tx_medico_w;
					vl_materiais_w	:= vl_materiais_w  * tx_material_w;
					vl_procedimento_w	:= vl_custo_operacional_w +
								vl_medico_w + vl_anestesista_w + vl_materiais_w;
				end if;
			elsif (ie_regra_w = 'PC') then
				select	max(ie_classificacao)
				into STRICT	ie_classificacao_w
				from 	procedimento
				where	cd_procedimento	= cd_procedimento_w
				and	ie_origem_proced	= ie_origem_proced_w;

				if (ie_classificacao_w in ('1','8')) then
					SELECT * FROM define_preco_procedimento(
						cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, coalesce(dt_base_w, coalesce(dt_final_conta_w, clock_timestamp())), cd_procedimento_w, 0, /* cd_tipo_acomodacao */
						ie_tipo_atendimento_w, cd_setor_atendimento_w, '', /* cd_medico */
						'', /* cd_funcao_medico */
						qt_idade_w, null, null, --cd_usuario_convenio_w, cd_plano_w, ie_clinica_w, cd_empresa_ref_w,ie_sexo_w,
						cd_usuario_convenio_w, cd_plano_conta_w, ie_clinica_w, cd_empresa_ref_w, ie_sexo_w, vl_proc_w, vl_co_w, vl_anest_w, vl_med_w, vl_aux_w, vl_mat_w, qt_pto_proc_w, qt_pto_co_w, qt_pto_anest_w, qt_pto_medico_w, qt_pto_aux_w, qt_pto_mat_w, qt_porte_w, qt_pontos_w, cd_edicao_w, ie_preco_informado_w, nr_seq_ajuste_proc_w, 0, ie_atend_retorno_w, 0, null, null, null, null, null, null, null, null, null, null, ie_carater_inter_sus_w, null, nr_seq_grupo_rec_w, null, nr_seq_origem_w, null, nr_seq_classif_medico_w) INTO STRICT vl_proc_w, vl_co_w, vl_anest_w, vl_med_w, vl_aux_w, vl_mat_w, qt_pto_proc_w, qt_pto_co_w, qt_pto_anest_w, qt_pto_medico_w, qt_pto_aux_w, qt_pto_mat_w, qt_porte_w, qt_pontos_w, cd_edicao_w, ie_preco_informado_w, nr_seq_ajuste_proc_w; /* nr_sequencia */
					vl_medico_w		:= vl_med_w * qt_resumo_w;
					vl_auxiliares_w	:= vl_aux_w * qt_resumo_w;
					vl_custo_operacional_w:= vl_co_w * qt_resumo_w;
					vl_anestesista_w	:= vl_anest_w * qt_resumo_w;
					vl_materiais_w	:= vl_mat_w * qt_resumo_w;
					vl_procedimento_w	:= vl_proc_w * qt_resumo_w;

					if (ie_valor_anterior_w = 'S') and (vl_procedimento_w = 0) then
						vl_procedimento_w	:= vl_proc_original_w;
					end if;
				else
					SELECT * FROM define_preco_servico(
						cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, coalesce(dt_base_w, coalesce(dt_final_conta_w, clock_timestamp())), cd_procedimento_w, cd_setor_atendimento_w, ie_tipo_atendimento_w, 0, /* cd_tipo_acomodacao */

						--cd_usuario_convenio_w, cd_plano_w, ie_clinica_w, cd_empresa_ref_w,ie_sexo_w,
						cd_usuario_convenio_w, cd_plano_conta_w, ie_clinica_w, cd_empresa_ref_w, ie_sexo_w, vl_servico_w, nr_seq_ajuste_proc_w, ie_atend_retorno_w, 0, null, nr_seq_proc_interno_w, null, null, null, null, null, null, nr_seq_grupo_rec_w, nr_seq_origem_w, nr_seq_classif_medico_w, cd_medico_executor_w) INTO STRICT vl_servico_w, nr_seq_ajuste_proc_w;
					vl_procedimento_w		:= qt_resumo_w * vl_servico_w;
					vl_custo_operacional_w	:= qt_resumo_w * vl_servico_w;

					if (ie_valor_anterior_w = 'S') and (vl_procedimento_w = 0) then
						vl_procedimento_w	:= vl_proc_original_w;
					end if;

				end if;
			end if;
		end if;

		insert into sim_valor(
			nr_sequencia,
			nr_seq_sim,
			nr_interno_conta,
			nr_seq_resumo,
			dt_atualizacao,
			nm_usuario,
			qt_resumo,
			vl_medico,
			vl_auxiliares,
			vl_custo_operacional,
			vl_anestesista,
			vl_materiais,
			vl_procedimento,
			vl_material,
			vl_repasse_terceiro,
			vl_imposto,
			vl_desconto,
			vl_custo,
			vl_custo_dir_apoio,
			vl_custo_mao_obra,
			vl_custo_direto,
			vl_custo_indireto,
			vl_custo_variavel,
			vl_despesa,
			vl_custo_sadt,
			nr_seq_regra,
			vl_custo_resumo)
		values (
			nextval('sim_valor_seq'),
			nr_seq_sim_p,
			nr_interno_conta_w,
			nr_seq_resumo_w,
			clock_timestamp(),
			nm_usuario_p,
			qt_resumo_w,
			vl_medico_w,
			vl_auxiliares_w,
			vl_custo_operacional_w,
			vl_anestesista_w,
			vl_materiais_w,
			vl_procedimento_w,
			vl_material_w,
			vl_repasse_terceiro_w,
			vl_imposto_w,
			vl_desconto_w,
			vl_custo_w,
			vl_custo_dir_apoio_w,
			vl_custo_mao_obra_w,
			vl_custo_direto_w,
			vl_custo_indireto_w,
			vl_custo_variavel_w,
			vl_despesa_w,
			vl_custo_sadt_w,
			nr_seq_regra_w,
			coalesce(vl_custo_resumo_w,0));
		end;
	end loop;
	close c01;

elsif (coalesce(ie_simulacao_resumo_w,'S') = 'N') then

	-- Procedimento
	open c04;
	loop
	fetch c04 into
			nr_interno_conta_w,
			nr_seq_item_w,
			cd_procedimento_w,
			ie_origem_proced_w,
			nr_seq_proc_interno_w,
			nr_seq_exame_lab_w,
			cd_setor_atendimento_w,
			ie_tipo_atendimento_w,
			cd_conta_contabil_w,
			qt_resumo_w,
			vl_medico_w,
			vl_auxiliares_w,
			vl_custo_operacional_w,
			vl_anestesista_w,
			vl_materiais_w,
			vl_procedimento_w,
			cd_medico_executor_w,
			cd_convenio_conta_w,
			cd_categoria_conta_w,
			dt_final_conta_w,
			nr_seq_proc_pacote_w,
			vl_proc_original_w,
			dt_conta_w,
			ie_funcao_medico_w,
			cd_cgc_prestador_w,
			cd_especialidade_medica_w,
			tx_procedimento_w,
			ie_doc_executor_w,
			cd_cbo_w,
			nr_seq_grupo_rec_w,
			nr_seq_exame_w,
			cd_plano_ww;
		EXIT WHEN NOT FOUND; /* apply on c04 */
		begin

		select	campo_numerico(obter_idade_pf(c.cd_pessoa_fisica, dt_entrada, 'A')),
			ie_clinica,
			obter_dado_atend_cat_conv(a.nr_atendimento, dt_periodo_final, cd_convenio_calculo, cd_categoria_calculo, 'E'),
			obter_dado_atend_cat_conv(a.nr_atendimento, dt_periodo_final, cd_convenio_calculo, cd_categoria_calculo, 'P'),
			obter_dado_atend_cat_conv(a.nr_atendimento, dt_periodo_final, cd_convenio_calculo, cd_categoria_calculo, 'U'),
			c.ie_sexo,
			CASE WHEN coalesce(b.nr_atend_original::text, '') = '' THEN  'N'  ELSE 'S' END  ie_atend_retorno,
			obter_tipo_acomod_proc(a.nr_atendimento,nr_seq_item_w),
			b.ie_carater_inter_sus,
			b.dt_entrada
		into STRICT	qt_idade_w,
			ie_clinica_w,
			cd_empresa_ref_w,
			cd_plano_w,
			cd_usuario_convenio_w,
			ie_sexo_w,
			ie_atend_retorno_w,
			cd_tipo_acomodacao_w,
			ie_carater_inter_sus_w,
			dt_entrada_w
		from	pessoa_fisica c,
			atendimento_paciente b,
			conta_paciente a
		where	a.nr_atendimento	= b.nr_atendimento
		and	a.nr_interno_conta	= nr_interno_conta_w
		and	b.cd_pessoa_fisica	= c.cd_pessoa_fisica;

		tx_quant_w		:= 1;
		tx_valor_w		:= 1;
		nr_seq_regra_w		:= 0;

		if (ie_origem_proced_w	= 7) and (ie_converte_sus_amb_w	= 'S') then

			select	coalesce(max(cd_procedimento),0),
				coalesce(max(ie_origem_proced),0)
			into STRICT	cd_proc_convertido_w,
				ie_origem_proced_convertido_w
			from	procedimento_conv_sus
			where	cd_procedimento_sus	= cd_procedimento_w
			and	ie_origem_proced_sus	= ie_origem_proced_w;

			if (cd_proc_convertido_w	> 0)		then
				cd_procedimento_w	:= cd_proc_convertido_w;
				ie_origem_proced_w	:= ie_origem_proced_convertido_w;
			end if;

		end if;

		select	max(cd_grupo_proc),
			max(cd_especialidade),
			max(cd_area_procedimento)
		into STRICT	cd_grupo_proc_w,
			cd_especialidade_w,
			cd_area_proc_w
		from 	estrutura_procedimento_v
		where 	cd_procedimento		= cd_procedimento_w
		and	ie_origem_proced	= ie_origem_proced_w;

		tx_quant_w		:= 1;
		tx_custo_oper_w		:= 1;
		tx_medico_w		:= 1;
		tx_material_w		:= 1;
		nr_seq_regra_w		:= 0;
		ie_regra_w		:= null;

		open c03;
		loop
		fetch c03 into
			tx_quant_w,
			tx_custo_oper_w,
			tx_medico_w,
			tx_material_w,
			nr_seq_regra_w,
			ie_regra_w,
			dt_regra_w,
			cd_convenio_w,
			cd_categoria_w,
			dt_base_w,
			cd_plano_conta_w;
		EXIT WHEN NOT FOUND; /* apply on c03 */
			tx_quant_w	:= tx_quant_w;
		end loop;
		close c03;		
		
		
		if (nr_seq_proc_interno_w > 0) then
			SELECT * FROM obter_proc_tab_interno_conv(nr_seq_proc_interno_w, cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, cd_plano_conta_w, null, cd_procedimento_w, ie_origem_proced_w, null, dt_regra_w, null, null, null, null, null, null, null, null) INTO STRICT cd_procedimento_w, ie_origem_proced_w;
		end if;

		select	max(cd_tabela_venda)
		into STRICT	cd_tabela_custo_w
		from	parametro_custo a
		where	cd_estabelecimento 	= cd_estabelecimento_w;

		--Custo no convenio da conta
		SELECT * FROM obter_custo_procedimento(
			cd_estabelecimento_w, cd_procedimento_w, ie_origem_proced_w, nr_seq_proc_interno_w, nr_seq_exame_lab_w, cd_tabela_custo_w, cd_convenio_conta_w, cd_setor_atendimento_w, vl_procedimento_w, vl_custo_operacional_w, vl_medico_w, vl_materiais_w, ie_apuracao_custo_w, vl_custo_unitario_w, vl_custo_variavel_w, vl_custo_sadt_w, vl_custo_dir_apoio_w, vl_custo_mao_obra_w, vl_custo_direto_w, vl_custo_indireto_w, vl_despesa_w, vl_custo_hm_w, pr_imposto_w, coalesce(dt_base_w, dt_conta_w), null, null, null, ie_tipo_atendimento_w, vl_preco_calculado_w, null, 'N', null, null, null) INTO STRICT ie_apuracao_custo_w, vl_custo_unitario_w, vl_custo_variavel_w, vl_custo_sadt_w, vl_custo_dir_apoio_w, vl_custo_mao_obra_w, vl_custo_direto_w, vl_custo_indireto_w, vl_despesa_w, vl_custo_hm_w, pr_imposto_w, vl_preco_calculado_w;

		--Atualizar o vl_custo_resumo
		if (cd_procedimento_w = 99080012)  and (qt_resumo_w = 0) and (vl_custo_direto_w > 0) then
			vl_custo_resumo_w	:= vl_custo_unitario_w;
		elsif (ie_apuracao_custo_w = 'P') then
			vl_custo_resumo_w	:= vl_custo_unitario_w;
		elsif (ie_apuracao_custo_w = 'Q') then
			vl_custo_resumo_w	:= round((qt_resumo_w * vl_custo_unitario_w)::numeric, 2);
		end if;

		vl_custo_resumo_w:=	vl_custo_variavel_w + vl_custo_sadt_w + vl_custo_dir_apoio_w +
					vl_custo_mao_obra_w + vl_custo_direto_w +
					vl_custo_indireto_w + vl_despesa_w + vl_custo_hm_w;

		if (coalesce(pr_imposto_w, 0) > 0) then
			vl_custo_resumo_w	:= vl_custo_resumo_w  + (vl_custo_resumo_w * pr_imposto_w);
		end if;


		--Custo no novo convenio
		SELECT * FROM obter_custo_procedimento(
			cd_estabelecimento_w, cd_procedimento_w, ie_origem_proced_w, nr_seq_proc_interno_w, nr_seq_exame_lab_w, cd_tabela_custo_w, cd_convenio_w, cd_setor_atendimento_w, vl_procedimento_w, vl_custo_operacional_w, vl_medico_w, vl_materiais_w, ie_apuracao_custo_w, vl_custo_unitario_w, vl_custo_variavel_w, vl_custo_sadt_w, vl_custo_dir_apoio_w, vl_custo_mao_obra_w, vl_custo_direto_w, vl_custo_indireto_w, vl_despesa_w, vl_custo_hm_w, pr_imposto_w, coalesce(dt_base_w, dt_conta_w), null, null, null, ie_tipo_atendimento_w, vl_preco_calculado_w, null, 'N', null, null, null) INTO STRICT ie_apuracao_custo_w, vl_custo_unitario_w, vl_custo_variavel_w, vl_custo_sadt_w, vl_custo_dir_apoio_w, vl_custo_mao_obra_w, vl_custo_direto_w, vl_custo_indireto_w, vl_despesa_w, vl_custo_hm_w, pr_imposto_w, vl_preco_calculado_w;

		if (cd_procedimento_w = 99080012)  and (qt_resumo_w = 0) and (vl_custo_direto_w > 0) then
			vl_custo_w		:= vl_custo_unitario_w;
			vl_custo_direto_w	:= vl_custo_direto_w;
		elsif (ie_apuracao_custo_w = 'P') then
			vl_custo_w		:= vl_custo_unitario_w;
			vl_custo_variavel_w	:= vl_custo_variavel_w;
			vl_custo_sadt_w		:= vl_custo_sadt_w;
			vl_custo_dir_apoio_w	:= vl_custo_dir_apoio_w;
			vl_custo_mao_obra_w	:= vl_custo_mao_obra_w;
			vl_custo_direto_w	:= vl_custo_direto_w;
			vl_custo_indireto_w	:= vl_custo_indireto_w;
			vl_despesa_w		:= vl_despesa_w;
			vl_custo_hm_w		:= vl_custo_hm_w;
		elsif (ie_apuracao_custo_w = 'Q') then
			vl_custo_w		:= round((qt_resumo_w * vl_custo_unitario_w)::numeric, 2);
			vl_custo_sadt_w		:= qt_resumo_w * vl_custo_sadt_w;
			vl_custo_variavel_w	:= round((qt_resumo_w * vl_custo_variavel_w)::numeric, 2);
			vl_custo_dir_apoio_w	:= qt_resumo_w * vl_custo_dir_apoio_w;
			vl_custo_mao_obra_w	:= qt_resumo_w * vl_custo_mao_obra_w;
			vl_custo_direto_w	:= qt_resumo_w * vl_custo_direto_w;
			vl_custo_indireto_w	:= qt_resumo_w * vl_custo_indireto_w;
			vl_despesa_w		:= qt_resumo_w * vl_despesa_w;
			vl_custo_hm_w		:= qt_resumo_w * vl_custo_hm_w;
		end if;

		vl_custo_w	:=	vl_custo_variavel_w + vl_custo_sadt_w + vl_custo_dir_apoio_w +
					vl_custo_mao_obra_w + vl_custo_direto_w +
					vl_custo_indireto_w + vl_despesa_w + vl_custo_hm_w;

		if (coalesce(pr_imposto_w, 0) > 0) then
			vl_custo_w	:= vl_custo_w  + (vl_custo_w * pr_imposto_w);
		end if;

		qt_resumo_w		:= qt_resumo_w * tx_quant_w;
		vl_custo_w		:= vl_custo_w * tx_quant_w;
		vl_custo_variavel_w	:= vl_custo_variavel_w * tx_quant_w;
		vl_custo_dir_apoio_w	:= vl_custo_dir_apoio_w * tx_quant_w;
		vl_custo_mao_obra_w	:= vl_custo_mao_obra_w * tx_quant_w;
		vl_custo_direto_w	:= vl_custo_direto_w * tx_quant_w;
		vl_custo_indireto_w	:= vl_custo_indireto_w * tx_quant_w;
		vl_despesa_w		:= vl_despesa_w * tx_quant_w;
		vl_custo_sadt_w		:= vl_custo_sadt_w * tx_quant_w;
		vl_repasse_terceiro_w	:= vl_repasse_terceiro_w * 1;
		vl_imposto_w		:= vl_imposto_w * 1;
		vl_desconto_w		:= vl_desconto_w * 1;
		cd_edicao_w		:= null;

		if (ie_regra_w = 'I') then
			if	((vl_custo_operacional_w + vl_medico_w + vl_anestesista_w + vl_materiais_w) = 0) and (vl_procedimento_w	<> 0) then
				vl_procedimento_w	:= vl_procedimento_w * tx_custo_oper_w;
			else
				vl_medico_w		:= vl_medico_w 	* tx_medico_w;
				vl_auxiliares_w		:= vl_auxiliares_w * tx_medico_w;
				vl_custo_operacional_w	:= vl_custo_operacional_w * tx_custo_oper_w;
				vl_anestesista_w	:= vl_anestesista_w * tx_medico_w;
				vl_materiais_w		:= vl_materiais_w  * tx_material_w;
				vl_procedimento_w	:= vl_custo_operacional_w + vl_medico_w + vl_anestesista_w + vl_materiais_w;
			end if;
		elsif (ie_regra_w = 'PC') then
			select	max(ie_classificacao)
			into STRICT	ie_classificacao_w
			from 	procedimento
			where	cd_procedimento	 = cd_procedimento_w
			and	ie_origem_proced = ie_origem_proced_w;

			if (ie_classificacao_w in ('1','8')) then

				SELECT * FROM define_preco_procedimento(
					cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, coalesce(dt_base_w, coalesce(dt_conta_w, dt_final_conta_w)), cd_procedimento_w, cd_tipo_acomodacao_w, ie_tipo_atendimento_w, cd_setor_atendimento_w, cd_medico_executor_w, ie_funcao_medico_w, qt_idade_w, nr_seq_exame_lab_w, nr_seq_proc_interno_w, --cd_usuario_convenio_w, cd_plano_w, ie_clinica_w, cd_empresa_ref_w,ie_sexo_w,
					cd_usuario_convenio_w, cd_plano_conta_w, ie_clinica_w, cd_empresa_ref_w, ie_sexo_w, vl_proc_w, vl_co_w, vl_anest_w, vl_med_w, vl_aux_w, vl_mat_w, qt_pto_proc_w, qt_pto_co_w, qt_pto_anest_w, qt_pto_medico_w, qt_pto_aux_w, qt_pto_mat_w, qt_porte_w, qt_pontos_w, cd_edicao_w, ie_preco_informado_w, nr_seq_ajuste_proc_w, nr_seq_item_w, ie_atend_retorno_w, 0, null, null, null, null, null, null, null, null, null, null, ie_carater_inter_sus_w, null, nr_seq_grupo_rec_w, ie_origem_proced_w, nr_seq_origem_w, null, nr_seq_classif_medico_w) INTO STRICT vl_proc_w, vl_co_w, vl_anest_w, vl_med_w, vl_aux_w, vl_mat_w, qt_pto_proc_w, qt_pto_co_w, qt_pto_anest_w, qt_pto_medico_w, qt_pto_aux_w, qt_pto_mat_w, qt_porte_w, qt_pontos_w, cd_edicao_w, ie_preco_informado_w, nr_seq_ajuste_proc_w;
					
				vl_medico_w		:= vl_med_w * qt_resumo_w;
				vl_auxiliares_w		:= vl_aux_w * qt_resumo_w;
				vl_custo_operacional_w	:= vl_co_w * qt_resumo_w;
				vl_anestesista_w	:= vl_anest_w * qt_resumo_w;
				vl_materiais_w		:= vl_mat_w * qt_resumo_w;
				vl_procedimento_w	:= vl_proc_w * qt_resumo_w;
				vl_instrumentador_w	:= 0;

				if (varconsideraparticvalor_w = 'N') then -- OS 247250
					select 	count(*)
					into STRICT 	nr_aux_partic_w
					from 	funcao_medico b,
						procedimento_participante a
					where	a.nr_sequencia	= nr_seq_item_w
					and   	a.ie_funcao	= b.cd_funcao
					and   	ie_auxiliar	= 'S';

					if (nr_aux_partic_w = 0) and (coalesce(vl_auxiliares_w,0) > 0)  then
						vl_auxiliares_w	 := 0;
						vl_procedimento_w:= vl_procedimento_w - vl_auxiliares_w;
					end if;

					select 	count(*)
					into STRICT 	nr_anest_partic_w
					from 	funcao_medico b,
						procedimento_participante a
					where	a.nr_sequencia	= nr_seq_item_w
					and   	a.ie_funcao	= b.cd_funcao
					and   	ie_anestesista	= 'S';

					if (nr_anest_partic_w = 0) and (coalesce(vl_anestesista_w,0) > 0)  then
						vl_anestesista_w	:= 0;
						vl_procedimento_w	:= vl_procedimento_w - vl_anestesista_w;
					end if;

					select 	count(*)
					into STRICT 	nr_instrumentador_w
					from 	funcao_medico b,
						procedimento_participante a
					where	a.nr_sequencia	= nr_seq_item_w
					and   	a.ie_funcao	= b.cd_funcao
					and   	ie_instrumentador = 'S';

					if (nr_instrumentador_w > 0)  then --Se tem instrumentador na conta
						select 	coalesce(max(pr_procedimento),1)
						into STRICT 	pr_procedimento_w
						from 	funcao_medico b,
							procedimento_participante a
						where	a.nr_sequencia	= nr_seq_item_w
						and   	a.ie_funcao	= b.cd_funcao
						and   	ie_instrumentador = 'S';

						vl_instrumentador_w	:= vl_instrumentador_w + (vl_medico_w * pr_procedimento_w);
					end if;

				end if;

				select obter_regra_preco_filme(cd_convenio_w)
				into STRICT 	ie_aplica_taxa_filme_w
				;

				vl_custo_operacional_w 		:= ((tx_procedimento_w * vl_custo_operacional_w)/100);
				vl_anestesista_w 		:= ((tx_procedimento_w * vl_anestesista_w)/100);
				vl_medico_w 			:= ((tx_procedimento_w * vl_medico_w)/100);
				vl_auxiliares_w 		:= ((tx_procedimento_w * vl_auxiliares_w)/100);
				if (ie_aplica_taxa_filme_w = 'S') then
					vl_materiais_w 		:= ((tx_procedimento_w * vl_materiais_w)/100);
				end if;
				vl_procedimento_w		:= ((tx_procedimento_w * vl_procedimento_w)/100);
				vl_instrumentador_w		:= ((tx_procedimento_w * vl_instrumentador_w)/100);

			else

				SELECT * FROM define_preco_servico(
					cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, coalesce(dt_base_w, coalesce(dt_conta_w, dt_final_conta_w)), cd_procedimento_w, cd_setor_atendimento_w, ie_tipo_atendimento_w, cd_tipo_acomodacao_w, --cd_usuario_convenio_w, cd_plano_w, ie_clinica_w, cd_empresa_ref_w,ie_sexo_w,
					cd_usuario_convenio_w, cd_plano_conta_w, ie_clinica_w, cd_empresa_ref_w, ie_sexo_w, vl_servico_w, nr_seq_ajuste_proc_w, ie_atend_retorno_w, 0, null, nr_seq_proc_interno_w, null, null, null, null, null, null, nr_seq_grupo_rec_w, nr_seq_origem_w, nr_seq_classif_medico_w, cd_medico_executor_w) INTO STRICT vl_servico_w, nr_seq_ajuste_proc_w;

				vl_procedimento_w		:= qt_resumo_w * vl_servico_w;
				vl_custo_operacional_w		:= qt_resumo_w * vl_servico_w;

			end if;



			SELECT * FROM define_adicional_horario(cd_estabelecimento_w, cd_procedimento_w, ie_origem_proced_w, cd_convenio_w, cd_categoria_w, coalesce(cd_setor_atendimento_w,0), coalesce(ie_tipo_atendimento_w,0), ie_carater_inter_sus_w, coalesce(dt_base_w, coalesce(dt_conta_w, dt_final_conta_w)), null, null, null, null, cd_tipo_acomodacao_w, cd_medico_executor_w, --cd_plano_w,
						cd_plano_conta_w, dt_entrada_w, tx_adic_medico_w, tx_adic_anestesista_w, tx_adic_auxiliares_w, tx_adic_custo_operacional_w, tx_adic_materiais_w, tx_adic_procedimento_w, vl_adic_proc_w, vl_adic_medico_w, cd_proced_calculo_horario_w, ie_origem_proced_horario_w, nr_seq_adic_w, ie_clinica_w, somente_numero(cd_edicao_w), nr_seq_proc_interno_w) INTO STRICT tx_adic_medico_w, tx_adic_anestesista_w, tx_adic_auxiliares_w, tx_adic_custo_operacional_w, tx_adic_materiais_w, tx_adic_procedimento_w, vl_adic_proc_w, vl_adic_medico_w, cd_proced_calculo_horario_w, ie_origem_proced_horario_w, nr_seq_adic_w;

			vl_custo_operacional_w 	:= (tx_adic_custo_operacional_w 	* vl_custo_operacional_w);
			vl_anestesista_w 	:= (tx_adic_anestesista_w 		* vl_anestesista_w);
			vl_medico_w 		:= (tx_adic_medico_w * (coalesce(vl_adic_medico_w,0) + vl_medico_w));
			vl_auxiliares_w 	:= (tx_adic_auxiliares_w 		* vl_auxiliares_w);
			vl_materiais_w 		:= (tx_adic_materiais_w 		* vl_materiais_w);
			vl_procedimento_w	:= (tx_adic_procedimento_w * (coalesce(vl_adic_proc_w,0) + vl_custo_operacional_w + vl_anestesista_w +
							vl_medico_w + vl_auxiliares_w + vl_materiais_w));

			if (ie_valor_anterior_w = 'S') and (vl_procedimento_w = 0) then
				vl_procedimento_w	:= vl_proc_original_w;

			else

				ie_pacote_w:= obter_se_pacote(nr_seq_item_w,nr_seq_proc_pacote_w);

				SELECT * FROM obter_regra_honorario(cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, cd_procedimento_w, ie_origem_proced_w, coalesce(dt_base_w, coalesce(dt_conta_w, dt_final_conta_w)), ie_tipo_atendimento_w, cd_setor_atendimento_w, --null, null,cd_medico_executor_w, cd_cgc_prestador_w, ie_pacote_w,ie_carater_inter_sus_w, cd_plano_w,
					null, null, cd_medico_executor_w, cd_cgc_prestador_w, ie_pacote_w, ie_carater_inter_sus_w, cd_plano_conta_w, cd_regra_honorario_w, ie_conta_honorario_w, ie_calcula_honorario_w, cd_cgc_honorario_w, cd_pessoa_honorario_w, nr_seq_criterio_w, cd_especialidade_medica_w, null, ie_funcao_medico_w, ie_clinica_w, cd_empresa_ref_w, nr_seq_classif_medico_w, cd_procedencia_w, ie_doc_executor_w, cd_cbo_w, nr_seq_proc_interno_w, nr_seq_exame_w) INTO STRICT cd_regra_honorario_w, ie_conta_honorario_w, ie_calcula_honorario_w, cd_cgc_honorario_w, cd_pessoa_honorario_w, nr_seq_criterio_w;

				if (ie_calcula_honorario_w 	= 'N')	then
					begin
					vl_medico_w 			:= 0;
					vl_procedimento_w		:= 0;
					vl_custo_operacional_w		:= 0;
					vl_anestesista_w		:= 0;
					vl_auxiliares_w			:= 0;
					vl_materiais_w			:= 0;
					end;
				end if;

				vl_medico_conta_w 			:= 0;
				if (ie_conta_honorario_w 		= 'S') 	then
					vl_medico_conta_w 		:= vl_medico_w;
				end if;
				if (ie_conta_honorario_w 		= 'T') 	then
					vl_procedimento_w		:= 0;
				elsif 	((vl_custo_operacional_w  > 0)	or
					((vl_medico_w > 0) or (vl_medico_w < 0)) or (vl_auxiliares_w > 0) 		or (vl_materiais_w > 0)) 		then
					vl_procedimento_w 		:= (vl_custo_operacional_w + vl_anestesista_w +
									    vl_medico_conta_w + vl_materiais_w + vl_auxiliares_w + vl_instrumentador_w);
				end if;

			end if;

		end if;

		insert into sim_valor(
			nr_sequencia,
			nr_seq_sim,
			nr_interno_conta,
			nr_seq_resumo,
			dt_atualizacao,
			nm_usuario,
			qt_resumo,
			vl_medico,
			vl_auxiliares,
			vl_custo_operacional,
			vl_anestesista,
			vl_materiais,
			vl_procedimento,
			vl_material,
			vl_repasse_terceiro,
			vl_imposto,
			vl_desconto,
			vl_custo,
			vl_custo_dir_apoio,
			vl_custo_mao_obra,
			vl_custo_direto,
			vl_custo_indireto,
			vl_custo_variavel,
			vl_despesa,
			vl_custo_sadt,
			nr_seq_regra,
			nr_seq_item,
			ie_proc_mat,
			vl_custo_resumo)
		values (
			nextval('sim_valor_seq'),
			nr_seq_sim_p,
			nr_interno_conta_w,
			0,
			clock_timestamp(),
			nm_usuario_p,
			qt_resumo_w,
			vl_medico_w,
			vl_auxiliares_w,
			vl_custo_operacional_w,
			vl_anestesista_w,
			vl_materiais_w,
			vl_procedimento_w,
			0, --vl_material_w
			0, --vl_repasse_terceiro_w
			0, --vl_imposto_w
			0, --vl_desconto_w
			vl_custo_w,
			vl_custo_dir_apoio_w,
			vl_custo_mao_obra_w,
			vl_custo_direto_w,
			vl_custo_indireto_w,
			vl_custo_variavel_w,
			vl_despesa_w,
			vl_custo_sadt_w,
			nr_seq_regra_w,
			nr_seq_item_w,
			'P',
			coalesce(vl_custo_resumo_w,0));

		end;
	end loop;
	close c04;

	-- Materiais
	open c05;
	loop
	fetch c05 into
		nr_interno_conta_w,
		nr_seq_item_w,
		cd_material_w,
		cd_setor_atendimento_w,
		ie_tipo_atendimento_w,
		cd_conta_contabil_w,
		qt_resumo_w,
		vl_material_w,
		cd_convenio_conta_w,
		cd_categoria_conta_w,
		dt_final_conta_w,
		nr_seq_proc_pacote_w,
		vl_mat_original_w,
		dt_conta_w,
		cd_cgc_fornec_w,
		nr_prescricao_w,
		cd_plano_ww,
		nr_seq_classif_atend_mat_w,
		nr_atendimento_w;
		EXIT WHEN NOT FOUND; /* apply on c05 */
		begin

		select	campo_numerico(obter_idade_pf(c.cd_pessoa_fisica, dt_entrada, 'A')),
			ie_clinica,
			obter_dado_atend_cat_conv(a.nr_atendimento, dt_periodo_final, cd_convenio_calculo, cd_categoria_calculo, 'E'),
			obter_dado_atend_cat_conv(a.nr_atendimento, dt_periodo_final, cd_convenio_calculo, cd_categoria_calculo, 'P'),
			obter_dado_atend_cat_conv(a.nr_atendimento, dt_periodo_final, cd_convenio_calculo, cd_categoria_calculo, 'U'),
			c.ie_sexo,
			CASE WHEN coalesce(b.nr_atend_original::text, '') = '' THEN  'N'  ELSE 'S' END  ie_atend_retorno,
			obter_tipo_acomod_proc(a.nr_atendimento,nr_seq_item_w),
			b.ie_carater_inter_sus,
			b.dt_entrada,
			a.dt_periodo_inicial,
			a.dt_periodo_final,
			b.dt_alta
		into STRICT	qt_idade_w,
			ie_clinica_w,
			cd_empresa_ref_w,
			cd_plano_w,
			cd_usuario_convenio_w,
			ie_sexo_w,
			ie_atend_retorno_w,
			cd_tipo_acomodacao_w,
			ie_carater_inter_sus_w,
			dt_entrada_w,			
			dt_periodo_inicial_w,
			dt_periodo_final_w,
			dt_alta_preco_w
		from	pessoa_fisica c,
			atendimento_paciente b,
			conta_paciente a
		where	a.nr_atendimento	= b.nr_atendimento
		and	a.nr_interno_conta	= nr_interno_conta_w
		and	b.cd_pessoa_fisica	= c.cd_pessoa_fisica;

		tx_quant_w		:= 1;
		tx_valor_w		:= 1;
		nr_seq_regra_w	:= 0;

		select 	cd_grupo_material,
			cd_subgrupo_material,
			cd_classe_material
		into STRICT	cd_grupo_mat_w,
			cd_subgrupo_mat_w,
			cd_classe_mat_w
		from 	estrutura_material_v
		where 	cd_material		= cd_material_w;

		ie_regra_w		:= null;

		open c02;
		loop
		fetch c02 into
			tx_quant_w,
			tx_valor_w,
			nr_seq_regra_w,
			ie_regra_w,
			dt_regra_w,
			cd_convenio_w,
			cd_categoria_w,
			dt_base_w,
			cd_plano_conta_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			tx_quant_w		:= tx_quant_w;
		end loop;
		close c02;

		if (ie_regra_mat_conta_w = 'S') then

			begin
			select 	cd_material_prescricao,
				cd_material_exec
			into STRICT	cd_material_prescricao_w,
				cd_material_exec_w
			from	material_atend_paciente
			where 	nr_sequencia = nr_seq_item_w;
			exception
				when others then
				cd_material_prescricao_w:= null;
				cd_material_exec_w	:= null;
			end;

			begin
			select 	coalesce(obter_material_conta(cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, cd_material_prescricao_w,
						cd_material_exec_w, cd_material_w,  cd_plano_conta_w, cd_setor_atendimento_w,
						dt_conta_w, cd_local_estoque_w, nr_prescricao_w), cd_material_w)
			into STRICT	cd_material_w
			;
			exception
				when others then
				cd_material_w:= cd_material_w;
			end;

		end if;

		select	max(cd_tabela_venda),
			max(dt_referencia),
			coalesce(max(ds_criterio_aloc_mat),'ERT'),
			coalesce(max(ie_custo_oc_consig),'N')
		into STRICT	cd_tabela_custo_w,
			dt_ref_custo_w,
			ds_criterio_w,
			ie_custo_oc_consig_w
		from	parametro_custo a
		where	cd_estabelecimento 	= cd_estabelecimento_w;

		if (coalesce(cd_tabela_custo_w::text, '') = '') then
			select	max(cd_tabela_custo)
			into STRICT	cd_tabela_custo_w
			from	tabela_custo
			where	cd_tipo_tabela_custo	= 9
			and	dt_mes_referencia	= coalesce(dt_base_w, coalesce(dt_conta_w, dt_final_conta_w))
			and	cd_estabelecimento 	= cd_estabelecimento_w;
		end if;

		select 	max(dt_mesano_referencia)
		into STRICT	dt_mesano_ref_w
		from 	conta_paciente
		where 	nr_interno_conta = nr_interno_conta_w;

		vl_custo_unitario_w	:= 0;
		ie_apuracao_custo_w	:= 'Q';
		if (ds_criterio_w <> 'NAO') then
			begin
			/*  Obter o custo da ordem de compra gerada para a prescricao em questao */

			if (ie_custo_oc_consig_w = 'S') and (cd_cgc_fornec_w IS NOT NULL AND cd_cgc_fornec_w::text <> '') and (nr_prescricao_w IS NOT NULL AND nr_prescricao_w::text <> '') then
				begin
				select obter_custo_mat_consignado(
						nr_prescricao_w,
						cd_material_w,
						cd_cgc_fornec_w,
						null)
				into STRICT	vl_custo_unitario_w
				;
				exception
					when others then
						vl_custo_unitario_w	:= 0;
				end;
			end if;
			/*  Obter o custo da nota fiscal se esta estiver vinculada ao atendimento em questao */

			if (vl_custo_unitario_w = 0) and (qt_resumo_w > 0) then
				select obter_custo_mat_nf_atend(
						obter_atendimento_conta(nr_interno_conta_w),
						cd_material_w)
				into STRICT	vl_custo_unitario_w
				;
			end if;
			if (vl_custo_unitario_w = 0) then
				SELECT * FROM obter_custo_material(cd_estabelecimento_w, cd_material_w, cd_estabelecimento_w, cd_tabela_custo_w, cd_setor_atendimento_w, cd_convenio_w, vl_material_w, ds_criterio_w, null, coalesce(dt_mesano_ref_w,dt_ref_custo_w), ie_apuracao_custo_w, vl_custo_unitario_w, pr_imposto_w, null, ie_tipo_atendimento_w, null, 'N', null, 0, 0, null) INTO STRICT ie_apuracao_custo_w, vl_custo_unitario_w, pr_imposto_w;

				if (ie_apuracao_custo_w = 'P') then
					vl_custo_w		:= vl_custo_unitario_w;
				elsif (ie_apuracao_custo_w = 'Q') then
					vl_custo_w		:= round((qt_resumo_w * vl_custo_unitario_w)::numeric, 2);
				end if;

			end if;
			end;
		end if;

		vl_custo_w :=	vl_custo_unitario_w;

		if (coalesce(pr_imposto_w, 0) > 0) then
			vl_custo_w := vl_custo_w  + (vl_custo_w * pr_imposto_w);
		end if;

		--Atualizar o atributo vl_custo_resumo
		SELECT * FROM obter_custo_material(cd_estabelecimento_w, cd_material_w, cd_estabelecimento_w, cd_tabela_custo_w, cd_setor_atendimento_w, cd_convenio_conta_w, vl_material_w, ds_criterio_w, null, coalesce(dt_mesano_ref_w,dt_ref_custo_w), ie_apuracao_custo_w, vl_custo_unitario_w, pr_imposto_w, null, ie_tipo_atendimento_w, null, 'N', null, 0, 0, null) INTO STRICT ie_apuracao_custo_w, vl_custo_unitario_w, pr_imposto_w;

		if (ie_apuracao_custo_w = 'P') then
			vl_custo_resumo_w		:= vl_custo_unitario_w;
		elsif (ie_apuracao_custo_w = 'Q') then
			vl_custo_resumo_w		:= round((qt_resumo_w * vl_custo_unitario_w)::numeric, 2);
		end if;

		vl_custo_resumo_w :=	vl_custo_unitario_w;

		if (coalesce(pr_imposto_w, 0) > 0) then
			vl_custo_resumo_w := vl_custo_resumo_w  + (vl_custo_resumo_w * pr_imposto_w);
		end if;


		qt_resumo_w			:= qt_resumo_w * tx_quant_w;
		if (ie_regra_w = 'I') then
			vl_custo_w		:= vl_custo_w 		* tx_quant_w;
			vl_material_w		:= vl_material_w 	* tx_valor_w;
		elsif (ie_regra_w = 'PC') then
			vl_custo_w		:= vl_custo_w 	 * tx_quant_w;
			vl_material_w		:= vl_material_w * tx_valor_w;
			
			qt_preco_mat_w:= 0;
			if (cd_tab_preco_mat_regra_w > 0) then
				select 	count(*)
				into STRICT	qt_preco_mat_w
				from 	preco_material
				where 	cd_tab_preco_mat 	    = cd_tab_preco_mat_regra_w
				and 	cd_estabelecimento    = cd_estabelecimento_w
				and 	cd_material	    = cd_material_w
				and	PKG_DATE_UTILS.start_of(dt_conta_w,'dd',0)
				between coalesce(PKG_DATE_UTILS.start_of(dt_inicio_vigencia,'dd',0), clock_timestamp() - interval '3650 days') and coalesce(dt_final_vigencia, dt_conta_w);
			end if;

			if (qt_preco_mat_w > 0) then
				dt_preco_w:= dt_conta_w;
			else					
				select	obter_regra_data_preco('M',cd_convenio_w, dt_entrada_w, dt_conta_w, dt_alta_preco_w, dt_final_conta_w,
					null, dt_periodo_inicial_w, dt_periodo_final_w)
				into STRICT	dt_preco_w
				;				
			end if;
			
			SELECT * FROM define_preco_material(	cd_estabelecimento_w, 					-- cd_estabelecimento_p		number,
						cd_convenio_w,                                           -- cd_convenio_p          	number,
						cd_categoria_w,                                          -- cd_categoria_p         	varchar2,
						coalesce(dt_base_w, coalesce(dt_conta_w, dt_final_conta_w)),       -- dt_vigencia_p          	date,
						cd_material_w,                                           -- cd_material_p          	number,
						0,                                                       -- cd_tipo_acomodacao_p   	number,
						ie_tipo_atendimento_w,                                   -- ie_tipo_atendimento_p  	number,
						cd_setor_atendimento_w,                                  -- cd_setor_atendimento_p 	number,
						'',                                                      -- cd_cgc_fornecedor_p		varchar2,
						null,                                                    -- qt_idade_p			number,
						null,                                                    -- nr_sequencia_p		number,
						cd_plano_conta_w,                                        -- cd_plano_p			varchar2,
						null,                                                    -- cd_proc_referencia_p		number,
						null,                                                    -- ie_origem_proc_p		number,
						null,                                                    -- nr_seq_marca_p		number,
						null,                                                    -- ie_clinica_p			number,
						nr_seq_classif_atend_mat_w,                              -- nr_seq_classif_atend_p	number,
						nr_atendimento_w, 					-- nr_atendimento_p		number,
						null,                                                    -- ie_vago_4_p			varchar2,
						vl_preco_w,                                              -- vl_material_p      	 out 	number,
						dt_ult_vigencia_w,                                       -- dt_ult_vigencia_p  	 out 	date,
						cd_tab_preco_mat_w,                                      -- cd_tab_preco_mat_p 	 out 	number,
						ie_origem_preco_w,                                       -- ie_origem_preco_p  	 out 	number,
						nr_seq_bras_preco_w,                                     -- nr_seq_bras_preco_p	 out	number,
						nr_seq_mat_bras_w,                                       -- nr_seq_mat_bras_p	 out	number,
						nr_seq_conv_bras_w,                                      -- nr_seq_conv_bras_p	 out	number,
						nr_seq_conv_simpro_w,                                    -- nr_seq_conv_simpro_p	 out	number,
						nr_seq_mat_simpro_w,                                     -- nr_seq_mat_simpro_p	 out	number,
						nr_seq_simpro_preco_w,                                   -- nr_seq_simpro_preco_p out	number,
						nr_seq_ajuste_mat_w) INTO STRICT 
						vl_preco_w, 
						dt_ult_vigencia_w, 
						cd_tab_preco_mat_w, 
						ie_origem_preco_w, 
						nr_seq_bras_preco_w, 
						nr_seq_mat_bras_w, 
						nr_seq_conv_bras_w, 
						nr_seq_conv_simpro_w, 
						nr_seq_mat_simpro_w, 
						nr_seq_simpro_preco_w, 
						nr_seq_ajuste_mat_w;                                   -- nr_seq_ajuste_mat_p	 out	number	
						
			vl_preco_w		:= coalesce(vl_preco_w,0);
			vl_material_w		:= qt_resumo_w * vl_preco_w;
			if (ie_valor_anterior_w = 'S') and (vl_material_w = 0) then
				vl_material_w	:= vl_mat_original_w;
			end if;
		end if;

		insert into sim_valor(
			nr_sequencia,
			nr_seq_sim,
			nr_interno_conta,
			nr_seq_resumo,
			dt_atualizacao,
			nm_usuario,
			qt_resumo,
			vl_medico,
			vl_auxiliares,
			vl_custo_operacional,
			vl_anestesista,
			vl_materiais,
			vl_procedimento,
			vl_material,
			vl_repasse_terceiro,
			vl_imposto,
			vl_desconto,
			vl_custo,
			vl_custo_dir_apoio,
			vl_custo_mao_obra,
			vl_custo_direto,
			vl_custo_indireto,
			vl_custo_variavel,
			vl_despesa,
			vl_custo_sadt,
			nr_seq_regra,
			nr_seq_item,
			ie_proc_mat,
			vl_custo_resumo)
		values (
			nextval('sim_valor_seq'),
			nr_seq_sim_p,
			nr_interno_conta_w,
			0,
			clock_timestamp(),
			nm_usuario_p,
			qt_resumo_w,
			0, --vl_medico_w
			0, --vl_auxiliares_w
			0, --vl_custo_operacional_w
			0, --vl_anestesista_w
			0, --vl_materiais_w
			0, --vl_procedimento_w
			vl_material_w,
			0, --vl_repasse_terceiro_w
			0, --vl_imposto_w
			0, --vl_desconto_w
			vl_custo_w,
			0, --vl_custo_dir_apoio_w
			0, --vl_custo_mao_obra_w
			0, --vl_custo_direto_w
			0, --vl_custo_indireto_w
			0, --vl_custo_variavel_w
			0, --vl_despesa_w
			0, --vl_custo_sadt_w,
			nr_seq_regra_w,
			nr_seq_item_w,
			'M',
			coalesce(vl_custo_resumo_w,0));

		end;
	end loop;
	close c05;


	if (ie_compara_pacote_w = 'S') then -- OS 693746 Fabricio

		--Ler os procedimentos gatilhos de pacote da conta (atendimento_pacote)
		open C06;
		loop
		fetch C06 into
			c06_w;
		EXIT WHEN NOT FOUND; /* apply on C06 */
			begin

			-- Busca o convenio e categoria da simulacao
			open c03;
			loop
			fetch c03 into
				tx_quant_w,
				tx_custo_oper_w,
				tx_medico_w,
				tx_material_w,
				nr_seq_regra_w,
				ie_regra_w,
				dt_regra_w,
				cd_convenio_w,
				cd_categoria_w,
				dt_base_w,
				cd_plano_conta_w;
			EXIT WHEN NOT FOUND; /* apply on c03 */
				tx_quant_w	:= tx_quant_w;
			end loop;
			close c03;


			-- Verifica os pacotes no convenio simulado
			select 	coalesce(max(a.cd_procedimento),0),
				coalesce(max(a.ie_origem_proced),0),
				coalesce(max(c.ie_tipo_atendimento),0),
				coalesce(max(ie_tipo_atend_conta),0),
				coalesce(max(cd_setor_atendimento),0),
				max(CASE WHEN coalesce(c.nr_atend_original::text, '') = '' THEN  'N'  ELSE 'S' END ),
				max(campo_numerico(obter_idade_pf(c.cd_pessoa_fisica, dt_entrada, 'A'))),
				max(dt_procedimento),
				max(trunc(coalesce(dt_alta, clock_timestamp()) - dt_entrada) + 1),
				CASE WHEN coalesce(max(obter_qt_acomp_atendimento(c.nr_atendimento)),0)=0 THEN  'N'  ELSE 'S' END ,
				max(d.ie_sexo),
				coalesce(max(ie_clinica),0)
			into STRICT	cd_procedimento_w,
				ie_origem_proced_w,
				ie_tipo_atendimento_w,
				ie_tipo_atend_conta_w,
				cd_setor_atendimento_w,
				ie_retorno_w,
				qt_idade_w,
				dt_procedimento_w,
				qt_dias_inter_w,
				ie_acomp_w,
				ie_sexo_w,
				ie_clinica_w
			from 	procedimento_paciente a,
				conta_paciente b,
				atendimento_paciente c,
				pessoa_fisica d
			where 	nr_sequencia = c06_w.nr_seq_proc_origem
			and 	a.nr_interno_conta = b.nr_interno_conta
			and 	b.nr_atendimento = c.nr_atendimento
			and 	c.cd_pessoa_fisica = d.cd_pessoa_fisica;

			select	coalesce(max(cd_centro_custo),0)
			into STRICT	cd_centro_custo_w
			from	setor_atendimento
			where	cd_setor_atendimento = cd_setor_atendimento_w;

			select 	coalesce(max(c.nr_seq_pacote),0)
			into STRICT	nr_seq_pacote_simulado_w
			from 	pacote c
			where	c.cd_convenio			= cd_convenio_w
			and	c.cd_proced_pacote		= cd_procedimento_w
			and	c.ie_origem_proced		= ie_origem_proced_w
			and	c.cd_estabelecimento		= cd_estabelecimento_w
			and	c.ie_situacao			= 'A';

			cd_proc_pacote_w	:= 0;
			ie_origem_proc_pacote_w	:= 0;
			vl_pacote_w		:= 0;
			nr_seq_sim_pacote_w	:= 0;
			qt_pacote_w		:= 0;

			if (nr_seq_pacote_simulado_w > 0) then

				-- Verificar o pacote acomodacao da seq. pacote encontrado, e pegar o seu codigo e valor.
				select 	coalesce(max(nr_sequencia),0)
				into STRICT	nr_seq_tipo_acomod_w
				from 	pacote_tipo_acomodacao a
				where 	nr_seq_pacote			= nr_seq_pacote_simulado_w
				and 	ie_tipo_acomod			= c06_w.ie_tipo_acomod
				and	coalesce(cd_categoria, coalesce(cd_categoria_w, 'X'))	= coalesce(cd_categoria_w, 'X')
				and	coalesce(cd_plano, coalesce(cd_plano_conta_w, 'X'))	= coalesce(cd_plano_conta_w, 'X')
				and 	coalesce(ie_clinica, coalesce(ie_clinica_w,0))		= coalesce(ie_clinica_w, 0)
				and	coalesce(a.ie_tipo_atendimento, ie_tipo_atendimento_w)		= ie_tipo_atendimento_w
				and	coalesce(a.ie_tipo_atend_conta, coalesce(ie_tipo_atend_conta_w,0))	= coalesce(ie_tipo_atend_conta_w,0)
				and	coalesce(a.cd_setor_atendimento, cd_setor_atendimento_w)		= cd_setor_atendimento_w
				and	((ie_atend_retorno = 'A') or (ie_atend_retorno = ie_retorno_w))
				and	qt_idade_w between coalesce(qt_idade_min, 0) and coalesce(qt_idade_max, 999)	-- edgar 06/10/2005 os 23079
				and	coalesce(dt_procedimento_w, a.dt_vigencia) between coalesce(a.dt_vigencia,dt_procedimento_w) and coalesce(trunc(a.dt_vigencia_final, 'dd') + 86399/86400,clock_timestamp() + interval '360 days')
				and	qt_dias_inter_w between coalesce(qt_dias_inter_inicio, qt_dias_inter_w) and coalesce(qt_dias_inter_final, qt_dias_inter_w)
				and	((coalesce(ie_atend_acomp,'A') = 'A') or (coalesce(ie_atend_acomp,'A') = ie_acomp_w))
				and	coalesce(ie_sexo, coalesce(ie_sexo_w,'A')) = coalesce(ie_sexo_w,'A')
				and	coalesce(a.cd_centro_custo, coalesce(cd_centro_custo_w, 0)) = coalesce(cd_centro_custo_w, 0)
                                and	coalesce(a.ie_carater_inter_sus, coalesce(ie_carater_inter_sus_w, 'X')) = coalesce(ie_carater_inter_sus_w, 'X')
				and	coalesce(dt_vigencia,dt_procedimento_w) = (
						SELECT	max(coalesce(dt_vigencia,dt_procedimento_w))
						from	pacote_tipo_acomodacao b
						where	nr_seq_pacote			= nr_seq_pacote_simulado_w
						and 	ie_tipo_acomod			= c06_w.ie_tipo_acomod
						and	coalesce(cd_categoria, coalesce(cd_categoria_w, 'X'))	= coalesce(cd_categoria_w, 'X')
						and	coalesce(cd_plano, coalesce(cd_plano_conta_w, 'X'))		= coalesce(cd_plano_conta_w, 'X')
						and	((ie_atend_retorno = 'A') or (ie_atend_retorno = ie_retorno_w))
						and	coalesce(b.ie_tipo_atendimento, ie_tipo_atendimento_w)	= ie_tipo_atendimento_w
						and	coalesce(b.ie_tipo_atend_conta, coalesce(ie_tipo_atend_conta_w,0))	= coalesce(ie_tipo_atend_conta_w,0)
						and	qt_idade_w 	between coalesce(qt_idade_min, 0) and coalesce(qt_idade_max, 999)
						and	coalesce(dt_procedimento_w, dt_vigencia) between coalesce(dt_vigencia,dt_procedimento_w) and coalesce(trunc(dt_vigencia_final, 'dd') + 86399/86400,clock_timestamp() + interval '360 days')
						and 	coalesce(ie_situacao, 'A') 		= 'A'
						and	coalesce(ie_sexo, coalesce(ie_sexo_w,'A')) = coalesce(ie_sexo_w,'A')
						and	coalesce(b.cd_centro_custo, coalesce(cd_centro_custo_w, 0)) = coalesce(cd_centro_custo_w, 0)
						and	coalesce(b.ie_carater_inter_sus, coalesce(ie_carater_inter_sus_w, 'X')) = coalesce(ie_carater_inter_sus_w, 'X')
						and	cd_procedimento			= a.cd_procedimento
						and	ie_origem_proced		= a.ie_origem_proced);


				select 	coalesce(max(cd_procedimento),0),
					coalesce(max(ie_origem_proced),0),
					coalesce(max(vl_pacote),0)
				into STRICT	cd_proc_pacote_w,
					ie_origem_proc_pacote_w,
					vl_pacote_w
				from 	pacote_tipo_acomodacao a
				where 	nr_sequencia = nr_seq_tipo_acomod_w;

				select 	coalesce(max(nr_sequencia),0)
				into STRICT	nr_seq_sim_pacote_w
				from 	sim_valor
				where 	nr_seq_item = c06_w.nr_seq_procedimento
				and 	nr_seq_sim = nr_seq_sim_p;

				select	coalesce(max(qt_procedimento),0)
				into STRICT	qt_pacote_w
				from 	procedimento_paciente
				where 	nr_sequencia = c06_w.nr_seq_procedimento;

				vl_pacote_w	:= vl_pacote_w * qt_pacote_w;

				update 	sim_valor
				set	nr_seq_sim_pacote = nr_seq_sim_pacote_w,
					qt_pacote 	=  qt_pacote_w,
					vl_pacote       = vl_pacote_w
				where 	nr_sequencia = nr_seq_sim_pacote_w;

			end if;

			select 	coalesce(max(nr_interno_conta),0)
			into STRICT	nr_interno_conta_sim_w
			from 	procedimento_paciente
			where 	nr_sequencia = c06_w.nr_seq_procedimento
			and 	nr_seq_pacote_simulado_w > 0;

			-- Percorre todos os itens da simulacao e verificar as regras de procedimento ou material (Verificar se inclui)
			open C07;
			loop
			fetch C07 into
				c07_w;
			EXIT WHEN NOT FOUND; /* apply on C07 */
				begin

				if (c07_w.ie_proc_mat = 'M') then

					select 	coalesce(max(cd_material),0),
						coalesce(max(cd_setor_atendimento),0),
						coalesce(max(vl_unitario),0),
						coalesce(max(vl_material),0),
						coalesce(max(qt_material),0),
						coalesce(max(nr_seq_proc_pacote),0),
						coalesce(max(dt_atendimento),clock_timestamp())
					into STRICT	cd_material_w,
						cd_setor_atendimento_w,
						vl_unitario_w,
						vl_material_w,
						qt_material_w,
						nr_seq_proc_pacote_sim_w,
						dt_atendimento_w
					from 	material_atend_paciente
					where 	nr_sequencia = c07_w.nr_seq_item;

					if (nr_seq_proc_pacote_sim_w = c06_w.nr_seq_procedimento) then

						select	coalesce(max(cd_centro_custo),0)
						into STRICT	cd_centro_custo_w
						from	setor_atendimento
						where	cd_setor_atendimento = cd_setor_atendimento_w;

						select 	cd_grupo_material,
							cd_subgrupo_material,
							cd_classe_material,
							coalesce(nr_seq_familia,0)
						into STRICT	cd_grupo_mat_w,
							cd_subgrupo_mat_w,
							cd_classe_mat_w,
							nr_seq_familia_w
						from 	estrutura_material_v
						where 	cd_material			= cd_material_w;

						ie_inclui_exclui_w	:= 'N';
						qt_limite_w		:= 0;

						open C08;
						loop
						fetch C08 into
							c08_w;
						EXIT WHEN NOT FOUND; /* apply on C08 */
							begin

							ie_inclui_exclui_w	:= c08_w.ie_inclui_exclui;
							qt_limite_w		:= c08_w.qt_limite;

							end;
						end loop;
						close C08;

						if (ie_inclui_exclui_w = 'I') then

							update	sim_valor
							set 	nr_seq_sim_pacote = nr_seq_sim_pacote_w,
								qt_pacote = qt_material_w
							where 	nr_sequencia = c07_w.nr_sequencia;

							if (qt_limite_w > 0) then

								if (qt_limite_w < qt_material_w) then
									update	sim_valor
									set 	nr_seq_sim_pacote = nr_seq_sim_pacote_w,
										qt_pacote = qt_limite_w
									where 	nr_sequencia = c07_w.nr_sequencia;
								end if;

							end if;

						end if;

					end if;

				else

					-- Procedimentos
					select 	coalesce(max(cd_procedimento),0),
						coalesce(max(ie_origem_proced),0),
						coalesce(max(cd_setor_atendimento),0),
						coalesce(max(vl_procedimento),0),
						coalesce(max(qt_procedimento),0),
						coalesce(max(cd_medico_executor),'0'),
						coalesce(max(nr_seq_proc_interno),0),
						max(cd_cgc_prestador),
						coalesce(max(nr_seq_proc_pacote),0)
					into STRICT	cd_procedimento_w,
						ie_origem_proced_w,
						cd_setor_atendimento_w,
						vl_procedimento_w,
						qt_procedimento_w,
						cd_medico_executor_w,
						nr_seq_proc_interno_w,
						cd_cgc_prestador_w,
						nr_seq_proc_pacote_sim_w
					from 	procedimento_paciente
					where 	nr_sequencia = c07_w.nr_seq_item;

					if (nr_seq_proc_pacote_sim_w = c06_w.nr_seq_procedimento) then

						select	coalesce(max(cd_centro_custo),0)
						into STRICT	cd_centro_custo_w
						from	setor_atendimento
						where	cd_setor_atendimento = cd_setor_atendimento_w;

						select 	max(cd_area_procedimento),
							max(cd_especialidade),
							max(cd_grupo_Proc)
						into STRICT	cd_area_proc_w,
							cd_especialidade_w,
							cd_grupo_Proc_w
						from 	estrutura_Procedimento_v
						where 	cd_procedimento		= cd_procedimento_w
						and 	ie_origem_proced	= ie_origem_proced_w;


						ie_inclui_exclui_w	:= 'N';
						qt_limite_w		:= 0;

						if (nr_seq_proc_interno_w <> 0) then

							select 	coalesce(max(nr_seq_classif),0)
							into STRICT	nr_seq_classif_w
							from 	proc_interno
							where 	nr_sequencia = nr_seq_proc_interno_w;

						end if;

						open C09;
						loop
						fetch C09 into
							c09_w;
						EXIT WHEN NOT FOUND; /* apply on C09 */
							begin

							ie_inclui_exclui_w	:= c09_w.ie_inclui_exclui;
							qt_limite_w		:= c09_w.qt_limite;

							end;
						end loop;
						close C09;

						if (ie_inclui_exclui_w = 'I') then

							update	sim_valor
							set 	nr_seq_sim_pacote = nr_seq_sim_pacote_w,
								qt_pacote = qt_procedimento_w
							where 	nr_sequencia = c07_w.nr_sequencia;

							if (qt_limite_w > 0) then

								if (qt_limite_w < qt_procedimento_w) then
									update	sim_valor
									set 	nr_seq_sim_pacote = nr_seq_sim_pacote_w,
										qt_pacote = qt_limite_w
									where 	nr_sequencia = c07_w.nr_sequencia;
								end if;

							end if;

						end if;

					end if;

				end if;


				end;
			end loop;
			close C07;

			-- Verificar todos os itens do pacote que foram atualizados e fazer o rateio proporcional.
			select 	coalesce(sum(vl_material),0)
			into STRICT	vl_tot_material_w
			from 	sim_valor
			where 	nr_seq_sim = nr_seq_sim_p
			and 	nr_seq_sim_pacote = nr_seq_sim_pacote_w
			and 	coalesce(nr_seq_sim_pacote, 0) <> nr_sequencia
			and 	ie_proc_mat = 'M';

			select 	coalesce(sum(vl_procedimento),0)
			into STRICT	vl_tot_procedimento_w
			from 	sim_valor
			where 	nr_seq_sim = nr_seq_sim_p
			and 	nr_seq_sim_pacote = nr_seq_sim_pacote_w
			and 	coalesce(nr_seq_sim_pacote, 0) <> nr_sequencia
			and 	ie_proc_mat = 'P';

			-- Saber quanto cada tipo representa do total
			vl_total_w	:= vl_tot_material_w + vl_tot_procedimento_w;
			pr_mat_w	:= dividir(vl_tot_material_w, vl_total_w);
			pr_proc_w	:= dividir(vl_tot_procedimento_w, vl_total_w);


			update 	sim_valor
			set 	vl_pacote = dividir(coalesce(vl_material,0), vl_tot_material_w) * vl_pacote_w * pr_mat_w
			where 	nr_seq_sim = nr_seq_sim_p
			and 	nr_seq_sim_pacote = nr_seq_sim_pacote_w
			and 	coalesce(nr_seq_sim_pacote, 0) <> nr_sequencia
			and 	ie_proc_mat = 'M';

			update 	sim_valor
			set 	vl_pacote = dividir(coalesce(vl_procedimento,0), vl_tot_procedimento_w) * vl_pacote_w * pr_proc_w
			where 	nr_seq_sim = nr_seq_sim_p
			and 	nr_seq_sim_pacote = nr_seq_sim_pacote_w
			and 	coalesce(nr_seq_sim_pacote, 0) <> nr_sequencia
			and 	ie_proc_mat = 'P';

			-- Ajustar as diferencas
			select	coalesce(sum(vl_pacote),0)
			into STRICT	vl_pacote_calculado_w
			from 	sim_valor
			where 	nr_seq_sim = nr_seq_sim_p
			and 	nr_seq_sim_pacote = nr_seq_sim_pacote_w
			and 	coalesce(nr_seq_sim_pacote, 0) <> nr_sequencia;

			vl_diferenca_w:= vl_pacote_w - vl_pacote_calculado_w;

			if (vl_diferenca_w <> 0) then

				select	coalesce(max(nr_sequencia),0)
				into STRICT	nr_seq_max_valor_w
				from 	sim_valor
				where 	nr_seq_sim = nr_seq_sim_p
				and 	nr_seq_sim_pacote = nr_seq_sim_pacote_w
				and 	coalesce(nr_seq_sim_pacote, 0) <> nr_sequencia;

				update	sim_valor
				set 	vl_pacote = vl_pacote + vl_diferenca_w
				where 	nr_sequencia = nr_seq_max_valor_w;

			end if;

			end;
		end loop;
		close C06;


	end if;


end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE sim_calcular_valores ( nm_usuario_p text, nr_seq_sim_p bigint) FROM PUBLIC;

