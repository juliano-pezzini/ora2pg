-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE definir_medico_resp (nr_atendimento_p bigint, cd_medico_resp_p text, nm_usuario_p text, cd_especialidade_p bigint default null) AS $body$
DECLARE


ie_permite_assumir_lib_w	varchar(2);
dt_lib_medico_w				timestamp;
cd_medico_ant_w				varchar(10);
ie_atualiza_medico_resp_w	varchar(3);
ie_forma_aviso_w			varchar(1);
usuario_e_medico_w 			varchar(1);
usuario_do_medico_w			varchar(255);
nr_sequencia_w				bigint;
ds_param_integration_w    varchar(255);
ie_forma_aviso_ww       varchar(2);


BEGIN

ie_atualiza_medico_resp_w := obter_param_usuario(935, 150, obter_perfil_ativo, nm_usuario_p, obter_estabelecimento_ativo, ie_atualiza_medico_resp_w);
ie_permite_assumir_lib_w := obter_param_usuario(935, 221, obter_perfil_ativo, nm_usuario_p, obter_estabelecimento_ativo, ie_permite_assumir_lib_w);

if (ie_permite_assumir_lib_w = 'N') then
    select  dt_lib_medico
    into STRICT    dt_lib_medico_w
    from    atendimento_paciente
    where   nr_atendimento      = nr_atendimento_p;

    if (coalesce(dt_lib_medico_w,clock_timestamp()) < clock_timestamp()) then       
        CALL wheb_mensagem_pck.exibir_mensagem_abort(270437);

    end if;

end if;
select  max(cd_medico_resp)
into STRICT    cd_medico_ant_w
from    atendimento_paciente 
where   nr_atendimento = nr_atendimento_p;
update  atendimento_paciente
set cd_medico_resp  = cd_medico_resp_p,
    nm_usuario  = nm_usuario_p,
    dt_atualizacao  = clock_timestamp()
where   nr_atendimento  = nr_atendimento_p;
commit;
SELECT MAX(ie_forma_aviso)
into STRICT ie_forma_aviso_w
FROM atendimento_troca_medico
WHERE nr_atendimento = nr_atendimento_p;
SELECT MAX(nr_sequencia)
into STRICT nr_sequencia_w
FROM atendimento_troca_medico
WHERE nr_atendimento = nr_atendimento_p;

select   coalesce(max(ie_forma_aviso),'M')
into STRICT     ie_forma_aviso_ww
from    atendimento_troca_medico
where   nr_sequencia = nr_sequencia_w;
if (ie_forma_aviso_ww = 'P') then
  ds_param_integration_w := '{"recordId" : "' || nr_sequencia_w|| '"' || '}';
  CALL execute_bifrost_integration(252, ds_param_integration_w);
end if;

if (ie_forma_aviso_w = 'T') then
    
    select  max(OBTER_SE_USUARIO_MEDICO(nm_usuario_p)), 
            max(OBTER_USUARIO_PESSOA(cd_medico_resp_p))
    into STRICT    usuario_e_medico_w,
            usuario_do_medico_w
;

    if (usuario_e_medico_w = 'S' AND usuario_do_medico_w = nm_usuario_p) then
        ie_forma_aviso_w := 'P';
    else
        ie_forma_aviso_w := 'M';
    end if;

    update atendimento_troca_medico
    set ie_forma_aviso = ie_forma_aviso_w,
        nm_usuario  = nm_usuario_p,
        dt_atualizacao  = clock_timestamp()
    where nr_atendimento = nr_atendimento_p
    and   nr_sequencia = nr_sequencia_w;

  if (ie_forma_aviso_w = 'P') then 
      ds_param_integration_w := '{"recordId" : "' || nr_sequencia_w|| '"' || '}';
      CALL execute_bifrost_integration(252, ds_param_integration_w);
  end if;

  commit;
end if;
commit;
if (coalesce(cd_especialidade_p, 0) > 0) then
    CALL Atualiza_Espec_medica_atend(cd_especialidade_p, nr_atendimento_p, cd_medico_resp_p, nm_usuario_p);
end if;
if (ie_atualiza_medico_resp_w = 'S') and (coalesce(cd_medico_ant_w,0) > 0)then
    
    CALL atualizar_medico_conta(nr_atendimento_p, cd_medico_ant_w, cd_medico_resp_p, nm_usuario_p);
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE definir_medico_resp (nr_atendimento_p bigint, cd_medico_resp_p text, nm_usuario_p text, cd_especialidade_p bigint default null) FROM PUBLIC;

