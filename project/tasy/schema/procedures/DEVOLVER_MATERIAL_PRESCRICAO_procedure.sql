-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE devolver_material_prescricao (nr_prescricao_p bigint, cd_material_p bigint, qt_devolver_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE



qt_material_w		double precision;
qt_devolver_w		double precision;
qt_dev_w		double precision;
qt_saldo_w		double precision;
nr_sequencia_w		bigint;
vl_parametro_baixa_w	varchar(255);
vl_parametro_motivo_w	varchar(255);
nr_seq_devolucao_w	bigint;

c01 CURSOR FOR
	SELECT	qt_material,
		nr_sequencia
	from	prescr_material
	where	nr_prescricao	= nr_prescricao_p
	and	cd_material	= cd_material_p
	and	qt_material	> 0
	and	cd_motivo_baixa	= 0;


BEGIN

select	coalesce(obter_valor_param_usuario(901, 36, Obter_Perfil_Ativo, nm_usuario_p, 1),'N')
into STRICT	vl_parametro_baixa_w
;

select	coalesce(obter_valor_param_usuario(901, 37, Obter_Perfil_Ativo, nm_usuario_p, 1),'0')
into STRICT	vl_parametro_motivo_w
;

select	sum(qt_material)
into STRICT	qt_saldo_w
from	prescr_material
where	nr_prescricao	= nr_prescricao_p
and	cd_material	= cd_material_p
and	cd_motivo_baixa	= 0;

if (qt_saldo_w < qt_devolver_p) then
	/*Não é possível devolver quantidade maior que a enviada.' ||
			chr(13) || chr(10) || 'Material=' || cd_material_p ||
			' Saldo=' || qt_saldo_w || ' devolver=' || qt_devolver_p);*/
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(261398,	'MATERIAL='||to_char(cd_material_p) || ';' ||
													'SALDO=' || to_char(qt_saldo_w) || ';' ||
													'DEVOLVER=' || to_char(qt_devolver_p));
end if;

qt_devolver_w	:= qt_devolver_p;

open	c01;
loop
fetch	c01 into qt_material_w,
		 nr_sequencia_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	if (qt_devolver_w > 0) then
		begin
		if (qt_devolver_w > qt_material_w) then
			qt_dev_w	:= qt_material_w;
		else
			qt_dev_w	:= qt_devolver_w;
		end if;
		update	prescr_material
		set	qt_material		= qt_material - qt_dev_w,
			qt_unitaria		= qt_unitaria - qt_dev_w,
			qt_dose			= qt_dose - qt_dev_w,
			qt_total_dispensar	= qt_total_dispensar - qt_dev_w,
			nm_usuario		= nm_usuario_p,
			dt_atualizacao		= clock_timestamp()
		where	nr_prescricao		= nr_prescricao_p
		and	nr_sequencia		= nr_sequencia_w;

		select	nextval('prescr_material_devolucao_seq')
		into STRICT	nr_seq_devolucao_w
		;

		/* Gravar os dados da devolução - OS 107335 */

		insert into prescr_material_devolucao(
			nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_prescricao,
			nr_seq_prescricao,
			qt_devolucao)
		values (
			nr_seq_devolucao_w,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_prescricao_p,
			nr_sequencia_w,
			qt_devolver_w);

		qt_devolver_w	:= (qt_devolver_w - qt_dev_w);

		if (vl_parametro_baixa_w		= 'S') and (qt_material_w - qt_dev_w	= 0) then
			update	prescr_material
			set	dt_baixa	= clock_timestamp(),
				cd_motivo_baixa	= vl_parametro_motivo_w
			where	nr_prescricao	= nr_prescricao_p
			and	nr_sequencia	= nr_sequencia_w;
		end if;
		end;
	end if;
	end;
end loop;
close 	c01;
commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE devolver_material_prescricao (nr_prescricao_p bigint, cd_material_p bigint, qt_devolver_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

