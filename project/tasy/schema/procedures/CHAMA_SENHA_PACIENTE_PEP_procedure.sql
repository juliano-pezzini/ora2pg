-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE chama_senha_paciente_pep ( nr_atendimento_p bigint, ds_maquina_P text, nm_usuario_p text, nr_seq_triagem_p bigint default 0, ie_html_p text default null) AS $body$
DECLARE


nr_seq_senha_w		bigint;				
nr_seq_fila_senha_w	bigint;	
nm_paciente_w		varchar(255);	
ie_tipo_nome_w		varchar(1);
cd_pessoa_fisica_w	varchar(10);
dt_inutilizacao_w	timestamp;
dt_fim_atend_w		timestamp;
qt_agenda_w			bigint;	
nr_tempo_chamada_w	varchar(5);
ds_maquina_w		varchar(255);
ie_cancelar_chamadas_w	varchar(20);
cd_usuario_w numeric(20);


BEGIN
if (coalesce(ds_maquina_p::text, '') = '') or (ds_maquina_p = '') then
	ds_maquina_w := wheb_usuario_pck.get_nm_maquina;
else
	ds_maquina_w := ds_maquina_p;
end if;

ie_cancelar_chamadas_w := Obter_param_Usuario(935, 87, obter_perfil_ativo, nm_usuario_p, 0, ie_cancelar_chamadas_w);																						
ie_tipo_nome_w := Obter_param_Usuario(10021, 65, obter_perfil_ativo, nm_usuario_p, obter_estabelecimento_ativo, ie_tipo_nome_w);
nr_tempo_chamada_w := Obter_param_Usuario(935, 220, obter_perfil_ativo, nm_usuario_p, obter_estabelecimento_ativo, nr_tempo_chamada_w);

nr_seq_senha_w := obter_seq_senha_paciente(nr_atendimento_p);

select obter_pf_usuario(nm_usuario_p, 'C')
into STRICT cd_usuario_w
;

if (nr_atendimento_p > 0) then
	if (ie_tipo_nome_w in ('1', '3')) then
		nm_paciente_w  := substr(pls_gerar_nome_abreviado(obter_dados_atendimento(nr_atendimento_p,'NP')), 1, 60);
	elsif (ie_tipo_nome_w = '5') then
		nm_paciente_w := substr(OBTER_INICIAIS_NOME_SENHAS(obter_dados_atendimento(nr_atendimento_p,'CP'), obter_dados_atendimento(nr_atendimento_p,'NP')),1,250);
	else
		nm_paciente_w  := substr(obter_dados_atendimento(nr_atendimento_p,'NP'), 1, 60);
	end if;
end if;

if (nr_seq_senha_w > 0) and ((nr_tempo_chamada_w)::numeric  > 0) then
	
	select	max(obter_ult_fim_atend_senha(nr_seq_senha_w))
	into STRICT	dt_fim_atend_w
	;
	
	if (dt_fim_atend_w IS NOT NULL AND dt_fim_atend_w::text <> '') and
		((dt_fim_atend_w + nr_tempo_chamada_w/24/60) > clock_timestamp()) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(292121,'NR_MIN=' || nr_tempo_chamada_w); --'Nao e possivel chamar o proximo paciente antes de ' || nr_tempo_chamada_w || ' minuto(s) da ultima chamada.'
	end if;
	
end if;

if (nr_seq_triagem_p > 0) and (not nr_seq_senha_w > 0) then

    select	coalesce(max(NR_SEQ_FILA_SENHA), 0)
		into STRICT	nr_seq_senha_w
    from	triagem_pronto_atend
    where	nr_sequencia = nr_seq_triagem_p;

    
    select 		substr(obter_nome_pf(cd_pessoa_fisica),1,60),
				cd_pessoa_fisica
    into STRICT        nm_paciente_w,
				cd_pessoa_fisica_w
    from		triagem_pronto_atend
    where		nr_sequencia = nr_seq_triagem_p;
end if;

if (ie_cancelar_chamadas_w	= 'G') then
	begin
	update	atendimento_paciente
	set	dt_chamada_paciente	 = NULL,
		nr_seq_local_pa		 = NULL,
		cd_medico_chamado	 = NULL,
		nm_usuario		= nm_usuario_p,
		dt_atualizacao		= clock_timestamp(),
		ie_chamado		 = NULL
	where (cd_usuario_w = cd_medico_chamado
    or coalesce(cd_medico_chamado::text, '') = '')
	and	((dt_chamada_paciente IS NOT NULL AND dt_chamada_paciente::text <> '') or (dt_chamada_reavaliacao IS NOT NULL AND dt_chamada_reavaliacao::text <> ''))
	and	nr_atendimento	<>	nr_atendimento_p
	and	coalesce(dt_alta::text, '') = '';
    end;
end if;


if (nr_seq_senha_w > 0) then
	select  max(coalesce(nr_seq_fila_senha,nr_seq_fila_senha_origem))
	into STRICT	nr_seq_fila_senha_w
	from	paciente_senha_fila
	where	nr_sequencia = nr_seq_senha_w;
	
end if;

if (nr_seq_fila_senha_w > 0) then

	CALL chamar_senha_pac_avulsa(nr_seq_senha_w,ds_maquina_w,nr_seq_fila_senha_w,'0',nm_usuario_p);

	select	max(dt_inutilizacao)
	into STRICT	dt_inutilizacao_w
	from	paciente_senha_fila
	where	nr_sequencia = nr_seq_senha_w;
	
	if (coalesce(dt_inutilizacao_w::text, '') = '') then
		if (coalesce(cd_pessoa_fisica_w::text, '') = '') then
			cd_pessoa_fisica_w := substr(obter_dados_atendimento(nr_atendimento_p,'CP'), 1, 10);
		end if;

		UPDATE	paciente_senha_fila
		SET	dt_chamada_pa		=	clock_timestamp(),
			nm_paciente		=	CASE WHEN cd_pessoa_fisica_w = NULL THEN nm_paciente_w  ELSE null END ,
			nm_usuario		=	nm_usuario_p,
			dt_visualizacao_monitor  = NULL,
			cd_pessoa_fisica	= 	cd_pessoa_fisica_w
		WHERE	nr_sequencia		=	nr_seq_senha_w;
		
		if (nr_atendimento_p > 0) then
			if (obter_se_usuario_medico(obter_usuario_ativo) = 'S') then
			
				update	atendimento_paciente
				set 	dt_chamada_paciente = clock_timestamp(),
						ie_chamado 		= 'S',
						cd_medico_chamado = cd_usuario_w
				where	nr_atendimento = nr_atendimento_p;
			else
				update	atendimento_paciente
				set 	dt_chamada_enfermagem = clock_timestamp(),
					ie_chamado 		= 'S'
				where	nr_atendimento = nr_atendimento_p;
			end if;
			
			if (coalesce(ie_html_p,'N') = 'S') then
			
				select	count(*)
				into STRICT	qt_agenda_w
				from	agenda_consulta_v2
				where	nr_atendimento = nr_atendimento_p;
				
				if (qt_agenda_w > 0) then
					update	agenda_Consulta
					set		ie_status_agenda = 'PH'
					where	nr_atendimento = nr_atendimento_p;
				end if;
			
			end if;
			
		end if;


	end if;
else
	CALL wheb_mensagem_pck.exibir_mensagem_abort(186212); -- O paciente nao possui senha.
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE chama_senha_paciente_pep ( nr_atendimento_p bigint, ds_maquina_P text, nm_usuario_p text, nr_seq_triagem_p bigint default 0, ie_html_p text default null) FROM PUBLIC;

