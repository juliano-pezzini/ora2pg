-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_isentar_cpt_benef ( nr_seq_segurado_p bigint, qt_vidas_contrato_p bigint, ie_commit_p text, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[  ]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
ie_tipo_contratacao_w		varchar(2);
ie_isentar_cpt_w		varchar(1);
ie_tipo_data_w			varchar(2);
nr_seq_contrato_w		bigint;
nr_seq_regra_w			bigint;
nr_seq_cpt_w			bigint;
nr_seq_plano_w			bigint;
qt_dias_inicial_w		bigint;
qt_dias_final_w			bigint;
dt_contratacao_w		timestamp;
dt_contrato_w			timestamp;
dt_admissao_w			timestamp;
dt_inicio_vigencia_regra_w	timestamp;
dt_fim_vigencia_regra_w		timestamp;

C01 CURSOR FOR
	SELECT	nr_sequencia,
		ie_tipo_data,
		coalesce(qt_dias_inicial,0),
		coalesce(qt_dias_final,0)
	from	pls_regra_cpt_isencao
	where	((ie_tipo_contratacao = ie_tipo_contratacao_w) or (coalesce(ie_tipo_contratacao::text, '') = ''))
	and	qt_vidas_contrato_p between coalesce(qt_vidas_inicial,qt_vidas_contrato_p) and coalesce(qt_vidas_final,qt_vidas_contrato_p)
	and	ie_isentar_cpt = 'S';

C02 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_carencia
	where	nr_seq_segurado	= nr_seq_segurado_p
	and	ie_cpt	= 'S';


BEGIN

select	a.nr_seq_contrato,
	a.dt_contratacao,
	b.dt_contrato,
	a.nr_seq_plano
into STRICT	nr_seq_contrato_w,
	dt_contratacao_w,
	dt_contrato_w,
	nr_seq_plano_w
from	pls_segurado	a,
	pls_contrato	b
where	a.nr_seq_contrato	= b.nr_sequencia
and	a.nr_sequencia		= nr_seq_segurado_p;

select	max(ie_tipo_contratacao)
into STRICT	ie_tipo_contratacao_w
from	pls_plano
where	nr_sequencia	= nr_seq_plano_w;

select	max(dt_admissao)
into STRICT	dt_admissao_w
from	pls_segurado_compl
where	nr_seq_segurado	= nr_seq_segurado_p;

open C01;
loop
fetch C01 into
	nr_seq_regra_w,
	ie_tipo_data_w,
	qt_dias_inicial_w,
	qt_dias_final_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	ie_isentar_cpt_w	:= 'N';
	if (coalesce(ie_tipo_data_w,'H') = 'H') then
		ie_isentar_cpt_w	:= 'S';
	elsif (ie_tipo_data_w	= 'C') then
		dt_inicio_vigencia_regra_w	:= dt_contrato_w + qt_dias_inicial_w -1;
		dt_fim_vigencia_regra_w		:= dt_contrato_w + qt_dias_final_w;
		if	trunc(dt_contratacao_w,'dd') between trunc(dt_inicio_vigencia_regra_w,'dd') and fim_dia(dt_fim_vigencia_regra_w) then
			ie_isentar_cpt_w	:= 'S';
		end if;
	elsif (ie_tipo_data_w	= 'D') then
		dt_inicio_vigencia_regra_w	:= dt_admissao_w + qt_dias_inicial_w -1;
		dt_fim_vigencia_regra_w		:= dt_admissao_w + qt_dias_final_w;
		if	trunc(dt_contratacao_w,'dd') between trunc(dt_inicio_vigencia_regra_w,'dd') and fim_dia(dt_fim_vigencia_regra_w) then
			ie_isentar_cpt_w	:= 'S';
		end if;
	end if;

	if (ie_isentar_cpt_w = 'S') then
		open C02;
		loop
		fetch C02 into
			nr_seq_cpt_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin
			update	pls_carencia
			set	qt_dias		= 0,
				ds_observacao	= ds_observacao || chr(13) || chr(10) || 'CPT isento pela regra '||nr_seq_regra_w
			where	nr_sequencia	= nr_seq_cpt_w;
			end;
		end loop;
		close C02;
	end if;
	end;
end loop;
close C01;

if (coalesce(ie_commit_p,'S') = 'S') then
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_isentar_cpt_benef ( nr_seq_segurado_p bigint, qt_vidas_contrato_p bigint, ie_commit_p text, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

