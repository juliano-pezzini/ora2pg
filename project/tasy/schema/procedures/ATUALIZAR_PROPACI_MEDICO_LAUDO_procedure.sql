-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualizar_propaci_medico_laudo ( nr_sequencia_p bigint, ie_opcao_p text, nm_usuario_p text) AS $body$
DECLARE



/*
EX 	= Medico executor
EXC = Medico executor da conta
AN	= Anestesista como participante
*/
nr_seq_propaci_w	bigint;
nr_seq_partic_w		bigint;
ie_funcao_w		bigint;
cont_w			bigint;
nr_prescricao_w   bigint;
nr_seq_prescricao_w bigint;
funcao_ativa_w 		bigint;
cd_medico_laudo_w	varchar(10);
cd_anestesista_w	varchar(50);
cd_especialidade_w	varchar(50);
alterar_medico_exec_conta_w varchar(1) := 'N';
nm_usuario_aprovacao_w	varchar(15);
nm_usuario_seg_aprov_w      laudo_paciente.nm_usuario_seg_aprov%TYPE;
cd_cbo_w		varchar(6);
ie_atual_medico_w	varchar(255);
ie_medico_exec_laudo_w	varchar(1);
ie_consite_anestesia_w varchar(1);
ie_necessita_anest_w varchar(1);
cd_convenio_w		convenio.cd_convenio%type;
cd_procedimento_w	procedimento.cd_procedimento%type;
ie_origem_proced_w	procedimento.ie_origem_proced%type;
cd_medico_seg_aprov     pessoa_fisica.cd_pessoa_fisica%TYPE;
alterar_medico_conta_w  varchar(2) := 'N';

qt_consiste_setor_proc_w    consiste_setor_proc.nr_sequencia%type;
ie_medico_executor_w        consiste_setor_proc.ie_medico_executor%TYPE;
cd_cgc_w                    consiste_setor_proc.cd_cgc%TYPE;
cd_medico_regra_w           consiste_setor_proc.cd_medico_executor%TYPE;
cd_profissional_w           consiste_setor_proc.cd_pessoa_fisica%TYPE;
cd_pessoa_coleta_w          prescr_procedimento.cd_pessoa_coleta%TYPE;
cd_medico_laudo_sus_w       sus_laudo_paciente.cd_medico_responsavel%TYPE;
nr_atendimento_w            atendimento_paciente.nr_atendimento%TYPE;

c01 CURSOR FOR
	SELECT	nr_sequencia
	from	procedimento_paciente
	where	nr_laudo = nr_sequencia_p;



BEGIN

funcao_ativa_w	:= coalesce(obter_funcao_ativa, 28);
alterar_medico_exec_conta_w := coalesce(obter_valor_param_usuario(945, 90, obter_perfil_ativo, obter_usuario_ativo, obter_estabelecimento_ativo),'N');


if (nr_sequencia_p IS NOT NULL AND nr_sequencia_p::text <> '') then
	begin

	select
        nr_seq_proc,
        cd_medico_resp,
        nm_usuario_aprovacao,
        cd_anestesista,
        nr_prescricao,
        nr_seq_prescricao,
        nm_usuario_seg_aprov,
        nr_atendimento
	into STRICT
        nr_seq_propaci_w,
        cd_medico_laudo_w,
        nm_usuario_aprovacao_w,
        cd_anestesista_w,
        nr_prescricao_w,
        nr_seq_prescricao_w,
        nm_usuario_seg_aprov_w,
        nr_atendimento_w
	from	laudo_paciente
	where	nr_sequencia	= nr_sequencia_p;
	exception
	WHEN no_data_found THEN
		nr_seq_propaci_w	:=0;
    WHEN too_many_rows THEN
        nr_seq_propaci_w	:=0;
	end;

	select (select 1
        from consiste_setor_proc LIMIT 1)
    into STRICT qt_consiste_setor_proc_w
;


    if (qt_consiste_setor_proc_w > 0) then
        begin
            SELECT * FROM consiste_setor_procedimento(
                nr_seq_propaci_p => nr_seq_propaci_w, nm_usuario_regra_p => nm_usuario_p, ie_medico_executor_p => ie_medico_executor_w, cd_cgc_p => cd_cgc_w, cd_medico_executor_p => cd_medico_regra_w, cd_pessoa_fisica_p => cd_profissional_w) INTO STRICT ie_medico_executor_p => ie_medico_executor_w, cd_cgc_p => cd_cgc_w, cd_medico_executor_p => cd_medico_regra_w, cd_pessoa_fisica_p => cd_profissional_w;

            if (obter_funcao_ativa	= 1113) and (ie_medico_executor_w not in ('Y', 'F', 'N')) then
                select	max(coalesce(cd_pessoa_fisica,cd_profissional_w))
                into STRICT	cd_profissional_w
                from	usuario
                where	nm_usuario = nm_usuario_p;

            elsif (ie_medico_executor_w = 'P') then
                select  coalesce(cd_medico_laudo_w, cd_medico)
                into STRICT    cd_medico_laudo_w
                from    prescr_medica
                where  	nr_prescricao	= nr_prescricao_w;

            elsif (ie_medico_executor_w = 'R') then
                select  coalesce(cd_prescritor, cd_medico_laudo_w)
                into STRICT    cd_medico_laudo_w
                from    prescr_medica
                where  	nr_prescricao	= nr_prescricao_w;

            elsif (ie_medico_executor_w = 'S') then
				select  max(cd_procedimento),
                        max(ie_origem_proced)
				into STRICT    cd_procedimento_w,
                        ie_origem_proced_w
				from	procedimento_paciente
				where	nr_sequencia = nr_seq_propaci_w;

                select	max(coalesce(cd_medico_requisitante,cd_medico_laudo_w))
                into STRICT	cd_medico_laudo_w
                from	sus_laudo_paciente
                where	nr_atendimento	= nr_atendimento_w
                and	    cd_procedimento_solic	= cd_procedimento_w
                and	    ie_origem_proced 	= ie_origem_proced_w;

            elsif (ie_medico_executor_w = 'M') then
                begin
                    cd_medico_laudo_sus_w	:= sus_obter_dados_sismama_atend(nr_atendimento_w,'M','CMR');
                    cd_medico_laudo_w 	:= coalesce(cd_medico_laudo_sus_w,cd_medico_laudo_w);
                end;

            elsif (ie_medico_executor_w = 'L') then
                select	coalesce(cd_medico_resp, cd_medico_laudo_w)
                into STRICT	cd_medico_laudo_w
                from	laudo_paciente
                where	nr_prescricao	= nr_prescricao_w
                and		nr_sequencia	= nr_seq_prescricao_w;

            elsif (ie_medico_executor_w = 'A') and (coalesce(cd_medico_regra_w::text, '') = '') then
                select	max(cd_medico_laudo_w)
                into STRICT	cd_medico_laudo_w
                from    atendimento_paciente
                where	nr_atendimento = nr_atendimento_w;

            elsif (ie_medico_executor_w = 'Y') and (cd_profissional_w IS NOT NULL AND cd_profissional_w::text <> '') then
                cd_profissional_w	:= null;

            elsif (ie_medico_executor_w = 'F') and (cd_medico_regra_w IS NOT NULL AND cd_medico_regra_w::text <> '') then
                cd_medico_laudo_w	:= cd_medico_regra_w;

            elsif (ie_medico_executor_w = 'B') then
                select	coalesce(cd_medico_exec, cd_medico_regra_w)
                into STRICT	cd_medico_laudo_w
                from	prescr_procedimento
                where	nr_prescricao = nr_prescricao_w
                and	    nr_sequencia = nr_seq_prescricao_w;

            elsif (ie_medico_executor_w = 'N') then
                cd_medico_laudo_w	:= null;

            else
                cd_medico_laudo_w	:= coalesce(cd_medico_regra_w, cd_medico_laudo_w);
            end if;

        exception
        when no_data_found then
            CALL gravar_log_lab_pragma(1079, 'Record not found. CALLSTACK: ' || dbms_utility.format_call_stack, nm_usuario_p, nr_seq_propaci_w, null);
        WHEN too_many_rows THEN
            CALL gravar_log_lab_pragma(1079, 'Multiple records was found in the object "ATUALIZAR_PROPACI_MEDICO_LAUDO". CALLSTACK: ' || dbms_utility.format_call_stack, nm_usuario_p, nr_seq_propaci_w, null);
        when others then
            CALL gravar_log_lab_pragma(1079, 'It was not possible to consist of the procedure sector. CALLSTACK: '
 || dbms_utility.format_call_stack, nm_usuario_p, nr_seq_propaci_w, null);
        end;
    end if;

	if (coalesce(nr_seq_propaci_w,0)	<> 0) then

		if (coalesce(ie_opcao_p,'EX') = 'EX') then
			begin

			ie_atual_medico_w	:= coalesce(obter_valor_param_usuario(28, 101, obter_perfil_ativo, obter_usuario_ativo, obter_estabelecimento_ativo),'S');

			if (ie_atual_medico_w = 'R') then

				select	max(cd_convenio),
					max(cd_procedimento),
					max(ie_origem_proced)
				into STRICT	cd_convenio_w,
					cd_procedimento_w,
					ie_origem_proced_w
				from	procedimento_paciente
				where	nr_sequencia = nr_seq_propaci_w;

				ie_medico_exec_laudo_w	:= obter_se_medico_exec_laudo(cd_convenio_w, cd_procedimento_w, ie_origem_proced_w, nm_usuario_p);

				if (coalesce(ie_medico_exec_laudo_w,'N') = 'S') then

					select	max(a.cd_cbo)
					into STRICT	cd_cbo_w
					from    sus_cbo                 b,
						sus_cbo_pessoa_fisica   a,
						procedimento_paciente	c
					where   sus_obter_secbo_compativel(cd_medico_laudo_w, c.cd_procedimento, c.ie_origem_proced, c.dt_procedimento, a.cd_cbo, 0) = 'S'
					and     a.cd_pessoa_fisica	= cd_medico_laudo_w
					and     a.cd_cbo		= b.cd_cbo
					and	c.ie_origem_proced	= 7
					and	c.nr_sequencia		= nr_seq_propaci_w;

					if (alterar_medico_exec_conta_w = 'C') and (funcao_ativa_w = 945) then
                        update	procedimento_paciente
                        set	cd_medico_executor = cd_medico_laudo_w,
                          cd_cbo = cd_cbo_w
                        where nr_prescricao = nr_prescricao_w and nr_sequencia_prescricao = nr_seq_prescricao_w;
                    else
                        update	procedimento_paciente
                        set	cd_medico_executor = cd_medico_laudo_w,
                          cd_cbo = cd_cbo_w
                        where	((nr_sequencia = nr_seq_propaci_w) or ((nr_seq_regra_lanc > 0) and (coalesce(nr_seq_proc_princ,0) > 0) and (nr_seq_proc_princ = nr_seq_propaci_w)));
                    end if;
				end if;

			else

                IF (funcao_ativa_w = -6930) THEN /* Editor de Laudos(JAVA)*/
                    alterar_medico_conta_w := obter_param_usuario(-6930, 10, obter_perfil_ativo, nm_usuario_p, obter_estabelecimento_ativo, alterar_medico_conta_w);
                ELSIF (funcao_ativa_w = 99010) then /* Central de Laudos(HTML)*/
                    alterar_medico_conta_w := obter_param_usuario(99010, 55, obter_perfil_ativo, nm_usuario_p, obter_estabelecimento_ativo, alterar_medico_conta_w);
                END IF;

				select	max(a.cd_cbo)
				into STRICT	cd_cbo_w
				from    sus_cbo                 b,
					sus_cbo_pessoa_fisica   a,
					procedimento_paciente	c
				where   sus_obter_secbo_compativel(cd_medico_laudo_w, c.cd_procedimento, c.ie_origem_proced, c.dt_procedimento, a.cd_cbo, 0) = 'S'
				and     a.cd_pessoa_fisica	= cd_medico_laudo_w
				and     a.cd_cbo		= b.cd_cbo
				and	c.ie_origem_proced	= 7
				and	c.nr_sequencia		= nr_seq_propaci_w;

                if (alterar_medico_exec_conta_w = 'C') and (funcao_ativa_w = 945) then
                  update	procedimento_paciente
                  set	cd_medico_executor	= cd_medico_laudo_w,
                    cd_cbo			= cd_cbo_w
                  where nr_prescricao = nr_prescricao_w and nr_sequencia_prescricao = nr_seq_prescricao_w;
                elsif (alterar_medico_conta_w = '2S') then

                    SELECT substr(obter_pessoa_fisica_usuario(nm_usuario_seg_aprov,'C'),1,10)
                    INTO STRICT cd_medico_seg_aprov
                    FROM laudo_paciente
                    WHERE nr_sequencia	= nr_sequencia_p;

                    IF (cd_medico_seg_aprov IS NOT NULL AND cd_medico_seg_aprov::text <> '') THEN

                        UPDATE	procedimento_paciente
                        SET	cd_medico_executor	= cd_medico_seg_aprov,
                            cd_cbo			    = cd_cbo_w
                        WHERE ((nr_sequencia = nr_seq_propaci_w) or ((nr_seq_regra_lanc > 0) and (coalesce(nr_seq_proc_princ,0) > 0) and (nr_seq_proc_princ = nr_seq_propaci_w)));
                    END IF;
                else
                  update	procedimento_paciente
                  set	cd_medico_executor	= cd_medico_laudo_w,
                    cd_cbo			= cd_cbo_w
                  where ((nr_sequencia = nr_seq_propaci_w) or ((nr_seq_regra_lanc > 0) and (coalesce(nr_seq_proc_princ,0) > 0) and (nr_seq_proc_princ = nr_seq_propaci_w)));
                end if;
			end if;

			end;

		elsif (coalesce(ie_opcao_p,'EX') = 'EXC') then

			if (funcao_ativa_w = -6930) then /* Editor de Laudos(JAVA)*/
				ie_atual_medico_w	:= coalesce(obter_valor_param_usuario(funcao_ativa_w, 11, obter_perfil_ativo, obter_usuario_ativo, obter_estabelecimento_ativo),'S');
            elsif (funcao_ativa_w = 99010) then /* Central de Laudos(HTML)*/
                ie_atual_medico_w	:= coalesce(obter_valor_param_usuario(funcao_ativa_w, 56, obter_perfil_ativo, obter_usuario_ativo, obter_estabelecimento_ativo),'S');
            else /* Laudo Paciente*/
				ie_atual_medico_w	:= coalesce(obter_valor_param_usuario(funcao_ativa_w, 112, obter_perfil_ativo, obter_usuario_ativo, obter_estabelecimento_ativo),'S');
			end if;

			if (ie_atual_medico_w = 'M') then
				update	procedimento_paciente
				set	cd_medico_exec_conta = cd_medico_laudo_w
				where	((nr_sequencia = nr_seq_propaci_w) or ((nr_seq_regra_lanc > 0) and (coalesce(nr_seq_proc_princ,0) > 0) and (nr_seq_proc_princ = nr_seq_propaci_w)));
			elsif (ie_atual_medico_w = '2S') then
				update	procedimento_paciente
				set	cd_medico_exec_conta = substr(obter_pessoa_fisica_usuario(nm_usuario_seg_aprov_w,'C'),1,10)
				where	((nr_sequencia = nr_seq_propaci_w) or ((nr_seq_regra_lanc > 0) and (coalesce(nr_seq_proc_princ,0) > 0) and (nr_seq_proc_princ = nr_seq_propaci_w)))
				and	obter_se_medico(obter_pessoa_fisica_usuario(nm_usuario_seg_aprov_w,'C'),'M')  =  'S';
			else
				update	procedimento_paciente
				set	cd_medico_exec_conta = substr(obter_pessoa_fisica_usuario(nm_usuario_aprovacao_w,'C'),1,10)
				where	((nr_sequencia = nr_seq_propaci_w) or ((nr_seq_regra_lanc > 0) and (coalesce(nr_seq_proc_princ,0) > 0) and (nr_seq_proc_princ = nr_seq_propaci_w)))
				and	obter_se_medico(obter_pessoa_fisica_usuario(nm_usuario_aprovacao_w,'C'),'M')  =  'S';
			end if;

		elsif (coalesce(ie_opcao_p,'EX') = 'AN') then

			select max(obter_especialidade_medico(cd_anestesista_w,'C'))
			into STRICT	cd_especialidade_w
			;

			select	count(*) + 1
			into STRICT	nr_seq_partic_w
			from	procedimento_participante
			where	nr_sequencia	= nr_seq_propaci_w;

			select	max(cd_funcao)
			into STRICT	ie_funcao_w
			from	funcao_medico
			where	ie_anestesista = 'S';

			select	count(*)
			into STRICT	cont_w
			from	procedimento_participante
			where	cd_pessoa_fisica	= cd_anestesista_w
			and	nr_sequencia		= nr_seq_propaci_w;

      select coalesce(ie_consiste_anestesia,'N')
        into STRICT ie_consite_anestesia_w
      from parametro_cdi;

      ie_necessita_anest_w := 'S';

      if (ie_consite_anestesia_w = 'S') then
        select coalesce(c.ie_necessita_anest,'N')
          into STRICT ie_necessita_anest_w
         from laudo_paciente a
         join prescr_procedimento b
           on a.nr_prescricao = b.nr_prescricao and a.nr_seq_prescricao = b.nr_sequencia
         join proc_interno c
          on b.nr_seq_proc_interno = c.nr_sequencia
        where a.nr_sequencia = nr_sequencia_p;
      end if;

			if (ie_funcao_w IS NOT NULL AND ie_funcao_w::text <> '') and (cont_w = 0) and (ie_necessita_anest_w = 'S') then

				insert into procedimento_participante(nr_sequencia, nr_seq_partic, dt_atualizacao, ie_funcao,
					nm_usuario, cd_pessoa_fisica, cd_cgc, ie_valor_informado,
					vl_participante, vl_conta, nr_lote_contabil,
					nr_conta_medico, cd_especialidade)
				values (nr_seq_propaci_w, nr_seq_partic_w, clock_timestamp(), ie_funcao_w,
					nm_usuario_p, cd_anestesista_w, null, 'N',
					0, 0, 0, 0, cd_especialidade_w);

			end if;

		end if;

	end if;

	open c01;
	loop
	fetch c01 into
		nr_seq_propaci_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin

		if (coalesce(ie_opcao_p,'EX') = 'EX') then
			begin

			ie_atual_medico_w	:= coalesce(obter_valor_param_usuario(28, 101, obter_perfil_ativo, obter_usuario_ativo, obter_estabelecimento_ativo),'S');

			if (ie_atual_medico_w = 'R') then

				select	max(cd_convenio),
					max(cd_procedimento),
					max(ie_origem_proced)
				into STRICT	cd_convenio_w,
					cd_procedimento_w,
					ie_origem_proced_w
				from	procedimento_paciente
				where	nr_sequencia = nr_seq_propaci_w;

				ie_medico_exec_laudo_w	:= obter_se_medico_exec_laudo(cd_convenio_w, cd_procedimento_w, ie_origem_proced_w, nm_usuario_p);

				if (coalesce(ie_medico_exec_laudo_w,'N') = 'S') then

					select	max(a.cd_cbo)
					into STRICT	cd_cbo_w
					from    sus_cbo                 b,
						sus_cbo_pessoa_fisica   a,
						procedimento_paciente	c
					where   sus_obter_secbo_compativel(cd_medico_laudo_w, c.cd_procedimento, c.ie_origem_proced, c.dt_procedimento, a.cd_cbo, 0) = 'S'
					and     a.cd_pessoa_fisica	= cd_medico_laudo_w
					and     a.cd_cbo		= b.cd_cbo
					and	c.ie_origem_proced	= 7
					and	c.nr_sequencia		= nr_seq_propaci_w;

                    if (alterar_medico_exec_conta_w = 'C') and (funcao_ativa_w = 945) then
                        update	procedimento_paciente
                        set	cd_medico_executor = cd_medico_laudo_w,
                        cd_cbo = cd_cbo_w
                        where nr_prescricao = nr_prescricao_w and nr_sequencia_prescricao = nr_seq_prescricao_w;
                    else
                        update	procedimento_paciente
                        set	cd_medico_executor = cd_medico_laudo_w,
                        cd_cbo = cd_cbo_w
                        where	((nr_sequencia = nr_seq_propaci_w) or ((nr_seq_regra_lanc > 0) and (coalesce(nr_seq_proc_princ,0) > 0) and (nr_seq_proc_princ = nr_seq_propaci_w)));
                    end if;
				end if;

			else

                IF (funcao_ativa_w = -6930) THEN /* Editor de Laudos(JAVA)*/
                    alterar_medico_conta_w := obter_param_usuario(-6930, 10, obter_perfil_ativo, nm_usuario_p, obter_estabelecimento_ativo, alterar_medico_conta_w);
                ELSIF (funcao_ativa_w = 99010) then /* Central de Laudos(HTML)*/
                    alterar_medico_conta_w := obter_param_usuario(99010, 55, obter_perfil_ativo, nm_usuario_p, obter_estabelecimento_ativo, alterar_medico_conta_w);
                END IF;

				select	max(a.cd_cbo)
				into STRICT	cd_cbo_w
				from    sus_cbo                 b,
					sus_cbo_pessoa_fisica   a,
					procedimento_paciente	c
				where   sus_obter_secbo_compativel(cd_medico_laudo_w, c.cd_procedimento, c.ie_origem_proced, c.dt_procedimento, a.cd_cbo, 0) = 'S'
				and     a.cd_pessoa_fisica	= cd_medico_laudo_w
				and     a.cd_cbo		= b.cd_cbo
				and	c.ie_origem_proced	= 7
				and	c.nr_sequencia		= nr_seq_propaci_w;

				if (alterar_medico_exec_conta_w = 'C') and (funcao_ativa_w = 945) then
                  update	procedimento_paciente
                  set	cd_medico_executor	= cd_medico_laudo_w,
                    cd_cbo			= cd_cbo_w
                  where nr_prescricao = nr_prescricao_w and nr_sequencia_prescricao = nr_seq_prescricao_w;
                ELSIF (alterar_medico_conta_w = '2S') then

                    SELECT substr(obter_pessoa_fisica_usuario(nm_usuario_seg_aprov,'C'),1,10)
                    INTO STRICT cd_medico_seg_aprov
                    FROM laudo_paciente
                    WHERE nr_sequencia	= nr_sequencia_p;

                    IF (cd_medico_seg_aprov IS NOT NULL AND cd_medico_seg_aprov::text <> '') THEN

                        UPDATE	procedimento_paciente
                        SET	cd_medico_executor	= cd_medico_seg_aprov,
                            cd_cbo			    = cd_cbo_w
                        WHERE ((nr_sequencia = nr_seq_propaci_w) or ((nr_seq_regra_lanc > 0) and (coalesce(nr_seq_proc_princ,0) > 0) and (nr_seq_proc_princ = nr_seq_propaci_w)));
                    END IF;
                else
                  update	procedimento_paciente
                  set	cd_medico_executor	= cd_medico_laudo_w,
                    cd_cbo			= cd_cbo_w
                  where ((nr_sequencia = nr_seq_propaci_w) or ((nr_seq_regra_lanc > 0) and (coalesce(nr_seq_proc_princ,0) > 0) and (nr_seq_proc_princ = nr_seq_propaci_w)));
                end if;
			end if;

			end;

		elsif (coalesce(ie_opcao_p,'EX') = 'EXC') then

            if (funcao_ativa_w = -6930) then /* Editor de Laudos(JAVA)*/
				ie_atual_medico_w	:= coalesce(obter_valor_param_usuario(funcao_ativa_w, 11, obter_perfil_ativo, obter_usuario_ativo, obter_estabelecimento_ativo),'S');
            elsif (funcao_ativa_w = 99010) then /* Central de Laudos(HTML)*/
                ie_atual_medico_w	:= coalesce(obter_valor_param_usuario(funcao_ativa_w, 56, obter_perfil_ativo, obter_usuario_ativo, obter_estabelecimento_ativo),'S');
            else /* Laudo Paciente*/
				ie_atual_medico_w	:= coalesce(obter_valor_param_usuario(funcao_ativa_w, 112, obter_perfil_ativo, obter_usuario_ativo, obter_estabelecimento_ativo),'S');
			end if;

            if (ie_atual_medico_w = 'M') then
				update	procedimento_paciente
				set	cd_medico_exec_conta = cd_medico_laudo_w
				where	((nr_sequencia = nr_seq_propaci_w) or ((nr_seq_regra_lanc > 0) and (coalesce(nr_seq_proc_princ,0) > 0) and (nr_seq_proc_princ = nr_seq_propaci_w)));
			elsif (ie_atual_medico_w = '2S') then
				update	procedimento_paciente
				set	cd_medico_exec_conta = substr(obter_pessoa_fisica_usuario(nm_usuario_seg_aprov_w,'C'),1,10)
				where	((nr_sequencia = nr_seq_propaci_w) or ((nr_seq_regra_lanc > 0) and (coalesce(nr_seq_proc_princ,0) > 0) and (nr_seq_proc_princ = nr_seq_propaci_w)))
				and	obter_se_medico(obter_pessoa_fisica_usuario(nm_usuario_seg_aprov_w,'C'),'M')  =  'S';
			else
				update	procedimento_paciente
				set	cd_medico_exec_conta = substr(obter_pessoa_fisica_usuario(nm_usuario_aprovacao_w,'C'),1,10)
				where	((nr_sequencia = nr_seq_propaci_w) or ((nr_seq_regra_lanc > 0) and (coalesce(nr_seq_proc_princ,0) > 0) and (nr_seq_proc_princ = nr_seq_propaci_w)))
				and	obter_se_medico(obter_pessoa_fisica_usuario(nm_usuario_aprovacao_w,'C'),'M')  =  'S';
			end if;

		elsif (coalesce(ie_opcao_p,'EX') = 'AN') then

			select 	max(obter_especialidade_medico(cd_anestesista_w,'C'))
			into STRICT	cd_especialidade_w
			;

			select	count(*) + 1
			into STRICT	nr_seq_partic_w
			from	procedimento_participante
			where	nr_sequencia	= nr_seq_propaci_w;

			select	max(cd_funcao)
			into STRICT	ie_funcao_w
			from	funcao_medico
			where	ie_anestesista = 'S';

			select	count(*)
			into STRICT	cont_w
			from	procedimento_participante
			where	cd_pessoa_fisica	= cd_anestesista_w
			and	nr_sequencia	= nr_seq_propaci_w;

      select coalesce(ie_consiste_anestesia,'N')
        into STRICT ie_consite_anestesia_w
      from parametro_cdi;

      ie_necessita_anest_w := 'S';

      if (ie_consite_anestesia_w = 'S') then
        select coalesce(c.ie_necessita_anest,'N')
          into STRICT ie_necessita_anest_w
         from laudo_paciente a
         join prescr_procedimento b
           on a.nr_prescricao = b.nr_prescricao and a.nr_seq_prescricao = b.nr_sequencia
         join proc_interno c
          on b.nr_seq_proc_interno = c.nr_sequencia
        where a.nr_sequencia = nr_sequencia_p;
      end if;

			if (ie_funcao_w IS NOT NULL AND ie_funcao_w::text <> '') and (cd_anestesista_w IS NOT NULL AND cd_anestesista_w::text <> '') and (cont_w = 0) and (ie_necessita_anest_w = 'S') then

				insert into procedimento_participante(nr_sequencia, nr_seq_partic, dt_atualizacao, ie_funcao,
					nm_usuario, cd_pessoa_fisica, cd_cgc, ie_valor_informado,
					vl_participante, vl_conta, nr_lote_contabil,
					nr_conta_medico, cd_especialidade)
				values (nr_seq_propaci_w, nr_seq_partic_w, clock_timestamp(), ie_funcao_w,
					nm_usuario_p, cd_anestesista_w, null, 'N',
					0, 0, 0, 0, cd_especialidade_w);

			end if;

		end if;

		end;

	end loop;
	close c01;

end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualizar_propaci_medico_laudo ( nr_sequencia_p bigint, ie_opcao_p text, nm_usuario_p text) FROM PUBLIC;

