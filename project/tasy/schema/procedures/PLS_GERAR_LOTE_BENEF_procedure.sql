-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_lote_benef ( nr_seq_lote_p bigint, ie_lote_p text, cd_estabelecimento_p bigint, nm_usuario_p text) is cd_pessoa_fisica_w varchar(10) RETURNS bigint AS $body$
DECLARE


nr_seq_pagador_titular_w	bigint;
cd_cgc_pagador_titular_w	pls_contrato_pagador.cd_cgc%type;
cd_pf_pagador_titular_w		pls_contrato_pagador.cd_pessoa_fisica%type;


BEGIN

nr_seq_pagador_titular_w	:= null;

if (nr_seq_titular_contrato_w IS NOT NULL AND nr_seq_titular_contrato_w::text <> '') then
	select	max(b.cd_cgc),
		max(b.cd_pessoa_fisica)
	into STRICT	cd_cgc_pagador_titular_w,
		cd_pf_pagador_titular_w
	from	pls_segurado		a,
		pls_contrato_pagador	b
	where	a.nr_seq_pagador	= b.nr_sequencia
	and	a.nr_sequencia		= nr_seq_titular_contrato_p;

	select	max(nr_sequencia)
	into STRICT	nr_seq_pagador_titular_w
	from	pls_proposta_pagador
	where	((cd_pagador = cd_pf_pagador_titular_w) or (coalesce(cd_pf_pagador_titular_w::text, '') = ''))
	and	((cd_cgc_pagador = cd_cgc_pagador_titular_w) or (coalesce(cd_cgc_pagador_titular_w::text, '') = ''))
	and	nr_seq_proposta = nr_seq_proposta_p;
elsif (nr_seq_titular_prop_w IS NOT NULL AND nr_seq_titular_prop_w::text <> '') then
	select	max(nr_seq_pagador)
	into STRICT	nr_seq_pagador_titular_w
	from	pls_proposta_beneficiario
	where	nr_sequencia	= nr_seq_titular_prop_p;
end if;

return	nr_seq_pagador_titular_w;

end;

begin

select	count(1)
into STRICT	qt_pessoa_fisica_w
from	pls_inclusao_beneficiario
where	nr_seq_lote_inclusao	= nr_seq_lote_p
and (ie_lote_p = 'S' or ie_selecionado = 'S')
and	ie_status not in ('R','RO','A','B','C','I')
and	coalesce(cd_pessoa_fisica::text, '') = ''
and	coalesce(ie_tipo_operacao,'I') = 'I';

if (qt_pessoa_fisica_w <> 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(187942,'NR_SEQ_LOTE='||nr_seq_lote_p);
end if;

select	count(*)
into STRICT	qt_status_w
from	pls_lote_inclusao_benef    a,
	pls_inclusao_beneficiario  b
where	a.nr_sequencia = b.nr_seq_lote_inclusao
and	a.nr_sequencia = nr_seq_lote_p
and (ie_lote_p = 'S' or b.ie_selecionado = 'S')
and	coalesce(b.ie_tipo_operacao,'I')	= 'I'
and	((coalesce(a.nr_seq_intercambio::text, '') = '' and b.ie_status not in ('P','R','RO')) or ((a.nr_seq_intercambio IS NOT NULL AND a.nr_seq_intercambio::text <> '') and b.ie_status_intercambio not in ('P','R','RO')));

if (qt_status_w <> 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(1028216);
end if;

select	nr_seq_contrato,
	dt_contratacao,
	nr_seq_proposta,
	ie_situacao,
	ie_tipo_solicitacao,
	nr_seq_intercambio,
	dt_importacao_arquivo
into STRICT	nr_seq_contrato_w,
	dt_contratacao_w,
	nr_seq_proposta_w,
	ie_situacao_w,
	ie_tipo_solicitacao_w,
	nr_seq_intercambio_w,
	dt_importacao_arquivo_w
from	pls_lote_inclusao_benef
where	nr_sequencia	= nr_seq_lote_p;

nr_seq_proposta_lote_w	:= nr_seq_proposta_w;

if (dt_importacao_arquivo_w IS NOT NULL AND dt_importacao_arquivo_w::text <> '') then
	dt_inclusao_operadora_w	:= trunc(add_months(dt_importacao_arquivo_w,1),'month');
else
	dt_inclusao_operadora_w	:= coalesce(dt_contratacao_w,clock_timestamp());
end if;

dt_contratacao_lote_inclusao_w	:= dt_contratacao_w;

--Se a proposta nao esta liberada nao e permitido continuar
if (ie_situacao_w <> 'L') then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(187943,'NR_SEQ_LOTE='||nr_seq_lote_p);
end if;

if (coalesce(nr_seq_intercambio_w,0) = 0) then
	if (ie_tipo_solicitacao_w = 'C') then
		select	nr_contrato
		into STRICT	nr_contrato_w
		from	pls_contrato
		where	nr_sequencia	= nr_seq_contrato_w;
	end if;

	/* Obter o valor do parametro 42*/

	ie_liberar_proposta_w	:= coalesce(obter_valor_param_usuario(1232, 42, Obter_Perfil_Ativo, nm_usuario_p, cd_estabelecimento_p), 'N');

	/* Leitura do parametro 23 da OPS - Proposta de adesao eletronica */

	ie_aprovar_proposta_w	:= coalesce(obter_valor_param_usuario(1232, 23, Obter_Perfil_Ativo, nm_usuario_p, cd_estabelecimento_p),'N');

	/* Leitura do parametro 56 da OPS - Proposta de adesao eletronica */

	ie_gerar_contratacao_w	:= coalesce(obter_valor_param_usuario(1232, 56, Obter_Perfil_Ativo, nm_usuario_p, cd_estabelecimento_p),'N');

	/* Leitura do parametro 4 da OPS - Proposta de adesao eletronica */

	ie_consistir_sib_w	:= coalesce(obter_valor_param_usuario(1232, 4, Obter_Perfil_Ativo, nm_usuario_p, cd_estabelecimento_p), 'N');

	/* Leitura do parametro 85 da OPS - Proposta de adesao eletronica */

	ie_consistir_proposta_w	:= coalesce(obter_valor_param_usuario(1232, 85, Obter_Perfil_Ativo, nm_usuario_p, cd_estabelecimento_p), 'S');

	if (nr_seq_contrato_w IS NOT NULL AND nr_seq_contrato_w::text <> '') then
		if (ie_consistir_sib_w	= 'S') then
			ie_consistir_sib_w	:= 'N';
		elsif (ie_consistir_sib_w	= 'N') then
			ie_consistir_sib_w	:= 'S';
		end if;

		/* Obter dados da solicitacao */

		if (cd_pessoa_fisica_w	= 'X') then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(187944);
		end if;

		/* Obter dados do contrato */

		select	ie_tipo_beneficiario,
			cd_cgc_estipulante,
			cd_pf_estipulante
		into STRICT	ie_tipo_beneficiario_w,
			cd_cgc_estipulante_w,
			cd_pf_estipulante_w
		from	pls_contrato
		where	nr_sequencia	= nr_seq_contrato_w;

		/* Obter o tipo de contratacao da proposta */

		select	coalesce(max(b.ie_tipo_contratacao),'')
		into STRICT	ie_tipo_contratacao_w
		from	pls_plano		b,
			pls_contrato_plano	a
		where	a.nr_seq_contrato	= nr_seq_contrato_w
		and	a.nr_seq_plano		= b.nr_sequencia;

		/*Buscar o vendedor dos beneficiarios da inclusao*/

		begin
		select	max(nr_seq_vendedor_canal),
			max(nr_seq_vendedor_pf)
		into STRICT	nr_seq_vendedor_canal_w,
			nr_seq_vendedor_pf_w
		from	pls_inclusao_beneficiario
		where	nr_seq_lote_inclusao	= nr_seq_lote_p
		and	ie_status not in ('R','RO');
		exception
		when others then
			nr_seq_vendedor_canal_w	:= null;
			nr_seq_vendedor_pf_w	:= null;
		end;

		/*Caso nao existir buscar da regra de lancamento automatico do contrato*/

		if (coalesce(nr_seq_vendedor_canal_w::text, '') = '') then
			if (coalesce(pls_obter_dados_contrato(nr_seq_contrato_w, 'AR'),'A') in ('A','P')) then
				nr_seq_vendedor_canal_w	:= pls_obter_regra_lancamento(nr_seq_contrato_w, dt_contratacao_w, 'CV');
				nr_seq_vendedor_pf_w	:= pls_obter_regra_lancamento(nr_seq_contrato_w, dt_contratacao_w, 'V');
			end if;
		end if;

		if (dt_importacao_arquivo_w IS NOT NULL AND dt_importacao_arquivo_w::text <> '') then
			select	max(vl_parametro)
			into STRICT	nr_seq_vendedor_canal_w
			from	funcao_parametro
			where	nr_sequencia	= 6
			and	cd_funcao	= 1248;

			select	max(cd_cgc)
			into STRICT	cd_cgc_vendedor_w
			from	pls_vendedor
			where	nr_sequencia	= nr_seq_vendedor_canal_w;

			if (cd_cgc_vendedor_w IS NOT NULL AND cd_cgc_vendedor_w::text <> '') then
				select	max(nr_sequencia)
				into STRICT	nr_seq_vendedor_pf_w
				from	pls_vendedor_vinculado
				where	nr_seq_vendedor		= nr_seq_vendedor_canal_w
				and	ie_vendedor_padrao	= 'S'
				and	ie_situacao		= 'A';
			end if;
		end if;

		select	nextval('pls_proposta_adesao_seq')
		into STRICT	nr_seq_proposta_w
		;

		insert	into	pls_proposta_adesao(	nr_sequencia, ie_tipo_contratacao, cd_estabelecimento,
				ie_tipo_beneficiario, dt_atualizacao, nm_usuario,
				dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_contrato,
				cd_cgc_estipulante, cd_estipulante, dt_inicio_proposta,
				ie_tipo_processo, ie_status, nr_seq_vendedor_canal,
				nr_seq_vendedor_pf, vl_proposta, ie_tipo_proposta)
			values (
				nr_seq_proposta_w, ie_tipo_contratacao_w, cd_estabelecimento_p,
				ie_tipo_beneficiario_w, clock_timestamp(), nm_usuario_p,
				clock_timestamp(), nm_usuario_p, nr_contrato_w,
				cd_cgc_estipulante_w, cd_pf_estipulante_w, dt_inclusao_operadora_w,
				'W', 'U', nr_seq_vendedor_canal_w,
				nr_seq_vendedor_pf_w, 0, 2);
		/* Carregar dados do contrato */

		CALL pls_proposta_dados_contrato(nr_seq_proposta_w, nr_seq_contrato_w,'N', nm_usuario_p);
	end if;

	/* Obter o pagador da proposta */

	select	max(nr_sequencia) /* Buscar um pagador principal */
	into STRICT	nr_seq_pagador_proposta_w
	from	pls_proposta_pagador
	where	nr_seq_proposta	= nr_seq_proposta_w
	and	ie_tipo_pagador	= 'P';

	if (coalesce(nr_seq_pagador_proposta_w::text, '') = '') then
		select	max(nr_sequencia)
		into STRICT	nr_seq_pagador_proposta_w
		from	pls_proposta_pagador
		where	nr_seq_proposta	= nr_seq_proposta_w;
	end if;

	ie_tipo_proposta_w	:= null;

	open c01;
	loop
	fetch c01 into
		cd_pessoa_fisica_w,
		cd_estabelecimento_w,
		nr_seq_vendedor_canal_w,
		nr_seq_vendedor_pf_w,
		dt_admissao_w,
		nr_seq_vinculo_estip_w,
		cd_matricula_est_w,
		cd_cbo_w,
		nr_seq_plano_w,
		nr_seq_parentesco_w,
		nr_seq_titular_contrato_w,
		nr_seq_subestipulante_w,
		nr_seq_benef_w,
		nr_seq_titular_prop_w,
		nm_titular_inclusao_w,
		nr_seq_titular_solic_w,
		dt_solicitacao_w,
		cd_usuario_plano_w,
		cd_matricula_familia_w,
		dt_contratacao_w,
		nr_seq_pagador_inclusao_w,
		nr_seq_faixa_salarial_w,
		nr_seq_tabela_w,
		nr_seq_motivo_inclusao_w,
		nr_seq_segurado_inc_w,
		nr_seq_portabilidade_w,
		dt_inclusao_operadora_ww,
		nr_seq_localizacao_benef_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		nr_seq_titular_w	:= null;
		nr_seq_pagador_w	:= null;

		if (coalesce(ie_tipo_proposta_w,0) <> 8) then
			if (coalesce(nr_seq_segurado_inc_w::text, '') = '' and coalesce(ie_tipo_proposta_w,2) = 2) then
				ie_tipo_proposta_w	:= 2;
			elsif ((nr_seq_segurado_inc_w IS NOT NULL AND nr_seq_segurado_inc_w::text <> '') and coalesce(ie_tipo_proposta_w,4) = 4) then
				ie_tipo_proposta_w	:= 4;
			else
				ie_tipo_proposta_w	:= 8;
			end if;
		end if;

		if (coalesce(nr_seq_pagador_inclusao_w::text, '') = '') then
			nr_seq_pagador_w	:= nr_seq_pagador_proposta_w;

			if (nr_seq_subestipulante_w IS NOT NULL AND nr_seq_subestipulante_w::text <> '') then
				nr_seq_pagador_ww	:= null;

				select	max(cd_cgc),
					max(cd_pessoa_fisica)
				into STRICT	cd_cgc_w,
					cd_pf_w
				from	pls_sub_estipulante
				where	nr_sequencia = nr_seq_subestipulante_w;

				if (cd_pf_w IS NOT NULL AND cd_pf_w::text <> '') then
					select	max(nr_sequencia)
					into STRICT	nr_seq_pagador_ww
					from	pls_proposta_pagador
					where	nr_seq_proposta	= nr_seq_proposta_w
					and	cd_pagador	= cd_pf_w;
				elsif (cd_cgc_w IS NOT NULL AND cd_cgc_w::text <> '') then
					select	max(nr_sequencia)
					into STRICT	nr_seq_pagador_ww
					from	pls_proposta_pagador
					where	nr_seq_proposta	= nr_seq_proposta_w
					and	cd_cgc_pagador = cd_cgc_w;
				end if;

				if (nr_seq_pagador_ww IS NOT NULL AND nr_seq_pagador_ww::text <> '') then
					nr_seq_pagador_w := nr_seq_pagador_ww;
				end if;
			end if;
		else
			select	cd_pessoa_fisica,
				cd_cgc
			into STRICT	cd_pf_pag_contrato_w,
				cd_cgc_pagador_contr_w
			from	pls_contrato_pagador
			where	nr_sequencia	= nr_seq_pagador_inclusao_w;

			select	max(nr_sequencia)
			into STRICT	nr_seq_pagador_w
			from	pls_proposta_pagador
			where	nr_seq_proposta		= nr_seq_proposta_w
			and	((cd_pagador		= cd_pf_pag_contrato_w and (cd_pf_pag_contrato_w IS NOT NULL AND cd_pf_pag_contrato_w::text <> '')) or (cd_cgc_pagador		= cd_cgc_pagador_contr_w and (cd_cgc_pagador_contr_w IS NOT NULL AND cd_cgc_pagador_contr_w::text <> '')));
		end if;

		if (dt_importacao_arquivo_w IS NOT NULL AND dt_importacao_arquivo_w::text <> '') then
			dt_solicitacao_w	:= trunc(add_months(dt_solicitacao_w,1),'month');
			dt_contratacao_w	:= trunc(add_months(dt_importacao_arquivo_w,1),'month');
		end if;

		if (coalesce(nr_seq_titular_prop_w::text, '') = '') then
			nr_seq_titular_prop_w	:= null;

			if (nm_titular_inclusao_w IS NOT NULL AND nm_titular_inclusao_w::text <> '') then
				select	max(nr_seq_proposta_benef)
				into STRICT	nr_seq_titular_prop_w
				from	pls_inclusao_beneficiario
				where	upper(nm_pessoa_fisica)	= upper(nm_titular_inclusao_w)
				and	nr_seq_proposta	= nr_seq_proposta_w;
			end if;
		end if;

		if (coalesce(nr_seq_titular_solic_w,0) <> 0) and (coalesce(nr_seq_titular_prop_w::text, '') = '') then
			select	max(nr_sequencia)
			into STRICT	nr_seq_titular_prop_w
			from	pls_proposta_beneficiario
			where	nr_seq_inclusao_benef	= nr_seq_titular_solic_w;
		end if;

		/* Obter o produto da proposta */

		if (coalesce(nr_seq_plano_w::text, '') = '') then
			select	max(nr_seq_plano),
				max(nr_seq_tabela)
			into STRICT	nr_seq_plano_w,
				nr_seq_tabela_w
			from	pls_proposta_plano
			where	nr_sequencia = (SELECT	max(nr_sequencia)
						from	pls_proposta_plano
						where	nr_seq_proposta	= nr_seq_proposta_w);
		elsif (coalesce(nr_seq_tabela_w::text, '') = '') then
			if (nr_seq_contrato_w IS NOT NULL AND nr_seq_contrato_w::text <> '') and (nr_seq_plano_w IS NOT NULL AND nr_seq_plano_w::text <> '') then
				select	max(nr_seq_tabela)
				into STRICT	nr_seq_tabela_w
				from	pls_contrato_plano
				where	nr_seq_contrato = nr_seq_contrato_w
				and	nr_seq_plano = nr_seq_plano_w
				and	ie_inclusao_portal = 'S'
				and	((dt_inativacao >= dt_inclusao_operadora_w) or (coalesce(dt_inativacao::text, '') = ''));

				if (coalesce(nr_seq_tabela_w::text, '') = '') then
					select	max(nr_seq_tabela)
					into STRICT	nr_seq_tabela_w
					from	pls_contrato_plano
					where	nr_seq_contrato = nr_seq_contrato_w
					and	nr_seq_plano = nr_seq_plano_w
					and	((dt_inativacao >= dt_inclusao_operadora_w) or (coalesce(dt_inativacao::text, '') = ''));

					if (coalesce(nr_seq_tabela_w::text, '') = '') then
						select	max(nr_seq_tabela)
						into STRICT	nr_seq_tabela_w
						from	pls_contrato_plano
						where	nr_seq_contrato = nr_seq_contrato_w
						and	nr_seq_plano = nr_seq_plano_w;
					end if;
				end if;
			elsif (nr_seq_plano_w IS NOT NULL AND nr_seq_plano_w::text <> '') then
				begin
				select	max(nr_seq_tabela)
				into STRICT	nr_seq_tabela_w
				from	pls_proposta_plano
				where	nr_seq_proposta	= nr_seq_proposta_w
				and	nr_seq_plano 	= nr_seq_plano_w;
				exception
				when others then
					nr_seq_tabela_w	:= null;
				end;
			end if;
		end if;

		if (dt_importacao_arquivo_w IS NOT NULL AND dt_importacao_arquivo_w::text <> '') then
			select	ie_tipo_contratacao,
				ie_regulamentacao
			into STRICT	ie_tipo_contratacao_plano_w,
				ie_regulamentacao_w
			from	pls_plano
			where	nr_sequencia	= nr_seq_plano_w;

			open C04;
			loop
			fetch C04 into
				ie_acao_regra_pagador_w,
				nr_seq_classif_itens_w,
				ie_mes_vencimento_w,
				dt_dia_vencimento_w;
			EXIT WHEN NOT FOUND; /* apply on C04 */
			end loop;
			close C04;

			/* Gerar pagador para cada titular */

			if (ie_acao_regra_pagador_w = 'GP') then
				if (coalesce(nr_seq_titular_contrato_w::text, '') = '') and (coalesce(nr_seq_titular_prop_w::text, '') = '') then
					select	cd_condicao_pagamento,
						cd_tipo_portador,
						cd_portador,
						nr_seq_conta_banco
					into STRICT	cd_condicao_pagamento_w,
						cd_tipo_portador_w,
						cd_portador_w,
						nr_seq_conta_banco_w
					from	pls_parametros
					where	cd_estabelecimento = cd_estabelecimento_p;

					select	nextval('pls_proposta_pagador_seq')
					into STRICT	nr_seq_pagador_w
					;

					insert	into	pls_proposta_pagador(	nr_sequencia, nr_seq_proposta, dt_dia_vencimento,
							cd_condicao_pagamento, dt_atualizacao, nm_usuario,
							dt_atualizacao_nrec, nm_usuario_nrec, cd_pagador,
							nr_seq_forma_cobranca, cd_tipo_portador, cd_portador,
							nr_seq_conta_banco, dt_inicio_vigencia, ie_mes_vencimento,
							ie_endereco_boleto, nr_seq_classif_itens)
						values (	nr_seq_pagador_w, nr_seq_proposta_w, coalesce(dt_dia_vencimento_w,10),
							cd_condicao_pagamento_w, clock_timestamp(), nm_usuario_p,
							clock_timestamp(), nm_usuario_p, cd_pessoa_fisica_w,
							1, cd_tipo_portador_w, cd_portador_w,
							nr_seq_conta_banco_w, dt_contratacao_w, ie_mes_vencimento_w,
							'PFR', nr_seq_classif_itens_w);
				else --Se for dependente, busca o pagador do titular
					nr_seq_pagador_w	:= obter_pagador_titular(nr_seq_titular_contrato_w, nr_seq_titular_prop_w, nr_seq_proposta_w);
				end if;
			elsif	((nr_seq_titular_contrato_w IS NOT NULL AND nr_seq_titular_contrato_w::text <> '') or (nr_seq_titular_prop_w IS NOT NULL AND nr_seq_titular_prop_w::text <> '')) then
				nr_seq_pagador_ww	:= obter_pagador_titular(nr_seq_titular_contrato_w, nr_seq_titular_prop_w, nr_seq_proposta_w);

				if (nr_seq_pagador_ww IS NOT NULL AND nr_seq_pagador_ww::text <> '') then
					nr_seq_pagador_w	:= nr_seq_pagador_ww;
				end if;
			end if;
		elsif	((nr_seq_titular_contrato_w IS NOT NULL AND nr_seq_titular_contrato_w::text <> '') or (nr_seq_titular_prop_w IS NOT NULL AND nr_seq_titular_prop_w::text <> '')) then
			nr_seq_pagador_ww	:= obter_pagador_titular(nr_seq_titular_contrato_w, nr_seq_titular_prop_w, nr_seq_proposta_w);

			if (nr_seq_pagador_ww IS NOT NULL AND nr_seq_pagador_ww::text <> '') then
				nr_seq_pagador_w	:= nr_seq_pagador_ww;
			end if;
		end if;

		if (nr_seq_parentesco_w IS NOT NULL AND nr_seq_parentesco_w::text <> '') then
			select	ie_tipo_parentesco
			into STRICT	ie_tipo_parentesco_w
			from	grau_parentesco
			where	nr_sequencia = nr_seq_parentesco_w;
		end if;

		select	nextval('pls_proposta_beneficiario_seq')
		into STRICT	nr_seq_proposta_benef_w
		;

		insert	into	pls_proposta_beneficiario(nr_sequencia, nr_seq_proposta, cd_beneficiario,
				dt_atualizacao, nm_usuario, dt_atualizacao_nrec,
				nm_usuario_nrec, nr_seq_pagador, nr_seq_plano,
				nr_seq_titular, nr_seq_parentesco, nr_seq_tabela,
				dt_admissao, nr_seq_vinculo_estip, cd_matricula_est,
				cd_cbo, nr_seq_titular_contrato, nr_seq_subestipulante,
				nr_seq_inclusao_benef, dt_contratacao, cd_matricula_familia,
				ie_copiar_sca_plano, ie_nascido_plano, ie_taxa_inscricao,
				nr_seq_faixa_salarial,nr_seq_motivo_inclusao,ie_tipo_parentesco,
				nr_seq_beneficiario,nr_seq_portabilidade)
			values (	nr_seq_proposta_benef_w, nr_seq_proposta_w, cd_pessoa_fisica_w,
				clock_timestamp(), nm_usuario_p, clock_timestamp(),
				nm_usuario_p, nr_seq_pagador_w, nr_seq_plano_w,
				nr_seq_titular_prop_w, nr_seq_parentesco_w, nr_seq_tabela_w,
				dt_admissao_w, nr_seq_vinculo_estip_w, cd_matricula_est_w,
				cd_cbo_w, nr_seq_titular_contrato_w, nr_seq_subestipulante_w,
				nr_seq_benef_w, dt_contratacao_w, cd_matricula_familia_w,
				'S','N','S',
				nr_seq_faixa_salarial_w,nr_seq_motivo_inclusao_w,ie_tipo_parentesco_w,
				nr_seq_segurado_inc_w,nr_seq_portabilidade_w);

		open c05;
		loop
		fetch c05 into
			nr_seq_plano_sca_w;
		EXIT WHEN NOT FOUND; /* apply on c05 */
			begin
			begin
			select	nr_seq_tabela,
				nr_seq_vendedor_canal,
				nr_seq_vendedor_pf
			into STRICT	nr_seq_tabela_sca_w,
				nr_seq_vendedor_canal_sca_w,
				nr_seq_vendedor_pf_sca_w
			from	pls_sca_regra_contrato	b,
				pls_contrato		a
			where	b.nr_seq_contrato	= a.nr_sequencia
			and	a.nr_contrato		= nr_contrato_w
			and	b.nr_seq_plano		= nr_seq_plano_sca_w
			and	dt_contratacao_lote_inclusao_w between coalesce(dt_inicio_vigencia, dt_contratacao_lote_inclusao_w)  and coalesce(dt_fim_vigencia, dt_contratacao_lote_inclusao_w);
			exception
			when others then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(682698,'NR_SEQ_SCA='||nr_seq_plano_sca_w);
			end;

			insert into pls_sca_vinculo(	nr_sequencia,dt_atualizacao, nm_usuario, dt_atualizacao_nrec,nm_usuario_nrec,
					nr_seq_benef_proposta,nr_seq_plano,nr_seq_tabela,nr_seq_vendedor_canal,nr_seq_vendedor_pf)
			values (	nextval('pls_sca_vinculo_seq'),clock_timestamp(), nm_usuario_p, clock_timestamp(),nm_usuario_p,
					nr_seq_proposta_benef_w,nr_seq_plano_sca_w,nr_seq_tabela_sca_w,nr_seq_vendedor_canal_sca_w,nr_seq_vendedor_pf_sca_w);
			end;
		end loop;
		close c05;

		open c06;
		loop
		fetch c06 into
			dt_anexo_w,
			ds_anexo_w,
			nr_seq_tipo_doc_w;
		EXIT WHEN NOT FOUND; /* apply on c06 */
		begin
			insert into pls_proposta_benef_anexo(nr_sequencia, nr_seq_beneficiario, dt_anexo, ds_anexo,
				 dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,nr_seq_tipo_documento
				)
			values (nextval('pls_proposta_benef_anexo_seq'), nr_seq_proposta_benef_w, dt_anexo_w, ds_anexo_w,
				 clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p,nr_seq_tipo_doc_w
				);
		end;
		end loop;
		close c06;

		/* Mudar etapa para IT - integrado a proposta*/

		update	pls_inclusao_beneficiario
		set	ie_status		= 'A',
			ie_etapa_solicitacao	= 'IT',
			nr_seq_proposta		= nr_seq_proposta_w,
			nr_seq_proposta_benef	= nr_seq_proposta_benef_w
		where	nr_sequencia		= nr_seq_benef_w;
		end;
	end loop;
	close c01;

	qt_inclusao_benef_w	:= 0;

	if (ie_lote_p = 'N') then
		select	count(1)
		into STRICT	qt_inclusao_benef_w
		from	pls_inclusao_beneficiario
		where	nr_seq_lote_inclusao	= nr_seq_lote_p
		and	ie_status not in ('R','RO','A','B','C')
		and	coalesce(nr_seq_proposta::text, '') = ''
		and	coalesce(ie_tipo_operacao,'I')	= 'I';
	end if;

	if (qt_inclusao_benef_w = 0) then
		/*Mudar a situacao da proposta para IP - integrado a proposta*/

		update	pls_lote_inclusao_benef
		set	ie_situacao		= 'IP',
			nr_seq_proposta		= nr_seq_proposta_w
		where	nr_sequencia		= nr_seq_lote_p;
	end if;

	if	((coalesce(nr_seq_proposta_lote_w::text, '') = '') and (nr_seq_proposta_w IS NOT NULL AND nr_seq_proposta_w::text <> '' AND ie_tipo_proposta_w IS NOT NULL AND ie_tipo_proposta_w::text <> '')) then
		update	pls_proposta_adesao
		set	ie_tipo_proposta	= ie_tipo_proposta_w
		where	nr_sequencia		= nr_seq_proposta_w;
	end if;

	/*Consiste a proposta conforme o parametro*/

	if (ie_consistir_proposta_w = 'S') then
		/* Consistir a proposta de adesao */

		ds_erro_w := pls_consistir_proposta(nr_seq_proposta_w, nm_usuario_p, ie_consistir_sib_w, 'N', ds_erro_w);

		if (ds_erro_w IS NOT NULL AND ds_erro_w::text <> '') then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(187945,'DS_ERRO='||ds_erro_w);
		else
			if (ie_gerar_contratacao_w	= 'S') then
				--Se o parametro 28 estiver como "Sim", precisa liberar e aprovar a proposta

				--Caso os parametros ie_liberar_proposta_w e ie_aprovar_proposta_w estejam como "S", a liberacao e aprovacao ja sera feita na rotina pls_consistir_proposta
				if (ie_liberar_proposta_w = 'N') then
					ds_erro_w := pls_liberar_proposta(nr_seq_proposta_w, 1, 'N', nm_usuario_p, ds_erro_w);

					if (ds_erro_w IS NOT NULL AND ds_erro_w::text <> '') then
						CALL wheb_mensagem_pck.exibir_mensagem_abort(187945,'DS_ERRO='||ds_erro_w);
					end if;
				end if;

				if (ie_aprovar_proposta_w	= 'N') then
					CALL pls_aprovar_proposta(nr_seq_proposta_w,'N', nm_usuario_p);
				end if;

				CALL pls_proposta_gerar_contrato(nr_seq_proposta_w, nm_usuario_p, cd_estabelecimento_w);
			end if;
		end if;
	end if;
else	/* Inclusao de Intecambio */
	open C01;
	loop
	fetch C01 into
		cd_pessoa_fisica_w,
		cd_estabelecimento_w,
		nr_seq_vendedor_canal_w,
		nr_seq_vendedor_pf_w,
		dt_admissao_w,
		nr_seq_vinculo_estip_w,
		cd_matricula_est_w,
		cd_cbo_w,
		nr_seq_plano_w,
		nr_seq_parentesco_w,
		nr_seq_titular_contrato_w,
		nr_seq_subestipulante_w,
		nr_seq_benef_w,
		nr_seq_titular_prop_w,
		nm_titular_inclusao_w,
		nr_seq_titular_solic_w,
		dt_solicitacao_w,
		cd_usuario_plano_w,
		cd_matricula_familia_w,
		dt_contratacao_ww,
		nr_seq_pagador_inclusao_w, --Essa variavel nao realiza nenhuma acao, apenas foi colocada por causa da utilizacao acima
		nr_seq_faixa_salarial_w,
		nr_seq_tabela_w,
		nr_seq_motivo_inclusao_w,
		nr_seq_segurado_inc_w,
		nr_seq_portabilidade_w,
		dt_inclusao_operadora_ww,
		nr_seq_localizacao_benef_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		nr_seq_titular_w	:= null;

		if (coalesce(nr_seq_vendedor_canal_w::text, '') = '') then
			nr_seq_vendedor_canal_w	:= pls_obter_regra_lanc_intercamb(nr_seq_intercambio_w, dt_contratacao_w, 'P', 'CV');
			nr_seq_vendedor_pf_w	:= pls_obter_regra_lanc_intercamb(nr_seq_intercambio_w, dt_contratacao_w, 'P', 'V');		
		end if;
		
		if (dt_importacao_arquivo_w IS NOT NULL AND dt_importacao_arquivo_w::text <> '') then
			dt_solicitacao_w	:= trunc(add_months(dt_solicitacao_w,1),'month');
			dt_contratacao_ww	:= trunc(add_months(dt_importacao_arquivo_w,1),'month');
		end if;

		select	CASE WHEN coalesce(nr_seq_congenere::text, '') = '' THEN 'C'  ELSE 'T' END ,
			CASE WHEN coalesce(nr_seq_congenere::text, '') = '' THEN nr_seq_oper_congenere  ELSE nr_seq_congenere END
		into STRICT	ie_tipo_segurado_w,
			nr_seq_congenere_w
		from	pls_intercambio
		where	nr_sequencia	= nr_seq_intercambio_w;

		select	coalesce(max(nr_seq_seg_contrato),0) + 1
		into STRICT	nr_seq_seg_contrato_w
		from	pls_segurado
		where	nr_seq_intercambio	= nr_seq_intercambio_w;

		begin
		select	nr_sequencia
		into STRICT	nr_seq_pagador_w
		from	pls_contrato_pagador
		where	nr_seq_pagador_intercambio	= nr_seq_intercambio_w
		and	coalesce(dt_rescisao::text, '') = '';
		exception
		when others then
			nr_seq_pagador_w	:= null;
		end;

		if (coalesce(nr_seq_plano_w::text, '') = '') then
			select	max(nr_seq_plano),
				max(nr_seq_tabela)
			into STRICT	nr_seq_plano_w,
				nr_seq_tabela_w
			from	pls_proposta_plano
			where	nr_sequencia = (SELECT	max(nr_sequencia)
						from	pls_proposta_plano
						where	nr_seq_proposta	= nr_seq_proposta_w);
		elsif (coalesce(nr_seq_tabela_w::text, '') = '') then
			if (nr_seq_intercambio_w IS NOT NULL AND nr_seq_intercambio_w::text <> '') and (nr_seq_plano_w IS NOT NULL AND nr_seq_plano_w::text <> '') then
				select	max(nr_seq_tabela)
				into STRICT	nr_seq_tabela_w
				from	pls_intercambio_plano
				where	nr_seq_intercambio = nr_seq_intercambio_w
				and	nr_seq_plano = nr_seq_plano_w;
			elsif (nr_seq_plano_w IS NOT NULL AND nr_seq_plano_w::text <> '') then
				begin
				select	max(nr_seq_tabela)
				into STRICT	nr_seq_tabela_w
				from	pls_proposta_plano
				where	nr_seq_proposta	= nr_seq_proposta_w
				and	nr_seq_plano 	= nr_seq_plano_w;
				exception
				when others then
					nr_seq_tabela_w	:= null;
				end;
			end if;
		end if;
		if (dt_importacao_arquivo_w IS NOT NULL AND dt_importacao_arquivo_w::text <> '') and (dt_admissao_w IS NOT NULL AND dt_admissao_w::text <> '') then
			dt_solicitacao_w	:= trunc(add_months(dt_solicitacao_w,1),'month');
		end if;

		if (dt_importacao_arquivo_w IS NOT NULL AND dt_importacao_arquivo_w::text <> '') then
			select	ie_tipo_contratacao,
				ie_regulamentacao
			into STRICT	ie_tipo_contratacao_plano_w,
				ie_regulamentacao_w
			from	pls_plano
			where	nr_sequencia	= nr_seq_plano_w;

			open C04;
			loop
			fetch C04 into
				ie_acao_regra_pagador_w,
				nr_seq_classif_itens_w,
				ie_mes_vencimento_w,
				dt_dia_vencimento_w;
			EXIT WHEN NOT FOUND; /* apply on C04 */
			end loop;
			close C04;

			if (ie_acao_regra_pagador_w = 'GP') then
				/* Gerar pagador para cada titular */

				if (coalesce(nr_seq_titular_contrato_w::text, '') = '') and (coalesce(nr_seq_titular_solic_w::text, '') = '') then
					select	cd_condicao_pagamento,
						cd_tipo_portador,
						cd_portador,
						nr_seq_conta_banco
					into STRICT	cd_condicao_pagamento_w,
						cd_tipo_portador_w,
						cd_portador_w,
						nr_seq_conta_banco_w
					from	pls_parametros
					where	cd_estabelecimento = cd_estabelecimento_p;

					select	nextval('pls_contrato_pagador_seq')
					into STRICT	nr_seq_pagador_w
					;

					insert	into	pls_contrato_pagador(	nr_sequencia, nr_seq_pagador_intercambio, dt_atualizacao,
							nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
							cd_pessoa_fisica, ie_endereco_boleto, ie_tipo_pagador,
							ie_calc_primeira_mens, ie_envia_cobranca, nr_seq_classif_itens, ie_receber_sms)
						values (	nr_seq_pagador_w, nr_seq_intercambio_w, clock_timestamp(),
							nm_usuario_p, clock_timestamp(), nm_usuario_p,
							cd_pessoa_fisica_w, 'PFR', 'S',
							'I', 'A', nr_seq_classif_itens_w, 'S');

					insert	into	pls_contrato_pagador_fin(	nr_sequencia, nr_seq_pagador, dt_dia_vencimento,
							cd_condicao_pagamento, dt_atualizacao, nm_usuario,
							dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_forma_cobranca, nr_seq_conta_banco,
							ie_geracao_nota_titulo, cd_tipo_portador, cd_portador,
							dt_inicio_vigencia, ie_mes_vencimento)
						values (	nextval('pls_contrato_pagador_fin_seq'), nr_seq_pagador_w, coalesce(dt_dia_vencimento_w,10),
							cd_condicao_pagamento_w, clock_timestamp(), nm_usuario_p,
							clock_timestamp(), nm_usuario_p, 1, nr_seq_conta_banco_w,
							'NT', cd_tipo_portador_w, cd_portador_w,
							dt_contratacao_w, ie_mes_vencimento_w);
				else --Se for dependente, busca o pagador do titular
					if (nr_seq_titular_contrato_w IS NOT NULL AND nr_seq_titular_contrato_w::text <> '') then
						select	a.nr_seq_pagador
						into STRICT	nr_seq_pagador_w
						from	pls_segurado		a
						where	a.nr_sequencia		= nr_seq_titular_contrato_w;
					elsif (nr_seq_titular_solic_w IS NOT NULL AND nr_seq_titular_solic_w::text <> '') then
						select	max(nr_seq_pagador)
						into STRICT	nr_seq_pagador_w
						from	pls_segurado
						where	nr_seq_benef_inclusao	= nr_seq_titular_solic_w;
					end if;
				end if;
			end if;
		end if;

		if (coalesce(nr_seq_titular_solic_w,0) <> 0) then
			select	max(nr_sequencia)
			into STRICT	nr_seq_titular_w
			from	pls_segurado
			where	nr_seq_benef_inclusao	= nr_seq_titular_solic_w;
		elsif (coalesce(nr_seq_titular_contrato_w,0) <> 0) then
			nr_seq_titular_w	:= nr_seq_titular_contrato_w;
		elsif (nm_titular_inclusao_w IS NOT NULL AND nm_titular_inclusao_w::text <> '') then
			select	max(b.nr_sequencia)
			into STRICT	nr_seq_titular_w
			from	pls_inclusao_beneficiario a,
				pls_segurado b
			where	b.nr_seq_benef_inclusao		= a.nr_sequencia
			and	upper(a.nm_pessoa_fisica)	= upper(nm_titular_inclusao_w)
			and	a.nr_seq_lote_inclusao		= nr_seq_lote_p;
		end if;

		select 	nextval('pls_segurado_seq')
		into STRICT 	nr_seq_segurado_ww
		;

		insert	into	pls_segurado(	nr_sequencia,
				cd_pessoa_fisica,
				dt_contratacao,
				cd_estabelecimento,
				dt_inclusao_operadora,
				nr_seq_plano,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				ie_taxa_inscricao,
				nr_seq_parentesco,
				nr_seq_titular,
				nr_seq_pagador,
				nr_seq_tabela,
				ie_tipo_segurado,
				ie_situacao_atend,
				nr_seq_intercambio,
				nr_seq_seg_contrato,
				nr_seq_benef_inclusao,
				cd_matricula_familia,
				nr_seq_congenere,
				nr_seq_faixa_salarial,
				cd_matricula_estipulante,
				nr_seq_vendedor_canal,
				nr_seq_localizacao_benef,
				nr_seq_vendedor_pf)
			values (	nr_seq_segurado_ww, --nr_sequencia
				cd_pessoa_fisica_w, --cd_pessoa_fisica
				coalesce(dt_contratacao_ww,dt_contratacao_w), --dt_contratacao
				cd_estabelecimento_w, --cd_estabelecimento
				coalesce(dt_inclusao_operadora_ww, coalesce(dt_contratacao_ww,dt_contratacao_w)), --dt_inclusao_operadora
				nr_seq_plano_w, --nr_seq_plano
				clock_timestamp(), --dt_atualizacao
				nm_usuario_p, --nm_usuario
				clock_timestamp(), --dt_atualizacao_nrec
				nm_usuario_p, --nm_usuario_nrec
				'N', --ie_taxa_inscricao
				nr_seq_parentesco_w, --nr_seq_parentesco
				nr_seq_titular_w, --nr_seq_titular
				nr_seq_pagador_w, --nr_seq_pagador
				nr_seq_tabela_w, --nr_seq_tabela
				ie_tipo_segurado_w, --ie_tipo_segurado
				'A', --ie_situacao_atend
				nr_seq_intercambio_w, --nr_seq_intercambio
				nr_seq_seg_contrato_w, --nr_seq_seg_contrato
				nr_seq_benef_w, --nr_seq_benef_inclusao
				cd_matricula_familia_w, --cd_matricula_familia_w
				nr_seq_congenere_w, --nr_seq_congenere
				nr_seq_faixa_salarial_w, --nr_seq_faixa_salarial
				cd_matricula_est_w,
				nr_seq_vendedor_canal_w,
				nr_seq_localizacao_benef_w,
				nr_seq_vendedor_pf_w);

			if	((dt_admissao_w IS NOT NULL AND dt_admissao_w::text <> '') or (coalesce(cd_cbo_w,'0') <> '0')) then

				insert into pls_segurado_compl(nr_sequencia,
					nr_seq_segurado,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					cd_cbo,
					dt_admissao)
				values (nextval('pls_segurado_compl_seq'),
					nr_seq_segurado_ww,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					cd_cbo_w,
					dt_admissao_w);
			end if;
		begin
		CALL pls_gerar_alt_exclusao_benef(nr_seq_lote_p,'E',cd_estabelecimento_p,nm_usuario_p,'N');
		exception
		when others then
			ds_erro_ww := '';
		end;

		/* Mudar etapa para IT - integrado a proposta*/

		update	pls_inclusao_beneficiario
		set	ie_status_intercambio	= 'B',
			ie_etapa_solicitacao	= 'IT'
		where	nr_sequencia		= nr_seq_benef_w;
		end;
	end loop;
	close C01;

	update	pls_lote_inclusao_benef
	set	ie_situacao		= 'IP'
	where	nr_sequencia		= nr_seq_lote_p;
end if;

if (dt_importacao_arquivo_w IS NOT NULL AND dt_importacao_arquivo_w::text <> '') then
	select	max(b.nr_sequencia)
	into STRICT	nr_seq_congenere_atual_w
	from	pls_outorgante	a,
		pls_congenere	b
	where	a.cd_cgc_outorgante	= b.cd_cgc
	and	a.cd_estabelecimento	= cd_estabelecimento_p
	and	b.cd_estabelecimento	= cd_estabelecimento_p
	and	b.ie_tipo_congenere	= 'CO';

	open C02;
	loop
	fetch C02 into
		nr_seq_segurado_w,
		nr_seq_congenere_atend_w,
		dt_contratacao_benef_w,
		nr_seq_beneficiario_proposta_w,
		nr_seq_plano_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		if (coalesce(nr_seq_contrato_w,0) <> 0) then
			select	max(nr_seq_emissor)
			into STRICT	nr_seq_emissor_w
			from	pls_contrato
			where	nr_sequencia	= nr_seq_contrato_w;
		elsif (coalesce(nr_seq_intercambio_w,0) <> 0) then
			select	max(nr_seq_emissor)
			into STRICT	nr_seq_emissor_w
			from	pls_intercambio
			where	nr_sequencia	= nr_seq_intercambio_w;
		end if;

		select	max(ie_preco)
		into STRICT	ie_preco_w
		from	pls_plano
		where	nr_sequencia	= nr_seq_plano_w;

		if (ie_preco_w = '1') then
			ie_tipo_repasse_w	:= 'P';
		else
			ie_tipo_repasse_w	:= 'C';
		end if;

		if	((ie_tipo_repasse_w = 'P') and (coalesce(nr_seq_contrato_w,0) <> 0)) then
			open C03;
			loop
			fetch C03 into
				nr_seq_congenere_cobr_w,
				nr_seq_ordem_w,
				ie_tipo_repasse_w;
			EXIT WHEN NOT FOUND; /* apply on C03 */
			end loop;
			close C03;
		else
			nr_seq_congenere_cobr_w		:= nr_seq_congenere_atend_w;
		end if;

		if (coalesce(ie_tipo_repasse_w::text, '') = '') then
			if (ie_preco_w = '1') then
				ie_tipo_repasse_w	:= 'P';
			else
				ie_tipo_repasse_w	:= 'C';
			end if;
		end if;

		if (coalesce(nr_seq_congenere_cobr_w,0) = 0) then
			nr_seq_congenere_cobr_w	:= nr_seq_congenere_atend_w;
		end if;

		if (coalesce(nr_seq_congenere_atend_w,nr_seq_congenere_atual_w) <> nr_seq_congenere_atual_w) then
			select	nextval('pls_segurado_repasse_seq')
			into STRICT	nr_seq_segurado_repasse_w
			;

			insert	into	pls_segurado_repasse(	nr_sequencia, nr_seq_segurado, cd_estabelecimento,
					dt_repasse, nr_seq_congenere, ie_tipo_repasse,
					dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
					ie_cartao_provisorio, nr_seq_congenere_atend, nr_seq_beneficiario_proposta,
					nr_seq_emissor, ie_origem_solicitacao, ie_tipo_compartilhamento)
				values (	nr_seq_segurado_repasse_w, nr_seq_segurado_w, cd_estabelecimento_p,
					dt_contratacao_benef_w, nr_seq_congenere_cobr_w, ie_tipo_repasse_w,
					clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p,
					'N', nr_seq_congenere_atend_w, nr_seq_beneficiario_proposta_w,
					nr_seq_emissor_w, 'M', 1);
		end if;
		end;
	end loop;
	close C02;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_lote_benef ( nr_seq_lote_p bigint, ie_lote_p text, cd_estabelecimento_p bigint, nm_usuario_p text) is cd_pessoa_fisica_w varchar(10) FROM PUBLIC;

