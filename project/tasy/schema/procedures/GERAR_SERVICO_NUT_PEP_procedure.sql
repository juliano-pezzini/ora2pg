-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_servico_nut_pep (nr_prescricao_p text, nm_usuario_p text, cd_perfil_p bigint) AS $body$
DECLARE


nr_seq_servico_w		varchar(10);
nr_seq_supmat_w			bigint;
dt_inicio_w			timestamp;
dt_inicio_dia_w			timestamp;
dt_fim_w			timestamp;
dt_fim_dia_w			timestamp;
dt_inicio_jejum_w		timestamp;
dt_fim_jejum_w			timestamp;
dt_horario_material_w		timestamp;
ie_jejum			varchar(1);
ie_possui_dieta_w		bigint;
qt_dias_w			bigint;
cont_w				bigint;
lista_servico_w			varchar(2000);
nr_atendimento_w		bigint;
cd_setor_atend_w		bigint;
nr_prescricao_w			bigint;
nr_seq_material_w		integer;
nr_seq_horario_w		bigint;
nr_seq_serv_dia_w		bigint;
nr_seq_serv_dia_rep_w		bigint;
qt_profissional_w		bigint;
ie_dieta_jejum_w		varchar(1);
cd_estabelecimento_w		smallint;
nr_seq_servico_jejum_w		bigint;
nr_seq_servico_jejum_ww 	bigint;
ie_dieta_normal_w		varchar(1);
qt_regra_lib_nut_w		bigint;
ie_gerar_serv_normal_w		varchar(1);
dt_servico_w			timestamp;
cd_setor_atendimento_w		bigint;
hr_prim_horario_w		varchar(5);
nr_atend_serv_dia_w		bigint;
ie_gerar_serv_supl_w		varchar(1);
ie_unico_servico_leites_w	varchar(1);
ie_prescr_hor_w			varchar(1);
ie_possui_horarios_w		varchar(1);

c01 CURSOR FOR
	SELECT	distinct nr_seq_servico
	from 	nut_servico_horario a,
		nut_servico b
	where (coalesce(b.cd_estabelecimento, cd_estabelecimento_w) = cd_estabelecimento_w or coalesce(cd_estabelecimento_w::text, '') = '')
	and	a.nr_seq_servico = b.nr_sequencia
	and	((b.ie_tipo_prescricao_servico  = 1) or (ie_gerar_serv_normal_w = 'S' AND b.ie_tipo_prescricao_servico  = 4))
	and	coalesce(cd_setor_atendimento,cd_setor_atend_w) = cd_setor_atend_w
	AND	((obter_se_gera_servico(b.nr_sequencia,nr_prescricao_p) = 'S') or (ie_gerar_serv_normal_w = 'S'))
	and	coalesce(b.ie_situacao,'A') = 'A'
	and 	not exists (SELECT 1
			from regra_geracao_serv_setor d
			where d.nr_seq_servico = b.nr_sequencia
			and     d.cd_setor_atendimento = cd_setor_atend_w
			and     coalesce(d.ie_gera_servico,'N') = 'N')
	and (exists (select	1
			from	prescr_dieta_hor x
			where	coalesce(dt_suspensao::text, '') = ''
			and	x.dt_horario between PKG_DATE_UTILS.get_Time(dt_inicio_dia_w, a.ds_horarios) and PKG_DATE_UTILS.get_Time(dt_inicio_dia_w, a.ds_horarios_fim)
			and     x.nr_prescricao = nr_prescricao_p) or (ie_possui_horarios_w = 'N'));

c03 CURSOR FOR
	SELECT 	a.dt_horario,
		a.nr_prescricao,
		a.nr_sequencia,
		a.nr_Seq_material
	from	prescr_mat_hor a
	where	a.nr_prescricao = nr_prescricao_p
	and	coalesce(a.dt_suspensao::text, '') = ''
	and	coalesce(a.dt_fim_horario::text, '') = ''
	and	a.ie_agrupador = 12
	--and 	nvl(a.ie_horario_especial,'N') <> 'S'
	and	obter_se_horario_liberado(a.dt_lib_horario,a.dt_horario) = 'S'
	and	ie_gerar_serv_normal_w = 'N'
	and	not exists (	SELECT	1
				from	nut_atend_serv_dia b,
					nut_servico c
				where	a.dt_horario = b.dt_servico
				and	b.nr_seq_servico = c.nr_sequencia
				and	c.ie_tipo_prescricao_servico in (3)
				and	a.nr_prescricao = b.nr_prescricao)
	and (ie_gerar_serv_supl_w = 'T'
	or 	exists (select	1
			from	prescr_material b
			where	b.nr_prescricao = a.nr_prescricao
			and	b.nr_sequencia = a.nr_seq_material
			and	b.ie_acm = 'N'
			and	b.ie_se_necessario = 'N')
	or	a.ie_aprazado = 'S');
				
c04 CURSOR FOR
	SELECT 	a.dt_horario,
		a.nr_prescricao,
		a.nr_sequencia,
		a.nr_seq_material
	from	prescr_mat_hor a
	where	a.nr_prescricao = nr_prescricao_p
	and	coalesce(a.dt_suspensao::text, '') = ''
	and	coalesce(a.dt_fim_horario::text, '') = ''
	and	a.ie_agrupador = 8
	--and 	nvl(a.ie_horario_especial,'N') <> 'S'
	and	obter_se_horario_liberado(a.dt_lib_horario,dt_horario) = 'S'
	and	ie_gerar_serv_normal_w = 'N'
	and	not exists (	SELECT	1
				from	nut_atend_serv_dia b,
					nut_servico c
				where	a.dt_horario = b.dt_servico
				and	b.nr_seq_servico = c.nr_sequencia
				and	c.ie_tipo_prescricao_servico in (4)
				and	a.nr_prescricao = b.nr_prescricao);	
	
c05 CURSOR FOR
	SELECT	distinct a.nr_seq_servico,
		a.nr_sequencia
	from 	nut_atend_serv_dia a,
		nut_servico b,
		usuario c
	where  	a.nr_seq_servico = b.nr_sequencia
	and	nm_usuario_p = c.nm_usuario
	and	c.ie_profissional = 'N'
	--and	b.ie_tipo_prescricao_servico  = 1
	and	a.nr_atendimento  = nr_atendimento_w
	and	dt_servico between dt_inicio_w and dt_fim_w
	and	coalesce(a.dt_liberacao::text, '') = '';
	
c06 CURSOR FOR
	SELECT	distinct
			a.nr_seq_servico, 
			a.nr_sequencia,
			dt_servico,
			cd_setor_atendimento
	from 	nut_atend_serv_dia a,
			nut_servico b,
			nut_regra_lib_servico c
	where  	a.nr_seq_servico = b.nr_sequencia
	and	c.ie_situacao = 'A'
	and	to_date(obter_horario_servico(b.nr_sequencia, 1),'hh24:mi') 
		between to_date(to_char(c.hr_inicial,'hh24:mi'),'hh24:mi') 
		and to_date(to_char(c.hr_final,'hh24:mi'),'hh24:mi')
	and	a.nr_atendimento  = nr_atendimento_w
	and	dt_servico between dt_inicio_w and dt_fim_w
	and	coalesce(a.dt_liberacao::text, '') = '';
	
c07 CURSOR FOR
	SELECT 	a.dt_horario,
		a.nr_prescricao,
		a.nr_sequencia,
		a.nr_seq_material
	from	prescr_mat_hor a
	where	a.nr_prescricao = nr_prescricao_p
	and	coalesce(a.dt_suspensao::text, '') = ''
	and	coalesce(a.dt_fim_horario::text, '') = ''
	and	a.ie_agrupador = 16
	and	obter_se_horario_liberado(a.dt_lib_horario,dt_horario) = 'S'
	and	not exists (	SELECT	1
				from	nut_atend_serv_dia b,
					nut_servico c
				where	a.dt_horario = b.dt_servico
				and	b.nr_seq_servico = c.nr_sequencia
				and	c.ie_tipo_prescricao_servico in (8)
				and	a.nr_prescricao = b.nr_prescricao);

c08 CURSOR FOR
	SELECT	distinct nr_seq_servico
	from 	nut_servico_horario a,
		nut_servico b
	where  	PKG_DATE_UTILS.get_Time(dt_inicio_dia_w, a.ds_horarios) between dt_inicio_dia_w and dt_fim_dia_w
        and (coalesce(b.cd_estabelecimento, cd_estabelecimento_w) = cd_estabelecimento_w or coalesce(cd_estabelecimento_w::text, '') = '')
	and	a.nr_seq_servico = b.nr_sequencia
	and	((b.ie_tipo_prescricao_servico  = 1) or (ie_gerar_serv_normal_w = 'S' AND b.ie_tipo_prescricao_servico  = 4))
	and	coalesce(cd_setor_atendimento,cd_setor_atend_w) = cd_setor_atend_w
	AND	((obter_se_gera_servico(b.nr_sequencia,nr_prescricao_p) = 'S') or (ie_gerar_serv_normal_w = 'S'))
	and	coalesce(b.ie_situacao,'A') = 'A'
	and 	not exists (SELECT 1
			from regra_geracao_serv_setor d
			where d.nr_seq_servico = b.nr_sequencia
			and     d.cd_setor_atendimento = cd_setor_atend_w
			and     coalesce(d.ie_gera_servico,'N') = 'N');				


BEGIN

select	max(dt_inicio_prescr),
		max(dt_validade_prescr),
		(PKG_DATE_UTILS.start_of(max(dt_validade_prescr), 'dd', 0) - PKG_DATE_UTILS.start_of(max(dt_inicio_prescr), 'dd', 0)) + 1,
		max(nr_atendimento),
		coalesce(max(cd_setor_atendimento),0),
		max(cd_estabelecimento)
into STRICT	dt_inicio_w,
		dt_fim_w,
		qt_dias_w,
		nr_atendimento_w,
		cd_setor_atend_w,
		cd_estabelecimento_w
from	prescr_medica
where	nr_prescricao = nr_prescricao_p;

select	CASE WHEN count(1)=0 THEN 'N'  ELSE 'S' END
into STRICT	ie_possui_horarios_w
from	prescr_dieta_hor x
where	coalesce(dt_suspensao::text, '') = ''
and	x.nr_prescricao = nr_prescricao_p;

-- gerar servicos para dieta oral.
ie_gerar_serv_normal_w := obter_param_usuario(924, 834, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_gerar_serv_normal_w);
ie_gerar_serv_supl_w := obter_param_usuario(924, 925, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_gerar_serv_supl_w);
ie_prescr_hor_w := obter_param_usuario(1003, 125, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_prescr_hor_w);

lista_servico_w := '';

select 	count(nr_sequencia)
into STRICT	ie_possui_dieta_w
from 	prescr_dieta
where	nr_prescricao = nr_prescricao_p
and		coalesce(ie_suspenso,'N') <> 'S'  LIMIT 1;

if (ie_gerar_serv_normal_w = 'S') and (ie_possui_dieta_w = 0) then

	select 	count(nr_sequencia)
	into STRICT	ie_possui_dieta_w
	from	prescr_mat_hor a
	where	a.nr_prescricao = nr_prescricao_p
	and		coalesce(a.dt_suspensao::text, '') = ''
	and		coalesce(a.dt_fim_horario::text, '') = ''
	and (a.ie_agrupador = 8
	or (a.ie_agrupador = 12
	and (ie_gerar_serv_supl_w = 'T'
	or 	exists (SELECT	1
			from	prescr_material b
			where	b.nr_prescricao = a.nr_prescricao
			and	b.nr_sequencia = a.nr_seq_material
			and	b.ie_acm = 'N'
			and	b.ie_se_necessario = 'N')
	or	a.ie_aprazado = 'S')));
	--and 	nvl(a.ie_horario_especial,'N') <> 'S';
end if;



CALL gravar_log_nutricao(100,substr(' - Prescricao: '||nr_prescricao_p
				||' ie_possui_horarios_w: '||ie_possui_horarios_w
				||' ie_possui_dieta_w: '||ie_possui_dieta_w
				||' ie_gerar_serv_normal_w: '||ie_gerar_serv_normal_w
				||' ie_prescr_hor_w: '||ie_prescr_hor_w
				||' Stack: '||dbms_utility.format_call_stack,1,2000), nm_usuario_p);

if (ie_possui_dieta_w > 0 ) then
	cont_w := qt_dias_w;
	dt_inicio_dia_w := dt_inicio_w;
	lista_servico_w := '';
	
	--Gerar o servico jejum se tiver dieta marcada como jejum
	select 	coalesce(max('S'),'N')
	into STRICT	ie_dieta_jejum_w
	from 	prescr_dieta b,
			dieta a
	where	a.cd_dieta 		= b.cd_dieta
	and		b.nr_prescricao 	= nr_prescricao_p
	and		coalesce(ie_suspenso,'N')	<> 'S'
	and		coalesce(a.ie_jejum,'N') 	= 'S'  LIMIT 1;
	
	--Verificar se tem dieta que nao eh de Jejum
	SELECT 	coalesce(max('S'),'N')
	into STRICT	ie_dieta_normal_w
	FROM 	prescr_dieta b,
			dieta a
	WHERE	a.cd_dieta 		= b.cd_dieta
	AND	b.nr_prescricao 	= nr_prescricao_p
	AND	coalesce(ie_suspenso,'N')	<> 'S'
	AND	coalesce(a.ie_jejum,'N') 	= 'N'  LIMIT 1;
	
	if (ie_gerar_serv_normal_w = 'S') and (ie_dieta_normal_w = 'N') then
	
		SELECT 	coalesce(max('S'),'N')
		into STRICT	ie_dieta_normal_w
		from	prescr_mat_hor a
		where	a.nr_prescricao = nr_prescricao_p
		and	coalesce(a.dt_suspensao::text, '') = ''
		and	coalesce(a.dt_fim_horario::text, '') = ''
		and	a.ie_agrupador in (8,12)
		--and 	nvl(a.ie_horario_especial,'N') <> 'S'
		and	ie_dieta_jejum_w = 'N'  LIMIT 1;		
	
	end if;
	
	while(cont_w > 0) loop
		if (cont_w <> qt_dias_w) then
			dt_inicio_dia_w := PKG_DATE_UTILS.start_of(dt_inicio_dia_w, 'dd', 0) + 1;
		end if;

		if (cont_w = 1) then
			dt_fim_dia_w:= dt_fim_w;
		else
			dt_fim_dia_w:= PKG_DATE_UTILS.END_OF(dt_inicio_dia_w, 'DAY', 0);
		end if;

		if ( ie_prescr_hor_w = 'S' ) then
			open c01;
			loop
			fetch c01
				into nr_seq_servico_w;
				EXIT WHEN NOT FOUND; /* apply on c01 */
				lista_servico_w := lista_servico_w || nr_seq_servico_w || ',';
			end loop;
			close c01;
		else
			open c08;
			loop
			fetch c08
				into nr_seq_servico_w;
				EXIT WHEN NOT FOUND; /* apply on c08 */
				lista_servico_w := lista_servico_w || nr_seq_servico_w || ',';
			end loop;
			close c08;
		end if;
		
		if (ie_dieta_normal_w = 'S') then
			CALL gerar_servico_nutricao(lista_servico_w,nr_atendimento_w,0,'T',dt_inicio_dia_w,nm_usuario_p,cd_estabelecimento_w, nr_prescricao_p);
		end if;
		
		lista_servico_w := '';
		cont_w := cont_w - 1;
		
		SELECT	max(nr_seq_servico)
		into STRICT	nr_seq_servico_jejum_w
		FROM 	nut_servico_horario a,
			nut_servico b
		WHERE  	PKG_DATE_UTILS.get_Time(dt_inicio_dia_w, a.ds_horarios) BETWEEN dt_inicio_dia_w AND dt_fim_dia_w
		AND	a.nr_seq_servico 		= b.nr_sequencia
		AND	b.ie_tipo_prescricao_servico  	= 2
		AND	coalesce(cd_setor_atendimento,cd_setor_atend_w) = cd_setor_atend_w
		and 	not exists (SELECT 1
				from regra_geracao_serv_setor d
				where d.nr_seq_servico = b.nr_sequencia
				and     d.cd_setor_atendimento = cd_setor_atend_w
				and     coalesce(d.ie_gera_servico,'N') = 'N');
		
		if (ie_dieta_jejum_w = 'S') and (nr_seq_servico_jejum_w IS NOT NULL AND nr_seq_servico_jejum_w::text <> '') then
			CALL gerar_servico_nutricao_jejum(null,nr_seq_servico_jejum_w,nr_atendimento_w,0,'T',dt_inicio_dia_w,dt_inicio_jejum_w,dt_fim_jejum_w,nm_usuario_p, nr_prescricao_p, cd_estabelecimento_w);
		end if;
	end loop;
-- fim servico dieta oral
else
	-- jejum
	select	max(dt_inicio),
			max(dt_fim)
	into STRICT	dt_inicio_jejum_w,
			dt_fim_jejum_w
	from 	rep_jejum
	where	nr_prescricao = nr_prescricao_p;

	dt_inicio_dia_w := dt_inicio_w;
	cont_w := qt_dias_w;
	lista_servico_w := '';
	while(cont_w > 0) and (dt_inicio_jejum_w IS NOT NULL AND dt_inicio_jejum_w::text <> '') loop
		if (cont_w <> qt_dias_w) then
			dt_inicio_dia_w := PKG_DATE_UTILS.start_of(dt_inicio_dia_w, 'dd', 0) + 1;
		end if;

		if (cont_w = 1) then
			dt_fim_dia_w:= dt_fim_w;
		else
			dt_fim_dia_w:= PKG_DATE_UTILS.END_OF(dt_inicio_dia_w, 'DAY', 0);
		end if;
		
		if ( ie_prescr_hor_w = 'S' ) then
			open c01;
			loop
			fetch c01
				into nr_seq_servico_w;
				EXIT WHEN NOT FOUND; /* apply on c01 */
				lista_servico_w := lista_servico_w || nr_seq_servico_w || ',';
			end loop;
			close c01;
		else
			open c08;
			loop
			fetch c08
				into nr_seq_servico_w;
				EXIT WHEN NOT FOUND; /* apply on c08 */
				lista_servico_w := lista_servico_w || nr_seq_servico_w || ',';
			end loop;
			close c08;
		end if;
		
		select	max(cd_estabelecimento)
		into STRICT	cd_estabelecimento_w
		from	prescr_medica a
		where	a.nr_prescricao = nr_prescricao_p;
		
		if (lista_servico_w IS NOT NULL AND lista_servico_w::text <> '') then
			CALL gerar_servico_nutricao_jejum(lista_servico_w,null,nr_atendimento_w,0,'T',dt_inicio_dia_w,dt_inicio_jejum_w,dt_fim_jejum_w,nm_usuario_p, nr_prescricao_p, cd_estabelecimento_w);
		else
		
			SELECT	coalesce(max(a.nr_sequencia),0)
			into STRICT	nr_seq_servico_jejum_ww
			FROM 	nut_servico a
			WHERE  	a.ie_tipo_prescricao_servico  	= 2
			and		coalesce(a.ie_situacao,'A') = 'A';
			
			if (nr_seq_servico_jejum_ww > 0) then
				CALL gerar_servico_nutricao_jejum(null,nr_seq_servico_jejum_ww,nr_atendimento_w,0,'T',dt_inicio_dia_w,dt_inicio_jejum_w,dt_fim_jejum_w,nm_usuario_p, nr_prescricao_p, cd_estabelecimento_w);
			end if;		
		end if;
		lista_servico_w := '';
		cont_w := cont_w - 1;
	end loop;
-- fim jejum
end if;

--servico material
select 	count(nr_sequencia)
into STRICT	ie_possui_dieta_w
from	prescr_material
where	nr_prescricao = nr_prescricao_p
and		ie_agrupador = 12
and		coalesce(ie_suspenso,'N') <> 'S'  LIMIT 1;

if (ie_possui_dieta_w > 0) then
	open c03;
	loop
	fetch c03
	into 	dt_horario_material_w,
		nr_prescricao_w,
		nr_seq_horario_w,
		nr_Seq_material_w;
	EXIT WHEN NOT FOUND; /* apply on c03 */
		nr_seq_supmat_w := obter_sequencia_servico(3,dt_horario_material_w,cd_setor_atend_w);

		if (nr_seq_supmat_w <> 0)  then
			CALL gerar_serv_mat_sup_nut(nr_seq_supmat_w,dt_horario_material_w,nr_atendimento_w,cd_setor_atend_w,nr_prescricao_w,nr_Seq_material_w,nr_seq_horario_w,nm_usuario_p);
		end if;

	end loop;
	close c03;
	if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;
	-- fim servico material
end if;

--suporte nutricional
select 	count(nr_sequencia)
into STRICT	ie_possui_dieta_w
from	prescr_material
where	nr_prescricao = nr_prescricao_p
and		ie_agrupador = 8
and		coalesce(ie_suspenso,'N') <> 'S'  LIMIT 1;

IF (ie_possui_dieta_w > 0) THEN
	OPEN C04;
	LOOP
	FETCH C04 INTO
		dt_horario_material_w,
		nr_prescricao_w,
		nr_seq_horario_w,
		nr_Seq_material_w;
	EXIT WHEN NOT FOUND; /* apply on c04 */
		nr_seq_supmat_w := obter_sequencia_servico(4,dt_horario_material_w,cd_setor_atend_w);
		IF (nr_seq_supmat_w <> 0)  THEN
			CALL Gerar_Serv_Mat_Sup_Nut(nr_seq_supmat_w,dt_horario_material_w,nr_atendimento_w,
				cd_setor_atend_w,nr_prescricao_w,
				nr_Seq_material_w,nr_seq_horario_w,nm_usuario_p);
		END IF;

	END LOOP;
	CLOSE C04;
END IF;
--Fim Suporte Nutricional


--NPT  NeoNatal
select 	count(*)
into STRICT	ie_possui_dieta_w
from 	nut_pac
where	nr_prescricao = nr_prescricao_p
and		ie_npt_adulta = 'N'  LIMIT 1;

if (ie_possui_dieta_w > 0) then
	nr_seq_supmat_w := obter_sequencia_servico(6,dt_inicio_w,cd_setor_atend_w);
	if (nr_seq_supmat_w <> 0)  then
		CALL gerar_serv_mat_sup_nut(nr_seq_supmat_w,dt_inicio_w,nr_atendimento_w,cd_setor_atend_w,null,null,null,nm_usuario_p);
	end if;
end if;
-- Fim NPT NeopNatal


--NPT Adulto
select 	count(*)
into STRICT	ie_possui_dieta_w
from 	nut_pac
where	nr_prescricao = nr_prescricao_p
and		ie_npt_adulta = 'S'  LIMIT 1;

if (ie_possui_dieta_w > 0) then
	nr_seq_supmat_w := obter_sequencia_servico(5,dt_inicio_w,cd_setor_atend_w);
	if (nr_seq_supmat_w <> 0)  then
		CALL gerar_serv_mat_sup_nut(nr_seq_supmat_w,dt_inicio_w,nr_atendimento_w,cd_setor_atend_w,nr_prescricao_p,null,null,nm_usuario_p);
	end if;
end if;
-- Fim NPT Adulto


--NPT Pediatra
select 	count(*)
into STRICT	ie_possui_dieta_w
from 	nut_pac
where	nr_prescricao = nr_prescricao_p
and		ie_npt_adulta = 'P'  LIMIT 1;

if (ie_possui_dieta_w > 0) then
	nr_seq_supmat_w := obter_sequencia_servico(7,dt_inicio_w,cd_setor_atend_w);
	if (nr_seq_supmat_w <> 0)  then
		CALL gerar_serv_mat_sup_nut(nr_seq_supmat_w,dt_inicio_w,nr_atendimento_w,cd_setor_atend_w,null,null,null,nm_usuario_p);
	end if;
end if;
--Fim NPT Pediatra


--Leite e derivados
select  count(*)
into STRICT	ie_possui_dieta_w
from	PRESCR_LEITE_DERIV a
Where	a.nr_prescricao = nr_prescricao_p  LIMIT 1;

ie_unico_servico_leites_w	:= coalesce(Obter_valor_param_usuario(1003, 116, wheb_usuario_pck.get_cd_perfil, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento),'N');


if (ie_possui_dieta_w > 0) then

	if (ie_unico_servico_leites_w = 'N') then
		
		OPEN C07;
			LOOP
			FETCH C07 INTO
				dt_horario_material_w,
				nr_prescricao_w,
				nr_seq_horario_w,
				nr_Seq_material_w;
			EXIT WHEN NOT FOUND; /* apply on c07 */
			
				
				
				nr_seq_supmat_w := obter_sequencia_servico(8,dt_horario_material_w,cd_setor_atend_w);
				
				
				IF (nr_seq_supmat_w <> 0)  THEN
					CALL Gerar_Serv_Mat_Sup_Nut(nr_seq_supmat_w,dt_horario_material_w,nr_atendimento_w,
						cd_setor_atend_w,nr_prescricao_w,
						nr_Seq_material_w,nr_seq_horario_w,nm_usuario_p);
				END IF;

			END LOOP;
		CLOSE C07;
	else
	
		nr_seq_supmat_w := obter_sequencia_servico(8,dt_inicio_w,cd_setor_atend_w);
		
		select  min(hr_prim_horario)
		into STRICT	hr_prim_horario_w
		from	PRESCR_LEITE_DERIV a
		where	a.nr_prescricao = nr_prescricao_p;
			
		if (hr_prim_horario_w IS NOT NULL AND hr_prim_horario_w::text <> '') then
			dt_inicio_w	:= PKG_DATE_UTILS.get_Time(dt_inicio_w, hr_prim_horario_w);
		end if;
		
			if (nr_seq_supmat_w <> 0)  then
				CALL gerar_serv_mat_sup_nut(nr_seq_supmat_w,dt_inicio_w,nr_atendimento_w,cd_setor_atend_w,nr_prescricao_p,null,null,nm_usuario_p);
			end if;
	end if;

end if;
--Fim Leite e derivados


--Definir Prescricao como sendo da nutricao caso seja nutricionista
select	count(*)
into STRICT	qt_profissional_w	
from	usuario a
where	a.ie_profissional = 'N'
and	a.nm_usuario = nm_usuario_p;

if (qt_profissional_w > 0) then

	select 	max(b.dt_inicio),
		max(a.dt_validade_prescr),
		(PKG_DATE_UTILS.start_of(max(a.dt_validade_prescr), 'dd', 0) - PKG_DATE_UTILS.start_of(max(a.dt_inicio_prescr), 'dd', 0)) + 1,
		max(a.nr_atendimento),
		coalesce(max(a.cd_setor_atendimento),0)
	into STRICT	dt_inicio_w,
		dt_fim_w,
		qt_dias_w,
		nr_atendimento_w,
		cd_setor_atend_w
	from	prescr_medica a, cpoe_dieta b
	where	a.nr_prescricao = nr_prescricao_p
	and 	a.nr_atendimento = b.nr_atendimento;
	

	select 	count(nr_sequencia)
	into STRICT	ie_possui_dieta_w
	from 	prescr_dieta
	where	nr_prescricao = nr_prescricao_p
	and		coalesce(ie_suspenso,'N') <> 'S';

	open c05;
	loop
	fetch c05 into nr_seq_servico_w, nr_seq_serv_dia_w;
	EXIT WHEN NOT FOUND; /* apply on c05 */	

		select	max(coalesce(nr_sequencia,0))
		into STRICT	nr_seq_serv_dia_rep_w
		from	nut_atend_serv_dia_rep
		where	nr_seq_serv_dia = nr_seq_serv_dia_w
		and	coalesce(dt_liberacao::text, '') = '';
		
		CALL Definir_Prescricao_Nutricao(	nr_prescricao_p,
						coalesce( nr_seq_serv_dia_rep_w ,0),
						nr_seq_serv_dia_w,
						'T',
						nm_usuario_p,
						cd_perfil_p,
						cd_estabelecimento_w);		
	end loop;
	close c05;
end if;

select	count(*)
into STRICT	qt_regra_lib_nut_w
from	nut_regra_lib_servico where	ie_situacao = 'A' LIMIT 1;

if (qt_regra_lib_nut_w > 0) then
	open c06;
	loop
	fetch c06 into 	nr_seq_servico_w,
			nr_seq_serv_dia_w,
			dt_servico_w,
			cd_setor_atendimento_w;
	EXIT WHEN NOT FOUND; /* apply on c06 */	
	begin
		
		if (nut_obter_se_serv_bloq_Adep(dt_servico_w, cd_setor_atendimento_w, nr_atendimento_w, nr_seq_servico_w) = 'N') then
			select	max(coalesce(nr_sequencia,0))
			into STRICT	nr_seq_serv_dia_rep_w
			from	nut_atend_serv_dia_rep
			where	nr_seq_serv_dia = nr_seq_serv_dia_w
			and	coalesce(dt_liberacao::text, '') = '';
			
			CALL definir_prescricao_nutricao(nr_prescricao_p, coalesce(nr_seq_serv_dia_rep_w,0), nr_seq_serv_dia_w, 'T', nm_usuario_p, cd_perfil_p, cd_estabelecimento_w);
				
			if ((obter_prescricao_servicos_rep(nr_seq_serv_dia_w) IS NOT NULL AND (obter_prescricao_servicos_rep(nr_seq_serv_dia_w))::text <> '')) then
				update 	nut_atend_serv_dia
				set	ie_status_adep	= 'N',
					dt_liberacao 	= clock_timestamp(),
					nm_usuario_lib	= nm_usuario_p
				where	nr_sequencia = nr_seq_serv_dia_w;
			end if;
			
		end if;
		
	end;
	end loop;
	close c06;
end if;

if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_servico_nut_pep (nr_prescricao_p text, nm_usuario_p text, cd_perfil_p bigint) FROM PUBLIC;

