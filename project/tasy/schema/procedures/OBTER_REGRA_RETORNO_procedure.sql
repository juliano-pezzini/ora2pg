-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE obter_regra_retorno (CD_ESTABELECIMENTO_P bigint, CD_CONVENIO_P bigint, CD_CATEGORIA_P text, CD_PROCEDIMENTO_P bigint, IE_ORIGEM_PROCED_P bigint, DT_PROCEDIMENTO_P timestamp, IE_TIPO_ATENDIMENTO_P bigint, CD_SETOR_ATENDIMENTO_P bigint, CD_MEDICO_EXECUTOR_P text, TX_VALOR_P INOUT bigint, qt_dias_p bigint) AS $body$
DECLARE


tx_valor_w				double precision	:= null;
tx_valor_valido_w			double precision	:= null;
cd_grupo_w				bigint		:= 0;
cd_especialidade_w		bigint		:= 0;
cd_area_w				bigint		:= 0;
cd_edicao_amb_w			integer		:= 0;
ie_credenciado_w			varchar(1);
cd_especial_medica_w		integer		:= 0;


C01 CURSOR FOR
	SELECT 	tx_valor,
			cd_especialidade_medica
      from 		regra_retorno
      where		cd_estabelecimento      			= cd_estabelecimento_p
	and		coalesce(cd_procedimento,cd_procedimento_p) 	= cd_procedimento_p
	and		coalesce(ie_origem_proced,ie_origem_proced_p)	= ie_origem_proced_p
	and		coalesce(cd_area_procedimento,cd_area_w)		= cd_area_w
	and		coalesce(cd_especialidade,cd_especialidade_w)	= cd_especialidade_w
	and		coalesce(cd_grupo_proc,cd_grupo_w)			= cd_grupo_w
	and		coalesce(cd_edicao_amb,cd_edicao_amb_w)		= cd_edicao_amb_w
	and		coalesce(cd_convenio, cd_convenio_p)		= cd_convenio_p
	and		coalesce(cd_categoria, coalesce(cd_categoria_p,'0'))		= coalesce(cd_categoria_p,'0')
      and 		coalesce(ie_tipo_atendimento,ie_tipo_atendimento_p)
										= ie_tipo_atendimento_p
	and		coalesce(cd_setor_atendimento, cd_setor_atendimento_p)
										= cd_setor_atendimento_p
	and (coalesce(cd_medico, cd_medico_executor_p)	= cd_medico_executor_p or
			 coalesce(cd_medico_executor_p::text, '') = '')
	and (ie_credenciado					= 'T' or
			 coalesce(ie_credenciado::text, '') = ''					or
			 ie_credenciado 					= ie_credenciado_w)
	and		qt_dias_p	between	coalesce(qt_dias_inicial,qt_dias_p) and coalesce(qt_dias_final,qt_dias_p)
	order by
			coalesce(cd_procedimento,0),
			coalesce(cd_grupo_proc,0),
			coalesce(cd_especialidade,0),
			coalesce(cd_area_procedimento,0),
			coalesce(cd_medico,0),
			coalesce(cd_especialidade_medica,0),
			coalesce(cd_setor_atendimento,0),
			coalesce(ie_tipo_atendimento,0),
			ie_credenciado desc,
			coalesce(cd_convenio,0),
			coalesce(cd_categoria,'0'),
			coalesce(cd_edicao_amb,0);


BEGIN

tx_valor_w		:= null;
tx_valor_valido_w	:= null;

/* Obter Estrutura do procedimento */

begin
select 	cd_grupo_proc,
		cd_especialidade,
		cd_area_procedimento
into STRICT		cd_grupo_w,
		cd_especialidade_w,
		cd_area_w
from		Estrutura_Procedimento_V
where		cd_procedimento 	= cd_procedimento_p
and		ie_origem_proced	= ie_origem_proced_p;
exception
     		when others then
		begin
		cd_grupo_w			:= 0;
		cd_especialidade_w	:= 0;
		cd_area_w			:= 0;
		end;
end;

/*      Obter edi√ßao da AMB  */

begin
select	cd_edicao_amb
into STRICT		cd_edicao_amb_w
from		convenio_amb
where		cd_estabelecimento	= cd_estabelecimento_p
and		cd_convenio			= cd_convenio_p
and		cd_categoria		= cd_categoria_p
and 		coalesce(ie_situacao,'A')	= 'A'
and		dt_inicio_vigencia	=
		(SELECT max(dt_inicio_vigencia)
			from		convenio_amb a
			where		a.cd_estabelecimento	= cd_estabelecimento_p
			and		a.cd_convenio		= cd_convenio_p
			and		a.cd_categoria		= cd_categoria_p
		      and 		coalesce(ie_situacao,'A')	= 'A'
			and		a.dt_inicio_vigencia 	<= dt_procedimento_p);
exception
		when others then
     		cd_edicao_amb_w 	:= 0;
end;

/*      Obter indicador de medico credenciado  */

begin
select	coalesce(ie_conveniado,'N')
into STRICT		ie_credenciado_w
from		medico_convenio
where		cd_pessoa_fisica		= cd_medico_executor_p
and		cd_convenio			= cd_convenio_p;
exception
		when others then
     		ie_credenciado_w 	:= 'N';
end;


OPEN C01;
LOOP
FETCH C01 	into
		tx_valor_w,
		cd_especial_medica_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
	BEGIN
	if (coalesce(cd_especial_medica_w::text, '') = '') then
		tx_valor_valido_w	:= tx_valor_w;
	else
		begin
		select 	tx_valor_w
		into STRICT		tx_valor_valido_w
		from		medico_especialidade
		where		cd_pessoa_fisica	= cd_medico_executor_p
		and		cd_especialidade	= cd_especial_medica_w;
		exception
			when others then
    				tx_valor_valido_w	:=  tx_valor_valido_w;
		end;
	end if;
	END;
END LOOP;
CLOSE C01;

if (coalesce(tx_valor_valido_w::text, '') = '') 	then
	tx_valor_valido_w := 1;
end if;

tx_valor_p			:= tx_valor_valido_w;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE obter_regra_retorno (CD_ESTABELECIMENTO_P bigint, CD_CONVENIO_P bigint, CD_CATEGORIA_P text, CD_PROCEDIMENTO_P bigint, IE_ORIGEM_PROCED_P bigint, DT_PROCEDIMENTO_P timestamp, IE_TIPO_ATENDIMENTO_P bigint, CD_SETOR_ATENDIMENTO_P bigint, CD_MEDICO_EXECUTOR_P text, TX_VALOR_P INOUT bigint, qt_dias_p bigint) FROM PUBLIC;

