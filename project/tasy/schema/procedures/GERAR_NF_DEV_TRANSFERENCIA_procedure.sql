-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_nf_dev_transferencia ( nr_ordem_compra_p bigint, cd_estabelecimento_p bigint, cd_operacao_nf_p bigint, cd_nat_oper_nf_p bigint, cd_serie_nf_p text, nr_nota_fiscal_p text, ds_observacao_p text, nr_seq_modelo_p bigint, nm_usuario_p text, cd_setor_atendimento_p bigint, nr_sequencia_p INOUT bigint, ds_erro_p INOUT text, ds_erro_item_p INOUT text, ds_erro_nota_p INOUT text) AS $body$
DECLARE


nr_sequencia_w			bigint;
cd_cgc_ordem_w			varchar(14);
cd_cgc_estab_w			varchar(14);
cd_estab_ordem_w			bigint;
cd_estab_transf_w			bigint;
nr_nota_fiscal_w			varchar(255);
nr_sequencia_nf_w			bigint	:= 9;
dt_emissao_w			timestamp;
dt_entrada_saida_w		timestamp;
cd_condicao_pagto_w		bigint;
vl_frete_w			double precision;
qt_itens_nota_w			bigint;
ds_erro_w			varchar(255) := '';
ds_erro_item_w			varchar(255) := '';
ds_erro_nota_w			varchar(255) := '';

/*Itens*/

nr_item_oci_w			integer;
cd_material_w			integer;
cd_unidade_medida_compra_w	varchar(30);
vl_unitario_item_nf_w		double precision;
pr_descontos_w			double precision;
ds_material_direto_w		varchar(255);
ds_observacao_item_w		varchar(255);
cd_centro_custo_w			integer;
cd_conta_contabil_w		varchar(20);
pr_desc_financ_w			double precision;
dt_prevista_entrega_w		timestamp;
vl_desconto_oci_w			double precision;
vl_desconto_w			double precision;
nr_seq_conta_financeira_w		bigint;
nr_item_nf_w			integer;
cd_unidade_medida_estoque_w	varchar(30);
qt_prevista_entrega_w		double precision;
qt_item_estoque_w			double precision;
vl_total_item_nf_w			double precision;
vl_liquido_w			double precision;
cd_material_estoque_w		integer;
ie_tipo_conta_w			integer;
cd_centro_conta_w			integer;
qt_nota_w			integer;
nr_seq_lote_w			bigint;
ie_indeterminado_w			varchar(2) := 'N';
dt_validade_w			timestamp;
ds_lote_fornec_w			varchar(20);
ds_barra_w			varchar(255);
ie_calcula_nf_w			varchar(01);
dt_mesano_vigente_w		timestamp;
cd_local_estoque_w		smallint;
ie_tipo_valor_w			varchar(3);

ie_forma_valor_transf_dev_w		varchar(15);
ie_mes_cm_nf_trans_w		varchar(15);
dt_mesano_custo_medio_w		timestamp;
cd_unidade_medida_nf_w		varchar(30);

c01 CURSOR FOR
SELECT	a.nr_item_oci,
	a.cd_material,
	a.cd_unidade_medida_compra,
	a.vl_unitario_material,
	coalesce(a.pr_descontos,0),
	substr(a.ds_material_direto,1,255),
	a.ds_observacao,
	coalesce(a.pr_desc_financ,0),
	coalesce(a.vl_desconto,0),
	sum(qt_prevista_entrega) - obter_qt_oci_trans_nota(a.nr_ordem_compra, a.nr_item_oci,'S')
from	ordem_compra_item a,
	ordem_compra_item_entrega b
where	a.nr_ordem_compra = b.nr_ordem_compra
and	a.nr_item_oci = b.nr_item_oci
and	a.nr_ordem_compra = nr_ordem_compra_p
and	coalesce(a.dt_reprovacao::text, '') = ''
and	coalesce(b.dt_cancelamento::text, '') = ''
GROUP BY a.nr_ordem_compra,
	a.nr_item_oci,
	a.cd_material,
	a.cd_unidade_medida_compra,
	a.vl_unitario_material,
	coalesce(a.pr_descontos,0),
	substr(a.ds_material_direto,1,255),
	a.ds_observacao,
	coalesce(a.pr_desc_financ,0),
	coalesce(a.vl_desconto,0 HAVING	((sum(b.qt_prevista_entrega) - obter_qt_oci_trans_nota(a.nr_ordem_compra, a.nr_item_oci,'S')) > 0)
)
order by a.nr_item_oci;


BEGIN
dt_emissao_w		:= trunc(clock_timestamp(), 'dd');
dt_entrada_saida_w	:= clock_timestamp();

select 	coalesce(max(ie_forma_valor_transf_dev),'NF'),
	coalesce(max(ie_mes_cm_nf_trans),'V'),
	coalesce(max(dt_mesano_vigente),trunc(clock_timestamp(),'month'))
into STRICT	ie_forma_valor_transf_dev_w,
	ie_mes_cm_nf_trans_w,
	dt_mesano_custo_medio_w
from	parametro_estoque
where	cd_estabelecimento = cd_estabelecimento_p;

if (ie_mes_cm_nf_trans_w = 'A') then
	select	trunc(clock_timestamp(),'month')
	into STRICT	dt_mesano_custo_medio_w
	;
end if;

select	cd_estabelecimento,
	cd_estab_transf,
	cd_condicao_pagamento,
	vl_frete
into STRICT	cd_estab_ordem_w,
	cd_estab_transf_w,
	cd_condicao_pagto_w,
	vl_frete_w
from	ordem_compra
where	nr_ordem_compra = nr_ordem_compra_p;

select	nextval('nota_fiscal_seq')
into STRICT	nr_sequencia_w
;

select	substr(obter_cgc_estabelecimento(cd_estab_transf_w),1,14),
	substr(obter_cgc_estabelecimento(cd_estab_ordem_w),1,14)
into STRICT	cd_cgc_estab_w, /* CNPJ Estabelecimento  EMitente da NF MAtheus OS*/
	cd_cgc_ordem_w /* CNPJ do Estabelecimento que gerou a ORDEM, para o qual serÃ¡ emitida a NF */
;

ie_calcula_nf_w	:= substr(coalesce(obter_valor_param_usuario(146, 26, Obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p),'N'),1,1);

if (coalesce(nr_nota_fiscal_p, '0') = '0') then
	begin
	
	nr_nota_fiscal_w	:= nr_sequencia_w + 80000;
	/*select	nvl(max(somente_numero(nr_ultima_nf)), nr_sequencia_w) + 1
	into	nr_nota_fiscal_w
	from	serie_nota_fiscal
	where	cd_serie_nf 		= cd_serie_nf_p
	and	cd_estabelecimento 	= cd_estab_transf_w;

	
	select	count(*)
	into	qt_nota_w
	from	nota_fiscal
	where	cd_estabelecimento = cd_estab_transf_w
	and	cd_cgc_emitente = cd_cgc_estab_w
	and	cd_serie_nf = cd_serie_nf_p
	and	nr_nota_fiscal = nr_nota_fiscal_w
	and     DT_ATUALIZACAO_ESTOQUE is not null;

	if	(qt_nota_w > 0) then
		select	(nvl(max(somente_numero(nr_nota_fiscal)),'0')+1)
		into	nr_nota_fiscal_w
		from	nota_fiscal
		where	cd_estabelecimento = cd_estab_transf_w
		and	cd_cgc_emitente = cd_cgc_estab_w
		and	cd_serie_nf = cd_serie_nf_p;
					
	end if;*/
	end;
else
	nr_nota_fiscal_w	:= nr_nota_fiscal_p;
end if;

insert into nota_fiscal(
	nr_sequencia,		cd_estabelecimento,
	cd_cgc_emitente,		cd_serie_nf,
	nr_nota_fiscal,		nr_sequencia_nf,
	cd_operacao_nf,		dt_emissao,
	dt_entrada_saida,		ie_acao_nf,
	ie_emissao_nf,		ie_tipo_frete,
	vl_mercadoria,		vl_total_nota,
	qt_peso_bruto,		qt_peso_liquido,
	dt_atualizacao,		nm_usuario,
	cd_condicao_pagamento,	cd_cgc,
	cd_pessoa_fisica,		vl_ipi,
	vl_descontos,		vl_frete,
	vl_seguro,		vl_despesa_acessoria,
	ds_observacao,		cd_natureza_operacao,
	vl_desconto_rateio,		ie_situacao,
	nr_interno_conta,		nr_seq_protocolo,
	ds_obs_desconto_nf,	nr_seq_classif_fiscal,
	ie_tipo_nota,		nr_ordem_compra,
	ie_entregue_bloqueto,	cd_setor_digitacao,
	nr_seq_modelo)
values ( nr_sequencia_w,		cd_estab_transf_w,
	cd_cgc_estab_w,		cd_serie_nf_p,
	nr_nota_fiscal_w,		nr_sequencia_nf_w,
	cd_operacao_nf_p,		dt_emissao_w,
	dt_entrada_saida_w,	'1',
	'0',			'0',
	0,			0,
	0,			0,
	clock_timestamp(),			nm_usuario_p,
	cd_condicao_pagto_w,	cd_cgc_ordem_w,
	null,			0,
	0,			vl_frete_w,
	0,			0,
	ds_observacao_p,		cd_nat_oper_nf_p,
	0,			'1',
	null,			null,
	null,			null,
	'ST',			nr_ordem_compra_p,
	'N',			cd_Setor_atendimento_p,
	nr_seq_modelo_p);

CALL gerar_historico_nota_fiscal(nr_sequencia_w, nm_usuario_p, '17', WHEB_MENSAGEM_PCK.get_texto(277835));

OPEN C01;
LOOP
FETCH C01 into
	nr_item_oci_w,
	cd_material_w,
	cd_unidade_medida_compra_w,
	vl_unitario_item_nf_w,
	pr_descontos_w,
	ds_material_direto_w,
	ds_observacao_item_w,
	pr_desc_financ_w,
	vl_desconto_oci_w,
	qt_prevista_entrega_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	select	coalesce(max(nr_item_nf), 0) + 1
	into STRICT	nr_item_nf_w
	from	nota_fiscal_item
	where	nr_sequencia = nr_sequencia_w;
	
	select	cd_material_estoque,
		cd_unidade_medida_estoque,
		CASE WHEN cd_unidade_medida_compra_w=cd_unidade_medida_compra THEN 'UMP' WHEN cd_unidade_medida_compra_w=cd_unidade_medida_estoque THEN 'UME' WHEN cd_unidade_medida_compra_w=cd_unidade_medida_consumo THEN 'UMC'  ELSE 'UMP' END
	into STRICT	cd_material_estoque_w,
		cd_unidade_medida_estoque_w,
		ie_tipo_valor_w
	from	material
	where	cd_material = cd_material_w;
	
	qt_item_estoque_w := obter_quantidade_convertida(cd_material_w,qt_prevista_entrega_w,cd_unidade_medida_compra_w,ie_tipo_valor_w);
	
	select	coalesce(max(vl_unitario_item_nf),0),
		cd_unidade_medida_compra,
		cd_centro_custo,
		cd_local_estoque
	into STRICT	vl_unitario_item_nf_w,
		cd_unidade_medida_nf_w,
		cd_centro_custo_w,
		cd_local_estoque_w
	from	nota_fiscal_item a,
		w_ordem_compra_item_dev b
	where	a.nr_sequencia = b.nr_seq_nf_entrada
	and	a.nr_item_nf = b.nr_item_nf_entrada
	and	b.nr_ordem_compra_dev = nr_ordem_compra_p
	and	b.nr_item_oci_dev = nr_item_oci_w
	group by cd_unidade_medida_compra,
		cd_centro_custo,
		cd_local_estoque;
	
	if (ie_forma_valor_transf_dev_w = 'NF') then
		begin	
		vl_unitario_item_nf_w := sup_obter_valor_convertido(cd_material_w, vl_unitario_item_nf_w, cd_unidade_medida_nf_w, ie_tipo_valor_w);
		end;
	else
		begin
		vl_unitario_item_nf_w := obter_custo_medio_material(cd_estabelecimento_p, dt_mesano_custo_medio_w, cd_material_w);
		vl_unitario_item_nf_w := sup_obter_valor_convertido(cd_material_w, vl_unitario_item_nf_w, cd_unidade_medida_estoque_w, ie_tipo_valor_w);
		end;
	end if;
	
	vl_total_item_nf_w	:= coalesce((qt_prevista_entrega_w * vl_unitario_item_nf_w),0);
	vl_unitario_item_nf_w 	:= coalesce(dividir(vl_total_item_nf_w,qt_prevista_entrega_w),0);
	vl_desconto_w		:= coalesce((dividir((vl_total_item_nf_w * pr_descontos_w), 100) + coalesce(vl_desconto_oci_w,0)),0);
	vl_liquido_w		:= coalesce((vl_total_item_nf_w - vl_desconto_w),0);
	
	ie_tipo_conta_w	:= 3;
	
	if (coalesce(cd_centro_custo_w::text, '') = '') then
		ie_tipo_conta_w	:= 2;
	end if;
	
	SELECT * FROM define_conta_material(
		cd_estabelecimento_p, cd_material_w, ie_tipo_conta_w, 0, 0, 0, 0, 0, 0, 0, cd_local_estoque_w, obter_dados_operacao_nota(cd_operacao_nf_p, 4), trunc(clock_timestamp()), cd_conta_contabil_w, cd_centro_custo_w, null) INTO STRICT cd_conta_contabil_w, cd_centro_custo_w;
		
	insert into nota_fiscal_item(
		nr_sequencia,			cd_estabelecimento,
		cd_cgc_emitente,			cd_serie_nf,
		nr_nota_fiscal,			nr_sequencia_nf,
		nr_item_nf,			cd_natureza_operacao,
		qt_item_nf,			vl_unitario_item_nf,
		vl_total_item_nf,			dt_atualizacao,
		nm_usuario,			vl_frete,
		vl_desconto,			vl_despesa_acessoria,
		cd_material,			cd_local_estoque,
		ds_observacao,			ds_complemento,
		cd_unidade_medida_compra,		qt_item_estoque,
		cd_unidade_medida_estoque,		cd_conta_contabil,
		vl_desconto_rateio,			vl_seguro,
		cd_material_estoque,
		nr_ordem_compra,			vl_liquido,
		pr_desconto,			nr_item_oci,
		dt_entrega_ordem,			nr_seq_conta_financ,
		pr_desc_financ,			cd_centro_custo,
		cd_sequencia_parametro)
	values (	nr_sequencia_w,			cd_estabelecimento_p,
		cd_cgc_estab_w,			cd_serie_nf_p,
		nr_nota_fiscal_w,			nr_sequencia_nf_w,
		nr_item_nf_w,			cd_nat_oper_nf_p,
		qt_prevista_entrega_w,		vl_unitario_item_nf_w,
		vl_total_item_nf_w,			clock_timestamp(),
		nm_usuario_p, 			coalesce(vl_frete_w,0),
 		coalesce(vl_desconto_w,0),		0,
 		cd_material_w, 			cd_local_estoque_w,
		'',						ds_material_direto_w,
		cd_unidade_medida_compra_w,	qt_item_estoque_w,
		cd_unidade_medida_estoque_w,	cd_conta_contabil_w,
		0,				0,
 		cd_material_estoque_w,
		nr_ordem_compra_p,			vl_liquido_w,
		0,							nr_item_oci_w,
		dt_prevista_entrega_w,		nr_seq_conta_financeira_w,
		0,				cd_centro_custo_w,
		philips_contabil_pck.get_parametro_conta_contabil);

	end;
end loop;
close c01;

if (ie_calcula_nf_w = 'S') then
	begin
	CALL atualiza_total_nota_fiscal(nr_sequencia_w,nm_usuario_p);
	CALL gerar_vencimento_nota_fiscal(nr_sequencia_w, nm_usuario_p);
	SELECT * FROM consistir_nota_fiscal(nr_sequencia_w, nm_usuario_p, ds_erro_item_w, ds_erro_nota_w) INTO STRICT ds_erro_item_w, ds_erro_nota_w;
	end;
end if;

select 	count(*)
into STRICT	qt_itens_nota_w
from	nota_fiscal_item
where	nr_sequencia = nr_sequencia_w;

if (qt_itens_nota_w = 0) then
	begin
	delete FROM nota_fiscal where nr_sequencia = nr_sequencia_w;
	nr_sequencia_w	:= 0;
	ds_erro_nota_w	:= WHEB_MENSAGEM_PCK.get_texto(277836);
	end;
end if;

if (qt_itens_nota_w > 0) and (coalesce(ds_erro_item_w::text, '') = '') and (coalesce(ds_erro_nota_w::text, '') = '') and (coalesce(ds_erro_w::text, '') = '') then
	begin
	if (ie_calcula_nf_w = 'S') then
		begin
		CALL Atualizar_Nota_Fiscal(nr_sequencia_w,'I',nm_usuario_p,3);
		exception when others then
			rollback;
			delete	FROM nota_fiscal
			where 	nr_sequencia = nr_sequencia_w;
			nr_sequencia_w	:= 0;
			commit;
			CALL wheb_mensagem_pck.exibir_mensagem_abort(sqlerrm(SQLSTATE));
		end;
	end if;

	update	w_ordem_compra_item_dev
	set	nr_seq_nf_dev	= nr_sequencia_w
	where 	nr_ordem_compra_dev = nr_ordem_compra_p
	and	coalesce(nr_seq_nf_dev::text, '') = '';
	end;
end if;

if (ds_erro_item_w IS NOT NULL AND ds_erro_item_w::text <> '') or (ds_erro_nota_w IS NOT NULL AND ds_erro_nota_w::text <> '') then
	begin
	delete	FROM nota_fiscal
	where	nr_sequencia = nr_sequencia_w;	
	
	ds_erro_w := nr_sequencia_w;
	nr_sequencia_w	:= 0;
	end;
end if;	

nr_sequencia_p	:= nr_sequencia_w;
ds_erro_p	:= substr(ds_erro_w,1,255);
ds_erro_item_p	:= substr(ds_erro_item_w,1,255);
ds_erro_nota_p	:= substr(ds_erro_nota_w,1,255);

commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_nf_dev_transferencia ( nr_ordem_compra_p bigint, cd_estabelecimento_p bigint, cd_operacao_nf_p bigint, cd_nat_oper_nf_p bigint, cd_serie_nf_p text, nr_nota_fiscal_p text, ds_observacao_p text, nr_seq_modelo_p bigint, nm_usuario_p text, cd_setor_atendimento_p bigint, nr_sequencia_p INOUT bigint, ds_erro_p INOUT text, ds_erro_item_p INOUT text, ds_erro_nota_p INOUT text) FROM PUBLIC;

