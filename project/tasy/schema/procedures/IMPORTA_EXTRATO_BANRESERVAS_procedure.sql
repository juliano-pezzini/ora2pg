-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE importa_extrato_banreservas ( nr_seq_extrato_p bigint) AS $body$
DECLARE


nr_seq_conta_W		banco_extrato.nr_seq_conta%type;
vl_saldo_inicial_w	banco_extrato.vl_saldo_inicial%type;
vl_saldo_final_w	banco_extrato.vl_saldo_final%type;
dt_saldo_inicial_w	banco_extrato.dt_inicio%type;
dt_saldo_final_w	banco_extrato.dt_final%type;
nr_seq_extrato_w	banco_extrato.nr_sequencia%type;
nr_seq_conta_nova_w	banco_extrato.nr_seq_conta%type;
cd_banco_w			banco_estabelecimento.cd_banco%type;
ie_deb_cred_w		banco_extrato_lanc.ie_deb_cred%type;
qt_registro_w		integer := 0;
vl_lancamento_deb_w banco_extrato_lanc.vl_lancamento%type;
vl_lancamento_cred_w banco_extrato_lanc.vl_lancamento%type;

c01 CURSOR FOR
  SELECT	regexp_substr(ds_conteudo, '(".*?"|[^",]+)', 1, 1) as nr_conta,
			regexp_substr(ds_conteudo, '(".*?"|[^",]+)', 1, 2) as dt_lancamento,
			regexp_substr(ds_conteudo, '(".*?"|[^",]+)', 1, 3) as ds_historico,
			regexp_substr(ds_conteudo, '(".*?"|[^",]+)', 1, 4) as nr_documento,
			regexp_substr(ds_conteudo, '(".*?"|[^",]+)', 1, 5) as vl_lancamento_deb,
			regexp_substr(ds_conteudo, '(".*?"|[^",]+)', 1, 6) as vl_lancamento_cred,
			regexp_substr(ds_conteudo, '(".*?"|[^",]+)', 1, 7) as vl_saldo_inicial,
			regexp_substr(ds_conteudo, '(".*?"|[^",]+)', 1, 8) as ds_observacao,
			regexp_substr(ds_conteudo, '(".*?"|[^",]+)', 1, 9) as referencia,
			count(1) over () as ultima
from w_interf_concil
where	nr_seq_conta	= nr_seq_conta_W
order by  nr_sequencia asc;
	
BEGIN

Select	max(b.nr_seq_conta),
		max(a.cd_banco)
into STRICT	nr_seq_conta_w,
		cd_banco_w
from	banco_estabelecimento a,
		banco_extrato b
where	b.nr_seq_conta	= a.nr_sequencia
and		b.nr_sequencia	= nr_seq_extrato_p;

for r_c01_w in c01() loop

qt_registro_w := qt_registro_w + 1;

if (qt_registro_w > 1) then
	
	vl_lancamento_deb_w := to_number(regexp_substr(r_c01_w.vl_lancamento_deb, '[^"]+', 1, 1),'999999999999999.99');
	vl_lancamento_cred_w := to_number(regexp_substr(r_c01_w.vl_lancamento_cred, '[^"]+', 1, 1),'999999999999999.99');

	if (qt_registro_w = 2) then
		dt_saldo_inicial_w := to_date(r_c01_w.dt_lancamento,'dd/mm/yyyy');
		vl_saldo_inicial_w := to_number(regexp_substr(r_c01_w.vl_saldo_inicial, '[^"]+', 1, 1),'999999999999999.99');
	end if;

	if (r_c01_w.ultima = qt_registro_w) then
		dt_saldo_final_w := to_date(r_c01_w.dt_lancamento,'dd/mm/yyyy');
		vl_saldo_final_w := to_number(regexp_substr(r_c01_w.vl_saldo_inicial, '[^"]+', 1, 1),'999999999999999.99') + vl_lancamento_deb_w - vl_lancamento_cred_w;
	end if;

	if (vl_lancamento_deb_w <> 0.00) then
		ie_deb_cred_w := 'D';
	elsif (vl_lancamento_cred_w <> 0.00) then
		ie_deb_cred_w := 'C';
	end if;

	select	max(a.nr_sequencia)
	into STRICT	nr_seq_conta_nova_w
	from	banco_estabelecimento a
	where (a.nr_sequencia = nr_seq_conta_w or
	not exists (SELECT	1
	from	banco_estabelecimento x
	where	x.cd_conta		= a.cd_conta
	and		x.nr_sequencia		= nr_seq_conta_w))
	and		somente_numero(a.cd_conta) = somente_numero(r_c01_w.nr_conta)
	and		cd_banco				= cd_banco_w;

	if (coalesce(nr_seq_conta_nova_w::text, '') = '') then

		select	max(a.nr_sequencia)
		into STRICT	nr_seq_conta_nova_w
		from	banco_estabelecimento a
		where (a.nr_sequencia = nr_seq_conta_w or
		  not exists (SELECT	1
		  from	banco_estabelecimento x
		  where	x.ie_digito_conta	= a.ie_digito_conta
		  and	x.cd_conta			= a.cd_conta
		  and	x.nr_sequencia		= nr_seq_conta_w))
		and	somente_numero(a.cd_conta)		= somente_numero(r_c01_w.nr_conta)
		and	cd_banco						= cd_banco_w;

	end if;

	if (nr_seq_conta_w	= nr_seq_conta_nova_w) then

		nr_seq_extrato_w	:= nr_seq_extrato_p;
		nr_seq_conta_nova_w	:= nr_seq_conta_w;

		update	banco_extrato
		set	vl_saldo_inicial	= vl_saldo_inicial_w,
			vl_saldo_final		= vl_saldo_final_w,
			dt_inicio		= dt_saldo_inicial_w,
			dt_final		= dt_saldo_final_w,
			dt_atualizacao		= clock_timestamp()
		where	nr_sequencia		= nr_seq_extrato_w;

	elsif (nr_seq_conta_nova_w IS NOT NULL AND nr_seq_conta_nova_w::text <> '') then

		select	nextval('banco_extrato_seq')
		into STRICT	nr_seq_extrato_w
		;

		insert	into banco_extrato(dt_atualizacao,
		  dt_atualizacao_nrec,
		  dt_final,
		  dt_importacao,
		  dt_inicio,
		  nm_usuario,
		  nm_usuario_nrec,
		  nr_seq_conta,
		  nr_sequencia,
		  vl_saldo_final,
		  vl_saldo_inicial)
		values (clock_timestamp(),
		  clock_timestamp(),
		  dt_saldo_final_w,
		  clock_timestamp(),
		  dt_saldo_inicial_w,
		  'Tasy',
		  'Tasy',
		  nr_seq_conta_nova_w,
		  nr_seq_extrato_w,
		  vl_saldo_final_w,
		  vl_saldo_inicial_w);

	end if;

    if (nr_seq_conta_nova_w IS NOT NULL AND nr_seq_conta_nova_w::text <> '') then
    
      if (ie_deb_cred_w = 'D')  then 
      
        insert	into banco_extrato_lanc(nr_documento,
          dt_movimento,
          vl_lancamento,
          ie_deb_cred,
          nr_seq_extrato,
          nr_sequencia,
          nm_usuario,
          ie_conciliacao,
          dt_atualizacao,
          ds_historico)
        values (r_c01_w.nr_documento,
          to_date(r_c01_w.dt_lancamento,'dd/mm/yyyy'),
          vl_lancamento_deb_w,
          ie_deb_cred_w,
          nr_seq_extrato_w,
          nextval('banco_extrato_lanc_seq'),
          'Tasy',
          'N',
          clock_timestamp(),
          r_c01_w.ds_historico);

      elsif (ie_deb_cred_w = 'C') then
      
        insert	into banco_extrato_lanc(nr_documento,
          dt_movimento,
          vl_lancamento,
          ie_deb_cred,
          nr_seq_extrato,
          nr_sequencia,
          nm_usuario,
          ie_conciliacao,
          dt_atualizacao,
          ds_historico)
        values (r_c01_w.nr_documento,
          to_date(r_c01_w.dt_lancamento,'dd/mm/yyyy'),
          vl_lancamento_cred_w,
          ie_deb_cred_w,
          nr_seq_extrato_w,
          nextval('banco_extrato_lanc_seq'),
          'Tasy',
          'N',
          clock_timestamp(),
          r_c01_w.ds_historico);

      end if;

    end if;

end if;

end loop;

delete 	from w_interf_concil
where	nr_seq_conta	= nr_seq_conta_W;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE importa_extrato_banreservas ( nr_seq_extrato_p bigint) FROM PUBLIC;

