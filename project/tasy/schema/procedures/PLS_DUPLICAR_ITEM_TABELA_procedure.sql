-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_duplicar_item_tabela ( cd_tabela_servico_p bigint, cd_procedimento_p bigint, dt_inicio_vigencia_p timestamp, dt_vigencia_p timestamp, vl_reajuste_p bigint, ie_tabela_duplic_p bigint, nr_seq_preco_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE

					
	/*ie_tabela_duplic_p	1 - PRECO_SERVICO
			2 - PRECO_AMB
			3 - PRECO TUSS*/
	nr_seq_preco_tuss_w	preco_tuss.nr_sequencia%type;
			
	
BEGIN

	if (ie_tabela_duplic_p	= 1) then
		insert into preco_servico(	cd_estabelecimento,
						cd_tabela_servico,
						cd_procedimento,
						dt_inicio_vigencia,
						vl_servico,
						cd_moeda,
						dt_atualizacao,
						nm_usuario,
						ie_origem_proced,
						cd_unidade_medida,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						dt_inativacao)
					(SELECT	cd_estabelecimento,
						cd_tabela_servico_p,
						cd_procedimento,
						to_date(to_char(dt_vigencia_p,'dd/mm/yyyy')),
						vl_servico + ((vl_servico * vl_reajuste_p) / 100),
						cd_moeda,
						clock_timestamp(),
						nm_usuario_p,
						ie_origem_proced,
						cd_unidade_medida,
						clock_timestamp(),
						nm_usuario_p,
						dt_inativacao
					from	preco_servico
					where	cd_estabelecimento	= cd_estabelecimento_p
					and	cd_tabela_servico	= cd_tabela_servico_p
					and	cd_procedimento		= cd_procedimento_p
					and	dt_inicio_vigencia	= dt_inicio_vigencia_p);
					
	elsif (ie_tabela_duplic_p	= 2) then
        BEGIN
            insert into preco_amb(cd_edicao_amb,
                cd_procedimento,
                vl_procedimento,
                cd_moeda,
                dt_atualizacao,
                nm_usuario,
                vl_custo_operacional,
                vl_anestesista,
                vl_medico,
                vl_filme,
                qt_filme,
                nr_auxiliares,
                nr_incidencia,
                qt_porte_anestesico,
                ie_origem_proced,
                vl_auxiliares,
                dt_inicio_vigencia,
                nr_sequencia)
            (SELECT	cd_tabela_servico_p,
                cd_procedimento,
                vl_procedimento + ((vl_procedimento * vl_reajuste_p) / 100),
                cd_moeda,
                clock_timestamp(),
                nm_usuario_p,
                vl_custo_operacional + ((vl_custo_operacional * vl_reajuste_p) / 100),
                vl_anestesista + ((vl_anestesista * vl_reajuste_p) / 100),
                vl_medico + ((vl_medico * vl_reajuste_p) / 100),
                vl_filme + ((vl_filme * vl_reajuste_p) / 100),
                qt_filme,
                nr_auxiliares,
                nr_incidencia,
                qt_porte_anestesico,
                ie_origem_proced,
                vl_auxiliares + ((vl_auxiliares * vl_reajuste_p) / 100),
                to_date(to_char(dt_vigencia_p,'dd/mm/yyyy'),'dd/mm/yyyy'),
                nextval('preco_amb_seq')
            from	preco_amb
            where	cd_edicao_amb	= cd_tabela_servico_p
            and	cd_procedimento		= cd_procedimento_p
            and	coalesce(dt_inicio_vigencia,clock_timestamp())	= coalesce(dt_inicio_vigencia_p,clock_timestamp()));

            update	preco_amb
            set	dt_final_vigencia	= to_date(to_char(dt_vigencia_p,'dd/mm/yyyy'),'dd/mm/yyyy') -1
            where	nr_sequencia	= nr_seq_preco_p;
      EXCEPTION
      WHEN OTHERS THEN
        CALL wheb_mensagem_pck.exibir_mensagem_abort(333087);
      END;

	elsif (ie_tabela_duplic_p	= 3) then

		select	nextval('preco_tuss_seq')
		into STRICT	nr_seq_preco_tuss_w
		;

        BEGIN			
            insert into preco_tuss(		nr_sequencia,
                            cd_edicao_amb,
                            cd_procedimento,
                            dt_inicio_vigencia,
                            ie_origem_proced,
                            ie_situacao,
                            nm_usuario,
                            vl_procedimento,
                            cd_moeda,
                            dt_atualizacao,	
                            dt_atualizacao_nrec,
                            nm_usuario_nrec,
                            cd_porte_cbhpm,
                            nr_auxiliares_amb,
                            nr_auxiliares_cbhpm,
                            nr_porte_anest_amb,
                            nr_porte_anest_cbhpm,
                            qt_filme_amb,
                            qt_filme_cbhpm,
                            qt_incidencia_amb,
                            qt_incidencia_cbhpm,
                            qt_uco,
                            tx_porte,
                            vl_anestesista,
                            vl_auxiliares,
                            vl_custo_operacional,
                            vl_filme,
                            vl_medico
                            )
                        (SELECT	nr_seq_preco_tuss_w,	
                            cd_edicao_amb,
                            cd_procedimento,
                            to_date(to_char(dt_vigencia_p,'dd/mm/yyyy')),
                            ie_origem_proced,
                            ie_situacao,
                            nm_usuario,	
                            vl_procedimento + ((vl_procedimento * vl_reajuste_p) / 100),
                            cd_moeda,
                            clock_timestamp(),
                            clock_timestamp(),
                            nm_usuario_p,
                            cd_porte_cbhpm,
                            nr_auxiliares_amb,
                            nr_auxiliares_cbhpm,
                            nr_porte_anest_amb,
                            nr_porte_anest_cbhpm,
                            qt_filme_amb,
                            qt_filme_cbhpm,
                            qt_incidencia_amb,
                            qt_incidencia_cbhpm,
                            qt_uco,
                            tx_porte,
                            vl_anestesista,
                            vl_auxiliares,
                            vl_custo_operacional,
                            vl_filme,
                            vl_medico                                
                        from	preco_tuss
                        where	nr_sequencia	= cd_tabela_servico_p --nesse caso passa a sequência por parâmetro
                        and	cd_procedimento		= cd_procedimento_p
                        and	dt_inicio_vigencia	= dt_inicio_vigencia_p);

            update	preco_tuss
            set	dt_final_vigencia	=  to_date(to_char(dt_vigencia_p,'dd/mm/yyyy'),'dd/mm/yyyy') -1
            where	nr_sequencia	= nr_seq_preco_p;

      EXCEPTION
      WHEN OTHERS THEN
        CALL wheb_mensagem_pck.exibir_mensagem_abort(333087);
      END;
		
	end if;	

	commit;
	
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_duplicar_item_tabela ( cd_tabela_servico_p bigint, cd_procedimento_p bigint, dt_inicio_vigencia_p timestamp, dt_vigencia_p timestamp, vl_reajuste_p bigint, ie_tabela_duplic_p bigint, nr_seq_preco_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

