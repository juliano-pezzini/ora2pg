-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_nota_cred_dep_ident (nr_seq_deposito_p bigint, vl_devolver_p bigint, cd_estabelecimento_p text, nr_titulo_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
nr_seq_nota_credito_w		bigint;
cd_pessoa_fisica_w		varchar(10);
cd_cgc_w			varchar(14);
nr_identificacao_w		varchar(30);
nr_seq_conta_banco_w		bigint;
cd_moeda_cp_w			integer;
nr_seq_regra_w			bigint;
ie_acao_w			varchar(3);
nr_seq_trans_contab_nota_w	bigint;
nr_seq_trans_baixa_tit_pagar_w	bigint;
nr_seq_baixa_w			bigint;
vl_regra_ger_nc_w		double precision;
nr_seq_motivo_w			regra_acao_pag_duplic.nr_seq_motivo%type;
/* Projeto Multimoeda - Variáveis */
vl_devolver_estrang_w		double precision;
vl_complemento_w		double precision;
vl_cotacao_w			double precision;
cd_moeda_dep_w			integer;
cd_moeda_empresa_w		integer;
					

BEGIN 
select	cd_pessoa_fisica, 
	cd_cgc, 
	nr_identificacao, 
	nr_seq_conta_banco, 
	vl_cotacao, 
	cd_moeda 
into STRICT	cd_pessoa_fisica_w, 
	cd_cgc_w, 
	nr_identificacao_w, 
	nr_seq_conta_banco_w, 
	vl_cotacao_w, 
	cd_moeda_dep_w 
from	deposito_identificado 
where	nr_sequencia = nr_seq_deposito_p;
 
/* Projeto Multimoeda - Busca a moeda padrão da empresa. */
 
select	obter_moeda_padrao_empresa(cd_estabelecimento_p,'E') 
into STRICT	cd_moeda_empresa_w
;
 
begin 
select	a.cd_moeda_padrao 
into STRICT	cd_moeda_cp_w 
from	parametros_contas_pagar a 
where	a.cd_estabelecimento	= cd_estabelecimento_p;
exception 
	when no_data_found then 
	CALL wheb_mensagem_pck.exibir_mensagem_abort(188942);
end;
 
SELECT * FROM obter_regra_acao_pag_duplic(clock_timestamp(), cd_estabelecimento_p, nm_usuario_p, nr_seq_regra_w, ie_acao_w) INTO STRICT nr_seq_regra_w, ie_acao_w;
 
begin 
select	max(nr_seq_trans_contab_nota), 
	max(nr_seq_trans_baixa_tit_pagar), 
	max(vl_minimo_nc), 
	max(nr_seq_motivo) 
into STRICT	nr_seq_trans_contab_nota_w, 
	nr_seq_trans_baixa_tit_pagar_w, 
	vl_regra_ger_nc_w, 
	nr_seq_motivo_w 
from	regra_acao_pag_duplic 
where	nr_sequencia	= nr_seq_regra_w;	
exception 
when others then 
	nr_seq_trans_contab_nota_w	:= null;
	nr_seq_trans_baixa_tit_pagar_w	:= null;
	vl_regra_ger_nc_w		:= null;
	nr_seq_motivo_w			:= null;
end;
 
if (ie_acao_w in ('NC','NCM')) and 
	((coalesce(vl_regra_ger_nc_w::text, '') = '') or (vl_devolver_p >= vl_regra_ger_nc_w)) then 
	select	nextval('nota_credito_seq') 
	into STRICT	nr_seq_nota_credito_w 
	;
 
	/* Projeto Multimoeda - Verifica se o depósito é moeda estrangeira, caso positivo calcula os valores para gravar na nota de crédito.*/
 
	if (coalesce(cd_moeda_dep_w,cd_moeda_empresa_w) <> cd_moeda_empresa_w and coalesce(vl_cotacao_w,0) <> 0) then 
		vl_devolver_estrang_w := vl_devolver_p / vl_cotacao_w;
		vl_complemento_w := vl_devolver_p - vl_devolver_estrang_w;
	else 
		vl_devolver_estrang_w := null;
		vl_complemento_w := null;
		vl_cotacao_w := null;
		cd_moeda_dep_w := null;
	end if;
	 
	insert into nota_credito(nr_sequencia, 
		cd_estabelecimento, 
		dt_atualizacao, 
		nm_usuario, 
		dt_atualizacao_nrec, 
		nm_usuario_nrec, 
		vl_nota_credito, 
		cd_pessoa_fisica, 
		cd_cgc, 
		dt_nota_credito, 
		dt_vencimento, 
		cd_moeda, 
		tx_juros, 
		tx_multa, 
		cd_tipo_taxa_juro, 
		cd_tipo_taxa_multa, 
		ie_origem, 
		vl_saldo, 
		nr_lote_contabil, 
		ds_observacao, 
		ie_situacao, 
		nr_seq_tit_rec_cobr, 
		nr_seq_regra_pag_duplic, 
		nr_seq_trans_fin_contab, 
		nr_seq_trans_baixa_tit_pagar, 
		nr_seq_conta_banco, 
		nr_titulo_receber, 
		nr_seq_motivo, 
		vl_nota_cred_estrang, 
		vl_complemento, 
		vl_cotacao) 
	values (nr_seq_nota_credito_w, 
		cd_estabelecimento_p, 
		clock_timestamp(), 
		nm_usuario_p, 
		clock_timestamp(), 
		nm_usuario_p, 
		vl_devolver_p, 
		cd_pessoa_fisica_w, 
		cd_cgc_w, 
		clock_timestamp(), 
		null, 
		coalesce(cd_moeda_dep_w,cd_moeda_cp_w), -- Projeto Multimoeda - grava a moeda do depósito quando não for nula 
		null, 
		null, 
		null, 
		null, 
		'DI', 
		vl_devolver_p, 
		null, 
		substr(wheb_mensagem_pck.get_texto(302153),1,4000), 
		'A', 
		null, 
		nr_seq_regra_w, 
		nr_seq_trans_contab_nota_w, 
		nr_seq_trans_baixa_tit_pagar_w, 
		nr_seq_conta_banco_w, 
		nr_titulo_p, 
		nr_seq_motivo_w, 
		vl_devolver_estrang_w, 
		vl_complemento_w, 
		vl_cotacao_w);
		 
	select	max(nr_sequencia) 
	into STRICT	nr_seq_baixa_w 
	from	titulo_receber_liq 
	where	nr_titulo = nr_titulo_p;
	 
	update	titulo_receber_liq 
	set	ds_observacao 	= substr(wheb_mensagem_pck.get_texto(303067,	'NR_SEQ_NOTA_CRED=' || nr_seq_nota_credito_w),1,255) 
	where	nr_sequencia 	= nr_seq_baixa_w 
	and	nr_titulo	= nr_titulo_p;
end if;
	 
--commit; 
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_nota_cred_dep_ident (nr_seq_deposito_p bigint, vl_devolver_p bigint, cd_estabelecimento_p text, nr_titulo_p bigint, nm_usuario_p text) FROM PUBLIC;

