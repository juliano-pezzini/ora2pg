-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE converte_codigo_barras ( cd_mat_barra_p text, cd_estabelecimento_p bigint, ie_tipo_barra_p text, cd_local_estoque_p text, cd_material_p INOUT bigint, qt_material_p INOUT bigint, nr_seq_lote_p INOUT bigint, nr_seq_loteagrup_p INOUT bigint, cd_kit_mat_p INOUT bigint, ds_validade_p INOUT text, ds_material_p INOUT text, cd_unid_med_p INOUT text, nr_etiqueta_lp_p INOUT text, ds_erro_p INOUT text, cd_funcao_p text default null, nr_requisicao_p text default null, cd_estabelecimento_origem_p bigint default null) AS $body$
DECLARE


/*	
	Para melhor tratamento do erro no retorno ao programa criamos 4 digitos no inicio da mensagem para:
	#999 onde # significa que existe um tratamento a ser feito (caso n?o exista e erro com abort)
	001 - Data de validade vencida
	002 - Existe lote com data menor que a selecionada (somente aviso)
	003 - Existe lote com data menor que a selecionada (aviso e abort)
	004 - Lote bloqueado para consumo
    
    cd_estabelecimento_origem_p - Parametro passado apenas em chamada no recebimento controle transferencia
    ao qual tem o intuito de fazer com que verificacao de lote seja com base no estab. da saida
*/
cd_barras_material_w		varchar(4000);
ie_tipo_barra_w			varchar(20);
ds_tipo_barra_w			varchar(255);
ds_Lote_w			varchar(10);
cd_mat_barra_w			varchar(20);
ds_material_w			varchar(255);
cd_unid_med_w			varchar(30);
ie_situacao_w			varchar(001);
qt_material_w			double precision 	:= 0;
cd_kit_mat_w			integer	:= 0;
cd_material_w			integer;
qt_min_multiplo_w			double precision	:= 0;
dt_validade_w			timestamp;
nr_seq_lote_w			bigint;
nr_seq_LoteAgrup_w		bigint;
cd_digito_w			smallint;
cd_cod_barra_w			varchar(11);
cd_cgc_w			varchar(14);
nr_lote_fornec_w			bigint;
ie_avisa_val_menor_w		varchar(010);
ie_barras_lote_fornec_w		varchar(010);
dt_validade_ww			timestamp;
nr_seq_lote_fornec_agrup_w		bigint;
ds_validade_w			varchar(20);
nr_seq_processo_w			bigint;
nr_seq_frac_w			bigint;
nr_seq_digito_w			smallint;
ie_fracionamento_adep_w		varchar(1)	:= 'N';
cd_produto_frac_w			bigint;
ds_produto_frac_w			varchar(255);
qt_produto_frac_w			double precision	:= 0;
cd_um_prod_frac_w		varchar(30);
ie_tipo_processo_w			varchar(1);
ie_bloqueio_lote_w			varchar(1);
ie_bloqueio_w			varchar(1);
nr_sequencia_w			bigint;
nr_sequencia_ww			bigint;
nr_sequencia_www			bigint;
nr_sequencia_lp_w			bigint;
ie_permite_lote_inativo_w		varchar(2);
ie_situacao_lote_w			varchar(2);
nr_seq_mat_regra_barra_w		bigint;
qt_dias_aviso_validade_w		integer;
dt_validade_permitida_w		timestamp;
ie_consiste_estab_lote_w		varchar(1);
cd_estab_lote_w			smallint;
ie_estoque_lote_w			varchar(1);
ie_situacao_loteagrup_w		varchar(1);
ie_valida_lote_fornec_w		varchar(1);
cd_local_estoque_w		smallint;
ie_avisa_w 			varchar(1);
qt_dias_validade_w			bigint	:= 0;
qt_dias_val_minima_w		bigint;
ie_obriga_barras_lote_w		varchar(1);
qt_existe_w			bigint;
ie_origem_lote_w			material_lote_fornec.ie_origem_lote%type;
ie_local_estoque_lote_w		varchar(1) := 'N';
cd_funcao_w			varchar(10)    := '';
ie_permite_agrup_inventario_w	varchar(1);
dt_dia_w					varchar(2);
cd_barras_gtin_w		varchar(4000);			
ie_bloqueia_movto_perda_w	parametro_estoque.ie_bloqueia_movto_perda%type;		
ie_tipo_perda_w			operacao_estoque.ie_tipo_perda%type;	
ie_agrupador_w prescr_mat_hor.ie_agrupador%type;
ie_frac_w varchar(1);
ie_valida_etiqueta_frac_w varchar(1);

C01 CURSOR FOR
SELECT 	nr_sequencia,
	dt_validade	
from	material_lote_fornec a
where	dt_validade < dt_validade_w
and	cd_material = cd_material_w
and	cd_estabelecimento = cd_estabelecimento_p
and	dt_validade > clock_timestamp()
--AND	qt_material > obter_qt_lote_fornec_utilizado(nr_sequencia)
and (ie_estoque_lote_w = 'N' or coalesce(ie_local_estoque_lote_w,'N') = 'N')
and (ie_bloqueio_lote_w = 'N' or coalesce(ie_bloqueio,'N') = 'N')
and	ie_situacao = 'A'

union all

SELECT 	nr_sequencia,
	dt_validade	
from	material_lote_fornec a

where	obter_saldo_estoque_lote(cd_estabelecimento_p,cd_material_w, cd_local_estoque_w,pkg_date_utils.start_of(clock_timestamp(), 'MM', null),nr_sequencia) > 0
and	dt_validade < dt_validade_w
and	dt_validade > clock_timestamp()
and	ie_situacao = 'A'
and	cd_material = cd_material_w
and	cd_estabelecimento = cd_estabelecimento_p
and	ie_estoque_lote_w = 'S'
and	coalesce(ie_local_estoque_lote_w,'N') = 'S'
and (ie_bloqueio_lote_w = 'N' or coalesce(ie_bloqueio,'N') = 'N')
order by dt_validade desc;




BEGIN

if (obter_funcao_ativa = -1113) then
	ie_valida_lote_fornec_w := obter_param_usuario(-1113, 50, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, cd_estabelecimento_p, ie_valida_lote_fornec_w);
    ie_valida_etiqueta_frac_w := obter_param_usuario(-1113, 68, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, cd_estabelecimento_p, ie_valida_etiqueta_frac_w);
end if;

ie_permite_agrup_inventario_w := obter_param_usuario(143, 290, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, cd_estabelecimento_p, ie_permite_agrup_inventario_w);

/*if	(obter_funcao_ativa = 143) then
	obter_param_usuario(143,290,obter_perfil_ativo,wheb_usuario_pck.get_nm_usuario,cd_estabelecimento_p,ie_permite_agrup_inventario_w);
end if;*/
cd_barras_material_w := cd_mat_barra_p;

SELECT * FROM verifica_tipo_barras(cd_barras_material_w, 'S', ie_tipo_barra_w, ds_tipo_barra_w) INTO STRICT ie_tipo_barra_w, ds_tipo_barra_w;

if (coalesce(ie_tipo_barra_w,'N') <> 'N') then
	cd_barras_material_w := substr(cd_barras_material_w,length(ie_tipo_barra_w) + 1,4000);
end if;

if (ie_tipo_barra_w = 'P00') then
    cd_barras_gtin_w := converte_codigo_barras_DMATRIX(cd_barras_material_w, cd_estabelecimento_p, '01', cd_barras_gtin_w);
end if;																				
dt_validade_w        			:= null;
qt_material_w              		:= 0;
nr_seq_lote_w              		:= 0;
nr_seq_LoteAgrup_w		:= 0;
cd_material_w			:= 0;
ie_situacao_w			:= 'A';
ds_erro_p				:= null;

begin
CALL WHEB_ADM_PCK.set_cd_estabelecimento(cd_estabelecimento_p);

nr_seq_mat_regra_barra_w	:= coalesce(WHEB_ADM_PCK.get_mat_regra_codigo_barras, 2);
ie_avisa_val_menor_w	:= coalesce(WHEB_ADM_PCK.get_se_avisa_validade_barras, 'N');
ie_barras_lote_fornec_w	:= coalesce(WHEB_ADM_PCK.get_se_lote_fornec_barras, 'N');
ie_bloqueio_lote_w		:= coalesce(WHEB_ADM_PCK.get_se_bloqueio_lote, 'N');
ie_permite_lote_inativo_w	:= coalesce(WHEB_ADM_PCK.get_se_permite_lote_inativo, 'S');
qt_dias_aviso_validade_w	:= coalesce(WHEB_ADM_PCK.get_qt_dias_aviso_validade, 0);
ie_consiste_estab_lote_w	:= coalesce(WHEB_ADM_PCK.get_ie_consiste_estab_lote, 'N');
exception when others then
	nr_seq_mat_regra_barra_w	:= 2;
	ie_avisa_val_menor_w	:= 'N';
	ie_barras_lote_fornec_w	:= 'N';
	ie_bloqueio_lote_w		:= 'N';
	ie_permite_lote_inativo_w	:= 'S';
	qt_dias_aviso_validade_w	:= 0;
	ie_consiste_estab_lote_w	:= 'N';
end;

dt_validade_permitida_w	:= trunc(clock_timestamp(),'dd') + qt_dias_aviso_validade_w;

-- LD = Lote Dispensacao, checagem automatica
if (cd_mat_barra_p IS NOT NULL AND cd_mat_barra_p::text <> '') and (ie_valida_lote_fornec_w = 'S' and (coalesce(ie_tipo_barra_p::text, '') = '' or ie_tipo_barra_p <> 'LD')) and
	((length(cd_barras_material_w) <> 12) or (substr(cd_barras_material_w,1,1) <> '9')) then
	
	if (length(cd_mat_barra_p) = 12) then          			
		cd_cod_barra_w	:= substr(cd_mat_barra_p,3,12);
	else
		cd_cod_barra_w	:= cd_mat_barra_p;
	end if;
	
	select	coalesce(max(a.cd_material),0),
			coalesce(max(a.nr_sequencia),0),
			max(a.dt_validade)
	into STRICT	cd_material_w,
			nr_seq_lote_w,
			dt_validade_w
	from	material_Lote_Fornec a
	where	((coalesce(lpad(a.nr_sequencia,10,'0'),a.cd_material) = lpad(cd_cod_barra_w,10,'0')) or (coalesce(lpad(a.nr_sequencia||a.nr_digito_verif,10,'0'),a.cd_material) = lpad(cd_cod_barra_w,10,'0')));
	
	select	coalesce(max(cd_material),0),
			coalesce(max(nr_seq_lote_fornec),0)
	into STRICT	cd_material_w,
			nr_seq_lote_w
	from	adep_processo_item
	where	cd_material = cd_material_w
	and		nr_seq_lote_fornec = nr_seq_lote_w;

	if (cd_material_w = 0) then
		CALL WHEB_MENSAGEM_PCK.Exibir_Mensagem_Abort(212876);
	end if;
		
end if;

if (cd_material_w = 0) and (coalesce(nr_seq_mat_regra_barra_w, 2) = 3) and
	((length(cd_barras_material_w) <> 12) or (substr(cd_barras_material_w,1,1) <> '9')) then
	begin
     	
	/*Criada especifico para o HAOC*/

	SELECT * FROM Converte_Codigo_Barras_tipo3(
			cd_barras_material_w, coalesce(cd_estabelecimento_origem_p,cd_estabelecimento_p), cd_material_w, nr_seq_lote_w, dt_validade_w) INTO STRICT cd_material_w, nr_seq_lote_w, dt_validade_w;
	--se nao encontrou lote fornecedor, faz a busca pelo GTIN
    if (cd_material_w = 0 and (cd_barras_gtin_w IS NOT NULL AND cd_barras_gtin_w::text <> '')) then
        select	coalesce(max(cd_material),0)
          into STRICT	cd_material_w
          from	material_cod_barra
         where	cd_barra_material = cd_barras_gtin_w;
    end if;														
	end;
elsif (cd_material_w = 0) then
	begin

	-- Ver se existe vinculac?o de codigo por fornecedor (Normalmente EAN8 ou EAN13)
	select	coalesce(max(cd_material),0)
	  into STRICT	cd_material_w
	  from	material_cod_barra
	 where	cd_barra_material = cd_barras_material_w;

	--se nao encontrou material, faz a busca pelo GTIN
    if (cd_material_w = 0 and (cd_barras_gtin_w IS NOT NULL AND cd_barras_gtin_w::text <> '')) then
        select	coalesce(max(cd_material),0)
          into STRICT	cd_material_w
          from	material_cod_barra
         where	cd_barra_material = cd_barras_gtin_w;
    end if;												
	if (coalesce(cd_material_w, 0) > 0) and (ie_barras_lote_fornec_w = 'S') then
		begin

		select	coalesce(max(nr_seq_lote_fornec),0),
				coalesce(max(qt_material),qt_material_w)
		into STRICT	nr_seq_lote_w,
				qt_material_w
		from	material_cod_barra
		where	cd_barra_material	= cd_barras_material_w;

		if (nr_seq_lote_w > 0) then
			select	max(dt_validade)
			into STRICT	dt_validade_w
			from	material_lote_fornec
			where	nr_sequencia	= nr_seq_lote_w;
		end if;
		end;
	end if;
	/*Para verificar se o barras passado tem ligacao em um lote fornecedor - Atributo ligacao = cd_barra_material*/

	if (cd_material_w = 0) then	
		select	coalesce(max(nr_sequencia),0)
		into STRICT	nr_sequencia_www
		from	material_lote_fornec
		where	cd_barra_material = cd_barras_material_w
		and		cd_estabelecimento = coalesce(cd_estabelecimento_origem_p,cd_estabelecimento_p);

		if (nr_sequencia_www > 0) then
			begin
			select	coalesce(max(cd_material),0),
					coalesce(max(nr_sequencia),0),
					max(dt_validade)
			into STRICT	cd_material_w,
					nr_seq_lote_w,
					dt_validade_w
			from	material_lote_fornec
			where	nr_sequencia = nr_sequencia_www;
			end;
		end if;
	end if;
	end;

end if;

if (cd_material_w = 0) then
     	begin
--  Lotes de Fornecedor cadastrados no Sistema Antigo HDH

    --if	(Length(cd_barras_material_w) = 10) then
	if (Length(elimina_caracteres_barras(cd_barras_material_w)) = 10)  and (substr(obter_cgc_estabelecimento(cd_estabelecimento_p),1,8) <> '03490958') then
		begin
            begin
                select	coalesce(max(cd_material),0),
                        coalesce(max(nr_sequencia),0),
                        max(dt_validade)
                into STRICT	cd_material_w,
                        nr_seq_lote_w,
                        dt_validade_w
                from	material_Lote_Fornec
                where	nr_sequencia = cd_barras_material_w;

            exception when others then
                cd_material_w := 0;
            end;
		if (cd_material_w = 0) then
			CALL wheb_mensagem_pck.Exibir_Mensagem_Abort(190748);
		end if;
       	end;
	
	elsif	((Length(cd_barras_material_w) = 13) and (Substr(cd_barras_material_w,1,1) = '9')) then
		
		nr_sequencia_lp_w	:= (substr(cd_barras_material_w,4,13))::numeric;
		if (nr_sequencia_lp_w > 0) then
			select	max(cd_material)
			into STRICT	cd_material_w
			from	lote_producao a,
					lp_individual b
			where	a.nr_lote_producao	= b.nr_lote_producao
			and		b.nr_sequencia		= nr_sequencia_lp_w;
		end if;
		nr_etiqueta_lp_p 	:= to_char(nr_sequencia_lp_w);	
	elsif (length(cd_barras_material_w) = 12) and (substr(cd_barras_material_w,1,1) = '9') then -- fracionamento processo adep
		begin
		
		ie_fracionamento_adep_w	:= 'S';		
		nr_seq_frac_w		:= (substr(cd_barras_material_w,2,10))::numeric;
		nr_seq_digito_w		:= (substr(cd_barras_material_w,12,1))::numeric;
		
		begin
			select	obter_tipo_processo_adep(nr_seq_processo)
			into STRICT	ie_tipo_processo_w
			from	adep_processo_frac
			where	nr_sequencia	= nr_seq_frac_w;

			if	((ie_tipo_processo_w in ('M','N')) or (ie_tipo_processo_w = 'P' and obter_se_checa_separado_gedipa(nr_seq_frac_w) = 'N')) then
			
				select	max(b.cd_material),
						max(substr(obter_desc_material(b.cd_material),1,255)),
						max(b.qt_horario),
						max(b.cd_unid_med_hor),
						max(cd_barras_material_w),
						max(substr(Wheb_mensagem_pck.get_texto(306942)|| ' ' /*'Manip/Frac : '*/ || obter_desc_material(b.cd_material),1,255)),
						max(1),
						max(''),
                        max(b.ie_agrupador),
                        max(obter_se_item_frac(b.nr_sequencia))
				into STRICT	cd_material_w,
						ds_material_w,
						qt_material_w,
						cd_unid_med_w,
						cd_produto_frac_w,
						ds_produto_frac_w,
						qt_produto_frac_w,
						cd_um_prod_frac_w,
                        ie_agrupador_w,
                        ie_frac_w
				from	prescr_mat_hor b,
						adep_processo_frac a
				where	b.nr_seq_etiqueta	= a.nr_sequencia
				and		b.nr_seq_processo	= a.nr_seq_processo
				and		coalesce(b.nr_seq_superior::text, '') = ''
				and		a.nr_sequencia		= nr_seq_frac_w
				and		a.nr_seq_digito		= nr_seq_digito_w
				and		Obter_se_horario_liberado(b.dt_lib_horario, b.dt_horario) = 'S';

                if (ie_agrupador_w = 16 and (ie_frac_w = 'N' and ie_valida_etiqueta_frac_w in ('C', 'X'))) then
                    ie_fracionamento_adep_w := 'N';
                end if;
				
			elsif (ie_tipo_processo_w = 'P') then
			
				select	max(b.cd_material),
						max(substr(WHEB_MENSAGEM_PCK.get_texto(804120) || ' ' || obter_desc_proced_prescr(d.nr_prescricao, d.nr_sequencia),1,255)),
						max(b.qt_horario),
						max(b.cd_unid_med_hor),
						max(cd_barras_material_w),
						max(substr(WHEB_MENSAGEM_PCK.get_texto(804120) || ' ' || obter_desc_proced_prescr(d.nr_prescricao, d.nr_sequencia),1,255)),
						max(1),
						max('')
				into STRICT	cd_material_w,
						ds_material_w,
						qt_material_w,
						cd_unid_med_w,
						cd_produto_frac_w,
						ds_produto_frac_w,
						qt_produto_frac_w,
						cd_um_prod_frac_w								
				from	prescr_procedimento d,
						prescr_material c,
						prescr_mat_hor b,
						adep_processo_frac a
				where	d.nr_prescricao		= c.nr_prescricao
				and		d.nr_sequencia  	= c.nr_sequencia_proc
				and		c.nr_prescricao		= b.nr_prescricao
				and		c.nr_sequencia		= b.nr_seq_material
				and		c.ie_agrupador		= 5				
				and		b.nr_seq_etiqueta	= a.nr_sequencia				
				and		b.ie_agrupador		= 5
				and		coalesce(b.nr_seq_superior::text, '') = ''
				and		a.nr_sequencia		= nr_seq_frac_w
				and		a.nr_seq_digito		= nr_seq_digito_w
				and		Obter_se_horario_liberado(b.dt_lib_horario, b.dt_horario) = 'S';
			
			else
			
				select	max(b.cd_material),
						max(substr(obter_desc_material(b.cd_material),1,255)),
						max(b.qt_horario),
						max(b.cd_unid_med_hor),
						max(cd_barras_material_w),
						max(substr(Wheb_mensagem_pck.get_texto(306942)|| ' ' /*'Manip/Frac : '*/ || coalesce(d.ds_solucao,obter_prim_comp_sol(d.nr_prescricao,d.nr_seq_solucao)),1,255)),
						max(1),
						max('')
				into STRICT	cd_material_w,
						ds_material_w,
						qt_material_w,
						cd_unid_med_w,
						cd_produto_frac_w,
						ds_produto_frac_w,
						qt_produto_frac_w,
						cd_um_prod_frac_w
				from	prescr_solucao d,
						prescr_material c,
						prescr_mat_hor b,
						adep_processo_frac a
				where	d.nr_prescricao		= c.nr_prescricao
				and		d.nr_seq_solucao	= c.nr_sequencia_solucao
				and		c.nr_prescricao		= b.nr_prescricao
				and		c.nr_sequencia		= b.nr_seq_material
				and		c.ie_agrupador		IN (4,13)
				and		c.nr_sequencia		= obter_seq_prim_comp_sol(d.nr_prescricao,d.nr_seq_solucao)
				and		b.nr_seq_etiqueta	= a.nr_sequencia
				and		b.nr_seq_processo	= a.nr_seq_processo
				and		b.ie_agrupador		IN (4,13)
				and		coalesce(b.nr_seq_superior::text, '') = ''
				and		a.nr_sequencia		= nr_seq_frac_w
				and		a.nr_seq_digito		= nr_seq_digito_w
				and		Obter_se_horario_liberado(b.dt_lib_horario, b.dt_horario) = 'S';
				
			end if;
		exception
		when others then
			ie_fracionamento_adep_w	:= 'N';
		end;
				
		end;	
--  Lotes de Fornecedor cadastrados no Sistema (com 11 ou 12 digitos)
    elsif (Length(cd_barras_material_w) in (11,12)) then
          	begin
		if (Length(cd_barras_material_w) = 11) then
			cd_cod_barra_w	:= elimina_caracteres_barras(cd_barras_material_w);
		else
			cd_cod_barra_w	:= substr(cd_barras_material_w,2,12);
		end if;
		if (not Consiste_Digito('Modulo11', cd_cod_barra_w)) then
	              ds_erro_p		:= WHEB_MENSAGEM_PCK.get_texto(281003);
          	else
                 	begin	
			nr_seq_lote_fornec_agrup_w	:= 0;
			select	coalesce(max(nr_seq_lote_fornec), 0)
			into STRICT	nr_seq_lote_fornec_agrup_w
			from	material_lote_fornec_agrup
			where	nr_sequencia = substr(cd_cod_barra_w,1,10);

			if (nr_seq_lote_fornec_agrup_w = 0) then
				select	max(coalesce(cd_material,0)),
						max(coalesce(nr_sequencia,0)),
						max(dt_validade)
				into STRICT	cd_material_w,
						nr_seq_lote_w,
						dt_validade_w
				from	material_Lote_Fornec
				where	nr_sequencia	= substr(cd_cod_barra_w,1,10);
			else
				begin
				
				select	coalesce(a.cd_material,0),
						coalesce(a.nr_sequencia,0),
						coalesce(b.nr_sequencia,0),
						a.dt_validade,
						b.qt_material,
						coalesce(b.ie_situacao,'A')
				into STRICT	cd_material_w,
						nr_seq_lote_w,
						nr_seq_LoteAgrup_w,
						dt_validade_w,
						qt_material_w,
						ie_situacao_loteagrup_w
				from	material_lote_fornec_agrup b,
						material_Lote_Fornec a
				where	a.nr_sequencia = b.nr_seq_lote_fornec
				and		b.nr_sequencia = substr(cd_cod_barra_w,1,10);
				
				if (ie_situacao_loteagrup_w = 'I') then
					ds_erro_p := substr(WHEB_MENSAGEM_PCK.get_texto(281004) || nr_seq_LoteAgrup_w,1,255);
				end if;
				end;
			end if;
			end;
		end if;
		end;
--	Codigo de barras para produto com validade e quantidade (PPPPPPDDMMYYQQQQQQQD)
	elsif (Length(cd_barras_material_w) = 20) then
          	begin
          	if (not Consiste_Digito('Modulo11', cd_barras_material_w)) then
              	ds_erro_p		:= WHEB_MENSAGEM_PCK.get_texto(281003);
          	else
			begin
              	cd_material_w 	:= substr(cd_barras_material_w,1,6);
              	dt_validade_w 	:= to_date(
						substr(cd_barras_material_w,7,2) || '/' ||
                             		substr(cd_barras_material_w,9,2) || '/' ||

                             		substr(cd_barras_material_w,11,2), 'dd/mm/yy');
              	qt_material_w 	:= (substr(cd_barras_material_w,13,7))::numeric;
              	qt_material_w 	:= qt_material_w / 100;
			exception
				when others then
					qt_material_w	:= 1;
              	end;
		end if;
          	end;		
--	Codigo de barras produto Baxter (Espero que seja para o Mundo Todo (010bbbbbbbbbbbbbDDYYMMxxxxLLLLLL)
	elsif (Length(cd_barras_material_w) > 25) and (substr(cd_barras_material_w,1,3) = '010') then
        begin		
		
		begin

        ds_lote_w	:= substr(cd_barras_material_w,27,6);
		cd_digito_w	:= substr(ds_lote_w,6,1);
		dt_dia_w 	:= substr(cd_barras_material_w,23,2);
		qt_material_w 	:= 1;
		
		if (dt_dia_w = '00') then
			dt_dia_w := substr(LAST_DAY(TO_DATE('01/' || substr(cd_barras_material_w,21,2) ||'/'|| substr(cd_barras_material_w,19,2),'dd/mm/yy')),1,2);
		end if;
		
		dt_validade_w 	:= to_date(dt_dia_w || '/' ||
									substr(cd_barras_material_w,21,2) || '/' ||
                             		substr(cd_barras_material_w,19,2), 'dd/mm/yy');
		
		
		cd_mat_barra_w 	:= substr(cd_barras_material_w,4,13);		
		
		exception
		when others then
		CALL wheb_mensagem_pck.Exibir_Mensagem_Abort(190749);		
		end;		
		
		begin
		select	coalesce(max(cd_material),0)
		into STRICT 	cd_material_w
		from 	material_cod_barra
		where 	cd_barra_material = cd_mat_barra_w;
		exception
			when others then
				ds_erro_p := WHEB_MENSAGEM_PCK.get_texto(281005);
          	end;
		
		if (cd_material_w IS NOT NULL AND cd_material_w::text <> '') then
			select	max(cd_cgc_fabricante)
			into STRICT	cd_cgc_w
			from	material_cod_barra
			where 	cd_barra_material 	= cd_mat_barra_w
			and		cd_material		= cd_material_w;
		end if;
		if (cd_cgc_w IS NOT NULL AND cd_cgc_w::text <> '') then
			select	max(nr_sequencia || nr_digito_verif)
			into STRICT	nr_lote_fornec_w
			from	material_lote_fornec
			where	cd_material		= cd_material_w
			and		cd_cgc_fornec		= cd_cgc_w
			and		dt_validade		= dt_validade_w
			and		ds_lote_fornec		= ds_lote_w;
		end if;
		if (coalesce(nr_lote_fornec_w::text, '') = '') and (cd_cgc_w IS NOT NULL AND cd_cgc_w::text <> '') then
			insert into material_lote_fornec(
				nr_sequencia,
				cd_material,
				nr_digito_verif,
				dt_atualizacao,
				nm_usuario,
				ds_lote_fornec,
				dt_validade,
				cd_cgc_fornec,
				qt_material,
				cd_estabelecimento,
				ie_validade_indeterminada,
				ie_situacao)
			values (nextval('material_lote_fornec_seq'),
				cd_material_w,
				cd_digito_w,
				clock_timestamp(),
				'Tasy',
				ds_lote_w,
				dt_validade_w,
				cd_cgc_w,
				qt_material_w,
				cd_estabelecimento_p,
				'N',
				'A');
		end if;
		end;
--  Codigo de barras para identificar produto com validade (00PPPPPPMMYYD)
    elsif (not Consiste_Digito('EAN13', cd_barras_material_w)) then
		ds_erro_p			:= WHEB_MENSAGEM_PCK.get_texto(281003);
    elsif	((Length(cd_barras_material_w) = 13) and (Substr(cd_barras_material_w,1,2) = '00')) then
        begin
        cd_material_w		:= substr(cd_barras_material_w,3,6);
        dt_validade_w 		:= To_Date('01/' ||
                    substr(cd_barras_material_w,9,2) || '/' ||
                            Substr(cd_barras_material_w,11,2),'dd/mm/yy');
        dt_validade_w		:= last_day(dt_validade_w);
        end;
	end if;
	end;
end if;

if (coalesce(ds_erro_p::text, '') = '') and (cd_material_w > 0) then
	begin
	
	qt_dias_val_minima_w := obter_regra_validade_minima(cd_material_w, cd_estabelecimento_p, wheb_usuario_pck.get_nm_usuario, nr_requisicao_p);

	if (coalesce(qt_dias_val_minima_w,0) > 0) then
		qt_dias_aviso_validade_w := qt_dias_val_minima_w;
		dt_validade_permitida_w	:= trunc(clock_timestamp(),'dd') + qt_dias_aviso_validade_w;
	end if;
	
	if (dt_validade_w IS NOT NULL AND dt_validade_w::text <> '') then
		begin
    	if (dt_validade_w < trunc(clock_timestamp(),'dd')) then
			ds_erro_p	:= WHEB_MENSAGEM_PCK.get_texto(281013);
		elsif (coalesce(qt_dias_aviso_validade_w,0) > 0) and (dt_validade_w < dt_validade_permitida_w) then
			ds_erro_p	:= (WHEB_MENSAGEM_PCK.get_texto(281014) || ' ' || to_char(qt_dias_aviso_validade_w) || ' ' || WHEB_MENSAGEM_PCK.get_texto(281016));
		end if;
		end;
	end if;
	if (dt_validade_w IS NOT NULL AND dt_validade_w::text <> '') then
		ds_validade_p := to_char(dt_validade_w,'dd/mm/yyyy');
	end if;
	select 	coalesce(ds_material,WHEB_MENSAGEM_PCK.get_texto(281017)),
			coalesce(ie_situacao,'A'),
			--cd_unidade_medida_consumo
			CASE WHEN ie_fracionamento_adep_w='S' THEN  cd_unid_med_w  ELSE substr(obter_dados_material_estab(cd_material,cd_estabelecimento_p,'UMS'),1,30) END ,
			coalesce(qt_minimo_multiplo_Solic,0),
			coalesce(obter_mat_estabelecimento(cd_estabelecimento_p, 0, cd_material_w, 'KT'),0)
	into STRICT	ds_material_w,
			ie_situacao_w,
			cd_unid_med_w,
			qt_min_multiplo_w,
			cd_kit_mat_w
	from 	material
	where cd_material = cd_material_w;
	if (ie_situacao_w = 'I') then
		ds_erro_p		:= WHEB_MENSAGEM_PCK.get_texto(281018);
	end if;
      if (qt_material_w  = 0) then
            qt_material_w   	:= qt_min_multiplo_w;
      end if;
    	end;
elsif (coalesce(ds_erro_p::text, '') = '') then
	ds_erro_p	:= WHEB_MENSAGEM_PCK.get_texto(281021);
end if;

if (ie_avisa_val_menor_w = 'R') and (coalesce(cd_material_w,0) > 0) then
	SELECT * FROM obter_regra_aviso_validade(cd_material_w, cd_estabelecimento_p, ie_avisa_val_menor_w, qt_dias_validade_w, ie_local_estoque_lote_w) INTO STRICT ie_avisa_val_menor_w, qt_dias_validade_w, ie_local_estoque_lote_w;
end if;

if (ie_avisa_val_menor_w <> 'N') and (coalesce(ds_erro_p::text, '') = '') and (cd_material_w IS NOT NULL AND cd_material_w::text <> '') and (nr_seq_lote_w IS NOT NULL AND nr_seq_lote_w::text <> '') then
	begin	
	/*select 	distinct
		min(nr_sequencia),
		min(dt_validade)
	into	nr_sequencia_ww,
		dt_validade_ww	
	from	material_lote_fornec
	where	dt_validade = (select	min(a.dt_validade)
			       from		material_lote_fornec a
			       where	a.cd_material = cd_material_w
			       and		a.dt_validade < dt_validade_w	
			       and		a.dt_validade > sysdate
			       and		a.qt_material > obter_qt_lote_fornec_utilizado(a.nr_sequencia)
			       and		a.ie_situacao = 'A')
	and	dt_validade < dt_validade_w
	and	cd_material = cd_material_w
	and	cd_estabelecimento = cd_estabelecimento_p
	and	dt_validade > sysdate
	and	qt_material > obter_qt_lote_fornec_utilizado(nr_sequencia)
	and	ie_situacao = 'A';*/
	
	if (ie_local_estoque_lote_w = 'S') then
		cd_local_estoque_w := cd_local_estoque_p;
	end if;
	
	SELECT	coalesce(MAX(ie_estoque_lote),'N')
	INTO STRICT	ie_estoque_lote_w
	FROM	material_estab
	WHERE	cd_material = cd_material_w
	AND	cd_estabelecimento = cd_estabelecimento_p;
	
	open C01;
	loop
	fetch C01 into	
		nr_sequencia_ww,
		dt_validade_ww;
	EXIT WHEN NOT FOUND; /* apply on C01 */
	end loop;
	close C01;
	
	if (dt_validade_ww IS NOT NULL AND dt_validade_ww::text <> '') and (coalesce(cd_funcao_p,'0') <> '88')  then
		if (ie_avisa_val_menor_w = 'S') then
			if (qt_dias_validade_w = 0) or
				((dt_validade_ww - qt_dias_validade_w) < clock_timestamp()) then
				ds_erro_p	:= WHEB_MENSAGEM_PCK.get_texto(281023) || WHEB_MENSAGEM_PCK.get_texto(281024) || nr_sequencia_ww || ' ' || WHEB_MENSAGEM_PCK.get_texto(281025) || to_char(dt_validade_ww,'dd/mm/yyyy');
			end if;
		else
			if (qt_dias_validade_w = 0) or
				((dt_validade_ww - qt_dias_validade_w) < clock_timestamp()) then
				ds_erro_p	:= WHEB_MENSAGEM_PCK.get_texto(953220) || WHEB_MENSAGEM_PCK.get_texto(281024) || nr_sequencia_ww || ' ' || WHEB_MENSAGEM_PCK.get_texto(281025) || to_char(dt_validade_ww,'dd/mm/yyyy');
			end if;
		end if;
	end if;
	end;
end if;

if (ie_bloqueio_lote_w = 'S') and (cd_material_w IS NOT NULL AND cd_material_w::text <> '') and (nr_seq_lote_w IS NOT NULL AND nr_seq_lote_w::text <> '') then

	select	coalesce(max(ie_bloqueio), 'N')
	into STRICT	ie_bloqueio_w
	from	material_lote_fornec
	where	nr_sequencia	= nr_seq_lote_w;
	if (ie_bloqueio_w = 'S') then
		ds_erro_p	:= WHEB_MENSAGEM_PCK.get_texto(281027) || to_char(nr_seq_lote_w) || WHEB_MENSAGEM_PCK.get_texto(281028);
	end if;
end if;

if (ie_permite_lote_inativo_w = 'N') and (cd_material_w IS NOT NULL AND cd_material_w::text <> '') and (nr_seq_lote_w IS NOT NULL AND nr_seq_lote_w::text <> '') then

	select	coalesce(max(ie_situacao), 'N')
	into STRICT	ie_situacao_lote_w
	from	material_lote_fornec
	where	nr_sequencia	= nr_seq_lote_w;
	if (ie_situacao_lote_w = 'I') then
		ds_erro_p	:= WHEB_MENSAGEM_PCK.get_texto(281029) || to_char(nr_seq_lote_w) || WHEB_MENSAGEM_PCK.get_texto(281030);
	end if;
end if;

if (ie_consiste_estab_lote_w = 'S') and (cd_material_w IS NOT NULL AND cd_material_w::text <> '') and (coalesce(nr_seq_lote_w,0) > 0) then
	begin
	select	coalesce(max(cd_estabelecimento),0)
	into STRICT	cd_estab_lote_w
	from	material_lote_fornec
	where	nr_Sequencia = nr_seq_lote_w;
	
	if (cd_estab_lote_w <> cd_estabelecimento_p) then
		ds_erro_p := WHEB_MENSAGEM_PCK.get_texto(281031)|| to_char(nr_seq_lote_w) || WHEB_MENSAGEM_PCK.get_texto(281032);
	end if;
	end;
end if;

if (ie_fracionamento_adep_w = 'S') then
	cd_material_p		:= cd_produto_frac_w;
	ds_material_p		:= ds_produto_frac_w;
	qt_material_p		:= qt_produto_frac_w;
	cd_unid_med_p		:= cd_um_prod_frac_w;
else
	cd_material_p		:= cd_material_w;
	ds_material_p		:= ds_material_w;
	qt_material_p		:= qt_material_w;	
	cd_unid_med_p		:= cd_unid_med_w;	
end if;

cd_funcao_w := replace(coalesce(cd_funcao_p,wheb_usuario_pck.get_cd_funcao),'x','');

if (cd_funcao_w IS NOT NULL AND cd_funcao_w::text <> '') then
	begin
	
	if (cd_funcao_p = '919x') or (cd_funcao_w = '919') then
		begin
		cd_funcao_w := '109';
		ie_obriga_barras_lote_w := obter_se_leitura_barras(cd_estabelecimento_p,cd_material_p,cd_funcao_w,'T');
		end;
	elsif (cd_funcao_w = '109') then
		begin
		ie_obriga_barras_lote_w := obter_se_leitura_barras(cd_estabelecimento_p,cd_material_p,cd_funcao_w,'C');
		end;
	else	begin
		ie_obriga_barras_lote_w := obter_se_leitura_barras(cd_estabelecimento_p,cd_material_p,cd_funcao_w);
		end;
	end if;
	
	
	if (ie_obriga_barras_lote_w = 'L') and (coalesce(nr_seq_lote_w,0) = 0) then
		ds_erro_p := WHEB_MENSAGEM_PCK.get_texto(281033);
	end if;
	
	end;
end if;

if (cd_funcao_w <> '919') and (cd_funcao_w <> '109') and (coalesce(nr_seq_Lote_w,0) > 0) then
	select	ie_origem_lote
	into STRICT	ie_origem_lote_w
	from	material_lote_fornec
	where	nr_sequencia = nr_seq_Lote_w;
	
	if (ie_origem_lote_w = 'G') then
		if (cd_funcao_p <> '146') and (cd_funcao_p <> '143x') or
			(cd_funcao_p = '143x' AND ie_permite_agrup_inventario_w = 'N') then
			-- 281035 - O codigo de barras lido pertence a um lote de agrupamento. Somente pode ser usado em requisic?es de transferencia.
			ds_erro_p := WHEB_MENSAGEM_PCK.get_texto(281035);
		end if;
	end if;
end if;

select 	coalesce(max(ie_bloqueia_movto_perda),'N')
into STRICT	ie_bloqueia_movto_perda_w
from	parametro_estoque 
where	cd_estabelecimento = cd_estabelecimento_p;

if (cd_funcao_w = '109') and (ie_bloqueia_movto_perda_w = 'S') and (nr_requisicao_p IS NOT NULL AND nr_requisicao_p::text <> '') and (nr_seq_lote_w IS NOT NULL AND nr_seq_lote_w::text <> '') and (dt_validade_w IS NOT NULL AND dt_validade_w::text <> '') then

	select	ie_tipo_perda
	into STRICT	ie_tipo_perda_w
	from	operacao_estoque
	where	cd_operacao_estoque = obter_dados_requisicao(nr_requisicao_p, 'O');

	if (ie_tipo_perda_w = 'V') and (dt_validade_w >= clock_timestamp()) then
		CALL wheb_mensagem_pck.Exibir_Mensagem_Abort(1134010);	
	end if;
	
end if;

nr_seq_lote_p		:= nr_seq_Lote_w;
nr_seq_loteAgrup_p		:= nr_seq_LoteAgrup_w;
cd_kit_mat_p		:= cd_kit_mat_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE converte_codigo_barras ( cd_mat_barra_p text, cd_estabelecimento_p bigint, ie_tipo_barra_p text, cd_local_estoque_p text, cd_material_p INOUT bigint, qt_material_p INOUT bigint, nr_seq_lote_p INOUT bigint, nr_seq_loteagrup_p INOUT bigint, cd_kit_mat_p INOUT bigint, ds_validade_p INOUT text, ds_material_p INOUT text, cd_unid_med_p INOUT text, nr_etiqueta_lp_p INOUT text, ds_erro_p INOUT text, cd_funcao_p text default null, nr_requisicao_p text default null, cd_estabelecimento_origem_p bigint default null) FROM PUBLIC;

