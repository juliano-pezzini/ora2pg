-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ptu_gerar_guia_req_a1100 ( nr_seq_cabecalho_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, ie_erro_p INOUT text) AS $body$
DECLARE


nr_seq_dados_pedido_w		bigint;
cd_unimed_executora_w		varchar(255);
cd_unimed_origem_w		varchar(255);
nr_seq_execucao_w		bigint;
nr_seq_origem_w			bigint;
nr_seq_trans_refe_w		bigint;
cd_unimed_w			varchar(255);
cd_usuario_plano_w		varchar(255);
dt_solicitacao_w		timestamp;
dt_resposta_wsd_w		timestamp;
nr_seq_itens_pedido_w		bigint;
ie_tipo_tabela_w		varchar(255);
cd_servico_w			integer;
cd_servico_conversao_w		integer;
ds_servico_w			varchar(255);
ds_servico_ww			varchar(255);
qt_autorizada_w			ptu_itens_pedido_a1100.qt_servico%type;
ie_resposta_wsd_w		smallint;
nr_seq_requisicao_w		bigint;
nr_seq_pedido_aut_w		bigint;
nr_seq_pedido_compl_w		bigint;
nr_via_cartao_w			integer;
nr_seq_segurado_w		bigint;
nr_seq_plano_w			bigint;
ie_origem_proced_w		bigint;
nr_seq_req_proc_w		bigint;
nr_seq_req_mat_w		bigint;
ie_status_w			varchar(255);
nr_seq_material_w		bigint;
qt_reg_mat_w			bigint;
qt_reg_aprov_w			bigint;
qt_reg_proc_aprov_w		bigint;
qt_reg_mat_aprov_w		bigint;
qt_reg_neg_w			bigint;
qt_reg_proc_neg_w		bigint;
qt_reg_mat_neg_w		bigint;
qt_reg_cancel_w			bigint;
qt_reg_proc_cancel_w		bigint;
qt_reg_mat_cancel_w		bigint;
nr_seq_uni_exec_w		bigint;
nm_beneficiario_w		varchar(255);
nr_seq_resp_auto_w		bigint;
ie_autorizado_w			bigint;
nr_seq_guia_w			bigint;
nr_seq_guia_proc_w		bigint;
nr_seq_guia_mat_w		bigint;
qt_autorizada_ww		smallint;
cd_pessoa_fisica_w		pls_segurado.cd_pessoa_fisica%type;
qt_erros_w			bigint := 0;
nr_seq_item_w			ptu_itens_pedido_a1100.nr_seq_item%type;
qt_aprovado			bigint := 0;
qt_negado			bigint := 0;
qt_cancelado			bigint := 0;
qt_item				bigint := 0;
nr_versao_w			ptu_pedido_autorizacao.nr_versao%type;
qt_resp_w			integer;
nr_seq_lote_execucao_w		pls_lote_execucao_req.nr_sequencia%type;
nr_seq_req_execucao_w		pls_execucao_requisicao.nr_sequencia%type;
nr_seq_mat_guia_w		pls_guia_plano_mat.nr_sequencia%type;
nr_seq_proc_guia_w		pls_guia_plano_proc.nr_sequencia%type;
cd_cgc_outorgante_w		pls_outorgante.cd_cgc_outorgante%type;
cd_cooperativa_w		pls_congenere.cd_cooperativa%type;
dt_valid_senha_ext_w		pls_requisicao.dt_valid_senha_ext%type;

C01 CURSOR FOR
	SELECT	nr_sequencia,
		cd_unimed_executora,
		cd_unimed_origem,
		nr_seq_execucao,
		nr_seq_origem,
		nr_seq_trans_refe,
		lpad(cd_unimed,4,'0'),
		lpad(cd_usuario_plano,13,'0'),
		dt_solicitacao,
		dt_resposta_wsd
	from	ptu_dados_pedido_a1100
	where	nr_seq_cabecalho		= nr_seq_cabecalho_p
	and	lpad(cd_unimed_executora,4,'0')	<> lpad(cd_cooperativa_w,4,'0');

C02 CURSOR FOR
	SELECT	nr_sequencia,
		ie_tipo_tabela,
		cd_servico,
		ds_servico,
		qt_servico,
		ie_resposta_wsd,
		nr_seq_item
	from	ptu_itens_pedido_a1100
	where	nr_seq_dados_pedido	= nr_seq_dados_pedido_w;

C03 CURSOR FOR
	SELECT	nr_seq_req_proc,
		nr_seq_req_mat,
		nr_seq_guia_mat,
		nr_seq_guia_proc
	from	ptu_pedido_aut_servico
	where	nr_seq_pedido	= nr_seq_pedido_aut_w
	and	ie_tipo_tabela	= ie_tipo_tabela_w
	and	nr_seq_item	= nr_seq_item_w;

C04 CURSOR FOR
	SELECT	nr_seq_req_proc,
		nr_seq_req_mat,
		nr_seq_guia_mat,
		nr_seq_guia_proc
	from	ptu_pedido_compl_aut_serv
	where	nr_seq_pedido	= nr_seq_pedido_compl_w
	and	ie_tipo_tabela	= ie_tipo_tabela_w
	and	nr_seq_item	= nr_seq_item_w;

C05 CURSOR FOR
	SELECT	nr_sequencia,
		cd_unimed_executora,
		nr_seq_execucao,
		nr_seq_trans_refe
	from	ptu_dados_pedido_a1100
	where	nr_seq_cabecalho		= nr_seq_cabecalho_p
	and	lpad(cd_unimed_executora,4,'0')	= lpad(cd_cooperativa_w,4,'0');

BEGIN

begin
	select	a.nr_versao_transacao
	into STRICT	nr_versao_w
	from	ptu_cabecalho_a1100 a
	where	nr_sequencia = nr_seq_cabecalho_p;
exception
when others then
	nr_versao_w := pls_obter_versao_scs;
end;

select	max(cd_cgc_outorgante)
into STRICT	cd_cgc_outorgante_w
from	pls_outorgante;

select	max(cd_cooperativa)
into STRICT	cd_cooperativa_w
from	pls_congenere
where	cd_cgc	= cd_cgc_outorgante_w
and	(cd_cooperativa IS NOT NULL AND cd_cooperativa::text <> '');

open C01;
loop
fetch C01 into
	nr_seq_dados_pedido_w,
	cd_unimed_executora_w,
	cd_unimed_origem_w,
	nr_seq_execucao_w,
	nr_seq_origem_w,
	nr_seq_trans_refe_w,
	cd_unimed_w,
	cd_usuario_plano_w,
	dt_solicitacao_w,
	dt_resposta_wsd_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
		if (coalesce(nr_seq_trans_refe_w,0)	= 0) then
			select	max(nr_sequencia)
			into STRICT	nr_seq_pedido_aut_w
			from	ptu_pedido_autorizacao
			where	nr_seq_execucao	= nr_seq_execucao_w
			and	cd_unimed_executora = cd_unimed_executora_w;
		else
			select	max(nr_sequencia)
			into STRICT 	nr_seq_pedido_compl_w
			from	ptu_pedido_compl_aut
			where	nr_seq_execucao	= nr_seq_execucao_w
			and	cd_unimed_executora = cd_unimed_executora_w;
		end if;

			begin

			if (nr_seq_pedido_aut_w IS NOT NULL AND nr_seq_pedido_aut_w::text <> '') or (nr_seq_pedido_compl_w IS NOT NULL AND nr_seq_pedido_compl_w::text <> '') then

				if (nr_seq_pedido_aut_w IS NOT NULL AND nr_seq_pedido_aut_w::text <> '') then
					select 	nr_seq_requisicao,
						nr_seq_guia
					into STRICT	nr_seq_requisicao_w,
						nr_seq_guia_w
					from	ptu_pedido_autorizacao
					where	nr_sequencia = nr_seq_pedido_aut_w;

					open C02;
						loop
						fetch C02 into
							nr_seq_itens_pedido_w,
							ie_tipo_tabela_w,
							cd_servico_w,
							ds_servico_w,
							qt_autorizada_w,
							ie_resposta_wsd_w,
							nr_seq_item_w;
						EXIT WHEN NOT FOUND; /* apply on C02 */
							begin

							qt_aprovado	:= 0;
							qt_negado	:= 0;
							qt_cancelado	:= 0;
							qt_item		:= 0;

							open C03;
								loop
								fetch C03 into
									nr_seq_req_proc_w,
									nr_seq_req_mat_w,
									nr_seq_guia_mat_w,
									nr_seq_guia_proc_w;
								EXIT WHEN NOT FOUND; /* apply on C03 */
									begin

									if (nr_seq_requisicao_w IS NOT NULL AND nr_seq_requisicao_w::text <> '') then
										if (ie_resposta_wsd_w	= 1) then
											ie_status_w	:= 'N';
											qt_negado := qt_negado + 1;
										elsif (ie_resposta_wsd_w	= 2) then
											ie_status_w	:= 'S';
											qt_aprovado := qt_aprovado + 1;
										elsif (ie_resposta_wsd_w	= 3) then
											ie_status_w	:= 'C';
											qt_cancelado := qt_cancelado + 1;
										end if;

										if (ie_tipo_tabela_w	in ('0','1','4')) then
											update	pls_requisicao_proc
											set	ie_status 	= ie_status_w,
												qt_procedimento	= CASE WHEN ie_status_w='S' THEN  qt_solicitado  ELSE 0 END ,
												qt_proc_executado = CASE WHEN ie_status_w='S' THEN  qt_solicitado  ELSE 0 END
											where	nr_sequencia 	= nr_seq_req_proc_w;

											qt_item := qt_item + 1;

										elsif (ie_tipo_tabela_w	in ('2','3','5','6')) then
											update	pls_requisicao_mat
											set	ie_status 	= ie_status_w,
												qt_material	= CASE WHEN ie_status_w='S' THEN  qt_solicitado  ELSE 0 END ,
												qt_mat_executado = CASE WHEN ie_status_w='S' THEN  qt_solicitado  ELSE 0 END
											where	nr_sequencia 	= nr_seq_req_mat_w;

											qt_item := qt_item + 1;
										end if;
										
										if (nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '') then
											if (ie_resposta_wsd_w	= 1) then
												ie_status_w	:= 'N';
											elsif (ie_resposta_wsd_w	= 2) then
												ie_status_w	:= 'S';
											elsif (ie_resposta_wsd_w	= 3) then
												ie_status_w	:= 'D';
											end if;

											if (ie_tipo_tabela_w	in ('0','1','4')) then
												select	max(nr_sequencia)
												into STRICT	nr_seq_proc_guia_w
												from	pls_guia_plano_proc
												where	nr_seq_guia = nr_seq_guia_w
												and	cd_procedimento = (	SELECT	cd_procedimento
																from	pls_requisicao_proc
																where	nr_sequencia = nr_seq_req_proc_w)
												and	ie_origem_proced = (	select	ie_origem_proced 
																from	pls_requisicao_proc
																where	nr_sequencia = nr_seq_req_proc_w);

												if (nr_seq_proc_guia_w IS NOT NULL AND nr_seq_proc_guia_w::text <> '') then
													update	pls_guia_plano_proc
													set	ie_status 	= ie_status_w,
														qt_autorizada	= CASE WHEN ie_status_w='S' THEN  qt_solicitada  ELSE 0 END
													where	nr_sequencia 	= nr_seq_proc_guia_w;
												else
													if (ie_status_w = 'S') then
														update	pls_guia_plano
														set	ie_estagio = 7
														where	nr_sequencia = nr_seq_guia_w;
													
														select	nr_seq_segurado
														into STRICT	nr_seq_segurado_w
														from	pls_requisicao
														where	nr_sequencia = nr_seq_requisicao_w;

														select	max(nr_sequencia),
															max(nr_seq_lote_exec)
														into STRICT	nr_seq_req_execucao_w,
															nr_seq_lote_execucao_w
														from	pls_execucao_requisicao
														where	nr_seq_requisicao = nr_seq_requisicao_w;

														select	max(ie_origem_proced)
														into STRICT	ie_origem_proced_w
														from	procedimento
														where	cd_procedimento		= cd_servico_w
														and	ie_origem_proced	in (1,4,5,8)
														and	ie_situacao		= 'A';

														qt_autorizada_ww	:= substr(to_char(coalesce(qt_autorizada_w,0)),1,4);
														
														if (coalesce(nr_seq_lote_execucao_w,0) <> 0) then
															insert into pls_itens_lote_execucao(
																nr_sequencia, nr_seq_lote_exec, ie_permite_execucao,
																ie_executar, dt_atualizacao, nm_usuario,
																dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_req_proc,
																nr_seq_requisicao, qt_solicitado,
																qt_aprovado, qt_executado, qt_pendente,
																dt_requisicao, cd_proc_mat,
																ds_proc_mat, ds_tipo_guia,
																ie_tipo_item, ie_tipo_guia, ds_observacao)
															values (	nextval('pls_itens_lote_execucao_seq'), nr_seq_lote_execucao_w, 'S',
																'S', clock_timestamp(), nm_usuario_p,
																clock_timestamp(), nm_usuario_p, nr_seq_req_proc_w,
																nr_seq_requisicao_w, CASE WHEN ie_status_w='S' THEN  qt_autorizada_ww  ELSE 0 END ,
																CASE WHEN ie_status_w='S' THEN  qt_autorizada_ww  ELSE 0 END , CASE WHEN ie_status_w='S' THEN  qt_autorizada_ww  ELSE 0 END , 0,
																to_date(clock_timestamp(),'dd/mm/rrrr'), cd_servico_w,
																substr(obter_descricao_procedimento(cd_servico_w,ie_origem_proced_w),1,255), substr(obter_valor_dominio(1746,'2'),1,255),
																'P', '2', substr(wheb_mensagem_pck.GET_TEXTO(1189303),1,255));
														end if;

														insert	into pls_execucao_req_item(nr_sequencia, ie_tipo_guia,
															nr_seq_segurado, dt_atualizacao, nm_usuario,
															cd_procedimento, ie_origem_proced,
															qt_item, nr_seq_req_proc,
															ie_tipo_processo, nr_seq_requisicao,
															nr_seq_execucao, ie_situacao, nr_seq_guia)
														values (nextval('pls_execucao_req_item_seq'), '2',
															nr_seq_segurado_w, clock_timestamp(), nm_usuario_p,
															cd_servico_w, ie_origem_proced_w,
															CASE WHEN ie_status_w='S' THEN  qt_autorizada_ww  ELSE 0 END , nr_seq_req_proc_w,
															'I', nr_seq_requisicao_w,
															nr_seq_req_execucao_w, ie_status_w, nr_seq_guia_w);
															
														select	nextval('pls_guia_plano_proc_seq')
														into STRICT	nr_seq_guia_proc_w
														;

														insert	into pls_guia_plano_proc(nr_sequencia, nr_seq_guia, cd_procedimento,
															ie_origem_proced, qt_solicitada, dt_atualizacao,
															nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
															ie_status, qt_autorizada)
														values (nr_seq_guia_proc_w, nr_seq_guia_w, cd_servico_w,
															ie_origem_proced_w, qt_autorizada_ww, clock_timestamp(),
															nm_usuario_p, clock_timestamp(), nm_usuario_p,
															ie_status_w, CASE WHEN ie_status_w='S' THEN  qt_autorizada_ww  ELSE 0 END );
													end if;
												end if;
											elsif (ie_tipo_tabela_w	in ('2','3','5','6')) then
												select	max(nr_sequencia)
												into STRICT	nr_seq_mat_guia_w
												from	pls_guia_plano_mat
												where	nr_seq_guia = nr_seq_guia_w
												and	nr_seq_material = (	SELECT	nr_seq_material
																from	pls_requisicao_mat
																where	nr_sequencia = nr_seq_req_mat_w);

												if (nr_seq_mat_guia_w IS NOT NULL AND nr_seq_mat_guia_w::text <> '') then
													update	pls_guia_plano_mat
													set	ie_status 	= ie_status_w,
														qt_autorizada	= CASE WHEN ie_status_w='S' THEN  qt_solicitada  ELSE 0 END
													where	nr_sequencia 	= nr_seq_mat_guia_w;
												else
													if (ie_status_w = 'S') then
														update	pls_guia_plano
														set	ie_estagio = 7
														where	nr_sequencia = nr_seq_guia_w;

														select	nr_seq_segurado
														into STRICT	nr_seq_segurado_w
														from	pls_requisicao
														where	nr_sequencia = nr_seq_requisicao_w;

														select	max(nr_sequencia),
															max(nr_seq_lote_exec)
														into STRICT	nr_seq_req_execucao_w,
															nr_seq_lote_execucao_w
														from	pls_execucao_requisicao
														where	nr_seq_requisicao = nr_seq_requisicao_w;

														nr_seq_req_proc_w	:= null;
														nr_seq_guia_proc_w	:= null;

														SELECT * FROM ptu_gerar_mat_envio_intercamb(cd_servico_w, 'R', ie_tipo_tabela_w, null, nm_usuario_p, cd_servico_conversao_w, ds_servico_ww) INTO STRICT cd_servico_conversao_w, ds_servico_ww;

														if (coalesce(cd_servico_conversao_w,0)	<> 0) then
															begin
															select	max(nr_sequencia)
															into STRICT	nr_seq_material_w
															from	pls_material
															where	cd_material_ops	= cd_servico_conversao_w;
															exception
															when others then
																nr_seq_material_w	:= null;
															end;

															if (coalesce(nr_seq_material_w::text, '') = '') then
																SELECT * FROM pls_obter_mat_a900_vigente( nr_seq_material_w, clock_timestamp(), cd_servico_conversao_w, null) INTO STRICT  nr_seq_material_w, cd_servico_conversao_w;
															end if;

															select	count(1)
															into STRICT	qt_reg_mat_w
															from	pls_material
															where	nr_sequencia	= nr_seq_material_w;
														else
															nr_seq_material_w	:= substr(pls_obter_seq_codigo_material('',cd_servico_w),1,8);

															select	count(1)
															into STRICT	qt_reg_mat_w
															from	pls_material
															where	nr_sequencia	= nr_seq_material_w;
														end if;

														qt_autorizada_ww	:= substr(to_char(coalesce(qt_autorizada_w,0)),1,4);

														if (coalesce(nr_seq_lote_execucao_w,0) <> 0) then
															insert into pls_itens_lote_execucao(
																nr_sequencia, nr_seq_lote_exec, ie_permite_execucao,
																ie_executar, dt_atualizacao, nm_usuario,
																dt_atualizacao_nrec, nm_usuario_nrec,
																nr_seq_req_mat, nr_seq_requisicao, qt_solicitado,
																qt_aprovado, qt_executado, qt_pendente,
																dt_requisicao, cd_proc_mat,
																ds_proc_mat, ds_tipo_guia,
																ie_tipo_item, ie_tipo_guia, ds_observacao)
															values (	nextval('pls_itens_lote_execucao_seq'), nr_seq_lote_execucao_w, 'S',
																'S', clock_timestamp(), nm_usuario_p,
																clock_timestamp(), nm_usuario_p,
																nr_seq_req_mat_w, nr_seq_requisicao_w, CASE WHEN ie_status_w='S' THEN  qt_autorizada_ww  ELSE 0 END ,
																CASE WHEN ie_status_w='S' THEN  qt_autorizada_ww  ELSE 0 END , CASE WHEN ie_status_w='S' THEN  qt_autorizada_ww  ELSE 0 END , 0,
																to_date(clock_timestamp(),'dd/mm/rrrr'), nr_seq_material_w,
																substr(pls_obter_desc_material(nr_seq_material_w),1,255), substr(obter_valor_dominio(1746,'2'),1,255),
																'M', '2', substr(wheb_mensagem_pck.GET_TEXTO(1189303),1,255));
														end if;

														insert	into pls_execucao_req_item(nr_sequencia, ie_tipo_guia,
															nr_seq_segurado, dt_atualizacao, nm_usuario,
															nr_seq_material,
															qt_item, nr_seq_req_mat,
															ie_tipo_processo, nr_seq_requisicao,
															nr_seq_execucao, ie_situacao, nr_seq_guia)
														values (nextval('pls_execucao_req_item_seq'), '2',
															nr_seq_segurado_w, clock_timestamp(), nm_usuario_p,
															nr_seq_material_w,
															CASE WHEN ie_status_w='S' THEN  qt_autorizada_ww  ELSE 0 END , nr_seq_req_mat_w,
															'I', nr_seq_requisicao_w,
															nr_seq_req_execucao_w, ie_status_w, nr_seq_guia_w);

														select	nextval('pls_guia_plano_mat_seq')
														into STRICT	nr_seq_guia_mat_w
														;

														insert	into pls_guia_plano_mat(nr_sequencia, nr_seq_guia, nr_seq_material,
															qt_solicitada, dt_atualizacao, nm_usuario,
															dt_atualizacao_nrec, nm_usuario_nrec, ie_status,
															qt_autorizada)
														values (nr_seq_guia_mat_w, nr_seq_guia_w, nr_seq_material_w,
															qt_autorizada_ww, clock_timestamp(), nm_usuario_p,
															clock_timestamp(), nm_usuario_p, ie_status_w,
															CASE WHEN ie_status_w='S' THEN  qt_autorizada_ww  ELSE 0 END );
													end if;
												end if;
											end if;
										end if;
									elsif (nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '') then
										if (ie_resposta_wsd_w	= 1) then
											ie_status_w	:= 'N';
											qt_negado := qt_negado + 1;
										elsif (ie_resposta_wsd_w	= 2) then
											ie_status_w	:= 'S';
											qt_aprovado := qt_aprovado + 1;
										elsif (ie_resposta_wsd_w	= 3) then
											ie_status_w	:= 'D';
											qt_cancelado := qt_cancelado + 1;
										end if;

										if (ie_tipo_tabela_w	in ('0','1','4')) then
											update	pls_guia_plano_proc
											set	ie_status 	= ie_status_w,
												qt_autorizada	= CASE WHEN ie_status_w='S' THEN  qt_solicitada  ELSE 0 END
											where	nr_sequencia 	= nr_seq_guia_proc_w;

											qt_item := qt_item + 1;

										elsif (ie_tipo_tabela_w	in ('2','3','5','6')) then
											update	pls_guia_plano_mat
											set	ie_status 	= ie_status_w,
												qt_autorizada	= CASE WHEN ie_status_w='S' THEN  qt_solicitada  ELSE 0 END
											where	nr_sequencia 	= nr_seq_guia_mat_w;

											qt_item := qt_item + 1;

										end if;
									end if;

									end;
								end loop;
							close C03;
							end;
						end loop;
					close C02;

					if (nr_seq_requisicao_w IS NOT NULL AND nr_seq_requisicao_w::text <> '') then
						select	dt_valid_senha_ext
						into STRICT	dt_valid_senha_ext_w
						from	pls_requisicao
						where	nr_sequencia = nr_seq_requisicao_w;
					
						if (qt_aprovado	= qt_item) then
							update 	pls_requisicao
							set	ie_estagio = 2,
								cd_senha_externa = nr_seq_origem_w,
								dt_valid_senha_ext = coalesce(dt_valid_senha_ext, clock_timestamp())
							where	nr_sequencia = nr_seq_requisicao_w;
						elsif (qt_cancelado	= qt_item) then
							update 	pls_requisicao
							set	ie_estagio = 3
							where	nr_sequencia = nr_seq_requisicao_w;
						elsif (qt_negado	= qt_item) then
							update 	pls_requisicao
							set	ie_estagio = 7
							where	nr_sequencia = nr_seq_requisicao_w;
						else
							update 	pls_requisicao
							set	ie_estagio = 6,
								cd_senha_externa = nr_seq_origem_w,
								dt_valid_senha_ext = coalesce(dt_valid_senha_ext, clock_timestamp())
							where	nr_sequencia = nr_seq_requisicao_w;
						end if;

						CALL pls_requisicao_gravar_hist(	nr_seq_requisicao_w, 'L', substr(wheb_mensagem_pck.GET_TEXTO(1189304),1,255),
										'',nm_usuario_p);
						
						CALL pls_gerar_log_A1100(substr(wheb_mensagem_pck.GET_TEXTO(1189305,'NR_SEQ_REQUISICAO='|| nr_seq_requisicao_w),1,255),nr_seq_cabecalho_p, nr_seq_dados_pedido_w , nm_usuario_p);
						
						update 	ptu_dados_pedido_a1100
						set	nr_seq_pedido_autor	= nr_seq_pedido_aut_w,
							nr_seq_requisicao	= nr_seq_requisicao_w
						where 	nr_sequencia		= nr_seq_dados_pedido_w;	

						select	count(1)
						into STRICT	qt_resp_w
						from	ptu_resposta_autorizacao
						where	nr_seq_requisicao	= nr_seq_requisicao_w;
						
						if (qt_resp_w > 0) then
							update	ptu_resposta_autorizacao
							set	ie_tipo_autorizacao	= 2
							where	nr_seq_requisicao	= nr_seq_requisicao_w;
						end if;

						update	pls_auditoria
						set	ie_status		= 'F',
							dt_liberacao		= clock_timestamp(),
							nr_seq_proc_interno	 = NULL,
							dt_atualizacao		= clock_timestamp(),
							nm_usuario		= nm_usuario_p
						where	nr_seq_requisicao	= nr_seq_requisicao_w;
						
						update	pls_auditoria_grupo
						set	dt_liberacao		= clock_timestamp(),
							ie_status		= 'S',
							nm_usuario		= nm_usuario_p,
							dt_atualizacao		= clock_timestamp()
						where	coalesce(dt_liberacao::text, '') = ''
						and	exists (	SELECT	1
								from 	pls_auditoria x
								where 	x.nr_seq_requisicao	= nr_seq_requisicao_w
								and 	x.nr_sequencia 		= nr_seq_auditoria);

						if (nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '') then
							if (qt_aprovado	= qt_item) then
								update 	pls_guia_plano
								set	ie_estagio = 6,
									cd_senha_externa = nr_seq_origem_w,
									dt_valid_senha_ext = coalesce(dt_valid_senha_ext_w, clock_timestamp())
								where	nr_sequencia = nr_seq_guia_w;
							elsif (qt_cancelado	= qt_item) then
								update 	pls_guia_plano
								set	ie_estagio = 8
								where	nr_sequencia = nr_seq_guia_w;
							elsif (qt_negado	= qt_item) then
								update 	pls_guia_plano
								set	ie_estagio = 4
								where	nr_sequencia = nr_seq_guia_w;
							else
								update 	pls_guia_plano
								set	ie_estagio = 10,
									cd_senha_externa = nr_seq_origem_w,
									dt_valid_senha_ext = coalesce(dt_valid_senha_ext_w, clock_timestamp())
								where	nr_sequencia = nr_seq_guia_w;
							end if;

							CALL pls_guia_gravar_historico(nr_seq_guia_w, 2, substr(wheb_mensagem_pck.GET_TEXTO(1189306),1,255), null, nm_usuario_p);

							CALL pls_gerar_log_A1100(substr(wheb_mensagem_pck.GET_TEXTO(1190126,'NR_SEQ_REQUISICAO='|| nr_seq_requisicao_w || ';NR_SEQ_GUIA=' || nr_seq_guia_w),1,255),nr_seq_cabecalho_p, nr_seq_dados_pedido_w , nm_usuario_p);
							
							update 	ptu_dados_pedido_a1100
							set	nr_seq_pedido_autor	= nr_seq_pedido_aut_w,
								nr_seq_guia		= nr_seq_guia_w
							where 	nr_sequencia		= nr_seq_dados_pedido_w;
						elsif (coalesce(nr_seq_guia_w::text, '') = '') then
							if (lpad(cd_cooperativa_w,4,'0') = lpad(cd_unimed_origem_w,4,'0'))then
								select	nr_seq_segurado,
									nr_seq_plano,
									dt_valid_senha_ext
								into STRICT	nr_seq_segurado_w,
									nr_seq_plano_w,
									dt_valid_senha_ext_w
								from	pls_requisicao
								where	nr_sequencia = nr_seq_requisicao_w;

								begin
									select	nr_sequencia
									into STRICT	nr_seq_uni_exec_w
									from	pls_congenere
									where	(cd_cooperativa)::numeric 	= (cd_unimed_executora_w)::numeric;
								exception
								when others then
									nr_seq_uni_exec_w	:= null;
								end;
							
								select	nextval('pls_lote_execucao_req_seq')
								into STRICT	nr_seq_lote_execucao_w
								;

								insert into pls_lote_execucao_req(
									nr_sequencia, nr_seq_segurado, dt_geracao_lote,
									dt_atualizacao, nm_usuario, dt_atualizacao_nrec,
									nm_usuario_nrec, ds_observacao)
								values (	nr_seq_lote_execucao_w, nr_seq_segurado_w, clock_timestamp(),
									clock_timestamp(), nm_usuario_p, clock_timestamp(),
									nm_usuario_p, substr(wheb_mensagem_pck.GET_TEXTO(1189308),1,255));

								select	nextval('pls_execucao_requisicao_seq')
								into STRICT	nr_seq_req_execucao_w
								;

								select	nextval('pls_guia_plano_seq')
								into STRICT	nr_seq_guia_w
								;

								insert	into pls_execucao_requisicao(nr_sequencia, ie_situacao, nr_seq_requisicao,
									dt_atualizacao, nm_usuario, dt_atualizacao_nrec,
									nm_usuario_nrec, nr_seq_lote_exec, dt_execucao, nr_seq_guia)
								values (nr_seq_req_execucao_w, 1, nr_seq_requisicao_w,
									clock_timestamp(), nm_usuario_p, clock_timestamp(),
									nm_usuario_p, nr_seq_lote_execucao_w, clock_timestamp(), nr_seq_guia_w);

								insert	into pls_guia_plano(nr_sequencia, cd_guia, dt_solicitacao,
									ie_tipo_guia, nr_seq_segurado, cd_estabelecimento,
									nr_seq_plano, ie_status, ie_estagio,
									dt_atualizacao, nm_usuario, ie_tipo_processo,
									cd_medico_solicitante, nr_seq_uni_exec, ie_tipo_intercambio,
									ie_origem_solic, dt_autorizacao,
									cd_senha_externa, dt_valid_senha_ext)
								values (nr_seq_guia_w, nr_seq_guia_w, clock_timestamp(),
									'2', nr_seq_segurado_w, cd_estabelecimento_p,
									nr_seq_plano_w, '2', 7,
									clock_timestamp(), nm_usuario_p, 'I',
									null, nr_seq_uni_exec_w,'E',
									'I', clock_timestamp(),
									nr_seq_origem_w, coalesce(dt_valid_senha_ext_w, clock_timestamp()));

								CALL pls_gerar_cd_guia_regra(nr_seq_guia_w, nm_usuario_p);

								CALL pls_guia_gravar_historico(nr_seq_guia_w, 2, substr(wheb_mensagem_pck.GET_TEXTO(1189309),1,255), null, nm_usuario_p);

								CALL pls_gerar_log_A1100(substr(wheb_mensagem_pck.GET_TEXTO(1189305,'NR_SEQ_REQUISICAO='||nr_seq_requisicao_w),1,255), nr_seq_cabecalho_p, nr_seq_dados_pedido_w, nm_usuario_p);
								
								open C02;
								loop
								fetch C02 into
									nr_seq_itens_pedido_w,
									ie_tipo_tabela_w,
									cd_servico_w,
									ds_servico_w,
									qt_autorizada_w,
									ie_resposta_wsd_w,
									nr_seq_item_w;
								EXIT WHEN NOT FOUND; /* apply on C02 */
									begin
									qt_autorizada_ww	:= substr(to_char(coalesce(qt_autorizada_w,0)),1,4);

									if (ie_resposta_wsd_w	= 1) then
										ie_status_w	:= 'N';
										ie_autorizado_w	:= 1;
									elsif (ie_resposta_wsd_w	= 2) then
										ie_status_w	:= 'S';
										ie_autorizado_w	:= 2;
									elsif (ie_resposta_wsd_w	= 3) then
										ie_status_w	:= 'D';
										ie_autorizado_w := 1;
									end if;

									if (ie_tipo_tabela_w	in ('0','1','4')) then
										nr_seq_req_mat_w	:= null;
										nr_seq_guia_mat_w	:= null;

										select	max(ie_origem_proced)
										into STRICT	ie_origem_proced_w
										from	procedimento
										where	cd_procedimento		= cd_servico_w
										and	ie_origem_proced	in (1,4,5,8)
										and	ie_situacao		= 'A';

										select	max(nr_sequencia)
										into STRICT	nr_seq_req_proc_w
										from	pls_requisicao_proc
										where	cd_procedimento = cd_servico_w
										and	ie_origem_proced = ie_origem_proced_w
										and	nr_seq_requisicao = nr_seq_requisicao_w;
										
										if (ie_status_w = 'S') then
											if (coalesce(nr_seq_lote_execucao_w,0) <> 0) then
												insert into pls_itens_lote_execucao(
													nr_sequencia, nr_seq_lote_exec, ie_permite_execucao,
													ie_executar, dt_atualizacao, nm_usuario,
													dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_req_proc,
													nr_seq_requisicao, qt_solicitado,
													qt_aprovado, qt_executado, qt_pendente,
													dt_requisicao, cd_proc_mat,
													ds_proc_mat, ds_tipo_guia,
													ie_tipo_item, ie_tipo_guia, ds_observacao)
												values (	nextval('pls_itens_lote_execucao_seq'), nr_seq_lote_execucao_w, 'S',
													'S', clock_timestamp(), nm_usuario_p,
													clock_timestamp(), nm_usuario_p, nr_seq_req_proc_w,
													nr_seq_requisicao_w, CASE WHEN ie_status_w='S' THEN  qt_autorizada_ww  ELSE 0 END ,
													CASE WHEN ie_status_w='S' THEN  qt_autorizada_ww  ELSE 0 END , CASE WHEN ie_status_w='S' THEN  qt_autorizada_ww  ELSE 0 END , 0,
													to_date(clock_timestamp(),'dd/mm/rrrr'), cd_servico_w,
													substr(obter_descricao_procedimento(cd_servico_w,ie_origem_proced_w),1,255), substr(obter_valor_dominio(1746,'2'),1,255),
													'P', '2', substr(wheb_mensagem_pck.GET_TEXTO(1189303),1,255));
											end if;

											insert	into pls_execucao_req_item(nr_sequencia, ie_tipo_guia,
												nr_seq_segurado, dt_atualizacao, nm_usuario,
												cd_procedimento, ie_origem_proced,
												qt_item, nr_seq_req_proc,
												ie_tipo_processo, nr_seq_requisicao,
												nr_seq_execucao, ie_situacao, nr_seq_guia)
											values (nextval('pls_execucao_req_item_seq'), '2',
												nr_seq_segurado_w, clock_timestamp(), nm_usuario_p,
												cd_servico_w, ie_origem_proced_w,
												CASE WHEN ie_status_w='S' THEN  qt_autorizada_ww  ELSE 0 END , nr_seq_req_proc_w,
												'I', nr_seq_requisicao_w,
												nr_seq_req_execucao_w, ie_status_w, nr_seq_guia_w);
												
											select	nextval('pls_guia_plano_proc_seq')
											into STRICT	nr_seq_guia_proc_w
											;

											insert	into pls_guia_plano_proc(nr_sequencia, nr_seq_guia, cd_procedimento,
												ie_origem_proced, qt_solicitada, dt_atualizacao,
												nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
												ie_status, qt_autorizada)
											values (nr_seq_guia_proc_w, nr_seq_guia_w, cd_servico_w,
												ie_origem_proced_w, qt_autorizada_ww, clock_timestamp(),
												nm_usuario_p, clock_timestamp(), nm_usuario_p,
												ie_status_w, CASE WHEN ie_status_w='S' THEN  qt_autorizada_ww  ELSE 0 END );
										end if;
									elsif (ie_tipo_tabela_w	in ('2','3','5','6')) then
										SELECT * FROM ptu_gerar_mat_envio_intercamb(cd_servico_w, 'R', ie_tipo_tabela_w, null, nm_usuario_p, cd_servico_conversao_w, ds_servico_ww) INTO STRICT cd_servico_conversao_w, ds_servico_ww;

										if (coalesce(cd_servico_conversao_w,0)	<> 0) then
											begin
											select	max(nr_sequencia)
											into STRICT	nr_seq_material_w
											from	pls_material
											where	cd_material_ops	= cd_servico_conversao_w;
											exception
											when others then
												nr_seq_material_w	:= null;
											end;

											if (coalesce(nr_seq_material_w::text, '') = '') then
												SELECT * FROM pls_obter_mat_a900_vigente( nr_seq_material_w, clock_timestamp(), cd_servico_conversao_w, null) INTO STRICT  nr_seq_material_w, cd_servico_conversao_w;
											end if;

											select	count(1)
											into STRICT	qt_reg_mat_w
											from	pls_material
											where	nr_sequencia	= nr_seq_material_w;
										else
											nr_seq_material_w	:= substr(pls_obter_seq_codigo_material('',cd_servico_w),1,8);

											select	count(1)
											into STRICT	qt_reg_mat_w
											from	pls_material
											where	nr_sequencia	= nr_seq_material_w;
										end if;

										select	max(nr_sequencia)
										into STRICT	nr_seq_req_mat_w
										from	pls_requisicao_mat
										where	nr_seq_material = nr_seq_material_w
										and	nr_seq_requisicao = nr_seq_requisicao_w;

										if (ie_status_w = 'S') then
											if (coalesce(nr_seq_lote_execucao_w,0) <> 0) then
												insert into pls_itens_lote_execucao(
													nr_sequencia, nr_seq_lote_exec, ie_permite_execucao,
													ie_executar, dt_atualizacao, nm_usuario,
													dt_atualizacao_nrec, nm_usuario_nrec,
													nr_seq_req_mat, nr_seq_requisicao, qt_solicitado,
													qt_aprovado, qt_executado, qt_pendente,
													dt_requisicao, cd_proc_mat,
													ds_proc_mat, ds_tipo_guia,
													ie_tipo_item, ie_tipo_guia, ds_observacao)
												values (	nextval('pls_itens_lote_execucao_seq'), nr_seq_lote_execucao_w, 'S',
													'S', clock_timestamp(), nm_usuario_p,
													clock_timestamp(), nm_usuario_p,
													nr_seq_req_mat_w, nr_seq_requisicao_w, CASE WHEN ie_status_w='S' THEN  qt_autorizada_ww  ELSE 0 END ,
													CASE WHEN ie_status_w='S' THEN  qt_autorizada_ww  ELSE 0 END , CASE WHEN ie_status_w='S' THEN  qt_autorizada_ww  ELSE 0 END , 0,
													to_date(clock_timestamp(),'dd/mm/rrrr'), nr_seq_material_w,
													substr(pls_obter_desc_material(nr_seq_material_w),1,255), substr(obter_valor_dominio(1746,'2'),1,255),
													'M', '2', substr(wheb_mensagem_pck.GET_TEXTO(1189303),1,255));
											end if;

											insert	into pls_execucao_req_item(nr_sequencia, ie_tipo_guia,
												nr_seq_segurado, dt_atualizacao, nm_usuario,
												nr_seq_material,
												qt_item, nr_seq_req_mat,
												ie_tipo_processo, nr_seq_requisicao,
												nr_seq_execucao, ie_situacao, nr_seq_guia)
											values (nextval('pls_execucao_req_item_seq'), '2',
												nr_seq_segurado_w, clock_timestamp(), nm_usuario_p,
												nr_seq_material_w,
												CASE WHEN ie_status_w='S' THEN  qt_autorizada_ww  ELSE 0 END , nr_seq_req_mat_w,
												'I', nr_seq_requisicao_w,
												nr_seq_req_execucao_w, ie_status_w, nr_seq_guia_w);

											select	nextval('pls_guia_plano_mat_seq')
											into STRICT	nr_seq_guia_mat_w
											;

											insert	into pls_guia_plano_mat(nr_sequencia, nr_seq_guia, nr_seq_material,
												qt_solicitada, dt_atualizacao, nm_usuario,
												dt_atualizacao_nrec, nm_usuario_nrec, ie_status,
												qt_autorizada)
											values (nr_seq_guia_mat_w, nr_seq_guia_w, nr_seq_material_w,
												qt_autorizada_ww, clock_timestamp(), nm_usuario_p,
												clock_timestamp(), nm_usuario_p, ie_status_w,
												CASE WHEN ie_status_w='S' THEN  qt_autorizada_ww  ELSE 0 END );
										end if;
									end if;
									end;
								end loop;
								close C02;

								if (qt_aprovado	= qt_item) then
									update 	pls_guia_plano
									set	ie_estagio = 6,
										cd_senha_externa = nr_seq_origem_w,
										dt_valid_senha_ext = coalesce(dt_valid_senha_ext_w, clock_timestamp())
									where	nr_sequencia = nr_seq_guia_w;
								elsif (qt_cancelado	= qt_item) then
									update 	pls_guia_plano
									set	ie_estagio = 8
									where	nr_sequencia = nr_seq_guia_w;
								elsif (qt_negado	= qt_item) then
									update 	pls_guia_plano
									set	ie_estagio = 4
									where	nr_sequencia = nr_seq_guia_w;
								else
									update 	pls_guia_plano
									set	ie_estagio = 10,
										cd_senha_externa = nr_seq_origem_w,
										dt_valid_senha_ext = coalesce(dt_valid_senha_ext_w, clock_timestamp())
									where	nr_sequencia = nr_seq_guia_w;
								end if;

								CALL pls_guia_gravar_historico(nr_seq_guia_w, 2, substr(wheb_mensagem_pck.GET_TEXTO(1189306),1,255), null, nm_usuario_p);

								CALL pls_gerar_log_A1100(substr(wheb_mensagem_pck.GET_TEXTO(1190126,'NR_SEQ_REQUISICAO='||nr_seq_requisicao_w || ';NR_SEQ_GUIA=' || nr_seq_guia_w),1,255),nr_seq_cabecalho_p, nr_seq_dados_pedido_w , nm_usuario_p);

								update	ptu_resposta_autorizacao
								set	nr_seq_guia		= nr_seq_guia_w
								where	nr_sequencia		= nr_seq_resp_auto_w;

								if (coalesce(nr_seq_trans_refe_w,0)	= 0) then
									update	ptu_pedido_autorizacao
									set	nr_seq_guia		= nr_seq_guia_w
									where	nr_sequencia		= nr_seq_pedido_aut_w;
								else
									update	ptu_pedido_compl_aut
									set	nr_seq_guia		= nr_seq_guia_w
									where	nr_sequencia		= nr_seq_pedido_compl_w;
								end if;

								update 	ptu_dados_pedido_a1100
								set	nr_seq_guia		= nr_seq_guia_w
								where 	nr_sequencia		= nr_seq_dados_pedido_w;
							end if;
						end if;
					elsif (nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '') then
						if (qt_aprovado	= qt_item) then
							update 	pls_guia_plano
							set	ie_estagio = 6,
								cd_senha_externa = nr_seq_origem_w,
								dt_valid_senha_ext = coalesce(dt_valid_senha_ext, clock_timestamp())
							where	nr_sequencia = nr_seq_guia_w;
						elsif (qt_cancelado	= qt_item) then
							update 	pls_guia_plano
							set	ie_estagio = 8
							where	nr_sequencia = nr_seq_guia_w;
						elsif (qt_negado	= qt_item) then
							update 	pls_guia_plano
							set	ie_estagio = 4
							where	nr_sequencia = nr_seq_guia_w;
						else
							update 	pls_guia_plano
							set	ie_estagio = 10,
								cd_senha_externa = nr_seq_origem_w,
								dt_valid_senha_ext = coalesce(dt_valid_senha_ext, clock_timestamp())
							where	nr_sequencia = nr_seq_guia_w;
						end if;

						CALL pls_guia_gravar_historico(nr_seq_guia_w, 2, substr(wheb_mensagem_pck.GET_TEXTO(1189306),1,255), null, nm_usuario_p);

						CALL pls_gerar_log_A1100(substr(wheb_mensagem_pck.GET_TEXTO(1189316, 'NR_SEQ_GUIA=' || nr_seq_guia_w),1,255),nr_seq_cabecalho_p, nr_seq_dados_pedido_w , nm_usuario_p);
						
						update 	ptu_dados_pedido_a1100
						set	nr_seq_pedido_autor	= nr_seq_pedido_aut_w,
							nr_seq_guia		= nr_seq_guia_w
						where 	nr_sequencia		= nr_seq_dados_pedido_w;
						
						select	count(1)
						into STRICT	qt_resp_w
						from	ptu_resposta_autorizacao
						where	nr_seq_guia		= nr_seq_guia_w;
						
						if (qt_resp_w > 0) then
							update	ptu_resposta_autorizacao
							set	ie_tipo_autorizacao	= 2
							where	nr_seq_guia		= nr_seq_guia_w;
						end if;

						update	pls_auditoria
						set	ie_status		= 'F',
							dt_liberacao		= clock_timestamp(),
							nr_seq_proc_interno	 = NULL,
							dt_atualizacao		= clock_timestamp(),
							nm_usuario		= nm_usuario_p
						where	nr_seq_guia		= nr_seq_guia_w;

						update	pls_auditoria_grupo
						set	dt_liberacao		= clock_timestamp(),
							ie_status		= 'S',
							nm_usuario		= nm_usuario_p,
							dt_atualizacao		= clock_timestamp()
						where	coalesce(dt_liberacao::text, '') = ''
						and	exists (	SELECT	1
								from 	pls_auditoria x
								where 	x.nr_seq_guia		= nr_seq_guia_w
								and 	x.nr_sequencia 		= nr_seq_auditoria);
					end if;
				elsif (nr_seq_pedido_compl_w IS NOT NULL AND nr_seq_pedido_compl_w::text <> '') then
					select 	nr_seq_requisicao,
						nr_seq_guia
					into STRICT	nr_seq_requisicao_w,
						nr_seq_guia_w
					from	ptu_pedido_compl_aut
					where	nr_sequencia = nr_seq_pedido_compl_w;

					open C02;
						loop
						fetch C02 into
							nr_seq_itens_pedido_w,
							ie_tipo_tabela_w,
							cd_servico_w,
							ds_servico_w,
							qt_autorizada_w,
							ie_resposta_wsd_w,
							nr_seq_item_w;
						EXIT WHEN NOT FOUND; /* apply on C02 */
							begin

							qt_aprovado	:= 0;
							qt_negado	:= 0;
							qt_cancelado	:= 0;
							qt_item		:= 0;

							open C04;
								loop
								fetch C04 into
									nr_seq_req_proc_w,
									nr_seq_req_mat_w,
									nr_seq_guia_mat_w,
									nr_seq_guia_proc_w;
								EXIT WHEN NOT FOUND; /* apply on C04 */
									begin
									if (nr_seq_requisicao_w IS NOT NULL AND nr_seq_requisicao_w::text <> '') then
										if (ie_resposta_wsd_w	= 1) then
											ie_status_w	:= 'N';
											qt_negado := qt_negado + 1;
										elsif (ie_resposta_wsd_w	= 2) then
											ie_status_w	:= 'S';
											qt_aprovado := qt_aprovado + 1;
										elsif (ie_resposta_wsd_w	= 3) then
											ie_status_w	:= 'C';
											qt_cancelado := qt_cancelado + 1;
										end if;

										if (ie_tipo_tabela_w	in ('0','1','4')) then
											update	pls_requisicao_proc
											set	ie_status 	= ie_status_w,
												qt_procedimento	= CASE WHEN ie_status_w='S' THEN  qt_solicitado  ELSE 0 END
											where	nr_sequencia 	= nr_seq_req_proc_w;

											qt_item := qt_item + 1;

										elsif (ie_tipo_tabela_w	in ('2','3','5','6')) then
											update	pls_requisicao_mat
											set	ie_status 	= ie_status_w,
												qt_material	= CASE WHEN ie_status_w='S' THEN  qt_solicitado  ELSE 0 END
											where	nr_sequencia 	= nr_seq_req_mat_w;

											qt_item := qt_item + 1;

										end if;

										if (nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '') then
											if (ie_resposta_wsd_w	= 1) then
												ie_status_w	:= 'N';
											elsif (ie_resposta_wsd_w	= 2) then
												ie_status_w	:= 'S';
											elsif (ie_resposta_wsd_w	= 3) then
												ie_status_w	:= 'D';
											end if;

											if (ie_tipo_tabela_w	in ('0','1','4')) then
												select	max(nr_sequencia)
												into STRICT	nr_seq_proc_guia_w
												from	pls_guia_plano_proc
												where	nr_seq_guia = nr_seq_guia_w
												and	cd_procedimento = (	SELECT	cd_procedimento
																from	pls_requisicao_proc
																where	nr_sequencia = nr_seq_req_proc_w)
												and	ie_origem_proced = (	select	ie_origem_proced 
																from	pls_requisicao_proc
																where	nr_sequencia = nr_seq_req_proc_w);

												if (nr_seq_proc_guia_w IS NOT NULL AND nr_seq_proc_guia_w::text <> '') then
													update	pls_guia_plano_proc
													set	ie_status 	= ie_status_w,
														qt_autorizada	= CASE WHEN ie_status_w='S' THEN  qt_solicitada  ELSE 0 END
													where	nr_sequencia 	= nr_seq_proc_guia_w;
												else
													if (ie_status_w = 'S') then
														update	pls_guia_plano
														set	ie_estagio = 7
														where	nr_sequencia = nr_seq_guia_w;

														select	nr_seq_segurado
														into STRICT	nr_seq_segurado_w
														from	pls_requisicao
														where	nr_sequencia = nr_seq_requisicao_w;

														select	max(nr_sequencia),
															max(nr_seq_lote_exec)
														into STRICT	nr_seq_req_execucao_w,
															nr_seq_lote_execucao_w
														from	pls_execucao_requisicao
														where	nr_seq_requisicao = nr_seq_requisicao_w;

														select	max(ie_origem_proced)
														into STRICT	ie_origem_proced_w
														from	procedimento
														where	cd_procedimento		= cd_servico_w
														and	ie_origem_proced	in (1,4,5,8)
														and	ie_situacao		= 'A';

														nr_seq_req_proc_w	:= null;
														nr_seq_guia_proc_w	:= null;

														SELECT * FROM ptu_gerar_mat_envio_intercamb(cd_servico_w, 'R', ie_tipo_tabela_w, null, nm_usuario_p, cd_servico_conversao_w, ds_servico_ww) INTO STRICT cd_servico_conversao_w, ds_servico_ww;

														if (coalesce(cd_servico_conversao_w,0)	<> 0) then
															begin
															select	max(nr_sequencia)
															into STRICT	nr_seq_material_w
															from	pls_material
															where	cd_material_ops	= cd_servico_conversao_w;
															exception
															when others then
																nr_seq_material_w	:= null;
															end;

															if (coalesce(nr_seq_material_w::text, '') = '') then
																SELECT * FROM pls_obter_mat_a900_vigente( nr_seq_material_w, clock_timestamp(), cd_servico_conversao_w, null) INTO STRICT  nr_seq_material_w, cd_servico_conversao_w;
															end if;

															select	count(1)
															into STRICT	qt_reg_mat_w
															from	pls_material
															where	nr_sequencia	= nr_seq_material_w;
														else
															nr_seq_material_w	:= substr(pls_obter_seq_codigo_material('',cd_servico_w),1,8);

															select	count(1)
															into STRICT	qt_reg_mat_w
															from	pls_material
															where	nr_sequencia	= nr_seq_material_w;
														end if;

														qt_autorizada_ww	:= substr(to_char(coalesce(qt_autorizada_w,0)),1,4);

														if (coalesce(nr_seq_lote_execucao_w,0) <> 0) then
															insert into pls_itens_lote_execucao(
																nr_sequencia, nr_seq_lote_exec, ie_permite_execucao,
																ie_executar, dt_atualizacao, nm_usuario,
																dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_req_proc,
																nr_seq_requisicao, qt_solicitado,
																qt_aprovado, qt_executado, qt_pendente,
																dt_requisicao, cd_proc_mat,
																ds_proc_mat, ds_tipo_guia,
																ie_tipo_item, ie_tipo_guia, ds_observacao)
															values (	nextval('pls_itens_lote_execucao_seq'), nr_seq_lote_execucao_w, 'S',
																'S', clock_timestamp(), nm_usuario_p,
																clock_timestamp(), nm_usuario_p, nr_seq_req_proc_w,
																nr_seq_requisicao_w, CASE WHEN ie_status_w='S' THEN  qt_autorizada_ww  ELSE 0 END ,
																CASE WHEN ie_status_w='S' THEN  qt_autorizada_ww  ELSE 0 END , CASE WHEN ie_status_w='S' THEN  qt_autorizada_ww  ELSE 0 END , 0,
																to_date(clock_timestamp(),'dd/mm/rrrr'), cd_servico_w,
																substr(obter_descricao_procedimento(cd_servico_w,ie_origem_proced_w),1,255), substr(obter_valor_dominio(1746,'2'),1,255),
																'P', '2', substr(wheb_mensagem_pck.GET_TEXTO(1189303),1,255));
														end if;

														insert	into pls_execucao_req_item(nr_sequencia, ie_tipo_guia,
															nr_seq_segurado, dt_atualizacao, nm_usuario,
															cd_procedimento, ie_origem_proced,
															qt_item, nr_seq_req_proc,
															ie_tipo_processo, nr_seq_requisicao,
															nr_seq_execucao, ie_situacao, nr_seq_guia)
														values (nextval('pls_execucao_req_item_seq'), '2',
															nr_seq_segurado_w, clock_timestamp(), nm_usuario_p,
															cd_servico_w, ie_origem_proced_w,
															CASE WHEN ie_status_w='S' THEN  qt_autorizada_ww  ELSE 0 END , nr_seq_req_proc_w,
															'I', nr_seq_requisicao_w,
															nr_seq_req_execucao_w, ie_status_w, nr_seq_guia_w);
															
														select	nextval('pls_guia_plano_proc_seq')
														into STRICT	nr_seq_guia_proc_w
														;

														insert	into pls_guia_plano_proc(nr_sequencia, nr_seq_guia, cd_procedimento,
															ie_origem_proced, qt_solicitada, dt_atualizacao,
															nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
															ie_status, qt_autorizada)
														values (nr_seq_guia_proc_w, nr_seq_guia_w, cd_servico_w,
															ie_origem_proced_w, qt_autorizada_ww, clock_timestamp(),
															nm_usuario_p, clock_timestamp(), nm_usuario_p,
															ie_status_w, CASE WHEN ie_status_w='S' THEN  qt_autorizada_ww  ELSE 0 END );
													end if;
												end if;
											elsif (ie_tipo_tabela_w	in ('2','3','5','6')) then
												select	max(nr_sequencia)
												into STRICT	nr_seq_mat_guia_w
												from	pls_guia_plano_mat
												where	nr_seq_guia = nr_seq_guia_w
												and	nr_seq_material = (	SELECT	nr_seq_material
																from	pls_requisicao_mat
																where	nr_sequencia = nr_seq_req_mat_w);

												if (nr_seq_mat_guia_w IS NOT NULL AND nr_seq_mat_guia_w::text <> '') then
													update	pls_guia_plano_mat
													set	ie_status 	= ie_status_w,
														qt_autorizada	= CASE WHEN ie_status_w='S' THEN  qt_solicitada  ELSE 0 END
													where	nr_sequencia 	= nr_seq_mat_guia_w;
												else
													if (ie_status_w = 'S') then
														update	pls_guia_plano
														set	ie_estagio = 7
														where	nr_sequencia = nr_seq_guia_w;

														select	nr_seq_segurado
														into STRICT	nr_seq_segurado_w
														from	pls_requisicao
														where	nr_sequencia = nr_seq_requisicao_w;

														select	max(nr_sequencia),
															max(nr_seq_lote_exec)
														into STRICT	nr_seq_req_execucao_w,
															nr_seq_lote_execucao_w
														from	pls_execucao_requisicao
														where	nr_seq_requisicao = nr_seq_requisicao_w;

														qt_autorizada_ww	:= substr(to_char(coalesce(qt_autorizada_w,0)),1,4);

														if (coalesce(nr_seq_lote_execucao_w,0) <> 0) then
															insert into pls_itens_lote_execucao(
																nr_sequencia, nr_seq_lote_exec, ie_permite_execucao,
																ie_executar, dt_atualizacao, nm_usuario,
																dt_atualizacao_nrec, nm_usuario_nrec,
																nr_seq_req_mat, nr_seq_requisicao, qt_solicitado,
																qt_aprovado, qt_executado, qt_pendente,
																dt_requisicao, cd_proc_mat,
																ds_proc_mat, ds_tipo_guia,
																ie_tipo_item, ie_tipo_guia, ds_observacao)
															values (	nextval('pls_itens_lote_execucao_seq'), nr_seq_lote_execucao_w, 'S',
																'S', clock_timestamp(), nm_usuario_p,
																clock_timestamp(), nm_usuario_p,
																nr_seq_req_mat_w, nr_seq_requisicao_w, CASE WHEN ie_status_w='S' THEN  qt_autorizada_ww  ELSE 0 END ,
																CASE WHEN ie_status_w='S' THEN  qt_autorizada_ww  ELSE 0 END , CASE WHEN ie_status_w='S' THEN  qt_autorizada_ww  ELSE 0 END , 0,
																to_date(clock_timestamp(),'dd/mm/rrrr'), nr_seq_material_w,
																substr(pls_obter_desc_material(nr_seq_material_w),1,255), substr(obter_valor_dominio(1746,'2'),1,255),
																'M', '2', substr(wheb_mensagem_pck.GET_TEXTO(1189303),1,255));
														end if;

														insert	into pls_execucao_req_item(nr_sequencia, ie_tipo_guia,
															nr_seq_segurado, dt_atualizacao, nm_usuario,
															nr_seq_material,
															qt_item, nr_seq_req_mat,
															ie_tipo_processo, nr_seq_requisicao,
															nr_seq_execucao, ie_situacao, nr_seq_guia)
														values (nextval('pls_execucao_req_item_seq'), '2',
															nr_seq_segurado_w, clock_timestamp(), nm_usuario_p,
															nr_seq_material_w,
															CASE WHEN ie_status_w='S' THEN  qt_autorizada_ww  ELSE 0 END , nr_seq_req_mat_w,
															'I', nr_seq_requisicao_w,
															nr_seq_req_execucao_w, ie_status_w, nr_seq_guia_w);

														select	nextval('pls_guia_plano_mat_seq')
														into STRICT	nr_seq_guia_mat_w
														;

														insert	into pls_guia_plano_mat(nr_sequencia, nr_seq_guia, nr_seq_material,
															qt_solicitada, dt_atualizacao, nm_usuario,
															dt_atualizacao_nrec, nm_usuario_nrec, ie_status,
															qt_autorizada)
														values (nr_seq_guia_mat_w, nr_seq_guia_w, nr_seq_material_w,
															qt_autorizada_ww, clock_timestamp(), nm_usuario_p,
															clock_timestamp(), nm_usuario_p, ie_status_w,
															CASE WHEN ie_status_w='S' THEN  qt_autorizada_ww  ELSE 0 END );
													end if;
												end if;
											end if;
										end if;
									elsif (nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '') then
										if (ie_resposta_wsd_w	= 1) then
											ie_status_w	:= 'N';
											qt_negado := qt_negado + 1;
										elsif (ie_resposta_wsd_w	= 2) then
											ie_status_w	:= 'S';
											qt_aprovado := qt_aprovado + 1;
										elsif (ie_resposta_wsd_w	= 3) then
											ie_status_w	:= 'D';
											qt_cancelado := qt_cancelado + 1;
										end if;

										if (ie_tipo_tabela_w	in ('0','1','4')) then
											update	pls_guia_plano_proc
											set	ie_status 	= ie_status_w,
												qt_autorizada	= CASE WHEN ie_status_w='S' THEN  qt_solicitada  ELSE 0 END
											where	nr_sequencia 	= nr_seq_guia_proc_w;

											qt_item := qt_item + 1;

										elsif (ie_tipo_tabela_w	in ('2','3','5','6')) then
											update	pls_guia_plano_mat
											set	ie_status 	= ie_status_w,
												qt_autorizada	= CASE WHEN ie_status_w='S' THEN  qt_solicitada  ELSE 0 END
											where	nr_sequencia 	= nr_seq_guia_mat_w;

											qt_item := qt_item + 1;

										end if;
									end if;

									end;
								end loop;
							close C04;
							end;
						end loop;
					close C02;

					if (nr_seq_requisicao_w IS NOT NULL AND nr_seq_requisicao_w::text <> '') then
						select	dt_valid_senha_ext
						into STRICT	dt_valid_senha_ext_w
						from	pls_requisicao
						where	nr_sequencia = nr_seq_requisicao_w;

						if (qt_aprovado	= qt_item) then
							update 	pls_requisicao
							set	ie_estagio = 2,
								cd_senha_externa = nr_seq_origem_w,
								dt_valid_senha_ext = coalesce(dt_valid_senha_ext, clock_timestamp())
							where	nr_sequencia = nr_seq_requisicao_w;
						elsif (qt_cancelado	= qt_item) then
							update 	pls_requisicao
							set	ie_estagio = 3
							where	nr_sequencia = nr_seq_requisicao_w;
						elsif (qt_negado	= qt_item) then
							update 	pls_requisicao
							set	ie_estagio = 7
							where	nr_sequencia = nr_seq_requisicao_w;
						else
							update 	pls_requisicao
							set	ie_estagio = 6,
								cd_senha_externa = nr_seq_origem_w,
								dt_valid_senha_ext = coalesce(dt_valid_senha_ext, clock_timestamp())
							where	nr_sequencia = nr_seq_requisicao_w;
						end if;
						
						CALL pls_requisicao_gravar_hist(	nr_seq_requisicao_w, 'L', substr(wheb_mensagem_pck.GET_TEXTO(1189304),1,255),
										'',nm_usuario_p);
						
						CALL pls_gerar_log_A1100(substr(wheb_mensagem_pck.GET_TEXTO(1189305,'NR_SEQ_REQUISICAO='||nr_seq_requisicao_w),1,255),nr_seq_cabecalho_p, nr_seq_dados_pedido_w , nm_usuario_p);
						
						update 	ptu_dados_pedido_a1100
						set	nr_seq_pedido_compl	= nr_seq_pedido_compl_w,
							nr_seq_requisicao	= nr_seq_requisicao_w
						where 	nr_sequencia		= nr_seq_dados_pedido_w;

						select	count(1)
						into STRICT	qt_resp_w
						from	ptu_resposta_autorizacao
						where	nr_seq_requisicao	= nr_seq_requisicao_w;
						
						if (qt_resp_w > 0) then
							update	ptu_resposta_autorizacao
							set	ie_tipo_autorizacao	= 2
							where	nr_seq_requisicao	= nr_seq_requisicao_w;
						end if;

						update	pls_auditoria
						set	ie_status		= 'F',
							dt_liberacao		= clock_timestamp(),
							nr_seq_proc_interno	 = NULL,
							dt_atualizacao		= clock_timestamp(),
							nm_usuario		= nm_usuario_p
						where	nr_seq_requisicao	= nr_seq_requisicao_w;
						
						update	pls_auditoria_grupo
						set	dt_liberacao		= clock_timestamp(),
							ie_status		= 'S',
							nm_usuario		= nm_usuario_p,
							dt_atualizacao		= clock_timestamp()
						where	coalesce(dt_liberacao::text, '') = ''
						and	exists (	SELECT	1
								from 	pls_auditoria x
								where 	x.nr_seq_requisicao	= nr_seq_requisicao_w
								and 	x.nr_sequencia 		= nr_seq_auditoria);

						if (nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '') then
							if (qt_aprovado	= qt_item) then
								update 	pls_guia_plano
								set	ie_estagio = 6,
									cd_senha_externa = nr_seq_origem_w,
									dt_valid_senha_ext = coalesce(dt_valid_senha_ext_w, clock_timestamp())
								where	nr_sequencia = nr_seq_guia_w;
							elsif (qt_cancelado	= qt_item) then
								update 	pls_guia_plano
								set	ie_estagio = 8
								where	nr_sequencia = nr_seq_guia_w;
							elsif (qt_negado	= qt_item) then
								update 	pls_guia_plano
								set	ie_estagio = 4
								where	nr_sequencia = nr_seq_guia_w;
							else
								update 	pls_guia_plano
								set	ie_estagio = 10,
									cd_senha_externa = nr_seq_origem_w,
									dt_valid_senha_ext = coalesce(dt_valid_senha_ext_w, clock_timestamp())
								where	nr_sequencia = nr_seq_guia_w;
							end if;

							CALL pls_guia_gravar_historico(nr_seq_guia_w, 2, substr(wheb_mensagem_pck.GET_TEXTO(1189306),1,255), null, nm_usuario_p);

							CALL pls_gerar_log_A1100(substr(wheb_mensagem_pck.GET_TEXTO(1190126,'NR_SEQ_REQUISICAO='||nr_seq_requisicao_w || ';NR_SEQ_GUIA=' || nr_seq_guia_w),1,255),nr_seq_cabecalho_p, nr_seq_dados_pedido_w , nm_usuario_p);
							
							update 	ptu_dados_pedido_a1100
							set	nr_seq_pedido_autor	= nr_seq_pedido_aut_w,
								nr_seq_guia		= nr_seq_guia_w
							where 	nr_sequencia		= nr_seq_dados_pedido_w;
						elsif (coalesce(nr_seq_guia_w::text, '') = '') then
							if (lpad(cd_cooperativa_w,4,'0') = lpad(cd_unimed_origem_w,4,'0'))then
								select	nr_seq_segurado,
									nr_seq_plano,
									dt_valid_senha_ext
								into STRICT	nr_seq_segurado_w,
									nr_seq_plano_w,
									dt_valid_senha_ext_w
								from	pls_requisicao
								where	nr_sequencia = nr_seq_requisicao_w;

								begin
									select	nr_sequencia
									into STRICT	nr_seq_uni_exec_w
									from	pls_congenere
									where	(cd_cooperativa)::numeric 	= (cd_unimed_executora_w)::numeric;
								exception
								when others then
									nr_seq_uni_exec_w	:= null;
								end;
							
								select	nextval('pls_lote_execucao_req_seq')
								into STRICT	nr_seq_lote_execucao_w
								;

								insert into pls_lote_execucao_req(
									nr_sequencia, nr_seq_segurado, dt_geracao_lote,
									dt_atualizacao, nm_usuario, dt_atualizacao_nrec,
									nm_usuario_nrec, ds_observacao)
								values (	nr_seq_lote_execucao_w, nr_seq_segurado_w, clock_timestamp(),
									clock_timestamp(), nm_usuario_p, clock_timestamp(),
									nm_usuario_p, substr(wheb_mensagem_pck.GET_TEXTO(1189308),1,255));

								select	nextval('pls_execucao_requisicao_seq')
								into STRICT	nr_seq_req_execucao_w
								;

								select	nextval('pls_guia_plano_seq')
								into STRICT	nr_seq_guia_w
								;

								insert	into pls_execucao_requisicao(nr_sequencia, ie_situacao, nr_seq_requisicao,
									dt_atualizacao, nm_usuario, dt_atualizacao_nrec,
									nm_usuario_nrec, nr_seq_lote_exec, dt_execucao, nr_seq_guia)
								values (nr_seq_req_execucao_w, 1, nr_seq_requisicao_w,
									clock_timestamp(), nm_usuario_p, clock_timestamp(),
									nm_usuario_p, nr_seq_lote_execucao_w, clock_timestamp(), nr_seq_guia_w);

								insert	into pls_guia_plano(nr_sequencia, cd_guia, dt_solicitacao,
									ie_tipo_guia, nr_seq_segurado, cd_estabelecimento,
									nr_seq_plano, ie_status, ie_estagio,
									dt_atualizacao, nm_usuario, ie_tipo_processo,
									cd_medico_solicitante, nr_seq_uni_exec, ie_tipo_intercambio,
									ie_origem_solic, dt_autorizacao,
									cd_senha_externa, dt_valid_senha_ext)
								values (nr_seq_guia_w, nr_seq_guia_w, clock_timestamp(),
									'2', nr_seq_segurado_w, cd_estabelecimento_p,
									nr_seq_plano_w, '2', 7,
									clock_timestamp(), nm_usuario_p, 'I',
									null, nr_seq_uni_exec_w,'E',
									'I', clock_timestamp(),
									nr_seq_origem_w, coalesce(dt_valid_senha_ext_w, clock_timestamp()));

								CALL pls_gerar_cd_guia_regra(nr_seq_guia_w, nm_usuario_p);

								CALL pls_guia_gravar_historico(nr_seq_guia_w, 2, substr(wheb_mensagem_pck.GET_TEXTO(1189309),1,255), null, nm_usuario_p);

								CALL pls_gerar_log_A1100(substr(wheb_mensagem_pck.GET_TEXTO(1189317,'NR_SEQ_REQUISICAO='||nr_seq_requisicao_w || ';NR_SEQ_GUIA=' || nr_seq_guia_w),1,255), nr_seq_cabecalho_p, nr_seq_dados_pedido_w, nm_usuario_p);
								
								open C02;
								loop
								fetch C02 into
									nr_seq_itens_pedido_w,
									ie_tipo_tabela_w,
									cd_servico_w,
									ds_servico_w,
									qt_autorizada_w,
									ie_resposta_wsd_w,
									nr_seq_item_w;
								EXIT WHEN NOT FOUND; /* apply on C02 */
									begin
									qt_autorizada_ww	:= substr(to_char(coalesce(qt_autorizada_w,0)),1,4);

									if (ie_resposta_wsd_w	= 1) then
										ie_status_w	:= 'N';
										ie_autorizado_w	:= 1;
									elsif (ie_resposta_wsd_w	= 2) then
										ie_status_w	:= 'S';
										ie_autorizado_w	:= 2;
									elsif (ie_resposta_wsd_w	= 3) then
										ie_status_w	:= 'D';
										ie_autorizado_w := 1;
									end if;

									if (ie_tipo_tabela_w	in ('0','1','4')) then
										nr_seq_req_mat_w	:= null;
										nr_seq_guia_mat_w	:= null;

										select	max(ie_origem_proced)
										into STRICT	ie_origem_proced_w
										from	procedimento
										where	cd_procedimento		= cd_servico_w
										and	ie_origem_proced	in (1,4,5,8)
										and	ie_situacao		= 'A';

										select	max(nr_sequencia)
										into STRICT	nr_seq_req_proc_w
										from	pls_requisicao_proc
										where	cd_procedimento = cd_servico_w
										and	ie_origem_proced = ie_origem_proced_w
										and	nr_seq_requisicao = nr_seq_requisicao_w;
										
										if (ie_status_w = 'S') then
											if (coalesce(nr_seq_lote_execucao_w,0) <> 0) then
												insert into pls_itens_lote_execucao(
													nr_sequencia, nr_seq_lote_exec, ie_permite_execucao,
													ie_executar, dt_atualizacao, nm_usuario,
													dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_req_proc,
													nr_seq_requisicao, qt_solicitado,
													qt_aprovado, qt_executado, qt_pendente,
													dt_requisicao, cd_proc_mat,
													ds_proc_mat, ds_tipo_guia,
													ie_tipo_item, ie_tipo_guia, ds_observacao)
												values (	nextval('pls_itens_lote_execucao_seq'), nr_seq_lote_execucao_w, 'S',
													'S', clock_timestamp(), nm_usuario_p,
													clock_timestamp(), nm_usuario_p, nr_seq_req_proc_w,
													nr_seq_requisicao_w, CASE WHEN ie_status_w='S' THEN  qt_autorizada_ww  ELSE 0 END ,
													CASE WHEN ie_status_w='S' THEN  qt_autorizada_ww  ELSE 0 END , CASE WHEN ie_status_w='S' THEN  qt_autorizada_ww  ELSE 0 END , 0,
													to_date(clock_timestamp(),'dd/mm/rrrr'), cd_servico_w,
													substr(obter_descricao_procedimento(cd_servico_w,ie_origem_proced_w),1,255), substr(obter_valor_dominio(1746,'2'),1,255),
													'P', '2', substr(wheb_mensagem_pck.GET_TEXTO(1189303),1,255));
											end if;

											insert	into pls_execucao_req_item(nr_sequencia, ie_tipo_guia,
												nr_seq_segurado, dt_atualizacao, nm_usuario,
												cd_procedimento, ie_origem_proced,
												qt_item, nr_seq_req_proc,
												ie_tipo_processo, nr_seq_requisicao,
												nr_seq_execucao, ie_situacao, nr_seq_guia)
											values (nextval('pls_execucao_req_item_seq'), '2',
												nr_seq_segurado_w, clock_timestamp(), nm_usuario_p,
												cd_servico_w, ie_origem_proced_w,
												CASE WHEN ie_status_w='S' THEN  qt_autorizada_ww  ELSE 0 END , nr_seq_req_proc_w,
												'I', nr_seq_requisicao_w,
												nr_seq_req_execucao_w, ie_status_w, nr_seq_guia_w);
												
											select	nextval('pls_guia_plano_proc_seq')
											into STRICT	nr_seq_guia_proc_w
											;

											insert	into pls_guia_plano_proc(nr_sequencia, nr_seq_guia, cd_procedimento,
												ie_origem_proced, qt_solicitada, dt_atualizacao,
												nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
												ie_status, qt_autorizada)
											values (nr_seq_guia_proc_w, nr_seq_guia_w, cd_servico_w,
												ie_origem_proced_w, qt_autorizada_ww, clock_timestamp(),
												nm_usuario_p, clock_timestamp(), nm_usuario_p,
												ie_status_w, CASE WHEN ie_status_w='S' THEN  qt_autorizada_ww  ELSE 0 END );
										end if;
									elsif (ie_tipo_tabela_w	in ('2','3','5','6')) then
										SELECT * FROM ptu_gerar_mat_envio_intercamb(cd_servico_w, 'R', ie_tipo_tabela_w, null, nm_usuario_p, cd_servico_conversao_w, ds_servico_ww) INTO STRICT cd_servico_conversao_w, ds_servico_ww;

										if (coalesce(cd_servico_conversao_w,0)	<> 0) then
											begin
											select	max(nr_sequencia)
											into STRICT	nr_seq_material_w
											from	pls_material
											where	cd_material_ops	= cd_servico_conversao_w;
											exception
											when others then
												nr_seq_material_w	:= null;
											end;

											if (coalesce(nr_seq_material_w::text, '') = '') then
												SELECT * FROM pls_obter_mat_a900_vigente( nr_seq_material_w, clock_timestamp(), cd_servico_conversao_w, null) INTO STRICT  nr_seq_material_w, cd_servico_conversao_w;
											end if;

											select	count(1)
											into STRICT	qt_reg_mat_w
											from	pls_material
											where	nr_sequencia	= nr_seq_material_w;
										else
											nr_seq_material_w	:= substr(pls_obter_seq_codigo_material('',cd_servico_w),1,8);

											select	count(1)
											into STRICT	qt_reg_mat_w
											from	pls_material
											where	nr_sequencia	= nr_seq_material_w;
										end if;

										select	max(nr_sequencia)
										into STRICT	nr_seq_req_mat_w
										from	pls_requisicao_mat
										where	nr_seq_material = nr_seq_material_w
										and	nr_seq_requisicao = nr_seq_requisicao_w;

										if (ie_status_w = 'S') then
											if (coalesce(nr_seq_lote_execucao_w,0) <> 0) then
												insert into pls_itens_lote_execucao(
													nr_sequencia, nr_seq_lote_exec, ie_permite_execucao,
													ie_executar, dt_atualizacao, nm_usuario,
													dt_atualizacao_nrec, nm_usuario_nrec,
													nr_seq_req_mat, nr_seq_requisicao, qt_solicitado,
													qt_aprovado, qt_executado, qt_pendente,
													dt_requisicao, cd_proc_mat,
													ds_proc_mat, ds_tipo_guia,
													ie_tipo_item, ie_tipo_guia, ds_observacao)
												values (	nextval('pls_itens_lote_execucao_seq'), nr_seq_lote_execucao_w, 'S',
													'S', clock_timestamp(), nm_usuario_p,
													clock_timestamp(), nm_usuario_p,
													nr_seq_req_mat_w, nr_seq_requisicao_w, CASE WHEN ie_status_w='S' THEN  qt_autorizada_ww  ELSE 0 END ,
													CASE WHEN ie_status_w='S' THEN  qt_autorizada_ww  ELSE 0 END , CASE WHEN ie_status_w='S' THEN  qt_autorizada_ww  ELSE 0 END , 0,
													to_date(clock_timestamp(),'dd/mm/rrrr'), nr_seq_material_w,
													substr(pls_obter_desc_material(nr_seq_material_w),1,255), substr(obter_valor_dominio(1746,'2'),1,255),
													'M', '2', substr(wheb_mensagem_pck.GET_TEXTO(1189303),1,255));
											end if;

											insert	into pls_execucao_req_item(nr_sequencia, ie_tipo_guia,
												nr_seq_segurado, dt_atualizacao, nm_usuario,
												nr_seq_material,
												qt_item, nr_seq_req_mat,
												ie_tipo_processo, nr_seq_requisicao,
												nr_seq_execucao, ie_situacao, nr_seq_guia)
											values (nextval('pls_execucao_req_item_seq'), '2',
												nr_seq_segurado_w, clock_timestamp(), nm_usuario_p,
												nr_seq_material_w,
												CASE WHEN ie_status_w='S' THEN  qt_autorizada_ww  ELSE 0 END , nr_seq_req_mat_w,
												'I', nr_seq_requisicao_w,
												nr_seq_req_execucao_w, ie_status_w, nr_seq_guia_w);

											select	nextval('pls_guia_plano_mat_seq')
											into STRICT	nr_seq_guia_mat_w
											;

											insert	into pls_guia_plano_mat(nr_sequencia, nr_seq_guia, nr_seq_material,
												qt_solicitada, dt_atualizacao, nm_usuario,
												dt_atualizacao_nrec, nm_usuario_nrec, ie_status,
												qt_autorizada)
											values (nr_seq_guia_mat_w, nr_seq_guia_w, nr_seq_material_w,
												qt_autorizada_ww, clock_timestamp(), nm_usuario_p,
												clock_timestamp(), nm_usuario_p, ie_status_w,
												CASE WHEN ie_status_w='S' THEN  qt_autorizada_ww  ELSE 0 END );
										end if;
									end if;
									end;
								end loop;
								close C02;

								if (qt_aprovado	= qt_item) then
									update 	pls_guia_plano
									set	ie_estagio = 6,
										cd_senha_externa = nr_seq_origem_w,
										dt_valid_senha_ext = coalesce(dt_valid_senha_ext_w, clock_timestamp())
									where	nr_sequencia = nr_seq_guia_w;
								elsif (qt_cancelado	= qt_item) then
									update 	pls_guia_plano
									set	ie_estagio = 8
									where	nr_sequencia = nr_seq_guia_w;
								elsif (qt_negado	= qt_item) then
									update 	pls_guia_plano
									set	ie_estagio = 4
									where	nr_sequencia = nr_seq_guia_w;
								else
									update 	pls_guia_plano
									set	ie_estagio = 10,
										cd_senha_externa = nr_seq_origem_w,
										dt_valid_senha_ext = coalesce(dt_valid_senha_ext_w, clock_timestamp())
									where	nr_sequencia = nr_seq_guia_w;
								end if;

								CALL pls_guia_gravar_historico(nr_seq_guia_w, 2, substr(wheb_mensagem_pck.GET_TEXTO(1189306),1,255), null, nm_usuario_p);

								CALL pls_gerar_log_A1100(substr(wheb_mensagem_pck.GET_TEXTO(1190126,'NR_SEQ_REQUISICAO='||nr_seq_requisicao_w || ';NR_SEQ_GUIA=' || nr_seq_guia_w),1,255),nr_seq_cabecalho_p, nr_seq_dados_pedido_w , nm_usuario_p);
								
								update	ptu_resposta_autorizacao
								set	nr_seq_guia		= nr_seq_guia_w
								where	nr_sequencia		= nr_seq_resp_auto_w;

								if (coalesce(nr_seq_trans_refe_w,0)	= 0) then
									update	ptu_pedido_autorizacao
									set	nr_seq_guia		= nr_seq_guia_w
									where	nr_sequencia		= nr_seq_pedido_aut_w;
								else
									update	ptu_pedido_compl_aut
									set	nr_seq_guia		= nr_seq_guia_w
									where	nr_sequencia		= nr_seq_pedido_compl_w;
								end if;

								update 	ptu_dados_pedido_a1100
								set	nr_seq_guia		= nr_seq_guia_w
								where 	nr_sequencia		= nr_seq_dados_pedido_w;
							end if;
						end if;
					elsif (nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '') then
						if (qt_aprovado	= qt_item) then
							update 	pls_guia_plano
							set	ie_estagio = 6,
								cd_senha_externa = nr_seq_origem_w,
								dt_valid_senha_ext = coalesce(dt_valid_senha_ext, clock_timestamp())
							where	nr_sequencia = nr_seq_guia_w;
						elsif (qt_cancelado	= qt_item) then
							update 	pls_guia_plano
							set	ie_estagio = 8
							where	nr_sequencia = nr_seq_guia_w;
						elsif (qt_negado	= qt_item) then
							update 	pls_guia_plano
							set	ie_estagio = 4
							where	nr_sequencia = nr_seq_guia_w;
						else
							update 	pls_guia_plano
							set	ie_estagio = 10,
								cd_senha_externa = nr_seq_origem_w,
								dt_valid_senha_ext = coalesce(dt_valid_senha_ext, clock_timestamp())
							where	nr_sequencia = nr_seq_guia_w;
						end if;
						
						CALL pls_guia_gravar_historico(nr_seq_guia_w, 2, substr(wheb_mensagem_pck.GET_TEXTO(1189306),1,255), null, nm_usuario_p);

						CALL pls_gerar_log_A1100(substr(wheb_mensagem_pck.GET_TEXTO(1189316, 'NR_SEQ_GUIA=' || nr_seq_guia_w),1,255),nr_seq_cabecalho_p, nr_seq_dados_pedido_w , nm_usuario_p);
						
						update 	ptu_dados_pedido_a1100
						set	nr_seq_pedido_compl	= nr_seq_pedido_compl_w,
							nr_seq_guia		= nr_seq_guia_w
						where 	nr_sequencia		= nr_seq_dados_pedido_w;

						select	count(1)
						into STRICT	qt_resp_w
						from	ptu_resposta_autorizacao
						where	nr_seq_guia		= nr_seq_guia_w;
						
						if (qt_resp_w > 0) then
							update	ptu_resposta_autorizacao
							set	ie_tipo_autorizacao	= 2
							where	nr_seq_guia		= nr_seq_guia_w;
						end if;

						update	pls_auditoria
						set	ie_status		= 'F',
							dt_liberacao		= clock_timestamp(),
							nr_seq_proc_interno	 = NULL,
							dt_atualizacao		= clock_timestamp(),
							nm_usuario		= nm_usuario_p
						where	nr_seq_guia		= nr_seq_guia_w;

						update	pls_auditoria_grupo
						set	dt_liberacao		= clock_timestamp(),
							ie_status		= 'S',
							nm_usuario		= nm_usuario_p,
							dt_atualizacao		= clock_timestamp()
						where	coalesce(dt_liberacao::text, '') = ''
						and	exists (	SELECT	1
								from 	pls_auditoria x
								where 	x.nr_seq_guia		= nr_seq_guia_w
								and 	x.nr_sequencia 		= nr_seq_auditoria);
					end if;
				end if;
			else
				begin
					select	nr_via_solicitacao,
						nr_seq_segurado
					into STRICT	nr_via_cartao_w,
						nr_seq_segurado_w
					from	pls_segurado_carteira
					where	cd_usuario_plano	= cd_unimed_w||cd_usuario_plano_w;

					select	nr_seq_plano,
						cd_pessoa_fisica
					into STRICT	nr_seq_plano_w,
						cd_pessoa_fisica_w
					from	pls_segurado
					where	nr_sequencia	 = nr_seq_segurado_w;

					select	substr(nm_pessoa_fisica,1,25)
					into STRICT	nm_beneficiario_w
					from   	pessoa_fisica
					where  	cd_pessoa_fisica = cd_pessoa_fisica_w;
				exception
				when others then
					nr_via_cartao_w		:= 0;
					nr_seq_segurado_w	:= 0;
					nm_beneficiario_w	:= null;

				end;

				begin
					select	nr_sequencia
					into STRICT	nr_seq_uni_exec_w
					from	pls_congenere
					where	(cd_cooperativa)::numeric 	= (cd_unimed_executora_w)::numeric;
				exception
				when others then
					nr_seq_uni_exec_w	:= null;
				end;

				if (coalesce(nr_seq_segurado_w,0)	<> 0) then

					select	nextval('ptu_resposta_autorizacao_seq')
					into STRICT	nr_seq_resp_auto_w
					;

					if (coalesce(nr_seq_trans_refe_w,0)	= 0) then
						select	nextval('ptu_pedido_autorizacao_seq')
						into STRICT	nr_seq_pedido_aut_w
						;

						insert	into ptu_pedido_autorizacao(nr_sequencia, ie_tipo_cliente, cd_unimed_executora,
							cd_unimed_beneficiario, nr_seq_execucao, cd_unimed,
							cd_usuario_plano, nr_via_cartao, dt_atualizacao,
							nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
							nr_seq_requisicao, nr_seq_guia, dt_atendimento,
							cd_transacao, nr_versao, ie_alto_custo,
							ie_urg_emerg)
						values (nr_seq_pedido_aut_w, 'P', cd_unimed_executora_w,
							cd_unimed_origem_w, nr_seq_execucao_w, cd_unimed_w,
							cd_usuario_plano_w, nr_via_cartao_w, clock_timestamp(),
							nm_usuario_p, clock_timestamp(), nm_usuario_p,
							nr_seq_requisicao_w, nr_seq_guia_w, dt_resposta_wsd_w,
							'00600', nr_versao_w, 3,
							'N');

						insert	into ptu_resposta_autorizacao(nr_sequencia, cd_unimed_executora, cd_unimed_beneficiario,
							nr_seq_execucao, nr_seq_requisicao, cd_unimed,
							cd_usuario_plano, nm_beneficiario, dt_atualizacao,
							nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
							dt_validade, ie_tipo_cliente,ie_tipo_resposta,
							nr_seq_origem, nr_seq_guia, cd_transacao,
							ie_tipo_autorizacao, nr_versao)
						values (nr_seq_resp_auto_w, cd_unimed_executora_w, cd_unimed_origem_w,
							nr_seq_execucao_w, nr_seq_requisicao_w, cd_unimed_w,
							cd_usuario_plano_w, nm_beneficiario_w, clock_timestamp(),
							nm_usuario_p, clock_timestamp(), nm_usuario_p,
							clock_timestamp(), 'P', 'PA',
							nr_seq_origem_w, nr_seq_guia_w, '00501',
							2, nr_versao_w);

						update 	ptu_dados_pedido_a1100
						set	nr_seq_pedido_autor	= nr_seq_pedido_aut_w
						where 	nr_sequencia		= nr_seq_dados_pedido_w;

					else
						select	nextval('ptu_pedido_compl_aut_seq')
						into STRICT	nr_seq_pedido_compl_w
						;

						insert	into ptu_pedido_compl_aut(nr_sequencia, ie_tipo_cliente, cd_unimed_executora,
							cd_unimed_beneficiario, nr_seq_execucao, cd_transacao,
							nr_seq_origem, cd_unimed, cd_usuario_plano,
							dt_atualizacao, nm_usuario, dt_atualizacao_nrec,
							nm_usuario_nrec, nr_seq_requisicao, nr_seq_guia,
							nr_versao)
						values (nr_seq_pedido_compl_w, 'P', cd_unimed_executora_w,
							cd_unimed_origem_w, nr_seq_execucao_w, '00605',
							nr_seq_trans_refe_w, cd_unimed_w, cd_usuario_plano_w,
							clock_timestamp(), nm_usuario_p, clock_timestamp(),
							nm_usuario_p, nr_seq_requisicao_w, nr_seq_guia_w,
							nr_versao_w);

						insert	into ptu_resposta_autorizacao(nr_sequencia, cd_unimed_executora, cd_unimed_beneficiario,
							nr_seq_execucao, nr_seq_requisicao, cd_unimed,
							cd_usuario_plano, nm_beneficiario, dt_atualizacao,
							nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
							dt_validade, ie_tipo_cliente,ie_tipo_resposta,
							nr_seq_origem, nr_seq_guia, cd_transacao,
							ie_tipo_autorizacao, nr_versao)
						values (nr_seq_resp_auto_w, cd_unimed_executora_w, cd_unimed_origem_w,
							nr_seq_origem_w, nr_seq_requisicao_w, cd_unimed_w,
							cd_usuario_plano_w, nm_beneficiario_w, clock_timestamp(),
							nm_usuario_p, clock_timestamp(), nm_usuario_p,
							clock_timestamp(), 'P', 'PC',
							nr_seq_trans_refe_w, nr_seq_guia_w, '00501',
							2, nr_versao_w);

						update 	ptu_dados_pedido_a1100
						set	nr_seq_pedido_compl	= nr_seq_pedido_compl_w
						where 	nr_sequencia		= nr_seq_dados_pedido_w;

					end if;

					if (substr(pls_obter_funcao_scs,1,2)	= 'R') then
						select	nextval('pls_requisicao_seq')
						into STRICT	nr_seq_requisicao_w
						;

						insert	into pls_requisicao(nr_sequencia, dt_requisicao, dt_atualizacao,
							nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
							nr_seq_segurado, ie_tipo_intercambio, nr_seq_plano,
							cd_estabelecimento, ie_tipo_guia, ie_estagio,
							ie_tipo_requisicao, ie_tipo_processo, nr_seq_uni_exec,
							ie_origem_solic, cd_senha_externa, dt_valid_senha_ext)
						values (nr_seq_requisicao_w, clock_timestamp(), clock_timestamp(),
							nm_usuario_p, clock_timestamp(), nm_usuario_p,
							nr_seq_segurado_w, 'E', nr_seq_plano_w,
							cd_estabelecimento_p, '2', 1,
							'M', 'I', nr_seq_uni_exec_w,
							'I', nr_seq_origem_w, clock_timestamp());

						CALL pls_requisicao_gravar_hist(	nr_seq_requisicao_w, 'L', substr(wheb_mensagem_pck.GET_TEXTO(1189312),1,255),
										'',nm_usuario_p);

						if (lpad(cd_cooperativa_w,4,'0') = lpad(cd_unimed_origem_w,4,'0'))then
							select	nextval('pls_lote_execucao_req_seq')
							into STRICT	nr_seq_lote_execucao_w
							;

							insert into pls_lote_execucao_req(
								nr_sequencia, nr_seq_segurado, dt_geracao_lote,
								dt_atualizacao, nm_usuario, dt_atualizacao_nrec,
								nm_usuario_nrec, ds_observacao)
							values (	nr_seq_lote_execucao_w, nr_seq_segurado_w, clock_timestamp(),
								clock_timestamp(), nm_usuario_p, clock_timestamp(),
								nm_usuario_p, substr(wheb_mensagem_pck.GET_TEXTO(1189308),1,255));

							select	nextval('pls_execucao_requisicao_seq')
							into STRICT	nr_seq_req_execucao_w
							;

							select	nextval('pls_guia_plano_seq')
							into STRICT	nr_seq_guia_w
							;

							insert	into pls_execucao_requisicao(nr_sequencia, ie_situacao, nr_seq_requisicao,
								dt_atualizacao, nm_usuario, dt_atualizacao_nrec,
								nm_usuario_nrec, nr_seq_lote_exec, dt_execucao, nr_seq_guia)
							values (nr_seq_req_execucao_w, 1, nr_seq_requisicao_w,
								clock_timestamp(), nm_usuario_p, clock_timestamp(),
								nm_usuario_p, nr_seq_lote_execucao_w, clock_timestamp(), nr_seq_guia_w);

							insert	into pls_guia_plano(nr_sequencia, cd_guia, dt_solicitacao,
								ie_tipo_guia, nr_seq_segurado, cd_estabelecimento,
								nr_seq_plano, ie_status, ie_estagio,
								dt_atualizacao, nm_usuario, ie_tipo_processo,
								cd_medico_solicitante, nr_seq_uni_exec, ie_tipo_intercambio,
								ie_origem_solic, dt_autorizacao,
								cd_senha_externa, dt_valid_senha_ext)
							values (nr_seq_guia_w, nr_seq_guia_w, clock_timestamp(),
								'2', nr_seq_segurado_w, cd_estabelecimento_p,
								nr_seq_plano_w, '2', 7,
								clock_timestamp(), nm_usuario_p, 'I',
								null, nr_seq_uni_exec_w,'E',
								'I', clock_timestamp(),
								nr_seq_origem_w, clock_timestamp());

							CALL pls_gerar_cd_guia_regra(nr_seq_guia_w, nm_usuario_p);

							CALL pls_guia_gravar_historico(nr_seq_guia_w, 2, substr(wheb_mensagem_pck.GET_TEXTO(1189309),1,255), null, nm_usuario_p);

							update	ptu_resposta_autorizacao
							set	nr_seq_requisicao	= nr_seq_requisicao_w,
								nr_seq_guia		= nr_seq_guia_w
							where	nr_sequencia		= nr_seq_resp_auto_w;

							if (coalesce(nr_seq_trans_refe_w,0)	= 0) then
								update	ptu_pedido_autorizacao
								set	nr_seq_requisicao	= nr_seq_requisicao_w,
									nr_seq_guia		= nr_seq_guia_w
								where	nr_sequencia		= nr_seq_pedido_aut_w;
							else
								update	ptu_pedido_compl_aut
								set	nr_seq_requisicao	= nr_seq_requisicao_w,
									nr_seq_guia		= nr_seq_guia_w
								where	nr_sequencia		= nr_seq_pedido_compl_w;
							end if;

							update 	ptu_dados_pedido_a1100
							set	nr_seq_requisicao	= nr_seq_requisicao_w,
								nr_seq_guia		= nr_seq_guia_w
							where 	nr_sequencia		= nr_seq_dados_pedido_w;

							CALL pls_gerar_log_A1100(substr(wheb_mensagem_pck.GET_TEXTO(1190127,'NR_SEQ_REQUISICAO='|| nr_seq_requisicao_w),1,255), nr_seq_cabecalho_p, nr_seq_dados_pedido_w, nm_usuario_p);
							CALL pls_gerar_log_A1100(substr(wheb_mensagem_pck.GET_TEXTO(1189317,'NR_SEQ_REQUISICAO='||nr_seq_requisicao_w || ';NR_SEQ_GUIA=' || nr_seq_guia_w),1,255), nr_seq_cabecalho_p, nr_seq_dados_pedido_w, nm_usuario_p);
						else
							update	ptu_resposta_autorizacao
							set	nr_seq_requisicao	= nr_seq_requisicao_w
							where	nr_sequencia		= nr_seq_resp_auto_w;

							if (coalesce(nr_seq_trans_refe_w,0)	= 0) then
								update	ptu_pedido_autorizacao
								set	nr_seq_requisicao	= nr_seq_requisicao_w
								where	nr_sequencia		= nr_seq_pedido_aut_w;
							else
								update	ptu_pedido_compl_aut
								set	nr_seq_requisicao	= nr_seq_requisicao_w
								where	nr_sequencia		= nr_seq_pedido_compl_w;
							end if;

							update 	ptu_dados_pedido_a1100
							set	nr_seq_requisicao	= nr_seq_requisicao_w
							where 	nr_sequencia		= nr_seq_dados_pedido_w;

							CALL pls_gerar_log_A1100(substr(wheb_mensagem_pck.GET_TEXTO(1190127,'NR_SEQ_REQUISICAO='|| nr_seq_requisicao_w),1,255), nr_seq_cabecalho_p, nr_seq_dados_pedido_w, nm_usuario_p);
						end if;
					elsif (substr(pls_obter_funcao_scs,1,2)	= 'A') then
						select	nextval('pls_guia_plano_seq')
						into STRICT	nr_seq_guia_w
						;

						insert	into pls_guia_plano(nr_sequencia, cd_guia, dt_solicitacao,
							ie_tipo_guia, nr_seq_segurado, cd_estabelecimento,
							nr_seq_plano, ie_status, ie_estagio,
							dt_atualizacao, nm_usuario, ie_tipo_processo,
							cd_medico_solicitante, nr_seq_uni_exec, ie_tipo_intercambio,
							ie_origem_solic)
						values (nr_seq_guia_w, nr_seq_guia_w, clock_timestamp(),
							'2', nr_seq_segurado_w, cd_estabelecimento_p,
							nr_seq_plano_w, '2', 7,
							clock_timestamp(), nm_usuario_p, 'I',
							null, nr_seq_uni_exec_w,'E',
							'I');

						CALL pls_gerar_cd_guia_regra(nr_seq_guia_w, nm_usuario_p);

						CALL pls_guia_gravar_historico(nr_seq_guia_w, 2, substr(wheb_mensagem_pck.GET_TEXTO(1189309),1,255), null, nm_usuario_p);

						update	ptu_resposta_autorizacao
						set	nr_seq_guia		= nr_seq_guia_w
						where	nr_sequencia		= nr_seq_resp_auto_w;

						if (coalesce(nr_seq_trans_refe_w,0)	= 0) then
							update	ptu_pedido_autorizacao
							set	nr_seq_guia		= nr_seq_guia_w
							where	nr_sequencia		= nr_seq_pedido_aut_w;
						else
							update	ptu_pedido_compl_aut
							set	nr_seq_guia		= nr_seq_guia_w
							where	nr_sequencia		= nr_seq_pedido_compl_w;
						end if;

						update 	ptu_dados_pedido_a1100
						set	nr_seq_guia		= nr_seq_guia_w
						where 	nr_sequencia		= nr_seq_dados_pedido_w;
						
						CALL pls_gerar_log_A1100(substr(wheb_mensagem_pck.GET_TEXTO(1189310, 'NR_SEQ_GUIA=' || nr_seq_guia_w),1,255), nr_seq_cabecalho_p, nr_seq_dados_pedido_w, nm_usuario_p);
						
					end if;

					open C02;
					loop
					fetch C02 into
						nr_seq_itens_pedido_w,
						ie_tipo_tabela_w,
						cd_servico_w,
						ds_servico_w,
						qt_autorizada_w,
						ie_resposta_wsd_w,
						nr_seq_item_w;
					EXIT WHEN NOT FOUND; /* apply on C02 */
						begin
						qt_autorizada_ww	:= substr(to_char(coalesce(qt_autorizada_w,0)),1,4);


						if (substr(pls_obter_funcao_scs,1,2)	= 'R') then
							if (ie_resposta_wsd_w	= 1) then
								ie_status_w	:= 'N';
								ie_autorizado_w	:= 1;
							elsif (ie_resposta_wsd_w	= 2) then
								ie_status_w	:= 'S';
								ie_autorizado_w	:= 2;
							elsif (ie_resposta_wsd_w	= 3) then
								ie_status_w	:= 'C';
								ie_autorizado_w := 1;
							end if;
						elsif (substr(pls_obter_funcao_scs,1,2)	= 'A') then
							if (ie_resposta_wsd_w	= 1) then
								ie_status_w	:= 'N';
								ie_autorizado_w	:= 1;
							elsif (ie_resposta_wsd_w	= 2) then
								ie_status_w	:= 'S';
								ie_autorizado_w	:= 2;
							elsif (ie_resposta_wsd_w	= 3) then
								ie_status_w	:= 'D';
								ie_autorizado_w := 1;
							end if;
						end if;

						if (ie_tipo_tabela_w	in ('0','1','4')) then
							nr_seq_req_mat_w	:= null;
							nr_seq_guia_mat_w	:= null;
						
							select	max(ie_origem_proced)
							into STRICT	ie_origem_proced_w
							from	procedimento
							where	cd_procedimento		= cd_servico_w
							and	ie_origem_proced	in (1,4,5,8)
							and	ie_situacao		= 'A';

							if (substr(pls_obter_funcao_scs,1,2)	= 'R') then
								select	nextval('pls_requisicao_proc_seq')
								into STRICT	nr_seq_req_proc_w
								;

								if (coalesce(ie_origem_proced_w,0)	<> 0) then
									insert	into pls_requisicao_proc(nr_sequencia, nr_seq_requisicao, cd_procedimento,
										ie_origem_proced, qt_procedimento, dt_atualizacao,
										nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
										ie_status, ie_estagio, qt_proc_executado,
										nr_seq_pacote, qt_solicitado, cd_procedimento_ptu,
										ie_estagio_execucao, nr_seq_guia)
									values (nr_seq_req_proc_w, nr_seq_requisicao_w, cd_servico_w,
										ie_origem_proced_w, CASE WHEN ie_status_w='S' THEN  qt_autorizada_ww  ELSE 0 END , clock_timestamp(),
										nm_usuario_p, clock_timestamp(), nm_usuario_p,
										ie_status_w, 'E', CASE WHEN ie_status_w='S' THEN  qt_autorizada_ww  ELSE 0 END ,
										null, qt_autorizada_ww, null,
										'L', nr_seq_guia_w);

									if (ie_status_w = 'S') and (lpad(cd_cooperativa_w,4,'0') = lpad(cd_unimed_origem_w,4,'0')) then
										if (coalesce(nr_seq_lote_execucao_w,0) <> 0) then
											insert into pls_itens_lote_execucao(
												nr_sequencia, nr_seq_lote_exec, ie_permite_execucao,
												ie_executar, dt_atualizacao, nm_usuario,
												dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_req_proc,
												nr_seq_requisicao, qt_solicitado,
												qt_aprovado, qt_executado, qt_pendente,
												dt_requisicao, cd_proc_mat,
												ds_proc_mat, ds_tipo_guia,
												ie_tipo_item, ie_tipo_guia, ds_observacao)
											values (	nextval('pls_itens_lote_execucao_seq'), nr_seq_lote_execucao_w, 'S',
												'S', clock_timestamp(), nm_usuario_p,
												clock_timestamp(), nm_usuario_p, nr_seq_req_proc_w,
												nr_seq_requisicao_w, CASE WHEN ie_status_w='S' THEN  qt_autorizada_ww  ELSE 0 END ,
												CASE WHEN ie_status_w='S' THEN  qt_autorizada_ww  ELSE 0 END , CASE WHEN ie_status_w='S' THEN  qt_autorizada_ww  ELSE 0 END , 0,
												to_date(clock_timestamp(),'dd/mm/rrrr'), cd_servico_w,
												substr(obter_descricao_procedimento(cd_servico_w,ie_origem_proced_w),1,255), substr(obter_valor_dominio(1746,'2'),1,255),
												'P', '2', substr(wheb_mensagem_pck.GET_TEXTO(1189303),1,255));
										end if;

										insert	into pls_execucao_req_item(nr_sequencia, ie_tipo_guia,
											nr_seq_segurado, dt_atualizacao, nm_usuario,
											cd_procedimento, ie_origem_proced,
											qt_item, nr_seq_req_proc,
											ie_tipo_processo, nr_seq_requisicao,
											nr_seq_execucao, ie_situacao, nr_seq_guia)
										values (nextval('pls_execucao_req_item_seq'), '2',
											nr_seq_segurado_w, clock_timestamp(), nm_usuario_p,
											cd_servico_w, ie_origem_proced_w,
											CASE WHEN ie_status_w='S' THEN  qt_autorizada_ww  ELSE 0 END , nr_seq_req_proc_w,
											'I', nr_seq_requisicao_w,
											nr_seq_req_execucao_w, ie_status_w, nr_seq_guia_w);
											
										select	nextval('pls_guia_plano_proc_seq')
										into STRICT	nr_seq_guia_proc_w
										;

										insert	into pls_guia_plano_proc(nr_sequencia, nr_seq_guia, cd_procedimento,
											ie_origem_proced, qt_solicitada, dt_atualizacao,
											nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
											ie_status, qt_autorizada)
										values (nr_seq_guia_proc_w, nr_seq_guia_w, cd_servico_w,
											ie_origem_proced_w, qt_autorizada_ww, clock_timestamp(),
											nm_usuario_p, clock_timestamp(), nm_usuario_p,
											ie_status_w, CASE WHEN ie_status_w='S' THEN  qt_autorizada_ww  ELSE 0 END );
									end if;
								else
									insert	into pls_requisicao_proc(nr_sequencia, nr_seq_requisicao, cd_procedimento,
										ie_origem_proced, qt_procedimento, dt_atualizacao,
										nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
										ie_status, ie_estagio, qt_proc_executado,
										nr_seq_pacote, qt_solicitado, cd_proc_inexistente)
									values (nr_seq_req_proc_w, nr_seq_requisicao_w, null,
										null, CASE WHEN ie_status_w='S' THEN  qt_autorizada_ww  ELSE 0 END , clock_timestamp(),
										nm_usuario_p, clock_timestamp(), nm_usuario_p,
										ie_status_w, 'AE', 0,
										null, qt_autorizada_ww, cd_servico_w);
								end if;
							elsif (substr(pls_obter_funcao_scs,1,2)	= 'A') then
								select	nextval('pls_guia_plano_proc_seq')
								into STRICT	nr_seq_guia_proc_w
								;

								if (coalesce(ie_origem_proced_w,0)	<> 0) then
									insert	into pls_guia_plano_proc(nr_sequencia, nr_seq_guia, cd_procedimento,
										ie_origem_proced, qt_solicitada, dt_atualizacao,
										nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
										ie_status, qt_autorizada)
									values (nr_seq_guia_proc_w, nr_seq_guia_w, cd_servico_w,
										ie_origem_proced_w, qt_autorizada_ww, clock_timestamp(),
										nm_usuario_p, clock_timestamp(), nm_usuario_p,
										ie_status_w, CASE WHEN ie_status_w='S' THEN  qt_autorizada_ww  ELSE 0 END );
								end if;
							end if;
						elsif (ie_tipo_tabela_w	in ('2','3','5','6')) then
							nr_seq_req_proc_w	:= null;
							nr_seq_guia_proc_w	:= null;
							
							SELECT * FROM ptu_gerar_mat_envio_intercamb(cd_servico_w, 'R', ie_tipo_tabela_w, null, nm_usuario_p, cd_servico_conversao_w, ds_servico_ww) INTO STRICT cd_servico_conversao_w, ds_servico_ww;

							if (coalesce(cd_servico_conversao_w,0)	<> 0) then
								begin
								select	max(nr_sequencia)
								into STRICT	nr_seq_material_w
								from	pls_material
								where	cd_material_ops	= cd_servico_conversao_w;
								exception
								when others then
									nr_seq_material_w	:= null;
								end;

								if (coalesce(nr_seq_material_w::text, '') = '') then
									SELECT * FROM pls_obter_mat_a900_vigente( nr_seq_material_w, clock_timestamp(), cd_servico_conversao_w, null) INTO STRICT  nr_seq_material_w, cd_servico_conversao_w;
								end if;

								select	count(1)
								into STRICT	qt_reg_mat_w
								from	pls_material
								where	nr_sequencia	= nr_seq_material_w;
							else
								nr_seq_material_w	:= substr(pls_obter_seq_codigo_material('',cd_servico_w),1,8);

								select	count(1)
								into STRICT	qt_reg_mat_w
								from	pls_material
								where	nr_sequencia	= nr_seq_material_w;
							end if;

							if (substr(pls_obter_funcao_scs,1,2)	= 'R') then
								if (qt_reg_mat_w	> 0) then
									select	nextval('pls_requisicao_mat_seq')
									into STRICT	nr_seq_req_mat_w
									;

									insert	into pls_requisicao_mat(nr_sequencia, nr_seq_requisicao, nr_seq_material,
										qt_material, dt_atualizacao, nm_usuario,
										dt_atualizacao_nrec, nm_usuario_nrec, ie_status,
										ie_estagio, qt_mat_executado, vl_material,
										qt_solicitado, cd_material_ptu,
										ie_estagio_execucao, nr_seq_guia)
									values (nr_seq_req_mat_w, nr_seq_requisicao_w, nr_seq_material_w,
										CASE WHEN ie_status_w='S' THEN  qt_autorizada_ww  ELSE 0 END , clock_timestamp(), nm_usuario_p,
										clock_timestamp(), nm_usuario_p, ie_status_w,
										'E', CASE WHEN ie_status_w='S' THEN  qt_autorizada_ww  ELSE 0 END , null, qt_autorizada_ww, null,
										'L', nr_seq_guia_w);

									if (ie_status_w = 'S') and (lpad(cd_cooperativa_w,4,'0') = lpad(cd_unimed_origem_w,4,'0')) then
										if (coalesce(nr_seq_lote_execucao_w,0) <> 0) then
											insert into pls_itens_lote_execucao(
												nr_sequencia, nr_seq_lote_exec, ie_permite_execucao,
												ie_executar, dt_atualizacao, nm_usuario,
												dt_atualizacao_nrec, nm_usuario_nrec,
												nr_seq_req_mat, nr_seq_requisicao, qt_solicitado,
												qt_aprovado, qt_executado, qt_pendente,
												dt_requisicao, cd_proc_mat,
												ds_proc_mat, ds_tipo_guia,
												ie_tipo_item, ie_tipo_guia, ds_observacao)
											values (	nextval('pls_itens_lote_execucao_seq'), nr_seq_lote_execucao_w, 'S',
												'S', clock_timestamp(), nm_usuario_p,
												clock_timestamp(), nm_usuario_p,
												nr_seq_req_mat_w, nr_seq_requisicao_w, CASE WHEN ie_status_w='S' THEN  qt_autorizada_ww  ELSE 0 END ,
												CASE WHEN ie_status_w='S' THEN  qt_autorizada_ww  ELSE 0 END , CASE WHEN ie_status_w='S' THEN  qt_autorizada_ww  ELSE 0 END , 0,
												to_date(clock_timestamp(),'dd/mm/rrrr'), nr_seq_material_w,
												substr(pls_obter_desc_material(nr_seq_material_w),1,255), substr(obter_valor_dominio(1746,'2'),1,255),
												'M', '2', substr(wheb_mensagem_pck.GET_TEXTO(1189303),1,255));
										end if;

										insert	into pls_execucao_req_item(nr_sequencia, ie_tipo_guia,
											nr_seq_segurado, dt_atualizacao, nm_usuario,
											nr_seq_material,
											qt_item, nr_seq_req_mat,
											ie_tipo_processo, nr_seq_requisicao,
											nr_seq_execucao, ie_situacao, nr_seq_guia)
										values (nextval('pls_execucao_req_item_seq'), '2',
											nr_seq_segurado_w, clock_timestamp(), nm_usuario_p,
											nr_seq_material_w,
											CASE WHEN ie_status_w='S' THEN  qt_autorizada_ww  ELSE 0 END , nr_seq_req_mat_w,
											'I', nr_seq_requisicao_w,
											nr_seq_req_execucao_w, ie_status_w, nr_seq_guia_w);

										select	nextval('pls_guia_plano_mat_seq')
										into STRICT	nr_seq_guia_mat_w
										;

										insert	into pls_guia_plano_mat(nr_sequencia, nr_seq_guia, nr_seq_material,
											qt_solicitada, dt_atualizacao, nm_usuario,
											dt_atualizacao_nrec, nm_usuario_nrec, ie_status,
											qt_autorizada)
										values (nr_seq_guia_mat_w, nr_seq_guia_w, nr_seq_material_w,
											qt_autorizada_ww, clock_timestamp(), nm_usuario_p,
											clock_timestamp(), nm_usuario_p, ie_status_w,
											CASE WHEN ie_status_w='S' THEN  qt_autorizada_ww  ELSE 0 END );
									end if;
								else
									insert	into pls_requisicao_mat(nr_sequencia, nr_seq_requisicao, nr_seq_material,
										qt_material, dt_atualizacao, nm_usuario,
										dt_atualizacao_nrec, nm_usuario_nrec, ie_status,
										ie_estagio, qt_mat_executado, vl_material,
										qt_solicitado, cd_material_inexistente)
									values (nr_seq_req_mat_w, nr_seq_requisicao_w, nr_seq_material_w,
										0, clock_timestamp(), nm_usuario_p,
										clock_timestamp(), nm_usuario_p, 'N',
										'AE', 0, null,
										qt_autorizada_ww, cd_servico_w);
								end if;
							elsif (substr(pls_obter_funcao_scs,1,2)	= 'A') then
								if (qt_reg_mat_w	> 0) then
									select	nextval('pls_guia_plano_mat_seq')
									into STRICT	nr_seq_guia_mat_w
									;

									insert	into pls_guia_plano_mat(nr_sequencia, nr_seq_guia, nr_seq_material,
										qt_solicitada, dt_atualizacao, nm_usuario,
										dt_atualizacao_nrec, nm_usuario_nrec, ie_status,
										qt_autorizada)
									values (nr_seq_guia_mat_w, nr_seq_guia_w, nr_seq_material_w,
										qt_autorizada_ww, clock_timestamp(), nm_usuario_p,
										clock_timestamp(), nm_usuario_p, ie_status_w,
										CASE WHEN ie_status_w='S' THEN  qt_autorizada_ww  ELSE 0 END );
								end if;
							end if;
						end if;

						if (nr_seq_req_proc_w IS NOT NULL AND nr_seq_req_proc_w::text <> '') then
							nr_seq_guia_proc_w := null;
						end if;

						if (nr_seq_req_mat_w IS NOT NULL AND nr_seq_req_mat_w::text <> '') then
							nr_seq_guia_mat_w := null;
						end if;

						if (coalesce(nr_seq_pedido_aut_w,0)	<> 0) then
							insert	into ptu_pedido_aut_servico(nr_sequencia, nr_seq_pedido, cd_servico,
								qt_servico, dt_atualizacao, nm_usuario,
								dt_atualizacao_nrec, nm_usuario_nrec, ds_opme,
								ie_origem_servico, ie_tipo_tabela, cd_servico_consersao,
								nr_seq_req_proc, nr_seq_req_mat, nr_seq_guia_mat,
								nr_seq_guia_proc, nr_seq_item)
							values (nextval('ptu_pedido_aut_servico_seq'), nr_seq_pedido_aut_w, cd_servico_w,
								qt_autorizada_w, clock_timestamp(), nm_usuario_p,
								clock_timestamp(), nm_usuario_p, ds_servico_w,
								ie_origem_proced_w, ie_tipo_tabela_w, null,
								nr_seq_req_proc_w, nr_seq_req_mat_w, nr_seq_guia_mat_w,
								nr_seq_guia_proc_w, nr_seq_item_w);
						elsif (coalesce(nr_seq_pedido_compl_w,0)	<> 0) then
							insert	into ptu_pedido_compl_aut_serv(nr_sequencia, nr_seq_pedido, ie_tipo_tabela,
								cd_servico, qt_servico, dt_atualizacao,
								nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
								ds_opme, vl_servico, ie_origem_servico,
								cd_servico_conversao, nr_seq_req_proc, nr_seq_req_mat,
								nr_seq_guia_mat, nr_seq_guia_proc, nr_seq_item)
							values (nextval('ptu_pedido_compl_aut_serv_seq'), nr_seq_pedido_compl_w, ie_tipo_tabela_w,
								cd_servico_w, qt_autorizada_w, clock_timestamp(),
								nm_usuario_p, clock_timestamp(), nm_usuario_p,
								ds_servico_w, null, ie_origem_proced_w,
								null, nr_seq_req_proc_w, nr_seq_req_mat_w,
								nr_seq_guia_mat_w, nr_seq_guia_proc_w, nr_seq_item_w);
						end if;

						insert	into ptu_resposta_aut_servico(nr_sequencia, nr_seq_pedido, cd_servico,
							ds_servico, ie_autorizado, dt_atualizacao,
							nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
							qt_autorizado, ie_origem_servico, ie_tipo_tabela,
							nr_seq_req_proc, nr_seq_req_mat, nr_seq_item)
						values (nextval('ptu_resposta_aut_servico_seq'), nr_seq_resp_auto_w, cd_servico_w,
							ds_servico_w, ie_autorizado_w, clock_timestamp(),
							nm_usuario_p, clock_timestamp(), nm_usuario_p,
							qt_autorizada_w, ie_origem_proced_w, ie_tipo_tabela_w,
							nr_seq_req_proc_w, nr_seq_req_mat_w, nr_seq_item_w);
						end;
					end loop;
					close C02;

					if (substr(pls_obter_funcao_scs,1,2)	= 'R') then
						select	count(1)
						into STRICT	qt_reg_proc_aprov_w
						from	pls_requisicao_proc
						where	nr_seq_requisicao	= nr_seq_requisicao_w
						and	ie_status		= 'S';

						select	count(1)
						into STRICT	qt_reg_mat_aprov_w
						from	pls_requisicao_mat
						where	nr_seq_requisicao	= nr_seq_requisicao_w
						and	ie_status		= 'S';

						qt_reg_aprov_w	:= qt_reg_proc_aprov_w + qt_reg_mat_aprov_w;

						select	count(1)
						into STRICT	qt_reg_proc_neg_w
						from	pls_requisicao_proc
						where	nr_seq_requisicao	= nr_seq_requisicao_w
						and	ie_status		= 'N';

						select	count(1)
						into STRICT	qt_reg_mat_neg_w
						from	pls_requisicao_mat
						where	nr_seq_requisicao	= nr_seq_requisicao_w
						and	ie_status		= 'N';

						qt_reg_neg_w	:= qt_reg_proc_neg_w + qt_reg_mat_neg_w;

						select	count(1)
						into STRICT	qt_reg_proc_cancel_w
						from	pls_requisicao_proc
						where	nr_seq_requisicao	= nr_seq_requisicao_w
						and	ie_status		= 'C';

						select	count(1)
						into STRICT	qt_reg_mat_cancel_w
						from	pls_requisicao_mat
						where	nr_seq_requisicao	= nr_seq_requisicao_w
						and	ie_status		= 'C';

						qt_reg_cancel_w	:= qt_reg_proc_cancel_w + qt_reg_mat_cancel_w;

						if (qt_reg_cancel_w	> 0) then
							update	pls_requisicao
							set	ie_estagio	= 3,
								ie_status	= 'C'
							where	nr_sequencia	= nr_seq_requisicao_w;
						elsif (qt_reg_aprov_w	> 0) and (qt_reg_neg_w	= 0) then
							update	pls_requisicao
							set	ie_estagio	= 2,
								ie_status	= 'L'
							where	nr_sequencia	= nr_seq_requisicao_w;
						elsif (qt_reg_aprov_w	= 0) and (qt_reg_neg_w	> 0) then
							update	pls_requisicao
							set	ie_estagio	= 7,
								ie_status	= 'P'
							where	nr_sequencia	= nr_seq_requisicao_w;
						elsif (qt_reg_aprov_w	> 0) and (qt_reg_neg_w	> 0) then
							update	pls_requisicao
							set	ie_estagio	= 6,
								ie_status	= 'L'
							where	nr_sequencia	= nr_seq_requisicao_w;
						end if;
						
						if (nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '') then
							select	count(1)
							into STRICT	qt_reg_proc_aprov_w
							from	pls_guia_plano_proc
							where	nr_seq_guia	= nr_seq_guia_w
							and	ie_status	= 'S';

							select	count(1)
							into STRICT	qt_reg_mat_aprov_w
							from	pls_guia_plano_mat
							where	nr_seq_guia	= nr_seq_guia_w
							and	ie_status	= 'S';

							qt_reg_aprov_w	:= qt_reg_proc_aprov_w + qt_reg_mat_aprov_w;

							select	count(1)
							into STRICT	qt_reg_proc_neg_w
							from	pls_guia_plano_proc
							where	nr_seq_guia	= nr_seq_guia_w
							and	ie_status	= 'N';

							select	count(1)
							into STRICT	qt_reg_mat_neg_w
							from	pls_guia_plano_mat
							where	nr_seq_guia	= nr_seq_guia_w
							and	ie_status	= 'N';

							qt_reg_neg_w	:= qt_reg_proc_neg_w + qt_reg_mat_neg_w;

							select	count(1)
							into STRICT	qt_reg_proc_cancel_w
							from	pls_guia_plano_proc
							where	nr_seq_guia	= nr_seq_guia_w
							and	ie_status	= 'D';

							select	count(1)
							into STRICT	qt_reg_mat_cancel_w
							from	pls_guia_plano_mat
							where	nr_seq_guia	= nr_seq_guia_w
							and	ie_status	= 'D';

							qt_reg_cancel_w	:= qt_reg_proc_cancel_w + qt_reg_mat_cancel_w;

							if (qt_reg_cancel_w	> 0) then
								update	pls_guia_plano
								set	ie_estagio	= 8,
									ie_status	= 3
								where	nr_sequencia	= nr_seq_guia_w;
							elsif (qt_reg_aprov_w	> 0) and (qt_reg_neg_w	= 0) then
								update	pls_guia_plano
								set	ie_estagio	= 6,
									ie_status	= 1
								where	nr_sequencia	= nr_seq_guia_w;
							elsif (qt_reg_aprov_w	= 0) and (qt_reg_neg_w	> 0) then
								update	pls_guia_plano
								set	ie_estagio	= 4,
									ie_status	= 3
								where	nr_sequencia	= nr_seq_guia_w;
							elsif (qt_reg_aprov_w	> 0) and (qt_reg_neg_w	> 0) then
								update	pls_guia_plano
								set	ie_estagio	= 10,
									ie_status	= 1
								where	nr_sequencia	= nr_seq_guia_w;
							end if;
						end if;
					elsif (substr(pls_obter_funcao_scs,1,2)	= 'A') then
						select	count(1)
						into STRICT	qt_reg_proc_aprov_w
						from	pls_guia_plano_proc
						where	nr_seq_guia	= nr_seq_guia_w
						and	ie_status	= 'S';

						select	count(1)
						into STRICT	qt_reg_mat_aprov_w
						from	pls_guia_plano_mat
						where	nr_seq_guia	= nr_seq_guia_w
						and	ie_status	= 'S';

						qt_reg_aprov_w	:= qt_reg_proc_aprov_w + qt_reg_mat_aprov_w;

						select	count(1)
						into STRICT	qt_reg_proc_neg_w
						from	pls_guia_plano_proc
						where	nr_seq_guia	= nr_seq_guia_w
						and	ie_status	= 'N';

						select	count(1)
						into STRICT	qt_reg_mat_neg_w
						from	pls_guia_plano_mat
						where	nr_seq_guia	= nr_seq_guia_w
						and	ie_status	= 'N';

						qt_reg_neg_w	:= qt_reg_proc_neg_w + qt_reg_mat_neg_w;

						select	count(1)
						into STRICT	qt_reg_proc_cancel_w
						from	pls_guia_plano_proc
						where	nr_seq_guia	= nr_seq_guia_w
						and	ie_status	= 'D';

						select	count(1)
						into STRICT	qt_reg_mat_cancel_w
						from	pls_guia_plano_mat
						where	nr_seq_guia	= nr_seq_guia_w
						and	ie_status	= 'D';

						qt_reg_cancel_w	:= qt_reg_proc_cancel_w + qt_reg_mat_cancel_w;

						if (qt_reg_cancel_w	> 0) then
							update	pls_guia_plano
							set	ie_estagio	= 8,
								ie_status	= 3
							where	nr_sequencia	= nr_seq_guia_w;
						elsif (qt_reg_aprov_w	> 0) and (qt_reg_neg_w	= 0) then
							update	pls_guia_plano
							set	ie_estagio	= 6,
								ie_status	= 1
							where	nr_sequencia	= nr_seq_guia_w;
						elsif (qt_reg_aprov_w	= 0) and (qt_reg_neg_w	> 0) then
							update	pls_guia_plano
							set	ie_estagio	= 4,
								ie_status	= 3
							where	nr_sequencia	= nr_seq_guia_w;
						elsif (qt_reg_aprov_w	> 0) and (qt_reg_neg_w	> 0) then
							update	pls_guia_plano
							set	ie_estagio	= 10,
								ie_status	= 1
							where	nr_sequencia	= nr_seq_guia_w;
						end if;
					end if;
				else
					rollback;
					qt_erros_w := qt_erros_w + 1;
					CALL pls_gerar_log_A1100(substr(wheb_mensagem_pck.GET_TEXTO(1190128, 'CD_UNIMED=' || cd_unimed_w || ';CD_USUARIO_PLANO=' || cd_usuario_plano_w),1,255), nr_seq_cabecalho_p, nr_seq_dados_pedido_w , nm_usuario_p);
				end if;
			end if;
		exception
		when others then
			qt_erros_w := qt_erros_w + 1;
			CALL pls_gerar_log_A1100(substr(wheb_mensagem_pck.GET_TEXTO(1190129, 'SQLERRM=' || sqlerrm),1,255),nr_seq_cabecalho_p, nr_seq_dados_pedido_w , nm_usuario_p);
		end;
		-- Utilizado commit aqui pois caso alguma geracao der erro ele nao apague todas no rollback
		commit;
	end;
end loop;
close C01;

if (qt_erros_w > 0) then
	ie_erro_p := (substr(wheb_mensagem_pck.GET_TEXTO(1189314),1,255));
else
	ie_erro_p := (substr(wheb_mensagem_pck.GET_TEXTO(1190130),1,255));
end if;

for	r_C05_w in C05 loop
	if (coalesce(r_C05_w.nr_seq_trans_refe,0)	= 0) then
		select	max(nr_sequencia)
		into STRICT	nr_seq_pedido_aut_w
		from	ptu_pedido_autorizacao
		where	nr_seq_execucao	= r_C05_w.nr_seq_execucao
		and	cd_unimed_executora = r_C05_w.cd_unimed_executora;

		if (nr_seq_pedido_aut_w IS NOT NULL AND nr_seq_pedido_aut_w::text <> '') then
			select 	nr_seq_requisicao,
				nr_seq_guia
			into STRICT	nr_seq_requisicao_w,
				nr_seq_guia_w
			from	ptu_pedido_autorizacao
			where	nr_sequencia = nr_seq_pedido_aut_w;
		end if;
	else
		select	max(nr_sequencia)
		into STRICT 	nr_seq_pedido_compl_w
		from	ptu_pedido_compl_aut
		where	nr_seq_execucao	= r_C05_w.nr_seq_execucao
		and	cd_unimed_executora = r_C05_w.cd_unimed_executora;

		if (nr_seq_pedido_compl_w IS NOT NULL AND nr_seq_pedido_compl_w::text <> '') then
			select 	nr_seq_requisicao,
				nr_seq_guia
			into STRICT	nr_seq_requisicao_w,
				nr_seq_guia_w
			from	ptu_pedido_compl_aut
			where	nr_sequencia = nr_seq_pedido_compl_w;
		end if;
	end if;

	if (nr_seq_requisicao_w IS NOT NULL AND nr_seq_requisicao_w::text <> '') or (nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '') then
		update 	ptu_dados_pedido_a1100
		set	nr_seq_requisicao	= nr_seq_requisicao_w,
			nr_seq_guia		= nr_seq_guia_w
		where 	nr_sequencia		= r_C05_w.nr_sequencia;

		CALL pls_gerar_log_A1100(substr(wheb_mensagem_pck.GET_TEXTO(1189315,'NR_SEQUENCIA='|| r_C05_w.nr_sequencia),1,255), nr_seq_cabecalho_p, r_C05_w.nr_sequencia, nm_usuario_p);

		commit;
	end if;
end loop;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_gerar_guia_req_a1100 ( nr_seq_cabecalho_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, ie_erro_p INOUT text) FROM PUBLIC;

