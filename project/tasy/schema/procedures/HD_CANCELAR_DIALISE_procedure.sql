-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE hd_cancelar_dialise ( nr_seq_dialise_p bigint, dt_cancelamento_p timestamp, ds_observacao_p text, nr_seq_motivo_fim_p bigint, nm_usuario_p text, ds_erro_p INOUT text, ds_retorno_p INOUT text) AS $body$
DECLARE

 
 
nr_sequencia_w			bigint;
nr_seq_dialisador_w		bigint;
ds_motivo_fim_w			varchar(255);
ie_retirar_concentrado_w	varchar(1);
nr_seq_concentrado_ret_w	hd_dialise_concentrado.nr_sequencia%type;
nr_lista_concentrado_ret_w	varchar(2000);
nr_seq_maquina_w		hd_dialise_concentrado.nr_seq_maquina%type;
nr_seq_ponto_acesso_w		hd_dialise_concentrado.nr_seq_ponto_acesso%type;

c01 CURSOR FOR 
	SELECT	nr_sequencia, 
		nr_seq_dialisador 
	from	hd_dialise_dialisador 
	where	nr_seq_dialise		= nr_seq_dialise_p 
	and	coalesce(dt_retirada::text, '') = '';

c02 CURSOR FOR 
	SELECT	distinct nr_seq_maquina, 
		nr_seq_ponto_acesso 
	from	hd_dialise_concentrado 
	where	nr_seq_dialise = nr_seq_dialise_p 
	and	coalesce(dt_retirada::text, '') = '' 
	order by 1;
	
c03 CURSOR FOR 
	SELECT	nr_sequencia 
	from	hd_dialise_concentrado 
	where	nr_seq_maquina		= nr_seq_maquina_w 
	and	nr_seq_ponto_acesso	= nr_seq_ponto_acesso_w 
	and	coalesce(dt_retirada::text, '') = '';
				

BEGIN 
 
if (nr_seq_motivo_fim_p IS NOT NULL AND nr_seq_motivo_fim_p::text <> '') then 
 
	ie_retirar_concentrado_w := obter_valor_param_usuario(7009, 199, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento);
 
	/* Atualiza dados da di√°lise */
 
	update	hd_dialise 
	set	dt_cancelamento		= dt_cancelamento_p, 
		ds_observacao		= ds_observacao_p, 
		nr_seq_motivo_fim	= nr_seq_motivo_fim_p, 
		cd_pf_cancelamento	= substr(obter_pessoa_fisica_usuario(nm_usuario_p,'C'),1,10), 
		dt_atualizacao		= clock_timestamp(), 
		nm_usuario		= nm_usuario_p 
	where	nr_sequencia		= nr_seq_dialise_p;
 
	select max(ds_motivo_fim) 
	into STRICT	ds_motivo_fim_w 
	from	motivo_fim 
	where	nr_sequencia = nr_seq_motivo_fim_p;
 
	open	c01;
	loop 
	fetch	c01 into 
		nr_sequencia_w, 
		nr_seq_dialisador_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		 
		SELECT * FROM HD_Retirar_Dialisador(	nr_sequencia_w, nr_seq_dialisador_w, dt_cancelamento_p, nm_usuario_p, ds_motivo_fim_w, ds_erro_p, ds_retorno_p, 'N') INTO STRICT ds_erro_p, ds_retorno_p;
 
	end loop;
	close c01;	
	 
	select	max(a.nr_sequencia) 
	into STRICT	nr_seq_dialisador_w 
	from	hd_dialise_dialisador a 
	where	a.nr_seq_dialise = nr_seq_dialise_p 
	and	(a.dt_retirada IS NOT NULL AND a.dt_retirada::text <> '') 
	and	not exists ( 
			SELECT	1 
			from 	hd_assinatura_digital x 
			where 	x.nr_seq_dial_retirada = a.nr_sequencia 
			and	x.ie_opcao = 'C');
	 
	if (ie_retirar_concentrado_w = 'S') then		 
		 
		open	c02;
			loop 
			fetch	c02 into 
				nr_seq_maquina_w, 
			    nr_seq_ponto_acesso_w;
			EXIT WHEN NOT FOUND; /* apply on c02 */
			 
			open	c03;
			loop 
			fetch	c03 into 
				nr_seq_concentrado_ret_w;
			EXIT WHEN NOT FOUND; /* apply on c03 */
			 
				if (coalesce(nr_lista_concentrado_ret_w::text, '') = '') then 
					nr_lista_concentrado_ret_w 	:= to_char(nr_seq_concentrado_ret_w);
				elsif (length(nr_lista_concentrado_ret_w || ',' || to_char(nr_seq_concentrado_ret_w)) < 2000) then 
					nr_lista_concentrado_ret_w 	:= nr_lista_concentrado_ret_w || ',' || to_char(nr_seq_concentrado_ret_w);
				end if;
			 
			end loop;
			close c03;
			 
		end loop;
		close c02;
		 
		CALL hd_retirar_concentrado_dialise(nr_seq_dialise_p, nm_usuario_p, 'N');
	 
	end if;
	 
	CALL hd_gerar_assinatura(null, null, nr_seq_dialise_p, null, null, null, nr_seq_dialisador_w, nr_lista_concentrado_ret_w, null, 'C', nm_usuario_p, 'N');
		 
else 
	ds_erro_p	:= WHEB_MENSAGEM_PCK.get_texto(277351,null);
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE hd_cancelar_dialise ( nr_seq_dialise_p bigint, dt_cancelamento_p timestamp, ds_observacao_p text, nr_seq_motivo_fim_p bigint, nm_usuario_p text, ds_erro_p INOUT text, ds_retorno_p INOUT text) FROM PUBLIC;

