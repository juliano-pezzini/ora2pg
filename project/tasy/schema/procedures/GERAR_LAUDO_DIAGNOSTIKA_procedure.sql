-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_laudo_diagnostika ( id_origem_p text, ds_laudo_p text, nm_usuario_p text) AS $body$
DECLARE

 
ds_titulo_laudo_w		varchar(255);
cd_pessoa_fisica_w	varchar(10);
cd_medico_w		varchar(10);
ie_status_execucao_w	varchar(3);
nr_prescricao_w		bigint;
nr_seq_prescr_w		integer;
nr_controle_w		bigint;
nr_seq_laudo_w		bigint;
nr_atendimento_w		bigint;
nr_seq_propaci_w  	bigint;
cd_setor_atendimento_w	integer;
nr_laudo_w		bigint;
nr_sequencia_w		bigint;
cd_protocolo_w    	bigint;
dt_entrada_unidade_w	timestamp;
dt_baixa_w		timestamp;
dt_prev_execucao_w	timestamp;
dt_resultado_w		timestamp;
dt_exec_proc_w		timestamp;
cd_cgc_laboratorio_w	varchar(14);
cd_medico_exec_lab_w	varchar(10);
	

BEGIN 
 
if (id_origem_p IS NOT NULL AND id_origem_p::text <> '') and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') then 
	 
	select	max(a.nr_prescricao), 
		max(a.cd_pessoa_fisica), 
		max(a.cd_medico), 
		max(b.nr_sequencia), 
		max(b.nr_controle), 
		max(a.nr_atendimento), 
		max(substr(obter_desc_prescr_proc(b.cd_procedimento, b.ie_origem_proced, b.nr_seq_proc_interno),1,255)), 
		max(b.dt_baixa), 
		max(b.dt_prev_execucao), 
		max(b.dt_resultado), 
		max(b.cd_protocolo), 
		max(a.dt_prescricao), 
		max(b.ie_status_execucao), 
		max(b.cd_cgc_laboratorio) 
	into STRICT	nr_prescricao_w, 
		cd_pessoa_fisica_w, 
		cd_medico_w, 
		nr_seq_prescr_w, 
		nr_controle_w, 
		nr_atendimento_w, 
		ds_titulo_laudo_w, 
		dt_baixa_w, 
		dt_prev_execucao_w, 
		dt_resultado_w, 
		cd_protocolo_w, 
		dt_entrada_unidade_w, 
		ie_status_execucao_w, 
		cd_cgc_laboratorio_w 
	from 	prescr_medica a, 
		prescr_procedimento b 
	where 	a.nr_prescricao = b.nr_prescricao 
	and 	b.nr_seq_interno = id_origem_p;
	 
	if (nr_prescricao_w IS NOT NULL AND nr_prescricao_w::text <> '') and (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') then 
	  
		if (somente_numero(ie_status_execucao_w) <> 0) then--para baixa especial (BE) 
			if (somente_numero(ie_status_execucao_w) < 20) then--quando procedimento não está executado não deve integrar 
				--'ID_ORIGEM: '||id_origem_p||'. O procedimento não está executado. É necessário executar o mesmo para integrar com a Diagnóstika'||'#@#@'); 
				CALL Wheb_mensagem_pck.exibir_mensagem_abort(264080,'IE_ORIGEM='||id_origem_p);
			end if;
		end if;
	 
		select coalesce(max(cd_setor_atendimento), null), 
			coalesce(max(dt_entrada_unidade), dt_entrada_unidade_w), 
			coalesce(max(nr_sequencia), null), 
			coalesce(max(dt_procedimento),clock_timestamp()) 
		into STRICT  cd_setor_atendimento_w, 
			dt_entrada_unidade_w, 
			nr_seq_propaci_w, 
			dt_exec_proc_w 
		from  procedimento_paciente 
		where  nr_prescricao = nr_prescricao_w 
		and   nr_sequencia_prescricao = nr_seq_prescr_w;
 
		select	coalesce(max(nr_sequencia),0) 
		into STRICT	nr_seq_laudo_w 
		from	laudo_paciente 
		where	nr_atendimento	= nr_atendimento_w 
		and	nr_seq_proc	= nr_seq_propaci_w;
 
		if (nr_seq_laudo_w > 0) then 
			CALL cancelar_laudo_paciente(nr_seq_laudo_w,'C',nm_usuario_p,null);
		end if;
		 
		select 	coalesce(max(nr_laudo),0) + 1 
		into STRICT  	nr_laudo_w   
		from  	laudo_paciente 
		where  	nr_atendimento = nr_atendimento_w;	
		 
		if (nr_laudo_w > 0) then 
		 
			if (dt_resultado_w > clock_timestamp()) then 
				dt_resultado_w	:= clock_timestamp();
			end if;
 
			select 	nextval('laudo_paciente_seq') 
			into STRICT	nr_sequencia_w 
			;
			 
			begin 
			insert into laudo_paciente(	 
				nr_sequencia,     
				nr_atendimento, 
				dt_entrada_unidade,  		  
				nr_laudo, 
				nm_usuario,    			  
				dt_atualizacao, 
				cd_medico_resp,    		  
				ds_titulo_laudo, 
				dt_laudo,    			  
				ie_normal,    			  
				dt_exame, 
				nr_prescricao,    		  
				ds_laudo, 
				dt_aprovacao,    		  
				nm_usuario_aprovacao, 
				cd_protocolo,    		  
				nr_seq_proc,    		  
				nr_seq_prescricao, 
				dt_liberacao,    		  
				dt_prev_entrega, 
				dt_real_entrega,  	    
				qt_imagem, 
				nr_controle,    		  
				nm_usuario_seg_aprov,  	  
				cd_setor_atendimento, 
				dt_integracao, 
				nm_usuario_liberacao, 
				ie_formato) 
			values ( 
				nr_sequencia_w,  	  
				nr_atendimento_w, 
				dt_entrada_unidade_w,     	  
				nr_laudo_w, 
				nm_usuario_p,      	  
				clock_timestamp(), 
				cd_medico_w, 
				ds_titulo_laudo_w, 
				coalesce(dt_resultado_w,clock_timestamp()),    	 		  
				'S',        		  
				coalesce(dt_baixa_w,dt_exec_proc_w), 
				nr_prescricao_w,    	  
				ds_laudo_p, 
				clock_timestamp(),  			  
				nm_usuario_p, 
				cd_protocolo_w,      	  
				nr_seq_propaci_w,    	  
				nr_seq_prescr_w, 
				clock_timestamp(),  			  
				dt_prev_execucao_w, 
				null,    	  
				0, 
				nr_controle_w,      	  
				nm_usuario_p,      	  
				cd_setor_atendimento_w, 
				clock_timestamp(), 
				nm_usuario_p, 
				'2');
			exception 
			when others then 
				--'ID_ORIGEM: '||id_origem_p||'. Ocorreu o seguinte problema ao tentar inserir o laudo no Tasy: '||'#@#@'); 
				CALL Wheb_mensagem_pck.exibir_mensagem_abort(264081,'IE_ORIGEM='||id_origem_p);
			end;
			 
			begin 
			CALL Vincular_Procedimento_Laudo(nr_sequencia_w,'N',nm_usuario_p);
			 
			/*rotina para buscar o médico responsável do laboratório executante*/
 
			if (cd_cgc_laboratorio_w IS NOT NULL AND cd_cgc_laboratorio_w::text <> '') then 
				select	max(cd_pessoa_fisica) 
				into STRICT	cd_medico_exec_lab_w 
				from	medico 
				where	cd_cgc = cd_cgc_laboratorio_w;
			end if;
			 
			--17/03/2011 tbschulz - para não gravar o médico executor com o médico do laudo/prescrição caso possuir médico vinculado ao laboratório 
			if (nr_seq_propaci_w IS NOT NULL AND nr_seq_propaci_w::text <> '') and (cd_medico_exec_lab_w IS NOT NULL AND cd_medico_exec_lab_w::text <> '') then 
				update	procedimento_paciente 
				set	cd_medico_executor = cd_medico_exec_lab_w 
				where	nr_sequencia = nr_seq_propaci_w;
			else 
				CALL Atualizar_Propaci_Medico_Laudo(nr_sequencia_w, 'EX', nm_usuario_p);
			end if;
 
			CALL Atualizar_Propaci_Medico_Laudo(nr_sequencia_w, 'EXC', nm_usuario_p);
			exception 
			when others then 
				--'ID_ORIGEM: '||id_origem_p||'. Ocorreu o seguinte problema ao atualizar procedimentos do laudo: '||'#@#@'); 
				CALL Wheb_mensagem_pck.exibir_mensagem_abort(264082,'IE_ORIGEM='||id_origem_p);
			end;
			 
			if (coalesce(dt_baixa_w::text, '') = '') then 
				dt_baixa_w := clock_timestamp();
				begin 
				update	prescr_procedimento 
				set	cd_motivo_baixa = 1, 
					dt_baixa	= dt_baixa_w 
				where  	nr_prescricao	= nr_prescricao_w 
				and   	nr_sequencia 	= nr_seq_prescr_w;
				 
				CALL gera_log_lab(nr_prescricao_w,'setou data de baixa - procedure atualizar_prescr_diagnostika - id_origem: '
||id_origem_p|| 
				' nr_prescricao_w: '||nr_prescricao_w||' nr_seq_prescr_w: '||nr_seq_prescr_w,'',13,nm_usuario_p);
				exception 
				when others then 
					--'ID_ORIGEM: '||id_origem_p||'. Ocorreu o seguinte problema ao baixar o procedimento: '||'#@#@'); 
					CALL Wheb_mensagem_pck.exibir_mensagem_abort(264083,'IE_ORIGEM='||id_origem_p);
				end;
			end if;
	 
			CALL gera_log_lab(nr_prescricao_w,'executou procedure gerar_laudo_diagnostika - nr_seq_laudo: '
||nr_sequencia_w|| 
			'nr_laudo: '||nr_laudo_w||' id_origem: '||id_origem_p,'',13,nm_usuario_p);
		 
			commit;
		end if;
	else 
		--'Não foi encontrada prescrição e/ou atendimento para o ID_ORIGEM: '||id_origem_p||'. '||'#@#@');	 
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(264084,'IE_ORIGEM='||id_origem_p);
	end if;
 
else 
	--'ID_ORIGEM: '||id_origem_p||' NM_USUARIO: '||nm_usuario_p||'. Parâmetro id_origem ou nm_usuario não informado. '||'#@#@'); 
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(264087,'IE_ORIGEM='||id_origem_p||';NM_USUARIO='||nm_usuario_p);	
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_laudo_diagnostika ( id_origem_p text, ds_laudo_p text, nm_usuario_p text) FROM PUBLIC;

