-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE med_obter_se_long_contem ( nm_usuario_p text, nr_seq_cliente_p bigint, ds_texto_busca_p text, ie_opcao_busca_p text) AS $body$
DECLARE


nr_seq_long_w	bigint;
ie_contem_w	varchar(1);

-- Evolução
c01 CURSOR FOR
SELECT	nr_sequencia
from	med_evolucao
where	nr_seq_cliente = nr_seq_cliente_p;

-- Receita
c02 CURSOR FOR
SELECT	nr_sequencia
from	med_receita
where	nr_seq_cliente = nr_seq_cliente_p;

-- Textos
c03 CURSOR FOR
SELECT	nr_sequencia
from	med_texto_adicional
where	nr_seq_cliente = nr_seq_cliente_p;

-- Atestados
c04 CURSOR FOR
SELECT	nr_sequencia
from	med_atestado
where	nr_seq_cliente = nr_seq_cliente_p;

-- Solicitação de exames - Comum
c05 CURSOR FOR
SELECT	nr_sequencia
from	med_pedido_exame
where	nr_seq_cliente = nr_seq_cliente_p;


BEGIN
if (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') and (nr_seq_cliente_p IS NOT NULL AND nr_seq_cliente_p::text <> '') and (ds_texto_busca_p IS NOT NULL AND ds_texto_busca_p::text <> '') then
	begin
	delete	FROM w_med_long
	where	nm_usuario = nm_usuario_p;

	-- Evolução
	if (ie_opcao_busca_p = 'E') then
		begin
		open c01;
		loop
		fetch c01 into nr_seq_long_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			begin
			ie_contem_w := obter_se_long_contem('med_evolucao', 'ds_evolucao', 'where nr_sequencia = :nr_seq_long', 'nr_seq_long='||nr_seq_long_w, ds_texto_busca_p, ie_contem_w);
			if (ie_contem_w = 'S') then
				begin
				insert into w_med_long(
					nm_usuario,
					nr_seq_long)
				values (
					nm_usuario_p,
					nr_seq_long_w);
				end;
			end if;
			end;
		end loop;
		close c01;
		end;
	-- Receita
	elsif (ie_opcao_busca_p = 'R') then
		begin
		open c02;
		loop
		fetch c02 into nr_seq_long_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			begin
			ie_contem_w := obter_se_long_contem('med_receita', 'ds_receita', 'where nr_sequencia = :nr_seq_long', 'nr_seq_long='||nr_seq_long_w, ds_texto_busca_p, ie_contem_w);
			if (ie_contem_w = 'S') then
				begin
				insert into w_med_long(
					nm_usuario,
					nr_seq_long)
				values (
					nm_usuario_p,
					nr_seq_long_w);
				end;
			end if;
			end;
		end loop;
		close c02;
		end;
	-- Textos
	elsif (ie_opcao_busca_p = 'T') then
		begin
		open c03;
		loop
		fetch c03 into nr_seq_long_w;
		EXIT WHEN NOT FOUND; /* apply on c03 */
			begin
			ie_contem_w := obter_se_long_contem('med_texto_adicional', 'ds_texto', 'where nr_sequencia = :nr_seq_long', 'nr_seq_long='||nr_seq_long_w, ds_texto_busca_p, ie_contem_w);
			if (ie_contem_w = 'S') then
				begin
				insert into w_med_long(
					nm_usuario,
					nr_seq_long)
				values (
					nm_usuario_p,
					nr_seq_long_w);
				end;
			end if;
			end;
		end loop;
		close c03;
		end;
	-- Atestados
	elsif (ie_opcao_busca_p = 'A') then
		begin
		open c04;
		loop
		fetch c04 into nr_seq_long_w;
		EXIT WHEN NOT FOUND; /* apply on c04 */
			begin
			ie_contem_w := obter_se_long_contem('med_atestado', 'ds_atestado', 'where nr_sequencia = :nr_seq_long', 'nr_seq_long='||nr_seq_long_w, ds_texto_busca_p, ie_contem_w);
			if (ie_contem_w = 'S') then
				begin
				insert into w_med_long(
					nm_usuario,
					nr_seq_long)
				values (
					nm_usuario_p,
					nr_seq_long_w);
				end;
			end if;
			end;
		end loop;
		close c04;
		end;
	-- Evolução
	elsif (ie_opcao_busca_p = 'C') then
		begin
		open c05;
		loop
		fetch c05 into nr_seq_long_w;
		EXIT WHEN NOT FOUND; /* apply on c05 */
			begin
			ie_contem_w := obter_se_long_contem('med_pedido_exame', 'ds_solicitacao', 'where nr_sequencia = :nr_seq_long', 'nr_seq_long='||nr_seq_long_w, ds_texto_busca_p, ie_contem_w);
			if (ie_contem_w = 'S') then
				begin
				insert into w_med_long(
					nm_usuario,
					nr_seq_long)
				values (
					nm_usuario_p,
					nr_seq_long_w);
				end;
			end if;
			end;
		end loop;
		close c05;
		end;
	end if;

	commit;
	end;
end if;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE med_obter_se_long_contem ( nm_usuario_p text, nr_seq_cliente_p bigint, ds_texto_busca_p text, ie_opcao_busca_p text) FROM PUBLIC;

