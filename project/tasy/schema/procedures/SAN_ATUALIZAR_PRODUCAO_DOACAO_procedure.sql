-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE san_atualizar_producao_doacao (nr_seq_doacao_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
 
ie_aborta_w			varchar(1);
vl_param_388_w			varchar(255);
ie_nao_exist_analise_critica_w	varchar(1);
vl_param_396_w			varchar(1);
ie_peso_w			varchar(1);
ie_atualiza_local_w		varchar(1);
nr_seq_producao_w		bigint;
nr_seq_armazenamento_w		bigint;

C01 CURSOR FOR 
	SELECT	nr_sequencia 
	from	san_producao 
	where	nr_seq_doacao = nr_seq_doacao_p 
	order by 1;


BEGIN 
if (nr_seq_doacao_p IS NOT NULL AND nr_seq_doacao_p::text <> '') then 
 
	vl_param_388_w	:= obter_valor_param_usuario(450,388, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento);
	vl_param_396_w	:= obter_valor_param_usuario(450,396, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento);
	ie_atualiza_local_w := obter_valor_param_usuario(450,438, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento);
 
	select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END  
	into STRICT	ie_aborta_w 
	from	san_producao 
	where	nr_seq_doacao	= nr_seq_doacao_p 
	and	coalesce(nr_seq_inutil::text, '') = '' 
	and	coalesce(dt_fim_producao::text, '') = '';
	 
	select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END  
	into STRICT	ie_nao_exist_analise_critica_w 
	from	san_producao b 
	where	b.nr_seq_doacao = nr_seq_doacao_p 
	and	((coalesce(ie_pai_reproduzido,'N') = 'N') or (vl_param_388_w <> 'R')) 
	and	not exists (SELECT	1 
				from	san_prod_analise_critica a 
				where	a.nr_seq_producao = b.nr_sequencia);
				 
	select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END  
	into STRICT	ie_peso_w 
	from	san_producao 
	where	nr_seq_doacao = nr_seq_doacao_P 
	and	coalesce(qt_peso_bolsa::text, '') = '';
	 
	if (vl_param_396_w = 'S') and (ie_peso_w = 'S') then		 
		CALL wheb_mensagem_pck.exibir_mensagem_abort(174884);
	end if;	
	 
	 
	if (vl_param_388_w <> 'S') and (ie_nao_exist_analise_critica_w = 'S') then		 
		CALL wheb_mensagem_pck.exibir_mensagem_abort(157805);
	end if;
	 
	if (ie_aborta_w = 'S') then		 
		CALL wheb_mensagem_pck.exibir_mensagem_abort(115033);
	elsif (ie_aborta_w = 'N') then 
		update	san_doacao 
		set	dt_fim_prod_doacao	= clock_timestamp(), 
			nm_usuario_fim_prod	= nm_usuario_p 
		where	nr_sequencia		= nr_seq_doacao_p;
	end if;
	 
	if (ie_atualiza_local_w = 'S') then 
		open C01;
		loop 
		fetch C01 into	 
			nr_seq_producao_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin 
			 
			SELECT	max(a.nr_sequencia) 
			into STRICT	nr_seq_armazenamento_w 
			FROM	san_armazenamento_bolsa a, 
				san_armazenamento_regra b, 
				san_producao c, 
				san_doacao d, 
				pessoa_fisica e 
			WHERE	a.nr_sequencia 		= b.nr_seq_armazenamento 
			AND	c.nr_seq_doacao 	= d.nr_sequencia 
			AND	d.cd_pessoa_fisica 	= e.cd_pessoa_fisica 
			AND	c.nr_sequencia 		= nr_seq_producao_w 
			AND (b.nr_seq_derivado 	= c.nr_seq_derivado 
			OR (coalesce(b.nr_seq_derivado::text, '') = '' 
			AND NOT EXISTS (SELECT	1 
					FROM	san_armazenamento_regra f, 
					 		san_armazenamento_bolsa x 
					WHERE	f.nr_seq_derivado 	= c.nr_seq_derivado 
					AND	f.ie_fator_rh 		= e.ie_fator_rh 
					AND	f.ie_tipo_sanguineo 	= e.ie_tipo_sangue 
					AND	x.nr_sequencia		= f.nr_seq_armazenamento 
					AND	x.ie_tipo_local = 'P' ))) 
			AND (b.ie_fator_rh = e.ie_fator_rh 
			OR (coalesce(b.ie_fator_rh::text, '') = '' 
			AND NOT EXISTS (SELECT	1 
					FROM	san_armazenamento_regra f, 
					 		san_armazenamento_bolsa x 
					WHERE	f.nr_seq_derivado = c.nr_seq_derivado 
					AND	f.ie_fator_rh = e.ie_fator_rh 
					AND	f.ie_tipo_sanguineo = e.ie_tipo_sangue 
					AND	x.nr_sequencia		= f.nr_seq_armazenamento 
					AND	x.ie_tipo_local = 'P'))) 
			AND (b.ie_tipo_sanguineo = e.ie_tipo_sangue 
			OR (coalesce(b.ie_tipo_sanguineo::text, '') = '' 
			AND NOT EXISTS (SELECT	1 
					FROM	san_armazenamento_regra f, 
					 		san_armazenamento_bolsa x 
					WHERE	f.nr_seq_derivado = c.nr_seq_derivado 
					AND	f.ie_fator_rh = e.ie_fator_rh 
					AND	f.ie_tipo_sanguineo = e.ie_tipo_sangue 
					AND	x.nr_sequencia		= f.nr_seq_armazenamento 
					AND	x.ie_tipo_local = 'P'))) 
			AND	a.ie_tipo_local = 'P';
 
			if (nr_seq_armazenamento_w IS NOT NULL AND nr_seq_armazenamento_w::text <> '') then 
 
				update	san_producao 
				set	nm_usuario_recebimento	= nm_usuario_p, 
					nm_usuario 		= nm_usuario_p, 
					dt_recebimento		= clock_timestamp(), 
					dt_atualizacao		= clock_timestamp(), 
					nr_seq_armazenamento	= nr_seq_armazenamento_w 
				where	nr_sequencia = nr_seq_producao_w;
			 
			else				 
				CALL gravar_log_tasy(94756, wheb_mensagem_pck.get_texto(791700, 
						'NR_SEQ_PRODUCAO='||nr_seq_producao_w), nm_usuario_p);				
			end if;
 
			end;
		end loop;
		close C01;
	end if;
	--SAN - FINALIZAR PRODUÇÃO DA DOAÇÃO 
	CALL executa_evento_hemoterapia( nm_usuario_p , nr_seq_doacao_p, 5);
	 
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE san_atualizar_producao_doacao (nr_seq_doacao_p bigint, nm_usuario_p text) FROM PUBLIC;

