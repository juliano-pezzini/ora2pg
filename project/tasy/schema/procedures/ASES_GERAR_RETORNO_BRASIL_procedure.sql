-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ases_gerar_retorno_brasil ( nr_seq_cobr_escrit_p bigint, nm_usuario_p text) AS $body$
DECLARE


/* Esta rotina foi criada exclusivamente para o cliente 'Plano de Saúde Ases Ltda' para importar apenas os títullos do estabelecimento logado */

nr_seq_reg_T_w		bigint;
nr_seq_reg_U_w		bigint;
nr_titulo_w		bigint;
vl_titulo_w		double precision;
vl_acrescimo_w		double precision;
vl_desconto_w		double precision;
vl_abatimento_w		double precision;
vl_liquido_w		double precision;
vl_outras_despesas_w	double precision;
vl_despesas_w		double precision;
dt_liquidacao_w		timestamp;
ds_titulo_w		varchar(255);
vl_cobranca_w		double precision;
vl_alterar_w		double precision;
cd_ocorrencia_w		bigint;
nr_seq_ocorrencia_ret_w	bigint;
vl_saldo_inclusao_w	double precision;
nr_seq_motivo_ocor_w	bigint;
cd_motivo_w		varchar(10);

c01 CURSOR FOR
	SELECT	nr_sequencia,
		trim(both substr(ds_string,59,15)),
		(substr(ds_string,82,15))::numeric /100,
		coalesce((substr(ds_string,199,15))::numeric /100,0),
		trim(both substr(ds_string,214,2))
	from	w_retorno_banco
	where	nr_seq_cobr_escrit	= nr_seq_cobr_escrit_p
	and	substr(ds_string,8,1)	= '3'
	and	substr(ds_string,14,1)	= 'T'
	and	substr(ds_string,16,2)	<> '28';


BEGIN

open C01;
loop
fetch C01 into
	nr_seq_reg_T_w,
	ds_titulo_w,
	vl_cobranca_w,
	vl_despesas_w,
	cd_motivo_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	vl_alterar_w	:= 0;

	/* Encontrar pelo título externo */

	select	max(nr_titulo)
	into STRICT	nr_titulo_w
	from	titulo_receber
	where	nr_titulo_externo = ds_titulo_w;

	/* Se não econtrou, procura pelo título no Tasy */

	if (coalesce(nr_titulo_w::text, '') = '') then
		select	max(nr_titulo)
		into STRICT	nr_titulo_w
		from	titulo_receber
		where	nr_titulo		= somente_numero(ds_titulo_w)
		and	cd_estabelecimento	= wheb_usuario_pck.get_cd_estabelecimento;
	end if;

	/* Se encontrou o título importa, senão grava no log */

	nr_seq_reg_U_w := nr_seq_reg_T_w + 1;

	select	coalesce((substr(ds_string,18,15))::numeric /100,0),
		coalesce((substr(ds_string,33,15))::numeric /100,0),
		coalesce((substr(ds_string,48,15))::numeric /100,0),
		coalesce((substr(ds_string,93,15))::numeric /100,0),
		coalesce((substr(ds_string,108,15))::numeric /100,0),
		to_date(CASE WHEN substr(ds_string,138,8)='00000000' THEN null  ELSE substr(ds_string,138,8) END ,'dd/mm/yyyy'),
		(substr(ds_string,16,2))::numeric
	into STRICT	vl_acrescimo_w,
		vl_desconto_w,
		vl_abatimento_w,
		vl_liquido_w,
		vl_outras_despesas_w,
		dt_liquidacao_w,
		cd_ocorrencia_w
	from	w_retorno_banco
	where	nr_sequencia	= nr_seq_reg_U_w;

	select 	max(a.nr_sequencia)
	into STRICT	nr_seq_ocorrencia_ret_w
	from	banco_ocorr_escrit_ret a
	where	a.cd_banco	= 001
	and	a.cd_ocorrencia = cd_ocorrencia_w;

	if (nr_titulo_w IS NOT NULL AND nr_titulo_w::text <> '') then
		select	max(vl_titulo),
			max(vl_saldo_titulo)
		into STRICT	vl_titulo_w,
			vl_saldo_inclusao_w
		from	titulo_receber
		where	nr_titulo	= nr_titulo_w;

		select 	max(a.nr_sequencia)
		into STRICT	nr_seq_motivo_ocor_w
		from	banco_ocorr_motivo_ret a
		where	a.cd_motivo	= cd_motivo_w;

		/* Tratar acrescimos/descontos */

		if (vl_titulo_w <> vl_liquido_w) then
			vl_alterar_w	:= vl_liquido_w - vl_titulo_w;

			if (vl_alterar_w > 0) then
				vl_acrescimo_w	:= vl_alterar_w;
			--else
			--	vl_desconto_w	:= abs(vl_alterar_w);
			end if;
		end if;

		insert	into titulo_receber_cobr(nr_sequencia,
			nr_titulo,
			cd_banco,
			vl_cobranca,
			vl_desconto,
			vl_acrescimo,
			vl_despesa_bancaria,
			vl_liquidacao,
			dt_liquidacao,
			dt_atualizacao,
			nm_usuario,
			nr_seq_cobranca,
			nr_seq_ocorrencia_ret,
			vl_saldo_inclusao,
			nr_seq_ocorr_motivo)
		values (nextval('titulo_receber_cobr_seq'),
			nr_titulo_w,
			001,
			vl_titulo_w,
			vl_desconto_w,
			vl_acrescimo_w,
			vl_despesas_w,
			vl_liquido_w,
			dt_liquidacao_w,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_cobr_escrit_p,
			nr_seq_ocorrencia_ret_w,
			vl_saldo_inclusao_w,
			nr_seq_motivo_ocor_w);
	else
		/*insert	into	logxxxx_tasy
			(nm_usuario,
			dt_atualizacao,
			cd_log,
			ds_log)
		values	(nm_usuario_p,
			sysdate,
			55760,
			'Não foi importado o título ' || ds_titulo_w || ', pois não foi encontrado no Tasy');*/
		insert into cobranca_escrit_log(nr_sequencia,
			nm_usuario,
			dt_atualizacao,
			nm_usuario_nrec,
			dt_atualizacao_nrec,
			nr_seq_cobranca,
			ds_log,
			vl_saldo_titulo,
			nr_seq_ocorrencia_ret)
		values (nextval('cobranca_escrit_log_seq'),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nr_seq_cobr_escrit_p,
			'Não foi importado o título ' || ds_titulo_w || ', pois não foi encontrado no Tasy',
			vl_cobranca_w,
			nr_seq_ocorrencia_ret_w);

	end if;

	end;
end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ases_gerar_retorno_brasil ( nr_seq_cobr_escrit_p bigint, nm_usuario_p text) FROM PUBLIC;

