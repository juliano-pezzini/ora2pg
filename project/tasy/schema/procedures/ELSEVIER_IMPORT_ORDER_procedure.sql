-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE elsevier_import_order ( cd_protocolo_p protocolo_medicacao.cd_protocolo%type, nr_seq_protocolo_p protocolo_medicacao.nr_sequencia%type, order_p philips_json, nm_usuario_p intpd_fila_transmissao.nm_usuario%type, nr_seq_guia_inf_p out protocolo_guia_inf.nr_sequencia%type, inconsistencies_warning_p out text ) is TYPE item_r IS RECORD( cd_material_w protocolo_medic_material.cd_material%type, cd_unidade_medida_w protocolo_medic_material.cd_unidade_medida%type, qt_dose_w protocolo_medic_material.qt_dose%type, ie_agrupador_w protocolo_medic_material.ie_agrupador%type) AS $body$
BEGIN
	-- We only want the middle section of the catalogKey string (eg.: in 'Procedimento|Procedimento_Exame|33728', we only want the 'Procedimento_Exame' part)
	return;
end;

function get_parameter(parametersNode philips_json, name varchar2) return;
begin
	parameterNode	:= parametersNode.get(name);

	if (parameterNode IS NOT NULL AND parameterNode::text <> '') then
		-- Parameters are always sent in a array for some reason, so we need to read the first (we usually accept only 1 item per field).
		return;
	end if;

	return;
end;

function get_dropdown_value(parametersObject philips_json, name varchar2) return;
begin
	parameterItem	:= get_parameter(parametersObject, name);

	if ((parameterItem IS NOT NULL AND parameterItem::text <> '') and (parameterItem.get('externalCode') IS NOT NULL AND (parameterItem.get('externalCode'))::text <> '')) then
		return;
	end if;

	return;
end;

function get_parameter_value(parametersObject philips_json, name varchar2) return;
begin
	parameterItem	:= get_parameter(parametersObject, name);

	if ((parameterItem IS NOT NULL AND parameterItem::text <> '') and (parameterItem.get('value') IS NOT NULL AND (parameterItem.get('value'))::text <> '')) then
		return;
	end if;

	return;
end;

function get_parameter_value_additional(parametersObject in philips_json , ds_name in varchar2) return;
    ds_name_w varchar2(255);
begin
	parameterItem	:= get_parameter(parametersObject, ds_name);

	if ((parameterItem IS NOT NULL AND parameterItem::text <> '') and (parameterItem.get('externalCode') IS NOT NULL AND (parameterItem.get('externalCode'))::text <> '')) then
		ds_name_w := parameterItem.get['externalCode'].get_string();
	end if;

	return;
end;

function get_boolean_value(parametersObject philips_json, name varchar2) return;
begin
	parameterValue	:= get_parameter_value(parametersObject, name);

	if (parameterValue = 'true') then
		return;
	end if;

	return;
end;

function get_boolean(json_value_p philips_json_value) return;
	else
		return;
	end if;
end;

function get_permission_materials_rule( order_pp in philips_json) return;
ds_tipo_med_solic_w     varchar2(10);
ie_permite_w		varchar2(1 char);
cd_exp_tipo_w      dic_expressao.cd_expressao%type;

begin
    ie_controle_tempo_w := null;
    ie_permite_w	:= null;

    if (order_type_w in ('Medication_Infusion', 'Medication')) then
        ie_controle_tempo_w := get_boolean_value(parameters_w, 'IE_CONTROLE_TEMPO');

        select  max(coalesce(ie_solucao,'XPTO'))
        into STRICT    ie_solucao_w
        from    material
        where   cd_material = (order_pp.get['externalCode'].get_string())::numeric;

        if ( ie_solucao_w = 'N' and ie_controle_tempo_w = 'S' or
            ie_solucao_w = 'C' and ie_controle_tempo_w = 'N')then

            cd_exp_tipo_w := 298683;

            if (ie_controle_tempo_w = 'N')then
                cd_exp_tipo_w := 293070;
            end if;

           inconsistencies_warning_p := wheb_mensagem_pck.get_texto(1203491,
                                                'DS_MATERIAL='  || substr(order_pp.get['name'].get_string(), 1, 250) ||
                                                ';IE_TIPO_ITEM=' || obter_desc_expressao(cd_exp_tipo_w));

	    ie_permite_w := 'N';
        end if;
         ie_permite_w := 'S';
    end if;

    return;
end;


begin

-- If there is no catalogKey, it means this is not an orderable (probably a advisory)
if ((order_p.get('catalogKey') IS NOT NULL AND (order_p.get('catalogKey'))::text <> '')) then
	parameters_w	:= philips_json(order_p.get('parameters'));
	order_type_w	:= get_order_type();

	ds_prechecked_w := get_boolean(order_p.get('prechecked'));

	if (ds_prechecked_w = 'false')then
		ie_selecionado_w := 'N';
	else
		ie_selecionado_w := 'S';
	end if;

	if (order_p.exist('guidance')) then
		ds_link_w	:= order_p.get['guidance'].get_string();
	end if;

    ie_permite_import_sol_medic_w := get_permission_materials_rule(order_p);

	if (order_type_w in ('Material', 'Nutricao_Enteral', 'Nutricao_Suplementar') or ie_permite_import_sol_medic_w = 'S' and ie_controle_tempo_w = 'N') then -- Items inserted into the protocol's materials table
		
        cd_material_w		:= to_number(order_p.get('externalCode').get_string());
		cd_unidade_medida_w	:= get_dropdown_value(parameters_w, 'CD_UNIDADE_MEDIDA');
		qt_dose_peso_w		:= to_number(get_parameter_value(parameters_w, 'QT_DOSE_PESO'));
		qt_dose_w		:= to_number(get_parameter_value(parameters_w, 'QT_DOSE'));
		ie_multiplicar_dose_w	:= get_boolean_value(parameters_w, 'IE_MULTIPLICAR_DOSE');
		ie_urgencia_w		:= get_boolean_value(parameters_w, 'IE_URGENCIA');
		cd_intervalo_w		:= get_dropdown_value(parameters_w, 'CD_INTERVALO');
		ds_recomendacao_mat_w	:= get_parameter_value(parameters_w, 'DS_RECOMENDACAO');
		ds_justificativa_w	:= get_parameter_value(parameters_w, 'DS_JUSTIFICATIVA');
		ie_bomba_infusao_w	:= get_dropdown_value(parameters_w, 'IE_BOMBA_INFUSAO');
		ie_duracao_material_w	:= get_dropdown_value(parameters_w, 'IE_DURACAO');
		ie_via_aplicacao_w	:= get_dropdown_value(parameters_w, 'IE_VIA_APLICACAO');
		qt_dias_util_w		:= to_number(get_parameter_value(parameters_w, 'QT_DIAS_UTIL'));
		ie_se_necessario_w	:= get_boolean_value(parameters_w, 'IE_SE_NECESSARIO');
		ie_acm_w		:= get_boolean_value(parameters_w, 'IE_ACM');

		select	protocolo_medic_material_seq.nextval
		into	nr_seq_iterno_w
		from	dual;
        
 		if (order_type_w in ('Medication_Infusion', 'Medication')) then -- Medicines
			ie_alterar_dose_w		:= get_boolean_value(parameters_w, 'IE_ALTERAR_DOSE');
			ie_lado_w			:= get_dropdown_value(parameters_w, 'IE_LADO');
			qt_hora_aplicacao_w		:= to_number(get_parameter_value(parameters_w, 'QT_HORA_APLICACAO'));
			qt_minuto_aplicacao_w		:= to_number(get_parameter_value(parameters_w, 'QT_MINUTO_APLICACAO'));
			qt_solucao_w			:= to_number(get_parameter_value(parameters_w, 'QT_SOLUCAO'));
			ie_aplic_bolus_w		:= get_boolean_value(parameters_w, 'IE_APLIC_BOLUS');
			ie_aplic_lenta_w		:= get_boolean_value(parameters_w, 'IE_APLIC_LENTA');
			qt_min_intervalo_w		:= to_number(get_parameter_value(parameters_w, 'QT_MIN_INTERVALO'));
			ie_dose_espec_agora_w		:= get_boolean_value(parameters_w, 'IE_DOSE_ESPEC_AGORA');
			qt_dose_especial_w		:= to_number(get_parameter_value(parameters_w, 'QT_DOSE_ESPECIAL'));
			qt_dias_prev_util_w		:= to_number(get_parameter_value(parameters_w, 'QT_DIAS_PREV_UTIL'));
			ie_objetivo_w			:= get_dropdown_value(parameters_w, 'IE_OBJETIVO');
			qt_dias_receita_w		:= to_number(get_parameter_value(parameters_w, 'QT_DIAS_RECEITA'));
			cd_microorganismo_cih_w		:= to_number(get_dropdown_value(parameters_w, 'CD_MICROORGANISMO_CIH'));
			cd_amostra_cih_w		:= to_number(get_dropdown_value(parameters_w, 'CD_AMOSTRA_CIH'));
			ie_origem_infeccao_w		:= get_dropdown_value(parameters_w, 'IE_ORIGEM_INFECCAO');
			cd_topografia_cih_w		:= to_number(get_dropdown_value(parameters_w, 'CD_TOPOGRAFIA_CIH'));
			ie_indicacao_w			:= get_dropdown_value(parameters_w, 'IE_INDICACAO');
			ie_uso_antimicrobiano_w		:= get_boolean_value(parameters_w, 'IE_USO_ANTIMICROBIANO');
			ie_pre_medicacao_w		:= get_dropdown_value(parameters_w, 'IE_PRE_MEDICACAO');
			ie_arredondar_w			:= get_boolean_value(parameters_w, 'IE_ARREDONDAR');
			ie_kit_w			:= get_boolean_value(parameters_w, 'IE_KIT');
			ie_medicacao_paciente_w		:= get_boolean_value(parameters_w, 'IE_MEDICACAO_PACIENTE');
			ie_justificativa_w		:= get_boolean_value(parameters_w, 'IE_JUSTIFICATIVA');
			ie_uso_continuo_w		:= get_boolean_value(parameters_w, 'IE_USO_CONTINUO');
			ie_dados_atb_w			:= get_boolean_value(parameters_w, 'IE_DADOS_ATB');
			ie_gerar_solucao_w		:= get_boolean_value(parameters_w, 'IE_GERAR_SOLUCAO');
			ie_aplica_reducao_w		:= get_boolean_value(parameters_w, 'IE_APLICA_REDUCAO');
			ie_regra_diluicao_cad_mat_w	:= get_boolean_value(parameters_w, 'IE_REGRA_DILUICAO_CAD_MAT');
			ie_local_adm_w			:= get_dropdown_value(parameters_w, 'IE_LOCAL_ADM');
			ie_fator_correcao_w		:= get_boolean_value(parameters_w, 'IE_FATOR_CORRECAO');

			select	obter_seq_mat_prot_medic_mat(cd_protocolo_p, nr_seq_protocolo_p),
				obter_agrup_prot_medic_mat(cd_protocolo_p, nr_seq_protocolo_p, 0)
			into	nr_seq_material_w,
				nr_agrupamento_w
			from	dual;

			insert into protocolo_medic_material (
				cd_protocolo,
				nr_sequencia,
				nr_seq_interno,
				nr_seq_material,
				nr_agrupamento,
				cd_material,
				ie_agrupador,
				ie_via_aplicacao,
				cd_unidade_medida,
				qt_dose,
				qt_dose_peso,
				ie_multiplicar_dose,
				ie_alterar_dose,
				ie_se_necessario,
				ie_acm,
				ie_urgencia,
				ie_lado,
				cd_intervalo,
				qt_hora_aplicacao,
				qt_minuto_aplicacao,
				qt_solucao,
				ie_bomba_infusao,
				ie_aplic_bolus,
				ie_aplic_lenta,
				qt_dias_util,
				qt_min_intervalo,
				ie_dose_espec_agora,
				qt_dose_especial,
				ds_recomendacao,
				ie_duracao,
				qt_dias_prev_util,
				ie_objetivo,
				qt_dias_receita,
				cd_microorganismo_cih,
				cd_amostra_cih,
				ie_origem_infeccao,
				cd_topografia_cih,
				ie_indicacao,
				ie_uso_antimicrobiano,
				ie_pre_medicacao,
				ie_arredondar,
				ds_justificativa,
				ie_kit,
				ie_medicacao_paciente,
				ie_justificativa,
				ie_uso_continuo,
				ie_dados_atb,
				ie_gerar_solucao,
				ie_aplica_reducao,
				ie_regra_diluicao_cad_mat,
				ie_local_adm,
				ie_fator_correcao,
				dt_atualizacao,
				nm_usuario,
				ie_selecionado
			) values (
				cd_protocolo_p,
				nr_seq_protocolo_p,
				nr_seq_iterno_w,
				nr_seq_material_w,
				nr_agrupamento_w,
				cd_material_w,
				1,
				ie_via_aplicacao_w,
				cd_unidade_medida_w,
				qt_dose_w,
				qt_dose_peso_w,
				ie_multiplicar_dose_w,
				ie_alterar_dose_w,
				ie_se_necessario_w,
				ie_acm_w,
				ie_urgencia_w,
				ie_lado_w,
				cd_intervalo_w,
				qt_hora_aplicacao_w,
				qt_minuto_aplicacao_w,
				qt_solucao_w,
				ie_bomba_infusao_w,
				ie_aplic_bolus_w,
				ie_aplic_lenta_w,
				qt_dias_util_w,
				qt_min_intervalo_w,
				ie_dose_espec_agora_w,
				qt_dose_especial_w,
				ds_recomendacao_mat_w,
				ie_duracao_material_w,
				qt_dias_prev_util_w,
				ie_objetivo_w,
				qt_dias_receita_w,
				cd_microorganismo_cih_w,
				cd_amostra_cih_w,
				ie_origem_infeccao_w,
				cd_topografia_cih_w,
				ie_indicacao_w,
				ie_uso_antimicrobiano_w,
				ie_pre_medicacao_w,
				ie_arredondar_w,
				ds_justificativa_w,
				ie_kit_w,
				ie_medicacao_paciente_w,
				ie_justificativa_w,
				ie_uso_continuo_w,
				ie_dados_atb_w,
				ie_gerar_solucao_w,
				ie_aplica_reducao_w,
				ie_regra_diluicao_cad_mat_w,
				ie_local_adm_w,
				ie_fator_correcao_w,
				sysdate,
				nm_usuario_p,
				ie_selecionado_w
			);

			cd_material_dil_w := to_number(get_parameter_value_additional(parameters_w, 'CD_MAT_DIL'));
			
			if(cd_material_dil_w is not null)then
				items_dil_red_recons_array_w(1).cd_material_w		    := cd_material_dil_w;
				items_dil_red_recons_array_w(1).cd_unidade_medida_w	    := get_dropdown_value(parameters_w, 'CD_UNID_MED_DOSE_DIL');
                items_dil_red_recons_array_w(1).ie_agrupador_w		    := 3;	
                items_dil_red_recons_array_w(1).qt_dose_w               := 0;
              
                if(get_parameter_value(parameters_w, 'QT_DOSE_DIL') is not null)then
                    items_dil_red_recons_array_w(1).qt_dose_w           := to_number(get_parameter_value(parameters_w, 'QT_DOSE_DIL'));
                end if;
                
			end if;
			
			cd_material_red_w := to_number(get_parameter_value_additional(parameters_w, 'CD_MAT_RED'));
			
			if(cd_material_red_w is not null)then
				items_dil_red_recons_array_w(2).cd_material_w		    := cd_material_red_w;
				items_dil_red_recons_array_w(2).cd_unidade_medida_w	    := get_dropdown_value(parameters_w, 'CD_UNID_MED_DOSE_RED');
                items_dil_red_recons_array_w(2).qt_dose_w		    := 0;
                items_dil_red_recons_array_w(2).ie_agrupador_w		    := 7;
                
                if(get_parameter_value(parameters_w, 'QT_DOSE_RED') is not null)then
                    items_dil_red_recons_array_w(1).qt_dose_w           := to_number(get_parameter_value(parameters_w, 'QT_DOSE_RED'));
                end if;

			end if;
			
			cd_material_recons_w := to_number(get_parameter_value_additional(parameters_w, 'CD_MAT_RECONS'));
			
			if(cd_material_recons_w is not null)then
				items_dil_red_recons_array_w(3).cd_material_w		    := cd_material_recons_w;
				items_dil_red_recons_array_w(3).cd_unidade_medida_w	    := get_dropdown_value(parameters_w, 'CD_UNID_MED_DOSE_RECONS');
                items_dil_red_recons_array_w(3).ie_agrupador_w		    := 9;
		    	items_dil_red_recons_array_w(3).qt_dose_w		    := 0;
                
                if(get_parameter_value(parameters_w, 'QT_DOSE_RECONS') is not null)then
                    items_dil_red_recons_array_w(1).qt_dose_w           := to_number(get_parameter_value(parameters_w, 'QT_DOSE_RECONS'));
                end if;
		    	
			end if;


		    	for item_dil_red_recons_array_w IN 1..items_dil_red_recons_array_w.Count
			loop  
			    if(items_dil_red_recons_array_w(item_dil_red_recons_array_w).cd_material_w is not null) then
				elsevier_import_red_dil_recons( cd_protocolo_p,
						nr_seq_protocolo_p,
						nr_seq_material_w,
						items_dil_red_recons_array_w(item_dil_red_recons_array_w).ie_agrupador_w,
						nm_usuario_p,
						items_dil_red_recons_array_w(item_dil_red_recons_array_w).cd_material_w,
						items_dil_red_recons_array_w(item_dil_red_recons_array_w).cd_unidade_medida_w,
						items_dil_red_recons_array_w(item_dil_red_recons_array_w).qt_dose_w);
			    end if;
		       end loop;     

		elsif (order_type_w = 'Material') then -- Materials
			select	obter_seq_mat_prot_medic_mat(cd_protocolo_p, nr_seq_protocolo_p),
				obter_agrup_prot_medic_mat(cd_protocolo_p, nr_seq_protocolo_p, 0)
			into	nr_seq_material_w,
				nr_agrupamento_w
			from	dual;

			insert into protocolo_medic_material (
				cd_protocolo,
				nr_sequencia,
				nr_seq_interno,
				nr_seq_material,
				cd_material,
				ie_agrupador,
				cd_unidade_medida,
				qt_dose_peso,
				qt_dose,
				ie_multiplicar_dose,
				ie_urgencia,
				cd_intervalo,
				ds_recomendacao,
				ds_justificativa,
				nr_agrupamento,
				ie_aplic_bolus,
				ie_aplic_lenta,
				ie_bomba_infusao,
				dt_atualizacao,
				nm_usuario,
				ie_selecionado
			) values (
				cd_protocolo_p,
				nr_seq_protocolo_p,
				nr_seq_iterno_w,
				nr_seq_material_w,
				cd_material_w,
				2,
				cd_unidade_medida_w,
				qt_dose_peso_w,
				qt_dose_w,
				ie_multiplicar_dose_w,
				ie_urgencia_w,
				cd_intervalo_w,
				ds_recomendacao_mat_w,
				ds_justificativa_w,
				nr_agrupamento_w,
				'N',
				'N',
				'N',
				sysdate,
				nm_usuario_p,
				ie_selecionado_w
			);
		elsif (order_type_w = 'Nutricao_Enteral') then -- Enteral Diet
			ie_continuo_enteral_w	:= get_dropdown_value(parameters_w, 'IE_CONTINUO');
			qt_vel_infusao_w	:= to_number(get_parameter_value(parameters_w, 'QT_VEL_INFUSAO'));

			select	obter_seq_mat_prot_medic_mat(cd_protocolo_p, nr_seq_protocolo_p),
				obter_agrup_prot_medic_mat(cd_protocolo_p, nr_seq_protocolo_p, 8)
			into	nr_seq_material_w,
				nr_agrupamento_w
			from	dual;

			insert into protocolo_medic_material (
				cd_protocolo,
				nr_sequencia,
				nr_seq_interno,
				nr_seq_material,
				nr_agrupamento,
				cd_material,
				ie_agrupador,
				cd_intervalo,
				cd_unidade_medida,
				ie_continuo,
				qt_dose,
				qt_vel_infusao,
				ie_multiplicar_dose,
				ie_bomba_infusao,
				ie_duracao,
				ie_aplic_bolus,
				ie_aplic_lenta,
				dt_atualizacao,
				nm_usuario,
				ie_selecionado,
				ie_urgencia
			) values (
				cd_protocolo_p,
				nr_seq_protocolo_p,
				nr_seq_iterno_w,
				nr_seq_material_w,
				nr_agrupamento_w,
				cd_material_w,
				8,
				cd_intervalo_w,
				cd_unidade_medida_w,
				ie_continuo_enteral_w,
				qt_dose_w,
				qt_vel_infusao_w,
				ie_multiplicar_dose_w,
				ie_bomba_infusao_w,
				ie_duracao_material_w,
				'N',
				'N',
				sysdate,
				nm_usuario_p,
				ie_selecionado_w,
				ie_urgencia_w
			);
		elsif (order_type_w = 'Nutricao_Suplementar') then -- Supplements
			select	obter_seq_mat_prot_medic_mat(cd_protocolo_p, nr_seq_protocolo_p),
				obter_agrup_prot_medic_mat(cd_protocolo_p, nr_seq_protocolo_p, 12)
			into	nr_seq_material_w,
				nr_agrupamento_w
			from	dual;

			insert into protocolo_medic_material (
				cd_protocolo,
				nr_sequencia,
				nr_seq_interno,
				nr_seq_material,
				nr_agrupamento,
				cd_material,
				ie_agrupador,
				ie_via_aplicacao,
				cd_unidade_medida,
				qt_dose,
				qt_dose_peso,
				qt_dias_util,
				ie_se_necessario,
				ie_acm,
				ie_urgencia,
				ie_multiplicar_dose,
				cd_intervalo,
				ds_recomendacao,
				ie_duracao,
				ie_aplic_bolus,
				ie_aplic_lenta,
				ie_bomba_infusao,
				dt_atualizacao,
				nm_usuario,
				ie_selecionado
			) values (
				cd_protocolo_p,
				nr_seq_protocolo_p,
				nr_seq_iterno_w,
				nr_seq_material_w,
				nr_agrupamento_w,
				cd_material_w,
				12,
				ie_via_aplicacao_w,
				cd_unidade_medida_w,
				qt_dose_w,
				qt_dose_peso_w,
				qt_dias_util_w,
				ie_se_necessario_w,
				ie_acm_w,
				ie_urgencia_w,
				ie_multiplicar_dose_w,
				cd_intervalo_w,
				ds_recomendacao_mat_w,
				ie_duracao_material_w,
				'N',
				'N',
				'N',
				sysdate,
				nm_usuario_p,
				ie_selecionado_w
			);
		end if;
	elsif (ie_permite_import_sol_medic_w = 'S' and ie_controle_tempo_w = 'S') then -- Solutions
		cd_material_w			:= to_number(order_p.get('externalCode').get_string());
		ie_bomba_infusao_w		:= get_dropdown_value(parameters_w, 'IE_BOMBA_INFUSAO');
		ie_esquema_alternado_w		:= get_boolean_value(parameters_w, 'IE_ESQUEMA_ALTERNADO');
		ie_calc_aut_w			:= get_boolean_value(parameters_w, 'IE_CALC_AUT');
		ie_acm_w			:= get_boolean_value(parameters_w, 'IE_ACM');
		nr_etapas_w			:= to_number(get_parameter_value(parameters_w, 'NR_ETAPAS'));
		qt_hora_fase_w			:= converter_hora_para_decimal(get_parameter_value(parameters_w, 'QT_HORA_FASE'));
		qt_tempo_aplicacao_w		:= to_number(get_parameter_value(parameters_w, 'QT_TEMPO_APLICACAO'));
		ie_se_necessario_w		:= get_boolean_value(parameters_w, 'IE_SE_NECESSARIO');
		ie_urgencia_w			:= get_boolean_value(parameters_w, 'IE_URGENCIA');
		qt_solucao_total_w		:= to_number(get_parameter_value(parameters_w, 'QT_SOLUCAO_TOTAL'));
		qt_dosagem_w			:= to_number(get_parameter_value(parameters_w, 'QT_DOSAGEM'));
		ie_tipo_dosagem_w		:= get_dropdown_value(parameters_w, 'IE_TIPO_DOSAGEM');
		ie_aberta_w			:= get_boolean_value(parameters_w, 'IE_ABERTA');
		ie_solucao_pca_w		:= get_boolean_value(parameters_w, 'IE_SOLUCAO_PCA');
		ds_solucao_w			:= get_parameter_value(parameters_w, 'DS_SOLUCAO');
		ds_orientacao_w			:= get_parameter_value(parameters_w, 'DS_ORIENTACAO');
		ie_tipo_sol_w			:= get_dropdown_value(parameters_w, 'IE_TIPO_SOL');
		ie_via_aplicacao_w		:= get_dropdown_value(parameters_w, 'IE_VIA_APLICACAO');
		cd_intervalo_w			:= get_dropdown_value(parameters_w, 'CD_INTERVALO');
		ie_ref_calculo_w		:= get_dropdown_value(parameters_w, 'IE_REF_CALCULO');
		ie_tipo_analgesia_w		:= get_dropdown_value(parameters_w, 'IE_TIPO_ANALGESIA');
		ie_pca_modo_prog_w		:= get_dropdown_value(parameters_w, 'IE_PCA_MODO_PROG');
		qt_vol_infusao_pca_w		:= to_number(get_parameter_value(parameters_w, 'QT_VOL_INFUSAO_PCA'));
		ie_um_fluxo_pca_w		:= get_dropdown_value(parameters_w, 'IE_UM_FLUXO_PCA');
		qt_bolus_pca_w			:= to_number(get_parameter_value(parameters_w, 'QT_BOLUS_PCA'));
		ie_um_bolus_pca_w		:= get_dropdown_value(parameters_w, 'IE_UM_BOLUS_PCA');
		qt_intervalo_bloqueio_w		:= to_number(get_parameter_value(parameters_w, 'QT_INTERVALO_BLOQUEIO'));
		qt_dose_inicial_pca_w		:= to_number(get_parameter_value(parameters_w, 'QT_DOSE_INICIAL_PCA'));
		ie_um_dose_inicio_pca_w		:= get_dropdown_value(parameters_w, 'IE_UM_DOSE_INICIO_PCA');
		qt_limite_quatro_hora_w		:= to_number(get_parameter_value(parameters_w, 'QT_LIMITE_QUATRO_HORA'));
		ie_um_limite_pca_w		:= get_dropdown_value(parameters_w, 'IE_UM_LIMITE_PCA');
		qt_limite_uma_hora_w		:= to_number(get_parameter_value(parameters_w, 'QT_LIMITE_UMA_HORA'));
		ie_um_limite_hora_pca_w		:= get_dropdown_value(parameters_w, 'IE_UM_LIMITE_HORA_PCA');
		qt_dose_ataque_w		:= to_number(get_parameter_value(parameters_w, 'QT_DOSE_ATAQUE'));
		cd_setor_atendimento_w		:= to_number(get_dropdown_value(parameters_w, 'CD_SETOR_ATENDIMENTO'));
		ie_pre_medicacao_w		:= get_dropdown_value(parameters_w, 'IE_PRE_MEDICACAO');
		ie_selecionar_intervalo_w	:= get_boolean_value(parameters_w, 'IE_SELECIONAR_INTERVALO');
		ie_sol_especial_w		:= get_boolean_value(parameters_w, 'IE_SOL_ESPECIAL');
		ie_questionar_vel_inf_w		:= get_boolean_value(parameters_w, 'IE_QUESTIONAR_VEL_INF');
		ie_questionar_orient_w		:= get_boolean_value(parameters_w, 'IE_QUESTIONAR_ORIENT');
		ie_altera_dose_comp_w		:= get_boolean_value(parameters_w, 'IE_ALTERA_DOSE_COMP');
		ie_dose_terap_padrao_w		:= get_boolean_value(parameters_w, 'IE_DOSE_TERAP_PADRAO');
		ie_duracao_solucao_w		:= get_dropdown_value(parameters_w, 'IE_DURACAO');

		select	(nvl(max(nr_seq_solucao), 0) + 1) nr_seq_solucao,
			(nvl(max(nr_agrupamento), 0) + 1) nr_agrupamento
		into	nr_seq_solucao_w,
			nr_agrupamento_solucao_w
		from	protocolo_medic_solucao
		where	cd_protocolo = cd_protocolo_p
			and nr_sequencia = nr_seq_protocolo_p;

		-- Add the solution
		insert into protocolo_medic_solucao (
			cd_protocolo,
			nr_sequencia,
			nr_agrupamento,
			nr_seq_solucao,
			ie_bomba_infusao,
			ie_esquema_alternado,
			ie_calc_aut,
			ie_acm,
			nr_etapas,
			qt_hora_fase,
			qt_tempo_aplicacao,
			ie_se_necessario,
			ie_urgencia,
			qt_solucao_total,
			qt_dosagem,
			ie_tipo_dosagem,
			ie_aberta,
			ie_solucao_pca,
			ds_solucao,
			ds_orientacao,
			ie_tipo_sol,
			ie_via_aplicacao,
			cd_intervalo,
			ie_ref_calculo,
			ie_tipo_analgesia,
			ie_pca_modo_prog,
			qt_vol_infusao_pca,
			ie_um_fluxo_pca,
			qt_bolus_pca,
			ie_um_bolus_pca,
			qt_intervalo_bloqueio,
			qt_dose_inicial_pca,
			ie_um_dose_inicio_pca,
			qt_limite_quatro_hora,
			ie_um_limite_pca,
			qt_limite_uma_hora,
			ie_um_limite_hora_pca,
			qt_dose_ataque,
			cd_setor_atendimento,
			ie_pre_medicacao,
			ie_selecionar_intervalo,
			ie_sol_especial,
			ie_questionar_vel_inf,
			ie_questionar_orient,
			ie_altera_dose_comp,
			ie_dose_terap_padrao,
			ie_duracao,
			dt_atualizacao,
			nm_usuario,
			ie_selecionado
		) values (
			cd_protocolo_p,
			nr_seq_protocolo_p,
			nr_agrupamento_solucao_w,
			nr_seq_solucao_w,
			ie_bomba_infusao_w,
			ie_esquema_alternado_w,
			ie_calc_aut_w,
			ie_acm_w,
			nr_etapas_w,
			qt_hora_fase_w,
			qt_tempo_aplicacao_w,
			ie_se_necessario_w,
			ie_urgencia_w,
			qt_solucao_total_w,
			qt_dosagem_w,
			ie_tipo_dosagem_w,
			ie_aberta_w,
			ie_solucao_pca_w,
			ds_solucao_w,
			ds_orientacao_w,
			ie_tipo_sol_w,
			ie_via_aplicacao_w,
			cd_intervalo_w,
			ie_ref_calculo_w,
			ie_tipo_analgesia_w,
			ie_pca_modo_prog_w,
			qt_vol_infusao_pca_w,
			ie_um_fluxo_pca_w,
			qt_bolus_pca_w,
			ie_um_bolus_pca_w,
			qt_intervalo_bloqueio_w,
			qt_dose_inicial_pca_w,
			ie_um_dose_inicio_pca_w,
			qt_limite_quatro_hora_w,
			ie_um_limite_pca_w,
			qt_limite_uma_hora_w,
			ie_um_limite_hora_pca_w,
			qt_dose_ataque_w,
			cd_setor_atendimento_w,
			ie_pre_medicacao_w,
			ie_selecionar_intervalo_w,
			ie_sol_especial_w,
			ie_questionar_vel_inf_w,
			ie_questionar_orient_w,
			ie_altera_dose_comp_w,
			ie_dose_terap_padrao_w,
			ie_duracao_solucao_w,
			sysdate,
			nm_usuario_p,
			ie_selecionado_w
		);

		cd_unidade_medida_w	:= get_dropdown_value(parameters_w, 'CD_UNIDADE_MEDIDA');
		qt_dose_peso_w		:= to_number(get_parameter_value(parameters_w, 'QT_DOSE_PESO'));
		qt_dose_w		:= to_number(get_parameter_value(parameters_w, 'QT_DOSE'));
		qt_solucao_w		:= to_number(get_parameter_value(parameters_w, 'QT_SOLUCAO'));
		ie_diluente_w		:= get_boolean_value(parameters_w, 'IE_DILUENTE');
		ie_multiplicar_dose_w	:= get_boolean_value(parameters_w, 'IE_MULTIPLICAR_DOSE');
		qt_dispensar_acm_w	:= to_number(get_parameter_value(parameters_w, 'QT_DISPENSAR_ACM'));
		ds_recomendacao_mat_w	:= get_parameter_value(parameters_w, 'DS_RECOMENDACAO');
		ds_justificativa_w	:= get_parameter_value(parameters_w, 'DS_JUSTIFICATIVA');
		ie_aplica_reducao_w	:= get_boolean_value(parameters_w, 'IE_APLICA_REDUCAO');

		select	protocolo_medic_material_seq.nextval,
			obter_seq_mat_prot_medic_mat(cd_protocolo_p, nr_seq_protocolo_p) nr_seq_material,
			obter_agrup_prot_medic_mat(cd_protocolo_p, nr_seq_protocolo_p, 0) nr_agrupamento
		into	nr_seq_iterno_w,
			nr_seq_material_w,
			nr_agrupamento_w
		from	dual;

		-- Add the material as the solution component
		insert into protocolo_medic_material (
			cd_protocolo,
			nr_sequencia,
			nr_seq_interno,
			nr_seq_solucao,
			nr_agrupamento,
			nr_seq_material,
			cd_material,
			cd_unidade_medida,
			qt_dose_peso,
			qt_dose,
			qt_solucao,
			ie_diluente,
			ie_multiplicar_dose,
			qt_dispensar_acm,
			ds_recomendacao,
			ds_justificativa,
			ie_aplica_reducao,
			ie_agrupador,
			ie_aplic_bolus,
			ie_aplic_lenta,
			ie_bomba_infusao,
			ie_urgencia,
			dt_atualizacao,
			nm_usuario,
			ie_selecionado
		) values (
			cd_protocolo_p,
			nr_seq_protocolo_p,
			nr_seq_iterno_w,
			nr_seq_solucao_w,
			nr_agrupamento_w,
			nr_seq_material_w,
			cd_material_w,
			cd_unidade_medida_w,
			qt_dose_peso_w,
			qt_dose_w,
			qt_solucao_w,
			ie_diluente_w,
			ie_multiplicar_dose_w,
			qt_dispensar_acm_w,
			ds_recomendacao_mat_w,
			ds_justificativa_w,
			ie_aplica_reducao_w,
			4,
			'N',
			'N',
			'N',
			'N',
			sysdate,
			nm_usuario_p,
			ie_selecionado_w
		);
	elsif (order_type_w = 'Gasoterapia') then -- Gas Therapy
		nr_seq_gas_w		:= to_number(order_p.get('externalCode').get_string());
		ie_respiracao_w		:= get_dropdown_value(parameters_w, 'IE_RESPIRACAO');
		ie_disp_resp_esp_w	:= get_dropdown_value(parameters_w, 'IE_DISP_RESP_ESP');
		cd_modalidade_vent_w	:= get_dropdown_value(parameters_w, 'CD_MODALIDADE_VENT');
		ie_modo_adm_w		:= get_dropdown_value(parameters_w, 'IE_MODO_ADM');
		ie_inicio_w		:= get_dropdown_value(parameters_w, 'IE_INICIO');
		ie_unidade_medida_w	:= get_dropdown_value(parameters_w, 'IE_UNIDADE_MEDIDA');
		qt_gasoterapia_w	:= to_number(get_parameter_value(parameters_w, 'QT_GASOTERAPIA'));
		qt_freq_vent_w		:= to_number(get_parameter_value(parameters_w, 'QT_FREQ_VENT'));
		ds_observacao_w		:= get_parameter_value(parameters_w, 'DS_OBSERVACAO');
		cd_intervalo_w		:= get_dropdown_value(parameters_w, 'CD_INTERVALO');
		nm_rotina_w			:= '';


        if(nr_seq_gas_w is not null or nr_seq_gas_w <> '') then  
            select  ds_gas
            into    ds_gas_w 
            from    gas
            where nr_sequencia = nr_seq_gas_w;
		end if;

		if (ds_gas_w is not null) then
			begin
				if (ie_respiracao_w is not null) then
					begin
						if (ie_respiracao_w = 'ESPONT') then
							begin
								nm_rotina_w := substr(ds_gas_w || ' + '  || obter_valor_dominio(1612, ie_disp_resp_esp_w),1,254);
							end;
						else
							begin

								nm_rotina_w := substr(obter_valor_dominio(1299, ie_respiracao_w),1,80);

								if (cd_modalidade_vent_w is not null) then
									begin
										nm_rotina_w := nm_rotina_w || ' + ' || substr(obter_desc_mod_ventilatoria(cd_modalidade_vent_w),1,80);
									end;
								end if;

								nm_rotina_w := nm_rotina_w || ' + ' || substr(ds_gas_w, 1, 80);
							end;
						end if;

						nm_rotina_w :=  substr(nm_rotina_w, 1, 254);
					end;
				else
					begin
						nm_rotina_w := substr(ds_gas_w || ' + '  || obter_valor_dominio(1612, ie_disp_resp_esp_w),1,254);
					end;
				end if;
			end;
		end if;

		select	protocolo_medic_gas_seq.nextval
		into	nr_sequencia_gas_w
		from	dual;

		insert into protocolo_medic_gas (
			nr_sequencia,
			cd_protocolo,
			nr_seq_protocolo,
			nr_seq_gas,
			ie_respiracao,
			ie_disp_resp_esp,
			cd_modalidade_vent,
			ie_modo_adm,
			ie_inicio,
			ie_unidade_medida,
			qt_gasoterapia,
			qt_freq_vent,
			ds_observacao,
			cd_intervalo,
			dt_atualizacao,
			nm_usuario,
			ie_selecionado,
			ie_rotina,
			nm_rotina
		) values (
			nr_sequencia_gas_w,
			cd_protocolo_p,
			nr_seq_protocolo_p,
			nr_seq_gas_w,
			ie_respiracao_w,
			ie_disp_resp_esp_w,
			cd_modalidade_vent_w,
			ie_modo_adm_w,
			ie_inicio_w,
			ie_unidade_medida_w,
			qt_gasoterapia_w,
			qt_freq_vent_w,
			ds_observacao_w,
			cd_intervalo_w,
			sysdate,
			nm_usuario_p,
			ie_selecionado_w,
			'N',
			nm_rotina_w
		);
	elsif (order_type_w = 'Dialise_Hemodialise') then -- Hemodialysis
		ie_tipo_hemodialise_w		:= order_p.get('externalCode').get_string();
		ie_categoria_w			:= get_dropdown_value(parameters_w, 'IE_CATEGORIA');
		qt_fluxo_sangue_w		:= to_number(get_parameter_value(parameters_w, 'QT_FLUXO_SANGUE'));
		qt_sessao_sem_w			:= to_number(get_parameter_value(parameters_w, 'QT_SESSAO_SEM'));
		qt_hora_sessao_w		:= to_number(get_parameter_value(parameters_w, 'QT_HORA_SESSAO'));
		qt_min_sessao_w			:= to_number(get_parameter_value(parameters_w, 'QT_MIN_SESSAO'));
		nr_seq_mod_dialisador_w		:= to_number(get_dropdown_value(parameters_w, 'NR_SEQ_MOD_DIALISADOR'));
		ie_continuo_w			:= get_boolean_value(parameters_w, 'IE_CONTINUO');
		ie_ultrafiltracao_w		:= get_dropdown_value(parameters_w, 'IE_ULTRAFILTRACAO');
		qt_ultrafiltracao_w		:= to_number(get_parameter_value(parameters_w, 'QT_ULTRAFILTRACAO'));
		nr_seq_diametro_agulha_w	:= to_number(get_dropdown_value(parameters_w, 'NR_SEQ_DIAMETRO_AGULHA'));
		nr_seq_tipo_agulha_w		:= to_number(get_dropdown_value(parameters_w, 'NR_SEQ_TIPO_AGULHA'));
		nr_seq_tipo_agulha_art_w	:= to_number(get_dropdown_value(parameters_w, 'NR_SEQ_TIPO_AGULHA_ART'));
		nr_seq_ultra_w			:= to_number(get_dropdown_value(parameters_w, 'NR_SEQ_ULTRA'));
		nr_seq_perfil_sodio_w		:= to_number(get_dropdown_value(parameters_w, 'NR_SEQ_PERFIL_SODIO'));
		qt_zero_um_w			:= to_number(get_parameter_value(parameters_w, 'QT_ZERO_UM'));
		qt_um_dois_w			:= to_number(get_parameter_value(parameters_w, 'QT_UM_DOIS'));
		qt_dois_tres_w			:= to_number(get_parameter_value(parameters_w, 'QT_DOIS_TRES'));
		qt_tres_quatro_w		:= to_number(get_parameter_value(parameters_w, 'QT_TRES_QUATRO'));
		ie_ligar_prime_w		:= get_boolean_value(parameters_w, 'IE_LIGAR_PRIME');
		qt_peso_seco_w			:= to_number(get_parameter_value(parameters_w, 'QT_PESO_SECO'));
		ds_observacao_w			:= get_dropdown_value(parameters_w, 'DS_OBSERVACAO');

		select	protocolo_hd_prescricao_seq.nextval
		into	nr_seq_hd_w
		from	dual;

		insert into protocolo_hd_prescricao (
			nr_sequencia,
			cd_protocolo,
			nr_seq_protocolo,
			ie_tipo_dialise,
			ie_tipo_hemodialise,
			ie_categoria,
			qt_fluxo_sangue,
			qt_sessao_sem,
			qt_hora_sessao,
			qt_min_sessao,
			nr_seq_mod_dialisador,
			ie_continuo,
			ie_ultrafiltracao,
			qt_ultrafiltracao,
			nr_seq_diametro_agulha,
			nr_seq_tipo_agulha,
			nr_seq_tipo_agulha_art,
			nr_seq_ultra,
			nr_seq_perfil_sodio,
			qt_zero_um,
			qt_um_dois,
			qt_dois_tres,
			qt_tres_quatro,
			ie_ligar_prime,
			qt_peso_seco,
			ds_observacao,
			dt_atualizacao,
			nm_usuario,
			ie_selecionado
		) values (
			nr_seq_hd_w,
			cd_protocolo_p,
			nr_seq_protocolo_p,
			'H',
			ie_tipo_hemodialise_w,
			ie_categoria_w,
			qt_fluxo_sangue_w,
			qt_sessao_sem_w,
			qt_hora_sessao_w,
			qt_min_sessao_w,
			nr_seq_mod_dialisador_w,
			ie_continuo_w,
			ie_ultrafiltracao_w,
			qt_ultrafiltracao_w,
			nr_seq_diametro_agulha_w,
			nr_seq_tipo_agulha_w,
			nr_seq_tipo_agulha_art_w,
			nr_seq_ultra_w,
			nr_seq_perfil_sodio_w,
			qt_zero_um_w,
			qt_um_dois_w,
			qt_dois_tres_w,
			qt_tres_quatro_w,
			ie_ligar_prime_w,
			qt_peso_seco_w,
			ds_observacao_w,
			sysdate,
			nm_usuario_p,
			ie_selecionado_w
		);
	elsif (order_type_w = 'Dialise_Peritoneal') then -- Peritoneal
		ie_tipo_peritoneal_w	:= order_p.get('externalCode').get_string();
		qt_sessao_sem_w		:= to_number(get_parameter_value(parameters_w, 'QT_SESSAO_SEM'));
		qt_hora_sessao_w	:= to_number(get_parameter_value(parameters_w, 'QT_HORA_SESSAO'));
		qt_min_sessao_w		:= to_number(get_parameter_value(parameters_w, 'QT_MIN_SESSAO'));

		select	protocolo_hd_prescricao_seq.nextval
		into	nr_seq_hd_w
		from	dual;

		insert into protocolo_hd_prescricao (
			nr_sequencia,
			cd_protocolo,
			nr_seq_protocolo,
			ie_tipo_dialise,
			ie_tipo_peritoneal,
			qt_sessao_sem,
			qt_hora_sessao,
			qt_min_sessao,
			dt_atualizacao,
			nm_usuario,
			ie_selecionado
		) values (
			nr_seq_hd_w,
			cd_protocolo_p,
			nr_seq_protocolo_p,
			'P',
			ie_tipo_peritoneal_w,
			nvl(qt_sessao_sem_w, 0),
			nvl(qt_hora_sessao_w, 0),
			nvl(qt_min_sessao_w, 0),
			sysdate,
			nm_usuario_p,
			ie_selecionado_w
		);
	elsif (order_type_w = 'Recomendacao') then -- Recommendations
		select	nvl(max(nr_seq_rec), 0) + 1
		into	nr_seq_rec_w
		from	protocolo_medic_rec
		where	cd_protocolo = cd_protocolo_p
			and nr_sequencia = nr_seq_protocolo_p;

		cd_recomendacao_w	:= to_number(order_p.get('externalCode').get_string());
		ds_recomendacao_w	:= get_parameter_value(parameters_w, 'DS_RECOMENDACAO');
		cd_intervalo_w		:= get_dropdown_value(parameters_w, 'CD_INTERVALO');
		ie_urgencia_w		:= get_boolean_value(parameters_w, 'IE_URGENCIA');
		ie_se_necessario_w	:= get_boolean_value(parameters_w, 'IE_SE_NECESSARIO');
		ie_acm_w		:= get_boolean_value(parameters_w, 'IE_ACM');
		cd_kit_w		:= to_number(get_dropdown_value(parameters_w, 'CD_KIT'));
		nr_seq_topografia_w	:= to_number(get_dropdown_value(parameters_w, 'NR_SEQ_TOPOGRAFIA'));

		select	nr_seq_classif
		into	nr_seq_classif_w
		from	tipo_recomendacao
		where	cd_tipo_recomendacao = cd_recomendacao_w;

		insert into protocolo_medic_rec (
			cd_protocolo,
			nr_sequencia, -- This is the protocol sequence
			nr_seq_rec,
			cd_recomendacao,
			ds_recomendacao,
			cd_intervalo,
			ie_urgencia,
			ie_se_necessario,
			ie_acm,
			cd_kit,
			nr_seq_topografia,
			nr_seq_classif,
			dt_atualizacao,
			nm_usuario,
			ie_selecionado
		) values (
			cd_protocolo_p,
			nr_seq_protocolo_p,
			nr_seq_rec_w,
			cd_recomendacao_w,
			ds_recomendacao_w,
			cd_intervalo_w,
			ie_urgencia_w,
			ie_se_necessario_w,
			ie_acm_w,
			cd_kit_w,
			nr_seq_topografia_w,
			nr_seq_classif_w,
			sysdate,
			nm_usuario_p,
			ie_selecionado_w
		);
	elsif (order_type_w in('Procedimento_Exame', 'Procedimento_Patologia')) then -- Procedures
		select	nvl(max(nr_seq_proc), 0) + 1
		into	nr_seq_proc_w
		from	protocolo_medic_proc
		where	cd_protocolo = cd_protocolo_p
			and nr_sequencia = nr_seq_protocolo_p;

		cd_setor_atendimento_w	:= to_number(get_dropdown_value(parameters_w, 'CD_SETOR_ATENDIMENTO'));
		ds_dado_clinico_w	:= get_parameter_value(parameters_w, 'DS_DADO_CLINICO');
		ds_observacao_proc_w	:= get_parameter_value(parameters_w, 'DS_OBSERVACAO');

		if (order_type_w = 'Procedimento_Exame') then
			cd_procedimento_w		:= to_number(order_p.get('externalCode').get_string());
			ds_prescricao_w			:= get_parameter_value(parameters_w, 'DS_PRESCRICAO');
			qt_procedimento_w		:= to_number(get_parameter_value(parameters_w, 'QT_PROCEDIMENTO'));
			ie_multiplicar_quant_w		:= get_boolean_value(parameters_w, 'IE_MULTIPLICAR_QUANT');
			ie_objetivo_onco_w		:= get_dropdown_value(parameters_w, 'IE_OBJETIVO_ONCO');
			nr_seq_proced_exame_w		:= to_number(get_dropdown_value(parameters_w, 'NR_SEQ_REG_PRIOR_PROCED_EXAME'));
			cd_intervalo_w			:= get_dropdown_value(parameters_w, 'CD_INTERVALO');
			qt_hora_intervalo_w		:= to_number(get_parameter_value(parameters_w, 'QT_HORA_INTERVALO'));
			qt_min_intervalo_w		:= to_number(get_parameter_value(parameters_w, 'QT_MIN_INTERVALO'));
			ie_lado_w			:= get_dropdown_value(parameters_w, 'IE_LADO');
			ie_se_necessario_w		:= get_boolean_value(parameters_w, 'IE_SE_NECESSARIO');
			ie_acm_w			:= get_boolean_value(parameters_w, 'IE_ACM');
			ie_urgencia_w			:= get_boolean_value(parameters_w, 'IE_URGENCIA');
			ie_executar_leito_w		:= get_boolean_value(parameters_w, 'IE_EXECUTAR_LEITO');
			nr_seq_prot_glic_w		:= to_number(get_dropdown_value(parameters_w, 'NR_SEQ_PROT_GLIC'));
			nr_seq_contraste_w		:= to_number(get_dropdown_value(parameters_w, 'NR_SEQ_CONTRASTE'));
			ie_horario_w			:= get_dropdown_value(parameters_w, 'IE_HORARIO');
			cd_kit_material_w		:= to_number(get_dropdown_value(parameters_w, 'CD_KIT_MATERIAL'));
			nr_seq_exame_w			:= to_number(get_dropdown_value(parameters_w, 'NR_SEQ_EXAME'));
			ds_material_especial_w		:= get_parameter_value(parameters_w, 'DS_MATERIAL_ESPECIAL');
			ds_exame_fis_achado_cirur_w	:= get_parameter_value(parameters_w, 'DS_EXAME_FIS_ACHADO_CIRUR');
			ds_resumo_clinico_w		:= get_parameter_value(parameters_w, 'DS_RESUMO_CLINICO');
			ds_justificativa_proc_w		:= get_parameter_value(parameters_w, 'DS_JUSTIFICATIVA');
			cd_setor_coleta_w		:= to_number(get_dropdown_value(parameters_w, 'CD_SETOR_COLETA'));
			cd_setor_entrega_w		:= to_number(get_dropdown_value(parameters_w, 'CD_SETOR_ENTREGA'));
			ie_classif_agenda_w		:= get_dropdown_value(parameters_w, 'IE_CLASSIF_AGENDA');
			cd_especialidade_w		:= to_number(get_dropdown_value(parameters_w, 'CD_ESPECIALIDADE'));
			ie_duracao_w			:= get_dropdown_value(parameters_w, 'IE_DURACAO');

			insert into protocolo_medic_proc (
				cd_protocolo,
				nr_sequencia,
				nr_seq_proc,
				nr_seq_proc_interno,
				ds_prescricao,
				qt_procedimento,
				ie_multiplicar_quant,
				ie_objetivo_onco,
				nr_seq_reg_prior_proced_exame,
				cd_intervalo,
				qt_hora_intervalo,
				qt_min_intervalo,
				ie_lado,
				ie_acm,
				ie_se_necessario,
				ie_urgencia,
				ie_executar_leito,
				nr_seq_prot_glic,
				nr_seq_contraste,
				ie_horario,
				ds_dado_clinico,
				cd_kit_material,
				ds_observacao,
				cd_setor_atendimento,
				nr_seq_exame,
				ds_material_especial,
				ds_exame_fis_achado_cirur,
				ds_resumo_clinico,
				ds_justificativa,
				cd_setor_coleta,
				cd_setor_entrega,
				ie_classif_agenda,
				cd_especialidade,
				ie_duracao,
				dt_atualizacao,
				nm_usuario,
				ie_selecionado
			) values (
				cd_protocolo_p,
				nr_seq_protocolo_p,
				nr_seq_proc_w,
				cd_procedimento_w,
				ds_prescricao_w,
				qt_procedimento_w,
				ie_multiplicar_quant_w,
				ie_objetivo_onco_w,
				nr_seq_proced_exame_w,
				cd_intervalo_w,
				qt_hora_intervalo_w,
				qt_min_intervalo_w,
				ie_lado_w,
				ie_acm_w,
				ie_se_necessario_w,
				ie_urgencia_w,
				ie_executar_leito_w,
				nr_seq_prot_glic_w,
				nr_seq_contraste_w,
				ie_horario_w,
				ds_dado_clinico_w,
				cd_kit_material_w,
				ds_observacao_proc_w,
				cd_setor_atendimento_w,
				nr_seq_exame_w,
				ds_material_especial_w,
				ds_exame_fis_achado_cirur_w,
				ds_resumo_clinico_w,
				ds_justificativa_proc_w,
				cd_setor_coleta_w,
				cd_setor_entrega_w,
				ie_classif_agenda_w,
				cd_especialidade_w,
				ie_duracao_w,
				sysdate,
				nm_usuario_p,
				ie_selecionado_w
			);
		elsif (order_type_w = 'Procedimento_Patologia') then
			cd_procedimento_lcb_w	:= to_number(order_p.get('externalCode').get_string());

			nr_seq_proc_int_cirur_w	:= get_dropdown_value(parameters_w, 'NR_SEQ_PROC_INT_CIRUR');
			qt_peca_ap_w		:= to_number(get_parameter_value(parameters_w, 'QT_PECA_AP'));
			qt_frasco_env_w		:= to_number(get_parameter_value(parameters_w, 'QT_FRASCO_ENV'));
			nr_seq_amostra_princ_w	:= to_number(get_dropdown_value(parameters_w, 'NR_SEQ_AMOSTRA_PRINC'));
			ds_qualidade_peca_ap_w	:= get_parameter_value(parameters_w, 'DS_QUALIDADE_PECA_AP');
			ie_forma_exame_w	:= get_dropdown_value(parameters_w, 'IE_FORMA_EXAME');
			ds_diag_provavel_ap_w	:= get_parameter_value(parameters_w, 'DS_DIAG_PROVAVEL_AP');
			ds_exame_anterior_ap_w	:= get_parameter_value(parameters_w, 'DS_EXAME_ANTERIOR_AP');
			ds_localizacao_lesao_w	:= get_parameter_value(parameters_w, 'DS_LOCALIZACAO_LESAO');
			ds_tempo_doenca_w	:= get_parameter_value(parameters_w, 'DS_TEMPO_DOENCA');

			insert into protocolo_medic_proc (
				cd_protocolo,
				nr_sequencia,
				nr_seq_proc,
				cd_procedimento_lcb,
				nr_seq_proc_int_cirur,
				qt_peca_ap,
				qt_frasco_env,
				nr_seq_amostra_princ,
				ds_qualidade_peca_ap,
				ie_forma_exame,
				ds_diag_provavel_ap,
				ds_exame_anterior_ap,
				ds_localizacao_lesao,
				ds_tempo_doenca,
				cd_setor_atendimento,
				ds_dado_clinico,
				ds_observacao,
				dt_atualizacao,
				nm_usuario,
				ie_selecionado
			) values (
				cd_protocolo_p,
				nr_seq_protocolo_p,
				nr_seq_proc_w,
				cd_procedimento_lcb_w,
				nr_seq_proc_int_cirur_w,
				qt_peca_ap_w,
				qt_frasco_env_w,
				nr_seq_amostra_princ_w,
				ds_qualidade_peca_ap_w,
				ie_forma_exame_w,
				ds_diag_provavel_ap_w,
				ds_exame_anterior_ap_w,
				ds_localizacao_lesao_w,
				ds_tempo_doenca_w,
				cd_setor_atendimento_w,
				ds_dado_clinico_w,
				ds_observacao_proc_w,
				sysdate,
				nm_usuario_p,
				ie_selecionado_w
			);
		end if;
	elsif (order_type_w = 'Bolsa_Sangue') then -- Hemotherapy
		ie_tipo_paciente_w	:= get_dropdown_value(parameters_w, 'IE_TIPO_PACIENTE');
		ie_porte_cirurgico_w	:= get_dropdown_value(parameters_w, 'IE_PORTE_CIRURGICO');
		ie_tipo_w		:= to_number(get_dropdown_value(parameters_w, 'IE_TIPO'));

		select	prot_solic_bco_sangue_seq.nextval
		into	nr_seq_banco_sangue_w
		from	dual;

		insert into prot_solic_bco_sangue (
			cd_protocolo,
			nr_seq_protocolo,
			nr_sequencia,
			ie_tipo_paciente,
			ie_porte_cirurgico,
			ie_tipo,
			dt_atualizacao,
			nm_usuario,
			ie_selecionado
		) values (
			cd_protocolo_p,
			nr_seq_protocolo_p,
			nr_seq_banco_sangue_w,
			ie_tipo_paciente_w,
			ie_porte_cirurgico_w,
			ie_tipo_w,
			sysdate,
			nm_usuario_p,
			ie_selecionado_w
		);

		select	nvl(max(nr_seq_proc), 0) + 1
		into	nr_seq_proc_w
		from	protocolo_medic_proc
		where	cd_protocolo = cd_protocolo_p
			and nr_sequencia = nr_seq_protocolo_p;

		nr_seq_derivado_w		:= to_number(order_p.get('externalCode').get_string());
		qt_procedimento_w		:= to_number(get_parameter_value(parameters_w, 'QT_PROCEDIMENTO'));
		qt_vol_hemocomp_w		:= to_number(get_parameter_value(parameters_w, 'QT_VOL_HEMOCOMP'));
		cd_intervalo_w			:= get_dropdown_value(parameters_w, 'CD_INTERVALO');
		qt_veloc_inf_hemo_w		:= to_number(get_parameter_value(parameters_w, 'QT_VELOC_INF_HEMO'));
		cd_setor_atendimento_w		:= to_number(get_dropdown_value(parameters_w, 'CD_SETOR_ATENDIMENTO'));
		ie_util_hemocomponente_w	:= get_dropdown_value(parameters_w, 'IE_UTIL_HEMOCOMPONENTE');
		ds_observacao_proc_w		:= get_parameter_value(parameters_w, 'DS_OBSERVACAO');

		insert into protocolo_medic_proc (
			cd_protocolo,
			nr_sequencia,
			nr_seq_proc,
			nr_seq_solic_bs,
			nr_seq_derivado,
			qt_procedimento,
			qt_vol_hemocomp,
			cd_intervalo,
			qt_veloc_inf_hemo,
			cd_setor_atendimento,
			ie_util_hemocomponente,
			ds_observacao,
			ie_se_necessario,
			ie_acm,
			ie_urgencia,
			dt_atualizacao,
			nm_usuario,
			ie_selecionado
		) values (
			cd_protocolo_p,
			nr_seq_protocolo_p,
			nr_seq_proc_w,
			nr_seq_banco_sangue_w,
			nr_seq_derivado_w,
			qt_procedimento_w,
			qt_vol_hemocomp_w,
			cd_intervalo_w,
			qt_veloc_inf_hemo_w,
			cd_setor_atendimento_w,
			ie_util_hemocomponente_w,
			ds_observacao_proc_w,
			'N',
			'N',
			'N',
			sysdate,
			nm_usuario_p,
			ie_selecionado_w
		);
	elsif (order_type_w = 'Nutricao_Jejum') then -- Fasting
		select	nvl(max(nr_seq_jejum), 0) + 1
		into	nr_seq_jejum_w
		from	protocolo_medic_jejum
		where	cd_protocolo = cd_protocolo_p
			and nr_sequencia = nr_seq_protocolo_p;

		nr_seq_tipo_w		:= to_number(order_p.get('externalCode').get_string());
		nr_seq_objetivo_w	:= to_number(get_dropdown_value(parameters_w, 'NR_SEQ_OBJETIVO'));
		ie_inicio_jejum_w	:= get_dropdown_value(parameters_w, 'IE_INICIO');
		qt_hora_ant_w		:= to_number(get_parameter_value(parameters_w, 'QT_HORA_ANT'));
		qt_min_ant_w		:= to_number(get_parameter_value(parameters_w, 'QT_MIN_ANT'));
		qt_hora_depois_w	:= to_number(get_parameter_value(parameters_w, 'QT_HORA_DEPOIS'));
		qt_min_depois_w		:= to_number(get_parameter_value(parameters_w, 'QT_MIN_DEPOIS'));
		ds_observacao_jejum_w	:= get_parameter_value(parameters_w, 'DS_OBSERVACAO');
		ie_duracao_jejum_w	:= get_dropdown_value(parameters_w, 'IE_DURACAO');

		insert into protocolo_medic_jejum (
			cd_protocolo,
			nr_sequencia,
			nr_seq_jejum,
			nr_seq_tipo,
			nr_seq_objetivo,
			ie_inicio,
			qt_hora_ant,
			qt_min_ant,
			qt_hora_depois,
			qt_min_depois,
			ds_observacao,
			ie_duracao,
			ie_repete_copia,
			dt_atualizacao,
			nm_usuario,
			ie_selecionado
		) values (
			cd_protocolo_p,
			nr_seq_protocolo_p,
			nr_seq_jejum_w,
			nr_seq_tipo_w,
			nr_seq_objetivo_w,
			ie_inicio_jejum_w,
			qt_hora_ant_w,
			qt_min_ant_w,
			qt_hora_depois_w,
			qt_min_depois_w,
			ds_observacao_jejum_w,
			ie_duracao_jejum_w,
			'N',
			sysdate,
			nm_usuario_p,
			ie_selecionado_w
		);
	elsif (order_type_w = 'Nutricao_Oral') then -- Oral Diet
		select	nvl(max(nr_seq_dieta), 0) + 1
		into	nr_seq_dieta_w
		from	protocolo_medic_dieta
		where	cd_protocolo = cd_protocolo_p
			and nr_sequencia = nr_seq_protocolo_p;

		cd_dieta_w		:= to_number(order_p.get('externalCode').get_string());
		cd_intervalo_w		:= get_dropdown_value(parameters_w, 'CD_INTERVALO');
		ie_duracao_oral_w	:= get_dropdown_value(parameters_w, 'IE_DURACAO');
		ds_observacao_oral_w	:= get_parameter_value(parameters_w, 'DS_OBSERVACAO');

		insert into protocolo_medic_dieta (
			cd_protocolo,
			nr_sequencia,
			nr_seq_dieta,
			cd_dieta,
			cd_intervalo,
			ie_duracao,
			ds_observacao,
			dt_atualizacao,
			nm_usuario,
			ie_selecionado
		) values (
			cd_protocolo_p,
			nr_seq_protocolo_p,
			nr_seq_dieta_w,
			cd_dieta_w,
			cd_intervalo_w,
			ie_duracao_oral_w,
			ds_observacao_oral_w,
			sysdate,
			nm_usuario_p,
			ie_selecionado_w
		);
	elsif (order_type_w = 'Nutricao_Leites') then -- Milks
		select	protocolo_medic_leite_seq.nextval
		into	nr_seq_leite_w
		from	dual;

		cd_material_leite_w	:= to_number(order_p.get('externalCode').get_string());
		ie_se_necessario_w	:= get_boolean_value(parameters_w, 'IE_SE_NECESSARIO');
		cd_intervalo_w		:= get_dropdown_value(parameters_w, 'CD_INTERVALO');
		ie_via_aplicacao_w	:= get_dropdown_value(parameters_w, 'IE_VIA_APLICACAO');
		qt_volume_oral_w	:= to_number(get_parameter_value(parameters_w, 'QT_VOLUME_ORAL'));
		qt_volume_sonda_w	:= to_number(get_parameter_value(parameters_w, 'QT_VOLUME_SONDA'));
		nr_seq_disp_succao_w	:= get_dropdown_value(parameters_w, 'NR_SEQ_DISP_SUCCAO');

		insert into protocolo_medic_leite (
			cd_protocolo,
			nr_seq_protocolo,
			nr_sequencia,
			ie_se_necessario,
			cd_intervalo,
			ie_via_aplicacao,
			qt_volume_oral,
			qt_volume_sonda,
			nr_seq_disp_succao,
			dt_atualizacao,
			nm_usuario,
			ie_selecionado
		) values (
			cd_protocolo_p,
			nr_seq_protocolo_p,
			nr_seq_leite_w,
			ie_se_necessario_w,
			cd_intervalo_w,
			ie_via_aplicacao_w,
			qt_volume_oral_w,
			qt_volume_sonda_w,
			nr_seq_disp_succao_w,
			sysdate,
			nm_usuario_p,
			ie_selecionado_w
		);

		insert into protocolo_medic_produto (
			nr_seq_prot_leite,
			nr_sequencia,
			cd_material,
			dt_atualizacao,
			nm_usuario
		) values (
			nr_seq_leite_w,
			protocolo_medic_produto_seq.nextval,
			cd_material_leite_w,
			sysdate,
			nm_usuario_p
		);
	elsif (order_type_w = 'Nutricao_NPTAdulta') then -- Adult TPN
		nr_seq_fator_ativ_w	:= get_dropdown_value(parameters_w, 'NR_SEQ_FATOR_ATIV');
		nr_seq_fator_stress_w	:= get_dropdown_value(parameters_w, 'NR_SEQ_FATOR_STRESS');
		pr_proteina_w		:= to_number(get_parameter_value(parameters_w, 'PR_PROTEINA'));
		pr_lipidio_w		:= to_number(get_parameter_value(parameters_w, 'PR_LIPIDIO'));
		pr_carboidrato_w	:= to_number(get_parameter_value(parameters_w, 'PR_CARBOIDRATO'));
		pr_npt_w		:= to_number(get_parameter_value(parameters_w, 'PR_NPT'));
		qt_fase_npt_w		:= to_number(get_parameter_value(parameters_w, 'QT_FASE_NPT'));
		qt_gotejamento_npt_w	:= to_number(get_parameter_value(parameters_w, 'QT_GOTEJAMENTO_NPT'));
		ie_bomba_infusao_w	:= get_boolean_value(parameters_w, 'IE_BOMBA_INFUSAO');

		select	nvl(max(nr_seq_npt), 0) + 1
		into	nr_seq_npt_w
		from	protocolo_medic_npt
		where	cd_protocolo = cd_protocolo_p
			and nr_sequencia = nr_seq_protocolo_p;

		insert into protocolo_medic_npt (
			cd_protocolo,
			nr_sequencia,
			nr_seq_npt,
			nr_seq_fator_ativ,
			nr_seq_fator_stress,
			pr_proteina,
			pr_lipidio,
			pr_carboidrato,
			pr_npt,
			qt_fase_npt,
			qt_gotejamento_npt,
			ie_bomba_infusao,
			qt_grama_prot_kg_dia,
			qt_kcal_carboidrato,
			qt_kcal_kg,
			qt_kcal_lipidio,
			qt_kcal_prot,
			qt_kcal_total,
			dt_atualizacao,
			nm_usuario,
			ie_selecionado
		) values (
			cd_protocolo_p,
			nr_seq_protocolo_p,
			nr_seq_npt_w,
			nr_seq_fator_ativ_w,
			nr_seq_fator_stress_w,
			pr_proteina_w,
			pr_lipidio_w,
			pr_carboidrato_w,
			pr_npt_w,
			qt_fase_npt_w,
			qt_gotejamento_npt_w,
			ie_bomba_infusao_w,
			0,
			0,
			0,
			0,
			0,
			0,
			sysdate,
			nm_usuario_p,
			ie_selecionado_w
		);
	end if;

	select	protocolo_guia_inf_seq.nextval
	into	nr_seq_guia_inf_p
	from	dual;

	--itens - I - IE_TIPO
	insert into protocolo_guia_inf (
		nr_sequencia,
		nr_seq_protocolo,
		nr_seq_protocolo_medic,
		nr_seq_dieta,
		nr_seq_gas,
		nr_seq_hd,
		nr_seq_jejum,
		nr_seq_leite,
		nr_seq_material,
		nr_seq_npt,
		nr_seq_procedimento,
		nr_seq_recomendacao,
		nr_seq_sangue,
		nr_seq_solucao,
		ds_link,
		ie_situacao,
		dt_atualizacao,
		dt_atualizacao_nrec,
		nm_usuario,
		nm_usuario_nrec,
		ie_tipo
	) values (
		nr_seq_guia_inf_p,
		cd_protocolo_p,
		nr_seq_protocolo_p,
		nr_seq_dieta_w,
		nr_sequencia_gas_w,
		nr_seq_hd_w,
		nr_seq_jejum_w,
		nr_seq_leite_w,
		nr_seq_material_w,
		nr_seq_npt_w,
		nr_seq_proc_w,
		nr_seq_rec_w,
		nr_seq_banco_sangue_w,
		nr_seq_solucao_w,
		ds_link_w,
		'A',
		sysdate,
		sysdate,
		nm_usuario_p,
		nm_usuario_p,
		'I'
	);
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE elsevier_import_order ( cd_protocolo_p protocolo_medicacao.cd_protocolo%type, nr_seq_protocolo_p protocolo_medicacao.nr_sequencia%type, order_p philips_json, nm_usuario_p intpd_fila_transmissao.nm_usuario%type, nr_seq_guia_inf_p out protocolo_guia_inf.nr_sequencia%type, inconsistencies_warning_p out text ) is TYPE item_r IS RECORD( cd_material_w protocolo_medic_material.cd_material%type, cd_unidade_medida_w protocolo_medic_material.cd_unidade_medida%type, qt_dose_w protocolo_medic_material.qt_dose%type, ie_agrupador_w protocolo_medic_material.ie_agrupador%type) FROM PUBLIC;

