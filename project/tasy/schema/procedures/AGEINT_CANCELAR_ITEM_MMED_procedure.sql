-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ageint_cancelar_item_mmed ( nr_seq_agenda_int_p bigint, nr_seq_ageint_item_p bigint, nr_seq_ageint_item_adic_p bigint, nr_seq_agenda_exame_p bigint, ie_cancelar_adicionais_p text, nr_seq_motivo_canc_p text, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE


cd_agenda_w			bigint;
nr_seq_proc_interno_w		bigint;
nr_seq_proc_autor_w		bigint;
nr_seq_autor_age_w		bigint;
nr_seq_estagio_w		                bigint;
cd_procedimento_w		bigint;
ds_procedimento_w		                varchar(255);
ds_motivo_cancelamento_w	                varchar(255);
qt_proc_autor_w			bigint;
ie_status_agenda_w		varchar(2);
dt_agenda_w			timestamp;
nr_minuto_duracao_w		bigint;
cd_medico_w			varchar(10);
nr_seq_status_w			bigint;
qt_item_adic_w			bigint;
nr_seq_proc_int_princ_w		bigint;


BEGIN

select 	max(cd_agenda),
	max(ie_status_agenda),
	max(hr_inicio),
	max(nr_minuto_duracao),
	max(cd_medico_exec)
into STRICT	cd_agenda_w,
	ie_status_agenda_w,
	dt_agenda_w,
	nr_minuto_duracao_w,
	cd_medico_w
from	agenda_paciente
where	nr_sequencia	= nr_seq_agenda_exame_p;


if (nr_seq_ageint_item_adic_p IS NOT NULL AND nr_seq_ageint_item_adic_p::text <> '') then
	select	max(nr_seq_proc_interno)
	into STRICT	nr_seq_proc_interno_w
	from	ageint_exame_adic_item
	where	nr_sequencia = nr_seq_ageint_item_adic_p;

	select	max(nr_seq_proc_interno)
	into STRICT	nr_seq_proc_int_princ_w
	from	agenda_paciente
	where	nr_sequencia = nr_seq_agenda_exame_p;

	update	agenda_paciente_proc
	set	dt_cancelamento 	= clock_timestamp(),
		nm_usuario_cancel 	= nm_usuario_p
	where	nr_sequencia		= nr_seq_agenda_exame_p
	and	nr_seq_proc_interno	= nr_seq_proc_interno_w;

	update	ageint_exame_adic_item
	set	dt_cancelamento 	= clock_timestamp(),
		nm_usuario_cancel 	= nm_usuario_p
	where	nr_sequencia		= nr_seq_ageint_item_adic_p;

	select	max(c.nr_sequencia),
		max(c.nr_sequencia_autor)
	into STRICT	nr_seq_proc_autor_w,
		nr_seq_autor_age_w
	from	autorizacao_convenio a, estagio_autorizacao b, procedimento_autorizado c
	where	a.nr_seq_estagio 	= b.nr_sequencia
	and	a.nr_sequencia 		= c.nr_sequencia_autor
	and	b.ie_interno 		<> '70'
	and	c.nr_seq_proc_interno	= nr_seq_proc_interno_w
	and	a.nr_seq_age_integ	= nr_seq_agenda_int_p;

	if (coalesce(nr_seq_proc_autor_w,0) > 0) then
		select	cd_procedimento,
			obter_descricao_procedimento(cd_procedimento,ie_origem_proced)
		into STRICT	cd_procedimento_w,
			ds_procedimento_w
		from	procedimento_autorizado
		where	nr_sequencia	= nr_seq_proc_autor_w;

		delete 	FROM procedimento_autorizado
		where	nr_sequencia = nr_seq_proc_autor_w;

		insert	into	autorizacao_convenio_hist(nr_sequencia,
				nm_usuario,
				dt_atualizacao,
				nm_usuario_nrec,
				dt_atualizacao_nrec,
				nr_sequencia_autor,
				ds_historico)
			values (nextval('autorizacao_convenio_hist_seq'),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nr_seq_autor_age_w,
				obter_texto_dic_objeto(291781, null, null) || cd_procedimento_w || ' - ' || ds_procedimento_w || obter_texto_dic_objeto(291782, null, null));
	end if;

	if (coalesce(nr_seq_proc_int_princ_w::text, '') = '') then
		CALL alterar_status_agenda(cd_agenda_w, nr_seq_agenda_exame_p,'C', nr_seq_motivo_canc_p, ds_motivo_cancelamento_w, 'N', nm_usuario_p);

		delete	FROM ageint_marcacao_usuario
		where	nr_seq_agenda	= nr_seq_Agenda_exame_p
		and	nr_Seq_Ageint	= nr_seq_agenda_int_p;

		select 	max(nr_sequencia)
		into STRICT	nr_seq_status_w
		from   	agenda_integrada_status
		where 	ie_status_tasy = 'CA'
		and	coalesce(ie_situacao,'A') = 'A';

		update	agenda_integrada
		set	nr_seq_status		= nr_seq_status_w,
			dt_fim_Agendamento	= clock_timestamp()
		where	nr_sequencia		= nr_seq_agenda_int_p;

		CALL Ageint_gravar_log(obter_texto_dic_objeto(291783, null, null), 'S', nr_seq_agenda_int_p, nm_usuario_p);
	end if;

else

	select	count(*)
	into STRICT	qt_item_adic_w
	from	ageint_exame_adic_item
	where	nr_seq_item = nr_seq_ageint_item_p
	and	coalesce(dt_cancelamento::text, '') = '';

	if (ie_status_agenda_w <> 'C') then
		CALL cancelar_gestao_vaga(nr_seq_agenda_exame_p,nr_seq_motivo_canc_p,nm_usuario_p,cd_estabelecimento_p);

		if	((qt_item_adic_w = 0) or (ie_cancelar_adicionais_p = 'S')) then
			select	max(ds_motivo_cancelamento)
			into STRICT	ds_motivo_cancelamento_w
			from	ageint_motivo_cancelamento
			where	nr_sequencia = nr_seq_motivo_canc_p;

			CALL alterar_status_agenda(cd_agenda_w, nr_seq_agenda_exame_p,'C', nr_seq_motivo_canc_p, ds_motivo_cancelamento_w, 'N', nm_usuario_p);

			update	agenda_paciente_proc
			set	dt_cancelamento 	= clock_timestamp(),
				nm_usuario_cancel 	= nm_usuario_p
			where	nr_sequencia		= nr_seq_agenda_exame_p;

			delete	FROM ageint_marcacao_usuario
			where	nr_seq_agenda	= nr_seq_Agenda_exame_p
			and	nr_Seq_Ageint	= nr_seq_agenda_int_p;

			select 	max(nr_sequencia)
			into STRICT	nr_seq_status_w
			from   	agenda_integrada_status
			where 	ie_status_tasy = 'CA'
			and	coalesce(ie_situacao,'A') = 'A';

			update	agenda_integrada
			set	nr_seq_status		= nr_seq_status_w,
				dt_fim_Agendamento	= clock_timestamp()
			where	nr_sequencia		= nr_seq_agenda_int_p;

			CALL Ageint_gravar_log(obter_texto_dic_objeto(291783, null, null), 'S', nr_seq_agenda_int_p, nm_usuario_p);
		else
			update	agenda_paciente
			set	cd_procedimento 	                 = NULL,
				ie_origem_proced 	                 = NULL,
				nr_seq_proc_interno 	 = NULL
			where 	nr_sequencia 		= nr_seq_Agenda_exame_p;
		end if;

		select	max(nr_seq_proc_interno)
		into STRICT	nr_seq_proc_interno_w
		from	agenda_integrada_item
		where 	nr_sequencia = nr_seq_ageint_item_p
		and	nr_seq_agenda_int = nr_seq_agenda_int_p;


		if (coalesce(nr_seq_proc_interno_w,0) > 0) then

			select	max(c.nr_sequencia),
				max(c.nr_sequencia_autor)
			into STRICT	nr_seq_proc_autor_w,
				nr_seq_autor_age_w
			from	autorizacao_convenio a, estagio_autorizacao b, procedimento_autorizado c
			where	a.nr_seq_estagio 	= b.nr_sequencia
			and	a.nr_sequencia 		= c.nr_sequencia_autor
			and	b.ie_interno <> '70'
			and	c.nr_seq_proc_interno	= nr_seq_proc_interno_w
			and	a.nr_seq_age_integ	= nr_seq_agenda_int_p;

			if (coalesce(nr_seq_proc_autor_w,0) > 0) then
				select	cd_procedimento,
					obter_descricao_procedimento(cd_procedimento,ie_origem_proced)
				into STRICT	cd_procedimento_w,
					ds_procedimento_w
				from	procedimento_autorizado
				where	nr_sequencia	= nr_seq_proc_autor_w;

				delete 	FROM procedimento_autorizado
				where	nr_sequencia = nr_seq_proc_autor_w;

				insert	into	autorizacao_convenio_hist(nr_sequencia,
						nm_usuario,
						dt_atualizacao,
						nm_usuario_nrec,
						dt_atualizacao_nrec,
						nr_sequencia_autor,
						ds_historico)

					values (nextval('autorizacao_convenio_hist_seq'),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nr_seq_autor_age_w,
						obter_texto_dic_objeto(291781, null, null) || cd_procedimento_w || ' - ' || ds_procedimento_w || obter_texto_dic_objeto(291782, null, null));

				select	count(*)
				into STRICT	qt_proc_autor_w
				from	autorizacao_convenio a, procedimento_autorizado b
				where	a.nr_sequencia = b.nr_sequencia_autor
				and	a.nr_sequencia = nr_seq_autor_age_w;

				if (qt_proc_autor_w = 0) then--para cancelar autorizacao caso todos os itens forem cancelados
					select	max(nr_sequencia)
					into STRICT	nr_seq_estagio_w
					from   	estagio_autorizacao
					where  	ie_situacao = 'A'
					and    	ie_interno  = 70;

					CALL atualizar_autorizacao_convenio(nr_seq_autor_age_w, nm_usuario_p, nr_seq_estagio_w, 'N', 'N','S');
				end if;
			end if;
		end if;
	end if;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ageint_cancelar_item_mmed ( nr_seq_agenda_int_p bigint, nr_seq_ageint_item_p bigint, nr_seq_ageint_item_adic_p bigint, nr_seq_agenda_exame_p bigint, ie_cancelar_adicionais_p text, nr_seq_motivo_canc_p text, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

