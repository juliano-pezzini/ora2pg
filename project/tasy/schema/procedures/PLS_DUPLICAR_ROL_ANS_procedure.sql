-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_duplicar_rol_ans ( nr_seq_rol_p bigint, nm_usuario_p text) AS $body$
DECLARE


cd_estabelecimento_w		bigint;

nr_seq_rol_w			bigint;
nr_seq_rol_novo_w		bigint;

nr_seq_capitulo_w		bigint;
nr_seq_capitulo_novo_w		bigint;
ds_capitulo_w			varchar(255);
ie_situacao_capitulo_w		varchar(1);

nr_seq_grupo_w			bigint;
nr_seq_grupo_novo_w		bigint;
ds_grupo_w			varchar(255);
ie_situacao_grupo_w		varchar(1);

nr_seq_subgrupo_w		bigint;
nr_seq_subgrupo_novo_w		bigint;
ds_subgrupo_w			varchar(255);
ie_situacao_subgrupo_w		varchar(1);

nr_seq_grupoproc_w		bigint;
nr_seq_grupoproc_novo_w		bigint;
ds_grupoproc_w			varchar(4000);
ie_complexidade_w		varchar(5);
ie_situacao_grupo_proc_w	varchar(1);
ie_diretriz_utilizacao_w	pls_rol_grupo_proc.ie_diretriz_utilizacao%TYPE;
ds_diretriz_utilizacao_w	pls_rol_grupo_proc.ds_diretriz_utilizacao%TYPE;

nr_seq_procedimento_w		bigint;
nr_seq_procedimento_novo_w	bigint;
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
cd_area_procedimento_w		bigint;
cd_especialidade_proc_w		bigint;
cd_grupo_proc_w			bigint;

nr_seq_segmentacao_w		bigint;
nr_seq_segmentacao_novo_w	bigint;
ie_segmentacao_w		varchar(3);

nr_seq_rol_grupo_med_w		pls_rol_grupo_mat.nr_sequencia%type;
ds_rol_grupo_mat_w		pls_rol_grupo_mat.ds_rol_grupo%type;
ie_situacao_mat_w		pls_rol_grupo_mat.ie_situacao%type;
ie_complexidade_mat_w		pls_rol_grupo_mat.ie_complexidade%type;
ie_diretriz_utilizacao_mat_w	pls_rol_grupo_mat.ie_diretriz_utilizacao%type;
ds_diretriz_utilizacao_mat_w	pls_rol_grupo_mat.ds_diretriz_utilizacao%type;

nr_seq_mat_med_w		pls_rol_mat_med.nr_seq_material%type;

nr_seq_rol_grupo_med_novo_w	pls_rol_grupo_mat.nr_sequencia%type;

C01 CURSOR FOR	/* Rol */
	SELECT	nr_sequencia,
		cd_estabelecimento
	from	pls_rol
	where	nr_sequencia	= nr_seq_rol_p;

C02 CURSOR FOR	/* Capítulo */
	SELECT	nr_sequencia,
		ds_capitulo,
		coalesce(ie_situacao,'A')
	from	pls_rol_capitulo
	where	nr_seq_rol	= nr_seq_rol_w
	order by	nr_sequencia;

C03 CURSOR FOR	/* Grupo */
	SELECT	nr_sequencia,
		ds_grupo,
		coalesce(ie_situacao,'A')
	from	pls_rol_grupo
	where	nr_seq_capitulo	= nr_seq_capitulo_w
	order by	nr_sequencia;

C04 CURSOR FOR	/* Subgrupo */
	SELECT	nr_sequencia,
		ds_subgrupo,
		coalesce(ie_situacao,'A')
	from	pls_rol_subgrupo
	where	nr_seq_grupo	= nr_seq_grupo_w
	order by	nr_sequencia;

C05 CURSOR FOR	/* Grupo procedimento */
	SELECT	nr_sequencia,
		ds_rol_grupo,
		ie_complexidade,
		coalesce(ie_situacao,'A'),
		--ds_diretriz_utilizacao,
		ie_diretriz_utilizacao
	from	pls_rol_grupo_proc
	where	nr_seq_subgrupo = nr_seq_subgrupo_w
	order by	nr_sequencia;

C06 CURSOR FOR	/* Procedimentos */
	SELECT	nr_sequencia,
		cd_procedimento,
		ie_origem_proced,
		cd_area_procedimento,
		cd_especialidade_proc,
		cd_grupo_proc
	from	pls_rol_procedimento
	where	nr_seq_rol_grupo = nr_seq_grupoproc_w
	order by	nr_sequencia;

C07 CURSOR FOR	/* Segmentação */
	SELECT	nr_sequencia,
		ie_segmentacao
	from	pls_rol_segmentacao
	where	nr_seq_rol_grupo = nr_seq_grupoproc_w
	order by	nr_sequencia;

C08 CURSOR FOR	/* Grupo medicamento */
	SELECT	nr_sequencia,
		ds_rol_grupo,
		ie_situacao,
		ie_complexidade,
		ie_diretriz_utilizacao,
		ds_diretriz_utilizacao
	from	pls_rol_grupo_mat
	where	nr_seq_subgrupo = nr_seq_subgrupo_w
	order by	nr_sequencia;

C09 CURSOR(nr_seq_grupo_med_p	pls_rol_mat_med.nr_seq_rol_grupo%type) FOR /* Medicamento */
	SELECT	nr_seq_material
	from	pls_rol_mat_med
	where	nr_seq_rol_grupo = nr_seq_grupo_med_p
	order by	nr_sequencia;


BEGIN

open C01;	/* Rol de procedimentos */
loop
fetch C01 into
	nr_seq_rol_w,
	cd_estabelecimento_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	select	nextval('pls_rol_seq')
	into STRICT	nr_seq_rol_novo_w
	;

	insert into pls_rol(nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
				ds_rol, dt_inicio_vigencia, ie_tipo_rol, cd_estabelecimento)
			values (	nr_seq_rol_novo_w, clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p,
				'Rol de Procedimentos', clock_timestamp(), 'M', cd_estabelecimento_w);

	open C02;	/* Capítulo */
	loop
	fetch C02 into
		nr_seq_capitulo_w,
		ds_capitulo_w,
		ie_situacao_capitulo_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin

		select	nextval('pls_rol_capitulo_seq')
		into STRICT	nr_seq_capitulo_novo_w
		;

		insert into pls_rol_capitulo(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec,
						nm_usuario_nrec, nr_seq_rol, ds_capitulo,ie_situacao)
					values (	nr_seq_capitulo_novo_w, clock_timestamp(), nm_usuario_p, clock_timestamp(),
						nm_usuario_p, nr_seq_rol_novo_w, ds_capitulo_w,ie_situacao_capitulo_w);

		open C03;	/* Grupo */
		loop
		fetch C03 into
			nr_seq_grupo_w,
			ds_grupo_w,
			ie_situacao_grupo_w;
		EXIT WHEN NOT FOUND; /* apply on C03 */
			begin

			select	nextval('pls_rol_grupo_seq')
			into STRICT	nr_seq_grupo_novo_w
			;

			insert into pls_rol_grupo(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec,
							nm_usuario_nrec, ds_grupo, nr_seq_rol, nr_seq_capitulo, ie_situacao)
						values (	nr_seq_grupo_novo_w, clock_timestamp(), nm_usuario_p, clock_timestamp(),
							nm_usuario_p, ds_grupo_w, nr_seq_rol_novo_w, nr_seq_capitulo_novo_w,ie_situacao_grupo_w);

			open C04;	/* Subgrupo */
			loop
			fetch C04 into
				nr_seq_subgrupo_w,
				ds_subgrupo_w,
				ie_situacao_subgrupo_w;
			EXIT WHEN NOT FOUND; /* apply on C04 */
				begin

				select	nextval('pls_rol_subgrupo_seq')
				into STRICT	nr_seq_subgrupo_novo_w
				;

				insert into pls_rol_subgrupo(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec,
								nm_usuario_nrec, ds_subgrupo, nr_seq_grupo,ie_situacao)
							values (	nr_seq_subgrupo_novo_w, clock_timestamp(), nm_usuario_p, clock_timestamp(),
								nm_usuario_p, ds_subgrupo_w, nr_seq_grupo_novo_w,ie_situacao_subgrupo_w);

				open C05;	/* Grupo procedimento */
				loop
				fetch C05 into
					nr_seq_grupoproc_w,
					ds_grupoproc_w,
					ie_complexidade_w,
					ie_situacao_grupo_proc_w,
					--ds_diretriz_utilizacao_w,
					ie_diretriz_utilizacao_w;

				EXIT WHEN NOT FOUND; /* apply on C05 */
					begin

					select	nextval('pls_rol_grupo_proc_seq')
					into STRICT	nr_seq_grupoproc_novo_w
					;

					insert into pls_rol_grupo_proc(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
									ds_rol_grupo, nr_seq_grupo, nr_seq_subgrupo, ie_complexidade,ie_situacao,
									ie_diretriz_utilizacao, ds_diretriz_utilizacao)
								values (	nr_seq_grupoproc_novo_w, clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p,
									ds_grupoproc_w, nr_seq_grupo_novo_w, nr_seq_subgrupo_novo_w, ie_complexidade_w,ie_situacao_grupo_proc_w,
									ie_diretriz_utilizacao_w,ds_diretriz_utilizacao_w);

					CALL copia_campo_long_de_para('PLS_ROL_GRUPO_PROC','DS_DIRETRIZ_UTILIZACAO','WHERE NR_SEQUENCIA = :NR_SEQUENCIA','NR_SEQUENCIA='||nr_seq_grupoproc_w,
							'PLS_ROL_GRUPO_PROC','DS_DIRETRIZ_UTILIZACAO','WHERE NR_SEQUENCIA = :NR_SEQUENCIA','NR_SEQUENCIA='||nr_seq_grupoproc_novo_w);

					open C06;	/* Procedimentos */
					loop
					fetch C06 into
						nr_seq_procedimento_w,
						cd_procedimento_w,
						ie_origem_proced_w,
						cd_area_procedimento_w,
						cd_especialidade_proc_w,
						cd_grupo_proc_w;
					EXIT WHEN NOT FOUND; /* apply on C06 */
						begin

						select	nextval('pls_rol_procedimento_seq')
						into STRICT	nr_seq_procedimento_novo_w
						;

						insert into pls_rol_procedimento(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec,
											nm_usuario_nrec, cd_procedimento, ie_origem_proced, cd_area_procedimento,
											cd_especialidade_proc, cd_grupo_proc, nr_seq_rol_grupo)
										values (	nr_seq_procedimento_novo_w, clock_timestamp(), nm_usuario_p, clock_timestamp(),
											nm_usuario_p, cd_procedimento_w, ie_origem_proced_w, cd_area_procedimento_w,
											cd_especialidade_proc_w, cd_grupo_proc_w, nr_seq_grupoproc_novo_w);

						end;
					end loop;
					close C06;

					open C07;	/* Segmentação */
					loop
					fetch C07 into
						nr_seq_segmentacao_w,
						ie_segmentacao_w;
					EXIT WHEN NOT FOUND; /* apply on C07 */
						begin

						select	nextval('pls_rol_segmentacao_seq')
						into STRICT	nr_seq_segmentacao_novo_w
						;

						insert into pls_rol_segmentacao(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec,
											nm_usuario_nrec, ie_segmentacao, nr_seq_rol_grupo)
										values (	nr_seq_segmentacao_novo_w, clock_timestamp(), nm_usuario_p, clock_timestamp(),
											nm_usuario_p, ie_segmentacao_w, nr_seq_grupoproc_novo_w);
						end;
					end loop;
					close C07;
					end;
				end loop;
				close C05;
				end;

				open C08;	/* Grupo medicamento */
				loop
				fetch C08 into
					nr_seq_rol_grupo_med_w,
					ds_rol_grupo_mat_w,
					ie_situacao_mat_w,
					ie_complexidade_mat_w,
					ie_diretriz_utilizacao_mat_w,
					ds_diretriz_utilizacao_mat_w;
				EXIT WHEN NOT FOUND; /* apply on C08 */
					begin

					select	nextval('pls_rol_grupo_mat_seq')
					into STRICT	nr_seq_rol_grupo_med_novo_w
					;

					insert into pls_rol_grupo_mat(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec,
							nm_usuario_nrec, ds_rol_grupo, ie_situacao, nr_seq_grupo,
							nr_seq_subgrupo, ie_complexidade, ie_diretriz_utilizacao, ds_diretriz_utilizacao)
						values (	nr_seq_rol_grupo_med_novo_w, clock_timestamp(), nm_usuario_p, clock_timestamp(),
							nm_usuario_p, ds_rol_grupo_mat_w, ie_situacao_mat_w, nr_seq_grupo_novo_w,
							nr_seq_subgrupo_novo_w, ie_complexidade_mat_w, ie_diretriz_utilizacao_mat_w, ds_diretriz_utilizacao_mat_w);

					open C09(nr_seq_rol_grupo_med_w);	/* Medicamento */
					loop
					fetch C09 into
						nr_seq_mat_med_w;
					EXIT WHEN NOT FOUND; /* apply on C09 */
						begin

						insert into pls_rol_mat_med(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec,
										nm_usuario_nrec, nr_seq_rol_grupo, nr_seq_material)
									values (	nextval('pls_rol_mat_med_seq'), clock_timestamp(), nm_usuario_p, clock_timestamp(),
										nm_usuario_p, nr_seq_rol_grupo_med_novo_w, nr_seq_mat_med_w);
						end;
					end loop;
					close C09;

					end;
				end loop;
				close C08;
			end loop;
			close C04;
			end;
		end loop;
		close C03;
		end;
	end loop;
	close C02;
	end;
end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_duplicar_rol_ans ( nr_seq_rol_p bigint, nm_usuario_p text) FROM PUBLIC;

