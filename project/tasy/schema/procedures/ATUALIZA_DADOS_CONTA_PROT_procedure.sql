-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualiza_dados_conta_prot (nr_seq_protocolo_p bigint, dt_mesano_referencia_p timestamp, nm_usuario_p text, ie_conta_contabil_p text, ie_grupo_receita_p text, ie_especialidade_medica_p text, ie_codigo_convenio_p text, ie_proc_princ_interno_p text, ie_funcao_medico_p text, cd_convenio_p bigint, ie_atualiza_medico_conv_p text, ie_resumo_protocolo_p text, ie_atualiza_emite_conta_p text) AS $body$
DECLARE

		 
 
nr_interno_conta_w	bigint;
nr_seq_protocolo_w	bigint;
ie_exibe_mensagem_w	varchar(1);
ds_mensagem_w		varchar(255);
		
c01 CURSOR FOR 
	SELECT	nr_interno_conta 
	from	conta_paciente 
	where	nr_seq_protocolo	= nr_seq_protocolo_p;
	
c02 CURSOR FOR 
	SELECT	nr_seq_protocolo 
	from	protocolo_convenio 
	where	nr_seq_protocolo	= nr_seq_protocolo_p 
	
union
 
	SELECT	nr_seq_protocolo 
	from	protocolo_convenio 
	where	trunc(dt_mesano_referencia,'Month')	= trunc(dt_mesano_referencia_p,'Month');	
 

BEGIN 
 
ie_exibe_mensagem_w := 'N';
 
if (ie_conta_contabil_p	= 'S') or (ie_grupo_receita_p	= 'S') then 
	CALL atualizar_dados_conta_pac(nr_seq_protocolo_p, 
		dt_mesano_referencia_p, 
		ie_conta_contabil_p, 
		ie_grupo_receita_p, 
		nm_usuario_p, 
		coalesce(cd_convenio_p,0));
		ie_exibe_mensagem_w := 'S';
end if;
 
if (ie_especialidade_medica_p = 'S') then 
	CALL reatualizar_especialidade(nr_seq_protocolo_p, 
		dt_mesano_referencia_p, 
		nm_usuario_p);
		ie_exibe_mensagem_w := 'S';
end if;
 
if (ie_codigo_convenio_p = 'S') then 
	CALL reatualiza_codigo_convenio(nr_seq_protocolo_p, 
		dt_mesano_referencia_p, 
		nm_usuario_p);
		ie_exibe_mensagem_w := 'S';
end if;
 
if (ie_proc_princ_interno_p = 'S') then 
	CALL reatualizar_proc_princ_interno( 
		nr_seq_protocolo_p, 
		null, 
		dt_mesano_referencia_p, 
		nm_usuario_p);
		ie_exibe_mensagem_w := 'S';
end if;
 
if (ie_funcao_medico_p = 'S') then 
	CALL atualizar_funcao_medic_prot(nr_seq_protocolo_p);
		ie_exibe_mensagem_w := 'S';
end if;
 
if (ie_atualiza_emite_conta_p = 'S') then 
	open c02;
	loop 
	fetch c02 into	 
		nr_seq_protocolo_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin 
		CALL atualizar_emite_conta(null, nr_seq_protocolo_w, 0);
		end;
	end loop;
		ie_exibe_mensagem_w := 'S';
	close c02;
end if;
 
if (ie_atualiza_medico_conv_p	= 'S') then 
	open c01;
	loop 
	fetch c01 into	 
		nr_interno_conta_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin 
		CALL atualiza_medico_convenio(nr_interno_conta_w);
		end;
	end loop;
		ie_exibe_mensagem_w := 'S';
	close c01;
end if;
 
if (ie_resumo_protocolo_p	= 'S') then 
	open c02;
	loop 
	fetch c02 into	 
		nr_seq_protocolo_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin 
		CALL recalcular_protocolo(nr_seq_protocolo_w,nm_usuario_p,'N','S');
		end;
	end loop;
	close c02;
	ie_exibe_mensagem_w := 'S';
end if;
 
if (coalesce(ie_exibe_mensagem_w,'N') = 'S') then 
	ds_mensagem_w := substr(wheb_mensagem_pck.get_texto(498961),1,255);
	CALL wheb_mensagem_pck.exibir_mensagem_abort(ds_mensagem_w);
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualiza_dados_conta_prot (nr_seq_protocolo_p bigint, dt_mesano_referencia_p timestamp, nm_usuario_p text, ie_conta_contabil_p text, ie_grupo_receita_p text, ie_especialidade_medica_p text, ie_codigo_convenio_p text, ie_proc_princ_interno_p text, ie_funcao_medico_p text, cd_convenio_p bigint, ie_atualiza_medico_conv_p text, ie_resumo_protocolo_p text, ie_atualiza_emite_conta_p text) FROM PUBLIC;

