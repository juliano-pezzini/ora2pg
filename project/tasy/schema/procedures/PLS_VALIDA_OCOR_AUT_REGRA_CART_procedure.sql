-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_valida_ocor_aut_regra_cart ( nr_seq_ocor_combinada_p bigint, nr_seq_ocorrencia_p bigint, nr_seq_segurado_p bigint, nr_seq_motivo_glosa_p bigint, nr_seq_guia_p bigint, nr_seq_requisicao_p bigint, nr_seq_execucao_p bigint, ie_utiliza_filtro_p text, nr_seq_param1_p bigint, nr_seq_param2_p bigint, nr_seq_param3_p bigint, nr_seq_param4_p bigint, nr_seq_param5_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE

 
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
Finalidade: Verificar se a guia/requisição se encaixou na ocorrência combinada Valida carteira beneficiário. 
------------------------------------------------------------------------------------------------------------------- 
Locais de chamada direta: 
[ ] Objetos do dicionário [X] Tasy (Delphi/Java) [ ] Portal [ ] Relatórios [ ] Outros: 
 ------------------------------------------------------------------------------------------------------------------ 
Pontos de atenção:Performance. 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
 
 
ie_glosou_w			varchar(1);
nr_seq_prestador_w		pls_guia_plano.nr_seq_prestador%type;
ie_regra_w			varchar(2);
ie_gerar_ocorrencia_w		varchar(2);
ie_gerou_ocor_cabecalho_w	varchar(2);
ie_tipo_ocorrencia_w		varchar(2);
nr_seq_oc_benef_w		bigint;

 
 
C01 CURSOR(nr_seq_ocor_combinada_pc bigint) FOR 
	SELECT	nr_seq_oc_atend_carteira 
	from	pls_validacao_aut_reg_cart 
	where	nr_seq_ocor_aut_combinada	= nr_seq_ocor_combinada_pc;
	
C02 CURSOR(nr_seq_guia_pc bigint) FOR 
	SELECT	nr_sequencia, 
		cd_procedimento, 
		ie_origem_proced 
	from	pls_guia_plano_proc 
	where	nr_seq_guia		= nr_seq_guia_pc;
	
C03 CURSOR(nr_seq_guia_pc bigint) FOR 
	SELECT	nr_sequencia, 
		nr_seq_material 
	from	pls_guia_plano_mat 
	where	nr_seq_guia		= nr_seq_guia_pc;	
	 
C04 CURSOR(nr_seq_requisicao_pc bigint) FOR 
	SELECT	nr_sequencia, 
		cd_procedimento, 
		ie_origem_proced 
	from	pls_requisicao_proc 
	where	nr_seq_requisicao	= nr_seq_requisicao_pc;
	
C05 CURSOR(nr_seq_requisicao_pc bigint) FOR 
	SELECT	nr_sequencia, 
		nr_seq_material 
	from	pls_requisicao_mat 
	where	nr_seq_requisicao	= nr_seq_requisicao_pc;

	 
C06 CURSOR(nr_seq_execucao_pc bigint) FOR 
	SELECT	nr_sequencia, 
		cd_procedimento, 
		ie_origem_proced 
	from	pls_execucao_req_item 
	where	nr_seq_execucao		= nr_seq_execucao_pc 
	and	coalesce(nr_seq_material::text, '') = '';
	
C07 CURSOR(nr_seq_execucao_pc bigint) FOR 
	SELECT	nr_sequencia, 
		nr_seq_material 
	from	pls_execucao_req_item 
	where	nr_seq_execucao		= nr_seq_execucao_pc 
	and	coalesce(cd_procedimento::text, '') = '';
	
 
BEGIN 
for r_C01_w in C01(nr_seq_ocor_combinada_p) loop 
	begin 
	ie_glosou_w := pls_consistir_regra_atend_cart( nr_seq_segurado_p, r_C01_w.nr_seq_oc_atend_carteira, ie_glosou_w);
	 
	if (ie_glosou_w	= 'S') then 
		exit;
	end if;
	end;
end loop;
 
if (ie_glosou_w	= 'S') then 
	if (nr_seq_guia_p IS NOT NULL AND nr_seq_guia_p::text <> '') then 
		select	nr_seq_prestador 
		into STRICT	nr_seq_prestador_w 
		from	pls_guia_plano 
		where	nr_sequencia	= nr_seq_guia_p;
	 
		-- Cursor dos procedimentos da guia 
		for r_C02_w in C02(nr_seq_guia_p) loop 
			begin 
			ie_gerar_ocorrencia_w	:= 'S';
 
			if (ie_utiliza_filtro_p	= 'S') then 
				/* Tratamento para filtros */
 
				SELECT * FROM pls_gerar_ocor_aut_filtro(	nr_seq_ocor_combinada_p, nr_seq_guia_p, null, null, r_C02_w.nr_sequencia, null, null, null, null, r_C02_w.cd_procedimento, r_C02_w.ie_origem_proced, null, ie_gerou_ocor_cabecalho_w, nr_seq_prestador_w, nr_seq_ocorrencia_p, null, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;
								 
				if (ie_regra_w	= 'S') then 
					ie_gerar_ocorrencia_w	:= 'S';
				elsif (ie_regra_w	in ('E','N')) then 
					ie_gerar_ocorrencia_w	:= 'N';
				end if;
			end if;	
 
			if (ie_gerar_ocorrencia_w	= 'S') then 
				exit;
			end if;
			end;
		end loop;
		 
		if (ie_gerar_ocorrencia_w = 'N') then 
			-- Cursor dos materiais da guia 
			for r_C03_w in C03(nr_seq_guia_p) loop 
				begin 
				ie_gerar_ocorrencia_w	:= 'S';
 
				if (ie_utiliza_filtro_p	= 'S') then 
					/* Tratamento para filtros */
 
					SELECT * FROM pls_gerar_ocor_aut_filtro(	nr_seq_ocor_combinada_p, nr_seq_guia_p, null, null, null, r_C03_w.nr_sequencia, null, null, null, null, null, r_C03_w.nr_seq_material, ie_gerou_ocor_cabecalho_w, nr_seq_prestador_w, nr_seq_ocorrencia_p, null, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;
									 
					if (ie_regra_w	= 'S') then 
						ie_gerar_ocorrencia_w	:= 'S';
					elsif (ie_regra_w	in ('E','N')) then 
						ie_gerar_ocorrencia_w	:= 'N';
					end if;
				end if;
				 
				if (ie_gerar_ocorrencia_w	= 'S') then 
					exit;
				end if;		
				end;
			end loop;
		end if;		
		 
		if (ie_gerar_ocorrencia_w = 'S') then 
			nr_seq_oc_benef_w := pls_inserir_ocorrencia(	nr_seq_segurado_p, nr_seq_ocorrencia_p, null, nr_seq_guia_p, null, null, null, nr_seq_ocor_combinada_p, nm_usuario_p, null, nr_seq_motivo_glosa_p, 7, cd_estabelecimento_p, 'N', null, nr_seq_oc_benef_w, null, null, null, null);
						 
			CALL pls_atualizar_status_ocor_comb(	nr_seq_ocorrencia_p, nr_seq_ocor_combinada_p, nr_seq_motivo_glosa_p, 
							nr_seq_guia_p, null, null, 
							null, null, null, 
							null, null, null, 
							nm_usuario_p, cd_estabelecimento_p);
		end if;
		 
	elsif (nr_seq_requisicao_p IS NOT NULL AND nr_seq_requisicao_p::text <> '') then 
		select	nr_seq_prestador 
		into STRICT	nr_seq_prestador_w 
		from	pls_requisicao 
		where	nr_sequencia	= nr_seq_requisicao_p;
		 
		-- Cursor dos procedimentos da requisição 
		for r_C04_w in C04(nr_seq_requisicao_p) loop 
			begin 
			ie_gerar_ocorrencia_w	:= 'S';			
 
			if (ie_utiliza_filtro_p	= 'S') then 
				/* Tratamento para filtros */
 
				SELECT * FROM pls_gerar_ocor_aut_filtro(	nr_seq_ocor_combinada_p, null, nr_seq_requisicao_p, null, null, null, r_C04_w.nr_sequencia, null, null, r_C04_w.cd_procedimento, r_C04_w.ie_origem_proced, null, ie_gerou_ocor_cabecalho_w, nr_seq_prestador_w, nr_seq_ocorrencia_p, null, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;
								 
				if (ie_regra_w	= 'S') then 
					ie_gerar_ocorrencia_w	:= 'S';
				elsif (ie_regra_w	in ('E','N')) then 
					ie_gerar_ocorrencia_w	:= 'N';
				end if;
			end if;
			 
			if (ie_gerar_ocorrencia_w = 'S') then 
				exit;
			end if;
			end;
		end loop;
		 
		if (ie_gerar_ocorrencia_w = 'N') then 
			-- Cursor dos materiais da requisição 
			for r_C05_w in C05(nr_seq_requisicao_p) loop 
				begin 
				ie_gerar_ocorrencia_w	:= 'S';
 
				if (ie_utiliza_filtro_p	= 'S') then 
					/* Tratamento para filtros */
 
					SELECT * FROM pls_gerar_ocor_aut_filtro(	nr_seq_ocor_combinada_p, null, nr_seq_requisicao_p, null, null, null, null, r_C05_w.nr_sequencia, null, null, null, r_C05_w.nr_seq_material, ie_gerou_ocor_cabecalho_w, nr_seq_prestador_w, nr_seq_ocorrencia_p, null, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;
									 
					if (ie_regra_w	= 'S') then 
						ie_gerar_ocorrencia_w	:= 'S';
					elsif (ie_regra_w	in ('E','N')) then 
						ie_gerar_ocorrencia_w	:= 'N';
					end if;
				end if;
				 
				if (ie_gerar_ocorrencia_w	= 'S') then 
					exit;
				end if;	
				end;
			end loop;
		end if;
		 
		if (ie_gerar_ocorrencia_w	= 'S') then 
			nr_seq_oc_benef_w := pls_inserir_ocorrencia(	nr_seq_segurado_p, nr_seq_ocorrencia_p, nr_seq_requisicao_p, null, null, null, null, nr_seq_ocor_combinada_p, nm_usuario_p, null, nr_seq_motivo_glosa_p, 9, cd_estabelecimento_p, 'N', null, nr_seq_oc_benef_w, null, null, null, null);
					 
			CALL pls_atualizar_status_ocor_comb(	nr_seq_ocorrencia_p, nr_seq_ocor_combinada_p, nr_seq_motivo_glosa_p, 
							null, nr_seq_requisicao_p, null, 
							null, null, null, 
							null, null, null, 
							nm_usuario_p, cd_estabelecimento_p);
		end if;
	end if;
end if;
 
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_valida_ocor_aut_regra_cart ( nr_seq_ocor_combinada_p bigint, nr_seq_ocorrencia_p bigint, nr_seq_segurado_p bigint, nr_seq_motivo_glosa_p bigint, nr_seq_guia_p bigint, nr_seq_requisicao_p bigint, nr_seq_execucao_p bigint, ie_utiliza_filtro_p text, nr_seq_param1_p bigint, nr_seq_param2_p bigint, nr_seq_param3_p bigint, nr_seq_param4_p bigint, nr_seq_param5_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

