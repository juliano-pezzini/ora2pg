-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_eis_saude_mulher ( dt_parametro_p timestamp, nm_usuario_p text) AS $body$
DECLARE

 
cd_pessoa_fisica_w			varchar(10);
ie_pac_gravida_w			varchar(1);
ie_sexo_w					varchar(1);
nr_atendimento_w			bigint;
nr_seq_area_w				bigint;
nr_seq_microarea_w			bigint;
qt_vacina_w					bigint;
qt_atend_pre_natal_w		bigint;
dt_parametro_w				timestamp;
dt_parametro_fim_w			timestamp;

C01 CURSOR FOR 
	SELECT	a.cd_pessoa_fisica, 
			a.nr_atendimento, 
			b.ie_sexo 
	from	atendimento_paciente a, 
			pessoa_fisica b 
	where	a.cd_pessoa_fisica = b.cd_pessoa_fisica 
	and		a.ie_nivel_atencao = 'P' 
	and		b.ie_sexo = 'F' 
	and		a.dt_entrada between dt_parametro_w and dt_parametro_fim_w 
	order by a.nr_atendimento;


BEGIN 
 
dt_parametro_fim_w          := 
		    (to_date((to_char(dt_parametro_p,'dd/mm/yy') || 
			' 23:59:59'),'dd/mm/yy hh24:mi:ss'));
dt_parametro_w            := 
    		(to_date((to_char(dt_parametro_p,'dd/mm/yy') || 
			' 00:00:00'),'dd/mm/yy hh24:mi:ss'));
 
 
delete from eis_saude_mulher 
where dt_referencia = dt_parametro_w;
 
 
open C01;
loop 
fetch C01 into 
		cd_pessoa_fisica_w, 
		nr_atendimento_w, 
		ie_sexo_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
 
	select	max(a.nr_seq_area), 
			max(a.nr_seq_microarea) 
	into STRICT	nr_seq_area_w, 
			nr_seq_microarea_w 
	from	domicilio_familia a 
	where	a.cd_pessoa_fisica = cd_pessoa_fisica_w;
	 
	select	coalesce(max(a.ie_pac_gravida),'N') 
	into STRICT	ie_pac_gravida_w 
	from	atendimento_gravidez a 
	where	nr_atendimento = nr_atendimento_w;
	 
	select	count(*) 
	into STRICT	qt_vacina_w 
	from 	vacina b, 
		vacina_calendario c 
	where	b.nr_sequencia	= c.nr_seq_vacina 
	and	((clock_timestamp()-coalesce(to_Date(obter_dados_pf(cd_pessoa_fisica_w,'DN'),'dd/mm/yyyy'),clock_timestamp())) between Obter_idade_min_max_vacina(c.nr_sequencia,'MIN') and Obter_idade_min_max_vacina(c.nr_sequencia,'MAX')) 
	and (Obter_idade_min_max_vacina(c.nr_sequencia,'MIN') IS NOT NULL AND (Obter_idade_min_max_vacina(c.nr_sequencia,'MIN'))::text <> '') 
	and (Obter_idade_min_max_vacina(c.nr_sequencia,'MAX') IS NOT NULL AND (Obter_idade_min_max_vacina(c.nr_sequencia,'MAX'))::text <> '') 
	and  not exists (SELECT 1 from paciente_vacina e where e.nr_seq_vacina = b.nr_sequencia and e.cd_pessoa_fisica = cd_pessoa_fisica_w and c.ie_dose = e.ie_dose);
	 
	select	count(*) 
	into STRICT	qt_atend_pre_natal_w 
	from	med_pac_pre_natal a 
	where	a.cd_pessoa_fisica = cd_pessoa_fisica_w;
 
	insert into eis_saude_mulher( 
							nr_sequencia, 
							dt_atualizacao, 
							dt_atualizacao_nrec, 
							nm_usuario, 
							nm_usuario_nrec, 
							nr_seq_area, 
							nr_seq_microarea, 
							cd_pessoa_fisica, 
							nr_atendimento, 
							ie_pac_gravida, 
							qt_vacina, 
							ie_sexo, 
							dt_referencia, 
							qt_atend_pre_natal) 
			values (			nextval('eis_saude_mulher_seq'), 
							clock_timestamp(), 
							clock_timestamp(), 
							nm_usuario_p, 
							nm_usuario_p, 
							nr_seq_area_w, 
							nr_seq_microarea_w, 
							cd_pessoa_fisica_w, 
							nr_atendimento_w, 
							ie_pac_gravida_w, 
							qt_vacina_w, 
							ie_sexo_w, 
							dt_parametro_w, 
							qt_atend_pre_natal_w);
 
 
	end;
end loop;
close C01;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_eis_saude_mulher ( dt_parametro_p timestamp, nm_usuario_p text) FROM PUBLIC;

