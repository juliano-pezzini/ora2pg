-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ptu_gerar_resp_ordem_serv_v40 ( nr_seq_ordem_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Gerar a transação PTU de resposta de ordem de serviço, via SCS
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[  X]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:Performance.
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
ie_tipo_cliente_w		varchar(2);
cd_unimed_executora_w		smallint;
cd_unimed_beneficiario_w	smallint;
nr_seq_origem_w			bigint;
cd_unimed_w			smallint;
cd_usuario_plano_w		varchar(17);
nr_seq_guia_w			bigint;
cd_servico_w			integer;
ie_origem_proced_w		smallint;
qt_servico_aut_w		smallint;
ie_status_requisicao_w		smallint;
ie_status_w			varchar(2);
nr_seq_resposta_w		bigint;
ie_classificacao_w		smallint;
ie_tipo_despesa_w		smallint;
ie_tipo_tabela_w		varchar(2);
nr_seq_prestador_w		bigint;
nm_prest_alto_custo_w		varchar(60)	:= '';
ie_prest_alto_custo_w		varchar(2);
nr_seq_requisicao_w		bigint;

C01 CURSOR FOR
	SELECT	cd_servico,
		ie_tipo_tabela
	from	ptu_req_ord_serv_servico
	where	nr_seq_req_ord = nr_seq_ordem_p;

C02 CURSOR FOR
	SELECT	ie_origem_proced,
		qt_autorizada,
		ie_status
	from	pls_guia_plano_proc
	where	nr_seq_guia		= nr_seq_guia_w
	
union

	SELECT	ie_origem_proced,
		qt_procedimento,
		ie_status
	from	pls_requisicao_proc
	where	nr_seq_requisicao	= nr_seq_requisicao_w
	and   cd_procedimento   	= cd_servico_w;

C03 CURSOR FOR
	SELECT	qt_autorizada,
		ie_status
	from	pls_guia_plano_mat
	where	nr_seq_guia		= nr_seq_guia_w
	
union

	SELECT	qt_material,
		ie_status
	from	pls_requisicao_mat
	where	nr_seq_requisicao	= nr_seq_requisicao_w
	and   nr_seq_material = pls_obter_seq_codigo_material('',cd_servico_w);


BEGIN

select	ie_tipo_cliente,
	cd_unimed_executora,
	cd_unimed_beneficiario,
	nr_seq_origem,
	cd_unimed,
	cd_usuario_plano,
	nr_seq_guia,
	nr_seq_requisicao,
	coalesce(nr_seq_prestador,0)
into STRICT	ie_tipo_cliente_w,
	cd_unimed_executora_w,
	cd_unimed_beneficiario_w,
	nr_seq_origem_w,
	cd_unimed_w,
	cd_usuario_plano_w,
	nr_seq_guia_w,
	nr_seq_requisicao_w,
	nr_seq_prestador_w
from	ptu_requisicao_ordem_serv
where	nr_sequencia	= nr_seq_ordem_p;

select	nextval('ptu_resposta_req_ord_serv_seq')
into STRICT	nr_seq_resposta_w
;
/*
if	(nr_seq_prestador_w	<> 0) then
	select	nvl(ie_prestador_alto_custo,'N')
	into	ie_prest_alto_custo_w
	from	pls_prestador
	where	nr_sequencia	= nr_seq_prestador_w;

	if	(ie_prest_alto_custo_w	= 'S') then
		nm_prest_alto_custo_w	:= substr(pls_obter_dados_prestador(nr_seq_prestador_w,'N'),1,60);
	end if;
end if;
*/
insert	into ptu_resposta_req_ord_serv(nr_sequencia, cd_transacao, ie_tipo_cliente,
	 cd_unimed_executora, cd_unimed_beneficiario, nr_seq_execucao,
	 cd_unimed, cd_usuario_plano, nr_seq_origem,
	 nm_prest_alto_custo, nr_seq_requisicao, nr_seq_guia,
	 ds_observacao, nm_usuario, dt_atualizacao,
	 nm_usuario_nrec, dt_atualizacao_nrec)
values (nr_seq_resposta_w, '00607', ie_tipo_cliente_w,
	 cd_unimed_executora_w, cd_unimed_beneficiario_w, nr_seq_resposta_w,
	 cd_unimed_w, cd_usuario_plano_w, nr_seq_origem_w,
	 nm_prest_alto_custo_w, nr_seq_requisicao_w, nr_seq_guia_w,
	 '', nm_usuario_p, clock_timestamp(),
	 nm_usuario_p, clock_timestamp());

open c01;
loop
fetch c01 into
	cd_servico_w,
	ie_tipo_tabela_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	if (ie_tipo_tabela_w	in ('0','1')) then
		open C02;
		loop
		fetch C02 into
			ie_origem_proced_w,
			qt_servico_aut_w,
			ie_status_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
		end loop;
		close C02;

		if (ie_status_w	= 'N') then
			ie_status_requisicao_w	:= 1;
		elsif (ie_status_w	= 'S') then
			ie_status_requisicao_w := 2;
		end if;

		insert	into ptu_resposta_req_servico(nr_sequencia, nr_seq_resp_req_ord, cd_servico,
			 qt_servico_aut, ie_status_requisicao, ie_tipo_tabela,
			 nm_usuario, dt_atualizacao, nm_usuario_nrec,
			 dt_atualizacao_nrec)
		values (nextval('ptu_resposta_req_servico_seq'), nr_seq_resposta_w, cd_servico_w,
			 coalesce(qt_servico_aut_w,0), coalesce(ie_status_requisicao_w,1), ie_tipo_tabela_w,
			 nm_usuario_p, clock_timestamp(), nm_usuario_p,
			 clock_timestamp());
	end if;
	end;
end loop;
close C01;

open c01;
loop
fetch c01 into
	cd_servico_w,
	ie_tipo_tabela_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	if (ie_tipo_tabela_w	in ('2','3')) then
		open C03;
		loop
		fetch C03 into
			qt_servico_aut_w,
			ie_status_w;
		EXIT WHEN NOT FOUND; /* apply on C03 */
		end loop;
		close C03;

		if (ie_status_w	= 'N') then
			ie_status_requisicao_w	:= 1;
		elsif (ie_status_w	= 'S') then
			ie_status_requisicao_w := 2;
		end if;

		insert	into ptu_resposta_req_servico(nr_sequencia, nr_seq_resp_req_ord, cd_servico,
			 qt_servico_aut, ie_status_requisicao, ie_tipo_tabela,
			 nm_usuario, dt_atualizacao, nm_usuario_nrec,
			 dt_atualizacao_nrec)
		values (nextval('ptu_resposta_req_servico_seq'), nr_seq_resposta_w, cd_servico_w,
			 coalesce(qt_servico_aut_w,0), coalesce(ie_status_requisicao_w,1), ie_tipo_tabela_w,
			 nm_usuario_p, clock_timestamp(), nm_usuario_p,
			 clock_timestamp());
	end if;
	end;
end loop;
close C01;

CALL ptu_consistir_transacao('00607',nr_seq_guia_w, nr_seq_requisicao_w, null,cd_estabelecimento_p,nm_usuario_p);

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_gerar_resp_ordem_serv_v40 ( nr_seq_ordem_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

