-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ageint_mmed_insere_ex_adic ( nr_seq_agenda_exame_p bigint, nr_seq_item_p bigint, nr_seq_proc_interno_p bigint, cd_msg_erro_p INOUT bigint, ie_lado_p text, nm_usuario_p text) AS $body$
DECLARE

 
nr_seq_ageint_w		bigint;
cd_paciente_w		varchar(10);
cd_convenio_w		integer;
cd_categoria_w		varchar(10);
cd_plano_w		varchar(10);
cd_estabelecimento_w	smallint;
nr_seq_cobertura_w	bigint;	
 
cd_agenda_w		bigint;
ds_agenda_w		varchar(50);
cd_medico_exec_w	varchar(10);
ds_erro_w		varchar(255);
qt_exames_adic_w	bigint;
qt_exames_adic_perm_w	bigint;

nr_seq_proc_adic_w		bigint;
cd_proc_item_adic_w		bigint;
ie_origem_proc_item_adic_w	bigint;
ie_lado_adic_w			varchar(1);

ie_regra_w		integer;
ie_glosa_w		varchar(1);
ie_sexo_w		varchar(1);
ie_pacote_w		varchar(1);
ie_tipo_atendimento_w	smallint;
nr_seq_regra_w		bigint;
ie_edicao_w       varchar(1);
cd_edicao_ajuste_w   bigint;
qt_item_edicao_w    bigint;
ds_irrelevante_w	varchar(255);
nr_glosa_part_w		bigint;
ie_bloq_glosa_part_w	varchar(1);
pr_glosa_w				double precision;
vl_glosa_w				double precision;


BEGIN 
if (nr_seq_item_p IS NOT NULL AND nr_seq_item_p::text <> '') then 
	begin 
	nr_glosa_part_w	:= 99;
	 
	select	max(a.nr_sequencia), 
		max(a.cd_convenio), 
		max(a.cd_categoria), 
		max(a.cd_plano), 
		max(a.cd_estabelecimento), 
		max(c.cd_agenda), 
		max(d.ds_agenda), 
		max(c.cd_medico_exec), 
		max(a.ie_tipo_atendimento), 
		max(a.cd_pessoa_fisica), 
		max(a.nr_seq_cobertura) 
	into STRICT	nr_seq_ageint_w, 
		cd_convenio_w, 
		cd_categoria_w, 
		cd_plano_w, 
		cd_estabelecimento_w, 
		cd_agenda_w, 
		ds_agenda_w, 
		cd_medico_exec_w, 
		ie_tipo_atendimento_w, 
		cd_paciente_w, 
		nr_seq_cobertura_w 
	from	agenda_integrada a, 
		agenda_integrada_item b, 
		agenda_paciente c, 
		agenda d 
	where	a.nr_sequencia 	= b.nr_seq_agenda_int 
	and	c.nr_sequencia 	= b.nr_seq_agenda_exame 
	and	d.cd_agenda 	= c.cd_agenda 
	and	b.nr_sequencia 	= nr_seq_item_p;
	 
	select	max(ie_sexo) 
	into STRICT	ie_sexo_w 
	from	pessoa_fisica 
	where	cd_pessoa_fisica = cd_paciente_w;
 
	ie_bloq_glosa_part_w := obter_param_usuario(869, 187, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_bloq_glosa_part_w);
 
	if (ie_bloq_glosa_part_w = 'N') then 
		nr_glosa_part_w := 8;
	end if;
 
	SELECT * FROM obter_proc_tab_interno_conv( 
				nr_seq_proc_interno_p, cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, cd_plano_w, null, cd_proc_item_adic_w, ie_origem_proc_item_adic_w, null, clock_timestamp(), null, null, null, null, null, null, null, null) INTO STRICT cd_proc_item_adic_w, ie_origem_proc_item_adic_w;
	 
	SELECT * FROM ageint_consiste_plano_conv( 
				null, cd_convenio_w, cd_proc_item_adic_w, ie_origem_proc_item_adic_w, clock_timestamp(), 1, coalesce(ie_tipo_Atendimento_w,0), cd_plano_w, null, ds_erro_w, 0, null, ie_regra_w, null, nr_seq_regra_w, nr_seq_proc_interno_p, cd_categoria_w, cd_estabelecimento_w, null, ie_sexo_w, ie_glosa_w, cd_edicao_ajuste_w, nr_seq_cobertura_w, ds_irrelevante_w, ds_irrelevante_w, cd_paciente_w, null, pr_glosa_w, vl_glosa_w) INTO STRICT ds_erro_w, ie_regra_w, nr_seq_regra_w, ie_glosa_w, cd_edicao_ajuste_w, ds_irrelevante_w, ds_irrelevante_w, pr_glosa_w, vl_glosa_w;
				 
	ie_edicao_w	:= ageint_obter_se_proc_conv(cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, clock_timestamp(), cd_proc_item_adic_w, ie_origem_proc_item_adic_w, nr_Seq_proc_interno_p, ie_tipo_atendimento_w);
 
	ie_pacote_w	:= obter_se_pacote_convenio(cd_proc_item_adic_w, ie_origem_proc_item_adic_w, cd_convenio_w, cd_estabelecimento_w);		
 
	if (ie_edicao_w 			= 'N') and (coalesce(cd_edicao_ajuste_w,0) 	= 0) and (ie_pacote_w			= 'N') then 
		ie_glosa_w    := 'T';
	end if;
 
	if (ie_edicao_w 			= 'N') and (coalesce(cd_edicao_ajuste_w,0) 	> 0) and (ie_pacote_w			= 'N') then 
		select  count(*) 
		into STRICT   qt_item_edicao_w 
		from   preco_amb 
		where  cd_edicao_amb = cd_edicao_ajuste_w 
		and   cd_procedimento = cd_proc_item_adic_w 
		and   ie_origem_proced = ie_origem_proc_item_adic_w;
 
		if (qt_item_edicao_w = 0) then 
			ie_glosa_w :=  'G';
		end if;
	end if;
 
	if	((coalesce(ie_regra_w,0) in (1,2,5,nr_glosa_part_w)) or (coalesce(ie_glosa_w,'X') = 'T')) then 
		cd_msg_erro_p	:= 266910;
		return;
	end if;
 
	ds_erro_w := Ageint_Consist_Ex_Adic_MMed(cd_agenda_w, nr_seq_item_p, 'E', cd_convenio_w, cd_categoria_w, cd_estabelecimento_w, cd_plano_w, cd_medico_exec_w, nr_seq_proc_interno_p, ds_erro_w);
	if (ds_erro_w IS NOT NULL AND ds_erro_w::text <> '') then 
		CALL wheb_mensagem_pck.exibir_mensagem_abort(266871,'DS_AGENDA='||ds_agenda_w);
	end if;
	 
	select	count(*) 
	into STRICT	qt_exames_adic_w 
	from	agenda_paciente a, 
		agenda_paciente_proc b 
	where	a.nr_sequencia = b.nr_sequencia 
	and	a.nr_sequencia = nr_seq_agenda_exame_p 
	and	b.nr_seq_proc_interno = nr_seq_proc_interno_p;
	 
	if (qt_exames_adic_w > 0) then 
		begin 
		cd_msg_erro_p	:= 266713; -- J?? existe um exame deste como procedimento adicional. Por favor, verifique. 
		return;
		end;
	end if;
	 
	select	max(a.qt_exames_adic) 
	into STRICT	qt_exames_adic_perm_w 
	from	agenda a, 
		agenda_paciente b 
	where	a.cd_agenda = b.cd_agenda 
	and	b.nr_sequencia = nr_seq_agenda_exame_p;
 
	if (qt_exames_adic_perm_w IS NOT NULL AND qt_exames_adic_perm_w::text <> '') then 
		begin 
		select	count(*) + 1 
		into STRICT	qt_exames_adic_w 
		from	ageint_exame_adic_item 
		where	nr_seq_item = nr_seq_item_p;
	 
		if (qt_exames_adic_w > qt_exames_adic_perm_w) then 
			cd_msg_erro_p	:= 266639; -- Quantidade de exames excede ao permitido por agenda. Verifique na pasta Cadastros > Agendas > Agenda de Exames > Agendas. 
			return;
		end if;
		end;
	end if;
	 
	if (coalesce(cd_msg_erro_p::text, '') = '') then 
		begin 
		select	coalesce(max(nr_seq_agenda),0) + 1 
		into STRICT	nr_seq_proc_adic_w 
		from	agenda_paciente_proc 
		where	nr_sequencia = nr_seq_agenda_exame_p;
		 
		insert into agenda_paciente_proc(nr_sequencia, 
			nr_seq_agenda, 
			dt_atualizacao, 
			nm_usuario, 
			cd_procedimento, 
			ie_origem_proced, 
			nr_seq_proc_interno, 
			nr_seq_agenda_princ, 
			ie_lado) 
		values (nr_seq_agenda_exame_p, 
			nr_seq_proc_adic_w, 
			clock_timestamp(), 
			nm_usuario_p, 
			cd_proc_item_adic_w, 
			ie_origem_proc_item_adic_w, 
			nr_seq_proc_interno_p, 
			nr_seq_agenda_exame_p, 
			ie_lado_p);
		end;
		--Ageint_Gerar_Autor_Regra(nr_seq_ageint_w, nm_usuario_p); 
		CALL gerar_autor_regra(null,null,null,null,null,null,'AP',nm_usuario_p,nr_seq_agenda_exame_p,null,null,null,null,nr_seq_proc_adic_w,'','','');
	end if;
	end;
end if;
 
commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ageint_mmed_insere_ex_adic ( nr_seq_agenda_exame_p bigint, nr_seq_item_p bigint, nr_seq_proc_interno_p bigint, cd_msg_erro_p INOUT bigint, ie_lado_p text, nm_usuario_p text) FROM PUBLIC;

