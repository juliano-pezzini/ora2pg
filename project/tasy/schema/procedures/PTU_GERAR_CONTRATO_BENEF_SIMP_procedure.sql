-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ptu_gerar_contrato_benef_simp ( nr_seq_intercambio_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


qt_historico_w	integer;

C01 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.nr_seq_segurado,
		a.dt_compartilhamento,
		a.dt_fim_compartilhamento,
		(	SELECT	max(x.ie_tipo_segurado)
			from	pls_segurado x
			where	x.nr_sequencia = a.nr_seq_segurado) ie_tipo_segurado
	from	ptu_intercambio_benef_simp a
	where	a.nr_seq_intercambio = nr_seq_intercambio_p
	and	a.ie_status = 'I';

BEGIN

for r_c01_w in C01 loop
	begin
	if (r_c01_w.nr_seq_segurado IS NOT NULL AND r_c01_w.nr_seq_segurado::text <> '') then --Esse tratamento passa a ser realizado ao gerar a contratacao do lote
		--Inicio do compartilhamento
		if (r_c01_w.dt_compartilhamento IS NOT NULL AND r_c01_w.dt_compartilhamento::text <> '') then
			select	count(1)
			into STRICT	qt_historico_w
			from	pls_segurado_historico
			where	nr_seq_segurado = r_c01_w.nr_seq_segurado
			and	ie_tipo_historico = 102
			and	trunc(dt_ocorrencia_sib, 'dd') = trunc(r_c01_w.dt_compartilhamento, 'dd')
			and	ie_tipo_segurado = 'H'
			and	coalesce(ie_situacao_compartilhamento, 'A') = 'A';
			
			if (qt_historico_w = 0) then
				insert into pls_segurado_historico(nr_sequencia, dt_atualizacao, nm_usuario,
					dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_segurado,
					dt_historico, ds_historico, ds_observacao,
					ie_tipo_historico, dt_ocorrencia_sib, ie_historico_situacao,
					dt_liberacao_hist, ie_envio_sib, ie_tipo_segurado,
					ie_tipo_segurado_ant, ie_situacao_compartilhamento)
				values (	nextval('pls_segurado_historico_seq'), clock_timestamp(), nm_usuario_p,
					clock_timestamp(), nm_usuario_p, r_c01_w.nr_seq_segurado,
					clock_timestamp(), 'Tipo de '||lower(wheb_mensagem_pck.get_texto(1109236))||' alterado de "'||obter_valor_dominio(2406,r_c01_w.ie_tipo_segurado)||'" para "'||obter_valor_dominio(2406,'H')||'"', 'pls_importar_arquivo_a100_xml - Lote '||nr_seq_intercambio_p,
					'102', trunc(r_c01_w.dt_compartilhamento, 'dd'), 'S',
					clock_timestamp(), 'N', 'H',
					r_c01_w.ie_tipo_segurado, 'A');
					
				CALL pls_inativar_historico_compart(r_c01_w.nr_seq_segurado, trunc(r_c01_w.dt_compartilhamento, 'dd'), nm_usuario_p, 'N');
			end if;
			
			if (r_c01_w.dt_compartilhamento <= fim_dia(clock_timestamp())) and (coalesce(r_c01_w.dt_fim_compartilhamento::text, '') = '' or r_c01_w.dt_fim_compartilhamento > clock_timestamp()) then
				CALL wheb_usuario_pck.set_ie_executar_trigger('N');
				update	pls_segurado
				set	ie_tipo_segurado = 'H',
					dt_alteracao_tipo_segurado = trunc(r_c01_w.dt_compartilhamento, 'dd'),
					nm_usuario = nm_usuario_p,
					dt_atualizacao = clock_timestamp()
				where	nr_sequencia	= r_c01_w.nr_seq_segurado;
				
				CALL ptu_a100_simplificado_pck.atualizar_status_pessoa(r_c01_w.nr_seq_segurado, 'H', nm_usuario_p);
				CALL wheb_usuario_pck.set_ie_executar_trigger('S');
			end if;
		end if;
		
		--Fim do compartilhamento
		if (r_c01_w.dt_fim_compartilhamento IS NOT NULL AND r_c01_w.dt_fim_compartilhamento::text <> '') then
			select	count(1)
			into STRICT	qt_historico_w
			from	pls_segurado_historico
			where	nr_seq_segurado = r_c01_w.nr_seq_segurado
			and	ie_tipo_historico = 102
			and	trunc(dt_ocorrencia_sib, 'dd') = trunc(r_c01_w.dt_fim_compartilhamento+1, 'dd')
			and	ie_tipo_segurado = 'I'
			and	ie_tipo_segurado_ant = 'H'
			and	coalesce(ie_situacao_compartilhamento, 'A') = 'A';
			
			if (qt_historico_w = 0) then
				insert into pls_segurado_historico(nr_sequencia, dt_atualizacao, nm_usuario,
					dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_segurado,
					dt_historico, ds_historico, ds_observacao,
					ie_tipo_historico, dt_ocorrencia_sib, ie_historico_situacao,
					dt_liberacao_hist, ie_envio_sib, ie_tipo_segurado,
					ie_tipo_segurado_ant, ie_situacao_compartilhamento)
				values (	nextval('pls_segurado_historico_seq'), clock_timestamp(), nm_usuario_p,
					clock_timestamp(), nm_usuario_p, r_c01_w.nr_seq_segurado,
					clock_timestamp(), 'Tipo de '||lower(wheb_mensagem_pck.get_texto(1109236))||' alterado de "'||obter_valor_dominio(2406,'H')||'" para "'||obter_valor_dominio(2406,'I')||'"', 'pls_importar_arquivo_a100_xml - Lote '||nr_seq_intercambio_p,
					'102', trunc(r_c01_w.dt_fim_compartilhamento+1, 'dd'), 'S',
					clock_timestamp(), 'N', 'I',
					'H', 'A');
					
				CALL pls_inativar_historico_compart(r_c01_w.nr_seq_segurado, trunc(r_c01_w.dt_fim_compartilhamento+1, 'dd'), nm_usuario_p, 'N');
			end if;
			
			if (r_c01_w.dt_fim_compartilhamento <= fim_dia(clock_timestamp())) then
				CALL wheb_usuario_pck.set_ie_executar_trigger('N');
				update	pls_segurado
				set	ie_tipo_segurado = 'I',
					dt_alteracao_tipo_segurado = trunc(r_c01_w.dt_fim_compartilhamento+1, 'dd'),
					nm_usuario = nm_usuario_p,
					dt_atualizacao = clock_timestamp()
				where	nr_sequencia	= r_c01_w.nr_seq_segurado;
				
				CALL ptu_a100_simplificado_pck.atualizar_status_pessoa(r_c01_w.nr_seq_segurado, 'I', nm_usuario_p);
				CALL wheb_usuario_pck.set_ie_executar_trigger('S');
			end if;
		end if;
		update	ptu_intercambio_benef_simp
		set	ie_status = 'C'
		where	nr_sequencia = r_c01_w.nr_sequencia;
	else
		update	ptu_intercambio_benef_simp
		set	ie_status = 'A'
		where	nr_sequencia = r_c01_w.nr_sequencia;
	end if;
	end;
end loop;

CALL ptu_gerar_retorno_mov(nr_seq_intercambio_p,1,cd_estabelecimento_p,nm_usuario_p);

update	ptu_intercambio
set	dt_geracao_contrato	= clock_timestamp()
where	nr_sequencia		= nr_seq_intercambio_p;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_gerar_contrato_benef_simp ( nr_seq_intercambio_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

