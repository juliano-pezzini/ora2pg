-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE trev_cd_mat AS (trev_cd_mat cpoe_material.cd_mat_comp1%type[7]);
CREATE TYPE trev_qt_dose AS (trev_qt_dose cpoe_material.qt_dose_comp1%type[7]);
CREATE TYPE trev_cd_unid_med AS (trev_cd_unid_med cpoe_material.cd_unid_med_dose_comp1%type[7]);


CREATE OR REPLACE PROCEDURE gerar_terapias_atuais ( cd_estabelecimento_p bigint, nr_seq_material_p bigint, nr_cirurgia_p bigint, nm_usuario_p text, cd_profissional_p text, nr_sequencia_p INOUT bigint, nr_seq_pepo_p bigint, ds_just_alergico_p text default null, ie_integracao_p text default 'N', ie_tipo_item_p text default 'N') AS $body$
DECLARE


nr_seq_item_cpoe_w					cpoe_material.nr_sequencia%type;
ie_tipo_solucao_w					cpoe_material.ie_tipo_solucao%type;
ie_tipo_item_w						varchar(5);
cd_unidade_medida_w					cpoe_material.cd_unidade_medida%type;
ie_via_aplicacao_w					cpoe_material.ie_via_aplicacao%type;
ie_bomba_infusao_w					cpoe_material.ie_bomba_infusao%type;
qt_dose_w						cpoe_material.qt_dose%type;
ds_justificativa_w					cpoe_material.ds_justificativa%type;
ie_tipo_dosagem_w					cpoe_material.ie_tipo_dosagem%type;
cd_material_w						cpoe_material.cd_material%type;
ds_solucao_w					    	cpoe_material.ds_solucao%type;
ie_trev_w						cpoe_material.ie_trev%type;
cd_mat_comp1						cpoe_material.cd_mat_comp1%type;
cd_mat_comp2						cpoe_material.cd_mat_comp2%type;
cd_mat_comp3						cpoe_material.cd_mat_comp3%type;
cd_mat_comp4						cpoe_material.cd_mat_comp4%type;
cd_mat_comp5						cpoe_material.cd_mat_comp5%type;
cd_mat_comp6						cpoe_material.cd_mat_comp6%type;
cd_mat_comp7						cpoe_material.cd_mat_comp7%type;
qt_dose_comp1						cpoe_material.qt_dose_comp1%type;
qt_dose_comp2						cpoe_material.qt_dose_comp2%type;
qt_dose_comp3						cpoe_material.qt_dose_comp3%type;
qt_dose_comp4						cpoe_material.qt_dose_comp4%type;
qt_dose_comp5						cpoe_material.qt_dose_comp5%type;
qt_dose_comp6						cpoe_material.qt_dose_comp6%type;
qt_dose_comp7						cpoe_material.qt_dose_comp7%type;
cd_unid_med_dose_comp1				cpoe_material.cd_unid_med_dose_comp1%type;
cd_unid_med_dose_comp2				cpoe_material.cd_unid_med_dose_comp2%type;
cd_unid_med_dose_comp3				cpoe_material.cd_unid_med_dose_comp3%type;
cd_unid_med_dose_comp4				cpoe_material.cd_unid_med_dose_comp4%type;
cd_unid_med_dose_comp5				cpoe_material.cd_unid_med_dose_comp5%type;
cd_unid_med_dose_comp6				cpoe_material.cd_unid_med_dose_comp6%type;
cd_unid_med_dose_comp7				cpoe_material.cd_unid_med_dose_comp7%type;
qt_dosagem_w						cpoe_material.qt_dosagem%type;
qt_gotejo_npt_w                    			cpoe_dieta.qt_gotejo_npt%type;
dt_inicio_hor_w						prescr_mat_hor.dt_inicio_horario%type;
dt_fim_hor_w						prescr_mat_hor.dt_fim_horario%type;
ie_tipo_dieta_w						cpoe_dieta.ie_tipo_dieta%type;
ie_dieta_enteral_w					cpoe_dieta.ie_dieta_enteral%type;
cd_material_npt_w					cpoe_npt_produto.cd_material%type;
cd_unidade_medida_npt_w					cpoe_npt_produto.cd_unidade_medida%type;
qt_dose_npt_w						cpoe_npt_produto.qt_dose%type;
nr_prescricao_w						prescr_material.nr_prescricao%type;
nr_seq_solucao_w					prescr_material.nr_sequencia_solucao%type;
nr_sequencia_c04_w                  			prescr_material.nr_sequencia%type;
nr_prescr_dieta_w					prescr_dieta.nr_prescricao%type;
nr_seq_dieta_w						prescr_dieta.nr_sequencia%type;
dt_inicio_hor_dieta_w					prescr_dieta_hor.dt_horario%type;
dt_fim_hor_dieta_w					prescr_dieta_hor.dt_fim_horario%type;
ie_modo_adm_w						varchar(5);
nr_sequencia_w						bigint;
ie_tipo_w						smallint;
ie_libera_terapia_pepo_w				varchar(1);
ie_libera_medic_pepo_w					varchar(1);
ie_libera_w						varchar(1) := 'S';
ie_prescr_mat_comp_w					varchar(1);
array_trev_cd_mat trev_cd_mat := trev_cd_mat();
array_trev_qt_dose trev_qt_dose := trev_qt_dose();
array_trev_cd_unid_med trev_cd_unid_med := trev_cd_unid_med();
nr_seq_derivado_w					cpoe_hemoterapia.nr_seq_derivado%type;
cd_procedimento_w					cpoe_hemoterapia.cd_procedimento%type;
ie_origem_proced_w					cpoe_hemoterapia.ie_origem_proced%type;
ie_unid_med_hemo_w					cpoe_hemoterapia.ie_unid_med_hemo%type;
dt_alteracao_w						prescr_solucao_evento.dt_alteracao%type;
ie_alteracao_w						prescr_solucao_evento.ie_alteracao%type;
ie_tipo_atendimento_w	atendimento_Paciente.ie_tipo_atendimento%type;
ie_tipo_convenio_w		convenio.ie_tipo_convenio%type;
cd_convenio_w			Atend_categoria_convenio.cd_convenio%type;
nr_seq_proc_interno_w	san_derivado_convenio.nr_seq_proc_interno%type;
cd_setor_atendimento_w	proc_interno_setor.cd_setor_atendimento%type;
cd_categoria_w			proc_interno_conv.cd_categoria%type;	
nr_atendimento_w		cirurgia.nr_atendimento%type;



c01 CURSOR FOR
	SELECT max(nr_sequencia),
		max(ie_tipo_solucao),
		max(cd_unidade_medida),
		max(ie_via_aplicacao),
		max(ie_bomba_infusao),
		max(qt_dose),
		max(ds_justificativa),
		max(cd_material),
		max(ie_tipo_dosagem),
		max(ds_solucao),
		max(ie_trev),
		max(cd_mat_comp1),
		max(cd_mat_comp2),
		max(cd_mat_comp3),
		max(cd_mat_comp4),
		max(cd_mat_comp5),
		max(cd_mat_comp6),
		max(cd_mat_comp7),
		max(qt_dose_comp1),
		max(qt_dose_comp2),
		max(qt_dose_comp3),
		max(qt_dose_comp4),
		max(qt_dose_comp5),
		max(qt_dose_comp6),
		max(qt_dose_comp7),
		max(cd_unid_med_dose_comp1),
		max(cd_unid_med_dose_comp2),
		max(cd_unid_med_dose_comp3),
		max(cd_unid_med_dose_comp4),
		max(cd_unid_med_dose_comp5),
		max(cd_unid_med_dose_comp6),
		max(cd_unid_med_dose_comp7),
		max(qt_dosagem)
	from	cpoe_material
	where	nr_sequencia = nr_seq_material_p;

c02 CURSOR FOR
	SELECT
		max(a.nr_sequencia),
		max(a.ie_tipo_dieta),
		max(a.ie_via_aplicacao),
		max(a.ie_bomba_infusao),
		max(coalesce(a.qt_dose, c.qt_dosagem)),
		max(a.ds_justificativa),
		max(a.cd_material),
		max(coalesce(a.ie_tipo_dosagem, c.ie_tipo_dosagem)),
		max(a.ie_dieta_enteral),
		max(a.qt_gotejo_npt)
	from cpoe_dieta a,
		 nut_pac b,
		 prescr_solucao_evento c
	where   a.nr_sequencia = b.nr_seq_npt_cpoe
		and b.nr_prescricao = c.nr_prescricao
		and a.nr_sequencia = nr_seq_material_p
		and c.IE_ALTERACAO in (1,3) 
	order by c.nr_Sequencia desc LIMIT 1;

c03 CURSOR FOR
	SELECT  coalesce(a.cd_material, a.cd_material),
			coalesce(a.cd_unidade_medida, b.cd_unidade_medida),
			a.qt_dose
	from cpoe_npt_produto a,
		cpoe_npt_elemento b
	where a.nr_seq_elemento = b.nr_sequencia
	and a.qt_dose > 0
	and a.nr_seq_npt_cpoe = nr_seq_material_p;

C04 CURSOR FOR
	SELECT 	coalesce(nr_prescricao, 0),
			coalesce(nr_sequencia_solucao, 0),
			coalesce(nr_sequencia, 0)
	from 	prescr_material
	where 	nr_seq_mat_cpoe = nr_seq_material_p
		and nr_sequencia = (SELECT min(nr_sequencia) from prescr_material where nr_seq_mat_cpoe = nr_seq_material_p);

C05 CURSOR FOR
	SELECT 	dt_inicio_horario,
			dt_fim_horario
	from 	prescr_mat_hor
	where 	nr_prescricao	= nr_prescricao_w
	and 	nr_seq_solucao	= nr_seq_solucao_w;	

C06 CURSOR FOR
	SELECT 	nr_prescricao,
				nr_sequencia
	from 	  nut_pac
	where 	nr_seq_npt_cpoe = nr_seq_material_p;

C07 CURSOR FOR
	SELECT max(inicio) dt_horario,
			max(fim) dt_fim_horario 
		from (
			SELECT a.dt_alteracao inicio, 
					null fim 
			from prescr_solucao_evento a 
			where a.nr_seq_nut_neo = nr_seq_dieta_w 
			and a.ie_alteracao in (1,3)
			
union

			select null inicio, 
					b.dt_alteracao fim 
			from prescr_solucao_evento b 
			where b.nr_seq_nut_neo = nr_seq_dieta_w 
			and b.ie_alteracao in (4)) alias4;

C08 CURSOR FOR
	SELECT
		max(nr_sequencia),
		max(ds_justificativa),
		max(ie_via_aplicacao),
		max(nr_seq_derivado),
		max(cd_procedimento),
		max(ie_origem_proced),
		max(ie_unid_med_hemo),
		max(qt_vol_hemocomp),
		max(qt_veloc_inf_hemo)
	from cpoe_hemoterapia
	where	nr_sequencia = nr_seq_material_p;

C09 CURSOR FOR
	SELECT
		c.dt_alteracao,
		c.ie_alteracao
	from prescr_procedimento a,
		prescr_solucao_evento c
	where a.nr_seq_proc_cpoe = nr_seq_item_cpoe_w
	and a.nr_prescricao = c.nr_prescricao
	and a.nr_sequencia = c.nr_seq_procedimento
	order by dt_alteracao;

BEGIN
	select
		coalesce(max('N'),'N'),
		coalesce(max('N'),'N')
	into STRICT	
		ie_libera_medic_pepo_w,
		ie_libera_terapia_pepo_w
	from	parametro_medico
	where	cd_estabelecimento = cd_estabelecimento_p;
	
	if (ie_tipo_item_p in ('M','SOL')) then
		open C01;
		loop
		fetch C01 into	
			nr_seq_item_cpoe_w,
			ie_tipo_solucao_w,
			cd_unidade_medida_w,
			ie_via_aplicacao_w,
			ie_bomba_infusao_w,
			qt_dose_w,
			ds_justificativa_w,
			cd_material_w,
			ie_tipo_dosagem_w,
			ds_solucao_w,
			ie_trev_w,
			cd_mat_comp1,
			cd_mat_comp2,
			cd_mat_comp3,
			cd_mat_comp4,
			cd_mat_comp5,
			cd_mat_comp6,
			cd_mat_comp7,
			qt_dose_comp1,
			qt_dose_comp2,
			qt_dose_comp3,
			qt_dose_comp4,
			qt_dose_comp5,
			qt_dose_comp6,
			qt_dose_comp7,
			cd_unid_med_dose_comp1,
			cd_unid_med_dose_comp2,
			cd_unid_med_dose_comp3,
			cd_unid_med_dose_comp4,
			cd_unid_med_dose_comp5,
			cd_unid_med_dose_comp6,
			cd_unid_med_dose_comp7,
			qt_dosagem_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */

			ie_tipo_item_w := cpoe_obter_tipo_item('CPOE_MATERIAL', nr_seq_material_p);
			if (ie_tipo_item_w = 'M') then
				ie_tipo_w := 3;
				ie_modo_adm_w := 'IN';
			elsif (ie_tipo_item_w = 'SOL') then
				ie_tipo_w := 2;
				if (ie_tipo_solucao_w = 'C') then
					ie_modo_adm_w := 'CO';
				elsif (ie_tipo_solucao_w = 'I') then
					ie_modo_adm_w := 'IN';
					ie_tipo_dosagem_w := null;
				end if;
			end if;

			if (ie_tipo_w = 2 AND ie_libera_terapia_pepo_w = 'N') or
				(ie_tipo_w = 3 AND ie_libera_medic_pepo_w = 'N') then
				ie_libera_w := 'N';
			end if;

			select	nextval('cirurgia_agente_anestesico_seq')
			into STRICT	nr_sequencia_w
			;

			nr_sequencia_p	:= nr_sequencia_w;

			insert into cirurgia_agente_anestesico(
				nr_sequencia,
				nr_seq_mat_cpoe,
				dt_atualizacao,
				nm_usuario,
				nr_cirurgia,
				nr_seq_agente,
				cd_material,
				cd_profissional,
				ie_modo_adm,
				ie_tipo_dosagem,
				ie_via_aplicacao,
				ie_disp_infusao,
				cd_unidade_medida,
				qt_dose,
				cd_unid_medida_adm,
				ie_tipo,
				nm_usuario_nrec,
				dt_atualizacao_nrec,
				nr_seq_pepo,
				ie_situacao,
				dt_liberacao,
				ds_justificativa,
				ds_just_alergico,
				ie_integracao,
				ds_solucao,
				ie_terapia_atual)
			values (
				nr_sequencia_w,
				nr_seq_item_cpoe_w,
				clock_timestamp(),
				nm_usuario_p,
				nr_cirurgia_p,
				null,
				cd_material_w,
				cd_profissional_p,
				ie_modo_adm_w,
				ie_tipo_dosagem_w,
				ie_via_aplicacao_w,
				ie_bomba_infusao_w,
				cd_unidade_medida_w,
				qt_dose_w,
				cd_unidade_medida_w,
				ie_tipo_w,
				nm_usuario_p,
				clock_timestamp(),
				nr_seq_pepo_p,
				'A',
				CASE WHEN ie_libera_w='S' THEN clock_timestamp()  ELSE null END ,
				SUBSTR(ds_justificativa_w,1,255),
				SUBSTR(ds_just_alergico_p,1,255),
				ie_integracao_p,
				ds_solucao_w,
				'S');

			commit;

			if ((cd_material_w IS NOT NULL AND cd_material_w::text <> '') and ie_trev_w != 'S') then
				CALL gerar_reconst_diluicao_agente(cd_estabelecimento_p,nr_sequencia_w,'A', nm_usuario_p);
			end if;

			if (ie_trev_w = 'S') then
				array_trev_cd_mat.EXTEND(7);
				array_trev_cd_mat(1) := coalesce(cd_mat_comp1,NULL);
				array_trev_cd_mat(2) := coalesce(cd_mat_comp2,NULL);
				array_trev_cd_mat(3) := coalesce(cd_mat_comp3,NULL);
				array_trev_cd_mat(4) := coalesce(cd_mat_comp4,NULL);
				array_trev_cd_mat(5) := coalesce(cd_mat_comp5,NULL);
				array_trev_cd_mat(6) := coalesce(cd_mat_comp6,NULL);
				array_trev_cd_mat(7) := coalesce(cd_mat_comp7,NULL);

				array_trev_qt_dose .EXTEND(7);
				array_trev_qt_dose(1) := coalesce(qt_dose_comp1,0);
				array_trev_qt_dose(2) := coalesce(qt_dose_comp2,0);
				array_trev_qt_dose(3) := coalesce(qt_dose_comp3,0);
				array_trev_qt_dose(4) := coalesce(qt_dose_comp4,0);
				array_trev_qt_dose(5) := coalesce(qt_dose_comp5,0);
				array_trev_qt_dose(6) := coalesce(qt_dose_comp6,0);
				array_trev_qt_dose(7) := coalesce(qt_dose_comp7,0);

				array_trev_cd_unid_med.EXTEND(7);
				array_trev_cd_unid_med(1) := coalesce(cd_unid_med_dose_comp1, substr(obter_unid_med_usua('ml'),1,255));
				array_trev_cd_unid_med(2) := coalesce(cd_unid_med_dose_comp2, substr(obter_unid_med_usua('ml'),1,255));
				array_trev_cd_unid_med(3) := coalesce(cd_unid_med_dose_comp3, substr(obter_unid_med_usua('ml'),1,255));
				array_trev_cd_unid_med(4) := coalesce(cd_unid_med_dose_comp4, substr(obter_unid_med_usua('ml'),1,255));
				array_trev_cd_unid_med(5) := coalesce(cd_unid_med_dose_comp5, substr(obter_unid_med_usua('ml'),1,255));
				array_trev_cd_unid_med(6) := coalesce(cd_unid_med_dose_comp6, substr(obter_unid_med_usua('ml'),1,255));
				array_trev_cd_unid_med(7) := coalesce(cd_unid_med_dose_comp7, substr(obter_unid_med_usua('ml'),1,255));

				FOR indice IN 1 .. 7
				LOOP

					if ((array_trev_cd_mat(indice) IS NOT NULL AND (array_trev_cd_mat(indice))::text <> '')) then
						insert into agente_anest_diluicao(
							nr_sequencia,
							dt_atualizacao,
							nm_usuario,
							cd_material,
							cd_unidade_medida,
							ie_origem_inf,
							qt_rediluir,
							qt_dose,
							nr_seq_agente_cir)
						values (
							nextval('agente_anest_diluicao_seq'),
							clock_timestamp(),
							nm_usuario_p,
							array_trev_cd_mat(indice),
							array_trev_cd_unid_med(indice),
							2,
							null,
							array_trev_qt_dose(indice),
							nr_sequencia_w);
						commit;
					end if;
				END LOOP;
			end if;

			open C04;
			loop
			fetch C04 into	
				nr_prescricao_w,
				nr_seq_solucao_w,
				nr_sequencia_c04_w;
			EXIT WHEN NOT FOUND; /* apply on C04 */

				if (ie_tipo_item_w = 'SOL') then
					open C05;
					loop
					fetch C05 into	
						dt_inicio_hor_w,
						dt_fim_hor_w;
					EXIT WHEN NOT FOUND; /* apply on C05 */

						if (dt_inicio_hor_w <= clock_timestamp() and dt_fim_hor_w >= clock_timestamp()) or (dt_inicio_hor_w <= clock_timestamp() and coalesce(dt_fim_hor_w::text, '') = '' ) then
							insert	into cirurgia_agente_anest_ocor(
									nr_sequencia,
									dt_atualizacao,
									nm_usuario,
									nr_seq_cirur_agente,
									dt_inicio_adm,
									dt_final_adm,
									qt_dose,
									qt_velocidade_inf,
									ds_observacao,
									qt_dose_ataque,
									ie_aplic_bolus,
									nm_usuario_nrec,
									dt_atualizacao_nrec,
									ie_modo_registro,
									dt_liberacao,
									ie_situacao)
							values (
									nextval('cirurgia_agente_anest_ocor_seq'),
									clock_timestamp(),
									nm_usuario_p,
									nr_sequencia_w,
									dt_inicio_hor_w,
									dt_fim_hor_w,
									qt_dose_w,
									qt_dosagem_w,
									null,
									null,
									'N',
									nm_usuario_p,
									clock_timestamp(),
									'V',
									clock_timestamp(),
									'A');
						end if;
					end loop;
					close C05;

					select
						coalesce(max('S'),'N')
					into STRICT 
						ie_prescr_mat_comp_w
					from prescr_material_compl
					where nr_prescricao = nr_prescricao_w
					and nr_sequencia = nr_sequencia_c04_w;

					if (ie_prescr_mat_comp_w = 'S') then
						update prescr_material_compl
						set nr_seq_agente_anestesico = nr_sequencia_w
						where nr_prescricao = nr_prescricao_w
						and nr_sequencia = nr_sequencia_c04_w;
					else
						CALL gerar_prescr_mat_compl(nr_prescricao_w, nr_sequencia_c04_w, nm_usuario_p, null, null,nr_sequencia_w);
					end if;

				else
					select coalesce(max('S'),'N')
					into STRICT ie_prescr_mat_comp_w
					from prescr_material_compl
					where nr_prescricao = nr_prescricao_w
					and nr_sequencia = nr_sequencia_c04_w;

					if (ie_prescr_mat_comp_w = 'S') then
						update prescr_material_compl
						set nr_seq_agente_anestesico = nr_sequencia_w
						where nr_prescricao = nr_prescricao_w
						and nr_sequencia = nr_sequencia_c04_w;
					else
						CALL gerar_prescr_mat_compl(nr_prescricao_w, nr_sequencia_c04_w, nm_usuario_p, null, null,nr_sequencia_w);
					end if;
				end if;	
			end loop;
			close C04;	
		end loop;
		close C01;

	elsif (ie_tipo_item_p = 'D') then
		open C02;
		loop
		fetch C02 into	nr_seq_item_cpoe_w,
				ie_tipo_dieta_w,
				ie_via_aplicacao_w,
				ie_bomba_infusao_w,
				qt_dose_w,
				ds_justificativa_w,
				cd_material_w,
				ie_tipo_dosagem_w,
				ie_dieta_enteral_w,
				qt_gotejo_npt_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */

			ie_tipo_item_w := cpoe_obter_tipo_item('CPOE_DIETA', nr_seq_material_p);

			if (ie_tipo_item_w = 'NPTA' or ie_tipo_item_w = 'NPTI') then
				ie_tipo_w := 2;
				ie_modo_adm_w := 'CO';
			end if;

			if (ie_libera_medic_pepo_w = 'N') then
				ie_libera_w := 'N';
			end if;

			if (ie_tipo_dieta_w = 'P') then
				if (ie_dieta_enteral_w = 'S') then
					ds_solucao_w	:= obter_desc_expressao(304204);
				else
					ds_solucao_w	:= obter_desc_expressao(305331);
				end if;
			elsif (ie_tipo_dieta_w = 'I') then
				ds_solucao_w	:= obter_desc_expressao(722485);
			end if;

			select	nextval('cirurgia_agente_anestesico_seq')
			into STRICT	nr_sequencia_w
			;

			nr_sequencia_p	:= nr_sequencia_w;

			insert into cirurgia_agente_anestesico(
				nr_sequencia,
				nr_seq_diet_cpoe,
				dt_atualizacao,
				nm_usuario,
				nr_cirurgia,
				nr_seq_agente,
				cd_material,
				cd_profissional,
				ie_modo_adm,
				ie_tipo_dosagem,
				ie_via_aplicacao,
				ie_disp_infusao,
				cd_unidade_medida,
				qt_dose,
				cd_unid_medida_adm,
				ie_tipo,
				nm_usuario_nrec,
				dt_atualizacao_nrec,
				nr_seq_pepo,
				ie_situacao,
				dt_liberacao,
				ds_justificativa,
				ds_just_alergico,
				ie_integracao,
				ds_solucao,
				ie_terapia_atual)
			values (
				nr_sequencia_w,
				nr_seq_item_cpoe_w,
				clock_timestamp(),
				nm_usuario_p,
				nr_cirurgia_p,
				null,
				cd_material_w,
				cd_profissional_p,
				coalesce(ie_modo_adm_w,'CO'),
				ie_tipo_dosagem_w,
				ie_via_aplicacao_w,
				ie_bomba_infusao_w,
				null,
				qt_dose_w,
				null,
				coalesce(ie_tipo_w,2),
				nm_usuario_p,
				clock_timestamp(),
				nr_seq_pepo_p,
				'A',
				CASE WHEN ie_libera_w='S' THEN clock_timestamp()  ELSE null END ,
				SUBSTR(ds_justificativa_w,1,255),
				SUBSTR(ds_just_alergico_p,1,255),
				ie_integracao_p,
				ds_solucao_w,
				'S');

			commit;


			open c03;
			loop
			fetch c03 into cd_material_npt_w,
				cd_unidade_medida_npt_w,
				qt_dose_npt_w;
			EXIT WHEN NOT FOUND; /* apply on c03 */

				insert into agente_anest_diluicao(
					nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					cd_material,
					cd_unidade_medida,
					ie_origem_inf,
					qt_rediluir,
					qt_dose,
					nr_seq_agente_cir)
				values (
					nextval('agente_anest_diluicao_seq'),
					clock_timestamp(),
					nm_usuario_p,
					cd_material_npt_w,
					cd_unidade_medida_npt_w,
					2,
					null,
					qt_dose_npt_w,
					nr_sequencia_w);

				commit;

			end loop;
			close C03;					

			if (ie_tipo_item_w = 'NPTA' or ie_tipo_item_w = 'NPTI') then
				open C06;
				loop
				fetch C06 into	
					nr_prescr_dieta_w,
					nr_seq_dieta_w;
				EXIT WHEN NOT FOUND; /* apply on C06 */

					open C07;
					loop
					fetch C07 into	
						dt_inicio_hor_dieta_w,
						dt_fim_hor_dieta_w;
					EXIT WHEN NOT FOUND; /* apply on C07 */
						if (dt_inicio_hor_dieta_w <= clock_timestamp() and (dt_fim_hor_dieta_w >= clock_timestamp() or coalesce(dt_fim_hor_dieta_w::text, '') = '') ) then
							insert	into cirurgia_agente_anest_ocor(
									nr_sequencia,
									dt_atualizacao,
									nm_usuario,
									nr_seq_cirur_agente,
									dt_inicio_adm,
									dt_final_adm,
									qt_dose,
									qt_velocidade_inf,
									ds_observacao,
									qt_dose_ataque,
									ie_aplic_bolus,
									nm_usuario_nrec,
									dt_atualizacao_nrec,
									ie_modo_registro,
									dt_liberacao,
									ie_situacao)
							values (
									nextval('cirurgia_agente_anest_ocor_seq'),
									clock_timestamp(),
									nm_usuario_p,
									nr_sequencia_w,
									dt_inicio_hor_dieta_w,
									dt_fim_hor_dieta_w,
									qt_dose_w,
									qt_gotejo_npt_w,
									null,
									null,
									'N',
									nm_usuario_p,
									clock_timestamp(),
									'V',
									clock_timestamp(),
									'A');
						end if;					
					end loop;
					close C07;				
				end loop;
				close C06;
			end if;
		end loop;
		close C02;

	elsif (ie_tipo_item_p = 'H') then
	
		select max(nr_atendimento)
			into STRICT nr_atendimento_w
		  from cirurgia
		  where nr_cirurgia = nr_cirurgia_p;
	
		select	obter_tipo_atendimento(nr_atendimento_w),
				obter_convenio_atendimento(nr_atendimento_w),
				obter_tipo_convenio(obter_convenio_atendimento(nr_atendimento_w)),
				obter_categoria_atendimento(nr_atendimento_w)
		into STRICT ie_tipo_atendimento_w,
			 cd_convenio_w,
			 ie_tipo_convenio_w,
			 cd_categoria_w
		;
	
		open C08;
		loop
		fetch C08 into	
			nr_seq_item_cpoe_w,
			ds_justificativa_w,
			ie_via_aplicacao_w,
			nr_seq_derivado_w,
			cd_procedimento_w,
			ie_origem_proced_w,
			ie_unid_med_hemo_w,
			qt_dose_w,
			qt_dosagem_w;
		EXIT WHEN NOT FOUND; /* apply on C08 */
			select	nextval('cirurgia_agente_anestesico_seq')
			into STRICT	nr_sequencia_w
			;
			
			SELECT * FROM obter_proced_sangue(0, nr_seq_derivado_w, cd_estabelecimento_p, ie_tipo_atendimento_w, ie_tipo_convenio_w, cd_convenio_w, cd_categoria_w, cd_setor_atendimento_w, cd_procedimento_w, ie_origem_proced_w, nr_seq_proc_interno_w) INTO STRICT cd_setor_atendimento_w, cd_procedimento_w, ie_origem_proced_w, nr_seq_proc_interno_w;

			nr_sequencia_p	:= nr_sequencia_w;
			ie_tipo_w := 5;
			ie_modo_adm_w := 'CO';
			
			insert into cirurgia_agente_anestesico(
				nr_sequencia,
				nr_seq_hemo_cpoe,
				dt_atualizacao,
				nm_usuario,
				nr_cirurgia,
				nr_seq_agente,
				nr_seq_derivado,
				cd_procedimento,
				ie_origem_proced,
				cd_profissional,
				ie_modo_adm,
				ie_tipo_dosagem,
				ie_via_aplicacao,
				ie_disp_infusao,
				cd_unidade_medida,
				qt_dose,
				cd_unid_medida_adm,
				ie_tipo,
				nm_usuario_nrec,
				dt_atualizacao_nrec,
				nr_seq_pepo,
				ie_situacao,
				dt_liberacao,
				ds_justificativa,
				ds_just_alergico,
				ie_integracao,
				ie_terapia_atual)
			values (
				nr_sequencia_w,
				nr_seq_item_cpoe_w,
				clock_timestamp(),
				nm_usuario_p,
				nr_cirurgia_p,
				null,
				nr_seq_derivado_w,
				cd_procedimento_w,
				ie_origem_proced_w,
				cd_profissional_p,
				ie_modo_adm_w,
				ie_unid_med_hemo_w,
				ie_via_aplicacao_w,
				null,
				null,
				qt_dose_w,
				null,
				ie_tipo_w,
				nm_usuario_p,
				clock_timestamp(),
				nr_seq_pepo_p,
				'A',
				CASE WHEN ie_libera_w='S' THEN clock_timestamp()  ELSE null END ,
				SUBSTR(ds_justificativa_w,1,255),
				SUBSTR(ds_just_alergico_p,1,255),
				ie_integracao_p,
				'S');
				
				open C09;
				loop
				fetch C09 into	
					dt_alteracao_w,
					ie_alteracao_w;
				EXIT WHEN NOT FOUND; /* apply on C09 */
					if ( ie_alteracao_w in (1,3)) then
						insert	into cirurgia_agente_anest_ocor(
								nr_sequencia,
								dt_atualizacao,
								nm_usuario,
								nr_seq_cirur_agente,
								dt_inicio_adm,
								dt_final_adm,
								qt_dose,
								qt_velocidade_inf,
								ds_observacao,
								qt_dose_ataque,
								ie_aplic_bolus,
								nm_usuario_nrec,
								dt_atualizacao_nrec,
								ie_modo_registro,
								dt_liberacao,
								ie_situacao)
						values (
								nextval('cirurgia_agente_anest_ocor_seq'),
								clock_timestamp(),
								nm_usuario_p,
								nr_sequencia_w,
								dt_alteracao_w,
								null,
								qt_dose_w,
								qt_dosagem_w,
								null,
								null,
								'N',
								nm_usuario_p,
								clock_timestamp(),
								'V',
								clock_timestamp(),
								'A');
								
					elsif ( ie_alteracao_w in (2,4)) then			
						update cirurgia_agente_anest_ocor
						set dt_final_adm = dt_alteracao_w
						where nr_seq_cirur_agente = nr_sequencia_w
						and coalesce(dt_final_adm::text, '') = ''
						and qt_dose = qt_dose_w
						and qt_velocidade_inf = qt_dosagem_w;

					end if;
				end loop;
				close C09;
		end loop;
		close C08;
		
	elsif (ie_tipo_item_p = 'DV') then
		nr_sequencia_p := nr_seq_material_p;
		update atend_pac_dispositivo set nr_cirurgia = nr_cirurgia_p  where nr_sequencia = nr_seq_material_p;
	end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_terapias_atuais ( cd_estabelecimento_p bigint, nr_seq_material_p bigint, nr_cirurgia_p bigint, nm_usuario_p text, cd_profissional_p text, nr_sequencia_p INOUT bigint, nr_seq_pepo_p bigint, ds_just_alergico_p text default null, ie_integracao_p text default 'N', ie_tipo_item_p text default 'N') FROM PUBLIC;

