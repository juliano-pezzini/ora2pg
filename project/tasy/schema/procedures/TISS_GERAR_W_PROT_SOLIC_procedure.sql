-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE tiss_gerar_w_prot_solic (nr_seq_retorno_p bigint, ie_para_cada_guia_p text, nm_usuario_p text) AS $body$
DECLARE

 
nr_protocolo_tiss_w	varchar(20);
nr_seq_protocolo_w	bigint;
nr_seq_prot_ret_w	convenio_retorno.nr_seq_protocolo%type;
nr_seq_prot_adic_w	convenio_retorno.nr_seq_prot_adic%type;
nr_seq_prot_adic_aux_w	convenio_retorno.nr_seq_prot_adic%type;

pos_w			bigint;

c01 CURSOR FOR 
SELECT	distinct nr_protocolo 
from	tiss_protocolo_guia 
where	nr_seq_protocolo	= nr_seq_protocolo_w;
			

BEGIN 
 
delete 	from w_tiss_prot_solic_ret 
where	nr_seq_retorno	= nr_seq_retorno_p;
 
select	nr_seq_protocolo, 
	nr_seq_prot_adic 
into STRICT	nr_seq_prot_ret_w, 
	nr_seq_prot_adic_w 
from	convenio_retorno 
where	nr_sequencia = nr_seq_retorno_p;
 
if (nr_seq_prot_ret_w IS NOT NULL AND nr_seq_prot_ret_w::text <> '') then 
 
	nr_seq_protocolo_w	:= nr_seq_prot_ret_w;
 
	if (coalesce(ie_para_cada_guia_p,'N') = 'S') then 
		 
		open C01;
		loop 
		fetch C01 into	 
			nr_protocolo_tiss_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin 
			insert into w_tiss_prot_solic_ret(nr_seq_retorno, 
				nr_seq_protocolo, 
				nr_protocolo_tiss) 
			values (nr_seq_retorno_p, 
				nr_seq_protocolo_w, 
				nr_protocolo_tiss_w);
			 
			end;
		end loop;
		close C01;
	else 
	 
		select	max(tiss_obter_prot_solic_status(nr_seq_protocolo_w)) 
		into STRICT	nr_protocolo_tiss_w 
		;
 
		insert into w_tiss_prot_solic_ret(nr_seq_retorno, 
			nr_seq_protocolo, 
			nr_protocolo_tiss) 
		values (nr_seq_retorno_p, 
			nr_seq_protocolo_w, 
			nr_protocolo_tiss_w);	
	end if;
	 
end if;
 
if (nr_seq_prot_adic_w IS NOT NULL AND nr_seq_prot_adic_w::text <> '') then 
 
	while (nr_seq_prot_adic_w IS NOT NULL AND nr_seq_prot_adic_w::text <> '') loop 
		begin 
         nr_seq_prot_adic_w := replace(nr_seq_prot_adic_w,',',';');
		pos_w	:= position(';' in nr_seq_prot_adic_w);	--Posicao inicial ';'		 
		if (pos_w = 0) then
			nr_seq_prot_adic_aux_w	:= nr_seq_prot_adic_w;
		else 
			nr_seq_prot_adic_aux_w	:= substr(nr_seq_prot_adic_w,1,pos_w);
		end if;				
 
		nr_seq_prot_adic_w	:= replace(nr_seq_prot_adic_w,nr_seq_prot_adic_aux_w,'');		
		nr_seq_prot_adic_aux_w	:= replace(nr_seq_prot_adic_aux_w,';','');
		nr_seq_protocolo_w	:= somente_numero(nr_seq_prot_adic_aux_w);
		 
		if (nr_seq_protocolo_w > 0) then 
		 
			if (coalesce(ie_para_cada_guia_p,'N') = 'S') then 
		 
				open C01;
				loop 
				fetch C01 into	 
					nr_protocolo_tiss_w;
				EXIT WHEN NOT FOUND; /* apply on C01 */
					begin 
					insert into w_tiss_prot_solic_ret(nr_seq_retorno, 
						nr_seq_protocolo, 
						nr_protocolo_tiss) 
					values (nr_seq_retorno_p, 
						nr_seq_protocolo_w, 
						nr_protocolo_tiss_w);
					 
					end;
				end loop;
				close C01;
			else 
				select	max(nr_seq_protocolo) 
				into STRICT	nr_seq_protocolo_w 
				from	protocolo_convenio 
				where	nr_seq_protocolo	= nr_seq_protocolo_w;
				 
				if (coalesce(nr_seq_protocolo_w,0) > 0) then 
			 
					select	max(tiss_obter_prot_solic_status(nr_seq_protocolo_w)) 
					into STRICT	nr_protocolo_tiss_w 
					;
 
					insert into w_tiss_prot_solic_ret(nr_seq_retorno, 
						nr_seq_protocolo, 
						nr_protocolo_tiss) 
					values (nr_seq_retorno_p, 
						nr_seq_protocolo_w, 
						nr_protocolo_tiss_w);	
				end if;
			end if;
		end if;
		 
		end;
	end loop;
 
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE tiss_gerar_w_prot_solic (nr_seq_retorno_p bigint, ie_para_cada_guia_p text, nm_usuario_p text) FROM PUBLIC;

