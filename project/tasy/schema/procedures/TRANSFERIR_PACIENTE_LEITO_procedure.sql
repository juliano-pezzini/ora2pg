-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE transferir_paciente_leito ( nr_atendimento_p bigint, cd_setor_atendimento_p bigint, cd_unidade_basica_p text, cd_unidade_compl_p text, nr_acompanhantes_p bigint, cd_setor_atendimento_atual_p bigint, cd_unidade_basica_atual_p text, cd_unidade_compl_atual_p text, cd_estabelecimento_p bigint, cd_perfil_p bigint, nm_usuario_p text) AS $body$
DECLARE


qt_unidade_w			bigint;
cd_tipo_acomodacao_w		smallint;
vl_transf_acomp_w		varchar(255);
vl_transferir_w			varchar(255);
ie_leito_livre_acomp_w		varchar(1);
ds_texto_w			varchar(255);
ie_status_aguardando_hig_w	varchar(255);
ie_transfere_rn_w		varchar(1);
nr_atendimento_rn_w		bigint;
auto_higienizacao_w		varchar(1);


BEGIN

if (nr_atendimento_p > 0) and (cd_setor_atendimento_p IS NOT NULL AND cd_setor_atendimento_p::text <> '') and (cd_unidade_basica_p IS NOT NULL AND cd_unidade_basica_p::text <> '') and (cd_unidade_compl_p IS NOT NULL AND cd_unidade_compl_p::text <> '') then
	begin

	vl_transf_acomp_w := Obter_Param_Usuario(44, 122, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, vl_transf_acomp_w);
	ie_leito_livre_acomp_w	:= obter_se_leito_livre_acomp(nr_atendimento_p, cd_unidade_basica_p, cd_unidade_compl_p, cd_setor_atendimento_p);

	if (vl_transf_acomp_w = 'S') and (ie_leito_livre_acomp_w = 'N') then
		begin
		ds_texto_w	:= substr(obter_texto_tasy(27690, null),1,255);

		CALL wheb_mensagem_pck.exibir_mensagem_abort(186388, 'DS_ERRO_P='||ds_texto_w);
		end;
	end if;

	vl_transferir_w := Obter_Param_Usuario(3111, 27, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, vl_transferir_w);

	select	count(*)
	into STRICT	qt_unidade_w
	from	unidade_atendimento
	where	cd_setor_atendimento	= cd_setor_atendimento_p
	and	cd_unidade_basica	= cd_unidade_basica_p
	and	cd_unidade_compl	= cd_unidade_compl_p;

	if (qt_unidade_w > 0) then

		select	cd_tipo_acomodacao
		into STRICT	cd_tipo_acomodacao_w
		from	unidade_atendimento
		where	cd_setor_atendimento	= cd_setor_atendimento_p
		and	cd_unidade_basica	= cd_unidade_basica_p
		and	cd_unidade_compl	= cd_unidade_compl_p;

	end if;

	if	((vl_transferir_w = 'N') and
		 ((coalesce(cd_tipo_acomodacao_w::text, '') = '') or (cd_tipo_acomodacao_w = 0)))then
		begin
		ds_texto_w	:= substr(obter_texto_tasy(27691, null),1,255);
		CALL wheb_mensagem_pck.exibir_mensagem_abort(186388, 'DS_ERRO_P='||ds_texto_w);
		end;
	end if;

	CALL gerar_transferencia_paciente(nr_atendimento_p, cd_setor_atendimento_p, cd_unidade_basica_p, cd_unidade_compl_p, cd_tipo_acomodacao_w, nr_acompanhantes_p, null, '', nm_usuario_p, clock_timestamp());

	if (vl_transf_acomp_w = 'S') then
		CALL transf_acompanhantes_paciente(nr_atendimento_p, cd_setor_atendimento_p, cd_unidade_basica_p, cd_unidade_compl_p, nm_usuario_p);
	end if;

	CALL gerar_ajustes_ap_lote('M', nr_atendimento_p, nm_usuario_p);
	/*[202] - Utilizar status de aguardando higienização ao registrar a transferência do paciente*/

	ie_status_aguardando_hig_w := obter_param_usuario(44, 202, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ie_status_aguardando_hig_w);

	select	coalesce(obter_se_auto_higienizacao(cd_setor_atendimento_p,cd_unidade_basica_p,cd_unidade_compl_p,'S'),'N')
	into STRICT	auto_higienizacao_w
	;

	if	((coalesce(ie_status_aguardando_hig_w, 'N') = 'S') or
	        ((coalesce(ie_status_aguardando_hig_w, 'N') = 'D') and (auto_higienizacao_w = 'S'))) then


		begin
		CALL alterar_status_leito_transf(
				'G',
				nm_usuario_p,
				cd_setor_atendimento_atual_p,
				cd_unidade_basica_atual_p,
				cd_unidade_compl_atual_p);
		end;
	end if;

	ie_transfere_rn_w := Obter_param_Usuario(44, 229, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ie_transfere_rn_w);
	nr_atendimento_rn_w := obter_consistir_se_mae_rn(nr_atendimento_p);

	if (coalesce(ie_transfere_rn_w,'N') = 'S') and (nr_atendimento_rn_w > 0) then

		CALL gerar_transferencia_rn(nr_atendimento_p,
				       cd_setor_atendimento_p,
				       cd_unidade_basica_p,
				       cd_unidade_compl_p,
				       null,
				       '',
				       nm_usuario_p,
				       clock_timestamp());


	end if;

	end;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE transferir_paciente_leito ( nr_atendimento_p bigint, cd_setor_atendimento_p bigint, cd_unidade_basica_p text, cd_unidade_compl_p text, nr_acompanhantes_p bigint, cd_setor_atendimento_atual_p bigint, cd_unidade_basica_atual_p text, cd_unidade_compl_atual_p text, cd_estabelecimento_p bigint, cd_perfil_p bigint, nm_usuario_p text) FROM PUBLIC;

