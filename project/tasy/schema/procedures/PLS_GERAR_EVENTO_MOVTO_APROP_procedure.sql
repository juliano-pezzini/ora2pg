-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_evento_movto_aprop ( nr_seq_lote_pgto_p pls_lote_pagamento.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


cd_conta_contabil_w		conta_contabil.cd_conta_contabil%type;
nr_seq_evento_prox_pgto_w	pls_parametro_pagamento.nr_seq_evento_prox_pgto%type;
nr_seq_evento_w			pls_evento_movimento.nr_seq_evento%type;
nr_seq_evento_movto_w		pls_evento_movimento.nr_sequencia%type;
cd_estabelecimento_w		estabelecimento.cd_estabelecimento%type;
ie_evento_orig_prox_pagto_w	pls_parametro_pagamento.ie_evento_orig_prox_pagto%type;
dt_mes_competencia_w		pls_lote_pagamento.dt_mes_competencia%type;
ds_erro_w			varchar(4000);
nr_seq_lote_evento_w		pls_lote_pagamento.nr_sequencia%type;
dt_inicio_comp_w		pls_lote_pagamento.dt_inicio_comp%type;
dt_fim_comp_w			pls_lote_pagamento.dt_fim_comp%type;
ie_gerar_evento_prox_pag_w	pls_parametro_pagamento.ie_gerar_evento_prox_pag%type;


C01 CURSOR(nr_seq_lote_pgto_cp		pls_lote_pagamento.nr_sequencia%type) FOR
	SELECT	sum(x.vl_vencimento) vl_apropriar,
		a.nr_seq_prestador,
		b.nr_sequencia nr_seq_vencimento,
		a.nr_seq_lote,
		x.nr_seq_evento
	from	pls_pag_prest_venc_valor	x,
		pls_pag_prest_vencimento	b,
		pls_pagamento_prestador		a
	where	b.nr_sequencia		= x.nr_seq_vencimento
	and	a.nr_sequencia		= b.nr_seq_pag_prestador
	and	b.ie_proximo_pgto	= 'S'
	and	x.ie_tipo_valor		= 'PP'
	and	coalesce(b.nr_seq_evento_movto::text, '') = ''
	and	coalesce(a.ie_cancelamento::text, '') = ''
	and	a.nr_seq_lote		= nr_seq_lote_pgto_cp
	group 	by a.nr_seq_prestador,
		b.nr_sequencia,
		a.nr_seq_lote,
		x.nr_seq_evento;

BEGIN

select 	max(cd_estabelecimento),
	max(dt_mes_competencia),
	max(dt_inicio_comp_w),
	max(dt_fim_comp_w)
into STRICT	cd_estabelecimento_w,
	dt_mes_competencia_w,
	dt_inicio_comp_w,
	dt_fim_comp_w
from	pls_lote_pagamento
where	nr_sequencia		= nr_seq_lote_pgto_p;

select	max(a.nr_seq_evento_prox_pgto),
	coalesce(max(a.ie_evento_orig_prox_pagto),'N'),
	coalesce(max(a.ie_gerar_evento_prox_pag), 'N')
into STRICT	nr_seq_evento_prox_pgto_w,
	ie_evento_orig_prox_pagto_w,
	ie_gerar_evento_prox_pag_w
from	pls_parametro_pagamento	a
where	a.cd_estabelecimento	= cd_estabelecimento_w;

if (coalesce(nr_seq_evento_prox_pgto_w::text, '') = '') then
	ds_erro_w	:= 'Não foi cadastrado o evento para próximo pagamento. Verificar na função OPS - Gestão de Operadoras, pasta Parâmetros ' || chr(13) || ' da OPS -> Pagamento Produção.';
	CALL wheb_mensagem_pck.exibir_mensagem_abort(191184,'DS_ERRO=' || ds_erro_w);
end if;

if (ie_gerar_evento_prox_pag_w = 'S') then

	for	r_c01_w in c01(nr_seq_lote_pgto_p) loop

		select	max(nr_sequencia)
		into STRICT	nr_seq_lote_evento_w
		from	pls_lote_evento
		where	nr_seq_lote_pgto_apropr = nr_seq_lote_pgto_p;

		if (coalesce(nr_seq_lote_evento_w::text, '') = '') then
			insert into pls_lote_evento(nr_sequencia,
				nm_usuario,
				dt_atualizacao,
				nm_usuario_nrec,
				dt_atualizacao_nrec,
				ie_origem,
				dt_inicio_comp,
				dt_fim_comp,
				nr_seq_lote_pagamento,
				dt_liberacao,
				dt_competencia,
				cd_estabelecimento,
				ds_observacao,
				nr_seq_lote_pgto_apropr)
			values (nextval('pls_lote_evento_seq'),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				'A',
				dt_inicio_comp_w,
				dt_fim_comp_w,
				null,
				clock_timestamp(),
				dt_mes_competencia_w,
				cd_estabelecimento_w,
				'Lote gerado com movimentação de valores negativos para apropriação.',
				nr_seq_lote_pgto_p) returning nr_sequencia into nr_seq_lote_evento_w;
		end if;

		nr_seq_evento_w				:= r_c01_w.nr_seq_evento;
		if (coalesce(nr_seq_evento_w,0) = 0) or (ie_evento_orig_prox_pagto_w = 'N') then
			nr_seq_evento_w			:= nr_seq_evento_prox_pgto_w;
		end if;

		select	nextval('pls_evento_movimento_seq')
		into STRICT	nr_seq_evento_movto_w
		;

		insert into pls_evento_movimento(nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			dt_movimento,
			nr_seq_evento,
			nr_seq_lote,
			nr_seq_prestador,
			vl_movimento,
			ie_forma_pagto,
			nr_seq_periodo,
			ds_observacao)
		values (nr_seq_evento_movto_w,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			trunc(dt_mes_competencia_w,'dd'),
			nr_seq_evento_w,
			nr_seq_lote_evento_w,
			r_c01_w.nr_seq_prestador,
			r_c01_w.vl_apropriar,
			'P',
			null,
			'Evento originado de valor negativo no lote:' || to_char(nr_seq_lote_pgto_p));

		/* Obtem a conta contábil comforme regra OPS - Critérios Contábeis item Regra contábil de eventos financeiros (pagamento produção)*/

		cd_conta_contabil_w := pls_obter_conta_contab_eve_fin(nr_seq_evento_movto_w, cd_conta_contabil_w);

		update	pls_evento_movimento
		set	cd_conta_contabil	= cd_conta_contabil_w
		where	nr_sequencia		= nr_seq_evento_movto_w;

		/* Tratamento para não apropriar duas vezes */

		update	pls_pag_prest_vencimento
		set	ie_proximo_pgto		= 'N',
			nr_seq_evento_movto	= nr_seq_evento_movto_w
		where	nr_sequencia		= r_c01_w.nr_seq_vencimento;
	end loop;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_evento_movto_aprop ( nr_seq_lote_pgto_p pls_lote_pagamento.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;

