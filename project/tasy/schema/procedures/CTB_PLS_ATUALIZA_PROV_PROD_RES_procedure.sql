-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE reg_itens_conta AS (	nr_seq_conta_item		bigint,
					nr_seq_conta_resumo		bigint,
					ie_tipo_conta			varchar(10),
					cd_conta_prov_cred		varchar(20),
					cd_conta_prov_deb		varchar(20),
					cd_classif_prov_cred		varchar(255),
					cd_classif_prov_deb		varchar(255),
					nr_seq_esquema_prov		bigint,
					cd_historico_prov		bigint,
					cd_conta_glosa_cred		varchar(20),
					cd_conta_glosa_deb		varchar(20),
					cd_classif_glosa_cred		varchar(255),
					cd_classif_glosa_deb		varchar(255),
					nr_seq_esquema_glosa		bigint,
					cd_historico_glosa		bigint,
					nr_seq_grupo_ans		bigint,
					cd_historico_vl_ajuste		bigint,
					nr_id				oid);


CREATE OR REPLACE PROCEDURE ctb_pls_atualiza_prov_prod_res ( nr_seq_conta_p pls_conta.nr_sequencia%type, nr_seq_conta_proc_p pls_conta_proc.nr_sequencia%type, nr_seq_conta_mat_p pls_conta_mat.nr_sequencia%type, nr_seq_atualizacao_p pls_movimento_contabil.nr_seq_atualizacao%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, cd_empresa_p empresa.cd_empresa%type, ie_status_prov_pagto_p ctb_livro_auxiliar.ie_tipo_livro_ecd%type, ie_lote_ajuste_prod_p ctb_livro_auxiliar.ie_tipo_livro_ecd%type, qt_movimento_p INOUT integer, dt_referencia_p pls_protocolo_conta.dt_mes_competencia%type) AS $body$
DECLARE

						
cd_classificacao_credito_w	varchar(255);
cd_classificacao_debito_w	varchar(255);
nr_seq_grupo_ans_w		bigint;
ie_preco_w			varchar(2);
ie_tipo_relacao_w		varchar(2);
ie_tipo_ato_w			varchar(255)	:= '1';
ie_regulamentacao_w		varchar(2);
ie_tipo_contratacao_w		varchar(2);
ie_segmentacao_w		varchar(2);
nr_seq_grupo_superior_w		bigint;
nr_seq_grupo_ans_ww		bigint;
ie_classif_grupo_w		varchar(5);
ie_classif_grupo_ww		varchar(5);
dt_referencia_w			timestamp;
nr_seq_plano_w			pls_plano.nr_sequencia%type;
nr_seq_esquema_w		bigint;
cd_conta_credito_w		varchar(20);
cd_conta_debito_w		varchar(20);
cd_historico_padrao_w		bigint;
cd_historico_estorno_w		bigint;
cd_historico_baixa_w		bigint;
ie_tipo_contrato_w		varchar(2);
ie_tipo_segurado_w		varchar(3);
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
ie_tipo_despesa_w		varchar(1);
ds_erro_w			varchar(4000);
ie_tipo_guia_w			varchar(2);
nr_seq_tipo_atendimento_w	bigint;
ie_regime_internacao_w		varchar(1);
ie_ato_cooperado_w		varchar(1);
nr_seq_prestador_w		bigint;
ie_codificacao_w		varchar(2);
vl_fixo_w			varchar(30);
cd_conta_contabil_w		varchar(20);
ie_debito_credito_w		varchar(1);
nr_seq_tipo_prestador_w		bigint;
ie_tipo_prestador_w		varchar(10);
ie_conta_glosa_w		varchar(2);
ds_mascara_w			varchar(40);
cd_conta_glosa_cred_w		varchar(20);
cd_conta_glosa_deb_w		varchar(20);
cd_conta_cred_w			varchar(20);
cd_conta_deb_w			varchar(20);
cd_classificacao_cred_w		varchar(255);
cd_classificacao_deb_w		varchar(255);
cd_classif_glosa_cred_w		varchar(255);
cd_classif_glosa_deb_w		varchar(255);
nr_seq_esquema_ww		bigint;
cd_historico_padrao_ww		bigint;
cd_historico_estorno_ww		bigint;
cd_historico_baixa_ww		bigint;
nr_seq_plano_ww			bigint;
nr_seq_prestador_ww		bigint;
ie_tipo_ptu_ww			varchar(2);
ie_tipo_segurado_ww		varchar(3);
ie_tipo_relacao_ww		varchar(2);
ie_tipo_vinculo_operadora_w	varchar(2);
ie_tipo_vinculo_operadora_ww	varchar(2);
nr_seq_contrato_w		bigint;
nr_seq_contrato_ww		bigint;
nr_seq_grupo_contrato_w		bigint;
nr_seq_grupo_contrato_ww	bigint;
nr_seq_intercambio_w		bigint;
cd_classificacao_item_w		varchar(30);
cd_cgc_prestador_w		varchar(14);
cd_pf_prestador_w		varchar(10);
ie_tipo_guia_ww			varchar(2);
nr_vetor_w			bigint := 0;
i				bigint;
ie_grupo_despesa_ans_w		varchar(10);
nr_seq_material_w		bigint;
ie_tipo_repasse_w		varchar(1);
nr_seq_segurado_w		bigint;
nr_seq_intercambio_ww		bigint;
nr_seq_classif_sca_ww		bigint;
nr_seq_classificacao_sca_w	bigint;
ie_tipo_prestador_ww		varchar(10);
nr_seq_tipo_prestador_ww	bigint;
cd_estabelecimento_setor_w	smallint;
cd_estab_setor_pessoa_ww	smallint;
ie_status_conta_w		varchar(1);
nr_seq_conta_resumo_w		bigint;
ie_existe_movimento_w 		varchar(1)	:= 'N';
ie_liminar_judicial_w		varchar(15);

qt_commit_w			bigint	:= 0;
qt_movimento_w			bigint	:= 0;
nr_id_w				oid;
nr_seq_conta_proc_w		pls_conta_medica_resumo.nr_seq_conta_proc%type;
nr_seq_conta_mat_w		pls_conta_medica_resumo.nr_seq_conta_mat%type;
ie_tipo_compartilhamento_w	pls_esquema_contabil.ie_tipo_compartilhamento%type;
ie_situacao_w			pls_conta_medica_resumo.ie_situacao%type;
ie_benef_remido_w		pls_esquema_contabil.ie_benef_remido%type;
nr_seq_congenere_w		pls_protocolo_conta.nr_seq_congenere%type;
dt_ref_repasse_w		timestamp;
dt_repasse_w			timestamp;
dt_fim_repasse_w		timestamp;
nr_seq_tipo_conta_w		pls_conta.nr_seq_tipo_conta%type;
ie_data_tipo_segurado_w		pls_parametros.ie_data_tipo_segurado%type;

/* ie_conta_glosa_w
conforme dominio 3976
11 - Conta medica - Participacao dos Beneficiarios em eventos/sinistros indenizados
12 - Conta medica - Recuperacao/Ressarcimento de Eventos
*/
type vetor_contas is table of reg_itens_conta index by integer;
vetor_contas_w			vetor_contas;

c_itens CURSOR FOR
	SELECT	b.oid nr_id,
		b.nr_seq_conta_proc,
		null nr_seq_conta_mat,
		b.nr_sequencia nr_seq_resumo,
		b.cd_procedimento,
		b.ie_origem_proced,
		b.ie_tipo_despesa ie_tipo_despesa,
		coalesce(b.nr_seq_grupo_ans,(SELECT	max(a.nr_seq_grupo_ans)
					from	pls_conta_proc		a
					where	a.nr_sequencia  = b.nr_seq_conta_proc)) nr_seq_grupo_ans,
		coalesce(b.ie_ato_cooperado,(select	a.ie_ato_cooperado
					from	pls_conta_proc		a
					where	a.nr_sequencia	= b.nr_seq_conta_proc)) ie_ato_cooperado,
		null nr_seq_material,
		b.nr_seq_prestador_pgto,
		d.ie_tipo_contratacao,
		d.ie_preco,
		d.ie_segmentacao,
		d.ie_regulamentacao,
		p.dt_mes_competencia,
		CASE WHEN ie_data_tipo_segurado_w='P' THEN  p.dt_mes_competencia  ELSE (coalesce((	select	p.dt_procedimento											from    pls_conta_proc p											where   p.nr_sequencia	= b.nr_seq_conta_proc), p.dt_mes_competencia)) END  dt_ref_repasse,
		coalesce(coalesce(a.ie_tipo_segurado,c.ie_tipo_segurado),'B') ie_tipo_segurado,
		coalesce(d.nr_sequencia,0) nr_seq_plano,
		c.ie_tipo_vinculo_operadora,
		c.nr_seq_contrato,
		c.nr_seq_intercambio,
		a.ie_tipo_guia,
		a.nr_seq_tipo_atendimento,
		a.ie_regime_internacao,
		c.nr_sequencia nr_seq_segurado,
		d.nr_seq_classificacao,
		obter_estabelecimento_base(c.cd_pessoa_fisica) cd_estabelecimento_setor,
		a.ie_status,
		(select	max(ie_tipo_relacao)
		from	pls_prestador
		where	nr_sequencia	= b.nr_seq_prestador_pgto) ie_tipo_relacao,
		(select	max(nr_seq_tipo_prestador)
		from	pls_prestador
		where	nr_sequencia	= b.nr_seq_prestador_pgto) nr_seq_tipo_prestador,
		(select	max(cd_pessoa_fisica)
		from	pls_prestador
		where	nr_sequencia	= b.nr_seq_prestador_pgto) cd_pessoa_fisica,
		(select	max(cd_cgc)
		from	pls_prestador
		where	nr_sequencia	= b.nr_seq_prestador_pgto) cd_cgc,
		(select	max(ie_tipo_ptu)
		from	pls_tipo_prestador	x,
			pls_prestador		y
		where	x.nr_sequencia	= y.nr_seq_tipo_prestador
		and	y.nr_sequencia	= b.nr_seq_prestador_pgto) ie_tipo_ptu,
		(select CASE WHEN count(1)=0 THEN  'N'  ELSE 'S' END
		from 	pls_guia_liminar_judicial 	g
		where	g.nr_seq_guia 	= a.nr_seq_guia) ie_liminar_judicial,
		b.ie_situacao,
		pls_obter_se_benef_remido(c.nr_sequencia,p.dt_mes_competencia) ie_benef_remido,
		p.nr_seq_congenere,
		a.nr_seq_tipo_conta
	FROM pls_protocolo_conta p, pls_conta_medica_resumo b, pls_conta a
LEFT OUTER JOIN pls_segurado c ON (a.nr_seq_segurado = c.nr_sequencia)
LEFT OUTER JOIN pls_plano d ON (a.nr_seq_plano = d.nr_sequencia)
WHERE a.nr_sequencia		= b.nr_seq_conta and p.nr_sequencia		= a.nr_seq_protocolo   and a.nr_sequencia		= nr_seq_conta_p and b.ie_status 		<> 'D' and (b.nr_seq_prestador_pgto IS NOT NULL AND b.nr_seq_prestador_pgto::text <> '') and (b.nr_seq_conta_proc IS NOT NULL AND b.nr_seq_conta_proc::text <> '') and ((b.nr_seq_conta_proc = nr_seq_conta_proc_p) or (coalesce(nr_seq_conta_proc_p::text, '') = ''))
	 
union all

	select	b.oid nr_id,
		null nr_seq_conta_proc,
		b.nr_seq_conta_mat,
		b.nr_sequencia nr_seq_resumo,
		null,
		null,
		b.ie_tipo_despesa,
		coalesce(b.nr_seq_grupo_ans,(select	max(a.nr_seq_grupo_ans)
					from	pls_conta_mat		a
					where	a.nr_sequencia  = b.nr_seq_conta_mat)) nr_seq_grupo_ans,
		coalesce(b.ie_ato_cooperado,(select	a.ie_ato_cooperado
					from	pls_conta_mat		a
					where	a.nr_sequencia	= b.nr_seq_conta_mat)) ie_ato_cooperado,
		b.nr_seq_material,
		b.nr_seq_prestador_pgto,
		d.ie_tipo_contratacao,
		d.ie_preco,
		d.ie_segmentacao,
		d.ie_regulamentacao,
		p.dt_mes_competencia,
		CASE WHEN ie_data_tipo_segurado_w='P' THEN  p.dt_mes_competencia  ELSE (coalesce((	select  m.dt_atendimento											from    pls_conta_mat m											where   m.nr_sequencia	= b.nr_seq_conta_mat), p.dt_mes_competencia)) END  dt_ref_repasse,
		coalesce(coalesce(a.ie_tipo_segurado,c.ie_tipo_segurado),'B'),
		coalesce(d.nr_sequencia,0),
		c.ie_tipo_vinculo_operadora,
		c.nr_seq_contrato,
		c.nr_seq_intercambio,
		a.ie_tipo_guia,
		a.nr_seq_tipo_atendimento,
		a.ie_regime_internacao,
		c.nr_sequencia nr_seq_segurado,
		d.nr_seq_classificacao,
		obter_estabelecimento_base(c.cd_pessoa_fisica) cd_estabelecimento_setor,
		a.ie_status,
		(select	max(ie_tipo_relacao)
		from	pls_prestador
		where	nr_sequencia	= b.nr_seq_prestador_pgto) ie_tipo_relacao,
		(select	max(nr_seq_tipo_prestador)
		from	pls_prestador
		where	nr_sequencia	= b.nr_seq_prestador_pgto) nr_seq_tipo_prestador,
		(select	max(cd_pessoa_fisica)
		from	pls_prestador
		where	nr_sequencia	= b.nr_seq_prestador_pgto) cd_pessoa_fisica,
		(select	max(cd_cgc)
		from	pls_prestador
		where	nr_sequencia	= b.nr_seq_prestador_pgto) cd_cgc,
		(select	max(ie_tipo_ptu)
		from	pls_tipo_prestador	x,
			pls_prestador		y
		where	x.nr_sequencia	= y.nr_seq_tipo_prestador
		and	y.nr_sequencia	= b.nr_seq_prestador_pgto) ie_tipo_ptu,
		(select CASE WHEN count(1)=0 THEN  'N'  ELSE 'S' END 
		from 	pls_guia_liminar_judicial 	g
		where	g.nr_seq_guia 	= a.nr_seq_guia) ie_liminar_judicial,
		b.ie_situacao,
		pls_obter_se_benef_remido(c.nr_sequencia,p.dt_mes_competencia) ie_benef_remido,
		p.nr_seq_congenere,
		a.nr_seq_tipo_conta
	FROM pls_protocolo_conta p, pls_conta_medica_resumo b, pls_conta a
LEFT OUTER JOIN pls_segurado c ON (a.nr_seq_segurado = c.nr_sequencia)
LEFT OUTER JOIN pls_plano d ON (a.nr_seq_plano = d.nr_sequencia)
WHERE a.nr_sequencia		= b.nr_seq_conta and p.nr_sequencia		= a.nr_seq_protocolo   and a.nr_sequencia		= nr_seq_conta_p and b.ie_status 		<> 'D' and b.nr_seq_conta	= nr_seq_conta_p and (b.nr_seq_prestador_pgto IS NOT NULL AND b.nr_seq_prestador_pgto::text <> '') and (b.nr_seq_conta_mat IS NOT NULL AND b.nr_seq_conta_mat::text <> '') and ((b.nr_seq_conta_mat = nr_seq_conta_mat_p) or (coalesce(nr_seq_conta_mat_p::text, '') = ''));

c_tipo_movimento CURSOR FOR
	SELECT	11 ie_conta_glosa  --Evento
	
	
union

	SELECT	12 ie_conta_glosa  -- Glosa
	
	where	ie_status_prov_pagto_p = 'F'
	
union

	select	18 ie_conta_glosa  -- Valor Ajuste
	
	where 	ie_lote_ajuste_prod_p = 'P';

c_esquema_contabil CURSOR FOR
	/*+ CHOOSE*/
	SELECT	nr_sequencia,
		cd_historico_padrao,
		cd_historico_estorno,
		cd_historico_baixa
	from	pls_esquema_contabil
	where	ie_tipo_regra		= 'PP'
	and	ie_prestador_codificacao = 'P'
	and	dt_referencia_w between dt_inicio_vigencia and coalesce(dt_fim_vigencia,dt_referencia_w)
	and	coalesce(ie_tipo_movimentacao,ie_conta_glosa_w)	= ie_conta_glosa_w
	and	cd_estabelecimento	= cd_estabelecimento_p
	and	((ie_tipo_segurado	= ie_tipo_segurado_w) or (coalesce(ie_tipo_segurado::text, '') = ''))
	and	((ie_tipo_repasse	= ie_tipo_repasse_w) or (coalesce(ie_tipo_repasse::text, '') = ''))
	and	((ie_tipo_compartilhamento = ie_tipo_compartilhamento_w) or (coalesce(ie_tipo_compartilhamento::text, '') = ''))
	and	((nr_seq_plano		= nr_seq_plano_w) or (coalesce(nr_seq_plano::text, '') = ''))
	and	((nr_seq_prestador	= nr_seq_prestador_w) or (coalesce(nr_seq_prestador::text, '') = ''))
	and	((ie_tipo_relacao	= ie_tipo_relacao_w) or (coalesce(ie_tipo_relacao::text, '') = ''))
	and	((nr_seq_contrato	= nr_seq_contrato_w) or (coalesce(nr_seq_contrato::text, '') = ''))
	and	((ie_tipo_vinculo_operadora	= ie_tipo_vinculo_operadora_w) or (coalesce(ie_tipo_vinculo_operadora::text, '') = ''))
	and	((nr_seq_grupo_contrato	= nr_seq_grupo_contrato_w) or (coalesce(nr_seq_grupo_contrato::text, '') = ''))
	and	((ie_tipo_guia		= ie_tipo_guia_w) or (coalesce(ie_tipo_guia::text, '') = ''))
	and	((nr_seq_intercambio	= nr_seq_intercambio_w) or (coalesce(nr_seq_intercambio::text, '') = ''))
	and	((nr_seq_classif_sca	= nr_seq_classificacao_sca_w) or (coalesce(nr_seq_classif_sca::text, '') = ''))
	and	((ie_tipo_ptu		= ie_tipo_prestador_w) or (coalesce(ie_tipo_ptu::text, '') = ''))
	and	((nr_seq_tipo_prestador	= nr_seq_tipo_prestador_w) or (coalesce(nr_seq_tipo_prestador::text, '') = ''))
	and	((cd_estab_setor_pessoa	= cd_estabelecimento_setor_w) or (coalesce(cd_estab_setor_pessoa::text, '') = ''))
	and	((ie_liminar_judicial 	= ie_liminar_judicial_w) or (coalesce(ie_liminar_judicial,'T') = 'T'))
	and	((ie_benef_remido	= ie_benef_remido_w) or (coalesce(ie_benef_remido::text, '') = ''))
	and	((nr_seq_tipo_conta 	= nr_seq_tipo_conta_w) or (coalesce(nr_seq_tipo_conta::text, '') = ''))
	order by coalesce(ie_tipo_vinculo_operadora,' '),
		coalesce(nr_seq_contrato,0),
		coalesce(nr_seq_prestador,0),
		coalesce(nr_seq_plano,0),
		coalesce(nr_seq_classif_sca,0),
		coalesce(ie_tipo_guia,' '),
		coalesce(ie_tipo_relacao,' '),
		coalesce(nr_seq_tipo_prestador,0),
		coalesce(ie_tipo_ptu,' '),
		coalesce(ie_tipo_compartilhamento,0),
		coalesce(ie_tipo_repasse,' '),
		coalesce(ie_tipo_segurado,' '),
		coalesce(ie_liminar_judicial,'A'),
		coalesce(ie_benef_remido,' '),
		coalesce(nr_seq_intercambio,0),
		coalesce(nr_seq_grupo_contrato,0),
		coalesce(cd_estab_setor_pessoa,0),
		coalesce(nr_seq_tipo_conta,0),
		coalesce(dt_inicio_vigencia,clock_timestamp());
		

c_segmentacao CURSOR FOR
	SELECT
		ie_codificacao,
		vl_fixo,
		cd_conta_contabil,
		ie_debito_credito,
		ds_mascara
	from	pls_esquema_contabil_seg
	where	nr_seq_regra_esquema = nr_seq_esquema_w
	order by	ie_debito_credito,
			nr_seq_apresentacao;


TYPE 		fetch_array IS TABLE OF c_itens%ROWTYPE;
s_array 	fetch_array;
w		integer := 1;
type Vetor is table of fetch_array index by integer;
vetor_itens_w			Vetor;

BEGIN

qt_movimento_w	:= qt_movimento_p;

dt_referencia_w	:= trunc(dt_referencia_p,'Month');

select	coalesce(max(a.ie_data_tipo_segurado),'A')
into STRICT	ie_data_tipo_segurado_w
from	pls_parametros a
where	a.cd_estabelecimento = cd_estabelecimento_p;

open c_itens;
loop
FETCH c_itens BULK COLLECT INTO s_array LIMIT 400;
	Vetor_itens_w(w)	:= s_array;
	w := w + 1;
EXIT WHEN NOT FOUND; /* apply on c_itens */
END LOOP;
CLOSE c_itens;

for i in 1..Vetor_itens_w.COUNT loop
	s_array := Vetor_itens_w(i);
	for z in 1..s_array.COUNT loop
		begin
		nr_id_w				:= s_array[z].nr_id;
		nr_seq_conta_proc_w		:= s_array[z].nr_seq_conta_proc;
		nr_seq_conta_mat_w		:= s_array[z].nr_seq_conta_mat;
		nr_seq_conta_resumo_w		:= s_array[z].nr_seq_resumo;
		cd_procedimento_w		:= s_array[z].cd_procedimento;
		ie_origem_proced_w		:= s_array[z].ie_origem_proced;
		ie_tipo_despesa_w		:= s_array[z].ie_tipo_despesa;
		nr_seq_grupo_ans_w		:= s_array[z].nr_seq_grupo_ans;
		ie_ato_cooperado_w		:= s_array[z].ie_ato_cooperado;
		nr_seq_material_w		:= s_array[z].nr_seq_material;
		nr_seq_prestador_w		:= s_array[z].nr_seq_prestador_pgto;
		ie_tipo_contratacao_w		:= s_array[z].ie_tipo_contratacao;
		ie_preco_w			:= s_array[z].ie_preco;
		ie_segmentacao_w		:= s_array[z].ie_segmentacao;
		ie_regulamentacao_w		:= s_array[z].ie_regulamentacao;
		dt_referencia_w			:= s_array[z].dt_mes_competencia;
		dt_ref_repasse_w		:= s_array[z].dt_ref_repasse;
		ie_tipo_segurado_w		:= s_array[z].ie_tipo_segurado;
		nr_seq_plano_w			:= s_array[z].nr_seq_plano;
		ie_tipo_vinculo_operadora_w	:= s_array[z].ie_tipo_vinculo_operadora;
		nr_seq_contrato_w		:= s_array[z].nr_seq_contrato;
		nr_seq_intercambio_w		:= s_array[z].nr_seq_intercambio;
		ie_tipo_guia_w			:= s_array[z].ie_tipo_guia;
		nr_seq_tipo_atendimento_w	:= s_array[z].nr_seq_tipo_atendimento;
		ie_regime_internacao_w		:= s_array[z].ie_regime_internacao;
		nr_seq_segurado_w		:= s_array[z].nr_seq_segurado;
		nr_seq_classificacao_sca_w	:= s_array[z].nr_seq_classificacao;
		cd_estabelecimento_setor_w	:= s_array[z].cd_estabelecimento_setor;
		ie_status_conta_w		:= s_array[z].ie_status;
		ie_tipo_relacao_w               := s_array[z].ie_tipo_relacao;
		nr_seq_tipo_prestador_w         := s_array[z].nr_seq_tipo_prestador;
		cd_cgc_prestador_w             	:= s_array[z].cd_cgc;
		cd_pf_prestador_w             	:= s_array[z].cd_pessoa_fisica;
		ie_tipo_prestador_w		:= s_array[z].ie_tipo_ptu;
		ie_liminar_judicial_w		:= s_array[z].ie_liminar_judicial;
		ie_situacao_w			:= s_array[z].ie_situacao;
		ie_benef_remido_w		:= s_array[z].ie_benef_remido;
		nr_seq_congenere_w		:= s_array[z].nr_seq_congenere;
		
		SELECT * FROM pls_obter_dados_repasse(	dt_ref_repasse_w, nr_seq_segurado_w, nr_seq_congenere_w, ie_tipo_repasse_w, ie_tipo_compartilhamento_w, dt_repasse_w, dt_fim_repasse_w) INTO STRICT ie_tipo_repasse_w, ie_tipo_compartilhamento_w, dt_repasse_w, dt_fim_repasse_w;

		if (coalesce(nr_seq_contrato_w,0) <> 0) then
			select	CASE WHEN coalesce(cd_pf_estipulante::text, '') = '' THEN  'PJ'  ELSE 'PF' END
			into STRICT	ie_tipo_contrato_w
			from	pls_contrato
			where	nr_sequencia	= nr_seq_contrato_w  LIMIT 1;

			select	max(nr_seq_grupo)
			into STRICT	nr_seq_grupo_contrato_w
			from	pls_contrato_grupo
			where	nr_seq_contrato	= nr_seq_contrato_w  LIMIT 1;
		elsif (coalesce(nr_seq_intercambio_w,0) <> 0) then
			select	CASE WHEN coalesce(cd_pessoa_fisica::text, '') = '' THEN  'PJ'  ELSE 'PF' END
			into STRICT	ie_tipo_contrato_w
			from	pls_intercambio
			where	nr_sequencia	= nr_seq_intercambio_w  LIMIT 1;
		end if;

		if (nr_seq_tipo_prestador_w IS NOT NULL AND nr_seq_tipo_prestador_w::text <> '') then
			select	max(ie_tipo_ptu)
			into STRICT	ie_tipo_prestador_w
			from	pls_tipo_prestador
			where	nr_sequencia	= nr_seq_tipo_prestador_w  LIMIT 1;
		end if;
		
		open c_tipo_movimento;
		loop
		fetch c_tipo_movimento into
			ie_conta_glosa_w;
		EXIT WHEN NOT FOUND; /* apply on c_tipo_movimento */
			begin
			nr_seq_esquema_w		:= null;
			cd_conta_credito_w		:= null;
			cd_conta_debito_w		:= null;
			cd_historico_padrao_w		:= null;
			cd_historico_estorno_w		:= null;
			cd_historico_baixa_w		:= null;
			cd_classificacao_credito_w	:= null;
			cd_classificacao_debito_w	:= null;
			nr_seq_grupo_ans_ww		:= null;
			nr_seq_grupo_superior_w		:= null;

			open c_esquema_contabil;
			loop
			fetch c_esquema_contabil into	
				nr_seq_esquema_ww,
				cd_historico_padrao_ww,
				cd_historico_estorno_ww,
				cd_historico_baixa_ww;
			EXIT WHEN NOT FOUND; /* apply on c_esquema_contabil */
				begin
				
				nr_seq_esquema_w                 := nr_seq_esquema_ww;
				cd_historico_padrao_w            := cd_historico_padrao_ww;
				cd_historico_estorno_w           := cd_historico_estorno_ww;
				cd_historico_baixa_w             := cd_historico_baixa_ww;
				
				end;
			end loop;
			close c_esquema_contabil;

			open c_segmentacao;
			loop
			fetch c_segmentacao into
				ie_codificacao_w,
				vl_fixo_w,
				cd_conta_contabil_w,
				ie_debito_credito_w,
				ds_mascara_w;
			EXIT WHEN NOT FOUND; /* apply on c_segmentacao */
				begin
				cd_classificacao_item_w	:= null;

				if (ie_codificacao_w in ('GA','CG')) then
					if (coalesce(nr_seq_grupo_ans_w,0) > 0) then
						select	max(nr_seq_grupo_superior)
						into STRICT	nr_seq_grupo_superior_w
						from	ans_grupo_despesa
						where	nr_sequencia	= nr_seq_grupo_ans_w;
					end if;

					if (coalesce(nr_seq_grupo_superior_w,0) = 0) then
						nr_seq_grupo_ans_ww	:= nr_seq_grupo_ans_w;
					else
						nr_seq_grupo_ans_ww	:= nr_seq_grupo_superior_w;
					end if;
				
					select	max(ie_tipo_grupo_ans)
					into STRICT	ie_grupo_despesa_ans_w
					from	ans_grupo_despesa
					where	nr_sequencia	= nr_seq_grupo_ans_ww  LIMIT 1;

					if (ie_grupo_despesa_ans_w = 10) then /* 1 - Consultas */
						ie_classif_grupo_w	:= '1';
						ie_classif_grupo_ww	:= '0';
					elsif (ie_grupo_despesa_ans_w = 20) then /* 49 - Exames */
						ie_classif_grupo_w	:= '2';
						ie_classif_grupo_ww	:= '0';
					elsif (ie_grupo_despesa_ans_w = 30) then /* 51 - Terapias */
						ie_classif_grupo_w	:= '3';
						ie_classif_grupo_ww	:= '0';
					elsif (ie_grupo_despesa_ans_w = 41) then /* 7 - Internacao - Honorario medico */
						ie_classif_grupo_w	:= '4';
						ie_classif_grupo_ww	:= '1';
					elsif (ie_grupo_despesa_ans_w = 42) then /* 8 - Internacao - Exames */
						ie_classif_grupo_w	:= '4';
						ie_classif_grupo_ww	:= '2';
					elsif (ie_grupo_despesa_ans_w = 43) then /* 9 - Internacao - Terapias*/
						ie_classif_grupo_w	:= '4';
						ie_classif_grupo_ww	:= '3';
					elsif (ie_grupo_despesa_ans_w = 44) then /* 10 - Internacao - Materiais medicos */
						ie_classif_grupo_w	:= '4';
						ie_classif_grupo_ww	:= '4';
					elsif (ie_grupo_despesa_ans_w = 45) then /* 11 - Internacao - Medicamentos */
						ie_classif_grupo_w	:= '4';
						ie_classif_grupo_ww	:= '5';
					elsif (ie_grupo_despesa_ans_w = 46) then /* 11 - Internacao - Procedimentos com preco fixo */
						ie_classif_grupo_w	:= '4';
						ie_classif_grupo_ww	:= '6';
					elsif (ie_grupo_despesa_ans_w = 49) then /* 12 - Internacao - Outras despesas */
						ie_classif_grupo_w	:= '4';
						ie_classif_grupo_ww	:= '9';
					elsif (ie_grupo_despesa_ans_w = 50) then /* 6 - Outros atendimentos - Ambulatoriais */
						ie_classif_grupo_w	:= '5';
						ie_classif_grupo_ww	:= '0';
					elsif (ie_grupo_despesa_ans_w = 60) then /* 16 - Demais despesas assistenciais */
						ie_classif_grupo_w	:= '6';
						ie_classif_grupo_ww	:= '0';
					elsif (ie_grupo_despesa_ans_w = 70) then /* 70 - Demais despesas assistenciais */
						ie_classif_grupo_w	:= '7';
						ie_classif_grupo_ww	:= '0';
					end if;
				end if;

				if (ie_debito_credito_w = 'C') then /* Classificacao CREDITO */
					if (ie_codificacao_w = 'CR') then /* Codigo reduzido */
						select	max(cd_classificacao_atual)
						into STRICT	cd_classificacao_credito_w
						from	conta_contabil
						where	cd_conta_contabil	= cd_conta_contabil_w;

						cd_conta_credito_w	:= cd_conta_contabil_w;
					elsif (ie_codificacao_w = 'JP') then
						if (coalesce(cd_cgc_prestador_w,0) <> 0) then
							select	max(cd_conta_contabil)
							into STRICT	cd_conta_contabil_w
							from	pessoa_jur_conta_cont a
							where	a.cd_cgc	= cd_cgc_prestador_w
							and	a.cd_empresa	= cd_empresa_p
							and	a.ie_tipo_conta	= 'P'
							and	dt_referencia_w between coalesce(a.dt_inicio_vigencia,dt_referencia_w) and coalesce(a.dt_fim_vigencia,dt_referencia_w);
						elsif (coalesce(cd_pf_prestador_w,0) <> 0) then
							select	max(cd_conta_contabil)
							into STRICT	cd_conta_contabil_w
							from	pessoa_fisica_conta_ctb	a
							where	a.cd_pessoa_fisica 	= cd_pf_prestador_w
							and	a.cd_empresa		= cd_empresa_p
							and	coalesce(a.cd_estabelecimento,cd_estabelecimento_p)	= cd_estabelecimento_p
							and	a.ie_tipo_conta	= 'P'
							and	dt_referencia_w between coalesce(a.dt_inicio_vigencia,dt_referencia_w) and coalesce(a.dt_fim_vigencia,dt_referencia_w);
						end if;

						select	max(cd_classificacao_atual)
						into STRICT	cd_classificacao_credito_w
						from	conta_contabil
						where	cd_conta_contabil = cd_conta_contabil_w;

						cd_conta_credito_w	:= cd_conta_contabil_w;
					elsif (ie_codificacao_w = 'RP') then
						if (coalesce(cd_cgc_prestador_w,0) <> 0) then
							select	max(cd_conta_contabil)
							into STRICT	cd_conta_contabil_w
							from	pessoa_jur_conta_cont a
							where	a.cd_cgc	= cd_cgc_prestador_w
							and	a.cd_empresa	= cd_empresa_p
							and	a.ie_tipo_conta	= 'R'
							and	dt_referencia_w between coalesce(a.dt_inicio_vigencia,dt_referencia_w) and coalesce(a.dt_fim_vigencia,dt_referencia_w);
						elsif (coalesce(cd_pf_prestador_w,0) <> 0) then
							select	max(cd_conta_contabil)
							into STRICT	cd_conta_contabil_w
							from	pessoa_fisica_conta_ctb	a
							where	a.cd_pessoa_fisica 	= cd_pf_prestador_w
							and	a.cd_empresa		= cd_empresa_p
							and	coalesce(a.cd_estabelecimento,cd_estabelecimento_p)	= cd_estabelecimento_p
							and	a.ie_tipo_conta	= 'R'
							and	dt_referencia_w between coalesce(a.dt_inicio_vigencia,dt_referencia_w) and coalesce(a.dt_fim_vigencia,dt_referencia_w);
						end if;

						select	max(cd_classificacao_atual)
						into STRICT	cd_classificacao_credito_w
						from	conta_contabil
						where	cd_conta_contabil = cd_conta_contabil_w;

						cd_conta_credito_w	:= cd_conta_contabil_w;
					elsif (ie_codificacao_w = 'FX') then /* Fixo */
						cd_classificacao_item_w	:= vl_fixo_w;
					elsif (ie_codificacao_w = 'FP') then /* Formacao de Preco */
						if (ie_preco_w in ('1','2','3')) then
							cd_classificacao_item_w	:= pls_atualizar_codificacao_pck.get_formacao_preco(ie_preco_w);
						else
							cd_classificacao_item_w	:= 'FP';
						end if;
					elsif (ie_codificacao_w = 'R') then /* Regulamentacao */
						cd_classificacao_item_w := pls_atualizar_codificacao_pck.get_regulamentacao(ie_regulamentacao_w);
					elsif (ie_codificacao_w = 'TC') then /* Tipo de contratacao */
						if (ie_tipo_contratacao_w in ('I','CE','CA')) then
							cd_classificacao_item_w	:= pls_atualizar_codificacao_pck.get_tipo_contratacao(ie_tipo_contratacao_w);
						else
							cd_classificacao_item_w	:= 'TC';
						end if;
					elsif (ie_codificacao_w = 'TP') then /* Tipo de Contrato (Pessoa fisica ou Juridica) */
						if (ie_tipo_contrato_w in ('PF','PJ')) then
							cd_classificacao_item_w	:= pls_atualizar_codificacao_pck.get_tipo_pessoa_contrato(ie_tipo_contrato_w);
						else
							cd_classificacao_item_w	:= 'TP';
						end if;
					elsif (ie_codificacao_w = 'S') then /* Segmentacao */
						cd_classificacao_item_w	:= lpad(ie_segmentacao_w,2,'0');
					elsif (ie_codificacao_w = 'TA') then /* Tipo de ato cooperado */
						if (ie_ato_cooperado_w in ('1','2','3')) then
							cd_classificacao_item_w	:= pls_atualizar_codificacao_pck.get_ato_cooperado(ie_ato_cooperado_w);
						else
							cd_classificacao_item_w	:= 'TA';
						end if;
					elsif (ie_codificacao_w = 'TR') then /* Tipo de relacao com a OPS */
						cd_classificacao_item_w	:= pls_atualizar_codificacao_pck.get_tipo_relacao(ie_tipo_relacao_w);
					elsif (ie_codificacao_w = 'RC') then /* Tipo de contratacao / Regulamentacao */
						cd_classificacao_item_w	:= pls_atualizar_codificacao_pck.get_contratacao_regulamentacao(ie_tipo_contratacao_w,ie_regulamentacao_w);
					elsif (ie_codificacao_w = 'GA') then /* Grupo ANS */
						if (ie_classif_grupo_w IS NOT NULL AND ie_classif_grupo_w::text <> '') then
							cd_classificacao_item_w	:= ie_classif_grupo_w;
						else
							cd_classificacao_item_w	:= 'GA';
						end if;
					elsif (ie_codificacao_w = 'CG') then /* Complemento grupo ANS */
						if (ie_classif_grupo_ww IS NOT NULL AND ie_classif_grupo_ww::text <> '') then
							cd_classificacao_item_w	:= ie_classif_grupo_ww;
						else
							cd_classificacao_item_w	:= 'CG';
						end if;
					elsif (ie_codificacao_w = 'TD') then /* Tipo de Despesa */
						if (coalesce(nr_seq_material_w::text, '') = '') then
							if (ie_tipo_despesa_w IS NOT NULL AND ie_tipo_despesa_w::text <> '') then
								cd_classificacao_item_w := pls_atualizar_codificacao_pck.get_tipo_despesa(ie_tipo_despesa_w);
							else
								cd_classificacao_item_w := 'TD';
							end if;
						else
							cd_classificacao_item_w := 1;
						end if;
					end if;

					if (cd_classificacao_item_w IS NOT NULL AND cd_classificacao_item_w::text <> '') then
						if (ds_mascara_w = '00') then
							cd_classificacao_item_w	:= lpad(cd_classificacao_item_w,2,'0') || '.';
						elsif (ds_mascara_w = '0.0') then
							cd_classificacao_item_w	:= substr(lpad(cd_classificacao_item_w,2,'0'),1,1) ||'.'||substr(lpad(cd_classificacao_item_w,2,'0'),2,1) || '.';
						elsif (ds_mascara_w = '0_') then
							cd_classificacao_item_w	:= cd_classificacao_item_w;
						else
							cd_classificacao_item_w	:= cd_classificacao_item_w || '.';
						end if;

						cd_classificacao_credito_w	:= cd_classificacao_credito_w || cd_classificacao_item_w;
					end if;
				elsif (ie_debito_credito_w = 'D') then /* Classificacao DEBITO */
					if (ie_codificacao_w = 'CR') then /* Codigo reduzido */
						select	max(cd_classificacao_atual)
						into STRICT	cd_classificacao_debito_w
						from	conta_contabil
						where	cd_conta_contabil	= cd_conta_contabil_w;

						cd_conta_debito_w	:= cd_conta_contabil_w;
					elsif (ie_codificacao_w = 'JP') then
						if (coalesce(cd_cgc_prestador_w,0) <> 0) then
							select	max(cd_conta_contabil)
							into STRICT	cd_conta_contabil_w
							from	pessoa_jur_conta_cont a
							where	a.cd_cgc	= cd_cgc_prestador_w
							and	a.cd_empresa	= cd_empresa_p
							and	a.ie_tipo_conta	= 'P'
							and	dt_referencia_w between coalesce(a.dt_inicio_vigencia,dt_referencia_w) and coalesce(a.dt_fim_vigencia,dt_referencia_w);
						elsif (coalesce(cd_pf_prestador_w,0) <> 0) then
							select	max(cd_conta_contabil)
							into STRICT	cd_conta_contabil_w
							from	pessoa_fisica_conta_ctb	a
							where	a.cd_pessoa_fisica	= cd_pf_prestador_w
							and	a.cd_empresa		= cd_empresa_p
							and	coalesce(a.cd_estabelecimento,cd_estabelecimento_p)	= cd_estabelecimento_p
							and	a.ie_tipo_conta	= 'P'
							and	dt_referencia_w between coalesce(a.dt_inicio_vigencia,dt_referencia_w) and coalesce(a.dt_fim_vigencia,dt_referencia_w);
						end if;

						select	max(cd_classificacao_atual)
						into STRICT	cd_classificacao_debito_w
						from	conta_contabil
						where	cd_conta_contabil	= cd_conta_contabil_w;

						cd_conta_debito_w	:= cd_conta_contabil_w;
					elsif (ie_codificacao_w = 'RP') then
						if (coalesce(cd_cgc_prestador_w,0) <> 0) then
							select	max(cd_conta_contabil)
							into STRICT	cd_conta_contabil_w
							from	pessoa_jur_conta_cont a
							where	a.cd_cgc	= cd_cgc_prestador_w
							and	a.cd_empresa	= cd_empresa_p
							and	a.ie_tipo_conta	= 'R'
							and	dt_referencia_w between coalesce(a.dt_inicio_vigencia,dt_referencia_w) and coalesce(a.dt_fim_vigencia,dt_referencia_w);
						elsif (coalesce(cd_pf_prestador_w,0) <> 0) then
							select	max(cd_conta_contabil)
							into STRICT	cd_conta_contabil_w
							from	pessoa_fisica_conta_ctb	a
							where	a.cd_pessoa_fisica	= cd_pf_prestador_w
							and	a.cd_empresa		= cd_empresa_p
							and	coalesce(a.cd_estabelecimento,cd_estabelecimento_p)	= cd_estabelecimento_p
							and	a.ie_tipo_conta	= 'R'
							and	dt_referencia_w between coalesce(a.dt_inicio_vigencia,dt_referencia_w) and coalesce(a.dt_fim_vigencia,dt_referencia_w);
						end if;

						select	max(cd_classificacao_atual)
						into STRICT	cd_classificacao_debito_w
						from	conta_contabil
						where	cd_conta_contabil	= cd_conta_contabil_w;

						cd_conta_debito_w	:= cd_conta_contabil_w;
					elsif (ie_codificacao_w = 'FX') then /* Fixo */
						cd_classificacao_item_w	:= vl_fixo_w;
					elsif (ie_codificacao_w = 'FP') then /* Formacao de Preco */
						if (ie_preco_w in ('1','2','3')) then
							cd_classificacao_item_w	:= pls_atualizar_codificacao_pck.get_formacao_preco(ie_preco_w);
						else
							cd_classificacao_item_w	:= 'FP';
						end if;
					elsif (ie_codificacao_w = 'R') then /* Regulamentacao */
						cd_classificacao_item_w	:= pls_atualizar_codificacao_pck.get_regulamentacao(ie_regulamentacao_w);
					elsif (ie_codificacao_w = 'TC') then /* Tipo de contratacao */
						if (ie_tipo_contratacao_w in ('I','CE','CA')) then
							cd_classificacao_item_w	:= pls_atualizar_codificacao_pck.get_tipo_contratacao(ie_tipo_contratacao_w);
						else
							cd_classificacao_item_w	:= 'TC';
						end if;
					elsif (ie_codificacao_w = 'S') then /* Segmentacao */
						cd_classificacao_item_w	:= lpad(ie_segmentacao_w,2,'0');
					elsif (ie_codificacao_w = 'TP') then /* Tipo de Contrato (Pessoa fisica ou Juridica) */
						if (ie_tipo_contrato_w in ('PF','PJ')) then
							cd_classificacao_item_w	:= pls_atualizar_codificacao_pck.get_tipo_pessoa_contrato(ie_tipo_contrato_w);
						else
							cd_classificacao_item_w	:= 'TP';
						end if;
					elsif (ie_codificacao_w = 'TA') then /* Tipo de ato cooperado */
						if (ie_ato_cooperado_w in ('1','2','3')) then
							cd_classificacao_item_w	:= pls_atualizar_codificacao_pck.get_ato_cooperado(ie_ato_cooperado_w);
						else
							cd_classificacao_item_w	:= 'TA';
						end if;
					elsif (ie_codificacao_w = 'TR') then /* Tipo de relacao com a OPS */
						cd_classificacao_item_w	:= pls_atualizar_codificacao_pck.get_tipo_relacao(ie_tipo_relacao_w);
					elsif (ie_codificacao_w = 'RC') then /* Tipo de contratacao / Regulamentacao */
						cd_classificacao_item_w	:= pls_atualizar_codificacao_pck.get_contratacao_regulamentacao(ie_tipo_contratacao_w,ie_regulamentacao_w);
					elsif (ie_codificacao_w = 'GA') then /* Grupo ANS */
						if (ie_classif_grupo_w IS NOT NULL AND ie_classif_grupo_w::text <> '') then
							cd_classificacao_item_w	:= ie_classif_grupo_w;
						else
							cd_classificacao_item_w	:= 'GA';
						end if;
					elsif (ie_codificacao_w = 'CG') then /* Complemento grupo ANS */
						if (ie_classif_grupo_ww IS NOT NULL AND ie_classif_grupo_ww::text <> '') then
							cd_classificacao_item_w	:= ie_classif_grupo_ww;
						else
							cd_classificacao_item_w	:= 'CG';
						end if;
					elsif (ie_codificacao_w = 'TD') then /* Tipo de Despesa */
						if (coalesce(nr_seq_material_w::text, '') = '') then
							if (ie_tipo_despesa_w IS NOT NULL AND ie_tipo_despesa_w::text <> '') then
								cd_classificacao_item_w := pls_atualizar_codificacao_pck.get_tipo_despesa(ie_tipo_despesa_w);
							else
								cd_classificacao_item_w := 'TD';
							end if;
						else
							cd_classificacao_item_w := 1;
						end if;
					end if;

					if (cd_classificacao_item_w IS NOT NULL AND cd_classificacao_item_w::text <> '') then
						if (ds_mascara_w = '00') then
							cd_classificacao_item_w	:= lpad(cd_classificacao_item_w,2,'0') || '.';
						elsif (ds_mascara_w = '0.0') then
							cd_classificacao_item_w	:= substr(lpad(cd_classificacao_item_w,2,'0'),1,1) ||'.'||substr(lpad(cd_classificacao_item_w,2,'0'),2,1) || '.';
						elsif (ds_mascara_w = '0_') then
							cd_classificacao_item_w	:= cd_classificacao_item_w;
						else
							cd_classificacao_item_w	:= cd_classificacao_item_w || '.';
						end if;

						cd_classificacao_debito_w	:= cd_classificacao_debito_w || cd_classificacao_item_w;
					end if;
				end if;
				end;
			end loop;
			close c_segmentacao;
			
			/* Remover o ultimo ponto da classificacao */

			if (substr(cd_classificacao_credito_w,length(cd_classificacao_credito_w),length(cd_classificacao_credito_w)) = '.') then
				cd_classificacao_credito_w	:= substr(cd_classificacao_credito_w,1,length(cd_classificacao_credito_w)-1);
			end if;

			if (substr(cd_classificacao_debito_w,length(cd_classificacao_debito_w),length(cd_classificacao_debito_w)) = '.') then
				cd_classificacao_debito_w	:= substr(cd_classificacao_debito_w,1,length(cd_classificacao_debito_w)-1);
			end if;

			if (coalesce(cd_conta_credito_w::text, '') = '') then
				cd_conta_credito_w	:= ctb_obter_conta_classif(cd_classificacao_credito_w,dt_referencia_w,cd_estabelecimento_p);
			end if;

			if (coalesce(cd_conta_debito_w::text, '') = '') then
				cd_conta_debito_w	:= ctb_obter_conta_classif(cd_classificacao_debito_w,dt_referencia_w,cd_estabelecimento_p);
			end if;

			if (ie_conta_glosa_w = 11) or (ie_conta_glosa_w = 18) then
				if 	(cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '' AND ie_origem_proced_w IS NOT NULL AND ie_origem_proced_w::text <> '') then
					if (nr_seq_atualizacao_p IS NOT NULL AND nr_seq_atualizacao_p::text <> '') and (ie_status_conta_w <> 'C') and (ie_situacao_w = 'A') then
						if (coalesce(nr_seq_esquema_w::text, '') = '') then
							CALL pls_gravar_mov_contabil(nr_seq_atualizacao_p,1, null, nr_seq_conta_proc_w, nr_seq_conta_mat_w, 'C', null, null, null, null, null, null, null, null, null, null, nr_seq_conta_resumo_w, nm_usuario_p, nr_seq_esquema_w);
						elsif	(((coalesce(cd_conta_credito_w::text, '') = '') or (coalesce(cd_conta_debito_w::text, '') = '')) and (ie_conta_glosa_w <> 18)) then
							CALL pls_gravar_mov_contabil(nr_seq_atualizacao_p,2, null, nr_seq_conta_proc_w, nr_seq_conta_mat_w, 'C', null, null, null, null, null, null, null, null, null, null, nr_seq_conta_resumo_w, nm_usuario_p, nr_seq_esquema_w);
						elsif (coalesce(nr_seq_plano_w, 0) = 0) then
							CALL pls_gravar_mov_contabil(nr_seq_atualizacao_p,8, null, nr_seq_conta_proc_w, nr_seq_conta_mat_w, 'C', null, null, null, null, null, null, null, null, null, null, nr_seq_conta_resumo_w, nm_usuario_p, nr_seq_esquema_w);
                                                end if;
					end if;
				elsif (ie_tipo_despesa_w IS NOT NULL AND ie_tipo_despesa_w::text <> '') then
					if (nr_seq_atualizacao_p IS NOT NULL AND nr_seq_atualizacao_p::text <> '') and (ie_status_conta_w <> 'C') and (ie_situacao_w = 'A') then
						if (coalesce(nr_seq_esquema_w::text, '') = '') then
							CALL pls_gravar_mov_contabil(nr_seq_atualizacao_p,1, null, nr_seq_conta_proc_w, nr_seq_conta_mat_w, 'C', null, null, null, null, null, null, null, null, null, null, nr_seq_conta_resumo_w, nm_usuario_p, nr_seq_esquema_w);
						elsif	(((coalesce(cd_conta_credito_w::text, '') = '') or (coalesce(cd_conta_debito_w::text, '') = '')) and (ie_conta_glosa_w <> 18)) then
							CALL pls_gravar_mov_contabil(nr_seq_atualizacao_p,2, null, nr_seq_conta_proc_w, nr_seq_conta_mat_w, 'C', null, null, null, null, null, null, null, null, null, null, nr_seq_conta_resumo_w, nm_usuario_p, nr_seq_esquema_w);
						elsif (coalesce(nr_seq_plano_w, 0) = 0) then
							CALL pls_gravar_mov_contabil(nr_seq_atualizacao_p,8, null, nr_seq_conta_proc_w, nr_seq_conta_mat_w, 'C', null, null, null, null, null, null, null, null, null, null, nr_seq_conta_resumo_w, nm_usuario_p, nr_seq_esquema_w);
                                                end if;
					end if;
				end if;
				
				nr_vetor_w	:= null;

				for i in 1..vetor_contas_w.count loop
					if (vetor_contas_w[i].nr_seq_conta_resumo = nr_seq_conta_resumo_w) then
						nr_vetor_w	:= i;
						exit;
					end if;
				end loop;

				if (coalesce(nr_vetor_w::text, '') = '') then
					nr_vetor_w	:= vetor_contas_w.count+1;
				end if;
				
				if (ie_conta_glosa_w = 11) then
					vetor_contas_w[nr_vetor_w].nr_seq_conta_resumo		:= nr_seq_conta_resumo_w;
					vetor_contas_w[nr_vetor_w].nr_id			:= nr_id_w;
					vetor_contas_w[nr_vetor_w].cd_conta_prov_cred		:= cd_conta_credito_w;
					vetor_contas_w[nr_vetor_w].cd_conta_prov_deb	        := cd_conta_debito_w;
					vetor_contas_w[nr_vetor_w].cd_classif_prov_cred	        := cd_classificacao_credito_w;
					vetor_contas_w[nr_vetor_w].cd_classif_prov_deb	        := cd_classificacao_debito_w;
					vetor_contas_w[nr_vetor_w].nr_seq_esquema_prov	        := nr_seq_esquema_w;
					vetor_contas_w[nr_vetor_w].cd_historico_prov	        := cd_historico_padrao_w;
					vetor_contas_w[nr_vetor_w].nr_seq_grupo_ans	        := nr_seq_grupo_ans_ww;
				elsif (ie_conta_glosa_w = 18) then
					vetor_contas_w[nr_vetor_w].cd_historico_vl_ajuste	:= cd_historico_padrao_w;
					vetor_contas_w[nr_vetor_w].nr_id			:= nr_id_w;
				end if;
				
			elsif (ie_conta_glosa_w = 12) then
				if 	(cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '' AND ie_origem_proced_w IS NOT NULL AND ie_origem_proced_w::text <> '') then
					if (nr_seq_atualizacao_p IS NOT NULL AND nr_seq_atualizacao_p::text <> '') and (ie_status_conta_w <> 'C') and (ie_situacao_w = 'A') then
						if (coalesce(nr_seq_esquema_w::text, '') = '') then
							CALL pls_gravar_mov_contabil(nr_seq_atualizacao_p,1, null, nr_seq_conta_proc_w, nr_seq_conta_mat_w, 'G', null, null, null, null, null, null, null, null, null, null, nr_seq_conta_resumo_w, nm_usuario_p, nr_seq_esquema_w);
						elsif	(((coalesce(cd_conta_credito_w::text, '') = '') or (coalesce(cd_conta_debito_w::text, '') = '')) and (ie_conta_glosa_w <> 18)) then
							CALL pls_gravar_mov_contabil(nr_seq_atualizacao_p,2, null, nr_seq_conta_proc_w, nr_seq_conta_mat_w, 'G', null, null, null, null, null, null, null, null, null, null, nr_seq_conta_resumo_w, nm_usuario_p, nr_seq_esquema_w);
						elsif (coalesce(nr_seq_plano_w, 0) = 0) then
							CALL pls_gravar_mov_contabil(nr_seq_atualizacao_p,8, null, nr_seq_conta_proc_w, nr_seq_conta_mat_w, 'C', null, null, null, null, null, null, null, null, null, null, nr_seq_conta_resumo_w, nm_usuario_p, nr_seq_esquema_w);
                                                end if;
					end if;
				elsif (nr_seq_conta_mat_w IS NOT NULL AND nr_seq_conta_mat_w::text <> '') then
					if (nr_seq_atualizacao_p IS NOT NULL AND nr_seq_atualizacao_p::text <> '') and (ie_status_conta_w <> 'C') and (ie_situacao_w = 'A') then
						if (coalesce(nr_seq_esquema_w::text, '') = '') then
							CALL pls_gravar_mov_contabil(nr_seq_atualizacao_p,1, null, nr_seq_conta_proc_w, nr_seq_conta_mat_w, 'G', null, null, null, null, null, null, null, null, null, null, nr_seq_conta_resumo_w, nm_usuario_p, nr_seq_esquema_w);
						elsif	(((coalesce(cd_conta_credito_w::text, '') = '') or (coalesce(cd_conta_debito_w::text, '') = '')) and (ie_conta_glosa_w <> 18)) then
							CALL pls_gravar_mov_contabil(nr_seq_atualizacao_p,2, null, nr_seq_conta_proc_w, nr_seq_conta_mat_w, 'G', null, null, null, null, null, null, null, null, null, null, nr_seq_conta_resumo_w, nm_usuario_p, nr_seq_esquema_w);
						elsif (coalesce(nr_seq_plano_w, 0) = 0) then
							CALL pls_gravar_mov_contabil(nr_seq_atualizacao_p,8, null, nr_seq_conta_proc_w, nr_seq_conta_mat_w, 'C', null, null, null, null, null, null, null, null, null, null, nr_seq_conta_resumo_w, nm_usuario_p, nr_seq_esquema_w);
                                                end if;
					end if;
				end if;

				nr_vetor_w	:= null;

				for i in 1..vetor_contas_w.count loop
					if (vetor_contas_w[i].nr_seq_conta_resumo = nr_seq_conta_resumo_w) then
						nr_vetor_w	:= i;
						exit;
					end if;
				end loop;

				if (coalesce(nr_vetor_w::text, '') = '') then
					nr_vetor_w	:= vetor_contas_w.count+1;
				end if;
				
				vetor_contas_w[nr_vetor_w].nr_seq_conta_resumo		:= nr_seq_conta_resumo_w;
				vetor_contas_w[nr_vetor_w].nr_id			:= nr_id_w;
				vetor_contas_w[nr_vetor_w].cd_conta_glosa_cred		:= cd_conta_credito_w;
				vetor_contas_w[nr_vetor_w].cd_conta_glosa_deb		:= cd_conta_debito_w;
				vetor_contas_w[nr_vetor_w].cd_classif_glosa_cred 	:= cd_classificacao_credito_w;
				vetor_contas_w[nr_vetor_w].cd_classif_glosa_deb		:= cd_classificacao_debito_w;
				vetor_contas_w[nr_vetor_w].nr_seq_esquema_glosa		:= nr_seq_esquema_w;
				vetor_contas_w[nr_vetor_w].cd_historico_glosa		:= cd_historico_padrao_w;
				vetor_contas_w[nr_vetor_w].nr_seq_grupo_ans		:= nr_seq_grupo_ans_ww;
			end if;
			end;
		end loop;
		close c_tipo_movimento;
		end;
	end loop;
end loop;

for i in 1 .. vetor_contas_w.count loop
	begin
			
	update	pls_conta_medica_resumo
	set	cd_conta_prov_cred		= vetor_contas_w[i].cd_conta_prov_cred,
		cd_conta_prov_deb		= vetor_contas_w[i].cd_conta_prov_deb,
		cd_classif_prov_cred		= vetor_contas_w[i].cd_classif_prov_cred,
		cd_classif_prov_deb		= vetor_contas_w[i].cd_classif_prov_deb,
		nr_seq_esquema_prov		= vetor_contas_w[i].nr_seq_esquema_prov,
		cd_historico_prov	        = vetor_contas_w[i].cd_historico_prov,
		nr_seq_grupo_ans	        = vetor_contas_w[i].nr_seq_grupo_ans,
		cd_conta_glosa_cred		= CASE WHEN ie_status_prov_pagto_p='F' THEN vetor_contas_w[i].cd_conta_glosa_cred  ELSE cd_conta_glosa_cred END ,
		cd_conta_glosa_deb		= CASE WHEN ie_status_prov_pagto_p='F' THEN vetor_contas_w[i].cd_conta_glosa_deb  ELSE cd_conta_glosa_deb END ,
		cd_classif_glosa_cred		= CASE WHEN ie_status_prov_pagto_p='F' THEN vetor_contas_w[i].cd_classif_glosa_cred  ELSE cd_classif_glosa_cred END ,
		cd_classif_glosa_deb		= CASE WHEN ie_status_prov_pagto_p='F' THEN vetor_contas_w[i].cd_classif_glosa_deb  ELSE cd_classif_glosa_deb END ,
		nr_seq_esquema_glosa		= CASE WHEN ie_status_prov_pagto_p='F' THEN vetor_contas_w[i].nr_seq_esquema_glosa  ELSE nr_seq_esquema_glosa END ,
		cd_historico_glosa		= CASE WHEN ie_status_prov_pagto_p='F' THEN vetor_contas_w[i].cd_historico_glosa  ELSE cd_historico_glosa END ,
		cd_historico_vl_ajuste		= CASE WHEN ie_lote_ajuste_prod_p='P' THEN  vetor_contas_w[i].cd_historico_vl_ajuste  ELSE cd_historico_vl_ajuste END
	where	rowid				= vetor_contas_w[i].nr_id;
	
	qt_movimento_w	:= qt_movimento_w + 1;
	
	if (mod(i,1000) = 0) then
		commit;
	end if;
	end;
end loop;

commit;

qt_movimento_p	:= qt_movimento_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_pls_atualiza_prov_prod_res ( nr_seq_conta_p pls_conta.nr_sequencia%type, nr_seq_conta_proc_p pls_conta_proc.nr_sequencia%type, nr_seq_conta_mat_p pls_conta_mat.nr_sequencia%type, nr_seq_atualizacao_p pls_movimento_contabil.nr_seq_atualizacao%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, cd_empresa_p empresa.cd_empresa%type, ie_status_prov_pagto_p ctb_livro_auxiliar.ie_tipo_livro_ecd%type, ie_lote_ajuste_prod_p ctb_livro_auxiliar.ie_tipo_livro_ecd%type, qt_movimento_p INOUT integer, dt_referencia_p pls_protocolo_conta.dt_mes_competencia%type) FROM PUBLIC;

