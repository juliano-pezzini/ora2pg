-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_w_gestao_ocupacional ( nm_usuario_p text, nr_seq_regiao_p bigint default null, nr_seq_micro_regiao_p bigint default null, cd_cep_p text default null, ds_endereco_p text default null, ds_bairro_p text default null, cd_cidadao_p text default null, nr_cpf_p text default null, dt_inicio_cons_p timestamp default null, dt_fim_cons_p timestamp default null, cd_profissional_p text default null, nr_seq_servico_p bigint default null, ie_vacina_pend_p text default 'N', ie_gravida_p text default 'N', ie_exame_pend_p text default 'N', ie_receita_fim_p text default 'N', ie_tipo_doenca_p text default null, cd_ciap_p text default null, cd_doenca_p text default null, nr_seq_problema_p bigint default null, ie_cronico_p text default null, ie_intensidade_p text default 'T', ie_tipo_domicilio_p text default null, ie_tratamento_agua_p text default null, ie_tipo_agua_p text default null, ie_destino_lixo_p text default null, ie_esgoto_sanitario_p text default null, ie_tipo_comunicacao_p text default null, ie_tipo_doenca_res_p text default null, ie_tipo_transporte_p text default null, ie_sem_energia_eletrica_p text default 'N', cd_empresa_refer_p bigint default null, nr_seq_setor_p bigint default null) AS $body$
DECLARE

					
					
nr_atendimento_w		bigint;
cd_pessoa_fisica_w		varchar(10);
qt_tev_w				bigint;	
ie_inserir_w			boolean	:= true;
ie_inserir_micro_w		boolean	:= true;
ie_inserir_resid_w		boolean	:= true;
ie_inserir_cidadao_w	boolean	:= true;

ie_registro_w			varchar(1);
nr_seq_area_w			bigint;
nr_seq_micro_area_w		bigint;
cd_domicilio_w			varchar(16);
ds_domicilio_w			varchar(255);

qt_residencia_w			bigint;
qt_cidadaos_w			bigint;

qt_cidadaos_res_w		bigint;
qt_cidadaos_micro_w		bigint;
qt_cidadaos_reg_w		bigint;


qt_residencia_micro_w	bigint;
qt_residencia_reg_w		bigint;

qt_consult_pac_w		bigint;
qt_consult_res_w		bigint;
qt_consult_micro_w		bigint;
qt_consult_reg_w		bigint;

qt_falta_cons_pac_w  	bigint;	
qt_falta_cons_res_w  	bigint;
qt_falta_cons_micro_w  	bigint;
qt_falta_cons_reg_w  	bigint;

qt_vacina_pac_w  		bigint;	
qt_vacina_res_w  		bigint;
qt_vacina_micro_w  		bigint;
qt_vacina_reg_w  		bigint;

qt_gravida_pac_w  		bigint;	
qt_gravida_res_w  		bigint;
qt_gravida_micro_w  	bigint;
qt_gravida_reg_w  		bigint;

qt_exame_pend_pac_w  	bigint;	
qt_exame_pend_res_w  	bigint;
qt_exame_pend_micro_w  	bigint;
qt_exame_pend_reg_w  	bigint;

qt_receita_pend_pac_w  	bigint;	
qt_receita_pend_res_w  	bigint;
qt_receita_pend_micro_w bigint;
qt_receita_pend_reg_w  	bigint;

ds_foco_doenca_pac_w	varchar(2000);
qt_foco_doenca_res_w	bigint;
qt_foco_doenca_micro_w	bigint;
qt_foco_doenca_reg_w	bigint;

nr_seq_resid_w			bigint;
nr_seq_micro_w			bigint;
nr_seq_regiao_w			bigint;

ie_cronico_pac_w			varchar(1);
qt_cronico_pac_w			bigint;
qt_cronico_res_w			bigint;
qt_cronico_micro_w			bigint;
qt_cronico_reg_w			bigint;


ie_tipo_domicilio_w		varchar(1);
ie_tratamento_agua_w	varchar(1);
ie_tipo_agua_w			varchar(1);
ie_destino_lixo_w		varchar(1);
ie_esgoto_sanitario_w	varchar(1);
ie_tipo_comunicacao_w	varchar(1);
ie_tipo_doenca_res_w	varchar(1);
ie_tipo_transporte_w	varchar(1);
ie_energia_eletrica_w	varchar(1);

ie_condicao_residencia_w varchar(1);
ie_condicao_res_micro_w  varchar(1);
ie_condicao_res_reg_w	 varchar(1);

C01 CURSOR FOR
	SELECT 	a.nr_sequencia
	from   	psf_area a
	where   a.nr_sequencia = coalesce(nr_seq_regiao_p,a.nr_sequencia)
	and		coalesce(a.ie_situacao,'A') = 'A'
	and		(((coalesce(nr_seq_micro_regiao_p::text, '') = '') and (coalesce(cd_cep_p::text, '') = '')  and (coalesce(ds_endereco_p::text, '') = '' )and (coalesce(ds_bairro_p::text, '') = '') and (coalesce(cd_cidadao_p::text, '') = '') and (coalesce(nr_cpf_p::text, '') = '' ) and (coalesce(dt_inicio_cons_p::text, '') = '') and (coalesce(dt_fim_cons_p::text, '') = '') and (coalesce(cd_profissional_p::text, '') = '') and (coalesce(nr_seq_servico_p::text, '') = '') and (coalesce(ie_vacina_pend_p,'N') = 'N') and (coalesce(ie_gravida_p,'N') = 'N') and (coalesce(ie_exame_pend_p,'N') = 'N') and (coalesce(ie_receita_fim_p,'N') = 'N') and (coalesce(nr_seq_problema_p::text, '') = '') and (coalesce(ie_tipo_doenca_p::text, '') = '') and (coalesce(cd_ciap_p::text, '') = '') and (coalesce(cd_doenca_p::text, '') = '') and (	coalesce(ie_cronico_p,'N') = 'N') and (coalesce(ie_intensidade_p,'T') = 'T') and (coalesce(ie_tipo_domicilio_p::text, '') = '') and (coalesce(ie_tratamento_agua_p::text, '') = '') and (coalesce(ie_tipo_agua_p::text, '') = '') and (coalesce(ie_destino_lixo_p::text, '') = '') and (coalesce(ie_esgoto_sanitario_p::text, '') = '') and (coalesce(ie_tipo_comunicacao_p::text, '') = '') and (coalesce(ie_tipo_doenca_res_p::text, '') = '') and (coalesce(ie_tipo_transporte_p::text, '') = '') and (coalesce( ie_sem_energia_eletrica_p,'N') = 'N') and (coalesce(cd_empresa_refer_p::text, '') = '') and (coalesce(nr_seq_setor_p::text, '') = ''))
			or (Obter_se_exibe_populacional(a.nr_sequencia,nr_seq_micro_regiao_p,'R',cd_cep_p,ds_endereco_p,ds_bairro_p,null,cd_cidadao_p,nr_cpf_p,dt_inicio_cons_p,dt_fim_cons_p,cd_profissional_p,
				nr_seq_servico_p,ie_vacina_pend_p,ie_gravida_p,ie_exame_pend_p,ie_receita_fim_p,ie_tipo_doenca_p,cd_ciap_p,cd_doenca_p,nr_seq_problema_p,ie_cronico_p, ie_intensidade_p,
				ie_tipo_domicilio_p,ie_tratamento_agua_p,ie_tipo_agua_p,ie_destino_lixo_p,ie_esgoto_sanitario_p,ie_tipo_comunicacao_p,ie_tipo_doenca_res_p,ie_tipo_transporte_p,ie_sem_energia_eletrica_p,
				cd_empresa_refer_p,nr_seq_setor_p) ='S'))
	order by a.ds_area;
					
C02 CURSOR FOR
	SELECT 	nr_sequencia
	from    psf_micro_area
	where   nr_seq_area = nr_seq_area_w
	and		nr_sequencia = coalesce(nr_seq_micro_regiao_p,nr_sequencia)
	and		(((coalesce(cd_cep_p::text, '') = '')  and (coalesce(ds_endereco_p::text, '') = '' )and (coalesce(ds_bairro_p::text, '') = '') and (coalesce(cd_cidadao_p::text, '') = '') and (coalesce(nr_cpf_p::text, '') = '' ) and (coalesce(dt_inicio_cons_p::text, '') = '') and (coalesce(dt_fim_cons_p::text, '') = '') and (coalesce(cd_profissional_p::text, '') = '') and (coalesce(nr_seq_servico_p::text, '') = '')and (coalesce(ie_vacina_pend_p,'N') = 'N') and (coalesce(ie_gravida_p,'N') = 'N') and (coalesce(ie_exame_pend_p,'N') = 'N') and (coalesce(ie_receita_fim_p,'N') = 'N') and (coalesce(nr_seq_problema_p::text, '') = '') and (coalesce(ie_tipo_doenca_p::text, '') = '') and (coalesce(cd_ciap_p::text, '') = '') and (coalesce(cd_doenca_p::text, '') = '') and (coalesce(ie_cronico_p,'N') = 'N') and (coalesce(ie_intensidade_p,'T') = 'T') and (coalesce(ie_tipo_domicilio_p::text, '') = '') and (coalesce(ie_tratamento_agua_p::text, '') = '') and (coalesce(ie_tipo_agua_p::text, '') = '') and (coalesce(ie_destino_lixo_p::text, '') = '') and (coalesce(ie_esgoto_sanitario_p::text, '') = '') and (coalesce(ie_tipo_comunicacao_p::text, '') = '') and (coalesce(ie_tipo_doenca_res_p::text, '') = '') and (coalesce(ie_tipo_transporte_p::text, '') = '') and (coalesce( ie_sem_energia_eletrica_p,'N') = 'N') and (coalesce(cd_empresa_refer_p::text, '') = '') and (coalesce(nr_seq_setor_p::text, '') = ''))
			or (Obter_se_exibe_populacional(nr_seq_area,nr_sequencia,'M',cd_cep_p,ds_endereco_p,ds_bairro_p,null,cd_cidadao_p,nr_cpf_p,dt_inicio_cons_p,dt_fim_cons_p,cd_profissional_p,
			nr_seq_servico_p,ie_vacina_pend_p,ie_gravida_p,ie_exame_pend_p,ie_receita_fim_p,ie_tipo_doenca_p,cd_ciap_p,cd_doenca_p,nr_seq_problema_p,ie_cronico_p, ie_intensidade_p,
			ie_tipo_domicilio_p,ie_tratamento_agua_p,ie_tipo_agua_p,ie_destino_lixo_p,ie_esgoto_sanitario_p,ie_tipo_comunicacao_p,ie_tipo_doenca_res_p,ie_tipo_transporte_p,ie_sem_energia_eletrica_p,
			cd_empresa_refer_p,nr_seq_setor_p) = 'S'))
	and     coalesce(ie_situacao,'A') = 'A'
	order by ds_micro_area;
	
C03 CURSOR FOR
	SELECT 	distinct(cd_domicilio),
			substr(ds_endereco ||CASE WHEN coalesce(nr_endereco::text, '') = '' THEN null  ELSE ','||nr_endereco END ||' - '||cd_cep,1,255) ds
	from   	domicilio_familia
	where  	nr_seq_microarea = nr_seq_micro_area_w
	and		((coalesce(cd_cep_p::text, '') = '') or (cd_cep = cd_cep_p))
	and		((coalesce(ds_endereco_p::text, '') = '') or (upper(DS_ENDERECO) like upper('%'||ds_endereco_p||'%')))
	and		((coalesce(ds_bairro_p::text, '') = '') or (upper(ds_bairro) like upper('%'||ds_bairro_p||'%')))
	and		(((coalesce(cd_cidadao_p::text, '') = '')  and (coalesce(nr_cpf_p::text, '') = '' ) and (coalesce(dt_inicio_cons_p::text, '') = '') and (coalesce(dt_fim_cons_p::text, '') = '') and (coalesce(cd_profissional_p::text, '') = '') and (coalesce(nr_seq_servico_p::text, '') = '') and (coalesce(ie_vacina_pend_p,'N') = 'N') and (coalesce(ie_gravida_p,'N') = 'N') and (coalesce(ie_exame_pend_p,'N') = 'N') and (coalesce(ie_receita_fim_p,'N') = 'N') and (coalesce(nr_seq_problema_p::text, '') = '') and (coalesce(ie_tipo_doenca_p::text, '') = '') and (coalesce(cd_ciap_p::text, '') = '') and (coalesce(cd_doenca_p::text, '') = '') and (coalesce(ie_cronico_p,'N') = 'N') and (coalesce(ie_intensidade_p,'T') = 'T') and (coalesce(cd_empresa_refer_p::text, '') = '') and (coalesce(nr_seq_setor_p::text, '') = ''))
			or (Obter_se_exibe_populacional(nr_seq_area,nr_seq_microarea,'C',cd_cep,ds_endereco,ds_bairro,cd_domicilio,cd_cidadao_p,nr_cpf_p,dt_inicio_cons_p,dt_fim_cons_p,cd_profissional_p,
			nr_seq_servico_p,ie_vacina_pend_p,ie_gravida_p,ie_exame_pend_p,ie_receita_fim_p,ie_tipo_doenca_p,cd_ciap_p,cd_doenca_p,nr_seq_problema_p, ie_cronico_p, ie_intensidade_p,
			null,null,null,null,null,null,null,null,null,cd_empresa_refer_p,nr_seq_setor_p) = 'S'))
	and		(((coalesce(ie_tipo_domicilio_p::text, '') = '') and (coalesce(ie_tratamento_agua_p::text, '') = '') and (coalesce(ie_tipo_agua_p::text, '') = '') and (coalesce(ie_destino_lixo_p::text, '') = '') and (coalesce(ie_esgoto_sanitario_p::text, '') = '') and (coalesce(ie_tipo_comunicacao_p::text, '') = '') and (coalesce(ie_tipo_doenca_res_p::text, '') = '') and (coalesce(ie_tipo_transporte_p::text, '') = '') and (coalesce( ie_sem_energia_eletrica_p,'N') = 'N')) 
			or (obter_dados_residen_gest_popul(cd_domicilio,'R',ie_tipo_domicilio_p,ie_tratamento_agua_p,ie_tipo_agua_p,ie_destino_lixo_p,ie_esgoto_sanitario_p,ie_tipo_comunicacao_p,
																ie_tipo_doenca_res_p,ie_tipo_transporte_p,ie_sem_energia_eletrica_p)   = 'S'))
	and		coalesce(ie_mudou_se,'N') = 'N'
	order by ds;
	
C04 CURSOR FOR
	SELECT distinct(c.cd_pessoa_fisica) cd
	from   domicilio_familia b,
		   pessoa_fisica c
	where  b.cd_pessoa_fisica = c.cd_pessoa_fisica
	and    b.cd_domicilio  = cd_domicilio_w
	and		((coalesce(cd_cidadao_p::text, '') = '') or (c.cd_pessoa_fisica = cd_cidadao_p))
	and		((coalesce(nr_cpf_p::text, '') = '') or (somente_numero(c.nr_cpf) = somente_numero(nr_cpf_p)))
	and		(((coalesce(dt_inicio_cons_p::text, '') = '') and (coalesce(dt_fim_cons_p::text, '') = '') and (coalesce(cd_profissional_p::text, '') = '') and (coalesce(nr_seq_servico_p::text, '') = '')) or ( obter_dados_qt_gestao_popul(c.cd_pessoa_fisica,'QC',dt_inicio_cons_p,dt_fim_cons_p, cd_profissional_p , nr_seq_servico_p) > 0))
	and		((coalesce(ie_vacina_pend_p,'N') = 'N') or (obter_dados_pend_gestao_popul(c.cd_pessoa_fisica,'VP') > 0))
	and		((coalesce(ie_gravida_p,'N') = 'N') or (obter_dados_pend_gestao_popul(c.cd_pessoa_fisica,'G') > 0))
	and		((coalesce(ie_exame_pend_p,'N') = 'N') or (obter_dados_pend_gestao_popul(c.cd_pessoa_fisica,'EP') > 0))
	and		((coalesce(ie_receita_fim_p,'N') = 'N') or (obter_dados_pend_gestao_popul(c.cd_pessoa_fisica,'RP') > 0))
	and		(((coalesce(nr_seq_problema_p::text, '') = '') and (coalesce(ie_tipo_doenca_p::text, '') = '') and (coalesce(cd_ciap_p::text, '') = '') and (coalesce(cd_doenca_p::text, '') = '') and (coalesce(ie_cronico_p,'N') = 'N') and (coalesce(ie_intensidade_p,'T') = 'T')) or ( obter_dados_doenca_gest_popul(c.cd_pessoa_fisica,'P',ie_tipo_doenca_p,cd_ciap_p, cd_doenca_p , nr_seq_problema_p, ie_cronico_p, ie_intensidade_p) = 'S'))
	and		(((coalesce(cd_empresa_refer_p::text, '') = '') and (coalesce(nr_seq_setor_p::text, '') = ''))
			or (obter_dados_emp_set_gest_popul(c.cd_pessoa_fisica,cd_empresa_refer_p,nr_seq_setor_p) > 0))
	order by cd;	
					
			

BEGIN

delete  from w_gestao_ocupacional
where	nm_usuario	= nm_usuario_p;

delete  from  w_gestao_ocupacional_micro
where	nm_usuario	= nm_usuario_p;

delete  from  w_gestao_ocupacional_resid
where	nm_usuario	= nm_usuario_p;

delete  from  w_gestao_ocupacional_pac
where	nm_usuario	= nm_usuario_p;

commit;


open C01;
loop
fetch C01 into
	nr_seq_area_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	ie_inserir_w	:= true;
	
	Select 	count(distinct(b.cd_domicilio))
	into STRICT	qt_residencia_w
	from   	PSF_AREA a,
			domicilio_familia b
	where  	b.nr_seq_area = a.nr_sequencia
	and    	b.nr_seq_area = nr_seq_area_w
	and		coalesce(b.ie_mudou_se,'N') = 'N';
	
	
	Select 	count(distinct(c.cd_pessoa_fisica))
	into STRICT	qt_cidadaos_w
	from   	PSF_AREA a,
			domicilio_familia b,
			pessoa_fisica c
	where  	b.nr_seq_area = a.nr_sequencia
	and    	b.cd_pessoa_fisica = c.cd_pessoa_fisica
	and    	b.nr_seq_area = nr_seq_area_w;
	
			
	ie_inserir_w := 	(qt_residencia_w	> 0  AND qt_cidadaos_w	> 0 );
	
	if (not ie_inserir_w) then
		goto Fim;
	end if;
	
	
	
	if (ie_inserir_w) then
		begin
		
		Select 	nextval('w_gestao_ocupacional_seq')
		into STRICT    nr_seq_regiao_w
		;
		
		
		insert into w_gestao_ocupacional(	nr_sequencia,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							nr_seq_regiao,
							qt_residencia,
							qt_cidadao,
							qt_consulta,     		
							qt_falta_consulta, 		
							qt_vacina_pend,  		
							qt_gravida,				
							qt_exame_pend, 			
							qt_receita_fim, 			
							qt_foco_doenca,			
							qt_doenca_cronica)
				values (nr_seq_regiao_w,
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							nr_seq_area_w,
							qt_residencia_w,
							qt_cidadaos_w,
							0,
							0,
							0,
							0,
							0,
							0,
							0,
							0);
							
		commit;
		
		qt_cidadaos_reg_w 		:= 0;
		qt_residencia_reg_w 	:= 0;
		qt_consult_reg_w 		:= 0;
		qt_falta_cons_reg_w		:= 0;
		qt_vacina_reg_w			:= 0;
		qt_gravida_reg_w		:= 0;
		qt_exame_pend_reg_w		:= 0;
		qt_receita_pend_reg_w 	:= 0;
		qt_foco_doenca_reg_w	:= 0;
		qt_cronico_reg_w		:= 0;

		open C02;
		loop
		fetch C02 into
			nr_seq_micro_area_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin
			ie_inserir_micro_w	:= true;
			
			Select 	count(distinct(b.cd_domicilio))
			into STRICT	qt_residencia_w
			from   	psf_micro_area a,
					domicilio_familia b
			where  	b.nr_seq_microarea = a.nr_sequencia
			and    	b.nr_seq_microarea = nr_seq_micro_area_w
			and		coalesce(b.ie_mudou_se,'N') = 'N';
			
			
			Select 	count(distinct(c.cd_pessoa_fisica))
			into STRICT	qt_cidadaos_w
			from   	psf_micro_area a,
					domicilio_familia b,
					pessoa_fisica c
			where  	b.nr_seq_microarea = a.nr_sequencia
			and    	b.cd_pessoa_fisica = c.cd_pessoa_fisica
			and    	b.nr_seq_microarea = nr_seq_micro_area_w;
			
			
			ie_inserir_micro_w := 	(qt_residencia_w	> 0  AND qt_cidadaos_w	> 0 );
	
			if (not ie_inserir_micro_w) then
				goto Fim2;
			end if;
			
			
					
			if (ie_inserir_micro_w) then
				begin
				
				Select 	nextval('w_gestao_ocupacional_micro_seq')
				into STRICT    nr_seq_micro_w
				;
				
				insert into w_gestao_ocupacional_micro(nr_sequencia,
									dt_atualizacao,
									nm_usuario,
									dt_atualizacao_nrec,
									nm_usuario_nrec,
									nr_seq_regiao,
									nr_seq_micro_reg,
									qt_residencia,
									qt_cidadao)
						values ( nr_seq_micro_w,
									clock_timestamp(),
									nm_usuario_p,
									clock_timestamp(),
									nm_usuario_p,
									nr_seq_area_w,
									nr_seq_micro_area_w,
									qt_residencia_w,
									qt_cidadaos_w);
			
				commit;
								
				qt_cidadaos_micro_w 	:= 0;
				qt_residencia_micro_w 	:= 0;
				qt_consult_micro_w		:= 0;
				qt_falta_cons_micro_w	:= 0;
				qt_vacina_micro_w		:= 0;
				qt_gravida_micro_w		:= 0;
				qt_exame_pend_micro_w	:= 0;				
				qt_receita_pend_micro_w := 0;
				qt_foco_doenca_micro_w  := 0;
				qt_cronico_micro_w  	:= 0;

				open C03;
				loop
				fetch C03 into
					cd_domicilio_w,
					ds_domicilio_w;
				EXIT WHEN NOT FOUND; /* apply on C03 */
					begin
					ie_inserir_resid_w	:= true;

					Select 	count(distinct(cd_pessoa_fisica))
					into STRICT	qt_cidadaos_w
					from   	domicilio_familia b
					where  	b.nr_seq_microarea =  nr_seq_micro_area_w
					and		b.cd_domicilio = cd_domicilio_w;

					ie_inserir_resid_w := 	(qt_cidadaos_w	> 0 );
			
					if (not ie_inserir_resid_w) then
						goto Fim3;
					end if;

					if (ie_inserir_resid_w) then
						begin

						qt_residencia_micro_w := qt_residencia_micro_w + 1;
						qt_residencia_reg_w := qt_residencia_reg_w + 1;

						Select 	coalesce(max(ie_tipo_domicilio),'N'),
								coalesce(max(ie_tratamento_agua),'N'),
								coalesce(max(ie_tipo_agua),'N'),
								coalesce(max(ie_destino_lixo),'N'), 
								coalesce(max(ie_esgoto_sanitario),'N'),
								coalesce(max(ie_tipo_comunicacao),'N'),
								coalesce(max(ie_tipo_doenca),'N'),
								coalesce(max(ie_tipo_transporte),'N'),
								coalesce(max(ie_energia_eletrica),'N')
						into STRICT	ie_tipo_domicilio_w,
								ie_tratamento_agua_w,
								ie_tipo_agua_w,
								ie_destino_lixo_w,
								ie_esgoto_sanitario_w,
								ie_tipo_comunicacao_w,
								ie_tipo_doenca_res_w,
								ie_tipo_transporte_w,
								ie_energia_eletrica_w
						from	domicilio_familia
						where   cd_domicilio = cd_domicilio_w;
						
						Select 	nextval('w_gestao_ocupacional_resid_seq')
						into STRICT	nr_seq_resid_w
						;
						
						insert into  w_gestao_ocupacional_resid(nr_sequencia,
											dt_atualizacao,
											nm_usuario,
											dt_atualizacao_nrec,
											nm_usuario_nrec,
											nr_seq_micro_reg,
											cd_domicilio,											
											ds_domicilio,
											qt_cidadao,
											ie_tipo_domicilio,
											ie_tratamento_agua,
											ie_tipo_agua,
											ie_destino_lixo,
											ie_esgoto_sanitario,
											ie_tipo_comunicacao,
											ie_tipo_doenca,
											ie_tipo_transporte,
											ie_energia_eletrica)
								values (nr_seq_resid_w,
											clock_timestamp(),
											nm_usuario_p,
											clock_timestamp(),
											nm_usuario_p,
											nr_seq_micro_area_w,
											cd_domicilio_w,
											ds_domicilio_w,											
											qt_cidadaos_w,
											ie_tipo_domicilio_w,
											ie_tratamento_agua_w,
											ie_tipo_agua_w,
											ie_destino_lixo_w,
											ie_esgoto_sanitario_w,
											ie_tipo_comunicacao_w,
											ie_tipo_doenca_res_w,
											ie_tipo_transporte_w,
											ie_energia_eletrica_w);
					
						commit;
						
						qt_cidadaos_res_w := 0;
						qt_consult_res_w := 0;
						qt_falta_cons_res_w := 0;
						qt_vacina_res_w := 0;
						qt_gravida_res_w := 0;
						qt_exame_pend_res_w := 0;
						qt_receita_pend_res_w := 0;
						qt_foco_doenca_res_w := 0;
						qt_cronico_res_w 	:= 0;						

						open C04;
						loop
						fetch C04 into
							cd_pessoa_fisica_w;
						EXIT WHEN NOT FOUND; /* apply on C04 */
							begin
							--ie_inserir_cidadao_w	:= true;

							
							/*if	(not ie_inserir_cidadao_w) then
								goto Fim4;
							end if;*/


							--if	(ie_inserir_cidadao_w) then

							--	begin

								
								/*Select 	nvl(obter_dados_qt_gestao_popul(cd_pessoa_fisica_w,'QC',dt_inicio_cons_p,dt_fim_cons_p),0),
										nvl(obter_dados_qt_gestao_popul(cd_pessoa_fisica_w,'QF',dt_inicio_cons_p,dt_fim_cons_p),0),
										nvl(obter_dados_pend_gestao_popul(cd_pessoa_fisica_w,'VP'),0),
										nvl(obter_dados_pend_gestao_popul(cd_pessoa_fisica_w,'G'),0),
										nvl(obter_dados_pend_gestao_popul(cd_pessoa_fisica_w,'EP'),0),
										nvl(obter_dados_pend_gestao_popul(cd_pessoa_fisica_w,'RP'),0),
										substr(obter_dados_doenca_gest_popul(cd_pessoa_fisica_w,'FD',ie_tipo_doenca_p,cd_ciap_p,cd_doenca_p,nr_seq_problema_p),1,2000),
										substr(obter_dados_doenca_gest_popul(cd_pessoa_fisica_w,'PC',ie_tipo_doenca_p,cd_ciap_p,cd_doenca_p,nr_seq_problema_p),1,1)
								into	qt_consult_pac_w,
										qt_falta_cons_pac_w,
										qt_vacina_pac_w,
										qt_gravida_pac_w,
										qt_exame_pend_pac_w,
										qt_receita_pend_pac_w,
										ds_foco_doenca_pac_w,
										ie_cronico_pac_w
								from 	dual;*/
								
								qt_consult_pac_w 		:= coalesce(obter_dados_qt_gestao_popul(cd_pessoa_fisica_w,'QC',dt_inicio_cons_p,dt_fim_cons_p),0);
								qt_falta_cons_pac_w		:= coalesce(obter_dados_qt_gestao_popul(cd_pessoa_fisica_w,'QF',dt_inicio_cons_p,dt_fim_cons_p),0);
								qt_vacina_pac_w			:= coalesce(obter_dados_pend_gestao_popul(cd_pessoa_fisica_w,'VP'),0);
								qt_gravida_pac_w		:= coalesce(obter_dados_pend_gestao_popul(cd_pessoa_fisica_w,'G'),0);
								qt_exame_pend_pac_w		:= coalesce(obter_dados_pend_gestao_popul(cd_pessoa_fisica_w,'EP'),0);
								qt_receita_pend_pac_w	:= coalesce(obter_dados_pend_gestao_popul(cd_pessoa_fisica_w,'RP'),0);
								ds_foco_doenca_pac_w	:= substr(obter_dados_doenca_gest_popul(cd_pessoa_fisica_w,'FD',ie_tipo_doenca_p,cd_ciap_p,cd_doenca_p,nr_seq_problema_p),1,2000);
								ie_cronico_pac_w		:= substr(obter_dados_doenca_gest_popul(cd_pessoa_fisica_w,'PC',ie_tipo_doenca_p,cd_ciap_p,cd_doenca_p,nr_seq_problema_p),1,1);
								
								qt_cidadaos_res_w 		:= qt_cidadaos_res_w + 1;
								qt_cidadaos_micro_w 	:= qt_cidadaos_micro_w + 1;
								qt_cidadaos_reg_w		:= qt_cidadaos_reg_w + 1;
								
								qt_consult_res_w  		:=  qt_consult_res_w + qt_consult_pac_w;
								qt_consult_micro_w  	:=  qt_consult_micro_w + qt_consult_pac_w;
								qt_consult_reg_w  		:=  qt_consult_reg_w + qt_consult_pac_w;
								
								qt_falta_cons_res_w  	:=  qt_falta_cons_res_w + qt_falta_cons_pac_w;
								qt_falta_cons_micro_w  	:=  qt_falta_cons_micro_w + qt_falta_cons_pac_w;
								qt_falta_cons_reg_w  	:=  qt_falta_cons_reg_w + qt_falta_cons_pac_w;
								
								qt_vacina_res_w  		:=  qt_vacina_res_w + qt_vacina_pac_w;
								qt_vacina_micro_w  		:=  qt_vacina_micro_w + qt_vacina_pac_w;
								qt_vacina_reg_w  		:=  qt_vacina_reg_w + qt_vacina_pac_w;

								qt_gravida_res_w  		:=  qt_gravida_res_w + qt_gravida_pac_w;
								qt_gravida_micro_w  	:=  qt_gravida_micro_w + qt_gravida_pac_w;
								qt_gravida_reg_w  		:=  qt_gravida_reg_w + qt_gravida_pac_w;

								qt_exame_pend_res_w  	:=  qt_exame_pend_res_w + qt_exame_pend_pac_w;
								qt_exame_pend_micro_w  	:=  qt_exame_pend_micro_w + qt_exame_pend_pac_w;
								qt_exame_pend_reg_w  	:=  qt_exame_pend_reg_w + qt_exame_pend_pac_w;


								qt_receita_pend_res_w  	:=  qt_receita_pend_res_w + qt_receita_pend_pac_w;
								qt_receita_pend_micro_w :=  qt_receita_pend_micro_w + qt_receita_pend_pac_w;
								qt_receita_pend_reg_w  	:=  qt_receita_pend_reg_w + qt_receita_pend_pac_w;
								
																
								if (coalesce(trim(both ds_foco_doenca_pac_w),'XPTO') <> 'XPTO') then								
									qt_foco_doenca_res_w 	:= qt_foco_doenca_res_w + 1;
									qt_foco_doenca_micro_w	:=	qt_foco_doenca_micro_w + 1;
									qt_foco_doenca_reg_w	:=	qt_foco_doenca_reg_w + 1;
									
								end if;

								qt_cronico_pac_w := 0;	

								if (ie_cronico_pac_w = 'S') then
								
									qt_cronico_pac_w		:= 1;
									qt_cronico_res_w		:= qt_cronico_res_w + 1;
									qt_cronico_micro_w		:= qt_cronico_micro_w + 1;
									qt_cronico_reg_w		:= qt_cronico_reg_w + 1;

								end if;
								
								insert into  w_gestao_ocupacional_pac(nr_sequencia,
													dt_atualizacao,
													nm_usuario,
													dt_atualizacao_nrec,
													nm_usuario_nrec,
													cd_domicilio,											
													cd_pessoa_fisica,
													qt_consulta,
													qt_falta_consulta,
													qt_vacina_pend,
													qt_gravida,
													qt_exame_pend,
													qt_receita_fim,
													ds_foco_doenca,
													qt_doenca_cronica )
										values ( nextval('w_gestao_ocupacional_pac_seq'),
													clock_timestamp(),
													nm_usuario_p,
													clock_timestamp(),
													nm_usuario_p,
													cd_domicilio_w,										
													cd_pessoa_fisica_w,
													qt_consult_pac_w,
													qt_falta_cons_pac_w,
													qt_vacina_pac_w,
													qt_gravida_pac_w,
													qt_exame_pend_pac_w,
													qt_receita_pend_pac_w,
													ds_foco_doenca_pac_w,
													qt_cronico_pac_w );
							
								commit;
															
							
							--	end;

							--end if;

							
							--<<Fim4>>

							--ie_inserir_cidadao_w	:= ie_inserir_cidadao_w;	
							end;
						end loop;
						close C04;
						
						if ( qt_cidadaos_res_w > 0 ) then
						
							update 	w_gestao_ocupacional_resid
							set		qt_cidadao =  qt_cidadaos_res_w,
									qt_consulta	= qt_consult_res_w,
									qt_falta_consulta = qt_falta_cons_res_w,
									QT_GRAVIDA = qt_gravida_res_w ,
									QT_VACINA_PEND = qt_vacina_res_w,
									QT_EXAME_PEND = qt_exame_pend_res_w,
									QT_RECEITA_FIM = qt_receita_pend_res_w,
									qt_FOCO_DOENCA = qt_foco_doenca_res_w,
									QT_DOENCA_CRONICA = qt_cronico_res_w
							where	nr_sequencia = nr_seq_resid_w;
							
							commit;
						
						end if;
					
						end;
					end if;
					
					<<Fim3>>
					ie_inserir_resid_w	:= ie_inserir_resid_w;	
					end;
				end loop;
				close C03;
				
				if ( qt_cidadaos_micro_w > 0  or qt_residencia_micro_w > 0) then
						
					update 	w_gestao_ocupacional_micro
					set		qt_cidadao =  qt_cidadaos_micro_w,
							qt_residencia = qt_residencia_micro_w,
							qt_consulta = qt_consult_micro_w,
							qt_falta_consulta = qt_falta_cons_micro_w,
							QT_VACINA_PEND = qt_vacina_micro_w,
							QT_GRAVIDA  = qt_gravida_micro_w,
							QT_EXAME_PEND = qt_exame_pend_micro_w,
							QT_RECEITA_FIM = qt_receita_pend_micro_w,
							qt_FOCO_DOENCA = qt_foco_doenca_micro_w,
							QT_DOENCA_CRONICA = qt_cronico_micro_w
					where	nr_sequencia = nr_seq_micro_w;
					
					commit;
				
				end if;
			
				end;
			end if;
			
			<<Fim2>>
			ie_inserir_micro_w	:= ie_inserir_micro_w;	
			end;
		end loop;
		close C02;
		
			if ( qt_cidadaos_reg_w > 0  or qt_residencia_reg_w > 0) then
						
				update 	w_gestao_ocupacional
				set		qt_cidadao 				=  	qt_cidadaos_reg_w,
						qt_residencia 			= 	qt_residencia_reg_w,
						qt_consulta     		=  	qt_consult_reg_w,
						qt_falta_consulta 		=  	qt_falta_cons_reg_w,
						QT_VACINA_PEND  		= 	qt_vacina_reg_w,
						QT_GRAVIDA 				= 	qt_gravida_reg_w,
						QT_EXAME_PEND 			= 	qt_exame_pend_reg_w,
						QT_RECEITA_FIM 			= 	qt_receita_pend_reg_w,
						qt_FOCO_DOENCA			= 	qt_foco_doenca_reg_w,
						QT_DOENCA_CRONICA 		= 	qt_cronico_reg_w
				where	nr_sequencia = nr_seq_regiao_w;
				
				commit;
			
			end if;		
		
							
		end;
	end if;
	
	<<Fim>>
	ie_inserir_w	:= ie_inserir_w;		
	end;
end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_w_gestao_ocupacional ( nm_usuario_p text, nr_seq_regiao_p bigint default null, nr_seq_micro_regiao_p bigint default null, cd_cep_p text default null, ds_endereco_p text default null, ds_bairro_p text default null, cd_cidadao_p text default null, nr_cpf_p text default null, dt_inicio_cons_p timestamp default null, dt_fim_cons_p timestamp default null, cd_profissional_p text default null, nr_seq_servico_p bigint default null, ie_vacina_pend_p text default 'N', ie_gravida_p text default 'N', ie_exame_pend_p text default 'N', ie_receita_fim_p text default 'N', ie_tipo_doenca_p text default null, cd_ciap_p text default null, cd_doenca_p text default null, nr_seq_problema_p bigint default null, ie_cronico_p text default null, ie_intensidade_p text default 'T', ie_tipo_domicilio_p text default null, ie_tratamento_agua_p text default null, ie_tipo_agua_p text default null, ie_destino_lixo_p text default null, ie_esgoto_sanitario_p text default null, ie_tipo_comunicacao_p text default null, ie_tipo_doenca_res_p text default null, ie_tipo_transporte_p text default null, ie_sem_energia_eletrica_p text default 'N', cd_empresa_refer_p bigint default null, nr_seq_setor_p bigint default null) FROM PUBLIC;

