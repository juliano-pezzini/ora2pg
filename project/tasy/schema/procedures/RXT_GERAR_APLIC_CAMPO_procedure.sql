-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE rxt_gerar_aplic_campo ( nr_seq_agenda_p bigint, nr_seq_campo_p bigint, ie_evento_aplic_p text, qt_dose_p bigint, ds_observacao_p text, cd_pessoa_fisica_p text, nr_seq_fase_p bigint, ie_opcao_p text, nm_usuario_p text) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta:
[  ]  Objetos do dicionario [ X ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao:
	ie_opcao_p
		F - Fase
		B - Braquiterapia
-------------------------------------------------------------------------------------------------------------------

Referencias:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
nr_seq_campo_aplic_w		bigint;
nr_atendimento_w			bigint;
nr_seq_tratamento_w		bigint;
ie_status_agenda_w		rxt_agenda.ie_status_agenda%type;
qt_tratamento_w			bigint;
ie_faturar_w			varchar(15);
qt_check_film_w			rxt_tratamento.qt_check_film%type;
qt_agenda_w			bigint;
cd_setor_atendimento_w 		bigint;


BEGIN


if (nr_seq_agenda_p IS NOT NULL AND nr_seq_agenda_p::text <> '') and (nr_seq_campo_p IS NOT NULL AND nr_seq_campo_p::text <> '') and (ie_evento_aplic_p IS NOT NULL AND ie_evento_aplic_p::text <> '') and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') then
	begin
	
	if (ie_evento_aplic_p = 'A') then
		begin

		insert into rxt_campo_aplic(	nr_sequencia,
				nr_seq_campo,
				nr_seq_campo_braq,
				nr_seq_agenda,
				dt_atualizacao,
				nm_usuario,
				qt_dose_aplic,
				dt_aplicacao,
				cd_pessoa_fisica,
				ds_observacao,
				ie_evento_aplic,
				ie_evento_valido)
		values (	nextval('rxt_campo_aplic_seq'),
				CASE WHEN ie_opcao_p='F' THEN nr_seq_campo_p  ELSE null END ,
				CASE WHEN ie_opcao_p='B' THEN nr_seq_campo_p  ELSE null END ,
				nr_seq_agenda_p,
				clock_timestamp(),
				nm_usuario_p,
				qt_dose_p,
				clock_timestamp(),
				cd_pessoa_fisica_p,
				ds_observacao_p,
				'A',
				'S');
		end;
		
		begin

			select	nr_atendimento,
				nr_seq_tratamento
			into STRICT	nr_atendimento_w,
				nr_seq_tratamento_w
			from	rxt_agenda
			where	nr_sequencia	= nr_seq_agenda_p;
	
			select coalesce(wheb_usuario_pck.get_cd_setor_atendimento,obter_setor_atendimento(nr_atendimento_w))
			into STRICT cd_setor_atendimento_w
			;

			CALL rxt_inserir_proced_conta(	nr_seq_tratamento_w,
							nm_usuario_p,
							nr_atendimento_w,
							cd_setor_atendimento_w,
							wheb_usuario_pck.get_cd_estabelecimento,
							nr_seq_agenda_p,
							'AC');
		exception				
		when others then
			if (nm_usuario_p = 'VARIAN') then
				CALL gravar_log_tasy(3942, sqlerrm , nm_usuario_p);

			else
				CALL wheb_mensagem_pck.exibir_mensagem_abort(sqlerrm);
			end if;
		end;
	
	elsif (ie_evento_aplic_p = 'R') then
		begin
		select	max(nr_sequencia)
		into STRICT	nr_seq_campo_aplic_w
		from	rxt_campo_aplic
		where	ie_evento_aplic = 'A'
		and	nr_seq_agenda = nr_seq_agenda_p
		and	((nr_seq_campo = nr_seq_campo_p and ie_opcao_p = 'F')
		or (nr_seq_campo_braq = nr_seq_campo_p and ie_opcao_p = 'B'));

		update	rxt_campo_aplic
		set	ie_evento_valido	= 'N'
		where	nr_sequencia		= nr_seq_campo_aplic_w;

		insert into rxt_campo_aplic(	nr_sequencia,
				nr_seq_campo,
				nr_seq_campo_braq,
				nr_seq_agenda,
				dt_atualizacao,
				nm_usuario,
				qt_dose_aplic,
				dt_aplicacao,
				cd_pessoa_fisica,
				ds_observacao,
				ie_evento_aplic,
				ie_evento_valido)
		values (	nextval('rxt_campo_aplic_seq'),
				CASE WHEN ie_opcao_p='F' THEN nr_seq_campo_p  ELSE null END ,
				CASE WHEN ie_opcao_p='B' THEN nr_seq_campo_p  ELSE null END ,
				nr_seq_agenda_p,
				clock_timestamp(),
				nm_usuario_p,
				null,
				clock_timestamp(),
				cd_pessoa_fisica_p,
				NULL,
				'R',
				'N');
		end;
	end if;
	
	begin
	if (ie_opcao_p = 'F' or ie_opcao_p = 'B') then
		CALL rxt_gerar_status_aplic_agenda(	nr_seq_agenda_p,
						nr_seq_fase_p,
						nm_usuario_p,
                        ie_opcao_p);
	end if;

	if (nr_seq_tratamento_w IS NOT NULL AND nr_seq_tratamento_w::text <> '') and (ie_opcao_p = 'F') then
		select	count(1)
		into STRICT	qt_tratamento_w
		from	rxt_tratamento_proced	a
		where	nr_seq_tratamento	= nr_seq_tratamento_w
		and	coalesce(a.ie_situacao,'A')	= 'A';

		select	max(ie_status_agenda)
		into STRICT	ie_status_agenda_w
		from	rxt_agenda	a
		where	a.nr_sequencia	= nr_seq_agenda_p;

		select	count(1)
		into STRICT	qt_agenda_w
		from	rxt_agenda	a
		where	a.nr_seq_tratamento	= nr_seq_tratamento_w
		and	ie_status_agenda	= 'E';

		if (ie_status_agenda_w = 'E') and (qt_tratamento_w = 0) and (qt_agenda_w < 2) then
			CALL rxt_lancar_acessorio_conta(	nr_seq_tratamento_w,
							cd_pessoa_fisica_p,
							cd_setor_atendimento_w,
							nm_usuario_p);

			ie_faturar_w := Obter_Param_Usuario(	3030, 62, obter_perfil_ativo, nm_usuario_p, obter_estabelecimento_ativo, ie_faturar_w);

			if (ie_faturar_w = 'S') then
				select	max(a.qt_check_film)
				into STRICT	qt_check_film_w
				from	rxt_tratamento	a
				where	a.nr_sequencia	= nr_seq_tratamento_w;

				CALL rxt_lancar_checkfilm_conta(	nr_seq_tratamento_w,
								qt_check_film_w,
								cd_pessoa_fisica_p,
								cd_setor_atendimento_w,
								nm_usuario_p);
			end if;
		end if;
	end if;
	
	exception				
	when others then
		if (nm_usuario_p = 'VARIAN') then
			CALL gravar_log_tasy(3942, sqlerrm , nm_usuario_p);

		else
			CALL wheb_mensagem_pck.exibir_mensagem_abort(sqlerrm);
		end if;
	end;
	
	end;
end if;

if (ie_opcao_p = 'F') then
	begin
		CALL rxt_gerar_proced_fat(	nr_seq_Agenda_p,
					nr_Seq_campo_p,
					'R',
					nm_usuario_p);
	exception				
	when others then
		if (nm_usuario_p = 'VARIAN') then
			CALL gravar_log_tasy(3942, sqlerrm , nm_usuario_p);

		else
			CALL wheb_mensagem_pck.exibir_mensagem_abort(sqlerrm);
		end if;
	end;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE rxt_gerar_aplic_campo ( nr_seq_agenda_p bigint, nr_seq_campo_p bigint, ie_evento_aplic_p text, qt_dose_p bigint, ds_observacao_p text, cd_pessoa_fisica_p text, nr_seq_fase_p bigint, ie_opcao_p text, nm_usuario_p text) FROM PUBLIC;

