-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE cp_gerar_intervencao ( nr_sequencia_p bigint, nr_seq_proc_p bigint, nr_seq_pat_cp_interv_p bigint, nm_usuario_p text, NR_SEQ_PAT_CP_PROBLEM_P bigint default null) AS $body$
DECLARE


nr_seq_proc_w		bigint;
nr_sequencia_w		bigint;
nr_seq_prescricao_w	bigint;
cd_intervalo_w		varchar(7);
ds_horario_padrao_w	varchar(2000);
ds_horarios_w	varchar(2000);
ds_observacao_padr_w varchar(255);
ie_adep_w		    varchar(1);
hr_prim_horario_w   timestamp;
ie_se_necessario_w  varchar(1);
ie_auxiliar_w       varchar(10);
ie_encaminhar_w     varchar(10);
ie_fazer_w          varchar(10);
ie_orientar_w       varchar(10);
ie_supervisionar_w  varchar(10);
ie_origem_w         varchar(10);
ie_agora_w			varchar(1);
nr_prescricao_w		bigint;
dt_inicio_prescr_w	timestamp;
qt_horas_validade_w	smallint;
ds_primeiro_horario_w	varchar(10);
nr_intervalo_w	bigint;



C01 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.cd_intervalo,
		a.ds_horario_padrao,
		a.ds_observacao_padr,
		a.ie_adep,
		a.ie_auxiliar,
		a.ie_encaminhar,
		a.ie_fazer,
		a.ie_orientar,
		a.ie_supervisionar,
		a.ie_origem
	from	pe_procedimento a
	where	a.nr_sequencia	= nr_seq_proc_p
	and	coalesce(a.ie_situacao,'A') = 'A'
	and	not exists (	SELECT	1
					from	pe_prescr_proc x
					where	x.nr_seq_prescr	= nr_sequencia_p
					and	x.nr_seq_proc	= a.nr_sequencia);

BEGIN

select	coalesce(max(nr_prescricao),0),
	max(dt_inicio_prescr),
	coalesce(max(qt_horas_validade),24),
	to_char(max(dt_primeiro_horario), 'hh24:mi')
into STRICT	nr_prescricao_w,
	dt_inicio_prescr_w,
	qt_horas_validade_w,
	ds_primeiro_horario_w
from	pe_prescricao
where	nr_sequencia	= nr_sequencia_p
and 	coalesce(ie_situacao,'A') = 'A';

select	max(a.nr_sequencia)
into STRICT	nr_seq_prescricao_w
from	pe_prescricao a
where	coalesce(ie_situacao,'A') = 'A'
and	a.cd_pessoa_fisica = (	SELECT	max(x.cd_pessoa_fisica)
				from	pe_prescricao x
				where	x.nr_sequencia = nr_sequencia_p)
and	a.ie_tipo = 'CP'
and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
and	coalesce(a.dt_suspensao::text, '') = '';

open C01;
loop
fetch C01 into	
	nr_seq_proc_w,
	cd_intervalo_w,
	ds_horario_padrao_w,
	ds_observacao_padr_w,
	ie_adep_w,
	ie_auxiliar_w    ,
	ie_encaminhar_w  ,     
	ie_fazer_w       ,     
	ie_orientar_w    ,     
	ie_supervisionar_w,     
	ie_origem_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	select	max(a.ds_horarios)
	into STRICT	ds_horarios_w
	from	pe_prescr_proc a
	where	a.nr_seq_prescr = nr_seq_prescricao_w
	and	a.nr_seq_proc = nr_seq_proc_w;

	if (coalesce(ds_horarios_w::text, '') = '') then
		begin
		if (coalesce(trim(both ds_horario_padrao_w)::text, '') = '') then
			SELECT * FROM calcular_horario_intervencao(cd_intervalo_w, dt_inicio_prescr_w, qt_horas_validade_w, nr_intervalo_w, ds_horarios_w, ds_primeiro_horario_w, ie_se_necessario_w, nr_sequencia_p) INTO STRICT nr_intervalo_w, ds_horarios_w, ds_primeiro_horario_w, ie_se_necessario_w;
		else
			ds_horarios_w := ds_horario_padrao_w;
		end if;
		end;
	end if;

	select	nextval('pe_prescr_proc_seq')
	into STRICT	nr_sequencia_w
	;

    select	to_date(to_char(clock_timestamp(),'dd/mm/yyyy') || obter_primeiro_horario_sae(cd_intervalo_w, nr_sequencia_p),'dd/mm/yyyy hh24:mi:ss')
    into STRICT	hr_prim_horario_w
;	

	select	max(ie_se_necessario),
			max(ie_agora)
	into STRICT	ie_se_necessario_w,
			ie_agora_w
	from	intervalo_prescricao
	where	cd_intervalo = cd_intervalo_w;

    select   CASE WHEN coalesce(ie_origem_w, 'N')='O' THEN  'S'  ELSE ie_se_necessario_w END 
    into STRICT     ie_se_necessario_w 
;

	insert into pe_prescr_proc(
		nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		nr_seq_proc,
		nr_seq_prescr,
		qt_pontuacao,
		ds_origem,
		nr_seq_apres,
		cd_intervalo,
		ds_horarios,
		qt_intervencao,
		ie_se_necessario,
		ds_observacao,
		ie_suspenso,
		ie_adep,
		hr_prim_horario,
		ie_auxiliar    ,     
		ie_encaminhar  ,     
		ie_fazer       ,     
		ie_orientar    ,     
		ie_supervisionar,
		ie_agora,
        nr_seq_pat_cp_interv,
		ie_free_item,
        NR_SEQ_PAT_CP_PROBLEM
    ) values (	
        nr_sequencia_w,
		clock_timestamp(),
		nm_usuario_p,
		nr_seq_proc_w,
		nr_sequencia_p,
		1,
		'A',
		1,
		cd_intervalo_w,
		ds_horarios_w,
		1,
		ie_se_necessario_w,
		ds_observacao_padr_w,
		'N',
		ie_adep_w,
		to_char(hr_prim_horario_w,'hh24:mi'),
		ie_auxiliar_w    ,     
		ie_encaminhar_w  ,     
		ie_fazer_w       ,     
		ie_orientar_w    ,     
		ie_supervisionar_w,
		ie_agora_w,
        nr_seq_pat_cp_interv_p,
		'N',
        NR_SEQ_PAT_CP_PROBLEM_P		
        );

	commit;

	CALL atualizar_horarios_sae(nr_sequencia_w,nm_usuario_p);

	if (nr_prescricao_w > 0) then
		CALL gerar_prescr_item_sae(nr_sequencia_p,nr_sequencia_w,nm_usuario_p);
	end if;

	end;
end loop;
close c01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE cp_gerar_intervencao ( nr_sequencia_p bigint, nr_seq_proc_p bigint, nr_seq_pat_cp_interv_p bigint, nm_usuario_p text, NR_SEQ_PAT_CP_PROBLEM_P bigint default null) FROM PUBLIC;

