-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_dados_atuarial_sig ( dt_inicial_p timestamp, dt_final_p timestamp, ie_tipo_registro_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
cd_ans_w			varchar(30);
dt_referencia_w			timestamp;
---------------------------------------------------------------------------------------------------------------------------------------------- 
cd_usuario_plano_w		varchar(30);
ie_tipo_contratacao_w		varchar(10);
dt_nascimento_w			varchar(10);
dt_contratacao_w		varchar(10);
dt_rescisao_w			varchar(10);
ie_sexo_w			varchar(10);
nr_cpf_w			varchar(15);
nr_seq_titular_W		bigint;
---------------------------------------------------------------------------------------------------------------------------------------------- 
dt_pagamento_previsto_w		varchar(10);
dt_liquidacao_titulo_w		varchar(10);
vl_mensalidade_w		double precision;
---------------------------------------------------------------------------------------------------------------------------------------------- 
dt_ocorrencia_w			varchar(10);
nr_seq_prestador_exec_w		bigint;
cd_cgc_prestador_w		varchar(15);
dt_aviso_w			varchar(10);
vl_avisado_w			double precision;
dt_pagamento_w			varchar(10);
vl_despesa_w			double precision;
			
C01 CURSOR FOR 
	SELECT	trunc(b.dt_contratacao,'month')		dt_referencia, 
		a.cd_usuario_plano, 
		CASE WHEN d.ie_tipo_contratacao='I' THEN '2' WHEN d.ie_tipo_contratacao='CE' THEN '3' WHEN d.ie_tipo_contratacao='CA' THEN '4' END , 
		to_char(c.dt_nascimento,'yyyymmdd'), 
		to_char(b.dt_contratacao,'yyyymmdd'), 
		to_char(b.dt_rescisao,'yyyymmdd'), 
		CASE WHEN c.ie_sexo='M' THEN '1' WHEN c.ie_sexo='F' THEN '2' END , 
		c.nr_cpf, 
		b.nr_seq_titular 
	from	pessoa_fisica		c, 
		pls_segurado		b, 
		pls_segurado_carteira	a, 
		pls_plano		d 
	where	c.cd_pessoa_fisica	= b.cd_pessoa_fisica 
	and	a.nr_seq_segurado	= b.nr_sequencia 
	and	b.nr_seq_plano		= d.nr_sequencia 
	and	b.ie_tipo_segurado	= 'B' 
	and	b.dt_contratacao between dt_inicial_p and dt_final_p 
	and	(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '') 
	and	ie_tipo_registro_p	= 2;
	
C02 CURSOR FOR 
	SELECT	trunc(a.dt_referencia,'month')		dt_referencia, 
		c.cd_usuario_plano, 
		to_char(d.DT_PAGAMENTO_PREVISTO,'yyyymmdd'), 
		to_char(d.DT_LIQUIDACAO,'yyyymmdd'), 
		b.vl_mensalidade 
	from	pls_mensalidade_segurado	b, 
		pls_mensalidade			a, 
		titulo_receber			d, 
		pls_segurado_carteira		c 
	where	b.nr_seq_mensalidade		= a.nr_sequencia 
	and	d.nr_seq_mensalidade		= a.nr_sequencia 
	and	b.nr_seq_segurado		= c.nr_seq_segurado 
	and	a.dt_referencia between dt_inicial_p and dt_final_p 
	and	coalesce(a.ie_cancelamento::text, '') = '' 
	and	ie_tipo_registro_p	= 3;
	
C03 CURSOR FOR 
	SELECT	trunc(b.dt_mes_competencia,'month')	dt_referencia, 
		a.cd_usuario_plano, 
		to_char(CASE WHEN c.ie_tipo_guia='5' THEN coalesce(c.DT_ENTRADA,c.dt_emissao)  ELSE c.dt_emissao END ,'yyyymmdd'), 
		c.nr_seq_prestador_exec, 
		to_char(coalesce(b.DT_RECEBIMENTO,b.DT_MES_COMPETENCIA),'yyyymmdd'), 
		c.VL_COBRADO, 
		to_char(pls_obter_data_liquidacao_prot(b.nr_sequencia),'yyyymmdd'), 
		c.vl_total 
	from	pls_conta		c, 
		pls_protocolo_conta	b, 
		pls_segurado_carteira	a 
	where	c.nr_seq_protocolo	= b.nr_sequencia 
	and	a.nr_seq_segurado	= c.nr_seq_segurado 
	and	c.IE_STATUS		= 'F' 
	and	b.DT_MES_COMPETENCIA between dt_inicial_p and dt_final_p 
	and	ie_tipo_registro_p	= 5;


BEGIN 
 
cd_ans_w	:= '01000716';
 
CALL exec_sql_dinamico(nm_usuario_p,'truncate table pls_atuarial');
 
/*Beneficiários*/
 
if (ie_tipo_registro_p = 2) then 
	open C01;
	loop 
	fetch C01 into 
		dt_referencia_w, 
		cd_usuario_plano_w, 
		ie_tipo_contratacao_w, 
		dt_nascimento_w, 
		dt_contratacao_w, 
		dt_rescisao_w, 
		ie_sexo_w, 
		nr_cpf_w, 
		nr_seq_titular_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin 
		 
		if (coalesce(nr_cpf_w::text, '') = '') and (nr_seq_titular_w IS NOT NULL AND nr_seq_titular_w::text <> '') then 
			select	b.nr_cpf 
			into STRICT	nr_cpf_w 
			from	pessoa_fisica		b, 
				pls_segurado		a 
			where	b.cd_pessoa_fisica	= a.cd_pessoa_fisica 
			and	a.nr_sequencia		= nr_seq_titular_w;
		end if;
		 
		insert into pls_atuarial(	nr_sequencia, dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec, 
				ie_tipo_registro,dt_referencia,cd_ans,CD_BENEFICIARIO,IE_TIPO_CONTRATACAO, 
				DT_NASCIMENTO,DT_ADESAO,DT_EXCLUSAO,IE_SEXO,NR_CPF_PRESTADOR,cd_estabelecimento) 
		values (	nextval('pls_atuarial_seq'),clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p, 
				ie_tipo_registro_p,dt_referencia_w,cd_ans_w,cd_usuario_plano_w,ie_tipo_contratacao_w, 
				dt_nascimento_w,dt_contratacao_w,dt_rescisao_w,ie_sexo_w,nr_cpf_w,cd_estabelecimento_p);
		 
		end;
	end loop;
	close C01;
/*Mensalidade*/
 
elsif (ie_tipo_registro_p = 3) then 
	open c02;
	loop 
	fetch c02 into	 
		dt_referencia_w, 
		cd_usuario_plano_w, 
		dt_pagamento_previsto_w, 
		dt_liquidacao_titulo_w, 
		vl_mensalidade_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin 
		 
		if (coalesce(dt_liquidacao_titulo_w::text, '') = '') then 
			dt_liquidacao_titulo_w	:= '00000000';
		end if;
		 
		vl_mensalidade_w	:=	replace(replace(vl_mensalidade_w,'.',''),',','');
		 
		insert into pls_atuarial(	nr_sequencia, dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec, 
				ie_tipo_registro,dt_referencia,cd_ans,CD_BENEFICIARIO,VL_CONTRAPRESTACAO, 
				DT_PAGAMENTO,DS_LIQUIDACAO_MENS,cd_estabelecimento) 
		values (	nextval('pls_atuarial_seq'),clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p, 
				ie_tipo_registro_p,dt_referencia_w,cd_ans_w,cd_usuario_plano_w,vl_mensalidade_w, 
				dt_pagamento_previsto_w,dt_liquidacao_titulo_w,cd_estabelecimento_p);
		 
		end;
	end loop;
	close c02;
/*Contas Médicas*/
 
elsif (ie_tipo_registro_p = 5) then 
	open c03;
	loop 
	fetch c03 into 
		dt_referencia_w, 
		cd_usuario_plano_w, 
		dt_ocorrencia_w, 
		nr_seq_prestador_exec_w, 
		dt_aviso_w, 
		vl_avisado_w, 
		dt_pagamento_w, 
		vl_despesa_w;
	EXIT WHEN NOT FOUND; /* apply on c03 */
		begin 
		 
		if (coalesce(nr_seq_prestador_exec_w::text, '') = '') then 
			begin 
			select	substr(CASE WHEN cd_cgc='' THEN obter_dados_pf(cd_pessoa_fisica, 'CPF')  ELSE cd_cgc END ,1,14) 
			into STRICT	cd_cgc_prestador_w 
			from	pls_prestador 
			where	nr_sequencia	= nr_seq_prestador_exec_w;
			exception 
			when others then 
				cd_cgc_prestador_w	:= '00000000000000';
			end;
		else 
			cd_cgc_prestador_w	:= '00000000000000';
		end if;
		 
		if (coalesce(dt_pagamento_w::text, '') = '') then 
			dt_pagamento_w	:= '00000000';
		end if;
		 
		vl_avisado_w	:= replace(replace(vl_avisado_w,'.',''),',','');
		vl_despesa_w	:= replace(replace(vl_despesa_w,'.',''),',','');
		 
		insert into pls_atuarial(	nr_sequencia, dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec, 
				ie_tipo_registro,dt_referencia,cd_ans,CD_BENEFICIARIO,DT_OCORRENCIA, 
				CD_CGC_PRESTADOR,DT_AVISO,VL_AVISADO,DT_PAGAMENTO,VL_DESPESA, 
				cd_estabelecimento) 
		values (	nextval('pls_atuarial_seq'),clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p, 
				ie_tipo_registro_p,dt_referencia_w,cd_ans_w,cd_usuario_plano_w,dt_ocorrencia_w, 
				cd_cgc_prestador_w,dt_aviso_w,vl_avisado_w,dt_pagamento_w,vl_despesa_w, 
				cd_estabelecimento_p);
		 
		end;
	end loop;
	close c03;
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_dados_atuarial_sig ( dt_inicial_p timestamp, dt_final_p timestamp, ie_tipo_registro_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

