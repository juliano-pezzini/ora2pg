-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_produtos_web ( nm_usuario_p text, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) AS $body$
DECLARE



ie_tipo_plano_saude_w		varchar(1) 	:= 'S';
ie_tipo_intercambio_w		varchar(1) 	:= 'N';
ie_situacao_plano_w		varchar(2) 	:= 'T';
nr_protocolo_ans_w		varchar(20) 	:= '';
ds_plano_w			varchar(255) 	:= '';
ds_tipo_contratacao_w		varchar(255) 	:= '';
ds_abrangencia_w		varchar(255) 	:= '';
ds_segmentacao_w		varchar(255) 	:= '';
ds_situacao_w			varchar(255) 	:= '';
cd_scpa_w			varchar(20) 	:= '';
ie_produtos_liberados_w		varchar(1) 	:= '';

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Finalidade:
Gerar os produtos comerciais no portal web
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[  ]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  x ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
*/
C01 CURSOR FOR
	SELECT 	coalesce(ie_tipo_plano_saude,'N'),
		coalesce(ie_tipo_intercambio,'N'),
		coalesce(ie_situacao_plano,'T')
	from 	pls_regra_produto_web
	where 	dt_inicio_vigencia <= clock_timestamp()
	and (coalesce(dt_fim_vigencia::text, '') = '' or dt_fim_vigencia > clock_timestamp());

C02 CURSOR FOR
	SELECT  	distinct nr_protocolo_ans,
		substr(ds_plano,1,80),
		cd_scpa,
		substr(pls_obter_dados_produto(nr_sequencia,'C'),1,255) ds_tipo_contratacao,
		substr(pls_obter_dados_produto(nr_sequencia,'A'),1,255) ds_abrangencia,
		substr(pls_obter_dados_produto(nr_sequencia,'S'),1,255) ds_segmentacao,
		substr(CASE WHEN ie_situacao='A' THEN 'Ativo' WHEN ie_situacao='S' THEN 'Ativo com comercialização suspensa'  ELSE 'Cancelado' END ,1,255) ds_situacao
	from 	pls_plano
	where ((nr_protocolo_ans IS NOT NULL AND nr_protocolo_ans::text <> '') or (cd_scpa IS NOT NULL AND cd_scpa::text <> ''))
	and	ie_tipo_operacao in (CASE WHEN ie_tipo_plano_saude_w='S' THEN 'B'  ELSE '0' END , CASE WHEN ie_tipo_intercambio_w='S' THEN 'T'  ELSE '0' END )
	and	ie_situacao = CASE WHEN ie_situacao_plano_w='SA' THEN 'A'  ELSE ie_situacao END
	and	((ie_produtos_liberados_w = 'S' and (dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')) or ie_produtos_liberados_w = 'N');


BEGIN

delete from w_pls_produtos_web;
ie_produtos_liberados_w := pls_parametro_operadora_web('PCL', cd_estabelecimento_p);

open C01;
loop
fetch C01 into
	ie_tipo_plano_saude_w,
	ie_tipo_intercambio_w,
	ie_situacao_plano_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
		open C02;
		loop
		fetch C02 into
			nr_protocolo_ans_w,
			ds_plano_w,
			cd_scpa_w,
			ds_tipo_contratacao_w,
			ds_abrangencia_w,
			ds_segmentacao_w,
			ds_situacao_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin

			insert into w_pls_produtos_web(nr_sequencia, dt_atualizacao, nm_usuario,
				dt_atualizacao_nrec, nm_usuario_nrec, nr_protocolo_ans,
				ds_plano, ds_tipo_contratacao, ds_abrangencia,
				ds_segmentacao, ds_situacao, cd_scpa)
			values (	nextval('w_pls_produtos_web_seq'), clock_timestamp(), nm_usuario_p,
				clock_timestamp(), nm_usuario_p, nr_protocolo_ans_w,
				ds_plano_w, ds_tipo_contratacao_w, ds_abrangencia_w,
				ds_segmentacao_w, ds_situacao_w, coalesce(cd_scpa_w,''));
			end;
		end loop;
		close C02;
	end;
end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_produtos_web ( nm_usuario_p text, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) FROM PUBLIC;

