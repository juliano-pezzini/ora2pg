-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ptu_inserir_dados_anexo_pedido ( nr_seq_guia_p pls_guia_plano.nr_sequencia%type, nr_seq_requisicao_p pls_requisicao.nr_sequencia%type, nr_seq_pedido_aut_p ptu_pedido_autorizacao.nr_sequencia%type, nr_seq_pedido_compl_p ptu_pedido_compl_aut.nr_sequencia%type, nm_usuario_p pls_lote_anexo_diag_aut.nm_usuario%type) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Inserir os dados de anexo que serao enviados nos pedidos de autorizacao e complemento de autorizacao.
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta:
[ X ]  Objetos do dicionario [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao:Performance.
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
nr_seq_pedido_anexo_w		ptu_pedido_aut_anexo.nr_sequencia%type;
ie_tipo_anexo_w			pls_lote_anexo_guias_aut.ie_tipo_anexo%type;
cd_doenca_w			ptu_pedido_aut_diag_anexo.cd_doenca%type;
qt_anexo_w			integer;

c_lote_anexo_guia CURSOR FOR
	SELECT	ie_tipo_anexo
	from	pls_lote_anexo_guias_aut
	where	nr_seq_guia	= nr_seq_guia_p
	order by nr_sequencia;

c_lote_anexo_req CURSOR FOR
	SELECT	ie_tipo_anexo
	from	pls_lote_anexo_guias_aut
	where	nr_seq_requisicao	= nr_seq_requisicao_p
	order by nr_sequencia;
BEGIN

if (nr_seq_guia_p IS NOT NULL AND nr_seq_guia_p::text <> '') then
	for r_lote_anexo_guia_req_w in c_lote_anexo_guia loop
		if (r_lote_anexo_guia_req_w.ie_tipo_anexo IS NOT NULL AND r_lote_anexo_guia_req_w.ie_tipo_anexo::text <> '') then
			ie_tipo_anexo_w	:= r_lote_anexo_guia_req_w.ie_tipo_anexo;
			
			select	nextval('ptu_pedido_aut_anexo_seq')
			into STRICT	nr_seq_pedido_anexo_w
			;

			select	sum(qt_anexo)
			into STRICT	qt_anexo_w
			from (	SELECT	count(1) qt_anexo
					from	pls_guia_plano_proc
					where	nr_seq_guia = nr_seq_guia_p
					and	ie_tipo_anexo = ie_tipo_anexo_w
					and	ie_status = 'I'
					
union

					SELECT	count(1) qt_anexo
					from	pls_guia_plano_mat
					where	nr_seq_guia = nr_seq_guia_p
					and	ie_tipo_anexo = ie_tipo_anexo_w
					and	ie_status = 'I'
				) alias3;

			if (qt_anexo_w > 0) then

				select	nextval('ptu_pedido_aut_anexo_seq')
				into STRICT	nr_seq_pedido_anexo_w
				;

				if (r_lote_anexo_guia_req_w.ie_tipo_anexo	= 'OP') then -- Anexo OPME
					insert	into ptu_pedido_aut_anexo(nr_sequencia, nr_seq_pedido, nr_seq_pedido_compl,
						 nm_usuario, nm_usuario_nrec, dt_atualizacao_nrec,
						 dt_atualizacao, ie_tipo_anexo, ds_justificativa,
						 ds_especificacao, ds_observacao, ds_email_prof_solic,
						 nr_telef_prof_solic, nm_profissional_solic)
					(SELECT	nr_seq_pedido_anexo_w, nr_seq_pedido_aut_p, nr_seq_pedido_compl_p,
						nm_usuario_p, nm_usuario_p, clock_timestamp(),
						clock_timestamp(), r_lote_anexo_guia_req_w.ie_tipo_anexo, ds_justificativa,
						ds_especificacao, ds_observacao, ds_email_prof_solic,
						 nr_telef_prof_solic, nm_profissional_solic
					from	pls_lote_anexo_guias_aut
					where	nr_seq_guia	= nr_seq_guia_p
					and	ie_tipo_anexo	= r_lote_anexo_guia_req_w.ie_tipo_anexo);

				elsif (r_lote_anexo_guia_req_w.ie_tipo_anexo	= 'QU') then -- Anexo Quimioterapia
					insert	into ptu_pedido_aut_anexo(nr_sequencia, nr_seq_pedido, nr_seq_pedido_compl,
						 nm_usuario, nm_usuario_nrec, dt_atualizacao,
						 dt_atualizacao_nrec, qt_altura, qt_peso,
						 qt_superficie_corporal, nr_ciclo_previsto, nr_ciclo_atual,
						 qt_intervalo_ciclo, ds_procedimento_cirurgico, dt_real_proc_cirurgico,
						 ds_area_irradiada, dt_radioterapia,
						 ie_tipo_anexo, ds_observacao, nm_profissional_solic,
						 nr_telef_prof_solic, ds_email_prof_solic, nr_dia_ciclo_atual)
					(SELECT	nr_seq_pedido_anexo_w, nr_seq_pedido_aut_p, nr_seq_pedido_compl_p,
						nm_usuario_p, nm_usuario_p, clock_timestamp(),
						clock_timestamp(), qt_altura, qt_peso,
						qt_superficie_corporal, nr_ciclo_previsto, nr_ciclo_atual,
						qt_intervalo_ciclo, ds_procedimento_cirurgico, dt_real_proc_cirurgico,
						ds_area_irradiada, dt_radioterapia,
						r_lote_anexo_guia_req_w.ie_tipo_anexo, ds_observacao, nm_profissional_solic,
						nr_telef_prof_solic, ds_email_prof_solic, nr_dia_ciclo_atual
					from	pls_lote_anexo_guias_aut
					where	nr_seq_guia	= nr_seq_guia_p
					and	ie_tipo_anexo	= r_lote_anexo_guia_req_w.ie_tipo_anexo);

					insert	into ptu_pedido_aut_diag_anexo(nr_sequencia, nr_seq_pedido_anexo, dt_atualizacao,
						 dt_atualizacao_nrec, nm_usuario, nm_usuario_nrec,
						 cd_doenca, ie_tipo_diagnostico)
					(SELECT	nextval('ptu_pedido_aut_diag_anexo_seq'), nr_seq_pedido_anexo_w, clock_timestamp(),
						clock_timestamp(), nm_usuario_p, nm_usuario_p,
						a.cd_doenca, ie_tipo_diagnostico
					from	pls_lote_anexo_diag_aut		a,
						pls_lote_anexo_guias_aut	b
					where	a.nr_seq_lote_anexo_guia	= b.nr_sequencia
					and	b.nr_seq_guia			= nr_seq_guia_p
					and	b.ie_tipo_anexo			= r_lote_anexo_guia_req_w.ie_tipo_anexo
					and	a.ie_tipo_diagnostico		= 'DD');

					insert	into ptu_pedido_aut_diag_anexo(nr_sequencia, nr_seq_pedido_anexo, dt_atualizacao,
						 dt_atualizacao_nrec, nm_usuario, nm_usuario_nrec,
						 ds_diagnostico, ds_plano_terapeutico, dt_diagnostico,
						 ie_estadia_tumor, cd_finalidade_tratamento, ie_capacidade_funcional,
						 ie_tipo_quimioterapia, ds_observacao, ie_tipo_diagnostico,
						 ie_metastases, ie_nodulo , ie_tumor)
					(SELECT	nextval('ptu_pedido_aut_diag_anexo_seq'), nr_seq_pedido_anexo_w, clock_timestamp(),
						clock_timestamp(), nm_usuario_p, nm_usuario_p,
						a.ds_diagnostico, a.ds_plano_terapeutico, a.dt_diagnostico,
						a.ie_estadia_tumor, a.cd_finalidade_tratamento, a.ie_capacidade_funcional,
						a.ie_tipo_quimioterapia, a.ds_observacao, a.ie_tipo_diagnostico,
						a.ie_metastases, a.ie_nodulo , a.ie_tumor
					from	pls_lote_anexo_diag_aut		a,
						pls_lote_anexo_guias_aut	b
					where	a.nr_seq_lote_anexo_guia	= b.nr_sequencia
					and	b.nr_seq_guia			= nr_seq_guia_p
					and	b.ie_tipo_anexo			= r_lote_anexo_guia_req_w.ie_tipo_anexo
					and	a.ie_tipo_diagnostico		= 'DT');

				elsif (r_lote_anexo_guia_req_w.ie_tipo_anexo	= 'RA') then -- Anexo Radioterapia
					insert	into ptu_pedido_aut_anexo(nr_sequencia, nr_seq_pedido, nr_seq_pedido_compl,
						 dt_atualizacao, dt_atualizacao_nrec, nm_usuario,
						 nm_usuario_nrec, nr_campos, qt_dose_dia,
						 qt_dose_total, qt_dias_previsto, dt_inicio_previsto,
						 ds_procedimento_cirurgico, dt_real_proc_cirurgico, ds_quimioterapia,
						 dt_quimioterapia, ie_tipo_anexo,
						 ds_observacao, nm_profissional_solic, nr_telef_prof_solic,
						 ds_email_prof_solic)
					(SELECT	nr_seq_pedido_anexo_w, nr_seq_pedido_aut_p, nr_seq_pedido_compl_p,
						clock_timestamp(), clock_timestamp(), nm_usuario_p,
						nm_usuario_p, nr_campos, qt_dose_dia,
						qt_dose_total, qt_dias_previsto, dt_inicio_previsto,
						ds_procedimento_cirurgico, dt_real_proc_cirurgico, ds_quimioterapia,
						dt_quimioterapia, r_lote_anexo_guia_req_w.ie_tipo_anexo,
						ds_observacao, nm_profissional_solic, nr_telef_prof_solic,
						ds_email_prof_solic
					from	pls_lote_anexo_guias_aut
					where	nr_seq_guia	= nr_seq_guia_p
					and	ie_tipo_anexo	= r_lote_anexo_guia_req_w.ie_tipo_anexo);

					insert	into ptu_pedido_aut_diag_anexo(nr_sequencia, nr_seq_pedido_anexo, dt_atualizacao,
						 dt_atualizacao_nrec, nm_usuario, nm_usuario_nrec,
						 cd_doenca, ie_tipo_diagnostico)
					(SELECT	nextval('ptu_pedido_aut_diag_anexo_seq'), nr_seq_pedido_anexo_w, clock_timestamp(),
						clock_timestamp(), nm_usuario_p, nm_usuario_p,
						a.cd_doenca, ie_tipo_diagnostico
					from	pls_lote_anexo_diag_aut		a,
						pls_lote_anexo_guias_aut	b
					where	a.nr_seq_lote_anexo_guia	= b.nr_sequencia
					and	b.nr_seq_guia			= nr_seq_guia_p
					and	b.ie_tipo_anexo			= r_lote_anexo_guia_req_w.ie_tipo_anexo
					and	a.ie_tipo_diagnostico		= 'DD');

					insert	into ptu_pedido_aut_diag_anexo(nr_sequencia, nr_seq_pedido_anexo, dt_atualizacao,
						 dt_atualizacao_nrec, nm_usuario, nm_usuario_nrec,
						 ds_diagnostico, dt_diagnostico, ie_estadia_tumor,
						 cd_finalidade_tratamento, ie_capacidade_funcional, cd_diagnostico_imagem,
						 ds_observacao, ie_tipo_diagnostico)
					(SELECT	nextval('ptu_pedido_aut_diag_anexo_seq'), nr_seq_pedido_anexo_w, clock_timestamp(),
						clock_timestamp(), nm_usuario_p, nm_usuario_p,
						a.ds_diagnostico, a.dt_diagnostico, a.ie_estadia_tumor,
						a.cd_finalidade_tratamento, a.ie_capacidade_funcional, a.cd_diagnostico_imagem,
						a.ds_observacao, a.ie_tipo_diagnostico
					from	pls_lote_anexo_diag_aut		a,
						pls_lote_anexo_guias_aut	b
					where	a.nr_seq_lote_anexo_guia	= b.nr_sequencia
					and	b.nr_seq_guia			= nr_seq_guia_p
					and	b.ie_tipo_anexo			= r_lote_anexo_guia_req_w.ie_tipo_anexo
					and	a.ie_tipo_diagnostico		= 'DT');
				end if;
			end if;
		end if;
	end loop;
elsif (nr_seq_requisicao_p IS NOT NULL AND nr_seq_requisicao_p::text <> '') then
	for r_lote_anexo_guia_req_w in c_lote_anexo_req loop
		if (r_lote_anexo_guia_req_w.ie_tipo_anexo IS NOT NULL AND r_lote_anexo_guia_req_w.ie_tipo_anexo::text <> '') then
			ie_tipo_anexo_w	:= r_lote_anexo_guia_req_w.ie_tipo_anexo;

			select	nextval('ptu_pedido_aut_anexo_seq')
			into STRICT	nr_seq_pedido_anexo_w
			;
			
			select	sum(qt_anexo)
			into STRICT	qt_anexo_w
			from (	SELECT	count(1) qt_anexo
					from	pls_requisicao_proc
					where	nr_seq_requisicao = nr_seq_requisicao_p
					and	ie_tipo_anexo = ie_tipo_anexo_w
					and	ie_status = 'I'
					
union

					SELECT	count(1) qt_anexo
					from	pls_requisicao_mat
					where	nr_seq_requisicao = nr_seq_requisicao_p
					and	ie_tipo_anexo = ie_tipo_anexo_w
					and	ie_status = 'I'
				) alias3;

			if (qt_anexo_w > 0) then
				select	nextval('ptu_pedido_aut_anexo_seq')
				into STRICT	nr_seq_pedido_anexo_w
				;

				if (r_lote_anexo_guia_req_w.ie_tipo_anexo	= 'OP') then -- Anexo OPME
					insert	into ptu_pedido_aut_anexo(nr_sequencia, nr_seq_pedido, nr_seq_pedido_compl,
						 nm_usuario, nm_usuario_nrec, dt_atualizacao_nrec,
						 dt_atualizacao, ie_tipo_anexo, ds_justificativa,
						 ds_especificacao, ds_observacao, ds_email_prof_solic,
						 nr_telef_prof_solic, nm_profissional_solic)
					(SELECT	nr_seq_pedido_anexo_w, nr_seq_pedido_aut_p, nr_seq_pedido_compl_p,
						nm_usuario_p, nm_usuario_p, clock_timestamp(),
						clock_timestamp(), r_lote_anexo_guia_req_w.ie_tipo_anexo, ds_justificativa,
						ds_especificacao, ds_observacao, ds_email_prof_solic,
						nr_telef_prof_solic, nm_profissional_solic
					from	pls_lote_anexo_guias_aut
					where	nr_seq_requisicao	= nr_seq_requisicao_p
					and	ie_tipo_anexo	= r_lote_anexo_guia_req_w.ie_tipo_anexo);

				elsif (r_lote_anexo_guia_req_w.ie_tipo_anexo	= 'QU') then -- Anexo Quimioterapia
					insert	into ptu_pedido_aut_anexo(nr_sequencia, nr_seq_pedido, nr_seq_pedido_compl,
						 nm_usuario, nm_usuario_nrec, dt_atualizacao,
						 dt_atualizacao_nrec, qt_altura, qt_peso,
						 qt_superficie_corporal, nr_ciclo_previsto, nr_ciclo_atual,
						 qt_intervalo_ciclo, ds_procedimento_cirurgico, dt_real_proc_cirurgico,
						 ds_area_irradiada, dt_radioterapia,
						 ie_tipo_anexo, ds_observacao, nm_profissional_solic,
						 nr_telef_prof_solic, ds_email_prof_solic, nr_dia_ciclo_atual)
					(SELECT	nr_seq_pedido_anexo_w, nr_seq_pedido_aut_p, nr_seq_pedido_compl_p,
						nm_usuario_p, nm_usuario_p, clock_timestamp(),
						clock_timestamp(), qt_altura, qt_peso,
						qt_superficie_corporal, nr_ciclo_previsto, nr_ciclo_atual,
						qt_intervalo_ciclo, ds_procedimento_cirurgico, dt_real_proc_cirurgico,
						ds_area_irradiada, dt_radioterapia,
						r_lote_anexo_guia_req_w.ie_tipo_anexo, ds_observacao, nm_profissional_solic,
						nr_telef_prof_solic, ds_email_prof_solic, nr_dia_ciclo_atual
					from	pls_lote_anexo_guias_aut
					where	nr_seq_requisicao	= nr_seq_requisicao_p
					and	ie_tipo_anexo	= r_lote_anexo_guia_req_w.ie_tipo_anexo);

					insert	into ptu_pedido_aut_diag_anexo(nr_sequencia, nr_seq_pedido_anexo, dt_atualizacao,
						 dt_atualizacao_nrec, nm_usuario, nm_usuario_nrec,
						 cd_doenca, ie_tipo_diagnostico)
					(SELECT	nextval('ptu_pedido_aut_diag_anexo_seq'), nr_seq_pedido_anexo_w, clock_timestamp(),
						clock_timestamp(), nm_usuario_p, nm_usuario_p,
						a.cd_doenca, ie_tipo_diagnostico
					from	pls_lote_anexo_diag_aut		a,
						pls_lote_anexo_guias_aut	b
					where	a.nr_seq_lote_anexo_guia	= b.nr_sequencia
					and	b.nr_seq_requisicao		= nr_seq_requisicao_p
					and	b.ie_tipo_anexo			= r_lote_anexo_guia_req_w.ie_tipo_anexo
					and	a.ie_tipo_diagnostico		= 'DD');

					insert	into ptu_pedido_aut_diag_anexo(nr_sequencia, nr_seq_pedido_anexo, dt_atualizacao,
						 dt_atualizacao_nrec, nm_usuario, nm_usuario_nrec,
						 ds_diagnostico, ds_plano_terapeutico, dt_diagnostico,
						 ie_estadia_tumor, cd_finalidade_tratamento, ie_capacidade_funcional,
						 ie_tipo_quimioterapia, ds_observacao, ie_tipo_diagnostico,
						 ie_metastases, ie_nodulo, ie_tumor )
					(SELECT	nextval('ptu_pedido_aut_diag_anexo_seq'), nr_seq_pedido_anexo_w, clock_timestamp(),
						clock_timestamp(), nm_usuario_p, nm_usuario_p,
						a.ds_diagnostico, a.ds_plano_terapeutico, a.dt_diagnostico,
						a.ie_estadia_tumor, a.cd_finalidade_tratamento, a.ie_capacidade_funcional,
						a.ie_tipo_quimioterapia, a.ds_observacao, a.ie_tipo_diagnostico,
						a.ie_metastases, a.ie_nodulo , a.ie_tumor
					from	pls_lote_anexo_diag_aut		a,
						pls_lote_anexo_guias_aut	b
					where	a.nr_seq_lote_anexo_guia	= b.nr_sequencia
					and	b.nr_seq_requisicao		= nr_seq_requisicao_p
					and	b.ie_tipo_anexo			= r_lote_anexo_guia_req_w.ie_tipo_anexo
					and	a.ie_tipo_diagnostico		= 'DT');

				elsif (r_lote_anexo_guia_req_w.ie_tipo_anexo	= 'RA') then -- Anexo Radioterapia
					insert	into ptu_pedido_aut_anexo(nr_sequencia, nr_seq_pedido, nr_seq_pedido_compl,
						 dt_atualizacao, dt_atualizacao_nrec, nm_usuario,
						 nm_usuario_nrec, nr_campos, qt_dose_dia,
						 qt_dose_total, qt_dias_previsto, dt_inicio_previsto,
						 ds_procedimento_cirurgico, dt_real_proc_cirurgico, ds_quimioterapia,
						 dt_quimioterapia, ie_tipo_anexo,
						 ds_observacao, nm_profissional_solic, nr_telef_prof_solic,
						 ds_email_prof_solic)
					(SELECT	nr_seq_pedido_anexo_w, nr_seq_pedido_aut_p, nr_seq_pedido_compl_p,
						clock_timestamp(), clock_timestamp(), nm_usuario_p,
						nm_usuario_p, nr_campos, qt_dose_dia,
						qt_dose_total, qt_dias_previsto, dt_inicio_previsto,
						ds_procedimento_cirurgico, dt_real_proc_cirurgico, ds_quimioterapia,
						dt_quimioterapia, r_lote_anexo_guia_req_w.ie_tipo_anexo,
						ds_observacao, nm_profissional_solic, nr_telef_prof_solic,
						ds_email_prof_solic
					from	pls_lote_anexo_guias_aut
					where	nr_seq_requisicao	= nr_seq_requisicao_p
					and	ie_tipo_anexo		= r_lote_anexo_guia_req_w.ie_tipo_anexo);

					insert	into ptu_pedido_aut_diag_anexo(nr_sequencia, nr_seq_pedido_anexo, dt_atualizacao,
						 dt_atualizacao_nrec, nm_usuario, nm_usuario_nrec,
						 cd_doenca, ie_tipo_diagnostico)
					(SELECT	nextval('ptu_pedido_aut_diag_anexo_seq') ptu_pedido_aut_diag_anexo_seq, nr_seq_pedido_anexo_w nr_seq_pedido_anexo, clock_timestamp() dt_atualizacao_nrec,
						clock_timestamp() dt_atual, nm_usuario_p nm_usuario, nm_usuario_p nm_usuario_nrec,
						a.cd_doenca, ie_tipo_diagnostico
					from	pls_lote_anexo_diag_aut		a,
						pls_lote_anexo_guias_aut	b
					where	a.nr_seq_lote_anexo_guia	= b.nr_sequencia
					and	b.nr_seq_requisicao		= nr_seq_requisicao_p
					and	b.ie_tipo_anexo			= r_lote_anexo_guia_req_w.ie_tipo_anexo
					and	ie_tipo_diagnostico		= 'DD');

					insert	into ptu_pedido_aut_diag_anexo(nr_sequencia, nr_seq_pedido_anexo, dt_atualizacao,
						 dt_atualizacao_nrec, nm_usuario, nm_usuario_nrec,
						 ds_diagnostico, dt_diagnostico, ie_estadia_tumor,
						 cd_finalidade_tratamento, ie_capacidade_funcional, cd_diagnostico_imagem,
						 ds_observacao, ie_tipo_diagnostico)
					(SELECT	nextval('ptu_pedido_aut_diag_anexo_seq'), nr_seq_pedido_anexo_w, clock_timestamp(),
						clock_timestamp(), nm_usuario_p, nm_usuario_p,
						a.ds_diagnostico, a.dt_diagnostico, a.ie_estadia_tumor,
						a.cd_finalidade_tratamento, a.ie_capacidade_funcional, a.cd_diagnostico_imagem,
						a.ds_observacao, a.ie_tipo_diagnostico
					from	pls_lote_anexo_diag_aut		a,
						pls_lote_anexo_guias_aut	b
					where	a.nr_seq_lote_anexo_guia	= b.nr_sequencia
					and	b.nr_seq_requisicao		= nr_seq_requisicao_p
					and	b.ie_tipo_anexo			= r_lote_anexo_guia_req_w.ie_tipo_anexo
					and	a.ie_tipo_diagnostico		= 'DT');
				end if;
			end if;
		end if;
	end loop;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_inserir_dados_anexo_pedido ( nr_seq_guia_p pls_guia_plano.nr_sequencia%type, nr_seq_requisicao_p pls_requisicao.nr_sequencia%type, nr_seq_pedido_aut_p ptu_pedido_autorizacao.nr_sequencia%type, nr_seq_pedido_compl_p ptu_pedido_compl_aut.nr_sequencia%type, nm_usuario_p pls_lote_anexo_diag_aut.nm_usuario%type) FROM PUBLIC;

