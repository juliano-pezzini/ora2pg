-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE lab_checa_pac_mult_amostras ( nr_atendimento_p prescr_medica.nr_atendimento%type, lista_cd_barras_p text, cd_barras_user_p usuario.cd_barras%type, ds_error_p INOUT text, ds_nao_checado_p INOUT text, ds_checado_p INOUT text ) AS $body$
DECLARE

nm_usuario_w        usuario.nm_usuario%type;
nr_prescricao_w     prescr_proc_controle_etiq.nr_prescricao%type;
nr_seq_prescr_w     prescr_proc_controle_etiq.nr_seq_prescr%type;

qt_pos_separador_w  bigint;
ds_error_w          varchar(2000);
lista_cd_barras_w   varchar(2000);
cd_barras_w         prescr_proc_controle_etiq.cd_barras%type;

ie_checado_w        varchar(1);


BEGIN

if (coalesce(nr_atendimento_p::text, '') = '' or coalesce(lista_cd_barras_p::text, '') = '' or coalesce(cd_barras_user_p::text, '') = '') then
    ds_error_p := OBTER_DESC_EXPRESSAO(505855);--É necessário preencher todos os campos.
end if;

if (coalesce(ds_error_p::text, '') = '') then
    begin
        select  nm_usuario
        into STRICT    nm_usuario_w
        from    usuario
        where   cd_barras = cd_barras_user_p;
    exception when no_data_found or too_many_rows then
        ds_error_p := OBTER_DESC_EXPRESSAO(773753);--Código de barras do usuário é inválido ou não existe
    end;
end if;

if (coalesce(ds_error_p::text, '') = '') then

    lista_cd_barras_w := lista_cd_barras_p;
    loop
        if (lista_cd_barras_w IS NOT NULL AND lista_cd_barras_w::text <> '') then
            qt_pos_separador_w  := position(',' in lista_cd_barras_p);
            if (qt_pos_separador_w = 0) then
                cd_barras_w := lista_cd_barras_w;
                lista_cd_barras_w := null;
            else
                cd_barras_w := substr(lista_cd_barras_w,1,qt_pos_separador_w-1);
                lista_cd_barras_w := substr(lista_cd_barras_w,qt_pos_separador_w+1,length(lista_cd_barras_w));
            end if;
            ds_error_w := lab_checa_paciente_amostra(nr_atendimento_p, cd_barras_w, cd_barras_user_p, ds_error_w);
            if (ds_error_w IS NOT NULL AND ds_error_w::text <> '') then
                select CASE WHEN coalesce(ds_nao_checado_p::text, '') = '' THEN                     cd_barras_w||': '||ds_error_w  ELSE ds_nao_checado_p||chr(13)||chr(10)||cd_barras_w||': '||ds_error_w END
                into STRICT ds_nao_checado_p
;
			else
				select CASE WHEN coalesce(ds_checado_p::text, '') = '' THEN  cd_barras_w  ELSE ds_checado_p||chr(13)||chr(10)||cd_barras_w END
                into STRICT ds_checado_p
;
            end if;
        else
            cd_barras_w := null;
        end if;
        exit when coalesce(cd_barras_w::text, '') = '';
    end loop;

end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE lab_checa_pac_mult_amostras ( nr_atendimento_p prescr_medica.nr_atendimento%type, lista_cd_barras_p text, cd_barras_user_p usuario.cd_barras%type, ds_error_p INOUT text, ds_nao_checado_p INOUT text, ds_checado_p INOUT text ) FROM PUBLIC;

