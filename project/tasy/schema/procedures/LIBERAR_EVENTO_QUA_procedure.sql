-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE liberar_evento_qua ( nr_sequencia_p bigint, nm_usuario_p text, ds_mensagem_p INOUT text) AS $body$
DECLARE

				 
nr_seq_evento_w			bigint;
cd_estabelecimento_w	smallint;
cd_pessoa_fisica_w		varchar(10);
nr_atendimento_w		bigint;
nr_seq_evento_qua_w		bigint;	
qt_idade_w				bigint;
cd_setor_atendimento_w	bigint;
ie_tipo_evento_w		varchar(15);
ie_tipo_evento_dom_w	varchar(15);
ie_contem_medic_w		varchar(1);
qt_reg_w				bigint;
nr_regras_atendidas_w  varchar(2000);

C01 CURSOR FOR 
	SELECT	nr_seq_evento 
	from	regra_envio_sms 
	where	((cd_estabelecimento_w = 0) or (cd_estabelecimento	= cd_estabelecimento_w)) 
	and	coalesce(NR_SEQ_QUA_EVENTO,nr_seq_evento_qua_w)	= nr_seq_evento_qua_w 
	and	ie_evento_disp		= 'LIBE' 
	and	qt_idade_w between coalesce(qt_idade_min,0)	and coalesce(qt_idade_max,9999) 
	and	coalesce(ie_situacao,'A') = 'A';
	
C02 CURSOR FOR 
	SELECT	nr_seq_evento 
	from	regra_envio_sms 
	where	((cd_setor_atendimento_w = 0) or (cd_setor_atendimento	= cd_setor_atendimento_w)) 
	and	coalesce(NR_SEQ_QUA_EVENTO,nr_seq_evento_qua_w)	= nr_seq_evento_qua_w 
	and	ie_evento_disp		= 'LBV' 
	and	coalesce(ie_situacao,'A') = 'A';
	

BEGIN 
 
select	max(nr_atendimento), 
	max(cd_pessoa_fisica), 
	coalesce(max(nr_seq_evento),0), 
	coalesce(max(ie_tipo_evento),'E') 
into STRICT	nr_atendimento_w, 
	cd_pessoa_fisica_w, 
	nr_seq_evento_qua_w, 
	ie_tipo_evento_w 
from	qua_evento_paciente 
where	nr_sequencia	= nr_sequencia_p;
 
Select 	max(b.ie_tipo_evento) 
into STRICT	ie_tipo_evento_dom_w 
from	qua_evento_paciente a, 
	qua_tipo_evento b, 
	qua_evento c 
where 	b.nr_sequencia = c.nr_Seq_tipo 
and 	a.nr_Seq_evento = c.nr_sequencia 
and   a.nr_sequencia = nr_sequencia_p;
 
qt_idade_w	:= coalesce(obter_idade_pf(cd_pessoa_fisica_w,clock_timestamp(),'A'),0);
 
if (ie_tipo_evento_dom_w = 'PRM') then 
	ie_contem_medic_w := obter_se_cadastro_medic_prm(nr_sequencia_p);
	 
	if ( ie_contem_medic_w = 'N' ) then 
		ds_mensagem_p := wheb_mensagem_pck.get_texto(300336);
		goto Final;
	end if;
end if;
 
update	qua_evento_paciente e 
set	dt_atualizacao_nrec = clock_timestamp(), 
	dt_liberacao = clock_timestamp(), 
	nm_usuario = nm_usuario_p, 
	nm_usuario_nrec = nm_usuario_p 
where	nr_sequencia = nr_sequencia_p;
 
select	coalesce(max(cd_estabelecimento),0) 
into STRICT	cd_estabelecimento_w 
from	atendimento_paciente 
where	nr_atendimento	= nr_atendimento_w;
 
open C01;
loop 
fetch C01 into	 
	nr_seq_evento_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	if (ie_tipo_evento_w = 'E') then 
		CALL gerar_evento_paciente(nr_seq_evento_w,nr_atendimento_w,cd_pessoa_fisica_w,null,nm_usuario_p,null,'N');
	end if;
	end;
end loop;
close C01;
 
cd_setor_atendimento_w := obter_setor_atendimento(nr_atendimento_w);
open C02;
loop 
fetch C02 into	 
	nr_seq_evento_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin 
	if (ie_tipo_evento_w = 'E') then 
		CALL gerar_evento_paciente(nr_seq_evento_w,nr_atendimento_w,cd_pessoa_fisica_w,null,nm_usuario_p,null,'N');
	end if;	
	end;
end loop;
close C02;
 
begin 
nr_regras_atendidas_w := GQA_Liberacao_qua_evento(nr_sequencia_p, nm_usuario_p, nr_regras_atendidas_w);
CALL gera_protocolo_assistencial(nr_atendimento_w, nm_usuario_p);
exception 
	when others then 
	null;
end;
 
begin 
CALL gerar_ficha_UPP_evento(nr_sequencia_p,nm_usuario_p);
exception 
	when others then 
	null;
end;
 
begin 
if (nr_atendimento_w > 0) then 
	CALL tof_gerar_meta_eventos(nr_atendimento_w, nr_seq_evento_qua_w, nm_usuario_p);
end if;
exception 
	when others then 
	null;
end;
 
<<Final>> 
 
qt_reg_w := 0;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE liberar_evento_qua ( nr_sequencia_p bigint, nm_usuario_p text, ds_mensagem_p INOUT text) FROM PUBLIC;

