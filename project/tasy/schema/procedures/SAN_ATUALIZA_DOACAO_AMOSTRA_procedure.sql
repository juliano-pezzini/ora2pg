-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE san_atualiza_doacao_amostra ( nr_seq_amostra_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_doacao_w		bigint;
ie_atualiza_w		varchar(1);
ie_libera_sorologia_w	varchar(1);
nr_seq_lote_w		bigint;


BEGIN

if (nr_seq_amostra_p IS NOT NULL AND nr_seq_amostra_p::text <> '') then

	select 	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
	into STRICT	ie_atualiza_w
	from	san_doacao d
	where 	coalesce(d.ie_auto_exclusao,'N') = 'N'
	and	d.ie_status in (2,6)
	and	coalesce(d.ie_avaliacao_final,'A') = 'A'
	and	san_obter_se_exames_doacao_ok(d.nr_sequencia,0) = 0
	and	d.nr_sequencia = nr_seq_amostra_p
	and	not exists (	SELECT	1
				from	san_exame_lote a,
					san_exame_realizado b,
					san_exame c
				where	a.nr_sequencia 	= b.nr_seq_exame_lote
				and	b.nr_seq_exame 	= c.nr_sequencia
				and	a.nr_seq_doacao	= d.nr_seq_doacao_amostra
				and (san_obter_destino_exame(b.nr_seq_exame,3) = 'S' or san_obter_destino_exame(b.nr_seq_exame,0) = 'S')
				and	(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '')
				and	upper(b.ds_resultado) in ('POSITIVO','REAGENTE','INDETERMINADO','ANDAMENTO')
				and 	coalesce(c.ie_fator_rh,'N') = 'N'
				and not exists (	select	1
						from	san_parametro x
						where	x.nr_seq_exame_rh = b.nr_seq_exame
						and	x.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento)
				and	not exists (	select	1
							from	san_exame_lote e,
								san_exame_realizado f
							where	e.nr_sequencia 	= f.nr_seq_exame_lote
							and	e.nr_seq_doacao	= d.nr_sequencia
							and (san_obter_destino_exame(f.nr_seq_exame,3) = 'S' or san_obter_destino_exame(f.nr_seq_exame,0) = 'S')
							and	(f.dt_liberacao IS NOT NULL AND f.dt_liberacao::text <> '')
							and	f.nr_seq_exame = b.nr_seq_exame));

	select	max(nr_seq_doacao_amostra)
	into STRICT	nr_seq_doacao_w
	from	san_doacao
	where	nr_sequencia = nr_seq_amostra_p;

	if (ie_atualiza_w = 'S') then

		update	san_doacao
		set	ie_avaliacao_final = 'A',
			nm_usuario	= nm_usuario_p,
			dt_atualizacao	= clock_timestamp(),
			ie_apto_amostra	= 'S'
		where 	nr_sequencia 	= nr_seq_doacao_w;

		update	san_doacao
		set	ie_avaliacao_final = 'A',
			nm_usuario	= nm_usuario_p,
			dt_atualizacao	= clock_timestamp()
		where	nr_sequencia = nr_seq_amostra_p;

		ie_libera_sorologia_w := obter_valor_param_usuario(450,253,obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento);

		if (ie_libera_sorologia_w = 'S') then

			select	min(nr_sequencia)
			into STRICT	nr_seq_lote_w
			from	san_exame_lote
			where	nr_seq_doacao = nr_seq_doacao_w;

			if (nr_seq_lote_w IS NOT NULL AND nr_seq_lote_w::text <> '') then
				CALL san_consiste_liberar_sorologia(	nr_seq_doacao_w,
								nr_seq_lote_w,
								wheb_usuario_pck.get_cd_estabelecimento,
								nm_usuario_p);
			end if;
		end if;
	else
		update	san_doacao
		set	nm_usuario	= nm_usuario_p,
			dt_atualizacao	= clock_timestamp(),
			ie_apto_amostra	= 'N'
		where 	nr_sequencia 	= nr_seq_doacao_w
		and	coalesce(ie_apto_amostra::text, '') = '';
	end if;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE san_atualiza_doacao_amostra ( nr_seq_amostra_p bigint, nm_usuario_p text) FROM PUBLIC;

