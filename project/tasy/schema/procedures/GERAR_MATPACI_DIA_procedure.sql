-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_matpaci_dia ( cd_material_p bigint, dt_inicial_p timestamp, nr_dias_p bigint, qt_mat_lanc_dia_p bigint, nr_atendimento_p bigint, nr_interno_conta_p bigint, nr_seq_atepacu_p bigint, cd_local_estoque_p bigint, nm_usuario_p text, cd_medico_prescritor_p bigint ) AS $body$
DECLARE

				
nr_sequencia_w			bigint;
cd_convenio_w			integer;
cd_categoria_w			varchar(10);
dt_atendimento_w		timestamp;
dt_entrada_unidade_w		timestamp;
cd_material_w			bigint;
qt_material_w			double precision;
ie_convenio_conta_param_w	varchar(1);
cd_estabelecimento_w		smallint;
nr_doc_convenio_w		varchar(20);
ie_tipo_guia_w			varchar(5);
cd_senha_w			varchar(30);
ie_data_futura_w		varchar(1);
qt_reg_w			bigint;
ie_regra_uso_mat_w		varchar(1);
cd_tipo_baixa_w			varchar(255);
cd_setor_atendimento_w		atendimento_paciente_v.cd_setor_atendimento%type;
cd_plano_convenio_w		atendimento_paciente_v.cd_plano_convenio%type;
qt_existe_w			smallint;
ie_atualiza_estoque_w		tipo_baixa_prescricao.ie_atualiza_estoque%type;
cd_local_estoque_w		local_estoque.cd_local_estoque%type;
cd_motivo_exc_conta_w		parametro_faturamento.cd_motivo_exc_conta%type;
cd_cgc_prestador_w		estabelecimento.cd_cgc%type;
ds_abort_w			varchar(255);
ie_valor_informado_w		material_atend_paciente.ie_valor_informado%type := 'N';
nr_interno_conta_w		conta_paciente.nr_interno_conta%type;

BEGIN

nr_interno_conta_w := nr_interno_conta_p;

dt_atendimento_w := dt_inicial_p;
select	cd_estabelecimento
into STRICT	cd_estabelecimento_w
from	conta_paciente
where	nr_interno_conta	= nr_interno_conta_p;

ie_data_futura_w	:= coalesce(Obter_valor_param_usuario(67, 297, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w),'S');
ie_regra_uso_mat_w	:= obter_valor_param_usuario(67, 143, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w);
cd_tipo_baixa_w		:= obter_valor_param_usuario(67, 24, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w);

select	max(dt_entrada_unidade),
	cd_setor_atendimento
into STRICT	dt_entrada_unidade_w,
	cd_setor_atendimento_w
from	atend_paciente_unidade
where	nr_seq_interno = nr_seq_atepacu_p
group by	cd_setor_atendimento;

select	coalesce(max(ie_convenio_conta_param),'N'),
	max(cd_motivo_exc_conta)
into STRICT	ie_convenio_conta_param_w,
	cd_motivo_exc_conta_w
from	parametro_faturamento
where	cd_estabelecimento = cd_estabelecimento_w;
	
-- Obter o convenio de execucao 
SELECT * FROM obter_convenio_execucao(	nr_atendimento_p, dt_entrada_unidade_w, cd_convenio_w, cd_categoria_w, nr_doc_convenio_w, ie_tipo_guia_w, cd_senha_w) INTO STRICT cd_convenio_w, cd_categoria_w, nr_doc_convenio_w, ie_tipo_guia_w, cd_senha_w;
			
if (ie_convenio_conta_param_w = 'S') then

	select	cd_convenio_parametro,
		cd_categoria_parametro
	into STRICT	cd_convenio_w,
		cd_categoria_w
	from	conta_paciente
	where	nr_interno_conta = nr_interno_conta_p;
	
end if;

select	cd_plano_convenio
into STRICT	cd_plano_convenio_w
from 	atendimento_paciente_v
where	nr_atendimento = nr_atendimento_p;

begin
select	1 qt_existe
into STRICT	qt_existe_w
from	tipo_baixa_prescricao
where	ie_prescricao_devolucao = 'P'
and	cd_tipo_baixa = cd_tipo_baixa_w  LIMIT 1;
exception
when others then
	qt_existe_w := 0;
end;

if (qt_existe_w = 1) then
	select	ie_atualiza_estoque
	into STRICT	ie_atualiza_estoque_w
	from	tipo_baixa_prescricao
	where	ie_prescricao_devolucao = 'P'
	and	cd_tipo_baixa = cd_tipo_baixa_w
	order by	ds_tipo_baixa;
else
	select	ie_atualiza_estoque
	into STRICT	ie_atualiza_estoque_w
	from	tipo_baixa_prescricao
	where	ie_prescricao_devolucao = 'P'
	and	ie_tipo_padrao = 'S'
	order by	ds_tipo_baixa;
end if;

if (ie_atualiza_estoque_w = 'S') then
	begin
		select  a.cd_local_estoque
		into STRICT	cd_local_estoque_w
		from    local_estoque a,
			setor_atendimento b
		where   a.cd_local_estoque = b.cd_local_estoque
		and     b.cd_setor_atendimento = cd_setor_atendimento_w
		and     a.ie_situacao    = 'A';
	exception
	when others then
		cd_local_estoque_w := null;
	end;
end if;

select	a.cd_cgc
into STRICT	cd_cgc_prestador_w
from 	estabelecimento a,
	atendimento_paciente b
where	a.cd_estabelecimento = b.cd_estabelecimento
and	b.nr_atendimento = nr_atendimento_p;

for i in 1..nr_dias_p loop
	begin
	qt_material_w := coalesce(qt_mat_lanc_dia_p,1);
	
	if (ie_data_futura_w = 'N') and (dt_atendimento_w > clock_timestamp()) then
		goto final;
	end if;
	
	if (ie_regra_uso_mat_w = 'S') then

		SELECT * FROM tratar_retorno_regra_uso_mat(	nr_atendimento_p, cd_material_p, cd_setor_atendimento_w, cd_estabelecimento_w, cd_plano_convenio_w, null, cd_cgc_prestador_w, dt_atendimento_w, nr_seq_atepacu_p, cd_local_estoque_w, cd_motivo_exc_conta_w, nm_usuario_p, null, cd_categoria_w, cd_convenio_w, nr_interno_conta_w, qt_material_w, ds_abort_w, ie_valor_informado_w) INTO STRICT cd_categoria_w, cd_convenio_w, nr_interno_conta_w, qt_material_w, ds_abort_w, ie_valor_informado_w;
		if (ds_abort_w IS NOT NULL AND ds_abort_w::text <> '') then
			goto final;		
		end if;

	end if;
	
	select	nextval('material_atend_paciente_seq')
	into STRICT	nr_sequencia_w
	;

	insert into material_atend_paciente(nr_sequencia,
		nr_atendimento,
		dt_entrada_unidade,
		cd_material,
		cd_material_exec,
		dt_conta,
		dt_atendimento,
		qt_material,
		qt_executada,
		dt_atualizacao,
		nm_usuario,
		cd_unidade_medida,
		cd_convenio,
		cd_categoria,
		cd_acao,
		cd_setor_atendimento,
		ie_valor_informado,
		nm_usuario_original,
		cd_setor_receita,
		cd_situacao_glosa,
		nr_doc_convenio,
		nr_seq_atepacu,
		ie_auditoria,
		ie_tipo_guia,
		nr_interno_conta,
		cd_cgc_prestador,
		cd_local_estoque,
		nr_seq_cor_exec
		)
	values (nr_sequencia_w,
		nr_atendimento_p,
		dt_entrada_unidade_w,
		cd_material_p,
		cd_material_p,
		dt_atendimento_w,
		dt_atendimento_w,
		qt_material_w,
		qt_material_w,
		clock_timestamp(),
		nm_usuario_p,
		substr(obter_dados_material_estab(cd_material_p, cd_estabelecimento_w, 'UMS'), 1, 30),
		cd_convenio_w,
		cd_categoria_w,
		'1',
		cd_setor_atendimento_w,
		ie_valor_informado_w,
		nm_usuario_p,
		cd_setor_atendimento_w,
		0,
		nr_doc_convenio_w,
		nr_seq_atepacu_p,
		'N',
		ie_tipo_guia_w,
		nr_interno_conta_w,
		cd_cgc_prestador_w,
		cd_local_estoque_w,
		null
		);
		
	CALL atualiza_preco_material(nr_sequencia_w, nm_usuario_p);
	
	-- atualizar o item com os dados do convenio da execucao
	update	material_atend_paciente
	set	nr_doc_convenio = nr_doc_convenio_w,
		ie_tipo_guia = ie_tipo_guia_w,
		cd_senha = cd_senha_w,
		cd_medico_prescritor = cd_medico_prescritor_p
	where	nr_sequencia = nr_sequencia_w;
	
	dt_atendimento_w := dt_atendimento_w +1;
	
	end;
end loop;

<<final>>
	begin
	qt_reg_w:= 0;
	end;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_matpaci_dia ( cd_material_p bigint, dt_inicial_p timestamp, nr_dias_p bigint, qt_mat_lanc_dia_p bigint, nr_atendimento_p bigint, nr_interno_conta_p bigint, nr_seq_atepacu_p bigint, cd_local_estoque_p bigint, nm_usuario_p text, cd_medico_prescritor_p bigint ) FROM PUBLIC;

