-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE rep_copia_dieta ( nr_prescricao_orig_p bigint, nr_prescricao_nova_p bigint, dt_prescricao_p timestamp, nr_seq_regra_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_dieta_w				bigint;
nr_atendimento_w			bigint;
ie_copia_valid_igual_w		varchar(1);
ie_prim_horario_setor_w		varchar(10);
hr_setor_w					varchar(20);
ie_loop_w					varchar(2);
cd_setor_atendimento_w		bigint;
dt_validade_nova_w			timestamp;
dt_validade_origem_w		timestamp;
dt_inicio_prescr_w			timestamp;
dt_prescricao_www			timestamp;
dt_primeiro_horario_w		timestamp;
cd_estabelecimento_w		smallint;
qt_itens_w					bigint;
/* Guilherme Pereira 25/10/2012 OS:510787  */

cd_dieta_w					bigint;
qt_parametro_w				double precision;
ds_horarios_w				varchar(2000);
ds_horarios2_w				varchar(2000);
ds_observacao_w				varchar(4000);
ie_destino_dieta_w			varchar(2);
ie_refeicao_w				varchar(3);
ie_via_aplicacao_w			varchar(50);
cd_intervalo_w				varchar(50);
nr_seq_anterior_w			integer;
dt_inicio_item_w			timestamp;
dt_inicio_w					timestamp;
dt_final_w					timestamp;
qt_operacao_w				double precision;
ie_operacao_w				varchar(15);
ie_regra_geral_w			varchar(15);
ie_copiar_w					varchar(1);
nr_horas_validade_w			bigint;
nr_seq_regra_copia_w		bigint;
nr_ocorrencia_w				bigint;
ie_manter_intervalo_w		varchar(1);
hr_prim_horario_w			varchar(5);
dt_ultimo_horario_w			timestamp;
dt_prim_horario_ant_w		timestamp;

c01 CURSOR FOR
SELECT	a.cd_dieta,
		a.qt_parametro,
		a.ds_horarios,
		a.ds_observacao,
		a.ie_destino_dieta,
		a.ie_refeicao,
		a.nr_sequencia,
		a.ie_via_aplicacao,
		a.cd_intervalo,
		a.hr_prim_horario
from	prescr_dieta a,
		dieta b
where	coalesce(ie_suspenso,'N') <> 'S'
and		nr_prescricao	= nr_prescricao_orig_p
and		a.cd_dieta = b.cd_dieta
and		coalesce(b.ie_situacao,'A') = 'A';


BEGIN

select	coalesce(max(ie_copiar), 'S'),
		max(ie_regra_geral),
		max(nr_sequencia),
		coalesce(max(ie_manter_intervalo), 'N')
into STRICT	ie_copiar_w,
		ie_regra_geral_w,
		nr_seq_regra_copia_w,
		ie_manter_intervalo_w
from	rep_regra_copia_crit
where	ie_tipo_item = 'DO'
and		nr_seq_regra = nr_seq_regra_p;

if (ie_copiar_w = 'S') then
	begin

	select	max(nr_atendimento),
			max(dt_inicio_prescr),
			max(nr_horas_validade),
			max(dt_primeiro_horario)
	into STRICT	nr_atendimento_w,
			dt_inicio_prescr_w,
			nr_horas_validade_w,
			dt_primeiro_horario_w
	from	prescr_medica
	where	nr_prescricao = nr_prescricao_nova_p;

	open c01;
	loop
	fetch c01 into cd_dieta_w,
				qt_parametro_w,
				ds_horarios_w,
				ds_observacao_w,
				ie_destino_dieta_w,
				ie_refeicao_w,
				nr_seq_anterior_w,
				ie_via_aplicacao_w,
				cd_intervalo_w,
				hr_prim_horario_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		if (ie_regra_geral_w = 'H') then
			if (ie_manter_intervalo_w = 'S') and (cd_intervalo_w IS NOT NULL AND cd_intervalo_w::text <> '') then

				select	max(ie_operacao),
						max(qt_operacao)
				into STRICT	ie_operacao_w,
						qt_operacao_w
				from	intervalo_prescricao
				where	cd_intervalo	= cd_intervalo_w;

				dt_inicio_w			:= dt_inicio_prescr_w - 5;
				dt_final_w			:= clock_timestamp() + interval '5 days';

				qt_operacao_w		:= obter_ocorrencia_intervalo(cd_intervalo_w, 24, 'H');
				dt_inicio_item_w	:= dt_inicio_prescr_w - qt_operacao_w / 24;

				select	max(c.dt_horario)
				into STRICT	dt_inicio_item_w
				from	prescr_dieta_hor c,
						prescr_dieta b,
						prescr_medica a
				where	1 = 1
				and		coalesce(c.ie_situacao,'A')	= 'A'
				and		c.nr_seq_dieta	= b.nr_sequencia
				and		c.nr_prescricao		= b.nr_prescricao
				and		c.dt_horario		>= dt_inicio_item_w - 220/24
				and		coalesce(b.dt_suspensao::text, '') = ''
				and		(coalesce(a.dt_liberacao_medico, a.dt_liberacao) IS NOT NULL AND (coalesce(a.dt_liberacao_medico, a.dt_liberacao))::text <> '')
				and		b.cd_intervalo		= coalesce(cd_intervalo_w, b.cd_intervalo)
				and 	coalesce(b.qt_parametro,0) = coalesce(qt_parametro_w, coalesce(b.qt_parametro,0))
				and		b.cd_dieta	= cd_dieta_w
				and		b.nr_prescricao		= a.nr_prescricao
				and		coalesce(a.dt_suspensao::text, '') = ''
				and		a.dt_inicio_prescr between dt_inicio_w and dt_final_w
				and		a.nr_atendimento	= nr_atendimento_w;
							--and 	nvl(c.ie_horario_especial,'N') <> 'S'
				--and	Obter_se_horario_liberado(c.dt_lib_horario, c.dt_horario) = 'S'
				hr_prim_horario_w	:= trim(both coalesce(hr_prim_horario_w, obter_Prim_dshorarios(ds_horarios_w)));

				if (coalesce(dt_inicio_item_w::text, '') = '') then
					if (length(hr_prim_horario_w) = 5) then
						if (dt_inicio_prescr_w > to_date(to_char(dt_inicio_prescr_w, 'dd/mm/yyyy ') || hr_prim_horario_w, 'dd/mm/yyyy hh24:mi')) then
							dt_inicio_item_w	:= to_date(to_char(dt_inicio_prescr_w, 'dd/mm/yyyy ') || hr_prim_horario_w, 'dd/mm/yyyy hh24:mi');
						else
							dt_inicio_item_w	:= to_date(to_char(dt_inicio_prescr_w+1, 'dd/mm/yyyy ') || hr_prim_horario_w, 'dd/mm/yyyy hh24:mi');
						end if;
					else
						hr_prim_horario_w	:= null;
					end if;
				end if;

				if (dt_inicio_item_w IS NOT NULL AND dt_inicio_item_w::text <> '') then
					dt_inicio_item_w	:= dt_inicio_item_w + qt_operacao_w / 24;
				end if;

				if (coalesce(qt_operacao_w,0) > 0) and (ie_operacao_w in ('H')) and (dt_inicio_item_w IS NOT NULL AND dt_inicio_item_w::text <> '') then
					dt_inicio_item_w	:= coalesce(dt_inicio_item_w, dt_inicio_prescr_w);

					if (ie_operacao_w in ('H')) and (dt_inicio_item_w not between dt_inicio_prescr_w and (dt_inicio_item_w + qt_operacao_w)) then

						while(dt_inicio_item_w not between dt_inicio_prescr_w and (dt_inicio_item_w + qt_operacao_w)) loop
							dt_inicio_item_w	:= dt_inicio_item_w + qt_operacao_w/24;
						end loop;
					end if;

					hr_prim_horario_w	:= to_char(dt_inicio_item_w, 'hh24:mi');
				else
					dt_inicio_item_w	:= dt_inicio_prescr_w;
				end if;

				nr_ocorrencia_w	:= 0;
				SELECT * FROM Calcular_Horario_Prescricao(	nr_prescricao_nova_p, cd_intervalo_w, dt_inicio_prescr_w, dt_inicio_item_w, nr_horas_validade_w, null, 0, 0, nr_ocorrencia_w, ds_horarios_w, ds_horarios2_w, 'N', null) INTO STRICT nr_ocorrencia_w, ds_horarios_w, ds_horarios2_w;

				ds_horarios_w	:= ds_horarios_w || ds_horarios2_w;

			elsif (ie_manter_intervalo_w = 'N') then

				dt_ultimo_horario_w	:= PLT_obter_ultimo_horario(nr_prescricao_orig_p, nr_seq_anterior_w, 'D', nm_usuario_p);

				if (dt_ultimo_horario_w IS NOT NULL AND dt_ultimo_horario_w::text <> '') and
					(dt_ultimo_horario_w > (clock_timestamp() - interval '1 days')) then

					hr_prim_horario_w	:= to_char(dt_ultimo_horario_w + /*nvl(*/
 Obter_ocorrencia_intervalo(cd_intervalo_w, coalesce(nr_horas_validade_w,24),'H')/ 24,'hh24:mi');
				end if;

				if (hr_prim_horario_w <> '  :  ') and (hr_prim_horario_w IS NOT NULL AND hr_prim_horario_w::text <> '') then
					ds_horarios_w	:= '';

					if (coalesce(dt_prim_horario_ant_w::text, '') = '') then
						dt_prim_horario_ant_w	:= dt_inicio_prescr_w;
					end if;

					SELECT * FROM Calcular_Horario_Prescricao(nr_prescricao_nova_p, cd_intervalo_w, dt_inicio_prescr_w, dt_prim_horario_ant_w, nr_horas_validade_w, null, 0, 0, nr_ocorrencia_w, ds_horarios_w, ds_horarios2_w, 'N', null) INTO STRICT nr_ocorrencia_w, ds_horarios_w, ds_horarios2_w;

					ds_horarios_w := ds_horarios_w||ds_horarios2_w;
				else
					ds_horarios_w	:= '';
				end if;
			end if;
		end if;

		select	coalesce(max(nr_sequencia),0) + 1
		into STRICT	nr_seq_dieta_w
		from	prescr_dieta
		where	nr_prescricao = nr_prescricao_nova_p;

		if (dt_primeiro_horario_w IS NOT NULL AND dt_primeiro_horario_w::text <> '') then
			hr_prim_horario_w := to_char(dt_primeiro_horario_w,'hh24:mi');
		end if;

		Insert  into prescr_dieta(
						nr_prescricao,
						nr_sequencia,
						cd_dieta,
						dt_atualizacao,
						nm_usuario,
						qt_parametro,
						ds_horarios,
						ds_observacao,
						cd_motivo_baixa,
						dt_baixa,
						ie_destino_dieta,
						ie_refeicao,
						ie_suspenso,
						nr_seq_anterior,
						nr_prescricao_original,
						ie_via_aplicacao,
						cd_intervalo,
						hr_prim_horario
				) values (
						nr_prescricao_nova_p,
						nr_seq_dieta_w,
						cd_dieta_w,
						dt_prescricao_p,
						nm_usuario_p,
						qt_parametro_w,
						substr(ds_horarios_w,1,255),
						ds_observacao_w,
						null,
						null,
						ie_destino_dieta_w,
						ie_refeicao_w,
						'N',
						nr_seq_anterior_w,
						nr_prescricao_orig_p,
						ie_via_aplicacao_w,
						cd_intervalo_w,
						hr_prim_horario_w);

		commit;

		end;
	end loop;
	close c01;

	end;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE rep_copia_dieta ( nr_prescricao_orig_p bigint, nr_prescricao_nova_p bigint, dt_prescricao_p timestamp, nr_seq_regra_p bigint, nm_usuario_p text) FROM PUBLIC;

