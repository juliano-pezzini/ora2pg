-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_evol_item_procedimento (nr_sequencia_p text) AS $body$
DECLARE


ds_texto_w              varchar(2000);
cd_profissional_w       varchar(255);
nr_atendimento_w        varchar(255);
ie_tipo_evolucao_w      varchar(255);
nm_usuario_w            varchar(255);
cd_pessoa_fisica_w      varchar(255);
cd_procedimento_w       varchar(255);
ie_origem_proced_w      varchar(255);
ds_complemento2_w		varchar(2000);
ds_complemento_w		varchar(2000);
dt_inicio_w             timestamp;
dt_fim_w                timestamp;
dt_liberacao_w          timestamp;
nr_seq_rtf_srtring_w	bigint;
ds_geral_w				varchar(32000);


BEGIN
if (nr_sequencia_p IS NOT NULL AND nr_sequencia_p::text <> '') then
   select    a.cd_profissional,
             substr(obter_dados_atendimento(a.nr_atendimento,'CP'),1,255),
             a.nr_atendimento,
             ie_tipo_evolucao,
             a.nm_usuario,
             cd_procedimento,
             ie_origem_proced,
             dt_inicio,
             dt_fim,
             dt_liberacao
   into STRICT      cd_profissional_w,
             cd_pessoa_fisica_w,
             nr_atendimento_w,
             ie_tipo_evolucao_w,
             nm_usuario_w,
             cd_procedimento_w,
             ie_origem_proced_w,
             dt_inicio_w,
             dt_fim_w,
             dt_liberacao_w
   from      proc_pac_descricao a,
             usuario b
   where     a.nr_sequencia = nr_sequencia_p
   and       a.nm_usuario = b.nm_usuario;

	 ds_complemento_w	:= '';
	if (dt_inicio_w IS NOT NULL AND dt_inicio_w::text <> '') then
		ds_complemento_w	:= ' ' || wheb_mensagem_pck.get_texto(308241) || ' ' || PKG_DATE_FORMATERS_TZ.TO_VARCHAR(dt_inicio_w, 'timestamp', ESTABLISHMENT_TIMEZONE_UTILS.getTimeZone) || chr(13) || chr(10); -- com a data de inicio
	end if;
	 ds_complemento2_w	:= '';
	if (dt_fim_w IS NOT NULL AND dt_fim_w::text <> '') then
		ds_complemento2_w	:= ' ' || wheb_mensagem_pck.get_texto(308242) || ' ' || PKG_DATE_FORMATERS_TZ.TO_VARCHAR(dt_fim_w, 'timestamp', ESTABLISHMENT_TIMEZONE_UTILS.getTimeZone); -- e data de fim
	end if;

    nr_seq_rtf_srtring_w  := converte_rtf_string('select	ds_descricao
								from	proc_pac_descricao 
								where	nr_sequencia = :nr_sequencia_p', nr_sequencia_p, nm_usuario_w, nr_seq_rtf_srtring_w );
	select	ds_texto
	into STRICT	ds_geral_w
	from	tasy_conversao_rtf
	where	nr_sequencia = nr_seq_rtf_srtring_w;
   ds_texto_w := substr(wheb_mensagem_pck.get_texto(308243,	'CD_PROCEDIMENTO_W=' || cd_procedimento_w || ';' ||
                                        'DS_PROCEDIMENTO=' || obter_desc_procedimento(cd_procedimento_w,ie_origem_proced_w) || ';' ||
										'DS_COMPLEMENTO_W=' || ds_complemento_w || ';' ||
										'DS_COMPLEMENTO2_W=' || ds_complemento2_w), 1, 2000);
				/*
					Realizado o procedimento: #@CD_PROCEDIMENTO_W#@ - #@DS_PROCEDIMENTO#@
					#@DS_COMPLEMENTO_W#@#@DS_COMPLEMENTO2_W#@
				*/
   if (dt_liberacao_w IS NOT NULL AND dt_liberacao_w::text <> '') then	
      insert into evolucao_paciente( cd_evolucao,
                                      dt_evolucao,
                                      ie_tipo_evolucao,
                                      cd_pessoa_fisica,
                                      dt_atualizacao,
                                      nm_usuario,
                                      nr_atendimento,
                                      ds_evolucao,
                                      cd_medico,
                                      ie_evolucao_clinica,
                                      ie_situacao,
                                      nm_usuario_nrec,
									  dt_liberacao
                                      )
      values (	                        nextval('evolucao_paciente_seq'),
                                      clock_timestamp(),
                                      ie_tipo_evolucao_w,
                                      cd_pessoa_fisica_w,
                                      clock_timestamp(),
                                      nm_usuario_w,
                                      nr_atendimento_w,
                                      WHEB_RTF_PCK.GET_TEXTO_RTF(ds_texto_w || ' \par '|| replace(ds_geral_w, chr(10), ' \par ')),
                                      cd_profissional_w,
                                      coalesce(obter_valor_param_usuario(281, 1576, wheb_usuario_pck.get_cd_perfil, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento), 'E'),
                                      'A',
                                      nm_usuario_w,
									  clock_timestamp());
   end if;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_evol_item_procedimento (nr_sequencia_p text) FROM PUBLIC;

