-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_baca_ajuste_prest_inter () AS $body$
DECLARE


tp_pessoa_w			ptu_nota_cobranca.tp_pessoa%type;
nr_cnpj_cpf_w			ptu_nota_cobranca.nr_cnpj_cpf%type;
cd_cnes_cont_exec_w		ptu_nota_cobranca.cd_cnes_cont_exec%type;
cd_munic_cont_exec_w		ptu_nota_cobranca.cd_munic_cont_exec%type;
cd_cgc_prestador_w		varchar(14);
nr_cpf_prestador_w		varchar(11);
cd_municipio_ibge_w		sus_municipio.cd_municipio_ibge%type;
cd_pessoa_fisica_w		pessoa_fisica.cd_pessoa_fisica%type;
cd_cgc_w			pessoa_juridica.cd_cgc%type;
nr_seq_nota_cobr_w		ptu_nota_cobranca.nr_sequencia%type;
nr_seq_prest_inter_w		pls_prestador_intercambio.nr_sequencia%type;
nr_seq_proc_participante_w	pls_proc_participante.nr_sequencia%type;

c01 CURSOR FOR
	SELECT	nr_sequencia nr_seq_prest_inter,
		nm_prestador,
		cd_cnes
	from	pls_prestador_intercambio
	where	coalesce(nr_cpf::text, '') = ''
	and	coalesce(cd_cgc_intercambio::text, '') = '';

BEGIN
for r_c01_w in c01 loop
	select	max(nr_sequencia)
	into STRICT	nr_seq_nota_cobr_w
	from	ptu_nota_cobranca
	where	nr_seq_prest_inter	= r_c01_w.nr_seq_prest_inter;

	if (nr_seq_nota_cobr_w IS NOT NULL AND nr_seq_nota_cobr_w::text <> '') then
		-- Obter dados da nota cobrança
		select	max(tp_pessoa),
			max(nr_cnpj_cpf),
			max(cd_cnes_cont_exec),
			max(cd_munic_cont_exec)
		into STRICT	tp_pessoa_w,
			nr_cnpj_cpf_w,
			cd_cnes_cont_exec_w,
			cd_munic_cont_exec_w
		from	ptu_nota_cobranca
		where	nr_sequencia		= nr_seq_nota_cobr_w;

		nr_cpf_prestador_w	:= null;
		cd_cgc_prestador_w	:= null;
		cd_municipio_ibge_w	:= null;
		cd_pessoa_fisica_w	:= null;
		cd_cgc_w		:= null;
		nr_seq_prest_inter_w	:= null;

		if (tp_pessoa_w IS NOT NULL AND tp_pessoa_w::text <> '') then
			if (tp_pessoa_w = 'J') then
				cd_cgc_prestador_w		:= nr_cnpj_cpf_w;
			elsif (tp_pessoa_w = 'F') then
				nr_cpf_prestador_w		:= substr(nr_cnpj_cpf_w,4,11);
			end if;

			select	max(cd_municipio_ibge)
			into STRICT	cd_municipio_ibge_w
			from	sus_municipio
			where 	cd_municipio_ibge = cd_munic_cont_exec_w;

			if (nr_cpf_prestador_w IS NOT NULL AND nr_cpf_prestador_w::text <> '') then
				select	max(cd_pessoa_fisica)
				into STRICT	cd_pessoa_fisica_w
				from	pessoa_fisica
				where	nr_cpf = nr_cpf_prestador_w;

				select	min(nr_sequencia)
				into STRICT	nr_seq_prest_inter_w
				from	pls_prestador_intercambio
				where	nr_cpf	= nr_cpf_prestador_w;

			elsif (cd_cgc_prestador_w IS NOT NULL AND cd_cgc_prestador_w::text <> '') then
				select	max(cd_cgc)
				into STRICT	cd_cgc_w
				from	pessoa_juridica
				where	cd_cgc = cd_cgc_prestador_w;

				select	min(nr_sequencia)
				into STRICT	nr_seq_prest_inter_w
				from	pls_prestador_intercambio
				where	cd_cgc_intercambio	= cd_cgc_prestador_w;
			end if;

			if (nr_seq_prest_inter_w IS NOT NULL AND nr_seq_prest_inter_w::text <> '') then
				-- Trocar o prestador de intercambio pelo existente
				update	ptu_nota_cobranca
				set	nr_seq_prest_inter	= nr_seq_prest_inter_w
				where	nr_seq_prest_inter	= r_c01_w.nr_seq_prest_inter;

				update	pls_conta
				set	nr_seq_prest_inter	= nr_seq_prest_inter_w
				where	nr_seq_prest_inter	= r_c01_w.nr_seq_prest_inter;

				-- Trocar o prestador de intercambio pelo existente
				update	pls_proc_participante
				set	nr_seq_prest_inter	= nr_seq_prest_inter_w
				where	nr_seq_prest_inter	= r_c01_w.nr_seq_prest_inter;

				-- Excluir o prestador repetido
				delete	FROM pls_prestador_intercambio
				where	nr_sequencia	= r_c01_w.nr_seq_prest_inter;

			else
				update	pls_prestador_intercambio
				set	nr_cpf			= nr_cpf_prestador_w,
					cd_cgc_intercambio	= cd_cgc_prestador_w,
					cd_municipio_ibge	= cd_municipio_ibge_w,
					cd_cnes			= substr(cd_cnes_cont_exec_w,1,7),
					cd_pessoa_fisica	= cd_pessoa_fisica_w,
					cd_cgc			= cd_cgc_w
				where	nr_sequencia		= r_c01_w.nr_seq_prest_inter;
			end if;
		end if;
	else
		-- Buscar utilização como participante
		select	max(nr_sequencia)
		into STRICT	nr_seq_proc_participante_w
		from	pls_proc_participante
		where	nr_seq_prest_inter	= r_c01_w.nr_seq_prest_inter;

		if (nr_seq_proc_participante_w IS NOT NULL AND nr_seq_proc_participante_w::text <> '') then
			select	min(nr_sequencia)
			into STRICT	nr_seq_prest_inter_w
			from	pls_prestador_intercambio
			where ((nr_cpf IS NOT NULL AND nr_cpf::text <> '') or (cd_cgc_intercambio IS NOT NULL AND cd_cgc_intercambio::text <> ''))
			and	nm_prestador	= r_c01_w.nm_prestador;

			if (nr_seq_prest_inter_w IS NOT NULL AND nr_seq_prest_inter_w::text <> '') then
				-- Trocar o prestador de intercambio pelo existente
				update	pls_proc_participante
				set	nr_seq_prest_inter	= nr_seq_prest_inter_w
				where	nr_seq_prest_inter	= r_c01_w.nr_seq_prest_inter;

				-- Excluir o prestador repetido
				delete	FROM pls_prestador_intercambio
				where	nr_sequencia	= r_c01_w.nr_seq_prest_inter;
			else
				select	min(nr_sequencia)
				into STRICT	nr_seq_prest_inter_w
				from	pls_prestador_intercambio
				where	coalesce(nr_cpf::text, '') = ''
				and	coalesce(cd_cgc_intercambio::text, '') = ''
				and	nm_prestador	= r_c01_w.nm_prestador
				and	nr_sequencia	!= r_c01_w.nr_seq_prest_inter;

				if (nr_seq_prest_inter_w IS NOT NULL AND nr_seq_prest_inter_w::text <> '') then
					-- Trocar o prestador de intercambio pelo existente
					update	pls_proc_participante
					set	nr_seq_prest_inter	= nr_seq_prest_inter_w
					where	nr_seq_prest_inter	= r_c01_w.nr_seq_prest_inter;

					-- Excluir o prestador repetido
					delete	FROM pls_prestador_intercambio
					where	nr_sequencia	= r_c01_w.nr_seq_prest_inter;
				end if;
			end if;
		else
			-- Caso não esteja na NOTA_COBRANCA e nem como PARTICIPANTE
			if (r_c01_w.cd_cnes IS NOT NULL AND r_c01_w.cd_cnes::text <> '') then
				select 	min(nr_sequencia)
				into STRICT	nr_seq_prest_inter_w
				from	pls_prestador_intercambio
				where 	cd_cnes		= r_c01_w.cd_cnes
				and	nm_prestador	= r_c01_w.nm_prestador
				and	nr_sequencia	!= r_c01_w.nr_seq_prest_inter;

				if (nr_seq_prest_inter_w IS NOT NULL AND nr_seq_prest_inter_w::text <> '') then
					-- Excluir o prestador repetido
					delete	FROM pls_prestador_intercambio
					where	nr_sequencia	= r_c01_w.nr_seq_prest_inter;
				end if;
			end if;
		end if;
	end if;
end loop;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_baca_ajuste_prest_inter () FROM PUBLIC;

