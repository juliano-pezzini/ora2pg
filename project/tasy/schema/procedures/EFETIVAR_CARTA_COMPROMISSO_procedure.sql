-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE efetivar_carta_compromisso ( nr_interno_conta_p conta_paciente.nr_interno_conta%type default null, nr_titulo_pf_p titulo_receber.nr_titulo%type DEFAULT NULL, ie_origem_info_p text DEFAULT NULL, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type DEFAULT NULL, nm_usuario_p usuario.nm_usuario%type DEFAULT NULL) AS $body$
DECLARE


/*IE_ORIGEM_INFO_P: 
'C' - Conta Paciente, 
'T' - Manutenção de Títulos a Receber
*/
ds_erro_w 		varchar(4000);
nr_interno_conta_w		conta_paciente.nr_interno_conta%type;
cd_tipo_recebimento_w 	parametro_contas_receber.cd_tipo_receb_carta%type;

c01_cartas_conta CURSOR FOR
    SELECT 	nr_sequencia
	from 	carta_compromisso
	where 	ie_situacao = 'A'
	and		(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
	and		coalesce(dt_inativacao::text, '') = ''
	and		coalesce(nr_titulo_gerado::text, '') = ''
	and		coalesce(nr_titulo_baixa::text, '') = ''
	and		nr_interno_conta = nr_interno_conta_p
    order by nr_sequencia;
	
c02_cartas_titulo CURSOR FOR
	SELECT 	nr_sequencia
	from 	carta_compromisso
	where 	ie_situacao = 'A'
	and		(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
	and		coalesce(dt_inativacao::text, '') = ''
	and		coalesce(nr_titulo_gerado::text, '') = ''
	and		coalesce(nr_interno_conta::text, '') = ''
	and		coalesce(nr_seq_baixa::text, '') = ''
	and		nr_titulo_baixa = nr_titulo_pf_p
    order by nr_sequencia;
	
BEGIN
	
	if (ie_origem_info_p = 'C' and (nr_interno_conta_p IS NOT NULL AND nr_interno_conta_p::text <> '')) then
	
		for c01_w in c01_cartas_conta loop
			begin
				
			/*Gerar título instituição*/

			CALL gerar_titulo_rec_carta(c01_w.nr_sequencia, 'N', cd_estabelecimento_p, nm_usuario_p);
			
			/*Baixar título paciente*/

			CALL baixar_titulo_rec_carta(c01_w.nr_sequencia, nr_titulo_pf_p, 'N', cd_estabelecimento_p, nm_usuario_p);
			
			update	carta_compromisso
			set		ie_origem_titulo = ie_origem_info_p
			where	nr_sequencia = c01_w.nr_sequencia;
				
			exception
			when others then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(substr(sqlerrm, 1, 500));	
			end;
			
		end loop;
	
	elsif (ie_origem_info_p = 'T' and (nr_titulo_pf_p IS NOT NULL AND nr_titulo_pf_p::text <> '')) then

		for c02_w in c02_cartas_titulo loop
			begin
				
			/*Gerar título instituição*/

			CALL gerar_titulo_rec_carta(c02_w.nr_sequencia, 'N', cd_estabelecimento_p, nm_usuario_p);
			
			/*Baixar título paciente*/

			CALL baixar_titulo_rec_carta(c02_w.nr_sequencia, nr_titulo_pf_p, 'N', cd_estabelecimento_p, nm_usuario_p);
			
			select	max(nr_interno_conta)
			into STRICT	nr_interno_conta_w
			from	titulo_receber
			where	nr_titulo = nr_titulo_pf_p;
			
			update	carta_compromisso
			set		ie_origem_titulo = ie_origem_info_p,
					nr_interno_conta = nr_interno_conta_w
			where	nr_sequencia = c02_w.nr_sequencia;
			
			exception when others then
				rollback;
				
				update 	carta_compromisso
				set		nr_titulo_baixa  = NULL,
						nr_seq_baixa  = NULL
				where	nr_sequencia = c02_w.nr_sequencia;
				commit;

				CALL wheb_mensagem_pck.exibir_mensagem_abort(substr(sqlerrm, 1, 500));
			end;
		end loop;

		commit;
	end if;
	
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE efetivar_carta_compromisso ( nr_interno_conta_p conta_paciente.nr_interno_conta%type default null, nr_titulo_pf_p titulo_receber.nr_titulo%type DEFAULT NULL, ie_origem_info_p text DEFAULT NULL, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type DEFAULT NULL, nm_usuario_p usuario.nm_usuario%type DEFAULT NULL) FROM PUBLIC;

