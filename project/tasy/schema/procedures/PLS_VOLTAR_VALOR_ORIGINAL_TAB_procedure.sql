-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_voltar_valor_original_tab ( nr_seq_tabela_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE



nr_seq_tabela_origin_w	bigint;
nr_seq_preco_w		bigint;

nr_seq_lote_log_w	bigint;
qt_idade_inicial_w	bigint;
qt_idade_final_w	bigint;
vl_inicial_novo_w	double precision;
vl_preco_inicial_w	double precision;
tx_adaptacao_w		double precision;
vl_adaptacao_w		double precision;
vl_adaptacao_ww		double precision;
nr_seq_plano_w		bigint;

C01 CURSOR FOR
	SELECT	nr_sequencia,
		qt_idade_inicial,
		qt_idade_final,
		vl_adaptacao
	from	pls_plano_preco
	where	nr_seq_tabela	= nr_seq_tabela_origin_w;


BEGIN

select	max(nr_seq_tabela_original),
	max(nr_seq_plano)
into STRICT	nr_seq_tabela_origin_w,
	nr_seq_plano_w
from	pls_tabela_preco
where	nr_sequencia	= nr_seq_tabela_p;

/* Gravar log alteração tabela preço */

select	nextval('pls_manutencao_tabela_log_seq')
into STRICT	nr_seq_lote_log_w
;

insert	into	pls_manutencao_tabela_log(nr_sequencia, nr_seq_tabela, cd_estabelecimento,
	dt_log, nm_usuario_log, dt_atualizacao,
	nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec)
values (nr_seq_lote_log_w, nr_seq_tabela_p, cd_estabelecimento_p,
	clock_timestamp(), nm_usuario_p, clock_timestamp(),
	nm_usuario_p, clock_timestamp(), nm_usuario_p);

select	max(tx_adaptacao)
into STRICT	tx_adaptacao_w
from	pls_regra_adaptacao_plano
where	cd_estabelecimento	= cd_estabelecimento_p
and	clock_timestamp() between dt_inicio_vigencia and fim_dia(coalesce(dt_fim_vigencia,clock_timestamp()))
and	((coalesce(nr_seq_grupo_produto::text, '') = '') or (pls_se_grupo_preco_produto(nr_seq_grupo_produto,nr_seq_plano_w) = 'S'));

if (coalesce(tx_adaptacao_w::text, '') = '') then
	tx_adaptacao_w	:= 0;
end if;

if (nr_seq_tabela_origin_w IS NOT NULL AND nr_seq_tabela_origin_w::text <> '') then
	open C01;
	loop
	fetch C01 into
		nr_seq_preco_w,
		qt_idade_inicial_w,
		qt_idade_final_w,
		vl_adaptacao_ww;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		select	max(vl_preco_atual)
		into STRICT	vl_preco_inicial_w
		from	pls_plano_preco
		where	nr_seq_tabela		= nr_seq_tabela_p
		and	qt_idade_inicial	= qt_idade_inicial_w
		and	qt_idade_final		= qt_idade_final_w;

		delete	FROM pls_plano_preco
		where	nr_seq_tabela		= nr_seq_tabela_p
		and	qt_idade_inicial	= qt_idade_inicial_w
		and	qt_idade_final		= qt_idade_final_w;

		if (coalesce(vl_adaptacao_ww,0) = 0) then
			tx_adaptacao_w	:= 0;
		end if;

		insert into pls_plano_preco(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
				nr_seq_tabela, qt_idade_inicial, qt_idade_final, vl_preco_inicial, vl_preco_atual,
				tx_acrescimo, vl_preco_nao_subsidiado, vl_preco_nao_subsid_atual, vl_minimo,
				ie_grau_titularidade,vl_adaptacao)
			(SELECT	nextval('pls_plano_preco_seq'), clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p,
				nr_seq_tabela_p, qt_idade_inicial, qt_idade_final, vl_preco_inicial, vl_preco_atual,
				tx_acrescimo, vl_preco_nao_subsidiado, vl_preco_nao_subsid_atual, vl_minimo,
				ie_grau_titularidade,dividir((vl_preco_inicial * tx_adaptacao_w), 100)
			from	pls_plano_preco
			where	nr_sequencia = nr_seq_preco_w);

		select	max(vl_preco_atual)
		into STRICT	vl_inicial_novo_w
		from	pls_plano_preco
		where	nr_sequencia = nr_seq_preco_w;

		insert	into	pls_manutencao_preco_log(nr_sequencia, nr_seq_log, cd_estabelecimento,
			qt_idade_inicial, qt_idade_final, vl_preco_inicial,
			vl_preco_final, dt_atualizacao, nm_usuario,
			dt_atualizacao_nrec, nm_usuario_nrec, tx_acrescimo,
			tx_desconto)
		values (nextval('pls_manutencao_preco_log_seq'), nr_seq_lote_log_w, cd_estabelecimento_p,
			qt_idade_inicial_w, qt_idade_final_w, vl_preco_inicial_w,
			vl_inicial_novo_w, clock_timestamp(), nm_usuario_p,
			clock_timestamp(), nm_usuario_p, 0,
			0);
		end;
	end loop;
	close C01;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_voltar_valor_original_tab ( nr_seq_tabela_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

