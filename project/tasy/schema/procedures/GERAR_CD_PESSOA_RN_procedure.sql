-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_cd_pessoa_rn ( nr_atendimento_p bigint, nm_usuario_p text, nr_seq_nascimento_p bigint, cd_setor_atendimento_p bigint, cd_acomodacao_p bigint, cd_unidade_basica_p text, cd_unidade_compl_p text, cd_pessoa_rn_p INOUT text) AS $body$
DECLARE


cd_pessoa_fisica_w		varchar(10);
cd_pessoa_rn_w			varchar(10);
nr_atend_rn_w			bigint;
nr_seq_interno_w		bigint;
ie_gerar_ci_w			varchar(01)	:= 'N';
cd_setor_usuario_w		bigint;
cd_estabelecimento_w		bigint;
nr_sequencia_w			bigint;
ie_sexo_w			varchar(01);
nr_seq_nasc_w			bigint;
dt_nascimento_rn_w		timestamp;
ie_sexo_rn_w			varchar(1);
nr_cor_pele_rn_w		bigint;
qt_altura_rn_w			smallint;
nr_seq_unid_rn_w		bigint;
ie_setor_w			bigint;
cd_setor_passagem_w		bigint;
cd_setor_rn_w			integer;
cd_unidade_bas_rn_w		varchar(10);
cd_unidade_comp_rn_w		varchar(10);
cd_acomod_rn_w			smallint;
qt_max_acomp_rn_w		smallint;
cd_nacionalidade_w		varchar(8);
qt_atendimentos_mae_w		bigint;
ds_rn_w				varchar(255);
qt_nasc_vivos_w			smallint;
cd_perfil_w			integer;
nm_usuario_original_w		varchar(15);
ie_medico_rn_w		varchar(2);
cd_medico_resp_w	varchar(10);
ie_compl_mae_w		varchar(1);
nr_seq_compl_w		smallint;
nr_seq_perfil_pep_w		varchar(10);
cid_rn_w			varchar(10);
ie_clinica_rn_w			integer;
dt_final_vigencia_w		timestamp;
ie_tipo_atend_rn_w		integer;
ie_gera_lancto_auto_rn_w	varchar(1);
cd_setor_paciente_w		bigint;
qt_idade_w			bigint;
nr_seq_evento_w			bigint;
dt_liberacao_w			timestamp;
ie_vivo_w			varchar(1);
ie_numeracao_rn_w	varchar(1);
cd_municipio_ibge_w			varchar(10);
cd_declaracao_nasc_vivo_w varchar(30);
qt_atendimentos_mae_ww		smallint;
nr_seq_person_name_ww	pessoa_fisica.nr_seq_person_name%type;
ds_given_name_w			person_name.ds_given_name%type;
ds_name_surename_w		varchar(256);
is_name_feature_w		varchar(1);
nr_seq_person_name_w	pessoa_fisica.nr_seq_person_name%type;

C01 CURSOR FOR
	SELECT	nr_seq_evento
	from 	regra_envio_sms
	where	cd_estabelecimento = cd_estabelecimento_w
	and	ie_evento_disp 	=	'GARN'
	and	qt_idade_w between coalesce(qt_idade_min,-1)	and coalesce(qt_idade_max,9999)
	and	coalesce(cd_setor_atendimento,cd_setor_paciente_w) = cd_setor_paciente_w
	and	coalesce(ie_situacao,'A') = 'A';


BEGIN

select	coalesce(max(ie_numeracao_rn),'R')
into STRICT	ie_numeracao_rn_w
from 	parametro_medico
where	cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento;

select	coalesce(max(nr_atend_rn),0),
		coalesce(max(CD_PESSOA_RN),0),
		coalesce(NR_DNV,null)
into STRICT	nr_atend_rn_w,
		cd_pessoa_rn_w,
		cd_declaracao_nasc_vivo_w
from	nascimento
where	nr_sequencia	= nr_seq_nascimento_p
and	nr_atendimento	= nr_atendimento_p
group by nr_atend_rn,CD_PESSOA_RN,NR_DNV;


if (nr_atend_rn_w = 0) and (cd_pessoa_rn_w = 0) then
	begin
	ie_medico_rn_w := obter_param_usuario(281, 377, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_medico_rn_w);
	nr_seq_perfil_pep_w := obter_param_usuario(5, 67, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, nr_seq_perfil_pep_w);
	cd_setor_passagem_w := obter_param_usuario(3111, 98, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, cd_setor_passagem_w);

	/* verifica se deve enviar comunicacao interna */

	select	coalesce(max(obter_valor_param_usuario(916, 122, obter_perfil_ativo, nm_usuario_p, 0)), 'N'),
		coalesce(max(obter_valor_param_usuario(916, 505, obter_perfil_ativo, nm_usuario_p, 0)), 'N')
	into STRICT	ie_gerar_ci_w,
		ie_gera_lancto_auto_rn_w
	;

	/* pega o setor do usuario */

	select	coalesce(max(cd_setor_atendimento),0)
	into STRICT	cd_setor_usuario_w
	from 	usuario
	where	nm_usuario	= nm_usuario_p;

	/* verifica dados da mae */

	select	coalesce(max(a.cd_pessoa_fisica), '0'),
		max(b.ie_sexo),
		max(b.nr_seq_person_name),
    max(b.cd_estabelecimento)
	into STRICT	cd_pessoa_fisica_w,
		ie_sexo_w,
		nr_seq_person_name_ww,
    cd_estabelecimento_w
	from	pessoa_fisica b,
		atendimento_paciente a
	where	nr_atendimento		= nr_atendimento_p
	and	a.cd_pessoa_fisica	= b.cd_pessoa_fisica;
	
	if (nr_seq_person_name_ww IS NOT NULL AND nr_seq_person_name_ww::text <> '') then
        if (coalesce(pkg_i18n.get_user_locale, 'pt_BR') IN ('es_MX')) then
            select  ds_given_name,
                    substr(DS_FAMILY_NAME||' '||DS_COMPONENT_NAME_1,1,256)
            into STRICT	ds_given_name_w,
                    ds_name_surename_w
            from    person_name
            where   nr_sequencia = nr_seq_person_name_ww
            and     ds_type = 'main';
        end if;
        if (coalesce(pkg_i18n.get_user_locale, 'pt_BR') IN ('es_BO')) then
            select  ds_given_name,
                    substr(DS_COMPONENT_NAME_1  ||' ' || DS_FAMILY_NAME,1,256)
            into STRICT	ds_given_name_w,
                    ds_name_surename_w
            from    person_name
            where   nr_sequencia = nr_seq_person_name_ww
            and     ds_type = 'main';
        end if;
	end if;
	

	/* pega a nacionalidade brasileira para os recem-nascidos */

	select	max(cd_nacionalidade)
	into STRICT	cd_nacionalidade_w
	from 	nacionalidade
	where	ie_brasileiro = 'S'
	and	coalesce(ie_situacao,'A') = 'A';

	if (ie_sexo_w <> 'F') then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(210473);
	end if;

	/* verifica sequencia do nascimento */

	if (nr_seq_nascimento_p = 0) then
		select	coalesce(max(nr_sequencia),0)
		into STRICT	nr_seq_nasc_w
		from	nascimento
		where	nr_atendimento		= nr_atendimento_p
		and	coalesce(nr_atend_rn::text, '') = '';
	else
		nr_seq_nasc_w	:= nr_seq_nascimento_p;
	end if;

	/* nao deixa inserir se nao tiver registro de nascimento */

	
	
	if (nr_seq_nasc_w = 0) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(210474);		
	end if;

	if (coalesce(cd_setor_atendimento_p,0) = 0) or (coalesce(cd_acomodacao_p,-1) = -1) or (cd_unidade_basica_p = '') then

		begin

		select	coalesce(nr_seq_unidade_rn, 0)
		into STRICT	nr_seq_unid_rn_w
		from	setor_atendimento
		where	cd_setor_atendimento	= obter_setor_atendimento(nr_atendimento_p);
		exception
			when others then
			nr_seq_unid_rn_w	:= 0;
		end;
		/*
		if	(nr_seq_unid_rn_w = 0) then
			wheb_mensagem_pck.exibir_mensagem_abort(210475);		
		end if;
		*/
	end if;

	if (cd_pessoa_fisica_w <> '0') then
		begin

		/* le dados do recem nascido para complementar o cadastro */

		select	dt_nascimento,
			ie_sexo,
			nr_cor_pele,
			qt_altura
		into STRICT	dt_nascimento_rn_w,
			ie_sexo_rn_w,
			nr_cor_pele_rn_w,
			qt_altura_rn_w
		from	nascimento
		where	nr_atendimento	= nr_atendimento_p
		and	nr_sequencia	= nr_seq_nasc_w;

		select	nextval('pessoa_fisica_seq')
		into STRICT	cd_pessoa_rn_w
		;

		select	coalesce(max(qt_nasc_vivos),0)
		into STRICT	qt_nasc_vivos_w
		from	parto
		where	nr_atendimento = nr_atendimento_p;

		select	count(*)
		into STRICT	qt_atendimentos_mae_w
		from	atendimento_paciente
		where	nr_atendimento_mae = nr_atendimento_p;

		ds_rn_w := 'RN de ';
		/*if	(qt_nasc_vivos_w > 1) then
			ds_rn_w := 'RN ' || converte_numero_romano(qt_atendimentos_mae_w + 1) || ' de ';
		end if;*/
		
		select	coalesce(max(IE_UNICO_NASC_VIVO),'N')
		into STRICT	ie_vivo_w
		from	NASCIMENTO
		where	nr_sequencia = nr_seq_nascimento_p;
		
		select	count(*)
		into STRICT	qt_atendimentos_mae_ww
		from	nascimento
		where	nr_atendimento	= nr_atendimento_p;
		
		ds_rn_w := Wheb_mensagem_pck.get_texto(308831)|| ' '; --'RN de ';
		if (qt_nasc_vivos_w > 1) or (qt_atendimentos_mae_ww > 1)then
				if (ie_numeracao_rn_w = 'R') then
					ds_rn_w := Wheb_mensagem_pck.get_texto(308832) || ' ' /*'RN '*/ || converte_numero_romano(nr_seq_nascimento_p) || ' ' || Wheb_mensagem_pck.get_texto(308483) || ' '; --' de ';
				else
					ds_rn_w := Wheb_mensagem_pck.get_texto(308832) || ' ' /*'RN '*/ || nr_seq_nascimento_p || ' ' || Wheb_mensagem_pck.get_texto(308483) || ' '; --' de ';
				end if;
		end if;

		if (ie_medico_rn_w = 'S') then
			select	max(cd_pediatra_rn)
			into STRICT	cd_medico_resp_w
			from 	nascimento
			where	nr_atendimento = nr_atendimento_p
			and	nr_sequencia	= nr_seq_nasc_w;
		else
			select	max(cd_medico_resp)
			into STRICT	cd_medico_resp_w
			from 	atendimento_paciente
			where	nr_atendimento = nr_atendimento_p;

		end if;

		if (coalesce(cd_medico_resp_w::text, '') = '') then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(210476);	
		end if;
		
		
		select	max(b.cd_municipio_ibge)
		into STRICT	cd_municipio_ibge_w
		from	estabelecimento a,
				pessoa_juridica b
		where	a.CD_CGC = b.CD_CGC
		and		a.cd_estabelecimento = obter_estabelecimento_ativo;

		is_name_feature_w := obter_valor_param_Usuario(0, 213, null, null, null);
		
		if (is_name_feature_w <> 'N') then
			begin
			INSERT INTO person_name(
					 nr_sequencia
					,dt_atualizacao
					,nm_usuario
					,dt_atualizacao_nrec
					,nm_usuario_nrec
					,ds_type
					,ds_given_name
					,ds_family_name
					,ds_component_name_1
					,ds_component_name_2
					,ds_component_name_3
					)
				VALUES (
					nextval('person_name_seq')
					,clock_timestamp()
					,nm_usuario_p
					,clock_timestamp()
					,nm_usuario_p
					,'main'
					,case when(ds_given_name_w IS NOT NULL AND ds_given_name_w::text <> '') then substr(ds_rn_w || ds_given_name_w,1,60) else substr(ds_rn_w || (select nm_pessoa_fisica from pessoa_fisica where cd_pessoa_fisica	= cd_pessoa_fisica_w),1,60) end
					--,substr(ds_rn_w || (select nm_pessoa_fisica from pessoa_fisica where cd_pessoa_fisica	= cd_pessoa_fisica_w),1,60)
					,case when(ds_name_surename_w IS NOT NULL AND ds_name_surename_w::text <> '') then ds_name_surename_w else '' end
					,''
					,''
					,''
					) returning nr_sequencia
			INTO STRICT nr_seq_person_name_w;
			end;
		end if;
		

		insert	into pessoa_fisica(cd_pessoa_fisica,
			ie_tipo_pessoa,
			nm_pessoa_fisica,
			dt_atualizacao,
			nm_usuario,
			dt_nascimento,
			qt_altura_cm,
			nr_seq_cor_pele,
			ie_sexo,
			cd_nacionalidade,
			nr_seq_perfil,
			ie_funcionario,
			CD_PESSOA_MAE,
			ie_estado_civil,
			IE_GRAU_INSTRUCAO,
			CD_MUNICIPIO_IBGE,
			nr_ddd_celular,
			nr_telefone_celular,
			cd_religiao,
			cd_declaracao_nasc_vivo,
			nr_seq_person_name,
      cd_estabelecimento)
		(SELECT	cd_pessoa_rn_w,
			ie_tipo_pessoa,
			substr(ds_rn_w || nm_pessoa_fisica,1,60),
			clock_timestamp(),
			nm_usuario_p,
			trunc(dt_nascimento_rn_w),
			qt_altura_rn_w,
			nr_cor_pele_rn_w,
			ie_sexo_rn_w,
			cd_nacionalidade_w,
			nr_seq_perfil_pep_w,
			'N',
			cd_pessoa_fisica_w,
			1,
			11,
			cd_municipio_ibge_w,
			nr_ddd_celular,
			nr_telefone_celular,
			cd_religiao,
			cd_declaracao_nasc_vivo_w,
			nr_seq_person_name_w,
      cd_estabelecimento_w
		from	pessoa_fisica
		where	cd_pessoa_fisica	= cd_pessoa_fisica_w);

		commit; /*incluido o commit por conta da integracao da agfa no samaritano. pedido elemar.*/


		/* cria o complemento dela */

		insert into compl_pessoa_fisica(
			cd_pessoa_fisica,
			nr_sequencia,
			ie_tipo_complemento,
			nm_usuario,
			dt_atualizacao,
			nm_contato,
			cd_cep,
			ds_endereco,
			nr_endereco,
			ds_complemento,
			ds_bairro,
			ds_municipio,
			cd_municipio_ibge,
			sg_estado,
			nr_seq_pais,
			nr_telefone,
			nr_ramal,
			ds_fax,
			ds_fone_adic,
			ds_observacao,
			CD_TIPO_LOGRADOURO,
			nr_ddd_telefone
		) SELECT
			cd_pessoa_rn_w,
			nr_sequencia,
			ie_tipo_complemento,
			nm_usuario_p,
			clock_timestamp(),
			nm_contato,
			cd_cep,
			ds_endereco,
			nr_endereco,
			ds_complemento,
			ds_bairro,
			ds_municipio,
			cd_municipio_ibge,
			sg_estado,
			nr_seq_pais,
			nr_telefone,
			nr_ramal,
			ds_fax,
			ds_fone_adic,
			ds_observacao,
			CD_TIPO_LOGRADOURO,
			nr_ddd_telefone
		from	compl_pessoa_fisica
		where	cd_pessoa_fisica	= cd_pessoa_fisica_w
		and	ie_tipo_complemento	= 1  LIMIT 1;

		insert into compl_pessoa_fisica(
			cd_pessoa_fisica,
			nr_sequencia,
			ie_tipo_complemento,
			nm_usuario,
			dt_atualizacao,
			cd_cep,
			ds_endereco,
			nr_endereco,
			ds_complemento,
			ds_bairro,
			ds_municipio,
			cd_municipio_ibge,
			sg_estado,
			nr_telefone,
			nr_ramal,
			ds_fax,
			ds_fone_adic, 
			ds_observacao,
			nm_contato,
			CD_PESSOA_FISICA_REF,
			CD_TIPO_LOGRADOURO,
			nr_ddd_telefone
		) SELECT
			cd_pessoa_rn_w,
			(nr_sequencia + 1),
			5,
			nm_usuario_p,
			clock_timestamp(),
			cd_cep,
			ds_endereco,
			nr_endereco,
			ds_complemento,
			ds_bairro,
			ds_municipio,
			cd_municipio_ibge,
			sg_estado,
			nr_telefone,
			nr_ramal,
			ds_fax,
			ds_fone_adic,
			ds_observacao,
			obter_nome_pf(cd_pessoa_fisica_w),
			cd_pessoa_fisica_w,
			CD_TIPO_LOGRADOURO,
			nr_ddd_telefone
		from	compl_pessoa_fisica
		where	cd_pessoa_fisica	= cd_pessoa_fisica_w
		and	ie_tipo_complemento	= 1  LIMIT 1;
				
		select	coalesce(max(nr_sequencia),0) + 1
		into STRICT	nr_sequencia_w
		from	compl_pessoa_fisica
		where	cd_pessoa_fisica	= cd_pessoa_rn_w;	
		
	insert into compl_pessoa_fisica(
			cd_pessoa_fisica,
			nr_sequencia,
			ie_tipo_complemento,
			nm_usuario,
			dt_atualizacao,
			cd_cep,
			ds_endereco,
			nr_endereco,
			ds_complemento,
			ds_bairro,
			ds_municipio,
			cd_municipio_ibge,
			sg_estado,
			nr_telefone,
			nr_ramal,
			ds_fax,
			ds_fone_adic,
			ds_observacao,
			nm_contato,
			nr_ddd_telefone
		) SELECT
			cd_pessoa_rn_w,
			nr_sequencia_w,
			3,
			nm_usuario_p,
			clock_timestamp(),
			cd_cep,
			ds_endereco,
			nr_endereco,
			ds_complemento,
			ds_bairro,
			ds_municipio,
			cd_municipio_ibge,
			sg_estado,
			nr_telefone,
			nr_ramal,
			ds_fax,
			ds_fone_adic,
			ds_observacao,
			obter_nome_pf(cd_pessoa_fisica_w),
			nr_ddd_telefone
		from	compl_pessoa_fisica
		where	cd_pessoa_fisica	= cd_pessoa_fisica_w
		and	ie_tipo_complemento	= 1  LIMIT 1;				
		
		

		select coalesce(max('S'),'N')
		into STRICT	ie_compl_mae_w
		from	compl_pessoa_fisica
		where	ie_tipo_complemento = 5
		and	cd_pessoa_fisica = cd_pessoa_rn_w;

		if (ie_compl_mae_w = 'N') then
			select	count(*)
			into STRICT	nr_seq_compl_w
			from	compl_pessoa_fisica
			where	cd_pessoa_fisica	= cd_pessoa_rn_w
			and		ie_tipo_complemento	= 1;

			if (nr_seq_compl_w = 0) then
				nr_seq_compl_w := 1;
			else
				select	max(nr_sequencia)
				into STRICT	nr_seq_compl_w
				from	compl_pessoa_fisica
				where	cd_pessoa_fisica	= cd_pessoa_rn_w
				and		ie_tipo_complemento	= 1;
			end if;

			insert into compl_pessoa_fisica(
						cd_pessoa_fisica,
						nr_sequencia,
						ie_tipo_complemento,
						nm_usuario,
						dt_atualizacao,
						nm_contato,
						CD_PESSOA_FISICA_REF
					)  SELECT	cd_pessoa_rn_w,
						nr_seq_compl_w,
						5,
						nm_usuario_p,
						clock_timestamp(),
						obter_nome_pf(cd_pessoa_fisica_w),
						cd_pessoa_fisica_w
						;
		end if;
		
		cd_pessoa_rn_p := cd_pessoa_rn_w;
		
		update	nascimento
		set	CD_PESSOA_RN = cd_pessoa_rn_w
		where	nr_atendimento = nr_atendimento_p
		and	nr_sequencia = nr_seq_nasc_w;
		
		
		commit; /*incluido o commit por conta da integracao da agfa no samaritano. pedido elemar.*/
		end;
	end if;
	end;
end if;

  if (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '' AND nr_seq_nascimento_p IS NOT NULL AND nr_seq_nascimento_p::text <> '') then
      CALL INSERIR_PACIENTE_VACINA_RN(null, nr_atendimento_p, nr_seq_nascimento_p, null, null, null, nm_usuario_p, 'ST');
      commit;
  end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_cd_pessoa_rn ( nr_atendimento_p bigint, nm_usuario_p text, nr_seq_nascimento_p bigint, cd_setor_atendimento_p bigint, cd_acomodacao_p bigint, cd_unidade_basica_p text, cd_unidade_compl_p text, cd_pessoa_rn_p INOUT text) FROM PUBLIC;

