-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_sib_carregar_dados ( cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


tb_nr_seq_segurado_w			pls_util_cta_pck.t_number_table;
tb_ie_tipo_movimento_w			pls_util_cta_pck.t_number_table;
tb_cd_cco_w				pls_util_cta_pck.t_varchar2_table_15;
tb_nm_beneficiario_w			pls_util_cta_pck.t_varchar2_table_255;
tb_dt_rescisao_w			pls_util_cta_pck.t_date_table;
tb_nr_seq_motivo_cancel_w		pls_util_cta_pck.t_number_table;
tb_cd_motivo_cancelamento_w		pls_util_cta_pck.t_varchar2_table_5;
tb_dt_reativacao_w			pls_util_cta_pck.t_date_table;
tb_dt_nascimento_w			pls_util_cta_pck.t_date_table;
tb_cd_sexo_w				pls_util_cta_pck.t_number_table;
tb_nr_cpf_w				pls_util_cta_pck.t_varchar2_table_15;
tb_nr_pis_pasep_w			pls_util_cta_pck.t_varchar2_table_15;
tb_nm_mae_w				pls_util_cta_pck.t_varchar2_table_255;
tb_nr_dn_w				pls_util_cta_pck.t_varchar2_table_15;
tb_nr_cns_w				pls_util_cta_pck.t_number_table;
tb_cd_beneficiario_w			pls_util_cta_pck.t_varchar2_table_50;
tb_cd_beneficiario_titular_w		pls_util_cta_pck.t_varchar2_table_50;
tb_dt_contratacao_w			pls_util_cta_pck.t_date_table;
tb_nr_seq_plano_w			pls_util_cta_pck.t_number_table;
tb_nr_plano_ans_w			pls_util_cta_pck.t_varchar2_table_50;
tb_nr_plano_operadora_w			pls_util_cta_pck.t_varchar2_table_50;
tb_nr_plano_portabilidade_w		pls_util_cta_pck.t_varchar2_table_50;
tb_ie_cpt_w				pls_util_cta_pck.t_number_table;
tb_ie_itens_excluidos_cober_w		pls_util_cta_pck.t_number_table;
tb_nr_cnpj_w				pls_util_cta_pck.t_varchar2_table_15;
tb_nr_cei_w				pls_util_cta_pck.t_varchar2_table_50;
tb_cd_caepf_w				pls_util_cta_pck.t_varchar2_table_15;
tb_nr_seq_parentesco_w			pls_util_cta_pck.t_number_table;
tb_cd_relacao_dependencia_w		pls_util_cta_pck.t_number_table;
tb_ie_tipo_endereco_w			pls_util_cta_pck.t_varchar2_table_5;
tb_ds_logradouro_w			pls_util_cta_pck.t_varchar2_table_255;
tb_nr_logradouro_w			pls_util_cta_pck.t_varchar2_table_5;
tb_ds_complemento_w			pls_util_cta_pck.t_varchar2_table_255;
tb_ds_bairro_w				pls_util_cta_pck.t_varchar2_table_255;
tb_cd_municipio_ibge_w			pls_util_cta_pck.t_varchar2_table_15;
tb_cd_cep_w				pls_util_cta_pck.t_varchar2_table_15;
tb_ie_reside_exterior_w			pls_util_cta_pck.t_varchar2_table_5;
tb_cd_municipio_ibge_resid_w		pls_util_cta_pck.t_varchar2_table_15;
tb_nr_seq_movimento_w			pls_util_cta_pck.t_number_table;
tb_nr_seq_status_exclusao_w		pls_util_cta_pck.t_number_table;

indice_w				bigint;

C01 CURSOR FOR
	SELECT	a.nr_sequencia nr_seq_segurado
	from	pls_segurado a
	where	a.ie_tipo_segurado in ('B','R')
	and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')  --Somente beneficiÃ¡rios liberados
	and	a.cd_estabelecimento	= cd_estabelecimento_p
	and	not exists (	SELECT	1
				from	pls_sib_segurado x
				where	x.nr_seq_segurado = a.nr_sequencia);

procedure limpar_vetores is;
BEGIN
indice_w := 0;
tb_nr_seq_segurado_w.delete;
tb_ie_tipo_movimento_w.delete;
tb_cd_cco_w.delete;
tb_nm_beneficiario_w.delete;
tb_dt_rescisao_w.delete;
tb_nr_seq_motivo_cancel_w.delete;
tb_cd_motivo_cancelamento_w.delete;
tb_dt_reativacao_w.delete;
tb_dt_nascimento_w.delete;
tb_cd_sexo_w.delete;
tb_nr_cpf_w.delete;
tb_nr_pis_pasep_w.delete;
tb_nm_mae_w.delete;
tb_nr_dn_w.delete;
tb_nr_cns_w.delete;
tb_cd_beneficiario_w.delete;
tb_cd_beneficiario_titular_w.delete;
tb_dt_contratacao_w.delete;
tb_nr_seq_plano_w.delete;
tb_nr_plano_ans_w.delete;
tb_nr_plano_operadora_w.delete;
tb_nr_plano_portabilidade_w.delete;
tb_ie_cpt_w.delete;
tb_ie_itens_excluidos_cober_w.delete;
tb_nr_cnpj_w.delete;
tb_nr_cei_w.delete;
tb_cd_caepf_w.delete;
tb_nr_seq_parentesco_w.delete;
tb_cd_relacao_dependencia_w.delete;
tb_ie_tipo_endereco_w.delete;
tb_ds_logradouro_w.delete;
tb_nr_logradouro_w.delete;
tb_ds_complemento_w.delete;
tb_ds_bairro_w.delete;
tb_cd_municipio_ibge_w.delete;
tb_cd_cep_w.delete;
tb_ie_reside_exterior_w.delete;
tb_cd_municipio_ibge_resid_w.delete;
tb_nr_seq_movimento_w.delete;
tb_nr_seq_status_exclusao_w.delete;
end;

procedure inserir_sib_segurado(	ie_final_p	varchar2) is
begin
if (indice_w = pls_util_pck.qt_registro_transacao_w) or (ie_final_p = 'S') then
	if (tb_nr_seq_segurado_w.count > 0) then
		forall i in tb_nr_seq_segurado_w.first..tb_nr_seq_segurado_w.last
			insert	into pls_sib_segurado(
					nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec,
					nm_usuario_nrec, nm_beneficiario, nm_mae, dt_nascimento,
					nr_cpf, nr_cns, nr_pis_pasep, nr_dn,
					cd_sexo, dt_cancelamento, cd_motivo_cancelamento, dt_reativacao,
					cd_beneficiario, cd_beneficiario_titular, dt_contratacao, nr_plano_ans,
					nr_plano_operadora, nr_plano_portabilidade, ie_cpt, ie_itens_excluidos_cobertura,
					nr_cnpj, nr_cei, cd_caepf, cd_relacao_dependencia, ie_tipo_endereco,
					ds_logradouro, nr_logradouro, ds_complemento, ds_bairro,
					cd_municipio_ibge, cd_cep, ie_reside_exterior, cd_municipio_ibge_resid,
					nr_seq_segurado)
			values ( 	nextval('pls_sib_segurado_seq'), clock_timestamp(), nm_usuario_p, clock_timestamp(),
					nm_usuario_p, tb_nm_beneficiario_w(i), tb_nm_mae_w(i), tb_dt_nascimento_w(i),
					tb_nr_cpf_w(i), tb_nr_cns_w(i), tb_nr_pis_pasep_w(i), tb_nr_dn_w(i),
					tb_cd_sexo_w(i), tb_dt_rescisao_w(i), tb_cd_motivo_cancelamento_w(i), tb_dt_reativacao_w(i),
					tb_cd_beneficiario_w(i), tb_cd_beneficiario_titular_w(i),tb_dt_contratacao_w(i), tb_nr_plano_ans_w(i),
					tb_nr_plano_operadora_w(i), tb_nr_plano_portabilidade_w(i), tb_ie_cpt_w(i), tb_ie_itens_excluidos_cober_w(i),
					tb_nr_cnpj_w(i), tb_nr_cei_w(i), tb_cd_caepf_w(i), tb_cd_relacao_dependencia_w(i), tb_ie_tipo_endereco_w(i),
					tb_ds_logradouro_w(i), tb_nr_logradouro_w(i), tb_ds_complemento_w(i),  tb_ds_bairro_w(i),
					tb_cd_municipio_ibge_w(i), tb_cd_cep_w(i), tb_ie_reside_exterior_w(i), tb_cd_municipio_ibge_resid_w(i),
					tb_nr_seq_segurado_w(i));
		commit;
		CALL CALL limpar_vetores();
	end if;
else
	indice_w := indice_w + 1;
end if;
end;

procedure carregar_vetores is
begin
if (pls_sib_dados_benef_pck.nr_seq_segurado IS NOT NULL AND pls_sib_dados_benef_pck.nr_seq_segurado::text <> '') then
	tb_nm_beneficiario_w(indice_w) 			:= trim(both pls_sib_dados_benef_pck.nm_beneficiario);
	tb_nm_mae_w(indice_w)				:= trim(both pls_sib_dados_benef_pck.nm_mae);
	tb_dt_nascimento_w(indice_w)			:= pls_sib_dados_benef_pck.dt_nascimento;
	tb_nr_cpf_w(indice_w)				:= pls_sib_dados_benef_pck.nr_cpf;
	tb_nr_cns_w(indice_w)				:= pls_sib_dados_benef_pck.nr_cartao_nac_sus;
	tb_nr_pis_pasep_w(indice_w)			:= pls_sib_dados_benef_pck.cd_pis_pasep;
	tb_nr_dn_w(indice_w)				:= pls_sib_dados_benef_pck.cd_declaracao_nasc_vivo;
	tb_cd_sexo_w(indice_w)				:= pls_sib_dados_benef_pck.ie_sexo;
	tb_dt_rescisao_w(indice_w)			:= pls_sib_dados_benef_pck.dt_rescisao;
	tb_cd_motivo_cancelamento_w(indice_w)		:= pls_sib_dados_benef_pck.cd_motivo_cancelamento;
	tb_dt_reativacao_w(indice_w)			:= pls_sib_dados_benef_pck.dt_reativacao;
	tb_cd_beneficiario_w(indice_w)			:= pls_sib_dados_benef_pck.cd_beneficiario;
	tb_cd_beneficiario_titular_w(indice_w)		:= pls_sib_dados_benef_pck.cd_beneficiario_titular;
	tb_dt_contratacao_w(indice_w)			:= pls_sib_dados_benef_pck.dt_contratacao;
	tb_nr_plano_ans_w(indice_w)			:= pls_sib_dados_benef_pck.nr_plano_ans;
	tb_nr_plano_operadora_w(indice_w)		:= pls_sib_dados_benef_pck.nr_plano_operadora;
	tb_nr_plano_portabilidade_w(indice_w)		:= pls_sib_dados_benef_pck.nr_plano_portabilidade;
	tb_ie_cpt_w(indice_w)				:= pls_sib_dados_benef_pck.ie_cpt;
	tb_ie_itens_excluidos_cober_w(indice_w)		:= pls_sib_dados_benef_pck.ie_itens_excluidos_cobertura;
	tb_nr_cnpj_w(indice_w)				:= pls_sib_dados_benef_pck.nr_cnpj;
	tb_nr_cei_w(indice_w)				:= pls_sib_dados_benef_pck.nr_cei;
	tb_cd_caepf_w(indice_w)				:= pls_sib_dados_benef_pck.cd_caepf;
	tb_cd_relacao_dependencia_w(indice_w)		:= pls_sib_dados_benef_pck.cd_relacao_dependencia;
	tb_ie_tipo_endereco_w(indice_w)			:= pls_sib_dados_benef_pck.ie_tipo_endereco;
	tb_ds_logradouro_w(indice_w)			:= trim(both pls_sib_dados_benef_pck.ds_logradouro);
	tb_nr_logradouro_w(indice_w)			:= pls_sib_dados_benef_pck.nr_logradouro;
	tb_ds_complemento_w(indice_w)			:= trim(both pls_sib_dados_benef_pck.ds_complemento);
	tb_ds_bairro_w(indice_w)			:= trim(both pls_sib_dados_benef_pck.ds_bairro);
	tb_cd_municipio_ibge_w(indice_w)		:= pls_sib_dados_benef_pck.cd_municipio_ibge;
	tb_cd_cep_w(indice_w)				:= pls_sib_dados_benef_pck.cd_cep;
	tb_ie_reside_exterior_w(indice_w)		:= pls_sib_dados_benef_pck.ie_reside_exterior;
	tb_cd_municipio_ibge_resid_w(indice_w)		:= pls_sib_dados_benef_pck.cd_municipio_ibge_resid;
	tb_nr_seq_segurado_w(indice_w)			:= pls_sib_dados_benef_pck.nr_seq_segurado;
	CALL inserir_sib_segurado('N');
end if;
end;

begin
CALL CALL limpar_vetores();

--Deletar os registros existentes
delete	from pls_sib_segurado a
where	exists (	SELECT	1
		from	pls_segurado x
		where	x.nr_sequencia = a.nr_seq_segurado
		and	x.cd_estabelecimento = cd_estabelecimento_p);
commit;

CALL Tasy_posicionar_sequence('PLS_SIB_SEGURADO','NR_SEQUENCIA','R');

for	r_C01_w in C01 loop
	CALL pls_sib_dados_benef_pck.carregar_dados(	r_C01_w.nr_seq_segurado, cd_estabelecimento_p);
	carregar_vetores;
end loop;

CALL inserir_sib_segurado('S');

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_sib_carregar_dados ( cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;

