-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualizar_prontuario_item () AS $body$
DECLARE



nr_sequencia_w		bigint;
ds_item_w		varchar(40);
ie_atualizar_w		varchar(1);
ie_cadastro_w		varchar(1);
ie_outros_w		varchar(1);
ie_cadastro_geral_w	varchar(1);
cd_relatorio_w		bigint;
qt_registro_w		smallint;
ie_situacao_w		varchar(1);
ds_informacao_w		varchar(4000);
ds_sep_bv_w		varchar(10);
ie_ambulatorio_w	varchar(1);

c01	  	integer;
retorno_w	integer;
ds_comando_w	varchar(2000);

/*Cursor C01 is
select	nr_sequencia,
	ds_item,
	ie_atualizar,
	ie_cadastro,
	ie_outros,
	ie_cadastro_geral,
	cd_relatorio,
	ie_situacao,
	ds_informacao
from	tasy_versao.prontuario_item;*/
BEGIN

select 	obter_separador_bv
into STRICT	ds_sep_bv_w
;

ds_comando_w :=	' select	nr_sequencia,'||
	  	' 		obter_desc_expressao(cd_exp_desc_item,ds_item),'||
		'		ie_atualizar,' ||
		'		ie_cadastro,'||
	 	'		ie_outros,'||
		'		ie_cadastro_geral,'||
		'		cd_relatorio,'||
		'		ie_situacao,'||
		'		obter_desc_expressao(CD_EXP_INFORMACAO,DS_INFORMACAO),'||
		'		ie_ambulatorio'||
		' from		tasy_versao.prontuario_item';

C01 := DBMS_SQL.OPEN_CURSOR;
DBMS_SQL.PARSE(C01, ds_comando_w, dbms_sql.Native);
DBMS_SQL.DEFINE_COLUMN(C01, 1, nr_sequencia_w);
DBMS_SQL.DEFINE_COLUMN(C01, 2, ds_item_w,40);
DBMS_SQL.DEFINE_COLUMN(C01, 3, ie_atualizar_w,1);
DBMS_SQL.DEFINE_COLUMN(C01, 4, ie_cadastro_w,1);
DBMS_SQL.DEFINE_COLUMN(C01, 5, ie_outros_w,1);
DBMS_SQL.DEFINE_COLUMN(C01, 6, ie_cadastro_geral_w,1);
DBMS_SQL.DEFINE_COLUMN(C01, 7, cd_relatorio_w);
DBMS_SQL.DEFINE_COLUMN(C01, 8, ie_situacao_w,1);
DBMS_SQL.DEFINE_COLUMN(C01, 9, ds_informacao_w,4000);
DBMS_SQL.DEFINE_COLUMN(C01, 10, ie_ambulatorio_w,1);

retorno_w := DBMS_SQL.execute(C01);

while( DBMS_SQL.FETCH_ROWS(C01) > 0 ) loop

	DBMS_SQL.COLUMN_VALUE(C01, 1, nr_sequencia_w);
	DBMS_SQL.COLUMN_VALUE(C01, 2, ds_item_w);
	DBMS_SQL.COLUMN_VALUE(C01, 3, ie_atualizar_w);
	DBMS_SQL.COLUMN_VALUE(C01, 4, ie_cadastro_w);
	DBMS_SQL.COLUMN_VALUE(C01, 5, ie_outros_w);
	DBMS_SQL.COLUMN_VALUE(C01, 6, ie_cadastro_geral_w);
	DBMS_SQL.COLUMN_VALUE(C01, 7, cd_relatorio_w);
	DBMS_SQL.COLUMN_VALUE(C01, 8, ie_situacao_w);
	DBMS_SQL.COLUMN_VALUE(C01, 9, ds_informacao_w);
	DBMS_SQL.COLUMN_VALUE(C01, 10, ie_ambulatorio_w);

	begin
	select	count(*)
	into STRICT	qt_registro_w
	from	prontuario_item
	where	nr_sequencia	= nr_sequencia_w;

	if (qt_registro_w > 0) then
		update	prontuario_item
		set	ds_item			= ds_item_w,
			ie_atualizar		= ie_atualizar_w,
			ie_cadastro		= ie_cadastro_w,
			ie_outros		= ie_outros_w,
			ie_cadastro_geral	= ie_cadastro_geral_w,
			cd_relatorio		= cd_relatorio_w,
			ie_situacao		= ie_situacao_w,
			ds_informacao		= ds_informacao_w,
			ie_ambulatorio		= ie_ambulatorio_w
		where	nr_sequencia		= nr_sequencia_w;
	else
		ds_comando_w :=	' insert into prontuario_item(' ||
				'		nr_sequencia,'||
				'		dt_atualizacao,'||
				'		nm_usuario,'||
				'		ds_item,'||
				'		nr_seq_apres,'||
				'		ie_atualizar,'||
				'		ie_pa,'||
				'		nr_seq_pa,'||
				'		cd_relatorio,'||
				'		ie_cadastro,'||
				'		ie_outros,'||
				'		ie_cadastro_geral,'||
				'		ie_situacao,'||
				'		ds_informacao,' ||
				'		ie_ambulatorio)'||
				' select	nr_sequencia,'||
				'		dt_atualizacao,'||
				'		nm_usuario,'||
				'		obter_desc_expressao(cd_exp_desc_item,ds_item),'||
				'		nr_seq_apres,'||
				'		ie_atualizar,'||
				'		ie_pa,'||
				'		nr_seq_pa,'||
				'		cd_relatorio,'||
				'		ie_cadastro,'||
				'		ie_outros,'||
				'		:ie_cadastro_geral,'||
				'		ie_situacao,'||
				'		obter_desc_expressao(CD_EXP_INFORMACAO,DS_INFORMACAO), ' ||
				'		ie_ambulatorio '||
				' from	tasy_versao.prontuario_item'||
				' where	nr_sequencia	= :nr_sequencia';
			CALL EXEC_SQL_DINAMICO_BV('Prontuario Item',ds_comando_w,	'ie_cadastro_geral='||ie_cadastro_geral_w||ds_sep_bv_w||
										'nr_sequencia='||nr_sequencia_w);
	end if;

	end;
END LOOP;
DBMS_SQL.CLOSE_CURSOR(C01);
commit;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualizar_prontuario_item () FROM PUBLIC;

