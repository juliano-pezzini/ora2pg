-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_texto_rotina_padrao ( NR_ATENDIMENTO_P bigint, CD_PACIENTE_P text, CD_PROFISSIONAL_P text, CD_ESTABELECIMENTO_P bigint, DS_LISTA_TEXTO_P text, NM_USUARIO_P text, ie_opcao_p text default null, nr_seq_reg_elemento_p bigint default null) AS $body$
DECLARE

 
lista_w	dbms_sql.varchar2_table;
nr_seq_texto_w	bigint;
ds_titulo_w	varchar(255);
nr_seq_ci_w	bigint;
ds_texto_w		varchar(32764);
ie_opcao_w	varchar(10);--	:= nvl(ie_opcao_p,'CI'); 
ie_tipo_evolucao_w	varchar(3);

BEGIN 
lista_w	:= obter_lista_string(ds_lista_texto_p,',');
 
ie_opcao_w := coalesce(ie_opcao_p,'CI');
 
if (lista_w.count	>0) then 
	 
	for i in lista_w.first..lista_w.last loop 
		begin 
		nr_seq_texto_w	:= lista_w(i);
		 
		if (nr_seq_texto_w IS NOT NULL AND nr_seq_texto_w::text <> '') then 
			select	coalesce(DS_TITULO,' '), 
				ds_texto 
			into STRICT	DS_TITULO_w, 
				ds_texto_w 
			from	texto_padrao 
			where	nr_sequencia	= nr_seq_texto_w;	
			 
			if (ie_opcao_w	= 'CI') then 
			 
				select	nextval('pep_pac_ci_seq') 
				into STRICT	nr_seq_ci_w 
				;
			 
				insert into PEP_PAC_CI( NR_SEQUENCIA, 
							 CD_ESTABELECIMENTO, 
							 CD_PESSOA_FISICA, 
							 DT_ATUALIZACAO, 
							 NM_USUARIO, 
							 DT_ATUALIZACAO_NREC, 
							 NM_USUARIO_NREC, 
							 CD_PROFISSIONAL, 
							 DS_TITULO, 
							 DS_TEXTO, 
							 NR_ATENDIMENTO, 
							 NR_SEQ_AGENDA, 
							 DT_LIBERACAO, 
							 NR_SEQ_AVAL_PRE, 
							 IE_SITUACAO, 
							 DT_INATIVACAO, 
							 NM_USUARIO_INATIVACAO, 
							 DS_JUSTIFICATIVA, 
							 NR_SEQ_AGE_CONS, 
							 CD_PERFIL_ATIVO, 
							 NR_SEQ_REG_ELEMENTO, 
							 IE_TIPO_CONSENTIMENTO, 
							 NR_SEQ_TEXTO, 
							 NR_SEQ_PROC_INTERNO, 
							 IE_LADO, 
							 CD_PROTOCOLO, 
							 NR_SEQ_MEDICACAO, 
							 NR_CICLO, 
							 DS_DIA_CICLO, 
							 NR_SEQ_ASSINATURA, 
							 NR_SEQ_ASSINAT_INATIVACAO, 
							 NR_PRESCRICAO) 
						values ( 
							 nr_seq_ci_w, 
							 cd_estabelecimento_p, 
							 cd_paciente_p, 
							 clock_timestamp(), 
							 nm_usuario_p, 
							 clock_timestamp(), 
							 nm_usuario_p, 
							 CD_PROFISSIONAL_P, 
							 DS_TITULO_w, 
							 ds_texto_w, 
							 NR_ATENDIMENTO_p, 
							 null, 
							 null, 
							 null, 
							 'A', 
							 null, 
							 null, 
							 null, 
							 null, 
							 null, 
							 nr_seq_reg_elemento_p, 
							 null, 
							 nr_seq_texto_w, 
							 null, 
							 null, 
							 null, 
							 null, 
							 null, 
							 null, 
							 null, 
							 null, 
							 null);
							 
				elsif (ie_opcao_w	= 'E') then 
					 
					select	max(ie_tipo_evolucao) 
					into STRICT	ie_tipo_evolucao_w 
					from	usuario 
					where	nm_usuario = nm_usuario_p;
					 
					select	nextval('evolucao_paciente_seq') 
					into STRICT	nr_seq_ci_w 
					;
					 
					insert into evolucao_paciente( 
						cd_evolucao, 
						DT_EVOLUCAO, 
						IE_TIPO_EVOLUCAO, 
						CD_PESSOA_FISICA, 
						DT_ATUALIZACAO, 
						NR_ATENDIMENTO, 
						DS_EVOLUCAO, 
						CD_MEDICO, 
						NM_USUARIO, 
						IE_SITUACAO, 
						ie_evolucao_clinica) 
					values (nr_seq_ci_w, 
							clock_timestamp(), 
							ie_tipo_evolucao_w, 
							cd_paciente_p, 
							clock_timestamp(), 
							NR_ATENDIMENTO_p, 
							ds_texto_w, 
							CD_PROFISSIONAL_P, 
							nm_usuario_p, 
							'A', 
							Obter_tipo_evolucao_regra(NR_ATENDIMENTO_P));
							 
				elsif (ie_opcao_w	= 'OA') then 
					select	nextval('atendimento_alta_seq') 
					into STRICT	nr_seq_ci_w 
					;
				 
					insert into ATENDIMENTO_ALTA( 
						 NR_SEQUENCIA, 
						 NR_ATENDIMENTO, 
						 IE_TIPO_ORIENTACAO, 
						 DT_ATUALIZACAO, 
						 NM_USUARIO, 
						 DS_ORIENTACAO, 
						 IE_DESFECHO, 
						 CD_ESPECIALIDADE, 
						 CD_MOTIVO_ALTA, 
						 CD_MEDICO_DEST, 
						 IE_MEDICO_CIENTE, 
						 DT_DESFECHO, 
						 CD_SETOR_ATENDIMENTO, 
						 DT_LIBERACAO, 
						 CD_PROCESSO_ALTA, 
						 QT_CARACTERES, 
						 IE_SITUACAO, 
						 DT_INATIVACAO, 
						 NM_USUARIO_INATIVACAO, 
						 DS_JUSTIFICATIVA, 
						 NR_SEQ_PEPO, 
						 CD_PERFIL_ATIVO, 
						 NR_SEQ_ASSINATURA, 
						 NR_CIRURGIA, 
						 DT_REGISTRO, 
						 NR_SEQ_ASSINAT_INATIVACAO, 
						 IE_TIPO_EVOLUCAO, 
						 CD_ESPECIALIDADE_MEDICO, 
						 QT_PERIODO, 
						 IE_PERIODO, 
						 CD_CGC, 
						 NR_SEQ_MOTIVO, 
						 IE_RECEM_NATO, 
						 NR_RECEM_NATO, 
						 NR_SEQ_AREA_ATUACAO, 
						 IE_AVALIADOR_AUX, 
						 DT_LIBERACAO_AUX, 
						 CD_PROFISSIONAL, 
						 NM_USUARIO_NREC, 
						 DT_ATUALIZACAO_NREC) 
					values ( 
						 nr_seq_ci_w, 
						 NR_ATENDIMENTO_P, 
						 'M', 
						 clock_timestamp(), 
						 NM_USUARIO_p, 
						 ds_texto_w, 
						 'A', 
						 null, 
						 null, 
						 null, 
						 'N', 
						 clock_timestamp(), 
						 null, 
						 null, 
						 null, 
						 null, 
						 'A', 
						 null, 
						 null, 
						 null, 
						 null, 
						 null, 
						 null, 
						 null, 
						 clock_timestamp(), 
						 null, 
						 null, 
						 null, 
						 null, 
						 null, 
						 null, 
						 null, 
						 'N', 
						 null, 
						 null, 
						 'N', 
						 null, 
						 obter_pessoa_fisica_usuario( nm_usuario_p,'C'), 
						 nm_usuario_p, 
						 clock_timestamp());
 
				elsif (ie_opcao_w	= 'AT') then 
				 
				select	nextval('atestado_paciente_seq') 
				into STRICT	nr_seq_ci_w 
				;
				 
				insert into ATESTADO_PACIENTE( 
					NR_SEQUENCIA, 
					DT_ATESTADO, 
					NR_ATENDIMENTO, 
					DT_ATUALIZACAO, 
					NM_USUARIO, 
					CD_MEDICO, 
					CD_PESSOA_FISICA, 
					DT_ATUALIZACAO_NREC, 
					NM_USUARIO_NREC, 
					DS_ATESTADO, 
					IE_SITUACAO 
				) values ( 
					nr_seq_ci_w, 
					clock_timestamp(), 
					NR_ATENDIMENTO_P, 
					clock_timestamp(), 
					NM_USUARIO_p, 
					CD_PROFISSIONAL_P, 
					CD_PACIENTE_P, 
					clock_timestamp(), 
					NM_USUARIO_p, 
					ds_texto_w, 
					'A' 
				);
				 
				end if;
				 
				 
				commit;
		CALL substituir_macro_protocolo_pa(nr_seq_ci_w,ds_texto_w,nr_atendimento_p,nm_usuario_p,ie_opcao_w);
		 
		end if;
		 
		end;
	end loop;
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_texto_rotina_padrao ( NR_ATENDIMENTO_P bigint, CD_PACIENTE_P text, CD_PROFISSIONAL_P text, CD_ESTABELECIMENTO_P bigint, DS_LISTA_TEXTO_P text, NM_USUARIO_P text, ie_opcao_p text default null, nr_seq_reg_elemento_p bigint default null) FROM PUBLIC;

