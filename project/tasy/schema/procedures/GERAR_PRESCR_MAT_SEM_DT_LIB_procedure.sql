-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE DoseDiferenciada AS (qt_dose_diferenciada double precision,
								 ie_gerar_disp boolean);


CREATE OR REPLACE PROCEDURE gerar_prescr_mat_sem_dt_lib ( nr_prescricao_p prescr_medica.nr_prescricao%type, nr_seq_item_p prescr_material.nr_sequencia%type, cd_perfil_p perfil.cd_perfil%type, ie_liberacao_p text, nm_usuario_p usuario.nm_usuario%type, ie_lib_parc_p text default null, ie_tipo_item_p text default null, qt_minutos_agora_p bigint default 0) AS $body$
DECLARE


_ora2pg_r RECORD;
-- variaveis
exec_w         					varchar(32000);
ds_hor_valido_inter1_w 			varchar(10);
ds_hor_valido_inter2_w 			varchar(10);
vt_dose_diferenciada_existe_w 	varchar(1);
vt_ie_gerar_disp_w 				varchar(1);
cd_unid_med_cons_w      		varchar(30);
qt_conversao_und_ori_w  		double precision;
qt_conversao_und_dest_w 		double precision;
qt_auxiliar_w					bigint;
vt_qt_dose_diferenciada_ww 		bigint;

ds_horarios_w					varchar(4000);
ds_horarios_padr_w				varchar(4000);
ds_horarios_padr_comp_w			varchar(4000);
ds_hora_w						varchar(4000);
ds_horario_w					varchar(4000);
dt_liberacao_w					timestamp;
dt_liberacao_medico_w			timestamp;
dt_horario_w					timestamp;	
dt_horario_ww					timestamp;	
k								integer;
y								integer;
nr_sequencia_w					bigint;
qt_kit_w						bigint;
nr_seq_horario_w				bigint;
cont_w							bigint;
qt_hor_w						bigint;
nr_seq_hor_w					bigint;
nr_seq_prescr_w					integer;	
nr_seq_prescr_old_w				prescr_material.nr_sequencia%type;
nr_etapa_w						integer;
nr_etapas_w						smallint;
qt_dose_w						double precision;
qt_total_dispensar_w			double precision;
qt_dose_www						double precision;
qt_dia_prim_hor_w				bigint;
cd_material_w					integer;
qt_w							integer;
qt_hor_esp_w					integer;
nr_atendimento_w				bigint;
dt_primeiro_horario_w			timestamp;
dt_prim_hor_sol_w				timestamp;
dt_libe_w						timestamp;
ie_agrupador_w					smallint;
nr_seq_sol_w					bigint;
cd_unidade_medida_w				varchar(30);
cd_unid_med_dose_w				varchar(30);
cd_intervalo_w					varchar(7);
ie_prescricao_dieta_w			varchar(1);
ie_gerar_especial_w				varchar(1);
ie_copia_status_hor_w			varchar(1);
ie_agora_especial_w				varchar(1);
ie_dose_espec_agora_w			varchar(1);
ie_etapa_esp_w					varchar(1);
qt_reg_w						bigint;
ie_etapa_especial_w				varchar(1);
ie_etapa_especial_w2			varchar(1) := 'N';
ie_etapa_especial_w3			varchar(1) := 'X';
nr_ocorrencia_w					double precision;
ie_esquema_alternado_w			varchar(1);
var_param1132_w					varchar(1);
ie_gerar_npt_fases_w			varchar(1):= 'N';
ie_param24_cpoe_w				varchar(1):= 'N';
nr_seq_solucao_w				integer;
ie_agrupador_dil_w				smallint;
nr_sequencia_dil_w				bigint;
qt_dose_dil_w					double precision;
qt_total_disp_dil_w				double precision;
cd_unidade_medida_dil_w			varchar(30);
cd_unid_med_dose_dil_w			varchar(30);
cd_unid_med_dose_esp_w			varchar(30);
nr_ocorrencia_dil_w				double precision;
cd_material_dil_w				integer;
hr_prim_horario_w				varchar(5);
ie_urgente_w					varchar(1);
ie_tipo_item_w					varchar(15);
ie_urgente_ant_w				varchar(1);
qt_conversao_w					double precision;
qt_dose_especial_w				double precision;
qt_dose_especial_ww				double precision;
hr_dose_especial_w				varchar(5);
/* Rafael em 12/09/06 Funcionalidades da Administracao da Prescricao (ATEPAC_PG) */

nr_seq_procedimento_w			integer;
cd_procedimento_w				bigint;
ie_origem_proced_w				bigint;
nr_seq_proc_interno_w			bigint;
nr_ocor_proc_w					double precision;
ie_proc_urgente_w				varchar(1);
dt_prev_execucao_w				timestamp;
ds_hora_proc_w					varchar(2000);
dt_horario_proc_w				timestamp;
dt_suspensao_w					timestamp;
dt_suspensao_ww					timestamp;
nm_usuario_susp_w				varchar(15);
dt_suspensao_dil_w				timestamp;
nm_usuario_susp_dil_w			varchar(15);
dt_fim_horario_w				timestamp;
ds_horarios_proc_w				varchar(2000);
ds_horarios_padrao_proc_w		varchar(2000);
cd_material_exame_w				varchar(20);
nr_seq_recomendacao_w			prescr_material.nr_seq_recomendacao%type;
cd_recomendacao_w				bigint;
ds_hora_rec_w					varchar(2000);
dt_horario_rec_w				timestamp;
nr_seq_classif_rec_w			bigint;
ds_horarios_rec_w				varchar(2000);
ds_horarios_padrao_rec_w		varchar(2000);
/* Fim Rafael em 12/09/06 */

/* Rafael em 07/10/2006 Funcionalidades da Administracao da Prescricao -> Identificar horarios especiais (SN, ACM e sem Horario) */

ie_se_necessario_w				varchar(1);
ie_se_necessario_dil_w			varchar(1);
ie_acm_w						varchar(1);
ie_acm_dil_w					varchar(1);
ds_diluicao_w					varchar(2000);
ie_horario_especial_w			varchar(1) := 'N';
qt_dieta_w						bigint;
cd_setor_atendimento_w			integer;
cd_estabelecimento_w			smallint;
dt_prescricao_w					timestamp;
dt_prescricao_ww				timestamp;
qT_dia_adic_w					bigint := 0;
qt_registro_w					bigint;
dt_inicio_prescr_w				timestamp;
nr_seq_procedimento_novo_w		integer;
nr_seq_exame_w					bigint;
ie_status_atend_w				smallint;
ie_status_execucao_w			varchar(3);
cd_setor_atendimento_proc_w		integer;
cd_setor_coleta_w				integer;
cd_setor_entrega_w        		integer;
cd_setor_exec_fim_w       		integer;
cd_setor_exec_inic_w      		integer;
nr_seq_lab_w					varchar(20);
ie_suspenso_w					varchar(1);
ds_observacao_w					varchar(2000);
ds_dado_clinico_w				varchar(2000);
ds_material_especial_w			varchar(255);
ie_controlado_w					varchar(1);
ie_controlado_dil_w				varchar(1);
nr_seq_prescr_hor_w				integer;
dt_horario_proc_prev_w			timestamp;
ie_proc_atual_w					varchar(1);
qt_min_agora_w					bigint;
qt_min_especial_w				bigint;
ie_classif_urgente_w			varchar(3);
dt_limite_agora_w				timestamp;
dt_limite_especial_w			timestamp;
nr_seq_classif_w				bigint;
dt_liberacao_farmacia_w			timestamp;
ie_momento_lote_w				varchar(15) := 'E';
ajustar_disp_hor_farm_w			varchar(1) := 'N';
ie_padronizado_w				varchar(1);
ie_padronizado_dil_w			varchar(1);
ie_classif_nao_padrao_w			varchar(15);
ie_regra_disp_w					varchar(1);
ie_regra_disp_dil_w				varchar(1);
ie_lib_farm_w					varchar(1);
nr_agrupamento_w				double precision;
nr_agrupamento_dil_w			double precision;
cd_protocolo_w					bigint;
cd_protocolo_dil_w				bigint;
ie_material_adep_w				varchar(1);
ie_gerar_adep_w					varchar(1);
ie_componente_composto_w		varchar(1);
ds_dose_diferenciada_w			varchar(50);
ds_dose_diferenciada_ww			varchar(50);
ie_ctrl_loop_w					smallint := 0;
ie_loop_w						smallint := 0;
ie_cont_lib_w					smallint := 0;
ie_ctrl_loop_ww					smallint := 0;
h								integer;
w								integer;
qt_dose_diferenciada_w			double precision;
qt_tot_dose_dif_w				double precision;
qt_dose_hor_w					double precision;
cd_unid_med_dose_hor_w			varchar(30);
ie_adep_w						varchar(15);
ie_adep_param_w					varchar(15);
ie_rep_adep_w					varchar(1);
cd_local_estoque_w				smallint;
cd_local_estoque_baixa_w		smallint;
cd_local_baixa_kit_w			smallint;
cd_local_estoque_dil_w			smallint;
nr_seq_lote_w					bigint;
cd_motivo_baixa_w				smallint;
cd_motivo_baixa_dd_zero_w		smallint;
cd_motivo_baixa_dil_w			smallint;
qt_dispensar_hor_w				double precision;
qt_dispensar_hor_dif_w			double precision;
qt_dispensar_w					double precision;
qt_unitaria_w					double precision;
qt_unitaria_dil_w				double precision;
nr_seq_kit_w					bigint;
qt_solucao_w					bigint;
ie_horario_acm_w				varchar(1);
ie_horario_sn_w					varchar(1);
nr_seq_turno_hor_esp_w			bigint;
/* varPrescrNaoMedicaADEP_w		varchar2(15); */

VarIdentPrescrADEP_w			varchar(15);
sqlerrm_w						varchar(2000);
sqlerr_w						varchar(2000);
nr_seq_solucao_old_w			integer	:= 0;
nr_etapa_sol_w					smallint 	:= 0;
ie_gerar_associdos_ccg_w		varchar(1);
hr_turno_especial_w				varchar(15);
ie_classif_lote_w				varchar(15);
ie_agora_impressao_w			varchar(15);
nr_seq_turno_hor_ag_w			bigint;
hr_turno_agora_w				varchar(15);
hr_final_turno_agora_w			varchar(15);
qt_min_antes_atend_w			integer;
ie_lib_individual_w				varchar(1);
dt_suspensao_progr_w			timestamp;
ds_horarios_ww					varchar(4000);
ds_horarios_w2					varchar(15);
dt_ref_inicio_w					timestamp;
ie_operacao_interv_w			varchar(5);
ie_reordena_fixo_w				varchar(5);
ie_altera_dt_proxima_dose_w		varchar(1);
ie_gerar_horarios_susp_w		varchar(1);
qt_jejum_w						bigint;

ie_gerar_hor_zerado_dd_w		varchar(1);
ie_gerar_dispensacao_w			varchar(1);
ie_local_estoque_mat_hor_w		varchar(1);
ie_contem_jejum_nut_w			varchar(1);
ie_atualiza_proximo_w			varchar(1);
qt_minutos_agora_w				smallint;
ie_prim_hor_sol_kit_w			varchar(1);
nr_prescricao_original_w		bigint;
nr_seq_anterior_w				bigint;
dt_validade_prescr_w			timestamp;
dt_horario2_w					timestamp;
ie_motivo_prescricao_w			varchar(5);

--cursor c21
nr_seq_classif_param_w			bigint;
ie_dose_especial_w				varchar(1);
dt_rep_pt_w						timestamp;
dt_rep_pt2_w					timestamp;
ie_dialise_w					varchar(1);
ie_mat_solucao_w				varchar(1);
nr_seq_horario_ww				bigint;
nr_seq_material_w				prescr_material.nr_sequencia%type;
nr_seq_material_old_w			prescr_material.nr_sequencia%type;
dt_lib_horario_w				timestamp	:= clock_timestamp();
ie_cursor_w						varchar(1);
ie_gerar_proc_gedipa_job_w		varchar(1);
ie_quimio_w						varchar(1);
ie_define_agora_w				regra_tempo_disp.ie_define_agora%type;
qt_operacao_w					intervalo_prescricao.qt_operacao%type;
ds_horarios_npt_w				varchar(4000);
ds_horarios_padr_npt_w			varchar(4000);
dt_prim_hor_prescr_w	    	timestamp;
hr_inicio_nut_w					nut_pac.hr_prim_horario%type;
qt_fase_npt_w					nut_pac.qt_fase_npt%type;
ds_hora_npt_w					varchar(255);
ds_dose_dif_npt_w           	varchar(2000);
qt_dose_dif_npt_w				nut_pac_elem_mat.qt_vol_1_fase%type;
qt_disp_hor_nut_w				qt_dose_dif_npt_w%type;
ie_situacao_w					prescr_mat_hor.ie_situacao%type := 'A';
	
dt_suspensao_prescr_w			timestamp;

cd_funcao_origem_w				funcao.cd_funcao%type;
ie_funcao_origem_w      		varchar(1);
hr_prim_horario_npt_w			nut_pac.hr_prim_horario%type;
type VetorDD is table of DoseDiferenciada index by integer;

vt_dose_diferenciada_w			vetorDD;
dt_horario_ant_w				prescr_mat_hor.dt_horario%type;
qt_hor_ant_w					bigint;
nr_seq_prescr_ant_w				prescr_material.nr_sequencia%type;
ds_horarios_inter_w				intervalo_prescricao.ds_horarios%type;
nr_horas_validade_w				prescr_medica.nr_horas_validade%type;
ie_tipo_regra_disp_w			material_regra_disp.ie_regra_disp%type;
ie_regra_w						material_regra_disp.ie_regra%type;
nr_seq_diluicao_w				prescr_material.nr_sequencia_diluicao%type;
cd_intervalo_sol_w				prescr_solucao.cd_intervalo%type;
dt_inicio_medic_w				prescr_material.dt_inicio_medic%type;
nr_seq_mat_cpoe_w				prescr_material.nr_seq_mat_cpoe%type;
dt_prescricao_www				timestamp;
dt_inicio_horario_w				timestamp;
qt_liberado_w					bigint;
ie_regra_agora_w				regra_disp_lote_farm.ie_regra_agora%type;
ie_via_aplicacao_w				prescr_material.ie_via_aplicacao%type;

ie_inf_ras_hor_medi_w			varchar(1);
ds_alteracao_rastre_w			varchar(4000);
ie_valida_dose_presc_w			varchar(1);
qt_solic_min_cons_w				material.qt_minimo_multiplo_solic%type;
ie_gerar_dil_supl_w				varchar(1);

ie_classif_normal_acm_sn_w		varchar(1);

-- Cursores
C01 CURSOR FOR
SELECT	b.ie_agrupador,
		b.nr_sequencia,
		b.qt_dose,
		b.qt_total_dispensar,
		b.cd_unidade_medida,
		b.cd_unidade_medida_dose,
		b.nr_ocorrencia,
		b.cd_material,
		b.ds_horarios,
		padroniza_horario_prescr(b.ds_horarios, CASE WHEN coalesce(b.qt_dia_prim_hor,0)=0 THEN CASE WHEN substr(Obter_Se_horario_hoje(a.dt_prescricao,a.dt_primeiro_horario,b.hr_prim_horario),1,1)='N' THEN '01/01/2000 23:59:59'  ELSE to_char(coalesce(a.dt_primeiro_horario,a.dt_prescricao),'dd/mm/yyyy hh24:mi:ss') END   ELSE '01/01/2000 23:59:59' END ),
		--padroniza_horario_prescr(b.ds_horarios, decode(substr(Obter_Se_horario_hoje(a.dt_prescricao,a.dt_primeiro_horario,b.hr_prim_horario),1,1),'N','01/01/2000 23:59:59', to_char(nvl(a.dt_primeiro_horario,a.dt_prescricao),'dd/mm/yyyy hh24:mi:ss'))),
		b.hr_prim_horario,
		coalesce(b.ie_urgencia,'N'),
		b.qt_dose_especial,
		b.hr_dose_especial,
		coalesce(b.ie_se_necessario,'N'),
		coalesce(b.ie_acm,'N'),
		substr(Obter_se_medic_controlado(b.cd_material),1,1),
		substr(obter_se_material_padronizado(a.cd_estabelecimento,b.cd_material),1,1),
		CASE WHEN coalesce(b.ie_regra_disp,'S')='N' THEN 'N'  ELSE 'S' END ,
		b.nr_agrupamento,
		b.cd_protocolo,
		substr(obter_se_componente_composto(b.nr_prescricao, b.nr_sequencia, b.nr_agrupamento),1,1) ie_componente_composto,
		b.ds_dose_diferenciada,
		b.cd_local_estoque,
		b.qt_unitaria,
		coalesce(b.cd_motivo_baixa,0),
		b.nr_seq_kit,
		b.ie_dose_espec_agora,
		b.dt_suspensao_progr,
		to_date(CASE WHEN coalesce(b.qt_dia_prim_hor,0)=0 THEN CASE WHEN substr(Obter_Se_horario_hoje(a.dt_prescricao,a.dt_primeiro_horario,b.hr_prim_horario),1,1)='N' THEN '01/01/2000 23:59:59'  ELSE to_char(coalesce(a.dt_primeiro_horario,a.dt_prescricao),'dd/mm/yyyy hh24:mi:ss') END   ELSE '01/01/2000 23:59:59' END ,'dd/mm/yyyy hh24:mi:ss'),
		b.dt_suspensao,
		b.nm_usuario_susp,
		b.cd_unid_med_dose_esp,
		coalesce(b.qt_dia_prim_hor,0),
		coalesce(b.nr_seq_recomendacao,0),
		b.cd_intervalo,
		b.dt_inicio_medic,
		b.nr_seq_mat_cpoe,
		b.ie_via_aplicacao,
		substr(obter_dados_material(cd_material,'QMS'),1,30)
from	prescr_material b,
		prescr_medica a
where	a.nr_prescricao	= b.nr_prescricao
and		a.nr_prescricao	= nr_prescricao_p
and		((b.nr_sequencia = nr_seq_item_p) or (b.nr_seq_kit	= nr_seq_item_p) or (coalesce(nr_seq_item_p,0) = 0))
-- CPOE_ITEM_AGORA: Tratamento para que somente primeiro horario do item seja de classificacao "Urgente"
and		(not exists (	select	1
						from	prescr_mat_hor x
						where	x.nr_prescricao		= a.nr_prescricao
						and	x.nr_seq_material	= b.nr_sequencia
						and	coalesce(x.qt_minutos_agora::text, '') = ''
						and	Obter_se_horario_liberado(x.dt_lib_horario, x.dt_horario) = 'S'
						and (coalesce(x.ie_dose_especial,'N')	= 'N')
						and	coalesce(x.dt_suspensao::text, '') = '')
    or ((a.cd_funcao_origem = 2314) and ((coalesce(b.dt_lib_farmacia::text, '') = '') or (coalesce(b.ie_urgencia,'N') = 'S'))))
and	ie_agrupador	= 1
--and	nvl(b.ie_administrar,'S') = 'S'
and	(((coalesce(a.dt_suspensao::text, '') = '') and (coalesce(b.ie_suspenso,'N') 	<> 'S')) or (ie_gerar_horarios_susp_w	= 'S'))
--and	nvl(b.ie_gerar_horario,'S') <> 'N'
and	((coalesce(b.dt_proxima_dose, a.dt_inicio_prescr) >= a.dt_inicio_prescr) or
	 ((ie_altera_dt_proxima_dose_w = 'S') and (b.dt_proxima_dose IS NOT NULL AND b.dt_proxima_dose::text <> '') and (b.dt_proxima_dose <= a.dt_inicio_prescr)) or
	 ((b.dt_proxima_dose IS NOT NULL AND b.dt_proxima_dose::text <> '') and (b.dt_proxima_dose <= a.dt_inicio_prescr) and (obter_ocorrencia_intervalo(b.cd_intervalo,24,'H') <= 24))) 
and	((ie_tipo_item_p = 'M') or (coalesce(ie_tipo_item_p::text, '') = ''))
order by
	b.nr_agrupamento, b.nr_sequencia;

C02 CURSOR FOR
SELECT	ie_agrupador,
	nr_sequencia,
	qt_dose,
	qt_total_dispensar,
	cd_unidade_medida,
	cd_unidade_medida_dose,
	nr_ocorrencia,
	cd_material,
	ds_horarios,
	padroniza_horario_prescr(b.ds_horarios, CASE WHEN coalesce(b.qt_dia_prim_hor,0)=0 THEN CASE WHEN substr(Obter_Se_horario_hoje(a.dt_prescricao,a.dt_primeiro_horario,b.hr_prim_horario),1,1)='N' THEN '01/01/2000 23:59:59'  ELSE to_char(coalesce(a.dt_primeiro_horario,a.dt_prescricao),'dd/mm/yyyy hh24:mi:ss') END   ELSE '01/01/2000 23:59:59' END ),
	--padroniza_horario_prescr(b.ds_horarios, decode(substr(Obter_Se_horario_hoje(a.dt_prescricao,a.dt_primeiro_horario,b.hr_prim_horario),1,1),'N','01/01/2000 23:59:59', to_char(nvl(a.dt_primeiro_horario,a.dt_prescricao),'dd/mm/yyyy hh24:mi:ss'))),
	hr_prim_horario,
	coalesce(ie_urgencia,'N'),
	qt_dose_especial,
	hr_dose_especial,
	coalesce(ie_se_necessario,'N'),
	coalesce(ie_acm,'N'),
	substr(Obter_se_medic_controlado(b.cd_material),1,1),
	substr(obter_se_material_padronizado(a.cd_estabelecimento,b.cd_material),1,1),
	CASE WHEN coalesce(b.ie_regra_disp,'S')='N' THEN 'N'  ELSE 'S' END ,
	b.nr_agrupamento,
	b.cd_protocolo,
	coalesce(substr(adep_obter_regra_inclusao(	'MAT',
											a.cd_estabelecimento,
											cd_setor_atendimento_w,
											cd_perfil_p,
											b.cd_material,
											null,
											null,
											null,
											a.cd_setor_atendimento,
											null,
											nr_prescricao_p,
											null),1,1),'S'), -- nr_seq_exame_p
	b.cd_local_estoque,
	coalesce(b.cd_motivo_baixa,0),
	b.nr_seq_kit,
	b.dt_suspensao_progr,
	b.dt_suspensao,
	b.nm_usuario_susp,
	coalesce(b.nr_seq_recomendacao,0),
	b.cd_intervalo
from	prescr_material b,
		prescr_medica a
where	a.nr_prescricao	= nr_prescricao_p
and		a.nr_prescricao = b.nr_prescricao
and	((b.nr_sequencia = nr_seq_item_p) or (b.nr_seq_kit	= nr_seq_item_p) or (coalesce(nr_seq_item_p,0) = 0))
and	(not exists (	select	1
			from	prescr_mat_hor x
			where	x.nr_prescricao		= b.nr_prescricao
			and	x.nr_seq_material	= b.nr_sequencia
			and	coalesce(x.qt_minutos_agora::text, '') = ''
			and	Obter_se_horario_liberado(x.dt_lib_horario, x.dt_horario) = 'S'
			and (coalesce(x.ie_dose_especial,'N')	= 'N')
			and	coalesce(x.dt_suspensao::text, '') = '') 
     or ((a.cd_funcao_origem = 2314) and ((coalesce(b.dt_lib_farmacia::text, '') = '') or (coalesce(b.ie_urgencia,'N') = 'S'))))
and	(((coalesce(dt_suspensao_prescr_w::text, '') = '') and (coalesce(b.ie_suspenso,'N') 	<> 'S')) or (ie_gerar_horarios_susp_w	= 'S'))
--and	nvl(b.ie_administrar,'S') = 'S'
and	coalesce(b.ie_gerar_horario,'S') <> 'N'
and	((ie_tipo_item_p = 'MAT') or (coalesce(ie_tipo_item_p::text, '') = ''))
and	ie_agrupador	= 2;

C03 CURSOR FOR
SELECT	b.ie_agrupador,
	b.nr_sequencia,
	b.qt_dose,
	b.qt_total_dispensar,
	b.cd_unidade_medida,
	b.cd_unidade_medida_dose,
	b.nr_ocorrencia,
	b.cd_material,
	coalesce(b.ie_se_necessario,'N'),
	coalesce(b.ie_acm,'N'),
	substr(Obter_se_medic_controlado(b.cd_material),1,1),
	substr(obter_se_material_padronizado(cd_estabelecimento_w,b.cd_material),1,1),
	CASE WHEN coalesce(b.ie_regra_disp,'S')='N' THEN 'N'  ELSE 'S' END ,
	b.nr_agrupamento,
	b.cd_protocolo,
	b.cd_local_estoque,
	coalesce(b.cd_motivo_baixa,0),
	b.qt_unitaria,
	b.dt_suspensao_progr,
	b.dt_suspensao,
	b.nm_usuario_susp,
	b.nr_sequencia_diluicao
from	prescr_material b,
	prescr_medica a
where	a.nr_prescricao		= nr_prescricao_p
and	((b.nr_sequencia_diluicao = nr_seq_item_p) or (coalesce(nr_seq_item_p,0)	= 0))
and (not exists (	select	1
			from	prescr_mat_hor x
			where	x.nr_prescricao	= a.nr_prescricao
			and	x.nr_seq_material	= b.nr_sequencia
			and (x.dt_horario	= dt_horario_w and (coalesce(x.ie_dose_especial,'N')	= 'N'))
			and	coalesce(x.qt_minutos_agora::text, '') = ''
			and	Obter_se_horario_liberado(x.dt_lib_horario, x.dt_horario) = 'S'
			and	coalesce(x.dt_suspensao::text, '') = ''))
and	a.nr_prescricao		= b.nr_prescricao
and	(((coalesce(a.dt_suspensao::text, '') = '') and (coalesce(b.ie_suspenso,'N') 	<> 'S')) or (ie_gerar_horarios_susp_w	= 'S'))
and	coalesce(b.dt_proxima_dose, a.dt_inicio_prescr) >= a.dt_inicio_prescr
and	coalesce(b.dt_proxima_dose, a.dt_inicio_prescr) < a.dt_validade_prescr
and	coalesce(b.ie_gerar_horario,'S') <> 'N'
and	b.nr_sequencia_diluicao	= nr_seq_prescr_w
and	((ie_tipo_item_p in ('M', 'IA')) or (coalesce(ie_tipo_item_p::text, '') = ''))
and	b.ie_agrupador in (3,7,9);

C04 CURSOR FOR
SELECT	b.ie_agrupador,
		b.nr_sequencia,
		b.qt_dose,
		b.qt_total_dispensar,
		b.cd_unidade_medida,
		b.cd_unidade_medida_dose,
		coalesce(b.nr_ocorrencia,1),
		b.cd_material,
		coalesce(a.ds_horarios,a.hr_prim_horario),
		coalesce(a.ie_esquema_alternado,'N'),
		a.nr_seq_solucao,
		coalesce(a.ie_urgencia,'N'),
		coalesce(a.ie_se_necessario,'N'),
		coalesce(a.ie_acm,'N'),
		substr(Obter_se_medic_controlado(b.cd_material),1,1),
		substr(obter_se_material_padronizado(cd_estabelecimento_w,b.cd_material),1,1),
		coalesce(b.ie_regra_disp,'S'),
		b.nr_agrupamento,
		b.cd_protocolo,
		b.cd_local_estoque,
		coalesce(b.cd_motivo_baixa,0),
		coalesce(a.ie_etapa_especial,'N'),
		b.dt_suspensao_progr,
		b.dt_suspensao,
		b.nm_usuario_susp,
		a.hr_prim_horario,
		CASE WHEN coalesce(a.nr_seq_dialise,0)=0 THEN 'N'  ELSE 'S' END ,
		nr_etapas,
		b.ds_dose_diferenciada,
		b.ie_via_aplicacao,
		b.cd_intervalo
from	prescr_material b,
		prescr_solucao a,
		prescr_medica c
where	a.nr_prescricao	= nr_prescricao_p
and		a.nr_prescricao	= b.nr_prescricao
and		c.nr_prescricao = a.nr_prescricao
and		b.nr_prescricao = c.nr_prescricao
and		((b.nr_sequencia = nr_seq_item_p) or (coalesce(nr_seq_item_p,0) = 0))
and		(not exists (	select	1
						from	prescr_mat_hor x
						where	x.nr_prescricao		= a.nr_prescricao
						and		x.nr_seq_material	= b.nr_sequencia
						and		coalesce(x.qt_minutos_agora::text, '') = ''
						and		Obter_se_horario_liberado(x.dt_lib_horario, x.dt_horario) = 'S'
						and		coalesce(x.dt_suspensao::text, '') = '') 
		or ((c.cd_funcao_origem = 2314) and ((coalesce(b.dt_lib_farmacia::text, '') = '') or (coalesce(b.ie_urgencia,'N') = 'S'))))
and		(((coalesce(dt_suspensao_prescr_w::text, '') = '') and (coalesce(b.ie_suspenso,'N') 	<> 'S')) or (ie_gerar_horarios_susp_w	= 'S'))
and		coalesce(b.ie_gerar_horario,'S') <> 'N'
and		a.nr_seq_solucao = b.nr_sequencia_solucao
and		((coalesce(a.ie_acm,'N')		= 'N') or (coalesce(ie_etapa_especial,'N')	= 'S') or (coalesce(ie_horario_acm_w,'S')	= 'S'))
and		((coalesce(a.ie_se_necessario,'N')	= 'N') or (coalesce(ie_etapa_especial,'N')	= 'S') or (coalesce(ie_horario_sn_w,'S')	= 'S'))	
and		((ie_tipo_item_p = 'S') or (coalesce(ie_tipo_item_p::text, '') = ''))
and		b.ie_agrupador	in (4,13);

C004 CURSOR FOR
SELECT	b.ds_horario
from	prescr_solucao_esquema b
where	b.nr_prescricao		= nr_prescricao_p
and		b.nr_seq_solucao	= nr_seq_solucao_w;

C05 CURSOR FOR
SELECT	b.ie_agrupador,
	b.nr_sequencia,
	b.qt_dose,
	b.qt_total_dispensar,
	b.cd_unidade_medida,
	b.cd_unidade_medida_dose,
	b.nr_ocorrencia,
	b.cd_material,
	b.ds_horarios,
	substr(padroniza_horario_prescr(b.ds_horarios,CASE WHEN to_char(c.dt_prev_execucao, 'hh24:mi')='00:00' THEN  to_char(c.dt_prev_execucao,'dd/mm/yyyy hh24:mi:ss')  ELSE c.dt_prev_execucao END ),1,2000),
	--padroniza_horario_prescr(b.ds_horarios, decode(nvl(b.qt_dia_prim_hor,0),0,decode(substr(Obter_Se_horario_hoje(a.dt_prescricao,a.dt_primeiro_horario,b.hr_prim_horario),1,1),'N','01/01/2000 23:59:59', to_char(nvl(a.dt_primeiro_horario,a.dt_prescricao),'dd/mm/yyyy hh24:mi:ss')),'01/01/2000 23:59:59')),
	--padroniza_horario_prescr(b.ds_horarios, decode(substr(Obter_Se_horario_hoje(a.dt_prescricao,a.dt_primeiro_horario,b.hr_prim_horario),1,1),'N','01/01/2000 23:59:59', to_char(nvl(a.dt_primeiro_horario,a.dt_prescricao),'dd/mm/yyyy hh24:mi:ss'))),
	b.hr_prim_horario,
	coalesce(b.ie_urgencia,'N'),
	coalesce(b.ie_se_necessario,'N'),
	coalesce(b.ie_acm,'N'),
	substr(Obter_se_medic_controlado(b.cd_material),1,1),
	substr(obter_se_material_padronizado(a.cd_estabelecimento,b.cd_material),1,1),
	CASE WHEN coalesce(b.ie_regra_disp,'S')='N' THEN 'N'  ELSE 'S' END ,
	b.nr_agrupamento,
	b.cd_protocolo,
	b.cd_local_estoque,
	coalesce(b.cd_motivo_baixa,0),
	b.dt_suspensao_progr,
	b.dt_suspensao,
	b.nm_usuario_susp,
	c.dt_prev_execucao,
	b.qt_unitaria
from	prescr_procedimento c,
	prescr_material b,
	prescr_medica a
where	c.nr_prescricao = a.nr_prescricao
and	c.nr_prescricao = b.nr_prescricao
and	c.nr_sequencia = b.nr_sequencia_proc
and 	a.nr_prescricao	= b.nr_prescricao
and	a.nr_prescricao	= nr_prescricao_p
and	((b.nr_sequencia = nr_seq_item_p) or (coalesce(nr_seq_item_p,0) = 0))
and (not exists (	select	1
			from	prescr_mat_hor x
			where	x.nr_prescricao		= a.nr_prescricao
			and	x.nr_seq_material	= b.nr_sequencia
			and	coalesce(x.qt_minutos_agora::text, '') = ''
			and	Obter_se_horario_liberado(x.dt_lib_horario, x.dt_horario) = 'S'
			and	coalesce(x.dt_suspensao::text, '') = ''))
and	(((coalesce(a.dt_suspensao::text, '') = '') and (coalesce(b.ie_suspenso,'N') 	<> 'S')) or (ie_gerar_horarios_susp_w	= 'S'))
and	coalesce(b.dt_proxima_dose, a.dt_inicio_prescr) >= a.dt_inicio_prescr
and	coalesce(b.dt_proxima_dose, a.dt_inicio_prescr) < a.dt_validade_prescr
and	coalesce(b.ie_gerar_horario,'S') <> 'N'
and	((ie_gerar_associdos_ccg_w = 'S') or 
	((ie_gerar_associdos_ccg_w = 'N') and (obter_se_ctrl_glic_proc(c.nr_seq_proc_interno) = 'N') or (coalesce(b.ie_origem_inf,'X') = 'K')))	
and	((ie_tipo_item_p = 'IA') or (coalesce(ie_tipo_item_p::text, '') = ''))
and	ie_agrupador	= 5;

C06 CURSOR FOR
SELECT	b.ie_agrupador,
	b.nr_sequencia,
	b.qt_dose,
	b.qt_total_dispensar,
	b.cd_unidade_medida,
	b.cd_unidade_medida_dose,
	b.nr_ocorrencia,
	b.cd_material,
	b.ds_horarios,
	padroniza_horario_prescr(b.ds_horarios, CASE WHEN coalesce(b.qt_dia_prim_hor,0)=0 THEN CASE WHEN substr(Obter_Se_horario_hoje(a.dt_prescricao,a.dt_primeiro_horario,b.hr_prim_horario),1,1)='N' THEN '01/01/2000 23:59:59'  ELSE to_char(coalesce(a.dt_primeiro_horario,a.dt_prescricao),'dd/mm/yyyy hh24:mi:ss') END   ELSE '01/01/2000 23:59:59' END ),
	coalesce(b.ie_urgencia,'N'),
	coalesce(b.ie_se_necessario,'N'),
	coalesce(b.ie_acm,'N'),
	substr(Obter_se_medic_controlado(b.cd_material),1,1),
	substr(obter_se_material_padronizado(cd_estabelecimento_w,b.cd_material),1,1),
	CASE WHEN coalesce(b.ie_regra_disp,'S')='N' THEN 'N'  ELSE 'S' END ,
	b.nr_agrupamento,
	b.cd_protocolo,
	b.cd_local_estoque,
	coalesce(b.cd_motivo_baixa,0),
	b.dt_suspensao_progr,
	b.dt_suspensao,
	b.nm_usuario_susp
from	prescr_material b,
	prescr_medica a
where	a.nr_prescricao	= nr_prescricao_p
and	((b.nr_sequencia = nr_seq_item_p) or (coalesce(nr_seq_item_p,0) = 0))
and (not exists (	select	1
			from	prescr_mat_hor x
			where	x.nr_prescricao		= a.nr_prescricao
			and	x.nr_seq_material	= b.nr_sequencia
			and	coalesce(x.qt_minutos_agora::text, '') = ''
			and	Obter_se_horario_liberado(x.dt_lib_horario, x.dt_horario) = 'S'
			and	coalesce(x.dt_suspensao::text, '') = ''))
and	a.nr_prescricao	= b.nr_prescricao
and	(((coalesce(a.dt_suspensao::text, '') = '') and (coalesce(b.ie_suspenso,'N') 	<> 'S')) or (ie_gerar_horarios_susp_w	= 'S'))
and	coalesce(b.dt_proxima_dose, a.dt_inicio_prescr) >= a.dt_inicio_prescr
and	coalesce(b.dt_proxima_dose, a.dt_inicio_prescr) < a.dt_validade_prescr
and	coalesce(b.ie_gerar_horario,'S') <> 'N'
and	((ie_tipo_item_p = 'M') or (coalesce(ie_tipo_item_p::text, '') = ''))
and	b.ie_agrupador	= 6;

C08 CURSOR FOR
SELECT	ie_agrupador,
	nr_sequencia,
	qt_dose,
	qt_total_dispensar,
	cd_unidade_medida,
	cd_unidade_medida_dose,
	nr_ocorrencia,
	cd_material,
	ds_horarios,
	coalesce(padroniza_horario_prescr(b.ds_horarios, CASE WHEN coalesce(b.qt_dia_prim_hor,0)=0 THEN CASE WHEN substr(Obter_Se_horario_hoje(a.dt_prescricao,a.dt_primeiro_horario,b.hr_prim_horario),1,1)='N' THEN '01/01/2000 23:59:59'  ELSE to_char(coalesce(a.dt_primeiro_horario,a.dt_prescricao),'dd/mm/yyyy hh24:mi:ss') END   ELSE '01/01/2000 23:59:59' END ), b.hr_prim_horario),
	--padroniza_horario_prescr(b.ds_horarios, decode(substr(Obter_Se_horario_hoje(a.dt_prescricao,a.dt_primeiro_horario,b.hr_prim_horario),1,1),'N','01/01/2000 23:59:59', to_char(nvl(a.dt_primeiro_horario,a.dt_prescricao),'dd/mm/yyyy hh24:mi:ss'))),
	cd_intervalo,
	hr_prim_horario,
	coalesce(ie_urgencia,'N'),
	coalesce(ie_se_necessario,'N'),
	coalesce(ie_acm,'N'),
	substr(Obter_se_medic_controlado(b.cd_material),1,1),
	substr(obter_se_material_padronizado(a.cd_estabelecimento,b.cd_material),1,1),
	CASE WHEN coalesce(b.ie_regra_disp,'S')='N' THEN 'N'  ELSE 'S' END ,
	b.nr_agrupamento,
	b.cd_protocolo,
	b.cd_local_estoque,
	coalesce(b.cd_motivo_baixa,0),
	qt_dose_especial,
	hr_dose_especial,
	b.dt_suspensao_progr,
	b.dt_suspensao,
	b.nm_usuario_susp
from	prescr_material b,
	prescr_medica a
where	a.nr_prescricao	= b.nr_prescricao
and	a.nr_prescricao	= nr_prescricao_p
and	((b.nr_sequencia = nr_seq_item_p) or (coalesce(nr_seq_item_p,0) = 0))
and	(not exists (	select	1
			from	prescr_mat_hor x
			where	x.nr_prescricao		= a.nr_prescricao
			and	x.nr_seq_material	= b.nr_sequencia
			and	coalesce(x.qt_minutos_agora::text, '') = ''
			and	Obter_se_horario_liberado(x.dt_lib_horario, x.dt_horario) = 'S'
			and	coalesce(x.dt_suspensao::text, '') = '')
	or ((ie_param24_cpoe_w = 'S') and (a.cd_funcao_origem = 2314) and ((coalesce(b.dt_lib_farmacia::text, '') = '') or (coalesce(b.ie_urgencia,'N') = 'S'))))
and	(((coalesce(a.dt_suspensao::text, '') = '') and (coalesce(b.ie_suspenso,'N') 	<> 'S')) or (ie_gerar_horarios_susp_w	= 'S'))
and	coalesce(b.ie_gerar_horario,'S') <> 'N'
and	((ie_tipo_item_p = 'SNE') or (coalesce(ie_tipo_item_p::text, '') = ''))
and	ie_agrupador	= 8;

C10 CURSOR FOR
SELECT	b.ie_agrupador,
	b.nr_sequencia,
	b.qt_dose,
	b.qt_total_dispensar,
	b.cd_unidade_medida,
	b.cd_unidade_medida_dose,
	b.nr_ocorrencia,
	b.cd_material,
	coalesce(b.ie_urgencia,'N'),
	coalesce(b.ie_se_necessario,'N'),
	coalesce(b.ie_acm,'N'),
	substr(Obter_se_medic_controlado(b.cd_material),1,1),
	substr(obter_se_material_padronizado(cd_estabelecimento_w,b.cd_material),1,1),
	CASE WHEN coalesce(b.ie_regra_disp,'S')='N' THEN 'N'  ELSE 'S' END ,
	b.nr_agrupamento,
	b.cd_protocolo,
	b.cd_local_estoque,
	coalesce(b.cd_motivo_baixa,0),
	b.dt_suspensao_progr,
	b.dt_suspensao,
	b.nm_usuario_susp,
	padroniza_horario_prescr(b.ds_horarios, CASE WHEN coalesce(b.qt_dia_prim_hor,0)=0 THEN CASE WHEN substr(Obter_Se_horario_hoje(a.dt_prescricao,a.dt_primeiro_horario,b.hr_prim_horario),1,1)='N' THEN '01/01/2000 23:59:59'  ELSE to_char(coalesce(a.dt_primeiro_horario,a.dt_prescricao),'dd/mm/yyyy hh24:mi:ss') END   ELSE '01/01/2000 23:59:59' END ),
	b.hr_prim_horario
from	prescr_material b,
		prescr_medica a
where	a.nr_prescricao = b.nr_prescricao
and		b.nr_prescricao	= nr_prescricao_p
and	((b.nr_sequencia = nr_seq_item_p) or (coalesce(nr_seq_item_p,0) = 0))
and (not exists (	select	1
			from	prescr_mat_hor x
			where	x.nr_prescricao		= b.nr_prescricao
			and	x.nr_seq_material	= b.nr_sequencia
			and	coalesce(x.qt_minutos_agora::text, '') = ''
			and	Obter_se_horario_liberado(x.dt_lib_horario, x.dt_horario) = 'S'
			and	coalesce(x.dt_suspensao::text, '') = ''))
and	(((coalesce(dt_suspensao_prescr_w::text, '') = '') and (coalesce(b.ie_suspenso,'N') 	<> 'S')) or (ie_gerar_horarios_susp_w	= 'S'))
and	coalesce(b.ie_gerar_horario,'S') <> 'N'
and	((ie_tipo_item_p = 'M') or (coalesce(ie_tipo_item_p::text, '') = ''))
and	b.ie_agrupador	= 10;

C11 CURSOR FOR
SELECT	b.ie_agrupador,
		b.nr_sequencia,
		b.qt_dose,
		b.qt_total_dispensar,
		b.cd_unidade_medida,
		b.cd_unidade_medida_dose,
		b.nr_ocorrencia,
		b.cd_material,
		coalesce(b.ie_urgencia,'N'),
		coalesce(b.ie_se_necessario,'N'),
		coalesce(b.ie_acm,'N'),
		substr(Obter_se_medic_controlado(b.cd_material),1,1),
		substr(obter_se_material_padronizado(cd_estabelecimento_w,b.cd_material),1,1),
		CASE WHEN coalesce(b.ie_regra_disp,'S')='N' THEN 'N'  ELSE 'S' END ,
		b.nr_agrupamento,
		b.cd_protocolo,
		b.cd_local_estoque,
		coalesce(b.cd_motivo_baixa,0),
		b.dt_suspensao_progr,
		b.dt_suspensao,
		b.nm_usuario_susp,
		CASE WHEN ie_gerar_npt_fases_w='N' THEN  b.ds_horarios  ELSE calcula_hor_etapas_npt(nr_prescricao_p,ie_gerar_npt_fases_w) END ,
		b.ds_dose_diferenciada
from	prescr_material b,
		prescr_medica a
where	a.nr_prescricao = b.nr_prescricao
and		b.nr_prescricao	= nr_prescricao_p
and	((b.nr_sequencia = nr_seq_item_p) or (coalesce(nr_seq_item_p,0) = 0))
and (not exists (	select	1
			from	prescr_mat_hor x
			where	x.nr_prescricao		= b.nr_prescricao
			and	x.nr_seq_material	= b.nr_sequencia	
			and	coalesce(x.qt_minutos_agora::text, '') = ''
			and	Obter_se_horario_liberado(x.dt_lib_horario, x.dt_horario) = 'S'
			and	coalesce(x.dt_suspensao::text, '') = ''))
and	(((coalesce(dt_suspensao_prescr_w::text, '') = '') and (coalesce(b.ie_suspenso,'N') 	<> 'S')) or (ie_gerar_horarios_susp_w	= 'S'))
and	coalesce(b.ie_gerar_horario,'S') <> 'N'
and	((ie_tipo_item_p = 'M') or (coalesce(ie_tipo_item_p::text, '') = ''))
and	b.ie_agrupador	= 11;

C12 CURSOR FOR
SELECT	ie_agrupador,
	nr_sequencia,
	qt_dose,
	qt_total_dispensar,
	cd_unidade_medida,
	cd_unidade_medida_dose,
	nr_ocorrencia,
	cd_material,
	ds_horarios,
	padroniza_horario_prescr(b.ds_horarios, CASE WHEN coalesce(b.qt_dia_prim_hor,0)=0 THEN CASE WHEN substr(Obter_Se_horario_hoje(a.dt_prescricao,a.dt_primeiro_horario,b.hr_prim_horario),1,1)='N' THEN '01/01/2000 23:59:59'  ELSE to_char(coalesce(a.dt_primeiro_horario,a.dt_prescricao),'dd/mm/yyyy hh24:mi:ss') END   ELSE '01/01/2000 23:59:59' END ),
	--padroniza_horario_prescr(b.ds_horarios, decode(substr(Obter_Se_horario_hoje(a.dt_prescricao,a.dt_primeiro_horario,b.hr_prim_horario),1,1),'N','01/01/2000 23:59:59', to_char(nvl(a.dt_primeiro_horario,a.dt_prescricao),'dd/mm/yyyy hh24:mi:ss'))),
	hr_prim_horario,
	coalesce(ie_urgencia,'N'),
	qt_dose_especial,
	hr_dose_especial,
	coalesce(ie_se_necessario,'N'),
	coalesce(ie_acm,'N'),
	substr(Obter_se_medic_controlado(b.cd_material),1,1),
	substr(obter_se_material_padronizado(a.cd_estabelecimento,b.cd_material),1,1),
	CASE WHEN coalesce(b.ie_regra_disp,'S')='N' THEN 'N'  ELSE 'S' END ,
	b.nr_agrupamento,
	b.cd_protocolo,
	b.cd_local_estoque,
	coalesce(b.cd_motivo_baixa,0),
	b.dt_suspensao_progr,
	b.dt_suspensao,
	b.nm_usuario_susp
from	prescr_material b,
	prescr_medica a
where	a.nr_prescricao	= b.nr_prescricao
and	a.nr_prescricao	= nr_prescricao_p
and	((b.nr_sequencia = nr_seq_item_p) or (coalesce(nr_seq_item_p,0) = 0))
and (not exists (	select	1
			from	prescr_mat_hor x
			where	x.nr_prescricao		= a.nr_prescricao
			and	x.nr_seq_material	= b.nr_sequencia
			and	coalesce(x.qt_minutos_agora::text, '') = ''
			and	Obter_se_horario_liberado(x.dt_lib_horario, x.dt_horario) = 'S'
			and	coalesce(x.dt_suspensao::text, '') = ''))
and	(((coalesce(a.dt_suspensao::text, '') = '') and (coalesce(b.ie_suspenso,'N') 	<> 'S')) or (ie_gerar_horarios_susp_w	= 'S'))
and	coalesce(b.ie_gerar_horario,'S') <> 'N'
and	((ie_tipo_item_p = 'SUP') or (coalesce(ie_tipo_item_p::text, '') = ''))
and	ie_agrupador	= 12;

C13 CURSOR FOR
SELECT	ie_agrupador,
	nr_sequencia,
	qt_dose,
	qt_total_dispensar,
	cd_unidade_medida,
	cd_unidade_medida_dose,
	nr_ocorrencia,
	cd_material,
	ds_horarios,
	padroniza_horario_prescr(b.ds_horarios, CASE WHEN coalesce(b.qt_dia_prim_hor,0)=0 THEN CASE WHEN substr(Obter_Se_horario_hoje(a.dt_prescricao,a.dt_primeiro_horario,b.hr_prim_horario),1,1)='N' THEN '01/01/2000 23:59:59'  ELSE to_char(coalesce(a.dt_primeiro_horario,a.dt_prescricao),'dd/mm/yyyy hh24:mi:ss') END   ELSE '01/01/2000 23:59:59' END ),
	--padroniza_horario_prescr(b.ds_horarios, decode(substr(Obter_Se_horario_hoje(a.dt_prescricao,a.dt_primeiro_horario,b.hr_prim_horario),1,1),'N','01/01/2000 23:59:59', to_char(nvl(a.dt_primeiro_horario,a.dt_prescricao),'dd/mm/yyyy hh24:mi:ss'))),
	hr_prim_horario,
	coalesce(ie_urgencia,'N'),
	qt_dose_especial,
	hr_dose_especial,
	coalesce(ie_se_necessario,'N'),
	coalesce(ie_acm,'N'),
	substr(Obter_se_medic_controlado(b.cd_material),1,1),
	substr(obter_se_material_padronizado(a.cd_estabelecimento,b.cd_material),1,1),
	CASE WHEN coalesce(b.ie_regra_disp,'S')='N' THEN 'N'  ELSE 'S' END ,
	b.nr_agrupamento,
	b.cd_protocolo,
	b.cd_local_estoque,
	coalesce(b.cd_motivo_baixa,0),
	b.dt_suspensao_progr,
	b.dt_suspensao,
	b.nm_usuario_susp
from	prescr_material b,
	prescr_medica a
where	a.nr_prescricao	= b.nr_prescricao
and	a.nr_prescricao	= nr_prescricao_p
and	((b.nr_sequencia = nr_seq_item_p) or (coalesce(nr_seq_item_p,0) = 0))
and (not exists (	select	1
			from	prescr_mat_hor x
			where	x.nr_prescricao		= a.nr_prescricao
			and	x.nr_seq_material	= b.nr_sequencia
			and	coalesce(x.qt_minutos_agora::text, '') = ''
			and	Obter_se_horario_liberado(x.dt_lib_horario, x.dt_horario) = 'S'
			and	coalesce(x.dt_suspensao::text, '') = ''))
and	(((coalesce(a.dt_suspensao::text, '') = '') and (coalesce(b.ie_suspenso,'N') 	<> 'S')) or (ie_gerar_horarios_susp_w	= 'S'))
and	coalesce(b.ie_gerar_horario,'S') <> 'N'
and	((ie_tipo_item_p = 'GAS') or (coalesce(ie_tipo_item_p::text, '') = ''))
and	ie_agrupador	= 15;

c14 CURSOR FOR
SELECT	nr_seq_solucao
from	prescr_solucao
where	nr_prescricao	= nr_prescricao_p
and	coalesce(dt_status::text, '') = '';

C15 CURSOR FOR
SELECT	b.ie_agrupador,
	b.nr_sequencia,
	b.qt_dose,
	b.qt_total_dispensar,
	b.cd_unidade_medida,
	b.cd_unidade_medida_dose,
	b.nr_ocorrencia,
	b.cd_material,
	b.ds_horarios,
	coalesce(padroniza_horario_prescr(coalesce(b.ds_horarios,c.ds_horarios), CASE WHEN coalesce(b.qt_dia_prim_hor,0)=0 THEN CASE WHEN substr(Obter_Se_horario_hoje(a.dt_prescricao,a.dt_primeiro_horario,b.hr_prim_horario),1,1)='N' THEN '01/01/2000 23:59:59'  ELSE to_char(coalesce(a.dt_primeiro_horario,a.dt_prescricao),'dd/mm/yyyy hh24:mi:ss') END   ELSE '01/01/2000 23:59:59' END ), b.hr_prim_horario),
	b.cd_intervalo,
	b.hr_prim_horario,
	coalesce(b.ie_urgencia,'N'),
	coalesce(b.ie_se_necessario,'N'),
	coalesce(b.ie_acm,'N'),
	substr(Obter_se_medic_controlado(b.cd_material),1,1),
	substr(obter_se_material_padronizado(a.cd_estabelecimento,b.cd_material),1,1),
	CASE WHEN coalesce(b.ie_regra_disp,'S')='N' THEN 'N'  ELSE 'S' END ,
	b.nr_agrupamento,
	b.cd_protocolo,
	b.cd_local_estoque,
	coalesce(b.cd_motivo_baixa,0),
	c.qt_dose_especial,
	c.hr_dose_especial,
	b.dt_suspensao_progr,
	b.dt_suspensao,
	b.nm_usuario_susp
from	prescr_material b,
	prescr_medica a,
	prescr_leite_deriv c
where	a.nr_prescricao	= b.nr_prescricao
and	b.nr_prescricao = c.nr_prescricao
and	b.nr_seq_leite_deriv = c.nr_sequencia
and	a.nr_prescricao	= nr_prescricao_p
and	((b.nr_sequencia = nr_seq_item_p) or (coalesce(nr_seq_item_p,0) = 0))
and (not exists (	select	1
			from	prescr_mat_hor x
			where	x.nr_prescricao		= a.nr_prescricao
			and	x.nr_seq_material	= b.nr_sequencia
			and	coalesce(x.qt_minutos_agora::text, '') = ''
			and	Obter_se_horario_liberado(x.dt_lib_horario, x.dt_horario) = 'S'
			and	coalesce(x.dt_suspensao::text, '') = ''))
and	(((coalesce(a.dt_suspensao::text, '') = '') and (coalesce(b.ie_suspenso,'N') 	<> 'S')) or (ie_gerar_horarios_susp_w	= 'S'))
and	coalesce(b.ie_gerar_horario,'S') <> 'N'
and	((ie_tipo_item_p = 'LD') or (coalesce(ie_tipo_item_p::text, '') = ''))
and	ie_agrupador	= 16;

C016 CURSOR FOR
	SELECT	nr_sequencia,
		ie_classif_urgente,
		ie_controlado,
		ie_padronizado
	from	classif_lote_disp_far
	where	cd_estabelecimento = cd_estabelecimento_w
	and	ie_situacao = 'A'
	order by ie_classif_urgente,
		ie_controlado desc,
		ie_padronizado desc;

C17 CURSOR FOR
SELECT	ie_agrupador,
	nr_sequencia,
	qt_dose,
	qt_total_dispensar,
	cd_unidade_medida,
	cd_unidade_medida_dose,
	nr_ocorrencia,
	cd_material,
	ds_horarios,
	coalesce(padroniza_horario_prescr(b.ds_horarios, CASE WHEN coalesce(b.qt_dia_prim_hor,0)=0 THEN CASE WHEN substr(Obter_Se_horario_hoje(a.dt_prescricao,a.dt_primeiro_horario,b.hr_prim_horario),1,1)='N' THEN '01/01/2000 23:59:59'  ELSE to_char(coalesce(a.dt_primeiro_horario,a.dt_prescricao),'dd/mm/yyyy hh24:mi:ss') END   ELSE '01/01/2000 23:59:59' END ), b.hr_prim_horario),
	cd_intervalo,
	hr_prim_horario,
	coalesce(ie_urgencia,'N'),
	coalesce(ie_se_necessario,'N'),
	coalesce(ie_acm,'N'),
	substr(Obter_se_medic_controlado(b.cd_material),1,1),
	substr(obter_se_material_padronizado(a.cd_estabelecimento,b.cd_material),1,1),
	CASE WHEN coalesce(b.ie_regra_disp,'S')='N' THEN 'N'  ELSE 'S' END ,
	b.nr_agrupamento,
	b.cd_protocolo,
	b.cd_local_estoque,
	coalesce(b.cd_motivo_baixa,0),
	qt_dose_especial,
	hr_dose_especial,
	b.dt_suspensao_progr,
	b.dt_suspensao,
	b.nm_usuario_susp
from	prescr_material b,
	prescr_medica a
where	a.nr_prescricao	= b.nr_prescricao
and	a.nr_prescricao	= nr_prescricao_p
and	((b.nr_sequencia = nr_seq_item_p) or (coalesce(nr_seq_item_p,0) = 0))
and (not exists (	select	1
			from	prescr_mat_hor x
			where	x.nr_prescricao		= a.nr_prescricao
			and	x.nr_seq_material	= b.nr_sequencia
			and	coalesce(x.qt_minutos_agora::text, '') = ''
			and	Obter_se_horario_liberado(x.dt_lib_horario, x.dt_horario) = 'S'
			and	coalesce(x.dt_suspensao::text, '') = ''))
and	(((coalesce(a.dt_suspensao::text, '') = '') and (coalesce(b.ie_suspenso,'N') 	<> 'S')) or (ie_gerar_horarios_susp_w	= 'S'))
and	coalesce(b.ie_gerar_horario,'S') <> 'N'
and	((ie_tipo_item_p = 'LDA') or (coalesce(ie_tipo_item_p::text, '') = ''))
and	ie_agrupador	= 17;		

/*SO-2214423*/

C20 CURSOR FOR
	SELECT	ie_momento_lote,
		ie_regra_agora
	from	regra_disp_lote_farm
	where	((ie_motivo_prescricao = ie_motivo_prescricao_w) or (coalesce(ie_motivo_prescricao::text, '') = ''))
	and	clock_timestamp() between to_date(to_char(clock_timestamp(),'dd/mm/yyyy')||' '||to_char(coalesce(dt_hora_inicio,clock_timestamp()),'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss') and
							to_date(to_char(clock_timestamp(),'dd/mm/yyyy')||' '||to_char(coalesce(dt_hora_fim,clock_timestamp()),'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss')
	and	ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(clock_timestamp()) between ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_inicio_vigencia) and ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(coalesce(dt_fim_vigencia,clock_timestamp()))
	and	coalesce(cd_setor_atendimento,cd_setor_atendimento_w)	= cd_setor_atendimento_w
	and	ie_situacao = 'A'
	and 	((ie_quimio_w <> 'S' and coalesce(ie_quimioterapicas,'N') <> 'S') or (ie_quimio_w = 'S'))
	order by CASE WHEN ie_quimioterapicas='S' THEN 'Z'  ELSE CASE WHEN ie_quimioterapicas='N' THEN 'C'  ELSE 'B' END  END ,coalesce(cd_setor_atendimento,0), coalesce(ie_motivo_prescricao,0);	

C21 CURSOR FOR
	SELECT	a.nr_sequencia,
		b.cd_local_estoque,
		a.dt_horario,
		coalesce(a.ie_dose_especial,'N')
	from	prescr_mat_hor a,
			prescr_material b
	where	a.nr_prescricao	= nr_prescricao_p
	and	a.nr_prescricao = b.nr_prescricao
	and	a.nr_seq_material = b.nr_sequencia
	and	((a.nr_seq_material = nr_seq_item_p) or (coalesce(nr_seq_item_p,0) = 0))
	order by a.nr_sequencia;
	
c22 CURSOR FOR
SELECT	a.nr_sequencia,
		a.nr_seq_material,
		a.nr_seq_solucao
from	prescr_mat_hor a
where	(a.nr_seq_solucao IS NOT NULL AND a.nr_seq_solucao::text <> '')
and		a.nr_prescricao	= nr_prescricao_p
and		exists (	select 1
				from	prescr_mat_hor x
				where	x.nr_etapa_sol < a.nr_etapa_sol
				and		x.nr_prescricao = a.nr_prescricao
				and		x.nr_seq_solucao = a.nr_seq_solucao
				and		x.dt_horario > a.dt_horario)
order by	a.nr_seq_solucao,
			a.nr_seq_material,
			a.dt_horario;

c23 CURSOR FOR
SELECT	a.nr_sequencia,
	a.nr_seq_material,
	a.ie_agrupador
from	prescr_material b,
	prescr_mat_hor a
where	a.nr_prescricao	= b.nr_prescricao
and	a.nr_seq_material = b.nr_sequencia
and	a.nr_prescricao	= nr_prescricao_p
and	b.nr_prescricao	= nr_prescricao_p
and	not exists (	select	1
			from	prescr_mat_hor x
			where	x.nr_prescricao = b.nr_prescricao
			and	x.nr_seq_material	= b.nr_sequencia
			and	(x.dt_lib_horario IS NOT NULL AND x.dt_lib_horario::text <> '')
			and	coalesce(x.qt_minutos_agora,0) > 0)
and	a.ie_agrupador	in (1,2,3,4,7,9)
and	(((coalesce(b.ie_sem_aprazamento,'N') <> 'S') and (coalesce(dt_liberacao_w::text, '') = '')) or (dt_liberacao_w IS NOT NULL AND dt_liberacao_w::text <> ''))
and	(clock_timestamp() + (qt_minutos_agora_w/1440)) > a.dt_horario
order by a.ie_agrupador desc;

C24 CURSOR FOR
SELECT	a.nr_sequencia,
		a.nr_seq_material
from	prescr_material b,
		prescr_mat_hor a
where	a.nr_prescricao	= b.nr_prescricao
and		a.nr_seq_material = b.nr_sequencia
and		a.nr_prescricao	= nr_prescricao_p
and		b.nr_prescricao	= nr_prescricao_p
and		coalesce(a.dt_lib_horario::text, '') = ''
and 	coalesce(b.dt_baixa::text, '') = ''
and 	coalesce(b.dt_suspensao::text, '') = ''
and (coalesce(ie_horario_especial,'N') = 'N' or (GEDI_OBTER_SE_SALDO_ESPEC(cd_estabelecimento_w)	= 'S'))
order by b.ie_agrupador,
		 a.dt_horario;
		
c25 CURSOR FOR
SELECT	'M' ie_cursor, 
		a.nr_sequencia,
		b.nr_sequencia
from	prescr_material a,
		prescr_mat_hor b
where	a.nr_prescricao = b.nr_prescricao
and		a.nr_sequencia	= b.nr_seq_material
and		a.nr_prescricao	= nr_prescricao_p
and		b.nr_prescricao	= nr_prescricao_p
and		(b.dt_lib_horario IS NOT NULL AND b.dt_lib_horario::text <> '')
and (b.dt_lib_horario >= dt_lib_horario_w
or		coalesce(a.ie_urgencia,'N') = 'S'
or		coalesce(b.ie_dose_especial, 'N') = 'S')
and		a.ie_agrupador not in (4,13)

union all

select	'S' ie_cursor,
		a.nr_sequencia_solucao,
		b.nr_sequencia
from	prescr_material a,
		prescr_mat_hor b
where	a.nr_prescricao = b.nr_prescricao
and		a.nr_sequencia	= b.nr_seq_material
and		a.nr_prescricao	= nr_prescricao_p
and		b.nr_prescricao	= nr_prescricao_p
and		(b.dt_lib_horario IS NOT NULL AND b.dt_lib_horario::text <> '')
and (b.dt_lib_horario >= dt_lib_horario_w
or		coalesce(a.ie_urgencia,'N') = 'S')
and		a.ie_agrupador in (4,13)
and		(a.nr_sequencia_solucao IS NOT NULL AND a.nr_sequencia_solucao::text <> '');

-- procedures / subrotinas
procedure gerar_reconst_dil_hor is
	;
BEGIN
		open C03;
		loop
		fetch C03 into
			ie_agrupador_dil_w,
			nr_sequencia_dil_w,
			qt_dose_dil_w,
			qt_total_disp_dil_w,
			cd_unidade_medida_dil_w,
			cd_unid_med_dose_dil_w,
			nr_ocorrencia_dil_w,
			cd_material_dil_w,
			ie_se_necessario_dil_w,
			ie_acm_dil_w,
			ie_controlado_dil_w,
			ie_padronizado_dil_w,
			ie_regra_disp_dil_w,
			nr_agrupamento_dil_w,
			cd_protocolo_dil_w,
			cd_local_estoque_dil_w,
			cd_motivo_baixa_dil_w,
			qt_unitaria_dil_w,
			dt_suspensao_progr_w,
			dt_suspensao_dil_w,
			nm_usuario_susp_dil_w,
			nr_seq_diluicao_w;
		EXIT WHEN NOT FOUND; /* apply on C03 */
			
			select	nextval('prescr_mat_hor_seq')
			into STRICT	nr_sequencia_w
			;

			--- Rafael em 07/10/2006 Identificar horarios especiais 
			if (ie_se_necessario_dil_w = 'S') or (ie_acm_dil_w = 'S') then
				ie_horario_especial_w	:= 'S';
			else
				ie_horario_especial_w	:= 'N';
			end if;
			
			begin
				exec_w := 'begin ger_pres_mat_s_dt_lib_md_pck.obter_horario_md(:1,:2,:3); end;';

				EXECUTE exec_w using in out dt_horario_w,
										   in dt_prescricao_ww,
										   in ie_urgente_w;
			exception
				when others then
					dt_horario_w := null;
			end;
			
			if (dt_suspensao_progr_w > dt_horario_w) or (coalesce(dt_suspensao_progr_w::text, '') = '') then					
				begin
				  exec_w := 'call ger_pres_mat_s_dt_lib_md_pck.obter_classif_urgente_md(:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13) into :result';

				  EXECUTE exec_w using in 0,
												 in ie_classif_nao_padrao_w,
												 in ie_padronizado_dil_w,
												 in ie_classif_normal_acm_sn_w,
												 in ie_se_necessario_dil_w,
												 in ie_acm_dil_w,
												 in dt_horario_w,
												 in dt_limite_agora_w,
												 in ie_urgente_w,
												 in ie_agora_impressao_w,
												 in ie_define_agora_w, 
												 in qt_min_antes_atend_w,
												 in dt_limite_especial_w,
												 out ie_classif_urgente_w;

				exception
					when others then
					  ie_classif_urgente_w := null;
				end;

				begin
				  exec_w := 'begin ger_pres_mat_s_dt_lib_md_pck.obter_ocor_tot_disp_unita_md(:1,:2,:3,:4,:5); end;';

				  EXECUTE exec_w using in qt_dose_especial_w,
												 in ie_agrupador_dil_w,
												 in out nr_ocorrencia_dil_w,
												 in out qt_total_disp_dil_w,
												 in out qt_unitaria_dil_w;
				exception
					when others then
					  nr_ocorrencia_dil_w := null;
					  qt_total_disp_dil_w := null;
					  qt_unitaria_dil_w   := null;
				end;
				
				ds_diluicao_w	:= null;
				if (ds_dose_diferenciada_w IS NOT NULL AND ds_dose_diferenciada_w::text <> '') and (vt_dose_diferenciada_w IS NOT NULL AND vt_dose_diferenciada_w::text <> '') and (vt_dose_diferenciada_w.count > 0) and (vt_dose_diferenciada_w[ie_ctrl_loop_ww](.qt_dose_diferenciada IS NOT NULL AND .qt_dose_diferenciada::text <> '')) then
					ds_diluicao_w	:= substr(Obter_Diluicao_Medic_dose(nr_seq_prescr_w, nr_prescricao_p, vt_dose_diferenciada_w[ie_ctrl_loop_ww].qt_dose_diferenciada),1,2000);
				end if;
				
				SELECT * FROM obter_dose_um_horario_pmh(cd_material_dil_w, qt_dose_dil_w, cd_unid_med_dose_dil_w, qt_dose_hor_w, cd_unid_med_dose_hor_w) INTO STRICT qt_dose_hor_w, cd_unid_med_dose_hor_w;
				
				begin
				  exec_w := 'begin ger_pres_mat_s_dt_lib_md_pck.obter_ocorr_dil_disp_hor_md(:1,:2,:3,:4,:5,:6,:7,:8); end;';

				  EXECUTE exec_w using in 0,
												 in out qt_unitaria_dil_w,
												 in qt_total_disp_dil_w,
												 in ie_agrupador_dil_w,
												 in nr_ocorrencia_w,
												 in qt_unitaria_w,
												 in out qt_dispensar_hor_w,
												 in out nr_ocorrencia_dil_w;
				exception
					when others then
					  qt_dispensar_hor_w  := null;
					  nr_ocorrencia_dil_w := null;
				end;
				
				begin
				
				dt_suspensao_w		:= null;
				dt_fim_horario_w	:= null;
				if (ie_copia_status_hor_w	= 'S') and (coalesce(dt_suspensao_dil_w::text, '') = '') then
					select	CASE WHEN max(a.ie_suspenso_adep)='S' THEN max(a.dt_suspensao)  ELSE null END ,
							max(a.dt_fim_horario)
					into STRICT	dt_suspensao_w,
						dt_fim_horario_w
					from	prescr_medica b,
						prescr_mat_hor a
					where	a.nr_prescricao		= b.nr_prescricao
					and	b.nr_atendimento	= nr_atendimento_w
					and	a.ie_agrupador		= ie_agrupador_dil_w
					and	a.dt_horario		= dt_horario_w
					and	a.cd_material		= cd_material_dil_w
					and	a.qt_dose		= qt_dose_dil_w
					and	a.nr_prescricao		<> nr_prescricao_p
					and	a.cd_unidade_medida_dose	= cd_unid_med_dose_dil_w;
				end if;
				
				select	count(*)
				into STRICT	qt_hor_w
				from	prescr_mat_hor where 	nr_prescricao 	= nr_prescricao_p
				and	nr_seq_material	= nr_sequencia_dil_w
				and	dt_horario	= dt_horario_w LIMIT 1;
				
				if (qt_hor_w = 0) then
					select	count(*)
					into STRICT	qt_hor_w
					from	prescr_medica b,
						prescr_mat_hor x where 	x.nr_prescricao		= nr_prescricao_p
					and	b.nr_prescricao		= x.nr_prescricao
					and	x.nr_seq_material	= nr_sequencia_dil_w
					and	(x.dt_lib_horario IS NOT NULL AND x.dt_lib_horario::text <> '')
					and	(b.dt_liberacao_farmacia IS NOT NULL AND b.dt_liberacao_farmacia::text <> '')
					and	(clock_timestamp() + (x.qt_minutos_agora/1440)) > dt_horario_w
					and	coalesce(x.qt_minutos_agora,0) > 0 LIMIT 1;
				end if;
				
				if (qt_hor_w = 0) then
				
					insert into prescr_mat_hor(
						nr_sequencia,
						nr_seq_digito,
						nr_prescricao,
						nr_seq_material,
						ie_agrupador,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						ds_horario,
						dt_horario,
						qt_dose,
						qt_dispensar,
						cd_unidade_medida,
						cd_unidade_medida_dose,
						cd_material,
						nr_ocorrencia,
						qt_dispensar_hor,
						ie_urgente,
						ie_horario_especial,
						nr_seq_turno,
						ie_aprazado,
						ie_controlado,
						ie_padronizado,
						ie_classif_urgente,
						ie_dispensar_farm,
						nr_seq_superior,
						nr_agrupamento,
						ie_adep,
						qt_horario,
						cd_unid_med_hor,
						cd_motivo_baixa,
						ds_diluicao,
						dt_suspensao,
						dt_fim_horario,
						nm_usuario_susp,
						nr_atendimento,
						cd_local_estoque_baixa
						)
					values (	nr_sequencia_w,
						calcula_digito('MODULO11',nr_sequencia_w),
						nr_prescricao_p,
						nr_sequencia_dil_w,
						ie_agrupador_dil_w,
						clock_timestamp(),	
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						ds_hora_w,
						dt_horario_w,
						qt_dose_dil_w,
						qt_total_disp_dil_w,
						cd_unidade_medida_dil_w,
						cd_unid_med_dose_dil_w,
						cd_material_dil_w,
						nr_ocorrencia_dil_w,
						CASE WHEN cd_motivo_baixa_dil_w=0 THEN  qt_dispensar_hor_w  ELSE 0 END ,
						ie_urgente_w,
						coalesce(ie_horario_especial_w,'N'),
						Obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,to_char(dt_horario_w,'hh24:mi'),cd_local_estoque_dil_w),
						'N',
						ie_controlado_dil_w,
						ie_padronizado_dil_w,
						ie_classif_urgente_w,
						ie_regra_disp_dil_w,
						nr_seq_prescr_w,
						nr_agrupamento_w,
						ie_adep_w,
						qt_dose_hor_w,
						cd_unid_med_dose_hor_w,
						cd_motivo_baixa_dil_w,
						ds_diluicao_w,
						coalesce(dt_suspensao_dil_w,dt_suspensao_w),
						dt_fim_horario_w,
						nm_usuario_susp_dil_w,
						nr_atendimento_w,
						cd_local_estoque_baixa_w);
													
			

				end if;
				exception when others then
					CALL gerar_log_prescricao(nr_prescricao_p, nr_sequencia_dil_w, ie_agrupador_dil_w, null, null, substr(sqlerrm,1,2000), nm_usuario_p, 17039, 'S');
					sqlerrm_w	:= substr(sqlerrm,1,2000);
				end;
			end if;
		end loop;
		close C03;
	end;

procedure excluir_horarios_anteriores is
	begin
	if (coalesce(ie_tipo_item_p::text, '') = '') then
		delete	FROM prescr_mat_hor
		where	nr_prescricao = nr_prescricao_p
		and		coalesce(coalesce(dt_lib_horario,dt_suspensao)::text, '') = ''
		and		((nr_seq_material = nr_seq_item_p) or (coalesce(nr_seq_item_p,0) = 0));

	elsif (ie_tipo_item_p = 'M') then
		delete	FROM prescr_mat_hor
		where	nr_prescricao = nr_prescricao_p
		and		coalesce(coalesce(dt_lib_horario,dt_suspensao)::text, '') = ''
		and		((nr_seq_material = nr_seq_item_p) or (nr_seq_superior = nr_seq_item_p) or (coalesce(nr_seq_item_p,0) = 0))
		and 	ie_agrupador in (1,3,7,9);

	elsif (ie_tipo_item_p = 'MAT') then
		delete
		from 	prescr_mat_hor
		where	nr_prescricao = nr_prescricao_p
		and		coalesce(coalesce(dt_lib_horario,dt_suspensao)::text, '') = ''
		and		((nr_seq_material = nr_seq_item_p) or (nr_seq_superior = nr_seq_item_p) or (coalesce(nr_seq_item_p,0) = 0))
		and		ie_agrupador = 2;

	elsif (ie_tipo_item_p in ('P','IA')) then
		delete
		from 	prescr_mat_hor
		where	nr_prescricao = nr_prescricao_p
		and		coalesce(coalesce(dt_lib_horario,dt_suspensao)::text, '') = ''
		and		((nr_seq_material = nr_seq_item_p) or (coalesce(nr_seq_item_p,0) = 0))
		and		ie_agrupador in (3,5,9);

	elsif (ie_tipo_item_p = 'S') then
		delete
		from 	prescr_mat_hor
		where	nr_prescricao = nr_prescricao_p
		and		coalesce(coalesce(dt_lib_horario,dt_suspensao)::text, '') = ''
		and		((nr_seq_material = nr_seq_item_p) or (coalesce(nr_seq_item_p,0) = 0))	
		and		ie_agrupador in (4,13);

	elsif (ie_tipo_item_p = 'SNE') then
		delete
		from 	prescr_mat_hor
		where	nr_prescricao = nr_prescricao_p
		and		coalesce(coalesce(dt_lib_horario,dt_suspensao)::text, '') = ''
		and		((nr_seq_material = nr_seq_item_p) or (coalesce(nr_seq_item_p,0) = 0))
		and		ie_agrupador = 8;

	elsif (ie_tipo_item_p = 'SUP') then
		delete
		from 	prescr_mat_hor
		where	nr_prescricao = nr_prescricao_p
		and		coalesce(coalesce(dt_lib_horario,dt_suspensao)::text, '') = ''
		and		((nr_seq_material = nr_seq_item_p) or (coalesce(nr_seq_item_p,0) = 0))
		and		ie_agrupador	= 12;

	elsif (ie_tipo_item_p = 'LD') then
		delete
		from 	prescr_mat_hor
		where	nr_prescricao = nr_prescricao_p
		and		coalesce(coalesce(dt_lib_horario,dt_suspensao)::text, '') = ''
		and		((nr_seq_material = nr_seq_item_p) or (coalesce(nr_seq_item_p,0) = 0))
		and		ie_agrupador in (16,17);
		
	elsif (ie_tipo_item_p = 'GAS') then
		delete
		from 	prescr_mat_hor
		where	nr_prescricao = nr_prescricao_p
		and		coalesce(coalesce(dt_lib_horario,dt_suspensao)::text, '') = ''
		and		((nr_seq_material = nr_seq_item_p) or (coalesce(nr_seq_item_p,0) = 0))
		and		ie_agrupador = 15;
	end if;

    exception when others then
		sqlerr_w := 'Exception: '||substr(sqlerrm||chr(13)||DBMS_UTILITY.format_error_backtrace,1,1500);
		
		CALL Gerar_log_prescr_mat(nr_prescricao_p, nr_seq_item_p, null, null, ie_tipo_item_p, substr(sqlerr_w,1,4000), nm_usuario_p, 'N');
	end;

procedure gerar_hor_medicamentos is
	begin

	qt_hor_ant_w := 0;
	nr_seq_prescr_ant_w := 0;

	open C01;
	loop
	fetch C01 into
		ie_agrupador_w,
		nr_seq_prescr_w,
		qt_dose_w,
		qt_total_dispensar_w,
		cd_unidade_medida_w,
		cd_unid_med_dose_w,
		nr_ocorrencia_w,
		cd_material_w,
		ds_horarios_w,
		ds_horarios_padr_w,
		hr_prim_horario_w,
		ie_urgente_w,
		qt_dose_especial_w,
		hr_dose_especial_w,
		ie_se_necessario_w,
		ie_acm_w,
		ie_controlado_w,
		ie_padronizado_w,
		ie_regra_disp_w,
		nr_agrupamento_w,
		cd_protocolo_w,
		ie_componente_composto_w,
		ds_dose_diferenciada_w,
		cd_local_estoque_w,
		qt_unitaria_w,
		cd_motivo_baixa_w,
		nr_seq_kit_w,
		ie_dose_espec_agora_w,
		dt_suspensao_progr_w,
		dt_ref_inicio_W,
		dt_suspensao_ww,
		nm_usuario_susp_w,
		cd_unid_med_dose_esp_w,
		qt_dia_prim_hor_w,
		nr_seq_recomendacao_w,
		cd_intervalo_w,
		dt_inicio_medic_w,
		nr_seq_mat_cpoe_w,
		ie_via_aplicacao_w,
		qt_solic_min_cons_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
	
		CALL gravar_log_tasy(10007,
		substr('Gerar_prescr_mat_sem_dt_lib C01 LOG:' ||
		' ie_agrupador_w:' || ie_agrupador_w ||
		' nr_prescricao_p:' || nr_prescricao_p ||
		' nr_seq_prescr_w:' || nr_seq_prescr_w ||
		' qt_dose_w:' || qt_dose_w ||
		' qt_total_dispensar_w:' || qt_total_dispensar_w ||
		' cd_unidade_medida_w:' || cd_unidade_medida_w ||
		' cd_unid_med_dose_w:' || cd_unid_med_dose_w ||
		' nr_ocorrencia_w:' || nr_ocorrencia_w ||
		' cd_material_w:' || cd_material_w ||
		' ds_horarios_w:' || ds_horarios_w ||
		' ds_horarios_padr_w:' || ds_horarios_padr_w ||
		' hr_prim_horario_w:' || hr_prim_horario_w ||
		' ie_urgente_w:' || ie_urgente_w ||
		' qt_dose_especial_w:' || qt_dose_especial_w ||
		' hr_dose_especial_w:' || hr_dose_especial_w ||
		' ie_se_necessario_w:' || ie_se_necessario_w ||
		' ie_acm_w:' || ie_acm_w ||
		' ie_controlado_w:' || ie_controlado_w ||
		' ie_padronizado_w:' || ie_padronizado_w ||
		' ie_regra_disp_w:' || ie_regra_disp_w ||
		' nr_agrupamento_w:' || nr_agrupamento_w ||
		' cd_protocolo_w:' || cd_protocolo_w ||
		' ie_componente_composto_w:' || ie_componente_composto_w ||
		' ds_dose_diferenciada_w:' || ds_dose_diferenciada_w ||
		' cd_local_estoque_w:' || cd_local_estoque_w ||
		' qt_unitaria_w:' || qt_unitaria_w ||
		' cd_motivo_baixa_w:' || cd_motivo_baixa_w ||
		' nr_seq_kit_w:' || nr_seq_kit_w ||
		' ie_dose_espec_agora_w:' || ie_dose_espec_agora_w ||
		' dt_suspensao_progr_w:' || dt_suspensao_progr_w ||
		' dt_ref_inicio_W:' || dt_ref_inicio_W ||
		' dt_suspensao_ww:' || dt_suspensao_ww ||
		' nm_usuario_susp_w:' || nm_usuario_susp_w ||
		' cd_unid_med_dose_esp_w:' || cd_unid_med_dose_esp_w ||
		' qt_dia_prim_hor_w:' || qt_dia_prim_hor_w ||
		' nr_seq_recomendacao_w:' || nr_seq_recomendacao_w ||
		' cd_intervalo_w:' || cd_intervalo_w ||
		' dt_inicio_medic_w:' || dt_inicio_medic_w,1,2000),nm_usuario_p);

        if (ie_inf_ras_hor_medi_w = 'S') then
            ds_alteracao_rastre_w := substr(ds_alteracao_rastre_w || chr(13) ||
                                            'Gerar log Rastreabilidade Alteracoes / Gerar_prescr_mat_sem_dt_lib' || chr(13) ||
                                            '01 linha:' || $$plsql_line || chr(13) ||
                                            'NR_PRESCRICAO_P: ' || nr_prescricao_p
                                            , 1, 4000);
        end if;

		-- CPOE_ITEM_AGORA: Tratamento para que somente primeiro horario do item seja de classificacao "Urgente"
		if (cd_funcao_origem_w = 2314) and (ie_urgente_w = 'S') then

			select	coalesce(max('N'),'S')
			into STRICT	ie_urgente_w
			from	prescr_mat_hor x
			where	x.nr_prescricao		= nr_prescricao_p
			and		x.nr_seq_material	= nr_seq_prescr_w
			and		Obter_se_horario_liberado(x.dt_lib_horario, x.dt_horario) = 'S'
			and		coalesce(x.ie_dose_especial,'N')	= 'N'
			and		coalesce(x.dt_suspensao::text, '') = '' LIMIT 1;

			if (ie_urgente_w = 'S') then			
			    select	coalesce(max('N'),'S')
				into STRICT	ie_urgente_w
				from	prescr_material x
				where	x.nr_prescricao	 = nr_prescricao_p
				and		x.nr_seq_substituto	= nr_seq_prescr_w;
			end if;		

		end if;
	
		qt_dispensar_hor_dif_w := null;
	
		select	max(c.ie_operacao),
				max(c.ie_reordenar_fixo),
				max(ds_horarios)
		into STRICT	ie_operacao_interv_w,
				ie_reordena_fixo_w,
				ds_horarios_inter_w
		from	intervalo_prescricao c
		where	c.cd_intervalo = cd_intervalo_w;

		if (ie_gerar_hor_zerado_dd_w = 'S') and (ds_dose_diferenciada_w IS NOT NULL AND ds_dose_diferenciada_w::text <> '') then		
            ds_horarios_padr_w := Obter_horarios_zerados_dd(nr_prescricao_p, nr_seq_prescr_w, dt_ref_inicio_W, ds_horarios_w, hr_prim_horario_w, ds_dose_diferenciada_w);
		end if;
		
		if (ie_operacao_interv_w = 'F') and (ie_reordena_fixo_w = 'S') and (ds_dose_diferenciada_w IS NOT NULL AND ds_dose_diferenciada_w::text <> '') then
			
			ds_horarios_ww	:= ds_horarios_w;

			SELECT * FROM Obter_horario_padrao_dd(dt_ref_inicio_W, ie_operacao_interv_w, ie_reordena_fixo_w, ds_horarios_ww, ds_dose_diferenciada_w) INTO STRICT _ora2pg_r;
 ds_horarios_ww := _ora2pg_r.ds_horario_p; ds_dose_diferenciada_w := _ora2pg_r.ds_dose_dif_p;

            ds_horarios_padr_w	:= ds_horarios_ww;
		end if;

		ie_ctrl_loop_w		:= 0;
		ie_ctrl_loop_ww		:= 0;
		ie_loop_w			:= 0;
		qt_dose_especial_ww	:= qt_dose_especial_w;
		vt_dose_diferenciada_w.delete;

		if (ds_dose_diferenciada_w IS NOT NULL AND ds_dose_diferenciada_w::text <> '') then
			ds_dose_diferenciada_ww	:= ds_dose_diferenciada_w;
			while(ds_dose_diferenciada_ww IS NOT NULL AND ds_dose_diferenciada_ww::text <> '') and (ie_loop_w < 101) LOOP
				begin
				h	:= position('-' in ds_dose_diferenciada_ww);
				if (h > 0) then
					qt_dose_diferenciada_w	:= replace(substr(ds_dose_diferenciada_ww, 1, h-1),'/',',');
					ds_dose_diferenciada_ww	:= substr(ds_dose_diferenciada_ww, h+1, 50);
				else
					qt_dose_diferenciada_w	:= replace(ds_dose_diferenciada_ww,'/',',');
					ds_dose_diferenciada_ww	:= null;
				end if;
				if (coalesce(qt_dose_diferenciada_w,0) > 0) or (ie_gerar_hor_zerado_dd_w = 'S') then
					vt_dose_diferenciada_w[ie_ctrl_loop_w].qt_dose_diferenciada	:= coalesce(qt_dose_diferenciada_w,0);					
					vt_dose_diferenciada_w[ie_ctrl_loop_w].ie_gerar_disp		:= not(coalesce(qt_dose_diferenciada_w,0) > 0);
					ie_ctrl_loop_w							:= ie_ctrl_loop_w + 1;
				end if;
				ie_loop_w	:=  ie_loop_w + 1;
				end;
			end loop;
		end if;

		qt_dia_adic_w	:= 0;

		dt_prescricao_ww	:= dt_prescricao_w;
		if (ie_urgente_w = 'N') and (cd_funcao_origem_w <> 2314) then
			dt_prescricao_ww	:= dt_inicio_prescr_w;
		end if;


		if (qt_dose_especial_w IS NOT NULL AND qt_dose_especial_w::text <> '') then
		
            qt_dose_especial_w	:= obter_conversao_unid_med_cons(cd_material_w,coalesce(cd_unid_med_dose_esp_w,cd_unid_med_dose_w),qt_dose_especial_w);
			
			ie_regra_w := obter_regra_dispensacao(
				cd_estabelecimento_p	=> cd_estabelecimento_w,
				cd_material_p			=> cd_material_w,
				cd_unid_med_dose_p		=> coalesce(cd_unid_med_dose_esp_w, cd_unid_med_dose_w),
				ie_via_aplicacao_p		=> ie_via_aplicacao_w,
				cd_intervalo_p			=> cd_intervalo_w,
				nr_atendimento_p		=> nr_atendimento_w,
				ie_opcao_p				=> 'P',
				nr_prescricao_p			=> nr_prescricao_p,
				nr_sequencia_p			=> nr_seq_prescr_w);
			
			ie_tipo_regra_disp_w := obter_tipo_regra_disp(cd_estabelecimento_w, nr_atendimento_w, nr_prescricao_p, cd_material_w, nr_seq_prescr_w);

			begin
				exec_w := 'begin ger_pres_mat_s_dt_lib_md_pck.obter_tot_disp_dose_espec_md(:1,:2,:3,:4,:5,:6); end;';

				EXECUTE exec_w using in ie_regra_w,
											   in ie_tipo_regra_disp_w,
											   in var_param1132_w,
											   in nr_ocorrencia_w,
											   in out qt_dose_especial_w,
											   in out qt_total_dispensar_w;
			exception
				when others then
					qt_dose_especial_w  := null;
					qt_total_dispensar_w := null;
			end;
			dt_horario_w 		:= pkg_date_utils.get_time(dt_prescricao_w, hr_dose_especial_w, 0);

			/*Fabio e Jonas - 19/01/2010 = Para gerar os lotes como AGORA dependendo do horario final do turno, e nao mais pelo minutos de agora*/

			if (ie_agora_impressao_w = 'S') then
				nr_seq_turno_hor_ag_w	:= Obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,to_char(dt_horario_w,'hh24:mi'),cd_local_estoque_w);

				select	to_char(max(b.hr_inicial),'hh24:mi'),
						to_char(max(b.hr_final),'hh24:mi')
				into STRICT	hr_turno_agora_w,
					hr_final_turno_agora_w
				from	regra_turno_disp_param b,
					regra_turno_disp a
				where	a.nr_sequencia		= b.nr_seq_turno
				and	a.cd_estabelecimento	= cd_estabelecimento_w
				and	a.nr_sequencia		= nr_seq_turno_hor_ag_w
				and (coalesce(b.cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0))	= coalesce(cd_setor_atendimento_w,0));

				select	coalesce(max(qt_min_antes_atend), 0),
					coalesce(max(ie_define_agora), 'N')
				into STRICT	qt_min_antes_atend_w,
					ie_define_agora_w
				from	regra_tempo_disp
				where	cd_estabelecimento	= cd_estabelecimento_w
				and (coalesce(cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0)) = coalesce(cd_setor_atendimento_w,0))
				and	nr_seq_turno = nr_seq_turno_hor_ag_w
				and	ie_situacao = 'A';

				begin
					exec_w := 'call ger_pres_mat_s_dt_lib_md_pck.calcular_dt_limite_agora_md(:1,:2,:3,:4,:5) into :result';

					EXECUTE exec_w using 	in hr_turno_agora_w,
													in hr_final_turno_agora_w,
													in dt_inicio_prescr_w,
													in qt_min_antes_atend_w,
													in dt_horario_w,
													out dt_limite_agora_w;
				exception
				  when others then
					dt_limite_agora_w := null;
				end;
			end if;
			/*Fabio e Jonas - 19/01/2010 = Final da alteracao*/

			select	nextval('prescr_mat_hor_seq')
			into STRICT	nr_sequencia_w
			;

			hr_dose_especial_w	:= replace(hr_dose_especial_w,'A','');
			ie_horario_especial_w	:= 'N';

			if (dt_horario_w < dt_prescricao_w) and (ie_urgente_w = 'N') then
				dt_horario_w	:= dt_horario_w + 1;
			end if;
			
			if (dt_horario_w < dt_prescricao_w) and (ie_urgente_w = 'S') and (pkg_date_utils.extract_field('HOUR', dt_prescricao_w, 0) in (21, 22, 23)) then
				dt_horario_w	:= dt_horario_w + 1;
			end if;
		
			if (dt_suspensao_progr_w > dt_horario_w) or (coalesce(dt_suspensao_progr_w::text, '') = '') then
				
				begin
				  exec_w := 'call ger_pres_mat_s_dt_lib_md_pck.obter_classif_urgente_md(:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13) into :result';

				  EXECUTE exec_w using in 0,
												 in ie_classif_nao_padrao_w,
												 in ie_padronizado_w,
												 in ie_classif_normal_acm_sn_w,
												 in ie_se_necessario_w,
												 in ie_acm_w,
												 in dt_horario_w,
												 in dt_limite_agora_w,
												 in ie_urgente_w,
												 in ie_agora_impressao_w,
												 in ie_define_agora_w, 
												 in qt_min_antes_atend_w,
												 in dt_limite_especial_w,
												 out ie_classif_urgente_w;

				exception
					when others then
					  ie_classif_urgente_w := null;
				end;
							
				/* Dalcastagne em 25/09/2008 OS 107843 */

				if (VarIdentPrescrADEP_w = 'DS') then
					ie_adep_w := ie_rep_adep_w;
				elsif (VarIdentPrescrADEP_w = 'NV') then
					ie_adep_w := 'N';
				elsif (VarIdentPrescrADEP_w = 'SV') then
					ie_adep_w := 'S';
				elsif (VarIdentPrescrADEP_w in ('PV','PNV')) then
					ie_adep_w := ie_adep_param_w;
				end if;

				SELECT * FROM obter_dose_um_horario_pmh(cd_material_w, qt_dose_especial_ww, coalesce(cd_unid_med_dose_esp_w,cd_unid_med_dose_w), qt_dose_hor_w, cd_unid_med_dose_hor_w) INTO STRICT qt_dose_hor_w, cd_unid_med_dose_hor_w;
				
				begin
				dt_suspensao_w		:= null;
				dt_fim_horario_w	:= null;
				if (ie_copia_status_hor_w	= 'S') and (coalesce(dt_suspensao_ww::text, '') = '') then
					select	CASE WHEN max(a.ie_suspenso_adep)='S' THEN max(a.dt_suspensao)  ELSE null END ,
							max(a.dt_fim_horario)
					into STRICT	dt_suspensao_w,
							dt_fim_horario_w
					from	prescr_medica b,
							prescr_mat_hor a
					where	a.nr_prescricao		= b.nr_prescricao
					and	b.nr_atendimento	= nr_atendimento_w
					and	a.ie_agrupador		= ie_agrupador_w
					and	a.dt_horario		= dt_horario_w
					and	a.cd_material		= cd_material_w
					and	a.qt_dose		= qt_dose_especial_ww
					and	a.nr_prescricao		<> nr_prescricao_p
					and	a.cd_unidade_medida_dose	= coalesce(cd_unid_med_dose_esp_w, cd_unid_med_dose_w);
				end if;

				select	count(*)
				into STRICT	qt_hor_w
				from	prescr_mat_hor where		nr_prescricao 	= nr_prescricao_p
				and		nr_seq_material	= nr_seq_prescr_w
				--and		dt_horario	= dt_horario_w;
				and	coalesce(ie_dose_especial,'N') = 'S' LIMIT 1;
				
                if (ie_inf_ras_hor_medi_w = 'S') then
                    ds_alteracao_rastre_w := substr(ds_alteracao_rastre_w || chr(13) ||
                                                    '02 linha:' || $$plsql_line || chr(13) ||
                                                    'nr_prescricao_p: ' || nr_prescricao_p || chr(13) ||
                                                    'nr_seq_prescr_w: ' || nr_seq_prescr_w || chr(13) ||
                                                    'qt_hor_w: ' || qt_hor_w
                                                    , 1, 4000);
                end if;

				if (qt_hor_w = 0) then
					select	count(*)
					into STRICT	qt_hor_w
					from	prescr_medica b,
							prescr_mat_hor x where x.nr_prescricao		= nr_prescricao_p
					and	b.nr_prescricao		= x.nr_prescricao
					and	x.nr_seq_material	= nr_seq_prescr_w
					and	(x.dt_lib_horario IS NOT NULL AND x.dt_lib_horario::text <> '')
					and	(b.dt_liberacao_farmacia IS NOT NULL AND b.dt_liberacao_farmacia::text <> '')
					and	(clock_timestamp() + (x.qt_minutos_agora/1440)) > dt_horario_w
					and	coalesce(x.qt_minutos_agora,0) > 0 LIMIT 1;
				end if;
				
                if (ie_inf_ras_hor_medi_w = 'S') then
                    ds_alteracao_rastre_w := substr(ds_alteracao_rastre_w || chr(13) ||
                                                    '03 linha:' || $$plsql_line || chr(13) ||
                                                    'nr_prescricao_p: ' || nr_prescricao_p || chr(13) ||
                                                    'nr_seq_prescr_w: ' || nr_seq_prescr_w || chr(13) ||
                                                    'qt_hor_w: ' || qt_hor_w
                                                    , 1, 4000);
                end if;
				
				if (qt_hor_w = 0) then
					select 	count(b.nr_sequencia)
					into STRICT	qt_hor_w
					from 	prescr_mat_alteracao a,
							prescr_material b,
							prescr_medica c,
							prescr_mat_hor d
					where 	a.nr_prescricao = b.nr_prescricao
					and		c.nr_prescricao = b.nr_prescricao
					and		d.nr_prescricao = b.nr_prescricao
					and		d.nr_seq_material = b.nr_sequencia
					and		a.nr_seq_horario = d.nr_sequencia
					and		b.nr_prescricao = nr_prescricao_p
					and		b.nr_sequencia = nr_seq_prescr_w
					and 	a.dt_horario_original = dt_horario_w
					and		coalesce(c.cd_funcao_origem,0) = 2314
					and		a.ie_alteracao = 10;
				end if;
				
                if (ie_inf_ras_hor_medi_w = 'S') then
                    ds_alteracao_rastre_w := substr(ds_alteracao_rastre_w || chr(13) ||
                                                    '04 linha:' || $$plsql_line || chr(13) ||
                                                    'nr_prescricao_p: ' || nr_prescricao_p || chr(13) ||
                                                    'nr_seq_prescr_w: ' || nr_seq_prescr_w || chr(13) ||
                                                    'dt_horario_w: '    || PKG_DATE_FORMATERS_TZ.TO_VARCHAR(dt_horario_w,'timestamp',ESTABLISHMENT_TIMEZONE_UTILS.gettimezone) || chr(13) ||
                                                    'qt_hor_w: ' || qt_hor_w
                                                    , 1, 4000);
                end if;

				if (qt_hor_w = 0) then
				
					if (coalesce(nr_seq_kit_w,0) > 0) then
						select	count(*)
						into STRICT	qt_kit_w
						from	prescr_material where	nr_prescricao	= nr_prescricao_p
						and	nr_sequencia	= nr_seq_kit_w LIMIT 1;
						
						if (qt_kit_w = 0) then
							nr_seq_kit_w	:= null;
						end if;
					end if;
					
					ie_situacao_w := '';

					if (ie_operacao_interv_w = 'D') then
						ie_situacao_w := coalesce(Obter_se_horario_valido_inter(dt_horario_w, cd_intervalo_w), 'A');
					else
						ie_situacao_w := coalesce(cpoe_obter_se_hor_dif_val(dt_horario_w, nr_seq_mat_cpoe_w, ie_tipo_item_p), 'A');
					end if;	

                    if (ie_inf_ras_hor_medi_w = 'S') then
                        ds_alteracao_rastre_w := substr(ds_alteracao_rastre_w  || chr(13) ||
                                                        '05 linha:' || $$plsql_line || chr(13) ||
                                                        'Inserindo prescr_mat_hor'
                                                        , 1, 4000);
                    end if;
				
					insert into prescr_mat_hor(
						nr_sequencia,
						nr_seq_digito,
						nr_prescricao,
						nr_seq_material,
						ie_agrupador,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						ds_horario,
						dt_horario,
						qt_dose,
						qt_dispensar,
						cd_unidade_medida,
						cd_unidade_medida_dose,
						cd_material,
						nr_ocorrencia,
						qt_dispensar_hor,
						ie_urgente,
						ie_horario_especial,
						nr_seq_turno,
						ie_aprazado,
						ie_dose_especial,
						ie_controlado,
						ie_padronizado,
						ie_classif_urgente,
						ie_dispensar_farm,
						nr_agrupamento,
						ie_adep,
						qt_horario,
						cd_unid_med_hor,
						cd_motivo_baixa,
						nr_seq_superior,
						dt_suspensao,
						dt_fim_horario,
						nm_usuario_susp,
						nr_atendimento,
						cd_local_estoque_baixa,
						ie_situacao
						)
					values (	nr_sequencia_w,
						calcula_digito('MODULO11',nr_sequencia_w),
						nr_prescricao_p,
						nr_seq_prescr_w,
						ie_agrupador_w,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						hr_dose_especial_w,
						dt_horario_w,
						qt_dose_especial_ww,
						qt_dose_especial_w,
						cd_unidade_medida_w,
						coalesce(cd_unid_med_dose_esp_w, cd_unid_med_dose_w),
						cd_material_w,
						1,
						CASE WHEN cd_motivo_baixa_w=0 THEN  qt_dose_especial_w  ELSE 0 END ,
						ie_urgente_w,
						coalesce(ie_horario_especial_w,'N'),
						Obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,hr_dose_especial_w,cd_local_estoque_w),
						'N',
						'S',
						ie_controlado_w,
						ie_padronizado_w,
						ie_classif_urgente_w,
						ie_regra_disp_w,
						nr_agrupamento_w,
						ie_adep_w,
						qt_dose_hor_w,
						cd_unid_med_dose_hor_w,
						cd_motivo_baixa_w,
						nr_seq_kit_w,
						coalesce(dt_suspensao_ww,dt_suspensao_w),
						dt_fim_horario_w,
						nm_usuario_susp_w,
						nr_atendimento_w,
						cd_local_estoque_baixa_w,
						ie_situacao_w
						);
					/*if	(ie_lib_individual_w = 'S') and
						(ie_liberacao_p = 'S') then						
						Gerar_Gedi_Medic_atend(cd_estabelecimento_w, nr_prescricao_p, nr_seq_prescr_w, nr_sequencia_w, nm_usuario_p);
					end if;	 */
					
				end if;
				exception when others then
					CALL gerar_log_prescricao(nr_prescricao_p, nr_seq_prescr_w, ie_agrupador_w, null, null, substr(sqlerrm,1,2000), nm_usuario_p, 17039, 'S');
					sqlerrm_w	:= substr(sqlerrm,1,2000);
				end;				
			end if;	

			open C03;
			loop
			fetch C03 into
				ie_agrupador_dil_w,
				nr_sequencia_dil_w,
				qt_dose_dil_w,
				qt_total_disp_dil_w,
				cd_unidade_medida_dil_w,
				cd_unid_med_dose_dil_w,
				nr_ocorrencia_dil_w,
				cd_material_dil_w,
				ie_se_necessario_dil_w,
				ie_acm_dil_w,
				ie_controlado_dil_w,
				ie_padronizado_dil_w,
				ie_regra_disp_dil_w,
				nr_agrupamento_dil_w,
				cd_protocolo_dil_w,
				cd_local_estoque_dil_w,
				cd_motivo_baixa_dil_w,
				qt_unitaria_dil_w,
				dt_suspensao_progr_w,
				dt_suspensao_dil_w,
				nm_usuario_susp_dil_w,
				nr_seq_diluicao_w;
			EXIT WHEN NOT FOUND; /* apply on C03 */
				
				CALL gravar_log_tasy(10007,
				substr('Gerar_prescr_mat_sem_dt_lib C03 LOG:'  ||
				' nr_prescricao_p:' || nr_prescricao_p ||
				' ie_agrupador_dil_w:' || ie_agrupador_dil_w ||
				' nr_sequencia_dil_w:' || nr_sequencia_dil_w ||
				' qt_dose_dil_w:' || qt_dose_dil_w ||
				' qt_total_disp_dil_w:' || qt_total_disp_dil_w ||
				' cd_unidade_medida_dil_w:' || cd_unidade_medida_dil_w ||
				' cd_unid_med_dose_dil_w:' || cd_unid_med_dose_dil_w ||
				' nr_ocorrencia_dil_w:' || nr_ocorrencia_dil_w ||
				' cd_material_dil_w:' || cd_material_dil_w ||
				' ie_se_necessario_dil_w:' || ie_se_necessario_dil_w ||
				' ie_acm_dil_w:' || ie_acm_dil_w ||
				' ie_controlado_dil_w:' || ie_controlado_dil_w ||
				' ie_padronizado_dil_w:' || ie_padronizado_dil_w ||
				' ie_regra_disp_dil_w:' || ie_regra_disp_dil_w ||
				' nr_agrupamento_dil_w:' || nr_agrupamento_dil_w ||
				' cd_protocolo_dil_w:' || cd_protocolo_dil_w ||
				' cd_local_estoque_dil_w:' || cd_local_estoque_dil_w ||
				' cd_motivo_baixa_dil_w:' || cd_motivo_baixa_dil_w ||
				' qt_unitaria_dil_w:' || qt_unitaria_dil_w ||
				' dt_suspensao_progr_w:' || dt_suspensao_progr_w ||
				' dt_suspensao_dil_w:' || dt_suspensao_dil_w ||
				' nm_usuario_susp_dil_w:' || nm_usuario_susp_dil_w ||
				' nr_seq_diluicao_w:' || nr_seq_diluicao_w ,1,2000),nm_usuario_p);
				
				select	nextval('prescr_mat_hor_seq')
				into STRICT	nr_sequencia_w
				;

				/* Rafael em 07/10/2006 Identificar horarios especiais */

				if (ie_se_necessario_dil_w = 'S') or (ie_acm_dil_w = 'S') then
					ie_horario_especial_w	:= 'S';
				else
					ie_horario_especial_w	:= 'N';
				end if;
				
        --- Inicio MD8
        begin
          EXEC_w := 'CALL GER_PRES_MAT_S_DT_LIB_MD_PCK.OBTER_CLASSIF_URGENTE_MD(:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13) INTO :RESULT';

          EXECUTE EXEC_w USING IN 0,
                                         IN ie_classif_nao_padrao_w,
                                         IN ie_padronizado_dil_w,
                                         IN ie_classif_normal_acm_sn_w,
                                         IN ie_se_necessario_dil_w,
                                         IN ie_acm_dil_w,
                                         IN dt_horario_w,
                                         IN dt_limite_agora_w,
                                         IN ie_urgente_w,
                                         IN ie_agora_impressao_w,
                                         IN ie_define_agora_w, 
                                         IN qt_min_antes_atend_w,
                                         IN dt_limite_especial_w,
                                         OUT ie_classif_urgente_w;

        exception
            when others then
              ie_classif_urgente_w := null;
        end;
        --- Fim MD8
				if (dt_suspensao_progr_w > dt_horario_w) or (coalesce(dt_suspensao_progr_w::text, '') = '') then
				
				  begin
					EXEC_w := 'BEGIN GER_PRES_MAT_S_DT_LIB_MD_PCK.OBTER_OCORR_UNIT_DISP_MD(:1,:2,:3,:4,:5,:6); END;';

					EXECUTE EXEC_w USING IN qt_dose_especial_w,
												   IN ie_agrupador_dil_w,
												   IN qt_total_disp_dil_w,        
												   IN OUT nr_ocorrencia_dil_w,
												   IN OUT qt_unitaria_dil_w,
												   IN OUT qt_dispensar_hor_w;

				  exception
					  when others then
						nr_ocorrencia_dil_w := null;
						qt_unitaria_dil_w   := null;
						qt_dispensar_hor_w  := null;
				  end;


    			begin
					
					dt_suspensao_w		:= null;
					dt_fim_horario_w	:= null;

					if (ie_copia_status_hor_w	= 'S') and (coalesce(dt_suspensao_dil_w::text, '') = '') then
						select	CASE WHEN max(a.ie_suspenso_adep)='S' THEN max(a.dt_suspensao)  ELSE null END ,
								max(a.dt_fim_horario)
						into STRICT	dt_suspensao_w,
								dt_fim_horario_w
						from	prescr_medica b,
							prescr_mat_hor a
						where	a.nr_prescricao		= b.nr_prescricao
						and	b.nr_atendimento	= nr_atendimento_w
						and	a.ie_agrupador		= ie_agrupador_dil_w
						and	a.dt_horario		= dt_horario_w
						and	a.cd_material		= cd_material_dil_w
						and	a.qt_dose		= qt_dose_dil_w
						and	a.nr_prescricao		<> nr_prescricao_p
						and	a.cd_unidade_medida_dose	= cd_unid_med_dose_dil_w;
					end if;					

					select	count(*)
					into STRICT	qt_hor_w
					from	prescr_mat_hor where nr_prescricao 	= nr_prescricao_p
					and	nr_seq_material	= nr_sequencia_dil_w
					--and		dt_horario	= dt_horario_w;
					and	coalesce(ie_dose_especial,'N') = 'S' LIMIT 1;
					
					if (qt_hor_w = 0) then
						select	count(*)
						into STRICT	qt_hor_w
						from	prescr_medica b,
							prescr_mat_hor x where 	x.nr_prescricao		= nr_prescricao_p
						and	b.nr_prescricao		= x.nr_prescricao
						and	x.nr_seq_material	= nr_sequencia_dil_w
						and	(x.dt_lib_horario IS NOT NULL AND x.dt_lib_horario::text <> '')
						and	(b.dt_liberacao_farmacia IS NOT NULL AND b.dt_liberacao_farmacia::text <> '')
						and	(clock_timestamp() + (x.qt_minutos_agora/1440)) > dt_horario_w
						and	coalesce(x.qt_minutos_agora,0) > 0 LIMIT 1;
					end if;

					if (qt_hor_w = 0) then
					
						insert into prescr_mat_hor(
							nr_sequencia,
							nr_seq_digito,
							nr_prescricao,
							nr_seq_material,
							ie_agrupador,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							ds_horario,
							dt_horario,
							qt_dose,
							qt_dispensar,
							cd_unidade_medida,
							cd_unidade_medida_dose,
							cd_material,
							nr_ocorrencia,
							qt_dispensar_hor,
							ie_urgente,
							ie_horario_especial,
							nr_seq_turno,
							ie_aprazado,
							ie_controlado,
							ie_padronizado,
							ie_classif_urgente,
							ie_dispensar_farm,
							nr_seq_superior,
							nr_agrupamento,
							ie_adep,
							qt_horario,
							cd_unid_med_hor,
							cd_motivo_baixa,
							dt_suspensao,
							dt_fim_horario,
							nm_usuario_susp,
							nr_atendimento,
							cd_local_estoque_baixa,
							ie_dose_especial
							)
						values (	nr_sequencia_w,
							calcula_digito('MODULO11',nr_sequencia_w),
							nr_prescricao_p,
							nr_sequencia_dil_w,
							ie_agrupador_dil_w,
							clock_timestamp(),	
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							to_char(dt_horario_w,'hh24:mi'),
							dt_horario_w,
							qt_dose_dil_w,
							CASE WHEN cd_motivo_baixa_dil_w=0 THEN  qt_dispensar_hor_w  ELSE 0 END ,
							cd_unidade_medida_dil_w,
							cd_unid_med_dose_dil_w,
							cd_material_dil_w,
							nr_ocorrencia_dil_w,
							CASE WHEN cd_motivo_baixa_dil_w=0 THEN  qt_dispensar_hor_w  ELSE 0 END ,
							ie_urgente_w,
							coalesce(ie_horario_especial_w,'N'),
							Obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,hr_dose_especial_w,cd_local_estoque_dil_w),
							'N',
							ie_controlado_dil_w,
							ie_padronizado_dil_w,
							ie_classif_urgente_w,
							ie_regra_disp_dil_w,
							nr_seq_prescr_w,
							nr_agrupamento_w,
							ie_adep_w,
							qt_dose_hor_w,
							cd_unid_med_dose_hor_w,
							cd_motivo_baixa_dil_w,
							coalesce(dt_suspensao_dil_w,dt_suspensao_w),
							dt_fim_horario_w,
							nm_usuario_susp_dil_w,
							nr_atendimento_w,
							cd_local_estoque_baixa_w,
							coalesce(ie_dose_especial_w,'S'));
					
					end if;	
					
					exception when others then
						CALL gerar_log_prescricao(nr_prescricao_p, nr_sequencia_dil_w, null, null, null, substr(sqlerrm,1,2000), nm_usuario_p, 17039, 'S');
						sqlerrm_w	:= substr(sqlerrm,1,2000);
					end;
				end if;	
			end loop;
			close C03;	
		end if;
        
		qt_solucao_w	:= 0;
		/*Verificar se gerar horario para kit de uma solucao.*/

		if (coalesce(nr_seq_kit_w,0) <> 0)
			and (nr_seq_recomendacao_w = 0)	then

			qt_solucao_w	:= obter_inform_solucao(nr_prescricao_p,nr_seq_kit_w,ie_horario_acm_w,ie_horario_sn_w,'Q');

			if (qt_solucao_w = 0) then
				
				select  coalesce(max('S'),'N')
				into STRICT	ie_mat_solucao_w
				from	prescr_material a where		a.nr_prescricao = nr_prescricao_p
				and		a.nr_sequencia  = nr_seq_kit_w
				and		(a.nr_sequencia_solucao IS NOT NULL AND a.nr_sequencia_solucao::text <> '') LIMIT 1;
				
				if (ie_mat_solucao_w = 'S') then
	   			    ds_horarios_ww	:= obter_inform_solucao(nr_prescricao_p,nr_seq_kit_w,ie_horario_acm_w,ie_horario_sn_w,'H');
					if (ds_horarios_ww <> ' ') then
						ds_horarios_padr_w	:= eliminar_horarios_vigencia(ds_horarios_ww,null, dt_inicio_prescr_w, dt_inicio_prescr_w, 0, 0, nr_prescricao_p);
					end if;
				end if;
			
			end if;
		end if;
		
		if (ie_componente_composto_w = 'S') and (cd_funcao_origem_w <> 2314) then
			ds_horarios_padr_w	:= ds_horarios_padr_comp_w;
			
			if	((coalesce(ds_horarios_padr_w::text, '') = '') and (nr_seq_item_p IS NOT NULL AND nr_seq_item_p::text <> '')) then
						
			    select	max(ds_horarios)	
    			into STRICT	ds_horarios_padr_w
				from	prescr_material
				where	nr_prescricao	= nr_prescricao_p
				and		nr_sequencia	< nr_seq_item_p
				and		nr_agrupamento	= nr_agrupamento_w
				and		ie_agrupador	= 1
				and		coalesce(dt_suspensao::text, '') = '';	
				
			end if;
			
		end if;

		if (ds_horarios_padr_w IS NOT NULL AND ds_horarios_padr_w::text <> '') then
			ds_horarios_padr_comp_w	:= ds_horarios_padr_w;
			while	(ds_horarios_padr_w IS NOT NULL AND ds_horarios_padr_w::text <> '') LOOP
				k	:= position(' ' in ds_horarios_padr_w);

				if (k > 1) and ((substr(ds_horarios_padr_w, 1, k -1) IS NOT NULL AND (substr(ds_horarios_padr_w, 1, k -1))::text <> '')) then
					ds_hora_w		:= substr(ds_horarios_padr_w, 1, k-1);
					ds_hora_w		:= replace(ds_hora_w, ' ','');
					ds_horarios_padr_w	:= substr(ds_horarios_padr_w, k + 1, 2000);
				elsif (ds_horarios_padr_w IS NOT NULL AND ds_horarios_padr_w::text <> '') then
					ds_hora_w 		:= replace(ds_horarios_padr_w,' ','');
					ds_horarios_padr_w	:= '';
				end if;

				if	((ie_urgente_w = 'N') or (cd_funcao_origem_w = 2314) or
					 (ie_agora_especial_w	= 'S' AND ie_dose_espec_agora_w = 'S')) then

					if (position('A' in ds_hora_w) > 0) and (qt_dia_adic_w = 0) then
						qt_dia_adic_w	:= 1;
					elsif (position('AA' in ds_hora_w) > 0)  then
						qt_dia_adic_w	:= qt_dia_adic_w + 1;
					end if;
				end if;

				ds_hora_w	:= replace(ds_hora_w,'A','');
				ds_hora_w	:= replace(ds_hora_w,'A','');

				dt_inicio_horario_w	:= null;
				
				if (ie_urgente_w	= 'S')  and
					(not (ie_agora_especial_w	= 'S' AND ie_dose_espec_agora_w	= 'S'))then
					dt_libe_w	:= dt_liberacao_w;
					if (ie_momento_lote_w = 'F') and (dt_liberacao_farmacia_w IS NOT NULL AND dt_liberacao_farmacia_w::text <> '') then
						select	max(dt_liberacao)
						into STRICT	dt_libe_w
						from	prescr_medica
						where	nr_prescricao	= nr_prescricao_p;
					elsif (ie_momento_lote_w = 'M') and (dt_liberacao_medico_w IS NOT NULL AND dt_liberacao_medico_w::text <> '') then
						dt_liberacao_w	:= dt_liberacao_medico_w;
					end if;
					dt_prescricao_ww	:= coalesce(dt_libe_w,dt_prescricao_ww);
				else
					dt_prescricao_ww	:= coalesce(dt_inicio_prescr_w,dt_prescricao_w);
					
					/*SO-2220426*/

					if	((cd_funcao_origem_w = 2314) and (coalesce(qt_dia_adic_w,0) = 1) and (dt_inicio_medic_w IS NOT NULL AND dt_inicio_medic_w::text <> '') and (ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_inicio_medic_w) > ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_prescricao_ww))) then
						dt_inicio_horario_w	:= dt_inicio_medic_w;
					else
						dt_inicio_horario_w	:= dt_prescricao_ww + qt_dia_adic_w;
					end if;
				end if;
				
				dt_horario_w	:= pkg_date_utils.get_time(coalesce(dt_inicio_horario_w,dt_prescricao_ww + qt_dia_adic_w), replace(ds_hora_w,'A',''), 0);

				select	nextval('prescr_mat_hor_seq')
				into STRICT	nr_sequencia_w
				;
				
				if (nr_seq_kit_w IS NOT NULL AND nr_seq_kit_w::text <> '') then
					select	max(nr_sequencia_solucao)
					into STRICT	nr_seq_sol_w
					from	prescr_material
					where	nr_prescricao = nr_prescricao_p
					and		nr_sequencia = nr_seq_kit_w;
				end if;

				/* Rafael em 07/10/2006 Identificar horarios especiais */

				if	((ie_se_necessario_w = 'S') or (ie_acm_w = 'S')) and
					((coalesce(nr_seq_kit_w::text, '') = '') or (nr_seq_sol_w IS NOT NULL AND nr_seq_sol_w::text <> '')) then
					ie_horario_especial_w	:= 'S';
				else
					ie_horario_especial_w	:= 'N';
				end if;

        ds_hor_valido_inter1_w := coalesce(Obter_se_horario_valido_inter(dt_horario_w, cd_intervalo_w), 'A');
        ds_hor_valido_inter2_w := coalesce(Obter_se_horario_valido_inter(dt_horario_w + 1, cd_intervalo_w), 'A');

        --- Inicio MD10
        begin
          EXEC_w := 'CALL GER_PRES_MAT_S_DT_LIB_MD_PCK.OBTER_DT_HORARIO_MD(:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13, :14) INTO :RESULT';

          EXECUTE EXEC_w USING IN dt_horario_w,
                                         IN dt_prescricao_ww,
                                         IN ie_urgente_w,
                                         IN ie_agora_especial_w,
                                         IN ie_dose_espec_agora_w,
                                         IN ie_operacao_interv_w,
                                         IN ds_horarios_inter_w, 
                                         IN nr_ocorrencia_w,
                                         IN ds_hor_valido_inter1_w, 
                                         IN ds_hor_valido_inter2_w, 
                                         IN dt_inicio_prescr_w,
                                         IN dt_validade_prescr_w,
                                         IN nr_horas_validade_w,
										 IN dt_prescricao_w,
                                         OUT dt_horario_w;

        exception
            when others then
              dt_horario_w := null;
        end;
				--- Fim MD10
				
				if (ie_agora_impressao_w = 'S') then
					nr_seq_turno_hor_ag_w	:= Obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,to_char(dt_horario_w,'hh24:mi'),cd_local_estoque_w);
					select	max(to_char(b.hr_inicial,'hh24:mi')),
						max(to_char(b.hr_final,'hh24:mi'))
					into STRICT	hr_turno_agora_w,
						hr_final_turno_agora_w
					from	regra_turno_disp_param b,
						regra_turno_disp a
					where	a.nr_sequencia		= b.nr_seq_turno
					and	a.cd_estabelecimento	= cd_estabelecimento_w
					and	a.nr_sequencia		= nr_seq_turno_hor_ag_w
					and (coalesce(b.cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0))	= coalesce(cd_setor_atendimento_w,0));

					select	coalesce(max(qt_min_antes_atend), 0),
						coalesce(max(ie_define_agora), 'N')
					into STRICT	qt_min_antes_atend_w,
						ie_define_agora_w
					from	regra_tempo_disp
					where	cd_estabelecimento	= cd_estabelecimento_w
					and (coalesce(cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0)) = coalesce(cd_setor_atendimento_w,0))
					and	nr_seq_turno = nr_seq_turno_hor_ag_w
					and	ie_situacao = 'A';
					
					/*SO-2214423*/

					begin
					EXEC_W := 'CALL GER_PRES_MAT_S_DT_LIB_MD_PCK.CALCULAR_DT_LIMITE_AGORA_MD(:1,:2,:3,:4,:5) INTO :RESULT';

					EXECUTE EXEC_W USING IN hr_turno_agora_w,
												   IN hr_final_turno_agora_w,
												   IN dt_inicio_prescr_w,
												   IN qt_min_antes_atend_w,
												   IN dt_horario_w,
												   OUT dt_limite_agora_w;
					exception
					when others then
					  dt_limite_agora_w := null;
					end;
				end if;
				
				if (dt_suspensao_progr_w > dt_horario_w) or (coalesce(dt_suspensao_progr_w::text, '') = '') then				
				
					begin
					EXEC_w := 'CALL GER_PRES_MAT_S_DT_LIB_MD_PCK.OBTER_CLASSIF_URGENTE_MD(:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13) INTO :RESULT';

					EXECUTE EXEC_w USING IN 0,
												   IN ie_classif_nao_padrao_w,
												   IN ie_padronizado_w,
												   IN ie_classif_normal_acm_sn_w,
												   IN ie_se_necessario_w,
												   IN ie_acm_w,
												   IN dt_horario_w,
												   IN dt_limite_agora_w,
												   IN ie_urgente_w,
												   IN ie_agora_impressao_w,
												   IN ie_define_agora_w, 
												   IN qt_min_antes_atend_w,
												   IN dt_limite_especial_w,
												   OUT ie_classif_urgente_w;

					exception
					  when others then
						ie_classif_urgente_w := null;
					end;
					
					/* Dalcastagne em 25/09/2008 OS 107843 */

					if (VarIdentPrescrADEP_w = 'DS') then
						ie_adep_w := ie_rep_adep_w;
					elsif (VarIdentPrescrADEP_w = 'NV') then
						ie_adep_w := 'N';
					elsif (VarIdentPrescrADEP_w = 'SV') then
						ie_adep_w := 'S';
					elsif (VarIdentPrescrADEP_w = 'PV') or (VarIdentPrescrADEP_w = 'PNV') then
						ie_adep_w := ie_adep_param_w;
					end if;

					if (vt_dose_diferenciada_w.count > 0) and (vt_dose_diferenciada_w.exists(ie_ctrl_loop_ww)) then
						vt_dose_diferenciada_existe_w := 'S';
						vt_qt_dose_diferenciada_ww    := vt_dose_diferenciada_w[ie_ctrl_loop_ww].qt_dose_diferenciada;
					else
						vt_dose_diferenciada_existe_w := 'N';
						vt_qt_dose_diferenciada_ww    := null;
					end if;

					if (vt_dose_diferenciada_w.count > 0) and (vt_dose_diferenciada_w[ie_ctrl_loop_ww].ie_gerar_disp) then
						vt_ie_gerar_disp_w := 'S';
					else
						vt_ie_gerar_disp_w := 'N';
					end if;

					begin
						select coalesce(a.cd_unidade_medida_consumo, b.cd_unidade_medida_consumo)
						into STRICT  cd_unid_med_cons_w
						from	material_estab a,
							  material b
						where	b.cd_material	= a.cd_material
						and	  a.cd_material	= cd_material_w
						and  	a.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento;
					exception
						when others then
							begin
								select cd_unidade_medida_consumo
								into STRICT	 cd_unid_med_cons_w
								from	 material
								where	 cd_material = cd_material_w;
							exception
								when others then
									null;
							end;
					end;

					begin
						select coalesce(max(qt_conversao),0)
						into STRICT	 qt_conversao_und_ori_w
						from	 material_conversao_unidade
						where	 upper(cd_unidade_medida) = upper(cd_unid_med_dose_w)
						and		 cd_material = cd_material_w;
					exception
						when others then
							qt_conversao_und_ori_w := null;
					end;

					begin
					select coalesce(max(qt_conversao),0)
					into STRICT   qt_conversao_und_dest_w
					from   material_conversao_unidade
					where  upper(cd_unidade_medida) = upper(cd_unidade_medida_w)
					and	   cd_material = cd_material_w;
					exception
					when others then
						qt_conversao_und_dest_w := null;
					end;
					-- fim dados para dose convertivda MD --------------------------------------
					--- Inicio MD12
					begin
					exec_w := 'begin ger_pres_mat_s_dt_lib_md_pck.obter_disp_dose_ds_horario_md(:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13,:14,:15,:16,:17,:18,:19); end;';

					EXECUTE exec_w using in 0,
												   in ds_dose_diferenciada_w,
												   in vt_dose_diferenciada_w.count,
												   in vt_dose_diferenciada_existe_w,
												   in vt_qt_dose_diferenciada_ww, 
												   in vt_ie_gerar_disp_w,
												   in ie_regra_disp_w,
												   in cd_unid_med_dose_w,
												   in cd_unidade_medida_w,
												   in cd_unid_med_cons_w,
												   in qt_conversao_und_ori_w,
												   in qt_conversao_und_dest_w,
												   in qt_total_dispensar_w,
												   in nr_ocorrencia_w,                                                                                        
												   out ie_gerar_dispensacao_w,
												   in out qt_dispensar_hor_w,
												   in out qt_dose_w,
												   in out ds_horarios_padr_w,
												   out qt_dispensar_hor_dif_w;

					exception
					  when others then
						ie_gerar_dispensacao_w  := null;
						qt_dispensar_hor_w      := null;
						qt_dose_w               := null;
						ds_horarios_padr_w      := null;
						qt_dispensar_hor_dif_w  := null;
					end;
          --- Fim MD12
					
					SELECT * FROM obter_dose_um_horario_pmh(cd_material_w, qt_dose_w, cd_unid_med_dose_w, qt_dose_hor_w, cd_unid_med_dose_hor_w) INTO STRICT qt_dose_hor_w, cd_unid_med_dose_hor_w;

					begin
					
					dt_suspensao_w		:= null;
					dt_fim_horario_w	:= null;
					if (ie_copia_status_hor_w	= 'S') and (coalesce(dt_suspensao_ww::text, '') = '') then
						select	CASE WHEN max(a.ie_suspenso_adep)='S' THEN max(a.dt_suspensao)  ELSE null END ,
								max(a.dt_fim_horario)
						into STRICT	dt_suspensao_w,
								dt_fim_horario_w
						from	prescr_medica b,
								prescr_mat_hor a
						where	a.nr_prescricao		= b.nr_prescricao
						and	b.nr_atendimento	= nr_atendimento_w
						and	a.ie_agrupador		= ie_agrupador_w
						and	a.dt_horario		= dt_horario_w
						and	a.cd_material		= cd_material_w
						and	a.qt_dose		= qt_dose_w
						and	a.nr_prescricao		<> nr_prescricao_p
						and	a.cd_unidade_medida_dose	= cd_unid_med_dose_w;
					end if;
					
					if (ie_gerar_dispensacao_w = 'N') then
						ie_horario_especial_w	:= 'S';
					else
						ie_horario_especial_w	:= coalesce(ie_horario_especial_w,'N');
					end if;
					
					select	count(*)
					into STRICT	qt_hor_w
					from	prescr_mat_hor where 	nr_prescricao 	= nr_prescricao_p
					and	nr_seq_material	= nr_seq_prescr_w
					and	dt_horario	= dt_horario_w
					and 	coalesce(ie_horario_especial,'N') = ie_horario_especial_w LIMIT 1;
					
                    if (ie_inf_ras_hor_medi_w = 'S') then
                        ds_alteracao_rastre_w := substr( ds_alteracao_rastre_w  || chr(13) ||
                                                        '06 Linha:' || $$plsql_line || chr(13) ||
                                                        'nr_prescricao_p:' || nr_prescricao_p || chr(13) ||
                                                        'nr_seq_prescr_w:' || nr_seq_prescr_w || chr(13) ||
                                                        'dt_horario_w: ' || to_char(dt_horario_w, 'dd/mm/yyyy hh24:mi:ss') || chr(13) ||
                                                        'ie_horario_especial_w: ' || ie_horario_especial_w || chr(13) ||   
                                                        'qt_hor_w: ' || qt_hor_w
                                                        , 1, 4000);
                    end if;

					if (qt_hor_w = 0) then
						select	count(*)
						into STRICT	qt_hor_w
						from	prescr_medica b,
								prescr_mat_hor x where 	x.nr_prescricao		= nr_prescricao_p
						and		b.nr_prescricao		= x.nr_prescricao
						and		x.nr_seq_material	= nr_seq_prescr_w
						and		(x.dt_lib_horario IS NOT NULL AND x.dt_lib_horario::text <> '')
						and		(b.dt_liberacao_farmacia IS NOT NULL AND b.dt_liberacao_farmacia::text <> '')
						and		(clock_timestamp() + (x.qt_minutos_agora/1440)) > dt_horario_w
						and		coalesce(x.qt_minutos_agora,0) > 0
						and 	coalesce(ie_horario_especial,'N') = ie_horario_especial_w LIMIT 1;
						
                        if (ie_inf_ras_hor_medi_w = 'S') then
                            ds_alteracao_rastre_w := substr( ds_alteracao_rastre_w  || chr(13) ||
                                                            '07 Linha:' || $$plsql_line || chr(13) ||
                                                            'nr_prescricao_p:' || nr_prescricao_p || chr(13) ||
                                                            'nr_seq_prescr_w:' || nr_seq_prescr_w || chr(13) ||
                                                            'dt_horario_w: '   || PKG_DATE_FORMATERS_TZ.TO_VARCHAR(dt_horario_w,'timestamp',ESTABLISHMENT_TIMEZONE_UTILS.gettimezone) || chr(13) ||
                                                            'ie_horario_especial_w: ' || ie_horario_especial_w || chr(13) ||
                                                            'qt_hor_w: ' || qt_hor_w
                                                            , 1, 4000);
                        end if;  						

						if (qt_hor_w	= 0) and (coalesce(cd_funcao_origem_w,0) = 950) then

							nr_prescricao_original_w	:= PLT_obter_item_orig(nr_prescricao_p, nr_seq_prescr_w, 'PRESCR_MATERIAL','P');
							nr_seq_anterior_w		:= PLT_obter_item_orig(nr_prescricao_p, nr_seq_prescr_w, 'PRESCR_MATERIAL','S');
							
							select	count(*)
							into STRICT	qt_hor_w
							from	prescr_medica a,
								prescr_material b,
								prescr_mat_hor c where 	a.nr_prescricao			= b.nr_prescricao
							and	a.nr_prescricao			= c.nr_prescricao
							and	b.nr_prescricao			= c.nr_prescricao
							and	b.nr_sequencia			= c.nr_seq_material
							and	a.nr_atendimento		= nr_atendimento_w
							and	coalesce(b.nr_prescricao_original,b.nr_prescricao)	= nr_prescricao_original_w
							and	coalesce(b.nr_seq_anterior,b.nr_sequencia)		= nr_seq_anterior_w
							and	c.dt_horario			= dt_horario_w
							and	coalesce(c.dt_suspensao::text, '') = ''
							and	coalesce(b.dt_suspensao::text, '') = ''
							and 	coalesce(c.ie_horario_especial,'N')	= ie_horario_especial_w
							and	(c.dt_lib_horario IS NOT NULL AND c.dt_lib_horario::text <> '')
							and	((a.dt_rep_pt	= dt_rep_pt_w - 1) or (coalesce(a.dt_rep_pt2,clock_timestamp())	= coalesce(dt_rep_pt2_w - 1,clock_timestamp())))
							and	coalesce(c.ie_situacao,'A')	<> 'I'
							and	coalesce(a.cd_funcao_origem,924)	= 950 LIMIT 1;

                            if (ie_inf_ras_hor_medi_w = 'S') then
                                ds_alteracao_rastre_w := substr( ds_alteracao_rastre_w  || chr(13) ||
                                                                '08 Linha:' || $$plsql_line || chr(13) ||
                                                                'nr_atendimento_w:' || nr_atendimento_w || chr(13) ||
                                                                'nr_prescricao_original_w:' || nr_prescricao_original_w || chr(13) ||
                                                                'nr_seq_anterior_w:' || nr_seq_anterior_w || chr(13) ||
                                                                'dt_horario_w: ' || PKG_DATE_FORMATERS_TZ.TO_VARCHAR(dt_horario_w,'timestamp',ESTABLISHMENT_TIMEZONE_UTILS.gettimezone) || chr(13) ||
                                                                'ie_horario_especial_w: ' || ie_horario_especial_w || chr(13) ||   
                                                                'dt_rep_pt_w: ' || PKG_DATE_FORMATERS_TZ.TO_VARCHAR(dt_rep_pt_w,'timestamp',ESTABLISHMENT_TIMEZONE_UTILS.gettimezone) || chr(13) ||                                                    
                                                                'dt_rep_pt2_w: ' || PKG_DATE_FORMATERS_TZ.TO_VARCHAR(coalesce(dt_rep_pt2_w,clock_timestamp()),'timestamp',ESTABLISHMENT_TIMEZONE_UTILS.gettimezone) || chr(13) ||                                                    
                                                                'qt_hor_w: ' || qt_hor_w
                                                                , 1, 4000);
                            end if;

							if (qt_hor_w = 0) then
							
								select	coalesce(max(qt_operacao),0)
								into STRICT	qt_operacao_w
								from 	prescr_material a,
										intervalo_prescricao b
								where	a.nr_prescricao	= nr_prescricao_p
								and		a.nr_sequencia 	= nr_seq_prescr_w
								and		a.cd_intervalo 	= b.cd_intervalo;
								
								if (qt_operacao_w in (1,24)) then
									
									if	(qt_hor_ant_w > 0 AND nr_seq_prescr_ant_w = nr_seq_prescr_w) then
								
										/*if	(to_char(dt_horario_w,'mi') = '00') then
											ds_horarios_w2			:= to_char(dt_horario_w,'hh24');
										else
											ds_horarios_w2			:= to_char(dt_horario_w,'hh24:mi');
										end if;
										
										update	prescr_material
										set 	ds_horarios   = ds_horarios_w2									
										where	nr_prescricao = nr_prescricao_p
										and		nr_sequencia  = nr_seq_prescr_w;*/
										
										if (cd_unidade_medida_w = cd_unid_med_dose_w) then
											qt_total_dispensar_w := qt_dose_w;
											nr_ocorrencia_w := 1;
										end if;
									end if;
									
								end if;
								
							end if;
							
						end if;
						
					end if;

					qt_hor_ant_w := qt_hor_w;
					nr_seq_prescr_ant_w := nr_seq_prescr_w;
					
					ie_situacao_w := '';

					if (ie_operacao_interv_w = 'D') then
						ie_situacao_w := coalesce(Obter_se_horario_valido_inter(dt_horario_w, cd_intervalo_w), 'A');
					else
						ie_situacao_w := coalesce(cpoe_obter_se_hor_dif_val(dt_horario_w, nr_seq_mat_cpoe_w, ie_tipo_item_p), 'A');
					end if;	

                    if (ie_inf_ras_hor_medi_w = 'S') then
                        ds_alteracao_rastre_w := substr( ds_alteracao_rastre_w  || chr(13) ||
                                                        '09 Linha:' || $$plsql_line || chr(13) ||
                                                        'qt_hor_w: ' || qt_hor_w
                                                        , 1, 4000);
                    end if;

					if (qt_hor_w = 0) then
						select 	count(b.nr_sequencia)
						into STRICT	qt_hor_w
						from 	prescr_mat_alteracao a,
								prescr_material b,
								prescr_medica c,
								prescr_mat_hor d
						where 	a.nr_prescricao = b.nr_prescricao
						and		c.nr_prescricao = b.nr_prescricao
						and		d.nr_prescricao = b.nr_prescricao
						and		d.nr_seq_material = b.nr_sequencia
						and		a.nr_seq_horario = d.nr_sequencia
						and		b.nr_prescricao = nr_prescricao_p
						and		b.nr_sequencia = nr_seq_prescr_w
						and 	a.dt_horario_original = dt_horario_w
						and		coalesce(c.cd_funcao_origem,0) = 2314
						and		a.ie_alteracao = 10;

					end if;		

                    if (ie_inf_ras_hor_medi_w = 'S') then
                        ds_alteracao_rastre_w := substr( ds_alteracao_rastre_w  || chr(13) ||
                                                        '10 Linha:' || $$plsql_line || chr(13) ||
                                                        'nr_prescricao_p:' || nr_prescricao_p || chr(13) ||
                                                        'nr_seq_prescr_w:' || nr_seq_prescr_w || chr(13) ||
                                                        'dt_horario_w: '   || PKG_DATE_FORMATERS_TZ.TO_VARCHAR(dt_horario_w,'timestamp',ESTABLISHMENT_TIMEZONE_UTILS.gettimezone) || chr(13) ||
                                                        'qt_hor_w: ' || qt_hor_w
                                                        , 1, 4000);
                    end if;
					
					ie_regra_w	:= '';						
					if (ie_valida_dose_presc_w = 'S') then
					
						ie_regra_w := obter_regra_dispensacao(	cd_estabelecimento_p	=> cd_estabelecimento_w,
																cd_material_p			=> cd_material_w,
																cd_unid_med_dose_p		=> cd_unid_med_dose_w,
																ie_via_aplicacao_p		=> ie_via_aplicacao_w,
																cd_intervalo_p			=> cd_intervalo_w,
																nr_atendimento_p		=> nr_atendimento_w,
																ie_opcao_p				=> 'A',
																nr_prescricao_p			=> nr_prescricao_p,
																nr_sequencia_p			=> nr_seq_prescr_w
															);		
						if (ie_regra_w = 'C') and (qt_total_dispensar_w < qt_solic_min_cons_w) and (nr_ocorrencia_w > 1) then
							qt_total_dispensar_w	:=	qt_solic_min_cons_w;
						end if;
															
					end if;	
					
					if (qt_hor_w = 0) then

                        if (ie_inf_ras_hor_medi_w = 'S') then
                            ds_alteracao_rastre_w := substr( ds_alteracao_rastre_w  || chr(13) ||
                                                            '11 Linha:' || $$plsql_line || chr(13) ||
                                                            'Inserindo prescr_mat_hor'
                                                            , 1, 4000);
                        end if;
                        				
						insert into prescr_mat_hor(
							nr_sequencia,  
							nr_seq_digito,
							nr_prescricao,
							nr_seq_material,
							ie_agrupador,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							ds_horario,
							dt_horario,
							qt_dose,
							qt_dispensar,
							cd_unidade_medida,
							cd_unidade_medida_dose,
							cd_material,
							nr_ocorrencia,
							qt_dispensar_hor,
							ie_urgente,
							ie_horario_especial,
							nr_seq_turno,
							ie_aprazado,
							ie_controlado,
							ie_padronizado,
							ie_classif_urgente,
							ie_dispensar_farm,
							nr_agrupamento,
							ie_adep,
							qt_horario,
							cd_unid_med_hor,
							cd_motivo_baixa,
							nr_seq_superior,
							dt_suspensao,
							dt_fim_horario,
							nm_usuario_susp,
							nr_atendimento,
							cd_local_estoque_baixa,
							ie_situacao
							)
						values (	nr_sequencia_w,
							calcula_digito('MODULO11',nr_sequencia_w),
							nr_prescricao_p,
							nr_seq_prescr_w,
							ie_agrupador_w,
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							ds_hora_w,
							dt_horario_w,
							qt_dose_w,
							qt_total_dispensar_w,
							cd_unidade_medida_w,
							cd_unid_med_dose_w,
							cd_material_w,
							nr_ocorrencia_w,
							CASE WHEN ie_regra_w='C' THEN  qt_total_dispensar_w  ELSE CASE WHEN cd_motivo_baixa_w=0 THEN  CASE WHEN ie_gerar_dispensacao_w='N' THEN  0  ELSE coalesce(qt_dispensar_hor_dif_w, dividir(qt_total_dispensar_w,nr_ocorrencia_w)) END   ELSE 0 END  END ,
							ie_urgente_w,
							ie_horario_especial_w,
							Obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,to_char(dt_horario_w,'hh24:mi'),cd_local_estoque_w),
							'N',
							ie_controlado_w,
							ie_padronizado_w,
							ie_classif_urgente_w,
							ie_regra_disp_w,
							nr_agrupamento_w,
							ie_adep_w,
							qt_dose_hor_w,
							cd_unid_med_dose_hor_w,
							CASE WHEN ie_gerar_dispensacao_w='N' THEN  cd_motivo_baixa_dd_zero_w  ELSE cd_motivo_baixa_w END ,
							CASE WHEN nr_seq_recomendacao_w=nr_seq_kit_w THEN null  ELSE nr_seq_kit_w END ,
							coalesce(dt_suspensao_ww,dt_suspensao_w),
							dt_fim_horario_w,
							nm_usuario_susp_w,
							nr_atendimento_w,
							cd_local_estoque_baixa_w,
							ie_situacao_w
							);

					

					end if;
					
					exception when others then
						CALL gerar_log_prescricao(nr_prescricao_p, nr_seq_prescr_w, ie_agrupador_w, null, null, substr(sqlerrm,1,2000), nm_usuario_p, 17039, 'S');	
						sqlerrm_w	:= substr(sqlerrm,1,2000);
					end;
				end if;
				
				open C03;
				loop
				fetch C03 into
					ie_agrupador_dil_w,
					nr_sequencia_dil_w,
					qt_dose_dil_w,
					qt_total_disp_dil_w,
					cd_unidade_medida_dil_w,
					cd_unid_med_dose_dil_w,
					nr_ocorrencia_dil_w,
					cd_material_dil_w,
					ie_se_necessario_dil_w,
					ie_acm_dil_w,
					ie_controlado_dil_w,
					ie_padronizado_dil_w,
					ie_regra_disp_dil_w,
					nr_agrupamento_dil_w,
					cd_protocolo_dil_w,
					cd_local_estoque_dil_w,
					cd_motivo_baixa_dil_w,
					qt_unitaria_dil_w,
					dt_suspensao_progr_w,
					dt_suspensao_dil_w,
					nm_usuario_susp_dil_w,
					nr_seq_diluicao_w;
				EXIT WHEN NOT FOUND; /* apply on C03 */
					
					select	nextval('prescr_mat_hor_seq')
					into STRICT	nr_sequencia_w
					;

					/* Rafael em 07/10/2006 Identificar horarios especiais */

					if (ie_se_necessario_dil_w = 'S') or (ie_acm_dil_w = 'S') then
						ie_horario_especial_w	:= 'S';
					else
						ie_horario_especial_w	:= 'N';
					end if;

					if (dt_horario_w < dt_prescricao_ww) and (ie_urgente_w = 'N') then
						dt_horario_w	:= dt_horario_w + 1;
					end if;
					
					if (dt_suspensao_progr_w > dt_horario_w) or (coalesce(dt_suspensao_progr_w::text, '') = '') then					
					
            --- Inicio MD13
            begin
              EXEC_w := 'CALL GER_PRES_MAT_S_DT_LIB_MD_PCK.OBTER_CLASSIF_URGENTE_MD(:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13) INTO :RESULT';

              EXECUTE EXEC_w USING IN 0,
                                             IN ie_classif_nao_padrao_w,
                                             IN ie_padronizado_dil_w,
                                             IN ie_classif_normal_acm_sn_w,
                                             IN ie_se_necessario_dil_w,
                                             IN ie_acm_dil_w,
                                             IN dt_horario_w,
                                             IN dt_limite_agora_w,
                                             IN ie_urgente_w,
                                             IN ie_agora_impressao_w,
                                             IN ie_define_agora_w, 
                                             IN qt_min_antes_atend_w,
                                             IN dt_limite_especial_w,
                                             OUT ie_classif_urgente_w;

            exception
                when others then
                  ie_classif_urgente_w := null;
            end;
            --- Fim MD13 
						
						if (coalesce(qt_dose_especial_w,0) > 0) and (ie_agrupador_dil_w = 3) then
							nr_ocorrencia_dil_w	:= nr_ocorrencia_dil_w +1;
						end if;
						
            --- Inicio MD14
            begin
              EXEC_w := 'BEGIN GER_PRES_MAT_S_DT_LIB_MD_PCK.OBTER_OCOR_TOT_DISP_UNITA_MD(:1,:2,:3,:4,:5); END;';

              EXECUTE EXEC_w USING IN qt_dose_especial_w,
                                             IN ie_agrupador_dil_w,
                                             IN OUT nr_ocorrencia_dil_w,
                                             IN OUT qt_total_disp_dil_w,
                                             IN OUT qt_unitaria_dil_w;
            exception
                when others then
                  nr_ocorrencia_dil_w := null;
                  qt_total_disp_dil_w := null;
                  qt_unitaria_dil_w   := null;
            end;
            --- Fim MD14
						
						ds_diluicao_w	:= null;
						if (ds_dose_diferenciada_w IS NOT NULL AND ds_dose_diferenciada_w::text <> '') and (vt_dose_diferenciada_w IS NOT NULL AND vt_dose_diferenciada_w::text <> '') and (vt_dose_diferenciada_w.count > 0) and (vt_dose_diferenciada_w.exists(ie_ctrl_loop_ww)) and (vt_dose_diferenciada_w[ie_ctrl_loop_ww](.qt_dose_diferenciada IS NOT NULL AND .qt_dose_diferenciada::text <> ''))  then
							ds_diluicao_w	:= substr(Obter_Diluicao_Medic_dose(nr_seq_prescr_w, nr_prescricao_p, vt_dose_diferenciada_w[ie_ctrl_loop_ww].qt_dose_diferenciada),1,2000);
						end if;
						
						SELECT * FROM obter_dose_um_horario_pmh(cd_material_dil_w, qt_dose_dil_w, cd_unid_med_dose_dil_w, qt_dose_hor_w, cd_unid_med_dose_hor_w) INTO STRICT qt_dose_hor_w, cd_unid_med_dose_hor_w;
						
            --- Inicio MD15
            begin
              EXEC_w := 'BEGIN GER_PRES_MAT_S_DT_LIB_MD_PCK.OBTER_OCORR_DIL_DISP_HOR_MD(:1,:2,:3,:4,:5,:6,:7,:8); END;';

              EXECUTE EXEC_w USING IN 0,
                                             IN OUT qt_unitaria_dil_w,
                                             IN qt_total_disp_dil_w,
                                             IN ie_agrupador_dil_w,
                                             IN nr_ocorrencia_w,
                                             IN qt_unitaria_w,
                                             IN OUT qt_dispensar_hor_w,
                                             IN OUT nr_ocorrencia_dil_w;
            exception
                when others then
                  qt_dispensar_hor_w  := null;
                  nr_ocorrencia_dil_w := null;
            end;
            --- Fim MD15
						
						begin
						
						dt_suspensao_w		:= null;
						dt_fim_horario_w	:= null;
						if (ie_copia_status_hor_w	= 'S') and (coalesce(dt_suspensao_dil_w::text, '') = '') then
							select	CASE WHEN max(a.ie_suspenso_adep)='S' THEN max(a.dt_suspensao)  ELSE null END ,
									max(a.dt_fim_horario)
							into STRICT	dt_suspensao_w,
								dt_fim_horario_w
							from	prescr_medica b,
								prescr_mat_hor a
							where	a.nr_prescricao		= b.nr_prescricao
							and	b.nr_atendimento	= nr_atendimento_w
							and	a.ie_agrupador		= ie_agrupador_dil_w
							and	a.dt_horario		= dt_horario_w
							and	a.cd_material		= cd_material_dil_w
							and	a.qt_dose		= qt_dose_dil_w
							and	a.nr_prescricao		<> nr_prescricao_p
							and	a.cd_unidade_medida_dose	= cd_unid_med_dose_dil_w;
						end if;
						
						select	count(*)
						into STRICT	qt_hor_w
						from	prescr_mat_hor where 	nr_prescricao 	= nr_prescricao_p
						and	nr_seq_material	= nr_sequencia_dil_w
						and	dt_horario	= dt_horario_w LIMIT 1;
						
						if (qt_hor_w = 0) then
							select	count(*)
							into STRICT	qt_hor_w
							from	prescr_medica b,
								prescr_mat_hor x where 	x.nr_prescricao		= nr_prescricao_p
							and	b.nr_prescricao		= x.nr_prescricao
							and	x.nr_seq_material	= nr_sequencia_dil_w
							and	(x.dt_lib_horario IS NOT NULL AND x.dt_lib_horario::text <> '')
							and	(b.dt_liberacao_farmacia IS NOT NULL AND b.dt_liberacao_farmacia::text <> '')
							and	(clock_timestamp() + (x.qt_minutos_agora/1440)) > dt_horario_w
							and	coalesce(x.qt_minutos_agora,0) > 0 LIMIT 1;
						end if;
						
						if (qt_hor_w	= 0) and (coalesce(cd_funcao_origem_w,0) = 950) then

							nr_prescricao_original_w	:= PLT_obter_item_orig(nr_prescricao_p, nr_seq_diluicao_w, 'PRESCR_MATERIAL','P');
							nr_seq_anterior_w		:= PLT_obter_item_orig(nr_prescricao_p, nr_seq_diluicao_w, 'PRESCR_MATERIAL','S');
							
							select	count(*)
							into STRICT	qt_hor_w
							from	prescr_medica a,
								prescr_material b,
								prescr_mat_hor c where 	a.nr_prescricao			= b.nr_prescricao
							and	a.nr_prescricao			= c.nr_prescricao
							and	b.nr_prescricao			= c.nr_prescricao
							and	b.nr_sequencia			= c.nr_seq_material
							and	a.nr_atendimento		= nr_atendimento_w
							and	coalesce(b.nr_prescricao_original,b.nr_prescricao)	= nr_prescricao_original_w
							and	coalesce(b.nr_seq_anterior,b.nr_sequencia)		= nr_seq_anterior_w
							and	c.dt_horario			= dt_horario_w
							and	coalesce(c.dt_suspensao::text, '') = ''
							and	coalesce(b.dt_suspensao::text, '') = ''
							--and 	nvl(c.ie_horario_especial,'N')	= ie_horario_especial_w
							and	(c.dt_lib_horario IS NOT NULL AND c.dt_lib_horario::text <> '')
							and	((a.dt_rep_pt	= dt_rep_pt_w - 1) or (coalesce(a.dt_rep_pt2,clock_timestamp())	= coalesce(dt_rep_pt2_w - 1,clock_timestamp())))
							and	coalesce(c.ie_situacao,'A')	<> 'I'
							and	coalesce(a.cd_funcao_origem,924)	= 950 LIMIT 1;
						end if;
						
						if (qt_hor_w = 0) then
						
							insert into prescr_mat_hor(
								nr_sequencia,
								nr_seq_digito,
								nr_prescricao,
								nr_seq_material,
								ie_agrupador,
								dt_atualizacao,
								nm_usuario,
								dt_atualizacao_nrec,
								nm_usuario_nrec,
								ds_horario,
								dt_horario,
								qt_dose,
								qt_dispensar,
								cd_unidade_medida,
								cd_unidade_medida_dose,
								cd_material,
								nr_ocorrencia,
								qt_dispensar_hor,
								ie_urgente,
								ie_horario_especial,
								nr_seq_turno,
								ie_aprazado,
								ie_controlado,
								ie_padronizado,
								ie_classif_urgente,
								ie_dispensar_farm,
								nr_seq_superior,
								nr_agrupamento,
								ie_adep,
								qt_horario,
								cd_unid_med_hor,
								cd_motivo_baixa,
								ds_diluicao,
								dt_suspensao,
								dt_fim_horario,
								nm_usuario_susp,
								nr_atendimento,
								cd_local_estoque_baixa
								)
							values (	nr_sequencia_w,
								calcula_digito('MODULO11',nr_sequencia_w),
								nr_prescricao_p,
								nr_sequencia_dil_w,
								ie_agrupador_dil_w,
								clock_timestamp(),	
								nm_usuario_p,
								clock_timestamp(),
								nm_usuario_p,
								ds_hora_w,
								dt_horario_w,
								qt_dose_dil_w,
								qt_total_disp_dil_w,
								cd_unidade_medida_dil_w,
								cd_unid_med_dose_dil_w,
								cd_material_dil_w,
								nr_ocorrencia_dil_w,
								CASE WHEN cd_motivo_baixa_dil_w=0 THEN  qt_dispensar_hor_w  ELSE 0 END ,
								ie_urgente_w,
								coalesce(ie_horario_especial_w,'N'),
								Obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,to_char(dt_horario_w,'hh24:mi'),cd_local_estoque_dil_w),
								'N',
								ie_controlado_dil_w,
								ie_padronizado_dil_w,
								ie_classif_urgente_w,
								ie_regra_disp_dil_w,
								nr_seq_prescr_w,
								nr_agrupamento_w,
								ie_adep_w,
								qt_dose_hor_w,
								cd_unid_med_dose_hor_w,
								cd_motivo_baixa_dil_w,
								ds_diluicao_w,
								coalesce(dt_suspensao_dil_w,dt_suspensao_w),
								dt_fim_horario_w,
								nm_usuario_susp_dil_w,
								nr_atendimento_w,
								cd_local_estoque_baixa_w);
															
					

						end if;
						exception when others then
							CALL gerar_log_prescricao(nr_prescricao_p, nr_sequencia_dil_w, ie_agrupador_dil_w, null, null, substr(sqlerrm,1,2000), nm_usuario_p, 17039, 'S');
							sqlerrm_w	:= substr(sqlerrm,1,2000);
						end;
					end if;
				end loop;
				close C03;
				
				ie_ctrl_loop_ww	:= ie_ctrl_loop_ww + 1;	

				/* CPOE_ITEM_AGORA: Tratamento para que somente primeiro horario do item seja de classificacao "Urgente" */

				if (cd_funcao_origem_w = 2314) and (ie_urgente_w = 'S') then
					
					select count(nr_prescricao)
					  into STRICT qt_liberado_w
					  from prescr_mat_hor x
					 where x.nr_prescricao = nr_prescricao_p
					   and x.nr_seq_material = nr_seq_prescr_w
					   and Obter_se_horario_liberado(x.dt_lib_horario, x.dt_horario) = 'S'
					   and coalesce(x.ie_dose_especial, 'N')	= 'N'
					   and coalesce(x.dt_suspensao::text, '') = '' LIMIT 1;

					if (((coalesce(ie_regra_agora_w, 'N') = 'N') and (qt_liberado_w > 0)) or (qt_liberado_w = nr_ocorrencia_w)) then
						ds_horarios_padr_w := '';
					elsif (coalesce(ie_regra_agora_w, 'N') = 'N' and
						   qt_liberado_w = 0 and
						   ie_ctrl_loop_ww = 1) then
						ie_urgente_w := 'N';
					end if;

				end if;

				
			end loop;
		elsif	((ie_urgente_w			<> 'S') or (coalesce(ie_dose_espec_agora_w,'N')	<> 'S')) and
				(not (cd_funcao_origem_w = 2314 AND qt_dose_especial_w IS NOT NULL AND qt_dose_especial_w::text <> ''))then
			
			ds_horarios_padr_comp_w	:= null;
			
			if (hr_prim_horario_w = '  :  ') then
				hr_prim_horario_w := null;
			end if;
			
			if (ie_urgente_w	= 'S') then
				dt_libe_w	:= dt_liberacao_w;
				if (ie_momento_lote_w = 'F') and (dt_liberacao_farmacia_w IS NOT NULL AND dt_liberacao_farmacia_w::text <> '') then
					select	max(dt_liberacao)
					into STRICT	dt_libe_w
					from	prescr_medica
					where	nr_prescricao	= nr_prescricao_p;
				elsif (ie_momento_lote_w = 'M') and (dt_liberacao_medico_w IS NOT NULL AND dt_liberacao_medico_w::text <> '') then
					dt_liberacao_w	:= dt_liberacao_medico_w;
				end if;
				dt_prescricao_ww	:= coalesce(dt_libe_w,dt_prescricao_ww);
			else
				dt_prescricao_ww	:= coalesce(dt_inicio_prescr_w,dt_prescricao_w);
			end if;
			
			ds_hora_w	:= coalesce(hr_prim_horario_w, substr(to_char(dt_primeiro_horario_w,'dd/mm/yyyy hh24:mi:ss'),12,5));
			dt_horario_w	:= pkg_date_utils.get_time(dt_prescricao_ww + qt_dia_prim_hor_w, ds_hora_w, 0);
			
			/*Fabio e Jonas - 19/01/2010 = Para gerar os lotes como AGORA dependendo do horario final do turno, e nao mais pelo minutos de agora*/

			if (ie_agora_impressao_w = 'S') then
				nr_seq_turno_hor_ag_w	:= Obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,to_char(dt_horario_w,'hh24:mi'),cd_local_estoque_w);
				select	max(to_char(b.hr_inicial,'hh24:mi')),
					max(to_char(b.hr_final,'hh24:mi'))
				into STRICT	hr_turno_agora_w,
					hr_final_turno_agora_w
				from	regra_turno_disp_param b,
					regra_turno_disp a
				where	a.nr_sequencia		= b.nr_seq_turno
				and	a.cd_estabelecimento	= cd_estabelecimento_w
				and	a.nr_sequencia		= nr_seq_turno_hor_ag_w
				and (coalesce(b.cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0))	= coalesce(cd_setor_atendimento_w,0));

				select	coalesce(max(qt_min_antes_atend), 0),
					coalesce(max(ie_define_agora), 'N')
				into STRICT	qt_min_antes_atend_w,
					ie_define_agora_w
				from	regra_tempo_disp
				where	cd_estabelecimento	= cd_estabelecimento_w
				and (coalesce(cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0)) = coalesce(cd_setor_atendimento_w,0))
				and	nr_seq_turno = nr_seq_turno_hor_ag_w
				and	ie_situacao = 'A';

				/*SO-2214423*/

        --- Inicio MD16
        begin
          EXEC_W := 'CALL GER_PRES_MAT_S_DT_LIB_MD_PCK.CALCULAR_DT_LIMITE_AGORA_MD(:1,:2,:3,:4,:5) INTO :RESULT';

          EXECUTE EXEC_W USING IN hr_turno_agora_w,
                                         IN hr_final_turno_agora_w,
                                         IN dt_inicio_prescr_w,
                                         IN qt_min_antes_atend_w,
                                         IN dt_horario_w,
                                         OUT dt_limite_agora_w;
        exception
          when others then
            dt_limite_agora_w := null;
        end;
        --- Fim MD16
			end if;
			/*Fabio e Jonas - 19/01/2010 = Final da alteracao*/

			select	nextval('prescr_mat_hor_seq')
			into STRICT	nr_sequencia_w
			;

			/* Rafael em 07/10/2006 Identificar horarios especiais */

			ie_horario_especial_w	:= 'S';

			if (dt_horario_w < dt_prescricao_ww) and (ie_urgente_w = 'N') then
				dt_horario_w	:= dt_horario_w + 1;
			end if;

			if (dt_suspensao_progr_w > dt_horario_w) or (coalesce(dt_suspensao_progr_w::text, '') = '') then			

        --- INicio MD17 
        begin
          EXEC_w := 'CALL GER_PRES_MAT_S_DT_LIB_MD_PCK.OBTER_CLASSIF_URGENTE_MD(:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13) INTO :RESULT';

          EXECUTE EXEC_w USING IN 0,
                                         IN ie_classif_nao_padrao_w,
                                         IN ie_padronizado_w,
                                         IN ie_classif_normal_acm_sn_w,
                                         IN ie_se_necessario_w,
                                         IN ie_acm_w,
                                         IN dt_horario_w,
                                         IN dt_limite_agora_w,
                                         IN ie_urgente_w,
                                         IN ie_agora_impressao_w,
                                         IN ie_define_agora_w, 
                                         IN qt_min_antes_atend_w,
                                         IN dt_limite_especial_w,
                                         OUT ie_classif_urgente_w;

        exception
            when others then
              ie_classif_urgente_w := null;
        end;
        --- Fim MD17
				
				/* Dalcastagne em 25/09/2008 OS 107843 */

				if (VarIdentPrescrADEP_w = 'DS') then
					ie_adep_w := ie_rep_adep_w;
				elsif (VarIdentPrescrADEP_w = 'NV') then
					ie_adep_w := 'N';
				elsif (VarIdentPrescrADEP_w = 'SV') then
					ie_adep_w := 'S';
				elsif (VarIdentPrescrADEP_w = 'PV') or (VarIdentPrescrADEP_w = 'PNV') then
					ie_adep_w := ie_adep_param_w;
				end if;
				
				SELECT * FROM obter_dose_um_horario_pmh(cd_material_w, qt_dose_w, cd_unid_med_dose_w, qt_dose_hor_w, cd_unid_med_dose_hor_w) INTO STRICT qt_dose_hor_w, cd_unid_med_dose_hor_w;
				
				begin		

				dt_suspensao_w		:= null;
				dt_fim_horario_w	:= null;
				if (ie_copia_status_hor_w	= 'S') and (coalesce(dt_suspensao_ww::text, '') = '') then
					select	CASE WHEN max(a.ie_suspenso_adep)='S' THEN max(a.dt_suspensao)  ELSE null END ,
							max(a.dt_fim_horario)
					into STRICT	dt_suspensao_w,
							dt_fim_horario_w
					from	prescr_medica b,
						prescr_mat_hor a
					where	a.nr_prescricao		= b.nr_prescricao
					and	b.nr_atendimento	= nr_atendimento_w
					and	a.ie_agrupador		= ie_agrupador_w
					and	a.dt_horario		= dt_horario_w
					and	a.cd_material		= cd_material_w
					and	a.qt_dose		= qt_dose_w
					and	a.nr_prescricao		<> nr_prescricao_p
					and	a.cd_unidade_medida_dose	= cd_unid_med_dose_w;
				end if;
				
				select	count(*)
				into STRICT	qt_hor_w
				from	prescr_mat_hor where 	nr_prescricao 	= nr_prescricao_p
				and	nr_seq_material	= nr_seq_prescr_w
				and	dt_horario	= dt_horario_w LIMIT 1;

                if (ie_inf_ras_hor_medi_w = 'S') then
                    ds_alteracao_rastre_w := substr( ds_alteracao_rastre_w  || chr(13) ||
                                                    '12 Linha:' || $$plsql_line || chr(13) ||
                                                    'nr_prescricao_p:' || nr_prescricao_p || chr(13) ||
                                                    'nr_seq_prescr_w:' || nr_seq_prescr_w || chr(13) ||
                                                    'dt_horario_w: '   || PKG_DATE_FORMATERS_TZ.TO_VARCHAR(dt_horario_w,'timestamp',ESTABLISHMENT_TIMEZONE_UTILS.gettimezone) || chr(13) ||
                                                    'qt_hor_w: ' || qt_hor_w
                                                    , 1, 4000);
                end if;

				if (qt_hor_w = 0) then
					select	count(*)
					into STRICT	qt_hor_w
					from	prescr_medica b,
						prescr_mat_hor x where 	x.nr_prescricao		= nr_prescricao_p
					and	b.nr_prescricao		= x.nr_prescricao
					and	x.nr_seq_material	= nr_seq_prescr_w
					and	(x.dt_lib_horario IS NOT NULL AND x.dt_lib_horario::text <> '')
					and	(b.dt_liberacao_farmacia IS NOT NULL AND b.dt_liberacao_farmacia::text <> '')
					and	(clock_timestamp() + (x.qt_minutos_agora/1440)) > dt_horario_w
					and	coalesce(x.qt_minutos_agora,0) > 0 LIMIT 1;
				end if;

                if (ie_inf_ras_hor_medi_w = 'S') then
                    ds_alteracao_rastre_w := substr( ds_alteracao_rastre_w  || chr(13) ||
                                                    '13 Linha:' || $$plsql_line || chr(13) ||
                                                    'nr_prescricao_p:' || nr_prescricao_p || chr(13) ||
                                                    'nr_seq_prescr_w:' || nr_seq_prescr_w || chr(13) ||
                                                    'dt_horario_w: ' || PKG_DATE_FORMATERS_TZ.TO_VARCHAR(dt_horario_w,'timestamp',ESTABLISHMENT_TIMEZONE_UTILS.gettimezone) || chr(13) ||                                                    
                                                    'qt_hor_w: ' || qt_hor_w
                                                    , 1, 4000);
                end if;

				if (qt_hor_w = 0) then

                    if (ie_inf_ras_hor_medi_w = 'S') then
                        ds_alteracao_rastre_w := substr( ds_alteracao_rastre_w  || chr(13) ||
                                                        '14 Linha:' || $$plsql_line || chr(13) ||
                                                        'Inserindo prescr_mat_hor'
                                                        , 1, 4000);
                    end if;

					ie_regra_w	:= '';						
					if (ie_valida_dose_presc_w = 'S') then
					
						ie_regra_w := obter_regra_dispensacao(	cd_estabelecimento_p	=> cd_estabelecimento_w,
																cd_material_p			=> cd_material_w,
																cd_unid_med_dose_p		=> cd_unid_med_dose_w,
																ie_via_aplicacao_p		=> ie_via_aplicacao_w,
																cd_intervalo_p			=> cd_intervalo_w,
																nr_atendimento_p		=> nr_atendimento_w,
																ie_opcao_p				=> 'A',
																nr_prescricao_p			=> nr_prescricao_p,
																nr_sequencia_p			=> nr_seq_prescr_w
															);		
						if (ie_regra_w = 'C') and (qt_total_dispensar_w < qt_solic_min_cons_w) and (nr_ocorrencia_w > 1) then
							qt_total_dispensar_w	:=	qt_solic_min_cons_w;
						end if;
															
					end if;	

					insert into prescr_mat_hor(
						nr_sequencia,
						nr_seq_digito,
						nr_prescricao,
						nr_seq_material,
						ie_agrupador,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						ds_horario,
						dt_horario,
						qt_dose,
						qt_dispensar,
						cd_unidade_medida,
						cd_unidade_medida_dose,
						cd_material,
						nr_ocorrencia,
						qt_dispensar_hor,
						ie_urgente,
						ie_horario_especial,
						nr_seq_turno,
						ie_aprazado,
						ie_controlado,
						ie_padronizado,
						ie_classif_urgente,
						ie_dispensar_farm,
						nr_agrupamento,
						ie_adep,
						qt_horario,
						cd_unid_med_hor,
						cd_motivo_baixa,
						nr_seq_superior,
						dt_suspensao,
						dt_fim_horario,
						nm_usuario_susp,
						nr_atendimento,
						cd_local_estoque_baixa
						)
					values (	nr_sequencia_w,
						calcula_digito('MODULO11',nr_sequencia_w),
						nr_prescricao_p,
						nr_seq_prescr_w,
						ie_agrupador_w,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						ds_hora_w,
						dt_horario_w,
						qt_dose_w,
						qt_total_dispensar_w,
						cd_unidade_medida_w,
						cd_unid_med_dose_w,
						cd_material_w,
						nr_ocorrencia_w,
						CASE WHEN ie_regra_w='C' THEN  qt_total_dispensar_w  ELSE CASE WHEN cd_motivo_baixa_w=0 THEN  dividir(qt_total_dispensar_w,nr_ocorrencia_w)  ELSE 0 END  END ,
						ie_urgente_w,
						coalesce(ie_horario_especial_w,'S'),
						Obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,to_char(dt_horario_w,'hh24:mi'),cd_local_estoque_w),
						'N',
						ie_controlado_w,
						ie_padronizado_w,
						ie_classif_urgente_w,
						ie_regra_disp_w,
						nr_agrupamento_w,
						ie_adep_w,
						qt_dose_hor_w,
						cd_unid_med_dose_hor_w,
						cd_motivo_baixa_w,
						CASE WHEN nr_seq_recomendacao_w=nr_seq_kit_w THEN null  ELSE nr_seq_kit_w END ,
						coalesce(dt_suspensao_ww,dt_suspensao_w),
						dt_fim_horario_w,
						nm_usuario_susp_w,
						nr_atendimento_w,
						cd_local_estoque_baixa_w);
						
					
					dt_horario2_w	:= (dt_horario_w + 1);
					if (dt_horario2_w	between dt_inicio_prescr_w and dt_validade_prescr_w) and (obter_funcao_ativa = 950) then

						select	nextval('prescr_mat_hor_seq')
						into STRICT	nr_sequencia_w
						;						
						
						insert into prescr_mat_hor(
							nr_sequencia,
							nr_seq_digito,
							nr_prescricao,
							nr_seq_material,
							ie_agrupador,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							ds_horario,
							dt_horario,
							qt_dose,
							qt_dispensar,
							cd_unidade_medida,
							cd_unidade_medida_dose,
							cd_material,
							nr_ocorrencia,
							qt_dispensar_hor,
							ie_urgente,
							ie_horario_especial,
							nr_seq_turno,
							ie_aprazado,
							ie_controlado,
							ie_padronizado,
							ie_classif_urgente,
							ie_dispensar_farm,
							nr_agrupamento,
							ie_adep,
							qt_horario,
							cd_unid_med_hor,
							cd_motivo_baixa,
							nr_seq_superior,
							dt_suspensao,
							dt_fim_horario,
							nm_usuario_susp,
							nr_atendimento,
							cd_local_estoque_baixa,

							ie_situacao)
						values (	nr_sequencia_w,
							calcula_digito('MODULO11',nr_sequencia_w),
							nr_prescricao_p,
							nr_seq_prescr_w,
							ie_agrupador_w,
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							ds_hora_w,
							dt_horario2_w,
							qt_dose_w,
							qt_total_dispensar_w,
							cd_unidade_medida_w,
							cd_unid_med_dose_w,
							cd_material_w,
							nr_ocorrencia_w,
							CASE WHEN cd_motivo_baixa_w=0 THEN  dividir(qt_total_dispensar_w,nr_ocorrencia_w)  ELSE 0 END ,
							ie_urgente_w,
							coalesce(ie_horario_especial_w,'S'),
							Obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,to_char(dt_horario_w,'hh24:mi'),cd_local_estoque_w),
							'N',
							ie_controlado_w,
							ie_padronizado_w,
							ie_classif_urgente_w,
							ie_regra_disp_w,
							nr_agrupamento_w,
							ie_adep_w,
							qt_dose_hor_w,
							cd_unid_med_dose_hor_w,
							cd_motivo_baixa_w,
							CASE WHEN nr_seq_recomendacao_w=nr_seq_kit_w THEN null  ELSE nr_seq_kit_w END ,
							coalesce(dt_suspensao_ww,dt_suspensao_w),
							dt_fim_horario_w,
							nm_usuario_susp_w,
							nr_atendimento_w,
							cd_local_estoque_baixa_w,
							'I');
							
						
					end if;
				end if;
				exception when others then
					CALL gerar_log_prescricao(nr_prescricao_p, nr_seq_prescr_w, ie_agrupador_w, null, null, substr(sqlerrm,1,2000), nm_usuario_p, 17039, 'S');
					sqlerrm_w	:= substr(sqlerrm,1,2000);
				end;
			end if;		
			open C03;
			loop
				fetch C03 into
					ie_agrupador_dil_w,
					nr_sequencia_dil_w,
					qt_dose_dil_w,
					qt_total_disp_dil_w,
					cd_unidade_medida_dil_w,
					cd_unid_med_dose_dil_w,
					nr_ocorrencia_dil_w,
					cd_material_dil_w,
					ie_se_necessario_dil_w,
					ie_acm_dil_w,
					ie_controlado_dil_w,
					ie_padronizado_dil_w,
					ie_regra_disp_dil_w,
					nr_agrupamento_w,
					cd_protocolo_dil_w,
					cd_local_estoque_dil_w,
					cd_motivo_baixa_dil_w,
					qt_unitaria_dil_w,
					dt_suspensao_progr_w,
					dt_suspensao_dil_w,
					nm_usuario_susp_dil_w,
					nr_seq_diluicao_w;
				EXIT WHEN NOT FOUND; /* apply on C03 */
			
				select	nextval('prescr_mat_hor_seq')
				into STRICT	nr_sequencia_w
				;

				/* Rafael em 07/10/2006 Identificar horarios especiais */

				if (ie_se_necessario_dil_w = 'S') or (ie_acm_dil_w = 'S') then
					ie_horario_especial_w	:= 'S';
				else
					ie_horario_especial_w	:= 'N';
				end if;

        --- Inicio MD18
        begin
          EXEC_w := 'BEGIN GER_PRES_MAT_S_DT_LIB_MD_PCK.OBTER_HORARIO_MD(:1,:2,:3); END;';

          EXECUTE EXEC_w USING IN OUT dt_horario_w,
                                         IN dt_prescricao_ww,
                                         IN ie_urgente_w;
        exception
            when others then
              dt_horario_w := null;
        end;
        --- Fim MD18
			
				if (dt_suspensao_progr_w > dt_horario_w) or (coalesce(dt_suspensao_progr_w::text, '') = '') then
			
          --- Inicio MD19
          begin
            EXEC_w := 'CALL GER_PRES_MAT_S_DT_LIB_MD_PCK.OBTER_CLASSIF_URGENTE_MD(:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13) INTO :RESULT';

            EXECUTE EXEC_w USING IN 0,
                                           IN ie_classif_nao_padrao_w,
                                           IN ie_padronizado_dil_w,
                                           IN ie_classif_normal_acm_sn_w,
                                           IN ie_se_necessario_dil_w,
                                           IN ie_acm_dil_w,
                                           IN dt_horario_w,
                                           IN dt_limite_agora_w,
                                           IN ie_urgente_w,
                                           IN ie_agora_impressao_w,
                                           IN ie_define_agora_w, 
                                           IN qt_min_antes_atend_w,
                                           IN dt_limite_especial_w,
                                           OUT ie_classif_urgente_w;

          exception
              when others then
                ie_classif_urgente_w := null;
          end;
          --- Fim MD19 
					
					SELECT * FROM obter_dose_um_horario_pmh(cd_material_dil_w, qt_dose_dil_w, cd_unid_med_dose_dil_w, qt_dose_hor_w, cd_unid_med_dose_hor_w) INTO STRICT qt_dose_hor_w, cd_unid_med_dose_hor_w;
					
					begin
					
					dt_suspensao_w		:= null;
					dt_fim_horario_w	:= null;
					if (ie_copia_status_hor_w	= 'S') and (coalesce(dt_suspensao_dil_w::text, '') = '') then
						select	CASE WHEN max(a.ie_suspenso_adep)='S' THEN max(a.dt_suspensao)  ELSE null END ,
								max(a.dt_fim_horario)
						into STRICT	dt_suspensao_w,
							dt_fim_horario_w
						from	prescr_medica b,
							prescr_mat_hor a
						where	a.nr_prescricao		= b.nr_prescricao
						and	b.nr_atendimento	= nr_atendimento_w
						and	a.ie_agrupador		= ie_agrupador_dil_w
						and	a.dt_horario		= dt_horario_w
						and	a.cd_material		= cd_material_dil_w
						and	a.qt_dose		= qt_dose_dil_w
						and	a.nr_prescricao		<> nr_prescricao_p
						and	a.cd_unidade_medida_dose	= cd_unid_med_dose_dil_w;
					end if;
					
					select	count(*)
					into STRICT	qt_hor_w
					from	prescr_mat_hor where 	nr_prescricao 	= nr_prescricao_p
					and	nr_seq_material	= nr_sequencia_dil_w
					and	dt_horario	= dt_horario_w LIMIT 1;
					
					if (qt_hor_w = 0) then
						select	count(*)
						into STRICT	qt_hor_w
						from	prescr_medica b,
							prescr_mat_hor x where 	x.nr_prescricao		= nr_prescricao_p
						and	b.nr_prescricao		= x.nr_prescricao
						and	x.nr_seq_material	= nr_sequencia_dil_w
						and	(x.dt_lib_horario IS NOT NULL AND x.dt_lib_horario::text <> '')
						and	(b.dt_liberacao_farmacia IS NOT NULL AND b.dt_liberacao_farmacia::text <> '')
						and	(clock_timestamp() + (x.qt_minutos_agora/1440)) > dt_horario_w
						and	coalesce(x.qt_minutos_agora,0) > 0 LIMIT 1;
					end if;
					
					ie_regra_w	:= '';
					if (ie_valida_dose_presc_w = 'S') then
					
						ie_regra_w := obter_regra_dispensacao(	cd_estabelecimento_p	=> cd_estabelecimento_w,
											cd_material_p		=> cd_material_w,
											cd_unid_med_dose_p	=> cd_unid_med_dose_w,
											ie_via_aplicacao_p	=> ie_via_aplicacao_w,
											cd_intervalo_p		=> cd_intervalo_w,
											nr_atendimento_p	=> nr_atendimento_w,
											ie_opcao_p		=> 'A',
											nr_prescricao_p		=> nr_prescricao_p,
											nr_sequencia_p		=> nr_seq_prescr_w);		
						if (ie_regra_w = 'C') and (qt_total_dispensar_w < qt_solic_min_cons_w) and (nr_ocorrencia_w > 1) then
							qt_total_dispensar_w	:=	qt_solic_min_cons_w;
						end if;
															
					end if;	
					
					if (qt_hor_w = 0) then
						insert into prescr_mat_hor(
							nr_sequencia,
							nr_seq_digito,
							nr_prescricao,
							nr_seq_material,
							ie_agrupador,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							ds_horario,
							dt_horario,
							qt_dose,
							qt_dispensar,
							cd_unidade_medida,
							cd_unidade_medida_dose,
							cd_material,
							nr_ocorrencia,
							qt_dispensar_hor,
							ie_urgente,
							ie_horario_especial,
							nr_seq_turno,
							ie_aprazado,
							ie_controlado,
							ie_padronizado,
							ie_classif_urgente,
							ie_dispensar_farm,
							nr_seq_superior,
							nr_agrupamento,
							ie_adep,
							qt_horario,
							cd_unid_med_hor,
							cd_motivo_baixa,
							dt_suspensao,
							dt_fim_horario,
							nm_usuario_susp,
							nr_atendimento,
							cd_local_estoque_baixa
							)
						values (	nr_sequencia_w,
							calcula_digito('MODULO11',nr_sequencia_w),
							nr_prescricao_p,
							nr_sequencia_dil_w,
							ie_agrupador_dil_w,
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							ds_hora_w,
							dt_horario_w,
							qt_dose_dil_w,
							CASE WHEN cd_motivo_baixa_dil_w=0 THEN  qt_total_disp_dil_w  ELSE 0 END ,
							cd_unidade_medida_dil_w,
							cd_unid_med_dose_dil_w,
							cd_material_dil_w,
							nr_ocorrencia_dil_w,
							CASE WHEN ie_regra_w='C' THEN  qt_total_dispensar_w  ELSE CASE WHEN cd_motivo_baixa_dil_w=0 THEN  dividir(qt_total_disp_dil_w, nr_ocorrencia_dil_w)  ELSE 0 END  END ,
							ie_urgente_w,
							coalesce(ie_horario_especial_w,'N'),
							Obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,to_char(dt_horario_w,'hh24:mi'),cd_local_estoque_dil_w),
							'N',
							ie_controlado_dil_w,
							ie_padronizado_dil_w,
							ie_classif_urgente_w,
							ie_regra_disp_dil_w,
							nr_seq_prescr_w,
							nr_agrupamento_w,
							ie_adep_w,
							qt_dose_hor_w,
							cd_unid_med_dose_hor_w,
							cd_motivo_baixa_dil_w,
							coalesce(dt_suspensao_dil_w,dt_suspensao_w),
							dt_fim_horario_w,
							nm_usuario_susp_dil_w,
							nr_atendimento_w,
							cd_local_estoque_baixa_w
							);
							
						
					end if;
					exception when others then
						CALL gerar_log_prescricao(nr_prescricao_p, nr_sequencia_dil_w, ie_agrupador_dil_w, null, null, substr(sqlerrm,1,2000), nm_usuario_p, 17039, 'S');
						sqlerrm_w	:= substr(sqlerrm,1,2000);
					end;
				end if;	
			end loop;
			close C03;
		end if;

        if (ie_inf_ras_hor_medi_w = 'S') then
            CALL Gerar_log_prescr_mat(nr_prescricao_p, nr_seq_prescr_w, ie_agrupador_w, null, null, ds_alteracao_rastre_w, nm_usuario_p, 'N');
        end if;
	end loop;
	close C01;
	end;

procedure gerar_hor_materiais is
	begin
	open C02;
	loop
	fetch C02 into
		ie_agrupador_w,
		nr_seq_prescr_w,
		qt_dose_w,
		qt_total_dispensar_w,
		cd_unidade_medida_w,
		cd_unid_med_dose_w,
		nr_ocorrencia_w,
		cd_material_w,
		ds_horarios_w,
		ds_horarios_padr_w,
		hr_prim_horario_w,
		ie_urgente_w,
		qt_dose_especial_w,
		hr_dose_especial_w,
		ie_se_necessario_w,
		ie_acm_w,
		ie_controlado_w,
		ie_padronizado_w,
		ie_regra_disp_w,
		nr_agrupamento_w,
		cd_protocolo_w,
		ie_material_adep_w,
		cd_local_estoque_w,
		cd_motivo_baixa_w,
		nr_seq_kit_w,
		dt_suspensao_progr_w,
		dt_suspensao_ww,
		nm_usuario_susp_w,
		nr_seq_recomendacao_w,
		cd_intervalo_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
	
		-- CPOE_ITEM_AGORA: Tratamento para que somente primeiro horario do item seja de classificacao "Urgente"
		if (cd_funcao_origem_w = 2314) and (ie_urgente_w = 'S') then
			select	coalesce(max('N'),'S')
			into STRICT	ie_urgente_w
			from	prescr_mat_hor x
			where	x.nr_prescricao		= nr_prescricao_p
			and		x.nr_seq_material	= nr_seq_prescr_w
			and		Obter_se_horario_liberado(x.dt_lib_horario, x.dt_horario) = 'S'
			and		coalesce(x.ie_dose_especial,'N')	= 'N'
			and		coalesce(x.dt_suspensao::text, '') = '' LIMIT 1;
		end if;

		if (coalesce(nr_seq_kit_w,0)				<> 0) and (coalesce(cd_local_estoque_baixa_w,0)	> 0) then
			cd_local_baixa_kit_w	:= cd_local_estoque_baixa_w;
		else
			cd_local_baixa_kit_w	:= null;
		end if;	
		
		qt_solucao_w	:= 0;
		ie_etapa_especial_w  := 'N';

		/*Verificar se gerar horario para kit de uma solucao.*/

		if (coalesce(nr_seq_kit_w,0) <> 0)
			and (nr_seq_recomendacao_w = 0)	then
			qt_solucao_w	:= obter_inform_solucao(nr_prescricao_p,nr_seq_kit_w,ie_horario_acm_w,ie_horario_sn_w,'Q');
													
			if (qt_solucao_w = 0) then
				
				select  coalesce(max('S'),'N')
				into STRICT	ie_mat_solucao_w
				from	prescr_material a where		a.nr_prescricao = nr_prescricao_p
				and		a.nr_sequencia  = nr_seq_kit_w
				and		(a.nr_sequencia_solucao IS NOT NULL AND a.nr_sequencia_solucao::text <> '') LIMIT 1;
				
				if (ie_mat_solucao_w = 'S') then
				
					select	coalesce(max(a.cd_intervalo),'XPTO')
					into STRICT	cd_intervalo_sol_w
					from 	prescr_solucao a,
							prescr_material b
					where	a.nr_prescricao = nr_prescricao_p
					and		a.nr_prescricao = b.nr_prescricao
					and		b.nr_sequencia = nr_seq_kit_w
					and		b.nr_sequencia_solucao = a.nr_seq_solucao;
					
					if (coalesce(cd_intervalo_w,cd_intervalo_sol_w) = cd_intervalo_sol_w) then
	   			    ds_horarios_ww	:= obter_inform_solucao(nr_prescricao_p,nr_seq_kit_w,ie_horario_acm_w,ie_horario_sn_w,'H');
					
					if (ds_horarios_ww <> ' ') then
						ds_horarios_padr_w	:= ds_horarios_ww;
					end if;
					
					ie_etapa_especial_w 	:= coalesce(obter_inform_solucao(nr_prescricao_p,nr_seq_kit_w,ie_horario_acm_w,ie_horario_sn_w,'EP'),'N');
					end if;
				end if;
			

			end if;
		end if;
		
		if (ie_rep_adep_w = 'S') and (ie_material_adep_w = 'N') then
			ie_gerar_adep_w	:= 'N';
		else
			ie_gerar_adep_w	:= ie_rep_adep_w;
		end if;

		qt_dia_adic_w	:= 0;

		dt_prescricao_ww	:= dt_prescricao_w;
		if (ie_urgente_w = 'N') and (cd_funcao_origem_w <> 2314)then
			dt_prescricao_ww	:= dt_inicio_prescr_w;
		end if;

		if (qt_dose_especial_w IS NOT NULL AND qt_dose_especial_w::text <> '') and (coalesce(qt_solucao_w,0)	= 0) then

			select	coalesce(max(qt_conversao),1)
			into STRICT	qt_conversao_w
			from	material_conversao_unidade
			where	cd_material		= cd_material_w
			and	cd_unidade_medida	= cd_unid_med_dose_w;
					
			begin
				exec_w := 'begin ger_pres_mat_s_dt_lib_md_pck.obter_val_dose_esp_md(:1,:2,:3,:4,:5,:6); end;';

				EXECUTE exec_w using in dt_prescricao_w,
											   in hr_dose_especial_w,
											   in qt_conversao_w,
											   in out qt_dose_especial_w,
											   in out qt_total_dispensar_w,
											   out dt_horario_w;
			exception
				when others then
					qt_dose_especial_w   := null;
					qt_total_dispensar_w := null;
					dt_horario_w         := null;
			end;

			/*Fabio e Jonas - 19/01/2010 = Para gerar os lotes como AGORA dependendo do horario final do turno, e nao mais pelo minutos de agora*/

			if (ie_agora_impressao_w = 'S') then
				nr_seq_turno_hor_ag_w	:= Obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,to_char(dt_horario_w,'hh24:mi'),cd_local_estoque_w);
				select	max(to_char(b.hr_inicial,'hh24:mi')),
					max(to_char(b.hr_final,'hh24:mi'))
				into STRICT	hr_turno_agora_w,
					hr_final_turno_agora_w
				from	regra_turno_disp_param b,
					regra_turno_disp a
				where	a.nr_sequencia		= b.nr_seq_turno
				and	a.cd_estabelecimento	= cd_estabelecimento_w
				and	a.nr_sequencia		= nr_seq_turno_hor_ag_w
				and (coalesce(b.cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0))	= coalesce(cd_setor_atendimento_w,0));

				select	coalesce(max(qt_min_antes_atend), 0),
					coalesce(max(ie_define_agora), 'N')
				into STRICT	qt_min_antes_atend_w,
					ie_define_agora_w
				from	regra_tempo_disp
				where	cd_estabelecimento	= cd_estabelecimento_w
				and (coalesce(cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0)) = coalesce(cd_setor_atendimento_w,0))
				and	nr_seq_turno = nr_seq_turno_hor_ag_w
				and	ie_situacao = 'A';
				
				begin
					exec_w := 'call ger_pres_mat_s_dt_lib_md_pck.calcular_dt_limite_agora_md(:1,:2,:3,:4,:5) into :result';

					EXECUTE exec_w using in hr_turno_agora_w,
												 in hr_final_turno_agora_w,
												 in dt_inicio_prescr_w,
												 in qt_min_antes_atend_w,
												 in dt_horario_w,
												 out dt_limite_agora_w;
				exception
					when others then
						dt_limite_agora_w := null;
				end;
				
			end if;
			/*Fabio e Jonas - 19/01/2010 = Final da alteracao*/

			select	nextval('prescr_mat_hor_seq')
			into STRICT	nr_sequencia_w
			;

			hr_dose_especial_w	:= replace(hr_dose_especial_w,'A','');

			/* Rafael em 07/10/2006 Identificar horarios especiais */

			ie_horario_especial_w := 'N';

			if (dt_horario_w < dt_prescricao_w) and (ie_urgente_w = 'N') then
				dt_horario_w	:= dt_horario_w + 1;
			end if;

			if (dt_suspensao_progr_w > dt_horario_w) or (coalesce(dt_suspensao_progr_w::text, '') = '') then
			
				begin
					exec_w := 'call ger_pres_mat_s_dt_lib_md_pck.obter_classif_urgente_md(:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13) into :result';

					EXECUTE exec_w using in 0,
												 in ie_classif_nao_padrao_w,
												 in ie_padronizado_w,
												 in ie_classif_normal_acm_sn_w,
												 in ie_se_necessario_w,
												 in ie_acm_w,
												 in dt_horario_w,
												 in dt_limite_agora_w,
												 in ie_urgente_w,
												 in ie_agora_impressao_w,
												 in ie_define_agora_w, 
												 in qt_min_antes_atend_w,
												 in dt_limite_especial_w,
												 out ie_classif_urgente_w;

				exception
					when others then
						ie_classif_urgente_w := null;
				end;
				
				SELECT * FROM obter_dose_um_horario_pmh(cd_material_w, qt_dose_especial_w, cd_unid_med_dose_w, qt_dose_hor_w, cd_unid_med_dose_hor_w) INTO STRICT qt_dose_hor_w, cd_unid_med_dose_hor_w;
				
				select	count(*)
				into STRICT	qt_hor_w
				from	prescr_mat_hor where		nr_prescricao 	= nr_prescricao_p
				and		nr_seq_material	= nr_seq_prescr_w
				and	coalesce(ie_dose_especial,'N') = 'S' LIMIT 1;
				
				if (qt_hor_w = 0) then
					select	count(*)
					into STRICT	qt_hor_w
					from	prescr_medica b,
							prescr_mat_hor x where	x.nr_prescricao		= nr_prescricao_p
					and	b.nr_prescricao		= x.nr_prescricao
					and	x.nr_seq_material	= nr_seq_prescr_w
					and	(x.dt_lib_horario IS NOT NULL AND x.dt_lib_horario::text <> '')
					and	(b.dt_liberacao_farmacia IS NOT NULL AND b.dt_liberacao_farmacia::text <> '')
					and	(clock_timestamp() + (x.qt_minutos_agora/1440)) > dt_horario_w
					and	coalesce(x.qt_minutos_agora,0) > 0 LIMIT 1;
				end if;
					
				if (qt_hor_w = 0) then
					begin
					insert into prescr_mat_hor(
						nr_sequencia,
						nr_seq_digito,
						nr_prescricao,
						nr_seq_material,
						ie_agrupador,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						ds_horario,
						dt_horario,
						qt_dose,
						qt_dispensar,
						cd_unidade_medida,
						cd_unidade_medida_dose,
						cd_material,
						nr_ocorrencia,
						qt_dispensar_hor,
						ie_urgente,
						ie_horario_especial,
						nr_seq_turno,
						ie_aprazado,
						ie_dose_especial,
						ie_controlado,
						ie_padronizado,
						ie_classif_urgente,
						ie_dispensar_farm,
						nr_agrupamento,
						ie_adep,
						qt_horario,
						cd_unid_med_hor,
						cd_motivo_baixa,
						nr_seq_superior,
						dt_suspensao,
						nm_usuario_susp,
						nr_atendimento,
						cd_local_estoque_baixa
						)
					values (	nr_sequencia_w,
						calcula_digito('MODULO11',nr_sequencia_w),
						nr_prescricao_p,
						nr_seq_prescr_w,
						ie_agrupador_w,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						hr_dose_especial_w,
						dt_horario_w,
						qt_dose_especial_w,
						qt_dose_especial_w,
						cd_unidade_medida_w,
						cd_unid_med_dose_w,
						cd_material_w,
						1,
						CASE WHEN cd_motivo_baixa_w=0 THEN  qt_dose_especial_w  ELSE 0 END ,
						ie_urgente_w,
						coalesce(ie_horario_especial_w,'N'),
						Obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,hr_dose_especial_w,cd_local_estoque_w),
						'N',
						'S',
						ie_controlado_w,
						ie_padronizado_w,
						ie_classif_urgente_w,
						ie_regra_disp_w,
						nr_agrupamento_w,
						--ie_rep_adep_w);
						ie_gerar_adep_w,
						qt_dose_hor_w,
						cd_unid_med_dose_hor_w,
						cd_motivo_baixa_w,
						nr_seq_kit_w,
						dt_suspensao_ww,
						nm_usuario_susp_w,
						nr_atendimento_w,
						cd_local_baixa_kit_w
						);
						
						
					
					
					exception when others then
						CALL gerar_log_prescricao(nr_prescricao_p, nr_seq_prescr_w, ie_agrupador_w, null, null, substr(sqlerrm,1,2000), nm_usuario_p, 17039, 'S');
						sqlerrm_w	:= substr(sqlerrm,1,2000);
					end;
				end if;
			end if;
		end if;

		
		ie_urgente_ant_w	:= ie_urgente_w;
		
		if (ie_urgente_ant_w = 'N') then
			ie_urgente_ant_w	 := coalesce(ie_etapa_especial_w,'N');
		end if;

		if (ie_etapa_especial_w3 = 'X') then
			ie_etapa_especial_w3 := coalesce(ie_etapa_especial_w,'N');
		end if;
			
		ie_etapa_especial_w2 :=  coalesce(ie_urgente_ant_w,'N');
		
			
		if (ds_horarios_padr_w IS NOT NULL AND ds_horarios_padr_w::text <> '') and (coalesce(qt_solucao_w,0)	= 0) then
			while	(ds_horarios_padr_w IS NOT NULL AND ds_horarios_padr_w::text <> '') LOOP
			
				if (ie_etapa_especial_w3 = 'S') then
					ie_etapa_especial_w3 := 'N';
				end if;
			
				k	:= position(' ' in ds_horarios_padr_w);

				if (k > 1) and ((substr(ds_horarios_padr_w, 1, k -1) IS NOT NULL AND (substr(ds_horarios_padr_w, 1, k -1))::text <> '')) then
					ds_hora_w		:= substr(ds_horarios_padr_w, 1, k-1);
					ds_hora_w		:= replace(ds_hora_w, ' ','');
					ds_horarios_padr_w	:= substr(ds_horarios_padr_w, k + 1, 2000);
				elsif (ds_horarios_padr_w IS NOT NULL AND ds_horarios_padr_w::text <> '') then
					ds_hora_w 		:= replace(ds_horarios_padr_w,' ','');
					ds_horarios_padr_w	:= '';
				end if;

				if (cd_funcao_origem_w = 2314) then
					ie_funcao_origem_w := 'S';
				else
					ie_funcao_origem_w := 'N';
				end if;

				begin
				exec_w := 'begin ger_pres_mat_s_dt_lib_md_pck.obter_dose_esp_dispen_md(:1,:2,:3,:4,:5,:6,:7,:8,:9); end;';

				EXECUTE exec_w using in ie_mat_solucao_w,
											   in ie_urgente_w,
											   in ie_funcao_origem_w,
											   in ds_hora_w,
											   in ds_horarios_padr_w,
											   in k,        
											   in out qt_dia_adic_w,
											   in out ie_urgente_ant_w,
											   in out ie_etapa_especial_w2;
				exception
					when others then
						qt_dia_adic_w         := null;
						ie_urgente_ant_w      := null;
						ie_etapa_especial_w2  := null;
				end;

				ds_hora_w	:= replace(ds_hora_w,'A','');
				ds_hora_w	:= replace(ds_hora_w,'A','');
				
				if (ie_urgente_w	= 'S') then
					dt_libe_w	:= dt_liberacao_w;
					if (ie_momento_lote_w = 'F') and (dt_liberacao_farmacia_w IS NOT NULL AND dt_liberacao_farmacia_w::text <> '') then
						select	max(dt_liberacao)
						into STRICT	dt_libe_w
						from	prescr_medica
						where	nr_prescricao	= nr_prescricao_p;
					elsif (ie_momento_lote_w = 'M') and (dt_liberacao_medico_w IS NOT NULL AND dt_liberacao_medico_w::text <> '') then
						dt_liberacao_w	:= dt_liberacao_medico_w;
					end if;
					dt_prescricao_ww	:= coalesce(dt_libe_w,dt_prescricao_ww);
				else
					dt_prescricao_ww	:= coalesce(dt_inicio_prescr_w,dt_prescricao_w);
				end if;

				dt_horario_w	:= pkg_date_utils.get_time(dt_prescricao_ww + qt_dia_adic_w, replace(ds_hora_w,'A',''), 0);

				if ((ie_etapa_especial_w3 = 'N') and (qt_dia_adic_w = 1) and (to_char(dt_horario_w, 'hh24:mi') > to_char(dt_prescricao_ww, 'hh24:mi')) and (to_char(dt_horario_w, 'hh24:mi') > to_char(dt_horario_ant_w, 'hh24:mi')) and (nr_horas_validade_w <= 24)) then
					dt_horario_w := dt_horario_w - 1;
				end if;


				/*Fabio e Jonas - 19/01/2010 = Para gerar os lotes como AGORA dependendo do horario final do turno, e nao mais pelo minutos de agora*/

			if (ie_agora_impressao_w = 'S') then
				nr_seq_turno_hor_ag_w	:= Obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,to_char(dt_horario_w,'hh24:mi'),cd_local_estoque_w);
				select	max(to_char(b.hr_inicial,'hh24:mi')),
					max(to_char(b.hr_final,'hh24:mi'))
				into STRICT	hr_turno_agora_w,
					hr_final_turno_agora_w
				from	regra_turno_disp_param b,
					regra_turno_disp a
				where	a.nr_sequencia		= b.nr_seq_turno
				and	a.cd_estabelecimento	= cd_estabelecimento_w
				and	a.nr_sequencia		= nr_seq_turno_hor_ag_w
				and (coalesce(b.cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0))	= coalesce(cd_setor_atendimento_w,0));

				select	coalesce(max(qt_min_antes_atend), 0),
					coalesce(max(ie_define_agora), 'N')
				into STRICT	qt_min_antes_atend_w,
					ie_define_agora_w
				from	regra_tempo_disp
				where	cd_estabelecimento	= cd_estabelecimento_w
				and (coalesce(cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0)) = coalesce(cd_setor_atendimento_w,0))
				and	nr_seq_turno = nr_seq_turno_hor_ag_w
				and	ie_situacao = 'A';
				
				/*SO-2214423*/

				begin
				  EXEC_W := 'CALL GER_PRES_MAT_S_DT_LIB_MD_PCK.CALCULAR_DT_LIMITE_AGORA_MD(:1,:2,:3,:4,:5) INTO :RESULT';

				  EXECUTE EXEC_W USING IN hr_turno_agora_w,
												 IN hr_final_turno_agora_w,
												 IN dt_inicio_prescr_w,
												 IN qt_min_antes_atend_w,
												 IN dt_horario_w,
												 OUT dt_limite_agora_w;
				exception
				  when others then
					dt_limite_agora_w := null;
				end;				
			end if;
			/*Fabio e Jonas - 19/01/2010 = Final da alteracao*/

				select	nextval('prescr_mat_hor_seq')
				into STRICT	nr_sequencia_w
				;

				select	max(nr_sequencia_solucao)
				into STRICT	nr_seq_sol_w
				from	prescr_material
				where	nr_prescricao = nr_prescricao_p
				and	nr_sequencia = nr_seq_kit_w;
				
				/* Rafael em 07/10/2006 Identificar horarios especiais */

				if	((ie_se_necessario_w = 'S') or (ie_acm_w = 'S')) and
					((coalesce(nr_seq_kit_w::text, '') = '') or (nr_seq_sol_w IS NOT NULL AND nr_seq_sol_w::text <> '')) then
					ie_horario_especial_w	:= 'S';
				else
					ie_horario_especial_w	:= 'N';
				end if;
				
				if (coalesce(ie_mat_solucao_w,'N') <> 'S') then	
					if (dt_horario_w < dt_prescricao_ww) and (ie_urgente_w = 'N') then
						dt_horario_w	:= dt_horario_w + 1;
					end if;
				else
					if (dt_horario_w < dt_prescricao_ww) and
						((coalesce(ie_urgente_w,'N') = 'N') and (coalesce(ie_etapa_especial_w,'N') = 'N')) then
						dt_horario_w	:= dt_horario_w + 1;
					end if;
				end if;	
				
				if (dt_horario_w < dt_prescricao_w) and (ie_urgente_w = 'S') and (pkg_date_utils.extract_field('HOUR', dt_prescricao_w, 0) in (21, 22, 23)) then
					dt_horario_w	:= dt_horario_w + 1;
				end if;
				
				if (dt_suspensao_progr_w > dt_horario_w) or (coalesce(dt_suspensao_progr_w::text, '') = '') then
				
          --- Inicio MD24
					begin
					EXEC_w := 'CALL GER_PRES_MAT_S_DT_LIB_MD_PCK.OBTER_CLASSIF_URGENTE_MD(:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13) INTO :RESULT';

					EXECUTE EXEC_w USING IN 0,
												   IN ie_classif_nao_padrao_w,
												   IN ie_padronizado_w,
												   IN ie_classif_normal_acm_sn_w,
												   IN ie_se_necessario_w,
												   IN ie_acm_w,
												   IN dt_horario_w,
												   IN dt_limite_agora_w,
												   IN ie_urgente_w,
												   IN ie_agora_impressao_w,
												   IN ie_define_agora_w, 
												   IN qt_min_antes_atend_w,
												   IN dt_limite_especial_w,
												   OUT ie_classif_urgente_w;

					exception
					  when others then
						ie_classif_urgente_w := null;
					end;
          --- Fim MD24
					
					SELECT * FROM obter_dose_um_horario_pmh(cd_material_w, qt_dose_w, cd_unid_med_dose_w, qt_dose_hor_w, cd_unid_med_dose_hor_w) INTO STRICT qt_dose_hor_w, cd_unid_med_dose_hor_w;
					select	count(*)
					into STRICT	qt_hor_w
					from	prescr_mat_hor where nr_prescricao 	= nr_prescricao_p
					and	nr_seq_material	= nr_seq_prescr_w
					and	dt_horario	= dt_horario_w LIMIT 1;
					
					if (qt_hor_w = 0) then
						select	count(*)
						into STRICT	qt_hor_w
						from	prescr_medica b,
							prescr_mat_hor x where x.nr_prescricao		= nr_prescricao_p
						and	b.nr_prescricao		= x.nr_prescricao
						and	x.nr_seq_material	= nr_seq_prescr_w
						and	(x.dt_lib_horario IS NOT NULL AND x.dt_lib_horario::text <> '')
						and	(b.dt_liberacao_farmacia IS NOT NULL AND b.dt_liberacao_farmacia::text <> '')
						and	(clock_timestamp() + (x.qt_minutos_agora/1440)) > dt_horario_w
						and	coalesce(x.qt_minutos_agora,0) > 0 LIMIT 1;
					end if;
					
					if (qt_hor_w	= 0) and (coalesce(cd_funcao_origem_w,0) = 950) then

							nr_prescricao_original_w	:= PLT_obter_item_orig(nr_prescricao_p, nr_seq_kit_w, 'PRESCR_MATERIAL','P');
							nr_seq_anterior_w		:= PLT_obter_item_orig(nr_prescricao_p, nr_seq_kit_w, 'PRESCR_MATERIAL','S');
							
							select	count(*)
							into STRICT	qt_hor_w
							from	prescr_medica a,
								prescr_material b,
								prescr_mat_hor c where 	a.nr_prescricao			= b.nr_prescricao
							and	a.nr_prescricao			= c.nr_prescricao
							and	b.nr_prescricao			= c.nr_prescricao
							and	b.nr_sequencia			= c.nr_seq_material
							and	a.nr_atendimento		= nr_atendimento_w
							and	coalesce(b.nr_prescricao_original,b.nr_prescricao)	= nr_prescricao_original_w
							and	coalesce(b.nr_seq_anterior,b.nr_sequencia)		= nr_seq_anterior_w
							and	c.dt_horario			= dt_horario_w
							and	coalesce(c.dt_suspensao::text, '') = ''
							and	coalesce(b.dt_suspensao::text, '') = ''
							--and 	nvl(c.ie_horario_especial,'N')	= ie_horario_especial_w
							and	(c.dt_lib_horario IS NOT NULL AND c.dt_lib_horario::text <> '')
							and	((a.dt_rep_pt	= dt_rep_pt_w - 1) or (coalesce(a.dt_rep_pt2,clock_timestamp())	= coalesce(dt_rep_pt2_w - 1,clock_timestamp())))
							and	coalesce(c.ie_situacao,'A')	<> 'I'
							and	coalesce(a.cd_funcao_origem,924)	= 950 LIMIT 1;
					end if;
					
					
					if (qt_hor_w = 0) then
						begin
						
						dt_horario_ant_w := dt_horario_w;

						insert into prescr_mat_hor(
							nr_sequencia,
							nr_seq_digito,
							nr_prescricao,
							nr_seq_material,
							ie_agrupador,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							ds_horario,
							dt_horario,
							qt_dose,
							qt_dispensar,
							cd_unidade_medida,
							cd_unidade_medida_dose,
							cd_material,
							nr_ocorrencia,
							qt_dispensar_hor,
							ie_urgente,
							ie_horario_especial,
							nr_seq_turno,
							ie_aprazado,
							ie_controlado,
							ie_padronizado,
							ie_classif_urgente,
							ie_dispensar_farm,
							nr_agrupamento,
							ie_adep,
							qt_horario,
							cd_unid_med_hor,
							cd_motivo_baixa,
							nr_seq_superior,
							dt_suspensao,
							nm_usuario_susp,
							nr_atendimento,
							nr_seq_solucao,
							cd_local_estoque_baixa
							)
						values (	nr_sequencia_w,
							calcula_digito('MODULO11',nr_sequencia_w),
							nr_prescricao_p,
							nr_seq_prescr_w,
							ie_agrupador_w,
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							ds_hora_w,
							dt_horario_w,
							qt_dose_w,
							qt_total_dispensar_w,
							cd_unidade_medida_w,
							cd_unid_med_dose_w,
							cd_material_w,
							nr_ocorrencia_w,
							CASE WHEN cd_motivo_baixa_w=0 THEN  dividir(qt_total_dispensar_w, nr_ocorrencia_w)  ELSE 0 END ,
							ie_urgente_w,
							coalesce(ie_horario_especial_w,'N'),
							Obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,to_char(dt_horario_w,'hh24:mi'),cd_local_estoque_w),
							'N',
							ie_controlado_w,
							ie_padronizado_w,
							ie_classif_urgente_w,
							ie_regra_disp_w,
							nr_agrupamento_w,
							--ie_rep_adep_w);
							ie_gerar_adep_w,
							qt_dose_hor_w,
							cd_unid_med_dose_hor_w,
							cd_motivo_baixa_w,
							CASE WHEN nr_seq_recomendacao_w=nr_seq_kit_w THEN null  ELSE nr_seq_kit_w END ,
							dt_suspensao_ww,
							nm_usuario_susp_w,
							nr_atendimento_w,
							nr_seq_sol_w,
							cd_local_baixa_kit_w
							);
						
						
						exception when others then
							CALL gerar_log_prescricao(nr_prescricao_p, nr_seq_prescr_w, ie_agrupador_w, null, null, substr(sqlerrm,1,2000), nm_usuario_p, 17039, 'S');
							sqlerrm_w	:= substr(sqlerrm,1,2000);
						end;
					end if;
				end if;	
			end loop;
		elsif (coalesce(qt_solucao_w,0)	= 0) then
			if (hr_prim_horario_w = '  :  ') then
				hr_prim_horario_w := null;
			end if;
			
			if (ie_urgente_w	= 'S') then
				dt_libe_w	:= dt_liberacao_w;
				if (ie_momento_lote_w = 'F') and (dt_liberacao_farmacia_w IS NOT NULL AND dt_liberacao_farmacia_w::text <> '') then
					select	max(dt_liberacao)
					into STRICT	dt_libe_w
					from	prescr_medica
					where	nr_prescricao	= nr_prescricao_p;
				elsif (ie_momento_lote_w = 'M') and (dt_liberacao_medico_w IS NOT NULL AND dt_liberacao_medico_w::text <> '') then
					dt_liberacao_w	:= dt_liberacao_medico_w;					
				end if;
			
				dt_prescricao_ww	:= coalesce(dt_libe_w,dt_prescricao_ww);
			else
				dt_prescricao_ww	:= coalesce(dt_inicio_prescr_w,dt_prescricao_w);
			end if;
			
			if (ie_prim_hor_sol_kit_w = 'S') and (ie_se_necessario_w = 'S') then
				select	max(b.hr_prim_horario)
				into STRICT	ds_hora_w
				from	prescr_solucao b,
					prescr_material a
				where	a.nr_sequencia_solucao	= b.nr_seq_solucao
				and	a.nr_prescricao		= b.nr_Prescricao
				and	a.nr_sequencia		= nr_seq_kit_w
				and	a.ie_agrupador		= 4
				and	a.nr_prescricao		= nr_prescricao_p
				and	b.ie_se_necessario	= 'S';
					
				if (coalesce(ds_hora_w::text, '') = '') then
					ds_hora_w	:= coalesce(hr_prim_horario_w, substr(to_char(dt_primeiro_horario_w,'dd/mm/yyyy hh24:mi:ss'),12,5));
				end if;
			else
				ds_hora_w	:= coalesce(hr_prim_horario_w, substr(to_char(dt_primeiro_horario_w,'dd/mm/yyyy hh24:mi:ss'),12,5));
			end if;
				
			dt_horario_w	:= pkg_date_utils.get_time(dt_prescricao_ww, ds_hora_w, 0);

			/*Fabio e Jonas - 19/01/2010 = Para gerar os lotes como AGORA dependendo do horario final do turno, e nao mais pelo minutos de agora*/

			if (ie_agora_impressao_w = 'S') then
				nr_seq_turno_hor_ag_w	:= Obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,to_char(dt_horario_w,'hh24:mi'),cd_local_estoque_w);
				select	max(to_char(b.hr_inicial,'hh24:mi')),
					max(to_char(b.hr_final,'hh24:mi'))
				into STRICT	hr_turno_agora_w,
					hr_final_turno_agora_w
				from	regra_turno_disp_param b,
					regra_turno_disp a
				where	a.nr_sequencia		= b.nr_seq_turno
				and	a.cd_estabelecimento	= cd_estabelecimento_w
				and	a.nr_sequencia		= nr_seq_turno_hor_ag_w
				and (coalesce(b.cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0))	= coalesce(cd_setor_atendimento_w,0));

				select	coalesce(max(qt_min_antes_atend), 0),
					coalesce(max(ie_define_agora), 'N')
				into STRICT	qt_min_antes_atend_w,
					ie_define_agora_w
				from	regra_tempo_disp
				where	cd_estabelecimento	= cd_estabelecimento_w
				and (coalesce(cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0)) = coalesce(cd_setor_atendimento_w,0))
				and	nr_seq_turno = nr_seq_turno_hor_ag_w
				and	ie_situacao = 'A';
				
				/*SO-2214423*/

				begin
				  EXEC_W := 'CALL GER_PRES_MAT_S_DT_LIB_MD_PCK.CALCULAR_DT_LIMITE_AGORA_MD(:1,:2,:3,:4,:5) INTO :RESULT';

				  EXECUTE EXEC_W USING IN hr_turno_agora_w,
												 IN hr_final_turno_agora_w,
												 IN dt_inicio_prescr_w,
												 IN qt_min_antes_atend_w,
												 IN dt_horario_w,
												 OUT dt_limite_agora_w;
				exception
				  when others then
					dt_limite_agora_w := null;
				end;				
			end if;
			/*Fabio e Jonas - 19/01/2010 = Final da alteracao*/

			select	nextval('prescr_mat_hor_seq')
			into STRICT	nr_sequencia_w
			;

			/* Rafael em 07/10/2006 Identificar horarios especiais */

			ie_horario_especial_w	:= 'S';
		
			if (dt_horario_w < dt_prescricao_ww) and (ie_urgente_w = 'N') then
				dt_horario_w	:= dt_horario_w + 1;
			end if;

			if (dt_suspensao_progr_w > dt_horario_w) or (coalesce(dt_suspensao_progr_w::text, '') = '') then
			
        --- Inicio MD25
				begin
				  EXEC_w := 'CALL GER_PRES_MAT_S_DT_LIB_MD_PCK.OBTER_CLASSIF_URGENTE_MD(:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13) INTO :RESULT';

				  EXECUTE EXEC_w USING IN 0,
												  IN ie_classif_nao_padrao_w,
												  IN ie_padronizado_w,
												  IN ie_classif_normal_acm_sn_w,
												  IN ie_se_necessario_w,
												  IN ie_acm_w,
												  IN dt_horario_w,
												  IN dt_limite_agora_w,
												  IN ie_urgente_w,
												  IN ie_agora_impressao_w,
												  IN ie_define_agora_w, 
												  IN qt_min_antes_atend_w,
												  IN dt_limite_especial_w,
												  OUT ie_classif_urgente_w;

				exception
					when others then
					  ie_classif_urgente_w := null;
				end;
        --- Fim MD25
				
				SELECT * FROM obter_dose_um_horario_pmh(cd_material_w, qt_dose_w, cd_unid_med_dose_w, qt_dose_hor_w, cd_unid_med_dose_hor_w) INTO STRICT qt_dose_hor_w, cd_unid_med_dose_hor_w;
				
				select	count(*)
				into STRICT	qt_hor_w
				from	prescr_mat_hor where		nr_prescricao 	= nr_prescricao_p
				and	nr_seq_material	= nr_seq_prescr_w
				and	dt_horario	= dt_horario_w LIMIT 1;
				
				if (qt_hor_w = 0) then
					select	count(*)
					into STRICT	qt_hor_w
					from	prescr_medica b,
						prescr_mat_hor x where x.nr_prescricao		= nr_prescricao_p
					and	b.nr_prescricao		= x.nr_prescricao
					and	x.nr_seq_material	= nr_seq_prescr_w
					and	(x.dt_lib_horario IS NOT NULL AND x.dt_lib_horario::text <> '')
					and	(b.dt_liberacao_farmacia IS NOT NULL AND b.dt_liberacao_farmacia::text <> '')
					and	(clock_timestamp() + (x.qt_minutos_agora/1440)) > dt_horario_w
					and	coalesce(x.qt_minutos_agora,0) > 0 LIMIT 1;
				end if;
				
				if (qt_hor_w = 0) then
					begin
					insert into prescr_mat_hor(
						nr_sequencia,
						nr_seq_digito,
						nr_prescricao,
						nr_seq_material,
						ie_agrupador,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						ds_horario,
						dt_horario,
						qt_dose,
						qt_dispensar,
						cd_unidade_medida,
						cd_unidade_medida_dose,
						cd_material,
						nr_ocorrencia,
						qt_dispensar_hor,
						ie_urgente,
						ie_horario_especial,
						nr_seq_turno,
						ie_aprazado,
						ie_controlado,
						ie_padronizado,
						ie_classif_urgente,
						ie_dispensar_farm,
						nr_agrupamento,
						ie_adep,
						qt_horario,
						cd_unid_med_hor,
						cd_motivo_baixa,
						nr_seq_superior,
						dt_suspensao,
						nm_usuario_susp,
						nr_atendimento,
						cd_local_estoque_baixa
						)
					values (	nr_sequencia_w,
						calcula_digito('MODULO11',nr_sequencia_w),
						nr_prescricao_p,
						nr_seq_prescr_w,
						ie_agrupador_w,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						ds_hora_w,
						dt_horario_w,
						qt_dose_w,
						qt_total_dispensar_w,
						cd_unidade_medida_w,
						cd_unid_med_dose_w,
						cd_material_w,
						nr_ocorrencia_w,
						CASE WHEN cd_motivo_baixa_w=0 THEN  dividir(qt_total_dispensar_w,nr_ocorrencia_w)  ELSE 0 END ,
						ie_urgente_w,
						coalesce(ie_horario_especial_w,'S'),
						Obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,to_char(dt_horario_w,'hh24:mi'),cd_local_estoque_w),
						'N',
						ie_controlado_w,
						ie_padronizado_w,
						ie_classif_urgente_w,
						ie_regra_disp_w,
						nr_agrupamento_w,
						--ie_rep_adep_w);
						ie_gerar_adep_w,
						qt_dose_hor_w,
						cd_unid_med_dose_hor_w,
						cd_motivo_baixa_w,
						CASE WHEN nr_seq_recomendacao_w=nr_seq_kit_w THEN null  ELSE nr_seq_kit_w END ,
						dt_suspensao_ww,
						nm_usuario_susp_w,
						nr_atendimento_w,
						cd_local_baixa_kit_w
						);

						
				
					exception when others then
						CALL gerar_log_prescricao(nr_prescricao_p, nr_seq_prescr_w, ie_agrupador_w, null, null, substr(sqlerrm,1,2000), nm_usuario_p, 17039, 'S');
						sqlerrm_w	:= substr(sqlerrm,1,2000);
					end;
				end if;
			end if;	
		end if;

	end loop;
	close C02;
	end;

procedure gerar_hor_solucao is
	begin
	nr_seq_prescr_old_w := null;
	open C04;
	loop
	fetch C04 into
		ie_agrupador_w,
		nr_seq_prescr_w,
		qt_dose_w,
		qt_total_dispensar_w,
		cd_unidade_medida_w,
		cd_unid_med_dose_w,
		nr_ocorrencia_w,
		cd_material_w,
		ds_horarios_w,
		ie_esquema_alternado_w,
		nr_seq_solucao_w,
		ie_urgente_w,
		ie_se_necessario_w,
		ie_acm_w,
		ie_controlado_w,
		ie_padronizado_w,
		ie_regra_disp_w,
		nr_agrupamento_w,
		cd_protocolo_w,
		cd_local_estoque_w,
		cd_motivo_baixa_w,
		ie_etapa_especial_w,
		dt_suspensao_progr_w,
		dt_suspensao_ww,
		nm_usuario_susp_w,
		hr_prim_horario_w,
		ie_dialise_w,
		nr_etapas_w,
		ds_dose_diferenciada_w,
		ie_via_aplicacao_w,
		cd_intervalo_w;
	EXIT WHEN NOT FOUND; /* apply on C04 */
		-- CPOE_ITEM_AGORA: Tratamento para que somente primeiro horario do item seja de classificacao "Urgente"
		if (cd_funcao_origem_w = 2314) and (ie_urgente_w = 'S') then
			select	coalesce(max('N'),'S')
			into STRICT	ie_urgente_w
			from	prescr_mat_hor x
			where	x.nr_prescricao		= nr_prescricao_p
			and		x.nr_seq_material	= nr_seq_prescr_w
			and		Obter_se_horario_liberado(x.dt_lib_horario, x.dt_horario) = 'S'
			and		coalesce(x.ie_dose_especial,'N')	= 'N'
			and		coalesce(x.dt_suspensao::text, '') = '' LIMIT 1;
		end if;

    qt_dispensar_hor_dif_w := null;
		
		ie_ctrl_loop_w		:= 0;
		ie_loop_w			:= 0;
		ie_cont_lib_w		:= 0;
		vt_dose_diferenciada_w.delete;
		if (ds_dose_diferenciada_w IS NOT NULL AND ds_dose_diferenciada_w::text <> '') then
			ds_dose_diferenciada_ww	:= ds_dose_diferenciada_w;
			while(ds_dose_diferenciada_ww IS NOT NULL AND ds_dose_diferenciada_ww::text <> '') and (ie_loop_w < 101) LOOP
				begin
				h	:= position('-' in ds_dose_diferenciada_ww);
				if (h > 0) then
					qt_dose_diferenciada_w	:= replace(substr(ds_dose_diferenciada_ww, 1, h-1),'/',',');
					ds_dose_diferenciada_ww	:= substr(ds_dose_diferenciada_ww, h+1, 50);
				else
					qt_dose_diferenciada_w	:= replace(ds_dose_diferenciada_ww,'/',',');
					ds_dose_diferenciada_ww	:= null;
				end if;
				
				if (ie_esquema_alternado_w = 'S') then
					vt_dose_diferenciada_w[ie_ctrl_loop_w].qt_dose_diferenciada	:= coalesce(qt_dose_diferenciada_w,0);		
					vt_dose_diferenciada_w[ie_ctrl_loop_w].ie_gerar_disp		:= not(coalesce(qt_dose_diferenciada_w,0) > 0);
					if (coalesce(qt_dose_diferenciada_w,0) = 0) then
						nr_etapas_w := nr_etapas_w - 1;
					end if;
					ie_ctrl_loop_w							:= ie_ctrl_loop_w + 1;
				end if;
				ie_loop_w	:=  ie_loop_w + 1;
				end;
			end loop;
		end if;
		
		if (ie_esquema_alternado_w = 'S') then
			nr_ocorrencia_w := nr_etapas_w;
		end if;

		dt_prescricao_ww	:= dt_prescricao_w;
		if (ie_urgente_w = 'N') and (cd_funcao_origem_w <> 2314) then
			dt_prescricao_ww	:= dt_inicio_prescr_w;
		end if;
		
		qt_dia_adic_w	:= 0;
		
		if (ie_esquema_alternado_w = 'S') then
			ds_horarios_w	:= '';
			if (coalesce(dt_suspensao_prescr_w::text, '') = '') then
				open C004;
				loop
				fetch C004 into
					ds_hora_w;
				EXIT WHEN NOT FOUND; /* apply on C004 */
					ds_horarios_w	:= substr(ds_horarios_w || replace(ds_hora_w,';','') || ';',1,4000);
				end loop;
				close C004;
			end if;
		end if;
		
		if (coalesce(ds_horarios_w::text, '') = '') or (ds_horarios_w = 'ACM') or (ds_horarios_w = 'SN') then
			ds_horarios_w	:= to_char(dt_inicio_prescr_w,'hh24:mi');
		end if;
		
		if	((coalesce(ie_etapa_especial_w,'N') = 'S') or (ie_esquema_alternado_w = 'S' AND ie_urgente_w = 'S')) then
			dt_prim_hor_sol_w	:= pkg_date_utils.get_time(dt_prescricao_ww, hr_prim_horario_w, 0);
		else
			dt_prim_hor_sol_w   := dt_primeiro_horario_w;
		end if;
	
		if (substr(Obter_Se_horario_hoje(dt_prescricao_w,dt_prim_hor_sol_w,hr_prim_horario_w),1,1) = 'N') then
			ds_horarios_padr_w	:= padroniza_horario_prescr(ds_horarios_w, '01/01/2000 23:59:59');
		else
			ds_horarios_padr_w	:= padroniza_horario_prescr(ds_horarios_w, to_char(coalesce(dt_prim_hor_sol_w,dt_prescricao_w),'dd/mm/yyyy hh24:mi:ss'));
		end if;
		
		ie_urgente_ant_w	:= ie_urgente_w;
		
		if (ie_urgente_ant_w = 'N') then
			ie_urgente_ant_w	 := coalesce(ie_etapa_especial_w,'N');
		end if;
			ie_etapa_especial_w2 :=  coalesce(ie_urgente_ant_w,'N');
		
		if (coalesce(ie_etapa_especial_w,'N')	= 'S') and
			(((coalesce(ie_acm_w,'N')		= 'S') and (coalesce(ie_horario_acm_w,'S')	= 'N')) or
			((coalesce(ie_se_necessario_w,'N')	= 'S') and (coalesce(ie_horario_sn_w,'S')	= 'N'))) then
			if (position(':' in substr(ds_horarios_padr_w,1,5)) > 0) then
				ds_horarios_padr_w	:= substr(ds_horarios_padr_w,1,5);
			else	
				ds_horarios_padr_w	:= substr(ds_horarios_padr_w,1,2);
			end if;
		end if;	
		
		
		if (ds_horarios_padr_w IS NOT NULL AND ds_horarios_padr_w::text <> '') then
			ie_atualiza_proximo_w	:= 'N';				
			while	(ds_horarios_padr_w IS NOT NULL AND ds_horarios_padr_w::text <> '') LOOP
				k	:= position(' ' in ds_horarios_padr_w);

				if (k > 1) and ((substr(ds_horarios_padr_w, 1, k -1) IS NOT NULL AND (substr(ds_horarios_padr_w, 1, k -1))::text <> '')) then
					ds_hora_w		:= substr(ds_horarios_padr_w, 1, k-1);
					ds_hora_w		:= replace(ds_hora_w, ' ','');
					ds_horarios_padr_w	:= substr(ds_horarios_padr_w, k + 1, 2000);
				elsif (ds_horarios_padr_w IS NOT NULL AND ds_horarios_padr_w::text <> '') then
				ds_hora_w 		:= replace(ds_horarios_padr_w,' ','');
				ds_horarios_padr_w	:= '';
				end if;

				begin
				  EXEC_w := 'CALL GER_PRES_MAT_S_DT_LIB_MD_PCK.OBTER_QT_DIA_ADIC_MD(:1,:2,:3,:4,:5,:6,:7) INTO :RESULT';

				  EXECUTE EXEC_w USING IN ie_urgente_ant_w,
												 IN cd_funcao_origem_w,
												 IN ie_etapa_especial_w,
												 IN nr_seq_prescr_old_w,
												 IN nr_seq_prescr_w, 
												 IN ds_hora_w,
												 IN qt_dia_adic_w,
												 OUT qt_dia_adic_w;

				exception
					when others then
					  qt_dia_adic_w := null;
				end;

				if (ie_etapa_especial_w2 = 'S') or (position('AA' in substr(ds_horarios_padr_w, 1, k-1)) > 0) then
					ie_urgente_ant_w	 := 'N';
					ie_etapa_especial_w2 := 'N';
				end if;
				
				ds_hora_w	:= replace(ds_hora_w,'A','');
				ds_hora_w	:= replace(ds_hora_w,'A','');
				
				if (ie_urgente_w	= 'S') then
					dt_libe_w	:= dt_liberacao_w;
					if (ie_momento_lote_w = 'F') and (dt_liberacao_farmacia_w IS NOT NULL AND dt_liberacao_farmacia_w::text <> '') then
						select	max(dt_liberacao)
						into STRICT	dt_libe_w
						from	prescr_medica
						where	nr_prescricao	= nr_prescricao_p;
					elsif (ie_momento_lote_w = 'M') and (dt_liberacao_medico_w IS NOT NULL AND dt_liberacao_medico_w::text <> '') then
						dt_liberacao_w	:= dt_liberacao_medico_w;
					end if;
				
					dt_prescricao_ww	:= coalesce(dt_libe_w,dt_prescricao_ww);
				else
					dt_prescricao_ww	:= coalesce(dt_inicio_prescr_w,dt_prescricao_w);
				end if;

				dt_horario_w	:= pkg_date_utils.get_time(dt_prescricao_ww + qt_dia_adic_w, replace(ds_hora_w,'A',''), 0);
				
				if (ie_etapa_especial_w = 'S') and (dt_horario_ant_w IS NOT NULL AND dt_horario_ant_w::text <> '') and (dt_horario_w - 1 > dt_horario_ant_w) then
					dt_horario_w := dt_horario_w - 1;
				end if;

				select	nextval('prescr_mat_hor_seq')
				into STRICT	nr_sequencia_w
				;
				
				ie_gerar_especial_w	:= 'S';
				if (ie_etapa_especial_w = 'S') and (coalesce(ds_horarios_padr_w::text, '') = '') then
					ie_gerar_especial_w	:= 'N';
				end if;

				/* Rafael em 07/10/2006 Identificar horarios especiais */

				if (ie_se_necessario_w = 'S') or (ie_acm_w = 'S') and (ie_gerar_especial_w = 'S') then
					ie_horario_especial_w	:= 'S';
				else
					ie_horario_especial_w	:= 'N';
				end if;
				
				
				if	((dt_horario_w < dt_prescricao_ww) or (ie_atualiza_proximo_w = 'S')) and (ie_urgente_w = 'N') and (coalesce(ie_etapa_especial_w,'N') = 'N') then
					if	((dt_horario_w < dt_prescricao_ww) or (ie_atualiza_proximo_w = 'S')) then
						ie_atualiza_proximo_w	:= 'S';
					end if;	
					dt_horario_w	:= dt_horario_w + 1;
				end if;				

				if (dt_suspensao_progr_w > dt_horario_w) or (coalesce(dt_suspensao_progr_w::text, '') = '') then
				
					/*Fabio e Jonas - 19/01/2010 = Para gerar os lotes como AGORA dependendo do horario final do turno, e nao mais pelo minutos de agora*/

					if (ie_agora_impressao_w = 'S') then
						nr_seq_turno_hor_ag_w	:= Obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,to_char(dt_horario_w,'hh24:mi'),cd_local_estoque_w);
						select	max(to_char(b.hr_inicial,'hh24:mi')),
							max(to_char(b.hr_final,'hh24:mi'))
						into STRICT	hr_turno_agora_w,
							hr_final_turno_agora_w
						from	regra_turno_disp_param b,
							regra_turno_disp a
						where	a.nr_sequencia		= b.nr_seq_turno
						and	a.cd_estabelecimento	= cd_estabelecimento_w
						and	a.nr_sequencia		= nr_seq_turno_hor_ag_w
						and (coalesce(b.cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0))	= coalesce(cd_setor_atendimento_w,0));

						select	coalesce(max(qt_min_antes_atend), 0),
							coalesce(max(ie_define_agora), 'N')
						into STRICT	qt_min_antes_atend_w,
							ie_define_agora_w
						from	regra_tempo_disp
						where	cd_estabelecimento	= cd_estabelecimento_w
						and (coalesce(cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0)) = coalesce(cd_setor_atendimento_w,0))
						and	nr_seq_turno = nr_seq_turno_hor_ag_w
						and	ie_situacao = 'A';
						
						/*SO-2214423*/

						begin
						  exec_w := 'call ger_pres_mat_s_dt_lib_md_pck.calcular_dt_limite_agora_md(:1,:2,:3,:4,:5) into :result';

						  EXECUTE exec_w using in hr_turno_agora_w,
														 in hr_final_turno_agora_w,
														 in dt_inicio_prescr_w,
														 in qt_min_antes_atend_w,
														 in dt_horario_w,
														 out dt_limite_agora_w;
						exception
						  when others then
							dt_limite_agora_w := null;
						end;
					end if;
					/*Fabio e Jonas - 19/01/2010 = Final da alteracao*/

					
					begin
						exec_w := 'call ger_pres_mat_s_dt_lib_md_pck.obter_classif_urgente_md(:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13) into :result';

						EXECUTE exec_w using in 0,
													   in ie_classif_nao_padrao_w,
													   in ie_padronizado_w,
													   in ie_classif_normal_acm_sn_w,
													   in ie_se_necessario_w,
													   in ie_acm_w,
													   in dt_horario_w,
													   in dt_limite_agora_w,
													   in ie_urgente_w,
													   in ie_agora_impressao_w,
													   in ie_define_agora_w, 
													   in qt_min_antes_atend_w,
													   in dt_limite_especial_w,
													   out ie_classif_urgente_w;

					exception
						when others then
							ie_classif_urgente_w := null;
					end;
														
					if (nr_seq_solucao_old_w	<> 0) and (nr_seq_solucao_w	<> nr_seq_solucao_old_w) then
						qt_reg_w	:= 0;
					elsif (nr_seq_prescr_old_w <> nr_seq_prescr_w) then	
						qt_reg_w	:= 0;
					end if;
					
					ie_etapa_esp_w	:= 'N';
					qt_reg_w	:= qt_reg_w + 1;
					if (ie_etapa_especial_w	= 'S') and (qt_reg_w		= 1) then
						ie_etapa_esp_w	:= 'S';
					end if;
					
					if (ie_dialise_w = 'S') and (ie_acm_w = 'S') then
						nr_etapa_sol_w	:= 0;
					elsif (nr_seq_solucao_old_w = 0) then
						begin
						nr_etapa_sol_w	:= nr_etapa_sol_w + 1;
						end;
					elsif (nr_seq_solucao_w = nr_seq_solucao_old_w) then
						begin
						select	coalesce(max(nr_etapa_sol),nr_etapa_sol_w + 1)
						into STRICT	nr_etapa_sol_w
						from	prescr_mat_hor
						where	nr_prescricao 	= nr_prescricao_p
						and	nr_seq_solucao	= nr_seq_solucao_w
						and	dt_horario	= dt_horario_w;
						--and	Obter_se_horario_liberado(dt_lib_horario, dt_horario) = 'S';
						end;
					else
						begin
						nr_etapa_sol_w	:= 1;
						end;
					end if;
					
					select	count(*)
					into STRICT	qt_hor_w
					from	prescr_mat_hor where nr_prescricao 	= nr_prescricao_p
					and	nr_seq_material	= nr_seq_prescr_w
					and	dt_horario	= dt_horario_w LIMIT 1;
					
					if (qt_hor_w = 0) then
						select	count(*)
						into STRICT	qt_hor_w
						from	prescr_medica b,
							prescr_mat_hor x where x.nr_prescricao		= nr_prescricao_p
						and	b.nr_prescricao		= x.nr_prescricao
						and	x.nr_seq_material	= nr_seq_prescr_w
						and	(x.dt_lib_horario IS NOT NULL AND x.dt_lib_horario::text <> '')
						and	(b.dt_liberacao_farmacia IS NOT NULL AND b.dt_liberacao_farmacia::text <> '')
						and	(clock_timestamp() + (x.qt_minutos_agora/1440)) > dt_horario_w
						and	coalesce(x.qt_minutos_agora,0) > 0 LIMIT 1;
						
						if (qt_hor_w = 0) then
							select	count(*)
							into STRICT	qt_hor_w
							from	prescr_mat_hor a,
									prescr_material b
							where	a.nr_prescricao = b.nr_prescricao
							and		a.nr_seq_material = b.nr_sequencia
							and 	a.nr_prescricao 	= nr_prescricao_p
							and		a.nr_seq_material	= nr_seq_prescr_w
							and		coalesce(b.ie_urgencia,'N') = 'S'
							and		(a.dt_horario - ((coalesce(a.qt_hor_reaprazamento,0) / 60)/24))	= dt_horario_w
							and		coalesce(a.qt_hor_reaprazamento,0) > 0 LIMIT 1;
						end if;						
					end if;
					
					if (qt_hor_w = 0) then

						if (vt_dose_diferenciada_w.count > 0) and (vt_dose_diferenciada_w.exists(ie_cont_lib_w)) then
						  vt_dose_diferenciada_existe_w := 'S';
						  vt_qt_dose_diferenciada_ww    := vt_dose_diferenciada_w[ie_cont_lib_w].qt_dose_diferenciada;
						else
						  vt_dose_diferenciada_existe_w := 'N';
						  vt_qt_dose_diferenciada_ww    := null;
						end if;

						if (vt_dose_diferenciada_w.count > 0) and (vt_dose_diferenciada_w[ie_cont_lib_w].ie_gerar_disp) then
						  vt_ie_gerar_disp_w := 'S';
						else
						  vt_ie_gerar_disp_w := 'N';
						end if;

						-- dados para dose convertivda MD --------------------------------------
						begin
						  select coalesce(a.cd_unidade_medida_consumo, b.cd_unidade_medida_consumo)
						  into STRICT  cd_unid_med_cons_w
						  from	material_estab a,
								material b
						  where	b.cd_material	= a.cd_material
						  and	  a.cd_material	= cd_material_w
						  and  	a.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento;
						exception
						  when others then
							begin
							  select cd_unidade_medida_consumo
							  into STRICT	 cd_unid_med_cons_w
							  from	 material
							  where	 cd_material = cd_material_w;
							exception
							when others then
							null;
							end;
						end;

						begin
						  select coalesce(max(qt_conversao),0)
						  into STRICT	 qt_conversao_und_ori_w
						  from	 material_conversao_unidade
						  where	 upper(cd_unidade_medida) = upper(cd_unid_med_dose_w)
						  and		 cd_material = cd_material_w;
						  exception
						  when others then
							  qt_conversao_und_ori_w := null;
						end;

						begin
						  select coalesce(max(qt_conversao),0)
						  into STRICT   qt_conversao_und_dest_w
						  from   material_conversao_unidade
						  where  upper(cd_unidade_medida) = upper(cd_unidade_medida_w)
						  and	   cd_material = cd_material_w;
						  exception
						  when others then
							  qt_conversao_und_dest_w := null;
						end;
						-- fim dados para dose convertivda MD --------------------------------------
						--- Inicio MD28
						begin
						  EXEC_w := 'BEGIN GER_PRES_MAT_S_DT_LIB_MD_PCK.OBTER_DISP_DOSE_DS_HORARIO_MD(:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13,:14,:15,:16,:17,:18,:19); END;';

						  EXECUTE EXEC_w USING IN 0,
														 IN ds_dose_diferenciada_w,
														 IN vt_dose_diferenciada_w.count,
														 IN vt_dose_diferenciada_existe_w,
														 IN vt_qt_dose_diferenciada_ww, 
														 IN vt_ie_gerar_disp_w,
														 IN ie_regra_disp_w,
														 IN cd_unid_med_dose_w,
														 IN cd_unidade_medida_w,
														 IN cd_unid_med_cons_w,
														 IN qt_conversao_und_ori_w,
														 IN qt_conversao_und_dest_w,
														 IN qt_total_dispensar_w,
														 IN nr_ocorrencia_w,                                                                                        
														 OUT ie_gerar_dispensacao_w,
														 IN OUT qt_dispensar_hor_w,
														 IN OUT qt_dose_w,
														 IN OUT ds_horarios_padr_w,
														 OUT qt_dispensar_hor_dif_w;
						exception
							when others then
							  qt_dispensar_hor_w      := null;
							  qt_dose_w               := null;
							  ds_horarios_padr_w      := null;
							  qt_dispensar_hor_dif_w  := null;
						end;
						
						SELECT * FROM obter_dose_um_horario_pmh(cd_material_w, qt_dose_w, cd_unid_med_dose_w, qt_dose_hor_w, cd_unid_med_dose_hor_w) INTO STRICT qt_dose_hor_w, cd_unid_med_dose_hor_w;

						
						ie_regra_w	:= '';						
						if (ie_valida_dose_presc_w = 'S') then
						
							ie_regra_w := obter_regra_dispensacao(	cd_estabelecimento_p	=> cd_estabelecimento_w,
												cd_material_p		=> cd_material_w,
												cd_unid_med_dose_p	=> cd_unid_med_dose_w,
												ie_via_aplicacao_p	=> ie_via_aplicacao_w,
												cd_intervalo_p		=> cd_intervalo_w,
												nr_atendimento_p	=> nr_atendimento_w,
												ie_opcao_p		=> 'A',
												nr_prescricao_p		=> nr_prescricao_p,
												nr_sequencia_p		=> nr_seq_prescr_w
												);		
							if (ie_regra_w = 'C') and (qt_total_dispensar_w < qt_solic_min_cons_w) and (nr_ocorrencia_w > 1) then
								qt_total_dispensar_w	:=	qt_solic_min_cons_w;
							end if;
																
						end if;

						ie_cont_lib_w := ie_cont_lib_w + 1;
						dt_horario_ant_w := dt_horario_w;
						
						insert into prescr_mat_hor(
							nr_sequencia,
							nr_seq_digito,
							nr_prescricao,
							nr_seq_material,
							ie_agrupador,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							ds_horario,
							dt_horario,
							qt_dose,
							qt_dispensar,
							cd_unidade_medida,
							cd_unidade_medida_dose,
							cd_material,
							nr_ocorrencia,
							qt_dispensar_hor,
							ie_urgente,
							ie_horario_especial,
							nr_seq_turno,
							ie_aprazado,
							ie_controlado,
							ie_padronizado,
							ie_classif_urgente,
							ie_dispensar_farm,
							nr_agrupamento,
							ie_adep,
							qt_horario,
							cd_unid_med_hor,
							cd_motivo_baixa,
							nr_seq_solucao,
							nr_etapa_sol,
							ie_etapa_especial,
							dt_suspensao,
							nm_usuario_susp,
							nr_atendimento,
							cd_local_estoque_baixa
							)
						values (	nr_sequencia_w,
							calcula_digito('MODULO11',nr_sequencia_w),
							nr_prescricao_p,
							nr_seq_prescr_w,
							ie_agrupador_w,
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							ds_hora_w,
							dt_horario_w,
							qt_dose_w,
							qt_total_dispensar_w,
							cd_unidade_medida_w,
							cd_unid_med_dose_w,
							cd_material_w,
							nr_ocorrencia_w,
							CASE WHEN ie_regra_w='C' THEN  qt_total_dispensar_w  ELSE CASE WHEN cd_motivo_baixa_w=0 THEN  coalesce(qt_dispensar_hor_dif_w, dividir(qt_total_dispensar_w,nr_ocorrencia_w))  ELSE 0 END  END ,
							ie_urgente_w,
							coalesce(ie_horario_especial_w,'N'),
							Obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,to_char(dt_horario_w,'hh24:mi'),cd_local_estoque_w),
							'N',
							ie_controlado_w,
							ie_padronizado_w,
							ie_classif_urgente_w,
							ie_regra_disp_w,
							nr_agrupamento_w,
							ie_rep_adep_w,
							qt_dose_hor_w,
							cd_unid_med_dose_hor_w,
							cd_motivo_baixa_w,
							nr_seq_solucao_w,
							nr_etapa_sol_w,
							ie_etapa_esp_w,
							dt_suspensao_ww,
							nm_usuario_susp_w,
							nr_atendimento_w,
							cd_local_estoque_baixa_w
							);

					
					end if;
					nr_seq_solucao_old_w	:= nr_seq_solucao_w;
					nr_seq_prescr_old_w		:= nr_seq_prescr_w;
				end if;
			end loop;
		end if;
	end loop;
	close C04;
	end;

procedure gerar_hor_procedimento is
	begin
	open C05;
	loop
		fetch C05 into
			ie_agrupador_w,
			nr_seq_prescr_w,
			qt_dose_w,
			qt_total_dispensar_w,
			cd_unidade_medida_w,
			cd_unid_med_dose_w,
			nr_ocorrencia_w,
			cd_material_w,
			ds_horarios_w,
			ds_horarios_padr_w,
			hr_prim_horario_w,
			ie_urgente_w,
			ie_se_necessario_w,
			ie_acm_w,
			ie_controlado_w,
			ie_padronizado_w,
			ie_regra_disp_w,
			nr_agrupamento_w,
			cd_protocolo_w,
			cd_local_estoque_w,
			cd_motivo_baixa_w,
			dt_suspensao_progr_w,
			dt_suspensao_ww,
			nm_usuario_susp_w,
			dt_prev_execucao_w,
			qt_unitaria_w;
		EXIT WHEN NOT FOUND; /* apply on C05 */
		
		-- CPOE_ITEM_AGORA: Tratamento para que somente primeiro horario do item seja de classificacao "Urgente"
		if (cd_funcao_origem_w = 2314) and (ie_urgente_w = 'S') then
			select	coalesce(max('N'),'S')
			into STRICT	ie_urgente_w
			from	prescr_mat_hor x
			where	x.nr_prescricao		= nr_prescricao_p
			and		x.nr_seq_material	= nr_seq_prescr_w
			and		Obter_se_horario_liberado(x.dt_lib_horario, x.dt_horario) = 'S'
			and		coalesce(x.ie_dose_especial,'N')	= 'N'
			and		coalesce(x.dt_suspensao::text, '') = '' LIMIT 1;
		end if;
		
		qt_dia_adic_w	:= 0;

		dt_prescricao_ww	:= dt_prescricao_w;
		if (ie_urgente_w = 'N') and (cd_funcao_origem_w <> 2314) then
			dt_prescricao_ww	:= dt_inicio_prescr_w;
		end if;

		if (ds_horarios_padr_w IS NOT NULL AND ds_horarios_padr_w::text <> '') then
			while	(ds_horarios_padr_w IS NOT NULL AND ds_horarios_padr_w::text <> '') LOOP
				k	:= position(' ' in ds_horarios_padr_w);

				if (k > 1) and ((substr(ds_horarios_padr_w, 1, k -1) IS NOT NULL AND (substr(ds_horarios_padr_w, 1, k -1))::text <> '')) then
					ds_hora_w		:= substr(ds_horarios_padr_w, 1, k-1);
					ds_hora_w		:= replace(ds_hora_w, ' ','');
					ds_horarios_padr_w	:= substr(ds_horarios_padr_w, k + 1, 2000);
					elsif (ds_horarios_padr_w IS NOT NULL AND ds_horarios_padr_w::text <> '') then
					ds_hora_w 		:= replace(ds_horarios_padr_w,' ','');
					ds_horarios_padr_w	:= '';
				end if;

				if	((ie_urgente_w = 'N') or (cd_funcao_origem_w = 2314)) then
					if (position('A' in ds_hora_w) > 0) and (qt_dia_adic_w = 0) then
						qt_dia_adic_w	:= 1;
					elsif (position('AA' in ds_hora_w) > 0) then

						qt_dia_adic_w	:= qt_dia_adic_w + 1;
					end if;
				end if;
		
				ds_hora_w	:= replace(ds_hora_w,'A','');
				ds_hora_w	:= replace(ds_hora_w,'A','');

				if (ie_urgente_w	= 'S') then
					dt_libe_w	:= dt_liberacao_w;
					if (ie_momento_lote_w = 'F') and (dt_liberacao_farmacia_w IS NOT NULL AND dt_liberacao_farmacia_w::text <> '') then
						select	max(dt_liberacao)
						into STRICT	dt_libe_w
						from	prescr_medica
						where	nr_prescricao	= nr_prescricao_p;
					elsif (ie_momento_lote_w = 'M') and (dt_liberacao_medico_w IS NOT NULL AND dt_liberacao_medico_w::text <> '') then
						dt_liberacao_w	:= dt_liberacao_medico_w;
					end if;
					dt_prescricao_ww	:= coalesce(dt_libe_w,dt_prescricao_ww);
				else
					dt_prescricao_ww	:= coalesce(dt_inicio_prescr_w,dt_prescricao_w);
				end if;

				dt_horario_w	:= pkg_date_utils.get_time(dt_prescricao_ww + qt_dia_adic_w, replace(ds_hora_w,'A',''), 0);

				/*Fabio e Jonas - 19/01/2010 = Para gerar os lotes como AGORA dependendo do horario final do turno, e nao mais pelo minutos de agora*/

				if (ie_agora_impressao_w = 'S') then
					nr_seq_turno_hor_ag_w	:= Obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,to_char(dt_horario_w,'hh24:mi'),cd_local_estoque_w);
					select	max(to_char(b.hr_inicial,'hh24:mi')),
						max(to_char(b.hr_final,'hh24:mi'))
					into STRICT	hr_turno_agora_w,
						hr_final_turno_agora_w
					from	regra_turno_disp_param b,
						regra_turno_disp a
					where	a.nr_sequencia		= b.nr_seq_turno
					and	a.cd_estabelecimento	= cd_estabelecimento_w
					and	a.nr_sequencia		= nr_seq_turno_hor_ag_w
					and (coalesce(b.cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0))	= coalesce(cd_setor_atendimento_w,0));

					select	coalesce(max(qt_min_antes_atend), 0),
						coalesce(max(ie_define_agora), 'N')
					into STRICT	qt_min_antes_atend_w,
						ie_define_agora_w
					from	regra_tempo_disp
					where	cd_estabelecimento	= cd_estabelecimento_w
					and (coalesce(cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0)) = coalesce(cd_setor_atendimento_w,0))
					and	nr_seq_turno = nr_seq_turno_hor_ag_w
					and	ie_situacao = 'A';
					
					/*SO-2214423*/

					begin
					EXEC_W := 'CALL GER_PRES_MAT_S_DT_LIB_MD_PCK.CALCULAR_DT_LIMITE_AGORA_MD(:1,:2,:3,:4,:5) INTO :RESULT';

					EXECUTE EXEC_W USING IN hr_turno_agora_w,
												   IN hr_final_turno_agora_w,
												   IN dt_inicio_prescr_w,
												   IN qt_min_antes_atend_w,
												   IN dt_horario_w,
												   OUT dt_limite_agora_w;
					exception
					when others then
					  dt_limite_agora_w := null;
					end;
				end if;
				/*Fabio e Jonas - 19/01/2010 = Final da alteracao*/

				select	nextval('prescr_mat_hor_seq')
				into STRICT	nr_sequencia_w
				;

				/* Rafael em 07/10/2006 Identificar horarios especiais */

				if (ie_se_necessario_w = 'S') or (ie_acm_w = 'S') then
					ie_horario_especial_w	:= 'S';
				else
					ie_horario_especial_w	:= 'N';
				end if;

				/*SO-2214423*/

				if	((dt_horario_w < dt_prescricao_w) or (ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_horario_w) < ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_prev_execucao_w)) or (obter_funcao_ativa = 252 and dt_prev_execucao_w > dt_horario_w)) and (ie_urgente_w = 'N') then
					dt_horario_w	:= dt_horario_w + 1;
				end if;

				if (dt_suspensao_progr_w > dt_horario_w) or (coalesce(dt_suspensao_progr_w::text, '') = '') then
				
					begin
					EXEC_w := 'CALL GER_PRES_MAT_S_DT_LIB_MD_PCK.OBTER_CLASSIF_URGENTE_MD(:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13) INTO :RESULT';

					EXECUTE EXEC_w USING IN 0,
												   IN ie_classif_nao_padrao_w,
												   IN ie_padronizado_w,
												   IN ie_classif_normal_acm_sn_w,
												   IN ie_se_necessario_w,
												   IN ie_acm_w,
												   IN dt_horario_w,
												   IN dt_limite_agora_w,
												   IN ie_urgente_w,
												   IN ie_agora_impressao_w,
												   IN ie_define_agora_w, 
												   IN qt_min_antes_atend_w,
												   IN dt_limite_especial_w,
												   OUT ie_classif_urgente_w;

					exception
					  when others then
						ie_classif_urgente_w := null;
					end;
					
					SELECT * FROM obter_dose_um_horario_pmh(cd_material_w, qt_dose_w, cd_unid_med_dose_w, qt_dose_hor_w, cd_unid_med_dose_hor_w) INTO STRICT qt_dose_hor_w, cd_unid_med_dose_hor_w;
					
					select	count(*)
					into STRICT	qt_hor_w
					from	prescr_mat_hor where nr_prescricao 	= nr_prescricao_p
					and	nr_seq_material	= nr_seq_prescr_w
					and	dt_horario	= dt_horario_w LIMIT 1;
					
					if (qt_hor_w = 0) then
						select	count(*)
						into STRICT	qt_hor_w
						from	prescr_medica b,
							prescr_mat_hor x where x.nr_prescricao		= nr_prescricao_p
						and	b.nr_prescricao		= x.nr_prescricao
						and	x.nr_seq_material	= nr_seq_prescr_w
						and	(x.dt_lib_horario IS NOT NULL AND x.dt_lib_horario::text <> '')
						and	(b.dt_liberacao_farmacia IS NOT NULL AND b.dt_liberacao_farmacia::text <> '')
						and	(clock_timestamp() + (x.qt_minutos_agora/1440)) > dt_horario_w
						and	coalesce(x.qt_minutos_agora,0) > 0 LIMIT 1;
					end if;
					
					if (qt_hor_w = 0) then
						insert into prescr_mat_hor(
							nr_sequencia,
							nr_seq_digito,
							nr_prescricao,
							nr_seq_material,
							ie_agrupador,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							ds_horario,
							dt_horario,
							qt_dose,
							qt_dispensar,
							cd_unidade_medida,
							cd_unidade_medida_dose,
							cd_material,
							nr_ocorrencia,
							qt_dispensar_hor,
							ie_urgente,
							ie_horario_especial,
							nr_seq_turno,
							ie_aprazado,
							ie_controlado,
							ie_padronizado,
							ie_classif_urgente,
							ie_dispensar_farm,
							nr_agrupamento,
							ie_adep,
							qt_horario,
							cd_unid_med_hor,
							cd_motivo_baixa,
							dt_suspensao,
							nm_usuario_susp,
							nr_atendimento
							)
						values (	nr_sequencia_w,
							calcula_digito('MODULO11',nr_sequencia_w),
							nr_prescricao_p,
							nr_seq_prescr_w,
							ie_agrupador_w,
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							ds_hora_w,
							dt_horario_w,
							qt_dose_w,
							qt_total_dispensar_w,
							cd_unidade_medida_w,
							cd_unid_med_dose_w,
							cd_material_w,
							nr_ocorrencia_w,
							CASE WHEN cd_motivo_baixa_w=0 THEN  dividir(qt_total_dispensar_w,nr_ocorrencia_w)  ELSE 0 END ,
							ie_urgente_w,
							coalesce(ie_horario_especial_w,'N'),
							Obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,to_char(dt_horario_w,'hh24:mi'),cd_local_estoque_w),
							'N',
							ie_controlado_w,
							ie_padronizado_w,
							ie_classif_urgente_w,
							ie_regra_disp_w,
							nr_agrupamento_w,
							ie_rep_adep_w,
							qt_dose_hor_w,
							cd_unid_med_dose_hor_w,
							cd_motivo_baixa_w,
							dt_suspensao_ww,
							nm_usuario_susp_w,
							nr_atendimento_w
							);
					end if;
				end if;	
				
				/* Diluente item associado - INICIO */

				if (cd_funcao_origem_w = 2314) then
					open C03;
					loop
					fetch C03 into
						ie_agrupador_dil_w,
						nr_sequencia_dil_w,
						qt_dose_dil_w,
						qt_total_disp_dil_w,
						cd_unidade_medida_dil_w,
						cd_unid_med_dose_dil_w,
						nr_ocorrencia_dil_w,
						cd_material_dil_w,
						ie_se_necessario_dil_w,
						ie_acm_dil_w,
						ie_controlado_dil_w,
						ie_padronizado_dil_w,
						ie_regra_disp_dil_w,
						nr_agrupamento_dil_w,
						cd_protocolo_dil_w,
						cd_local_estoque_dil_w,
						cd_motivo_baixa_dil_w,
						qt_unitaria_dil_w,
						dt_suspensao_progr_w,
						dt_suspensao_dil_w,
						nm_usuario_susp_dil_w,
						nr_seq_diluicao_w;
					EXIT WHEN NOT FOUND; /* apply on C03 */
						
						select	nextval('prescr_mat_hor_seq')
						into STRICT	nr_sequencia_w
						;

						--- Rafael em 07/10/2006 Identificar horarios especiais 
						if (ie_se_necessario_dil_w = 'S') or (ie_acm_dil_w = 'S') then
							ie_horario_especial_w	:= 'S';
						else
							ie_horario_especial_w	:= 'N';
						end if;

						if (dt_horario_w < dt_prescricao_ww) and (ie_urgente_w = 'N') then
							dt_horario_w	:= dt_horario_w + 1;
						end if;
						
						if (dt_suspensao_progr_w > dt_horario_w) or (coalesce(dt_suspensao_progr_w::text, '') = '') then					
						
              --- Inicio MD30
							begin
							EXEC_w := 'CALL GER_PRES_MAT_S_DT_LIB_MD_PCK.OBTER_CLASSIF_URGENTE_MD(:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13) INTO :RESULT';

							EXECUTE EXEC_w USING IN 0,
														  IN ie_classif_nao_padrao_w,
														  IN ie_padronizado_dil_w,
														  IN ie_classif_normal_acm_sn_w,
														  IN ie_se_necessario_dil_w,
														  IN ie_acm_dil_w,
														  IN dt_horario_w,
														  IN dt_limite_agora_w,
														  IN ie_urgente_w,
														  IN ie_agora_impressao_w,
														  IN ie_define_agora_w, 
														  IN qt_min_antes_atend_w,
														  IN dt_limite_especial_w,
														  OUT ie_classif_urgente_w;

							exception
							  when others then
								ie_classif_urgente_w := null;
							end;
              --- Fim MD30
							
							if (coalesce(qt_dose_especial_w,0) > 0) and (ie_agrupador_dil_w = 3) then
								nr_ocorrencia_dil_w	:= nr_ocorrencia_dil_w +1;
							end if;
							
							qt_unitaria_dil_w	:= dividir(qt_total_disp_dil_w,nr_ocorrencia_dil_w);
							
							if (coalesce(qt_dose_especial_w,0) > 0) then
								nr_ocorrencia_dil_w	:= nr_ocorrencia_dil_w - 1;
								if (ie_agrupador_dil_w = 9) then
									qt_total_disp_dil_w	:= qt_total_disp_dil_w - (qt_unitaria_dil_w * ceil(qt_dose_especial_w)); --ceil(obter_conversao_unid_med_cons(cd_material_dil_w,cd_unid_med_dose_dil_w,qt_dose_dil_w));
								else
									qt_total_disp_dil_w	:= qt_total_disp_dil_w - ceil(qt_unitaria_dil_w);
								end if;
							end if;
							
							ds_diluicao_w	:= null;
							if (ds_dose_diferenciada_w IS NOT NULL AND ds_dose_diferenciada_w::text <> '') and (vt_dose_diferenciada_w IS NOT NULL AND vt_dose_diferenciada_w::text <> '') and (vt_dose_diferenciada_w.count > 0) and (vt_dose_diferenciada_w[ie_ctrl_loop_ww](.qt_dose_diferenciada IS NOT NULL AND .qt_dose_diferenciada::text <> '')) then
								ds_diluicao_w	:= substr(Obter_Diluicao_Medic_dose(nr_seq_prescr_w, nr_prescricao_p, vt_dose_diferenciada_w[ie_ctrl_loop_ww].qt_dose_diferenciada),1,2000);
							end if;
							
							SELECT * FROM obter_dose_um_horario_pmh(cd_material_dil_w, qt_dose_dil_w, cd_unid_med_dose_dil_w, qt_dose_hor_w, cd_unid_med_dose_hor_w) INTO STRICT qt_dose_hor_w, cd_unid_med_dose_hor_w;
							
							begin
							exec_w := 'begin ger_pres_mat_s_dt_lib_md_pck.obter_ocorr_dil_disp_hor_md(:1,:2,:3,:4,:5,:6,:7,:8); end;';

							EXECUTE exec_w using in 0,
														   in out qt_unitaria_dil_w,
														   in qt_total_disp_dil_w,
														   in ie_agrupador_dil_w,
														   in nr_ocorrencia_w,
														   in qt_unitaria_w,
														   in out qt_dispensar_hor_w,
														   in out nr_ocorrencia_dil_w;
							exception
							  when others then
								qt_dispensar_hor_w  := null;
								nr_ocorrencia_dil_w := null;
							end;
							
							begin
							
							dt_suspensao_w		:= null;
							dt_fim_horario_w	:= null;
							if (ie_copia_status_hor_w	= 'S') and (coalesce(dt_suspensao_dil_w::text, '') = '') then
								select	CASE WHEN max(a.ie_suspenso_adep)='S' THEN max(a.dt_suspensao)  ELSE null END ,
										max(a.dt_fim_horario)
								into STRICT	dt_suspensao_w,
									dt_fim_horario_w
								from	prescr_medica b,
									prescr_mat_hor a
								where	a.nr_prescricao		= b.nr_prescricao
								and	b.nr_atendimento	= nr_atendimento_w
								and	a.ie_agrupador		= ie_agrupador_dil_w
								and	a.dt_horario		= dt_horario_w
								and	a.cd_material		= cd_material_dil_w
								and	a.qt_dose		= qt_dose_dil_w
								and	a.nr_prescricao		<> nr_prescricao_p
								and	a.cd_unidade_medida_dose	= cd_unid_med_dose_dil_w;
							end if;
							
							select	count(*)
							into STRICT	qt_hor_w
							from	prescr_mat_hor where 	nr_prescricao 	= nr_prescricao_p
							and	nr_seq_material	= nr_sequencia_dil_w
							and	dt_horario	= dt_horario_w LIMIT 1;
							
							if (qt_hor_w = 0) then
								select	count(*)
								into STRICT	qt_hor_w
								from	prescr_medica b,
									prescr_mat_hor x where 	x.nr_prescricao		= nr_prescricao_p
								and	b.nr_prescricao		= x.nr_prescricao
								and	x.nr_seq_material	= nr_sequencia_dil_w
								and	(x.dt_lib_horario IS NOT NULL AND x.dt_lib_horario::text <> '')
								and	(b.dt_liberacao_farmacia IS NOT NULL AND b.dt_liberacao_farmacia::text <> '')
								and	(clock_timestamp() + (x.qt_minutos_agora/1440)) > dt_horario_w
								and	coalesce(x.qt_minutos_agora,0) > 0 LIMIT 1;
							end if;
							
							if (qt_hor_w	= 0) and (coalesce(cd_funcao_origem_w,0) = 950) then

								nr_prescricao_original_w	:= PLT_obter_item_orig(nr_prescricao_p, nr_seq_diluicao_w, 'PRESCR_MATERIAL','P');
								nr_seq_anterior_w		:= PLT_obter_item_orig(nr_prescricao_p, nr_seq_diluicao_w, 'PRESCR_MATERIAL','S');
								
								select	count(*)
								into STRICT	qt_hor_w
								from	prescr_medica a,
									prescr_material b,
									prescr_mat_hor c where 	a.nr_prescricao			= b.nr_prescricao
								and	a.nr_prescricao			= c.nr_prescricao
								and	b.nr_prescricao			= c.nr_prescricao
								and	b.nr_sequencia			= c.nr_seq_material
								and	a.nr_atendimento		= nr_atendimento_w
								and	coalesce(b.nr_prescricao_original,b.nr_prescricao)	= nr_prescricao_original_w
								and	coalesce(b.nr_seq_anterior,b.nr_sequencia)		= nr_seq_anterior_w
								and	c.dt_horario			= dt_horario_w
								and	coalesce(c.dt_suspensao::text, '') = ''
								and	coalesce(b.dt_suspensao::text, '') = ''
								--and 	nvl(c.ie_horario_especial,'N')	= ie_horario_especial_w
								and	(c.dt_lib_horario IS NOT NULL AND c.dt_lib_horario::text <> '')
								and	((a.dt_rep_pt	= dt_rep_pt_w - 1) or (coalesce(a.dt_rep_pt2,clock_timestamp())	= coalesce(dt_rep_pt2_w - 1,clock_timestamp())))
								and	coalesce(c.ie_situacao,'A')	<> 'I'
								and	coalesce(a.cd_funcao_origem,924)	= 950 LIMIT 1;
							end if;
							
							if (qt_hor_w = 0) then
							
								insert into prescr_mat_hor(
									nr_sequencia,
									nr_seq_digito,
									nr_prescricao,
									nr_seq_material,
									ie_agrupador,
									dt_atualizacao,
									nm_usuario,
									dt_atualizacao_nrec,
									nm_usuario_nrec,
									ds_horario,
									dt_horario,
									qt_dose,
									qt_dispensar,
									cd_unidade_medida,
									cd_unidade_medida_dose,
									cd_material,
									nr_ocorrencia,
									qt_dispensar_hor,
									ie_urgente,
									ie_horario_especial,
									nr_seq_turno,
									ie_aprazado,
									ie_controlado,
									ie_padronizado,
									ie_classif_urgente,
									ie_dispensar_farm,
									nr_seq_superior,
									nr_agrupamento,
									ie_adep,
									qt_horario,
									cd_unid_med_hor,
									cd_motivo_baixa,
									ds_diluicao,
									dt_suspensao,
									dt_fim_horario,
									nm_usuario_susp,
									nr_atendimento,
									cd_local_estoque_baixa
									)
								values (	nr_sequencia_w,
									calcula_digito('MODULO11',nr_sequencia_w),
									nr_prescricao_p,
									nr_sequencia_dil_w,
									ie_agrupador_dil_w,
									clock_timestamp(),	
									nm_usuario_p,
									clock_timestamp(),
									nm_usuario_p,
									ds_hora_w,
									dt_horario_w,
									qt_dose_dil_w,
									qt_total_disp_dil_w,
									cd_unidade_medida_dil_w,
									cd_unid_med_dose_dil_w,
									cd_material_dil_w,
									nr_ocorrencia_dil_w,
									CASE WHEN cd_motivo_baixa_dil_w=0 THEN  qt_dispensar_hor_w  ELSE 0 END ,
									ie_urgente_w,
									coalesce(ie_horario_especial_w,'N'),
									Obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,to_char(dt_horario_w,'hh24:mi'),cd_local_estoque_dil_w),
									'N',
									ie_controlado_dil_w,
									ie_padronizado_dil_w,
									ie_classif_urgente_w,
									ie_regra_disp_dil_w,
									nr_seq_prescr_w,
									nr_agrupamento_w,
									ie_adep_w,
									qt_dose_hor_w,
									cd_unid_med_dose_hor_w,
									cd_motivo_baixa_dil_w,
									ds_diluicao_w,
									coalesce(dt_suspensao_dil_w,dt_suspensao_w),
									dt_fim_horario_w,
									nm_usuario_susp_dil_w,
									nr_atendimento_w,
									cd_local_estoque_baixa_w);
																
						

							end if;
							exception when others then
								CALL gerar_log_prescricao(nr_prescricao_p, nr_sequencia_dil_w, ie_agrupador_dil_w, null, null, substr(sqlerrm,1,2000), nm_usuario_p, 17039, 'S');
								sqlerrm_w	:= substr(sqlerrm,1,2000);
							end;
						end if;
					end loop;
					close C03;
				end if;	
				/* Diluente item associado - FIM */

				
				
			end loop;
		else
			if (hr_prim_horario_w = '  :  ') then
				hr_prim_horario_w := null;
			end if;
			
			ds_hora_w	:= coalesce(hr_prim_horario_w, substr(to_char(dt_primeiro_horario_w,'dd/mm/yyyy hh24:mi:ss'),12,5));
			dt_horario_w	:= pkg_date_utils.get_time(dt_prescricao_ww, ds_hora_w, 0);
		
			/*Fabio e Jonas - 19/01/2010 = Para gerar os lotes como AGORA dependendo do horario final do turno, e nao mais pelo minutos de agora*/

			if (ie_agora_impressao_w = 'S') then
				nr_seq_turno_hor_ag_w	:= Obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,to_char(dt_horario_w,'hh24:mi'),cd_local_estoque_w);
				select	max(to_char(b.hr_inicial,'hh24:mi')),
					max(to_char(b.hr_final,'hh24:mi'))
				into STRICT	hr_turno_agora_w,
					hr_final_turno_agora_w
				from	regra_turno_disp_param b,
					regra_turno_disp a
				where	a.nr_sequencia		= b.nr_seq_turno
				and	a.cd_estabelecimento	= cd_estabelecimento_w
				and	a.nr_sequencia		= nr_seq_turno_hor_ag_w
				and (coalesce(b.cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0))	= coalesce(cd_setor_atendimento_w,0));

				select	coalesce(max(qt_min_antes_atend), 0),
					coalesce(max(ie_define_agora), 'N')
				into STRICT	qt_min_antes_atend_w,
					ie_define_agora_w
				from	regra_tempo_disp
				where	cd_estabelecimento	= cd_estabelecimento_w
				and (coalesce(cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0)) = coalesce(cd_setor_atendimento_w,0))
				and	nr_seq_turno = nr_seq_turno_hor_ag_w
				and	ie_situacao = 'A';
				
				/*SO-2214423*/

				begin
				  EXEC_W := 'CALL GER_PRES_MAT_S_DT_LIB_MD_PCK.CALCULAR_DT_LIMITE_AGORA_MD(:1,:2,:3,:4,:5) INTO :RESULT';

				  EXECUTE EXEC_W USING IN hr_turno_agora_w,
												 IN hr_final_turno_agora_w,
												 IN dt_inicio_prescr_w,
												 IN qt_min_antes_atend_w,
												 IN dt_horario_w,
												 OUT dt_limite_agora_w;
				exception
				  when others then
					dt_limite_agora_w := null;
				end;				
			end if;
			/*Fabio e Jonas - 19/01/2010 = Final da alteracao*/

			select	nextval('prescr_mat_hor_seq')
			into STRICT	nr_sequencia_w
			;

			/* Rafael em 07/10/2006 Identificar horarios especiais */

			--ie_horario_especial_w	:= 'S';  Alan OS 274114
			if (ie_se_necessario_w = 'S') or (ie_acm_w = 'S') then
				ie_horario_especial_w	:= 'S';
			else
				ie_horario_especial_w	:= 'N';
			end if;

			if (dt_horario_w < dt_prescricao_ww) and (ie_urgente_w = 'N') then
				dt_horario_w	:= dt_horario_w + 1;
			end if;
			
			if (dt_suspensao_progr_w > dt_horario_w) or (coalesce(dt_suspensao_progr_w::text, '') = '') then			
			
        --- Inicio MD33
				begin
				  EXEC_w := 'CALL GER_PRES_MAT_S_DT_LIB_MD_PCK.OBTER_CLASSIF_URGENTE_MD(:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13) INTO :RESULT';

				  EXECUTE EXEC_w USING IN 0,
												 IN ie_classif_nao_padrao_w,
												 IN ie_padronizado_w,
												 IN ie_classif_normal_acm_sn_w,
												 IN ie_se_necessario_w,
												 IN ie_acm_w,
												 IN dt_horario_w,
												 IN dt_limite_agora_w,
												 IN ie_urgente_w,
												 IN ie_agora_impressao_w,
												 IN ie_define_agora_w, 
												 IN qt_min_antes_atend_w,
												 IN dt_limite_especial_w,
												 OUT ie_classif_urgente_w;

				exception
					when others then
					  ie_classif_urgente_w := null;
				end;
        --- Fim MD33
				
				SELECT * FROM obter_dose_um_horario_pmh(cd_material_w, qt_dose_w, cd_unid_med_dose_w, qt_dose_hor_w, cd_unid_med_dose_hor_w) INTO STRICT qt_dose_hor_w, cd_unid_med_dose_hor_w;
				
				select	count(*)
				into STRICT	qt_hor_w
				from	prescr_mat_hor where nr_prescricao 	= nr_prescricao_p
				and	nr_seq_material	= nr_seq_prescr_w
				and	dt_horario	= dt_horario_w LIMIT 1;
				
				if (qt_hor_w = 0) then
					select	count(*)
					into STRICT	qt_hor_w
					from	prescr_medica b,
						prescr_mat_hor x where x.nr_prescricao		= nr_prescricao_p
					and	b.nr_prescricao		= x.nr_prescricao
					and	x.nr_seq_material	= nr_seq_prescr_w
					and	(x.dt_lib_horario IS NOT NULL AND x.dt_lib_horario::text <> '')
					and	(b.dt_liberacao_farmacia IS NOT NULL AND b.dt_liberacao_farmacia::text <> '')
					and	(clock_timestamp() + (x.qt_minutos_agora/1440)) > dt_horario_w
					and	coalesce(x.qt_minutos_agora,0) > 0 LIMIT 1;
				end if;
				
				if (qt_hor_w = 0) then
					insert into prescr_mat_hor(
						nr_sequencia,
						nr_seq_digito,
						nr_prescricao,
						nr_seq_material,
						ie_agrupador,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						ds_horario,
						dt_horario,
						qt_dose,
						qt_dispensar,
						cd_unidade_medida,
						cd_unidade_medida_dose,
						cd_material,
						nr_ocorrencia,
						qt_dispensar_hor,
						ie_urgente,
						ie_horario_especial,
						nr_seq_turno,
						ie_aprazado,
						ie_controlado,
						ie_padronizado,
						ie_classif_urgente,
						ie_dispensar_farm,
						nr_agrupamento,
						ie_adep,
						qt_horario,
						cd_unid_med_hor,
						cd_motivo_baixa,
						dt_suspensao,
						nm_usuario_susp,
						nr_atendimento
						)
					values (	nr_sequencia_w,
						calcula_digito('MODULO11',nr_sequencia_w),
						nr_prescricao_p,
						nr_seq_prescr_w,
						ie_agrupador_w,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						ds_hora_w,
						dt_horario_w,
						qt_dose_w,
						qt_total_dispensar_w,
						cd_unidade_medida_w,
						cd_unid_med_dose_w,
						cd_material_w,
						nr_ocorrencia_w,
						CASE WHEN cd_motivo_baixa_w=0 THEN  dividir(qt_total_dispensar_w,nr_ocorrencia_w)  ELSE 0 END ,
						ie_urgente_w,
						coalesce(ie_horario_especial_w,'S'),
						Obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,to_char(dt_horario_w,'hh24:mi'),cd_local_estoque_w),
						'N',
						ie_controlado_w,
						ie_padronizado_w,
						ie_classif_urgente_w,
						ie_regra_disp_w,
						nr_agrupamento_w,
						ie_rep_adep_w,
						qt_dose_hor_w,
						cd_unid_med_dose_hor_w,
						cd_motivo_baixa_w,
						dt_suspensao_ww,
						nm_usuario_susp_w,
						nr_atendimento_w
						);
						
					
					
				end if;
			end if;	

		end if;

	end loop;
	close C05;
	end;

procedure gerar_hor_dieta is
	begin
	open C06;
	loop
		fetch C06 into
			ie_agrupador_w,
			nr_seq_prescr_w,
			qt_dose_w,
			qt_total_dispensar_w,
			cd_unidade_medida_w,
			cd_unid_med_dose_w,
			nr_ocorrencia_w,
			cd_material_w,	
			ds_horarios_w,
			ds_horarios_padr_w,
			ie_urgente_w,
			ie_se_necessario_w,
			ie_acm_w,
			ie_controlado_w,
			ie_padronizado_w,
			ie_regra_disp_w,
			nr_agrupamento_w,
			cd_protocolo_w,
			cd_local_estoque_w,
			cd_motivo_baixa_w,
			dt_suspensao_progr_w,
			dt_suspensao_ww,
			nm_usuario_susp_w;
		EXIT WHEN NOT FOUND; /* apply on C06 */
		
		-- CPOE_ITEM_AGORA: Tratamento para que somente primeiro horario do item seja de classificacao "Urgente"
		if (cd_funcao_origem_w = 2314) and (ie_urgente_w = 'S') then
			select	coalesce(max('N'),'S')
			into STRICT	ie_urgente_w
			from	prescr_mat_hor x
			where	x.nr_prescricao		= nr_prescricao_p
			and		x.nr_seq_material	= nr_seq_prescr_w
			and		Obter_se_horario_liberado(x.dt_lib_horario, x.dt_horario) = 'S'
			and		coalesce(x.ie_dose_especial,'N')	= 'N'
			and		coalesce(x.dt_suspensao::text, '') = '' LIMIT 1;
		end if;

		qt_dia_adic_w		:= 0;

		dt_prescricao_ww	:= dt_prescricao_w;
		if (ie_urgente_w = 'N') and (cd_funcao_origem_w <> 2314) then
			dt_prescricao_ww	:= dt_inicio_prescr_w;
		end if;
		
		if (ds_horarios_padr_w IS NOT NULL AND ds_horarios_padr_w::text <> '') then
			while	(ds_horarios_padr_w IS NOT NULL AND ds_horarios_padr_w::text <> '') LOOP
			
				k	:= position(' ' in ds_horarios_padr_w);

				if (k > 1) and ((substr(ds_horarios_padr_w, 1, k -1) IS NOT NULL AND (substr(ds_horarios_padr_w, 1, k -1))::text <> '')) then
					ds_hora_w			:= substr(ds_horarios_padr_w, 1, k-1);
					ds_hora_w			:= replace(ds_hora_w, ' ','');
					ds_horarios_padr_w	:= substr(ds_horarios_padr_w, k + 1, 2000);
				elsif (ds_horarios_padr_w IS NOT NULL AND ds_horarios_padr_w::text <> '') then
					ds_hora_w 			:= replace(ds_horarios_padr_w,' ','');
					ds_horarios_padr_w	:= '';
				end if;

				if	((ie_urgente_w = 'N') or (cd_funcao_origem_w = 2314)) then
					if (position('A' in ds_hora_w) > 0) and (qt_dia_adic_w = 0) then
						qt_dia_adic_w	:= 1;
					elsif (position('AA' in ds_hora_w) > 0) then

						qt_dia_adic_w	:= qt_dia_adic_w + 1;
					end if;
				end if;
		
				ds_hora_w	:= replace(ds_hora_w,'A','');
				ds_hora_w	:= replace(ds_hora_w,'A','');
				
				if (ie_urgente_w	= 'S') then
					dt_libe_w	:= dt_liberacao_w;
					if (ie_momento_lote_w = 'F') and (dt_liberacao_farmacia_w IS NOT NULL AND dt_liberacao_farmacia_w::text <> '') then
						select	max(dt_liberacao)
						into STRICT	dt_libe_w
						from	prescr_medica
						where	nr_prescricao	= nr_prescricao_p;
					elsif (ie_momento_lote_w = 'M') and (dt_liberacao_medico_w IS NOT NULL AND dt_liberacao_medico_w::text <> '') then
						dt_liberacao_w	:= dt_liberacao_medico_w;
					end if;
					dt_prescricao_ww	:= coalesce(dt_libe_w,dt_prescricao_ww);
				else
					dt_prescricao_ww	:= dt_prescricao_w;
				end if;
				
				dt_horario_w	:= pkg_date_utils.get_time(dt_prescricao_ww + qt_dia_adic_w, replace(ds_hora_w,'A',''), 0);
				
				/*Fabio e Jonas - 19/01/2010 = Para gerar os lotes como AGORA dependendo do horario final do turno, e nao mais pelo minutos de agora*/

				if (ie_agora_impressao_w = 'S') then
					nr_seq_turno_hor_ag_w	:= Obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,to_char(dt_horario_w,'hh24:mi'),cd_local_estoque_w);
					select	max(to_char(b.hr_inicial,'hh24:mi')),
						max(to_char(b.hr_final,'hh24:mi'))
					into STRICT	hr_turno_agora_w,
						hr_final_turno_agora_w
					from	regra_turno_disp_param b,
						regra_turno_disp a
					where	a.nr_sequencia		= b.nr_seq_turno
					and	a.cd_estabelecimento	= cd_estabelecimento_w
					and	a.nr_sequencia			= nr_seq_turno_hor_ag_w
					and (coalesce(b.cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0))	= coalesce(cd_setor_atendimento_w,0));

					select	coalesce(max(qt_min_antes_atend), 0),
						coalesce(max(ie_define_agora), 'N')
					into STRICT	qt_min_antes_atend_w,
						ie_define_agora_w
					from	regra_tempo_disp
					where	cd_estabelecimento	= cd_estabelecimento_w
					and (coalesce(cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0)) = coalesce(cd_setor_atendimento_w,0))
					and	nr_seq_turno = nr_seq_turno_hor_ag_w
					and	ie_situacao  = 'A';
					
					/*SO-2214423*/

					begin
					EXEC_W := 'CALL GER_PRES_MAT_S_DT_LIB_MD_PCK.CALCULAR_DT_LIMITE_AGORA_MD(:1,:2,:3,:4,:5) INTO :RESULT';

					EXECUTE EXEC_W USING IN hr_turno_agora_w,
												   IN hr_final_turno_agora_w,
												   IN dt_inicio_prescr_w,
												   IN qt_min_antes_atend_w,
												   IN dt_horario_w,
												   OUT dt_limite_agora_w;
					exception
					when others then
					  dt_limite_agora_w := null;
					end;
				end if;
				/*Fabio e Jonas - 19/01/2010 = Final da alteracao*/

				
				
				select	nextval('prescr_mat_hor_seq')
				into STRICT	nr_sequencia_w
				;
				
				/* Rafael em 07/10/2006 Identificar horarios especiais */

				if (ie_se_necessario_w = 'S') or (ie_acm_w = 'S') then
					ie_horario_especial_w	:= 'S';
				else
					ie_horario_especial_w	:= 'N';
				end if;

				/*SO-2214423*/

				if	((dt_horario_w < dt_prescricao_ww) or (ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_horario_w) < ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_prev_execucao_w))) and (ie_urgente_w = 'N') then
					dt_horario_w	:= dt_horario_w + 1;
				end if;

				if (dt_suspensao_progr_w > dt_horario_w) or (coalesce(dt_suspensao_progr_w::text, '') = '') then
				
					begin
					EXEC_w := 'CALL GER_PRES_MAT_S_DT_LIB_MD_PCK.OBTER_CLASSIF_URGENTE_MD(:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13) INTO :RESULT';

					EXECUTE EXEC_w USING IN 0,
												   IN ie_classif_nao_padrao_w,
												   IN ie_padronizado_w,
												   IN ie_classif_normal_acm_sn_w,
												   IN ie_se_necessario_w,
												   IN ie_acm_w,
												   IN dt_horario_w,
												   IN dt_limite_agora_w,
												   IN ie_urgente_w,
												   IN ie_agora_impressao_w,
												   IN ie_define_agora_w, 
												   IN qt_min_antes_atend_w,
												   IN dt_limite_especial_w,
												   OUT ie_classif_urgente_w;

					exception
					  when others then
						ie_classif_urgente_w := null;
					end;
					
					SELECT * FROM obter_dose_um_horario_pmh(cd_material_w, qt_dose_w, cd_unid_med_dose_w, qt_dose_hor_w, cd_unid_med_dose_hor_w) INTO STRICT qt_dose_hor_w, cd_unid_med_dose_hor_w;
					
					select	count(*)
					into STRICT	qt_hor_w
					from	prescr_mat_hor where nr_prescricao 	= nr_prescricao_p
					and	nr_seq_material	= nr_seq_prescr_w
					and	dt_horario		= dt_horario_w LIMIT 1;
					
					if (qt_hor_w = 0) then
						select	count(*)
						into STRICT	qt_hor_w
						from	prescr_medica b,
							prescr_mat_hor x where x.nr_prescricao		= nr_prescricao_p
						and	b.nr_prescricao		= x.nr_prescricao
						and	x.nr_seq_material	= nr_seq_prescr_w
						and	(x.dt_lib_horario IS NOT NULL AND x.dt_lib_horario::text <> '')
						and	(b.dt_liberacao_farmacia IS NOT NULL AND b.dt_liberacao_farmacia::text <> '')
						and	(clock_timestamp() + (x.qt_minutos_agora/1440)) > dt_horario_w
						and	coalesce(x.qt_minutos_agora,0) > 0 LIMIT 1;
					end if;
					
					if (qt_hor_w = 0) then
						insert into prescr_mat_hor(
							nr_sequencia,
							nr_seq_digito,
							nr_prescricao,
							nr_seq_material,
							ie_agrupador,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							ds_horario,
							dt_horario,
							qt_dose,
							qt_dispensar,
							cd_unidade_medida,
							cd_unidade_medida_dose,
							cd_material,
							nr_ocorrencia,
							qt_dispensar_hor,
							ie_urgente,
							ie_horario_especial,
							nr_seq_turno,
							ie_aprazado,
							ie_controlado,
							ie_padronizado,
							ie_classif_urgente,
							ie_dispensar_farm,
							nr_agrupamento,
							ie_adep,
							qt_horario,
							cd_unid_med_hor,
							cd_motivo_baixa,
							dt_suspensao,
							nm_usuario_susp,
							nr_atendimento
							)
						values (	nr_sequencia_w,
							calcula_digito('MODULO11',nr_sequencia_w),
							nr_prescricao_p,
							nr_seq_prescr_w,
							ie_agrupador_w,
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							ds_hora_w,
							dt_horario_w,
							qt_dose_w,
							qt_total_dispensar_w,
							cd_unidade_medida_w,
							cd_unid_med_dose_w,
							cd_material_w,
							nr_ocorrencia_w,
							CASE WHEN cd_motivo_baixa_w=0 THEN  dividir(qt_total_dispensar_w,nr_ocorrencia_w)  ELSE 0 END ,
							ie_urgente_w,
							coalesce(ie_horario_especial_w,'N'),
							Obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,to_char(dt_horario_w,'hh24:mi'),cd_local_estoque_w),
							'N',
							ie_controlado_w,
							ie_padronizado_w,
							ie_classif_urgente_w,
							ie_regra_disp_w,
							nr_agrupamento_w,
							ie_rep_adep_w,
							qt_dose_hor_w,
							cd_unid_med_dose_hor_w,
							cd_motivo_baixa_w,
							dt_suspensao_ww,
							nm_usuario_susp_w,
							nr_atendimento_w
							);
							
						
					end if;
				end if;	
				
				/* CPOE_ITEM_AGORA: Tratamento para que somente primeiro horario do item seja de classificacao "Urgente" */

				if (cd_funcao_origem_w = 2314) and (ie_urgente_w = 'S') then
					
					select count(nr_prescricao)
					  into STRICT qt_liberado_w
					  from prescr_mat_hor x
					 where x.nr_prescricao = nr_prescricao_p
					   and x.nr_seq_material = nr_seq_prescr_w
					   and Obter_se_horario_liberado(x.dt_lib_horario, x.dt_horario) = 'S'
					   and coalesce(x.ie_dose_especial, 'N')	= 'N'
					   and coalesce(x.dt_suspensao::text, '') = '' LIMIT 1;

					if (((coalesce(ie_regra_agora_w, 'N') = 'N') and (qt_liberado_w > 0)) or (qt_liberado_w = nr_ocorrencia_w)) then
						ds_horarios_padr_w := '';
					end if;

				end if;

			end loop;
		else
		
			if (ie_urgente_w	= 'S') then
				dt_libe_w	:= dt_liberacao_w;
				if (ie_momento_lote_w = 'F') and (dt_liberacao_farmacia_w IS NOT NULL AND dt_liberacao_farmacia_w::text <> '') then
					select	max(dt_liberacao)
					into STRICT	dt_libe_w
					from	prescr_medica
					where	nr_prescricao	= nr_prescricao_p;
				elsif (ie_momento_lote_w = 'M') and (dt_liberacao_medico_w IS NOT NULL AND dt_liberacao_medico_w::text <> '') then
					dt_liberacao_w	:= dt_liberacao_medico_w;
				end if;
				dt_prescricao_ww	:= coalesce(dt_libe_w,dt_prescricao_ww);
			end if;

			ds_hora_w	:= to_char(dt_primeiro_horario_w,'hh24:mi');
			dt_horario_w	:= pkg_date_utils.get_time(dt_prescricao_ww, ds_hora_w, 0);

			/*Fabio e Jonas - 19/01/2010 = Para gerar os lotes como AGORA dependendo do horario final do turno, e nao mais pelo minutos de agora*/

			if (ie_agora_impressao_w = 'S') then
				nr_seq_turno_hor_ag_w	:= Obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,to_char(dt_horario_w,'hh24:mi'),cd_local_estoque_w);
				select	max(to_char(b.hr_inicial,'hh24:mi')),
					max(to_char(b.hr_final,'hh24:mi'))
				into STRICT	hr_turno_agora_w,
					hr_final_turno_agora_w
				from	regra_turno_disp_param b,
					regra_turno_disp a
				where	a.nr_sequencia		= b.nr_seq_turno
				and	a.cd_estabelecimento	= cd_estabelecimento_w
				and	a.nr_sequencia			= nr_seq_turno_hor_ag_w
				and (coalesce(b.cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0))	= coalesce(cd_setor_atendimento_w,0));

				select	coalesce(max(qt_min_antes_atend), 0),
					coalesce(max(ie_define_agora), 'N')
				into STRICT	qt_min_antes_atend_w,
					ie_define_agora_w
				from	regra_tempo_disp
				where	cd_estabelecimento	= cd_estabelecimento_w
				and (coalesce(cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0)) = coalesce(cd_setor_atendimento_w,0))
				and	nr_seq_turno = nr_seq_turno_hor_ag_w
				and	ie_situacao = 'A';
			
				/*SO-2214423*/

				begin
				  EXEC_W := 'CALL GER_PRES_MAT_S_DT_LIB_MD_PCK.CALCULAR_DT_LIMITE_AGORA_MD(:1,:2,:3,:4,:5) INTO :RESULT';

				  EXECUTE EXEC_W USING IN hr_turno_agora_w,
												 IN hr_final_turno_agora_w,
												 IN dt_inicio_prescr_w,
												 IN qt_min_antes_atend_w,
												 IN dt_horario_w,
												 OUT dt_limite_agora_w;
				exception
				  when others then
					dt_limite_agora_w := null;
				end;
			end if;
			/*Fabio e Jonas - 19/01/2010 = Final da alteracao*/

			select	nextval('prescr_mat_hor_seq')
			into STRICT	nr_sequencia_w
			;

			/* Rafael em 07/10/2006 Identificar horarios especiais */

			if (ie_se_necessario_w = 'S') or (ie_acm_w = 'S') then
				ie_horario_especial_w	:= 'S';
			else

				ie_horario_especial_w	:= 'N';
			end if;

			if (dt_horario_w < dt_prescricao_ww) and (ie_urgente_w = 'N') then
				dt_horario_w	:= dt_horario_w + 1;
			end if;

			if (dt_suspensao_progr_w > dt_horario_w) or (coalesce(dt_suspensao_progr_w::text, '') = '') then
		
        --- Inicio MD37
				begin
				  EXEC_w := 'CALL GER_PRES_MAT_S_DT_LIB_MD_PCK.OBTER_CLASSIF_URGENTE_MD(:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13) INTO :RESULT';

				  EXECUTE EXEC_w USING IN 0,
												 IN ie_classif_nao_padrao_w,
												 IN ie_padronizado_w,
												 IN ie_classif_normal_acm_sn_w,
												 IN ie_se_necessario_w,
												 IN ie_acm_w,
												 IN dt_horario_w,
												 IN dt_limite_agora_w,
												 IN ie_urgente_w,
												 IN ie_agora_impressao_w,
												 IN ie_define_agora_w, 
												 IN qt_min_antes_atend_w,
												 IN dt_limite_especial_w,
												 OUT ie_classif_urgente_w;

				exception
					when others then
					  ie_classif_urgente_w := null;
				end;
        --- Fim MD37
		
				SELECT * FROM obter_dose_um_horario_pmh(cd_material_w, qt_dose_w, cd_unid_med_dose_w, qt_dose_hor_w, cd_unid_med_dose_hor_w) INTO STRICT qt_dose_hor_w, cd_unid_med_dose_hor_w;

				select	count(*)
				into STRICT	qt_hor_w
				from	prescr_mat_hor where		nr_prescricao 	= nr_prescricao_p
				and	nr_seq_material		= nr_seq_prescr_w
				and	dt_horario			= dt_horario_w LIMIT 1;
			
				if (qt_hor_w = 0) then
					select	count(*)
					into STRICT	qt_hor_w
					from	prescr_medica b,
						prescr_mat_hor x where x.nr_prescricao		= nr_prescricao_p
					and	b.nr_prescricao		= x.nr_prescricao
					and	x.nr_seq_material	= nr_seq_prescr_w
					and	(x.dt_lib_horario IS NOT NULL AND x.dt_lib_horario::text <> '')
					and	(b.dt_liberacao_farmacia IS NOT NULL AND b.dt_liberacao_farmacia::text <> '')
					and	(clock_timestamp() + (x.qt_minutos_agora/1440)) > dt_horario_w
					and	coalesce(x.qt_minutos_agora,0) > 0 LIMIT 1;
				end if;
			
			
				if (qt_hor_w = 0) then
					insert into prescr_mat_hor(
						nr_sequencia,
						nr_seq_digito,
						nr_prescricao,
						nr_seq_material,
						ie_agrupador,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						ds_horario,
						dt_horario,
						qt_dose,
						qt_dispensar,
						cd_unidade_medida,
						cd_unidade_medida_dose,
						cd_material,
						nr_ocorrencia,
						qt_dispensar_hor,
						ie_urgente,
						ie_horario_especial,
						nr_seq_turno,
						ie_aprazado,
						ie_controlado,
						ie_padronizado,
						ie_classif_urgente,
						ie_dispensar_farm,
						nr_agrupamento,
						ie_adep,
						qt_horario,
						cd_unid_med_hor,
						cd_motivo_baixa,
						dt_suspensao,
						nm_usuario_susp,
						nr_atendimento
						)

					values (	nr_sequencia_w,
						calcula_digito('MODULO11',nr_sequencia_w),
						nr_prescricao_p,
						nr_seq_prescr_w,
						ie_agrupador_w,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						ds_hora_w,
						dt_horario_w,
						qt_dose_w,
						qt_total_dispensar_w,
						cd_unidade_medida_w,
						cd_unid_med_dose_w,
						cd_material_w,
						nr_ocorrencia_w,
						CASE WHEN cd_motivo_baixa_w=0 THEN  dividir(qt_total_dispensar_w,nr_ocorrencia_w)  ELSE 0 END ,
						ie_urgente_w,
						coalesce(ie_horario_especial_w,'N'),
						Obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,to_char(dt_horario_w,'hh24:mi'),cd_local_estoque_w),
						'N',
						ie_controlado_w,
						ie_padronizado_w,
						ie_classif_urgente_w,
						ie_regra_disp_w,
						nr_agrupamento_w,
						ie_rep_adep_w,
						qt_dose_hor_w,
						cd_unid_med_dose_hor_w,
						cd_motivo_baixa_w,
						dt_suspensao_ww,
						nm_usuario_susp_w,
						nr_atendimento_w
						);

					
					
				
				end if;
			end if;
		end if;		
	end loop;
	close C06;
	end;

procedure gerar_hor_sne is
	begin
	open C08;
	loop
	fetch C08 into
		ie_agrupador_w,
		nr_seq_prescr_w,
		qt_dose_w,
		qt_total_dispensar_w,
		cd_unidade_medida_w,
		cd_unid_med_dose_w,
		nr_ocorrencia_w,
		cd_material_w,
		ds_horarios_w,
		ds_horarios_padr_w,
		cd_intervalo_w,
		hr_prim_horario_w,
		ie_urgente_w,
		ie_se_necessario_w,
		ie_acm_w,
		ie_controlado_w,
		ie_padronizado_w,
		ie_regra_disp_w,
		nr_agrupamento_w,
		cd_protocolo_w,
		cd_local_estoque_w,
		cd_motivo_baixa_w,
		qt_dose_especial_w,
		hr_dose_especial_w,
		dt_suspensao_progr_w,
		dt_suspensao_ww,
		nm_usuario_susp_w;
	EXIT WHEN NOT FOUND; /* apply on C08 */
	
		-- CPOE_ITEM_AGORA: Tratamento para que somente primeiro horario do item seja de classificacao "Urgente"
		if (cd_funcao_origem_w = 2314) and (ie_urgente_w = 'S') then
			select	coalesce(max('N'),'S')
			into STRICT	ie_urgente_w
			from	prescr_mat_hor x
			where	x.nr_prescricao		= nr_prescricao_p
			and		x.nr_seq_material	= nr_seq_prescr_w
			and		Obter_se_horario_liberado(x.dt_lib_horario, x.dt_horario) = 'S'
			and		coalesce(x.ie_dose_especial,'N')	= 'N'
			and		coalesce(x.dt_suspensao::text, '') = '' LIMIT 1;
		end if;

		dt_prescricao_ww	:= dt_prescricao_w;
		if (ie_urgente_w = 'N') and (cd_funcao_origem_w <> 2314) then
			dt_prescricao_ww	:= dt_inicio_prescr_w;
		end if;

		qt_dia_adic_w	:= 0;
		nr_etapa_sol_w := 1;
		if (qt_dose_especial_w IS NOT NULL AND qt_dose_especial_w::text <> '') then
			select	coalesce(max(qt_conversao),1)
			into STRICT	qt_conversao_w
			from	material_conversao_unidade
			where	cd_material		= cd_material_w
			and	cd_unidade_medida	= cd_unid_med_dose_w;
				
			begin
			exec_w := 'begin ger_pres_mat_s_dt_lib_md_pck.obter_dose_esp_disp_horar_md(:1,:2,:3,:4,:5,:6,:7); end;';

			EXECUTE exec_w using in dt_prescricao_w,
										   in hr_dose_especial_w,
										   in qt_conversao_w,
										   in out qt_dose_especial_w,
										   in out qt_total_dispensar_w,
										   out qt_dose_www,
										   out dt_horario_w;
			exception
			  when others then
				qt_dose_especial_w   := null;
				qt_total_dispensar_w := null;
				qt_dose_www          := null;
				dt_horario_w         := null;
			end;

			/*Fabio e Jonas - 19/01/2010 = Para gerar os lotes como AGORA dependendo do horario final do turno, e nao mais pelo minutos de agora*/

			if (ie_agora_impressao_w = 'S') then
				nr_seq_turno_hor_ag_w	:= Obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,to_char(dt_horario_w,'hh24:mi'),cd_local_estoque_w);
				select	max(to_char(b.hr_inicial,'hh24:mi')),
					max(to_char(b.hr_final,'hh24:mi'))
				into STRICT	hr_turno_agora_w,
					hr_final_turno_agora_w
				from	regra_turno_disp_param b,
					regra_turno_disp a
				where	a.nr_sequencia		= b.nr_seq_turno
				and	a.cd_estabelecimento	= cd_estabelecimento_w
				and	a.nr_sequencia		= nr_seq_turno_hor_ag_w
				and (coalesce(b.cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0))	= coalesce(cd_setor_atendimento_w,0));

				select	coalesce(max(qt_min_antes_atend), 0),
					coalesce(max(ie_define_agora), 'N')
				into STRICT	qt_min_antes_atend_w,
					ie_define_agora_w
				from	regra_tempo_disp
				where	cd_estabelecimento	= cd_estabelecimento_w
				and (coalesce(cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0)) = coalesce(cd_setor_atendimento_w,0))
				and	nr_seq_turno = nr_seq_turno_hor_ag_w
				and	ie_situacao = 'A';
				
				/*SO-2214423*/

				begin
				  exec_w := 'call ger_pres_mat_s_dt_lib_md_pck.calcular_dt_limite_agora_md(:1,:2,:3,:4,:5) into :result';

				  EXECUTE exec_w using in hr_turno_agora_w,
												 in hr_final_turno_agora_w,
												 in dt_inicio_prescr_w,
												 in qt_min_antes_atend_w,
												 in dt_horario_w,
												 out dt_limite_agora_w;
				exception
				  when others then
					dt_limite_agora_w := null;
				end;				
			end if;
			/*Fabio e Jonas - 19/01/2010 = Final da alteracao*/

			select	nextval('prescr_mat_hor_seq')
			into STRICT	nr_sequencia_w
			;

			ie_horario_especial_w := 'N';

			if (dt_horario_w < dt_prescricao_w) and (ie_urgente_w = 'N') then
				dt_horario_w	:= dt_horario_w + 1;
			end if;

			if (dt_suspensao_progr_w > dt_horario_w) or (coalesce(dt_suspensao_progr_w::text, '') = '') then
			
				begin
					exec_w := 'call ger_pres_mat_s_dt_lib_md_pck.obter_classif_urgente_md(:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13) into :result';

					EXECUTE exec_w using in 0,
												 in ie_classif_nao_padrao_w,
												 in ie_padronizado_w,
												 in ie_classif_normal_acm_sn_w,
												 in ie_se_necessario_w,
												 in ie_acm_w,
												 in dt_horario_w,
												 in dt_limite_agora_w,
												 in ie_urgente_w,
												 in ie_agora_impressao_w,
												 in ie_define_agora_w, 
												 in qt_min_antes_atend_w,
												 in dt_limite_especial_w,
												 out ie_classif_urgente_w;

				exception
					when others then
						ie_classif_urgente_w := null;
				end;
				
				SELECT * FROM obter_dose_um_horario_pmh(cd_material_w, qt_dose_www, cd_unid_med_dose_w, qt_dose_hor_w, cd_unid_med_dose_hor_w) INTO STRICT qt_dose_hor_w, cd_unid_med_dose_hor_w;
				
				qt_jejum_w	:= 0;
				if (qt_jejum_w = 0) or (ie_contem_jejum_nut_w = 'S') or (qt_dose_especial_w > 0) then
					select	count(*)
					into STRICT	qt_hor_w
					from	prescr_mat_hor where		nr_prescricao 	= nr_prescricao_p
					and	nr_seq_material	= nr_seq_prescr_w
					and	dt_horario	= dt_horario_w LIMIT 1;
					
					if (qt_hor_w = 0) then
						select	count(*)
						into STRICT	qt_hor_w
						from	prescr_medica b,
							prescr_mat_hor x where		x.nr_prescricao		= nr_prescricao_p
						and	b.nr_prescricao		= x.nr_prescricao
						and	x.nr_seq_material	= nr_seq_prescr_w
						and	(x.dt_lib_horario IS NOT NULL AND x.dt_lib_horario::text <> '')
						and	(b.dt_liberacao_farmacia IS NOT NULL AND b.dt_liberacao_farmacia::text <> '')
						and	(clock_timestamp() + (x.qt_minutos_agora/1440)) > dt_horario_w
						and	coalesce(x.qt_minutos_agora,0) > 0 LIMIT 1;
					end if;
					
					if (qt_hor_w = 0) then
						insert into prescr_mat_hor(
							nr_sequencia,
							nr_seq_digito,
							nr_prescricao,
							nr_seq_material,
							ie_agrupador,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							ds_horario,
							dt_horario,
							qt_dose,
							qt_dispensar,
							cd_unidade_medida,
							cd_unidade_medida_dose,
							cd_material,
							nr_ocorrencia,
							qt_dispensar_hor,
							ie_urgente,
							ie_horario_especial,
							nr_seq_turno,
							ie_aprazado,
							ie_dose_especial,
							ie_controlado,
							ie_padronizado,
							ie_classif_urgente,
							ie_dispensar_farm,
							nr_agrupamento,
							ie_adep,
							qt_horario,
							cd_unid_med_hor,
							cd_motivo_baixa,
							NR_ETAPA_SOL,
							dt_suspensao,
							nm_usuario_susp,
							nr_atendimento
							)
						values (	nr_sequencia_w,
							calcula_digito('MODULO11',nr_sequencia_w),
							nr_prescricao_p,
							nr_seq_prescr_w,
							ie_agrupador_w,
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							hr_dose_especial_w,
							dt_horario_w,
							qt_dose_www,
							qt_dose_especial_w,
							cd_unidade_medida_w,
							cd_unid_med_dose_w,
							cd_material_w,
							1,
							CASE WHEN cd_motivo_baixa_w=0 THEN  qt_dose_especial_w  ELSE 0 END ,
							ie_urgente_w,
							coalesce(ie_horario_especial_w,'N'),
							Obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,hr_dose_especial_w,cd_local_estoque_w),
							'N',
							'S',
							ie_controlado_w,
							ie_padronizado_w,
							ie_classif_urgente_w,
							ie_regra_disp_w,
							nr_agrupamento_w,
							ie_rep_adep_w,
							qt_dose_hor_w,
							cd_unid_med_dose_hor_w,
							cd_motivo_baixa_w,
							nr_etapa_sol_w,
							dt_suspensao_ww,
							nm_usuario_susp_w,
							nr_atendimento_w);
							
						nr_etapa_sol_w := nr_etapa_sol_w +1;
					end if;
				end if;
			end if;	
		end if;

		select	coalesce(max(ie_prescricao_dieta),'I')
		into STRICT	ie_prescricao_dieta_w
		from	intervalo_prescricao
		where	cd_intervalo	= cd_intervalo_w;
		
		if (ds_horarios_padr_w IS NOT NULL AND ds_horarios_padr_w::text <> '') and (ds_horarios_padr_w <> '  :  ') then
			while	(ds_horarios_padr_w IS NOT NULL AND ds_horarios_padr_w::text <> '') LOOP
				k	:= position(' ' in ds_horarios_padr_w);

				if (k > 1) and ((substr(ds_horarios_padr_w, 1, k -1) IS NOT NULL AND (substr(ds_horarios_padr_w, 1, k -1))::text <> '')) then
					ds_hora_w		:= substr(ds_horarios_padr_w, 1, k-1);
					ds_hora_w		:= replace(ds_hora_w, ' ','');
					ds_horarios_padr_w	:= substr(ds_horarios_padr_w, k + 1, 2000);
				elsif (ds_horarios_padr_w IS NOT NULL AND ds_horarios_padr_w::text <> '') then
					ds_hora_w 		:= replace(ds_horarios_padr_w,' ','');
					ds_horarios_padr_w	:= '';
				end if;

				if	((ie_urgente_w = 'N') or (cd_funcao_origem_w = 2314)) then
					if (position('A' in ds_hora_w) > 0) and (qt_dia_adic_w = 0) then
						qt_dia_adic_w	:= 1;
					elsif (position('AA' in ds_hora_w) > 0) then

						qt_dia_adic_w	:= qt_dia_adic_w + 1;
					end if;
				end if;

				ds_hora_w	:= replace(ds_hora_w,'A','');
				ds_hora_w	:= replace(ds_hora_w,'A','');

				if (ie_urgente_w	= 'S') then
					dt_libe_w	:= dt_liberacao_w;
					if (ie_momento_lote_w = 'F') and (dt_liberacao_farmacia_w IS NOT NULL AND dt_liberacao_farmacia_w::text <> '') then
						select	max(dt_liberacao)
						into STRICT	dt_libe_w
						from	prescr_medica
						where	nr_prescricao	= nr_prescricao_p;
					elsif (ie_momento_lote_w = 'M') and (dt_liberacao_medico_w IS NOT NULL AND dt_liberacao_medico_w::text <> '') then
						dt_liberacao_w	:= dt_liberacao_medico_w;
					end if;
					dt_prescricao_ww	:= coalesce(dt_libe_w,dt_prescricao_ww);
				else
					dt_prescricao_ww	:= coalesce(dt_inicio_prescr_w,dt_prescricao_w);
				end if;

				dt_horario_w	:= pkg_date_utils.get_time(dt_prescricao_ww + qt_dia_adic_w, replace(ds_hora_w,'A',''), 0);

				if	((ie_prescricao_dieta_w not in ('I','H')) and (coalesce(ie_param24_cpoe_w, 'N') = 'N')) then
					ds_horarios_padr_w	:= '';
				end if;

				/*Fabio e Jonas - 19/01/2010 = Para gerar os lotes como AGORA dependendo do horario final do turno, e nao mais pelo minutos de agora*/

				if (ie_agora_impressao_w = 'S') then
					nr_seq_turno_hor_ag_w	:= Obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,to_char(dt_horario_w,'hh24:mi'),cd_local_estoque_w);
					select	max(to_char(b.hr_inicial,'hh24:mi')),
						max(to_char(b.hr_final,'hh24:mi'))
					into STRICT	hr_turno_agora_w,
						hr_final_turno_agora_w
					from	regra_turno_disp_param b,
						regra_turno_disp a
					where	a.nr_sequencia		= b.nr_seq_turno
					and	a.cd_estabelecimento	= cd_estabelecimento_w
					and	a.nr_sequencia		= nr_seq_turno_hor_ag_w
					and (coalesce(b.cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0))	= coalesce(cd_setor_atendimento_w,0));

					select	coalesce(max(qt_min_antes_atend), 0),
						coalesce(max(ie_define_agora), 'N')
					into STRICT	qt_min_antes_atend_w,
						ie_define_agora_w
					from	regra_tempo_disp
					where	cd_estabelecimento	= cd_estabelecimento_w
					and (coalesce(cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0)) = coalesce(cd_setor_atendimento_w,0))
					and	nr_seq_turno = nr_seq_turno_hor_ag_w
					and	ie_situacao = 'A';
					
					/*SO-2214423*/

					begin
						exec_w := 'call ger_pres_mat_s_dt_lib_md_pck.calcular_dt_limite_agora_md(:1,:2,:3,:4,:5) into :result';

						EXECUTE exec_w using in hr_turno_agora_w,
													   in hr_final_turno_agora_w,
													   in dt_inicio_prescr_w,
													   in qt_min_antes_atend_w,
													   in dt_horario_w,
													   out dt_limite_agora_w;
					exception
					when others then
					  dt_limite_agora_w := null;
					end;
				end if;
				/*Fabio e Jonas - 19/01/2010 = Final da alteracao*/

				select	nextval('prescr_mat_hor_seq')
				into STRICT	nr_sequencia_w
				;

				/* Rafael em 07/10/2006 Identificar horarios especiais */

				if (ie_se_necessario_w = 'S') or (ie_acm_w = 'S') then
					ie_horario_especial_w	:= 'S';
				else
					ie_horario_especial_w	:= 'N';
				end if;

				if (dt_horario_w < dt_prescricao_ww) and (ie_urgente_w = 'N') then
					dt_horario_w	:= dt_horario_w + 1;
				end if;

				if (dt_suspensao_progr_w > dt_horario_w) or (coalesce(dt_suspensao_progr_w::text, '') = '') then
				
					begin
						exec_w := 'call ger_pres_mat_s_dt_lib_md_pck.obter_classif_urgente_md(:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13) into :result';

						EXECUTE exec_w using in 0,
													   in ie_classif_nao_padrao_w,
													   in ie_padronizado_w,
													   in ie_classif_normal_acm_sn_w,
													   in ie_se_necessario_w,
													   in ie_acm_w,
													   in dt_horario_w,
													   in dt_limite_agora_w,
													   in ie_urgente_w,
													   in ie_agora_impressao_w,
													   in ie_define_agora_w, 
													   in qt_min_antes_atend_w,
													   in dt_limite_especial_w,
													   out ie_classif_urgente_w;

					exception
					  when others then
						ie_classif_urgente_w := null;
					end;
					
					SELECT * FROM obter_dose_um_horario_pmh(cd_material_w, qt_dose_w, cd_unid_med_dose_w, qt_dose_hor_w, cd_unid_med_dose_hor_w) INTO STRICT qt_dose_hor_w, cd_unid_med_dose_hor_w;
					
					qt_jejum_w	:= 0;
			
					if (qt_jejum_w = 0) or (ie_contem_jejum_nut_w = 'S') or (qt_dose_especial_w > 0) then
						
						select	count(*)
						into STRICT	qt_hor_w
						from	prescr_mat_hor where		nr_prescricao 	= nr_prescricao_p
						and	nr_seq_material	= nr_seq_prescr_w
						and	dt_horario	= dt_horario_w LIMIT 1;
						
						if (qt_hor_w = 0) then
							select	count(*)
							into STRICT	qt_hor_w
							from	prescr_medica b,
								prescr_mat_hor x where		x.nr_prescricao		= nr_prescricao_p
							and	b.nr_prescricao		= x.nr_prescricao
							and	x.nr_seq_material	= nr_seq_prescr_w
							and	(x.dt_lib_horario IS NOT NULL AND x.dt_lib_horario::text <> '')
							and	(b.dt_liberacao_farmacia IS NOT NULL AND b.dt_liberacao_farmacia::text <> '')
							and	(clock_timestamp() + (x.qt_minutos_agora/1440)) > dt_horario_w
							and	coalesce(x.qt_minutos_agora,0) > 0 LIMIT 1;
						end if;
						
						if (qt_hor_w = 0) then
						
							insert into prescr_mat_hor(
								nr_sequencia,
								nr_seq_digito,
								nr_prescricao,
								nr_seq_material,
								ie_agrupador,
								dt_atualizacao,
								nm_usuario,
								dt_atualizacao_nrec,
								nm_usuario_nrec,
								ds_horario,
								dt_horario,
								qt_dose,
								qt_dispensar,
								cd_unidade_medida,
								cd_unidade_medida_dose,
								cd_material,
								nr_ocorrencia,
								qt_dispensar_hor,
								ie_urgente,
								ie_horario_especial,
								nr_seq_turno,
								ie_aprazado,
								ie_controlado,
								ie_padronizado,
								ie_classif_urgente,
								ie_dispensar_farm,
								nr_agrupamento,
								ie_adep,
								qt_horario,
								cd_unid_med_hor,
								cd_motivo_baixa,
								NR_ETAPA_SOL,
								dt_suspensao,
								nm_usuario_susp,
								nr_atendimento
								)
							values (	nr_sequencia_w,
								calcula_digito('MODULO11',nr_sequencia_w),
								nr_prescricao_p,
								nr_seq_prescr_w,
								ie_agrupador_w,
								clock_timestamp(),
								nm_usuario_p,
								clock_timestamp(),
								nm_usuario_p,
								ds_hora_w,
								dt_horario_w,
								qt_dose_w,
								qt_total_dispensar_w,
								cd_unidade_medida_w,
								cd_unid_med_dose_w,
								cd_material_w,
								nr_ocorrencia_w,
								CASE WHEN cd_motivo_baixa_w=0 THEN  dividir(qt_total_dispensar_w,nr_ocorrencia_w)  ELSE 0 END ,
								ie_urgente_w,
								coalesce(ie_horario_especial_w,'N'),
								Obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,to_char(dt_horario_w,'hh24:mi'),cd_local_estoque_w),
								'N',
								ie_controlado_w,
								ie_padronizado_w,
								ie_classif_urgente_w,
								ie_regra_disp_w,
								nr_agrupamento_w,
								ie_rep_adep_w,
								qt_dose_hor_w,
								cd_unid_med_dose_hor_w,
								cd_motivo_baixa_w,
								nr_etapa_sol_w,
								dT_suspensao_ww,
								nm_usuario_susp_w,
								nr_atendimento_w);
								
							nr_etapa_sol_w := nr_etapa_sol_w +1;
						end if;
					end if;
				end if;	
			end loop;
		end if;

	end loop;
	close C08;
	end;

procedure gerar_hor_npt_adulto is
	begin
	open C10;
	loop
	fetch C10 into
		ie_agrupador_w,
		nr_seq_prescr_w,
		qt_dose_w,
		qt_total_dispensar_w,
		cd_unidade_medida_w,
		cd_unid_med_dose_w,
		nr_ocorrencia_w,
		cd_material_w,
		ie_urgente_w,
		ie_se_necessario_w,
		ie_acm_w,
		ie_controlado_w,
		ie_padronizado_w,
		ie_regra_disp_w,
		nr_agrupamento_w,
		cd_protocolo_w,
		cd_local_estoque_w,
		cd_motivo_baixa_w,
		dt_suspensao_progr_w,
		dt_suspensao_ww,
		nm_usuario_susp_w,
		ds_horarios_padr_w,
		hr_prim_horario_npt_w;
	EXIT WHEN NOT FOUND; /* apply on C10 */
		qt_dia_adic_w := 0;

		if (ds_horarios_padr_w IS NOT NULL AND ds_horarios_padr_w::text <> '') and (ds_horarios_padr_w <> '  :  ') then
			while	(ds_horarios_padr_w IS NOT NULL AND ds_horarios_padr_w::text <> '') LOOP
				k	:= position(' ' in ds_horarios_padr_w);

				if (k > 1) and ((substr(ds_horarios_padr_w, 1, k -1) IS NOT NULL AND (substr(ds_horarios_padr_w, 1, k -1))::text <> '')) then
					ds_hora_w		:= substr(ds_horarios_padr_w, 1, k-1);
					ds_hora_w		:= replace(ds_hora_w, ' ','');
					ds_horarios_padr_w	:= substr(ds_horarios_padr_w, k + 1, 2000);
				elsif (ds_horarios_padr_w IS NOT NULL AND ds_horarios_padr_w::text <> '') then
					ds_hora_w 		:= replace(ds_horarios_padr_w,' ','');
					ds_horarios_padr_w	:= '';
				end if;
				
				if	((ie_urgente_w = 'N') or (cd_funcao_origem_w = 2314)) then
					if (position('A' in ds_hora_w) > 0) and (qt_dia_adic_w = 0) then
						qt_dia_adic_w	:= 1;
					elsif (position('AA' in ds_hora_w) > 0) then

						qt_dia_adic_w	:= qt_dia_adic_w + 1;
					end if;
				end if;

				ds_hora_w	:= replace(ds_hora_w,'A','');
				ds_hora_w	:= replace(ds_hora_w,'A','');
		
			dt_prescricao_ww	:= dt_prescricao_w;
			if (ie_urgente_w = 'N') and (cd_funcao_origem_w <> 2314) then
				dt_prescricao_ww	:= dt_inicio_prescr_w;
			end if;

			if (ie_urgente_w	= 'S') then
				dt_libe_w	:= dt_liberacao_w;
				if (ie_momento_lote_w = 'F') and (dt_liberacao_farmacia_w IS NOT NULL AND dt_liberacao_farmacia_w::text <> '') then
					select	max(dt_liberacao)
					into STRICT	dt_libe_w
					from	prescr_medica
					where	nr_prescricao	= nr_prescricao_p;
				elsif (ie_momento_lote_w = 'M') and (dt_liberacao_medico_w IS NOT NULL AND dt_liberacao_medico_w::text <> '') then
					dt_liberacao_w	:= dt_liberacao_medico_w;
				end if;
				dt_prescricao_ww	:= coalesce(dt_libe_w,dt_prescricao_ww);
			else
				dt_prescricao_ww	:= coalesce(dt_inicio_prescr_w,dt_prescricao_w);
			end if;
			
			/*ds_hora_w	:= to_char(dt_primeiro_horario_w,'hh24:mi');
			
			select	nvl(hr_prim_horario, 'XPTO')
			into	hr_prim_horario_npt_w
			from	nut_paciente
			where	nr_prescricao = nr_prescricao_p;
			
			if (hr_prim_horario_npt_w <> 'XPTO') then
				ds_hora_w	:= hr_prim_horario_npt_w;
			end if;*/
			
			dt_horario_w	:= pkg_date_utils.get_time(dt_prescricao_ww + qt_dia_adic_w, ds_hora_w, 0);

			/*Fabio e Jonas - 19/01/2010 = Para gerar os lotes como AGORA dependendo do horario final do turno, e nao mais pelo minutos de agora*/

			if (ie_agora_impressao_w = 'S') then
				nr_seq_turno_hor_ag_w	:= Obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,to_char(dt_horario_w,'hh24:mi'),cd_local_estoque_w);
				select	max(to_char(b.hr_inicial,'hh24:mi')),
					max(to_char(b.hr_final,'hh24:mi'))
				into STRICT	hr_turno_agora_w,
					hr_final_turno_agora_w
				from	regra_turno_disp_param b,
					regra_turno_disp a
				where	a.nr_sequencia		= b.nr_seq_turno
				and	a.cd_estabelecimento	= cd_estabelecimento_w
				and	a.nr_sequencia		= nr_seq_turno_hor_ag_w
				and (coalesce(b.cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0))	= coalesce(cd_setor_atendimento_w,0));

				select	coalesce(max(qt_min_antes_atend), 0),
					coalesce(max(ie_define_agora), 'N')
				into STRICT	qt_min_antes_atend_w,
					ie_define_agora_w
				from	regra_tempo_disp
				where	cd_estabelecimento	= cd_estabelecimento_w
				and (coalesce(cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0)) = coalesce(cd_setor_atendimento_w,0))
				and	nr_seq_turno = nr_seq_turno_hor_ag_w
				and	ie_situacao = 'A';
				
        --- Inicio MD43
        /*SO-2214423*/

				begin
				  exec_w := 'call ger_pres_mat_s_dt_lib_md_pck.calcular_dt_limite_agora_md(:1,:2,:3,:4,:5) into :result';

				  EXECUTE exec_w using in hr_turno_agora_w,
												 in hr_final_turno_agora_w,
												 in dt_inicio_prescr_w,
												 in qt_min_antes_atend_w,
												 in dt_horario_w,
												 out dt_limite_agora_w;
				exception
				  when others then
					dt_limite_agora_w := null;
				end;
        --- Fim MD43
			end if;
			/*Fabio e Jonas - 19/01/2010 = Final da alteracao*/

			select	nextval('prescr_mat_hor_seq')
			into STRICT	nr_sequencia_w
			;

			/* Rafael em 07/10/2006 Identificar horarios especiais */

			if (ie_se_necessario_w = 'S') or (ie_acm_w = 'S') then
				ie_horario_especial_w	:= 'S';
			else
				ie_horario_especial_w	:= 'N';
			end if;

			if (dt_horario_w < dt_prescricao_ww) and (ie_urgente_w = 'N') then
				dt_horario_w	:= dt_horario_w + 1;
			end if;

			if (dt_suspensao_progr_w > dt_horario_w) or (coalesce(dt_suspensao_progr_w::text, '') = '') then
			
        --- Inicio MD44
				begin
				  EXEC_w := 'CALL GER_PRES_MAT_S_DT_LIB_MD_PCK.OBTER_CLASSIF_URGENTE_MD(:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13) INTO :RESULT';

				  EXECUTE EXEC_w USING IN 0,
												 IN ie_classif_nao_padrao_w,
												 IN ie_padronizado_w,
												 IN ie_classif_normal_acm_sn_w,
												 IN ie_se_necessario_w,
												 IN ie_acm_w,
												 IN dt_horario_w,
												 IN dt_limite_agora_w,
												 IN ie_urgente_w,
												 IN ie_agora_impressao_w,
												 IN ie_define_agora_w, 
												 IN qt_min_antes_atend_w,
												 IN dt_limite_especial_w,
												 OUT ie_classif_urgente_w;

				exception
					when others then
					  ie_classif_urgente_w := null;
				end;
        --- Fim MD44
				
				SELECT * FROM obter_dose_um_horario_pmh(cd_material_w, qt_dose_w, cd_unid_med_dose_w, qt_dose_hor_w, cd_unid_med_dose_hor_w) INTO STRICT qt_dose_hor_w, cd_unid_med_dose_hor_w;
				
				select	count(*)
				into STRICT	qt_hor_w
				from	prescr_mat_hor where		nr_prescricao 	= nr_prescricao_p
				and		nr_seq_material	= nr_seq_prescr_w
				and		dt_horario	= dt_horario_w LIMIT 1;
				
				RAISE NOTICE 'Horario:%', PKG_DATE_FORMATERS_TZ.TO_VARCHAR(dt_horario_w,'',ESTABLISHMENT_TIMEZONE_UTILS.gettimezone);
				RAISE NOTICE '1 - qt_hor_w:% - %', qt_hor_w, nr_seq_prescr_w;				
				if (qt_hor_w = 0) then
					select	count(*)
					into STRICT	qt_hor_w
					from	prescr_medica b,
						prescr_mat_hor x where		x.nr_prescricao		= nr_prescricao_p
					and	b.nr_prescricao		= x.nr_prescricao
					and	x.nr_seq_material	= nr_seq_prescr_w
					and	(x.dt_lib_horario IS NOT NULL AND x.dt_lib_horario::text <> '')
					and	(b.dt_liberacao_farmacia IS NOT NULL AND b.dt_liberacao_farmacia::text <> '')
					and	(clock_timestamp() + (x.qt_minutos_agora/1440)) > dt_horario_w
					and	coalesce(x.qt_minutos_agora,0) > 0 LIMIT 1;
				end if;
				RAISE NOTICE '2 - qt_hor_w:% - %', qt_hor_w, nr_seq_prescr_w;				
				if (qt_hor_w = 0) then
					insert into prescr_mat_hor(
						nr_sequencia,
						nr_seq_digito,
						nr_prescricao,
						nr_seq_material,
						ie_agrupador,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						ds_horario,
						dt_horario,
						qt_dose,
						qt_dispensar,
						cd_unidade_medida,
						cd_unidade_medida_dose,
						cd_material,
						nr_ocorrencia,
						qt_dispensar_hor,
						ie_urgente,
						ie_horario_especial,
						nr_seq_turno,
						ie_aprazado,
						ie_controlado,
						ie_padronizado,
						ie_classif_urgente,
						ie_dispensar_farm,
						nr_agrupamento,
						ie_adep,
						qt_horario,
						cd_unid_med_hor,
						cd_motivo_baixa,
						dt_suspensao,
						nm_usuario_susp,
						nr_atendimento
						)
					values (	nr_sequencia_w,
						calcula_digito('MODULO11',nr_sequencia_w),
						nr_prescricao_p,
						nr_seq_prescr_w,
						ie_agrupador_w,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						ds_hora_w,
						dt_horario_w,
						qt_dose_w,
						qt_total_dispensar_w,
						cd_unidade_medida_w,
						cd_unid_med_dose_w,
						cd_material_w,
						nr_ocorrencia_w,
						CASE WHEN cd_motivo_baixa_w=0 THEN  dividir(qt_total_dispensar_w,nr_ocorrencia_w)  ELSE 0 END ,			
						ie_urgente_w,
						coalesce(ie_horario_especial_w,'N'),
						Obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,to_char(dt_horario_w,'hh24:mi'),cd_local_estoque_w),
						'N',
						ie_controlado_w,
						ie_padronizado_w,
						ie_classif_urgente_w,
						ie_regra_disp_w,
						nr_agrupamento_w,
						ie_rep_adep_w,
						qt_dose_hor_w,
						cd_unid_med_dose_hor_w,
						cd_motivo_baixa_w,
						dt_suspensao_ww,
						nm_usuario_susp_w,
						nr_atendimento_w
						);
						
						
					
				end if;
			end if;
		end loop;
		end if;
	end loop;
	close C10;
	end;

procedure gerar_hor_npt is
	begin
	open C11;
	loop
		fetch C11 into
			ie_agrupador_w,
			nr_seq_prescr_w,
			qt_dose_w,
			qt_total_dispensar_w,
			cd_unidade_medida_w,
			cd_unid_med_dose_w,
			nr_ocorrencia_w,
			cd_material_w,
			ie_urgente_w,
			ie_se_necessario_w,
			ie_acm_w,
			ie_controlado_w,
			ie_padronizado_w,
			ie_regra_disp_w,
			nr_agrupamento_w,
			cd_protocolo_w,
			cd_local_estoque_w,
			cd_motivo_baixa_w,
			dt_suspensao_progr_w,
			dt_suspensao_ww,
			nm_usuario_susp_w,
			ds_horarios_npt_w,
			ds_dose_diferenciada_w;
		EXIT WHEN NOT FOUND; /* apply on C11 */
			
		dt_prescricao_ww	:= dt_prescricao_w;
		
		if (ie_urgente_w = 'N') and (cd_funcao_origem_w <> 2314) then
			dt_prescricao_ww	:= dt_inicio_prescr_w;
		end if;		
		
		ds_horarios_npt_w	:= substr(replace(padroniza_horario_prescr(ds_horarios_npt_w,null),'A',''),1,4000);
		
		if (coalesce(ie_gerar_npt_fases_w,'N') = 'S') then
			ie_ctrl_loop_w		:= 0;
			ie_ctrl_loop_ww		:= 0;
			ie_loop_w			:= 0;
			vt_dose_diferenciada_w.delete;
			
			if (ds_dose_diferenciada_w IS NOT NULL AND ds_dose_diferenciada_w::text <> '') then

				ds_dose_dif_npt_w	:= ds_dose_diferenciada_w;

				while(ds_dose_dif_npt_w IS NOT NULL AND ds_dose_dif_npt_w::text <> '') and (ie_loop_w < 101) LOOP
					begin
					h	:= position('-' in ds_dose_dif_npt_w);
					if (h > 0) then
						qt_dose_dif_npt_w	:= replace(substr(ds_dose_dif_npt_w, 1, h-1),'/',',');
						ds_dose_dif_npt_w	:= substr(ds_dose_dif_npt_w, h+1, 50);
					else
						qt_dose_dif_npt_w	:= replace(ds_dose_dif_npt_w,'/',',');
						ds_dose_dif_npt_w	:= null;
					end if;

					vt_dose_diferenciada_w[ie_ctrl_loop_w].qt_dose_diferenciada	:= coalesce(qt_dose_dif_npt_w,0);
					ie_ctrl_loop_w	:= ie_ctrl_loop_w + 1;
					ie_loop_w		:= ie_loop_w + 1;
				
					end;
				end loop;
			end if;
		end if;	
		
		if (ie_urgente_w	= 'S') then
			dt_libe_w	:= dt_liberacao_w;
			if (ie_momento_lote_w = 'F') and (dt_liberacao_farmacia_w IS NOT NULL AND dt_liberacao_farmacia_w::text <> '') then
				select	max(dt_liberacao)
				into STRICT	dt_libe_w
				from	prescr_medica
				where	nr_prescricao	= nr_prescricao_p;
			elsif (ie_momento_lote_w = 'M') and (dt_liberacao_medico_w IS NOT NULL AND dt_liberacao_medico_w::text <> '') then
				dt_liberacao_w	:= dt_liberacao_medico_w;
			end if;
			dt_prescricao_ww	:= coalesce(dt_libe_w,dt_prescricao_ww);
		else
			dt_prescricao_ww	:= coalesce(dt_inicio_prescr_w,dt_prescricao_w);
		end if;
		
		select max(hr_prim_horario),
			max(qt_fase_npt)
		into STRICT	hr_inicio_nut_w,
			qt_fase_npt_w
		from 	nut_pac
		where	nr_prescricao = nr_prescricao_p;

		if (substr(Obter_Se_horario_hoje(dt_prescricao_w,dt_prim_hor_prescr_w,hr_inicio_nut_w),1,1) = 'N') then
			ds_horarios_padr_npt_w	:= padroniza_horario_prescr(ds_horarios_npt_w, '01/01/2000 23:59:59');
		else
			ds_horarios_padr_npt_w	:= padroniza_horario_prescr(ds_horarios_npt_w, to_char(coalesce(dt_prim_hor_prescr_w,dt_prescricao_w),'dd/mm/yyyy hh24:mi:ss'));
			
		end if;
		
		qt_dia_adic_w	:= 0;
		
		if (coalesce(ie_acm_w,'N') = 'S') and (coalesce(ds_horarios_npt_w::text, '') = '') and (coalesce(ds_horarios_padr_npt_w::text, '') = '') then
			ds_horarios_padr_npt_w := to_char(dt_inicio_prescr_w,'hh24:mi');
		end if;
		
		if (ds_horarios_padr_npt_w IS NOT NULL AND ds_horarios_padr_npt_w::text <> '') then	
		
			while	(ds_horarios_padr_npt_w IS NOT NULL AND ds_horarios_padr_npt_w::text <> '') loop
				k	:= position(' ' in ds_horarios_padr_npt_w);

				if (k > 1) and ((substr(ds_horarios_padr_npt_w, 1, k -1) IS NOT NULL AND (substr(ds_horarios_padr_npt_w, 1, k -1))::text <> '')) then
					ds_hora_npt_w		:= substr(ds_horarios_padr_npt_w, 1, k-1);
					ds_hora_npt_w		:= replace(ds_hora_npt_w, ' ','');
					ds_horarios_padr_npt_w	:= substr(ds_horarios_padr_npt_w, k + 1, 2000);
				elsif (ds_horarios_padr_npt_w IS NOT NULL AND ds_horarios_padr_npt_w::text <> '') then
					ds_hora_npt_w 		:= replace(ds_horarios_padr_npt_w,' ','');
					ds_horarios_padr_npt_w	:= '';
				end if;
				
				if (position('A' in ds_hora_npt_w) > 0) and (qt_dia_adic_w = 0) then
					qt_dia_adic_w	:= 1;
				elsif (position('AA' in ds_hora_npt_w) > 0) then
					qt_dia_adic_w	:= qt_dia_adic_w + 1;
				end if;
				
				ds_hora_npt_w	:= replace(ds_hora_npt_w,'A','');
				ds_hora_npt_w	:= replace(ds_hora_npt_w,'A','');
									
				dt_horario_w	:= pkg_date_utils.get_time(dt_prescricao_ww + qt_dia_adic_w,REPLACE(ds_hora_npt_w,'A','')||':00');
				

				/*Fabio e Jonas - 19/01/2010 = Para gerar os lotes como AGORA dependendo do horario final do turno, e nao mais pelo minutos de agora*/

				if (ie_agora_impressao_w = 'S') then
					nr_seq_turno_hor_ag_w	:= Obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,to_char(dt_horario_w,'hh24:mi'),cd_local_estoque_w);
					select	max(to_char(b.hr_inicial,'hh24:mi')),
						max(to_char(b.hr_final,'hh24:mi'))
					into STRICT	hr_turno_agora_w,
						hr_final_turno_agora_w
					from	regra_turno_disp_param b,
						regra_turno_disp a
					where	a.nr_sequencia		= b.nr_seq_turno
					and	a.cd_estabelecimento	= cd_estabelecimento_w
					and	a.nr_sequencia		= nr_seq_turno_hor_ag_w
					and (coalesce(b.cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0))	= coalesce(cd_setor_atendimento_w,0));

					select	coalesce(max(qt_min_antes_atend), 0),
						coalesce(max(ie_define_agora), 'N')
					into STRICT	qt_min_antes_atend_w,
						ie_define_agora_w
					from	regra_tempo_disp
					where	cd_estabelecimento	= cd_estabelecimento_w
					and (coalesce(cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0)) = coalesce(cd_setor_atendimento_w,0))
					and	nr_seq_turno = nr_seq_turno_hor_ag_w
					and	ie_situacao = 'A';
					
					/*SO-2214423*/

					begin
						exec_w := 'call ger_pres_mat_s_dt_lib_md_pck.calcular_dt_limite_agora_md(:1,:2,:3,:4,:5) into :result';

						EXECUTE exec_w using in hr_turno_agora_w,
													   in hr_final_turno_agora_w,
													   in dt_inicio_prescr_w,
													   in qt_min_antes_atend_w,
													   in dt_horario_w,
													   out dt_limite_agora_w;
					exception
						when others then
							dt_limite_agora_w := null;
					end;
				end if;
				/*Fabio e Jonas - 19/01/2010 = Final da alteracao*/

				select	nextval('prescr_mat_hor_seq')
				into STRICT	nr_sequencia_w
				;

				/* Rafael em 07/10/2006 Identificar horarios especiais */

				if (ie_se_necessario_w = 'S') or (ie_acm_w = 'S') then
					ie_horario_especial_w	:= 'S';
				else
					ie_horario_especial_w	:= 'N';
				end if;

				if (dt_horario_w < dt_prescricao_ww) and (ie_urgente_w = 'N') then
					dt_horario_w	:= dt_horario_w + 1;
				end if;

				if (dt_suspensao_progr_w > dt_horario_w) or (coalesce(dt_suspensao_progr_w::text, '') = '') then		
				
          --- Inicio MD46
					begin
						exec_w := 'call ger_pres_mat_s_dt_lib_md_pck.obter_classif_urgente_md(:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13) into :result';

						EXECUTE exec_w using in 0,
													   in ie_classif_nao_padrao_w,
													   in ie_padronizado_w,
													   in ie_classif_normal_acm_sn_w,
													   in ie_se_necessario_w,
													   in ie_acm_w,
													   in dt_horario_w,
													   in dt_limite_agora_w,
													   in ie_urgente_w,
													   in ie_agora_impressao_w,
													   in ie_define_agora_w, 
													   in qt_min_antes_atend_w,
													   in dt_limite_especial_w,
													   out ie_classif_urgente_w;

					exception
					  when others then
						ie_classif_urgente_w := null;
					end;
          --- Fim MD46
				
					SELECT * FROM obter_dose_um_horario_pmh(cd_material_w, qt_dose_w, cd_unid_med_dose_w, qt_dose_hor_w, cd_unid_med_dose_hor_w) INTO STRICT qt_dose_hor_w, cd_unid_med_dose_hor_w;
					
					select	count(*)
					into STRICT	qt_hor_w
					from	prescr_mat_hor where		nr_prescricao 	= nr_prescricao_p
					and	nr_seq_material	= nr_seq_prescr_w
					and	dt_horario	= dt_horario_w LIMIT 1;
					
					if (qt_hor_w = 0) then
						select	count(*)
						into STRICT	qt_hor_w
						from	prescr_medica b,
							prescr_mat_hor x where		x.nr_prescricao		= nr_prescricao_p
						and	b.nr_prescricao		= x.nr_prescricao
						and	x.nr_seq_material	= nr_seq_prescr_w
						and	(x.dt_lib_horario IS NOT NULL AND x.dt_lib_horario::text <> '')
						and	(b.dt_liberacao_farmacia IS NOT NULL AND b.dt_liberacao_farmacia::text <> '')
						and	(clock_timestamp() + (x.qt_minutos_agora/1440)) > dt_horario_w
						and	coalesce(x.qt_minutos_agora,0) > 0 LIMIT 1;
					end if;
					
					if (vt_dose_diferenciada_w.count > 0) and (vt_dose_diferenciada_w.exists(ie_cont_lib_w)) then
						vt_dose_diferenciada_existe_w := 'S';
						vt_qt_dose_diferenciada_ww    := vt_dose_diferenciada_w[ie_cont_lib_w].qt_dose_diferenciada;
					else
						vt_dose_diferenciada_existe_w := 'N';
						vt_qt_dose_diferenciada_ww    := null;
					end if;

					--- Inicio MD47
					begin
						exec_w := 'call ger_pres_mat_s_dt_lib_md_pck.obter_disp_hor_nut_md(:1,:2,:3,:4,:5,:6) into :result';

						EXECUTE exec_w using	in ie_gerar_npt_fases_w,
														in ds_dose_diferenciada_w,
														in vt_dose_diferenciada_existe_w,
														in vt_qt_dose_diferenciada_ww,
														in qt_total_dispensar_w,
														in nr_ocorrencia_w,
														out qt_disp_hor_nut_w;

					exception
						when others then
							qt_disp_hor_nut_w := null;
					end;
          --- Fim MD47
					
					if (qt_hor_w = 0) then
						insert into prescr_mat_hor(
							nr_sequencia,
							nr_seq_digito,
							nr_prescricao,
							nr_seq_material,
							ie_agrupador,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							ds_horario,
							dt_horario,
							qt_dose,
							qt_dispensar,
							cd_unidade_medida,
							cd_unidade_medida_dose,
							cd_material,
							nr_ocorrencia,
							qt_dispensar_hor,
							ie_urgente,
							ie_horario_especial,
							nr_seq_turno,
							ie_aprazado,
							ie_controlado,
							ie_padronizado,
							ie_classif_urgente,
							ie_dispensar_farm,
							nr_agrupamento,
							ie_adep,
							qt_horario,
							cd_unid_med_hor,
							cd_motivo_baixa,
							dt_suspensao,
							nm_usuario_susp,
							nr_atendimento
							)
						values (	nr_sequencia_w,
							calcula_digito('MODULO11',nr_sequencia_w),
							nr_prescricao_p,
							nr_seq_prescr_w,
							ie_agrupador_w,
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							ds_hora_npt_w,
							dt_horario_w,
							qt_dose_w,
							qt_total_dispensar_w,
							cd_unidade_medida_w,
							cd_unid_med_dose_w,
							cd_material_w,
							nr_ocorrencia_w,
							CASE WHEN cd_motivo_baixa_w=0 THEN  qt_disp_hor_nut_w  ELSE 0 END ,			
							ie_urgente_w,
							coalesce(ie_horario_especial_w,'N'),
							Obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,ds_hora_npt_w,cd_local_estoque_w),
							'N',
							ie_controlado_w,
							ie_padronizado_w,
							ie_classif_urgente_w,
							ie_regra_disp_w,
							nr_agrupamento_w,
							ie_rep_adep_w,
							qt_dose_hor_w,
							cd_unid_med_dose_hor_w,
							cd_motivo_baixa_w,
							dt_suspensao_ww,
							nm_usuario_susp_w,
							nr_atendimento_w
							);				
					
					ie_ctrl_loop_ww	:= ie_ctrl_loop_ww+1;
					end if;
				end if;	
			end loop;
		end if;	
	end loop;
	close C11;
	end;

procedure gerar_hor_suplemento_oral is
	begin
	open C12;
	loop
	fetch C12 into
		ie_agrupador_w,
		nr_seq_prescr_w,
		qt_dose_w,
		qt_total_dispensar_w,
		cd_unidade_medida_w,
		cd_unid_med_dose_w,
		nr_ocorrencia_w,
		cd_material_w,
		ds_horarios_w,
		ds_horarios_padr_w,
		hr_prim_horario_w,
		ie_urgente_w,
		qt_dose_especial_w,
		hr_dose_especial_w,
		ie_se_necessario_w,
		ie_acm_w,
		ie_controlado_w,
		ie_padronizado_w,
		ie_regra_disp_w,
		nr_agrupamento_w,
		cd_protocolo_w,
		cd_local_estoque_w,
		cd_motivo_baixa_w,
		dt_suspensao_progr_w,
		dt_suspensao_ww,
		nm_usuario_susp_w;
	EXIT WHEN NOT FOUND; /* apply on C12 */
	
		-- CPOE_ITEM_AGORA: Tratamento para que somente primeiro horario do item seja de classificacao "Urgente"
		if (cd_funcao_origem_w = 2314) and (ie_urgente_w = 'S') then
			select	coalesce(max('N'),'S')
			into STRICT	ie_urgente_w
			from	prescr_mat_hor x
			where	x.nr_prescricao		= nr_prescricao_p
			and		x.nr_seq_material	= nr_seq_prescr_w
			and		Obter_se_horario_liberado(x.dt_lib_horario, x.dt_horario) = 'S'
			and		coalesce(x.ie_dose_especial,'N')	= 'N'
			and		coalesce(x.dt_suspensao::text, '') = '' LIMIT 1;
		end if;

		dt_prescricao_ww	:= dt_prescricao_w;
		if (ie_urgente_w = 'N') and (cd_funcao_origem_w <> 2314) then
			dt_prescricao_ww	:= dt_inicio_prescr_w;
		end if;

		qt_dia_adic_w	:= 0;

		if (qt_dose_especial_w IS NOT NULL AND qt_dose_especial_w::text <> '') then
			qt_dose_especial_w	:= ceil(obter_conversao_unid_med_cons(cd_material_w,cd_unid_med_dose_w,qt_dose_especial_w));
			
			begin
			exec_w := 'begin ger_pres_mat_s_dt_lib_md_pck.obter_val_dose_esp_md(:1,:2,:3,:4,:5,:6,:7); end;';

			EXECUTE exec_w using in dt_prescricao_w,
										   in hr_dose_especial_w,
										   in 1,
										   in out qt_dose_especial_w,
										   in out qt_total_dispensar_w,
										   out dt_horario_w;
			exception
				when others then
					qt_dose_especial_w   := null;
					qt_total_dispensar_w := null;
					qt_auxiliar_w        := null;
					dt_horario_w         := null;
			end;

			/*Fabio e Jonas - 19/01/2010 = Para gerar os lotes como AGORA dependendo do horario final do turno, e nao mais pelo minutos de agora*/

			if (ie_agora_impressao_w = 'S') then
				nr_seq_turno_hor_ag_w	:= Obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,to_char(dt_horario_w,'hh24:mi'),cd_local_estoque_w);
				select	max(to_char(b.hr_inicial,'hh24:mi')),
						max(to_char(b.hr_final,'hh24:mi'))
				into STRICT	hr_turno_agora_w,
						hr_final_turno_agora_w
				from	regra_turno_disp_param b,
						regra_turno_disp a
				where	a.nr_sequencia		= b.nr_seq_turno
				and		a.cd_estabelecimento	= cd_estabelecimento_w
				and		a.nr_sequencia		= nr_seq_turno_hor_ag_w
				and (coalesce(b.cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0))	= coalesce(cd_setor_atendimento_w,0));

				select	coalesce(max(qt_min_antes_atend), 0),
						coalesce(max(ie_define_agora), 'N')
				into STRICT	qt_min_antes_atend_w,
						ie_define_agora_w
				from	regra_tempo_disp
				where	cd_estabelecimento	= cd_estabelecimento_w
				and (coalesce(cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0)) = coalesce(cd_setor_atendimento_w,0))
				and		nr_seq_turno = nr_seq_turno_hor_ag_w
				and		ie_situacao = 'A';

				begin
				  exec_w := 'call ger_pres_mat_s_dt_lib_md_pck.calcular_dt_limite_agora_md(:1,:2,:3,:4,:5) into :result';

				  EXECUTE exec_w using in hr_turno_agora_w,
												 in hr_final_turno_agora_w,
												 in dt_inicio_prescr_w,
												 in qt_min_antes_atend_w,
												 in dt_horario_w,
												 out dt_limite_agora_w;
				exception
				  when others then
					dt_limite_agora_w := null;
				end;
			end if;
			/*Fabio e Jonas - 19/01/2010 = Final da alteracao*/

			select	nextval('prescr_mat_hor_seq')
			into STRICT	nr_sequencia_w
			;

			ie_horario_especial_w := 'N';

			if (dt_horario_w < dt_prescricao_w) and (ie_urgente_w = 'N') then
				dt_horario_w	:= dt_horario_w + 1;
			end if;

			if (dt_suspensao_progr_w > dt_horario_w) or (coalesce(dt_suspensao_progr_w::text, '') = '') then
			
        --- Inicio MD50
				begin
					exec_w := 'call ger_pres_mat_s_dt_lib_md_pck.obter_classif_urgente_md(:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13) into :result';

					EXECUTE exec_w using in 0,
												 in ie_classif_nao_padrao_w,
												 in ie_padronizado_w,
												 in ie_classif_normal_acm_sn_w,
												 in ie_se_necessario_w,
												 in ie_acm_w,
												 in dt_horario_w,
												 in dt_limite_agora_w,
												 in ie_urgente_w,
												 in ie_agora_impressao_w,
												 in ie_define_agora_w, 
												 in qt_min_antes_atend_w,
												 in dt_limite_especial_w,
												 out ie_classif_urgente_w;

				exception
					when others then
						ie_classif_urgente_w := null;
				end;
        --- Fim MD50
				
				SELECT * FROM obter_dose_um_horario_pmh(cd_material_w, qt_dose_especial_w, cd_unid_med_dose_w, qt_dose_hor_w, cd_unid_med_dose_hor_w) INTO STRICT qt_dose_hor_w, cd_unid_med_dose_hor_w;
			
				select	count(*)
				into STRICT	qt_hor_w
				from	prescr_mat_hor where		nr_prescricao 	= nr_prescricao_p
				and	nr_seq_material	= nr_seq_prescr_w
				and	dt_horario	= dt_horario_w LIMIT 1;
				
				if (qt_hor_w = 0) then
					select	count(*)
					into STRICT	qt_hor_w
					from	prescr_medica b,
						prescr_mat_hor x where		x.nr_prescricao		= nr_prescricao_p
					and	b.nr_prescricao		= x.nr_prescricao
					and	x.nr_seq_material	= nr_seq_prescr_w
					and	(x.dt_lib_horario IS NOT NULL AND x.dt_lib_horario::text <> '')
					and	(b.dt_liberacao_farmacia IS NOT NULL AND b.dt_liberacao_farmacia::text <> '')
					and	(clock_timestamp() + (x.qt_minutos_agora/1440)) > dt_horario_w
					and	coalesce(x.qt_minutos_agora,0) > 0 LIMIT 1;
				end if;
				
				if (qt_hor_w = 0) then
					
					select	count(*)
					into STRICT	qt_jejum_w
					from	rep_jejum a,
						prescr_medica b where		dt_horario_w between dt_inicio and dt_fim - 1/1440
					and	a.nr_prescricao		= b.nr_prescricao
					and	coalesce(a.ie_suspenso,'N')	<> 'S'
					and	ie_liberacao_p = 'S'
					and	coalesce(b.dt_suspensao::text, '') = ''
					and	b.nr_atendimento	= nr_atendimento_w LIMIT 1;
					
					if (qt_jejum_w = 0) or (ie_contem_jejum_nut_w = 'S') or (qt_dose_especial_w > 0) then
					
						insert into prescr_mat_hor(
							nr_sequencia,
							nr_seq_digito,
							nr_prescricao,
							nr_seq_material,
							ie_agrupador,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							ds_horario,
							dt_horario,
							qt_dose,
							qt_dispensar,
							cd_unidade_medida,
							cd_unidade_medida_dose,
							cd_material,
							nr_ocorrencia,
							qt_dispensar_hor,
							ie_urgente,
							ie_horario_especial,
							nr_seq_turno,
							ie_aprazado,
							ie_dose_especial,
							ie_controlado,
							ie_padronizado,
							ie_classif_urgente,
							ie_dispensar_farm,
							nr_agrupamento,
							ie_adep,
							qt_horario,
							cd_unid_med_hor,
							cd_motivo_baixa,
							dt_suspensao,
							nm_usuario_susp,
							nr_atendimento
							)
						values (	nr_sequencia_w,
							calcula_digito('MODULO11',nr_sequencia_w),
							nr_prescricao_p,
							nr_seq_prescr_w,
							ie_agrupador_w,
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							hr_dose_especial_w,
							dt_horario_w,
							qt_dose_especial_w,
							qt_dose_especial_w,
							cd_unidade_medida_w,
							cd_unidade_medida_w,
							cd_material_w,
							1,
							CASE WHEN cd_motivo_baixa_w=0 THEN  qt_dose_especial_w  ELSE 0 END ,
							ie_urgente_w,
							coalesce(ie_horario_especial_w,'N'),
							Obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,hr_dose_especial_w,cd_local_estoque_w),
							'N',
							'S',
							ie_controlado_w,
							ie_padronizado_w,
							ie_classif_urgente_w,
							ie_regra_disp_w,
							nr_agrupamento_w,
							ie_rep_adep_w,
							qt_dose_hor_w,
							cd_unid_med_dose_hor_w,
							cd_motivo_baixa_w,
							dt_suspensao_ww,
							nm_usuario_susp_w,
							nr_atendimento_w
							);

						if (cd_funcao_origem_w = 2314) and (ie_gerar_dil_supl_w = 'S') then
							gerar_reconst_dil_hor;
						end if;	
					end if;
					
					
				end if;
			end if;	
		end if;
		
		if (ds_horarios_padr_w IS NOT NULL AND ds_horarios_padr_w::text <> '') then
			while	(ds_horarios_padr_w IS NOT NULL AND ds_horarios_padr_w::text <> '') LOOP
				k	:= position(' ' in ds_horarios_padr_w);

				if (k > 1) and ((substr(ds_horarios_padr_w, 1, k -1) IS NOT NULL AND (substr(ds_horarios_padr_w, 1, k -1))::text <> '')) then
					ds_hora_w		:= substr(ds_horarios_padr_w, 1, k-1);
					ds_hora_w		:= replace(ds_hora_w, ' ','');
					ds_horarios_padr_w	:= substr(ds_horarios_padr_w, k + 1, 2000);
				elsif (ds_horarios_padr_w IS NOT NULL AND ds_horarios_padr_w::text <> '') then
					ds_hora_w 		:= replace(ds_horarios_padr_w,' ','');
					ds_horarios_padr_w	:= '';
				end if;
		
				if	((ie_urgente_w = 'N') or (cd_funcao_origem_w = 2314)) then
					if (position('A' in ds_hora_w) > 0) and (qt_dia_adic_w = 0) then
						qt_dia_adic_w	:= 1;
					elsif (position('AA' in ds_hora_w) > 0) then

						qt_dia_adic_w	:= qt_dia_adic_w + 1;
					end if;
				end if;

				ds_hora_w	:= replace(ds_hora_w,'A','');
				ds_hora_w	:= replace(ds_hora_w,'A','');
				
				if (ie_urgente_w	= 'S') then
					dt_libe_w	:= dt_liberacao_w;
					if (ie_momento_lote_w = 'F') and (dt_liberacao_farmacia_w IS NOT NULL AND dt_liberacao_farmacia_w::text <> '') then
						select	max(dt_liberacao)
						into STRICT	dt_libe_w
						from	prescr_medica
						where	nr_prescricao	= nr_prescricao_p;
					elsif (ie_momento_lote_w = 'M') and (dt_liberacao_medico_w IS NOT NULL AND dt_liberacao_medico_w::text <> '') then
						dt_liberacao_w	:= dt_liberacao_medico_w;
					end if;
					dt_prescricao_ww	:= coalesce(dt_libe_w,dt_prescricao_ww);
				else
					dt_prescricao_ww	:= coalesce(dt_inicio_prescr_w,dt_prescricao_w);
				end if;

				dt_horario_w	:= pkg_date_utils.get_time(dt_prescricao_ww + qt_dia_adic_w, replace(ds_hora_w,'A',''), 0);
				
				/*Fabio e Jonas - 19/01/2010 = Para gerar os lotes como AGORA dependendo do horario final do turno, e nao mais pelo minutos de agora*/

				if (ie_agora_impressao_w = 'S') then
					nr_seq_turno_hor_ag_w	:= Obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,to_char(dt_horario_w,'hh24:mi'),cd_local_estoque_w);
					select	max(to_char(b.hr_inicial,'hh24:mi')),
						max(to_char(b.hr_final,'hh24:mi'))
					into STRICT	hr_turno_agora_w,
						hr_final_turno_agora_w
					from	regra_turno_disp_param b,
						regra_turno_disp a
					where	a.nr_sequencia		= b.nr_seq_turno
					and	a.cd_estabelecimento	= cd_estabelecimento_w
					and	a.nr_sequencia		= nr_seq_turno_hor_ag_w
					and (coalesce(b.cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0))	= coalesce(cd_setor_atendimento_w,0));

					select	coalesce(max(qt_min_antes_atend), 0),
						coalesce(max(ie_define_agora), 'N')
					into STRICT	qt_min_antes_atend_w,
						ie_define_agora_w
					from	regra_tempo_disp
					where	cd_estabelecimento	= cd_estabelecimento_w
					and (coalesce(cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0)) = coalesce(cd_setor_atendimento_w,0))
					and	nr_seq_turno = nr_seq_turno_hor_ag_w
					and	ie_situacao = 'A';
					
					begin
						exec_w := 'call ger_pres_mat_s_dt_lib_md_pck.calcular_dt_limite_agora_md(:1,:2,:3,:4,:5) into :result';

						EXECUTE exec_w using in hr_turno_agora_w,
													   in hr_final_turno_agora_w,
													   in dt_inicio_prescr_w,
													   in qt_min_antes_atend_w,
													   in dt_horario_w,
													   out dt_limite_agora_w;
					exception
						when others then
							dt_limite_agora_w := null;
					end;			
				end if;
				/*Fabio e Jonas - 19/01/2010 = Final da alteracao*/

				select	nextval('prescr_mat_hor_seq')
				into STRICT	nr_sequencia_w
				;

				/* Rafael em 07/10/2006 Identificar horarios especiais */

				if (ie_se_necessario_w = 'S') or (ie_acm_w = 'S') then
					ie_horario_especial_w	:= 'S';
				else
					ie_horario_especial_w	:= 'N';
				end if;

				if (dt_horario_w < dt_prescricao_ww) and (ie_urgente_w = 'N') then
					dt_horario_w	:= dt_horario_w + 1;
				end if;

				if (dt_suspensao_progr_w > dt_horario_w) or (coalesce(dt_suspensao_progr_w::text, '') = '') then				
					
					begin
						exec_w := 'call ger_pres_mat_s_dt_lib_md_pck.obter_classif_urgente_md(:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13) into :result';

						EXECUTE exec_w using in 	0,
														   in ie_classif_nao_padrao_w,
														   in ie_padronizado_w,
														   in ie_classif_normal_acm_sn_w,
														   in ie_se_necessario_w,
														   in ie_acm_w,
														   in dt_horario_w,
														   in dt_limite_agora_w,
														   in ie_urgente_w,
														   in ie_agora_impressao_w,
														   in ie_define_agora_w, 
														   in qt_min_antes_atend_w,
														   in dt_limite_especial_w,
														   out ie_classif_urgente_w;

					exception
						when others then
							ie_classif_urgente_w := null;
					end;
					
					/*SO-2214423*/

					if (1 = 1) then
						nr_seq_turno_hor_esp_w 	:= Obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,to_char(dt_limite_especial_w,'hh24:mi'),cd_local_estoque_w);
						if ( nr_seq_turno_hor_esp_w = Obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,to_char(dt_horario_w,'hh24:mi'),cd_local_estoque_w)) and (ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_horario_w)) < (ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_limite_especial_w)) then
								ie_classif_urgente_w	:= 'E';
						end if;
					end if;	
					
					SELECT * FROM obter_dose_um_horario_pmh(cd_material_w, qt_dose_w, cd_unid_med_dose_w, qt_dose_hor_w, cd_unid_med_dose_hor_w) INTO STRICT qt_dose_hor_w, cd_unid_med_dose_hor_w;

					select	count(*)
					into STRICT	qt_hor_w
					from	prescr_mat_hor where		nr_prescricao 	= nr_prescricao_p
					and	nr_seq_material	= nr_seq_prescr_w
					and	dt_horario	= dt_horario_w LIMIT 1;
					
					if (qt_hor_w = 0) then
						select	count(*)
						into STRICT	qt_hor_w
						from	prescr_medica b,
							prescr_mat_hor x where		x.nr_prescricao		= nr_prescricao_p
						and	b.nr_prescricao		= x.nr_prescricao
						and	x.nr_seq_material	= nr_seq_prescr_w
						and	(x.dt_lib_horario IS NOT NULL AND x.dt_lib_horario::text <> '')
						and	(b.dt_liberacao_farmacia IS NOT NULL AND b.dt_liberacao_farmacia::text <> '')
						and	(clock_timestamp() + (x.qt_minutos_agora/1440)) > dt_horario_w
						and	coalesce(x.qt_minutos_agora,0) > 0 LIMIT 1;
					end if;
					
					if (qt_hor_w = 0) then

					
						select	max(a.nr_sequencia)
						into STRICT	qt_jejum_w
						from	rep_jejum a,
							prescr_medica b where	dt_horario_w between dt_inicio and dt_fim - 1/1440
						and	a.nr_prescricao		= b.nr_prescricao
						and	coalesce(a.ie_suspenso,'N')	<> 'S'
						and	ie_liberacao_p = 'S'
						and	coalesce(b.dt_suspensao::text, '') = ''
						and	b.nr_atendimento	= nr_atendimento_w LIMIT 1;
						
						insert into prescr_mat_hor(
							nr_sequencia,
							nr_seq_digito,
							nr_prescricao,
							nr_seq_material,
							ie_agrupador,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							ds_horario,
							dt_horario,
							qt_dose,
							qt_dispensar,
							cd_unidade_medida,
							cd_unidade_medida_dose,
							cd_material,
							nr_ocorrencia,
							qt_dispensar_hor,
							ie_urgente,
							ie_horario_especial,
							nr_seq_turno,
							ie_aprazado,
							ie_controlado,
							ie_padronizado,
							ie_classif_urgente,
							ie_dispensar_farm,
							nr_agrupamento,
							ie_adep,
							qt_horario,
							cd_unid_med_hor,
							cd_motivo_baixa,
							dt_suspensao,
							nm_usuario_susp,
							nr_atendimento
							)
						values (	nr_sequencia_w,
							calcula_digito('MODULO11',nr_sequencia_w),
							nr_prescricao_p,
							nr_seq_prescr_w,
							ie_agrupador_w,
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							ds_hora_w,
							dt_horario_w,
							qt_dose_w, --qt_total_dispensar_w, (OS 705990)
							qt_total_dispensar_w,
							cd_unidade_medida_w,
							cd_unid_med_dose_w,
							cd_material_w,
							nr_ocorrencia_w,
							CASE WHEN cd_motivo_baixa_w=0 THEN  dividir(qt_total_dispensar_w,nr_ocorrencia_w)  ELSE 0 END ,					
							ie_urgente_w,
							coalesce(ie_horario_especial_w,'N'),
							Obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,to_char(dt_horario_w,'hh24:mi'),cd_local_estoque_w),
							'N',
							ie_controlado_w,
							ie_padronizado_w,
							ie_classif_urgente_w,
							ie_regra_disp_w,
							nr_agrupamento_w,
							ie_rep_adep_w,
							qt_dose_hor_w,
							cd_unid_med_dose_hor_w,
							cd_motivo_baixa_w,
							dt_suspensao_ww,
							nm_usuario_susp_w,
							nr_atendimento_w
							);

						if (cd_funcao_origem_w = 2314) and (ie_gerar_dil_supl_w = 'S') then
							gerar_reconst_dil_hor;
						end if;	
							

						if (ie_contem_jejum_nut_w = 'N') and (coalesce(qt_jejum_w,0) > 0) then
							CALL REP_SUSPENDER_DIETA_VIGENTE(nr_atendimento_w, qt_jejum_w, nm_usuario_p);
						end if;									
								
					end if;
				end if;	
			end loop;
		else
			if (hr_prim_horario_w = '  :  ') then
				hr_prim_horario_w := null;
			end if;
			
			if (ie_urgente_w	= 'S') then
				dt_libe_w	:= dt_liberacao_w;
				if (ie_momento_lote_w = 'F') and (dt_liberacao_farmacia_w IS NOT NULL AND dt_liberacao_farmacia_w::text <> '') then
					select	max(dt_liberacao)
					into STRICT	dt_libe_w
					from	prescr_medica
					where	nr_prescricao	= nr_prescricao_p;
				elsif (ie_momento_lote_w = 'M') and (dt_liberacao_medico_w IS NOT NULL AND dt_liberacao_medico_w::text <> '') then
					dt_liberacao_w	:= dt_liberacao_medico_w;
				end if;
				dt_prescricao_ww	:= coalesce(dt_libe_w,dt_prescricao_ww);
			else
				dt_prescricao_ww	:= coalesce(dt_inicio_prescr_w,dt_prescricao_w);
			end if;
			
			ds_hora_w	:= coalesce(hr_prim_horario_w, substr(to_char(dt_primeiro_horario_w,'dd/mm/yyyy hh24:mi:ss'),12,5));
			dt_horario_w	:= pkg_date_utils.get_time(dt_prescricao_ww, ds_hora_w, 0);
		
			/*Fabio e Jonas - 19/01/2010 = Para gerar os lotes como AGORA dependendo do horario final do turno, e nao mais pelo minutos de agora*/

			if (ie_agora_impressao_w = 'S') then
				nr_seq_turno_hor_ag_w	:= Obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,to_char(dt_horario_w,'hh24:mi'),cd_local_estoque_w);
				select	max(to_char(b.hr_inicial,'hh24:mi')),
					max(to_char(b.hr_final,'hh24:mi'))
				into STRICT	hr_turno_agora_w,
					hr_final_turno_agora_w
				from	regra_turno_disp_param b,
					regra_turno_disp a
				where	a.nr_sequencia		= b.nr_seq_turno
				and	a.cd_estabelecimento	= cd_estabelecimento_w
				and	a.nr_sequencia		= nr_seq_turno_hor_ag_w
				and (coalesce(b.cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0))	= coalesce(cd_setor_atendimento_w,0));

				select	coalesce(max(qt_min_antes_atend), 0),
					coalesce(max(ie_define_agora), 'N')
				into STRICT	qt_min_antes_atend_w,
					ie_define_agora_w
				from	regra_tempo_disp
				where	cd_estabelecimento	= cd_estabelecimento_w
				and (coalesce(cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0)) = coalesce(cd_setor_atendimento_w,0))
				and	nr_seq_turno = nr_seq_turno_hor_ag_w
				and	ie_situacao = 'A';

				begin
				  EXEC_W := 'CALL GER_PRES_MAT_S_DT_LIB_MD_PCK.CALCULAR_DT_LIMITE_AGORA_MD(:1,:2,:3,:4,:5) INTO :RESULT';

				  EXECUTE EXEC_W USING IN hr_turno_agora_w,
												 IN hr_final_turno_agora_w,
												 IN dt_inicio_prescr_w,
												 IN qt_min_antes_atend_w,
												 IN dt_horario_w,
												 OUT dt_limite_agora_w;
				exception
				  when others then
					dt_limite_agora_w := null;
				end;
			end if;
			/*Fabio e Jonas - 19/01/2010 = Final da alteracao*/

			select	nextval('prescr_mat_hor_seq')
			into STRICT	nr_sequencia_w
			;

			/* Rafael em 07/10/2006 Identificar horarios especiais */

			ie_horario_especial_w	:= 'S';

			if (dt_horario_w < dt_prescricao_ww) and (ie_urgente_w = 'N') then
				dt_horario_w	:= dt_horario_w + 1;
			end if;

			if (dt_suspensao_progr_w > dt_horario_w) or (coalesce(dt_suspensao_progr_w::text, '') = '') then
			
        --- Inicio MD54
				begin
				  EXEC_w := 'CALL GER_PRES_MAT_S_DT_LIB_MD_PCK.OBTER_CLASSIF_URGENTE_MD(:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13) INTO :RESULT';

				  EXECUTE EXEC_w USING IN 0,
												 IN ie_classif_nao_padrao_w,
												 IN ie_padronizado_w,
												 IN ie_classif_normal_acm_sn_w,
												 IN ie_se_necessario_w,
												 IN ie_acm_w,
												 IN dt_horario_w,
												 IN dt_limite_agora_w,
												 IN ie_urgente_w,
												 IN ie_agora_impressao_w,
												 IN ie_define_agora_w, 
												 IN qt_min_antes_atend_w,
												 IN dt_limite_especial_w,
												 OUT ie_classif_urgente_w;

				exception
					when others then
					  ie_classif_urgente_w := null;
				end;
        --- Fim MD54
				SELECT * FROM obter_dose_um_horario_pmh(cd_material_w, qt_dose_w, cd_unid_med_dose_w, qt_dose_hor_w, cd_unid_med_dose_hor_w) INTO STRICT qt_dose_hor_w, cd_unid_med_dose_hor_w;

			
				select	count(*)
				into STRICT	qt_hor_w
				from	prescr_mat_hor where		nr_prescricao 	= nr_prescricao_p
				and	nr_seq_material	= nr_seq_prescr_w
				and	dt_horario	= dt_horario_w LIMIT 1;
				
				if (qt_hor_w = 0) then
					select	count(*)
					into STRICT	qt_hor_w
					from	prescr_medica b,
						prescr_mat_hor x where		x.nr_prescricao		= nr_prescricao_p
					and	b.nr_prescricao		= x.nr_prescricao
					and	x.nr_seq_material	= nr_seq_prescr_w
					and	(x.dt_lib_horario IS NOT NULL AND x.dt_lib_horario::text <> '')
					and	(b.dt_liberacao_farmacia IS NOT NULL AND b.dt_liberacao_farmacia::text <> '')
					and	(clock_timestamp() + (x.qt_minutos_agora/1440)) > dt_horario_w
					and	coalesce(x.qt_minutos_agora,0) > 0 LIMIT 1;
				end if;
				
				if (qt_hor_w = 0) then
					select	count(*)
					into STRICT	qt_jejum_w
					from	rep_jejum a,
						prescr_medica b where		dt_horario_w between dt_inicio and dt_fim -1/1440
					and	a.nr_prescricao		= b.nr_prescricao
					and	coalesce(a.ie_suspenso,'N')	<> 'S'
					and	coalesce(b.dt_suspensao::text, '') = ''
					and	ie_liberacao_p = 'S'
					and	b.nr_atendimento	= nr_atendimento_w LIMIT 1;
					
					if (qt_jejum_w = 0) or (ie_contem_jejum_nut_w = 'S') or (qt_dose_especial_w > 0) or (ie_horario_especial_w = 'S') then
					
						insert into prescr_mat_hor(
							nr_sequencia,
							nr_seq_digito,
							nr_prescricao,
							nr_seq_material,
							ie_agrupador,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							ds_horario,
							dt_horario,
							qt_dose,
							qt_dispensar,
							cd_unidade_medida,
							cd_unidade_medida_dose,
							cd_material,
							nr_ocorrencia,
							qt_dispensar_hor,
							ie_urgente,
							ie_horario_especial,
							nr_seq_turno,
							ie_aprazado,
							ie_controlado,
							ie_padronizado,
							ie_classif_urgente,
							ie_dispensar_farm,
							nr_agrupamento,
							ie_adep,
							qt_horario,
							cd_unid_med_hor,
							cd_motivo_baixa,
							dt_suspensao,
							nm_usuario_susp,
							nr_atendimento
							)
						values (	nr_sequencia_w,
							calcula_digito('MODULO11',nr_sequencia_w),
							nr_prescricao_p,
							nr_seq_prescr_w,
							ie_agrupador_w,
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							ds_hora_w,
							dt_horario_w,
							qt_dose_w,
							qt_total_dispensar_w,
							cd_unidade_medida_w,
							cd_unid_med_dose_w,
							cd_material_w,
							nr_ocorrencia_w,
							CASE WHEN cd_motivo_baixa_w=0 THEN  qt_total_dispensar_w  ELSE 0 END ,
							ie_urgente_w,
							coalesce(ie_horario_especial_w,'S'),
							Obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,to_char(dt_horario_w,'hh24:mi'),cd_local_estoque_w),
							'N',
							ie_controlado_w,
							ie_padronizado_w,
							ie_classif_urgente_w,
							ie_regra_disp_w,
							nr_agrupamento_w,
							ie_rep_adep_w,
							qt_dose_hor_w,
							cd_unid_med_dose_hor_w,
							cd_motivo_baixa_w,
							dt_suspensao_ww,
							nm_usuario_susp_w,
							nr_atendimento_w
							);

						if (cd_funcao_origem_w = 2314) and (ie_gerar_dil_supl_w = 'S') then
							gerar_reconst_dil_hor;
						end if;	
					end if;
				end if;
			end if;	
		end if;

	end loop;
	close C12;
	end;

procedure gerar_hor_assoc_gasoterapia is
	begin
	open C13;
	loop
	fetch C13 into
		ie_agrupador_w,
		nr_seq_prescr_w,
		qt_dose_w,
		qt_total_dispensar_w,
		cd_unidade_medida_w,
		cd_unid_med_dose_w,
		nr_ocorrencia_w,
		cd_material_w,
		ds_horarios_w,
		ds_horarios_padr_w,
		hr_prim_horario_w,
		ie_urgente_w,
		qt_dose_especial_w,
		hr_dose_especial_w,
		ie_se_necessario_w,
		ie_acm_w,
		ie_controlado_w,
		ie_padronizado_w,
		ie_regra_disp_w,
		nr_agrupamento_w,
		cd_protocolo_w,
		cd_local_estoque_w,
		cd_motivo_baixa_w,
		dt_suspensao_progr_w,
		dt_suspensao_ww,
		nm_usuario_susp_w;
	EXIT WHEN NOT FOUND; /* apply on C13 */
			
		-- CPOE_ITEM_AGORA: Tratamento para que somente primeiro horario do item seja de classificacao "Urgente"
		if (cd_funcao_origem_w = 2314) and (ie_urgente_w = 'S') then
			select	coalesce(max('N'),'S')
			into STRICT	ie_urgente_w
			from	prescr_mat_hor x
			where	x.nr_prescricao		= nr_prescricao_p
			and		x.nr_seq_material	= nr_seq_prescr_w
			and		Obter_se_horario_liberado(x.dt_lib_horario, x.dt_horario) = 'S'
			and		coalesce(x.ie_dose_especial,'N')	= 'N'
			and		coalesce(x.dt_suspensao::text, '') = '' LIMIT 1;
		end if;

		dt_prescricao_ww	:= dt_prescricao_w;
		if (ie_urgente_w = 'N') and (cd_funcao_origem_w <> 2314) then
			dt_prescricao_ww	:= dt_inicio_prescr_w;
		end if;

		qt_dia_adic_w	:= 0;
		
		if (ds_horarios_padr_w IS NOT NULL AND ds_horarios_padr_w::text <> '') then
			while	(ds_horarios_padr_w IS NOT NULL AND ds_horarios_padr_w::text <> '') LOOP
				k	:= position(' ' in ds_horarios_padr_w);

				if (k > 1) and ((substr(ds_horarios_padr_w, 1, k -1) IS NOT NULL AND (substr(ds_horarios_padr_w, 1, k -1))::text <> '')) then
					ds_hora_w		:= substr(ds_horarios_padr_w, 1, k-1);
					ds_hora_w		:= replace(ds_hora_w, ' ','');
					ds_horarios_padr_w	:= substr(ds_horarios_padr_w, k + 1, 2000);
				elsif (ds_horarios_padr_w IS NOT NULL AND ds_horarios_padr_w::text <> '') then
					ds_hora_w 		:= replace(ds_horarios_padr_w,' ','');
					ds_horarios_padr_w	:= '';
				end if;
		
				if	((ie_urgente_w = 'N') or (cd_funcao_origem_w = 2314)) then
					if (position('A' in ds_hora_w) > 0) and (qt_dia_adic_w = 0) then
						qt_dia_adic_w	:= 1;
					elsif (position('AA' in ds_hora_w) > 0) then

						qt_dia_adic_w	:= qt_dia_adic_w + 1;
					end if;
				end if;

				ds_hora_w	:= replace(ds_hora_w,'A','');
				ds_hora_w	:= replace(ds_hora_w,'A','');
				
				if (ie_urgente_w	= 'S') then
					dt_libe_w	:= dt_liberacao_w;
					if (ie_momento_lote_w = 'F') and (dt_liberacao_farmacia_w IS NOT NULL AND dt_liberacao_farmacia_w::text <> '') then
						select	max(dt_liberacao)
						into STRICT	dt_libe_w
						from	prescr_medica
						where	nr_prescricao	= nr_prescricao_p;
					elsif (ie_momento_lote_w = 'M') and (dt_liberacao_medico_w IS NOT NULL AND dt_liberacao_medico_w::text <> '') then
						dt_liberacao_w	:= dt_liberacao_medico_w;
					end if;
					dt_prescricao_ww	:= coalesce(dt_libe_w,dt_prescricao_ww);
				else
					dt_prescricao_ww	:= coalesce(dt_inicio_prescr_w,dt_prescricao_w);
				end if;

				dt_horario_w	:= pkg_date_utils.get_time(dt_prescricao_ww + qt_dia_adic_w, replace(ds_hora_w,'A',''), 0);

				if (dt_suspensao_progr_w > dt_horario_w) or (coalesce(dt_suspensao_progr_w::text, '') = '') then				
				
					/*Fabio e Jonas - 19/01/2010 = Para gerar os lotes como AGORA dependendo do horario final do turno, e nao mais pelo minutos de agora*/

					if (ie_agora_impressao_w = 'S') then
						nr_seq_turno_hor_ag_w	:= Obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,to_char(dt_horario_w,'hh24:mi'),cd_local_estoque_w);
						select	max(to_char(b.hr_inicial,'hh24:mi')),
							max(to_char(b.hr_final,'hh24:mi'))
						into STRICT	hr_turno_agora_w,
							hr_final_turno_agora_w
						from	regra_turno_disp_param b,
							regra_turno_disp a
						where	a.nr_sequencia		= b.nr_seq_turno
						and	a.cd_estabelecimento	= cd_estabelecimento_w
						and	a.nr_sequencia		= nr_seq_turno_hor_ag_w
						and (coalesce(b.cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0))	= coalesce(cd_setor_atendimento_w,0));

						select	coalesce(max(qt_min_antes_atend), 0),
							coalesce(max(ie_define_agora), 'N')
						into STRICT	qt_min_antes_atend_w,
							ie_define_agora_w
						from	regra_tempo_disp
						where	cd_estabelecimento	= cd_estabelecimento_w
						and (coalesce(cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0)) = coalesce(cd_setor_atendimento_w,0))
						and	nr_seq_turno = nr_seq_turno_hor_ag_w
						and	ie_situacao = 'A';
						
						begin
							exec_w := 'call ger_pres_mat_s_dt_lib_md_pck.calcular_dt_limite_agora_md(:1,:2,:3,:4,:5) into :result';

							EXECUTE exec_w using 	in hr_turno_agora_w,
															in hr_final_turno_agora_w,
															in dt_inicio_prescr_w,
															in qt_min_antes_atend_w,
															in dt_horario_w,
															out dt_limite_agora_w;
						exception
							when others then
								dt_limite_agora_w := null;
						end;
					end if;
					/*Fabio e Jonas - 19/01/2010 = Final da alteracao*/

					select	nextval('prescr_mat_hor_seq')
					into STRICT	nr_sequencia_w
					;

					/* Rafael em 07/10/2006 Identificar horarios especiais */

					if (ie_se_necessario_w = 'S') or (ie_acm_w = 'S') then
						ie_horario_especial_w	:= 'S';
					else
						ie_horario_especial_w	:= 'N';
					end if;

					/*if	(dt_horario_w < dt_prescricao_ww) and
						(ie_urgente_w = 'N') then
						dt_horario_w	:= dt_horario_w + 1;
					end if;*/
					begin
					exec_w := 'call ger_pres_mat_s_dt_lib_md_pck.obter_classif_urgente_md(:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13) into :result';

					EXECUTE exec_w using in 0,
												   in ie_classif_nao_padrao_w,
												   in ie_padronizado_w,
												   in ie_classif_normal_acm_sn_w,
												   in ie_se_necessario_w,
												   in ie_acm_w,
												   in dt_horario_w,
												   in dt_limite_agora_w,
												   in ie_urgente_w,
												   in ie_agora_impressao_w,
												   in ie_define_agora_w, 
												   in qt_min_antes_atend_w,
												   in dt_limite_especial_w,
												   out ie_classif_urgente_w;

					exception
					  when others then
						ie_classif_urgente_w := null;
					end;
					
					/*SO-2214423*/

					if (1 = 1) then
						nr_seq_turno_hor_esp_w 	:= Obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,to_char(dt_limite_especial_w,'hh24:mi'),cd_local_estoque_w);
						if ( nr_seq_turno_hor_esp_w = Obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,to_char(dt_horario_w,'hh24:mi'),cd_local_estoque_w)) and (ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_horario_w)) < (ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_limite_especial_w)) then
								ie_classif_urgente_w	:= 'E';
						end if;
					end if;	
					
					SELECT * FROM obter_dose_um_horario_pmh(cd_material_w, qt_dose_w, cd_unid_med_dose_w, qt_dose_hor_w, cd_unid_med_dose_hor_w) INTO STRICT qt_dose_hor_w, cd_unid_med_dose_hor_w;
					
					select	count(*)
					into STRICT	qt_hor_w
					from	prescr_mat_hor where		nr_prescricao 	= nr_prescricao_p
					and	nr_seq_material	= nr_seq_prescr_w
					and	dt_horario	= dt_horario_w LIMIT 1;
					
					if (qt_hor_w = 0) then
						select	count(*)
						into STRICT	qt_hor_w
						from	prescr_medica b,
							prescr_mat_hor x where		x.nr_prescricao		= nr_prescricao_p
						and	b.nr_prescricao		= x.nr_prescricao
						and	x.nr_seq_material	= nr_seq_prescr_w
						and	(x.dt_lib_horario IS NOT NULL AND x.dt_lib_horario::text <> '')
						and	(b.dt_liberacao_farmacia IS NOT NULL AND b.dt_liberacao_farmacia::text <> '')
						and	(clock_timestamp() + (x.qt_minutos_agora/1440)) > dt_horario_w
						and	coalesce(x.qt_minutos_agora,0) > 0 LIMIT 1;
					end if;
					
					if (qt_hor_w = 0) then
						insert into prescr_mat_hor(
							nr_sequencia,
							nr_seq_digito,
							nr_prescricao,
							nr_seq_material,
							ie_agrupador,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							ds_horario,
							dt_horario,
							qt_dose,
							qt_dispensar,
							cd_unidade_medida,
							cd_unidade_medida_dose,
							cd_material,
							nr_ocorrencia,
							qt_dispensar_hor,
							ie_urgente,
							ie_horario_especial,
							nr_seq_turno,
							ie_aprazado,
							ie_controlado,
							ie_padronizado,
							ie_classif_urgente,
							ie_dispensar_farm,
							nr_agrupamento,
							ie_adep,
							qt_horario,
							cd_unid_med_hor,
							cd_motivo_baixa,
							dt_suspensao,
							nm_usuario_susp,
							nr_atendimento
							)
						values (	nr_sequencia_w,
							calcula_digito('MODULO11',nr_sequencia_w),
							nr_prescricao_p,
							nr_seq_prescr_w,
							ie_agrupador_w,
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							ds_hora_w,
							dt_horario_w,
							qt_dose_w,
							qt_total_dispensar_w,
							cd_unidade_medida_w,
							cd_unid_med_dose_w,
							cd_material_w,
							nr_ocorrencia_w,
							CASE WHEN cd_motivo_baixa_w=0 THEN  dividir(qt_total_dispensar_w,nr_ocorrencia_w)  ELSE 0 END ,					
							ie_urgente_w,
							coalesce(ie_horario_especial_w,'N'),
							Obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,to_char(dt_horario_w,'hh24:mi'),cd_local_estoque_w),
							'N',
							ie_controlado_w,
							ie_padronizado_w,
							ie_classif_urgente_w,
							ie_regra_disp_w,
							nr_agrupamento_w,
							ie_rep_adep_w,
							qt_dose_hor_w,
							cd_unid_med_dose_hor_w,
							cd_motivo_baixa_w,
							dt_suspensao_ww,
							nm_usuario_susp_w,
							nr_atendimento_w
							);
							
						
					end if;
				end if;	
			end loop;
		else
			if (hr_prim_horario_w = '  :  ') then
				hr_prim_horario_w := null;
			end if;
			
			if (ie_urgente_w	= 'S') then
				dt_libe_w	:= dt_liberacao_w;
				if (ie_momento_lote_w = 'F') and (dt_liberacao_farmacia_w IS NOT NULL AND dt_liberacao_farmacia_w::text <> '') then
					select	max(dt_liberacao)
					into STRICT	dt_libe_w
					from	prescr_medica
					where	nr_prescricao	= nr_prescricao_p;
				elsif (ie_momento_lote_w = 'M') and (dt_liberacao_medico_w IS NOT NULL AND dt_liberacao_medico_w::text <> '') then
					dt_liberacao_w	:= dt_liberacao_medico_w;
				end if;
				dt_prescricao_ww	:= coalesce(dt_libe_w,dt_prescricao_ww);
			else
				dt_prescricao_ww	:= coalesce(dt_inicio_prescr_w,dt_prescricao_w);
			end if;
			
			ds_hora_w	:= coalesce(hr_prim_horario_w, substr(to_char(dt_primeiro_horario_w,'dd/mm/yyyy hh24:mi:ss'),12,5));
			dt_horario_w	:= pkg_date_utils.get_time(dt_prescricao_ww, ds_hora_w, 0);
		

			/*Fabio e Jonas - 19/01/2010 = Para gerar os lotes como AGORA dependendo do horario final do turno, e nao mais pelo minutos de agora*/

			if (ie_agora_impressao_w = 'S') then
				nr_seq_turno_hor_ag_w	:= Obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,to_char(dt_horario_w,'hh24:mi'),cd_local_estoque_w);
				select	max(to_char(b.hr_inicial,'hh24:mi')),
					max(to_char(b.hr_final,'hh24:mi'))
				into STRICT	hr_turno_agora_w,
					hr_final_turno_agora_w
				from	regra_turno_disp_param b,
					regra_turno_disp a
				where	a.nr_sequencia		= b.nr_seq_turno
				and	a.cd_estabelecimento	= cd_estabelecimento_w
				and	a.nr_sequencia		= nr_seq_turno_hor_ag_w
				and (coalesce(b.cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0))	= coalesce(cd_setor_atendimento_w,0));

				select	coalesce(max(qt_min_antes_atend), 0),
					coalesce(max(ie_define_agora), 'N')
				into STRICT	qt_min_antes_atend_w,
					ie_define_agora_w
				from	regra_tempo_disp
				where	cd_estabelecimento	= cd_estabelecimento_w
				and (coalesce(cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0)) = coalesce(cd_setor_atendimento_w,0))
				and	nr_seq_turno = nr_seq_turno_hor_ag_w
				and	ie_situacao = 'A';
				
				/*SO-2214423*/

				if (hr_turno_agora_w > hr_final_turno_agora_w) then
					if (ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_horario_w) > ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_inicio_prescr_w)) then
						dt_limite_agora_w := pkg_date_utils.get_time(dt_horario_w - 1, hr_turno_agora_w, 0) - (qt_min_antes_atend_w/1440);
					else
						dt_limite_agora_w := pkg_date_utils.get_time(dt_horario_w, hr_turno_agora_w, 0) - (qt_min_antes_atend_w/1440);
					end if;
				else
					dt_limite_agora_w := pkg_date_utils.get_time(dt_horario_w, hr_turno_agora_w, 0) - (qt_min_antes_atend_w/1440);
				end if;
				
			end if;
			/*Fabio e Jonas - 19/01/2010 = Final da alteracao*/

			select	nextval('prescr_mat_hor_seq')
			into STRICT	nr_sequencia_w
			;

			/* Rafael em 07/10/2006 Identificar horarios especiais */

			ie_horario_especial_w	:= 'S';

			if (dt_horario_w < dt_prescricao_ww) and (ie_urgente_w = 'N') then
				dt_horario_w	:= dt_horario_w + 1;
			end if;

			if (dt_suspensao_progr_w > dt_horario_w) or (coalesce(dt_suspensao_progr_w::text, '') = '') then
			
        --- Inicio MD58
				begin
				  exec_w := 'call ger_pres_mat_s_dt_lib_md_pck.obter_classif_urgente_md(:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13) into :result';

				  EXECUTE exec_w using in 0,
												 in ie_classif_nao_padrao_w,
												 in ie_padronizado_w,
												 in ie_classif_normal_acm_sn_w,
												 in ie_se_necessario_w,
												 in ie_acm_w,
												 in dt_horario_w,
												 in dt_limite_agora_w,
												 in ie_urgente_w,
												 in ie_agora_impressao_w,
												 in ie_define_agora_w, 
												 in qt_min_antes_atend_w,
												 in dt_limite_especial_w,
												 out ie_classif_urgente_w;

				exception
					when others then
					  ie_classif_urgente_w := null;
				end;
        --- Fim MD58
				SELECT * FROM obter_dose_um_horario_pmh(cd_material_w, qt_dose_w, cd_unid_med_dose_w, qt_dose_hor_w, cd_unid_med_dose_hor_w) INTO STRICT qt_dose_hor_w, cd_unid_med_dose_hor_w;
				
				select	count(*)
				into STRICT	qt_hor_w
				from	prescr_mat_hor where		nr_prescricao 	= nr_prescricao_p
				and	nr_seq_material	= nr_seq_prescr_w
				and	dt_horario	= dt_horario_w LIMIT 1;
				
				if (qt_hor_w = 0) then
					select	count(*)
					into STRICT	qt_hor_w
					from	prescr_medica b,
						prescr_mat_hor x where		x.nr_prescricao		= nr_prescricao_p
					and	b.nr_prescricao		= x.nr_prescricao
					and	x.nr_seq_material	= nr_seq_prescr_w
					and	(x.dt_lib_horario IS NOT NULL AND x.dt_lib_horario::text <> '')
					and	(b.dt_liberacao_farmacia IS NOT NULL AND b.dt_liberacao_farmacia::text <> '')
					and	(clock_timestamp() + (x.qt_minutos_agora/1440)) > dt_horario_w
					and	coalesce(x.qt_minutos_agora,0) > 0 LIMIT 1;
				end if;
				
				if (qt_hor_w = 0) then
					insert into prescr_mat_hor(
						nr_sequencia,
						nr_seq_digito,
						nr_prescricao,
						nr_seq_material,
						ie_agrupador,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						ds_horario,
						dt_horario,
						qt_dose,
						qt_dispensar,
						cd_unidade_medida,
						cd_unidade_medida_dose,
						cd_material,
						nr_ocorrencia,
						qt_dispensar_hor,
						ie_urgente,
						ie_horario_especial,
						nr_seq_turno,
						ie_aprazado,
						ie_controlado,
						ie_padronizado,
						ie_classif_urgente,
						ie_dispensar_farm,
						nr_agrupamento,
						ie_adep,
						qt_horario,
						cd_unid_med_hor,
						cd_motivo_baixa,
						dt_suspensao,
						nm_usuario_susp,
						nr_atendimento
						)
					values (	nr_sequencia_w,
						calcula_digito('MODULO11',nr_sequencia_w),
						nr_prescricao_p,
						nr_seq_prescr_w,
						ie_agrupador_w,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						ds_hora_w,
						dt_horario_w,
						qt_dose_w,
						qt_total_dispensar_w,
						cd_unidade_medida_w,
						cd_unid_med_dose_w,
						cd_material_w,
						nr_ocorrencia_w,
						CASE WHEN cd_motivo_baixa_w=0 THEN  qt_total_dispensar_w  ELSE 0 END ,
						ie_urgente_w,
						coalesce(ie_horario_especial_w,'S'),
						Obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,to_char(dt_horario_w,'hh24:mi'),cd_local_estoque_w),
						'N',
						ie_controlado_w,
						ie_padronizado_w,
						ie_classif_urgente_w,
						ie_regra_disp_w,
						nr_agrupamento_w,
						ie_rep_adep_w,
						qt_dose_hor_w,
						cd_unid_med_dose_hor_w,
						cd_motivo_baixa_w,
						dt_suspensao_ww,
						nm_usuario_susp_w,
						nr_atendimento_w
						);
						
					
				end if;
			end if;	
		end if;

	end loop;
	close C13;
	end;

procedure gerar_hor_leites_e_derivados is
	begin
	open C15;
	loop
	fetch C15 into
		ie_agrupador_w,
		nr_seq_prescr_w,
		qt_dose_w,
		qt_total_dispensar_w,
		cd_unidade_medida_w,
		cd_unid_med_dose_w,
		nr_ocorrencia_w,
		cd_material_w,
		ds_horarios_w,
		ds_horarios_padr_w,
		cd_intervalo_w,
		hr_prim_horario_w,
		ie_urgente_w,
		ie_se_necessario_w,
		ie_acm_w,
		ie_controlado_w,
		ie_padronizado_w,
		ie_regra_disp_w,
		nr_agrupamento_w,
		cd_protocolo_w,
		cd_local_estoque_w,
		cd_motivo_baixa_w,
		qt_dose_especial_w,
		hr_dose_especial_w,
		dt_suspensao_progr_w,
		dt_suspensao_ww,
		nm_usuario_susp_w;
	EXIT WHEN NOT FOUND; /* apply on C15 */
	
		-- CPOE_ITEM_AGORA: Tratamento para que somente primeiro horario do item seja de classificacao "Urgente"
		if (cd_funcao_origem_w = 2314) and (ie_urgente_w = 'S') then
			select	coalesce(max('N'),'S')
			into STRICT	ie_urgente_w
			from	prescr_mat_hor x
			where	x.nr_prescricao		= nr_prescricao_p
			and		x.nr_seq_material	= nr_seq_prescr_w
			and		Obter_se_horario_liberado(x.dt_lib_horario, x.dt_horario) = 'S'
			and		coalesce(x.ie_dose_especial,'N')	= 'N'
			and		coalesce(x.dt_suspensao::text, '') = '' LIMIT 1;
		end if;

		dt_prescricao_ww	:= dt_prescricao_w;
		qt_dia_adic_w	:= 0;

		if (hr_dose_especial_w IS NOT NULL AND hr_dose_especial_w::text <> '') and (hr_dose_especial_w	<> '  :  ') then
			ds_horarios_padr_w := hr_dose_especial_w || ' ' ||ds_horarios_padr_w;
		end if;

		if (ds_horarios_padr_w IS NOT NULL AND ds_horarios_padr_w::text <> '') and (ds_horarios_padr_w	<> '  :  ') then
			while	(ds_horarios_padr_w IS NOT NULL AND ds_horarios_padr_w::text <> '') LOOP
				k	:= position(' ' in ds_horarios_padr_w);

				if (k > 1) and ((substr(ds_horarios_padr_w, 1, k -1) IS NOT NULL AND (substr(ds_horarios_padr_w, 1, k -1))::text <> '')) then
					ds_hora_w		:= substr(ds_horarios_padr_w, 1, k-1);
					ds_hora_w		:= replace(ds_hora_w, ' ','');
					ds_horarios_padr_w	:= substr(ds_horarios_padr_w, k + 1, 2000);
				elsif (ds_horarios_padr_w IS NOT NULL AND ds_horarios_padr_w::text <> '') then
					ds_hora_w 		:= replace(ds_horarios_padr_w,' ','');
					ds_horarios_padr_w	:= '';
				end if;
				
				if (coalesce(hr_dose_especial_w::text, '') = '') and

					((ie_urgente_w = 'N') or (cd_funcao_origem_w = 2314)) then
					if (position('A' in ds_hora_w) > 0) and (qt_dia_adic_w = 0) then
						qt_dia_adic_w	:= 1;
					elsif (position('AA' in ds_hora_w) > 0) then

						qt_dia_adic_w	:= qt_dia_adic_w + 1;
					end if;
				end if;
				

				ds_hora_w	:= replace(ds_hora_w,'A','');
				ds_hora_w	:= replace(ds_hora_w,'A','');

				if (ie_urgente_w	= 'S') then
					dt_libe_w	:= dt_liberacao_w;
					if (ie_momento_lote_w = 'F') and (dt_liberacao_farmacia_w IS NOT NULL AND dt_liberacao_farmacia_w::text <> '') then
						select	max(dt_liberacao)
						into STRICT	dt_libe_w
						from	prescr_medica
						where	nr_prescricao	= nr_prescricao_p;
					elsif (ie_momento_lote_w = 'M') and (dt_liberacao_medico_w IS NOT NULL AND dt_liberacao_medico_w::text <> '') then
						dt_liberacao_w	:= dt_liberacao_medico_w;
					end if;
					dt_prescricao_ww	:= coalesce(dt_libe_w,dt_prescricao_ww);
				else
					dt_prescricao_ww	:= coalesce(dt_inicio_prescr_w,dt_prescricao_w);
				end if;

				dt_horario_w	:= pkg_date_utils.get_time(dt_prescricao_ww + qt_dia_adic_w, replace(ds_hora_w,'A',''), 0);

				select	nextval('prescr_mat_hor_seq')
				into STRICT	nr_sequencia_w
				;

				if (ie_se_necessario_w = 'S') or (ie_acm_w = 'S') then
					ie_horario_especial_w	:= 'S';
				else
					ie_horario_especial_w	:= 'N';
				end if;

				if (dt_horario_w < dt_prescricao_ww) and (coalesce(hr_dose_especial_w::text, '') = '') and (ie_urgente_w = 'N') then
					dt_horario_w	:= dt_horario_w + 1;
				end if;
				
				hr_dose_especial_w := null;

				if (dt_suspensao_progr_w > dt_horario_w) or (coalesce(dt_suspensao_progr_w::text, '') = '') then
				
          --- Inicio MD59
					begin
					EXEC_w := 'CALL GER_PRES_MAT_S_DT_LIB_MD_PCK.OBTER_CLASSIF_URGENTE_MD(:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13) INTO :RESULT';

					EXECUTE EXEC_w USING IN 0,
												   IN ie_classif_nao_padrao_w,
												   IN ie_padronizado_w,
												   IN ie_classif_normal_acm_sn_w,
												   IN ie_se_necessario_w,
												   IN ie_acm_w,
												   IN dt_horario_w,
												   IN dt_limite_agora_w,
												   IN ie_urgente_w,
												   IN ie_agora_impressao_w,
												   IN ie_define_agora_w, 
												   IN qt_min_antes_atend_w,
												   IN dt_limite_especial_w,
												   OUT ie_classif_urgente_w;

					exception
					  when others then
						ie_classif_urgente_w := null;
					end;
          --- Fim MD59
					
					SELECT * FROM obter_dose_um_horario_pmh(cd_material_w, qt_dose_w, cd_unid_med_dose_w, qt_dose_hor_w, cd_unid_med_dose_hor_w) INTO STRICT qt_dose_hor_w, cd_unid_med_dose_hor_w;
					
					select	count(*)
					into STRICT	qt_hor_w
					from	prescr_mat_hor where		nr_prescricao 	= nr_prescricao_p
					and	nr_seq_material	= nr_seq_prescr_w
					and	dt_horario	= dt_horario_w LIMIT 1;
					
					if (qt_hor_w = 0) then
						select	count(*)
						into STRICT	qt_hor_w
						from	prescr_medica b,
							prescr_mat_hor x where		x.nr_prescricao		= nr_prescricao_p
						and	b.nr_prescricao		= x.nr_prescricao
						and	x.nr_seq_material	= nr_seq_prescr_w
						and	(x.dt_lib_horario IS NOT NULL AND x.dt_lib_horario::text <> '')
						and	(b.dt_liberacao_farmacia IS NOT NULL AND b.dt_liberacao_farmacia::text <> '')
						and	(clock_timestamp() + (x.qt_minutos_agora/1440)) > dt_horario_w
						and	coalesce(x.qt_minutos_agora,0) > 0 LIMIT 1;
					end if;
					
					if (qt_hor_w = 0) then
						select	count(*)
						into STRICT	qt_jejum_w
						from	rep_jejum a,
							prescr_medica b where		dt_horario_w between dt_inicio and dt_fim -(1/1440)
						and	a.nr_prescricao		= b.nr_prescricao
						and	coalesce(a.ie_suspenso,'N')	<> 'S'
						and	coalesce(b.dt_suspensao::text, '') = ''
						and	ie_liberacao_p = 'S'
						and	b.nr_atendimento	= nr_atendimento_w LIMIT 1;
						
						if (qt_jejum_w = 0) or (ie_contem_jejum_nut_w = 'S') or (qt_dose_especial_w > 0) then
						
							insert into prescr_mat_hor(
								nr_sequencia,
								nr_seq_digito,
								nr_prescricao,
								nr_seq_material,
								ie_agrupador,
								dt_atualizacao,
								nm_usuario,
								dt_atualizacao_nrec,
								nm_usuario_nrec,
								ds_horario,
								dt_horario,
								qt_dose,
								qt_dispensar,
								cd_unidade_medida,
								cd_unidade_medida_dose,
								cd_material,
								nr_ocorrencia,
								qt_dispensar_hor,
								ie_urgente,
								ie_horario_especial,
								nr_seq_turno,
								ie_aprazado,
								ie_controlado,
								ie_padronizado,
								ie_classif_urgente,
								ie_dispensar_farm,
								nr_agrupamento,
								ie_adep,
								qt_horario,
								cd_unid_med_hor,
								cd_motivo_baixa,
								dt_suspensao,
								nm_usuario_susp,
								nr_atendimento	)
							values (	nr_sequencia_w,
								calcula_digito('MODULO11',nr_sequencia_w),
								nr_prescricao_p,
								nr_seq_prescr_w,
								ie_agrupador_w,
								clock_timestamp(),
								nm_usuario_p,
								clock_timestamp(),
								nm_usuario_p,
								ds_hora_w,
								dt_horario_w,
								qt_dose_w,
								qt_total_dispensar_w,
								cd_unidade_medida_w,
								cd_unid_med_dose_w,
								cd_material_w,
								nr_ocorrencia_w,
								CASE WHEN cd_motivo_baixa_w=0 THEN  dividir(qt_total_dispensar_w,nr_ocorrencia_w)  ELSE 0 END ,
								ie_urgente_w,
								coalesce(ie_horario_especial_w,'N'),
								Obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,to_char(dt_horario_w,'hh24:mi'),cd_local_estoque_w),
								'N',
								ie_controlado_w,
								ie_padronizado_w,
								ie_classif_urgente_w,
								ie_regra_disp_w,
								nr_agrupamento_w,
								ie_rep_adep_w,
								qt_dose_hor_w,
								cd_unid_med_dose_hor_w,
								cd_motivo_baixa_w,
								dt_suspensao_ww,
								nm_usuario_susp_w,
								nr_atendimento_w);
						end if;
				
					
					end if;
				end if;	
			end loop;
		else
			if (hr_prim_horario_w = '  :  ') then
				hr_prim_horario_w := null;
			end if;
			
			dt_prescricao_ww	:= coalesce(dt_inicio_prescr_w,dt_prescricao_w);

			ds_hora_w	:= coalesce(hr_prim_horario_w, substr(to_char(dt_primeiro_horario_w,'dd/mm/yyyy hh24:mi:ss'),12,5));
				
			dt_horario_w	:= pkg_date_utils.get_time(dt_prescricao_ww, ds_hora_w, 0);

			select	nextval('prescr_mat_hor_seq')
			into STRICT	nr_sequencia_w
			;

			ie_horario_especial_w	:= 'S';
		
			if (dt_horario_w < dt_prescricao_ww) then
				dt_horario_w	:= dt_horario_w + 1;
			end if;

			if (dt_suspensao_progr_w > dt_horario_w) or (coalesce(dt_suspensao_progr_w::text, '') = '') then

				SELECT * FROM obter_dose_um_horario_pmh(cd_material_w, qt_dose_w, cd_unid_med_dose_w, qt_dose_hor_w, cd_unid_med_dose_hor_w) INTO STRICT qt_dose_hor_w, cd_unid_med_dose_hor_w;
				
				select	count(*)
				into STRICT	qt_hor_w
				from	prescr_mat_hor where		nr_prescricao 	= nr_prescricao_p
				and		nr_seq_material	= nr_seq_prescr_w
				and		dt_horario		= dt_horario_w
				and		coalesce(ie_horario_especial,'N') = 'S' LIMIT 1;

				if (qt_hor_w = 0) then
					begin
					insert into prescr_mat_hor(
						nr_sequencia,
						nr_seq_digito,
						nr_prescricao,
						nr_seq_material,
						ie_agrupador,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						ds_horario,
						dt_horario,
						qt_dose,
						qt_dispensar,
						cd_unidade_medida,
						cd_unidade_medida_dose,
						cd_material,
						nr_ocorrencia,
						qt_dispensar_hor,
						ie_urgente,
						ie_horario_especial,
						nr_seq_turno,
						ie_aprazado,
						ie_controlado,
						ie_padronizado,
						ie_classif_urgente,
						ie_dispensar_farm,
						nr_agrupamento,
						ie_adep,
						qt_horario,
						cd_unid_med_hor,
						cd_motivo_baixa,
						nr_seq_superior,
						dt_suspensao,
						nm_usuario_susp,
						nr_atendimento,
						cd_local_estoque_baixa
						)
					values (	nr_sequencia_w,
						calcula_digito('MODULO11',nr_sequencia_w),
						nr_prescricao_p,
						nr_seq_prescr_w,
						ie_agrupador_w,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						ds_hora_w,
						dt_horario_w,
						qt_dose_w,
						qt_total_dispensar_w,
						cd_unidade_medida_w,
						cd_unid_med_dose_w,
						cd_material_w,
						nr_ocorrencia_w,
						CASE WHEN cd_motivo_baixa_w=0 THEN  dividir(qt_total_dispensar_w,nr_ocorrencia_w)  ELSE 0 END ,
						ie_urgente_w,
						coalesce(ie_horario_especial_w,'S'),
						Obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,to_char(dt_horario_w,'hh24:mi'),cd_local_estoque_w),
						'N',
						ie_controlado_w,
						ie_padronizado_w,
						ie_classif_urgente_w,
						ie_regra_disp_w,
						nr_agrupamento_w,
						--ie_rep_adep_w);
						ie_gerar_adep_w,
						qt_dose_hor_w,
						cd_unid_med_dose_hor_w,
						cd_motivo_baixa_w,
						nr_seq_kit_w,
						dt_suspensao_ww,
						nm_usuario_susp_w,
						nr_atendimento_w,
						cd_local_baixa_kit_w
						);

					exception when others then
						CALL gerar_log_prescricao(nr_prescricao_p, nr_seq_prescr_w, ie_agrupador_w, null, null, substr(sqlerrm,1,2000), nm_usuario_p, 17039, 'S');
						sqlerrm_w	:= substr(sqlerrm,1,2000);
					end;
				end if;
			end if;	
		end if;

	end loop;
	close C15;
	end;

procedure gerar_hor_assoc_leites_deriv is
	begin
	open C17;
	loop
	fetch C17 into
		ie_agrupador_w,
		nr_seq_prescr_w,
		qt_dose_w,
		qt_total_dispensar_w,
		cd_unidade_medida_w,
		cd_unid_med_dose_w,
		nr_ocorrencia_w,
		cd_material_w,
		ds_horarios_w,
		ds_horarios_padr_w,
		cd_intervalo_w,
		hr_prim_horario_w,
		ie_urgente_w,
		ie_se_necessario_w,
		ie_acm_w,
		ie_controlado_w,
		ie_padronizado_w,
		ie_regra_disp_w,
		nr_agrupamento_w,
		cd_protocolo_w,
		cd_local_estoque_w,
		cd_motivo_baixa_w,
		qt_dose_especial_w,
		hr_dose_especial_w,
		dt_suspensao_progr_w,
		dt_suspensao_ww,
		nm_usuario_susp_w;
	EXIT WHEN NOT FOUND; /* apply on C17 */
	
		-- CPOE_ITEM_AGORA: Tratamento para que somente primeiro horario do item seja de classificacao "Urgente"
		if (cd_funcao_origem_w = 2314) and (ie_urgente_w = 'S') then
			select	coalesce(max('N'),'S')
			into STRICT	ie_urgente_w
			from	prescr_mat_hor x
			where	x.nr_prescricao		= nr_prescricao_p
			and		x.nr_seq_material	= nr_seq_prescr_w
			and		Obter_se_horario_liberado(x.dt_lib_horario, x.dt_horario) = 'S'
			and		coalesce(x.ie_dose_especial,'N')	= 'N'
			and		coalesce(x.dt_suspensao::text, '') = '' LIMIT 1;
		end if;

		dt_prescricao_ww	:= dt_prescricao_w;
		qt_dia_adic_w	:= 0;
		
		if (ds_horarios_padr_w IS NOT NULL AND ds_horarios_padr_w::text <> '') then
			while	(ds_horarios_padr_w IS NOT NULL AND ds_horarios_padr_w::text <> '') LOOP
				k	:= position(' ' in ds_horarios_padr_w);

				if (k > 1) and ((substr(ds_horarios_padr_w, 1, k -1) IS NOT NULL AND (substr(ds_horarios_padr_w, 1, k -1))::text <> '')) then
					ds_hora_w		:= substr(ds_horarios_padr_w, 1, k-1);
					ds_hora_w		:= replace(ds_hora_w, ' ','');
					ds_horarios_padr_w	:= substr(ds_horarios_padr_w, k + 1, 2000);
				elsif (ds_horarios_padr_w IS NOT NULL AND ds_horarios_padr_w::text <> '') then
					ds_hora_w 		:= replace(ds_horarios_padr_w,' ','');
					ds_horarios_padr_w	:= '';
				end if;

				if	((ie_urgente_w = 'N') or (cd_funcao_origem_w = 2314)) then
					if (position('A' in ds_hora_w) > 0) and (qt_dia_adic_w = 0) then
						qt_dia_adic_w	:= 1;
					elsif (position('AA' in ds_hora_w) > 0) then

						qt_dia_adic_w	:= qt_dia_adic_w + 1;
					end if;
				end if;

				ds_hora_w	:= replace(ds_hora_w,'A','');
				ds_hora_w	:= replace(ds_hora_w,'A','');

				if (ie_urgente_w	= 'S') then
					dt_libe_w	:= dt_liberacao_w;
					if (ie_momento_lote_w = 'F') and (dt_liberacao_farmacia_w IS NOT NULL AND dt_liberacao_farmacia_w::text <> '') then
						select	max(dt_liberacao)
						into STRICT	dt_libe_w
						from	prescr_medica
						where	nr_prescricao	= nr_prescricao_p;
					elsif (ie_momento_lote_w = 'M') and (dt_liberacao_medico_w IS NOT NULL AND dt_liberacao_medico_w::text <> '') then
						dt_liberacao_w	:= dt_liberacao_medico_w;
					end if;
					dt_prescricao_ww	:= coalesce(dt_libe_w,dt_prescricao_ww);
				else
					dt_prescricao_ww	:= coalesce(dt_inicio_prescr_w,dt_prescricao_w);
				end if;

				dt_horario_w	:= pkg_date_utils.get_time(dt_prescricao_ww + qt_dia_adic_w, replace(ds_hora_w,'A',''), 0);

				select	nextval('prescr_mat_hor_seq')
				into STRICT	nr_sequencia_w
				;

				if (ie_se_necessario_w = 'S') or (ie_acm_w = 'S') then
					ie_horario_especial_w	:= 'S';
				else
					ie_horario_especial_w	:= 'N';
				end if;

				if (dt_horario_w < dt_prescricao_ww) and (ie_urgente_w = 'N') then
					dt_horario_w	:= dt_horario_w + 1;
				end if;

				if (dt_suspensao_progr_w > dt_horario_w) or (coalesce(dt_suspensao_progr_w::text, '') = '') then
				
          --- Inicio MD60
					begin
						exec_w := 'call ger_pres_mat_s_dt_lib_md_pck.obter_classif_urgente_md(:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13) into :result';

						EXECUTE exec_w using in 0,
													   in ie_classif_nao_padrao_w,
													   in ie_padronizado_w,
													   in ie_classif_normal_acm_sn_w,
													   in ie_se_necessario_w,
													   in ie_acm_w,
													   in dt_horario_w,
													   in dt_limite_agora_w,
													   in ie_urgente_w,
													   in ie_agora_impressao_w,
													   in ie_define_agora_w, 
													   in qt_min_antes_atend_w,
													   in dt_limite_especial_w,
													   out ie_classif_urgente_w;

					exception
						when others then
							ie_classif_urgente_w := null;
					end;
          --- Fim MD60
					
					SELECT * FROM obter_dose_um_horario_pmh(cd_material_w, qt_dose_w, cd_unid_med_dose_w, qt_dose_hor_w, cd_unid_med_dose_hor_w) INTO STRICT qt_dose_hor_w, cd_unid_med_dose_hor_w;

					select	count(*)
					into STRICT	qt_hor_w
					from	prescr_mat_hor where		nr_prescricao 	= nr_prescricao_p
					and	nr_seq_material	= nr_seq_prescr_w
					and	dt_horario	= dt_horario_w LIMIT 1;
					
					if (qt_hor_w = 0) then
						select	count(*)
						into STRICT	qt_hor_w
						from	prescr_medica b,
							prescr_mat_hor x where		x.nr_prescricao		= nr_prescricao_p
						and	b.nr_prescricao		= x.nr_prescricao
						and	x.nr_seq_material	= nr_seq_prescr_w
						and	(x.dt_lib_horario IS NOT NULL AND x.dt_lib_horario::text <> '')
						and	(b.dt_liberacao_farmacia IS NOT NULL AND b.dt_liberacao_farmacia::text <> '')
						and	(clock_timestamp() + (x.qt_minutos_agora/1440)) > dt_horario_w
						and	coalesce(x.qt_minutos_agora,0) > 0 LIMIT 1;
					end if;
					
					if (qt_hor_w = 0) then
						select	count(*)
						into STRICT	qt_jejum_w
						from	rep_jejum a,
							prescr_medica b where		dt_horario_w between dt_inicio and dt_fim -1/1440
						and	a.nr_prescricao		= b.nr_prescricao
						and	coalesce(a.ie_suspenso,'N')	<> 'S'
						and	coalesce(b.dt_suspensao::text, '') = ''
						and	ie_liberacao_p = 'S'
						and	b.nr_atendimento	= nr_atendimento_w LIMIT 1;
						
						if (qt_jejum_w = 0) or (ie_contem_jejum_nut_w = 'S') or (qt_dose_especial_w > 0) then
						
							insert into prescr_mat_hor(
								nr_sequencia,
								nr_seq_digito,
								nr_prescricao,
								nr_seq_material,
								ie_agrupador,
								dt_atualizacao,
								nm_usuario,
								dt_atualizacao_nrec,
								nm_usuario_nrec,
								ds_horario,
								dt_horario,
								qt_dose,
								qt_dispensar,
								cd_unidade_medida,
								cd_unidade_medida_dose,
								cd_material,
								nr_ocorrencia,
								qt_dispensar_hor,
								ie_urgente,
								ie_horario_especial,
								nr_seq_turno,
								ie_aprazado,
								ie_controlado,
								ie_padronizado,
								ie_classif_urgente,
								ie_dispensar_farm,
								nr_agrupamento,
								ie_adep,
								qt_horario,
								cd_unid_med_hor,
								cd_motivo_baixa,
								dt_suspensao,
								nm_usuario_susp,
								nr_atendimento
								)
							values (	nr_sequencia_w,
								calcula_digito('MODULO11',nr_sequencia_w),
								nr_prescricao_p,
								nr_seq_prescr_w,
								ie_agrupador_w,
								clock_timestamp(),
								nm_usuario_p,
								clock_timestamp(),
								nm_usuario_p,
								ds_hora_w,
								dt_horario_w,
								qt_dose_w,
								qt_total_dispensar_w,
								cd_unidade_medida_w,
								cd_unid_med_dose_w,
								cd_material_w,
								nr_ocorrencia_w,
								CASE WHEN cd_motivo_baixa_w=0 THEN  dividir(qt_total_dispensar_w,nr_ocorrencia_w)  ELSE 0 END ,
								ie_urgente_w,
								coalesce(ie_horario_especial_w,'N'),
								Obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,to_char(dt_horario_w,'hh24:mi'),cd_local_estoque_w),
								'N',
								ie_controlado_w,
								ie_padronizado_w,
								ie_classif_urgente_w,
								ie_regra_disp_w,
								nr_agrupamento_w,
								ie_rep_adep_w,
								qt_dose_hor_w,
								cd_unid_med_dose_hor_w,
								cd_motivo_baixa_w,
								dt_suspensao_ww,
								nm_usuario_susp_w,
								nr_atendimento_w);
						end if;
							
						
					end if;
				end if;	
			end loop;
		end if;

	end loop;
	close C17;
	end;

begin

begin
	CALL gravar_log_tasy(10007,
	substr('Gerar_prescr_mat_sem_dt_lib Parametros LOG:' ||
	' nr_prescricao_p: '  ||   nr_prescricao_p ||	
	' nr_seq_item_p: '  ||   nr_seq_item_p ||		
	' cd_perfil_p: '   ||   cd_perfil_p ||		
	' ie_liberacao_p: '   ||   ie_liberacao_p ||		
	' nm_usuario_p: '   ||   nm_usuario_p ||		
	' ie_lib_parc_p: '   ||   ie_lib_parc_p ||		
	' ie_tipo_item_p: '   ||   ie_tipo_item_p ||		
	' qt_minutos_agora_p: '   ||   qt_minutos_agora_p,1,2000),nm_usuario_p);
	
	select	max(dt_liberacao),
			max(dt_primeiro_horario),
			max(cd_setor_atendimento),
			max(cd_local_estoque),
			coalesce(max(cd_estabelecimento),1),
			PKG_DATE_UTILS.start_of(MAX(dt_prescricao),'mi',0),
			max(dt_inicio_prescr),
			max(dt_liberacao_farmacia),
			coalesce(max(ie_lib_farm),'N'),
			coalesce(max(ie_adep),obter_se_setor_adep(max(cd_setor_atendimento))),
			max(ie_adep),
			max(nr_atendimento),
			max(dt_liberacao_medico),
			max(dt_validade_prescr),
			max(dt_rep_pt),
			max(dt_rep_pt2),
			max(ie_motivo_prescricao),
			coalesce(max(cd_funcao_origem),924),
			max(dt_suspensao),
			max(dt_primeiro_horario),
			coalesce(max(nr_horas_validade),0)
	into STRICT	dt_liberacao_w,
			dt_primeiro_horario_w,
			cd_setor_atendimento_w,
			cd_local_estoque_w,
			cd_estabelecimento_w,
			dt_prescricao_w,
			dt_inicio_prescr_w,
			dt_liberacao_farmacia_w,
			ie_lib_farm_w,
			ie_rep_adep_w,
			ie_adep_param_w,
			nr_atendimento_w,
			dt_liberacao_medico_w,
			dt_validade_prescr_w,
			dt_rep_pt_w,
			dt_rep_pt2_w,
			ie_motivo_prescricao_w,
			cd_funcao_origem_w,
			dt_suspensao_prescr_w,
			dt_prim_hor_prescr_w,
			nr_horas_validade_w
	from	prescr_medica
	where	nr_prescricao	= nr_prescricao_p;

    ie_inf_ras_hor_medi_w := obter_se_info_rastre_prescr( 'H', nm_usuario_p, cd_perfil_p, cd_estabelecimento_w );

	select 	coalesce(max('S'),'N')
	into STRICT	ie_quimio_w
	from	paciente_atendimento
	where	nr_prescricao = nr_prescricao_p;

	VarIdentPrescrADEP_w := obter_param_usuario(924, 246, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, VarIdentPrescrADEP_w);
	ie_gerar_associdos_ccg_w := obter_param_usuario(1113, 191, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_gerar_associdos_ccg_w);
	ie_agora_especial_w := obter_param_usuario(924, 519, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_agora_especial_w);
	ie_lib_individual_w := Obter_Param_Usuario(924, 530, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_lib_individual_w);
	ie_altera_dt_proxima_dose_w := obter_param_usuario(924, 694, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_altera_dt_proxima_dose_w);
	ie_copia_status_hor_w := obter_param_usuario(924, 714, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_copia_status_hor_w);
	ie_gerar_horarios_susp_w := obter_param_usuario(950, 55, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_gerar_horarios_susp_w);
	ie_gerar_hor_zerado_dd_w := obter_param_usuario(924, 791, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_gerar_hor_zerado_dd_w);
	ie_local_estoque_mat_hor_w := obter_param_usuario(924, 851, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_local_estoque_mat_hor_w);
	ie_contem_jejum_nut_w := obter_param_usuario(924, 854, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_contem_jejum_nut_w);
	ie_prim_hor_sol_kit_w := obter_param_usuario(924, 940, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_prim_hor_sol_kit_w);
	var_param1132_w := obter_param_usuario(924, 1132, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, var_param1132_w);
	ie_gerar_npt_fases_w := Obter_param_Usuario(924, 1176, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_gerar_npt_fases_w);
	ie_param24_cpoe_w := Obter_param_Usuario(2314, 24, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_param24_cpoe_w);	
	ie_valida_dose_presc_w := Obter_param_Usuario(-1113, 70, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_valida_dose_presc_w);
	ie_gerar_dil_supl_w := Obter_param_Usuario(924, 296, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_gerar_dil_supl_w);
	
	excluir_horarios_anteriores;
		
	cd_local_estoque_baixa_w	:= null;
	
	if (coalesce(cd_setor_atendimento_w,0) > 0) then	
		select	coalesce(max(cd_local_estoque),0)
		into STRICT	cd_local_estoque_baixa_w
		from	setor_local
		where	cd_setor_atendimento = cd_setor_atendimento_w
		and		ie_loca_estoque_pac = 'S';				
		
		if (cd_local_estoque_baixa_w = 0) then
			cd_local_estoque_baixa_w := null;
		end if;
	end if;

	qt_registro_w	:= 0;

	if	((coalesce(nr_seq_item_p,0) > 0) and (ie_liberacao_p = 'N')) then
		select	max(dt_lib_material),
				max(dt_lib_farmacia)
		into STRICT	dt_liberacao_w,
				dt_liberacao_farmacia_w
		from	prescr_material
		where	nr_prescricao	= nr_prescricao_p
		and	nr_sequencia	= nr_seq_item_p;
	end if;

	open C20;
	loop
	fetch C20 into	
		ie_momento_lote_w,
		ie_regra_agora_w;
	EXIT WHEN NOT FOUND; /* apply on C20 */
		begin
		ie_momento_lote_w	:= ie_momento_lote_w;
		ie_regra_agora_w	:= ie_regra_agora_w;
		end;
	end loop;
	close C20;

	if (ie_momento_lote_w = 'F') and (dt_liberacao_farmacia_w IS NOT NULL AND dt_liberacao_farmacia_w::text <> '') then
		dt_liberacao_w	:= dt_liberacao_farmacia_w;
	elsif (ie_momento_lote_w = 'M') and (dt_liberacao_medico_w IS NOT NULL AND dt_liberacao_medico_w::text <> '') then
		dt_liberacao_w	:= dt_liberacao_medico_w;
	end if;

	select	coalesce(max(qt_min_agora),0),
			coalesce(max(qt_min_especial),0),
			max(ie_classif_urgencia),
			coalesce(max(ie_horario_acm),'S'),
			coalesce(max(ie_horario_sn),'S'),
			coalesce(max(ie_classif_lote), 'N'),
			coalesce(max(ie_forma_agora), 'N'),
			coalesce(max(ie_gerar_proc_gedipa_job),'S'),
      coalesce(max(ie_classif_normal_acm_sn),'N')
	into STRICT	qt_min_agora_w,
			qt_min_especial_w,
			ie_classif_nao_padrao_w,
			ie_horario_acm_w,
			ie_horario_sn_w,
			ie_classif_lote_w,
			ie_agora_impressao_w,
			ie_gerar_proc_gedipa_job_w,
      ie_classif_normal_acm_sn_w
	from	parametros_farmacia
	where	cd_estabelecimento	= cd_estabelecimento_w;

	dt_limite_agora_w		:= PKG_DATE_UTILS.get_DateTime(dt_liberacao_w + qt_min_agora_w/1440,dt_liberacao_w + qt_min_agora_w/1440);
	dt_limite_especial_w	:= PKG_DATE_UTILS.get_DateTime(dt_liberacao_w + qt_min_especial_w/1440,dt_liberacao_w + qt_min_especial_w/1440);

	if (ie_classif_lote_w  = 'S' ) then
		nr_seq_turno_hor_esp_w 	:= obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,to_char(dt_limite_especial_w,'hh24:mi'), cd_local_estoque_w);

		select	coalesce(to_char(max(b.hr_final),'hh24:mi'),'23:59')
		into STRICT	hr_turno_especial_w
		from	regra_turno_disp_param b,
				regra_turno_disp a
		where	a.nr_sequencia		= b.nr_seq_turno
		and		a.cd_estabelecimento	= cd_estabelecimento_w
		and		a.nr_sequencia		= nr_seq_turno_hor_esp_w
		and (coalesce(b.cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0))	= coalesce(cd_setor_atendimento_w,0))
		order by coalesce(b.cd_setor_atendimento,0),
		to_char(b.hr_final,'hh24:mi');

		if (dt_limite_especial_w IS NOT NULL AND dt_limite_especial_w::text <> '') then
			dt_limite_especial_w	:= pkg_date_utils.get_time(dt_limite_especial_w,hr_turno_especial_w||':00');
			if (hr_turno_especial_w = '00:00') then
				dt_limite_especial_w	:= pkg_date_utils.get_time(dt_limite_especial_w,'23:59:00');
			end if;
		end if;

		/*Esse IF existe para que se:
			A data de limite especial ficar menor que a liberacao pelo fato de concatenar horario e o horario for 01:00 por exemplo...*/
		if (dt_liberacao_w > dt_limite_especial_w) then
			dt_limite_especial_w	:= dt_limite_especial_w + 1;
		end if;

	end if;	
	
	If (coalesce(dt_primeiro_horario_w::text, '') = '') then
		dt_primeiro_horario_w	:= dt_prescricao_w;
	end if;
	
	Select	coalesce(max(cd_tipo_baixa),0)
	into STRICT	cd_motivo_baixa_dd_zero_w
	from	tipo_baixa_prescricao
	where	ie_prescricao_devolucao = 'P'
	and		coalesce(ie_atualiza_estoque,'S') = 'N'
	and		coalesce(ie_conta_paciente,'S') = 'N';
	
	

	gerar_hor_medicamentos;

	qt_dia_adic_w	:= 0;

	gerar_hor_materiais;

	qt_dia_adic_w	:= 0;
	qt_reg_w	:= 0;

	gerar_hor_solucao;

	qt_dia_adic_w	:= 0;

	gerar_hor_procedimento;

	qt_dia_adic_w	:= 0;

	gerar_hor_dieta;

	qt_dia_adic_w	:= 0;

	gerar_hor_sne;

	nr_etapa_sol_w := 0;

	gerar_hor_npt_adulto;

	gerar_hor_npt;

	qt_dia_adic_w	:= 0;

	gerar_hor_suplemento_oral;

	gerar_hor_assoc_gasoterapia;

	gerar_hor_leites_e_derivados;

	gerar_hor_assoc_leites_deriv;
	
	if (ie_lib_individual_w = 'S') and (ie_liberacao_p = 'S') then	
		open C24;
		loop
		fetch C24 into	
			nr_seq_horario_ww,
			nr_seq_material_w;
		EXIT WHEN NOT FOUND; /* apply on C24 */
			begin
			CALL Gerar_Gedi_Medic_atend(cd_estabelecimento_w, nr_prescricao_p, nr_seq_material_w, nr_seq_horario_ww, nm_usuario_p);
			end;
		end loop;
		close C24;
	end if;	
	
	-- INICIO >> AJUSTES DE TRATAMENTO ANTIGO: Estava atualizando todas as solucoes da prescricao, usando a mesma sequencia de etapa, independente da solucao e do material
	-- Caso nao seja mais necessaria, remover este tratamento
	select	count(*)
	into STRICT	cont_w
	from	prescr_mat_hor a where		(a.nr_seq_solucao IS NOT NULL AND a.nr_seq_solucao::text <> '')
	and		a.nr_prescricao	= nr_prescricao_p
	and		exists (	SELECT 1
					from	prescr_mat_hor x
					where	x.nr_etapa_sol < a.nr_etapa_sol
					and		x.nr_prescricao = a.nr_prescricao
					and		x.nr_seq_solucao = a.nr_seq_solucao
					and		x.dt_horario > a.dt_horario) LIMIT 1;

	if (cont_w > 0) then
		nr_seq_solucao_old_w	:= 0;
		nr_seq_material_old_w	:= 0;
		
		open C22;
		loop
		fetch C22 into	
			nr_seq_hor_w,
			nr_seq_material_w,
			nr_seq_solucao_w;
		EXIT WHEN NOT FOUND; /* apply on C22 */
			
			if (coalesce(nr_seq_solucao_w,0) <> coalesce(nr_seq_solucao_old_w,0)) then
				nr_etapa_w				:= 0;
				nr_seq_solucao_old_w	:= nr_seq_solucao_w;
				
				CALL gravar_log_tasy(28, WHEB_MENSAGEM_PCK.get_texto(457923, 'nr_prescricao_p='||nr_prescricao_p||';nr_seq_solucao_w='||nr_seq_solucao_w||';nr_seq_material_w='||nr_seq_material_w), nm_usuario_p);
			end if;
			
			if (coalesce(nr_seq_material_w,0) <> coalesce(nr_seq_material_old_w,0)) then
				nr_etapa_w				:= 0;
				nr_seq_material_old_w	:= nr_seq_material_w;
				
				CALL gravar_log_tasy(28, WHEB_MENSAGEM_PCK.get_texto(457923, 'nr_prescricao_p='||nr_prescricao_p||';nr_seq_solucao_w='||nr_seq_solucao_w||';nr_seq_material_w='||nr_seq_material_w), nm_usuario_p);
			end if;
			
			nr_etapa_w	:= nr_etapa_w + 1;
			
			update	prescr_mat_hor
			set		nr_etapa_sol = nr_etapa_w
			where	nr_sequencia = nr_seq_hor_w;
		end loop;
		close C22;
	end if;
	-- FIM >> AJUSTES DE TRATAMENTO ANTIGO
		
	open C016;
	loop
	fetch C016 into	
		nr_seq_classif_w,
		ie_classif_urgente_w,
		ie_controlado_w,
		ie_padronizado_w;
	EXIT WHEN NOT FOUND; /* apply on C016 */
		begin

		if (ie_controlado_w = 'A') and (ie_padronizado_w = 'A') then
			update	prescr_mat_hor
			set	nr_seq_classif		= nr_seq_classif_w
			where	nr_prescricao		= nr_prescricao_p
			and	ie_classif_urgente	= ie_classif_urgente_w;
		elsif (ie_controlado_w = 'A') and (ie_padronizado_w = 'S') then
			update	prescr_mat_hor
			set	nr_seq_classif		= nr_seq_classif_w
			where	nr_prescricao		= nr_prescricao_p
			and	ie_padronizado		= 'S'
			and	ie_classif_urgente	= ie_classif_urgente_w;
		elsif (ie_controlado_w = 'A') and (ie_padronizado_w = 'N') then
			update	prescr_mat_hor
			set	nr_seq_classif		= nr_seq_classif_w
			where	nr_prescricao		= nr_prescricao_p
			and	ie_padronizado		= 'N'
			and	ie_classif_urgente	= ie_classif_urgente_w;
		elsif (ie_controlado_w = 'N') and (ie_padronizado_w = 'A') then
			update	prescr_mat_hor
			set	nr_seq_classif		= nr_seq_classif_w
			where	nr_prescricao		= nr_prescricao_p
			and	ie_controlado		= 'N'
			and	ie_classif_urgente	= ie_classif_urgente_w;
		elsif (ie_controlado_w = 'N') and (ie_padronizado_w = 'N') then
			update	prescr_mat_hor
			set	nr_seq_classif		= nr_seq_classif_w
			where	nr_prescricao		= nr_prescricao_p
			and	ie_controlado		= 'N'
			and	ie_padronizado		= 'N'
			and	ie_classif_urgente	= ie_classif_urgente_w;
		elsif (ie_controlado_w = 'N') and (ie_padronizado_w = 'S') then
			update	prescr_mat_hor
			set	nr_seq_classif		= nr_seq_classif_w
			where	nr_prescricao		= nr_prescricao_p
			and	ie_controlado		= 'N'
			and	ie_padronizado		= 'S'
			and	ie_classif_urgente	= ie_classif_urgente_w;
		elsif (ie_controlado_w = 'S') and (ie_padronizado_w = 'A') then
			update	prescr_mat_hor
			set	nr_seq_classif		= nr_seq_classif_w
			where	nr_prescricao		= nr_prescricao_p
			and	ie_controlado		= 'S'
			and	ie_classif_urgente	= ie_classif_urgente_w;
		elsif (ie_controlado_w = 'S') and (ie_padronizado_w = 'N') then
			update	prescr_mat_hor
			set	nr_seq_classif		= nr_seq_classif_w
			where	nr_prescricao		= nr_prescricao_p
			and	ie_controlado		= 'S'
			and	ie_padronizado		= 'N'
			and	ie_classif_urgente	= ie_classif_urgente_w;
		elsif (ie_controlado_w = 'S') and (ie_padronizado_w = 'S') then
			update	prescr_mat_hor
			set	nr_seq_classif		= nr_seq_classif_w
			where	nr_prescricao		= nr_prescricao_p
			and	ie_controlado		= 'S'
			and	ie_padronizado		= 'S'
			and	ie_classif_urgente	= ie_classif_urgente_w;
		end if;
		end;
	end loop;
	close C016;

	if (ie_local_estoque_mat_hor_w	= 'S') then
			
		select	coalesce(max(nr_seq_classif),0)
		into STRICT	nr_seq_classif_param_w
		from	parametros_farmacia
		where	cd_estabelecimento	= cd_estabelecimento_w;
		
		open C21;
		loop
		fetch C21 into	
			nr_seq_horario_w,
			cd_local_estoque_w,
			dt_horario_ww,
			ie_dose_especial_w;
		EXIT WHEN NOT FOUND; /* apply on C21 */

				if (coalesce(nr_seq_classif_param_w,0) > 0)  and (ie_dose_especial_w = 'S') then

										
					update	prescr_mat_hor
					set		nr_seq_classif	= nr_seq_classif_param_w
					where	nr_sequencia	= nr_seq_horario_w
					and		nr_prescricao	= nr_prescricao_p;

						
				end if;
				
				CALL define_disp_prescr_mat_hor(nr_seq_horario_w, nr_prescricao_p, nr_seq_item_p, cd_perfil_p, nm_usuario_p);

				select	coalesce(max(cd_local_estoque),cd_local_estoque_w)
				into STRICT	cd_local_estoque_w
				from	prescr_mat_hor
				where	nr_sequencia	= nr_seq_horario_w;
				
				update	prescr_mat_hor
				set		nr_seq_turno	= coalesce(Obter_turno_horario_prescr(cd_estabelecimento_w, cd_setor_atendimento_w, to_char(dt_horario_ww,'hh24:mi'), cd_local_estoque_w),nr_seq_turno)
				where	nr_sequencia	= nr_seq_horario_w;

		end loop;
		close C21;
	
	end if;

	ajustar_disp_hor_farm_w := obter_param_usuario(924, 179, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ajustar_disp_hor_farm_w);
	ajustar_disp_hor_farm_w	:= coalesce(trim(both ajustar_disp_hor_farm_w),'N');

	begin
		if (ajustar_disp_hor_farm_w <> 'N') then
			CALL calcular_dispensar_horario(nr_prescricao_p,0);
		end if;
	exception when others then
		CALL gerar_log_prescricao(nr_prescricao_p, nr_seq_prescr_w, ie_agrupador_w, null, null, 'ajustar_disp_hor_farm_w=' || ajustar_disp_hor_farm_w || '-' || 'calcular_dispensar_horario', nm_usuario_p, 17039, 'S');
	end;

	if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

	open C14;
	loop
	fetch C14 into	
		nr_seq_sol_w;
	EXIT WHEN NOT FOUND; /* apply on C14 */
		CALL atualizar_status_item_prescr(nr_prescricao_p, nr_seq_sol_w, 'P', 'S', nm_usuario_p);
	end loop;
	close C14;

exception when others then
	CALL gerar_log_prescricao(nr_prescricao_p, null, null, null, null, substr(sqlerrm,1,2000), nm_usuario_p, 17039, 'S');
	sqlerrm_w	:= substr(sqlerrm,1,2000);
end;

if (ie_lib_individual_w = 'S') then

	qt_minutos_agora_w	:= coalesce(qt_minutos_agora_p,0);

	if (ie_liberacao_p = 'S') then		

		CALL Atualiza_prescr_mat_hor(nr_prescricao_p,nr_seq_item_p,cd_perfil_p,nm_usuario_p,ie_lib_parc_p, ie_tipo_item_p, null);
	
	elsif (qt_minutos_agora_w 	> 0) then

		open C23;
		loop
		fetch C23 into	
			nr_seq_horario_w,
			nr_seq_prescr_w,
			ie_agrupador_w;
		EXIT WHEN NOT FOUND; /* apply on C23 */
			begin

			if (ie_agrupador_w	= 2) then
				ie_tipo_item_w	:= 'MAT';
			elsif (ie_agrupador_w	= 4) then
				ie_tipo_item_w	:= 'S';							
			else
				ie_tipo_item_w	:= 'M';
			end if;
			
			CALL Atualiza_prescr_mat_hor(nr_prescricao_p,nr_seq_prescr_w,cd_perfil_p,nm_usuario_p,ie_lib_parc_p, ie_tipo_item_w, nr_seq_horario_w);
			
			update	prescr_mat_hor
			set		qt_minutos_agora	= qt_minutos_agora_w
			where	nr_sequencia		= nr_seq_horario_w;
			
			end;
		end loop;
		close C23;
	
	end if;	
end if;

if (ie_liberacao_p	= 'S') and (ie_gerar_proc_gedipa_job_w	= 'N') then
	
	open C25;
	loop
	fetch C25 into	
		ie_cursor_w,
		nr_sequencia_w,
		nr_seq_horario_w;
	EXIT WHEN NOT FOUND; /* apply on C25 */
		begin
		
		if (ie_cursor_w	= 'M') then
			CALL Gedipa_Gerar_Proc_Instantaneo(nr_prescricao_p,nr_sequencia_w,null,nr_seq_horario_w);
		else
			CALL Gedipa_Gerar_Proc_Instantaneo(nr_prescricao_p,null,nr_sequencia_w,nr_seq_horario_w);
		end if;
		
		end;
	end loop;
	close C25;
	
end if;	

if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_prescr_mat_sem_dt_lib ( nr_prescricao_p prescr_medica.nr_prescricao%type, nr_seq_item_p prescr_material.nr_sequencia%type, cd_perfil_p perfil.cd_perfil%type, ie_liberacao_p text, nm_usuario_p usuario.nm_usuario%type, ie_lib_parc_p text default null, ie_tipo_item_p text default null, qt_minutos_agora_p bigint default 0) FROM PUBLIC;

