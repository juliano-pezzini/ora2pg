-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualiza_mesano_refer_conta ( dt_parametro_p timestamp, cd_convenio_p bigint, nm_usuario_p text, ie_protocolo_provisorio_p text, ie_protocolo_auditoria_p text, cd_estab_p bigint, ie_tipo_convenio_p bigint default null) AS $body$
DECLARE




nr_interno_conta_w		bigint;
nr_seq_protocolo_w		bigint;
ie_status_protocolo_w		varchar(01);
dt_mesano_protocolo_w		timestamp;
nr_atendimento_w		bigint;
dt_mesano_referencia_w		timestamp;
cd_convenio_parametro_w		integer;
ie_atualiza_usuario_w		varchar(1);
ie_tipo_convenio_w		smallint;
ds_titulo_w			varchar(200);
ie_atualiza_conta_w		varchar(1);
ie_atualiza_conta_part_w	varchar(1);
ie_conta_cancel_estorno_w	varchar(1);
ie_cancelamento_w		varchar(1);
dt_parametro_start_w            conta_paciente.dt_mesano_referencia%type;
dt_parametro_end_w              conta_paciente.dt_mesano_referencia%type;
dt_mesano_add_month_w           protocolo_convenio.dt_mesano_referencia%type;
dt_parametro_start_add_month_w  conta_paciente.dt_mesano_referencia%type;
vl_total_w                      log_alteracao_mesano_ref.vl_conta%type;

C01 CURSOR FOR
	SELECT	a.nr_interno_conta,
		coalesce(a.nr_seq_protocolo, -1) nr_seq_protocolo,
		a.nr_atendimento,
		a.dt_mesano_referencia,
		a.cd_convenio_parametro,
		a.ie_cancelamento
	from	conta_paciente a,
		convenio b
	where	a.dt_mesano_referencia between
			dt_parametro_start_w and
			dt_parametro_end_w
	and	(((ie_protocolo_provisorio_p = 'S') or (ie_protocolo_auditoria_p = 'S'))  or (coalesce(a.nr_seq_protocolo::text, '') = ''))
	and	((coalesce(cd_convenio_p,0) = 0) or (cd_convenio_p = a.cd_convenio_parametro))
	and (cd_estabelecimento	= cd_estab_p or coalesce(cd_estab_p::text, '') = '')
	and 	a.cd_convenio_parametro = b.cd_convenio
	and 	((b.ie_tipo_convenio = ie_tipo_convenio_p) or (coalesce(ie_tipo_convenio_p,0) = 0));

type 		fetch_array is table of c01%rowtype;
s_array 	fetch_array;
i		integer := 1;
type vetor is table of fetch_array index by integer;
vetor_c01_w			vetor;

BEGIN


ie_atualiza_usuario_w	 := coalesce(obter_valor_param_usuario(79, 4, obter_perfil_ativo, nm_usuario_p, WHEB_USUARIO_PCK.GET_CD_ESTABELECIMENTO),'S');
ie_atualiza_conta_part_w := coalesce(obter_valor_param_usuario(79, 5, obter_perfil_ativo, nm_usuario_p, WHEB_USUARIO_PCK.GET_CD_ESTABELECIMENTO),'N');
ie_conta_cancel_estorno_w:= coalesce(obter_valor_param_usuario(79, 6, obter_perfil_ativo, nm_usuario_p, WHEB_USUARIO_PCK.GET_CD_ESTABELECIMENTO),'N');

dt_parametro_start_w    := PKG_DATE_UTILS.start_of(dt_parametro_p,'month',0);
dt_parametro_end_w      := PKG_DATE_UTILS.END_OF(dt_parametro_p,'MONTH',0);

open c01;
loop
fetch c01 bulk collect into s_array limit 1000;
	vetor_c01_w(i) := s_array;
	i := i + 1;
EXIT WHEN NOT FOUND; /* apply on c01 */
end loop;
close c01;

for i in 1..vetor_c01_w.count loop
	s_array := vetor_c01_w(i);
	for z in 1..s_array.count loop
	begin
                nr_interno_conta_w      := s_array[z].nr_interno_conta;
                nr_seq_protocolo_w      := s_array[z].nr_seq_protocolo;
                nr_atendimento_w        := s_array[z].nr_atendimento;
                dt_mesano_referencia_w  := s_array[z].dt_mesano_referencia;
                cd_convenio_parametro_w := s_array[z].cd_convenio_parametro;
                ie_cancelamento_w       := s_array[z].ie_cancelamento;

                select	coalesce(max(ie_status_protocolo), '1'),
                        max(dt_mesano_referencia)
                into STRICT	ie_status_protocolo_w,
                        dt_mesano_protocolo_w
                from	protocolo_convenio
                where	nr_seq_protocolo	= nr_seq_protocolo_w;

                dt_mesano_add_month_w           := PKG_DATE_UTILS.ADD_MONTH(dt_mesano_protocolo_w,1,0);
                dt_mesano_protocolo_w           := PKG_DATE_UTILS.start_of(dt_mesano_protocolo_w,'month',0);
                dt_parametro_start_add_month_w  := PKG_DATE_UTILS.ADD_MONTH(dt_parametro_start_w,1,0);

                if (ie_status_protocolo_w 	= '1') and (ie_protocolo_provisorio_p = 'S') and (dt_mesano_protocolo_w < dt_parametro_start_add_month_w) then
                        update	protocolo_convenio
                        set	dt_mesano_referencia 	= dt_mesano_add_month_w,
                                nm_usuario 		= nm_usuario_p,
                                dt_atualizacao 		= clock_timestamp()
                        where	nr_seq_protocolo	= nr_seq_protocolo_w;
                end if;

                -- Protocolo com status em Auditoria OS 165654
                if (ie_status_protocolo_w 	= '3') and (ie_protocolo_auditoria_p = 'S') and (dt_mesano_protocolo_w < dt_parametro_start_add_month_w) then
                        update	protocolo_convenio
                        set	dt_mesano_referencia 	= dt_mesano_add_month_w,
                                nm_usuario 		= nm_usuario_p,
                                dt_atualizacao 		= clock_timestamp()
                        where	nr_seq_protocolo	= nr_seq_protocolo_w;
                end if;

                ie_atualiza_conta_w	:= 'S';

                if (ie_atualiza_conta_part_w = 'S') then

                        select	coalesce(max(ie_tipo_convenio),3)
                        into STRICT	ie_tipo_convenio_w
                        from 	convenio
                        where	cd_convenio	= cd_convenio_parametro_w;

                        if (ie_tipo_convenio_w = 1) and (nr_seq_protocolo_w < 0) then
                        
                                select	substr(obter_titulo_conta_protocolo(0, nr_interno_conta_w),1,100)
                                into STRICT	ds_titulo_w
;

                                if (ds_titulo_w IS NOT NULL AND ds_titulo_w::text <> '') then
                                
                                        ie_atualiza_conta_w	:= 'N';

                                end if;

                        end if;

                end if;

                if (ie_conta_cancel_estorno_w = 'S') and (ie_atualiza_conta_w = 'S') and (ie_cancelamento_w IS NOT NULL AND ie_cancelamento_w::text <> '') then
                        ie_atualiza_conta_w:= 'N';
                end if;

                update	conta_paciente
                set	dt_mesano_referencia 	= PKG_DATE_UTILS.ADD_MONTH(dt_mesano_referencia,1,0),
                        nm_usuario 		= CASE WHEN ie_atualiza_usuario_w='N' THEN  nm_usuario  ELSE nm_usuario_p END ,
                        dt_atualizacao 		= clock_timestamp()
                where	nr_interno_conta	= nr_interno_conta_w
                and	(((ie_protocolo_provisorio_p = 'S') or (ie_protocolo_auditoria_p = 'S')) or (ie_status_protocolo_w	= '1'))
                and	ie_atualiza_conta_w 	= 'S';

                dt_mesano_add_month_w := PKG_DATE_UTILS.ADD_MONTH(dt_mesano_referencia_w,1,0);

                vl_total_w      := obter_valor_conta(nr_interno_conta_w,0);

                insert	into log_alteracao_mesano_ref(cd_convenio,
                        dt_atualizacao,
                        dt_atualizacao_nrec,
                        dt_mesano_refer_ant,
                        dt_mesano_referencia,
                        nm_usuario,
                        nm_usuario_nrec,
                        nr_atendimento,
                        nr_interno_conta,
                        nr_sequencia,
                        vl_conta)
                values (cd_convenio_parametro_w,
                        clock_timestamp(),
                        clock_timestamp(),
                        dt_mesano_referencia_w,
                        dt_mesano_add_month_w,
                        nm_usuario_p,
                        nm_usuario_p,
                        nr_atendimento_w,
                        nr_interno_conta_w,
                        nextval('log_alteracao_mesano_ref_seq'),
                        vl_total_w);
        end;
        END LOOP;
        commit;
END LOOP;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualiza_mesano_refer_conta ( dt_parametro_p timestamp, cd_convenio_p bigint, nm_usuario_p text, ie_protocolo_provisorio_p text, ie_protocolo_auditoria_p text, cd_estab_p bigint, ie_tipo_convenio_p bigint default null) FROM PUBLIC;

