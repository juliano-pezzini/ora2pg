-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_ret_cobr_citibank_400 ( nr_seq_cobr_escrit_p bigint, nm_usuario_p text) AS $body$
DECLARE


ds_titulo_w				varchar(25);		
nr_titulo_w				titulo_receber.nr_titulo%type;
nr_nosso_numero_w		varchar(12);
cd_ocorrencia_w			varchar(2);
nr_dt_ocorrencia_w		bigint;
dt_ocorrencia_w			timestamp;
nr_nosso_numero_banco_w	varchar(12);
vl_liquidacao_w			titulo_receber_cobr.vl_cobranca%type;
vl_desconto_w			titulo_receber_cobr.vl_desconto%type;
vl_juros_acrescimos_w	double precision;	
dt_credito_w			timestamp;	
nr_dt_credito_w			bigint;
ds_motivo_rejeicao_w	varchar(20);
ds_titulo2_w			varchar(10);

vl_titulo_w				titulo_Receber.vl_titulo%type;
vl_saldo_inclusao_w		titulo_receber.vl_saldo_titulo%type;	
cd_banco_w				banco.cd_banco%type;
nr_seq_tipo_cobranca_w	cobranca_escritural.nr_seq_tipo%type;
nr_seq_ocorrencia_ret_w	banco_ocorr_escrit_ret.nr_sequencia%type;
nr_seq_ocorr_motivo_w	banco_ocorr_motivo_ret.nr_sequencia%type;
														
C01 CURSOR FOR
	SELECT	(substr(ds_string,38,25))::numeric  ds_titulo,
			trim(both substr(ds_string,65,12)) nr_nosso_numero,
			trim(both substr(ds_string,109,2)) cd_ocorrencia,
			somente_numero(substr(ds_string,111,6)) nr_dt_ocorrencia,
			trim(both substr(ds_string,129,12)) nr_nosso_numero_banco,
			(substr(ds_string,254,13))::numeric /100 vl_liquidacao,
			(substr(ds_string,241,13))::numeric /100 vl_desconto, 
			(substr(ds_string,267,13))::numeric /100 vl_juros_acrescimos, 
			somente_numero(substr(ds_string,296,6)) nr_dt_credito,
			trim(both substr(ds_string,302,20)) ds_motivo_rejeicao,
			(substr(ds_string,117,10))::numeric  ds_titulo2,
			(substr(ds_string,166,3))::numeric  cd_banco
	from	w_retorno_banco	
	where	nr_seq_cobr_escrit	= nr_seq_cobr_escrit_p
	and		substr(ds_string,1,1) = '1';


BEGIN

select	max(a.nr_seq_tipo)
into STRICT	nr_seq_tipo_cobranca_w
from	cobranca_escritural a
where	a.nr_sequencia = nr_seq_cobr_escrit_p;

open C01;
loop
fetch C01 into	
	ds_titulo_w,
	nr_nosso_numero_w,
	cd_ocorrencia_w,
	nr_dt_ocorrencia_w,
	nr_nosso_numero_banco_w,
	vl_liquidacao_w,
	vl_desconto_w,
	vl_juros_acrescimos_w,
	nr_dt_credito_w,
	ds_motivo_rejeicao_w,
	ds_titulo2_w,
	cd_banco_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	
	if (ds_titulo_w IS NOT NULL AND ds_titulo_w::text <> '') or (ds_titulo2_w IS NOT NULL AND ds_titulo2_w::text <> '') then
		
		/*Tenta localizar o titulo no tasy*/

		select 	max(a.nr_titulo)
		into STRICT	nr_titulo_w
		from	titulo_receber a
		where	a.nr_titulo = (coalesce(ds_titulo_w,ds_titulo2_w))::numeric;	
		
		if (coalesce(nr_titulo_w::text, '') = '') then
		
			/*Nosso numero gerado pelo Tasy*/

			if (coalesce(nr_titulo_w::text, '') = '') then
				select 	max(nr_titulo)
				into STRICT	nr_titulo_w
				from 	titulo_receber
				where	nr_nosso_numero = nr_nosso_numero_w;
				
				/*Nosso numero gerado pelo banco (banco gera o boleto)*/

				if (coalesce(nr_titulo_w::text, '') = '') then
					select 	max(nr_titulo)
					into STRICT	nr_titulo_w
					from 	titulo_receber
					where	nr_nosso_numero = nr_nosso_numero_banco_w;
				end if;							
			end if;
	
		end if;	
	end if;

	/*Se achou o título, importar, senão, gravar log de não importação.*/

	if (nr_titulo_w IS NOT NULL AND nr_titulo_w::text <> '') then
	
		select	max(a.vl_titulo),
				max(a.vl_saldo_titulo)
		into STRICT	vl_titulo_w,
				vl_saldo_inclusao_w
		from	titulo_receber a
		where	a.nr_titulo	= nr_titulo_w;
		
		/*Buscar ocorrência*/

		select 	max(a.nr_sequencia)
		into STRICT	nr_seq_ocorrencia_ret_w
		from	banco_ocorr_escrit_ret a
		where	a.cd_banco 				= cd_banco_w
		and 	coalesce(a.nr_seq_tipo,0) 	= coalesce(nr_seq_tipo_cobranca_w,0)
		and		a.cd_ocorrencia 		= cd_ocorrencia_w;
		
		
		/*Busca motivo ocorrência*/

		select	max(a.nr_sequencia)
		into STRICT	nr_seq_ocorr_motivo_w
		from	banco_ocorr_motivo_ret a
		where	position(a.cd_motivo in ds_motivo_rejeicao_w)	> 0
		and	a.nr_seq_escrit_ret	= nr_seq_ocorrencia_ret_w;		
		
		
		if (coalesce(trim(both nr_dt_ocorrencia_w),0) <> 0) then
			dt_ocorrencia_w	:= to_date(to_char(nr_dt_ocorrencia_w, '000000'),'ddmmyy');
		end if;
		
		if (coalesce(trim(both nr_dt_credito_w),0) <> 0) then
			dt_credito_w	:= to_date(to_char(nr_dt_credito_w, '000000'),'ddmmyy');
		end if;		
		
		vl_liquidacao_w := coalesce(vl_liquidacao_w,0) - coalesce(vl_juros_acrescimos_w,0);
			
		insert	into titulo_receber_cobr( 	
			nr_sequencia,
			nr_titulo,
			cd_banco,
			vl_cobranca,
			vl_desconto,
			vl_multa, --OS 1940954 - Os acrescimos no arquivo na verdade se tratam de juros ou multa. O layut n tem campo para isso. Por isso cmfe alinhado Isabella, vamos gravar no campo de multa, pois se gravar no acrescimo, esse valor é dudido do valor da baixa no titulo na rotina baixar_titulo_rec_cobr, deixando titulo com saldo.
			vl_despesa_bancaria,
			vl_liquidacao,
			dt_liquidacao,
			dt_atualizacao,
			nm_usuario,
			nr_seq_cobranca,
			nr_seq_ocorrencia_ret,
			nr_seq_ocorr_motivo,
			vl_saldo_inclusao
			)
		values (	
			nextval('titulo_receber_cobr_seq'),
			nr_titulo_w,
			cd_banco_w,
			vl_saldo_inclusao_w, --Caso visto com a Cassiana, o titulo recebeu uma baixa e foi enviado ao banco. Na confirmação de entrada, ao importar o arquivo, tava vindo o vl_titulo, e deveria vir o saldo,.
			vl_desconto_w,
			vl_juros_acrescimos_w,
			0,
			vl_liquidacao_w,
			coalesce(dt_ocorrencia_w,dt_credito_w),
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_cobr_escrit_p,
			nr_seq_ocorrencia_ret_w,
			nr_seq_ocorr_motivo_w,
			vl_saldo_inclusao_w
			);		
			
		if (cd_ocorrencia_w = '02') then
			update	titulo_receber a
			set		a.ie_entrada_confirmada = 'C'
			where	a.nr_titulo = nr_titulo_w;
		end if;			
	else
		CALL gerar_log_escritural('C',
				nr_seq_cobr_escrit_p,
				nm_usuario_p,
				wheb_mensagem_pck.get_texto(457781, 'ds_titulo_w=' || coalesce(ds_titulo_w,ds_titulo2_w)),
				'S');
	end if;
	
	end;
end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_ret_cobr_citibank_400 ( nr_seq_cobr_escrit_p bigint, nm_usuario_p text) FROM PUBLIC;

