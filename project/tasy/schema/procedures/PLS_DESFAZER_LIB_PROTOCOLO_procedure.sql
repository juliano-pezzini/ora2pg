-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_desfazer_lib_protocolo ( nr_seq_protocolo_p pls_protocolo_conta.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


nr_seq_lote_pgto_w		bigint;
qt_plantonista_w		integer;
nr_seq_fatura_w			ptu_fatura.nr_sequencia%type;
ie_status_w			ptu_fatura.ie_status%type;
nr_seq_conta_w			pls_conta.nr_sequencia%type;
qt_copartic_w			integer;
cd_estabelecimento_w		pls_conta.cd_estabelecimento%type;
ie_desfaz_lote_pag_copartic_w	pls_parametros.ie_desfaz_lote_pag_copartic%type;


BEGIN

select	count(1)
into STRICT	qt_plantonista_w
from	pls_conta_proc_plant	d,
	pls_lote_plantonista	b,
	pls_conta_proc		a,
	pls_conta		x
where	b.nr_sequencia		= d.nr_seq_lote_plant
and	a.nr_sequencia		= d.nr_seq_conta_proc
and	x.nr_sequencia		= a.nr_seq_conta
and	x.nr_seq_protocolo	= nr_seq_protocolo_p
and	(d.nr_seq_prestador_novo IS NOT NULL AND d.nr_seq_prestador_novo::text <> '')
and	(b.dt_fechamento IS NOT NULL AND b.dt_fechamento::text <> '');

if (qt_plantonista_w > 0) then

	CALL wheb_mensagem_pck.exibir_mensagem_abort(224112);
end if;

select 	max(nr_seq_lote)
into STRICT	nr_seq_lote_pgto_w
from	pls_prot_conta_titulo
where	nr_seq_protocolo	= nr_seq_protocolo_p
and	(nr_seq_lote IS NOT NULL AND nr_seq_lote::text <> '');

if (coalesce(nr_seq_lote_pgto_w::text, '') = '') then

	/*Verificados lotes de pagamento feitos na OPS - Pagamentos de Produção Médica*/

	select 	max(nr_seq_lote)
	into STRICT	nr_seq_lote_pgto_w
	from (
		SELECT 	max(a.nr_seq_lote_pgto) nr_seq_lote
		from	pls_conta_medica_resumo a,
			pls_conta b
		where	b.nr_seq_protocolo = nr_seq_protocolo_p
		and	a.nr_seq_conta = b.nr_sequencia
		and	(a.nr_seq_lote_pgto IS NOT NULL AND a.nr_seq_lote_pgto::text <> '')
		and	a.ie_situacao = 'A'
		
union all

		SELECT 	max(a.nr_seq_pp_lote) nr_seq_lote
		from	pls_conta_medica_resumo a,
			pls_conta b
		where	b.nr_seq_protocolo = nr_seq_protocolo_p
		and	a.nr_seq_conta = b.nr_sequencia
		and	a.ie_situacao = 'A'
		and	(a.nr_seq_pp_lote IS NOT NULL AND a.nr_seq_pp_lote::text <> '') 
	 LIMIT 1) alias7;
end if;

if (coalesce(nr_seq_lote_pgto_w::text, '') = '') then

	update	pls_protocolo_conta
	set	ie_status	 = 5,
		dt_atualizacao	 = clock_timestamp(),
		dt_lib_pagamento  = NULL,
		nm_usuario	 = nm_usuario_p
	where	nr_sequencia 	 = nr_seq_protocolo_p;

	update	pls_conta_medica_resumo
	set	ie_status_protocolo 	= '5',
		dt_atualizacao		= clock_timestamp(),
		nm_usuario		= nm_usuario_p
	where	nr_seq_protocolo	= nr_seq_protocolo_p
	and	ie_situacao = 'A';
else
	CALL wheb_mensagem_pck.exibir_mensagem_abort(224111, 'NR_LOTE=' || nr_seq_lote_pgto_w);
end if;

select	max(nr_seq_fatura),
	max(nr_sequencia),
	max(cd_estabelecimento)
into STRICT	nr_seq_fatura_w,
	nr_seq_conta_w,
	cd_estabelecimento_w
from	pls_conta
where	nr_seq_protocolo = nr_seq_protocolo_p;

if (nr_seq_fatura_w IS NOT NULL AND nr_seq_fatura_w::text <> '') then

	select	  max(g.ie_status)
	into STRICT	  ie_status_w
	from      ptu_fatura g
	where     g.nr_sequencia  = nr_seq_fatura_w
	and	  g.ie_status	 in ('CA','E');

	if (ie_status_w = 'CA') then
		--A fatura da conta #@NR_SEQ_CONTA#@ está cancelada. Não é possivel desfazer a finalização dos grupos.
		CALL wheb_mensagem_pck.exibir_mensagem_abort(236209);
	elsif (ie_status_w = 'E') then
		--A fatura da conta #@NR_SEQ_CONTA#@ está encerrada. Não é possivel desfazer a finalização dos grupos.
		CALL wheb_mensagem_pck.exibir_mensagem_abort(236210);
	end if;
end if;

select	coalesce(ie_desfaz_lote_pag_copartic,'S')
into STRICT	ie_desfaz_lote_pag_copartic_w
from	table(pls_parametros_pck.f_retorna_param(cd_estabelecimento_w));

if (ie_desfaz_lote_pag_copartic_w = 'N') then
	select	count(1)
	into STRICT	qt_copartic_w
	from	pls_conta_coparticipacao	a
	where	(a.nr_seq_mensalidade_seg IS NOT NULL AND a.nr_seq_mensalidade_seg::text <> '')
	and	a.nr_seq_conta	in (SELECT	x.nr_sequencia
					from	pls_conta	x
					where	x.nr_seq_protocolo	= nr_seq_protocolo_p);

	if (qt_copartic_w	> 0) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(249681);
	end if;
end if;

--Desfeita liberação para pagamento
CALL pls_inclui_prot_conta_hist(nr_seq_protocolo_p, wheb_mensagem_pck.get_texto(315918), nm_usuario_p, '14');

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_desfazer_lib_protocolo ( nr_seq_protocolo_p pls_protocolo_conta.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;

