-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_oc_cta_tratar_val_76_imp ( nr_seq_combinada_p pls_oc_cta_combinada.nr_sequencia%type, ie_regra_excecao_p pls_oc_cta_combinada.ie_excecao%type, nr_id_transacao_p pls_oc_cta_selecao_imp.nr_id_transacao%type) AS $body$
DECLARE



_ora2pg_r RECORD;
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Validar se o profissional executante está vinculado ao prestador executor
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
tb_seq_selecao_w		pls_util_cta_pck.t_number_table;
tb_valido_w			pls_util_cta_pck.t_varchar2_table_1;
tb_observacao_w			pls_util_cta_pck.t_varchar2_table_4000;
nr_idx_w			integer;
nr_seq_sel_anterior_w		pls_oc_cta_selecao_imp.nr_sequencia%type;
ie_valido_anterior_w		varchar(1);

C01 CURSOR(	nr_seq_oc_cta_comb_p	pls_oc_cta_combinada.nr_sequencia%type) FOR
	SELECT	a.ie_valida ie_valida,
		coalesce(a.ie_tipo_profissional,'PE') ie_tipo_profissional
	from	pls_oc_cta_val_exec_prest a
	where	a.nr_seq_oc_cta_comb	= nr_seq_oc_cta_comb_p;

C02 CURSOR(	nr_id_transacao_pc	pls_oc_cta_selecao_imp.nr_sequencia%type) FOR
	SELECT 	x.nr_sequencia nr_seq_selecao,
		b.dt_inclusao,
		b.dt_exclusao,
		a.dt_atendimento_conv dt_atendimento,
		(	SELECT 	count(1)
			from 	pls_prestador_medico m
			where 	m.cd_medico 		= a.cd_profissional_exec_conv
			and	m.nr_seq_prestador 	= a.nr_seq_prest_exec_conv
			and	m.ie_situacao 		= 'A') qt_prof_valido
	FROM pls_oc_cta_selecao_imp x, pls_conta_imp a
LEFT OUTER JOIN pls_prestador_medico b ON (a.nr_seq_prest_exec_conv = b.nr_seq_prestador AND a.cd_profissional_exec_conv = b.cd_medico AND 'A' = b.ie_situacao)
WHERE x.ie_valido			= 'S' and x.nr_id_transacao		= nr_id_transacao_pc and a.nr_sequencia 			= x.nr_seq_conta    order by x.nr_sequencia;

C03 CURSOR(	nr_id_transacao_pc	pls_oc_cta_selecao_imp.nr_sequencia%type) is
	with query_tmp as(
		SELECT 	x.nr_sequencia nr_seq_selecao,
			a.dt_atendimento_conv dt_atendimento,
			a.nr_seq_prest_exec_conv,
			c.cd_profissional_conv,
			(	SELECT 	count(1)
				from 	pls_prestador_medico m
				where 	m.cd_medico 		= c.cd_profissional_conv
				and	m.nr_seq_prestador 	= a.nr_seq_prest_exec_conv
				and	m.ie_situacao 		= 'A') qt_prof_valido
		from	pls_oc_cta_selecao_imp	x,
			pls_conta_imp		a,
			pls_conta_proc_imp	b,
			pls_conta_item_equipe_imp c
		where	x.ie_valido			= 'S'
		and	x.nr_id_transacao		= nr_id_transacao_pc
		and	a.nr_sequencia 			= x.nr_seq_conta
		and	a.nr_sequencia			= b.nr_seq_conta
		and	b.nr_sequencia			= c.nr_seq_conta_proc
		order by x.nr_sequencia
	)
	select 	a.nr_seq_selecao,
		b.dt_inclusao,
		b.dt_exclusao,
		a.dt_atendimento,
		qt_prof_valido
	FROM query_tmp a
LEFT OUTER JOIN pls_prestador_medico b ON (a.cd_profissional_conv = b.cd_medico AND a.nr_seq_prest_exec_conv = b.nr_seq_prestador AND 'A' = b.ie_situacao);

C04 CURSOR(	nr_id_transacao_pc	pls_oc_cta_selecao_imp.nr_sequencia%type) FOR
	SELECT 	x.nr_sequencia nr_seq_selecao,
		b.dt_inclusao,
		b.dt_exclusao,
		a.dt_atendimento_conv dt_atendimento,
		(	SELECT 	count(1)
			from 	pls_prestador_medico m
			where 	m.cd_medico 		= a.cd_profissional_exec_conv
			and	m.nr_seq_prestador 	= a.nr_seq_prest_exec_conv
			and	m.ie_situacao 		= 'A') qt_prof_valido
	FROM pls_oc_cta_selecao_imp x, pls_conta_imp a
LEFT OUTER JOIN pls_prestador_medico b ON (a.nr_seq_prest_exec_conv = b.nr_seq_prestador AND a.cd_profissional_exec_conv = b.cd_medico AND 'A' = b.ie_situacao)
WHERE x.ie_valido			= 'S' and x.nr_id_transacao		= nr_id_transacao_pc and a.nr_sequencia 			= x.nr_seq_conta    and not exists ( 	select  1
				from	pls_conta_proc_imp e,
					pls_conta_item_equipe_imp f
				where	e.nr_seq_conta = a.nr_sequencia
				and	e.nr_sequencia = f.nr_seq_conta_proc);
BEGIN
if (nr_seq_combinada_p IS NOT NULL AND nr_seq_combinada_p::text <> '')  then
	for r_C01_w in C01(nr_seq_combinada_p) loop
		if (r_C01_w.ie_valida = 'S')	then
			begin
				-- tratamento em campo auxiliar para identificar posteriormente os registros que foram alterados
				CALL pls_ocor_imp_pck.atualiza_campo_auxiliar('V', ie_regra_excecao_p, nr_id_transacao_p, null, 'N');
				nr_seq_sel_anterior_w  	:= 0;
				ie_valido_anterior_w	:= 'N';

					-- Incializar as listas para cada regra.
					SELECT * FROM pls_ocor_imp_pck.limpar_nested_tables(tb_seq_selecao_w, tb_valido_w, tb_observacao_w) INTO STRICT _ora2pg_r;
 tb_seq_selecao_w := _ora2pg_r.tb_nr_seq_selecao_p; tb_valido_w := _ora2pg_r.tb_ie_valido_p; tb_observacao_w := _ora2pg_r.tb_ds_observacao_p;
					nr_idx_w:=	0;

					if (r_C01_w.ie_tipo_profissional = 'PE') then

						for r_C02_w in	C02(nr_id_transacao_p) loop

							if (nr_seq_sel_anterior_w <> r_C02_w.nr_seq_selecao) then

								tb_valido_w(nr_idx_w)		:= 'N';
								tb_observacao_w(nr_idx_w):=	'';
								tb_seq_selecao_w(nr_idx_w):=	r_C02_w.nr_seq_selecao;

								if (r_C02_w.qt_prof_valido = 0) then
									tb_valido_w(nr_idx_w):=	'S';
									tb_observacao_w(nr_idx_w):=	'Profissional executante não está vinculado ao prestador executor';

								else
									if (r_C02_w.dt_atendimento < r_C02_w.dt_inclusao) then
										tb_valido_w(nr_idx_w):=	'S';
										tb_observacao_w(nr_idx_w):=	'Profissional executante não está vinculado ao prestador executor';
									elsif ((r_C02_w.dt_exclusao IS NOT NULL AND r_C02_w.dt_exclusao::text <> '') and r_C02_w.dt_atendimento > r_C02_w.dt_exclusao) then
										tb_valido_w(nr_idx_w):=	'S';
										tb_observacao_w(nr_idx_w):=	'Profissional executante não está vinculado ao prestador executor';
									end if;

									nr_idx_w := nr_idx_w + 1;

									if (nr_idx_w = pls_util_cta_pck.qt_registro_transacao_w) then
										CALL pls_ocor_imp_pck.gerencia_selecao_validacao( tb_seq_selecao_w, tb_valido_w, tb_observacao_w, nr_id_transacao_p,'SEQ_CONTA');
										nr_idx_w := 0;
										SELECT * FROM pls_ocor_imp_pck.limpar_nested_tables(tb_seq_selecao_w, tb_valido_w, tb_observacao_w) INTO STRICT _ora2pg_r;
 tb_seq_selecao_w := _ora2pg_r.tb_nr_seq_selecao_p; tb_valido_w := _ora2pg_r.tb_ie_valido_p; tb_observacao_w := _ora2pg_r.tb_ds_observacao_p;
									end if;
								end if;
							end if;

							nr_seq_sel_anterior_w := r_C02_w.nr_seq_selecao;

						end loop;

					elsif (r_C01_w.ie_tipo_profissional in ('PP','A')) then

						for r_C03_w in	C03(nr_id_transacao_p) loop

							if (nr_seq_sel_anterior_w <> r_C03_w.nr_seq_selecao or ie_valido_anterior_w = 'N') then

								ie_valido_anterior_w 		:= 'N';
								tb_valido_w(nr_idx_w)		:= 'N';
								tb_seq_selecao_w(nr_idx_w):=	r_C03_w.nr_seq_selecao;
								tb_observacao_w(nr_idx_w):=	'';

								if (r_C03_w.qt_prof_valido = 0) then
									tb_valido_w(nr_idx_w):=	'S';
									tb_observacao_w(nr_idx_w):=	'Profissional executante não está vinculado ao prestador executor';
									ie_valido_anterior_w 	:='S';

								else
									if (r_C03_w.dt_atendimento < r_C03_w.dt_inclusao) then
										tb_valido_w(nr_idx_w):=	'S';
										ie_valido_anterior_w 	:='S';
										tb_observacao_w(nr_idx_w):=	'Profissional executante não está vinculado ao prestador executor';

									elsif ((r_C03_w.dt_exclusao IS NOT NULL AND r_C03_w.dt_exclusao::text <> '') and r_C03_w.dt_atendimento > r_C03_w.dt_exclusao) then
										tb_valido_w(nr_idx_w):=	'S';
										ie_valido_anterior_w 	:='S';
										tb_observacao_w(nr_idx_w):=	'Profissional executante não está vinculado ao prestador executor';

									end if;
								end if;

								nr_idx_w := nr_idx_w + 1;

								if (nr_idx_w = pls_util_cta_pck.qt_registro_transacao_w) then
									CALL pls_ocor_imp_pck.gerencia_selecao_validacao( tb_seq_selecao_w, tb_valido_w, tb_observacao_w, nr_id_transacao_p,'SEQ');
									nr_idx_w := 0;
									SELECT * FROM pls_ocor_imp_pck.limpar_nested_tables(tb_seq_selecao_w, tb_valido_w, tb_observacao_w) INTO STRICT _ora2pg_r;
 tb_seq_selecao_w := _ora2pg_r.tb_nr_seq_selecao_p; tb_valido_w := _ora2pg_r.tb_ie_valido_p; tb_observacao_w := _ora2pg_r.tb_ds_observacao_p;
								end if;
							end if;
							nr_seq_sel_anterior_w 	:= r_C03_w.nr_seq_selecao;


						end loop;

					end if;

					if ( r_C01_w.ie_tipo_profissional = 'A') then

						for r_C04_w in	C04(nr_id_transacao_p) loop

							if (nr_seq_sel_anterior_w <> r_C04_w.nr_seq_selecao or ie_valido_anterior_w = 'N') then

								ie_valido_anterior_w 		:= 'N';
								tb_valido_w(nr_idx_w)		:= 'N';
								tb_seq_selecao_w(nr_idx_w):=	r_C04_w.nr_seq_selecao;
								tb_observacao_w(nr_idx_w):=	'';

								if (r_C04_w.qt_prof_valido = 0) then
									ie_valido_anterior_w 	:='S';
									tb_valido_w(nr_idx_w):=	'S';
									tb_observacao_w(nr_idx_w):=	'Profissional executante não está vinculado ao prestador executor';

								else
									if (r_C04_w.dt_atendimento < r_C04_w.dt_inclusao) then
										tb_valido_w(nr_idx_w):=	'S';
										ie_valido_anterior_w 	:='S';
										tb_observacao_w(nr_idx_w):=	'Profissional executante não está vinculado ao prestador executor';
									elsif ((r_C04_w.dt_exclusao IS NOT NULL AND r_C04_w.dt_exclusao::text <> '') and r_C04_w.dt_atendimento > r_C04_w.dt_exclusao) then
										tb_valido_w(nr_idx_w):=	'S';
										ie_valido_anterior_w 	:='S';
										tb_observacao_w(nr_idx_w):=	'Profissional executante não está vinculado ao prestador executor';
									end if;
								end if;

								nr_idx_w := nr_idx_w + 1;

								if (nr_idx_w = pls_util_cta_pck.qt_registro_transacao_w) then
									CALL pls_ocor_imp_pck.gerencia_selecao_validacao( tb_seq_selecao_w, tb_valido_w, tb_observacao_w, nr_id_transacao_p,'SEQ');
									nr_idx_w := 0;
									SELECT * FROM pls_ocor_imp_pck.limpar_nested_tables(tb_seq_selecao_w, tb_valido_w, tb_observacao_w) INTO STRICT _ora2pg_r;
 tb_seq_selecao_w := _ora2pg_r.tb_nr_seq_selecao_p; tb_valido_w := _ora2pg_r.tb_ie_valido_p; tb_observacao_w := _ora2pg_r.tb_ds_observacao_p;
								end if;

							end if;
							nr_seq_sel_anterior_w 	:= r_C04_w.nr_seq_selecao;

						end loop;

					end if;

				if (nr_idx_w > 0)	then

					CALL pls_ocor_imp_pck.gerencia_selecao_validacao(	tb_seq_selecao_w, tb_valido_w, tb_observacao_w, nr_id_transacao_p,'SEQ');
				end if;
			exception
			when others then
				-- Gerencia o erro lançado, limpa a tabela para esta transação.
				CALL pls_ocor_imp_pck.trata_erro_sql_dinamico(nr_seq_combinada_p, null, sqlerrm, nr_id_transacao_p, wheb_usuario_pck.get_nm_usuario, 'S');
			end;
			-- seta os registros que serão válidos ou inválidos após o processamento
			CALL pls_ocor_imp_pck.atualiza_campo_valido('V', 'N', ie_regra_excecao_p, null, nr_id_transacao_p, null);
		end if;
	end loop;
end if;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_oc_cta_tratar_val_76_imp ( nr_seq_combinada_p pls_oc_cta_combinada.nr_sequencia%type, ie_regra_excecao_p pls_oc_cta_combinada.ie_excecao%type, nr_id_transacao_p pls_oc_cta_selecao_imp.nr_id_transacao%type) FROM PUBLIC;

