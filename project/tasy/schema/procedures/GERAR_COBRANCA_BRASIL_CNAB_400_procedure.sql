-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_cobranca_brasil_cnab_400 ( nr_seq_cobr_escrit_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
ds_email_w		varchar(255);
nr_titulo_w		bigint;
ie_tipo_pessoa_w		varchar(22);
ds_cgc_cpf_w		varchar(14);
cd_agencia_bancaria_w	varchar(8);
nr_conta_w		varchar(20);
ie_digito_conta_w		varchar(1);
cd_convenio_banco_w	varchar(100);
cd_estabelecimento_w	smallint;
cd_banco_w		integer;
vl_saldo_titulo_w		double precision;
dt_emissao_w		timestamp;
vl_juros_w		double precision;
ds_limite_desconto_w	varchar(6);
vl_desconto_w		double precision;
nm_pagador_w		varchar(80);
ds_endereco_w		varchar(255);
cd_cep_w		varchar(10);
ds_cidade_w		varchar(40);
sg_estado_w		varchar(15);
ie_digito_agencia_w	varchar(1);

dt_pagamento_previsto_w	timestamp;
vl_multa_w		double precision;
nr_seq_reg_lote_w		bigint	:= 1;	/* número sequencial do registro, deve ser igual para todos os registros de um mesmo título */
 
c01 CURSOR FOR 
SELECT	substr(obter_dados_pf_pj(b.cd_pessoa_fisica,b.cd_cgc,'M'),1,255) ds_email, 
	a.nr_titulo, 
	to_char(b.ie_tipo_pessoa), 
	substr(b.ds_cgc_cpf,1,14), 
	a.cd_agencia_bancaria, 
	a.nr_conta, 
	substr(a.ie_digito_conta,1,1), 
	a.cd_banco, 
	b.cd_estabelecimento, 
	b.dt_pagamento_previsto, 
	a.vl_multa, 
	b.vl_saldo_titulo, 
	b.dt_emissao, 
	a.vl_juros, 
	a.vl_desconto, 
	upper(substr(obter_nome_pf_pj(b.cd_pessoa_fisica,b.cd_cgc),1,80)) nm_pagador, 
	upper(substr(obter_dados_pf_pj(b.cd_pessoa_fisica,b.cd_cgc,'R'),1,255)) ds_endereco, 
	substr(obter_dados_pf_pj(b.cd_pessoa_fisica,b.cd_cgc,'CEP'),1,10) cd_cep, 
	upper(substr(obter_dados_pf_pj(b.cd_pessoa_fisica,b.cd_cgc,'CI'),1,40)) ds_cidade, 
	upper(substr(obter_dados_pf_pj(b.cd_pessoa_fisica,b.cd_cgc,'UF'),1,2)) sg_estado 
from	titulo_receber_v b, 
	titulo_receber_cobr a 
where	a.nr_titulo	= b.nr_titulo 
and	a.nr_seq_cobranca	= nr_seq_cobr_escrit_p;


BEGIN 
 
delete	from w_cobranca_banco;
 
/* HEADER DE ARQUIVO */
 
insert	into w_cobranca_banco(cd_agencia_bancaria, 
	cd_conta, 
	cd_convenio_banco, 
	dt_atualizacao, 
	dt_geracao, 
	ie_digito_agencia, 
	ie_digito_conta, 
	ie_tipo_registro, 
	nm_empresa, 
	nm_usuario, 
	nr_seq_envio, 
	nr_sequencia) 
SELECT	b.cd_agencia_bancaria, 
	b.cd_conta, 
	b.cd_convenio_banco, 
	clock_timestamp(), 
	clock_timestamp(), 
	to_char(calcula_digito('MODULO11',b.cd_agencia_bancaria)), 
	substr(coalesce(b.ie_digito_conta,to_char(calcula_digito('MODULO11',b.cd_conta))),1,1), 
	1 ie_tipo_registro, 
	upper(substr(obter_nome_estabelecimento(a.cd_estabelecimento),1,255)), 
	nm_usuario_p, 
	a.nr_sequencia, 
	nextval('w_cobranca_banco_seq') 
from	banco_estabelecimento b, 
	cobranca_escritural a 
where	a.nr_seq_conta_banco	= b.nr_sequencia 
and	a.nr_sequencia		= nr_seq_cobr_escrit_p;
 
open	c01;
loop 
fetch	c01 into 
	ds_email_w, 
	nr_titulo_w, 
	ie_tipo_pessoa_w, 
	ds_cgc_cpf_w, 
	cd_agencia_bancaria_w, 
	nr_conta_w, 
	ie_digito_conta_w, 
	cd_banco_w, 
	cd_estabelecimento_w, 
	dt_pagamento_previsto_w, 
	vl_multa_w, 
	vl_saldo_titulo_w, 
	dt_emissao_w, 
	vl_juros_w, 
	vl_desconto_w, 
	nm_pagador_w, 
	ds_endereco_w, 
	cd_cep_w, 
	ds_cidade_w, 
	sg_estado_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
 
	/* DETALHE TIPO 5 - MULTA */
 
	if (vl_multa_w	> 0) then 
 
		nr_seq_reg_lote_w	:= nr_seq_reg_lote_w + 1;
 
		insert	into w_cobranca_banco(dt_atualizacao, 
			dt_vencimento, 
			ie_tipo_mora, 
			ie_tipo_registro, 
			nm_usuario, 
			nr_seq_envio, 
			nr_seq_reg_lote, 
			nr_sequencia, 
			nr_titulo, 
			vl_multa) 
		values (clock_timestamp(), 
			dt_pagamento_previsto_w, 
			'1', 
			4, 
			nm_usuario_p, 
			nr_seq_cobr_escrit_p, 
			nr_seq_reg_lote_w, 
			nextval('w_cobranca_banco_seq'), 
			nr_titulo_w, 
			vl_multa_w);
 
	end if;
 
	/* DETALHE TIPO 5 - EMAIL */
 
	if (ds_email_w IS NOT NULL AND ds_email_w::text <> '') then 
 
		nr_seq_reg_lote_w	:= nr_seq_reg_lote_w + 1;
 
		insert	into w_cobranca_banco(ds_mensagem_2, 
			dt_atualizacao, 
			ie_tipo_registro, 
			nm_usuario, 
			nr_seq_envio, 
			nr_seq_reg_lote, 
			nr_sequencia, 
			nr_titulo) 
		values (ds_email_w, 
			clock_timestamp(), 
			5, 
			nm_usuario_p, 
			nr_seq_cobr_escrit_p, 
			nr_seq_reg_lote_w, 
			nextval('w_cobranca_banco_seq'), 
			nr_titulo_w);
 
	end if;
 
	select	max(a.cd_convenio_banco) 
	into STRICT	cd_convenio_banco_w 
	from	banco_estabelecimento a 
	where	a.cd_conta		= nr_conta_w 
	and	a.cd_agencia_bancaria	= cd_agencia_bancaria_w 
	and	a.cd_estabelecimento	= cd_estabelecimento_w 
	and	a.cd_banco		= cd_banco_w;
 
	if (vl_desconto_w	> 0) then 
		ds_limite_desconto_w	:= to_char(dt_pagamento_previsto_w,'ddmmyy');
	else 
		ds_limite_desconto_w	:= '000000';
	end if;
 
	ie_digito_agencia_w	:= to_char(calcula_digito('MODULO11',cd_agencia_bancaria_w));
 
	if (coalesce(ie_digito_conta_w::text, '') = '') then 
		ie_digito_conta_w	:= to_char(calcula_digito('MODULO11',nr_conta_w));
	end if;
 
	nr_seq_reg_lote_w	:= nr_seq_reg_lote_w + 1;
 
	/* DETALHE OBRIGATÓRIO */
 
	insert	into w_cobranca_banco(cd_agencia_bancaria, 
		cd_cep, 
		cd_conta, 
		cd_convenio_banco, 
		ds_cgc_cpf, 
		ds_cidade, 
		ds_endereco, 
		ds_mensagem_3, 
		dt_atualizacao, 
		dt_emissao, 
		dt_vencimento, 
		ie_digito_agencia, 
		ie_digito_conta, 
		ie_tipo_pessoa, 
		ie_tipo_registro, 
		nm_pagador, 
		nm_usuario, 
		nr_seq_envio, 
		nr_seq_reg_lote, 
		nr_sequencia, 
		nr_titulo, 
		sg_estado, 
		vl_desconto, 
		vl_juros, 
		vl_titulo) 
	values (cd_agencia_bancaria_w, 
		cd_cep_w, 
		nr_conta_w, 
		cd_convenio_banco_w, 
		ds_cgc_cpf_w, 
		ds_cidade_w, 
		ds_endereco_w, 
		ds_limite_desconto_w, 
		clock_timestamp(), 
		dt_emissao_w, 
		dt_pagamento_previsto_w, 
		ie_digito_agencia_w, 
		ie_digito_conta_w, 
		ie_tipo_pessoa_w, 
		7, 
		nm_pagador_w, 
		nm_usuario_p, 
		nr_seq_cobr_escrit_p, 
		nr_seq_reg_lote_w, 
		nextval('w_cobranca_banco_seq'), 
		nr_titulo_w, 
		substr(sg_estado_w,1,2), 
		vl_desconto_w, 
		vl_juros_w, 
		vl_saldo_titulo_w);
 
end	loop;
close	c01;
 
nr_seq_reg_lote_w	:= nr_seq_reg_lote_w + 1;
 
/* TRAILER DE ARQUIVO */
 
insert	into w_cobranca_banco(dt_atualizacao, 
	ie_tipo_registro, 
	nm_usuario, 
	nr_seq_envio, 
	nr_seq_reg_lote, 
	nr_sequencia) 
values (clock_timestamp(), 
	9, 
	nm_usuario_p, 
	nr_seq_cobr_escrit_p, 
	nr_seq_reg_lote_w, 
	nextval('w_cobranca_banco_seq'));
 
commit;
 
end	;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_cobranca_brasil_cnab_400 ( nr_seq_cobr_escrit_p bigint, nm_usuario_p text) FROM PUBLIC;

