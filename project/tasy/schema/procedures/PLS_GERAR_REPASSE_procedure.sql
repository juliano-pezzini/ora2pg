-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_repasse ( nr_seq_repasse_p bigint, ie_acao_p text, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE

 
/*	ie_acao_p 
	'G' - Gerar repasse 
	'D' - Desfazer repasse 
*/
 
 
dt_referencia_w			timestamp;
ie_lote_contabil_w		varchar(1);
nr_seq_vendedor_w		bigint;
nr_seq_repasse_mens_w		bigint;
ie_tipo_repasse_w		varchar(2);
qt_reg_gerado_w			integer;
qt_pf_estipulante_w		bigint;
qt_pj_estipulante_w		bigint;
nr_seq_repasse_mens_ww		bigint;
qt_equipe_w			bigint;
qt_lancamentos_w		bigint;
cd_cond_pagto_w			pls_repasse_vend.cd_condicao_pagamento%type;

C01 CURSOR FOR 
	SELECT	nr_sequencia 
	from	pls_repasse_mens 
	where	nr_seq_vendedor	= nr_seq_vendedor_w 
	and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '') 
	and	coalesce(nr_seq_repasse::text, '') = '';

C02 CURSOR FOR 
	SELECT	nr_sequencia 
	from	pls_repasse_mens 
	where	nr_seq_repasse = nr_seq_repasse_p;


BEGIN 
 
select	trunc(dt_referencia,'month'), 
	nr_seq_vendedor, 
	ie_tipo_repasse, 
	cd_condicao_pagamento 
into STRICT	dt_referencia_w, 
	nr_seq_vendedor_w, 
	ie_tipo_repasse_w, 
	cd_cond_pagto_w 
from	pls_repasse_vend 
where	nr_sequencia = nr_seq_repasse_p;
 
if (coalesce(cd_cond_pagto_w::text, '') = '') then 
	CALL wheb_mensagem_pck.exibir_mensagem_abort(221135, null);
	/* Não foi informada a condição de pagamento do repasse! Favor informá-la no campo "Cond pgto". */
 
end if;
 
ie_lote_contabil_w := obter_se_lote_contabil_gerado(24, dt_referencia_w);
 
if (ie_lote_contabil_w = 'S') then 
	/* Não é possível concluir a ação executada pois existe um lote contábil gerado para a competência #@DT_COMPETENCIA#@! */
 
	CALL wheb_mensagem_pck.exibir_mensagem_abort(458973, 'DT_COMPETENCIA=' || to_char(dt_referencia_w,'mm/yyyy'));
end if;
 
if (ie_tipo_repasse_w = 'N') then --Paulo - OS 84636 - 02/05/2008 - Gerar repasse normal 
	if (ie_acao_p = 'D') then 
		open C02;
		loop 
		fetch C02 into	 
			nr_seq_repasse_mens_ww;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			update	pls_repasse_mens_item 
			set	vl_repasse = coalesce(vl_origem,0) 
			where	nr_seq_repasse = nr_seq_repasse_mens_ww;
		end loop;
		close C02;
 
		update	pls_repasse_mens 
		set	nr_seq_repasse	 = NULL, 
			vl_repasse = coalesce(vl_origem,0) 
		where	nr_seq_repasse	= nr_seq_repasse_p;		
		 
		update	pls_repasse_vend 
		set	ie_status	= 'A', 
			ds_inf_geracao	 = NULL, 
			qt_vidas	= 0 
		where	nr_sequencia	= nr_seq_repasse_p;
		 
		delete	from	pls_repasse_vend_venc 
		where	nr_seq_repasse	= nr_seq_repasse_p;
	else 
		open C01;
		loop 
		fetch C01 into	 
			nr_seq_repasse_mens_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin 
			update	pls_repasse_mens 
			set	nr_seq_repasse	= nr_seq_repasse_p 
			where	nr_sequencia	= nr_seq_repasse_mens_w 
			and	coalesce(nr_seq_comissao_benef::text, '') = '';
			end;
		end loop;
		close C01;
		 
		CALL pls_acrescentar_juros_multa(nr_seq_repasse_p, null, 'RN', nm_usuario_p, cd_estabelecimento_p);	
	end if;
elsif (ie_tipo_repasse_w = 'M') then --Paulo - OS 84636 - 02/05/2008 - Gerar repasse mensal 
	pls_gerar_comissao_vend_mensal(nr_seq_repasse_p, nr_seq_vendedor_w, ie_acao_p, nm_usuario_p);
elsif (ie_tipo_repasse_w = 'E') then /* Lepinski - Gerar repasse por equipe de venda */
 
	if (ie_acao_p = 'D') then 
		open C02;
		loop 
		fetch C02 into	 
			nr_seq_repasse_mens_ww;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			delete	from	pls_repasse_mens_item 
			where	nr_seq_repasse	= nr_seq_repasse_mens_ww;
			 
			delete	from	pls_repasse_mens 
			where	nr_sequencia	= nr_seq_repasse_mens_ww;
		end loop;
		close C02;
		 
		update	pls_repasse_vend 
		set	ie_status	= 'A', 
			ds_inf_geracao	 = NULL, 
			qt_vidas	= 0 
		where	nr_sequencia	= nr_seq_repasse_p;
		 
		delete	from	pls_repasse_vend_venc 
		where	nr_seq_repasse	= nr_seq_repasse_p;
		 
		delete	from	pls_repasse_item_lote 
		where	nr_seq_repasse	= nr_seq_repasse_p;
	else 
		select	count(*) 
		into STRICT	qt_equipe_w 
		from	pls_equipe_vend_vinculo	a, 
			pls_equipe_vendedor	b 
		where	a.nr_seq_equipe		= b.nr_sequencia 
		and	a.nr_seq_vendedor	= nr_seq_vendedor_w 
		and	dt_referencia_w between coalesce(a.dt_inicio_vigencia, dt_referencia_w) and coalesce(a.dt_fim_vigencia, dt_referencia_w);
	 
		if (qt_equipe_w <> 0) then 
			CALL pls_gerar_comissao_equipe(nr_seq_repasse_p, nr_seq_vendedor_w, ie_acao_p, nm_usuario_p);
		else 
			CALL wheb_mensagem_pck.exibir_mensagem_abort( 222512, null);
			/* O vendedor não está vinculado a uma equipe. Favor verifique! */
 
		end if;
	end if;	
end if;
 
if (ie_acao_p = 'G') then 
	CALL pls_gerar_desf_vend_lanc_adic(nr_seq_vendedor_w, nr_seq_repasse_p, dt_referencia_w, nm_usuario_p, cd_estabelecimento_p, 'G');
	CALL pls_alterar_status_repasse(nr_seq_repasse_p, nm_usuario_p);
	CALL pls_gerar_venc_repasse(nr_seq_repasse_p, 'S', nm_usuario_p);
	CALL pls_ajustar_valores_repasse(nr_seq_repasse_p, nm_usuario_p);
elsif (ie_acao_p = 'D') then 
	CALL pls_gerar_desf_vend_lanc_adic(nr_seq_vendedor_w, nr_seq_repasse_p, dt_referencia_w, nm_usuario_p, cd_estabelecimento_p, 'D');
end if;
 
select	count(*) 
into STRICT	qt_reg_gerado_w 
from	pls_repasse_mens 
where	nr_seq_repasse	= nr_seq_repasse_p;
 
if (qt_reg_gerado_w > 0) then 
	select	sum(qt_pf_estipulante), 
		sum(qt_pj_estipulante) 
	into STRICT	qt_pf_estipulante_w, 
		qt_pj_estipulante_w 
	from (	SELECT	CASE WHEN coalesce(d.cd_pf_estipulante::text, '') = '' THEN 0  ELSE 1 END  qt_pf_estipulante, 
			CASE WHEN coalesce(d.cd_cgc_estipulante::text, '') = '' THEN 0  ELSE 1 END  qt_pj_estipulante 
		from	pls_repasse_mens a, 
			pls_mensalidade_segurado b, 
			pls_segurado c, 
			pls_contrato d 
		where	a.nr_seq_mens_seg	= b.nr_sequencia 
		and	b.nr_seq_segurado	= c.nr_sequencia 
		and	c.nr_seq_contrato	= d.nr_sequencia 
		and	a.nr_seq_repasse	= nr_seq_repasse_p) alias5;
	 
	update	pls_repasse_vend 
	set	ds_inf_geracao	= ds_inf_geracao || chr(13) || 'PF: ' || qt_pf_estipulante_w || ' PJ: ' || qt_pj_estipulante_w, 
		qt_vidas	= qt_reg_gerado_w 
	where	nr_sequencia	= nr_seq_repasse_p;
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_repasse ( nr_seq_repasse_p bigint, ie_acao_p text, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

