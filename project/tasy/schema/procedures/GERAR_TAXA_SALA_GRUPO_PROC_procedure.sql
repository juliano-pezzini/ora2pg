-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_taxa_sala_grupo_proc ( nr_sequencia_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_atendimento_w		bigint;
cd_estabelecimento_w	bigint;
cd_convenio_w			integer;
nr_seq_tipo_taxa_w		bigint;
qt_proc_regra_w			bigint;
qt_proc_conta_w			bigint;
qt_w					bigint;
cd_proc_regra_w			bigint;
ie_origem_proc_regra_w	integer;
cd_proc_lanc_w			bigint;
ie_origem_proc_lanc_w	integer;
nr_seq_gerada_w			bigint;
qt_porte_w				bigint;
ie_proc_lancado_w		varchar(1):='N';
qt_taxa_especial_w		bigint;

nr_seq_proc_interno_w		bigint;
cd_categoria_w			varchar(10);
dt_procedimento_w		timestamp;
cd_setor_atend_w		setor_atendimento.cd_setor_atendimento%type;
nr_seq_proc_int_w		bigint;
qt_lanc_taxa_w			bigint;

C01 CURSOR FOR
	SELECT	nr_sequencia
	from	tipo_taxa_cirurgica
	where	cd_convenio 		= cd_convenio_w
	and	cd_estabelecimento 	= cd_estabelecimento_w;

C03 CURSOR FOR
	SELECT	cd_procedimento,
		ie_origem_proced
	from	tipo_taxa_proced
	where	nr_seq_tipo_taxa = nr_seq_tipo_taxa_w;


BEGIN

select	b.nr_atendimento,
	b.cd_estabelecimento,
	a.cd_convenio,
	a.cd_categoria,
	a.dt_procedimento,
	a.cd_setor_atendimento
into STRICT	nr_atendimento_w,
	cd_estabelecimento_w,
	cd_convenio_w,
	cd_categoria_w,
	dt_procedimento_w,
	cd_setor_atend_w
from	atendimento_paciente b,
	procedimento_paciente a
where	a.nr_sequencia	 = nr_sequencia_p
and	a.nr_atendimento = b.nr_atendimento;

open C01;
loop
fetch C01 into
	nr_seq_tipo_taxa_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	qt_proc_regra_w:= 0;
	qt_proc_conta_w:= 0;
	open C03;
	loop
	fetch C03 into
		cd_proc_regra_w,
		ie_origem_proc_regra_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin

		select 	count(*)
		into STRICT	qt_w
		from	procedimento_paciente
		where	cd_procedimento  = cd_proc_regra_w
		and	ie_origem_proced = ie_origem_proc_regra_w;

		if (qt_w > 0) then
			qt_proc_conta_w := qt_proc_conta_w + 1;
		end if;
		qt_proc_regra_w :=  qt_proc_regra_w + 1;
		end;
	end loop;
	close C03;

	if (qt_proc_regra_w = qt_proc_conta_w) then



		select	cd_procedimento,
			ie_origem_proced,
			qt_porte,
			nr_seq_proc_interno,
			qt_procedimento
		into STRICT	cd_proc_lanc_w,
			ie_origem_proc_lanc_w,
			qt_porte_w,
			nr_seq_proc_interno_w,
			qt_lanc_taxa_w
		from	tipo_taxa_cirurgica
		where	nr_sequencia = nr_seq_tipo_taxa_w;

		select 	count(*)
		into STRICT	qt_taxa_especial_w
		from 	procedimento_paciente
		where 	nr_atendimento = nr_atendimento_w
		and 	(nr_interno_conta IS NOT NULL AND nr_interno_conta::text <> '')
		--and 	qt_porte_anestesico = qt_porte_w
		and 	ds_observacao like '%' || obter_desc_expressao(729217) || '%';

		if (ie_proc_lancado_w = 'N') and (qt_taxa_especial_w = 0) then
			ie_proc_lancado_w	:='S';
			nr_seq_gerada_w := duplicar_proc_paciente(nr_sequencia_p, nm_usuario_p, nr_seq_gerada_w);

			nr_seq_proc_int_w:= null;
			if (coalesce(cd_proc_lanc_w,0) = 0) and (coalesce(nr_seq_proc_interno_w,0) > 0) then
				SELECT * FROM Obter_Proc_Tab_Interno_Conv(nr_seq_proc_interno_w, cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, null, null, cd_proc_lanc_w, ie_origem_proc_lanc_w, cd_setor_atend_w, dt_procedimento_w, 0, null, null, null, null, null, null, null) INTO STRICT cd_proc_lanc_w, ie_origem_proc_lanc_w;
				nr_seq_proc_int_w:=  nr_seq_proc_interno_w;
			end if;

			update	procedimento_paciente
			set		cd_procedimento		= cd_proc_lanc_w,
					ie_origem_proced	= ie_origem_proc_lanc_w,
					nr_seq_proc_interno 	= nr_seq_proc_int_w,
					qt_porte_anestesico	= qt_porte_w,
					ie_valor_informado	= 'N',
					tx_procedimento		= 100,
					nr_seq_proc_princ	= nr_sequencia_p,
					cd_pessoa_fisica	 = NULL,
					cd_medico_executor	 = NULL,
					cd_medico_req		 = NULL,
					ie_funcao_medico	 = NULL,
					ie_emite_conta		 = NULL,
					ie_emite_conta_honor	 = NULL,
					ds_observacao 		= wheb_mensagem_pck.get_texto(307901),
					qt_procedimento		= coalesce(qt_lanc_taxa_w,qt_procedimento)
			where nr_sequencia = nr_seq_gerada_w;

			CALL atualiza_preco_procedimento(nr_seq_gerada_w,cd_convenio_w, nm_usuario_p);
		end if;

	end if;

	end;
end loop;
close C01;

if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_taxa_sala_grupo_proc ( nr_sequencia_p bigint, nm_usuario_p text) FROM PUBLIC;

