-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE hc_inserir_profissional (nr_seq_controle_p bigint, ds_lista_profissional_p text, ds_lista_intervalo_p text, nm_usuario_p text) AS $body$
DECLARE


ds_lista_profissional_w		varchar(32000);
ds_lista_interv_w		varchar(32000);
ie_contador_w			smallint := 0;
tam_lista_w			bigint;
ie_pos_virgula_w		smallint;
lista_inf_w			varchar(100);
tam_lista_ww			bigint;
ie_pos_virgula_ww		smallint;
nr_seq_profissional_w		bigint;
nr_seq_intervalo_w		bigint;
nr_seq_controle_prof_w		bigint;
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
cd_intervalo_w			varchar(7);

C01 CURSOR FOR
	SELECT	cd_procedimento,
		ie_origem_proced
	from	hc_pad_procedimento
	where	nr_seq_profissional = nr_seq_profissional_w;


BEGIN
ds_lista_profissional_w := ds_lista_profissional_p;
ds_lista_interv_w	:= ds_lista_intervalo_p;

if (ds_lista_profissional_p IS NOT NULL AND ds_lista_profissional_p::text <> '') and (ds_lista_intervalo_p IS NOT NULL AND ds_lista_intervalo_p::text <> '') then

	while(ds_lista_profissional_w IS NOT NULL AND ds_lista_profissional_w::text <> '') and (ds_lista_interv_w IS NOT NULL AND ds_lista_interv_w::text <> '') and (ie_contador_w < 1000)loop
		begin
		tam_lista_w			:= length(ds_lista_profissional_w);
		ie_pos_virgula_w		:= position(',' in ds_lista_profissional_w);

		tam_lista_ww		:= length(ds_lista_interv_w);
		ie_pos_virgula_ww	:= position(',' in ds_lista_interv_w);

		if (ie_pos_virgula_w <> 0) then
			nr_seq_profissional_w	:= (substr(ds_lista_profissional_w,1,(ie_pos_virgula_w - 1)))::numeric;
			ds_lista_profissional_w	:= substr(ds_lista_profissional_w,(ie_pos_virgula_w + 1),tam_lista_w);
		end if;

		if (ie_pos_virgula_ww <> 0) then
			nr_seq_intervalo_w	:= (substr(ds_lista_interv_w, 1, (ie_pos_virgula_ww - 1)))::numeric;
			ds_lista_interv_w	:= substr(ds_lista_interv_w, (ie_pos_virgula_ww + 1), tam_lista_ww);
		end if;


		if (nr_seq_profissional_w IS NOT NULL AND nr_seq_profissional_w::text <> '') and (nr_seq_intervalo_w IS NOT NULL AND nr_seq_intervalo_w::text <> '') then


			select	max(cd_intervalo)
			into STRICT	cd_intervalo_w
			from	hc_pad_prof_interv
			where	nr_sequencia = nr_seq_intervalo_w;

			select	nextval('hc_pad_controle_prof_seq')
			into STRICT	nr_seq_controle_prof_w
			;

			insert into hc_pad_controle_prof(
				nr_sequencia,
				nr_seq_profissional,
				nr_seq_intervalo,
				dt_atualizacao,
				nm_usuario,
				nr_seq_controle,
				dt_atualizacao_nrec,
				nm_usuario_nrec)
			values (	nr_seq_controle_prof_w,
				nr_seq_profissional_w,
				cd_intervalo_w,
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_controle_p,
				clock_timestamp(),
				nm_usuario_p);

			open C01;
			loop
			fetch C01 into
				cd_procedimento_w,
				ie_origem_proced_w;
			EXIT WHEN NOT FOUND; /* apply on C01 */
				begin

				insert into hc_pad_prof_proced(
					nr_sequencia,
					cd_procedimento,
					dt_atualizacao,
					nm_usuario,
					nr_seq_profissional,
					ie_origem_proced,
					dt_atualizacao_nrec,
					nm_usuario_nrec)
				values (	nextval('hc_pad_prof_proced_seq'),
					cd_procedimento_w,
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_controle_prof_w,
					ie_origem_proced_w,
					clock_timestamp(),
					nm_usuario_p);

				end;
			end loop;
			close C01;

		end if;

		end;
	end loop;


end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE hc_inserir_profissional (nr_seq_controle_p bigint, ds_lista_profissional_p text, ds_lista_intervalo_p text, nm_usuario_p text) FROM PUBLIC;

