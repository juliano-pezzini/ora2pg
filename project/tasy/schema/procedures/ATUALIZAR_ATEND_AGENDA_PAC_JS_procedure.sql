-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualizar_atend_agenda_pac_js ( nr_seq_agenda_p bigint, nr_seq_agenda_vinculo_p bigint, ds_tipos_atend_agenda_p text, nr_atendimento_p bigint, ds_lista_agendas_pac_p text, nm_usuario_p text) AS $body$
DECLARE



c01 CURSOR FOR
	SELECT 	b.nr_sequencia,
				b.nr_seq_oftalmo,
				b.cd_medico_exec,
				obter_tipo_agenda(b.cd_agenda)
	from 		table(lista_pck.obter_lista(ds_lista_agendas_pac_p)) a,
				agenda_paciente b
	where		a.nr_registro = b.nr_sequencia;


nr_seq_agenda_inte_w	bigint;
ie_opme_integracao_w	varchar(1);
cd_estabelecimento_w	agenda.cd_estabelecimento%type;
envio_auto_int_opme_w	opme_envio_automatico.ie_evento%type;
ie_gerar_oft_ag_ex_w	varchar(15);
ie_gerar_oft_eup_w	varchar(15);
nr_seq_oftalmo_w		agenda_paciente.nr_seq_oftalmo%type;
cd_medico_exec_w		agenda_paciente.cd_medico_exec%type;
cd_tipo_agenda_w		agenda.cd_tipo_agenda%type;
nr_seq_agenda_w		agenda_paciente.nr_sequencia%type;



BEGIN
ie_gerar_oft_ag_ex_w := obter_param_usuario(820, 369, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_gerar_oft_ag_ex_w);
ie_gerar_oft_eup_w := obter_param_usuario(916, 1091, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_gerar_oft_eup_w);


if (coalesce(nr_seq_agenda_p,0) <> 0) or (coalesce(nr_seq_agenda_vinculo_p,0) > 0) and (coalesce(nr_atendimento_p, 0) > 0) then
	begin

	if (ds_tipos_atend_agenda_p IS NOT NULL AND ds_tipos_atend_agenda_p::text <> '') and (coalesce(nr_seq_agenda_vinculo_p,0) > 0) then
		begin

		update 	agenda_paciente
		set    	nr_atendimento 	= nr_atendimento_p
		where 	nr_sequencia 	= nr_seq_agenda_vinculo_p;

		end;
	else
		begin

		update 	agenda_paciente
		set    	nr_atendimento 	= nr_atendimento_p
		where 	nr_sequencia 	= nr_seq_agenda_p;

		end;


		if (ie_gerar_oft_eup_w = 'N') and (ie_gerar_oft_ag_ex_w = 'A') then
			select	max(nr_seq_oftalmo),
						max(cd_medico_exec),
						max(obter_tipo_agenda(cd_agenda))
			into STRICT		nr_seq_oftalmo_w,
						cd_medico_exec_w,
						cd_tipo_agenda_w
			from		agenda_paciente
			where		nr_sequencia = nr_seq_agenda_p;

			if (cd_tipo_agenda_w = 2) and (coalesce(nr_seq_agenda_p,0) > 0) and (coalesce(nr_atendimento_p,0) > 0) and (coalesce(nr_seq_oftalmo_w::text, '') = '') and (cd_medico_exec_w IS NOT NULL AND cd_medico_exec_w::text <> '') then
				CALL gerar_consulta_oft_agenda(null,nr_seq_agenda_p,nm_usuario_p,wheb_usuario_pck.get_cd_estabelecimento);
			end if;
		end if;
	end if;

	if (coalesce(nr_seq_agenda_p,0) > 0) then
		nr_seq_agenda_inte_w  := nr_seq_agenda_p;
	else
		nr_seq_agenda_inte_w := nr_seq_agenda_vinculo_p;
	end if;

	select	max(ie_opme_integracao)
	into STRICT	ie_opme_integracao_w
	from	agenda_paciente
	where	nr_sequencia = coalesce(nr_seq_agenda_inte_w,0);

	select	max(b.cd_estabelecimento)
	into STRICT	cd_estabelecimento_w
	from 	agenda b,
		agenda_paciente a
	where	a.cd_agenda	= b.cd_agenda
	and 	a.nr_sequencia	= nr_seq_agenda_inte_w;

	envio_auto_int_opme_w := obter_envio_auto_int_opme(cd_estabelecimento_w, nr_seq_agenda_inte_w, 'AA');

	if (ie_opme_integracao_w = 'S') and (envio_auto_int_opme_w = 'S' or envio_auto_int_opme_w = 'P') then
		CALL ajusta_status_agenda_int_opme(coalesce(nr_seq_agenda_inte_w,0), '7', '', nm_usuario_p);
	end if;

	end;
end if;

if (ds_lista_agendas_pac_p IS NOT NULL AND ds_lista_agendas_pac_p::text <> '') and (coalesce(nr_seq_agenda_p,0) = 0) then
	begin

	update 	agenda_paciente a
	set    	a.nr_atendimento 	= nr_atendimento_p
	where 	nr_sequencia in (SELECT w.nr_registro from table(lista_pck.obter_lista(ds_lista_agendas_pac_p)) w);

	if (ie_gerar_oft_eup_w = 'N') and (ie_gerar_oft_ag_ex_w = 'A') then
		open C01;
		loop
		fetch C01 into
			nr_seq_agenda_w,
			nr_seq_oftalmo_w,
			cd_medico_exec_w,
			cd_tipo_agenda_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin
			if (cd_tipo_agenda_w = 2) and (coalesce(nr_atendimento_p,0) > 0) and (coalesce(nr_seq_oftalmo_w::text, '') = '') and (cd_medico_exec_w IS NOT NULL AND cd_medico_exec_w::text <> '') then
				CALL gerar_consulta_oft_agenda(null,nr_seq_agenda_w,nm_usuario_p,wheb_usuario_pck.get_cd_estabelecimento);
			end if;
			end;
		end loop;
		close C01;
	end if;
	end;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualizar_atend_agenda_pac_js ( nr_seq_agenda_p bigint, nr_seq_agenda_vinculo_p bigint, ds_tipos_atend_agenda_p text, nr_atendimento_p bigint, ds_lista_agendas_pac_p text, nm_usuario_p text) FROM PUBLIC;

