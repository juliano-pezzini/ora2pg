-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE liberar_horario_agenda_exame (nr_seq_agenda_p bigint, nm_usuario_p text) AS $body$
DECLARE


qt_agenda_w				bigint;
qt_w					bigint;
ie_horario_bloqueado_w		varchar(1);
ie_status_agenda_w		varchar(2) := 'L';
cd_agenda_w				bigint;
dt_agenda_w				timestamp;


BEGIN

begin
if (nr_seq_agenda_p IS NOT NULL AND nr_seq_agenda_p::text <> '') then

	select	1
	into STRICT	qt_w
	from	agenda_paciente
	where	nr_sequencia = nr_seq_agenda_p
	for	update;
	
	select	coalesce(count(*),0)
	into STRICT	qt_agenda_w
	from	agenda_paciente
	where	nr_sequencia			= nr_seq_agenda_p
	and	coalesce(ie_status_agenda,'L')	= 'N'
	and	nm_usuario_acesso		= nm_usuario_p
	and	coalesce(cd_pessoa_fisica::text, '') = ''
	and	((coalesce(nm_paciente::text, '') = '') or (substr(nm_paciente,1,60) = substr(obter_obs_turno(nr_seq_agenda_p),1,60)
	and	(obter_obs_turno(nr_seq_agenda_p) IS NOT NULL AND (obter_obs_turno(nr_seq_agenda_p))::text <> '')));

	--IN?IO - Validar se existe bloqueio no hor?o marcado, se existir, deve atualizar o hor?o novamente para bloqueado
	select	max(cd_agenda),
		max(hr_inicio)
	into STRICT	cd_agenda_w,
		dt_agenda_w
	from	agenda_paciente
	where	nr_sequencia = nr_seq_agenda_p;	
	
	if (cd_agenda_w IS NOT NULL AND cd_agenda_w::text <> '') and (dt_agenda_w IS NOT NULL AND dt_agenda_w::text <> '')then
		
		ie_horario_bloqueado_w := consistir_bloqueio_agenda(cd_agenda_w, dt_agenda_w, obter_cod_dia_semana(dt_agenda_w), ie_horario_bloqueado_w);
		
		if (ie_horario_bloqueado_w = 'S')then
			ie_status_agenda_w	:= 'B';		
		end if;
				
	end if;	
	--FIM - Validar se existe bloqueio no hor?o marcado, se existir, deve atualizar o hor?o novamente para bloqueado
	
	if (qt_agenda_w > 0) then
		update	agenda_paciente
		set		ie_status_agenda	= 'L',
				nm_usuario			= nm_usuario_p,
				nm_usuario_acesso	 = NULL,
				dt_agendamento		 = NULL
		where	nr_sequencia		= nr_seq_agenda_p;
		commit;
	end if;
	
	if (ie_horario_bloqueado_w = 'S')then
		update	agenda_paciente
		set		ie_status_agenda	= ie_status_agenda_w,
				nm_usuario			= nm_usuario_p				
		where	nr_sequencia		= nr_seq_agenda_p;
		commit;	
	end if;
	
end if;
exception
	when others then		
	commit;
end;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE liberar_horario_agenda_exame (nr_seq_agenda_p bigint, nm_usuario_p text) FROM PUBLIC;

