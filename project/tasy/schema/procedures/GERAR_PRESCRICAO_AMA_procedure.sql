-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_prescricao_ama ( nr_sequencia_p bigint, cd_pessoa_fisica_p text, nm_usuario_p text, nr_prescricao_p INOUT bigint) AS $body$
DECLARE

 
 
nr_prescricao_w			bigint;
nr_atentimento_w		bigint;
cd_pessoa_fisica_w		varchar(10);
cd_medico_resp_w		varchar(10);
cd_estabelecimento_w		smallint;
cd_setor_atendimento_w		integer;
ie_origem_inf_w			varchar(1);
ie_ama_w			varchar(1)	:= 'S';

cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
qt_procedimento_w		bigint;
cd_atividade_prof_bpa_w		smallint;

nr_sequencia_w			integer;
ie_medico_W			bigint := 0;
cd_medico_exec_w		varchar(10);
cd_medico_ambulatorial_w	varchar(10);

ie_regra_ama_w			integer;
ie_ama_ww			varchar(1)	:= 'S';

 
C01 CURSOR FOR 
	SELECT	cd_procedimento, 
		ie_origem_proced, 
		qt_procedimento, 
		cd_atividade_prof_bpa 
	from	proced_medico_ambulatorial 
	where	nr_seq_ama	= nr_sequencia_p 
	and	coalesce(nr_prescricao::text, '') = '';
	
C02 CURSOR FOR 
	SELECT	coalesce(ie_ama,'N') ie_ama 
	from	sus_medico_ama 
	where	coalesce(cd_setor_atendimento,cd_setor_atendimento_w) = cd_setor_atendimento_w 
	and 	coalesce(cd_pessoa_fisica,cd_medico_ambulatorial_w) = cd_medico_ambulatorial_w 
	order by coalesce(ie_ama,'N');


BEGIN 
select 	coalesce(max('1'),'3') 
into STRICT	ie_origem_inf_w 
from	Medico 
where 	cd_pessoa_fisica	= cd_pessoa_fisica_p;
 
begin 
select	cd_setor_atendimento 
into STRICT	cd_setor_atendimento_w 
from 	usuario 
where 	cd_pessoa_fisica	= cd_pessoa_fisica_p 
and	ie_situacao		= 'A';
exception 
when others then 
	cd_setor_atendimento_w	:= null;
end;
 
begin 
select	count(1), 
	ie_ama 
into STRICT	ie_medico_w, 
	ie_ama_w 
from	medico 
where	cd_pessoa_fisica	= cd_pessoa_fisica_p 
group by ie_ama;
exception 
when others then 
	ie_medico_w	:= 0;
	ie_ama_w	:= 'S';
end;
 
if (ie_medico_w	> 0) then 
	cd_setor_atendimento_w	:= null;
end if;
 
select	a.nr_atendimento, 
	b.cd_medico_resp, 
	b.cd_pessoa_fisica, 
	b.cd_estabelecimento, 
	a.cd_medico_resp, 
	coalesce(cd_setor_atendimento_w, obter_setor_atendimento(a.nr_atendimento)) 
into STRICT	nr_atentimento_w, 
	cd_medico_resp_w, 
	cd_pessoa_fisica_w, 
	cd_estabelecimento_w, 
	cd_medico_ambulatorial_w, 
	cd_setor_atendimento_w 
from	atendimento_paciente b, 
	atend_medico_ambulatorial a 
where	a.nr_atendimento	= b.nr_atendimento 
and	a.nr_sequencia		= nr_sequencia_p;
 
/* Se o usuário for médico e tiver pesmissão de ama o sistema joga o código do usuario, se for médico e não tiver 
permissão de ama o sistema joga o médico da AMA OS47238 - Felipe*/
 
if (ie_medico_w	> 0) and (ie_ama_w	= 'S') then 
	cd_medico_exec_w	:= cd_pessoa_fisica_p;
elsif (ie_medico_w	> 0) and (ie_ama_w	= 'N') then 
	cd_medico_exec_w	:= cd_medico_ambulatorial_w;
end if;
 
select 	count(1) 
into STRICT 	ie_regra_ama_w 
from 	sus_medico_ama 
where	coalesce(cd_setor_atendimento,cd_setor_atendimento_w) = cd_setor_atendimento_w 
and 	coalesce(cd_pessoa_fisica,cd_medico_ambulatorial_w) = cd_medico_ambulatorial_w;
 
if (ie_medico_w > 0) and (ie_regra_ama_w > 0) then 
	open c02;
	loop 
	fetch c02 into 
		ie_ama_ww;
	EXIT WHEN NOT FOUND; /* apply on c02 */	
		ie_ama_ww := ie_ama_ww;
	end loop;
	close c02;
	if (ie_ama_ww = 'S') then 
		cd_medico_exec_w	:= cd_medico_ambulatorial_w;
	end if;	
end if;
 
select	nextval('prescr_medica_seq') 
into STRICT	nr_prescricao_w
;
 
insert into prescr_medica( 
	nr_prescricao, 
	cd_pessoa_fisica, 
	nr_atendimento, 
	cd_medico, 
	dt_prescricao, 
	dt_atualizacao, 
	nm_usuario, 
	nr_horas_validade, 
	dt_primeiro_horario, 
	dt_liberacao, 
	cd_setor_atendimento, 
	ie_recem_nato, 
	ie_origem_inf, 
	nm_usuario_original, 
	dt_liberacao_medico, 
	cd_estabelecimento, 
	cd_prescritor) 
Values ( 
	nr_prescricao_w, 
	cd_pessoa_fisica_w, 
	nr_atentimento_w, 
	cd_medico_resp_w, 
	clock_timestamp(), 
	clock_timestamp(), 
	nm_usuario_p, 
	24, 
	clock_timestamp(), 
	clock_timestamp(), 
	cd_setor_atendimento_w, 
	'N', 
	ie_origem_inf_w, 
	nm_usuario_p, 
	clock_timestamp(), 
	cd_estabelecimento_w, 
	cd_pessoa_fisica_p);
 
 
OPEN C01;
LOOP 
FETCH C01 into 
	cd_procedimento_w, 
	ie_origem_proced_w, 
	qt_procedimento_w, 
	cd_atividade_prof_bpa_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	 
	select	coalesce(max(nr_sequencia),0) + 1 
	into STRICT	nr_sequencia_w 
	from	prescr_procedimento 
	where	nr_prescricao	= nr_prescricao_w;
 
	if (Ama_Consiste_Proced_Espec(nr_sequencia_p,cd_procedimento_W, ie_origem_proced_w) = 'N') then 
		insert into prescr_procedimento( 
			nr_prescricao, 
			nr_sequencia, 
			cd_procedimento, 
			qt_procedimento, 
			dt_atualizacao, 
			nm_usuario, 
			cd_motivo_baixa, 
			ie_origem_proced, 
			ie_urgencia, 
			cd_setor_atendimento, 
			cd_medico_exec, 
			dt_prev_execucao, 
			ie_suspenso, 
			ie_amostra, 
			ie_status_atend, 
			ie_emite_mapa, 
			ie_se_necessario, 
			ie_acm, 
			ie_status_execucao, 
			ie_origem_inf, 
			ie_avisar_result, 
			cd_atividade_prof_bpa) 
		Values ( 
			nr_prescricao_w, 
			nr_sequencia_w, 
			cd_procedimento_w, 
			qt_procedimento_w, 
			clock_timestamp(), 
			nm_usuario_p, 
			0, 
			ie_origem_proced_w, 
			'N', 
			cd_setor_atendimento_w, 
			cd_medico_exec_w, 
			clock_timestamp(), 
			'N',	 
			'N', 
			5, 
			'S', 
			'N', 
			'N', 
			'10', 
			1, 
			'N', 
			cd_atividade_prof_bpa_w);
	end if;
END LOOP;
CLOSE C01;
 
update	proced_medico_ambulatorial 
set	nr_prescricao		= nr_prescricao_w, 
	dt_exec_procedimento	= clock_timestamp() 
where	nr_seq_ama	= nr_sequencia_p 
and	coalesce(nr_prescricao::text, '') = '';
 
nr_prescricao_p	:= nr_prescricao_w;
 
commit;
 
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_prescricao_ama ( nr_sequencia_p bigint, cd_pessoa_fisica_p text, nm_usuario_p text, nr_prescricao_p INOUT bigint) FROM PUBLIC;

