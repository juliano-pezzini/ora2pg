-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE biob_gerar_mapa_localizacao ( nr_seq_freezer_p bigint, nm_usuario_p text) AS $body$
DECLARE


qt_utilizados_w	bigint;
qt_mapa_w	bigint;

nr_seq_freezer_w	bigint;
nm_curto_freezer_w	varchar(100);

nr_seq_gaveta_w	bigint;
nm_curto_gaveta_w	varchar(100);

nr_seq_rack_w	bigint;
nm_curto_rack_w	varchar(100);

nr_seq_caixa_w	bigint;
nm_curto_caixa_w	varchar(100);
qt_linha_w	bigint;
qt_coluna_w	bigint;

C01 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.nm_curto
	from	biob_freezer a
	where	a.ie_situacao = 'A'
	and	a.nr_sequencia = nr_seq_freezer_p;

C02 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.nm_curto
	from	biob_gaveta a
	where	a.ie_situacao = 'A'
	and	a.NR_SEQ_FREEZER = nr_seq_freezer_w
	order by	a.ds_gaveta;

C03 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.nm_curto
	from	biob_rack a
	where	a.ie_situacao = 'A'
	and	a.nr_seq_gaveta = nr_seq_gaveta_w
	order by	a.ds_rack;

C04 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.nm_curto,
		a.qt_linha,
		a.qt_coluna
	from	biob_caixa a
	where	a.ie_situacao = 'A'
	and	a.nr_seq_rack = nr_seq_rack_w
	order by	a.ds_caixa;
BEGIN

select	count(*)
into STRICT	qt_utilizados_w
from	biob_mapa_localizacao a
where	a.nr_seq_freezer = nr_seq_freezer_p
and	a.ie_status_localizacao <> 'L';

if (qt_utilizados_w > 0) then
	
	open C01;
	loop
	fetch C01 into	
		nr_seq_freezer_w,
		nm_curto_freezer_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		
		open C02;
		loop
		fetch C02 into	
			nr_seq_gaveta_w,
			nm_curto_gaveta_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin
			
			open C03;
			loop
			fetch C03 into	
				nr_seq_rack_w,
				nm_curto_rack_w;
			EXIT WHEN NOT FOUND; /* apply on C03 */
				begin
				
				open C04;
				loop
				fetch C04 into	
					nr_seq_caixa_w,
					nm_curto_caixa_w,
					qt_linha_w,
					qt_coluna_w;
				EXIT WHEN NOT FOUND; /* apply on C04 */
					begin
					
					for i in 1..qt_linha_w loop
						begin
						
						for j in 1..qt_coluna_w loop
							begin
							
							Select  count(*)
							into STRICT	qt_mapa_w
							from	biob_mapa_localizacao
							where	nr_linha = i
							and		nr_coluna = j
							and		nr_seq_caixa = nr_seq_caixa_w
							and		nr_seq_rack = nr_seq_rack_w
							and		nr_seq_gaveta = nr_seq_gaveta_w
							and		nr_seq_freezer = nr_seq_freezer_w;
							
							
							
							if (qt_mapa_w = 0) then
							
								insert into biob_mapa_localizacao(
									nr_sequencia,
									dt_atualizacao,
									nm_usuario,
									dt_atualizacao_nrec,
									nm_usuario_nrec,
									nr_linha,
									nr_coluna,
									nr_seq_caixa,
									nr_seq_rack,
									nr_seq_gaveta,
									nr_seq_freezer,
									ie_status_localizacao,
									ds_localizacao)
								values (
									nextval('biob_mapa_localizacao_seq'),
									clock_timestamp(),
									nm_usuario_p,
									clock_timestamp(),
									nm_usuario_p,
									i,
									j,
									nr_seq_caixa_w,
									nr_seq_rack_w,
									nr_seq_gaveta_w,
									nr_seq_freezer_w,
									'L',
									(nm_curto_freezer_w || nm_curto_gaveta_w || nm_curto_rack_w || nm_curto_caixa_w || 'L' || i || 'C' || j));
								
							
							end if;
							end;
							
						end loop;
						end;
					end loop;
					end;
				end loop;
				close C04;
				end;
			end loop;
			close C03;
			end;
		end loop;
		close C02;
		end;
	end loop;
	close C01;

	commit;
	
		
else
	delete	FROM biob_mapa_localizacao
	where	nr_seq_freezer = nr_seq_freezer_p;
	
	commit;
	
	open C01;
	loop
	fetch C01 into	
		nr_seq_freezer_w,
		nm_curto_freezer_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		
		open C02;
		loop
		fetch C02 into	
			nr_seq_gaveta_w,
			nm_curto_gaveta_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin
			
			open C03;
			loop
			fetch C03 into	
				nr_seq_rack_w,
				nm_curto_rack_w;
			EXIT WHEN NOT FOUND; /* apply on C03 */
				begin
				
				open C04;
				loop
				fetch C04 into	
					nr_seq_caixa_w,
					nm_curto_caixa_w,
					qt_linha_w,
					qt_coluna_w;
				EXIT WHEN NOT FOUND; /* apply on C04 */
					begin
					
					for i in 1..qt_linha_w loop
						begin
						
						for j in 1..qt_coluna_w loop
							begin
							
							insert into biob_mapa_localizacao(
								nr_sequencia,
								dt_atualizacao,
								nm_usuario,
								dt_atualizacao_nrec,
								nm_usuario_nrec,
								nr_linha,
								nr_coluna,
								nr_seq_caixa,
								nr_seq_rack,
								nr_seq_gaveta,
								nr_seq_freezer,
								ie_status_localizacao,
								ds_localizacao)
							values (
								nextval('biob_mapa_localizacao_seq'),
								clock_timestamp(),
								nm_usuario_p,
								clock_timestamp(),
								nm_usuario_p,
								i,
								j,
								nr_seq_caixa_w,
								nr_seq_rack_w,
								nr_seq_gaveta_w,
								nr_seq_freezer_w,
								'L',
								(nm_curto_freezer_w || nm_curto_gaveta_w || nm_curto_rack_w || nm_curto_caixa_w || 'L' || i || 'C' || j));
							end;
						end loop;
						end;
					end loop;
					end;
				end loop;
				close C04;
				end;
			end loop;
			close C03;
			end;
		end loop;
		close C02;
		end;
	end loop;
	close C01;
	
	commit;
	
end if;


end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE biob_gerar_mapa_localizacao ( nr_seq_freezer_p bigint, nm_usuario_p text) FROM PUBLIC;

