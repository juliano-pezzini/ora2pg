-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE duplicar_intervalo_prescricao ( cd_intervalo_p text, cd_intervalo_novo_p text, ds_intervalo_novo_p text, nm_usuario_p text) AS $body$
DECLARE

/*
Duplica o cadastro Na função Cadastros PEP / Cadastros gerais / Intervalo da prescrição / Intervalos.
*/
nm_usuario_w		varchar(15);
nr_sequencia_w		bigint;
nr_sequencia_novo_w	bigint;

-- Materiais do Intervalo
C01 CURSOR FOR
	SELECT	nr_sequencia
	from	INTERVALO_MATERIAL
	where	cd_intervalo	=	cd_intervalo_p
	order	by	nr_sequencia;

-- Intervalo Setor
C02 CURSOR FOR
	SELECT	nr_sequencia
	from	INTERVALO_SETOR
	where	cd_intervalo	=	cd_intervalo_p
	order	by	nr_sequencia;

-- Regra de exibição do intervalo
C03 CURSOR FOR
	SELECT	nr_sequencia
	from	SETOR_INTERVALO
	where	cd_intervalo	=	cd_intervalo_p
	order	by	nr_sequencia;

-- Intervalo em minutos
C04 CURSOR FOR
	SELECT	nr_sequencia
	from	INTERVALO_MINUTO
	where	cd_intervalo	=	cd_intervalo_p
	order	by	nr_sequencia;

-- Intervalo exclusivo
C05 CURSOR FOR
	SELECT	nr_sequencia
	from	REGRA_INTERVALO_EXCLUSIVO
	where	cd_intervalo	=	cd_intervalo_p
	order	by	nr_sequencia;

-- Intervalo procedimento
C06 CURSOR FOR
	SELECT	nr_sequencia
	from	INTERVALO_PROCEDIMENTO
	where	cd_intervalo	=	cd_intervalo_p
	order	by	nr_sequencia;

-- Aprazamento
C07 CURSOR FOR
	SELECT	nr_sequencia
	from	INTERVALO_APRAZAMENTO
	where	cd_intervalo	=	cd_intervalo_p
	order	by	nr_sequencia;

-- Material liberado
C08 CURSOR FOR
	SELECT	nr_sequencia
	from	LIB_MATERIAL_INTERVALO
	where	cd_intervalo	=	cd_intervalo_p
	order	by	nr_sequencia;

-- Regra
C09 CURSOR FOR
	SELECT	nr_sequencia
	from	INTERVALO_PRESCR_REGRA
	where	cd_intervalo	=	cd_intervalo_p
	order	by	nr_sequencia;

-- Estabelecimento
C10 CURSOR FOR
	SELECT	nr_sequencia
	from	INTERVALO_ESTABELECIMENTO
	where	cd_intervalo	=	cd_intervalo_p
	order	by	nr_sequencia;


BEGIN

nm_usuario_w	:= nm_usuario_p;
if (coalesce(nm_usuario_w::text, '') = '') then
	nm_usuario_w	:= wheb_usuario_pck.get_nm_usuario;
end if;

-- Intervalos
insert	into	intervalo_prescricao(
	CD_ESTABELECIMENTO,
	CD_INTERVALO,
	DS_COR,
	DS_HORARIOS,
	DS_INTERVALO,
	DS_PRESCRICAO,
	DS_PRIM_HORARIO,
	DT_ATUALIZACAO,
	DT_ATUALIZACAO_NREC,
	HR_REFERENCIA_DIETA,
	IE_ACM,
	IE_AGORA,
	IE_CALCULA_VOLUME,
	IE_CONSISTIR_HORARIOS,
	IE_CONTINUO,
	IE_COPIAR,
	IE_DOMINGO,
	IE_DOSE_DIFERENCIADA,
	IE_DOSE_ESPECIAL,
	IE_EDITAR_PRIM_HOR,
	IE_GASOTERAPIA,
	IE_LIMPA_PRIM_HOR,
	IE_LIMPAR_HORARIOS,
	IE_OPERACAO,
	IE_PADRAO_ACM_SAE,
	IE_PADRAO_AGORA,
	IE_PADRAO_NUT,
	IE_PERMITE_ALTERAR_INTERV,
	IE_PRESCRICAO_DIETA,
	IE_PRIM_HOR_VALIDADE,
	IE_QUARTA,
	IE_QUESTIONAR_DIA,
	IE_QUINTA,
	IE_REORDENAR_FIXO,
	IE_SABADO,
	IE_SE_FARMACIA_AMB,
	IE_SEGUNDA,
	IE_SEM_APRAZAMENTO,
	IE_SE_NECESSARIO,
	IE_SEXTA,
	IE_SITUACAO,
	IE_SO_RETROGRADA,
	IE_TERCA,
	IE_UTILIZA_QUANTIDADE,
	IE_24_H,
	NM_USUARIO,
	NM_USUARIO_NREC,
	NR_ETAPAS,
	NR_SEQ_APRESENT,
	QT_FREQUENCIA_RECEITA,
	QT_MIN_AGORA,
	QT_MIN_INTERVALO,
	QT_OPERACAO,
	QT_OPERACAO_FA,
	QT_SE_NECESSARIO)
SELECT
	CD_ESTABELECIMENTO,
	cd_intervalo_novo_p,
	DS_COR,
	DS_HORARIOS,
	CASE WHEN  ds_intervalo_novo_p='' THEN  trim(both Substr( DS_INTERVALO, 1, 32)) || ' ('|| obter_desc_expressao(303214)||')'   ELSE ds_intervalo_novo_p END ,
                                                                                                ---303214 = cópia
	DS_PRESCRICAO,
	DS_PRIM_HORARIO,
	clock_timestamp(),
	clock_timestamp(),
	HR_REFERENCIA_DIETA,
	IE_ACM,
	IE_AGORA,
	IE_CALCULA_VOLUME,
	IE_CONSISTIR_HORARIOS,
	IE_CONTINUO,
	IE_COPIAR,
	IE_DOMINGO,
	IE_DOSE_DIFERENCIADA,
	IE_DOSE_ESPECIAL,
	IE_EDITAR_PRIM_HOR,
	IE_GASOTERAPIA,
	IE_LIMPA_PRIM_HOR,
	IE_LIMPAR_HORARIOS,
	IE_OPERACAO,
	IE_PADRAO_ACM_SAE,
	IE_PADRAO_AGORA,
	IE_PADRAO_NUT,
	IE_PERMITE_ALTERAR_INTERV,
	IE_PRESCRICAO_DIETA,
	IE_PRIM_HOR_VALIDADE,
	IE_QUARTA,
	IE_QUESTIONAR_DIA,
	IE_QUINTA,
	IE_REORDENAR_FIXO,
	IE_SABADO,
	IE_SE_FARMACIA_AMB,
	IE_SEGUNDA,
	IE_SEM_APRAZAMENTO,
	IE_SE_NECESSARIO,
	IE_SEXTA,
	IE_SITUACAO,
	IE_SO_RETROGRADA,
	IE_TERCA,
	IE_UTILIZA_QUANTIDADE,
	IE_24_H,
	nm_usuario_w,
	nm_usuario_w,
	NR_ETAPAS,
	NR_SEQ_APRESENT,
	QT_FREQUENCIA_RECEITA,
	QT_MIN_AGORA,
	QT_MIN_INTERVALO,
	QT_OPERACAO,
	QT_OPERACAO_FA,
	QT_SE_NECESSARIO
from   INTERVALO_PRESCRICAO
where  cd_intervalo		   = cd_intervalo_p;

-- Materiais do Intervalo
open C01;
loop
fetch C01 into
	nr_sequencia_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	insert into INTERVALO_MATERIAL(
		CD_INTERVALO,
		CD_MATERIAL,
		DS_HORARIOS,
		DS_PRIM_HORARIO,
		DT_ATUALIZACAO,
		NM_USUARIO,
		NR_SEQUENCIA)
	SELECT
		cd_intervalo_novo_p,
		CD_MATERIAL,
		DS_HORARIOS,
		DS_PRIM_HORARIO,
		clock_timestamp(),
		nm_usuario_w,
		nextval('intervalo_material_seq')
	from  INTERVALO_MATERIAL
	where nr_sequencia	=	nr_sequencia_w;

	end;
end loop;
close C01;

-- Intervalo Setor
open C02;
loop
fetch C02 into
	nr_sequencia_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin

	insert into INTERVALO_SETOR(
		CD_ESTAB,
		CD_INTERVALO,
		CD_MATERIAL,
		CD_SETOR_ATENDIMENTO,
		CD_UNIDADE_BASICA,
		DS_PRIM_HORARIO,
		DT_ATUALIZACAO,
		DT_ATUALIZACAO_NREC,
		IE_MESMO_ZERADO,
		IE_VIA_APLICACAO,
		NM_USUARIO,
		NM_USUARIO_NREC,
		NR_SEQUENCIA,
		QT_SE_NECESSARIO)
	SELECT	CD_ESTAB,
		cd_intervalo_novo_p,
		CD_MATERIAL,
		CD_SETOR_ATENDIMENTO,
		CD_UNIDADE_BASICA,
		DS_PRIM_HORARIO,
		clock_timestamp(),
		clock_timestamp(),
		IE_MESMO_ZERADO,
		IE_VIA_APLICACAO,
		nm_usuario_w,
		nm_usuario_w,
		nextval('intervalo_setor_seq'),
		QT_SE_NECESSARIO
	from  INTERVALO_SETOR
	where nr_sequencia	=	nr_sequencia_w;

	end;
end loop;
close C02;

-- Regra de exibição do intervalo
open C03;
loop
fetch C03 into
	nr_sequencia_w;
EXIT WHEN NOT FOUND; /* apply on C03 */
	begin

	insert into SETOR_INTERVALO(
		CD_INTERVALO,
		CD_PERFIL,
		CD_PESSOA_FISICA,
		CD_SETOR_ATENDIMENTO,
		DT_ATUALIZACAO,
		DT_ATUALIZACAO_NREC,
		IE_EXIBIR,
		IE_SETOR,
		NM_USUARIO,
		NM_USUARIO_NREC,
		NR_SEQUENCIA)
	SELECT	cd_intervalo_novo_p,
		CD_PERFIL,
		CD_PESSOA_FISICA,
		CD_SETOR_ATENDIMENTO,
		clock_timestamp(),
		clock_timestamp(),
		IE_EXIBIR,
		IE_SETOR,
		nm_usuario_w,
		nm_usuario_w,
		nextval('setor_intervalo_seq')
	from  SETOR_INTERVALO
	where nr_sequencia	=	nr_sequencia_w;

	end;
end loop;
close C03;

-- Intervalo em minutos
open C04;
loop
fetch C04 into
	nr_sequencia_w;
EXIT WHEN NOT FOUND; /* apply on C04 */
	begin

	insert into INTERVALO_MINUTO(
		CD_INTERVALO,
		DT_ATUALIZACAO,
		DT_ATUALIZACAO_NREC,
		NM_USUARIO,
		NM_USUARIO_NREC,
		NR_SEQ_APRES,
		NR_SEQUENCIA,
		QT_MIN_INTERVALO)
	SELECT
		cd_intervalo_novo_p,
		clock_timestamp(),
		clock_timestamp(),
		nm_usuario_w,
		nm_usuario_w,
		NR_SEQ_APRES,
		nextval('intervalo_minuto_seq'),
		QT_MIN_INTERVALO
	from  INTERVALO_MINUTO
	where nr_sequencia	=	nr_sequencia_w;

	end;
end loop;
close C04;

-- Intervalo exclusivo
open C05;
loop
fetch C05 into
	nr_sequencia_w;
EXIT WHEN NOT FOUND; /* apply on C05 */
	begin

	insert into REGRA_INTERVALO_EXCLUSIVO(
		CD_INTERVALO,
		DT_ATUALIZACAO,
		DT_ATUALIZACAO_NREC,
		IE_PRESCRICAO_DIETA,
		NM_USUARIO,
		NM_USUARIO_NREC,
		NR_SEQUENCIA)
	SELECT
		cd_intervalo_novo_p,
		clock_timestamp(),
		clock_timestamp(),
		IE_PRESCRICAO_DIETA,
		nm_usuario_w,
		nm_usuario_w,
		nextval('regra_intervalo_exclusivo_seq')
	from  REGRA_INTERVALO_EXCLUSIVO
	where nr_sequencia	=	nr_sequencia_w;

	end;
end loop;
close C05;

-- Descricao pasta/tabela
open C06;
loop
fetch C06 into
	nr_sequencia_w;
EXIT WHEN NOT FOUND; /* apply on C06 */
	begin

	insert into INTERVALO_PROCEDIMENTO(
		CD_AREA_PROCEDIMENTO,
		CD_ESPECIALIDADE,
		CD_GRUPO_PROC,
		CD_INTERVALO,
		CD_PROCEDIMENTO,
		DT_ATUALIZACAO,
		DT_ATUALIZACAO_NREC,
		IE_EXIBE_INTERVALO,
		IE_ORIGEM_PROCED,
		IE_UTILIZA_QUANTIDADE,
		NM_USUARIO,
		NM_USUARIO_NREC,
		NR_SEQ_PROC_INTERNO,
		NR_SEQUENCIA)
	SELECT
		CD_AREA_PROCEDIMENTO,
		CD_ESPECIALIDADE,
		CD_GRUPO_PROC,
		cd_intervalo_novo_p,
		CD_PROCEDIMENTO,
		clock_timestamp(),
		clock_timestamp(),
		IE_EXIBE_INTERVALO,
		IE_ORIGEM_PROCED,
		IE_UTILIZA_QUANTIDADE,
		nm_usuario_w,
		nm_usuario_w,
		NR_SEQ_PROC_INTERNO,
		nextval('intervalo_procedimento_seq')
	from  INTERVALO_PROCEDIMENTO
	where nr_sequencia	=	nr_sequencia_w;

	end;
end loop;
close C06;

-- Aprazamento
open C07;
loop
fetch C07 into
	nr_sequencia_w;
EXIT WHEN NOT FOUND; /* apply on C07 */
	begin

	insert into INTERVALO_APRAZAMENTO(
		CD_INTERVALO,
		CD_MATERIAL,
		CD_SETOR_ATENDIMENTO,
		DT_ATUALIZACAO,
		DT_ATUALIZACAO_NREC,
		IE_LIMPA_PRIM_HOR,
		IE_SEM_APRAZAMENTO,
		NM_USUARIO,
		NM_USUARIO_NREC,
		NR_SEQUENCIA)
	SELECT
		cd_intervalo_novo_p,
		CD_MATERIAL,
		CD_SETOR_ATENDIMENTO,
		clock_timestamp(),
		clock_timestamp(),
		IE_LIMPA_PRIM_HOR,
		IE_SEM_APRAZAMENTO,
		nm_usuario_w,
		nm_usuario_w,
		nextval('intervalo_aprazamento_seq')
	from  INTERVALO_APRAZAMENTO
	where nr_sequencia	=	nr_sequencia_w;

	end;
end loop;
close C07;

-- Descricao pasta/tabela
open C08;
loop
fetch C08 into
	nr_sequencia_w;
EXIT WHEN NOT FOUND; /* apply on C08 */
	begin

	insert into LIB_MATERIAL_INTERVALO(
		CD_INTERVALO,
		CD_MATERIAL,
		DT_ATUALIZACAO,
		DT_ATUALIZACAO_NREC,
		IE_TIPO,
		NM_USUARIO,
		NM_USUARIO_NREC,
		NR_SEQUENCIA)
	SELECT
		cd_intervalo_novo_p,
		CD_MATERIAL,
		clock_timestamp(),
		clock_timestamp(),
		IE_TIPO,
		nm_usuario_w,
		nm_usuario_w,
		nextval('lib_material_intervalo_seq')
	from  LIB_MATERIAL_INTERVALO
	where nr_sequencia	=	nr_sequencia_w;

	end;
end loop;
close C08;

-- Descricao pasta/tabela
open C09;
loop
fetch C09 into
	nr_sequencia_w;
EXIT WHEN NOT FOUND; /* apply on C09 */
	begin

	insert into INTERVALO_PRESCR_REGRA(
		CD_INTERVALO,
		DT_ATUALIZACAO,
		DT_ATUALIZACAO_NREC,
		IE_EXIBIR,
		IE_REGRA,
		NM_USUARIO,
		NM_USUARIO_NREC,
		NR_SEQUENCIA)
	SELECT
		cd_intervalo_novo_p,
		clock_timestamp(),
		clock_timestamp(),
		IE_EXIBIR,
		IE_REGRA,
		nm_usuario_w,
		nm_usuario_w,
		nextval('intervalo_prescr_regra_seq')
	from  INTERVALO_PRESCR_REGRA
	where nr_sequencia	=	nr_sequencia_w;

	end;
end loop;
close C09;

-- Estabelecimento
open C10;
loop
fetch C10 into
	nr_sequencia_w;
EXIT WHEN NOT FOUND; /* apply on C10 */
	begin

	insert into INTERVALO_ESTABELECIMENTO(
		CD_ESTAB,
		CD_INTERVALO,
		DT_ATUALIZACAO,
		DT_ATUALIZACAO_NREC,
		IE_MOSTRAR,
		NM_USUARIO,
		NM_USUARIO_NREC,
		NR_SEQUENCIA,
		IE_MOSTRAR_SAE)
	SELECT
		CD_ESTAB,
		cd_intervalo_novo_p,
		clock_timestamp(),
		clock_timestamp(),
		IE_MOSTRAR,
		nm_usuario_w,
		nm_usuario_w,
		nextval('intervalo_estabelecimento_seq'),
		coalesce(IE_MOSTRAR_SAE, 'S')
	from  INTERVALO_ESTABELECIMENTO
	where nr_sequencia	=	nr_sequencia_w;

	end;
end loop;
close C10;

commit;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE duplicar_intervalo_prescricao ( cd_intervalo_p text, cd_intervalo_novo_p text, ds_intervalo_novo_p text, nm_usuario_p text) FROM PUBLIC;

