-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE sup_atualizar_opm_nf ( nr_sequencia_p bigint, ie_acao_p text, nm_usuario_p text) AS $body$
DECLARE



cd_estabelecimento_w	nota_fiscal.cd_estabelecimento%type;
nr_ordem_compra_w	nota_fiscal_item.nr_ordem_compra%type;
nr_solic_compra_w		nota_fiscal_item.nr_solic_compra%type;

nr_item_oci_w		nota_fiscal_item.nr_item_oci%type;
nr_item_solic_compra_w	nota_fiscal_item.nr_item_solic_compra%type;

nr_seq_op_comp_opm_w	ordem_compra_item.nr_seq_op_comp_opm%type;
nr_seq_ordem_opm_w	ordem_producao_comp_opm.nr_seq_ordem_opm%type;
ie_commit_w		varchar(15);

c01 CURSOR FOR
SELECT	nr_ordem_compra,
	nr_item_oci,
	nr_solic_compra,
	nr_item_solic_compra
from	nota_fiscal_item
where	nr_sequencia = nr_sequencia_p;


BEGIN

begin
select	cd_estabelecimento
into STRICT	cd_estabelecimento_w
from	nota_fiscal
where	nr_sequencia = nr_sequencia_p;
exception
when others then
	cd_estabelecimento_w	:=	null;
end;

open c01;
loop
fetch c01 into
	nr_ordem_compra_w,
	nr_item_oci_w,
	nr_solic_compra_w,
	nr_item_solic_compra_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin

	if (nr_ordem_compra_w IS NOT NULL AND nr_ordem_compra_w::text <> '') then
		begin
		select	nr_seq_op_comp_opm,
			coalesce(nr_solic_compra_w, nr_solic_compra),
			coalesce(nr_item_solic_compra_w, nr_item_solic_compra)
		into STRICT	nr_seq_op_comp_opm_w,
			nr_solic_compra_w,
			nr_item_solic_compra_w
		from	ordem_compra_item
		where	nr_ordem_compra = nr_ordem_compra_w
		and	nr_item_oci = nr_item_oci_w;
		exception
		when others then
			nr_seq_op_comp_opm_w	:=	null;
		end;
	end if;

	if (coalesce(nr_seq_op_comp_opm_w::text, '') = '') and (nr_solic_compra_w IS NOT NULL AND nr_solic_compra_w::text <> '') then
		begin
		select	nr_seq_op_comp_opm
		into STRICT	nr_seq_op_comp_opm_w
		from	solic_compra_item
		where	nr_solic_compra = nr_solic_compra_w
		and	nr_item_solic_compra = nr_item_solic_compra_w;
		exception
		when others then
			nr_seq_op_comp_opm_w	:=	null;
		end;
	end if;

	if (nr_seq_op_comp_opm_w IS NOT NULL AND nr_seq_op_comp_opm_w::text <> '') then
		begin
		select	nr_seq_ordem_opm
		into STRICT	nr_seq_ordem_opm_w
		from	ordem_producao_comp_opm
		where	nr_sequencia = nr_seq_op_comp_opm_w;
		exception
		when others then
			nr_seq_ordem_opm_w	:=	null;
		end;

		if (nr_seq_ordem_opm_w IS NOT NULL AND nr_seq_ordem_opm_w::text <> '') then
			begin
			ie_commit_w	:=	wheb_usuario_pck.get_ie_commit;
			CALL wheb_usuario_pck.set_ie_commit('N');

			CALL atualiza_status_opm(nr_seq_ordem_opm_w,cd_estabelecimento_w,nm_usuario_p);

			CALL wheb_usuario_pck.set_ie_commit(ie_commit_w);
			end;
		end if;
	end if;

	end;
end loop;
close c01;

/*n√£o pode ter commit!*/

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE sup_atualizar_opm_nf ( nr_sequencia_p bigint, ie_acao_p text, nm_usuario_p text) FROM PUBLIC;

