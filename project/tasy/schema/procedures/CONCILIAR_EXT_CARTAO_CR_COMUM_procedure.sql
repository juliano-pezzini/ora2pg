-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE conciliar_ext_cartao_cr_comum (nr_seq_extrato_p bigint, ie_opcao_p text, nm_usuario_p text) AS $body$
DECLARE


nr_seq_extrato_movto_w		bigint;
nr_seq_parcela_w		bigint;
nr_seq_bandeira_w		bigint;
vl_parcela_w			double precision;
ds_comprovante_w		varchar(100);
nr_parcela_w			bigint;
nr_seq_extrato_parcela_w	bigint;
ie_concil_w			varchar(1);
ie_pagto_indevido_w		varchar(1);
cd_estabelecimento_w		bigint;
vl_parcela_tasy_w		double precision;
ds_comprovante_tasy_w		varchar(100);
qt_comprovante_w		bigint;
ie_cv_repetido_w		varchar(1);
vl_min_indevido_w		double precision;
vl_max_indevido_w		double precision;
vl_saldo_concil_cred_w		double precision;
ie_pagamento_indev_w		varchar(1);
vl_ajuste_w			double precision;
qt_parcela_w			bigint;
vl_total_parcela_w		double precision;
nr_seq_parcela_max_w		bigint;

c01 CURSOR FOR
SELECT	nr_sequencia,
	CASE WHEN coalesce(nr_seq_extrato_parcela::text, '') = '' THEN 'N'  ELSE 'S' END
from	extrato_cartao_cr_movto
where	nr_seq_extrato	= nr_seq_extrato_p;

c02 CURSOR FOR
SELECT	coalesce(a.nr_sequencia,0),
	coalesce(a.vl_parcela,0)
from	movto_cartao_cr b,
	movto_cartao_cr_parcela a
where (select	count(*)
	from	movto_cartao_cr_parcela x
	where	x.dt_parcela	<= a.dt_parcela
	and	x.nr_seq_movto	= b.nr_sequencia) = nr_parcela_w
and	coalesce(a.nr_seq_extrato_parcela::text, '') = ''
and	a.nr_seq_movto		= b.nr_sequencia
and	coalesce(ltrim(trim(both b.ds_comprovante),'0'),'X') = ds_comprovante_w
and	coalesce(b.dt_cancelamento::text, '') = ''
and	b.nr_seq_bandeira	= nr_seq_bandeira_w;


BEGIN

select	max(a.nr_seq_bandeira),
	max(a.cd_estabelecimento)
into STRICT	nr_seq_bandeira_w,
	cd_estabelecimento_w
from	extrato_cartao_cr a
where	a.nr_sequencia	= nr_seq_extrato_p;

select	max(a.vl_min_indevido),
	max(a.vl_max_indevido)
into STRICT	vl_min_indevido_w,
	vl_max_indevido_w
from	bandeira_cartao_cr_regra a
where	a.nr_seq_bandeira	= nr_seq_bandeira_w
and	clock_timestamp()			between coalesce(a.dt_inicio_vigencia,clock_timestamp()) and coalesce(a.dt_fim_vigencia,clock_timestamp())
and	coalesce(a.cd_estabelecimento,coalesce(cd_estabelecimento_w,0))	= coalesce(cd_estabelecimento_w,0);

ie_pagto_indevido_w := obter_param_usuario(3020, 44, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_pagto_indevido_w);
ie_cv_repetido_w := obter_param_usuario(3020, 46, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_cv_repetido_w);

open	c01;
loop
fetch	c01 into
	nr_seq_extrato_movto_w,
	ie_concil_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	/* Conciliar */

	if (ie_opcao_p = 'C') and (ie_concil_w = 'N') then

		select	coalesce(ltrim(trim(both max(ds_comprovante)),'0'),'X'),
			CASE WHEN max(nr_parcela)=0 THEN 1  ELSE max(nr_parcela) END ,
			max(vl_parcela),
			max(vl_saldo_concil_cred)
		into STRICT	ds_comprovante_w,
			nr_parcela_w,
			vl_parcela_w,
			vl_saldo_concil_cred_w
		from	extrato_cartao_cr_movto
		where	nr_sequencia	= nr_seq_extrato_movto_w;

		select	count(*) qt_parcela,
			coalesce(sum(a.vl_parcela),0) vl_total_parcela,
			max(a.nr_sequencia)
		into STRICT	qt_parcela_w,
			vl_total_parcela_w,
			nr_seq_parcela_max_w
		from	movto_cartao_cr b,
			movto_cartao_cr_parcela a
		where (SELECT	count(*)
			from	movto_cartao_cr_parcela x
			where	x.dt_parcela	<= a.dt_parcela
			and	x.nr_seq_movto	= b.nr_sequencia) = nr_parcela_w
		and	coalesce(a.nr_seq_extrato_parcela::text, '') = ''
		and	a.nr_seq_movto		= b.nr_sequencia
		and	coalesce(ltrim(trim(both b.ds_comprovante),'0'),'X') = ds_comprovante_w
		and	coalesce(b.dt_cancelamento::text, '') = ''
		and	b.nr_seq_bandeira	= nr_seq_bandeira_w;

		if (qt_parcela_w	> 0) and
			((coalesce(ie_pagto_indevido_w,'N') <> 'N') or (vl_total_parcela_w between(coalesce(vl_parcela_w,0) + coalesce(vl_min_indevido_w,0)) and (coalesce(vl_parcela_w,0) + coalesce(vl_max_indevido_w,0)))) then

			if (coalesce(ie_cv_repetido_w,'S') = 'N') then

				select	max(b.ds_comprovante)
				into STRICT	ds_comprovante_tasy_w
				from	movto_cartao_cr b,
					movto_cartao_cr_parcela a
				where	a.nr_seq_movto		= b.nr_sequencia
				and	a.nr_sequencia		= nr_seq_parcela_max_w;

				if (ds_comprovante_tasy_w IS NOT NULL AND ds_comprovante_tasy_w::text <> '') then

					select	count(*)
					into STRICT	qt_comprovante_w
					from	movto_cartao_cr a
					where	obter_saldo_cartao_cr(a.nr_sequencia,null)	<> 0
					and	a.nr_seq_bandeira	= nr_seq_bandeira_w
					and	coalesce(a.dt_cancelamento::text, '') = ''
					and	a.ds_comprovante	= ds_comprovante_tasy_w;

				end if;

			end if;

			if (coalesce(qt_comprovante_w,0)	<= 1) then

				select	nextval('extrato_cartao_cr_parcela_seq')
				into STRICT	nr_seq_extrato_parcela_w
				;

				insert	into extrato_cartao_cr_parcela(nr_sequencia,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					dt_atualizacao,
					nm_usuario,
					nr_seq_extrato)
				values (nr_seq_extrato_parcela_w,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_extrato_p);

				open	c02;
				loop
				fetch	c02 into
					nr_seq_parcela_w,
					vl_parcela_tasy_w;
				EXIT WHEN NOT FOUND; /* apply on c02 */

					vl_saldo_concil_cred_w	:= coalesce(vl_saldo_concil_cred_w,0) - coalesce(vl_parcela_tasy_w,0);
					ie_pagamento_indev_w	:= null;
					vl_ajuste_w		:= 0;

					if (vl_saldo_concil_cred_w >= coalesce(vl_min_indevido_w,0)) and (vl_saldo_concil_cred_w <= coalesce(vl_max_indevido_w,0)) then

						vl_ajuste_w		:= vl_saldo_concil_cred_w;
						vl_saldo_concil_cred_w	:= 0;
						ie_pagamento_indev_w	:= 'N';

					elsif (coalesce(ie_pagto_indevido_w,'N') = 'S') then

						if (coalesce(vl_saldo_concil_cred_w,0)	= 0) then

							ie_pagamento_indev_w	:= 'N';

						else

							ie_pagamento_indev_w	:= 'S';

						end if;

					end if;

					update	extrato_cartao_cr_movto
					set	nr_seq_extrato_parcela	= nr_seq_extrato_parcela_w,
						vl_saldo_concil_cred	= vl_saldo_concil_cred_w,
						ie_pagto_indevido	= coalesce(ie_pagamento_indev_w,ie_pagto_indevido),
						vl_ajuste		= vl_ajuste_w
					where	nr_sequencia		= nr_seq_extrato_movto_w;

					update	movto_cartao_cr_parcela
					set	nr_seq_extrato_parcela	= nr_seq_extrato_parcela_w
					where	nr_sequencia		= nr_seq_parcela_w;

				end	loop;
				close	c02;

			end if;

		end if;

	/* Desconciliar tudo */

	elsif (ie_opcao_p = 'D') then

		update	extrato_cartao_cr_movto
		set	ie_pagto_indevido	= 'N'
		where	nr_seq_extrato_parcela	= nr_seq_extrato_movto_w;

		if (ie_concil_w = 'S') then

			select	max(nr_seq_extrato_parcela)
			into STRICT	nr_seq_extrato_parcela_w
			from	extrato_cartao_cr_movto
			where	nr_sequencia	= nr_seq_extrato_movto_w;

			if (nr_seq_extrato_parcela_w IS NOT NULL AND nr_seq_extrato_parcela_w::text <> '') then

				update	movto_cartao_cr_parcela
				set	nr_seq_extrato_parcela	 = NULL
				where	nr_seq_extrato_parcela	= nr_seq_extrato_parcela_w;

				update	extrato_cartao_cr_movto
				set	nr_seq_extrato_parcela	 = NULL,
					vl_saldo_concil_cred	= vl_parcela,
					ie_pagto_indevido	= CASE WHEN coalesce(ie_pagto_indevido_w,'N')='S' THEN 'N'  ELSE ie_pagto_indevido END ,
					vl_ajuste		= 0
				where	nr_seq_extrato_parcela	= nr_seq_extrato_parcela_w;

				delete	from extrato_cartao_cr_parcela
				where	nr_sequencia	= nr_seq_extrato_parcela_w;

			end if;
		end if;
	end if;

end loop;
close c01;

/* Forçar desconciliação */

if (ie_opcao_p = 'D') then
	delete	from	extrato_cartao_cr_parcela
	where	nr_seq_extrato	= nr_seq_extrato_p;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE conciliar_ext_cartao_cr_comum (nr_seq_extrato_p bigint, ie_opcao_p text, nm_usuario_p text) FROM PUBLIC;

