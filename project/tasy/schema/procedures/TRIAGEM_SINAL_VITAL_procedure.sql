-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE triagem_sinal_vital ( nr_seq_triagem_p bigint) AS $body$
DECLARE


qt_escala_dor_w				triagem_classificatoria_sv.qt_escala_dor%type;
cd_escala_dor_w				triagem_classificatoria_sv.cd_escala_dor%type;
qt_temp_w					triagem_classificatoria_sv.qt_temp%type;
qt_freq_cardiaca_w			triagem_classificatoria_sv.qt_freq_cardiaca%type;
qt_freq_resp_w				triagem_classificatoria_sv.qt_freq_resp%type;
qt_glicemia_capilar_w		triagem_classificatoria_sv.qt_glicemia_capilar%type;
qt_pa_sistolica_w			triagem_classificatoria_sv.qt_pa_sistolica%type;
qt_pa_diastolica_w			triagem_classificatoria_sv.qt_pa_diastolica%type;
qt_saturacao_o2_w			triagem_classificatoria_sv.qt_saturacao_o2%type;
nr_atendimento_w			triagem_pronto_atend.nr_atendimento%type;
cd_pessoa_fisica_w			triagem_pronto_atend.cd_pessoa_fisica%type;
nr_seq_atend_sinal_vital_w	atendimento_sinal_vital.nr_sequencia%type;

c01 CURSOR FOR
SELECT	qt_escala_dor,
		cd_escala_dor,
		qt_temp,
		qt_freq_cardiaca,
		qt_freq_resp,
		qt_glicemia_capilar,
		qt_pa_sistolica,
		qt_pa_diastolica,
		qt_saturacao_o2
from	triagem_classificatoria_sv
where	nr_seq_triagem = nr_seq_triagem_p;
										

BEGIN
	
	if (nr_seq_triagem_p IS NOT NULL AND nr_seq_triagem_p::text <> '') then
	
		select	nr_atendimento,
				cd_pessoa_fisica
		into STRICT	nr_atendimento_w,
				cd_pessoa_fisica_w
		from	triagem_pronto_atend
		where	nr_sequencia = nr_seq_triagem_p;
		
	    open c01;
	    loop
	    fetch c01 into  qt_escala_dor_w,
				        cd_escala_dor_w,
				        qt_temp_w,
				        qt_freq_cardiaca_w,
				        qt_freq_resp_w,
				        qt_glicemia_capilar_w,
				        qt_pa_sistolica_w,
				        qt_pa_diastolica_w,
				        qt_saturacao_o2_w;
	    EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
			
			select nextval('atendimento_sinal_vital_seq') into STRICT nr_seq_atend_sinal_vital_w;
	
  			insert into atendimento_sinal_vital(
  						nr_sequencia,
						nr_atendimento,
						cd_pessoa_fisica,
						dt_sinal_vital,
						dt_atualizacao,
						nm_usuario,
						qt_escala_dor,
						cd_escala_dor,
						qt_temp,
						qt_freq_cardiaca,
						qt_freq_resp,
						qt_glicemia_capilar,
						qt_pa_sistolica,
						qt_pa_diastolica,
						qt_saturacao_o2,
						nr_seq_triagem,
						dt_liberacao,
						ie_situacao)
			values (		nr_seq_atend_sinal_vital_w,
						nr_atendimento_w,
						(SELECT cd_pessoa_fisica from usuario where nm_usuario = obter_usuario_ativo),
						clock_timestamp(),
						clock_timestamp(),
						obter_usuario_ativo,
						qt_escala_dor_w,
						cd_escala_dor_w,
						qt_temp_w,
						qt_freq_cardiaca_w,
						qt_freq_resp_w,
						qt_glicemia_capilar_w,
						qt_pa_sistolica_w,
						qt_pa_diastolica_w,
						qt_saturacao_o2_w,
						nr_seq_triagem_p,
						clock_timestamp(),
						'A');
			commit;
		
			CALL gerar_lanc_automatico_tabela(nr_atendimento_w,412,upper('ATENDIMENTO_SINAL_VITAL'),nr_seq_atend_sinal_vital_w,obter_usuario_ativo);
      	end;
	    end loop;
	    close c01;
	
	end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE triagem_sinal_vital ( nr_seq_triagem_p bigint) FROM PUBLIC;

