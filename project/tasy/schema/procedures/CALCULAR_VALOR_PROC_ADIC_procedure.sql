-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE calcular_valor_proc_adic ( nr_seq_ageint_p bigint, cd_convenio_p bigint, cd_categoria_p text, cd_estabelecimento_p bigint, dt_inicio_agendamento_p timestamp, cd_plano_p text, nm_usuario_p text, cd_usuario_convenio_p text, cd_pessoa_fisica_p text, ie_tipo_Atendimento_p bigint, nr_seq_cobertura_p bigint) AS $body$
DECLARE


nr_seq_proc_interno_w	bigint;
qt_pontos_w			preco_amb.qt_pontuacao%type;
cd_procedimento_w	bigint;
ie_origem_proced_w	bigint;
VL_PROCEDIMENTO_w	double precision;
vl_item_w			double precision;
vl_aux_w			double precision;
nr_seq_item_ageint_w	bigint;
ds_aux_w		varchar(255);
ie_regra_w		integer;
cd_convenio_w		integer;
cd_convenio_ww		integer;
cd_categoria_w		varchar(10);
cd_plano_w		varchar(10);
ie_tipo_convenio_w		smallint;
dt_nascimento_w		timestamp;	
ie_Sexo_w		varchar(2);
qt_idade_w		smallint;
ie_glosa_w		varchar(1);
cd_conv_item_w		integer;
cd_categ_item_w		varchar(10);
cd_plano_item_w		varchar(10);
nr_seq_regra_w		bigint;
ie_autorizacao_w		varchar(3);
ie_Resp_autor_w		varchar(10);
ie_edicao_w                  varchar(1);
cd_edicao_ajuste_w      bigint;
qt_item_edicao_w         bigint;	
cd_estabelecimento_w	smallint;
nr_seq_item_adic_w	bigint;
ie_consiste_regra_w	varchar(1);
ie_bloq_glosa_part_w	varchar(1);
cd_edicao_amb_w		double precision;
dt_inicio_agendamento_w	timestamp;
ie_tipo_Atendimento_w	smallint;
vl_custo_operacional_w	double precision;
vl_anestesista_w	double precision;
vl_medico_w		double precision;
vl_auxiliares_w		double precision;
vl_materiais_w		double precision;
nr_seq_ajuste_proc_w	bigint;
cd_medico_w				agenda_integrada_item.cd_medico%type;		
cd_especialidade_w		agenda_integrada_item.cd_especialidade%type;
ie_param_444_w               varchar(1) := '';
ie_excluir_valor             varchar(1) := 'N';

C01 CURSOR FOR
	SELECT	b.nr_seq_item,
		b.nr_seq_proc_interno,
		b.nr_sequencia,
		a.cd_medico,
		a.cd_especialidade
	from	agenda_integrada_item a,
		ageint_exame_adic_item b
	where	a.nr_sequencia 		= b.nr_seq_item
	and	a.nr_seq_agenda_int	= nr_seq_ageint_p;
			

BEGIN

ie_consiste_regra_w	:= coalesce(Obter_Valor_Param_Usuario(869, 177, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p), 'N');

ie_bloq_glosa_part_w := obter_param_usuario(869, 187, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_bloq_glosa_part_w);
ie_param_444_w := obter_param_usuario(869, 444, obter_perfil_ativo, nm_usuario_p, 0, ie_param_444_w);

if (ie_consiste_regra_w = 'S') then
	select	max(ie_Sexo),
		max(dt_nascimento)
	into STRICT	ie_Sexo_w,
		dt_nascimento_w
	from	pessoa_fisica
	where	cd_pessoa_fisica	= cd_pessoa_fisica_p;

	qt_idade_w	:= obter_idade(dt_nascimento_w, clock_timestamp(), 'A');

	cd_convenio_ww	:= cd_convenio_p;
	cd_categoria_w	:= cd_categoria_p;
	cd_plano_w	:= cd_plano_p;

	open C01;
	loop
	fetch C01 into
		nr_seq_item_ageint_w,
		nr_seq_proc_interno_w,
		nr_seq_item_adic_w,
		cd_medico_w,		
		cd_especialidade_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		
		cd_estabelecimento_w	:= cd_estabelecimento_p;

		select	max(cd_convenio),
			max(cd_categoria),
			max(cd_plano)
		into STRICT	cd_conv_item_w,
			cd_categ_item_w,
			cd_plano_item_w
		from	agenda_integrada_conv_item
		where	nr_seq_agenda_item	= nr_seq_item_ageint_w;
		
		if (cd_conv_item_w IS NOT NULL AND cd_conv_item_w::text <> '') then
			cd_convenio_ww	:= cd_conv_item_w;
			cd_categoria_w	:= cd_categ_item_w;
			cd_plano_w	:= cd_plano_item_w;
		end if;
		
		select	max(ie_tipo_convenio)
		into STRICT	ie_tipo_convenio_w
		from	convenio
		where	cd_convenio	= cd_convenio_ww;
		
		SELECT * FROM obter_proc_tab_interno_conv(
						nr_seq_proc_interno_w, cd_estabelecimento_w, cd_convenio_ww, cd_categoria_w, cd_plano_w, null, cd_procedimento_w, ie_origem_proced_w, null, clock_timestamp(), null, null, null, null, null, null, null, null) INTO STRICT cd_procedimento_w, ie_origem_proced_w;
		
		SELECT * FROM Consiste_Plano_mat_proc(cd_estabelecimento_w, cd_convenio_ww, cd_categoria_w, cd_plano_w, null, cd_procedimento_w, ie_origem_proced_w, null, coalesce(ie_tipo_Atendimento_p,0), 0, 0, null, nr_Seq_proc_interno_w, ds_aux_w, ds_aux_w, ie_regra_w, nr_seq_regra_w) INTO STRICT ds_aux_w, ds_aux_w, ie_regra_w, nr_seq_regra_w;
						
		SELECT * FROM obter_regra_Ajuste_proc(
					cd_estabelecimento_w, cd_convenio_ww, cd_categoria_w, cd_procedimento_w, ie_origem_proced_w, null, clock_timestamp(), null, coalesce(ie_tipo_Atendimento_p,0), null, null, null, qt_idade_w, null, nr_Seq_proc_interno_w, cd_usuario_convenio_p, cd_plano_w, null, null, ie_sexo_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, ds_aux_w, ie_glosa_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, null, null, ds_aux_w, vl_aux_w, ds_aux_w, vl_aux_w, null, null, null, null, null, null, null, null, vl_aux_w, nr_seq_cobertura_p, null, null, null, null, null, null, null, null, null) INTO STRICT vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, ds_aux_w, ie_glosa_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, ds_aux_w, vl_aux_w, ds_aux_w, vl_aux_w, vl_aux_w;
					
		ie_edicao_w		:= obter_se_proc_conv(cd_estabelecimento_w, cd_convenio_ww, cd_categoria_w, clock_timestamp(), cd_procedimento_W, ie_origem_proced_w, nr_Seq_proc_interno_w, ie_tipo_atendimento_p);
		
		if 	ie_glosa_w = 'E' and
			coalesce(ie_param_444_w,'N') = 'N' and
			ie_tipo_convenio_w = '1' then
			ie_excluir_valor := 'S';
		end if;
		

		if (ie_edicao_w			= 'N') and (coalesce(cd_edicao_ajuste_w,0) 	= 0) then
			ie_glosa_w        := 'T';
		end if;

		if (ie_edicao_w 			= 'N') and (coalesce(cd_edicao_ajuste_w,0) 	> 0) then
			select   count(*)
			into STRICT       qt_item_edicao_w
			from      preco_amb
			where     cd_edicao_amb = cd_edicao_ajuste_w
			and       cd_procedimento = cd_procedimento_w
			and       ie_origem_proced = ie_origem_proced_w;

			if (qt_item_edicao_w = 0) then
				   ie_glosa_w :=    'G';
			end if;
		end if;
		
		ie_autorizacao_w	:= 'L';
		if	((ie_Regra_w in (1,2,5)) or
			(ie_Regra_w = 8 AND ie_bloq_glosa_part_w = 'N')) then
			ie_autorizacao_w	:= 'B';
		elsif (ie_Regra_w in (3,6,7)) then
			select 	coalesce(max(ie_resp_autor),'H')
			into STRICT	ie_resp_autor_w
			from 	regra_convenio_plano
			where 	nr_sequencia = nr_seq_regra_w;
			if (ie_resp_autor_w	= 'H') then
				ie_autorizacao_w	:= 'PAH';
			elsif (ie_resp_autor_w	= 'P') then
				ie_autorizacao_w	:= 'PAP';
			end if;
		end if;
					
		if (ie_glosa_w in ('G','T','D','F')) then
			ie_autorizacao_w	:= 'B';
		end if;
						
		if (ie_excluir_valor = 'S') or
			(((coalesce(ie_Regra_w,0) not in (1,2,5)) or (coalesce(ie_glosa_w,'') not in ('T','E','R','B','H','Z','')))) and (ie_tipo_convenio_w <> 1) then			
			vl_procedimento_w	:= 0;
		else
			if (ie_tipo_convenio_w <> 1) then
				select	max(cd_convenio_partic),
					max(cd_categoria_partic)
				into STRICT	cd_convenio_w,
					cd_categoria_w
				from	parametro_faturamento
				where	cd_estabelecimento	= cd_estabelecimento_w;
				
				if (cd_convenio_w IS NOT NULL AND cd_convenio_w::text <> '') then
					select	max(cd_plano)
					into STRICT	cd_plano_w
					from	convenio_plano
					where	cd_convenio	= cd_convenio_w
					and	ie_situacao	= 'A';
				end if;
			end if;
			
			if (coalesce(cd_convenio_w::text, '') = '') then
				cd_convenio_w	:= cd_convenio_ww;
				cd_Categoria_w	:= cd_categoria_w;
				cd_plano_w	:= cd_plano_w;
			end if;
				IF ie_excluir_valor <> 'S' THEN
					SELECT * FROM Define_Preco_Procedimento(
										cd_estabelecimento_w, cd_convenio_p, cd_categoria_p, dt_inicio_agendamento_p, cd_procedimento_w, 0, coalesce(ie_tipo_Atendimento_p,0), 0, cd_medico_w, --medico
										0, 0, 0, nr_seq_proc_interno_w, null, --usuario convenio
										cd_plano_w, 0, 0, null, vl_procedimento_w, vl_custo_operacional_w, vl_anestesista_w, vl_medico_w, vl_auxiliares_w, vl_materiais_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, qt_pontos_w, cd_edicao_amb_w, ds_aux_w, nr_seq_ajuste_proc_w, 0, null, 0, 'N', null, null, null, null, null, cd_especialidade_w, null, null, null, null, null, null, null, null, null, null) INTO STRICT vl_procedimento_w, vl_custo_operacional_w, vl_anestesista_w, vl_medico_w, vl_auxiliares_w, vl_materiais_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, qt_pontos_w, cd_edicao_amb_w, ds_aux_w, nr_seq_ajuste_proc_w;
				end if;
		end if;
		
		update	ageint_exame_adic_item
		set	ie_Regra		= ie_regra_w,
			ie_glosa		= ie_glosa_w,
			nr_seq_regra		= nr_seq_regra_w,
			cd_procedimento		= cd_procedimento_w,
			ie_origem_proced	= ie_origem_proced_w,
			ie_autorizacao		= ie_autorizacao_w,
			vl_custo_operacional	= vl_custo_operacional_w,
			vl_anestesista		= vl_anestesista_w,
			vl_medico		= vl_medico_w,
			vl_auxiliares 		= vl_auxiliares_w,
			vl_materiais		= vl_materiais_w			
		where	nr_sequencia		= nr_seq_item_adic_w;
		
		cd_convenio_ww	:= cd_convenio_p;
		cd_categoria_w	:= cd_categoria_p;
		cd_plano_w	:= cd_plano_p;
			
		end;
	end loop;
	close C01;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE calcular_valor_proc_adic ( nr_seq_ageint_p bigint, cd_convenio_p bigint, cd_categoria_p text, cd_estabelecimento_p bigint, dt_inicio_agendamento_p timestamp, cd_plano_p text, nm_usuario_p text, cd_usuario_convenio_p text, cd_pessoa_fisica_p text, ie_tipo_Atendimento_p bigint, nr_seq_cobertura_p bigint) FROM PUBLIC;

