-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ageint_gerar_cobertura_item (nr_seq_ageint_p bigint, nr_seq_ageint_item_p text, nm_usuario_p text, ie_html_p text default 'N') AS $body$
DECLARE
 	
			

cd_estab_w		smallint;
cd_estabelecimento_w	smallint;
cd_convenio_w		integer;
cd_categoria_w		varchar(10);
cd_plano_w		varchar(10);
ie_tipo_Atendimento_w	smallint;
cd_usuario_convenio_w	varchar(30);
ie_Sexo_w		varchar(1);
qt_idade_w		smallint;
dt_nascimento_w		timestamp;
cd_pessoa_fisica_w	varchar(10);
cd_conv_item_w		integer;
cd_categ_item_w		varchar(10);
cd_plano_item_w		varchar(10);
cd_procedimento_w	bigint;
ie_origem_proced_w	bigint;
nr_seq_proc_interno_w	bigint;
ie_bloq_glosa_part_w	varchar(1);
ie_resp_autor_w		varchar(10);

vl_aux_w		double precision;
ds_aux_w		varchar(10);
nr_seq_regra_w		bigint;
ie_regra_w		integer;
ie_glosa_w		varchar(1);
ie_edicao_w            varchar(1);
cd_edicao_ajuste_w     bigint;
cd_convenio_glosa_w	bigint;
cd_categoria_glosa_w	varchar(10);
pr_glosa_w			double precision;
vl_glosa_w			double precision;
ds_erro_w		varchar(255);
ie_pacote_w		varchar(1);
qt_item_edicao_w   bigint;

ie_ignorar_regra_lib_proc_w	parametro_agenda_integrada.ie_ignorar_regra_lib_proc%type;
ie_autorizacao_w	    agenda_integrada_item.ie_autorizacao%type;
nr_seq_ageint_item_w	agenda_integrada_item.nr_sequencia%type;
cd_convenio_ww			agenda_integrada.cd_convenio%type;
cd_categoria_ww			agenda_integrada.cd_categoria%type;
cd_plano_ww				agenda_integrada.cd_plano%type;
param437             	varchar(1);
nr_seq_cobertura_w	agenda_integrada.nr_seq_cobertura%type;
cd_empresa_w		agenda_integrada.cd_empresa%type;
nr_seq_adic_item_w	ageint_exame_adic_item.nr_sequencia%type;

C01 CURSOR FOR
	SELECT	cd_estabelecimento
	from	estabelecimento
	where	ie_situacao = 'A' and coalesce(param437,'N') <> 'S'
	
union

	SELECT  cd_estabelecimento
	FROM    usuario_estabelecimento_v
	WHERE   coalesce(param437,'N') = 'S'
	and     ie_situacao = 'A'
	AND     nm_usuario = nm_usuario_p;
	
C02 CURSOR FOR
	SELECT	nr_sequencia,
			cd_procedimento,
			nr_seq_proc_interno,
			ie_origem_proced
	from	agenda_integrada_item
	where	((nr_seq_agenda_int = nr_seq_ageint_p
		and	coalesce(nr_seq_ageint_item_p::text, '') = '')
	or		nr_sequencia = nr_seq_ageint_item_p)
	and (nr_seq_proc_interno IS NOT NULL AND nr_seq_proc_interno::text <> '');

C03 CURSOR FOR
  SELECT nr_seq_proc_interno,
        cd_procedimento,
        ie_origem_proced,
        nr_seq_item,
        nr_sequencia
  from ageint_exame_adic_item
  where ((nr_seq_item = nr_seq_ageint_item_p and coalesce(nr_seq_ageint_p::text, '') = '')
  or nr_seq_item in (SELECT nr_sequencia from agenda_integrada_item where nr_seq_agenda_int = nr_seq_ageint_p) and coalesce(nr_seq_ageint_item_p::text, '') = '')
  and (nr_seq_proc_interno IS NOT NULL AND nr_seq_proc_interno::text <> '');

  procedure executar_cursor_c02 is
  
;
BEGIN
    open C01;
    loop
    fetch C01 into	
      cd_estab_w;
    EXIT WHEN NOT FOUND; /* apply on C01 */
      begin

	  SELECT * FROM obter_proc_tab_interno_conv(	nr_seq_proc_interno_w, cd_estab_w, cd_convenio_ww, cd_categoria_ww, cd_plano_ww, null, cd_procedimento_w, ie_origem_proced_w, null, clock_timestamp(), null, null, null, null, null, null, null, null) INTO STRICT cd_procedimento_w, ie_origem_proced_w;

      SELECT * FROM ageint_consiste_plano_conv(
            null, cd_convenio_ww, cd_procedimento_w, ie_origem_proced_w, clock_timestamp(), 1, coalesce(ie_tipo_atendimento_w,0), cd_plano_ww, null, ds_erro_w, 0, null, ie_regra_w, null, nr_seq_regra_w, nr_seq_proc_interno_w, cd_categoria_ww, cd_estab_w, null, ie_sexo_w, ie_glosa_w, cd_edicao_ajuste_w, nr_seq_cobertura_w, cd_convenio_glosa_w, cd_categoria_glosa_w, cd_pessoa_fisica_w, cd_empresa_w, pr_glosa_w, vl_glosa_w) INTO STRICT ds_erro_w, ie_regra_w, nr_seq_regra_w, ie_glosa_w, cd_edicao_ajuste_w, cd_convenio_glosa_w, cd_categoria_glosa_w, pr_glosa_w, vl_glosa_w;

      ie_edicao_w	:= ageint_obter_se_proc_conv(cd_estab_w, cd_convenio_ww, cd_categoria_ww, clock_timestamp(), cd_procedimento_w, ie_origem_proced_w, nr_seq_proc_interno_w, ie_tipo_atendimento_w);
      ie_pacote_w	:= obter_se_pacote_convenio(cd_procedimento_w, ie_origem_proced_w, cd_convenio_ww, cd_estab_w);

      if (ie_edicao_w 				= 'N') and (coalesce(cd_edicao_ajuste_w,0) 	= 0)   and (coalesce(ie_glosa_w,'L') 		= 'L') and (ie_pacote_w				= 'N') then
         ie_glosa_w := 'T';
      end if;

      if (ie_edicao_w 				= 'N') and (coalesce(cd_edicao_ajuste_w,0) 	> 0)   and (coalesce(ie_glosa_w,'L') 		= 'L') and (ie_pacote_w				= 'N') then

        select   count(*)
        into STRICT     qt_item_edicao_w
        from     preco_amb
        where    cd_edicao_amb = cd_edicao_ajuste_w
        and      cd_procedimento = cd_procedimento_w
        and      ie_origem_proced = ie_origem_proced_w;

        if (qt_item_edicao_w = 0) then
            ie_glosa_w :=    'G';
        end if;
      end if;

      ie_autorizacao_w := 'L';
      if	((ie_regra_w in (1,2,5)) or (ie_regra_w = 8 AND ie_bloq_glosa_part_w = 'N')) then
          ie_autorizacao_w	:= 'B';
      elsif (ie_regra_w in (3,6,7)) then
        select 	coalesce(max(ie_resp_autor),'H')
        into STRICT	ie_resp_autor_w
        from 	regra_convenio_plano
        where 	nr_sequencia = nr_seq_regra_w;
        if (ie_resp_autor_w = 'H') then
           ie_autorizacao_w := 'PAH';
        elsif (ie_resp_autor_w = 'P') then
             ie_autorizacao_w	:= 'PAP';
        end if;
      end if;

      if (ie_glosa_w in ('G','T','D','F')) then
         ie_autorizacao_w := 'B';
      end if;

      select	coalesce(max(ie_ignorar_regra_lib_proc),'N')
      into STRICT	ie_ignorar_regra_lib_proc_w
      from	parametro_agenda_integrada
      where	coalesce(cd_estabelecimento, cd_estab_w) = cd_estab_w;

      if (ie_ignorar_regra_lib_proc_w = 'S') and (coalesce(pkg_i18n.get_user_locale, 'pt_BR') = 'es_MX') then
        begin
          ie_regra_w		 := 4;
          ie_glosa_w		 := 'L';
          ie_autorizacao_w := 'L';
        end;
      end if;

      insert into w_ageint_cobertura_item(ie_glosa,
                ie_regra,              
                cd_estabelecimento,
                nr_seq_ageint_item,
                nm_usuario,
                ie_autorizacao,
                nr_seq_exame_adic_item)
              values (
                ie_glosa_w,
                ie_regra_w,              
                cd_estab_w,
                nr_seq_ageint_item_w,
                nm_usuario_p,
                ie_autorizacao_w,
                nr_seq_adic_item_w);
      end;
    end loop;
    close C01;
  end;
		      			
begin --Ageint_gerar_cobertura_item
delete	FROM w_ageint_cobertura_item
where	nm_usuario			= nm_usuario_p;

param437 := obter_param_usuario(869, 437, obter_perfil_ativo, nm_usuario_p, obter_estabelecimento_ativo, param437);
ie_bloq_glosa_part_w := obter_param_usuario(869, 187, obter_perfil_ativo, nm_usuario_p, 0, ie_bloq_glosa_part_w);

select	cd_estabelecimento,
	cd_convenio,
	cd_categoria,
	cd_plano,
	ie_tipo_Atendimento,
	cd_usuario_convenio,
	cd_pessoa_fisica,
	nr_seq_cobertura_w,
	cd_empresa_w
into STRICT	cd_estabelecimento_w,
	cd_convenio_w,
	cd_categoria_w,
	cd_plano_w, 
	ie_tipo_atendimento_w,
	cd_usuario_convenio_w,
	cd_pessoa_fisica_w,
	nr_seq_cobertura_w,
	cd_empresa_w
from	agenda_integrada
where	nr_sequencia = nr_seq_ageint_p;

select	max(ie_Sexo),
		max(dt_nascimento)
into STRICT	ie_Sexo_w,
		dt_nascimento_w
from	pessoa_fisica
where	cd_pessoa_fisica = cd_pessoa_fisica_w;

qt_idade_w	:= obter_idade(dt_nascimento_w, clock_timestamp(), 'A');

open C02;
loop
fetch C02 into	
	nr_seq_ageint_item_w,
	cd_procedimento_w,
	nr_seq_proc_interno_w,
	ie_origem_proced_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin
	delete	FROM w_ageint_cobertura_item
	where	nr_seq_ageint_item	= nr_seq_ageint_item_w;

	select	max(cd_convenio),
			max(cd_categoria),
			max(cd_plano)
	into STRICT	cd_conv_item_w,
			cd_categ_item_w,
			cd_plano_item_w
	from	agenda_integrada_conv_item
	where	nr_seq_agenda_item	= nr_seq_ageint_item_w;

	if (cd_conv_item_w IS NOT NULL AND cd_conv_item_w::text <> '') then
		cd_convenio_ww	:= cd_conv_item_w;
		cd_categoria_ww	:= cd_categ_item_w;
		cd_plano_ww		:= cd_plano_item_w;
	else
		cd_convenio_ww 	:= cd_convenio_w;
		cd_categoria_ww := cd_categoria_w;
		cd_plano_ww		:= cd_plano_w;
	end if;

  executar_cursor_c02();
	
	end;
end loop;
close C02;

if ie_html_p = 'S' then

  for c_03 in C03 loop

    select	max(cd_convenio),
        max(cd_categoria),
        max(cd_plano)
    into STRICT	cd_conv_item_w,
        cd_categ_item_w,
        cd_plano_item_w
    from	agenda_integrada_conv_item
    where	nr_seq_agenda_item	= c_03.nr_seq_item;

    if (cd_conv_item_w IS NOT NULL AND cd_conv_item_w::text <> '') then
      cd_convenio_ww	:= cd_conv_item_w;
      cd_categoria_ww	:= cd_categ_item_w;
      cd_plano_ww		:= cd_plano_item_w;
    else
      cd_convenio_ww 	:= cd_convenio_w;
      cd_categoria_ww := cd_categoria_w;
      cd_plano_ww		:= cd_plano_w;
    end if;


    cd_procedimento_w := c_03.cd_procedimento;
    ie_origem_proced_w := c_03.ie_origem_proced;
    nr_seq_proc_interno_w := c_03.nr_seq_proc_interno;

    nr_seq_adic_item_w := c_03.nr_sequencia;
    nr_seq_ageint_item_w := c_03.nr_seq_item;

    executar_cursor_c02();

  end loop;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ageint_gerar_cobertura_item (nr_seq_ageint_p bigint, nr_seq_ageint_item_p text, nm_usuario_p text, ie_html_p text default 'N') FROM PUBLIC;

