-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_cot_compra_solic_xml ( cd_cgc_p text, ds_razao_social_p text, ds_forma_pagamento_p text, vl_fat_minimo_p text, qt_dias_entrega_p text, dt_validade_proposta_p text, cd_material_p bigint, nr_id_integracao_p text, qt_material_p bigint, vl_unit_material_p text, vl_total_p text, dt_confirmacao_p text, nm_usuario_p text, ds_marca_p text, ie_tipo_interface_p bigint, cd_material_retorno_p bigint, nr_documento_externo_p text, ie_opcao_p bigint, ie_frete_p text, ds_observacao_p text, ds_embalagem_p text, nr_solic_compra_p bigint, nr_item_solic_compra_p bigint, ie_vencedor_p text, cd_estabelecimento_p bigint, nr_cot_compra_p INOUT bigint) AS $body$
DECLARE


nr_cot_compra_w			bigint;
cd_cgc_w			varchar(14);
nr_item_cot_compra_w		integer;
cd_moeda_w			integer;
cd_condicao_pagto_w		bigint;
ie_frete_w			varchar(1);
cd_estabelecimento_w		smallint;
nr_seq_cot_fornecedor_w		bigint;
nr_sequencia_item_w		bigint;
cd_material_w			integer;
nr_seq_fornec_w			bigint;
qt_entrega_w			double precision;
dt_entrega_w			timestamp;
qt_existe_w			bigint;
cd_cep_w			varchar(15);
sg_estado_w			pessoa_juridica.sg_estado%type;
cd_tipo_pessoa_w			smallint;
cd_estab_w			smallint;
nr_seq_classif_w			bigint;
ds_titulo_w			varchar(255);
ds_comunicado_w			varchar(2000);
ds_forma_pagto_fornec_w		varchar(80);
ie_cadastra_pj_w			varchar(1);
nm_usuarios_adic_w		varchar(255);
nr_Sequencia_w			bigint;
nr_seq_comunic_w			bigint;
cd_perfil_w			varchar(10);
ie_ci_lida_w			varchar(1);
ie_generico_w			varchar(1) := 'N';
ds_observacao_w			varchar(255);
ie_grava_embalag_obs_w		varchar(1);
ie_grava_fat_min_obs_w		varchar(1);
ie_grava_dia_entr_obs_w		varchar(1);
ie_grava_val_prop_obs_w		varchar(1);
ds_obs_fornec_w			varchar(2000);
cd_comprador_padrao_w		varchar(10);
cd_pessoa_solic_padrao_w		varchar(10);
qt_dias_w			bigint;
cd_unidade_medida_compra_w	varchar(30);
ds_mat_direto_w			varchar(255);
qt_material_w			double precision;
qt_material_ww			double precision;
qt_job_w				bigint;
qt_integracao_ativa_w		bigint;
/* Se tiver setor na regra, envia CI para os setores */

ds_setor_adicional_w                   	varchar(2000) := '';
/* Campos da regra Usuario da Regra */

cd_setor_regra_usuario_w		integer;
qt_conv_compra_estoque_w		double precision;

c02 CURSOR FOR
SELECT	cd_estabelecimento
from	estabelecimento
where	ie_situacao = 'A';

c05 CURSOR FOR
SELECT	coalesce(a.cd_setor_atendimento,0) cd_setor_atendimento
from	regra_envio_comunic_usu a
where	a.nr_seq_evento = nr_sequencia_w;


BEGIN

cd_cgc_w 		:= cd_cgc_p;
cd_material_w 		:= cd_material_p;
cd_estabelecimento_w	:= cd_estabelecimento_p;
nr_cot_compra_w		:= nr_cot_compra_p;
qt_material_w		:= replace(qt_material_p,'.',',');

select	coalesce(max(qt_conv_compra_estoque),0)
into STRICT	qt_conv_compra_estoque_w
from	material
where	cd_material = cd_material_w;

if (obter_dados_parametro_compras(cd_estabelecimento_w, 24) = 'S') and (qt_conv_compra_estoque_w > 0) then
	qt_material_w := dividir(qt_material_w, qt_conv_compra_estoque_w);
end if;

select	coalesce(max(Obter_Valor_Param_Usuario(915, 2,   obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w)),0)
into STRICT	qt_dias_w
;

select	cd_comprador_padrao,
	cd_pessoa_solic_padrao,
	cd_moeda_padrao,
	cd_condicao_pagamento_padrao,
	coalesce(ie_grava_embalag_obs,'N'),
	coalesce(ie_grava_fat_min_obs,'N'),
	coalesce(ie_grava_dia_entr_obs,'N'),
	coalesce(ie_grava_val_prop_obs,'N'),
	coalesce(ie_cad_pj_importa_cot,'S'),
	coalesce(ie_imp_mat_generico,'N')
into STRICT	cd_comprador_padrao_w,
	cd_pessoa_solic_padrao_w,
	cd_moeda_w,
	cd_condicao_pagto_w,
	ie_grava_embalag_obs_w,
	ie_grava_fat_min_obs_w,
	ie_grava_dia_entr_obs_w,
	ie_grava_val_prop_obs_w,
	ie_cadastra_pj_w,
	ie_generico_w
from	parametro_compras
where	cd_estabelecimento	= cd_estabelecimento_w;

if (ie_opcao_p = 0) and (nr_cot_compra_w = 0) then

	select	nextval('cot_compra_seq')
	into STRICT	nr_cot_compra_w
	;

	insert into cot_compra(
		nr_cot_compra,
		dt_cot_compra,
		dt_atualizacao,
		cd_comprador,
		nm_usuario,
		cd_pessoa_solicitante,
		cd_estabelecimento,
		dt_retorno_prev,
		nr_documento_externo,
		ie_tipo_integracao_envio,
		ie_finalidade_cotacao)
	values (	nr_cot_compra_w,
		clock_timestamp(),
		clock_timestamp(),
		cd_comprador_padrao_w,
		nm_usuario_p,
		cd_pessoa_solic_padrao_w,
		cd_estabelecimento_w,
		clock_timestamp() + qt_dias_w,
		nr_documento_externo_p,
		ie_tipo_interface_p,
		'C');
end if;

if (ie_opcao_p = 1) and (nr_cot_compra_w > 0) then

	if (length(cd_cgc_w) <> 14) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(265990,'CD_CGC=' || cd_cgc_w);
		--'CNPJ =' || cd_cgc_w || ' nao possui 14 posicoes.'
	end if;

	select	count(*)
	into STRICT	qt_existe_w
	from	pessoa_juridica
	where	cd_cgc = cd_cgc_w;	
	
	if (ie_cadastra_pj_w = 'S') and (qt_existe_w = '0') then

		select	coalesce(cd_cep,0),
			coalesce(sg_estado,'SP')
		into STRICT	cd_cep_w,
			sg_estado_w
		from	pessoa_juridica
		where	cd_cgc = obter_cgc_estabelecimento(cd_estabelecimento_w);

		select	coalesce(max(cd_tipo_pessoa_bionexo),0 )
		into STRICT	cd_tipo_pessoa_w
		from	parametro_compras
		where	cd_estabelecimento = cd_estabelecimento_w;
		
		if (cd_tipo_pessoa_w = 0) then
		
			select	min(cd_tipo_pessoa)
			into STRICT	cd_tipo_pessoa_w
			from	pessoa_juridica
			where	ie_situacao = 'A';
		end if;
		
		insert into pessoa_juridica(
			cd_cgc,
			ds_razao_social,
			nm_fantasia,
			cd_cep,
			ds_endereco,
			ds_municipio,
			sg_estado,
			dt_atualizacao,
			nm_usuario,
			cd_tipo_pessoa,
			ie_prod_fabric,
			ie_situacao,
			dt_atualizacao_nrec,
			nm_usuario_nrec)
		values (	cd_cgc_w,
			substr(ds_razao_social_p,1,255),
			substr(ds_razao_social_p,1,255),
			cd_cep_w,
			'Bionexo',
			'Bionexo',
			sg_estado_w,
			clock_timestamp(),
			nm_usuario_p,
			cd_tipo_pessoa_w,
			'N',
			'A',
			clock_timestamp(),
			nm_usuario_p);
		
		open C02;
		loop
		fetch C02 into	
			cd_estab_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin
			
			insert into pessoa_juridica_estab(
				nr_sequencia,
				cd_cgc,
				cd_estabelecimento,
				dt_atualizacao,
				nm_usuario,
				ie_conta_dif_nf,
				ie_rateio_adiant,
				ie_retem_iss)
			values (	nextval('pessoa_juridica_estab_seq'),
				cd_cgc_w,
				cd_estab_w,
				clock_timestamp(),
				nm_usuario_p,
				'N',
				'P',
				'N');	
			end;
		end loop;
		close C02;
		
		select	count(*)
		into STRICT	qt_integracao_ativa_w
		from	cliente_integracao
		where	nr_seq_inf_integracao = 290
		and	ie_situacao = 'A';
		
		select	count(*)
		into STRICT	qt_job_w
		from	job_v
		where	upper(comando) like '%ENVIAR_COT_COMPRA_INTEGRACAO%';
		
		if (qt_job_w > 0) and (qt_integracao_ativa_w > 0) then
			CALL envia_pesssoa_jur_fila_transm(cd_cgc_w, nm_usuario_p);
		end if;

		select	obter_classif_comunic('F')
		into STRICT	nr_seq_classif_w
		;
		
		select	coalesce(max(b.nr_sequencia),0),
			max(cd_perfil)
		into STRICT	nr_sequencia_w,
			cd_perfil_w
		from	regra_envio_comunic_compra a,
			regra_envio_comunic_evento b
		where	a.nr_sequencia = b.nr_seq_regra
		and	a.cd_funcao = 6
		and	b.cd_evento = 23
		and	b.ie_situacao = 'A'
		and	a.cd_estabelecimento = cd_estabelecimento_w
		and	substr(obter_se_envia_ci_regra_compra(b.nr_sequencia,0,'X',obter_perfil_ativo,nm_usuario_p,null),1,1) = 'S';

		if (nr_sequencia_w = 0) then
			ds_titulo_w	:= 	wheb_mensagem_pck.get_texto(301263);
			ds_comunicado_w	:= 	wheb_mensagem_pck.get_texto(301265,
							'NR_COT_COMPRA=' || nr_cot_compra_w || 
							';CD_CGC=' || cd_cgc_w || 
							';DS_RAZAO_SOCIAL=' || substr(ds_razao_social_p,1,255));
		else
			select	coalesce(ie_ci_lida,'N')
			into STRICT	ie_ci_lida_w
			from 	regra_envio_comunic_evento
			where 	nr_sequencia = nr_sequencia_w;
			
			select	ds_titulo,
				nm_usuarios_adic,
			substr(
			replace_macro(
			replace_macro(
			replace_macro(ds_comunicacao,
				'@nr_cot_compra',nr_cot_compra_w),
				'@cnpj', cd_cgc_w),
				'@razao_social',ds_razao_social_p),1,2000)
			into STRICT	ds_titulo_w,
				nm_usuarios_adic_w,
				ds_comunicado_w
			from	regra_envio_comunic_evento
			where	nr_sequencia = nr_sequencia_w;
		end if;

		open C05;
		loop
		fetch C05 into	
			cd_setor_regra_usuario_w;
		EXIT WHEN NOT FOUND; /* apply on C05 */
			begin
			if (cd_setor_regra_usuario_w <> 0) and (obter_se_contido_char(cd_setor_regra_usuario_w, ds_setor_adicional_w) = 'N') then
				ds_setor_adicional_w := substr(ds_setor_adicional_w || cd_setor_regra_usuario_w || ',',1,2000);
			end if;
			end;
		end loop;
		close C05;

		if (cd_perfil_w IS NOT NULL AND cd_perfil_w::text <> '') then
			cd_perfil_w := cd_perfil_w ||',';
		end if;

		select	nextval('comunic_interna_seq')
		into STRICT	nr_seq_comunic_w
		;

		insert	into comunic_interna(
			dt_comunicado,
			ds_titulo,
			ds_comunicado,
			nm_usuario,
			dt_atualizacao,	
			ie_geral,
			nm_usuario_destino,
			nr_sequencia,
			ie_gerencial,
			nr_seq_classif,
			dt_liberacao,
			ds_perfil_adicional,
			ds_setor_adicional)
		values (	clock_timestamp(),
			ds_titulo_w,
			ds_comunicado_w,
			nm_usuario_p,
			clock_timestamp(),
			'N',
			nm_usuario_p || ',' || nm_usuarios_adic_w,
			nr_seq_comunic_w,
			'N',
			nr_seq_classif_w,
			clock_timestamp(),
			cd_perfil_w,
			ds_setor_adicional_w);

		/*Para que a comunicacao seja gerada como lida ao proprio usuario */

		if (ie_ci_lida_w = 'S') then
			insert into comunic_interna_lida(nr_sequencia,nm_usuario,dt_atualizacao)values (nr_seq_comunic_w,nm_usuario_p,clock_timestamp());
		end if;

	end if;

	ds_forma_pagto_fornec_w := '';

	select	max(cd_interno)
	into STRICT	ds_forma_pagto_fornec_w
	from	conversao_meio_externo
	where	upper(nm_tabela) = 'CONDICAO_PAGAMENTO'
	and	upper(nm_atributo) = 'CD_CONDICAO_PAGAMENTO'
	and	ie_sistema_externo = 'B'
	and	cd_externo = ds_forma_pagamento_p;

	select	coalesce(max(cd_condicao_pagamento),cd_condicao_pagto_w)
	into STRICT	cd_condicao_pagto_w
	from	condicao_pagamento
	where	upper(cd_condicao_pagamento) = upper(coalesce(ds_forma_pagto_fornec_w,ds_forma_pagamento_p));

	if (cd_cgc_w <> '0') then
		begin
		
		if (upper(ie_frete_p) = 'FOB') then
			ie_frete_w := 'F';
		else
			ie_frete_w := 'C';
		end if;

		ds_obs_fornec_w := /*Cond. Pagto: */
 wheb_mensagem_pck.get_texto(301275) || ds_forma_pagamento_p;
		
		if (ie_grava_fat_min_obs_w = 'S') and (vl_fat_minimo_p IS NOT NULL AND vl_fat_minimo_p::text <> '') then
			ds_obs_fornec_w := substr(ds_obs_fornec_w || chr(13) || chr(10) || wheb_mensagem_pck.get_texto(343425) || vl_fat_minimo_p,1,2000);
		end if;
		
		if (ie_grava_dia_entr_obs_w = 'S') and (qt_dias_entrega_p IS NOT NULL AND qt_dias_entrega_p::text <> '') then
			ds_obs_fornec_w := substr(ds_obs_fornec_w || chr(13) || chr(10) || wheb_mensagem_pck.get_texto(301277) || qt_dias_entrega_p,1,2000);
		end if;
		
		if (ie_grava_val_prop_obs_w = 'S') and (dt_validade_proposta_p IS NOT NULL AND dt_validade_proposta_p::text <> '') then
			ds_obs_fornec_w := substr(ds_obs_fornec_w || chr(13) || chr(10) || wheb_mensagem_pck.get_texto(301278) || dt_validade_proposta_p,1,2000);
		end if;	
		
		select	nextval('cot_compra_forn_seq')
		into STRICT	nr_seq_cot_fornecedor_w
		;

		insert	into cot_compra_forn(
			nr_sequencia,
			nr_cot_compra,
			cd_cgc_fornecedor,
			dt_atualizacao,
			nm_usuario,
			ds_observacao,
			cd_moeda,
			cd_condicao_pagamento,
			ie_frete,
			ie_gerado_bionexo,
			ie_status_envio_email_lib)
		values (	nr_seq_cot_fornecedor_w,
			nr_cot_compra_w,
			cd_cgc_w,
			clock_timestamp(),
			nm_usuario_p,
			ds_obs_fornec_w,
			cd_moeda_w,
			cd_condicao_pagto_w,
			ie_frete_w,
			'X',
			'N');
		end;
	end if;
end if;

if (nr_cot_compra_w > 0) and (cd_cgc_w <> '0') and (ie_opcao_p = 2) then

	if (coalesce(dt_confirmacao_p::text, '') = '') then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(265991,'CD_MATERIAL=' || cd_material_p);
		--'O item ' || cd_material_p || ' no possui data informada no arquivo.'
	end if;
	
	select	coalesce(max(nr_sequencia),0)
	into STRICT	nr_seq_fornec_w
	from	cot_compra_forn
	where	nr_cot_compra = nr_cot_compra_w
	and	cd_cgc_fornecedor = cd_cgc_w;	
	
	select	cd_unidade_medida_compra
	into STRICT	cd_unidade_medida_compra_w
	from	material
	where	cd_material = cd_material_p;
	
	if (cd_material_retorno_p <> 0) and (cd_material_retorno_p <> cd_material_p) then
		cd_material_w := cd_material_retorno_p;
	end if;
	
	select	coalesce(max(nr_item_cot_compra),0)
	into STRICT	nr_item_cot_compra_w
	from	cot_compra_item
	where	nr_cot_compra = nr_cot_compra_w
	and	cd_material = cd_material_w;
	
	if (nr_item_cot_compra_w = 0) then
	
		select	coalesce(max(nr_item_cot_compra),0) + 1
		into STRICT	nr_item_cot_compra_w
		from	cot_compra_item
		where	nr_cot_compra = nr_cot_compra_w;

		insert into cot_compra_item(
			nr_cot_compra,
			nr_item_cot_compra,
			cd_material,
			qt_material,
			cd_unidade_medida_compra,
			dt_atualizacao,
			dt_limite_entrega,
			nm_usuario,
			ie_situacao,
			cd_estab_item)
		values (	nr_cot_compra_w,
			nr_item_cot_compra_w,
			cd_material_w,
			qt_material_w,
			cd_unidade_medida_compra_w,
			clock_timestamp(),
			clock_timestamp() + interval '7 days',
			nm_usuario_p,
			'A',
			cd_estabelecimento_w);	
	end if;
	
	if (nr_seq_fornec_w > 0) then
				
		ds_observacao_w := substr(ds_observacao_p,1,255);

		if (ie_grava_embalag_obs_w = 'S') and (ds_embalagem_p IS NOT NULL AND ds_embalagem_p::text <> '') then
			ds_observacao_w := substr(ds_observacao_w || chr(13) || chr(10) || wheb_mensagem_pck.get_texto(301279) || ds_embalagem_p,1,255);
		end if;		
			
		select	nextval('cot_compra_forn_item_seq')
		into STRICT	nr_sequencia_item_w
		;

		insert into cot_compra_forn_item(
			nr_sequencia,
			nr_seq_cot_forn,
			nr_cot_compra,
			nr_item_cot_compra,
			cd_cgc_fornecedor,
			qt_material,
			vl_unitario_material,
			dt_atualizacao,
			nm_usuario,
			vl_preco_liquido,
			vl_total_liquido_item,
			ie_situacao,
			ds_marca,
			ds_marca_fornec,
			cd_material,
			nr_id_integracao,
			ds_observacao)
		values (	nr_sequencia_item_w,
			nr_seq_fornec_w,
			nr_cot_compra_w,
			nr_item_cot_compra_w,
			cd_cgc_w,
			qt_material_w,
			replace(vl_unit_material_p,'.',','),
			clock_timestamp(),
			nm_usuario_p,
			replace(vl_total_p,'.',','),
			replace(vl_total_p,'.',','),
			'A',
			substr(ds_marca_p,1,30),
			substr(ds_marca_p,1,30),
			cd_material_w,
			nr_id_integracao_p,
			ds_observacao_w);
			
		if (coalesce(ie_vencedor_p,'N') = 'S') then
		
			update	cot_compra_item
			set	cd_cgc_fornecedor_venc_alt		= cd_cgc_w,
				nr_seq_cot_item_forn		= nr_sequencia_item_w,
				dt_atualizacao			= clock_timestamp(),
				ds_motivo_venc_alt		= substr( wheb_mensagem_pck.get_texto(301280,
									'CD_CGC=' || cd_cgc_w || 
									';DS_RAZAO_SOCIAL=' || obter_nome_pf_pj(null,cd_cgc_w)),1,4000)
			where	nr_cot_compra			= nr_cot_compra_w
			and	nr_item_cot_compra		= nr_item_cot_compra_w;
		end if;		
	end if;
end if;

if (ie_opcao_p = 3) and (nr_cot_compra_w > 0) and (nr_solic_compra_p > 0) and (nr_item_solic_compra_p > 0) then
	
	select	count(*)
	into STRICT	qt_existe_w
	from	solic_compra
	where	nr_solic_compra = nr_solic_compra_p;
	
	if (qt_existe_w > 0) then
	
		select	cd_estabelecimento
		into STRICT	cd_estabelecimento_w
		from	solic_compra
		where	nr_solic_compra = nr_solic_compra_p;
		
		update	cot_compra
		set	cd_estabelecimento = cd_estabelecimento_w
		where	nr_cot_compra = nr_cot_compra_w
		and	cd_estabelecimento <> cd_estabelecimento_w;
	
		select	max(ds_material_direto)
		into STRICT	ds_mat_direto_w
		from	solic_compra_item
		where	nr_solic_compra = nr_solic_compra_p
		and	nr_item_solic_compra = nr_item_solic_compra_p;
	
		select	coalesce(max(nr_item_cot_compra),0),
			coalesce(max(qt_material),0)
		into STRICT	nr_item_cot_compra_w,
			qt_material_ww
		from	cot_compra_item
		where	nr_cot_compra = nr_cot_compra_w
		and	cd_material = cd_material_w;
		
		if (obter_dados_parametro_compras(cd_estabelecimento_w, 24) = 'S') and (qt_conv_compra_estoque_w > 0) then
			qt_material_ww := dividir(qt_material_ww, qt_conv_compra_estoque_w);
		end if;
	
		if (ds_mat_direto_w IS NOT NULL AND ds_mat_direto_w::text <> '') then
			update	cot_compra_item
			set	ds_material_direto_w	= ds_mat_direto_w
			where	nr_cot_compra		= nr_cot_compra_w
			and	nr_item_cot_compra	= nr_item_cot_compra_w
			and	coalesce(ds_material_direto_w::text, '') = '';
		end if;
		
		/*Isso significa que o item da cotacao foi agrupado com mais de uma solicitacao. Dai vem no arquivo 2 Tags, cada um com uma quantidade diferente e com o numero da solic e do item .. pergunta para o Maicon*/

		if (qt_material_ww = qt_material_w) then
			update	cot_compra_item
			set	nr_solic_compra		= nr_solic_compra_p,
				nr_item_solic_compra	= nr_item_solic_compra_p
			where	nr_cot_compra		= nr_cot_compra_w
			and	nr_item_cot_compra	= nr_item_cot_compra_w;
		else
			insert into cot_compra_solic_agrup(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				nr_cot_compra,
				nr_item_cot_compra,
				nr_solic_compra,
				nr_item_solic_compra,
				qt_material,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_ordem_compra,
				cd_estabelecimento)
			values (	nextval('cot_compra_solic_agrup_seq'),
				clock_timestamp(),
				nm_usuario_p,
				nr_cot_compra_w,
				nr_item_cot_compra_w,
				nr_solic_compra_p,
				nr_item_solic_compra_p,
				qt_material_w,
				clock_timestamp(),
				nm_usuario_p,
				null,
				cd_estabelecimento_w);
			
		end if;	
	end if;	
end if;

update	solic_compra
set	ie_status_envio = 'P'
where	nr_solic_compra = nr_solic_compra_p;

commit;

nr_cot_compra_p := nr_cot_compra_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_cot_compra_solic_xml ( cd_cgc_p text, ds_razao_social_p text, ds_forma_pagamento_p text, vl_fat_minimo_p text, qt_dias_entrega_p text, dt_validade_proposta_p text, cd_material_p bigint, nr_id_integracao_p text, qt_material_p bigint, vl_unit_material_p text, vl_total_p text, dt_confirmacao_p text, nm_usuario_p text, ds_marca_p text, ie_tipo_interface_p bigint, cd_material_retorno_p bigint, nr_documento_externo_p text, ie_opcao_p bigint, ie_frete_p text, ds_observacao_p text, ds_embalagem_p text, nr_solic_compra_p bigint, nr_item_solic_compra_p bigint, ie_vencedor_p text, cd_estabelecimento_p bigint, nr_cot_compra_p INOUT bigint) FROM PUBLIC;

