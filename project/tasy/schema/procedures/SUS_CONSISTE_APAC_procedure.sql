-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE sus_consiste_apac ( nr_interno_conta_p bigint, nr_atendimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


ds_detalhe_w			varchar(255)	:= '';
cd_estabelecimento_w		smallint;
nr_seq_apac_w			bigint;
nr_apac_w			bigint;
cd_procedimento_apac_w		bigint;
ie_origem_proc_apac_w		bigint;
cd_cid_principal_w		varchar(4);
cd_cid_secundario_w		varchar(4);
cd_cid_causa_assoc_w		varchar(4);
ie_apac_w			varchar(1)	:= 'S';
nr_apac_digito13_w		smallint;
ds_erro_w			varchar(255);
dt_ocorrencia_w			timestamp;
cd_motivo_cobranca_w		smallint;
cd_cid_pri_radiacao_w		varchar(4);
cd_cid_seg_radiacao_w		varchar(4);
cd_cid_ter_radiacao_w		varchar(4);
nr_campos_pri_radi_w		smallint;
nr_campos_seg_radi_w		smallint;
nr_campos_ter_radi_w		smallint;
dt_inicio_validade_w		timestamp;
dt_fim_validade_w		timestamp;
dt_competencia_w		timestamp;
ie_tipo_apac_w			smallint;
ie_cidpri_consiste_w		varchar(1);
ie_cidseg_consiste_w		varchar(1);
ie_cidter_consiste_w		varchar(1);
cd_cid_topografia_w		varchar(4);
cd_grau_histopat_w		integer;
ie_tipo_laudo_apac_w		varchar(3);
qt_meses_planejados_w		smallint;
qt_meses_autorizados_w		integer;
dt_inicio_tratamento_w		timestamp;
ie_linfonodos_reg_inv_w		varchar(1);
dt_emissao_w			timestamp;
dt_solicitacao_w		timestamp;
dt_autorizacao_w		timestamp;
qt_apac_ini_duplic_w		smallint;
cd_estadio_w			smallint;
ie_estadio_w			varchar(1);
cd_procedimento_laudo_w		bigint;
qt_procapac_conta_w		integer 	:= 0;
ie_finalidade_w			varchar(3);
dt_inicio_pri_radi_w		timestamp;
dt_inicio_seg_radi_w		timestamp;
dt_inicio_ter_radi_w		timestamp;
dt_fim_pri_radi_w		timestamp;
dt_fim_seg_radi_w		timestamp;
dt_fim_ter_radi_w		timestamp;
dt_diag_cito_hist_w		timestamp;
ie_continuidade_trat_w		varchar(1);
dt_pri_dialise_w		timestamp;
qt_altura_cm_w			real;
qt_peso_w			real;
qt_diurese_w			smallint;
qt_glicose_w			smallint;
pr_albumina_w			real;
pr_hb_w				real;
ie_acesso_vascular_w		varchar(1);
ie_hiv_w			varchar(1);
ie_hcv_w			varchar(1);
ie_hb_sangue_w			varchar(1);
ie_ultra_abdomen_w		varchar(1);
ds_sigla_esquema_w		varchar(40);
ie_tratamento_ant_w		varchar(1);
cd_medico_responsavel_w		varchar(10);
cd_medico_autorizador_w		varchar(10);
cd_medico_req_laudo_w 		varchar(10);
nr_apac_anterior_w		bigint;
qtprincapac_w			bigint;
nr_cns_resp_apac_w		varchar(20);
nr_cns_autor_apac_w		varchar(20);
nr_cns_paciente_w		varchar(20);
qt_apac_ini_w			bigint;
qt_cns_apac_ini_w		bigint;
cd_estab_usuario_w		smallint;
ie_dados_apac_cont_w		varchar(15) := 'N';
qt_reg_apac_w			bigint := 0;
cd_proc_bpa_w			bigint;
nr_atendimento_w		bigint;
nr_apac_ant_w			bigint;
qt_proc_inib_w			bigint;
qt_campos_radio_w			smallint;
cd_cid_primeiro_trat_w		varchar(4);
cd_cid_segundo_trat_w		varchar(4);
cd_cid_terceiro_trat_w		varchar(4);
dt_pri_tratamento_w		timestamp;
dt_seg_tratamento_w		timestamp;
dt_ter_tratamento_w		timestamp;
dt_inicio_dialise_cli_w		timestamp;
cd_proc_secundario_w		procedimento.cd_procedimento%type;
ie_origem_proc_sec_w		procedimento.ie_origem_proced%type;
qt_procedimento_w		bigint := 0;
qt_proc_compat_w		bigint;
qt_dif_vigencia_w		bigint;
qt_proc_princ_conta_w		bigint;
nr_tru_w			sus_apac_unif.nr_tru%type;
dt_alta_w			atendimento_paciente.dt_alta%type;
cd_pessoa_fisica_w		pessoa_fisica.cd_pessoa_fisica%type;
cd_grupo_w			sus_grupo.cd_grupo%type;
cd_subgrupo_w			sus_subgrupo.cd_subgrupo%type;
cd_forma_org_w			sus_forma_organizacao.cd_forma_organizacao%type;
nr_apac_ww			sus_apac_unif.nr_apac%type;
ie_gastrec_desv_duode_w		sus_apac_unif.ie_gastrec_desv_duode%type;
ie_gastrec_vert_manga_w		sus_apac_unif.ie_gastrec_vert_manga%type;
ie_gastrec_deri_intes_w		sus_apac_unif.ie_gastrec_deri_intes%type;
ie_gastrec_vert_banda_w		sus_apac_unif.ie_gastrec_vert_banda%type;
nr_aih_bariatrica_w		sus_apac_unif.nr_aih_bariatrica%type;
ds_texto_atend_w		varchar(50) := wheb_mensagem_pck.Get_texto(297915);
ds_texto_conta_w		varchar(50) := wheb_mensagem_pck.Get_texto(280625);
ds_texto_apac_w			varchar(50) := wheb_mensagem_pck.get_texto(279347);
ds_texto_proced_w 		varchar(50) := wheb_mensagem_pck.get_texto(278134);
ds_texto_cod_cid_w		varchar(50) := wheb_mensagem_pck.Get_texto(1043662);
ds_texto_qtd_maxima_cid_w		varchar(50) := wheb_mensagem_pck.Get_texto(304386);
ds_texto_qtd_total_cid_w		varchar(50) := wheb_mensagem_pck.Get_texto(304391);
ds_inicio_valid_w		varchar(50) := wheb_mensagem_pck.get_texto(304192);
ds_proc_apac_w			varchar(50) := wheb_mensagem_pck.get_texto(304191);	
ds_texto_compet_w		varchar(50) := wheb_mensagem_pck.get_texto(304195)||':';
ds_texto_dt_dialise_cli_w 	varchar(50) := wheb_mensagem_pck.get_texto(326264);
ds_texto_dt_inicio_real_w	varchar(50) := wheb_mensagem_pck.get_texto(326263);
qt_proc_bar_w			bigint := 0;
ds_texto_dt_diagnostico_w		varchar(50) := wheb_mensagem_pck.get_texto(1116717);
dt_referencia_conta_w		conta_paciente.dt_mesano_referencia%type;
cd_motivo_cobranca_ww		sus_apac_unif.cd_motivo_cobranca%type;
dt_ocorrencia_ww		sus_apac_unif.dt_ocorrencia%type;
ie_detalhe_proc_w               smallint;

C01 CURSOR FOR
	SELECT	sum(a.qt_procedimento) qt_procedimento,
		a.cd_procedimento,
		a.ie_origem_proced
	from	procedimento_paciente a
	where	a.nr_interno_conta	= nr_interno_conta_p
	and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
	and	a.cd_procedimento	<> cd_procedimento_apac_w
	and	exists (SELECT	1
			from	sus_proc_compativel b
			where	b.cd_proc_principal	= cd_procedimento_apac_w
			and	b.ie_origem_proc_princ	= ie_origem_proc_apac_w
			and	b.cd_proc_secundario	= a.cd_procedimento
			and	b.ie_origem_proc_sec	= a.ie_origem_proced
			and	b.ie_tipo_compatibilidade = 1)
	group by a.cd_procedimento,
		a.ie_origem_proced;


BEGIN

begin
cd_estab_usuario_w := wheb_usuario_pck.get_cd_estabelecimento;
exception
when others then
	cd_estab_usuario_w := 0;
end;

ie_dados_apac_cont_w	:= coalesce(obter_valor_param_usuario(1124,96,obter_perfil_ativo,nm_usuario_p,cd_estab_usuario_w),'N');
 
/* Obter dados da conta e do procedimento */

select	coalesce(max(cd_estabelecimento),1),
	max(dt_mesano_referencia)
into STRICT	cd_estabelecimento_w,
	dt_referencia_conta_w
from	conta_Paciente
where	nr_interno_conta	= nr_interno_conta_p;

/* Obter dados do atendimento */

begin
select	x.cd_pessoa_fisica
into STRICT	cd_pessoa_fisica_w
from	atendimento_paciente x
where	x.nr_atendimento = nr_atendimento_p  LIMIT 1;
exception
when others then
	cd_pessoa_fisica_w := '';
end;

/* Obter dados da APAC */

begin
select	nr_sequencia,
	nr_apac,
	cd_procedimento,
	ie_origem_proced,
	cd_cid_principal,
	cd_cid_secundario,
	cd_cid_causa_assoc,
	dt_ocorrencia,
	cd_motivo_cobranca,
	cd_cid_pri_radiacao,
	cd_cid_seg_radiacao,
	cd_cid_ter_radiacao,
	nr_campos_pri_radi,
	nr_campos_seg_radi,
	nr_campos_ter_radi,
	dt_inicio_validade,
	dt_competencia,
	ie_tipo_apac,
	cd_cid_topografia,
	cd_grau_histopat,
	qt_meses_planejados,
	qt_meses_autorizados,
	dt_inicio_tratamento,
	ie_linfonodos_reg_inv,
	dt_fim_validade,
	dt_emissao,
	dt_solicitacao,
	dt_autorizacao, 
	cd_estadio,
	dt_diag_cito_hist,
	ie_continuidade_trat,
	ie_finalidade,
	dt_pri_dialise,
	qt_altura_cm,          
	qt_peso,                
	qt_diurese,             
	qt_glicose,             
	pr_albumina,            
	pr_hb,                  
	ie_acesso_vascular,
	ie_hiv,                 
	ie_hcv,                 
	ie_hb_sangue,           
	ie_ultra_abdomen,
	ds_sigla_esquema,
	ie_tratamento_ant,
	dt_inicio_pri_radi,     
	dt_inicio_seg_radi,     
	dt_inicio_ter_radi,     
	dt_fim_pri_radi,        
	dt_fim_seg_radi,        
	dt_fim_ter_radi,
	cd_medico_responsavel,
	cd_medico_autorizador,
	nr_apac_anterior,
	cd_cid_primeiro_trat,
	cd_cid_segundo_trat,
	cd_cid_terceiro_trat,
	dt_pri_tratamento,
	dt_seg_tratamento,
	dt_ter_tratamento,
	nr_tru,
	ie_gastrec_desv_duode,
	ie_gastrec_vert_manga,
	ie_gastrec_deri_intes,
	ie_gastrec_vert_banda,
	nr_aih_bariatrica
into STRICT	nr_seq_apac_w,
	nr_apac_w,
	cd_procedimento_apac_w,
	ie_origem_proc_apac_w,
	cd_cid_principal_w,
	cd_cid_secundario_w,
	cd_cid_causa_assoc_w,
	dt_ocorrencia_w,
	cd_motivo_cobranca_w,
	cd_cid_pri_radiacao_w,
	cd_cid_seg_radiacao_w,
	cd_cid_ter_radiacao_w,
	nr_campos_pri_radi_w,
	nr_campos_seg_radi_w,
	nr_campos_ter_radi_w,
	dt_inicio_validade_w,
	dt_competencia_w,
	ie_tipo_apac_w,
	cd_cid_topografia_w,
	cd_grau_histopat_w,
	qt_meses_planejados_w,
	qt_meses_autorizados_w,
	dt_inicio_tratamento_w,
	ie_linfonodos_reg_inv_w,
	dt_fim_validade_w,
	dt_emissao_w,
	dt_solicitacao_w,
	dt_autorizacao_w,
	cd_estadio_w,
	dt_diag_cito_hist_w,
	ie_continuidade_trat_w,
	ie_finalidade_w,
	dt_pri_dialise_w,
	qt_altura_cm_w,          
	qt_peso_w,                
	qt_diurese_w,             
	qt_glicose_w,             
	pr_albumina_w,            
	pr_hb_w,                  
	ie_acesso_vascular_w,
	ie_hiv_w,                 
	ie_hcv_w,                 
	ie_hb_sangue_w,           
	ie_ultra_abdomen_w,
	ds_sigla_esquema_w,
	ie_tratamento_ant_w,
	dt_inicio_pri_radi_w,     
	dt_inicio_seg_radi_w,     
	dt_inicio_ter_radi_w,     
	dt_fim_pri_radi_w,        
	dt_fim_seg_radi_w,         
	dt_fim_ter_radi_w,
	cd_medico_responsavel_w,
	cd_medico_autorizador_w,
	nr_apac_anterior_w,
	cd_cid_primeiro_trat_w,
	cd_cid_segundo_trat_w,
	cd_cid_terceiro_trat_w,
	dt_pri_tratamento_w,
	dt_seg_tratamento_w,
	dt_ter_tratamento_w,
	nr_tru_w,
	ie_gastrec_desv_duode_w,
	ie_gastrec_vert_manga_w,
	ie_gastrec_deri_intes_w,
	ie_gastrec_vert_banda_w,
	nr_aih_bariatrica_w
from	sus_apac_unif
where	nr_interno_conta	= nr_interno_conta_p
and	nr_atendimento		= nr_atendimento_p;
exception
	when others then
	ie_apac_w	:= 'N';
	/* 19 - Falta APAC para a conta, ou existe mais de uma APAC */

	if (Sus_Obter_Inco_Ativa(19)) then
		CALL sus_gravar_inconsistencia(nr_interno_conta_p, 19, '', cd_estabelecimento_w, nm_usuario_p);
	end if;
end;

begin
select	dt_alta
into STRICT	dt_alta_w
from	atendimento_paciente
where	nr_atendimento = nr_atendimento_p;
exception
when others then
	dt_alta_w := null;
end;

begin



select	a.cd_grupo,
	b.cd_subgrupo,
	c.cd_forma_organizacao
into STRICT	cd_grupo_w,
	cd_subgrupo_w,
	cd_forma_org_w
from	sus_grupo a,
	sus_subgrupo b,
	sus_forma_organizacao c,
	sus_procedimento d
where	a.nr_sequencia = b.nr_seq_grupo
and	b.nr_sequencia = c.nr_seq_subgrupo
and	c.nr_sequencia = d.nr_seq_forma_org
and	d.cd_procedimento = cd_procedimento_apac_w
and	d.ie_origem_proced = ie_origem_proc_apac_w;
exception
when others then
	cd_grupo_w		:= 0;
	cd_subgrupo_w		:= 0;
	cd_forma_org_w		:= 0;
end;

if (ie_apac_w	= 'S') then
	ds_erro_w := Sus_Consiste_Numero_Apac(nr_interno_conta_p, nr_apac_w, nm_usuario_p, 1, ds_erro_w);
	ds_erro_w := Sus_Consiste_Dados_Apac('', nr_apac_w, nr_seq_apac_w, cd_procedimento_apac_w, ie_origem_proc_apac_w, cd_cid_principal_w, nm_usuario_p, 1, ds_erro_w);
end if;

if (ie_apac_w	= 'S') then
	/* 38 - CID Principal da APAC nao informado */

	if (Sus_Obter_Inco_Ativa(38)) then
		if (coalesce(cd_cid_principal_w::text, '') = '') then
			ds_detalhe_w	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' ||  nr_interno_conta_p ||'; ' || ds_texto_apac_w || ' ' || nr_apac_w || '; ' || ds_texto_proced_w || ' ' || cd_procedimento_apac_w,1,255);
			CALL sus_gravar_inconsistencia(nr_interno_conta_p, 38, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
		end if;
	end if;
	
	/* 44 - Data de ocorrencia informada indevidamente */

	if (Sus_Obter_Inco_Ativa(44)) then
		if	((coalesce(dt_ocorrencia_w::text, '') = '') and (cd_motivo_cobranca_w in (41, 42, 43, 51, 11, 12, 14, 15, 16, 18, 31, 26))) or
			((dt_ocorrencia_w IS NOT NULL AND dt_ocorrencia_w::text <> '') and (cd_motivo_cobranca_w not in (41, 42, 43, 51, 11, 12, 14, 15, 16, 18, 31, 26))) then
			ds_detalhe_w	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' ||  nr_interno_conta_p ||'; ' || ds_texto_apac_w || ' ' || nr_apac_w || '; ' || ds_texto_proced_w || ' ' || cd_procedimento_apac_w,1,255);
			CALL sus_gravar_inconsistencia(nr_interno_conta_p, 44, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
		end if;
	end if;
	
	/* 55 - Numero maximo de aplicacoes para CID area irradiada excedido */

	if (Sus_Obter_Inco_Ativa(55)) then
		begin

			if (coalesce(cd_cid_pri_radiacao_w,'X') <> 'X' and coalesce(nr_campos_pri_radi_w,0) > 0) then
				begin
					select	coalesce(max(somente_numero(qt_campos_radio)),0)
					into STRICT	qt_campos_radio_w
					from	cid_doenca
					where	cd_doenca_cid	= cd_cid_pri_radiacao_w;
					
					if (qt_campos_radio_w < nr_campos_pri_radi_w) then
						begin					
							ds_detalhe_w	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' ||  nr_interno_conta_p ||'; ' || ds_texto_apac_w || ' ' || nr_apac_w || '; ' || ds_texto_proced_w || ' ' || cd_procedimento_apac_w || '; ' || ds_texto_cod_cid_w || ' ' || cd_cid_pri_radiacao_w || '; ' || ds_texto_qtd_maxima_cid_w || ' ' || qt_campos_radio_w || '; ' || ds_texto_qtd_total_cid_w || ' ' || nr_campos_pri_radi_w,1,255);
							CALL sus_gravar_inconsistencia(nr_interno_conta_p, 55, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
						end;
					end if;
				end;
			end if;

			if (coalesce(cd_cid_seg_radiacao_w,'X') <> 'X' and coalesce(nr_campos_seg_radi_w,0) > 0) then
				begin
					select	coalesce(max(somente_numero(qt_campos_radio)),0)
					into STRICT	qt_campos_radio_w
					from	cid_doenca
					where	cd_doenca_cid	= cd_cid_seg_radiacao_w;

					if (qt_campos_radio_w < nr_campos_seg_radi_w) then
						begin					
							ds_detalhe_w	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' ||  nr_interno_conta_p ||'; ' || ds_texto_apac_w || ' ' || nr_apac_w || '; ' || ds_texto_proced_w || ' ' || cd_procedimento_apac_w || '; ' || ds_texto_cod_cid_w || ' ' || cd_cid_seg_radiacao_w || '; ' || ds_texto_qtd_maxima_cid_w || ' ' || qt_campos_radio_w || '; ' || ds_texto_qtd_total_cid_w || ' ' || nr_campos_seg_radi_w,1,255);
							CALL sus_gravar_inconsistencia(nr_interno_conta_p, 55, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
						end;
					end if;
				end;
			end if;

			if (coalesce(cd_cid_ter_radiacao_w,'X') <> 'X' and coalesce(nr_campos_ter_radi_w,0) > 0) then
				begin
					select	coalesce(max(somente_numero(qt_campos_radio)),0)
					into STRICT	qt_campos_radio_w
					from	cid_doenca
					where	cd_doenca_cid	= cd_cid_ter_radiacao_w;

					if (qt_campos_radio_w < nr_campos_ter_radi_w) then
						begin					
							ds_detalhe_w	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' ||  nr_interno_conta_p ||'; ' || ds_texto_apac_w || ' ' || nr_apac_w || '; ' || ds_texto_proced_w || ' ' || cd_procedimento_apac_w || '; ' || ds_texto_cod_cid_w || ' ' || cd_cid_ter_radiacao_w || '; ' || ds_texto_qtd_maxima_cid_w || ' ' || qt_campos_radio_w || '; ' || ds_texto_qtd_total_cid_w || ' ' || nr_campos_ter_radi_w,1,255);
							CALL sus_gravar_inconsistencia(nr_interno_conta_p, 55, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
						end;
					end if;
				end;
			end if;

		end;
	end if;
	
	/* 56 - Data inicio validade difere da data de competencia para APAC inicial */

	if (Sus_Obter_Inco_Ativa(56)) then
		begin
		if (ie_tipo_apac_w = 1) and (establishment_timezone_utils.startofmonth(dt_inicio_validade_w) <> establishment_timezone_utils.startofmonth(dt_competencia_w)) then
			begin
			ds_detalhe_w	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' ||  nr_interno_conta_p ||'; ' || ds_texto_apac_w || ' ' || nr_apac_w || '; ' || ds_inicio_valid_w || '  ' || dt_inicio_validade_w || '; ' || ds_texto_compet_w || ' ' || dt_competencia_w,1,255);
			CALL sus_gravar_inconsistencia(nr_interno_conta_p, 56, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
			end;
		end if;
		end;
	end if;
	
	select	coalesce(max(ie_tipo_laudo_apac),'00')
	into STRICT	ie_tipo_laudo_apac_w
	from	sus_procedimento
	where	cd_procedimento		= cd_procedimento_apac_w
	and	ie_origem_proced	= ie_origem_proc_apac_w;
	
	/* 57 - Falta informacao do campo Grau histo. para APAC */

	if (Sus_Obter_Inco_Ativa(57)) then
		begin
		if	((ie_tipo_laudo_apac_w = '03') or (ie_tipo_laudo_apac_w = '04')) and (coalesce(cd_grau_histopat_w::text, '') = '') then
			begin
			ds_detalhe_w	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' ||  nr_interno_conta_p ||'; ' || ds_texto_apac_w || ' ' || nr_apac_w || '; ' || ds_inicio_valid_w || '  ' || dt_inicio_validade_w || '; ' || ds_texto_compet_w || ' ' || dt_competencia_w,1,255);
			CALL sus_gravar_inconsistencia(nr_interno_conta_p, 57, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
			end;
		end if;
		end;
	end if;
	
	/* 58 - Falta informacao do CID topografia para APAC */

	if (Sus_Obter_Inco_Ativa(58)) then
		begin
		if (ie_tipo_laudo_apac_w = '03') and (coalesce(cd_cid_topografia_w::text, '') = '') then
			begin
			ds_detalhe_w	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' ||  nr_interno_conta_p ||'; ' || ds_texto_apac_w || ' ' || nr_apac_w || '; ' || ds_inicio_valid_w || '  ' || dt_inicio_validade_w || '; ' || ds_texto_compet_w || ' ' || dt_competencia_w,1,255);
			CALL sus_gravar_inconsistencia(nr_interno_conta_p, 58, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
			end;
		end if;				
		end;
	end if;
	
	/*59 - Falta informacao dos meses planejados para APAC */

	if (Sus_Obter_Inco_Ativa(59)) then
		begin
		if (ie_tipo_laudo_apac_w = '03') and (coalesce(qt_meses_planejados_w::text, '') = '') then
			begin
			ds_detalhe_w	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' ||  nr_interno_conta_p ||'; ' || ds_texto_apac_w || ' ' || nr_apac_w || '; ' || ds_inicio_valid_w || '  ' || dt_inicio_validade_w || '; ' || ds_texto_compet_w || ' ' || dt_competencia_w,1,255);
			CALL sus_gravar_inconsistencia(nr_interno_conta_p, 59, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
			end;
		end if;
		end;
	end if;
	
	/*60 - Falta informacao dos meses autorizados para APAC */

	if (Sus_Obter_Inco_Ativa(60)) then
		begin
		if (ie_tipo_laudo_apac_w = '03') and (coalesce(qt_meses_autorizados_w::text, '') = '') then
			begin
			ds_detalhe_w	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' ||  nr_interno_conta_p ||'; ' || ds_texto_apac_w || ' ' || nr_apac_w || '; ' || ds_inicio_valid_w || '  ' || dt_inicio_validade_w || '; ' || ds_texto_compet_w || ' ' || dt_competencia_w,1,255);
			CALL sus_gravar_inconsistencia(nr_interno_conta_p, 60, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
			end;
		end if;
		end;
	end if;

	/*61 - Falta informacao da data de inicio de tratamento para APAC */

	if (Sus_Obter_Inco_Ativa(61)) then
		begin
		if	((ie_tipo_laudo_apac_w = '03') or (ie_tipo_laudo_apac_w = '04')) and (coalesce(dt_inicio_tratamento_w::text, '') = '') then
			begin
			ds_detalhe_w	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' ||  nr_interno_conta_p ||'; ' || ds_texto_apac_w || ' ' || nr_apac_w || '; ' || ds_inicio_valid_w || '  ' || dt_inicio_validade_w || '; ' || ds_texto_compet_w || ' ' || dt_competencia_w,1,255);
			CALL sus_gravar_inconsistencia(nr_interno_conta_p, 61, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
			end;
		end if;
		end;
	end if;

	/*62 - Falta informacao do linfonodo reg. invalido para APAC */

	if (Sus_Obter_Inco_Ativa(62)) then
		begin
		if	((ie_tipo_laudo_apac_w = '03') or (ie_tipo_laudo_apac_w = '04')) and
			((coalesce(ie_linfonodos_reg_inv_w::text, '') = '') or (ie_linfonodos_reg_inv_w ='')) then
			begin
			ds_detalhe_w	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' ||  nr_interno_conta_p ||'; ' || ds_texto_apac_w || ' ' || nr_apac_w || '; ' || ds_inicio_valid_w || '  ' || dt_inicio_validade_w || '; ' || ds_texto_compet_w || ' ' || dt_competencia_w,1,255);
			CALL sus_gravar_inconsistencia(nr_interno_conta_p, 62, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
			end;
		end if;
		end;
	end if;
	
	/*69 - Data inicio validade APAC incorreta */

	if (Sus_Obter_Inco_Ativa(69)) then
		begin
		if (coalesce(dt_inicio_validade_w::text, '') = '') 				or (dt_inicio_validade_w > coalesce(dt_fim_validade_w,clock_timestamp()))	or (establishment_timezone_utils.startofmonth(dt_inicio_validade_w) > establishment_timezone_utils.startofmonth(coalesce(dt_competencia_w,clock_timestamp()))) then
			begin
			ds_detalhe_w	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' ||  nr_interno_conta_p ||'; ' || ds_texto_apac_w || ' ' || nr_apac_w || '; ' || ds_inicio_valid_w || '  ' || dt_inicio_validade_w,1,255);
			CALL sus_gravar_inconsistencia(nr_interno_conta_p, 69, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
			end;
		end if;
		end;
	end if;

	/*70 - Data final de validade APAC incorreta */

	if (Sus_Obter_Inco_Ativa(70)) then
		begin
		if (coalesce(dt_fim_validade_w::text, '') = '') or (dt_fim_validade_w < coalesce(dt_competencia_w,clock_timestamp())) then
			begin
			ds_detalhe_w	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' ||  nr_interno_conta_p ||'; ' || ds_texto_apac_w || ' ' || nr_apac_w || '; ' || wheb_mensagem_pck.get_texto(304197)|| ' ' || dt_fim_validade_w,1,255);
			CALL sus_gravar_inconsistencia(nr_interno_conta_p, 70, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
			end;
		end if;
		end;
	end if;
	
	/*74 - Data emissao, inicio validade, final validade, competencia, solicitacao ou autorizacao incorreta*/
	if (Sus_Obter_Inco_Ativa(74)) then 
		begin 
		if ((dt_emissao_w IS NOT NULL AND dt_emissao_w::text <> '') and 
			not(establishment_timezone_utils.startofyear(dt_emissao_w) between establishment_timezone_utils.startofyear(clock_timestamp() - interval '1825 days') and establishment_timezone_utils.startofyear(clock_timestamp() + interval '1825 days'))) or ((dt_inicio_validade_w IS NOT NULL AND dt_inicio_validade_w::text <> '') and 
			not(establishment_timezone_utils.startofyear(dt_inicio_validade_w) between establishment_timezone_utils.startofyear(clock_timestamp() - interval '1825 days') and establishment_timezone_utils.startofyear(clock_timestamp() + interval '1825 days'))) or ((dt_fim_validade_w IS NOT NULL AND dt_fim_validade_w::text <> '') and 
			not(establishment_timezone_utils.startofyear(dt_fim_validade_w) between establishment_timezone_utils.startofyear(clock_timestamp() - interval '1825 days') and establishment_timezone_utils.startofyear(clock_timestamp() + interval '1825 days'))) or ((dt_competencia_w IS NOT NULL AND dt_competencia_w::text <> '') and 
			not(establishment_timezone_utils.startofyear(dt_competencia_w) between establishment_timezone_utils.startofyear(clock_timestamp() - interval '1825 days') and establishment_timezone_utils.startofyear(clock_timestamp() + interval '1825 days'))) or ((dt_solicitacao_w IS NOT NULL AND dt_solicitacao_w::text <> '') and 
			not(establishment_timezone_utils.startofyear(dt_solicitacao_w) between establishment_timezone_utils.startofyear(clock_timestamp() - interval '1825 days') and establishment_timezone_utils.startofyear(clock_timestamp() + interval '1825 days'))) or ((dt_autorizacao_w IS NOT NULL AND dt_autorizacao_w::text <> '') and 
			not(establishment_timezone_utils.startofyear(dt_autorizacao_w) between establishment_timezone_utils.startofyear(clock_timestamp() - interval '1825 days') and establishment_timezone_utils.startofyear(clock_timestamp() + interval '1825 days'))) then
			begin
			ds_detalhe_w	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' ||  nr_interno_conta_p ||'; ' || ds_texto_apac_w || ' ' || nr_apac_w,1,255);
			CALL sus_gravar_inconsistencia(nr_interno_conta_p, 74, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
			end;
		end if;
		end;
	end if;

	/* 75 - APAC inicial duplicada */

	if (Sus_Obter_Inco_Ativa(75)) then
		begin
		if (ie_tipo_apac_w in (1,3)) and (coalesce(nr_apac_w,0) > 0)	then
			begin
			select	count(*)
			into STRICT	qt_apac_ini_duplic_w
			from	conta_paciente b,
				sus_apac_unif a
			where	a.nr_apac 		= nr_apac_w
			and	a.nr_interno_conta	= b.nr_interno_conta
			and	coalesce(b.ie_cancelamento::text, '') = ''
			and	a.ie_tipo_apac 	in (1,3);
			
			if (qt_apac_ini_duplic_w > 1) then
				begin
				ds_detalhe_w	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' ||  nr_interno_conta_p ||'; ' || ds_texto_apac_w || ' ' || nr_apac_w,1,255);
				CALL sus_gravar_inconsistencia(nr_interno_conta_p, 75, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
				end;
			end if;
			end;
		end if;
		end;
	end if;
		
	/* 83 - Procedimento da APAC difere do procedimento do laudo */

	if (Sus_Obter_Inco_Ativa(83)) then
		begin
		begin
		select	cd_procedimento_solic
		into STRICT	cd_procedimento_laudo_w
		from	sus_laudo_paciente
		where	nr_apac	= nr_apac_w
		and		nr_atendimento = nr_atendimento_p;
		exception
			when others then
			cd_procedimento_laudo_w	:= null;
		end;
		
		if	not(coalesce(cd_procedimento_laudo_w::text, '') = '') and (cd_procedimento_laudo_w <> cd_procedimento_apac_w) then
			begin
			ds_detalhe_w	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' ||
						nr_interno_conta_p ||'; ' || ds_texto_apac_w || ' ' || nr_apac_w || '; ' || ds_proc_apac_w || ' ' || cd_procedimento_apac_w || 
						'; ' || wheb_mensagem_pck.get_texto(304199)|| ' ' || cd_procedimento_laudo_w,1,255);
			CALL sus_gravar_inconsistencia(nr_interno_conta_p, 83, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
			end;
		end if;
		end;
	end if;

	/* 84 - Procedimento da APAC nao lancado na conta do paciente */

	if (Sus_Obter_Inco_Ativa(84)) then
		begin
		
		select	count(*)
		into STRICT	qt_procapac_conta_w
		from	procedimento_paciente
		where	cd_procedimento		= cd_procedimento_apac_w
		and	ie_origem_proced	= ie_origem_proc_apac_w
		and	nr_interno_conta	= nr_interno_conta_p
		and	coalesce(cd_motivo_exc_conta::text, '') = '';
		
		if (qt_procapac_conta_w = 0) then
			begin
			ds_detalhe_w	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' ||
						nr_interno_conta_p ||'; ' || ds_texto_apac_w || ' ' || nr_apac_w ||'; ' || ds_proc_apac_w || ' ' || cd_procedimento_apac_w,1,255);
			CALL sus_gravar_inconsistencia(nr_interno_conta_p, 84, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
			end;
		end if;
		end;
	end if;

	/* 86 - Estadio informado indevidamente para CID10 topografia da APAC */

	if (Sus_Obter_Inco_Ativa(86)) and (cd_cid_topografia_w IS NOT NULL AND cd_cid_topografia_w::text <> '') and (ie_tipo_laudo_apac_w in ('03','04')) then
		begin
		select	coalesce(max(ie_estadio), 'N')
		into STRICT	ie_estadio_w
		from	cid_doenca
		where	cd_doenca_cid	= cd_cid_topografia_w;
		
		if	((ie_estadio_w	= 'N') and
			not(coalesce(cd_estadio_w::text, '') = '')) or
			((ie_estadio_w	= 'S') and (coalesce(cd_estadio_w::text, '') = '')) then
			begin
			ds_detalhe_w	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' ||  
						nr_interno_conta_p ||'; ' || ds_texto_apac_w || ' ' || nr_apac_w || '; CID: ' || cd_cid_topografia_w,1,255);
			CALL sus_gravar_inconsistencia(nr_interno_conta_p, 86, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
			end;
		end if;
		end;
	end if;

	if (Sus_Obter_Inco_Ativa(99)) then
		begin
		if (ie_tipo_laudo_apac_w = '04') and (coalesce(ie_finalidade_w::text, '') = '') then
			begin
			ds_detalhe_w    := substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' ||  nr_interno_conta_p ||
					'; ' || ds_texto_apac_w || ' ' || nr_apac_w ||'; ' || ds_proc_apac_w || ' ' || cd_procedimento_apac_w,1,255);
			CALL sus_gravar_inconsistencia(nr_interno_conta_p, 99, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
			end;
		end if;
		end;
	end if;

	if (Sus_Obter_Inco_Ativa(100)) then
		begin
		if (ie_tipo_laudo_apac_w = '04') and
			(((coalesce(cd_cid_pri_radiacao_w::text, '') = '') and ((dt_inicio_pri_radi_w IS NOT NULL AND dt_inicio_pri_radi_w::text <> '') or (dt_fim_pri_radi_w IS NOT NULL AND dt_fim_pri_radi_w::text <> ''))) or
			((coalesce(cd_cid_seg_radiacao_w::text, '') = '') and ((dt_inicio_seg_radi_w IS NOT NULL AND dt_inicio_seg_radi_w::text <> '') or (dt_fim_seg_radi_w IS NOT NULL AND dt_fim_seg_radi_w::text <> ''))) or
			((coalesce(cd_cid_ter_radiacao_w::text, '') = '') and ((dt_inicio_ter_radi_w IS NOT NULL AND dt_inicio_ter_radi_w::text <> '') or (dt_fim_ter_radi_w IS NOT NULL AND dt_fim_ter_radi_w::text <> ''))) or
			((cd_cid_pri_radiacao_w IS NOT NULL AND cd_cid_pri_radiacao_w::text <> '') and ((coalesce(dt_inicio_pri_radi_w::text, '') = '') or (coalesce(dt_fim_pri_radi_w::text, '') = ''))) or
			((cd_cid_seg_radiacao_w IS NOT NULL AND cd_cid_seg_radiacao_w::text <> '') and ((coalesce(dt_inicio_seg_radi_w::text, '') = '') or (coalesce(dt_fim_seg_radi_w::text, '') = ''))) or
			((cd_cid_ter_radiacao_w IS NOT NULL AND cd_cid_ter_radiacao_w::text <> '') and ((coalesce(dt_inicio_ter_radi_w::text, '') = '') or (coalesce(dt_fim_ter_radi_w::text, '') = '')))) then
			begin
			ds_detalhe_w    := substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' ||  nr_interno_conta_p ||
					'; ' || ds_texto_apac_w || ' ' || nr_apac_w ||'; ' || ds_proc_apac_w || ' ' || cd_procedimento_apac_w,1,255);
			CALL sus_gravar_inconsistencia(nr_interno_conta_p, 100, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
			end;
		end if;
		end;
	end if;

	/* 102 - Falta informacao para APAC de Quimioterapia */

	if (Sus_Obter_Inco_Ativa(102)) then
		begin
		if (ie_tipo_laudo_apac_w = '03') and
			((coalesce(cd_cid_principal_w::text, '') = '') or (coalesce(cd_cid_topografia_w::text, '') = '') or (coalesce(ie_linfonodos_reg_inv_w::text, '') = '') or (coalesce(cd_grau_histopat_w::text, '') = '') or (coalesce(dt_diag_cito_hist_w::text, '') = '') or (coalesce(ie_tratamento_ant_w::text, '') = '') or (coalesce(dt_inicio_tratamento_w::text, '') = '') or (coalesce(ds_sigla_esquema_w::text, '') = '')) then
			begin
			ds_detalhe_w    := substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' ||  nr_interno_conta_p ||
						'; ' || ds_texto_apac_w || ' ' || nr_apac_w ||'; ' || ds_proc_apac_w || ' ' || cd_procedimento_apac_w,1,255);
			CALL sus_gravar_inconsistencia(nr_interno_conta_p, 102, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
			end;
		end if;
		end;
	end if;

	/* 103 - Falta informacao para APAC de Radioterapia */

	if (Sus_Obter_Inco_Ativa(103)) then
		begin
		if (ie_tipo_laudo_apac_w = '04') and
			((coalesce(cd_cid_principal_w::text, '') = '') or (coalesce(cd_cid_topografia_w::text, '') = '') or (coalesce(ie_linfonodos_reg_inv_w::text, '') = '') or (coalesce(cd_grau_histopat_w::text, '') = '') or (coalesce(dt_diag_cito_hist_w::text, '') = '') or (coalesce(ie_tratamento_ant_w::text, '') = '') or (coalesce(dt_inicio_tratamento_w::text, '') = '') or (coalesce(ie_finalidade_w::text, '') = '')) then
			begin
			ds_detalhe_w    := substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' ||  nr_interno_conta_p ||
					'; ' || ds_texto_apac_w || ' ' || nr_apac_w ||'; ' || ds_proc_apac_w || ' ' || cd_procedimento_apac_w,1,255);
			CALL sus_gravar_inconsistencia(nr_interno_conta_p, 103, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
			end;
		end if;
		end;
	end if;
	
	/* 104 - Falta informacao para APAC de Nefrologia */

	if (Sus_Obter_Inco_Ativa(104)) then
		begin
		if (ie_tipo_laudo_apac_w = '02') and
			((coalesce(cd_cid_principal_w::text, '') = '') or (coalesce(dt_pri_dialise_w::text, '') = '') or (coalesce(qt_altura_cm_w::text, '') = '') or (coalesce(qt_peso_w::text, '') = '') or (coalesce(qt_diurese_w::text, '') = '') or (coalesce(qt_glicose_w::text, '') = '') or (coalesce(pr_albumina_w::text, '') = '') or (coalesce(pr_hb_w::text, '') = '') or (coalesce(ie_acesso_vascular_w::text, '') = '') or (coalesce(ie_hiv_w::text, '') = '') or (coalesce(ie_hcv_w::text, '') = '') or (coalesce(ie_hb_sangue_w::text, '') = '') or (coalesce(ie_ultra_abdomen_w::text, '') = '')) then
			begin
			ds_detalhe_w    := substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' ||  nr_interno_conta_p ||
						'; ' || ds_texto_apac_w || ' ' || nr_apac_w ||'; ' || ds_proc_apac_w || ' ' || cd_procedimento_apac_w,1,255);
			CALL sus_gravar_inconsistencia(nr_interno_conta_p, 104, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
			end;
		end if;
		end;
	end if;
	
	if (Sus_Obter_Inco_Ativa(114)) then
		begin
		if (dt_fim_validade_w IS NOT NULL AND dt_fim_validade_w::text <> '') and (dt_inicio_validade_w IS NOT NULL AND dt_inicio_validade_w::text <> '') and (ie_tipo_apac_w not in (3,4)) and (months_between(establishment_timezone_utils.startofmonth(dt_fim_validade_w),establishment_timezone_utils.startofmonth(dt_inicio_validade_w)) <> 2) and (cd_procedimento_apac_w <> 301070172) then
		--	(to_char(establishment_timezone_utils.startofmonth(dt_fim_validade_w),'mm') - to_char(establishment_timezone_utils.startofmonth(dt_inicio_validade_w),'mm') <> 2) then
			begin
			ds_detalhe_w    := substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' ||  nr_interno_conta_p ||
						'; ' || ds_texto_apac_w || ' ' || nr_apac_w ||'; ' || ds_proc_apac_w || ' ' || cd_procedimento_apac_w,1,255);
			CALL sus_gravar_inconsistencia(nr_interno_conta_p, 114, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
			end;
		end if;
		end;
	end if;
	
	if (Sus_Obter_Inco_Ativa(116)) then
		begin
		if (dt_fim_validade_w IS NOT NULL AND dt_fim_validade_w::text <> '') and (dt_inicio_validade_w IS NOT NULL AND dt_inicio_validade_w::text <> '') and (establishment_timezone_utils.startofday(dt_inicio_validade_w) = establishment_timezone_utils.startofday(dt_fim_validade_w)) and (establishment_timezone_utils.startofday(dt_emissao_w) < establishment_timezone_utils.startofday(dt_fim_validade_w)) then
			begin
			ds_detalhe_w    := substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' ||  nr_interno_conta_p ||
						'; ' || ds_texto_apac_w || ' ' || nr_apac_w ||'; ' || ds_proc_apac_w || ' ' || cd_procedimento_apac_w,1,255);
			CALL sus_gravar_inconsistencia(nr_interno_conta_p, 116, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
			end;
		end if;
		end;
	end if;

	if (Sus_Obter_Inco_Ativa(124)) then
		begin
		if (dt_fim_validade_w IS NOT NULL AND dt_fim_validade_w::text <> '') and (dt_inicio_validade_w IS NOT NULL AND dt_inicio_validade_w::text <> '') and (ie_tipo_apac_w not in (3,4)) and (to_char(establishment_timezone_utils.startofmonth(dt_fim_validade_w),'mm') - to_char(establishment_timezone_utils.startofmonth(dt_inicio_validade_w),'mm') > 2) and (cd_procedimento_apac_w <> 301070172) then
			begin
			ds_detalhe_w    := substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' ||  nr_interno_conta_p ||
						'; ' || ds_texto_apac_w || ' ' || nr_apac_w ||'; ' || ds_proc_apac_w || ' ' || cd_procedimento_apac_w,1,255);
			CALL sus_gravar_inconsistencia(nr_interno_conta_p, 124, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
			end;
		end if;
		end;
	end if;

	if (Sus_Obter_Inco_Ativa(132)) then
		begin
		if (dt_fim_validade_w IS NOT NULL AND dt_fim_validade_w::text <> '') and (dt_inicio_validade_w IS NOT NULL AND dt_inicio_validade_w::text <> '') then
			begin
                        ie_detalhe_proc_w := sus_obter_se_detalhe_proc(cd_procedimento_apac_w, ie_origem_proc_apac_w, '014', dt_competencia_w);
			if (ie_detalhe_proc_w > 0) and (trunc(months_between(dt_fim_validade_w,establishment_timezone_utils.startofmonth(dt_inicio_validade_w)))	<> 2)  then
				begin
				ds_detalhe_w    := substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' ||  nr_interno_conta_p ||
							'; ' || ds_texto_apac_w || ' ' || nr_apac_w ||'; ' || ds_proc_apac_w || ' ' || cd_procedimento_apac_w,1,255);
				CALL sus_gravar_inconsistencia(nr_interno_conta_p, 132, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
				end;
			elsif (ie_detalhe_proc_w = 0) and (trunc(months_between(dt_fim_validade_w,establishment_timezone_utils.startofmonth(dt_inicio_validade_w)))	<> 0)then
				begin
				ds_detalhe_w    := substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' ||  nr_interno_conta_p ||
							'; ' || ds_texto_apac_w || ' ' || nr_apac_w ||'; ' || ds_proc_apac_w || ' ' || cd_procedimento_apac_w,1,255);
				CALL sus_gravar_inconsistencia(nr_interno_conta_p, 132, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
				end;
			end if;
			
			end;
		end if;
		end;
	end if;
	
	if (Sus_Obter_Inco_Ativa(138)) then
		begin
		if (dt_ocorrencia_w IS NOT NULL AND dt_ocorrencia_w::text <> '') and
			((establishment_timezone_utils.startofday(dt_ocorrencia_w) < establishment_timezone_utils.startofday(dt_inicio_validade_w)) or (establishment_timezone_utils.startofday(dt_ocorrencia_w) > establishment_timezone_utils.startofday(dt_fim_validade_w))) then
			begin
			ds_detalhe_w    := substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' ||  nr_interno_conta_p ||
							'; ' || ds_texto_apac_w || ' ' || nr_apac_w || '; ' || wheb_mensagem_pck.get_texto(304207) || ': ' || dt_inicio_validade_w || ' ' || wheb_mensagem_pck.get_texto(304208)|| ': ' || dt_fim_validade_w || '; ' || wheb_mensagem_pck.get_texto(304209) || dt_ocorrencia_w ,1,255);
			CALL sus_gravar_inconsistencia(nr_interno_conta_p, 138, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
			end;
		end if;
		end;
	end if;

	if (Sus_Obter_Inco_Ativa(147)) and (dt_inicio_tratamento_w IS NOT NULL AND dt_inicio_tratamento_w::text <> '')  and (dt_diag_cito_hist_w IS NOT NULL AND dt_diag_cito_hist_w::text <> '')  and (dt_inicio_tratamento_w	< dt_diag_cito_hist_w )then
		ds_detalhe_w    := substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' ||  nr_interno_conta_p ||
						'; ' || ds_texto_apac_w || ' ' || nr_apac_w ||'; ' || ds_proc_apac_w || ' ' || cd_procedimento_apac_w,1,255);
		CALL sus_gravar_inconsistencia(nr_interno_conta_p, 132, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
	end if;
	
	if (Sus_Obter_Inco_Ativa(154)) then
		begin
		if (cd_motivo_cobranca_w = 18) then
			begin
			select	count(*)
			into STRICT	qt_procapac_conta_w
			from	procedimento_paciente
			where	cd_procedimento		= cd_procedimento_apac_w
			and	ie_origem_proced	= ie_origem_proc_apac_w
			and	nr_interno_conta	= nr_interno_conta_p
			and	qt_procedimento		<> 0
			and	coalesce(cd_motivo_exc_conta::text, '') = '';
			
			if (qt_procapac_conta_w > 0) then
				begin
				ds_detalhe_w    := substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' ||  nr_interno_conta_p ||
							'; ' || ds_texto_apac_w || ' ' || nr_apac_w ||'; ' || ds_proc_apac_w || ' ' || cd_procedimento_apac_w,1,255);
				CALL sus_gravar_inconsistencia(nr_interno_conta_p, 154, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
				end;
			end if;			
			end;
		elsif (cd_motivo_cobranca_w = 21) then
			begin
			select	count(*)
			into STRICT	qt_procapac_conta_w
			from	procedimento_paciente
			where	cd_procedimento		= cd_procedimento_apac_w
			and	ie_origem_proced	= ie_origem_proc_apac_w
			and	nr_interno_conta	= nr_interno_conta_p
			and	qt_procedimento		<> 1
			and	coalesce(cd_motivo_exc_conta::text, '') = '';
			
			if (qt_procapac_conta_w > 0) then
				begin
				ds_detalhe_w    := substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' ||  nr_interno_conta_p ||
							'; ' || ds_texto_apac_w || ' ' || nr_apac_w ||'; ' || ds_proc_apac_w || ' ' || cd_procedimento_apac_w,1,255);
				CALL sus_gravar_inconsistencia(nr_interno_conta_p, 154, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
				end;
			end if;	
			end;
		end if;
		
		end;
	end if;
	
	--286 - Existe mais de um Proc principal lancado na APAC
	if (sus_obter_inco_ativa(286)) then
		
		--Somente deve apresentar se existir mais de um proc principal diferente na APAC
		select	count(*)		
		into STRICT	qt_proc_princ_conta_w
		from (SELECT	cd_procedimento
			from	procedimento_paciente
			where	nr_interno_conta	= nr_interno_conta_p
			and	coalesce(cd_motivo_exc_conta::text, '') = ''
			and	sus_obter_tiporeg_proc(cd_procedimento,ie_origem_proced,'C',3) = 6
			group by cd_procedimento) alias5;
		
		if (qt_proc_princ_conta_w > 1) then
			ds_detalhe_w    := substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' ||  nr_interno_conta_p ||
						'; ' || ds_texto_apac_w || ' ' || nr_apac_w ||'; ' || ds_proc_apac_w || ' ' || cd_procedimento_apac_w,1,255);
			CALL sus_gravar_inconsistencia(nr_interno_conta_p, 286, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
		end if;		
	end if;
	
	if (sus_obter_inco_ativa(295)) then
	
		begin		
			select	b.dt_inicio_dialise_cli,
				b.dt_pri_dialise
			into STRICT	dt_inicio_dialise_cli_w,
				dt_pri_dialise_w
			from	sus_procedimento a,
				sus_apac_unif b
			where	a.cd_procedimento	= b.cd_procedimento
			and	a.ie_origem_proced 	= b.ie_origem_proced
			and 	b.nr_interno_conta 	= nr_interno_conta_p
			and	coalesce(sus_obter_tipo_laudo_apac_proc(a.cd_procedimento, a.ie_origem_proced),0) = 10
			and 	b.dt_inicio_dialise_cli < b.dt_pri_dialise  LIMIT 1;
		exception
		when others then
			dt_inicio_dialise_cli_w := null;
			dt_pri_dialise_w	:= null;			
		end;
		
		if (dt_inicio_dialise_cli_w < dt_pri_dialise_w) then
			ds_detalhe_w 	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' ||  nr_interno_conta_p ||
							'; ' || ds_texto_apac_w || ' ' || nr_apac_w ||'; ' ||  wheb_mensagem_pck.get_texto(326264) || ': '  || dt_inicio_dialise_cli_w || ' ' || wheb_mensagem_pck.get_texto(326263) || ': ' || dt_pri_dialise_w,1,255);
			CALL sus_gravar_inconsistencia(nr_interno_conta_p, 295,ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);			
		end if;
	
	end if;	
	
	if (sus_obter_inco_ativa(296)) and (ie_tipo_laudo_apac_w = '10') and (sus_obter_se_detalhe_proc(cd_procedimento_apac_w, ie_origem_proc_apac_w, '043', dt_competencia_w) > 0) and (coalesce(cd_cid_causa_assoc_w,'0') = '0') then
		
		ds_detalhe_w 	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' ||  nr_interno_conta_p ||
							'; ' || ds_texto_apac_w || ' ' || nr_apac_w,1,255);
		CALL sus_gravar_inconsistencia(nr_interno_conta_p, 296,ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);			
	
	end if;
	
	if (Sus_Obter_Inco_Ativa(299)) then
		begin

		if (ie_tipo_laudo_apac_w = '04') and
			(((dt_inicio_pri_radi_w IS NOT NULL AND dt_inicio_pri_radi_w::text <> '') and not(establishment_timezone_utils.startofday(dt_inicio_pri_radi_w) between establishment_timezone_utils.startofday(dt_inicio_validade_w) and establishment_timezone_utils.startofday(dt_fim_validade_w))) or ((dt_fim_pri_radi_w IS NOT NULL AND dt_fim_pri_radi_w::text <> '') and not(establishment_timezone_utils.startofday(dt_fim_pri_radi_w) between establishment_timezone_utils.startofday(dt_inicio_validade_w) and establishment_timezone_utils.startofday(dt_fim_validade_w))) or ((dt_inicio_seg_radi_w IS NOT NULL AND dt_inicio_seg_radi_w::text <> '') and not(establishment_timezone_utils.startofday(dt_inicio_seg_radi_w) between establishment_timezone_utils.startofday(dt_inicio_validade_w) and establishment_timezone_utils.startofday(dt_fim_validade_w))) or ((dt_fim_seg_radi_w IS NOT NULL AND dt_fim_seg_radi_w::text <> '') and not(establishment_timezone_utils.startofday(dt_fim_seg_radi_w) between establishment_timezone_utils.startofday(dt_inicio_validade_w) and establishment_timezone_utils.startofday(dt_fim_validade_w))) or ((dt_inicio_ter_radi_w IS NOT NULL AND dt_inicio_ter_radi_w::text <> '') and not(establishment_timezone_utils.startofday(dt_inicio_ter_radi_w) between establishment_timezone_utils.startofday(dt_inicio_validade_w) and establishment_timezone_utils.startofday(dt_fim_validade_w))) or ((dt_fim_ter_radi_w IS NOT NULL AND dt_fim_ter_radi_w::text <> '') and not(establishment_timezone_utils.startofday(dt_fim_ter_radi_w) between establishment_timezone_utils.startofday(dt_inicio_validade_w) and establishment_timezone_utils.startofday(dt_fim_validade_w)))) then
			begin
			ds_detalhe_w    := substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' ||  nr_interno_conta_p ||
					'; ' || ds_texto_apac_w || ' ' || nr_apac_w ||'; ' || ds_proc_apac_w || ' ' || cd_procedimento_apac_w,1,255);
			CALL sus_gravar_inconsistencia(nr_interno_conta_p, 299, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
			end;
		end if;
		end;
	end if;
	
	if (Sus_Obter_Inco_Ativa(300)) then
		begin
		if (ie_tipo_laudo_apac_w = '05') then
			begin
			qt_proc_bar_w := 0;
			if (coalesce(ie_gastrec_desv_duode_w,'N') = 'S') then
				qt_proc_bar_w := qt_proc_bar_w + 1;
			end if;
			if (coalesce(ie_gastrec_vert_manga_w,'N') = 'S') then
				qt_proc_bar_w := qt_proc_bar_w + 1;
			end if;
			if (coalesce(ie_gastrec_deri_intes_w,'N') = 'S') then
				qt_proc_bar_w := qt_proc_bar_w + 1;
			end if;
			if (coalesce(ie_gastrec_vert_banda_w,'N') = 'S') then
				qt_proc_bar_w := qt_proc_bar_w + 1;
			end if;
			if	((qt_proc_bar_w = 0) or (qt_proc_bar_w > 1)) then
				begin
				ds_detalhe_w    := substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' ||  nr_interno_conta_p ||
					'; ' || ds_texto_apac_w || ' ' || nr_apac_w ||'; ' || ds_proc_apac_w || ' ' || cd_procedimento_apac_w,1,255);
				CALL sus_gravar_inconsistencia(nr_interno_conta_p, 300, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
				end;
			end if;			
			end;
		end if;
		
		end;
	end if;
	
	if (Sus_Obter_Inco_Ativa(301)) then
		begin
		if (ie_tipo_laudo_apac_w = '05') then
			begin
			if (coalesce(nr_aih_bariatrica_w,0) = 0) then
				begin
				ds_detalhe_w    := substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' ||  nr_interno_conta_p ||
					'; ' || ds_texto_apac_w || ' ' || nr_apac_w ||'; ' || ds_proc_apac_w || ' ' || cd_procedimento_apac_w,1,255);
				CALL sus_gravar_inconsistencia(nr_interno_conta_p, 301, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
				end;
			end if;			
			end;
		end if;
		
		end;
	end if;
	
end if;

if (Sus_Obter_Inco_Ativa(163)) then
	begin
	if (dt_ocorrencia_w IS NOT NULL AND dt_ocorrencia_w::text <> '') and (dt_competencia_w IS NOT NULL AND dt_competencia_w::text <> '') and (to_char(dt_ocorrencia_w,'mm/yyyy') <> to_char(dt_competencia_w,'mm/yyyy')) then
		begin
		ds_detalhe_w    := substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' ||  nr_interno_conta_p ||
							'; ' || ds_texto_apac_w || ' ' || nr_apac_w || '; ' || wheb_mensagem_pck.get_texto(304215)||': ' || dt_competencia_w || '; ' ||wheb_mensagem_pck.get_texto(304209) ||': '|| dt_ocorrencia_w ,1,255);
		CALL sus_gravar_inconsistencia(nr_interno_conta_p, 163, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
		end;
	end if;
	end;
end if;

if (Sus_Obter_Inco_Ativa(164)) then
	begin
	if (coalesce(dt_ocorrencia_w::text, '') = '') and (ie_tipo_apac_w = 3) then
		begin
		ds_detalhe_w    := substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' ||  nr_interno_conta_p ||
							'; ' || ds_texto_apac_w || ' ' || nr_apac_w ||'; ' || ds_proc_apac_w || ' ' || cd_procedimento_apac_w,1,255);
		CALL sus_gravar_inconsistencia(nr_interno_conta_p, 164, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
		end;
	end if;
	end;
end if;

if (Sus_Obter_Inco_Ativa(172)) then
	begin
	begin
	select	coalesce(cd_medico_requisitante,cd_profis_requisitante)
	into STRICT	cd_medico_req_laudo_w
	from	sus_laudo_paciente
	where	nr_apac	= nr_apac_w;
	exception
		when others then
		cd_medico_req_laudo_w	:= null;
	end;
	
	if	not(coalesce(cd_medico_req_laudo_w::text, '') = '') and (cd_medico_req_laudo_w <> cd_medico_responsavel_w) then
		begin
		ds_detalhe_w	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' ||  nr_interno_conta_p ||
							'; ' || ds_texto_apac_w || ' ' || nr_apac_w ||
							'; ' || wheb_mensagem_pck.get_texto(275651) || ' APAC: ' || cd_medico_responsavel_w || '; '|| wheb_mensagem_pck.get_texto(304255) ||': ' || cd_medico_req_laudo_w,1,255);
		CALL sus_gravar_inconsistencia(nr_interno_conta_p, 172, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
		end;
	end if;
	end;
end if;

if (Sus_Obter_Inco_Ativa(173)) then
	begin
	begin
	select	cd_medico_executor
	into STRICT	cd_medico_req_laudo_w
	from	procedimento_paciente
	where	nr_interno_conta	= nr_interno_conta_p
	and	cd_procedimento		= cd_procedimento_apac_w;
	exception
		when others then
		cd_medico_req_laudo_w	:= null;
	end;
	
	if	not(coalesce(cd_medico_req_laudo_w::text, '') = '') and (cd_medico_req_laudo_w <> cd_medico_responsavel_w) then
		begin
		ds_detalhe_w	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' ||  nr_interno_conta_p ||
							'; ' || ds_texto_apac_w || ' ' || nr_apac_w ||
							'; ' || wheb_mensagem_pck.get_texto(275651) || ' APAC: ' || cd_medico_responsavel_w || '; '|| wheb_mensagem_pck.get_texto(304257) ||': ' || cd_medico_req_laudo_w,1,255);
		CALL sus_gravar_inconsistencia(nr_interno_conta_p, 173, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
		end;
	end if;
	end;
end if;

if (Sus_Obter_Inco_Ativa(177)) and (establishment_timezone_utils.startofmonth(dt_emissao_w) <> establishment_timezone_utils.startofmonth(dt_competencia_w)) then
	ds_detalhe_w	:= substr('Atend: ' || nr_atendimento_p || '; Conta:'|| nr_interno_conta_p ||'; Apac: ' || nr_apac_w,1,255);
	CALL sus_gravar_inconsistencia(nr_interno_conta_p, 177, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
end if;


if (Sus_Obter_Inco_Ativa(183)) and (coalesce(nr_apac_anterior_w,0) = 0) and (ie_tipo_apac_w = 2)then
	ds_detalhe_w	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' ||  nr_interno_conta_p ||
				'; ' || ds_texto_apac_w || ' ' || nr_apac_w,1,255);
	CALL sus_gravar_inconsistencia(nr_interno_conta_p, 183, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
end if;

if (Sus_Obter_Inco_Ativa(198)) then
	begin	
   	select	count(*)
	into STRICT	QtPrincApac_w
	from	sus_procedimento_registro
	where	cd_procedimento		= cd_procedimento_apac_w
	and	ie_origem_proced		= ie_origem_proc_apac_w
	and	cd_registro 		= 6;
	
	if (QtPrincApac_w = 0) then
		begin
		ds_detalhe_w	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' ||
						nr_interno_conta_p ||'; ' || ds_texto_apac_w || ' ' || nr_apac_w || '; ' || ds_proc_apac_w || ' ' || cd_procedimento_apac_w,1,255);
		CALL sus_gravar_inconsistencia(nr_interno_conta_p, 198, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
		end;
	end if;	
	end;
end if;	

if (sus_obter_inco_atv_conta(201,nr_interno_conta_p,null)) then
	begin
	
	open C01;
	loop
	fetch C01 into	
		qt_procedimento_w,
		cd_proc_secundario_w,
		ie_origem_proc_sec_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		
		begin
		select	max(qt_proc_permitida)
		into STRICT	qt_proc_compat_w
		from	sus_proc_compativel
		where	cd_proc_principal 	= cd_procedimento_apac_w
		and	ie_origem_proc_princ	= ie_origem_proc_apac_w
		and	cd_proc_secundario	= cd_proc_secundario_w
		and	ie_origem_proc_sec	= ie_origem_proc_sec_w
		and	ie_tipo_compatibilidade	= 1;			
		exception
		when others then
			qt_proc_compat_w := -1;
		end;

		if (qt_procedimento_w > qt_proc_compat_w) and (qt_proc_compat_w > 0) then
			ds_detalhe_w	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' ||  nr_interno_conta_p ||
						'; ' || ds_proc_apac_w || ' ' || cd_procedimento_apac_w  || '; ' || wheb_mensagem_pck.get_texto(278119) || cd_proc_secundario_w || '; Qtd: ' || qt_procedimento_w || '; Max: ' || qt_proc_compat_w,1,255);
			CALL sus_gravar_inconsistencia(nr_interno_conta_p, 201, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
		end if;
			
		
		end;
	end loop;
	close C01;
	
	end;
end if;
	
if (Sus_Obter_Inco_Ativa(209)) and (coalesce(cd_medico_responsavel_w,'X') <> 'X')then
	begin
	
	select	coalesce(max(nr_cartao_nac_sus),'0')
	into STRICT	nr_cns_resp_apac_w
	from	pessoa_fisica
	where	cd_pessoa_fisica	= cd_medico_responsavel_w;
	
	if (nr_cns_resp_apac_w = '0') then
		ds_detalhe_w	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' ||
						nr_interno_conta_p ||'; ' || ds_texto_apac_w || ' ' || nr_apac_w ||  '; ' || wheb_mensagem_pck.get_texto(304147)  || ' ' || cd_medico_responsavel_w,1,255);
		CALL sus_gravar_inconsistencia(nr_interno_conta_p, 209, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
	end if;
	
	end;
end if;

if (Sus_Obter_Inco_Ativa(210)) and (coalesce(cd_medico_autorizador_w,'X') <> 'X')then
	begin
	
	select	coalesce(max(nr_cartao_nac_sus),'0')
	into STRICT	nr_cns_resp_apac_w
	from	pessoa_fisica
	where	cd_pessoa_fisica	= cd_medico_autorizador_w;
	
	if (nr_cns_resp_apac_w = '0') then
		ds_detalhe_w	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' ||
						nr_interno_conta_p ||'; ' || ds_texto_apac_w || ' ' || nr_apac_w || '; ' || wheb_mensagem_pck.get_texto(304149) || ' ' || cd_medico_autorizador_w,1,255);
		CALL sus_gravar_inconsistencia(nr_interno_conta_p, 210, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
	end if;
	
	end;
end if;

if (Sus_Obter_Inco_Ativa(219)) and (ie_tipo_apac_w = 2) and (ie_dados_apac_cont_w = 'N') then
	begin
		
	select  count(*)
	into STRICT	qt_apac_ini_w
	from	w_susapac_interf
	where	nr_apac = nr_apac_w
	and		dt_inicio_validade = dt_inicio_validade_w
	and		ie_tipo_apac = 1;
	
	if (qt_apac_ini_w > 0) then
		begin
		
		nr_cns_paciente_w := coalesce(substr(obter_dados_pf(obter_pessoa_atendimento(nr_atendimento_p,'C'),'CNS'),1,15),'0');
		
		begin
		select  count(*)
		into STRICT	qt_cns_apac_ini_w
		from	w_susapac_interf
		where	nr_apac = nr_apac_w
		and	coalesce(nr_cns,0) = nr_cns_paciente_w
		and		dt_inicio_validade = dt_inicio_validade_w
		and		ie_tipo_apac = 1;
		exception
		when others then
			qt_cns_apac_ini_w := 0;
		end;				
		
		if (qt_cns_apac_ini_w = 0) then
			ds_detalhe_w	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' ||
						nr_interno_conta_p ||'; ' || ds_texto_apac_w || ' ' || nr_apac_w || '; '|| wheb_mensagem_pck.get_texto(287909) || ': ' || nr_cns_paciente_w,1,255);
			CALL sus_gravar_inconsistencia(nr_interno_conta_p, 219, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
		end if;
		
		end;
	end if;	
	
	end;
end if;

if (Sus_Obter_Inco_Ativa(229)) then
	begin
	
	begin
	select	count(*)
	into STRICT	qt_reg_apac_w
	from	sus_apac_unif a,
		atendimento_paciente b
	where	a.nr_atendimento = b.nr_atendimento
	and	a.nr_sequencia 	<> nr_seq_apac_w
	and	a.nr_apac	= nr_apac_w
	and	a.dt_competencia = dt_competencia_w
	and	b.cd_pessoa_fisica = cd_pessoa_fisica_w;
	exception
	when others then
		qt_reg_apac_w := 0;
	end;	
			
	if (qt_reg_apac_w > 0) then
		begin
		ds_detalhe_w	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' ||  nr_interno_conta_p ||
				'; ' || ds_texto_apac_w || ' ' || nr_apac_w || '; '|| wheb_mensagem_pck.get_texto(304150) || ': ' || dt_competencia_w,1,255);
		CALL sus_gravar_inconsistencia(nr_interno_conta_p, 229, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
		end;
	end if;
	
	end;
end if;
	/* 235 - Procedimento BPA dentro de uma conta APAC */

if (Sus_Obter_Inco_Ativa(235)) then
	begin
	
	begin
	select	coalesce(max(cd_procedimento),0)
	into STRICT	cd_proc_bpa_w
	from	procedimento_paciente
	where	sus_obter_tiporeg_proc(cd_procedimento,ie_origem_proced, 'C', 3) = 0
	and	ie_origem_proced = 7
	and	nr_interno_conta = nr_interno_conta_p;
	exception
	when others then
	cd_proc_bpa_w := 0;	
	end;
	
	if (cd_proc_bpa_w <> 0) then
		begin
		ds_detalhe_w	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' ||  nr_interno_conta_p ||
				'; ' || ds_texto_apac_w || ' ' || nr_apac_w ||  '; ' || wheb_mensagem_pck.get_texto(278134) || ' ' || cd_proc_bpa_w,1,255);
		CALL sus_gravar_inconsistencia(nr_interno_conta_p, 235, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p); 		
		end;
	end if;
	
	end;
end if;

if (Sus_Obter_Inco_Ativa(240)) then
	begin
	
	if (cd_forma_org_w <> 0) then
		begin
		select	coalesce(max(a.nr_atendimento),0),
			coalesce(max(a.nr_apac),0)
		into STRICT	nr_atendimento_w,
			nr_apac_ant_w
		from	sus_apac_unif a,
			atendimento_paciente b
		where	b.nr_atendimento = a.nr_atendimento
		and	Sus_Obter_Estrut_Proc(cd_procedimento,ie_origem_proced, 'C', 'F') = cd_forma_org_w
		and	((a.nr_apac <> nr_apac_w AND nr_apac_w <> 0) or (cd_procedimento <> cd_procedimento_apac_w))
		and	coalesce(a.dt_ocorrencia::text, '') = ''
		and	b.cd_pessoa_fisica = cd_pessoa_fisica_w
		and	a.dt_fim_validade > dt_inicio_validade_w
		and	a.nr_sequencia < nr_seq_apac_w
		and	a.dt_competencia = dt_competencia_w;
		
		if (nr_atendimento_w <> 0) then
			begin
			ds_detalhe_w	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' ||  nr_interno_conta_p ||
						'; ' || ds_texto_apac_w || ' ' || nr_apac_w || '; '|| wheb_mensagem_pck.get_texto(304260) || ' ' || nr_atendimento_w || '; '|| wheb_mensagem_pck.get_texto(304261)||': ' || nr_apac_ant_w,1,255);
			CALL sus_gravar_inconsistencia(nr_interno_conta_p, 240, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p); 		
			end;
		end if;	
		end;
	end if;
	
	end;
end if;

if (Sus_Obter_Inco_Ativa(244)) then
	begin
	
	select	count(*)
	into STRICT	qt_proc_inib_w
	from	procedimento_paciente a
	where	a.nr_atendimento = nr_atendimento_p
	and	a.nr_interno_conta = nr_interno_conta_p
	and	a.cd_procedimento = 304080071
	and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
	and	a.cd_procedimento <> cd_procedimento_apac_w	
	and	not exists (	SELECT	1
                from    sus_proc_compativel x
                where   x.cd_proc_principal     = cd_procedimento_apac_w
                and     x.ie_origem_proc_princ  = ie_origem_proc_apac_w
                and     x.cd_proc_secundario    = a.cd_procedimento
                and     x.ie_origem_proc_sec    = a.ie_origem_proced
                and     ie_tipo_compatibilidade = 1);

	if (qt_proc_inib_w > 0) then
		begin
		ds_detalhe_w	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' ||  nr_interno_conta_p ||
						'; ' || ds_texto_apac_w || ' ' || nr_apac_w ||  '; ' || ds_texto_proced_w || ' '  || cd_procedimento_apac_w,1,255);
		CALL sus_gravar_inconsistencia(nr_interno_conta_p, 244, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p); 		
		end;
	end if;	
	
	end;
end if;

if (Sus_Obter_Inco_Ativa(245)) then
	begin
	
	select	count(*)
	into STRICT	qt_proc_inib_w
	from	procedimento_paciente a
	where	a.nr_atendimento = nr_atendimento_p
	and	a.nr_interno_conta = nr_interno_conta_p
	and	a.cd_procedimento = 304080012
	and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
	and	a.cd_procedimento <> cd_procedimento_apac_w	
	and	not exists (	SELECT	1
				from	procedimento_paciente x
				where	x.nr_interno_conta = a.nr_interno_conta
				and	x.cd_procedimento = cd_procedimento_apac_w
				and	sus_obter_estrut_proc(x.cd_procedimento,x.ie_origem_proced,'C','F') in ('30406','30407'));

	if (qt_proc_inib_w > 0) then
		begin
		ds_detalhe_w	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' ||  nr_interno_conta_p ||
					'; ' || ds_texto_apac_w || ' ' || nr_apac_w ||  '; ' || ds_texto_proced_w || ' '  || cd_procedimento_apac_w,1,255);
		CALL sus_gravar_inconsistencia(nr_interno_conta_p, 245, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p); 		
		end;
	end if;	
	
	end;
end if;

if (Sus_Obter_Inco_Ativa(259)) then
	begin
	if	((coalesce(cd_cid_primeiro_trat_w,'X') = 'X') and (dt_pri_tratamento_w IS NOT NULL AND dt_pri_tratamento_w::text <> '')) or
		((coalesce(cd_cid_primeiro_trat_w,'X') <> 'X') and (coalesce(dt_pri_tratamento_w::text, '') = '')) then
		ds_detalhe_w	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' ||  nr_interno_conta_p ||
					'; ' || ds_texto_apac_w || ' ' || nr_apac_w ||  '; ' || ds_texto_proced_w || ' '  || cd_procedimento_apac_w,1,255);
		CALL sus_gravar_inconsistencia(nr_interno_conta_p, 259, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
	end if;
	
	if	((coalesce(cd_cid_segundo_trat_w,'X') = 'X') and (dt_seg_tratamento_w IS NOT NULL AND dt_seg_tratamento_w::text <> '')) or
		((coalesce(cd_cid_segundo_trat_w,'X') <> 'X') and (coalesce(dt_seg_tratamento_w::text, '') = '')) then
		ds_detalhe_w	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' ||  nr_interno_conta_p ||
						'; ' || ds_texto_apac_w || ' ' || nr_apac_w ||  '; ' || ds_texto_proced_w || ' '  || cd_procedimento_apac_w,1,255);
		CALL sus_gravar_inconsistencia(nr_interno_conta_p, 259, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
	end if;
	
	if	((coalesce(cd_cid_terceiro_trat_w,'X') = 'X') and (dt_ter_tratamento_w IS NOT NULL AND dt_ter_tratamento_w::text <> '')) or
		((coalesce(cd_cid_terceiro_trat_w,'X') <> 'X') and (coalesce(dt_ter_tratamento_w::text, '') = '')) then
		ds_detalhe_w	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' ||  nr_interno_conta_p ||
						'; ' || ds_texto_apac_w || ' ' || nr_apac_w ||  '; ' || ds_texto_proced_w || ' '  || cd_procedimento_apac_w,1,255);
		CALL sus_gravar_inconsistencia(nr_interno_conta_p, 259, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
	end if;
	end;
end if;

if (Sus_Obter_Inco_Ativa(261)) and
	((coalesce(cd_cid_pri_radiacao_w,'X') <> 'X') and (coalesce(nr_campos_pri_radi_w::text, '') = '')) or
	((coalesce(cd_cid_seg_radiacao_w,'X') <> 'X') and (coalesce(nr_campos_seg_radi_w::text, '') = '')) or
	((coalesce(cd_cid_ter_radiacao_w,'X') <> 'X') and (coalesce(nr_campos_ter_radi_w::text, '') = '')) then
		
	ds_detalhe_w	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' ||  nr_interno_conta_p ||
					'; ' || ds_texto_apac_w || ' ' || nr_apac_w ||  '; ' || ds_texto_proced_w || ' '  || cd_procedimento_apac_w,1,255);
	CALL sus_gravar_inconsistencia(nr_interno_conta_p,261,ds_detalhe_w,cd_estabelecimento_w,nm_usuario_p);
	
end if;

if (Sus_Obter_Inco_Ativa(267)) and (ie_tipo_laudo_apac_w in ('02','10')) and --Alterado por lhalves em 08/01/2015 OS 787111, incluso o tipo de laudo 10 - Dialise
	(ie_tipo_apac_w = 2) and (coalesce(nr_tru_w,0) = 0) then
	begin
	
	ds_detalhe_w	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' ||  nr_interno_conta_p ||
				'; ' || ds_texto_apac_w || ' ' || nr_apac_w ||  '; ' || ds_texto_proced_w || ' '  || cd_procedimento_apac_w,1,255);
	CALL sus_gravar_inconsistencia(nr_interno_conta_p,267,ds_detalhe_w,cd_estabelecimento_w,nm_usuario_p);
	
	end;
end if;

/*270 - A data de vigencia de uma das APACs de continuidade*/

if (Sus_Obter_Inco_Ativa(270)) then
	begin
	select	count(a.nr_sequencia)
	into STRICT	qt_dif_vigencia_w
	from	sus_apac_unif a
	where	a.nr_apac = nr_apac_w
	and	a.nr_atendimento = nr_atendimento_p
	and	a.cd_procedimento = cd_procedimento_apac_w
	and	a.ie_tipo_apac = 1
	and	exists (SELECT	1
			from	sus_apac_unif x
			where	x.nr_apac = a.nr_apac
			and		x.nr_atendimento = a.nr_atendimento
			and		x.cd_procedimento = a.cd_procedimento
			and		x.ie_tipo_apac = 2
			and		((establishment_timezone_utils.startofday(x.dt_inicio_validade) <> establishment_timezone_utils.startofday(a.dt_inicio_validade)) or (establishment_timezone_utils.startofday(x.dt_fim_validade) <> establishment_timezone_utils.startofday(a.dt_fim_validade))))  LIMIT 1;
	end;
	if (qt_dif_vigencia_w > 0) then
		begin
		ds_detalhe_w	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_apac_w || ' ' || nr_apac_w ||  '; ' || ds_texto_proced_w || ' '  || cd_procedimento_apac_w,1,255);
		CALL sus_gravar_inconsistencia(nr_interno_conta_p,270,ds_detalhe_w,cd_estabelecimento_w,nm_usuario_p);
		end;
	end if;
end if;

if (sus_obter_inco_atv_conta(271,nr_interno_conta_p,null)) and (coalesce(obter_se_alta_obito(nr_atendimento_p),'N') = 'S') and (coalesce(cd_motivo_cobranca_w,0) <> 0) and
	((dt_alta_w IS NOT NULL AND dt_alta_w::text <> '') and (establishment_timezone_utils.startofmonth(dt_competencia_w) = establishment_timezone_utils.startofmonth(dt_alta_w))) then
	begin
		
	if	not(cd_motivo_cobranca_w in (25,41,42,43,65,66,67)) then
		begin
		ds_detalhe_w	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' ||  nr_interno_conta_p ||
					'; ' || ds_texto_apac_w || ' ' || nr_apac_w ||  '; '|| wheb_mensagem_pck.get_texto(304264) || ' ' || cd_motivo_cobranca_w,1,255);
		CALL sus_gravar_inconsistencia(nr_interno_conta_p,271,ds_detalhe_w,cd_estabelecimento_w,nm_usuario_p);
		end;
	end if;
	
	end;
end if;

if (Sus_Obter_Inco_Ativa(278)) and (cd_procedimento_apac_w = 506010023) then
	
	begin
	select	coalesce(a.nr_apac,0)
	into STRICT	nr_apac_ww
	from	sus_apac_unif a,
		atendimento_paciente b
	where	b.nr_atendimento 	= a.nr_atendimento
	and	b.cd_pessoa_fisica 	= cd_pessoa_fisica_w
	and	a.cd_procedimento 	= cd_procedimento_apac_w
	and	a.cd_cid_principal	= cd_cid_principal_w
	and	((a.nr_apac <> nr_apac_w) and (nr_apac_w <> 0) and (a.nr_apac <> 0))
	and	clock_timestamp() between a.dt_inicio_validade and dt_fim_validade  LIMIT 1;
	exception
	when others then
		nr_apac_ww := 0;
	end;
		
	if (nr_apac_ww > 0) then
		begin
		ds_detalhe_w	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' ||  nr_interno_conta_p ||
					'; ' || ds_texto_apac_w || ' ' || nr_apac_w ||  '; ' ||
					ds_texto_proced_w || ' '  || cd_procedimento_apac_w || '; '|| wheb_mensagem_pck.get_texto(304265)|| ' ' || nr_apac_ww,1,255);
		CALL sus_gravar_inconsistencia(nr_interno_conta_p,278,ds_detalhe_w,cd_estabelecimento_w,nm_usuario_p);
		end;
	end if;	
end if;		

if (Sus_Obter_Inco_Ativa(279)) and (cd_forma_org_w = 30401) then

	begin
	select	coalesce(a.nr_apac,0)
	into STRICT	nr_apac_ww
	from	sus_apac_unif a,
		atendimento_paciente b
	where	b.nr_atendimento 	= a.nr_atendimento
	and	b.cd_pessoa_fisica 	= cd_pessoa_fisica_w
	and	((a.nr_apac <> nr_apac_w) and (nr_apac_w <> 0) and (a.nr_apac <> 0))
	and	Sus_Obter_Estrut_Proc(cd_procedimento, ie_origem_proced,'C','F') = cd_forma_org_w
	and	clock_timestamp() between a.dt_inicio_validade and dt_fim_validade
	and	not exists (	SELECT 1
				from	sus_proc_compativel x
				where	x.cd_proc_principal 	= cd_procedimento_apac_w
				and	x.ie_origem_proc_princ 	= ie_origem_proc_apac_w
				and	x.cd_proc_secundario	= a.cd_procedimento
				and	x.ie_origem_proc_sec	= a.ie_origem_proced
				and	ie_tipo_compatibilidade	= 1) LIMIT 1;
	exception
	when others then
		nr_apac_ww := 0;
	end;

	if (nr_apac_ww > 0) then
		begin
		ds_detalhe_w	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' ||  nr_interno_conta_p ||
					'; ' || ds_texto_apac_w || ' ' || nr_apac_w ||  '; ' ||
					ds_texto_proced_w || ' '  || cd_procedimento_apac_w || '; '|| wheb_mensagem_pck.get_texto(304265)|| ' ' || nr_apac_ww,1,255);
		CALL sus_gravar_inconsistencia(nr_interno_conta_p,279,ds_detalhe_w,cd_estabelecimento_w,nm_usuario_p);
		end;
	end if;
end if;	
	
if (Sus_Obter_Inco_Ativa(280)) and (cd_forma_org_w between 30402 and 30410) then	

        begin
        select	coalesce(a.nr_apac,0),
                coalesce(a.cd_motivo_cobranca,'00'),
                a.dt_ocorrencia
        into STRICT	nr_apac_ww,
                cd_motivo_cobranca_ww,
                dt_ocorrencia_ww
        from	sus_apac_unif a,
                atendimento_paciente b
        where	b.nr_atendimento 	= a.nr_atendimento
        and	b.cd_pessoa_fisica 	= cd_pessoa_fisica_w
        and	a.nr_interno_conta	<> nr_interno_conta_p
        and	a.cd_procedimento	<> cd_procedimento_apac_w
        and	Sus_Obter_Estrut_Proc(cd_procedimento, ie_origem_proced,'C','F') between 30402 and 30410
        and	establishment_timezone_utils.startofmonth(dt_competencia_w) between establishment_timezone_utils.startofmonth(a.dt_inicio_validade) and establishment_timezone_utils.startofmonth(a.dt_fim_validade)
        and	not exists (	SELECT 1
				from	sus_proc_compativel x
				where	x.cd_proc_principal 	= cd_procedimento_apac_w
				and	x.ie_origem_proc_princ 	= ie_origem_proc_apac_w
				and	x.cd_proc_secundario	= a.cd_procedimento
				and	x.ie_origem_proc_sec	= a.ie_origem_proced
				and	ie_tipo_compatibilidade	= 3
				
union

				SELECT 1
				from	sus_proc_compativel x
				where	x.cd_proc_principal 	= a.cd_procedimento
				and	x.ie_origem_proc_princ 	= a.ie_origem_proced
				and	x.cd_proc_secundario	= cd_procedimento_apac_w
				and	x.ie_origem_proc_sec	= ie_origem_proc_apac_w
				and	ie_tipo_compatibilidade	= 3)
        and     a.nr_sequencia =(select  max(u.nr_sequencia)
                                from    sus_apac_unif u
                                where   u.nr_atendimento = a.nr_atendimento
                                and     u.nr_apac = a.nr_apac) LIMIT 1;
        exception
        when others then
                nr_apac_ww := 0;
                cd_motivo_cobranca_ww := '00';
                dt_ocorrencia_ww := null;
        end;

	if (nr_apac_ww > 0) and
                ((cd_motivo_cobranca_ww in ('21','28','41','42','43')) or (dt_ocorrencia_ww > dt_emissao_w))then
		begin
		ds_detalhe_w	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' ||  nr_interno_conta_p ||
					'; ' || ds_texto_apac_w || ' ' || nr_apac_w ||  '; ' || ds_texto_compet_w || ' ' || dt_competencia_w || '; ' ||
					ds_texto_proced_w || ' '  || cd_procedimento_apac_w || '; '|| wheb_mensagem_pck.get_texto(304265)|| ' ' || nr_apac_ww,1,255);
		CALL sus_gravar_inconsistencia(nr_interno_conta_p,280,ds_detalhe_w,cd_estabelecimento_w,nm_usuario_p);
		end;
	end if;		
end if;

if (Sus_Obter_Inco_Ativa(305)) and (ie_tipo_laudo_apac_w = '03') or (ie_tipo_laudo_apac_w = '04') then
	
	if (dt_diag_cito_hist_w IS NOT NULL AND dt_diag_cito_hist_w::text <> '') then
	
		if (dt_diag_cito_hist_w > dt_autorizacao_w) and (dt_autorizacao_w IS NOT NULL AND dt_autorizacao_w::text <> '') then
			begin
			ds_detalhe_w	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' ||  nr_interno_conta_p ||
							'; ' || ds_texto_apac_w || ' ' || nr_apac_w ||  '; ' || ds_texto_dt_diagnostico_w || ' ' || dt_diag_cito_hist_w,1,255);
			CALL sus_gravar_inconsistencia(nr_interno_conta_p,305,ds_detalhe_w,cd_estabelecimento_w,nm_usuario_p);
			end;
		end if;
		
		if (dt_diag_cito_hist_w > dt_solicitacao_w) and (dt_solicitacao_w IS NOT NULL AND dt_solicitacao_w::text <> '') then
			begin
			ds_detalhe_w	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' ||  nr_interno_conta_p ||
							'; ' || ds_texto_apac_w || ' ' || nr_apac_w ||  '; ' || ds_texto_dt_diagnostico_w || ' ' || dt_diag_cito_hist_w,1,255);
			CALL sus_gravar_inconsistencia(nr_interno_conta_p,305,ds_detalhe_w,cd_estabelecimento_w,nm_usuario_p);
			end;
		end if;
			
		if (dt_diag_cito_hist_w > dt_inicio_tratamento_w) and (dt_inicio_tratamento_w IS NOT NULL AND dt_inicio_tratamento_w::text <> '') then			
			begin
			ds_detalhe_w	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' ||  nr_interno_conta_p ||
							'; ' || ds_texto_apac_w || ' ' || nr_apac_w ||  '; ' || ds_texto_dt_diagnostico_w || ' ' || dt_diag_cito_hist_w,1,255);
			CALL sus_gravar_inconsistencia(nr_interno_conta_p,305,ds_detalhe_w,cd_estabelecimento_w,nm_usuario_p);
			end;
		end if;

	end if;
end if;

if (Sus_Obter_Inco_Ativa(307)) then

	if (establishment_timezone_utils.startofmonth(dt_competencia_w) <> establishment_timezone_utils.startofmonth(coalesce(dt_referencia_conta_w, dt_competencia_w))) then
		begin
		ds_detalhe_w	:= substr(ds_texto_atend_w || ' ' || nr_atendimento_p || '; ' || ds_texto_conta_w || ' ' ||  nr_interno_conta_p ||
						'; ' || ds_texto_apac_w || ' ' || nr_apac_w ||  '; ' || ds_texto_compet_w || ' ' || dt_competencia_w,1,255);
		CALL sus_gravar_inconsistencia(nr_interno_conta_p,307,ds_detalhe_w,cd_estabelecimento_w,nm_usuario_p);
		end;
	end if;

end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE sus_consiste_apac ( nr_interno_conta_p bigint, nr_atendimento_p bigint, nm_usuario_p text) FROM PUBLIC;

