-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_consiste_conta_complemento ( nr_seq_conta_p bigint, nr_seq_prestador_p bigint, nr_seq_segurado_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


/* Atenção, não usar mais essa procedure
A procedure agora é a PLS_CONSISTE_GUIA_COMPLEMENTO
*/
cd_procedimento_w		bigint;
cd_grupo_w			bigint;
cd_especialidade_w		bigint;
cd_area_w			bigint;
cd_guia_w			varchar(20);

ie_tipo_guia_w			varchar(2);
ie_tipo_complemento_w		varchar(2);
ie_tipo_conta_compl_w		varchar(2);
ie_origem_proced_w		bigint;
ie_origem_proced_ww		bigint;
ie_preco_w			bigint;

nr_seq_contrato_w		bigint;
nr_seq_prestador_exec_w		bigint;
nr_seq_regra_w			bigint;
nr_seq_guia_w			bigint;
nr_seq_motivo_inc_w		bigint;
nr_seq_plano_w			bigint;
nr_seq_intercambio_w		bigint;

nr_seq_estrutura_mat_w		bigint;
nr_seq_congenere_w		bigint;
nr_seq_material_w		bigint;
cd_material_w			varchar(20);
cd_prestador_w			varchar(30);

nr_seq_estrut_regra_w		bigint;
ie_estrut_mat_w			varchar(1);
ie_tipo_segurado_w		pls_segurado.ie_tipo_segurado%type;


C01 CURSOR FOR
	SELECT 	cd_procedimento,
		ie_origem_proced
	from 	pls_conta_proc
	where	nr_seq_conta = nr_seq_conta_p;

C02 CURSOR FOR
	SELECT  cd_material
	from 	pls_conta_mat
	where	nr_seq_conta = nr_seq_conta_p;


BEGIN

select	ie_tipo_guia,
	nr_seq_prestador_exec,
	cd_guia
into STRICT	ie_tipo_guia_w,
	nr_seq_prestador_exec_w,
	cd_guia_w
from	pls_conta
where 	nr_sequencia = nr_seq_conta_p;

select	coalesce(max(nr_seq_contrato),0),
	coalesce(max(nr_seq_plano),0),
	coalesce(max(nr_seq_intercambio),0),
	coalesce(max(nr_seq_congenere),0),
	max(ie_tipo_segurado)
into STRICT	nr_seq_contrato_w,
	nr_seq_plano_w,
	nr_seq_intercambio_w,
	nr_seq_congenere_w,
	ie_tipo_segurado_w
from	pls_segurado
where	nr_sequencia = nr_seq_segurado_p;

begin
select	ie_preco
into STRICT	ie_preco_w
from	pls_plano
where	nr_sequencia	= nr_seq_plano_w;
exception
when others then
	ie_preco_w		:= 0;
end;

begin
select	max(nr_sequencia)
into STRICT	nr_seq_guia_w
from	pls_guia_plano
where	cd_guia		= cd_guia_w
and	nr_seq_segurado	= nr_seq_segurado_p;
exception
when others then
	nr_seq_guia_w	:= 0;
end;

if (nr_seq_guia_w	<> 0) then
	select	max(nr_seq_motivo_inclusao)
	into STRICT	nr_seq_motivo_inc_w
	from	pls_execucao_requisicao
	where	nr_seq_guia	= nr_seq_guia_w;
end if;

select	max(cd_prestador)
into STRICT	cd_prestador_w
from	pls_prestador
where	nr_sequencia	= nr_seq_prestador_p;

open C01;
loop
fetch C01 into
	cd_procedimento_w,
	ie_origem_proced_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	SELECT * FROM pls_obter_estrut_proc(	cd_procedimento_w, ie_origem_proced_w, cd_area_w, cd_especialidade_w, cd_grupo_w, ie_origem_proced_ww) INTO STRICT cd_area_w, cd_especialidade_w, cd_grupo_w, ie_origem_proced_ww;

	select	max(nr_sequencia)
	into STRICT	nr_seq_regra_w
	from	pls_regra_conta_compl
	where (coalesce(ie_tipo_guia::text, '') = ''	or CASE WHEN ie_tipo_guia='1' THEN '5' WHEN ie_tipo_guia='2' THEN '4'  ELSE ie_tipo_guia END 	= ie_tipo_guia_w)
	and (coalesce(nr_seq_prestador::text, '') = ''	or nr_seq_prestador	= nr_seq_prestador_exec_w)
	and (coalesce(nr_seq_contrato::text, '') = ''	or nr_seq_contrato	= nr_seq_contrato_w)
	and (coalesce(ie_preco::text, '') = ''	or ie_preco		= ie_preco_w)
	and (coalesce(nr_seq_grupo_prestador::text, '') = ''	or pls_obter_se_prestador_grupo(nr_seq_grupo_prestador, nr_seq_prestador_exec_w)	= 'S')
	and (coalesce(nr_seq_intercambio::text, '') = ''	or nr_seq_intercambio	= nr_seq_intercambio_w)
	and	coalesce(nr_seq_congenere,nr_seq_congenere_w)		= nr_seq_congenere_w
	and     coalesce(cd_procedimento,cd_procedimento_w)        		= cd_procedimento_w
        and     coalesce(ie_origem_proced,ie_origem_proced_w)      		= ie_origem_proced_ww
        and     coalesce(cd_grupo_proc,cd_grupo_w)                 		= cd_grupo_w
        and     coalesce(cd_especialidade, cd_especialidade_w) 		= cd_especialidade_w
        and     coalesce(cd_area_procedimento, cd_area_w)          		= cd_area_w
	and	((coalesce(cd_prestador::text, '') = '') or (cd_prestador = coalesce(cd_prestador_w,'0')))
	and (coalesce(nr_seq_motivo_inclusao,nr_seq_motivo_inc_w)	= nr_seq_motivo_inc_w)
	and (coalesce(ie_tipo_segurado::text, '') = '' or ie_tipo_segurado	= ie_tipo_segurado_w)
	and	ie_situacao 						= 'A'
	and	clock_timestamp()	between(dt_inicio_vigencia) and (fim_dia(coalesce(dt_fim_vigencia, clock_timestamp())));

	if (nr_seq_regra_w IS NOT NULL AND nr_seq_regra_w::text <> '') then
		select	ie_tipo_complemento
		into STRICT	ie_tipo_complemento_w
		from	pls_regra_conta_compl
		where	nr_sequencia	= nr_seq_regra_w;

		if (ie_tipo_complemento_w = 1) then
			ie_tipo_conta_compl_w := 1;
		else
			ie_tipo_conta_compl_w := 4;
		end if;

		update	pls_conta
		set	ie_estagio_complemento 	= ie_tipo_conta_compl_w,
			ie_origem_conta		= 'C',
			nm_usuario 		= nm_usuario_p,
			dt_atualizacao 		= clock_timestamp()
		where	nr_sequencia 		= nr_seq_conta_p;
	end if;
	end;
end loop;
close C01;

open C02;
loop
fetch C02 into
	cd_material_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin
	select	max(nr_sequencia),
		nr_seq_estrut_mat
	into STRICT 	nr_seq_material_w,
		nr_seq_estrutura_mat_w
	from	pls_material
	where	cd_material = cd_material_w;

	select	max(nr_sequencia),
		max(nr_seq_estrutura_mat)
	into STRICT	nr_seq_regra_w,
		nr_seq_estrut_regra_w
	from	pls_regra_conta_compl
	where (coalesce(ie_tipo_guia::text, '') = ''	or CASE WHEN ie_tipo_guia='1' THEN '5' WHEN ie_tipo_guia='2' THEN '4'  ELSE ie_tipo_guia END 	= ie_tipo_guia_w)
	and (coalesce(nr_seq_prestador::text, '') = ''	or nr_seq_prestador	= nr_seq_prestador_exec_w)
	and (coalesce(nr_seq_contrato::text, '') = ''	or nr_seq_contrato	= nr_seq_contrato_w)
	and (coalesce(ie_preco::text, '') = ''	or ie_preco		= ie_preco_w)
	and (coalesce(nr_seq_grupo_prestador::text, '') = ''	or pls_obter_se_prestador_grupo(nr_seq_grupo_prestador, nr_seq_prestador_exec_w)	= 'S')
	and (coalesce(nr_seq_intercambio::text, '') = ''	or nr_seq_intercambio	= nr_seq_intercambio_w)
	and	coalesce(nr_seq_congenere,nr_seq_congenere_w)		= nr_seq_congenere_w
	and	coalesce(nr_seq_material,nr_seq_material_w) = nr_seq_material_w
	and	((coalesce(cd_prestador::text, '') = '') or (cd_prestador = coalesce(cd_prestador_w,'0')))
	and (coalesce(nr_seq_motivo_inclusao,nr_seq_motivo_inc_w)	= nr_seq_motivo_inc_w)
	and	ie_situacao 						= 'A'
	and	clock_timestamp()	between(dt_inicio_vigencia) and (fim_dia(coalesce(dt_fim_vigencia, clock_timestamp())));

	ie_estrut_mat_w		:= 'S';

	if (nr_seq_estrut_regra_w IS NOT NULL AND nr_seq_estrut_regra_w::text <> '') then
		if (pls_obter_se_mat_estrutura(nr_seq_material_w, nr_seq_estrut_regra_w) = 'N') then
			ie_estrut_mat_w	:= 'N';
		end if;
	end if;

	if (nr_seq_regra_w IS NOT NULL AND nr_seq_regra_w::text <> '') and (ie_estrut_mat_w = 'S') then
		select	ie_tipo_complemento
		into STRICT	ie_tipo_complemento_w
		from	pls_regra_conta_compl
		where	nr_sequencia	= nr_seq_regra_w;

		if (ie_tipo_complemento_w = 1) then
			ie_tipo_conta_compl_w := 1;
		else
			ie_tipo_conta_compl_w := 4;
		end if;

		update	pls_conta
		set	ie_estagio_complemento 	= ie_tipo_conta_compl_w,
			ie_origem_conta		= 'C',
			nm_usuario 		= nm_usuario_p,
			dt_atualizacao 		= clock_timestamp()
		where	nr_sequencia 		= nr_seq_conta_p;
	end if;
	end;
end loop;
close C02;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_consiste_conta_complemento ( nr_seq_conta_p bigint, nr_seq_prestador_p bigint, nr_seq_segurado_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

