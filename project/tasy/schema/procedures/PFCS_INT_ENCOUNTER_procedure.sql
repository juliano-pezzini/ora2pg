-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



--
-- dblink wrapper to call function pfcs_int_encounter as an autonomous transaction
--
CREATE EXTENSION IF NOT EXISTS dblink;

CREATE OR REPLACE PROCEDURE pfcs_int_encounter ( nr_atendimento_p bigint, ie_status_p text, ie_tipo_atendimento_p bigint, cd_clinica_p text, ds_clinica_p text, cd_pessoa_fisica_p text, dt_entrada_p timestamp, dt_saida_p timestamp, ds_sintoma_paciente_p text, cd_medico_atendimento_p text, cd_procedencia_p text, ds_local_alta_p text, cd_cgc_p text, cd_escala_triagem_p text, dt_alta_prevista_p timestamp, cd_estabelecimento_p text, nm_setor_leito_p text, dt_entrada_unidade_p timestamp, dt_saida_unidade_p timestamp, nm_usuario_p text, ie_commit_p text) AS $body$
DECLARE
	-- Change this to reflect the dblink connection string
	v_conn_str  text := format('port=%s dbname=%s user=%s', current_setting('port'), current_database(), current_user);
	v_query     text;

BEGIN
	v_query := 'CALL pfcs_int_encounter_atx ( ' || quote_nullable(nr_atendimento_p) || ',' || quote_nullable(ie_status_p) || ',' || quote_nullable(ie_tipo_atendimento_p) || ',' || quote_nullable(cd_clinica_p) || ',' || quote_nullable(ds_clinica_p) || ',' || quote_nullable(cd_pessoa_fisica_p) || ',' || quote_nullable(dt_entrada_p) || ',' || quote_nullable(dt_saida_p) || ',' || quote_nullable(ds_sintoma_paciente_p) || ',' || quote_nullable(cd_medico_atendimento_p) || ',' || quote_nullable(cd_procedencia_p) || ',' || quote_nullable(ds_local_alta_p) || ',' || quote_nullable(cd_cgc_p) || ',' || quote_nullable(cd_escala_triagem_p) || ',' || quote_nullable(dt_alta_prevista_p) || ',' || quote_nullable(cd_estabelecimento_p) || ',' || quote_nullable(nm_setor_leito_p) || ',' || quote_nullable(dt_entrada_unidade_p) || ',' || quote_nullable(dt_saida_unidade_p) || ',' || quote_nullable(nm_usuario_p) || ',' || quote_nullable(ie_commit_p) || ' )';
	PERFORM * FROM dblink(v_conn_str, v_query) AS p (ret boolean);

END;
$body$ LANGUAGE plpgsql SECURITY DEFINER;




CREATE OR REPLACE PROCEDURE pfcs_int_encounter_atx ( nr_atendimento_p bigint, ie_status_p text, ie_tipo_atendimento_p bigint, cd_clinica_p text, ds_clinica_p text, cd_pessoa_fisica_p text, dt_entrada_p timestamp, dt_saida_p timestamp, ds_sintoma_paciente_p text, cd_medico_atendimento_p text, cd_procedencia_p text, ds_local_alta_p text, cd_cgc_p text, cd_escala_triagem_p text, dt_alta_prevista_p timestamp, cd_estabelecimento_p text, nm_setor_leito_p text, dt_entrada_unidade_p timestamp, dt_saida_unidade_p timestamp, nm_usuario_p text, ie_commit_p text) AS $body$
DECLARE


json_w        			philips_json;
json_data_w   			text;
lista_json_mov_w philips_json := philips_json();
lista_json_w philips_json_list := philips_json_list();
ie_tipo_atendimento_w	atendimento_paciente.nm_medico_externo%type;
ds_escala_triagem_w		atendimento_paciente.nm_medico_externo%type;
cd_doenca_w				cid_doenca.cd_doenca_cid%type;
nr_seq_precaucao_w		atendimento_precaucao.nr_seq_precaucao%type;
ie_pressao_negativa_w	cih_precaucao.ie_pressao_negativa%type;
ie_faz_uso_epi_w		cih_precaucao.ie_faz_uso_epi%type;
ie_detento_w			classif_pessoa.ie_detento%type;
ie_agressivo_w			classif_pessoa.ie_agressivo%type;
dt_inicio_vigencia_w	pessoa_classif.dt_inicio_vigencia%type;
ie_dependente_w			pessoa_fisica.ie_dependente%type;
param_version_pfcs_w 	funcao_param_usuario.vl_parametro%type;
cd_procedencia_w		procedencia.cd_procedencia_fhir%type;

C01 CURSOR FOR
	SELECT 	CASE WHEN a.cd_classif_setor=1 THEN 'ER' WHEN a.cd_classif_setor=2 THEN 'OR' WHEN a.cd_classif_setor=3 THEN 'HU' WHEN a.cd_classif_setor=4 THEN (CASE WHEN coalesce(a.IE_SEMI_INTENSIVA,'N')='S' THEN 'TCU'  ELSE 'ICU' END ) WHEN a.cd_classif_setor=8 THEN  'PTRES' WHEN a.cd_classif_setor=9 THEN 'PEDU' END  location_type_w,
			c.DT_ENTRADA_UNIDADE DT_ENTRADA_UNIDADE_w,
			c.DT_SAIDA_UNIDADE DT_SAIDA_UNIDADE_w,
			REPLACE(c.cd_setor_atendimento||'@'||substr(obter_nome_setor(c.cd_setor_atendimento),1,100),'.',' ')||'.'||REPLACE(c.cd_unidade_basica,'.',' ')||'.'||REPLACE(c.cd_unidade_compl,'.',' ') NM_SETOR_LEITO_w
	from setor_atendimento a, unidade_atendimento b, atend_paciente_unidade c
	where a.cd_setor_atendimento = b.cd_setor_atendimento
	and b.nr_atendimento = c.nr_atendimento
	and b.nr_atendimento = nr_atendimento_p
	and c.ie_passagem_setor = 'N'
	order by c.DT_ENTRADA_UNIDADE asc;
BEGIN
if (coalesce(nr_atendimento_p,0) > 0) and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') then

	/* Importar paciente vinculado ao atendimento */
	
	CALL pfcs_int_patient(cd_pessoa_fisica_p, cd_cgc_p, nm_usuario_p);
	
	/* Importar medico vinculado ao atendimento */
	
	CALL pfcs_int_practitioner(cd_medico_atendimento_p, nr_atendimento_p, cd_cgc_p, nm_usuario_p);

	select 	CASE WHEN ie_tipo_atendimento_p=3 THEN 'emergency' WHEN ie_tipo_atendimento_p=8 THEN 'emergency' WHEN ie_tipo_atendimento_p=1 THEN 'inpatient'  ELSE null END ,
			CASE WHEN TO_CHAR(cd_escala_triagem_p)='1' THEN 'emergency' WHEN TO_CHAR(cd_escala_triagem_p)='2' THEN 'Very Urgent' WHEN TO_CHAR(cd_escala_triagem_p)='3' THEN 'Urgent' WHEN TO_CHAR(cd_escala_triagem_p)='4' THEN 'Low urgency' WHEN TO_CHAR(cd_escala_triagem_p)='5' THEN 'Nonurgent'  ELSE 'Urgent' END ,
			obter_cod_diagnostico_atend(nr_atendimento_p, 'N'),
			obter_atendimento_precaucao(nr_atendimento_p, 'C') nr_seq_precaucao,
			(select max(coalesce(p.cd_procedencia_fhir,'other')) from procedencia p where p.cd_procedencia = cd_procedencia_p)
	into STRICT 	ie_tipo_atendimento_w,
			ds_escala_triagem_w,
			cd_doenca_w,
			nr_seq_precaucao_w,
			cd_procedencia_w
	;
	
	param_version_pfcs_w := obter_param_usuario(9041, 14, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, param_version_pfcs_w);

	json_w := philips_json();
	json_w.put('DATA_ATUAL', TO_CHAR(clock_timestamp(),'YYYY-MM-DD"T"HH24:MI:SS".000Z"'));
	json_w.put('NR_ATENDIMENTO', nr_atendimento_p);
	json_w.put('IE_STATUS', ie_status_p);
	json_w.put('IE_TIPO_ATENDIMENTO', ie_tipo_atendimento_w);
	json_w.put('CD_CLINICA', cd_clinica_p);
	json_w.put('DS_CLINICA', ds_clinica_p);
	json_w.put('CD_PESSOA_FISICA', cd_pessoa_fisica_p);
	json_w.put('DT_ENTRADA', TO_CHAR(dt_entrada_p,'YYYY-MM-DD"T"HH24:MI:SS".000Z"'));
	json_w.put('DT_ALTA', TO_CHAR(dt_saida_p,'YYYY-MM-DD"T"HH24:MI:SS".000Z"'));
	json_w.put('DS_SINTOMA_PACIENTE', ds_sintoma_paciente_p);
	json_w.put('CD_MEDICO_ATENDIMENTO', cd_medico_atendimento_p);
	json_w.put('CD_PROCEDENCIA', cd_procedencia_w);
	json_w.put('DS_LOCAL_ALTA', ds_local_alta_p);
	json_w.put('CD_ESTABELECIMENTO', cd_cgc_p);
	json_w.put('CD_ESCALA_TRIAGEM', cd_escala_triagem_p);
	json_w.put('DS_ESCALA_TRIAGEM', ds_escala_triagem_w);
	json_w.put('DT_ALTA_PREVISTA', TO_CHAR(dt_alta_prevista_p,'YYYY-MM-DD"T"HH24:MI:SS".000Z"'));
	json_w.put('versionID', coalesce(param_version_pfcs_w,'1.2'));
	json_w.put('orgid', cd_cgc_p);
	
	if (cd_doenca_w IS NOT NULL AND cd_doenca_w::text <> '')then
		json_w.put('NR_SEQ_CID_ATENDIMENTO', nr_atendimento_p||dt_entrada_p);
		json_w.put('CD_CID_1', cd_doenca_w);
	end if;
		
	for r_c01 in C01 loop	
	begin
		lista_json_mov_w.put('LOCATION_TYPE',r_c01.location_type_w);
		lista_json_mov_w.put('NM_SETOR_LEITO', r_c01.NM_SETOR_LEITO_w);
		lista_json_mov_w.put('DT_ENTRADA_UNIDADE', TO_CHAR(r_c01.DT_ENTRADA_UNIDADE_w,'YYYY-MM-DD"T"HH24:MI:SS".000Z"'));
		lista_json_mov_w.put('DT_SAIDA_UNIDADE', TO_CHAR(r_c01.DT_SAIDA_UNIDADE_w,'YYYY-MM-DD"T"HH24:MI:SS".000Z"'));
		lista_json_w.append(lista_json_mov_w.to_json_value());
	end;
	end loop;
	json_w.put('LISTA_MOVIMENTACOES', lista_json_w);
	dbms_lob.createtemporary(json_data_w, true);
	json_w.(json_data_w);
	json_data_w := bifrost.send_integration_content('PFCS.encounter.event', json_data_w, nm_usuario_p);
	
	
	if ((nr_seq_precaucao_w IS NOT NULL AND nr_seq_precaucao_w::text <> '') and ie_status_p = 'cancelled')then
		
		select  coalesce(max(ie_pressao_negativa),'N'),  coalesce(max(ie_faz_uso_epi),'N')
		into STRICT	ie_pressao_negativa_w, ie_faz_uso_epi_w
		from	cih_precaucao
		where	nr_sequencia = nr_seq_precaucao_w
		and 	coalesce(ie_isolamento,'N') = 'S';
	
		if (ie_faz_uso_epi_w = 'S')then
			CALL pfcs_int_special_request('SR108'||nr_atendimento_p, 'SR108', 'Droplet', 'inactive', clock_timestamp(), cd_pessoa_fisica_p, nr_atendimento_p, nm_usuario_p, 'N');
		end if;
		
		if (ie_pressao_negativa_w = 'S')then
			CALL pfcs_int_special_request('SR109'||nr_atendimento_p, 'SR109', 'Negative Pressure', 'inactive', clock_timestamp(), cd_pessoa_fisica_p, nr_atendimento_p, nm_usuario_p, 'N');
		end if;
		
	end if;
		
	select  coalesce(max(c.ie_detento), 'N'), coalesce(max(c.ie_agressivo), 'N'), max(coalesce(p.dt_inicio_vigencia,clock_timestamp()))
	into STRICT 	ie_detento_w, ie_agressivo_w, dt_inicio_vigencia_w
	from    pessoa_classif p, classif_pessoa c
	where   c.nr_sequencia = p.nr_seq_classif
	and		p.cd_pessoa_fisica = cd_pessoa_fisica_p
	and  	coalesce(p.dt_inativacao::text, '') = ''
	and 	coalesce(c.ie_situacao, 'I') = 'A';
	
	if (ie_detento_w = 'S') then
		CALL pfcs_int_special_request('SR117'||nr_atendimento_p, 'SR117', 'Inmate', 'active', dt_inicio_vigencia_w, cd_pessoa_fisica_p, nr_atendimento_p, nm_usuario_p, ie_commit_p);
	end if;
	
	if (ie_agressivo_w = 'S') then
		CALL pfcs_int_special_request('SR139'||nr_atendimento_p, 'SR139', 'Aggressive/risk behavior', 'active', clock_timestamp(), cd_pessoa_fisica_p, nr_atendimento_p, nm_usuario_p, ie_commit_p);
	end if;
	
	select 	coalesce(max(ie_dependente),'N')
	into STRICT	ie_dependente_w
	from 	pessoa_fisica p
	where 	p.cd_pessoa_fisica = cd_pessoa_fisica_p;
	
	if (ie_dependente_w = 'S') then
		CALL pfcs_int_special_request('SR138'||nr_atendimento_p, 'SR138', 'Needy patient', 'active', clock_timestamp(), cd_pessoa_fisica_p, nr_atendimento_p, nm_usuario_p, ie_commit_p);
	end if;

end if;

if (coalesce(ie_commit_p,'N') = 'S') then
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pfcs_int_encounter ( nr_atendimento_p bigint, ie_status_p text, ie_tipo_atendimento_p bigint, cd_clinica_p text, ds_clinica_p text, cd_pessoa_fisica_p text, dt_entrada_p timestamp, dt_saida_p timestamp, ds_sintoma_paciente_p text, cd_medico_atendimento_p text, cd_procedencia_p text, ds_local_alta_p text, cd_cgc_p text, cd_escala_triagem_p text, dt_alta_prevista_p timestamp, cd_estabelecimento_p text, nm_setor_leito_p text, dt_entrada_unidade_p timestamp, dt_saida_unidade_p timestamp, nm_usuario_p text, ie_commit_p text) FROM PUBLIC; -- REVOKE ALL ON PROCEDURE pfcs_int_encounter_atx ( nr_atendimento_p bigint, ie_status_p text, ie_tipo_atendimento_p bigint, cd_clinica_p text, ds_clinica_p text, cd_pessoa_fisica_p text, dt_entrada_p timestamp, dt_saida_p timestamp, ds_sintoma_paciente_p text, cd_medico_atendimento_p text, cd_procedencia_p text, ds_local_alta_p text, cd_cgc_p text, cd_escala_triagem_p text, dt_alta_prevista_p timestamp, cd_estabelecimento_p text, nm_setor_leito_p text, dt_entrada_unidade_p timestamp, dt_saida_unidade_p timestamp, nm_usuario_p text, ie_commit_p text) FROM PUBLIC;

