-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE load_achi_procedures_struct ( cd_block_p bigint , ds_ascii_desc_p text, ds_ascii_short_desc_p text, dt_effective_p timestamp, dt_inactive_from timestamp, nm_usuario_p text, ds_error_p INOUT text ) AS $body$
DECLARE


next_seq_area_proc bigint;
next_seq_esp_proc bigint;
next_seq_grupo_proc bigint;
next_seq_esp_proc_w bigint;
qt_registry_proc_area_w bigint;
qt_registry_proc_speciality_w bigint;
qt_registry_proc_group_w bigint;
ds_error_w varchar(2000);


BEGIN

	begin

		select count(*)
		into STRICT qt_registry_proc_area_w
		from area_procedimento
		WHERE cd_original=1
		and CD_SISTEMA_ANT='ACHI'
		and ie_origem_proced=19;

		if (qt_registry_proc_area_w=0) then
		
		select max(cd_area_procedimento)+1 
		INTO STRICT next_seq_area_proc
		FROM area_procedimento;
		
			  begin
				insert into area_procedimento(
				cd_area_procedimento,
				cd_original,
				cd_sistema_ant,
				ds_area_procedimento,
				dt_atualizacao,
				dt_atualizacao_nrec,
				ie_origem_proced,
				nm_usuario,
				nm_usuario_nrec
				) values (
				next_seq_area_proc,
				1,
				'ACHI',
				'ACHI',
				clock_timestamp(),
				clock_timestamp(),
				19,
				nm_usuario_p,
				nm_usuario_p
				);
				end;

		else
    
			update area_procedimento
			set 	dt_atualizacao=clock_timestamp(),
			nm_usuario=nm_usuario_p
			WHERE cd_original=1
			and CD_SISTEMA_ANT='ACHI'
			and ie_origem_proced=19;

		end if;
	end;
	
	begin

    
  
		select count(*)
		into STRICT qt_registry_proc_speciality_w
		from especialidade_proc
		WHERE cd_original=1
		and CD_SISTEMA_ANT='ACHI'
		and ie_origem_proced=19;

		IF (qt_registry_proc_speciality_w=0) THEN

		select max(cd_especialidade)+1 
		INTO STRICT next_seq_esp_proc
		FROM especialidade_proc;
		
			begin
				insert into especialidade_proc(
				cd_area_procedimento,
				cd_especialidade,
				cd_especialidade_medica,
				cd_original,
				cd_sistema_ant,
				ds_especialidade,
				dt_atualizacao,
				dt_atualizacao_nrec,
				ie_origem_proced,
				nm_usuario,
				nm_usuario_nrec
				) values (
				next_seq_area_proc,
				next_seq_esp_proc,
				null,
				1,
				'ACHI',
				'ACHI',
				clock_timestamp(),
				clock_timestamp(),
				19,
				nm_usuario_p,
				nm_usuario_p
				);
			end;

		else

			UPDATE especialidade_proc
			set dt_atualizacao=clock_timestamp(),
			nm_usuario=nm_usuario_p
			where  CD_SISTEMA_ANT='ACHI'
			and    cd_original=1
			AND ie_origem_proced=19;

		end if;
	end;
	
	begin

		SELECT CD_ESPECIALIDADE
		into STRICT next_seq_esp_proc_w
		FROM especialidade_proc
		WHERE ie_origem_proced=19
		AND cd_original=1
		and cd_sistema_ant='ACHI';

		select count(*)
		into STRICT qt_registry_proc_group_w
		from grupo_proc
		where cd_original=cd_block_p
		AND ie_origem_proced=19
		and cd_especialidade=next_seq_esp_proc_w
		and ie_situacao='A';

		IF (qt_registry_proc_group_w=0) THEN
		
		 		
		
		select max(cd_grupo_proc)+1 
		INTO STRICT next_seq_grupo_proc
		FROM grupo_proc;
		
			begin
				insert into grupo_proc(
				cd_especialidade,
				cd_grupo_proc,
				cd_original,
				cd_sistema_ant,
				ds_grupo_proc,
				ds_observacao,
				dt_atualizacao,
				ie_origem_proced,
				ie_situacao,
				nm_usuario
				) values (
				next_seq_esp_proc_w,
				next_seq_grupo_proc,
				cd_block_p,
				cd_block_p,
				substr(ds_ascii_desc_p,1,240),
				null,
				clock_timestamp(),
				19,
				CASE WHEN sign(clock_timestamp()-coalesce(dt_inactive_from,clock_timestamp()))=0 THEN 'A'  ELSE 'I' END ,
				nm_usuario_p
				);
			end;

		else
    
			update grupo_proc
			set  	ds_grupo_proc=substr(ds_ascii_desc_p,1,240),
				dt_atualizacao=clock_timestamp(),
				nm_usuario=nm_usuario_p
				where cd_original=cd_block_p
				AND ie_origem_proced=19
				and ie_situacao='A';

		end if;
	end;
exception
				  when others then
				  ds_error_w	:= sqlerrm(SQLSTATE);
				  ds_error_p:= ds_error_p || obter_desc_exp_idioma(928065,wheb_usuario_pck.get_nr_seq_idioma,'ERR=' || ds_error_w||' ;CODEID=' || cd_block_p);
	
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE load_achi_procedures_struct ( cd_block_p bigint , ds_ascii_desc_p text, ds_ascii_short_desc_p text, dt_effective_p timestamp, dt_inactive_from timestamp, nm_usuario_p text, ds_error_p INOUT text ) FROM PUBLIC;

