-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_copiar_regra_apropr_desp ( nr_contrato_origem_p pls_contrato.nr_sequencia%type, nr_seq_contrato_destino_p pls_contrato.nr_sequencia%type, nr_seq_produto_origem_p pls_plano.nr_sequencia%type, nr_seq_produto_destino_p pls_plano.nr_sequencia%type, nr_seq_regra_origem_p pls_regra_copartic.nr_sequencia%type, dt_inicio_vigencia_p timestamp, ie_opcao_p text, nm_usuario_p text ) AS $body$
DECLARE


/* ie_opcao_p:
	PC: copia as regras de apropriação do produto para o contrato
	PP: copia as regras de apropriação de um produto para outro
	CC: copia as regras de apropriação de um contrato para outro
*/
nr_seq_regra_copartic_nova_w		pls_regra_copartic.nr_sequencia%type;
nr_seq_plano_w				pls_plano.nr_sequencia%type := null;
nr_seq_regra_copartic_w			pls_regra_copartic.nr_sequencia%type;
nr_seq_contrato_w			pls_contrato.nr_sequencia%type;

C01 CURSOR FOR
	SELECT	nr_seq_plano
	from	pls_contrato_plano
	where	nr_seq_contrato	= nr_seq_contrato_destino_p
	and	ie_situacao	= 'A'
	and 	((nr_seq_plano = nr_seq_produto_origem_p) or (coalesce(nr_seq_produto_origem_p,0) = 0))
	group by nr_seq_plano;

C02 CURSOR FOR
	SELECT	nr_sequencia nr_seq_regra_copartic
	from	pls_regra_copartic
	where	nr_seq_plano	= coalesce(nr_seq_plano_w, nr_seq_produto_origem_p)
	and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
	and	clock_timestamp() between coalesce(dt_inicio_vigencia,clock_timestamp()) and coalesce(dt_fim_vigencia,clock_timestamp())
	and (nr_sequencia = nr_seq_regra_origem_p or coalesce(nr_seq_regra_origem_p,0) = 0);

C03 CURSOR FOR
	SELECT	nr_sequencia nr_seq_regra_copartic
	from	pls_regra_copartic
	where	nr_seq_contrato	= nr_seq_contrato_w
	and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
	and	clock_timestamp() between dt_inicio_vigencia and coalesce(dt_fim_vigencia,clock_timestamp());

procedure pls_inserts(	nr_seq_contrato_destino_p	pls_contrato.nr_sequencia%type,
		nr_seq_plano_destino_p		pls_plano.nr_sequencia%type) is

;
BEGIN

select	nextval('pls_regra_copartic_seq')
into STRICT	nr_seq_regra_copartic_nova_w
;

insert	into	pls_regra_copartic(	nr_sequencia, nr_seq_tipo_coparticipacao, dt_atualizacao, nm_usuario, dt_atualizacao_nrec,
		nm_usuario_nrec, nr_seq_contrato, nr_seq_plano, dt_inicio_vigencia,
		ie_tipo_atendimento, vl_maximo_copartic, ie_beneficiario, ie_prestador, ie_conta_medica, ie_utilizacao,
		ie_guia, ie_forma_cobr_internacao, ie_internacao, nr_ordem_prioridade)
	(SELECT	nr_seq_regra_copartic_nova_w, nr_seq_tipo_coparticipacao, clock_timestamp(), nm_usuario_p, clock_timestamp(),
		nm_usuario_p, nr_seq_contrato_destino_p, nr_seq_plano_destino_p, coalesce(dt_inicio_vigencia_p, clock_timestamp()),
		ie_tipo_atendimento, vl_maximo_copartic, ie_beneficiario, ie_prestador, ie_conta_medica, ie_utilizacao,
		ie_guia, coalesce(ie_forma_cobr_internacao,'I'), ie_internacao, nr_ordem_prioridade
	from	pls_regra_copartic
	where	nr_sequencia	= nr_seq_regra_copartic_w);

insert	into	pls_regra_copartic_aprop(	nr_sequencia, nr_seq_regra, nr_seq_centro_apropriacao,
		ie_tipo_apropriacao, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
		vl_apropriacao, tx_apropriacao)
	(SELECT	nextval('pls_regra_copartic_aprop_seq'), nr_seq_regra_copartic_nova_w, nr_seq_centro_apropriacao,
		ie_tipo_apropriacao, clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p,
		vl_apropriacao, tx_apropriacao
	from	pls_regra_copartic_aprop
	where	nr_seq_regra	= nr_seq_regra_copartic_w);

insert	into	pls_regra_copartic_benef(	nr_sequencia, nr_seq_regra, dt_atualizacao, nm_usuario,
		dt_atualizacao_nrec, nm_usuario_nrec, ie_titularidade, nr_seq_plano, qt_idade_min,
		qt_idade_max, ie_tipo_parentesco, dt_contrato_de, dt_contrato_ate, nr_faixa_salarial_inicial,
		nr_faixa_salarial_final, ie_situacao_benef)
	(SELECT	nextval('pls_regra_copartic_benef_seq'), nr_seq_regra_copartic_nova_w, clock_timestamp(), nm_usuario_p,
		clock_timestamp(), nm_usuario_p, ie_titularidade, nr_seq_plano, qt_idade_min,
		qt_idade_max, ie_tipo_parentesco, dt_contrato_de, dt_contrato_ate, nr_faixa_salarial_inicial,
		nr_faixa_salarial_final, ie_situacao_benef
	from	pls_regra_copartic_benef
	where	nr_seq_regra	= nr_seq_regra_copartic_w);

insert	into	pls_regra_copartic_conta(	nr_sequencia, nr_seq_regra, dt_atualizacao, nm_usuario,
		dt_atualizacao_nrec, nm_usuario_nrec, ie_tipo_atendimento, ie_forma_cobr_internacao,
		vl_item_minimo, vl_item_maximo, nr_seq_tipo_conta, ie_cobranca_prevista)
	(SELECT	nextval('pls_regra_copartic_conta_seq'), nr_seq_regra_copartic_nova_w, clock_timestamp(), nm_usuario_p,
		clock_timestamp(), nm_usuario_p, ie_tipo_atendimento, ie_forma_cobr_internacao,
		vl_item_minimo, vl_item_maximo, nr_seq_tipo_conta, ie_cobranca_prevista
	from	pls_regra_copartic_conta
	where	nr_seq_regra	= nr_seq_regra_copartic_w);

insert	into	pls_regra_copartic_util(	nr_sequencia, nr_seq_regra, dt_atualizacao, nm_usuario,
		dt_atualizacao_nrec, nm_usuario_nrec, qt_evento_minimo, qt_evento_maximo, ie_tipo_data_consistencia,
		qt_periodo_ocorrencia, ie_tipo_periodo_ocor, nr_seq_grupo_serv, ie_eventos_incidencia)
	(SELECT	nextval('pls_regra_copartic_util_seq'), nr_seq_regra_copartic_nova_w, clock_timestamp(), nm_usuario_p,
		clock_timestamp(), nm_usuario_p, qt_evento_minimo, qt_evento_maximo, ie_tipo_data_consistencia,
		qt_periodo_ocorrencia, ie_tipo_periodo_ocor, nr_seq_grupo_serv, ie_eventos_incidencia
	from	pls_regra_copartic_util
	where	nr_seq_regra	= nr_seq_regra_copartic_w);

insert	into	pls_regra_copartic_prest(	nr_sequencia, nr_seq_regra, dt_atualizacao, nm_usuario,
		dt_atualizacao_nrec, nm_usuario_nrec, ie_prestador_cooperado, nr_seq_prestador_atend,
		nr_seq_tipo_prestador_atend)
	(SELECT	nextval('pls_regra_copartic_prest_seq'), nr_seq_regra_copartic_nova_w, clock_timestamp(), nm_usuario_p,
		clock_timestamp(), nm_usuario_p, ie_prestador_cooperado, 	nr_seq_prestador_atend,
		nr_seq_tipo_prestador_atend
	from	pls_regra_copartic_prest
	where	nr_seq_regra	= nr_seq_regra_copartic_w);

insert	into	pls_regra_copartic_guia(	nr_sequencia, nr_seq_regra, dt_atualizacao, nm_usuario,
		dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_controle_interno, ie_tipo_atend_tiss)
	(SELECT	nextval('pls_regra_copartic_guia_seq'), nr_seq_regra_copartic_nova_w, clock_timestamp(), nm_usuario_p,
		clock_timestamp(), nm_usuario_p, nr_seq_controle_interno, ie_tipo_atend_tiss
	from	pls_regra_copartic_guia
	where	nr_seq_regra	= nr_seq_regra_copartic_w);

insert	into	pls_regra_copartic_interna(	nr_sequencia, nr_seq_regra, dt_atualizacao, nm_usuario,
		dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_clinica, qt_diaria_inicial, qt_diaria_final)
	(SELECT	nextval('pls_regra_copartic_interna_seq'), nr_seq_regra_copartic_nova_w, clock_timestamp(), nm_usuario_p,
		clock_timestamp(), nm_usuario_p, nr_seq_clinica, qt_diaria_inicial, qt_diaria_final
	from	pls_regra_copartic_interna
	where	nr_seq_regra	= nr_seq_regra_copartic_w);

end;

begin

if (ie_opcao_p = 'PC') then
	if (nr_seq_contrato_destino_p IS NOT NULL AND nr_seq_contrato_destino_p::text <> '') then
		open C01;
		loop
		fetch C01 into
			nr_seq_plano_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin
			open C02;
			loop
			fetch C02 into
				nr_seq_regra_copartic_w;
			EXIT WHEN NOT FOUND; /* apply on C02 */
				begin
				pls_inserts(nr_seq_contrato_destino_p, null);
				end;
			end loop;
			close C02;
			end;
		end loop;
		close C01;
	end if;
elsif (ie_opcao_p = 'PP') then
	if (nr_seq_produto_origem_p IS NOT NULL AND nr_seq_produto_origem_p::text <> '') and (nr_seq_produto_destino_p IS NOT NULL AND nr_seq_produto_destino_p::text <> '') then
		open C02;
		loop
		fetch C02 into
			nr_seq_regra_copartic_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin
			pls_inserts(null, nr_seq_produto_destino_p);
			end;
		end loop;
		close C02;
	end if;
elsif (ie_opcao_p = 'CC') then
	if (nr_contrato_origem_p IS NOT NULL AND nr_contrato_origem_p::text <> '') and (nr_seq_contrato_destino_p IS NOT NULL AND nr_seq_contrato_destino_p::text <> '') then
		select	max(nr_sequencia)
		into STRICT	nr_seq_contrato_w
		from	pls_contrato
		where	nr_contrato = nr_contrato_origem_p;

		open C03;
		loop
		fetch C03 into
			nr_seq_regra_copartic_w;
		EXIT WHEN NOT FOUND; /* apply on C03 */
			begin
			pls_inserts(nr_seq_contrato_destino_p, null);
			end;
		end loop;
		close C03;
	end if;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_copiar_regra_apropr_desp ( nr_contrato_origem_p pls_contrato.nr_sequencia%type, nr_seq_contrato_destino_p pls_contrato.nr_sequencia%type, nr_seq_produto_origem_p pls_plano.nr_sequencia%type, nr_seq_produto_destino_p pls_plano.nr_sequencia%type, nr_seq_regra_origem_p pls_regra_copartic.nr_sequencia%type, dt_inicio_vigencia_p timestamp, ie_opcao_p text, nm_usuario_p text ) FROM PUBLIC;

