-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_login_grupo_contrato ( nr_seq_usuario_p bigint, nr_seq_grupo_contrato_p bigint, nm_usuario_p text, ie_origem_contrato_p INOUT text, nm_estipulante_p INOUT text, tipo_estipulante_p INOUT text, cd_estipulante_p INOUT text, cd_estabelecimento_p INOUT bigint, nr_seq_pagador_p INOUT bigint, nr_contrato_p INOUT bigint, nr_sequencia_p INOUT bigint, nr_seq_intercambio_p INOUT bigint, ds_retorno_p INOUT text) AS $body$
DECLARE

         
 
nr_seq_grupo_contrato_w bigint;
qt_contrato_login_w   integer;	
ds_mensagem_log_w    varchar(255);
ie_tipo_grupo_w     varchar(2);


BEGIN 
 
select count(*) 
into STRICT  qt_contrato_login_w 
from  pls_grupo_contrato_web a, 
		pls_contrato_web b 
where  a.nr_sequencia = b.nr_seq_usuario_grupo 
and  	a.ie_situacao = 'A' 
and  	a.nr_sequencia = nr_seq_usuario_p;
 
select max(a.ie_tipo_grupo) 
into STRICT  ie_tipo_grupo_w 
from  pls_grupo_contrato a, 
		pls_grupo_contrato_web b 
where  b.nr_seq_grupo_contrato = a.nr_sequencia 
and  	b.nr_sequencia = nr_seq_usuario_p;
 
ds_retorno_p := '';
 
-- Contrato de Plano de Saúde 
if (coalesce(ie_tipo_grupo_w,'C') = 'C') then 
  if (qt_contrato_login_w > 0) then 
    ie_origem_contrato_p := 'LOGIN';
    begin 
      select * 
      into STRICT 	nm_estipulante_p, 
					tipo_estipulante_p,  
					cd_estipulante_p,    
					cd_estabelecimento_p, 
					nr_seq_pagador_p,             
					nr_contrato_p,   
					nr_sequencia_p, 
					nr_seq_intercambio_p 
      from (	SELECT 	distinct	 
								pls_obter_dados_contrato(nr_sequencia, 'E') nm_estipulante,    
								pls_obter_dados_contrato(nr_sequencia, 'TE') tipo_estipulante,  
								pls_obter_dados_contrato(nr_sequencia, 'C') cd_estipulante,    
								pls_obter_dados_contrato(nr_sequencia, 'EST') cd_estabelecimento, 
								pls_obter_dados_contrato(nr_sequencia, 'PP') nr_seq_pagador,   
								nr_contrato,   
								nr_sequencia, 
								null 
						from  pls_contrato                    
						where nr_sequencia in (	select 	nr_seq_contrato 
													from  pls_grupo_contrato_web a, 
															pls_contrato_web b             
													where  a.nr_sequencia = b.nr_seq_usuario_grupo 
													and   a.ie_situacao = 'A' 
													and   a.nr_sequencia = nr_seq_usuario_p	) 
						and ( coalesce(dt_rescisao_contrato::text, '') = '' or dt_rescisao_contrato >= clock_timestamp()	)        
						order by nm_estipulante asc	) alias9 LIMIT 1;
      exception 
        when others then 
        ds_retorno_p := 'Dados do usuário não encontrados';
    end;
  else 
    ie_origem_contrato_p := 'GRUPO';
    begin 
      select 	* 
      into STRICT  nm_estipulante_p, 
					tipo_estipulante_p,  
					cd_estipulante_p,    
					cd_estabelecimento_p, 
					nr_seq_pagador_p,             
					nr_contrato_p,   
					nr_sequencia_p, 
					nr_seq_intercambio_p 
      from (	SELECT distinct 
								pls_obter_dados_contrato(nr_sequencia, 'E') nm_estipulante,    
								pls_obter_dados_contrato(nr_sequencia, 'TE') tipo_estipulante,  
								pls_obter_dados_contrato(nr_sequencia, 'C') cd_estipulante,    
								pls_obter_dados_contrato(nr_sequencia, 'EST') cd_estabelecimento, 
								pls_obter_dados_contrato(nr_sequencia, 'PP') nr_seq_pagador,   
								nr_contrato,   
								nr_sequencia , 
								null 
						from  pls_contrato                    
						where nr_sequencia in (	select	nr_seq_contrato 
													from  pls_contrato_grupo             
													where  nr_seq_grupo = nr_seq_grupo_contrato_p	) 
						and (coalesce(dt_rescisao_contrato::text, '') = '' or dt_rescisao_contrato >= clock_timestamp())      
						order by nm_estipulante asc		) alias9 LIMIT 1;
      exception 
        when others then 
        ds_retorno_p := 'Dados do usuário não encontrados';
    end;
  end if;
elsif (ie_tipo_grupo_w = 'I') then 
  -- Contrato de intercambio 
  if (qt_contrato_login_w > 0) then 
    ie_origem_contrato_p := 'LOGIN';
    begin 
      select 	* 
      into STRICT  nm_estipulante_p, 
					tipo_estipulante_p,  
					cd_estipulante_p,    
					cd_estabelecimento_p, 
					nr_seq_pagador_p,             
					nr_contrato_p,   
					nr_sequencia_p, 
					nr_seq_intercambio_p 
      from (	SELECT	distinct 
								pls_obter_dados_intercambio(nr_sequencia, 'N') nm_estipulante,    
								CASE WHEN coalesce(cd_pessoa_fisica::text, '') = '' THEN  'PJ'  ELSE 'PF' END  tipo_estipulante,  
								CASE WHEN coalesce(cd_pessoa_fisica::text, '') = '' THEN  cd_cgc  ELSE cd_pessoa_fisica END  cd_estipulante, 
								cd_estabelecimento, 
								pls_obter_dados_intercambio(nr_sequencia,'PA') nr_seq_pagador, 
								null nr_contrato,   
								null nr_seq_contrato, 
								nr_sequencia nr_seq_contrato_int  
						from  pls_intercambio                    
						where  nr_sequencia in (	select	b.nr_seq_intercambio 
													from  pls_grupo_contrato_web a, 
															pls_contrato_web b             
													where  a.nr_sequencia = b.nr_seq_usuario_grupo 
													and   a.ie_situacao = 'A' 
													and   a.nr_sequencia = nr_seq_usuario_p	) 
						and (coalesce(dt_exclusao::text, '') = '' or dt_exclusao >= clock_timestamp())        
						order by nm_estipulante asc	) alias8 LIMIT 1;
      exception 
        when others then 
        ds_retorno_p := 'Dados do usuário não encontrados';
    end;
  else 
    ie_origem_contrato_p := 'GRUPO';
    begin 
      select	* 
      into STRICT  nm_estipulante_p, 
					tipo_estipulante_p,  
					cd_estipulante_p,    
					cd_estabelecimento_p, 
					nr_seq_pagador_p,             
					nr_contrato_p,   
					nr_sequencia_p, 
					nr_seq_intercambio_p 
      from (	SELECT distinct 
								pls_obter_dados_intercambio(nr_sequencia, 'N') nm_estipulante,    
								CASE WHEN coalesce(cd_pessoa_fisica::text, '') = '' THEN  'PJ'  ELSE 'PF' END  tipo_estipulante,  
								CASE WHEN coalesce(cd_pessoa_fisica::text, '') = '' THEN  cd_cgc  ELSE cd_pessoa_fisica END  cd_estipulante, 
								cd_estabelecimento, 
								pls_obter_dados_intercambio(nr_sequencia,'PA') nr_seq_pagador, 
								null nr_contrato,   
								null nr_seq_contrato, 
								nr_sequencia nr_seq_contrato_int    
						from  pls_intercambio                    
						where  nr_sequencia in (	select	nr_seq_intercambio 
													from  pls_contrato_grupo             
													where  nr_seq_grupo = nr_seq_grupo_contrato_p	) 
						and (coalesce(dt_exclusao::text, '') = '' or dt_exclusao >= clock_timestamp())          
						order by nm_estipulante asc	) alias8 LIMIT 1;
      exception 
        when others then 
        ds_retorno_p := 'Dados do usuário não encontrados';
    end;
  end if;
end if;
 
ds_mensagem_log_w := 'O usuário '|| nm_usuario_p ||' do grupo de contrato '|| nr_seq_grupo_contrato_p||' logou no portal.';
CALL pls_gravar_log_acesso_portal(null, null, null, null, nr_seq_usuario_p, null, null, null, '1', ds_mensagem_log_w, 'Function - pls_obter_parametros_funcao', 'S');
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_login_grupo_contrato ( nr_seq_usuario_p bigint, nr_seq_grupo_contrato_p bigint, nm_usuario_p text, ie_origem_contrato_p INOUT text, nm_estipulante_p INOUT text, tipo_estipulante_p INOUT text, cd_estipulante_p INOUT text, cd_estabelecimento_p INOUT bigint, nr_seq_pagador_p INOUT bigint, nr_contrato_p INOUT bigint, nr_sequencia_p INOUT bigint, nr_seq_intercambio_p INOUT bigint, ds_retorno_p INOUT text) FROM PUBLIC;

