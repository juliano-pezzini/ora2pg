-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE enviar_comunic_tipo_acomod ( nr_atendimento_p bigint, cd_tipo_acomodacao_p bigint, cd_setor_atendimento_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
cd_convenio_w		integer;
ie_tipo_atendimento_w	smallint;
cd_perfil_w		integer;
nm_usuario_w		varchar(15);
ds_lista_perfis_w	varchar(4000);
ds_lista_usuario_w	varchar(255);
nm_pessoa_fisica_w	varchar(80);
cd_tipo_acomod_w	smallint;
cd_classif_setor_w	varchar(2);

C01 CURSOR FOR 
	SELECT	CD_PERFIL, 
		NM_USUARIO_DESTINO 
	from	regra_aviso_acomod_lib a, 
		regra_aviso_tipo_acomod b 
	where	a.nr_seq_regra_aviso = b.nr_sequencia 
	and	coalesce(ie_tipo_atendimento,ie_tipo_atendimento_w) = ie_tipo_atendimento_w 
	and	coalesce(cd_convenio,cd_convenio_w) = cd_convenio_w;


BEGIN 
 
select	max(cd_classif_setor) 
into STRICT	cd_classif_setor_w 
from 	Setor_Atendimento 
where	cd_setor_atendimento = cd_setor_atendimento_p;
 
if (cd_classif_setor_w in (3,4,8)) and (cd_tipo_acomodacao_p IS NOT NULL AND cd_tipo_acomodacao_p::text <> '') then 
 
	SELECT	MAX(cd_tipo_acomodacao) 
	INTO STRICT	cd_tipo_acomod_w 
	FROM	Atend_categoria_convenio a 
	WHERE	a.nr_atendimento		= nr_atendimento_p 
	 AND	a.dt_inicio_vigencia	= 
			(SELECT	MAX(dt_inicio_vigencia) 
			FROM	Atend_categoria_convenio b 
			WHERE	nr_atendimento	= nr_atendimento_p);
			 
	if (cd_tipo_acomod_w IS NOT NULL AND cd_tipo_acomod_w::text <> '') and (cd_tipo_acomodacao_p <> cd_tipo_acomod_w) then 
		 
		cd_convenio_w		:=	OBTER_CONVENIO_ATENDIMENTO(nr_atendimento_p);
		ie_tipo_atendimento_w	:=	OBTER_TIPO_ATENDIMENTO(nr_atendimento_p);
		ds_lista_perfis_w	:= 	null;
		ds_lista_usuario_w	:=	null;
		 
		open C01;
		loop 
		fetch C01 into	 
			cd_perfil_w, 
			nm_usuario_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin 
			 
			if (cd_perfil_w IS NOT NULL AND cd_perfil_w::text <> '') then 
			 
				ds_lista_perfis_w	:= cd_perfil_w || ',' || ds_lista_perfis_w;
				 
			end if;
			 
			if (nm_usuario_w IS NOT NULL AND nm_usuario_w::text <> '') then 
			 
				ds_lista_usuario_w	:= nm_usuario_w || ',' || ds_lista_usuario_w;
			 
			end if;
			 
			 
			end;
		end loop;
		close C01;
		 
		if (ds_lista_usuario_w IS NOT NULL AND ds_lista_usuario_w::text <> '') or (ds_lista_perfis_w IS NOT NULL AND ds_lista_perfis_w::text <> '') then 
			 
			select	substr(obter_nome_pf(cd_pessoa_fisica),1,80) 
			into STRICT	nm_pessoa_fisica_w 
			from 	atendimento_paciente 
			where 	nr_atendimento = nr_atendimento_p;
 
			insert into comunic_interna( 
				dt_comunicado, 
				ds_titulo, 
				ds_comunicado, 
				nm_usuario, 
				dt_atualizacao, 
				ie_geral, 
				nm_usuario_destino, 
				ds_perfil_adicional, 
				nr_sequencia, 
				ie_gerencial, 
				dt_liberacao, 
				cd_estab_destino 
			) values ( 
				clock_timestamp(), 
				wheb_mensagem_pck.get_texto(801999) || ': ' || nr_atendimento_p, 
				wheb_mensagem_pck.get_texto(802000, 
							'NM_PESSOA_FISICA='||nm_pessoa_fisica_w|| 
							';DS_TIPO_ACOMOD_W='||OBTER_DESC_TIPO_ACOMOD(cd_tipo_acomod_w)|| 
							';DS_SETOR_ATEND='||obter_nome_setor(cd_setor_atendimento_p)|| 
							';DS_TIPO_ACOMOD_P='||OBTER_DESC_TIPO_ACOMOD(cd_tipo_acomodacao_p)), 
				'Tasy', 
				clock_timestamp(), 
				'N', 
				ds_lista_usuario_w, 
				ds_lista_perfis_w, 
				nextval('comunic_interna_seq'), 
				'N', 
				clock_timestamp(), 
				cd_estabelecimento_p);
			 
		 
		end if;
		 
		 
		 
	end if;
end if;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE enviar_comunic_tipo_acomod ( nr_atendimento_p bigint, cd_tipo_acomodacao_p bigint, cd_setor_atendimento_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

