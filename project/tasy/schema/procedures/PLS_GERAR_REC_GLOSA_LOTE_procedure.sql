-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_rec_glosa_lote ( nm_usuario_p usuario.nm_usuario%type, nr_seq_prestador_web_p pls_usuario_web.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nr_seq_lote_p INOUT pls_rec_glosa_lote.nr_sequencia%type, nr_lote_protocolo_p pls_rec_glosa_lote.nr_lote_protocolo%type default null, cd_guia_p pls_rec_glosa_lote.cd_guia%type DEFAULT NULL, cd_guia_prestador_p pls_rec_glosa_lote.cd_guia_prestador%type DEFAULT NULL) AS $body$
DECLARE


nr_seq_lote_w		pls_rec_glosa_lote.nr_sequencia%type;
ie_agrupar_lote_imp_w	pls_parametros_rec_glosa.ie_agrupar_lote_imp%type;


BEGIN

--  Verifica se deve tentar reaproveitar o lote, para agrupar os protocolos, ou se deverá importar sempre um novo
ie_agrupar_lote_imp_w	:= pls_obter_dado_param_rec_glosa(cd_estabelecimento_p, 'AP');

--Para criar um novo, esta variavel deverá ser null
nr_seq_lote_w	:= null;

-- Se deve tentar reaproveitar, pega o max do lote que tenha protocolos "importados", ou seja, ainda não foram integrados. Essa regra não se aplica a webservice (pelo java, atualemnte so sabemos se é webservice pelo nome do usuario)
if	((ie_agrupar_lote_imp_w = 'S') and (upper(nm_usuario_p) != 'WEBSERVICE')) then

	select	max(a.nr_sequencia)
	into STRICT	nr_seq_lote_w
	from	pls_rec_glosa_lote	a,
		pls_rec_glosa_protocolo	b
	where	b.nr_seq_lote		= a.nr_sequencia
	and	a.nr_seq_prestador_web	= nr_seq_prestador_web_p
	and	a.cd_estabelecimento	= cd_estabelecimento_p
	and	a.nr_lote_protocolo	= nr_lote_protocolo_p
	and	b.ie_situacao		= 'I';

end if; -- fim se tenta reaproveitar o lote
-- Se não foi encontrado nenhum lote,  então cria um novo
if (coalesce(nr_seq_lote_w::text, '') = '') then

	select	nextval('pls_rec_glosa_lote_seq')
	into STRICT	nr_seq_lote_w
	;

	insert	into pls_rec_glosa_lote(nr_sequencia, dt_atualizacao, nm_usuario,
					dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_prestador_web,
					dt_envio_lote, cd_estabelecimento, nr_lote_protocolo,
					cd_guia, cd_guia_prestador)
				values (nr_seq_lote_w, clock_timestamp(), nm_usuario_p,
					clock_timestamp(), nm_usuario_p, nr_seq_prestador_web_p,
					clock_timestamp(), cd_estabelecimento_p, nr_lote_protocolo_p,
					cd_guia_p, cd_guia_prestador_p);
end if; -- fim cria novo lote
nr_seq_lote_p := nr_seq_lote_w;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_rec_glosa_lote ( nm_usuario_p usuario.nm_usuario%type, nr_seq_prestador_web_p pls_usuario_web.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nr_seq_lote_p INOUT pls_rec_glosa_lote.nr_sequencia%type, nr_lote_protocolo_p pls_rec_glosa_lote.nr_lote_protocolo%type default null, cd_guia_p pls_rec_glosa_lote.cd_guia%type DEFAULT NULL, cd_guia_prestador_p pls_rec_glosa_lote.cd_guia_prestador%type DEFAULT NULL) FROM PUBLIC;

