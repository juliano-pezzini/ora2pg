-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_cobranca_receita ( nr_seq_lote_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE



nr_seq_conta_banco_w			distribuicao_receita.nr_seq_conta_banco%type;
nr_seq_dist_receita_w			distribuicao_receita.nr_sequencia%type;
nr_titulo_w				titulo_receber_dist_rec.nr_titulo%type;
nr_seq_cobranca_w			cobranca_escritural.nr_sequencia%type;
cd_banco_w				banco_estabelecimento.cd_banco%type;
nr_seq_forma_cobranca_w			distribuicao_receita.nr_seq_forma_cobranca%type;

c_cobranca CURSOR FOR
	SELECT	a.nr_seq_conta_banco,
		a.nr_sequencia,
		a.nr_seq_forma_cobranca
	from	distribuicao_receita	a
	where	a.nr_seq_lote	= nr_seq_lote_p;
	
c_titulo CURSOR FOR
	/*select	a.nr_titulo
	from	titulo_receber_dist_rec	a
	where	a.nr_seq_dist_rec	= nr_seq_dist_receita_w;*/

	--OS 1873097 - Tratado similar a pls_gerar_cobranca_mensalidade, somente considerar titulos cuja a mensalidade esteja definida para gerar cobran√ßa escritural.
	SELECT	a.nr_titulo
	FROM titulo_receber_dist_rec a, titulo_receber b
LEFT OUTER JOIN pls_mensalidade c ON (b.nr_seq_mensalidade = c.nr_sequencia)
WHERE a.nr_seq_dist_rec					= nr_seq_dist_receita_w and a.nr_titulo 						= b.nr_titulo  and coalesce(c.ie_gerar_cobr_escrit, 'S') 	= 'S';	
	

BEGIN
if (nr_seq_lote_p IS NOT NULL AND nr_seq_lote_p::text <> '') then
	open c_cobranca;
	loop
	fetch c_cobranca into	
		nr_seq_conta_banco_w,
		nr_seq_dist_receita_w,
		nr_seq_forma_cobranca_w;
	EXIT WHEN NOT FOUND; /* apply on c_cobranca */
		begin
		begin
		select	a.cd_banco
		into STRICT	cd_banco_w
		from	banco_estabelecimento	a
		where	a.nr_sequencia	= nr_seq_conta_banco_w;
		exception
		when others then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(204646, null);
		end;
		
		select	nextval('cobranca_escritural_seq')
		into STRICT	nr_seq_cobranca_w
		;
		
		insert into cobranca_escritural(nr_sequencia,
			cd_estabelecimento,
			cd_banco,
			ie_remessa_retorno,
			dt_remessa_retorno,
			dt_atualizacao,
			nm_usuario,
			nr_seq_conta_banco,
			ie_emissao_bloqueto,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_forma_cobranca)
		values (nr_seq_cobranca_w,
			cd_estabelecimento_p,
			cd_banco_w,
			'R',
			clock_timestamp(),
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_conta_banco_w,
			2,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_forma_cobranca_w);
		
		open c_titulo;
		loop
		fetch c_titulo into	
			nr_titulo_w;
		EXIT WHEN NOT FOUND; /* apply on c_titulo */
			begin
			CALL vincular_titulo_rec_cobranca(	nr_seq_cobranca_w,
							nr_titulo_w,
							nm_usuario_p,
							null,
							null,
							null,
							null,
							null);
			end;
		end loop;
		close c_titulo;
		
		update	distribuicao_receita
		set	nr_seq_cobr_escrit	= nr_seq_cobranca_w
		where	nr_sequencia		= nr_seq_dist_receita_w;
		end;
	end loop;
	close c_cobranca;	
end if;

update	lote_distribuicao_receita
set	dt_cobranca	= clock_timestamp()
where	nr_sequencia	= nr_seq_lote_p;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_cobranca_receita ( nr_seq_lote_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

