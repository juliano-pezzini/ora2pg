-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_conta_ac_valor_glosa ( nr_seq_conta_proc_p pls_conta_proc.nr_sequencia%type, nr_seq_conta_mat_p pls_conta_mat.nr_sequencia%type, vl_glosa_p pls_conta.vl_glosa%type, ie_tipo_valor_p text, nm_usuario_p text) AS $body$
DECLARE



/*Está rotina deverá ser revisada, verificar as glosas que deverão ser reconsistidas
verificar a possiblidade de passar as mesmas para o formato de ocorrência combinada,
Desta forma iremos garantir que a sua validação será refeita corretamente.

Ajustes
------------------------------------------------------------------------------------------------------------
Ajustado para passar as váriaveis para dentro do cursor garantir que o processo
está sendo refeito para cada linha que passa no cursor.

ie_inativacao_w
qt_glosa_1705_w

drquadros 07/08/2013
------------------------------------------------------------------------------------------------------------
*/
qt_glosa_1705_w		integer;
ie_inativacao_w		varchar(1);

C01 CURSOR FOR
	SELECT	'G'	ie_tipo,
		a.nr_sequencia,
		a.nr_seq_motivo_glosa
	from	pls_conta_glosa		a
	where	nr_seq_conta_proc = nr_seq_conta_proc_p
	
union 	all

	PERFORM	'OC'	ie_tipo,
		b.nr_sequencia,
		b.nr_seq_glosa
	from	pls_ocorrencia_benef	b
	where	nr_seq_conta_proc = nr_seq_conta_proc_p;

C02 CURSOR FOR
	SELECT	'G'	ie_tipo,
		a.nr_sequencia,
		a.nr_seq_motivo_glosa
	from	pls_conta_glosa		a
	where	nr_seq_conta_mat = nr_seq_conta_mat_p
	
union 	all

	PERFORM	'OC'	ie_tipo,
		b.nr_sequencia,
		b.nr_seq_glosa
	from	pls_ocorrencia_benef	b
	where	nr_seq_conta_mat = nr_seq_conta_mat_p;
BEGIN

if (nr_seq_conta_proc_p IS NOT NULL AND nr_seq_conta_proc_p::text <> '')	then
	for	r_C01 in C01 loop
		if (r_C01.ie_tipo = 'G')	then

			qt_glosa_1705_w	:= 0;
			ie_inativacao_w	:= 'S';

			if (ie_tipo_valor_p <> 'A')	then
				select	count(1)
				into STRICT	qt_glosa_1705_w
				from	tiss_motivo_glosa
				where	nr_sequencia 	= r_C01.nr_seq_motivo_glosa
				and	cd_motivo_tiss	= '1705';

				if (qt_glosa_1705_w	> 0)	and (vl_glosa_p	> 0)	then

					update 	pls_conta_glosa	a
					set	ie_situacao		= 'A',
						ie_forma_inativacao	 = NULL
					where	nr_sequencia		= r_C01.nr_sequencia;

					ie_inativacao_w	:= 'N';
				end if;
			end if;

			if (ie_inativacao_w = 'S' or ie_tipo_valor_p = 'A')	then
				update 	pls_conta_glosa	a
				set	ie_situacao		= 'I',
					ie_forma_inativacao	= CASE WHEN ie_forma_inativacao='S' THEN 'US' WHEN ie_forma_inativacao='US' THEN 'US'  ELSE 'U' END
				where	nr_sequencia		= r_C01.nr_sequencia;
			end if;

		elsif (r_C01.ie_tipo = 'OC')	then
			if (ie_tipo_valor_p <> 'A')	then
				select	count(1)
				into STRICT	qt_glosa_1705_w
				from	pls_ocorrencia_benef	a
				where	nr_sequencia = r_C01.nr_sequencia
				and	exists (	SELECT  1
						from	pls_conta_glosa	y
						where (a.nr_seq_glosa = y.nr_sequencia
						or	y.nr_seq_ocorrencia_benef = a.nr_sequencia)
						and	exists (	select 1
									from 	tiss_motivo_glosa x
									where	y.nr_seq_motivo_glosa = x.nr_sequencia
									and	x.cd_motivo_tiss      = '1705'));

				if (qt_glosa_1705_w	> 0)	and (vl_glosa_p	> 0)	then

					update 	pls_ocorrencia_benef	a
					set	ie_situacao		= 'A',
						ie_forma_inativacao	 = NULL
					where	nr_sequencia		= r_C01.nr_sequencia;

					ie_inativacao_w	:= 'N';
				end if;
			end if;

			if (ie_inativacao_w = 'S' or ie_tipo_valor_p = 'A')	then
				update 	pls_ocorrencia_benef	a
				set	ie_situacao		= 'I',
					ie_forma_inativacao	= CASE WHEN ie_forma_inativacao='S' THEN 'US' WHEN ie_forma_inativacao='US' THEN 'US'  ELSE 'U' END
				where	nr_sequencia		= r_C01.nr_sequencia;
			end if;
		end if;
	end loop;

elsif (nr_seq_conta_mat_p IS NOT NULL AND nr_seq_conta_mat_p::text <> '') then
	for	r_C02 in C02 loop
		qt_glosa_1705_w	:= 0;
		ie_inativacao_w	:= 'S';

		if (r_C02.ie_tipo = 'G')	then
			if (ie_tipo_valor_p <> 'A')	then
				select	count(1)
				into STRICT	qt_glosa_1705_w
				from	tiss_motivo_glosa
				where	nr_sequencia 	= r_C02.nr_seq_motivo_glosa
				and	cd_motivo_tiss	= '1705';

				if (qt_glosa_1705_w	> 0)	and (vl_glosa_p	> 0)	then


					update 	pls_conta_glosa	a
					set	ie_situacao		= 'A',
						ie_forma_inativacao	 = NULL
					where	nr_sequencia		= r_C02.nr_sequencia;

					ie_inativacao_w	:= 'N';
				end if;
			end if;

			if (ie_inativacao_w = 'S' or ie_tipo_valor_p = 'A')	then
				update 	pls_conta_glosa	a
				set	ie_situacao		= 'I',
					ie_forma_inativacao	= CASE WHEN ie_forma_inativacao='S' THEN 'US' WHEN ie_forma_inativacao='US' THEN 'US'  ELSE 'U' END
				where	nr_sequencia		= r_C02.nr_sequencia;
			end if;

		elsif (r_C02.ie_tipo = 'OC')	then
			if (ie_tipo_valor_p <> 'A')	then
				select	count(1)
				into STRICT	qt_glosa_1705_w
				from	pls_ocorrencia_benef	a
				where	a.nr_sequencia = r_C02.nr_sequencia
				and	exists (	SELECT  1
						from	pls_conta_glosa	y
						where (a.nr_seq_glosa = y.nr_sequencia
						or	y.nr_seq_ocorrencia_benef = a.nr_sequencia)
						and	exists (	select 1
								from 	tiss_motivo_glosa x
								where	y.nr_seq_motivo_glosa = x.nr_sequencia
								and	x.cd_motivo_tiss      = '1705'));

				if (qt_glosa_1705_w	> 0)	and (vl_glosa_p	> 0)	then

					update 	pls_ocorrencia_benef	a
					set	ie_situacao		= 'A',
						ie_forma_inativacao	 = NULL
					where	nr_sequencia		= r_C02.nr_sequencia;

					ie_inativacao_w	:= 'N';
				end if;
			end if;

			if (ie_inativacao_w = 'S' or ie_tipo_valor_p = 'A')	then
				update 	pls_ocorrencia_benef	a
				set	ie_situacao		= 'I',
					ie_forma_inativacao	= CASE WHEN ie_forma_inativacao='S' THEN 'US' WHEN ie_forma_inativacao='US' THEN 'US'  ELSE 'U' END
				where	nr_sequencia		= r_C02.nr_sequencia;
			end if;
		end if;
	end loop;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_conta_ac_valor_glosa ( nr_seq_conta_proc_p pls_conta_proc.nr_sequencia%type, nr_seq_conta_mat_p pls_conta_mat.nr_sequencia%type, vl_glosa_p pls_conta.vl_glosa%type, ie_tipo_valor_p text, nm_usuario_p text) FROM PUBLIC;

