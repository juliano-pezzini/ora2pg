-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_item_nf_emprestimo ( nr_seq_nota_p bigint, nr_emprestimo_p bigint, nr_sequencia_p bigint, nm_usuario_p text) AS $body$
DECLARE



cd_estabelecimento_w		smallint;
cd_cgc_w			varchar(20);
cd_cgc_emitente_w		varchar(14);
cd_serie_nf_w			nota_fiscal.cd_serie_nf%type;
nr_nota_fiscal_w			varchar(255);
nr_sequencia_nf_w			bigint;
cd_natureza_operacao_w		smallint;
nm_usuario_w			varchar(15);
cd_pessoa_fisica_w		varchar(10);
cd_unid_med_estoque_w		varchar(30);
cd_unid_med_compra_w		varchar(30);
cd_material_estoque_w		integer;
ds_erro_w			varchar(255);
nr_item_nf_w			bigint;
cd_local_estoque_w		integer;
cd_material_w			integer;
qt_emprestimo_w			double precision;
qt_material_w			double precision;
vl_referencia_w			double precision;
nr_seq_dev_w			integer;
qt_conv_compra_estoque_w		double precision;
nr_ordem_compra_w		bigint;
nr_item_oci_w			bigint;


BEGIN

select	a.cd_local_estoque,
	b.cd_material,
	b.qt_emprestimo,
	b.qt_material,
	b.vl_referencia,
	b.nr_ordem_compra,
	b.nr_item_oci
into STRICT	cd_local_estoque_w,
	cd_material_w,
	qt_emprestimo_w,
	qt_material_w,
	vl_referencia_w,
	nr_ordem_compra_w,
	nr_item_oci_w
from	emprestimo a,
	emprestimo_material b
where	a.nr_emprestimo	= b.nr_emprestimo
and	b.nr_sequencia	= nr_sequencia_p
and	b.nr_emprestimo	= nr_emprestimo_p;

select (coalesce(max(nr_item_nf),0)+1)
into STRICT	nr_item_nf_w
from	nota_fiscal_item
where	nr_sequencia	 = nr_seq_nota_p;

select	cd_estabelecimento,
	cd_cgc,
	cd_cgc_emitente,
	cd_serie_nf,
	nr_nota_fiscal,
	nr_sequencia_nf,
	cd_natureza_operacao,
	nm_usuario,
	cd_pessoa_fisica
into STRICT	cd_estabelecimento_w,
	cd_cgc_w,
	cd_cgc_emitente_w,
	cd_serie_nf_w,
	nr_nota_fiscal_w,
	nr_sequencia_nf_w,
	cd_natureza_operacao_w,
	nm_usuario_w,
	cd_pessoa_fisica_w
from	nota_fiscal
where	nr_sequencia = nr_seq_nota_p;

update	nota_fiscal
set	nr_ordem_compra = nr_ordem_compra_w
where	nr_sequencia = nr_seq_nota_p
and	coalesce(nr_ordem_compra::text, '') = '';


select	substr(obter_dados_material_estab(cd_material,cd_estabelecimento_w,'UME'),1,30) cd_unidade_medida_estoque,
	substr(obter_dados_material_estab(cd_material,cd_estabelecimento_w,'UMC'),1,30) cd_unidade_medida_compra,
	cd_material_estoque,
	qt_conv_compra_estoque
into STRICT  	cd_unid_med_estoque_w,
	cd_unid_med_compra_w,
	cd_material_estoque_w,
	qt_conv_compra_estoque_w
from	material
where	cd_material = cd_material_w;

begin
insert into nota_fiscal_item(
	nr_sequencia,
	cd_estabelecimento,
	cd_cgc_emitente,
	cd_serie_nf,
	nr_nota_fiscal,
	nr_sequencia_nf,
	nr_item_nf,
	cd_natureza_operacao,
	qt_item_nf,
	qt_item_estoque,
	vl_unitario_item_nf,
	vl_total_item_nf,
	dt_atualizacao,
	nm_usuario,
	vl_frete,
	vl_desconto,
	vl_despesa_acessoria,
	cd_material,
	cd_material_estoque,
	vl_desconto_rateio,
	vl_seguro,
	vl_liquido,
	pr_desconto,
	cd_unidade_medida_compra,
	cd_unidade_medida_estoque,
	cd_local_estoque,
	nr_emprestimo,
	nr_seq_item_emprestimo,
	ie_forma_gerado_empres,
	nr_ordem_compra,
	nr_item_oci)
values (	nr_seq_nota_p,
	cd_estabelecimento_w,
	cd_cgc_emitente_w,
	cd_serie_nf_w,
	nr_nota_fiscal_w,
	nr_sequencia_nf_w,
	nr_item_nf_w,
	cd_natureza_operacao_w,
	qt_emprestimo_w,
	(qt_conv_compra_estoque_w * qt_emprestimo_w),
	vl_referencia_w,
	(vl_referencia_w * qt_emprestimo_w),
	clock_timestamp(),
	nm_usuario_p,
	0,
	0,
	0,
	cd_material_w,
	cd_material_estoque_w,
	0,
	0,
	(vl_referencia_w * qt_emprestimo_w),
	0,
	cd_unid_med_compra_w,
	cd_unid_med_estoque_w,
	cd_local_estoque_w,
	nr_emprestimo_p,
	nr_sequencia_p,
	'NF',
	nr_ordem_compra_w,
	nr_item_oci_w);
exception
when others then
	ds_erro_w	:= sqlerrm(SQLSTATE);
	if (coalesce(vl_referencia_w::text, '') = '') then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(266000,'DS_ERRO=' || ds_erro_w);
		--'Falta informar o valor do item no emprestimo !' || '#@#@' || chr(10) || ds_erro_w
	end if;
	CALL wheb_mensagem_pck.exibir_mensagem_abort(266001);
	--'Erro ao gerar o item da nota.' || '#@#@'  || chr(10) || ds_erro_w 
end;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_item_nf_emprestimo ( nr_seq_nota_p bigint, nr_emprestimo_p bigint, nr_sequencia_p bigint, nm_usuario_p text) FROM PUBLIC;

