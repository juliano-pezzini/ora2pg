-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE cp_add_outcome (nr_seq_indicator_p bigint, nr_seq_goal_p bigint, nr_seq_prescr_diag_p bigint, nr_seq_prescr_p bigint, ie_type_p text, nm_usuario_p text) AS $body$
DECLARE


                       
nr_seq_pat_cp_indicator_w   patient_cp_indicator.nr_sequencia%type;
nr_seq_prescr_ind_w         pe_prescr_indicator.nr_sequencia%type;
nr_seq_pat_cp_goal_w        patient_cp_goal.nr_sequencia%type;
qt_reg_w                    bigint;

c01 CURSOR FOR
SELECT nr_seq_indicator
from cp_goal_indicator
where nr_seq_goal = nr_seq_goal_p;

BEGIN

if ie_type_p = 'G' then  

  for c01_r in c01 loop

      CALL cp_select_indicator(null, c01_r.nr_seq_indicator, nr_seq_goal_p, null, nm_usuario_p, 'Y', nr_seq_prescr_diag_p);

      select	i.nr_sequencia,
              c.nr_sequencia
      into STRICT nr_seq_pat_cp_indicator_w,
          nr_seq_pat_cp_goal_w
			from	patient_cp_goal c,
            patient_cp_indicator i
			where	c.nr_seq_prescr_diag = nr_seq_prescr_diag_p            
      and c.nr_seq_cp_goal = nr_seq_goal_p			
      and i.nr_seq_pat_cp_goal = c.nr_sequencia
      and i.nr_seq_cp_indicator = c01_r.nr_seq_indicator;
  
      select	count(1)
      into STRICT	qt_reg_w
      from	patient_cp_indicator b,
        patient_cp_goal c,
				pe_prescr_indicator a
      where	a.nr_seq_prescr = nr_seq_prescr_p
      and		a.nr_seq_pat_cp_indicator = b.nr_sequencia
      and   b.nr_seq_pat_cp_goal = c.nr_sequencia
      and   c.nr_seq_prescr_diag = nr_seq_prescr_diag_p
      and		b.nr_seq_cp_indicator = nr_seq_indicator_p;

    if (qt_reg_w = 0) then     
    
       INSERT INTO pe_prescr_indicator(
						nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_seq_prescr,
						nr_seq_pat_cp_indicator								
					) values (
						nextval('pe_prescr_indicator_seq'),
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,								
						nr_seq_prescr_p,
						nr_seq_pat_cp_indicator_w
					);	

        update patient_cp_indicator
        set ie_free_item = 'S'
        where nr_sequencia = nr_seq_pat_cp_indicator_w;

        update patient_cp_goal
        set ie_free_item = 'S'
        where nr_sequencia = nr_seq_pat_cp_goal_w;
    end if;
  end loop;

  commit;
else

  CALL cp_select_indicator(null, nr_seq_indicator_p, nr_seq_goal_p, null, nm_usuario_p, 'Y', nr_seq_prescr_diag_p);

  select	i.nr_sequencia,
          c.nr_sequencia
  into STRICT nr_seq_pat_cp_indicator_w,
       nr_seq_pat_cp_goal_w
	from	patient_cp_goal c,
        patient_cp_indicator i
	where	c.nr_seq_prescr_diag = nr_seq_prescr_diag_p            
  and c.nr_seq_cp_goal = nr_seq_goal_p			
  and i.nr_seq_pat_cp_goal = c.nr_sequencia
  and i.nr_seq_cp_indicator = nr_seq_indicator_p;

  select	count(1)
  into STRICT	qt_reg_w
  from	patient_cp_indicator b,
        patient_cp_goal c,
				pe_prescr_indicator a
	where	a.nr_seq_prescr = nr_seq_prescr_p
	and		a.nr_seq_pat_cp_indicator = b.nr_sequencia
  and   b.nr_seq_pat_cp_goal = c.nr_sequencia
  and   c.nr_seq_prescr_diag = nr_seq_prescr_diag_p
	and		b.nr_seq_cp_indicator = nr_seq_indicator_p;

  if (qt_reg_w = 0) then        
      INSERT INTO pe_prescr_indicator(
						nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_seq_prescr,
						nr_seq_pat_cp_indicator								
					) values (
						nextval('pe_prescr_indicator_seq'),
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,								
						nr_seq_prescr_p,
						nr_seq_pat_cp_indicator_w
					);	

      update patient_cp_indicator
      set ie_free_item = 'S'
      where nr_sequencia = nr_seq_pat_cp_indicator_w;

      update patient_cp_goal
      set ie_free_item = 'S'
      where nr_sequencia = nr_seq_pat_cp_goal_w;
    end if;

    commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE cp_add_outcome (nr_seq_indicator_p bigint, nr_seq_goal_p bigint, nr_seq_prescr_diag_p bigint, nr_seq_prescr_p bigint, ie_type_p text, nm_usuario_p text) FROM PUBLIC;

