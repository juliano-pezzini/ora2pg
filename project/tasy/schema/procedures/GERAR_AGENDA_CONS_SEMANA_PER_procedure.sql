-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_agenda_cons_semana_per ( nr_seq_agenda_p bigint, dt_agenda_p timestamp, ie_frequencia_p text, qt_frequencia_p bigint, ie_final_semana_p text, ds_dias_p text, hr_desejada_p timestamp, nm_usuario_p text, ds_erro_p INOUT text) AS $body$
DECLARE


cd_agenda_w                	bigint;
dt_agenda_w                	timestamp;
nr_minuto_duracao_w        	bigint;
ie_status_agenda_w         	varchar(2);
ie_classif_agenda_w        	varchar(5);
dt_atualizacao_w           	timestamp;
nm_usuario_w               	varchar(15);
cd_convenio_w              	integer;
cd_pessoa_fisica_w         	varchar(10);
nm_pessoa_contato_w        	varchar(50);
ds_observacao_w            	varchar(2000);
ie_status_paciente_w       	varchar(3);
nr_seq_consulta_w          	smallint;
nm_paciente_w              	varchar(80);
nr_atendimento_w           	bigint;
dt_confirmacao_w           	timestamp;
ds_confirmacao_w           	varchar(80);
nr_telefone_w              	varchar(80);
qt_idade_pac_w             	smallint;
nr_seq_plano_w             	bigint;
nr_seq_classif_med_w       	bigint;
nm_usuario_origem_w        	varchar(15);
ie_necessita_contato_w     	varchar(1);
nr_seq_sala_w              	bigint;
cd_categoria_w             	varchar(10);
cd_tipo_acomodacao_w       	smallint;
cd_usuario_convenio_w      	varchar(30);
cd_complemento_w           	varchar(30);
dt_validade_carteira_w     	timestamp;
nr_doc_convenio_w          	varchar(20);
cd_senha_w                 	varchar(20);
nr_seq_agepaci_w           	agenda_consulta.nr_seq_agepaci%type;
ds_senha_w                 	varchar(10);
dt_nascimento_pac_w        	timestamp;
cd_turno_w                 	varchar(1);
dt_agendamento_w           	timestamp;
cd_medico_w                	varchar(10);
nr_seq_hora_w              	bigint;
nr_seq_pq_proc_w           	bigint;
cd_motivo_cancelamento_w   	agenda_consulta.cd_motivo_cancelamento%type;
cd_procedimento_w          	bigint;
nr_seq_proc_interno_w      	bigint;
qt_total_secao_w           	smallint;
nr_secao_w                 	smallint;
ie_origem_proced_w         	bigint;
dt_aguardando_w            	timestamp;
dt_consulta_w              	timestamp;
dt_atendido_w              	timestamp;
cd_medico_solic_w          	varchar(10);
nr_seq_indicacao_w         	bigint;
cd_pessoa_indicacao_w      	varchar(10);
cd_setor_atendimento_w     	bigint;
dt_provavel_term_w         	timestamp;
ie_encaixe_w               	varchar(1);
ie_retorno_w               	varchar(1);
ds_motivo_copia_trans_w    	varchar(255);
nm_usuario_acesso_w       	varchar(15);
nm_usuario_copia_trans_w	varchar(15);
dt_copia_trans_w          	timestamp;
nr_seq_motivo_transf_w     	bigint;
nm_usuario_horario_w       	varchar(15);
cd_medico_req_w            	varchar(10);
cd_plano_w                 	varchar(10);
nm_usuario_confirm_w       	varchar(15);
nr_seq_turno_w            	bigint;
dt_status_w               	timestamp;
ds_motivo_status_w        	varchar(255);
nm_usuario_status_w        	varchar(15);
dt_termino_w			timestamp;
dt_atual_w			timestamp;
dt_dia_semana_w			smallint;
ie_feriado_w			varchar(1);
nr_seq_esp_w			bigint;
ie_hor_adic_w			varchar(1);
ie_valido_w			varchar(1);
qt_horario_w			bigint;
qt_horario_livre_w		bigint;
nr_sequencia_w			bigint;
ds_erro_w			varchar(4000);
qt_frequencia_w			integer;
ie_final_semana_w		varchar(1);
nr_seq_livre_w			bigint;
nr_transacao_sus_w		varchar(20);
nr_seq_motivo_agendamento_w smallint;

qt_altura_cm_w			real;
cd_empresa_ref_w		bigint;
nr_seq_forma_confirmacao_w	bigint;
cd_procedencia_w		integer;
ie_forma_agendamento_w		smallint;
cd_especialidade_w		bigint;
ie_autorizacao_w		varchar(3);
cd_cid_w			varchar(10);
ie_gerar_dia_w			varchar(1);
ds_dias_w			varchar(255);
ie_fim_sab_chec_w		varchar(1);
ie_fim_dom_chec_w		varchar(1);
cd_dia_semana_w			varchar(1);
ie_consistencia_classif_w 	varchar(255);
ie_agenda_classif_w	  	varchar(1);
ie_consiste_regra_classif_w	varchar(1);
ie_atualizar_guia_w		varchar(1);
ie_manter_atend_w		varchar(1);
ie_manter_senha_w		varchar(1);
ie_manter_autorizacao_w		varchar(1);

--procedimentos
cd_procedimento_ww		bigint;
ie_origem_proced_ww		bigint;
ie_executar_proc_w		varchar(1);
nr_seq_exame_w			bigint;
nr_seq_proc_interno_ww		bigint;
qt_procedimento_w		integer;
dt_bloqueio_agenda_w		timestamp;
ie_dia_bloqueado_w		varchar(1);
nr_seq_agecons_proc_w  agenda_consulta_proc.nr_sequencia%type;


c01 CURSOR FOR
SELECT	cd_procedimento,
	ie_origem_proced,
	ie_executar_proc,
	nr_seq_exame,
	nr_seq_proc_interno,
	qt_procedimento
from	agenda_consulta_proc
where	nr_seq_agenda	= nr_seq_agenda_p;	



BEGIN
ds_erro_w := '';
if (nr_seq_agenda_p IS NOT NULL AND nr_seq_agenda_p::text <> '') and (dt_agenda_p IS NOT NULL AND dt_agenda_p::text <> '') and (ie_frequencia_p IS NOT NULL AND ie_frequencia_p::text <> '') and (ie_final_semana_p IS NOT NULL AND ie_final_semana_p::text <> '') and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') then
	/* obter dados agenda */

	select	cd_agenda,
		dt_agenda,
		nr_minuto_duracao,
		ie_status_agenda,
		ie_classif_agenda,
		dt_atualizacao,
		nm_usuario,
		cd_convenio,
		cd_pessoa_fisica,
		nm_pessoa_contato,
		ds_observacao,
		ie_status_paciente,
		nr_seq_consulta,
		nm_paciente,
		nr_atendimento,
		dt_confirmacao,
		ds_confirmacao,
		nr_telefone,
		qt_idade_pac,
		nr_seq_plano,
		nr_seq_classif_med,
		nm_usuario_origem,
		ie_necessita_contato,
		nr_seq_sala,
		cd_categoria,
		cd_tipo_acomodacao,
		cd_usuario_convenio,
		cd_complemento,
		dt_validade_carteira,
		nr_doc_convenio,
		cd_senha,
		nr_seq_agepaci,
		ds_senha,
		dt_nascimento_pac,
		cd_turno,
		dt_agendamento,
		cd_medico,
		nr_seq_hora,
		nr_seq_pq_proc,
		cd_motivo_cancelamento,
		cd_procedimento,
		nr_seq_proc_interno,
		qt_total_secao,
		nr_secao,
		ie_origem_proced,
		dt_aguardando,
		dt_consulta,
		dt_atendido,
		cd_medico_solic,
		nr_seq_indicacao,
		cd_pessoa_indicacao,
		cd_setor_atendimento,
		coalesce(dt_provavel_term,dt_agenda_p),
		ie_encaixe,
		ie_retorno,
		ds_motivo_copia_trans,
		nm_usuario_acesso,
		nm_usuario_copia_trans,
		dt_copia_trans,
		nr_seq_motivo_transf,
		nm_usuario_horario,
		cd_medico_req,
		cd_plano,
		nm_usuario_confirm,
		nr_seq_turno,
		dt_status,
		ds_motivo_status,
		nm_usuario_status,
		qt_altura_cm,
		cd_empresa_ref,
		nr_seq_forma_confirmacao,
		cd_procedencia,
		ie_forma_agendamento,
		cd_especialidade,
		ie_autorizacao,
		cd_cid,
		nr_transacao_sus,
		nr_seq_motivo_agendamento
	into STRICT	cd_agenda_w,
		dt_agenda_w,
		nr_minuto_duracao_w,
		ie_status_agenda_w,
		ie_classif_agenda_w,
		dt_atualizacao_w,
		nm_usuario_w,
		cd_convenio_w,
		cd_pessoa_fisica_w,
		nm_pessoa_contato_w,
		ds_observacao_w,
		ie_status_paciente_w,
		nr_seq_consulta_w,
		nm_paciente_w,
		nr_atendimento_w,
		dt_confirmacao_w,
		ds_confirmacao_w,
		nr_telefone_w,
		qt_idade_pac_w,
		nr_seq_plano_w,
		nr_seq_classif_med_w,
		nm_usuario_origem_w,
		ie_necessita_contato_w,
		nr_seq_sala_w,
		cd_categoria_w,
		cd_tipo_acomodacao_w,
		cd_usuario_convenio_w,
		cd_complemento_w,
		dt_validade_carteira_w,
		nr_doc_convenio_w,
		cd_senha_w,
		nr_seq_agepaci_w,
		ds_senha_w,
		dt_nascimento_pac_w,
		cd_turno_w,
		dt_agendamento_w,
		cd_medico_w,
		nr_seq_hora_w,
		nr_seq_pq_proc_w,
		cd_motivo_cancelamento_w,
		cd_procedimento_w,
		nr_seq_proc_interno_w,
		qt_total_secao_w,
		nr_secao_w,
		ie_origem_proced_w,
		dt_aguardando_w,
		dt_consulta_w,
		dt_atendido_w,
		cd_medico_solic_w,
		nr_seq_indicacao_w,
		cd_pessoa_indicacao_w,
		cd_setor_atendimento_w,
		dt_provavel_term_w,
		ie_encaixe_w,
		ie_retorno_w,
		ds_motivo_copia_trans_w,
		nm_usuario_acesso_w,
		nm_usuario_copia_trans_w,
		dt_copia_trans_w,
		nr_seq_motivo_transf_w,
		nm_usuario_horario_w,
		cd_medico_req_w,
		cd_plano_w,
		nm_usuario_confirm_w,
		nr_seq_turno_w,
		dt_status_w,
		ds_motivo_status_w,
		nm_usuario_status_w,
		qt_altura_cm_w,
		cd_empresa_ref_w,
		nr_seq_forma_confirmacao_w,
		cd_procedencia_w,
		ie_forma_agendamento_w,
		cd_especialidade_w,
		ie_autorizacao_w,
		cd_cid_w,
		nr_transacao_sus_w,
		nr_seq_motivo_agendamento_w
	from	agenda_consulta
	where	nr_sequencia = nr_seq_agenda_p;
	
	update	agenda_consulta
	set	dt_provavel_term = dt_provavel_term_w
	where	nr_sequencia = nr_seq_agenda_p;

	ie_atualizar_guia_w := Obter_Param_Usuario(821, 144, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_atualizar_guia_w);
	ie_manter_atend_w := Obter_Param_Usuario(821, 451, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_manter_atend_w);
	ie_manter_senha_w := Obter_Param_Usuario(821, 457, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_manter_senha_w);
	ie_manter_autorizacao_w := Obter_Param_Usuario(821, 458, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_manter_autorizacao_w);
	
	if (ie_manter_atend_w = 'N') then
		nr_atendimento_w	:= null;
	end if;
	
	/* obter frequencia */

	if (ie_frequencia_p = 'S') then
		qt_frequencia_w := 7;

	elsif (ie_frequencia_p = 'D') then
		qt_frequencia_w := 1;

	elsif (ie_frequencia_p = 'O') then
		qt_frequencia_w := coalesce(qt_frequencia_p,0);
	end if;

	/* validar frequencia */

	if (qt_frequencia_w <= 0) then		
		CALL WHEB_MENSAGEM_PCK.Exibir_Mensagem_Abort(251139);
	end if;

	/* obter datas */

	if (hr_desejada_p IS NOT NULL AND hr_desejada_p::text <> '') then		
		dt_termino_w := pkg_date_utils.get_DateTime(dt_agenda_p, hr_desejada_p);
	else	
		dt_termino_w := pkg_date_utils.get_DateTime(dt_agenda_p, dt_agenda_w);
	end if;
	
	if (hr_desejada_p IS NOT NULL AND hr_desejada_p::text <> '') then		
		dt_atual_w := pkg_date_utils.get_DateTime(dt_agenda_w, hr_desejada_p) + qt_frequencia_w;	
	else
		dt_atual_w := dt_agenda_w + qt_frequencia_w;
	end if;
	
	
	/* validar data */

	if (dt_agenda_p < dt_agenda_w) then		
		CALL WHEB_MENSAGEM_PCK.Exibir_Mensagem_Abort(251140);
	end if;

	/* obter dias semana */

	while(dt_atual_w <= dt_termino_w) loop
		begin
		/* obter dia semana */

		select	obter_cod_dia_semana(dt_atual_w)
		into STRICT	dt_dia_semana_w
		;
		
		ie_gerar_dia_w	:= 'S';
		
		if (ds_dias_p IS NOT NULL AND ds_dias_p::text <> '') then
			select	substr(ds_dias_p,1,length(ds_dias_p) -1)
			into STRICT	ds_dias_w
			;
			
		ie_gerar_dia_w	:=  obter_se_contido(dt_dia_semana_w,ds_dias_w);
			
		end if;	
	
					
		select	obter_se_contido(7,ds_dias_w)
		into STRICT	ie_fim_sab_chec_w
		;
		
		select	obter_se_contido(1,ds_dias_w)
		into STRICT	ie_fim_dom_chec_w
		;


		dt_bloqueio_agenda_w	:= to_date(to_char(dt_atual_w, 'dd/mm/yyyy')|| ' ' ||to_char(dt_agenda_w, 'hh24:mi:ss'), 'dd/mm/yyyy hh24:mi:ss');
		
		ie_dia_bloqueado_w := consistir_bloqueio_agenda(cd_agenda_w, dt_bloqueio_agenda_w, dt_dia_semana_w, ie_dia_bloqueado_w);
		
		/* obter se feriado */
		
		select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
		into STRICT	ie_feriado_w
		from 	feriado a, 
			agenda b
		where 	a.cd_estabelecimento = obter_estab_agenda(cd_agenda_w)
		and	a.dt_feriado = trunc(dt_atual_w)
		and 	b.cd_agenda = cd_agenda_w;

		/* obter se horario especial */

		select	coalesce(max(nr_sequencia),0),
			coalesce(max(ie_horario_adicional),'N')
		into STRICT	nr_seq_esp_w,
			ie_hor_adic_w
		from	agenda_turno_esp
		where	cd_agenda = cd_agenda_w
		and	dt_agenda = trunc(dt_agenda_w,'dd');

		/* obter se final semana */

		if (dt_dia_semana_w in (7,1)) then
			ie_final_semana_w := 'S';
		else
			ie_final_semana_w := 'N';
		end if;

		/* validar horario x cadastro */

		select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
		into STRICT	ie_valido_w
		from	agenda_turno
		where	cd_agenda = cd_agenda_w
		and	((ie_dia_semana = dt_dia_semana_w) or ((ie_dia_semana = 9) and (dt_dia_semana_w not in (7,1))))
		and	((nr_seq_esp_w = 0) or (ie_hor_adic_w = 'S'))
		and	((coalesce(dt_final_vigencia::text, '') = '') or (dt_final_vigencia >= trunc(dt_atual_w)))
		and	((coalesce(dt_inicio_vigencia::text, '') = '') or (dt_inicio_vigencia <= trunc(dt_atual_w)))
		and 	(( (
		to_date(to_char(dt_atual_w,'dd/mm/yyyy') || ' ' || to_char(hr_inicial,'hh24:mi'),'dd/mm/yyyy hh24:mi') 
			< to_date(to_char(dt_atual_w,'dd/mm/yyyy') || ' ' || to_char(hr_inicial_intervalo,'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss'))
		or (
		to_date(to_char(dt_atual_w,'dd/mm/yyyy') || ' ' || to_char(hr_inicial,'hh24:mi'),'dd/mm/yyyy hh24:mi') 
			>= to_date(to_char(dt_atual_w,'dd/mm/yyyy') || ' ' || to_char(hr_final_intervalo,'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss')) )
		or (coalesce(hr_inicial_intervalo::text, '') = '' and coalesce(hr_final_intervalo::text, '') = ''))
		and	coalesce(nr_minuto_intervalo,0) > 0
		and	ie_feriado_w <> 'S'
		and	((dt_dia_semana_w not in (1,7)) or (ie_final_semana_p = 'S') or (ie_fim_sab_chec_w = 'S' and dt_dia_semana_w = 7) or (ie_fim_dom_chec_w = 'S' and dt_dia_semana_w = 1))
		and	((coalesce(ds_dias_w::text, '') = '') or
			((ds_dias_w IS NOT NULL AND ds_dias_w::text <> '') and (obter_se_contido(dt_dia_semana_w,ds_dias_w) = 'S')));							
			
		/* validar horario gerado */

		select	count(*)
		into STRICT	qt_horario_w
		from	agenda_consulta
		where	cd_agenda = cd_agenda_w
		and	dt_agenda = dt_atual_w
		and	ie_status_agenda	not in ('C','LF','F','I');

		/* validar horario livre */

		select	count(*)
		into STRICT	qt_horario_livre_w
		from	agenda_consulta
		where	cd_agenda = cd_agenda_w
		and	dt_agenda = dt_atual_w
		and	ie_status_agenda = 'L'
		and	obter_se_feriado(obter_estab_agenda(cd_agenda_w), dt_atual_w) = 0;


		if (ie_dia_bloqueado_w <> 'N')then
			begin
			ie_gerar_dia_w	:= 'N';
			ds_erro_w	:= substr(ds_erro_w || to_char(dt_atual_w, 'dd/mm/yyyy hh24:mi:ss') || ' , ',1,4000);
			end;

		end if;		

		ie_consiste_regra_classif_w := Obter_Param_Usuario(821, 434, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_consiste_regra_classif_w);

		if (ie_consiste_regra_classif_w = 'S') then
			SELECT * FROM consistir_classif_agecon(	obter_estabelecimento_ativo, cd_pessoa_fisica_w, dt_atual_w, cd_agenda_w, cd_convenio_w, null, null, null, ie_classif_agenda_w, 0, ie_consistencia_classif_w, ie_agenda_classif_w) INTO STRICT ie_consistencia_classif_w, ie_agenda_classif_w;
							
			if	((ie_agenda_classif_w = 'N') or (ie_consistencia_classif_w <> '')) then				
				CALL Wheb_mensagem_pck.exibir_mensagem_abort(251142,'DT_ATUAL=' || to_char(dt_atual_w,'dd/mm/yyyy')||';IE_CONSISTENCIA='||ie_consistencia_classif_w);
			end if;
		end if;				
		
		if (ie_gerar_dia_w = 'S') then		
		
		if	(ie_valido_w = 'S' AND qt_horario_w = 0) or
			(ie_valido_w = 'S' AND qt_horario_livre_w > 0) then
			
			select	max(nr_sequencia)
			into STRICT	nr_seq_livre_w
			from	agenda_consulta
			where	cd_agenda = cd_agenda_w
			and	dt_agenda = dt_atual_w
			and	ie_status_agenda = 'L'
			and	obter_se_feriado(obter_estab_agenda(cd_agenda_w), dt_atual_w) = 0;
			

			if (ie_final_semana_p = 'S') or (ie_final_semana_w = 'N') then
				/* obter sequencia */

				
				if (coalesce(nr_seq_livre_w::text, '') = '') then
					begin									
					select	nextval('agenda_consulta_seq')
					into STRICT	nr_sequencia_w
					;
	
					/* gerar agenda */

					insert into agenda_consulta(
						nr_sequencia,
						cd_agenda,
						dt_agenda,
						nr_minuto_duracao,
						ie_status_agenda,
						ie_classif_agenda,
						dt_atualizacao,
						nm_usuario,
						cd_convenio,
						cd_pessoa_fisica,
						nm_pessoa_contato,
						ds_observacao,
						ie_status_paciente,
						nr_seq_consulta,
						nm_paciente,
						nr_atendimento,
						dt_confirmacao,
						ds_confirmacao,
						nr_telefone,
						qt_idade_pac,
						nr_seq_plano,
						nr_seq_classif_med,
						nm_usuario_origem,
						ie_necessita_contato,
						nr_seq_sala,
						cd_categoria,
						cd_tipo_acomodacao,
						cd_usuario_convenio,
						cd_complemento,
						dt_validade_carteira,
						nr_doc_convenio,
						cd_senha,
						nr_seq_agepaci,
						ds_senha,
						dt_nascimento_pac,
						cd_turno,
						dt_agendamento,
						cd_medico,
						nr_seq_hora,
						nr_seq_pq_proc,
						cd_motivo_cancelamento,
						cd_procedimento,
						nr_seq_proc_interno,
						qt_total_secao,
						nr_secao,
						ie_origem_proced,
						dt_aguardando,
						dt_consulta,
						dt_atendido,
						cd_medico_solic,
						nr_seq_indicacao,
						cd_pessoa_indicacao,
						cd_setor_atendimento,
						dt_provavel_term,
						ie_encaixe,
						ie_retorno,
						ds_motivo_copia_trans,
						nm_usuario_acesso,
						nm_usuario_copia_trans,
						dt_copia_trans,
						nr_seq_motivo_transf,
						nm_usuario_horario,
						cd_medico_req,
						cd_plano,
						nm_usuario_confirm,
						nr_seq_turno,
						dt_status,
						ds_motivo_status,
						nm_usuario_status,
						qt_altura_cm,
						cd_empresa_ref,
						nr_seq_forma_confirmacao,
						cd_procedencia,
						ie_forma_agendamento,
						cd_especialidade,
						ie_autorizacao,
						cd_cid,
						nr_transacao_sus,
						nr_seq_motivo_agendamento)
					values (nr_sequencia_w,
						cd_agenda_w,
						--dt_agenda_w,
						dt_atual_w,
						nr_minuto_duracao_w,
						--ie_status_agenda_w,
						'N',
						ie_classif_agenda_w,
						dt_atualizacao_w,
						--nm_usuario_w,
						nm_usuario_p,
						cd_convenio_w,
						cd_pessoa_fisica_w,
						nm_pessoa_contato_w,
						ds_observacao_w,
						ie_status_paciente_w,
						nr_seq_consulta_w,
						nm_paciente_w,
						nr_atendimento_w,
						dt_confirmacao_w,
						ds_confirmacao_w,
						nr_telefone_w,
						qt_idade_pac_w,
						nr_seq_plano_w,
						nr_seq_classif_med_w,
						--nm_usuario_origem_w,
						nm_usuario_p,
						ie_necessita_contato_w,
						nr_seq_sala_w,
						cd_categoria_w,
						cd_tipo_acomodacao_w,
						cd_usuario_convenio_w,
						cd_complemento_w,
						dt_validade_carteira_w,
						CASE WHEN ie_atualizar_guia_w='S' THEN  to_char(nr_sequencia_w)  ELSE nr_doc_convenio_w END ,
						CASE WHEN ie_manter_senha_w='S' THEN  cd_senha_w  ELSE null END ,
						nr_seq_agepaci_w,
						ds_senha_w,
						dt_nascimento_pac_w,
						cd_turno_w,
						dt_agendamento_w,
						cd_medico_w,
						nr_seq_hora_w,
						nr_seq_pq_proc_w,
						cd_motivo_cancelamento_w,
						cd_procedimento_w,
						nr_seq_proc_interno_w,
						qt_total_secao_w,
						nr_secao_w,
						ie_origem_proced_w,
						dt_aguardando_w,
						dt_consulta_w,
						dt_atendido_w,
						cd_medico_solic_w,
						nr_seq_indicacao_w,
						cd_pessoa_indicacao_w,
						cd_setor_atendimento_w,
						dt_provavel_term_w,
						--ie_encaixe_w,

						--ie_retorno_w,						
						'N',
						'N',
						--ds_motivo_copia_trans_w,

						--nm_usuario_acesso_w,

						--nm_usuario_copia_trans_w,

						--dt_copia_trans_w,

						--nr_seq_motivo_transf_w,

						--nm_usuario_horario_w,
						null,
						null,
						null,
						null,
						null,
						null,						
						cd_medico_req_w,
						cd_plano_w,
						CASE WHEN coalesce(dt_confirmacao_w::text, '') = '' THEN nm_usuario_confirm_w  ELSE nm_usuario_p END ,
						--nm_usuario_p,
						nr_seq_turno_w,
						dt_status_w,
						ds_motivo_status_w,
						nm_usuario_status_w,
						qt_altura_cm_w,
						cd_empresa_ref_w,
						nr_seq_forma_confirmacao_w,
						cd_procedencia_w,
						ie_forma_agendamento_w,
						cd_especialidade_w,
						CASE WHEN ie_manter_autorizacao_w='S' THEN  ie_autorizacao_w  ELSE null END ,
						cd_cid_w,
						nr_transacao_sus_w,
						nr_seq_motivo_agendamento_w);		

					open C01;
					loop
					fetch C01 into	
						cd_procedimento_ww,		
						ie_origem_proced_ww,		
						ie_executar_proc_w,		
						nr_seq_exame_w,			
						nr_seq_proc_interno_ww,		
						qt_procedimento_w;
					EXIT WHEN NOT FOUND; /* apply on C01 */
						begin
						
						select	nextval('agenda_consulta_proc_seq')
						into STRICT	nr_seq_agecons_proc_w
						;
					
						insert into agenda_consulta_proc(nr_sequencia,
								nr_seq_agenda,
								dt_Atualizacao,
								nm_usuario,
								cd_procedimento,
								ie_origem_proced,
								nr_seq_proc_interno,
								ie_executar_proc,
								nr_seq_exame,
								qt_procedimento)
							values (nr_seq_agecons_proc_w,
								nr_sequencia_w,
								clock_timestamp(),
								nm_usuario_p,
								cd_procedimento_ww,
								ie_origem_proced_ww,
								nr_seq_proc_interno_ww,
								ie_executar_proc_w,
								nr_seq_exame_w,
								qt_procedimento_w);

								CALL gerar_autor_regra(NULL, NULL, NULL, NULL, NULL, NULL, 'AC', nm_usuario_p, NULL, null, NULL, nr_sequencia_w, NULL, nr_seq_agecons_proc_w, '', '', '');
						end;
					end loop;
					close C01;	
					end;
				elsif (nr_seq_livre_w IS NOT NULL AND nr_seq_livre_w::text <> '') then
					begin
					update	agenda_consulta	
					set	dt_agenda                    =           dt_atual_w,
						nr_minuto_duracao            =           nr_minuto_duracao_w,
						ie_status_agenda             =           'N',
						ie_classif_agenda            =           ie_classif_agenda_w,
						dt_atualizacao               =           dt_atualizacao_w,
						nm_usuario                   =           nm_usuario_p,
						cd_convenio                  =           cd_convenio_w,
						cd_pessoa_fisica             =           cd_pessoa_fisica_w,
						nm_pessoa_contato            =           nm_pessoa_contato_w,
						ds_observacao                =           ds_observacao_w,
						ie_status_paciente           =           ie_status_paciente_w,
						nr_seq_consulta              =           nr_seq_consulta_w,
						nm_paciente                  =           nm_paciente_w,
						nr_atendimento               =           nr_atendimento_w,
						dt_confirmacao               =           dt_confirmacao_w,
						ds_confirmacao               =           ds_confirmacao_w,
						nr_telefone                  =           nr_telefone_w,
						qt_idade_pac                 =           qt_idade_pac_w,
						nr_seq_plano                 =           nr_seq_plano_w,
						nr_seq_classif_med           =           nr_seq_classif_med_w,
						nm_usuario_origem            =           nm_usuario_p,
						ie_necessita_contato         =           ie_necessita_contato_w,
						nr_seq_sala                  =           nr_seq_sala_w,
						cd_categoria                 =           cd_categoria_w,
						cd_tipo_acomodacao           =           cd_tipo_acomodacao_w,
						cd_usuario_convenio          =           cd_usuario_convenio_w,
						cd_complemento               =           cd_complemento_w,
						dt_validade_carteira         =           dt_validade_carteira_w,
						nr_doc_convenio              =           CASE WHEN ie_atualizar_guia_w='S' THEN  to_char(nr_seq_livre_w)  ELSE nr_doc_convenio_w END ,
						cd_senha                     =           CASE WHEN ie_manter_senha_w='S' THEN  cd_senha_w  ELSE null END ,
						nr_seq_agepaci               =           nr_seq_agepaci_w,
						ds_senha                     =           ds_senha_w,
						dt_nascimento_pac            =           dt_nascimento_pac_w,
						cd_turno                     =           cd_turno_w,
						dt_agendamento               =           dt_agendamento_w,
						cd_medico                    =           cd_medico_w,
						nr_seq_hora                  =           nr_seq_hora_w,
						nr_seq_pq_proc               =           nr_seq_pq_proc_w,
						cd_motivo_cancelamento       =           cd_motivo_cancelamento_w,
						cd_procedimento              =           cd_procedimento_w,
						nr_seq_proc_interno          =           nr_seq_proc_interno_w,
						qt_total_secao               =           qt_total_secao_w,
						nr_secao                     =           nr_secao_w,
						ie_origem_proced             =           ie_origem_proced_w,
						dt_aguardando                =           dt_aguardando_w,
						dt_consulta                  =           dt_consulta_w,
						dt_atendido                  =           dt_atendido_w,
						cd_medico_solic              =           cd_medico_solic_w,
						nr_seq_indicacao             =           nr_seq_indicacao_w,
						cd_pessoa_indicacao          =           cd_pessoa_indicacao_w,
						cd_setor_atendimento         =           cd_setor_atendimento_w,
						dt_provavel_term             =           dt_provavel_term_w,
						ie_encaixe                   =           'N',
						ie_retorno                   =           'N',
						ds_motivo_copia_trans         = NULL,
						nm_usuario_acesso             = NULL,
						nm_usuario_copia_trans        = NULL,
						dt_copia_trans                = NULL,
						nr_seq_motivo_transf          = NULL,
						nm_usuario_horario            = NULL,
						cd_medico_req                =           cd_medico_req_w,
						cd_plano                     =           cd_plano_w,
						nm_usuario_confirm           =           CASE WHEN dt_confirmacao_w = NULL THEN nm_usuario_confirm_w  ELSE nm_usuario_p END ,
						nr_seq_turno                 =           nr_seq_turno_w,
						dt_status                    =           dt_status_w,
						ds_motivo_status             =           ds_motivo_status_w,
						nm_usuario_status            =           nm_usuario_status_w,
						qt_altura_cm		     =		 qt_altura_cm_w,
						cd_empresa_ref		     =		 cd_empresa_ref_w,
						nr_seq_forma_confirmacao     =		 nr_seq_forma_confirmacao_w,
						cd_procedencia		     =		 cd_procedencia_w,
						ie_forma_agendamento	     =		 ie_forma_agendamento_w,
						cd_especialidade	     =	  	 cd_especialidade_w,
						ie_autorizacao		     =		 CASE WHEN ie_manter_autorizacao_w='S' THEN   ie_autorizacao_w  ELSE null END ,
						cd_cid			     =		 cd_cid_w,
						nr_transacao_sus	     =		 nr_transacao_sus_w,
						nr_seq_motivo_agendamento     =     nr_seq_motivo_agendamento_w
					where	nr_sequencia 		     = 		 nr_seq_livre_w;
					
					open C01;
					loop
					fetch C01 into	
						cd_procedimento_ww,		
						ie_origem_proced_w,		
						ie_executar_proc_w,		
						nr_seq_exame_w,			
						nr_seq_proc_interno_w,		
						qt_procedimento_w;
					EXIT WHEN NOT FOUND; /* apply on C01 */
						begin
		
						select	nextval('agenda_consulta_proc_seq')
						into STRICT	nr_seq_agecons_proc_w
						;
					
						insert into agenda_consulta_proc(nr_sequencia,
								nr_seq_agenda,
								dt_Atualizacao,
								nm_usuario,
								cd_procedimento,
								ie_origem_proced,
								nr_seq_proc_interno,
								ie_executar_proc,
								nr_seq_exame,
								qt_procedimento)
							values (nr_seq_agecons_proc_w,
								nr_seq_livre_w,
								clock_timestamp(),
								nm_usuario_p,
								cd_procedimento_ww,
								ie_origem_proced_w,
								nr_seq_proc_interno_w,
								ie_executar_proc_w,
								nr_seq_exame_w,
								qt_procedimento_w);

								CALL gerar_autor_regra(NULL, NULL, NULL, NULL, NULL, NULL, 'AC', nm_usuario_p, NULL, null, NULL, nr_seq_livre_w, NULL, nr_seq_agecons_proc_w, '', '', '');
						end;
					end loop;
					close C01;	
					
					end;					
				end if;
				
			end if;
		else
			if (ie_final_semana_p = 'S') or (ie_final_semana_w = 'N') then
				ds_erro_w := substr(ds_erro_w || to_char(dt_atual_w,'dd/mm/yyyy hh24:mi:ss') || ', ',1,4000);			
			end if;
		end if;
		end if;
		dt_atual_w := dt_atual_w + qt_frequencia_w;
		end;
		
		select	obter_cod_dia_semana(dt_atual_w)
		into STRICT	cd_dia_semana_w
		;

		/* Verifica se a data e domingo ou sabado */

		if (cd_dia_semana_w = 1) and (ie_final_semana_p = 'N') and (ie_fim_sab_chec_w = 'N') then
			dt_atual_w	:= dt_atual_w + 1;
		elsif (cd_dia_semana_w = 7) and (ie_final_semana_p = 'N') and (ie_fim_dom_chec_w = 'N') then
			dt_atual_w	:= dt_atual_w + 2;
		end if;
		
	end loop;
end if;

if (coalesce(length(ds_erro_w),0) > 0) then
	ds_erro_p := substr(wheb_mensagem_pck.get_texto(279916, 'DS_ERRO_P=' || substr(ds_erro_w,1,length(ds_erro_w)-2)),1,255);
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_agenda_cons_semana_per ( nr_seq_agenda_p bigint, dt_agenda_p timestamp, ie_frequencia_p text, qt_frequencia_p bigint, ie_final_semana_p text, ds_dias_p text, hr_desejada_p timestamp, nm_usuario_p text, ds_erro_p INOUT text) FROM PUBLIC;

