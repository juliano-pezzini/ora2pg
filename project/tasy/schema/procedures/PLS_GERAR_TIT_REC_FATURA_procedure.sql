-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_tit_rec_fatura ( nr_seq_fatura_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_titulo_w		bigint;
cd_moeda_cr_w		integer;
cd_tipo_taxa_juro_cr_w	bigint;
cd_tipo_taxa_multa_cr_w	bigint;
tx_juros_cr_w		double precision;
tx_multa_cr_w		double precision;
cd_cgc_w		varchar(14);
cd_tipo_portador_w	bigint;
cd_portador_w		bigint;
cd_estabelecimento_w	smallint;
dt_emissao_w		timestamp;
dt_vencimento_w		timestamp;
vl_fatura_w		double precision;
cd_unimed_destino_w	bigint;
vl_ir_w			double precision	:= 0;
cd_tributo_ir_w		bigint;
nr_seq_congenere_w	bigint;
nr_seq_congenere_fin_w	bigint;
nr_seq_classif_w	integer;
cd_conta_financ_cr_w	bigint;
nr_seq_camara_w		bigint;
qt_dias_a500_w		bigint;
ie_tipo_congenere_w	pls_congenere.ie_tipo_congenere%type;
sg_estado_orig_w	pessoa_juridica.sg_estado%type;
sg_estado_dest_w	pessoa_juridica.sg_estado%type;
ie_tipo_intercambio_w	varchar(1) := 'T';


BEGIN
if (nr_seq_fatura_p IS NOT NULL AND nr_seq_fatura_p::text <> '') then
	select	max(a.cd_estabelecimento),
		trunc(max(a.dt_emissao_fatura),'dd'),
		trunc(max(a.dt_vencimento_fatura),'dd'),
		somente_numero(max(a.cd_unimed_destino))
	into STRICT	cd_estabelecimento_w,
		dt_emissao_w,
		dt_vencimento_w,
		cd_unimed_destino_w
	from	ptu_fatura a
	where	a.nr_sequencia	= nr_seq_fatura_p;

	if (coalesce(dt_emissao_w::text, '') = '') then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(126806,'NR_SEQ_FATURA='|| nr_seq_fatura_p);
	end if;

	if (coalesce(dt_vencimento_w::text, '') = '') then
		SELECT * FROM ptu_obter_venc_fatura(	nr_seq_fatura_p, cd_estabelecimento_w, nm_usuario_p, dt_vencimento_w, qt_dias_a500_w) INTO STRICT dt_vencimento_w, qt_dias_a500_w;

		if (coalesce(dt_vencimento_w::text, '') = '') then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(126810,'NR_SEQ_FATURA='|| nr_seq_fatura_p);
		end if;
	end if;

	/* Obter congênere conforme código */

	select	max(a.nr_sequencia)
	into STRICT	nr_seq_congenere_w
	from	pls_congenere a
	where	somente_numero(a.cd_cooperativa) = cd_unimed_destino_w;

	/* Obter câmara da unimed */

	select	max(a.nr_seq_camara)
	into STRICT	nr_seq_camara_w
	from	pls_congenere_camara a
	where	a.nr_seq_congenere	= nr_seq_congenere_w
	and	dt_emissao_w between a.dt_inicio_vigencia_ref and a.dt_fim_vigencia_ref;

	if (coalesce(nr_seq_congenere_w::text, '') = '') then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(194989,'CD_UNIMED_DESTINO_W=' ||cd_unimed_destino_w);
	end if;

	/* Obter CGC da Unimed Destino */

	select	pls_obter_coop_pag_resp_fin(nr_seq_congenere_w,dt_emissao_w)
	into STRICT	cd_cgc_w
	;

	select	max(ie_tipo_congenere)
	into STRICT	ie_tipo_congenere_w
	from	pls_congenere
	where	nr_sequencia = nr_seq_congenere_w;

	-- Obtém se o tipo do congenere é operadora (fundação)
	if (ie_tipo_congenere_w = 'OP') then
		ie_tipo_intercambio_w := 'F'; -- Fundação
	else
		-- Obter a UF da Unimed de origem
		select	coalesce(max(sg_estado),'X')
		into STRICT	sg_estado_orig_w
		from	pessoa_juridica
		where	cd_cgc	= (	SELECT	cd_cgc_outorgante
					from	pls_outorgante
					where	cd_estabelecimento = cd_estabelecimento_w);

		-- Obter a UF do plano beneficiário
		select	coalesce(max(a.sg_estado),'X')
		into STRICT	sg_estado_dest_w
		from	pessoa_juridica	a,
			pls_congenere	b
		where	a.cd_cgc	= b.cd_cgc
		and	b.nr_sequencia	= nr_seq_congenere_w;

		if (sg_estado_orig_w <> 'X') and (sg_estado_dest_w <> 'X') then
			if (sg_estado_orig_w = sg_estado_dest_w) then
				ie_tipo_intercambio_w := 'E'; -- Estadual
			else
				ie_tipo_intercambio_w := 'N'; -- Nacional
			end if;
		end if;
	end if;

	begin
	select	a.cd_moeda_padrao,
		a.cd_tipo_taxa_juro,
		a.cd_tipo_taxa_multa,
		a.pr_juro_padrao,
		a.pr_multa_padrao,
		a.cd_tipo_portador,
		a.cd_portador
	into STRICT	cd_moeda_cr_w,
		cd_tipo_taxa_juro_cr_w,
		cd_tipo_taxa_multa_cr_w,
		tx_juros_cr_w,
		tx_multa_cr_w,
		cd_tipo_portador_w,
		cd_portador_w
	from	parametro_contas_receber a
	where	a.cd_estabelecimento	= cd_estabelecimento_w;
	exception
		when no_data_found then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(194990);
	end;

	select	coalesce(vl_total_fatura,0)
	into STRICT	vl_fatura_w
	from	ptu_fatura a
	where	a.nr_sequencia	= nr_seq_fatura_p;

	if (vl_fatura_w = 0) then
		select	coalesce(sum(a.vl_liberado),0)
		into STRICT	vl_fatura_w
		from	pls_conta_medica_resumo a
		where	a.nr_sequencia	= nr_seq_fatura_p
		and	((a.ie_situacao != 'I') or (coalesce(a.ie_situacao::text, '') = ''));

		select	coalesce(sum(a.vl_total),0)
		into STRICT	vl_fatura_w
		from	pls_conta a
		where	a.nr_seq_fatura	= nr_seq_fatura_p;
	end if;

	select	nextval('titulo_seq')
	into STRICT	nr_titulo_w
	;

	insert	into	titulo_receber(nr_titulo,
		nm_usuario,
		dt_atualizacao,
		cd_estabelecimento,
		cd_tipo_portador,
		cd_portador,
		dt_emissao,
		dt_contabil,
		dt_vencimento,
		dt_pagamento_previsto,
		vl_titulo,
		vl_saldo_titulo,
		vl_saldo_juros,
		vl_saldo_multa,
		tx_juros,
		tx_multa,
		cd_tipo_taxa_juro,
		cd_tipo_taxa_multa,
		tx_desc_antecipacao,
		ie_tipo_titulo,
		ie_tipo_inclusao,
		ie_origem_titulo,
		cd_moeda,
		ie_situacao,
		cd_pessoa_fisica,
		cd_cgc,
		ie_tipo_emissao_titulo,
		nr_lote_contabil,
		nr_seq_ptu_fatura)
	values (nr_titulo_w,
		nm_usuario_p,
		clock_timestamp(),
		cd_estabelecimento_w,
		cd_tipo_portador_w,
		cd_portador_w,
		dt_emissao_w,
		dt_emissao_w,
		dt_vencimento_w,
		dt_vencimento_w,
		vl_fatura_w,
		vl_fatura_w,
		0,
		0,
		0,
		0,
		cd_tipo_taxa_juro_cr_w,
		cd_tipo_taxa_multa_cr_w,
		0,
		'1', /* Bloqueto */
		'2',
		'8', /* OPS - Intercâmbio */
		cd_moeda_cr_w,
		'1',
		null,
		cd_cgc_w,
		'2' /* Emissão bloqueto origem */
,
		0,
		nr_seq_fatura_p);

	CALL ptu_atualizar_status_fat_envio(nr_seq_fatura_p, 2, nm_usuario_p);

	cd_conta_financ_cr_w := pls_obter_conta_financ_regra(	'ICR', null, cd_estabelecimento_w, null, null, nr_seq_camara_w, null, null, null, null, null, null, null, null, ie_tipo_intercambio_w, null, null, cd_conta_financ_cr_w);

	if (cd_conta_financ_cr_w IS NOT NULL AND cd_conta_financ_cr_w::text <> '') then
		select	coalesce(max(nr_sequencia),0) + 1
		into STRICT	nr_seq_classif_w
		from	titulo_receber_classif
		where	nr_titulo	= nr_titulo_w;

		insert into titulo_receber_classif(nr_titulo,
			nr_sequencia,
			nm_usuario,
			dt_atualizacao,
			cd_conta_financ,
			vl_original,
			vl_classificacao,
			vl_desconto)
		values (nr_titulo_w,
			nr_seq_classif_w,
			nm_usuario_p,
			clock_timestamp(),
			cd_conta_financ_cr_w,
			vl_fatura_w,
			vl_fatura_w,
			0);
	end if;

	CALL gerar_imposto_tit_rec(nr_titulo_w,nm_usuario_p);

	select	max(b.cd_tributo)
	into STRICT	cd_tributo_ir_w
	from	tributo b,
		titulo_receber_trib a
	where	a.cd_tributo	= b.cd_tributo
	and	b.ie_situacao	= 'A'
	and	b.ie_tipo_tributo = 'IR'
	and	a.nr_titulo	= nr_titulo_w;

	if (cd_tributo_ir_w IS NOT NULL AND cd_tributo_ir_w::text <> '') then
		select	coalesce(sum(a.vl_tributo),0)
		into STRICT	vl_ir_w
		from	titulo_receber_trib a
		where	a.nr_titulo	= nr_titulo_w
		and	a.cd_tributo	= cd_tributo_ir_w;
	end if;

	update	ptu_fatura
	set	nr_fatura	= nr_titulo_w,
		vl_total_fatura	= vl_fatura_w,
		vl_ir		= vl_ir_w
	where	nr_sequencia	= nr_seq_fatura_p;

	/* Se houver regra de qt dias anterior A500,  insere o título no lote de camâra de compensação*/

	if (qt_dias_a500_w IS NOT NULL AND qt_dias_a500_w::text <> '') and (nr_seq_camara_w IS NOT NULL AND nr_seq_camara_w::text <> '') then
		CALL pls_inserir_tit_camara( null,
					nr_titulo_w,
					nr_seq_camara_w,
					dt_emissao_w,
					qt_dias_a500_w,
					cd_estabelecimento_w,
					nm_usuario_p);
	end if;

	/* Inserir classificação */

end if;

/* Não pode dar commit nesta procedure */

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_tit_rec_fatura ( nr_seq_fatura_p bigint, nm_usuario_p text) FROM PUBLIC;

