-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_consistir_bloq_benef_canc ( nr_seq_simulacao_p bigint, cd_pessoa_fisica_p text, cd_estabelecimento_p bigint, ds_retorno_p INOUT text) AS $body$
DECLARE


qt_registros_w			bigint;
nr_seq_cliente_w		bigint;
nr_seq_solicitacao_w		bigint;
nr_seq_segurado_w		bigint;
dt_rescisao_w			timestamp;
qt_dias_w			bigint;
ie_tipo_contrato_w		varchar(10);
ie_consistir_benef_can_w	varchar(255);
ie_bloquar_vinculo_pessoa_w	varchar(10);
ie_preco_w			varchar(3);
dt_contratacao_w		timestamp;
ds_retorno_w			varchar(255);
nr_seq_pagador_w		bigint;
cd_pessoa_pagador_w		varchar(10);
cd_cgc_pagador_w		varchar(14);
dt_liquidacao_w			timestamp;
qt_dias_pag_mens_w		bigint;

C01 CURSOR FOR
	SELECT	ie_bloquar_vinculo_pessoa
	from	pls_regra_bloqueio_simul
	where	cd_estabelecimento	= cd_estabelecimento_p
	and	qt_dias_w between coalesce(qt_dias_inicial,qt_dias_w) and coalesce(qt_dias_final,qt_dias_w)
	and	qt_dias_pag_mens_w between coalesce(qt_dias_ult_pag_inicial,qt_dias_pag_mens_w) and coalesce(qt_dias_ult_pag_final,qt_dias_pag_mens_w)
	and	((ie_tipo_contrato	<> ie_tipo_contrato_w) or (coalesce(ie_tipo_contrato::text, '') = ''))
	and	((ie_preco		<> ie_preco_w) or (coalesce(ie_preco::text, '') = ''))
	order by coalesce(ie_tipo_contrato,-1),
		coalesce(ie_preco,-1);


BEGIN

ds_retorno_w	:= '';

select	nr_seq_cliente,
	nr_seq_solicitacao,
	ie_consiste_benef_bloqueio
into STRICT	nr_seq_cliente_w,
	nr_seq_solicitacao_w,
	ie_consistir_benef_can_w
from	pls_simulacao_preco
where	nr_sequencia	= nr_seq_simulacao_p;

if (coalesce(ie_consistir_benef_can_w,'N') = 'S') and
	((nr_seq_cliente_w IS NOT NULL AND nr_seq_cliente_w::text <> '')  or (nr_seq_solicitacao_w IS NOT NULL AND nr_seq_solicitacao_w::text <> '')) then

	select	max(nr_sequencia)
	into STRICT	nr_seq_segurado_w
	from	pls_segurado
	where	cd_pessoa_fisica = cd_pessoa_fisica_p
	and	(dt_rescisao IS NOT NULL AND dt_rescisao::text <> '')
	and	ie_tipo_segurado not in ('P','I','H');

	if (nr_seq_segurado_w IS NOT NULL AND nr_seq_segurado_w::text <> '') then
		select	b.dt_rescisao,
			CASE WHEN coalesce(b.nr_seq_intercambio::text, '') = '' THEN 'O'  ELSE 'I' END ,
			a.ie_preco,
			b.dt_contratacao,
			b.nr_seq_pagador
		into STRICT	dt_rescisao_w,
			ie_tipo_contrato_w,
			ie_preco_w,
			dt_contratacao_w,
			nr_seq_pagador_w
		from	pls_segurado	b,
			pls_plano	a
		where	a.nr_sequencia	= b.nr_seq_plano
		and	b.nr_sequencia	= nr_seq_segurado_w;

		if (nr_seq_pagador_w IS NOT NULL AND nr_seq_pagador_w::text <> '') then
			select	cd_pessoa_fisica,
				cd_cgc
			into STRICT	cd_pessoa_pagador_w,
				cd_cgc_pagador_w
			from	pls_contrato_pagador
			where	nr_sequencia	= nr_seq_pagador_w;
		end if;

		select	max(dt_liquidacao)
		into STRICT	dt_liquidacao_w
		from	titulo_receber
		where	((cd_pessoa_fisica	= cd_pessoa_pagador_w and (cd_pessoa_pagador_w IS NOT NULL AND cd_pessoa_pagador_w::text <> '')) or (cd_cgc			= cd_cgc_pagador_w and (cd_cgc_pagador_w IS NOT NULL AND cd_cgc_pagador_w::text <> '')))
		and	ie_origem_titulo	= '3';

		qt_dias_w		:= Obter_Dias_Entre_Datas(dt_rescisao_w,clock_timestamp());
		qt_dias_pag_mens_w	:= Obter_Dias_Entre_Datas(dt_liquidacao_w,clock_timestamp());

		open C01;
		loop
		fetch C01 into
			ie_bloquar_vinculo_pessoa_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
		end loop;
		close C01;

		if (ie_bloquar_vinculo_pessoa_w = 'S') then
			ds_retorno_w	:= 'Pessoa física ' || substr(obter_nome_pf(cd_pessoa_fisica_p),1,255) || ' já possuia plano de saúde, no qual entrou no dia ' ||
					to_char(dt_contratacao_w,'dd/mm/yyyy') || ' e saiu no dia ' || to_char(dt_rescisao_w,'dd/mm/yyyy') ||' . Favor pedir para o gestor comercial liberar a inclusão dessa pessoa no simulador de preço!';
		end if;
	end if;
end if;

ds_retorno_p	:= ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_consistir_bloq_benef_canc ( nr_seq_simulacao_p bigint, cd_pessoa_fisica_p text, cd_estabelecimento_p bigint, ds_retorno_p INOUT text) FROM PUBLIC;

