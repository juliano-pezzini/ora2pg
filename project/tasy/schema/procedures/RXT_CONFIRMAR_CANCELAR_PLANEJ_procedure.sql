-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE rxt_confirmar_cancelar_planej (nr_seq_tratamento_p bigint, nr_seq_equipamento_p bigint, ie_confirmar_cancelar_p text, nm_usuario_p text, dt_agenda_p timestamp) AS $body$
DECLARE


nr_seq_agenda_w		bigint;
ie_status_w			varchar(1);
ie_reagendar_hor_w	varchar(1);
nr_seq_aplic_w  	bigint;

c01 CURSOR FOR
SELECT	nr_sequencia,
	CASE WHEN ie_confirmar_cancelar_p='S' THEN 'M'  ELSE 'C' END
from	rxt_agenda
where	nr_seq_equipamento	= nr_seq_equipamento_p
and	nr_seq_tratamento		= nr_seq_tratamento_p
and	ie_status_agenda <> 'C'
order by
	nr_sequencia;

c02 CURSOR FOR
SELECT	nr_sequencia,
	CASE WHEN ie_confirmar_cancelar_p='S' THEN 'M'  ELSE 'C' END
from	rxt_agenda
where	nr_seq_equipamento	= nr_seq_equipamento_p
and	nr_seq_tratamento	= nr_seq_tratamento_p
and	dt_agenda > dt_agenda_p
and	ie_status_agenda not in ('C','E')
order by
	nr_sequencia;


BEGIN

if (nr_seq_tratamento_p IS NOT NULL AND nr_seq_tratamento_p::text <> '') and (nr_seq_equipamento_p IS NOT NULL AND nr_seq_equipamento_p::text <> '') and (ie_confirmar_cancelar_p IS NOT NULL AND ie_confirmar_cancelar_p::text <> '') and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') then

	select	coalesce(max(ie_reagendar_hor),'N')
	into STRICT	ie_reagendar_hor_w
	from	rxt_parametro;

	if (ie_reagendar_hor_w = 'N') then

		open c01;
		loop
		fetch c01 into	nr_seq_agenda_w,
				ie_status_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			begin
			CALL rxt_alterar_status_agenda(nr_seq_agenda_w, ie_status_w, nm_usuario_p);

			update	rxt_agenda
			set	nm_usuario_acesso	 = NULL,
				ie_tipo_agenda		= 'T',
				nm_usuario_agenda	= nm_usuario_p
			where	nr_sequencia	= nr_seq_agenda_w;

			if (ie_confirmar_cancelar_p = 'N') and (ie_status_w = 'C') then
				update 	RXT_BRAQ_CAMPO_APLIC_TRAT
				set 	NR_SEQ_AGENDA  = NULL
				where 	nr_seq_agenda = nr_seq_agenda_w;
			end if;


			end;
		end loop;
		close c01;
	else
		open c02;
		loop
		fetch c02 into	nr_seq_agenda_w,
				ie_status_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			begin
			CALL rxt_alterar_status_agenda(nr_seq_agenda_w, ie_status_w, nm_usuario_p);

			update	rxt_agenda
			set	nm_usuario_acesso	 = NULL,
				ie_tipo_agenda		= 'T',
				nm_usuario_agenda	= nm_usuario_p
			where	nr_sequencia	= nr_seq_agenda_w;

			if (ie_confirmar_cancelar_p = 'N') and (ie_status_w = 'C') then
				update 	RXT_BRAQ_CAMPO_APLIC_TRAT
				set 	NR_SEQ_AGENDA  = NULL
				where 	nr_seq_agenda = nr_seq_agenda_w;
			end if;

			end;
		end loop;
		close c02;
	end if;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE rxt_confirmar_cancelar_planej (nr_seq_tratamento_p bigint, nr_seq_equipamento_p bigint, ie_confirmar_cancelar_p text, nm_usuario_p text, dt_agenda_p timestamp) FROM PUBLIC;

