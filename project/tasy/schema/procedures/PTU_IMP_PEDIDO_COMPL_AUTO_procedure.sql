-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ptu_imp_pedido_compl_auto ( ds_arquivo_p text, cd_estabelecimento_p bigint, nm_usuario_p text, nr_seq_controle_exec_p INOUT bigint) AS $body$
DECLARE

 
ie_tipo_cliente_w		varchar(15);
cd_unimed_executora_w		varchar(4);
cd_unimed_beneficiario_w	varchar(4);
nr_seq_execucao_w		bigint;
cd_unimed_w			varchar(4);
cd_usuario_plano_w		varchar(30);
cd_unimed_prestador_req_w	varchar(4);
nr_seq_prestador_req_w		bigint;
nr_seq_prestador_w		bigint;
cd_especialidade_w		smallint;
ds_observacao_w			varchar(4000);
ds_biometria_w			varchar(4000);
nr_seq_origem_w			bigint;
cd_servico_w			integer;
qt_servico_w			integer;
vl_servico_w			double precision;
ie_tipo_tabela_w		varchar(3);
nr_seq_pedido_w			bigint;
ds_conteudo_w			varchar(4000);
cd_transacao_w			varchar(5);
nr_seq_segurado_w		bigint;
nr_seq_plano_w			bigint;
cd_medico_solic_w		varchar(10);
nr_seq_guia_nova_w		bigint;
nr_seq_pedido_novo_w		bigint;
qt_registro_w			smallint;
qt_registro_ww			smallint;
ie_origem_proced_w		bigint;
nr_seq_import_w			smallint;
ie_tipo_servico_w		varchar(1);
nr_seq_guia_w			bigint;
nr_seq_pedido_ant_w		bigint;
nr_seq_guia_proc_w		bigint;
nr_seq_guia_mat_w		bigint;
ie_insere_w			varchar(2);
cd_cgc_outorgante_w		varchar(30);
nr_seq_congenere_w		bigint;
cd_servico_conversao_w		bigint;
ie_origem_proced_ww		bigint;
nr_seq_regra_w			bigint;
nr_seq_material_w		bigint;
cd_estabelecimento_w		bigint;
nr_seq_requisicao_w		bigint;
nr_seq_req_mat_w		bigint;
nr_seq_req_proc_w		bigint;
cd_guia_princ_w			varchar(20);
ds_opme_w			varchar(80);
nr_seq_guia_princ_w		bigint;
nr_seq_uni_exec_w		bigint;
nr_seq_requisicao_ww		bigint;

c01 CURSOR FOR 
	SELECT	nr_seq_importacao, 
		ds_valores 
	from	w_scs_importacao 
	where	nm_usuario	= nm_usuario_p 
	order by nr_seq_importacao;			

BEGIN 
 
open c01;
loop 
fetch c01 into 
	nr_seq_import_w, 
	ds_conteudo_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin 
	 
	if (substr(ds_conteudo_w,1,4)	<> 'FIM$') then 
		if (nr_seq_import_w	= 1) then 
			select	substr(ds_conteudo_w,1,5), 
				trim(both substr(ds_conteudo_w,6,15)), 
				trim(both substr(ds_conteudo_w,21,4)), 
				trim(both substr(ds_conteudo_w,25,4)), 
				CASE WHEN (substr(ds_conteudo_w,29,10))::numeric =0 THEN ''  ELSE (substr(ds_conteudo_w,29,10))::numeric  END , 
				CASE WHEN (substr(ds_conteudo_w,39,10))::numeric =0 THEN ''  ELSE (substr(ds_conteudo_w,39,10))::numeric  END , 
				trim(both substr(ds_conteudo_w,49,4)), 
				trim(both substr(ds_conteudo_w,53,13)), 
				trim(both substr(ds_conteudo_w,66,4)), 
				CASE WHEN (substr(ds_conteudo_w,70,8))::numeric =0 THEN ''  ELSE (substr(ds_conteudo_w,70,8))::numeric  END , 
				CASE WHEN (substr(ds_conteudo_w,82,8))::numeric =0 THEN ''  ELSE (substr(ds_conteudo_w,82,8))::numeric  END , 
				CASE WHEN (substr(ds_conteudo_w,90,2))::numeric =0 THEN ''  ELSE (substr(ds_conteudo_w,90,2))::numeric  END  
			into STRICT	cd_transacao_w, 
				ie_tipo_cliente_w, 
				cd_unimed_executora_w, 
				cd_unimed_beneficiario_w, 
				nr_seq_execucao_w, 
				nr_seq_origem_w, 
				cd_unimed_w, 
				cd_usuario_plano_w, 
				cd_unimed_prestador_req_w, 
				nr_seq_prestador_req_w, 
				nr_seq_prestador_w, 
				cd_especialidade_w 
			;
			 
			begin 
			select	nr_sequencia 
			into STRICT	nr_seq_pedido_ant_w 
			from	ptu_pedido_compl_aut 
			where	nr_seq_execucao	= nr_seq_execucao_w;
			exception 
			when others then 
				nr_seq_pedido_ant_w	:= 0;
			end;
			 
			if (nr_seq_pedido_ant_w	<> 0) then 
				select	nr_sequencia 
				into STRICT	nr_seq_controle_exec_p 
				from	ptu_controle_execucao 
				where	nr_seq_pedido_compl	= nr_seq_pedido_ant_w;
			 
				goto final;
			end if;
			 
			if (coalesce(cd_estabelecimento_p::text, '') = '') then 
				select	cd_estabelecimento 
				into STRICT	cd_estabelecimento_w 
				from	pls_parametros_scs;
			else 
				cd_estabelecimento_w	:= cd_estabelecimento_p;
			end if;
			 
			select	nextval('ptu_pedido_compl_aut_seq') 
			into STRICT	nr_seq_pedido_novo_w 
			;
			 
			select	nextval('ptu_controle_execucao_seq') 
			into STRICT	nr_seq_controle_exec_p 
			;
			 
			begin 
				select	nr_seq_guia, 
					nr_seq_requisicao 
				into STRICT	nr_seq_guia_w, 
					nr_seq_requisicao_w 
				from	ptu_resposta_autorizacao 
				where	nr_seq_execucao	= nr_seq_origem_w;
			exception 
			when others then 
				nr_seq_guia_w		:= null;
				nr_seq_requisicao_w	:= null;
			end;
			 
			begin 
				select	b.nr_sequencia, 
					b.nr_seq_plano 
				into STRICT	nr_seq_segurado_w, 
					nr_seq_plano_w 
				from  pls_segurado_carteira a, 
					pls_segurado b 
				where  a.cd_usuario_plano	= cd_unimed_w||cd_usuario_plano_w 
				and   a.nr_seq_segurado	= b.nr_sequencia 
				and	coalesce(b.dt_rescisao::text, '') = '' 
				and	coalesce(b.dt_cancelamento::text, '') = '';
			exception 
			when others then 
				nr_seq_segurado_w	:= null;
				nr_seq_plano_w		:= null;
			end;
			 
			begin 
				select	nr_sequencia 
				into STRICT	nr_seq_uni_exec_w 
				from	pls_congenere 
				where	cd_cooperativa	= cd_unimed_executora_w;
			exception 
			when others then 
				nr_seq_uni_exec_w	:= null;
			end;
			 
			if (ie_tipo_cliente_w	= 'UNIMED') then 
				ie_tipo_cliente_w	:= 'U';
			elsif (ie_tipo_cliente_w	= 'PORTAL') then 
				ie_tipo_cliente_w	:= 'P';
			elsif (ie_tipo_cliente_w	= 'PRESTADOR') then 
				ie_tipo_cliente_w	:= 'R';
			end if;
						 
			if (nr_seq_segurado_w IS NOT NULL AND nr_seq_segurado_w::text <> '') then 
				if (coalesce(nr_seq_requisicao_w,0)	<> 0) then 
					begin 
						select	max(nr_seq_guia) 
						into STRICT	nr_seq_guia_princ_w 
						from	pls_execucao_req_item 
						where	nr_seq_requisicao	= nr_seq_requisicao_w;
					exception 
					when others then 
						nr_seq_guia_princ_w	:= 0;
					end;
					 
					cd_guia_princ_w	:= substr(pls_obter_cd_seq_guia(nr_seq_guia_princ_w,null),1,20);
					 
					select	nextval('pls_requisicao_seq') 
					into STRICT	nr_seq_requisicao_ww 
					;
					 
					insert	into pls_requisicao(nr_sequencia, dt_requisicao, 
						 ie_tipo_guia, nr_seq_segurado, cd_estabelecimento, 
						 nr_seq_plano, nr_seq_prestador, ie_status, 
						 ie_estagio, dt_atualizacao, nm_usuario, 
						 ie_tipo_processo, cd_medico_solicitante, nr_seq_uni_exec, 
						 ie_tipo_intercambio, nr_seq_guia_principal, cd_guia_principal) 
					values (nr_seq_requisicao_ww, clock_timestamp(), 
						 '2', nr_seq_segurado_w, cd_estabelecimento_w, 
						 nr_seq_plano_w, null, 'P', 
						 1, clock_timestamp(), nm_usuario_p, 
						 'I', null, nr_seq_uni_exec_w, 
						 'E', nr_seq_guia_princ_w, cd_guia_princ_w);
						 
					CALL pls_requisicao_gravar_hist(	nr_seq_requisicao_ww,'L','Recebido e processado o pedido de complemento autorização da Unimed '||cd_unimed_executora_w, 
									null,nm_usuario_p);
				end if;
			end if;
 
			insert	into ptu_pedido_compl_aut(nr_sequencia, ie_tipo_cliente, cd_unimed_executora, 
				 cd_unimed_beneficiario, nr_seq_execucao, nr_seq_origem, 
				 cd_unimed, cd_usuario_plano, dt_atualizacao, 
				 nm_usuario, nr_seq_guia, nr_seq_requisicao, 
				 cd_unimed_prestador_req, nr_seq_prestador_req, nr_seq_prestador, 
				 cd_especialidade, ds_observacao, ds_biometria, 
				 cd_transacao, ds_arquivo_pedido) 
			values (nr_seq_pedido_novo_w, ie_tipo_cliente_w, cd_unimed_executora_w, 
				 cd_unimed_beneficiario_w, nr_seq_execucao_w, nr_seq_origem_w, 
				 cd_unimed_w, cd_usuario_plano_w, clock_timestamp(), 
				 nm_usuario_p, nr_seq_guia_w, nr_seq_requisicao_ww, 
				 cd_unimed_prestador_req_w, nr_seq_prestador_req_w, nr_seq_prestador_w, 
				 cd_especialidade_w, ds_observacao_w, ds_biometria_w, 
				 cd_transacao_w, ds_arquivo_p);
				 
			insert	into ptu_controle_execucao(nr_sequencia, dt_atualizacao, nm_usuario, 
				 nr_seq_pedido_compl, nr_seq_pedido_aut) 
			values (nr_seq_controle_exec_p, clock_timestamp(), nm_usuario_p, 
				 nr_seq_pedido_novo_w, null);
				 
		elsif (nr_seq_import_w	= 2) then 
			ds_observacao_w	:= trim(both substr(ds_conteudo_w,1,255));
			 
			CALL ptu_insere_observacao_scs(	ds_observacao_w, nr_seq_segurado_w, nr_seq_guia_w, 
							nr_seq_requisicao_ww, nr_seq_pedido_novo_w, 'PC', 
							nm_usuario_p);
		elsif (nr_seq_import_w	= 3) then 
			ds_biometria_w	:= trim(both substr(ds_conteudo_w,1,255));
 
			CALL ptu_insere_biometria_scs(	ds_biometria_w, nr_seq_segurado_w, nr_seq_guia_w, 
							nr_seq_requisicao_ww, nr_seq_pedido_novo_w, 'PC', 
							nm_usuario_p);
		elsif (nr_seq_import_w	> 3) and (substr(ds_conteudo_w,1,1) in ('0','1','2','3', '4')) then 
			select substr(ds_conteudo_w,1,1), 
				CASE WHEN (substr(ds_conteudo_w,2,8))::numeric =0 THEN ''  ELSE (substr(ds_conteudo_w,2,8))::numeric  END , 
				CASE WHEN (substr(ds_conteudo_w,10,8))::numeric =0 THEN ''  ELSE (substr(ds_conteudo_w,10,8))::numeric  END , 
				trim(both substr(ds_conteudo_w,18,80)), 
				CASE WHEN (substr(ds_conteudo_w,98,14))::numeric =0 THEN ''  ELSE (substr(ds_conteudo_w,98,14))::numeric  END  
			into STRICT	ie_tipo_tabela_w, 
				cd_servico_w, 
				qt_servico_w, 
				ds_opme_w, 
				vl_servico_w 
			;
			 
			ptu_insere_servicos_scs(	ie_tipo_tabela_w, cd_servico_w, qt_servico_w, 
							ds_opme_w, vl_servico_w, null, 
							nr_seq_segurado_w, 'PC', nr_seq_guia_w, 
							nr_seq_requisicao_ww, nr_seq_pedido_novo_w, cd_unimed_beneficiario_w, 
							cd_estabelecimento_p,nm_usuario_p, null, 
							null, null, null, 
							null, null, null, 
							null, null);
		end if;
	end if;
	 
	end;
end loop;
close C01;
 
CALL ptu_atualiza_imp_ped_autor_scs(	nr_seq_guia_w, nr_seq_requisicao_ww, nr_seq_segurado_w, 
				ie_tipo_tabela_w, ds_observacao_w, ds_opme_w, 
				'X', trunc(clock_timestamp()), cd_estabelecimento_p, 
				nm_usuario_p, cd_unimed_executora_w, 'C');
 
CALL ptu_gerar_resp_pedido_auto(nr_seq_controle_exec_p,cd_estabelecimento_w,nm_usuario_p);
 
<<final>> 
ie_insere_w	:= 'N';
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_imp_pedido_compl_auto ( ds_arquivo_p text, cd_estabelecimento_p bigint, nm_usuario_p text, nr_seq_controle_exec_p INOUT bigint) FROM PUBLIC;

