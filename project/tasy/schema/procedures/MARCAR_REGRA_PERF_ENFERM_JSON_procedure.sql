-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE marcar_regra_perf_enferm_json ( JSON_P text, RETORNO_P INOUT text, CD_PESSOA_FISICA_P pessoa_fisica.cd_pessoa_fisica%type) AS $body$
DECLARE

    retorno_json_w      PHILIPS_JSON := PHILIPS_JSON();
    retorno_item_json_w PHILIPS_JSON;
    options_json_w      PHILIPS_JSON;
    option_json_w       PHILIPS_JSON;

    tabs_list_w                 PHILIPS_JSON_LIST;
    items_list_w                PHILIPS_JSON_LIST;
    options_list_w              PHILIPS_JSON_LIST;
    retorno_json_list_items_w   PHILIPS_JSON_LIST := PHILIPS_JSON_LIST();

    nr_seq_result_w pe_item_nursing_profile.nr_seq_result%type;
    nr_seq_prescr_w pe_prescr_item_result.nr_seq_prescr%type;
    nm_usuario_w    pe_prescr_item_result.nm_usuario%type;
    nr_seq_item_w   pe_item_resultado.nr_seq_item%type;
    check_w         bigint;
    check_qtd_sqls bigint;
BEGIN
    tabs_list_w := PHILIPS_JSON_LIST(JSON_P);

    for i in 1..tabs_list_w.count loop
        items_list_w := philips_json_list(PHILIPS_JSON(tabs_list_w.get(i)).get('tabs'));
        for j in 1..items_list_w.count() loop
            options_list_w := philips_json_list(PHILIPS_JSON(items_list_w.get(j)).get('items'));
            for k in 1..options_list_w.count() loop
                options_json_w := PHILIPS_JSON(options_list_w.get(k));
                option_json_w := PHILIPS_JSON(options_json_w.get('options'));
                nr_seq_result_w := option_json_w.get['NR_SEQ_RESULT_P'].get_string();
                nr_seq_prescr_w := option_json_w.get['NR_SEQ_PRESCR_P'].get_number();
                nm_usuario_w := option_json_w.get['NM_USUARIO_P'].get_string();
                nr_seq_item_w := option_json_w.get['NR_SEQ_ITEM_P'].get_string();
                check_w := option_json_w.get['CHECK_P'].get_number();

                select count(1)
                into STRICT check_qtd_sqls
                from pe_item_nursing_profile pinp
                where pinp.nr_seq_result = nr_seq_result_w
                and not exists ( SELECT 1
                                FROM pe_item_examinar sie
                left join pe_prescr_item_result ppir on ppir.nr_seq_item = sie.nr_sequencia
                where sie.nr_sequencia = (select nr_seq_item
                from pe_item_resultado pir
                where pir.nr_sequencia = pinp.nr_seq_result)
                and ppir.nr_seq_prescr = nr_seq_prescr_w);

                if (check_qtd_sqls > 0) then
                 check_w := MARCAR_REGRA_PERF_ENFERM(nr_seq_result_w, nr_seq_prescr_w, nm_usuario_w, nr_seq_item_w, CD_PESSOA_FISICA_P, check_w);
                 option_json_w.put('CHECK_P', check_w);
                IF check_w = 1 then
                    retorno_item_json_w := PHILIPS_JSON();
                    retorno_item_json_w.put('tab', i-1);
                    retorno_item_json_w.put('item', j-1);
                    retorno_item_json_w.put('nr_seq_result', nr_seq_result_w);
                    retorno_json_list_items_w.append(retorno_item_json_w.to_json_value());
                end if;
                end if;
            end loop;
        end loop;
    END LOOP;
    retorno_json_w.put('items', retorno_json_list_items_w);
    RETORNO_P := retorno_json_w.to_char();
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE marcar_regra_perf_enferm_json ( JSON_P text, RETORNO_P INOUT text, CD_PESSOA_FISICA_P pessoa_fisica.cd_pessoa_fisica%type) FROM PUBLIC;

