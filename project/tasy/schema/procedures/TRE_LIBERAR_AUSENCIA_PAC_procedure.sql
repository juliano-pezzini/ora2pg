-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE tre_liberar_ausencia_pac ( nr_seq_ausencia_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE


cd_pessoa_fisica_w	varchar(10);
dt_periodo_inicial_w	timestamp;
dt_periodo_final_w	timestamp;
dt_agenda_w		timestamp;
nr_seq_pac_dia_w	bigint;
nr_seq_inscrito_w	bigint;
ie_status_paciente_w	varchar(2);
ie_justificada_w	varchar(1);
ie_novo_status_w	varchar(2);
ds_observacao_w		varchar(255);

C01 CURSOR FOR
	SELECT 	substr(tre_obter_dados_pac_dia(b.nr_sequencia,dt_agenda_w,'C'),1,255),
		b.nr_sequencia,
		substr(tre_obter_dados_pac_dia(b.nr_sequencia,dt_agenda_w,'SP'),1,255)
	from	tre_inscrito b,
		tre_evento c
	where	b.nr_seq_evento = c.nr_sequencia
	and	((tre_valida_se_dia_curso(c.nr_sequencia,fim_dia(dt_agenda_w)) = 'S') or ((tre_obter_dados_pac_dia(b.nr_sequencia,dt_agenda_w,'CA'))::numeric  > 0))
	and (substr(tre_obter_se_data_fim_valida(dt_agenda_w,c.nr_sequencia,c.dt_fim_real,c.dt_fim),1,1) = 'S')
	and	b.cd_pessoa_fisica = cd_pessoa_fisica_w
	and	fim_dia(dt_agenda_w) >= c.dt_inicio
	and (obter_se_feriado(cd_estabelecimento_p, dt_agenda_w) = 0)
	and	not exists (	SELECT	1
				from	tre_agenda v
				where	v.nr_sequencia = c.nr_seq_agenda
				and	(v.DT_CANCELAMENTO IS NOT NULL AND v.DT_CANCELAMENTO::text <> ''));


BEGIN
select	max(cd_pessoa_fisica),
	max(trunc(dt_periodo_inicial)),
	max(trunc(dt_periodo_final)),
	max(ie_justificada),
	max(ds_observacao)
into STRICT	cd_pessoa_fisica_w,
	dt_periodo_inicial_w,
	dt_periodo_final_w,
	ie_justificada_w,
	ds_observacao_w
from	tre_ausencia
where	nr_sequencia = nr_seq_ausencia_p;

dt_agenda_w := dt_periodo_inicial_w;

while(dt_agenda_w <= dt_periodo_final_w) loop
	begin

	open C01;
	loop
	fetch C01 into
		nr_seq_pac_dia_w,
		nr_seq_inscrito_w,
		ie_status_paciente_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		if (ie_status_paciente_w = 'N') then
			if (ie_justificada_w = 'J') then
				ie_novo_status_w := 'F';
			elsif (ie_justificada_w = 'N') then
				ie_novo_status_w := 'I';
			end if;

			if (nr_seq_pac_dia_w IS NOT NULL AND nr_seq_pac_dia_w::text <> '') then
				update	tre_paciente_dia
				set	ie_status_paciente = ie_novo_status_w,
					ds_motivo_status = ds_observacao_w
				where	nr_sequencia = nr_seq_pac_dia_w;
			else
				nr_seq_pac_dia_w := tre_insere_pac_dia(nr_seq_inscrito_w, dt_agenda_w, nm_usuario_p, nr_seq_pac_dia_w);
				if (nr_seq_pac_dia_w IS NOT NULL AND nr_seq_pac_dia_w::text <> '') then
					update	tre_paciente_dia
					set	ie_status_paciente = ie_novo_status_w,
						ds_motivo_status = ds_observacao_w
					where	nr_sequencia = nr_seq_pac_dia_w;
				end if;
			end if;

			if (ie_novo_status_w = 'I') then
				CALL tre_aplica_regra_falta(dt_agenda_w,nr_seq_inscrito_w,nm_usuario_p,cd_estabelecimento_p);
			end if;

		end if;
		end;
	end loop;
	close C01;

	dt_agenda_w := dt_agenda_w + 1;

	end;
end loop;

update	tre_ausencia
set	dt_liberacao = clock_timestamp(),
	nm_usuario_lib = nm_usuario_p
where	nr_sequencia = nr_seq_ausencia_p;


commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE tre_liberar_ausencia_pac ( nr_seq_ausencia_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

