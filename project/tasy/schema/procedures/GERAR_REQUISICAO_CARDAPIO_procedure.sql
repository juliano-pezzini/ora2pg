-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_requisicao_cardapio ( nr_seq_ordem_p bigint, cd_estabelecimento_p bigint, cd_setor_atendimento_p bigint, cd_pessoa_requisitante_p text, nm_usuario_p text, ie_insere_obs_ordem_p text) AS $body$
DECLARE


nr_seq_cardapio_w			bigint;
nr_seq_receita_w			bigint;
nr_requisicao_w			bigint;
nr_sequencia_w			integer := 0;
cd_material_w			integer;
qt_conversao_w			double precision;
qt_componente_w			double precision;
cd_unidade_medida_consumo_w	varchar(30);
cd_unidade_medida_estoque_w	varchar(30);
cd_local_estoque_w		smallint;
cd_operacao_estoque_w		smallint;
cd_centro_custo_w			integer;
ie_arred_req_w			varchar(1);
nr_seq_item_w			bigint;
ds_ordem_w			varchar(80);

c01 CURSOR FOR
	SELECT	nr_seq_cardapio
	from	nut_ordem_prod_card
	where	nr_seq_ordem	= nr_seq_ordem_p;

c02 CURSOR FOR
	SELECT	b.nr_sequencia
	from	nut_cardapio a,
		nut_receita_real b
	where	b.nr_seq_cardapio	= a.nr_sequencia
	and	a.nr_seq_card_dia	= nr_seq_cardapio_w;

c03 CURSOR FOR
	SELECT	b.cd_material,
		b.qt_conversao,
		a.qt_componente,
		substr(obter_dados_material_estab(b.cd_material,cd_estabelecimento_p,'UMS'),1,30) cd_unidade_medida_consumo,
        substr(obter_dados_material_estab(b.cd_material,cd_estabelecimento_p,'UME'),1,30) cd_unidade_medida_estoque
	from	material c,
		nut_genero_alim b,
		nut_rec_real_comp a
	where	coalesce(a.nr_seq_gen_alim_sub,a.nr_seq_gen_alim)	= b.nr_sequencia
	and	b.cd_material					= c.cd_material
	and	a.nr_seq_rec_real				= nr_seq_receita_w;

C04 CURSOR FOR
	SELECT	g.nr_sequencia,
		g.cd_material
	from	nut_ordem_prod_card a,
		nut_cardapio b,
		nut_receita_real c,
		material f,
		nut_genero_alim e,
		nut_rec_real_comp d,
		item_requisicao_material g
	where	c.nr_seq_cardapio	= b.nr_sequencia
	and	b.nr_seq_card_dia	= a.nr_seq_cardapio
	and	coalesce(nr_seq_gen_alim_sub,d.nr_seq_gen_alim)	= e.nr_sequencia
	and	e.cd_material		= f.cd_material
	and	d.nr_seq_rec_real	= c.nr_sequencia
	and	e.cd_material		= g.cd_material
	and	coalesce(e.ie_arred_req,'N') = 'S'
	and	g.nr_requisicao 	= nr_requisicao_w
	and	a.nr_seq_ordem		= nr_seq_ordem_p
	group by g.nr_sequencia,
		g.cd_material;


BEGIN

select	cd_local_estoque,
	cd_operacao_estoque,
	cd_centro_custo,
	CASE WHEN ie_insere_obs_ordem_p='S' THEN  ds_ordem  ELSE '' END
into STRICT	cd_local_estoque_w,
	cd_operacao_estoque_w,
	cd_centro_custo_w,
	ds_ordem_w
from	nut_ordem_prod
where	nr_sequencia	= nr_seq_ordem_p;

select	coalesce(max(cd_operacao_requisicao),cd_operacao_estoque_w)
into STRICT	cd_operacao_estoque_w
from	parametros_nutricao
where	cd_estabelecimento = cd_estabelecimento_p;

select	nextval('requisicao_seq')
into STRICT	nr_requisicao_w
;

begin
insert into requisicao_material(
	nr_requisicao,
	cd_estabelecimento,
	cd_setor_atendimento,
	cd_local_estoque,
	dt_solicitacao_requisicao,
	dt_atualizacao,
	nm_usuario,
	cd_operacao_estoque,
	cd_pessoa_requisitante,
	cd_estabelecimento_destino,
	cd_local_estoque_destino,
	cd_centro_custo,
	ie_urgente,
	ds_observacao)
values (	nr_requisicao_w,
	cd_estabelecimento_p,
	cd_setor_atendimento_p,
	cd_local_estoque_w,
	clock_timestamp(),
	clock_timestamp(),
	nm_usuario_p,
	cd_operacao_estoque_w,
	cd_pessoa_requisitante_p,
	cd_estabelecimento_p,
	null,
	cd_centro_custo_w,
	'N',
	ds_ordem_w);
exception
	when others then
        	--Erro ao gravar requisicao!
		CALL wheb_mensagem_pck.exibir_mensagem_abort(210050);
end;

insert into nut_ordem_prod_req(
	nr_sequencia,
	dt_atualizacao,
	nm_usuario,
	dt_atualizacao_nrec,
	nm_usuario_nrec,
	nr_seq_ordem,
	nr_requisicao)
values (	nextval('nut_ordem_prod_req_seq'),
	clock_timestamp(),
	nm_usuario_p,
	clock_timestamp(),
	nm_usuario_p,
	nr_seq_ordem_p,
	nr_requisicao_w);

commit;

OPEN c01;
LOOP
FETCH c01 into
	nr_seq_cardapio_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	OPEN c02;
	LOOP
	FETCH c02 into
		nr_seq_receita_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		OPEN c03;
		LOOP
		FETCH c03 into
			cd_material_w,
			qt_conversao_w,
			qt_componente_w,
			cd_unidade_medida_consumo_w,
			cd_unidade_medida_estoque_w;
		EXIT WHEN NOT FOUND; /* apply on c03 */

		select coalesce(max(nr_sequencia),0)
		into STRICT	nr_seq_item_w
		from	item_requisicao_material
		where 	nr_requisicao 		= nr_requisicao_w
		and	cd_unidade_medida 	= cd_unidade_medida_consumo_w
		and	cd_material		= cd_material_w;

		qt_componente_w	:= dividir(qt_componente_w,qt_conversao_w);

		if (nr_seq_item_w > 0) then
			update	item_requisicao_material
			set	qt_material_requisitada = qt_material_requisitada + qt_componente_w,
				qt_estoque = qt_estoque + qt_componente_w
			where	nr_sequencia = nr_seq_item_w
			and	nr_requisicao 		= nr_requisicao_w;
		else
			begin
			nr_sequencia_w   	:= (nr_sequencia_w + 1);

			insert into item_requisicao_material(
					nr_requisicao,
				nr_sequencia,
				cd_estabelecimento,
				cd_material,
					qt_material_requisitada,
				qt_material_atendida,
				vl_material,
				dt_atualizacao,
				nm_usuario,
				cd_unidade_medida,
				qt_estoque,
				cd_unidade_medida_estoque,
				ie_acao,
				cd_motivo_baixa)
			values (	nr_requisicao_w,
				nr_sequencia_w,
				cd_estabelecimento_p,
					cd_material_w,
				qt_componente_w,
				0,
				0,
				clock_timestamp(),
				nm_usuario_p,
				cd_unidade_medida_consumo_w,
				qt_componente_w,
				cd_unidade_medida_consumo_w,
				'1',
				0);
			end;
		end if;
		END LOOP;
		CLOSE c03;
	END LOOP;
	CLOSE c02;
END LOOP;
CLOSE c01;

open C04;
loop
fetch C04 into
	nr_sequencia_w,
	cd_material_w;
EXIT WHEN NOT FOUND; /* apply on C04 */
	begin
	update	item_requisicao_material
	set	qt_estoque 				= ceil(qt_estoque),
		qt_material_requisitada = ceil(qt_material_requisitada)
	where	nr_requisicao = nr_requisicao_w
	and	nr_sequencia = nr_sequencia_w
	and	cd_material = cd_material_w;
	end;
end loop;
close C04;

commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_requisicao_cardapio ( nr_seq_ordem_p bigint, cd_estabelecimento_p bigint, cd_setor_atendimento_p bigint, cd_pessoa_requisitante_p text, nm_usuario_p text, ie_insere_obs_ordem_p text) FROM PUBLIC;

