-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_nom_rc_responsavel_resg (nr_seq_cabecalho_p bigint, nm_usuario_p text) AS $body$
DECLARE


/* Persona responsable del paciente */

nr_atendimento_w			atendimento_paciente.nr_atendimento%type;
nr_seq_episodio_w			episodio_paciente.nr_sequencia%type;
cd_estabelecimento_w		estabelecimento.cd_estabelecimento%type;
cd_cgc_w					pessoa_juridica.cd_cgc%type;
nr_seq_pessoa_endereco_w	pessoa_endereco.nr_sequencia%type;


cd_clues_w 					varchar(30);							/*id_142*/
nm_estab_salud_w			nom_rc_pessoa_juridica.nm_estab_salud%type;							/*id_143*/
nr_telefone_w				varchar(30);	/*id_144*/
ds_email_w					compl_pessoa_fisica.ds_email%type;		/*id_145*/
ds_domicilio_w				varchar(2000);							/*id_146*/
cd_tipo_vialidade_w			varchar(255);							/*id_147*/
nm_vialidade_w				varchar(255);							/*id_148*/
nr_domicilio_ext_w			varchar(255);							/*id_149*/
nr_domicilio_ext_alfa_w		varchar(255);
nr_domicilio_int_w			varchar(255);							/*id_152*/
nr_domicilio_int_alfa_w		varchar(255);
cd_tipo_assentamento_w		varchar(255);							/*id_153*/
nm_assentamento_w			varchar(255);							/*id_154*/
cd_localidade_w				varchar(255);							/*id_155*/
cd_municipio_w				varchar(255);							/*id_156*/
cd_entidade_fed_w			varchar(255);							/*id_157*/
cd_postal_w					varchar(255);							/*id_158*/
cd_pais_w					varchar(255);							/*id_159*/
nr_seq_catalogo_w			end_catalogo.nr_sequencia%type;


BEGIN

delete FROM nom_rc_pessoa_juridica where nr_seq_cabecalho = nr_seq_cabecalho_p and ie_tipo = 'RES';

select	a.nr_atendimento,
		a.nr_seq_episodio,
		a.cd_estabelecimento
into STRICT	nr_atendimento_w,
		nr_seq_episodio_w,
		cd_estabelecimento_w
from	nom_rc_cabecalho a
where	a.nr_sequencia	= nr_seq_cabecalho_p;

if	((coalesce(nr_atendimento_w::text, '') = '') and (nr_seq_episodio_w IS NOT NULL AND nr_seq_episodio_w::text <> '')) then
	select	min(nr_atendimento)
	into STRICT	nr_atendimento_w
	from	atendimento_paciente a
	where	a.nr_seq_episodio = nr_seq_episodio_w;
end if;

if (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') then


	select  obter_nom_rc_telefone(null, h.cd_cgc, null) nr_telefone,	/*id_144*/
			coalesce(pe.ds_email,h.ds_email) ds_email,			/*id_145*/
			h.cd_internacional cd_clues_estab, 	/*id_142*/
			h.cd_cgc cd_cgc,
			h.ds_razao_social ds_razao_social	/*id_143*/
	into STRICT
			nr_telefone_w,
			ds_email_w,
			cd_clues_w,
			cd_cgc_w,
			nm_estab_salud_w
	FROM atendimento_paciente r, pessoa_juridica h, estabelecimento x
LEFT OUTER JOIN pessoa_juridica_estab pe ON (x.cd_cgc = pe.cd_cgc AND x.cd_estabelecimento = pe.cd_estabelecimento)
WHERE r.nr_atendimento = nr_atendimento_w and x.cd_cgc = h.cd_cgc and r.cd_estabelecimento = x.cd_estabelecimento;




	if (cd_cgc_w IS NOT NULL AND cd_cgc_w::text <> '') then

		/* Endereco */

		select	nr_seq_pessoa_endereco,	
				get_complete_address_desc(a.nr_seq_pessoa_endereco,null,null,null,null,'Y') ds_endereco_completo , /* id_146 */
				get_info_end_endereco(a.nr_seq_pessoa_endereco,'TIPO_LOGRAD','C') cd_tipo_vialidade, /* id_147 */
				get_info_end_endereco(a.nr_seq_pessoa_endereco,'RUA_VIALIDADE','D') ds_rua_vialidade, /* id_148 */
				get_info_end_endereco(a.nr_seq_pessoa_endereco,'NUMERO','D') nr_numero_externo,	/* id_149 */
				get_info_end_endereco(a.nr_seq_pessoa_endereco,'NUM_EXT_ALFA','D') nr_numero_ext_alfa,
				get_info_end_endereco(a.nr_seq_pessoa_endereco,'NUMERO_INT','D') nr_numero_interno,
				get_info_end_endereco(a.nr_seq_pessoa_endereco,'COMPLEMENTO','D') nr_numero_int_alfa, /* id_152 */
				get_info_end_endereco(a.nr_seq_pessoa_endereco,'TIPO_BAIRRO','C') cd_tipo_assentamento, /* id_153 */
				get_info_end_endereco(a.nr_seq_pessoa_endereco,'BAIRRO_VILA','D') nm_assentamento, /* id_154 */
				get_info_end_endereco(a.nr_seq_pessoa_endereco,'LOCALIDADE_AREA','C') cd_localidade, /* id_63 */
				get_info_end_endereco(a.nr_seq_pessoa_endereco,'MUNICIPIO','C') cd_municipio, /* id_64 */
				get_info_end_endereco(a.nr_seq_pessoa_endereco,'ESTADO_PROVINCI','C') cd_entidade, /* id_65 */
				get_info_end_endereco(a.nr_seq_pessoa_endereco,'CODIGO_POSTAL','D') cd_postal,  /* id_66 */
				get_info_end_endereco(a.nr_seq_pessoa_endereco,'PAIS','C') cd_pais /* id_67 */
		into STRICT	nr_seq_pessoa_endereco_w,
				ds_domicilio_w,	
				cd_tipo_vialidade_w,
				nm_vialidade_w,
				nr_domicilio_ext_w,
				nr_domicilio_ext_alfa_w,
				nr_domicilio_int_w,
				nr_domicilio_int_alfa_w,
				cd_tipo_assentamento_w,
				nm_assentamento_w,
				cd_localidade_w,
				cd_municipio_w,
				cd_entidade_fed_w,
				cd_postal_w,
				cd_pais_w
		from	pessoa_juridica a
		where	a.cd_cgc = cd_cgc_w;

		select	max(b.nr_seq_catalogo)
		into STRICT	nr_seq_catalogo_w
		from	end_endereco b,
				pessoa_endereco_item a
		where	b.nr_sequencia = a.nr_seq_end_endereco
		and		a.nr_seq_pessoa_endereco = nr_seq_pessoa_endereco_w;
	end if;

	insert into nom_rc_pessoa_juridica(nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_seq_cabecalho,
		ie_tipo,
		cd_clues_estab,
		nm_estab_salud,
		nr_telefone,
		ds_email,
		ds_domicilio,
		cd_tipo_vialidade,
		nm_vialidade,
		nr_domicilio_ext,
		nr_domicilio_ext_alfa,
		nr_domicilio_int,
		nr_domicilio_int_alfa,
		cd_tipo_assentamento,
		nm_assentamento,
		cd_localidade,
		cd_municipio,
		cd_entidade_fed,
		cd_postal,
		cd_pais,
		nr_seq_catalogo)
	values (nextval('nom_rc_pessoa_juridica_seq'),
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		nr_seq_cabecalho_p,
		'RES',
		cd_clues_w,
		nm_estab_salud_w,
		nr_telefone_w,
		ds_email_w,
		ds_domicilio_w,
		cd_tipo_vialidade_w,
		nm_vialidade_w,
		nr_domicilio_ext_w,
		nr_domicilio_ext_alfa_w,
		nr_domicilio_int_w,
		nr_domicilio_int_alfa_w,
		cd_tipo_assentamento_w,
		nm_assentamento_w,
		cd_localidade_w,
		cd_municipio_w,
		cd_entidade_fed_w,
		cd_postal_w,
		cd_pais_w,
		nr_seq_catalogo_w);
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_nom_rc_responsavel_resg (nr_seq_cabecalho_p bigint, nm_usuario_p text) FROM PUBLIC;

