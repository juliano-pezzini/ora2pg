-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE envia_sms_email_laudo ( nr_atendimento_p prescr_medica.nr_atendimento%TYPE, nr_seq_malote_p malote_envelope_laudo.nr_sequencia%TYPE, nm_usuario_p pessoa_fisica.nm_usuario%TYPE) AS $body$
DECLARE





nr_atendimento_w		bigint;
qt_prescr_valida_w		bigint;
qt_prescr_invalida_w		bigint;
nr_seq_evento_w			bigint;
qt_existe_regra_w		bigint;

ie_origem_proced_w		        numeric(20);
nr_seq_regra_w                  regra_envio_sms.nr_sequencia%TYPE;
qt_atendimento_regra_proc_w     numeric(20);

c01 CURSOR FOR
	SELECT	distinct b.nr_atendimento
	from	prescr_medica b,
		envelope_laudo_item c,
		envelope_laudo d,
		malote_envelope_item e,
		malote_envelope_laudo f
	where 	b.nr_prescricao = c.nr_prescricao
	and	c.nr_seq_envelope = d.nr_sequencia
	and	d.nr_sequencia = e.nr_seq_envelope
	and	f.nr_sequencia = e.nr_seq_malote
	and	f.nr_sequencia = nr_seq_malote_p;


c03 CURSOR FOR  -- Envio para medico do laudo liberado
	SELECT	a.nr_seq_evento
	from	regra_envio_sms a
	where	a.ie_evento_disp = 'ELLM'
	and	coalesce(a.ie_situacao,'A') = 'A';


c04 CURSOR FOR  -- Envio para paciente do laudo liberado (Gestao de Entrega de Laudo)
	SELECT	a.nr_seq_evento,
            a.nr_sequencia
	from	regra_envio_sms a
	where	a.ie_evento_disp = 'ELLP'
	and	coalesce(a.ie_situacao,'A') = 'A';


BEGIN

select	count(*)
into STRICT	qt_existe_regra_w
from	regra_envio_sms a
where	a.ie_evento_disp = 'ELLP'
and	coalesce(a.ie_situacao,'A') = 'A';

if (nr_seq_malote_p IS NOT NULL AND nr_seq_malote_p::text <> '') and (qt_existe_regra_w > 0) then
	begin

	open C01;
	loop
	fetch C01 into
		nr_atendimento_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin


		select	count(*) --Validado    Prescricao com exames com laudo liberado
		into STRICT	qt_prescr_valida_w
		from  	prescr_medica a
		where 	Obter_se_laudo_exame_liberado(null,a.nr_prescricao,null,'TL') = 'S'
		and	a.nr_atendimento = nr_atendimento_w;


		select	count(*) --Invalidado   Prescricao com exames sem laudo liberado
		into STRICT	qt_prescr_invalida_w
		from  	prescr_medica a
		where 	Obter_se_laudo_exame_liberado(null,a.nr_prescricao,null,'TL') = 'N'
		and	a.nr_atendimento = nr_atendimento_w;

		if (qt_prescr_invalida_w = 0) and (qt_prescr_valida_w > 0) then


		open C04;
		loop
		fetch C04 into
			nr_seq_evento_w,
            nr_seq_regra_w;
		EXIT WHEN NOT FOUND; /* apply on C04 */
			begin

            select	count(*)
            into STRICT    qt_atendimento_regra_proc_w
            from	prescr_medica b,
                    envelope_laudo_item c,
                    envelope_laudo d,
                    malote_envelope_item e,
                    malote_envelope_laudo f,
                    prescr_procedimento g
            where 	b.nr_prescricao = c.nr_prescricao
                and	c.nr_seq_envelope = d.nr_sequencia
                and	d.nr_sequencia = e.nr_seq_envelope
                and	f.nr_sequencia = e.nr_seq_malote
                and g.nr_sequencia = c.nr_seq_prescr
                and g.nr_prescricao = c.nr_prescricao
                and (obter_se_proc_rec_alerta(g.nr_seq_proc_interno, nr_seq_regra_w, g.cd_procedimento, ie_origem_proced_w, g.nr_seq_exame) = 'S')
                and	f.nr_sequencia = nr_seq_malote_p
                and b.nr_atendimento = nr_atendimento_w;

            if (qt_atendimento_regra_proc_w > 0)then
                   CALL gerar_evento_envio_laudo(nr_seq_evento_w,nm_usuario_p,nr_atendimento_w);
            end if;
			end;
		end loop;
		close C04;

		end if;


		end;
	end loop;
	close C01;


	end;
end if;

qt_existe_regra_w	:=	0;

select	count(*)
into STRICT	qt_existe_regra_w
from	regra_envio_sms a
where	a.ie_evento_disp = 'ELLM'
and	coalesce(a.ie_situacao,'A') = 'A';

if (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') and (qt_existe_regra_w > 0) then
	begin

	nr_atendimento_w	:=	nr_atendimento_p;

	select	count(*) --Validado    Prescricao com exames com laudo liberado
	into STRICT	qt_prescr_valida_w
	from  	prescr_medica a
	where 	Obter_se_laudo_exame_liberado(null,a.nr_prescricao,null,'TL') = 'S'
	and	a.nr_atendimento = nr_atendimento_w;


	select	count(*) --Invalidado   Prescricao com exames sem laudo liberado
	into STRICT	qt_prescr_invalida_w
	from  	prescr_medica a
	where 	Obter_se_laudo_exame_liberado(null,a.nr_prescricao,null,'TL') = 'N'
	and	a.nr_atendimento = nr_atendimento_w;

	if (qt_prescr_invalida_w = 0) and (qt_prescr_valida_w > 0) then

	open C03;
	loop
	fetch C03 into
		nr_seq_evento_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin
		CALL gerar_evento_envio_laudo(nr_seq_evento_w,nm_usuario_p,nr_atendimento_p);
		end;
	end loop;
	close C03;

	end if;


	end;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE envia_sms_email_laudo ( nr_atendimento_p prescr_medica.nr_atendimento%TYPE, nr_seq_malote_p malote_envelope_laudo.nr_sequencia%TYPE, nm_usuario_p pessoa_fisica.nm_usuario%TYPE) FROM PUBLIC;

