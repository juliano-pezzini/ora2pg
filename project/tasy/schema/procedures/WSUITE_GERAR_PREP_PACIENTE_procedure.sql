-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE wsuite_gerar_prep_paciente ( ie_tipo_evento_p text default null, nr_seq_agendamento_p text DEFAULT NULL, ds_login_usuario_p text DEFAULT NULL, cd_tipo_agenda_p text DEFAULT NULL, cd_estabelecimento_p bigint DEFAULT NULL, cd_pessoa_fisica_p bigint DEFAULT NULL) AS $body$
DECLARE

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:
Gerar as tarefas apos cada evento de agendamento para a preparacao do paciente.
-------------------------------------------------------------------------------------------------
Locais de chamada direta:
[  ]  Objetos do dicionario [ ] Tasy (Delphi/Java/HTML5) [x] Portal [  ]  Relatorios [ ] Outros:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
vl_parametro_16_w   	wsuite_param_usuario.vl_parametro%type;

TYPE t_wsuite_eventos IS TABLE OF wsuite_preparacao_paciente%ROWTYPE INDEX BY integer;

wsuite_eventos_w 	t_wsuite_eventos;
index_w	bigint := 1;	
  r RECORD;

BEGIN
    select coalesce(TWS_OBTER_PARAM_TIPO_LOGIN(1,9111,16),'N')
      into STRICT vl_parametro_16_w
;

    if ((vl_parametro_16_w = 'S') and (ie_tipo_evento_p IS NOT NULL AND ie_tipo_evento_p::text <> '') and (nr_seq_agendamento_p IS NOT NULL AND nr_seq_agendamento_p::text <> '') ) then

		for r in (SELECT 	b.nr_sequencia,
							b.nr_seq_cad_evento,
                            b.ie_tipo_tarefa,
							nextval('wsuite_preparacao_paciente_seq') as nr_seq
					from 	wsuite_cad_prep_pac_evento a,
							wsuite_cad_prep_pac_tarefa b
					where 	a.nr_sequencia = b.nr_seq_cad_evento
					and 	a.ie_tipo_evento = ie_tipo_evento_p
					and 	a.ie_situacao = 'A') loop
            if not(coalesce(cd_pessoa_fisica_p::text, '') = '' and (r.ie_tipo_tarefa = 'QT' or r.ie_tipo_tarefa = 'PM' or r.ie_tipo_tarefa = 'CA' or r.ie_tipo_tarefa = 'AP') ) then
                wsuite_eventos_w[index_w].nr_sequencia 	 	  := r.nr_seq;
                wsuite_eventos_w[index_w].cd_estabelecimento  := cd_estabelecimento_p;
                wsuite_eventos_w[index_w].ie_tipo_agenda	  := cd_tipo_agenda_p;
                wsuite_eventos_w[index_w].nr_seq_agenda		  := nr_seq_agendamento_p;
                wsuite_eventos_w[index_w].nr_seq_cad_evento   := r.nr_seq_cad_evento;
                wsuite_eventos_w[index_w].nr_seq_cad_tarefa	  := r.nr_sequencia;
                wsuite_eventos_w[index_w].dt_atualizacao	  := clock_timestamp();
                wsuite_eventos_w[index_w].nm_usuario		  := ds_login_usuario_p;
                wsuite_eventos_w[index_w].dt_atualizacao_nrec := clock_timestamp();
                wsuite_eventos_w[index_w].nm_usuario_nrec	  := ds_login_usuario_p;
                wsuite_eventos_w[index_w].ie_status_tarefa	  := 'P';
                index_w := index_w + 1;
            end if;
		end loop;

		if (wsuite_eventos_w.first IS NOT NULL AND wsuite_eventos_w.first::text <> '') then
			forall i IN wsuite_eventos_w.first .. wsuite_eventos_w.last

			insert into wsuite_preparacao_paciente  values wsuite_eventos_w(i);
        end if;
    end if;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE wsuite_gerar_prep_paciente ( ie_tipo_evento_p text default null, nr_seq_agendamento_p text DEFAULT NULL, ds_login_usuario_p text DEFAULT NULL, cd_tipo_agenda_p text DEFAULT NULL, cd_estabelecimento_p bigint DEFAULT NULL, cd_pessoa_fisica_p bigint DEFAULT NULL) FROM PUBLIC;

