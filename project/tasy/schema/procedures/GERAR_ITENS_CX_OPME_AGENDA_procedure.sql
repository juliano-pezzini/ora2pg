-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_itens_cx_opme_agenda ( nr_seq_agenda_p bigint, nr_seq_caixa_opme_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE


nr_seq_autor_cir_w	bigint;
nr_seq_mat_autor_cir_w	bigint;
nr_atendimento_w	bigint;
cd_procedimento_w	bigint;
ie_origem_proced_w	bigint;
hr_inicio_w		timestamp;
qt_material_w		double precision;
cd_material_w		bigint;
contador_w		bigint;
ie_itens_desagrupados_w	varchar(1);
nr_seq_marca_w		bigint;
nr_seq_fabricante_w	bigint;
cd_cnpj_fornec_w	varchar(14);
cd_pessoa_fisica_w	autorizacao_cirurgia.cd_pessoa_fisica%type;
cd_convenio_w		bigint;
ie_Valor_conta_w	varchar(1) := 'N';
c01 CURSOR FOR
	SELECT	c.cd_material,
		c.qt_item,
		b.nr_seq_fabricante,
		c.nr_seq_marca
	from	agenda_pac_caixa_opme a,
		opme_tipo_caixa b,
		opme_tipo_caixa_item c
	where	a.nr_seq_tipo_caixa_opme 	= b.nr_sequencia
	and	b.nr_sequencia 		 = c.nr_seq_tipo
	and	a.nr_sequencia		 = nr_seq_caixa_opme_p
	and	coalesce(c.dt_exclusao::text, '') = ''
	and	c.qt_item > 0;



BEGIN

ie_itens_desagrupados_w := Obter_Param_Usuario(871, 424, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_itens_desagrupados_w);

select	max(nr_sequencia)
into STRICT	nr_seq_autor_cir_w
from	autorizacao_cirurgia
where	nr_seq_agenda	= nr_seq_agenda_p
and	coalesce(dt_liberacao::text, '') = '';

select	max(cd_cnpj)
into STRICT	cd_cnpj_fornec_w
from	opme_caixa a,
	opme_tipo_caixa b,
	agenda_pac_caixa_opme c
where	c.nr_seq_tipo_caixa_opme	= b.nr_sequencia
and	b.nr_sequencia		= a.nr_seq_tipo
and 	c.nr_sequencia 		= nr_seq_caixa_opme_p
and	a.dt_inclusao		= (SELECT	max(x.dt_inclusao)
				from	opme_caixa x
				where 	x.nr_seq_tipo 	= b.nr_sequencia);

if (coalesce(nr_seq_autor_cir_w::text, '') = '') then

	select	max(nr_atendimento),
		max(cd_procedimento),
		max(ie_origem_proced),
		max(hr_inicio),
		max(cd_pessoa_fisica),
		max(cd_convenio)
	into STRICT	nr_atendimento_w,
		cd_procedimento_w,
		ie_origem_proced_w,
		hr_inicio_w,
		cd_pessoa_fisica_w,
		cd_convenio_w
	from	agenda_paciente
	where	nr_sequencia	= nr_seq_agenda_p;

	select	coalesce(max(IE_VL_CONTA_AUTOR),'N')
	into STRICT	ie_valor_conta_w
	from	convenio_Estabelecimento
	where	cd_estabelecimento = cd_estabelecimento_p
	and	cd_convenio = cd_convenio_w;

	select	nextval('autorizacao_cirurgia_seq')
	into STRICT	nr_seq_autor_cir_w
	;

	insert	into	autorizacao_cirurgia(nr_sequencia,
		nm_usuario,
		dt_atualizacao,
		dt_pedido,
		nm_usuario_pedido,
		nr_seq_agenda,
		nr_atendimento,
		cd_estabelecimento,
		cd_procedimento,
		ie_estagio_autor,
		ie_origem_proced,
		dt_previsao,
		cd_pessoa_fisica)
	values (nr_seq_autor_cir_w,
		nm_usuario_p,
		clock_timestamp(),
		clock_timestamp(),
		nm_usuario_p,
		nr_seq_agenda_p,
		nr_atendimento_w,
		cd_estabelecimento_p,
		null,
		1,
		null,
		hr_inicio_w,
		cd_pessoa_fisica_w);
end if;

if (ie_itens_desagrupados_w = 'N') then
	open c01;
	loop
	fetch c01 into
		cd_material_w,
		qt_material_w,
		nr_seq_fabricante_w,
		nr_seq_marca_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		select	nextval('material_autor_cirurgia_seq')
		into STRICT	nr_seq_mat_autor_cir_w
		;

		insert	into	material_autor_cirurgia(nr_sequencia,
				nr_seq_autorizacao,
				nm_usuario,
				dt_atualizacao,
				nm_usuario_nrec,
				dt_atualizacao_nrec,
				cd_material,
				qt_solicitada,
				qt_material,
				vl_material,
				ie_aprovacao,
				vl_unitario_material,
				ie_gerado_agenda,
				nr_seq_fabricante,
				nr_seq_marca,
				cd_cgc_fornec,
				ie_valor_conta)
			values (nr_seq_mat_autor_cir_w,
				nr_seq_autor_cir_w,
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				cd_material_w,
				qt_material_w,
				0,
				0,
				'N',
				0,
				'S',
				nr_seq_fabricante_w,
				nr_seq_marca_w,
				cd_cnpj_fornec_w,
				ie_valor_conta_w);
	end loop;
	close c01;
else
	open c01;
	loop
	fetch c01 into
		cd_material_w,
		qt_material_w,
		nr_seq_fabricante_w,
		nr_seq_marca_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		contador_w := 0;
		while(qt_material_w <> contador_w) loop
			begin
			select	nextval('material_autor_cirurgia_seq')
			into STRICT	nr_seq_mat_autor_cir_w
			;

			insert	into	material_autor_cirurgia(nr_sequencia,
					nr_seq_autorizacao,
					nm_usuario,
					dt_atualizacao,
					nm_usuario_nrec,
					dt_atualizacao_nrec,
					cd_material,
					qt_solicitada,
					qt_material,
					vl_material,
					ie_aprovacao,
					vl_unitario_material,
					ie_gerado_agenda,
					nr_seq_fabricante,
					nr_seq_marca,
					cd_cgc_fornec,
					ie_valor_conta)
				values (nr_seq_mat_autor_cir_w,
					nr_seq_autor_cir_w,
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					cd_material_w,
					1, --se gera desagrupado qt = 1
					0,
					0,
					'N',
					0,
					'S',
					nr_seq_fabricante_w,
					nr_seq_marca_w,
					cd_cnpj_fornec_w,
					ie_valor_conta_w);
			contador_w := contador_w + 1;
			end;
		end loop;
	end loop;
	close c01;
end if;

commit;

end	;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_itens_cx_opme_agenda ( nr_seq_agenda_p bigint, nr_seq_caixa_opme_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

