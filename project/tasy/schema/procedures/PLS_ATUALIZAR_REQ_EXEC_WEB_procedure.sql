-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_atualizar_req_exec_web ( nr_seq_lote_exec_p bigint, nr_seq_requisicao_p bigint, nr_seq_execucao_p bigint, nm_usuario_p text, nr_seq_guia_p INOUT bigint, ie_tipo_guia_p INOUT text, cd_guia_p INOUT text, nr_requisicao_p INOUT text) AS $body$
DECLARE


/*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:   Atualizar a guia gerada no portal
----------------------------------------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[  ]  Objetos do dicionário [  ] Tasy (Delphi/Java) [ x ] Portal [  ] Relatórios [ ] Outros:
 ----------------------------------------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/nr_seq_guia_w		bigint := 0;
cd_guia_w		varchar(30);
nr_seq_requisicao_w	bigint;
nr_seq_segurado_w 	bigint;

C01 CURSOR FOR
	SELECT	nr_seq_guia
	from	pls_execucao_requisicao
	where	nr_seq_lote_exec = nr_seq_lote_exec_p;



BEGIN


if (nr_seq_lote_exec_p IS NOT NULL AND nr_seq_lote_exec_p::text <> '') then
	open C01;
	loop
	fetch C01 into
		nr_seq_guia_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

		update	pls_guia_plano
		set	ie_status 		= 1,
			ie_estagio 		= 6,
			dt_atualizacao		= clock_timestamp(),
			dt_autorizacao		= clock_timestamp(),
			dt_liberacao		= clock_timestamp(),
			ie_tipo_processo 	= 'P',
			nm_usuario		= nm_usuario_p,
			nm_usuario_liberacao	= nm_usuario_p
		where	nr_sequencia 		= nr_seq_guia_w;

		update	pls_guia_plano_proc
		set	ie_status 	= 'S',
			dt_atualizacao	= clock_timestamp(),
			nm_usuario	= nm_usuario_p,
			dt_liberacao	= clock_timestamp()
		where	nr_seq_guia 	= nr_seq_guia_w;

		update	pls_guia_plano_mat
		set	ie_status 	= 'S',
			dt_atualizacao	= clock_timestamp(),
			nm_usuario	= nm_usuario_p,
			dt_liberacao	= clock_timestamp()
		where	nr_seq_guia 	= nr_seq_guia_w;

	end;
	end loop;
	close C01;

else

	select	coalesce(nr_seq_guia, 0),
		coalesce(nr_seq_requisicao, 0)
	into STRICT	nr_seq_guia_w,
		nr_seq_requisicao_w
	from	pls_execucao_req_item
	where	nr_sequencia = nr_seq_execucao_p;

	if (nr_seq_guia_w > 0) then
		update	pls_guia_plano
		set	ie_status 		= 1,
			ie_estagio 		= 6,
			dt_atualizacao		= clock_timestamp(),
			dt_autorizacao		= clock_timestamp(),
			dt_liberacao		= clock_timestamp(),
			ie_tipo_processo 	= 'P',
			nm_usuario		= nm_usuario_p,
			nm_usuario_liberacao	= nm_usuario_p
		where	nr_sequencia 		= nr_seq_guia_w;


		update	pls_guia_plano_proc
		set	ie_status 	= 'S',
			dt_atualizacao	= clock_timestamp(),
			nm_usuario	= nm_usuario_p,
			dt_liberacao	= clock_timestamp()
		where	nr_seq_guia 	= nr_seq_guia_w;

		select 	ie_tipo_guia,
			cd_guia
		into STRICT	ie_tipo_guia_p,
			cd_guia_w
		from	pls_guia_plano
		where	nr_sequencia = nr_seq_guia_w;
	end if;

	nr_seq_guia_p 	:= nr_seq_guia_w;
	cd_guia_p	:= cd_guia_w;
	nr_requisicao_p := nr_seq_requisicao_w;
end if;


commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_atualizar_req_exec_web ( nr_seq_lote_exec_p bigint, nr_seq_requisicao_p bigint, nr_seq_execucao_p bigint, nm_usuario_p text, nr_seq_guia_p INOUT bigint, ie_tipo_guia_p INOUT text, cd_guia_p INOUT text, nr_requisicao_p INOUT text) FROM PUBLIC;

