-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE vincular_item_inspecao_oc_nota ( cd_estabelecimento_p bigint, nr_sequencia_p bigint, nr_ordem_compra_p bigint, nm_usuario_p text) AS $body$
DECLARE



/*	Inspecao Recebimento Lote C06	*/

qt_material_lote_w		double precision;
qt_registro_lote_w		integer;
ds_lote_fornecedor_w		varchar(20);
dt_validade_lote_w		timestamp;
ie_indeterminada_w		varchar(1);
dt_fabricacao_w			timestamp;
cd_barra_material_w			inspecao_recebimento_lote.cd_barra_material%type;
ds_barras_w			varchar(4000);

nr_item_oci_w			integer;
cd_material_w			integer;
cd_unidade_medida_compra_w	varchar(30);
vl_unitario_item_nf_w		double precision	:= 0;
pr_descontos_w			double precision;
cd_local_estoque_w		integer;
ds_material_direto_w		varchar(255);
ds_observacao_item_w		varchar(255);
cd_centro_custo_w		integer;
cd_conta_contabil_w		varchar(20)	:= null;
nr_seq_proj_rec_w		bigint;
pr_desc_financ_w		double precision;
nr_solic_compra_w		bigint;
cd_unidade_medida_estoque_w	varchar(30);
qt_conv_compra_estoque_w	double precision;
cd_material_estoque_w		integer	:= null;
dt_prevista_entrega_w		timestamp;
cd_serie_nf_w			nota_fiscal.cd_serie_nf%type;
nr_nota_fiscal_w		varchar(255);
nr_sequencia_nf_w		bigint;
cd_cgc_emitente_w		varchar(14);
qt_item_estoque_w		double precision	:= 0;
vl_total_item_nf_w		double precision	:= 0;
vl_desconto_w			double precision	:= 0;
vl_liquido_w			double precision	:= 0;
vl_desconto_oc_w		double precision	:= 0;
nr_item_nf_w			integer;
nr_seq_conta_financeira_w	bigint	:= null;
ie_consignado_w			varchar(01);
cd_pessoa_fisica_w		varchar(255);
ie_tipo_conta_w			integer	:= 2;
nr_seq_ordem_serv_w		bigint;
cd_local_direto_w		integer;
cd_centro_conta_w		integer;
cd_tributo_w			integer;
pr_tributo_w			double precision;
vl_tributo_w			double precision;
vl_desconto_rateio_w		double precision	:= 0;
vl_seguro_w			double precision	:= 0;
vl_frete_w			double precision	:= 0;
dt_atualizacao_estoque_w	timestamp		:= null;
dt_validade_w			timestamp		:= null;
cd_lote_fabricacao_w		varchar(15);
vl_despesa_acessoria_w		double precision	:= 0;
cd_natureza_operacao_w		smallint;
qt_material_w			double precision;
qt_item_nf_w			double precision;
cd_operacao_nf_w		bigint;
dt_entrada_saida_w		timestamp;
nr_contrato_w			bigint;
cd_operacao_estoque_w		bigint;
dt_inicio_garantia_w		timestamp;
dt_fim_garantia_w		timestamp;
nr_seq_marca_w			bigint;
nr_seq_inspecao_w		bigint;
ie_origem_titulo_w		varchar(10);
nr_seq_classe_tit_rec_w		bigint;
ie_tipo_titulo_rec_w		titulo_receber.ie_tipo_titulo%type;
cd_sequencia_parametro_w    nota_fiscal_item.cd_sequencia_parametro%type;

C01 CURSOR FOR
SELECT	a.nr_item_oci,
	b.cd_material,
	a.cd_unidade_medida_compra,
	b.vl_unitario_material,
	coalesce(b.pr_desconto,0),
	coalesce(a.cd_local_estoque,cd_local_direto_w),
	substr(a.ds_material_direto,1,255),
	a.cd_centro_custo,
	a.cd_conta_contabil,
	a.nr_seq_proj_rec,
	coalesce(a.pr_desc_financ,0),
	a.nr_solic_compra,
	b.qt_inspecao,
	coalesce(b.vl_desconto,0),
	obter_dt_prev_oci_inspecao(b.nr_sequencia),
	a.nr_contrato,
	a.dt_inicio_garantia,
	a.dt_fim_garantia,
	a.nr_seq_marca,
	b.nr_sequencia
from 	inspecao_recebimento b,
	ordem_compra_item a
where	a.nr_ordem_compra = b.nr_ordem_compra
and	a.nr_item_oci 	= b.nr_item_oci
and	a.nr_ordem_compra = nr_ordem_compra_p
and	coalesce(b.nr_seq_registro::text, '') = ''
and	coalesce(a.dt_reprovacao::text, '') = ''
and	coalesce(b.nr_seq_nota_fiscal::text, '') = '';

C02 CURSOR FOR
SELECT	cd_tributo,
	pr_tributo,
	vl_tributo
from	ordem_compra_item_trib
where	nr_ordem_compra	= nr_ordem_compra_p
and	nr_item_oci	= nr_item_oci_w;

c06 CURSOR FOR
SELECT	b.dt_validade,
	b.dt_fabricacao,
	b.cd_lote_fabricacao,
	b.qt_material,
	ie_indeterminada,
	b.cd_barra_material,
	b.ds_barras
from	inspecao_recebimento_lote b,
	inspecao_recebimento a
where	a.nr_sequencia = b.nr_seq_inspecao
and	nr_seq_inspecao = nr_seq_inspecao_w;


BEGIN

begin
select	min(cd_local_estoque)
into STRICT	cd_local_direto_w
from	local_estoque
where	ie_tipo_local = 8;
exception
	when others then
		cd_local_direto_w := 1;
end;

select	cd_serie_nf,
	nr_nota_fiscal,
	nr_sequencia_nf,
	cd_cgc_emitente,
	cd_natureza_operacao,
	cd_operacao_nf,
	dt_entrada_saida,
	cd_pessoa_fisica
into STRICT	cd_serie_nf_w,
	nr_nota_fiscal_w,
	nr_sequencia_nf_w,
	cd_cgc_emitente_w,
	cd_natureza_operacao_w,
	cd_operacao_nf_w,
	dt_entrada_saida_w,
	cd_pessoa_fisica_w
from	nota_fiscal
where	nr_sequencia = nr_sequencia_p;

select	max(a.ie_origem_titulo),
	max(a.nr_seq_classe),
	max(a.ie_tipo_titulo)
into STRICT	ie_origem_titulo_w,
	nr_seq_classe_tit_rec_w,
	ie_tipo_titulo_rec_w
from	titulo_receber a
where	a.nr_seq_nf_saida	= nr_sequencia_p;

select	cd_operacao_estoque
into STRICT	cd_operacao_estoque_w
from	operacao_nota
where	cd_operacao_nf = cd_operacao_nf_w;

open c01;
loop
fetch c01 into
	nr_item_oci_w,
	cd_material_w,
	cd_unidade_medida_compra_w,
	vl_unitario_item_nf_w,
	pr_descontos_w,
	cd_local_estoque_w,
	ds_material_direto_w,
	cd_centro_custo_w,
	cd_conta_contabil_w,
	nr_seq_proj_rec_w,
	pr_desc_financ_w,
	nr_solic_compra_w,
	qt_material_w,
	vl_desconto_oc_w,
	dt_prevista_entrega_w,
	nr_contrato_w,
	dt_inicio_garantia_w,
	dt_fim_garantia_w,
	nr_seq_marca_w,
	nr_seq_inspecao_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	
	cd_sequencia_parametro_w := null;

	select	coalesce(sum(coalesce(i.qt_item_nf,0)),0)
	into STRICT	qt_item_nf_w
	from	nota_fiscal y,
		nota_fiscal_item i
	where	y.nr_sequencia 	  = i.nr_sequencia
	and	y.ie_situacao 	  = 1
	and	i.nr_ordem_compra    = nr_ordem_compra_p
	and	i.nr_item_oci 	  = nr_item_oci_w;

	select	substr(obter_dados_material_estab(cd_material,cd_estabelecimento_p,'UME'),1,30) cd_unidade_medida_estoque,
		qt_conv_compra_estoque,
		cd_material_estoque
	into STRICT	cd_unidade_medida_estoque_w,
		qt_conv_compra_estoque_w,
		cd_material_estoque_w
	from 	material
	where	cd_material = cd_material_w;

	qt_item_estoque_w		:= qt_material_w * qt_conv_compra_estoque_w;

	if (cd_unidade_medida_compra_w = cd_unidade_medida_estoque_w) then
		qt_item_estoque_w	:= qt_material_w;
	end if;

	vl_total_item_nf_w		:= (qt_material_w * vl_unitario_item_nf_w);
	vl_desconto_w		:= (vl_total_item_nf_w * pr_descontos_w) / 100 + coalesce(vl_desconto_oc_w,0);
	vl_liquido_w		:=  vl_total_item_nf_w - vl_desconto_w;

	select (coalesce(max(nr_item_nf),0)+1)
	into STRICT	nr_item_nf_w
	from	nota_fiscal_item
	where	nr_sequencia = nr_sequencia_p;

	/* define conta contabil do material 	*/

	if (coalesce(cd_centro_custo_w::text, '') = '') then
		begin

		/*colocamos o exception para deixar gerar item mesmo se nao tem conta contabil,  senao tinha que estornar a liberacao da ordem de compra para colocar a conta contabil*/

		begin
		SELECT * FROM SELECT * FROM define_conta_contabil(	2, cd_estabelecimento_p, null, null, null, null, cd_material_w, null, null, cd_local_estoque_w, cd_conta_contabil_w, cd_centro_custo_w, null, dt_entrada_saida_w) INTO STRICT cd_conta_contabil_w, cd_centro_custo_w INTO cd_conta_contabil_w, cd_centro_custo_w;
		cd_sequencia_parametro_w := philips_contabil_pck.get_parametro_conta_contabil();
		exception when others then
			null;
		end;
		end;
	end if;

	nr_seq_conta_financeira_w := obter_conta_financeira('S', cd_estabelecimento_p, cd_material_w, null, null, null, null, cd_cgc_emitente_w, cd_centro_custo_w, nr_seq_conta_financeira_w, null, cd_operacao_nf_w, null, null, null, nr_seq_proj_rec_w, null, cd_pessoa_fisica_w, ie_origem_titulo_w, null, nr_seq_classe_tit_rec_w, null, cd_local_estoque_w, null, null, null, null, ie_tipo_titulo_rec_w, null);

	if (nr_seq_conta_financeira_w = 0) then
		nr_seq_conta_financeira_w := null;
	end if;

	if (ie_consignado_w = 1) then
		cd_local_estoque_w	:= null;
	end if;

	if (coalesce(cd_conta_contabil_w::text, '') = '') or (length(cd_conta_contabil_w) = 0) then
		begin
		ie_tipo_conta_w		:= 3;

		if (coalesce(cd_centro_custo_w::text, '') = '') then
			ie_tipo_conta_w	:= 2;
		end if;

		SELECT * FROM define_conta_material(
				cd_estabelecimento_p, cd_material_w, ie_tipo_conta_w, 0, 0, 0, 0, 0, 0, 0, cd_local_estoque_w, cd_operacao_estoque_w, dt_entrada_saida_w, cd_conta_contabil_w, cd_centro_conta_w, null) INTO STRICT cd_conta_contabil_w, cd_centro_conta_w;
		cd_sequencia_parametro_w := philips_contabil_pck.get_parametro_conta_contabil();
		end;
	end if;

	if (nr_solic_compra_w IS NOT NULL AND nr_solic_compra_w::text <> '') then
		select	nr_seq_ordem_serv
		into STRICT	nr_seq_ordem_serv_w
		from	solic_compra
		where	nr_solic_compra = nr_solic_compra_w;
	end if;

	insert into nota_fiscal_item(
		cd_estabelecimento,
		cd_cgc_emitente,
		cd_serie_nf,
		nr_nota_fiscal,
		nr_sequencia_nf,
		nr_item_nf,
		cd_natureza_operacao,
		qt_item_nf,
		vl_unitario_item_nf,
		vl_total_item_nf,
		dt_atualizacao,
		nm_usuario,
		vl_frete,
		vl_desconto,
		vl_despesa_acessoria,
		cd_material,
		cd_procedimento,
		cd_setor_atendimento,
		cd_conta,
		cd_local_estoque,
		ds_observacao,
		ds_complemento,
		qt_peso_bruto,
		qt_peso_liquido,
		cd_unidade_medida_compra,
		qt_item_estoque,
		cd_unidade_medida_estoque,
		cd_lote_fabricacao,
		dt_validade,
		dt_atualizacao_estoque,
		cd_conta_contabil,
		vl_desconto_rateio,
		vl_seguro,
		cd_centro_custo,
		cd_material_estoque,
		ie_origem_proced,
		nr_ordem_compra,
		nr_sequencia,
		vl_liquido,
		pr_desconto,
		nr_item_oci,
		dt_entrega_ordem,
		nr_seq_conta_financ,
		nr_seq_proj_rec,
		pr_desc_financ,
		nr_seq_ordem_serv,
		nr_contrato,
		dt_inicio_garantia,
		dt_fim_garantia,
		nr_seq_marca,
		nr_seq_inspecao,
		cd_sequencia_parametro)
	values (cd_estabelecimento_p,
		cd_cgc_emitente_w,
		cd_serie_nf_w,
		nr_nota_fiscal_w,
		nr_sequencia_nf_w,
		nr_item_nf_w,
		cd_natureza_operacao_w,
		qt_material_w,
		vl_unitario_item_nf_w,
		vl_total_item_nf_w,
		clock_timestamp(),
		nm_usuario_p,
		vl_frete_w,
		coalesce(vl_desconto_w,0),
		vl_despesa_acessoria_w,
		cd_material_w,
		null,
		null,
		null,
		cd_local_estoque_w,
		ds_observacao_item_w,
		ds_material_direto_w,
		null,
		null,
		cd_unidade_medida_compra_w,
		qt_item_estoque_w,
		cd_unidade_medida_estoque_w,
		cd_lote_fabricacao_w,
		dt_validade_w,
		dt_atualizacao_estoque_w,
		cd_conta_contabil_w,
		vl_desconto_rateio_w,
		vl_seguro_w,
		cd_centro_custo_w,
		cd_material_estoque_w,
		null,
		nr_ordem_compra_p,
		nr_sequencia_p,
		vl_liquido_w,
		pr_descontos_w,
		nr_item_oci_w,
		dt_prevista_entrega_w,
		nr_seq_conta_financeira_w,
		nr_seq_proj_rec_w,
		pr_desc_financ_w,
		nr_seq_ordem_serv_w,
		nr_contrato_w,
		dt_inicio_garantia_w,
		dt_fim_garantia_w,
		nr_seq_marca_w,
		nr_seq_inspecao_w,
		cd_sequencia_parametro_w);

	update	inspecao_recebimento
	set	nr_nota_fiscal     = nr_nota_fiscal_w,
		nr_seq_nota_fiscal = nr_sequencia_p,
		nr_seq_item_nf	   = nr_item_nf_w
	where	nr_sequencia       = nr_seq_inspecao_w;

	commit;	

	open c02;
	loop
	fetch c02 into
		cd_tributo_w,
		pr_tributo_w,
		vl_tributo_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin
		insert into nota_fiscal_item_trib(
			cd_estabelecimento,
			cd_cgc_emitente,
			cd_serie_nf,
			nr_nota_fiscal,
			nr_sequencia_nf,
			nr_item_nf,
			cd_tributo,
			vl_tributo,
			dt_atualizacao,
			nm_usuario,
			vl_base_calculo,
			tx_tributo,
			vl_reducao_base,
			nr_sequencia,
			ie_rateio,
			vl_trib_nao_retido,
			vl_base_nao_retido,
			vl_trib_adic,
			vl_base_adic)
		values (cd_estabelecimento_p,
			cd_cgc_emitente_w,
			cd_serie_nf_w,
			nr_nota_fiscal_w,
			nr_sequencia_nf_w,
			nr_item_nf_w,
			cd_tributo_w,
			vl_tributo_w,
			clock_timestamp(),
			nm_usuario_p,
			vl_liquido_w,
			pr_tributo_w,
			0,	
			nr_sequencia_p,
			'N',
			0,
			0,
			0,	
			0);

		end;
	end loop;
	close c02;

	select	count(*)
	into STRICT	qt_registro_lote_w
	from	inspecao_recebimento_lote
	where	nr_seq_inspecao = nr_seq_inspecao_w;

	open c06;
	loop
	fetch c06 into
		dt_validade_lote_w,
		dt_fabricacao_w,
		ds_lote_fornecedor_w,
		qt_material_lote_w,
		ie_indeterminada_w,
		cd_barra_material_w,
		ds_barras_w;
	EXIT WHEN NOT FOUND; /* apply on c06 */
		begin

		if (qt_registro_lote_w > 1) then
			insert into nota_fiscal_item_lote(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				nr_seq_nota,
				nr_item_nf,
				dt_validade,
				qt_material,
				cd_lote_fabricacao,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_marca,
				nr_seq_lote_fornec,
				ie_indeterminado,
				cd_barra_material,
				ds_barras,
				dt_fabricacao)
			values (nextval('nota_fiscal_item_lote_seq'),
				clock_timestamp(),
				nm_usuario_p,
				nr_sequencia_p,
				nr_item_nf_w,
				dt_validade_lote_w,
				qt_material_lote_w,
				ds_lote_fornecedor_w,
				clock_timestamp(),
				nm_usuario_p,
				null,
				null,
				ie_indeterminada_w,
				cd_barra_material_w,
				ds_barras_w,
				dt_fabricacao_w);
		else
			update	nota_fiscal_item
			set	dt_validade	= dt_validade_lote_w,
				cd_lote_fabricacao	= ds_lote_fornecedor_w,
				ie_indeterminado	= ie_indeterminada_w,
				cd_barra_material	= cd_barra_material_w,
				ds_barras		= ds_barras_w,
				dt_fabricacao	= dt_fabricacao_w
			where	nr_sequencia = nr_sequencia_p
			and	nr_item_nf = nr_item_nf_w;
		end if;
		end;
	end loop;
	close c06;

	end;
end loop;
close c01;
								
CALL gerar_historico_nota_fiscal(nr_sequencia_p, nm_usuario_p, '19', WHEB_MENSAGEM_PCK.get_texto(297993,'NR_ORDEM_COMPRA_P=' || nr_ordem_compra_p));

commit;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE vincular_item_inspecao_oc_nota ( cd_estabelecimento_p bigint, nr_sequencia_p bigint, nr_ordem_compra_p bigint, nm_usuario_p text) FROM PUBLIC;

