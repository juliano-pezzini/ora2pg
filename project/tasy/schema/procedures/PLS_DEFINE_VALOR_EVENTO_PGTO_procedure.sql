-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_define_valor_evento_pgto ( nr_seq_prestador_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, nr_seq_material_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, dt_pagamento_p timestamp, ie_tipo_desp_proc_p text, ie_tipo_desp_mat_p text, ie_tipo_item_p text, nr_seq_item_p bigint, pr_liberado_p INOUT bigint, pr_custo_operacional_p INOUT bigint, pr_materiais_p INOUT bigint, nr_seq_regra_p INOUT bigint) AS $body$
DECLARE


qt_registro_w			bigint	:= 0;
nr_seq_regra_w			bigint;
nr_seq_grupo_servico_w		bigint;
ie_grupo_servico_w		varchar(1)	:= 'S';
pr_liberado_w			real;
pr_custo_operacional_w		real;
pr_materiais_w			real;
cd_area_procedimento_w		bigint;
cd_especialidade_w		bigint;
cd_grupo_proc_w			bigint;
ie_origem_proced_w		bigint;
nr_seq_estrut_mat_w		bigint;
dt_item_w			timestamp;
nr_seq_conta_w			bigint;
dt_mes_referencia_w		timestamp;
nr_seq_estrut_regra_w		bigint;
ie_estrut_mat_w			varchar(1);


C01 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.nr_seq_grupo_servico,
		a.pr_geral,
		a.pr_custo_operacional,
		a.pr_materiais,
		a.nr_seq_estrut_mat
	from	pls_prestador_taxa_adm	a
	where	a.ie_situacao		= 'A'
	and	a.nr_seq_prestador	= nr_seq_prestador_p
	and	((coalesce(a.cd_procedimento::text, '') = '') or (a.cd_procedimento	= cd_procedimento_p and a.ie_origem_proced	= ie_origem_proced_p))
	and	((coalesce(a.cd_grupo_proc::text, '') = '') or (a.cd_grupo_proc	= cd_grupo_proc_w))
	and	((coalesce(a.cd_especialidade::text, '') = '') or (a.cd_especialidade	= cd_especialidade_w))
	and	((coalesce(a.cd_area_procedimento::text, '') = '') or (a.cd_area_procedimento	= cd_area_procedimento_w))
	and	((coalesce(a.nr_seq_material::text, '') = '') or (a.nr_seq_material	= nr_seq_material_p))
	and	((coalesce(a.ie_tipo_desp_proc::text, '') = '') or (a.ie_tipo_desp_proc	= ie_tipo_desp_proc_p))
	and	((coalesce(a.ie_tipo_desp_mat::text, '') = '') or (a.ie_tipo_desp_mat	= ie_tipo_desp_mat_p))
	and	((coalesce(a.ie_tipo_item::text, '') = '') or (a.ie_tipo_item	= ie_tipo_item_p))
	and	((trunc(dt_item_w) 		between trunc(coalesce(dt_inicio_vigencia,dt_item_w)) 		and trunc(coalesce(dt_fim_vigencia,clock_timestamp())) and (coalesce(ie_tipo_data,'MP') = 'I'))
	or (trunc(dt_mes_referencia_w)  	between trunc(coalesce(dt_inicio_vigencia,dt_mes_referencia_w)) 	and trunc(coalesce(dt_fim_vigencia,clock_timestamp())) and (coalesce(ie_tipo_data,'MP') = 'MP')))
	order by
		coalesce(a.ie_tipo_desp_mat,'0'),
		coalesce(a.ie_tipo_desp_proc,'0'),
		coalesce(a.cd_procedimento,0),
		coalesce(a.cd_grupo_proc,0),
		coalesce(a.cd_especialidade,0),
		coalesce(a.cd_area_procedimento,0),
		coalesce(a.nr_seq_grupo_servico,0);


BEGIN
if (coalesce(ie_origem_proced_p,0) > 0) then
	begin
	select	dt_procedimento,
		nr_seq_conta
	into STRICT	dt_item_w,
		nr_seq_conta_w
	from	pls_conta_proc
	where	nr_sequencia = nr_seq_item_p;
	exception
	when others then
		dt_item_w	:= null;
		nr_seq_conta_w 	:= null;
	end;
else
	begin
	select	dt_atendimento,
		nr_seq_conta
	into STRICT	dt_item_w,
		nr_seq_conta_w
	from	pls_conta_mat
	where	nr_sequencia = nr_seq_item_p;
	exception
	when others then
		dt_item_w	:= null;
		nr_seq_conta_w	:= null;
	end;
end if;
if (coalesce(nr_seq_conta_w,0) > 0) then
	select	max(a.dt_mes_competencia)
	into STRICT	dt_mes_referencia_w
	from	pls_protocolo_conta a,
		pls_conta b
	where	a.nr_sequencia = b.nr_seq_protocolo
	and	b.nr_sequencia = nr_seq_conta_w;
end if;

select	count(1)
into STRICT	qt_registro_w
from	pls_prestador_taxa_adm
where	ie_situacao		= 'A'
and	nr_seq_prestador	= nr_seq_prestador_p;

if (qt_registro_w	> 0) then
	if (coalesce(cd_procedimento_p,0) > 0) then
		SELECT * FROM pls_obter_estrut_proc(cd_procedimento_p, ie_origem_proced_p, cd_area_procedimento_w, cd_especialidade_w, cd_grupo_proc_w, ie_origem_proced_w) INTO STRICT cd_area_procedimento_w, cd_especialidade_w, cd_grupo_proc_w, ie_origem_proced_w;
	elsif (coalesce(nr_seq_material_p,0) > 0) then
		select	max(nr_seq_estrut_mat)
		into STRICT	nr_seq_estrut_mat_w
		from	pls_material
		where	nr_sequencia	= nr_seq_material_p;
	end if;

	open C01;
	loop
	fetch C01 into
		nr_seq_regra_w,
		nr_seq_grupo_servico_w,
		pr_liberado_w,
		pr_custo_operacional_w,
		pr_materiais_w,
		nr_seq_estrut_regra_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		/* Grupo de servi√ßos */

		ie_estrut_mat_w		:= 'S';
		ie_grupo_servico_w	:= 'S';
		if (nr_seq_estrut_regra_w IS NOT NULL AND nr_seq_estrut_regra_w::text <> '') then
			ie_estrut_mat_w	:= pls_obter_se_mat_estrutura(nr_seq_material_p, nr_seq_estrut_regra_w);
		end if;

		if (ie_estrut_mat_w = 'S') then
			if (coalesce(nr_seq_grupo_servico_w,0) > 0) then
				ie_grupo_servico_w	:= pls_se_grupo_preco_servico(nr_seq_grupo_servico_w, cd_procedimento_p, ie_origem_proced_w);
			end if;

			if (ie_grupo_servico_w	= 'S') then
				pr_liberado_p		:= pr_liberado_w;
				pr_custo_operacional_p	:= pr_custo_operacional_w;
				pr_materiais_p		:= pr_materiais_w;
				nr_seq_regra_p		:= nr_seq_regra_w;
			end if;
		end if;
		end;
	end loop;
	close C01;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_define_valor_evento_pgto ( nr_seq_prestador_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, nr_seq_material_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, dt_pagamento_p timestamp, ie_tipo_desp_proc_p text, ie_tipo_desp_mat_p text, ie_tipo_item_p text, nr_seq_item_p bigint, pr_liberado_p INOUT bigint, pr_custo_operacional_p INOUT bigint, pr_materiais_p INOUT bigint, nr_seq_regra_p INOUT bigint) FROM PUBLIC;

