-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_oc_cta_tratar_val_56_imp ( nr_seq_combinada_p pls_oc_cta_combinada.nr_sequencia%type, ie_regra_excecao_p pls_oc_cta_combinada.ie_excecao%type, nr_id_transacao_p pls_oc_cta_selecao_imp.nr_id_transacao%type) AS $body$
DECLARE

 
_ora2pg_r RECORD;
tb_seq_selecao_w	pls_util_cta_pck.t_number_table;
tb_valido_w		pls_util_cta_pck.t_varchar2_table_1;
tb_observacao_w		pls_util_cta_pck.t_varchar2_table_4000;
ds_observacao_w		varchar(255);

cs_regra_val CURSOR(	nr_seq_oc_cta_comb_pc		pls_oc_cta_combinada.nr_sequencia%type) FOR 
	SELECT	nr_sequencia, 
		ie_valida_prest_solic_info 
	from	pls_oc_cta_val_prest_solic regra 
	where	regra.nr_seq_oc_cta_comb = nr_seq_oc_cta_comb_pc;
	
cs_conta_val CURSOR(	nr_id_transacao_pc	pls_oc_cta_selecao_imp.nr_id_transacao%type, 
			ds_observacao_pc		text) FOR 
	SELECT	sub.nr_sequencia, 
		sub.ie_valido, 
		sub.ds_observacao 
	from ( 
		SELECT	distinct sel.nr_seq_conta, 
			sel.nr_sequencia, 
			sel.ie_valido, 
			ds_observacao_pc ds_observacao 
		from	pls_oc_cta_selecao_imp	sel, 
			pls_conta_imp_v		conta 
		where	sel.nr_id_transacao	= nr_id_transacao_pc 
		and	sel.ie_valido		= 'S' 
		and	conta.nr_sequencia	= sel.nr_seq_conta 
		and 	coalesce(conta.nr_seq_prest_solic_conv::text, '') = '' 
	) sub;
	
BEGIN 
 
-- Verificar se a regra informada é válida. 
if (nr_seq_combinada_p IS NOT NULL AND nr_seq_combinada_p::text <> '') then 
	--O prestador solicitante para a conta não está informado ou não foi localizado. 
	ds_observacao_w:= wheb_mensagem_pck.get_texto(790997);
	 
	-- Percorrer as regra cadastradas para a validação. 
	for	rw_regra_val in cs_regra_val(nr_seq_combinada_p) loop 
	 
		-- tratamento em campo auxiliar para identificar posteriormente os registros que foram alterados 
		CALL pls_ocor_imp_pck.atualiza_campo_auxiliar(	'V', 
								'N', 
								nr_id_transacao_p, 
								null);
		 
		-- Se a regra validar apenas os registros 
		if (rw_regra_val.ie_valida_prest_solic_info = 'S') then 
			 
			-- Varrer os registros das contas na tabela de seleção. 
			open cs_conta_val(nr_id_transacao_p, ds_observacao_w);
			loop 
				 
				fetch cs_conta_val 
				bulk collect into tb_seq_selecao_w, tb_valido_w, tb_observacao_w 
				limit pls_cta_consistir_pck.qt_registro_transacao_w;
				 
				exit when tb_seq_selecao_w.count = 0;
				 
				--Grava o que restar nas variáveis na tabela 
				CALL pls_ocor_imp_pck.gerencia_selecao_validacao(	tb_seq_selecao_w, 
										tb_valido_w, 
										tb_observacao_w, 
										nr_id_transacao_p, 
										'SEQ');
				--limpa as variáveis	 
				SELECT * FROM pls_ocor_imp_pck.limpar_nested_tables(	tb_seq_selecao_w, tb_valido_w, tb_observacao_w) INTO STRICT _ora2pg_r;
 	tb_seq_selecao_w := _ora2pg_r.tb_nr_seq_selecao_p; tb_valido_w := _ora2pg_r.tb_ie_valido_p; tb_observacao_w := _ora2pg_r.tb_ds_observacao_p;
					 
			end loop; -- cs_conta_val 
			close cs_conta_val;
		end if;
		 
		-- seta os registros que serão válidos ou inválidos após o processamento 
		CALL pls_ocor_imp_pck.atualiza_campo_valido('V', 
							'N', 
							ie_regra_excecao_p, 
							null, 
							nr_id_transacao_p, 
							null);
	end loop;
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_oc_cta_tratar_val_56_imp ( nr_seq_combinada_p pls_oc_cta_combinada.nr_sequencia%type, ie_regra_excecao_p pls_oc_cta_combinada.ie_excecao%type, nr_id_transacao_p pls_oc_cta_selecao_imp.nr_id_transacao%type) FROM PUBLIC;

