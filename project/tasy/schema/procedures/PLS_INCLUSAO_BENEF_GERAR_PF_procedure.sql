-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_inclusao_benef_gerar_pf ( nr_seq_solicitacao_p bigint, nm_usuario_p text) AS $body$
DECLARE


cd_pessoa_fisica_w		pls_inclusao_beneficiario.cd_pessoa_fisica%type;
nm_pessoa_fisica_w		pls_inclusao_beneficiario.nm_pessoa_fisica%type;
cd_estabelecimento_w		estabelecimento.cd_estabelecimento%type;
dt_nascimento_w			pls_inclusao_beneficiario.dt_nascimento%type;
cd_nacionalidade_w		pls_inclusao_beneficiario.cd_nacionalidade%type;
nm_mae_w			pls_inclusao_beneficiario.nm_mae%type;
nr_cpf_w			pls_inclusao_beneficiario.nr_cpf%type;
ie_estado_civil_w		pls_inclusao_beneficiario.ie_estado_civil%type;
ie_sexo_w			pls_inclusao_beneficiario.ie_sexo%type;
ds_email_w			pls_inclusao_beneficiario.ds_email%type;
nr_identidade_w			pls_inclusao_beneficiario.nr_identidade%type;
dt_emissao_ci_w			pls_inclusao_beneficiario.dt_emissao_ci%type;
sg_emissora_ci_w		pls_inclusao_beneficiario.sg_emissora_ci%type;
nr_seq_pais_w			pls_inclusao_beneficiario.nr_seq_pais%type;
nr_reg_geral_estrang_w		pls_inclusao_beneficiario.nr_reg_geral_estrang%type;
cd_cep_w			pls_inclusao_beneficiario.cd_cep%type;
ds_endereco_w			pls_inclusao_beneficiario.ds_endereco%type;
nr_endereco_w			pls_inclusao_beneficiario.nr_endereco%type;
ds_complemento_w		pls_inclusao_beneficiario.ds_complemento%type;
ds_bairro_w			pls_inclusao_beneficiario.ds_bairro%type;
cd_municipio_ibge_w		pls_inclusao_beneficiario.cd_municipio_ibge%type;
sg_estado_w			pls_inclusao_beneficiario.sg_estado%type;
nr_ddd_telefone_w		pls_inclusao_beneficiario.nr_ddd_telefone%type;
nr_ddi_telefone_w		pls_inclusao_beneficiario.nr_ddi_telefone%type;
nr_telefone_w			pls_inclusao_beneficiario.nr_telefone%type;
nr_telefone_celular_w		pls_inclusao_beneficiario.nr_telefone_celular%type;
uf_emissora_ctps_w		pls_inclusao_beneficiario.uf_emissora_ctps%type;
ds_municipio_w			pls_inclusao_beneficiario.ds_municipio%type;
nr_pis_pasep_w			pls_inclusao_beneficiario.nr_pis_pasep%type;
nr_ddd_fax_w			pls_inclusao_beneficiario.nr_ddd_fax%type;
nr_fax_w			pls_inclusao_beneficiario.nr_fax%type;
nr_cartao_nac_sus_w		pls_inclusao_beneficiario.nr_cartao_nac_sus%type;
nr_ddd_celular_w		pls_inclusao_beneficiario.nr_ddd_celular%type;
nr_cert_casamento_w		pls_inclusao_beneficiario.nr_cert_casamento%type;
dt_emissao_cert_casamento_w	pls_inclusao_beneficiario.dt_emissao_cert_casamento%type;
cd_tipo_logradouro_w		pls_inclusao_beneficiario.cd_tipo_logradouro%type;
nr_titulo_eleitor_w		pls_inclusao_beneficiario.nr_titulo_eleitor%type;
nm_pai_w			pls_inclusao_beneficiario.nm_pai%type;
ds_municipio_nasc_w		pls_inclusao_beneficiario.ds_municipio_nasc%type;
sg_estado_nasc_w		pls_inclusao_beneficiario.sg_estado_nasc%type;
dt_adocao_w			pls_inclusao_beneficiario.dt_adocao%type;
nr_ctps_w			pessoa_fisica.nr_ctps%type;
nr_serie_ctps_w			pessoa_fisica.nr_serie_ctps%type;
cd_declaracao_nasc_vivo_w	pessoa_fisica.cd_declaracao_nasc_vivo%type;
ds_orgao_emissor_ci_w		pessoa_fisica.ds_orgao_emissor_ci%type;
nr_seq_intercambio_w		pls_intercambio.nr_sequencia%type;
cd_municipio_ibge_nasc_w	sus_municipio.cd_municipio_ibge%type;
ds_municipio_nasc_estrang_w	pls_inclusao_beneficiario.ds_municipio_nasc_estrangeiro%type;
nr_sequencia_compl_pf_w		compl_pessoa_fisica.nr_sequencia%type;
ie_formatacao_nome_pf_w		varchar(255);
ds_tipo_logradouro_w		varchar(125);
nm_abreviado_w			varchar(255);
nm_social_w			pessoa_fisica.nm_social%type;


BEGIN

ie_formatacao_nome_pf_w	:= coalesce(obter_valor_param_usuario(1232, 87, Obter_Perfil_Ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento),'S');

select	nm_pessoa_fisica,
	cd_estabelecimento,
	dt_nascimento,
	cd_nacionalidade,
	nm_mae,
	nr_cpf,
	ie_estado_civil,
	ie_sexo,
	ds_email,
	nr_identidade,
	dt_emissao_ci,
	sg_emissora_ci,
	nr_seq_pais,
	ds_orgao_emissor_ci,
	nr_reg_geral_estrang,
	cd_cep,
	substr(ds_endereco,1,100),
	nr_endereco,
	ds_complemento,
	ds_bairro,
	cd_municipio_ibge,
	sg_estado,
	nr_ddd_telefone,
	nr_ddi_telefone,
	nr_telefone,
	nr_telefone_celular,
	nr_ctps,
	nr_serie_ctps,
	uf_emissora_ctps,
	ds_municipio,
	substr(nr_pis_pasep,1,11),
	nr_ddd_fax,
	nr_fax,
	cd_declaracao_nasc_vivo,
	nr_cartao_nac_sus,
	nr_ddd_celular,
	nr_cert_casamento,
	dt_emissao_cert_casamento,
	nr_titulo_eleitor,
	cd_tipo_logradouro,
	nm_pai,
	ds_municipio_nasc,
	sg_estado_nasc,
	cd_municipio_ibge_nasc,
	ds_municipio_nasc_estrangeiro,
	dt_adocao,
	nm_social
into STRICT	nm_pessoa_fisica_w,
	cd_estabelecimento_w,
	dt_nascimento_w,
	cd_nacionalidade_w,
	nm_mae_w,
	nr_cpf_w,
	ie_estado_civil_w,
	ie_sexo_w,
	ds_email_w,
	nr_identidade_w,
	dt_emissao_ci_w,
	sg_emissora_ci_w,
	nr_seq_pais_w,
	ds_orgao_emissor_ci_w,
	nr_reg_geral_estrang_w,
	cd_cep_w,
	ds_endereco_w,
	nr_endereco_w,
	ds_complemento_w,
	ds_bairro_w,
	cd_municipio_ibge_w,
	sg_estado_w,
	nr_ddd_telefone_w,
	nr_ddi_telefone_w,
	nr_telefone_w,
	nr_telefone_celular_w,
	nr_ctps_w,
	nr_serie_ctps_w,
	uf_emissora_ctps_w,
	ds_municipio_w,
	nr_pis_pasep_w,
	nr_ddd_fax_w,
	nr_fax_w,
	cd_declaracao_nasc_vivo_w,
	nr_cartao_nac_sus_w,
	nr_ddd_celular_w,
	nr_cert_casamento_w,
	dt_emissao_cert_casamento_w,
	nr_titulo_eleitor_w,
	cd_tipo_logradouro_w,
	nm_pai_w,
	ds_municipio_nasc_w,
	sg_estado_nasc_w,
	cd_municipio_ibge_nasc_w,
	ds_municipio_nasc_estrang_w,
	dt_adocao_w,
	nm_social_w
from	pls_inclusao_beneficiario
where	nr_sequencia	= nr_seq_solicitacao_p;

if (coalesce(cd_municipio_ibge_w::text, '') = '') and (cd_cep_w IS NOT NULL AND cd_cep_w::text <> '') then
	select	max(cd_municipio_ibge)
	into STRICT	cd_municipio_ibge_w
	from	cep_municipio
	where	cd_cep = Somente_Numero(cd_cep_w);
end if;

if (ie_formatacao_nome_pf_w = 'MA') then /* Letras maiúsculas e sem acentuação */
	nm_pessoa_fisica_w	:= Elimina_Acentuacao(upper(nm_pessoa_fisica_w));
	nm_mae_w		:= Elimina_Acentuacao(upper(nm_mae_w));
end if;

/*aaschlote 23/11/2012 OS - 516857*/

if ((trim(both cd_cep_w) IS NOT NULL AND (trim(both cd_cep_w))::text <> '')) and (coalesce(cd_tipo_logradouro_w::text, '') = '') then
	begin
	select	max(ds_tipo_logradouro)
	into STRICT	ds_tipo_logradouro_w
	from	cep_logradouro_v
	where	cd_cep = cd_cep_w;
	exception
	when others then
		ds_tipo_logradouro_w	:= '';
	end;

	if (ds_tipo_logradouro_w IS NOT NULL AND ds_tipo_logradouro_w::text <> '') then
		begin
		select	max(cd_tipo_logradouro)
		into STRICT	cd_tipo_logradouro_w
		from	sus_tipo_logradouro
		where   upper(ds_tipo_logradouro) = upper(ds_tipo_logradouro_w);
		exception
		when others then
			cd_tipo_logradouro_w	:= '';
		end;
	end if;
end if;

if (coalesce(cd_municipio_ibge_nasc_w::text, '') = '') then --Buscar o código IBGE do município de nascimento
	select	max(cd_municipio_ibge)
	into STRICT	cd_municipio_ibge_nasc_w
	from	sus_municipio
	where	upper(ds_municipio) = trim(both upper(ds_municipio_nasc_w))
	and	upper(ds_unidade_federacao) = upper(sg_estado_nasc_w);
end if;

nm_abreviado_w	:= pls_gerar_nome_abreviado(nm_pessoa_fisica_w);

select	nextval('pessoa_fisica_seq')
into STRICT	cd_pessoa_fisica_w
;

insert into pessoa_fisica(cd_pessoa_fisica, ie_tipo_pessoa, nm_pessoa_fisica,
	dt_atualizacao, nm_usuario, dt_nascimento,
	ie_sexo, ie_estado_civil, nr_cpf,
	nr_identidade, nr_telefone_celular, cd_nacionalidade,
	ds_orgao_emissor_ci, cd_estabelecimento, dt_emissao_ci,
	nr_reg_geral_estrang, dt_atualizacao_nrec, nm_usuario_nrec,
	ds_observacao, sg_emissora_ci, ie_revisar,
	cd_municipio_ibge, nr_seq_pais, nr_ctps,
	nr_serie_ctps, uf_emissora_ctps, nr_pis_pasep,
	cd_declaracao_nasc_vivo, nr_cartao_nac_sus, nm_abreviado,
	nr_ddd_celular,nr_cert_casamento,dt_emissao_cert_casamento,
	nr_titulo_eleitor, ds_municipio_nasc_estrangeiro,
	dt_adocao, nm_social)
values (	cd_pessoa_fisica_w, 2, nm_pessoa_fisica_w,
	clock_timestamp(), nm_usuario_p, dt_nascimento_w,
	ie_sexo_w, ie_estado_civil_w, nr_cpf_w,
	nr_identidade_w, nr_telefone_celular_w, cd_nacionalidade_w,
	ds_orgao_emissor_ci_w, cd_estabelecimento_w, dt_emissao_ci_w,
	nr_reg_geral_estrang_w, clock_timestamp(), nm_usuario_p,
	'Gerado pela inclusão número: ' || nr_seq_solicitacao_p, sg_emissora_ci_w, 'R',
	cd_municipio_ibge_nasc_w, nr_seq_pais_w, nr_ctps_w,
	nr_serie_ctps_w, uf_emissora_ctps_w, nr_pis_pasep_w,
	cd_declaracao_nasc_vivo_w, nr_cartao_nac_sus_w, nm_abreviado_w,
	nr_ddd_celular_w,nr_cert_casamento_w,dt_emissao_cert_casamento_w,
	nr_titulo_eleitor_w, ds_municipio_nasc_estrang_w,
	dt_adocao_w, nm_social_w);

if (ds_endereco_w IS NOT NULL AND ds_endereco_w::text <> '') or (cd_cep_w IS NOT NULL AND cd_cep_w::text <> '') or (nr_endereco_w IS NOT NULL AND nr_endereco_w::text <> '') or (ds_complemento_w IS NOT NULL AND ds_complemento_w::text <> '') or (ds_bairro_w IS NOT NULL AND ds_bairro_w::text <> '') or (sg_estado_w IS NOT NULL AND sg_estado_w::text <> '') or (nr_telefone_w IS NOT NULL AND nr_telefone_w::text <> '') or (ds_email_w IS NOT NULL AND ds_email_w::text <> '') or (nr_ddd_telefone_w IS NOT NULL AND nr_ddd_telefone_w::text <> '') or (nr_ddi_telefone_w IS NOT NULL AND nr_ddi_telefone_w::text <> '') or (cd_municipio_ibge_w IS NOT NULL AND cd_municipio_ibge_w::text <> '') or (ds_municipio_w IS NOT NULL AND ds_municipio_w::text <> '') or (nr_ddd_fax_w IS NOT NULL AND nr_ddd_fax_w::text <> '') or (nr_fax_w IS NOT NULL AND nr_fax_w::text <> '') or (cd_tipo_logradouro_w IS NOT NULL AND cd_tipo_logradouro_w::text <> '') then
	insert into compl_pessoa_fisica(cd_pessoa_fisica, nr_sequencia, ie_tipo_complemento,
		dt_atualizacao, nm_usuario, ds_endereco,
		cd_cep, nr_endereco, ds_complemento,
		ds_bairro, sg_estado, nr_telefone,
		ds_observacao, ds_email, dt_atualizacao_nrec,
		nm_usuario_nrec, nr_ddd_telefone, nr_ddi_telefone,
		cd_municipio_ibge, ds_municipio, nr_ddd_fax,
		ds_fax, cd_tipo_logradouro)
	values (	cd_pessoa_fisica_w, 1, 1,
		clock_timestamp(), nm_usuario_p, ds_endereco_w,
		cd_cep_w, nr_endereco_w, ds_complemento_w,
		ds_bairro_w, sg_estado_w, nr_telefone_w,
		'Gerado pela inclusão número: ' || nr_seq_solicitacao_p, ds_email_w, clock_timestamp(),
		nm_usuario_p, nr_ddd_telefone_w, nr_ddi_telefone_w,
		cd_municipio_ibge_w, ds_municipio_w, nr_ddd_fax_w,
		nr_fax_w, cd_tipo_logradouro_w);
end if;

nr_sequencia_compl_pf_w	:= 2;

if (nm_mae_w IS NOT NULL AND nm_mae_w::text <> '') then
	insert into compl_pessoa_fisica(cd_pessoa_fisica, nr_sequencia, ie_tipo_complemento,
		dt_atualizacao, nm_usuario, dt_atualizacao_nrec,
		nm_usuario_nrec, nm_contato)
	values (	cd_pessoa_fisica_w, 2, 5,
		clock_timestamp(), nm_usuario_p, clock_timestamp(),
		nm_usuario_p, nm_mae_w);

	nr_sequencia_compl_pf_w	:= 3;
end if;

if (nm_pai_w IS NOT NULL AND nm_pai_w::text <> '') then
	insert into compl_pessoa_fisica(cd_pessoa_fisica, nr_sequencia, ie_tipo_complemento,
		dt_atualizacao, nm_usuario, dt_atualizacao_nrec,
		nm_usuario_nrec, nm_contato)
	values (	cd_pessoa_fisica_w, nr_sequencia_compl_pf_w, 4,
		clock_timestamp(), nm_usuario_p, clock_timestamp(),
		nm_usuario_p, nm_pai_w);
end if;

begin
select	max(nr_seq_intercambio)
into STRICT	nr_seq_intercambio_w
from	pls_inclusao_beneficiario
where	nr_sequencia	= nr_seq_solicitacao_p;
exception
when others then
	nr_seq_intercambio_w	:= null;
end;

/*aaschlote 15/05/2012 - 445294 - Quando for intercâmbio alterar a etapa de solicitação de intercâmbio*/

if (coalesce(nr_seq_intercambio_w::text, '') = '') then
	update	pls_inclusao_beneficiario
	set	cd_pessoa_fisica	= cd_pessoa_fisica_w,
		ie_etapa_solicitacao	= 'CV',
		nm_usuario		= nm_usuario_p,
		dt_atualizacao		= clock_timestamp()
	where	nr_sequencia		= nr_seq_solicitacao_p;
else
	update	pls_inclusao_beneficiario
	set	cd_pessoa_fisica		= cd_pessoa_fisica_w,
		nm_usuario			= nm_usuario_p,
		ie_etapa_solic_intercambio	= 'CV',
		dt_atualizacao			= clock_timestamp()
	where	nr_sequencia			= nr_seq_solicitacao_p;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_inclusao_benef_gerar_pf ( nr_seq_solicitacao_p bigint, nm_usuario_p text) FROM PUBLIC;

