-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE campos AS (	vl_medicamento	double precision,
			cd_laboratorio	varchar(6),
			cd_medicamento	varchar(6),
			cd_apresentacao	varchar(6),
			qt_conversao	double precision);


CREATE OR REPLACE PROCEDURE hcb_obter_preco_brasindice ( cd_estabelecimento_p bigint, cd_convenio_p bigint, cd_categoria_p text, cd_material_p bigint, dt_vigencia_p timestamp, tx_brasindice_pmc_p bigint, tx_brasindice_pfb_p bigint, tx_pfb_pos_p bigint, tx_pfb_neg_p bigint, tx_pmc_neg_p bigint, tx_pmc_pos_p bigint, vl_medicamento_p INOUT bigint, dt_ult_vigencia_p INOUT timestamp, cd_laboratorio_p INOUT text, cd_medicamento_p INOUT text, cd_apresentacao_p INOUT text, qt_conversao_p INOUT bigint, ie_versao_atual_p INOUT bigint) AS $body$
DECLARE

type Vetor is table of campos index by integer;

ie_versao_atual_w	bigint;
CD_LABORATORIO_W	varchar(6);
CD_MEDICAMENTO_W	varchar(6);
CD_APRESENTACAO_W	varchar(6);
VL_MEDICAMENTO_W	double precision	:= 0;
IE_TIPO_PRECO_W		varchar(3);
TX_PRECO_FABRICA_W	CONVENIO_BRASINDICE.TX_PRECO_FABRICA%type :=1;--NUMBER(15,4)	:= 1;
QT_CONVERSAO_W		double precision	:= 1;
DT_ULT_VIGENCIA_W	timestamp		:= clock_timestamp();
DT_VIGENCIA_BRAS_W	timestamp		:= clock_timestamp();
IE_RELACIONADO_BRAS_W	varchar(1)	:= 'S';
TX_BRASINDICE_PMC_W	CONVENIO_BRASINDICE.TX_BRASINDICE_PMC%type := 1;--NUMBER(15,4)	:= 1;
TX_PMC_NEG_W		CONVENIO_BRASINDICE.TX_PMC_NEG%type;--NUMBER(15,4);
TX_PMC_POS_W		CONVENIO_BRASINDICE.TX_PMC_POS%type;--NUMBER(15,4);
IE_BRASINDICE_W		varchar(1)	:= 'N';
IE_PRECO_PORT_W		varchar(1)	:= '';
pr_ipi_w		real;
ie_exige_lib_w		varchar(01);
ie_pis_cofins_w		varchar(1);

TX_PFB_NEG_W		CONVENIO_BRASINDICE.TX_PFB_NEG%type;--NUMBER(15,4);
TX_PFB_POS_W		CONVENIO_BRASINDICE.TX_PFB_POS%type;--NUMBER(15,4);
ie_dividir_indice_pmc_w	varchar(1);
ie_dividir_indice_pfb_w	varchar(1);
cd_grupo_material_w	 smallint;
ie_tipo_convenio_w	smallint;
IE_VALOR_BRASINDICE_w	varchar(1);
i			bigint := 1;
qt_reg_w		bigint := 0;
vl_bras_w		double precision := 0;
ie_preco_medio_bras_w	varchar(1) := 'N';
vetor_valor_w		Vetor;

ie_tipo_preco_regra_w	varchar(3);
cd_subgrupo_material_w	smallint;
cd_classe_material_w	integer;
ie_ordem_relac_bras_w	varchar(1);

C01 CURSOR FOR
	SELECT	CD_LABORATORIO,
		CD_MEDICAMENTO,
		CD_APRESENTACAO,
		QT_CONVERSAO
	FROM	MATERIAL_BRASINDICE
	WHERE	CD_MATERIAL						= CD_MATERIAL_P
	and	coalesce(IE_SITUACAO, 'A')					= 'A'
	--and	nvl(dt_vigencia,dt_vigencia_bras_w)			<= dt_vigencia_bras_w
	and 	dt_vigencia_bras_w between coalesce(dt_vigencia, dt_vigencia_bras_w) and coalesce(dt_final_vigencia, dt_vigencia_bras_w)
	and	coalesce(cd_convenio,cd_convenio_p)				= cd_convenio_p
	and	coalesce(ie_tipo_convenio,ie_tipo_convenio_w)		= ie_tipo_convenio_w
	and	coalesce(cd_estabelecimento, coalesce(cd_estabelecimento_p,0))	= coalesce(cd_estabelecimento_p,0)
	order by coalesce(dt_vigencia,clock_timestamp() - interval '10000 days'),
		coalesce(cd_convenio,0),
		coalesce(ie_tipo_convenio,0),
		coalesce(cd_estabelecimento,0);

C02 CURSOR FOR
	SELECT  'S'
	from	convenio_brasindice
	where	cd_convenio		= cd_convenio_p
	and	((coalesce(cd_categoria::text, '') = '') or (cd_categoria = cd_categoria_p))
	and 	((coalesce(cd_grupo_material::text, '') = '') or (cd_grupo_material = cd_grupo_material_w))
	and	cd_estabelecimento	= cd_estabelecimento_p
	and	coalesce(ie_situacao,'A')	= 'A'
	order by coalesce(cd_categoria,'0'),
		coalesce(cd_grupo_material,0);


C03 CURSOR FOR
	SELECT	CD_LABORATORIO,
		CD_MEDICAMENTO,
		CD_APRESENTACAO,
		QT_CONVERSAO
	FROM	MATERIAL_BRASINDICE
	WHERE	CD_MATERIAL						= CD_MATERIAL_P
	and	coalesce(IE_SITUACAO, 'A')					= 'A'
	--and	nvl(dt_vigencia,dt_vigencia_bras_w)			<= dt_vigencia_bras_w
	and 	dt_vigencia_bras_w between coalesce(dt_vigencia, dt_vigencia_bras_w) and coalesce(dt_final_vigencia, dt_vigencia_bras_w)
	and	coalesce(cd_convenio,cd_convenio_p)				= cd_convenio_p
	and	coalesce(ie_tipo_convenio,ie_tipo_convenio_w)		= ie_tipo_convenio_w
	and	coalesce(cd_estabelecimento, coalesce(cd_estabelecimento_p,0))	= coalesce(cd_estabelecimento_p,0)
	order by coalesce(dt_vigencia,clock_timestamp() - interval '10000 days'),
		coalesce(cd_convenio,0),
		coalesce(ie_tipo_convenio,0),
		coalesce(obter_valor_medic_brasindice(	cd_estabelecimento_p,
							cd_medicamento,
							cd_apresentacao,
							cd_laboratorio,
							qt_conversao,
							dt_vigencia_bras_w,
							tx_brasindice_pfb_p,
							tx_brasindice_pmc_p,
							tx_pmc_neg_p,
							tx_pmc_pos_p,
							tx_pfb_pos_p,
							tx_pfb_neg_p,
							cd_convenio_p,
							cd_categoria_p,
							cd_material_p,
							null,
							ie_tipo_preco_regra_w),0);

C04 CURSOR FOR
		SELECT	coalesce(obter_valor_medic_brasindice(	cd_estabelecimento_p,
							cd_medicamento,
							cd_apresentacao,
							cd_laboratorio,
							qt_conversao,
							dt_vigencia_bras_w,
							tx_brasindice_pfb_p,
							tx_brasindice_pmc_p,
							tx_pmc_neg_p,
							tx_pmc_pos_p,
							tx_pfb_pos_p,
							tx_pfb_neg_p,
							cd_convenio_p,
							cd_categoria_p,
							cd_material_p,
							null,
							ie_tipo_preco_regra_w),0),
			cd_laboratorio,
			cd_medicamento,
			cd_apresentacao,
			qt_conversao
		FROM	MATERIAL_BRASINDICE
		WHERE	CD_MATERIAL						= CD_MATERIAL_P
		and	coalesce(IE_SITUACAO, 'A')					= 'A'
		--and	nvl(dt_vigencia,dt_vigencia_bras_w)			<= dt_vigencia_bras_w
		and 	dt_vigencia_bras_w between coalesce(dt_vigencia, dt_vigencia_bras_w) and coalesce(dt_final_vigencia, dt_vigencia_bras_w)
		and	coalesce(cd_convenio,cd_convenio_p)				= cd_convenio_p
		and	coalesce(ie_tipo_convenio,ie_tipo_convenio_w)		= ie_tipo_convenio_w
		and	coalesce(cd_estabelecimento, coalesce(cd_estabelecimento_p,0))	= coalesce(cd_estabelecimento_p,0)
		order by coalesce(obter_valor_medic_brasindice(	cd_estabelecimento_p,
							cd_medicamento,
							cd_apresentacao,
							cd_laboratorio,
							qt_conversao,
							dt_vigencia_bras_w,
							tx_brasindice_pfb_p,
							tx_brasindice_pmc_p,
							tx_pmc_neg_p,
							tx_pmc_pos_p,
							tx_pfb_pos_p,
							tx_pfb_neg_p,
							cd_convenio_p,
							cd_categoria_p,
							cd_material_p,
							null,
							ie_tipo_preco_regra_w),0) asc;

C05 CURSOR FOR
	SELECT	CD_LABORATORIO,
		CD_MEDICAMENTO,
		CD_APRESENTACAO,
		QT_CONVERSAO
	FROM	MATERIAL_BRASINDICE
	WHERE	CD_MATERIAL						= CD_MATERIAL_P
	and	coalesce(IE_SITUACAO, 'A')					= 'A'
	--and	nvl(dt_vigencia,dt_vigencia_bras_w)			<= dt_vigencia_bras_w
	and 	dt_vigencia_bras_w between coalesce(dt_vigencia, dt_vigencia_bras_w) and coalesce(dt_final_vigencia, dt_vigencia_bras_w)
	and	coalesce(cd_convenio,cd_convenio_p)				= cd_convenio_p
	and	coalesce(ie_tipo_convenio,ie_tipo_convenio_w)		= ie_tipo_convenio_w
	and	coalesce(cd_estabelecimento, coalesce(cd_estabelecimento_p,0))	= coalesce(cd_estabelecimento_p,0)
	order by	coalesce(cd_convenio,0),
		coalesce(ie_tipo_convenio,0),
		coalesce(cd_estabelecimento,0),
		coalesce(dt_vigencia,clock_timestamp() - interval '10000 days');

C06 CURSOR FOR
	SELECT	CD_LABORATORIO,
		CD_MEDICAMENTO,
		CD_APRESENTACAO,
		QT_CONVERSAO
	FROM	MATERIAL_BRASINDICE
	WHERE	CD_MATERIAL						= CD_MATERIAL_P
	and	coalesce(IE_SITUACAO, 'A')					= 'A'
	--and	nvl(dt_vigencia,dt_vigencia_bras_w)			<= dt_vigencia_bras_w
	and 	dt_vigencia_bras_w between coalesce(dt_vigencia, dt_vigencia_bras_w) and coalesce(dt_final_vigencia, dt_vigencia_bras_w)
	and	coalesce(cd_convenio,cd_convenio_p)				= cd_convenio_p
	and	coalesce(ie_tipo_convenio,ie_tipo_convenio_w)		= ie_tipo_convenio_w
	and	coalesce(cd_estabelecimento, coalesce(cd_estabelecimento_p,0))	= coalesce(cd_estabelecimento_p,0)
	order by	coalesce(cd_convenio,0),
		coalesce(ie_tipo_convenio,0),
		coalesce(dt_vigencia,clock_timestamp() - interval '10000 days'),
		coalesce(obter_valor_medic_brasindice(	cd_estabelecimento_p,
							cd_medicamento,
							cd_apresentacao,
							cd_laboratorio,
							qt_conversao,
							dt_vigencia_bras_w,
							tx_brasindice_pfb_p,
							tx_brasindice_pmc_p,
							tx_pmc_neg_p,
							tx_pmc_pos_p,
							tx_pfb_pos_p,
							tx_pfb_neg_p,
							cd_convenio_p,
							cd_categoria_p,
							cd_material_p,
							null,
							ie_tipo_preco_regra_w),0);


BEGIN

select 	max(cd_grupo_material),
	max(cd_subgrupo_material),
	max(cd_classe_material)
into STRICT	cd_grupo_material_w,
	cd_subgrupo_material_w,
	cd_classe_material_w
from 	estrutura_material_v
where 	cd_material = cd_material_p;

/* Obter regra do BrasÃ­ndice para cargas com dois tipos de preÃ§os (PFB e PMC)  */

select	substr(Obter_Regra_Brasindice_Preco(cd_convenio_p,
					cd_categoria_p,
					cd_grupo_material_w,
					cd_subgrupo_material_w,
					cd_classe_material_w,
					cd_material_p,
					dt_vigencia_p,
					cd_estabelecimento_p,
					null),1,3)
into STRICT	ie_tipo_preco_regra_w
;

tx_preco_fabrica_w	:= tx_brasindice_pfb_p;
tx_pfb_neg_w		:= coalesce(tx_pfb_neg_p, tx_brasindice_pfb_p);
tx_pfb_pos_w		:= coalesce(tx_pfb_pos_p, tx_brasindice_pfb_p);

tx_brasindice_pmc_w	:= tx_brasindice_pmc_p;
tx_pmc_neg_w		:= coalesce(tx_pmc_neg_p, tx_brasindice_pmc_p);
tx_pmc_pos_w		:= coalesce(tx_pmc_pos_p, tx_brasindice_pmc_p);

select	coalesce(max(ie_exige_lib_bras),'N'),
	coalesce(max(ie_dividir_indice_pmc),'N'),
	coalesce(max(ie_dividir_indice_pfb),'N'),
	coalesce(max(IE_VALOR_BRASINDICE),'N'),
	coalesce(max(ie_ordem_relac_bras),'N')
into STRICT	ie_exige_lib_w,
	ie_dividir_indice_pmc_w,
	ie_dividir_indice_pfb_w,
	ie_valor_brasindice_w,
	ie_ordem_relac_bras_w
from	Parametro_faturamento
where	cd_estabelecimento	= cd_estabelecimento_p;

DT_VIGENCIA_BRAS_W 	:= coalesce(DT_VIGENCIA_P,clock_timestamp());

/* Obter laboratorio, medicamento e apresentacao do material atÃ© 10/12/2003 Marcus
begin
SELECT	CD_LABORATORIO,
	CD_MEDICAMENTO,
	CD_APRESENTACAO,
	QT_CONVERSAO
  INTO
	CD_LABORATORIO_W,
	CD_MEDICAMENTO_W,
	CD_APRESENTACAO_W,
	QT_CONVERSAO_W
FROM	MATERIAL_BRASINDICE
WHERE	CD_MATERIAL		= CD_MATERIAL_P
  AND	nvl(IE_SITUACAO, 'A')	= 'A'
  AND	IE_PRIORIDADE 		= 1;
exception
     when others then
          CD_LABORATORIO_W := '';
end;
*/
ie_tipo_convenio_w	:= coalesce(obter_tipo_convenio(cd_convenio_p),0);

if (ie_ordem_relac_bras_w	= 'S') and (ie_valor_brasindice_w	= 'N' ) then
	OPEN c05;
	LOOP
	FETCH c05 into
			cd_laboratorio_w,
			cd_medicamento_w,
			cd_apresentacao_w,
			qt_conversao_w;
	EXIT WHEN NOT FOUND; /* apply on c05 */
	END LOOP;
	CLOSE c05;
elsif (ie_ordem_relac_bras_w	= 'S') and (ie_valor_brasindice_w	= 'S' ) then
	OPEN c06;
	LOOP
	FETCH c06 into
			cd_laboratorio_w,
			cd_medicamento_w,
			cd_apresentacao_w,
			qt_conversao_w;
	EXIT WHEN NOT FOUND; /* apply on c06 */
	END LOOP;
	CLOSE c06;
elsif (ie_ordem_relac_bras_w	= 'N') and (ie_valor_brasindice_w	= 'N') then
	OPEN C01;
	LOOP
	FETCH C01 into
			cd_laboratorio_w,
			cd_medicamento_w,
			cd_apresentacao_w,
			qt_conversao_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
	END LOOP;
	CLOSE C01;
elsif (ie_ordem_relac_bras_w	= 'N') and (ie_valor_brasindice_w	= 'S') then
	OPEN C03;
	LOOP
	FETCH C03 into
			cd_laboratorio_w,
			cd_medicamento_w,
			cd_apresentacao_w,
			qt_conversao_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
	END LOOP;
	CLOSE C03;
end if;

select 	max(ie_preco_medio_bras)
into STRICT	ie_preco_medio_bras_w
from 	convenio_estabelecimento
where	cd_convenio = cd_convenio_p
and		cd_estabelecimento = cd_estabelecimento_p;

/* Obter preÃ§o do medicamento */

if (IE_EXIGE_LIB_W	= 'S') then
	begin
	SELECT coalesce(vl_preco_final, VL_PRECO_MEDICAMENTO),
		IE_TIPO_PRECO,
		DT_INICIO_VIGENCIA,
		coalesce(IE_PRECO_PORT,'T'),
		coalesce(pr_ipi,0),
		coalesce(ie_pis_cofins,'T'),
		ie_versao_atual
	INTO STRICT	VL_MEDICAMENTO_W,
		IE_TIPO_PRECO_W,
		DT_ULT_VIGENCIA_W,
		IE_PRECO_PORT_W,
		pr_ipi_w,
		ie_pis_cofins_w,
		ie_versao_atual_w
	FROM	BRASINDICE_PRECO
	WHERE	CD_LABORATORIO		= CD_LABORATORIO_W
	AND	CD_MEDICAMENTO		= CD_MEDICAMENTO_W
	AND	CD_APRESENTACAO		= CD_APRESENTACAO_W
	--AND	IE_TIPO_PRECO		= NVL(IE_TIPO_PRECO_REGRA_W,IE_TIPO_PRECO)
	AND	DT_INICIO_VIGENCIA	=
		(SELECT MAX(A.DT_INICIO_VIGENCIA)
		FROM	BRASINDICE_PRECO A
		WHERE	A.CD_LABORATORIO      = CD_LABORATORIO_W
		AND	A.CD_MEDICAMENTO      = CD_MEDICAMENTO_W
		AND	A.CD_APRESENTACAO     = CD_APRESENTACAO_W
		--AND	A.IE_TIPO_PRECO	      = NVL(IE_TIPO_PRECO_REGRA_W,A.IE_TIPO_PRECO)
		AND	A.DT_INICIO_VIGENCIA <= DT_VIGENCIA_BRAS_W
		AND 	((IE_EXIGE_LIB_W	= 'N') OR (DT_LIBERACAO IS NOT NULL AND DT_LIBERACAO::text <> '')));
	exception
		when others then
			begin
			SELECT coalesce(vl_preco_final, VL_PRECO_MEDICAMENTO),
				IE_TIPO_PRECO,
				DT_INICIO_VIGENCIA,
				coalesce(IE_PRECO_PORT,'T'),
				coalesce(pr_ipi,0),
				coalesce(ie_pis_cofins,'T'),
				ie_versao_atual
			INTO STRICT	VL_MEDICAMENTO_W,
				IE_TIPO_PRECO_W,
				DT_ULT_VIGENCIA_W,
				IE_PRECO_PORT_W,
				pr_ipi_w,
				ie_pis_cofins_w,
				ie_versao_atual_w
			FROM	BRASINDICE_PRECO
			WHERE	CD_LABORATORIO		= CD_LABORATORIO_W
			AND	CD_MEDICAMENTO		= CD_MEDICAMENTO_W
			AND	CD_APRESENTACAO		= CD_APRESENTACAO_W
			AND	IE_TIPO_PRECO		= coalesce(IE_TIPO_PRECO_REGRA_W,IE_TIPO_PRECO)
			AND	DT_INICIO_VIGENCIA	=
				(SELECT MAX(A.DT_INICIO_VIGENCIA)
				FROM	BRASINDICE_PRECO A
				WHERE	A.CD_LABORATORIO      = CD_LABORATORIO_W
				AND	A.CD_MEDICAMENTO      = CD_MEDICAMENTO_W
				AND	A.CD_APRESENTACAO     = CD_APRESENTACAO_W
				AND	A.IE_TIPO_PRECO	      = coalesce(IE_TIPO_PRECO_REGRA_W,A.IE_TIPO_PRECO)
				AND	A.DT_INICIO_VIGENCIA <= DT_VIGENCIA_BRAS_W
				AND 	((IE_EXIGE_LIB_W	= 'N') OR (DT_LIBERACAO IS NOT NULL AND DT_LIBERACAO::text <> '')));
			exception
				when others then
				IE_TIPO_PRECO_W	:= '';
			end;
	end;
else
	begin
	SELECT coalesce(vl_preco_final, VL_PRECO_MEDICAMENTO),
		IE_TIPO_PRECO,
		DT_INICIO_VIGENCIA,
		coalesce(IE_PRECO_PORT,'T'),
		coalesce(pr_ipi,0),
		coalesce(ie_pis_cofins,'T'),
		ie_versao_atual
	INTO STRICT	VL_MEDICAMENTO_W,
		IE_TIPO_PRECO_W,
		DT_ULT_VIGENCIA_W,
		IE_PRECO_PORT_W,
		pr_ipi_w,
		ie_pis_cofins_w,
		ie_versao_atual_w
	FROM	BRASINDICE_PRECO
	WHERE	CD_LABORATORIO		= CD_LABORATORIO_W
	AND	CD_MEDICAMENTO		= CD_MEDICAMENTO_W
	AND	CD_APRESENTACAO		= CD_APRESENTACAO_W
	--AND	IE_TIPO_PRECO		= NVL(IE_TIPO_PRECO_REGRA_W,IE_TIPO_PRECO)
	AND	DT_INICIO_VIGENCIA	=
		(SELECT /*+ INDEX (A BRAPREC_I3) */			MAX(A.DT_INICIO_VIGENCIA)
		FROM	BRASINDICE_PRECO A
		WHERE	A.CD_LABORATORIO      = CD_LABORATORIO_W
		AND	A.CD_MEDICAMENTO      = CD_MEDICAMENTO_W
		AND	A.CD_APRESENTACAO     = CD_APRESENTACAO_W
		--AND	A.IE_TIPO_PRECO	      = NVL(IE_TIPO_PRECO_REGRA_W,A.IE_TIPO_PRECO)
		AND	A.DT_INICIO_VIGENCIA <= DT_VIGENCIA_BRAS_W
		AND 	((IE_EXIGE_LIB_W	= 'N') OR (DT_LIBERACAO IS NOT NULL AND DT_LIBERACAO::text <> '')));
	exception
		when others then
			begin
			SELECT coalesce(vl_preco_final, VL_PRECO_MEDICAMENTO),
				IE_TIPO_PRECO,
				DT_INICIO_VIGENCIA,
				coalesce(IE_PRECO_PORT,'T'),
				coalesce(pr_ipi,0),
				coalesce(ie_pis_cofins,'T'),
				ie_versao_atual
			INTO STRICT	VL_MEDICAMENTO_W,
				IE_TIPO_PRECO_W,
				DT_ULT_VIGENCIA_W,
				IE_PRECO_PORT_W,
				pr_ipi_w,
				ie_pis_cofins_w,
				ie_versao_atual_w
			FROM	BRASINDICE_PRECO
			WHERE	CD_LABORATORIO		= CD_LABORATORIO_W
			AND	CD_MEDICAMENTO		= CD_MEDICAMENTO_W
			AND	CD_APRESENTACAO		= CD_APRESENTACAO_W
			AND	IE_TIPO_PRECO		= coalesce(IE_TIPO_PRECO_REGRA_W,IE_TIPO_PRECO)
			AND	DT_INICIO_VIGENCIA	=
				(SELECT /*+ INDEX (A BRAPREC_I3) */					MAX(A.DT_INICIO_VIGENCIA)
				FROM	BRASINDICE_PRECO A
				WHERE	A.CD_LABORATORIO      = CD_LABORATORIO_W
				AND	A.CD_MEDICAMENTO      = CD_MEDICAMENTO_W
				AND	A.CD_APRESENTACAO     = CD_APRESENTACAO_W
				AND	A.IE_TIPO_PRECO	      = coalesce(IE_TIPO_PRECO_REGRA_W,A.IE_TIPO_PRECO)
				AND	A.DT_INICIO_VIGENCIA <= DT_VIGENCIA_BRAS_W
				AND 	((IE_EXIGE_LIB_W	= 'N') OR (DT_LIBERACAO IS NOT NULL AND DT_LIBERACAO::text <> '')));
			exception
				when others then
				IE_TIPO_PRECO_W	:= '';
			end;
	end;
end if;

if (ie_dividir_indice_pfb_w = 'N') then

	if (tx_preco_fabrica_w IS NOT NULL AND tx_preco_fabrica_w::text <> '') and (IE_TIPO_PRECO_W = 'PFB') then
		if (ie_pis_cofins_w = 'S') then
			vl_medicamento_w	:= (vl_medicamento_w * tx_pfb_pos_w);
		elsif (ie_pis_cofins_w = 'N') then
			vl_medicamento_w	:= (vl_medicamento_w * tx_pfb_neg_w);
		else
			vl_medicamento_w	:= (vl_medicamento_w * tx_preco_fabrica_w);
		end if;
	end if;

elsif (ie_dividir_indice_pfb_w = 'S') then

	if (tx_preco_fabrica_w IS NOT NULL AND tx_preco_fabrica_w::text <> '') and (IE_TIPO_PRECO_W = 'PFB') then
		if (ie_pis_cofins_w = 'S') then
			vl_medicamento_w	:= dividir(vl_medicamento_w , tx_pfb_pos_w);
		elsif (ie_pis_cofins_w = 'N') then
			vl_medicamento_w	:= dividir(vl_medicamento_w , tx_pfb_neg_w);
		else
			vl_medicamento_w	:= dividir(vl_medicamento_w , tx_preco_fabrica_w);
		end if;
	end if;

end if;

/* Conforme resoluÃ§Ã£o CMED nÂº 2, de 10 de marÃ§o de 2006

Art. 4Âº O PreÃ§o MÃ¡ximo ao Consumidor - PMC serÃ¡ obtido por meio da divisÃ£o do PreÃ§o
Fabricante - PF pelos fatores constantes da tabela abaixo, observadas as cargas tributÃ¡rias do
ICMS praticadas nos Estados de destino e a incidÃªncia da contribuiÃ§Ã£o para o PIS/PASEP e
COFINS, conforme o disposto na Lei nÂº 10.147, de 21 de dezembro de 2001.

 ICMS            Lista Positiva               Lista Negativa                     Lista Neutra
19%   	0,7234   		0,7523    		0,7071
18%               0,7234     		0,7519      		0,7073
17%   	0,7234   		0,7515    		0,7075
12%   	0,7234   		0,7499    		0,7084
0%   	0,7234   		0,7465     		0,7103  */
if (ie_dividir_indice_pmc_w = 'N') then

	if (TX_BRASINDICE_PMC_W IS NOT NULL AND TX_BRASINDICE_PMC_W::text <> '') and (IE_TIPO_PRECO_W = 'PMC') then
		if (ie_pis_cofins_w = 'S') then
			vl_medicamento_w	:= (vl_medicamento_w * TX_PMC_POS_W);
		elsif (ie_pis_cofins_w = 'N') then
			vl_medicamento_w	:= (vl_medicamento_w * TX_PMC_NEG_W);
		else
			vl_medicamento_w	:= (vl_medicamento_w * TX_BRASINDICE_PMC_W);
		end if;
	end if;

elsif (ie_dividir_indice_pmc_w = 'S') then

	if (TX_BRASINDICE_PMC_W IS NOT NULL AND TX_BRASINDICE_PMC_W::text <> '') and (IE_TIPO_PRECO_W = 'PMC') then
		if (ie_pis_cofins_w = 'S') then
			vl_medicamento_w	:= dividir(vl_medicamento_w , TX_PMC_POS_W);
		elsif (ie_pis_cofins_w = 'N') then
			vl_medicamento_w	:= dividir(vl_medicamento_w , TX_PMC_NEG_W);
		else
			vl_medicamento_w	:= dividir(vl_medicamento_w , TX_BRASINDICE_PMC_W);
		end if;
	end if;

end if;

/*      converte o preco para consumo material */

if (qt_conversao_w = 0) then
	qt_conversao_w := 1;
end if;

if (vl_medicamento_w > 0) then
	vl_medicamento_w := vl_medicamento_w + (vl_medicamento_w * pr_ipi_w / 100);
	vl_medicamento_w := (vl_medicamento_w / qt_conversao_w);
end if;

if (IE_RELACIONADO_BRAS_W = 'N') then
	vl_medicamento_w := 0;
end if;

IE_BRASINDICE_W		:= 'N';

/* Passei para o inÃ­cio da function - Heckmann 19/05/2010 - OS 214864
select 	max(cd_grupo_material)
into	cd_grupo_material_w
from 	estrutura_material_v
where 	cd_material = cd_material_p;
*/
if (CD_CATEGORIA_P IS NOT NULL AND CD_CATEGORIA_P::text <> '') and (coalesce(CD_CATEGORIA_P,'0') <> '0') then
	begin

	open C02;
	loop
	fetch C02 into
		ie_brasindice_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		ie_brasindice_w:= ie_brasindice_w;
		end;
	end loop;
	close C02;

	end;
end if;

if (ie_preco_medio_bras_w = 'S') then
	open C04;
	loop
	fetch C04 into
		vl_bras_w,
		cd_laboratorio_w,
		cd_medicamento_w,
		cd_apresentacao_w,
		qt_conversao_w;
	EXIT WHEN NOT FOUND; /* apply on C04 */
		begin
		vetor_valor_w[i].vl_medicamento := vl_bras_w;
		vetor_valor_w[i].cd_laboratorio := cd_laboratorio_w;
		vetor_valor_w[i].cd_medicamento := cd_medicamento_w;
		vetor_valor_w[i].cd_apresentacao := cd_apresentacao_w;
		vetor_valor_w[i].qt_conversao := qt_conversao_w;
		i := i + 1;
		end;
	end loop;
	close C04;

	select	round(dividir(i,2))
	into STRICT	qt_reg_w
	;

	if (i >= 3) then
		vl_medicamento_w := vetor_valor_w[qt_reg_w].vl_medicamento;
		cd_laboratorio_w := vetor_valor_w[qt_reg_w].cd_laboratorio;
		cd_medicamento_w := vetor_valor_w[qt_reg_w].cd_medicamento;
		cd_apresentacao_w := vetor_valor_w[qt_reg_w].cd_apresentacao;
		qt_conversao_w := vetor_valor_w[qt_reg_w].qt_conversao;
	end if;
end if;

if (ie_brasindice_w = 'N') then
	begin
	vl_medicamento_w	:= 0;
	dt_ult_vigencia_w	:= clock_timestamp();
	end;
end if;


cd_laboratorio_p	:= cd_laboratorio_w;
cd_medicamento_p	:= cd_medicamento_w;
cd_apresentacao_p	:= cd_apresentacao_w;
qt_conversao_P		:= qt_conversao_w;
vl_medicamento_p	:= vl_medicamento_w;
dt_ult_vigencia_p	:= dt_ult_vigencia_w;
ie_versao_atual_p	:= ie_versao_atual_w;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE hcb_obter_preco_brasindice ( cd_estabelecimento_p bigint, cd_convenio_p bigint, cd_categoria_p text, cd_material_p bigint, dt_vigencia_p timestamp, tx_brasindice_pmc_p bigint, tx_brasindice_pfb_p bigint, tx_pfb_pos_p bigint, tx_pfb_neg_p bigint, tx_pmc_neg_p bigint, tx_pmc_pos_p bigint, vl_medicamento_p INOUT bigint, dt_ult_vigencia_p INOUT timestamp, cd_laboratorio_p INOUT text, cd_medicamento_p INOUT text, cd_apresentacao_p INOUT text, qt_conversao_p INOUT bigint, ie_versao_atual_p INOUT bigint) FROM PUBLIC;

