-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gravar_log_conferencia (NR_SEQ_ITEM_P bigint, ie_tipo_item_p text, nr_seq_justificativa_p bigint, ie_acao_p text, nm_usuario_p text) AS $body$
DECLARE


dt_conferencia_w	timestamp;


BEGIN

if (ie_acao_p = '1') then -- Marcar
	if (ie_tipo_item_p = 'M') then

		select 	max(dt_conferencia)
		into STRICT	dt_conferencia_w
		from 	material_atend_paciente
		where 	nr_sequencia = NR_SEQ_ITEM_P;

		if (coalesce(dt_conferencia_w::text, '') = '') then

			insert into mat_log_conferencia(NR_SEQUENCIA,
					NR_SEQ_ITEM,
					DT_ATUALIZACAO,
					NM_USUARIO,
					DT_ATUALIZACAO_NREC,
					NM_USUARIO_NREC,
					NR_SEQ_JUSTIF,
					IE_CONFERIDO)
				values (nextval('mat_log_conferencia_seq'),
					NR_SEQ_ITEM_P,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					null,
					'S');

		end if;


	elsif (ie_tipo_item_p = 'P') then

		select 	max(dt_conferencia)
		into STRICT	dt_conferencia_w
		from 	procedimento_paciente
		where 	nr_sequencia = NR_SEQ_ITEM_P;

		if (coalesce(dt_conferencia_w::text, '') = '') then

			insert into proc_log_conferencia(NR_SEQUENCIA,
					DT_ATUALIZACAO,
					NM_USUARIO,
					DT_ATUALIZACAO_NREC,
					NM_USUARIO_NREC,
					NR_SEQ_ITEM,
					NR_SEQ_JUSTIF,
					IE_CONFERIDO)
				values (nextval('proc_log_conferencia_seq'),
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					NR_SEQ_ITEM_P,
					null,
					'S');

		end if;

	end if;

elsif (ie_acao_p = '2') then -- Desmarcar
	if (ie_tipo_item_p = 'M') then

		select 	max(dt_conferencia)
		into STRICT	dt_conferencia_w
		from 	material_atend_paciente
		where 	nr_sequencia = NR_SEQ_ITEM_P;

		if (dt_conferencia_w IS NOT NULL AND dt_conferencia_w::text <> '') then

			insert into mat_log_conferencia(NR_SEQUENCIA,
					NR_SEQ_ITEM,
					DT_ATUALIZACAO,
					NM_USUARIO,
					DT_ATUALIZACAO_NREC,
					NM_USUARIO_NREC,
					NR_SEQ_JUSTIF,
					IE_CONFERIDO)
				values (nextval('mat_log_conferencia_seq'),
					NR_SEQ_ITEM_P,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_justificativa_p,
					'N');

			update	material_atend_paciente
			set 	dt_conferencia  = NULL
			where 	nr_sequencia = NR_SEQ_ITEM_P;

		end if;


	elsif (ie_tipo_item_p = 'P') then

		select 	max(dt_conferencia)
		into STRICT	dt_conferencia_w
		from 	procedimento_paciente
		where 	nr_sequencia = NR_SEQ_ITEM_P;

		if (dt_conferencia_w IS NOT NULL AND dt_conferencia_w::text <> '') then

			insert into proc_log_conferencia(NR_SEQUENCIA,
					DT_ATUALIZACAO,
					NM_USUARIO,
					DT_ATUALIZACAO_NREC,
					NM_USUARIO_NREC,
					NR_SEQ_ITEM,
					NR_SEQ_JUSTIF,
					IE_CONFERIDO)
				values (nextval('proc_log_conferencia_seq'),
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					NR_SEQ_ITEM_P,
					nr_seq_justificativa_p,
					'N');

			update	procedimento_paciente
			set 	dt_conferencia  = NULL
			where 	nr_sequencia = NR_SEQ_ITEM_P;

		end if;

	end if;

end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gravar_log_conferencia (NR_SEQ_ITEM_P bigint, ie_tipo_item_p text, nr_seq_justificativa_p bigint, ie_acao_p text, nm_usuario_p text) FROM PUBLIC;

