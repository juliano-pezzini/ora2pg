-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE atendimento AS (nr_atendimento bigint, nm_usuario varchar(15));
CREATE TYPE gestao AS (nr_seq_gestao bigint, nm_usuario varchar(15));


CREATE OR REPLACE PROCEDURE gerar_autorizacao_job (ie_tipo_autorizacao_p text, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE

type vetor_atendimento is table of atendimento index by integer;
type vetor_gestao is table of gestao index by integer;

nr_atendimento_w		bigint;
nr_seq_regra_w			bigint;
nr_seq_gestao_w			bigint;
cd_convenio_w			integer;
i				integer;
k				integer;
vetor_atend_w			vetor_atendimento;
vetor_gestao_w			vetor_gestao;
ie_tipo_regra_w			varchar(1);
ie_regra_ok_w			varchar(1);
ie_gerar_autor_alta_job_w	varchar(15) := 'N';
nm_usuario_w 			atendimento_paciente.nm_usuario%type;


C01 CURSOR FOR
	SELECT	a.nr_atendimento,
		obter_convenio_atendimento(a.nr_atendimento) cd_convenio,
		'A' ie_tipo_regra,
    		a.nm_usuario
	from	atendimento_paciente a
	where	a.dt_alta_interno > clock_timestamp()
	and	(((coalesce(a.dt_alta::text, '') = '') and (ie_gerar_autor_alta_job_w = 'N')) or (ie_gerar_autor_alta_job_w = 'S'))
	and	coalesce(a.dt_fim_conta::text, '') = ''
	and	a.ie_fim_conta = 'A'
	and	to_char(a.cd_estabelecimento) 	= to_char(cd_estabelecimento_p)
	and	a.ie_tipo_atendimento	= 1;			/* Edgar  11/12/2006, filtrei por "Internado", performance */
C02 CURSOR FOR
	SELECT	a.nr_sequencia nr_seq_gestao,
		cd_convenio,
		'V' ie_tipo_regra,
    		a.nm_usuario
	from	gestao_vaga a
	where	to_char(a.cd_estabelecimento)	= to_char(cd_estabelecimento_p)
	and	((a.ie_solicitacao = 'I') or (a.ie_solicitacao = 'TE' and (a.cd_cnpj_solic IS NOT NULL AND a.cd_cnpj_solic::text <> '')))
	and	coalesce(a.nr_atendimento::text, '') = ''
	and	(a.cd_pessoa_fisica IS NOT NULL AND a.cd_pessoa_fisica::text <> '')
	and	a.ie_status in ('A','R');

C09 CURSOR FOR
	SELECT	nr_sequencia
	from	regra_gerar_autorizacao
	where	ie_tipo_autorizacao in ('1','2') /*Francisco - 06/06/07 - So esses tipos utilizam Job */
	and	ie_evento	= 'Job'
	and	coalesce(hr_execucao, to_char(clock_timestamp(),'hh24'))	= to_char(clock_timestamp(),'hh24')
	and	cd_convenio		= cd_convenio_w
	and	cd_estabelecimento	= cd_estabelecimento_p
	and	ie_tipo_regra		= ie_tipo_regra_w
	and	coalesce(ie_situacao, 'A')	= 'A';


BEGIN

select	max(coalesce(ie_gerar_autor_alta_job,'N'))
into STRICT	ie_gerar_autor_alta_job_w
from	parametro_faturamento
where	cd_estabelecimento = cd_estabelecimento_p;

/* Autorizacao Atendimentos */

i	:= 1;
open c01;
loop
fetch c01 into
	nr_atendimento_w,
	cd_convenio_w,
	ie_tipo_regra_w,
  	nm_usuario_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	ie_regra_ok_w	:= 'N';
	open c09;
	loop
	fetch c09 into
		nr_seq_regra_w;
	EXIT WHEN NOT FOUND; /* apply on c09 */
		ie_regra_ok_w	:= 'S';
	end loop;
	close c09;

	if (ie_regra_ok_w = 'S') then
		vetor_atend_w[i].nr_atendimento := nr_atendimento_w;
   		vetor_atend_w[i].nm_usuario := nm_usuario_w;
		i	:= i + 1;	
	end if;	
end loop;
close c01;

i := vetor_atend_w.count;
for k in 1.. i loop
	begin
	nr_atendimento_w	:= Vetor_atend_w[k].nr_atendimento;
  	nm_usuario_w 		:= Vetor_atend_w[k].nm_usuario;
	begin
	CALL Gerar_Autor_Regra(nr_atendimento_w, null, null, null, null, null, 'Job', nm_usuario_w, null,null, null,null,null,null,'','','');
	exception
	when others then
		null;
	end;
	commit;
	end;
end loop;

/* Autorizacao Gestao de Vagas */

i	:= 1;
open c02;
loop
fetch c02 into
	nr_seq_gestao_w,
	cd_convenio_w,
	ie_tipo_regra_w,
  	nm_usuario_w;
EXIT WHEN NOT FOUND; /* apply on c02 */
	ie_regra_ok_w	:= 'N';
	open c09;
	loop
	fetch c09 into
		nr_seq_regra_w;
	EXIT WHEN NOT FOUND; /* apply on c09 */
		ie_regra_ok_w	:= 'S';
	end loop;
	close c09;
		
	if (ie_regra_ok_w = 'S') then
		vetor_gestao_w[i].nr_seq_gestao := nr_seq_gestao_w;
		vetor_gestao_w[i].nm_usuario := nm_usuario_w;
		i	:= i + 1;
	end if;
end loop;
close c02;

i := vetor_gestao_w.count;
for k in 1.. i loop
	begin
	nr_seq_gestao_w	:= Vetor_gestao_w[k].nr_seq_gestao;
  	nm_usuario_w	:= Vetor_gestao_w[k].nm_usuario;
	begin
	CALL Gerar_Autor_Regra(null, null, null, null, null, null, 'Job', nm_usuario_w, null,null, nr_seq_gestao_w,null,null,null,'','','');
	exception
	when others then
		null;
	end;
	commit;
	end;
end loop;


END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_autorizacao_job (ie_tipo_autorizacao_p text, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

