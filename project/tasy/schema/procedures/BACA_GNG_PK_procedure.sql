-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE baca_gng_pk () AS $body$
DECLARE


qt_registro_w		bigint;
nr_seq_gng_w		bigint;
qt_reg_sem_grupo_w	bigint;

c01 CURSOR FOR
SELECT	a.nr_sequencia,
	a.cd_grupo_natureza_gasto,
	a.cd_estabelecimento
from	grupo_natureza_gasto a;

Vet01	C01%RowType;


BEGIN

select	count(*)
into STRICT	qt_registro_w
from	grupo_natureza_gasto
where	coalesce(nr_sequencia::text, '') = '';

if (qt_registro_w > 0) then
	update	grupo_natureza_gasto
	set	nr_sequencia	= nextval('grupo_natureza_gasto_seq')
	where	coalesce(nr_sequencia::text, '') = '';
end if;

select	count(*)
into STRICT	qt_registro_w
from	grupo_natureza_gasto
where	cd_empresa	<> obter_empresa_estab(cd_estabelecimento)
and	(cd_estabelecimento IS NOT NULL AND cd_estabelecimento::text <> '');

if (qt_registro_w > 0) then

	update	grupo_natureza_gasto
	set	cd_empresa	= obter_empresa_estab(cd_estabelecimento)
	where	(cd_estabelecimento IS NOT NULL AND cd_estabelecimento::text <> '');

end if;

commit;

select	count(*)
into STRICT	qt_registro_w
from	orcamento_distribuido
where	coalesce(nr_seq_gng::text, '') = ''
and	(cd_grupo_natureza_gasto IS NOT NULL AND cd_grupo_natureza_gasto::text <> '');

/* ORCAMENTO_DISTRIBUIDO - Não tinha integridade, mas gravava CD_GRUPO_NATUREZA_GASTO */

if (qt_registro_w > 0) then

	open C01;
	loop
	fetch C01 into
		Vet01;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		update	orcamento_distribuido
		set	nr_seq_gng		= Vet01.nr_sequencia
		where	cd_estabelecimento	= Vet01.cd_estabelecimento
		and	cd_grupo_natureza_gasto	= Vet01.cd_grupo_natureza_gasto
		and	coalesce(nr_seq_gng::text, '') = '';

		end;
	end loop;
	close C01;

	commit;

end if;

/* CUSTO_PADRAO_COMP */

select	count(*)
into STRICT	qt_registro_w
from	custo_padrao_comp
where	coalesce(nr_seq_gng::text, '') = ''
and	(cd_grupo_natureza_gasto IS NOT NULL AND cd_grupo_natureza_gasto::text <> '');

if (qt_registro_w > 0) then

	open C01;
	loop
	fetch C01 into
		Vet01;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		update	custo_padrao_comp
		set	nr_seq_gng		= Vet01.nr_sequencia
		where	cd_estabelecimento	= Vet01.cd_estabelecimento
		and	cd_grupo_natureza_gasto	= Vet01.cd_grupo_natureza_gasto
		and	coalesce(nr_seq_gng::text, '') = '';

		end;
	end loop;
	close C01;

	commit;

end if;

/* PARAMETRO_CUSTO */

select	count(*)
into STRICT	qt_registro_w
from	parametro_custo;

if (qt_registro_w > 0) then

	open C01;
	loop
	fetch C01 into
		Vet01;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		update	parametro_custo
		set	nr_seq_gng_mat		= Vet01.nr_sequencia
		where	cd_estabelecimento	= Vet01.cd_estabelecimento
		and	CD_GNG_MATERIAIS	= Vet01.cd_grupo_natureza_gasto
		and	coalesce(nr_seq_gng_mat::text, '') = '';

		update	parametro_custo
		set	nr_seq_gng_serv_terc	= Vet01.nr_sequencia
		where	cd_estabelecimento	= Vet01.cd_estabelecimento
		and	CD_GNG_SERVICOS_TERC	= Vet01.cd_grupo_natureza_gasto
		and	coalesce(nr_seq_gng_serv_terc::text, '') = '';
		end;
	end loop;
	close C01;

	commit;

end if;


select	count(*)
into STRICT	qt_registro_w
from	natureza_gasto
where	coalesce(nr_seq_gng::text, '') = '';

/* Atualizar Natureza de gasto */

if (qt_registro_w > 0) then

	open C01;
	loop
	fetch C01 into
		Vet01;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		update	natureza_gasto
		set	nr_seq_gng		= Vet01.nr_sequencia
		where	cd_estabelecimento	= Vet01.cd_estabelecimento
		and	cd_grupo_natureza_gasto	= Vet01.cd_grupo_natureza_gasto
		and	coalesce(nr_seq_gng::text, '') = '';

		end;
	end loop;
	close C01;

	commit;

	select	count(*)
	into STRICT	qt_registro_w
	from	natureza_gasto
	where	coalesce(nr_seq_gng::text, '') = '';

	if (qt_registro_w = 0) then
		begin

		select	count(*)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name	= 'NATUREZA_GASTO'
		and	column_name	= 'NR_SEQ_GNG'
		and	nullable	= 'Y';

		/*if	(qt_registro_w = 0) then
			exec_sql_dinamico('GNG_PK','alter table natureza_gasto modify nr_seq_gng number(10) not null');
		end if;

		select	count(*)
		into	qt_registro_w
		from	user_cons_columns
		where	table_name	= 'NATUREZA_GASTO'
		and	constraint_name	= 'NATGAST_GRUNAGA_FK'
		and	column_name	= 'NR_SEQ_GNG';

		if	(qt_registro_w = 0) then
			exec_sql_dinamico('GNG_PK','alter table natureza_gasto drop constraint NATGAST_GRUNAGA_FK');
			exec_sql_dinamico('GNG_PK','alter table natureza_gasto add constraint NATGAST_GRUNAGA_FK foreign key NR_SEQ_GNG references' ||
						' GRUPO_NATUREZA_GASTO(NR_SEQUENCIA)');
		end if;*/
		end;
	end if;
end if;

select	count(*)
into STRICT	qt_registro_w
from	centro_controle_tipo_gasto
where	coalesce(nr_seq_gng::text, '') = ''
and	(cd_grupo_natureza_gasto IS NOT NULL AND cd_grupo_natureza_gasto::text <> '');

/* CENTRO_CONTROLE_TIPO_GASTO	Atributo:NR_SEQ_GNG*/

if (qt_registro_w > 0) then

	open C01;
	loop
	fetch C01 into
		Vet01;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		update	centro_controle_tipo_gasto
		set	nr_seq_gng		= Vet01.nr_sequencia
		where	cd_estabelecimento	= Vet01.cd_estabelecimento
		and	cd_grupo_natureza_gasto	= Vet01.cd_grupo_natureza_gasto
		and	(cd_grupo_natureza_gasto IS NOT NULL AND cd_grupo_natureza_gasto::text <> '')
		and	coalesce(nr_seq_gng::text, '') = '';

		end;
	end loop;
	close C01;

	commit;
end if;

/* CRITERIO_DISTR_ORC	ATRIBUTO:NR_SEQ_GNG*/

select	count(*)
into STRICT	qt_registro_w
from	criterio_distr_orc
where	coalesce(nr_seq_gng::text, '') = ''
and	(cd_grupo_natureza_gasto IS NOT NULL AND cd_grupo_natureza_gasto::text <> '');

if (qt_registro_w > 0) then

	open C01;
	loop
	fetch C01 into
		Vet01;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		update	criterio_distr_orc
		set	nr_seq_gng		= Vet01.nr_sequencia
		where	cd_estabelecimento	= Vet01.cd_estabelecimento
		and	cd_grupo_natureza_gasto	= Vet01.cd_grupo_natureza_gasto
		and	(cd_grupo_natureza_gasto IS NOT NULL AND cd_grupo_natureza_gasto::text <> '')
		and	coalesce(nr_seq_gng::text, '') = '';

		end;
	end loop;
	close C01;

	commit;
end if;

/* CRITERIO_DISTR_ORC	ATRIBUTO:NR_SEQ_GNG_REF*/

select	count(*)
into STRICT	qt_registro_w
from	criterio_distr_orc
where	coalesce(nr_seq_gng_ref::text, '') = ''
and	(cd_grupo_nat_gasto_ref IS NOT NULL AND cd_grupo_nat_gasto_ref::text <> '');

if (qt_registro_w > 0) then

	open C01;
	loop
	fetch C01 into
		Vet01;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		update	criterio_distr_orc
		set	nr_seq_gng_ref			= Vet01.nr_sequencia
		where	cd_estabelecimento		= Vet01.cd_estabelecimento
		and	cd_grupo_nat_gasto_ref	= Vet01.cd_grupo_natureza_gasto
		and	(cd_grupo_nat_gasto_ref IS NOT NULL AND cd_grupo_nat_gasto_ref::text <> '')
		and	coalesce(nr_seq_gng_ref::text, '') = '';

		end;
	end loop;
	close C01;

	commit;
end if;

/* CUS_REGRA_IMP_CONTAB	ATRIBUTO:NR_SEQ_GNG*/

select	count(*)
into STRICT	qt_registro_w
from	cus_regra_imp_contab
where	coalesce(nr_seq_gng::text, '') = ''
and	(cd_grupo_natureza_gasto IS NOT NULL AND cd_grupo_natureza_gasto::text <> '');

if (qt_registro_w > 0) then

	open C01;
	loop
	fetch C01 into
		Vet01;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		update	cus_regra_imp_contab
		set	nr_seq_gng		= Vet01.nr_sequencia
		where	cd_estabelecimento	= Vet01.cd_estabelecimento
		and	cd_grupo_natureza_gasto	= Vet01.cd_grupo_natureza_gasto
		and	(cd_grupo_natureza_gasto IS NOT NULL AND cd_grupo_natureza_gasto::text <> '')
		and	coalesce(nr_seq_gng::text, '') = '';

		end;
	end loop;
	close C01;

	commit;
end if;

/* CUS_REGRA_IMP_CONTAB	ATRIBUTO:CD_GRUPO_NATUREZA_GASTO - Preenche com o código do GNG para não dar erro durante implementação (CADASTROS NOVOS)*/

select	count(*)
into STRICT	qt_reg_sem_grupo_w
from	cus_regra_imp_contab
where	(nr_seq_gng IS NOT NULL AND nr_seq_gng::text <> '')
and	coalesce(cd_grupo_natureza_gasto::text, '') = '';

if (qt_reg_sem_grupo_w > 0) then

	update	cus_regra_imp_contab
	set	cd_grupo_natureza_gasto	= cus_obter_dados_gng(nr_seq_gng,'C')
	where	(nr_seq_gng IS NOT NULL AND nr_seq_gng::text <> '')
	and	coalesce(cd_grupo_natureza_gasto::text, '') = '';

	commit;
end if;

/* REGRA_CALC_ORC_CUSTO	ATRIBUTO:NR_SEQ_GNG*/

select	count(*)
into STRICT	qt_registro_w
from	REGRA_CALC_ORC_CUSTO
where	coalesce(nr_seq_gng::text, '') = ''
and	(cd_grupo_nat_gasto IS NOT NULL AND cd_grupo_nat_gasto::text <> '');

if (qt_registro_w > 0) then

	open C01;
	loop
	fetch C01 into
		Vet01;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		update	REGRA_CALC_ORC_CUSTO
		set	nr_seq_gng		= Vet01.nr_sequencia
		where	cd_estabelecimento	= Vet01.cd_estabelecimento
		and	cd_grupo_nat_gasto	= Vet01.cd_grupo_natureza_gasto
		and	(cd_grupo_nat_gasto IS NOT NULL AND cd_grupo_nat_gasto::text <> '')
		and	coalesce(nr_seq_gng::text, '') = '';

		end;
	end loop;
	close C01;

	commit;
end if;

/*TAXA_CUSTO	ATRIBUTO:NR_SEQ_GNG*/

select	count(*)
into STRICT	qt_registro_w
from	taxa_custo
where	coalesce(nr_seq_gng::text, '') = ''
and	(cd_grupo_natureza_gasto IS NOT NULL AND cd_grupo_natureza_gasto::text <> '');

if (qt_registro_w > 0) then

	open C01;
	loop
	fetch C01 into
		Vet01;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		update	TAXA_CUSTO
		set	nr_seq_gng		= Vet01.nr_sequencia
		where	cd_estabelecimento	= Vet01.cd_estabelecimento
		and	cd_grupo_natureza_gasto	= Vet01.cd_grupo_natureza_gasto
		and	(cd_grupo_natureza_gasto IS NOT NULL AND cd_grupo_natureza_gasto::text <> '')
		and	coalesce(nr_seq_gng::text, '') = '';

		commit;
		end;
	end loop;
	close C01;

	commit;
end if;

/*TAXA_CUSTO_NAT	ATRIBUTO:NR_SEQ_GNG*/

select	count(*)
into STRICT	qt_registro_w
from	taxa_custo_nat
where	coalesce(nr_seq_gng::text, '') = ''
and	(cd_grupo_natureza_gasto IS NOT NULL AND cd_grupo_natureza_gasto::text <> '');

if (qt_registro_w > 0) then

	open C01;
	loop
	fetch C01 into
		Vet01;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		update	TAXA_CUSTO_NAT
		set	nr_seq_gng		= Vet01.nr_sequencia
		where	cd_estabelecimento	= Vet01.cd_estabelecimento
		and	cd_grupo_natureza_gasto	= Vet01.cd_grupo_natureza_gasto
		and	(cd_grupo_natureza_gasto IS NOT NULL AND cd_grupo_natureza_gasto::text <> '')
		and	coalesce(nr_seq_gng::text, '') = '';

		commit;
		end;
	end loop;
	close C01;

end if;

/* CUS_CENTRO_TERC_CRIT	ATRIBUTO:NR_SEQ_GNG*/

select	count(*)
into STRICT	qt_registro_w
from	CUS_CENTRO_TERC_CRIT
where	coalesce(nr_seq_gng::text, '') = ''
and	(cd_grupo_nat_gasto IS NOT NULL AND cd_grupo_nat_gasto::text <> '');

if (qt_registro_w > 0) then

	open C01;
	loop
	fetch C01 into
		Vet01;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		update	CUS_CENTRO_TERC_CRIT
		set	nr_seq_gng		= Vet01.nr_sequencia
		where	cd_estabelecimento	= Vet01.cd_estabelecimento
		and	cd_grupo_nat_gasto	= Vet01.cd_grupo_natureza_gasto
		and	(cd_grupo_nat_gasto IS NOT NULL AND cd_grupo_nat_gasto::text <> '')
		and	coalesce(nr_seq_gng::text, '') = '';

		end;
	end loop;
	close C01;

	commit;
end if;
commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE baca_gng_pk () FROM PUBLIC;

