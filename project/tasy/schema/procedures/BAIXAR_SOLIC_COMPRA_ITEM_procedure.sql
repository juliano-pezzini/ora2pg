-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE baixar_solic_compra_item ( nr_solic_compra_p bigint, nr_item_solic_compra_p bigint, nm_usuario_p text, cd_motivo_baixa_p bigint, ds_observacao_p text) AS $body$
DECLARE


nr_item_solic_compra_w			bigint;
cd_motivo_baixa_w			integer;
cd_estabelecimento_w			smallint;
cd_material_w				integer;
ds_material_w				varchar(255);
ds_motivo_baixa_w			varchar(255);
ds_observacao_w				varchar(300);
qt_existe_w				bigint;
nr_seq_regra_w				bigint;
cd_setor_atendimento_w			integer;
cd_perfil_w				varchar(10);
qt_existe_regra_w			bigint;
ie_ci_lida_w				varchar(1);
nm_usuario_w				varchar(255);
nm_usuario_sc_w				varchar(15);
dt_baixa_w				timestamp;
dt_liberacao_w				timestamp;
ds_motivo_cancel_w			varchar(255);
ds_titulo_w				varchar(255);
ds_comunicacao_w			varchar(2000);
nr_seq_classif_w			bigint;
nr_sequencia_w				bigint;
/* Se tiver setor na regra, envia CI para os setores */

ds_setor_adicional_w                    varchar(2000) := '';
/* Campos da regra Usuario da Regra */

cd_setor_regra_usuario_w		integer;

/* Enviar EMAIL para APROVADOR da solicitacao de compra ( Solicitacao - Ao cancelar item da solicitacao de compra (Avisa o(s) aprovador(es)) ) */

nr_seq_regra_email_w			bigint;
ds_email_adicional_w			varchar(2000);
ds_email_destino_w			varchar(255);
ds_email_usuario_aprov_w		varchar(255);
ds_assunto_w				varchar(80);
ds_mensagem_w				varchar(2000);
ds_email_origem_w			varchar(255);
ie_usuario_w				varchar(3);
cd_perfil_disparar_w			integer;
ds_usuario_origem_w			varchar(255);
cd_comprador_w				varchar(10);
ds_email_comprador_w			varchar(255);
ds_usuario_comprador_w			varchar(255);
cd_setor_solicitante_w		setor_atendimento.cd_setor_atendimento%type;

qt_material_w					solic_compra_item.qt_material%type;
qt_material_pendente_w			solic_compra_item.qt_material%type;
qt_material_cancelado_w			solic_compra_item.qt_material_cancelado%type;
ie_considera_vl_compr_saldo_w		parametro_compras.ie_considera_vl_compr_saldo%type;

c00 CURSOR FOR
SELECT	nr_item_solic_compra
from	solic_compra_item
where	nr_solic_compra = nr_solic_compra_p
and	((nr_item_solic_compra = nr_item_solic_compra_p) or (nr_item_solic_compra_p = 0));

c01 CURSOR FOR
SELECT	b.nr_sequencia,
	b.cd_perfil
from	regra_envio_comunic_compra a,
	regra_envio_comunic_evento b
where	a.nr_sequencia = b.nr_seq_regra
and	a.cd_funcao = 913
and	b.cd_evento = 47
and	b.ie_situacao = 'A'
and	a.cd_estabelecimento = cd_estabelecimento_w
and	((cd_setor_atendimento_w IS NOT NULL AND cd_setor_atendimento_w::text <> '' AND b.cd_setor_destino = cd_setor_atendimento_w) or
	((coalesce(cd_setor_atendimento_w::text, '') = '') and (coalesce(b.cd_setor_destino::text, '') = '')) or (coalesce(b.cd_setor_destino::text, '') = ''))
and	substr(obter_se_envia_ci_regra_compra(b.nr_sequencia,nr_solic_compra_p,'SC',obter_perfil_ativo,nm_usuario_p,null),1,1) = 'S';

c05 CURSOR FOR
SELECT	coalesce(a.cd_setor_atendimento,0) cd_setor_atendimento
from	regra_envio_comunic_usu a
where	a.nr_seq_evento = nr_seq_regra_w;

c06 CURSOR FOR
	SELECT	distinct
		Obter_Dados_Usuario_Opcao(substr(obter_usuarios_proc_aprov(a.nr_sequencia, a.nr_seq_proc_aprov),1,15),'E') ds_email_usuarios_aprov
	from 	processo_aprov_compra a,
		pessoa_fisica b
	where 	a.cd_pessoa_fisica = b.cd_pessoa_fisica
	and 	a.nr_sequencia in (SELECT	distinct
			nr_seq_aprovacao
		from 	solic_compra_item
		where 	nr_solic_compra = nr_solic_compra_p)
	
union all

	select	distinct 
		Obter_Dados_Usuario_Opcao(substr(obter_usuarios_proc_aprov(a.nr_sequencia, a.nr_seq_proc_aprov),1,15),'E') ds_email_usuarios_aprov
	from 	processo_aprov_compra a,
		cargo b
	where 	a.cd_cargo = b.cd_cargo
	and 	a.nr_sequencia in (select	distinct 
			nr_seq_aprovacao
		from 	solic_compra_item
		where 	nr_solic_compra = nr_solic_compra_p)
	order by 1;


BEGIN

cd_motivo_baixa_w	:= coalesce(cd_motivo_baixa_p,2);  /*ja era o padrao*/
select	cd_estabelecimento,
	cd_setor_atendimento,
	nm_usuario,
	dt_liberacao,
	substr(obter_valor_dominio(45,cd_motivo_baixa_p),1,255),
	obter_setor_usuario(obter_usuario_pessoa(cd_pessoa_solicitante))
into STRICT	cd_estabelecimento_w,
	cd_setor_atendimento_w,
	nm_usuario_sc_w,
	dt_liberacao_w,
	ds_motivo_cancel_w,
	cd_setor_solicitante_w
from	solic_compra
where	nr_solic_compra = nr_solic_compra_p;

select	coalesce(max(IE_CONSIDERA_VL_COMPR_SALDO),'N')
into STRICT	ie_considera_vl_compr_saldo_w
from	parametro_compras
where	cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento;

if (nr_item_solic_compra_p > 0 and ie_considera_vl_compr_saldo_w = 'N') then
	select	dt_baixa
	into STRICT	dt_baixa_w
	from	solic_compra_item
	where	nr_solic_compra = nr_solic_compra_p
	and	nr_item_solic_compra = nr_item_solic_compra_p;
	
	if (dt_baixa_w IS NOT NULL AND dt_baixa_w::text <> '') then
		/*(-20011,'Este item desta solicitacao ja esta baixado.');*/

		CALL wheb_mensagem_pck.exibir_mensagem_abort(198649);
	end if;
end if;

open c00;
loop
fetch c00 into
	nr_item_solic_compra_w;
EXIT WHEN NOT FOUND; /* apply on c00 */
	begin
		
	select	qt_material,
			coalesce(qt_material_cancelado,0),
			(qt_material - obter_qt_sc_comprometido(nr_solic_compra, nr_item_solic_compra, null, wheb_usuario_pck.get_cd_estabelecimento))
	into STRICT	qt_material_w,
			qt_material_cancelado_w,
			qt_material_pendente_w
	from solic_compra_item
	where nr_solic_compra = nr_solic_compra_p
	and nr_item_solic_compra = nr_item_solic_compra_w;	
	
	if (qt_material_pendente_w > 0) then
		begin
			qt_material_cancelado_w := qt_material_cancelado_w + qt_material_pendente_w;
		end;
	else
		begin
			qt_material_cancelado_w := qt_material_cancelado_w;
		end;
	end if;
	
	update	solic_compra_item
	set	dt_baixa	= clock_timestamp(),
	cd_motivo_baixa = cd_motivo_baixa_w,
	nm_usuario	= nm_usuario_p,
	qt_material_cancelado = qt_material_cancelado_w,
	ds_observacao	= substr(CASE WHEN ds_observacao = NULL THEN 	ds_observacao_p  ELSE ds_observacao || chr(10) || chr(13) || ds_observacao_p END ,1,255)
	where	nr_solic_compra = nr_solic_compra_p
	and	nr_item_solic_compra = nr_item_solic_compra_w;
	
	if (coalesce(nr_item_solic_compra_p,0) = 0) then
		CALL gerar_hist_solic_sem_commit(
				nr_solic_compra_p,
				WHEB_MENSAGEM_PCK.get_texto(297844),
				WHEB_MENSAGEM_PCK.get_texto(297867,'NR_ITEM_SOLIC_COMPRA_W=' || nr_item_solic_compra_w || ';' ||
								'NR_SOLIC_COMPRA_P=' || nr_solic_compra_p),
				'B',
				nm_usuario_p);
	end if;

	end;
end loop;
close c00;

update	solic_compra
set	dt_baixa = clock_timestamp(),
	cd_motivo_baixa = cd_motivo_baixa_w,
	nm_usuario = nm_usuario_p
where	nr_solic_compra = nr_solic_compra_p
and	not exists (SELECT 1
		from	solic_compra_item
		where	nr_solic_compra = nr_solic_compra_p
		and	coalesce(dt_baixa::text, '') = '');

update	processo_aprov_compra a
set	a.ie_aprov_reprov = 'B',			
	a.ds_observacao = substr(WHEB_MENSAGEM_PCK.get_texto(297871,'DS_OBSERVACAO_W=' || a.ds_observacao || ';' || 'NR_SOLIC_COMPRA_P=' || nr_solic_compra_p),1,2000)
where	a.nr_sequencia in (
	SELECT	distinct(nr_seq_aprovacao)
	from	solic_compra_item
	where	nr_solic_compra = nr_solic_compra_p)
and	ie_aprov_reprov = 'P'
and	not exists (
	SELECT	1
	from	solic_compra_item x
	where	x.nr_seq_aprovacao = a.nr_sequencia
	and	coalesce(dt_baixa::text, '') = '');
	
if (nr_item_solic_compra_p > 0) then
	
	select	cd_material,
		substr(obter_desc_material(cd_material),1,255)
	into STRICT	cd_material_w,
		ds_material_w
	from	solic_compra_item
	where	nr_solic_compra = nr_solic_compra_p
	and	nr_item_solic_compra = nr_item_solic_compra_p;
	
	select	obter_valor_dominio(45,cd_motivo_baixa_w)
	into STRICT	ds_motivo_baixa_w
	;
	
	if (ds_observacao_p IS NOT NULL AND ds_observacao_p::text <> '') then
		ds_observacao_w	:= substr(WHEB_MENSAGEM_PCK.get_texto(297872,'DS_OBSERVACAO_W=' || ds_observacao_p),1,300);
	end if;
		
	CALL gerar_historico_solic_compra(	nr_solic_compra_p,
			WHEB_MENSAGEM_PCK.get_texto(297874),
			WHEB_MENSAGEM_PCK.get_texto(297875,'CD_MATERIAL_W=' || cd_material_w || ';' ||
							'DS_MATERIAL_W=' || ds_material_w || ';' ||
							'DS_MOTIVO_BAIXA_W=' || ds_motivo_baixa_w || ';' ||
							'DS_OBSERVACAO_W=' || ds_observacao_w),
			'B',
			nm_usuario_p);	
end if;

open C01;
loop
fetch C01 into	
	nr_seq_regra_w,
	cd_perfil_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	select	count(*)
	into STRICT	qt_existe_regra_w
	from	regra_envio_comunic_compra a,
		regra_envio_comunic_evento b,
		regra_envio_comunic_usu c
	where	a.nr_sequencia = b.nr_seq_regra
	and	b.nr_sequencia = c.nr_seq_evento
	and	b.nr_sequencia = nr_seq_regra_w;

	select	coalesce(ie_ci_lida,'N')
	into STRICT	ie_ci_lida_w
	from 	regra_envio_comunic_evento
	where 	nr_sequencia = nr_seq_regra_w;

	if (qt_existe_regra_w > 0) then

		open C05;
		loop
		fetch C05 into
			cd_setor_regra_usuario_w;
		EXIT WHEN NOT FOUND; /* apply on C05 */
			begin
			if (cd_setor_regra_usuario_w <> 0) and (obter_se_contido_char(cd_setor_regra_usuario_w, ds_setor_adicional_w) = 'N') then
				ds_setor_adicional_w := substr(ds_setor_adicional_w || cd_setor_regra_usuario_w || ',',1,2000);
			end if;
			end;
		end loop;
		close C05;		
		
		select	count(*)
		into STRICT	qt_existe_regra_w
		from	regra_envio_comunic_compra a,
			regra_envio_comunic_evento b,
			regra_envio_comunic_usu c
		where	a.nr_sequencia = b.nr_seq_regra
		and	b.nr_sequencia = c.nr_seq_evento
		and	b.nr_sequencia = nr_seq_regra_w
		and	c.ie_usuario = 'SSS';
	
		if (qt_existe_regra_w > 0) and (cd_setor_solicitante_w > 0) and (obter_se_contido_char(cd_setor_solicitante_w, ds_setor_adicional_w) = 'N') then
			
			ds_setor_adicional_w := substr(ds_setor_adicional_w || cd_setor_solicitante_w || ',',1,2000);
		end if;		

		nm_usuario_w := obter_usuarios_comunic_compras(nr_solic_compra_p,null,47,nr_seq_regra_w,'');
		
		select	max(substr(b.ds_titulo, 1, 255)),
			max(b.ds_comunicacao) ds_comunicacao
		into STRICT	ds_titulo_w,
			ds_comunicacao_w
		from	regra_envio_comunic_compra a,
			regra_envio_comunic_evento b
		where	a.nr_sequencia = b.nr_seq_regra
		and	a.cd_estabelecimento = cd_estabelecimento_w
		and	b.nr_sequencia = nr_seq_regra_w;
		
		ds_titulo_w := substr(replace_macro(ds_titulo_w,'@nr_documento',nr_solic_compra_p), 1, 255);
		ds_comunicacao_w := substr(replace_macro(ds_comunicacao_w, '@nr_documento', nr_solic_compra_p), 1, 2000);
		ds_comunicacao_w := substr(replace_macro(ds_comunicacao_w, '@usuario', nm_usuario_p), 1, 2000);		
		ds_comunicacao_w := substr(replace_macro(ds_comunicacao_w, '@dt_baixa', clock_timestamp()), 1, 2000);				
		ds_comunicacao_w := substr(replace_macro(ds_comunicacao_w, '@dt_liberacao', dt_liberacao_w), 1, 2000);		
		ds_comunicacao_w := substr(replace_macro(ds_comunicacao_w, '@motivo',ds_motivo_cancel_w), 1, 2000);		
		ds_comunicacao_w := substr(replace_macro(ds_comunicacao_w, '@cd_material', cd_material_w), 1, 2000);		
		ds_comunicacao_w := substr(replace_macro(ds_comunicacao_w, '@ds_material', ds_material_w), 1, 2000);				
		ds_comunicacao_w := substr(replace_macro(ds_comunicacao_w, '@observacao',ds_observacao_p), 1, 2000);						
		
		select	obter_classif_comunic('F')
		into STRICT	nr_seq_classif_w
		;

		select	nextval('comunic_interna_seq')
		into STRICT	nr_sequencia_w
		;

		if (cd_perfil_w IS NOT NULL AND cd_perfil_w::text <> '') then
			cd_perfil_w := cd_perfil_w ||',';
		end if;
		
		insert	into comunic_interna(
			cd_estab_destino,
			dt_comunicado,
			ds_titulo, 
			ds_comunicado,
			nm_usuario,
			dt_atualizacao, 
			ie_geral,
			nm_usuario_destino,
			nr_sequencia, 
			ie_gerencial,
			nr_seq_classif,
			dt_liberacao,
			ds_perfil_adicional,
			ds_setor_adicional)
		values (	cd_estabelecimento_w,
			clock_timestamp(),
			ds_titulo_w, 
			ds_comunicacao_w,
			nm_usuario_p,
			clock_timestamp(),
			'N',
			nm_usuario_w,
			nr_sequencia_w, 
			'N',
			nr_seq_classif_w,
			clock_timestamp(),
			cd_perfil_w,
			ds_setor_adicional_w);

		/*Para que a comunicacao seja gerada como lida ao proprio usuario */

		if (ie_ci_lida_w = 'S') then
			insert into comunic_interna_lida(nr_sequencia,nm_usuario,dt_atualizacao)values (nr_sequencia_w,nm_usuario_p,clock_timestamp());
		end if;
	end if;
	end;
end loop;
close C01;

/* Enviar EMAIL para APROVADOR da solicitacao de compra ( Solicitacao - Ao cancelar item da solicitacao de compra (Avisa o(s) aprovador(es)) ) */

select	max(cd_comprador_resp)
into STRICT	cd_comprador_w
from	solic_compra
where	nr_solic_compra = nr_solic_compra_p;

select	max(ds_email),
	max(nm_guerra)
into STRICT	ds_email_comprador_w,
	ds_usuario_comprador_w
from	comprador
where	cd_pessoa_fisica = cd_comprador_w
and	cd_estabelecimento = cd_estabelecimento_w;

select	coalesce(max(nr_sequencia),0),
	max(replace(ds_email_adicional,',',';'))
into STRICT	nr_seq_regra_email_w,
	ds_email_adicional_w
from	regra_envio_email_compra
where	ie_tipo_mensagem = 50
and	ie_situacao = 'A'
and	cd_estabelecimento = cd_estabelecimento_w;

if (nr_seq_regra_email_w > 0) and (cd_motivo_baixa_w in (2,3)) then
	begin

	select	ds_assunto,
		ds_mensagem_padrao		
	into STRICT	ds_assunto_w,
		ds_mensagem_w
	from	regra_envio_email_compra
	where	nr_sequencia = nr_seq_regra_email_w;
	
	ds_assunto_w := substr(replace_macro(ds_assunto_w, '@solicitacao',nr_solic_compra_p), 1, 80);
	ds_assunto_w := substr(replace_macro(ds_assunto_w, '@nr_item',nr_item_solic_compra_p), 1, 80);	
	ds_assunto_w := substr(replace_macro(ds_assunto_w, '@material',cd_material_w), 1, 80);	
	ds_assunto_w := substr(replace_macro(ds_assunto_w, '@descricao',ds_material_w), 1, 80);	
	ds_assunto_w := substr(replace_macro(ds_assunto_w, '@motivo_cancelamento',ds_motivo_cancel_w), 1, 80);	
	
	ds_mensagem_w := substr(replace_macro(ds_mensagem_w, '@solicitacao',nr_solic_compra_p) , 1, 2000);
	ds_mensagem_w := substr(replace_macro(ds_mensagem_w, '@nr_item',nr_item_solic_compra_p) , 1, 2000);	
	ds_mensagem_w := substr(replace_macro(ds_mensagem_w, '@material',cd_material_w) , 1, 2000);	
	ds_mensagem_w := substr(replace_macro(ds_mensagem_w, '@descricao',ds_material_w) , 1, 2000);	
	ds_mensagem_w := substr(replace_macro(ds_mensagem_w, '@motivo_cancelamento',ds_motivo_cancel_w) , 1, 2000);	
	
	
	select	coalesce(max(ie_usuario),'U'),
		max(cd_perfil_disparar)
	into STRICT	ie_usuario_w,
		cd_perfil_disparar_w
	from	regra_envio_email_compra
	where	nr_sequencia = nr_seq_regra_email_w;

	if (ie_usuario_w = 'U') then --Usuario
		select	ds_email,
			nm_usuario
		into STRICT	ds_email_origem_w,
			ds_usuario_origem_w
		from	usuario
		where	nm_usuario = nm_usuario_p;
	elsif (ie_usuario_w = 'C') then --Setor compras
		select	ds_email
		into STRICT	ds_email_origem_w
		from	parametro_compras
		where	cd_estabelecimento = cd_estabelecimento_w;

		select	coalesce(ds_fantasia,ds_razao_social)
		into STRICT	ds_usuario_origem_w
		from	estabelecimento_v
		where	cd_estabelecimento = cd_estabelecimento_w;
	elsif (ie_usuario_w = 'O') then --Comprador
		ds_email_origem_w := ds_email_comprador_w;
		ds_usuario_origem_w := ds_usuario_comprador_w;
	end if;

	open C06;
	loop
	fetch C06 into
		ds_email_usuario_aprov_w;
	EXIT WHEN NOT FOUND; /* apply on C06 */
		begin
		if (ds_email_usuario_aprov_w IS NOT NULL AND ds_email_usuario_aprov_w::text <> '') and (obter_se_contido_char(ds_email_destino_w, ds_email_usuario_aprov_w) = 'N') then
			ds_email_destino_w := ds_email_destino_w || ds_email_usuario_aprov_w || ';';
		end if;
		end;
	end loop;
	close C06;

	if (ds_email_adicional_w IS NOT NULL AND ds_email_adicional_w::text <> '') and
		((coalesce(cd_perfil_disparar_w::text, '') = '') or
		(cd_perfil_disparar_w IS NOT NULL AND cd_perfil_disparar_w::text <> '' AND cd_perfil_disparar_w = obter_perfil_ativo)) then
		ds_email_destino_w := ds_email_destino_w || ds_email_adicional_w || ';';
	end if;

	begin
		CALL enviar_email(ds_assunto_w,ds_mensagem_w,ds_email_origem_w,ds_email_destino_w,ds_usuario_origem_w,'M');
	exception when others then
		ds_assunto_w := '';
	end;
	end;
end if;

select	count(*)
into STRICT	qt_existe_w
from	solic_compra_item
where	coalesce(dt_baixa::text, '') = ''
and	nr_solic_compra = nr_solic_compra_p;

if (qt_existe_w = 0) then
	CALL gerar_historico_solic_compra(	nr_solic_compra_p,
			WHEB_MENSAGEM_PCK.get_texto(297835),
			WHEB_MENSAGEM_PCK.get_texto(297835),
			'B',
			nm_usuario_p);
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE baixar_solic_compra_item ( nr_solic_compra_p bigint, nr_item_solic_compra_p bigint, nm_usuario_p text, cd_motivo_baixa_p bigint, ds_observacao_p text) FROM PUBLIC;

