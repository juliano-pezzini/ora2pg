-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE intpd_reprocess_error ( dt_inicio_p timestamp, dt_fim_p timestamp, ie_evento_p intpd_fila_transmissao.ie_evento%type, nr_seq_documento_p intpd_fila_transmissao.nr_seq_documento%type, cd_sistema_p intpd_sistemas.nr_sequencia%type, cd_estab_p intpd_fila_transmissao.cd_estab_documento%type, nr_doc_externo_p intpd_fila_transmissao.nr_doc_externo%type, nr_seq_agrupador_p intpd_fila_transmissao.nr_seq_agrupador%type, nr_sequencia_p intpd_fila_transmissao.nr_sequencia%type, ie_envio_recebe_p intpd_fila_transmissao.ie_envio_recebe%type, cd_funcao_p funcao.cd_funcao%type, nr_seq_modulo_p funcao.nr_seq_modulo%type, nr_seq_classif_p classificacao_integracao.nr_sequencia%type, qtd_max_reg bigint, nm_usuario_p text) AS $body$
DECLARE


nr_sequencia_w	intpd_fila_transmissao.nr_sequencia%type;

c01 CURSOR FOR
	SELECT	a.nr_sequencia nr_sequencia
	from    intpd_fila_transmissao a,
		intpd_eventos_sistema b,
		intpd_config_eventos c
	where   b.nr_sequencia  = a.nr_seq_evento_sistema
	and     a.ie_evento = c.ie_evento
	and 	trunc(a.dt_atualizacao) between dt_inicio_p and fim_dia(dt_fim_p)
	and 	((a.ie_evento = ie_evento_p) or (ie_evento_p = '0'))
	and (a.ie_status = 'E')
	and   	((a.nr_seq_documento = nr_seq_documento_p) or (nr_seq_documento_p = '0'))
	and   	((obter_nm_sistema_intpd(a.nr_seq_evento_sistema,1) = cd_sistema_p) or (cd_sistema_p = '0'))
	and   	((a.cd_estab_documento = cd_estab_p) or (cd_estab_p = '0'))
	and		((a.nr_doc_externo = nr_doc_externo_p) or (coalesce(nr_doc_externo_p::text, '') = ''))
	and		((a.nr_seq_agrupador = nr_seq_agrupador_p) or (coalesce(nr_seq_agrupador_p::text, '') = ''))
	and   	((a.ie_envio_recebe = ie_envio_recebe_p) or (ie_envio_recebe_p = '1'))
	and   	((a.nr_sequencia = nr_sequencia_p) or (coalesce(nr_sequencia_p::text, '') = ''))
	and     ((obter_classif_intpd(a.nr_seq_evento_sistema,null) = nr_seq_classif_p) or (coalesce(nr_seq_classif_p::text, '') = ''))
	and		((c.cd_funcao = cd_funcao_p) or (coalesce(cd_funcao_p::text, '') = ''))
	and		((obter_modulo_funcao(c.cd_funcao) = nr_seq_modulo_p) or (coalesce(nr_seq_modulo_p::text, '') = '')) 
	order   by a.nr_sequencia LIMIT (qtd_max_reg);


BEGIN

	if (qtd_max_reg > 0) then
		open c01;
		loop
		fetch c01 into	
			nr_sequencia_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			begin
			
				CALL atualizar_status_reproc_intpd(nr_sequencia_w,'P',nm_usuario_p,'S');
			
			end;
		end loop;
		close c01;
	end if;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE intpd_reprocess_error ( dt_inicio_p timestamp, dt_fim_p timestamp, ie_evento_p intpd_fila_transmissao.ie_evento%type, nr_seq_documento_p intpd_fila_transmissao.nr_seq_documento%type, cd_sistema_p intpd_sistemas.nr_sequencia%type, cd_estab_p intpd_fila_transmissao.cd_estab_documento%type, nr_doc_externo_p intpd_fila_transmissao.nr_doc_externo%type, nr_seq_agrupador_p intpd_fila_transmissao.nr_seq_agrupador%type, nr_sequencia_p intpd_fila_transmissao.nr_sequencia%type, ie_envio_recebe_p intpd_fila_transmissao.ie_envio_recebe%type, cd_funcao_p funcao.cd_funcao%type, nr_seq_modulo_p funcao.nr_seq_modulo%type, nr_seq_classif_p classificacao_integracao.nr_sequencia%type, qtd_max_reg bigint, nm_usuario_p text) FROM PUBLIC;

