-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_w_relat_efic_cobr ( dt_referencia_p timestamp, nr_seq_cobrador_p bigint, nm_usuario_p text, ie_analitico_p text, ie_sem_resp_cobr_p text) AS $body$
DECLARE

 
ds_quebra_1_w		varchar(255);
ds_quebra_2_w		varchar(255);
nr_seq_cobrador_w	bigint;
nr_seq_orgao_cobranca_w	bigint;

vl_saldo_carteira_w	double precision;
vl_saldo_cobranca_w	double precision;
vl_entrada_cobranca_w	double precision;
vl_transf_entr_cobr_w	double precision;
vl_transf_saida_cobr_w	double precision;
pr_meta_cobrador_w	double precision;
vl_meta_cobranca_w	double precision;
vl_recebido_do_periodo_w	double precision;
vl_recebido_no_periodo_w	double precision;
vl_recebido_ant_w	double precision;
pr_eficiencia_cobr_w	double precision;
vl_saldo_atual_carteira_w	double precision;
vl_referencia_w		double precision;
ds_pessoa_w		varchar(80);
nm_paciente_w		varchar(60);
ie_tipo_valor_w		varchar(5);
nr_titulo_w		bigint;
ie_ordem_w		integer;

dt_referencia_w		timestamp;	
 
/* Cursor cobrador */
 
c01 CURSOR FOR 
SELECT	nr_sequencia 
from	cobrador 
where	ie_situacao	= 'A' 
and	nr_sequencia	= coalesce(nr_seq_cobrador_p,nr_sequencia);

/* Cursor analitico */
 
 
c03 CURSOR FOR 
/* Saldo anterior */
 
SELECT	'SA', 
	b.nr_titulo, 
	obter_nome_pf_pj(b.cd_pessoa_fisica,b.cd_cgc), 
	obter_pessoa_atendimento(b.nr_atendimento,'N'), 
	obter_saldo_titulo_receber(b.nr_titulo,PKG_DATE_UTILS.get_DateTime(PKG_DATE_UTILS.END_OF(PKG_DATE_UTILS.ADD_MONTH(dt_referencia_w,-1,0), 'MONTH', 0), coalesce(dt_referencia_w, PKG_DATE_UTILS.GET_TIME('00:00:00')))), 
	obter_orgao_cobranca_data(a.nr_sequencia, PKG_DATE_UTILS.get_DateTime(PKG_DATE_UTILS.END_OF(dt_referencia_w, 'MONTH', 0), coalesce(dt_referencia_w, PKG_DATE_UTILS.GET_TIME('00:00:00')))), 
	1 ie_ordem 
from	titulo_receber b, 
	cobranca a 
where	b.nr_titulo		= a.nr_titulo 
and	obter_saldo_titulo_receber(b.nr_titulo, PKG_DATE_UTILS.get_DateTime(PKG_DATE_UTILS.END_OF(PKG_DATE_UTILS.ADD_MONTH(dt_referencia_w,-1,0), 'MONTH', 0), coalesce(dt_referencia_w, PKG_DATE_UTILS.GET_TIME('00:00:00')))) > 0 
and	obter_cobrador_data(a.nr_sequencia, PKG_DATE_UTILS.get_DateTime(PKG_DATE_UTILS.END_OF(PKG_DATE_UTILS.ADD_MONTH(dt_referencia_w,-1,0), 'MONTH', 0), coalesce(dt_referencia_w, PKG_DATE_UTILS.GET_TIME('00:00:00'))),ie_sem_resp_cobr_p) = nr_seq_cobrador_w 

union all
 
/* Cobranças novas */
 
SELECT	'CN', 
	b.nr_titulo, 
	obter_nome_pf_pj(b.cd_pessoa_fisica,b.cd_cgc), 
	obter_pessoa_atendimento(b.nr_atendimento,'N'), 
	CASE WHEN obter_saldo_titulo_receber(b.nr_titulo,PKG_DATE_UTILS.start_of(x.dt_alteracao,'dd',0) - 1)=0 THEN b.vl_titulo  ELSE obter_saldo_titulo_receber(b.nr_titulo,PKG_DATE_UTILS.start_of(x.dt_alteracao,'dd',0) - 1) END , 
	obter_orgao_cobranca_data(a.nr_sequencia,PKG_DATE_UTILS.get_DateTime(PKG_DATE_UTILS.END_OF(dt_referencia_w, 'MONTH', 0), coalesce(dt_referencia_w, PKG_DATE_UTILS.GET_TIME('00:00:00')))), 
	2 ie_ordem 
from	titulo_receber b, 
	cobranca a, 
	cobranca_alt_cobrador x 
where	b.nr_titulo			= a.nr_titulo 
and	x.nr_seq_cobranca		= a.nr_sequencia 
and	PKG_DATE_UTILS.start_of(x.dt_alteracao,'month',0) = dt_referencia_w 
and	x.nr_seq_cobr_novo		= nr_seq_cobrador_w 
and	coalesce(x.nr_seq_cobr_ant::text, '') = '' 

union all
 
select	'CN', 
	b.nr_titulo, 
	obter_nome_pf_pj(b.cd_pessoa_fisica,b.cd_cgc), 
	obter_pessoa_atendimento(b.nr_atendimento,'N'), 
	CASE WHEN obter_saldo_titulo_receber(b.nr_titulo,PKG_DATE_UTILS.start_of(a.dt_inclusao,'dd',0) - 1)=0 THEN b.vl_titulo  ELSE obter_saldo_titulo_receber(b.nr_titulo,PKG_DATE_UTILS.start_of(a.dt_inclusao,'dd',0) - 1) END , 
	obter_orgao_cobranca_data(a.nr_sequencia,PKG_DATE_UTILS.get_DateTime(PKG_DATE_UTILS.END_OF(dt_referencia_w, 'MONTH', 0), coalesce(dt_referencia_w, PKG_DATE_UTILS.GET_TIME('00:00:00')))), 
	2 ie_ordem 
from	titulo_receber b, 
	cobranca a 
where	b.nr_titulo			= a.nr_titulo 
and	PKG_DATE_UTILS.start_of(a.dt_inclusao,'month',0)	= dt_referencia_w 
and	exists	(select	1 
			from	cobranca_alt_cobrador x 
			where	x.nr_seq_cobranca	= a.nr_sequencia 
			and	x.nr_seq_cobr_ant 	= nr_seq_cobrador_w 
			and	x.dt_alteracao		= 	(select	min(y.dt_alteracao) 
								from	cobranca_alt_cobrador y 
								where	y.nr_seq_cobranca	= x.nr_seq_cobranca) 
		) 

union all
 
select	'CN', 
	b.nr_titulo, 
	obter_nome_pf_pj(b.cd_pessoa_fisica,b.cd_cgc), 
	obter_pessoa_atendimento(b.nr_atendimento,'N'), 
	CASE WHEN obter_saldo_titulo_receber(b.nr_titulo,PKG_DATE_UTILS.start_of(a.dt_inclusao,'dd',0) - 1)=0 THEN b.vl_titulo  ELSE obter_saldo_titulo_receber(b.nr_titulo,PKG_DATE_UTILS.start_of(a.dt_inclusao,'dd',0)) END , 
	obter_orgao_cobranca_data(a.nr_sequencia, PKG_DATE_UTILS.get_DateTime(PKG_DATE_UTILS.END_OF(dt_referencia_w, 'MONTH', 0), coalesce(dt_referencia_w, PKG_DATE_UTILS.GET_TIME('00:00:00')))), 
	2 ie_ordem 
from	titulo_receber b, 
	cobranca a 
where	b.nr_titulo			= a.nr_titulo 
and	PKG_DATE_UTILS.start_of(a.dt_inclusao,'month',0) = dt_referencia_w 
and	a.nr_seq_cobrador		= nr_seq_cobrador_w 
and	not exists (select	1 
			from	cobranca_alt_cobrador x 
			where	x.nr_seq_cobranca	= a.nr_sequencia) 
and	ie_sem_resp_cobr_p = 'S' 
		 

union all
 
/* Cobranças que foram passadas */
 
select	'CP', 
	b.nr_titulo, 
	obter_nome_pf_pj(b.cd_pessoa_fisica,b.cd_cgc), 
	obter_pessoa_atendimento(b.nr_atendimento,'N'), 
	obter_saldo_titulo_receber(b.nr_titulo,PKG_DATE_UTILS.start_of(x.dt_alteracao,'dd',0) - 1), 
	obter_orgao_cobranca_data(a.nr_sequencia, PKG_DATE_UTILS.get_DateTime(PKG_DATE_UTILS.END_OF(dt_referencia_w, 'MONTH', 0), coalesce(dt_referencia_w, PKG_DATE_UTILS.GET_TIME('00:00:00')))), 
	3 ie_ordem 
from	titulo_receber b, 
	cobranca a, 
	cobranca_alt_cobrador x 
where	a.nr_titulo			= b.nr_titulo 
and	x.nr_seq_cobranca		= a.nr_sequencia 
and	PKG_DATE_UTILS.start_of(x.dt_alteracao,'month',0) = dt_referencia_w 
and	x.nr_seq_cobr_ant		= nr_seq_cobrador_w 
and	x.nr_seq_cobr_ant		<> x.nr_seq_cobr_novo 
and	(x.nr_seq_cobr_ant IS NOT NULL AND x.nr_seq_cobr_ant::text <> '') 

union all
 
/* Cobrancas que foram recebidas */
 
select	'CR', 
	b.nr_titulo, 
	obter_nome_pf_pj(b.cd_pessoa_fisica,b.cd_cgc), 
	obter_pessoa_atendimento(b.nr_atendimento,'N'), 
	obter_saldo_titulo_receber(b.nr_titulo,PKG_DATE_UTILS.start_of(x.dt_alteracao,'dd',0) - 1), 
	obter_orgao_cobranca_data(a.nr_sequencia, PKG_DATE_UTILS.get_DateTime(PKG_DATE_UTILS.END_OF(dt_referencia_w, 'MONTH', 0), coalesce(dt_referencia_w, PKG_DATE_UTILS.GET_TIME('00:00:00')))), 
	4 ie_ordem 
from	titulo_receber b, 
	cobranca a, 
	cobranca_alt_cobrador x 
where	a.nr_titulo			= b.nr_titulo	 
and	x.nr_seq_cobranca		= a.nr_sequencia 
and	PKG_DATE_UTILS.start_of(x.dt_alteracao,'month',0) = dt_referencia_w	 
and	x.nr_seq_cobr_novo		= nr_seq_cobrador_w 
and	x.nr_seq_cobr_ant		<> x.nr_seq_cobr_novo 
and	(x.nr_seq_cobr_ant IS NOT NULL AND x.nr_seq_cobr_ant::text <> '') 

union all
 
/* Recebidos do periodo */
 
select	'RDP', 
	b.nr_titulo, 
	obter_nome_pf_pj(b.cd_pessoa_fisica,b.cd_cgc), 
	obter_pessoa_atendimento(b.nr_atendimento,'N'), 
	coalesce(sum(coalesce(c.vl_recebido,0) + coalesce(c.vl_descontos,0) + coalesce(c.vl_glosa,0) + coalesce(c.vl_perdas,0)),0) vl, 
	obter_orgao_cobranca_data(a.nr_sequencia, PKG_DATE_UTILS.get_DateTime(PKG_DATE_UTILS.END_OF(dt_referencia_w, 'MONTH', 0), coalesce(dt_referencia_w, PKG_DATE_UTILS.GET_TIME('00:00:00')))), 
	5 ie_ordem 
from	titulo_receber_liq c, 
	titulo_receber b, 
	cobranca a 
where	a.nr_titulo	= b.nr_titulo 
and	b.nr_titulo	= c.nr_titulo 
and	PKG_DATE_UTILS.start_of(c.dt_recebimento,'month',0) = dt_referencia_w 
and	obter_cobrador_data(a.nr_sequencia,c.dt_recebimento,ie_sem_resp_cobr_p) = nr_seq_cobrador_w 
and	coalesce(obter_cobrador_data(a.nr_sequencia, PKG_DATE_UTILS.get_DateTime(PKG_DATE_UTILS.END_OF(PKG_DATE_UTILS.ADD_MONTH(dt_referencia_w,-1,0), 'MONTH', 0), coalesce(dt_referencia_w, PKG_DATE_UTILS.GET_TIME('00:00:00'))),ie_sem_resp_cobr_p),0) <> nr_seq_cobrador_w 
group by 
	b.nr_titulo, 
	obter_nome_pf_pj(b.cd_pessoa_fisica,b.cd_cgc), 
	obter_pessoa_atendimento(b.nr_atendimento,'N'), 
	obter_orgao_cobranca_data(a.nr_sequencia, PKG_DATE_UTILS.get_DateTime(PKG_DATE_UTILS.END_OF(dt_referencia_w, 'MONTH', 0), coalesce(dt_referencia_w, PKG_DATE_UTILS.GET_TIME('00:00:00')))) 
having	count(*) > 0 

union all
 
select	'RDP', 
	b.nr_titulo, 
	obter_nome_pf_pj(b.cd_pessoa_fisica,b.cd_cgc), 
	obter_pessoa_atendimento(b.nr_atendimento,'N'), 
	coalesce(sum(c.vl_alteracao),0) vl, 
	obter_orgao_cobranca_data(a.nr_sequencia, PKG_DATE_UTILS.get_DateTime(PKG_DATE_UTILS.END_OF(dt_referencia_w, 'MONTH', 0), coalesce(dt_referencia_w, PKG_DATE_UTILS.GET_TIME('00:00:00')))), 
	5 ie_ordem 
from	alteracao_valor c, 
	titulo_receber b, 
	cobranca a 
where	a.nr_titulo	= b.nr_titulo 
and	b.nr_titulo	= c.nr_titulo 
and	c.ie_aumenta_diminui = 'D' 
and	PKG_DATE_UTILS.start_of(c.dt_alteracao,'month',0) = dt_referencia_w 
and	obter_cobrador_data(a.nr_sequencia,c.dt_alteracao,ie_sem_resp_cobr_p) = nr_seq_cobrador_w 
and	coalesce(obter_cobrador_data(a.nr_sequencia, PKG_DATE_UTILS.get_DateTime(PKG_DATE_UTILS.END_OF(PKG_DATE_UTILS.ADD_MONTH(dt_referencia_w,-1,0), 'MONTH', 0), coalesce(dt_referencia_w, PKG_DATE_UTILS.GET_TIME('00:00:00'))), ie_sem_resp_cobr_p),0) <> nr_seq_cobrador_w 
group by 
	b.nr_titulo, 
	obter_nome_pf_pj(b.cd_pessoa_fisica,b.cd_cgc), 
	obter_pessoa_atendimento(b.nr_atendimento,'N'), 
	obter_orgao_cobranca_data(a.nr_sequencia, PKG_DATE_UTILS.get_DateTime(PKG_DATE_UTILS.END_OF(dt_referencia_w, 'MONTH', 0), coalesce(dt_referencia_w, PKG_DATE_UTILS.GET_TIME('00:00:00')))) 
having	count(*) > 0 

union all
 
/* Recebidos anterior */
 
select	'RA', 
	b.nr_titulo, 
	obter_nome_pf_pj(b.cd_pessoa_fisica,b.cd_cgc), 
	obter_pessoa_atendimento(b.nr_atendimento,'N'), 
	coalesce(sum(coalesce(c.vl_recebido,0) + coalesce(c.vl_descontos,0) + coalesce(c.vl_glosa,0) + coalesce(c.vl_perdas,0)),0) vl, 
	obter_orgao_cobranca_data(a.nr_sequencia, PKG_DATE_UTILS.get_DateTime(PKG_DATE_UTILS.END_OF(dt_referencia_w, 'MONTH', 0), coalesce(dt_referencia_w, PKG_DATE_UTILS.GET_TIME('00:00:00')))), 
	6 ie_ordem 
from	titulo_receber_liq c, 
	titulo_receber b, 
	cobranca a 
where	a.nr_titulo	= b.nr_titulo 
and	b.nr_titulo	= c.nr_titulo 
and	PKG_DATE_UTILS.start_of(c.dt_recebimento,'month',0) = dt_referencia_w 
and	obter_cobrador_data(a.nr_sequencia, PKG_DATE_UTILS.get_DateTime(PKG_DATE_UTILS.END_OF(PKG_DATE_UTILS.ADD_MONTH(dt_referencia_w,-1,0), 'MONTH', 0), coalesce(dt_referencia_w, PKG_DATE_UTILS.GET_TIME('00:00:00'))),ie_sem_resp_cobr_p) = nr_seq_cobrador_w 
group by 
	b.nr_titulo, 
	obter_nome_pf_pj(b.cd_pessoa_fisica,b.cd_cgc), 
	obter_pessoa_atendimento(b.nr_atendimento,'N'), 
	obter_orgao_cobranca_data(a.nr_sequencia, PKG_DATE_UTILS.get_DateTime(PKG_DATE_UTILS.END_OF(dt_referencia_w, 'MONTH', 0), coalesce(dt_referencia_w, PKG_DATE_UTILS.GET_TIME('00:00:00')))) 
having	count(*) > 0 

union all
 
select	'RA', 
	b.nr_titulo, 
	obter_nome_pf_pj(b.cd_pessoa_fisica,b.cd_cgc), 
	obter_pessoa_atendimento(b.nr_atendimento,'N'), 
	coalesce(sum(c.vl_alteracao),0) vl, 
	obter_orgao_cobranca_data(a.nr_sequencia, PKG_DATE_UTILS.get_DateTime(PKG_DATE_UTILS.END_OF(dt_referencia_w, 'MONTH', 0), coalesce(dt_referencia_w, PKG_DATE_UTILS.GET_TIME('00:00:00')))), 
	6 ie_ordem 
from	alteracao_valor c, 
	titulo_receber b, 
	cobranca a 
where	a.nr_titulo	= b.nr_titulo 
and	b.nr_titulo	= c.nr_titulo 
and	c.ie_aumenta_diminui = 'D' 
and	PKG_DATE_UTILS.start_of(c.dt_alteracao,'month',0) = dt_referencia_w 
and	obter_cobrador_data(a.nr_sequencia, PKG_DATE_UTILS.get_DateTime(PKG_DATE_UTILS.END_OF(PKG_DATE_UTILS.ADD_MONTH(dt_referencia_w,-1,0), 'MONTH', 0), coalesce(dt_referencia_w, PKG_DATE_UTILS.GET_TIME('00:00:00'))),ie_sem_resp_cobr_p) = nr_seq_cobrador_w 
group by 
	b.nr_titulo, 
	obter_nome_pf_pj(b.cd_pessoa_fisica,b.cd_cgc), 
	obter_pessoa_atendimento(b.nr_atendimento,'N'), 
	obter_orgao_cobranca_data(a.nr_sequencia, PKG_DATE_UTILS.get_DateTime(PKG_DATE_UTILS.END_OF(dt_referencia_w, 'MONTH', 0), coalesce(dt_referencia_w, PKG_DATE_UTILS.GET_TIME('00:00:00')))) 
having	count(*) > 0 

union all
 
/* Recebidos no periodo */
 
select	'RNP', 
	b.nr_titulo, 
	obter_nome_pf_pj(b.cd_pessoa_fisica,b.cd_cgc), 
	obter_pessoa_atendimento(b.nr_atendimento,'N'), 
	coalesce(sum(coalesce(c.vl_recebido,0) + coalesce(c.vl_descontos,0) + coalesce(c.vl_glosa,0) + coalesce(c.vl_perdas,0)),0) vl, 
	obter_orgao_cobranca_data(a.nr_sequencia, PKG_DATE_UTILS.get_DateTime(PKG_DATE_UTILS.END_OF(dt_referencia_w, 'MONTH', 0), coalesce(dt_referencia_w, PKG_DATE_UTILS.GET_TIME('00:00:00')))), 
	7 ie_ordem 
from	titulo_receber_liq c, 
	titulo_receber b, 
	cobranca a 
where	a.nr_titulo	= b.nr_titulo 
and	b.nr_titulo	= c.nr_titulo 
and	PKG_DATE_UTILS.start_of(c.dt_recebimento,'month',0) = dt_referencia_w 
and	obter_cobrador_data(a.nr_sequencia,c.dt_recebimento,ie_sem_resp_cobr_p) = nr_seq_cobrador_w 
group by 
	b.nr_titulo, 
	obter_nome_pf_pj(b.cd_pessoa_fisica,b.cd_cgc), 
	obter_pessoa_atendimento(b.nr_atendimento,'N'), 
	obter_orgao_cobranca_data(a.nr_sequencia, PKG_DATE_UTILS.get_DateTime(PKG_DATE_UTILS.END_OF(dt_referencia_w, 'MONTH', 0), coalesce(dt_referencia_w, PKG_DATE_UTILS.GET_TIME('00:00:00')))) 
having	count(*) > 0 

union all
 
select	'RNP', 
	b.nr_titulo, 
	obter_nome_pf_pj(b.cd_pessoa_fisica,b.cd_cgc), 
	obter_pessoa_atendimento(b.nr_atendimento,'N'), 
	coalesce(sum(c.vl_alteracao),0) vl, 
	obter_orgao_cobranca_data(a.nr_sequencia, PKG_DATE_UTILS.get_DateTime(PKG_DATE_UTILS.END_OF(dt_referencia_w, 'MONTH', 0), coalesce(dt_referencia_w, PKG_DATE_UTILS.GET_TIME('00:00:00')))), 
	7 ie_ordem 
from	alteracao_valor c, 
	titulo_receber b, 
	cobranca a 
where	a.nr_titulo	= b.nr_titulo 
and	b.nr_titulo	= c.nr_titulo 
and	c.ie_aumenta_diminui = 'D' 
and	PKG_DATE_UTILS.start_of(c.dt_alteracao,'month',0)	= dt_referencia_w 
and	obter_cobrador_data(a.nr_sequencia,c.dt_alteracao,ie_sem_resp_cobr_p) = nr_seq_cobrador_w 
group by 
	b.nr_titulo, 
	obter_nome_pf_pj(b.cd_pessoa_fisica,b.cd_cgc), 
	obter_pessoa_atendimento(b.nr_atendimento,'N'), 
	obter_orgao_cobranca_data(a.nr_sequencia, PKG_DATE_UTILS.get_DateTime(PKG_DATE_UTILS.END_OF(dt_referencia_w, 'MONTH', 0), coalesce(dt_referencia_w, PKG_DATE_UTILS.GET_TIME('00:00:00')))) 
having	count(*) > 0 

union all
 
select	distinct 
	'FINAL', 
	nr_titulo, 
	obter_nome_pf_pj(cd_pessoa_fisica,cd_cgc), 
	obter_pessoa_atendimento(nr_atendimento,'N'), 
	1 vl, 
	nr_seq_orgao, 
	8 ie_ordem 
from	(/* Saldo anterior */
 
	select	b.nr_titulo, 
		b.cd_pessoa_fisica, 
		b.cd_cgc, 
		b.nr_atendimento, 
		obter_orgao_cobranca_data(a.nr_sequencia, PKG_DATE_UTILS.get_DateTime(PKG_DATE_UTILS.END_OF(dt_referencia_w, 'MONTH', 0), coalesce(dt_referencia_w, PKG_DATE_UTILS.GET_TIME('00:00:00')))) nr_seq_orgao 
	from	titulo_receber b, 
		cobranca a 
	where	b.nr_titulo		= a.nr_titulo 
	and	obter_saldo_titulo_receber(b.nr_titulo, PKG_DATE_UTILS.get_DateTime(PKG_DATE_UTILS.END_OF(PKG_DATE_UTILS.ADD_MONTH(dt_referencia_w,-1,0), 'MONTH', 0), coalesce(dt_referencia_w, PKG_DATE_UTILS.GET_TIME('00:00:00')))) > 0 
	and	obter_cobrador_data(a.nr_sequencia, PKG_DATE_UTILS.get_DateTime(PKG_DATE_UTILS.END_OF(PKG_DATE_UTILS.ADD_MONTH(dt_referencia_w,-1,0), 'MONTH', 0), coalesce(dt_referencia_w, PKG_DATE_UTILS.GET_TIME('00:00:00'))) ,ie_sem_resp_cobr_p) = nr_seq_cobrador_w 
	
union all
 
	/* Cobranças novas */
 
	select	b.nr_titulo, 
		b.cd_pessoa_fisica, 
		b.cd_cgc, 
		b.nr_atendimento, 
		obter_orgao_cobranca_data(a.nr_sequencia, PKG_DATE_UTILS.get_DateTime(PKG_DATE_UTILS.END_OF(dt_referencia_w, 'MONTH', 0), coalesce(dt_referencia_w, PKG_DATE_UTILS.GET_TIME('00:00:00')))) nr_seq_orgao 
	from	titulo_receber b, 
		cobranca a, 
		cobranca_alt_cobrador x 
	where	b.nr_titulo			= a.nr_titulo 
	and	x.nr_seq_cobranca		= a.nr_sequencia 
	and	PKG_DATE_UTILS.start_of(x.dt_alteracao,'month',0)	= dt_referencia_w 
	and	x.nr_seq_cobr_novo		= nr_seq_cobrador_w 
	and	coalesce(x.nr_seq_cobr_ant::text, '') = '' 
	
union all
 
	select	b.nr_titulo, 
		b.cd_pessoa_fisica, 
		b.cd_cgc, 
		b.nr_atendimento, 
		obter_orgao_cobranca_data(a.nr_sequencia, PKG_DATE_UTILS.get_DateTime(PKG_DATE_UTILS.END_OF(dt_referencia_w, 'MONTH', 0), coalesce(dt_referencia_w, PKG_DATE_UTILS.GET_TIME('00:00:00')))) nr_seq_orgao 
	from	titulo_receber b, 
		cobranca a 
	where	b.nr_titulo			= a.nr_titulo 
	and	PKG_DATE_UTILS.start_of(a.dt_inclusao,'month',0)	= dt_referencia_w 
	and	obter_cobrador_data(a.nr_sequencia,a.dt_inclusao,ie_sem_resp_cobr_p)	= nr_seq_cobrador_w 
	and	exists	(select	1 
			from	cobranca_alt_cobrador x 
			where	x.nr_seq_cobranca	= a.nr_sequencia 
			and	x.nr_seq_cobr_ant 	= nr_seq_cobrador_w 
			and	x.dt_alteracao		= 	(select	min(y.dt_alteracao) 
								from	cobranca_alt_cobrador y 
								where	y.nr_seq_cobranca	= x.nr_seq_cobranca) 
		) 
	
union all
 
	select	b.nr_titulo, 
		b.cd_pessoa_fisica, 
		b.cd_cgc, 
		b.nr_atendimento, 
		obter_orgao_cobranca_data(a.nr_sequencia, PKG_DATE_UTILS.get_DateTime(PKG_DATE_UTILS.END_OF(dt_referencia_w, 'MONTH', 0), coalesce(dt_referencia_w, PKG_DATE_UTILS.GET_TIME('00:00:00')))) nr_seq_orgao 
	from	titulo_receber b, 
		cobranca a 
	where	b.nr_titulo			= a.nr_titulo 
	and	PKG_DATE_UTILS.start_of(a.dt_inclusao,'month',0)	= dt_referencia_w 
	and	a.nr_seq_cobrador		= nr_seq_cobrador_w 
	and	not exists (select	1 
				from	cobranca_alt_cobrador x 
				where	x.nr_seq_cobranca	= a.nr_sequencia) 
	and	ie_sem_resp_cobr_p = 'S' 
	
union all
 
	/* Cobranças que foram passadas */
 
	select	b.nr_titulo, 
		b.cd_pessoa_fisica, 
		b.cd_cgc, 
		b.nr_atendimento, 
		obter_orgao_cobranca_data(a.nr_sequencia, PKG_DATE_UTILS.get_DateTime(PKG_DATE_UTILS.END_OF(dt_referencia_w, 'MONTH', 0), coalesce(dt_referencia_w, PKG_DATE_UTILS.GET_TIME('00:00:00')))) nr_seq_orgao 
	from	titulo_receber b, 
		cobranca a, 
		cobranca_alt_cobrador x 
	where	a.nr_titulo	= b.nr_titulo 
	and	x.nr_seq_cobranca		= a.nr_sequencia 
	and	PKG_DATE_UTILS.start_of(x.dt_alteracao,'month',0)	= dt_referencia_w 
	and	x.nr_seq_cobr_ant		= nr_seq_cobrador_w 
	and	coalesce(x.nr_seq_cobr_novo,0)	<> nr_seq_cobrador_w 
	
union all
 
	/* Cobrancas que foram recebidas */
 
	select	b.nr_titulo, 
		b.cd_pessoa_fisica, 
		b.cd_cgc, 
		b.nr_atendimento, 
		obter_orgao_cobranca_data(a.nr_sequencia, PKG_DATE_UTILS.get_DateTime(PKG_DATE_UTILS.END_OF(dt_referencia_w, 'MONTH', 0), coalesce(dt_referencia_w, PKG_DATE_UTILS.GET_TIME('00:00:00')))) nr_seq_orgao 
	from	titulo_receber b, 
		cobranca a, 
		cobranca_alt_cobrador x 
	where	a.nr_titulo	= b.nr_titulo	 
	and	x.nr_seq_cobranca		= a.nr_sequencia 
	and	PKG_DATE_UTILS.start_of(x.dt_alteracao,'month',0)	= dt_referencia_w	 
	and	x.nr_seq_cobr_novo		= nr_seq_cobrador_w 
	and	coalesce(x.nr_seq_cobr_ant,0)	<> nr_seq_cobrador_w 
	
union all
 
	/* Recebidos */
 
	select	b.nr_titulo, 
		b.cd_pessoa_fisica, 
		b.cd_cgc, 
		b.nr_atendimento, 
		obter_orgao_cobranca_data(a.nr_sequencia, PKG_DATE_UTILS.get_DateTime(PKG_DATE_UTILS.END_OF(dt_referencia_w, 'MONTH', 0), coalesce(dt_referencia_w, PKG_DATE_UTILS.GET_TIME('00:00:00')))) nr_seq_orgao 
	from	titulo_receber_liq c, 
		titulo_receber b, 
		cobranca a 
	where	a.nr_titulo	= b.nr_titulo 
	and	b.nr_titulo	= c.nr_titulo 
	and	PKG_DATE_UTILS.start_of(c.dt_recebimento,'month',0) = dt_referencia_w 
	and	obter_cobrador_data(a.nr_sequencia,c.dt_recebimento,ie_sem_resp_cobr_p) = nr_seq_cobrador_w 
	
union all
 
	select	b.nr_titulo, 
		b.cd_pessoa_fisica, 
		b.cd_cgc, 
		b.nr_atendimento, 
		obter_orgao_cobranca_data(a.nr_sequencia, PKG_DATE_UTILS.get_DateTime(PKG_DATE_UTILS.END_OF(dt_referencia_w, 'MONTH', 0), coalesce(dt_referencia_w, PKG_DATE_UTILS.GET_TIME('00:00:00')))) nr_seq_orgao 
	from	alteracao_valor c, 
		titulo_receber b, 
		cobranca a 
	where	a.nr_titulo	= b.nr_titulo 
	and	b.nr_titulo	= c.nr_titulo 
	and	PKG_DATE_UTILS.start_of(c.dt_alteracao,'month',0)	= dt_referencia_w 
	and	obter_cobrador_data(a.nr_sequencia,c.dt_alteracao,ie_sem_resp_cobr_p) = nr_seq_cobrador_w 
	) alias309 
order by ie_ordem;

 

BEGIN 
 
dt_referencia_w	:= PKG_DATE_UTILS.start_of(dt_referencia_p,'month',0);
 
delete	from w_relat_efic_cobr 
where	nm_usuario = nm_usuario_p;
 
/* Cursor cobrador */
 
open c01;
loop 
fetch c01 into 
	nr_seq_cobrador_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
 
	open c03;
	loop 
	fetch c03 into 
		ie_tipo_valor_w, 
		nr_titulo_w, 
		ds_pessoa_w, 
		nm_paciente_w, 
		vl_referencia_w, 
		nr_seq_orgao_cobranca_w, 
		ie_ordem_w;
	EXIT WHEN NOT FOUND; /* apply on c03 */
 
		if (vl_referencia_w <> 0) then 
				 
			vl_saldo_carteira_w		:= 0;
			vl_saldo_cobranca_w		:= 0;
			vl_entrada_cobranca_w		:= 0;
			vl_transf_entr_cobr_w		:= 0;
			vl_transf_saida_cobr_w		:= 0;
			pr_meta_cobrador_w		:= 0;
			vl_meta_cobranca_w		:= 0;
			vl_recebido_do_periodo_w	:= 0;
			vl_recebido_no_periodo_w	:= 0;
			vl_recebido_ant_w		:= 0;
			pr_eficiencia_cobr_w		:= null;
			vl_saldo_atual_carteira_w	:= 0;
 
			select	coalesce(max(pr_meta),0) 
			into STRICT	pr_meta_cobrador_w 
			from	cobrador_meta a 
			where	nr_seq_cobrador				= nr_seq_cobrador_w 
			and	PKG_DATE_UTILS.start_of(dt_mesano_referencia,'month',0)	= dt_referencia_w;
 
			if (ie_tipo_valor_w = 'SA') then 
				vl_saldo_cobranca_w	:= vl_referencia_w;
			elsif (ie_tipo_valor_w = 'CN') then 
				vl_entrada_cobranca_w	:= vl_referencia_w;
			elsif (ie_tipo_valor_w = 'CP') then 
				vl_transf_saida_cobr_w	:= vl_referencia_w;
			elsif (ie_tipo_valor_w = 'CR') then 
				vl_transf_entr_cobr_w	:= vl_referencia_w;
			elsif (ie_tipo_valor_w = 'RDP') then 
				vl_recebido_do_periodo_w := vl_referencia_w;
			elsif (ie_tipo_valor_w = 'RA') then 
				vl_recebido_ant_w	 := vl_referencia_w;
			elsif (ie_tipo_valor_w = 'RNP') then 
				vl_recebido_no_periodo_w := vl_referencia_w;
			elsif (ie_tipo_valor_w = 'FINAL') then 
 
				select	coalesce(sum(vl_saldo_cobranca),0), 
					coalesce(sum(vl_entrada_cobranca),0), 
					coalesce(sum(vl_transf_entr_cobr),0), 
					coalesce(sum(vl_transf_saida_cobr),0), 
					coalesce(sum(vl_recebido_no_periodo),0) 
				into STRICT	vl_saldo_cobranca_w, 
					vl_entrada_cobranca_w, 
					vl_transf_entr_cobr_w, 
					vl_transf_saida_cobr_w, 
					vl_recebido_no_periodo_w 
				from	w_relat_efic_cobr 
				where	nr_titulo		= nr_titulo_w 
				and	nr_seq_cobrador		= nr_seq_cobrador_w 
				and	nm_usuario		= nm_usuario_p;
 
				vl_saldo_carteira_w := vl_saldo_cobranca_w + vl_entrada_cobranca_w + vl_transf_entr_cobr_w - vl_transf_saida_cobr_w;
		 
				vl_meta_cobranca_w	:= vl_saldo_carteira_w * dividir(pr_meta_cobrador_w,100);
	 
				pr_eficiencia_cobr_w	:= dividir(vl_recebido_no_periodo_w,vl_saldo_carteira_w) * 100;
		 
				vl_saldo_atual_carteira_w	:= vl_saldo_carteira_w - vl_recebido_no_periodo_w;
 
 
				vl_saldo_cobranca_w		:= 0;
				vl_entrada_cobranca_w		:= 0;
				vl_transf_entr_cobr_w		:= 0;
				vl_transf_saida_cobr_w		:= 0;
				vl_recebido_no_periodo_w	:= 0;	
			end if;
 
			insert	into	w_relat_efic_cobr(nr_sequencia, 
				dt_atualizacao, 
				nm_usuario, 
				dt_atualizacao_nrec, 
				nm_usuario_nrec, 
				nr_seq_cobrador, 
				nr_seq_orgao_cobranca, 
				vl_saldo_atual_cobr, 
				vl_saldo_cobranca, 
				vl_entrada_cobranca, 
				vl_transf_entr_cobr, 
				vl_transf_saida_cobr, 
				pr_meta_cobrador, 
				vl_meta_cobranca, 
				vl_recebido_do_periodo, 
				vl_recebido_no_periodo, 
				vl_recebido_ant, 
				pr_eficiencia_cobr, 
				vl_saldo_atual_carteira, 
				nr_titulo, 
				ds_pessoa, 
				nm_paciente) 
			values (nextval('w_relat_efic_cobr_seq'), 
				clock_timestamp(), 
				nm_usuario_p, 
				clock_timestamp(), 
				nm_usuario_p, 
				nr_seq_cobrador_w, 
				CASE WHEN nr_seq_orgao_cobranca_w=0 THEN null  ELSE nr_seq_orgao_cobranca_w END , 
				vl_saldo_carteira_w, 
				vl_saldo_cobranca_w, 
				vl_entrada_cobranca_w, 
				vl_transf_entr_cobr_w, 
				vl_transf_saida_cobr_w, 
				pr_meta_cobrador_w, 
				vl_meta_cobranca_w, 
				vl_recebido_do_periodo_w, 
				vl_recebido_no_periodo_w, 
				vl_recebido_ant_w, 
				pr_eficiencia_cobr_w, 
				vl_saldo_atual_carteira_w, 
				nr_titulo_w, 
				ds_pessoa_w, 
				nm_paciente_w);
		end if;
	end loop;
	close c03;
end loop;
close c01;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_w_relat_efic_cobr ( dt_referencia_p timestamp, nr_seq_cobrador_p bigint, nm_usuario_p text, ie_analitico_p text, ie_sem_resp_cobr_p text) FROM PUBLIC;

