-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE define_taxa_porte ( cd_estabelecimento_p bigint, cd_convenio_p bigint, cd_categoria_p text, nr_porte_anestesico_p bigint, cd_setor_atendimento_p bigint, ie_tipo_atendimento_p bigint, cd_taxa_cirurgia_p INOUT bigint, ie_origem_proced_p INOUT bigint, cd_tipo_acomodacao_p bigint, nr_seq_proc_interno_p INOUT bigint, qt_procedimento_p INOUT bigint) AS $body$
DECLARE


cd_setor_atendimento_w		integer;
ie_tipo_atendimento_w		smallint;
cd_taxa_cirurgia_w		integer;
ie_origem_proced_w		bigint;
ie_prioridade_w			smallint;
cd_taxa_cirurgia_w1		integer;
ie_origem_proced_w1		bigint;
cd_tipo_acomodacao_w		smallint;
nr_seq_proc_interno_w		bigint;
qt_procedimento_w		bigint;
qt_procedimento_w1		bigint;

C01 CURSOR FOR
	SELECT	cd_setor_atendimento,
			ie_tipo_atendimento,
			cd_taxa_cirurgia,
			ie_origem_proced,
			1 ie_prioridade,
			cd_tipo_acomodacao,
			nr_seq_proc_interno,
			qt_procedimento
	from		convenio_taxa_cirurgia
	where		cd_estabelecimento	= cd_estabelecimento_p
	and		cd_convenio			= cd_convenio_p
	and		cd_categoria		= cd_categoria_p
	and		nr_porte_anestesico	= nr_porte_anestesico_p
	and		cd_setor_atendimento	= cd_setor_atendimento_p
	and		ie_tipo_atendimento	= ie_tipo_atendimento_p
	and		coalesce(cd_tipo_acomodacao::text, '') = ''
	
union

	SELECT	cd_setor_atendimento,
			ie_tipo_atendimento,
			cd_taxa_cirurgia,
			ie_origem_proced,
			2 ie_prioridade,
			cd_tipo_acomodacao,
			nr_seq_proc_interno,
			qt_procedimento
	from		convenio_taxa_cirurgia
	where		cd_estabelecimento	= cd_estabelecimento_p
	and		cd_convenio			= cd_convenio_p
	and		cd_categoria		= cd_categoria_p
	and		nr_porte_anestesico	= nr_porte_anestesico_p
	and		cd_setor_atendimento	= cd_setor_atendimento_p
	and		coalesce(ie_tipo_atendimento::text, '') = ''
	and		coalesce(cd_tipo_acomodacao::text, '') = ''
	
union

	select	cd_setor_atendimento,
			ie_tipo_atendimento,
			cd_taxa_cirurgia,
			ie_origem_proced,
			3 ie_prioridade,
			cd_tipo_acomodacao,
			nr_seq_proc_interno,
			qt_procedimento
	from		convenio_taxa_cirurgia
	where		cd_estabelecimento	= cd_estabelecimento_p
	and		cd_convenio			= cd_convenio_p
	and		cd_categoria		= cd_categoria_p
	and		nr_porte_anestesico	= nr_porte_anestesico_p
	and		ie_tipo_atendimento	= ie_tipo_atendimento_p
	and		coalesce(cd_setor_atendimento::text, '') = ''
	and		coalesce(cd_tipo_acomodacao::text, '') = ''
	
union

	select	cd_setor_atendimento,
			ie_tipo_atendimento,
			cd_taxa_cirurgia,
			ie_origem_proced,
			4 ie_prioridade,
			cd_tipo_acomodacao,
			nr_seq_proc_interno,
			qt_procedimento
	from		convenio_taxa_cirurgia
	where		cd_estabelecimento	= cd_estabelecimento_p
	and		cd_convenio			= cd_convenio_p
	and		cd_categoria		= cd_categoria_p
	and		nr_porte_anestesico	= nr_porte_anestesico_p
	and		coalesce(ie_tipo_atendimento::text, '') = ''
	and		coalesce(cd_setor_atendimento::text, '') = ''
	and		coalesce(cd_tipo_acomodacao::text, '') = ''
	
union

	select	cd_setor_atendimento,
			ie_tipo_atendimento,
			cd_taxa_cirurgia,
			ie_origem_proced,
			5 ie_prioridade,
			cd_tipo_acomodacao,
			nr_seq_proc_interno,
			qt_procedimento
	from		convenio_taxa_cirurgia
	where		cd_estabelecimento	= cd_estabelecimento_p
	and		cd_convenio		= cd_convenio_p
	and		cd_categoria		= cd_categoria_p
	and		nr_porte_anestesico	= nr_porte_anestesico_p
	and		coalesce(cd_setor_atendimento, coalesce(cd_setor_atendimento_p,0))	= coalesce(cd_setor_atendimento_p,0)
	and		coalesce(ie_tipo_atendimento, coalesce(ie_tipo_atendimento_p,0))		= coalesce(ie_tipo_atendimento_p,0)
	and		coalesce(cd_tipo_acomodacao, coalesce(cd_tipo_acomodacao_p,0))		= coalesce(cd_tipo_acomodacao_p,0)
	and		cd_tipo_acomodacao	is  not null
	order by 5;


BEGIN
cd_taxa_cirurgia_w1 := null;
ie_origem_proced_w1 := null;

	OPEN C01;
	LOOP
	FETCH C01 into
		cd_setor_atendimento_w,
		ie_tipo_atendimento_w,
		cd_taxa_cirurgia_w,
		ie_origem_proced_w,
		ie_prioridade_w,
		cd_tipo_acomodacao_w,
		nr_seq_proc_interno_w,
		qt_procedimento_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		if	coalesce(cd_taxa_cirurgia_w1::text, '') = '' then
			begin
			cd_taxa_cirurgia_w1 := cd_taxa_cirurgia_w;
			ie_origem_proced_w1 := ie_origem_proced_w;
			qt_procedimento_w1  := qt_procedimento_w;

			if (coalesce(nr_seq_proc_interno_w,0) > 0) then
			SELECT * FROM obter_proc_tab_interno_conv(	nr_seq_proc_interno_w, cd_estabelecimento_p, cd_convenio_p, cd_categoria_p, null, cd_setor_atendimento_p, cd_taxa_cirurgia_w1, ie_origem_proced_w1, null, clock_timestamp(), null, null, null, null, null, null, null, null) INTO STRICT cd_taxa_cirurgia_w1, ie_origem_proced_w1;
			nr_seq_proc_interno_p := nr_seq_proc_interno_w;
			end if;

			end;
		end if;
		end;
	END LOOP;
	CLOSE C01;

cd_taxa_cirurgia_p := cd_taxa_cirurgia_w1;
ie_origem_proced_p := ie_origem_proced_w1;
qt_procedimento_p  := qt_procedimento_w1;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE define_taxa_porte ( cd_estabelecimento_p bigint, cd_convenio_p bigint, cd_categoria_p text, nr_porte_anestesico_p bigint, cd_setor_atendimento_p bigint, ie_tipo_atendimento_p bigint, cd_taxa_cirurgia_p INOUT bigint, ie_origem_proced_p INOUT bigint, cd_tipo_acomodacao_p bigint, nr_seq_proc_interno_p INOUT bigint, qt_procedimento_p INOUT bigint) FROM PUBLIC;

