-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE inserir_proc_conta ( nr_atendimento_p bigint, nr_doc_convenio_p text, cd_procedimento_p bigint, qt_procedimento_p bigint, dt_procedimento_p text, nr_crm_medico_p text, cd_setor_atendimento_p bigint, nm_usuario_p text, ie_origem_proced_p bigint) AS $body$
DECLARE

 
 
nr_seq_atepacu_w	bigint;
dt_entrada_unidade_w	timestamp;
cd_medico_req_w		varchar(10);
cd_categoria_w		varchar(10);
nr_sequencia_w		bigint;
cd_convenio_w		bigint;
ie_origem_proced_w	bigint;
qt_existe_proc_w	bigint;
cd_estabelecimento_w	smallint;
ie_tipo_atendimento_w	smallint;
ds_retorno_w		varchar(4000);
cd_cgc_w		varchar(14);


BEGIN 
 
nr_seq_atepacu_w:= 0;
 
begin 
select	nr_seq_interno, 
	dt_entrada_unidade 
into STRICT	nr_seq_atepacu_w, 
	dt_entrada_unidade_w 
from 	atend_paciente_unidade 
where 	cd_setor_atendimento = cd_setor_atendimento_p 
and 	nr_atendimento = nr_atendimento_p 
and 	to_date(dt_procedimento_p,'dd/mm/yyyy') between dt_entrada_unidade and coalesce(dt_saida_unidade, clock_timestamp());
exception 
when others then 
	nr_seq_atepacu_w:= 0;
end;
 
begin 
select	max(cd_pessoa_fisica) 
into STRICT	cd_medico_req_w 
from 	medico 
where 	nr_crm = nr_crm_medico_p;
exception 
when others then 
	cd_medico_req_w:= 0;
end;
 
select 	nextval('procedimento_paciente_seq') 
into STRICT	nr_sequencia_w
;
 
select 	obter_convenio_atendimento(nr_atendimento_p) 
into STRICT	cd_convenio_w
;
 
select 	obter_categoria_atendimento(nr_atendimento_p) 
into STRICT	cd_categoria_w
;
 
if (nr_seq_atepacu_w = 0) then 
	begin 
	/* Rafael em 3/4/8 OS80263, substituido pela linha abaixo; 
	GERAR_PASSAGEM_SETOR_ATEND(nr_atendimento_p,cd_setor_atendimento_p,sysdate,'S',nm_usuario_p);*/
 
	CALL GERAR_PASSAGEM_SETOR_ATEND(nr_atendimento_p,cd_setor_atendimento_p,to_date(dt_procedimento_p,'dd/mm/yyyy hh24:mi:ss'),'S',nm_usuario_p);
	 
	select	coalesce(max(nr_seq_interno),0)		 
	into STRICT	nr_seq_atepacu_w		 
	from	atend_paciente_unidade 
	where	nr_atendimento		= nr_atendimento_p 
	and	cd_setor_atendimento	= cd_setor_atendimento_p;
 
	select	dt_entrada_unidade 
	into STRICT	dt_entrada_unidade_w 
	from	atend_paciente_unidade 
	where	nr_seq_interno = nr_seq_atepacu_w;
	end;
end if;
 
ie_origem_proced_w	:= coalesce(ie_origem_proced_p,1);
 
select	count(*) 
into STRICT	qt_existe_proc_w 
from	procedimento 
where	cd_procedimento		= cd_procedimento_p 
and	ie_origem_proced	= ie_origem_proced_w;
 
select	max(cd_estabelecimento), 
	max(ie_tipo_atendimento) 
into STRICT	cd_estabelecimento_w, 
	ie_tipo_atendimento_w 
from	atendimento_paciente 
where	nr_atendimento	= nr_atendimento_p;
 
SELECT * FROM consiste_medico_executor(cd_estabelecimento_w, cd_convenio_w, cd_setor_atendimento_p, cd_procedimento_p, ie_origem_proced_w, ie_tipo_atendimento_w, null, null, ds_retorno_w, cd_cgc_w, ds_retorno_w, ds_retorno_w, null, clock_timestamp(), null, 'N', null, null) INTO STRICT ds_retorno_w, cd_cgc_w, ds_retorno_w, ds_retorno_w;
 
if (qt_existe_proc_w > 0) then 
 
	insert into procedimento_paciente(nr_sequencia, 
			nr_atendimento, 
		 	dt_entrada_unidade, 
			cd_procedimento, 
			dt_procedimento, 
			qt_procedimento, 
			dt_atualizacao, 
			nm_usuario, 
			cd_setor_atendimento, 
			ie_origem_proced, 
			nr_seq_atepacu, 
			cd_medico_req, 
			nr_doc_convenio, 
			cd_convenio, 
			cd_categoria, 
			cd_cgc_prestador, 
			ie_auditoria) 
		values (nr_sequencia_w, 
			nr_atendimento_p, 
			dt_entrada_unidade_w, 
			cd_procedimento_p, 
			to_date(dt_procedimento_p,'dd/mm/yyyy hh24:mi:ss'), 
			qt_procedimento_p, 
			clock_timestamp(), 
			nm_usuario_p, 
			cd_setor_atendimento_p, 
			ie_origem_proced_w, 
			nr_seq_atepacu_w, 
			cd_medico_req_w, 
			nr_doc_convenio_p, 
			cd_convenio_w, 
			cd_categoria_w, 
			cd_cgc_w, 
			'N');
	commit;	
	 
	CALL Atualiza_preco_procedimento(nr_sequencia_w,cd_convenio_w, nm_usuario_p);
	 
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE inserir_proc_conta ( nr_atendimento_p bigint, nr_doc_convenio_p text, cd_procedimento_p bigint, qt_procedimento_p bigint, dt_procedimento_p text, nr_crm_medico_p text, cd_setor_atendimento_p bigint, nm_usuario_p text, ie_origem_proced_p bigint) FROM PUBLIC;

