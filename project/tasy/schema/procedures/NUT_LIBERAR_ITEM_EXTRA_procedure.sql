-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE nut_liberar_item_extra (nr_sequencia_p bigint, ie_receita_p text, nm_usuario_p text) AS $body$
DECLARE


ie_tipo_requisicao_w		varchar(1);
nr_seq_receita_w		bigint;
nr_seq_gen_alim_w		bigint;
cd_material_w			integer;
nr_atendimento_w		bigint;
nr_prescricao_w			bigint;
cd_convenio_w			integer;
cd_categoria_w			varchar(10);
nr_seq_atepacu_w		bigint;
cd_setor_atendimento_w		integer;
dt_entrada_unidade_w		timestamp;
nr_sequencia_w			bigint;
cd_unidade_medida_w		varchar(30);
cd_estab_w			integer;
cd_local_estoque_w		bigint;
ie_gerar_itens_conta_w		varchar(2);

C01 CURSOR FOR
	SELECT	cd_material
	from	nut_receita_comp a,
		nut_genero_alim b
	where	a.nr_seq_receita = nr_seq_receita_w
	and	a.nr_seq_gen_alim = b.nr_sequencia;


BEGIN

ie_gerar_itens_conta_w	:= Obter_Valor_Param_Usuario(1003, 110, Obter_Perfil_Ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento);

if (nr_sequencia_p IS NOT NULL AND nr_sequencia_p::text <> '') then

	update 	nut_item_extra
	set	dt_liberacao = clock_timestamp(),
		nm_usuario_liberacao = nm_usuario_p
	where	nr_sequencia = nr_sequencia_p;

	if (ie_receita_p = 'S') then 	
		insert 	into nut_pac_opcao_rec(
				nr_sequencia,
				nr_seq_composicao,
				nr_seq_receita,
				dt_atualizacao,
				nm_usuario,
				nr_seq_servico_dia,
				dt_liberacao,
				ie_tipo_cardapio)
			SELECT	nextval('nut_pac_opcao_rec_seq'),
				nr_seq_composicao,
				nr_seq_receita,
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_servico,
				clock_timestamp(),
				'IE'
			from	nut_item_extra
			where	nr_sequencia = nr_sequencia_p
			and	ie_tipo_requisicao = 'A'
			and 	ie_tipo_pessoa = 'P';		
	end if;
	commit;
	
	if (ie_gerar_itens_conta_w = 'S') then
		begin
		
		select	max(ie_tipo_requisicao),
			max(coalesce(nr_seq_receita,0)),
			max(coalesce(nr_seq_gen_alim,0))
		into STRICT	ie_tipo_requisicao_w,	
			nr_seq_receita_w,
			nr_seq_gen_alim_w
		from	nut_item_extra
		where	nr_sequencia = nr_sequencia_p
		and (ie_tipo_item_extra <> 'T' or coalesce(ie_tipo_item_extra::text, '') = '');

		if (ie_tipo_requisicao_w = 'A') then
			begin
			
			select	max(coalesce(nr_atendimento,0))
			into STRICT	nr_atendimento_w
			from	nut_atend_serv_dia a,
				nut_item_extra b
			where	a.nr_sequencia = b.nr_seq_servico
			and	b.nr_sequencia = nr_sequencia_p;
		
			select	max(coalesce(cd_estabelecimento,0))
			into STRICT	cd_estab_w
			from	atendimento_paciente
			where	nr_atendimento = nr_atendimento_w;
			
			if (nr_atendimento_w <> 0) then
				begin
				
				nr_seq_atepacu_w	:= obter_atepacu_paciente(nr_atendimento_w, 'A');
				cd_convenio_w		:= obter_convenio_atendimento(nr_atendimento_w);
				cd_categoria_w		:= obter_categoria_atendimento(nr_atendimento_w);
				
				if (nr_seq_atepacu_w <> 0) then
					select	cd_setor_Atendimento,
						dt_entrada_unidade
					into STRICT	cd_setor_atendimento_w,
						dt_entrada_unidade_w
					from	atend_paciente_unidade
					where	nr_seq_interno	= nr_seq_atepacu_w;
				else	
					-- NÃ£o existe uma passagem de setor para o atendimento.
					CALL Wheb_mensagem_pck.exibir_mensagem_abort(181177);
				end if;
				
				select  coalesce(max(obter_local_estoque_setor(cd_setor_atendimento_w,cd_estab_w)),0)
				into STRICT	cd_local_estoque_w
				;

				if (nr_seq_receita_w <> 0) then
					begin
					
					open C01;
					loop
					fetch C01 into	
						cd_material_w;
					EXIT WHEN NOT FOUND; /* apply on C01 */
						begin
						
						select	max(substr(obter_dados_material_estab(cd_material,cd_estab_w,'UMS'),1,30)) cd_unidade_medida_consumo
						into STRICT	cd_unidade_medida_w
						from	material
						where	cd_material = cd_material_w;
						
						select	nextval('material_atend_paciente_seq')
						into STRICT	nr_sequencia_w
						;
						
						insert into material_atend_paciente(	nr_sequencia,
											cd_material,
											dt_atendimento,
											cd_convenio,
											cd_categoria,
											nr_seq_atepacu,
											cd_setor_atendimento,
											dt_entrada_unidade,
											qt_material,
											cd_local_estoque,
											dt_Atualizacao,
											nm_usuario,
											nr_atendimento,
											cd_unidade_medida,
											cd_acao,
											ie_valor_informado)
									values (	nr_sequencia_w,
											cd_material_w,
											clock_timestamp(),
											cd_convenio_w,
											cd_categoria_w,
											nr_seq_atepacu_w,
											cd_setor_atendimento_w,
											dt_entrada_unidade_w,
											1,
											cd_local_estoque_w,
											clock_timestamp(),
											nm_usuario_p,
											nr_atendimento_w,
											cd_unidade_medida_w,
											'1',
											'N');

						CALL atualiza_preco_material(nr_sequencia_w,nm_usuario_p);
						commit;

						end;
					end loop;
					close C01;
					
					end;
				end if;
				
				if (nr_seq_gen_alim_w <> 0) then
					begin
					select	max(coalesce(cd_material,0))
					into STRICT	cd_material_w
					from	nut_genero_alim
					where	nr_sequencia = nr_seq_gen_alim_w;
					
					select	max(substr(obter_dados_material_estab(cd_material,cd_estab_w,'UMS'),1,30)) cd_unidade_medida_consumo
					into STRICT	cd_unidade_medida_w
					from	material
					where	cd_material = cd_material_w;
					
					select	nextval('material_atend_paciente_seq')
					into STRICT	nr_sequencia_w
					;
					
					insert into material_atend_paciente(	nr_sequencia,
										cd_material,
										dt_atendimento,
										cd_convenio,
										cd_categoria,
										nr_seq_atepacu,
										cd_setor_atendimento,
										dt_entrada_unidade,
										qt_material,
										cd_local_estoque,
										dt_Atualizacao,
										nm_usuario,
										nr_atendimento,
										cd_unidade_medida,
										cd_acao,
										ie_valor_informado)
								values (	nr_sequencia_w,
										cd_material_w,
										clock_timestamp(),
										cd_convenio_w,
										cd_categoria_w,
										nr_seq_atepacu_w,
										cd_setor_atendimento_w,
										dt_entrada_unidade_w,
										1,
										cd_local_estoque_w,
										clock_timestamp(),
										nm_usuario_p,
										nr_atendimento_w,
										cd_unidade_medida_w,
										'1',
										'N');

					CALL atualiza_preco_material(nr_sequencia_w,nm_usuario_p);
					commit;
					
					end;
				end if;
				end;
			end if;
			
			end;
		end if;
		end;
	end if;		
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE nut_liberar_item_extra (nr_sequencia_p bigint, ie_receita_p text, nm_usuario_p text) FROM PUBLIC;

