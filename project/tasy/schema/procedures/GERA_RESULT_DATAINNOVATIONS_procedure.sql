-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gera_result_datainnovations ( cd_barras_p text, cd_exame_p text, ds_tipo_resultado_p text, ds_resultado_p text, ds_referencia_p text, ds_result_status_p text, ds_date_time_obs_p text, ds_units_p text, nm_usuario_p text, ds_observacao_p text, cd_exame_princ_p INOUT text ) AS $body$
DECLARE


    nr_seq_resultado_w         bigint;
    nr_seq_exame_w             bigint;
    nr_seq_exame_analito_w     bigint;
    ds_resultado_w             varchar(4000);
    qt_resultado_w             double precision;
    pr_resultado_w             double precision;
    ds_referencia_w            varchar(4000);
    ds_resultado_temp_w        varchar(4000);
    nr_seq_material_w	       bigint;
    cd_exame_principal_w       varchar(40);
    cd_material_exame_w        varchar(20);
    nr_prescricao_w            bigint;
    nr_seq_prescr_w            bigint;
    cd_exame_superior_w        varchar(20);
    cd_exame_w                 varchar(20);
    ie_status_receb_w          smallint;
    cd_estabelecimento_w       smallint;
    ie_status_atend_w          smallint;
    nr_seq_formato_w           bigint;
    nr_seq_metodo_w            bigint;
    nr_seq_formato_red_w       bigint;
    qt_dec_exame_w             smallint;
    ie_campo_calculo_w         varchar(1);
    ds_unidade_medida_w        varchar(15);
    nr_seq_met_reag_w          bigint;
    qt_horas_w                 bigint := 0;
    qt_dias_w                  bigint := 0;
    qt_minima_w                double precision;
    qt_maxima_w                double precision;
    pr_minimo_w                double precision;
    pr_maximo_w                double precision;
    ds_regra_w                 varchar(255);
    ds_texto_padrao_w          varchar(255);
    qt_exames_result_w         bigint;
    nr_seq_unid_med_w          bigint;
    nr_seq_reagente_w          bigint;
    ie_consiste_w              varchar(1);
    ie_formato_result_w        varchar(3);
    qt_decimais_w              smallint;
    ie_sexo_w                  varchar(1);
    nr_sequencia_w             bigint;
    nr_coluna_w                exame_lab_format_item.nr_coluna%TYPE;
    nr_seq_metodo_exame_w      bigint;
    nr_linha_w                 exame_lab_format_item.nr_linha%TYPE;
    nr_seq_exame_princ_w       bigint;
    nr_seq_analito_w           bigint;
    nr_seq_exame_format_w      bigint;
    ie_campo_calculo_ww        varchar(1);
    cd_exame_princ_w           varchar(255);
    ie_referencia_int_tasy_w   varchar(1);
    ie_existe_ref_tasy_w       varchar(1);
    ie_erro_w                  varchar(1);
    cd_barras_number_w         varchar(2000);
    c010 CURSOR FOR
    SELECT
        a.nr_seq_exame,
        coalesce(b.ds_unidade_medida, c.ds_unidade_medida) ds_unidade_medida,
        coalesce(b.nr_seq_unid_med, c.nr_seq_unid_med) nr_seq_unid_med,
        obter_formato_result_exame(a.nr_seq_exame, b.nr_seq_material) ie_formato_result,
        coalesce(b.qt_decimais, coalesce(c.qt_decimais, qt_dec_exame_w)) qt_decimais,
        c.ds_regra,
        c.ds_texto_padrao,
        a.nr_coluna,
        a.nr_linha
    FROM exame_laboratorio c, exame_lab_format_item a
LEFT OUTER JOIN exame_lab_material b ON (a.nr_seq_exame = b.nr_seq_exame AND nr_seq_material_w = b.nr_seq_material)
WHERE a.nr_seq_formato = nr_seq_formato_w AND (a.nr_seq_exame IS NOT NULL AND a.nr_seq_exame::text <> '') AND a.nr_seq_exame = c.nr_seq_exame
UNION ALL

    SELECT
        a.nr_seq_exame,
        coalesce(b.ds_unidade_medida, c.ds_unidade_medida) ds_unidade_medida,
        coalesce(b.nr_seq_unid_med, c.nr_seq_unid_med) nr_seq_unid_med,
        obter_formato_result_exame(a.nr_seq_exame, b.nr_seq_material) ie_formato_result,
        coalesce(b.qt_decimais, coalesce(c.qt_decimais, qt_dec_exame_w)) qt_decimais,
        c.ds_regra,
        c.ds_texto_padrao,
        a.nr_coluna + 10,
        a.nr_linha + 10
    FROM exame_lab_format d, exame_laboratorio c, exame_lab_format_item a
LEFT OUTER JOIN exame_lab_material b ON (a.nr_seq_exame = b.nr_seq_exame AND nr_seq_material_w = b.nr_seq_material)
WHERE d.nr_seq_superior = nr_seq_formato_w AND d.nr_seq_formato = a.nr_seq_formato AND (a.nr_seq_exame IS NOT NULL AND a.nr_seq_exame::text <> '') AND a.nr_seq_exame = c.nr_seq_exame   ORDER BY
        9,
        8;


BEGIN

    ie_erro_w := 'N';
    BEGIN
        cd_barras_number_w := TO_CHAR((cd_barras_p)::numeric );
        SELECT MAX(nr_prescricao)
        INTO STRICT nr_prescricao_w
        FROM prescr_proc_material
        WHERE cd_barras = cd_barras_number_w;

    EXCEPTION
        WHEN OTHERS THEN
            ie_erro_w := 'S';
    END;

    IF ( ie_erro_w <> 'S' ) THEN
        CALL gravar_log_lab(
            cd_log_p => 69999,
            ds_log_p => 'DataInnovations - ' || TO_CHAR(nr_prescricao_w) || ' - '
                              || cd_barras_p || ' - '
                              || cd_exame_p || ' - '
                              || ds_tipo_resultado_p || ' - '
                              || ds_resultado_p || ' - '
                              || ds_referencia_p || ' - '
                              || ds_result_status_p || ' - '
                              || ds_date_time_obs_p || ' - '
                              || ds_units_p || ' - '
                              || nm_usuario_p,
            nm_usuario_p => 'DATAINNOVATIONS',
            nr_prescricao_p => nr_prescricao_w
        );

        cd_exame_superior_w := substr(cd_exame_p, 1, position('%' in cd_exame_p) - 1);
        cd_exame_w := substr(cd_exame_p, length(cd_exame_superior_w) + 2, length(cd_exame_p));

        SELECT MAX(nr_seq_exame)
        INTO STRICT nr_seq_exame_w
        FROM exame_laboratorio
        WHERE coalesce(cd_exame_integracao, cd_exame) = cd_exame_superior_w;

        SELECT MAX(c.nr_sequencia)
        INTO STRICT nr_seq_prescr_w
        FROM
            prescr_proc_material   a,
            prescr_proc_mat_item   b,
            prescr_procedimento    c
        WHERE
            a.nr_sequencia = b.nr_seq_prescr_proc_mat
            AND a.nr_prescricao = c.nr_prescricao
            AND c.nr_sequencia = b.nr_seq_prescr
            AND c.nr_prescricao = nr_prescricao_w
            AND c.nr_seq_exame = nr_seq_exame_w
            AND a.cd_barras = cd_barras_number_w
            AND coalesce(c.ie_suspenso, 'N') = 'N';

        SELECT MIN(coalesce(b.cd_exame_integracao, b.cd_exame))
        INTO STRICT cd_exame_princ_w
        FROM
            prescr_procedimento   a,
            exame_laboratorio     b
        WHERE
            a.nr_seq_exame = b.nr_seq_exame
            AND a.nr_prescricao = nr_prescricao_w
            AND a.nr_sequencia = nr_seq_prescr_w;

        cd_exame_princ_p := cd_exame_princ_w;
        SELECT
            MAX(cd_estabelecimento),
            MAX(obter_sexo_prescricao(nr_prescricao))
        INTO STRICT
            cd_estabelecimento_w,
            ie_sexo_w
        FROM prescr_medica
        WHERE nr_prescricao = nr_prescricao_w;

        SELECT MAX(ie_status_atend)
        INTO STRICT ie_status_atend_w
        FROM prescr_procedimento
        WHERE
            nr_prescricao = nr_prescricao_w
            AND nr_sequencia = nr_seq_prescr_w;

        SELECT
            MAX(ie_status_receb),
            MAX(ie_atual_ref_ger_laudo)
        INTO STRICT
            ie_status_receb_w,
            ie_referencia_int_tasy_w
        FROM lab_parametro
        WHERE cd_estabelecimento = cd_estabelecimento_w;

        IF ( ie_status_atend_w <= 30 ) THEN

            CALL gera_exame_result_lab(
                nr_prescricao_p => nr_prescricao_w,
                nr_seq_prescr_p => nr_seq_prescr_w,
                ie_somente_amostra_p => 'N',
                ie_digitacao_p => 'N',
                ie_gera_laudo_p => 'S',
                nm_usuario_p => nm_usuario_p
            );

            SELECT MAX(nr_seq_resultado)
            INTO STRICT nr_seq_resultado_w
            FROM exame_lab_resultado
            WHERE nr_prescricao = nr_prescricao_w;

            SELECT
                MAX(p.nr_seq_exame),
                MAX(cd_material_exame),
                MAX(p.nr_seq_exame)
            INTO STRICT
                nr_seq_exame_w,
                cd_material_exame_w,
                nr_seq_exame_princ_w
            FROM prescr_procedimento p
            WHERE
                p.nr_prescricao = nr_prescricao_w
                AND p.nr_sequencia = nr_seq_prescr_w;

            SELECT
                MAX(coalesce(cd_exame_integracao, cd_exame)),
                coalesce(MAX(qt_decimais), 0),
                MAX(ie_campo_calculo)
            INTO STRICT
                cd_exame_principal_w,
                qt_dec_exame_w,
                ie_campo_calculo_w
            FROM exame_laboratorio
            WHERE nr_seq_exame = nr_seq_exame_w;

            SELECT
                MAX(nr_seq_material),
                MAX(nr_seq_formato),
                MAX(nr_seq_metodo)
            INTO STRICT
                nr_seq_material_w,
                nr_seq_formato_w,
                nr_seq_metodo_w
            FROM exame_lab_result_item
            WHERE
                nr_seq_exame = nr_seq_exame_w
                AND nr_seq_resultado = nr_seq_resultado_w
                AND nr_seq_prescr = nr_seq_prescr_w;

            IF ( coalesce(nr_seq_formato_w, 0) = 0 ) THEN
                SELECT
                    coalesce(MAX(obter_formato_exame(nr_seq_exame_w, nr_seq_material_w, nr_seq_metodo_w, 'L')), 0),
                    coalesce(MAX(obter_formato_exame(nr_seq_exame_w, nr_seq_material_w, nr_seq_metodo_w, 'R')), 0)
                INTO STRICT
                    nr_seq_formato_w,
                    nr_seq_formato_red_w
;

                UPDATE exame_lab_result_item
                SET
                    nr_seq_formato = nr_seq_formato_w,
                    nr_seq_formato_red = nr_seq_formato_red_w
                WHERE
                    nr_seq_resultado = nr_seq_resultado_w
                    AND nr_seq_exame = nr_seq_exame_w
                    AND nr_seq_prescr = nr_seq_prescr_w;

                COMMIT;
            END IF;

            IF ( cd_exame_principal_w <> cd_exame_w ) THEN
                SELECT
                    MAX(nr_seq_exame),
                    MAX(nr_seq_exame)
                INTO STRICT
                    nr_seq_exame_w,
                    nr_seq_analito_w
                FROM exame_laboratorio a
                WHERE
                    coalesce(a.cd_exame_integracao, a.cd_exame) = cd_exame_w
                    AND cd_exame_superior_w IN (WITH RECURSIVE cte AS (

                        SELECT coalesce(c.cd_exame_integracao, c.cd_exame)
                        FROM exame_laboratorio c WHERE c.nr_seq_exame = a.nr_seq_exame

  UNION ALL

                        SELECT coalesce(c.cd_exame_integracao, c.cd_exame)
                        FROM exame_laboratorio c JOIN cte c ON (c.nr_seq_superior = c.c.nr_seq_exame)

) SELECT * FROM cte;
);

            END IF;

            IF (nr_seq_exame_w IS NOT NULL AND nr_seq_exame_w::text <> '') AND (nr_seq_resultado_w IS NOT NULL AND nr_seq_resultado_w::text <> '') THEN
                SELECT
                    obter_dias_entre_datas(obter_nascimento_prescricao(nr_prescricao_w), clock_timestamp()),
                    obter_hora_entre_datas(obter_nascimento_prescricao(nr_prescricao_w), clock_timestamp())
                INTO STRICT
                    qt_dias_w,
                    qt_horas_w
;

                BEGIN
                    OPEN c010;
                    LOOP
                        FETCH c010 INTO
                            nr_seq_exame_format_w,
                            ds_unidade_medida_w,
                            nr_seq_unid_med_w,
                            ie_formato_result_w,
                            qt_decimais_w,
                            ds_regra_w,
                            ds_texto_padrao_w,
                            nr_coluna_w,
                            nr_linha_w;

                        IF c010%found THEN
                            BEGIN
                                BEGIN
                                    SELECT
                                        coalesce(MAX(a.nr_sequencia), 0),
                                        coalesce(MAX(b.nr_sequencia), NULL)
                                    INTO STRICT
                                        nr_seq_met_reag_w,
                                        nr_seq_reagente_w
                                    FROM lab_reagente b, metodo_reagente_lab a
LEFT OUTER JOIN lab_reagente_estab c ON (a.nr_seq_reagente = c.nr_seq_reagente)
WHERE a.nr_seq_metodo = nr_seq_metodo_w AND a.nr_seq_reagente = b.nr_sequencia  AND coalesce(c.cd_estabelecimento, cd_estabelecimento_w) = cd_estabelecimento_w;

                                    SELECT
                                        qt_minima,
                                        qt_maxima,
                                        qt_percent_min,
                                        qt_percent_max,
                                        ds_observacao,
                                        CASE WHEN ie_tipo_valor=3 THEN  'N'  ELSE 'S' END ,
                                        'S'
                                    INTO STRICT
                                        qt_minima_w,
                                        qt_maxima_w,
                                        pr_minimo_w,
                                        pr_maximo_w,
                                        ds_referencia_w,
                                        ie_consiste_w,
                                        ie_existe_ref_tasy_w
                                    FROM
                                        (
                                            SELECT
                                                qt_minima,
                                                qt_maxima,
                                                qt_percent_min,
                                                qt_percent_max,
                                                ds_observacao,
                                                ie_tipo_valor
                                            FROM exame_lab_padrao
                                            WHERE
                                                ( ( ie_sexo = ie_sexo_w )
                                                  OR ( ie_sexo = '0' ) )
                                                AND nr_seq_exame = nr_seq_exame_format_w
                                                AND coalesce(nr_seq_material, nr_seq_material_w) = nr_seq_material_w
                                                AND coalesce(nr_seq_metodo, nr_seq_metodo_w) = nr_seq_metodo_w
                                                AND coalesce(nr_seq_met_reag, nr_seq_met_reag_w) = nr_seq_met_reag_w
                                                AND ( ( ( ( qt_dias_w / 365.25 ) BETWEEN qt_idade_min AND qt_idade_max )
                                                        AND ( ie_periodo = 'A' ) )
                                                      OR ( ( ( ( qt_dias_w / 365.25 ) * 12 ) BETWEEN qt_idade_min AND qt_idade_max )
                                                           AND ( ie_periodo = 'M' ) )
                                                      OR ( qt_dias_w BETWEEN qt_idade_min AND qt_idade_max  AND  ie_periodo = 'D' )
                                                      OR ( qt_horas_w BETWEEN qt_idade_min AND qt_idade_max  AND  ie_periodo = 'H' ) )
                                                AND ie_tipo_valor IN (
                                                    0,
                                                    3
                                                )
                                                AND coalesce(ie_situacao, 'A') = 'A'
                                            ORDER BY
                                                coalesce(nr_seq_material, 9999999999),
                                                coalesce(nr_seq_metodo, 9999999999),
                                                ie_sexo,
                                                CASE WHEN ie_periodo='D' THEN  1 WHEN ie_periodo='M' THEN  2  ELSE 3 END
                                        ) alias22 LIMIT 1;

                                EXCEPTION
                                    WHEN OTHERS THEN
                                        qt_minima_w := NULL;
                                        qt_maxima_w := NULL;
                                        pr_minimo_w := NULL;
                                        pr_maximo_w := NULL;
                                        ds_referencia_w := NULL;
                                        ie_consiste_w := 'N';
                                        ie_existe_ref_tasy_w := 'N';
                                END;

                                IF ( ie_referencia_int_tasy_w = 'N' ) AND ( ie_existe_ref_tasy_w = 'N' ) THEN
                                    IF ( ds_referencia_p = 'null' ) THEN
                                        ds_referencia_w := NULL;
                                    ELSE
                                        ds_referencia_w := ds_referencia_p;
                                    END IF;

                                ELSIF ( ie_referencia_int_tasy_w = 'T' ) AND (ds_referencia_p IS NOT NULL AND ds_referencia_p::text <> '') AND ( ds_referencia_p <> 'null' ) THEN
                                    ds_referencia_w := ds_referencia_p;
                                END IF;

                                SELECT COUNT(*)
                                INTO STRICT qt_exames_result_w
                                FROM exame_lab_result_item
                                WHERE
                                    nr_seq_resultado = nr_seq_resultado_w
                                    AND nr_seq_prescr = nr_seq_prescr_w
                                    AND nr_seq_exame = nr_seq_exame_format_w;

                                IF ( qt_exames_result_w = 1 ) THEN
                                    UPDATE exame_lab_result_item
                                    SET
                                        pr_minimo = pr_minimo_w,
                                        pr_maximo = pr_maximo_w,
                                        qt_minima = qt_minima_w,
                                        qt_maxima = qt_maxima_w,
                                        ds_referencia = ds_referencia_w,
                                        ie_consiste = ie_consiste_w,
                                        ds_unidade_medida = coalesce(ds_unidade_medida_w, ' '),
                                        nr_seq_unid_med = nr_seq_unid_med_w,
                                        qt_decimais = qt_decimais_w,
                                        ds_regra = ds_regra_w,
                                        nr_seq_reagente = coalesce(nr_seq_reagente_w, nr_seq_reagente)
                                    WHERE
                                        nr_seq_resultado = nr_seq_resultado_w
                                        AND nr_seq_prescr = nr_seq_prescr_w
                                        AND nr_seq_exame = nr_seq_exame_format_w;

                                    IF (ds_resultado_w IS NOT NULL AND ds_resultado_w::text <> '') THEN
                                        IF ( ie_formato_result_w = 'V' ) OR ( ie_formato_result_w = 'VP' AND ie_campo_calculo_w = 'P' ) THEN
                                            UPDATE exame_lab_result_item
                                            SET qt_resultado = ds_resultado_w
                                            WHERE
                                                nr_seq_resultado = nr_seq_resultado_w
                                                AND nr_seq_prescr = nr_seq_prescr_w
                                                AND nr_seq_exame = nr_seq_exame_format_w;

                                        ELSIF ( ie_formato_result_w = 'P' ) OR ( ie_formato_result_w = 'VP' AND ie_campo_calculo_w = 'V' ) THEN
                                            UPDATE exame_lab_result_item
                                            SET pr_resultado = round(ds_resultado_w, qt_decimais_w)
                                            WHERE
                                                nr_seq_resultado = nr_seq_resultado_w
                                                AND nr_seq_prescr = nr_seq_prescr_w
                                                AND nr_seq_exame = nr_seq_exame_format_w;

                                        ELSE
                                            UPDATE exame_lab_result_item
                                            SET ds_resultado = coalesce(lab_obter_valor_integracao(nr_seq_exame_format_w, ds_resultado_w), ds_resultado_w)
                                            WHERE
                                                nr_seq_resultado = nr_seq_resultado_w
                                                AND nr_seq_prescr = nr_seq_prescr_w
                                                AND nr_seq_exame = nr_seq_exame_format_w;

                                        END IF;

                                    END IF;

                                ELSE
                                    SELECT obter_metodo_regra_item(nr_prescricao_w, nr_seq_exame_format_w)
                                    INTO STRICT nr_seq_metodo_exame_w
;

                                    pr_resultado_w := 0;
                                    IF (ds_resultado_w IS NOT NULL AND ds_resultado_w::text <> '') THEN
                                        IF ( ie_formato_result_w = 'V' ) OR ( ie_formato_result_w = 'VP' AND ie_campo_calculo_w = 'P' ) THEN
                                            qt_resultado_w := ds_resultado_w;
                                            ds_resultado_w := NULL;
                                        ELSIF ( ie_formato_result_w = 'P' ) OR ( ie_formato_result_w = 'VP' AND ie_campo_calculo_w = 'V' ) THEN
                                            pr_resultado_w := ds_resultado_w;
                                            ds_resultado_w := NULL;
                                        END IF;
                                    END IF;

                                    BEGIN
                                        SELECT coalesce(MAX(nr_sequencia), 0)
                                        INTO STRICT nr_sequencia_w
                                        FROM exame_lab_result_item
                                        WHERE nr_seq_resultado = nr_seq_resultado_w;
                                    EXCEPTION
                                        WHEN no_data_found THEN
                                            BEGIN
                                                nr_sequencia_w := 0;
                                            END;
                                    END;

                                    nr_sequencia_w := nr_sequencia_w + 1;
                                    pr_resultado_w := round(pr_resultado_w, qt_decimais_w);
                                    INSERT INTO exame_lab_result_item(
                                        nr_seq_resultado,
                                        nr_sequencia,
                                        nr_seq_exame,
                                        dt_atualizacao,
                                        nm_usuario,
                                        qt_resultado,
                                        ds_resultado,
                                        nr_seq_metodo,
                                        nr_seq_material,
                                        pr_resultado,
                                        ie_status,
                                        dt_aprovacao,
                                        nm_usuario_aprovacao,
                                        nr_seq_prescr,
                                        pr_minimo,
                                        pr_maximo,
                                        qt_minima,
                                        qt_maxima,
                                        ds_referencia,
                                        ds_unidade_medida,
                                        nr_seq_unid_med,
                                        qt_decimais,
                                        ds_regra,
                                        ie_consiste,
                                        nr_seq_reagente,
                                        nr_seq_metodo_exame
                                    ) VALUES (
                                        nr_seq_resultado_w,
                                        nr_sequencia_w,
                                        nr_seq_exame_format_w,
                                        clock_timestamp(),
                                        nm_usuario_p,
                                        CASE WHEN ie_formato_result_w='V' THEN  qt_resultado_w WHEN ie_formato_result_w='VP' THEN  qt_resultado_w WHEN ie_formato_result_w='CV' THEN  qt_resultado_w END ,
                                        coalesce(lab_obter_valor_integracao(nr_seq_exame_format_w, ds_resultado_w), ds_resultado_w),
                                        NULL,
                                        NULL,
                                        CASE WHEN ie_formato_result_w='P' THEN  pr_resultado_w WHEN ie_formato_result_w='VP' THEN  pr_resultado_w END ,
                                        NULL,
                                        NULL,
                                        NULL,
                                        nr_seq_prescr_w,
                                        pr_minimo_w,
                                        pr_maximo_w,
                                        qt_minima_w,
                                        qt_maxima_w,
                                        ds_referencia_w,
                                        coalesce(ds_unidade_medida_w, ' '),
                                        nr_seq_unid_med_w,
                                        qt_decimais_w,
                                        ds_regra_w,
                                        ie_consiste_w,
                                        nr_seq_reagente_w,
                                        nr_seq_metodo_exame_w
                                    );

                                END IF;

                            END;

                        ELSE
                            EXIT;
                        END IF;

                    END LOOP;

                    CLOSE c010;
                EXCEPTION
                    WHEN OTHERS THEN
                        CALL gravar_log_lab(
                            cd_log_p => 69999,
                            ds_log_p => 'gera_result_datainnovations - excep: ' || sqlerrm,
                            nm_usuario_p => 'tasy',
                            nr_prescricao_p => nr_prescricao_w
                        );
                END;

                IF ( ds_tipo_resultado_p = 'NM' ) THEN
                    ds_resultado_temp_w := trim(both ds_resultado_p);
                    IF ( substr(ds_resultado_temp_w, length(ds_resultado_temp_w), 1) = '.' ) THEN
                        ds_resultado_temp_w := ds_resultado_temp_w || '0';
                    ELSIF ( substr(ds_resultado_temp_w, 1, 1) = '.' ) THEN
                        ds_resultado_temp_w := '0' || ds_resultado_temp_w;
                    END IF;

                    IF ( upper(ds_units_p) = 'PERCENT' ) THEN
                        ds_resultado_w := NULL;
                        qt_resultado_w := NULL;
                        pr_resultado_w := ds_resultado_temp_w;
                    ELSE
                        nr_seq_exame_analito_w := coalesce(nr_seq_analito_w, nr_seq_exame_w);
                        SELECT
                            MAX(ie_formato_resultado),
                            MAX(ie_campo_calculo)
                        INTO STRICT
                            ie_formato_result_w,
                            ie_campo_calculo_ww
                        FROM exame_laboratorio
                        WHERE nr_seq_exame = nr_seq_exame_analito_w;

                        IF ( ie_formato_result_w = 'V' ) OR ( ie_formato_result_w = 'VP' AND ie_campo_calculo_ww = 'P' ) THEN
                            BEGIN
                                qt_resultado_w := round((to_number(ds_resultado_temp_w, '999999999999999.99999999'))::numeric, 4);
                                pr_resultado_w := NULL;
                                ds_resultado_w := NULL;
                            EXCEPTION
                                WHEN OTHERS THEN
                                    ds_resultado_w := ds_resultado_temp_w;
                            END;
                        ELSIF ( ie_formato_result_w = 'P' ) OR ( ie_formato_result_w = 'VP' AND ie_campo_calculo_ww = 'V' ) THEN
                            BEGIN
                                qt_resultado_w := NULL;
                                pr_resultado_w := round((to_number(ds_resultado_temp_w, '999999999999999.99999999'))::numeric, 4);
                                ds_resultado_w := NULL;
                            EXCEPTION
                                WHEN OTHERS THEN
                                    ds_resultado_w := ds_resultado_temp_w;
                            END;
                        ELSIF ( ie_formato_result_w = 'V' ) OR ( ie_formato_result_w = 'DV' ) THEN
                            BEGIN
                                ds_resultado_w := NULL;
                                qt_resultado_w := round((to_number(ds_resultado_temp_w, '999999999999999.99999999'))::numeric, 4);
                                pr_resultado_w := NULL;
                            EXCEPTION
                                WHEN OTHERS THEN
                                    ds_resultado_w := ds_resultado_temp_w;
                            END;
                        ELSE
                            BEGIN
                                pr_resultado_w := NULL;
                                qt_resultado_w := NULL;
                                ds_resultado_w := ds_resultado_temp_w;
                            END;
                        END IF;

                    END IF;

                ELSIF ( ds_tipo_resultado_p = 'TX' ) THEN
                    nr_seq_exame_analito_w := coalesce(nr_seq_analito_w, nr_seq_exame_w);

                    SELECT ie_formato_resultado
                    INTO STRICT ie_formato_result_w
                    FROM exame_laboratorio
                    WHERE nr_seq_exame = nr_seq_exame_analito_w;

                    IF ( ie_formato_result_w = 'V' ) OR ( ie_formato_result_w = 'DV' ) THEN
                        BEGIN
                            SELECT (coalesce(ds_resultado_p, 0))::numeric
                            INTO STRICT qt_resultado_w
;

                            ds_resultado_w := NULL;
                            qt_resultado_w := qt_resultado_w;
                            pr_resultado_w := NULL;
                        EXCEPTION
                            WHEN OTHERS THEN
                                BEGIN
                                    SELECT (coalesce(replace(ds_resultado_p, ',', '.'), 0))::numeric
                                    INTO STRICT qt_resultado_w
;

                                    ds_resultado_w := NULL;
                                    IF ( substr(ds_resultado_p, 1, 1) = '.' ) THEN
                                        qt_resultado_w := '0' || qt_resultado_w;
                                    ELSE
                                        qt_resultado_w := qt_resultado_w;
                                    END IF;

                                    pr_resultado_w := NULL;
                                EXCEPTION
                                    WHEN OTHERS THEN
                                        ds_resultado_w := ds_resultado_p;
                                        qt_resultado_w := NULL;
                                        pr_resultado_w := NULL;
                                END;
                        END;
                    ELSIF ( ( ie_formato_result_w = 'P' ) OR ( ie_formato_result_w = 'VP' ) ) THEN
                        BEGIN
                            SELECT (coalesce(ds_resultado_p, 0))::numeric
                            INTO STRICT qt_resultado_w
;

                            ds_resultado_w := NULL;
                            qt_resultado_w := qt_resultado_w;
                            pr_resultado_w := NULL;
                        EXCEPTION
                            WHEN OTHERS THEN
                                BEGIN
                                    SELECT (coalesce(replace(ds_resultado_p, ',', '.'), 0))::numeric
                                    INTO STRICT qt_resultado_w
;

                                    ds_resultado_w := NULL;
                                    qt_resultado_w := qt_resultado_w;
                                    pr_resultado_w := NULL;
                                EXCEPTION
                                    WHEN OTHERS THEN
                                        ds_resultado_w := ds_resultado_p;
                                        qt_resultado_w := NULL;
                                        pr_resultado_w := NULL;
                                END;
                        END;
                    ELSE
                        ds_resultado_w := ds_resultado_p;
                        qt_resultado_w := NULL;
                        pr_resultado_w := NULL;
                    END IF;

                END IF;

                nr_seq_exame_analito_w := coalesce(nr_seq_analito_w, nr_seq_exame_w);
                UPDATE exame_lab_result_item
                SET
                    qt_resultado = qt_resultado_w,
                    ds_resultado = coalesce(lab_obter_valor_integracao(coalesce(nr_seq_analito_w, nr_seq_exame_w), ds_resultado_w), ds_resultado_w),
                    pr_resultado = round(pr_resultado_w, qt_decimais_w),
                    nm_usuario = nm_usuario_p,
                    dt_atualizacao = clock_timestamp()
                WHERE
                    nr_seq_resultado = nr_seq_resultado_w
                    AND nr_seq_exame = nr_seq_exame_analito_w
                    AND nr_seq_prescr = nr_seq_prescr_w;

                nr_seq_exame_analito_w := coalesce(nr_seq_analito_w, nr_seq_exame_w);
                UPDATE exame_lab_result_item
                SET ds_observacao = ds_observacao_p
                WHERE
                    nr_seq_resultado = nr_seq_resultado_w
                    AND nr_seq_exame = nr_seq_exame_analito_w
                    AND nr_seq_prescr = nr_seq_prescr_w;

                COMMIT;
            ELSE
                CALL gerar_lab_log_interf_imp(
                   nr_prescricao_p => nr_prescricao_w,
                   nr_seq_prescr_p => nr_seq_prescr_w,
                   nr_seq_exame_p => nr_seq_exame_princ_w,
                   nr_seq_material_p => NULL,
                   ds_resultado_p => ds_resultado_p,
                   ds_mensagem_p => wheb_mensagem_pck.get_texto(1131624),
                   ie_formato_p => NULL,
                   nm_usuario_p => nm_usuario_p,
                   ie_erro_p => 'S'
                );
            END IF;

        END IF;

    ELSE
        cd_exame_princ_p := 'resultadoteste-1';
    END IF;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gera_result_datainnovations ( cd_barras_p text, cd_exame_p text, ds_tipo_resultado_p text, ds_resultado_p text, ds_referencia_p text, ds_result_status_p text, ds_date_time_obs_p text, ds_units_p text, nm_usuario_p text, ds_observacao_p text, cd_exame_princ_p INOUT text ) FROM PUBLIC;

