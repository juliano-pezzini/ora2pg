-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_movto_estoque_terc ( nr_sequencia_p bigint, ie_acao_p text, nm_usuario_p text) AS $body$
DECLARE


nr_movimento_estoque_w		bigint;
cd_operacao_estoque_dest_w	smallint;
cd_centro_custo_w			integer;
cd_estabelecimento_w		smallint;
ie_unidade_medida_w		varchar(10);
ie_unidade_med_movto_w		varchar(10)	:= 'UMS';


BEGIN

select	coalesce(cd_operacao_estoque_dest,0),
	coalesce(b.cd_centro_custo, c.cd_centro_custo),
	a.cd_estabelecimento,
	coalesce(b.ie_unidade_medida,'C')
into STRICT	cd_operacao_estoque_dest_w,
	cd_centro_custo_w,
	cd_estabelecimento_w,
	ie_unidade_medida_w
from	terceiro c,
	operacao_Terceiro b,
	terceiro_Operacao a
where	a.nr_sequencia	= nr_sequencia_p
and	a.nr_seq_operacao	= b.nr_sequencia
and	a.nr_seq_terceiro	= c.nr_sequencia;

if (cd_operacao_estoque_dest_w > 0) then
	begin

	/*lhalves OS 501114 em 08/10/2012*/

	if (ie_unidade_medida_w 	= 'C') then /*Unidade de consumo*/
		ie_unidade_med_movto_w	:= 'UMS';
	elsif (ie_unidade_medida_w 	= 'E') then /*Unidade de estoque*/
		ie_unidade_med_movto_w	:= 'UME';
	elsif (ie_unidade_medida_w 	= 'S') then /*Unidade de compra*/
		ie_unidade_med_movto_w	:= 'UMC';
	end if;
	/*lhalves OS 501114 em 08/10/2012*/

	select nextval('movimento_estoque_seq')
	       into STRICT nr_movimento_estoque_w
	;

	insert into movimento_estoque(
		nr_movimento_estoque,
		cd_estabelecimento,
		cd_local_estoque,
		dt_movimento_estoque,
		cd_operacao_estoque,
		cd_acao,
		cd_material,
		dt_mesano_referencia,
		qt_movimento,
		dt_atualizacao,
		nm_usuario,
		ie_origem_documento,
		nr_documento,
		nr_sequencia_item_docto,
		nr_sequencia_documento,
		vl_movimento,
		cd_unidade_medida_estoque,
		cd_setor_atendimento,
		qt_estoque,
		dt_processo,
		cd_local_estoque_destino,
		cd_centro_custo,
		cd_unidade_med_mov,
		cd_conta_contabil,
		cd_fornecedor,
		nr_seq_lote_fornec)
	SELECT	nr_movimento_estoque_w,
	 	a.cd_estabelecimento,
	 	a.cd_local_estoque,
		a.dt_operacao,
	 	cd_operacao_estoque_dest,
	 	ie_acao_p,
		a.cd_material,
		trunc(a.dt_operacao,'month'),
	 	a.qt_operacao,
	 	clock_timestamp(),
	 	nm_usuario_p,
	 	'2',
	 	a.nr_doc,
	 	a.nr_seq_doc,
	 	0,
	 	0,
	 	substr(obter_dados_material_estab(c.cd_material,cd_estabelecimento_w,'UME'),1,30) cd_unidade_medida_estoque,
	 	null,
	 	CASE WHEN ie_acao_p='1' THEN a.qt_operacao  ELSE a.qt_operacao * -1 END ,
	 	null,
	 	null,
	 	cd_centro_custo_w,
		substr(obter_dados_material_estab(c.cd_material,cd_estabelecimento_w,ie_unidade_med_movto_w),1,30) cd_unidade_medida_consumo,
		null,
		a.cd_cgc_fornecedor,
		a.nr_seq_lote_fornec
	from	material c,
		operacao_Terceiro b,
		terceiro_Operacao a
	where	a.nr_sequencia	= nr_sequencia_p
	and	a.nr_seq_operacao	= b.nr_sequencia
	and	a.cd_material		= c.cd_material
	and	(a.cd_local_estoque IS NOT NULL AND a.cd_local_estoque::text <> '')
	and	(a.cd_material IS NOT NULL AND a.cd_material::text <> '');

	update	terceiro_Operacao
	set	dt_atualizacao_estoque	= CASE WHEN ie_acao_p='1' THEN clock_timestamp()  ELSE null END
	where	nr_sequencia		= nr_sequencia_p
	and	(cd_local_estoque IS NOT NULL AND cd_local_estoque::text <> '')
	and	(cd_material IS NOT NULL AND cd_material::text <> '');

	end;
end if;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_movto_estoque_terc ( nr_sequencia_p bigint, ie_acao_p text, nm_usuario_p text) FROM PUBLIC;

