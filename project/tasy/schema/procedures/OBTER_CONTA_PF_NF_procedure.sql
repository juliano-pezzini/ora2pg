-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE obter_conta_pf_nf (cd_estabelecimento_p bigint, cd_pessoa_fisica_p bigint, cd_material_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, cd_operacao_nf_p bigint, cd_conta_contabil_p INOUT text, cd_cgc_p text, nr_sequencia_p bigint) AS $body$
DECLARE


cd_empresa_w		bigint;
cd_conta_contabil_w	varchar(20);
cd_area_w		integer;
cd_grupo_w		bigint;
cd_especialidade_w	bigint;
cd_grupo_material_w	smallint;
cd_subgrupo_material_w	smallint;
cd_classe_material_w	integer;
cd_procedimento_w	bigint;
ie_origem_proced_w	bigint;
dt_emissao_w		timestamp;
cd_pesso_fisica_w	varchar(10);

c01 CURSOR FOR
SELECT	a.cd_conta_contabil
from	PESSOA_FIS_CONTA_NF a
where	(cd_material_p IS NOT NULL AND cd_material_p::text <> '')
and	a.cd_pessoa_fisica						= cd_pessoa_fisica_p
and	coalesce(cd_material,cd_material_p) 			= cd_material_p
and	coalesce(cd_grupo_material,cd_grupo_material_w)		= cd_grupo_material_w
and	coalesce(cd_subgrupo_material,cd_subgrupo_material_w)	= cd_subgrupo_material_w
and	coalesce(cd_classe_material,cd_classe_material_w)		= cd_classe_material_w
and	coalesce(cd_operacao_nf, cd_operacao_nf_p)		= cd_operacao_nf_p
and	substr(obter_se_periodo_vigente(a.dt_inicio_vigencia, a.dt_fim_vigencia, dt_emissao_w),1,1) = 'S'
and	coalesce(cd_procedimento::text, '') = ''
order by	 coalesce(cd_operacao_nf,0),
	 coalesce(cd_material,0),
	 coalesce(cd_classe_material,0),
	 coalesce(cd_subgrupo_material,0),
	 coalesce(cd_grupo_material,0);

c02 CURSOR FOR
SELECT	a.cd_conta_contabil
from	pessoa_fis_conta_nf a
where	(cd_procedimento_p IS NOT NULL AND cd_procedimento_p::text <> '')
and	a.cd_pessoa_fisica	= cd_pessoa_fisica_p
and	coalesce(cd_area_procedimento,cd_area_w)		= cd_area_w
and	coalesce(cd_especialidade,cd_especialidade_w)	= cd_especialidade_w
and	coalesce(cd_grupo_proc,cd_grupo_w)			= cd_grupo_w
and	coalesce(cd_procedimento, cd_procedimento_p)		= cd_procedimento_p
and	coalesce(ie_origem_proced, ie_origem_proced_p)	= ie_origem_proced_p
and	coalesce(cd_operacao_nf, cd_operacao_nf_p)		= cd_operacao_nf_p
and	coalesce(cd_material::text, '') = ''
and	substr(obter_se_periodo_vigente(a.dt_inicio_vigencia, a.dt_fim_vigencia, dt_emissao_w),1,1) = 'S'
order by 	coalesce(cd_operacao_nf,0),
	 coalesce(cd_procedimento,0),
	 coalesce(cd_grupo_proc,0),
	 coalesce(cd_especialidade,0),
	 coalesce(cd_area_procedimento,0);



BEGIN

cd_empresa_w	:= obter_empresa_estab(cd_estabelecimento_p);

if (cd_material_p IS NOT NULL AND cd_material_p::text <> '') then
	select	max(cd_classe_material),
		max(cd_subgrupo_material),
		max(cd_grupo_material)
	into STRICT	cd_classe_material_w,
		cd_subgrupo_material_w,
		cd_grupo_material_w
	from	estrutura_material_v
	where	cd_material	 	= cd_material_p;
end if;

if (cd_procedimento_p IS NOT NULL AND cd_procedimento_p::text <> '') then

	select	max(cd_grupo_proc),
		max(cd_especialidade),
		max(cd_area_procedimento)
	into STRICT	cd_grupo_w,
		cd_especialidade_w,
		cd_area_w
	from	estrutura_procedimento_v
	where	cd_procedimento 	= cd_procedimento_p
	and	ie_origem_proced 	= ie_origem_proced_p;

end if;

select	max(dt_emissao)
into STRICT	dt_emissao_w
from	nota_fiscal
where	nr_sequencia = nr_sequencia_p;

open C01;
loop
fetch C01 into
	cd_conta_contabil_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	cd_conta_contabil_p	:= cd_conta_contabil_w;
	end;
end loop;
close C01;


open C02;
loop
fetch C02 into
	cd_conta_contabil_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin
	cd_conta_contabil_p	:= cd_conta_contabil_w;
	end;
end loop;
close C02;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE obter_conta_pf_nf (cd_estabelecimento_p bigint, cd_pessoa_fisica_p bigint, cd_material_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, cd_operacao_nf_p bigint, cd_conta_contabil_p INOUT text, cd_cgc_p text, nr_sequencia_p bigint) FROM PUBLIC;

