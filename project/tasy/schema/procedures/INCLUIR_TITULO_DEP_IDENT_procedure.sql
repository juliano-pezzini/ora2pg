-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE incluir_titulo_dep_ident ( nr_seq_deposito_p bigint, nr_titulo_p bigint, nm_usuario_p text, ie_commit_p text) AS $body$
DECLARE


vl_depositar_w			double precision;
dt_validade_w			timestamp;
ie_juros_multa_titulo_w		varchar(1);
cd_moeda_w			deposito_identificado.cd_moeda%type;
vl_cotacao_w			deposito_identificado.vl_cotacao%type;
vl_depositar_estrang_w		deposito_ident_titulo.vl_depositar_estrang%type;
vl_complemento_w		deposito_ident_titulo.vl_complemento%type;
nr_seq_alter_venc_w			alteracao_vencimento.nr_sequencia%type;


BEGIN

select	max(a.cd_moeda),
	max(a.vl_cotacao)
into STRICT	cd_moeda_w,
	vl_cotacao_w
from	deposito_identificado a
where	a.nr_Sequencia = nr_seq_deposito_p;

if (nr_titulo_p IS NOT NULL AND nr_titulo_p::text <> '') and (nr_seq_deposito_p IS NOT NULL AND nr_seq_deposito_p::text <> '') then
	select	coalesce(a.dt_limite_deposito,clock_timestamp())
	into STRICT	dt_validade_w
	from	deposito_identificado a
	where	a.nr_sequencia	= nr_seq_deposito_p;

	/*aamfirmo OS 861869 20/04/15 - Antes buscava apenas o valor de juros conforme function obter_juros_multa. Criada a opção para buscar do saldo do juros e multa*/

	ie_juros_multa_titulo_w := Obter_Param_Usuario(9054, 11, obter_perfil_ativo, nm_usuario_p, obter_estabelecimento_ativo, ie_juros_multa_titulo_w);

	if ( coalesce(ie_juros_multa_titulo_w,'N') = 'N' ) then

		select	max(a.vl_saldo_titulo) +
				coalesce(max(obter_juros_multa_titulo(a.nr_titulo,dt_validade_w,'R','J')),0) +
				coalesce(max(obter_juros_multa_titulo(a.nr_titulo,dt_validade_w,'R','M')),0)
		into STRICT	vl_depositar_w
		from	titulo_receber a
		where	a.nr_titulo	= nr_titulo_p;

	elsif ( coalesce(ie_juros_multa_titulo_w,'N') = 'S' ) then

		select	coalesce(max(a.vl_saldo_titulo),0) +
				coalesce(max(a.vl_saldo_juros),0) +
				coalesce(max(a.vl_saldo_multa),0)
		into STRICT	vl_depositar_w
		from	titulo_receber a
		where	a.nr_titulo	= nr_titulo_p;

	elsif ( coalesce(ie_juros_multa_titulo_w,'N') = 'P' ) then

		select	max(nr_sequencia)
		into STRICT	nr_seq_alter_venc_w
		from	alteracao_vencimento a
		where	a.nr_titulo = nr_titulo_p;

		if (nr_seq_alter_venc_w IS NOT NULL AND nr_seq_alter_venc_w::text <> '') then
			/*busca o valor de juros da alteracao de  vencimento do titulo*/

			begin
			select	coalesce(max(a.vl_multa),0) +
					coalesce(max(a.vl_juros),0) +
					coalesce(max(b.vl_saldo_titulo),0)
			into STRICT	vl_depositar_w
			from	alteracao_vencimento a,
					titulo_receber b
			where	a.nr_titulo	= b.nr_titulo
			and		a.nr_titulo	= nr_titulo_p
			and		a.nr_sequencia = nr_seq_alter_venc_w;
			exception when others then

					select	max(a.vl_saldo_titulo) +
							coalesce(max(obter_juros_multa_titulo(a.nr_titulo,dt_validade_w,'R','J')),0) +
							coalesce(max(obter_juros_multa_titulo(a.nr_titulo,dt_validade_w,'R','M')),0)
					into STRICT	vl_depositar_w
					from	titulo_receber a
					where	a.nr_titulo	= nr_titulo_p;

			end;

		else
			/*se não tiver alteracao de vencimento, calcula juros conforme data de limite informada no depoisto*/

			select	max(a.vl_saldo_titulo) +
					coalesce(max(obter_juros_multa_titulo(a.nr_titulo,dt_validade_w,'R','J')),0) +
					coalesce(max(obter_juros_multa_titulo(a.nr_titulo,dt_validade_w,'R','M')),0)
			into STRICT	vl_depositar_w
			from	titulo_receber a
			where	a.nr_titulo	= nr_titulo_p;

		end if;


	end if;

	if (coalesce(vl_cotacao_w,0) <> 0) then
		vl_depositar_estrang_w := (coalesce(vl_depositar_w,0) / coalesce(vl_cotacao_w,1));
		vl_complemento_w := (coalesce(vl_depositar_w,0) - coalesce(vl_depositar_estrang_w,0));
	else
		vl_cotacao_w := null;
		vl_depositar_estrang_w := null;
		vl_complemento_w := null;
		cd_moeda_w := null;
	end if;

	insert into deposito_ident_titulo(nr_sequencia,
		nm_usuario,
		dt_atualizacao,
		nm_usuario_nrec,
		dt_atualizacao_nrec,
		nr_seq_deposito,
		nr_titulo,
		vl_depositar,
		cd_moeda,
		vl_cotacao,
		vl_depositar_estrang,
		vl_complemento)
	values (nextval('deposito_ident_titulo_seq'),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nr_seq_deposito_p,
		nr_titulo_p,
		vl_depositar_w,
		cd_moeda_w,
		vl_cotacao_w,
		vl_depositar_estrang_w,
		vl_complemento_w);
end if;

if (coalesce(ie_commit_p,'N') = 'S') then
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE incluir_titulo_dep_ident ( nr_seq_deposito_p bigint, nr_titulo_p bigint, nm_usuario_p text, ie_commit_p text) FROM PUBLIC;

