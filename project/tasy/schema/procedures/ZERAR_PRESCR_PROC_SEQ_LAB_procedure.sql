-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE zerar_prescr_proc_seq_lab () AS $body$
DECLARE


nr_seq_grupo_w	 bigint;
ie_regra_w		 varchar(1);
dt_sequencia_w	 timestamp;
nr_seq_inic_w    lab_grupo_impressao.nr_seq_inic%type;

C01 CURSOR FOR
	SELECT
        a.nr_sequencia,
		substr(a.ie_regra_sequencia,1,1) ie_regra_sequencia,
        coalesce(CASE WHEN a.ie_cons_seq_inic_regra='S' THEN  coalesce(max(b.nr_seq_inicial), a.nr_seq_inic)  ELSE 0 END , 0) nr_seq_inic
	from
        lab_grupo_impressao a
        left join lab_grupo_imp_vig b ON ( b.nr_seq_grupo_impressao = a.nr_sequencia and
            clock_timestamp() between b.dt_inicio and b.dt_final)
	where
        (a.ie_regra_sequencia IS NOT NULL AND a.ie_regra_sequencia::text <> '')
    group by
        a.nr_sequencia, a.ie_regra_sequencia, a.nr_seq_inic, a.ie_cons_seq_inic_regra
    order by
        a.nr_sequencia;


BEGIN

open C01;
loop
fetch C01 into
        nr_seq_grupo_w,
		ie_regra_w,
        nr_seq_inic_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */

	select	coalesce(max(dt_sequencia),clock_timestamp())
	into STRICT	dt_sequencia_w
	from	lab_seq_grupo_imp
	where	nr_seq_grupo_imp		= nr_seq_grupo_w;

	if	((ie_regra_w = 'D') and (trunc(dt_sequencia_w,'dd') < trunc(clock_timestamp(),'dd'))) or
		((ie_regra_w = 'S') and (trunc(dt_sequencia_w,'day') < trunc(clock_timestamp(),'day'))) or
		((ie_regra_w = 'M') and (trunc(dt_sequencia_w,'month') < trunc(clock_timestamp(),'month'))) or
		((ie_regra_w = 'A') and (trunc(dt_sequencia_w,'year') < trunc(clock_timestamp(),'year'))) then

		insert into lab_seq_grupo_imp(nr_sequencia, nr_seq_grupo_imp, dt_sequencia,
						 nr_valor_seq, dt_atualizacao, nm_usuario)
		values (nextval('lab_seq_grupo_imp_seq'), nr_seq_grupo_w, trunc(clock_timestamp(),'dd'),
			nr_seq_inic_w, clock_timestamp(), 'Tasy');
	end if;
end loop;
close c01;

commit;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE zerar_prescr_proc_seq_lab () FROM PUBLIC;

