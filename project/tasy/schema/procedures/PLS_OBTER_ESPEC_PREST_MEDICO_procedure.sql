-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_obter_espec_prest_medico ( ds_especialidades_p INOUT text, ie_tipo_p bigint, nr_seq_prestador_p pls_prestador.nr_sequencia%type, cd_medico_p pls_prestador_medico.cd_medico%type, cd_especialidade_p especialidade_medica.cd_especialidade%type, nr_seq_end_p pls_end_guia_med_espec.nr_sequencia%type, nr_seq_area_atuacao_p pls_prest_med_espec_adic.nr_seq_area_atuacao%type, nr_seq_tipo_guia_p pls_tipo_guia_medico.nr_sequencia%type, ie_tipo_prestador_p text, ie_apenas_espec_prest_p text, ie_origem_p text, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE


ds_especialidades_w	varchar(4000)	:= '';
ie_insere_w		varchar(1)	:= 'S';

C01 CURSOR FOR
	SELECT	distinct
		coalesce(d.ds_espec_guia_medico,d.ds_especialidade) ds_especialidade,	-- CURSOR COPIADO DO CURSOR EXCLUÍDO 'C05' DO 'PLS_GERAR_GUIA_MEDICO'
		d.cd_especialidade cd_especialidade
	from	especialidade_medica 	d,
		pls_end_guia_med_espec	c,
		pls_prestador_med_espec a
	where	a.cd_especialidade	= d.cd_especialidade
	and	c.cd_especialidade	= a.cd_especialidade
	and	c.nr_seq_endereco	= nr_seq_end_p
	and	a.cd_pessoa_fisica	= cd_medico_p
	and	a.nr_seq_prestador	= nr_seq_prestador_p
	and	((coalesce(cd_especialidade_p::text, '') = '') or (a.cd_especialidade = cd_especialidade_p))
	and (a.nr_seq_area_atuacao = nr_seq_area_atuacao_p or coalesce(nr_seq_area_atuacao_p::text, '') = '')
	and	coalesce(a.ie_guia_medico,'S')	= 'S'
	and	clock_timestamp() between coalesce(a.dt_inicio_vigencia, clock_timestamp() - interval '1 days') and fim_dia(coalesce(a.dt_fim_vigencia, clock_timestamp()))
	order by
		ds_especialidade;

C02 CURSOR FOR
	SELECT	distinct
		coalesce(b.ds_espec_guia_medico,b.ds_especialidade) ds_especialidade,	-- CURSOR COPIADO DO CURSOR EXCLUÍDO 'C06' DO 'PLS_GERAR_GUIA_MEDICO'
		b.cd_especialidade cd_especialidade
	from	especialidade_medica 	b,
		pls_prestador_med_espec	a
	where	a.cd_especialidade 	= b.cd_especialidade
	and	a.nr_seq_prestador	= nr_seq_prestador_p
	and	a.cd_pessoa_fisica	= cd_medico_p
	and	((coalesce(cd_especialidade_p::text, '') = '') or (a.cd_especialidade = cd_especialidade_p))
	and (a.nr_seq_area_atuacao = nr_seq_area_atuacao_p or coalesce(nr_seq_area_atuacao_p::text, '') = '')
	and	coalesce(a.ie_endereco_principal,'N') = 'S'
	and	coalesce(a.ie_guia_medico,'S')	= 'S'
	and (coalesce(ie_apenas_espec_prest_p,'N') = 'N' or ie_tipo_prestador_p not in ('PJ1','PJ2')) -- Parâmetro 17 - Apresentar apenas especialidade do prestador PJ
	and	clock_timestamp() between coalesce(a.dt_inicio_vigencia, clock_timestamp() - interval '1 days') and fim_dia(coalesce(a.dt_fim_vigencia, clock_timestamp()));

C03 CURSOR FOR
	SELECT	distinct
		coalesce(b.ds_espec_guia_medico, b.ds_especialidade) ds_especialidade,	-- CURSOR COPIADO DA FUNCTION 'PLS_OBTER_ESPEC_PREST_GUIA_MED'
		b.cd_especialidade cd_especialidade
	from	especialidade_medica	b,
		pls_prestador_med_espec	a
	where	a.cd_especialidade	= b.cd_especialidade
	and	a.cd_pessoa_fisica	= cd_medico_p
	and	a.nr_seq_prestador	= nr_seq_prestador_p
	and	coalesce(a.ie_guia_medico,'S')	= 'S'
	and	clock_timestamp() between trunc(coalesce(a.dt_inicio_vigencia, clock_timestamp())) and fim_dia(coalesce(a.dt_fim_vigencia, clock_timestamp()))
	order by
		ds_especialidade;

C04 CURSOR FOR
	SELECT	coalesce(z.ds_espec_guia_medico, z.ds_especialidade) ds_especialidade,	-- CURSOR COPIADO DA FUNCTION 'PLS_OBTER_ESPEC_PREST_GUIA_MED'
		z.cd_especialidade cd_especialidade
	from	especialidade_medica		z,
		pls_prestador_medico		c,
		pls_endereco_guia_medico	b,
		pls_end_guia_med_espec		a
	where	b.cd_pessoa_fisica		= c.cd_medico
	and	z.cd_especialidade		= a.cd_especialidade
	and	a.nr_seq_endereco		= b.nr_sequencia
	and	c.nr_seq_prestador		= nr_seq_prestador_p
	and	c.cd_medico			= cd_medico_p
	and	b.nr_sequencia			= nr_seq_end_p
	and	a.cd_especialidade		= coalesce(cd_especialidade_p, a.cd_especialidade);

C05 CURSOR FOR
	SELECT	distinct
		coalesce(b.ds_espec_guia_medico, b.ds_especialidade) ds_especialidade,					-- CURSOR COPIADO DA FUNCTION 'PLS_OBTER_ESPEC_GUIA_MED_PREST'
		b.cd_especialidade cd_especialidade
	from	especialidade_medica	b,
		pls_prestador_med_espec	a
	where	a.cd_especialidade	= b.cd_especialidade
	and	a.nr_seq_prestador	= nr_seq_prestador_p
	and	a.ie_guia_medico 	= 'S'
	and	coalesce(a.cd_pessoa_fisica::text, '') = ''
	and	clock_timestamp() between trunc(coalesce(a.dt_inicio_vigencia, clock_timestamp())) and fim_dia(coalesce(a.dt_fim_vigencia, clock_timestamp()))
	order by
		ds_especialidade;

C06 CURSOR FOR
	SELECT	distinct
		coalesce(b.ds_espec_guia_medico, b.ds_especialidade) ds_especialidade,					-- CURSOR COPIADO DA FUNCTION 'PLS_OBTER_ESPEC_PREST'
		b.cd_especialidade cd_especialidade
	from	especialidade_medica	b,
		pls_prestador_med_espec	a
	where	a.cd_especialidade	= b.cd_especialidade
	and	a.nr_seq_prestador	= nr_seq_prestador_p
	and	coalesce(a.ie_guia_medico, 'S') = 'S'
	order by
		ds_especialidade;
BEGIN
if (ie_tipo_p = 1) then
	for r_c01_w in C01() loop
		if (nr_seq_tipo_guia_p IS NOT NULL AND nr_seq_tipo_guia_p::text <> '') then
			ie_insere_w := pls_obter_se_espec_tipo_guia(nr_seq_tipo_guia_p, nr_seq_prestador_p, r_c01_w.cd_especialidade, ie_origem_p);
		end if;
		if (ie_insere_w = 'S') then
			ds_especialidades_w	:= substr((ds_especialidades_w || r_c01_w.ds_especialidade || ' \ '),1,4000);
		end if;
	end loop;
elsif (ie_tipo_p = 2) then
	for r_c02_w in C02() loop
		if (nr_seq_tipo_guia_p IS NOT NULL AND nr_seq_tipo_guia_p::text <> '') then
			ie_insere_w := pls_obter_se_espec_tipo_guia(nr_seq_tipo_guia_p, nr_seq_prestador_p, r_c02_w.cd_especialidade, ie_origem_p);
		end if;
		if (ie_insere_w = 'S') then
			ds_especialidades_w	:= substr((ds_especialidades_w || r_c02_w.ds_especialidade || ' \ '),1,4000);
		end if;
	end loop;
elsif (ie_tipo_p = 3) then
	if (nr_seq_end_p IS NOT NULL AND nr_seq_end_p::text <> '') then
		for r_c04_w in C04() loop
			if (nr_seq_tipo_guia_p IS NOT NULL AND nr_seq_tipo_guia_p::text <> '') then
				ie_insere_w := pls_obter_se_espec_tipo_guia(nr_seq_tipo_guia_p, nr_seq_prestador_p, r_c04_w.cd_especialidade, ie_origem_p);
		end if;
			if (ie_insere_w = 'S') then
				ds_especialidades_w	:= substr((ds_especialidades_w || r_c04_w.ds_especialidade || ' \ '),1,4000);
			end if;
		end loop;
	else
		for r_c03_w in C03() loop
			if (nr_seq_tipo_guia_p IS NOT NULL AND nr_seq_tipo_guia_p::text <> '') then
				ie_insere_w := pls_obter_se_espec_tipo_guia(nr_seq_tipo_guia_p, nr_seq_prestador_p, r_c03_w.cd_especialidade, ie_origem_p);
		end if;
			if (ie_insere_w = 'S') then
				ds_especialidades_w	:= substr((ds_especialidades_w || r_c03_w.ds_especialidade || ' \ '),1,4000);
			end if;
		end loop;
	end if;
elsif (ie_tipo_p = 5) then
	for r_c05_w in C05() loop
		if (nr_seq_tipo_guia_p IS NOT NULL AND nr_seq_tipo_guia_p::text <> '') then
			ie_insere_w := pls_obter_se_espec_tipo_guia(nr_seq_tipo_guia_p, nr_seq_prestador_p, r_c05_w.cd_especialidade, ie_origem_p);
		end if;
		if (ie_insere_w = 'S') then
			ds_especialidades_w	:= substr((ds_especialidades_w || r_c05_w.ds_especialidade || ' \ '),1,4000);
		end if;
	end loop;
elsif (ie_tipo_p = 6) then
	for r_c06_w in C06() loop
		if (nr_seq_tipo_guia_p IS NOT NULL AND nr_seq_tipo_guia_p::text <> '') then
			ie_insere_w := pls_obter_se_espec_tipo_guia(nr_seq_tipo_guia_p, nr_seq_prestador_p, r_c06_w.cd_especialidade, ie_origem_p);
		end if;
		if (ie_insere_w = 'S') then
			ds_especialidades_w	:= substr((ds_especialidades_w || r_c06_w.ds_especialidade || ' \ '),1,4000);
		end if;
	end loop;
end if;

ds_especialidades_p := substr(ds_especialidades_w, 1, length(ds_especialidades_w) - 2);

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_obter_espec_prest_medico ( ds_especialidades_p INOUT text, ie_tipo_p bigint, nr_seq_prestador_p pls_prestador.nr_sequencia%type, cd_medico_p pls_prestador_medico.cd_medico%type, cd_especialidade_p especialidade_medica.cd_especialidade%type, nr_seq_end_p pls_end_guia_med_espec.nr_sequencia%type, nr_seq_area_atuacao_p pls_prest_med_espec_adic.nr_seq_area_atuacao%type, nr_seq_tipo_guia_p pls_tipo_guia_medico.nr_sequencia%type, ie_tipo_prestador_p text, ie_apenas_espec_prest_p text, ie_origem_p text, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

