-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_conta_reapresentacao ( nr_seq_protocolo_p bigint, cd_guia_p text, nr_seq_segurado_p bigint, ie_tipo_guia_p text, ie_opcao_p text, cd_estabelecimento_p bigint, nm_usuario_p text, nr_seq_conta_p INOUT bigint) AS $body$
DECLARE


nr_seq_item_w			bigint;
nr_seq_conta_w			bigint;
ie_tipo_item_w			varchar(1);
nr_seq_partic_w			bigint;
nr_seq_conta_ww			bigint;
nr_seq_procedimentos_ww		bigint;
nr_seq_materiais_ww		bigint;
nr_seq_partic_ww			bigint;
qt_participante_w			bigint;
nr_seq_cbo_saude_w		pls_proc_participante.nr_seq_cbo_saude%type;
nr_seq_diagnostico_w		pls_diagnostico_conta.nr_sequencia%type;
nr_seq_nasc_vivo_w		pls_diagnostico_nasc_vivo.nr_sequencia%type;
nr_seq_diag_obito_w		pls_diagnost_conta_obito.nr_sequencia%type;
nr_seq_tipo_acomodacao_w	pls_tipo_acomodacao.nr_sequencia%type;
nr_seq_guia_w			pls_guia_plano.nr_Sequencia%type;
nr_seq_item_tiss_w		pls_conta_proc_regra.nr_seq_item_tiss%type;
nr_seq_item_tiss_vinculo_w	pls_conta_mat_regra.nr_seq_item_tiss_vinculo%type;

C01 CURSOR FOR
	SELECT	nr_sequencia,
		'P'
	from	pls_conta_proc
	where	nr_seq_conta = nr_seq_conta_w
	and		ie_status not in ('M')
	and		coalesce(nr_seq_participante_hi::text, '') = ''
	
union all

	SELECT	nr_sequencia,
		'M'
	from	pls_conta_mat
	where	nr_seq_conta = nr_seq_conta_w
	and		ie_status not in ('M', 'D')
	order by 1;

C02 CURSOR(nr_seq_conta_pc		pls_conta.nr_sequencia%type) FOR
	SELECT	p.nr_sequencia nr_seq_item,
		'P' ie_tipo_item
	from	pls_conta_proc	p
	where	nr_seq_conta 	= nr_seq_conta_pc
	and		((vl_glosa > 0) or (exists (SELECT	1
												from 	pls_conta_proc	p2,
														pls_proc_participante par
												where	par.nr_seq_conta_proc = p.nr_sequencia
												and		par.nr_sequencia	= p2.nr_seq_participante_hi
												and		p2.vl_glosa	> 0)))
	and		ie_status != 'M'
	and	coalesce(nr_seq_participante_hi::text, '') = ''
	
union all

	select	nr_sequencia nr_seq_item,
		'M' ie_tipo_item
	from	pls_conta_mat
	where	nr_seq_conta = nr_seq_conta_pc
	and		coalesce(vl_glosa,0) > 0
	and		ie_status not in ('M','D')
	--and	nr_seq_participante_hi is null
	order by 1;

C03 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_proc_participante
	where	nr_seq_conta_proc 	= nr_seq_item_w
	and	ie_status 		<> 'U' 		
	order by 1;

C04 CURSOR(nr_seq_conta_proc_pc	pls_conta_proc.nr_sequencia%type) FOR
	SELECT	partic.nr_sequencia nr_seq_partic
	from	pls_proc_participante	partic,
			pls_conta_proc			p
	where	nr_seq_conta_proc 	= nr_seq_conta_proc_pc
	and		partic.nr_seq_conta_proc = p.nr_sequencia
	and		((p.vl_glosa > 0) or (exists (SELECT	1
												from 	pls_conta_proc	p2
												where	partic.nr_sequencia	= p2.nr_seq_participante_hi
												and		p2.vl_glosa	> 0)))
	order by 1;

-- Cursor para trazer todo o atendimento e n?o somente a conta principal OS 1075145
C05 CURSOR(	cd_guia_pc		pls_conta.cd_guia%type,
		nr_seq_segurado_pc	pls_segurado.nr_sequencia%type) FOR
	SELECT	c.nr_sequencia nr_seq_conta,
		c.nr_seq_prestador_exec,
		c.nr_seq_grau_partic
	from	pls_conta	c,
		pls_protocolo_conta	p
	where	c.cd_guia_ok	= cd_guia_pc
	and	c.nr_seq_segurado = nr_seq_segurado_pc
	and	c.ie_status 	<> 'C'
	and		p.nr_sequencia = c.nr_seq_protocolo
	and		((coalesce(p.ie_apresentacao::text, '') = '') or (ie_apresentacao = 'A'));

-- Cursor para trazer os itens que ficaram pendentes com a conta fechada devido ao reprocessamento de conta OS 1075145
C06 CURSOR(nr_seq_conta_pc		pls_conta.nr_sequencia%type) FOR
	SELECT	a.nr_sequencia nr_seq_item,
		'P' ie_tipo_item
	from	pls_conta_proc a,
		pls_conta b
	where	b.nr_sequencia = a.nr_seq_conta
	and	b.nr_sequencia = nr_seq_conta_pc
	and	b.ie_status = 'F'
	and	a.ie_status = 'P'
	
union all

	SELECT	a.nr_sequencia nr_seq_item,
		'M' ie_tipo_item
	from	pls_conta_mat a,
		pls_conta b
	where	b.nr_sequencia = a.nr_seq_conta
	and	b.nr_sequencia = nr_seq_conta_pc
	and	b.ie_status = 'F'
	and	a.ie_status = 'P';
	
C07 CURSOR FOR
	SELECT	c.nr_sequencia
	from	pls_conta	c,
			pls_protocolo_conta	p
	where	c.cd_guia_ok	= cd_guia_p
	and	c.nr_seq_segurado = nr_seq_segurado_p
	and	c.ie_status 	<> 'C'
	and	(c.nr_seq_analise IS NOT NULL AND c.nr_seq_analise::text <> '')
	and		p.nr_sequencia = c.nr_seq_protocolo
	and		((coalesce(p.ie_apresentacao::text, '') = '') or (ie_apresentacao = 'A'));
	
C08 CURSOR(nr_seq_conta_pc		pls_conta.nr_sequencia%type) FOR
	SELECT	p.nr_sequencia
	from	pls_conta	c,
		pls_diagnostico_conta	p
	where	c.nr_sequencia	= p.nr_seq_conta
	and	c.nr_sequencia = nr_seq_conta_pc
	and	c.ie_status 	<> 'C';
	
C09 CURSOR(nr_seq_conta_pc		pls_conta.nr_sequencia%type) FOR
	SELECT	p.nr_sequencia
	from	pls_conta	c,
		pls_diagnostico_nasc_vivo	p
	where	c.nr_sequencia	= p.nr_seq_conta
	and	c.nr_sequencia = nr_seq_conta_pc
	and	c.ie_status 	<> 'C';
	
C10 CURSOR(nr_seq_conta_pc		pls_conta.nr_sequencia%type) FOR
	SELECT	p.nr_sequencia
	from	pls_conta	c,
		pls_diagnost_conta_obito	p
	where	c.nr_sequencia	= p.nr_seq_conta
	and	c.nr_sequencia = nr_seq_conta_pc
	and	c.ie_status 	<> 'C';

BEGIN

if (ie_opcao_p <> 'N') then
	
	select	max(c.nr_sequencia) 	--OS 1266039 - prefer?ncia para contas de interna??o
	into STRICT	nr_seq_conta_w	
	from	pls_conta	c,
			pls_protocolo_conta	p
	where	c.cd_guia 		= cd_guia_p
	and		c.ie_tipo_guia	= ie_tipo_guia_p
	and		c.nr_seq_segurado	= nr_seq_segurado_p
	and		c.ie_status		<> 'C'
	and		coalesce(c.nr_seq_conta_referencia::text, '') = ''
	and		p.nr_sequencia = c.nr_seq_protocolo
	and		((coalesce(p.ie_apresentacao::text, '') = '') or (ie_apresentacao = 'A'));

	select	max(coalesce(nr_seq_conta_w,nr_sequencia))
	into STRICT	nr_seq_conta_w
	from	pls_conta
	where	((cd_guia 				= cd_guia_p) or
			(cd_guia_referencia	= cd_guia_p AND ie_tipo_guia			= '5'))
	and		nr_seq_segurado	= nr_seq_segurado_p
	and		ie_tipo_guia	<> '6'
	and		ie_status		<> 'C'
	and		coalesce(nr_seq_conta_referencia::text, '') = '';
	
	if (nr_seq_conta_w IS NOT NULL AND nr_seq_conta_w::text <> '') then
		select	nextval('pls_conta_seq')
		into STRICT	nr_seq_conta_ww
		;

		nr_seq_conta_p := nr_seq_conta_ww;
		
		select	nr_seq_tipo_acomodacao,
			nr_seq_guia
		into STRICT	nr_seq_tipo_acomodacao_w,
			nr_seq_guia_w
		from	pls_conta
		where	nr_sequencia = nr_seq_conta_w;
		
		if (coalesce(nr_seq_tipo_acomodacao_w::text, '') = '') then
			select	nr_seq_tipo_acomodacao
			into STRICT	nr_seq_tipo_acomodacao_w
			from	pls_guia_plano
			where	nr_sequencia = nr_seq_guia_w;
		end if;
		
		insert into pls_conta(cd_ans, cd_cnes, cd_conta_cred,
			cd_conta_deb, cd_conta_glosa_cred, cd_conta_glosa_deb,
			cd_estabelecimento, cd_guia, cd_guia_prestador,
			cd_guia_referencia, cd_historico, cd_medico_executor,
			cd_medico_solicitante, cd_senha, ds_observacao,
			dt_alta, dt_atualizacao, dt_atualizacao_nrec,
			dt_autorizacao, dt_emissao, dt_entrada, cd_senha_externa,
			dt_validade_senha, ie_atend_rn_sala_parto, ie_baixo_peso,
			ie_carater_internacao, ie_complicacao_neonatal, ie_complicacao_puerperio,
			ie_gestacao, ie_indicacao_acidente, ie_obito,
			ie_obito_mulher, ie_parto_cesaria, ie_parto_normal,
			ie_regime_internacao, ie_status, ie_tipo_beneficiario,
			ie_tipo_doenca, ie_tipo_faturamento, ie_tipo_guia, ie_tipo_plano,
			ie_tipo_segurado, ie_transtorno, nm_usuario,
			nm_usuario_nrec, nr_crm_exec, nr_seq_cbo_saude,
			nr_seq_clinica, nr_seq_conta_referencia, nr_seq_grau_partic,
			nr_seq_guia, nr_seq_plano, nr_seq_prestador,
			nr_seq_prestador_exec, nr_seq_prot_conta, nr_seq_protocolo,
			nr_seq_regra_ctb_cred, nr_seq_regra_ctb_deb, nr_seq_saida_consulta,
			nr_seq_saida_int, nr_seq_saida_spsadt, nr_seq_segurado,
			nr_seq_tipo_acomodacao, nr_seq_tipo_atendimento, nr_sequencia,
			qt_diarias_sip, qt_nasc_mortos, qt_nasc_vivos,
			qt_nasc_vivos_prematuros, qt_nasc_vivos_termo, qt_obito_precoce,
			qt_obito_tardio, sg_conselho_exec, sg_conselho_solic,
			uf_crm_exec, vl_cobrado, vl_coparticipacao,
			vl_diarias, vl_gases, vl_glosa,
			vl_materiais, vl_medicamentos, vl_opm,
			vl_pacotes, vl_procedimentos, vl_saldo,
			vl_taxas, vl_total, vl_total_beneficiario,
			cd_cooperativa, nr_seq_conselho_exec,ie_tipo_consulta,
			ie_origem_conta, ie_recem_nascido, dt_atendimento_referencia,
			dt_atendimento, ie_cobertura_especial, ie_regime_atendimento,
			ie_saude_ocupacional)
		(SELECT	cd_ans, cd_cnes, cd_conta_cred,
			cd_conta_deb, cd_conta_glosa_cred, cd_conta_glosa_deb,
			cd_estabelecimento_p, cd_guia, cd_guia_prestador,
			cd_guia_referencia, cd_historico, cd_medico_executor, cd_medico_solicitante,
			CASE WHEN ie_tipo_guia_p='4' THEN coalesce(cd_senha_externa,cd_senha)  ELSE cd_senha END , 
			ds_observacao, dt_alta, dt_atualizacao, dt_atualizacao_nrec,
			dt_autorizacao, dt_emissao, dt_entrada, cd_senha_externa,
			dt_validade_senha, ie_atend_rn_sala_parto, ie_baixo_peso,
			ie_carater_internacao, ie_complicacao_neonatal, ie_complicacao_puerperio,
			ie_gestacao, ie_indicacao_acidente, ie_obito,
			ie_obito_mulher, ie_parto_cesaria, ie_parto_normal,
			ie_regime_internacao, 'U', ie_tipo_beneficiario,
			ie_tipo_doenca, ie_tipo_faturamento, ie_tipo_guia, ie_tipo_plano,
			ie_tipo_segurado, ie_transtorno, nm_usuario,
			nm_usuario_nrec, nr_crm_exec, nr_seq_cbo_saude,
			nr_seq_clinica, null, nr_seq_grau_partic,
			nr_seq_guia, nr_seq_plano, nr_seq_prestador,
			nr_seq_prestador_exec, nr_seq_prot_conta, nr_seq_protocolo_p,
			nr_seq_regra_ctb_cred, nr_seq_regra_ctb_deb, nr_seq_saida_consulta,
			nr_seq_saida_int, nr_seq_saida_spsadt, nr_seq_segurado,
			nr_seq_tipo_acomodacao_w, nr_seq_tipo_atendimento, nr_seq_conta_ww,
			qt_diarias_sip, qt_nasc_mortos, qt_nasc_vivos,
			qt_nasc_vivos_prematuros, qt_nasc_vivos_termo, qt_obito_precoce,
			qt_obito_tardio, sg_conselho_exec, sg_conselho_solic,
			uf_crm_exec, vl_cobrado, vl_coparticipacao,
			vl_diarias, vl_gases, vl_glosa,
			vl_materiais, vl_medicamentos, vl_opm,
			vl_pacotes, vl_procedimentos, vl_saldo,
			vl_taxas, vl_total, vl_total_beneficiario,
			cd_cooperativa, nr_seq_conselho_exec,ie_tipo_consulta,
			'D', ie_recem_nascido, dt_atendimento_referencia,
			coalesce(dt_atendimento, dt_atendimento_referencia), ie_cobertura_especial, ie_regime_atendimento,
			ie_saude_ocupacional
		from	pls_conta
		where	nr_sequencia	= nr_seq_conta_w);


		CALL pls_conta_tiss_pck.cria_copia_registro(nr_seq_conta_w, nr_seq_conta_ww, nm_usuario_p);
		
		
		if (ie_opcao_p = 'CC') then
		
			for r_C08_w in C08(nr_seq_conta_w) loop
			
				select	nextval('pls_diagnostico_conta_seq')
				into STRICT	nr_seq_diagnostico_w
				;

				insert into pls_diagnostico_conta(
					ie_classificacao, ie_indicacao_acidente, cd_doenca,	
					ds_diagnostico, nr_sequencia, nr_seq_conta,
					dt_atualizacao, nm_usuario, dt_atualizacao_nrec,
					nm_usuario_nrec, ie_tipo_doenca, ie_tipo_doenca_imp,
					ie_indicacao_acidente_imp, ie_classificacao_imp, cd_doenca_imp,
					ds_diagnostico_imp, ds_doenca_imp, nm_tabela_imp,
					nr_declaracao_obito_imp, ie_estagio_complemento, nr_seq_imp)
				(SELECT	ie_classificacao, ie_indicacao_acidente, cd_doenca,	
					ds_diagnostico, nr_seq_diagnostico_w, nr_seq_conta_ww,
					dt_atualizacao, nm_usuario, dt_atualizacao_nrec,
					nm_usuario_nrec, ie_tipo_doenca, ie_tipo_doenca_imp,
					ie_indicacao_acidente_imp, ie_classificacao_imp, cd_doenca_imp,
					ds_diagnostico_imp, ds_doenca_imp, nm_tabela_imp,
					nr_declaracao_obito_imp, ie_estagio_complemento, nr_seq_imp 
				from	pls_diagnostico_conta
				where	nr_sequencia	= r_C08_w.nr_sequencia);
			
			end loop;
			
			for r_C09_w in C09(nr_seq_conta_w) loop
			
				select	nextval('pls_diagnostico_nasc_vivo_seq')
				into STRICT	nr_seq_nasc_vivo_w
				;

				insert into pls_diagnostico_nasc_vivo(
					nr_decl_nasc_vivo, nr_sequencia, nr_seq_conta,
					dt_atualizacao, nm_usuario, dt_atualizacao_nrec,
					nm_usuario_nrec, nr_decl_nasc_vivo_imp, ie_indicador_dorn_imp,
					ie_indicador_dorn, nr_seq_imp)
				(SELECT	nr_decl_nasc_vivo, nr_seq_nasc_vivo_w, nr_seq_conta_ww,
					dt_atualizacao, nm_usuario, dt_atualizacao_nrec,
					nm_usuario_nrec, nr_decl_nasc_vivo_imp, ie_indicador_dorn_imp,
					ie_indicador_dorn, nr_seq_imp 
				from	pls_diagnostico_nasc_vivo
				where	nr_sequencia	= r_C09_w.nr_sequencia);
			
			end loop;

			for r_C10_w in C10(nr_seq_conta_w) loop
			
				select	nextval('pls_diagnost_conta_obito_seq')
				into STRICT	nr_seq_diag_obito_w
				;

				insert into pls_diagnost_conta_obito(
					cd_doenca, nr_declaracao_obito, ie_indicador_dorn,
					nr_sequencia, nr_seq_conta, dt_atualizacao,
					nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
					cd_doenca_imp, ds_doenca, ds_doenca_imp,
					nm_tabela, nm_tabela_imp, nr_declaracao_obito_imp,
					ie_indicador_dorn_imp, nr_seq_imp)
				(SELECT	cd_doenca, nr_declaracao_obito, ie_indicador_dorn,
					nr_seq_diag_obito_w, nr_seq_conta_ww, dt_atualizacao,
					nm_usuario,dt_atualizacao_nrec, nm_usuario_nrec,
					cd_doenca_imp, ds_doenca, ds_doenca_imp,
					nm_tabela, nm_tabela_imp, nr_declaracao_obito_imp,
					ie_indicador_dorn_imp, nr_seq_imp 
				from	pls_diagnost_conta_obito
				where	nr_sequencia	= r_C10_w.nr_sequencia);
			
			end loop;
		
			open C07;
			loop
			fetch C07 into	
				nr_seq_conta_w;
			EXIT WHEN NOT FOUND; /* apply on C07 */
				begin
					open C01;
					loop
					fetch C01 into
						nr_seq_item_w,
						ie_tipo_item_w;
					EXIT WHEN NOT FOUND; /* apply on C01 */
						begin
						if (ie_tipo_item_w = 'P') then
							select	nextval('pls_conta_proc_seq')
							into STRICT	nr_seq_procedimentos_ww
							;

							insert into pls_conta_proc(cd_conta_cred, cd_conta_deb, cd_conta_glosa_cred,
								cd_conta_glosa_deb, cd_historico, cd_historico_glosa,
								cd_procedimento, ds_justificativa, ds_log,
								dt_atualizacao, dt_atualizacao_nrec, dt_fim_proc,
								dt_inicio_proc, dt_liberacao, dt_procedimento,
								ie_cobranca_prevista, ie_origem_proced, ie_situacao,
								ie_status, ie_tecnica_utilizada, ie_tipo_despesa,
								ie_via_acesso, nm_usuario, nm_usuario_liberacao,
								nm_usuario_nrec, nr_seq_conta, nr_seq_dados_proc,
								nr_seq_grupo_ans, nr_seq_honorario_crit, nr_seq_pacote,
								nr_seq_regra, nr_seq_regra_ctb_cred, nr_seq_regra_ctb_deb,
								nr_seq_regra_horario, nr_seq_regra_liberacao, nr_seq_regra_pos_estab,
								nr_seq_tiss_tabela, nr_sequencia, qt_procedimento,
								tx_item, tx_participacao, vl_anestesista,
								vl_auxiliares, vl_beneficiario, vl_custo_operacional,
								vl_glosa, vl_liberado, vl_materiais,
								vl_medico, vl_participacao, vl_procedimento,
								vl_saldo, vl_unitario, qt_procedimento_imp,
								vl_unitario_imp, vl_procedimento_imp)
							(SELECT	cd_conta_cred, cd_conta_deb, cd_conta_glosa_cred,
								cd_conta_glosa_deb, cd_historico, cd_historico_glosa,
								cd_procedimento, ds_justificativa, ds_log,
								dt_atualizacao, dt_atualizacao_nrec, dt_fim_proc,
								dt_inicio_proc, dt_liberacao, dt_procedimento,
								ie_cobranca_prevista, ie_origem_proced, ie_situacao,
								'U', ie_tecnica_utilizada, ie_tipo_despesa,
								ie_via_acesso, nm_usuario, nm_usuario_liberacao,
								nm_usuario_nrec, nr_seq_conta_ww, nr_seq_dados_proc,
								nr_seq_grupo_ans, nr_seq_honorario_crit, nr_seq_pacote,
								nr_seq_regra, nr_seq_regra_ctb_cred, nr_seq_regra_ctb_deb,
								nr_seq_regra_horario, nr_seq_regra_liberacao, nr_seq_regra_pos_estab,
								nr_seq_tiss_tabela, nr_seq_procedimentos_ww, qt_procedimento,
								tx_item, tx_participacao, vl_anestesista,
								vl_auxiliares, vl_beneficiario, vl_custo_operacional,
								vl_glosa, vl_liberado, vl_materiais,
								vl_medico, vl_participacao, vl_procedimento,
								vl_saldo, vl_unitario, qt_procedimento_imp,
								vl_unitario_imp, vl_procedimento_imp
							from	pls_conta_proc
							where	nr_sequencia	= nr_seq_item_w);
							
							
							select	max(a.nr_seq_item_tiss),
								max(a.nr_seq_item_tiss_vinculo)
							into STRICT	nr_seq_item_tiss_w,
								nr_seq_item_tiss_vinculo_w
							from	pls_conta_proc_regra	a
							where	a.nr_sequencia		= nr_seq_item_w;
							
							if (nr_seq_item_tiss_w IS NOT NULL AND nr_seq_item_tiss_w::text <> '') then
							
								CALL pls_cta_proc_mat_regra_pck.cria_registro_regra_proc(nr_seq_procedimentos_ww, nm_usuario_p);
								
								CALL pls_cta_proc_mat_regra_pck.atualiza_seq_tiss_proc(nr_seq_procedimentos_ww, nr_seq_item_tiss_w, nr_seq_item_tiss_vinculo_w, nm_usuario_p);
								
							end if;

							open C03;
							loop
							fetch C03 into
								nr_seq_partic_w;
							EXIT WHEN NOT FOUND; /* apply on C03 */
								begin

								select	nextval('pls_proc_participante_seq')
								into STRICT	nr_seq_partic_ww
								;

								insert 	into	pls_proc_participante(	cd_cbo_saude_imp, cd_cgc_imp, cd_guia,
										cd_medico, cd_medico_imp, cd_prestador_imp,
										cd_sistema_ant, dt_atualizacao, dt_atualizacao_nrec,
										ie_atualizado, ie_conselho_profissional, ie_funcao_medico_imp,
										ie_gerada_cta_honorario, ie_glosa, ie_insercao_manual,
										ie_status, ie_status_pagamento, nm_medico_executor_imp,
										nm_usuario, nm_usuario_nrec, nr_cpf_imp,
										nr_crm_imp, nr_seq_cbo_saude, nr_seq_conselho,
										nr_seq_conta_proc, nr_seq_grau_partic, nr_seq_honorario_crit,
										nr_seq_prestador, nr_seq_prestador_pgto, nr_seq_regra,
										nr_sequencia, qt_liberada, sg_conselho_imp,
										uf_conselho, uf_crm_imp, vl_apresentado,
										vl_calculado, vl_calculado_ant, vl_digitado_complemento,
										vl_glosa, vl_honorario_medico, vl_participante)
								( SELECT	cd_cbo_saude_imp, cd_cgc_imp, cd_guia,
										cd_medico, cd_medico_imp, cd_prestador_imp,
										cd_sistema_ant, clock_timestamp(), clock_timestamp(),
										ie_atualizado, ie_conselho_profissional, ie_funcao_medico_imp,
										null, ie_glosa, ie_insercao_manual,
										'U', ie_status_pagamento, nm_medico_executor_imp,
										nm_usuario, nm_usuario_nrec, nr_cpf_imp,
										nr_crm_imp, nr_seq_cbo_saude, nr_seq_conselho,
										nr_seq_procedimentos_ww, nr_seq_grau_partic, nr_seq_honorario_crit,
										nr_seq_prestador, nr_seq_prestador_pgto, nr_seq_regra,
										nr_seq_partic_ww, qt_liberada, sg_conselho_imp,
										uf_conselho, uf_crm_imp, vl_apresentado,
										vl_calculado, vl_calculado_ant, vl_digitado_complemento,
										vl_glosa, vl_honorario_medico, vl_participante
								from	pls_proc_participante
								where	nr_sequencia = nr_seq_partic_w);

								end;
							end loop;
							close C03;
						else
							select	nextval('pls_conta_mat_seq')
							into STRICT	nr_seq_materiais_ww
							;
							insert into pls_conta_mat(cd_conta_cred, cd_conta_deb, cd_conta_glosa_cred,
								cd_conta_glosa_deb, cd_historico, cd_historico_glosa,
								dt_atendimento, dt_atualizacao, dt_atualizacao_nrec,
								dt_fim_atend, dt_inicio_atend, dt_liberacao,
								ie_origem_preco, ie_situacao, ie_status,
								ie_tipo_despesa, nm_usuario, nm_usuario_liberacao,
								nm_usuario_nrec, nr_seq_conta, nr_seq_grupo_ans,
								nr_seq_material, nr_seq_regra, nr_seq_regra_ctb_cred,
								nr_seq_regra_ctb_deb, nr_seq_regra_pos_estab, nr_seq_tiss_tabela,
								nr_sequencia, qt_material, tx_participacao,
								tx_reducao_acrescimo, vl_beneficiario, vl_gerado,
								vl_glosa, vl_liberado, vl_material,
								vl_participacao, vl_saldo, vl_unitario,
								vl_material_imp, vl_unitario_imp, qt_material_imp)
							(SELECT	cd_conta_cred, cd_conta_deb, cd_conta_glosa_cred,
								cd_conta_glosa_deb, cd_historico, cd_historico_glosa,
								dt_atendimento, dt_atualizacao, dt_atualizacao_nrec,
								dt_fim_atend, dt_inicio_atend, dt_liberacao,
								ie_origem_preco, ie_situacao, 'U',
								ie_tipo_despesa, nm_usuario, nm_usuario_liberacao,
								nm_usuario_nrec, nr_seq_conta_ww, nr_seq_grupo_ans,
								nr_seq_material, nr_seq_regra, nr_seq_regra_ctb_cred,
								nr_seq_regra_ctb_deb, nr_seq_regra_pos_estab, nr_seq_tiss_tabela,
								nr_seq_materiais_ww, qt_material, tx_participacao,
								tx_reducao_acrescimo, vl_beneficiario, vl_gerado,
								vl_glosa, vl_liberado, vl_material,
								vl_participacao, vl_saldo, vl_unitario,
								vl_material_imp, vl_unitario_imp, qt_material_imp
							from	pls_conta_mat
							where	nr_Sequencia	= nr_seq_item_w);
							
							
							select	max(a.nr_seq_item_tiss),
								max(a.nr_seq_item_tiss_vinculo)
							into STRICT	nr_seq_item_tiss_w,
								nr_seq_item_tiss_vinculo_w
							from	pls_conta_mat_regra	a
							where	a.nr_sequencia		= nr_seq_item_w;
							
							if (nr_seq_item_tiss_w IS NOT NULL AND nr_seq_item_tiss_w::text <> '') then
							
								CALL pls_cta_proc_mat_regra_pck.cria_registro_regra_mat(nr_seq_materiais_ww, nm_usuario_p);
								
								CALL pls_cta_proc_mat_regra_pck.atualiza_seq_tiss_mat(nr_seq_materiais_ww, nr_seq_item_tiss_w, nr_seq_item_tiss_vinculo_w, nm_usuario_p);
								
							end if;
						end if;
						end;
					end loop;
					close C01;
				end;
			end loop;
			close C07;
		elsif (ie_opcao_p = 'CG') then --Iterns glosados
			--Abre o cursor das contas do atendimento
			for r_C05_w in C05(cd_guia_p, nr_seq_segurado_p) loop
				-- Busca o CBO do prestador da conta
				nr_seq_cbo_saude_w := pls_obter_cbo_prestador(r_C05_w.nr_seq_prestador_exec);
				-- Abre o cursor dos itens glsoados
				for r_C02_w in C02(r_C05_w.nr_seq_conta) loop
					-- Se procedimento
					if (r_C02_w.ie_tipo_item = 'P') then
						select	nextval('pls_conta_proc_seq')
						into STRICT	nr_seq_procedimentos_ww
						;

						insert into pls_conta_proc(cd_conta_cred, cd_conta_deb, cd_conta_glosa_cred,
							cd_conta_glosa_deb, cd_historico, cd_historico_glosa,
							cd_procedimento, ds_justificativa, ds_log,
							dt_atualizacao, dt_atualizacao_nrec, dt_fim_proc,
							dt_inicio_proc, dt_liberacao, dt_procedimento,
							ie_cobranca_prevista, ie_origem_proced, ie_situacao,
							ie_status, ie_tecnica_utilizada, ie_tipo_despesa,
							ie_via_acesso, nm_usuario, nm_usuario_liberacao,
							nm_usuario_nrec, nr_seq_conta, nr_seq_dados_proc,
							nr_seq_grupo_ans, nr_seq_honorario_crit, nr_seq_pacote,
							nr_seq_regra, nr_seq_regra_ctb_cred, nr_seq_regra_ctb_deb,
							nr_seq_regra_horario, nr_seq_regra_liberacao, nr_seq_regra_pos_estab,
							nr_seq_tiss_tabela, nr_sequencia, qt_procedimento,
							tx_item, tx_participacao, vl_anestesista,
							vl_auxiliares, vl_beneficiario, vl_custo_operacional,
							vl_glosa, vl_liberado, vl_materiais,
							vl_medico, vl_participacao, vl_procedimento,
							vl_saldo, vl_unitario, qt_procedimento_imp,
							vl_unitario_imp, vl_procedimento_imp)
						(SELECT	cd_conta_cred, cd_conta_deb, cd_conta_glosa_cred,
							cd_conta_glosa_deb, cd_historico, cd_historico_glosa,
							cd_procedimento, ds_justificativa, ds_log,
							dt_atualizacao, dt_atualizacao_nrec, dt_fim_proc,
							dt_inicio_proc, dt_liberacao, dt_procedimento,
							ie_cobranca_prevista, ie_origem_proced, ie_situacao,
							'U', ie_tecnica_utilizada, ie_tipo_despesa,
							ie_via_acesso, nm_usuario, nm_usuario_liberacao,
							nm_usuario_nrec, nr_seq_conta_ww, nr_seq_dados_proc,
							nr_seq_grupo_ans, nr_seq_honorario_crit, nr_seq_pacote,
							nr_seq_regra, nr_seq_regra_ctb_cred, nr_seq_regra_ctb_deb,
							nr_seq_regra_horario, nr_seq_regra_liberacao, nr_seq_regra_pos_estab,
							nr_seq_tiss_tabela, nr_seq_procedimentos_ww, qt_procedimento,
							tx_item, tx_participacao, vl_anestesista,
							vl_auxiliares, vl_beneficiario, vl_custo_operacional,
							vl_glosa, vl_liberado, vl_materiais,
							vl_medico, vl_participacao, vl_procedimento,
							vl_saldo, vl_unitario, qt_procedimento_imp,
							vl_unitario_imp, vl_procedimento_imp
						from	pls_conta_proc
						where	nr_sequencia	= r_C02_w.nr_seq_item);
						
						
						select	max(a.nr_seq_item_tiss),
							max(a.nr_seq_item_tiss_vinculo)
						into STRICT	nr_seq_item_tiss_w,
							nr_seq_item_tiss_vinculo_w
						from	pls_conta_proc_regra	a
						where	a.nr_sequencia		= r_C02_w.nr_seq_item;
						
						if (nr_seq_item_tiss_w IS NOT NULL AND nr_seq_item_tiss_w::text <> '') then
						
							CALL pls_cta_proc_mat_regra_pck.cria_registro_regra_proc(nr_seq_procedimentos_ww, nm_usuario_p);
							
							CALL pls_cta_proc_mat_regra_pck.atualiza_seq_tiss_proc(nr_seq_procedimentos_ww, nr_seq_item_tiss_w, nr_seq_item_tiss_vinculo_w, nm_usuario_p);
														
						end if;
						
						-- Abre o cursor dos participantes dos procedimentos glosados
						for r_C04_w in C04(r_C02_w.nr_seq_item) loop
							select	nextval('pls_proc_participante_seq')
							into STRICT	nr_seq_partic_ww
							;

							insert 	into	pls_proc_participante(	cd_cbo_saude_imp, cd_cgc_imp, cd_guia,
									cd_medico, cd_medico_imp, cd_prestador_imp,
									cd_sistema_ant, dt_atualizacao, dt_atualizacao_nrec,
									ie_atualizado, ie_conselho_profissional, ie_funcao_medico_imp,
									ie_gerada_cta_honorario, ie_glosa, ie_insercao_manual,
									ie_status, ie_status_pagamento, nm_medico_executor_imp,
									nm_usuario, nm_usuario_nrec, nr_cpf_imp,
									nr_crm_imp, nr_seq_cbo_saude, nr_seq_conselho,
									nr_seq_conta_proc, nr_seq_grau_partic, nr_seq_honorario_crit,
									nr_seq_prestador, nr_seq_prestador_pgto, nr_seq_regra,
									nr_sequencia, qt_liberada, sg_conselho_imp,
									uf_conselho, uf_crm_imp, vl_apresentado,
									vl_calculado, vl_calculado_ant, vl_digitado_complemento,
									vl_glosa, vl_honorario_medico, vl_participante)
							( SELECT	cd_cbo_saude_imp, cd_cgc_imp, cd_guia,
									cd_medico, cd_medico_imp, cd_prestador_imp,
									cd_sistema_ant, dt_atualizacao, dt_atualizacao_nrec,
									ie_atualizado, ie_conselho_profissional, ie_funcao_medico_imp,
									null, ie_glosa, ie_insercao_manual,
									'U', ie_status_pagamento, nm_medico_executor_imp,
									nm_usuario, nm_usuario_nrec, nr_cpf_imp,
									nr_crm_imp, nr_seq_cbo_saude, nr_seq_conselho,
									nr_seq_procedimentos_ww, nr_seq_grau_partic, nr_seq_honorario_crit,
									nr_seq_prestador, nr_seq_prestador_pgto, nr_seq_regra,
									nr_seq_partic_ww, qt_liberada, sg_conselho_imp,
									uf_conselho, uf_crm_imp, vl_apresentado,
									vl_calculado, vl_calculado_ant, vl_digitado_complemento,
									vl_glosa, vl_honorario_medico, vl_participante
							from	pls_proc_participante
							where	nr_sequencia = r_C04_w.nr_seq_partic);
						end loop;
						-- Tratativa realizada para colocar o prestador executor da conta como participante da conta de reapresenta??o

						-- Como a passou a trazer todas as contas do atendimento, ter? v?rios prestadores, sendo assim inserimos o prestador

						-- executor da conta como participante para depois ser gerado honor?rio do mesmo

					/*	if	(r_C05_w.nr_seq_prestador_exec is not null) then
							insert 	into	pls_proc_participante
								(	dt_atualizacao, dt_atualizacao_nrec, ie_status,
									nm_usuario, nm_usuario_nrec, nr_seq_cbo_saude,
									nr_seq_conta_proc, nr_seq_grau_partic, nr_seq_prestador,
									nr_sequencia)
							values	(	sysdate, sysdate, 'U',
									nm_usuario_p, nm_usuario_p, nr_seq_cbo_saude_w,
									nr_seq_procedimentos_ww, r_C05_w.nr_seq_grau_partic, r_C05_w.nr_seq_prestador_exec,
									pls_proc_participante_seq.nextval);
						end if;*/
					else -- Se material
						select	nextval('pls_conta_mat_seq')
						into STRICT	nr_seq_materiais_ww
						;

						insert into pls_conta_mat(cd_conta_cred, cd_conta_deb, cd_conta_glosa_cred,
							cd_conta_glosa_deb, cd_historico, cd_historico_glosa,
							dt_atendimento, dt_atualizacao, dt_atualizacao_nrec,
							dt_fim_atend, dt_inicio_atend, dt_liberacao,
							ie_origem_preco, ie_situacao, ie_status,
							ie_tipo_despesa, nm_usuario, nm_usuario_liberacao,
							nm_usuario_nrec, nr_seq_conta, nr_seq_grupo_ans,
							nr_seq_material, nr_seq_regra, nr_seq_regra_ctb_cred,
							nr_seq_regra_ctb_deb, nr_seq_regra_pos_estab, nr_seq_tiss_tabela,
							nr_sequencia, qt_material, tx_participacao,
							tx_reducao_acrescimo, vl_beneficiario, vl_gerado,
							vl_glosa, vl_liberado, vl_material,
							vl_participacao, vl_saldo, vl_unitario,
							vl_material_imp, vl_unitario_imp, qt_material_imp)
						(SELECT	cd_conta_cred, cd_conta_deb, cd_conta_glosa_cred,
							cd_conta_glosa_deb, cd_historico, cd_historico_glosa,
							dt_atendimento, dt_atualizacao, dt_atualizacao_nrec,
							dt_fim_atend, dt_inicio_atend, dt_liberacao,
							ie_origem_preco, ie_situacao, 'U',
							ie_tipo_despesa, nm_usuario, nm_usuario_liberacao,
							nm_usuario_nrec, nr_seq_conta_ww, nr_seq_grupo_ans,
							nr_seq_material, nr_seq_regra, nr_seq_regra_ctb_cred,
							nr_seq_regra_ctb_deb, nr_seq_regra_pos_estab, nr_seq_tiss_tabela,
							nr_seq_materiais_ww, qt_material, tx_participacao,
							tx_reducao_acrescimo, vl_beneficiario, vl_gerado,
							vl_glosa, vl_liberado, vl_material,
							vl_participacao, vl_saldo, vl_unitario,
							vl_material_imp, vl_unitario_imp, qt_material_imp
						from	pls_conta_mat
						where	nr_Sequencia	= r_C02_w.nr_seq_item);
						
						
						select	max(a.nr_seq_item_tiss),
							max(a.nr_seq_item_tiss_vinculo)
						into STRICT	nr_seq_item_tiss_w,
							nr_seq_item_tiss_vinculo_w
						from	pls_conta_mat_regra	a
						where	a.nr_sequencia		= r_C02_w.nr_seq_item;
						
						if (nr_seq_item_tiss_w IS NOT NULL AND nr_seq_item_tiss_w::text <> '') then
						
							CALL pls_cta_proc_mat_regra_pck.cria_registro_regra_mat(nr_seq_materiais_ww, nm_usuario_p);
							
							CALL pls_cta_proc_mat_regra_pck.atualiza_seq_tiss_mat(nr_seq_materiais_ww, nr_seq_item_tiss_w, nr_seq_item_tiss_vinculo_w, nm_usuario_p);
							
						end if;
						
					end if;
				end loop;
			/*	-- Abre o cursor dos itens que ficaram pendentes mesmo com a conta fechada
				-- Pois os mesmo devem ser considerados como glosados OS 1075145

				for r_C06_w in C06 (r_C05_w.nr_seq_conta) loop
					-- Se procedimento

					if	(r_C06_w.ie_tipo_item = 'P') then
						select	pls_conta_proc_seq.nextval
						into	nr_seq_procedimentos_ww
						from	dual;

						insert into pls_conta_proc
							(cd_conta_cred, cd_conta_deb, cd_conta_glosa_cred,
							cd_conta_glosa_deb, cd_historico, cd_historico_glosa,
							cd_procedimento, ds_justificativa, ds_log,
							dt_atualizacao, dt_atualizacao_nrec, dt_fim_proc,
							dt_inicio_proc, dt_liberacao, dt_procedimento,
							ie_cobranca_prevista, ie_origem_proced, ie_situacao,
							ie_status, ie_tecnica_utilizada, ie_tipo_despesa,
							ie_via_acesso, nm_usuario, nm_usuario_liberacao,
							nm_usuario_nrec, nr_seq_conta, nr_seq_dados_proc,
							nr_seq_grupo_ans, nr_seq_honorario_crit, nr_seq_pacote,
							nr_seq_regra, nr_seq_regra_ctb_cred, nr_seq_regra_ctb_deb,
							nr_seq_regra_horario, nr_seq_regra_liberacao, nr_seq_regra_pos_estab,
							nr_seq_tiss_tabela, nr_sequencia, qt_procedimento,
							tx_item, tx_participacao, vl_anestesista,
							vl_auxiliares, vl_beneficiario, vl_custo_operacional,
							vl_glosa, vl_liberado, vl_materiais,
							vl_medico, vl_participacao, vl_procedimento,
							vl_saldo, vl_unitario, qt_procedimento_imp,
							vl_unitario_imp, vl_procedimento_imp)
						(select	cd_conta_cred, cd_conta_deb, cd_conta_glosa_cred,
							cd_conta_glosa_deb, cd_historico, cd_historico_glosa,
							cd_procedimento, ds_justificativa, ds_log,
							dt_atualizacao, dt_atualizacao_nrec, dt_fim_proc,
							dt_inicio_proc, dt_liberacao, dt_procedimento,
							ie_cobranca_prevista, ie_origem_proced, ie_situacao,
							'U', ie_tecnica_utilizada, ie_tipo_despesa,
							ie_via_acesso, nm_usuario, nm_usuario_liberacao,
							nm_usuario_nrec, nr_seq_conta_ww, nr_seq_dados_proc,
							nr_seq_grupo_ans, nr_seq_honorario_crit, nr_seq_pacote,
							nr_seq_regra, nr_seq_regra_ctb_cred, nr_seq_regra_ctb_deb,
							nr_seq_regra_horario, nr_seq_regra_liberacao, nr_seq_regra_pos_estab,
							nr_seq_tiss_tabela, nr_seq_procedimentos_ww, qt_procedimento,
							tx_item, tx_participacao, vl_anestesista,
							vl_auxiliares, vl_beneficiario, vl_custo_operacional,
							vl_glosa, vl_liberado, vl_materiais,
							vl_medico, vl_participacao, vl_procedimento,
							vl_saldo, vl_unitario, qt_procedimento_imp,
							vl_unitario_imp, vl_procedimento_imp
						from	pls_conta_proc
						where	nr_sequencia	= r_C06_w.nr_seq_item);

						-- Abre o cursor dos participantes desses procedimentos

						for r_C04_w in C04 (r_C06_w.nr_seq_item) loop
							select	pls_proc_participante_seq.nextval
							into	nr_seq_partic_ww
							from 	dual;

							insert 	into	pls_proc_participante
								(	cd_cbo_saude_imp, cd_cgc_imp, cd_guia,
									cd_medico, cd_medico_imp, cd_prestador_imp,
									cd_sistema_ant, dt_atualizacao, dt_atualizacao_nrec,
									ie_atualizado, ie_conselho_profissional, ie_funcao_medico_imp,
									ie_gerada_cta_honorario, ie_glosa, ie_insercao_manual,
									ie_status, ie_status_pagamento, nm_medico_executor_imp,
									nm_usuario, nm_usuario_nrec, nr_cpf_imp,
									nr_crm_imp, nr_seq_cbo_saude, nr_seq_conselho,
									nr_seq_conta_proc, nr_seq_grau_partic, nr_seq_honorario_crit,
									nr_seq_prestador, nr_seq_prestador_pgto, nr_seq_regra,
									nr_sequencia, qt_liberada, sg_conselho_imp,
									uf_conselho, uf_crm_imp, vl_apresentado,
									vl_calculado, vl_calculado_ant, vl_digitado_complemento,
									vl_glosa, vl_honorario_medico, vl_participante)
							( select	cd_cbo_saude_imp, cd_cgc_imp, cd_guia,
									cd_medico, cd_medico_imp, cd_prestador_imp,
									cd_sistema_ant, dt_atualizacao, dt_atualizacao_nrec,
									ie_atualizado, ie_conselho_profissional, ie_funcao_medico_imp,
									ie_gerada_cta_honorario, ie_glosa, ie_insercao_manual,
									'U', ie_status_pagamento, nm_medico_executor_imp,
									nm_usuario, nm_usuario_nrec, nr_cpf_imp,
									nr_crm_imp, nr_seq_cbo_saude, nr_seq_conselho,
									nr_seq_procedimentos_ww, nr_seq_grau_partic, nr_seq_honorario_crit,
									nr_seq_prestador, nr_seq_prestador_pgto, nr_seq_regra,
									nr_seq_partic_ww, qt_liberada, sg_conselho_imp,
									uf_conselho, uf_crm_imp, vl_apresentado,
									vl_calculado, vl_calculado_ant, vl_digitado_complemento,
									vl_glosa, vl_honorario_medico, vl_participante
							from	pls_proc_participante
							where	nr_sequencia = r_C04_w.nr_seq_partic);
						end loop;

					else --Se material
						select	pls_conta_mat_seq.nextval
						into	nr_seq_materiais_ww
						from	dual;

						insert into pls_conta_mat
							(cd_conta_cred, cd_conta_deb, cd_conta_glosa_cred,
							cd_conta_glosa_deb, cd_historico, cd_historico_glosa,
							dt_atendimento, dt_atualizacao, dt_atualizacao_nrec,
							dt_fim_atend, dt_inicio_atend, dt_liberacao,
							ie_origem_preco, ie_situacao, ie_status,
							ie_tipo_despesa, nm_usuario, nm_usuario_liberacao,
							nm_usuario_nrec, nr_seq_conta, nr_seq_grupo_ans,
							nr_seq_material, nr_seq_regra, nr_seq_regra_ctb_cred,
							nr_seq_regra_ctb_deb, nr_seq_regra_pos_estab, nr_seq_tiss_tabela,
							nr_sequencia, qt_material, tx_participacao,
							tx_reducao_acrescimo, vl_beneficiario, vl_gerado,
							vl_glosa, vl_liberado, vl_material,
							vl_participacao, vl_saldo, vl_unitario,
							vl_material_imp, vl_unitario_imp, qt_material_imp)
						(select	cd_conta_cred, cd_conta_deb, cd_conta_glosa_cred,
							cd_conta_glosa_deb, cd_historico, cd_historico_glosa,
							dt_atendimento, dt_atualizacao, dt_atualizacao_nrec,
							dt_fim_atend, dt_inicio_atend, dt_liberacao,
							ie_origem_preco, ie_situacao, 'U',
							ie_tipo_despesa, nm_usuario, nm_usuario_liberacao,
							nm_usuario_nrec, nr_seq_conta_ww, nr_seq_grupo_ans,
							nr_seq_material, nr_seq_regra, nr_seq_regra_ctb_cred,
							nr_seq_regra_ctb_deb, nr_seq_regra_pos_estab, nr_seq_tiss_tabela,
							nr_seq_materiais_ww, qt_material, tx_participacao,
							tx_reducao_acrescimo, vl_beneficiario, vl_gerado,
							vl_glosa, vl_liberado, vl_material,
							vl_participacao, vl_saldo, vl_unitario,
							vl_material_imp, vl_unitario_imp, qt_material_imp
						from	pls_conta_mat
						where	nr_Sequencia	= r_C06_w.nr_seq_item);
					end if;
				end loop;*/
			end loop;

		end if;
	end if;
end if;
commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_conta_reapresentacao ( nr_seq_protocolo_p bigint, cd_guia_p text, nr_seq_segurado_p bigint, ie_tipo_guia_p text, ie_opcao_p text, cd_estabelecimento_p bigint, nm_usuario_p text, nr_seq_conta_p INOUT bigint) FROM PUBLIC;

