-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_desfazer_fechamento_conta (nr_seq_conta_p pls_conta.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type, ie_origem_p text default null) AS $body$
DECLARE


--ie_origem_p	identifica a origem da analiseo se foi contas medicas ou analise de contas medicas
qt_coparticipacao_mens_w	integer;
qt_conta_medica_resumo_w	integer;
cont_w				integer;
aux_w				integer;
qt_pos_pend_analise_w		integer;
ie_auditoria_w			pls_analise_conta.ie_auditoria%type;
ie_geracao_pos_estab_w		pls_parametros.ie_geracao_pos_estabelecido%type;
ie_status_w			ptu_fatura.ie_status%type;
nr_seq_protocolo_w		pls_protocolo_conta.nr_sequencia%type;
nr_seq_analise_w		pls_analise_conta.nr_sequencia%type;
nr_seq_lote_recalculo_w		pls_lote_recalculo.nr_sequencia%type;
nr_lote_contabil_w		pls_protocolo_conta.nr_lote_contabil%type;
nr_lote_contabil_prov_w		pls_protocolo_conta.nr_lote_contabil_prov%type;
nr_lote_contab_pag_w		pls_protocolo_conta.nr_lote_contab_pag%type;
nr_lote_prov_copartic_w		pls_protocolo_conta.nr_lote_prov_copartic%type;
nr_seq_fatura_w			ptu_fatura.nr_sequencia%type;
nr_titulo_w			ptu_fatura.nr_titulo%type;
nr_seq_baixa_w			titulo_pagar_baixa.nr_sequencia%type;
nr_seq_analise_pos_w		pls_analise_conta.nr_sequencia%type;
ie_status_prov_pagto_w		pls_parametro_contabil.ie_status_prov_pagto%type;
nr_lote_contabilizado_w		lote_contabil.nr_lote_contabil%type;
nr_seq_rec_glosa_w		pls_rec_glosa_conta.nr_sequencia%type;
ie_status_analise_w		pls_analise_conta.ie_status%type;
ie_analise_cm_nova_w		pls_parametros.ie_analise_cm_nova%type;
nr_seq_lote_fat_w		pls_conta_pos_estabelecido.nr_seq_lote_fat%type;
qt_cta_monitor_w		integer;
ie_novo_pos_estab_w		pls_visible_false.ie_novo_pos_estab%type;
ie_consist_comp_fechada_w	pls_parametros.ie_consist_comp_fechada%type;
dt_mes_competencia_w		pls_protocolo_conta.dt_mes_competencia%type;
dt_fechamento_w			pls_competencia.dt_fechamento%type;
ie_concil_contab_w		pls_visible_false.ie_concil_contab%type;
ie_status_origem_lote_w		lote_contabil.ie_status_origem%type;
qt_registros_copartic_w	integer := 0;
ds_log_call_w 			varchar(1500);
ds_observacao_w			varchar(4000);
qt_pos_mens_w			integer := 0;


BEGIN

if (nr_seq_conta_p IS NOT NULL AND nr_seq_conta_p::text <> '') then

	select 	coalesce(max(ie_novo_pos_estab),'N')
	into STRICT	ie_novo_pos_estab_w
	from	pls_visible_false;

	-- movido as verificacoes para dentro do IF pois se nao foi passada a conta nao tem necessidade de validar nada
	select	coalesce(max(ie_status_prov_pagto),'NC')
	into STRICT	ie_status_prov_pagto_w
	from	pls_parametro_contabil
	where	cd_estabelecimento = cd_estabelecimento_p;

	if (ie_status_prov_pagto_w = 'F') then

		select	max(coalesce(nr_lote_contabil_prov,0)) nr_lote_contabil
		into STRICT	nr_lote_contabilizado_w
		from	pls_conta_medica_resumo
		where	nr_seq_conta = nr_seq_conta_p
		and	coalesce(nr_lote_contabil_prov,0) <> 0;
		
		if (coalesce(nr_lote_contabilizado_w, 0) = 0) then
	
			select	max(coalesce(nr_lote_contabil_prov,0)) nr_lote_contabil
			into STRICT	nr_lote_contabilizado_w
			from	pls_conta_coparticipacao
			where	nr_seq_conta = nr_seq_conta_p
			and	coalesce(nr_lote_contabil_prov,0) <> 0;
		end if;
		
		if (coalesce(nr_lote_contabilizado_w,0) = 0) then
			
			if (ie_novo_pos_estab_w = 'S') then
				select	coalesce(max(a.nr_lote_contabil_prov),0)
				into STRICT	nr_lote_contabilizado_w
				from	pls_pos_estab_dados_contab a,
					pls_conta_pos_proc_contab b,
					pls_conta_medica_resumo c
				where	c.nr_sequencia = b.nr_seq_conta_resumo
				and	b.nr_sequencia = a.nr_seq_pos_proc_contab
				and	c.nr_seq_conta = nr_seq_conta_p;
				
				if (nr_lote_contabilizado_w = 0) then
					select	coalesce(max(a.nr_lote_contabil_prov),0)
					into STRICT	nr_lote_contabilizado_w
					from	pls_pos_estab_dados_contab a,
						pls_conta_pos_mat_contab b,
						pls_conta_medica_resumo c
					where	c.nr_sequencia = b.nr_seq_conta_resumo
					and	b.nr_sequencia = a.nr_seq_pos_mat_contab
					and	c.nr_seq_conta = nr_seq_conta_p;
				end if;
			else
				select	max(coalesce(a.nr_lote_contabil_prov,0)) nr_lote_contabil
				into STRICT	nr_lote_contabilizado_w
				from	pls_conta_pos_estab_contab a,
					pls_conta_medica_resumo b
				where	b.nr_sequencia = a.nr_seq_conta_resumo
				and	b.nr_seq_conta = a.nr_seq_conta
				and	b.nr_seq_conta = nr_seq_conta_p;
			end if;
		end if;
		
		if (coalesce(nr_lote_contabilizado_w, 0) > 0) then
	
			select 	coalesce(max(ie_status_origem), 'M')
			into STRICT	ie_status_origem_lote_w
			from	lote_contabil
			where	nr_lote_contabil = nr_lote_contabilizado_w;

			if (ie_status_origem_lote_w <> 'SO') then
				/* A conta ja foi contabilizada no lote #@NR_LOTE_CONTABILIZADO#@. */

				CALL wheb_mensagem_pck.exibir_mensagem_abort(324839, 'NR_LOTE_CONTABILIZADO=' || nr_lote_contabilizado_w);
			end if;
		end if;
	end if;

	select	coalesce(max(ie_geracao_pos_estabelecido), 'F'),
		coalesce(max(ie_analise_cm_nova),'N'),
		coalesce(max(ie_consist_comp_fechada),'N')
	into STRICT	ie_geracao_pos_estab_w,
		ie_analise_cm_nova_w,
		ie_consist_comp_fechada_w
	from	pls_parametros
	where	cd_estabelecimento = cd_estabelecimento_p;

	select	count(1)
	into STRICT	aux_w
	from	sip_nv_dados a
	where	a.ie_conta_enviada_ans = 'S'
	and	a.nr_seq_conta = nr_seq_conta_p
	and	exists (	SELECT	1
			from	pls_lote_sip b
			where	b.nr_sequencia = a.nr_seq_lote_sip
			and	(b.dt_envio IS NOT NULL AND b.dt_envio::text <> ''));
	
	if (aux_w > 0) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(337915);
	end if;

	select	max(nr_seq_protocolo),
		max(nr_seq_fatura)
	into STRICT	nr_seq_protocolo_w,
		nr_seq_fatura_w
	from	pls_conta
	where	nr_sequencia = nr_seq_conta_p;
	
	select	  max(g.ie_status)
	into STRICT	  ie_status_w
	from      ptu_fatura g
	where     g.nr_sequencia  = nr_seq_fatura_w
	and	  g.ie_status	 in ('CA','E');
	
	if (ie_status_w = 'CA') then

		--A fatura da conta #@NR_SEQ_CONTA#@ esta cancelada. Nao e possivel desfazer a finalizacao dos grupos.
		CALL wheb_mensagem_pck.exibir_mensagem_abort(236201,'NR_SEQ_CONTA='||nr_seq_conta_p);
	elsif (ie_status_w = 'E') then

		--A fatura da conta #@NR_SEQ_CONTA#@ esta encerrada. Nao e possivel desfazer a finalizacao dos grupos.
		CALL wheb_mensagem_pck.exibir_mensagem_abort(236202, 'NR_SEQ_CONTA='||nr_seq_conta_p);
	end if;
	
	select	count(1)
	into STRICT	cont_w
	from	pls_prot_conta_titulo a,
		pls_protocolo_conta b,
		pls_conta c
	where	a.nr_seq_protocolo	= b.nr_sequencia
	and	b.nr_sequencia		= c.nr_seq_protocolo
	and	c.nr_sequencia		= nr_seq_conta_p;
	
	select	count(1)
	into STRICT	qt_coparticipacao_mens_w
	from	pls_conta_coparticipacao
	where	nr_seq_conta		= nr_seq_conta_p
	and	(nr_seq_mensalidade_seg IS NOT NULL AND nr_seq_mensalidade_seg::text <> '');
	
	/*Caso tiver pagamento de producao para a conta nao pode desfazer o fechamento*/

	select	sum(qt)
	into STRICT	qt_conta_medica_resumo_w
	from (
		SELECT	count(1) qt
		from	pls_conta_medica_resumo
		where	nr_seq_conta = nr_seq_conta_p
		and	(nr_seq_lote_pgto IS NOT NULL AND nr_seq_lote_pgto::text <> '')
		and	ie_situacao = 'A'
		
union all

		SELECT	count(1) qt
		from	pls_conta_medica_resumo
		where	nr_seq_conta = nr_seq_conta_p
		and	ie_situacao = 'A'
		and	(nr_seq_pp_lote IS NOT NULL AND nr_seq_pp_lote::text <> '') 
	 LIMIT 1) alias5;

	select	max(nr_lote_contabil),
		max(nr_lote_contabil_prov),
		max(nr_lote_contab_pag),
		max(nr_lote_prov_copartic),
		max(trunc(dt_mes_competencia, 'mm'))
	into STRICT	nr_lote_contabil_w,
		nr_lote_contabil_prov_w,
		nr_lote_contab_pag_w,
		nr_lote_prov_copartic_w,
		dt_mes_competencia_w
	from	pls_protocolo_conta
	where	nr_sequencia	= nr_seq_protocolo_w;
	
	if (ie_novo_pos_estab_w = 'S') then
		
		select	max(nr_seq_lote_fat)
		into STRICT	nr_seq_lote_fat_w
		from	pls_conta_pos_proc
		where	nr_seq_conta = nr_seq_conta_p
		and	(nr_seq_lote_fat IS NOT NULL AND nr_seq_lote_fat::text <> '');
		
		if (coalesce(nr_seq_lote_fat_w::text, '') = '') then
			select	max(nr_seq_lote_fat)
			into STRICT	nr_seq_lote_fat_w
			from	pls_conta_pos_mat
			where	nr_seq_conta = nr_seq_conta_p
			and	(nr_seq_lote_fat IS NOT NULL AND nr_seq_lote_fat::text <> '');
		end if;
	else			
		select	max(a.nr_seq_lote_fat)	
		into STRICT	nr_seq_lote_fat_w
		from	pls_conta_pos_estabelecido a,
			pls_lote_faturamento b
		where	a.nr_seq_lote_fat = b.nr_sequencia
		and	a.nr_seq_conta	= nr_seq_conta_p
		and	(a.nr_seq_lote_fat IS NOT NULL AND a.nr_seq_lote_fat::text <> '')
		and	((a.ie_situacao	= 'A') or (coalesce(a.ie_situacao::text, '') = ''))
		and	b.ie_tipo_lote <> 'A';
	end if;
	
	select	max(nr_seq_protocolo)
	into STRICT 	nr_seq_rec_glosa_w
	from	pls_rec_glosa_conta a
	where	a.nr_seq_conta = nr_seq_conta_p;
	
	if (ie_consist_comp_fechada_w = 'S') then
		select	max(dt_fechamento)
		into STRICT	dt_fechamento_w
		from	pls_competencia
		where	dt_mes_competencia = dt_mes_competencia_w;
		
		if (dt_fechamento_w IS NOT NULL AND dt_fechamento_w::text <> '') then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(obter_desc_expressao_idioma(786797, null, null));
		end if;
	end if;
	
	if (nr_seq_lote_fat_w IS NOT NULL AND nr_seq_lote_fat_w::text <> '') then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(190837,'NR_LOTE='||nr_seq_lote_fat_w);
	end if;
	
	if (qt_conta_medica_resumo_w > 0) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(190838);
	end if;
	
	if (qt_coparticipacao_mens_w > 0) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(190839);
	end if;
	
	if (cont_w > 0) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(190841);
	end if;
	
	if (nr_seq_rec_glosa_w > 0) then
		--Nao e possivel desfazer o fechamento da conta, a mesma possui o recurso de glosa. Protocolo = #@NR_SEQ_REC_GLOSA#@.
		CALL wheb_mensagem_pck.exibir_mensagem_abort(338058, 'NR_SEQ_REC_GLOSA='||nr_seq_rec_glosa_w);
	end if;
	
	/* Lepinski - OSs 389180 e 381715 - Conforme conversa com Adriano, nao permitir desfazer o fechamento da conta, caso a mesma ja esteja em lote de contabilizacao */

	
	if (coalesce(nr_lote_contabil_w,0) <> 0) then
		select 	coalesce(max(ie_status_origem), 'M')
		into STRICT	ie_status_origem_lote_w
		from	lote_contabil
		where	nr_lote_contabil = nr_lote_contabil_w;

		if (ie_status_origem_lote_w <> 'SO') then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(190842, 'NR_LOTE_CONTABIL_W=' || nr_lote_contabil_w);
		end if;
	end if;

	if (coalesce(nr_lote_contab_pag_w,0) <> 0) then
		select 	coalesce(max(ie_status_origem), 'M')
		into STRICT	ie_status_origem_lote_w
		from	lote_contabil
		where	nr_lote_contabil = nr_lote_contab_pag_w;

		if (ie_status_origem_lote_w <> 'SO') then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(190845, 'NR_LOTE_CONTABIL_W=' || nr_lote_contab_pag_w);
		end if;
	end if;
	
	-- Edgar 28/11/2013, OS 664025, cfme conversado com Adriano, nao ha necessidade de consistir o lote de provisao de producao medica 

	-- por isso a validacao foi retirada
	if (coalesce(nr_lote_prov_copartic_w,0) <> 0) then
		select 	coalesce(max(ie_status_origem), 'M')
		into STRICT	ie_status_origem_lote_w
		from	lote_contabil
		where	nr_lote_contabil = nr_lote_prov_copartic_w;

		if (ie_status_origem_lote_w <> 'SO') then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(190849, 'NR_LOTE_CONTABIL_W=' || nr_lote_prov_copartic_w);
		end if;
	end if;
	
	if ( ie_novo_pos_estab_w = 'N') then
	
		select count(1)
		into STRICT	qt_pos_mens_w
		from  	pls_mensalidade_item_conta a,
				pls_mensalidade_seg_item b,
				pls_mensalidade_segurado c,
				pls_mensalidade d
		where 	a.nr_seq_item = b.nr_sequencia
		and		b.nr_seq_mensalidade_seg = c.nr_sequencia
		and		c.nr_seq_mensalidade = d.nr_sequencia
		and 	coalesce(d.ie_cancelamento::text, '') = ''
		and 	a.nr_seq_conta_pos_estab in ( SELECT 	nr_sequencia
											from 	pls_conta_pos_estabelecido 
											where 	nr_seq_conta = nr_seq_conta_p);
	else
	
		select count(1)
		into STRICT	qt_pos_mens_w
		from  	pls_mensalidade_item_conta a,
				pls_mensalidade_seg_item b,
				pls_mensalidade_segurado c,
				pls_mensalidade d
		where 	a.nr_seq_item = b.nr_sequencia
		and		b.nr_seq_mensalidade_seg = c.nr_sequencia
		and		c.nr_seq_mensalidade = d.nr_sequencia
		and 	coalesce(d.ie_cancelamento::text, '') = ''
		and 	a.nr_seq_pos_proc in (SELECT 	nr_sequencia
									from 	pls_conta_pos_proc
									where 	nr_seq_conta = nr_seq_conta_p);
								
		if (qt_pos_mens_w = 0) then
								
			select count(1)
			into STRICT	qt_pos_mens_w
			from  	pls_mensalidade_item_conta a,
					pls_mensalidade_seg_item b,
					pls_mensalidade_segurado c,
					pls_mensalidade d
			where 	a.nr_seq_item = b.nr_sequencia
			and		b.nr_seq_mensalidade_seg = c.nr_sequencia
			and		c.nr_seq_mensalidade = d.nr_sequencia
			and 	coalesce(d.ie_cancelamento::text, '') = ''
			and 	a.nr_seq_pos_mat in (SELECT 	nr_sequencia
										from 	pls_conta_pos_mat
										where 	nr_seq_conta = nr_seq_conta_p);
		end if;
	
	end if;
	
	if ( qt_pos_mens_w > 0) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(1057350);
	end if;
		
	/* Felipe - 28/07/2011 - OS 338196 - Nao permitir alterar protocolos que estejam em lote de recalculo nao liberado*/

	select	coalesce(max(b.nr_sequencia),0)
	into STRICT	nr_seq_lote_recalculo_w
	from	pls_lote_recalculo	b,
		pls_conta_recalculo	a
	where	a.nr_seq_lote		= b.nr_sequencia
	and	a.nr_seq_protocolo	= nr_seq_protocolo_w
	and	(b.dt_geracao_lote IS NOT NULL AND b.dt_geracao_lote::text <> '')
	and	coalesce(b.dt_aplicacao::text, '') = '';
	
	if (nr_seq_lote_recalculo_w > 0) then
	
		CALL wheb_mensagem_pck.exibir_mensagem_abort(190850, 'NR_SEQ_LOTE_RECALCULO_W=' || nr_seq_lote_recalculo_w);
	end if;
	
	select	count(1)
	into STRICT	qt_cta_monitor_w
	from	pls_monitor_tiss_alt_guia a,
		pls_monitor_tiss_alt b
	where	b.nr_sequencia = a.nr_seq_cta_alt
	and	b.nr_seq_conta = nr_seq_conta_p;
	
	if (qt_cta_monitor_w > 0) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(451120);
	end if;
	
	select	max(nr_seq_analise)
	into STRICT	nr_seq_analise_w
	from	pls_conta
	where	nr_sequencia = nr_seq_conta_p;
	
	--aqui o max apenas evita no data found
	select 	coalesce(max(ie_auditoria), 'N'),
		max(ie_status)
	into STRICT	ie_auditoria_w,
		ie_status_analise_w
	from 	pls_analise_conta
	where	nr_sequencia = nr_seq_analise_w;
	
	select	max(nr_sequencia)
	into STRICT	nr_seq_analise_pos_w
	from	pls_analise_conta
	where	nr_seq_analise_ref = nr_seq_analise_w
	and	ie_origem_analise  = 2;
	
	--Impede aque a conta seja reaberta nesses casos, isso foi decidido devido aos casos onde a analise nao tinha auditoria,

	--nesse caso a conta ficava em usuario aguardando acao e a analise ficava encerrada, causando problemas. OS959067
	if (ie_status_analise_w	= 'T') and (coalesce(ie_origem_p,'X')	!= 'A') and (ie_analise_cm_nova_w	= 'S') then

		CALL wheb_mensagem_pck.exibir_mensagem_abort(409144);
	end if;

	if (nr_seq_analise_pos_w IS NOT NULL AND nr_seq_analise_pos_w::text <> '')	then

		-- Vefica se a analise de pos esta em auditoria
		select	count(1)
		into STRICT	qt_pos_pend_analise_w
		from	pls_auditoria_conta_grupo
		where	coalesce(dt_final_analise::text, '') = ''
		and	(dt_inicio_auditor IS NOT NULL AND dt_inicio_auditor::text <> '')
		and	nr_seq_analise	= nr_seq_analise_pos_w;
		
		-- se tiver pendente de auditoria gera mensagem para verificar a analise
		if (qt_pos_pend_analise_w > 0)	then

			/*Existe uma analise de custo pos e estabelecido que esta sendo auditada neste momento. 
			A mesma  esta vinculada a analise de pagamento em questao,  
			nao sera possivel desfazer o fechamento destas contas, favor verificar !*/
			CALL wheb_mensagem_pck.exibir_mensagem_abort(263078);
		end if;
	end if;
	/* Bloco referente a conciliacao contabil / contabilidade instantanea*/

	select	coalesce(max(ie_concil_contab), 'N')
	into STRICT	ie_concil_contab_w
	from 	pls_visible_false;

	if (ie_concil_contab_w = 'S') then
		CALL pls_ctb_onl_gravar_movto_pck.gravar_movto_desf_fechar_conta(nr_seq_conta_p, cd_estabelecimento_p, nm_usuario_p);
	end if;
	
	if (ie_auditoria_w = 'S') then

		update 	pls_conta
		set 	ie_status	= 'A'
		where	nr_sequencia	= nr_seq_conta_p;
		
		-- Se houver itens liberados pelo usuario, estes nao serao atualizados. Demitrius O.S 
		update 	pls_conta_proc
		set 	ie_status	= 'A'
		where	nr_seq_conta	= nr_seq_conta_p
		and	ie_status	not in ('S','L','D');
		
		update 	pls_conta_mat
		set 	ie_status	= 'A'
		where	nr_seq_conta	= nr_seq_conta_p
		and	ie_status	not in ('S','L','D');

		CALL pls_deletar_coparticipacao(	nr_seq_conta_p, null, 'N', 'N', null, null,
						nm_usuario_p, cd_estabelecimento_p);
	else
		update	pls_conta
		set 	ie_status		= 'L',
			vl_total_beneficiario	= 0
		where 	nr_sequencia 		= nr_seq_conta_p;
		
		CALL pls_deletar_coparticipacao(	nr_seq_conta_p, null, 'N', 'N', null, null,
						nm_usuario_p, cd_estabelecimento_p);

		update	pls_conta
		set 	vl_coparticipacao = 0
		where 	nr_sequencia 	  = nr_seq_conta_p;		
	end if;
	
	if (ie_geracao_pos_estab_w = 'F') then
		
		if (ie_novo_pos_estab_w = 'S') then
			CALL pls_pos_estabelecido_pck.deletar_pos_estabelecido(nr_seq_conta_p, null, null);
		else
			delete	FROM pls_conta_pos_estab_aprop
			where	nr_seq_conta_pos_estab in (	SELECT	nr_sequencia
								from	pls_conta_pos_estabelecido
								where	nr_seq_conta	= nr_seq_conta_p);
			
			delete	FROM pls_conta_pos_estab_taxa
			where	nr_seq_conta_pos_estab in (	SELECT	nr_sequencia
								from	pls_conta_pos_estabelecido
								where	nr_seq_conta	= nr_seq_conta_p);
			
			CALL pls_delete_pls_conta_pos_estab(	null, null, nr_seq_conta_p,
							null);
		end if;
	end if;
	
	CALL pls_deletar_co(	nr_seq_conta_p, null, 'N',
			nm_usuario_p, cd_estabelecimento_p);
	
	if (nr_seq_analise_w IS NOT NULL AND nr_seq_analise_w::text <> '') then

		CALL pls_alterar_status_analise_cta(	nr_seq_analise_w, 'L', 'PLS_DESFAZER_FECHAMENTO_CONTA',
						nm_usuario_p, cd_estabelecimento_p);
	end if;
	
	update	pls_conta_proc
	set	ie_faturamento	= 'N'
	where	nr_seq_conta	= nr_seq_conta_p;
	
	select	max(nr_titulo)
	into STRICT	nr_titulo_w
	from	ptu_fatura
	where	nr_sequencia	= nr_seq_fatura_w;
	
	if (nr_titulo_w IS NOT NULL AND nr_titulo_w::text <> '') then

		select	max(nr_sequencia)
		into STRICT	nr_seq_baixa_w
		from	titulo_pagar_baixa
		where	nr_seq_pls_conta	= nr_seq_conta_p
		and	coalesce(nr_seq_baixa_origem::text, '') = '';
		
		if (nr_seq_baixa_w IS NOT NULL AND nr_seq_baixa_w::text <> '') then

			CALL estornar_tit_pagar_baixa(	nr_titulo_w, nr_seq_baixa_w, trunc(clock_timestamp(),'dd'),
							nm_usuario_p, 'S');
		end if;
	end if;
	
	delete	from pls_conta_val_atend
	where	nr_seq_conta_proc in (	SELECT	nr_sequencia
					from	pls_conta_proc
					where	nr_seq_conta = nr_seq_conta_p);
	
	delete	from pls_conta_val_atend
	where	nr_seq_conta_mat in (	SELECT	nr_sequencia
					from	pls_conta_mat
					where	nr_seq_conta = nr_seq_conta_p);
					
	CALL pls_atualizar_conta_resumo(	nr_seq_conta_p, cd_estabelecimento_p, nm_usuario_p);
	
	CALL pls_altera_status_protocolo(	nr_seq_protocolo_w, 'L', 'N',
					cd_estabelecimento_p, nm_usuario_p);
	
	update	pls_conta
	set	ie_status_fat	= 'P'
	where	nr_sequencia	= nr_seq_conta_p
	and	ie_status_fat <> 'N';
	
	--Excluir informacoes contabeis da coparticipacao OS904764 Resumo de contas e conta_copartic excluida e registros dessa tabela ficavam 

	--pendentes de exclusao. A integridade a com a pls_conta.
	delete 	from pls_conta_copartic_contab
	where	nr_seq_conta = nr_seq_conta_p;
	
	--aaschlote 24/07/2015 OS 850545 - Excluir esses registros para que nao tenha problema no monitoramento ANS
	delete	FROM pls_monitor_tiss_alt
	where	nr_seq_conta	= nr_seq_conta_p
	and	ie_tipo_evento	= 'FC'
	and	ie_status	= 'P';
	
	if (ie_novo_pos_estab_w = 'N') then
		--Deleta os registros de regra de lancamento de pos-estabelecido
		delete	FROM pls_hist_analise_conta	x
		where	x.nr_seq_conta_proc in (SELECT	a.nr_sequencia
						from	pls_conta_proc	a
						where	a.nr_seq_conta	= nr_seq_conta_p
						and	(a.nr_seq_regra_conv IS NOT NULL AND a.nr_seq_regra_conv::text <> '')
						and	(a.nr_seq_proc_princ IS NOT NULL AND a.nr_seq_proc_princ::text <> '')
						and	a.ie_status	= 'M'
						and	not exists (	select	1
									from	pls_conta_pos_estabelecido	b
									where	b.nr_seq_conta_proc		= a.nr_sequencia
									and	b.ie_status_faturamento		= 'A'
									and	b.ie_cobrar_mensalidade		= 'A'));
									
		delete	FROM pls_conta_proc	a
		where	a.nr_seq_conta	= nr_seq_conta_p
		and	(a.nr_seq_regra_conv IS NOT NULL AND a.nr_seq_regra_conv::text <> '')
		and	(a.nr_seq_proc_princ IS NOT NULL AND a.nr_seq_proc_princ::text <> '')
		and	a.ie_status	= 'M'
		and	not exists (	SELECT	1
					from	pls_conta_pos_estabelecido	b
					where	b.nr_seq_conta_proc		= a.nr_sequencia
					and	b.ie_status_faturamento		= 'A'
					and	b.ie_cobrar_mensalidade		= 'A')
		and not exists (select 1
						from	pls_conta_pos_estab_prev
						where	nr_seq_conta_proc = a.nr_Sequencia);
		
		update	pls_conta_mat
		set	nr_seq_regra_pos_estab  = NULL,
			nr_seq_regra_conv	 = NULL
		where	nr_seq_conta = nr_seq_conta_p;
		
		update	pls_conta_proc	a
		set	a.nr_seq_regra_pos_estab	 = NULL,
			a.nr_seq_regra_conv		 = NULL
		where	a.nr_seq_conta 			= nr_seq_conta_p
		and	not exists (	SELECT	1
					from	pls_conta_pos_estabelecido	b
					where	b.nr_seq_conta_proc		= a.nr_sequencia
					and	b.ie_status_faturamento		= 'A'
					and	b.ie_cobrar_mensalidade		= 'A');
	else

		update	pls_conta_mat
		set	nr_seq_regra_pos_estab  = NULL
		where	nr_seq_conta = nr_seq_conta_p;
		
		update	pls_conta_proc
		set	nr_seq_regra_pos_estab	 = NULL
		where	nr_seq_conta 		= nr_seq_conta_p;
	
	end if;
	
	select 	count(1)
	into STRICT	qt_registros_copartic_w
	from	pls_conta_coparticipacao
	where	nr_seq_conta = nr_seq_conta_p;
	
	if (qt_registros_copartic_w > 0) then
	
		ds_observacao_w := 'Indetificados registros de coparticipacao vinculados a conta, apos desfazer o seu fechamento';
		ds_log_call_w := substr(pls_obter_detalhe_exec(false),1,1500);
	
		insert into plsprco_cta( 	nr_sequencia, dt_atualizacao, nm_usuario,
							dt_atualizacao_nrec, nm_usuario_nrec, nm_tabela,
							ds_log, ds_log_call, ds_funcao_ativa, 
							ie_aplicacao_tasy, nm_maquina, ie_opcao,
							nr_seq_conta)
				values ( 	nextval('plsprco_cta_seq'), clock_timestamp(), nm_usuario_p,
							clock_timestamp(), nm_usuario_p, 'PLS_CONTA_COPARTICIPACAO', 
							ds_observacao_w, ds_log_call_w, obter_funcao_ativa, 
							pls_se_aplicacao_tasy, wheb_usuario_pck.get_machine, '1',
							nr_seq_conta_p);
	
	end if;
	
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_desfazer_fechamento_conta (nr_seq_conta_p pls_conta.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type, ie_origem_p text default null) FROM PUBLIC;

