-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consistir_dados_atend_visita ( nr_atendimento_p bigint, cd_pessoa_fisica_p text, eh_modo_edicao_p text, nr_seq_controle_p bigint, cd_paciente_p text, dt_nascimento_p timestamp, dt_entrada_p timestamp, nr_seq_tipo_p bigint, nm_pessoa_fisica_p text, nm_usuario_p text, cd_estabelecimento_p bigint, ds_perg_p INOUT text, ds_perg_continua_p INOUT text, ds_erro_p INOUT text) AS $body$
DECLARE

 
ie_controle_obrigatorio_w	varchar(1);
ie_consiste_bloqueio_w	varchar(1);
ie_visita_fora_horario_w	varchar(1);
ie_considera_grau_parente_w	varchar(1);

ie_atend_visit_lib_w	varchar(1);
ie_atend_visit_pessoa_w	varchar(1);
ie_visit_atend_bloq_w	varchar(1);
ie_regra_horario_visita_w	varchar(1);
cd_setor_atual_w		integer;
ie_visita_fora_hor_w	varchar(2);
ie_tipo_visita_w		varchar(1) := 'P';
ie_tipo_visita_auto_w	varchar(1);


BEGIN 
 
if (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') then 
	begin 
	 
	select	CASE WHEN count(*)=0 THEN  'N'  ELSE 'S' END  
	into STRICT	ie_atend_visit_lib_w 
	from	atendimento_visita_lib 
	where	nr_atendimento	= nr_atendimento_p 
	and ((cd_pessoa_lib IS NOT NULL AND cd_pessoa_lib::text <> '') or (nm_pessoa_liberacao IS NOT NULL AND nm_pessoa_liberacao::text <> ''));
	 
	select	CASE WHEN count(*)=0 THEN  'S'  ELSE 'N' END  
	into STRICT	ie_atend_visit_pessoa_w 
	from	atendimento_visita_lib 
	where	nr_atendimento	= nr_atendimento_p 
	and (cd_pessoa_lib	= cd_pessoa_fisica_p or nm_pessoa_liberacao = nm_pessoa_fisica_p);
 
	if (ie_atend_visit_lib_w = 'S' and 
		ie_atend_visit_pessoa_w = 'S') then 
		ds_erro_p	:= substr(obter_texto_tasy(41594, wheb_usuario_pck.get_nr_seq_idioma),1,255);
	end if;	
	 
	/* Controle de Visitas - Parametro [20] - Ao utilizar a opção retorno do visitante deixar o mesmo em modo de edição */
 
	ie_controle_obrigatorio_w := obter_param_usuario(8014, 20, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_controle_obrigatorio_w);
 
	if (coalesce(ds_erro_p::text, '') = '' and 
		ie_controle_obrigatorio_w = 'S' and 
		eh_modo_edicao_p = 'S' and 
		coalesce(nr_seq_controle_p::text, '') = '') then 
		ds_erro_p	:= substr(obter_texto_tasy(41597, wheb_usuario_pck.get_nr_seq_idioma),1,255);
	end if;
 
	/* Controle de Visitas - Parametro [31] - Permite visitas de pessoas que estejam bloqueadas pelo paciente */
 
	ie_consiste_bloqueio_w := obter_param_usuario(8014, 31, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_consiste_bloqueio_w);
 
	if (coalesce(ds_erro_p::text, '') = '' and 
		ie_consiste_bloqueio_w = 'N' and 
		(cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '')) then 
		begin 
		select	CASE WHEN count(*)=0 THEN  'N'  ELSE 'S' END  
		into STRICT	ie_visit_atend_bloq_w 
		from	atendimento_visita_bloq 
		where	nr_atendimento	= nr_atendimento_p 
		and	cd_pessoa_bloqueio	= cd_pessoa_fisica_p;
 
		if (ie_visit_atend_bloq_w = 'S') then 
			ds_erro_p	:= substr(obter_texto_tasy(41598, wheb_usuario_pck.get_nr_seq_idioma),1,255);
		end if;
		end;
	end if;
 
	if (coalesce(ds_erro_p::text, '') = '') then 
		begin 
		select	coalesce(substr(obter_regra_horario_visita(cd_paciente_p, dt_nascimento_p, dt_entrada_p), 1, 1), 'S') 
		into STRICT	ie_regra_horario_visita_w 
		;
 
		if (ie_regra_horario_visita_w = 'N') then 
			ds_erro_p	:= substr(obter_texto_tasy(41599, wheb_usuario_pck.get_nr_seq_idioma),1,255);
		end if;
		end;
	end if;
 
	 
	/* Controle de Visitas - Parametro [54] - Caso esteja fora do horário de visita do setor, permite visita */
 
	ie_visita_fora_horario_w := obter_param_usuario(8014, 54, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_visita_fora_horario_w);
 
	if (ie_visita_fora_horario_w <> 'S') then 
		begin 
		select	obter_setor_atendimento(nr_atendimento_p) 
		into STRICT	cd_setor_atual_w 
		;
 
		if (cd_setor_atual_w > 0) then 
			begin 
			verifica_hor_visita_setor( 
				dt_entrada_p, 
				cd_setor_atual_w, 
				nr_atendimento_p, 
				ie_tipo_visita_w, 
				ie_visita_fora_hor_w, 
				nr_seq_tipo_p);
 
			if (ie_visita_fora_horario_w = 'N') then 
				begin 
				if (ie_visita_fora_hor_w = 'S') then 
					ds_erro_p	:= substr(obter_texto_tasy(52284, wheb_usuario_pck.get_nr_seq_idioma),1,255);
				elsif (ie_visita_fora_hor_w = 'LH') then 
					ds_erro_p	:= substr(obter_texto_tasy(60153, wheb_usuario_pck.get_nr_seq_idioma),1,255);
				elsif (ie_visita_fora_hor_w = 'LS') then 
					ds_erro_p	:= substr(obter_texto_tasy(60154, wheb_usuario_pck.get_nr_seq_idioma),1,255);
				elsif (ie_visita_fora_hor_w = 'LD') then 
					ds_erro_p	:= substr(obter_texto_tasy(60155, wheb_usuario_pck.get_nr_seq_idioma),1,255);
				elsif (ie_visita_fora_hor_w = 'LM') then 
					ds_erro_p := obter_texto_tasy(104119, wheb_usuario_pck.get_nr_seq_idioma);
				end if;
				end;
			elsif (ie_visita_fora_horario_w = 'Q') then 
				begin 
				if (ie_visita_fora_hor_w = 'S') then 
					ds_perg_continua_p	:= substr(obter_texto_tasy(60156, wheb_usuario_pck.get_nr_seq_idioma),1,255);
				elsif (ie_visita_fora_hor_w = 'LH') then 
					ds_perg_continua_p	:= substr(obter_texto_tasy(60157, wheb_usuario_pck.get_nr_seq_idioma),1,255);
				elsif (ie_visita_fora_hor_w = 'LS') then 
					ds_perg_continua_p	:= substr(obter_texto_tasy(60158, wheb_usuario_pck.get_nr_seq_idioma),1,255);
				elsif (ie_visita_fora_hor_w = 'LD') then 
					ds_perg_continua_p	:= substr(obter_texto_tasy(60159, wheb_usuario_pck.get_nr_seq_idioma),1,255);
				elsif (ie_visita_fora_hor_w = 'LM') then 
					ds_perg_continua_p 	:= substr(obter_texto_tasy(104129, wheb_usuario_pck.get_nr_seq_idioma),1,255);
				end if;
				end;
			end if;
			end;
		end if;
		end;
	end if;
 
	/* Controle de Visitas - Parametro [60] - Considerar também o grau de parentesco informado na pasta Visitantes Autorizados */
 
	ie_considera_grau_parente_w := obter_param_usuario(8014, 60, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_considera_grau_parente_w);
 
	if (ie_considera_grau_parente_w = 'S') and (nr_seq_tipo_p IS NOT NULL AND nr_seq_tipo_p::text <> '') then 
		begin 
		select	obter_tipo_visita_autorizada(nr_atendimento_p, nr_seq_tipo_p) 
		into STRICT	ie_tipo_visita_auto_w 
		;
 
		if (ie_tipo_visita_auto_w = 'N') then 
			ds_erro_p	:= substr(obter_texto_tasy(60142, wheb_usuario_pck.get_nr_seq_idioma),1,255);
		end if;
		end;
	end if;
	end;
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consistir_dados_atend_visita ( nr_atendimento_p bigint, cd_pessoa_fisica_p text, eh_modo_edicao_p text, nr_seq_controle_p bigint, cd_paciente_p text, dt_nascimento_p timestamp, dt_entrada_p timestamp, nr_seq_tipo_p bigint, nm_pessoa_fisica_p text, nm_usuario_p text, cd_estabelecimento_p bigint, ds_perg_p INOUT text, ds_perg_continua_p INOUT text, ds_erro_p INOUT text) FROM PUBLIC;

