-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE rc_proc AS (nr_seq_apre_w			bigint, 
				dt_proce_w			timestamp, 
				dt_entrada_w			timestamp, 
				dt_alta_w			timestamp, 
				cd_edicao_amb_w			varchar(10), 
				cd_proc_w			varchar(255), 
				ds_proc_w			varchar(255), 
				qt_proc_w			double precision, 
				vl_proc_w			double precision, 
				ie_aut_imp_w			varchar(10), 
				ie_via_aces_w			varchar(10), 
				cd_dent_w			varchar(10), 
				cd_face_dent_w			varchar(10),	 
				vl_unit_w			varchar(10), 
				ie_pess_w			varchar(10), 
				crm_exec_w 			varchar(10), 
				uf_exec_w 			medico.uf_crm%type);


CREATE OR REPLACE PROCEDURE pls_tiss_gerar_w_guia_odonto ( nr_seq_conta_p bigint, nm_usuario_p text) AS $body$
DECLARE

				
type 	tb_proc is table of rc_proc index by integer;				
					 
 
tb_proc_w	tb_proc;

nr_seq_apresentacao_w			bigint;
dt_procedimento_w			timestamp;
dt_entrada_w				timestamp;
cd_edicao_amb_w				varchar(10);
cd_procedimento_w			varchar(255);
ds_procedimento_w			varchar(255);
qt_procedimento_w			double precision;
vl_procedimento_w			double precision;
ie_autorizado_imp_w			varchar(10);
nr_proc_w				bigint;
ie_via_acesso_w				varchar(10);
qt_pag_guia_w				bigint := 1;
nr_seq_tiss_guia_w			w_tiss_guia.nr_sequencia%type := null;
nr_seq_tiss_contratado_solic		bigint := null;
cd_guia_prestador_w			pls_conta.nr_seq_prestador_exec%type;
cd_dente_w				pls_conta_proc.cd_dente%type := 0;	
cd_face_dente_w				tiss_face_dente.cd_face%type := null;
vl_unitario_w				double precision;
ie_pessoa_w				varchar(10);
crm_exec_w 				varchar(10);
uf_exec_w 				medico.uf_crm%type;
cd_medico_executor_w 			varchar(10);
cd_negativo_w 				varchar(10);
nr_seq_proc_w				varchar(10);
					
					 
c01 CURSOR FOR 
  SELECT    
		nr_sequencia, 
		cd_procedimento, 
		substr(obter_descricao_procedimento(cd_procedimento,ie_origem_proced),1,255), 
		qt_procedimento, 
		dt_procedimento, 
		ie_autorizado_imp, 
		vl_unitario * qt_procedimento, 
		cd_dente, 
		pls_obter_faces_dente_proc(nr_sequencia), 
		vl_unitario 
  from    pls_conta_proc 
  where    nr_seq_conta  = nr_seq_conta_p;

BEGIN 
 
delete	from w_tiss_proc_paciente 
where	nm_usuario		= nm_usuario_p;
 
delete from w_tiss_guia 
where	nm_usuario		= nm_usuario_p;
 
delete from w_tiss_contratado_solic 
where	nm_usuario		= nm_usuario_p;
 
commit;
 
if (nr_seq_conta_p IS NOT NULL AND nr_seq_conta_p::text <> '') then 
	 
	nr_seq_apresentacao_w := 1;
 
	nr_proc_w := 1;
 
 
	open c01;
	loop 
	fetch c01 into	 
			nr_seq_proc_w, 
			cd_procedimento_w, 
			ds_procedimento_w, 
			qt_procedimento_w, 
			dt_procedimento_w, 
			ie_via_acesso_w, 
			vl_procedimento_w, 
			cd_dente_w, 
			cd_face_dente_w, 
			vl_unitario_w;
		 
	EXIT WHEN NOT FOUND; /* apply on C01 */	
	 
		 
		 
		begin 
			tb_proc_w[nr_proc_w].nr_seq_apre_w	:= nr_seq_apresentacao_w;
			tb_proc_w[nr_proc_w].dt_proce_w		:= dt_procedimento_w;
			tb_proc_w[nr_proc_w].cd_edicao_amb_w	:= cd_edicao_amb_w;
			tb_proc_w[nr_proc_w].cd_proc_w		:= cd_procedimento_w;
			tb_proc_w[nr_proc_w].ds_proc_w		:= ds_procedimento_w;
			tb_proc_w[nr_proc_w].qt_proc_w		:= qt_procedimento_w;
			tb_proc_w[nr_proc_w].ie_via_aces_w	:= ie_via_acesso_w;
			tb_proc_w[nr_proc_w].vl_proc_w		:= vl_procedimento_w;
			tb_proc_w[nr_proc_w].cd_dent_w		:= cd_dente_w;
			tb_proc_w[nr_proc_w].cd_face_dent_w	:= cd_face_dente_w;
			tb_proc_w[nr_proc_w].vl_unit_w		:= vl_unitario_w;
			 
			nr_proc_w := nr_proc_w + 1;
			nr_seq_apresentacao_w := nr_seq_apresentacao_w + 1;
		end;
	end loop;
	close c01;
	 
	select nr_seq_prestador, 
		substr(pls_obter_dados_prestador(NR_SEQ_PRESTADOR_EXEC,'TPR'),1,255), 
		cd_medico_executor 
	into STRICT	cd_guia_prestador_w, 
		ie_pessoa_w, 
		cd_medico_executor_w 
	from 	pls_conta 
	where  nr_sequencia = nr_seq_conta_p;
	 
	 
	if (ie_pessoa_w = 'PF') then 
		select (select max(x.NR_CRM) from medico x where x.CD_PESSOA_FISICA = a.cd_medico_solicitante) ie_cro_sol, 
			(select max(x.UF_CRM) from medico x where x.CD_PESSOA_FISICA = a.cd_medico_solicitante) ie_UF_sol 
		into STRICT crm_exec_w, 
		   uf_exec_w 
		from pls_conta a 
		where  nr_sequencia = nr_seq_conta_p;
		 
	else 
		crm_exec_w := null;
		select UF_CRM_EXEC 
		into STRICT uf_exec_w 
		from pls_conta 
		where nr_sequencia = nr_seq_conta_p;
		 
	end if;
	 
	select	max(cd_codigo) 
	into STRICT	cd_negativo_w 
	from	pls_conta_glosa_ocorrencia_v 
	where NR_SEQ_PROC = nr_seq_proc_w;
		 
	 
	 
	for i in 1..tb_proc_w.count loop 
		begin 
			if (qt_pag_guia_w = 1) then 
				 
				select	nextval('w_tiss_guia_seq') 
				into STRICT	nr_seq_tiss_guia_w 
				;
			 
				 
				insert	into w_tiss_guia(nr_sequencia, dt_atualizacao, nm_usuario, 
					nr_seq_conta_guia, nr_guia_prestador ) 
				values (nr_seq_tiss_guia_w, clock_timestamp(), nm_usuario_p, 
					nr_seq_conta_p, cd_guia_prestador_w );	
				 
				 
						 
				insert	into w_tiss_contratado_solic(Nr_sequencia, dt_atualizacao, nm_usuario, 
					nr_seq_guia, nr_crm, uf_crm, cd_interno, 
					nr_seq_conta, cd_cgc)--( cd_cgc está guardando o código negativo) 
				values (nextval('w_tiss_contratado_solic_seq'), clock_timestamp(), nm_usuario_p, 
					nr_seq_tiss_guia_w,crm_exec_w, uf_exec_w, cd_medico_executor_w, 
					nr_seq_conta_p, cd_negativo_w );
					 
				 
			end if;
			 
			 
			if (nr_seq_apresentacao_w > 20) then 
				nr_seq_apresentacao_w  := 1;
			end if;
			 
			insert into w_tiss_proc_paciente(nr_sequencia, 
				dt_atualizacao, 
				nm_usuario, 
				nr_seq_apresentacao, 
				dt_procedimento, 
				cd_edicao_amb, 
				cd_procedimento, 
				ds_procedimento, 
				qt_procedimento, 
				ie_via_acesso, 
				vl_procedimento, 
				nr_seq_conta, 
				nr_seq_guia, 
				ie_tecnica_utilizada, -- cd_dente 
				ie_funcao_medico, -- cd_face_dente 
				vl_unitario) 
			values (nextval('w_tiss_proc_paciente_seq'), 
				clock_timestamp(), 
				nm_usuario_p, 
				nr_seq_apresentacao_w, 
				tb_proc_w[i].dt_proce_w, 
				tb_proc_w[i].cd_edicao_amb_w, 
				tb_proc_w[i].cd_proc_w, 
				tb_proc_w[i].ds_proc_w, 
				tb_proc_w[i].qt_proc_w, 
				tb_proc_w[i].ie_via_aces_w, 
				tb_proc_w[i].vl_proc_w, 
				nr_seq_conta_p, 
				nr_seq_tiss_guia_w, 
				tb_proc_w[i].cd_dent_w, 
				tb_proc_w[i].cd_face_dent_w, 
				tb_proc_w[i].vl_unit_w);
				 
			 nr_seq_apresentacao_w  := nr_seq_apresentacao_w + 1;
			 
			if (qt_pag_guia_w = 20) then 
				qt_pag_guia_w := 1;	
			else 
				qt_pag_guia_w := qt_pag_guia_w+1;
			end if;
		end;
	end loop;
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_tiss_gerar_w_guia_odonto ( nr_seq_conta_p bigint, nm_usuario_p text) FROM PUBLIC;

