-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE plt_sincronizar_ordem_med ( nm_usuario_p text, nr_atendimento_p bigint, dt_validade_limite_p timestamp, dt_horario_p timestamp, nr_horario_p integer, ie_prescr_usuario_p text) AS $body$
DECLARE


ds_sep_bv_w			varchar(50);
nr_prescricao_w			bigint;
nr_seq_item_ordem_w		integer;
nr_seq_horario_w		bigint;
ie_status_horario_w		varchar(15);
nr_seq_ordem_w			bigint;
ds_ordem_w			varchar(255);
ie_acm_sn_w			varchar(1);
ds_prescricao_w			varchar(255);
dt_suspensao_w			timestamp;
ds_comando_update_w		varchar(4000);
ie_lib_pend_rep_w		varchar(1);

c01 CURSOR FOR
SELECT	a.nr_prescricao,
	b.nr_seq_solucao nr_seq_item_ordem,
	c.nr_sequencia,
	substr(obter_status_hor_ordem_med(c.dt_fim_horario,c.dt_suspensao),1,15),
	b.nr_sequencia nr_seq_ordem,
	x.ds_ordem,
	'N' ie_acm_sn,
	obter_desc_solucao_adep(a.nr_prescricao,b.nr_seq_solucao) ds_prescricao,
	c.dt_suspensao dt_suspensao,
	substr(plt_obter_lib_pend_prescr(a.dt_liberacao_medico,a.dt_liberacao,a.dt_liberacao_farmacia),1,1)
from	ordem_medica x,
	prescr_ordem_hor c,
	prescr_medica_ordem b,
	prescr_medica a
where	x.nr_sequencia = b.nr_seq_ordem
and	c.nr_seq_ordem = b.nr_sequencia
and	b.nr_prescricao = a.nr_prescricao
and	a.nr_atendimento = nr_atendimento_p
and	a.dt_validade_prescr > dt_validade_limite_p
and	(b.nr_seq_solucao IS NOT NULL AND b.nr_seq_solucao::text <> '')
and	coalesce(a.ie_adep,'S') = 'S'
and	c.dt_horario = dt_horario_p
and	((a.dt_liberacao_medico IS NOT NULL AND a.dt_liberacao_medico::text <> '' AND ie_prescr_usuario_p = 'N') or (a.nm_usuario_original = nm_usuario_p))
group by
	a.nr_prescricao,
	b.nr_seq_solucao,
	c.nr_sequencia,
	c.dt_fim_horario,
	c.dt_suspensao,
	b.nr_sequencia,
	x.ds_ordem,
	'N',
	a.dt_liberacao_medico,
	a.dt_liberacao,
	a.dt_liberacao_farmacia

union all

select	a.nr_prescricao,
	b.nr_seq_material nr_seq_item_ordem,
	c.nr_sequencia,
	substr(obter_status_hor_ordem_med(c.dt_fim_horario,c.dt_suspensao),1,15),
	b.nr_sequencia nr_seq_ordem,
	x.ds_ordem,
	'N' ie_acm_sn,
	z.ds_material ds_prescricao,
	c.dt_suspensao dt_suspensao,
	substr(plt_obter_lib_pend_prescr(a.dt_liberacao_medico,a.dt_liberacao,a.dt_liberacao_farmacia),1,1)
from	material z,
	prescr_material y,
	ordem_medica x,
	prescr_ordem_hor c,
	prescr_medica_ordem b,
	prescr_medica a
where	z.cd_material = y.cd_material
and	y.nr_prescricao = a.nr_prescricao
and	y.nr_prescricao = b.nr_prescricao
and	y.nr_sequencia = b.nr_seq_material
and	x.nr_sequencia = b.nr_seq_ordem
and	c.nr_seq_ordem = b.nr_sequencia
and	b.nr_prescricao = a.nr_prescricao
and	a.nr_atendimento = nr_atendimento_p
and	a.dt_validade_prescr > dt_validade_limite_p
and	(b.nr_seq_material IS NOT NULL AND b.nr_seq_material::text <> '')
and	coalesce(a.ie_adep,'S') = 'S'
and	c.dt_horario = dt_horario_p
and	((a.dt_liberacao_medico IS NOT NULL AND a.dt_liberacao_medico::text <> '' AND ie_prescr_usuario_p = 'N') or (a.nm_usuario_original = nm_usuario_p))
group by
	a.nr_prescricao,
	b.nr_seq_material,
	c.nr_sequencia,
	c.dt_fim_horario,
	c.dt_suspensao,
	b.nr_sequencia,
	x.ds_ordem,
	'N',
	z.ds_material,
	a.dt_liberacao_medico,
	a.dt_liberacao,
	a.dt_liberacao_farmacia
order by
	dt_suspensao;


BEGIN
ds_sep_bv_w := obter_separador_bv;
open c01;
loop
fetch c01 into	nr_prescricao_w,
		nr_seq_item_ordem_w,
		nr_seq_horario_w,
		ie_status_horario_w,
		nr_seq_ordem_w,
		ds_ordem_w,
		ie_acm_sn_w,
		ds_prescricao_w,
		dt_suspensao_w,
		ie_lib_pend_rep_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	ds_comando_update_w	:=	' update w_rep_t ' ||
					' set hora' || to_char(nr_horario_p) || ' = :vl_hora, ' ||
					' nr_prescricoes = adep_juntar_prescricao(nr_prescricoes,:nr_prescricao) ' ||
					' where nm_usuario = :nm_usuario ' ||
					' and ie_tipo_item = :ie_tipo ' ||
					' and nvl(nr_prescricao,nvl(:nr_prescricao,0)) = nvl(:nr_prescricao,0) ' ||
					' and nvl(nr_seq_item,nvl(:nr_seq_item,0)) = nvl(:nr_seq_item,0) ' ||
					' and cd_item = :cd_item ' ||
					' and ie_pendente_liberacao = :ie_pendente_liberacao ' ||
					' and ((ds_prescricao = :ds_prescricao) or (ds_prescricao is null)) ';

	CALL exec_sql_dinamico_bv('PLT', ds_comando_update_w,	'vl_hora=S' || to_char(nr_seq_horario_w) || 'H' || ie_status_horario_w || ds_sep_bv_w ||
								'nr_prescricao=' || to_char(nr_prescricao_w) || ds_sep_bv_w ||
								'nm_usuario=' || nm_usuario_p || ds_sep_bv_w ||
								'ie_tipo=B' || ds_sep_bv_w ||
								'nr_seq_item=' || to_char(nr_seq_item_ordem_w) || ds_sep_bv_w ||
								'cd_item=' || to_char(nr_seq_horario_w) || ds_sep_bv_w ||
								'ie_pendente_liberacao=' || ie_lib_pend_rep_w || ds_sep_bv_w ||
								'ds_prescricao=' || ds_prescricao_w || ds_sep_bv_w );
	end;
end loop;
close c01;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE plt_sincronizar_ordem_med ( nm_usuario_p text, nr_atendimento_p bigint, dt_validade_limite_p timestamp, dt_horario_p timestamp, nr_horario_p integer, ie_prescr_usuario_p text) FROM PUBLIC;

