-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE campos AS (	nr_seq_que_questao_opcao	que_questao_opcao.nr_sequencia%type, 
			nr_seq_tasy_padrao_cor	que_atendimento_questao_op.nr_seq_tasy_padrao_cor%type);


CREATE OR REPLACE PROCEDURE gravar_inf_respostas_qep ( nr_seq_que_atend_questao_p bigint, lista_sequencias_p text, ds_resposta_p text, ds_observacao_p text, nm_usuario_p text, lista_seq_padrao_cor_p text default null) AS $body$
DECLARE

 
dt_liberacao_questionario_w	que_atendimento.dt_liberacao%type;
nr_seq_que_atendimento_w	que_atendimento.nr_sequencia%type;
nr_seq_que_atendimento_novo_w	que_atendimento.nr_sequencia%type;
nr_seq_que_atend_questao_w	que_atendimento_questao.nr_sequencia%type;
nr_seq_que_questao_w		que_questao.nr_sequencia%type;
ie_tipo_resposta_w		que_questao.ie_tipo_resposta%type;
nr_atendimento_w		atendimento_paciente.nr_atendimento%type;
cd_pessoa_atendimento_w		pessoa_fisica.cd_pessoa_fisica%type;
ie_sexo_pessoa_atend_w		pessoa_fisica.ie_sexo%type;
ie_tipo_atendimento_w		atendimento_paciente.ie_tipo_atendimento%type;
qt_idade_pf_w			bigint;
ie_alterou_registro_w		varchar(1);
ind1_w				bigint;
ind2_w				bigint;
aux_w				varchar(255);
nr_seq_que_questao_opcao_w	que_questao_opcao.nr_sequencia%type;
nr_seq_tasy_padrao_cor_w	que_atendimento_questao_op.nr_seq_tasy_padrao_cor%type;

nr_seq_que_atend_questao_new_w	que_atendimento_questao.nr_sequencia%type;
ds_parametros_w			varchar(255);
ds_retorno_sql_w		varchar(4000);
type vetor is table of campos index by integer;
lista_respostas_w		vetor;

C01 CURSOR FOR 
	SELECT	a.nr_sequencia 
	from	que_questao_opcao a 
	where	obter_se_contido(a.nr_sequencia, lista_sequencias_p) = 'S' 
	order by coalesce(a.nr_seq_apres,9999), a.ds_opcao;

c02 CURSOR FOR 
	SELECT	b.nr_sequencia, 
		b.ds_sql, 
		b.ds_sql_observacao 
	from	que_questao b 
	where	nr_seq_questao_sup = nr_seq_que_questao_w 
	and (coalesce(nr_seq_questao_opcao::text, '') = '' or obter_se_contido(nr_seq_questao_opcao, lista_sequencias_p) = 'S') 
	and (coalesce(b.ie_sexo::text, '') = '' or b.ie_sexo = coalesce(ie_sexo_pessoa_atend_w,b.ie_sexo)) 
	and (qt_idade_pf_w between coalesce(b.qt_idade_min,0) and coalesce(b.qt_idade_max,999)) 
	and (coalesce(b.ie_tipo_atendimento::text, '') = '' or b.ie_tipo_atendimento = ie_tipo_atendimento_w) 
	and	coalesce(b.ie_situacao,'A') = 'A' 
	and not exists (	SELECT	1 
				from	que_atendimento_questao x 
				where	x.nr_seq_que_atendimento = nr_seq_que_atendimento_w 
				and	x.nr_seq_questao = b.nr_sequencia);

c02_w	c02%rowtype;


BEGIN 
 
select	max(a.dt_liberacao), 
	max(a.nr_sequencia), 
	max(b.nr_seq_questao), 
	max(a.nr_atendimento) 
into STRICT	dt_liberacao_questionario_w, 
	nr_seq_que_atendimento_w, 
	nr_seq_que_questao_w, 
	nr_atendimento_w 
from	que_atendimento_questao b, 
	que_atendimento a 
where	a.nr_sequencia = b.nr_seq_que_atendimento 
and	b.nr_sequencia = nr_seq_que_atend_questao_p;
 
nr_seq_que_atend_questao_w	:= nr_seq_que_atend_questao_p;
if (dt_liberacao_questionario_w IS NOT NULL AND dt_liberacao_questionario_w::text <> '') then 
 
	nr_seq_que_atendimento_novo_w := duplicar_questionario_QEP(nr_seq_que_atendimento_w, nm_usuario_p, nr_seq_que_atendimento_novo_w);
	 
	update	que_atendimento 
	set	ie_situacao = 'I', 
		dt_inativacao = clock_timestamp(), 
		nm_usuario_inativacao = nm_usuario_p 
	where	nr_sequencia = nr_seq_que_atendimento_w;
	 
	select	max(nr_sequencia) 
	into STRICT	nr_seq_que_atend_questao_w 
	from	que_atendimento_questao 
	where	nr_seq_que_atendimento = nr_seq_que_atendimento_novo_w 
	and	nr_seq_questao = nr_seq_que_questao_w;
	 
	nr_seq_que_atendimento_w	:= nr_seq_que_atendimento_novo_w;
end if;
 
--if	(ds_observacao_p is not null) then 
	update	que_atendimento_questao 
	set	nm_usuario = nm_usuario_p, 
		dt_atualizacao = clock_timestamp(), 
		ds_observacao = ds_observacao_p 
	where	nr_sequencia = nr_seq_que_atend_questao_w 
	and	coalesce(ds_observacao,'*$#¨%&') <> coalesce(ds_observacao_p,'*$#¨%&');
--end if; 
 
 
select	max(b.ie_tipo_resposta) 
into STRICT	ie_tipo_resposta_w 
from	que_questao b 
where	b.nr_sequencia = nr_seq_que_questao_w 
and	coalesce(ie_situacao, 'A') = 'A';
 
ie_alterou_registro_w	:= 'N';
 
if (ie_tipo_resposta_w = 'D') then 
	select	CASE WHEN obter_qep_respostas(nr_seq_que_atend_questao_w, 'D', ie_tipo_resposta_w)=ds_resposta_p THEN  'N'  ELSE 'S' END  
	into STRICT	ie_alterou_registro_w 
	;
else 
	select	CASE WHEN obter_qep_respostas(nr_seq_que_atend_questao_w, 'C', ie_tipo_resposta_w)=lista_sequencias_p THEN  'N'  ELSE 'S' END  
	into STRICT	ie_alterou_registro_w 
	;
end if;
		 
if (ie_alterou_registro_w = 'S') then 
	delete	from que_atendimento_questao_op 
	where	nr_seq_que_atend_questao = nr_seq_que_atend_questao_w;
 
	-- caso houver apenas a observação informada, insere um registro com esta informação. 
	if (ds_resposta_p IS NOT NULL AND ds_resposta_p::text <> '') and (coalesce(lista_sequencias_p::text, '') = '') then 
		insert into que_atendimento_questao_op( 
			NR_SEQUENCIA, 
			DT_ATUALIZACAO, 
			NM_USUARIO, 
			DT_ATUALIZACAO_NREC, 
			NM_USUARIO_NREC, 
			DS_RESPOSTA, 
			NR_SEQ_QUE_ATEND_QUESTAO) 
		values ( 
			nextval('que_atendimento_questao_op_seq'), 
			clock_timestamp(), 
			nm_usuario_p, 
			clock_timestamp(), 
			nm_usuario_p, 
			ds_resposta_p, 
			nr_seq_que_atend_questao_w 
			);
	elsif (coalesce(ds_resposta_p::text, '') = '') and (lista_sequencias_p IS NOT NULL AND lista_sequencias_p::text <> '') then 
		if (lista_seq_padrao_cor_p IS NOT NULL AND lista_seq_padrao_cor_p::text <> '') then 
			aux_w				:= '';
			ind1_w				:= 0;
			nr_seq_que_questao_opcao_w	:= null;
			for ind2_w in 1..length(lista_seq_padrao_cor_p) loop 
				if (substr(lista_seq_padrao_cor_p,ind2_w,1) = ',') then 
					nr_seq_que_questao_opcao_w				:= (aux_w)::numeric;
					aux_w							:= '';
				elsif (substr(lista_seq_padrao_cor_p,ind2_w,1) = '=') then 
					aux_w							:= '';
				elsif (substr(lista_seq_padrao_cor_p,ind2_w,1) = ';') then 
					if (nr_seq_que_questao_opcao_w IS NOT NULL AND nr_seq_que_questao_opcao_w::text <> '') and (aux_w IS NOT NULL AND aux_w::text <> '') and (obter_se_contido(nr_seq_que_questao_opcao_w,lista_sequencias_p) = 'S') then 
						ind1_w							:= ind1_w + 1;
						lista_respostas_w[ind1_w].nr_seq_que_questao_opcao	:= nr_seq_que_questao_opcao_w;
						lista_respostas_w[ind1_w].nr_seq_tasy_padrao_cor	:= (aux_w)::numeric;
					end if;
					aux_w							:= '';
					nr_seq_que_questao_opcao_w				:= null;
				else 
					aux_w := aux_w || substr(lista_seq_padrao_cor_p,ind2_w,1);
				end if;
			end loop;
		nr_seq_que_questao_opcao_w	:= null;
		end if;
		 
		nr_seq_tasy_padrao_cor_w	:= null;
		open C01;
		loop 
		fetch C01 into	 
			nr_seq_que_questao_opcao_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin 
			if (lista_seq_padrao_cor_p IS NOT NULL AND lista_seq_padrao_cor_p::text <> '') and (lista_respostas_w.count > 0) then 
				for ind1_w in lista_respostas_w.first..lista_respostas_w.last loop 
					if (lista_respostas_w[ind1_w].nr_seq_que_questao_opcao = nr_seq_que_questao_opcao_w) then 
						nr_seq_tasy_padrao_cor_w	:= lista_respostas_w[ind1_w].nr_seq_tasy_padrao_cor;
					end if;
				end loop;
			end if;
			 
			insert into que_atendimento_questao_op( 
				NR_SEQUENCIA, 
				DT_ATUALIZACAO, 
				NM_USUARIO, 
				DT_ATUALIZACAO_NREC, 
				NM_USUARIO_NREC, 
				DS_RESPOSTA, 
				NR_SEQ_QUE_ATEND_QUESTAO, 
				NR_SEQ_QUE_QUESTAO_OPCAO, 
				NR_SEQ_TASY_PADRAO_COR) 
			values ( 
				nextval('que_atendimento_questao_op_seq'), 
				clock_timestamp(), 
				nm_usuario_p, 
				clock_timestamp(), 
				nm_usuario_p, 
				ds_resposta_p, 
				nr_seq_que_atend_questao_w, 
				nr_seq_que_questao_opcao_w, 
				nr_seq_tasy_padrao_cor_w 
				);
 
			end;
		end loop;
		close C01;
	end if;
 
	CALL excluir_que_atend_questao(nr_seq_que_atend_questao_p);
		 
	cd_pessoa_atendimento_w := obter_pessoa_atendimento(nr_atendimento_w,'C');
	ie_sexo_pessoa_atend_w	:= obter_sexo_pf(cd_pessoa_atendimento_w,'C');
	qt_idade_pf_w		:= Obter_Idade_PF(cd_pessoa_atendimento_w, clock_timestamp(), 'A');
	ie_tipo_atendimento_w	:= Obter_Tipo_Atendimento(nr_atendimento_w);
 
	open C02;
	loop 
	fetch C02 into	 
		c02_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		 
		select	nextval('que_atendimento_questao_seq') 
		into STRICT	nr_seq_que_atend_questao_new_w 
		;
 
		ds_retorno_sql_w := null;
		if (c02_w.ds_sql_observacao IS NOT NULL AND c02_w.ds_sql_observacao::text <> '') then 
			ds_parametros_w := null;
			if (position(':NR_ATENDIMENTO_P' in upper(c02_w.ds_sql_observacao)) > 0) then 
				ds_parametros_w := 'NR_ATENDIMENTO_P='||nr_atendimento_w;
			end if;
			 
			ds_retorno_sql_w := OBTER_VALOR_DINAMICO_4000_BV(c02_w.ds_sql_observacao, ds_parametros_w, ds_retorno_sql_w);
		end if;
		 
		insert into que_atendimento_questao( 
			NR_SEQUENCIA, 
			NR_SEQ_QUE_ATENDIMENTO, 
			NR_SEQ_QUESTAO, 
			DT_ATUALIZACAO, 
			NM_USUARIO, 
			DS_OBSERVACAO) 
		values ( 
			nr_seq_que_atend_questao_new_w, 
			nr_seq_que_atendimento_w, 
			c02_w.nr_sequencia, 
			clock_timestamp(), 
			nm_usuario_p, 
			ds_retorno_sql_w);
 
		if (c02_w.ds_sql IS NOT NULL AND c02_w.ds_sql::text <> '') then 
			ds_parametros_w := null;
			ds_retorno_sql_w := null;
			 
			if (position(':NR_ATENDIMENTO_P' in upper(c02_w.ds_sql)) > 0) then 
				ds_parametros_w := 'NR_ATENDIMENTO_P='||nr_atendimento_w;
			end if;
			 
			ds_retorno_sql_w := OBTER_VALOR_DINAMICO_4000_BV(c02_w.ds_sql, ds_parametros_w, ds_retorno_sql_w);
			 
			if (ds_retorno_sql_w IS NOT NULL AND ds_retorno_sql_w::text <> '') then 
				insert into que_atendimento_questao_op( 
					nr_sequencia, 
					dt_atualizacao, 
					nm_usuario, 
					dt_atualizacao_nrec, 
					nm_usuario_nrec, 
					ds_resposta, 
					nr_seq_que_atend_questao, 
					nr_seq_que_questao_opcao, 
					ds_observacao, 
					nr_seq_tasy_padrao_cor) 
				values ( 
					nextval('que_atendimento_questao_op_seq'), 
					clock_timestamp(), 
					nm_usuario_p, 
					clock_timestamp(), 
					nm_usuario_p, 
					ds_retorno_sql_w, 
					nr_seq_que_atend_questao_new_w, 
					null, 
					null, 
					null);
			end if;
		end if;
	end loop;
	close C02;
 
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gravar_inf_respostas_qep ( nr_seq_que_atend_questao_p bigint, lista_sequencias_p text, ds_resposta_p text, ds_observacao_p text, nm_usuario_p text, lista_seq_padrao_cor_p text default null) FROM PUBLIC;

