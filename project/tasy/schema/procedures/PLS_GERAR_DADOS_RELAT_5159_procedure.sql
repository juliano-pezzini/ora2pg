-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_dados_relat_5159 ( nr_titulo_p bigint, nr_seq_lote_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE


/* IE_BANDA:
	P - Pagador
	I - Itens de mensalidade
	T - Tributos do título
	O - Operadora empresa + dados plano
	B - Beneficiários do boleto PF
	C - Beneficiários com coparticipação
	A - Itens de coparticipação
	D - Demontrativo de pagamento
	Q - Quebra de página
*/


/* Cursor 1 */

nr_titulo_w			bigint;
cd_operadora_empresa_w		bigint;
nr_seq_mensalidade_w		bigint;

/* Cursr 2 */

nr_seq_plano_w			bigint;
nr_seq_tabela_w			bigint;
qt_idade_inicial_w		bigint;
ds_item_w			varchar(255);
vl_unitario_w			double precision;
qt_segurados_w			bigint;
vl_total_item_w			double precision;

/* Cursor 3 */

ds_tributo_w			varchar(255);
tx_tributo_w			double precision;
vl_tributo_w			double precision;
vl_base_calculo_trib_w		double precision;
ie_tipo_tributo_w		varchar(15);

/* Cursor 4 */

ie_tipo_contratacao_w		varchar(2);
ie_participacao_w		varchar(1);
ds_plano_w			varchar(80);

/* Cursor 5 */

nr_seq_mensalidade_seg_w	bigint;
nr_seq_segurado_w		bigint;
nm_segurado_w			varchar(255);
dt_contratacao_w		timestamp;
cd_ans_w			varchar(255);

/* Cursor 6 */

vl_item_w			double precision;

/* Cursor 8 */

dt_emissao_conta_w		timestamp;
nr_seq_conta_w			bigint;
nm_prestador_w			varchar(255);
ds_procedimento_w		varchar(255);
cd_procedimento_w		bigint;
vl_procedimento_w		double precision;
vl_coparticipacao_w		double precision;
nr_seq_protocolo_w		bigint;
cd_guia_w			pls_conta.cd_guia%type;
cd_guia_referencia_w		pls_conta.cd_guia_referencia%type;
nr_seq_mens_item_w		bigint;
qt_coparticipacao_w		bigint;

/* Cursor 9 */

ie_tipo_item_w			varchar(2);
qt_item_w			bigint;

/* Outros SELECT's */

ie_pf_pj_w			varchar(2);
nm_pagador_w			varchar(255);
cd_cgc_w			varchar(14);
cd_pessoa_fisica_w		varchar(10);
dt_emissao_w			timestamp;
nr_nosso_numero_w		varchar(255);
tx_multa_w			double precision;
tx_juros_w			double precision;
ie_situacao_titulo_w		varchar(1);
nr_bloqueto_w			varchar(44);
vl_titulo_w			double precision;
dt_liquidacao_w			timestamp;
dt_vencimento_w			timestamp;
ds_observacao_w			varchar(4000);
dt_referencia_w			timestamp;
vl_mensalidade_w		double precision;
vl_pre_estabelecido_w		double precision;
cd_banco_dig_w			varchar(255);
vl_bonificacao_w		double precision;
nr_seq_pagador_w		bigint;
ds_endereco_w			varchar(255);
ds_bairro_w			varchar(255);
cd_cep_w			varchar(10);
ds_municipio_w			varchar(255);
sg_estado_w			compl_pessoa_fisica.sg_estado%type;
nr_cpf_w			varchar(11);
cd_usuario_plano_w		varchar(30);
cd_agencia_bancaria_w		varchar(255);
nr_seq_relat_boleto_w		bigint;
ie_extrato_detalhado_w		varchar(1);
qt_paginas_w			bigint;
nr_pagina_w			bigint;
nr_pagina_linha_w		bigint;
nr_seq_linha_benef_w		bigint;
qt_linhas_contador_w		bigint;
qt_benef_itens_w		bigint;
qt_itens_mens_w			bigint;
qt_benef_copartic_w		bigint;
qt_itens_copartic_w		bigint;
qt_linhas_total_w		bigint;
qt_linhas_brancas_w		bigint;
qt_limite_linhas_w		bigint;
qt_limite_lin_extrato_w		bigint;
cd_banco_w			banco.cd_banco%type;
cd_portador_w			titulo_receber.cd_portador%type;
nr_seq_carteira_cobr_w		titulo_receber.nr_seq_carteira_cobr%type;
cd_carteira_w			banco_carteira.cd_carteira%type;
qt_reajuste_w			integer;
qt_linhas_extrato_w		integer;
ie_registro_w			w_pls_relat_boleto.ie_registro%type;
ie_prorrogado_w			w_pls_relat_boleto.ie_prorrogado%type;
qt_benef_pos_estab_w		bigint;
qt_itens_pos_estab_w		bigint;
nr_seq_linha_item_pos_estab_w	w_pls_relat_boleto.nr_sequencia%type;
dt_vencimento_original_w	timestamp;

C01 CURSOR FOR
	SELECT	distinct b.nr_titulo,
		d.cd_operadora_empresa,
		a.nr_sequencia nr_seq_mensalidade
	from	pls_mensalidade		a,
		titulo_receber		b,
		pls_contrato_pagador	c,
		pls_contrato		d
	where	a.nr_sequencia	= b.nr_seq_mensalidade
	and	c.nr_sequencia	= a.nr_seq_pagador
	and	d.nr_sequencia	= c.nr_seq_contrato
	and	a.nr_seq_lote	= nr_seq_lote_p
	and	coalesce(nr_seq_lote_p,0) <> 0
	
union all

	SELECT	nr_titulo,
		null cd_operadora_empresa,
		nr_seq_mensalidade
	from	titulo_receber
	where	nr_titulo = nr_titulo_p
	and	coalesce(nr_titulo_p,0) <> 0
	and	(nr_seq_mensalidade IS NOT NULL AND nr_seq_mensalidade::text <> '')
	order by
		cd_operadora_empresa;

/*
-- Dados ITENS DE MENSALIDADE - boleto PJ

Cursor C02 is
	select	f.nr_sequencia nr_seq_plano,
		e.nr_sequencia nr_seq_tabela,
		d.qt_idade_inicial,
		substr(f.ds_plano || ' - Fx. Etária: ' || d.qt_idade_inicial,1,270) ds_item,
		d.vl_preco_atual vl_unitario,
		count(b.nr_seq_segurado) qt_segurados,
		sum(a.vl_item) vl_total
	from	pls_mensalidade_seg_item	a,
		pls_mensalidade_segurado	b,
		pls_mensalidade			c,
		pls_plano_preco			d,
		pls_tabela_preco		e,
		pls_plano			f,
		pls_segurado			g
	where	b.nr_sequencia	= a.nr_seq_mensalidade_seg
	and	c.nr_sequencia	= b.nr_seq_mensalidade
	and	e.nr_sequencia	= d.nr_seq_tabela
	and	e.nr_sequencia	= g.nr_seq_tabela
	and	f.nr_sequencia	= e.nr_seq_plano
	and	f.nr_sequencia	= g.nr_seq_plano
	and	g.nr_sequencia	= b.nr_seq_segurado
	and	c.nr_sequencia	= nr_seq_mensalidade_w
	and	a.ie_tipo_item	in (1,25)
	and	obter_idade_pf(g.cd_pessoa_fisica,sysdate,'A') between d.qt_idade_inicial and d.qt_idade_final
	group by
		f.nr_sequencia,
		e.nr_sequencia,
		d.qt_idade_inicial,
		f.ds_plano,
		d.qt_idade_inicial,
		d.vl_preco_atual
	union all
	select 	null nr_seq_plano,
		null nr_seq_tabela,
		null qt_idade_inicial,
		substr(obter_valor_dominio(1930, b.ie_tipo_item), 1, 255) || decode(b.ie_tipo_item, '20',
		(select	nvl(' - ' || ds_tipo_lancamento,'')
		from	pls_tipo_lanc_adic
		where	cd_estabelecimento	= cd_estabelecimento_p
		and     nr_sequencia		= nvl(b.nr_seq_tipo_lanc,0)),
		decode(a.ie_operacao_motivo, 'S', ' - ACRÉSCIMO', 'D', ' - DESCONTO', '')) ds_item,
		null vl_unitario,
		count(c.nr_seq_segurado) qt_segurados,
		sum(b.vl_item) vl_total
	from	pls_tipo_lanc_adic		a,
		pls_mensalidade_seg_item	b,
		pls_mensalidade_segurado	c,
		pls_mensalidade			d,
		pls_segurado			e
	where	a.nr_sequencia(+)	= b.nr_seq_tipo_lanc
	and	c.nr_sequencia		= b.nr_seq_mensalidade_seg
	and	d.nr_sequencia		= c.nr_seq_mensalidade
	and	e.nr_sequencia		= c.nr_seq_segurado
	and	d.nr_sequencia = nr_seq_mensalidade_w
	and	((b.ie_tipo_item in (2, 5, 6, 9, 12, 14, 15, 16, 20, 21, 22, 23, 24, 27, 32, 33) and
		((e.dt_rescisao is null or e.dt_rescisao > d.dt_referencia) or b.ie_tipo_mensalidade = 'P' or b.ie_tipo_item = 6)) or
		(b.ie_tipo_item = 3))
	group by
		b.ie_tipo_item,
		b.nr_seq_tipo_lanc,
		a.ie_operacao_motivo
	order by
		1, 2, 3;
*/


-- Alteração TI-113100

-- Dados ITENS DE MENSALIDADE - boleto PJ
C02 CURSOR FOR
  SELECT nr_seq_plano,
         nr_seq_tabela,
         qt_idade_inicial,
         ds_item,
         vl_unitario,
         count(nr_seq_segurado),
         sum(vl_unitario)
  from (  SELECT  f.nr_sequencia nr_seq_plano,
      e.nr_sequencia nr_seq_tabela,
      d.qt_idade_inicial,
      substr(f.ds_plano || ' - Fx. Etária: ' || d.qt_idade_inicial,1,270) ds_item,
      sum(a.vl_item) vl_unitario,
      b.nr_sequencia,
      b.nr_seq_segurado
    from  pls_mensalidade_seg_item  a,
      pls_mensalidade_segurado   b,
      pls_mensalidade     c,
      pls_plano_preco     d,
      pls_tabela_preco     e,
      pls_plano       f,
      pls_segurado       g
    where  b.nr_sequencia  = a.nr_seq_mensalidade_seg
    and  c.nr_sequencia  = b.nr_seq_mensalidade
    and  e.nr_sequencia  = d.nr_seq_tabela
    and  e.nr_sequencia   = g.nr_seq_tabela
    and  f.nr_sequencia  = e.nr_seq_plano
    and  f.nr_sequencia  = g.nr_seq_plano
    and  g.nr_sequencia   = b.nr_seq_segurado
    and  c.nr_sequencia   = nr_seq_mensalidade_w
    and  a.ie_tipo_item   in (1,25)
    and  obter_idade_pf(g.cd_pessoa_fisica,clock_timestamp(),'A') between d.qt_idade_inicial and d.qt_idade_final
    group by  f.nr_sequencia, e.nr_sequencia, d.qt_idade_inicial, f.ds_plano, d.qt_idade_inicial, b.nr_sequencia, b.nr_seq_segurado) alias7
  group   by nr_seq_plano,
    nr_seq_tabela,
    qt_idade_inicial,
    ds_item,
    vl_unitario

union all

  select   null nr_seq_plano,
    null nr_seq_tabela,
    null qt_idade_inicial,
    substr(obter_valor_dominio(1930, b.ie_tipo_item), 1, 255) || CASE WHEN b.ie_tipo_item='20' THEN (select  coalesce(' - ' || ds_tipo_lancamento,'')      from  pls_tipo_lanc_adic      where  cd_estabelecimento  = cd_estabelecimento_p      and     nr_sequencia    = coalesce(b.nr_seq_tipo_lanc,0))  ELSE CASE WHEN a.ie_operacao_motivo='S' THEN  ' - ACRÉSCIMO' WHEN a.ie_operacao_motivo='D' THEN  ' - DESCONTO'  ELSE '' END  END  ds_item,
    null vl_unitario,
    count(c.nr_seq_segurado) qt_segurados,
    sum(b.vl_item) vl_total
  FROM pls_segurado e, pls_mensalidade d, pls_mensalidade_segurado c, pls_mensalidade_seg_item b
LEFT OUTER JOIN pls_tipo_lanc_adic a ON (b.nr_seq_tipo_lanc = a.nr_sequencia)
WHERE c.nr_sequencia    = b.nr_seq_mensalidade_seg and d.nr_sequencia    = c.nr_seq_mensalidade and e.nr_sequencia     = c.nr_seq_segurado and d.nr_sequencia = nr_seq_mensalidade_w /*  Retirada esta restrição conforme solicitado na OS 1264630
  and  ((b.ie_tipo_item in (2, 5, 6, 9, 12, 14, 15, 16, 20, 21, 22, 23, 24, 27, 32, 33) and
    ((e.dt_rescisao is null or e.dt_rescisao > d.dt_referencia) or b.ie_tipo_mensalidade = 'P' or b.ie_tipo_item = 6)) or
    (b.ie_tipo_item = 3))
  */
 group by  b.ie_tipo_item, b.nr_seq_tipo_lanc, a.ie_operacao_motivo
  order by   1, 2, 3;

C03 CURSOR FOR	/* Dados TRIBUTOS DO TÍTULO */
	SELECT	substr(obter_desc_tributo(a.cd_tributo), 1, 200) ds_tributo,
		coalesce(a.tx_tributo, 0) tx_tributo,
		coalesce(a.vl_tributo, 0) vl_tributo,
		coalesce(a.vl_base_calculo, 0) vl_base_calculo,
		b.ie_tipo_tributo
	from	titulo_receber_trib	a,
		tributo			b
	where	a.cd_tributo	= b.cd_tributo
	and	a.nr_titulo	= nr_titulo_w;

C04 CURSOR FOR	/* Dados PLANO */
	SELECT	d.ie_tipo_contratacao,
		coalesce(e.ie_participacao,d.ie_participacao) ie_participacao,
		d.ds_plano,
		CASE WHEN d.ie_regulamentacao='R' THEN  'Código SCPA: ' || d.cd_scpa  ELSE 'Código ANS: ' || d.nr_protocolo_ans END  cd_ans
	from	pls_mensalidade_segurado	a,
		pls_mensalidade			b,
		pls_segurado			c,
		pls_plano			d,
		pls_contrato			e
	where	b.nr_sequencia		= a.nr_seq_mensalidade
	and	c.nr_sequencia		= a.nr_seq_segurado
	and 	a.nr_seq_contrato 	= e.nr_sequencia
	and	d.nr_sequencia		= c.nr_seq_plano
	and	b.nr_sequencia		= nr_seq_mensalidade_w
	and (coalesce(c.dt_rescisao::text, '') = '' or c.dt_rescisao > b.dt_referencia)
	and	exists (	SELECT	1
				from	pls_mensalidade_seg_item	x
				where	x.nr_seq_mensalidade_seg = a.nr_sequencia
				and	x.ie_tipo_item = 25 )
	group by
		d.ie_tipo_contratacao,
		coalesce(e.ie_participacao,d.ie_participacao),
		d.ds_plano,
		d.ie_regulamentacao,
		d.nr_protocolo_ans,
		d.cd_scpa;

C05 CURSOR FOR	/* Dados BENEFICIÁRIOS */
	SELECT	a.nr_sequencia nr_seq_mensalidade_seg,
		c.nr_sequencia nr_seq_segurado,
		substr(d.nm_pessoa_fisica, 1, 255) nm_segurado,
		e.ds_plano,
		c.dt_contratacao,
		CASE WHEN e.nr_protocolo_ans='999999999' THEN  e.cd_scpa  ELSE e.nr_protocolo_ans END  nr_protocolo_ans
	from	pls_mensalidade_segurado	a,
		pls_mensalidade			b,
		pls_segurado			c,
		pessoa_fisica			d,
		pls_plano			e
	where	b.nr_sequencia		= a.nr_seq_mensalidade
	and	c.nr_sequencia		= a.nr_seq_segurado
	and	d.cd_pessoa_fisica	= c.cd_pessoa_fisica
	and	e.nr_sequencia		= c.nr_seq_plano
	and	b.nr_sequencia		= nr_seq_mensalidade_w
	order by
		d.nm_pessoa_fisica;

C06 CURSOR FOR	/* Dados ITENS DE MENSALIDADE - boleto PF */
	SELECT	substr(obter_valor_dominio(1930, ie_tipo_item), 1, 255) ds_item,
		sum(vl_item) vl_item
	from	pls_mensalidade_seg_item
	where	nr_seq_mensalidade_seg = nr_seq_mensalidade_seg_w
	and	ie_tipo_item not in (3, 6, 7, 23, 24, 27, 20, 21, 22, 16, 28, 29, 30, 32, 33, 34)
	group by	ie_tipo_item;

C07 CURSOR FOR	/* Dados BENEFICIÁRIOS com coparticipação */
	SELECT	a.nr_sequencia nr_seq_mensalidade_seg,
		b.nr_sequencia nr_seq_segurado,
		substr(c.nm_pessoa_fisica, 1, 255) nm_segurado
	from	pls_mensalidade_segurado	a,
		pls_segurado			b,
		pessoa_fisica			c
	where 	b.nr_sequencia		= a.nr_seq_segurado
	and	b.cd_pessoa_fisica	= c.cd_pessoa_fisica
	and	a.nr_seq_mensalidade	= nr_seq_mensalidade_w
	and	a.vl_coparticipacao <> 0;

C08 CURSOR FOR	/* Dados ITENS DE COPARTICIPAÇÃO */
	SELECT	coalesce(d.dt_emissao,d.dt_atendimento_referencia) dt_emissao_conta,
		d.nr_sequencia nr_seq_conta,
		substr(coalesce(pls_obter_dados_prestador(d.nr_seq_prestador_exec, 'N'), pls_obter_dados_protocolo(d.nr_seq_protocolo, 'PJ')), 1, 25) nm_prestador,
		'Materiais e Medicamentos' ds_procedimento,
		null cd_procedimento,
		sum(b.vl_base_copartic * b.qt_liberada_copartic) vl_procedimento,
		sum(b.vl_coparticipacao) vl_coparticipacao,
		d.nr_seq_protocolo,
		d.cd_guia,
		d.cd_guia_referencia,
		a.nr_sequencia qt_coparticipacao
	from	pls_mensalidade_seg_item	a,
		pls_conta_coparticipacao	b,
		pls_mensalidade_segurado	c,
		pls_conta			d
	where	c.nr_sequencia	= a.nr_seq_mensalidade_seg
	and	d.nr_sequencia	= a.nr_seq_conta
	and	d.nr_sequencia	= b.nr_seq_conta
	and	c.nr_sequencia	= nr_seq_mensalidade_seg_w
	and (SELECT	count(x.nr_sequencia)
		from	pls_conta_coparticipacao	x
		where	x.nr_seq_conta = d.nr_sequencia) > 1
	and	coalesce(b.nr_seq_conta_proc::text, '') = ''
	and	a.ie_tipo_item = 3
	group by
		d.nr_seq_prestador_exec,
		coalesce(d.dt_emissao,d.dt_atendimento_referencia),
		d.nr_sequencia,
		d.nr_seq_protocolo,
		d.cd_guia,
		d.cd_guia_referencia,
		a.nr_sequencia
	
union all

	select	coalesce(d.dt_emissao,d.dt_atendimento_referencia) dt_emissao_conta,
		d.nr_sequencia nr_seq_conta,
		substr(coalesce(pls_obter_dados_prestador(d.nr_seq_prestador_exec,'N'), pls_obter_dados_protocolo(d.nr_seq_protocolo, 'PJ')),1,25) nm_prestador,
		substr(pls_obter_dados_conta_proc(b.nr_seq_conta_proc,'CP'),1,25) ds_procedimento,
		somente_numero(substr(pls_obter_dados_conta_proc(b.nr_seq_conta_proc,'C'),1,15)) cd_procedimento,
		sum(b.vl_base_copartic * b.qt_liberada_copartic) vl_procedimento,
		sum(b.vl_coparticipacao) vl_coparticipacao,
		d.nr_seq_protocolo,
		d.cd_guia,
		d.cd_guia_referencia,
		a.nr_sequencia qt_coparticipacao
	from	pls_mensalidade_seg_item	a,
		pls_conta_coparticipacao	b,
		pls_mensalidade_segurado	c,
		pls_conta			d
	where	c.nr_sequencia	= a.nr_seq_mensalidade_seg
	and	d.nr_sequencia	= a.nr_seq_conta
	and	d.nr_sequencia	= b.nr_seq_conta
	and	c.nr_sequencia	= nr_seq_mensalidade_seg_w
	and   ((select	count(x.nr_sequencia)
		from	pls_conta_coparticipacao	x
		where	x.nr_seq_conta = d.nr_sequencia) = 1 or (b.nr_seq_conta_proc IS NOT NULL AND b.nr_seq_conta_proc::text <> ''))
	and	a.ie_tipo_item = 3
	group by
		d.nr_seq_prestador_exec,
		coalesce(d.dt_emissao,d.dt_atendimento_referencia),
		d.nr_sequencia,
		d.nr_seq_protocolo,
		d.cd_guia,
		d.cd_guia_referencia,
		pls_obter_dados_conta_proc(b.nr_seq_conta_proc,'CP'),
		pls_obter_dados_conta_proc(b.nr_seq_conta_proc,'C'),
		a.nr_sequencia;

C09 CURSOR FOR	/* Dados DEMONSTRATIVO DE PAGAMENTO */
	SELECT	a.ie_tipo_item,
		substr(obter_valor_dominio(1930,a.ie_tipo_item),1,255) ds_tipo_item,
		count(*) qt_item,
		sum(vl_item) vl_item
	from	pls_mensalidade_seg_item	a,
		pls_mensalidade_segurado	b
	where	b.nr_sequencia		= a.nr_seq_mensalidade_seg
	and	b.nr_seq_mensalidade	= nr_seq_mensalidade_w
	group by
		a.ie_tipo_item;

C10 CURSOR(	nr_seq_mensalidade_pc	pls_mensalidade.nr_sequencia%type) FOR
	SELECT	a.nr_sequencia nr_seq_mensalidade_seg,
		b.nr_sequencia nr_seq_segurado,
		substr(c.nm_pessoa_fisica, 1, 255) nm_segurado
	from	pls_mensalidade_segurado 	a,
		pls_segurado 			b,
		pessoa_fisica 			c
	where 	b.nr_sequencia		= a.nr_seq_segurado
	and	b.cd_pessoa_fisica 	= c.cd_pessoa_fisica
	and	a.nr_seq_mensalidade	= nr_seq_mensalidade_pc
	and	exists (SELECT	1
			from	pls_conta_pos_estabelecido 	x,
				pls_mensalidade_seg_item	y
			where	x.nr_seq_conta 			= y.nr_seq_conta
			and	y.nr_seq_mensalidade_seg	= a.nr_sequencia
			and	coalesce(x.vl_beneficiario,0) 	<> 0);

	/* Detalhe do pós estabelecido por custo operacional */

C11 CURSOR(	nr_seq_mensalidade_seg_pc	pls_mensalidade_segurado.nr_sequencia%type) FOR
	SELECT	coalesce(c.dt_emissao,c.dt_atendimento_referencia) dt_emissao_conta,
		c.nr_sequencia nr_seq_conta,
		c.nr_seq_protocolo,
		c.cd_guia,
		c.cd_guia_referencia,
		substr(coalesce(pls_obter_dados_prestador(c.nr_seq_prestador_exec,'N'), pls_obter_dados_protocolo(c.nr_seq_protocolo, 'PJ')),1,25) nm_prestador,
		substr(pls_obter_dados_conta_proc(b.nr_seq_conta_proc,'CP'),1,20) ds_item,
		substr(d.cd_procedimento,1,15) cd_item,
		sum(d.vl_liberado) vl_item,
		sum(b.vl_beneficiario) vl_pos_estabelecido,
		( 	SELECT 	count(1)
			from 	pls_mensalidade_item_conta x
			where 	e.nr_sequencia = x.nr_seq_item
		) qt_procedimento
	from	pls_conta_proc			d,
		pls_conta			c,
		pls_conta_pos_estabelecido	b,
		pls_mensalidade_seg_item	e,
		pls_mensalidade_segurado	a
	where	a.nr_sequencia			= e.nr_seq_mensalidade_seg
	and	a.nr_sequencia			= b.nr_seq_mensalidade_seg
	and	c.nr_sequencia			= b.nr_seq_conta
	and	c.nr_sequencia			= e.nr_seq_conta
	and	d.nr_sequencia			= b.nr_seq_conta_proc
	and	a.nr_sequencia			= nr_seq_mensalidade_seg_pc
	and	coalesce(b.vl_beneficiario,0) 	<> 0
	group by
		c.nr_seq_prestador_exec,
		coalesce(c.dt_emissao,c.dt_atendimento_referencia),
		c.nr_sequencia,
		c.nr_seq_protocolo,
		c.cd_guia,
		c.cd_guia_referencia,
		pls_obter_dados_conta_proc(b.nr_seq_conta_proc,'CP'),
		d.cd_procedimento,
		e.nr_sequencia
	
union

	select	coalesce(c.dt_emissao,c.dt_atendimento_referencia) dt_emissao_conta,
		c.nr_sequencia nr_seq_conta,
		c.nr_seq_protocolo,
		c.cd_guia,
		c.cd_guia_referencia,
		substr(coalesce(pls_obter_dados_prestador(c.nr_seq_prestador_exec, 'N'), pls_obter_dados_protocolo(c.nr_seq_protocolo, 'PJ')), 1, 25) nm_prestador,
		'Materiais e Medicamentos' ds_item,
		substr(d.cd_material,1,15) cd_item,
		sum(d.vl_liberado) vl_item,
		sum(b.vl_beneficiario) vl_pos_estabelecido,
		( 	select 	count(1)
			from 	pls_mensalidade_item_conta x
			where 	e.nr_sequencia = x.nr_seq_item
		) qt_procedimento
	from	pls_conta_mat			d,
		pls_conta			c,
		pls_conta_pos_estabelecido	b,
		pls_mensalidade_seg_item	e,
		pls_mensalidade_segurado	a
	where	a.nr_sequencia			= e.nr_seq_mensalidade_seg
	and	a.nr_sequencia			= b.nr_seq_mensalidade_seg
	and	c.nr_sequencia			= b.nr_seq_conta
	and	c.nr_sequencia			= e.nr_seq_conta
	and	d.nr_sequencia			= b.nr_seq_conta_mat
	and	a.nr_sequencia			= nr_seq_mensalidade_seg_pc
	and	coalesce(b.vl_beneficiario,0) 	<> 0
	group by
		c.nr_seq_prestador_exec,
		coalesce(c.dt_emissao,c.dt_atendimento_referencia),
		c.nr_sequencia,
		c.nr_seq_protocolo,
		c.cd_guia,
		c.cd_guia_referencia,
		d.nr_seq_material,
		d.cd_material,
		e.nr_sequencia;

BEGIN

delete	FROM w_pls_relat_boleto
where	nm_usuario = nm_usuario_p;

open C01;
loop
fetch C01 into
	nr_titulo_w,
	cd_operadora_empresa_w,
	nr_seq_mensalidade_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	qt_linhas_contador_w	:= 0;
	qt_benef_itens_w	:= 0;
	qt_itens_mens_w		:= 0;
	qt_benef_copartic_w	:= 0;
	qt_itens_copartic_w	:= 0;
	qt_linhas_total_w	:= 0;
	qt_linhas_brancas_w	:= 0;
	qt_limite_linhas_w	:= 42;
	qt_limite_lin_extrato_w	:= 105;
	ie_extrato_detalhado_w	:= 'N';
	nr_pagina_w		:= 0;
	nr_pagina_linha_w 	:= 1;
	qt_paginas_w		:= 1;
	qt_linhas_extrato_w	:= 0;
	qt_benef_pos_estab_w	:= 0;
	qt_itens_pos_estab_w	:= 0;

	ie_pf_pj_w		:= null;
	nm_pagador_w		:= null;
	cd_cgc_w		:= null;
	cd_pessoa_fisica_w	:= null;
	dt_emissao_w		:= null;
	nr_nosso_numero_w	:= null;
	tx_multa_w		:= null;
	tx_juros_w		:= null;
	ie_situacao_titulo_w	:= null;
	nr_bloqueto_w		:= null;
	vl_titulo_w		:= null;
	dt_liquidacao_w		:= null;
	dt_vencimento_w		:= null;
	ds_observacao_w		:= null;
	dt_referencia_w		:= null;
	vl_mensalidade_w	:= null;
	vl_pre_estabelecido_w	:= null;
	vl_coparticipacao_w	:= null;
	cd_banco_dig_w		:= null;
	vl_bonificacao_w	:= null;
	nr_seq_pagador_w	:= null;
	ds_endereco_w		:= null;
	ds_bairro_w		:= null;
	cd_cep_w		:= null;
	ds_municipio_w		:= null;
	sg_estado_w		:= null;
	nr_cpf_w		:= null;
	cd_usuario_plano_w	:= null;
	cd_ans_w		:= null;
	cd_agencia_bancaria_w	:= null;
	nr_seq_mensalidade_seg_w := null;
	nr_seq_segurado_w	:= null;
	nm_segurado_w		:= null;
	ds_plano_w		:= null;
	dt_contratacao_w	:= null;
	ds_item_w		:= null;
	vl_item_w		:= null;
	dt_emissao_conta_w	:= null;
	nr_seq_conta_w		:= null;
	nm_prestador_w		:= null;
	ds_procedimento_w	:= null;
	cd_procedimento_w	:= null;
	vl_procedimento_w	:= null;
	nr_seq_mens_item_w	:= null;
	qt_coparticipacao_w	:= null;
	ie_tipo_item_w		:= null;
	qt_item_w		:= null;
	nr_seq_plano_w		:= null;
	nr_seq_tabela_w		:= null;
	qt_idade_inicial_w	:= null;
	vl_unitario_w		:= null;
	qt_segurados_w		:= null;
	vl_total_item_w		:= null;
	ds_tributo_w		:= null;
	tx_tributo_w		:= null;
	vl_tributo_w		:= null;
	vl_base_calculo_trib_w	:= null;
	ie_tipo_tributo_w	:= null;
	ie_tipo_contratacao_w	:= null;
	ie_participacao_w	:= null;
	cd_portador_w		:= null;
	nr_seq_carteira_cobr_w	:= null;
	cd_carteira_w		:= null;

	/* Dados TÍTULO */

	select	CASE WHEN coalesce(a.cd_cgc::text, '') = '' THEN  'PF'  ELSE 'PJ' END  ie_pf_pj,
		substr(obter_nome_pf_pj(a.cd_pessoa_fisica, a.cd_cgc),1,255) nm_pessoa,
		a.cd_cgc,
		a.cd_pessoa_fisica,
		a.dt_emissao,
		a.nr_nosso_numero,
		coalesce(a.tx_multa, 0),
		coalesce(a.tx_juros, 0),
		a.ie_situacao,
		a.nr_bloqueto,
		coalesce(vl_saldo_titulo, 0),
		dt_liquidacao,
		dt_pagamento_previsto,
		cd_portador,
		nr_seq_carteira_cobr,
		dt_vencimento
	into STRICT	ie_pf_pj_w,
		nm_pagador_w,
		cd_cgc_w,
		cd_pessoa_fisica_w,
		dt_emissao_w,
		nr_nosso_numero_w,
		tx_multa_w,
		tx_juros_w,
		ie_situacao_titulo_w,
		nr_bloqueto_w,
		vl_titulo_w,
		dt_liquidacao_w,
		dt_vencimento_w,
		cd_portador_w,
		nr_seq_carteira_cobr_w,
		dt_vencimento_original_w
	from	titulo_receber	a
	where	a.nr_titulo = nr_titulo_w;

	if (dt_vencimento_w > dt_vencimento_original_w) then
		ie_prorrogado_w := 'S';
	else
		ie_prorrogado_w := 'N';
	end if;

	select	max(cd_banco)
	into STRICT	cd_banco_w
	from	portador
	where	cd_portador = cd_portador_w;

	if (nr_seq_carteira_cobr_w IS NOT NULL AND nr_seq_carteira_cobr_w::text <> '') then
		select	max(cd_carteira)
		into STRICT	cd_carteira_w
		from	banco_carteira
		where	nr_sequencia = nr_seq_carteira_cobr_w;
	end if;

	ie_registro_w	:= to_char(nr_seq_carteira_cobr_w);

	/* Dados MENSALIDADE */

	select	ds_observacao,
		dt_referencia,
		coalesce(vl_mensalidade, 0),
		coalesce(vl_pre_estabelecido, 0),
		coalesce(vl_coparticipacao, 0)
	into STRICT	ds_observacao_w,
		dt_referencia_w,
		vl_mensalidade_w,
		vl_pre_estabelecido_w,
		vl_coparticipacao_w
	from	pls_mensalidade
	where	nr_sequencia = nr_seq_mensalidade_w;

	select	a.cd_banco_dig
	into STRICT	cd_banco_dig_w
	from	titulo_receber_bloq_v	a
	where	a.nr_titulo		= nr_titulo_w
	and	a.nr_seq_mensalidade	= nr_seq_mensalidade_w;

	if cd_banco_dig_w = '087-6' then
		cd_banco_dig_w := '237-2';
	end if;

	select	coalesce(sum(vl_item),0)
	into STRICT	vl_bonificacao_w
	from	pls_mensalidade_seg_item	c,
		pls_mensalidade_segurado	b,
		pls_mensalidade			a
	where	c.nr_seq_mensalidade_seg	= b.nr_sequencia
	and	b.nr_seq_mensalidade		= a.nr_sequencia
	and	a.nr_sequencia			= nr_seq_mensalidade_w
	and	c.ie_tipo_item			= 14;

	if (coalesce(cd_operadora_empresa_w::text, '') = '') then
		begin
		select	c.cd_operadora_empresa
		into STRICT	cd_operadora_empresa_w
		from	pls_mensalidade		a,
			pls_contrato_pagador	b,
			pls_contrato		c
		where	b.nr_sequencia	= a.nr_seq_pagador
		and	c.nr_sequencia	= b.nr_seq_contrato
		and	a.nr_sequencia	= nr_seq_mensalidade_w;
		exception
		when others then
			cd_operadora_empresa_w	:= null;
		end;
	end if;

	if (ie_pf_pj_w = 'PF') then
		/* Dados PAGADOR */

		begin
		select 	f.nr_sequencia nr_seq_pagador,
			substr(a.ds_tipo_logradouro || '  ' || b.ds_endereco || ', ' || coalesce(b.nr_endereco, b.ds_compl_end) || ' ' || b.ds_complemento, 1, 255) ds_endereco,
			b.ds_bairro,
			substr(b.cd_cep, 1, 10),
			substr(b.ds_municipio, 1, 255),
			b.sg_estado,
			c.nr_cpf,
			substr(pls_carteira_pag_se_seg(f.nr_sequencia, c.cd_pessoa_fisica), 1, 30) cd_usuario_plano
		into STRICT	nr_seq_pagador_w,
			ds_endereco_w,
			ds_bairro_w,
			cd_cep_w,
			ds_municipio_w,
			sg_estado_w,
			nr_cpf_w,
			cd_usuario_plano_w
		FROM pls_contrato_pagador f, pls_mensalidade e, pessoa_fisica c, compl_pessoa_fisica b
LEFT OUTER JOIN sus_tipo_logradouro a ON (b.cd_tipo_logradouro = a.cd_tipo_logradouro)
WHERE c.cd_pessoa_fisica	= b.cd_pessoa_fisica and f.cd_pessoa_fisica	= c.cd_pessoa_fisica and f.nr_sequencia		= e.nr_seq_pagador and e.nr_sequencia		= nr_seq_mensalidade_w and b.ie_tipo_complemento	= 1;
		exception
		when others then
			nr_seq_pagador_w	:= null;
			ds_endereco_w		:= null;
			ds_bairro_w		:= null;
			cd_cep_w		:= null;
			ds_municipio_w		:= null;
			sg_estado_w		:= null;
			nr_cpf_w		:= null;
			cd_usuario_plano_w	:= null;
		end;

		begin
		select	CASE WHEN b.ie_regulamentacao='R' THEN  'Contrato não regulamentado código SCPA ' || b.cd_scpa  ELSE 'Contrato regulamentado código ANS ' || b.nr_protocolo_ans END  cd_ans
		into STRICT	cd_ans_w
		from	pls_mensalidade_segurado	a,
			pls_plano			b
		where	b.nr_sequencia		= a.nr_seq_plano
		and	a.nr_seq_mensalidade	= nr_seq_mensalidade_w  LIMIT 1;
		exception
		when others then
			cd_ans_w := null;
		end;
	elsif (ie_pf_pj_w = 'PJ') then
		/* Dados PAGADOR */

		begin
		select	e.nr_sequencia nr_seq_pagador,
			b.nm_fantasia,
			a.ds_endereco || ' ' || a.nr_endereco || ' ' || a.ds_complemento ds_endereco,
			a.ds_bairro,
			a.cd_cep,
			a.ds_municipio,
			a.sg_estado
		into STRICT	nr_seq_pagador_w,
			nm_pagador_w,
			ds_endereco_w,
			ds_bairro_w,
			cd_cep_w,
			ds_municipio_w,
			sg_estado_w
		from	pessoa_juridica_compl	a,
			pessoa_juridica		b,
			pls_mensalidade		d,
			pls_contrato_pagador	e,
			pls_contrato		f
		where	b.cd_cgc		= a.cd_cgc
		and	b.cd_cgc		= e.cd_cgc
		and	e.nr_sequencia		= d.nr_seq_pagador
		and	f.nr_sequencia		= e.nr_seq_contrato
		and	d.nr_sequencia		= nr_seq_mensalidade_w
		and	a.ie_tipo_complemento	= 1;
		exception
		when others then
			ds_endereco_w	:= null;
			ds_bairro_w	:= null;
			cd_cep_w	:= null;
			ds_municipio_w	:= null;
			sg_estado_w	:= null;
		end;
	end if;

	begin
	select	b.cd_agencia_bancaria ||'/'|| coalesce(b.cd_conta_bloqueto, b.cd_conta) cd_agencia_bancaria
	into STRICT	cd_agencia_bancaria_w
	from	pls_contrato_pagador_fin	a,
		banco_estabelecimento		b
	where	a.nr_seq_conta_banco	= b.nr_sequencia
	and	a.nr_seq_pagador	= nr_seq_pagador_w  LIMIT 1;
	exception
	when others then
		cd_agencia_bancaria_w	:= null;
	end;

	if (coalesce(cd_usuario_plano_w::text, '') = '') then
		begin
		select	max(substr(pls_obter_dados_cart_segurado(b.nr_sequencia,'C'),1,30)) cd_usuario_plano
		into STRICT	cd_usuario_plano_w
		from	pls_mensalidade_segurado	a,
			pls_segurado			b
		where	b.nr_sequencia = a.nr_seq_segurado
		and	a.nr_seq_mensalidade = nr_seq_mensalidade_w
		and	coalesce(b.nr_seq_titular::text, '') = '';
		exception
		when others then
			cd_usuario_plano_w := null;
		end;
	end if;

	select	nextval('w_pls_relat_boleto_seq')
	into STRICT	nr_seq_relat_boleto_w
	;

	/* Insert TÍTULO + MENSALIDADE + PAGADOR */

	insert into w_pls_relat_boleto(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec, ie_banda,
				nr_titulo, dt_vencimento, ie_pf_pj, nm_pessoa, cd_cgc, cd_pessoa_fisica, dt_emissao_titulo,
				ds_observacao_mensalidade, dt_referencia_mens, vl_mensalidade, vl_pre_estabelecido,
				vl_coparticipacao, nr_nosso_numero, tx_multa, tx_juros, vl_bonificacao, cd_agencia_bancaria,
				cd_banco_dig, ie_situacao_titulo, nr_bloqueto, vl_titulo, dt_liquidacao,
				cd_operadora_empresa, ds_endereco, ds_bairro, cd_cep, ds_municipio, sg_estado,
				nr_cpf, cd_usuario_plano, cd_ans, cd_banco, nr_seq_forma_cobranca, ie_registro,
				ie_prorrogado)
		values (	nr_seq_relat_boleto_w, clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p, 'P',
				nr_titulo_w, dt_vencimento_w, ie_pf_pj_w, nm_pagador_w, cd_cgc_w, cd_pessoa_fisica_w, dt_emissao_w,
				ds_observacao_w, dt_referencia_w, vl_mensalidade_w, vl_pre_estabelecido_w,
				vl_coparticipacao_w, nr_nosso_numero_w, tx_multa_w, tx_juros_w, vl_bonificacao_w, cd_agencia_bancaria_w,
				cd_banco_dig_w, ie_situacao_titulo_w, nr_bloqueto_w, vl_titulo_w, dt_liquidacao_w,
				cd_operadora_empresa_w, ds_endereco_w, ds_bairro_w, cd_cep_w, ds_municipio_w, sg_estado_w,
				nr_cpf_w, cd_usuario_plano_w, cd_ans_w, cd_banco_w, cd_carteira_w, ie_registro_w,
				ie_prorrogado_w);

	if (ie_pf_pj_w = 'PF') then
		open C05;
		loop
		fetch C05 into
			nr_seq_mensalidade_seg_w,
			nr_seq_segurado_w,
			nm_segurado_w,
			ds_plano_w,
			dt_contratacao_w,
			cd_ans_w;
		EXIT WHEN NOT FOUND; /* apply on C05 */
			begin

			select	max(cd_usuario_plano)
			into STRICT	cd_usuario_plano_w
			from	pls_segurado_carteira
			where	nr_seq_segurado = nr_seq_segurado_w;

			select	nextval('w_pls_relat_boleto_seq')
			into STRICT	nr_seq_linha_benef_w
			;

			/* Insert BENEFICIÁRIOS */

			insert into w_pls_relat_boleto(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec, ie_banda,
						nr_titulo, ie_pf_pj, nr_seq_mensalidade_seg, nr_pagina,
						cd_usuario_plano, nm_pessoa, dt_contratacao, ds_plano, cd_ans )
				values (	nr_seq_linha_benef_w, clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p, 'B',
						nr_titulo_w, ie_pf_pj_w, nr_seq_mensalidade_seg_w, nr_pagina_linha_w,
						cd_usuario_plano_w, nm_segurado_w, dt_contratacao_w, ds_plano_w, cd_ans_w );

			qt_benef_itens_w	:= qt_benef_itens_w + 1;
			qt_linhas_contador_w	:= qt_linhas_contador_w + 3;

			open C06;
			loop
			fetch C06 into
				ds_item_w,
				vl_item_w;
			EXIT WHEN NOT FOUND; /* apply on C06 */
				begin

				/* Insert ITENS DE MENSALIDADE - boleto PF */

				insert into w_pls_relat_boleto(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec, ie_banda,
							nr_titulo, ie_pf_pj, nr_seq_mensalidade_seg,
							ds_item, vl_item )
					values (	nextval('w_pls_relat_boleto_seq'), clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p, 'I',
							nr_titulo_w, ie_pf_pj_w, nr_seq_mensalidade_seg_w,
							ds_item_w, vl_item_w );

				qt_itens_mens_w		:= qt_itens_mens_w + 1;
				qt_linhas_contador_w	:= qt_linhas_contador_w + 1;

				end;
			end loop;
			close C06;

			if (qt_linhas_contador_w > qt_limite_lin_extrato_w) then
				nr_pagina_linha_w	:= nr_pagina_linha_w + 1;
				qt_linhas_contador_w	:= 0;

				update	w_pls_relat_boleto
				set	nr_pagina = nr_pagina_linha_w
				where	nr_sequencia = nr_seq_linha_benef_w;
			end if;
			end;
		end loop;
		close C05;

		qt_linhas_contador_w := qt_linhas_contador_w + 3;

		open C07;
		loop
		fetch C07 into
			nr_seq_mensalidade_seg_w,
			nr_seq_segurado_w,
			nm_segurado_w;
		EXIT WHEN NOT FOUND; /* apply on C07 */
			begin

			select 	max(cd_usuario_plano)
			into STRICT	cd_usuario_plano_w
			from 	pls_segurado_carteira
			where 	nr_seq_segurado = nr_seq_segurado_w;

			select	nextval('w_pls_relat_boleto_seq')
			into STRICT	nr_seq_linha_benef_w
			;

			/* Insert BENEFICIÁRIOS com coparticipação */

			insert into w_pls_relat_boleto(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec, ie_banda,
						nr_titulo, ie_pf_pj, nr_seq_mensalidade_seg, nr_pagina,
						cd_usuario_plano, nm_pessoa, dt_contratacao, ds_plano, cd_ans )
				values (	nr_seq_linha_benef_w, clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p, 'C',
						nr_titulo_w, ie_pf_pj_w, nr_seq_mensalidade_seg_w, nr_pagina_linha_w,
						cd_usuario_plano_w, nm_segurado_w, dt_contratacao_w, ds_plano_w, cd_ans_w );

			qt_benef_copartic_w	:= qt_benef_copartic_w + 1;
			qt_linhas_contador_w	:= qt_linhas_contador_w + 4;

			open C08;
			loop
			fetch C08 into
				dt_emissao_conta_w,
				nr_seq_conta_w,
				nm_prestador_w,
				ds_procedimento_w,
				cd_procedimento_w,
				vl_procedimento_w,
				vl_coparticipacao_w,
				nr_seq_protocolo_w,
				cd_guia_w,
				cd_guia_referencia_w,
				nr_seq_mens_item_w;
			EXIT WHEN NOT FOUND; /* apply on C08 */
				begin

				select 	 count(1)
				into STRICT qt_coparticipacao_w
				from ( 	SELECT x.nr_seq_item
					from 	  pls_mensalidade_item_conta x
					where 	  nr_seq_mens_item_w = x.nr_seq_item
					group by x.nr_seq_item) alias1;
				
				/* Insert ITENS DE COPARTICIPAÇÃO */

				insert into w_pls_relat_boleto(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec, ie_banda,
							nr_titulo, ie_pf_pj, nr_seq_mensalidade_seg,
							dt_emissao_conta, nr_seq_conta, nm_prestador, ds_procedimento,
							cd_procedimento, vl_procedimento, vl_coparticipacao,
							nr_seq_protocolo, cd_guia, cd_guia_referencia, qt_item)
					values (	nextval('w_pls_relat_boleto_seq'), clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p, 'A',
							nr_titulo_w, ie_pf_pj_w, nr_seq_mensalidade_seg_w,
							dt_emissao_conta_w, nr_seq_conta_w, nm_prestador_w, ds_procedimento_w,
							cd_procedimento_w, vl_procedimento_w, vl_coparticipacao_w,
							nr_seq_protocolo_w, cd_guia_w, cd_guia_referencia_w, qt_coparticipacao_w);

				qt_itens_copartic_w 	:= qt_itens_copartic_w + 1;
				qt_linhas_contador_w 	:= qt_linhas_contador_w + 1;

				end;
			end loop;
			close C08;

			if (qt_linhas_contador_w > qt_limite_lin_extrato_w) then
				nr_pagina_linha_w	:= nr_pagina_linha_w + 1;
				qt_linhas_contador_w	:= 0;

				update	w_pls_relat_boleto
				set	nr_pagina = nr_pagina_linha_w
				where	nr_sequencia = nr_seq_linha_benef_w;
			end if;
			end;
		end loop;
		close C07;

		for r_c10_w in C10(nr_seq_mensalidade_w) loop
			begin
			select	count(1)
			into STRICT	qt_reajuste_w
			
			where	exists (SELECT	1
					from	w_pls_relat_boleto
					where	nr_titulo 	= nr_titulo_w
					and	nm_usuario 	= nm_usuario_p
					and	ie_banda	= 'PE');

			if (qt_reajuste_w = 0) then
				qt_linhas_extrato_w := qt_linhas_extrato_w + 3;
			end if;

			select 	max(cd_usuario_plano)
			into STRICT	cd_usuario_plano_w
			from 	pls_segurado_carteira
			where 	nr_seq_segurado = r_c10_w.nr_seq_segurado;

			select	nextval('w_pls_relat_boleto_seq')
			into STRICT	nr_seq_linha_benef_w
			;

			/* INSERT BENEFICIÁRIOS PÓS ESTABELECIDO */

			insert into w_pls_relat_boleto(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec, ie_banda,
					nr_titulo, ie_pf_pj, nr_seq_mensalidade_seg, nr_pagina,
					cd_usuario_plano, nm_pessoa, dt_contratacao, ds_plano, cd_ans, ie_registro,
					ie_prorrogado)
			values (	nr_seq_linha_benef_w, clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p, 'PE',
					nr_titulo_w, ie_pf_pj_w, r_c10_w.nr_seq_mensalidade_seg, nr_pagina_linha_w,
					cd_usuario_plano_w, r_c10_w.nm_segurado, dt_contratacao_w, ds_plano_w, cd_ans_w, ie_registro_w,
					ie_prorrogado_w);

			qt_linhas_extrato_w	:= qt_linhas_extrato_w + 1;
			qt_benef_pos_estab_w 	:= qt_benef_pos_estab_w + 1;
			qt_linhas_contador_w 	:= qt_linhas_contador_w + 4;

			for r_c11_w in C11(r_c10_w.nr_seq_mensalidade_seg) loop
				begin
				select	count(1)
				into STRICT	qt_reajuste_w
				
				where	exists (SELECT	1
						from	w_pls_relat_boleto
						where	nr_titulo 	= nr_titulo_w
						and	nm_usuario 	= nm_usuario_p
						and	ie_banda	= 'PEI');

				if (qt_reajuste_w = 0) then
					qt_linhas_extrato_w := qt_linhas_extrato_w + 2;
				end if;

				select	nextval('w_pls_relat_boleto_seq')
				into STRICT	nr_seq_linha_item_pos_estab_w
				;

				/* INSERT ITENS DE PÓS ESTABELECIDO */

				insert into w_pls_relat_boleto(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec, ie_banda,
						nr_titulo, ie_pf_pj, nr_seq_mensalidade_seg, nr_pagina,
						dt_emissao_conta, nr_seq_conta, nr_seq_protocolo, cd_guia, cd_guia_referencia,
						nm_prestador, ds_procedimento, cd_procedimento, vl_procedimento, vl_coparticipacao, ie_registro,
						ie_prorrogado, qt_item)
				values (	nr_seq_linha_item_pos_estab_w, clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p, 'PEI',
						nr_titulo_w, ie_pf_pj_w, r_c10_w.nr_seq_mensalidade_seg, nr_pagina_linha_w,
						r_c11_w.dt_emissao_conta, r_c11_w.nr_seq_conta, r_c11_w.nr_seq_protocolo, r_c11_w.cd_guia, r_c11_w.cd_guia_referencia,
						r_c11_w.nm_prestador, r_c11_w.ds_item, r_c11_w.cd_item, r_c11_w.vl_item, r_c11_w.vl_pos_estabelecido, ie_registro_w,
						ie_prorrogado_w, r_c11_w.qt_procedimento);

				qt_linhas_extrato_w	:= qt_linhas_extrato_w + 1;
				qt_itens_pos_estab_w 	:= qt_itens_pos_estab_w + 1;
				qt_linhas_contador_w 	:= qt_linhas_contador_w + 1;

				if (qt_linhas_contador_w > qt_limite_lin_extrato_w) then
					nr_pagina_linha_w 	:= nr_pagina_linha_w + 1;
					qt_linhas_contador_w 	:= 0;

					update	w_pls_relat_boleto
					set	nr_pagina 	= nr_pagina_linha_w
					where	nr_sequencia 	= nr_seq_linha_item_pos_estab_w;
				end if;
				end;
			end loop;

			if (qt_linhas_contador_w > qt_limite_lin_extrato_w) then
				nr_pagina_linha_w 	:= nr_pagina_linha_w + 1;
				qt_linhas_contador_w 	:= 0;

				update	w_pls_relat_boleto
				set	nr_pagina 	= nr_pagina_linha_w
				where	nr_sequencia 	= nr_seq_linha_benef_w;
			end if;
			end;
		end loop;

		open C09;
		loop
		fetch C09 into
			ie_tipo_item_w,
			ds_item_w,
			qt_item_w,
			vl_item_w;
		EXIT WHEN NOT FOUND; /* apply on C09 */
			begin

			/* Insert DEMONSTRATIVO DE PAGAMENTO */

			insert into w_pls_relat_boleto(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec, ie_banda,
						nr_titulo, ie_pf_pj,
						ie_tipo_item, ds_item, qt_item, vl_item )
				values (	nextval('w_pls_relat_boleto_seq'), clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p, 'D',
						nr_titulo_w, ie_pf_pj_w,
						ie_tipo_item_w, ds_item_w, qt_item_w, vl_item_w );

			end;
		end loop;
		close C09;
	elsif (ie_pf_pj_w = 'PJ') then
		open C02;
		loop
		fetch C02 into
			nr_seq_plano_w,
			nr_seq_tabela_w,
			qt_idade_inicial_w,
			ds_item_w,
			vl_unitario_w,
			qt_segurados_w,
			vl_total_item_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin

			/* Insert ITENS DE MENSALIDADE - boleto PJ */

			insert into w_pls_relat_boleto(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec, ie_banda,
						nr_titulo, ie_pf_pj,
						ds_item, vl_item, qt_segurado, vl_total_item )
				values (	nextval('w_pls_relat_boleto_seq'), clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p, 'I',
						nr_titulo_w, ie_pf_pj_w,
						ds_item_w, vl_unitario_w, qt_segurados_w, vl_total_item_w);
			end;
		end loop;
		close C02;

		open C03;
		loop
		fetch C03 into
			ds_tributo_w,
			tx_tributo_w,
			vl_tributo_w,
			vl_base_calculo_trib_w,
			ie_tipo_tributo_w;
		EXIT WHEN NOT FOUND; /* apply on C03 */
			begin

			if (vl_tributo_w = 0) then
				select	coalesce(sum(vl_tributo),0)
				into STRICT	vl_tributo_w
				from 	pls_mensalidade_trib
				where	nr_seq_mensalidade = nr_seq_mensalidade_w;
			end if;

			/* Insert TRIBUTOS DO TÍTULO */

			insert into w_pls_relat_boleto(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec, ie_banda,
						nr_titulo, ie_pf_pj, vl_mensalidade, cd_cgc,
						ds_tributo, tx_tributo, vl_tributo, vl_base_calculo_trib, ie_tipo_tributo )
				values (	nextval('w_pls_relat_boleto_seq'), clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p, 'T',
						nr_titulo_w, ie_pf_pj_w, vl_mensalidade_w, cd_cgc_w,
						ds_tributo_w, tx_tributo_w, vl_tributo_w, vl_base_calculo_trib_w, ie_tipo_tributo_w );
			end;
		end loop;
		close C03;

		open C04;
		loop
		fetch C04 into
			ie_tipo_contratacao_w,
			ie_participacao_w,
			ds_plano_w,
			cd_ans_w;
		EXIT WHEN NOT FOUND; /* apply on C04 */
			begin

			/* Insert OPERADORA_EMPRESA + dados PLANO */

			insert into w_pls_relat_boleto(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec, ie_banda,
						nr_titulo, ie_pf_pj,
						cd_operadora_empresa, ie_tipo_contratacao, ie_participacao, ds_plano, cd_ans )
				values (	nextval('w_pls_relat_boleto_seq'), clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p, 'O',
						nr_titulo_w, ie_pf_pj_w,
						cd_operadora_empresa_w, ie_tipo_contratacao_w, ie_participacao_w, ds_plano_w, cd_ans_w );
			end;
		end loop;
		close C04;
	end if;

	/* Contagem de linhas */

	if (ie_pf_pj_w = 'PF') then
		if (qt_benef_itens_w > 0) then
			qt_linhas_total_w := (qt_benef_itens_w * 3) + qt_itens_mens_w;
		end if;

		if (qt_benef_copartic_w > 0) then
			qt_linhas_total_w := qt_linhas_total_w + 3 + (qt_benef_copartic_w * 4) + qt_itens_copartic_w;
		end if;

		if (qt_linhas_total_w <= qt_limite_linhas_w) then
			qt_linhas_brancas_w := qt_limite_linhas_w - qt_linhas_total_w;
		else
			qt_linhas_brancas_w := qt_limite_linhas_w - 3;

			ie_extrato_detalhado_w := 'S';

			select	ceil(qt_linhas_total_w / qt_limite_lin_extrato_w) -- CEIL: arredonda o número para cima
			into STRICT	qt_paginas_w
			;

			for i in 1..qt_paginas_w loop
				nr_pagina_w := nr_pagina_w + 1;

				insert into w_pls_relat_boleto(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec, ie_banda,
							nr_titulo, ie_pf_pj, nr_pagina )
					values (	nextval('w_pls_relat_boleto_seq'), clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p, 'Q',
							nr_titulo_w, ie_pf_pj_w, nr_pagina_w );
			end loop;
		end if;

		update	w_pls_relat_boleto
		set	nr_linha		= qt_linhas_brancas_w,
			ie_extrato_detalhado	= ie_extrato_detalhado_w,
			qt_segurado		= qt_benef_itens_w,
			qt_benef_copartic	= qt_benef_copartic_w,
			qt_benef_pos_estab	= qt_benef_pos_estab_w,
			qt_benef_inf_boleto	= qt_itens_mens_w
		where	nr_titulo		= nr_titulo_w
		and	nm_usuario		= nm_usuario_p;
	end if;
	end;
end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_dados_relat_5159 ( nr_titulo_p bigint, nr_seq_lote_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

