-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_titulo_pagar_nf_venc ( nr_sequencia_p bigint, nm_usuario_p text, ie_gerou_p INOUT text) AS $body$
DECLARE


vl_total_item_desc_w			double precision;
vl_total_item_w				double precision;											
pr_desc_financ_w				double precision;
qt_itens_nf_w				bigint;										
ie_moeda_w				varchar(255);
cd_estab_financeiro_w 			smallint;
cd_natureza_operacao_w			bigint;
cd_estabelecimento_w			smallint;
cd_serie_nf_w				nota_fiscal.cd_serie_nf%type;
ie_entrada_saida_w				varchar(01);
nr_nota_fiscal_w				varchar(255);
nr_seq_trans_adiant_w			bigint;
dt_vencimento_orig_w			timestamp;
dt_vencimento_w				timestamp;
dt_maior_vencimento_w			timestamp;
dt_emissao_w				timestamp;
dt_entrada_saida_w			timestamp;
vl_vencimento_w				double precision;
vl_total_nota_w				double precision;
vl_titulo_w				double precision;
vl_mercadoria_w				double precision;
vl_classif_w				double precision;
vl_vinculado_w				double precision;
cd_cgc_w				varchar(14);
cd_pessoa_fisica_w			varchar(10);
nr_titulo_w				bigint;
nr_titulo_imposto_w				bigint;
nr_titulo_origem_w				bigint;
cd_tipo_baixa_neg_w			integer;
nr_adiantamento_w				bigint;
nr_ordem_compra_w        			bigint;
nr_sequencia_w	        			bigint;
nr_sequencia_adiant_w	      		bigint;
nr_seq_classif_w	        			bigint;
nr_seq_baixa_w	      			bigint;
nr_sequencia_ref_w        			bigint;
tx_juros_w				double precision;
tx_multa_w				double precision;
tx_desc_antecipacao_w			double precision;
ie_acao_nf_w				varchar(01);
vl_saldo_atual_w				double precision;
cd_conta_contabil_w			varchar(20);
ie_situacao_nf_w				varchar(2);
cd_centro_custo_w				integer;
nr_seq_conta_financ_w			bigint;
cd_conta_financ_cpa_w			bigint;
vl_ir_w					double precision;
vl_ir_nf_w				double precision;
vl_ir_tit_w					double precision;
ie_contas_pagar_w				varchar(01);
vl_desc_financ_w				double precision;
vl_tributo_w				double precision;
vl_base_calculo_w				double precision;
cd_tributo_w				bigint;
nr_seq_imposto_w				bigint;
dt_imposto_w				timestamp;
ds_erro_w				varchar(255);
cd_tipo_taxa_juro_w			bigint;
pr_imposto_w				double precision;
cd_condicao_pagamento_w			bigint;
nr_seq_trans_baixa_w			bigint;
cd_cond_pagto_w				integer;
ds_venc_w				varchar(2000);
qt_venc_w				bigint;
cd_conta_financ_trib_w			bigint;
cd_conta_financ_nf_trib_w			bigint;
cd_benef_trib_w				varchar(14);
ie_vencimento_w				varchar(01);
ds_irrelevante_w				varchar(254);
dt_primeiro_venc_w				timestamp;
vl_teto_base_w				double precision;
nr_seq_trans_reg_w			bigint;
nr_parcela_w				smallint;
nr_total_parcelas_w				smallint;
ie_despesa_adic_w				varchar(01) := 'N';
cont_w					integer;
cd_darf_w				varchar(20);
dt_referencia_w				timestamp;
cd_variacao_w				varchar(2)	:= null;
ie_periodicidade_w				varchar(1)	:= null;
cd_darf_nf_w				varchar(20);
nr_seq_lote_res_pls_w			bigint;
nr_contrato_w				bigint;
vl_base_adic_w				double precision;
vl_trib_nao_retido_w			double precision;
vl_base_nao_retido_w			double precision;
vl_trib_adic_w				double precision;
ie_dt_contab_tit_nota_w			varchar(3);
dt_contabil_w				timestamp;
cd_operacao_nf_w				smallint;
ie_data_contab_nf_w			varchar(3);
cd_moeda_w				bigint;
cd_moeda_cp_w				bigint;
cd_tipo_taxa_multa_w        			bigint;
nr_seq_trans_fin_desc_w			bigint;
pr_desc_financeiro_w			double precision;
vl_desconto_financ_oc_w			double precision;	
cd_tipo_baixa_financ_w			integer;

cd_beneficiario_ir_w			varchar(14);
cd_tributo_ir_w				smallint;
cd_conta_contabil_ir_w			varchar(20);
nr_seq_conta_fin_ir_w			bigint;
ie_vencimento_ir_w				varchar(1);
nr_titulo_desp_w				bigint;
dt_vencimento_despesa_w			timestamp;
vl_documento_despesa_w			double precision;
cd_cgc_despesa_w			varchar(14);
nr_documento_despesa_w			integer;
vl_titulo_adiant_w				double precision;
vl_saldo_adiant_w				double precision;
vl_saldo_titulo_w				double precision;
vl_vinculado_tit_w				double precision;
vl_desc_dependente_w			double precision;
nr_repasse_terceiro_w			bigint;
ds_repasses_w				varchar(255) := '';
ds_observacao_nf_w			varchar(255);
ie_devolucao_nf_w				varchar(255);
vl_total_baixa_w				double precision := 0;
vl_alterado_w				double precision := 0;
cd_tipo_baixa_devolucao_w			bigint;
nr_trans_fin_baixa_nf_w			bigint;
nr_trans_fin_contab_nf_w			bigint;
ie_entregue_bloqueto_w			varchar(100);
ie_tipo_titulo_nf_bloq_w			varchar(100);
vl_frete_w				double precision;
cd_conta_financ_frete_w			bigint;
vl_sem_frete_w				double precision;
vl_frete_classif_w				double precision;
ie_forma_desc_fin_w			varchar(2);
vl_desc_antec_w				double precision	:= 0;
cd_conta_contabil_frete_w			varchar(20);
ie_corpo_item_w				varchar(20);
ie_rateio_adiant_w				varchar(01)	:= 'P';
ie_gerou_w				varchar(01)	:= 'N';
ie_tipo_titulo_operacao_w			varchar(2)	:= null;
qt_proj_recurso_w				bigint;
nr_seq_proj_rec_w				bigint;
vl_reducao_w				double precision;
cd_tipo_servico				varchar(255);
nr_seq_trans_financ_w			bigint;
ds_observacao_w				varchar(255);
nr_seq_classe_w				bigint;
cd_tipo_baixa_neg_tp_w			integer;
NR_SEQ_TIPO_ADIANT_NF_DEV_W		bigint;
nr_seq_classificacao_w			nota_fiscal.nr_seq_classificacao%type;
ie_conta_contab_tit_trib_w			parametros_contas_pagar.ie_conta_contab_tit_trib%type;
cd_conta_cont_trib_w			conta_contabil.cd_conta_contabil%type;
cd_empresa_w				estabelecimento.cd_empresa%type;
ie_rateio_classif_w				tributo.ie_rateio_classif%type;
ie_titulo_tributo_w				varchar(1)	:= 'N';
ie_gravar_anexo_w				varchar(1)	:= 'N';
nr_seq_trib_cp_w			bigint;
nr_integracao_w				bigint := 0;

ds_arquivo_w				nota_fiscal_anexo.ds_arquivo%type;

ie_vincular_adiant_titulo_w		varchar(1);
ie_atualiza_trib_adiant_w	varchar(2);

cd_moeda_adiant_pago_w			adiantamento_pago.cd_moeda%type;
vl_conv_adiantamento_w			adiantamento_pago.vl_cotacao%type;

vl_cambial_passivo_adiant_w		titulo_pagar_adiant.vl_cambial_passivo%type := null;
vl_cambial_ativo_adiant_w		titulo_pagar_adiant.vl_cambial_ativo%type := null;

cd_moeda_empresa_w			moeda.cd_moeda%type;

C010 CURSOR FOR
SELECT 	b.cd_estabelecimento,
	b.cd_serie_nf,
	b.nr_nota_fiscal,
	coalesce(a.dt_vencimento, b.dt_emissao) dt_vencimento,
	coalesce(a.vl_vencimento, b.vl_total_nota),
	CASE WHEN a.ie_origem='S' THEN a.cd_cgc_emitente WHEN a.ie_origem='F' THEN a.cd_cgc_emitente  ELSE b.cd_cgc END ,
	b.cd_pessoa_fisica,
	b.dt_emissao,
	b.dt_entrada_saida,
	b.nr_ordem_compra,
	b.nr_sequencia_ref,
	b.nr_sequencia,
	c.ie_entrada_saida,
	b.vl_total_nota,
	b.vl_mercadoria,
	e.ie_contas_pagar,
	b.cd_condicao_pagamento,
	coalesce(a.vl_desc_financ,0),
	b.cd_operacao_nf,
	coalesce(b.ie_entregue_bloqueto, 'N'),
	b.vl_frete,
	b.nr_seq_lote_res_pls,
	o.ie_tipo_titulo,
	b.cd_tipo_servico,
	b.cd_natureza_operacao,
	a.ds_observacao,
	b.nr_seq_classificacao
FROM operacao_nota o, estabelecimento e, natureza_operacao c, nota_fiscal b
LEFT OUTER JOIN nota_fiscal_venc a ON (b.nr_sequencia = a.nr_sequencia)
WHERE b.nr_sequencia			= nr_sequencia_p and b.cd_natureza_operacao	 	= c.cd_natureza_operacao and b.cd_operacao_nf 			= o.cd_operacao_nf and b.cd_estabelecimento		= e.cd_estabelecimento and coalesce(o.ie_contas_pagar,'S') 		= 'S' and coalesce(e.ie_contas_pagar,'S') 		<> 'N' and coalesce(a.nr_titulo_pagar::text, '') = ''
order	by dt_vencimento;

C020 CURSOR FOR
SELECT	nr_titulo,
	vl_titulo,
	cd_moeda,
	obter_saldo_titulo_pagar(a.nr_titulo,clock_timestamp())
from 	titulo_pagar a
where 	a.nr_seq_nota_fiscal = coalesce(nr_sequencia_ref_w, nr_sequencia_P)
and	coalesce(a.dt_liquidacao::text, '') = ''
and	coalesce(a.nr_seq_tributo::text, '') = '';

C030 CURSOR FOR
SELECT	coalesce(cd_conta_cont_trib_w,a.cd_conta_contabil),
	a.cd_centro_custo,
	coalesce(a.nr_seq_conta_financ, cd_conta_financ_cpa_w),
	sum(a.vl_liquido),
	a.nr_contrato
from 	Nota_fiscal_Item a
where	a.nr_sequencia = nr_sequencia_p
and	not exists (SELECT	1
	from	nota_fiscal_item_rateio b
	where	b.nr_seq_nota = a.nr_sequencia
	and (coalesce(ie_rateio_classif_w,'S') = 'S' or coalesce(ie_titulo_tributo_w,'N') = 'N'))
group	by a.cd_conta_contabil,
	a.cd_centro_custo,
	a.nr_seq_conta_financ,
	a.nr_contrato

union all

select	coalesce(cd_conta_cont_trib_w,a.cd_conta_contabil),
	a.cd_centro_custo,
	coalesce(a.cd_conta_financ, coalesce(b.nr_seq_conta_financ, cd_conta_financ_cpa_w)),
	sum(a.vl_rateio),
	b.nr_contrato
from 	Nota_fiscal_Item_rateio a,
	Nota_fiscal_item b
where	b.nr_sequencia	= nr_sequencia_p
and	b.nr_sequencia	= a.nr_seq_nota 
and	a.nr_item_nf	= b.nr_item_nf
and (coalesce(ie_rateio_classif_w,'S') = 'S' or coalesce(ie_titulo_tributo_w,'N') = 'N')
group	by a.cd_conta_contabil,
	a.cd_centro_custo,
	a.cd_conta_financ,
	b.nr_seq_conta_financ,
	b.nr_contrato

union all

select	cd_conta_cont_trib_w,
	null,
	cd_conta_financ_cpa_w,
	vl_mercadoria_w,
	null

where	not exists (select	1
	from	nota_fiscal_item a
	where	a.nr_sequencia	= nr_sequencia_p)
and	(cd_conta_cont_trib_w IS NOT NULL AND cd_conta_cont_trib_w::text <> '');

C040 CURSOR FOR
SELECT	a.cd_tributo,
	sum(coalesce(vl_base_calculo,0)),
	sum(coalesce(a.vl_tributo,0)),
	dividir(sum(coalesce(a.vl_tributo,0)), sum(coalesce(vl_base_calculo,0))) pr_imposto,
	max(ie_venc_nf) ie_vencimento,
	max(a.cd_conta_financ) cd_conta_financ_nf_trib,
	a.cd_darf,
	sum(coalesce(a.vl_base_adic,0)),
	sum(coalesce(a.vl_trib_nao_retido,0)),
	sum(coalesce(a.vl_base_nao_retido,0)),
	sum(coalesce(a.vl_trib_adic,0)),
	b.ie_corpo_item,
	sum(coalesce(a.vl_reducao_base,0)) vl_desc_dependente,
	sum(coalesce(a.vl_reducao,0)) vl_reducao,
	b.ie_rateio_classif
from	Tributo b,
	Nota_fiscal_trib a
where	nr_sequencia		= nr_sequencia_p
and	a.cd_tributo		= b.cd_tributo
and	b.ie_conta_pagar		= 'S'
group by a.cd_tributo,
	a.cd_darf,
	b.ie_corpo_item,
	b.ie_rateio_classif

union

SELECT a.cd_tributo,
	sum(coalesce(vl_base_calculo,0)),
	sum(coalesce(a.vl_tributo,0)),
	dividir(sum(coalesce(a.vl_tributo,0)), sum(coalesce(vl_base_calculo,0))) pr_imposto,
	max(ie_vencimento) ie_vencimento,
	0 cd_conta_financ_nf_trib,
	null cd_darf,
	sum(coalesce(a.vl_base_adic,0)),
	sum(coalesce(a.vl_trib_nao_retido,0)),
	sum(coalesce(a.vl_base_nao_retido,0)),
	sum(coalesce(a.vl_trib_adic,0)),
	b.ie_corpo_item,
	0,
	0,
	b.ie_rateio_classif
from	Tributo b,
	Nota_fiscal_item_trib a
where	nr_sequencia		= nr_sequencia_p
and	a.cd_tributo		= b.cd_tributo
and	b.ie_conta_pagar		= 'S'
and	a.ie_rateio		= 'N'
group	by a.cd_tributo,
	b.ie_corpo_item,
	b.ie_rateio_classif

union

select	a.cd_tributo,
	coalesce(a.vl_base_calculo,0),
	coalesce(a.vl_tributo,0),
	dividir(coalesce(a.vl_tributo,0), coalesce(a.vl_base_calculo,0)) pr_imposto,
	b.ie_venc_nf ie_vencimento,
	0 cd_conta_financ_nf_trib,
	null cd_darf,
	coalesce(a.vl_base_adic,0),
	coalesce(a.vl_trib_nao_retido,0),
	coalesce(a.vl_base_nao_retido,0),
	coalesce(a.vl_trib_adic,0),
	b.ie_corpo_item,
	coalesce(a.vl_desc_base,0) vl_desc_dependente,
	coalesce(a.vl_reducao,0) vl_reducao,
	b.ie_rateio_classif
from	Tributo b,
	Nota_fiscal_venc_trib a
where	a.dt_vencimento		= dt_vencimento_w
and	nr_sequencia		= nr_sequencia_p
and	a.cd_tributo		= b.cd_tributo
and	b.ie_conta_pagar		= 'S';

C060 CURSOR FOR
SELECT	dt_vencimento,
	vl_documento,
	cd_cgc,
	nr_documento
from	nota_fiscal_desp_adic
where	nr_seq_nf 		= nr_sequencia_p
and	coalesce(ie_origem,'N') = 'N';

c05 CURSOR FOR
SELECT	nr_adiantamento,
	sum(vl_vinculado),
	null nr_seq_trans_financ
from	ordem_compra_adiant_pago
where	nr_ordem_compra	= nr_ordem_compra_w
group by	nr_adiantamento

union

SELECT	nr_adiantamento,
	sum(vl_vinculado),
	nr_seq_trans_financ
from	nota_fiscal_adiant_pago
where	nr_sequencia_nf	= nr_sequencia_p
group by	nr_adiantamento,
	nr_seq_trans_financ;

c015 CURSOR FOR
SELECT	nr_repasse_terceiro
from	repasse_nota_fiscal
where	nr_seq_nota_fiscal 	= nr_sequencia_p
order by
	nr_repasse_terceiro;
	
c025 CURSOR FOR
	SELECT	a.ds_arquivo
	from	nota_fiscal_anexo a
	where	a.nr_seq_nota	= nr_sequencia_p;
	

BEGIN

ie_gerou_w := 'N';

select	ie_acao_nf,
	cd_estabelecimento,
	ie_situacao,
	CASE WHEN coalesce(ds_observacao::text, '') = '' THEN ''  ELSE substr(obter_desc_expressao(729193) || ds_observacao,1,255) END
into STRICT 	ie_acao_nf_w,
	cd_estabelecimento_w,
	ie_situacao_nf_w,
	ds_observacao_nf_w
from	nota_fiscal
where	nr_sequencia = nr_sequencia_p;

select	max(coalesce(cd_estab_financeiro, cd_estabelecimento)),
	max(cd_empresa)
into STRICT	cd_estab_financeiro_w,
	cd_empresa_w
from	estabelecimento
where	cd_estabelecimento	= cd_estabelecimento_w;

select	coalesce(max(cd_conta_financ_cpa),1)
into STRICT	cd_conta_financ_cpa_w
from	parametro_fluxo_caixa
where	cd_estabelecimento	= cd_estabelecimento_w;

begin
select	min(dt_vencimento)
into STRICT	dt_primeiro_venc_w
from	nota_fiscal_venc
where	nr_sequencia		= nr_sequencia_p;
exception
when others then
	dt_primeiro_venc_w		:= null;
end;

begin
select	cd_beneficiario_ir,
	coalesce(cd_tributo_ir,10),
	cd_conta_contabil_ir,
	nr_seq_conta_fin_ir,
	ie_vencimento_ir,
	cd_tipo_taxa_juro,
	ie_dt_contab_tit_nota,
	nr_trans_fin_baixa_nf,
	nr_trans_fin_contab_nf,
	ie_tipo_titulo_nf_bloq,
	coalesce(ie_devolucao_nf, 'A'),
	NR_SEQ_TIPO_ADIANT_NF_DEV,
	coalesce(ie_conta_contab_tit_trib,'T')
into STRICT	cd_beneficiario_ir_w,
	cd_tributo_ir_w,
	cd_conta_contabil_ir_w,
	nr_seq_conta_fin_ir_w,
	ie_vencimento_ir_w,
	cd_tipo_taxa_juro_w,
	ie_dt_contab_tit_nota_w,
	nr_trans_fin_baixa_nf_w,
	nr_trans_fin_contab_nf_w,
	ie_tipo_titulo_nf_bloq_w,
	ie_devolucao_nf_w,
	NR_SEQ_TIPO_ADIANT_NF_DEV_W,
	ie_conta_contab_tit_trib_w
from 	parametros_contas_pagar
where	cd_estabelecimento	= cd_estabelecimento_w;
exception
	when others then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(189390);
		--r aise_application_error(-20011,'Erro na busca dos parametros do contas a pagar');
end;

select	count(*)
into STRICT	qt_proj_recurso_w
from	nota_fiscal_item
where	nr_sequencia	= nr_sequencia_p
and	nr_seq_proj_rec > 0;

nr_seq_proj_rec_w	:= null;
if (qt_proj_recurso_w > 0) then
	select	max(nr_seq_proj_rec)
	into STRICT	nr_seq_proj_rec_w
	from	nota_fiscal_item
	where	nr_sequencia	= nr_sequencia_p;
end if;

if (coalesce(cd_tributo_ir_w::text, '') = '') then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(189390);
	--r aise_application_error(-20011,'Erro na busca dos parametros do contas a pagar');
end if;

select	coalesce(sum(vl_tributo),0)
into STRICT 	vl_ir_nf_w
from 	nota_fiscal_trib
where 	nr_sequencia	= nr_sequencia_p
and 	cd_tributo	= cd_tributo_ir_w;

select	coalesce(max(dt_vencimento),clock_timestamp())
into STRICT 	dt_maior_vencimento_w
from 	nota_fiscal_venc
where 	nr_sequencia = nr_sequencia_p;

vl_ir_w		:= 0;
vl_ir_tit_w		:= 0;

select	max(coalesce(nr_seq_trans_baixa_adiant, nr_seq_trans_adiant)),
	max(cd_conta_financ_frete),
	max(cd_conta_contabil_frete),
	max(cd_moeda_padrao)
into STRICT	NR_SEQ_TRANS_ADIANT_w,
	cd_conta_financ_frete_w,
	cd_conta_contabil_frete_w,
	cd_moeda_cp_w
from	parametros_contas_pagar
where	cd_estabelecimento	= cd_estabelecimento_w;

ie_moeda_w := Obter_Param_Usuario(40, 208, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_moeda_w);
ie_gravar_anexo_w := Obter_Param_Usuario(40, 445, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_gravar_anexo_w);
ie_vincular_adiant_titulo_w := Obter_Param_Usuario(40, 460, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_vincular_adiant_titulo_w);
ie_atualiza_trib_adiant_w := Obter_Param_Usuario(851, 170, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_atualiza_trib_adiant_w);

select	max(coalesce(nr_seq_trans_fin_desc,0)),
	max(coalesce(cd_tipo_baixa_financ,0)),
	coalesce(max(ie_forma_desc_fin),'A')
into STRICT	nr_seq_trans_fin_desc_w,
	cd_tipo_baixa_financ_w,
	ie_forma_desc_fin_w
from	parametro_compras
where	cd_estabelecimento	= cd_estabelecimento_w;

select	count(*)
into STRICT	nr_total_parcelas_w
from	nota_fiscal_venc
where	nr_sequencia		= nr_sequencia_p;

if (nr_total_parcelas_w = 0) then
	nr_total_parcelas_w		:= null;
end if;

nr_parcela_w			:= null;

select	obter_moeda_padrao_empresa(cd_estabelecimento_w,'E')
into STRICT	cd_moeda_empresa_w
;

open c015;
loop
	fetch c015 into
		nr_repasse_terceiro_w;
	EXIT WHEN NOT FOUND; /* apply on c015 */
		if (coalesce(ds_repasses_w::text, '') = '') then
			ds_repasses_w := substr(Wheb_mensagem_pck.get_Texto(302633, 'NR_REPASSE_TERCEIRO_W='|| NR_REPASSE_TERCEIRO_W ),1,255); /*'Repasses n: ' || NR_REPASSE_TERCEIRO_W;*/
		else
			ds_repasses_w := substr(ds_repasses_w || ', ' || nr_repasse_terceiro_w,1,255);
		end if;
end loop;
close c015;


open c010;
loop
	fetch c010 into
		cd_estabelecimento_w,
		cd_serie_nf_w,
		nr_nota_fiscal_w,
		dt_vencimento_w,
		vl_vencimento_w,
		cd_cgc_w,
		cd_pessoa_fisica_w,
		dt_emissao_w,
		dt_entrada_saida_w,
		nr_ordem_compra_w,
		nr_sequencia_ref_w,
		nr_sequencia_w,
		ie_entrada_saida_w,
		vl_total_nota_w,
		vl_mercadoria_w,
		ie_contas_pagar_w,
		cd_condicao_pagamento_w,
		vl_desc_financ_w,
		cd_operacao_nf_w,
		ie_entregue_bloqueto_w,
		vl_frete_w,
		nr_seq_lote_res_pls_w,
		ie_tipo_titulo_operacao_w,
		cd_tipo_servico,
		cd_natureza_operacao_w,
		ds_observacao_w,
		nr_seq_classificacao_w;
	EXIT WHEN NOT FOUND; /* apply on c010 */
		begin

		dt_contabil_w		:= dt_entrada_saida_w;
		if (ie_dt_contab_tit_nota_w = 'EMI') then
			dt_contabil_w	:= dt_emissao_w;
		elsif (ie_dt_contab_tit_nota_w = 'ATU') then
			dt_contabil_w	:= PKG_DATE_UTILS.start_of(clock_timestamp(), 'dd', 0);
		elsif (ie_dt_contab_tit_nota_w = 'OPE') then
			select	coalesce(max(ie_data_contab_nf), 'ES')
			into STRICT	ie_data_contab_nf_w
			from	operacao_nota
			where	cd_operacao_nf = cd_operacao_nf_w;
			if (ie_data_contab_nf_w = 'ES') then
				dt_contabil_w	:= dt_entrada_saida_w;
			elsif (ie_data_contab_nf_w = 'EMI') then
				dt_contabil_w	:= dt_emissao_w;
			elsif (ie_data_contab_nf_w = 'ATU') then
				dt_contabil_w	:= PKG_DATE_UTILS.start_of(clock_timestamp(), 'dd', 0);
			end if;
		end if;

		if (nr_total_parcelas_w > 1) then
			nr_parcela_w		:= coalesce(nr_parcela_w,0) + 1;
		end if;
		begin

		select	coalesce(pr_juros_negociado,0),
			coalesce(pr_multa_atraso, 0),
			coalesce(pr_desc_pgto_antec, 0),
  			coalesce(cd_moeda,1),
			coalesce(pr_desc_financeiro,0)
		into STRICT	tx_juros_w,
			tx_multa_w,
			tx_desc_antecipacao_w,
			cd_moeda_w,
			pr_desc_financeiro_w
		from 	Ordem_Compra
		where 	nr_ordem_compra	= nr_ordem_compra_w;
		exception
			when others then
				begin
				tx_juros_w			:= 0;
				tx_multa_w			:= 0;
				tx_desc_antecipacao_w		:= 0;
				cd_moeda_w			:= 1;
				pr_desc_financeiro_w		:= 0;
				end;
		end;

		if (ie_moeda_w = 'S') then
			cd_moeda_w		:= coalesce(cd_moeda_cp_w, cd_moeda_w);
		end if;

		if (ie_entrada_saida_w = 'E') and
			(ie_acao_nf_w = '1' AND ie_situacao_nf_w <> '9') then
			begin

			select	nextval('titulo_pagar_seq') 
			into STRICT	nr_titulo_w
			;

			if (dt_vencimento_w = dt_maior_vencimento_w) then
				vl_ir_w		:= vl_ir_nf_w - vl_ir_tit_w;
			else	
				begin
				vl_ir_w		:= vl_ir_nf_w / vl_total_nota_w * vl_vencimento_w;
				vl_ir_tit_w		:= vl_ir_tit_w + vl_ir_w;
				end;
			end if;

			select	max(cd_tipo_baixa),
				coalesce(max(ie_rateio_adiant),'P')
			into STRICT	cd_tipo_baixa_neg_w,
				ie_rateio_adiant_w
			from	pessoa_juridica_estab
			where	cd_cgc			= cd_cgc_w
			and	cd_estabelecimento		= cd_estabelecimento_w;


			vl_desc_antec_w	:= 0;

			if (ie_forma_desc_fin_w = 'A') or (ie_forma_desc_fin_w = 'T') then
				vl_desc_antec_w	:= vl_desc_financ_w;
								
				if (ie_forma_desc_fin_w = 'T') then
		
					select 	count(*)
					into STRICT	qt_itens_nf_w
					from	nota_fiscal_item
					where	nr_sequencia = nr_sequencia_p;
			
					if (qt_itens_nf_w > 0) then
						select	sum(vl_liquido - (vl_liquido * pr_desc_financ/100)),
							sum(vl_liquido)
						into STRICT	vl_total_item_desc_w,
							vl_total_item_w
						from	nota_fiscal_item
						where	nr_sequencia = nr_sequencia_p;
			
						pr_desc_financ_w := round((vl_total_item_w - vl_total_item_desc_w)/vl_total_item_w * 100,2);
					end if;
				end if;
			end if;

			insert into Titulo_Pagar(
		    		nr_titulo, cd_estabelecimento,	dt_atualizacao,
				nm_usuario, dt_emissao,	dt_Contabil,
				dt_vencimento_original, dt_vencimento_atual,
				vl_titulo, vl_saldo_titulo, vl_saldo_juros,
				vl_saldo_multa, cd_moeda, tx_juros,
				tx_multa, cd_tipo_taxa_juro, cd_tipo_taxa_multa,             
				tx_desc_antecipacao,	 ie_situacao, ie_origem_titulo,
				ie_tipo_titulo, nr_seq_nota_fiscal, cd_pessoa_fisica,
				cd_cgc, nr_documento, IE_DESCONTO_DIA, vl_ir, VL_DIA_ANTECIPACAO,
				cd_tipo_taxa_antecipacao, nr_parcelas, nr_total_parcelas, 
				ie_status_tributo, NR_LOTE_TRANSF_TRIB, ds_compl_contab, 
				ds_observacao_titulo, cd_estab_financeiro, cd_tipo_baixa_neg, nr_seq_trans_fin_baixa, nr_seq_trans_fin_contab,
				nr_seq_lote_res_pls, nr_seq_proj_rec, ie_status, nr_seq_classe)
			values (
				nr_titulo_w, cd_estabelecimento_w, clock_timestamp(),
				nm_usuario_p, dt_emissao_w, dt_contabil_w,
				dt_vencimento_w, dt_vencimento_w,
				vl_vencimento_w, vl_vencimento_w, 0,
				0, cd_moeda_w,	tx_juros_w, 	
				tx_multa_w, 1, 1, 
				CASE WHEN ie_forma_desc_fin_w='T' THEN pr_desc_financ_w  ELSE 0 END ,
				'A',              /* Situacao Aberto */
				1,                /* Origem Nota Fiscal */
				CASE WHEN ie_entregue_bloqueto_w='N' THEN  coalesce(ie_tipo_titulo_operacao_w,0)  ELSE coalesce(ie_tipo_titulo_nf_bloq_w,0) END , 
				nr_sequencia_w,
				cd_pessoa_fisica_w,
				CASE WHEN coalesce(cd_pessoa_fisica_w,'X')='X' THEN cd_cgc_w  ELSE null END , 
					substr(nr_nota_fiscal_w,1,20), 'N', vl_ir_w, vl_desc_antec_w,
				cd_tipo_taxa_juro_w, nr_parcela_w, nr_total_parcelas_w, 'N', 0, ds_repasses_w,
				ds_observacao_nf_w, cd_estab_financeiro_w, cd_tipo_baixa_neg_w, nr_trans_fin_baixa_nf_w, nr_trans_fin_contab_nf_w,
				nr_seq_lote_res_pls_w, nr_seq_proj_rec_w,'D',nr_seq_classificacao_w);

			CALL ATUALIZAR_INCLUSAO_TIT_PAGAR(nr_titulo_w,nm_usuario_p);
			
			ie_gerou_w := 'S';

			update	nota_fiscal_venc
			set	nr_titulo_pagar	= nr_titulo_w
			where	nr_sequencia	= nr_sequencia_w
			and	dt_vencimento	= dt_vencimento_w;
			
			if (nr_integracao_w < 1) then
				nr_integracao_w := 1;
				/* Projeto MXM (7001)  - Exportar cadastro pessoa */

				CALL gravar_agend_integracao(565,'CD_PESSOA_JURIDICA='||null||';CD_PESSOA_FISICA='||cd_pessoa_fisica_w||';'); --Cliente
				/*O fornecedor ou sera pessoa fisica, ou sera pessoa juridica, nunca os dois ao mesmo tempo, nem tao pouco sem os dois tipos*/

				if (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then
					CALL gravar_agend_integracao(566,'CD_PESSOA_JURIDICA='||null||';CD_PESSOA_FISICA='||cd_pessoa_fisica_w||';'); --Fornecedor
				else
					CALL gravar_agend_integracao(566,'CD_PESSOA_JURIDICA='||cd_cgc_w||';CD_PESSOA_FISICA='||null||';'); --Fornecedor
				end if;
				/* Projeto MXM (7001)  - Exportar titulo a pagar */

				CALL gravar_agend_integracao(568,'NR_SEQUENCIA='||nr_sequencia_p||';');
				
				/* Projeto MXM (7077)  - Exportar titulo a pagar */

				if (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then
					CALL gravar_agend_integracao(556,'CD_PESSOA_FISICA='||cd_pessoa_fisica_w||';CD_PESSOA_JURIDICA='||null||';'); --Fornecedor
					CALL gravar_agend_integracao(562,'CD_PESSOA_FISICA='||cd_pessoa_fisica_w||';'); --Cliente
				else
					CALL gravar_agend_integracao(556,'CD_PESSOA_JURIDICA='||cd_cgc_w||';CD_PESSOA_FISICA='||null||';'); --Fornecedor
				end if;
				CALL gravar_agend_integracao(560,'NR_SEQUENCIA='||nr_sequencia_p||';');
			end if;

			nr_seq_classif_w		:= 0;
			vl_classif_w			:= 0;
			
			if ( coalesce(ie_gravar_anexo_w,'N') = 'S') then
			
				open c025;
				loop
				fetch c025 into
					ds_arquivo_w;
				EXIT WHEN NOT FOUND; /* apply on c025 */
					begin
					if (ds_arquivo_w IS NOT NULL AND ds_arquivo_w::text <> '') then
						insert into titulo_pagar_arq(	
							ds_arquivo,
							dt_atualizacao,
							dt_atualizacao_nrec,
							nm_usuario,
							nm_usuario_nrec,
							nr_sequencia,
							nr_titulo)
						values (
							ds_arquivo_w,
							clock_timestamp(),
							clock_timestamp(),
							nm_usuario_p,
							nm_usuario_p,
							nextval('titulo_pagar_arq_seq'),
							nr_titulo_w);
					end if;
					end;
				end loop;
				close c025;
			end if;

			if (nr_seq_trans_fin_desc_w <> 0) and (cd_tipo_baixa_financ_w <> 0) and (pr_desc_financeiro_w > 0) then

				vl_desconto_financ_oc_w := vl_vencimento_w * (dividir(pr_desc_financeiro_w,100));
				
				select (coalesce(max(nr_sequencia),0) + 1)
				into STRICT	nr_seq_baixa_w
				from	titulo_pagar_baixa
				where	nr_titulo	= nr_titulo_w;

				insert into titulo_pagar_baixa(
					nr_titulo,
					nr_sequencia,
					dt_baixa,
					cd_moeda,
					dt_atualizacao,
					nm_usuario,
					cd_tipo_baixa,
					ie_acao,
					vl_descontos,
 					vl_outras_deducoes,
 					vl_juros,
 					vl_multa,
 					vl_outros_acrescimos,
 					vl_pago,
					vl_baixa,
					vl_devolucao,
					nr_seq_devolucao,
					nr_seq_trans_fin,
					vl_ir,
					vl_imposto_munic,
					vl_inss,
					nr_lote_contabil,
					ds_observacao)
				values (	nr_titulo_w,
					nr_seq_baixa_w,
					clock_timestamp(),
					cd_moeda_w,
					clock_timestamp(),
					nm_usuario_p,
					cd_tipo_baixa_financ_w,
					'I',
					vl_desconto_financ_oc_w,
					0,
					0,
					0,
					0,
					0,
					vl_desconto_financ_oc_w,
					0,
					nr_sequencia_w,
					nr_seq_trans_fin_desc_w,
					0,
					0,
					0,
					0,
					Wheb_mensagem_pck.get_Texto(302636, 'DS_OBSERVACAO_W='|| ds_observacao_w)); /*'Baixa gerada pelo vencimento da nota fiscal.' || chr(13) || chr(10) || ds_observacao_w);*/
					
				CALL atualizar_tit_pagar_baixa(nr_titulo_w,nr_seq_baixa_w,nm_usuario_p);
				
				CALL gerar_alerta_baixa_tit_pagar(nr_titulo_w,nr_seq_baixa_w,cd_estabelecimento_w,nm_usuario_p);
			end if;

			if (ie_forma_desc_fin_w = 'B') and (nr_seq_trans_fin_desc_w <> 0) and (cd_tipo_baixa_financ_w <> 0) and (vl_desc_financ_w > 0) then
				
				select (coalesce(max(nr_sequencia),0) + 1)
				into STRICT	nr_seq_baixa_w
				from	titulo_pagar_baixa
				where	nr_titulo	= nr_titulo_w;

				Insert into Titulo_Pagar_Baixa(
					nr_titulo,
					nr_sequencia,
					dt_baixa,
					cd_moeda,
					dt_atualizacao,
					nm_usuario,
					cd_tipo_baixa,
					ie_acao,
					vl_descontos,
 					vl_outras_deducoes,
 					vl_juros,
 					vl_multa,
 					vl_outros_acrescimos,
 					vl_pago,
					vl_baixa,
					vl_devolucao,
					nr_seq_devolucao,
					nr_seq_trans_fin,
					vl_ir,
					vl_imposto_munic,
					vl_inss,
					nr_lote_contabil,
					ds_observacao)
				values (	nr_titulo_w,
					nr_seq_baixa_w,
					clock_timestamp(),
					cd_moeda_w,
					clock_timestamp(),
					nm_usuario_p,
					cd_tipo_baixa_financ_w,
					'I',
					vl_desc_financ_w,
					0,
					0,
					0,
					0,
					0,
					vl_desc_financ_w,
					0,
					nr_sequencia_w,
					nr_seq_trans_fin_desc_w,
					0,
					0,
					0,
					0,
					Wheb_mensagem_pck.get_Texto(302636, 'DS_OBSERVACAO_W='|| ds_observacao_w)); /*'Baixa gerada pelo vencimento da nota fiscal.' || chr(13) || chr(10) || ds_observacao_w);*/
				CALL atualizar_tit_pagar_baixa(nr_titulo_w,nr_seq_baixa_w,nm_usuario_p);
				
				CALL gerar_alerta_baixa_tit_pagar(nr_titulo_w,nr_seq_baixa_w,cd_estabelecimento_w,nm_usuario_p);
			end if;

			vl_sem_frete_w	:= null;

			if (vl_frete_w > 0) and (cd_conta_financ_frete_w IS NOT NULL AND cd_conta_financ_frete_w::text <> '') then
				vl_sem_frete_w	:= vl_total_nota_w - vl_frete_w;
			end if;

			open c030;
			loop
			fetch c030 into
				cd_conta_contabil_w,
				cd_centro_custo_w,
				nr_seq_conta_financ_w,
				vl_titulo_w,
				nr_contrato_w;
			EXIT WHEN NOT FOUND; /* apply on c030 */
				begin
				nr_seq_classif_w	:= nr_seq_classif_w + 1;
				vl_titulo_w		:= vl_titulo_w * dividir_sem_round(vl_vencimento_w,vl_total_nota_w);
				vl_titulo_w		:= vl_titulo_w * dividir_sem_round(coalesce(vl_sem_frete_w,vl_total_nota_w), vl_mercadoria_w);
				insert into Titulo_Pagar_Classif(
					nr_titulo, nr_sequencia, vl_titulo,
					dt_atualizacao, nm_usuario,
					cd_conta_contabil, cd_centro_custo,
					nr_seq_conta_financ, nr_contrato)
				values (
					nr_titulo_w, nr_seq_classif_w, vl_titulo_w,
					clock_timestamp(), nm_usuario_p, 
					cd_conta_contabil_w, cd_centro_custo_w,
					nr_seq_conta_financ_w, nr_contrato_w);
				vl_classif_w		:= vl_classif_w + vl_titulo_w;
				end;
			end loop;
			close c030;

			if (vl_frete_w > 0) and (cd_conta_financ_frete_w IS NOT NULL AND cd_conta_financ_frete_w::text <> '') then

				vl_frete_classif_w		:= vl_frete_w * dividir_sem_round(vl_vencimento_w,vl_total_nota_w);
	
				select	coalesce(max(nr_sequencia),0) + 1
				into STRICT	nr_seq_classif_w
				from	titulo_pagar_classif
				where	nr_titulo	= nr_titulo_w;

				insert into Titulo_Pagar_Classif(
					nr_titulo,
					nr_sequencia,
					vl_titulo,
					dt_atualizacao,
					nm_usuario,
					cd_conta_contabil,
					cd_centro_custo,
					nr_seq_conta_financ,
					nr_contrato)
				values (	nr_titulo_w,
					nr_seq_classif_w,
					vl_frete_classif_w,
					clock_timestamp(),
					nm_usuario_p, 
					cd_conta_contabil_frete_w, /*Matheus OS 103502 18/08/2008 conta contabil do frete*/
					null,
					cd_conta_financ_frete_w,
					null);

				vl_classif_w		:= vl_classif_w + vl_frete_classif_w;
			end if;

			if (vl_vencimento_w <> vl_classif_w) then
				select	coalesce(max(nr_sequencia),nr_seq_classif_w)
				into STRICT	nr_seq_classif_w
				from	titulo_pagar_classif a
				where	a.nr_titulo	= nr_titulo_w
				and	a.vl_titulo =	(SELECT	max(x.vl_titulo)
							from	titulo_pagar_classif x
							where	x.nr_titulo	= a.nr_titulo);

				update	titulo_pagar_classif
				set	vl_titulo	= vl_titulo + vl_vencimento_w - vl_classif_w
				where	nr_titulo	= nr_titulo_w
				and	nr_sequencia	= nr_seq_classif_w;
			end if;

			ie_titulo_tributo_w	:= 'S';

			open c040;
			loop
			fetch c040 into
				cd_tributo_w,
				vl_base_calculo_w,
				vl_tributo_w,
				pr_imposto_w,
				ie_vencimento_w,
				cd_conta_financ_nf_trib_w,
				cd_darf_nf_w,
				vl_base_adic_w,
				vl_trib_nao_retido_w,
				vl_base_nao_retido_w, 
				vl_trib_adic_w,
				ie_corpo_item_w,
				vl_desc_dependente_w,
				vl_reducao_w,
				ie_rateio_classif_w;
			EXIT WHEN NOT FOUND; /* apply on c040 */
				begin

				select	nextval('titulo_pagar_imposto_seq')
				into STRICT	nr_seq_imposto_w
				;

				SELECT * FROM obter_dados_trib_tit_pagar(cd_tributo_w, cd_estabelecimento_w, cd_cgc_w, cd_pessoa_fisica_w, cd_benef_trib_w, ds_irrelevante_w, cd_cond_pagto_w, cd_conta_financ_trib_w, nr_seq_trans_reg_w, nr_seq_trans_baixa_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, cd_darf_w, clock_timestamp(), cd_variacao_w, ie_periodicidade_w, 'N', cd_natureza_operacao_w, null, null, null, null, nr_seq_trib_cp_w, null, 0, nr_seq_classe_w, cd_tipo_baixa_neg_tp_w, vl_base_calculo_w, 'N', null, '1', null, null) INTO STRICT cd_benef_trib_w, ds_irrelevante_w, cd_cond_pagto_w, cd_conta_financ_trib_w, nr_seq_trans_reg_w, nr_seq_trans_baixa_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, cd_darf_w, cd_variacao_w, ie_periodicidade_w, nr_seq_trib_cp_w, nr_seq_classe_w, cd_tipo_baixa_neg_tp_w; -- Origem nota fiscal, insere fixo no titulo.
				if (cd_conta_financ_nf_trib_w > 0) then
					cd_conta_financ_trib_w := cd_conta_financ_nf_trib_w;
				end if;

				if (ie_vencimento_w = 'V') then

					if (IE_CORPO_ITEM_w <> 'V') then
						vl_tributo_w		:= (vl_vencimento_w / vl_total_nota_w) * vl_tributo_w;
					end if;
					dt_imposto_w		:= coalesce(dt_vencimento_w,clock_timestamp());
		
				elsif (ie_vencimento_w = 'R') then

					if (dt_primeiro_venc_w IS NOT NULL AND dt_primeiro_venc_w::text <> '') and (dt_primeiro_venc_w < dt_vencimento_w) then
						goto	proximo;
					else
						dt_imposto_w	:= coalesce(dt_entrada_saida_w,clock_timestamp());
					end if;

				elsif (ie_vencimento_w = 'C') then

					dt_imposto_w	:= coalesce(dt_vencimento_w,clock_timestamp());

				elsif (ie_vencimento_w = 'E') then

					if (dt_primeiro_venc_w IS NOT NULL AND dt_primeiro_venc_w::text <> '') and (dt_primeiro_venc_w < dt_vencimento_w) then
						goto	proximo;
					else
						dt_imposto_w	:= coalesce(dt_emissao_w,clock_timestamp());
					end if;

				end if;

				if (cd_cond_pagto_w IS NOT NULL AND cd_cond_pagto_w::text <> '') then

					if (PKG_DATE_UTILS.get_WeekDay(dt_imposto_w) = 7) then
						if (PKG_DATE_UTILS.start_of(dt_imposto_w,'dd',0) = PKG_DATE_UTILS.start_of(dt_imposto_w + 2, 'month', 0)) then
							dt_imposto_w := dt_imposto_w + 2;
						end if;
					elsif (PKG_DATE_UTILS.get_WeekDay(dt_imposto_w) = 1) then
						if (PKG_DATE_UTILS.start_of(dt_imposto_w,'dd',0) = PKG_DATE_UTILS.start_of(dt_imposto_w + 1, 'month', 0)) then
							dt_imposto_w := dt_imposto_w + 1;
						end if;
					end if;

					SELECT * FROM calcular_vencimento(	cd_estabelecimento_w, cd_cond_pagto_w, dt_imposto_w, qt_venc_w, ds_venc_w) INTO STRICT qt_venc_w, ds_venc_w;

					if (qt_venc_w = 1) then	
						dt_imposto_w	:= to_date(substr(ds_venc_w,1,10),'dd/mm/yyyy');
					end if;
				end if;

				if (vl_tributo_w > 0) then

					insert into Titulo_Pagar_imposto(
						nr_sequencia, nr_titulo, cd_tributo,
						ie_pago_prev, dt_atualizacao, nm_usuario, 
						dt_imposto, vl_base_calculo, vl_imposto,
						ds_emp_retencao, pr_imposto, cd_cond_pagto,
						nr_seq_trans_baixa, vl_nao_retido, ie_vencimento,
						vl_base_nao_retido, vl_trib_adic, vl_base_adic, nr_seq_trans_reg,
						cd_darf,dt_atualizacao_nrec,nm_usuario_nrec, cd_variacao, 
						ie_periodicidade, vl_desc_base, vl_reducao, nr_seq_trib_cp)
					values (
						nr_seq_imposto_w, nr_titulo_w, cd_tributo_w,
						'V', clock_timestamp(), nm_usuario_p, 
						dt_imposto_w, vl_base_calculo_w, vl_tributo_w,
						null, pr_imposto_w, cd_cond_pagto_w,
						nr_seq_trans_baixa_w, vl_trib_nao_retido_w, ie_vencimento_w,
						vl_base_nao_retido_w, vl_trib_adic_w, vl_base_adic_w, nr_seq_trans_reg_w, 
						coalesce(cd_darf_nf_w, cd_darf_w), clock_timestamp(),nm_usuario_p, cd_variacao_w, ie_periodicidade_w, 
						vl_desc_dependente_w,vl_reducao_w, nr_seq_trib_cp_w);

					nr_titulo_origem_w	:= nr_titulo_w;
					select	nextval('titulo_pagar_seq')
					into STRICT	nr_titulo_imposto_w
					;

					select	max(cd_tipo_baixa)
					into STRICT	cd_tipo_baixa_neg_w
					from	pessoa_juridica_estab
					where	cd_cgc			= cd_benef_trib_w
					and	cd_estabelecimento	= cd_estabelecimento_w;

					insert into Titulo_Pagar(
				    		nr_titulo, cd_estabelecimento,	dt_atualizacao,
						nm_usuario, dt_emissao,	dt_Contabil,
						dt_vencimento_original, dt_vencimento_atual,
						vl_titulo, vl_saldo_titulo, vl_saldo_juros,
						vl_saldo_multa, cd_moeda, tx_juros,
						tx_multa, cd_tipo_taxa_juro, cd_tipo_taxa_multa,             
						tx_desc_antecipacao, ie_situacao, ie_origem_titulo,
						ie_tipo_titulo,	nr_seq_nota_fiscal, 
						cd_cgc, nr_documento, ie_desconto_dia, 
						nr_titulo_original, nr_lote_contabil, nr_seq_tributo,
						nr_seq_trans_fin_baixa, nr_seq_trans_fin_contab, ie_status_tributo, 
						nr_lote_transf_trib, ds_compl_contab, cd_estab_financeiro, cd_tipo_baixa_neg,
						nr_seq_lote_res_pls, nr_seq_proj_rec, cd_tributo, nr_seq_classe, ie_status, DS_OBSERVACAO_TITULO)
					values (nr_titulo_imposto_w, cd_estabelecimento_w, clock_timestamp(),
						nm_usuario_p, dt_emissao_w, dt_contabil_w,
						dt_imposto_w, dt_imposto_w,
						vl_tributo_w, vl_tributo_w, 0,
						0, cd_moeda_w,	tx_juros_w, 
						tx_multa_w, 1, 1, 
						0,
						'A',              /* Situacao Aberto */
						1,                /* Origem Nota Fiscal */
						4,                /* Tipo Imposto Edgar 16/04/2004 - OS 7779 */
						nr_sequencia_w,
						cd_benef_trib_w, substr(nr_nota_fiscal_w,1,20), 'N', 
						nr_titulo_origem_w, 0, nr_seq_imposto_w,
						nr_seq_trans_baixa_w, nr_seq_trans_reg_w, 'NT', 0, ds_repasses_w, 
						cd_estab_financeiro_w, coalesce(cd_tipo_baixa_neg_tp_w,cd_tipo_baixa_neg_w),
						nr_seq_lote_res_pls_w, nr_seq_proj_rec_w, cd_tributo_w, coalesce(nr_seq_classificacao_w,nr_seq_classe_w), 'D', coalesce(substr(Obter_Pessoa_Titulo_Pagar(nr_titulo_origem_w),1,255),null) );
					CALL ATUALIZAR_INCLUSAO_TIT_PAGAR(nr_titulo_imposto_w, nm_usuario_p);
					nr_seq_classif_w		:= 0;

					nr_seq_classif_w		:= 0;
					vl_classif_w			:= 0;

					cd_conta_cont_trib_w	:= null;

					if (coalesce(ie_conta_contab_tit_trib_w,'T')	= 'R') then

						cd_conta_cont_trib_w	:= substr(obter_conta_contabil_trib(cd_empresa_w,cd_tributo_w,cd_benef_trib_w,clock_timestamp()),1,20);

					end if;

					open c030;
					loop
					fetch c030 into
						cd_conta_contabil_w,
						cd_centro_custo_w,
						nr_seq_conta_financ_w,
						vl_titulo_w,
						nr_contrato_w;
					EXIT WHEN NOT FOUND; /* apply on c030 */
						nr_seq_classif_w	:= nr_seq_classif_w + 1;
						vl_titulo_w		:= vl_titulo_w * dividir_sem_round(vl_tributo_w,vl_total_nota_w);
						vl_titulo_w		:= vl_titulo_w * dividir_sem_round(vl_total_nota_w, vl_mercadoria_w);

						insert into Titulo_Pagar_Classif(
							nr_titulo, nr_sequencia, vl_titulo,
							dt_atualizacao, nm_usuario,
							cd_conta_contabil, cd_centro_custo,
							nr_seq_conta_financ, nr_seq_trans_fin, nr_contrato)
						values (
							nr_titulo_imposto_w, nr_seq_classif_w, vl_titulo_w,
							clock_timestamp(), nm_usuario_p,
							cd_conta_contabil_w, cd_centro_custo_w,
							coalesce(cd_conta_financ_trib_w, nr_seq_conta_financ_w), null, nr_contrato_w);
						vl_classif_w		:= vl_classif_w + vl_titulo_w;

					end loop;
					close c030;

					if (vl_tributo_w <> vl_classif_w) then
						select	coalesce(max(nr_sequencia),nr_seq_classif_w)
						into STRICT	nr_seq_classif_w
						from	titulo_pagar_classif a
						where	a.nr_titulo	= nr_titulo_w
						and	a.vl_titulo =	(SELECT	max(x.vl_titulo)
									from	titulo_pagar_classif x
									where	x.nr_titulo	= a.nr_titulo);
	
						update	titulo_pagar_classif
						set	vl_titulo	= vl_titulo + vl_tributo_w - vl_classif_w
						where	nr_titulo	= nr_titulo_imposto_w
						and	nr_sequencia	= nr_seq_classif_w;
					end if;
				end if;

				exception
				when others then
					ds_erro_w	:= sqlerrm(SQLSTATE);
					CALL wheb_mensagem_pck.exibir_mensagem_abort(189391,'DS_ERRO=' || ds_erro_w);
					--r aise_application_error(-20011,	'Erro ao inserir imposto no titulo. ' || chr(10) ||

					--					'Verifique cadastro de tributos.' || ds_erro_w);
				end;
				<<proximo>>
				null;
			end loop;
			close c040;

			ie_titulo_tributo_w	:= 'N';
			if (coalesce(ie_vincular_adiant_titulo_w,'S') = 'S') then
				open c05;
				loop
				fetch c05 into
					nr_adiantamento_w,
					vl_vinculado_w,
					nr_seq_trans_financ_w;
				EXIT WHEN NOT FOUND; /* apply on c05 */

					/* Primeira parcela */

					if (ie_rateio_adiant_w = 'P') then

						select	coalesce(max(nr_sequencia), 0) + 1
						into STRICT	nr_sequencia_adiant_w
						from	titulo_pagar_adiant
						where	nr_titulo	= nr_titulo_w;
					
						select	vl_saldo_titulo
						into STRICT	vl_saldo_titulo_w
						from	titulo_pagar
						where	nr_titulo = nr_titulo_w;
						
						select	coalesce(sum(a.vl_adiantamento),0)
						into STRICT	vl_vinculado_tit_w
						from	titulo_pagar b,
							titulo_pagar_adiant a
						where	a.nr_titulo		= b.nr_titulo
						and	b.nr_seq_nota_fiscal	= nr_sequencia_w
						and	a.nr_adiantamento = nr_adiantamento_w;
						
						vl_saldo_adiant_w := vl_vinculado_w - vl_vinculado_tit_w;
		
						begin
							select 	coalesce(c.cd_moeda, 0),
									coalesce(c.vl_cotacao, 0)
							into STRICT	cd_moeda_adiant_pago_w,
									vl_conv_adiantamento_w
							from 	nota_fiscal a,
									nota_fiscal_adiant_pago b,
									adiantamento_pago c
							where 	a.nr_sequencia = nr_sequencia_w
							and		b.nr_sequencia_nf = a.nr_sequencia
							and		b.nr_adiantamento = c.nr_adiantamento
							and     b.nr_adiantamento = nr_adiantamento_w;
						exception
						    when others then
							cd_moeda_adiant_pago_w := 0;
							vl_conv_adiantamento_w := 0;
						end;

						
						if ((cd_moeda_adiant_pago_w <> cd_moeda_empresa_w) and (vl_conv_adiantamento_w <> 0) and (cd_moeda_adiant_pago_w <> 0)) then
							
							if (vl_titulo_adiant_w < vl_saldo_titulo_w) then
								vl_cambial_passivo_adiant_w := vl_saldo_titulo_w - vl_titulo_adiant_w;
							elsif (vl_titulo_adiant_w > vl_saldo_titulo_w) then
								vl_cambial_ativo_adiant_w :=  vl_titulo_adiant_w - vl_saldo_titulo_w;
								vl_titulo_adiant_w := vl_saldo_titulo_w;
							end if;
						
						elsif (vl_saldo_adiant_w > vl_saldo_titulo_w) then
							vl_titulo_adiant_w := vl_saldo_titulo_w;
						else
							vl_titulo_adiant_w := vl_saldo_adiant_w;
						end if;

						if (vl_titulo_adiant_w > 0) then
							begin	
							insert into titulo_pagar_adiant(nr_titulo,
								nr_sequencia,
								nr_adiantamento,
								vl_adiantamento,
								dt_atualizacao,
								nm_usuario,
								nr_lote_contabil,
								nr_seq_trans_fin,
								vl_cambial_ativo,
								vl_cambial_passivo)
							values (nr_titulo_w,
								nr_sequencia_adiant_w,
								nr_adiantamento_w,
								vl_titulo_adiant_w,
								clock_timestamp(),
								nm_usuario_p,
								null,
								coalesce(nr_seq_trans_financ_w,nr_seq_trans_adiant_w),
								vl_cambial_ativo_adiant_w,
								vl_cambial_passivo_adiant_w);
		
							CALL atualiza_adiantamento_pago(nr_titulo_w,
										nr_adiantamento_w,
										vl_titulo_adiant_w,
										nr_sequencia_adiant_w,
										nm_usuario_p,
										'I');
							if (coalesce(philips_param_pck.get_cd_pais,1) = 2) and (ie_atualiza_trib_adiant_w = 'S') then -- aamfirmo OS 1049260. Para o BR nunca fez, por isso coloquei so para o MX porque o solicitando foi o San Javier.
								CALL atualiza_tributo_adiant_mx(nr_titulo_w, nr_sequencia_adiant_w, nm_usuario_p);
							end if;	
							end;
						end if;

					/* Ratear entre os titulos */

					elsif (ie_rateio_adiant_w = 'R') then
					
						vl_titulo_adiant_w	:= dividir_sem_round(vl_titulo_w,vl_total_nota_w) * vl_vinculado_w;

						if (vl_titulo_adiant_w > 0) then

							select	coalesce(max(nr_sequencia), 0) + 1
							into STRICT	nr_sequencia_adiant_w
							from	titulo_pagar_adiant
							where	nr_titulo	= nr_titulo_w;
		
							insert into titulo_pagar_adiant(nr_titulo,
								nr_sequencia,
								nr_adiantamento,
								vl_adiantamento,
								dt_atualizacao,
								nm_usuario,
								nr_lote_contabil,
								nr_seq_trans_fin)
							values (nr_titulo_w,
								nr_sequencia_adiant_w,
								nr_adiantamento_w,
								vl_titulo_adiant_w,
								clock_timestamp(),
								nm_usuario_p,
								null,
								coalesce(nr_seq_trans_financ_w,nr_seq_trans_adiant_w));
		
							CALL atualiza_adiantamento_pago(nr_titulo_w,
										nr_adiantamento_w,
										vl_titulo_adiant_w,
										nr_sequencia_adiant_w,
										nm_usuario_p,
										'I');
						end if;
					end if;
				end loop;
				close c05;
			end if;	

			/* Tratamento especial do imposto de renda */

			if (vl_ir_w > 0) and (cd_beneficiario_ir_w IS NOT NULL AND cd_beneficiario_ir_w::text <> '') then
				begin
				dt_vencimento_orig_w	:= dt_vencimento_w;
				if (ie_vencimento_ir_w = 'E') then
					dt_vencimento_w := dt_entrada_saida_w;
				end if;
				select obter_data_vencimento(
					obter_data_base_venc(dt_vencimento_w,3),3, cd_estabelecimento_w,'C','P')
				into STRICT dt_vencimento_w
				;
				nr_titulo_origem_w	:= nr_titulo_w;
				select	nextval('titulo_pagar_seq')
				into STRICT	nr_titulo_w
				;

				select	max(cd_tipo_baixa)
				into STRICT	cd_tipo_baixa_neg_w
				from	pessoa_juridica_estab
				where	cd_cgc			= cd_beneficiario_ir_w
				and	cd_estabelecimento	= cd_estabelecimento_w;

				insert into Titulo_Pagar(
			    		nr_titulo, cd_estabelecimento,	dt_atualizacao,
					nm_usuario, dt_emissao,	dt_contabil,
					dt_vencimento_original, dt_vencimento_atual,
					vl_titulo, vl_saldo_titulo, vl_saldo_juros,
					vl_saldo_multa, cd_moeda, tx_juros,
					tx_multa, cd_tipo_taxa_juro, cd_tipo_taxa_multa,             
					tx_desc_antecipacao, ie_situacao, ie_origem_titulo,
					ie_tipo_titulo,	nr_seq_nota_fiscal, 
					cd_cgc, nr_documento, ie_desconto_dia, 
					nr_titulo_original, nr_lote_contabil, ie_status_tributo, 
					nr_lote_transf_trib, ds_compl_contab, cd_estab_financeiro, cd_tipo_baixa_neg, 
					nr_seq_lote_res_pls, ie_status, nr_seq_classe)
				values (
					nr_titulo_w, cd_estabelecimento_w, clock_timestamp(),
					nm_usuario_p, dt_emissao_w, dt_contabil_w,
					dt_vencimento_orig_w, dt_vencimento_w,
					vl_ir_w, vl_ir_w, 0,
					0, cd_moeda_w,	tx_juros_w, 
					tx_multa_w, 1, 1, 
					0,
					'A',              /* Situacao Aberto */
					1,                /* Origem Nota Fiscal */
					coalesce(ie_tipo_titulo_operacao_w,0),                /* Tipo Nota Fiscal */
					nr_sequencia_w,
					cd_beneficiario_ir_w, substr(nr_nota_fiscal_w,1,20), 'N', 
					nr_titulo_origem_w, 0, 'NT', 0, ds_repasses_w, cd_estab_financeiro_w, cd_tipo_baixa_neg_w,
					nr_seq_lote_res_pls_w, 'D',nr_seq_classificacao_w);
				CALL ATUALIZAR_INCLUSAO_TIT_PAGAR(nr_titulo_w, nm_usuario_p);
				nr_seq_classif_w		:= 0;
				open c030;
				loop
				fetch c030 into
					cd_conta_contabil_w,
					cd_centro_custo_w,
					nr_seq_conta_financ_w,
					vl_titulo_w,
					nr_contrato_w;
				EXIT WHEN NOT FOUND; /* apply on c030 */
					begin
					nr_seq_classif_w	:= nr_seq_classif_w + 1;
					vl_titulo_w		:= vl_titulo_w * (vl_ir_w / vl_total_nota_w);
					vl_titulo_w		:= vl_titulo_w * dividir(vl_total_nota_w, vl_mercadoria_w);
					insert into Titulo_Pagar_Classif(
						nr_titulo, nr_sequencia, vl_titulo,
						dt_atualizacao, nm_usuario,
						cd_conta_contabil, cd_centro_custo,
						nr_seq_conta_financ, nr_contrato)
					values (
						nr_titulo_w, nr_seq_classif_w, vl_titulo_w,
						clock_timestamp(), nm_usuario_p, 
						cd_conta_contabil_ir_w, cd_centro_custo_w,
						nr_seq_conta_fin_ir_w, nr_contrato_w);
					end;
				end loop;
				close c030;
				end;	
			end if;

			if (ie_despesa_adic_w = 'N') then
				open c060;
				loop
				fetch c060 into
					dt_vencimento_despesa_w,
					vl_documento_despesa_w,
					cd_cgc_despesa_w,
					nr_documento_despesa_w;
				EXIT WHEN NOT FOUND; /* apply on c060 */
					begin
					ie_despesa_adic_w := 'S';

					select	nextval('titulo_pagar_seq')
					into STRICT	nr_titulo_desp_w
					;

					select	max(cd_tipo_baixa)
					into STRICT	cd_tipo_baixa_neg_w
					from	pessoa_juridica_estab
					where	cd_cgc			= cd_cgc_despesa_w
					and	cd_estabelecimento	= cd_estabelecimento_w;

					insert into Titulo_Pagar(
				    		nr_titulo, cd_estabelecimento,	dt_atualizacao,
						nm_usuario, dt_emissao,	dt_contabil,
						dt_vencimento_original, dt_vencimento_atual,
						vl_titulo, vl_saldo_titulo, vl_saldo_juros,
						vl_saldo_multa, cd_moeda, tx_juros,
						tx_multa, cd_tipo_taxa_juro, cd_tipo_taxa_multa,
						tx_desc_antecipacao, ie_situacao, ie_origem_titulo,
						ie_tipo_titulo,	nr_seq_nota_fiscal,
						cd_cgc, nr_documento,	ie_desconto_dia, nr_lote_contabil,
						ie_status_tributo, nr_lote_transf_trib, ds_compl_contab, 
						cd_estab_financeiro, cd_tipo_baixa_neg, nr_seq_lote_res_pls, nr_seq_proj_rec, ie_status, nr_seq_classe)
					values (
						nr_titulo_desp_w, cd_estabelecimento_w, clock_timestamp(),
						nm_usuario_p, dt_emissao_w, dt_contabil_w,
						dt_vencimento_despesa_w, dt_vencimento_despesa_w,
						vl_documento_despesa_w, vl_documento_despesa_w, 0,
						0, cd_moeda_w,	tx_juros_w,
						tx_multa_w, 1, 1,
						0,
						'A',              /* Situacao Aberto */
						1,                /* Origem Nota Fiscal */
						coalesce(ie_tipo_titulo_operacao_w,0),                /* Tipo Nota Fiscal */
						nr_sequencia_w,
						cd_cgc_despesa_w, nr_documento_despesa_w, 'N', 0, 'N', 0, 
						ds_repasses_w, cd_estab_financeiro_w, cd_tipo_baixa_neg_w, nr_seq_lote_res_pls_w, nr_seq_proj_rec_w, 'D', nr_seq_classificacao_w);
					CALL ATUALIZAR_INCLUSAO_TIT_PAGAR(nr_titulo_desp_w, nm_usuario_p);

					nr_seq_classif_w	:= 0;

					open	c030;
					loop
					fetch	c030 into
						cd_conta_contabil_w,
						cd_centro_custo_w,
						nr_seq_conta_financ_w,
						vl_titulo_w,
						nr_contrato_w;
					EXIT WHEN NOT FOUND; /* apply on c030 */

						nr_seq_classif_w	:= nr_seq_classif_w + 1;
						vl_titulo_w		:= (coalesce(vl_documento_despesa_w,0) / coalesce(vl_total_nota_w,0)) * coalesce(vl_titulo_w,0);

						if (coalesce(vl_titulo_w,0)	> coalesce(vl_documento_despesa_w,0)) then

							vl_titulo_w	:= coalesce(vl_documento_despesa_w,0);

						end if;

						insert	into Titulo_Pagar_Classif(
							nr_titulo,
							nr_sequencia,
							vl_titulo,
							dt_atualizacao,
							nm_usuario,
							cd_conta_contabil,
							cd_centro_custo,
							nr_seq_conta_financ,
							nr_contrato)
						values (	nr_titulo_w,
							nr_seq_classif_w,
							vl_titulo_w,
							clock_timestamp(),
							nm_usuario_p,
							cd_conta_contabil_w,
							cd_centro_custo_w,
							nr_seq_conta_financ_w,
							nr_contrato_w);

					end	loop;
					close	c030;

					end;
				end loop;
				close c060;
			end if;

			update	nota_fiscal
			set	dt_atualizacao_cp_cr 	= clock_timestamp()
			where	nr_sequencia 		= nr_sequencia_p
			and	ie_contas_pagar_w	= 'S';

			end;
		elsif (ie_entrada_saida_w = 'E') and
			((ie_acao_nf_w = '2') or (ie_situacao_nf_w = '9')) then
			begin
			open c020;
			loop
				fetch c020 into
					nr_titulo_w,
					vl_titulo_w,
					cd_moeda_w,
					vl_saldo_atual_w;
				EXIT WHEN NOT FOUND; /* apply on c020 */

				if (obter_dados_tit_pagar(nr_titulo_w, 'VT') <> vl_saldo_titulo_w)  then
					CALL wheb_mensagem_pck.exibir_mensagem_abort(189392,'NR_TITULO=' || nr_titulo_w);
					--r aise_application_error(-20011, 'O titulo ' || nr_titulo_w || ' ja possui baixa ou saldo alterado!');
				end if;


				begin
				select (coalesce(max(nr_sequencia),0) + 1)
				into STRICT	nr_seq_baixa_w
				from	titulo_pagar_baixa
				where	nr_titulo	= nr_titulo_w;
				exception
					when others then
						nr_seq_baixa_w	:= 1;
				end;

				select	coalesce(max(cd_tipo_baixa_devolucao), 2)
				into STRICT	cd_tipo_baixa_devolucao_w
				from	parametros_contas_pagar
				where	cd_estabelecimento		= cd_estabelecimento_w;

				Insert into Titulo_Pagar_Baixa(
					nr_titulo,
					nr_sequencia,
					dt_baixa,
					cd_moeda,
					dt_atualizacao,
					nm_usuario,
					cd_tipo_baixa,
					ie_acao,
					vl_descontos,
 					vl_outras_deducoes,
 					vl_juros,
 					vl_multa,
 					vl_outros_acrescimos,
 					vl_pago,
					vl_baixa,
					vl_devolucao,
					nr_seq_devolucao,
					ds_observacao)
				values (	nr_titulo_w,
					nr_seq_baixa_w,
					clock_timestamp(),
					cd_moeda_w,
					clock_timestamp(),
					nm_usuario_p,
					cd_tipo_baixa_devolucao_w,		/* Estorno de nota Fiscal */
					'I',          				/* acao Baixa */
					0,0,0,0,0,0,
					vl_saldo_atual_w,
					vl_saldo_atual_w,
					nr_sequencia_w,
					Wheb_mensagem_pck.get_Texto(302636, 'DS_OBSERVACAO_W='|| ds_observacao_w )); /*'Baixa gerada pelo vencimento da nota fiscal.' || chr(13) || chr(10) || ds_observacao_w);*/
				select	vl_saldo_titulo
				into STRICT	vl_saldo_atual_w
				from	titulo_pagar
				where	nr_titulo	= nr_titulo_w;
			
				update	titulo_pagar
			   	set 	vl_saldo_titulo = vl_saldo_titulo - vl_saldo_atual_w,
					ie_situacao	= 'C',
			             	dt_liquidacao	= clock_timestamp()
                        	where	nr_titulo		= nr_titulo_w;

				CALL Cancelar_Titulo_Pagar_Imposto(nr_titulo_w, nm_usuario_p);
				
				CALL gerar_alerta_baixa_tit_pagar(nr_titulo_w,nr_seq_baixa_w,cd_estabelecimento_w,nm_usuario_p);

			end loop;
			close c020;
			end;
		elsif (ie_entrada_saida_w = 'S') and (ie_acao_nf_w = '1') then
			begin
			if (ie_devolucao_nf_w = 'A') then
				select	nextval('adiantamento_pago_seq')
				into STRICT	nr_Adiantamento_w
				;
				insert into Adiantamento_Pago(
					nr_adiantamento,
					cd_estabelecimento,
					dt_atualizacao,
					nm_usuario,
					dt_adiantamento,
					vl_adiantamento,
					vl_saldo,
					cd_moeda,
					cd_pessoa_fisica,
					cd_cgc,
					ds_observacao,
					nr_seq_nf,
					nr_seq_tipo)
				values (
					nr_adiantamento_w,
					cd_estabelecimento_w,
					clock_timestamp(),
					nm_usuario_p,
					dt_entrada_saida_w,
					vl_vencimento_w,
					vl_vencimento_w,
					cd_moeda_w,
					cd_pessoa_fisica_w,
					cd_cgc_w,
					substr(Wheb_mensagem_pck.get_Texto(302639, 'NR_NOTA_FISCAL_W='|| NR_NOTA_FISCAL_W),1,255), /*Nota Fiscal de Devolucao: #@NR_NOTA_FISCAL_W#@*/
					nr_sequencia_p,
					NR_SEQ_TIPO_ADIANT_NF_DEV_W);
					
			else
				open c020;
				loop
				fetch c020 into
					nr_titulo_w,
					vl_titulo_w,
					cd_moeda_w,
					vl_saldo_atual_w;
				EXIT WHEN NOT FOUND; /* apply on c020 */

					if (obter_dados_tit_pagar(nr_titulo_w, 'VT') <> vl_saldo_titulo_w)  then
						CALL wheb_mensagem_pck.exibir_mensagem_abort(189392,'NR_TITULO=' || nr_titulo_w);
						--r aise_application_error(-20011, 'O titulo ' || nr_titulo_w || ' ja possui baixa ou saldo alterado!');
					end if;

					select	coalesce(max(nr_sequencia),0) + 1
					into STRICT	nr_seq_baixa_w
					from	titulo_pagar_baixa
					where	nr_titulo	= nr_titulo_w;

					select	coalesce(max(cd_tipo_baixa_devolucao), 2)
					into STRICT	cd_tipo_baixa_devolucao_w
					from	parametros_contas_pagar
					where	cd_estabelecimento		= cd_estabelecimento_w;

					Insert into Titulo_Pagar_Baixa(
						nr_titulo,
						nr_sequencia,
						dt_baixa,
						cd_moeda,
						dt_atualizacao,
						nm_usuario,
						cd_tipo_baixa,
						ie_acao,
						vl_descontos,
	 					vl_outras_deducoes,
 						vl_juros,
 						vl_multa,
 						vl_outros_acrescimos,
 						vl_pago,
						vl_baixa,
						vl_devolucao,
						nr_seq_devolucao,
						ds_observacao)
					values (nr_titulo_w,
						nr_seq_baixa_w,
						clock_timestamp(),
						cd_moeda_w,
						clock_timestamp(),
						nm_usuario_p,
						cd_tipo_baixa_devolucao_w,
						'I',
						0,0,0,0,0,0,
						vl_saldo_atual_w,
						vl_saldo_atual_w,
						nr_sequencia_w,
						Wheb_mensagem_pck.get_Texto(302636, 'DS_OBSERVACAO_W='|| ds_observacao_w ));

					select	vl_saldo_titulo
					into STRICT	vl_saldo_atual_w
					from	titulo_pagar
					where	nr_titulo	= nr_titulo_w;

					CALL Atualizar_Saldo_tit_pagar(nr_titulo_w, nm_usuario_p);
					CALL Gerar_W_Tit_Pag_imposto(nr_titulo_w, nm_usuario_p);

					update	titulo_pagar
				   	set 	ie_situacao	= 'C'
	                        	where	nr_titulo		= nr_titulo_w;

					CALL Cancelar_Titulo_Pagar_Imposto(nr_titulo_w, nm_usuario_p);
					
					CALL gerar_alerta_baixa_tit_pagar(nr_titulo_w,nr_seq_baixa_w,cd_estabelecimento_w,nm_usuario_p);

				end loop;
				close c020;
			end if;

			update	nota_fiscal
			set	dt_atualizacao_cp_cr 	= clock_timestamp()
			where	nr_sequencia 		= nr_sequencia_p;

			end;
		elsif (ie_entrada_saida_w = 'S') and (ie_acao_nf_w = '2') then
			begin
			select	coalesce(max(nr_adiantamento),0)
			into STRICT	nr_adiantamento_w
			from 	Adiantamento_Pago
			where	vl_adiantamento 	= vl_vencimento_w
			and 	coalesce(cd_cgc,0)		= coalesce(cd_cgc_w,0)
			and 	coalesce(cd_pessoa_fisica,0)	= coalesce(cd_pessoa_fisica_w,0)
			and	coalesce(dt_baixa::text, '') = '';
			--insert into log_XXtasy values(sysdate, 'Marcus',999, nr_adiantamento_w);
			if (nr_adiantamento_w > 0) then
				begin
				Insert into adiant_pago_dev(
					nr_adiantamento,
					nr_sequencia,
					dt_devolucao,
					vl_devolucao,
					cd_moeda,
					dt_atualizacao,
					nm_usuario,
					ds_motivo_dev,
					nr_lote_contabil,
					nr_seq_trans_fin)
				values (nr_adiantamento_w,
					1000,
					dt_entrada_saida_w,
					vl_vencimento_w,
					cd_moeda_w,
					clock_timestamp(),
					nm_usuario_p,
					Wheb_mensagem_pck.get_Texto(302642), /*'Estorno NF',*/
					0,
					null);
				CALL atualizar_saldo_adiant_pago(nr_adiantamento_w, nm_usuario_p);
				end;
			end if;
			update	nota_fiscal
			set	dt_atualizacao_cp_cr	= clock_timestamp()
			where	nr_sequencia 		= nr_sequencia_p
			and	ie_contas_pagar_w	= 'S';
			end;
		end if;
		end;
end loop;
close c010;
ie_gerou_p := ie_gerou_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_titulo_pagar_nf_venc ( nr_sequencia_p bigint, nm_usuario_p text, ie_gerou_p INOUT text) FROM PUBLIC;

