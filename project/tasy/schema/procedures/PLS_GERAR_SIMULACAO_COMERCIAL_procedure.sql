-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_simulacao_comercial ( nr_sequencia_p bigint, ie_opcao_p text, nm_usuario_p text, cd_estabelecimento_p bigint, nr_seq_simulacao_p INOUT bigint) AS $body$
DECLARE

/* ie_opcao_p
	P = Prospecção
	S = Solicitação de lead
	L = Simulação de preço
*/
qt_simulacao_w			integer;
nm_pessoa_w			varchar(255);
dt_nascimento_w			timestamp;
ds_email_w			varchar(255);
nr_ddi_telefone_w		varchar(3);
nr_ddd_telefone_w		varchar(3);
nr_telefone_w			varchar(15);
cd_municipio_ibge_w		varchar(10);
sg_estado_w			pessoa_juridica.sg_estado%type;
cd_pessoa_fisica_w		varchar(10);
ie_tipo_contratacao_w		varchar(2);
nr_seq_simulacao_w		bigint;
nr_seq_simul_w			bigint;
nr_seq_cliente_w		bigint	:= null;
nr_seq_solicitacao_w		bigint	:= null;
vl_simulacao_w			double precision;
tx_desconto_w			double precision;
nr_seq_regra_desconto_w		bigint;
nr_seq_solicitacao_cliente_w	bigint;
nr_seq_classif_comercial_w	bigint;
nr_seq_parametro_com_w		bigint;
nr_seq_contrato_existente_w	bigint;
nr_contrato_existente_w		bigint;
nr_seq_simul_ind_w		pls_simulpreco_individual.nr_sequencia%type;
nr_seq_perfil_w			pls_simulacao_perfil.nr_sequencia%type;

C01 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_simulpreco_individual
	where	nr_seq_simulacao = nr_seq_simul_w
	order by nr_sequencia;

C02 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_simulacao_perfil
	where	nr_seq_simulacao = nr_seq_simul_w
	order by nr_sequencia;

C03 CURSOR FOR
	SELECT	nr_sequencia,
		nr_seq_plano,
		nr_seq_tabela
	from	pls_sca_regra_contrato
	where	nr_seq_contrato	= nr_seq_contrato_existente_w
	and	clock_timestamp() between coalesce(dt_inicio_vigencia,clock_timestamp()) and coalesce(dt_fim_vigencia,clock_timestamp());

C04 CURSOR FOR
	SELECT	nr_seq_bonificacao,
		tx_bonificacao,
		vl_bonificacao
	from	pls_bonificacao_vinculo
	where	nr_seq_contrato	= nr_seq_contrato_existente_w
	and	clock_timestamp() between coalesce(dt_inicio_vigencia,clock_timestamp()) and coalesce(dt_fim_vigencia,clock_timestamp());

C05 CURSOR(	nr_seq_solicitacao_pc	pls_solicitacao_comercial.nr_sequencia%type,
		nr_seq_prospect_pc	pls_comercial_cliente.nr_sequencia%type) FOR
	SELECT	nm_pessoa,
		dt_nascimento,
		qt_idade,
		nr_seq_parentesco
	from	pls_solicitacao_dependente
	where	nr_seq_solicitacao_lead	= nr_seq_solicitacao_pc
	and	ie_opcao_p = 'S'
	
union all

	SELECT	nm_pessoa,
		dt_nascimento,
		qt_idade,
		nr_seq_parentesco
	from	pls_solicitacao_dependente
	where	nr_seq_prospect	= nr_seq_prospect_pc
	and	ie_opcao_p = 'P';
BEGIN

if (ie_opcao_p	= 'P') then
	nr_seq_cliente_w	:= nr_sequencia_p;

	select	max(nr_seq_solicitacao),
		max(nr_seq_contrato_existente),
		max(nr_contrato_existente)
	into STRICT	nr_seq_solicitacao_cliente_w,
		nr_seq_contrato_existente_w,
		nr_contrato_existente_w
	from	pls_comercial_cliente
	where	nr_sequencia	= nr_seq_cliente_w;

	select	max(nr_seq_classificacao)
	into STRICT	nr_seq_classif_comercial_w
	from	pls_solicitacao_comercial
	where	nr_sequencia	= nr_seq_solicitacao_cliente_w;

	begin
	select	count(*)
	into STRICT	qt_simulacao_w
	from	pls_simulacao_preco
	where	((nr_seq_cliente	= nr_seq_cliente_w) or (nr_seq_solicitacao	= nr_seq_solicitacao_cliente_w));
	exception
	when others then
		qt_simulacao_w	:= 0;
	end;

	if (qt_simulacao_w = 0) then
		select	cd_pessoa_fisica,
			substr(obter_nome_pf_pj(cd_pessoa_fisica,cd_cgc),1,255),
			substr(obter_dados_pf(cd_pessoa_fisica,'DN'),1,20),
			substr(obter_dados_pf_pj(cd_pessoa_fisica,cd_cgc,'M'),1,255),
			substr(obter_dados_pf_pj(cd_pessoa_fisica,cd_cgc,'DIT'),1,2),
			substr(obter_dados_pf_pj(cd_pessoa_fisica,cd_cgc,'DDT'),1,2),
			substr(obter_dados_pf_pj(cd_pessoa_fisica,cd_cgc,'T'),1,15),
			substr(obter_dados_pf_pj(cd_pessoa_fisica,cd_cgc,'CDM'),1,10),
			substr(obter_dados_pf_pj(cd_pessoa_fisica,cd_cgc,'UF'),1,2),
			nr_seq_solicitacao
		into STRICT	cd_pessoa_fisica_w,
			nm_pessoa_w,
			dt_nascimento_w,
			ds_email_w,
			nr_ddi_telefone_w,
			nr_ddd_telefone_w,
			nr_telefone_w,
			cd_municipio_ibge_w,
			sg_estado_w,
			nr_seq_solicitacao_w
		from	pls_comercial_cliente
		where	nr_sequencia	= nr_seq_cliente_w;

		/*aaschlote 03/02/2011 OS - 289004*/

		begin
		select	coalesce(ie_tipo_contratacao,(CASE WHEN (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') THEN 'I' ELSE 'CA' END))
		into STRICT	ie_tipo_contratacao_w
		from	pls_solicitacao_comercial
		where	nr_sequencia	= nr_seq_solicitacao_w;
		exception
		when others then
			if (coalesce(cd_pessoa_fisica_w,'0') = '0') then
				ie_tipo_contratacao_w	:= 'CA';
			else
				ie_tipo_contratacao_w	:= 'I';
			end if;
		end;
	else
		select	max(nr_sequencia)
		into STRICT	nr_seq_simul_w
		from	pls_simulacao_preco
		where	((nr_seq_cliente	= nr_seq_cliente_w) or (nr_seq_solicitacao	= nr_seq_solicitacao_cliente_w));

		if (coalesce(nr_seq_simul_w,0) > 0) then
			select	nm_pessoa,
				dt_nascimento,
				ds_email,
				nr_ddi,
				nr_ddd,
				nr_telefone,
				cd_municipio_ibge,
				sg_estado,
				ie_tipo_contratacao,
				vl_simulacao,
				tx_desconto,
				nr_seq_regra_desconto
			into STRICT	nm_pessoa_w,
				dt_nascimento_w,
				ds_email_w,
				nr_ddi_telefone_w,
				nr_ddd_telefone_w,
				nr_telefone_w,
				cd_municipio_ibge_w,
				sg_estado_w,
				ie_tipo_contratacao_w,
				vl_simulacao_w,
				tx_desconto_w,
				nr_seq_regra_desconto_w
			from	pls_simulacao_preco
			where	nr_sequencia	= nr_seq_simul_w;
		end if;
	end if;
elsif (ie_opcao_p	= 'S') then
	nr_seq_solicitacao_w	:= nr_sequencia_p;

	select	count(*)
	into STRICT	qt_simulacao_w
	from	pls_simulacao_preco
	where	nr_seq_solicitacao	= nr_seq_solicitacao_w;

	select	max(nr_seq_classificacao),
		max(nr_seq_contrato_existente),
		max(nr_contrato_existente)
	into STRICT	nr_seq_classif_comercial_w,
		nr_seq_contrato_existente_w,
		nr_contrato_existente_w
	from	pls_solicitacao_comercial
	where	nr_sequencia	= nr_seq_solicitacao_w;

	if (qt_simulacao_w = 0) then
		select	cd_pf_vinculado,
			nm_pessoa_fisica,
			dt_nascimento,
			ds_email,
			nr_ddi,
			nr_ddd,
			nr_telefone,
			cd_municipio_ibge,
			sg_uf_municipio,
			ie_tipo_contratacao
		into STRICT	cd_pessoa_fisica_w,
			nm_pessoa_w,
			dt_nascimento_w,
			ds_email_w,
			nr_ddi_telefone_w,
			nr_ddd_telefone_w,
			nr_telefone_w,
			cd_municipio_ibge_w,
			sg_estado_w,
			ie_tipo_contratacao_w
		from	pls_solicitacao_comercial
		where	nr_sequencia	= nr_seq_solicitacao_w;

		if (coalesce(ie_tipo_contratacao_w::text, '') = '') then
			CALL wheb_mensagem_pck.exibir_mensagem_abort( 275876, null );
		end if;
	else
		select	max(nr_sequencia)
		into STRICT	nr_seq_simul_w
		from	pls_simulacao_preco
		where	nr_seq_solicitacao	= nr_seq_solicitacao_w;

		if (coalesce(nr_seq_simul_w,0) > 0) then
			select	nm_pessoa,
				dt_nascimento,
				ds_email,
				nr_ddi,
				nr_ddd,
				nr_telefone,
				cd_municipio_ibge,
				sg_estado,
				ie_tipo_contratacao,
				vl_simulacao,
				tx_desconto,
				nr_seq_regra_desconto
			into STRICT	nm_pessoa_w,
				dt_nascimento_w,
				ds_email_w,
				nr_ddi_telefone_w,
				nr_ddd_telefone_w,
				nr_telefone_w,
				cd_municipio_ibge_w,
				sg_estado_w,
				ie_tipo_contratacao_w,
				vl_simulacao_w,
				tx_desconto_w,
				nr_seq_regra_desconto_w
			from	pls_simulacao_preco
			where	nr_sequencia	= nr_seq_simul_w;
		end if;
	end if;
elsif (ie_opcao_p	= 'L') then
	nr_seq_simul_w	:= nr_sequencia_p;

	select	nm_pessoa,
		dt_nascimento,
		ds_email,
		nr_ddi,
		nr_ddd,
		nr_telefone,
		cd_municipio_ibge,
		sg_estado,
		ie_tipo_contratacao,
		vl_simulacao,
		tx_desconto,
		nr_seq_regra_desconto,
		nr_seq_solicitacao,
		nr_seq_contrato,
		nr_contrato
	into STRICT	nm_pessoa_w,
		dt_nascimento_w,
		ds_email_w,
		nr_ddi_telefone_w,
		nr_ddd_telefone_w,
		nr_telefone_w,
		cd_municipio_ibge_w,
		sg_estado_w,
		ie_tipo_contratacao_w,
		vl_simulacao_w,
		tx_desconto_w,
		nr_seq_regra_desconto_w,
		nr_seq_solicitacao_w,
		nr_seq_contrato_existente_w,
		nr_contrato_existente_w
	from	pls_simulacao_preco
	where	nr_sequencia	= nr_seq_simul_w;
end if;

select	nextval('pls_simulacao_preco_seq')
into STRICT	nr_seq_simulacao_w
;

if (ie_tipo_contratacao_w = 'I') then
	nr_seq_classif_comercial_w	:= null;
end if;

if (nr_seq_classif_comercial_w IS NOT NULL AND nr_seq_classif_comercial_w::text <> '') then
	select	max(nr_sequencia)
	into STRICT	nr_seq_parametro_com_w
	from	pls_simul_regra_param
	where	nr_seq_classif_comercial = nr_seq_classif_comercial_w;
end if;

insert	into	pls_simulacao_preco(	nr_sequencia,
		cd_estabelecimento,
		ie_tipo_contratacao,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		dt_simulacao,
		ie_tipo_processo,
		nm_pessoa,
		dt_nascimento,
		nr_telefone,
		ds_email,
		nr_ddi,
		nr_ddd,
		sg_estado,
		cd_municipio_ibge,
		nr_seq_cliente,
		nr_seq_solicitacao,
		vl_simulacao,
		tx_desconto,
		nr_seq_regra_desconto,
		ie_consiste_benef_bloqueio,
		nr_seq_parametro_com,
		nr_seq_contrato,
		nr_contrato)
	values (	nr_seq_simulacao_w,
		cd_estabelecimento_p,
		ie_tipo_contratacao_w,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		'M',
		nm_pessoa_w,
		dt_nascimento_w,
		nr_telefone_w,
		ds_email_w,
		nr_ddi_telefone_w,
		nr_ddd_telefone_w,
		sg_estado_w,
		cd_municipio_ibge_w,
		nr_seq_cliente_w,
		nr_seq_solicitacao_w,
		vl_simulacao_w,
		tx_desconto_w,
		nr_seq_regra_desconto_w,
		'S',
		nr_seq_parametro_com_w,
		nr_seq_contrato_existente_w,
		nr_contrato_existente_w);

for r_c03_w in C03 loop
	begin
	insert into pls_sca_vinculo(	nr_sequencia, nr_seq_simulacao, nr_seq_plano, nr_seq_tabela,
			dt_atualizacao, dt_atualizacao_nrec, nm_usuario, nm_usuario_nrec)
		values (	nextval('pls_sca_vinculo_seq'), nr_seq_simulacao_w, r_c03_w.nr_seq_plano, r_c03_w.nr_seq_tabela,
			clock_timestamp(), clock_timestamp(), nm_usuario_p, nm_usuario_p);
	end;
end loop;

for r_c04_w in C04 loop
	begin
	insert into pls_bonificacao_vinculo(	nr_sequencia, nr_seq_simulacao, nr_seq_bonificacao,
			tx_bonificacao, vl_bonificacao, dt_atualizacao,
			dt_atualizacao_nrec, nm_usuario, nm_usuario_nrec)
		values (	nextval('pls_bonificacao_vinculo_seq'), nr_seq_simulacao_w, r_c04_w.nr_seq_bonificacao,
			r_c04_w.tx_bonificacao, r_c04_w.vl_bonificacao, clock_timestamp(),
			clock_timestamp(), nm_usuario_p, nm_usuario_p);
	end;
end loop;

/*aaschlote 29/05/2012 - Se for Coletiva, gera os dados automáticos*/

if (ie_tipo_contratacao_w <> 'I') then
	CALL pls_gerar_simul_perfil_aut(nr_seq_simulacao_w,cd_estabelecimento_p,nm_usuario_p);
end if;

if (ie_opcao_p in ('L','S')) then
	update	pls_solicitacao_comercial
	set	nr_seq_simul_preco	= nr_seq_simulacao_w
	where	nr_sequencia	= nr_seq_solicitacao_w;
end if;

if (coalesce(nr_seq_simul_w,0) > 0) then
	for r_c01_w in C01 loop
		begin
		select	nextval('pls_simulpreco_individual_seq')
		into STRICT	nr_seq_simul_ind_w
		;

		insert	into	pls_simulpreco_individual(	nr_sequencia,
				nr_seq_simulacao,
				qt_idade,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nm_beneficiario,
				ie_tipo_benef,
				vl_mensalidade,
				nr_seq_produto,
				nr_seq_tabela,
				nr_seq_parentesco,
				tx_desconto,
				nr_seq_regra_desconto,
				vl_mensal_sem_desc,
				cd_pessoa_fisica)
			(SELECT	nr_seq_simul_ind_w,
				nr_seq_simulacao_w,
				qt_idade,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nm_beneficiario,
				ie_tipo_benef,
				vl_mensalidade,
				nr_seq_produto,
				nr_seq_tabela,
				nr_seq_parentesco,
				tx_desconto,
				nr_seq_regra_desconto,
				vl_mensal_sem_desc,
				cd_pessoa_fisica
			from	pls_simulpreco_individual
			where	nr_sequencia	= r_c01_w.nr_sequencia);

		CALL pls_gerar_resumo_simulacao(nr_seq_simulacao_w, nr_seq_simul_ind_w, 'I', 'BS', 'I', cd_estabelecimento_p, nm_usuario_p);
		end;
	end loop; --C01
	for r_c02_w in C02 loop
		begin
		select	nextval('pls_simulacao_perfil_seq')
		into STRICT	nr_seq_perfil_w
		;

		insert	into	pls_simulacao_perfil(	nr_sequencia,
				nr_seq_simulacao,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_regra_perfil,
				nr_seq_faixa_etaria,
				ie_abrangencia,
				tx_indice,
				vl_simulacao_perfil,
				vl_simulacao_sca,
				vl_simulacao_bonific)
			(SELECT	nr_seq_perfil_w,
				nr_seq_simulacao_w,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_regra_perfil,
				nr_seq_faixa_etaria,
				ie_abrangencia,
				tx_indice,
				vl_simulacao_perfil,
				vl_simulacao_sca,
				vl_simulacao_bonific
			from	pls_simulacao_perfil
			where	nr_sequencia	= r_c02_w.nr_sequencia);

		insert	into	pls_simul_param_item(	nr_sequencia,
				nr_seq_regra_perfil,
				nr_seq_fator_alteracao,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				tx_indice,
				vl_peso,
				nr_seq_tipo_fator)
			(SELECT	nextval('pls_simul_param_item_seq'),
				nr_seq_perfil_w,
				nr_seq_fator_alteracao,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				tx_indice,
				vl_peso,
				nr_seq_tipo_fator
			from	pls_simul_param_item
			where	nr_seq_regra_perfil	= r_c02_w.nr_sequencia);

		insert	into	pls_simulpreco_coletivo(	nr_sequencia,
				nr_seq_simulacao,
				nr_seq_simul_perfil,
				qt_idade_inicial,
				qt_idade_final,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				qt_beneficiario,
				vl_mensalidade,
				nr_seq_plano,
				nr_seq_tabela,
				vl_preco_sem_desconto,
				vl_inscricao)
			(SELECT	nextval('pls_simulpreco_coletivo_seq'),
				nr_seq_simulacao_w,
				nr_seq_perfil_w,
				qt_idade_inicial,
				qt_idade_final,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				qt_beneficiario,
				vl_mensalidade,
				nr_seq_plano,
				nr_seq_tabela,
				vl_preco_sem_desconto,
				vl_inscricao
			from	pls_simulpreco_coletivo
			where	nr_seq_simul_perfil	= r_c02_w.nr_sequencia);

		insert	into	pls_simul_perfil_tabela(	nr_sequencia,
				nr_seq_simul_perfil,
				nr_seq_plano,
				nr_seq_tabela,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				ie_tabela_selecionada)
			(SELECT	nextval('pls_simul_perfil_tabela_seq'),
				nr_seq_perfil_w,
				nr_seq_plano,
				nr_seq_tabela,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				'N'
			from	pls_simul_perfil_tabela
			where	nr_seq_simul_perfil	= r_c02_w.nr_sequencia);
		end;
	end loop; --C02
	insert	into	pls_simulacao_preco_plano(	nr_sequencia,
			nr_seq_simulacao,
			nm_usuario,
			nm_usuario_nrec,
			dt_atualizacao,
			dt_atualizacao_nrec,
			ie_status,
			nr_seq_plano,
			nr_seq_tabela)
		(SELECT	nextval('pls_simulacao_preco_plano_seq'),
			nr_seq_simulacao_w,
			nm_usuario_p,
			nm_usuario_p,
			clock_timestamp(),
			clock_timestamp(),
			'N',
			nr_seq_plano,
			nr_seq_tabela
		from	pls_simulacao_preco_plano
		where	nr_seq_simulacao	= nr_seq_simul_w);
else
	insert	into	pls_simulpreco_individual(	nr_sequencia,
			nr_seq_simulacao,
			dt_nascimento,
			qt_idade,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nm_beneficiario,
			ie_tipo_benef,
			cd_pessoa_fisica)
	values (	nextval('pls_simulpreco_individual_seq'),
			nr_seq_simulacao_w,
			dt_nascimento_w,
			obter_idade(dt_nascimento_w,clock_timestamp(),'A'),
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nm_pessoa_w,
			'T',
			cd_pessoa_fisica_w);

	--Adicionar dependentes informados no LEAD ou Prospect
	if ((nr_seq_solicitacao_w IS NOT NULL AND nr_seq_solicitacao_w::text <> '') or (nr_seq_cliente_w IS NOT NULL AND nr_seq_cliente_w::text <> '')) then
		for r_c05_w in C05(nr_seq_solicitacao_w, nr_seq_cliente_w) loop
			begin
			insert	into	pls_simulpreco_individual(	nr_sequencia,
					nr_seq_simulacao,
					dt_nascimento,
					qt_idade,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nm_beneficiario,
					ie_tipo_benef,
					cd_pessoa_fisica,
					nr_seq_parentesco)
				values (	nextval('pls_simulpreco_individual_seq'),
					nr_seq_simulacao_w,
					r_c05_w.dt_nascimento,
					r_c05_w.qt_idade,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					r_c05_w.nm_pessoa,
					'D',
					null,
					r_c05_w.nr_seq_parentesco);
			end;
		end loop;
	end if;
end if;

nr_seq_simulacao_p	:= nr_seq_simulacao_w;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_simulacao_comercial ( nr_sequencia_p bigint, ie_opcao_p text, nm_usuario_p text, cd_estabelecimento_p bigint, nr_seq_simulacao_p INOUT bigint) FROM PUBLIC;

