-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE insere_agenda_pac_proc ( nr_seq_agenda_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, nm_usuario_p text, nr_seq_proc_int_p bigint, ie_type_p bigint, ie_type_delete_p bigint, ie_table_p text, ie_side_p agenda_paciente_proc.ie_lado%type) AS $body$
DECLARE

		
nr_sequencia_w	agenda_paciente_proc.nr_seq_agenda%type;

BEGIN

if (coalesce(nr_seq_agenda_p,0) <> 0
  and coalesce(ie_origem_proced_p,0) <> 0
  and coalesce(cd_procedimento_p,0) > 0
  and coalesce(nr_seq_proc_int_p,0) > 0)then
  
	  if (coalesce(ie_table_p,'') = 'SCHEDULE')then
		select	coalesce(max(nr_seq_agenda),0)+1
		into STRICT	nr_sequencia_w
		from	agenda_paciente_proc
		where 	nr_sequencia = nr_seq_agenda_p;
		
		if (ie_type_p = 2)then		
			insert into agenda_paciente_proc(
				nr_sequencia,
				nr_seq_agenda,
				dt_atualizacao,
				nm_usuario,
				cd_procedimento,
				ie_origem_proced,
				nr_seq_proc_interno,
				ie_lado)
				values (
				nr_seq_agenda_p,
				nr_sequencia_w,
				clock_timestamp(),
				nm_usuario_p,
				cd_procedimento_p,
				ie_origem_proced_p,
				nr_seq_proc_int_p,
				ie_side_p);
				
		elsif (ie_type_p = 1)then
			update	agenda_paciente
			set	nr_seq_proc_interno	= nr_seq_proc_int_p,
				cd_procedimento 	= cd_procedimento_p,
				ie_origem_proced	= ie_origem_proced_p,
				ie_lado			= ie_side_p
			where 	nr_sequencia 		= nr_seq_agenda_p;
		end if;
	 elsif (coalesce(ie_table_p,'') = 'WAIT_LIST')then

		   if (ie_type_p = 2)then
			
				insert into agenda_lista_espera_proc(
					nr_sequencia,
					nr_seq_lista,
					dt_atualizacao,
					nm_usuario,
					cd_procedimento,
					ie_origem_proced,
					nr_seq_proc_interno,
					ie_lado)
					values (
					nextval('agenda_lista_espera_proc_seq'),
					nr_seq_agenda_p,
					clock_timestamp(),
					nm_usuario_p,
					cd_procedimento_p,
					ie_origem_proced_p,
					nr_seq_proc_int_p,
					ie_side_p);
					
			elsif (ie_type_p = 1)then
				update	agenda_lista_espera
				set	nr_seq_proc_interno	= nr_seq_proc_int_p,
					cd_procedimento 	= cd_procedimento_p,
					ie_origem_proced	= ie_origem_proced_p,
					ie_lado			= ie_side_p
				where 	nr_sequencia 		= nr_seq_agenda_p;
			end if;
	   elsif (coalesce(ie_table_p,'') = 'CHART')then
		  if (ie_type_p = 2)then
			
			select	max(nr_sequencia)
				into STRICT    nr_sequencia_w
				from 	pedido_age_cirurgia
				where 	nr_sequencia 		= nr_seq_agenda_p;
				
				if (coalesce(nr_sequencia_w, 0) > 0)then
				
					insert into pedido_age_cirurgia_proc(
						nr_sequencia,
						nr_seq_pedido,
						dt_atualizacao,
						nm_usuario,
						cd_procedimento,
						ie_origem_proced,
						nr_seq_proc_interno,
						ie_lado)
						values (
						nextval('pedido_age_cirurgia_proc_seq'),
						nr_seq_agenda_p,
						clock_timestamp(),
						nm_usuario_p,
						cd_procedimento_p,
						ie_origem_proced_p,
						nr_seq_proc_int_p,
						ie_side_p);
				end if;
			elsif (ie_type_p = 1)then
			
				select	max(nr_sequencia)
				into STRICT    nr_sequencia_w
				from 	pedido_age_cirurgia
				where 	nr_sequencia 		= nr_seq_agenda_p;
				
				if (coalesce(nr_sequencia_w, 0) > 0)then
					update	pedido_age_cirurgia
					set	nr_seq_proc_interno	= nr_seq_proc_int_p,
						cd_procedimento 	= cd_procedimento_p,
						ie_origem_proced	= ie_origem_proced_p,
						ie_lado			= ie_side_p
					where 	nr_sequencia 		= nr_seq_agenda_p;
				end if;
			end if;
	   end if;
	commit;		
end if;

if (ie_type_p = 3)then
	if (coalesce(ie_table_p,'') = 'SCHEDULE')then
		if (ie_type_delete_p = 1)then
		
			update	agenda_paciente
			set	nr_seq_proc_interno	 = NULL,
				cd_procedimento 	 = NULL,
				ie_origem_proced	 = NULL,
				ie_lado			 = NULL
			where 	nr_sequencia 		= nr_seq_agenda_p;
				
		elsif (ie_type_delete_p = 2)then
		
			delete
			from	agenda_paciente_proc
			where 	cd_procedimento = cd_procedimento_p
			and	nr_sequencia 	= nr_seq_agenda_p;
			
		end if;
	elsif (coalesce(ie_table_p,'') = 'WAIT_LIST')then
		if (ie_type_delete_p = 1)then
		
			update	agenda_lista_espera
			set	nr_seq_proc_interno	 = NULL,
				cd_procedimento 	 = NULL,
				ie_origem_proced	 = NULL,
				ie_lado			 = NULL
			where 	nr_sequencia 		= nr_seq_agenda_p;
				
		elsif (ie_type_delete_p = 2)then
		
			delete
			from	agenda_lista_espera_proc
			where 	cd_procedimento = cd_procedimento_p
			and	nr_seq_lista 	= nr_seq_agenda_p;
			
		end if;
	elsif (coalesce(ie_table_p,'') = 'CHART')then
		if (ie_type_delete_p = 1)then
		
			update	pedido_age_cirurgia
			set	nr_seq_proc_interno	 = NULL,
				cd_procedimento 	 = NULL,
				ie_origem_proced	 = NULL,
				ie_lado			 = NULL
			where 	nr_sequencia 		= nr_seq_agenda_p;
				
		elsif (ie_type_delete_p = 2)then
		
			delete
			from	pedido_age_cirurgia_proc
			where 	cd_procedimento = cd_procedimento_p
			and	nr_seq_pedido 	= nr_seq_agenda_p;
			
		end if;	
	end if;	
	commit;
end if;


end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE insere_agenda_pac_proc ( nr_seq_agenda_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, nm_usuario_p text, nr_seq_proc_int_p bigint, ie_type_p bigint, ie_type_delete_p bigint, ie_table_p text, ie_side_p agenda_paciente_proc.ie_lado%type) FROM PUBLIC;

