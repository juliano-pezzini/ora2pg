-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE result_antib_medic_before_post ( ie_insert_update_p text, ie_resposta_pergunta_p text, cd_microorganismo_p bigint, nr_seq_material_p bigint, cd_setor_atendimento_p bigint, nr_seq_resultado_p bigint, nr_seq_item_p bigint, qt_microorg_p text, ds_observacao_p text, ie_micro_sem_antib_p text, nm_usuario_p text, nr_cultura_microorg_p text, ds_pergunta_p INOUT text) AS $body$
DECLARE


/* ******************************************** LEGENDA *************************************************** /
/* IE_INSERT_UPDATE_P  -  pode ser 'I' (Para fazer insert) ou  'U' (Para Update)				*/

/* IE_RESPOSTA_PERGUNTA_P  -  usado para saber se é a primeira vez ou se está executando conforme confirmação 	*/

/* ******************************************************************************************************** */

cd_medicamento_w	bigint;
qt_registros_w		integer;

C01 CURSOR FOR
	SELECT	cd_medicamento
	from	cih_medicamento
	where	ie_situacao	= 'A'
	and	coalesce(IE_UTILIZA_RESULT_LAB,'S') = 'S';

C02 CURSOR FOR
	SELECT	a.cd_medicamento
	from	cih_medicamento b,
			cih_microorg_medic a
	where	cd_microorganismo = cd_microorganismo_p
	and		nr_seq_material = nr_seq_material_p
	and (coalesce(cd_setor_atendimento,0) = coalesce(cd_setor_atendimento_p,0) or (coalesce(cd_setor_atendimento::text, '') = ''))
	and		a.cd_medicamento = b.cd_medicamento
	and		coalesce(IE_UTILIZA_RESULT_LAB,'S') = 'S'
	and		b.ie_situacao = 'A';


BEGIN

if (ie_insert_update_p = 'I') then

	select	count(*)
	into STRICT	qt_registros_w
	from	cih_medicamento b,
			cih_microorg_medic a
	where	cd_microorganismo = cd_microorganismo_p
	and	nr_seq_material = nr_seq_material_p
	and (coalesce(cd_setor_atendimento,0) = coalesce(cd_setor_atendimento_p,0) or (coalesce(cd_setor_atendimento::text, '') = ''))
	and	a.cd_medicamento = b.cd_medicamento
	and	b.ie_situacao = 'A';

	if (qt_registros_w > 0) or (ie_resposta_pergunta_p = 'S') then

		if (qt_registros_w = 0) then
			open C01;
			loop
			fetch C01 into
				cd_medicamento_w;
			EXIT WHEN NOT FOUND; /* apply on C01 */
				begin

				insert into	exame_lab_result_antib(nr_sequencia,
					nr_seq_resultado,
					nr_seq_result_item,
					cd_microorganismo,
					cd_medicamento,
					ie_resultado,
					dt_atualizacao,
					nm_usuario,
					qt_microorganismo,
					ds_obs_microorganismo,
					ie_micro_sem_antib,
					ie_primeira_escolha,
					nr_cultura_microorg)
				values (nextval('exame_lab_result_antib_seq'),
					nr_seq_resultado_p,
					nr_seq_item_p,
					cd_microorganismo_p,
					cd_medicamento_w,
					'N',
					clock_timestamp(),
					nm_usuario_p,
					qt_microorg_p,
					ds_observacao_p,
					ie_micro_sem_antib_p,
					'N',
					coalesce(nr_cultura_microorg_p,0));

				end;
			end loop;
			close C01;
		else

			open C02;
			loop
			fetch C02 into
				cd_medicamento_w;
			EXIT WHEN NOT FOUND; /* apply on C02 */
				begin

				insert into	exame_lab_result_antib(nr_sequencia,
					nr_seq_resultado,
					nr_seq_result_item,
					cd_microorganismo,
					cd_medicamento,
					ie_resultado,
					dt_atualizacao,
					nm_usuario,
					qt_microorganismo,
					ds_obs_microorganismo,
					ie_micro_sem_antib,
                                                                                ie_primeira_escolha,
					nr_cultura_microorg)
				values (nextval('exame_lab_result_antib_seq'),
					nr_seq_resultado_p,
					nr_seq_item_p,
					cd_microorganismo_p,
					cd_medicamento_w,
					'N',
					clock_timestamp(),
					nm_usuario_p,
					qt_microorg_p,
					ds_observacao_p,
					ie_micro_sem_antib_p,
                                                                                'N',
					coalesce(nr_cultura_microorg_p,0));
				end;
			end loop;
			close C02;

		end if;

	else
		ds_pergunta_p	:= substr(obter_texto_tasy(68280,wheb_usuario_pck.get_nr_seq_idioma),1,255);
	end if;

elsif (ie_insert_update_p = 'U') then

	update	exame_lab_result_antib
	set		qt_microorganismo	= qt_microorg_p,
			ds_obs_microorganismo	= ds_observacao_p,
			ie_micro_sem_antib	= ie_micro_sem_antib_p
	where	cd_microorganismo	= cd_microorganismo_p
	and		nr_seq_resultado	= nr_seq_resultado_p
	and		nr_seq_result_item	= nr_seq_item_p
	and		coalesce(nr_cultura_microorg,0) = coalesce(nr_cultura_microorg_p,0);

end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE result_antib_medic_before_post ( ie_insert_update_p text, ie_resposta_pergunta_p text, cd_microorganismo_p bigint, nr_seq_material_p bigint, cd_setor_atendimento_p bigint, nr_seq_resultado_p bigint, nr_seq_item_p bigint, qt_microorg_p text, ds_observacao_p text, ie_micro_sem_antib_p text, nm_usuario_p text, nr_cultura_microorg_p text, ds_pergunta_p INOUT text) FROM PUBLIC;

