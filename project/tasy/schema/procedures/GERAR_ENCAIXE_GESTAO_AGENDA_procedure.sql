-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_encaixe_gestao_agenda ( dt_agenda_p timestamp, qt_duracao_p bigint, cd_pessoa_fisica_p text, nm_paciente_p text, cd_medico_p text, nr_seq_proc_interno_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, ie_lado_p text, cd_convenio_p bigint, cd_agenda_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, ds_observacao_p text, ie_carater_cirurgia_p text, nr_tefefone_p text, qt_idade_p bigint, qt_idade_mes_p bigint, nm_pessoa_contato_p text, cd_anestesista_p text, nr_seq_agenda_p INOUT bigint, cd_procedencia_p bigint default null, ie_tipo_atendimento_p bigint default null, nr_seq_motivo_encaixe_p bigint DEFAULT NULL, ds_erro_2_p INOUT text DEFAULT NULL, nr_seq_classif_agenda_p bigint default null, dt_desejada_p timestamp default null) AS $body$
DECLARE



cd_pessoa_fisica_w	varchar(10);
nr_seq_classif_w	bigint;
qt_min_cirugia_w	smallint:= null;
nr_sequencia_W		bigint;
nr_telefone_w		varchar(40);
nr_celular_w		varchar(40);
dt_ultima_consulta_w	timestamp;
cd_usuario_convenio_w	varchar(30);
qt_dias_atend_w		integer;
ie_reserva_leito_w	varchar(3);
cd_tipo_anestesia_w	varchar(2);
qt_idade_paciente_w	smallint;
ie_agenda_cirurgiao_w	varchar(1);
ds_erro_w		varchar(255);
ds_erro_2_w		varchar(255);
qt_agendas_w		integer;

ds_status_agenda_w	varchar(100);
nm_pessoa_fisica_w	varchar(50);
ds_agenda_w		varchar(50);
hr_inicio_w		varchar(21);
nm_pessoa_contato_w	varchar(50);
ie_consiste_w		varchar(01);
ie_forma_convenio_w	varchar(2);

cd_convenio_w		integer;
cd_categoria_w		varchar(10);
cd_plano_w		varchar(10);
dt_validade_w		timestamp;
nr_doc_convenio_w	varchar(20);
cd_tipo_acomodacao_w	smallint;
ie_Gera_dados_conv_w	varchar(1);
ie_gerar_dias_prev_w	varchar(1);
qt_diaria_prev_w	smallint;
ie_status_autor_w	varchar(10);
ie_gerar_equip_w	varchar(1);
ie_gerar_cme_w		varchar(1);
ie_gerar_opme_w		varchar(1);
ie_gerar_servico_w	varchar(1);
ie_gerar_caixa_opme_w	varchar(1);
ds_observacao_aux	varchar(4000);
ie_erro_w		varchar(1);
ds_orientacoes_w varchar(4000);


BEGIN

if (nr_seq_classif_agenda_p IS NOT NULL AND nr_seq_classif_agenda_p::text <> '') then
	nr_seq_classif_w := nr_seq_classif_agenda_p;
else
	nr_seq_classif_w := Obter_Classif_Encaixe_Agenda(nr_seq_classif_w);
end if;

begin
select	obter_idade(dt_nascimento, clock_timestamp(), 'A')
into STRICT	qt_idade_paciente_w	
from	pessoa_fisica
where	cd_pessoa_fisica		=	cd_pessoa_fisica_p;
exception
	when no_data_found then
	qt_idade_paciente_w	:= null;
end;

select	obter_compl_pf(cd_pessoa_fisica_p, 1, 'T'),
	substr(nm_pessoa_contato_p,1,50)
into STRICT	nr_telefone_w,
	nm_pessoa_contato_w
;

select	obter_dados_pf(cd_pessoa_fisica_p,'TC')
into STRICT	nr_celular_w
;

if (nr_celular_w IS NOT NULL AND nr_celular_w::text <> '') then
	nr_telefone_w := nr_telefone_w || ' ' || nr_celular_w;
end if;

if (nr_seq_proc_interno_p IS NOT NULL AND nr_seq_proc_interno_p::text <> '') then
	select	ie_reserva_leito,
		cd_tipo_anestesia,
		QT_DIAS_PREV_INTER
	into STRICT	ie_reserva_leito_w,
		cd_tipo_anestesia_w,
		qt_diaria_prev_w
	from	proc_interno
	where	nr_sequencia			= nr_seq_proc_interno_p;

end if;

select	coalesce(max((obter_valor_param_usuario(871,25,obter_perfil_ativo,nm_usuario_p,cd_estabelecimento_p))::numeric ) , 1)	
into STRICT	qt_dias_atend_w
;

ie_agenda_cirurgiao_w := obter_param_usuario(871, 24, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_agenda_cirurgiao_w);
ie_consiste_w := obter_param_usuario(871, 142, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_consiste_w);
ie_gerar_dias_prev_w := obter_param_usuario(871, 184, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_gerar_dias_prev_w);
ie_status_autor_w := obter_param_usuario(871, 33, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_status_autor_w);
ie_gerar_equip_w := obter_param_usuario(871, 40, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_gerar_equip_w);
ie_gerar_cme_w := obter_param_usuario(871, 200, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_gerar_cme_w);
ie_gerar_opme_w := obter_param_usuario(871, 201, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_gerar_opme_w);
ie_gerar_servico_w := obter_param_usuario(871, 202, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_gerar_servico_w);
ie_gerar_caixa_opme_w := obter_param_usuario(871, 203, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_gerar_caixa_opme_w);


begin						
select	dt_ultima_consulta,
	cd_usuario_convenio
into STRICT	dt_ultima_consulta_w,
	cd_usuario_convenio_w
from	Med_Cliente
where	cd_pessoa_fisica		= cd_pessoa_fisica_p
and	trunc(dt_ultima_consulta,'dd')	>= trunc(clock_timestamp()-qt_dias_atend_w,'dd')
and	cd_convenio			= cd_convenio_p;
exception
	when others then
	cd_usuario_convenio_w	:= null;
end;

if (coalesce(cd_usuario_convenio_w::text, '') = '') then
	begin
	select	max(cd_usuario_convenio)
	into STRICT	cd_usuario_convenio_w	
	from    atendimento_paciente a,
		atend_categoria_convenio b
	where   a.nr_atendimento	= b.nr_atendimento
	and     a.cd_pessoa_fisica	= cd_pessoa_fisica_p
	and     b.cd_convenio		= cd_convenio_p
	and     dt_entrada >=		clock_timestamp() - qt_dias_atend_w;
	exception
		when others then
		cd_usuario_convenio_w	:= null;
	end;
end if;

select 	count(*)
into STRICT	qt_agendas_w
from 	agenda_paciente
where	cd_agenda	 	= cd_agenda_p
and	dt_agenda		= trunc(dt_agenda_p,'dd')
and	hr_inicio		= trunc(dt_agenda_p,'mi')
and	(((ie_consiste_w = 'N') and (ie_status_agenda  = CASE WHEN coalesce(cd_pessoa_fisica_p::text, '') = '' THEN  'R'  ELSE 'N' END )) or
	 ((ie_consiste_w = 'S') and (ie_status_agenda not in ('C', 'L', 'B'))));

if (qt_agendas_w > 0) then

	ds_agenda_w		:= substr(obter_nome_agenda(cd_agenda_p),1,50);
	hr_inicio_w		:= substr(to_char(trunc(dt_agenda_p,'mi'),'dd/mm/yyyy hh24:mi'),1,21);

	select	substr(obter_valor_dominio(83, CASE WHEN coalesce(cd_pessoa_fisica_p::text, '') = '' THEN  'R'  ELSE 'N' END ),1,100)
	into STRICT	ds_status_agenda_w
	;
	
	CALL WHEB_MENSAGEM_PCK.Exibir_Mensagem_Abort(182974,'HR_INICIO_W='||to_char(hr_inicio_w)||';DS_AGENDA_W='||to_char(ds_agenda_w)||';DS_STATUS_AGENDA_W='||to_char(ds_status_agenda_w));
end if;


select	nextval('agenda_paciente_seq')
into STRICT	nr_sequencia_W
;

nr_seq_agenda_p	:= nr_sequencia_W;

select 	coalesce(max('N'),'S')
into STRICT	ie_erro_w
from	procedimento
where	cd_procedimento = cd_procedimento_p
and	ie_origem_proced= ie_origem_proced_p;

if (ie_erro_w = 'S') then

	CALL WHEB_MENSAGEM_PCK.Exibir_Mensagem_Abort(182975);
end if;					
	
	
--begin Retirado tfferretti OS 470990
insert into agenda_paciente(
	nr_sequencia,
	cd_agenda,
	cd_pessoa_fisica,
	dt_agenda,
	hr_inicio,
	nr_minuto_duracao,
	nm_usuario,
	dt_atualizacao,
	cd_medico,
	ie_status_agenda,
	nr_seq_classif_agenda,
	dt_agendamento,
	nr_seq_proc_interno,
	ie_equipamento,
	cd_procedimento,
	ie_origem_proced,
	nr_telefone,
	ie_reserva_leito,
	cd_tipo_anestesia,
	cd_usuario_convenio,
	ie_lado,
	nm_paciente,
	cd_convenio,
	nm_usuario_orig,
	qt_idade_paciente,
	ds_observacao,
	ie_carater_cirurgia,
	ie_autorizacao,
	nm_pessoa_contato,
	qt_diaria_prev,
	cd_anestesista,
	hr_revisada,
	dt_nascimento_pac,
	qt_idade_mes,
	cd_procedencia,
	ie_tipo_atendimento,
	nr_seq_motivo_encaixe)
values (
	nr_sequencia_w,
	cd_agenda_p,
	cd_pessoa_fisica_p,
	trunc(dt_agenda_p,'dd'),
	trunc(dt_agenda_p,'mi'),
	qt_duracao_p,
	nm_usuario_p,
	clock_timestamp(),
	cd_medico_p,
	CASE WHEN coalesce(cd_pessoa_fisica_p::text, '') = '' THEN  'R'  ELSE 'N' END ,
	nr_seq_classif_w,
	clock_timestamp(),
	nr_seq_proc_interno_p,
	'N',
	cd_procedimento_p,
	ie_origem_proced_p,
	substr(coalesce(nr_telefone_w, nr_tefefone_p),1,254),
	ie_reserva_leito_w,
	cd_tipo_anestesia_w,
	cd_usuario_convenio_w,
	ie_lado_p,
	CASE WHEN coalesce(cd_pessoa_fisica_p::text, '') = '' THEN  nm_paciente_p  ELSE substr(obter_nome_pf(cd_pessoa_fisica_p),1,100) END ,
	cd_convenio_p,
	nm_usuario_p,
	CASE WHEN qt_idade_p=0 THEN qt_idade_paciente_w  ELSE qt_idade_p END ,
	ds_observacao_p,
	ie_carater_cirurgia_p,
	coalesce(ie_status_autor_w,'PA'),
	nm_pessoa_contato_w,
	CASE WHEN ie_gerar_dias_prev_w='S' THEN qt_diaria_prev_w  ELSE null END ,
	cd_anestesista_p,
	trunc(dt_agenda_p,'mi'),
	to_date(obter_dados_pf(cd_pessoa_fisica_p,'DN'),'dd/mm/yyyy hh24:mi'),
	CASE WHEN qt_idade_mes_p=0 THEN obter_idade(obter_data_nascto_pf(cd_pessoa_fisica_p),clock_timestamp(),'MM')  ELSE qt_idade_mes_p END ,
	cd_procedencia_p,
	ie_tipo_atendimento_p,
	nr_seq_motivo_encaixe_p);
--exception

--	when others then

--	WHEB_MENSAGEM_PCK.Exibir_Mensagem_Abort(182976);

--end;
  if (obtain_user_locale(wheb_usuario_pck.get_nm_usuario) = 'es_CO' and (dt_desejada_p IS NOT NULL AND dt_desejada_p::text <> '')) then
    insert into agenda_paciente_auxiliar(
        nr_sequencia,
        nr_seq_agenda,
        nm_usuario,
        dt_atualizacao,
        dt_desejada_agendamento)
    values (
        nextval('agenda_paciente_auxiliar_seq'),
        nr_sequencia_w,
        wheb_usuario_pck.get_nm_usuario,
        clock_timestamp(),
        dt_desejada_p);
  end if;

commit;
ds_orientacoes_w := gerar_orientacao(nr_seq_proc_interno_p, cd_convenio_p, nm_usuario_p, ds_orientacoes_w);

select	coalesce(max(obter_valor_param_usuario(871, 46, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p)), 'N'),
	coalesce(max(obter_valor_param_usuario(871, 156, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p)), 'N')
into STRICT	ie_forma_convenio_w,
	ie_Gera_dados_conv_w
;

if (ie_gera_dados_conv_w = 'S') and (cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') and (ie_forma_convenio_w <> 'N') then
	SELECT * FROM gerar_convenio_agendamento(cd_pessoa_fisica_p, 1, nr_sequencia_w, ie_forma_convenio_w, cd_convenio_w, cd_categoria_w, cd_usuario_convenio_w, dt_validade_w, nr_doc_convenio_w, cd_tipo_acomodacao_w, cd_plano_w, nm_usuario_p, ds_observacao_aux) INTO STRICT cd_convenio_w, cd_categoria_w, cd_usuario_convenio_w, dt_validade_w, nr_doc_convenio_w, cd_tipo_acomodacao_w, cd_plano_w, ds_observacao_aux;
	if (cd_convenio_w IS NOT NULL AND cd_convenio_w::text <> '') and (cd_convenio_p	= cd_convenio_w) then
		update	agenda_paciente
		set	cd_convenio		= cd_convenio_w,
			cd_categoria		= cd_categoria_w,
			cd_usuario_convenio	= cd_usuario_convenio_w,
			dt_validade_carteira	= dt_validade_w,
			nr_doc_convenio		= nr_doc_convenio_w,
			cd_tipo_acomodacao	= cd_tipo_acomodacao_w,
			cd_plano		= cd_plano_w
		where	nr_sequencia		= nr_sequencia_w;
	end if;
end if;

SELECT * FROM gerar_dados_pre_agenda(cd_procedimento_p, ie_origem_proced_p, nr_sequencia_W, nr_seq_proc_interno_p, cd_medico_p, cd_pessoa_fisica_p, nm_usuario_p, cd_convenio_p, null, ds_orientacoes_w, cd_estabelecimento_p, ie_gerar_equip_w, ie_gerar_cme_w, ie_gerar_opme_w, ie_gerar_servico_w, ie_gerar_caixa_opme_w, ds_erro_w, ds_erro_2_w) INTO STRICT ds_erro_w, ds_erro_2_w;
						
ds_erro_2_p	:= substr(ds_erro_2_w,1,255);

if (coalesce(nr_seq_proc_interno_p,0) > 0) then
	CALL Gerar_Autor_Regra(null,null,null,null,null,null,'AP',nm_usuario_p,nr_sequencia_W,nr_seq_proc_interno_p,null,null,null,null,null,null,null);
end if;	

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_encaixe_gestao_agenda ( dt_agenda_p timestamp, qt_duracao_p bigint, cd_pessoa_fisica_p text, nm_paciente_p text, cd_medico_p text, nr_seq_proc_interno_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, ie_lado_p text, cd_convenio_p bigint, cd_agenda_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, ds_observacao_p text, ie_carater_cirurgia_p text, nr_tefefone_p text, qt_idade_p bigint, qt_idade_mes_p bigint, nm_pessoa_contato_p text, cd_anestesista_p text, nr_seq_agenda_p INOUT bigint, cd_procedencia_p bigint default null, ie_tipo_atendimento_p bigint default null, nr_seq_motivo_encaixe_p bigint DEFAULT NULL, ds_erro_2_p INOUT text DEFAULT NULL, nr_seq_classif_agenda_p bigint default null, dt_desejada_p timestamp default null) FROM PUBLIC;

