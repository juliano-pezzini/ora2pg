-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE dar_duplicar_app (nr_sequencia_p dar_app.nr_sequencia%type, nm_usuario_p dar_app.nm_usuario_nrec%type) AS $body$
DECLARE


   c_app CURSOR FOR
      SELECT a.*
        from dar_app a 
       where a.nr_sequencia = nr_sequencia_p;

   c_app_datamodels CURSOR FOR
      SELECT *
        from dar_app_datamodels b
       where b.nr_seq_app = nr_sequencia_p;

   c_app_control_fields CURSOR FOR
      SELECT *
        from dar_app_control_fields c
       where c.nr_seq_app = nr_sequencia_p;

   c_dashboard CURSOR FOR
      SELECT *
        from dar_dashboard d 
       where d.nr_seq_app = nr_sequencia_p;

   r_app                c_app%rowtype;
   r_app_datamodels     c_app_datamodels%rowtype;
   r_app_control_fields c_app_control_fields%rowtype;
   r_dashboard          c_dashboard%rowtype;
   nr_seq_app_new_p dar_app.nr_sequencia%type;


BEGIN
   open c_app;
   loop
      fetch c_app
         into r_app;
      EXIT WHEN NOT FOUND; /* apply on c_app */

      insert into dar_app(nr_sequencia,
          nr_seq_grupo,
          ds_app,
          ds_descricao,
          dt_atualizacao,
          nm_usuario,
          dt_atualizacao_nrec,
          nm_usuario_nrec)
      values (nextval('dar_app_seq'),
          r_app.nr_seq_grupo,
          r_app.ds_app,
          r_app.ds_descricao,
          clock_timestamp(),
          wheb_usuario_pck.get_nm_usuario,
          clock_timestamp(),
          wheb_usuario_pck.get_nm_usuario)
      returning nr_sequencia into nr_seq_app_new_p;

   end loop;
   close c_app;

   --
   if (nr_seq_app_new_p IS NOT NULL AND nr_seq_app_new_p::text <> '') then
      open c_app_datamodels;
      loop
         fetch c_app_datamodels
            into r_app_datamodels;
         EXIT WHEN NOT FOUND; /* apply on c_app_datamodels */

         insert into dar_app_datamodels(nr_sequencia,
             nr_seq_table_control,
             nr_seq_app,
             nr_seq_ligacao,
             dt_atualizacao,
             nm_usuario,
             dt_atualizacao_nrec,
             nm_usuario_nrec)
         values (nextval('dar_app_datamodels_seq'),
             r_app_datamodels.nr_seq_table_control,
             nr_seq_app_new_p,
             r_app_datamodels.nr_seq_ligacao,
             clock_timestamp(),
             wheb_usuario_pck.get_nm_usuario,
             clock_timestamp(),
             wheb_usuario_pck.get_nm_usuario);

      end loop;
      close c_app_datamodels;
      --
      open c_app_control_fields;
      loop
         fetch c_app_control_fields
            into r_app_control_fields;
         EXIT WHEN NOT FOUND; /* apply on c_app_control_fields */

         insert into dar_app_control_fields(nr_sequencia,
             nr_seq_app,
             ie_selecao,
             nr_sequencia_a,
             nr_sequencia_b,
             nr_seq_tab_control_a,
             nr_seq_tab_control_b,
             dt_atualizacao,
             nm_usuario,
             dt_atualizacao_nrec,
             nm_usuario_nrec)
         values (nextval('dar_app_control_fields_seq'),
             nr_seq_app_new_p,
             r_app_control_fields.ie_selecao,
             r_app_control_fields.nr_sequencia_a,
             r_app_control_fields.nr_sequencia_b,
             r_app_control_fields.nr_seq_tab_control_a,
             r_app_control_fields.nr_seq_tab_control_b,
             clock_timestamp(),
             wheb_usuario_pck.get_nm_usuario,
             clock_timestamp(),
             wheb_usuario_pck.get_nm_usuario);

      end loop;
      close c_app_control_fields;
      --
      open c_dashboard;
      loop
         fetch c_dashboard
            into r_dashboard;
         EXIT WHEN NOT FOUND; /* apply on c_dashboard */

         insert into dar_dashboard(nr_sequencia,
             nr_seq_app,
             ie_operacao,
             ds_dashboard,
             nr_seq_dimensao,
             nr_seq_quantitativo,
             ie_tipo_grafico,
             ds_cor,
             ds_sql,
             dt_atualizacao,
             nm_usuario,
             dt_atualizacao_nrec,
             nm_usuario_nrec)
         
         values (nextval('dar_dashboard_seq'),
             nr_seq_app_new_p,
             r_dashboard.ie_operacao,
             r_dashboard.ds_dashboard,
             r_dashboard.nr_seq_dimensao,
             r_dashboard.nr_seq_quantitativo,
             r_dashboard.ie_tipo_grafico,
             r_dashboard.ds_cor,
             r_dashboard.ds_sql,
             clock_timestamp(),
             wheb_usuario_pck.get_nm_usuario,
             clock_timestamp(),
             wheb_usuario_pck.get_nm_usuario);

      end loop;
      close c_dashboard;
   end if;
   --
   commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE dar_duplicar_app (nr_sequencia_p dar_app.nr_sequencia%type, nm_usuario_p dar_app.nm_usuario_nrec%type) FROM PUBLIC;

