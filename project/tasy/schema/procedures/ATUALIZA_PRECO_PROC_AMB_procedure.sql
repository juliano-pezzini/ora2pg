-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualiza_preco_proc_amb ( nr_sequencia_p bigint, nm_usuario_p text) AS $body$
DECLARE


dt_atualizacao_w			timestamp		:= clock_timestamp();
dt_conta_w                		timestamp		:= clock_timestamp();
dt_conta_definitiva_w		timestamp;
dt_preco_w                		timestamp		:= clock_timestamp();
dt_acerto_conta_w         		timestamp;
vl_conta_partic_w			double precision 	:= 0;
vl_total_partic_w   			double precision 	:= 0;
vl_custo_operacional_w    		double precision 	:= 0;
vl_procedimento_w         		double precision 	:= 0;
vl_proced_glosa_w         		double precision 	:= 0;
vl_anestesista_w          		double precision 	:= 0;
vl_medico_w               		double precision 	:= 0;
vl_medico_original_w		double precision 	:= 0;
vl_medico_conta_w         		double precision 	:= 0;
cd_edicao_amb_ww		integer;
dt_inicio_vigencia_w		timestamp;
vl_materiais_w            		double precision 	:= 0;
vl_auxiliares_w           		double precision 	:= 0;
vl_proc_orig_w            		double precision 	:= 0;
vl_custo_oper_orig_w    		double precision 	:= 0;
vl_anestesista_orig_w      		double precision 	:= 0;
vl_medico_orig_w           		double precision 	:= 0;
vl_materiais_orig_w        		double precision 	:= 0;
vl_auxiliares_orig_w       		double precision 	:= 0;
cd_convenio_orig_w         		integer    	:= 0;
cd_categoria_orig_w		varchar(20);
cd_convenio_w             		integer    	:= 0;
cd_categoria_w            		varchar(10);
cd_medico_executor_w      		varchar(10);
nr_seq_proc_princ_w          		bigint;
ie_vinculo_medico_w       		smallint    	:= 0;
nr_cirurgia_w			bigint   	:= 0;
tx_medico_w               		double precision 	:= 1;
tx_medico_ww               		procedimento_paciente.tx_medico%type;
qt_procedimento_w         		double precision 	:= 0;
cd_estabelecimento_w      		smallint  	:= 0;
cd_estab_atend_w      		smallint  	:= 0;
cd_estab_conta_w	      		smallint  	:= 0;
cd_estab_setor_w	      		smallint  	:= 0;
cd_conta_contabil_w        		varchar(20);
cd_centro_custo_w      		bigint   	:= 0;
ie_origem_proced_w        		bigint    	:= 0;
tx_procedimento_w         		double precision 	:= 100;
tx_custo_operacional_w		double precision	:= 100;
tx_custo_operacional_ww		procedimento_paciente.tx_custo_oper_qt%type;
cd_setor_atendimento_w    		integer  	:= 0;

dt_entrada_w         	  		timestamp;
dt_alta_w         	  		timestamp;
dt_altap_w         	  		timestamp;
ie_tipo_atendimento_w     		smallint    	:= 0;
qt_autorizada_w           		double precision 	:= 0;
qt_utilizada_w            		double precision 	:= 0;
cd_situacao_glosa_w       		smallint	   	:= 0;
cd_situacao_glosa_ww       		smallint	   	:= 0;
ie_glosa_w            	  		varchar(1);
cd_senha_w                		varchar(20);
cd_autorizacao_w          		varchar(20);
nm_responsavel_w          		varchar(40);
ie_tipo_convenio_w        		smallint    	:= 0;
ie_valor_informado_w      		varchar(1);
nr_seq_autorizacao_w      		bigint;
nr_interno_conta_w			bigint;
cd_convenio_calculo_w     		integer;
cd_categoria_calculo_w    		varchar(10);
nr_atendimento_w	  		atendimento_paciente.nr_atendimento%type;
cd_procedimento_w		bigint;
dt_procedimento_w	  		timestamp;
cd_proc_resultante_w		bigint		:= 0;
tx_proc_resultante_w		double precision		:= 0;
ie_criterio_taxa_w			smallint		:= 0;
nr_prescricao_w			bigint		:= 0;
nr_doc_convenio_w             		varchar(20);
ie_guia_informada_w           		varchar(01);
ie_emite_conta_w           		varchar(3);
ie_emite_conta_honor_w        		varchar(3);
ie_classif_convenio_w        		varchar(03);
tx_adic_medico_w    		double precision		:= 1;
tx_adic_anestesista_w 		double precision		:= 1;
tx_adic_auxiliares_w 		double precision		:= 1;
tx_adic_custo_operacional_w		double precision		:= 1;
tx_adic_materiais_w 		double precision		:= 1;
tx_adic_procedimento_w		double precision		:= 1;
vl_adic_proc_w			double precision		:= 0;
vl_adic_medico_w			double precision		:= 0;
nr_seq_adic_w			bigint;
nr_seq_partic_w			bigint;
vl_participante_w			double precision	:= 0;
vl_anestesista_partic_w		double precision	:= 0;
vl_medico_partic_w			double precision	:= 0;
qt_ponto_sus_w			smallint		:= 0;
nr_atend_original_w			atendimento_paciente.nr_atendimento%type		:= 0;
ie_glosa_zerado_w			varchar(1)		:= 'N';
nr_seq_regra_preco_w		bigint;
nr_lote_contabil_w        		bigint  	:= 0;
cd_tipo_acomodacao_w      		smallint;
cd_regra_honorario_w		varchar(5);
ie_conta_honorario_w		varchar(1);
ie_calcula_honorario_w		varchar(1)		:= 'S';
cd_cgc_honorario_w		varchar(14);
cd_cgc_prestador_w		varchar(14);
cd_pessoa_honorario_w		varchar(10);
cd_estrutura_w			integer 		:= 0;
cd_estrutura_honor_w		integer 		:= 0;
vl_pto_custo_operac_w       		double precision 	:= 0;
vl_pto_procedimento_w       		double precision 	:= 0;
vl_pto_anestesista_w        		double precision 	:= 0;
nr_auxiliares_w			smallint;
nr_auxiliares_ww			smallint	:= 0;
nr_aux_w				smallint;
vl_pto_medico_w             		double precision 	:= 0;
vl_pto_auxiliares_w         		double precision 	:= 0;
vl_pto_materiais_w          		double precision 	:= 0;
ie_emite_conta_part_w       		varchar(3);
cd_regra_honor_part_w		varchar(5);
cd_regra_honor_temp_w		varchar(5);
vl_original_part_w			double precision	:= 0;
ie_tipo_funcao_w			varchar(01);
tx_retorno_w          			double precision 	:= 1;
ie_funcao_medico_w		varchar(10);
cd_medico_partic_w		varchar(10);
ie_funcao_partic_w			varchar(10);
cd_edicao_amb_w			integer	 	:= 0;
qt_porte_anestesico_w		smallint	 	:= 0;
tx_hora_extra_w    			double precision		:= 0;
pr_participante_w			double precision		:= 0;
cd_especialidade_medica_w		integer		:= 0;
cd_regra_honorario_orig_w		varchar(5);
ie_aplica_taxa_filme_w		varchar(01)		:= 'N';
ie_regra_filme_w			varchar(01)		:= 'P';
ie_clinica_w			integer;
nr_seq_grupo_rec_w		bigint;
cd_motivo_exc_conta_w		smallint;
pr_faturar_participante_w		double precision;
pr_faturar_propaci_w		double precision;
cd_medico_convenio_w		varchar(15);
cd_partic_convenio_w		varchar(15);
nr_seq_criterio_w			bigint;
pr_glosa_w			double precision;
vl_glosa_w			double precision;
ie_anestesita_w			varchar(01);
ie_medico_w			varchar(01);
ie_auxiliar_w			varchar(01);
ie_carater_cirurgia_w		varchar(01);
ie_carater_cir_proc_w		varchar(01);
ds_log_w				varchar(2000);

cd_estab_terceiro_w      		smallint;
qt_reg_estab_terc_w      		bigint;
cd_grupo_proc_w			bigint;
cd_area_procedimento_w		bigint;
cd_especialidade_w		bigint;
qt_idade_w			bigint;
nr_seq_proc_interno_w		bigint;
nr_seq_exame_w			bigint;
ie_valor_informado_partic_w		varchar(2);
ie_alterado_perc_partic_w		varchar(1);
dt_atualizacao_proc_w		timestamp;
dt_atualizacao_partic_w		timestamp;
ie_especial_proc_exec_w		varchar(01);

cd_usuario_convenio_w		varchar(40);
cd_plano_w			varchar(40);
cd_empresa_ref_w			bigint;
ie_carater_inter_sus_w		varchar(2);
cd_motivo_exc_conta_ww		bigint;
ie_gerar_resp_credito_w		varchar(2);
nr_seq_pq_proc_w			bigint;
ie_estabelecimento_conta_w		varchar(01);

ie_preco_informado_glosa_w		varchar(01);
vl_negociado_glosa_w		double precision;
pr_ajuste_w			double precision  := 0;
vl_soma_proc_w			double precision := 0;
ie_preco_inf_glosa_proc_w		varchar(01);
nr_atend_conta_w			atendimento_paciente.nr_atendimento%type;
qt_conta_guia_w			bigint;
qt_dia_fim_conta_w			bigint;
ie_gerar_conta_periodo_w		varchar(01);
ie_gerar_conta_guia_dif_w		varchar(01);
cd_pessoa_fisica_w		varchar(10);
ie_sexo_w			varchar(01);
ie_preco_informado_w		varchar(01);
ie_video_w			varchar(01);
ie_atend_retorno_w			varchar(01);
nr_seq_proc_pacote_w		bigint;
ie_pacote_w			varchar(1)	:= 'A';
ie_calculo_taxa_regra_w		varchar(01)	:= 'C';
ie_codigo_convenio_w		varchar(03);
cd_cgc_partic_w			varchar(14);
qt_dias_internacao_w		bigint;
ie_manter_zerado_edicao_w		varchar(01)	:= 'N';
qt_reg_preco_w			bigint;
nr_sequencia_prescricao_w		bigint;
ie_cobra_paciente_w		varchar(01);
ie_integracao_w			varchar(01);

nr_seq_w				bigint;

cd_proced_calculo_horario_w		bigint;
ie_origem_proced_horario_w		bigint;

vl_custo_oper_horario_w 		double precision;
vl_anest_horario_w 			double precision;
vl_medico_horario_w 		double precision;
vl_auxiliares_horario_w 		double precision;
vl_materiais_horario_w 		double precision;
vl_procedimento_horario_w		double precision;

dt_entrada_unidade_w		timestamp;
nr_seq_atepacu_w			bigint;

cd_convenio_parametro_w		bigint;
cd_categoria_parametro_w		varchar(10);
ie_conv_calculo_honorario_w		varchar(01);
cd_estab_honorario_w		bigint;
ie_estab_regra_honorario_w		varchar(01);
ie_autor_particular_w		varchar(1);
nr_seq_autor_gerada_w		bigint;
ie_tipo_convenio_aux_w		smallint;
ie_tipo_convenio_aux2_w		smallint;
nr_seq_honorario_w		bigint;
cd_convenio_glosa_ww		integer;
cd_categoria_glosa_ww		varchar(10);
nr_seq_ajuste_proc_ww		bigint;
ie_partic_resp_cred_w		varchar(01);
vl_auxiliar_partic_w			double precision	:= 0;
nr_seq_proc_calc_w		bigint;
ie_valor_inf_desconto_w		varchar(01);
ie_valor_inf_pacote_w		varchar(01);

ie_doc_autorizacao_w		varchar(2)	:= 'N';
nr_sequencia_autor_w		bigint;
nr_seq_proc_autor_w		bigint;
nr_seq_proc_autor_ww		bigint;
nr_seq_mat_autor_w		bigint;
nr_doc_conv_autor_w		varchar(20);
cd_senha_autor_w			varchar(20);
ie_autorizado_w			varchar(1);
ie_exclui_partic_cir_zerado_w		varchar(1);

nr_cirurgia_partic_w			bigint;
ie_aux_cbhpm_porte_cir_w		varchar(01);
ie_aux_amb_porte_cir_w		varchar(01);
qt_part_w				bigint;

ie_origem_proced_edicao_w		bigint;
qt_reg_w				bigint;

ie_manter_pacote_zerado_w		varchar(01);
ie_calc_partic_ipsemg_w		varchar(01);

cd_proc_referencia_w		bigint;
ie_origem_proc_refer_w		bigint;
qt_proc_ref_w			bigint;
ie_auditoria_w			varchar(2);
vl_anestesista_ww			double precision;
vl_auxiliares_ww			double precision;
ie_convenio_conta_param_w		varchar(1);
ie_atualiza_func_medico_w		varchar(2);
tx_ajuste_w			double precision;
ie_vigencia_aux_cbhpm_w		varchar(1);
nr_auxiliares_neg_w		double precision;
ie_converte_proc_conv_w		varchar(1);
cd_setor_w			integer;
cd_proced_convertido_w		bigint;
ie_origem_proced_convert_w		bigint;
ds_erro_w			varchar(500);
dt_final_cirurgia_w			timestamp;
dt_inicio_cirurgia_w			timestamp;
ie_lado_w			varchar(10);
nr_seq_conta_origem_w		bigint;
ie_define_ch_crit_hor_w		varchar(2);
ie_grava_guia_conta_w		varchar(1);
ie_guia_w			varchar(10);
IE_GRAU_PARTIC_TISS_w		varchar(2);
ie_status_acerto_w			smallint;
ie_entra_conta_w			varchar(1);
ie_calcula_valor_w			varchar(1);
cd_estab_logado_w		smallint;
vl_filme_incidencia_w		double precision;

ie_tipo_rounded_w			varchar(1);
ie_regra_arredondamento_tx_w	varchar(1):= 'N';
ie_regra_arred_IPE_w		varchar(1):= 'N';
ie_altera_guia_w			varchar(1):= 'N';

tx_proc_original_w			double precision;
ie_tx_proc_informado_w		varchar(1):= 'N';
ie_taxa_via_acesso_w		varchar(1):= 'N';
IE_GASTOS_RN_ALTA_w		varchar(1):= 'N';
ie_regra_pacote_ctb_w		varchar(1) := 'N';
nr_dias_gastos_rn_w		bigint:= 0;
ie_dias_gastos_rn_w		varchar(1):= 'N';
ie_trat_conta_rn_w			varchar(15);
ie_trat_conta_rn_ww			varchar(15);
ie_ordem_converte_proc_w		varchar(2):= 'EP';
ie_executar_leito_w			varchar(1):= 'A';
vl_filme_original_w			double precision 	:= 0;

cd_classif_setor_rn_w		varchar(2);
cd_classif_setor_w			varchar(2);
ie_classif_gastos_rn_w		varchar(1):= 'S';
ie_spect_w   			varchar(1);
cd_procedimento_tuss_w		bigint;

tx_anestesista_w			double precision;
tx_anestesista_ww			procedimento_paciente.tx_anestesia%type;
tx_auxiliar_w			double precision;

ie_regra_tipo_atend_w		varchar(1):= 'A';
ie_gravar_log_w			varchar(1):= 'N';
ds_regra_w			varchar(80);

vl_tx_desconto_w			double precision;
vl_tx_adm_w			double precision;
tx_adm_w			double precision;
tx_desconto_w			double precision;
vl_proc_w			double precision;
vl_proc_original_w			double precision;
tx_ajuste_regra_w			double precision;

ie_status_acerto_conta_w		smallint:= 1;

cd_funcao_w			integer;
nr_seq_classif_medico_w		bigint;
ie_separa_partic_adic_hor_w		varchar(1);

cd_equipamento_w			bigint;
dt_agenda_integrada_w		timestamp;
cd_setor_paciente_w		integer;

ie_adic_hor_partic_w		varchar(1) := 'N';
nr_seq_tipo_acidente_w		bigint;

ie_reaplica_regra_conta_terc_w	varchar(1);
nr_seq_proc_orig_w		bigint;
ie_duplica_proc_pacote_estab_w	varchar(1):= 'N';
ie_data_adic_hor_w		varchar(1):= 'N';
dt_adic_hor_w			timestamp;
cd_procedencia_w			integer;
ie_regra_data_preco_w		varchar(1) := 'N';
ie_verifica_glosa_w			varchar(1) := 'N';
ie_valor_filme_apos_adic_hor_w	varchar(15) := 'N';
ie_aplicar_tx_co_cbhpm_w		varchar(15) := 'N';
cd_categoria_teste_log_w		varchar(20);
ie_data_proc_dias_int_w		varchar(1);
qt_conv_glosa_w			bigint;
ie_divide_vl_medico_glosa_w		varchar(15) := 'N';
ie_doc_executor_w			smallint;
ie_estab_regra_crit_hor_w		varchar(1)	:= 'C';
cd_estab_adic_horario_w		bigint;
ie_ignora_ajuste_w			varchar(1) := 'N';
ie_regra_rn_item_w			varchar(1);
dt_entrada_original_w		timestamp;
ie_transf_gasto_nr_w		varchar(1);
ie_arred_so_glosa_perc_w		varchar(15) := 'N';
cd_cbo_w			varchar(06);
ie_aplica_qt_proc_calc_w	varchar(1) := 'N';
ie_tiss_tipo_guia_w			varchar(5);
ie_tipo_setor_classif_rn_w	varchar(1);
qt_conta_w			bigint;
dt_periodo_inicial_w			timestamp;
dt_periodo_final_w			timestamp;
ie_repassa_medico_w		varchar(20);
ie_tipo_regra_data_preco_w		varchar(1);
nr_doc_conv_proc_calc_w             		varchar(20);
cd_setor_atend_prescr_w    		integer  	:= 0;
nr_seq_cobertura_w		bigint;
ie_resp_credito_proc_princ_w	varchar(5);
ie_resp_cred_glosa_perc_w	varchar(1);
ie_ordem_arred_serv_w		varchar(02):= 'MA';
ie_aux_maior_aux_cir_w		varchar(1);
nr_seq_classif_atend_w		bigint;
nr_seq_proc_interno_aux_w	bigint;
ie_tx_partic_valor_negoc_w	varchar(1):= 'N';
nr_seq_material_w		bigint;
cd_material_exame_w		varchar(20);
ie_calcular_proc_auditado_w	varchar(1);
ie_altera_auditoria_w		varchar(1);
ie_data_vig_cbhpm_w		varchar(1);
ie_prioridade_edicao_w		varchar(1);
nr_seq_cbhpm_edicao_w		bigint;
cd_edicao_amb_cbhpm_w		integer;
vl_ch_honorarios_w		double precision;
vl_ch_custo_oper_w		double precision;
vl_m2_filme_w			double precision;
dt_inicio_vig_w			timestamp;
tx_ajuste_geral_w		double precision;
dt_vigencia_cbhpm_w		timestamp;
ie_glosa_proc_zerado_sus_w	varchar(1):= 'S';
qt_item_conta_w			bigint;
nr_seq_cor_exec_w		bigint;
nr_seq_crit_honorario_w		bigint;
ie_aplicar_tx_co_cbhpm_ww	varchar(1);
qt_existe_repasse_w		bigint;
cd_dependente_w			smallint;
dt_alta_preco_w			timestamp;
nr_seq_regra_fluxo_w		bigint;
qt_regra_fluxo_w		bigint;
nr_seq_ajuste_proc_def_w	bigint;
ie_calc_vlpartic_iamspe_w	parametro_faturamento.ie_calc_vlpartic_iamspe%type := 'S';
vl_anest_ipsemg_w		double precision	:= 0;
ie_calc_vl_aux_conv_w		convenio_estabelecimento.ie_calc_vl_aux_conv%type := 'S';
nr_seq_origem_w			atend_categoria_convenio.nr_seq_origem%type;
nr_seq_regra_filme_w		convenio_regra_filme.nr_sequencia%type;
ie_especialidade_proc_w		convenio_regra_filme.ie_especialidade_proc%type;
cd_espec_medica_filme_w		procedimento_paciente.cd_especialidade%type;
cd_tipo_acomod_unid_w		tipo_acomodacao.cd_tipo_acomodacao%type;
ie_item_fora_periodo_w		varchar(1):='N';
ie_atualiza_guia_w 		varchar(1);
ie_atualiza_senha_w 		varchar(1);
ie_autor_qtde_w 		varchar(1);
ie_preco_custo_w		categoria_convenio.ie_preco_custo%type;
ds_nls_territory_w		varchar(64);
cd_mat_item_ref_w		regra_ajuste_item_ref.cd_material%type;
cd_proc_item_ref_w		regra_ajuste_item_ref.cd_procedimento%type;
ie_origem_proc_item_ref_w	regra_ajuste_item_ref.ie_origem_proced%type;
qt_reg_ajuste_item_ref_w	bigint;
ie_complexidade_sus_w		varchar(20);
ie_tipo_financ_sus_w		varchar(20);
ds_proc_tuss_w			procedimento_paciente.ds_proc_tuss%type;
nr_seq_tuss_item_w		procedimento_paciente.nr_seq_tuss_item%type;
ie_tuss_exam_proc_int_w		parametro_faturamento.ie_tuss_exam_proc_int%type:='N';
vl_tot_anes_ipsemg_w	   	double precision 	:= 0;
nr_seq_complexidade_w		proced_proc_complex.nr_sequencia%type;
tx_ajuste_complex_w		proced_proc_complex.tx_ajuste%type;
ie_agrupa_conta_case_w		varchar(5);
qt_pontos_w			preco_amb.qt_pontuacao%type;
nr_seq_regra_qtde_exec_w	procedimento_paciente.nr_seq_regra_qtde_exec%type;
vl_tot_prim_aux_w		double precision	:= 0;
ie_regra_valor_w            	convenio_regra_qtde.ie_regra_valor%type;
ie_doc_convenio_w		varchar(3);
ie_via_acesso_w			convenio_regra_qtde.ie_via_acesso%type;
vl_drg_w			procedimento_paciente.vl_procedimento%type := 0;
ie_drg_item_w			varchar(2) := 'N';
ie_drg_procedure_w		varchar(2)	:= 'N';
nr_sequencia_regra_w		regra_conta_terceiro.nr_sequencia%type := 0;
ie_identifica_conta_proc_w	varchar(1);
nr_seq_proc_interno_1_w		procedimento_paciente.nr_seq_proc_interno%type;
cd_sequencia_parametro_w	parametros_conta_contabil.cd_sequencia_parametro%type;
cd_sequencia_parametro_ww	parametros_conta_contabil.cd_sequencia_parametro%type;
ds_nao_informado_w		varchar(20);
nr_seq_prescr_proc_inf_w	prescr_proced_inf_adic.nr_sequencia%type;
vl_copart_prescr_w		prescr_proced_inf_adic.vl_coparticipacao%type;
qt_copart_prescr_w		bigint;
ie_utiliza_wint_w		convenio_estabelecimento.ie_utiliza_wint%type;

c01 CURSOR FOR
SELECT		b.nr_seq_partic,
		b.cd_pessoa_fisica,
		b.ie_funcao,
		coalesce(b.pr_faturar,a.tx_procedimento),
		a.tx_procedimento,
		vl_medico_partic_w,
		c.ie_anestesista,
		c.ie_medico,
		c.ie_auxiliar,
		coalesce(b.cd_medico_convenio,
		substr(obter_medico_convenio(cd_estabelecimento_w, b.cd_pessoa_fisica,a.cd_convenio, null, a.cd_especialidade, null, a.cd_setor_atendimento,
		dt_procedimento_w, ie_tipo_atendimento_w, b.ie_funcao, ie_carater_inter_sus_w),1,15)),
		b.ie_valor_informado,
		a.dt_atualizacao,
		b.dt_atualizacao,
		a.nr_seq_pq_proc,
		vl_auxiliar_partic_w,
		b.nr_cirurgia,
		vl_anestesista_partic_w
from		funcao_medico c,
		procedimento_paciente a,
		procedimento_participante b
where		b.nr_sequencia		= nr_sequencia_p
and		b.nr_sequencia		= a.nr_sequencia
  and		b.ie_funcao		= c.cd_funcao
  and 		ie_valor_informado_w	= 'N'
order by	ie_anestesista,
		ie_medico,
		ie_auxiliar,
		b.nr_seq_partic;

c02 CURSOR FOR
SELECT		b.nr_seq_partic,
		b.cd_pessoa_fisica,
		b.ie_funcao,
		coalesce(b.pr_faturar,a.tx_procedimento),
		a.tx_procedimento,
		vl_medico_partic_w,
		c.ie_anestesista,
		c.ie_medico,
		c.ie_auxiliar,
		coalesce(b.cd_medico_convenio,
		substr(obter_medico_convenio(cd_estabelecimento_w, b.cd_pessoa_fisica,a.cd_convenio,null, a.cd_especialidade, null, a.cd_setor_atendimento,dt_procedimento_w,
			ie_tipo_atendimento_w, b.ie_funcao, ie_carater_inter_sus_w),1,15)),
		b.ie_valor_informado,
		a.dt_atualizacao,
		b.dt_atualizacao,
		a.nr_seq_pq_proc,
		vl_auxiliar_partic_w,
		b.nr_cirurgia,
		c.IE_GRAU_PARTIC_TISS
from		funcao_medico c,
		procedimento_paciente a,
		procedimento_participante b
where		b.nr_sequencia		= nr_sequencia_p
and		b.nr_sequencia		= a.nr_sequencia
  and		b.ie_funcao		= c.cd_funcao
  and 		ie_valor_informado_w	= 'N'
order by	ie_anestesista desc,
		c.IE_GRAU_PARTIC_TISS,
		ie_medico,
		ie_auxiliar,
		b.nr_seq_partic;



c03 CURSOR FOR
	SELECT	nr_sequencia
	from	procedimento_paciente p,
		conta_paciente c
	where	p.nr_interno_conta	= c.nr_interno_conta
	and	c.ie_status_acerto	= 1
	and	p.nr_seq_proc_princ	= nr_sequencia_p
	and	p.cd_procedimento	= cd_proced_calculo_horario_w
	and	p.ie_origem_proced	= ie_origem_proced_horario_w
	and	p.nr_seq_cor_exec	= 718;

C04 CURSOR FOR
	SELECT
	nr_sequencia, nr_seq_partic, ie_funcao,
	dt_atualizacao, nm_usuario, cd_pessoa_fisica,
	cd_cgc, ie_valor_informado, ie_emite_conta,
	vl_participante, vl_conta, nr_lote_contabil,
	nr_conta_medico, ie_tipo_servico_sus, ie_tipo_ato_sus,
	qt_ponto_sus, vl_ponto_sus, vl_original,
	ie_responsavel_credito, pr_procedimento, cd_especialidade,
	pr_faturar, cd_medico_convenio, nr_doc_honor_conv,
	nr_seq_proc_crit_repasse, ie_tiss_tipo_guia, nr_cirurgia,
	cd_cbo, ie_doc_executor, ie_participou_sus,
	cd_medico_exec_tiss, cd_cgc_prestador_tiss, ds_proc_tiss,
	ds_prestador_tiss, cd_prestador_tiss, cd_proc_conv,
	ds_proc_conv, cd_cgc_prest_solic_tiss, vl_repasse_calc
	from 	procedimento_participante
	where	nr_sequencia = nr_sequencia_p
	order by	nr_sequencia, nr_seq_partic;
	
C05 CURSOR FOR
	SELECT	cd_material,
		cd_procedimento,
		ie_origem_proced
	from	regra_ajuste_item_ref
	where	nr_seq_regra_ajuste_proc = nr_seq_ajuste_proc_ww
	and	ie_situacao = 'A';

c04_w	c04%rowtype;


BEGIN

/* obter o registro do procedimento do paciente */

begin
select 		cd_convenio,
       		cd_categoria,
       		cd_medico_executor,
       		coalesce(nr_cirurgia,0),
			tx_custo_oper_qt,
       		tx_medico,
       		tx_anestesia,
       		qt_procedimento,
       		coalesce(dt_conta, coalesce(dt_prescricao,dt_procedimento)),
       		coalesce(vl_procedimento,0),
		ie_origem_proced,
		tx_procedimento,
		cd_setor_atendimento,
	      	dt_acerto_conta,
		coalesce(ie_valor_informado,'N'),
		nr_seq_autorizacao,
		nr_interno_conta,
		nr_atendimento,
		cd_procedimento,
		dt_procedimento,
		coalesce(nr_prescricao,0),
		coalesce(nr_seq_proc_princ, 0),
		coalesce(nr_doc_convenio,''),
		coalesce(ie_guia_informada,'N'),
		coalesce(vl_custo_operacional,0),
		coalesce(vl_anestesista,0),
		coalesce(vl_medico,0),
		coalesce(vl_materiais,0),
		coalesce(vl_auxiliares,0),
		ie_emite_conta,
		ie_emite_conta_honor,
	 	coalesce(nr_lote_contabil,0),
		cd_convenio,
		cd_categoria,
		ie_funcao_medico,
		cd_especialidade,
		ie_responsavel_credito,
		cd_motivo_exc_conta,
		cd_cgc_prestador,
		coalesce(cd_medico_convenio,
		substr(obter_medico_convenio(cd_estabelecimento_w, cd_medico_executor,cd_convenio, null, cd_especialidade, null, cd_setor_atendimento,dt_procedimento,
			null,ie_funcao_medico,null),1,15)),
		nr_seq_exame,
		nr_seq_proc_interno,
		nr_seq_pq_proc,
		ie_video,
		nr_seq_proc_pacote,
		nr_sequencia_prescricao,
		ie_integracao,
		nr_seq_atepacu,
		dt_entrada_unidade,
		cd_senha,
		ie_auditoria,
		nr_seq_conta_origem,
		tx_procedimento,
		ie_spect,
		coalesce(cd_funcao,0),
		cd_equipamento,
		cd_setor_paciente,
		nr_seq_proc_orig,
		coalesce(cd_situacao_glosa,0),
		ie_doc_executor,
		ie_trat_conta_rn,
		cd_cbo,
		ie_tiss_tipo_guia,
		nr_seq_material,
		nr_seq_proc_autor,
		nr_seq_cor_exec,
		ie_carater_cirurgia,
		nr_seq_proc_interno
into STRICT
       		cd_convenio_w,
       		cd_categoria_w,
       		cd_medico_executor_w,
       		nr_cirurgia_w,
			tx_custo_operacional_w,
       		tx_medico_w,
       		tx_anestesista_w,
       		qt_procedimento_w,
       		dt_conta_w,
       		vl_proc_orig_w,
		ie_origem_proced_w,
		tx_procedimento_w,
		cd_setor_atendimento_w,
	      	dt_acerto_conta_w,
		ie_valor_informado_w,
		nr_seq_autorizacao_w,
		nr_interno_conta_w,
		nr_atendimento_w,
		cd_procedimento_w,
		dt_procedimento_w,
		nr_prescricao_w,
		nr_seq_proc_princ_w,
		nr_doc_convenio_w,
		ie_guia_informada_w,
		vl_custo_oper_orig_w,
		vl_anestesista_orig_w,
		vl_medico_orig_w,
		vl_materiais_orig_w,
		vl_auxiliares_orig_w,
		ie_emite_conta_w,
		ie_emite_conta_honor_w,
     		nr_lote_contabil_w,
		cd_convenio_orig_w,
		cd_categoria_orig_w,
		ie_funcao_medico_w,
		cd_especialidade_medica_w,
		cd_regra_honorario_orig_w,
		cd_motivo_exc_conta_w,
		cd_cgc_prestador_w,
		cd_medico_convenio_w,
		nr_seq_exame_w,
		nr_seq_proc_interno_w,
		nr_seq_pq_proc_w,
		ie_video_w,
		nr_seq_proc_pacote_w,
		nr_sequencia_prescricao_w,
		ie_integracao_w,
		nr_seq_atepacu_w,
		dt_entrada_unidade_w,
		cd_senha_w,
		ie_auditoria_w,
		nr_seq_conta_origem_w,
		tx_proc_original_w,
		ie_spect_w,
		cd_funcao_w,
		cd_equipamento_w,
		cd_setor_paciente_w,
		nr_seq_proc_orig_w,
		cd_situacao_glosa_ww,
		ie_doc_executor_w,
		ie_trat_conta_rn_ww,
		cd_cbo_w,
		ie_tiss_tipo_guia_w,
		nr_seq_material_w,
		nr_seq_proc_autor_ww,
		nr_seq_cor_exec_w,
		ie_carater_cir_proc_w,
		nr_seq_proc_interno_1_w
from 		procedimento_paciente
where 	nr_sequencia	= nr_sequencia_p;

end;

select	coalesce(max(ie_preco_custo), 'N')
into STRICT	ie_preco_custo_w
from	categoria_convenio
where	cd_convenio = cd_convenio_w
and	cd_categoria = cd_categoria_w;

if (obter_funcao_ativa = 67) and (coalesce(obter_valor_param_usuario(67, 637, obter_perfil_ativo, nm_usuario_p, 0), 'S') = 'N') then
	
	select	count(*)
	into STRICT	qt_existe_repasse_w
	from	procedimento_repasse
	where	nr_seq_procedimento = nr_sequencia_p;
	
	if (qt_existe_repasse_w <> 0) then
		goto final;
	end if;
end if;

select	coalesce(max(cd_tipo_acomodacao),0)
into STRICT	cd_tipo_acomod_unid_w
from 	atend_paciente_unidade a
where	a.nr_atendimento = nr_atendimento_w
and	nr_seq_interno = nr_seq_atepacu_w;

begin
select 	a.cd_estabelecimento
into STRICT  	cd_estabelecimento_w
from 	pessoa_fisica b,
	atendimento_paciente a
where 	a.nr_atendimento     	= nr_atendimento_w
and	a.cd_pessoa_fisica	= b.cd_pessoa_fisica;
exception
    	when others then
      	cd_estabelecimento_w := 1;
end;

begin
select	nr_seq_classif_medico,
	nr_seq_tipo_acidente
into STRICT	nr_seq_classif_medico_w,
	nr_seq_tipo_acidente_w
from	atendimento_paciente
where 	nr_atendimento     	= nr_atendimento_w;
exception
    	when others then
	nr_seq_classif_medico_w:=null;
end;

select 	coalesce(max(IE_GASTOS_RN_ALTA),'N'),
	coalesce(max(cd_classif_setor_rn),0),
	coalesce(max(ie_data_adic_hor),'N'),
	coalesce(max(ie_aplicar_tx_co_cbhpm),'N'),
	coalesce(max(ie_regra_rn_item),'S'),
	coalesce(max(ie_tipo_setor_classif_rn),'I'),
	coalesce(max(ie_resp_cred_glosa_perc),'N'),
	coalesce(max(ie_glosa_proc_zerado_sus),'S'),
	coalesce(max(ie_calc_vlpartic_iamspe),'S'),
	coalesce(max(ie_tuss_exam_proc_int),'N'),
	coalesce(max(ie_agrupa_conta_case),'N')
into STRICT	IE_GASTOS_RN_ALTA_w,
	cd_classif_setor_rn_w,
	ie_data_adic_hor_w,
	ie_aplicar_tx_co_cbhpm_w,
	ie_regra_rn_item_w,
	ie_tipo_setor_classif_rn_w,
	ie_resp_cred_glosa_perc_w,
	ie_glosa_proc_zerado_sus_w,
	ie_calc_vlpartic_iamspe_w,
	ie_tuss_exam_proc_int_w,
	ie_agrupa_conta_case_w
from 	parametro_faturamento
where 	cd_estabelecimento = cd_estabelecimento_w;

select 	coalesce(max(nr_dias_gastos_rn),0),
	coalesce(max(ie_divide_vl_med_conv_glosa),'N'),
	coalesce(max(ie_aplicar_tx_co_cbhpm),'N'),
	coalesce(max(ie_calc_vl_aux_conv),'S'),
	coalesce(max(qt_dia_fim_conta), 0),
	max(ie_doc_convenio),
	coalesce(max(ie_utiliza_wint),'N')
into STRICT	nr_dias_gastos_rn_w,
	ie_divide_vl_medico_glosa_w,
	ie_aplicar_tx_co_cbhpm_ww,
	ie_calc_vl_aux_conv_w,
	qt_dia_fim_conta_w,
	ie_doc_convenio_w,
	ie_utiliza_wint_w
from	convenio_estabelecimento
where	cd_convenio		= cd_convenio_w
and	cd_estabelecimento	= cd_estabelecimento_w;

if (ie_aplicar_tx_co_cbhpm_w = 'R') then
	if (ie_aplicar_tx_co_cbhpm_ww = 'S') then
		ie_aplicar_tx_co_cbhpm_w := 'S';
	else
		ie_aplicar_tx_co_cbhpm_w := 'N';
	end if;
end if;
	

if (nr_dias_gastos_rn_w = 0 ) then

	select 	coalesce(max(nr_dias_gastos_rn),0)
	into STRICT	nr_dias_gastos_rn_w
	from 	parametro_faturamento
	where 	cd_estabelecimento = cd_estabelecimento_w;

end if;

select 	coalesce(max(cd_classif_setor),0)
into STRICT	cd_classif_setor_w
from 	setor_atendimento
where 	cd_setor_atendimento = cd_setor_atendimento_w;

if (ie_tipo_setor_classif_rn_w = 'P') then
	select 	coalesce(max(cd_classif_setor),0)
	into STRICT	cd_classif_setor_w
	from 	setor_atendimento
	where 	cd_setor_atendimento = cd_setor_paciente_w;
end if;

ie_dias_gastos_rn_w:= 'N';
ie_classif_gastos_rn_w	:= 'S';

ie_transf_gasto_nr_w := coalesce(Obter_valor_param_usuario(67, 500, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w),'N');


select 	max(dt_entrada),
	max(ie_trat_conta_rn)
into STRICT	dt_entrada_w,
	ie_trat_conta_rn_w
from 	atendimento_paciente
where	nr_atendimento = nr_atendimento_w;

if (coalesce(ie_trat_conta_rn_ww::text, '') = '') then
	ie_trat_conta_rn_ww := ie_trat_conta_rn_w;
end if;

if (nr_dias_gastos_rn_w > 0) and (ie_trat_conta_rn_w = obter_desc_expressao(962487)) and
	((dt_procedimento_w - dt_entrada_w) > nr_dias_gastos_rn_w) then
	ie_dias_gastos_rn_w:= 'S';
end if;

if (cd_classif_setor_rn_w > 0) and (ie_trat_conta_rn_w = obter_desc_expressao(962487)) then
	ie_classif_gastos_rn_w:= 'N';
	if (cd_classif_setor_rn_w = cd_classif_setor_w) then
		ie_classif_gastos_rn_w:= 'S';

	end if;
end if;

ie_status_acerto_conta_w:= 1;
begin
select	coalesce(max(ie_status_acerto),1)
into STRICT	ie_status_acerto_conta_w
from 	conta_paciente
where 	nr_interno_conta = nr_interno_conta_w;
exception
	when others then
	ie_status_acerto_conta_w:= 1;
end;
if (coalesce(ie_regra_rn_item_w,'S') = 'S') then
	begin
	select	CASE WHEN ie_trat_conta_rn=obter_desc_expressao(962487) THEN  nr_atendimento_mae  ELSE nr_atendimento_w END ,
		CASE WHEN ie_trat_conta_rn=obter_desc_expressao(962487) THEN  null  ELSE CASE WHEN ie_transf_gasto_nr_w='M' THEN null  ELSE nr_interno_conta_w END  END
	into STRICT	nr_atendimento_w,
		nr_interno_conta_w
	from	atendimento_paciente
	where	nr_atendimento		= nr_atendimento_w
	and 	ie_dias_gastos_rn_w	= 'N'	-- parametro de dias para deixar os gastos no atend do RN
	and 	ie_classif_gastos_rn_w  = 'S'   -- parametro da classificacao do setor do RN
	and	(ie_trat_conta_rn IS NOT NULL AND ie_trat_conta_rn::text <> '')
	and	CASE WHEN ie_trat_conta_rn=obter_desc_expressao(962487) THEN  obter_se_atendimento_fechado(nr_atendimento_mae)  ELSE 'N' END  = 'N'
	and 	ie_status_acerto_conta_w = 1
	and (obter_se_gastos_rn(cd_convenio_w, nr_atendimento_w, ie_trat_conta_rn, nr_seq_atepacu_w) = 'N') -- regra de setor para definicao dos gastos RN (OS  244366)
	and 	((IE_GASTOS_RN_ALTA_w = 'N') or
		((IE_GASTOS_RN_ALTA_w = 'S') and (ie_trat_conta_rn = obter_desc_expressao(962487)) and (obter_se_atendimento_alta(nr_atendimento_mae) = 'N')) or
		((IE_GASTOS_RN_ALTA_w = 'D') and (ie_trat_conta_rn = obter_desc_expressao(962487)) and (dt_procedimento_w <= coalesce(to_date(obter_dados_atendimento(nr_atendimento_mae,'DA'),'dd/mm/yyyy hh24:mi:ss'),dt_procedimento_w + 5))));
	exception
		 when others then
		if (IE_GASTOS_RN_ALTA_w = 'D') and (coalesce(nr_interno_conta_w,0) > 0) and (Obter_atendimento_conta(nr_interno_conta_w) <> nr_atendimento_w) then
			begin
			select	CASE WHEN ie_trat_conta_rn=obter_desc_expressao(962487) THEN  nr_atendimento_mae  ELSE Obter_atendimento_conta(nr_interno_conta_w) END ,
				CASE WHEN ie_trat_conta_rn=obter_desc_expressao(962487) THEN  null  ELSE CASE WHEN ie_transf_gasto_nr_w='M' THEN null  ELSE nr_interno_conta_w END  END
			into STRICT	nr_atendimento_w,
				nr_interno_conta_w
			from	atendimento_paciente
			where	nr_atendimento		= Obter_atendimento_conta(nr_interno_conta_w)
			and 	ie_dias_gastos_rn_w	= 'N'	-- parametro de dias para deixar os gastos no atend do RN
			and 	ie_classif_gastos_rn_w  = 'S'   -- parametro da classificacao do setor do RN
			and	(ie_trat_conta_rn IS NOT NULL AND ie_trat_conta_rn::text <> '')
			and	CASE WHEN ie_trat_conta_rn=obter_desc_expressao(962487) THEN  obter_se_atendimento_fechado(nr_atendimento_mae)  ELSE 'N' END  = 'N'
			and 	ie_status_acerto_conta_w = 1
			and (obter_se_gastos_rn(cd_convenio_w, nr_atendimento_w, ie_trat_conta_rn, nr_seq_atepacu_w) = 'N') -- regra de setor para definicao dos gastos RN (OS  244366)
			and 	((IE_GASTOS_RN_ALTA_w = 'N') or
				((IE_GASTOS_RN_ALTA_w = 'S') and (ie_trat_conta_rn = obter_desc_expressao(962487)) and (obter_se_atendimento_alta(nr_atendimento_mae) = 'N')) or
				((IE_GASTOS_RN_ALTA_w = 'D') and (ie_trat_conta_rn = obter_desc_expressao(962487)) and (dt_procedimento_w <= coalesce(to_date(obter_dados_atendimento(nr_atendimento_mae,'DA'),'dd/mm/yyyy hh24:mi:ss'),dt_procedimento_w + 5))));
			exception
			when others then
				nr_atendimento_w	:= nr_atendimento_w;
				if (ie_transf_gasto_nr_w = 'M') and (ie_status_acerto_conta_w = 1) and (ie_trat_conta_rn_ww IS NOT NULL AND ie_trat_conta_rn_ww::text <> '') then
					nr_interno_conta_w	:= null;
				else
					nr_interno_conta_w  := nr_interno_conta_w;
				end if;
			end;
		else
			nr_atendimento_w	:= nr_atendimento_w;
			if (ie_transf_gasto_nr_w = 'M') and (ie_status_acerto_conta_w = 1) and (ie_trat_conta_rn_ww IS NOT NULL AND ie_trat_conta_rn_ww::text <> '') then
				nr_interno_conta_w	:= null;
			else
				nr_interno_conta_w  := nr_interno_conta_w;
			end if;
		end if;
	end;
else
	begin
	select	count(*)
	into STRICT	qt_conta_w
	from	conta_paciente a,
		atendimento_paciente b
	where	a.nr_interno_conta 	= nr_interno_conta_w
	and	a.nr_atendimento	= b.nr_atendimento
	and	a.nr_atendimento	= nr_atendimento_w;

	select	CASE WHEN ie_trat_conta_rn_ww=obter_desc_expressao(962487) THEN  nr_atendimento_mae  ELSE nr_atendimento_w END ,
		CASE WHEN ie_trat_conta_rn_ww=obter_desc_expressao(962487) THEN  null  ELSE CASE WHEN qt_conta_w=1 THEN  nr_interno_conta_w  ELSE null END  END
	into STRICT	nr_atendimento_w,
		nr_interno_conta_w
	from	atendimento_paciente
	where	nr_atendimento		= nr_atendimento_w
	and	(ie_trat_conta_rn IS NOT NULL AND ie_trat_conta_rn::text <> '')
	and	CASE WHEN ie_trat_conta_rn=obter_desc_expressao(962487) THEN  obter_se_atendimento_fechado(nr_atendimento_mae)  ELSE 'N' END  = 'N'
	and 	ie_status_acerto_conta_w	= 1;
	exception
	when others then
			nr_atendimento_w	:= nr_atendimento_w;
			nr_interno_conta_w	:= nr_interno_conta_w;
	end;
end if;

ie_cobra_paciente_w	:= 'S';
ie_lado_w		:= 'A';

if (coalesce(nr_prescricao_w,0) > 0) and (coalesce(nr_seq_exame_w, 0) = 0)  then

	if (coalesce(ie_integracao_w,'N') <> 'S') then
		select	coalesce(obter_dados_prescr_proc_pragma(nr_prescricao_w, nr_sequencia_prescricao_w, 'C'),'S')
		into STRICT	ie_cobra_paciente_w
		;
	end if;

	select	coalesce(obter_dados_prescr_proc_pragma(nr_prescricao_w, nr_sequencia_prescricao_w, 'L'),'A')
	into STRICT	ie_lado_w
	;
end if;

select	ie_clinica,
	coalesce(obter_dado_atend_cat_conv(nr_atendimento_w, dt_conta_w, cd_convenio_w, cd_categoria_w, 'E'), obter_dado_atend_conv(nr_atendimento_w, dt_conta_w, cd_convenio_w, 'E')),
	coalesce(obter_dado_atend_cat_conv(nr_atendimento_w, dt_conta_w, cd_convenio_w, cd_categoria_w, 'P'), obter_dado_atend_conv(nr_atendimento_w, dt_conta_w, cd_convenio_w, 'P')),
	coalesce(obter_dado_atend_cat_conv(nr_atendimento_w, dt_conta_w, cd_convenio_w, cd_categoria_w, 'U'), obter_dado_atend_conv(nr_atendimento_w, dt_conta_w, cd_convenio_w, 'U')),
	cd_pessoa_fisica,
	CASE WHEN coalesce(nr_atend_original::text, '') = '' THEN  'N'  ELSE 'S' END  ie_atend_retorno,
	(obter_dados_categ_conv(nr_atendimento_w, 'COB'))::numeric ,
	nr_seq_classificacao,
	(obter_dados_categ_conv(nr_atendimento_w, 'DEP'))::numeric ,
	(obter_dados_categ_conv(nr_atendimento_w, 'OC'))::numeric
into STRICT	ie_clinica_w,
	cd_empresa_ref_w,
	cd_plano_w,
	cd_usuario_convenio_w,
	cd_pessoa_fisica_w,
	ie_atend_retorno_w,
	nr_seq_cobertura_w,
	nr_seq_classif_atend_w,
	cd_dependente_w,
	nr_seq_origem_w
from	atendimento_paciente
where	nr_atendimento = nr_atendimento_w;

if	coalesce(ie_emite_conta_w::text, '') = '' then
	begin
	select vl_parametro_padrao
	into STRICT   ie_emite_conta_w
	from   funcao_parametro
	where  cd_funcao = 81
  	and  	 nr_sequencia = 18;
	exception
     		when others then
          	ie_emite_conta_w := 'N';
	end;
end if;

/* obter o estabelecimento do atendimento */

begin
select	a.cd_estabelecimento,
	a.dt_entrada,
	coalesce(a.dt_alta,pkg_date_utils.get_datetime(1900, 1, 1, 0, 0, 0)),
	coalesce(a.dt_alta,clock_timestamp()),
	a.ie_tipo_atendimento,
	coalesce(a.nr_atend_original,0),
	a.ie_clinica,
	campo_numerico(obter_idade_pf(a.cd_pessoa_fisica, dt_procedimento_w, 'A')) qt_idade,
	a.ie_carater_inter_sus,
	b.ie_sexo,
	trunc(coalesce(a.dt_alta, clock_timestamp()) - a.dt_entrada) qt_dias_internacao,
	a.cd_estabelecimento,
	a.dt_alta
into STRICT  	cd_estabelecimento_w,
	dt_entrada_w,
	dt_alta_w,
	dt_altap_w,
	ie_tipo_atendimento_w,
	nr_atend_original_w,
	ie_clinica_w,
	qt_idade_w,
	ie_carater_inter_sus_w,
	ie_sexo_w,
	qt_dias_internacao_w,
	cd_estab_atend_w,
	dt_alta_preco_w
from 	pessoa_fisica b,
	atendimento_paciente a
where 	a.nr_atendimento 	= nr_atendimento_w
and	a.cd_pessoa_fisica	= b.cd_pessoa_fisica;
exception
     	when others then
          	cd_estabelecimento_w	:= 1;
end;

select	coalesce(max(ie_data_proc_dias_int),'N')
into STRICT	ie_data_proc_dias_int_w
from	parametro_faturamento
where	cd_estabelecimento = cd_estabelecimento_w;

if (ie_data_proc_dias_int_w = 'S') then
		qt_dias_internacao_w := (dt_procedimento_w - dt_entrada_w);
end if;



select 	wheb_usuario_pck.get_cd_estabelecimento
into STRICT	cd_estab_logado_w
;

select	coalesce(max(ie_estabelecimento_conta), 'A')
into STRICT	ie_estabelecimento_conta_w
from	parametro_faturamento
where	cd_estabelecimento	= cd_estab_logado_w;

if (ie_estabelecimento_conta_w = 'L') then
	cd_estabelecimento_w:= cd_estab_logado_w;
end if;

begin
select	coalesce(max(ie_manter_zerado_edicao), 'N'),
	coalesce(max(ie_partic_resp_cred), 'N'),
	coalesce(max(ie_atualiza_func_medico),'N'),
	coalesce(max(ie_separa_partic_adic_hor),'N'),
	coalesce(max(ie_considera_regra_data_preco),'N'),
	coalesce(max(ie_verifica_proc_glosa),'N'),
	coalesce(max(ie_valor_filme_apos_adic_hor),'N'),
	coalesce(max(ie_arred_so_glosa_perc),'N'),
	coalesce(max(ie_aux_maior_aux_cir),'N'),
	max(ie_codigo_convenio)
into STRICT	ie_manter_zerado_edicao_w,
	ie_partic_resp_cred_w,
	ie_atualiza_func_medico_w,
	ie_separa_partic_adic_hor_w,
	ie_regra_data_preco_w,
	ie_verifica_glosa_w,
	ie_valor_filme_apos_adic_hor_w,
	ie_arred_so_glosa_perc_w,
	ie_aux_maior_aux_cir_w,
	ie_codigo_convenio_w
from	convenio_estabelecimento
where	cd_convenio		= cd_convenio_w
and	cd_estabelecimento	= cd_estabelecimento_w;
exception
	when others then
		ie_manter_zerado_edicao_w	:= 'N';
end;

begin
select	cd_estabelecimento
into STRICT	cd_estab_conta_w
from	conta_paciente
where 	nr_interno_conta	= nr_interno_conta_w;
exception
     	when others then
          	cd_estab_conta_w	:= cd_estabelecimento_w;
end;

select	coalesce(max(ie_estabelecimento_conta), 'A') ,
	coalesce(max(ie_gerar_conta_guia_dif), 'N'),
	coalesce(max(ie_calculo_taxa_regra),'C'),
	coalesce(max(ie_conv_calculo_honorario), 'A'),
	coalesce(max(ie_estab_regra_honorario), 'A'),
	coalesce(max(ie_valor_inf_desconto), 'N'),
	coalesce(max(ie_valor_inf_pacote), 'N'),
	coalesce(max(ie_exclui_partic_cir_zerado),'N'),
	coalesce(max(ie_aux_cbhpm_porte_cir),'N'),
	coalesce(max(ie_aux_amb_porte_cir),'N'),
	coalesce(max(ie_manter_pacote_zerado),'N'),
	coalesce(max(ie_calc_partic_ipsemg),'N'),
	coalesce(max(ie_convenio_conta_param),'N'),
	coalesce(max(ie_vigencia_aux_cbhpm),'N'),
	coalesce(max(ie_define_ch_crit_hor),'N'),
	coalesce(max(ie_regra_tipo_atend),'A'),
	coalesce(max(ie_adic_hor_partic),'N'),
	coalesce(max(ie_estab_regra_crit_hor),'C'),
	coalesce(max(ie_aplica_qt_proc_calc),'N'),
	coalesce(max(ie_tx_partic_valor_negoc),'N'),
	coalesce(max(ie_calcular_proc_auditado),'S'),
	coalesce(max(ie_data_vig_cbhpm),'N'),
	coalesce(max(ie_prioridade_edicao_amb),'N')
into STRICT	ie_estabelecimento_conta_w,
	ie_gerar_conta_guia_dif_w,
	ie_calculo_taxa_regra_w,
	ie_conv_calculo_honorario_w,
	ie_estab_regra_honorario_w,
	ie_valor_inf_desconto_w,
	ie_valor_inf_pacote_w,
	ie_exclui_partic_cir_zerado_w,
	ie_aux_cbhpm_porte_cir_w,
	ie_aux_amb_porte_cir_w,
	ie_manter_pacote_zerado_w,
	ie_calc_partic_ipsemg_w,
	ie_convenio_conta_param_w,
	ie_vigencia_aux_cbhpm_w,
	ie_define_ch_crit_hor_w,
	ie_regra_tipo_atend_w,
	ie_adic_hor_partic_w,
	ie_estab_regra_crit_hor_w,
	ie_aplica_qt_proc_calc_w,
	ie_tx_partic_valor_negoc_w,
	ie_calcular_proc_auditado_w,
	ie_data_vig_cbhpm_w,
	ie_prioridade_edicao_w
from	parametro_faturamento
where	cd_estabelecimento	= cd_estabelecimento_w;

ie_altera_auditoria_w	:= 'S';

if (ie_calcular_proc_auditado_w = 'N') and (ie_auditoria_w = 'S') then
	ie_altera_auditoria_w	:= 'N';
end if;

if (coalesce(ie_regra_tipo_atend_w,'A') = 'C') then
	begin
	select	coalesce(max(ie_tipo_atend_conta),ie_tipo_atendimento_w)
	into STRICT	ie_tipo_atendimento_w
	from 	conta_paciente
	where 	nr_interno_conta = nr_interno_conta_w;
	exception
		when others then
		ie_tipo_atendimento_w:= ie_tipo_atendimento_w;
	end;
end if;

begin
select	coalesce(cd_medico_convenio,
	substr(obter_medico_convenio(cd_estabelecimento_w, cd_medico_executor,cd_convenio, null, cd_especialidade, null, cd_setor_atendimento,dt_procedimento_w,
		ie_tipo_atendimento_w, ie_funcao_medico, ie_carater_inter_sus_w),1,15)),
	nr_seq_regra_qtde_exec
into STRICT	cd_medico_convenio_w,
	nr_seq_regra_qtde_exec_w
from	procedimento_paciente
where	nr_sequencia	= nr_sequencia_p;

exception
     	when others then
          	cd_medico_convenio_w	:= cd_medico_convenio_w;
end;

select	coalesce(max(ie_grava_guia_conta),'N')
into STRICT	ie_grava_guia_conta_w
from	convenio_estabelecimento
where	cd_convenio		= CD_CONVENIO_W
and	cd_estabelecimento = cd_estabelecimento_w;

RAISE NOTICE 'CD_CONVENIO_W=%', CD_CONVENIO_W;
RAISE NOTICE 'cd_estabelecimento_w=%', cd_estabelecimento_w;
if (nr_interno_conta_w IS NOT NULL AND nr_interno_conta_w::text <> '') and (ie_convenio_conta_param_w	= 'S') then

	ie_altera_guia_w:= coalesce(Obter_valor_param_usuario(67, 370, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w),'N');

	select	coalesce(cd_convenio_calculo,cd_convenio_parametro),
		coalesce(cd_categoria_calculo,cd_categoria_parametro),
		coalesce(CASE WHEN ie_altera_guia_w='S' THEN  null  ELSE cd_autorizacao END ,nr_doc_convenio_w)
	into STRICT	cd_convenio_w,
		cd_categoria_w,
		nr_doc_convenio_w
	from	conta_paciente
	where	nr_interno_conta	= nr_interno_conta_w;

	cd_convenio_orig_w		:= cd_convenio_w;
	cd_categoria_orig_w		:= cd_categoria_w;
	cd_convenio_calculo_w		:= cd_convenio_w;
	cd_categoria_calculo_w		:= cd_categoria_w;
	
end if;

if (ie_estabelecimento_conta_w = 'S') then
	begin

	select	max(cd_estabelecimento_base)
	into STRICT	cd_estab_setor_w
	from	setor_atendimento
	where	cd_setor_atendimento	= cd_setor_atendimento_w;

	cd_estabelecimento_w		:= cd_estab_setor_w;

	end;
end if;
begin
select cd_grupo_proc,
	 cd_area_procedimento,
	 cd_especialidade
into STRICT	 cd_grupo_proc_w,
	 cd_area_procedimento_w,
	 cd_especialidade_w
from	 estrutura_procedimento_v
where	 cd_procedimento	= cd_procedimento_w
and	 ie_origem_proced	= ie_origem_proced_w;
exception
     	 when others then
	 begin
	 cd_grupo_proc_w	:= 0;
	 cd_area_procedimento_w	:= 0;
	 cd_especialidade_w	:= 0;
	 end;
end;

/* rotina nova para gerar conta no estabelecimento do terceiro  - inicio (adelson-30/06/04) */

cd_estab_terceiro_w	:= 0;
qt_reg_estab_terc_w	:= 0;

select	count(*)
into STRICT	qt_reg_estab_terc_w
from	regra_conta_terceiro
where	cd_estabelecimento	= cd_estabelecimento_w
and	coalesce(cd_convenio,cd_convenio_w)	= cd_convenio_w
and	coalesce(ie_situacao, 'A')		= 'A';

select	cd_procedencia
into STRICT	cd_procedencia_w
from 	atendimento_paciente
where 	nr_atendimento 	= nr_atendimento_w;


if (qt_reg_estab_terc_w	> 0) and ((coalesce(nr_seq_proc_orig_w,0) = 0) or (coalesce(nr_seq_proc_orig_w,0) = nr_sequencia_p)) then
	begin
	
	SELECT * FROM obter_estab_regr_conta_terc(
			cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, ie_tipo_atendimento_w, cd_setor_atendimento_w, cd_area_procedimento_w, cd_especialidade_w, cd_grupo_proc_w, cd_procedimento_w, ie_origem_proced_w, 0, 0, 0, 0, cd_plano_w, cd_procedencia_w, cd_medico_executor_w, coalesce(dt_conta_w,dt_procedimento_w), ie_clinica_w, nr_seq_proc_interno_w, cd_estab_terceiro_w, nr_sequencia_regra_w) INTO STRICT cd_estab_terceiro_w, nr_sequencia_regra_w;

	if (cd_estab_terceiro_w	<> 0) then
		cd_estabelecimento_w	:= cd_estab_terceiro_w;
	end if;

	if (coalesce(cd_estab_terceiro_w,0) <> 0) and (coalesce(cd_estab_terceiro_w,0) <> coalesce(cd_estab_conta_w,0)) and (coalesce(cd_funcao_w,0) = 67) and (ie_status_acerto_conta_w = 1) then
	   nr_interno_conta_w :=  null;
	end if;
	end;
end if;

/* rotina nova para gerar conta no estabelecimento do terceiro  - final (adelson-30/06/04) */


/* obter o tipo de acomodacao do convenio */

begin
select obter_tipo_acomod_proc(nr_atendimento_w,nr_sequencia_p)
into STRICT	 cd_tipo_acomodacao_w
;
exception
	when others then
		cd_tipo_acomodacao_w 	:= 0;
end;

select obter_grupo_receita(cd_estabelecimento_w,
	null,
	cd_procedimento_w,
	ie_origem_proced_w,
	ie_tipo_atendimento_w,
	cd_setor_atendimento_w)
into STRICT	nr_seq_grupo_rec_w
;

if (coalesce(nr_prescricao_w,0) > 0)  and (coalesce(nr_sequencia_prescricao_w,0) > 0) then
	ie_executar_leito_w := consiste_se_beira_leito(nr_prescricao_w, nr_sequencia_prescricao_w, nm_usuario_p, ie_executar_leito_w);
	/*select	nvl(max(ie_executar_leito),'A')
	into	ie_executar_leito_w
	from	prescr_procedimento
	where	nr_prescricao		= nr_prescricao_w
	and	nr_sequencia		= nr_sequencia_prescricao_w;*/
end if;

begin
ie_ignora_ajuste_w:= coalesce(obter_se_dispensa_ajuste(nr_sequencia_p),'N');
exception
    	when others then
      	ie_ignora_ajuste_w := 'N';
end;

begin
select	coalesce(max(cd_setor_atendimento),0)
into STRICT	cd_setor_atend_prescr_w
from	prescr_medica
where	nr_prescricao = nr_prescricao_w;
exception
when others then
	cd_setor_atend_prescr_w := 0;
end;

/* obter glosa do procedimento */

if (ie_ignora_ajuste_w = 'N') then
	SELECT * FROM glosa_procedimento(
			cd_estabelecimento_w, nr_atendimento_w, dt_procedimento_w, cd_procedimento_w, ie_origem_proced_w, qt_procedimento_w, cd_tipo_acomodacao_w, ie_tipo_atendimento_w, cd_setor_atendimento_w, nr_seq_exame_w, nr_seq_proc_interno_w, cd_usuario_convenio_w, cd_plano_w, ie_clinica_w, cd_empresa_ref_w, cd_medico_executor_w, ie_sexo_w, cd_convenio_w, cd_categoria_w, ie_tipo_convenio_w, ie_classif_convenio_w, cd_autorizacao_w, nr_seq_autorizacao_w, qt_autorizada_w, cd_senha_w, nm_responsavel_w, ie_glosa_w, cd_situacao_glosa_w, nr_seq_regra_preco_w, pr_glosa_w, vl_glosa_w, cd_motivo_exc_conta_ww, ie_preco_informado_glosa_w, vl_negociado_glosa_w, ie_autor_particular_w, cd_convenio_glosa_ww, cd_categoria_glosa_ww, nr_seq_ajuste_proc_ww, ie_video_w, coalesce(ie_executar_leito_w,'A'), ie_spect_w, cd_cgc_prestador_w, cd_equipamento_w, cd_especialidade_medica_w, nr_seq_cobertura_w, cd_setor_atend_prescr_w, nr_seq_classif_atend_w, nr_seq_grupo_rec_w, cd_dependente_w, nr_seq_origem_w, nr_seq_classif_medico_w) INTO STRICT cd_convenio_w, cd_categoria_w, ie_tipo_convenio_w, ie_classif_convenio_w, cd_autorizacao_w, nr_seq_autorizacao_w, qt_autorizada_w, cd_senha_w, nm_responsavel_w, ie_glosa_w, cd_situacao_glosa_w, nr_seq_regra_preco_w, pr_glosa_w, vl_glosa_w, cd_motivo_exc_conta_ww, ie_preco_informado_glosa_w, vl_negociado_glosa_w, ie_autor_particular_w, cd_convenio_glosa_ww, cd_categoria_glosa_ww, nr_seq_ajuste_proc_ww;
	
end if;

ie_reaplica_regra_conta_terc_w:= coalesce(Obter_valor_param_usuario(0, 140, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w),'N');

if (ie_reaplica_regra_conta_terc_w = 'S') then

	select	count(*)
	into STRICT	qt_reg_estab_terc_w
	from	regra_conta_terceiro
	where	cd_estabelecimento	= cd_estabelecimento_w
	and	coalesce(cd_convenio,cd_convenio_w)	= cd_convenio_w
	and	coalesce(ie_situacao, 'A')		= 'A';
	
	if (qt_reg_estab_terc_w	> 0) and ((coalesce(nr_seq_proc_orig_w,0) = 0) or (coalesce(nr_seq_proc_orig_w,0) = nr_sequencia_p)) then
		begin

		select	cd_procedencia
		into STRICT	cd_procedencia_w
		from 	atendimento_paciente
		where 	nr_atendimento 	= nr_atendimento_w;

		SELECT * FROM obter_estab_regr_conta_terc(
				cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, ie_tipo_atendimento_w, cd_setor_atendimento_w, cd_area_procedimento_w, cd_especialidade_w, cd_grupo_proc_w, cd_procedimento_w, ie_origem_proced_w, 0, 0, 0, 0, cd_plano_w, cd_procedencia_w, cd_medico_executor_w, coalesce(dt_conta_w,dt_procedimento_w), ie_clinica_w, nr_seq_proc_interno_w, cd_estab_terceiro_w, nr_sequencia_regra_w) INTO STRICT cd_estab_terceiro_w, nr_sequencia_regra_w;

		if (cd_estab_terceiro_w	<> 0) then
			cd_estabelecimento_w	:= cd_estab_terceiro_w;
		end if;

		if (coalesce(cd_estab_terceiro_w,0) <> 0) and (coalesce(cd_estab_terceiro_w,0) <> coalesce(cd_estab_conta_w,0)) and (coalesce(cd_funcao_w,0) = 67) and (ie_status_acerto_conta_w = 1) then
			nr_interno_conta_w :=  null;
		end if;
		end;
	end if;
end if;

if (ie_guia_informada_w <> 'S') and
	((nr_doc_convenio_w = '') or (coalesce(nr_doc_convenio_w::text, '') = ''))then
	nr_doc_convenio_w  := cd_autorizacao_w;
end if;

if (coalesce(ie_status_acerto_conta_w,1) = 1) then
		
	SELECT * FROM obter_regra_senha_guia_conta( 	cd_estabelecimento_w, cd_convenio_w, ie_tipo_atendimento_w, ie_doc_autorizacao_w, ie_atualiza_guia_w, ie_atualiza_senha_w, ie_autor_qtde_w) INTO STRICT ie_doc_autorizacao_w, ie_atualiza_guia_w, ie_atualiza_senha_w, ie_autor_qtde_w;

	if (ie_doc_autorizacao_w = 'C') or
		((ie_doc_autorizacao_w = 'S') and
		 ((nr_prescricao_w IS NOT NULL AND nr_prescricao_w::text <> '' AND nr_sequencia_prescricao_w IS NOT NULL AND nr_sequencia_prescricao_w::text <> '') or (nr_cirurgia_w  > 0))) then /* francisco - os 94111 - 16/06/2008 - tratar guia/senha quando veio da cirurgia */
		
		SELECT * FROM obter_autor_item_conta(	nr_sequencia_p, null, nr_sequencia_autor_w, nr_seq_proc_autor_w, nr_seq_mat_autor_w, nr_doc_conv_autor_w, cd_senha_autor_w, ie_autorizado_w, ie_doc_autorizacao_w, ie_autor_qtde_w) INTO STRICT nr_sequencia_autor_w, nr_seq_proc_autor_w, nr_seq_mat_autor_w, nr_doc_conv_autor_w, cd_senha_autor_w, ie_autorizado_w;


		if (nr_sequencia_autor_w IS NOT NULL AND nr_sequencia_autor_w::text <> '') and (nr_seq_proc_autor_w IS NOT NULL AND nr_seq_proc_autor_w::text <> '') then

			if (nr_seq_proc_autor_w IS NOT NULL AND nr_seq_proc_autor_w::text <> '') then
				begin
				update	procedimento_paciente
				set	nr_seq_proc_autor	= nr_seq_proc_autor_w
				where	nr_sequencia		= nr_sequencia_p;
				end;
			elsif (nr_seq_proc_autor_ww IS NOT NULL AND nr_seq_proc_autor_ww::text <> '') then
			
				select	max(a.cd_autorizacao),
					max(a.cd_senha)
				into STRICT	nr_doc_conv_autor_w,
					cd_senha_autor_w
				from	autorizacao_convenio a,
					procedimento_autorizado b,
					estagio_autorizacao c
				where	a.nr_sequencia = b.nr_sequencia_autor
				and	b.nr_sequencia = nr_seq_proc_autor_ww
				and	c.nr_sequencia = a.nr_seq_estagio
				and	c.ie_interno   = 10;
				
			end if;

			/* se tiver autorizacao e ainda nao estiver autorizada deve deixar guia e senha aguardando retorno*/


			
			--nr_doc_convenio_w	:= null;

			--cd_senha_w		:= null;


			/* se ja foi autorizado, ja insere com guia e senha da autorizcao */

			if (ie_autorizado_w	= 'S') then			
				if (ie_atualiza_guia_w	= 'S') then
					nr_doc_convenio_w	:= nr_doc_conv_autor_w;
				end if;
				
				if (ie_atualiza_senha_w	= 'S') then
					cd_senha_w		:= cd_senha_autor_w;
				end if;			
			end if;
		end if;

		/* feito dessa forma para caso o procedimento nem tenha autorizacao, continuar como antes */

		
		if (nr_doc_conv_autor_w IS NOT NULL AND nr_doc_conv_autor_w::text <> '') or (cd_senha_autor_w IS NOT NULL AND cd_senha_autor_w::text <> '') then

			update	procedimento_paciente
			set	nr_doc_convenio		= coalesce(nr_doc_convenio,nr_doc_convenio_w),
				cd_senha		= coalesce(cd_senha,cd_senha_w),
				cd_senha_autor		= cd_senha_autor_w,
				cd_autor_convenio	= nr_doc_conv_autor_w
			where	nr_sequencia		= nr_sequencia_p;
		
		end if;
	end if;
end if;



/* Obter contas de receita do procedimento*/

ie_pacote_w:= obter_se_pacote(nr_sequencia_p,nr_seq_proc_pacote_w);

begin
select	cd_convenio_parametro,
	cd_categoria_parametro,
	cd_estabelecimento
into STRICT	cd_convenio_parametro_w,
	cd_categoria_parametro_w,
	cd_estab_conta_w
from	conta_paciente
where	nr_interno_conta	= nr_interno_conta_w;
exception
	when others then
		cd_convenio_parametro_w		:= null;
		cd_categoria_parametro_w	:= null;
		cd_estab_conta_w		:= cd_estabelecimento_w;
end;

if (ie_estab_regra_honorario_w	= 'C') then
	cd_estab_honorario_w	:= cd_estab_conta_w;
elsif (ie_estab_regra_honorario_w	= 'O') then
	cd_estab_honorario_w	:= cd_estab_atend_w;
else
	cd_estab_honorario_w	:= cd_estabelecimento_w;
end if;

------ Obtain the rule according to the ITEMS OF DRG and the own DRG
select	coalesce(CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END ,'N')
into STRICT	ie_drg_item_w
from	procedimento_paciente_dado
where	nr_seq_proc = nr_sequencia_p
and     (nr_seq_proc_drg IS NOT NULL AND nr_seq_proc_drg::text <> '');

select	coalesce(CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END ,'N')
into STRICT	ie_drg_procedure_w
from	procedimento_paciente_dado
where	nr_seq_proc_drg = nr_sequencia_p;

select  coalesce(max(vl_drg),0) vl_drg
into STRICT	vl_drg_w
from (SELECT	sum(a.vl_procedimento) vl_drg	--- BRING THE VALUE OF DRG WHEN PASSED A DRG ITEM
        from	procedimento_paciente a,
                procedimento_paciente_dado b
        where	a.nr_sequencia = b.nr_seq_proc_drg
        and     b.nr_seq_proc = nr_sequencia_p
        and		a.ie_origem_proced = 15 --- DRG
union

        SELECT  sum(a.vl_procedimento) vl_drg	--- BRING THE VALUE OF DRG WHEN PASSED THE OWN DRG
        from	procedimento_paciente a
        where	a.nr_sequencia = nr_sequencia_p
        and		a.ie_origem_proced = 15 --- DRG
        ) alias4;

if (ie_conv_calculo_honorario_w	= 'C') and (cd_convenio_parametro_w IS NOT NULL AND cd_convenio_parametro_w::text <> '') and (cd_categoria_parametro_w IS NOT NULL AND cd_categoria_parametro_w::text <> '') then
	begin

	SELECT * FROM obter_regra_honorario(cd_estab_honorario_w, cd_convenio_parametro_w, cd_categoria_parametro_w, cd_procedimento_w, ie_origem_proced_w, dt_procedimento_w, ie_tipo_atendimento_w, cd_setor_atendimento_w, null, null, cd_medico_executor_w, cd_cgc_prestador_w, ie_pacote_w, ie_carater_inter_sus_w, cd_plano_w, cd_regra_honorario_w, ie_conta_honorario_w, ie_calcula_honorario_w, cd_cgc_honorario_w, cd_pessoa_honorario_w, nr_seq_criterio_w, cd_especialidade_medica_w, null, ie_funcao_medico_w, ie_clinica_w, cd_empresa_ref_w, nr_seq_classif_medico_w, cd_procedencia_w, ie_doc_executor_w, cd_cbo_w, nr_seq_proc_interno_w, nr_seq_exame_w, ie_drg_item_w, ie_drg_procedure_w, vl_drg_w) INTO STRICT cd_regra_honorario_w, ie_conta_honorario_w, ie_calcula_honorario_w, cd_cgc_honorario_w, cd_pessoa_honorario_w, nr_seq_criterio_w;
	end;
else
	begin
	SELECT * FROM obter_regra_honorario(cd_estab_honorario_w, cd_convenio_w, cd_categoria_w, cd_procedimento_w, ie_origem_proced_w, dt_procedimento_w, ie_tipo_atendimento_w, cd_setor_atendimento_w, null, null, cd_medico_executor_w, cd_cgc_prestador_w, ie_pacote_w, ie_carater_inter_sus_w, cd_plano_w, cd_regra_honorario_w, ie_conta_honorario_w, ie_calcula_honorario_w, cd_cgc_honorario_w, cd_pessoa_honorario_w, nr_seq_criterio_w, cd_especialidade_medica_w, null, ie_funcao_medico_w, ie_clinica_w, cd_empresa_ref_w, nr_seq_classif_medico_w, cd_procedencia_w, ie_doc_executor_w, cd_cbo_w, nr_seq_proc_interno_w, nr_seq_exame_w, ie_drg_item_w, ie_drg_procedure_w, vl_drg_w) INTO STRICT cd_regra_honorario_w, ie_conta_honorario_w, ie_calcula_honorario_w, cd_cgc_honorario_w, cd_pessoa_honorario_w, nr_seq_criterio_w;
	end;
end if;

/* ricardo 10/04/2006 - incluido o exception para dar a mensagem quando nao ha parametros do faturamento os 32742 */

begin
select	ie_gerar_resp_credito,
	coalesce(ie_especial_proc_exec,'N'),
	coalesce(ie_preco_inf_glosa_proc, 'N'),
	coalesce(ie_converte_proc_conv,'N'),
	coalesce(ie_ordem_converte_proc,'EP')
into STRICT	ie_gerar_resp_credito_w,
	ie_especial_proc_exec_w,
	ie_preco_inf_glosa_proc_w,
	ie_converte_proc_conv_w,
	ie_ordem_converte_proc_w
from	parametro_faturamento
where	cd_estabelecimento	= cd_estabelecimento_w;
exception
	when no_data_found then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(180941,'CD_ESTAB='||cd_estabelecimento_w);
		/* 'Nao existe parametro de faturamento para o estabelecimento: '*/

end;

-- edgar 28/03/2006, os 30810, incluido ie_gerar_resp_credito_w deve forcar a geracao do resp credito
if (ie_valor_informado_w = 'S') and (ie_gerar_resp_credito_w = 'N') then
	cd_regra_honorario_w	:= cd_regra_honorario_orig_w;
end if;

select	count(*)
into STRICT	qt_conta_guia_w
from	conta_paciente_guia
where	nr_interno_conta	= nr_interno_conta_w
and	cd_autorizacao		= nr_doc_convenio_w;

if	(qt_conta_guia_w = 0 AND nr_doc_convenio_w IS NOT NULL AND nr_doc_convenio_w::text <> '') and (ie_gerar_conta_guia_dif_w	= 'S') then
	nr_interno_conta_w	:= null;
end if;

begin
select	coalesce(max('N'),'S')
into STRICT	ie_gerar_conta_periodo_w
from	conta_paciente
where	nr_interno_conta	= nr_interno_conta_w
/*and	dt_conta_w between dt_periodo_inicial and dt_periodo_final; felipe - 57899 - 24/05/2007 comentei e coloquei o and abaixo*/

and	dt_conta_w <= dt_periodo_final;
exception
     	 when others then
		ie_gerar_conta_periodo_w := 'N';
end;

if (ie_gerar_conta_periodo_w = 'S') and (qt_dia_fim_conta_w > 0) then
	nr_interno_conta_w	:= null;
end if;

if (cd_estab_atend_w	<> cd_estab_setor_w) and (ie_estabelecimento_conta_w = 'S') and (ie_status_acerto_conta_w = 1) then
	nr_interno_conta_w	:= null;
end if;

if (ie_converte_proc_conv_w	= 'S') and (cd_convenio_w	<> cd_convenio_orig_w) then
	cd_proced_convertido_w	:=0;

	if (coalesce(ie_ordem_converte_proc_w,'EP') = 'EP') then -- Exame de laboratorio / Proc. Interno
		if (nr_seq_exame_w IS NOT NULL AND nr_seq_exame_w::text <> '') then
			if (nr_seq_material_w IS NOT NULL AND nr_seq_material_w::text <> '') then
				select 	max(cd_material_exame)
				into STRICT	cd_material_exame_w
				from	material_exame_lab
				where	nr_sequencia = nr_seq_material_w;
			end if;
			SELECT * FROM obter_exame_lab_convenio(nr_seq_exame_w, cd_convenio_w, cd_categoria_w, ie_tipo_atendimento_w, cd_estabelecimento_w, ie_tipo_convenio_w, nr_seq_proc_interno_w, cd_material_exame_w, cd_plano_w, cd_setor_w, cd_proced_convertido_w, ie_origem_proced_convert_w, ds_erro_w, nr_seq_proc_interno_aux_w, dt_procedimento_w) INTO STRICT cd_setor_w, cd_proced_convertido_w, ie_origem_proced_convert_w, ds_erro_w, nr_seq_proc_interno_aux_w;
		elsif (nr_seq_proc_interno_w IS NOT NULL AND nr_seq_proc_interno_w::text <> '') then
			/* Substituido a procedure obter_proc_tab_interno pela obter_proc_tab_interno_conv
			obter_proc_tab_interno(nr_seq_proc_interno_w,nr_prescricao_w,nr_atendimento_w,nr_interno_conta_w,
						cd_proced_convertido_w,ie_origem_proced_convert_w);*/
			SELECT * FROM obter_proc_tab_interno_conv(nr_seq_proc_interno_w, cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, cd_plano_w, cd_setor_paciente_w, cd_proced_convertido_w, ie_origem_proced_convert_w, cd_setor_atendimento_w, dt_procedimento_w, cd_tipo_acomodacao_w, null, null, null, null, null, null, null) INTO STRICT cd_proced_convertido_w, ie_origem_proced_convert_w;
		end if;

	elsif (coalesce(ie_ordem_converte_proc_w,'EP') = 'PE') then --  Proc. Interno / Exame de laboratorio
		if (nr_seq_proc_interno_w IS NOT NULL AND nr_seq_proc_interno_w::text <> '') then
			SELECT * FROM obter_proc_tab_interno_conv(nr_seq_proc_interno_w, cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, cd_plano_w, cd_setor_paciente_w, cd_proced_convertido_w, ie_origem_proced_convert_w, cd_setor_atendimento_w, dt_procedimento_w, cd_tipo_acomodacao_w, null, null, null, null, null, null, null) INTO STRICT cd_proced_convertido_w, ie_origem_proced_convert_w;

		elsif (nr_seq_exame_w IS NOT NULL AND nr_seq_exame_w::text <> '') then

			if (nr_seq_material_w IS NOT NULL AND nr_seq_material_w::text <> '') then
				select 	max(cd_material_exame)
				into STRICT	cd_material_exame_w
				from	material_exame_lab
				where	nr_sequencia = nr_seq_material_w;
			end if;
			SELECT * FROM obter_exame_lab_convenio(nr_seq_exame_w, cd_convenio_w, cd_categoria_w, ie_tipo_atendimento_w, cd_estabelecimento_w, ie_tipo_convenio_w, nr_seq_proc_interno_w, cd_material_exame_w, cd_plano_w, cd_setor_w, cd_proced_convertido_w, ie_origem_proced_convert_w, ds_erro_w, nr_seq_proc_interno_aux_w, dt_procedimento_w) INTO STRICT cd_setor_w, cd_proced_convertido_w, ie_origem_proced_convert_w, ds_erro_w, nr_seq_proc_interno_aux_w;
		end if;

	end if;

	if (nr_seq_proc_interno_aux_w > 0) then
		nr_seq_proc_interno_w 	:= nr_seq_proc_interno_aux_w;
	end if;
	if (coalesce(cd_proced_convertido_w,0)	> 0) then
		cd_procedimento_w	:= cd_proced_convertido_w;
		ie_origem_proced_w	:= ie_origem_proced_convert_w;
	end if;
end if;

ds_nao_informado_w := substr(obter_desc_expressao(778770),1,20);

if (ie_doc_convenio_w = 'G') and (coalesce(nr_doc_convenio_w, ds_nao_informado_w) = ds_nao_informado_w) then

	begin
	select	b.nr_doc_convenio
	into STRICT	nr_doc_convenio_w
	from	atendimento_paciente a,
		atend_categoria_convenio b
	where	a.nr_atendimento	= b.nr_atendimento
	and	a.nr_atendimento	= nr_atendimento_w
	and	b.nr_seq_interno	= Obter_Atecaco_Atend_conv(a.nr_atendimento,cd_convenio_w)  LIMIT 1;	
	exception
	when others then
		nr_doc_convenio_w	:= null;
	end;
	
end if;

/*      identificar a conta paciente que o procedimento deve ser incluido */

if (coalesce(nr_interno_conta_w::text, '') = '') 			or (cd_convenio_w	<> cd_convenio_orig_w) 		or
	(cd_situacao_glosa_w = 13 AND ie_status_acerto_conta_w = 1)	 then
	ie_identifica_conta_proc_w := 'S';
else
	ie_identifica_conta_proc_w := 'N';
end if;

if (ie_identifica_conta_proc_w = 'S')	 then
	begin

	ie_item_fora_periodo_w := obter_se_item_fora_periodo(		cd_estabelecimento_w, nr_atendimento_w, cd_convenio_w, cd_categoria_w, nm_usuario_p, dt_procedimento_w, dt_entrada_w, dt_alta_w, nr_doc_convenio_w, cd_setor_atendimento_w, nr_seq_pq_proc_w, ie_item_fora_periodo_w);

	if ie_item_fora_periodo_w = 'N' then
	
		SELECT * FROM obter_conta_paciente(	cd_estabelecimento_w, nr_atendimento_w, cd_convenio_w, cd_categoria_w, nm_usuario_p, dt_procedimento_w, dt_entrada_w, dt_alta_w, nr_doc_convenio_w, cd_setor_atendimento_w, nr_seq_pq_proc_w, dt_acerto_conta_w, nr_interno_conta_w, cd_convenio_calculo_w, cd_categoria_calculo_w) INTO STRICT dt_acerto_conta_w, nr_interno_conta_w, cd_convenio_calculo_w, cd_categoria_calculo_w;
	

		select	coalesce(max(nr_atendimento), 0)
		into STRICT	nr_atend_conta_w
		from	conta_paciente
		where	nr_interno_conta	= nr_interno_conta_w;

		if (nr_atend_conta_w <> nr_atendimento_w) and (ie_agrupa_conta_case_w = 'N') then
			wheb_mensagem_pck.exibir_mensagem_abort(180946,'NR_ATEND_CONTA='||nr_atend_conta_w||
									';NR_ATENDIMENTO='||nr_atendimento_w||
									';NR_INTERNO_CONTA='||nr_interno_conta_w||
									';CD_ESTAB='||cd_estabelecimento_w||
									';CD_CONVENIO='||cd_convenio_w||
									';CD_CATEGORIA='||cd_categoria_w||
									';NM_USUARIO='||nm_usuario_p||
									';DT_PROCEDIMENTO='||PKG_DATE_FORMATERS_TZ.to_varchar(dt_procedimento_w, 'timestamp',ESTABLISHMENT_TIMEZONE_UTILS.GETTIMEZONE)||
									';DT_ENTRADA='||PKG_DATE_FORMATERS_TZ.to_varchar(dt_entrada_w, 'timestamp', ESTABLISHMENT_TIMEZONE_UTILS.GETTIMEZONE)||
									';DT_ALTA='||PKG_DATE_FORMATERS_TZ.to_varchar(dt_alta_w, 'timestamp', ESTABLISHMENT_TIMEZONE_UTILS.GETTIMEZONE)||
									';NR_DOC_CONVENIO='||nr_doc_convenio_w||
									';CD_SETOR='||cd_setor_atendimento_w||
									';NR_SEQ_PQ_PROC='||nr_seq_pq_proc_w);
			/*O atendimento da conta (' || NR_ATEND_CONTA_W || ') e diferente do atendimento do proc ('
							||NR_ATENDIMENTO_W || ') ! Contate o Administrador do Sistema! (01) ' || chr(13)
							||' Conta.: ' || NR_INTERNO_CONTA_W || ' Estab.: ' || CD_ESTABELECIMENTO_W || ' Conv: ' ||CD_CONVENIO_W
							|| ' Cat.: ' || CD_CATEGORIA_W ||' Usu.: ' || NM_USUARIO_P || ' DtProc.: ' || to_char(DT_PROCEDIMENTO_W,
							'dd/mm/yyyy hh24:mi:ss') ||chr(13)||' DtEnt.: ' || to_char(DT_ENTRADA_W, 'dd/mm/yyyy hh24:mi:ss')
							|| ' DtAlta.:' || to_char(DT_ALTA_W,'dd/mm/yyyy hh24:mi:ss') ||' Doc.: ' || NR_DOC_CONVENIO_W
							|| ' Setor.: ' || CD_SETOR_ATENDIMENTO_W || ' PQ.: ' ||NR_SEQ_PQ_PROC_W*/
		end if;
	end if;
	end;
end if;
if (coalesce(cd_convenio_calculo_w::text, '') = '') then
	begin
	select	cd_convenio_calculo,
			cd_categoria_calculo
	into STRICT		cd_convenio_calculo_w,
			cd_categoria_calculo_w
	from 		conta_paciente
	where		nr_interno_conta	= nr_interno_conta_w;
	exception
     			when others then
			begin
			cd_convenio_calculo_w	:= cd_convenio_w;
 			cd_categoria_calculo_w	:= cd_categoria_w;
			end;
	end;
end if;
if	coalesce(cd_convenio_calculo_w::text, '') = '' then
	cd_convenio_calculo_w	:= cd_convenio_w;
end if;
if	coalesce(cd_categoria_calculo_w::text, '') = '' then
	cd_categoria_calculo_w	:= cd_categoria_w;
end if;
/* obter o regra para calculo filme */

select obter_regra_preco_filme(cd_convenio_calculo_w)
into STRICT 	ie_aplica_taxa_filme_w
;
/* define regras para preco do procedimento */

SELECT * FROM obter_regra_taxa_exame(
	cd_estabelecimento_w, cd_convenio_calculo_w, cd_categoria_calculo_w, cd_procedimento_w, ie_origem_proced_w, nr_seq_proc_princ_w, nr_seq_proc_interno_w, ie_criterio_taxa_w, tx_proc_resultante_w, ie_regra_filme_w) INTO STRICT ie_criterio_taxa_w, tx_proc_resultante_w, ie_regra_filme_w;

/*
	ie_criterio_taxa_w pode ser
	0 - nao utiliza indice
	1 - valor do exame = valor do proprio procedimento * indice
	2 - valor do exame = valor do procedimento principal * indice
	3 - valor do exame = valor do medico * indice
	4 - valor do exame = (valor exame + filme) * indice
*/
begin
select	max(CASE WHEN ie_status_acerto=1 THEN coalesce(dt_conta_definitiva,clock_timestamp())  ELSE coalesce(dt_conta_definitiva,dt_conta_w) END ),
	max(dt_periodo_inicial),
	max(dt_periodo_final)
into STRICT	dt_conta_definitiva_w,
	dt_periodo_inicial_w,
	dt_periodo_final_w
from 	conta_paciente
where 	nr_interno_conta = nr_interno_conta_w;
exception
    	when others then
      	dt_conta_definitiva_w:= dt_conta_w;
	dt_periodo_inicial_w	:= clock_timestamp();
	dt_periodo_final_w	:= clock_timestamp();
end;

-- OS 225979
dt_agenda_integrada_w:= dt_conta_w;
if (coalesce(nr_prescricao_w,0) > 0) then

	select	coalesce(Obter_Tipo_Regra_Data_Preco('P',cd_convenio_calculo_w),'X')
	into STRICT	ie_tipo_regra_data_preco_w
	;

	if (ie_tipo_regra_data_preco_w = 'G') then

		begin
		dt_agenda_integrada_w := Propaci_Obter_data_ageint(nr_prescricao_w, nr_atendimento_w, cd_procedimento_w, ie_origem_proced_w, dt_conta_w, dt_agenda_integrada_w);
		exception
			when others then
			dt_agenda_integrada_w:= dt_conta_w;
		end;

	end if;
end if;

select	obter_regra_data_preco('P',cd_convenio_calculo_w, dt_entrada_w, dt_conta_w, dt_alta_preco_w, dt_conta_definitiva_w, dt_agenda_integrada_w, dt_periodo_inicial_w, dt_periodo_final_w)
into STRICT	dt_preco_w
;

/* define preco para o procedimento */

if (ie_criterio_taxa_w  in (0,1)) then
	CALL Grava_log_preco_pck.set_ie_gravar_log('S');
	if (ie_glosa_w	= 'F') then
		SELECT * FROM define_preco_procedimento(
			cd_estabelecimento_w, cd_convenio_orig_w, cd_categoria_orig_w, dt_preco_w, cd_procedimento_w, cd_tipo_acomodacao_w, ie_tipo_atendimento_w, cd_setor_atendimento_w, cd_medico_executor_w, null, qt_idade_w, nr_seq_exame_w, nr_seq_proc_interno_w, cd_usuario_convenio_w, cd_plano_w, ie_clinica_w, cd_empresa_ref_w, ie_sexo_w, vl_procedimento_w, vl_custo_operacional_w, vl_anestesista_w, vl_medico_w, vl_auxiliares_w, vl_materiais_w, vl_pto_procedimento_w, vl_pto_custo_operac_w, vl_pto_anestesista_w, vl_pto_medico_w, vl_pto_auxiliares_w, vl_pto_materiais_w, qt_porte_anestesico_w, qt_pontos_w, cd_edicao_amb_w, ie_preco_informado_w, nr_seq_ajuste_proc_def_w, nr_sequencia_p, ie_atend_retorno_w, qt_dias_internacao_w, ie_video_w, coalesce(ie_executar_leito_w,'A'), ie_spect_w, cd_cgc_prestador_w, cd_equipamento_w, nr_seq_tipo_acidente_w, cd_especialidade_medica_w, cd_procedencia_w, nr_seq_cobertura_w, nr_seq_classif_atend_w, ie_carater_inter_sus_w, cd_dependente_w, nr_seq_grupo_rec_w, ie_origem_proced_w, nr_seq_origem_w, nr_seq_classif_medico_w, null) INTO STRICT vl_procedimento_w, vl_custo_operacional_w, vl_anestesista_w, vl_medico_w, vl_auxiliares_w, vl_materiais_w, vl_pto_procedimento_w, vl_pto_custo_operac_w, vl_pto_anestesista_w, vl_pto_medico_w, vl_pto_auxiliares_w, vl_pto_materiais_w, qt_porte_anestesico_w, qt_pontos_w, cd_edicao_amb_w, ie_preco_informado_w, nr_seq_ajuste_proc_def_w;
	else
		SELECT * FROM define_preco_procedimento(
			cd_estabelecimento_w, cd_convenio_calculo_w, cd_categoria_calculo_w, dt_preco_w, cd_procedimento_w, cd_tipo_acomodacao_w, ie_tipo_atendimento_w, cd_setor_atendimento_w, cd_medico_executor_w, null, qt_idade_w, nr_seq_exame_w, nr_seq_proc_interno_w, cd_usuario_convenio_w, cd_plano_w, ie_clinica_w, cd_empresa_ref_w, ie_sexo_w, vl_procedimento_w, vl_custo_operacional_w, vl_anestesista_w, vl_medico_w, vl_auxiliares_w, vl_materiais_w, vl_pto_procedimento_w, vl_pto_custo_operac_w, vl_pto_anestesista_w, vl_pto_medico_w, vl_pto_auxiliares_w, vl_pto_materiais_w, qt_porte_anestesico_w, qt_pontos_w, cd_edicao_amb_w, ie_preco_informado_w, nr_seq_ajuste_proc_def_w, nr_sequencia_p, ie_atend_retorno_w, qt_dias_internacao_w, ie_video_w, coalesce(ie_executar_leito_w,'A'), ie_spect_w, cd_cgc_prestador_w, cd_equipamento_w, nr_seq_tipo_acidente_w, cd_especialidade_medica_w, cd_procedencia_w, nr_seq_cobertura_w, nr_seq_classif_atend_w, ie_carater_inter_sus_w, cd_dependente_w, nr_seq_grupo_rec_w, ie_origem_proced_w, nr_seq_origem_w, nr_seq_classif_medico_w, null) INTO STRICT vl_procedimento_w, vl_custo_operacional_w, vl_anestesista_w, vl_medico_w, vl_auxiliares_w, vl_materiais_w, vl_pto_procedimento_w, vl_pto_custo_operac_w, vl_pto_anestesista_w, vl_pto_medico_w, vl_pto_auxiliares_w, vl_pto_materiais_w, qt_porte_anestesico_w, qt_pontos_w, cd_edicao_amb_w, ie_preco_informado_w, nr_seq_ajuste_proc_def_w;
	end if;
	CALL Grava_log_preco_pck.set_ie_gravar_log('N');

vl_proced_glosa_w	:= vl_procedimento_w;

if (ie_criterio_taxa_w = 1) then

		vl_filme_incidencia_w:= Obter_valor_incidencia_filme(nr_seq_proc_princ_w, cd_estabelecimento_w, cd_convenio_calculo_w, cd_categoria_calculo_w);

		vl_procedimento_w	:= (vl_procedimento_w 		* tx_proc_resultante_w);
		vl_medico_w		:= (vl_medico_w			* tx_proc_resultante_w);
		vl_anestesista_w	:= (vl_anestesista_w		* tx_proc_resultante_w);
		select CASE WHEN ie_regra_filme_w='P' THEN  vl_materiais_w * tx_proc_resultante_w WHEN ie_regra_filme_w='T' THEN  vl_materiais_w WHEN ie_regra_filme_w='Z' THEN  0 WHEN ie_regra_filme_w='F' THEN  vl_filme_incidencia_w END
		into STRICT	vl_materiais_w
		;
		vl_auxiliares_w		:= (vl_auxiliares_w		* tx_proc_resultante_w);
		vl_custo_operacional_w	:= (vl_custo_operacional_w	* tx_proc_resultante_w);
	end if;
end if;

if (ie_criterio_taxa_w = 2) then

	vl_filme_incidencia_w:= Obter_valor_incidencia_filme(nr_seq_proc_princ_w, cd_estabelecimento_w, cd_convenio_calculo_w, cd_categoria_calculo_w);

	select (vl_procedimento* tx_proc_resultante_w / qt_procedimento),
		(vl_medico 	* tx_proc_resultante_w / qt_procedimento),
		(vl_anestesista * tx_proc_resultante_w / qt_procedimento),
		(CASE WHEN ie_regra_filme_w='Z' THEN  0 WHEN ie_regra_filme_w='T' THEN  vl_materiais WHEN ie_regra_filme_w='F' THEN  vl_filme_incidencia_w  ELSE vl_materiais * tx_proc_resultante_w END  / qt_procedimento),
		(vl_auxiliares 	* tx_proc_resultante_w / qt_procedimento),
		(vl_custo_operacional * tx_proc_resultante_w / qt_procedimento)
	into STRICT	vl_procedimento_w,
		vl_medico_w,
		vl_anestesista_w,
		vl_materiais_w,
		vl_auxiliares_w,
		vl_custo_operacional_w
	from	procedimento_paciente
	where	nr_sequencia	= nr_seq_proc_princ_w;
end if;

if (ie_criterio_taxa_w = 3) then
	select (vl_procedimento* tx_proc_resultante_w / qt_procedimento),
		(vl_medico 	* tx_proc_resultante_w / qt_procedimento),
		(vl_anestesista * tx_proc_resultante_w / qt_procedimento),
		(vl_auxiliares 	* tx_proc_resultante_w / qt_procedimento)
	into STRICT	vl_procedimento_w,
		vl_medico_w,
		vl_anestesista_w,
		vl_auxiliares_w
	from	procedimento_paciente
	where	nr_sequencia	= nr_seq_proc_princ_w;
end if;

if (ie_criterio_taxa_w = 4) then

	select	((vl_procedimento + vl_materiais)* tx_proc_resultante_w / qt_procedimento),
		((vl_medico + vl_materiais)* tx_proc_resultante_w / qt_procedimento),
		((vl_anestesista + vl_materiais)* tx_proc_resultante_w / qt_procedimento),
		((vl_auxiliares + vl_materiais)* tx_proc_resultante_w / qt_procedimento)
	into STRICT	vl_procedimento_w,
		vl_medico_w,
		vl_anestesista_w,
		vl_auxiliares_w
	from	procedimento_paciente
	where	nr_sequencia	= nr_seq_proc_princ_w;
end if;


if  coalesce(vl_procedimento_w::text, '') = '' then
    vl_procedimento_w 		:= 0;
end if;
if  coalesce(vl_custo_operacional_w::text, '') = '' then
    vl_custo_operacional_w 	:= 0;
end if;
if  coalesce(vl_anestesista_w::text, '') = '' then
    vl_anestesista_w 		:= 0;
end if;
if  coalesce(vl_medico_w::text, '') = '' then
    vl_medico_w 			:= 0;
end if;
if  coalesce(vl_auxiliares_w::text, '') = '' then
    vl_auxiliares_w 		:= 0;
end if;
if  coalesce(vl_materiais_w::text, '') = '' then
    vl_materiais_w 		:= 0;
end if;
if  coalesce(tx_procedimento_w::text, '') = '' then
    tx_procedimento_w 		:= 100;
end if;
if (tx_procedimento_w = 0) then
    vl_materiais_w 		:= 0;
end if;

/* ricardo - 26/04/2006 - incluida a rotina abaixo para tratar o carater da cirurgia na regra de criterio de horario os28591 */

begin
select	coalesce(ie_carater_cir_proc_w, ie_carater_cirurgia),
	coalesce(dt_fim_cirurgia,coalesce(dt_termino,dt_conta_w)),
	coalesce(dt_inicio_cirurgia, coalesce(dt_inicio_real,dt_conta_w))
into STRICT	ie_carater_cirurgia_w,
	dt_final_cirurgia_w,
	dt_inicio_cirurgia_w
from	cirurgia
where	nr_cirurgia		= nr_cirurgia_w;
exception
	when others then
      	ie_carater_cirurgia_w := ie_carater_cir_proc_w;
	dt_final_cirurgia_w   := null;
	dt_inicio_cirurgia_w := null;
end;

select 	CASE WHEN ie_data_adic_hor_w='S' THEN  dt_procedimento_w  ELSE dt_conta_w END
into STRICT	dt_adic_hor_w
;

if (ie_regra_data_preco_w = 'S' )then
	dt_adic_hor_w := dt_preco_w;
end if;


cd_estab_adic_horario_w := cd_estabelecimento_w;
if (ie_estab_regra_crit_hor_w = 'A') then
	cd_estab_adic_horario_w:= cd_estab_atend_w;
end if;

/* tratar adicional de horario plantao ps */

SELECT * FROM define_adicional_horario(cd_estab_adic_horario_w, cd_procedimento_w, ie_origem_proced_w, cd_convenio_calculo_w, cd_categoria_calculo_w, cd_setor_atendimento_w, ie_tipo_atendimento_w, ie_carater_inter_sus_w, dt_adic_hor_w, ie_carater_cirurgia_w, ie_video_w, dt_inicio_cirurgia_w, dt_final_cirurgia_w, cd_tipo_acomodacao_w, cd_medico_executor_w, cd_plano_w, dt_entrada_w, tx_adic_medico_w, tx_adic_anestesista_w, tx_adic_auxiliares_w, tx_adic_custo_operacional_w, tx_adic_materiais_w, tx_adic_procedimento_w, vl_adic_proc_w, vl_adic_medico_w, cd_proced_calculo_horario_w, ie_origem_proced_horario_w, nr_seq_adic_w, ie_clinica_w, somente_numero(cd_edicao_amb_w), nr_seq_proc_interno_w) INTO STRICT tx_adic_medico_w, tx_adic_anestesista_w, tx_adic_auxiliares_w, tx_adic_custo_operacional_w, tx_adic_materiais_w, tx_adic_procedimento_w, vl_adic_proc_w, vl_adic_medico_w, cd_proced_calculo_horario_w, ie_origem_proced_horario_w, nr_seq_adic_w;
	
	
if (coalesce(nr_seq_adic_w,0) > 0) then

	if (OBTER_SE_DISPENSA_ADIC_HOR(nr_sequencia_p) = 'S') then

		tx_adic_medico_w 		:= 1;
		tx_adic_anestesista_w 		:= 1;
		tx_adic_auxiliares_w		:= 1;
		tx_adic_custo_operacional_w	:= 1;
		tx_adic_materiais_w		:= 1;
		tx_adic_procedimento_w		:= 1;
		vl_adic_proc_w			:= 0;
		vl_adic_medico_w		:= 0;
		cd_proced_calculo_horario_w 	:= null;
		ie_origem_proced_horario_w	:= null;
		nr_seq_adic_w := null;
		
	end if;
end if;	
	

if (coalesce(vl_adic_proc_w::text, '') = '') then
	vl_adic_proc_w	:= 0;
end if;

if (coalesce(vl_adic_medico_w::text, '') = '') then
	vl_adic_medico_w	:= 0;
end if;

if (coalesce(cd_proced_calculo_horario_w::text, '') = '') then
	begin

	if (coalesce(nr_seq_adic_w,0) > 0) then

		vl_custo_operacional_w 		:= (tx_adic_custo_operacional_w 	* vl_custo_operacional_w);
		vl_anestesista_w 		:= (tx_adic_anestesista_w 		* vl_anestesista_w);
		vl_medico_w 			:= (tx_adic_medico_w * (vl_adic_medico_w + vl_medico_w));
		vl_auxiliares_w 		:= (tx_adic_auxiliares_w 		* vl_auxiliares_w);
		vl_materiais_w 			:= (tx_adic_materiais_w 		* vl_materiais_w);
		if (ie_valor_filme_apos_adic_hor_w = 'S') then --OS 271320
			begin
			vl_procedimento_w	:= (vl_procedimento_w - vl_materiais_w);
			vl_procedimento_w	:= (tx_adic_procedimento_w * (vl_adic_proc_w + vl_procedimento_w));
			vl_procedimento_w	:= (vl_procedimento_w + vl_materiais_w);
			end;
		else
			vl_procedimento_w	:= (tx_adic_procedimento_w * (vl_adic_proc_w + vl_procedimento_w));
		end if;


		if (ie_define_ch_crit_hor_w	= 'S') then
			vl_pto_procedimento_w	:= (tx_adic_procedimento_w	* vl_pto_procedimento_w);
			vl_pto_custo_operac_w	:= (vl_pto_custo_operac_w	* tx_adic_custo_operacional_w);
			vl_pto_anestesista_w	:= (vl_pto_anestesista_w	* vl_anestesista_w);
			vl_pto_auxiliares_w	:= (vl_pto_auxiliares_w		* vl_auxiliares_w);
			vl_pto_medico_w		:= (vl_pto_medico_w		* tx_adic_medico_w);
			vl_pto_materiais_w	:= (vl_pto_materiais_w		* vl_materiais_w);
		end if;

	end if;

	end;
else

	begin

	vl_custo_oper_horario_w 	:= (tx_adic_custo_operacional_w 	* vl_custo_operacional_w);
	vl_anest_horario_w 		:= (tx_adic_anestesista_w 		* vl_anestesista_w);
	vl_medico_horario_w 		:= (tx_adic_medico_w * (vl_adic_medico_w + vl_medico_w));
	vl_auxiliares_horario_w 	:= (tx_adic_auxiliares_w 		* vl_auxiliares_w);
	vl_materiais_horario_w 		:= (tx_adic_materiais_w 		* vl_materiais_w);
	vl_procedimento_horario_w	:= (tx_adic_procedimento_w * (vl_adic_proc_w + vl_procedimento_w));

	open	c03;
	loop
	fetch	c03 into
		nr_seq_honorario_w;
	EXIT WHEN NOT FOUND; /* apply on c03 */
		begin

		update	procedimento_paciente
		set	nr_seq_proc_princ	 = NULL
		where	nr_seq_proc_princ	= nr_seq_honorario_w;

		update	material_atend_paciente
		set	nr_seq_proc_princ	 = NULL
		where	nr_seq_proc_princ	= nr_seq_honorario_w;

		delete	from procedimento_paciente
		where	nr_sequencia	= nr_seq_honorario_w;

		end;
	end loop;
	close c03;

	select	coalesce(max(c.ie_status_acerto),1)
	into STRICT	ie_status_acerto_w
	from	procedimento_paciente p,
		conta_paciente c
	where	p.nr_interno_conta	= c.nr_interno_conta
	and	p.nr_sequencia	= nr_sequencia_p;

	if (ie_status_acerto_w = 1) then
		select	coalesce(max(ie_tipo_convenio),0),
			max(ie_classif_contabil)
		into STRICT	ie_tipo_convenio_aux2_w,
			ie_classif_convenio_w
		from	convenio
		where	cd_convenio	= cd_convenio_w;

		/* obter contas de receita do procedimento NOVO LOcal de Chamada OS 203370*/

		begin
		if (cd_centro_custo_w = 0) then
			cd_centro_custo_w	:= null;
		end if;
		
		SELECT * FROM define_conta_procedimento(
				cd_estabelecimento_w, cd_proced_calculo_horario_w, ie_origem_proced_horario_w, 1, ie_clinica_w, cd_setor_atendimento_w, ie_classif_convenio_w, ie_tipo_atendimento_w, ie_tipo_convenio_aux2_w, cd_convenio_w, cd_categoria_w, dt_procedimento_w, cd_conta_contabil_w, cd_centro_custo_w, cd_plano_w, 'N', null, null, null, null, null, null, null, nr_seq_proc_interno_w) INTO STRICT cd_conta_contabil_w, cd_centro_custo_w;

		cd_sequencia_parametro_ww := philips_contabil_pck.get_parametro_conta_contabil;
		end;

		select	nextval('procedimento_paciente_seq')
		into STRICT	nr_seq_proc_calc_w
		;

		insert into procedimento_paciente(
			nr_atendimento,
			dt_entrada_unidade,
			cd_procedimento,
			ie_origem_proced,
			dt_procedimento,
			dt_conta,
			cd_setor_atendimento,
			cd_pessoa_fisica,
			cd_medico_executor,
			qt_procedimento,
			dt_atualizacao,
			nm_usuario,
			cd_convenio,
			cd_categoria,
			nr_doc_convenio,
			tx_medico,
			tx_procedimento,
			tx_anestesia,
			vl_medico,
			vl_procedimento,
			vl_custo_operacional,
			vl_anestesista,
			vl_materiais,
			vl_auxiliares,
			cd_acao,
			ie_responsavel_credito,
			ie_emite_conta,
			ie_funcao_medico,
			ie_guia_informada,
			cd_situacao_glosa,
			cd_cgc_prestador,
			nr_interno_conta,
			nr_sequencia,
			nr_seq_proc_pacote,
			dt_inicio_procedimento,
			nm_usuario_original,
			nr_seq_atepacu,
			ie_proc_princ_atend,
			cd_medico_req,
			ie_tipo_guia,
			ie_video,
			ie_auditoria,
			nr_seq_exame,
			nr_seq_proc_princ,
			ie_valor_informado,
			nr_seq_cor_exec,
			cd_conta_contabil,
			cd_centro_custo_receita,
			cd_sequencia_parametro)
		values (nr_atendimento_w,
			dt_entrada_unidade_w,
			cd_proced_calculo_horario_w,
			ie_origem_proced_horario_w,
			dt_procedimento_w,
			dt_conta_w,
			cd_setor_atendimento_w,
			cd_pessoa_fisica_w,
			cd_medico_executor_w,
			CASE WHEN  ie_aplica_qt_proc_calc_w='S' THEN  qt_procedimento_w   ELSE 1 END ,
			clock_timestamp(),
			nm_usuario_p,
			cd_convenio_w,
			cd_categoria_w,
			coalesce(nr_doc_conv_proc_calc_w,nr_doc_convenio_w),
			100,
			100,
			tx_anestesista_w,
			vl_medico_horario_w - vl_medico_w,
			vl_procedimento_horario_w - vl_procedimento_w,
			vl_custo_oper_horario_w - vl_custo_operacional_w,
			vl_anest_horario_w - vl_anestesista_w,
			vl_materiais_horario_w - vl_materiais_w,
			vl_auxiliares_horario_w - vl_auxiliares_w,
			null,
			cd_regra_honorario_w,
			ie_emite_conta_w,
			ie_funcao_medico_w,
			ie_guia_informada_w,
			cd_situacao_glosa_w,
			cd_cgc_prestador_w,
			nr_interno_conta_w,
			nr_seq_proc_calc_w,
			null,
			null,
			nm_usuario_p,
			nr_seq_atepacu_w,
			'N',
			null,
			null,
			ie_video_w,
			'N',
			null,
			nr_sequencia_p,
			'S', 718,
			cd_conta_contabil_w,
			cd_centro_custo_w,
			cd_sequencia_parametro_ww);

			cd_conta_contabil_w	:= '';
			cd_centro_custo_w	:= null;
			cd_sequencia_parametro_ww   := null;

			update	procedimento_paciente
			set	vl_procedimento		= (vl_medico + vl_custo_operacional)
			where	nr_sequencia		= nr_seq_proc_calc_w
			and	vl_procedimento		= 0;

		/*INICIO - lhalves OS 384971 em 24/11/2011 - Obter a guia para o item do criterio horario*/

		if (ie_grava_guia_conta_w	= 'S') then
			nr_doc_conv_proc_calc_w	:= null;

			if (coalesce(ie_tiss_tipo_guia_w::text, '') = '') then /*lhalves OS342409 em 27/09/2011 */
				select	max(ie_entra_conta),
					max(ie_repassa_medico)
				into STRICT	ie_entra_conta_w,
					ie_repassa_medico_w
				from	regra_honorario
				where	cd_regra	= cd_regra_honorario_w;

				ie_tiss_tipo_guia_w	:= tiss_obter_guia_proc(ie_tipo_atendimento_w,
										cd_procedimento_w,
										ie_origem_proced_w,
										ie_entra_conta_w,
										ie_repassa_medico_w,
										null);
			end if;

			SELECT * FROM tiss_obter_guia(	coalesce(ie_tiss_tipo_guia_w,'7'), nr_interno_conta_w, nr_doc_conv_proc_calc_w, 'N', cd_medico_executor_w, cd_cgc_prestador_w, coalesce(cd_regra_honorario_orig_w,cd_regra_honorario_w), null, null, ie_guia_w, null, null, null, cd_setor_atendimento_w, null, null, null, dt_procedimento_w, null, null, nr_seq_proc_calc_w, null, cd_proced_calculo_horario_w, ie_origem_proced_horario_w, null) INTO STRICT nr_doc_conv_proc_calc_w, ie_guia_w;

			if (nr_doc_conv_proc_calc_w IS NOT NULL AND nr_doc_conv_proc_calc_w::text <> '') then
				update	procedimento_paciente
				set	nr_doc_convenio	= nr_doc_conv_proc_calc_w
				where	nr_sequencia	= nr_seq_proc_calc_w;
			end if;

		end if;
		/*FIM - lhalves OS 384971 em 24/11/2011*/

	end if;
	end;
end if;

/* glosar o procedimento quando estiver com valor zerado */

if (ie_valor_informado_w 	= 'N') 	and (coalesce(ie_glosa_w,'L') <> 'W') and (coalesce(ie_glosa_w,'L') <> '3') and (vl_procedimento_w 	= 0) 	then
	begin
	ie_glosa_zerado_w := obter_parametro_geral(3, ie_glosa_zerado_w);

	if (ie_glosa_zerado_w		= 'S') and (ie_manter_zerado_edicao_w	= 'S') then
		begin


		if (ie_origem_proced_w	= 5) then
			begin
			select	count(*)
			into STRICT	qt_reg_preco_w
			from	cbhpm_preco a
			where	a.cd_procedimento	= cd_procedimento_w
			and	a.ie_origem_proced	= ie_origem_proced_w
			and	coalesce(a.dt_vigencia,clock_timestamp() - interval '3650 days') =
				(SELECT max(coalesce(b.dt_vigencia,clock_timestamp() - interval '3650 days'))
					from cbhpm_preco b
					where b.cd_procedimento		= cd_procedimento_w
					and	b.ie_origem_proced	= ie_origem_proced_w
					and	coalesce(b.dt_vigencia,clock_timestamp() - interval '3650 days')	<= dt_conta_w);
			end;
		else
			begin
			select	count(*)
			into STRICT	qt_reg_preco_w
			from	preco_amb a
			where	a.cd_procedimento	= cd_procedimento_w
		  	and	a.cd_edicao_amb		= cd_edicao_amb_w
		  	and coalesce(a.dt_inicio_vigencia,clock_timestamp() - interval '3650 days')	=
				(SELECT max(coalesce(b.dt_inicio_vigencia,clock_timestamp() - interval '3650 days'))
				from preco_amb b
				where b.cd_edicao_amb		= cd_edicao_amb_w
				and	b.cd_procedimento		= cd_procedimento_w
				and	coalesce(b.dt_inicio_vigencia,clock_timestamp() - interval '3650 days')	<= dt_conta_w);
			end;
		end if;



		if (qt_reg_preco_w <> 0) then
			ie_glosa_zerado_w	:= 'N';
		end if;

		end;
	end if;

	if (ie_glosa_zerado_w		= 'S') and (ie_manter_pacote_zerado_w	= 'S') then
		select	count(*)
		into STRICT	qt_reg_w
		from 	pacote_tipo_acomodacao b,
			pacote a
		where	a.nr_seq_pacote		= b.nr_seq_pacote
		and	a.cd_convenio		= cd_convenio_w
		and	b.cd_procedimento	= cd_procedimento_w;

		if (qt_reg_w > 0) then
			ie_glosa_zerado_w	:= 'N';
		end if;

	end if;

	if (ie_glosa_zerado_w	= 'S') and
		((coalesce(ie_glosa_proc_zerado_sus_w,'S') = 'S') or
		((coalesce(ie_glosa_proc_zerado_sus_w,'S') = 'N') and (coalesce(obter_tipo_convenio(cd_convenio_w),0) <> 3))) then
		begin

		/* ricardo 04/11/2006 - os43964

		obter_convenio_particular(cd_estabelecimento_w, cd_convenio_w,cd_categoria_w); */
		SELECT * FROM obter_convenio_particular_pf(cd_estabelecimento_w, cd_convenio_w, cd_pessoa_fisica_w, dt_procedimento_w, cd_convenio_w, cd_categoria_w) INTO STRICT cd_convenio_w, cd_categoria_w;

		select	obter_regra_data_preco('P',cd_convenio_w, dt_entrada_w, dt_conta_w, dt_alta_preco_w, dt_conta_definitiva_w, dt_agenda_integrada_w, dt_periodo_inicial_w, dt_periodo_final_w)
		into STRICT	dt_preco_w
		;

		select obter_regra_preco_filme(cd_convenio_w)
		into STRICT 	ie_aplica_taxa_filme_w
		;


		/*Inicio  344765*/

		if (ie_converte_proc_conv_w	= 'S') and (cd_convenio_w	<> cd_convenio_orig_w) then
			cd_proced_convertido_w	:=0;

			if (coalesce(ie_ordem_converte_proc_w,'EP') = 'EP') then -- Exame de laboratorio / Proc. Interno
				if (nr_seq_exame_w IS NOT NULL AND nr_seq_exame_w::text <> '') then
					if (nr_seq_material_w IS NOT NULL AND nr_seq_material_w::text <> '') then
						select 	max(cd_material_exame)
						into STRICT	cd_material_exame_w
						from	material_exame_lab
						where	nr_sequencia = nr_seq_material_w;
					end if;
					SELECT * FROM obter_exame_lab_convenio(nr_seq_exame_w, cd_convenio_w, cd_categoria_w, ie_tipo_atendimento_w, cd_estabelecimento_w, ie_tipo_convenio_w, nr_seq_proc_interno_w, cd_material_exame_w, cd_plano_w, cd_setor_w, cd_proced_convertido_w, ie_origem_proced_convert_w, ds_erro_w, nr_seq_proc_interno_aux_w, dt_procedimento_w) INTO STRICT cd_setor_w, cd_proced_convertido_w, ie_origem_proced_convert_w, ds_erro_w, nr_seq_proc_interno_aux_w;
				elsif (nr_seq_proc_interno_w IS NOT NULL AND nr_seq_proc_interno_w::text <> '') then
					/* Substituido a procedure obter_proc_tab_interno pela obter_proc_tab_interno_conv
					obter_proc_tab_interno(nr_seq_proc_interno_w,nr_prescricao_w,nr_atendimento_w,nr_interno_conta_w, cd_proced_convertido_w,ie_origem_proced_convert_w);*/
					SELECT * FROM obter_proc_tab_interno_conv(nr_seq_proc_interno_w, cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, cd_plano_w, cd_setor_paciente_w, cd_proced_convertido_w, ie_origem_proced_convert_w, cd_setor_atendimento_w, dt_procedimento_w, cd_tipo_acomodacao_w, null, null, null, null, null, null, null) INTO STRICT cd_proced_convertido_w, ie_origem_proced_convert_w;
				end if;

			elsif (coalesce(ie_ordem_converte_proc_w,'EP') = 'PE') then --  Proc. Interno / Exame de laboratorio
				if (nr_seq_proc_interno_w IS NOT NULL AND nr_seq_proc_interno_w::text <> '') then
					SELECT * FROM obter_proc_tab_interno_conv(nr_seq_proc_interno_w, cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, cd_plano_w, cd_setor_paciente_w, cd_proced_convertido_w, ie_origem_proced_convert_w, cd_setor_atendimento_w, dt_procedimento_w, cd_tipo_acomodacao_w, null, null, null, null, null, null, null) INTO STRICT cd_proced_convertido_w, ie_origem_proced_convert_w;

				elsif (nr_seq_exame_w IS NOT NULL AND nr_seq_exame_w::text <> '') then

					if (nr_seq_material_w IS NOT NULL AND nr_seq_material_w::text <> '') then
						select 	max(cd_material_exame)
						into STRICT	cd_material_exame_w
						from	material_exame_lab
						where	nr_sequencia = nr_seq_material_w;
					end if;
					SELECT * FROM obter_exame_lab_convenio(nr_seq_exame_w, cd_convenio_w, cd_categoria_w, ie_tipo_atendimento_w, cd_estabelecimento_w, ie_tipo_convenio_w, nr_seq_proc_interno_w, cd_material_exame_w, cd_plano_w, cd_setor_w, cd_proced_convertido_w, ie_origem_proced_convert_w, ds_erro_w, nr_seq_proc_interno_aux_w, dt_procedimento_w) INTO STRICT cd_setor_w, cd_proced_convertido_w, ie_origem_proced_convert_w, ds_erro_w, nr_seq_proc_interno_aux_w;
				end if;

			end if;

			if (nr_seq_proc_interno_aux_w > 0) then
				nr_seq_proc_interno_w 	:= nr_seq_proc_interno_aux_w;
			end if;
			if (coalesce(cd_proced_convertido_w,0)	> 0) then
				cd_procedimento_w	:= cd_proced_convertido_w;
				ie_origem_proced_w	:= ie_origem_proced_convert_w;
			end if;
		end if;
		/*Final*/

		CALL Grava_log_preco_pck.set_ie_gravar_log('S');
		SELECT * FROM define_preco_procedimento(cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, dt_preco_w, cd_procedimento_w, cd_tipo_acomodacao_w, ie_tipo_atendimento_w, cd_setor_atendimento_w, cd_medico_executor_w, null, qt_idade_w, nr_seq_exame_w, nr_seq_proc_interno_w, cd_usuario_convenio_w, cd_plano_w, ie_clinica_w, cd_empresa_ref_w, ie_sexo_w, vl_procedimento_w, vl_custo_operacional_w, vl_anestesista_w, vl_medico_w, vl_auxiliares_w, vl_materiais_w, vl_pto_procedimento_w, vl_pto_custo_operac_w, vl_pto_anestesista_w, vl_pto_medico_w, vl_pto_auxiliares_w, vl_pto_materiais_w, qt_porte_anestesico_w, qt_pontos_w, cd_edicao_amb_w, ie_preco_informado_w, nr_seq_ajuste_proc_def_w, nr_sequencia_p, ie_atend_retorno_w, qt_dias_internacao_w, ie_video_w, coalesce(ie_executar_leito_w,'A'), ie_spect_w, cd_cgc_prestador_w, cd_equipamento_w, nr_seq_tipo_acidente_w, cd_especialidade_medica_w, cd_procedencia_w, nr_seq_cobertura_w, nr_seq_classif_atend_w, ie_carater_inter_sus_w, cd_dependente_w, nr_seq_grupo_rec_w, ie_origem_proced_w, nr_seq_origem_w, nr_seq_classif_medico_w, null) INTO STRICT vl_procedimento_w, vl_custo_operacional_w, vl_anestesista_w, vl_medico_w, vl_auxiliares_w, vl_materiais_w, vl_pto_procedimento_w, vl_pto_custo_operac_w, vl_pto_anestesista_w, vl_pto_medico_w, vl_pto_auxiliares_w, vl_pto_materiais_w, qt_porte_anestesico_w, qt_pontos_w, cd_edicao_amb_w, ie_preco_informado_w, nr_seq_ajuste_proc_def_w;
		CALL Grava_log_preco_pck.set_ie_gravar_log('N');

		SELECT * FROM obter_conta_paciente(cd_estabelecimento_w, nr_atendimento_w, cd_convenio_w, cd_categoria_w, nm_usuario_p, dt_procedimento_w, dt_entrada_w, dt_alta_w, nr_doc_convenio_w, cd_setor_atendimento_w, nr_seq_pq_proc_w, dt_acerto_conta_w, nr_interno_conta_w, cd_convenio_calculo_w, cd_categoria_calculo_w) INTO STRICT dt_acerto_conta_w, nr_interno_conta_w, cd_convenio_calculo_w, cd_categoria_calculo_w;

		CALL enviar_comunic_glosa_zerado(nr_sequencia_p,null,nm_usuario_p);

		select	coalesce(max(nr_atendimento), 0)
		into STRICT	nr_atend_conta_w
		from	conta_paciente
		where	nr_interno_conta	= nr_interno_conta_w;

		if (nr_atend_conta_w <> nr_atendimento_w) and (ie_agrupa_conta_case_w = 'N') then
			wheb_mensagem_pck.exibir_mensagem_abort(180955,'NR_ATEND_CONTA='||nr_atend_conta_w||
								';NR_ATENDIMENTO='||nr_atendimento_w||
								';NR_INTERNO_CONTA='||nr_interno_conta_w||
								';CD_ESTAB='||cd_estabelecimento_w||
								';CD_CONVENIO='||cd_convenio_w||
								';CD_CATEGORIA='||cd_categoria_w||
								';NM_USUARIO='||nm_usuario_p||
								';DT_PROCEDIMENTO='||PKG_DATE_FORMATERS.to_varchar(dt_procedimento_w, 'timestamp', WHEB_USUARIO_PCK.GET_CD_ESTABELECIMENTO, nm_usuario_p)||
								';DT_ENTRADA='||PKG_DATE_FORMATERS.to_varchar(dt_entrada_w, 'timestamp', WHEB_USUARIO_PCK.GET_CD_ESTABELECIMENTO, nm_usuario_p)||
								';DT_ALTA='||PKG_DATE_FORMATERS.to_varchar(dt_alta_w, 'timestamp', WHEB_USUARIO_PCK.GET_CD_ESTABELECIMENTO, nm_usuario_p)||
								';NR_DOC_CONVENIO='||nr_doc_convenio_w||
								';CD_SETOR='||cd_setor_atendimento_w||
								';NR_SEQ_PQ_PROC='||nr_seq_pq_proc_w);
			/*O atendimento da conta (' || nr_atend_conta_w || ') e diferente do
			atendimento do proc (' || nr_atendimento_w || ') ! Contate o Administrador do Sistema! (02) '
			|| chr(13) ||' Conta.: ' || nr_interno_conta_w || ' Estab.: ' || cd_estabelecimento_w || ' Conv: ' ||
			cd_convenio_w || ' Cat.: ' || cd_categoria_w ||' Usu.: ' || nm_usuario_p || ' DtProc.: ' ||
			to_char(dt_procedimento_w, 'dd/mm/yyyyhh24:mi:ss') ||chr(13) ||' DtEnt.: ' ||
			to_char(dt_entrada_w, 'dd/mm/yyyy hh24:mi:ss')|| ' DtAlta.: ' ||to_char(dt_alta_w,'dd/mm/yyyy hh24:mi:ss') ||
			' Doc.: ' || nr_doc_convenio_w || ' Setor.: ' ||cd_setor_atendimento_w || ' PQ.: ' ||nr_seq_pq_proc_w*/
		end if;

		end;
	end if;
	end;
end if;

SELECT * FROM obter_taxa_qtde_exec(cd_estabelecimento_w, nr_sequencia_p, cd_convenio_w, cd_categoria_w, dt_conta_w, cd_procedimento_w, ie_origem_proced_w, nr_seq_proc_interno_w, qt_procedimento_w, ie_lado_w, cd_regra_honorario_w, cd_edicao_amb_w, tx_procedimento_w, tx_custo_operacional_ww, tx_medico_ww, tx_auxiliar_w, tx_anestesista_ww) INTO STRICT tx_procedimento_w, tx_custo_operacional_ww, tx_medico_ww, tx_auxiliar_w, tx_anestesista_ww;	
		
select	max(nr_seq_regra_qtde_exec)
into STRICT	nr_seq_regra_qtde_exec_w
from	procedimento_paciente
where	nr_sequencia	= nr_sequencia_p;		
		
if (nr_seq_regra_qtde_exec_w IS NOT NULL AND nr_seq_regra_qtde_exec_w::text <> '')  then		
	select (coalesce(max(ie_regra_valor),'N')),
		max(ie_via_acesso)
	into STRICT 	ie_regra_valor_w, 
		ie_via_acesso_w
	from 	convenio_regra_qtde 
	where 	nr_sequencia = nr_seq_regra_qtde_exec_w;
end if;

if (coalesce(nr_seq_regra_qtde_exec_w::text, '') = '') or (nr_seq_regra_qtde_exec_w IS NOT NULL AND nr_seq_regra_qtde_exec_w::text <> '' AND ie_regra_valor_w = 'N')  then
	begin
	tx_custo_operacional_w 	:= tx_custo_operacional_ww;
	tx_medico_w 		:= tx_medico_ww;
	tx_anestesista_w 	:= tx_anestesista_ww;
	end;
else
	begin
	tx_custo_operacional_w 	:= coalesce(tx_custo_operacional_ww, tx_custo_operacional_w);
	tx_medico_w 		:= coalesce(tx_medico_ww, tx_medico_w);
	tx_anestesista_w 	:= coalesce(tx_anestesista_ww, tx_anestesista_w);
	end;
end if;

ie_taxa_via_acesso_w	:= coalesce(Obter_valor_param_usuario(67, 113, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w),'N');
ie_tx_proc_informado_w	:= coalesce(Obter_valor_param_usuario(67, 385, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w),'N');
if (coalesce(ie_tx_proc_informado_w,'N') = 'S') and (ie_taxa_via_acesso_w = 'N') and (ie_valor_informado_w = 'S') and (coalesce(nr_seq_proc_pacote_w::text, '') = '') then
	tx_procedimento_w	:= tx_proc_original_w;
end if;

vl_medico_original_w:= vl_medico_w;

/* aplicar o percentual sobre os valores */

if (tx_procedimento_w	= 70)		and (ie_origem_proced_w	= 5)		and (cd_area_procedimento_w	= 14)	and (coalesce(ie_aplicar_tx_co_cbhpm_w,'N') = 'N') then
	begin
	/* taxa diferenciada para exames da cbhpm aplica somente no custo operacional demais 100% */

	vl_custo_operacional_w 		:= ((tx_procedimento_w * vl_custo_operacional_w)/100);
	vl_procedimento_w			:= (vl_custo_operacional_w + vl_anestesista_w +
							vl_medico_w + vl_auxiliares_w + vl_materiais_w);
	end;
else
	begin
	vl_custo_operacional_w 		:= ((coalesce(tx_custo_operacional_w, tx_procedimento_w) * vl_custo_operacional_w)/100);
	vl_anestesista_w 		:= ((coalesce(coalesce(tx_anestesista_w, tx_medico_w),tx_procedimento_w) * vl_anestesista_w)/100);
	vl_medico_w 			:= ((coalesce(tx_medico_w,tx_procedimento_w) * vl_medico_w)/100);
	vl_auxiliares_w 		:= ((coalesce(coalesce(tx_auxiliar_w, tx_medico_w),tx_procedimento_w) * vl_auxiliares_w)/100);
	if (vl_anestesista_w > 0) then
		tx_anestesista_w := coalesce(coalesce(tx_anestesista_w, tx_medico_w),tx_procedimento_w);
	end if;
	if (ie_aplica_taxa_filme_w = 'S') then
		vl_materiais_w 		:= ((tx_procedimento_w * vl_materiais_w)/100);
	end if;
	vl_procedimento_w			:= ((tx_procedimento_w * vl_procedimento_w)/100);
	if (ie_origem_proced_w = 6) then
		vl_custo_operacional_w	:= round((vl_custo_operacional_w)::numeric,2);
		vl_anestesista_w	:= round((vl_anestesista_w)::numeric,2);
		vl_medico_w			:= round((vl_medico_w)::numeric,2);
		vl_auxiliares_w		:= round((vl_auxiliares_w)::numeric,2);
		vl_procedimento_w	:= round((vl_procedimento_w)::numeric,2);
	end if;
	end;
end if;

/* ROTINA DE ARREDONDAMENTO, USADO PELO CONVENIO IPE   --->>    INICIO  <<----- */

begin
select 	coalesce(max(ie_regra_arredondamento_tx),'N'),
	coalesce(max(ie_ordem_arred_serv),'MA')
into STRICT	ie_regra_arredondamento_tx_w,
	ie_ordem_arred_serv_w
from 	parametro_faturamento
where 	cd_estabelecimento = cd_estabelecimento_W;
exception
	when others then
		ie_regra_arredondamento_tx_w:= 'N';
end;

if	(ie_regra_arredondamento_tx_w = 'S' AND ie_arred_so_glosa_perc_w = 'N') or
	((ie_regra_arredondamento_tx_w = 'S')and (cd_situacao_glosa_w <> 8)and (ie_arred_so_glosa_perc_w = 'S'))then

	select	max(ie_arredondamento)
	into STRICT	ie_tipo_rounded_w
	from	convenio_estabelecimento
	where	cd_convenio	  	= cd_convenio_w
	and	cd_estabelecimento	= cd_estabelecimento_W;

	if (ie_tipo_rounded_w = 'R') then

		select 	obter_regra_arredondamento(cd_convenio_w, cd_categoria_w, cd_procedimento_w, ie_origem_proced_w, cd_estabelecimento_w,
				dt_procedimento_w, 'P', 1)
		into STRICT	ie_tipo_rounded_w
		;

		ie_regra_arred_IPE_w:= 'S';

	end if;

	if (ie_tipo_rounded_w IS NOT NULL AND ie_tipo_rounded_w::text <> '') and (ie_regra_arred_IPE_w = 'S') and (ie_valor_informado_w = 'N') then

		if (coalesce(ie_ordem_arred_serv_w,'MA') = 'MA') then /* Multiplicar pela qtde e depois aplicar o arredondamento */
			vl_custo_operacional_w		:= (vl_custo_operacional_w * qt_procedimento_w);
			vl_anestesista_w		:= (vl_anestesista_w * qt_procedimento_w);
			vl_medico_w			:= (vl_medico_w * qt_procedimento_w);
			vl_materiais_w			:= (vl_materiais_w * qt_procedimento_w);
			vl_auxiliares_w			:= (vl_auxiliares_w * qt_procedimento_w);
			vl_procedimento_w		:= (vl_procedimento_w * qt_procedimento_w);

			vl_procedimento_w := arredondamento(vl_procedimento_w, 2, ie_tipo_rounded_w);
			vl_custo_operacional_w := arredondamento(vl_custo_operacional_w, 2, ie_tipo_rounded_w);
			vl_anestesista_w := arredondamento(vl_anestesista_w, 2, ie_tipo_rounded_w);
			vl_medico_w := arredondamento(vl_medico_w, 2, ie_tipo_rounded_w);
			vl_auxiliares_w := arredondamento(vl_auxiliares_w, 2, ie_tipo_rounded_w);
			vl_materiais_w := arredondamento(vl_materiais_w, 2, ie_tipo_rounded_w);

		elsif (coalesce(ie_ordem_arred_serv_w,'MA') = 'AM') then /* Aplicar o arredondamento  e depois multiplicar pela quantidade */
			vl_procedimento_w := arredondamento(vl_procedimento_w, 2, ie_tipo_rounded_w);
			vl_custo_operacional_w := arredondamento(vl_custo_operacional_w, 2, ie_tipo_rounded_w);
			vl_anestesista_w := arredondamento(vl_anestesista_w, 2, ie_tipo_rounded_w);
			vl_medico_w := arredondamento(vl_medico_w, 2, ie_tipo_rounded_w);
			vl_auxiliares_w := arredondamento(vl_auxiliares_w, 2, ie_tipo_rounded_w);
			vl_materiais_w := arredondamento(vl_materiais_w, 2, ie_tipo_rounded_w);

			vl_custo_operacional_w		:= (vl_custo_operacional_w * qt_procedimento_w);
			vl_anestesista_w		:= (vl_anestesista_w * qt_procedimento_w);
			vl_medico_w			:= (vl_medico_w * qt_procedimento_w);
			vl_materiais_w			:= (vl_materiais_w * qt_procedimento_w);
			vl_auxiliares_w			:= (vl_auxiliares_w * qt_procedimento_w);
			vl_procedimento_w		:= (vl_procedimento_w * qt_procedimento_w);

		end if;
	else
		ie_regra_arred_IPE_w:= 'N';
	end if;

end if;
/* ROTINA DE ARREDONDAMENTO, USADO PELO CONVENIO IPE   --->>    FIM  <<----- */



/* aplicar a quantidade informada sobre os valores */

if (coalesce(ie_regra_arred_IPE_w,'N') = 'N') then
	begin
	vl_custo_operacional_w		:= (vl_custo_operacional_w * qt_procedimento_w);
	vl_anestesista_w		:= (vl_anestesista_w * qt_procedimento_w);
	vl_medico_w			:= (vl_medico_w * qt_procedimento_w);
	vl_materiais_w			:= (vl_materiais_w * qt_procedimento_w);
	vl_auxiliares_w			:= (vl_auxiliares_w * qt_procedimento_w);
	vl_procedimento_w		:= (vl_procedimento_w * qt_procedimento_w);
	end;
end if;

/* estes valores serao obtidos na procedimento participante */

vl_anestesista_partic_w			:= vl_anestesista_w;
vl_medico_partic_w			:= vl_medico_w;
vl_auxiliar_partic_w			:= vl_auxiliares_w;
vl_anestesista_w			:= 0;
vl_auxiliares_w				:= 0;

-- OS 215523
if	((coalesce(tx_medico_w,100) = 0) and (coalesce(tx_auxiliar_w,100) = 100) and (coalesce(tx_anestesista_w,100) = 100)) then
	vl_medico_partic_w:= (vl_medico_original_w * qt_procedimento_w); --765415
elsif	((coalesce(tx_medico_w,100) = 0) and (coalesce(tx_auxiliar_w,100) = 70) and (coalesce(tx_anestesista_w,100) = 70)) then
	vl_medico_partic_w:= round((vl_medico_original_w * 0.7)::numeric,2);
elsif	((coalesce(tx_medico_w,100) = 0) and (coalesce(tx_auxiliar_w,100) = 50) and (coalesce(tx_anestesista_w,100) = 50)) then
	vl_medico_partic_w:= round((vl_medico_original_w * 0.5)::numeric,2);
end if;



/* felipe martini os97755 em 01/07/2008 */

if (qt_procedimento_w < 0 ) and
	((ie_auditoria_w	in ('A','S')) or (nr_seq_cor_exec_w	= 369)) and
	((ie_preco_custo_w = 'N') or (coalesce(nr_seq_ajuste_proc_ww, 0) <> 0)) then
	vl_medico_conta_w 			:= 0;
	if (ie_conta_honorario_w 		= 'S') 	then
		vl_medico_conta_w 		:= vl_medico_w;
	end if;
	vl_procedimento_w 		:= (vl_custo_operacional_w + vl_anestesista_w +
                     			vl_medico_conta_w + vl_materiais_w + vl_auxiliares_w + vl_adic_proc_w) *tx_adic_procedimento_w;
end if;

/* ie_calcula_honorario  obtido da regra honorario */


/* s-entra na conta n-nao entra na conta a-emite em anexo na conta nova */

if (ie_calcula_honorario_w 	= 'N')	then
	begin
	vl_medico_w 			:= 0;
	vl_procedimento_w		:= 0;
/* 	incluido por marcus em 22/10/2002 outros procedimentos nao honorarios */

	vl_custo_operacional_w		:= 0;
	vl_anestesista_w		:= 0;
	vl_auxiliares_w			:= 0;
	vl_materiais_w			:= 0;
	end;
end if;

/* ie_conta_honorario = ie_entra_conta da regra honorario */


/* s-entra na conta n-nao entra na conta a-emite em anexo na conta nova */


/* t-todos os valores devem estar fora da conta (calcula valor, porem nao soma na conta) */

vl_medico_conta_w 			:= 0;
if (ie_conta_honorario_w 		= 'S') 	then
	vl_medico_conta_w 		:= vl_medico_w;
end if;
if (ie_conta_honorario_w 		= 'T') 	then
	vl_procedimento_w		:= 0;
elsif (coalesce(cd_proced_calculo_horario_w::text, '') = '') and
	((vl_custo_operacional_w  > 0)	or
/*	 (vl_anestesista_w > 0) 		or 	felipe martini os99218 em 07/07/2008*/

	(vl_anestesista_partic_w > 0) 	or
	((vl_medico_w > 0) or (vl_medico_w < 0) or (vl_medico_original_w > 0 AND vl_medico_w = 0)) or -- Fabricio em 13/08/2009 OS 159693 (Pro - Integracao HORUS)
	(vl_auxiliares_w > 0) 		or (vl_materiais_w > 0)) 		then
	begin
	if (ie_valor_filme_apos_adic_hor_w = 'S') then --OS 271320
		begin
		vl_procedimento_w := ((vl_custo_operacional_w + vl_anestesista_w +
                       			vl_medico_conta_w  + vl_auxiliares_w + vl_adic_proc_w) * tx_adic_procedimento_w + vl_materiais_w);
		end;
	else
		vl_procedimento_w := (vl_custo_operacional_w + vl_anestesista_w +
                       			vl_medico_conta_w + vl_materiais_w + vl_auxiliares_w + vl_adic_proc_w) * tx_adic_procedimento_w;
	end if;
	if (ie_tipo_rounded_w IS NOT NULL AND ie_tipo_rounded_w::text <> '') and (coalesce(ie_regra_arred_IPE_w,'N') = 'S') and (ie_valor_informado_w = 'N') then
		vl_procedimento_w := arredondamento(vl_procedimento_w, 2, ie_tipo_rounded_w);
	end if;
	end;
elsif (cd_proced_calculo_horario_w IS NOT NULL AND cd_proced_calculo_horario_w::text <> '') and -- Somente para os casos onde tem procedimento para o calculo adicional
	((vl_custo_operacional_w  > 0)	or (vl_anestesista_partic_w > 0) 	or
	((vl_medico_w > 0) or (vl_medico_w < 0) or (vl_medico_original_w > 0 AND vl_medico_w = 0)) or (vl_auxiliares_w > 0) 		or (vl_materiais_w > 0)) 		then
	vl_procedimento_w 		:= (vl_custo_operacional_w + vl_anestesista_w +
                       			vl_medico_conta_w + vl_materiais_w + vl_auxiliares_w);
end if;

if (cd_cgc_honorario_w IS NOT NULL AND cd_cgc_honorario_w::text <> '') then
	cd_cgc_prestador_w		:= cd_cgc_honorario_w;
end if;
/* obter estrutura de emissao da conta paciente nova */

cd_estrutura_w				:= 0;
cd_estrutura_honor_w			:= 0;

SELECT * FROM obter_estrut_conta_proc(
			coalesce(cd_convenio_parametro_w,cd_convenio_w), cd_procedimento_w, ie_origem_proced_w, cd_plano_w, cd_medico_executor_w, cd_regra_honorario_w, nr_sequencia_p, cd_setor_atendimento_w, ie_tipo_atendimento_w, cd_estabelecimento_w, cd_especialidade_medica_w, coalesce(cd_categoria_parametro_w,cd_categoria_w), dt_procedimento_w, cd_cgc_prestador_w, cd_estrutura_w, cd_estrutura_honor_w) INTO STRICT cd_estrutura_w, cd_estrutura_honor_w;
ie_emite_conta_w				:= null;
ie_emite_conta_honor_w			:= null;
if (cd_estrutura_w	> 0) then
	ie_emite_conta_w	:= cd_estrutura_w;
end if;
if (cd_estrutura_honor_w	> 0) then
	ie_emite_conta_honor_w	:= cd_estrutura_honor_w;
end if;

/* ataulizar valor do ponto(ch) do procedimento */

if (vl_pto_medico_w	> 0) or (vl_pto_anestesista_w > 0) then
	begin
	CALL atualizar_ponto_amb(nr_sequencia_p,
			nm_usuario_p,
			cd_convenio_w,
			cd_categoria_w,
                  (vl_pto_procedimento_w * qt_procedimento_w),
                  (vl_pto_custo_operac_w * qt_procedimento_w),
                  (vl_pto_anestesista_w * qt_procedimento_w),
                  (vl_pto_medico_w * qt_procedimento_w),
                  (vl_pto_auxiliares_w * qt_procedimento_w),
                  (vl_pto_materiais_w * qt_procedimento_w));
	end;
end if;
/* tratar retorno do paciente */

if (nr_atend_original_w	> 0) 		and (ie_valor_informado_w	<> 'S') 	then
	begin

	select	max(dt_entrada)
	into STRICT	dt_entrada_original_w
	from	atendimento_paciente
	where	nr_atendimento = nr_atend_original_w;

	tx_retorno_w := obter_regra_retorno(cd_estabelecimento_w, cd_convenio_calculo_w, cd_categoria_calculo_w, cd_procedimento_w, ie_origem_proced_w, dt_conta_w, ie_tipo_atendimento_w, cd_setor_atendimento_w, cd_medico_executor_w, tx_retorno_w, round(dt_entrada_w - dt_entrada_original_w));

	vl_procedimento_w	:= (vl_procedimento_w 		* tx_retorno_w);
	vl_custo_operacional_w	:= (vl_custo_operacional_w	* tx_retorno_w);
	vl_anestesista_w	:= (vl_anestesista_w 		* tx_retorno_w);
	vl_medico_w		:= (vl_medico_w			* tx_retorno_w);
	vl_auxiliares_w		:= (vl_auxiliares_w 		* tx_retorno_w);
	vl_materiais_w		:= (vl_materiais_w 		* tx_retorno_w);
	end;
end if;

/* tratar valor informado */

if (ie_valor_informado_w = 'S') then
	begin
	vl_custo_operacional_w	:= vl_custo_oper_orig_w;
	vl_anestesista_w	:= vl_anestesista_orig_w;
	vl_medico_w		:= vl_medico_orig_w;
	vl_materiais_w		:= vl_materiais_orig_w;
	vl_auxiliares_w		:= vl_auxiliares_orig_w;
	vl_procedimento_w	:= vl_proc_orig_w;

	if (ie_resp_cred_glosa_perc_w = 'S') and (cd_situacao_glosa_w = 0) and (nr_seq_proc_princ_w > 0) then

		select	max(ie_responsavel_credito)
		into STRICT	ie_resp_credito_proc_princ_w
		from	procedimento_paciente
		where	nr_sequencia = nr_seq_proc_princ_w;

		if (coalesce(ie_resp_credito_proc_princ_w,'0') <>  coalesce(cd_regra_honorario_w,'0')) then

			if (ie_conta_honorario_w 	= 'S') then

				vl_procedimento_w := vl_custo_oper_orig_w + vl_anestesista_orig_w + vl_medico_orig_w +
							vl_materiais_orig_w + vl_auxiliares_orig_w;

			elsif (ie_conta_honorario_w 	= 'N') then

				vl_procedimento_w := vl_custo_oper_orig_w + vl_anestesista_orig_w +
							vl_materiais_orig_w + vl_auxiliares_orig_w;

			end if;
		end if;

	end if;

	end;
end if;

/* atualizar impostos e taxas dos honorarios medicos */

if (coalesce(cd_medico_executor_w,'X') <> 'X') 	and (vl_medico_w		> 0)	 		then
	begin
	CALL atualizar_taxa_trib_honor(nr_sequencia_p,
					0,
					cd_procedimento_w,
					ie_origem_proced_w,
					cd_medico_executor_w,
					ie_funcao_medico_w,
					vl_medico_w,

					0,
					0,
     					cd_convenio_calculo_w,
     					cd_categoria_calculo_w,
					cd_setor_atendimento_w,
					ie_tipo_atendimento_w,
					nm_usuario_p,
					1);
	end;
end if;

if (tx_adic_procedimento_w	> 1) then
	tx_hora_extra_w	:= tx_adic_procedimento_w;
else
	tx_hora_extra_w	:= tx_adic_medico_w;
end if;


/* fabricio em 25/06/2008	os 98081 */

select 	coalesce(max(cd_proc_referencia),0),
	coalesce(max(ie_origem_proc_refer),1),
	coalesce(max(vl_anestesista),0),
	coalesce(max(vl_auxiliares),0),
	coalesce(max(tx_ajuste),0),
	coalesce(max(nr_auxiliares),0)
into STRICT	cd_proc_referencia_w,
	ie_origem_proc_refer_w,
	vl_anestesista_ww,
	vl_auxiliares_ww,
	tx_ajuste_w,
	nr_auxiliares_neg_w
from 	regra_ajuste_proc
where 	nr_sequencia = nr_seq_ajuste_proc_ww;

select	count(*)
into STRICT	qt_reg_ajuste_item_ref_w
from	regra_ajuste_item_ref
where	nr_seq_regra_ajuste_proc = nr_seq_ajuste_proc_ww;

if (vl_anestesista_ww	<> 0) then
	vl_anestesista_ww	:= vl_anestesista_ww * qt_procedimento_w;
end if;

if (vl_auxiliares_ww	<> 0) then
	vl_auxiliares_ww	:= vl_auxiliares_ww * qt_procedimento_w;
end if;

if (tx_ajuste_w	<> 0) then
	vl_anestesista_ww	:= vl_anestesista_ww * tx_ajuste_w;
	vl_auxiliares_ww	:= vl_auxiliares_ww * tx_ajuste_w;
end if;

if (ie_adic_hor_partic_w	= 'S') then
	vl_anestesista_ww	:= vl_anestesista_ww * tx_adic_anestesista_w;
	vl_auxiliares_ww	:= vl_auxiliares_ww * tx_adic_auxiliares_w;
end if;

if (cd_proc_referencia_w > 0) or (qt_reg_ajuste_item_ref_w > 0) then

	if (cd_proc_referencia_w > 0) then
	
		if (ie_glosa_w = 'U') then -- Mesma prescricao
			select 	count(*)
			into STRICT	qt_proc_ref_w
			from 	procedimento_paciente
			where 	cd_procedimento = cd_proc_referencia_w
			and 	ie_origem_proced = ie_origem_proc_refer_w
			and 	nr_prescricao = coalesce(nr_prescricao_w,0)
			and 	nr_interno_conta = nr_interno_conta_w
			and 	coalesce(nr_prescricao,0) > 0
			and	nr_sequencia <> nr_sequencia_p
			and 	coalesce(cd_motivo_exc_conta::text, '') = '';
		elsif (ie_glosa_w = '5') then -- Mesmo dia
			select 	count(*)
			into STRICT	qt_proc_ref_w
			from 	procedimento_paciente
			where 	cd_procedimento = cd_proc_referencia_w
			and 	ie_origem_proced = ie_origem_proc_refer_w
			and 	nr_interno_conta = nr_interno_conta_w
			and	ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_procedimento) = ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_procedimento_w)
			and	nr_sequencia <> nr_sequencia_p
			and 	coalesce(cd_motivo_exc_conta::text, '') = '';
		else
			select 	count(*)
			into STRICT	qt_proc_ref_w
			from 	procedimento_paciente
			where 	cd_procedimento = cd_proc_referencia_w
			and 	ie_origem_proced = ie_origem_proc_refer_w
			and 	nr_interno_conta = nr_interno_conta_w
			and	nr_sequencia <> nr_sequencia_p
			and 	coalesce(cd_motivo_exc_conta::text, '') = '';
		end if;
		
	else
	
		qt_proc_ref_w	:= 0;
	
		open C05;
		loop
		fetch C05 into	
			cd_mat_item_ref_w,
			cd_proc_item_ref_w,
			ie_origem_proc_item_ref_w;
		EXIT WHEN NOT FOUND; /* apply on C05 */
			begin
			
			if (qt_proc_ref_w = 0) then
			
				if (ie_glosa_w = 'U') then -- Mesma prescricao
					if (coalesce(cd_mat_item_ref_w,0) > 0) then
						select 	count(*)
						into STRICT	qt_proc_ref_w
						from 	material_atend_paciente
						where 	cd_material = cd_mat_item_ref_w
						and 	nr_prescricao = coalesce(nr_prescricao_w,0)
						and 	nr_interno_conta = nr_interno_conta_w
						and 	coalesce(nr_prescricao,0) > 0
						and 	coalesce(cd_motivo_exc_conta::text, '') = '';
					elsif (coalesce(cd_proc_item_ref_w,0) > 0) then
						select 	count(*)
						into STRICT	qt_proc_ref_w
						from 	procedimento_paciente
						where 	cd_procedimento = cd_proc_item_ref_w
						and 	ie_origem_proced = ie_origem_proc_item_ref_w
						and 	nr_prescricao = coalesce(nr_prescricao_w,0)
						and 	nr_interno_conta = nr_interno_conta_w
						and 	coalesce(nr_prescricao,0) > 0
						and	nr_sequencia <> nr_sequencia_p
						and 	coalesce(cd_motivo_exc_conta::text, '') = '';
					end if;
				elsif (ie_glosa_w = '5') then -- Mesmo dia
					if (coalesce(cd_mat_item_ref_w,0) > 0) then
						select 	count(*)
						into STRICT	qt_proc_ref_w
						from 	material_atend_paciente
						where 	cd_material = cd_mat_item_ref_w
						and 	nr_interno_conta = nr_interno_conta_w
						and	ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_atendimento) = ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_procedimento_w)
						and 	coalesce(cd_motivo_exc_conta::text, '') = '';
					elsif (coalesce(cd_proc_item_ref_w,0) > 0) then
						select 	count(*)
						into STRICT	qt_proc_ref_w
						from 	procedimento_paciente
						where 	cd_procedimento = cd_proc_item_ref_w
						and 	ie_origem_proced = ie_origem_proc_item_ref_w
						and 	nr_interno_conta = nr_interno_conta_w
						and	ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_procedimento) = ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_procedimento_w)
						and	nr_sequencia <> nr_sequencia_p
						and 	coalesce(cd_motivo_exc_conta::text, '') = '';
					end if;
				else
					if (coalesce(cd_mat_item_ref_w,0) > 0) then
						select 	count(*)
						into STRICT	qt_proc_ref_w
						from 	material_atend_paciente
						where 	cd_material = cd_mat_item_ref_w
						and 	nr_interno_conta = nr_interno_conta_w
						and 	coalesce(cd_motivo_exc_conta::text, '') = '';
					elsif (coalesce(cd_proc_item_ref_w,0) > 0) then
						select 	count(*)
						into STRICT	qt_proc_ref_w
						from 	procedimento_paciente
						where 	cd_procedimento = cd_proc_item_ref_w
						and 	ie_origem_proced = ie_origem_proc_item_ref_w
						and 	nr_interno_conta = nr_interno_conta_w
						and	nr_sequencia <> nr_sequencia_p
						and 	coalesce(cd_motivo_exc_conta::text, '') = '';
					end if;
				end if;
			
			end if;
			
			end;
		end loop;
		close C05;
	
	end if;

	if (ie_glosa_w = 'J') then

		if (qt_proc_ref_w = 0) then

			select	max(cd_motivo_exc_conta)
			into STRICT	cd_motivo_exc_conta_w
			from	parametro_faturamento
			where	cd_estabelecimento	= cd_estabelecimento_w;

			nr_seq_conta_origem_w		:= nr_interno_conta_w;
			nr_interno_conta_w		:= null;
			cd_motivo_exc_conta_w		:= cd_motivo_exc_conta_w;

		end if;

	end if;

	if (ie_glosa_w = 'N') then

		if (qt_proc_ref_w > 0) then

			select	max(cd_motivo_exc_conta)
			into STRICT	cd_motivo_exc_conta_w
			from	parametro_faturamento
			where	cd_estabelecimento	= cd_estabelecimento_w;

			nr_seq_conta_origem_w		:= nr_interno_conta_w;
			nr_interno_conta_w		:= null;
			cd_motivo_exc_conta_w		:= cd_motivo_exc_conta_w;

		end if;

	end if;
	
	if (ie_glosa_w = '2') then
	
		if (qt_proc_ref_w = 0) then

			select	sum(qt_item_conta)
			into STRICT	qt_item_conta_w
			from (SELECT	count(*) qt_item_conta
				from	procedimento_paciente
				where	nr_interno_conta = nr_interno_conta_w
				
union all

				SELECT	count(*) qt_item_conta
				from	material_atend_paciente
				where	nr_interno_conta = nr_interno_conta_w	) alias5;
			
			if (qt_item_conta_w = 0) then
				begin
					delete	from conta_paciente
					where	nr_interno_conta = nr_interno_conta_w;
				exception
					when others then
					nr_interno_conta_w	:= nr_interno_conta_w;
				end;
			end if;
		
			SELECT * FROM obter_convenio_particular_pf(cd_estabelecimento_w, cd_convenio_w, cd_pessoa_fisica_w, dt_procedimento_w, cd_convenio_w, cd_categoria_w) INTO STRICT cd_convenio_w, cd_categoria_w;
		
			SELECT * FROM obter_conta_paciente(cd_estabelecimento_w, nr_atendimento_w, cd_convenio_w, cd_categoria_w, nm_usuario_p, dt_procedimento_w, dt_entrada_w, dt_alta_w, nr_doc_convenio_w, cd_setor_atendimento_w, nr_seq_pq_proc_w, dt_acerto_conta_w, nr_interno_conta_w, cd_convenio_calculo_w, cd_categoria_calculo_w) INTO STRICT dt_acerto_conta_w, nr_interno_conta_w, cd_convenio_calculo_w, cd_categoria_calculo_w;
		
		end if;
	
	end if;

	if (ie_glosa_w = 'U') then -- Mesma prescricao
		if (qt_proc_ref_w > 0) then

			select	max(cd_motivo_exc_conta)
			into STRICT	cd_motivo_exc_conta_w
			from	parametro_faturamento
			where	cd_estabelecimento	= cd_estabelecimento_w;

			nr_seq_conta_origem_w		:= nr_interno_conta_w;
			nr_interno_conta_w		:= null;
			cd_motivo_exc_conta_w		:= cd_motivo_exc_conta_w;

		end if;

	end if;
	
	if (ie_glosa_w = '5') then
		begin
	
		if (qt_proc_ref_w > 0) then
			select	max(cd_motivo_exc_conta)
			into STRICT	cd_motivo_exc_conta_w
			from	parametro_faturamento
			where	cd_estabelecimento	= cd_estabelecimento_w;

			nr_seq_conta_origem_w		:= nr_interno_conta_w;
			nr_interno_conta_w		:= null;
			cd_motivo_exc_conta_w		:= cd_motivo_exc_conta_w;
		end if;
		
		end;
	end if;
	
	if (ie_glosa_w = 'O') then -- Zerar somente se proced referencia em conta
		
		if (qt_proc_ref_w > 0) then		
			vl_procedimento_w		:= 0;
			vl_custo_operacional_w		:= 0;
			vl_anestesista_w		:= 0;
			vl_medico_w			:= 0;
			vl_auxiliares_w			:= 0;
			vl_materiais_w			:= 0;
		end if;
		
	end if;

	if (qt_proc_ref_w = 0) and (ie_glosa_w not in ('J','N','O')) then
		ie_glosa_w:= 'L';
	end if;
end if;

/*      tratar casos em que o convenio nao paga e portanto devem ser zerados */

if (ie_glosa_w = 'Z') then
	select	max(cd_motivo_exc_conta)
	into STRICT	cd_motivo_exc_conta_w
	from	parametro_faturamento
	where	cd_estabelecimento	= cd_estabelecimento_w;
	nr_seq_conta_origem_w		:= nr_interno_conta_w;
	nr_interno_conta_w		:= null;
	dt_acerto_conta_w		:= null;
	vl_procedimento_w		:= 0;
	vl_custo_operacional_w	:= 0;
	vl_anestesista_w		:= 0;
	vl_medico_w			:= 0;
	vl_auxiliares_w		:= 0;
	vl_materiais_w		:= 0;
end if;

/* ricardo 29/01/2007 - zerar o item e deixar na propria conta */

if (ie_glosa_w = 'H') then
	vl_procedimento_w		:= 0;
	vl_custo_operacional_w		:= 0;
	vl_anestesista_w		:= 0;
	vl_medico_w			:= 0;
	vl_auxiliares_w			:= 0;
	vl_materiais_w			:= 0;
	ie_valor_informado_w		:= 'S';
end if;

/*      tratar casos em que o se deseja excluir o servico da conta com os valores calculados */

if (ie_glosa_w = 'E') and
	((cd_situacao_glosa_ww = 0 AND ie_verifica_glosa_w = 'S') or (ie_verifica_glosa_w = 'N')) then
	nr_seq_conta_origem_w	:= nr_interno_conta_w;
	cd_motivo_exc_conta_w	:= cd_motivo_exc_conta_ww;
elsif (ie_glosa_w = 'E') and (cd_situacao_glosa_ww = 8) and (ie_verifica_glosa_w = 'S') then
	cd_situacao_glosa_w := cd_situacao_glosa_ww;
end if;

/*      atualizar o procedimento do paciente com os valores */

if (ie_valor_informado_w = 'N') and (coalesce(ie_preco_informado_glosa_w,'N')	= 'S') and (coalesce(vl_negociado_glosa_w,0) > 0) and (ie_preco_inf_glosa_proc_w = 'S') and (ie_glosa_w <> 'L') then
	begin
	vl_procedimento_w 	:= vl_negociado_glosa_w * qt_procedimento_w;
	vl_soma_proc_w		:= (vl_custo_operacional_w + vl_medico_w +
						   vl_auxiliares_w + vl_anestesista_w);
	if (vl_soma_proc_w = 0) then
		pr_ajuste_w		:= 1;
	else
		pr_ajuste_w		:= vl_negociado_glosa_w / vl_soma_proc_w;
	end if;
	vl_medico_w 		:= vl_medico_w * pr_ajuste_w;
	vl_anestesista_w 	:= vl_anestesista_w * pr_ajuste_w;
	vl_auxiliares_w 	:= vl_auxiliares_w * pr_ajuste_w;
	vl_custo_operacional_w 	:= vl_negociado_glosa_w - vl_medico_w - vl_auxiliares_w -
				   vl_anestesista_w;

	end;
end if;

/* felipe - 09/04/2007 - os53883 */

if (dt_conta_w	< dt_entrada_w) then
	dt_conta_w	:= dt_entrada_w;
end if;

if (ie_glosa_w	= 'F') then
	ie_valor_informado_w	:= 'S';
end if;

if (ie_atualiza_func_medico_w	= 'R') then
	SELECT * FROM obter_proced_espec_medica(	cd_estabelecimento_w, cd_convenio_w, cd_procedimento_w, ie_origem_proced_w, cd_regra_honorario_w, ie_emite_conta_w, ie_emite_conta_honor_w, ie_clinica_w, cd_setor_atendimento_w, cd_especialidade_medica_w, ie_funcao_medico_w, cd_medico_executor_w, nr_seq_proc_interno_w, ie_tipo_atendimento_w) INTO STRICT cd_especialidade_medica_w, ie_funcao_medico_w;
end if;
RAISE NOTICE 'ie_grava_guia_conta_w=%', ie_grava_guia_conta_w;
if (ie_grava_guia_conta_w	= 'S') then
	nr_doc_convenio_w	:= null;

	if (coalesce(ie_tiss_tipo_guia_w::text, '') = '') then /*lhalves OS342409 em 27/09/2011 */
		select	max(ie_entra_conta),
			max(ie_repassa_medico)
		into STRICT	ie_entra_conta_w,
			ie_repassa_medico_w
		from	regra_honorario
		where	cd_regra	= cd_regra_honorario_w;

		ie_tiss_tipo_guia_w	:= tiss_obter_guia_proc(ie_tipo_atendimento_w,
								cd_procedimento_w,
								ie_origem_proced_w,
								ie_entra_conta_w,
								ie_repassa_medico_w,
								null);
	end if;

	SELECT * FROM tiss_obter_guia(	coalesce(ie_tiss_tipo_guia_w,'7'), nr_interno_conta_w, nr_doc_convenio_w, 'N', cd_medico_executor_w, cd_cgc_prestador_w, coalesce(cd_regra_honorario_orig_w,cd_regra_honorario_w), null, null, ie_guia_w, null, null, null, cd_setor_atendimento_w, null, nr_prescricao_w, null, dt_procedimento_w, null, null, nr_sequencia_p, null, cd_procedimento_w, ie_origem_proced_w, null) INTO STRICT nr_doc_convenio_w, ie_guia_w;

end if;

if (cd_centro_custo_w = 0) then
	cd_centro_custo_w	:= null;
end if;

-- OS 188251 e 199900
vl_filme_original_w:= vl_materiais_w;
SELECT * FROM Atualiza_regra_filme_conv(cd_estabelecimento_w, nr_sequencia_p, cd_convenio_w, nm_usuario_p, vl_materiais_w, nr_seq_regra_filme_w) INTO STRICT vl_materiais_w, nr_seq_regra_filme_w;
if (coalesce(vl_materiais_w,0) <> coalesce(vl_filme_original_w,0)) then
	vl_procedimento_w:= vl_procedimento_w - vl_filme_original_w;
end if;

if (ie_glosa_w = '3') and (vl_procedimento_w = 0) then

	select	sum(qt_item_conta)
	into STRICT	qt_item_conta_w
	from (SELECT	count(*) qt_item_conta
		from	procedimento_paciente
		where	nr_interno_conta = nr_interno_conta_w
		
union all

		SELECT	count(*) qt_item_conta
		from	material_atend_paciente
		where	nr_interno_conta = nr_interno_conta_w	) alias5;
	
	if (qt_item_conta_w = 0) then
		begin
			delete	from conta_paciente
			where	nr_interno_conta = nr_interno_conta_w;
		exception
			when others then
			nr_interno_conta_w	:= nr_interno_conta_w;
		end;
	end if;
	
	cd_convenio_w	:= coalesce(cd_convenio_glosa_ww, cd_convenio_w);
	cd_categoria_w	:= coalesce(cd_categoria_glosa_ww, cd_categoria_w);

	SELECT * FROM obter_conta_paciente(cd_estabelecimento_w, nr_atendimento_w, cd_convenio_w, cd_categoria_w, nm_usuario_p, dt_procedimento_w, dt_entrada_w, dt_alta_w, nr_doc_convenio_w, cd_setor_atendimento_w, nr_seq_pq_proc_w, dt_acerto_conta_w, nr_interno_conta_w, cd_convenio_calculo_w, cd_categoria_calculo_w) INTO STRICT dt_acerto_conta_w, nr_interno_conta_w, cd_convenio_calculo_w, cd_categoria_calculo_w;

end if;

select	coalesce(max(ie_tipo_convenio),0),
	max(ie_classif_contabil)
into STRICT	ie_tipo_convenio_aux2_w,
	ie_classif_convenio_w
from	convenio
where	cd_convenio	= cd_convenio_w;

/* obter contas de receita do procedimento NOVO LOcal de Chamada OS 203370*/

begin

if (coalesce(nr_seq_proc_pacote_w,0) <> 0) then
	ie_regra_pacote_ctb_w	:= 'S';
end if;
if (ie_tipo_convenio_w = 3) and (ie_origem_proced_w <> 7) then

	begin
	/*APAC*/

	ie_complexidade_sus_w	:= substr(sus_obter_dados_apac_conta(nr_interno_conta_w, 'CX','C'),1,2);
	ie_tipo_financ_sus_w	:= substr(sus_obter_dados_apac_conta(nr_interno_conta_w, 'TF','C'),1,4);
	/*AIH*/

	if (coalesce(ie_complexidade_sus_w::text, '') = '') and (coalesce(ie_tipo_financ_sus_w::text, '') = '') then
		
		SELECT * FROM sus_obter_complex_financ_aih(nr_interno_conta_w, ie_complexidade_sus_w, ie_tipo_financ_sus_w) INTO STRICT ie_complexidade_sus_w, ie_tipo_financ_sus_w;
		
		/*ie_complexidade_sus_w	:= substr(sus_obter_complexidade_aih(nr_interno_conta_w),1,2);
		ie_tipo_financ_sus_w	:= substr(sus_obter_tipo_financ_aih(nr_interno_conta_w),1,4); */
		if (coalesce(ie_complexidade_sus_w::text, '') = '') and (coalesce(ie_tipo_financ_sus_w::text, '') = '') then
			
			select	max(ie_complexidade),
				max(ie_tipo_financiamento)
			into STRICT	ie_complexidade_sus_w,
				ie_tipo_financ_sus_w
			from	sus_aih_unif
			where	nr_interno_conta	= nr_interno_conta_w;
			
		end if;
		

	end if;
	/*Demais procedimentos*/

	if (coalesce(ie_complexidade_sus_w::text, '') = '') and (coalesce(ie_tipo_financ_sus_w::text, '') = '') then
			select	ie_complexidade,
				ie_tipo_financiamento
			into STRICT	ie_complexidade_sus_w,
				ie_tipo_financ_sus_w
			from	sus_procedimento
			where	cd_procedimento		= cd_procedimento_w
			and	ie_origem_proced	= ie_origem_proced_w  LIMIT 1;
	end if;
	exception when others then
		ie_complexidade_sus_w	:= null;
		ie_tipo_financ_sus_w	:= null;
	end;

end if;

cd_sequencia_parametro_w := null;

SELECT * FROM define_conta_procedimento(
		cd_estabelecimento_w, cd_procedimento_w, ie_origem_proced_w, 1, ie_clinica_w, cd_setor_atendimento_w, ie_classif_convenio_w, ie_tipo_atendimento_w, ie_tipo_convenio_aux2_w, cd_convenio_w, cd_categoria_w, dt_entrada_w, cd_conta_contabil_w, cd_centro_custo_w, cd_plano_w, ie_regra_pacote_ctb_w, ie_complexidade_sus_w, ie_tipo_financ_sus_w, null, null, null, null, null, nr_seq_proc_interno_1_w) INTO STRICT cd_conta_contabil_w, cd_centro_custo_w;
		
		
cd_sequencia_parametro_w:= philips_contabil_pck.get_parametro_conta_contabil;
		
end;

-- OS 219219
if (ie_glosa_w = 'W') and (vl_procedimento_w = 0) then
	cd_motivo_exc_conta_w		:= cd_motivo_exc_conta_ww;
	nr_seq_conta_origem_w		:= nr_interno_conta_w;
	nr_interno_conta_w		:= null;
end if;

SELECT 	MAX(coalesce(Grava_log_calculo_pck.get_ie_gravar_log,'N'))
INTO STRICT	ie_gravar_log_w
;

if (coalesce(ie_gravar_log_w,'N') = 'S') then

	select	max(a.ds_regra)
	into STRICT	ds_regra_w
	from 	regra_honorario_criterio b,
		regra_honorario a
	where	b.nr_sequencia = nr_seq_criterio_w
	and 	a.cd_regra = b.cd_regra;

	if (coalesce(nr_seq_criterio_w,0) > 0) then
		CALL Gravar_log_calculo_proc(cd_procedimento_w, ie_origem_proced_w, nr_sequencia_p, cd_convenio_w, cd_categoria_w, wheb_mensagem_pck.get_texto(802933,'nr_seq_criterio_w=' || nr_seq_criterio_w || ';' || 'cd_regra_honorario_w=' || cd_regra_honorario_w || ';' || 'ds_regra_w=' || ds_regra_w),  ie_gravar_log_w);
	else
		CALL Gravar_log_calculo_proc(cd_procedimento_w, ie_origem_proced_w, nr_sequencia_p, cd_convenio_w, cd_categoria_w, wheb_mensagem_pck.get_texto(802930), ie_gravar_log_w);
	end if;

	if (coalesce(nr_seq_adic_w,0) > 0) then
		CALL Gravar_log_calculo_proc(cd_procedimento_w, ie_origem_proced_w, nr_sequencia_p, cd_convenio_w, cd_categoria_w, wheb_mensagem_pck.get_texto(802796,'nr_seq_adic_w=' || nr_seq_adic_w), ie_gravar_log_w);
	else
		CALL Gravar_log_calculo_proc(cd_procedimento_w, ie_origem_proced_w, nr_sequencia_p, cd_convenio_w, cd_categoria_w, wheb_mensagem_pck.get_texto(802794), ie_gravar_log_w);
	end if;
end if;


begin
select	coalesce(count(*),0)
into STRICT	qt_conv_glosa_w
from	atend_categoria_convenio
where	nr_atendimento 		= nr_atendimento_w
and	cd_convenio_glosa	= cd_convenio_w;
exception
when others then
	qt_conv_glosa_w := 0;
end;

if (qt_conv_glosa_w > 0) and (ie_divide_vl_medico_glosa_w = 'S') then
	vl_medico_w := (vl_medico_w * 0.5);
end if;

if (cd_situacao_glosa_w = 22) and (ie_glosa_w = '1') and (pr_glosa_w > 0) and (pr_glosa_w < 100) then

	ie_valor_informado_w 	:= 'S';
	vl_procedimento_w	:= ((vl_procedimento_w * pr_glosa_w) / 100);
	vl_custo_operacional_w	:= ((vl_custo_operacional_w * pr_glosa_w) / 100);
	vl_anestesista_w	:= ((vl_anestesista_w * pr_glosa_w) / 100);
	vl_medico_w		:= ((vl_medico_w * pr_glosa_w) / 100);
	vl_auxiliares_w		:= ((vl_auxiliares_w * pr_glosa_w) / 100);
	vl_materiais_w		:= ((vl_materiais_w * pr_glosa_w) / 100);
end if;

begin
	
update 	procedimento_paciente
set 	vl_procedimento      	= vl_procedimento_w,
    	vl_custo_operacional 	= vl_custo_operacional_w,
    	vl_anestesista       	= vl_anestesista_w,
    	vl_medico            	= vl_medico_w,
    	vl_auxiliares        	= vl_auxiliares_w,
	nr_lote_contabil	= nr_lote_contabil_w,
    	vl_materiais         	= vl_materiais_w,
    	dt_conta             	= dt_conta_w,
	dt_acerto_conta		= dt_acerto_conta_w,
    	cd_conta_contabil    	= cd_conta_contabil_w,
	cd_centro_custo_receita	= cd_centro_custo_w,
	ie_responsavel_credito	= cd_regra_honorario_w,
	cd_convenio		= cd_convenio_w,
	cd_categoria		= CASE WHEN cd_categoria_w='' THEN  null  ELSE cd_categoria_w END ,
	cd_situacao_glosa	= cd_situacao_glosa_w,
	ie_valor_informado	= ie_valor_informado_w,
	nr_doc_convenio		= nr_doc_convenio_w,
	nr_seq_autorizacao	= nr_seq_autorizacao_w,
	nr_interno_conta	= nr_interno_conta_w,
	ie_emite_conta		= ie_emite_conta_w,
	ie_emite_conta_honor	= ie_emite_conta_honor_w,
	qt_porte_anestesico	= qt_porte_anestesico_w,
	cd_edicao_amb		= cd_edicao_amb_w,
	tx_hora_extra		= tx_hora_extra_w,
	nr_seq_grupo_rec	= nr_seq_grupo_rec_w,
	cd_motivo_exc_conta	= cd_motivo_exc_conta_w,
	cd_cgc_prestador	= cd_cgc_prestador_w,
	cd_medico_convenio	= cd_medico_convenio_w,
	tx_procedimento		= tx_procedimento_w,
	nr_seq_ajuste_proc	= nr_seq_ajuste_proc_ww,
	nr_seq_crit_honorario	= nr_seq_criterio_w,
	ie_funcao_medico	= coalesce(ie_funcao_medico_w,ie_funcao_medico),
	nr_seq_proc_crit_hor	= nr_seq_adic_w,
	nr_seq_conta_origem	= nr_seq_conta_origem_w,
	tx_medico		= tx_medico_w,
	tx_custo_oper_qt	= tx_custo_operacional_w,
	tx_anestesia		= tx_anestesista_w,				
	vl_tx_adm		 = NULL,
	vl_tx_desconto		 = NULL,
	cd_especialidade	= CASE WHEN ie_atualiza_func_medico_w='R' THEN  coalesce(cd_especialidade_medica_w,cd_especialidade)  ELSE cd_especialidade END ,
	ie_trat_conta_rn    =  ie_trat_conta_rn_ww,
	ds_observacao		= CASE WHEN ie_identifica_conta_proc_w='N' THEN  ds_observacao  ELSE CASE WHEN nr_sequencia_regra_w=0 THEN  ds_observacao  ELSE substr(ds_observacao || ' ' || OBTER_DESC_EXPRESSAO(331942) || ': ' || nr_sequencia_regra_w,1,255) END  END ,
	cd_sequencia_parametro = cd_sequencia_parametro_w
where 	nr_sequencia     	= nr_sequencia_p
and	ie_altera_auditoria_w	= 'S';
end;

CALL atualizar_regra_cod_med(nr_sequencia_p,nr_interno_conta_w, cd_convenio_w, 0);

/* francisco - os 73310 - 28/11/07 - gerar autorizacao */

if (ie_autor_particular_w = 'S') then
	select	coalesce(max(ie_tipo_convenio),0)
	into STRICT	ie_tipo_convenio_aux_w
	from	convenio
	where	cd_convenio	= cd_convenio_w;

	if (ie_tipo_convenio_aux_w = 1) then
		nr_seq_autor_gerada_w := gerar_autor_particular(nr_atendimento_w, null, nr_sequencia_p, nm_usuario_p, nr_seq_autor_gerada_w);
	end if;
end if;

if (nr_cirurgia_w > 0) then
	begin
	CALL gerar_participante_proc(
				nr_cirurgia_w,
				cd_estabelecimento_w,
				nr_sequencia_p,
				cd_convenio_w,
				cd_categoria_w,
				cd_procedimento_w,
				ie_origem_proced_w,
				dt_conta_w,
				nm_usuario_p,
				ie_tipo_atendimento_w,
				cd_procedencia_w);
	end;
end if;

/*      atualizar os valores dos participantes    */

vl_total_partic_w		:= 0;
nr_aux_w			:= 0;

if (ie_origem_proced_w	= 5) then
	begin

	select	coalesce(max(ie_origem_proced),ie_origem_proced_w)
	into STRICT	ie_origem_proced_edicao_w
	from	edicao_amb
	where	cd_edicao_amb	= cd_edicao_amb_w;

	select 	coalesce(max(a.nr_auxiliar),0),
		count(*)
	into STRICT	nr_auxiliares_w,
		qt_reg_w
	from	cbhpm_preco a
	where	a.cd_procedimento	= cd_procedimento_w
	and	a.ie_origem_proced	= ie_origem_proced_w
	and	coalesce(a.dt_vigencia,clock_timestamp() - interval '3650 days') =
			(SELECT max(coalesce(b.dt_vigencia,clock_timestamp() - interval '3650 days'))
			from cbhpm_preco b
			where b.cd_procedimento		= cd_procedimento_w
			and	b.ie_origem_proced	= ie_origem_proced_w
			and	coalesce(b.dt_vigencia,clock_timestamp() - interval '3650 days')	<= dt_conta_w);
			
	if (ie_data_vig_cbhpm_w	= 'R') then
		
		select	coalesce(max(ie_data_vig_cbhpm),'N')
		into STRICT	ie_data_vig_cbhpm_w
		from	convenio_estabelecimento
		where	cd_convenio	= cd_convenio_w
		and	cd_estabelecimento 	= cd_estabelecimento_w;

	end if;	
	
	
	if (ie_data_vig_cbhpm_w	= 'S') then
	
		if (ie_prioridade_edicao_w	= 'N') then
			
			begin
			select 	nr_seq_cbhpm_edicao
			into STRICT   	nr_seq_cbhpm_edicao_w
			from 	convenio_amb
			where (cd_estabelecimento     = cd_estabelecimento_w)
			and (cd_convenio            = cd_convenio_w)
			and (cd_categoria           = cd_categoria_w)
			and (coalesce(ie_situacao,'A')	= 'S')
			and 	(dt_inicio_vigencia     =
				(SELECT	max(dt_inicio_vigencia)
				from 	convenio_amb a
				where (a.cd_estabelecimento  = cd_estabelecimento_w)
				and (a.cd_convenio         = cd_convenio_w)
				and (a.cd_categoria        = cd_categoria_w)
				and (coalesce(a.ie_situacao,'A')= 'A')
				and (a.dt_inicio_vigencia <=  dt_conta_w)));
			exception
				when 	others then
					begin
					nr_seq_cbhpm_edicao_w	:= 0;
				end;
			end;
		else
			SELECT * FROM Obter_Edicao_Proc_Conv(cd_estabelecimento_w, CD_CONVENIO_w, CD_CATEGORIA_w, DT_CONTA_w, cd_procedimento_w, CD_EDICAO_AMB_CBHPM_W, VL_CH_HONORARIOS_W, VL_CH_CUSTO_OPER_W, VL_M2_FILME_W, dt_inicio_vig_w, tx_ajuste_geral_w, nr_seq_cbhpm_edicao_w) INTO STRICT CD_EDICAO_AMB_CBHPM_W, VL_CH_HONORARIOS_W, VL_CH_CUSTO_OPER_W, VL_M2_FILME_W, dt_inicio_vig_w, tx_ajuste_geral_w, nr_seq_cbhpm_edicao_w;
		end if;

		dt_vigencia_cbhpm_w	:= null;
		
		if (coalesce(nr_seq_cbhpm_edicao_w,0) > 0) then
			
			select 	max(dt_vigencia)
			into STRICT	dt_vigencia_cbhpm_w
			from 	cbhpm_edicao
			where 	nr_sequencia = nr_seq_cbhpm_edicao_w;
		end if;
	
		if (dt_vigencia_cbhpm_w IS NOT NULL AND dt_vigencia_cbhpm_w::text <> '') then
	
			select 	coalesce(max(a.nr_auxiliar),0)
			into STRICT	nr_auxiliares_w
			from	cbhpm_preco a
			where	a.cd_procedimento	= cd_procedimento_w
			and	a.ie_origem_proced	= ie_origem_proced_w
			and	coalesce(a.dt_vigencia,clock_timestamp() - interval '3650 days') =
					(SELECT min(coalesce(b.dt_vigencia,clock_timestamp() - interval '3650 days'))
					from 	cbhpm_preco b
					where	b.cd_procedimento			= cd_procedimento_w
					and	b.ie_origem_proced			= ie_origem_proced_w
					and	coalesce(b.dt_vigencia,clock_timestamp() - interval '3650 days')	<= dt_conta_w
					and	b.dt_vigencia				= dt_vigencia_cbhpm_w);
				
		end if;
		
	end if;

	if	((cd_edicao_amb_w	in (2004,2005) or (ie_origem_proced_edicao_w	= 5)) and (ie_vigencia_aux_cbhpm_w	= 'S')) then

		SELECT * FROM obter_edicao_procedimento(	cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, dt_conta_w, cd_procedimento_w, cd_edicao_amb_ww, dt_inicio_vigencia_w) INTO STRICT cd_edicao_amb_ww, dt_inicio_vigencia_w;

		select	coalesce(max(nr_auxiliar),0)
		into STRICT	nr_auxiliares_ww
		from	cbhpm_preco
		where	dt_vigencia		= dt_inicio_vigencia_w
		and	cd_procedimento		= cd_procedimento_w
		and	ie_origem_proced	= ie_origem_proced_w;

		if (nr_auxiliares_ww	<> 0) then
			nr_auxiliares_w		:= nr_auxiliares_ww;
		end if;
	end if;

	if	((qt_reg_w	= 0) or ((cd_edicao_amb_w  not in (2004,2005)) and (ie_origem_proced_edicao_w	<> 5))) then

		if (ie_origem_proced_edicao_w in (1,4)) then
			select coalesce(max(a.nr_auxiliares),0)
			into STRICT	 nr_auxiliares_ww
			from	 preco_amb a
			where	a.cd_procedimento		= cd_procedimento_w
			and	a.cd_edicao_amb		= cd_edicao_amb_w
			and 	coalesce(a.dt_inicio_vigencia,clock_timestamp() - interval '3650 days')	=
					(SELECT max(coalesce(b.dt_inicio_vigencia,clock_timestamp() - interval '3650 days'))
					from preco_amb b
					where b.cd_edicao_amb		= cd_edicao_amb_w
					and	b.cd_procedimento		= cd_procedimento_w
					and	coalesce(b.dt_inicio_vigencia,clock_timestamp() - interval '3650 days')	<= dt_conta_w);
		end if;
		/* felipe martini em 26/01/2009 os125108
		if	(nvl(nr_auxiliares_ww,0)	<> 0) then
			nr_auxiliares_w		:= nr_auxiliares_ww;
		end if;*/
		nr_auxiliares_w		:= nr_auxiliares_ww;
	end if;

	if	((ie_aux_cbhpm_porte_cir_w	= 'S' AND ie_origem_proced_edicao_w <> 1) or
		 (ie_aux_amb_porte_cir_w	= 'S' AND ie_origem_proced_edicao_w = 1)) then

		select	coalesce(max(obter_aux_maior_porte_cir(nr_cirurgia_w, nr_interno_conta_w, dt_conta_w, ie_origem_proced_w, null, dt_vigencia_cbhpm_w)), nr_auxiliares_w)
		into STRICT	nr_auxiliares_w
		;
	end if;
	
	if (ie_aux_maior_aux_cir_w	= 'S') then
		select	coalesce(max(obter_aux_maior_aux_cir(nr_cirurgia_w, nr_interno_conta_w, dt_conta_w, ie_origem_proced_w, null)), nr_auxiliares_w)
		into STRICT	nr_auxiliares_w
		;
	end if;

	end;
else
	begin
	select coalesce(max(a.nr_auxiliares),0)
	into STRICT	 nr_auxiliares_w
	from	 preco_amb a
	where	a.cd_procedimento		= cd_procedimento_w
  	and	a.cd_edicao_amb		= cd_edicao_amb_w
  	and coalesce(a.dt_inicio_vigencia,clock_timestamp() - interval '3650 days')	=
		(SELECT max(coalesce(b.dt_inicio_vigencia,clock_timestamp() - interval '3650 days'))
			from preco_amb b
			where b.cd_edicao_amb		= cd_edicao_amb_w
			and	b.cd_procedimento		= cd_procedimento_w
			and	coalesce(b.dt_inicio_vigencia,clock_timestamp() - interval '3650 days')	<= dt_conta_w);

	if (ie_aux_amb_porte_cir_w	= 'S') then

		select	coalesce(max(obter_aux_maior_porte_cir(nr_cirurgia_w, nr_interno_conta_w, dt_conta_w, ie_origem_proced_w, cd_edicao_amb_w, null)), nr_auxiliares_w)
		into STRICT	nr_auxiliares_w
		;
	end if;
	
	if (ie_aux_maior_aux_cir_w	= 'S') then
		select	coalesce(max(obter_aux_maior_aux_cir(nr_cirurgia_w, nr_interno_conta_w, dt_conta_w, ie_origem_proced_w, cd_edicao_amb_w)), nr_auxiliares_w)
		into STRICT	nr_auxiliares_w
		;
	end if;

	end;
end if;

if (nr_auxiliares_neg_w	> 0) then
	nr_auxiliares_w	:= nr_auxiliares_neg_w;
end if;

if (ie_glosa_w = 'H') then
	ie_valor_informado_w	:= 'N';
end if;

if (ie_origem_proced_w	<> 6) or (ie_calc_partic_ipsemg_w	= 'N') then
	open c01;
	loop
	fetch c01 into
		nr_seq_partic_w,
		cd_medico_partic_w,
		ie_funcao_partic_w,
		pr_faturar_participante_w,
		pr_faturar_propaci_w,
		vl_medico_partic_w,
		ie_anestesita_w,
		ie_medico_w,
		ie_auxiliar_w,
		cd_partic_convenio_w,
		ie_valor_informado_partic_w,
		dt_atualizacao_proc_w,
		dt_atualizacao_partic_w,
		nr_seq_pq_proc_w,
		vl_auxiliar_partic_w,
		nr_cirurgia_partic_w,
		vl_anestesista_partic_w;

	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		
		cd_regra_honor_part_w	:= null;
	/* rotina substituida por marcus em 16/01/2004
		if	(ie_anestesita_w = 'N') or
			(ie_origem_proced_w = 4) then
			nr_aux_w	:= nr_aux_w + 1;
		end if;
	*/
	
		if (ie_origem_proced_w = 4) or
			(((ie_medico_w = 'S') or (ie_auxiliar_w = 'S')) and (ie_anestesita_w = 'N')) then
			nr_aux_w	:= nr_aux_w + 1;
		end if;
		
		if (pr_faturar_participante_w <> pr_faturar_propaci_w) and
			((coalesce(nr_seq_regra_qtde_exec_w::text, '') = '') or (nr_seq_regra_qtde_exec_w IS NOT NULL AND nr_seq_regra_qtde_exec_w::text <> '' AND ie_via_acesso_w IS NOT NULL AND ie_via_acesso_w::text <> ''))  then
			begin
			ie_alterado_perc_partic_w	:= 'N';
			if (dt_atualizacao_partic_w	> dt_atualizacao_proc_w) then
				ie_alterado_perc_partic_w	:= 'S';
			end if;

			if (coalesce(ie_valor_informado_partic_w,'S') = 'N') 	and (ie_alterado_perc_partic_w	= 'N')			then  /*edgar 04/07/2005, os 18746,

conforme orientacao do marcus*/
				pr_faturar_participante_w	:= pr_faturar_propaci_w;
			end if;
			vl_medico_partic_w	:= dividir(vl_medico_partic_w, pr_faturar_propaci_w) * pr_faturar_participante_w;
			vl_anestesista_partic_w	:= dividir(vl_anestesista_partic_w, pr_faturar_propaci_w) * pr_faturar_participante_w;
			vl_auxiliar_partic_w	:= dividir(vl_auxiliar_partic_w, pr_faturar_propaci_w) * pr_faturar_participante_w;
			end;
		end if;
		if (ie_origem_proced_w = 4 and PKG_I18N.GET_USER_LOCALE <> 'es_AR') or
			ie_anestesita_w = 'S' or
			nr_aux_w <= nr_auxiliares_w then

			if (ie_regra_arredondamento_tx_w = 'S') and (coalesce(ie_alterado_perc_partic_w::text, '') = '') then

				if (ie_tipo_rounded_w IS NOT NULL AND ie_tipo_rounded_w::text <> '') and (ie_regra_arred_IPE_w = 'S') and (ie_valor_informado_w = 'N') and (vl_medico_w > 0) then

					vl_medico_partic_w:= vl_medico_w;

				end if;

			end if;

			SELECT * FROM define_valor_participante(nr_sequencia_p, nr_seq_partic_w, nm_usuario_p, vl_anestesista_partic_w, vl_medico_partic_w, vl_participante_w, qt_ponto_sus_w, ie_emite_conta_part_w, cd_regra_honor_part_w, vl_original_part_w, vl_conta_partic_w, pr_participante_w, cd_cgc_partic_w, vl_auxiliar_partic_w, cd_regra_honorario_w, nr_seq_crit_honorario_w, vl_medico_original_w) INTO STRICT vl_participante_w, qt_ponto_sus_w, ie_emite_conta_part_w, cd_regra_honor_part_w, vl_original_part_w, vl_conta_partic_w, pr_participante_w, cd_cgc_partic_w, nr_seq_crit_honorario_w;

			select 	coalesce(max(ie_calcula_valor),'S')
			into STRICT	ie_calcula_valor_w
			from 	regra_honorario
			where 	cd_regra =  CASE WHEN ie_partic_resp_cred_w='S' THEN  cd_regra_honorario_w  ELSE cd_regra_honor_part_w END;		
					
			if (ie_anestesita_w	= 'S') and (vl_anestesista_ww	<> 0) then
				
				if (ie_tx_partic_valor_negoc_w = 'S') then
					vl_anestesista_ww := ((coalesce(pr_faturar_participante_w,tx_procedimento_w) * vl_anestesista_ww)/100);
				end if;
				
				vl_participante_w	:= vl_anestesista_ww;
				vl_original_part_w	:= vl_anestesista_ww;
				if (vl_conta_partic_w	<> 0) then
					vl_conta_partic_w	:= vl_anestesista_ww;
				end if;
				
				if (ie_calcula_valor_w = 'N') then
					vl_participante_w:= 0;
				end if;
			elsif (vl_auxiliares_ww	<> 0) then
				vl_participante_w	:= vl_auxiliares_ww;
				vl_original_part_w	:= vl_auxiliares_ww;
				if (vl_conta_partic_w	<> 0) then
					vl_conta_partic_w	:= vl_auxiliares_ww;
				end if;

				if (ie_calcula_valor_w = 'N') then
					vl_participante_w:= 0;
				end if;
			end if;
		else
			vl_participante_w	:= 0;
			vl_original_part_w	:= 0;
			vl_conta_partic_w	:= 0;
			pr_participante_w	:= 0;
		end if;

		if (ie_exclui_partic_cir_zerado_w	= 'S') and (nr_cirurgia_partic_w > 0) and (nr_aux_w <= nr_auxiliares_w) then
			begin

			delete	from procedimento_participante
			where	nr_sequencia		= nr_sequencia_p
			and	nr_seq_partic		= nr_seq_partic_w
			and	coalesce(ie_emite_conta::text, '') = '';

			end;
		end if;

		select	count(*)
		into STRICT	qt_part_w
		from	procedimento_participante
		where	 nr_sequencia		= nr_sequencia_p
		and	 nr_seq_partic		= nr_seq_partic_w;

		if (ie_regra_arredondamento_tx_w = 'S') then

			if (ie_tipo_rounded_w IS NOT NULL AND ie_tipo_rounded_w::text <> '') and (ie_regra_arred_IPE_w = 'S') and (ie_valor_informado_w = 'N') then

				vl_participante_w := arredondamento(vl_participante_w, 2, ie_tipo_rounded_w);
				vl_original_part_w := arredondamento(vl_original_part_w, 2, ie_tipo_rounded_w);
				vl_conta_partic_w := arredondamento(vl_conta_partic_w, 2, ie_tipo_rounded_w);

			end if;

		end if;
		
		if (ie_anestesita_w = 'S') and
			(((coalesce(obter_tipo_convenio(cd_convenio_w),0) = 10) and (ie_calc_vlpartic_iamspe_w = 'N')) or (ie_calc_vl_aux_conv_w = 'N')) Then
			begin
			vl_anest_ipsemg_w	:= vl_anest_ipsemg_w + vl_conta_partic_w;
			end;
		end if;

		if (qt_part_w > 0) then
			update procedimento_participante
			set	vl_participante 	= vl_participante_w,
				vl_original		= vl_original_part_w,
				ie_emite_conta		= CASE WHEN ie_partic_resp_cred_w='S' THEN  ie_emite_conta_w  ELSE ie_emite_conta_part_w END ,
				ie_responsavel_credito	= CASE WHEN ie_partic_resp_cred_w='S' THEN  cd_regra_honorario_w  ELSE cd_regra_honor_part_w END ,
				nm_usuario		= nm_usuario_p,
				dt_atualizacao		= dt_atualizacao_w,
				cd_cgc			= cd_cgc_partic_w,
				vl_conta		= vl_conta_partic_w,
				pr_procedimento		= pr_participante_w,
				pr_faturar		= pr_faturar_participante_w,
				cd_medico_convenio 	= cd_partic_convenio_w,
				nr_seq_crit_honorario   = nr_seq_crit_honorario_w
			where	nr_sequencia		= nr_sequencia_p
			and	nr_seq_partic		= nr_seq_partic_w;

			CALL atualizar_regra_cod_med(nr_sequencia_p,nr_interno_conta_w, cd_convenio_w, nr_seq_partic_w);

		end if;

		if (ie_partic_resp_cred_w = 'S') then --OS146677 Fabricio
			select 	coalesce(max(ie_entra_conta),'S'),
				coalesce(max(ie_calcula_valor),'S')
			into STRICT	ie_entra_conta_w,
				ie_calcula_valor_w
			from 	regra_honorario
			where 	cd_regra =  cd_regra_honorario_w;

			
			if	((ie_entra_conta_w = 'N') and (ie_calcula_valor_w = 'N') and (qt_part_w > 0)) then
				
				update 	procedimento_participante
				set	vl_conta		= 0,
					vl_participante		= 0
				where	nr_sequencia		= nr_sequencia_p
				and	nr_seq_partic		= nr_seq_partic_w;

				vl_total_partic_w:= vl_conta_partic_w * -1;
				
			elsif	(ie_entra_conta_w = 'N' AND qt_part_w > 0) then

				update 	procedimento_participante
				set	vl_conta		= 0
				where	nr_sequencia		= nr_sequencia_p
				and	nr_seq_partic		= nr_seq_partic_w;

				vl_total_partic_w:= vl_conta_partic_w * -1;				

			elsif	((ie_entra_conta_w = 'S') and (ie_calcula_valor_w = 'S') and (qt_part_w > 0)) then

				update 	procedimento_participante
				set	vl_conta		= vl_participante_w
				where	nr_sequencia		= nr_sequencia_p
				and	nr_seq_partic		= nr_seq_partic_w;

				--vl_total_partic_w:= vl_total_partic_w + vl_participante_w;
				if (vl_conta_partic_w = 0) then
					vl_conta_partic_w:= vl_participante_w;
				end if;
			end if;

		end if;

		if (ie_valor_informado_partic_w	=  'S') and (qt_part_w > 0) then

			select 	coalesce(max(ie_entra_conta),'S'),
				coalesce(max(ie_calcula_valor),'S')
			into STRICT	ie_entra_conta_w,
				ie_calcula_valor_w
			from 	regra_honorario
			where 	cd_regra =  cd_regra_honorario_w;

			if	(ie_entra_conta_w = 'S' AND ie_calcula_valor_w = 'S') then

				select	vl_conta
				into STRICT	vl_conta_partic_w
				from 	procedimento_participante
				where	nr_sequencia	= nr_sequencia_p
				and	nr_seq_partic	= nr_seq_partic_w;

			end if;
		end if;
/*
		ricardo os33385 - retirada a rotina abaixo, estava tratando errado para a origem proprio (adelson e ricardo)

		if	(ie_origem_proced_w = 4) then
			vl_total_partic_w		:= vl_total_partic_w + vl_participante_w;
		else */
		vl_total_partic_w		:= vl_total_partic_w + vl_conta_partic_w;

/*	end if; */



		/* atualizar impostos e taxas dos honorarios medicos */

		if (coalesce(cd_medico_partic_w,'X') <> 'X') 	and (vl_participante_w		> 0)		then
			begin
			CALL atualizar_taxa_trib_honor(nr_sequencia_p,
						nr_seq_partic_w,
						cd_procedimento_w,
						ie_origem_proced_w,
						cd_medico_partic_w,
						ie_funcao_partic_w,
						0,
						vl_participante_w,
						vl_conta_partic_w,
						cd_convenio_calculo_w,
						cd_categoria_calculo_w,
						cd_setor_atendimento_w,
						ie_tipo_atendimento_w,
						nm_usuario_p,
						2);
			end;
		end if;
		end;
	end loop;
	close c01;
else
	open c02;
	loop
	fetch c02 into
		nr_seq_partic_w,
		cd_medico_partic_w,
		ie_funcao_partic_w,
		pr_faturar_participante_w,
		pr_faturar_propaci_w,
		vl_medico_partic_w,
		ie_anestesita_w,
		ie_medico_w,
		ie_auxiliar_w,
		cd_partic_convenio_w,
		ie_valor_informado_partic_w,
		dt_atualizacao_proc_w,
		dt_atualizacao_partic_w,
		nr_seq_pq_proc_w,
		vl_auxiliar_partic_w,
		nr_cirurgia_partic_w,
		IE_GRAU_PARTIC_TISS_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin
		
		cd_regra_honor_part_w	:= null;
		
		SELECT * FROM define_valor_participante(nr_sequencia_p, nr_seq_partic_w, nm_usuario_p, vl_anestesista_partic_w, vl_medico_partic_w, vl_participante_w, qt_ponto_sus_w, ie_emite_conta_part_w, cd_regra_honor_part_w, vl_original_part_w, vl_conta_partic_w, pr_participante_w, cd_cgc_partic_w, vl_auxiliar_partic_w, cd_regra_honorario_w, nr_seq_crit_honorario_w, vl_medico_original_w) INTO STRICT vl_participante_w, qt_ponto_sus_w, ie_emite_conta_part_w, cd_regra_honor_part_w, vl_original_part_w, vl_conta_partic_w, pr_participante_w, cd_cgc_partic_w, nr_seq_crit_honorario_w;

		if (ie_anestesita_w	= 'S') then
			begin
			vl_participante_w	:= vl_medico_w	* 0.30;
			vl_original_part_w	:= vl_participante_w;
			vl_conta_partic_w	:= vl_participante_w;
			
			if	(((coalesce(obter_tipo_convenio(cd_convenio_w),0) = 10) and (ie_calc_vlpartic_iamspe_w = 'N')) or (ie_calc_vl_aux_conv_w = 'N')) Then
				begin
				vl_anest_ipsemg_w	:= vl_anest_ipsemg_w + vl_conta_partic_w;
				end;
			end if;		
			
			vl_tot_anes_ipsemg_w := vl_tot_anes_ipsemg_w + vl_participante_w;
			end;
		else
			begin
			if (IE_GRAU_PARTIC_TISS_w = 1) then -- 1 Auxiliar
				vl_participante_w	:= (vl_medico_w	- vl_tot_anes_ipsemg_w)* 0.30;
				vl_original_part_w	:= vl_participante_w;
				vl_conta_partic_w	:= vl_participante_w;
				
				vl_tot_prim_aux_w := vl_participante_w;
			else	 -- 2 Auxiliar, 3 Auxiliar
				vl_participante_w	:= (vl_medico_w	- vl_tot_anes_ipsemg_w - vl_tot_prim_aux_w)* 0.20;
				vl_original_part_w	:= vl_participante_w;
				vl_conta_partic_w	:= vl_participante_w;
			end if;
			end;
		end if;

		update procedimento_participante
		set	vl_participante 	= vl_participante_w,
			vl_original		= vl_original_part_w,
			ie_emite_conta		= CASE WHEN ie_partic_resp_cred_w='S' THEN  ie_emite_conta_w  ELSE ie_emite_conta_part_w END ,
			ie_responsavel_credito	= CASE WHEN ie_partic_resp_cred_w='S' THEN  cd_regra_honorario_w  ELSE cd_regra_honor_part_w END ,
			nm_usuario		= nm_usuario_p,
			dt_atualizacao		= dt_atualizacao_w,
			cd_cgc			= cd_cgc_partic_w,
			vl_conta		= vl_conta_partic_w,
			cd_medico_convenio 	= cd_partic_convenio_w,
			nr_seq_crit_honorario   = nr_seq_crit_honorario_w
		where	 nr_sequencia		= nr_sequencia_p
		and	 nr_seq_partic		= nr_seq_partic_w;

		CALL atualizar_regra_cod_med(nr_sequencia_p,nr_interno_conta_w, cd_convenio_w, nr_seq_partic_w);

		vl_total_partic_w:=	vl_participante_w + vl_total_partic_w;
		end;
	end loop;
	close c02;
end if;

if (ie_glosa_w = 'H') then
	ie_valor_informado_w	:= 'S';
end if;

if (ie_origem_proced_w		= 6) and (vl_total_partic_w		<> 0) and (ie_calc_partic_ipsemg_w	=  'S') then

	update 	procedimento_paciente
	set	vl_medico	= vl_medico - vl_total_partic_w
	where	nr_sequencia	= nr_sequencia_p;
end if;

if (vl_total_partic_w		<> 0) and
	(((coalesce(obter_tipo_convenio(cd_convenio_w),0) = 10) and (ie_calc_vlpartic_iamspe_w = 'N')) or (ie_calc_vl_aux_conv_w = 'N')) then
	
	update 	procedimento_paciente
	set	vl_medico	= vl_medico - (vl_total_partic_w - vl_anest_ipsemg_w)
	where	nr_sequencia	= nr_sequencia_p;
	
	vl_total_partic_w := vl_anest_ipsemg_w;	
end if;

begin
	select	substr(value,1,64)
	into STRICT	ds_nls_territory_w
	from	v$nls_parameters
	where	parameter = 'NLS_TERRITORY';
exception
when others then
	ds_nls_territory_w:=null;	
end;

/*  atualizar os valores dos participantes na procedimento paceinte */

if (ie_valor_informado_w		= 'N') and
	((ie_origem_proced_w		<> 6 ) or (ie_calc_partic_ipsemg_w	= 'N')) then
	/*
	ricardo os33385 - retirada a rotina abaixo, estava tratando errado para a origem proprio (adelson e ricardo)

	update 	procedimento_paciente
	set 	vl_procedimento  	= decode(ie_origem_proced_w, 4, vl_procedimento_w,(vl_procedimento_w + vl_total_partic_w)),
		vl_medico		= decode(ie_origem_proced_w, 4, (vl_medico - nvl(vl_total_partic_w,0)),vl_medico)
	where 	nr_sequencia     	= nr_sequencia_p;
	*/
	update 	procedimento_paciente
	set 	vl_procedimento  	= (vl_procedimento_w + vl_total_partic_w),
		vl_medico		= vl_medico
	where 	nr_sequencia     	= nr_sequencia_p
	and	ie_altera_auditoria_w	= 'S';
	
	if (philips_param_pck.get_cd_pais = 2) or (upper(ds_nls_territory_w) = 'MEXICO') then
		update	propaci_log_preco
		set		vl_procedimento = vl_procedimento + vl_total_partic_w
		where	nr_seq_propaci = nr_sequencia_p
		and		ie_motivo	= 'ORIG';
	end if;
end if;

/*  duplicar procedimento para glosa de percentual */



/*Realizado tratamento que faca a glosa em % somente se a conta estiver aberta. Ronaldo OS 667333*/

if (ie_valor_informado_w		= 'N')	and (cd_situacao_glosa_w		= 8)	and (pr_glosa_w 			> 0)	and (pr_glosa_w			< 100) and (coalesce(ie_status_acerto_conta_w,1) = 1) then
	CALL glosa_proc_percentual(nr_sequencia_p,pr_glosa_w, cd_convenio_glosa_ww, cd_categoria_glosa_ww,vl_proced_glosa_w);
	
	begin
		select	ie_valor_informado,
			vl_procedimento,
			vl_medico,
			vl_custo_operacional,
			vl_anestesista,
			vl_materiais,
			vl_auxiliares
		into STRICT	ie_valor_informado_w,
			vl_procedimento_w,
			vl_medico_w,
			vl_custo_operacional_w,
			vl_anestesista_w,
			vl_materiais_w,		
			vl_auxiliares_w
		from	procedimento_paciente
		where	nr_sequencia = nr_sequencia_p;
	exception
		when others then
		ie_valor_informado_w:=ie_valor_informado_w;
	end;
end if;

/*  duplicar procedimento para glosa particular item zerado */

if (ie_valor_informado_w		= 'N')	and (cd_situacao_glosa_w		= 11)	and (pr_glosa_w 			> 0)	and (pr_glosa_w			< 100)	then
	CALL glosa_proc_zerado(nr_sequencia_p);
end if;

/*  duplicar procedimento para glosa de valor */

if (ie_valor_informado_w		= 'N')	and (vl_glosa_w 			<> 0)   and (ie_glosa_w 			<> '4') then
	CALL glosa_proc_valor(nr_sequencia_p, vl_glosa_w);
	
	begin
		select	ie_valor_informado,
			vl_procedimento,
			vl_medico,
			vl_custo_operacional,
			vl_anestesista,
			vl_materiais,
			vl_auxiliares
		into STRICT	ie_valor_informado_w,
			vl_procedimento_w,
			vl_medico_w,
			vl_custo_operacional_w,
			vl_anestesista_w,
			vl_materiais_w,		
			vl_auxiliares_w
		from	procedimento_paciente
		where	nr_sequencia = nr_sequencia_p;
	exception
		when others then
		ie_valor_informado_w:=ie_valor_informado_w;
	end;
end if;

/*  duplicar procedimento para glosa de valor */

if (ie_valor_informado_w		= 'N')	and (vl_glosa_w 			<> 0)   and (ie_glosa_w 			= '4') then
	CALL glosa_proc_valor_exc_filme(nr_sequencia_p, vl_glosa_w);
	
	begin
		select	ie_valor_informado,
			vl_procedimento,
			vl_medico,
			vl_custo_operacional,
			vl_anestesista,
			vl_materiais,
			vl_auxiliares
		into STRICT	ie_valor_informado_w,
			vl_procedimento_w,
			vl_medico_w,
			vl_custo_operacional_w,
			vl_anestesista_w,
			vl_materiais_w,		
			vl_auxiliares_w
		from	procedimento_paciente
		where	nr_sequencia = nr_sequencia_p;
	exception
		when others then
		ie_valor_informado_w:=ie_valor_informado_w;
	end;
end if;

if (ie_valor_informado_w = 'N') and (ie_utiliza_wint_w = 'S') and (nr_prescricao_w > 0)  then

	select	max(nr_sequencia)
	into STRICT	nr_seq_prescr_proc_inf_w
	from	prescr_proced_inf_adic
	where	nr_prescricao = nr_prescricao_w
	and	nr_seq_prescricao = nr_sequencia_prescricao_w
	and 	coalesce(vl_coparticipacao,0) <> 0;
	
	

	if (coalesce(nr_seq_prescr_proc_inf_w,0) > 0) then
		
		select	max(vl_coparticipacao)
		into STRICT	vl_copart_prescr_w
		from	prescr_proced_inf_adic
		where	nr_sequencia = nr_seq_prescr_proc_inf_w
		and 	coalesce(vl_coparticipacao,0) <> 0;
		
	else
		begin
		select	c.vl_coparticipacao
		into STRICT	vl_copart_prescr_w
		from	procedimento_guia_wint c,
			procedimento_autorizado a,
			autorizacao_convenio ac,
			estagio_autorizacao e
		where	c.nr_seq_proc_autor 	= a.nr_sequencia
		and	c.nr_sequencia 		= (SELECT max(x.nr_sequencia) from procedimento_guia_wint x where x.nr_seq_proc_autor = a.nr_sequencia and x.vl_coparticipacao > 0)
		and	a.nr_prescricao 	= nr_prescricao_w
		and	a.nr_seq_prescricao 	= nr_sequencia_prescricao_w
		and	ac.nr_sequencia		= a.nr_sequencia_autor
		and	ac.nr_atendimento 	= nr_atendimento_w
		and 	ac.nr_seq_estagio	= e.nr_sequencia
		and	e.ie_interno		= '10';
		exception
		when no_data_found then
			vl_copart_prescr_w := 0;
		when too_many_rows then 
			vl_copart_prescr_w := 0;
		end;
	end if;
	
	
	select	coalesce(max(1),0)
	into STRICT	qt_copart_prescr_w
	from	procedimento_paciente
	where	nr_seq_proc_princ = nr_sequencia_p
	and	nr_prescricao = nr_prescricao_w
	and	nr_sequencia_prescricao = nr_sequencia_prescricao_w
	and	qt_procedimento = 0;

	if (qt_copart_prescr_w = 0) and (vl_copart_prescr_w > 0) then
		CALL gerar_conta_partic_prescr(nr_sequencia_p, vl_copart_prescr_w, nm_usuario_p);
			
		begin
			select	ie_valor_informado,
				vl_procedimento,
				vl_medico,
				vl_custo_operacional,
				vl_anestesista,
				vl_materiais,
				vl_auxiliares
			into STRICT	ie_valor_informado_w,
				vl_procedimento_w,
				vl_medico_w,
				vl_custo_operacional_w,
				vl_anestesista_w,
				vl_materiais_w,		
				vl_auxiliares_w
			from	procedimento_paciente
			where	nr_sequencia = nr_sequencia_p;
		exception
			when no_data_found then
				ie_valor_informado_w := ie_valor_informado_w;
			when too_many_rows then
				ie_valor_informado_w := ie_valor_informado_w;
		end;
	end if;

	
end if;

if (ie_especial_proc_exec_w = 'S') and (coalesce(cd_especialidade_medica_w::text, '') = '') then
	CALL atualizar_especialidade_proc(nr_interno_conta_w, nr_sequencia_p);
end if;

if (ie_valor_informado_w		= 'N') and (ie_calculo_taxa_regra_w	= 'L') then
	--calcular_taxa_esp_conta(nr_interno_conta_w, nr_sequencia_p, 1, nm_usuario_p);
	CALL calcular_regra_preco_taxa(nr_interno_conta_w, nr_sequencia_p, 1, nm_usuario_p);
end if;

if (ie_cobra_paciente_w = 'N') and (nr_prescricao_w IS NOT NULL AND nr_prescricao_w::text <> '') then
	update 	procedimento_paciente
	set 	vl_procedimento      	= 0,
	    	vl_custo_operacional 	= 0,
    		vl_anestesista       	= 0,
	    	vl_medico            	= 0,
    		vl_auxiliares        	= 0,
	    	vl_materiais         	= 0,
		ie_valor_informado	= 'S',
		ds_observacao		= ds_observacao || ' ' || OBTER_DESC_EXPRESSAO(728478) || ' ' 						-- 728478: Glosa prescr procedimento 
	where 	nr_sequencia     	= nr_sequencia_p;
end if;

if (coalesce(ie_codigo_convenio_w::text, '') = '') then
	select	coalesce(max(ie_codigo_convenio), 'X')
	into STRICT	ie_codigo_convenio_w
	from	convenio
	where	cd_convenio	= cd_convenio_w;
end if;

if (ie_codigo_convenio_w	= 'I') and (coalesce(obter_se_atualiza_cod_conv(cd_convenio_w,ie_auditoria_w,cd_estabelecimento_w),'S') = 'S') then
	CALL atualiza_cod_conv_mat_proc(nr_sequencia_p, 1);
end if;

/* ricardo 05/09/2007 - rotina para gravar o valor original do procedimento (antes de pacote ou desconto) */

if (ie_valor_informado_w	= 'N') then
	begin

	delete	from proc_paciente_valor
	where	nr_seq_procedimento	= nr_sequencia_p
	and	ie_tipo_valor		= 99;

	select 	coalesce(max(nr_sequencia), 0) + 1
	into STRICT	nr_seq_w
	from	proc_paciente_valor
	where	nr_seq_procedimento	= nr_sequencia_p;

	insert into proc_paciente_valor(nr_seq_procedimento,
		nr_sequencia,
		ie_tipo_valor,
		dt_atualizacao,
		nm_usuario,
		vl_procedimento,
		vl_medico,
		vl_anestesista,
		vl_materiais,
		vl_custo_operacional,
		vl_auxiliares,
		cd_convenio,
		cd_categoria,
		pr_valor,
		qt_pontos)
	values (nr_sequencia_p,
		nr_seq_w,
		99,
		clock_timestamp(),
		nm_usuario_p,
		vl_procedimento_w,
		vl_medico_w,
		vl_anestesista_w,
		vl_materiais_w,
		vl_custo_operacional_w,
		vl_auxiliares_w,
		cd_convenio_w,
		cd_categoria_w,
		0,
		qt_pontos_w);
	exception
		when others then
			nr_seq_w	:= nr_seq_w;
	end;
elsif	((ie_valor_inf_desconto_w	= 'S') or (ie_valor_inf_pacote_w		= 'S')) then
	begin

	select 	coalesce(max(nr_sequencia), 0)
	into STRICT	nr_seq_w
	from	proc_paciente_valor
	where	nr_seq_procedimento	= nr_sequencia_p
	and	ie_tipo_valor		= 3;

	if (nr_seq_w	= 0) then
		delete	from proc_paciente_valor
		where	nr_seq_procedimento	= nr_sequencia_p
		and	ie_tipo_valor		= 96;

		select 	coalesce(max(nr_sequencia), 0) + 1
		into STRICT	nr_seq_w
		from	proc_paciente_valor
		where	nr_seq_procedimento	= nr_sequencia_p;

		insert into proc_paciente_valor(nr_seq_procedimento,
			nr_sequencia,
			ie_tipo_valor,
			dt_atualizacao,
			nm_usuario,
			vl_procedimento,
			vl_medico,
			vl_anestesista,
			vl_materiais,
			vl_custo_operacional,
			vl_auxiliares,
			cd_convenio,
			cd_categoria,
			pr_valor)
		values (nr_sequencia_p,
			nr_seq_w,
			96,
			clock_timestamp(),
			nm_usuario_p,
			vl_procedimento_w,
			vl_medico_w,
			vl_anestesista_w,
			vl_materiais_w,
			vl_custo_operacional_w,
			vl_auxiliares_w,
			cd_convenio_w,
			cd_categoria_w,
			0);
	end if;
	exception
		when others then
			nr_seq_w	:= nr_seq_w;
	end;
end if;

--Atualizar os campos vl_tx_desconto e vl_tx_adm  (Campos Informativos)
vl_tx_adm_w	:= null;
vl_tx_desconto_w:= null;
if (coalesce(nr_seq_ajuste_proc_ww,0) > 0) then

	begin
	select 	coalesce(tx_adm,0),
		coalesce(tx_desconto,0),
		tx_ajuste
	into STRICT	tx_adm_w,
		tx_desconto_w,
		tx_ajuste_regra_w
	from 	regra_ajuste_proc
	where 	nr_sequencia = nr_seq_ajuste_proc_ww
	and 	ie_situacao = 'A'
	and 	ie_glosa = 'L';
	exception
		when others then
			tx_adm_w		:= 0;
			tx_desconto_w		:= 0;
			tx_ajuste_regra_w	:= 1;
	end;

	select 	max(vl_procedimento)
	into STRICT	vl_proc_w
	from 	procedimento_paciente
	where 	nr_sequencia = nr_sequencia_p;

	if	((tx_adm_w > 0) or (tx_desconto_w > 0)) then

		vl_proc_original_w:= dividir(vl_proc_w,tx_ajuste_regra_w);
		vl_tx_adm_w	  := vl_proc_original_w * tx_adm_w / 100;
		vl_tx_desconto_w  := (vl_proc_original_w + vl_tx_adm_w) * tx_desconto_w / 100;

		update	procedimento_paciente
		set 	vl_tx_adm = vl_tx_adm_w,
			vl_tx_desconto = vl_tx_desconto_w
		where 	nr_sequencia = nr_sequencia_p;

	end if;
end if;

if	((coalesce(nr_seq_proc_interno_w,0) > 0) and (coalesce(nr_seq_exame_w,0) = 0)) then
	cd_procedimento_tuss_w:= Define_procedimento_TUSS(cd_estabelecimento_w,  nr_seq_proc_interno_w, cd_convenio_w, cd_categoria_w,
	  						ie_tipo_atendimento_w, dt_procedimento_w, cd_procedimento_w, ie_origem_proced_w, somente_numero(cd_edicao_amb_w),cd_setor_atendimento_w, cd_tipo_acomod_unid_w);
	update 	procedimento_paciente
	set	cd_procedimento_tuss = cd_procedimento_tuss_w
	where 	nr_sequencia = nr_sequencia_p;
end if;

if	((coalesce(nr_seq_proc_interno_w,0) = 0) and (coalesce(nr_seq_exame_w,0) > 0)) then
	
	cd_procedimento_tuss_w := define_proc_tuss_exame(nr_seq_exame_w, cd_convenio_w, cd_categoria_w, nr_seq_material_w, cd_edicao_amb_w);
	
	if (coalesce(cd_procedimento_tuss_w,0) > 0) then
		update 	procedimento_paciente
		set	cd_procedimento_tuss = cd_procedimento_tuss_w
		where 	nr_sequencia = nr_sequencia_p;
	end if;
end if;


if (ie_tuss_exam_proc_int_w = 'S') and (coalesce(cd_procedimento_tuss_w,0) = 0) and
	((coalesce(nr_seq_proc_interno_w,0) > 0) and (coalesce(nr_seq_exame_w,0) > 0)) then

	cd_procedimento_tuss_w:= Define_procedimento_TUSS(cd_estabelecimento_w,
							nr_seq_proc_interno_w, cd_convenio_w, cd_categoria_w,
	  						ie_tipo_atendimento_w, dt_procedimento_w, cd_procedimento_w, 
							ie_origem_proced_w, somente_numero(cd_edicao_amb_w),cd_setor_atendimento_w, cd_tipo_acomod_unid_w);
	
	update 	procedimento_paciente
	set	cd_procedimento_tuss = cd_procedimento_tuss_w
	where 	nr_sequencia = nr_sequencia_p;
	
	if (coalesce(cd_procedimento_tuss_w,0) = 0) then
	
		cd_procedimento_tuss_w := define_proc_tuss_exame(nr_seq_exame_w, cd_convenio_w, cd_categoria_w, nr_seq_material_w, cd_edicao_amb_w);
	
		if (coalesce(cd_procedimento_tuss_w,0) > 0) then
			update 	procedimento_paciente
			set	cd_procedimento_tuss = cd_procedimento_tuss_w
			where 	nr_sequencia = nr_sequencia_p;
		end if;
		
	end if;
end if;



if (coalesce(cd_procedimento_tuss_w,0) > 0) then

	SELECT * FROM obter_dados_tuss_serv_item(	cd_procedimento_tuss_w, dt_conta_w, ds_proc_tuss_w, nr_seq_tuss_item_w) INTO STRICT ds_proc_tuss_w, nr_seq_tuss_item_w;
					
	update 	procedimento_paciente
	set	ds_proc_tuss = ds_proc_tuss_w,
		nr_seq_tuss_item = nr_seq_tuss_item_w	
	where 	nr_sequencia = nr_sequencia_p;
	
end if;


if (ie_separa_partic_adic_hor_w = 'S') and (cd_proced_calculo_horario_w IS NOT NULL AND cd_proced_calculo_horario_w::text <> '')  and (ie_status_acerto_w = 1) then

	select	max(vl_procedimento)
	into STRICT	vl_procedimento_w
	from	procedimento_paciente
	where	nr_sequencia = nr_seq_proc_calc_w;

	open C04;
	loop
	fetch C04 into
		C04_w;
	EXIT WHEN NOT FOUND; /* apply on C04 */
		begin

		insert into procedimento_participante(
		nr_sequencia, nr_seq_partic, ie_funcao,
		dt_atualizacao, nm_usuario, cd_pessoa_fisica,
		cd_cgc, ie_valor_informado, ie_emite_conta,
		vl_participante, vl_conta, nr_lote_contabil,
		nr_conta_medico, ie_tipo_servico_sus, ie_tipo_ato_sus,
		qt_ponto_sus, vl_ponto_sus, vl_original,
		ie_responsavel_credito, pr_procedimento, cd_especialidade,
		pr_faturar, cd_medico_convenio, nr_doc_honor_conv,
		nr_seq_proc_crit_repasse, ie_tiss_tipo_guia, nr_cirurgia,
		cd_cbo, ie_doc_executor, ie_participou_sus,
		cd_medico_exec_tiss, cd_cgc_prestador_tiss, ds_proc_tiss,
		ds_prestador_tiss, cd_prestador_tiss, cd_proc_conv,
		ds_proc_conv, cd_cgc_prest_solic_tiss, vl_repasse_calc)
		 values (
		nr_seq_proc_calc_w, C04_w.nr_seq_partic, C04_w.ie_funcao,
		C04_w.dt_atualizacao, C04_w.nm_usuario, C04_w.cd_pessoa_fisica,
		C04_w.cd_cgc, C04_w.ie_valor_informado, C04_w.ie_emite_conta,
		(C04_w.vl_participante * (tx_adic_medico_w-1)), (C04_w.vl_conta * (tx_adic_medico_w-1)), C04_w.nr_lote_contabil,
		C04_w.nr_conta_medico, C04_w.ie_tipo_servico_sus, C04_w.ie_tipo_ato_sus,
		C04_w.qt_ponto_sus, C04_w.vl_ponto_sus, C04_w.vl_original,
		C04_w.ie_responsavel_credito, C04_w.pr_procedimento, C04_w.cd_especialidade,
		C04_w.pr_faturar, C04_w.cd_medico_convenio, C04_w.nr_doc_honor_conv,
		C04_w.nr_seq_proc_crit_repasse, C04_w.ie_tiss_tipo_guia, C04_w.nr_cirurgia,
		C04_w.cd_cbo, C04_w.ie_doc_executor, C04_w.ie_participou_sus,
		C04_w.cd_medico_exec_tiss, C04_w.cd_cgc_prestador_tiss, C04_w.ds_proc_tiss,
		C04_w.ds_prestador_tiss, C04_w.cd_prestador_tiss, C04_w.cd_proc_conv,
		C04_w.ds_proc_conv, C04_w.cd_cgc_prest_solic_tiss, C04_w.vl_repasse_calc);

		vl_procedimento_w	:= vl_procedimento_w + (C04_w.vl_conta * (tx_adic_medico_w-1));

		end;
	end loop;
	close C04;

	update	procedimento_paciente
	set	vl_procedimento = vl_procedimento_w
	where	nr_sequencia = nr_seq_proc_calc_w;

end if;

select	coalesce(max(nr_seq_regra_fluxo),0)
into STRICT	nr_seq_regra_fluxo_w
from	conta_paciente
where	nr_interno_conta = nr_interno_conta_w;

select	count(*)
into STRICT	qt_regra_fluxo_w
from	cf_regra
where	ie_situacao = 'A';

if (coalesce(nr_seq_regra_fluxo_w,0) = 0) and (qt_regra_fluxo_w > 0) then
	begin
	cf_gravar_dados_guia(cd_estabelecimento_w, cd_convenio_w, nr_interno_conta_w, nr_seq_proc_interno_w, nr_seq_exame_w, dt_procedimento_w,  '1', ds_erro_w, nm_usuario_p);
	end;
end if;

if (coalesce(nr_seq_regra_filme_w,0) > 0) then

	select	coalesce(max(ie_especialidade_proc),'N')
	into STRICT	ie_especialidade_proc_w
	from	convenio_regra_filme
	where	nr_sequencia = nr_seq_regra_filme_w;

	if (coalesce(ie_especialidade_proc_w,'N') = 'S') then
	
		select	max(cd_especialidade)
		into STRICT	cd_espec_medica_filme_w
		from	procedimento_paciente
		where	nr_sequencia = nr_sequencia_p;
		
		if (coalesce(cd_espec_medica_filme_w,0) > 0) then
		
			update	procedimento_paciente
			set	cd_especialidade = cd_espec_medica_filme_w
			where	nr_seq_proc_princ = nr_sequencia_p
			and	nr_seq_cor_exec = 5419;
		
		end if;
	
	end if;

end if;


ie_duplica_proc_pacote_estab_w:= coalesce(Obter_valor_param_usuario(0, 141, obter_perfil_ativo, nm_usuario_p, cd_estab_logado_w),'N');
-- OS 247475
if	(((ie_duplica_proc_pacote_estab_w = 'S') or (ie_duplica_proc_pacote_estab_w = 'A' AND cd_estab_logado_w = cd_estab_atend_w)) and (coalesce(cd_estab_logado_w,0) <> coalesce(cd_estab_terceiro_w,0)))then
	CALL Gerar_Proc_Zerado_Estab_Orig(nr_sequencia_p, nr_seq_proc_orig_w, cd_convenio_w, cd_categoria_w, cd_estab_logado_w, nm_usuario_p);
end if;

<<final>>

if (qt_existe_repasse_w = 0) then
	/*Foi criado para setar o goto, sem esse if ele da erro de compilacao*/

	qt_existe_repasse_w := 1;
end if;

/* Verificacao para aplicar taxa de ajuste no valor do procedimento conforme complexidade informada. 
   Este processo e utilizado para a Alemanha e podera ser utilizado para outros paises. O Brasil nao
   utiliza este processo de complexidade, portanto nao afetara os clientes do Brasil. 
   O cadastro e informacao de complexidade no procedimento sao realizados na funcao Faturamento Paciente. */
select	max(nr_seq_complexidade)
into STRICT	nr_seq_complexidade_w
from	procedimento_paciente_adic
where	nr_seq_proc_pac = nr_sequencia_p;
if (nr_seq_complexidade_w IS NOT NULL AND nr_seq_complexidade_w::text <> '') then
	select	obter_ajuste_complexidade(nr_seq_complexidade_w,dt_procedimento_w)
	into STRICT	tx_ajuste_complex_w
	;
	if (tx_ajuste_complex_w <> 0) then
		update	procedimento_paciente
		set	vl_procedimento = vl_procedimento + ((vl_procedimento * tx_ajuste_complex_w) / 100)
		where	nr_sequencia = nr_sequencia_p;
	end if;
end if;

if	((2 = philips_param_pck.get_cd_pais) or (upper(ds_nls_territory_w) = 'MEXICO') or (15 = philips_param_pck.get_cd_pais) or (upper(ds_nls_territory_w) = 'BOLIVIA')) and -- 2 = Mexico and 15 = Bolivia
	(nr_interno_conta_w IS NOT NULL AND nr_interno_conta_w::text <> '') and (ie_regra_pacote_ctb_w = 'N')	then
	CALL gerar_tributo_conta_pac(nr_interno_conta_w, nr_sequencia_p, 'P', nm_usuario_p);
end if;

--Geracao dos valores de rateio por conta contabil
CALL ctb_parametros_cc_rateio_pck.gravar_rateio_proc(nr_sequencia_p, cd_sequencia_parametro_w, nm_usuario_p);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualiza_preco_proc_amb ( nr_sequencia_p bigint, nm_usuario_p text) FROM PUBLIC;

