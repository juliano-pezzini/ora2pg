-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_recalcular_preco_sca ( nr_seq_segurado_p bigint, cd_motivo_reajuste_p text, cd_estabelecimento_p bigint, dt_reajuste_p timestamp, nr_seq_sca_p bigint, nm_usuario_p text) AS $body$
DECLARE


dt_reajuste_w			pls_segurado_preco_origem.dt_reajuste%type;
nr_seq_seg_preco_ant_w		pls_segurado_preco_origem.nr_sequencia%type;
qt_idade_w			bigint;
nm_beneficiario_w		pessoa_fisica.nm_pessoa_fisica%type;
ie_grau_parentesco_w		varchar(5);
nr_seq_contrato_w		pls_segurado.nr_seq_contrato%type;
nr_seq_titular_w		pls_segurado.nr_seq_titular%type;
nr_seq_tabela_w			pls_tabela_preco.nr_sequencia%type;
ie_preco_vidas_contrato_w	pls_tabela_preco.ie_preco_vidas_contrato%type;
ie_calculo_vidas_w		pls_tabela_preco.ie_calculo_vidas%type;
dt_reajuste_trunc_w		timestamp;
qt_vidas_w			bigint := 0;
nr_seq_plano_preco_w		pls_plano_preco.nr_sequencia%type;
vl_preco_sca_w			pls_plano_preco.vl_preco_atual%type;
nr_seq_contrato_sca_w		pls_sca_vinculo.nr_seq_contrato%type;
nr_seq_segurado_sca_w		pls_sca_vinculo.nr_seq_segurado%type;
ie_origem_sca_w			varchar(3) := null;
ie_geracao_valores_sca_w	pls_sca_vinculo.ie_geracao_valores%type;
ds_observacao_w			pls_segurado_preco_origem.ds_observacao%type;
ie_titularidade_w		varchar(3);
nr_seq_plano_w			pls_sca_vinculo.nr_seq_plano%type;

C01 CURSOR FOR
	SELECT	nr_sequencia,
		coalesce(vl_preco_atual, 0)
	from	pls_plano_preco
	where	qt_idade_w	>= qt_idade_inicial
	and	qt_idade_w	<= qt_idade_final
	and	nr_seq_tabela	= nr_seq_tabela_w
	and	coalesce(ie_grau_titularidade,ie_grau_parentesco_w)	= ie_grau_parentesco_w
	and	qt_vidas_w between coalesce(qt_vidas_inicial,qt_vidas_w) and coalesce(qt_vidas_final,qt_vidas_w)
	order	by	coalesce(ie_grau_titularidade,' ');


BEGIN

ds_observacao_w := '';

if (dt_reajuste_p IS NOT NULL AND dt_reajuste_p::text <> '') then
	dt_reajuste_w	:= dt_reajuste_p;
else
	dt_reajuste_w	:= trunc(clock_timestamp(),'month');
end if;

dt_reajuste_trunc_w := trunc(dt_reajuste_w,'mm');

select	max(nr_sequencia)
into STRICT	nr_seq_seg_preco_ant_w
from	pls_segurado_preco_origem
where	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
and	nr_seq_segurado	= nr_seq_segurado_p;

select	(obter_idade(a.dt_nascimento,coalesce(dt_reajuste_p, trunc(clock_timestamp(),'dd')),'A'))::numeric ,
	a.nm_pessoa_fisica,
	coalesce(substr(pls_obter_garu_dependencia_seg(b.nr_sequencia,'C'),1,2),'X'),
	b.nr_seq_contrato,
	b.nr_seq_titular
into STRICT	qt_idade_w,
	nm_beneficiario_w,
	ie_grau_parentesco_w,
	nr_seq_contrato_w,
	nr_seq_titular_w
from	pessoa_fisica	a,
	pls_segurado	b
where	a.cd_pessoa_fisica = b.cd_pessoa_fisica
and	b.nr_sequencia 	   = nr_seq_segurado_p;

if (coalesce(nr_seq_titular_w::text, '') = '') then
	ie_titularidade_w := 'T';
else
	ie_titularidade_w := 'D';
end if;

begin
select	nr_seq_tabela,
	nr_seq_contrato,
	nr_seq_segurado,
	ie_geracao_valores,
	nr_seq_plano
into STRICT	nr_seq_tabela_w,
	nr_seq_contrato_sca_w,
	nr_seq_segurado_sca_w,
	ie_geracao_valores_sca_w,
	nr_seq_plano_w
from	pls_sca_vinculo
where	nr_sequencia = nr_seq_sca_p;
exception
when others then
	nr_seq_tabela_w := null;
end;

begin
select	coalesce(ie_preco_vidas_contrato,'N'),
	coalesce(ie_calculo_vidas,'A')
into STRICT	ie_preco_vidas_contrato_w,
	ie_calculo_vidas_w
from	pls_tabela_preco
where	nr_sequencia	= nr_seq_tabela_w;
exception
when others then
	ie_calculo_vidas_w	:= 'A';
end;

if (nr_seq_tabela_w IS NOT NULL AND nr_seq_tabela_w::text <> '') and (ie_preco_vidas_contrato_w = 'S') then
	if (qt_idade_w > 999) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort( 186269, 'NR_SEQ_SEGURADO='||nr_seq_segurado_p||';'||'NM_SEGURADO='||nm_beneficiario_w||';'||'QT_IDADE='||qt_idade_w );
		/* O beneficiário 859507 - Gregory Clasen possui 1200 anos. Verifique. */

	end if;

	if (ie_calculo_vidas_w = 'A') then
		select	count(*)
		into STRICT	qt_vidas_w
		from	pls_segurado
		where	nr_seq_contrato = nr_seq_contrato_w
		and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
		and	((coalesce(dt_rescisao::text, '') = '') or (trunc(dt_rescisao,'mm') > dt_reajuste_trunc_w));
	elsif (ie_calculo_vidas_w = 'T') then
		select	count(*)
		into STRICT	qt_vidas_w
		from	pls_segurado
		where	nr_seq_contrato = nr_seq_contrato_w
		and	coalesce(nr_seq_titular::text, '') = ''
		and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
		and	((coalesce(dt_rescisao::text, '') = '') or (trunc(dt_rescisao,'mm') > dt_reajuste_trunc_w));
	elsif (ie_calculo_vidas_w = 'D') then
		select	count(*)
		into STRICT	qt_vidas_w
		from	pls_segurado
		where	nr_seq_contrato = nr_seq_contrato_w
		and	(nr_seq_titular IS NOT NULL AND nr_seq_titular::text <> '')
		and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
		and	((coalesce(dt_rescisao::text, '') = '') or (trunc(dt_rescisao,'mm') > dt_reajuste_trunc_w));
	elsif (ie_calculo_vidas_w = 'TD') then
		select	count(*)
		into STRICT	qt_vidas_w
		from	pls_segurado a
		where	a.nr_seq_contrato = nr_seq_contrato_w
		and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
		and	((coalesce(a.dt_rescisao::text, '') = '') or (trunc(a.dt_rescisao,'mm') > dt_reajuste_trunc_w))
		and	((coalesce(nr_seq_titular::text, '') = '') or ((nr_seq_titular IS NOT NULL AND nr_seq_titular::text <> '') and ((SELECT	count(*)
											from	grau_parentesco x
											where	x.nr_sequencia = a.nr_seq_parentesco
											and	x.ie_tipo_parentesco = '1') > 0)));
	elsif (ie_calculo_vidas_w = 'F') then
		qt_vidas_w	:= coalesce(pls_obter_qt_vida_benef(nr_seq_segurado_p,nr_seq_titular_w,dt_reajuste_trunc_w),0);
	end if;

	open C01;
	loop
	fetch C01 into
		nr_seq_plano_preco_w,
		vl_preco_sca_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
	end loop;
	close C01;

	if (coalesce(nr_seq_plano_preco_w, 0) <> 0) and (coalesce(vl_preco_sca_w, 0) > 0) then
		if (coalesce(nr_seq_contrato_sca_w, 0) <> 0) then
			ie_origem_sca_w	:= 'SC';
		elsif (coalesce(nr_seq_segurado_sca_w, 0) <> 0) then
			ie_origem_sca_w	:= 'SB';
		end if;

		if (ie_geracao_valores_sca_w <> 'B') and (ie_geracao_valores_sca_w <> ie_titularidade_w) then
			vl_preco_sca_w	:= 0;
			ds_observacao_w	:= 'Valor zerado de acordo com a titularidade do beneficiário';
		end if;

		insert into pls_segurado_preco_origem(nr_sequencia,
			cd_estabelecimento,
			dt_atualizacao,
			nm_usuario,
			nr_seq_segurado,
			nr_seq_plano,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			vl_preco_atual,
			nr_seq_tabela,
			ie_origem_preco,
			dt_liberacao,
			cd_motivo_reajuste,
			dt_reajuste,
			vl_preco_ant,
			qt_idade,
			nm_usuario_liberacao,
			nr_seq_preco,
			nr_seq_vinculo_sca,
			ds_observacao)
		values (nextval('pls_segurado_preco_origem_seq'),
			cd_estabelecimento_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_segurado_p,
			nr_seq_plano_w,
			clock_timestamp(),
			nm_usuario_p,
			vl_preco_sca_w,
			nr_seq_tabela_w,
			ie_origem_sca_w,
			clock_timestamp(),
			coalesce(cd_motivo_reajuste_p,'C'),
			dt_reajuste_p,
			0,
			qt_idade_w,
			nm_usuario_p,
			nr_seq_plano_preco_w,
			nr_seq_sca_p,
			ds_observacao_w);
	end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_recalcular_preco_sca ( nr_seq_segurado_p bigint, cd_motivo_reajuste_p text, cd_estabelecimento_p bigint, dt_reajuste_p timestamp, nr_seq_sca_p bigint, nm_usuario_p text) FROM PUBLIC;

