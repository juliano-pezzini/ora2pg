-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE copiar_permissao_agenda_html ( nm_usuario_p text, ds_agendas_p text, nr_seq_permissao_p bigint) AS $body$
DECLARE


cd_pessoa_fisica_w		varchar(10);
cd_perfil_w			bigint;
cd_setor_atendimento_w		bigint;
ie_agenda_w			varchar(1);
cd_agenda_w			bigint;
cd_medico_prop_w		varchar(10);
cd_medico_w			varchar(10);
ds_possib_w			text;


C01 is CURSOR
WITH x AS (SELECT ds_possib_w str )
	SELECT agenda
	from (WITH RECURSIVE cte AS (
SELECT to_char(regexp_substr(str, '[^,]+', 1, 1)) AS agenda
        FROM x
        LEVEL <= length(regexp_replace(str, '[^,]+', '')) + 1  UNION ALL
SELECT to_char(regexp_substr(str, '[^,]+', 1, (c.level+1))) AS agenda
        FROM x
        LEVEL <= length(regexp_replace(str, '[^,]+', '')) + 1 JOIN cte c ON ()

) SELECT * FROM cte;
) alias5
	where agenda in (select cd_agenda
					from agenda);


BEGIN

ds_possib_w := trim(both ds_agendas_p);

if (nr_seq_permissao_p IS NOT NULL AND nr_seq_permissao_p::text <> '') then
	begin
	open C01;
	loop
	fetch C01 into	
		cd_agenda_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		
		select	cd_pessoa_fisica
		into STRICT 	cd_medico_w
		from	agenda
		where	cd_agenda = cd_agenda_w;		
		
		
		select 	max(cd_medico_prop)
		into STRICT	cd_medico_prop_w
		from	med_permissao
		where	cd_agenda = cd_agenda_w;
		
		
		if (cd_agenda_w > 0) and
			((cd_medico_prop_w IS NOT NULL AND cd_medico_prop_w::text <> '' AND cd_medico_w IS NOT NULL AND cd_medico_w::text <> '') or (coalesce(cd_medico_w::text, '') = '')) then
			begin		
			insert into med_permissao(
						nr_sequencia,
						cd_medico_prop,
						dt_atualizacao,
						nm_usuario,
						ie_paciente,
						ie_atendimento,
						ie_evolucao,
						ie_protocolo,
						ie_receita,
						ie_solic_exame,
						ie_agenda,
						ie_resultado,
						ie_consulta,
						ie_fechar_atend,
						ie_med_padrao,
						ie_exame_padrao,
						ie_permissao,
						ie_config_relat,
						ie_grupo_medico,
						ie_diagnostico,
						ie_texto_adicional,
						ie_referencia,
						ie_eis,
						ie_enderecos,
						ie_texto_padrao,
						ie_parametro,
						ie_config_agenda,
						cd_pessoa_fisica,
						cd_medico,
						nr_seq_grupo,
						cd_perfil,
						cd_setor_atendimento,
						ie_permite_excluir_agenda,
						ie_permite_bloquear_agenda,
						cd_agenda,
						ie_valor_normal,
						dt_atualizacao_nrec,
						nm_usuario_nrec)
						(SELECT	nextval('med_permissao_seq'),
								cd_medico_prop_w,
								clock_timestamp(),
								nm_usuario_p,
								a.ie_paciente,
								a.ie_atendimento,
								a.ie_evolucao,
								a.ie_protocolo,
								a.ie_receita,
								a.ie_solic_exame,
								a.ie_agenda,
								a.ie_resultado,
								a.ie_consulta,
								a.ie_fechar_atend,
								a.ie_med_padrao,
								a.ie_exame_padrao,
								a.ie_permissao,
								a.ie_config_relat,
								a.ie_grupo_medico,
								a.ie_diagnostico,
								a.ie_texto_adicional,
								a.ie_referencia,
								a.ie_eis,
								a.ie_enderecos,
								a.ie_texto_padrao,
								a.ie_parametro,
								a.ie_config_agenda,
								a.cd_pessoa_fisica,
								a.cd_medico,
								a.nr_seq_grupo,
								a.cd_perfil,
								a.cd_setor_atendimento,
								ie_permite_excluir_agenda,
								ie_permite_bloquear_agenda,
								cd_agenda_w,
								a.ie_valor_normal,
								clock_timestamp(),
								nm_usuario_p
							from	med_permissao a
							where	a.nr_sequencia = nr_seq_permissao_p);
			end;
		end if;	
		end;
	end loop;
	close C01;
	end;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE copiar_permissao_agenda_html ( nm_usuario_p text, ds_agendas_p text, nr_seq_permissao_p bigint) FROM PUBLIC;

