-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE sup_verifica_bloqueio_mat_inv (cd_estabelecimento_p bigint, dt_mesano_referencia_p timestamp, cd_local_estoque_p bigint, cd_material_estoque_p bigint, cd_fornecedor_p text, ie_consignado_p text, ie_bloqueio_p INOUT text) AS $body$
DECLARE


dt_mesano_consulta_w	timestamp;
dt_mesano_referencia_w	timestamp;
dt_mesano_vigente_w	timestamp;
qt_existe_w		integer;

ie_bloqueio_inventario_w	varchar(1);


BEGIN
dt_mesano_consulta_w := pkg_date_utils.start_of(coalesce(dt_mesano_referencia_p,clock_timestamp()),'MONTH',0);

select	max(dt_mesano_vigente)
into STRICT	dt_mesano_vigente_w
from 	parametro_estoque
where	cd_estabelecimento	= cd_estabelecimento_p;


if (ie_consignado_p = 'N') then
	begin

	begin
	select	coalesce(a.ie_bloqueio_inventario,'N')
	into STRICT	ie_bloqueio_inventario_w
	from	saldo_estoque a
	where	a.dt_mesano_referencia	= dt_mesano_consulta_w
	and	a.cd_estabelecimento	= cd_estabelecimento_p
	and	a.cd_local_estoque	= cd_local_estoque_p
	and	a.cd_material		= cd_material_estoque_p;
	exception
		when others then
		begin
		ie_bloqueio_inventario_w := 'N';
		end;
	end;

	if (ie_bloqueio_inventario_w = 'S') then
		begin
		select	count(*)
		into STRICT	qt_existe_w
		from	inventario a,
			inventario_material b
		where	a.nr_sequencia = b.nr_seq_inventario
		and	a.ie_consignado = 'N'
		and	b.cd_material = cd_material_estoque_p
		and	a.cd_local_estoque = cd_local_estoque_p
		and	coalesce(a.dt_atualizacao_saldo::text, '') = ''
		and	(a.dt_bloqueio IS NOT NULL AND a.dt_bloqueio::text <> '');

		if (qt_existe_w = 0) then
			begin
			select	/*+ index (s salesto_i2) */				coalesce(max(s.dt_mesano_referencia), pkg_date_utils.start_of(clock_timestamp(), 'MONTH',0))
			into STRICT	dt_mesano_referencia_w
			from 	saldo_estoque s
			where	s.ie_bloqueio_inventario	= 'S'
			and	s.cd_estabelecimento	= cd_estabelecimento_p
			and 	s.cd_material		= cd_material_estoque_p
			and	s.cd_local_estoque	= cd_local_estoque_p
			and 	s.dt_mesano_referencia	>= dt_mesano_vigente_w;

			update	saldo_estoque
			set	ie_bloqueio_inventario	= 'N'
			where	cd_estabelecimento	= cd_estabelecimento_p
			and	cd_local_estoque	= cd_local_estoque_p
			and	cd_material		= cd_material_estoque_p
			and	dt_mesano_referencia	<= dt_mesano_referencia_w;

			ie_bloqueio_inventario_w := 'N';
			end;
		end if;
		end;
	end if;
	end;
else
	begin

	begin
	select	coalesce(a.ie_bloqueio_inventario,'N')
	into STRICT	ie_bloqueio_inventario_w
	from	fornecedor_mat_consignado a
	where	a.dt_mesano_referencia	= dt_mesano_consulta_w
	and	a.cd_estabelecimento	= cd_estabelecimento_p
	and	a.cd_local_estoque	= cd_local_estoque_p
	and	a.cd_material		= cd_material_estoque_p
	and	a.cd_fornecedor		= cd_fornecedor_p;
	exception
		when others then
		begin
		ie_bloqueio_inventario_w := 'N';
		end;
	end;


	if (ie_bloqueio_inventario_w = 'S') then
		begin
		select	count(*)
		into STRICT	qt_existe_w
		from	inventario a,
			inventario_material b
		where	a.nr_sequencia = b.nr_seq_inventario
		and	a.ie_consignado = 'S'
		and	coalesce(b.cd_fornecedor, a.cd_fornecedor) = cd_fornecedor_p
		and	b.cd_material = cd_material_estoque_p
		and	a.cd_local_estoque = cd_local_estoque_p
		and	coalesce(a.dt_atualizacao_saldo::text, '') = ''
		and	(a.dt_bloqueio IS NOT NULL AND a.dt_bloqueio::text <> '');

		if (qt_existe_w = 0) then
			begin
			select	/*+ index (s salesto_i2) */				coalesce(max(s.dt_mesano_referencia), pkg_date_utils.start_of(clock_timestamp(), 'MONTH',0))
			into STRICT	dt_mesano_referencia_w
			from 	fornecedor_mat_consignado s
			where	s.ie_bloqueio_inventario	= 'S'
			and	s.cd_estabelecimento	= cd_estabelecimento_p
			and 	s.cd_material		= cd_material_estoque_p
			and	s.cd_local_estoque	= cd_local_estoque_p
			and	s.cd_fornecedor		= cd_fornecedor_p
			and 	s.dt_mesano_referencia	>= dt_mesano_vigente_w;

			update	fornecedor_mat_consignado
			set	ie_bloqueio_inventario	= 'N'
			where	cd_estabelecimento		= cd_estabelecimento_p
			and	cd_local_estoque		= cd_local_estoque_p
			and	cd_fornecedor		= cd_fornecedor_p
			and	cd_material		= cd_material_estoque_p
			and	dt_mesano_referencia	<= dt_mesano_referencia_w;

			ie_bloqueio_inventario_w := 'N';
			end;
		end if;
		end;
	end if;
	end;
end if;

ie_bloqueio_p := ie_bloqueio_inventario_w;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE sup_verifica_bloqueio_mat_inv (cd_estabelecimento_p bigint, dt_mesano_referencia_p timestamp, cd_local_estoque_p bigint, cd_material_estoque_p bigint, cd_fornecedor_p text, ie_consignado_p text, ie_bloqueio_p INOUT text) FROM PUBLIC;

