-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_w_philips_sales_forecast ( dt_ref_prev_inic_p timestamp, dt_ref_prev_term_p timestamp, nm_usuario_p text) AS $body$
DECLARE

		 
nr_seq_cliente_w	bigint;
ds_razao_social_w	varchar(80);
nr_seq_tipo_item_w	bigint;
ds_tipo_item_w		varchar(60);
ds_canal_w		varchar(60);
dt_ref_prev_inic_w	timestamp;
dt_ref_prev_term_w	timestamp;
qt_parcelas_w		smallint;
dt_vencimento_w		timestamp;
vl_parcela_w		double precision;
nr_seq_previsao_w	bigint;
nr_parcela_w		smallint;
dt_parcela_w		timestamp;
nr_ctrl_loop_w		smallint;
dt_prev_fecham_w	timestamp;
vl_item_w		double precision;
cd_canal_w		bigint;
cd_gestor_w		varchar(10);
ds_gestor_w		varchar(255);
ie_fase_venda_w		varchar(50);

c01 CURSOR FOR 
SELECT	c.nr_sequencia, 
	j.nm_fantasia, 
	i.nr_seq_tipo_item, 
	t.ds_tipo, 
	PS_obter_nome_canal_venda(c.nr_sequencia) ds_canal, 
	i.qt_frequencia, 
	f.dt_vencimento, 
	f.vl_parcela, 
	c.dt_revisao_prevista, 
	i.vl_item, 
	com_obter_canal_venda(c.nr_sequencia,'C') cd_canal, 
	PS_obter_gestor_conta(c.nr_sequencia,'C') cd_gestor, 
	substr(PS_obter_gestor_conta(c.nr_sequencia,''),1,255) ds_gestor, 
	Obter_Valor_Dominio(1314,c.ie_natureza) ie_fase_venda  
FROM com_tipo_item_prop t, com_cliente_proposta p, pessoa_juridica j, com_cliente c, com_cliente_prop_item i
LEFT OUTER JOIN com_cliente_prop_parc f ON (i.nr_sequencia = f.nr_seq_prop_item)
WHERE t.nr_sequencia = i.nr_seq_tipo_item and j.cd_cgc = c.cd_cnpj and c.nr_sequencia = p.nr_seq_cliente and p.nr_sequencia = i.nr_seq_proposta and coalesce(i.ie_orcam_coml_wheb,'N') = 'S' and (p.dt_liberacao IS NOT NULL AND p.dt_liberacao::text <> '') and coalesce(p.dt_cancelamento::text, '') = '' and coalesce(p.dt_vencimento,clock_timestamp()) >= clock_timestamp() and c.dt_revisao_prevista between dt_ref_prev_inic_w and dt_ref_prev_term_w order by 
	c.nr_sequencia, 
	p.nr_sequencia, 
	i.nr_sequencia;


BEGIN 
CALL exec_sql_dinamico('Tasy','truncate table w_philips_sales_forecast');
 
if (dt_ref_prev_inic_p IS NOT NULL AND dt_ref_prev_inic_p::text <> '') and (dt_ref_prev_term_p IS NOT NULL AND dt_ref_prev_term_p::text <> '') and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') then 
	begin 
	dt_ref_prev_inic_w := PKG_DATE_UTILS.start_of(dt_ref_prev_inic_p,'month',0);
	dt_ref_prev_term_w := PKG_DATE_UTILS.start_of(dt_ref_prev_term_p,'month',0);
	 
	if (trunc(months_between(dt_ref_prev_term_w,dt_ref_prev_inic_w)) > 11) then 
		begin 
		dt_ref_prev_term_w := PKG_DATE_UTILS.ADD_MONTH(dt_ref_prev_inic_w,11,0);
		end;
	end if;
	 
	open c01;
	loop 
	fetch c01 into	nr_seq_cliente_w, 
			ds_razao_social_w, 
			nr_seq_tipo_item_w, 
			ds_tipo_item_w, 
			ds_canal_w, 
			qt_parcelas_w, 
			dt_vencimento_w, 
			vl_parcela_w, 
			dt_prev_fecham_w, 
			vl_item_w, 
			cd_canal_w, 
			cd_gestor_w, 
			ds_gestor_w, 
			ie_fase_venda_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin 
		select	coalesce(max(nr_sequencia),0) 
		into STRICT	nr_seq_previsao_w 
		from	w_philips_sales_forecast 
		where	id_customer = nr_seq_cliente_w 
		and	id_service = nr_seq_tipo_item_w;
		 
		if (nr_seq_previsao_w = 0) then 
			begin 
			select	nextval('w_philips_sales_forecast_seq') 
			into STRICT	nr_seq_previsao_w 
			;
			 
			insert into w_philips_sales_forecast( 
				nr_sequencia, 
				id_customer, 
				customer, 
				id_service, 
				service, 
				id_channel, 
				channel, 
				id_account_manager, 
				manager, 
				stage_sale, 
				month_01, 
				month_02, 
				month_03, 
				month_04, 
				month_05, 
				month_06, 
				month_07, 
				month_08, 
				month_09, 
				month_10, 
				month_11, 
				month_12, 
				total) 
			values ( 
				nr_seq_previsao_w, 
				nr_seq_cliente_w, 
				ds_razao_social_w, 
				nr_seq_tipo_item_w, 
				ds_tipo_item_w, 
				cd_canal_w, 
				ds_canal_w, 
				cd_gestor_w, 
				ds_gestor_w, 
				ie_fase_venda_w, 
				0, 
				0, 
				0, 
				0, 
				0, 
				0, 
				0, 
				0, 
				0, 
				0, 
				0, 
				0, 
				0);
			end;
		end if;
		 
		dt_parcela_w	:= PKG_DATE_UTILS.start_of(coalesce(dt_vencimento_w,dt_prev_fecham_w),'month',0);
		 
		if (dt_parcela_w <= dt_ref_prev_term_w) then 
			begin 
			update	w_philips_sales_forecast 
			set	month_01 = CASE WHEN PKG_DATE_UTILS.start_of(dt_parcela_w,'month',0)=dt_ref_prev_inic_w THEN  coalesce(vl_parcela_w,vl_item_w)  ELSE coalesce(month_01,0) END , 
				month_02 = CASE WHEN PKG_DATE_UTILS.start_of(dt_parcela_w,'month',0)=PKG_DATE_UTILS.start_of(PKG_DATE_UTILS.ADD_MONTH(dt_ref_prev_inic_w,1,0),'month',0) THEN  coalesce(vl_parcela_w,vl_item_w)  ELSE coalesce(month_02,0) END , 
				month_03 = CASE WHEN PKG_DATE_UTILS.start_of(dt_parcela_w,'month',0)=PKG_DATE_UTILS.start_of(PKG_DATE_UTILS.ADD_MONTH(dt_ref_prev_inic_w,2,0),'month',0) THEN  coalesce(vl_parcela_w,vl_item_w)  ELSE coalesce(month_03,0) END , 
				month_04 = CASE WHEN PKG_DATE_UTILS.start_of(dt_parcela_w,'month',0)=PKG_DATE_UTILS.start_of(PKG_DATE_UTILS.ADD_MONTH(dt_ref_prev_inic_w,3,0),'month',0) THEN  coalesce(vl_parcela_w,vl_item_w)  ELSE coalesce(month_04,0) END , 
				month_05 = CASE WHEN PKG_DATE_UTILS.start_of(dt_parcela_w,'month',0)=PKG_DATE_UTILS.start_of(PKG_DATE_UTILS.ADD_MONTH(dt_ref_prev_inic_w,4,0),'month',0) THEN  coalesce(vl_parcela_w,vl_item_w)  ELSE coalesce(month_05,0) END , 
				month_06 = CASE WHEN PKG_DATE_UTILS.start_of(dt_parcela_w,'month',0)=PKG_DATE_UTILS.start_of(PKG_DATE_UTILS.ADD_MONTH(dt_ref_prev_inic_w,5,0),'month',0) THEN  coalesce(vl_parcela_w,vl_item_w)  ELSE coalesce(month_06,0) END , 
				month_07 = CASE WHEN PKG_DATE_UTILS.start_of(dt_parcela_w,'month',0)=PKG_DATE_UTILS.start_of(PKG_DATE_UTILS.ADD_MONTH(dt_ref_prev_inic_w,6,0),'month',0) THEN  coalesce(vl_parcela_w,vl_item_w)  ELSE coalesce(month_07,0) END , 
				month_08 = CASE WHEN PKG_DATE_UTILS.start_of(dt_parcela_w,'month',0)=PKG_DATE_UTILS.start_of(PKG_DATE_UTILS.ADD_MONTH(dt_ref_prev_inic_w,7,0),'month',0) THEN  coalesce(vl_parcela_w,vl_item_w)  ELSE coalesce(month_08,0) END , 
				month_09 = CASE WHEN PKG_DATE_UTILS.start_of(dt_parcela_w,'month',0)=PKG_DATE_UTILS.start_of(PKG_DATE_UTILS.ADD_MONTH(dt_ref_prev_inic_w,8,0),'month',0) THEN  coalesce(vl_parcela_w,vl_item_w)  ELSE coalesce(month_09,0) END , 
				month_10 = CASE WHEN PKG_DATE_UTILS.start_of(dt_parcela_w,'month',0)=PKG_DATE_UTILS.start_of(PKG_DATE_UTILS.ADD_MONTH(dt_ref_prev_inic_w,9,0),'month',0) THEN  coalesce(vl_parcela_w,vl_item_w)  ELSE coalesce(month_10,0) END , 
				month_11 = CASE WHEN PKG_DATE_UTILS.start_of(dt_parcela_w,'month',0)=PKG_DATE_UTILS.start_of(PKG_DATE_UTILS.ADD_MONTH(dt_ref_prev_inic_w,10,0),'month',0) THEN  coalesce(vl_parcela_w,vl_item_w)  ELSE coalesce(month_11,0) END , 
				month_12 = CASE WHEN PKG_DATE_UTILS.start_of(dt_parcela_w,'month',0)=PKG_DATE_UTILS.start_of(PKG_DATE_UTILS.ADD_MONTH(dt_ref_prev_inic_w,11,0),'month',0) THEN  coalesce(vl_parcela_w,vl_item_w)  ELSE coalesce(month_12,0) END  
			where	nr_sequencia = nr_seq_previsao_w;
			end;
		end if;
		 
		if (coalesce(qt_parcelas_w,0) > 0) then 
			begin 
			nr_parcela_w	:= 1;
			dt_parcela_w	:= PKG_DATE_UTILS.start_of(coalesce(dt_vencimento_w,dt_prev_fecham_w),'month',0);
			nr_ctrl_loop_w	:= 1;
			 
			while(nr_parcela_w <= qt_parcelas_w)and (dt_parcela_w <= dt_ref_prev_term_w) and (nr_ctrl_loop_w <= 12) loop 
				begin 
				update	w_philips_sales_forecast 
				set	month_01 = CASE WHEN PKG_DATE_UTILS.start_of(dt_parcela_w,'month',0)=dt_ref_prev_inic_w THEN  coalesce(vl_parcela_w,vl_item_w)  ELSE coalesce(month_01,0) END , 
					month_02 = CASE WHEN PKG_DATE_UTILS.start_of(dt_parcela_w,'month',0)=PKG_DATE_UTILS.start_of(PKG_DATE_UTILS.ADD_MONTH(dt_ref_prev_inic_w,1,0),'month',0) THEN  coalesce(vl_parcela_w,vl_item_w)  ELSE coalesce(month_02,0) END , 
					month_03 = CASE WHEN PKG_DATE_UTILS.start_of(dt_parcela_w,'month',0)=PKG_DATE_UTILS.start_of(PKG_DATE_UTILS.ADD_MONTH(dt_ref_prev_inic_w,2,0),'month',0) THEN  coalesce(vl_parcela_w,vl_item_w)  ELSE coalesce(month_03,0) END , 
					month_04 = CASE WHEN PKG_DATE_UTILS.start_of(dt_parcela_w,'month',0)=PKG_DATE_UTILS.start_of(PKG_DATE_UTILS.ADD_MONTH(dt_ref_prev_inic_w,3,0),'month',0) THEN  coalesce(vl_parcela_w,vl_item_w)  ELSE coalesce(month_04,0) END , 
					month_05 = CASE WHEN PKG_DATE_UTILS.start_of(dt_parcela_w,'month',0)=PKG_DATE_UTILS.start_of(PKG_DATE_UTILS.ADD_MONTH(dt_ref_prev_inic_w,4,0),'month',0) THEN  coalesce(vl_parcela_w,vl_item_w)  ELSE coalesce(month_05,0) END , 
					month_06 = CASE WHEN PKG_DATE_UTILS.start_of(dt_parcela_w,'month',0)=PKG_DATE_UTILS.start_of(PKG_DATE_UTILS.ADD_MONTH(dt_ref_prev_inic_w,5,0),'month',0) THEN  coalesce(vl_parcela_w,vl_item_w)  ELSE coalesce(month_06,0) END , 
					month_07 = CASE WHEN PKG_DATE_UTILS.start_of(dt_parcela_w,'month',0)=PKG_DATE_UTILS.start_of(PKG_DATE_UTILS.ADD_MONTH(dt_ref_prev_inic_w,6,0),'month',0) THEN  coalesce(vl_parcela_w,vl_item_w)  ELSE coalesce(month_07,0) END , 
					month_08 = CASE WHEN PKG_DATE_UTILS.start_of(dt_parcela_w,'month',0)=PKG_DATE_UTILS.start_of(PKG_DATE_UTILS.ADD_MONTH(dt_ref_prev_inic_w,7,0),'month',0) THEN  coalesce(vl_parcela_w,vl_item_w)  ELSE coalesce(month_08,0) END , 
					month_09 = CASE WHEN PKG_DATE_UTILS.start_of(dt_parcela_w,'month',0)=PKG_DATE_UTILS.start_of(PKG_DATE_UTILS.ADD_MONTH(dt_ref_prev_inic_w,8,0),'month',0) THEN  coalesce(vl_parcela_w,vl_item_w)  ELSE coalesce(month_09,0) END , 
					month_10 = CASE WHEN PKG_DATE_UTILS.start_of(dt_parcela_w,'month',0)=PKG_DATE_UTILS.start_of(PKG_DATE_UTILS.ADD_MONTH(dt_ref_prev_inic_w,9,0),'month',0) THEN  coalesce(vl_parcela_w,vl_item_w)  ELSE coalesce(month_10,0) END , 
					month_11 = CASE WHEN PKG_DATE_UTILS.start_of(dt_parcela_w,'month',0)=PKG_DATE_UTILS.start_of(PKG_DATE_UTILS.ADD_MONTH(dt_ref_prev_inic_w,10,0),'month',0) THEN  coalesce(vl_parcela_w,vl_item_w)  ELSE coalesce(month_11,0) END , 
					month_12 = CASE WHEN PKG_DATE_UTILS.start_of(dt_parcela_w,'month',0)=PKG_DATE_UTILS.start_of(PKG_DATE_UTILS.ADD_MONTH(dt_ref_prev_inic_w,11,0),'month',0) THEN  coalesce(vl_parcela_w,vl_item_w)  ELSE coalesce(month_12,0) END  
				where	nr_sequencia = nr_seq_previsao_w;
				 
				nr_parcela_w	:= nr_parcela_w + 1;
				dt_parcela_w 	:= PKG_DATE_UTILS.start_of(PKG_DATE_UTILS.ADD_MONTH(dt_parcela_w,1,0),'month',0);
				nr_ctrl_loop_w	:= nr_ctrl_loop_w + 1;
				end;
			end loop;
			end;
		end if;
		 
		update	w_philips_sales_forecast 
		set	total = coalesce(month_01,0) + coalesce(month_02,0) + coalesce(month_03,0) + coalesce(month_04,0) + coalesce(month_05,0) + coalesce(month_06,0) + 
				coalesce(month_07,0) + coalesce(month_08,0) + coalesce(month_09,0) + coalesce(month_10,0) + coalesce(month_11,0) + coalesce(month_12,0) 
		where	nr_sequencia = nr_seq_previsao_w;
		end;
	end loop;
	close c01;
	end;
end if;
commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_w_philips_sales_forecast ( dt_ref_prev_inic_p timestamp, dt_ref_prev_term_p timestamp, nm_usuario_p text) FROM PUBLIC;

