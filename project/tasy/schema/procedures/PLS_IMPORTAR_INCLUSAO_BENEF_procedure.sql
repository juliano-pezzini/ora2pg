-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_importar_inclusao_benef (( nr_seq_contrato_p bigint, nr_seq_intercambio_p bigint, cd_interface_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) is nr_seq_lote_inclusao_w bigint) RETURNS bigint AS $body$
DECLARE

nr_posicao_inicial_w	bigint;
nr_retorno_w		bigint := 0;


BEGIN
nr_posicao_inicial_w		:= position(ie_separador_p in ds_conteudo_p);

if (nr_posicao_inicial_w > 0) then
	nr_retorno_w	:= nr_posicao_inicial_w;
end if;

return nr_retorno_w;

end;

function retorna_nome_coluna(
							nr_campo_atual_p	number )
				return	varchar2 is
				
nr_retorno_w		varchar2(100) := '';

begin

if (nr_campo_atual_p = 1) then
	nr_retorno_w	:= 'TIPO OPERACAO';
elsif (nr_campo_atual_p = 2) then
	nr_retorno_w	:= 'NOME';
elsif (nr_campo_atual_p = 3) then
	nr_retorno_w	:= 'COD CARTEIRA BENEFICIARIO';
elsif (nr_campo_atual_p = 4) then
	nr_retorno_w	:= 'TITULAR';
elsif (nr_campo_atual_p = 5) then
	nr_retorno_w	:= 'COD CARTEIRA TITULAR';
elsif (nr_campo_atual_p = 6) then
	nr_retorno_w	:= 'DATA NASC';
elsif (nr_campo_atual_p = 7) then
	nr_retorno_w	:= 'ESTADO CIVIL';
elsif (nr_campo_atual_p = 8) then
	nr_retorno_w	:= 'NACIONALIDADE';
elsif (nr_campo_atual_p = 9) then
	nr_retorno_w	:= 'SEXO';
elsif (nr_campo_atual_p = 10) then
	nr_retorno_w	:= 'NOME DA MAE';
elsif (nr_campo_atual_p = 11) then
	nr_retorno_w	:= 'CPF';
elsif (nr_campo_atual_p = 12) then
	nr_retorno_w	:= 'RG';
elsif (nr_campo_atual_p = 13) then
	nr_retorno_w	:= 'DATA EMISSAO RG';
elsif (nr_campo_atual_p = 14) then
	nr_retorno_w	:= 'UF EMISSOR';
elsif (nr_campo_atual_p = 15) then
	nr_retorno_w	:= 'ORGAO EMISSOR';
elsif (nr_campo_atual_p = 16) then
	nr_retorno_w	:= 'PAIS EMISSOR';
elsif (nr_campo_atual_p = 17) then
	nr_retorno_w	:= 'RG ESTRANGEIRO';
elsif (nr_campo_atual_p = 18) then
	nr_retorno_w	:= 'EMAIL';
elsif (nr_campo_atual_p = 19) then
	nr_retorno_w	:= 'CEP';
elsif (nr_campo_atual_p = 20) then
	nr_retorno_w	:= 'ENDERECO';
elsif (nr_campo_atual_p = 21) then
	nr_retorno_w	:= 'NUMERO';
elsif (nr_campo_atual_p = 22) then
	nr_retorno_w	:= 'COMPLEMENTO';
elsif (nr_campo_atual_p = 23) then
	nr_retorno_w	:= 'BAIRRO';
elsif (nr_campo_atual_p = 24) then
	nr_retorno_w	:= 'CIDADE';
elsif (nr_campo_atual_p = 25) then
	nr_retorno_w	:= 'ESTADO';
elsif (nr_campo_atual_p = 26) then
	nr_retorno_w	:= 'TELEFONE';
elsif (nr_campo_atual_p = 27) then
	nr_retorno_w	:= 'CELULAR';
elsif (nr_campo_atual_p = 28) then
	nr_retorno_w	:= 'CODIGO CBO';
elsif (nr_campo_atual_p = 29) then
	nr_retorno_w	:= 'MATRICULA';
elsif (nr_campo_atual_p = 30) then
	nr_retorno_w	:= 'DATA ADMISSAO';
elsif (nr_campo_atual_p = 31) then
	nr_retorno_w	:= 'NR CTPS';
elsif (nr_campo_atual_p = 32) then
	nr_retorno_w	:= 'SERIE CTPS';
elsif (nr_campo_atual_p = 33) then
	nr_retorno_w	:= 'UF EMISSOR CTPS';
elsif (nr_campo_atual_p = 34) then
	nr_retorno_w	:= 'GRAU PARENTESCO';
elsif (nr_campo_atual_p = 35) then
	nr_retorno_w	:= 'VINCULO ESTIPULANTE';
elsif (nr_campo_atual_p = 36) then
	nr_retorno_w	:= 'LOCAL REPASSE';
elsif (nr_campo_atual_p = 37) then
	nr_retorno_w	:= 'NR MOTIVO RESCISAO';
elsif (nr_campo_atual_p = 38) then
	nr_retorno_w	:= 'NR CARTAO SUS';
elsif (nr_campo_atual_p = 39) then
	nr_retorno_w	:= 'COD DECLARACAO NASC VIVO';
elsif (nr_campo_atual_p = 40) then
	nr_retorno_w	:= 'OBSERVACOES';
elsif (nr_campo_atual_p = 41) then
	nr_retorno_w	:= 'PLANO';
elsif (nr_campo_atual_p = 42) then
	nr_retorno_w	:= 'MATRICULA FAMILIA';
elsif (nr_campo_atual_p = 43) then
	nr_retorno_w	:= 'PIS';
elsif (nr_campo_atual_p = 44) then
	nr_retorno_w	:= 'TITULO DE ELEITOR';
elsif (nr_campo_atual_p = 45) then
	nr_retorno_w	:= 'TIPO LOGRADOURO';
elsif (nr_campo_atual_p = 46) then
	nr_retorno_w	:= 'NOME DO PAI';
elsif (nr_campo_atual_p = 47) then
	nr_retorno_w	:= 'MUNICIPIO NASC';
elsif (nr_campo_atual_p = 48) then
	nr_retorno_w	:= 'ESTADO NASC';
elsif (nr_campo_atual_p = 49) then
	nr_retorno_w	:= 'DT RESCISAO';
elsif (nr_campo_atual_p = 50) then
	nr_retorno_w	:= 'SCA';
elsif (nr_campo_atual_p = 51) then
	nr_retorno_w	:= 'FAIXA SALARIAL';
elsif (nr_campo_atual_p = 52) then
	nr_retorno_w	:= 'LOCALIZACAO';
elsif (nr_campo_atual_p = 53) then
	nr_retorno_w	:= 'TABELA PRECO';
elsif (nr_campo_atual_p = 54) then
	nr_retorno_w	:= 'DT ADESAO';
elsif (nr_campo_atual_p = 55) then
	nr_retorno_w	:= 'DATA ADOCAO';
elsif (nr_campo_atual_p = 56) then
	nr_retorno_w	:= 'NR MOTIVO INCLUSAO';
elsif (nr_campo_atual_p = 57) then
	nr_retorno_w	:= 'NR CODIGO EXTERNO';
elsif (nr_campo_atual_p = 58) then
	nr_retorno_w	:= 'NR SUBESTIPULANTE';
elsif (nr_campo_atual_p = 59) then
	nr_retorno_w	:= 'NOME SOCIAL';
elsif (nr_campo_atual_p = 60) then
	nr_retorno_w	:= 'DT INCLUSAO ORIGEM';
elsif (nr_campo_atual_p = 61) then
	nr_retorno_w	:= 'VL PRECO PLANO';
elsif (nr_campo_atual_p = 62) then
	nr_retorno_w	:= 'PROTOCOLO PORTABILIDADE';
elsif (nr_campo_atual_p = 63) then
	nr_retorno_w	:= 'DT EMISSAO';
elsif (nr_campo_atual_p = 64) then
	nr_retorno_w	:= 'NR OPERADORA ORIGEM';
elsif (nr_campo_atual_p = 65) then
	nr_retorno_w	:= 'ABRANGENCIA ORIGEM';
elsif (nr_campo_atual_p = 66) then
	nr_retorno_w	:= 'NR REGISTRO PLANO';
elsif (nr_campo_atual_p = 67) then
	nr_retorno_w	:= 'TIPO CONTRATACAO';
elsif (nr_campo_atual_p = 68) then
	nr_retorno_w	:= 'DT INCLUSAO OPERADORA';
elsif (nr_campo_atual_p = 69) then
	nr_retorno_w	:= 'DT CASAMENTO';
elsif (nr_campo_atual_p = 70) then
	nr_retorno_w	:= 'NR CERT CASAMENTO';
elsif (nr_campo_atual_p = 71) then
	nr_retorno_w	:= 'DATA REINCLUSAO';
end if;

return nr_retorno_w;

end;

procedure limpa_variaveis is
begin

ie_tipo_operacao_w		:= null;
nm_pessoa_fisica_w		:= null;
cd_usuario_plano_w		:= null;
nm_titular_w			:= null;
cd_titular_plano_w		:= null;
dt_nascimento_w			:= null;
ie_estado_civil_w		:= null;
cd_nacionalidade_w		:= null;
ie_sexo_w			:= null;
nm_mae_w			:= null;
nr_cpf_w			:= null;
nr_identidade_w			:= null;
dt_emissao_ci_w			:= null;
sg_emissora_ci_w		:= null;
ds_orgao_emissor_ci_w		:= null;
nr_seq_pais_w			:= null;
nr_reg_geral_estrang_w		:= null;
ds_email_w			:= null;
cd_cep_w			:= null;
ds_endereco_w			:= null;
nr_endereco_w			:= null;
ds_complemento_w		:= null;
ds_bairro_w			:= null;
cd_municipio_ibge_w		:= null;
sg_estado_w			:= null;
nr_telefone_w			:= null;
nr_celular_w			:= null;
cd_cbo_w			:= null;
cd_matricula_w			:= null;
dt_admissao_w			:= null;
nr_ctps_w			:= null;
nr_serie_ctps_w			:= null;
uf_emissora_ctps_w		:= null;
nr_seq_parentesco_w		:= null;
nr_seq_vinculo_estip_w		:= null;
cd_cooperativa_w		:= null;
nr_seq_motivo_cancelamento_w	:= null;
nr_cartao_nac_sus_w		:= null;
cd_declaracao_nasc_vivo_w	:= null;
ds_observacao_w			:= null;
nr_seq_plano_w			:= null;
cd_matricula_familia_w		:= null;
nr_pis_pasep_w			:= null;
nr_titulo_eleitor_w		:= null;
cd_tipo_logradouro_w		:= null;
nm_pai_w			:= null;
ds_municipio_nasc_w		:= null;
sg_estado_nasc_w		:= null;
dt_rescisao_w			:= null;
cd_plano_sca_w			:= null;
nr_nivel_faixa_salarial_w	:= null;
nr_seq_localizacao_benef_w	:= null;
nr_seq_tabela_w			:= null;
dt_contratacao_w		:= null;
dt_adocao_w			:= null;
nr_seq_motivo_inclusao_w	:= null;
nr_seq_codigo_externo_w		:= null;
nr_seq_subestipulante_w		:= null;
nm_social_w			:= null;
dt_inclusao_ops_origem_w	:= null;
vl_preco_plano_origem_w		:= null;
nr_protocolo_portabilidade_w	:= null;
dt_emissao_prot_portab_w	:= null;
nr_registro_ops_ans_w		:= null;
ie_abrangencia_plano_origem_w	:= null;
nr_registro_plano_origem_w	:= null;
ie_tp_contr_plano_origem_w	:= null;
dt_inclusao_operadora_w		:= null;
dt_casamento_w			:= null;
nr_cert_casamento_w		:= null;
dt_reinclusao_w			:= null;

end;

begin

select	nextval('pls_lote_inclusao_benef_seq')
into STRICT	nr_seq_lote_inclusao_w
;

insert	into	pls_lote_inclusao_benef(	nr_sequencia, dt_inclusao, dt_atualizacao,
		nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
		ie_situacao, ie_tipo_solicitacao, dt_importacao_arquivo,
		nr_seq_contrato, nr_seq_intercambio, cd_estabelecimento)
	values (	nr_seq_lote_inclusao_w, clock_timestamp(), clock_timestamp(),
		nm_usuario_p, clock_timestamp(), nm_usuario_p,
		'A', 'C', clock_timestamp(),
		CASE WHEN nr_seq_contrato_p=0 THEN null  ELSE nr_seq_contrato_p END , CASE WHEN nr_seq_intercambio_p=0 THEN null  ELSE nr_seq_intercambio_p END ,
		cd_estabelecimento_p);

if (cd_interface_p = 2107) then /* USJRP */
	open C01;
	loop
	fetch C01 into
		ds_conteudo_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		ie_tipo_operacao_w		:= trim(both substr(ds_conteudo_w,540,1)); /* A (alteracao), C (segunda via de cartao magnetico), E (exclusao), I (inclusao), T (transferencia) */
		
		cd_cartao_identificacao_w	:= trim(both substr(ds_conteudo_w,1,17));
		cd_matricula_familia_w		:= substr(cd_cartao_identificacao_w,9,6);
		nm_pessoa_fisica_w		:= trim(both substr(ds_conteudo_w,18,30));
		ie_sexo_w			:= trim(both substr(ds_conteudo_w,48,1));
		ie_estado_civil_w		:= trim(both substr(ds_conteudo_w,49,1));
	
		if (ie_estado_civil_w = 'S') then
			ie_estado_civil_w	:= 1; --Solteiro
		elsif (ie_estado_civil_w = 'C') then
			ie_estado_civil_w	:= 2; --Casado
		end if;
		
		if (coalesce(ie_tipo_operacao_w,'I') <> 'I') then
			begin
			select	b.nr_sequencia,
				b.nr_seq_contrato,
				b.nr_seq_plano
			into STRICT	nr_seq_segurado_w,
				nr_seq_contrato_w,
				nr_seq_plano_w
			from	pls_segurado_carteira	a,
				pls_segurado		b
			where	a.nr_seq_segurado	= b.nr_sequencia
			and	lpad(a.cd_usuario_plano,17,0)	= cd_cartao_identificacao_w;
			exception
			when others then
				nr_seq_segurado_w	:= null;
				nr_seq_contrato_w	:= null;
				nr_seq_plano_w		:= null;
			end;
		else	/* Se for inclusao, busca o produto do contrato informado no lote */
			if (coalesce(nr_seq_contrato_p,0) <> 0) then
				begin
				select	nr_seq_plano
				into STRICT	nr_seq_plano_w
				from	pls_contrato_plano
				where	nr_seq_contrato	= nr_seq_contrato_p
				and	ie_situacao	= 'A';
				exception
				when others then
					nr_seq_plano_w	:= null;
				end;
			elsif (coalesce(nr_seq_intercambio_p,0) <> 0) then
				begin
				select	nr_seq_plano
				into STRICT	nr_seq_plano_w
				from	pls_intercambio_plano
				where	nr_seq_intercambio	= nr_seq_intercambio_p;
				exception
				when others then
					nr_seq_plano_w	:= null;
				end;
			end if;
		end if;
		
		nr_identidade_w			:= trim(both substr(ds_conteudo_w,50,11));
		nr_cpf_w			:= trim(both substr(ds_conteudo_w,61,11));
		begin
		dt_nascimento_w			:= to_date(substr(ds_conteudo_w,72,8),'yyyymmdd');
		exception
		when others then
			dt_nascimento_w	:= null;
		end;
		
		begin
		dt_movimentacao_w		:= to_date(substr(ds_conteudo_w,80,8),'yyyymmdd');
		exception
		when others then
			dt_movimentacao_w	:= null;
		end;
		cd_matricula_w			:= trim(both substr(ds_conteudo_w,88,16)); /* A qual matricula se refere no Tasy*/
		cd_unimed_atend_w		:= trim(both substr(ds_conteudo_w,104,4)); /* Verificar a utilidade do campo */
		
		select	max(nr_sequencia)
		into STRICT	nr_seq_congenere_atend_w
		from	pls_congenere
		where	cd_cooperativa	= cd_unimed_atend_w;
		
		begin
		dt_admissao_w			:= to_date(substr(ds_conteudo_w,108,8),'yyyymmdd'); /* Verificar que data e essa no Tasy */
		exception
		when others then
			dt_admissao_w		:= null;
		end;
		
		ie_tipo_plano_w			:= trim(both substr(ds_conteudo_w,116,1)); /* D (Basico) ou E (Executivo)... e o tipo A? */
		cd_cartao_identif_ant_w		:= trim(both substr(ds_conteudo_w,117,17));
		nr_profissao_w			:= substr(ds_conteudo_w,134,5);
		nm_mae_w			:= trim(both substr(ds_conteudo_w,139,30));
		cd_grupo_sanguineo_w		:= trim(both substr(ds_conteudo_w,169,3));
		
		/* Residencial */

		ds_endereco_w			:= trim(both substr(ds_conteudo_w,172,35));
		nr_caixa_postal_w		:= trim(both substr(ds_conteudo_w,207,8)); /* Onde fica essa informacao no Tasy */
		ds_bairro_w			:= trim(both substr(ds_conteudo_w,215,25));
		ds_municipio_w			:= trim(both substr(ds_conteudo_w,240,30));
		sg_uf_w				:= trim(both substr(ds_conteudo_w,270,2));
		cd_cep_w			:= trim(both substr(ds_conteudo_w,272,8));
		ds_email_w			:= trim(both substr(ds_conteudo_w,280,40));
		nr_ddd_telefone_w		:= trim(both substr(ds_conteudo_w,321,3));
		nr_telefone_w			:= trim(both substr(ds_conteudo_w,324,8));
		nr_ddd_celular_w		:= trim(both substr(ds_conteudo_w,333,3));
		nr_celular_w			:= trim(both substr(ds_conteudo_w,336,8));
		nr_ddd_fax_w			:= trim(both substr(ds_conteudo_w,345,3));
		nr_fax_w			:= trim(both substr(ds_conteudo_w,348,8));
		
		/* Correspondencia */

		ds_endereco_corresp_w		:= trim(both substr(ds_conteudo_w,356,35));
		nr_caixa_postal_corresp_w	:= trim(both substr(ds_conteudo_w,391,8)); /* Onde fica essa informacao no Tasy */
		ds_bairro_corresp_w		:= trim(both substr(ds_conteudo_w,399,25));
		ds_municipio_corresp_w		:= trim(both substr(ds_conteudo_w,424,30));
		sg_uf_corresp_w			:= trim(both substr(ds_conteudo_w,454,2));
		cd_cep_corresp_w		:= trim(both substr(ds_conteudo_w,456,8));
		ds_email_corresp_w		:= trim(both substr(ds_conteudo_w,464,40));
		nr_ddd_telefone_corresp_w	:= trim(both substr(ds_conteudo_w,505,3));
		nr_telefone_corresp_w		:= trim(both substr(ds_conteudo_w,508,8));
		nr_ddd_celular_corresp_w	:= trim(both substr(ds_conteudo_w,517,3));
		nr_celular_corresp_w		:= trim(both substr(ds_conteudo_w,520,8));
		nr_ddd_fax_corresp_w		:= trim(both substr(ds_conteudo_w,529,3));
		nr_fax_corresp_w		:= trim(both substr(ds_conteudo_w,532,8));
		
		ds_observacao_w			:= trim(both substr(ds_conteudo_w,541,30));
		ie_cpf_proprio_w		:= trim(both substr(ds_conteudo_w,571,1));
		nr_pis_pasep_w			:= trim(both substr(ds_conteudo_w,572,11));
		
		select	nextval('pls_inclusao_beneficiario_seq')
		into STRICT	nr_seq_inclusao_benef_w
		;
		
		insert	into	pls_inclusao_beneficiario(	nr_sequencia,
				nr_seq_lote_inclusao,
				cd_estabelecimento,
				nm_pessoa_fisica,
				ie_status,
				dt_solicitacao,
				dt_nascimento,
				nm_mae,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_cpf,
				ie_estado_civil,
				ie_sexo,
				ds_email,
				nr_identidade,
				cd_cep,
				ds_endereco,
				ds_bairro,
				ds_municipio,
				sg_estado,
				nr_ddd_telefone,
				nr_telefone,
				nr_telefone_celular,
				dt_admissao,
				cd_matricula_est,
				ie_processo,
				ie_tipo_operacao,
				ie_tipo_inclusao,
				cd_usuario_plano,
				cd_usuario_plano_ant,
				nr_ddd_celular,
				nr_ddd_fax,
				nr_fax,
				ds_endereco_corresp,
				ds_bairro_corresp,
				ds_municipio_corresp,
				sg_uf_corresp,
				cd_cep_corresp,
				ds_email_corresp,
				nr_ddd_telefone_corresp,
				nr_telefone_corresp,
				nr_ddd_celular_corresp,
				nr_celular_corresp,
				nr_ddd_fax_corresp,
				nr_fax_corresp,
				ds_observacao,
				ie_cpf_proprio,
				nr_pis_pasep,
				nr_seq_segurado,
				nr_seq_contrato,
				nr_seq_plano,
				nr_seq_congenere_atend,
				cd_matricula_familia,
				ie_status_mov)
			values (	nr_seq_inclusao_benef_w, --nr_sequencia
				nr_seq_lote_inclusao_w, --nr_seq_lote_inclusao
				cd_estabelecimento_p, --cd_estabelecimento
				nm_pessoa_fisica_w, --nm_pessoa_fisica
				'P', --ie_status
				dt_movimentacao_w, --dt_solicitacao
				dt_nascimento_w, --dt_nascimento
				nm_mae_w, --nm_mae
				clock_timestamp(), --dt_atualizacao
				nm_usuario_p, --nm_usuario
				clock_timestamp(), --dt_atualizacao_nrec
				nm_usuario_p, --nm_usuario_nrec
				nr_cpf_w, --nr_cpf
				ie_estado_civil_w, --ie_estado_civil
				ie_sexo_w, --ie_sexo
				ds_email_w, --ds_email
				nr_identidade_w, --nr_identidade
				cd_cep_w, --cd_cep
				ds_endereco_w, --ds_endereco
				ds_bairro_w, --ds_bairro
				ds_municipio_w, --ds_municipio
				sg_uf_w, --sg_estado
				nr_ddd_telefone_w, --nr_ddd_telefone
				nr_telefone_w, --nr_telefone
				nr_celular_w, --nr_telefone_celular
				dt_admissao_w, --dt_admissao
				cd_matricula_w, --cd_matricula_est
				'I', --ie_processo
				ie_tipo_operacao_w, --ie_tipo_operacao
				'P', --ie_tipo_inclusao
				cd_cartao_identificacao_w, --cd_usuario_plano
				cd_cartao_identif_ant_w, --cd_usuario_plano_ant
				nr_ddd_celular_w, --nr_ddd_celular
				nr_ddd_fax_w, --nr_ddd_fax
				nr_fax_w, --nr_fax
				ds_endereco_corresp_w, --ds_endereco_corresp
				ds_bairro_corresp_w, --ds_bairro_corresp
				ds_municipio_corresp_w, --ds_municipio_corresp
				sg_uf_corresp_w, --sg_uf_corresp
				cd_cep_corresp_w, --cd_cep_corresp
				ds_email_corresp_w, --ds_email_corresp
				nr_ddd_telefone_corresp_w, --nr_ddd_telefone_corresp
				nr_telefone_corresp_w, --nr_telefone_corresp
				nr_ddd_celular_corresp_w, --nr_ddd_celular_corresp
				nr_celular_corresp_w, --nr_celular_corresp
				nr_ddd_fax_corresp_w, --nr_ddd_fax_corresp
				nr_fax_corresp_w, --nr_fax_corresp
				ds_observacao_w, --ds_observacao
				ie_cpf_proprio_w, --ie_cpf_proprio
				nr_pis_pasep_w, --NR_PIS_PASEP
				nr_seq_segurado_w, --nr_seq_segurado
				nr_seq_contrato_w, --nr_seq_contrato
				nr_seq_plano_w, --nr_seq_plano
				nr_seq_congenere_atend_w, --nr_seq_congenere_atend
				cd_matricula_familia_w, -- cd_matricula_familia
				'1' --ie_status_mov
				);
		
		if (coalesce(ie_tipo_operacao_w,'I') = 'I') then
			pls_gerar_homonimo_pf(nm_pessoa_fisica_w,to_char(dt_nascimento_w, 'dd/mm/yyyy'),nr_cpf_w,nr_seq_inclusao_benef_w,nm_usuario_p);
		end if;
		end;
	end loop;
	close C01;
	
	open C02;
	loop
	fetch C02 into	
		nr_seq_inclusao_w,
		cd_usuario_plano_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		nr_seq_titular_contrato_w	:= null;
		nr_seq_titular_inclusao_w	:= null;
		ie_titularidade_w	:= (trim(both substr(cd_usuario_plano_w,15,2)))::numeric;
		cd_familia_w		:= trim(both substr(cd_usuario_plano_w,9,6));
		
		if (coalesce(ie_titularidade_w,0) <> 0) then
			if (coalesce(nr_seq_contrato_p,0) <> 0) then
				select	max(a.nr_sequencia)
				into STRICT	nr_seq_titular_contrato_w
				from	pls_segurado		a,
					pls_segurado_carteira	b
				where	b.nr_seq_segurado	= a.nr_sequencia
				and	a.nr_seq_contrato	= nr_seq_contrato_p
				and	substr(b.cd_usuario_plano,9,6) = cd_familia_w
				and	substr(b.cd_usuario_plano,15,2) = '00';
			elsif (coalesce(nr_seq_intercambio_p,0) <> 0) then
				select	max(a.nr_sequencia)
				into STRICT	nr_seq_titular_contrato_w
				from	pls_segurado		a,
					pls_segurado_carteira	b
				where	b.nr_seq_segurado	= a.nr_sequencia
				and	a.nr_seq_intercambio	= nr_seq_intercambio_p
				and	substr(b.cd_usuario_plano,9,6) = cd_familia_w
				and	substr(b.cd_usuario_plano,15,2) = '00';
			end if;
			
			if (coalesce(nr_seq_titular_contrato_w,0) = 0) then
				select	max(nr_sequencia)
				into STRICT	nr_seq_titular_inclusao_w
				from	pls_inclusao_beneficiario
				where	nr_seq_lote_inclusao	= nr_seq_lote_inclusao_w
				and	substr(cd_usuario_plano,9,6) = cd_familia_w
				and	substr(cd_usuario_plano,15,2) = '00';
			end if;
			
			select	max(b.nr_seq_parentesco)
			into STRICT	nr_seq_parentesco_w
			from	pls_regra_titularidade		a,
				pls_regra_tit_parentesco	b
			where	b.nr_seq_regra_titular	= a.nr_sequencia
			and	ie_titularidade_w between a.qt_valor_inicial and coalesce(a.qt_valor_final,ie_titularidade_w);
			
			update	pls_inclusao_beneficiario
			set	nr_seq_titular_contrato	= nr_seq_titular_contrato_w,
				nr_seq_titular_solic	= nr_seq_titular_inclusao_w,
				nr_seq_parentesco	= nr_seq_parentesco_w
			where	nr_sequencia		= nr_seq_inclusao_w;
		end if;
		end;
	end loop;
	close C02;
elsif (cd_interface_p = 2177) then
	open C01;
	loop
	fetch C01 into
		ds_conteudo_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		ie_tipo_operacao_w		:= trim(both substr(ds_conteudo_w,1,1));
		if (ie_tipo_operacao_w = 'C') then
			ie_tipo_operacao_w	:= 'E';
		end if;
		nr_seq_plano_w	:= null;
		
		if (coalesce(ie_tipo_operacao_w,'I') = 'I') then
			if (coalesce(nr_seq_contrato_p,0) <> 0) then
				begin
				select	max(nr_seq_plano)
				into STRICT	nr_seq_plano_w
				from	pls_contrato_plano
				where	nr_seq_contrato	= nr_seq_contrato_p
				and	ie_situacao	= 'A';
				exception
				when others then
					nr_seq_plano_w	:= null;
				end;
			elsif (coalesce(nr_seq_intercambio_p,0) <> 0) then
				begin
				select	max(nr_seq_plano)
				into STRICT	nr_seq_plano_w
				from	pls_intercambio_plano
				where	nr_seq_intercambio	= nr_seq_intercambio_p;
				exception
				when others then
					nr_seq_plano_w	:= null;
				end;
			end if;
		end if;
		
		nr_cpf_w			:= trim(both substr(ds_conteudo_w,64,11));
		--ie_tipo_dependencia_w		:= nvl(trim(substr(ds_conteudo_w,75,1)),'0');
		nm_pessoa_fisica_w		:= trim(both substr(ds_conteudo_w,76,80));
		
		begin
		dt_nascimento_w			:= to_date(substr(ds_conteudo_w,156,8),'ddmmyyyy');
		exception
		when others then
			dt_nascimento_w	:= null;
		end;
		ie_sexo_w			:= trim(both substr(ds_conteudo_w,164,1));
		nm_pai_w			:= trim(both substr(ds_conteudo_w,165,80));
		nm_mae_w			:= trim(both substr(ds_conteudo_w,245,80));
		ie_estado_civil_w		:= trim(both substr(ds_conteudo_w,330,1));
		if (ie_estado_civil_w = '1') then
			ie_estado_civil_w	:= 1; --Solteiro
		elsif (ie_estado_civil_w = '2') then
			ie_estado_civil_w	:= 2; --Casado
		elsif (ie_estado_civil_w = '3') then
			ie_estado_civil_w	:= 5; --Viuvo
		elsif (ie_estado_civil_w = '4') then
			ie_estado_civil_w	:= 4; --Desquitado
		else
			ie_estado_civil_w	:= 9; --Outros
		end if;
		nr_pis_pasep_w			:= trim(both substr(ds_conteudo_w,331,20));
		ds_observacao_w			:= substr(trim(both substr(ds_conteudo_w,371,400)),1,255);
		
		if (ie_tipo_operacao_w = 'I') then
			begin
			dt_movimentacao_w		:= to_date(substr(ds_conteudo_w,780,8),'ddmmyyyy');
			exception
			when others then
				dt_movimentacao_w	:= null;
			end;
		elsif (ie_tipo_operacao_w = 'E') then
			begin
			dt_movimentacao_w		:= to_date(substr(ds_conteudo_w,954,8),'ddmmyyyy');
			exception
			when others then
				dt_movimentacao_w	:= null;
			end;
		end if;
		
		cd_matricula_w		:= trim(both substr(ds_conteudo_w,830,20));
		--cd_motivo_cancelamento_w	:= trim(substr(ds_conteudo_w,962,2));
		
		nr_ddi_telefone_w		:= trim(both substr(ds_conteudo_w,964,3));
		nr_ddd_telefone_w		:= trim(both substr(ds_conteudo_w,967,3));
		nr_telefone_w			:= trim(both substr(ds_conteudo_w,970,15));
		nr_ddi_celular_w		:= trim(both substr(ds_conteudo_w,990,3));
		nr_ddd_celular_w		:= trim(both substr(ds_conteudo_w,993,3));
		nr_celular_w			:= trim(both substr(ds_conteudo_w,996,20));
		nr_ddi_fax_w			:= trim(both substr(ds_conteudo_w,1016,3));
		nr_ddd_fax_w			:= trim(both substr(ds_conteudo_w,1019,3));
		nr_fax_w			:= trim(both substr(ds_conteudo_w,1022,8));
		ds_email_w			:= trim(both substr(ds_conteudo_w,1042,40));
		ds_site_w			:= trim(both substr(ds_conteudo_w,1092,50));
		
		cd_cep_corresp_w		:= trim(both substr(ds_conteudo_w,1142,8));
		ds_endereco_corresp_w		:= trim(both substr(ds_conteudo_w,1150,80));
		ds_bairro_corresp_w		:= trim(both substr(ds_conteudo_w,1230,40));
		ds_municipio_corresp_w		:= trim(both substr(ds_conteudo_w,1280,50));
		sg_uf_corresp_w			:= trim(both substr(ds_conteudo_w,1330,2));
		
		cd_cep_w			:= trim(both substr(ds_conteudo_w,1335,8));
		ds_endereco_w			:= trim(both substr(ds_conteudo_w,1343,80));
		ds_bairro_w			:= trim(both substr(ds_conteudo_w,1423,50));
		ds_municipio_w			:= trim(both substr(ds_conteudo_w,1473,50));
		sg_uf_w				:= trim(both substr(ds_conteudo_w,1523,2));
		
		select	nextval('pls_inclusao_beneficiario_seq')
		into STRICT	nr_seq_inclusao_benef_w
		;
		
		insert	into	pls_inclusao_beneficiario(	nr_sequencia,
				nr_seq_lote_inclusao,
				cd_estabelecimento,
				nm_pessoa_fisica,
				ie_status,
				dt_solicitacao,
				dt_nascimento,
				nm_mae,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_cpf,
				ie_estado_civil,
				ie_sexo,
				ds_email,
				nr_identidade,
				cd_cep,
				ds_endereco,
				ds_bairro,
				ds_municipio,
				sg_estado,
				nr_ddd_telefone,
				nr_telefone,
				nr_telefone_celular,
				dt_admissao,
				cd_matricula_est,
				ie_processo,
				ie_tipo_operacao,
				ie_tipo_inclusao,
				cd_usuario_plano,
				nr_ddd_celular,
				nr_ddd_fax,
				nr_fax,
				ds_endereco_corresp,
				ds_bairro_corresp,
				ds_municipio_corresp,
				sg_uf_corresp,
				cd_cep_corresp,
				ds_observacao,
				nr_pis_pasep,
				nr_seq_contrato,
				nr_seq_plano,
				ie_status_mov)
			values (	nr_seq_inclusao_benef_w, --nr_sequencia
				nr_seq_lote_inclusao_w, --nr_seq_lote_inclusao
				cd_estabelecimento_p, --cd_estabelecimento
				nm_pessoa_fisica_w, --nm_pessoa_fisica
				'P', --ie_status
				dt_movimentacao_w, --dt_solicitacao
				dt_nascimento_w, --dt_nascimento
				nm_mae_w, --nm_mae
				clock_timestamp(), --dt_atualizacao
				nm_usuario_p, --nm_usuario
				clock_timestamp(), --dt_atualizacao_nrec
				nm_usuario_p, --nm_usuario_nrec
				nr_cpf_w, --nr_cpf
				ie_estado_civil_w, --ie_estado_civil
				ie_sexo_w, --ie_sexo
				ds_email_w, --ds_email
				nr_identidade_w, --nr_identidade
				cd_cep_w, --cd_cep
				ds_endereco_w, --ds_endereco
				ds_bairro_w, --ds_bairro
				ds_municipio_w, --ds_municipio
				sg_uf_w, --sg_estado
				nr_ddd_telefone_w, --nr_ddd_telefone
				nr_telefone_w, --nr_telefone
				nr_celular_w, --nr_telefone_celular
				dt_admissao_w, --dt_admissao
				cd_matricula_w, --cd_matricula_est
				'I', --ie_processo
				ie_tipo_operacao_w, --ie_tipo_operacao
				'P', --ie_tipo_inclusao
				cd_cartao_identificacao_w, --cd_usuario_plano
				nr_ddd_celular_w, --nr_ddd_celular
				nr_ddd_fax_w, --nr_ddd_fax
				nr_fax_w, --nr_fax
				ds_endereco_corresp_w, --ds_endereco_corresp
				ds_bairro_corresp_w, --ds_bairro_corresp
				ds_municipio_corresp_w, --ds_municipio_corresp
				sg_uf_corresp_w, --sg_uf_corresp
				cd_cep_corresp_w, --cd_cep_corresp
				ds_observacao_w, --ds_observacao
				nr_pis_pasep_w, --NR_PIS_PASEP
				nr_seq_contrato_w, --nr_seq_contrato
				nr_seq_plano_w, --nr_seq_plano
				'1' --ie_status_mov
				);

		if (coalesce(ie_tipo_operacao_w,'I') = 'I') then
			pls_gerar_homonimo_pf(nm_pessoa_fisica_w,to_char(dt_nascimento_w, 'dd/mm/yyyy'),nr_cpf_w,nr_seq_inclusao_benef_w,nm_usuario_p);
		end if;
		end;
	end loop;
	close C01;
	
	update	pls_lote_inclusao_benef
	set	dt_importacao_arquivo	 = NULL
	where	nr_sequencia		= nr_seq_lote_inclusao_w;
	
elsif (cd_interface_p	= 2216) then
	CALL pls_imp_inclusao_aciplan(nr_seq_lote_inclusao_w,nr_seq_contrato_p,cd_estabelecimento_p,nm_usuario_p);
elsif (cd_interface_p	= 2314) then
	CALL pls_imp_inclusao_divicom(nr_seq_lote_inclusao_w,nr_seq_contrato_p,cd_estabelecimento_p,nm_usuario_p);
elsif (cd_interface_p	= 2381) then
	CALL pls_imp_inclusao_div_versao_15(nr_seq_lote_inclusao_w,nr_seq_contrato_p,cd_estabelecimento_p,nm_usuario_p);
elsif (cd_interface_p = 2611) then
	open C01;
	loop
	fetch C01 into
		ds_conteudo_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		ds_conteudo_w	:= replace(ds_conteudo_w,'"','');
		if (trim(both substr(ds_conteudo_w,1,4)) <> 'TIPO') then
			ie_separador_w			:= ';';
			nr_contador_w			:= 1;
			CALL limpa_variaveis();
			
			-- campo TIPO OPERACAO
			begin
			ie_tipo_operacao_w		:= trim(both substr(ds_conteudo_w,1,2));
			ie_tipo_operacao_w		:= replace(ie_tipo_operacao_w,ie_separador_w,null);
			if (ie_tipo_operacao_w = 'C') then
				ie_tipo_operacao_w	:= 'E';
			end if;
			
			if (coalesce(ie_tipo_operacao_w::text, '') = '') then
				RAISE EXCEPTION '%', wheb_mensagem_pck.get_texto(1172766,'NR_COLUNA='||nr_contador_w||';DS_COLUNA='||retorna_nome_coluna(nr_contador_w)) USING ERRCODE = '45001';
			end if;
			exception
			when others then
				RAISE EXCEPTION '%', wheb_mensagem_pck.get_texto(1172768,'NR_COLUNA='||nr_contador_w||';DS_COLUNA='||retorna_nome_coluna(nr_contador_w)||';NM_BENEFICIARIO='||nm_pessoa_fisica_w) USING ERRCODE = '45001';
			end;
			
			loop
			exit when coalesce(ds_conteudo_w::text, '') = '';
				begin
				nr_contador_w			:= nr_contador_w + 1;
				nr_posicao_separador_w		:= procura_posicao_separador(ds_conteudo_w, ie_separador_w);
				
				ds_conteudo_w				:= trim(both substr(ds_conteudo_w, nr_posicao_separador_w+1));
				nr_posicao_separador_w			:= procura_posicao_separador(ds_conteudo_w, ie_separador_w);
				
				if (nr_posicao_separador_w = 0 and (ds_conteudo_w IS NOT NULL AND ds_conteudo_w::text <> '')) then
					ds_conteudo_w			:= ds_conteudo_w || ie_separador_w;
					nr_posicao_separador_w	:= length(ds_conteudo_w);
				end if;
				
				begin
				if (ds_conteudo_w IS NOT NULL AND ds_conteudo_w::text <> '') then
					if (nr_contador_w = 2) then
						nm_pessoa_fisica_w		:= trim(both substr(ds_conteudo_w, 1, nr_posicao_separador_w-1));
						
						if (coalesce(nm_pessoa_fisica_w::text, '') = '') then
							RAISE EXCEPTION '%', wheb_mensagem_pck.get_texto(1172766,'NR_COLUNA='||nr_contador_w||';DS_COLUNA='||retorna_nome_coluna(nr_contador_w)) USING ERRCODE = '45001';
						end if;
					elsif (nr_contador_w = 3) then
						cd_usuario_plano_w		:= trim(both substr(ds_conteudo_w, 1, nr_posicao_separador_w-1));
					elsif (nr_contador_w = 4) then
						nm_titular_w			:= trim(both substr(ds_conteudo_w, 1, nr_posicao_separador_w-1));
					elsif (nr_contador_w = 5) then
						cd_titular_plano_w		:= trim(both substr(ds_conteudo_w, 1, nr_posicao_separador_w-1));
					elsif (nr_contador_w = 6) then
						dt_nascimento_w			:= to_date(substr(ds_conteudo_w, 1, nr_posicao_separador_w-1),'dd/mm/yyyy');
					elsif (nr_contador_w = 7) then
						ie_estado_civil_w		:= trim(both substr(ds_conteudo_w, 1, nr_posicao_separador_w-1));
					elsif (nr_contador_w = 8) then
						cd_nacionalidade_w		:= trim(both substr(ds_conteudo_w, 1, nr_posicao_separador_w-1));
					elsif (nr_contador_w = 9) then
						ie_sexo_w			:= trim(both substr(ds_conteudo_w, 1, nr_posicao_separador_w-1));
					elsif (nr_contador_w = 10) then
						nm_mae_w			:= trim(both substr(ds_conteudo_w, 1, nr_posicao_separador_w-1));
					elsif (nr_contador_w = 11) then
						nr_cpf_w			:= trim(both substr(ds_conteudo_w, 1, nr_posicao_separador_w-1));
					elsif (nr_contador_w = 12) then
						nr_identidade_w			:= trim(both substr(ds_conteudo_w, 1, nr_posicao_separador_w-1));
					elsif (nr_contador_w = 13) then
						dt_emissao_ci_w			:= to_date(substr(ds_conteudo_w, 1, nr_posicao_separador_w-1),'dd/mm/yyyy');
					elsif (nr_contador_w = 14) then
						sg_emissora_ci_w		:= trim(both substr(ds_conteudo_w, 1, nr_posicao_separador_w-1));
					elsif (nr_contador_w = 15) then
						ds_orgao_emissor_ci_w		:= trim(both substr(ds_conteudo_w, 1, nr_posicao_separador_w-1));
					elsif (nr_contador_w = 16) then
						nr_seq_pais_w			:= (trim(both substr(ds_conteudo_w, 1, nr_posicao_separador_w-1)))::numeric;
					elsif (nr_contador_w = 17) then
						nr_reg_geral_estrang_w		:= trim(both substr(ds_conteudo_w, 1, nr_posicao_separador_w-1));
					elsif (nr_contador_w = 18) then
						ds_email_w			:= trim(both substr(ds_conteudo_w, 1, nr_posicao_separador_w-1));
					elsif (nr_contador_w = 19) then
						cd_cep_w			:= somente_numero(trim(both substr(ds_conteudo_w, 1, nr_posicao_separador_w-1)));
					elsif (nr_contador_w = 20) then
						ds_endereco_w			:= trim(both substr(ds_conteudo_w, 1, nr_posicao_separador_w-1));
					elsif (nr_contador_w = 21) then
						nr_endereco_w			:= trim(both substr(ds_conteudo_w, 1, nr_posicao_separador_w-1));
					elsif (nr_contador_w = 22) then
						ds_complemento_w		:= trim(both substr(ds_conteudo_w, 1, nr_posicao_separador_w-1));
					elsif (nr_contador_w = 23) then
						ds_bairro_w			:= trim(both substr(ds_conteudo_w, 1, nr_posicao_separador_w-1));
					elsif (nr_contador_w = 24) then
						cd_municipio_ibge_w		:= trim(both substr(ds_conteudo_w, 1, nr_posicao_separador_w-1));
					elsif (nr_contador_w = 25) then
						sg_estado_w			:= trim(both substr(ds_conteudo_w, 1, nr_posicao_separador_w-1));
					elsif (nr_contador_w = 26) then
						nr_telefone_w			:= trim(both substr(ds_conteudo_w, 1, nr_posicao_separador_w-1));
					elsif (nr_contador_w = 27) then
						nr_celular_w			:= trim(both substr(ds_conteudo_w, 1, nr_posicao_separador_w-1));
					elsif (nr_contador_w = 28) then
						cd_cbo_w			:= trim(both substr(ds_conteudo_w, 1, nr_posicao_separador_w-1));
					elsif (nr_contador_w = 29) then
						cd_matricula_w			:= trim(both substr(ds_conteudo_w, 1, nr_posicao_separador_w-1));
					elsif (nr_contador_w = 30) then
						dt_admissao_w			:= to_date(substr(ds_conteudo_w, 1, nr_posicao_separador_w-1),'dd/mm/yyyy');
					elsif (nr_contador_w = 31) then
						nr_ctps_w			:= trim(both substr(ds_conteudo_w, 1, nr_posicao_separador_w-1));
					elsif (nr_contador_w = 32) then
						nr_serie_ctps_w			:= trim(both substr(ds_conteudo_w, 1, nr_posicao_separador_w-1));
					elsif (nr_contador_w = 33) then
						uf_emissora_ctps_w		:= trim(both substr(ds_conteudo_w, 1, nr_posicao_separador_w-1));
					elsif (nr_contador_w = 34) then
						nr_seq_parentesco_w		:= trim(both substr(ds_conteudo_w, 1, nr_posicao_separador_w-1));
					elsif (nr_contador_w = 35) then
						nr_seq_vinculo_estip_w		:= trim(both substr(ds_conteudo_w, 1, nr_posicao_separador_w-1));
					elsif (nr_contador_w = 36) then
						cd_cooperativa_w		:= trim(both substr(ds_conteudo_w, 1, nr_posicao_separador_w-1));
					elsif (nr_contador_w = 37) then
						nr_seq_motivo_cancelamento_w	:= trim(both substr(ds_conteudo_w, 1, nr_posicao_separador_w-1));
					elsif (nr_contador_w = 38) then
						nr_cartao_nac_sus_w		:= trim(both substr(ds_conteudo_w, 1, nr_posicao_separador_w-1));
					elsif (nr_contador_w = 39) then
						cd_declaracao_nasc_vivo_w	:= trim(both substr(ds_conteudo_w, 1, nr_posicao_separador_w-1));
					elsif (nr_contador_w = 40) then
						ds_observacao_w			:= trim(both substr(ds_conteudo_w, 1, nr_posicao_separador_w-1));
					elsif (nr_contador_w = 41) then
						nr_seq_plano_w	:= trim(both substr(ds_conteudo_w, 1, nr_posicao_separador_w-1));
						if (coalesce(nr_seq_plano_w::text, '') = '') then
							if (coalesce(ie_tipo_operacao_w,'I') = 'I') then
								if (coalesce(nr_seq_contrato_p,0) <> 0) then
									begin
									select	max(nr_seq_plano)
									into STRICT	nr_seq_plano_w
									from	pls_contrato_plano
									where	nr_seq_contrato	= nr_seq_contrato_p
									and	ie_situacao	= 'A';
									exception
									when others then
										nr_seq_plano_w	:= null;
									end;
								elsif (coalesce(nr_seq_intercambio_p,0) <> 0) then
									begin
									select	max(nr_seq_plano)
									into STRICT	nr_seq_plano_w
									from	pls_intercambio_plano
									where	nr_seq_intercambio	= nr_seq_intercambio_p;
									exception
									when others then
										nr_seq_plano_w	:= null;
									end;
								end if;
							end if;
						end if;
					elsif (nr_contador_w = 42) then
						cd_matricula_familia_w		:= trim(both substr(ds_conteudo_w, 1, nr_posicao_separador_w-1));
					elsif (nr_contador_w = 43) then
						nr_pis_pasep_w			:= trim(both substr(ds_conteudo_w, 1, nr_posicao_separador_w-1));
					elsif (nr_contador_w = 44) then
						nr_titulo_eleitor_w		:= trim(both substr(ds_conteudo_w, 1, nr_posicao_separador_w-1));
					elsif (nr_contador_w = 45) then
						cd_tipo_logradouro_w		:= trim(both substr(ds_conteudo_w, 1, nr_posicao_separador_w-1));
					elsif (nr_contador_w = 46) then
						nm_pai_w			:= trim(both substr(ds_conteudo_w, 1, nr_posicao_separador_w-1));
					elsif (nr_contador_w = 47) then
						ds_municipio_nasc_w		:= trim(both substr(ds_conteudo_w, 1, nr_posicao_separador_w-1));
					elsif (nr_contador_w = 48) then
						sg_estado_nasc_w		:= trim(both substr(ds_conteudo_w, 1, nr_posicao_separador_w-1));
					elsif (nr_contador_w = 49) then
						dt_rescisao_w			:= to_date(substr(ds_conteudo_w, 1, nr_posicao_separador_w-1),'dd/mm/yyyy');
					elsif (nr_contador_w = 50) then
						cd_plano_sca_w			:= trim(both substr(ds_conteudo_w, 1, nr_posicao_separador_w-1));
					elsif (nr_contador_w = 51) then
						nr_nivel_faixa_salarial_w	:= trim(both substr(ds_conteudo_w, 1, nr_posicao_separador_w-1));
						if (nr_nivel_faixa_salarial_w IS NOT NULL AND nr_nivel_faixa_salarial_w::text <> '') then
							select	max(nr_sequencia)
							into STRICT	nr_seq_faixa_salarial_w
							from	pls_faixa_salarial
							where	nr_nivel = nr_nivel_faixa_salarial_w;	
						end if;
					elsif (nr_contador_w = 52) then
						nr_seq_localizacao_benef_w	:= trim(both substr(ds_conteudo_w, 1, nr_posicao_separador_w-1));
					elsif (nr_contador_w = 53) then
						nr_seq_tabela_w			:= trim(both substr(ds_conteudo_w, 1, nr_posicao_separador_w-1));
					elsif (nr_contador_w = 54) then
						dt_contratacao_w		:= to_date(substr(ds_conteudo_w, 1, nr_posicao_separador_w-1),'dd/mm/yyyy');
					elsif (nr_contador_w = 55) then
						dt_adocao_w			:= to_date(substr(ds_conteudo_w, 1, nr_posicao_separador_w-1),'dd/mm/yyyy');
					elsif (nr_contador_w = 56) then
						nr_seq_motivo_inclusao_w	:= trim(both substr(ds_conteudo_w, 1, nr_posicao_separador_w-1));
					elsif (nr_contador_w = 57) then
						nr_seq_codigo_externo_w		:= trim(both substr(ds_conteudo_w, 1, nr_posicao_separador_w-1));
					elsif (nr_contador_w = 58) then
						nr_seq_subestipulante_w		:= trim(both substr(ds_conteudo_w, 1, nr_posicao_separador_w-1));
					elsif (nr_contador_w = 59) then
						nm_social_w			:= trim(both substr(ds_conteudo_w, 1, nr_posicao_separador_w-1));
					elsif (nr_contador_w = 60) then
						dt_inclusao_ops_origem_w	:= to_date(substr(ds_conteudo_w, 1, nr_posicao_separador_w-1),'dd/mm/yyyy');
					elsif (nr_contador_w = 61) then
						vl_preco_plano_origem_w		:= trim(both substr(ds_conteudo_w, 1, nr_posicao_separador_w-1));
					elsif (nr_contador_w = 62) then
						nr_protocolo_portabilidade_w	:= trim(both substr(ds_conteudo_w, 1, nr_posicao_separador_w-1));
					elsif (nr_contador_w = 63) then
						dt_emissao_prot_portab_w	:= to_date(substr(ds_conteudo_w, 1, nr_posicao_separador_w-1),'dd/mm/yyyy');
					elsif (nr_contador_w = 64) then
						nr_registro_ops_ans_w		:= trim(both substr(ds_conteudo_w, 1, nr_posicao_separador_w-1));
					elsif (nr_contador_w = 65) then
						ie_abrangencia_plano_origem_w	:= trim(both substr(ds_conteudo_w, 1, nr_posicao_separador_w-1));
					elsif (nr_contador_w = 66) then
						nr_registro_plano_origem_w	:= trim(both substr(ds_conteudo_w, 1, nr_posicao_separador_w-1));
					elsif (nr_contador_w = 67) then
						ie_tp_contr_plano_origem_w	:= trim(both substr(ds_conteudo_w, 1, nr_posicao_separador_w-1));
					elsif (nr_contador_w = 68) then
						dt_inclusao_operadora_w		:= to_date(substr(ds_conteudo_w, 1, nr_posicao_separador_w-1),'dd/mm/yyyy');
					elsif (nr_contador_w = 69) then
						dt_casamento_w			:= to_date(substr(ds_conteudo_w, 1, nr_posicao_separador_w-1),'dd/mm/yyyy');
					elsif (nr_contador_w = 70) then
						nr_cert_casamento_w		:= trim(both substr(ds_conteudo_w, 1, nr_posicao_separador_w-1));
					elsif (nr_contador_w = 71) then
						dt_reinclusao_w			:= to_date(trim(both substr(ds_conteudo_w, 1, nr_posicao_separador_w-1)),'dd/mm/yyyy');
					end if;
				end if;
				
				exception
				when others then
					RAISE EXCEPTION '%', wheb_mensagem_pck.get_texto(1172768,'NR_COLUNA='||nr_contador_w||';DS_COLUNA='||retorna_nome_coluna(nr_contador_w)||';NM_BENEFICIARIO='||nm_pessoa_fisica_w) USING ERRCODE = '45001';
				end;
				
				end;
			end loop;
			
			if (cd_usuario_plano_w IS NOT NULL AND cd_usuario_plano_w::text <> '') and (ie_tipo_operacao_w <> 'I') then
				select	max(nr_seq_segurado)
				into STRICT	nr_seq_segurado_w
				from	pls_segurado_carteira
				where	cd_usuario_plano	= cd_usuario_plano_w;
			end if;
			
			insert	into	pls_inclusao_beneficiario(	nr_sequencia,
					nr_seq_lote_inclusao,
					cd_estabelecimento,
					ie_status,
					dt_solicitacao,
					dt_nascimento,
					nm_mae,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_cpf,
					ie_estado_civil,
					ie_sexo,
					ds_email,
					nr_identidade,
					cd_cep,
					ds_endereco,
					ds_bairro,
					ie_tipo_operacao,
					nm_pessoa_fisica,
					cd_usuario_plano,
					cd_nacionalidade,
					dt_emissao_ci,
					sg_emissora_ci,
					ds_orgao_emissor_ci,
					nr_seq_pais,
					nr_reg_geral_estrang,
					nr_endereco,
					ds_complemento,
					cd_municipio_ibge,
					sg_estado,
					nr_telefone,
					nr_telefone_celular,
					cd_cbo,
					dt_admissao,
					nr_ctps,
					nr_serie_ctps,
					uf_emissora_ctps,
					nr_seq_parentesco,
					nr_seq_vinculo_estip,
					nr_seq_motivo_cancelamento,
					nr_cartao_nac_sus,
					cd_declaracao_nasc_vivo,
					ds_observacao,
					nr_seq_plano,
					cd_matricula_familia,
					nr_pis_pasep,
					nr_titulo_eleitor,
					cd_tipo_logradouro,
					nm_pai,
					ds_municipio_nasc,
					sg_estado_nasc,
					dt_rescisao,
					nr_nivel_faixa_salarial,
					nr_seq_localizacao_benef,
					nr_seq_tabela,
					nm_titular_inclusao,
					nr_seq_congenere_atend,
					ie_tipo_inclusao,
					ie_status_mov,
					nr_seq_faixa_salarial,
					dt_contratacao,
					dt_adocao,
					nr_seq_motivo_inclusao,
					nr_seq_codigo_externo,
					nr_seq_subestipulante,
					nm_social,
					dt_inclusao_ops_origem,
					vl_preco_plano_origem,
					nr_protocolo_portabilidade,
					dt_emissao_prot_portab,
					nr_registro_ops_ans,
					ie_abrangencia_plano_origem,
					nr_registro_plano_origem,
					ie_tp_contratacao_plano_origem,
					dt_inclusao_operadora,
					dt_emissao_cert_casamento,
					nr_cert_casamento,
					dt_reinclusao,
					nr_seq_segurado
				)
				values (	nextval('pls_inclusao_beneficiario_seq'),	--nr_sequencia
					nr_seq_lote_inclusao_w,			--nr_seq_lote_inclusao
					cd_estabelecimento_p,			--cd_estabelecimento
					'P',					--ie_status
					dt_admissao_w,				--dt_solicitacao
					dt_nascimento_w,			--dt_nascimento
					nm_mae_w,				--nm_mae
					clock_timestamp(),				--dt_atualizacao
					nm_usuario_p,				--nm_usuario
					clock_timestamp(),				--dt_atualizacao_nrec
					nm_usuario_p,				--nm_usuario_nrec
					nr_cpf_w,				--nr_cpf
					ie_estado_civil_w,			--ie_estado_civil
					ie_sexo_w,				--ie_sexo
					ds_email_w,				--ds_email
					nr_identidade_w,			--nr_identidade
					cd_cep_w,				--cd_cep
					ds_endereco_w,				--ds_endereco
					ds_bairro_w,				--ds_bairro
					ie_tipo_operacao_w,			--ie_tipo_operacao
					nm_pessoa_fisica_w,			--nm_pessoa_fisica
					cd_usuario_plano_w,			--cd_usuario_plano
					cd_nacionalidade_w,			--cd_nacionalidade
					dt_emissao_ci_w,			--dt_emissao_ci
					sg_emissora_ci_w,			--sg_emissora_ci
					ds_orgao_emissor_ci_w,			--ds_orgao_emissor_ci
					nr_seq_pais_w,				--nr_seq_pais 
					nr_reg_geral_estrang_w,			--nr_reg_geral_estrang
					nr_endereco_w,				--nr_endereco
					ds_complemento_w,			--ds_complemento
					cd_municipio_ibge_w,			--cd_municipio_ibge
					sg_estado_w,				--sg_estado
					nr_telefone_w,				--nr_telefone
					nr_celular_w,				--nr_telefone_celular
					cd_cbo_w,				--cd_cbo
					dt_admissao_w,				--dt_admissao
					nr_ctps_w,				--nr_ctps
					nr_serie_ctps_w,			--nr_serie_ctps
					uf_emissora_ctps_w,			--uf_emissora_ctps
					nr_seq_parentesco_w,			--nr_seq_parentesco
					nr_seq_vinculo_estip_w,			--nr_seq_vinculo_estip
					nr_seq_motivo_cancelamento_w,		--nr_seq_motivo_cancelamento
					nr_cartao_nac_sus_w,			--nr_cartao_nac_sus
					cd_declaracao_nasc_vivo_w,		--cd_declaracao_nasc_vivo
					ds_observacao_w,			--ds_observacao
					nr_seq_plano_w,				--nr_seq_plano
					cd_matricula_familia_w,			--cd_matricula_familia
					nr_pis_pasep_w,				--nr_pis_pasep
					nr_titulo_eleitor_w,			--nr_titulo_eleitor
					cd_tipo_logradouro_w,			--cd_tipo_logradouro
					nm_pai_w,				--nm_pai
					ds_municipio_nasc_w,			--ds_municipio_nasc
					sg_estado_nasc_w,			--sg_estado_nasc
					dt_rescisao_w,				--dt_rescisao
					nr_nivel_faixa_salarial_w,		--nr_nivel_faixa_salarial
					nr_seq_localizacao_benef_w,		--nr_seq_localizacao_benef
					nr_seq_tabela_w,			--nr_seq_tabela
					nm_titular_w,				--nm_titular_inclusao 
					nr_seq_congenere_atend_w,		--nr_seq_congenere_atend
					'P',					--ie_tipo_inclusao 
					'1',					--ie_status_mov
					nr_seq_faixa_salarial_w,		--nr_seq_faixa_salarial,
					dt_contratacao_w,			--dt_contratacao
					dt_adocao_w,				--dt_adocao
					nr_seq_motivo_inclusao_w,		--nr_seq_motivo_inclusao
					nr_seq_codigo_externo_w,		--nr_seq_codigo_externo
					nr_seq_subestipulante_w,		--nr_seq_subestipulante
					nm_social_w,				--nm_social
					dt_inclusao_ops_origem_w,		--dt_inclusao_ops_origem
					vl_preco_plano_origem_w,		--vl_preco_plano_origem
					nr_protocolo_portabilidade_w,		--nr_protocolo_portabilidade
					dt_emissao_prot_portab_w,		--dt_emissao_prot_portab
					nr_registro_ops_ans_w,			--nr_registro_ops_ans
					ie_abrangencia_plano_origem_w,		--ie_abrangencia_plano_origem
					nr_registro_plano_origem_w,		--nr_registro_plano_origem
					ie_tp_contr_plano_origem_w,		--ie_tp_contr_plano_origem
					dt_inclusao_operadora_w,		--dt_inclusao_operadora
					dt_casamento_w,				--dt_casamento
					nr_cert_casamento_w,			--nr_cert_casamento
					dt_reinclusao_w,			--dt_reinclusao
					nr_seq_segurado_w			--nr_seq_segurado
				) returning nr_sequencia into nr_seq_inclusao_benef_w;
			
			-- Incluir SCA
			if (cd_plano_sca_w IS NOT NULL AND cd_plano_sca_w::text <> '') then
				nr_contador_w := 1;
				while( nr_contador_w > 0 ) loop
					nr_sep_ini_w	:= nr_contador_w;
					nr_sep_fim_w	:= instr(cd_plano_sca_w,',',nr_contador_w + 1);
					
					if (nr_sep_fim_w = 0) then
						nr_seq_sca_w	:= cd_plano_sca_w;
						nr_contador_w	:= 0;
					else
						nr_seq_sca_w	:= trim(both substr(cd_plano_sca_w, nr_sep_ini_w, (nr_sep_fim_w - nr_sep_ini_w)));
						nr_contador_w	:= nr_sep_fim_w + 1;
					end if;
					
					if (nr_seq_sca_w IS NOT NULL AND nr_seq_sca_w::text <> '') then
						insert	into	pls_inclusao_benef_sca(	nr_sequencia, nr_seq_inclusao_benef, dt_atualizacao,
								nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
								nr_seq_sca, ie_selecao )
							values (	nextval('pls_inclusao_benef_sca_seq'), nr_seq_inclusao_benef_w, clock_timestamp(),
								nm_usuario_p, clock_timestamp(), nm_usuario_p,
								nr_seq_sca_w, 'N' );
					else
						nr_contador_w := 0;
					end if;
				end loop;
			end if;
			
			if (coalesce(ie_tipo_operacao_w,'I') = 'I') then
				pls_gerar_homonimo_pf(nm_pessoa_fisica_w,to_char(dt_nascimento_w, 'dd/mm/yyyy'),nr_cpf_w,nr_seq_inclusao_benef_w,nm_usuario_p);
			end if;
		end if;
		end;
	end loop;
	close C01;
	
	update	pls_lote_inclusao_benef
	set	dt_importacao_arquivo	 = NULL
	where	nr_sequencia		= nr_seq_lote_inclusao_w;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_importar_inclusao_benef (( nr_seq_contrato_p bigint, nr_seq_intercambio_p bigint, cd_interface_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) is nr_seq_lote_inclusao_w bigint) FROM PUBLIC;

