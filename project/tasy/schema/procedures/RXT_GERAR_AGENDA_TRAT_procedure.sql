-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE rxt_gerar_agenda_trat ( nr_seq_tratamento_p bigint, nr_seq_fase_p bigint, nr_seq_equipamento_p bigint, dt_agenda_p timestamp, nm_usuario_p text, ie_prox_hor_sobreposto_p text, nr_seq_volume_p bigint, cd_estabelecimento_p bigint, qt_duracao_tratamento_p bigint default 0, nr_seq_aplic_trat_p bigint default 0, nr_insercao_p bigint default 0, ie_alter_plan_p INOUT text  DEFAULT NULL) AS $body$
DECLARE


nr_seq_agenda_w			bigint;
nr_seq_fase_w			bigint;
nr_seq_dia_w			bigint;
nr_seq_dia_fase_w		bigint;
ie_considera_volume_w	varchar(1);
ie_vincular_atend_w		varchar(1);
nr_atendimento_w		bigint;
ie_existe_agenda_dia_w	varchar(1);
dt_agenda_posterior_w	timestamp;
ie_tipo_trat_w			varchar(5);
nr_seq_aplic_w  		bigint;
ie_alter_plan_w 		varchar(1) := 'N';


BEGIN

ie_vincular_atend_w 	:= coalesce(Obter_Valor_Param_Usuario(3030, 27, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p),'N');

if (nr_seq_tratamento_p IS NOT NULL AND nr_seq_tratamento_p::text <> '') and (nr_seq_equipamento_p IS NOT NULL AND nr_seq_equipamento_p::text <> '') and (dt_agenda_p IS NOT NULL AND dt_agenda_p::text <> '') and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') then

	select	coalesce(max(ie_considera_tratamento_volume),'N')
	into STRICT	ie_considera_volume_w
	from 	rxt_parametro;

	select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
	into STRICT	ie_existe_agenda_dia_w
	from	rxt_agenda
	where	nr_seq_equipamento	= nr_seq_equipamento_p
	and	dt_agenda		between trunc(dt_agenda_p,'dd') and trunc(dt_agenda_p,'dd') + 86399/86400
	and	ie_tipo_agenda		= 'T'
	and	nr_seq_tratamento	= nr_seq_tratamento_p
	and	ie_status_agenda 	<> 'C';

	select	coalesce(max(nr_sequencia),0)	
	into STRICT	nr_seq_agenda_w
	from	rxt_agenda
	where	nr_seq_equipamento	= nr_seq_equipamento_p
	and	dt_agenda		= dt_agenda_p
	and	ie_status_agenda	= 'L'
	and	ie_tipo_agenda		= 'T';

	select	max(a.nr_atendimento),
			coalesce(max(rxt_obter_tipo_trat_prot(b.nr_seq_protocolo)),'X')
	into STRICT	nr_atendimento_w,
			ie_tipo_trat_w
	from	rxt_tumor a,
		rxt_tratamento b
	where	a.nr_sequencia = b.nr_Seq_tumor
	and	b.nr_sequencia = nr_seq_tratamento_p;

	if (ie_existe_agenda_dia_w = 'N') and (nr_seq_agenda_w = 0) and (ie_prox_hor_sobreposto_p = 'S') then

		select	min(dt_agenda)
		into STRICT	dt_agenda_posterior_w
		from	rxt_agenda
		where	nr_seq_equipamento	= nr_seq_equipamento_p
		and	dt_agenda 		between dt_agenda_p and trunc(dt_agenda_p,'dd') + 86399/86400
		and	ie_status_agenda	= 'L'
		and	ie_tipo_agenda		= 'T';

		select	coalesce(max(nr_sequencia),0)	
		into STRICT	nr_seq_agenda_w
		from	rxt_agenda
		where	nr_seq_equipamento	= nr_seq_equipamento_p
		and	dt_agenda		= dt_agenda_posterior_w
		and	ie_status_agenda	= 'L'
		and	ie_tipo_agenda		= 'T';

		if (nr_seq_agenda_w > 0) then
			ie_alter_plan_w := 'H';
		else
			ie_alter_plan_w := 'D';
		end if;

	end if;

	if (nr_seq_agenda_w > 0) then

		if (ie_considera_volume_w = 'N') or (ie_tipo_trat_w = 'B') then
			nr_seq_dia_fase_w	:= rxt_obter_dia_fase_trat_agenda(nr_seq_tratamento_p, nr_seq_fase_p, 'DF');
			nr_seq_dia_w		:= rxt_obter_dia_fase_trat_agenda(nr_seq_tratamento_p, nr_seq_fase_p, 'DT');

			if (qt_duracao_tratamento_p > 0) then 

				update	rxt_agenda
				   set	nr_seq_tratamento	= nr_seq_tratamento_p,
					nr_seq_fase	= nr_seq_fase_p,
					nr_seq_dia_fase	= nr_seq_dia_fase_w,
					nr_seq_dia	= nr_seq_dia_w,
					ie_status_agenda	= 'P',
					nm_usuario_acesso	= nm_usuario_p,
					nr_atendimento	= CASE WHEN ie_vincular_atend_w='S' THEN  nr_atendimento_w END , 
					nr_minuto_duracao  = qt_duracao_tratamento_p
				 where	nr_sequencia	= nr_seq_agenda_w;					
			else			
				update	rxt_agenda
				   set	nr_seq_tratamento	= nr_seq_tratamento_p,
						nr_seq_fase	= nr_seq_fase_p,
						nr_seq_dia_fase	= nr_seq_dia_fase_w,
						nr_seq_dia	= nr_seq_dia_w,
						ie_status_agenda	= 'P',
						nm_usuario_acesso	= nm_usuario_p,
						nr_atendimento	= CASE WHEN ie_vincular_atend_w='S' THEN  nr_atendimento_w END
				 where	nr_sequencia	= nr_seq_agenda_w;	

				update 	RXT_BRAQ_CAMPO_APLIC_TRAT
				set 	NR_SEQ_AGENDA = nr_seq_agenda_w
				where 	nr_seq_aplic_trat = nr_seq_aplic_trat_p
				and     nr_insercao = nr_insercao_p;

			end if;


		else
			nr_seq_dia_w		:= rxt_obter_dia_fase_trat_agenda(nr_seq_tratamento_p, nr_seq_fase_p, 'DT');
            nr_seq_dia_fase_w	:= rxt_obter_dia_fase_vol_agenda(nr_seq_volume_p, nr_seq_fase_p, 'DF');

			if (qt_duracao_tratamento_p > 0) then 
				update	rxt_agenda
				set	nr_seq_tratamento	= nr_seq_tratamento_p,
                    nr_seq_fase	= nr_seq_fase_p,
                    nr_seq_dia_fase	= nr_seq_dia_fase_w,
					ie_status_agenda	= 'P',
					nr_seq_dia	= nr_seq_dia_w,
					nm_usuario_acesso	= nm_usuario_p,
					nr_atendimento	= CASE WHEN ie_vincular_atend_w='S' THEN  nr_atendimento_w END , 
					nr_minuto_duracao   = qt_duracao_tratamento_p
				where	nr_sequencia	 = nr_seq_agenda_w;
			else
				update	rxt_agenda
				set	nr_seq_tratamento	= nr_seq_tratamento_p,
                    nr_seq_fase	= nr_seq_fase_p,
					nr_seq_dia_fase	= nr_seq_dia_fase_w,
					ie_status_agenda	= 'P',
					nr_seq_dia	= nr_seq_dia_w,
					nm_usuario_acesso	= nm_usuario_p,
					nr_atendimento	= CASE WHEN ie_vincular_atend_w='S' THEN  nr_atendimento_w END
				where	nr_sequencia	= nr_seq_agenda_w;
			end if;			

			if (nr_seq_fase_p IS NOT NULL AND nr_seq_fase_p::text <> '') then
				nr_seq_dia_fase_w	:= rxt_obter_dia_fase_vol_agenda(nr_seq_volume_p, nr_seq_fase_p, 'DF');
				nr_seq_dia_w		:= rxt_obter_dia_fase_vol_agenda(nr_seq_volume_p, nr_seq_fase_p, 'DT');

				insert	into rxt_agenda_fase(nr_sequencia,
								dt_atualizacao,
								nm_usuario,
								dt_atualizacao_nrec,
								nm_usuario_nrec,
								nr_seq_agenda_rxt,
								nr_seq_fase,
								nr_seq_dia,
								nr_seq_dia_fase,
								nr_seq_volume)
				values (nextval('rxt_agenda_fase_seq'),
								clock_timestamp(),
								nm_usuario_p,
								clock_timestamp(),
								nm_usuario_p,
								nr_seq_agenda_w,
								nr_seq_fase_p,
								nr_seq_dia_w,
								nr_seq_dia_fase_w,
								nr_seq_volume_p);

			end if;
		end if;	
	elsif (ie_tipo_trat_w = 'B') and (ie_prox_hor_sobreposto_p <> 'S') then

			ie_alter_plan_w := 'D';
	else
		if (ie_considera_volume_w = 'S') then


			if (ie_prox_hor_sobreposto_p = 'S') then

				select	min(dt_agenda)
				into STRICT	dt_agenda_posterior_w
				from	rxt_agenda
				where	nr_seq_equipamento	= nr_seq_equipamento_p
				and	dt_agenda 		between dt_agenda_p and trunc(dt_agenda_p,'dd') + 86399/86400
				and	nr_seq_tratamento	= nr_seq_tratamento_p
				and	ie_status_agenda 	<> 'C'
				and	ie_tipo_agenda		= 'T';

				select	coalesce(max(nr_sequencia),0)	
				into STRICT	nr_seq_agenda_w
				from	rxt_agenda
				where	nr_seq_equipamento	= nr_seq_equipamento_p
				and	dt_agenda		= dt_agenda_posterior_w
				and	ie_tipo_agenda		= 'T';

			else

				select	coalesce(max(nr_sequencia),0)	
				into STRICT	nr_seq_agenda_w
				from	rxt_agenda
				where	nr_seq_equipamento	= nr_seq_equipamento_p
				and	dt_agenda		= dt_agenda_p
				and	nr_seq_tratamento	= nr_seq_tratamento_p
				and	ie_status_agenda 	<> 'C'
				and	ie_tipo_agenda		= 'T';

			end if;

			if (nr_seq_agenda_w > 0) then
					ie_alter_plan_w := 'H';
				else
					ie_alter_plan_w := 'D';
				end if;

			nr_seq_dia_w		:= rxt_obter_dia_fase_trat_agenda(nr_seq_tratamento_p, nr_seq_fase_p, 'DT');
            nr_seq_dia_fase_w	:= rxt_obter_dia_fase_vol_agenda(nr_seq_volume_p, nr_seq_fase_p, 'DF');

			if (qt_duracao_tratamento_p > 0) then 
				update	rxt_agenda
				set	nr_seq_tratamento	= nr_seq_tratamento_p,
                    nr_seq_fase	= nr_seq_fase_p,
					nr_seq_dia_fase	= nr_seq_dia_fase_w,
					ie_status_agenda	= 'P',
					nr_seq_dia			= nr_seq_dia_w,
					nm_usuario_acesso	= nm_usuario_p,
					nr_atendimento		= CASE WHEN ie_vincular_atend_w='S' THEN  nr_atendimento_w END , 
					nr_minuto_duracao   = qt_duracao_tratamento_p
				where	nr_sequencia	= nr_seq_agenda_w;
			else
				update	rxt_agenda
				set	nr_seq_tratamento	= nr_seq_tratamento_p,
                    nr_seq_fase	= nr_seq_fase_p,
					nr_seq_dia_fase	= nr_seq_dia_fase_w,
					ie_status_agenda	= 'P',
					nr_seq_dia			= nr_seq_dia_w,
					nm_usuario_acesso	= nm_usuario_p,
					nr_atendimento		= CASE WHEN ie_vincular_atend_w='S' THEN  nr_atendimento_w END
				where	nr_sequencia	= nr_seq_agenda_w;
			end if;

			if (nr_seq_agenda_w > 0) and (nr_seq_fase_p IS NOT NULL AND nr_seq_fase_p::text <> '') then

				nr_seq_dia_fase_w	:= rxt_obter_dia_fase_vol_agenda(nr_seq_volume_p, nr_seq_fase_p, 'DF');
				nr_seq_dia_w		:= rxt_obter_dia_fase_vol_agenda(nr_seq_volume_p, nr_seq_fase_p, 'DT');

				insert	into rxt_agenda_fase(nr_sequencia,
								dt_atualizacao,
								nm_usuario,
								dt_atualizacao_nrec,
								nm_usuario_nrec,
								nr_seq_agenda_rxt,
								nr_seq_fase,
								nr_seq_dia,
								nr_seq_dia_fase,
								nr_seq_volume)
				values (nextval('rxt_agenda_fase_seq'),
								clock_timestamp(),
								nm_usuario_p,
								clock_timestamp(),
								nm_usuario_p,
								nr_seq_agenda_w,
								nr_seq_fase_p,
								nr_seq_dia_w,
								nr_seq_dia_fase_w,
								nr_seq_volume_p);

			end if;
		end if;					
	end if;
end if;

/*D - para se o dia nao foi agendado
	H - para se o horario do dia foi alterado*/
if (ie_alter_plan_w <> 'N') then
ie_alter_plan_p := ie_alter_plan_w;
end if;
--commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE rxt_gerar_agenda_trat ( nr_seq_tratamento_p bigint, nr_seq_fase_p bigint, nr_seq_equipamento_p bigint, dt_agenda_p timestamp, nm_usuario_p text, ie_prox_hor_sobreposto_p text, nr_seq_volume_p bigint, cd_estabelecimento_p bigint, qt_duracao_tratamento_p bigint default 0, nr_seq_aplic_trat_p bigint default 0, nr_insercao_p bigint default 0, ie_alter_plan_p INOUT text  DEFAULT NULL) FROM PUBLIC;

