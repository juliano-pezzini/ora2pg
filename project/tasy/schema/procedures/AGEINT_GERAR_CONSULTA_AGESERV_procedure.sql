-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ageint_gerar_consulta_ageserv (cd_estabelecimento_p bigint, cd_agenda_p bigint, dt_agenda_p timestamp, nm_usuario_p text) AS $body$
DECLARE

			
ie_dia_semana_w		smallint;
ie_feriado_w			varchar(001)	:= 'N';
ie_feriado_exame_w		varchar(001)	:= 'N';
ie_permite_feriado_w		varchar(001);
HR_QUEBRA_TURNO_W		varchar(05);
qt_min_QUEBRA_TURNO_W	varchar(05);
qt_min_minimo_w		integer;
ds_horario_w			varchar(255);
hr_inicial_w			timestamp;
hr_final_w			timestamp;
nr_minuto_intervalo_w	smallint;
nr_seq_classif_med_w		bigint;
ds_observacao_w		varchar(255);
ie_classif_Agenda_w		varchar(0005);
nr_seq_sala_w			bigint;
cd_convenio_padrao_w		bigint;
hr_atual_w			timestamp;
hr_fim_w			timestamp;
qt_existe_agenda_w		smallint;
qt_horario_w			integer    := 0;
qt_bloqueio_w			smallint;
qt_bloqueio_hora_w		smallint;
qt_bloqueio_dia_w		smallint;
qt_bloqueio_dia_hora_w	smallint;
nr_sequencia_w		bigint    := 0;
nr_seq_turno_w		bigint    := 0;
cd_turno_w			varchar(01);
qt_inicio_w			bigint    := 0;
qt_agenda_w			bigint    := 0;
cd_classificacao_w		varchar(05);
cd_classificacao_old_w		varchar(05);
qt_classificacao_w		bigint    := 0;
nr_seq_hora_w			bigint    := 0;
cd_medico_w			varchar(10);
cd_medico_old_w			varchar(10);
qt_bloq_classificacao_w		smallint	:= 0;/* Rafael em 26/09/2006 OS41332 */
qt_bloq_classificacao_dia_w	smallint	:= 0;/* Rafael em 26/09/2006 OS41332 */
qt_bloq_classif_dia_hora_w	smallint	:= 0;

qt_agenda_bloq_classif_w		smallint	:= 0;/* Rafael em 26/09/2006 OS41332 */
qt_agenda_bloq_classif_dia_w		smallint	:= 0;/* Rafael em 26/09/2006 OS41332 */
qt_agenda_bloq_classif_diahr_w	smallint	:= 0;

cd_medico_solic_w		varchar(10);
ie_considera_w			varchar(1)	:= 'N';
ie_considerar_original_w	varchar(1)	:= 'N';
ie_todos_dias_regra_w		varchar(1)	:= 'N';


qt_agenda_bloq_dia_hora_w	smallint	:= 0;
qt_agenda_bloq_hora_w 		smallint	:= 0;
qt_agenda_bloq_w		smallint	:= 0;
qt_agenda_bloq_dia_w		smallint	:= 0;
qt_agenda_classif_w		bigint	:= 0;
cd_setor_agenda_w		bigint;
qt_total_turno_w		smallint	:= 0;
qt_total_turno_lido_w		smallint	:= 0;
qt_inicio_agenda_w		bigint;
ie_gerar_hor_bloq_w		varchar(1);
ie_bloqueio_w			varchar(1);
cd_procedimento_w		bigint;
nr_seq_proc_interno_w		bigint;
ie_origem_proced_w		bigint;
ie_consiste_periodo_w		varchar(1);
ie_status_autor_w	varchar(15);

cd_setor_entrega_w	integer;
cd_setor_coleta_w	integer;


ie_classif_agenda_origem_w 	varchar(5);
ie_classif_agenda_ww		varchar(5);
cd_pessoa_fisica_w	varchar(10);
nm_paciente_w		varchar(80);
ie_status_Agenda_w	varchar(3);
nr_minuto_duracao_w	bigint;
dt_agenda_w		timestamp;
cd_medico_exec_w	varchar(10);

ds_observacao_agenda_w	varchar(2000);
nr_seq_agenda_w			agenda_consulta.nr_sequencia%TYPE;
nr_atendimento_w	bigint;
cd_convenio_w		integer;
ie_encaixe_w		varchar(1);
ds_motivo_w			varchar(255);

C01 CURSOR FOR
SELECT	TO_DATE(TO_CHAR(dt_agenda_p,'dd/mm/yyyy') || ' ' ||
	TO_CHAR(hr_inicial,'hh24:mi'),'dd/mm/yyyy hh24:mi'),
	TO_DATE(TO_CHAR(dt_agenda_p,'dd/mm/yyyy') || ' ' ||
	TO_CHAR(hr_final,'hh24:mi'),'dd/mm/yyyy hh24:mi'),
	nr_minuto_intervalo,
	ie_classif_agenda,
	nr_seq_classif_med,
	ds_observacao,
	nr_seq_sala,
	cd_convenio_padrao,
	nr_sequencia,
	coalesce(qt_total_turno,0)
FROM 	agenda_Turno a
WHERE 	cd_agenda	= cd_agenda_p
  AND 	ie_dia_semana	= ie_dia_Semana_w
  AND 	hr_inicial 	< hr_final
  AND	((coalesce(dt_inicio_vigencia::text, '') = '') OR (dt_inicio_vigencia <= TRUNC(dt_agenda_p)))
  AND	((coalesce(dt_final_vigencia::text, '') = '') OR (dt_final_vigencia >= TRUNC(dt_agenda_p)))
  AND (ie_feriado_w <> 'S')
  AND	obter_se_gerar_turno_agecons(dt_inicio_vigencia,ie_frequencia,dt_agenda_p) = 'S'

UNION

SELECT TO_DATE(TO_CHAR(dt_agenda_p,'dd/mm/yyyy') || ' ' ||
	TO_CHAR(hr_inicial,'hh24:mi'),'dd/mm/yyyy hh24:mi'),
	TO_DATE(TO_CHAR(dt_agenda_p,'dd/mm/yyyy') || ' ' ||
	TO_CHAR(hr_final,'hh24:mi'),'dd/mm/yyyy hh24:mi'),
	nr_minuto_intervalo,
	ie_classif_agenda,
	nr_seq_classif_med,
	ds_observacao,
	nr_seq_sala,
	cd_convenio_padrao,
	nr_sequencia,
	coalesce(qt_total_turno,0)
FROM 	agenda_Turno
WHERE 	cd_agenda     	= cd_agenda_p
  AND 	ie_dia_semana		= 9
  AND 	hr_inicial 		< hr_final
  AND	((coalesce(dt_inicio_vigencia::text, '') = '') OR (dt_inicio_vigencia <= TRUNC(dt_agenda_p)))
  AND	((coalesce(dt_final_vigencia::text, '') = '') OR (dt_final_vigencia >= TRUNC(dt_agenda_p)))
  AND	ie_dia_semana_w BETWEEN 2 AND 6
  AND (ie_feriado_w 	<> 'S')
  AND	obter_se_gerar_turno_agecons(dt_inicio_vigencia,ie_frequencia,dt_agenda_p) = 'S'
    AND	NOT EXISTS (SELECT	1
			FROM 		agenda_Turno
			WHERE 		cd_agenda	= cd_agenda_p
	  		AND 		ie_dia_semana	= ie_dia_Semana_w
			and		ie_todos_dias_regra_w = 'N')
	
ORDER BY
	1,2,3;

c02 CURSOR FOR
SELECT	cd_classificacao,
	qt_classif,
	coalesce(cd_medico,'0'),
	coalesce(cd_medico_solic,'0'),
	coalesce(cd_procedimento,0),
	coalesce(nr_seq_proc_interno,0),
	coalesce(ie_origem_proced,0),
	coalesce(cd_setor_entrega,0),
	coalesce(cd_setor_coleta,0)
FROM	agenda_turno_classif
WHERE	nr_seq_turno	= nr_seq_turno_w
AND	((ie_feriado_exame_w 	<> 'S') OR (coalesce(ie_gera_feriado,'S') = 'S'));

C03 CURSOR FOR
	SELECT	cd_pessoa_fisica,
		nm_paciente,
		cd_medico,
		ie_status_agenda,
		nr_minuto_duracao,
		dt_Agenda,
		ie_classif_agenda_origem,
		ie_classif_agenda,
		ds_observacao,
		nr_atendimento,
		cd_convenio,
		nr_sequencia,
		cd_turno,
		cd_procedimento,
		nr_seq_proc_interno,
		ie_origem_proced,
		coalesce(ie_encaixe,'N'),
		SUBSTR(obter_motivo_agecons(nr_sequencia,ie_status_agenda,coalesce(nr_seq_motivo_transf,somente_numero(cd_motivo_cancelamento))),1,255)
	from	agenda_consulta
	where	cd_agenda		= cd_agenda_p
	and	ie_status_agenda	<> 'L'
	and	trunc(dt_agenda)	= trunc(dt_agenda_p)
	order by dt_agenda;



BEGIN

delete	FROM ageint_consulta_horarios
where	cd_agenda	= cd_agenda_p
and	nm_usuario	= nm_usuario_p
and	dt_agenda	between trunc(dt_agenda_p) and trunc(dt_agenda_p) + 83699/86400;

ie_considera_w := Obter_Param_Usuario(866, 38, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_considera_w);
ie_consiste_periodo_w := Obter_Param_Usuario(866, 90, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_consiste_periodo_w);
ie_considerar_original_w := Obter_Param_Usuario(866, 110, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_considerar_original_w);
ie_todos_dias_regra_w := Obter_Param_Usuario(866, 120, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_todos_dias_regra_w);

select	coalesce(max(obter_valor_param_usuario(866, 102, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p)), null)
into STRICT 	ie_status_autor_w
;

select	pkg_date_utils.get_WeekDay(dt_agenda_p)
INTO STRICT	ie_dia_semana_w
;

SELECT	coalesce(MAX(ie_feriado), 'N'),
	coalesce(MAX(HR_QUEBRA_TURNO), '12'),
	coalesce(MAX(qt_min_quebra_turno), '00'),
	MAX(cd_setor_agenda),
	MAX(ie_gerar_hor_bloq)
INTO STRICT	ie_permite_feriado_w,
	HR_QUEBRA_TURNO_W,
	qt_min_QUEBRA_TURNO_W,
	cd_setor_agenda_w,
	ie_gerar_hor_bloq_w
FROM	agenda
WHERE	cd_agenda = cd_agenda_p;

BEGIN
SELECT 'S'
INTO STRICT	ie_feriado_exame_w
FROM feriado
WHERE cd_estabelecimento 	= cd_estabelecimento_p
  AND dt_feriado		= dt_agenda_p;
EXCEPTION
	WHEN OTHERS THEN
		ie_feriado_exame_w := 'N';
END;


IF (ie_permite_feriado_w = 'N') THEN
	BEGIN
	SELECT 'S'
	INTO STRICT	ie_feriado_w
	FROM feriado
	WHERE cd_estabelecimento 	= cd_estabelecimento_p
	  AND dt_feriado		= dt_agenda_p;
	EXCEPTION
		WHEN OTHERS THEN
			ie_feriado_w := 'N';
	END;
END IF;


qt_min_minimo_w		:= 5;
ds_horario_w		:= '';
qt_agenda_w		:= 0;
qt_agenda_classif_w	:= 0;

open C03;
loop
fetch C03 into	
	cd_pessoa_fisica_w,
	nm_paciente_w,
	cd_medico_exec_w,
	ie_status_agenda_w,
	nr_minuto_duracao_w,
	dt_agenda_w,
	ie_classif_agenda_origem_w,
	ie_classif_agenda_ww,
	ds_observacao_agenda_w,
	nr_atendimento_w,
	cd_convenio_w,
	nr_seq_agenda_w,
	cd_turno_w,
	cd_procedimento_w,
	nr_seq_proc_interno_w,
	ie_origem_proced_w,
	ie_encaixe_w,
	ds_motivo_w;
EXIT WHEN NOT FOUND; /* apply on C03 */
	begin
	
	insert into ageint_consulta_horarios(dt_Atualizacao,
		nm_usuario,
		cd_agenda,
		cd_medico_exec,
		cd_paciente,
		nm_paciente,
		ie_status_agenda,
		nr_minuto_duracao,
		dt_agenda,
		ie_classif_agenda_origem,
		ie_classif_agenda,
		ds_observacao,
		nr_seq_agenda,
		nr_atendimento,
		cd_convenio,
		cd_turno,
		cd_procedimento,
		nr_seq_proc_interno,
		ie_origem_proced,
		ie_encaixe,
		ds_motivo)
	values (clock_timestamp(),
		nm_usuario_p,
		cd_Agenda_p,
		cd_medico_exec_w,
		cd_pessoa_fisica_w,
		substr(nm_paciente_w,1,60),
		ie_status_Agenda_w,
		nr_minuto_duracao_w,
		dt_agenda_w,
		ie_classif_agenda_origem_w,
		ie_classif_agenda_ww,
		ds_observacao_agenda_w,
		nr_seq_agenda_w,
		nr_atendimento_w,
		cd_convenio_w,
		cd_turno_w,
		cd_procedimento_w,
		nr_seq_proc_interno_w,
		ie_origem_proced_w,
		ie_encaixe_w,
		ds_motivo_w);
	
	end;
end loop;
close C03;


OPEN C01;
LOOP
FETCH C01 INTO
	hr_inicial_w,
	hr_final_w,
	nr_minuto_Intervalo_w,
	ie_classif_agenda_w,
	nr_seq_classif_med_w,
	ds_observacao_w,
	nr_seq_sala_w,
	cd_convenio_padrao_w,
	nr_seq_turno_w,
	qt_total_turno_lido_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
     	BEGIN

	hr_atual_w		:= hr_inicial_w;
	ie_classif_agenda_w	:= 'N';

/* inicio da NOVA rotina de bloqueio (Rafael em 25/09/2006 OS41280) */

	SELECT 	COUNT(*),
		coalesce(MAX(qt_agenda_bloq),0)
	INTO STRICT	qt_bloqueio_hora_w,
		qt_agenda_bloq_hora_w
	FROM	agenda_bloqueio
	WHERE	cd_agenda	= cd_agenda_p
	AND	TO_DATE(TO_CHAR(TRUNC(hr_atual_w, 'dd'), 'dd/mm/yyyy') || ' ' || TO_CHAR(HR_INICIO_BLOQUEIO, 'hh24:mi:ss'), 'dd/mm/yyyy
hh24:mi:ss') <= (hr_atual_w + nr_minuto_Intervalo_w/1440)
	AND	TO_DATE(TO_CHAR(TRUNC(hr_atual_w, 'dd'), 'dd/mm/yyyy') || ' ' || TO_CHAR(HR_final_BLOQUEIO, 'hh24:mi:ss'), 'dd/mm/yyyy
hh24:mi:ss') > hr_atual_w
	AND	TRUNC(hr_atual_w, 'dd') BETWEEN TRUNC(dt_inicial, 'dd') AND TRUNC(dt_final, 'dd')
	AND	(HR_INICIO_BLOQUEIO IS NOT NULL AND HR_INICIO_BLOQUEIO::text <> '')
	AND	(HR_final_BLOQUEIO IS NOT NULL AND HR_final_BLOQUEIO::text <> '')
	AND	coalesce(ie_dia_semana::text, '') = ''
	AND	coalesce(cd_medico::text, '') = ''
	AND	coalesce(ie_classif_bloqueio::text, '') = '';

	SELECT COUNT(*),
		coalesce(MAX(qt_agenda_bloq),0)
	INTO STRICT	qt_bloqueio_w,
		qt_agenda_bloq_w
	FROM	agenda_bloqueio
	WHERE	cd_agenda	= cd_agenda_p
	AND	dt_inicial	<= (hr_atual_w + nr_minuto_Intervalo_w/1440)
	AND	TRUNC(dt_final,'dd') >= TRUNC(hr_atual_w,'dd')
	AND	coalesce(HR_INICIO_BLOQUEIO::text, '') = ''
	AND	coalesce(HR_final_BLOQUEIO::text, '') = ''
	AND	coalesce(ie_dia_semana::text, '') = ''
	AND	coalesce(cd_medico::text, '') = ''
	AND	coalesce(ie_classif_bloqueio::text, '') = '';



	BEGIN
	SELECT 	COUNT(*),
		coalesce(MAX(qt_agenda_bloq),0)
	INTO STRICT	qt_bloqueio_dia_w,
		qt_agenda_bloq_dia_w
	FROM	agenda_bloqueio
	WHERE	cd_agenda	= cd_agenda_p
	AND	dt_inicial	<= (hr_atual_w + nr_minuto_Intervalo_w/1440)
	AND	TRUNC(dt_final,'dd') >= TRUNC(hr_atual_w,'dd')
	AND	ie_dia_semana	= ie_dia_semana_w
	AND	coalesce(HR_INICIO_BLOQUEIO::text, '') = ''
	AND	coalesce(HR_FINAL_BLOQUEIO::text, '') = ''
	AND	coalesce(cd_medico::text, '') = ''
	AND	coalesce(ie_classif_bloqueio::text, '') = '';
	EXCEPTION
		WHEN OTHERS THEN
			qt_bloqueio_dia_w	 := 0;
	END;

	BEGIN
	SELECT 	COUNT(*),
		coalesce(MAX(qt_agenda_bloq),0)
	INTO STRICT	qt_bloqueio_dia_hora_w,
		qt_agenda_bloq_dia_hora_w
	FROM	agenda_bloqueio
	WHERE	cd_agenda	= cd_agenda_p
	AND 	TO_DATE(TO_CHAR(TRUNC(hr_atual_w, 'dd'), 'dd/mm/yyyy') || ' ' || TO_CHAR(HR_INICIO_BLOQUEIO, 'hh24:mi:ss'), 'dd/mm/yyyy
hh24:mi:ss') <=	(hr_atual_w + nr_minuto_Intervalo_w/1440)
	AND	TO_DATE(TO_CHAR(TRUNC(hr_atual_w, 'dd'), 'dd/mm/yyyy') || ' ' || TO_CHAR(HR_final_BLOQUEIO, 'hh24:mi:ss'), 'dd/mm/yyyy
hh24:mi:ss') > hr_atual_w
	AND	TRUNC(hr_atual_w, 'dd') BETWEEN TRUNC(dt_inicial, 'dd') AND TRUNC(dt_final, 'dd')
	AND	((ie_dia_semana	= ie_dia_semana_w) OR (ie_dia_semana	= 9) OR (coalesce(ie_dia_semana::text, '') = ''))
	AND	(HR_INICIO_BLOQUEIO IS NOT NULL AND HR_INICIO_BLOQUEIO::text <> '')
	AND	(HR_FINAL_BLOQUEIO IS NOT NULL AND HR_FINAL_BLOQUEIO::text <> '')
	AND	coalesce(cd_medico::text, '') = ''
	AND	coalesce(ie_classif_bloqueio::text, '') = '';
	EXCEPTION
		WHEN OTHERS THEN
			qt_bloqueio_dia_hora_w := 0;
	END;

/* final da NOVA rotina de bloqueio (Rafael em 25/09/2006 OS41280) */



/*r.aise_application_error(-20011,to_char(qt_bloqueio_w)||'-'||
				to_char(qt_bloqueio_hora_w)||'-'||
				to_char(qt_bloqueio_dia_w)||'-'||
				to_char(qt_bloqueio_dia_hora_w)||'-'||
				to_char(cd_agenda_p)||'-'||
				to_char(hr_atual_w,'dd/mm/yyyy hh24:mi:ss')||'-'||
				to_char(nr_minuto_intervalo_w));*/


	--R.aise_application_error(-20011,qt_agenda_bloq_dia_hora_w || ' - ' || qt_agenda_bloq_w || '-' '#@#@');
	qt_inicio_w		:= 0;

	IF	(((qt_bloqueio_w = 0) OR (qt_agenda_bloq_w > 0)) AND
		((qt_bloqueio_hora_w = 0) OR (qt_agenda_bloq_hora_w > 0)) AND
		((qt_bloqueio_dia_w = 0) OR (qt_agenda_bloq_dia_w > 0)) AND
		((qt_bloqueio_dia_hora_w = 0) OR (qt_agenda_bloq_dia_hora_w > 0))) OR (ie_gerar_hor_bloq_w = 'S') THEN
		BEGIN
		cd_turno_w		:= 0;

		ie_bloqueio_w	:= 'S';
	

		IF	(((qt_bloqueio_w = 0) OR (qt_agenda_bloq_w > 0)) AND
			((qt_bloqueio_hora_w = 0) OR (qt_agenda_bloq_hora_w > 0)) AND
			((qt_bloqueio_dia_w = 0) OR (qt_agenda_bloq_dia_w > 0)) AND
			((qt_bloqueio_dia_hora_w = 0) OR (qt_agenda_bloq_dia_hora_w > 0))) THEN

			ie_bloqueio_w	:= 'N';

		end if;

/*		IF 	((qt_bloqueio_w > 0) AND (qt_agenda_bloq_w = 0)) AND
			((qt_bloqueio_hora_w > 0) AND (qt_agenda_bloq_hora_w = 0)) AND
			((qt_bloqueio_dia_w > 0) AND (qt_agenda_bloq_dia_w = 0)) AND
			((qt_bloqueio_dia_hora_w > 0) AND (qt_agenda_bloq_dia_hora_w = 0)) THEN
			ie_bloqueio_w	:= 'S';
		END IF;*/
		IF ((TO_CHAR(hr_atual_w,'hh24'))::numeric  > somente_numero(HR_QUEBRA_TURNO_W)) OR
			(((TO_CHAR(hr_atual_w,'hh24'))::numeric  = somente_numero(HR_QUEBRA_TURNO_W)) AND ((TO_CHAR(hr_atual_w,'mi'))::numeric  >= somente_numero(qt_min_QUEBRA_TURNO_W))) THEN
			cd_turno_w	:= 1;
		END IF;

		SELECT	COUNT(*)
		INTO STRICT	qt_inicio_agenda_w
		FROM	ageint_consulta_horarios
		WHERE	cd_agenda	= cd_agenda_p
		AND	dt_agenda	= hr_atual_w
		AND	ie_status_agenda NOT IN ('L','C');

		qt_Total_turno_w	:=	qt_inicio_agenda_w;

		OPEN	c02;
		LOOP
		FETCH	c02 INTO
			cd_classificacao_w,
			qt_classificacao_w,
			cd_medico_w,
			cd_medico_solic_w,
			cd_procedimento_w,
			nr_seq_proc_interno_w,
			ie_origem_proced_w,
			cd_setor_entrega_w,
			cd_setor_coleta_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			BEGIN

			IF (cd_classificacao_w <> cd_classificacao_old_w) OR (coalesce(cd_medico_w,'X') <> coalesce(cd_medico_old_w,'X')) THEN
				qt_agenda_classif_w	:= 0;
			END IF;

			cd_classificacao_old_w	:= cd_classificacao_w;
			cd_medico_old_w		:= cd_medico_w;
			
			if (ie_considerar_original_w = 'S') then
			
				SELECT	COUNT(*)
				INTO STRICT	qt_inicio_w
				FROM	ageint_consulta_horarios
				WHERE	cd_agenda	= cd_agenda_p
				AND	dt_agenda	= hr_atual_w
				AND	(((ie_considera_w = 'S') AND (coalesce(ie_classif_agenda_origem,ie_classif_agenda) = cd_classificacao_w) AND
					 (((ds_observacao IS NOT NULL AND ds_observacao::text <> '') AND (ds_observacao <> obter_desc_expressao(347177))) OR (coalesce(ds_observacao::text, '') = ''))) OR
					((ie_considera_w = 'N') AND (ie_status_agenda	<> 'C') AND (coalesce(ie_classif_agenda_origem,ie_classif_agenda) = cd_classificacao_w) AND
					(((ds_observacao IS NOT NULL AND ds_observacao::text <> '') AND (ds_observacao <> obter_desc_expressao(347177))) OR (coalesce(ds_observacao::text, '') = ''))))
				AND	((cd_medico_exec	= cd_medico_w) OR (cd_medico_w = '0'));

				IF (ie_consiste_periodo_w = 'S') THEN
					SELECT	COUNT(*)
					INTO STRICT	qt_inicio_w
					FROM	ageint_consulta_horarios
					WHERE	cd_agenda	= cd_agenda_p
					AND	dt_agenda	= hr_atual_w
					AND	(((ie_considera_w = 'S') AND (coalesce(ie_classif_agenda_origem,ie_classif_agenda) = cd_classificacao_w) AND
						 (((ds_observacao IS NOT NULL AND ds_observacao::text <> '') AND (ds_observacao <> obter_desc_expressao(347177))) OR (coalesce(ds_observacao::text, '') = ''))) OR
						((ie_considera_w = 'N') AND (ie_status_agenda	<> 'C') AND (coalesce(ie_classif_agenda_origem,ie_classif_agenda) = cd_classificacao_w) AND
						(((ds_observacao IS NOT NULL AND ds_observacao::text <> '') AND (ds_observacao <> obter_desc_expressao(347177))) OR (coalesce(ds_observacao::text, '') = ''))))
					AND	((cd_medico_exec	= cd_medico_w) OR (cd_medico_w = '0'));
				END IF;
			
			else
				SELECT	COUNT(*)
				INTO STRICT	qt_inicio_w
				FROM	ageint_consulta_horarios
				WHERE	cd_agenda	= cd_agenda_p
				AND	dt_agenda	= hr_atual_w
				AND	(((ie_considera_w = 'S') AND (ie_classif_agenda = cd_classificacao_w) AND
					 (((ds_observacao IS NOT NULL AND ds_observacao::text <> '') AND (ds_observacao <> obter_desc_expressao(347177))) OR (coalesce(ds_observacao::text, '') = ''))) OR
					((ie_considera_w = 'N') AND (ie_status_agenda	<> 'C') AND (ie_classif_agenda = cd_classificacao_w) AND
					(((ds_observacao IS NOT NULL AND ds_observacao::text <> '') AND (ds_observacao <> obter_desc_expressao(347177))) OR (coalesce(ds_observacao::text, '') = ''))))
				AND	((cd_medico_exec	= cd_medico_w) OR (cd_medico_w = '0'));

				IF (ie_consiste_periodo_w = 'S') THEN
					SELECT	COUNT(*)
					INTO STRICT	qt_inicio_w
					FROM	ageint_consulta_horarios
					WHERE	cd_agenda	= cd_agenda_p
					AND	dt_agenda	= hr_atual_w
					AND	(((ie_considera_w = 'S') AND (ie_classif_agenda = cd_classificacao_w) AND
						 (((ds_observacao IS NOT NULL AND ds_observacao::text <> '') AND (ds_observacao <> obter_desc_expressao(347177))) OR (coalesce(ds_observacao::text, '') = ''))) OR
						((ie_considera_w = 'N') AND (ie_status_agenda	<> 'C') AND (ie_classif_agenda = cd_classificacao_w) AND
						(((ds_observacao IS NOT NULL AND ds_observacao::text <> '') AND (ds_observacao <> obter_desc_expressao(347177))) OR (coalesce(ds_observacao::text, '') = ''))))
					AND	((cd_medico_exec	= cd_medico_w) OR (cd_medico_w = '0'));
				END IF;
			
			end if;
			
			WHILE(qt_inicio_w < qt_classificacao_w) LOOP
				BEGIN

				qt_agenda_w		:= qt_agenda_w 		+ 1;
				qt_agenda_classif_w	:= qt_agenda_classif_w	+ 1;
				qt_inicio_w		:= qt_inicio_w 		+ 1;
				qt_Total_turno_w	:= qt_Total_turno_w + 1;

				/* Rafael em 26/09/2006 OS41332
				inclui os testes/tratamentos referentes ao bloqueio por classificacao */
				SELECT 	COUNT(*),
					coalesce(MAX(qt_agenda_bloq),0)
				INTO STRICT	qt_bloq_classificacao_w,
					qt_agenda_bloq_classif_w
				FROM	agenda_bloqueio
				WHERE	cd_agenda	= cd_agenda_p
				AND	dt_inicial	<= (hr_atual_w + nr_minuto_Intervalo_w/1440)
				AND	TRUNC(dt_final,'dd') >= TRUNC(hr_atual_w,'dd')
				AND	coalesce(HR_INICIO_BLOQUEIO::text, '') = ''
				AND	coalesce(HR_final_BLOQUEIO::text, '') = ''
				AND	coalesce(ie_dia_semana::text, '') = ''
				AND	coalesce(coalesce(ie_classif_bloqueio,cd_classificacao_w),'X')  = coalesce(cd_classificacao_w,'X')
				AND	coalesce(coalesce(cd_medico,cd_medico_w),'X') = coalesce(cd_medico_w,'X')
				AND 	((ie_classif_bloqueio IS NOT NULL AND ie_classif_bloqueio::text <> '') OR (cd_medico IS NOT NULL AND cd_medico::text <> ''));

				BEGIN
				SELECT 	COUNT(*),
					coalesce(MAX(qt_agenda_bloq),0)
				INTO STRICT	qt_bloq_classificacao_dia_w,
					qt_agenda_bloq_classif_dia_w
				FROM	agenda_bloqueio
				WHERE	cd_agenda	= cd_agenda_p
				AND	dt_inicial	<= (hr_atual_w + nr_minuto_Intervalo_w/1440)
				AND	TRUNC(dt_final,'dd') >= TRUNC(hr_atual_w,'dd')
				AND	((ie_dia_semana	= ie_dia_semana_w) OR (ie_dia_semana = 9))
				AND	coalesce(HR_INICIO_BLOQUEIO::text, '') = ''
				AND	coalesce(HR_FINAL_BLOQUEIO::text, '') = ''
				AND	coalesce(coalesce(ie_classif_bloqueio,cd_classificacao_w),'X')  = coalesce(cd_classificacao_w,'X')
				AND	coalesce(coalesce(cd_medico,cd_medico_w),'X') = coalesce(cd_medico_w,'X')
				AND 	((ie_classif_bloqueio IS NOT NULL AND ie_classif_bloqueio::text <> '') OR (cd_medico IS NOT NULL AND cd_medico::text <> ''));
				EXCEPTION
					WHEN OTHERS THEN
						qt_bloqueio_dia_w	 := 0;
				END;


				BEGIN
				SELECT COUNT(*),
					coalesce(MAX(qt_agenda_bloq),0)
				INTO STRICT	qt_bloq_classif_dia_hora_w,
					qt_agenda_bloq_classif_diahr_w
				FROM	agenda_bloqueio
				WHERE	cd_agenda	= cd_agenda_p
				AND 	TO_DATE(TO_CHAR(TRUNC(hr_atual_w, 'dd'), 'dd/mm/yyyy') || ' ' || TO_CHAR(HR_INICIO_BLOQUEIO, 'hh24:mi:ss'), 'dd/mm/yyyy hh24:mi:ss') <=	(hr_atual_w + nr_minuto_Intervalo_w/1440)
				AND	TO_DATE(TO_CHAR(TRUNC(hr_atual_w, 'dd'), 'dd/mm/yyyy') || ' ' || TO_CHAR(HR_final_BLOQUEIO, 'hh24:mi:ss'), 'dd/mm/yyyy hh24:mi:ss') > hr_atual_w
				AND	TRUNC(hr_atual_w, 'dd') BETWEEN TRUNC(dt_inicial, 'dd') AND TRUNC(dt_final, 'dd')
				AND	((ie_dia_semana	= ie_dia_semana_w) OR (ie_dia_semana	= 9) OR (coalesce(ie_dia_semana::text, '') = ''))
				AND	(HR_INICIO_BLOQUEIO IS NOT NULL AND HR_INICIO_BLOQUEIO::text <> '')
				AND	(HR_FINAL_BLOQUEIO IS NOT NULL AND HR_FINAL_BLOQUEIO::text <> '')
				AND	coalesce(coalesce(ie_classif_bloqueio,cd_classificacao_w),'X')  = coalesce(cd_classificacao_w,'X')
				AND	coalesce(coalesce(cd_medico,cd_medico_w),'X') = coalesce(cd_medico_w,'X')
				AND 	((ie_classif_bloqueio IS NOT NULL AND ie_classif_bloqueio::text <> '') OR (cd_medico IS NOT NULL AND cd_medico::text <> ''));
				EXCEPTION
					WHEN OTHERS THEN
						qt_bloq_classif_dia_hora_w := 0;
				END;

				IF	((qt_bloq_classificacao_w > 0 AND qt_agenda_bloq_classif_w = 0) OR (qt_agenda_bloq_classif_w > 0 AND qt_agenda_bloq_classif_w > qt_agenda_classif_w)) AND
					((qt_bloq_classificacao_dia_w > 0 AND qt_agenda_bloq_classif_dia_w = 0)  OR (qt_agenda_bloq_classif_dia_w > 0 AND qt_agenda_bloq_classif_dia_w > qt_agenda_classif_w)) AND
					((qt_bloq_classif_dia_hora_w > 0 AND qt_agenda_bloq_classif_diahr_w = 0)  OR (qt_agenda_bloq_classif_diahr_w > 0 AND qt_agenda_bloq_classif_diahr_w > qt_agenda_classif_w)) THEN
					ie_bloqueio_w	:= 'S';
				END IF;

				IF	((qt_Total_turno_w <= qt_total_turno_lido_w) OR (qt_total_turno_lido_w = 0)) AND
					((qt_bloq_classificacao_w = 0) OR (qt_agenda_bloq_classif_w > 0 AND qt_agenda_bloq_classif_w < qt_agenda_classif_w)) AND
					((qt_bloq_classificacao_dia_w = 0)  OR (qt_agenda_bloq_classif_dia_w > 0 AND qt_agenda_bloq_classif_dia_w < qt_agenda_classif_w)) AND
					((qt_bloq_classif_dia_hora_w = 0)  OR (qt_agenda_bloq_classif_diahr_w > 0 AND qt_agenda_bloq_classif_diahr_w < qt_agenda_classif_w)) AND
					((qt_agenda_bloq_hora_w = 0) OR (qt_agenda_bloq_hora_w < qt_agenda_w)) AND
					((qt_agenda_bloq_w = 0) OR (qt_agenda_bloq_w < qt_agenda_w)) AND
					((qt_agenda_bloq_dia_w = 0) OR (qt_agenda_bloq_dia_w < qt_agenda_w)) AND
					((qt_agenda_bloq_dia_hora_w = 0) OR (qt_agenda_bloq_dia_hora_w < qt_agenda_w)) THEN

													
					insert into ageint_consulta_horarios(dt_Atualizacao,
							nm_usuario,
							cd_agenda,
							cd_medico_exec,
							cd_paciente,
							nm_paciente,
							ie_status_agenda,
							nr_minuto_duracao,
							dt_Agenda,
							ie_classif_agenda_origem,
							ie_classif_agenda,
							ds_observacao,
							cd_turno,
							ie_encaixe)
						values (clock_timestamp(),
							nm_usuario_p,
							cd_Agenda_p,
							CASE WHEN cd_medico_w='0' THEN  NULL  ELSE cd_medico_w END ,
							null,
							null,
							CASE WHEN ie_bloqueio_w='S' THEN  'B'  ELSE 'L' END ,
							nr_minuto_Intervalo_w,
							hr_atual_w,
							cd_classificacao_w,
							cd_classificacao_w,
							ds_observacao_w,
							cd_turno_w,
							'N');

				ELSIF (ie_gerar_hor_bloq_w = 'S') THEN
					
					insert into ageint_consulta_horarios(dt_Atualizacao,
							nm_usuario,
							cd_agenda,
							cd_medico_exec,
							cd_paciente,
							nm_paciente,
							ie_status_agenda,
							nr_minuto_duracao,
							dt_Agenda,
							ie_classif_agenda_origem,
							ie_classif_agenda,
							ds_observacao,
							cd_turno,
							ie_encaixe)
						values (clock_timestamp(),
							nm_usuario_p,
							cd_Agenda_p,
							CASE WHEN cd_medico_w='0' THEN  NULL  ELSE cd_medico_w END ,
							null,
							null,
							'B',
							nr_minuto_Intervalo_w,
							hr_atual_w,
							cd_classificacao_w,
							cd_classificacao_w,
							ds_observacao_w,
							cd_turno_w,
							'N');
					
				END IF;

				END;
			END LOOP;

			END;
		END LOOP;
		CLOSE	c02;

		END;
	END IF;

	END;
END LOOP;
CLOSE C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ageint_gerar_consulta_ageserv (cd_estabelecimento_p bigint, cd_agenda_p bigint, dt_agenda_p timestamp, nm_usuario_p text) FROM PUBLIC;

