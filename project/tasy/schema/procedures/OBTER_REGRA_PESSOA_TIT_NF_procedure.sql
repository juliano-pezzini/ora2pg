-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE obter_regra_pessoa_tit_nf (ie_tipo_regra_p text, nr_interno_conta_p bigint, nr_seq_protocolo_p bigint, nr_seq_lote_prot_p bigint, ie_tipo_pessoa_p INOUT text, cd_pessoa_nf_tit_p INOUT text) AS $body$
DECLARE


ie_pessoa_geracao_w		regra_pessoa_tit_nf.ie_pessoa_geracao%type;
ie_tipo_convenio_w		convenio.ie_tipo_convenio%type;
cd_convenio_w			convenio.cd_convenio%type;
cd_estabelecimento_w		estabelecimento.cd_estabelecimento%type;
cd_nacionalidade_w		pessoa_fisica.cd_nacionalidade%type;
nr_atendimento_w		bigint;
qt_idade_w			bigint	:= null;
ie_brasileiro_w			varchar(1)	:= 'N';
ie_pagador_atend_w		varchar(1)	:= 'N';
cd_pessoa_responsavel_w		varchar(10)	:= null;
cd_pessoa_pagador_w		varchar(10)	:= null;
cd_pessoa_fisica_w		varchar(10)	:= null;
cd_cgc_conv_w			varchar(14)	:= null;
cd_pessoa_nf_tit_w		varchar(255)	:= null;
ie_tipo_pessoa_w		varchar(2)	:= null;


c01 CURSOR FOR
SELECT	ie_pessoa_geracao
from	regra_pessoa_tit_nf
where	cd_estabelecimento				= cd_estabelecimento_w
and	ie_situacao 					= 'A'
and	coalesce(ie_tipo_convenio,coalesce(ie_tipo_convenio_w,0))	= coalesce(ie_tipo_convenio_w,0)
and	coalesce(cd_convenio,coalesce(cd_convenio_w,0)) 		= coalesce(cd_convenio_w,0)
and (coalesce(qt_idade_w::text, '') = '' or qt_idade_w between coalesce(qt_idade_min,0) and coalesce(qt_idade_max,999))
and	((ie_brasileiro = 'S' and ie_brasileiro_w = 'S') or (ie_estrangeiro = 'S' and ie_brasileiro_w = 'N') or ((nr_seq_protocolo_p IS NOT NULL AND nr_seq_protocolo_p::text <> '') or (nr_seq_lote_prot_p IS NOT NULL AND nr_seq_lote_prot_p::text <> '')))
and (ie_resp_atend	= 'N' 	or (cd_pessoa_responsavel_w IS NOT NULL AND cd_pessoa_responsavel_w::text <> ''))
and (ie_pagador_atend = 'N'	or (cd_pessoa_pagador_w IS NOT NULL AND cd_pessoa_pagador_w::text <> ''))
and (ie_aplica_regra 	= ie_tipo_regra_p or ie_aplica_regra = 'A')
order by coalesce(qt_prioridade,0),
	coalesce(ie_tipo_convenio,0),
	coalesce(cd_convenio,0);


BEGIN

if (coalesce(nr_interno_conta_p,0) > 0) then

	begin
		select	a.cd_convenio_parametro,
			a.cd_estabelecimento,
			c.ie_tipo_convenio,
			b.cd_pessoa_responsavel,
			b.cd_pessoa_fisica,
			d.cd_nacionalidade,
			coalesce(e.CD_CNPJ_CONV_ESTAB,c.cd_cgc),
			b.nr_atendimento,
			(obter_idade(d.dt_nascimento,clock_timestamp(),'A'))::numeric
		into STRICT	cd_convenio_w,
			cd_estabelecimento_w,
			ie_tipo_convenio_w,
			cd_pessoa_responsavel_w,
			cd_pessoa_fisica_w,
			cd_nacionalidade_w,
			cd_cgc_conv_w,
			nr_atendimento_w,
			qt_idade_w
		from	conta_paciente a,
			atendimento_paciente b,
			convenio c,
			pessoa_fisica d,
			convenio_estabelecimento e
		where	a.nr_atendimento	= b.nr_atendimento
		and	c.cd_convenio		= a.cd_convenio_parametro
		and	b.cd_pessoa_fisica	= d.cd_pessoa_fisica
		and	e.cd_convenio		= c.cd_convenio
		and	e.cd_estabelecimento	= a.cd_estabelecimento
		and	a.nr_interno_conta	= nr_interno_conta_p  LIMIT 1;
	exception
	when others then
		cd_convenio_w		:= null;
		cd_estabelecimento_w	:= null;
		ie_tipo_convenio_w	:= null;
		cd_pessoa_responsavel_w	:= null;
		cd_pessoa_fisica_w	:= null;
		cd_cgc_conv_w		:= null;
		qt_idade_w		:= null;
	end;

	select	max(cd_pessoa_fisica)
	into STRICT	cd_pessoa_pagador_w
	from	atendimento_pagador
	where	nr_atendimento	= nr_atendimento_w;

	select	coalesce(max(ie_brasileiro),'N')
	into STRICT	ie_brasileiro_w
	from	nacionalidade
	where	cd_nacionalidade	= cd_nacionalidade_w;

elsif (coalesce(nr_seq_protocolo_p,0) > 0) then

	begin
		select	a.cd_convenio,
			a.cd_estabelecimento,
			coalesce(e.CD_CNPJ_CONV_ESTAB,b.cd_cgc),
			b.ie_tipo_convenio
		into STRICT	cd_convenio_w,
			cd_estabelecimento_w,
			cd_cgc_conv_w,
			ie_tipo_convenio_w
		from	protocolo_convenio a,
			convenio b,
			convenio_estabelecimento e
		where	a.cd_convenio		= b.cd_convenio
		and	a.nr_seq_protocolo	= nr_seq_protocolo_p
		and	e.cd_convenio		= a.cd_convenio
		and	e.cd_estabelecimento	= a.cd_estabelecimento  LIMIT 1;
	exception
	when others then
		cd_convenio_w		:= null;
		cd_estabelecimento_w	:= null;
		cd_cgc_conv_w		:= null;
	end;

	ie_brasileiro_w		:= null;
	cd_pessoa_responsavel_w	:= null;
	cd_pessoa_fisica_w	:= null;
	cd_pessoa_pagador_w	:= null;
	qt_idade_w		:= null;

elsif (coalesce(nr_seq_lote_prot_p,0) > 0) then

	begin
		select	a.cd_convenio,
			a.cd_estabelecimento,
			coalesce(e.CD_CNPJ_CONV_ESTAB,b.cd_cgc),
			b.ie_tipo_convenio
		into STRICT	cd_convenio_w,
			cd_estabelecimento_w,
			cd_cgc_conv_w,
			ie_tipo_convenio_w
		from	lote_protocolo a,
			convenio b,
			convenio_estabelecimento e
		where	a.cd_convenio		= b.cd_convenio
		and	a.nr_sequencia		= nr_seq_lote_prot_p
		and	e.cd_convenio		= a.cd_convenio
		and	e.cd_estabelecimento	= a.cd_estabelecimento  LIMIT 1;
	exception
	when others then
		cd_convenio_w		:= null;
		cd_estabelecimento_w	:= null;
		cd_cgc_conv_w		:= null;
	end;

	ie_brasileiro_w		:= null;
	cd_pessoa_responsavel_w	:= null;
	cd_pessoa_fisica_w	:= null;
	cd_pessoa_pagador_w	:= null;
	qt_idade_w		:= null;

end if;

open C01;
loop
fetch C01 into
	ie_pessoa_geracao_w;
EXIT WHEN NOT FOUND; /* apply on C01 */

	if (ie_pessoa_geracao_w = '1') then --Convênio
		cd_pessoa_nf_tit_w	:= cd_cgc_conv_w;
		ie_tipo_pessoa_w	:= 'PJ';

	elsif (ie_pessoa_geracao_w = '2') then --Paciente
		cd_pessoa_nf_tit_w	:= cd_pessoa_fisica_w;
		ie_tipo_pessoa_w	:= 'PF';

	elsif (ie_pessoa_geracao_w = '3') then --Pagador
		cd_pessoa_nf_tit_w	:= cd_pessoa_pagador_w;
		ie_tipo_pessoa_w	:= 'PF';

	elsif (ie_pessoa_geracao_w = '4') then --Responsável
		cd_pessoa_nf_tit_w	:= cd_pessoa_responsavel_w;
		ie_tipo_pessoa_w	:= 'PF';
	end if;

end loop;
close C01;

ie_tipo_pessoa_p	:= ie_tipo_pessoa_w;
cd_pessoa_nf_tit_p	:= cd_pessoa_nf_tit_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE obter_regra_pessoa_tit_nf (ie_tipo_regra_p text, nr_interno_conta_p bigint, nr_seq_protocolo_p bigint, nr_seq_lote_prot_p bigint, ie_tipo_pessoa_p INOUT text, cd_pessoa_nf_tit_p INOUT text) FROM PUBLIC;

