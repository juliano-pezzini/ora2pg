-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_w_pls_guias_gera_conta ( nr_seq_lote_p pls_apres_automatica_guia.nr_seq_lote%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) AS $body$
DECLARE


				
ds_sql_condicao_w		varchar(1000);
ds_sql_w				varchar(4000);
v_cur_w					pls_util_pck.t_cursor;
tb_nr_sequencia_w		pls_util_cta_pck.t_number_table;
tb_cd_guia_w			dbms_sql.varchar2_table;
tb_nr_seq_segurado_w		pls_util_cta_pck.t_number_table;
tb_nr_seq_prestador_w		pls_util_cta_pck.t_number_table;
tb_cd_medico_solicitante_w	pls_util_cta_pck.t_varchar2_table_20;
tb_ie_tipo_guia_w			pls_util_cta_pck.t_varchar2_table_5;
tb_ie_carater_internacao_w	pls_util_cta_pck.t_varchar2_table_5;
tb_ie_tipo_atend_tiss_w		pls_util_cta_pck.t_varchar2_table_5;
tb_ie_estagio_w				pls_util_cta_pck.t_varchar2_table_5;
tb_dt_solicitacao_w			pls_util_cta_pck.t_date_table;
tb_dt_execucao_w			pls_util_cta_pck.t_date_table;
tb_nr_seq_plano_w			pls_util_cta_pck.t_number_table;
tb_seq_guia_apres_auto_w	pls_util_cta_pck.t_number_table;
ie_tipo_guia_apres_auto_w	pls_util_cta_pck.t_varchar2_table_5;
dt_solic_apres_auto_w		pls_util_cta_pck.t_date_table;
dt_exec_apres_auto_w		pls_util_cta_pck.t_date_table;
ie_estagio_apres_auto_w		pls_util_cta_pck.t_varchar2_table_5;
cd_guia_apres_auto_w			pls_util_cta_pck.t_varchar2_table_20;
ie_carater_intern_apres_auto_w	pls_util_cta_pck.t_varchar2_table_5;
ie_tipo_atend_apres_auto_w		pls_util_cta_pck.t_varchar2_table_5;
nr_seq_segurado_apres_auto_w	pls_util_cta_pck.t_number_table;
nr_seq_prestador_apres_auto_w	pls_util_cta_pck.t_number_table;
cd_medico_solic_apres_auto_w	pls_util_cta_pck.t_varchar2_table_20;
insere_registro_w				boolean;
nr_indexador_w					integer;
ie_tipo_guia_param_w			pls_lote_apres_automatica.ie_tipo_guia%type;
ie_preco_w						pls_plano.ie_preco%type;
ie_tipo_repasse_w				pls_segurado.ie_tipo_repasse%type;
ie_tipo_repasse_lot_w			pls_lote_apres_automatica.ie_tipo_repasse%type;
ie_tipo_segurado_w				pls_segurado.ie_tipo_segurado%type;
nr_seq_prestador_ww				pls_lote_apres_automatica.nr_seq_prestador%type	:= 1;
dt_inicio_w						pls_lote_apres_automatica.dt_ref_inicial%type;
dt_fim_w						pls_lote_apres_automatica.dt_ref_final%type;
cd_formacao_preco_w				pls_lote_apres_automatica.ie_preco%type;
ie_usa_data_w					pls_lote_apres_automatica.ie_referencia_data%type;
ie_tem_diagnostico_w			pls_lote_apres_automatica.ie_situacao_cid%type;
tb_dt_autorizacao_w				pls_util_cta_pck.t_date_table;
dt_autorizacao_auto_w			pls_util_cta_pck.t_date_table;			
nr_seq_grupo_prestador_w		pls_lote_apres_automatica.nr_seq_grupo_prestador%type;
nr_seq_regra_apres_aut_w		pls_lote_apres_automatica.nr_seq_regra_apres_aut%type;
ie_formacao_preco_prod_w		pls_lote_apres_automatica.ie_formacao_preco_prod%type;

--Rotina que faz o insert na tabela de apresentacao automatica utilizando forall
procedure insert_apresentacao_automatica( tb_seq_guia_apres_auto_p		pls_util_cta_pck.t_number_table,
                                          ie_tipo_guia_apres_auto_p		pls_util_cta_pck.t_varchar2_table_5,
                                          dt_solic_apres_auto_p			pls_util_cta_pck.t_date_table,
                                          ie_estagio_apres_auto_p		pls_util_cta_pck.t_varchar2_table_5,
                                          cd_guia_apres_auto_p			pls_util_cta_pck.t_varchar2_table_20,
                                          ie_carater_intern_apres_auto_p	pls_util_cta_pck.t_varchar2_table_5,
                                          ie_tipo_atend_apres_auto_p		pls_util_cta_pck.t_varchar2_table_5,
                                          nr_seq_segurado_apres_auto_p		pls_util_cta_pck.t_number_table,
                                          nr_seq_prestador_apres_auto_p		pls_util_cta_pck.t_number_table,
                                          cd_medico_solic_apres_auto_p		pls_util_cta_pck.t_varchar2_table_20,										
										  dt_exec_apres_auto_p				pls_util_cta_pck.t_date_table,
										  dt_autorizacao_auto_p				pls_util_cta_pck.t_date_table) is
;
BEGIN
	--Se tiver registros, efetua o insert
	if (tb_seq_guia_apres_auto_p.count > 0) then
		
		forall i in tb_seq_guia_apres_auto_p.first..tb_seq_guia_apres_auto_p.last
				insert into pls_apres_automatica_guia(nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_seq_guia,
					nr_seq_lote,
					ie_tipo_guia,
					dt_solicitacao,
					dt_execucao,
					ie_estagio,             
					cd_guia,                
					ie_carater_internacao,
					ie_tipo_atend_tiss,     
					nr_seq_segurado,        
					nr_seq_prestador,       
					cd_medico_solicitante,
					dt_autorizacao)
				values (nextval('pls_apres_automatica_guia_seq'),
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					tb_seq_guia_apres_auto_p(i),
					nr_seq_lote_p,
					ie_tipo_guia_apres_auto_p(i),
					dt_solic_apres_auto_p(i),
					dt_exec_apres_auto_p(i),
					ie_estagio_apres_auto_p(i),
					cd_guia_apres_auto_p(i),
					ie_carater_intern_apres_auto_p(i),
					ie_tipo_atend_apres_auto_p(i),
					nr_seq_segurado_apres_auto_p(i),
					nr_seq_prestador_apres_auto_p(i),
					cd_medico_solic_apres_auto_p(i),
					dt_autorizacao_auto_p(i));
		commit;			
	
	end if;
	
end;

begin
nr_indexador_w := 0;

tb_seq_guia_apres_auto_w.delete;	
ie_tipo_guia_apres_auto_w.delete;	
dt_solic_apres_auto_w.delete;	
dt_exec_apres_auto_w.delete;	
ie_estagio_apres_auto_w.delete;		
cd_guia_apres_auto_w.delete;		
ie_carater_intern_apres_auto_w.delete;	
ie_tipo_atend_apres_auto_w.delete;	
nr_seq_segurado_apres_auto_w.delete;	
nr_seq_prestador_apres_auto_w.delete;	
cd_medico_solic_apres_auto_w.delete;	

select	trunc(max(dt_ref_inicial)),
	fim_dia(max(dt_ref_final)),
	max(ie_preco),
	coalesce(max(ie_referencia_data),'N'),      
	coalesce(max(ie_situacao_cid),'A'),         
	CASE WHEN max(ie_tipo_guia)='5' THEN  '1' WHEN max(ie_tipo_guia)='4' THEN  '2' WHEN max(ie_tipo_guia)='3' THEN  '3' WHEN coalesce(max(ie_tipo_guia)::text, '') = '' THEN  '12' END ,
	max(nr_seq_prestador),
	max(ie_tipo_repasse),
	max(nr_seq_grupo_prestador),
	max(nr_seq_regra_apres_aut),
	coalesce(max(ie_formacao_preco_prod), 'N')
into STRICT	dt_inicio_w,	
	dt_fim_w,
	cd_formacao_preco_w,
	ie_usa_data_w,
	ie_tem_diagnostico_w,
	ie_tipo_guia_param_w,
	nr_seq_prestador_ww,
	ie_tipo_repasse_lot_w,
	nr_seq_grupo_prestador_w,
	nr_seq_regra_apres_aut_w,
	ie_formacao_preco_prod_w
from	pls_lote_apres_automatica
where	nr_sequencia 	= nr_seq_lote_p;

delete	FROM pls_apres_automatica_guia
where	nr_seq_lote	= nr_seq_lote_p;

if (ie_tipo_guia_param_w <> '12') then
	
	--Monta as restricoes, isso faz com que somente as restricoes necessarias existam no sql dinamico
	if (ie_usa_data_w = 'S') then
		ds_sql_condicao_w := ds_sql_condicao_w	|| 'and (a.dt_solicitacao between trunc(:dt_inicio) and fim_dia(:dt_fim)) ';
		
	elsif (ie_usa_data_w = 'E') then
		ds_sql_condicao_w := ds_sql_condicao_w	|| 	'	and exists (	select 1						' || pls_tipos_ocor_pck.enter_w ||
								'			from	pls_execucao_requisicao	b,			' || pls_tipos_ocor_pck.enter_w ||
								'				pls_execucao_req_item	c			' || pls_tipos_ocor_pck.enter_w ||
								'			where	c.nr_seq_execucao = b.nr_sequencia			' || pls_tipos_ocor_pck.enter_w ||
								'			and	c.nr_seq_guia = a.nr_sequencia			' || pls_tipos_ocor_pck.enter_w ||
								'			and	b.dt_execucao between :dt_inicio and :dt_fim) 	';
	elsif (ie_usa_data_w = 'A') then
		ds_sql_condicao_w := ds_sql_condicao_w	|| 'and (a.dt_autorizacao between trunc(:dt_inicio) and fim_dia(:dt_fim)) ';
	else
		ds_sql_condicao_w := ds_sql_condicao_w	||' and  (:dt_inicio < :dt_fim)';
	end if;	
	
	if (nr_seq_prestador_ww IS NOT NULL AND nr_seq_prestador_ww::text <> '') then
		ds_sql_condicao_w := ds_sql_condicao_w	||'and (a.nr_seq_prestador = :nr_seq_prestador)';
	else
		ds_sql_condicao_w := ds_sql_condicao_w	||'and (:nr_seq_prestador is null)';
	end if;
	
	if (ie_tem_diagnostico_w = 'P') then
		ds_sql_condicao_w := ds_sql_condicao_w 	||'	and 	(exists	(select	1 '||pls_tipos_ocor_pck.enter_w
						||'				from	pls_diagnostico	x '||pls_tipos_ocor_pck.enter_w
						||'				where	a.nr_sequencia		= x.nr_seq_guia '||pls_tipos_ocor_pck.enter_w
						||'				and	x.cd_doenca		is not null )) ';
	
	elsif (ie_tem_diagnostico_w = 'U') then	
		
		ds_sql_condicao_w := ds_sql_condicao_w 	||'	and	((select	count(1) '||pls_tipos_ocor_pck.enter_w
							||'				from	pls_diagnostico	x '||pls_tipos_ocor_pck.enter_w
							||'				where	a.nr_sequencia		= x.nr_seq_guia'||pls_tipos_ocor_pck.enter_w
							||'				and	x.cd_doenca		is not null) = 0)';		
	end if;
	
	if (nr_seq_grupo_prestador_w IS NOT NULL AND nr_seq_grupo_prestador_w::text <> '') then
		ds_sql_condicao_w := ds_sql_condicao_w 	||'	and	exists	(	select	1 '||pls_tipos_ocor_pck.enter_w
							||'				from	pls_preco_prestador x '||pls_tipos_ocor_pck.enter_w
							||'				where	x.nr_seq_grupo	= :nr_seq_grupo_prestador'||pls_tipos_ocor_pck.enter_w
							||'				and	x.nr_seq_prestador	= a.nr_seq_prestador) '||pls_tipos_ocor_pck.enter_w;
	else
		ds_sql_condicao_w := ds_sql_condicao_w	||'and (:nr_seq_grupo_prestador is null)';
	end if;
	
	if (nr_seq_regra_apres_aut_w IS NOT NULL AND nr_seq_regra_apres_aut_w::text <> '') then
		ds_sql_condicao_w := ds_sql_condicao_w 	||'	and	a.nr_seq_pgto_aut = :nr_seq_regra_apres_aut ';
	else
		ds_sql_condicao_w := ds_sql_condicao_w	||'and (:nr_seq_regra_apres_aut is null)';
	end if;
	
	ds_sql_w := ds_sql_w 	|| 'select 	nr_sequencia, '|| pls_tipos_ocor_pck.enter_w
				||'		a.cd_guia, ' || pls_tipos_ocor_pck.enter_w 
				||'		a.nr_seq_segurado, '|| pls_tipos_ocor_pck.enter_w 
				||'		nr_seq_prestador, '|| pls_tipos_ocor_pck.enter_w 
				||'		cd_medico_solicitante, '|| pls_tipos_ocor_pck.enter_w 
				||'		ie_tipo_guia, '|| pls_tipos_ocor_pck.enter_w 
				||'		ie_carater_internacao, '|| pls_tipos_ocor_pck.enter_w 
				||'		ie_tipo_atend_tiss, '|| pls_tipos_ocor_pck.enter_w
				||'		ie_estagio, '|| pls_tipos_ocor_pck.enter_w
				||'		nr_seq_plano, '|| pls_tipos_ocor_pck.enter_w
				||'		dt_solicitacao, '|| pls_tipos_ocor_pck.enter_w
				||'		dt_execucao,'|| pls_tipos_ocor_pck.enter_w
				||'		dt_autorizacao'|| pls_tipos_ocor_pck.enter_w
				||'from		(select	''S'' ie_inserir,'|| pls_tipos_ocor_pck.enter_w
				||'			a.nr_sequencia, '||pls_tipos_ocor_pck.enter_w
				||'			a.cd_guia,'|| pls_tipos_ocor_pck.enter_w
				||'			a.nr_seq_segurado, '||pls_tipos_ocor_pck.enter_w
				||'			a.nr_seq_prestador, '||pls_tipos_ocor_pck.enter_w
				||'			a.cd_medico_solicitante,'||pls_tipos_ocor_pck.enter_w
				||'			a.ie_tipo_guia, '||pls_tipos_ocor_pck.enter_w
				||'			a.ie_carater_internacao, '||pls_tipos_ocor_pck.enter_w
				||'			a.ie_tipo_atend_tiss,'||pls_tipos_ocor_pck.enter_w
				||'			a.ie_estagio,' ||pls_tipos_ocor_pck.enter_w
				||'			a.dt_solicitacao,' ||pls_tipos_ocor_pck.enter_w
				||'			a.nr_seq_plano,'||pls_tipos_ocor_pck.enter_w
				||'			(select	max(b.dt_execucao)'||pls_tipos_ocor_pck.enter_w
				||'			from pls_execucao_requisicao b,'||pls_tipos_ocor_pck.enter_w
				||'			     pls_execucao_req_item c '||pls_tipos_ocor_pck.enter_w
				||'			where c.nr_seq_execucao = b.nr_sequencia '||pls_tipos_ocor_pck.enter_w
				||'			and   c.nr_seq_guia = a.nr_sequencia) dt_execucao, '||pls_tipos_ocor_pck.enter_w
				||'			(select count(1) from pls_conta conta where conta.nr_seq_guia	'||pls_tipos_ocor_pck.enter_w
				||'				= a.nr_sequencia and ie_status <> ''C'') qt_conta, '||pls_tipos_ocor_pck.enter_w
				||'			(select count(1) from pls_apres_automatica_guia g where g.nr_seq_guia	'||pls_tipos_ocor_pck.enter_w
				||'				= a.nr_sequencia and not exists (select 1 from pls_conta c where c.nr_seq_guia = g.nr_seq_guia and c.ie_status = ''C'')) qt_guia, '||pls_tipos_ocor_pck.enter_w
				||'			a.dt_autorizacao dt_autorizacao '||pls_tipos_ocor_pck.enter_w
				||'			from	pls_guia_plano	a'||pls_tipos_ocor_pck.enter_w
				||'			where	a.ie_status = ''1'' '||pls_tipos_ocor_pck.enter_w
				||'			and	a.ie_pagamento_automatico	= ''PA'' '||pls_tipos_ocor_pck.enter_w
				||' '||ds_sql_condicao_w||pls_tipos_ocor_pck.enter_w
				||'			and	a.cd_estabelecimento		= :cd_estabelecimento'||pls_tipos_ocor_pck.enter_w
				||'			and   	ie_tipo_guia = :ie_tipo_guia_param ) a '||pls_tipos_ocor_pck.enter_w
				||'where	a.qt_conta = 0 '||pls_tipos_ocor_pck.enter_w
				||'and 		a.qt_guia  = 0 ';
	
	begin
		
		--Executa sql dinamico
		open v_cur_w for EXECUTE ds_sql_w using dt_inicio_w, dt_fim_w, nr_seq_prestador_ww, nr_seq_grupo_prestador_w,
						nr_seq_regra_apres_aut_w, cd_estabelecimento_p, ie_tipo_guia_param_w;		
		
		loop
							
			tb_nr_sequencia_w.delete; 			
			tb_cd_guia_w.delete;			
			tb_nr_seq_segurado_w.delete;		
			tb_nr_seq_prestador_w.delete;		
			tb_cd_medico_solicitante_w.delete;	
			tb_ie_tipo_guia_w.delete;
			tb_ie_carater_internacao_w.delete;	
			tb_ie_tipo_atend_tiss_w.delete;		
			tb_ie_estagio_w.delete;			
			tb_nr_seq_plano_w.delete;
			tb_dt_solicitacao_w.delete;
			tb_dt_execucao_w.delete;
			tb_dt_autorizacao_w.delete;
			
			--Popula variaveis tabela com os registros oriundos do sql dinamico.
			fetch v_cur_w bulk collect
			into 	tb_nr_sequencia_w, tb_cd_guia_w, tb_nr_seq_segurado_w,
				tb_nr_seq_prestador_w, tb_cd_medico_solicitante_w, tb_ie_tipo_guia_w,
				tb_ie_carater_internacao_w, tb_ie_tipo_atend_tiss_w, tb_ie_estagio_w, 		
				tb_nr_seq_plano_w, tb_dt_solicitacao_w, tb_dt_execucao_w,
				tb_dt_autorizacao_w				
			
			limit pls_util_cta_pck.qt_registro_transacao_w;
											
				exit when tb_nr_sequencia_w.count = 0;	
				--Percorre as estruturas populadas pelo bulk collect.
				for i in tb_nr_sequencia_w.first .. tb_nr_sequencia_w.last loop
				
					insere_registro_w := true;
								
					select	max(ie_tipo_segurado),	
						max(ie_tipo_repasse)
					into STRICT	ie_tipo_segurado_w,
						ie_tipo_repasse_w
					from	pls_segurado
					where	nr_sequencia	= tb_nr_seq_segurado_w(i);
					
					--Se a responsabilidade nao for assumida, significa que o beneficiario e da propria operadora, entao verifica o tipo de repasse que o beneficiario foi transferido 
					if	((ie_tipo_segurado_w) is null or (not(ie_tipo_segurado_w in ('I', 'C', 'T', 'H')))) then --Se responsabilidade assumida, verifica o tipo de repasse do beneficiario 
						
						select	max(ie_tipo_repasse)
						into STRICT	ie_tipo_repasse_w
						from	pls_segurado_repasse
						where	nr_seq_segurado	= tb_nr_seq_segurado_w(i)
						and	clock_timestamp()	between	dt_repasse and fim_dia(dt_fim_repasse)
						and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '');
						
					end if;
					
					select	max(ie_preco)
					into STRICT	ie_preco_w
					from	pls_plano
					where	nr_sequencia	= tb_nr_seq_plano_w(i);
					
					-- Substituir a formacao de preco pelo tipo de repasse 
					if	((ie_tipo_repasse_w IS NOT NULL AND ie_tipo_repasse_w::text <> '') and (cd_formacao_preco_w IS NOT NULL AND cd_formacao_preco_w::text <> '') and (ie_formacao_preco_prod_w = 'N')) then
						
						if	((ie_tipo_repasse_w = 'C') and (cd_formacao_preco_w not in ('2', '3'))) then
							
							insere_registro_w := false;
							
						elsif ( ie_tipo_repasse_w = 'P') and ( cd_formacao_preco_w <> '1') then
							
							insere_registro_w := false;
							
						end if;
					else
						if  	(cd_formacao_preco_w IS NOT NULL AND cd_formacao_preco_w::text <> '' AND  cd_formacao_preco_w <> ie_preco_w) then
							insere_registro_w := false;
						end if;
					end if;
					
					if (ie_tipo_repasse_lot_w <> ie_tipo_repasse_w)  then
						insere_registro_w := false;
					end if;
					
					if (insere_registro_w) then
						
						--Popula as variaveis tabela que serao utilizadas posteriormente no insert na tabela pls_apres_automatica_guia
						tb_seq_guia_apres_auto_w(nr_indexador_w) 	:= tb_nr_sequencia_w(i);	
						ie_tipo_guia_apres_auto_w(nr_indexador_w)	:= tb_ie_tipo_guia_w(i);	
						dt_solic_apres_auto_w(nr_indexador_w)		:= tb_dt_solicitacao_w(i);
						dt_exec_apres_auto_w(nr_indexador_w)		:= tb_dt_execucao_w(i);
						dt_autorizacao_auto_w(nr_indexador_w)		:= tb_dt_autorizacao_w(i);
						ie_estagio_apres_auto_w(nr_indexador_w) 	:= tb_ie_estagio_w(i);		
						cd_guia_apres_auto_w(nr_indexador_w) 		:= tb_cd_guia_w(i);  		
						ie_carater_intern_apres_auto_w(nr_indexador_w) 	:= tb_ie_carater_internacao_w(i);	
						ie_tipo_atend_apres_auto_w(nr_indexador_w) 	:= tb_ie_tipo_atend_tiss_w(i);
						nr_seq_segurado_apres_auto_w(nr_indexador_w) 	:= tb_nr_seq_segurado_w(i);	
						nr_seq_prestador_apres_auto_w(nr_indexador_w) 	:= tb_nr_seq_prestador_w(i);	
						cd_medico_solic_apres_auto_w(nr_indexador_w) 	:= tb_cd_medico_solicitante_w(i);

						nr_indexador_w := nr_indexador_w + 1;						
					
					end if;
					
					--Se atingir o numero de registros pre-definidos nas variaveis tabela
					if (nr_indexador_w >= pls_util_cta_pck.qt_registro_transacao_w) then
						
						insert_apresentacao_automatica( tb_seq_guia_apres_auto_w, ie_tipo_guia_apres_auto_w, dt_solic_apres_auto_w,
										ie_estagio_apres_auto_w, cd_guia_apres_auto_w, ie_carater_intern_apres_auto_w,
										ie_tipo_atend_apres_auto_w, nr_seq_segurado_apres_auto_w, nr_seq_prestador_apres_auto_w,
										cd_medico_solic_apres_auto_w, dt_exec_apres_auto_w, dt_autorizacao_auto_w);
										
						nr_indexador_w := 0;
						tb_seq_guia_apres_auto_w.delete;	
						ie_tipo_guia_apres_auto_w.delete;	
						dt_solic_apres_auto_w.delete;
						dt_exec_apres_auto_w.delete;						
						ie_estagio_apres_auto_w.delete;		
						cd_guia_apres_auto_w.delete;		
						ie_carater_intern_apres_auto_w.delete;	
						ie_tipo_atend_apres_auto_w.delete;	
						nr_seq_segurado_apres_auto_w.delete;	
						nr_seq_prestador_apres_auto_w.delete;	
						cd_medico_solic_apres_auto_w.delete;
						dt_autorizacao_auto_w.delete;
						
					end if;					
				end loop;				
		end loop;
		--Caso existam registros nas variaveis tabela, entao os envia para fazer insert.
		insert_apresentacao_automatica( tb_seq_guia_apres_auto_w, ie_tipo_guia_apres_auto_w, dt_solic_apres_auto_w,
						ie_estagio_apres_auto_w, cd_guia_apres_auto_w, ie_carater_intern_apres_auto_w,
						ie_tipo_atend_apres_auto_w, nr_seq_segurado_apres_auto_w, nr_seq_prestador_apres_auto_w,
						cd_medico_solic_apres_auto_w, dt_exec_apres_auto_w, dt_autorizacao_auto_w);
		
		close v_cur_w;
	exception			
		when others then
			--Fecha cursor
			close v_cur_w;
			
			update	pls_lote_apres_automatica
			set	ie_status = '3'
			where	nr_sequencia = nr_seq_lote_p;
			commit;
	end;
end if;

update	pls_lote_apres_automatica
set	ie_status = CASE WHEN ie_status='2' THEN '1'  ELSE ie_status END
where	nr_sequencia = nr_seq_lote_p;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_w_pls_guias_gera_conta ( nr_seq_lote_p pls_apres_automatica_guia.nr_seq_lote%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) FROM PUBLIC;

