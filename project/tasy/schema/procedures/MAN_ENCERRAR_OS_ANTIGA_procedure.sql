-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE man_encerrar_os_antiga ( qt_dia_p bigint, nr_seq_solucao_p bigint) AS $body$
DECLARE


ds_email_solicitante_w		varchar(255);
ds_comunicado_w			text;
ds_dano_breve_w			varchar(80);
ds_email_w			varchar(4000);
ds_titulo_w			varchar(255);
dt_historico_w			timestamp;
ie_envio_comunicacao_w		varchar(1);
nm_usuario_destino_w		varchar(255);
nm_usuario_w			varchar(15);
nm_user_w			varchar(30);
nr_seq_equip_w			bigint;
nr_seq_hist_w			bigint;
nr_seq_localizacao_w		bigint;
nr_seq_origem_w			bigint;
nr_sequencia_w			bigint;
qt_dia_aviso_w			integer;
qt_dia_inatividade_w		bigint;
ie_classificacao_w			varchar(15);
qt_doc_erro_w			bigint;
qt_classif_desenv_w		bigint;
ds_historico_w                  		varchar(32000) := '';
ds_pessoa_solicitante_w         	varchar(60);
nr_seq_rtf_string_w             		bigint;
nr_sequencia_p                  		bigint := 0;
qt_existe_w			bigint := 0;
ie_duvida_defeito_cli_w		varchar(1):= 'N';
qt_orcamento_w			bigint;
nr_seq_idioma_solic_w			bigint;-- idioma do cliente/solicitante da OS
nr_seq_idioma_w			bigint := 5;--Registros internos, Fixo Ingles
ds_macro_w			varchar(255);

/* ie_comunicacao
'N' - nao envia
'S' - solicitante
'R' - responsavel setor
'E' - executor
'T' - todos
*/
c00 CURSOR FOR
SELECT	nr_sequencia
from	man_ordem_servico a
where (a.dt_ordem_servico < clock_timestamp() - interval '30 days')
and	a.ie_status_ordem <> '3'
and	exists (
	SELECT 1
	from	man_estagio_processo b
	where	a.nr_seq_estagio	= b.nr_sequencia
	and	b.ie_aguarda_cliente	= 'S')
and	not exists (	select	1
			from	man_ordem_serv_tecnico c
			where	c.nr_seq_ordem_serv = a.nr_sequencia
			and	c.dt_historico > clock_timestamp() - interval '60 days')
and	ie_grau_satisfacao in ('P','R')
and (
		a.ie_tipo_ordem not in ('8', '9') or  -- Acao preventiva - interna, Acao corretiva - interna
		coalesce(a.ie_tipo_ordem::text, '') = ''
	)
and not exists (select 1 from man_estagio_processo where 'S' = ie_testes and nr_sequencia in (select nr_seq_estagio from man_ordem_serv_estagio where nr_seq_ordem = a.nr_sequencia ));


c01 CURSOR FOR
SELECT	nr_sequencia,
	nr_seq_origem,
	nr_seq_equipamento,
	nr_seq_localizacao,
	ie_classificacao,
	substr(obter_nome_pf(a.cd_pessoa_solicitante),1,60)
from	man_ordem_servico a
where (a.dt_ordem_servico < clock_timestamp() - interval '30 days')
and	a.ie_status_ordem <> '3'
and	exists (
	SELECT 1
	from	man_estagio_processo b
	where	a.nr_seq_estagio	= b.nr_sequencia
	and	b.ie_aguarda_cliente	= 'S')
and	not exists (	select	1
			from	man_ordem_serv_tecnico c
			where	c.nr_seq_ordem_serv = a.nr_sequencia
			and	c.dt_historico > clock_timestamp() - interval '30 days')
and	(((ie_grau_satisfacao not in ('P','R')) or (coalesce(ie_grau_satisfacao::text, '') = ''))
or (ie_grau_satisfacao in ('P','R') and (ds_analise_insatisfacao IS NOT NULL AND ds_analise_insatisfacao::text <> '')))
and (
		a.ie_tipo_ordem not in ('8', '9') or  -- Acao preventiva - interna, Acao corretiva - interna
		coalesce(a.ie_tipo_ordem::text, '') = ''
	)
and not exists (select 1 from man_estagio_processo where 'S' = ie_testes and nr_sequencia in (select nr_seq_estagio from man_ordem_serv_estagio where nr_seq_ordem = a.nr_sequencia ));-- Nao pode encerrar OS que tenham algum estagio de Testes(OS 1121547)
c02 CURSOR FOR
SELECT	distinct(nm_usuario)
from (
	SELECT	distinct
		nm_usuario_exec nm_usuario
	from	man_ordem_servico_exec
	where	nr_seq_ordem		= nr_sequencia_w
	and	ie_envio_comunicacao_w	in ('E','T')
	
union

	select	min(b.nm_usuario) nm_usuario 					
	from	usuario b,
		man_ordem_servico a
	where	a.nr_sequencia		= nr_sequencia_w
	and	b.cd_pessoa_fisica	= a.cd_pessoa_solicitante
	and	ie_envio_comunicacao_w	in ('S','T')
	
union

	select	substr(obter_usuario_pessoa(a.cd_pessoa_resp),1,60) nm_usuario
	from	setor_atendimento a,
		man_ordem_servico_exec c
	where	a.cd_setor_atendimento	= obter_setor_usuario(c.nm_usuario_exec)
	and 	c.nr_seq_ordem		= nr_sequencia_w
	and	(a.cd_pessoa_resp IS NOT NULL AND a.cd_pessoa_resp::text <> '')
	and	ie_envio_comunicacao_w	in ('R','T')
	) alias9
where (nm_usuario IS NOT NULL AND nm_usuario::text <> '');


BEGIN
CALL wheb_usuario_pck.SET_IE_EXECUTAR_TRIGGER('N');


open c00;
loop
fetch c00 into	
	nr_sequencia_w;
EXIT WHEN NOT FOUND; /* apply on c00 */
	
	begin

	update	man_ordem_servico
	set	nr_seq_estagio	= 511
	where	nr_sequencia	= nr_sequencia_w;

	exception
	when others then
		nr_sequencia_w	:= 0;
	end;

end loop;
close c00;

commit;

open c01;
loop
fetch c01 into	
	nr_sequencia_w,
	nr_seq_origem_w,
	nr_seq_equip_w,
	nr_seq_localizacao_w,
	ie_classificacao_w,
	ds_pessoa_solicitante_w;
EXIT WHEN NOT FOUND; /* apply on c01 */

	/* Pega o idioma  do cliente de acordo com a lozaliacao da  OS corrente */

	begin
		nr_seq_idioma_solic_w	:= man_obter_idioma_os_local(nr_sequencia_w);
	exception
	when others then
		nr_seq_idioma_solic_w	:= null;
	end;
	
	nm_usuario_destino_w	:= '';
	/*data do ultimo historico*/

	select	coalesce(max(dt_historico), clock_timestamp() - interval '2000 days'),
		max(nr_sequencia)
	into STRICT	dt_historico_w,
		nr_sequencia_p
	from	man_ordem_serv_tecnico
	where	nr_seq_ordem_serv	= nr_sequencia_w;

	/* Dias de aviso 
	select	nvl(max(qt_aviso),0)
	into	qt_dia_aviso_w
	from	man_localizacao
	where	nr_sequencia = nr_seq_localizacao_w;
*/


	/*Dias de inatividade em relacao a data atual*/

	select	abs(obter_dias_entre_datas(dt_historico_w, clock_timestamp()))
	into STRICT	qt_dia_inatividade_w
	;
	
	select	username
	into STRICT	nm_user_w
	from	user_users;
	
	-- Quando For Base CORP, usa idioma Ingles para notificacoes internas, Quando for outra base Sempre utiliza o idioma do solicitante da OS
	if (nm_user_w <> 'CORP') then
		nr_seq_idioma_w :=  nr_seq_idioma_solic_w;	
	end if;
	
	if (nm_user_w = 'CORP') and (qt_dia_inatividade_w in (30,45,57)) then
		/*Obter dano e o e-mail do solicitante da OS */
	
		select	substr(max(ds_dano_breve),1,80),
			max(obter_compl_pf(cd_pessoa_solicitante,1,'M'))
		into STRICT	ds_dano_breve_w,
			ds_email_solicitante_w
		from	man_ordem_servico
		where	nr_sequencia = nr_sequencia_w;

		if (ds_email_solicitante_w IS NOT NULL AND ds_email_solicitante_w::text <> '') then
			/*Monta cabecalho e mensagem do email*/
		
			ds_macro_w	:= 'NR_SEQ_ORDEM_SERV=' || nr_sequencia_w;
			ds_titulo_w	:= substr(obter_desc_exp_idioma(777476, nr_seq_idioma_solic_w ), 1 ,255);			
			
			ds_macro_w	:= 'NR_SEQ_ORDEM_SERV=' || nr_sequencia_w
					|| ';QT_DIAS=' || qt_dia_p - qt_dia_inatividade_w
					|| ';QT_DIAS_INATIV=' || qt_dia_inatividade_w
					|| ';DS_DANO_BREVE=' || ds_dano_breve_w
					|| ';NR_SEQ_ORIGEM=' || nr_seq_origem_w;
			ds_email_w := substr(obter_desc_exp_idioma(779152, nr_seq_idioma_solic_w, ds_macro_w), 1, 4000);
												
			/* Enviar o e-mail para o solicitante*/

			begin
			CALL enviar_email(ds_titulo_w, ds_email_w, 'support.informatics@philips.com', ds_email_solicitante_w, 'Tasy', '');
			/* Grava o envio do e-mail na pasta Envios*/

			CALL man_atualizar_envio_ordem(nr_sequencia_w, ds_email_solicitante_w, substr(ds_email_w,1,255), 'E','Tasy');
			exception
			when others then
				null;
			end;
		end if;		
	end if;
	
	if (dt_historico_w < clock_timestamp() - qt_dia_p) then
		qt_doc_erro_w	:= 1;
		if (nm_user_w = 'CORP') and (ie_classificacao_w = 'E') then
			select	count(*)
			into STRICT	qt_doc_erro_w
			from	man_doc_erro
			where	nr_seq_ordem	= nr_sequencia_w;
		end if;
	
		select	nextval('man_ordem_serv_tecnico_seq')
		into STRICT	nr_seq_hist_w
		;

		select	count(*)
		into STRICT	qt_orcamento_w
		from	man_ordem_servico_orc
		where	nr_seq_ordem	= nr_sequencia_w
		and	coalesce(dt_reprovacao::text, '') = ''
		and	coalesce(dt_aprovacao::text, '') = '';

		if (qt_doc_erro_w = 0) then
			ds_comunicado_w	:= obter_desc_exp_idioma(779223, nr_seq_idioma_w);
		else
			ds_macro_w	:= 'QT_DIAS=' || qt_dia_inatividade_w;
			ds_comunicado_w	:= obter_desc_exp_idioma(777568, nr_seq_idioma_w, ds_macro_w);
		end if;
		
		insert into man_ordem_serv_tecnico(
			nr_sequencia,
			nr_seq_ordem_serv,
			dt_atualizacao,
			nm_usuario,
			dt_historico,
			ds_relat_tecnico,
			dt_liberacao,
			nm_usuario_lib,
			nr_seq_tipo)
		values (nr_seq_hist_w,
			nr_sequencia_w,
			clock_timestamp(),
			'Tasy',
			clock_timestamp(),
			ds_comunicado_w,
			clock_timestamp(),
			'Tasy',
			CASE WHEN nm_user_w='CORP' THEN 111  ELSE null END ); --'Cancelamento pela job'
		if (qt_doc_erro_w = 0) then
			begin
			select	count(*)
			into STRICT	qt_classif_desenv_w
			from 	man_estagio_processo a,
				man_ordem_serv_estagio b
			where	b.nr_seq_estagio		= a.nr_sequencia
			and	b.NR_SEQ_ORDEM			= nr_sequencia_w
			and	a.ie_desenv				= 'S';
			
			if (qt_classif_desenv_w > 0) then
				update	man_ordem_servico
				set	nm_usuario		= 'Tasy',
					nr_seq_estagio		= 1051,
					ie_status_ordem		= '2',
					dt_fim_real		 = NULL
				where	nr_sequencia		= nr_sequencia_w;
			else
				update	man_ordem_servico
				set	nm_usuario		= 'Tasy',
					nr_seq_estagio		= 31,
					ie_status_ordem		= '2',
					dt_fim_real		 = NULL
				where	nr_sequencia		= nr_sequencia_w;
			end if;
			end;
		else
			begin
			if (obter_se_base_corp = 'S') then
				update	man_ordem_servico
				set	nr_seq_tipo_solucao	= nr_seq_solucao_p,
					dt_fim_real		= clock_timestamp(),
					dt_atualizacao		= clock_timestamp(),
					nm_usuario		= 'Tasy',
					ie_status_ordem		= 3,
					nr_seq_estagio		= 9
				where	nr_sequencia		= nr_sequencia_w;
				
				if (qt_orcamento_w > 0) then
					update	man_ordem_servico_orc
					set	dt_reprovacao	= clock_timestamp(),
						nm_usuario	= 'Tasy',
						dt_atualizacao	= clock_timestamp(),
						DS_OBSERVACAO	= substr(DS_OBSERVACAO || ' ' || obter_desc_exp_idioma(779229, nr_seq_idioma_w), 1, 4000)
					where	nr_seq_ordem	= nr_sequencia_w
					and	coalesce(dt_reprovacao::text, '') = ''
					and	coalesce(dt_aprovacao::text, '') = '';	
				end if;

			else
				update	man_ordem_servico
				set	nr_seq_tipo_solucao	= nr_seq_solucao_p,
					dt_fim_real		= clock_timestamp(),
					dt_atualizacao		= clock_timestamp(),
					nm_usuario		= 'Tasy',
					ie_status_ordem		= 3
				where	nr_sequencia		= nr_sequencia_w;
			end if;

			

			select	coalesce(max(ie_envio_comunicacao),'N')
			into STRICT	ie_envio_comunicacao_w
			from	man_equipamento_v
			where	nr_sequencia = nr_seq_equip_w;
			/* enviar comunicacao interna de encerramento automatico*/

			if (ie_envio_comunicacao_w <> 'N') then

				ds_macro_w	:= 'NR_SEQUENCIA_W=' || nr_sequencia_w;
				ds_titulo_w	:= substr(obter_desc_exp_idioma(345829, nr_seq_idioma_w, ds_macro_w),1,255);
		
				select	substr(obter_desc_expressao_idioma(779273, 'Dano:', nr_seq_idioma_w) || ' ' || ds_dano_breve,1,80)
				into STRICT	ds_dano_breve_w
				from	man_ordem_servico
				where	nr_sequencia = nr_sequencia_w;
				
				select  count(*)
                                into STRICT    qt_existe_w
                                from    man_ordem_serv_tecnico
                                where   nr_seq_ordem_serv = nr_sequencia_w;


                               if (qt_existe_w > 0) then
				/* Pega o ultimo historico da ordem de servico*/

					begin
					nr_seq_rtf_string_w := converte_rtf_string('select	a.ds_relat_tecnico
							from 	man_ordem_serv_tecnico a
							where 	a.nr_sequencia = :nr_sequencia_p', nr_sequencia_p, 'Tasy', nr_seq_rtf_string_w);
					select	ds_texto
					into STRICT	ds_historico_w
					from	tasy_conversao_rtf
					where	nr_sequencia = nr_seq_rtf_string_w;
					exception
					when others then
						ds_historico_w	:= '';
					end;
				end if;

				ds_comunicado_w := ds_comunicado_w || chr(13) || chr(10) || chr(13) || chr(10) || ds_dano_breve_w
					|| chr(13) || chr(10) || chr(13) || chr(10) || obter_desc_exp_idioma(779271, nr_seq_idioma_w) || '  ' || nr_sequencia_w
					|| chr(13) || chr(10) || chr(13) || chr(10) || obter_desc_exp_idioma(779263, nr_seq_idioma_w) || '  ' || ds_pessoa_solicitante_w
					|| chr(13) || chr(10) || chr(13) || chr(10) || obter_desc_exp_idioma(779265, nr_seq_idioma_w) || ' ' || chr(13) || chr(10) || ds_historico_w;
				
				open c02;
				loop
				fetch c02 into
					nm_usuario_w;
				EXIT WHEN NOT FOUND; /* apply on c02 */
					nm_usuario_destino_w	:= substr(nm_usuario_w || ',',1,255);

					insert into comunic_interna(
						dt_comunicado,
						ds_titulo,
						ds_comunicado,
						nm_usuario,
						dt_atualizacao,
						ie_geral,
						nm_usuario_destino,
						nr_sequencia,
						ie_gerencial,
						nr_seq_classif,
						dt_liberacao)
					values (clock_timestamp(),
						ds_titulo_w,
						ds_comunicado_w,
						'Tasy',
						clock_timestamp(),
						'N',
						nm_usuario_destino_w,
						nextval('comunic_interna_seq'),
						'N',
						null,
						clock_timestamp());
		
					insert into man_ordem_serv_envio(
						nr_sequencia,
						nr_seq_ordem,
						dt_atualizacao,
						nm_usuario,
						dt_envio,
						ie_tipo_envio,
						ds_destino,
						ds_observacao)
					values (nextval('man_ordem_serv_envio_seq'),
						nr_sequencia_w,
						clock_timestamp(),
						'Tasy',
						clock_timestamp(),
						'I',
						substr(nm_usuario_destino_w,1,255),
						obter_desc_exp_idioma(345830, nr_seq_idioma_w));
				end loop;
				close c02;
			end if;
			end;
		end if;
	end if;
end loop;
close c01;
commit;

CALL wheb_usuario_pck.SET_IE_EXECUTAR_TRIGGER('N');

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE man_encerrar_os_antiga ( qt_dia_p bigint, nr_seq_solucao_p bigint) FROM PUBLIC;

