-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_w_relat_adep ( nr_atendimento_p bigint, dt_inicial_p timestamp, dt_final_p timestamp, nm_usuario_p text) AS $body$
DECLARE

 
dt_inicial_w		timestamp;
dt_final_w		timestamp;
ie_entrou_if_w		varchar(1);
nr_prescricao_w		bigint;
nr_sequencia_w		bigint;
			
c01 CURSOR FOR 
SELECT	a.nr_prescricao 
from	prescr_medica a 
where	a.nr_atendimento = nr_atendimento_p 
/*and 	(dt_inicial_w 	  between dt_inicio_prescr and dt_validade_prescr 
or 	dt_final_w	  between dt_inicio_prescr and dt_validade_prescr 
or 	dt_inicio_prescr  between dt_inicial_w   and dt_final_w 
or 	dt_validade_prescr between dt_inicial_w   and dt_final_w)*/
 
and	((exists (SELECT 1 
			from	prescr_dieta_hor x 
			where	x.nr_prescricao = a.nr_prescricao 
			and	(x.dt_fim_horario IS NOT NULL AND x.dt_fim_horario::text <> '') 
			and	x.dt_horario between dt_inicial_w and dt_final_w)) or (exists (select 1 
			from	prescr_mat_hor x 
			where	x.nr_prescricao = a.nr_prescricao 
			and	x.dt_horario between dt_inicial_w and dt_final_w 
			and	(x.dt_fim_horario IS NOT NULL AND x.dt_fim_horario::text <> ''))) or (exists (select 1 
			from	prescr_proc_hor x 
			where	x.nr_prescricao = a.nr_prescricao 
			and	x.dt_horario between dt_inicial_w and dt_final_w 
			and	(x.dt_fim_horario IS NOT NULL AND x.dt_fim_horario::text <> ''))) or (exists (select 1 
			from	prescr_rec_hor x 
			where	x.nr_prescricao = a.nr_prescricao 
			and	x.dt_horario between dt_inicial_w and dt_final_w 
			and	(x.dt_fim_horario IS NOT NULL AND x.dt_fim_horario::text <> '')))) 
 

union all
 
select	nr_sequencia 
from	pe_prescricao 
where	dt_inicio_prescr between dt_inicial_w and dt_final_w 
and 	nr_atendimento = nr_atendimento_p;


BEGIN 
 
delete	 
from	w_filtro_relat_adep 
where	nm_usuario = nm_usuario_p;
 
commit;
 
insert into w_filtro_relat_adep(nr_sequencia, 
				 dt_inicial, 
				 dt_final, 
				 dt_atualizacao, 
				 nm_usuario) 
			values (nextval('w_filtro_relat_adep_seq'), 
				 dt_inicial_p, 
				 dt_final_p, 
				 clock_timestamp(), 
				 nm_usuario_p);
 
delete	from w_relat_adep;
 
commit;
 
dt_inicial_w	:= dt_inicial_p;
dt_final_w	:= trunc(dt_inicial_p,'dd') + 14/24 + 86399/86400;
ie_entrou_if_w	:= 'N';
 
While	dt_final_w <= dt_final_p loop 
 
	open C01;
	loop 
	fetch C01 into 
		nr_prescricao_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		 
		select	nextval('w_relat_adep_seq') 
		into STRICT	nr_sequencia_w 
		;
		 
		insert into w_relat_adep( 
				nr_sequencia, 
				nr_prescricao, 
				nm_usuario_nrec, 
				nm_usuario, 
				dt_inicial, 
				dt_final, 
				dt_atualizacao_nrec, 
				dt_atualizacao) 
		values (nr_sequencia_w, 
				nr_prescricao_w, 
				null, 
				nm_usuario_p, 
				dt_inicial_w, 
				dt_final_w, 
				null, 
				clock_timestamp());
	end loop;
	close C01;
	dt_inicial_w	:= dt_final_w + 1/86400;
	dt_final_w	:= dt_final_w + 1;
	if (trunc(dt_final_w) >= trunc(dt_final_p)) and (ie_entrou_if_w = 'N') then 
		dt_final_w := dt_final_p;
		ie_entrou_if_w	:= 'S';
	end if;
	 
end loop;
 
CALL Gerar_w_adep_oxigenio(nr_atendimento_p,dt_inicial_p,dt_final_p,nm_usuario_p);
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_w_relat_adep ( nr_atendimento_p bigint, dt_inicial_p timestamp, dt_final_p timestamp, nm_usuario_p text) FROM PUBLIC;

