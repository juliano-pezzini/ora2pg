-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE tiss_gerar_w_guia_odonto (nr_seq_protocolo_p bigint, nr_interno_conta_p bigint, ds_dir_padrao_p text, nm_usuario_p text, nr_atendimento_p bigint, ie_status_p text, nr_seq_consulta_p bigint) AS $body$
DECLARE


cd_ans_w			varchar(100);
ds_arquivo_logo_w		varchar(140);
cd_estabelecimento_w		bigint := 0;
cd_convenio_w			integer;
dt_mesano_referencia_w		timestamp;
ds_arquivo_logo_comp_w		varchar(255);
ie_gerar_tiss_w			varchar(10);
nr_seq_conta_guia_w		bigint;
nr_atendimento_w		bigint;
nr_interno_conta_w		bigint;
nr_seq_guia_w			bigint;
nr_seq_apresentacao_w		bigint := 0;
im_logo_convenio_w	tiss_logo_convenio.im_logo_convenio%type;

c01 CURSOR FOR
SELECT	a.nr_sequencia,
	b.nr_atendimento,
	a.nr_interno_conta
from	tiss_conta_guia a,
	tiss_conta_atend b
where	a.nr_interno_conta	= b.nr_interno_conta
and	a.nr_interno_conta	= nr_interno_conta_p
and	a.ie_tiss_tipo_guia	= '11'

union

SELECT	a.nr_sequencia,
	b.nr_atendimento,
	a.nr_interno_conta
from	tiss_conta_guia a,
	tiss_conta_atend b,
	conta_paciente c
where	a.nr_interno_conta	= b.nr_interno_conta
and	a.nr_interno_conta	= c.nr_interno_conta
and	c.nr_atendimento	= nr_atendimento_p
and	coalesce(nr_interno_conta_p,0)	<= 0
and	a.ie_tiss_tipo_guia	= '11'

union

select	a.nr_sequencia,
	b.nr_atendimento,
	a.nr_interno_conta
from	tiss_conta_guia a,
	TISS_PROTOCOLO_GUIA c,
	tiss_conta_atend b
where	a.nr_interno_conta	= b.nr_interno_conta
and	c.nr_sequencia		= a.nr_seq_prot_guia
and	c.nr_seq_protocolo	= nr_seq_protocolo_p
and	a.ie_tiss_tipo_guia	= '11';

c02 CURSOR FOR
SELECT	a.*
from	tiss_conta_proc a
where	a.nr_seq_guia	= nr_seq_conta_guia_w
 and    ie_status_p in ('T','E')
order by a.nr_seq_apresentacao,
	a.dt_procedimento;

c02_w	c02%rowtype;

  R RECORD;

BEGIN

delete	from w_tiss_guia
where	nm_usuario		= nm_usuario_p;

delete	from w_tiss_dados_atendimento
where	nm_usuario		= nm_usuario_p;

delete	from w_tiss_beneficiario
where	nm_usuario		= nm_usuario_p;

delete	from w_tiss_proc_paciente
where	nm_usuario		= nm_usuario_p;

delete	from w_tiss_contratado_exec
where	nm_usuario		= nm_usuario_p;

delete	from w_tiss_totais
where	nm_usuario		= nm_usuario_p;

delete	from w_tiss_solicitacao
where	nm_usuario		= nm_usuario_p;

delete	from w_tiss_contratado_solic
where	nm_usuario		= nm_usuario_p;

delete	from w_tiss_relatorio
where	nm_usuario		= nm_usuario_p;

delete	from w_tiss_contratado
where	nm_usuario		= nm_usuario_p;

commit;

if	((coalesce(nr_seq_protocolo_p,0) > 0) or (coalesce(nr_interno_conta_p,0) > 0) or (coalesce(nr_atendimento_p,0) > 0)) then
	
	CALL tiss_atualizar_prot_conta(nr_seq_protocolo_p, nr_interno_conta_p, nr_atendimento_p, null, 'N', null, nm_usuario_p);

	if (coalesce(nr_seq_protocolo_p,0) > 0) then

		select	max(c.cd_ans),
			max(b.ds_arquivo_logo_tiss),
			max(a.cd_estabelecimento),
			max(b.cd_convenio),
			max(a.dt_mesano_referencia)
		into STRICT	cd_ans_w,
			ds_arquivo_logo_w,
			cd_estabelecimento_w,
			cd_convenio_w,
			dt_mesano_referencia_w
		from	pessoa_juridica c,
			convenio b,
			protocolo_convenio a
		where	a.cd_convenio		= b.cd_convenio
		and	b.cd_cgc		= c.cd_cgc
		and	a.nr_seq_protocolo	= nr_seq_protocolo_p;

	elsif (coalesce(nr_interno_conta_p,0) > 0) then

		select	max(cd_ans),
			max(b.ds_arquivo_logo_tiss),
			max(a.cd_estabelecimento),
			max(b.cd_convenio),
			max(a.dt_mesano_referencia)
		into STRICT	cd_ans_w,
			ds_arquivo_logo_w,
			cd_estabelecimento_w,
			cd_convenio_w,
			dt_mesano_referencia_w
		from	pessoa_juridica c,
			convenio b,
			conta_paciente a
		where	a.cd_convenio_parametro	= b.cd_convenio
		and	b.cd_cgc		= c.cd_cgc
		and	a.nr_interno_conta	= nr_interno_conta_p;

	elsif (coalesce(nr_atendimento_p,0) > 0) then
	
		select	max(c.cd_ans),
			max(b.ds_arquivo_logo_tiss),
			max(a.cd_estabelecimento),
			max(b.cd_convenio),
			max(a.dt_mesano_referencia)
		into STRICT	cd_ans_w,
			ds_arquivo_logo_w,
			cd_estabelecimento_w,
			cd_convenio_w,
			dt_mesano_referencia_w
		from	pessoa_juridica c,
			convenio b,
			conta_paciente a,
			tiss_conta_guia d
		where	a.cd_convenio_parametro	= b.cd_convenio
		and	b.cd_cgc		= c.cd_cgc
		and	d.nr_interno_conta	= a.nr_interno_conta
		and	d.ie_tiss_tipo_guia	= '11'
		and	a.nr_atendimento	= nr_atendimento_p;
		
	end if;

	select	max(ds_arquivo_logo_comp),
		coalesce(max(ie_gerar_tiss), 'S')
	into STRICT	ds_arquivo_logo_comp_w,
		ie_gerar_tiss_w
	from	tiss_parametros_convenio
	where	cd_estabelecimento	= cd_estabelecimento_w
	and	cd_convenio		= cd_convenio_w;

	begin
		select	im_logo_convenio
		into STRICT	im_logo_convenio_w
		from	tiss_logo_convenio
		where	cd_convenio	   = cd_convenio_w
		and 	coalesce(ie_situacao,'N') = 'A';
	exception
	when others then
		im_logo_convenio_w := null;
	end;
	
	if (coalesce(im_logo_convenio_w::text, '') = '') and (ds_arquivo_logo_w IS NOT NULL AND ds_arquivo_logo_w::text <> '') then
		ds_arquivo_logo_w := tiss_diretorio_logo(ds_arquivo_logo_comp_w, ds_dir_padrao_p) || ds_arquivo_logo_w;
	end if;

	if (coalesce(ie_gerar_tiss_w,'S') = 'S') then

		if (ds_arquivo_logo_w IS NOT NULL AND ds_arquivo_logo_w::text <> '') and (coalesce(im_logo_convenio_w::text, '') = '') then
			insert	into w_tiss_relatorio(nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				ds_arquivo_logo,
				im_logo_convenio)
			values (nextval('w_tiss_relatorio_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				ds_arquivo_logo_w,
				null);
		else
			insert	into w_tiss_relatorio(nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				ds_arquivo_logo,
				im_logo_convenio)
			values (nextval('w_tiss_relatorio_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				null,
				im_logo_convenio_w);
		end if;

		open c01;
		loop
		fetch c01 into
			nr_seq_conta_guia_w,
			nr_atendimento_w,
			nr_interno_conta_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */

			nr_seq_apresentacao_w	:= 0;

			open C02;
			loop
			fetch C02 into
				c02_w;
			EXIT WHEN NOT FOUND; /* apply on C02 */
				begin

				if (nr_seq_apresentacao_w = 0) then
					nr_seq_guia_w := TISS_GERAR_CABECALHO_ODONTO(nr_seq_conta_guia_w, nr_seq_guia_w, nm_usuario_p, ie_status_p, null);
				end if;

				nr_seq_apresentacao_w	:= nr_seq_apresentacao_w + 1;

				insert	into w_tiss_proc_paciente(nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					nr_seq_guia,
					cd_procedimento,
					cd_edicao_amb,
					qt_procedimento,
					vl_procedimento,
					ds_procedimento,
					dt_procedimento,
					nr_seq_apresentacao,
					ds_face_dente,
					cd_dente,
					cd_regiao_boca)
				values (nextval('w_tiss_proc_paciente_seq'),
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_guia_w,
					c02_w.cd_procedimento,
					c02_w.cd_edicao_amb,
					c02_w.qt_procedimento,
					c02_w.vl_procedimento,
					c02_w.ds_procedimento,
					c02_w.dt_procedimento,
					nr_seq_apresentacao_w,
					c02_w.ds_face_dente,
					c02_w.cd_dente,
					c02_w.cd_regiao_boca);
					
				if (nr_seq_apresentacao_w = 20) then
				
					nr_seq_apresentacao_w	:= 0;
					CALL tiss_completar_guia(nr_seq_guia_w,nm_usuario_p);
				end if;

				end;
			end loop;
			close C02;
            
           
			if (ie_status_p in ('E')) then
				nr_seq_apresentacao_w	:= 0;
				CALL tiss_completar_guia(nr_seq_guia_w,nm_usuario_p);
			end if;

		end loop;
		close c01;

        if (ie_status_p in ('T','P')) then
        
       
                for R in (SELECT p.*, d.ds_procedimento, c.cd_pessoa_fisica from ODONT_PROCEDIMENTO o, ODONT_PROCEDIMENTO_PROC p , procedimento d, odont_consulta c 
                            where o.nr_seq_consulta = nr_seq_consulta_p  
                            and o.nr_seq_consulta = c.nr_sequencia
                            and o.ie_status  = 'P'
                            and o.nr_sequencia = p.nr_seq_plano_proc
                            and	p.cd_procedimento	= d.cd_procedimento
                            and	p.ie_origem_proced	= d.ie_origem_proced) loop                            
                        
                         if	(((ie_status_p = 'P') or (ie_status_p = 'T' and coalesce(nr_seq_guia_w::text, '') = '')) and (nr_seq_apresentacao_w = 0)) then
                            nr_seq_guia_w := TISS_GERAR_CABECALHO_ODONTO(nr_seq_conta_guia_w, nr_seq_guia_w, nm_usuario_p, ie_status_p, nr_atendimento_p);
                        end if;

                        nr_seq_apresentacao_w	:= nr_seq_apresentacao_w + 1;
			
			insert	into w_tiss_proc_paciente(nr_sequencia,
                        dt_atualizacao,
                        nm_usuario,
                        nr_seq_guia,
                        cd_procedimento,
                        cd_edicao_amb,
                        qt_procedimento,
                        vl_procedimento,
                        ds_procedimento,
                        dt_procedimento,
                        nr_seq_apresentacao,
                        ds_face_dente,
                        cd_dente,
                        cd_regiao_boca)
                    values (nextval('w_tiss_proc_paciente_seq'),
                        clock_timestamp(),
                        nm_usuario_p,
                        nr_seq_guia_w,
                        R.cd_procedimento,
                        null,
                        R.qt_procedimento,
                        0,
                        R.ds_procedimento,
                        null,
                        nr_seq_apresentacao_w,
                        TISS_OBTER_DADOS_ODONTO(null,'11','F',R.nr_sequencia),
                        TISS_OBTER_DADOS_ODONTO(null,'11','D',R.nr_sequencia),
                        TISS_OBTER_DADOS_ODONTO(null,'11','R',R.nr_sequencia));

		    	if (nr_seq_apresentacao_w = 20) then
				nr_seq_apresentacao_w	:= 0;
				CALL tiss_completar_guia(nr_seq_guia_w,nm_usuario_p);
				nr_seq_guia_w := null;
			end if;
			
		    end loop;

                CALL tiss_completar_guia(nr_seq_guia_w,nm_usuario_p);
            end if;

	end if;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE tiss_gerar_w_guia_odonto (nr_seq_protocolo_p bigint, nr_interno_conta_p bigint, ds_dir_padrao_p text, nm_usuario_p text, nr_atendimento_p bigint, ie_status_p text, nr_seq_consulta_p bigint) FROM PUBLIC;

