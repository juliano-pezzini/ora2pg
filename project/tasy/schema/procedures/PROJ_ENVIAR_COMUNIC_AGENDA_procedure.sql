-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE proj_enviar_comunic_agenda ( nm_usuario_p text, cd_consultor_p text, cd_tipo_envio_p text, dt_agenda_p timestamp) AS $body$
DECLARE

 
cd_cnpj_w		varchar(15);
cd_perfil_w		varchar(15);
cd_pessoa_envio_w	varchar(15);
cd_pessoa_destino_w	varchar(15);
contador_cnpj_w		bigint := 0;
contador_perfil_w		bigint := 0;
contador_pessoa_w	bigint := 0;
contador_pessoa_email_w	bigint := 0;
ds_comunicacao_w		varchar(4000);
ds_cnpj_email_w		varchar(4000) := '';
ds_destino_email_w		varchar(4000) := '';
ds_email_origem_w		varchar(255);
ds_perfil_destino_w		varchar(4000) := '';
ds_perfil_email_w		varchar(4000) := '';
ds_pessoa_destino_w	varchar(4000) := '';
ds_pessoa_email_w		varchar(4000) := '';
ds_titulo_w		varchar(255);
ie_envio_ci_w		varchar(1);
ie_envio_email_w		varchar(1);
nr_seq_classif_w		bigint;
nr_sequencia_w		bigint;
qt_envio_ci_w		bigint;
qt_envio_email_w		bigint;

-- Cursor para buscar os destinatários da comunicação interna 
c01 CURSOR FOR 
	SELECT	cd_cnpj, 
		to_char(cd_perfil), 
		cd_pessoa_envio, 
		ie_envio_ci, 
		ie_envio_email 
	from	proj_envio_regra 
	where	nr_seq_envio = nr_sequencia_w;


BEGIN 
 
-- Verifica se existe uma regra para o evento e para o consultor e que possua ao menos uma das opções (ci ou email) marcada 
select	max(nr_sequencia) 
into STRICT	nr_sequencia_w 
from	proj_envio_comunic a 
where	cd_tipo_envio = cd_tipo_envio_p 
and	ie_situacao = 'A' 
and	exists (	SELECT	1 
		from	proj_envio_consultor c 
		where	c.nr_seq_envio = a.nr_sequencia 
		and		cd_consultor = cd_consultor_p) 
and	exists	(	select	1 
			from	proj_envio_regra r 
			where	r.nr_seq_envio = a.nr_sequencia 
			and	((ie_envio_ci = 'S') 
			or (ie_envio_email = 'S')));
 
if (coalesce(nr_sequencia_w,0) > 0) then 
 
	open c01;
	loop 
	fetch c01 into	 
		cd_cnpj_w, 
		cd_perfil_w, 
		cd_pessoa_destino_w, 
		ie_envio_ci_w, 
		ie_envio_email_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin 
		 
		if ((coalesce(cd_cnpj_w, 'X') <> 'X') and (ie_envio_email_w = 'S')) then 
			 
			contador_cnpj_w := contador_cnpj_w + 1;
				 
			if (contador_cnpj_w = 1) then 
				ds_cnpj_email_w := cd_cnpj_w;
			else 
				ds_cnpj_email_w := ds_cnpj_email_w || ', ' || cd_cnpj_w;
			end if;
				 
		end if;
		 
		if (coalesce(cd_perfil_w, 'X') <> 'X') then 
		 
			if (ie_envio_ci_w = 'S') then 
				 
				contador_perfil_w := contador_perfil_w + 1;
			 
				if (contador_perfil_w = 1) then 
					ds_perfil_destino_w := cd_perfil_w || ',';
				else 
					ds_perfil_destino_w := ds_perfil_destino_w || ', ' || cd_perfil_w;
				end if;
			 
			end if;
			 
			if (ie_envio_email_w = 'S') then 
			 
				ds_perfil_email_w :=	obter_select_concatenado_bv(	' select	obter_dados_pf_pj(u.cd_pessoa_fisica,'''',''M'') ' 		|| 
										' from 	usuario u,'					|| 
										' 	usuario_perfil p '					|| 
										' where	u.nm_usuario = p.nm_usuario ' 			|| 
										' and 	p.cd_perfil = :cd_perfil_p'				|| 
										' and	nvl(obter_dados_pf_pj(u.cd_pessoa_fisica,'''',''M''),''X'') <> ''X''', 
										'cd_perfil_p='||to_char(cd_perfil_w), 
										',');
			end if;
 
		end if;
			 
		if (coalesce(cd_pessoa_destino_w, 'X') <> 'X') then 
			 
			if (ie_envio_ci_w = 'S') then 
				 
				contador_pessoa_w := contador_pessoa_w + 1;
				 
				cd_pessoa_destino_w := obter_usuario_pessoa(cd_pessoa_destino_w);
				 
				if ((contador_pessoa_w = 1) and (coalesce(cd_pessoa_destino_w,'X') <> 'X')) then 
					ds_pessoa_destino_w := cd_pessoa_destino_w;
				elsif ((contador_pessoa_w > 1) and (coalesce(cd_pessoa_destino_w,'X') <> 'X')) then 
					ds_pessoa_destino_w := ds_pessoa_destino_w || ', ' || cd_pessoa_destino_w;
				end if;
				 
			end if;
			 
			if (ie_envio_email_w = 'S') then 
 
				contador_pessoa_email_w := contador_pessoa_email_w + 1;
				 
				cd_pessoa_destino_w := obter_dados_pf_pj(cd_pessoa_destino_w,'','M');
				 
				if (contador_pessoa_email_w = 1) then 
					ds_pessoa_email_w := cd_pessoa_destino_w;
				else 
					ds_pessoa_email_w := ds_pessoa_email_w || ', ' || cd_pessoa_destino_w;
				end if;
		 
			end if;
		 
		end if;
		 
		end;
	end loop;
	close c01;
 
	select	count(*) 
	into STRICT	qt_envio_ci_w 
	from	proj_envio_regra 
	where	nr_seq_envio = nr_sequencia_w 
	and	ie_envio_ci = 'S';
	 
	if (qt_envio_ci_w > 0) and ((coalesce(ds_pessoa_destino_w,'X') <> 'X') or (coalesce(ds_perfil_destino_w,'X') <> 'X')) then 
	 
 
		-- envia comunicação 
		select	coalesce(ds_mensagem,' ') 
		into STRICT	ds_comunicacao_w 
		from	proj_envio_comunic 
		where	nr_sequencia = nr_sequencia_w;
		 
		ds_titulo_w	:= 'Alteração de status para livre na agenda do dia ' || to_char(dt_agenda_p,'dd/mm/yyyy') || ' do consultor ' || obter_nome_pf(cd_consultor_p);
		 
		select	obter_classif_comunic('F') 
		into STRICT	nr_seq_classif_w 
		;
		 
		insert into comunic_interna(	dt_comunicado, 
						ds_titulo, 
						ds_comunicado, 
						nm_usuario, 
						dt_atualizacao, 
						ie_geral, 
						nm_usuario_destino, 
						cd_perfil, 
						nr_sequencia, 
						ie_gerencial, 
						nr_seq_classif, 
						ds_perfil_adicional, 
						cd_setor_destino, 
						cd_estab_destino, 
						ds_setor_adicional, 
						dt_liberacao, 
						ds_grupo, 
						nm_usuario_oculto) 
				values (	clock_timestamp(), 
						ds_titulo_w, 
						ds_comunicacao_w, 
						'Tasy', 
						clock_timestamp(), 
						'N', 
						ds_pessoa_destino_w, 
						null, 
						nextval('comunic_interna_seq'), 
						'N', 
						nr_seq_classif_w, 
						ds_perfil_destino_w, 
						null, 
						'', 
						'', 
						clock_timestamp(), 
						'', 
						'');
		commit;
		 
	end if;
 
	select	count(*) 
	into STRICT	qt_envio_email_w 
	from	proj_envio_regra 
	where	nr_seq_envio = nr_sequencia_w 
	and	ie_envio_email = 'S';
	 
	ds_destino_email_w := ds_pessoa_email_w || ', ' || ds_cnpj_email_w || ', ' || ds_perfil_email_w;
	 
	if ((qt_envio_email_w > 0) and (coalesce(ds_destino_email_w,'X') <> 'X')) then 
	 
		select	obter_dados_pf_pj(cd_pessoa_fisica,'','M') 
		into STRICT	ds_email_origem_w 
		from	usuario 
		where	nm_usuario = nm_usuario_p;
		 
		if (coalesce(ds_email_origem_w,'X') <> 'X') then 
			 
			-- envia email 
			CALL enviar_email(	ds_titulo_w, 
					ds_comunicacao_w, 
					ds_email_origem_w, -- E-mail cadastrado na regra. 
					ds_destino_email_w, 
					nm_usuario_p, 
					'M');
		end if;
		 
	end if;
 
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE proj_enviar_comunic_agenda ( nm_usuario_p text, cd_consultor_p text, cd_tipo_envio_p text, dt_agenda_p timestamp) FROM PUBLIC;

