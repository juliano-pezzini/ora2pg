-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE inativar_reg_template ( nr_sequencia_p bigint, nm_usuario_p text) AS $body$
DECLARE

C01 CURSOR FOR
	SELECT	'P' ie_proc_mat,
		nr_sequencia
	from	conta_paciente a,
		procedimento_paciente b
	where	a.nr_interno_conta	= b.nr_interno_conta
	and	b.nr_seq_reg_template	= nr_sequencia_p
	and	a.ie_status_acerto	= 1
	
union all

	SELECT	'M' ie_proc_mat,
		nr_sequencia
	from	conta_paciente a,
		material_atend_paciente b
	where	a.nr_interno_conta	= b.nr_interno_conta
	and	b.nr_seq_reg_template	= nr_sequencia_p
	and	a.ie_status_acerto	= 1;

qt_nao_lib_w		bigint;
cd_motivo_exc_conta_w	smallint;
nr_sequencia_w		bigint;
ie_proc_mat_w		varchar(1);
nm_tabela_w		varchar(50);
nm_atributo_w		varchar(50);
ds_comando_w		varchar(2000);
nr_seq_reg_elemento_w	bigint;
ds_parametro_w		varchar(2000);

C02 CURSOR FOR
	SELECT	a.nm_tabela,
		b.nm_atributo
	from 	integridade_atributo b,
		integridade_referencial a
	where 	a.nm_tabela			= b.nm_tabela
	and 	a.nm_integridade_referencial	= b.nm_integridade_referencial
	and 	a.nm_tabela_referencia 		= 'EHR_REG_ELEMENTO'
	and	exists (	SELECT	1
				from	tabela_atributo x
				where	x.nm_tabela	= a.nm_tabela
				and	x.nm_atributo	= 'DT_INATIVACAO');



c03 CURSOR FOR
	SELECT	nr_sequencia
	from	EHR_REG_ELEMENTO
	where	NR_SEQ_REG_TEMPLATE	= nr_sequencia_p;

BEGIN

update	ehr_reg_template
set	dt_inativacao	= clock_timestamp(),
	nm_usuario_inativacao	= nm_usuario_p
where	nr_sequencia	= nr_sequencia_p;

select	coalesce(max(cd_motivo_exc_conta),2)
into STRICT	cd_motivo_exc_conta_w
from	parametro_faturamento
where	cd_estabelecimento	= wheb_usuario_pck.get_cd_estabelecimento;

if (cd_motivo_exc_conta_w IS NOT NULL AND cd_motivo_exc_conta_w::text <> '') then
	open C01;
	loop
	fetch C01 into
		ie_proc_mat_w,
		nr_sequencia_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		CALL excluir_matproc_conta(nr_sequencia_w,null,cd_motivo_exc_conta_w,null,ie_proc_mat_w,nm_usuario_p);
		end;
	end loop;
	close C01;
end if;



open C02;
loop
fetch C02 into
	nm_tabela_w,
	nm_atributo_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin


	open C03;
	loop
	fetch C03 into
		nr_seq_reg_elemento_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin
		ds_comando_w	:= 	'	update	'||nm_tabela_w	||
					'	set	dt_inativacao = sysdate '||
					'	where	'||nm_atributo_w||' = :NR_SEQ_REG_ELEMENTO ';
		ds_parametro_w	:= 'NR_SEQ_REG_ELEMENTO='||nr_seq_reg_elemento_w||'#@#@';
		begin
		CALL exec_sql_dinamico_bv(nm_usuario_p, ds_comando_w,ds_parametro_w);
		exception
			when others then
			null;
		end;
		end;
	end loop;
	close C03;


	end;
end loop;
close C02;

commit;


end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE inativar_reg_template ( nr_sequencia_p bigint, nm_usuario_p text) FROM PUBLIC;

