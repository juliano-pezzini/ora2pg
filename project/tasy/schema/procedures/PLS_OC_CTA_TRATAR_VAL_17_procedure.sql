-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_oc_cta_tratar_val_17 ( dados_regra_p pls_tipos_ocor_pck.dados_regra, nr_id_transacao_p pls_oc_cta_selecao_ocor_v.nr_id_transacao%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:  Aplicar a validação de regra de valor de custo operacional
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[ X]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:

Alterações:
 ------------------------------------------------------------------------------------------------------------------
jjung 29/06/2013

Alteração:	Adicionado parametro nos métodos de atualização dos campos IE_VALIDO e IE_VALIDO_TEMP
	da PLS_TIPOS_OCOR_PCK

Motivo:	Se tornou necessário diferenciar os filtros das validações na hora de realizar esta operação
	para que os filtros de exceção funcionem corretamente.
------------------------------------------------------------------------------------------------------------------
jjung OS 659889

Alteração:	Alterado para que esta validação funcione como regra de exceção.

Motivo:	Seguinda uma solicitação da Unimed São José do Rio Preto foi desenvolvida
	a possibilidade de cadastro das regras como exceções, portanto todas as validações
	devem ser migradas para funcionar com este novo conceito.
------------------------------------------------------------------------------------------------------------------
dlehmkuhl OS 688483 - 14/04/2014 -

Alteração:	Modificada a forma de trabalho em relação a atualização dos campos de controle
	que basicamente decidem se a ocorrência será ou não gerada. Foi feita também a
	substituição da rotina obterX_seX_geraX.

Motivo:	Necessário realizar essas alterações para corrigir bugs principalmente no que se
	refere a questão de aplicação de filtros (passo anterior ao da validação). Também
	tivemos um foco especial em performance, visto que a mesma precisou ser melhorada
	para não inviabilizar a nova solicitação que diz que a exceção deve verificar todo
	o atendimento.
------------------------------------------------------------------------------------------------------------------
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
dados_tb_selecao_w	pls_tipos_ocor_pck.dados_table_selecao_ocor;
ie_valido_w		pls_oc_cta_selecao_ocor_v.ie_valido%type;

-- Procedimentos que deveriam ter valor de custo operacional porém o mesmo não foi calculado.
cs_procs_vl_co_zero CURSOR(	nr_id_transacao_pc	pls_oc_cta_selecao_ocor_v.nr_id_transacao%type,
				ie_valido_pc		pls_oc_cta_selecao_ocor_v.ie_valido%type) FOR
	SELECT	sel.nr_sequencia nr_seq_selecao,
		ie_valido_pc ie_valido,
		'Este procedimento não obteve uma regra válida de valor de custo operacional, ' ||
		'não foi calculado valor de custo operacional para o mesmo.' ds_observacao
	from	pls_oc_cta_selecao_ocor_v sel,
		pls_conta_proc_ocor_v proc
	where	sel.nr_id_transacao = nr_id_transacao_pc
	and	sel.ie_valido = 'S'
	and	sel.ie_tipo_registro = 'P'
	and	proc.nr_seq_conta = sel.nr_seq_conta
	and	proc.nr_sequencia = sel.nr_seq_conta_proc
	and	proc.ie_co_preco_operadora = 'S'
	and	coalesce(proc.vl_custo_operacional::text, '') = ''
	
union all

	SELECT	sel.nr_sequencia nr_seq_selecao,
		ie_valido_pc ie_valido,
		'Este procedimento não obteve uma regra válida de valor de custo operacional, ' ||
		'não foi calculado valor de custo operacional para o mesmo.' ds_observacao
	from	pls_oc_cta_selecao_ocor_v sel,
		pls_conta_proc_ocor_v proc
	where	sel.nr_id_transacao = nr_id_transacao_pc
	and	sel.ie_valido = 'S'
	and	sel.ie_tipo_registro = 'P'
	and	proc.nr_seq_conta = sel.nr_seq_conta
	and	proc.nr_sequencia = sel.nr_seq_conta_proc
	and	proc.ie_co_preco_operadora = 'S'
	and 	proc.vl_custo_operacional <= 0;

-- Informações da validação de regra de valor de custo operacional
C02 CURSOR(	nr_seq_oc_cta_comb_p	dados_regra_p.nr_sequencia%type) FOR
	SELECT	a.nr_sequencia	nr_seq_validacao,
		a.ie_sem_regra_valor_co
	from	pls_oc_cta_val_valor_co a
	where	a.nr_seq_oc_cta_comb = nr_seq_oc_cta_comb_p;

BEGIN

-- Deve haver informação da regra para que seja aplicada a validação.
if (dados_regra_p.nr_sequencia IS NOT NULL AND dados_regra_p.nr_sequencia::text <> '') then

	-- Varrer as regras da ocorrência combinada.
	for	r_C02_w in C02(dados_regra_p.nr_sequencia) loop

		-- tratamento em campo auxiliar para identificar posteriormente os registros que foram alterados
		CALL pls_tipos_ocor_pck.atualiza_campo_auxiliar('V', nr_id_transacao_p, null, dados_regra_p);
		ie_valido_w	:= 'S';

		-- Só aplicar a validação caso seja para verificar itens sem regra de valor de CO.
		if (r_C02_w.ie_sem_regra_valor_co = 'S') then

			open cs_procs_vl_co_zero(	nr_id_transacao_p, ie_valido_w);
			loop

				pls_tipos_ocor_pck.limpar_nested_tables(dados_tb_selecao_w);

				fetch cs_procs_vl_co_zero bulk collect into 	dados_tb_selecao_w.nr_seq_selecao, dados_tb_selecao_w.ie_valido,
										dados_tb_selecao_w.ds_observacao
										limit pls_cta_consistir_pck.qt_registro_transacao_w;

				exit when dados_tb_selecao_w.nr_seq_selecao.count = 0;

				-- Gravar na tabela de seleção os procedimentos selecionados
				CALL pls_tipos_ocor_pck.gerencia_selecao_validacao(
						dados_tb_selecao_w.nr_seq_selecao, dados_tb_selecao_w.ds_seqs_selecao, 'SEQ',
						dados_tb_selecao_w.ds_observacao, dados_tb_selecao_w.ie_valido, nm_usuario_p);

			end loop; -- cs_procs_vl_co_zero
			close cs_procs_vl_co_zero;
		end if;

		-- seta os registros que serão válidos ou inválidos após o processamento
		CALL pls_tipos_ocor_pck.atualiza_campo_valido('V', nr_id_transacao_p, null, dados_regra_p);
	end loop; -- C02
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_oc_cta_tratar_val_17 ( dados_regra_p pls_tipos_ocor_pck.dados_regra, nr_id_transacao_p pls_oc_cta_selecao_ocor_v.nr_id_transacao%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;

