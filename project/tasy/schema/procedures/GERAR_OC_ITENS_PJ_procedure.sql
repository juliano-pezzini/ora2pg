-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_oc_itens_pj ( cd_cnpj_p text, cd_comprador_p text, dt_entrega_p timestamp, cd_setor_atendimento_p bigint, ie_frete_p text, cd_moeda_p bigint, cd_local_estoque_p bigint, cd_centro_custo_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, nr_ordem_compra_p INOUT bigint) AS $body$
DECLARE

 
cd_centro_custo_w			integer;
cd_local_estoque_w		smallint;
ie_tipo_conta_w			integer	:= 2;
nr_item_oci_w			integer;
cd_unidade_medida_compra_w	varchar(30);
cd_cond_pagto_w			bigint;
cd_material_w			integer;
vl_item_w				double precision;
nr_ordem_compra_w		bigint;
cd_conta_contabil_w		varchar(20);

c01 CURSOR FOR 
SELECT	cd_material, 
	coalesce(vl_item,0) 
from	preco_pj 
where	cd_cgc = cd_cnpj_p 
and	(cd_material IS NOT NULL AND cd_material::text <> '') 
and	((coalesce(dt_vigencia::text, '') = '') or (trunc(dt_vigencia,'dd') <= trunc(clock_timestamp(),'dd'))) 
and	((coalesce(dt_vigencia_fim::text, '') = '') or (trunc(dt_vigencia_fim,'dd') >= trunc(clock_timestamp(),'dd')));


BEGIN 
 
cd_centro_custo_w	:= cd_centro_custo_p;
if (cd_centro_custo_w = 0) then 
	cd_centro_custo_w := null;
end if;
 
cd_local_estoque_w	:= cd_local_estoque_p;
if (cd_local_estoque_w = 0) then 
	cd_local_estoque_w := null;
end if;
 
select	coalesce(max(cd_cond_pagto),0) 
into STRICT	cd_cond_pagto_w 
from	pessoa_juridica_estab 
where	cd_cgc = cd_cnpj_p 
and	cd_estabelecimento = cd_estabelecimento_p;
 
if (cd_cond_pagto_w = 0) then 
	CALL wheb_mensagem_pck.exibir_mensagem_abort(266012);
	--'Favor informar a condição de pagamento do cadastro da pessoa jurídica.' 
end if;
 
select	nextval('ordem_compra_seq') 
into STRICT	nr_ordem_compra_w
;
 
insert into ordem_compra( 
	nr_ordem_compra, 
	cd_estabelecimento, 
	cd_cgc_fornecedor, 
	cd_condicao_pagamento, 
	cd_comprador, 
	dt_ordem_compra, 
	dt_atualizacao, 
	nm_usuario, 
	cd_moeda, 
	ie_situacao, 
	dt_inclusao, 
	cd_pessoa_solicitante, 
	ie_frete, 
	vl_frete, 
	pr_desconto, 
	pr_desc_pgto_antec, 
	pr_juros_negociado, 
	dt_entrega, 
	ie_aviso_chegada, 
	ie_emite_obs, 
	ie_urgente, 
	cd_setor_atendimento, 
	pr_desc_financeiro, 
	vl_desconto, 
	ie_somente_pagto, 
	ie_tipo_ordem, 
	cd_local_entrega) 
values (	nr_ordem_compra_w, 
	cd_estabelecimento_p, 
	cd_cnpj_p, 
	cd_cond_pagto_w, 
	cd_comprador_p, 
	clock_timestamp(), 
	clock_timestamp(), 
	nm_usuario_p, 
	cd_moeda_p, 
	'A', 
	clock_timestamp(), 
	obter_pessoa_fisica_usuario(nm_usuario_p,'C'), 
	ie_frete_p, 
	0, 
	0, 
	0, 
	0, 
	dt_entrega_p, 
	'N', 
	'N', 
	'N', 
	cd_setor_atendimento_p, 
	0, 
	0, 
	'N', 
	'C', 
	cd_local_estoque_w);
	 
open C01;
loop 
fetch C01 into	 
	cd_material_w, 
	vl_item_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin	 
	 
	select	cd_unidade_medida_compra 
	into STRICT	cd_unidade_medida_compra_w 
	from	material 
	where	cd_material = cd_material_w;
	 
	select	coalesce(max(nr_item_oci),0) + 1 
	into STRICT	nr_item_oci_w 
	from	ordem_compra_item 
	where	nr_ordem_compra = nr_ordem_compra_w;
 
	if (coalesce(cd_conta_contabil_w::text, '') = '') then 
		if (coalesce(cd_centro_custo_w::text, '') = '') then 
			ie_tipo_conta_w	:= 2;
		else 
			ie_tipo_conta_w	:= 3;
		end if;
 
		SELECT * FROM define_conta_material(	cd_estabelecimento_p, cd_material_w, ie_tipo_conta_w, null, null, null, null, null, null, null, cd_local_estoque_w, Null, clock_timestamp(), cd_conta_contabil_w, cd_centro_custo_w, null) INTO STRICT cd_conta_contabil_w, cd_centro_custo_w;
	end if;	
	 
	insert into ordem_compra_item( 
		nr_ordem_compra, 
		nr_item_oci, 
		cd_material, 
		cd_unidade_medida_compra, 
		vl_unitario_material, 
		qt_material, 
		dt_atualizacao, 
		nm_usuario, 
		ie_situacao, 
		cd_pessoa_solicitante, 
		pr_descontos, 
		cd_local_estoque, 
		vl_item_liquido, 
		cd_centro_custo, 
		cd_conta_contabil, 
		pr_desc_financ, 
		vl_desconto, 
		ie_geracao_solic, 
		vl_total_item) 
	values (	nr_ordem_compra_w, 
		nr_item_oci_w, 
		cd_material_w, 
		cd_unidade_medida_compra_w, 
		vl_item_w, 
		1, 
		clock_timestamp(), 
		nm_usuario_p, 
		'A', 
		obter_pessoa_fisica_usuario(nm_usuario_p,'C'), 
		0, 
		cd_local_estoque_w, 
		vl_item_w, 
		cd_centro_custo_w, 
		cd_conta_contabil_w, 
		0, 
		0, 
		'U', 
		round((1 * vl_item_w)::numeric,4));
 
	insert into ordem_compra_item_entrega( 
		nr_ordem_compra, 
		nr_item_oci, 
		dt_prevista_entrega, 
		qt_prevista_entrega, 
		dt_atualizacao, 
		nm_usuario, 
		nr_sequencia) 
	values (	nr_ordem_compra_w, 
		nr_item_oci_w, 
		dt_entrega_p, 
		1, 
		clock_timestamp(), 
		nm_usuario_p, 
		nextval('ordem_compra_item_entrega_seq'));
	end;
end loop;
close C01;
 
CALL Gerar_Ordem_Compra_Venc(nr_ordem_compra_w, nm_usuario_p);
 
commit;
 
nr_ordem_compra_p	:= nr_ordem_compra_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_oc_itens_pj ( cd_cnpj_p text, cd_comprador_p text, dt_entrega_p timestamp, cd_setor_atendimento_p bigint, ie_frete_p text, cd_moeda_p bigint, cd_local_estoque_p bigint, cd_centro_custo_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, nr_ordem_compra_p INOUT bigint) FROM PUBLIC;

