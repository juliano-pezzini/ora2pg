-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE colunas AS (nm_coluna_w varchar(100));


CREATE OR REPLACE PROCEDURE nut_gerar_w_dieta_bloco ( nr_seq_servico_p bigint, dt_inicial_p timestamp, dt_final_p timestamp, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
 
/*Ordem: 
1 -> Titulo 
5 -> Valor 
*/
 
 
/* vetor */
type vetor is table of colunas index by integer;

/* globais */
 
vetor_w			vetor;
vetor1_w		vetor;
ivet			integer;
ind			integer;
cd_dieta_w		bigint;
ds_dieta_w		varchar(255);
qt_dieta_bloco_w	bigint;
nr_seq_bloco_w		bigint;
ds_bloco_w		varchar(255);
qt_total_dieta_w	bigint;

 
 
c01 CURSOR FOR 
	SELECT coalesce(obter_desc_bloco(d.nr_seq_bloco),wheb_mensagem_pck.get_texto(794116)) ds_bloco,   
		d.nr_seq_bloco 
	from  nut_atend_serv_dia a, 
		nut_atend_serv_dia_rep b, 
		prescr_dieta c, 
		setor_atendimento d, 
		atendimento_paciente e 
	where  a.nr_sequencia = b.nr_seq_serv_dia 
	and   b.nr_prescr_oral = c.nr_prescricao 
	and   a.cd_setor_atendimento = d.cd_setor_atendimento 
	and	a.nr_atendimento = e.nr_atendimento 
	and	e.cd_estabelecimento = cd_estabelecimento_p 
	and   (a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '') 
	and   a.nr_seq_servico = nr_seq_servico_p 
	and   trunc(a.dt_servico) between dt_inicial_p and dt_final_p  
	group by d.nr_seq_bloco 
	order by ds_bloco LIMIT 6;

c02 CURSOR FOR 
	SELECT c.cd_dieta, 
		obter_nome_dieta(c.cd_dieta) ds_dieta 
	from  nut_atend_serv_dia a, 
		nut_atend_serv_dia_rep b, 
		prescr_dieta c, 
		setor_atendimento d, 
		atendimento_paciente e 
	where  a.nr_sequencia = b.nr_seq_serv_dia 
	and   b.nr_prescr_oral = c.nr_prescricao 
	and   a.cd_setor_atendimento = d.cd_setor_atendimento 
	and	a.nr_atendimento = e.nr_atendimento 
	and	e.cd_estabelecimento = cd_estabelecimento_p 
	and   (a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '') 
	and   a.nr_seq_servico = nr_seq_servico_p 
	and   trunc(a.dt_servico) between dt_inicial_p and dt_final_p 
	group by c.cd_dieta;

 

BEGIN 
 
ivet		:= 0;
--dt_referencia_w	:= pkg_date_utils.start_of(dt_referencia_p,'MONTH', 0); 
 
delete from 	W_DIETA_BLOCO 
where	nm_usuario = nm_usuario_p;
 
commit;
 
	--Cria as colunas conforme os blocos com serviço de nutrição. 
	begin 
	open	c01;
	loop 
	fetch c01 into 
		ds_bloco_w, 
		nr_seq_bloco_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin 
		ivet := ivet + 1;
		vetor_w[ivet].nm_coluna_w 	 := ds_bloco_w;
		end;
	end loop;
	close c01;
	end;
 
	--Limpa as colunas quando não chegar a 6 no total. 
	ind := ivet;
	while(ind < 6) loop 
		begin 
		ind := ind + 1;
		vetor_w[ind].nm_coluna_w := null;
		end;
	end loop;
 
	insert into W_DIETA_BLOCO( 
		nm_usuario, 
		ie_ordem, 
		ds_dieta, 
		ds_bloco_1, 
		ds_bloco_2, 
		ds_bloco_3, 
		ds_bloco_4, 
		ds_bloco_5, 
		ds_bloco_6, 
		ds_total) 
	Values (	nm_usuario_p, 
		1, 
		wheb_mensagem_pck.get_texto(793988), 
		vetor_w[1].nm_coluna_w, 
		vetor_w[2].nm_coluna_w, 
		vetor_w[3].nm_coluna_w, 
		vetor_w[4].nm_coluna_w, 
		vetor_w[5].nm_coluna_w, 
		vetor_w[6].nm_coluna_w, 
		wheb_mensagem_pck.get_texto(793989) 
		);
 
 
	begin 
	open	c02;
	loop 
	fetch c02 into 
		cd_dieta_w, 
		ds_dieta_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin 
 
		ivet := 0;
		qt_total_dieta_w := 0;
 
		begin 
		open	c01;
		loop 
		fetch c01 into 
			ds_bloco_w, 
			nr_seq_bloco_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			begin 
 
			select count(1) 
			into STRICT	qt_dieta_bloco_w 
			from  nut_atend_serv_dia a, 
				nut_atend_serv_dia_rep b, 
				prescr_dieta c, 
				setor_atendimento d, 
				atendimento_paciente e 
			where  a.nr_sequencia = b.nr_seq_serv_dia 
			and   b.nr_prescr_oral = c.nr_prescricao 
			and   a.cd_setor_atendimento = d.cd_setor_atendimento 
			and	a.nr_atendimento = e.nr_atendimento 
			and	e.cd_estabelecimento = cd_estabelecimento_p 
			and	c.cd_dieta = cd_dieta_w 
			and	d.nr_seq_bloco	= nr_seq_bloco_w 
			and   (a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '') 
			and   a.nr_seq_servico = nr_seq_servico_p 
			and   trunc(a.dt_servico) between dt_inicial_p and dt_final_p;
 
			ivet := ivet + 1;
			vetor1_w[ivet].nm_coluna_w	:= qt_dieta_bloco_w;
 
			qt_total_dieta_w := qt_total_dieta_w + qt_dieta_bloco_w;
 
			end;
		end loop;
		close c01;
		end;
 
		--Limpa as colunas quando não chegar a 6 no total. 
		ind := ivet;
		while(ind < 6) loop 
			begin 
			ind := ind + 1;
			vetor1_w[ind].nm_coluna_w := null;
			end;
		end loop;
 
		insert into W_DIETA_BLOCO( 
			nm_usuario, 
			ie_ordem, 
			ds_dieta, 
			ds_bloco_1, 
			ds_bloco_2, 
			ds_bloco_3, 
			ds_bloco_4, 
			ds_bloco_5, 
			ds_bloco_6, 
			ds_total) 
		Values (	nm_usuario_p, 
			5, 
			ds_dieta_w, 
			vetor1_w[1].nm_coluna_w, 
			vetor1_w[2].nm_coluna_w, 
			vetor1_w[3].nm_coluna_w, 
			vetor1_w[4].nm_coluna_w, 
			vetor1_w[5].nm_coluna_w, 
			vetor1_w[6].nm_coluna_w, 
			qt_total_dieta_w 
			);
 
		end;
	end loop;
	close c02;
	end;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE nut_gerar_w_dieta_bloco ( nr_seq_servico_p bigint, dt_inicial_p timestamp, dt_final_p timestamp, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

