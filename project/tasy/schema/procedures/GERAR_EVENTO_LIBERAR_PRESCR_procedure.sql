-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_evento_liberar_prescr (nr_seq_evento_p bigint, nr_atendimento_p bigint, cd_pessoa_fisica_p text, nm_usuario_p text, nr_seq_unidade_p text, cd_setor_atendimento_p bigint, nr_prescricao_p bigint) AS $body$
DECLARE


ie_forma_ev_w					varchar(15);
ie_pessoa_destino_w				varchar(15);
cd_pf_destino_w					varchar(10);
ds_mensagem_w					varchar(4000);
ds_mensagem_aux_w 				varchar(4000);
ds_mensagem_aux_ww				varchar(4000);
ds_convenio_w					varchar(4000);
ds_titulo_w						varchar(100);
cd_pessoa_destino_w				varchar(10);
cd_pessoa_fisica_w				varchar(10);
nr_sequencia_w					bigint;
ds_maquina_w					varchar(80);
nm_paciente_w					varchar(60);
ds_unidade_w					varchar(60);
ds_setor_atendimento_w			varchar(60);
ie_usuario_aceite_w				varchar(1);
cd_setor_atendimento_w			integer;
cd_perfil_w						integer;
cd_pessoa_regra_w				varchar(10);
nr_ramal_w						varchar(10);
cd_convenio_w					bigint;
nr_telefone_w					varchar(60);
ds_unidade_ww					varchar(60);
ds_setor_atendimento_ww			varchar(60);
cd_setor_atend_pac_w			integer;
cd_medico_solic_w				bigint;
nm_usuario_destino_w			varchar(15);
ds_cid_w						varchar(240);
cd_cid_w						varchar(10);
ds_tipo_atendimento_w			varchar(255);
ds_usuario_w					varchar(255);
ds_executores_w					varchar(1000);
ie_existe_regra_proc_w			varchar(1);
ds_senha_atend_w				varchar(20);
ds_exames_w						varchar(1000);
ds_proc_solicitacao_w   		varchar(1000);
dt_prev_execucao_w      		varchar(16);
nm_usuario_c01_w				ev_evento_regra_dest.nm_usuario_destino%TYPE;
qt_aux_w						bigint;
ie_ordem_w						smallint;
ie_entrou_cursor_w				boolean := FALSE;
ds_email_fixo_w					varchar(2000);
nr_seq_grupo_usuario_w			bigint;
ie_excecao_alerta_pessoa_w		varchar(1);
ds_medicamento_w				varchar(80);
ds_recomendacao_w				prescr_recomendacao.ds_recomendacao%type;
ie_existe_regra_medic_w			varchar(1);
ie_existe_regra_rec_w 			varchar(1);
dt_nascimento_w					varchar(70);
ds_unidade_setor_w				varchar(60);
ie_existe_regra_w				varchar(1);
cd_estabelecimento_w			prescr_medica.cd_estabelecimento%type;
ds_email_destino_19_w			ev_evento_pac_destino.ds_email_fixo%TYPE;

C01 CURSOR FOR
	SELECT	ie_forma_ev,
		ie_pessoa_destino,
		cd_pf_destino,
		coalesce(ie_usuario_aceite,'N'),
		cd_setor_atendimento,
		cd_perfil,
		nm_usuario_destino,
		ds_email_fixo,
		nr_seq_grupo_usuario
	FROM	ev_evento_regra_dest
	WHERE	nr_seq_evento	= nr_seq_evento_p
	AND	coalesce(cd_convenio, coalesce(cd_convenio_w,0))	= coalesce(cd_convenio_w,0)
	AND	coalesce(cd_setor_atend_pac, coalesce(cd_setor_atend_pac_w,0))	= coalesce(cd_setor_atend_pac_w,0)	
	AND (ie_existe_regra_proc_w = 'S')
	ORDER BY ie_forma_ev;

C02 CURSOR FOR
	SELECT	obter_dados_usuario_opcao(nm_usuario,'C')
	FROM	usuario_setor_v
	WHERE	cd_setor_atendimento = cd_setor_atendimento_w
	AND	ie_forma_ev_w IN (2,3)
	AND	(obter_dados_usuario_opcao(nm_usuario,'C') IS NOT NULL AND (obter_dados_usuario_opcao(nm_usuario,'C'))::text <> '');

C03 CURSOR FOR
	SELECT	obter_dados_usuario_opcao(nm_usuario,'C'),
		nm_usuario
	FROM	usuario_perfil
	WHERE	cd_perfil = cd_perfil_w
	AND	ie_forma_ev_w IN (1,2,3)
	AND	(obter_dados_usuario_opcao(nm_usuario,'C') IS NOT NULL AND (obter_dados_usuario_opcao(nm_usuario,'C'))::text <> '');
	
c04 CURSOR FOR
SELECT	DISTINCT a.cd_medico_exec
FROM	prescr_procedimento a,
		regra_envio_sms_proc b,
		regra_envio_sms c
WHERE	b.nr_seq_regra	= c.nr_sequencia
AND		a.nr_prescricao = nr_prescricao_p
AND		c.nr_seq_evento = nr_seq_evento_p
AND		((a.nr_seq_exame IS NOT NULL AND a.nr_seq_exame::text <> '') OR (a.nr_seq_proc_interno IS NOT NULL AND a.nr_seq_proc_interno::text <> ''))
AND		coalesce(b.nr_seq_proc_interno,coalesce(a.nr_seq_proc_interno,0))	= coalesce(a.nr_seq_proc_interno,0)
AND		coalesce(b.cd_procedimento,coalesce(a.cd_procedimento,0))			= coalesce(a.cd_procedimento,0)
AND		coalesce(b.ie_origem_proced,coalesce(a.ie_origem_proced,0))		= coalesce(a.ie_origem_proced,0)
AND		coalesce(b.nr_seq_exame,coalesce(a.nr_seq_exame,0))				= coalesce(a.nr_seq_exame,0)	
AND		(a.cd_medico_exec IS NOT NULL AND a.cd_medico_exec::text <> '')
AND		obter_se_proc_grupo_env(a.cd_procedimento,a.ie_origem_proced,a.nr_seq_proc_interno,a.nr_seq_exame,b.nr_seq_grupo) = 'S';

C05 CURSOR FOR
SELECT 	ds_exame,
	ds_proc_interno, 
	nm_pessoa, 
	dt,
	ie_ordem,
	ds_medicamento,
	ds_recomendacao
FROM	(
	SELECT  DISTINCT 
		SUBSTR(obter_desc_exame(a.nr_seq_exame),1,255) ds_exame,
		SUBSTR(Obter_Desc_Proc_Interno(a.nr_seq_proc_interno),1,255) ds_proc_interno,
		SUBSTR(obter_nome_pf(a.cd_medico_exec),1,255) nm_pessoa,
		substr(PKG_DATE_FORMATERS.TO_VARCHAR(a.dt_prev_execucao,'timestamp', cd_estabelecimento_w, nm_usuario_p),1,16) dt,
		1 ie_ordem,
		'' ds_medicamento,
		'' ds_recomendacao
	FROM	prescr_procedimento a, regra_envio_sms_proc b, regra_envio_sms c
	WHERE	b.nr_seq_regra = c.nr_sequencia
	AND 	a.nr_prescricao = nr_prescricao_p
	AND 	c.nr_seq_evento = nr_seq_evento_p
	AND 	((a.nr_seq_exame IS NOT NULL AND a.nr_seq_exame::text <> '') OR (a.nr_seq_proc_interno IS NOT NULL AND a.nr_seq_proc_interno::text <> ''))
	AND	coalesce(b.nr_seq_proc_interno,coalesce(a.nr_seq_proc_interno,0))	= coalesce(a.nr_seq_proc_interno,0)
	AND	coalesce(b.cd_procedimento,coalesce(a.cd_procedimento,0))			= coalesce(a.cd_procedimento,0)
	AND	coalesce(b.ie_origem_proced,coalesce(a.ie_origem_proced,0))		= coalesce(a.ie_origem_proced,0)
	AND	coalesce(b.nr_seq_exame,coalesce(a.nr_seq_exame,0))				= coalesce(a.nr_seq_exame,0)	
	AND	obter_se_proc_grupo_env(a.cd_procedimento,a.ie_origem_proced,a.nr_seq_proc_interno,a.nr_seq_exame,b.nr_seq_grupo) = 'S'
	AND obter_se_convenio_rec_alerta(cd_convenio_w,nr_seq_evento_p) = 'S'
	AND 	ie_existe_regra_proc_w = 'S'
	and 	c.cd_estabelecimento = cd_estabelecimento_w
	
UNION
 
	SELECT  SUBSTR(obter_desc_exame(a.nr_seq_exame),1,255) ds_exame,
		SUBSTR(Obter_Desc_Proc_Interno(a.nr_seq_proc_interno),1,255) ds_proc_interno,
		SUBSTR(obter_nome_pf(a.cd_medico_exec),1,255) nm_pessoa,
	substr(PKG_DATE_FORMATERS.TO_VARCHAR(a.dt_prev_execucao,'timestamp', cd_estabelecimento_w, nm_usuario_p),1,16) dt,
		2 ie_ordem,
		'' ds_medicamento,
		'' ds_recomendacao
	FROM	prescr_procedimento a
	WHERE	nr_prescricao = nr_prescricao_p
	AND 	(nr_seq_exame IS NOT NULL AND nr_seq_exame::text <> '')
	AND 	ie_existe_regra_proc_w = 'N'
	
UNION
 
	--Obrigar a entrar neste cursor caso houver regras cadastradas

	--Sem esse select so vai entrar se tiver regra p/ procedimentos

	--Sendo que pode existir regras p/ dietas etc..
	SELECT	'' ds_exame,
			'' ds_proc_interno,
			SUBSTR(obter_nome_pf(a.cd_medico),1,255) nm_pessoa,
			substr(PKG_DATE_FORMATERS.TO_VARCHAR(clock_timestamp(),'timestamp', cd_estabelecimento_w, nm_usuario_p),1,16) dt,
			4 ie_ordem,
			SUBSTR(obter_desc_material(a.cd_material),1,255) ds_medicamento,
			'' ds_recomendacao
	FROM	prescr_material a,
			regra_envio_sms_material b, 
			regra_envio_sms c,
			estrutura_material_v d
	WHERE	b.nr_seq_regra	= c.nr_sequencia
	AND		a.nr_prescricao = nr_prescricao_p
	AND		c.nr_seq_evento = nr_seq_evento_p
	and 	d.cd_material = a.cd_material
	AND		a.ie_agrupador IN (1,2)
	and		((coalesce(b.cd_material,a.cd_material)	= a.cd_material) and (coalesce(b.cd_grupo_material,d.cd_grupo_material) = d.cd_grupo_material) and (coalesce(b.cd_subgrupo_material,d.cd_subgrupo_material) = d.cd_subgrupo_material) and (coalesce(b.cd_classe_material,d.cd_classe_material) = d.cd_classe_material))
	AND		ie_existe_regra_medic_w = 'S'
	and 	c.cd_estabelecimento = cd_estabelecimento_w
	
UNION

	SELECT  '' ds_exame,
			'' ds_proc_interno,
			'' nm_pessoa,
			substr(PKG_DATE_FORMATERS.TO_VARCHAR(clock_timestamp(),'timestamp', cd_estabelecimento_w, nm_usuario_p),1,16) dt,
			5 ie_ordem,
			'' ds_medicamento,
			SUBSTR(obter_desc_recomendacao(a.cd_recomendacao),1,255) ds_recomendacao
	FROM	prescr_recomendacao a,
			regra_envio_sms b, 
			regra_envio_sms_rec c
	WHERE	a.nr_prescricao = nr_prescricao_p
	AND 	ie_existe_regra_rec_w = 'S'
	and	   a.cd_recomendacao = c.cd_recomendacao
	AND 	c.nr_seq_regra	= b.nr_sequencia
	AND		b.nr_seq_evento = nr_seq_evento_p
	and 	b.cd_estabelecimento = cd_estabelecimento_w
	
UNION

	SELECT  '' ds_exame, 
			'' ds_proc_interno,
			'' nm_pessoa,
		substr(PKG_DATE_FORMATERS.TO_VARCHAR(clock_timestamp(),'timestamp', cd_estabelecimento_w, nm_usuario_p),1,16) dt,
			6 ie_ordem,
			'' ds_medicamento,
			'' ds_recomendacao
	
	WHERE	qt_aux_w > 0) alias59
ORDER BY ie_ordem;

C09 CURSOR FOR
	SELECT	obter_dados_usuario_opcao(b.nm_usuario_grupo,'C')
	FROM	usuario_grupo b
	WHERE	b.ie_situacao = 'A'
	AND	ie_forma_ev_w IN (2,3,4,8)
	AND	(obter_dados_usuario_opcao(b.nm_usuario_grupo,'C') IS NOT NULL AND (obter_dados_usuario_opcao(b.nm_usuario_grupo,'C'))::text <> '')
	AND	b.nr_seq_grupo = nr_seq_grupo_usuario_w;


BEGIN
	
cd_estabelecimento_w    := wheb_usuario_pck.get_cd_estabelecimento;
cd_setor_atend_pac_w	:= cd_setor_atendimento_p;
ds_maquina_w 			:= SUBSTR(obter_inf_sessao(0),1,80);
cd_convenio_w			:= coalesce(obter_convenio_atendimento(nr_atendimento_p), 0);

SELECT	ds_titulo,
	ds_mensagem
INTO STRICT	ds_titulo_w,
	ds_mensagem_aux_w
FROM	ev_evento
WHERE	nr_sequencia	= nr_seq_evento_p;

SELECT 	COUNT(1)
INTO STRICT	qt_aux_w
FROM	ev_evento_regra_dest
WHERE 	nr_seq_evento	= nr_seq_evento_p;

nm_paciente_w		   	:= SUBSTR(obter_nome_pf(cd_pessoa_fisica_p),1,60);
ds_unidade_w 		   	:= SUBSTR(obter_unidade_atendimento(nr_atendimento_p,'A','U'),1,60);
nr_ramal_w   		   	:= SUBSTR(obter_unidade_atendimento(nr_atendimento_p,'A','RA'),1,60);
nr_telefone_w		   	:= SUBSTR(obter_unidade_atendimento(nr_atendimento_p,'A','TL'),1,60);
ds_setor_atendimento_w 	:= SUBSTR(obter_unidade_atendimento(nr_atendimento_p,'A','S'),1,60);
cd_cid_w		   		:= SUBSTR(obter_cid_atendimento(nr_atendimento_p, 'P'),1,10);
dt_nascimento_w			:= SUBSTR(obter_dados_pf(cd_pessoa_fisica_p, 'DN'),1,100);

IF (coalesce(cd_setor_atendimento_p,0) > 0) THEN
	SELECT	SUBSTR(ds_setor_atendimento,1,60)
	INTO STRICT	ds_unidade_setor_w
	FROM	setor_atendimento
	WHERE 	cd_setor_atendimento = cd_setor_atendimento_p;
END IF;

SELECT	MAX(obter_nome_tipo_atend(ie_tipo_atendimento)),
	MAX(ds_senha)
INTO STRICT	ds_tipo_atendimento_w,
	ds_senha_atend_w
FROM	atendimento_paciente
WHERE	nr_atendimento	= nr_atendimento_p;

SELECT	CASE WHEN COUNT(*)=0 THEN 'N'  ELSE 'S' END
INTO STRICT	ie_existe_regra_proc_w
FROM	regra_envio_sms_proc a, regra_envio_sms b
WHERE	a.nr_seq_regra = b.nr_sequencia
AND		b.nr_seq_evento = nr_seq_evento_p
and 	b.cd_estabelecimento = cd_estabelecimento_w;

SELECT	CASE WHEN COUNT(*)=0 THEN 'N'  ELSE 'S' END
INTO STRICT	ie_existe_regra_medic_w
FROM	regra_envio_sms_material a, regra_envio_sms b
WHERE	a.nr_seq_regra = b.nr_sequencia
AND		b.nr_seq_evento = nr_seq_evento_p
and 	b.cd_estabelecimento = cd_estabelecimento_w;

SELECT	CASE WHEN COUNT(*)=0 THEN 'N'  ELSE 'S' END
INTO STRICT	ie_existe_regra_rec_w
FROM	regra_envio_sms_rec a, regra_envio_sms b
WHERE	a.nr_seq_regra = b.nr_sequencia
AND		b.nr_seq_evento = nr_seq_evento_p
and 	b.cd_estabelecimento = cd_estabelecimento_w;

ds_mensagem_aux_ww := '';
nr_sequencia_w     := 0;

OPEN C05;
LOOP
FETCH C05 INTO	
	ds_exames_w,
	ds_proc_solicitacao_w,
	ds_executores_w,
	dt_prev_execucao_w,
	ie_ordem_w,
	ds_medicamento_w,
	ds_recomendacao_w;
EXIT WHEN NOT FOUND; /* apply on C05 */
	BEGIN

	--OS 748329

	--Se ja entrou no cursor com outro ie_ordem nao precisa continuar.
	IF (ie_entrou_cursor_w) AND (ie_ordem_w = 6) THEN		
		EXIT;					
	END IF;
		
	IF (ie_ordem_w <> 6) THEN
		ie_entrou_cursor_w := TRUE;
	END IF;
	--Fim OS 748329
	ds_mensagem_w := ds_mensagem_aux_w;
	
	ds_mensagem_w	:= SUBSTR(REPLACE_macro(ds_mensagem_w,'@paciente',nm_paciente_w),1,4000);
	ds_mensagem_w	:= SUBSTR(REPLACE_macro(ds_mensagem_w,'@atendimento',nr_atendimento_p),1,4000);
	ds_mensagem_w	:= SUBSTR(REPLACE_macro(ds_mensagem_w,'@ramal',nr_ramal_w),1,4000);
	ds_mensagem_w	:= SUBSTR(REPLACE_macro(ds_mensagem_w,'@telefone',nr_telefone_w),1,4000);
	ds_mensagem_w	:= SUBSTR(REPLACE_macro(ds_mensagem_w,'@prescricao',nr_prescricao_p),1,4000);
	ds_mensagem_w	:= SUBSTR(REPLACE_macro(ds_mensagem_w,'@tipo_atendimento',SUBSTR(ds_tipo_atendimento_w,1,80)),1,4000);
	ds_mensagem_w	:= SUBSTR(REPLACE_macro(ds_mensagem_w,'@senha_atend',ds_senha_atend_w),1,4000);
	ds_mensagem_w	:= SUBSTR(REPLACE_macro(ds_mensagem_w,'@executor',ds_executores_w),1,4000);
	ds_mensagem_w	:= SUBSTR(REPLACE_macro(ds_mensagem_w,'@ds_exame',ds_exames_w),1,4000);
	ds_mensagem_w   := SUBSTR(REPLACE_macro(ds_mensagem_w,'@ds_proc_solicitacao',ds_proc_solicitacao_w),1,4000);
	ds_mensagem_w   := SUBSTR(REPLACE_macro(ds_mensagem_w,'@dt_prev_execucao',dt_prev_execucao_w),1,4000);
	ds_mensagem_w   := SUBSTR(REPLACE_macro(ds_mensagem_w,'@medicamento',ds_medicamento_w),1,4000);
    ds_mensagem_w   := SUBSTR(REPLACE_macro(ds_mensagem_w,'@recomendacao',ds_recomendacao_w),1,4000);	
	ds_mensagem_w   := SUBSTR(REPLACE_macro(ds_mensagem_w,'@convenio',obter_desc_convenio(obter_convenio_atendimento(nr_atendimento_p))),1,4000);
	ds_mensagem_w	:= SUBSTR(REPLACE_macro(ds_mensagem_w,'@data_hora_atual',PKG_DATE_FORMATERS.TO_VARCHAR(clock_timestamp(),'timestamp', cd_estabelecimento_w, nm_usuario_p)),1,4000);
	ds_mensagem_w	:= SUBSTR(REPLACE_macro(ds_mensagem_w,'@nascimento',dt_nascimento_w),1,4000);
	ds_mensagem_w	:= SUBSTR(REPLACE_macro(ds_mensagem_w,'@set_unidade',ds_unidade_setor_w),1,4000);
  ds_mensagem_w  := substr(replace_macro(ds_mensagem_w,'@nomeusuario',obter_nome_usuario(nm_usuario_p)),1,4000);
  ds_mensagem_w  := substr(replace_macro(ds_mensagem_w,'@med_resp',obter_medico_resp_atend(nr_atendimento_p, 'N')),1,4000);
	
	
	IF (position('@usuario' in ds_mensagem_w) > 0 ) THEN

	SELECT	SUBSTR(MAX(ds_usuario),1,60)
	INTO STRICT	ds_usuario_w
	FROM	usuario
	WHERE	nm_usuario = nm_usuario_p;

	ds_mensagem_w	:= SUBSTR(REPLACE_macro(ds_mensagem_w,'@usuario',ds_usuario_w),1,4000);

	END IF;

	IF (nr_seq_unidade_p IS NOT NULL AND nr_seq_unidade_p::text <> '') THEN
		BEGIN
		ds_mensagem_w	:= SUBSTR(REPLACE_macro(ds_mensagem_w,'@quarto',ds_unidade_ww),1,4000);
		ds_mensagem_w	:= SUBSTR(REPLACE_macro(ds_mensagem_w,'@setor',ds_setor_atendimento_ww),1,4000);
		END;
	ELSE
		BEGIN
		ds_mensagem_w	:= SUBSTR(REPLACE_macro(ds_mensagem_w,'@quarto',ds_unidade_w),1,4000);
		ds_mensagem_w	:= SUBSTR(REPLACE_macro(ds_mensagem_w,'@setor',ds_setor_atendimento_w),1,4000);
	END;
	END IF;

	ds_mensagem_w	:= SUBSTR(REPLACE_macro(ds_mensagem_w,'@cd_cid',cd_cid_w),1,4000);
	ds_mensagem_w	:= SUBSTR(REPLACE_macro(ds_mensagem_w,'@ds_cid',ds_cid_w),1,4000);

	ie_existe_regra_proc_w := lab_obter_se_regra_proced_evt(nr_seq_evento_p, nr_prescricao_p, NULL);

	IF (ds_mensagem_w <> ds_mensagem_aux_ww) OR (nr_sequencia_w = 0) THEN

		SELECT	nextval('ev_evento_paciente_seq')
		INTO STRICT	nr_sequencia_w
		;

		INSERT INTO ev_evento_paciente(
										nr_sequencia,
										nr_seq_evento,
										dt_atualizacao,
										nm_usuario,
										dt_atualizacao_nrec,
										nm_usuario_nrec,
										cd_pessoa_fisica,
										nr_atendimento,
										ds_titulo,
										ds_mensagem,
										ie_status,
										ds_maquina,
										dt_evento,
										dt_liberacao)
								VALUES (	
										nr_sequencia_w,
										nr_seq_evento_p,
										clock_timestamp(),
										nm_usuario_p,
										clock_timestamp(),
										nm_usuario_p,
										cd_pessoa_fisica_p,
										nr_atendimento_p,
										ds_titulo_w,
										ds_mensagem_w,
										'G',
										ds_maquina_w,
										clock_timestamp(),
										clock_timestamp());
			
			OPEN C01;
			LOOP
			FETCH C01 INTO
				ie_forma_ev_w,
				ie_pessoa_destino_w,
				cd_pf_destino_w,
				ie_usuario_aceite_w,
				cd_setor_atendimento_w,
				cd_perfil_w,
				nm_usuario_c01_w,
				ds_email_fixo_w,
				nr_seq_grupo_usuario_w;
			EXIT WHEN NOT FOUND; /* apply on C01 */
				BEGIN

				IF (ie_pessoa_destino_w = '1') THEN /* Medico do atendimento */
					BEGIN
					SELECT	MAX(cd_medico_atendimento)
					INTO STRICT	cd_pessoa_regra_w
					FROM	atendimento_paciente
					WHERE	nr_atendimento	= nr_atendimento_p;
					END;
				ELSIF (ie_pessoa_destino_w = '2') THEN /*Medico responsevel pelo paciente*/
					BEGIN
					SELECT	MAX(cd_medico_resp)
					INTO STRICT	cd_pessoa_regra_w
					FROM	atendimento_paciente
					WHERE	nr_atendimento	= nr_atendimento_p;
					END;
				ELSIF (ie_pessoa_destino_w = '4') THEN /*Medico referido*/
					BEGIN
					SELECT	MAX(cd_medico_referido)
					INTO STRICT	cd_pessoa_regra_w
					FROM	atendimento_paciente
					WHERE	nr_atendimento	= nr_atendimento_p;
					END;
				ELSIF (ie_pessoa_destino_w = '5') OR (ie_pessoa_destino_w = '12') THEN /*Pessoa fixa ou Usuario fixo*/
					cd_pessoa_regra_w	:= cd_pf_destino_w;	
				ELSIF (ie_pessoa_destino_w = '22') THEN
					INSERT INTO ev_evento_pac_destino(
						nr_sequencia,                              --1
						nr_seq_ev_pac,                             --2
						dt_atualizacao,                            --3
						nm_usuario,                                --4
						dt_atualizacao_nrec,                       --5
						nm_usuario_nrec,                           --6
						cd_pessoa_fisica,                          --7
						ie_forma_ev,                               --8
						ie_status,                                 --9
						dt_ciencia,                                --10
						dt_evento,                                 --11
						ds_email_fixo,
						ie_pessoa_destino)                              --12
					VALUES (	
						nextval('ev_evento_pac_destino_seq'),     	   --1
						nr_sequencia_w,                            --2
						clock_timestamp(),                                   --3
						nm_usuario_p,                              --4
						clock_timestamp(),                                   --5
						nm_usuario_p,                              --6
						cd_pf_destino_w,                       --7
						ie_forma_ev_w,                             --8
						'G',                                       --9
						NULL,                                      --10
						clock_timestamp(),                                   --11
						ds_email_fixo_w,
						ie_pessoa_destino_w);                          --12
				ELSIF (ie_pessoa_destino_w = '24') THEN /*Medico executor*/
					BEGIN
					OPEN C04;
					LOOP
					FETCH C04 INTO	
						cd_pessoa_regra_w;
					EXIT WHEN NOT FOUND; /* apply on C04 */
						BEGIN
						ie_excecao_alerta_pessoa_w := obter_excecao_alerta(nr_seq_evento_p, cd_pessoa_regra_w, ie_forma_ev_w);
						IF (coalesce(ie_excecao_alerta_pessoa_w,'N') = 'N') THEN	
							INSERT INTO ev_evento_pac_destino(
								nr_sequencia,
								nr_seq_ev_pac,
								dt_atualizacao,
								nm_usuario,
								dt_atualizacao_nrec,
								nm_usuario_nrec,
								cd_pessoa_fisica,
								ie_forma_ev,
								ie_status,
								dt_ciencia,
								nm_usuario_Dest,
								ie_pessoa_destino,
								dt_evento)
							VALUES (	nextval('ev_evento_pac_destino_seq'),
								nr_sequencia_w,
								clock_timestamp(),
								nm_usuario_p,
								clock_timestamp(),
								nm_usuario_p,
								cd_pessoa_regra_w,
								ie_forma_ev_w,
								'G',

								NULL,
								nm_usuario_destino_w,
								ie_pessoa_destino_w,
								clock_timestamp());
						END IF;		

						END;
					END LOOP;
					CLOSE C04;
					
					END;
				
				elsif (ie_pessoa_destino_w = '19') then
	
					cd_pessoa_regra_w	:= obter_pessoa_atendimento(nr_atendimento_p,'C');
		
					if (cd_pessoa_regra_w IS NOT NULL AND cd_pessoa_regra_w::text <> '') then
						ie_excecao_alerta_pessoa_w := obter_excecao_alerta(nr_seq_evento_p, cd_pessoa_regra_w, ie_forma_ev_w);
						if (coalesce(ie_excecao_alerta_pessoa_w,'N') = 'N') then
		
							SELECT	MAX(obter_compl_pf(cd_pessoa_regra_w,1,'M'))
							INTO STRICT	ds_email_destino_19_w
							;
		
							if (coalesce(ds_email_destino_19_w::text, '') = '') then
								SELECT	MAX(obter_compl_pf(cd_pessoa_regra_w,2,'M'))
								INTO STRICT	ds_email_destino_19_w
								;
							end if;
		
							insert into ev_evento_pac_destino(nr_sequencia,
								nr_seq_ev_pac,
								dt_atualizacao,
								nm_usuario,
								dt_atualizacao_nrec,
								nm_usuario_nrec,
								cd_pessoa_fisica,
								ie_forma_ev,
								ie_status,
								dt_ciencia,
								ie_pessoa_destino,
								dt_evento,
								ds_email_fixo)
							values (nextval('ev_evento_pac_destino_seq'),
								nr_sequencia_w,
								clock_timestamp(),
								nm_usuario_p,
								clock_timestamp(),
								nm_usuario_p,
								cd_pessoa_regra_w,
								ie_forma_ev_w,
								'G',
								null,
								ie_pessoa_destino_w,
								clock_timestamp(),
								ds_email_destino_19_w);
						end if;
					end if;
				end if;
				IF ((cd_pf_destino_w IS NOT NULL AND cd_pf_destino_w::text <> '' AND cd_pf_destino_w <> 0) OR
					(nm_usuario_c01_w IS NOT NULL AND nm_usuario_c01_w::text <> '' AND ie_pessoa_destino_w = 12)) THEN			


					IF (coalesce(nm_usuario_c01_w,'') = '') THEN
						nm_usuario_c01_w 	:= NULL;
					END IF;
					
					IF (cd_pf_destino_w IS NOT NULL AND cd_pf_destino_w::text <> '' AND cd_pf_destino_w <> 0) THEN
						cd_pessoa_regra_w 	:= cd_pf_destino_w;
					END IF;
					
					ie_excecao_alerta_pessoa_w := obter_excecao_alerta(nr_seq_evento_p, cd_pessoa_regra_w, ie_forma_ev_w);
					
					IF (coalesce(ie_excecao_alerta_pessoa_w,'N') = 'N') THEN		
						INSERT INTO ev_evento_pac_destino(
							nr_sequencia,
							nr_seq_ev_pac,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							cd_pessoa_fisica,
							ie_forma_ev,
							ie_status,
							dt_ciencia,
							ie_pessoa_destino,
							dt_evento,
							nm_usuario_dest)
						VALUES (	nextval('ev_evento_pac_destino_seq'),
							nr_sequencia_w,
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							cd_pessoa_regra_w,
							ie_forma_ev_w,
							'G',
							NULL,
							ie_pessoa_destino_w,
							clock_timestamp(),
							nm_usuario_c01_w);
					END IF;		
						
				END IF;
				
				IF (ie_forma_ev_w IN (1,2,3,4)) THEN
					OPEN C02;
					LOOP
					FETCH C02 INTO
						cd_pessoa_regra_w;
					EXIT WHEN NOT FOUND; /* apply on C02 */
						BEGIN
						ie_excecao_alerta_pessoa_w := obter_excecao_alerta(nr_seq_evento_p, cd_pessoa_regra_w, ie_forma_ev_w);
						IF (coalesce(ie_excecao_alerta_pessoa_w,'N') = 'N') THEN	
							INSERT INTO ev_evento_pac_destino(
								nr_sequencia,
								nr_seq_ev_pac,
								dt_atualizacao,
								nm_usuario,
								dt_atualizacao_nrec,
								nm_usuario_nrec,
								cd_pessoa_fisica,
								ie_forma_ev,
								ie_status,
								dt_ciencia,
								ie_pessoa_destino,
								dt_evento)
							VALUES (	nextval('ev_evento_pac_destino_seq'),
								nr_sequencia_w,
								clock_timestamp(),
								nm_usuario_p,
								clock_timestamp(),
								nm_usuario_p,
								cd_pessoa_regra_w,
								ie_forma_ev_w,
								'G',
								NULL,
								ie_pessoa_destino_w,
								clock_timestamp());
						END IF;		
						END;
					END LOOP;
					CLOSE C02;
													
					OPEN C03;
					LOOP
					FETCH C03 INTO
						cd_pessoa_regra_w,
						nm_usuario_destino_w;
					EXIT WHEN NOT FOUND; /* apply on C03 */
						BEGIN		
						ie_excecao_alerta_pessoa_w := obter_excecao_alerta(nr_seq_evento_p, cd_pessoa_regra_w, ie_forma_ev_w);
						IF (coalesce(ie_excecao_alerta_pessoa_w,'N') = 'N') THEN	
							INSERT INTO ev_evento_pac_destino(
								nr_sequencia,
								nr_seq_ev_pac,
								dt_atualizacao,
								nm_usuario,
								dt_atualizacao_nrec,
								nm_usuario_nrec,
								cd_pessoa_fisica,
								ie_forma_ev,
								ie_status,
								dt_ciencia,
								nm_usuario_Dest,
								ie_pessoa_destino,
								dt_evento)
							VALUES (	nextval('ev_evento_pac_destino_seq'),
								nr_sequencia_w,
								clock_timestamp(),
								nm_usuario_p,
								clock_timestamp(),
								nm_usuario_p,
								cd_pessoa_regra_w,
								ie_forma_ev_w,
								'G',

								NULL,
								nm_usuario_destino_w,
								ie_pessoa_destino_w,
								clock_timestamp());
						END IF;		
						END;
					END LOOP;
					CLOSE C03;
					
					OPEN C09;
					LOOP
					FETCH C09 INTO
						cd_pessoa_regra_w;
					EXIT WHEN NOT FOUND; /* apply on C09 */
						BEGIN
						IF (cd_pessoa_regra_w IS NOT NULL AND cd_pessoa_regra_w::text <> '') THEN
							ie_excecao_alerta_pessoa_w := obter_excecao_alerta(nr_seq_evento_p, cd_pessoa_regra_w, ie_forma_ev_w);
							--Nao possui excecao entao gravar normalmente o alerta (excecao = pessoa nao quer receber alerta)
							IF (coalesce(ie_excecao_alerta_pessoa_w,'N') = 'N') THEN								
								INSERT INTO ev_evento_pac_destino(
									nr_sequencia,
									nr_seq_ev_pac,
									dt_atualizacao,
									nm_usuario,
									dt_atualizacao_nrec,
									nm_usuario_nrec,
									cd_pessoa_fisica,
									ie_forma_ev,
									ie_status,
									dt_ciencia,
									nm_usuario_Dest,
									ie_pessoa_destino,
									dt_evento)
								VALUES (	nextval('ev_evento_pac_destino_seq'),
									nr_sequencia_w,
									clock_timestamp(),
									nm_usuario_p,
									clock_timestamp(),
									nm_usuario_p,
									cd_pessoa_regra_w,
									ie_forma_ev_w,
									'G',
									NULL,
									nm_usuario_destino_w,
									ie_pessoa_destino_w,
									clock_timestamp());
								END IF;
						END IF;
						END;
					END LOOP;
					CLOSE C09;
				END IF;
				END;
			END LOOP;
			CLOSE C01;	
	  	ds_mensagem_aux_ww := ds_mensagem_w;			
		END IF;	
	END;
END LOOP;
CLOSE C05;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_evento_liberar_prescr (nr_seq_evento_p bigint, nr_atendimento_p bigint, cd_pessoa_fisica_p text, nm_usuario_p text, nr_seq_unidade_p text, cd_setor_atendimento_p bigint, nr_prescricao_p bigint) FROM PUBLIC;

