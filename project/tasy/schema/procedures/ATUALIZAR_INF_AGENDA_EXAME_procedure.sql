-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualizar_inf_agenda_exame (cd_tipo_agenda_p bigint, cd_agenda_p bigint, nr_seq_agenda_p bigint, ie_convenio_p text, ie_categoria_p text, ie_plano_p text, ie_codigo_usuario_p text, ie_validade_p text, ie_guia_p text, nm_usuario_p text) AS $body$
DECLARE


nr_sequencia_w		agenda_paciente.nr_sequencia%type;
cd_agenda_w		bigint;
cd_pessoa_fisica_w	varchar(10);
nm_paciente_w		varchar(60);
dt_agenda_w		timestamp;
hr_inicio_origem_w	char(16);
hr_inicio_destino_w	timestamp;
cd_convenio_w		integer;
cd_categoria_w		varchar(10);
cd_plano_w		varchar(10);
cd_usuario_convenio_w	varchar(30);
dt_validade_carteira_w	timestamp;
nr_doc_convenio_w	varchar(20);		

/* variaveis historico */

atrib_oldvalue_w	varchar(50);
atrib_newvalue_w	varchar(50);
		
C01 CURSOR FOR
SELECT	nr_sequencia,
	cd_agenda,
	hr_inicio
from	agenda_paciente
where	cd_pessoa_fisica	= cd_pessoa_fisica_w
and	trunc(dt_agenda)	= trunc(dt_agenda_w)
and	nr_sequencia		<> nr_seq_agenda_p
and	ie_status_agenda not in ('C','B','F','I','E','O');


 

BEGIN

if (ie_convenio_p = 'S') or (ie_categoria_p = 'S') or (ie_plano_p = 'S') or (ie_codigo_usuario_p = 'S') or (ie_validade_p = 'S') or (ie_guia_p = 'S') then

	select	cd_pessoa_fisica,
		dt_agenda,
		to_char(hr_inicio,'dd/mm/yyyy hh24:mi'),
		nm_paciente,
		cd_convenio,
		cd_categoria,
		cd_plano,
		cd_usuario_convenio,
		dt_validade_carteira,
		nr_doc_convenio
	into STRICT	cd_pessoa_fisica_w,
		dt_agenda_w,
		hr_inicio_origem_w,
		nm_paciente_w,
		cd_convenio_w,
		cd_categoria_w,
		cd_plano_w,
		cd_usuario_convenio_w,
		dt_validade_carteira_w,
		nr_doc_convenio_w
	from	agenda_paciente
	where	nr_sequencia	= nr_seq_agenda_p;

	open c01;
	loop
	fetch c01 into
		nr_sequencia_w,
		cd_agenda_w,
		hr_inicio_destino_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		
		update	agenda_paciente
		set	cd_convenio		= CASE WHEN ie_convenio_p='S' THEN  cd_convenio_w  ELSE cd_convenio END ,
			cd_categoria		= CASE WHEN ie_categoria_p='S' THEN  cd_categoria_w  ELSE cd_categoria END ,
			cd_plano		= CASE WHEN ie_plano_p='S' THEN  cd_plano_w  ELSE cd_plano END ,
			cd_usuario_convenio	= CASE WHEN ie_codigo_usuario_p='S' THEN  cd_usuario_convenio_w  ELSE cd_usuario_convenio END ,
			dt_validade_carteira	= CASE WHEN ie_validade_p='S' THEN  dt_validade_carteira_w  ELSE dt_validade_carteira END ,
			nr_doc_convenio		= CASE WHEN ie_guia_p='S' THEN  nr_doc_convenio_w  ELSE nr_doc_convenio END ,
			nm_usuario		= nm_usuario_p
		where	nr_sequencia		= nr_sequencia_w;
		
		/* gerar historico */

		atrib_oldvalue_w := substr(obter_nome_agenda(cd_agenda_p),1,50);
		atrib_newvalue_w := substr(obter_nome_agenda(cd_agenda_w),1,50);

		CALL gerar_agenda_paciente_hist(cd_agenda_w,nr_sequencia_w,'INF',nm_usuario_p, wheb_mensagem_pck.get_texto(800293) || ' ('
					|| nr_seq_agenda_p || ' - ' || hr_inicio_origem_w ||')',
					cd_pessoa_fisica_w,nm_paciente_w, hr_inicio_destino_w, obter_perfil_ativo);
		end;
	end loop;
	close C01;

	commit;

end if;
	
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualizar_inf_agenda_exame (cd_tipo_agenda_p bigint, cd_agenda_p bigint, nr_seq_agenda_p bigint, ie_convenio_p text, ie_categoria_p text, ie_plano_p text, ie_codigo_usuario_p text, ie_validade_p text, ie_guia_p text, nm_usuario_p text) FROM PUBLIC;

