-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_lote_camara_comp ( nr_seq_lote_fatura_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_fatura_w		bigint;
nr_seq_lote_camara_w	bigint;
dt_lote_w		timestamp;
nr_seq_camara_w		bigint;
nr_seq_periodo_w	bigint;
tx_administrativa_w	double precision;
dt_periodo_inicial_w	timestamp;
dt_periodo_final_w	timestamp;
vl_desc_benefic_custo_w	double precision;


c01 CURSOR FOR
SELECT	a.nr_fatura
from	ptu_fatura a
where	a.nr_seq_lote	= nr_seq_lote_fatura_p;


BEGIN

if (nr_seq_lote_fatura_p IS NOT NULL AND nr_seq_lote_fatura_p::text <> '') then
	select	a.dt_geracao_lote,
		a.nr_seq_camara,
		a.nr_seq_periodo,
		a.dt_inicio,
		a.dt_fim
	into STRICT	dt_lote_w,
		nr_seq_camara_w,
		nr_seq_periodo_w,
		dt_periodo_inicial_w,
		dt_periodo_final_w
	from	ptu_lote_fatura_envio a
	where	a.nr_sequencia	= nr_seq_lote_fatura_p;

	if (coalesce(nr_seq_camara_w::text, '') = '') or (coalesce(nr_seq_periodo_w::text, '') = '') then
		-- Não é possível gerar câmara, não foi informado a câmara ou o lote.
		CALL wheb_mensagem_pck.exibir_mensagem_abort(266796);
	end if;

	select	coalesce(max(a.tx_administrativa),0),
		coalesce(max(vl_desc_benefic_custo),0)
	into STRICT	tx_administrativa_w,
		vl_desc_benefic_custo_w
	from	pls_camara_compensacao a
	where	a.nr_sequencia	= nr_seq_camara_w;

	select	nextval('pls_lote_camara_comp_seq')
	into STRICT	nr_seq_lote_camara_w
	;

	insert into pls_lote_camara_comp(nr_sequencia,
		nm_usuario,
		dt_atualizacao,
		nm_usuario_nrec,
		dt_atualizacao_nrec,
		dt_lote,
		nr_seq_camara,
		nr_seq_periodo,
		dt_periodo_inicial,
		dt_periodo_final,
		ie_tipo_data_cr,
		ie_tipo_data_cp,
		cd_estabelecimento,
		dt_geracao,
		tx_administrativa,
		vl_desc_benefic_custo)
	values (nr_seq_lote_camara_w,
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		dt_lote_w,
		nr_seq_camara_w,
		nr_seq_periodo_w,
		dt_periodo_inicial_w,
		dt_periodo_final_w,
		'E',
		'V',
		cd_estabelecimento_p,
		clock_timestamp(),
		tx_administrativa_w,
		vl_desc_benefic_custo_w);

	open c01;
	loop
	fetch c01 into
		nr_fatura_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		insert into pls_titulo_lote_camara(nr_sequencia,
			nm_usuario,
			dt_atualizacao,
			nm_usuario_nrec,
			dt_atualizacao_nrec,
			nr_seq_lote_camara,
			nr_titulo_receber,
			ie_tipo_inclusao,
			vl_baixado)
		values (nextval('pls_titulo_lote_camara_seq'),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nr_seq_lote_camara_w,
			nr_fatura_w,
			'A',
			0);
		end;
	end loop;
	close c01;

	update	ptu_lote_fatura_envio
	set	nr_seq_lote_camara	= nr_seq_lote_camara_w,
		dt_integracao_camara	= clock_timestamp()
	where	nr_sequencia		= nr_seq_lote_fatura_p;

	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_lote_camara_comp ( nr_seq_lote_fatura_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

