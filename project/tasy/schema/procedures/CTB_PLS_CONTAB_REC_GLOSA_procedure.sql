-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ctb_pls_contab_rec_glosa ( nr_lote_contabil_p bigint, nm_usuario_p text, ie_exclusao_p text, ds_retorno_p INOUT text) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Contabilizar as informacoes provenientes da producao medica
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta: 
[  ]  Objetos do dicionario [ X ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atencao:
-------------------------------------------------------------------------------------------------------------------
Referencias:
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
ds_conteudo_w			varchar(4000);
ds_item_w			varchar(255);
nm_prestador_w			varchar(255);
ds_compl_historico_w		varchar(255);
ds_compl_historico_ww		varchar(255);
ds_tributo_w			varchar(255);
nm_agrupador_w			varchar(255);
nm_prestador_pgto_w		varchar(255);
cd_pessoa_fisica_w		varchar(20);
cd_cgc_prestador_w		varchar(14);
cd_cpf_prestador_w		varchar(11);
ie_tipo_item_w			varchar(10);
ie_compl_hist_w			varchar(2);
ie_regulamentacao_w		varchar(2);
ie_centro_custo_w		varchar(1);
ie_provisao_producao_w		varchar(1);
nr_nota_fiscal_w		numeric(20);
nr_seq_w_movto_cont_w		bigint;
nr_seq_prestador_w		bigint;
nr_seq_protocolo_w		bigint;
nr_seq_regra_cc_w		bigint;
qt_compl_hist_w			bigint;
nr_seq_mvto_sem_conta_w		bigint;
nr_tit_pagar_origem_w		bigint;
nr_tit_receber_origem_w		bigint;
nr_adiant_pago_origem_w		bigint;
nr_titulo_pagar_w		bigint;
nr_titulo_receber_w		bigint;
nr_titulo_pag_trib_w		bigint;
nr_seq_lote_w			bigint;
nr_seq_agrupamento_w		w_movimento_contabil.nr_seq_agrupamento%type;
cd_centro_custo_w		integer;
cd_centro_custo_fixo_w		integer;
cd_estabelecimento_w		smallint;
dt_referencia_w			timestamp;
dt_referencia_mes_ant_w		timestamp;
dt_mes_competencia_w		timestamp;
nm_agrupador_reversao_w		varchar(255);
dt_ref_inicial_w		timestamp;
dt_ref_final_w			timestamp;
nr_seq_info_ctb_w		informacao_contabil.nr_sequencia%type;
cd_tipo_lote_contabil_w		lote_contabil.cd_tipo_lote_contabil%type;
nr_lote_param_w			pls_lote_pagamento.nr_sequencia%type;
ie_gera_reversao_lote_w		lote_contabil_parametro.ds_valor_parametro%type;
cd_cpf_prestador_pag_w		pessoa_fisica.nr_cpf%type;
cd_cgc_prestador_pag_w		pessoa_juridica.cd_cgc%type;
cd_cgc_cpf_prest_pagto_w	varchar(14);

qt_commit_w			bigint;
qt_lote_prod_w			bigint;
ie_data_lote_prod_med_w		pls_parametro_contabil.ie_data_lote_prod_med%type;
ie_status_prov_pagto_w		pls_parametro_contabil.ie_status_prov_pagto%type;
cd_conta_contabil_w		conta_contabil.cd_conta_contabil%type;
ie_tipo_movimento_w		varchar(1);

c_rec_glosa CURSOR FOR
	SELECT	'P' ie_proc_mat, /*Procedimento*/
		'A' ie_tipo_movimento, /*Apresentacao*/
		e.nr_sequencia nr_seq_item,
		c.nr_sequencia nr_seq_proc_mat,
		b.nr_sequencia nr_seq_conta,
		c.cd_procedimento,
		c.ie_origem_proced,
		null nr_seq_material,
		e.cd_conta_deb_apres cd_conta_deb,
		e.cd_conta_cred_apres cd_conta_cred,
		e.cd_historico_apres cd_historico,
		e.nr_seq_grupo_ans,
		coalesce(e.vl_liberado,0) + coalesce(e.vl_glosa,0) vl_contabil,
		'PLS_CONTA_REC_RESUMO_ITEM' nm_tabela,
		'VL_APRESENTADO' nm_atributo,
		trunc(g.dt_apresentacao_lote) dt_movimento,
		b.nr_seq_segurado,
		b.nr_seq_prot_conta,
		e.nr_seq_lote_pgto,
		e.nr_seq_pp_lote,
		null nr_nota_fiscal,
		b.nr_seq_plano,
		e.nr_seq_prestador_pgto,
		g.nr_sequencia nr_protocolo_glosa,
		e.nr_lote_contabil,
		e.nr_lote_contabil_pag,
		e.nr_lote_contabil_apres,
		e.nr_lote_contabil_cancel,
		f.dt_cancelamento,
		b.nr_seq_prestador_exec nr_seq_prestador_exec,
		b.nr_seq_prestador nr_seq_prestador_solic,
		a.nr_seq_prestador nr_seq_prestador_atend
	from	pls_protocolo_conta		a,
		pls_conta			b,
		pls_conta_proc			c,
		pls_rec_glosa_proc		d,
		pls_conta_rec_resumo_item	e,
		pls_rec_glosa_conta 		f,
		pls_rec_glosa_protocolo		g
	where	a.nr_sequencia			= b.nr_seq_protocolo
	and	b.nr_sequencia			= c.nr_seq_conta
	and	c.nr_sequencia			= d.nr_seq_conta_proc
	and	d.nr_sequencia			= e.nr_seq_proc_rec
	and	f.nr_sequencia			= e.nr_seq_conta_rec
	and	g.nr_sequencia			= f.nr_seq_protocolo
	and (e.nr_lote_contabil_apres 	= nr_lote_contabil_p
	or	e.nr_lote_contabil_cancel	= nr_lote_contabil_p)
	
union all

	SELECT	'M' ie_proc_mat, /*Material*/
		'A' ie_tipo_movimento, /*Apresentacao*/
		e.nr_sequencia nr_seq_item,
		c.nr_sequencia nr_seq_proc_mat,
		b.nr_sequencia nr_seq_conta,
		null cd_procedimento,
		null ie_origem_proced,
		c.nr_seq_material,
		e.cd_conta_deb_apres cd_conta_deb,
		e.cd_conta_cred_apres cd_conta_cred,
		e.cd_historico_apres cd_historico,
		e.nr_seq_grupo_ans,
		coalesce(e.vl_liberado,0) + coalesce(e.vl_glosa,0) vl_contabil,
		'PLS_CONTA_REC_RESUMO_ITEM' nm_tabela,
		'VL_APRESENTADO' nm_atributo,
		trunc(g.dt_apresentacao_lote) dt_movimento,
		b.nr_seq_segurado,
		b.nr_seq_prot_conta,
		e.nr_seq_lote_pgto,
		e.nr_seq_pp_lote,
		c.nr_nota_fiscal,
		b.nr_seq_plano,
		e.nr_seq_prestador_pgto,
		g.nr_sequencia nr_protocolo_glosa,
		e.nr_lote_contabil,
		e.nr_lote_contabil_pag,
		e.nr_lote_contabil_apres,
		e.nr_lote_contabil_cancel,
		f.dt_cancelamento,
		b.nr_seq_prestador_exec nr_seq_prestador_exec,
		b.nr_seq_prestador nr_seq_prestador_solic,
		a.nr_seq_prestador nr_seq_prestador_atend
	from	pls_protocolo_conta		a,
		pls_conta			b,
		pls_conta_mat			c,
		pls_rec_glosa_mat		d,
		pls_conta_rec_resumo_item	e,
		pls_rec_glosa_conta 		f,
		pls_rec_glosa_protocolo		g
	where	a.nr_sequencia			= b.nr_seq_protocolo
	and	b.nr_sequencia			= c.nr_seq_conta
	and	c.nr_sequencia			= d.nr_seq_conta_mat
	and	d.nr_sequencia			= e.nr_seq_mat_rec
	and	f.nr_sequencia			= e.nr_seq_conta_rec
	and	g.nr_sequencia			= f.nr_seq_protocolo
	and (e.nr_lote_contabil_apres 	= nr_lote_contabil_p
	or	e.nr_lote_contabil_cancel	= nr_lote_contabil_p)
	
union all

	select	'P' ie_proc_mat, /*Procedimento*/
		'F' ie_tipo_movimento, /*Fechamento*/
		e.nr_sequencia nr_seq_item,
		c.nr_sequencia nr_seq_proc_mat,
		b.nr_sequencia nr_seq_conta,
		c.cd_procedimento,
		c.ie_origem_proced,
		null nr_seq_material,
		e.cd_conta_deb cd_conta_deb,
		e.cd_conta_cred cd_conta_cred,
		e.cd_historico cd_historico,
		e.nr_seq_grupo_ans,
		e.vl_glosa vl_contabil,
		'PLS_CONTA_REC_RESUMO_ITEM' nm_tabela,
		'VL_GLOSA' nm_atributo,
		trunc(g.dt_liberacao_pag) dt_movimento,
		b.nr_seq_segurado,
		b.nr_seq_prot_conta,
		e.nr_seq_lote_pgto,
		e.nr_seq_pp_lote,
		null nr_nota_fiscal,
		b.nr_seq_plano,
		e.nr_seq_prestador_pgto,
		g.nr_sequencia nr_protocolo_glosa,
		e.nr_lote_contabil,
		e.nr_lote_contabil_pag,
		e.nr_lote_contabil_apres,
		e.nr_lote_contabil_cancel,
		f.dt_cancelamento,
		b.nr_seq_prestador_exec nr_seq_prestador_exec,
		b.nr_seq_prestador nr_seq_prestador_solic,
		a.nr_seq_prestador nr_seq_prestador_atend
	from	pls_protocolo_conta		a,
		pls_conta			b,
		pls_conta_proc			c,
		pls_rec_glosa_proc		d,
		pls_conta_rec_resumo_item	e,
		pls_rec_glosa_conta 		f,
		pls_rec_glosa_protocolo		g
	where	a.nr_sequencia			= b.nr_seq_protocolo
	and	b.nr_sequencia			= c.nr_seq_conta
	and	c.nr_sequencia			= d.nr_seq_conta_proc
	and	d.nr_sequencia			= e.nr_seq_proc_rec
	and	f.nr_sequencia			= e.nr_seq_conta_rec
	and	g.nr_sequencia			= f.nr_seq_protocolo
	and (e.nr_lote_contabil 		= nr_lote_contabil_p
	or	e.nr_lote_contabil_cancel	= nr_lote_contabil_p)
	
union all

	select	'M' ie_proc_mat, /*Material*/
		'F' ie_tipo_movimento, /*Fechamento*/
		e.nr_sequencia nr_seq_item,
		c.nr_sequencia nr_seq_proc_mat,
		b.nr_sequencia nr_seq_conta,
		null cd_procedimento,
		null ie_origem_proced,
		c.nr_seq_material,
		e.cd_conta_deb cd_conta_deb,
		e.cd_conta_cred cd_conta_cred,
		e.cd_historico cd_historico,
		e.nr_seq_grupo_ans,
		e.vl_glosa vl_contabil,
		'PLS_CONTA_REC_RESUMO_ITEM' nm_tabela,
		'VL_GLOSA' nm_atributo,
		trunc(g.dt_liberacao_pag) dt_movimento,
		b.nr_seq_segurado,
		b.nr_seq_prot_conta,
		e.nr_seq_lote_pgto,
		e.nr_seq_pp_lote,
		null nr_nota_fiscal,
		b.nr_seq_plano,
		e.nr_seq_prestador_pgto,
		g.nr_sequencia nr_protocolo_glosa,
		e.nr_lote_contabil,
		e.nr_lote_contabil_pag,
		e.nr_lote_contabil_apres,
		e.nr_lote_contabil_cancel,
		f.dt_cancelamento,
		b.nr_seq_prestador_exec nr_seq_prestador_exec,
		b.nr_seq_prestador nr_seq_prestador_solic,
		a.nr_seq_prestador nr_seq_prestador_atend
	from	pls_protocolo_conta		a,
		pls_conta			b,
		pls_conta_mat			c,
		pls_rec_glosa_mat		d,
		pls_conta_rec_resumo_item	e,
		pls_rec_glosa_conta 		f,
		pls_rec_glosa_protocolo		g
	where	a.nr_sequencia			= b.nr_seq_protocolo
	and	b.nr_sequencia			= c.nr_seq_conta
	and	c.nr_sequencia			= d.nr_seq_conta_mat
	and	d.nr_sequencia			= e.nr_seq_mat_rec
	and	f.nr_sequencia			= e.nr_seq_conta_rec
	and	g.nr_sequencia			= f.nr_seq_protocolo
	and (e.nr_lote_contabil 		= nr_lote_contabil_p
	or	e.nr_lote_contabil_cancel	= nr_lote_contabil_p)
	
union all

	select	'P' ie_proc_mat, /*Procedimento*/
		'P' ie_tipo_movimento, /*Pagamento*/
		e.nr_sequencia nr_seq_item,
		c.nr_sequencia nr_seq_proc_mat,
		b.nr_sequencia nr_seq_conta,
		c.cd_procedimento,
		c.ie_origem_proced,
		null nr_seq_material,
		e.cd_conta_deb_pag cd_conta_deb,
		e.cd_conta_cred_pag cd_conta_cred,
		e.cd_historico_pag cd_historico,
		e.nr_seq_grupo_ans,
		e.vl_liberado vl_contabil,
		'PLS_CONTA_REC_RESUMO_ITEM' nm_tabela,
		'VL_PAGO' nm_atributo,
		trunc(g.dt_apresentacao_lote) dt_movimento,
		b.nr_seq_segurado,
		b.nr_seq_prot_conta,
		e.nr_seq_lote_pgto,
		e.nr_seq_pp_lote,
		null nr_nota_fiscal,
		b.nr_seq_plano,
		e.nr_seq_prestador_pgto,
		g.nr_sequencia nr_protocolo_glosa,
		e.nr_lote_contabil,
		e.nr_lote_contabil_pag,
		e.nr_lote_contabil_apres,
		e.nr_lote_contabil_cancel,
		f.dt_cancelamento,
		b.nr_seq_prestador_exec nr_seq_prestador_exec,
		b.nr_seq_prestador nr_seq_prestador_solic,
		a.nr_seq_prestador nr_seq_prestador_atend
	from	pls_protocolo_conta		a,
		pls_conta			b,
		pls_conta_proc			c,
		pls_rec_glosa_proc		d,
		pls_conta_rec_resumo_item	e,
		pls_rec_glosa_conta 		f,
		pls_rec_glosa_protocolo		g
	where	a.nr_sequencia			= b.nr_seq_protocolo
	and	b.nr_sequencia			= c.nr_seq_conta
	and	c.nr_sequencia			= d.nr_seq_conta_proc
	and	d.nr_sequencia			= e.nr_seq_proc_rec
	and	f.nr_sequencia			= e.nr_seq_conta_rec
	and	g.nr_sequencia			= f.nr_seq_protocolo
	and	((e.nr_lote_contabil_pag 	= nr_lote_contabil_p)
	or	(e.nr_lote_contabil_cancel	= nr_lote_contabil_p AND e.nr_lote_contabil_pag 	= nr_lote_contabil_p))
	
union all

	select	'M' ie_proc_mat, /*Material*/
		'P' ie_tipo_movimento, /*Pagamento*/
		e.nr_sequencia nr_seq_item,
		c.nr_sequencia nr_seq_proc_mat,
		b.nr_sequencia nr_seq_conta,
		null cd_procedimento,
		null ie_origem_proced,
		c.nr_seq_material,
		e.cd_conta_deb_pag cd_conta_deb,
		e.cd_conta_cred_pag cd_conta_cred,
		e.cd_historico_pag cd_historico,
		e.nr_seq_grupo_ans,
		e.vl_liberado vl_contabil,
		'PLS_CONTA_REC_RESUMO_ITEM' nm_tabela,
		'VL_PAGO' nm_atributo,
		trunc(g.dt_apresentacao_lote) dt_movimento,
		b.nr_seq_segurado,
		b.nr_seq_prot_conta,
		e.nr_seq_lote_pgto,
		e.nr_seq_pp_lote,
		c.nr_nota_fiscal,
		b.nr_seq_plano,
		e.nr_seq_prestador_pgto,
		g.nr_sequencia nr_protocolo_glosa,
		e.nr_lote_contabil,
		e.nr_lote_contabil_pag,
		e.nr_lote_contabil_apres,
		e.nr_lote_contabil_cancel,
		f.dt_cancelamento,
		b.nr_seq_prestador_exec nr_seq_prestador_exec,
		b.nr_seq_prestador nr_seq_prestador_solic,
		a.nr_seq_prestador nr_seq_prestador_atend
	from	pls_protocolo_conta		a,
		pls_conta			b,
		pls_conta_mat			c,
		pls_rec_glosa_mat		d,
		pls_conta_rec_resumo_item	e,
		pls_rec_glosa_conta 		f,
		pls_rec_glosa_protocolo		g
	where	a.nr_sequencia			= b.nr_seq_protocolo
	and	b.nr_sequencia			= c.nr_seq_conta
	and	c.nr_sequencia			= d.nr_seq_conta_mat
	and	d.nr_sequencia			= e.nr_seq_mat_rec
	and	f.nr_sequencia			= e.nr_seq_conta_rec
	and	g.nr_sequencia			= f.nr_seq_protocolo
	and	((e.nr_lote_contabil_pag 	= nr_lote_contabil_p)
	or	(e.nr_lote_contabil_cancel	= nr_lote_contabil_p AND e.nr_lote_contabil_pag 	= nr_lote_contabil_p));

c_rec_glosa_w c_rec_glosa%rowtype;

c_ie_tipo_movimento CURSOR FOR
	SELECT	'N'
	
	where	((c_rec_glosa_w.nr_lote_contabil = nr_lote_contabil_p)
	or (c_rec_glosa_w.nr_lote_contabil_pag = nr_lote_contabil_p)
	or (c_rec_glosa_w.nr_lote_contabil_apres = nr_lote_contabil_p))
	
union all

	SELECT	'C'
	
	where	c_rec_glosa_w.nr_lote_contabil_cancel = nr_lote_contabil_p;

c_deb_cred CURSOR FOR
	SELECT	'D' ie_debito_credito /*Debito*/
	
	
union all

	SELECT	'C' ie_debito_credito /*Credito*/
	;
	
c_deb_cred_w c_deb_cred%rowtype;
	

BEGIN
if (ie_exclusao_p = 'S') then
	CALL wheb_usuario_pck.set_ie_lote_contabil('S');
	
	update	pls_conta_rec_resumo_item
	set	nr_lote_contabil_apres	= 0
	where	nr_lote_contabil_apres	= nr_lote_contabil_p;
	
	commit;
	
	update	pls_conta_rec_resumo_item
	set	nr_lote_contabil	= 0
	where	nr_lote_contabil	= nr_lote_contabil_p;
	
	commit;
	
	update	pls_conta_rec_resumo_item
	set	nr_lote_contabil_pag	= 0
	where	nr_lote_contabil_pag	= nr_lote_contabil_p;
	
	commit;
	
	 update	pls_conta_rec_resumo_item
	 set	nr_lote_contabil_cancel	= 0
	 where	nr_lote_contabil_cancel	= nr_lote_contabil_p;
	
	 commit;
	
	CALL wheb_usuario_pck.set_ie_lote_contabil('N');
else
	select	trunc(dt_referencia,'month'),
		cd_estabelecimento,
		cd_tipo_lote_contabil
	into STRICT 	dt_referencia_w,
		cd_estabelecimento_w,
		cd_tipo_lote_contabil_w
	from 	lote_contabil
	where 	nr_lote_contabil 	= nr_lote_contabil_p;
	
	select	max(ie_provisao_producao),
		max(coalesce(ie_data_lote_prod_med,'C')),
		max(coalesce(ie_status_prov_pagto,'NC'))
	into STRICT	ie_provisao_producao_w,
		ie_data_lote_prod_med_w,
		ie_status_prov_pagto_w
	from	pls_parametro_contabil
	where	cd_estabelecimento	= cd_estabelecimento_w;
	
	select	max(vl_parametro)
	into STRICT	nr_lote_param_w
	from	lote_contabil_parametro a
	where	a.nr_lote_contabil	= nr_lote_contabil_p
	and	nr_seq_parametro	= 1;
	
	select	substr(max(ds_valor_parametro),1,1)
	into STRICT	ie_gera_reversao_lote_w
	from	lote_contabil_parametro a
	where	a.nr_lote_contabil	= nr_lote_contabil_p
	and	nr_seq_parametro	= 2;

	dt_referencia_mes_ant_w	:= add_months(dt_referencia_w,-1);

	dt_ref_inicial_w	:= trunc(dt_referencia_w,'month');
	dt_ref_final_w		:= fim_dia(fim_mes(dt_referencia_w));
	
	select 	count(1)
	into STRICT	qt_lote_prod_w
	from	lote_contabil_param_item
	where	nr_lote_contabil	= nr_lote_contabil_p  LIMIT 1;

	CALL wheb_usuario_pck.set_ie_lote_contabil('S');
	
	delete	from w_pls_movimento_sem_conta
	where	cd_tipo_lote_contabil	= cd_tipo_lote_contabil_w
	and	dt_referencia		= dt_referencia_w;
	
	commit;
	
	/* Gravar o lote contabil de apresentacao nos itens */

	update	pls_conta_rec_resumo_item	e
	set	e.nr_lote_contabil_apres	= nr_lote_contabil_p
	where 	coalesce(e.nr_lote_contabil_apres,0)	= 0
	and	exists (SELECT	1
			from	pls_rec_glosa_conta 		f,
				pls_rec_glosa_protocolo		g
			where	f.nr_sequencia			= e.nr_seq_conta_rec
			and	g.nr_sequencia			= f.nr_seq_protocolo
			and	g.dt_apresentacao_lote between dt_ref_inicial_w and dt_ref_final_w
			and	g.cd_estabelecimento = cd_estabelecimento_w);

	commit;
		
	/* Gravar o lote contabil nos itens */

	update	pls_conta_rec_resumo_item	e
	set	e.nr_lote_contabil		= nr_lote_contabil_p
	where 	coalesce(e.nr_lote_contabil,0)	= 0
	and	exists (SELECT	1
			from	pls_rec_glosa_conta 		f,
				pls_rec_glosa_protocolo		g
			where	f.nr_sequencia			= e.nr_seq_conta_rec
			and	g.nr_sequencia			= f.nr_seq_protocolo
			and	g.dt_liberacao_pag between dt_ref_inicial_w and dt_ref_final_w
			and	g.cd_estabelecimento = cd_estabelecimento_w);

	
	commit;
	
	
	/* Gravar o lote contabil de pagamento nos itens */

	update	pls_conta_rec_resumo_item	e
	set	e.nr_lote_contabil_pag	= nr_lote_contabil_p
	where 	coalesce(e.nr_lote_contabil_pag,0)	= 0
	and	exists (SELECT	1
			from	pls_lote_pagamento		i
			where	e.nr_seq_lote_pgto		= i.nr_sequencia
			and	i.dt_mes_competencia between dt_ref_inicial_w and dt_ref_final_w
			and	i.nr_sequencia		= coalesce(nr_lote_param_w, i.nr_sequencia)
			and (exists (select	1
					 from 	lote_contabil_param_item b
					 where	b.nr_documento		= i.nr_sequencia
					 and	b.nr_lote_contabil	= nr_lote_contabil_p)
			or (qt_lote_prod_w = 0))
			and	i.cd_estabelecimento = cd_estabelecimento_w);
	
	commit;
		
	/*PAGAMENTO NOVO*/

	/* Gravar o lote contabil de pagamento nos itens */

	update	pls_conta_rec_resumo_item	e
	set	e.nr_lote_contabil_pag	= nr_lote_contabil_p
	where 	coalesce(e.nr_lote_contabil_pag,0)	= 0
	and	exists (SELECT	1
			from	pls_pp_lote			i
			where	e.nr_seq_pp_lote		= i.nr_sequencia
			and	i.dt_mes_competencia between dt_ref_inicial_w and dt_ref_final_w
			and	i.nr_sequencia		= coalesce(nr_lote_param_w, i.nr_sequencia)
			and (exists (select	1
					from 	lote_contabil_param_item b
					where	b.nr_documento		= i.nr_sequencia
					and	b.nr_lote_contabil	= nr_lote_contabil_p)
			or (qt_lote_prod_w = 0))
			and	i.cd_estabelecimento = cd_estabelecimento_w);
	
	commit;
	
	update	pls_conta_rec_resumo_item	e
	set	e.nr_lote_contabil_cancel	= nr_lote_contabil_p
	where (coalesce(e.nr_lote_contabil_pag,0)	<> 0
	or	coalesce(e.nr_lote_contabil,0) <> 0
	or	coalesce(e.nr_lote_contabil_apres,0)	<> 0)
	and	exists (SELECT	1
			from	pls_rec_glosa_conta 		f,
				pls_protocolo_conta		a,
				pls_conta			b
			where	f.nr_sequencia	= e.nr_seq_conta_rec
			and	f.nr_seq_conta = b.nr_sequencia
			and	a.nr_sequencia = b.nr_seq_protocolo
			and	f.dt_cancelamento between dt_ref_inicial_w and dt_ref_final_w
			and	a.cd_estabelecimento = cd_estabelecimento_w);
			
	commit;
	
	/*updte	pls_conta_rec_resumo_item	i
	set	i.nr_lote_contabil_apres	= nr_lote_contabil_p
	where 	nvl(i.nr_lote_contabil_apres,0)	= 0
	and	exists (select	1
			from	pls_rec_glosa_protocolo 	f,
				pls_rec_glosa_conta 		e		
			where	f.nr_sequencia			= e.nr_seq_protocolo
			and	e.nr_sequencia			= i.nr_seq_conta_rec	
			and	f.dt_apresentacao_lote between dt_ref_inicial_w and dt_ref_final_w);
	
	update	pls_conta_rec_resumo_item	i
	set	i.nr_lote_contabil		= nr_lote_contabil_p
	where 	nvl(i.nr_lote_contabil,0)	= 0
	and	exists (select	1
			from	pls_rec_glosa_protocolo 	f,
				pls_rec_glosa_conta 		e		
			where	f.nr_sequencia			= e.nr_seq_protocolo
			and	e.nr_sequencia			= i.nr_seq_conta_rec	
			and	f.dt_liberacao_pag between dt_ref_inicial_w and dt_ref_final_w);*/
	
	/*update	pls_conta_rec_resumo_item	i
	set	i.nr_lote_contabil_apres	= nr_lote_contabil_p
	where 	nvl(i.nr_lote_contabil_apres,0)	= 0
	and	exists (select	1
			from	pls_rec_glosa_protocolo 	f,
				pls_rec_glosa_conta 		e,	
				pls_rec_glosa	_proc		d,
				pls_conta_proc		c,
				pls_conta			b,
				pls_protocolo_conta		a				
			where	f.nr_sequencia			= e.nr_seq_protocolo
			and	e.nr_sequencia			= i.nr_seq_conta_rec
			and	d.nr_sequencia			= i.nr_seq_proc_rec
			and	c.nr_sequencia			= d.nr_seq_conta_proc
			and	b.nr_sequencia			= c.nr_seq_conta
			and	a.nr_sequencia			= b.nr_seq_protocolo		
			and	f.dt_apresentacao_lote between dt_ref_inicial_w and dt_ref_final_w*/
	CALL wheb_usuario_pck.set_ie_lote_contabil('N');
	
	nm_agrupador_w		:= coalesce(trim(both obter_agrupador_contabil(cd_tipo_lote_contabil_w)), 'NR_LOTE_PAGAMENTO');
	nm_agrupador_reversao_w	:= coalesce(trim(both obter_agrupador_contabil(40)), 'NR_SEQ_CONTA');
	
	begin
	ie_compl_hist_w	:= obter_se_compl_tipo_lote(cd_estabelecimento_w, cd_tipo_lote_contabil_w);
	exception
	when others then
		ie_compl_hist_w	:= 'N';
	end;
	
	nr_seq_w_movto_cont_w	:= 0;
	qt_commit_w		:= 0;
	nr_seq_info_ctb_w	:= 36;

	open c_rec_glosa;
	loop
	fetch c_rec_glosa into
		c_rec_glosa_w;
	EXIT WHEN NOT FOUND; /* apply on c_rec_glosa */
		begin
		
		open c_ie_tipo_movimento;
		loop
		fetch c_ie_tipo_movimento into	
			ie_tipo_movimento_w;
		EXIT WHEN NOT FOUND; /* apply on c_ie_tipo_movimento */
			begin
			
			nr_seq_lote_w		:= null;
			dt_mes_competencia_w	:= null;
			
			if (coalesce(c_rec_glosa_w.nr_seq_pp_lote,0) <> 0) then
				select	nr_sequencia,
					dt_mes_competencia
				into STRICT	nr_seq_lote_w,
					dt_mes_competencia_w
				from	pls_pp_lote
				where	nr_sequencia	= c_rec_glosa_w.nr_seq_pp_lote;
			elsif (coalesce(c_rec_glosa_w.nr_seq_lote_pgto,0) <> 0) then
				select	nr_sequencia,
					dt_mes_competencia
				into STRICT	nr_seq_lote_w,
					dt_mes_competencia_w
				from	pls_lote_pagamento
				where	nr_sequencia	= c_rec_glosa_w.nr_seq_lote_pgto;
			end if;
			
			if (ie_tipo_movimento_w = 'C') then
				c_rec_glosa_w.vl_contabil	:= c_rec_glosa_w.vl_contabil * (-1);
				c_rec_glosa_w.dt_movimento	:= c_rec_glosa_w.dt_cancelamento;
			end if;
			
			if (c_rec_glosa_w.nm_atributo = 'VL_PAGO') then			
				c_rec_glosa_w.dt_movimento	:= pkg_date_utils.start_of(dt_mes_competencia_w,'MONTH',0);
			end if;
			
			if (nm_agrupador_w = 'NR_SEQ_CONTA') then
				nr_seq_agrupamento_w	:= c_rec_glosa_w.nr_seq_conta;
			elsif (nm_agrupador_w = 'NR_LOTE_PAGAMENTO') then
				nr_seq_agrupamento_w	:= nr_seq_lote_w;
			end if;
			
			if (coalesce(nr_seq_agrupamento_w,0) = 0) then
				nr_seq_agrupamento_w	:= c_rec_glosa_w.nr_seq_conta;
			end if;
			
			open c_deb_cred;
			loop
			fetch c_deb_cred into
				c_deb_cred_w;
			EXIT WHEN NOT FOUND; /* apply on c_deb_cred */
				begin
				ds_compl_historico_w	:= null;
				ds_item_w		:= null;
				cd_centro_custo_w	:= null;
				
				if (c_deb_cred_w.ie_debito_credito = 'D') then
					cd_conta_contabil_w	:= c_rec_glosa_w.cd_conta_deb;
					
				elsif (c_deb_cred_w.ie_debito_credito = 'C') then
					cd_conta_contabil_w	:= c_rec_glosa_w.cd_conta_cred;					
				end if;
				
				if (coalesce(cd_conta_contabil_w::text, '') = '') then
					if (c_rec_glosa_w.ie_proc_mat = 'P') then
						ie_tipo_item_w	:= 'PCM';
						
						begin
						select	x.ds_procedimento
						into STRICT	ds_item_w
						from	procedimento x
						where	cd_procedimento	= c_rec_glosa_w.cd_procedimento
						and	ie_origem_proced = coalesce(c_rec_glosa_w.ie_origem_proced,ie_origem_proced);
						exception
						when others then
							ds_item_w	:= null;
						end;
					else
						ie_tipo_item_w	:= 'MCM';
						
						begin
						select	substr(a.ds_material,1,255)
						into STRICT	ds_item_w
						from	pls_material	a
						where	a.nr_sequencia	= c_rec_glosa_w.nr_seq_material;
						exception
						when others then
							ds_item_w	:= null;
						end;
					end if;
					
					select	nextval('w_pls_movimento_sem_conta_seq')
					into STRICT	nr_seq_mvto_sem_conta_w
					;
					
					insert into w_pls_movimento_sem_conta(nr_sequencia,
						cd_item,
						ds_item,
						ie_tipo_item,
						dt_atualizacao,
						nm_usuario,
						vl_item,
						dt_referencia,
						nr_lote_contabil,
						ie_proc_mat_item,
						ie_deb_cred,
						ds_observacao,
						cd_tipo_lote_contabil)
					values (nr_seq_mvto_sem_conta_w,
						c_rec_glosa_w.nr_seq_proc_mat,
						ds_item_w,
						ie_tipo_item_w,
						clock_timestamp(),
						nm_usuario_p,
						c_rec_glosa_w.vl_contabil,
						dt_referencia_w,
						nr_lote_contabil_p,
						c_rec_glosa_w.ie_proc_mat,
						c_deb_cred_w.ie_debito_credito,
						'',
						cd_tipo_lote_contabil_w);
				else
					select	ie_centro_custo,
						cd_centro_custo
					into STRICT	ie_centro_custo_w,
						cd_centro_custo_fixo_w
					from	conta_contabil
					where	cd_conta_contabil	= cd_conta_contabil_w;
									
					if (ie_centro_custo_w = 'S') then
						if (cd_centro_custo_fixo_w IS NOT NULL AND cd_centro_custo_fixo_w::text <> '') then
							cd_centro_custo_w	:= cd_centro_custo_fixo_w;
						else
							if (coalesce(c_rec_glosa_w.nr_seq_plano::text, '') = '') then
								begin
								select	ie_regulamentacao,
									b.nr_sequencia
								into STRICT	ie_regulamentacao_w,
									c_rec_glosa_w.nr_seq_plano
								from	pls_segurado a,
									pls_plano b
								where	b.nr_sequencia  = a.nr_seq_plano
								and	a.nr_sequencia	= c_rec_glosa_w.nr_seq_segurado;
								exception
								when others then
									ie_regulamentacao_w			:= null;
									c_rec_glosa_w.nr_seq_plano		:= null;
								end;
							else
								begin
								select	ie_regulamentacao
								into STRICT	ie_regulamentacao_w
								from	pls_plano b
								where	b.nr_sequencia  = c_rec_glosa_w.nr_seq_plano;
								exception
								when others then
									ie_regulamentacao_w	:= null;
								end;
							end if;
							
							SELECT * FROM pls_obter_centro_custo(	'D', c_rec_glosa_w.nr_seq_plano, cd_estabelecimento_w, '', '', ie_regulamentacao_w, c_rec_glosa_w.nr_seq_segurado, '', cd_centro_custo_w, nr_seq_regra_cc_w, null, 				--nr_seq_tipo_lanc_p
										null, 				--nr_seq_bonificacao_p
										null, 				--nr_seq_sca_p
										c_rec_glosa_w.nr_seq_prestador_pgto, c_rec_glosa_w.nr_seq_prestador_exec, c_rec_glosa_w.nr_seq_prestador_atend, c_rec_glosa_w.nr_seq_prestador_solic, null				-- nr_seq_evento_p
										) INTO STRICT cd_centro_custo_w, nr_seq_regra_cc_w;
						end if;
					end if;
					
					if (ie_compl_hist_w = 'S') then
						select	count(1)
						into STRICT	qt_compl_hist_w
						from	historico_padrao_atributo
						where	cd_tipo_lote_contabil	= cd_tipo_lote_contabil_w
						and	cd_historico		= c_rec_glosa_w.cd_historico  LIMIT 1;
						
						if (qt_compl_hist_w > 0) then
							select	a.nr_seq_protocolo,
								a.nr_seq_prestador_exec
							into STRICT	nr_seq_protocolo_w,
								nr_seq_prestador_w
							from	pls_conta a
							where	nr_sequencia	= c_rec_glosa_w.nr_seq_conta;
							
							if (coalesce(nr_seq_prestador_w,0) > 0) then
								select	a.cd_pessoa_fisica,
									a.cd_cgc
								into STRICT	cd_pessoa_fisica_w,
									cd_cgc_prestador_w
								from	pls_prestador a
								where	a.nr_sequencia	= nr_seq_prestador_w;
								
								begin
								nm_prestador_w	:= substr(obter_nome_pf_pj(cd_pessoa_fisica_w, cd_cgc_prestador_w),1,255);
								exception
								when others then
									nm_prestador_w	:= null;
								end;
								
								select	max(nr_cpf)
								into STRICT	cd_cpf_prestador_w
								from	pessoa_fisica
								where	cd_pessoa_fisica	= cd_pessoa_fisica_w;
							end if;
							
							select	max(nr_nota_fiscal)
							into STRICT	nr_nota_fiscal_w
							from	pls_prot_conta_titulo
							where	nr_sequencia	= c_rec_glosa_w.nr_seq_prot_conta;
							
							nr_titulo_pag_trib_w	:= null;
							
							select	max(b.cd_cgc),
								max(	select	c.nr_cpf
									from	pessoa_fisica	c
									where	c.cd_pessoa_fisica = b.cd_pessoa_fisica) nr_cpf
							into STRICT	cd_cgc_prestador_pag_w,
								cd_cpf_prestador_pag_w
							from	pls_prestador		b
							where	b.nr_sequencia	= c_rec_glosa_w.nr_seq_prestador_pgto;
								
							if (coalesce(c_rec_glosa_w.nr_seq_pp_lote,0) <> 0) then
								select	max(b.nr_titulo_pagar)
								into STRICT	nr_titulo_pagar_w
								from	pls_pp_prestador	b
								where	b.nr_seq_lote		= c_rec_glosa_w.nr_seq_pp_lote
								and	b.nr_seq_prestador	= c_rec_glosa_w.nr_seq_prestador_pgto;

								select	max(b.nr_titulo_receber)
								into STRICT	nr_titulo_receber_w
								from	pls_pp_prestador	b
								where	b.nr_seq_lote		= c_rec_glosa_w.nr_seq_prestador_pgto
								and	b.nr_seq_prestador	= c_rec_glosa_w.nr_seq_prestador_pgto;
							elsif (coalesce(c_rec_glosa_w.nr_seq_lote_pgto,0) <> 0) then
								select	max(b.nr_titulo)
								into STRICT	nr_titulo_pagar_w
								from	pls_pag_prest_vencimento b,
									pls_pagamento_prestador a
								where	a.nr_sequencia		= b.nr_seq_pag_prestador
								and	a.nr_seq_lote		= c_rec_glosa_w.nr_seq_lote_pgto
								and	a.nr_seq_prestador	= c_rec_glosa_w.nr_seq_prestador_pgto;
								
								select	max(b.nr_titulo_receber)
								into STRICT	nr_titulo_receber_w
								from	pls_pag_prest_vencimento b,
									pls_pagamento_prestador a
								where	a.nr_sequencia		= b.nr_seq_pag_prestador
								and	a.nr_seq_lote		= c_rec_glosa_w.nr_seq_lote_pgto
								and	a.nr_seq_prestador	= nr_seq_prestador_w;
							end if;
							
							nm_prestador_pgto_w		:= substr(pls_obter_dados_prestador(c_rec_glosa_w.nr_seq_prestador_pgto, 'N'),1,255);
							cd_cgc_cpf_prest_pagto_w 	:= coalesce(cd_cgc_prestador_pag_w, cd_cpf_prestador_pag_w);
							
							/*Caso seja necessario adicionar/retirar um campo no complemento historio, realizar procedimento na procedure principal CTB_PLS_CONTAB_PRODUCAO_MEDICA*/

							ds_conteudo_w	:= substr(	nr_seq_prestador_w			|| '#@' ||
											nm_prestador_w 				|| '#@' ||
											nr_seq_protocolo_w			|| '#@' ||
											c_rec_glosa_w.nr_seq_conta		|| '#@' ||
											cd_cgc_prestador_w			|| '#@' ||
											cd_cpf_prestador_w			|| '#@' ||
											nr_nota_fiscal_w			|| '#@' ||
											nr_seq_lote_w				|| '#@' ||
											dt_mes_competencia_w			|| '#@' ||
											nr_tit_pagar_origem_w			|| '#@' ||
											nr_tit_receber_origem_w			|| '#@' ||
											nr_adiant_pago_origem_w			|| '#@' ||
											nr_titulo_pagar_w			|| '#@' ||
											nr_titulo_receber_w			|| '#@' ||
											ds_tributo_w				|| '#@' ||
											nr_titulo_pag_trib_w			|| '#@' ||
											c_rec_glosa_w.nr_nota_fiscal		|| '#@' ||
											c_rec_glosa_w.nr_seq_prestador_pgto	|| '#@' ||
											cd_cgc_cpf_prest_pagto_w		|| '#@' ||
											nm_prestador_pgto_w			|| '#@'	||
											null					|| '#@'	||
											null					|| '#@'	||
											c_rec_glosa_w.nr_protocolo_glosa	|| '#@'	||
											null,1,4000);
											
							begin
							ds_compl_historico_ww	:= substr(obter_compl_historico(cd_tipo_lote_contabil_w, c_rec_glosa_w.cd_historico, ds_conteudo_w),1,255);
							exception
							when others then
								ds_compl_historico_ww	:= null;
							end;
							
							
							ds_compl_historico_w	:= substr(ds_compl_historico_ww,1,255);
						end if;
					end if;
					
					nr_seq_w_movto_cont_w	:= nr_seq_w_movto_cont_w + 1;
									
					insert into w_movimento_contabil(nr_lote_contabil,
						nr_sequencia,
						cd_conta_contabil,
						ie_debito_credito,
						cd_historico,
						dt_movimento,
						vl_movimento,
						cd_estabelecimento,
						cd_centro_custo,
						ds_compl_historico,
						nr_seq_agrupamento,
						nr_seq_tab_orig,
						nr_seq_info,
						nm_tabela,
						nm_atributo)
					values (nr_lote_contabil_p,
						nr_seq_w_movto_cont_w,
						cd_conta_contabil_w,
						c_deb_cred_w.ie_debito_credito,
						c_rec_glosa_w.cd_historico,
						c_rec_glosa_w.dt_movimento,
						c_rec_glosa_w.vl_contabil,
						cd_estabelecimento_w,
						cd_centro_custo_w,
						ds_compl_historico_w,
						nr_seq_agrupamento_w,
						c_rec_glosa_w.nr_seq_item,
						nr_seq_info_ctb_w,
						c_rec_glosa_w.nm_tabela,
						c_rec_glosa_w.nm_atributo);
						
					qt_commit_w	:= qt_commit_w + 1;
			
					if (qt_commit_w >= 5000) then
						qt_commit_w	:= 0;
						commit;
					end if;
				end if;
			
				end;
			end loop;
			close c_deb_cred;
			end;
		end loop;
		close c_ie_tipo_movimento;
			
		end;
	end loop;
	close c_rec_glosa;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_pls_contab_rec_glosa ( nr_lote_contabil_p bigint, nm_usuario_p text, ie_exclusao_p text, ds_retorno_p INOUT text) FROM PUBLIC;

