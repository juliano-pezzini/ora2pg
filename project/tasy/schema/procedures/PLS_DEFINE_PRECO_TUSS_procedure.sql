-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_define_preco_tuss ( ie_calculo_tuss_p text, cd_edicao_amb_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, dt_referencia_p timestamp, cd_estabelecimento_p bigint, nr_seq_prestador_p bigint, nr_seq_edicao_tuss_p pls_edicao_preco_tuss.nr_sequencia%type, nr_seq_plano_p pls_segurado.nr_seq_plano%type, vl_procedimento_p INOUT bigint, vl_medico_p INOUT bigint, vl_anestesista_p INOUT bigint, vl_auxiliares_p INOUT bigint, vl_custo_operacional_p INOUT bigint, vl_filme_p INOUT bigint, vl_porte_anestesista_p INOUT bigint, qt_filme_p INOUT bigint, nr_auxiliares_p INOUT bigint, nr_porte_anestesico_p INOUT bigint, cd_porte_p INOUT text, tx_porte_p INOUT bigint, qt_uco_p INOUT bigint, qt_incidencia_p INOUT bigint) AS $body$
DECLARE


vl_procedimento_w		double precision	:= 0;
vl_medico_w			double precision	:= 0;
vl_anestesista_w		double precision	:= 0;
vl_auxiliares_w			double precision	:= 0;
vl_custo_operacional_w		double precision	:= 0;
vl_filme_w			double precision	:= 0;
qt_filme_amb_w			double precision	:= 0;
nr_auxiliares_amb_w		smallint;
qt_incidencia_amb_w		smallint;
nr_porte_anest_amb_w		smallint;
cd_porte_cbhpm_w		varchar(10);
tx_porte_w			double precision;
qt_uco_w			double precision;
nr_porte_anest_cbhpm_w		smallint;
nr_auxiliares_cbhpm_w		smallint;
qt_filme_cbhpm_w		double precision;
qt_incidencia_cbhpm_w		smallint;
vl_porte_w			double precision;
dt_vigencia_porte_w		timestamp;
dt_vigencia_preco_w		timestamp;
vl_porte_anestesista_w		double precision;
dt_referencia_w			timestamp;


BEGIN
dt_referencia_w	:= trunc(dt_referencia_p,'dd');
begin
select	coalesce(vl_procedimento,0),
	coalesce(vl_medico,0),
	coalesce(vl_anestesista,0),
	coalesce(vl_auxiliares,0),
	coalesce(vl_custo_operacional,0),
	coalesce(vl_filme,0),
	qt_filme_amb,
	nr_auxiliares_amb,
	qt_incidencia_amb,
	nr_porte_anest_amb,
	coalesce(cd_porte_cbhpm,'X'),
	tx_porte,
	qt_uco,
	nr_porte_anest_cbhpm,
	nr_auxiliares_cbhpm,
	qt_filme_cbhpm,
	qt_incidencia_cbhpm
into STRICT	vl_procedimento_w,
	vl_medico_w,
	vl_anestesista_w,
	vl_auxiliares_w,
	vl_custo_operacional_w,
	vl_filme_w,
	qt_filme_amb_w,
	nr_auxiliares_amb_w,
	qt_incidencia_amb_w,
	nr_porte_anest_amb_w,
	cd_porte_cbhpm_w,
	tx_porte_w,
	qt_uco_w,
	nr_porte_anest_cbhpm_w,
	nr_auxiliares_cbhpm_w,
	qt_filme_cbhpm_w,
	qt_incidencia_cbhpm_w
from	preco_tuss	a
where	a.cd_edicao_amb		= cd_edicao_amb_p
and	a.cd_procedimento	= cd_procedimento_p
and	coalesce(a.dt_inicio_vigencia, clock_timestamp() - interval '3650 days')	=
			(	SELECT	max(coalesce(b.dt_inicio_vigencia, clock_timestamp() - interval '3650 days'))
				from	preco_tuss b
				where	b.cd_edicao_amb		= cd_edicao_amb_p
				and	b.cd_procedimento	= cd_procedimento_p
				and	trunc(coalesce(b.dt_inicio_vigencia, clock_timestamp() - interval '3650 days')) <= dt_referencia_w
				and	((coalesce(b.dt_final_vigencia::text, '') = '') or (b.dt_final_vigencia >= dt_referencia_w)));
exception
	when others then
	begin	
	vl_procedimento_w	:= 0;
	vl_medico_w		:= 0;
	vl_anestesista_w	:= 0;
	vl_auxiliares_w		:= 0;
	vl_custo_operacional_w	:= 0;
	vl_filme_w		:= 0;
	end;
end;

if (ie_calculo_tuss_p	= 'A') then
	vl_procedimento_p	:= vl_procedimento_w;
	vl_medico_p		:= vl_medico_w;
	vl_anestesista_p	:= vl_anestesista_w;
	vl_auxiliares_p		:= vl_auxiliares_w;
	vl_custo_operacional_p	:= vl_custo_operacional_w;
	vl_filme_p		:= vl_filme_w;
	qt_filme_p		:= qt_filme_amb_w;
	nr_auxiliares_p		:= nr_auxiliares_amb_w;
	nr_porte_anestesico_p	:= nr_porte_anest_amb_w;
	qt_incidencia_p		:= qt_incidencia_amb_w;	
	vl_porte_anestesista_p	:= 0;
	cd_porte_p		:= '';
	tx_porte_p		:= 0;
	qt_uco_p		:= 0;	
elsif (ie_calculo_tuss_p	= 'C') then
	SELECT * FROM pls_obter_preco_tuss_cbhpm(	cd_estabelecimento_p, dt_referencia_p, cd_procedimento_p, ie_origem_proced_p, dt_referencia_p, nr_seq_prestador_p, '', nr_seq_edicao_tuss_p, vl_medico_w, cd_porte_cbhpm_w, tx_porte_w, qt_uco_w, nr_porte_anest_cbhpm_w, nr_auxiliares_cbhpm_w, qt_filme_cbhpm_w, qt_incidencia_cbhpm_w, vl_porte_w, dt_vigencia_porte_w, dt_vigencia_preco_w, vl_porte_anestesista_w, cd_edicao_amb_p, nr_seq_plano_p) INTO STRICT vl_medico_w, cd_porte_cbhpm_w, tx_porte_w, qt_uco_w, nr_porte_anest_cbhpm_w, nr_auxiliares_cbhpm_w, qt_filme_cbhpm_w, qt_incidencia_cbhpm_w, vl_porte_w, dt_vigencia_porte_w, dt_vigencia_preco_w, vl_porte_anestesista_w;

	vl_procedimento_p	:= 0;	
	vl_medico_p		:= vl_medico_w;
	vl_anestesista_p	:= 0;
	vl_auxiliares_p		:= 0;
	vl_custo_operacional_p	:= 0;
	vl_filme_p		:= 0;
	qt_filme_p		:= qt_filme_cbhpm_w;
	nr_auxiliares_p		:= nr_auxiliares_cbhpm_w;
	nr_porte_anestesico_p	:= nr_porte_anest_cbhpm_w;
	qt_incidencia_p		:= qt_incidencia_cbhpm_w;	
	vl_porte_anestesista_p	:= vl_porte_anestesista_w;
	cd_porte_p		:= cd_porte_cbhpm_w;
	tx_porte_p		:= tx_porte_w;
	qt_uco_p		:= qt_uco_w;	
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_define_preco_tuss ( ie_calculo_tuss_p text, cd_edicao_amb_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, dt_referencia_p timestamp, cd_estabelecimento_p bigint, nr_seq_prestador_p bigint, nr_seq_edicao_tuss_p pls_edicao_preco_tuss.nr_sequencia%type, nr_seq_plano_p pls_segurado.nr_seq_plano%type, vl_procedimento_p INOUT bigint, vl_medico_p INOUT bigint, vl_anestesista_p INOUT bigint, vl_auxiliares_p INOUT bigint, vl_custo_operacional_p INOUT bigint, vl_filme_p INOUT bigint, vl_porte_anestesista_p INOUT bigint, qt_filme_p INOUT bigint, nr_auxiliares_p INOUT bigint, nr_porte_anestesico_p INOUT bigint, cd_porte_p INOUT text, tx_porte_p INOUT bigint, qt_uco_p INOUT bigint, qt_incidencia_p INOUT bigint) FROM PUBLIC;

