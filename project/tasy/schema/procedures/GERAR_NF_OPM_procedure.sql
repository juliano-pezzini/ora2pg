-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_nf_opm ( nr_seq_op_p bigint, cd_serie_nf_p text, cd_operacao_nota_p bigint, cd_natureza_operacao_p bigint, cd_condicao_pagamento_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, cd_setor_atendimento_p bigint, ie_tipo_nota_opm_p text, nr_sequencia_p INOUT bigint) AS $body$
DECLARE

nr_sequencia_w				nota_fiscal.nr_sequencia%type;
cd_estabelecimento_w		estabelecimento.cd_estabelecimento%type;
nr_atendimento_w			atendimento_paciente.nr_atendimento%type;
cd_cgc_w					pessoa_juridica.cd_cgc%type;
cd_cgc_emitente_w			pessoa_juridica.cd_cgc%type;
cd_pessoa_fisica_w			pessoa_fisica.cd_pessoa_fisica%type;
nr_sequencia_nf_w			nota_fiscal.nr_sequencia_nf%type;
cd_natureza_operacao_w		natureza_operacao.cd_natureza_operacao%type;
nr_seq_opm_w				prescr_opm.nr_sequencia%type;
qt_opm_w					ordem_producao_opm.qt_opm%type;
cd_material_w				material.cd_material%type;
cd_local_estoque_w			local_estoque.cd_local_estoque%type;
cd_operacao_estoque_w		operacao_estoque.cd_operacao_estoque%type;
cd_conta_contabil_w			conta_contabil.cd_conta_contabil%type;
cd_centro_custo_w			centro_custo.cd_centro_custo%type;
nr_item_nf_w				nota_fiscal_item.nr_item_nf%type;
nr_prescricao_w				prescr_medica.nr_prescricao%type;
vl_total_item_nf_w			nota_fiscal_item.vl_total_item_nf%type;
vl_unitario_item_nf_w		nota_fiscal_item.vl_unitario_item_nf%type;
cd_unidade_medida_estoque_w	material.cd_unidade_medida_estoque%type;
cd_material_estoque_w		material.cd_material_estoque%type;
nr_lote_prod_w				lote_producao.nr_lote_producao%type;
nr_seq_lote_w				material_lote_fornec.nr_sequencia%type :=null;
cd_lote_fabricacao_w		material_lote_fornec.ds_lote_fornec%type;
ie_estab_serie_nf_w			parametro_compras.ie_estab_serie_nf%type;
ie_tipo_conta_w				integer := 2;
ie_entrada_saida_w			varchar(1) := 'S';
ie_tipo_pessoa_w			varchar(2);
ie_tipo_nota_w				varchar(2);
nr_seq_conta_financeira_w	bigint;
nr_nota_fiscal_w           	varchar(255);
ie_numero_nota_w			varchar(1);
qt_reg_w					bigint;
cd_cgc_emitente_ww         	varchar(14);
cd_serie_nf_w				nota_fiscal.cd_serie_nf%type	:= cd_serie_nf_p;
cd_estab_nota_fiscal_w		smallint := cd_estabelecimento_p;
orcamento_w 			    varchar(1)     := 'N';
cd_grupo_opm_w    			varchar(255);
ds_obs_w					nota_fiscal.ds_observacao%type;
ie_pessoa_geracao_w		    regra_pessoa_tit_nf.ie_pessoa_geracao%type;
ie_tipo_convenio_w		    convenio.ie_tipo_convenio%type;
cd_convenio_w			    convenio.cd_convenio%type;
cd_categoria_w              categoria_convenio.cd_categoria%type;
cd_nacionalidade_w		    pessoa_fisica.cd_nacionalidade%type;
qt_idade_w  			    bigint	:= null;
ie_pagador_atend_w		    varchar(1)	:= 'N';
cd_pessoa_responsavel_w		varchar(10)	:= null;
cd_pessoa_pagador_w         varchar(10)	:= null;
cd_cgc_pagador_w		    varchar(14)	:= null;
cd_cgc_conv_w			    varchar(14)	:= null;
cd_pessoa_nf_tit_w		    varchar(255)	:= null;
ie_opm_personalizada_w	varchar(1);
cd_centro_custo_ww  bigint := null;
cd_local_estoque_ww	lote_producao.cd_local_estoque%type;

-- Busca os itens da Ordem de Produção para gerar na NF
c01 CURSOR FOR
	SELECT	a.nr_seq_opm,
			a.qt_opm,
			b.cd_material,
			substr(obter_dados_material_estab(b.cd_material,cd_estabelecimento_w,'UME'),1,30) cd_unidade_medida_estoque,
			c.cd_local_estoque,
			c.nr_lote_producao,
			obter_centro_custo_setor(obter_dados_prescricao(b.nr_prescricao,'ST'),'C')
	FROM estrutura_material_v v, prescr_opm b, ordem_producao_opm a
LEFT OUTER JOIN lote_producao c ON (a.nr_sequencia = c.nr_seq_op_opm)
WHERE a.nr_sequencia = nr_seq_op_p and a.nr_seq_opm = b.nr_sequencia and b.cd_material  = v.cd_material and obter_se_contido(v.cd_grupo_material, cd_grupo_opm_w) = 'S';


BEGIN
-- Ao dar a mensagem que não gerou titulo a receber por causa de valor zerado verificar a parametrização da função orçamento paciente para o parametro 146 que considerado para buscar os itens e como vai valorizar.
cd_grupo_opm_w := obter_param_usuario(106, 146, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, cd_grupo_opm_w);
nr_sequencia_w := nr_sequencia_p;
cd_natureza_operacao_w := cd_natureza_operacao_p;
select	cd_cgc
into STRICT	cd_cgc_emitente_ww
from 	estabelecimento
where 	cd_estabelecimento = cd_estab_nota_fiscal_w;
select	coalesce(max(ie_estab_serie_nf),'N')
into STRICT	ie_estab_serie_nf_w
from	parametro_compras
where	cd_estabelecimento = cd_estab_nota_fiscal_w;
lock table serie_nota_fiscal in exclusive mode;

begin

select	cd_estabelecimento,
		nr_atendimento,
		nr_prescricao
into STRICT	cd_estabelecimento_w,
		nr_atendimento_w,
		nr_prescricao_w
from	prescr_medica
where	nr_prescricao = (SELECT	nr_prescricao
						from	prescr_opm
						where	nr_sequencia = (select	nr_seq_opm
												from	ordem_producao_opm
												where	nr_sequencia = nr_seq_op_p));
if (coalesce(nr_atendimento_w,0) > 0) then

	select	a.CD_CONVENIO,
		a.cd_categoria,
		b.cd_estabelecimento,
		c.ie_tipo_convenio,
		b.cd_pessoa_responsavel,
		b.cd_pessoa_fisica,
		c.cd_cgc,
		b.nr_atendimento,
		(obter_idade(d.dt_nascimento,clock_timestamp(),'A'))::numeric ,
		Obter_Se_Orcamento_Pac_Atend(b.cd_pessoa_fisica, b.nr_atendimento, 'S'),
		'NOME PACIENTE: '||OBTER_NOME_PF_ATEND(B.NR_ATENDIMENTO)||' - '||'DT NASC: '||OBTER_DADOS_PF(B.CD_PESSOA_FISICA,'DN')||' - '||'IDADE: '||(OBTER_IDADE(D.DT_NASCIMENTO,clock_timestamp(),'A'))::numeric ||'/ '||'CRM: '||OBTER_CRM_MEDICO(CD_MEDICO_RESP)||'/ '||'ATEND: '||B.NR_ATENDIMENTO||'/ '||'CID: '||OBTER_CID_ATENDIMENTO(B.NR_ATENDIMENTO,'P')||'/ '||'TELEFONE: '||OBTER_DADOS_PF(B.CD_PESSOA_FISICA,'TC')||'/ '||'EMAIL: '||OBTER_EMAIL_PF(B.CD_PESSOA_FISICA)||'/'||'ISENTO DE ICMS CONFORME ARTIGO 142, ANEXO I DO RICMS/00, IPI NÃO TRIBUTADO'
	into STRICT	cd_convenio_w,
		cd_categoria_w,
		cd_estabelecimento_w,
		ie_tipo_convenio_w,
		cd_pessoa_responsavel_w,
		cd_pessoa_fisica_w,
		cd_cgc_conv_w,
		nr_atendimento_w,
		qt_idade_w,
		orcamento_w,
		ds_obs_w
	from	atendimento_paciente b,
		ATEND_CATEGORIA_CONVENIO a,
		convenio c,
		pessoa_fisica d
	where	a.nr_atendimento = b.nr_atendimento
	and	c.cd_convenio = a.cd_convenio
	and	b.cd_pessoa_fisica = d.cd_pessoa_fisica
	--and a.dt_final_vigencia is not null
	and	a.nr_atendimento = nr_atendimento_w  LIMIT 1;
	
	select 	coalesce(max(cd_cnpj_conv_estab), cd_cgc_conv_w)
	into STRICT	cd_cgc_conv_w
	from 	convenio_estabelecimento
	where	cd_estabelecimento = cd_estabelecimento_p
	and 	cd_convenio = cd_convenio_w;
		
	select	max(cd_pessoa_fisica), Max(cd_cgc)
	into STRICT	cd_pessoa_pagador_w, cd_cgc_pagador_w
	from	atendimento_pagador
	where	nr_atendimento	= nr_atendimento_w;
	
	select  coalesce(max(ie_pessoa_geracao),0)
	into STRICT	ie_pessoa_geracao_w
	from (	SELECT	ie_pessoa_geracao
			from	regra_pessoa_tit_nf
			where	cd_estabelecimento = cd_estabelecimento_w
			and	ie_situacao = 'A'
			and	coalesce(ie_tipo_convenio,coalesce(ie_tipo_convenio_w,0))	= coalesce(ie_tipo_convenio_w,0)
			and	coalesce(cd_convenio,coalesce(cd_convenio_w,0)) = coalesce(cd_convenio_w,0)
			and (coalesce(qt_idade_w::text, '') = '' or qt_idade_w between coalesce(qt_idade_min,0) and coalesce(qt_idade_max,999))
			and (ie_resp_atend	= 'N' or (cd_pessoa_responsavel_w IS NOT NULL AND cd_pessoa_responsavel_w::text <> ''))
			and (ie_pagador_atend = 'N'	or (cd_cgc_pagador_w IS NOT NULL AND cd_cgc_pagador_w::text <> '') or (cd_pessoa_pagador_w IS NOT NULL AND cd_pessoa_pagador_w::text <> ''))
			and (ie_aplica_regra  = 'N') -- fixo N por que é a geração de nota fiscal
			order by coalesce(qt_prioridade,0),
				 coalesce(ie_tipo_convenio,0),
				 coalesce(cd_convenio,0)	) alias21;
		
	if (ie_pessoa_geracao_w = '1') then --Convênio
		cd_cgc_w	:= cd_cgc_conv_w;
		cd_pessoa_fisica_w	:= NULL;
		ie_tipo_pessoa_w	:= 'PJ';
		ie_tipo_nota_w := 'SE';		
	elsif (ie_pessoa_geracao_w = '2') then --Paciente
		cd_pessoa_fisica_w	:= cd_pessoa_fisica_w;
		cd_cgc_w	:= null;
		ie_tipo_pessoa_w	:= 'PF';
		ie_tipo_nota_w := 'SF';
	elsif (ie_pessoa_geracao_w = '3') and (cd_pessoa_pagador_w IS NOT NULL AND cd_pessoa_pagador_w::text <> '') then --Pagador PF
		cd_pessoa_fisica_w	:= cd_pessoa_pagador_w;
		cd_cgc_w	:= null;
		ie_tipo_pessoa_w	:= 'PF';
		ie_tipo_nota_w := 'SF';
	elsif (ie_pessoa_geracao_w = '3') and (cd_cgc_pagador_w IS NOT NULL AND cd_cgc_pagador_w::text <> '') then --Pagador CGC
		cd_pessoa_fisica_w	:= null;
		cd_cgc_w	:= cd_cgc_pagador_w;
		ie_tipo_pessoa_w	:= 'PJ';
		ie_tipo_nota_w := 'SE';
	elsif (ie_pessoa_geracao_w = '4') then --Responsável
		cd_pessoa_fisica_w	:= cd_pessoa_responsavel_w;
		cd_cgc_w	:= null;
		ie_tipo_pessoa_w	:= 'PF';
		ie_tipo_nota_w := 'SF';
	elsif (ie_pessoa_geracao_w = 0) and (ie_tipo_convenio_w = 1) and (cd_pessoa_pagador_w IS NOT NULL AND cd_pessoa_pagador_w::text <> '')  then -- utilizar pagador sem 'Regra pessoa Título/NF'
		cd_pessoa_fisica_w	:= cd_pessoa_pagador_w;
		cd_cgc_w	:= null;
		ie_tipo_pessoa_w	:= 'PF';
		ie_tipo_nota_w := 'SF';
	elsif (ie_pessoa_geracao_w = 0) and (ie_tipo_convenio_w = 1) and (cd_pessoa_responsavel_w IS NOT NULL AND cd_pessoa_responsavel_w::text <> '')  then -- utilizar responsavel sem 'Regra pessoa Título/NF'
		cd_pessoa_fisica_w	:= cd_pessoa_responsavel_w;
		cd_cgc_w	:= null;
		ie_tipo_pessoa_w	:= 'PF';
		ie_tipo_nota_w := 'SF';
	elsif (ie_pessoa_geracao_w = 0) and (ie_tipo_convenio_w = 1) and (coalesce(cd_pessoa_responsavel_w::text, '') = '') and (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then -- utilizar paciente se nao tiver responsavel e nem pagador sem 'Regra pessoa Título/NF'
		cd_pessoa_fisica_w	:= cd_pessoa_fisica_w;
		cd_cgc_w	:= null;
		ie_tipo_pessoa_w	:= 'PF';
		ie_tipo_nota_w := 'SF';
	elsif (ie_pessoa_geracao_w = 0) and (ie_tipo_convenio_w in (2,3,4,5,6,7,8,9,10,11))  then -- pegar convenio sem 'Regra pessoa Título/NF'
		cd_cgc_w	:= cd_cgc_conv_w;
		cd_pessoa_fisica_w	:= NULL;
		ie_tipo_pessoa_w	:= 'PJ';
		ie_tipo_nota_w := 'SE';		
	end if;

if (coalesce(cd_pessoa_fisica_w::text, '') = '') and (coalesce(cd_cgc_w::text, '') = '') then
	--(-20011,'Pessoa física ou CNPJ inválidos ');
	CALL wheb_mensagem_pck.exibir_mensagem_abort(173249);
end if;
--ie_tipo_nota_w := 'SE'; /*Saída por emissao*/
cd_cgc_emitente_w := cd_cgc_emitente_ww;
if (ie_tipo_pessoa_w = 'PF') then
	ie_tipo_nota_w := 'SF'; /*Saída pessoa física*/
end if;
end if;


select	cd_operacao_estoque
into STRICT	cd_operacao_estoque_w
from	operacao_nota
where	cd_operacao_nf = cd_operacao_nota_p;

exception
when others then
	cd_estabelecimento_w := obter_estabelecimento_ativo;
	cd_cgc_w := null;
	cd_pessoa_fisica_w := null;
end;

if (nr_sequencia_w = 0) then

	select	nextval('nota_fiscal_seq')
		into STRICT	nr_sequencia_w
		;
	
        nr_nota_fiscal_w := nr_sequencia_w + 80000;
	nr_sequencia_nf_w		:= 16;
	
	/*select	(nvl(max(nr_sequencia_nf),0) + 1)
	into	nr_sequencia_nf_w
	from	nota_fiscal
	where	cd_estabelecimento = cd_estabelecimento_w
	and		cd_cgc_emitente = cd_cgc_emitente_w
	and		nr_nota_fiscal = nr_nota_fiscal_w
	and		cd_serie_nf = cd_serie_nf_p;*/
	
	insert	into nota_fiscal(
		nr_sequencia,
		cd_estabelecimento,
		cd_cgc_emitente,
		cd_cgc,
		cd_pessoa_fisica,
		cd_serie_nf,       
		nr_sequencia_nf,
		cd_operacao_nf,
		dt_emissao,
		dt_entrada_saida,
		ie_acao_nf,
		ie_emissao_nf,
		ie_tipo_frete,
		vl_mercadoria,
		vl_total_nota,
		qt_peso_bruto,
		qt_peso_liquido,
		vl_ipi,
		vl_descontos,
		vl_frete,
		vl_seguro,
		vl_despesa_acessoria,
		dt_atualizacao,
		nm_usuario,
		nr_nota_fiscal,
		cd_natureza_operacao,
		ie_situacao,
		ie_tipo_nota,
		cd_condicao_pagamento,
		ds_observacao)
	values (	nr_sequencia_w,
		cd_estabelecimento_w,
		cd_cgc_emitente_w,
		cd_cgc_w,
		cd_pessoa_fisica_w,
		cd_serie_nf_p,
		nr_sequencia_nf_w,
		cd_operacao_nota_p,
		trunc(clock_timestamp(),'dd'),
		trunc(clock_timestamp(),'dd'),
		1,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		clock_timestamp(),
		nm_usuario_p,
		nr_nota_fiscal_w,
		cd_natureza_operacao_w,
		1,
		ie_tipo_nota_w,
		cd_condicao_pagamento_p,
		ds_obs_w); --incluida a observação conforme solicitado pelo Ricardo e Rafael
		
end if;
open C01;
loop
fetch C01 into
	nr_seq_opm_w,
	qt_opm_w,
	cd_material_w,
	cd_unidade_medida_estoque_w,
	cd_local_estoque_w,
	nr_lote_prod_w,
	cd_centro_custo_w;
EXIT WHEN NOT FOUND; /* apply on C01 */

	begin
	  select obter_regra_local_estoque_opm(cd_estabelecimento_p, cd_material_w, 'E')
	  into STRICT cd_local_estoque_ww
	;

		select	coalesce(max('S'),'N')
		into STRICT	ie_opm_personalizada_w
		from	ORDEM_PRODUCAO_COMP_OPM a,
			ORDEM_PRODUCAO_OPM b,
			PRESCR_OPM c
		where	c.NR_ORDEM_OPM 		= b.nr_sequencia
		and	a.NR_SEQ_ORDEM_OPM 	= b.nr_sequencia
		and	a.NR_SEQ_ORDEM_OPM	= nr_seq_op_p
		and	c.cd_material		<> a.cd_material;
		
		if (ie_opm_personalizada_w = 'S') then
			
			select 	max(nr_sequencia),
				max(ds_lote_fornec)
			into STRICT 	nr_seq_lote_w,
				cd_lote_fabricacao_w
			from 	material_lote_fornec
			where 	nr_lote_producao = nr_lote_prod_w;
			
		elsif (ie_opm_personalizada_w = 'N')and (obter_se_material_estoque_lote(cd_estabelecimento_w,cd_material_w) = 'S' ) then
		
			select 	max(b.cd_lote_fornecedor),
				max(a.ds_lote_fornec)
			into STRICT 	nr_seq_lote_w,
				cd_lote_fabricacao_w
			from 	material_lote_fornec a,
				ordem_producao_opm b
			where 	b.cd_lote_fornecedor = a.nr_sequencia
			and 	b.nr_sequencia = nr_seq_op_p;
			
		end if;
	
	select (coalesce(max(nr_item_nf),0) + 1)
	into STRICT	nr_item_nf_w
	from	nota_fiscal_item
	where	nr_sequencia = nr_sequencia_w;

	SELECT * FROM define_conta_material(
		cd_estabelecimento_w, cd_material_w, ie_tipo_conta_w, 0, 0, 0, 0, 0, 0, 0, coalesce(cd_local_estoque_ww,cd_local_estoque_w), cd_operacao_estoque_w, trunc(clock_timestamp()), cd_conta_contabil_w, cd_centro_custo_ww, null) INTO STRICT cd_conta_contabil_w, cd_centro_custo_ww;
	nr_seq_conta_financeira_w := obter_conta_financeira(
		ie_entrada_saida_w, cd_estabelecimento_w, cd_material_w, null, null, null, null, cd_cgc_emitente_w, null, nr_seq_conta_financeira_w, null, cd_operacao_nota_p, ie_tipo_pessoa_w, null, null, null, null, cd_pessoa_fisica_w, null, null, null, null, cd_local_estoque_w, null, null, null, null, null, null);
	if (nr_seq_conta_financeira_w = 0) then
		nr_seq_conta_financeira_w := null;
	end if;	
	
	vl_unitario_item_nf_w := 0;
	
	if (orcamento_w = 'S') then -- Busca o valor conforme orçamento
	
      select	coalesce(sum(b.vl_material / coalesce(b.qt_material,1))-sum((b.vl_material / coalesce(b.qt_material,1)) * ((coalesce(a.pr_desconto,0))/100)),0)
		into STRICT	vl_unitario_item_nf_w
		from	orcamento_paciente a,
				orcamento_paciente_mat b
		where	a.nr_prescricao = nr_prescricao_w
		and		a.nr_sequencia_orcamento = b.nr_sequencia_orcamento
		and 	b.cd_material = cd_material_w  LIMIT 1;
		--Commit;
		If (vl_unitario_item_nf_w  = 0) then -- Busca o valor conforme os materias que não são OPM para Adequacao Postural Convencional/digitação solicacao dia 20-dez-17 pelo ricardo(consultor) e rafael da AACD
			select	coalesce(sum(b.vl_material)-sum((b.vl_material) * ((coalesce(a.pr_desconto,0))/100)),0)
			 into STRICT	vl_unitario_item_nf_w			
					from	orcamento_paciente a,
					orcamento_paciente_mat b,
					estrutura_material_v v
					where a.nr_prescricao = nr_prescricao_w
					and a.nr_sequencia_orcamento = b.nr_sequencia_orcamento
					and  b.cd_material  = v.cd_material
					and   obter_se_contido(v.cd_grupo_material, cd_grupo_opm_w) = 'N';
		end if;
	end if;
	if (vl_unitario_item_nf_w = 0) and (orcamento_w = 'N') then -- Pegar valor de tabela somente quando não tiver orçamento ja que pode ocorrer desconto no orçamento
		vl_unitario_item_nf_w := Obter_Preco_Mat_Conv(cd_estabelecimento_w,		cd_convenio_w,		cd_categoria_w,		cd_material_w,		clock_timestamp());
	end if;
	vl_total_item_nf_w	:= (qt_opm_w * vl_unitario_item_nf_w);
	vl_unitario_item_nf_w	:= dividir(vl_total_item_nf_w,qt_opm_w);
	select	cd_material_estoque
	into STRICT	cd_material_estoque_w
	from	material
	where	cd_material = cd_material_w;
	if (coalesce(nr_sequencia_nf_w::text, '') = '' ) then
		select	coalesce(max(nr_sequencia_nf),0)
		into STRICT	nr_sequencia_nf_w
		from	nota_fiscal
		where	cd_estabelecimento = cd_estabelecimento_w
		and		cd_cgc_emitente = cd_cgc_emitente_w
		and		nr_nota_fiscal = nr_nota_fiscal_w
		and		cd_serie_nf = cd_serie_nf_p;
	end if;
	insert into nota_fiscal_item(
		cd_estabelecimento,
		cd_cgc_emitente,
		cd_serie_nf,
		nr_nota_fiscal,
		nr_sequencia_nf,
		nr_item_nf,
		cd_natureza_operacao,
		qt_item_nf,
		qt_item_estoque,
		vl_unitario_item_nf,
		vl_total_item_nf,
		dt_atualizacao,
		nm_usuario,
		vl_frete,
		vl_desconto,
		vl_despesa_acessoria,
		cd_material,
		vl_desconto_rateio,
		vl_seguro,
		nr_sequencia,
		vl_liquido,
		cd_unidade_medida_compra,
		cd_unidade_medida_estoque,
		cd_material_estoque,
		cd_local_estoque,
		cd_conta_contabil,
		cd_centro_custo,
		nr_seq_conta_financ,
		nr_seq_lote_fornec,
		cd_lote_fabricacao,
		cd_sequencia_parametro)
	values (	cd_estabelecimento_w,
		cd_cgc_emitente_w,
		cd_serie_nf_p,
		nr_nota_fiscal_w,
		nr_sequencia_nf_w,
		nr_item_nf_w,
		cd_natureza_operacao_w,
		qt_opm_w,
		qt_opm_w,
		vl_unitario_item_nf_w,
		vl_total_item_nf_w,
		clock_timestamp(),
		nm_usuario_p,
		0,
		0,
		0,
		cd_material_w,
		0,
		0,
		nr_sequencia_w,
		vl_total_item_nf_w,
		cd_unidade_medida_estoque_w,
		cd_unidade_medida_estoque_w,
		cd_material_estoque_w,
		coalesce(cd_local_estoque_ww,cd_local_estoque_w),
		cd_conta_contabil_w,
		cd_centro_custo_w,
		nr_seq_conta_financeira_w,
		nr_seq_lote_w,
		cd_lote_fabricacao_w,
		philips_contabil_pck.get_parametro_conta_contabil);
		CALL Gerar_Imposto_Nf_Item(nr_sequencia_w,nr_item_nf_w,nm_usuario_p,0,0,'N');
	end;
end loop;
close C01;

commit;

nr_sequencia_p := nr_sequencia_w;
CALL gerar_vencimento_nota_fiscal(nr_sequencia_w,nm_usuario_p);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_nf_opm ( nr_seq_op_p bigint, cd_serie_nf_p text, cd_operacao_nota_p bigint, cd_natureza_operacao_p bigint, cd_condicao_pagamento_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, cd_setor_atendimento_p bigint, ie_tipo_nota_opm_p text, nr_sequencia_p INOUT bigint) FROM PUBLIC;

