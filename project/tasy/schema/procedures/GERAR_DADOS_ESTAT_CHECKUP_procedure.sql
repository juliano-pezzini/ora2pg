-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE colunas AS (nm_coluna_w 		varchar(255));


CREATE OR REPLACE PROCEDURE gerar_dados_estat_checkup ( cd_pessoa_fisica_p text, nm_usuario_p text, ie_html5_p text default 'N') AS $body$
DECLARE


/* vetor */

type vetor is table of colunas index by integer;

/* globais */

vetor_w			vetor;
ivet			integer;
ind			integer;


dt_registro_w		timestamp;
dt_registro_ww		varchar(20);
ds_atributos_w		varchar(2000) := '';
ds_comando_w		varchar(2000);
ds_parametro_w		varchar(3000);
nr_seq_tipo_dado_w	bigint;
ds_tipo_dado_w		varchar(80);
nm_atributo_w		varchar(20);
qt_dado_w		double precision;
nr_atendimento_w	bigint;
ds_unidade_w		varchar(20);
vl_ref_inicial_w	double precision;
vl_ref_final_w		double precision;
nr_seq_apres_w		bigint;
ds_dado_w		varchar(255);
ie_status_result_W	varchar(1);
dt_entrada_w		varchar(10);
nr_sequencia_w		bigint;
nr_seq_escala_w		bigint;
ds_cor_w		varchar(15);
ds_cor_celula_w		varchar(2000);
ds_ind_w		varchar(15);
ie_pos_checkup_w	varchar(15);
nr_seq_tipo_dado_novo_w	bigint;
ds_module_w		varchar(2000);
OSUSER_w		varchar(2000);

ds_valor_cor_ref_abaixo_w	varchar(10);
ds_valor_cor_ref_acima_w	varchar(10);
ds_valor_cor_ref_ref_w		varchar(10);

c01 CURSOR FOR
	SELECT	distinct
		CASE WHEN b.ie_pos_checkup='S' THEN to_char(b.dt_registro,'dd/mm/yyyy hh24:mi:ss')  ELSE to_char(a.dt_entrada,'dd/mm/yyyy hh24:mi:ss') END ,
		CASE WHEN b.ie_pos_checkup='S' THEN b.dt_registro  ELSE a.dt_entrada END 
		--a.dt_entrada
	from	checkup_tipo_dado_estat c,
		checkup_dado_estat b,
		atendimento_paciente a
	where	a.nr_atendimento	= b.nr_atendimento
	and	b.nr_seq_tipo_dado	= c.nr_sequencia
	and	a.cd_pessoa_fisica	= cd_pessoa_fisica_p
	and	c.ie_situacao		= 'A'
	and	exists (	SELECT	1
				from	atendimento_paciente c
				where	c.cd_pessoa_fisica	= cd_pessoa_fisica_p
				and	c.nr_atendimento	= a.nr_atendimento)
	order 	by 2 desc;

c02 CURSOR FOR
	SELECT	c.nr_seq_escala, b.nr_seq_tipo_dado,
		substr(obter_desc_tipo_dado_checkup(b.nr_seq_tipo_dado),1,80),
		'DIA_' || CASE WHEN b.ie_pos_checkup='S' THEN to_char(b.dt_registro,'ddmmyyyyhh24miss')  ELSE to_char(a.dt_entrada,'ddmmyyyyhh24miss') END ,
		to_char(CASE WHEN b.ie_pos_checkup='S' THEN b.dt_registro  ELSE a.dt_entrada END ,'dd/mm/yy'),
		COALESCE(TO_CHAR((SELECT E.QT_PONTOS
		                    FROM ESCALA_EIF_II E
                            JOIN EIF_ESCALA_II E1
						      ON E.NR_SEQ_ESCALA = E1.NR_SEQUENCIA
						    JOIN CHECKUP_TIPO_DADO_ESTAT D
						      ON D.NR_SEQ_ESCALA = E1.NR_SEQUENCIA
						   WHERE E.NR_ATENDIMENTO = A.NR_ATENDIMENTO
						     AND E.DT_ATUALIZACAO = (SELECT MAX(E2.DT_ATUALIZACAO)
						                               FROM ESCALA_EIF_II E2
							 						   JOIN EIF_ESCALA_II A1
							 						     ON A1.NR_SEQUENCIA = E2.NR_SEQ_ESCALA
												      WHERE A1.NR_SEQUENCIA = C.NR_SEQ_ESCALA
												        AND coalesce(E2.DT_INATIVACAO::text, '') = '')  LIMIT 1)), coalesce(to_char(b.qt_dado), b.ds_dado)),
		b.nr_atendimento,
		coalesce(c.ds_unidade,' '),
		coalesce(obter_ref_checkup(cd_pessoa_fisica_p,c.nr_sequencia,0, 'MIN'),-100),
		coalesce(obter_ref_checkup(cd_pessoa_fisica_p,c.nr_sequencia,0, 'MAX'),-100),
		coalesce(b.ie_status_result,'V'),
		coalesce(b.nr_seq_apres,c.nr_seq_apres),
		c.ds_cor,
		b.qt_dado,
		coalesce(b.ie_pos_checkup,'N')
	from	checkup_tipo_dado_estat c,
		checkup_dado_estat b,
		atendimento_paciente a
	where	a.nr_atendimento	= b.nr_atendimento
	and	b.nr_seq_tipo_dado	= c.nr_sequencia
	and	a.cd_pessoa_fisica	= cd_pessoa_fisica_p
	and	c.ie_situacao		= 'A'
	and	CASE WHEN b.ie_pos_checkup='S' THEN  b.dt_registro  ELSE a.dt_entrada END  = to_date(vetor_w[ind].nm_coluna_w,'dd/mm/yyyy hh24:mi:ss')
	and	exists (	select	1
				from	atendimento_paciente c
				where	c.cd_pessoa_fisica	= cd_pessoa_fisica_p
				and	c.nr_atendimento	= a.nr_atendimento)
	order by c.nr_seq_apres;

C03 CURSOR FOR
	SELECT	b.nr_seq_tipo_dado,
		substr(obter_desc_tipo_dado_checkup(b.nr_seq_tipo_dado),1,80)
	from	checkup_dado_estat b,
		atendimento_paciente a
	where	a.nr_atendimento = b.nr_atendimento
	and	a.cd_pessoa_fisica = cd_pessoa_fisica_p
	and exists (	SELECT	1
			from	atendimento_paciente c
			where	c.cd_pessoa_fisica	= cd_pessoa_fisica_p
			and	c.nr_atendimento	= a.nr_atendimento)
	group by b.nr_seq_tipo_dado,
		substr(obter_desc_tipo_dado_checkup(b.nr_seq_tipo_dado),1,80);

C04 CURSOR FOR
	SELECT	b.nr_seq_tipo_dado,
		b.nr_atendimento,
		to_char(CASE WHEN b.ie_pos_checkup='S' THEN b.dt_registro  ELSE a.dt_entrada END ,'dd/mm/yy'),
		b.ie_pos_checkup
	from	checkup_tipo_dado_estat c,
		checkup_dado_estat b,
		atendimento_paciente a
	where	a.nr_atendimento	= b.nr_atendimento
	and	b.nr_seq_tipo_dado	= c.nr_sequencia
	and	a.cd_pessoa_fisica	= cd_pessoa_fisica_p
	and	c.ie_situacao		= 'A'
	and	CASE WHEN b.ie_pos_checkup='S' THEN b.dt_registro  ELSE a.dt_entrada END  <> to_date(vetor_w[ind].nm_coluna_w,'dd/mm/yyyy hh24:mi:ss')
	and	exists (	SELECT	1
				from	atendimento_paciente c
				where	c.cd_pessoa_fisica	= cd_pessoa_fisica_p
				and	c.nr_atendimento	= a.nr_atendimento)
	and not exists (	select	e.nr_seq_tipo_dado
				 from	checkup_tipo_dado_estat d,
				  	checkup_dado_estat e,
					atendimento_paciente f
				where	f.nr_atendimento	= e.nr_atendimento
				and 	e.nr_seq_tipo_dado  	= b.nr_seq_tipo_dado
				and	e.nr_seq_tipo_dado	= d.nr_sequencia
				and	f.cd_pessoa_fisica	= cd_pessoa_fisica_p
				and	d.ie_situacao		= 'A'
				and	CASE WHEN e.ie_pos_checkup='S' THEN e.dt_registro  ELSE f.dt_entrada END  = to_date(vetor_w[ind].nm_coluna_w,'dd/mm/yyyy hh24:mi:ss')
				and	exists (select	1
						from	atendimento_paciente c
						where	c.cd_pessoa_fisica	= cd_pessoa_fisica_p
						and	c.nr_atendimento	= f.nr_atendimento));



BEGIN


select	max(module||' - ' || machine||' - ' || program|| ' - ' || OSUSER|| ' - ' || TERMINAL),
	max(OSUSER)
into STRICT	ds_module_w,
	OSUSER_w
from	v$session
where	audsid = (SELECT userenv('sessionid') );



delete	FROM w_dado_checkup
where	nm_usuario = nm_usuario_p;

commit;

Select  CASE WHEN ie_html5_p='S' THEN '6873'  ELSE '790' END ,
		CASE WHEN ie_html5_p='S' THEN '6872'  ELSE '791' END ,
		CASE WHEN ie_html5_p='S' THEN '6871'  ELSE '992' END 		
into STRICT	ds_valor_cor_ref_abaixo_w,
		ds_valor_cor_ref_acima_w,
		ds_valor_cor_ref_ref_w
;


ivet	:= 0;
open	c01;
loop
fetch	c01 into
	dt_registro_ww,
	dt_registro_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	ivet := ivet + 1;
	vetor_w[ivet].nm_coluna_w	:= dt_registro_ww;
	end;
end loop;
close c01;

/* completar vetor se necessario  */

ind := ivet;
while(ind < 30) loop
	begin
	ind := ind + 1;
	vetor_w[ind].nm_coluna_w := null;
	end;
end loop;

select	nextval('w_dado_checkup_seq')
into STRICT	nr_sequencia_w
;

insert into w_dado_checkup(
	nr_sequencia,
	nm_usuario,
	ds_dado,
	ie_ordem,
	nr_seq_apres,
	nr_seq_tipo_dado,
	ds_result1,
	ds_result2,
	ds_result3,
	ds_result4,
	ds_result5,
	ds_result6,
	ds_result7,
	ds_result8,
	ds_result9,
	ds_result10,
	ds_result11,
	ds_result12,
	ds_result13,
	ds_result14,
	ds_result15,
	ds_result16,
	ds_result17,
	ds_result18,
	ds_result19,
	ds_result20,
	ds_result21,
	ds_result22,
	ds_result23,
	ds_result24,
	ds_result25,
	ds_result26,
	ds_result27,
	ds_result28,
	ds_result29,
	ds_result30)
values ( nr_sequencia_w,
	nm_usuario_p,
	obter_desc_expressao(767648),
	-3,
	0,
	0,
	vetor_w[1].nm_coluna_w,
	vetor_w[2].nm_coluna_w,
	vetor_w[3].nm_coluna_w,
	vetor_w[4].nm_coluna_w,
	vetor_w[5].nm_coluna_w,
	vetor_w[6].nm_coluna_w,
	vetor_w[7].nm_coluna_w,
	vetor_w[8].nm_coluna_w,
	vetor_w[9].nm_coluna_w,
	vetor_w[10].nm_coluna_w,
	vetor_w[11].nm_coluna_w,
	vetor_w[12].nm_coluna_w,
	vetor_w[13].nm_coluna_w,
	vetor_w[14].nm_coluna_w,
	vetor_w[15].nm_coluna_w,
	vetor_w[16].nm_coluna_w,
	vetor_w[17].nm_coluna_w,
	vetor_w[18].nm_coluna_w,
	vetor_w[19].nm_coluna_w,
	vetor_w[20].nm_coluna_w,
	vetor_w[21].nm_coluna_w,
	vetor_w[22].nm_coluna_w,
	vetor_w[23].nm_coluna_w,
	vetor_w[24].nm_coluna_w,
	vetor_w[25].nm_coluna_w,
	vetor_w[26].nm_coluna_w,
	vetor_w[27].nm_coluna_w,
	vetor_w[28].nm_coluna_w,
	vetor_w[29].nm_coluna_w,
	vetor_w[30].nm_coluna_w);

--Insere as linhas... menos a primeira : Atendimento / Data atendimento
open	c03;
loop
fetch	c03 into
	nr_seq_tipo_dado_w,
	ds_tipo_dado_w;
EXIT WHEN NOT FOUND; /* apply on c03 */
	begin
	
	select	nextval('w_dado_checkup_seq')
	into STRICT	nr_sequencia_w
	;

	insert into w_dado_checkup(
		nr_sequencia,
		nm_usuario,
		nr_seq_tipo_dado,
		ie_ordem,
		nr_seq_apres,
		ds_dado)
	values (	nr_sequencia_w,
		nm_usuario_p,
		nr_seq_tipo_dado_w,
		2,
		2,
		ds_tipo_dado_w);
	end;
end loop;
close c03;

insert into w_dado_checkup(
	nr_sequencia,
	nm_usuario,
	nr_seq_tipo_dado,
	ie_ordem,
	nr_seq_apres,
	ds_dado,
	ds_cor)
SELECT	nextval('w_dado_checkup_seq'),nm_usuario_p,null, 1, 0, obter_desc_expressao(283863), 'clWhite';

insert into w_dado_checkup(
	nr_sequencia,
	nm_usuario,
	nr_seq_tipo_dado,
	ie_ordem,
	nr_seq_apres,
	ds_dado)
SELECT nextval('w_dado_checkup_seq'),nm_usuario_p,null, 0, 0, obter_desc_expressao(286838);

/* gerar itens x horarios */

ind := 0;
while(ind < 30) loop
	begin
	ind := ind + 1;
	open	c02;
	loop
	fetch	c02 into
		nr_seq_escala_w,
		nr_seq_tipo_dado_w,
		ds_tipo_dado_w,
		nm_atributo_w,
		dt_entrada_w,
		ds_dado_w,
		nr_atendimento_w,
		ds_unidade_w,
		vl_ref_inicial_w,
		vl_ref_final_w,
		ie_status_result_W,
		nr_seq_apres_w,
		ds_cor_w,
		qt_dado_w,
		ie_pos_checkup_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin
		
		ds_cor_celula_w := '';

		if (ie_status_result_W = 'B') or (ie_status_result_W <> 'N') and (vl_ref_inicial_w <> -100) and (qt_dado_w IS NOT NULL AND qt_dado_w::text <> '') and (qt_dado_w < vl_ref_inicial_w) then
			begin

			select	CASE WHEN length(to_char(ind))=1 THEN '0'||to_char(ind)  ELSE to_char(ind) END
			into STRICT	ds_ind_w
			;

			ds_cor_celula_w	:= ds_ind_w || ds_valor_cor_ref_abaixo_w ||',';
			end;
		elsif (ie_status_result_W = 'A') or (ie_status_result_W <> 'N') and (vl_ref_final_w <> -100) and (qt_dado_w IS NOT NULL AND qt_dado_w::text <> '') and (qt_dado_w > vl_ref_final_w) then
			begin
			select	CASE WHEN length(to_char(ind))=1 THEN '0'||to_char(ind)  ELSE to_char(ind) END
			into STRICT	ds_ind_w
			;

			ds_cor_celula_w	:= ds_ind_w ||ds_valor_cor_ref_acima_w||',';
			end;
		end if;

		ds_comando_w	:=	' update w_dado_checkup '||
					' set ds_result' || to_char(ind) || ' = :ds_entrada' ||
					' where nm_usuario = :nm_usuario '||
					' and ie_ordem = 0';

		ds_parametro_w	:= 'ds_entrada='||dt_entrada_w ||'#@#@nm_usuario='||nm_usuario_p;

		CALL exec_sql_dinamico_bv('TASY', ds_comando_w,ds_parametro_w);

		ds_comando_w	:=	' update w_dado_checkup '||
					' set ds_result' || to_char(ind) || ' = :nr_atendimento' ||
					' where nm_usuario = :nm_usuario '||
					' and ie_ordem = 1';
					
		if (coalesce(ie_pos_checkup_w,'N') = 'S') then
			ds_parametro_w	:= 'nr_atendimento=P '||nr_atendimento_w ||'#@#@nm_usuario='||nm_usuario_p;
		else
			ds_parametro_w	:= 'nr_atendimento='||nr_atendimento_w ||'#@#@nm_usuario='||nm_usuario_p;
		end if;
		

		CALL exec_sql_dinamico_bv('TASY', ds_comando_w,ds_parametro_w);

		if (substr(ds_dado_w,1,1) = ',') then
			ds_dado_w	:= '0'||ds_dado_w;
		end if;
/*
		vl_ref_inicial_w		:= replace(vl_ref_inicial_w,',','.');
		vl_ref_final_w		:= replace(vl_ref_final_w,',','.');
*/
		ds_comando_w	:=	' update w_dado_checkup '||
					' set ds_result' || to_char(ind) || ' = :ds_dado' ||
					' ,nr_seq_escala    = :nr_seq_escala ' ||
					' ,ds_unidade		= :ds_unidade '||
					' ,vl_ref_inicial	= :vl_ref_inicial'||
					' ,vl_ref_final		= :vl_ref_final'||
					' ,ie_status_result	= :ie_status_result'||
					' ,nr_seq_apres		= :nr_seq_apres'||
					' ,ds_cor		= :ds_cor'||
					' ,ds_cor_celula	= substr(ds_cor_celula || :ds_cor_celula,1,2000)'||
					' ,ie_pos_checkup	= :ie_pos_checkup ' ||
					' where  nm_usuario	= :nm_usuario '||
					' and    nr_seq_tipo_dado = :nr_seq_tipo_dado';
		
		ds_parametro_w	:= 	'ds_dado='||ds_dado_w ||'#@#@nr_seq_escala='||nr_seq_escala_w || '#@#@ds_unidade='||ds_unidade_w ||'#@#@vl_ref_inicial='||vl_ref_inicial_w ||
					'#@#@vl_ref_final='||vl_ref_final_w ||'#@#@ie_status_result='||ie_status_result_W ||'#@#@nr_seq_apres='||nr_seq_apres_w||
					'#@#@nm_usuario='||nm_usuario_p ||'#@#@ie_pos_checkup='||ie_pos_checkup_w||'#@#@nr_seq_tipo_dado='||nr_seq_tipo_dado_w ||'#@#@ds_cor='||ds_cor_w ||
					'#@#@ds_cor_celula='||ds_cor_celula_w;

		CALL exec_sql_dinamico_bv('TASY',ds_comando_w,ds_parametro_w);

		end;
	end loop;
	close c02;
	end;
end loop;

ind := 0;
while(ind < 30) loop
	begin
	ind := ind + 1;
	open	c04;
	loop
	fetch	c04 into
		nr_seq_tipo_dado_novo_w,
		nr_atendimento_W,
		dt_entrada_w,
		ie_pos_checkup_w;
	EXIT WHEN NOT FOUND; /* apply on c04 */
		begin
		
		ds_cor_celula_w := '';

		select	CASE WHEN length(to_char(ind))=1 THEN '0'||to_char(ind)  ELSE to_char(ind) END
		into STRICT	ds_ind_w
		;
		
		if (coalesce(ie_pos_checkup_w,'N') = 'N') then
			ds_cor_celula_w	:= ds_ind_w ||ds_valor_cor_ref_ref_w||',';
		end if;
		
		if (substr(ds_dado_w,1,1) = ',') then
			ds_dado_w	:= '0'||ds_dado_w;
		end if;
		
		ds_comando_w	:=	' update w_dado_checkup '||
					' set ds_result' || to_char(ind) || ' = :ds_dado' ||
					' ,ds_cor = :ds_cor'||
					' ,ds_cor_celula = ds_cor_celula || :ds_cor_celula'||
					' where  nm_usuario = :nm_usuario '||
					' and nr_seq_tipo_dado = :nr_seq_tipo_dado';

		ds_parametro_w	:= 	'ds_dado='||'' ||
					'#@#@nm_usuario='||nm_usuario_p||'#@#@nr_seq_tipo_dado='||nr_seq_tipo_dado_novo_w ||'#@#@ds_cor='||ds_cor_w ||
					'#@#@ds_cor_celula='||ds_cor_celula_w;
					
		CALL exec_sql_dinamico_bv('TASY',ds_comando_w,ds_parametro_w);

		end;
	end loop;
	close c04;
	end;
end loop;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_dados_estat_checkup ( cd_pessoa_fisica_p text, nm_usuario_p text, ie_html5_p text default 'N') FROM PUBLIC;

