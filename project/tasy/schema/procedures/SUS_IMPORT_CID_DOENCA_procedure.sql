-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE sus_import_cid_doenca ( ie_tipo_import_p text, dt_importacao_p timestamp, nm_usuario_p text) AS $body$
DECLARE

					 
cd_doenca_cid_w			cid_doenca.cd_doenca_cid%type;
ie_sexo_w			cid_doenca.ie_sexo%type;
ds_doenca_cid_w			cid_doenca.ds_doenca_cid%type;
ds_descricao_original_w		cid_doenca.ds_descricao_original%type;
qt_cid_w			bigint := 0;
ie_commit_w			varchar(1) := 'N';
qt_categ_w			bigint := 0;
ds_erro_w			varchar(2000);
cd_categoria_cid_w		cid_categoria.cd_categoria_cid%type;

C01 CURSOR FOR 
	SELECT	substr(obter_valor_campo_separador(ds_conteudo,1,';'),1,10) cd_doenca_cid, 
		substr(obter_valor_campo_separador(ds_conteudo,3,';'),1,1) ie_sexo, 
		substr(obter_valor_campo_separador(ds_conteudo,5,';'),1,240) ds_doenca_cid, 
		substr(obter_valor_campo_separador(ds_conteudo,6,';'),1,240) ds_descricao_original 
	from	w_sus_importacao_cid 
	where	nm_usuario		= nm_usuario_p 
	and	ie_tipo_importacao	= ie_tipo_import_p 
	and	trunc(dt_importacao)	= trunc(dt_importacao_p) 
	order by	ds_conteudo;
	
type 		fetch_array is table of c01%rowtype;
s_array 	fetch_array;
i		integer := 1;
type vetor is table of fetch_array index by integer;
vetor_c01_w			vetor;

C02 CURSOR FOR 
	SELECT	a.cd_categoria_cid 
	from	cid_categoria a 
	where	not exists (	SELECT	1 
				from	cid_doenca x 
				where	x.cd_categoria_cid = a.cd_categoria_cid) 
	order by 1;
	
type 		fetch_array_w is table of c02%rowtype;
s_array_w	fetch_array_w;
w		integer := 1;
type vetor_w is table of fetch_array_w index by integer;
vetor_c02_w			vetor_w;
					
BEGIN 
 
open c01;
loop 
fetch c01 bulk collect into s_array limit 100000;
	vetor_c01_w(i) := s_array;
	i := i + 1;
EXIT WHEN NOT FOUND; /* apply on c01 */
end loop;
close c01;
 
for i in 1..vetor_c01_w.count loop 
	begin 
	s_array := vetor_c01_w(i);
	for z in 1..s_array.count loop 
		begin 
		 
		cd_doenca_cid_w			:= s_array[z].cd_doenca_cid;
		ie_sexo_w			:= s_array[z].ie_sexo;
		ds_doenca_cid_w			:= s_array[z].ds_doenca_cid;
		ds_descricao_original_w		:= s_array[z].ds_descricao_original;
		 
		if (cd_doenca_cid_w <> 'SUBCAT') then 
			begin 
			 
			select 	count(1) 
			into STRICT	qt_cid_w 
			from 	cid_doenca 
			where	cd_doenca_cid = cd_doenca_cid_w  LIMIT 1;						
 
			if (qt_cid_w = 0) then 
				begin 
				 
				ie_commit_w := 'S';
				 
				begin 
				insert into cid_doenca(	 
					cd_categoria_cid, 
					cd_doenca, 
					cd_doenca_cid, 
					cd_versao, 
					ds_descricao_original, 
					ds_doenca_cid, 
					ds_informacao_adic,	ds_mensagem, 
					dt_atualizacao, 
					ie_cad_interno,		ie_dieta_oral,		ie_estadio, 
					ie_exibir_localizador,	ie_exige_lado,		ie_obrigar_morfologia, 
					ie_repete_radio,	ie_sexo,		ie_situacao, 
					ie_subcategoria,	nm_usuario, 
					nr_seq_idioma,		qt_campos_radio,	qt_dias_prev_inter, 
					qt_idade_max,		qt_idade_min 
				) 
				values (	substr(cd_doenca_cid_w,1,3), 
					'', 
					cd_doenca_cid_w, 
					'', 
					ds_descricao_original_w, 
					ds_doenca_cid_w, 
					'',	'', 
					clock_timestamp(), 
					'N',	'',	'', 
					'',	'',	'', 
					'',	ie_sexo_w,	'A', 
					'',	nm_usuario_p, 
					null,	'',	null, 
					null,	null 
				);				
				exception 
				when others then 
					ds_erro_w := substr(sqlerrm(SQLSTATE),1,2000);
					CALL wheb_mensagem_pck.exibir_mensagem_abort(276020,'DS_ERRO_P='||ds_erro_w);
				end;
				 
				end;
			else 
				begin 
								 
				select	count(1) 
				into STRICT	qt_categ_w 
				from	cid_categoria 
				where	cd_categoria_cid = substr(cd_doenca_cid_w,1,3)  LIMIT 1;
				 
				if (qt_categ_w > 0) then 
					begin 
					ie_commit_w := 'S';
				 
					begin 
					update 	cid_doenca 
					set 	cd_categoria_cid	= substr(cd_doenca_cid_w,1,3), 
						ds_descricao_original	= ds_descricao_original_w, 
						ds_doenca_cid		= ds_doenca_cid_w, 
						ie_situacao		= 'A', 
						ie_sexo			= ie_sexo_w, 
						dt_atualizacao		= clock_timestamp(), 
						nm_usuario		= nm_usuario_p 
					where	cd_doenca_cid		= cd_doenca_cid_w;				
					exception 
					when others then 
						ds_erro_w := substr(sqlerrm(SQLSTATE),1,2000);
						CALL wheb_mensagem_pck.exibir_mensagem_abort(276021,'DS_ERRO_P='||ds_erro_w);
					end;					
					end;
				end if;			
				 
				end;
			end if;		
		 
			end;
		end if;		
		 
		end;
	end loop;
	end;
end loop;
 
open c02;
loop 
fetch c02 bulk collect into s_array_w limit 100000;
	vetor_c02_w(w) := s_array_w;
	w := w + 1;
EXIT WHEN NOT FOUND; /* apply on c02 */
end loop;
close c02;
 
for w in 1..vetor_c02_w.count loop 
	begin 
	s_array_w := vetor_c02_w(w);
	for x in 1..s_array_w.count loop 
		begin 
		cd_categoria_cid_w	:= s_array_w[x].cd_categoria_cid;
		 
		begin 
		delete	from cid_categoria 
		where	cd_categoria_cid = cd_categoria_cid_w;		
		exception 
		when others then 
			ds_erro_w := substr(sqlerrm(SQLSTATE),1,2000);
		end;
		 
		end;
	end loop;
	end;
end loop;
 
if (ie_commit_w = 'S') then 
	commit;
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE sus_import_cid_doenca ( ie_tipo_import_p text, dt_importacao_p timestamp, nm_usuario_p text) FROM PUBLIC;

