-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE horarios AS (horario_w varchar(255));


CREATE OR REPLACE PROCEDURE gerar_med_result_exame ( nm_usuario_p text, nr_seq_cliente_p bigint) AS $body$
DECLARE


ds_sep_bv_w		varchar(50);
dt_resultado_w		timestamp;
nr_seq_exame_w		bigint;
nm_exame_w		varchar(255);
ds_unidade_w		varchar(30);
ie_formato_resultado_w	varchar(1);
nr_seq_apresent_w		bigint;
ds_analise_result_w		varchar(4000);
vl_exame_w		double precision;
vl_exame_mascara_w	varchar(255);
ds_valor_exame_w		varchar(255);
vl_resultado_w		varchar(255);

nr_seq_wgrid_w		bigint;

ds_comando_update_w	varchar(4000);

nr_seq_result_w		bigint;
type vetor is table of horarios index by integer;
vetor_w			vetor;
i			integer	:= 0;
j			integer	:= 0;
k			integer	:= 0;

c01 CURSOR FOR
SELECT	dt_exame
from	med_result_exame
where	nr_seq_cliente = nr_seq_cliente_p
group by
	dt_exame;

c02 CURSOR FOR
SELECT	dt_resultado
from	w_med_result_exame_hor
where	nm_usuario = nm_usuario_p
group by
	dt_resultado
order by
	dt_resultado desc;

c03 CURSOR FOR
SELECT	b.nr_sequencia,
	b.ds_exame,
	b.ds_unidade,
	b.ie_formato_resultado,
	b.nr_seq_apresent
from	med_exame_padrao b,
	med_result_exame a
where	b.nr_sequencia = a.nr_seq_exame
and	coalesce(a.nr_seq_aval::text, '') = ''
and ((a.vl_exame IS NOT NULL AND a.vl_exame::text <> '') or (a.ds_valor_exame IS NOT NULL AND a.ds_valor_exame::text <> ''))
and	a.nr_seq_cliente = nr_seq_cliente_p
group by
	b.nr_sequencia,
	b.ds_exame,
	b.ds_unidade,
	b.ie_formato_resultado,
	b.nr_seq_apresent;

c04 CURSOR FOR
SELECT	b.nr_sequencia,
	--replace(campo_mascara(a.vl_exame,nvl(b.qt_decimais,0)),'.',','),
	campo_mascara(a.vl_exame,coalesce(b.qt_decimais,0)),
	a.ds_valor_exame
from	med_exame_padrao b,
	med_result_exame a
where	b.nr_sequencia = a.nr_seq_exame
and	coalesce(a.nr_seq_aval::text, '') = ''
and	a.nr_seq_cliente = nr_seq_cliente_p
and	a.dt_exame = dt_resultado_w
group by
	b.nr_sequencia,
	campo_mascara(a.vl_exame,coalesce(b.qt_decimais,0)),
	a.ds_valor_exame;

c05 CURSOR FOR
SELECT	a.nr_sequencia,
	a.nr_seq_exame,
	a.vl_exame
from	med_result_exame a
where	a.nr_seq_cliente = nr_seq_cliente_p
and	a.dt_exame = dt_resultado_w
and	coalesce(a.nr_seq_aval::text, '') = ''
and	(a.vl_exame IS NOT NULL AND a.vl_exame::text <> '')
and	coalesce(a.ie_tipo_result_alt,'N') = 'N'
group by
	a.nr_sequencia,
	a.nr_seq_exame,
	a.vl_exame;


BEGIN


if (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') and (nr_seq_cliente_p IS NOT NULL AND nr_seq_cliente_p::text <> '') then
	begin

	delete 	FROM w_med_result_exame_hor
	where	nm_usuario = nm_usuario_p;

	delete 	FROM w_med_result_exame_grid
	where	nm_usuario = nm_usuario_p;

	ds_sep_bv_w	:= obter_separador_bv;

	open c01;
	loop
	fetch c01 into dt_resultado_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		insert into w_med_result_exame_hor(
			nm_usuario,
			dt_resultado)
		values (
			nm_usuario_p,
			dt_resultado_w);
		end;
	end loop;
	close c01;

	open c02;
	loop
	fetch c02 into dt_resultado_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin
		if (i < 40) then
			begin
			i			:= i + 1;
			vetor_w[i].horario_w	:= to_char(dt_resultado_w,'dd/mm/yyyy hh24:mi:ss');
			end;
		end if;

		/* OS 300253 para atualizar o resultado quando alterado o cadastro */

		open c05;
		loop
		fetch c05 into	nr_seq_result_w,
				nr_seq_exame_w,
				vl_exame_w;
		EXIT WHEN NOT FOUND; /* apply on c05 */
			begin
			CALL med_altera_resultado_exame(nr_seq_result_w, vl_exame_w, nr_seq_cliente_p, nr_seq_exame_w);
			end;
		end loop;
		close c05;

		end;
	end loop;
	close c02;

	j	:= i;
	while(j < 40) loop
		begin
		j			:= j + 1;
		vetor_w[j].horario_w	:= null;
		end;
	end loop;

	open c03;
	loop
	fetch c03 into	nr_seq_exame_w,
			nm_exame_w,
			ds_unidade_w,
			ie_formato_resultado_w,
			nr_seq_apresent_w;
	EXIT WHEN NOT FOUND; /* apply on c03 */
		begin
		select	nextval('w_med_result_exame_grid_seq')
		into STRICT	nr_seq_wgrid_w
		;

		ds_analise_result_w	:= substr(obter_tipo_result_exame(nr_seq_exame_w,nr_seq_cliente_p),1,4000);

		insert into w_med_result_exame_grid(
			nr_sequencia,
			nm_usuario,
			nr_seq_exame,
			nm_exame,
			ds_unidade,
			ie_formato_resultado,
			nr_seq_apresent,
			ds_analise_result)
		values (
			nr_seq_wgrid_w,
			nm_usuario_p,
			nr_seq_exame_w,
			nm_exame_w,
			ds_unidade_w,
			ie_formato_resultado_w,
			nr_seq_apresent_w,
			ds_analise_result_w);
		end;
	end loop;
	close c03;

	while(k < 40) loop
		begin
		k		:= k + 1;
		dt_resultado_w	:= to_date(vetor_w[k].horario_w,'dd/mm/yyyy hh24:mi:ss');

		open c04;
		loop
		fetch c04 into	nr_seq_exame_w,
				vl_exame_mascara_w,
				ds_valor_exame_w;
		EXIT WHEN NOT FOUND; /* apply on c04 */
			begin
			ds_comando_update_w	:=	' update w_med_result_exame_grid ' ||
							' set ds_result' || to_char(k) || ' = :vl_result ' ||
							' where nm_usuario = :nm_usuario ' ||
							' and nr_seq_exame = :nr_seq_exame ';

			vl_resultado_w		:= null;

			if (vl_exame_mascara_w IS NOT NULL AND vl_exame_mascara_w::text <> '') then
				begin
				vl_resultado_w	:= replace(vl_exame_mascara_w,'.',',');
				end;
			elsif (ds_valor_exame_w IS NOT NULL AND ds_valor_exame_w::text <> '') then
				begin
				vl_resultado_w	:= ds_valor_exame_w;
				end;
			end if;

			if (vl_resultado_w IS NOT NULL AND vl_resultado_w::text <> '') then
				begin
				CALL exec_sql_dinamico_bv('TASYMED', ds_comando_update_w,	'vl_result=' || vl_resultado_w || ds_sep_bv_w ||
											'nm_usuario=' || nm_usuario_p || ds_sep_bv_w ||
											'nr_seq_exame=' || nr_seq_exame_w || ds_sep_bv_w);
				end;
			end if;
			end;
		end loop;
		close c04;
		end;
	end loop;

	commit;
	end;
end if;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_med_result_exame ( nm_usuario_p text, nr_seq_cliente_p bigint) FROM PUBLIC;

