-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE abrir_conciliacao_bancaria (nr_seq_conta_p bigint, nr_seq_extrato_p bigint, dt_inicial_concil_p timestamp, nm_usuario_p text) AS $body$
DECLARE


vl_saldo_bco_w		double precision;
vl_saldo_emp_w		double precision;
nr_seq_conciliacao_w	bigint;
dt_referencia_w		timestamp;
cd_estabelecimento_w	smallint;
ie_nao_atualiza_w	varchar(1);
ie_saldo_estorno_w	varchar(1);
ie_saldo_atual_w	varchar(1);
dt_inicio_w		timestamp;
dt_final_w		timestamp;
dt_inicio_lanc_w	timestamp;
dt_final_lanc_w		timestamp;
ie_conciliacao_conta_w	varchar(1);
cd_agencia_bancaria_w	varchar(8);
cd_conta_w		banco_estabelecimento.cd_conta%type;
ie_digito_conta_w	varchar(2);
ds_qt_dias_futuros_w	varchar(255);
ds_qt_dias_passados_w	varchar(255);
qt_dias_futuros_w	bigint;
qt_dias_passados_w	bigint;
dt_inicio_trunc_w	timestamp;
dt_final_fim_dia_w	timestamp;
/* Projeto Multimoeda - Variáveis */

cd_moeda_banco_w	integer;
cd_moeda_empresa_w	integer;
ie_banco_estrang_w	varchar(1) := 'N';


BEGIN

select	coalesce(max(VL_SALDO_FINAL),0),
	max(dt_inicio),
	coalesce(max(dt_final),clock_timestamp())
into STRICT	vl_saldo_bco_w,
	dt_inicio_w,
	dt_final_w
from	banco_extrato
where	nr_sequencia	= nr_seq_extrato_p;

select	min(a.dt_movimento),
	max(a.dt_movimento)
into STRICT	dt_inicio_lanc_w,
	dt_final_lanc_w
from	banco_extrato_lanc a
where	a.nr_seq_extrato	= nr_seq_extrato_p;

select	max(a.cd_estabelecimento),
	max(a.cd_agencia_bancaria),
	max(a.cd_conta),
	max(a.ie_digito_conta),
	max(cd_moeda)
into STRICT	cd_estabelecimento_w,
	cd_agencia_bancaria_w,
	cd_conta_w,
	ie_digito_conta_w,
	cd_moeda_banco_w
from	banco_estabelecimento a
where	a.nr_sequencia	= nr_seq_conta_p;

/* Projeto Multimoeda - Busca a moeda padrão da empresa */

select	obter_moeda_padrao_empresa(coalesce(cd_estabelecimento_w,obter_estabelecimento_ativo),'E')
into STRICT	cd_moeda_empresa_w
;

/* Projeto Multimoeda - Verifica se a conta é em moeda estrangeira ou não para definir os valores para a conciliação */

if (coalesce(cd_moeda_banco_w,cd_moeda_empresa_w) <> cd_moeda_empresa_w) then
	ie_banco_estrang_w := 'S';
else
	ie_banco_estrang_w := 'N';
end if;

select	coalesce(max(a.ie_conciliacao_conta),'N')
into STRICT	ie_conciliacao_conta_w
from	parametro_controle_banc a
where	a.cd_estabelecimento	= cd_estabelecimento_w;

ie_saldo_atual_w := obter_param_usuario(814, 65, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_saldo_atual_w);
ds_qt_dias_futuros_w := obter_param_usuario(814, 85, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ds_qt_dias_futuros_w);
ds_qt_dias_passados_w := obter_param_usuario(814, 86, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ds_qt_dias_passados_w);

qt_dias_futuros_w	:= somente_numero(substr(ds_qt_dias_futuros_w,1,4));
qt_dias_passados_w	:= somente_numero(substr(ds_qt_dias_passados_w,1,4));

if (coalesce(ie_saldo_atual_w,'N')	= 'S') then

	select	coalesce(max(a.nr_sequencia),0)
	into STRICT	nr_seq_conciliacao_w
	from	conciliacao_bancaria a
	where	exists (SELECT	1
		from	banco_extrato z,
			banco_extrato_lanc y,
			concil_banc_pend_bco x
		where	z.dt_inicio		between trunc(dt_inicio_w,'dd') and fim_dia(dt_final_w)
		and	y.nr_seq_extrato	= z.nr_sequencia
		and	x.nr_seq_lanc_extrato	= y.nr_sequencia
		and	x.nr_seq_conciliacao	= a.nr_sequencia)
	and	coalesce(a.dt_final::text, '') = ''
	and	a.nr_seq_conta	= nr_seq_conta_p;

	if (nr_seq_conciliacao_w > 0) then
		/* Não é possível abrir uma conciliação com outra aberta!
		Conciliação: nr_seq_conciliacao_w */
		CALL wheb_mensagem_pck.exibir_mensagem_abort(178115,'NR_SEQ_CONCILIACAO_W=' || nr_seq_conciliacao_w);
	end if;

	ie_saldo_estorno_w := obter_param_usuario(814, 63, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_saldo_estorno_w);

	dt_inicio_trunc_w	:= PKG_DATE_UTILS.START_OF(coalesce(dt_inicio_lanc_w,dt_inicio_w), 'DAY');
	dt_final_fim_dia_w	:= PKG_DATE_UTILS.START_OF(fim_dia(coalesce(dt_final_lanc_w,dt_final_w)), 'DAY');

	select	CASE WHEN coalesce(ie_banco_estrang_w,'N')='S' THEN coalesce(sum(obter_saldo_banco_diario_estr(nr_seq_saldo_banco,fim_dia(dt_transacao))),0)  ELSE coalesce(sum(obter_saldo_banco_diario(nr_seq_saldo_banco,fim_dia(dt_transacao))),0) END  vl_saldo_final
	into STRICT	vl_saldo_emp_w
	from (SELECT	distinct
			PKG_DATE_UTILS.START_OF(a.dt_transacao, 'DAY') dt_transacao,
			a.nr_seq_saldo_banco
		from	banco_estabelecimento c,
			movto_trans_financ a,
			banco_saldo b
		where	b.nr_sequencia	= a.nr_seq_saldo_banco
		and (b.nr_seq_conta = nr_seq_conta_p or (ie_conciliacao_conta_w = 'S' and coalesce(c.cd_agencia_bancaria,'0') = coalesce(cd_agencia_bancaria_w,'0') and coalesce(c.cd_conta,'0') = coalesce(cd_conta_w,'0') and coalesce(c.ie_digito_conta,'0') = coalesce(ie_digito_conta_w,'0')))
		and	b.nr_seq_conta	= c.nr_sequencia) alias18
	where	dt_transacao	between dt_inicio_trunc_w and dt_final_fim_dia_w;

else

	select	coalesce(max(nr_sequencia),0)
	into STRICT	nr_seq_conciliacao_w
	from	conciliacao_bancaria
	where	coalesce(dt_final::text, '') = ''
	and	nr_seq_conta	= nr_seq_conta_p;

	if (nr_seq_conciliacao_w > 0) then
		/* Não é possível abrir uma conciliação com outra aberta!
		Conciliação: nr_seq_conciliacao_w */
		CALL wheb_mensagem_pck.exibir_mensagem_abort(178115,'NR_SEQ_CONCILIACAO_W=' || nr_seq_conciliacao_w);
	end if;

	select	max(a.dt_referencia)
	into STRICT	dt_referencia_w
	from	banco_saldo a
	where	a.nr_seq_conta	= nr_seq_conta_p;

	select	CASE WHEN coalesce(ie_banco_estrang_w,'N')='S' THEN coalesce(max(a.vl_saldo_estrang),0)  ELSE coalesce(max(a.vl_saldo),0) END
	into STRICT	vl_saldo_emp_w
	from	banco_estabelecimento c,
		Banco_Saldo a
	where	a.nr_seq_conta	= c.nr_sequencia
	and	a.dt_referencia	= dt_referencia_w
	and (a.nr_seq_conta = nr_seq_conta_p or (ie_conciliacao_conta_w = 'S' and coalesce(c.cd_agencia_bancaria,'0') = coalesce(cd_agencia_bancaria_w,'0') and coalesce(c.cd_conta,'0') = coalesce(cd_conta_w,'0') and coalesce(c.ie_digito_conta,'0') = coalesce(ie_digito_conta_w,'0')));

end if;

select	nextval('conciliacao_bancaria_seq')
into STRICT	nr_seq_conciliacao_w
;

insert into conciliacao_bancaria(NR_SEQUENCIA,
	NR_SEQ_CONTA,
	DT_ATUALIZACAO,
	NM_USUARIO,
	DT_CONCILIACAO,
	DT_INICIAL,
	DT_FINAL,
	DT_FECHAMENTO,
	VL_SALDO_BANCO,
	VL_DEB_NAO_LANC_EMP,
	VL_CRED_NAO_LANC_EMP,
	VL_SALDO_BANCO_CONC,
	VL_SALDO_EMP,
	VL_DEB_NAO_LANC_BANCO,
	VL_CRED_NAO_LANC_BANCO,
	VL_SALDO_EMP_CONC,
	VL_DIF_CONCILIACAO)
values (nr_seq_conciliacao_w,
	nr_seq_conta_p,
	clock_timestamp(),
	nm_usuario_p,
	clock_timestamp(),
	dt_inicial_concil_p,
	null,
	null,
	vl_saldo_bco_w,
	0,
	0,
	0,
	vl_saldo_emp_w,
	0,
	0,
	0,
	0);

ie_nao_atualiza_w := obter_param_usuario(814, 51, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_nao_atualiza_w);

insert	into CONCIL_BANC_PEND_TASY(NR_SEQUENCIA,
	NR_SEQ_CONCILIACAO,
	NR_SEQ_MOVTO_TRANS,
	DT_ATUALIZACAO,
	NM_USUARIO)
SELECT	nextval('concil_banc_pend_tasy_seq'),
	nr_seq_conciliacao_w,
	a.nr_sequencia,
	clock_timestamp(),
	nm_usuario_p
from	banco_estabelecimento d,
	transacao_financeira c,
	movto_trans_financ a,
	banco_saldo b
where	((coalesce(ie_saldo_atual_w,'N') = 'N' and
	a.dt_transacao between(coalesce(dt_inicio_lanc_w,coalesce(dt_inicio_w,clock_timestamp())) - coalesce(qt_dias_passados_w,0)) and fim_dia(coalesce(dt_final_lanc_w,coalesce(dt_final_w,clock_timestamp())) + coalesce(qt_dias_futuros_w,0))) or
	a.dt_transacao between trunc(coalesce(dt_inicio_lanc_w,dt_inicio_w),'dd') and fim_dia(coalesce(dt_final_lanc_w,dt_final_w)))
and	not exists (select	1
	from	movto_trans_financ x
	where	x.nr_seq_movto_orig	= a.nr_sequencia)
and	coalesce(a.nr_seq_movto_orig::text, '') = ''	/* ahoffelder - OS 474477 - 21/09/2012 - não trazer estornos */
and	coalesce(a.nr_seq_concil::text, '') = ''
and (coalesce(ie_nao_atualiza_w,'S') = 'S' or c.ie_banco <> 'T')
and	a.nr_seq_trans_financ	= c.nr_sequencia
and	a.ie_conciliacao	= 'N'
and	a.nr_seq_saldo_banco	= b.nr_sequencia
and	b.nr_seq_conta		= d.nr_sequencia
and (b.nr_seq_conta = nr_seq_conta_p or (ie_conciliacao_conta_w = 'S' and coalesce(d.cd_agencia_bancaria,'0') = coalesce(cd_agencia_bancaria_w,'0') and coalesce(d.cd_conta,'0') = coalesce(cd_conta_w,'0') and coalesce(d.ie_digito_conta,'0') = coalesce(ie_digito_conta_w,'0')));

insert	into CONCIL_BANC_PEND_BCO(nr_sequencia,
	NR_SEQ_CONCILIACAO,
	DT_ATUALIZACAO,
	NM_USUARIO,
	NR_SEQ_LANC_EXTRATO)
SELECT	nextval('concil_banc_pend_bco_seq'),
	nr_seq_conciliacao_w,
	clock_timestamp(),
	nm_usuario_p,
	a.nr_sequencia
from	banco_extrato_lanc a,
	banco_extrato b
where (b.nr_sequencia = nr_seq_extrato_p or (coalesce(ie_saldo_atual_w,'N') = 'N' and a.dt_movimento between(coalesce(dt_inicio_lanc_w,coalesce(dt_inicio_w,clock_timestamp())) - coalesce(qt_dias_passados_w,0)) and fim_dia(coalesce(dt_final_lanc_w,coalesce(dt_final_w,clock_timestamp())) + coalesce(qt_dias_futuros_w,0))))
and	coalesce(a.nr_seq_concil::text, '') = ''
and	a.ie_conciliacao	= 'N'
and	a.nr_seq_extrato	= b.nr_sequencia
and	b.nr_seq_conta		= nr_seq_conta_p;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE abrir_conciliacao_bancaria (nr_seq_conta_p bigint, nr_seq_extrato_p bigint, dt_inicial_concil_p timestamp, nm_usuario_p text) FROM PUBLIC;

