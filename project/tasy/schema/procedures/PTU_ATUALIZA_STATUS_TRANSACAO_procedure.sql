-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ptu_atualiza_status_transacao ( nr_seq_transacao_p bigint, cd_transacao_p text, nm_usuario_p text) AS $body$
DECLARE

 
nr_seq_guia_w			bigint;
nr_seq_pedido_w			bigint;
cd_servico_w			integer;
ie_status_w			varchar(2);
ie_status_complemento_w		smallint;
qt_registro_auditoria_w		smallint;
qt_registro_aprovado_w		smallint;
qt_registro_negado_w		smallint;
nr_seq_requisicao_w		bigint;

C01 CURSOR FOR 
	SELECT	nr_sequencia, 
		cd_servico 
	from	ptu_pedido_compl_aut_serv 
	where	nr_seq_pedido	= nr_seq_transacao_p;
	
C02 CURSOR FOR 
	SELECT	ie_status 
	from	pls_guia_plano_proc 
	where	nr_seq_guia	= nr_seq_guia_w 
	and	cd_procedimento	= cd_servico_w 
	
union
 
	SELECT	ie_status 
	from	pls_requisicao_proc 
	where	nr_seq_requisicao	= nr_seq_requisicao_w 
	and	cd_procedimento		= cd_servico_w;
	
C03 CURSOR FOR 
	SELECT	ie_status 
	from	pls_guia_plano_mat 
	where	nr_seq_guia	= nr_seq_guia_w 
	and	substr(pls_obter_seq_codigo_material(nr_seq_material,''),1,8)	= cd_servico_w 
	
union
 
	SELECT	ie_status 
	from	pls_requisicao_mat 
	where	nr_seq_requisicao	= nr_seq_requisicao_w 
	and	substr(pls_obter_seq_codigo_material(nr_seq_material,''),1,8)	= cd_servico_w;


BEGIN 
 
if (cd_transacao_p	= '00505') then 
	select	nr_seq_guia, 
		nr_seq_requisicao 
	into STRICT	nr_seq_guia_w, 
		nr_seq_requisicao_w 
	from	ptu_pedido_compl_aut 
	where	nr_sequencia	= nr_seq_transacao_p;
	 
	open C01;
	loop 
	fetch C01 into 
		nr_seq_pedido_w, 
		cd_servico_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin 
		 
		open C02;
		loop 
		fetch C02 into	 
			ie_status_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin 
			 
			if (ie_status_w	= 'A') then 
				ie_status_complemento_w	:= 4;
			elsif (ie_status_w	in ('N','M')) then 
				ie_status_complemento_w	:= 2;
			elsif (ie_status_w	in ('P', 'S')) then 
				ie_status_complemento_w	:= 1;
			end if;
			 
			update	ptu_pedido_compl_aut_serv 
			set	ie_status_complemento	= ie_status_complemento_w, 
				dt_atualizacao		= clock_timestamp(), 
				nm_usuario		= nm_usuario_p 
			where	nr_sequencia		= nr_seq_pedido_w;
			 
			end;
		end loop;
		close C02;
		 
		open C03;
		loop 
		fetch C03 into	 
			ie_status_w;
		EXIT WHEN NOT FOUND; /* apply on C03 */
			begin 
			 
			if (ie_status_w	= 'A') then 
				ie_status_complemento_w	:= 4;
			elsif (ie_status_w	in ('N','M')) then 
				ie_status_complemento_w	:= 2;
			elsif (ie_status_w	in ('P', 'S')) then 
				ie_status_complemento_w	:= 1;
			end if;
			 
			update	ptu_pedido_compl_aut_serv 
			set	ie_status_complemento	= ie_status_complemento_w, 
				dt_atualizacao		= clock_timestamp(), 
				nm_usuario		= nm_usuario_p 
			where	nr_sequencia		= nr_seq_pedido_w;
			 
			end;
		end loop;
		close C03;
		 
		end;
	end loop;
	close C01;
	 
	select	count(*) 
	into STRICT	qt_registro_auditoria_w 
	from	ptu_pedido_compl_aut_serv 
	where	ie_status_complemento	= 4 
	and	nr_seq_pedido		= nr_seq_transacao_p;
	 
	select	count(*) 
	into STRICT	qt_registro_aprovado_w 
	from	ptu_pedido_compl_aut_serv 
	where	ie_status_complemento	= 1 
	and	nr_seq_pedido		= nr_seq_transacao_p;
	 
	select	count(*) 
	into STRICT	qt_registro_negado_w 
	from	ptu_pedido_compl_aut_serv 
	where	ie_status_complemento	= 2 
	and	nr_seq_pedido		= nr_seq_transacao_p;
	 
	if (qt_registro_auditoria_w	> 0) then 
		update	ptu_pedido_compl_aut 
		set	ie_status_complemento	= 4, 
			dt_atualizacao		= clock_timestamp(), 
			nm_usuario		= nm_usuario_p 
		where	nr_sequencia		= nr_seq_transacao_p;
		 
		if (nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '') then 
			CALL ptu_gerar_auditoria_compl(nr_seq_guia_w, null, nm_usuario_p);
			CALL ptu_gerar_grupo_aud_padrao(nr_seq_guia_w, null, 'GA', nm_usuario_p);
		elsif (nr_seq_requisicao_w IS NOT NULL AND nr_seq_requisicao_w::text <> '') then 
			CALL ptu_gerar_auditoria_compl(null, nr_seq_requisicao_w, nm_usuario_p);
			CALL ptu_gerar_grupo_aud_padrao(null, nr_seq_requisicao_w, 'GA', nm_usuario_p);
		end if;
	elsif (qt_registro_aprovado_w	> 0) and (qt_registro_negado_w	= 0) then 
		update	ptu_pedido_compl_aut 
		set	ie_status_complemento	= 1, 
			dt_atualizacao		= clock_timestamp(), 
			nm_usuario		= nm_usuario_p 
		where	nr_sequencia		= nr_seq_transacao_p;
	elsif (qt_registro_aprovado_w	= 0) and (qt_registro_negado_w	> 0) then 
		update	ptu_pedido_compl_aut 
		set	ie_status_complemento	= 2, 
			dt_atualizacao		= clock_timestamp(), 
			nm_usuario		= nm_usuario_p 
		where	nr_sequencia		= nr_seq_transacao_p;
	elsif (qt_registro_aprovado_w	> 0) and (qt_registro_negado_w	> 0) then 
		update	ptu_pedido_compl_aut 
		set	ie_status_complemento	= 5, 
			dt_atualizacao		= clock_timestamp(), 
			nm_usuario		= nm_usuario_p 
		where	nr_sequencia		= nr_seq_transacao_p;
	end if;
end if;
	 
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_atualiza_status_transacao ( nr_seq_transacao_p bigint, cd_transacao_p text, nm_usuario_p text) FROM PUBLIC;

