-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_mala_direta ( nr_contrato_p bigint, nr_contrato_final_p bigint, dt_parametro_de_p timestamp, dt_parametro_ate_p timestamp, ie_tipo_data_p bigint, ds_parametro_benef_p text, cd_pessoa_p text, ie_tipo_pessoa_p bigint, nr_seq_lote_carteira_p bigint, ie_tipo_prestador_p bigint, nm_usuario_p text, dt_mes_reajuste_p timestamp, nr_seq_especialidade_p bigint, nr_seq_cbo_p bigint, ie_enviar_profissional_p text, ie_situacao_contrato_p bigint, nr_seq_lote_notificacao_p bigint, ie_benef_sem_cpf_p text, cd_estabelecimento_p bigint, nr_seq_lote_revisao_p bigint, ie_benef_ativo_p bigint, ie_benef_remido_p bigint, qt_idade_inicial_p text, qt_idade_final_p text, ie_sit_financ_p bigint, cd_municipio_p text, ie_tipo_contratacao_p text, ie_sexo_p bigint, ie_lote_pagamento_p text, ie_regulamentacao_p text, nr_seq_sca_p bigint, ie_dt_reajuste_p bigint, ie_fator_moderador_p text, cd_municipio_prest_p text, sg_uf_prestador_p text, nr_seq_regiao_prestador_p bigint, nr_seq_tipo_prestador_p bigint, ie_tipo_endereco_prest_p text, nr_seq_plano_p bigint, nr_matricula_inicial_p bigint, nr_matricula_final_p bigint, cd_municipio_cooperado_p text, nr_seq_situacao_cooperado_p bigint, nr_crm_cooperado_p text, ie_vinc_contratual_coop_p text, cd_convenio_atend_p bigint, nr_seq_parentesco_p bigint, ie_apres_pagador_notif_p text, nr_seq_lote_mens_p bigint, cd_tipo_contato_p bigint, nr_seq_grupo_contratual_p bigint, ie_situacao_prest_p bigint, ie_tipo_cooperado_p bigint, nr_seq_especialidade_coop_p bigint, cd_cgc_pagador_p text, ds_situacao_trabalhista_p text, ie_considera_ender_prest_p text, ie_tipo_contrato_p text, nr_seq_tipo_compl_adic_p bigint, area_atuacao_prest_p bigint, area_atuacao_coop_p bigint) AS $body$
DECLARE


/* IE_TIPO_DATA_P
	0 - Não filtrar por data
	1 - Emissão lote carteirinha
	2 - Recebimento carteirinha
	3 - Contrato
	4 - Dt. aniversário
	5 - Término dependência
	6 - Rescião
	7 - Adesão beneficiário
*/


/* DS_PARAMETRO_BENEF_P - Só será verificado esse parâmetro se o parâmetro nr_contrato_p for maior do que zero
	1 - Titulares
	2 - Dependentes
	3 - Estipulante PJ
	4 - Estipulante PF
	5- Sub-Estipulante
	6- Pagador PJ
	7- Pagador PF
	8 - Contato do contrato
*/


/* IE_TIPO_PESSOA_P
	0 - Pessoa jurídica
	1 - Pessoa física
	2 - Beneficiário
	3 - Pagador
	4 - Estipulante PF
	5 - Estipulante PJ
	6 - Subestipulante
	7 - Cooperariva
*/


/* IE_DT_REAJUSTE_P
	0 - Não filtrar
	1 - Contrato
	2 - Beneficiário
	3 - SCA
*/


/* DS_SITUACAO_TRABALHISTA_P
	0 - Demitido
	1 - Aposentado
	2 - Exonerado
*/


/* Beneficiário Remido
	0 - Ambos
	1 - Sim
	2 - Não
*/
ie_parametro_w			varchar(10);

cd_pessoa_fisica_w		varchar(10);
nr_seq_contrato_w		bigint;
cd_cgc_w			varchar(14);
nr_seq_segurado_w		bigint;
cd_segurado_w			varchar(10);
cd_pf_estipulante_w		varchar(10);
cd_cgc_estipulante_w		varchar(14);
nr_seq_subestipulante_w		bigint;
nr_seq_pagador_w		bigint;
cd_pagador_pf_w			varchar(10);
cd_pagador_pj_w			varchar(14);
nr_seq_titular_w		bigint;
cd_beneficiario_w		varchar(10)	:= null;
ds_tipo_beneficiario_w		varchar(80);
qt_registros_w			integer	:= 0;
qt_pagadores_w			integer	:= 0;
dt_emissao_lote_w		timestamp;
ie_recebimento_cart_w		varchar(1)	:= 'S';
cd_pf_cobranca_w		varchar(10);
cd_cgc_cobranca_w		varchar(14);
nr_seq_cobranca_w		bigint;
dt_contrato_w			timestamp;
ie_mes_reajuste_w		varchar(1)	:= 'N';
cd_cgc_prestador_w		varchar(14);
cd_pf_prestador_w		varchar(10);
ie_prestador_w			varchar(2);
ie_tipo_pagador_w		varchar(2);
cd_cgc_subestipulante_w		varchar(14);
cd_pf_subestipulante_w		varchar(10);
nr_seq_contrato_ww		bigint;
cd_municipio_ibge_w		varchar(10);

cd_pessoa_fisica_pessoa_w	varchar(10);
nr_seq_contrato_pessoa_w	bigint;
ds_tipo_destinatario_pessoa_w	varchar(50);
nr_seq_segurado_pessoa_w	bigint;
cd_cgc_pessoa_w			varchar(14);
ie_inserir_mala_direta_w	varchar(1)	:= 'S';
qt_idade_w			integer;
nr_cpf_w			varchar(11);
dt_adesao_benef_w		timestamp;
dt_liberacao_w			timestamp;
dt_rescisao_w			timestamp;
dt_limite_utilizacao_w		timestamp;
ie_ativo_w			varchar(2)	:= 'N';
dt_migracao_w			timestamp;
ie_situacao_benef_w		varchar(100) := '';
dt_nascimento_w			timestamp	:= null;
qt_idade_benef_w		varchar(10);
ie_inadimplente_w		varchar(1);
ie_gera_w			varchar(1);
ie_sexo_w			varchar(1);
ie_municipio_w			varchar(1);
ie_notifica_w			varchar(1);
ie_lote_rev_w			varchar(1);
ie_controla_dt_dependencia_w	varchar(1);
ie_fator_mod_coparticipacao_w	varchar(1);
ie_fator_mod_franquia_w		varchar(1);
nr_seq_plano_w			bigint;
qt_registros_convenio_w		integer;
nr_seq_parentesco_w		bigint;
ie_situacao_trabalhista_w	varchar(10);

nr_seq_prestador_w		bigint;
nr_seq_lote_w			bigint;
dt_termino_dependencia_w	timestamp;
dt_receb_notif_w		timestamp;
qt_registros_prestador_w	integer;
ie_tipo_endereco_w		varchar(10);
nr_seq_tipo_prestador_w		bigint;
dt_exclusao_prestador_w		timestamp;
nr_seq_tipo_compl_adic_w	bigint;


nr_seq_cooperado_w		bigint;
cd_cgc_cooperado_w		varchar(14);
cd_pf_cooperado_w		varchar(10);
qt_registros_cooperado_w	integer;

nr_seq_contato_w		bigint;
cd_pf_contato_w			varchar(10);
dt_nascimento_contato_w		timestamp	:= null;
qt_registros_contato_w		integer;
qt_contrato_filtro_w		integer;
nr_seq_intercambio_w		bigint;

qt_filtros_mala_direta_w	integer;
ie_tipo_contrato_w		varchar(255)	:= coalesce(ie_tipo_contrato_p,'CO');--CO  - Contratos do plano de saúde,  CI - Contratos de intercâmbio
ds_sql_c01_w			varchar(4000);
ds_restricao_w			varchar(4000);
enter_w				pls_util_pck.enter_w%type := pls_util_pck.enter_w;
v_c01_w				pls_util_pck.t_cursor;
qt_filtros_mala_direta_ww	integer;

/* Cursor C01 é criado dinamicamente. */

C02 CURSOR FOR
	SELECT	'PF' ie_prestador,
		'' cd_cgc,
		a.cd_pessoa_fisica,
		a.nr_sequencia,
		a.DT_EXCLUSAO
	from	pls_prestador a,
		pessoa_fisica b
	where	a.cd_pessoa_fisica	= b.cd_pessoa_fisica
	and	a.ie_situacao		= 'A'
	and	ie_tipo_prestador_p in (1,3)
	and	a.cd_estabelecimento	= cd_estabelecimento_p
	and	((coalesce(nr_seq_especialidade_p,0) = 0) or (obter_se_especialidade_medico(a.cd_pessoa_fisica, nr_seq_especialidade_p) = 'S'))
	and	((coalesce(nr_seq_cbo_p,0) = 0) or (obter_dados_pf(a.cd_pessoa_fisica, 'CBOS') = nr_seq_cbo_p))
	and	(((ie_benef_sem_cpf_p = 'S') and (coalesce(b.nr_cpf::text, '') = '') and (obter_idade_pf(b.cd_pessoa_fisica,clock_timestamp(),'A') >= 18))
		or (ie_benef_sem_cpf_p = 'N'))
	and (nr_seq_lote_revisao_p = 0  or exists (SELECT	1
							from	pls_pessoa_inconsistente x
							where	x.cd_pessoa_fisica	= b.cd_pessoa_fisica
							and	x.nr_seq_lote		= nr_seq_lote_revisao_p))
	
union

	select	'PJ' ie_prestador,
		a.cd_cgc,
		b.cd_medico cd_pessoa_fisica,
		a.nr_sequencia,
		a.DT_EXCLUSAO
	FROM pls_prestador a
LEFT OUTER JOIN pls_prestador_medico b ON (a.nr_sequencia = b.nr_seq_prestador)
WHERE a.ie_situacao	= 'A' and coalesce(b.ie_situacao,'A')	= 'A' and trunc(clock_timestamp(),'dd') between trunc(coalesce(b.dt_inclusao,clock_timestamp()),'dd') and fim_dia(trunc(coalesce(b.dt_exclusao,clock_timestamp()),'dd'))  and (a.cd_cgc IS NOT NULL AND a.cd_cgc::text <> '') and ie_tipo_prestador_p in (1,2) and a.cd_estabelecimento	= cd_estabelecimento_p and ((nr_seq_especialidade_p = 0) or (obter_se_especialidade_medico(b.cd_medico, nr_seq_especialidade_p) = 'S')) and ((coalesce(nr_seq_cbo_p,0) = 0) or (obter_dados_pf(b.cd_medico, 'CBOS') = nr_seq_cbo_p)) and (nr_seq_lote_revisao_p = 0 or exists (select	1
							from	pls_pessoa_inconsistente x
							where	x.cd_cgc	= a.cd_cgc
							and	x.nr_seq_lote	= nr_seq_lote_revisao_p));
							
C03 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_lote_pagamento
	where	nr_sequencia	in (	SELECT	nr_seq_lote
					from	pls_pagamento_prestador
					where	nr_seq_prestador	= nr_seq_prestador_w);
					
C04 CURSOR FOR
	SELECT	nr_sequencia,
		cd_cgc,
		cd_pessoa_fisica
	from	pls_cooperado
	where	cd_estabelecimento	= cd_estabelecimento_p
	and	((nr_seq_situacao	= nr_seq_situacao_cooperado_p and (nr_seq_situacao_cooperado_p IS NOT NULL AND nr_seq_situacao_cooperado_p::text <> '')) or (coalesce(nr_seq_situacao_cooperado_p::text, '') = ''));
	
C05 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.cd_pessoa_fisica,
		b.dt_nascimento
	from	pessoa_fisica		b,
		pls_contrato_contato	a
	where	a.cd_pessoa_fisica 	= b.cd_pessoa_fisica
	and	a.nr_seq_contrato 	= nr_seq_contrato_w;	


BEGIN
ie_parametro_w := Obter_Param_Usuario(1228, 5, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_parametro_w);

if (cd_pessoa_p IS NOT NULL AND cd_pessoa_p::text <> '') then
	if (ie_tipo_pessoa_p	= 0) then /* Pessoa jurídica */
		cd_pessoa_fisica_pessoa_w	:= '';
		nr_seq_contrato_pessoa_w	:= 0;
		ds_tipo_destinatario_pessoa_w	:= '';
		nr_seq_segurado_pessoa_w	:= 0;
		nr_seq_intercambio_w		:= 0;
		cd_cgc_pessoa_w			:= cd_pessoa_p;
	elsif (ie_tipo_pessoa_p	= 1) then /* Pessoa física */
		cd_pessoa_fisica_pessoa_w	:= cd_pessoa_p;
		nr_seq_contrato_pessoa_w	:= 0;
		ds_tipo_destinatario_pessoa_w	:= '';
		nr_seq_segurado_pessoa_w	:= 0;
		cd_cgc_pessoa_w			:= '';
		nr_seq_intercambio_w		:= 0;
		select	dt_nascimento
		into STRICT	dt_nascimento_w
		from	pessoa_fisica
		where	cd_pessoa_fisica = cd_pessoa_p;
	elsif (ie_tipo_pessoa_p	= 2) then /* Beneficiário */
		select	coalesce(cd_pessoa_fisica,'0'),
			coalesce(nr_seq_contrato,0),
			coalesce(nr_seq_intercambio,0)
		into STRICT	cd_pessoa_fisica_pessoa_w,
			nr_seq_contrato_pessoa_w,
			nr_seq_intercambio_w
		from	pls_segurado
		where	nr_sequencia	= cd_pessoa_p;
		--exception

		--	when others then

		--	cd_pessoa_fisica_pessoa_w	:= '0';
		
		select	dt_nascimento
		into STRICT	dt_nascimento_w
		from	pessoa_fisica
		where	cd_pessoa_fisica = cd_pessoa_fisica_pessoa_w;
		
		ds_tipo_destinatario_pessoa_w	:= 'Beneficiário';
		nr_seq_segurado_pessoa_w	:= cd_pessoa_p;
		cd_cgc_pessoa_w			:= '';
	elsif (ie_tipo_pessoa_p	= 3) then /* Pagador */
		select	coalesce(max(b.cd_cgc),'0'),
			coalesce(max(b.cd_pessoa_fisica),'0'),
			coalesce(max(a.nr_seq_contrato),0),
			coalesce(max(a.nr_seq_intercambio),0),
			coalesce(max(b.nr_sequencia),0)
		into STRICT	cd_cgc_pessoa_w,
			cd_pessoa_fisica_pessoa_w,
			nr_seq_contrato_pessoa_w,
			nr_seq_intercambio_w,
			nr_seq_pagador_w
		from	pls_contrato_pagador	b,
			pls_segurado		a
		where	a.nr_seq_pagador	= b.nr_sequencia
		and	b.nr_sequencia		= cd_pessoa_p;

		ds_tipo_destinatario_pessoa_w	:= 'Pagador';
		nr_seq_segurado_pessoa_w	:= 0;
	elsif (ie_tipo_pessoa_p	= 4) then /* Estipulante PF */
		cd_pessoa_fisica_pessoa_w	:= cd_pessoa_p;
		nr_seq_contrato_pessoa_w	:= 0;
		nr_seq_intercambio_w		:= 0;
		ds_tipo_destinatario_pessoa_w	:= 'Estipulante PF';
		nr_seq_segurado_pessoa_w	:= 0;
		cd_cgc_pessoa_w			:= '';
	elsif (ie_tipo_pessoa_p	= 5) then /* Estipulante PJ */
		cd_pessoa_fisica_pessoa_w	:= '';
		nr_seq_contrato_pessoa_w	:= 0;
		nr_seq_intercambio_w		:= 0;
		ds_tipo_destinatario_pessoa_w	:= 'Estipulante PJ';
		nr_seq_segurado_pessoa_w	:= 0;
		cd_cgc_pessoa_w			:= cd_pessoa_p;
	elsif (ie_tipo_pessoa_p	= 6) then /* Subestipulante */
		begin
		select	cd_cgc,
			cd_pessoa_fisica,
			nr_seq_contrato,
			0
		into STRICT	cd_cgc_pessoa_w,
			cd_pessoa_fisica_pessoa_w,
			nr_seq_contrato_pessoa_w,
			nr_seq_intercambio_w
		from	pls_sub_estipulante
		where	nr_sequencia	= cd_pessoa_p;
		exception
			when others then
			cd_cgc_pessoa_w			:= '';
			cd_pessoa_fisica_pessoa_w	:= '';
			nr_seq_contrato_pessoa_w	:= 0;
			nr_seq_intercambio_w		:= 0;
		end;
		ds_tipo_destinatario_pessoa_w	:= 'Subestipulante';
		nr_seq_segurado_pessoa_w	:= 0;
	elsif (ie_tipo_pessoa_p	= 7) then /* Cooperativa*/
		begin
		select	cd_cgc,
			'',
			0,
			0
		into STRICT	cd_cgc_pessoa_w,
			cd_pessoa_fisica_pessoa_w,
			nr_seq_contrato_pessoa_w,
			nr_seq_intercambio_w
		from	pls_congenere
		where	(cd_cooperativa)::numeric 	= (cd_pessoa_p)::numeric;
		exception
			when others then
			cd_cgc_pessoa_w			:= '';
			cd_pessoa_fisica_pessoa_w	:= '';
			nr_seq_contrato_pessoa_w	:= 0;
			nr_seq_intercambio_w		:= 0;
		end;
		ds_tipo_destinatario_pessoa_w	:= 'Cooperativa';
		nr_seq_segurado_pessoa_w	:= 0;	
	end if;

	if (coalesce(cd_pessoa_fisica_pessoa_w,'0') <> '0') and (ie_benef_sem_cpf_p	= 'S') then

		select	count(1)
		into STRICT	qt_registros_w
		from	pessoa_fisica
		where	cd_pessoa_fisica	= cd_pessoa_fisica_pessoa_w
		and (coalesce(nr_cpf::text, '') = '')
		and	trunc(months_between(clock_timestamp(), dt_nascimento) / 12) >= 18;

		if (qt_registros_w = 0) then
			ie_inserir_mala_direta_w	:= 'N';
		end if;
	end if;
	
	if	(ie_inserir_mala_direta_w = 'S'  and ((coalesce(cd_pessoa_fisica_pessoa_w,'0') <> '0') or coalesce(cd_cgc_pessoa_w,'0') <> '0'))  then		
		CALL pls_inserir_mala_direta(cd_pessoa_fisica_pessoa_w, nr_seq_contrato_pessoa_w, '', ds_tipo_destinatario_pessoa_w,
					nr_seq_segurado_pessoa_w,  0, cd_cgc_pessoa_w, nr_seq_pagador_w, nm_usuario_p, cd_estabelecimento_p,dt_nascimento_w,0,nr_seq_lote_revisao_p,ie_parametro_w,
					nr_seq_lote_notificacao_p, null, ie_considera_ender_prest_p, nr_seq_intercambio_w, null);
	end if;
end if;

select	count(1)
into STRICT	qt_contrato_filtro_w

where	exists (SELECT	1
		from	pls_mala_direta_filtro
		where	nm_usuario	= nm_usuario_p);
	
if (nr_contrato_p	> 0) or (nr_contrato_final_p > 0) or (nr_seq_lote_carteira_p	> 0) or (ie_tipo_data_p		> 0) or (dt_mes_reajuste_p IS NOT NULL AND dt_mes_reajuste_p::text <> '') or (ie_situacao_contrato_p	> 0) or (nr_seq_lote_notificacao_p > 0) or (nr_seq_lote_revisao_p > 0) or (coalesce(cd_municipio_p,'0') <> '0') or (coalesce(ie_tipo_contratacao_p,'0') <> '0') or (coalesce(qt_idade_inicial_p,'0') <> '0') or (coalesce(qt_idade_final_p,'0') <> '0') or (ie_sit_financ_p > 0) or (ie_sexo_p > 0) or (coalesce(ie_regulamentacao_p,'0') <> '0') or (coalesce(nr_seq_sca_p,0) > 0) or (ie_fator_moderador_p = 'S') or (coalesce(cd_convenio_atend_p,0) > 0) or (coalesce(nr_seq_parentesco_p,0) > 0) or (coalesce(cd_tipo_contato_p,0) > 0) or (coalesce(nr_seq_grupo_contratual_p, 0) <> 0) or (coalesce(qt_contrato_filtro_w,0) <> 0) or (coalesce(cd_cgc_pagador_p,0) <> 0) or (nr_seq_lote_mens_p <> 0) or (ds_situacao_trabalhista_p <> 'NNN') then
	/* Construção do SQL para o cursor C01, com base nos filtros da mala direta. */

	if (ie_tipo_contrato_w = 'CO') then
		if (ie_situacao_contrato_p	= 1) then
			ds_restricao_w := ds_restricao_w || enter_w || ' and (a.dt_rescisao_contrato is null) ';
		elsif (ie_situacao_contrato_p	= 2) then
			ds_restricao_w := ds_restricao_w || enter_w || ' and (a.dt_rescisao_contrato is not null) ';
		elsif (ie_situacao_contrato_p not in (0, 3)) Then
			ds_restricao_w := ds_restricao_w || enter_w || ' and 1 = 2 ';
		end if;
	elsif (ie_tipo_contrato_w = 'CI') then
		if (ie_situacao_contrato_p	= 1) then
			ds_restricao_w := ds_restricao_w || enter_w || ' and (a.dt_exclusao is null) ';
		elsif (ie_situacao_contrato_p	= 2) then
			ds_restricao_w := ds_restricao_w || enter_w || ' and (a.dt_exclusao is not null) ';
		elsif (ie_situacao_contrato_p not in (0, 3)) Then
			ds_restricao_w := ds_restricao_w || enter_w || ' and 1 = 2 ';
		end if;
	end if;

	if (ie_tipo_contratacao_p IS NOT NULL AND ie_tipo_contratacao_p::text <> '') then
		ds_restricao_w := ds_restricao_w || enter_w || 'and e.ie_tipo_contratacao	= :ie_tipo_contratacao ';
	else
		ds_restricao_w := ds_restricao_w || enter_w || ' and ''0'' = :ie_tipo_contratacao ';
	end if;

	if (ie_regulamentacao_p IS NOT NULL AND ie_regulamentacao_p::text <> '') then
		ds_restricao_w := ds_restricao_w || enter_w || ' and e.ie_regulamentacao = :ie_regulamentacao ';
	else
		ds_restricao_w := ds_restricao_w || enter_w || ' and ''0'' = :ie_regulamentacao ';		
	end if;

	if (coalesce(nr_seq_sca_p, 0) <> 0) then
		ds_restricao_w 	:= ds_restricao_w || enter_w ||
					'and	exists (select	1 ' || enter_w ||
					'		from	pls_sca_vinculo	y ' || enter_w ||
					'		where	y.nr_seq_segurado	= b.nr_sequencia ' || enter_w ||
					'		and	y.nr_seq_plano		= :nr_seq_sca ' || enter_w ||
					'		and	y.dt_fim_vigencia is null) ';
	else
		ds_restricao_w := ds_restricao_w || enter_w || ' and 0 = :nr_seq_sca ';
	end if;
	
	if (nr_contrato_p <> 0) and (nr_contrato_final_p <> 0) then
		ds_restricao_w := ds_restricao_w || enter_w || ' and (a.nr_sequencia between :nr_contrato and :nr_contrato_final) ';
	elsif (nr_contrato_p = 0) and (nr_contrato_final_p <> 0) then
		ds_restricao_w := ds_restricao_w || enter_w || ' and 0 = :nr_contrato ';
		ds_restricao_w := ds_restricao_w || enter_w || ' and a.nr_sequencia = :nr_contrato_final ';
	elsif (nr_contrato_p <> 0) and (nr_contrato_final_p = 0) then
		ds_restricao_w := ds_restricao_w || enter_w || ' and a.nr_sequencia = :nr_contrato ';
		ds_restricao_w := ds_restricao_w || enter_w || ' and 0 = :nr_contrato_final ';
	else	
		ds_restricao_w := ds_restricao_w || enter_w || ' and 0 = :nr_contrato ';
		ds_restricao_w := ds_restricao_w || enter_w || ' and 0 = :nr_contrato_final ';
	end if;	
	
	if (coalesce(nr_seq_lote_carteira_p,0) <> 0) then
		/* Ao invés de utilizar a function pls_obter_se_seg_lote, realiza o exists */

		ds_restricao_w := ds_restricao_w || enter_w || 	'and exists (	select	1 ' || enter_w ||
								'		from	pls_lote_carteira 	x, ' || enter_w ||
								'			pls_carteira_emissao	y, ' || enter_w ||
								'			pls_segurado_carteira	z ' || enter_w ||
								'		where	z.nr_sequencia		= y.nr_seq_seg_carteira ' || enter_w ||
								'		and	y.nr_seq_lote		= x.nr_sequencia ' || enter_w ||
								'		and	z.nr_seq_segurado	= b.nr_sequencia ' || enter_w ||
								'		and	x.nr_sequencia 		= :nr_seq_lote_carteira ' || enter_w ||
								'		and	x.ie_tipo_lote 		= ''E'') ';
	else	
		ds_restricao_w := ds_restricao_w || enter_w || ' and 0 = :nr_seq_lote_carteira_p ';
	end if;
	
	if (nr_matricula_inicial_p IS NOT NULL AND nr_matricula_inicial_p::text <> '') and (nr_matricula_final_p IS NOT NULL AND nr_matricula_final_p::text <> '') then
		ds_restricao_w := ds_restricao_w || enter_w || ' and b.cd_matricula_familia between :cd_matricula_inicial and :cd_matricula_final ';
	elsif (nr_matricula_inicial_p IS NOT NULL AND nr_matricula_inicial_p::text <> '') and (coalesce(nr_matricula_final_p::text, '') = '') then
		ds_restricao_w := ds_restricao_w || enter_w || ' and b.cd_matricula_familia = :cd_matricula_inicial ';
		ds_restricao_w := ds_restricao_w || enter_w || ' and 0 = :cd_matricula_final ';
	elsif (coalesce(nr_matricula_inicial_p::text, '') = '') and (nr_matricula_final_p IS NOT NULL AND nr_matricula_final_p::text <> '') then
		ds_restricao_w := ds_restricao_w || enter_w || ' and 0 = :cd_matricula_inicial ';
		ds_restricao_w := ds_restricao_w || enter_w || ' and b.cd_matricula_familia = :cd_matricula_final ';
	else	
		ds_restricao_w := ds_restricao_w || enter_w || ' and 0 = :cd_matricula_inicial ';
		ds_restricao_w := ds_restricao_w || enter_w || ' and 0 = :cd_matricula_final ';
	end if;
	
	if (coalesce(nr_seq_parentesco_p,0) <> 0) then
		ds_restricao_w := ds_restricao_w || enter_w || ' and nvl(b.nr_seq_parentesco,0) <> :nr_seq_parentesco ';
	else
		ds_restricao_w := ds_restricao_w || enter_w || ' and 0 = :nr_seq_parentesco ';
	end if;
	
	if (coalesce(qt_idade_inicial_p,'0') <> '0') and (coalesce(qt_idade_final_p, '0') <> '0') then
		ds_restricao_w := ds_restricao_w || enter_w ||
				' and trunc(months_between(sysdate, c.dt_nascimento) / 12) between :qt_idade_inicial and :qt_idade_final ';
	else
		ds_restricao_w := ds_restricao_w || enter_w || ' and 0 = :qt_idade_inicial ' || enter_w ||  ' and 0 = :qt_idade_final ';
	end if;
	
	if (ie_sit_financ_p > 1) then
		/* Ao invés de utililizar a function pls_obter_se_inadimplente, faz o exists no select */

		if (ie_sit_financ_p = 2) then
			ds_restricao_w := ds_restricao_w || enter_w || 	'and exists (	select	1 ' || enter_w ||
									'		from	titulo_receber		x ' || enter_w ||
									'		where	x.nr_seq_pagador	= b.nr_seq_pagador ' || enter_w ||
									'		and	x.ie_situacao		= ''1''  ' || enter_w ||
									'		and	x.dt_pagamento_previsto	< sysdate) ';
		elsif (ie_sit_financ_p = 3) then
			ds_restricao_w := ds_restricao_w || enter_w || 	'and not exists (select	1 ' || enter_w ||
									'		from	titulo_receber		x ' || enter_w ||
									'		where	x.nr_seq_pagador	= b.nr_seq_pagador ' || enter_w ||
									'		and	x.ie_situacao		= ''1''  ' || enter_w ||
									'		and	x.dt_pagamento_previsto	< sysdate) ';
		end if;
	end if;
	
	if (coalesce(nr_seq_lote_notificacao_p, 0) <> 0) then
		/* Ao invés de utilizar a function pls_obter_se_pagador_notif, faz o exists no select  */

		ds_restricao_w := ds_restricao_w || enter_w ||  ' and exists (	select 1 ' || enter_w ||
								'		from	pls_notificacao_pagador x' || enter_w ||
								'		where	x.nr_seq_pagador	= b.nr_seq_pagador ' || enter_w ||
								'		and	x.nr_seq_lote		= :nr_seq_lote_notif ) ';
	else	
		ds_restricao_w := ds_restricao_w || enter_w || ' and 0 = :nr_seq_lote_notif ';
	end if;	
	
	if (coalesce(nr_seq_lote_revisao_p, 0) <> 0) then
		ds_restricao_w := ds_restricao_w || enter_w ||  ' and exists (	select 1 ' || enter_w ||
								'		from	pls_pessoa_inconsistente x ' || enter_w ||
								'		where	x.cd_pessoa_fisica	= b.cd_pessoa_fisica ' || enter_w ||
								'		and	x.nr_seq_lote		= :nr_seq_lote_revisao) ';
	else
		ds_restricao_w := ds_restricao_w || enter_w || ' and 0 = :nr_seq_lote_revisao ';
	end if;
	
	if (ie_benef_remido_p	= 1) then
		ds_restricao_w := ds_restricao_w || enter_w || ' and  pls_obter_se_benef_remido(b.nr_sequencia,sysdate) = ''S''';
	elsif (ie_benef_remido_p	= 2) then
		ds_restricao_w := ds_restricao_w || enter_w || ' and pls_obter_se_benef_remido(b.nr_sequencia,sysdate) = ''N''';
	end if;
	
	select	count(1)
	into STRICT	qt_filtros_mala_direta_w
	
	where	exists (SELECT	1
			from	pls_mala_direta_filtro
			where	nm_usuario	= nm_usuario_p);			
	
	/* Adiciona as restrições ao select do cursor.
	Ao invés de fazer um union cria um select para cada tipo de contrato */
	if (ie_tipo_contrato_w = 'CO') then
		
	
		ds_sql_c01_w := 'select	b.nr_sequencia nr_seq_segurado, ' || enter_w ||
				'	b.cd_pessoa_fisica cd_segurado, ' || enter_w ||
				'	nvl(b.nr_seq_subestipulante,0) nr_seq_subestipulante, ' || enter_w ||
				'	nvl(b.nr_seq_pagador,0) nr_seq_pagador, ' || enter_w ||
				'	nvl(b.nr_seq_titular,0) nr_seq_titular, ' || enter_w ||
				'	decode(b.nr_seq_subestipulante, null, nvl(a.cd_cgc_estipulante,''0''), nvl(a.cd_cgc_estipulante,''0'')) cd_cgc_estipulante, ' || enter_w ||
				'	decode(b.nr_seq_subestipulante, null, nvl(a.cd_pf_estipulante,''0''), nvl(a.cd_pf_estipulante,''0'')) cd_pf_estipulante, ' || enter_w ||
				'	a.nr_sequencia nr_seq_contrato, ' || enter_w ||
				'	a.dt_contrato, ' || enter_w ||
				'	b.dt_liberacao, ' || enter_w ||
				'	b.dt_rescisao, ' || enter_w ||
				'	b.dt_limite_utilizacao, ' || enter_w ||
				'	b.dt_migracao, ' || enter_w ||
				'	c.dt_nascimento, ' || enter_w ||
				'	trunc(months_between(sysdate, c.dt_nascimento) / 12) qt_idade_benef, ' || enter_w ||
				'	c.ie_sexo, ' || enter_w ||
				'	nvl(b.ie_controla_dt_dependencia,''S'') ie_controla_dt_dependencia, ' || enter_w ||
				'	nvl(b.nr_seq_parentesco,0) nr_seq_parentesco, ' || enter_w ||
				'	b.nr_seq_plano, ' || enter_w ||
				'	b.dt_contratacao dt_adesao_benef, ' || enter_w ||
				'	null nr_seq_intercambio ' || enter_w ||
				'from	pessoa_fisica		c, ' || enter_w ||
				'	pls_segurado		b, ' || enter_w ||
				'	pls_contrato		a, ' || enter_w ||
				'	pls_plano		e ' || enter_w ||
				'where	b.cd_pessoa_fisica	= c.cd_pessoa_fisica ' || enter_w ||
				'and	a.nr_sequencia		= b.nr_seq_contrato ' || enter_w ||
				'and	b.nr_seq_plano		= e.nr_sequencia ' || enter_w ||
				ds_restricao_w ||
				'order by 1 ';
	else
		ds_sql_c01_w := 'select	b.nr_sequencia nr_seq_segurado, ' || enter_w ||
				'	b.cd_pessoa_fisica cd_segurado, ' || enter_w ||
				'	nvl(b.nr_seq_subestipulante,0) nr_seq_subestipulante, ' || enter_w ||
				'	nvl(b.nr_seq_pagador,0), ' || enter_w ||
				'	nvl(b.nr_seq_titular,0), ' || enter_w ||
				'	decode(b.nr_seq_subestipulante, null, nvl(a.cd_cgc,''0''), nvl(a.cd_cgc,''0'')) cd_cgc_estipulante, ' || enter_w ||
				'	decode(b.nr_seq_subestipulante, null, nvl(a.cd_pessoa_fisica,''0''), nvl(a.cd_pessoa_fisica,''0'')) cd_pf_estipulante, ' || enter_w ||
				'	null nr_seq_contrato, ' || enter_w ||
				'	a.dt_inclusao dt_contrato, ' || enter_w ||
				'	b.dt_liberacao, ' || enter_w ||
				'	b.dt_rescisao, ' || enter_w ||
				'	b.dt_limite_utilizacao, ' || enter_w ||
				'	b.dt_migracao, ' || enter_w ||
				'	c.dt_nascimento, ' || enter_w ||
				'	trunc(months_between(sysdate, c.dt_nascimento) / 12) qt_idade_benef, ' || enter_w ||
				'	c.ie_sexo, ' || enter_w ||
				'	nvl(b.ie_controla_dt_dependencia,''S'') ie_controla_dt_dependencia, ' || enter_w ||
				'	nvl(b.nr_seq_parentesco,0) nr_seq_parentesco, ' || enter_w ||
				'	b.nr_seq_plano, ' || enter_w ||
				'	b.dt_contratacao dt_adesao_benef, ' || enter_w ||
				'	a.nr_sequencia nr_seq_intercambio ' || enter_w ||
				'from	pessoa_fisica		c, ' || enter_w ||
				'	pls_segurado		b, ' || enter_w ||
				'	pls_intercambio		a, ' || enter_w ||
				'	pls_plano		e ' || enter_w ||
				'where	b.cd_pessoa_fisica	= c.cd_pessoa_fisica ' || enter_w ||
				'and	a.nr_sequencia		= b.nr_seq_intercambio ' || enter_w ||
				'and	b.nr_seq_plano		= e.nr_sequencia ' || enter_w ||
				ds_restricao_w ||
				'order by 1 ';	
	end if;

	/* Para debugar o select deve-se criar uma tabela para armazenar o comando */



	/* Adiciona os parâmetros de acordo com a ordem das bind variables do select e executa o cursor */
	
	open v_c01_w for EXECUTE ds_sql_c01_w using	coalesce(ie_tipo_contratacao_p, 0), -- Esses parâmetros devem estar na mesma ordem das binds variables do select.
						coalesce(ie_regulamentacao_p, 0),
						coalesce(nr_seq_sca_p, 0),
						coalesce(nr_contrato_p, 0),
						coalesce(nr_contrato_final_p, 0),
						coalesce(nr_seq_lote_carteira_p, 0),
						coalesce(nr_matricula_inicial_p, 0),
						coalesce(nr_matricula_final_p, 0),
						coalesce(nr_seq_parentesco_p,0),
						coalesce((qt_idade_inicial_p)::numeric ,0),
						coalesce((qt_idade_final_p)::numeric ,0),
						coalesce(nr_seq_lote_notificacao_p, 0),
						coalesce(nr_seq_lote_revisao_p, 0);
	loop
	fetch v_c01_w into
		nr_seq_segurado_w,
		cd_segurado_w,
		nr_seq_subestipulante_w,
		nr_seq_pagador_w,
		nr_seq_titular_w,
		cd_cgc_estipulante_w,
		cd_pf_estipulante_w,
		nr_seq_contrato_w,
		dt_contrato_w,
		dt_liberacao_w,
		dt_rescisao_w,
		dt_limite_utilizacao_w,
		dt_migracao_w,
		dt_nascimento_w,
		qt_idade_benef_w,
		ie_sexo_w,
		ie_controla_dt_dependencia_w,
		nr_seq_parentesco_w,
		nr_seq_plano_w,
		dt_adesao_benef_w,
		nr_seq_intercambio_w;
	EXIT WHEN NOT FOUND; /* apply on v_c01_w */
		begin
		ie_situacao_benef_w	:= '';
		
		if (dt_liberacao_w IS NOT NULL AND dt_liberacao_w::text <> '') and
			((coalesce(dt_rescisao_w::text, '') = '') or ((dt_rescisao_w IS NOT NULL AND dt_rescisao_w::text <> '') and (dt_limite_utilizacao_w >= clock_timestamp()) )) then
			ie_ativo_w := 'S';
		elsif (dt_rescisao_w IS NOT NULL AND dt_rescisao_w::text <> '') then
			ie_ativo_w := 'N';
		elsif (coalesce(dt_liberacao_w::text, '') = '') and (dt_migracao_w IS NOT NULL AND dt_migracao_w::text <> '') and (coalesce(dt_rescisao_w::text, '') = '') then
			ie_ativo_w := 'M';
		elsif (coalesce(dt_liberacao_w::text, '') = '') and (coalesce(dt_migracao_w::text, '') = '') then
			ie_ativo_w := 'A';
		end if;
				
		if (qt_filtros_mala_direta_w <> 0) then			
			select	count(1)
			into STRICT	qt_filtros_mala_direta_ww
			
			where	exists (SELECT	1
					from	pls_mala_direta_filtro
					where	((nr_seq_segurado	= nr_seq_segurado_w) or
						 (nr_seq_contrato	= nr_seq_contrato_w AND ie_tipo_contrato_w = 'CO') or
						 (nr_seq_intercambio	= nr_seq_intercambio_w AND ie_tipo_contrato_w = 'CI'))
					and	nm_usuario		= nm_usuario_p);
			
			if (qt_filtros_mala_direta_ww = 0) then
				goto final;
			end if;
		end if;
		
		if (substr(ds_parametro_benef_p,5,1) = 'S') then
			cd_cgc_estipulante_w := '0';
		end if;
		
		if (substr(ds_parametro_benef_p,6,1) = 'S') then
			cd_pf_estipulante_w := '0';
		end if;						
		
		if (ie_sexo_p = 2) then
			if (coalesce(ie_sexo_w,'M') <> 'F') then
				goto final;
			end if;
		elsif (ie_sexo_p = 3) then
			if (coalesce(ie_sexo_w,'F') <> 'M') then
				goto final;
			end if;
		end if;
		
		/*if	(nvl(qt_contrato_filtro_w,0) > 0) then
			select	count(*)
			into	qt_contrato_filtro_ww
			from	pls_mala_direta_filtro	a
			where	a.nr_seq_contrato 	= nr_seq_contrato_w
			and	a.nm_usuario		= nm_usuario_p;
			
			if	(nvl(qt_contrato_filtro_ww,0) <> 0) then
				goto final;
			end if;
		end if;*/
		
		if (cd_municipio_p IS NOT NULL AND cd_municipio_p::text <> '') then
			select	max(cd_municipio_ibge)
			into STRICT	cd_municipio_ibge_w
			from	compl_pessoa_fisica
			where	cd_pessoa_fisica	= cd_segurado_w
			and	ie_tipo_complemento	in (1,2);
			
			/*Caso não houver municipio para o beneficiário, então não sai da mala direta*/

			if (cd_municipio_ibge_w IS NOT NULL AND cd_municipio_ibge_w::text <> '') then
				ie_municipio_w := pls_obter_se_item_lista(cd_municipio_p,cd_municipio_ibge_w);
			
				if (ie_municipio_w = 'N') then
					goto final;
				end if;
			else
				goto final;
			end if;
		end if;			
		
		begin
		select	CASE WHEN coalesce(cd_cgc::text, '') = '' THEN 'PF'  ELSE 'PJ' END
		into STRICT	ie_tipo_pagador_w
		from	pls_contrato_pagador
		where	nr_sequencia	= nr_seq_pagador_w;
		exception
		when others then
			ie_tipo_pagador_w	:= '';
		end;
				
		if (ie_notifica_w = 'N') then
			goto final;
		end if;
		
		if (ie_lote_rev_w = 'N') then
			goto final;
		end if;		
		
		if (cd_convenio_atend_p IS NOT NULL AND cd_convenio_atend_p::text <> '') then
			if (cd_segurado_w IS NOT NULL AND cd_segurado_w::text <> '') then
				select 	count(1)
				into STRICT	qt_registros_convenio_w
				from 	atendimento_paciente w,
					atend_categoria_convenio b
				where	w.nr_atendimento	= b.nr_atendimento
				and	w.cd_pessoa_fisica	= cd_segurado_w
				and	b.cd_convenio		= cd_convenio_atend_p;
			
				if (qt_registros_convenio_w = 0) then
					goto final;
				end if;
			else
				goto final;
			end if;
		end if;
		
		/* Verificar se a notificação já foi recebida */

		if (nr_seq_lote_notificacao_p > 0) and (nr_seq_pagador_w > 0) and (ie_apres_pagador_notif_p = 'N') then
			select	max(dt_recebimento_notif)
			into STRICT	dt_receb_notif_w
			from	pls_notificacao_pagador a
			where	a.nr_seq_lote		= nr_seq_lote_notificacao_p
			and	a.nr_seq_pagador	= nr_seq_pagador_w;
			
			if (dt_receb_notif_w IS NOT NULL AND dt_receb_notif_w::text <> '') then
				goto final;
			end if;
		end if;
		
		if (ie_tipo_data_p = 1) then
			dt_emissao_lote_w	:= pls_obter_emissaolote_carteira(nr_seq_segurado_w);
			if (dt_emissao_lote_w < dt_parametro_de_p) or (dt_emissao_lote_w > dt_parametro_ate_p) then
				goto final;
			end if;
		elsif (ie_tipo_data_p = 2) then
			ie_recebimento_cart_w	:= pls_obter_se_receb_data(nr_seq_segurado_w,trunc(dt_parametro_de_p), trunc(dt_parametro_ate_p),'E');
			if (ie_recebimento_cart_w	<> 'S') then
				goto final;
			end if;
		elsif (ie_tipo_data_p	= 3) then
			if (dt_contrato_w	< dt_parametro_de_p) or (dt_contrato_w > dt_parametro_ate_p) then
				goto final;
			end if;
		elsif (ie_tipo_data_p	= 4) then
			if (pls_obter_se_aniver_periodo(dt_nascimento_w,dt_parametro_de_p,dt_parametro_ate_p) = 'N') then
				goto final;
			end if;
		elsif (ie_tipo_data_p	= 5) then
			dt_termino_dependencia_w	:= pls_obter_dt_limite_depend(nr_seq_segurado_w);			
			
			if (coalesce(dt_termino_dependencia_w::text, '') = '') then
				goto final;
			end if;
			
			if (ie_controla_dt_dependencia_w = 'N') then
				goto final;
			end if;	
			
			if	((trunc(dt_termino_dependencia_w,'dd') < trunc(dt_parametro_de_p,'dd')) or (trunc(dt_termino_dependencia_w,'dd') > trunc(dt_parametro_ate_p,'dd'))) then
				goto final;
			end if;
		elsif (ie_tipo_data_p	= 6) then
			
			if (coalesce(dt_rescisao_w::text, '') = '') then
				goto final;
			end if;
			
			if (trunc(dt_rescisao_w, 'dd') < trunc(dt_parametro_de_p, 'dd')) or (trunc(dt_rescisao_w, 'dd') > trunc(dt_parametro_ate_p, 'dd')) then
				goto final;
			end if;
		elsif (ie_tipo_data_p	= 7) then
			
			if (coalesce(dt_adesao_benef_w::text, '') = '') then
				goto final;
			end if;
			
			if (dt_adesao_benef_w < dt_parametro_de_p) or (dt_adesao_benef_w > dt_parametro_ate_p) then
				goto final;
			end if;	
		end if;
		
		if (dt_mes_reajuste_p IS NOT NULL AND dt_mes_reajuste_p::text <> '') then
			if (ie_dt_reajuste_p	= 1) then /* Contrato */
				if (coalesce(nr_seq_intercambio_w::text, '') = '') then
					select	coalesce(max('S'),'N')
					into STRICT	ie_mes_reajuste_w
					from	pls_contrato
					where	to_char(add_months(dt_contrato,coalesce(qt_intervalo,12)),'mm') = to_char(dt_mes_reajuste_p,'mm')
					and 	trunc(dt_contrato,'month') < trunc(dt_mes_reajuste_p,'month')
					and	nr_sequencia	= nr_seq_contrato_w;
				else
					select	coalesce(max('S'),'N')
					into STRICT	ie_mes_reajuste_w
					from	pls_intercambio
					where	to_char(dt_inclusao,'mm') = to_char(dt_mes_reajuste_p,'mm')
					and 	trunc(dt_inclusao,'month') < trunc(dt_mes_reajuste_p,'month')
					and	nr_sequencia	= nr_seq_intercambio_w;
				end if;
					
				if (ie_mes_reajuste_w	= 'N') then
					goto final;
				end if;
			elsif (ie_dt_reajuste_p	= 2) then /* Beneficiário */
				select	coalesce(max('S'),'N')
				into STRICT	ie_mes_reajuste_w
				from	pls_segurado
				where	to_char(coalesce(dt_reajuste,dt_contratacao),'mm') = to_char(dt_mes_reajuste_p,'mm')
				and	dt_contratacao	< dt_mes_reajuste_p
				and 	((coalesce(dt_rescisao::text, '') = '')
				or (dt_rescisao > dt_mes_reajuste_p))				
				and	nr_sequencia	= nr_seq_segurado_w;
				
				if (ie_mes_reajuste_w	= 'N') then
					goto final;
				end if;
			elsif (ie_dt_reajuste_p	= 3) then /* SCA */
				select	coalesce(max('S'),'N')
				into STRICT	ie_mes_reajuste_w
				from	pls_segurado	a,
					pls_sca_vinculo	b
				where	b.nr_seq_segurado	= a.nr_sequencia
				and	a.nr_sequencia		= nr_seq_segurado_w
				and	((b.nr_seq_plano	= nr_seq_sca_p) or (coalesce(nr_seq_sca_p,0) = 0))
				and	to_char(b.dt_reajuste,'mm') = to_char(dt_mes_reajuste_p,'mm');
				
				if (ie_mes_reajuste_w	= 'N') then
					goto final;
				end if;
			end if;
		end if;
		
		if (ie_fator_moderador_p	= 'S') then
			begin
			select	coalesce(ie_franquia,'N'),
				coalesce(ie_coparticipacao,'N')
			into STRICT	ie_fator_mod_franquia_w,
				ie_fator_mod_coparticipacao_w
			from	pls_plano
			where	nr_sequencia	= nr_seq_plano_w;
			exception
			when others then
				ie_fator_mod_franquia_w		:= 'N';
				ie_fator_mod_coparticipacao_w	:= 'N';
			end;
			
			if (ie_fator_mod_franquia_w	= 'N') and (ie_fator_mod_coparticipacao_w	= 'N') then
				goto final;
			end if;
		end if;	
		
		if (nr_seq_plano_p IS NOT NULL AND nr_seq_plano_p::text <> '') then
			if (nr_seq_plano_p <> nr_seq_plano_w) then
				goto final;
			end if;
		end if;
		
		if (nr_seq_lote_mens_p <> 0) then
		
			if (nr_seq_pagador_w = 0) then
				goto final;
			end if;
		
			select	count(1)
			into STRICT	qt_registros_w
			
			where	exists (SELECT	1
					from	pls_mensalidade		a,
						pls_contrato_pagador	b
					where	b.nr_sequencia 		= a.nr_seq_pagador
					and	a.nr_seq_lote 		= nr_seq_lote_mens_p
					and	a.nr_seq_pagador	= nr_seq_pagador_w
					and	coalesce(a.ie_cancelamento::text, '') = '');
			
			if (qt_registros_w = 0) then
				goto final;
			end if;
		end if;
		
		if (coalesce(nr_seq_grupo_contratual_p, 0) <> 0) then			
			if (coalesce(nr_seq_intercambio_w::text, '') = '') then
				select	count(1)
				into STRICT	qt_registros_w
				
				where	exists (SELECT	1
						from	pls_contrato_grupo
						where	nr_seq_contrato		= nr_seq_contrato_w
						and	nr_seq_grupo		= nr_seq_grupo_contratual_p);
			else
				select	count(1)
				into STRICT	qt_registros_w
				
				where	exists (SELECT	1
						from	pls_contrato_grupo
						where	nr_seq_intercambio	= nr_seq_intercambio_w
						and	nr_seq_grupo		= nr_seq_grupo_contratual_p);
			end if;
			
			if (qt_registros_w = 0) then
				goto final;
			end if;
		end if;	
		if (coalesce(cd_cgc_pagador_p,0) <> 0) then
			select	count(1)
			into STRICT	qt_registros_w
			
			where	exists (SELECT	1
					from	pls_contrato_pagador a
					where	a.nr_sequencia		= nr_seq_pagador_w
					and	a.cd_cgc		= cd_cgc_pagador_p);
			
			if (qt_registros_w = 0) then
				goto final;
			end if;
		end if;

		/*Verifica situação trabalhista do beneficiário*/

		select	coalesce(ie_situacao_trabalhista, 'X')
		into STRICT	ie_situacao_trabalhista_w
		from	pls_segurado
		where	nr_sequencia	= nr_seq_segurado_w;
		
		if (substr(ds_situacao_trabalhista_p,1,3) <> 'NNN') then
			if (ie_situacao_trabalhista_w = 'X') then
				goto final;
			end if;		
			if (ie_situacao_trabalhista_w = 'D') and (substr(ds_situacao_trabalhista_p,1,1) = 'N') then			
				goto final;
			end if;
			if (ie_situacao_trabalhista_w  = 'A') and (substr(ds_situacao_trabalhista_p,2,1) = 'N') then
				goto final;
			end if;
			if (ie_situacao_trabalhista_w  = 'E') and (substr(ds_situacao_trabalhista_p,3,1) = 'N') then
				goto final;
			end if;	
		end if;	
		
		if (nr_seq_titular_w = 0) then
			if (substr(ds_parametro_benef_p,1,1) = 'S') and (cd_segurado_w IS NOT NULL AND cd_segurado_w::text <> '') and (cd_segurado_w = coalesce(cd_beneficiario_w,cd_segurado_w)) then
				select	trunc(months_between(clock_timestamp(), dt_nascimento) / 12),
					nr_cpf,
					ie_sexo
				into STRICT	qt_idade_w,
					nr_cpf_w,
					ie_sexo_w
				from	pessoa_fisica
				where	cd_pessoa_fisica	= cd_segurado_w;
				
				if (ie_sexo_p = 2) then
					if (coalesce(ie_sexo_w,'M') <> 'F') then
						goto final;
					end if;
				elsif (ie_sexo_p = 3) then
					if (coalesce(ie_sexo_w,'F') <> 'M') then
						goto final;
					end if;
				end if;
				
				if	((ie_benef_sem_cpf_p = 'S') and (qt_idade_w >= 18) and (coalesce(nr_cpf_w,'0') = '0')
					or (ie_benef_sem_cpf_p = 'N')) then
					
					if (ie_benef_ativo_p = 0 and ie_ativo_w = 'S') then
						CALL pls_inserir_mala_direta( cd_segurado_w , nr_seq_contrato_w, ds_tipo_beneficiario_w,
									'Titular', nr_seq_segurado_w, nr_seq_lote_carteira_p,
									'', null, nm_usuario_p, cd_estabelecimento_p,dt_nascimento_w,0,nr_seq_lote_revisao_p,ie_parametro_w,
									nr_seq_lote_notificacao_p, null, ie_considera_ender_prest_p, nr_seq_intercambio_w, null);
					elsif (ie_benef_ativo_p = 1 and ie_ativo_w ='N') then
						CALL pls_inserir_mala_direta(cd_segurado_w, nr_seq_contrato_w, ds_tipo_beneficiario_w,
									'Titular', nr_seq_segurado_w, nr_seq_lote_carteira_p,
									'', null, nm_usuario_p, cd_estabelecimento_p,dt_nascimento_w,0,nr_seq_lote_revisao_p,ie_parametro_w,
									nr_seq_lote_notificacao_p, null, ie_considera_ender_prest_p, nr_seq_intercambio_w, null);
					elsif (ie_benef_ativo_p = 2) then
						CALL pls_inserir_mala_direta(cd_segurado_w, nr_seq_contrato_w, ds_tipo_beneficiario_w,
									'Titular', nr_seq_segurado_w, nr_seq_lote_carteira_p,
									'', null, nm_usuario_p, cd_estabelecimento_p,dt_nascimento_w,0,nr_seq_lote_revisao_p,ie_parametro_w,
									nr_seq_lote_notificacao_p, null, ie_considera_ender_prest_p, nr_seq_intercambio_w, null);
					end if;
				end if;
			end if;
		else
			if (substr(ds_parametro_benef_p,2,1) = 'S') and (cd_segurado_w <> '0') and (cd_segurado_w = coalesce(cd_beneficiario_w, cd_segurado_w)) then
				select	trunc(months_between(clock_timestamp(),dt_nascimento) / 12),
					nr_cpf,
					ie_sexo
				into STRICT	qt_idade_w,
					nr_cpf_w,
					ie_sexo_w
				from	pessoa_fisica
				where	cd_pessoa_fisica	= cd_segurado_w;
				
				if (ie_sexo_p = 2) then
					if (coalesce(ie_sexo_w,'M') <> 'F') then
						goto final;
					end if;
				elsif (ie_sexo_p = 3) then
					if (coalesce(ie_sexo_w,'F') <> 'M') then
						goto final;
					end if;
				end if;
				
				if	((ie_benef_sem_cpf_p = 'S') and (qt_idade_w >= 18) and (coalesce(nr_cpf_w,'0') = '0')
					or (ie_benef_sem_cpf_p = 'N')) then
					
					if (ie_benef_ativo_p = 0 and ie_ativo_w = 'S') then
					CALL pls_inserir_mala_direta(cd_segurado_w, nr_seq_contrato_w, ds_tipo_beneficiario_w,
									'Dependentes', nr_seq_segurado_w, nr_seq_lote_carteira_p,
									'', null, nm_usuario_p, cd_estabelecimento_p,dt_nascimento_w,0,nr_seq_lote_revisao_p,ie_parametro_w,
									nr_seq_lote_notificacao_p, null, ie_considera_ender_prest_p, nr_seq_intercambio_w, null);
					elsif (ie_benef_ativo_p = 1 and ie_ativo_w ='N') then
					CALL pls_inserir_mala_direta(cd_segurado_w, nr_seq_contrato_w, ds_tipo_beneficiario_w,
									'Dependentes', nr_seq_segurado_w, nr_seq_lote_carteira_p,
									'', null, nm_usuario_p, cd_estabelecimento_p,dt_nascimento_w,0,nr_seq_lote_revisao_p,ie_parametro_w,
									nr_seq_lote_notificacao_p, null, ie_considera_ender_prest_p, nr_seq_intercambio_w, null);
					elsif (ie_benef_ativo_p = 2) then
					CALL pls_inserir_mala_direta(cd_segurado_w, nr_seq_contrato_w, ds_tipo_beneficiario_w,
									'Dependentes', nr_seq_segurado_w, nr_seq_lote_carteira_p,
									'', null, nm_usuario_p, cd_estabelecimento_p,dt_nascimento_w,0,nr_seq_lote_revisao_p,ie_parametro_w,
									nr_seq_lote_notificacao_p, null, ie_considera_ender_prest_p, nr_seq_intercambio_w,null);
					end if;
				end if;
			end if;
		end if;
		
		if (substr(ds_parametro_benef_p,3,1) = 'S') and (cd_cgc_estipulante_w <> '0') then
			select	count(1)
			into STRICT	qt_registros_w
			
			where	exists (SELECT	1
					from	pls_mala_direta
					where	cd_cgc			= cd_cgc_estipulante_w
					and	ds_tipo_destinatario	= 'Estipulante PJ'
					and	nm_usuario		= nm_usuario_p);
			
			if (qt_registros_w	= 0) then
					CALL pls_inserir_mala_direta('', nr_seq_contrato_w, ds_tipo_beneficiario_w,
									'Estipulante PJ', nr_seq_segurado_w, nr_seq_lote_carteira_p,
									cd_cgc_estipulante_w, null, nm_usuario_p,
									cd_estabelecimento_p,null,0,nr_seq_lote_revisao_p,ie_parametro_w,
									nr_seq_lote_notificacao_p, null, ie_considera_ender_prest_p, nr_seq_intercambio_w, null);
			end if;
		end if;
		
		if (substr(ds_parametro_benef_p,4,1) = 'S') and (cd_pf_estipulante_w <> '0') then
			
			select	count(1)
			into STRICT	qt_registros_w
			
			where	exists (SELECT	1
					from	pls_mala_direta
					where	cd_pessoa_fisica	= cd_pf_estipulante_w
					and	ds_tipo_destinatario	= 'Estipulante PF'
					and	nm_usuario		= nm_usuario_p);
			
			if (qt_registros_w	= 0) then
				select	trunc(months_between(clock_timestamp(),dt_nascimento) / 12),
					nr_cpf,
					ie_sexo
				into STRICT	qt_idade_w,
					nr_cpf_w,
					ie_sexo_w
				from	pessoa_fisica
				where	cd_pessoa_fisica	= cd_pf_estipulante_w;
				
				if (ie_sexo_p = 2) then
					if (coalesce(ie_sexo_w,'M') <> 'F') then
						goto final;
					end if;
				elsif (ie_sexo_p = 3) then
					if (coalesce(ie_sexo_w,'F') <> 'M') then
						goto final;
					end if;
				end if;
				
				if	((ie_benef_sem_cpf_p = 'S') and (qt_idade_w >= 18) and (coalesce(nr_cpf_w,'0') = '0')
					or (ie_benef_sem_cpf_p = 'N')) then
					CALL pls_inserir_mala_direta(cd_pf_estipulante_w, nr_seq_contrato_w, ds_tipo_beneficiario_w,
									'Estipulante PF', nr_seq_segurado_w, nr_seq_lote_carteira_p,
									'', null, nm_usuario_p,
									cd_estabelecimento_p,null,0,nr_seq_lote_revisao_p,ie_parametro_w,
									nr_seq_lote_notificacao_p, null, ie_considera_ender_prest_p, nr_seq_intercambio_w, null);
				end if;
			end if;
		end if;
		
		if (substr(ds_parametro_benef_p,5,1) = 'S') and (nr_seq_subestipulante_w <> '0') and (nr_seq_subestipulante_w = coalesce(cd_beneficiario_w,nr_seq_subestipulante_w)) then
			select	cd_cgc,
				cd_pessoa_fisica
			into STRICT	cd_cgc_subestipulante_w,
				cd_pf_subestipulante_w
			from	pls_sub_estipulante
			where	nr_sequencia	= nr_seq_subestipulante_w;
			
			if (coalesce(cd_pf_subestipulante_w,'0') <> '0') then
				select	trunc(months_between(clock_timestamp(),dt_nascimento) / 12),
					nr_cpf,
					ie_sexo
				into STRICT	qt_idade_w,
					nr_cpf_w,
					ie_sexo_w
				from	pessoa_fisica
				where	cd_pessoa_fisica	= cd_pf_subestipulante_w;
				
				if (ie_sexo_p = 2) then
					if (coalesce(ie_sexo_w,'M') <> 'F') then
						goto final;
					end if;
				elsif (ie_sexo_p = 3) then
					if (coalesce(ie_sexo_w,'F') <> 'M') then
						goto final;
					end if;
				end if;
				
				if	((ie_benef_sem_cpf_p = 'S') and (qt_idade_w >= 18) and (coalesce(nr_cpf_w,'0') = '0')
					or (ie_benef_sem_cpf_p = 'N')) then
						CALL pls_inserir_mala_direta(cd_pf_subestipulante_w, nr_seq_contrato_w, ds_tipo_beneficiario_w,
								'SubEstipulante',  nr_seq_segurado_w, nr_seq_lote_carteira_p,
								cd_cgc_subestipulante_w, null, nm_usuario_p,
								cd_estabelecimento_p,null,0,nr_seq_lote_revisao_p,ie_parametro_w,
								nr_seq_lote_notificacao_p, null, ie_considera_ender_prest_p, nr_seq_intercambio_w, null);
				end if;
			else
				CALL pls_inserir_mala_direta(cd_pf_subestipulante_w, nr_seq_contrato_w, ds_tipo_beneficiario_w,
							'SubEstipulante',  nr_seq_segurado_w, nr_seq_lote_carteira_p,
							cd_cgc_subestipulante_w, null, nm_usuario_p,
							cd_estabelecimento_p,null,0,nr_seq_lote_revisao_p,ie_parametro_w,
							nr_seq_lote_notificacao_p, null, ie_considera_ender_prest_p, nr_seq_intercambio_w, null);
			end if;
		end if;
		
		if (substr(ds_parametro_benef_p,6,1) = 'S') and (nr_seq_pagador_w > 0) and (ie_tipo_pagador_w = 'PJ') then
			if (coalesce(nr_seq_intercambio_w::text, '') = '') then
				select	count(1)
				into STRICT	qt_pagadores_w
				
				where	exists (SELECT	1
						from	pls_mala_direta
						where	nr_seq_contrato	= nr_seq_contrato_w
						and	nr_seq_pagador	= nr_seq_pagador_w
						and	nm_usuario	= nm_usuario_p);
			else
				select	count(1)
				into STRICT	qt_pagadores_w
				
				where	exists (SELECT	1
						from	pls_mala_direta
						where	nr_seq_intercambio	= nr_seq_intercambio_w
						and	nr_seq_pagador		= nr_seq_pagador_w
						and	nm_usuario		= nm_usuario_p);
			end if;
			
			select	coalesce(cd_cgc,'0')
			into STRICT	cd_pagador_pj_w
			from	pls_contrato_pagador
			where	nr_sequencia	= nr_seq_pagador_w;
			
			if (cd_pagador_pj_w <> '0') and (qt_pagadores_w = 0) then
				CALL pls_inserir_mala_direta('', nr_seq_contrato_w, ds_tipo_beneficiario_w,
							'Pagador', nr_seq_segurado_w, nr_seq_lote_carteira_p,
							cd_pagador_pj_w, nr_seq_pagador_w, nm_usuario_p,
							cd_estabelecimento_p,null,0,nr_seq_lote_revisao_p,ie_parametro_w,
							nr_seq_lote_notificacao_p, null, ie_considera_ender_prest_p, nr_seq_intercambio_w, null);
			end if;
		end if;
		
		if (substr(ds_parametro_benef_p,7,1) = 'S') and (nr_seq_pagador_w > 0) and (ie_tipo_pagador_w = 'PF') then
			if (coalesce(nr_seq_intercambio_w::text, '') = '') then
				select	count(1)
				into STRICT	qt_pagadores_w
				
				where	exists (SELECT	1
						from	pls_mala_direta
						where	nr_seq_contrato	= nr_seq_contrato_w
						and	nr_seq_pagador	= nr_seq_pagador_w
						and	nm_usuario	= nm_usuario_p);
			else
				select	count(1)
				into STRICT	qt_pagadores_w
				
				where	exists (SELECT	1
						from	pls_mala_direta
						where	nr_seq_intercambio	= nr_seq_intercambio_w
						and	nr_seq_pagador		= nr_seq_pagador_w
						and	nm_usuario		= nm_usuario_p);
			end if;
			select	coalesce(cd_pessoa_fisica,'0')
			into STRICT	cd_pagador_pf_w
			from	pls_contrato_pagador
			where	nr_sequencia	= nr_seq_pagador_w;
			
			if (cd_pagador_pf_w <> '0') and (cd_pagador_pf_w = coalesce(cd_beneficiario_w,cd_pagador_pf_w)) and (qt_pagadores_w = 0) then
				select	trunc(months_between(clock_timestamp(),dt_nascimento) / 12),
					nr_cpf,
					ie_sexo
				into STRICT	qt_idade_w,
					nr_cpf_w,
					ie_sexo_w
				from	pessoa_fisica
				where	cd_pessoa_fisica	= cd_pagador_pf_w;
				
				if (ie_sexo_p = 2) then
					if (coalesce(ie_sexo_w,'M') <> 'F') then
						goto final;
					end if;
				elsif (ie_sexo_p = 3) then
					if (coalesce(ie_sexo_w,'F') <> 'M') then
						goto final;
					end if;
				end if;
				
				if	((ie_benef_sem_cpf_p = 'S') and (qt_idade_w >= 18) and (coalesce(nr_cpf_w,'0') = '0')
					or (ie_benef_sem_cpf_p = 'N')) then
					CALL pls_inserir_mala_direta(cd_pagador_pf_w, nr_seq_contrato_w, ds_tipo_beneficiario_w,
								'Pagador', nr_seq_segurado_w, nr_seq_lote_carteira_p,
								'', nr_seq_pagador_w, nm_usuario_p,
								cd_estabelecimento_p,null,0,nr_seq_lote_revisao_p,ie_parametro_w,
								nr_seq_lote_notificacao_p, null, ie_considera_ender_prest_p, nr_seq_intercambio_w, null);
				end if;
			end if;
		end if;
		
		if (substr(ds_parametro_benef_p,8,1) = 'S') then
			if (coalesce(cd_tipo_contato_p,0) > 0) then
				if (nr_seq_contrato_w IS NOT NULL AND nr_seq_contrato_w::text <> '') then
					select	count(1)
					into STRICT	qt_registros_contato_w
					
					where	exists (SELECT	1
							from 	pls_contrato_contato
							where	nr_seq_contrato = nr_seq_contrato_w
							and	cd_tipo_contato	= cd_tipo_contato_p);
				end if;
				if (qt_registros_contato_w = 0) then
					goto final;
				end if;				
			end if;
		
			open C05;
			loop
			fetch C05 into	
				nr_seq_contato_w,
				cd_pf_contato_w,
				dt_nascimento_contato_w;
			EXIT WHEN NOT FOUND; /* apply on C05 */
				begin					
				CALL pls_inserir_mala_direta(cd_pf_contato_w, nr_seq_contrato_w, ds_tipo_beneficiario_w,
									'Contato', null, nr_seq_lote_carteira_p,
									null, null, nm_usuario_p, cd_estabelecimento_p,
									dt_nascimento_contato_w, 0, nr_seq_lote_revisao_p,
									ie_parametro_w, nr_seq_lote_notificacao_p, nr_seq_contato_w, ie_considera_ender_prest_p, nr_seq_intercambio_w, null);
			
				end;
			end loop;
			close C05;			
		end if;
		
		<<final>>
		nr_seq_segurado_w	:= nr_seq_segurado_w;
		end;
	end loop;
	close v_c01_w;
end if;

if (ie_tipo_prestador_p	> 0) then
	open C02;
	loop
	fetch C02 into
		ie_prestador_w,
		cd_cgc_w,
		cd_pessoa_fisica_w,
		nr_seq_prestador_w,
		dt_exclusao_prestador_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		
		nr_seq_tipo_prestador_w		:= null;
		ie_tipo_endereco_w		:= '';
		nr_seq_tipo_compl_adic_w	:= null;
		
		select	ie_tipo_endereco,
			nr_seq_tipo_prestador,
			nr_seq_tipo_compl_adic
		into STRICT	ie_tipo_endereco_w,
			nr_seq_tipo_prestador_w,
			nr_seq_tipo_compl_adic_w
		from	pls_prestador
		where	nr_sequencia	= nr_seq_prestador_w;
		
		if (area_atuacao_prest_p IS NOT NULL AND area_atuacao_prest_p::text <> '') then
			select 	count(1)
			into STRICT 	qt_registros_prestador_w
			from	area_atuacao_medica a,
				pls_prestador_med_espec b
			where 	b.nr_seq_area_atuacao 	= a.nr_sequencia
			and   	b.nr_seq_prestador 	= nr_seq_prestador_w
			and 	a.nr_sequencia 		= area_atuacao_prest_p
			and (dt_inicio_vigencia IS NOT NULL AND dt_inicio_vigencia::text <> '')
			and coalesce(dt_fim_vigencia::text, '') = '';
		
			if (qt_registros_prestador_w	= 0)then
				goto final;
			end if;
		end if;
		
		if (cd_municipio_prest_p IS NOT NULL AND cd_municipio_prest_p::text <> '') then
			select	count(1)
			into STRICT	qt_registros_prestador_w
			from	pls_prestador_area
			where	nr_seq_prestador	= nr_seq_prestador_w
			and	cd_municipio_ibge	= cd_municipio_prest_p;
			
			if (qt_registros_prestador_w	= 0) then
				goto final;
			end if;
		end if;	
		
		if (sg_uf_prestador_p IS NOT NULL AND sg_uf_prestador_p::text <> '') then
			select	count(1)
			into STRICT	qt_registros_prestador_w
			from	pls_prestador_area
			where	nr_seq_prestador	= nr_seq_prestador_w
			and	sg_estado	= sg_uf_prestador_p;
			
			if (qt_registros_prestador_w	= 0) then
				goto final;
			end if;
		end if;
		
		if (nr_seq_regiao_prestador_p IS NOT NULL AND nr_seq_regiao_prestador_p::text <> '') then
			select	count(1)
			into STRICT	qt_registros_prestador_w
			from	pls_prestador_area
			where	nr_seq_prestador	= nr_seq_prestador_w
			and	nr_seq_regiao	= nr_seq_regiao_prestador_p;
			
			if (qt_registros_prestador_w	= 0) then
				goto final;
			end if;
		end if;
		
		
		if (nr_seq_tipo_prestador_p IS NOT NULL AND nr_seq_tipo_prestador_p::text <> '') then
			if (nr_seq_tipo_prestador_p <> coalesce(nr_seq_tipo_prestador_w,0)) then
				goto final;
			end if;
		end if;	
		
		
		if (ie_tipo_endereco_prest_p IS NOT NULL AND ie_tipo_endereco_prest_p::text <> '') then
			if (ie_tipo_endereco_prest_p <> coalesce(ie_tipo_endereco_w,'X')) then
				goto final;
			else
				if (ie_tipo_endereco_prest_p = 'PFA') then
					if (coalesce(nr_seq_tipo_compl_adic_w,0) <> nr_seq_tipo_compl_adic_p) then
						goto final;
					end if;
				end if;
			end if;
		end if;	
		
		if (ie_situacao_prest_p <> 0) then
			if (ie_situacao_prest_p = 0) and (dt_exclusao_prestador_w IS NOT NULL AND dt_exclusao_prestador_w::text <> '') and (dt_exclusao_prestador_w <= clock_timestamp()) then
				goto final;
			elsif (ie_situacao_prest_p = 1) and
				((coalesce(dt_exclusao_prestador_w::text, '') = '') or
				((dt_exclusao_prestador_w IS NOT NULL AND dt_exclusao_prestador_w::text <> '') and (dt_exclusao_prestador_w > clock_timestamp()))) then
				goto final;
			end if;
		end if;
		
		if (ie_prestador_w	= 'PJ') and (coalesce(ie_enviar_profissional_p,'N') = 'N') then
			cd_pessoa_fisica_w	:= '';
		end if;
	
		if (coalesce(ie_lote_pagamento_p,'N') = 'S') then
			open C03;
			loop
			fetch C03 into	
				nr_seq_lote_w;
			EXIT WHEN NOT FOUND; /* apply on C03 */
				begin
				CALL pls_inserir_mala_direta(cd_pessoa_fisica_w, 0, '',
							'', 0, 0,
							cd_cgc_w, null, nm_usuario_p,
							cd_estabelecimento_p,null, nr_seq_lote_w,nr_seq_lote_revisao_p,ie_parametro_w,
							nr_seq_lote_notificacao_p, null, ie_considera_ender_prest_p, nr_seq_intercambio_w, nr_seq_tipo_compl_adic_p);
				end;
			end loop;
			close C03;
			
		else
			CALL pls_inserir_mala_direta(cd_pessoa_fisica_w, 0, '',
				'', 0, 0,
				cd_cgc_w, null, nm_usuario_p,
				cd_estabelecimento_p,null,0,nr_seq_lote_revisao_p,ie_parametro_w,
				nr_seq_lote_notificacao_p, null, ie_considera_ender_prest_p, nr_seq_intercambio_w, nr_seq_tipo_compl_adic_p);
		end if;
		
		<<final>>
		nr_seq_prestador_w	:= nr_seq_prestador_w;
		end;
	end loop;
	close C02;
end if;

if (ie_tipo_cooperado_p	> 0) then
	
	open C04;
	loop
	fetch C04 into	
		nr_seq_cooperado_w,
		cd_cgc_cooperado_w,
		cd_pf_cooperado_w;
	EXIT WHEN NOT FOUND; /* apply on C04 */
		begin
			
		if (ie_tipo_cooperado_p	> 1) then
			if (ie_tipo_cooperado_p = 3) and (coalesce(cd_pf_cooperado_w::text, '') = '') then
				goto final;
			elsif (ie_tipo_cooperado_p = 2) and (coalesce(cd_cgc_cooperado_w::text, '') = '') then
				goto final;
			end if;
		end if;
		
		if (cd_pf_cooperado_w IS NOT NULL AND cd_pf_cooperado_w::text <> '') then
			if (cd_municipio_cooperado_p IS NOT NULL AND cd_municipio_cooperado_p::text <> '') then
				select	count(1)
				into STRICT	qt_registros_cooperado_w
				from	pessoa_fisica		b,
					compl_pessoa_fisica	a
				where	b.cd_pessoa_fisica	= a.cd_pessoa_fisica
				and	b.cd_pessoa_fisica	= cd_pf_cooperado_w
				and	a.cd_municipio_ibge	= cd_municipio_cooperado_p
				and	a.ie_tipo_complemento	= 1;
				
				if (qt_registros_cooperado_w = 0) then
					goto final;
				end if;	
			end if;
			
			if (area_atuacao_coop_p IS NOT NULL AND area_atuacao_coop_p::text <> '') then
				select	count(1)
				into STRICT	qt_registros_cooperado_w
				from 	medico_area_atuacao a,
					pessoa_fisica b
				where 	a.cd_pessoa_fisica	= b.cd_pessoa_fisica
				and 	b.cd_pessoa_fisica 	= cd_pf_cooperado_w
				and 	a.nr_seq_area_atuacao 	= area_atuacao_coop_p;
				
				if (qt_registros_cooperado_w = 0) then
					goto final;
				end if;	
			end if;
			
			if (nr_crm_cooperado_p IS NOT NULL AND nr_crm_cooperado_p::text <> '') then
				select	count(1)
				into STRICT	qt_registros_cooperado_w
				from	pessoa_fisica		b,
					medico			a
				where	b.cd_pessoa_fisica	= a.cd_pessoa_fisica
				and	b.cd_pessoa_fisica	= cd_pf_cooperado_w
				and	a.nr_crm		= nr_crm_cooperado_p;
				
				if (qt_registros_cooperado_w = 0) then
					goto final;
				end if;	
			end if;
			
			if (ie_vinc_contratual_coop_p	= 'S') then
				select	count(1)
				into STRICT	qt_registros_cooperado_w
				from	pls_contrato_pagador	b,
					pls_contrato		a
				where	b.nr_seq_contrato	= a.nr_sequencia
				and	b.cd_pessoa_fisica	= cd_pf_cooperado_w;
				
				if (qt_registros_cooperado_w > 0) then
					goto final;
				end if;	
			end if;
			
			if (nr_seq_especialidade_coop_p IS NOT NULL AND nr_seq_especialidade_coop_p::text <> '') then
				if (obter_se_especialidade_medico(cd_pf_cooperado_w, nr_seq_especialidade_coop_p) = 'N') then
					goto final;
				end if;	
			end if;
			
		elsif (cd_cgc_cooperado_w IS NOT NULL AND cd_cgc_cooperado_w::text <> '') then
			
			if (cd_municipio_cooperado_p IS NOT NULL AND cd_municipio_cooperado_p::text <> '') then
				select	count(1)
				into STRICT	qt_registros_cooperado_w
				from	pessoa_juridica	
				where	cd_cgc			= cd_cgc_cooperado_w
				and	cd_municipio_ibge	= cd_municipio_cooperado_p;
				
				if (qt_registros_cooperado_w = 0) then
					goto final;
				end if;	
			end if;
			
			if (ie_vinc_contratual_coop_p	= 'S') then
				select	count(1)
				into STRICT	qt_registros_cooperado_w
				from	pls_contrato_pagador	b,
					pls_contrato		a
				where	b.nr_seq_contrato	= a.nr_sequencia
				and	b.cd_cgc		= cd_cgc_cooperado_w;
				
				if (qt_registros_cooperado_w > 0) then
					goto final;
				end if;	
			end if;
			
			if (nr_crm_cooperado_p IS NOT NULL AND nr_crm_cooperado_p::text <> '') then
				goto final;
			end if;	
			
			if (nr_seq_especialidade_coop_p IS NOT NULL AND nr_seq_especialidade_coop_p::text <> '') then
				select	count(1)
				into STRICT	qt_registros_cooperado_w
				from	especialidade_medica c,
					pls_prestador_med_espec b,
					pls_prestador		a
				where	b.cd_especialidade	= c.cd_especialidade
				and	b.nr_seq_prestador	= a.nr_sequencia
				and	a.cd_cgc 		= cd_cgc_cooperado_w
				and	c.cd_especialidade	= nr_seq_especialidade_coop_p
				and	coalesce(b.cd_pessoa_fisica::text, '') = '';
				
				if (qt_registros_cooperado_w = 0) then
					goto final;
				end if;	
			end if;
		end if;	
		
		CALL pls_inserir_mala_direta(cd_pf_cooperado_w, 0, '',
				'Cooperado', 0, 0,
				cd_cgc_cooperado_w, null, nm_usuario_p,
				cd_estabelecimento_p,null,0,0,ie_parametro_w, nr_seq_lote_notificacao_p, null, ie_considera_ender_prest_p, nr_seq_intercambio_w, null);
		
		<<final>>
		nr_seq_cooperado_w	:= nr_seq_cooperado_w;
		end;
	end loop;
	close C04;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_mala_direta ( nr_contrato_p bigint, nr_contrato_final_p bigint, dt_parametro_de_p timestamp, dt_parametro_ate_p timestamp, ie_tipo_data_p bigint, ds_parametro_benef_p text, cd_pessoa_p text, ie_tipo_pessoa_p bigint, nr_seq_lote_carteira_p bigint, ie_tipo_prestador_p bigint, nm_usuario_p text, dt_mes_reajuste_p timestamp, nr_seq_especialidade_p bigint, nr_seq_cbo_p bigint, ie_enviar_profissional_p text, ie_situacao_contrato_p bigint, nr_seq_lote_notificacao_p bigint, ie_benef_sem_cpf_p text, cd_estabelecimento_p bigint, nr_seq_lote_revisao_p bigint, ie_benef_ativo_p bigint, ie_benef_remido_p bigint, qt_idade_inicial_p text, qt_idade_final_p text, ie_sit_financ_p bigint, cd_municipio_p text, ie_tipo_contratacao_p text, ie_sexo_p bigint, ie_lote_pagamento_p text, ie_regulamentacao_p text, nr_seq_sca_p bigint, ie_dt_reajuste_p bigint, ie_fator_moderador_p text, cd_municipio_prest_p text, sg_uf_prestador_p text, nr_seq_regiao_prestador_p bigint, nr_seq_tipo_prestador_p bigint, ie_tipo_endereco_prest_p text, nr_seq_plano_p bigint, nr_matricula_inicial_p bigint, nr_matricula_final_p bigint, cd_municipio_cooperado_p text, nr_seq_situacao_cooperado_p bigint, nr_crm_cooperado_p text, ie_vinc_contratual_coop_p text, cd_convenio_atend_p bigint, nr_seq_parentesco_p bigint, ie_apres_pagador_notif_p text, nr_seq_lote_mens_p bigint, cd_tipo_contato_p bigint, nr_seq_grupo_contratual_p bigint, ie_situacao_prest_p bigint, ie_tipo_cooperado_p bigint, nr_seq_especialidade_coop_p bigint, cd_cgc_pagador_p text, ds_situacao_trabalhista_p text, ie_considera_ender_prest_p text, ie_tipo_contrato_p text, nr_seq_tipo_compl_adic_p bigint, area_atuacao_prest_p bigint, area_atuacao_coop_p bigint) FROM PUBLIC;

