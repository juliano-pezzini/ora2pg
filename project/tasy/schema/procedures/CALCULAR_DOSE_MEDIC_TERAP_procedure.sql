-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE calcular_dose_medic_terap ( cd_material_p bigint, qt_dose_terap_p INOUT bigint, qt_peso_p bigint, qt_periodo_p bigint, nr_unidade_terap_p bigint, qt_vel_infusao_p bigint, ie_disp_infusao_p text, ie_unidade_vel_p text, qt_corrigido_terap_p INOUT bigint, qt_diluente_p INOUT bigint, qt_corrigido_dilu_p INOUT bigint, qt_total_dose_p INOUT bigint, qt_total_corrigido_p INOUT bigint, qt_micrograma_p INOUT bigint, qt_micro_corrigido_p INOUT bigint, qt_dose_p bigint default null, cd_unidade_medida_p text default null, cd_mat_dil_p bigint default null, qt_dose_dil_p bigint default null, cd_unidade_medida_dil_p text default null) AS $body$
DECLARE


ie_unidade_w			varchar(15);
ie_tempo_w			varchar(15);
ie_peso_w			varchar(15);
ie_solucao_w			varchar(1);
ds_abreviacao_w			varchar(255);
qt_concent_med_w		double precision;
qt_concent_med_mg_w		double precision;
qt_dose_ww 			double precision;
qt_total_dose_w			double precision;
qt_corrigido_dilu_w		double precision;
qt_tempo_infusao_w		bigint;
qt_tempo_infusao_ww		double precision;
qt_tempo_ww			bigint;
qt_dose_terap_w			double precision;
qt_dose_terap_ww		double precision;
qt_dose_terapeutica_w		double precision;
qt_corrigido_w			double precision;
qt_corrigido_ww			double precision;
qt_peso_w			double precision;
qt_diluente_w			double precision;
qt_total_corrigido_w		double precision;
qt_equipo_w			double precision;
cd_unid_med_concetracao_w	varchar(15);
cd_unid_med_base_conc_w		varchar(15);
qt_tot_micro_corrigido_w	double precision;
existe_conversao_w		bigint;
EXEC_W                varchar(500);

BEGIN

select ie_unidade,
       ie_tempo,
       ie_peso,
       ie_solucao,
       obter_desc_expressao(cd_exp_abreviacao,ds_abreviacao)
into STRICT	 ie_unidade_w,
       ie_tempo_w,
       ie_peso_w,
       ie_solucao_w,
       ds_abreviacao_w
from regra_dose_terap
where nr_sequencia	= nr_unidade_terap_p;

select max(coalesce(qt_conversao_mg,1)),
       max(upper(cd_unid_med_concetracao)),
       max(upper(cd_unid_med_base_conc))
into STRICT	 qt_concent_med_w,
       cd_unid_med_concetracao_w,
       cd_unid_med_base_conc_w
from   material
where cd_material = cd_material_p;

qt_peso_w	:= qt_peso_p;
if (ie_peso_w = 'G') then
   qt_peso_w	:= qt_peso_p * 1000;	
end if;

select coalesce(max(qt_equipo),0)
into STRICT   qt_equipo_w
from   rep_dispositivo
where  ie_bomba_infusao = ie_disp_infusao_p
and    ie_tipo_item     = 1;

if (ie_solucao_w = 'S') then
	if (qt_dose_p IS NOT NULL AND qt_dose_p::text <> '') then
		qt_tempo_infusao_w := dividir_sem_round((obter_conversao_ml(cd_material_p, qt_dose_p, cd_unidade_medida_p) +
                                             obter_conversao_ml(cd_mat_dil_p, qt_dose_dil_p, cd_unidade_medida_dil_p)), 
                                             Converte_vel_infusao(ie_unidade_vel_p, 'mlh', qt_vel_infusao_p));
	else
		qt_tempo_infusao_w := qt_periodo_p;
	end if;

	if (ie_unidade_w = 'MG') then
		qt_dose_terap_ww 	:= qt_dose_terap_p;
		qt_concent_med_mg_w 	:= qt_concent_med_w;

		qt_dose_ww 			:= qt_dose_terap_ww;
		
    if (ie_peso_w IS NOT NULL AND ie_peso_w::text <> '') then
      begin
        EXEC_W := 'CALL OBTER_DOSE_PESO_MEDIC_TERA_MD(:1,:2) INTO :result';

        EXECUTE EXEC_W USING IN qt_dose_ww,
                                       IN qt_peso_w,
                                       OUT qt_dose_ww;
      exception
        when others then
          qt_dose_ww := null;
      end;
    end if;

    qt_tempo_infusao_ww := qt_tempo_infusao_w;
    begin
      EXEC_W := 'BEGIN OBTER_TEMPO_INF_MED_TERAP_MD(:1,:2,:3,:4,:5,:6); END;';

      EXECUTE EXEC_W USING IN ie_unidade_w,
                                     IN qt_vel_infusao_p,
                                     IN ie_tempo_w,
                                     IN ie_unidade_vel_p,
                                     OUT qt_tempo_ww,
                                     IN OUT qt_tempo_infusao_ww;
    exception
      when others then
        qt_tempo_ww          := null;
        qt_tempo_infusao_ww  := null;
    end;

    begin
      EXEC_W := 'BEGIN OBTER_DOSE_TERAP_MED_TERAP_MD(:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,
                                                     :11,:12,:13,:14,:15,:16,:17); END;';

      EXECUTE EXEC_W USING IN ie_unidade_w,
                                     IN ie_unidade_vel_p,
                                     IN qt_dose_ww,
                                     IN qt_tempo_ww,
                                     IN qt_concent_med_mg_w,
                                     IN qt_corrigido_w,
                                     IN qt_tempo_infusao_ww,
                                     IN qt_equipo_w,
                                     IN ie_tempo_w,				 
                                     OUT qt_dose_terap_p,
                                     OUT qt_corrigido_terap_p,
                                     OUT qt_diluente_p,
                                     OUT qt_corrigido_dilu_p,
                                     OUT qt_total_dose_p,
                                     OUT qt_total_corrigido_p,
                                     OUT qt_micrograma_p,
                                     OUT qt_micro_corrigido_p;
    exception
      when others then
        qt_dose_terap_p        := null;
        qt_corrigido_terap_p   := null;
        qt_diluente_p          := null;
        qt_corrigido_dilu_p    := null;
        qt_total_dose_p        := null;
        qt_total_corrigido_p   := null;
        qt_micrograma_p        := null;
        qt_micro_corrigido_p   := null;
    end;
		
	elsif (ie_unidade_w = 'MCG') then
		qt_dose_terap_ww	 := qt_dose_terap_p;
		qt_concent_med_mg_w 	:= qt_concent_med_w;

		qt_dose_ww 			:= qt_dose_terap_ww;

    if (ie_peso_w IS NOT NULL AND ie_peso_w::text <> '') then
      begin
        EXEC_W := 'CALL OBTER_DOSE_PESO_MEDIC_TERA_MD(:1,:2) INTO :result';

        EXECUTE EXEC_W USING IN qt_dose_ww,
                                       IN qt_peso_w,
                                       OUT qt_dose_ww;
      exception
        when others then
          qt_dose_ww := null;
      end;
    end if;

    qt_tempo_infusao_ww := qt_tempo_infusao_w;
    begin
      EXEC_W := 'BEGIN OBTER_TEMPO_INF_MED_TERAP_MD(:1,:2,:3,:4,:5,:6); END;';

      EXECUTE EXEC_W USING IN ie_unidade_w,
                                     IN qt_vel_infusao_p,
                                     IN ie_tempo_w,
                                     IN ie_unidade_vel_p,
                                     OUT qt_tempo_ww,
                                     IN OUT qt_tempo_infusao_ww;
    exception
      when others then
        qt_tempo_ww          := null;
        qt_tempo_infusao_ww  := null;
    end;
		
    qt_dose_terap_w := round((qt_dose_ww * qt_tempo_ww)::numeric, 2);

    select coalesce(max(qt_conversao),0)
    into STRICT   existe_conversao_w
    from   material_conversao_unidade
    where  cd_material = cd_material_p
    and	   upper(cd_unidade_medida)= upper(ie_unidade_w);

    if (existe_conversao_w > 0) then
      qt_corrigido_w	:= obter_conversao_ml(cd_material_p, qt_dose_terap_w, ie_unidade_w);
    else
      qt_corrigido_w	:= obter_conversao_ml(cd_material_p, dividir(qt_dose_terap_w, 1000), upper(obter_unid_med_usua('MG')));
    end if;

    begin
      EXEC_W := 'BEGIN OBTER_DOSE_TERAP_MED_TERAP_MD(:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,
                                :11,:12,:13,:14,:15,:16,:17); END;';

      EXECUTE EXEC_W USING IN ie_unidade_w,
                                     IN ie_unidade_vel_p,
                                     IN qt_dose_ww,
                                     IN qt_tempo_ww,
                                     IN qt_concent_med_mg_w,
                                     IN qt_corrigido_w,
                                     IN qt_tempo_infusao_ww,
                                     IN qt_equipo_w,
                                     IN ie_tempo_w,				 
                                     OUT qt_dose_terap_p,
                                     OUT qt_corrigido_terap_p,
                                     OUT qt_diluente_p,
                                     OUT qt_corrigido_dilu_p,
                                     OUT qt_total_dose_p,
                                     OUT qt_total_corrigido_p,
                                     OUT qt_micrograma_p,
                                     OUT qt_micro_corrigido_p;
    exception
      when others then
        qt_dose_terap_p        := null;
        qt_corrigido_terap_p   := null;
        qt_diluente_p          := null;
        qt_corrigido_dilu_p    := null;
        qt_total_dose_p        := null;
        qt_total_corrigido_p   := null;
        qt_micrograma_p        := null;
        qt_micro_corrigido_p   := null;
    end;
	
	elsif (ie_unidade_w = 'MEQ') then
		qt_dose_terap_ww 	:= qt_dose_terap_p;
		qt_concent_med_mg_w 	:= qt_concent_med_w;

		qt_dose_ww 			:= qt_dose_terap_ww;
		
    if (ie_peso_w IS NOT NULL AND ie_peso_w::text <> '') then
      begin
        EXEC_W := 'CALL OBTER_DOSE_PESO_MEDIC_TERA_MD(:1,:2) INTO :result';

        EXECUTE EXEC_W USING IN qt_dose_ww,
                                        IN qt_peso_w,
                                        OUT qt_dose_ww;
      exception
        when others then
          qt_dose_ww := null;
      end;
    end if;

    qt_tempo_infusao_ww := qt_tempo_infusao_w;
    begin
      EXEC_W := 'BEGIN OBTER_TEMPO_INF_MED_TERAP_MD(:1,:2,:3,:4,:5,:6); END;';

      EXECUTE EXEC_W USING IN ie_unidade_w,
                                     IN qt_vel_infusao_p,
                                     IN ie_tempo_w,
                                     IN ie_unidade_vel_p,
                                     OUT qt_tempo_ww,
                                     IN OUT qt_tempo_infusao_ww;
    exception
      when others then
        qt_tempo_ww          := null;
        qt_tempo_infusao_ww  := null;
    end;
		
    qt_corrigido_w	:=  Obter_conversao_ml(cd_material_p,qt_dose_ww,'MEQ');

    begin
      EXEC_W := 'BEGIN OBTER_DOSE_TERAP_MED_TERAP_MD(:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,
                                :11,:12,:13,:14,:15,:16,:17); END;';

      EXECUTE EXEC_W USING IN ie_unidade_w,
                                      IN ie_unidade_vel_p,
                                      IN qt_dose_ww,
                                      IN qt_tempo_ww,
                                      IN qt_concent_med_mg_w,
                                      IN qt_corrigido_w,
                                      IN qt_tempo_infusao_ww,
                                      IN qt_equipo_w,
                                      IN ie_tempo_w,				 
                                      OUT qt_dose_terap_p,
                                      OUT qt_corrigido_terap_p,
                                      OUT qt_diluente_p,
                                      OUT qt_corrigido_dilu_p,
                                      OUT qt_total_dose_p,
                                      OUT qt_total_corrigido_p,
                                      OUT qt_micrograma_p,
                                      OUT qt_micro_corrigido_p;
    exception
      when others then
        qt_dose_terap_p        := null;
        qt_corrigido_terap_p   := null;
        qt_diluente_p          := null;
        qt_corrigido_dilu_p    := null;
        qt_total_dose_p        := null;
        qt_total_corrigido_p   := null;
        qt_micrograma_p        := null;
        qt_micro_corrigido_p   := null;
    end;

    elsif (ie_unidade_w = 'UI') then

		qt_dose_terap_ww := qt_dose_terap_p;
		qt_concent_med_mg_w := qt_concent_med_w;

		qt_dose_ww 			:= qt_dose_terap_ww;
		
    if (ie_peso_w IS NOT NULL AND ie_peso_w::text <> '') then
      begin
        EXEC_W := 'CALL OBTER_DOSE_PESO_MEDIC_TERA_MD(:1,:2) INTO :result';

        EXECUTE EXEC_W USING IN qt_dose_ww,
                                       IN qt_peso_w,
                                       OUT qt_dose_ww;
      exception
        when others then
          qt_dose_ww := null;
      end;
    end if;
		
    qt_tempo_infusao_ww := qt_periodo_p;
    begin
      EXEC_W := 'BEGIN OBTER_TEMPO_INF_MED_TERAP_MD(:1,:2,:3,:4,:5,:6); END;';

      EXECUTE EXEC_W USING IN ie_unidade_w,
                                     IN qt_vel_infusao_p,
                                     IN ie_tempo_w,
                                     IN ie_unidade_vel_p,
                                     OUT qt_tempo_ww,
                                     IN OUT qt_tempo_infusao_ww;
    exception
      when others then
        qt_tempo_ww          := null;
        qt_tempo_infusao_ww  := null;
    end;

    qt_dose_terap_w  := (qt_dose_ww * qt_tempo_ww);
    qt_corrigido_w   := obter_conversao_ml(cd_material_p, qt_dose_terap_w, 'UI');
		
    begin
      EXEC_W := 'BEGIN OBTER_DOSE_TERAP_MED_TERAP_MD(:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,
                                :11,:12,:13,:14,:15,:16,:17); END;';

      EXECUTE EXEC_W USING IN ie_unidade_w,
                                     IN ie_unidade_vel_p,
                                     IN qt_dose_ww,
                                     IN qt_tempo_ww,
                                     IN qt_concent_med_mg_w,
                                     IN qt_corrigido_w,
                                     IN qt_tempo_infusao_ww,
                                     IN qt_equipo_w,
                                     IN ie_tempo_w,				 
                                     OUT qt_dose_terap_p,
                                     OUT qt_corrigido_terap_p,
                                     OUT qt_diluente_p,
                                     OUT qt_corrigido_dilu_p,
                                     OUT qt_total_dose_p,
                                     OUT qt_total_corrigido_p,
                                     OUT qt_micrograma_p,
                                     OUT qt_micro_corrigido_p;
    exception
      when others then
        qt_dose_terap_p        := null;
        qt_corrigido_terap_p   := null;
        qt_diluente_p          := null;
        qt_corrigido_dilu_p    := null;
        qt_total_dose_p        := null;
        qt_total_corrigido_p   := null;
        qt_micrograma_p        := null;
        qt_micro_corrigido_p   := null;
    end;
	end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE calcular_dose_medic_terap ( cd_material_p bigint, qt_dose_terap_p INOUT bigint, qt_peso_p bigint, qt_periodo_p bigint, nr_unidade_terap_p bigint, qt_vel_infusao_p bigint, ie_disp_infusao_p text, ie_unidade_vel_p text, qt_corrigido_terap_p INOUT bigint, qt_diluente_p INOUT bigint, qt_corrigido_dilu_p INOUT bigint, qt_total_dose_p INOUT bigint, qt_total_corrigido_p INOUT bigint, qt_micrograma_p INOUT bigint, qt_micro_corrigido_p INOUT bigint, qt_dose_p bigint default null, cd_unidade_medida_p text default null, cd_mat_dil_p bigint default null, qt_dose_dil_p bigint default null, cd_unidade_medida_dil_p text default null) FROM PUBLIC;

