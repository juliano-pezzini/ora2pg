-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gpi_gerar_estudo_viab ( nr_seq_estudo_p bigint, nm_usuario_p text) AS $body$
DECLARE


cd_mes_pay_back_w		bigint;
dt_mes_inicial_w			timestamp;
dt_mes_final_w			timestamp;
dt_referencia_w			timestamp;
ie_resultado_w			varchar(1)	:= 'V';
qt_contador_w			integer;
nr_seq_cenario_w			bigint;
nr_seq_mes_inicio_w		bigint;
nr_seq_mes_fim_w			bigint;
nr_seq_orcamento_w		bigint;
qt_mes_w			bigint;
tx_base_w			double precision;
tx_fator_desc_w			double precision	:= 0;
tx_oportunidade_w			double precision;
vl_despesa_w			double precision	:= 0;
vl_fluxo_acum_w			double precision	:= 0;
vl_fluxo_desc_w			double precision	:= 0;
vl_investimento_w			double precision	:= 0;
vl_investimento_desc_w		double precision	:= 0;
vl_receita_w			double precision	:= 0;
vl_resultado_desc_w		double precision	:= 0;
vl_residual_w			double precision	:= 0;
vl_residual_ww			double precision	:= 0;
tx_tir_mensal_w			double precision	:= 0;
tx_tir_anual_w			double precision	:= 0;

BEGIN

delete	FROM gpi_estudo_viab_per
where	nr_seq_estudo	= nr_seq_estudo_p;

commit;

select	coalesce(a.qt_mes,0),
	a.nr_seq_cenario,
	a.nr_seq_orcamento,
	a.vl_residual,
	round((dividir(a.tx_oportunidade,100))::numeric,4)
into STRICT	qt_mes_w,
	nr_seq_cenario_w,
	nr_seq_orcamento_w,
	vl_residual_w,
	tx_oportunidade_w
from	gpi_estudo_viab a
where	a.nr_sequencia	= nr_seq_estudo_p;

select	nr_seq_mes_inicio,
	nr_seq_mes_fim
into STRICT	nr_seq_mes_inicio_w,
	nr_seq_mes_fim_w
from	ctb_orc_cenario
where	nr_sequencia	= nr_seq_cenario_w;

dt_mes_inicial_w		:= ctb_obter_mes_ref(nr_seq_mes_inicio_w);
dt_mes_final_w		:= ctb_obter_mes_ref(nr_seq_mes_fim_w);
dt_referencia_w		:= dt_mes_inicial_w;
tx_base_w		:= 1 + tx_oportunidade_w;
vl_residual_ww		:= vl_residual_w;

for qt_contador_w in 0..qt_mes_w loop
	begin
	tx_fator_desc_w	:= power(tx_base_w,qt_contador_w);

	if (qt_contador_w = 0) then /* Primeira linha (Mes = 0) possui tratamento especifico de valor e fator desconto*/
		/*Buscar valor total do orçamento do projeto é o primeiro valor */

		select	coalesce(sum(b.vl_orcado),0)
		into STRICT	vl_investimento_w
		from	gpi_orc_item b,
			gpi_orcamento a
		where	a.nr_sequencia = b.nr_seq_orcamento
		and	a.nr_sequencia = nr_seq_orcamento_w;

		tx_fator_desc_w		:= 1;
		vl_investimento_desc_w	:= dividir(vl_investimento_w,tx_fator_desc_w);

	else
		begin
		if (qt_contador_w = 1) then /* Mes 1 - Possui tratamento especifico para o fator desconto. é sempre a tx_base (1 + a taxa de oportunidade do estudo) */
			tx_fator_desc_w			:= tx_base_w;
		end if;
		select	coalesce(sum(CASE WHEN c.ie_debito_credito='C' THEN a.vl_orcado  ELSE 0 END ),0) vl_receita,
			coalesce(sum(CASE WHEN c.ie_debito_credito='D' THEN a.vl_orcado  ELSE 0 END ),0) vl_despesa
		into STRICT	vl_receita_w,
			vl_despesa_w
		from	ctb_mes_ref e,
			ctb_orc_cenario d,
			ctb_grupo_conta c,
			conta_contabil b,
			ctb_orc_cen_valor a
		where	a.cd_conta_contabil	= b.cd_conta_contabil
		and	b.cd_grupo		= c.cd_grupo
		and	d.nr_sequencia		= a.nr_seq_cenario
		and	d.nr_sequencia		= nr_seq_cenario_w
		and	e.nr_sequencia		= a.nr_seq_mes_ref
		and	e.dt_referencia		= dt_referencia_w;

		dt_referencia_w		:= add_months(dt_referencia_w,1);
		vl_investimento_w	:= 0;
		vl_investimento_desc_w	:= 0;
		end;
	end if;
	vl_residual_w		:= null;
	if (qt_contador_w = qt_mes_w) then
		vl_residual_w	:= vl_residual_ww;
	end if;
	vl_resultado_desc_w	:= ((vl_investimento_w * -1) + (vl_receita_w - vl_despesa_w) + coalesce(vl_residual_w,0));
	vl_fluxo_desc_w		:= dividir(vl_resultado_desc_w, tx_fator_desc_w);
	vl_fluxo_acum_w		:= vl_fluxo_acum_w + vl_fluxo_desc_w;

	if (coalesce(cd_mes_pay_back_w::text, '') = '') and (vl_fluxo_acum_w > 0) then
		cd_mes_pay_back_w	:= qt_contador_w;
	end if;

	insert into gpi_estudo_viab_per(
		nr_sequencia,
		nr_seq_estudo,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		cd_mes,
		vl_investimento,
		vl_receita,
		vl_despesa,
		tx_fator_desc,
		vl_resultado_desc,
		vl_investimento_desc,
		vl_residual,
		vl_fluxo_desc,
		vl_fluxo_acum)
	values (	nextval('gpi_estudo_viab_per_seq'),
		nr_seq_estudo_p,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		qt_contador_w,
		CASE WHEN qt_contador_w=0 THEN vl_investimento_w  ELSE 0 END ,
		vl_receita_w,
		vl_despesa_w,
		tx_fator_desc_w,
		coalesce(vl_resultado_desc_w,0),
		vl_investimento_desc_w,
		vl_residual_w,
		vl_fluxo_desc_w,
		vl_fluxo_acum_w);

	end;
end loop;

SELECT * FROM gpi_calcular_tir(nr_seq_estudo_p, tx_tir_mensal_w, tx_tir_anual_w) INTO STRICT tx_tir_mensal_w, tx_tir_anual_w;

/* Se não tiver TIR ou Pay Back o Estudo é Inviavel */

if (coalesce(cd_mes_pay_back_w,0) = 0) or (coalesce(tx_tir_mensal_w,0) = 0) then
	ie_resultado_w	:= 'I';
end if;

update	gpi_estudo_viab
set	cd_mes_pay_back = cd_mes_pay_back_w,
	tx_ir		= tx_tir_mensal_w,
	ie_resultado	= ie_resultado_w
where	nr_sequencia	= nr_seq_estudo_p;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gpi_gerar_estudo_viab ( nr_seq_estudo_p bigint, nm_usuario_p text) FROM PUBLIC;

