-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE cancelar_titulo_receber_nfs ( nr_seq_nf_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE



cd_moeda_padrao_w		integer	:= 0;
nr_seq_baixa_w		integer	:= 0;
nr_seq_trans_canc_nota_w	bigint;
cd_tipo_receb_canc_nota_w	integer;
nr_titulo_w			bigint;
vl_saldo_titulo_w		double precision;
vl_titulo_w			double precision;
nr_lote_contabil_w		bigint;
vl_recebido_w			double precision;
ie_cancel_tit_contabil_w	varchar(1);
ie_cons_adiant_saldo_tit_w	parametro_contas_receber.ie_cons_adiant_saldo_tit%type;
vl_adiantamento_w		conta_paciente_adiant.vl_adiantamento%type := 0;
nr_interno_conta_w		conta_paciente.nr_interno_conta%type;
ds_observacao_w			pls_mensalidade.ds_observacao%type;
nr_seq_mensalidade_w		nota_fiscal.nr_seq_mensalidade%type;
ie_nota_credito_w			operacao_nota.ie_nota_credito%type;
ie_consist_tit_w		varchar(1) := 'S';
nr_titulo_pagar_imposto_w		titulo_pagar.nr_titulo%type;

C01 CURSOR FOR
	SELECT	nr_titulo,
		vl_saldo_titulo,
		vl_titulo,
		coalesce(nr_lote_contabil,0),
		nr_interno_conta
	from	titulo_receber
	where	nr_seq_nf_saida = nr_seq_nf_p
	and	ie_situacao	<> 3;
	
/*OS 1965380 - Cursor para buscar os títulos a pagar gerados para os tributos do título que está sendo cancelado, para cancelar esses títulos também*/

C02 CURSOR FOR
	SELECT	a.nr_titulo
	from	titulo_pagar a,
			titulo_receber_trib b
	where	a.nr_seq_tit_rec_trib 	= b.nr_sequencia
	and		b.nr_titulo				= nr_titulo_w;	


BEGIN

select	cd_moeda_padrao,
	nr_seq_trans_canc_nota,
	cd_tipo_receb_canc_nota,
	ie_cancel_tit_contabil,
	coalesce(ie_cons_adiant_saldo_tit,'N')
into STRICT	cd_moeda_padrao_w,
	nr_seq_trans_canc_nota_w,
	cd_tipo_receb_canc_nota_w,
	ie_cancel_tit_contabil_w,
	ie_cons_adiant_saldo_tit_w
from	parametro_contas_receber
where	cd_estabelecimento	= cd_estabelecimento_p;

if (coalesce(cd_moeda_padrao_w::text, '') = '') or (coalesce(nr_seq_trans_canc_nota_w::text, '') = '') or (coalesce(cd_tipo_receb_canc_nota_w::text, '') = '') then
	--r.aise_application_error(-20011,'Falta ser informado parametros do contas receber para cancelamento da nota.');
	CALL wheb_mensagem_pck.exibir_mensagem_abort(267357);
end if;

/*OS 1092810 - Se for nota de credito nao pode restringir pro méxico, porque tem estorno do abatimento.*/

select	coalesce(max(ie_nota_credito),'N')
into STRICT	ie_nota_credito_w
from	operacao_nota o,
		nota_fiscal a
where	a.nr_sequencia 		= nr_seq_nf_p
and		a.cd_operacao_nf 	= o.cd_operacao_nf;

/*Se for no mexico e for nota de crédito nao pode consistir*/

if ((philips_param_pck.get_cd_pais = 2) and (coalesce(ie_nota_credito_w,'N') = 'S')) then
	ie_consist_tit_w := 'N';
else
	ie_consist_tit_w := 'S';
end if;	

OPEN C01;
LOOP
FETCH C01 into
	nr_titulo_w,
	vl_saldo_titulo_w,
	vl_titulo_w,
	nr_lote_contabil_w,
	nr_interno_conta_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	vl_adiantamento_w := 0;
	ds_observacao_w := null;
	nr_seq_mensalidade_w := null;
	/* Francisco - OS 203679 - 22/03/2010 - Incluí todas as consistências que haviam  
	na CANCELAR_TITULO_RECEBER */
	if (nr_lote_contabil_w <> 0) then
		--r.aise_application_error(-20011,'O título possui lote contábil. Não pode ser cancelado !');
		CALL wheb_mensagem_pck.exibir_mensagem_abort(267358);
	elsif (ie_cons_adiant_saldo_tit_w = 'N') and (vl_saldo_titulo_w <> vl_titulo_w) and (coalesce(ie_consist_tit_w,'S') = 'S') then
		--r.aise_application_error(-20011,'O valor do título difere do valor do saldo, Não pode ser cancelado !');	
		CALL wheb_mensagem_pck.exibir_mensagem_abort(267359);
	elsif (ie_cons_adiant_saldo_tit_w = 'S') and (coalesce(ie_consist_tit_w,'S') = 'S') then
		
		if (nr_interno_conta_w > 0) then
		
			select	coalesce(sum(vl_adiantamento),0)
			into STRICT	vl_adiantamento_w
			from	conta_paciente_adiant
			where	nr_interno_conta = nr_interno_conta_w;
		
		end if;
		
		if	((vl_saldo_titulo_w + vl_adiantamento_w) <> vl_titulo_w) then
			--r.aise_application_error(-20011,'O valor do título difere do valor do saldo, Não pode ser cancelado ! ' || vl_titulo_w || ' * ' || vl_adiantamento_w || ' * ' || vl_saldo_titulo_w);	
			CALL wheb_mensagem_pck.exibir_mensagem_abort(267359);
		end if;
	end if;	
	
	
	select	coalesce(sum(vl_recebido),0)
	into STRICT	vl_recebido_w
	from	titulo_receber_liq a
	where	nr_titulo = nr_titulo_w
	and	coalesce(ie_lib_caixa, 'S') = 'S';
	
	if (vl_recebido_w <> 0) then
		--r.aise_application_error(-20011,'Título possui baixas. Não pode ser cancelado !');
		CALL wheb_mensagem_pck.exibir_mensagem_abort(267361);
	end if;

	select	coalesce(max(nr_lote_contabil),0)
	into STRICT	nr_lote_contabil_w
	from	titulo_receber_liq
	where	nr_titulo	= nr_titulo_w;

	if (ie_cancel_tit_contabil_w = 'N') and (nr_lote_contabil_w <> 0) then
		--r.aise_application_error(-20011,'Há baixas com lote contábil. Não pode ser cancelado !');
		CALL wheb_mensagem_pck.exibir_mensagem_abort(267364);
	end if;
	/* Fim Francisco 22/03/2010 */

	
	
	select	coalesce(max(nr_sequencia),0) + 1
	into STRICT	nr_seq_baixa_w
	from	titulo_receber_liq
	where	nr_titulo	= nr_titulo_w;
	
	select 	max(nr_seq_mensalidade)
	into STRICT	nr_seq_mensalidade_w
	from	nota_fiscal
	where	nr_sequencia = nr_seq_nf_p;
	
	if (nr_seq_mensalidade_w IS NOT NULL AND nr_seq_mensalidade_w::text <> '') then
		begin
		select 	b.ds_motivo || ' - ' || a.ds_obs_cancelamento
		into STRICT	ds_observacao_w
		from 	pls_mensalidade a,
			pls_motivo_canc_mens b
		where	a.nr_seq_motivo_canc = b.nr_sequencia
		and	a.nr_sequencia = nr_seq_mensalidade_w;
		exception
			when others then
				ds_observacao_w := null;
		end;
	end if;

	insert	into titulo_receber_liq(nr_titulo,
		nr_sequencia,
		dt_recebimento,
		vl_recebido,
		vl_descontos,
		vl_juros,
		vl_multa,
		cd_moeda,
		dt_atualizacao,
		nm_usuario,
		cd_tipo_recebimento,
		ie_acao,
		cd_serie_nf_devol,
		nr_nota_fiscal_devol,
		cd_banco,
		cd_agencia_bancaria,
		nr_documento,
		nr_lote_banco,
		cd_cgc_emp_cred,
		nr_cartao_cred,
		nr_adiantamento,
		nr_lote_contabil,
		nr_seq_trans_fin,
		vl_rec_maior,
		vl_glosa,
		ie_lib_caixa,
		nr_lote_contab_antecip,
		nr_lote_contab_pro_rata,
		ds_observacao)
	values (nr_titulo_w,
		nr_seq_baixa_w,
		clock_timestamp(),
		vl_saldo_titulo_w,
		0,
		0,
		0,
		cd_moeda_padrao_w,
		clock_timestamp(),
		nm_usuario_p,
		cd_tipo_receb_canc_nota_w,
		'I',
		null,
		null,
		null, 
		null,
		null,
		null,
		null,
		null,
		null,
		0,
		nr_seq_trans_canc_nota_w,
		0,
		0,
		'S',
		0,
		0,
		ds_observacao_w);

	CALL atualizar_saldo_tit_rec(nr_titulo_w, nm_usuario_p);

	update	titulo_receber
	set	dt_liquidacao = clock_timestamp(),
		ie_situacao = 3,
		nm_usuario = nm_usuario_p,
		dt_atualizacao = clock_timestamp()
	where	nr_titulo = nr_titulo_w;
	
	/*OS 1965380 - Cursor para buscar os títulos a pagar gerados para os tributos do título que está sendo cancelado, para cancelar esses títulos também*/

	open C02;
	loop
	fetch C02 into	
		nr_titulo_pagar_imposto_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		CALL cancelar_titulo_pagar(nr_titulo_pagar_imposto_w, nm_usuario_p, clock_timestamp());
		end;
	end loop;
	close C02;
	
	end;
END LOOP;
CLOSE C01;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE cancelar_titulo_receber_nfs ( nr_seq_nf_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

