-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE desdobrar_entrega_item_oci ( nr_ordem_compra_p bigint, nr_item_oci_p bigint, qt_prevista_entrega_p bigint, dt_prevista_entrega_p timestamp, ds_observacao_p text, ie_deleta_p text, nm_usuario_p text) AS $body$
DECLARE

 
nr_sequencia_w				bigint;
ie_sistema_origem_w			varchar(15);
cd_material_w				material.cd_material%type;
nr_item_oci_w				ordem_compra_item.nr_item_oci%type;
nr_seq_entrega_w			ordem_compra_item_entrega.nr_sequencia%type;
nr_cot_compra_w				cot_compra.nr_cot_compra%type;
nr_solic_compra_w			solic_compra.nr_solic_compra%type;
cd_estabelecimento_w			estabelecimento.cd_estabelecimento%type;
nr_seq_motivo_cancel_ordem_w		parametro_compras.nr_seq_motivo_cancel_ordem%type;

C01 CURSOR FOR 
	SELECT	nr_sequencia 
	from	ordem_compra_item_entrega 
	where	nr_ordem_compra	= nr_ordem_compra_p 
	and	nr_item_oci	= nr_item_oci_p 
	and	coalesce(qt_real_entrega,0) > 0;

c02 CURSOR FOR 
SELECT	a.cd_material, 
	a.nr_item_oci, 
	b.nr_sequencia 
from	ordem_compra_item a, 
	ordem_compra_item_entrega b 
where	a.nr_ordem_compra = b.nr_ordem_compra 
and	a.nr_item_oci = b.nr_item_oci 
and	a.nr_ordem_compra = nr_ordem_compra_p 
and	a.nr_item_oci = nr_item_oci_p 
and	b.qt_prevista_entrega > coalesce(qt_real_entrega,0) 
and	coalesce(b.dt_cancelamento::text, '') = '' 
and exists (	SELECT  1 
			from	inspecao_recebimento x 
			where	x.nr_seq_entrega = b.nr_sequencia);
	
	 

BEGIN 
 
open C01;
loop 
fetch C01 into	 
	nr_sequencia_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	update	ordem_compra_item_entrega 
	set	qt_prevista_entrega = qt_real_entrega 
	where	nr_sequencia = nr_sequencia_w;
	end;
end loop;
close C01;
 
if (ie_deleta_p = 'S') then 
	 
	select	cd_estabelecimento 
	into STRICT	cd_estabelecimento_w 
	from	ordem_compra 
	where	nr_ordem_compra = nr_ordem_compra_p;
	 
	select	nr_seq_motivo_cancel_ordem 
	into STRICT	nr_seq_motivo_cancel_ordem_w 
	from	parametro_compras 
	where	cd_estabelecimento = cd_estabelecimento_w;
	 
	if (coalesce(nr_seq_motivo_cancel_ordem_w,0) = 0) then 
		 
		select	min(nr_sequencia) 
		into STRICT	nr_seq_motivo_cancel_ordem_w 
		from	motivo_cancel_sc_oc 
		where	ie_situacao = 'A' 
		and	ie_ordem_compra = 'S';
	 
	end if;
	 
	if (nr_seq_motivo_cancel_ordem_w > 0) then 
	 
		open C02;
		loop 
		fetch C02 into	 
			cd_material_w, 
			nr_item_oci_w, 
			nr_seq_entrega_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin 
			SELECT * FROM cancelar_entrega_item( 
				nr_ordem_compra_p, nr_item_oci_w, nr_seq_entrega_w, 'N', 'N', 'N', nm_usuario_p, wheb_mensagem_pck.get_texto(776617), coalesce(nr_seq_motivo_cancel_ordem_w,1), 'N', 'N', cd_material_w, 'N', nr_cot_compra_w, nr_solic_compra_w) INTO STRICT nr_cot_compra_w, nr_solic_compra_w;
			 
			end;
		end loop;
		close C02;
	end if;
	 
	 
	delete	FROM ordem_compra_item_entrega a 
	where	nr_ordem_compra	= nr_ordem_compra_p 
	and	nr_item_oci	= nr_item_oci_p 
	and	coalesce(qt_real_entrega,0) = 0 
	and	coalesce(dt_cancelamento::text, '') = '' 
	and not exists (	SELECT  1 
			from	inspecao_recebimento x 
			where	x.nr_seq_entrega = a.nr_sequencia);
					 
end if;
 
if (coalesce(qt_prevista_entrega_p,0) > 0) then 
	begin 
	 
	select	max(ie_sistema_origem) 
	into STRICT	ie_sistema_origem_w 
	from	ordem_compra 
	where	nr_ordem_compra = nr_ordem_compra_p;
	 
	if (ie_sistema_origem_w IS NOT NULL AND ie_sistema_origem_w::text <> '') then 
		 
		update	ordem_compra 
		set	ie_necessita_enviar_int	= 'S', 
			nm_usuario_altera_int	= nm_usuario_p 
		where	nr_ordem_compra		= nr_ordem_compra_p;
	 
	end if;
	 
	select	coalesce(max(nr_sequencia),0) 
	into STRICT	nr_sequencia_w 
	from	ordem_compra_item_entrega 
	where	nr_ordem_compra		= nr_ordem_compra_p 
	and	nr_item_oci		= nr_item_oci_p 
	and	dt_prevista_entrega		= dt_prevista_entrega_p 
	and	coalesce(dt_cancelamento::text, '') = '';
 
	if (nr_sequencia_w = 0) then 
		insert into ordem_compra_item_entrega( 
			nr_sequencia, 
			nr_ordem_compra, 
			nr_item_oci, 
			dt_prevista_entrega, 
			qt_prevista_entrega, 
			dt_atualizacao, 
			nm_usuario, 
			dt_entrega_original, 
			dt_entrega_limite, 
			ds_observacao) 
		values (	nextval('ordem_compra_item_entrega_seq'), 
			nr_ordem_compra_p, 
			nr_item_oci_p, 
			dt_prevista_entrega_p, 
			qt_prevista_entrega_p, 
			clock_timestamp(), 
			nm_usuario_p, 
			dt_prevista_entrega_p, 
			dt_prevista_entrega_p, 
			substr(ds_observacao_p,1,255));
	else 
		update	ordem_compra_item_entrega 
		set	qt_prevista_entrega	= qt_prevista_entrega + qt_prevista_entrega_p, 
			ds_observacao	= substr(ds_observacao_p,1,255) 
		where	nr_sequencia	= nr_sequencia_w;
	end if;
 
	end;
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE desdobrar_entrega_item_oci ( nr_ordem_compra_p bigint, nr_item_oci_p bigint, qt_prevista_entrega_p bigint, dt_prevista_entrega_p timestamp, ds_observacao_p text, ie_deleta_p text, nm_usuario_p text) FROM PUBLIC;

