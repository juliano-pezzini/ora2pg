-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_cheque_titulo ( cd_banco_p bigint, cd_agencia_p text, cd_conta_p bigint, nr_titulo_p bigint, ie_deduzir_tributo_p text, nr_cheque_p bigint, ds_beneficiario_p text, dt_emissao_p timestamp, ie_juros_multa_p text, nm_usuario_p text, nr_seq_trans_fin_emissao_p integer, cd_moeda_estrang_p bigint default null, vl_cotacao_p bigint default null) AS $body$
DECLARE


ie_cheque_repetido_w		varchar(1);
vl_saldo_titulo_w		double precision;
cd_cgc_w			varchar(15);
cd_pessoa_fisica_w		bigint;
nr_seq_cheque_w			bigint;
vl_imposto_w			double precision;
vl_saldo_juros_w		double precision;
vl_saldo_multa_w		double precision;
qt_dias_vencimento_w		bigint;
cd_cgc_estabelecimento_w	varchar(14);
cd_estabelecimento_w		bigint;
qt_cheque_w			bigint;
cd_tipo_baixa_w			bigint;
nr_seq_trans_financ_w		bigint;
nr_seq_baixa_w			bigint;

cd_moeda_padrao_w		integer	:= 0;
ie_baixa_contab_w		varchar(50);
ie_conta_contabil_baixa_w	varchar(1);
vl_baixa_w			double precision;
cd_moeda_titulo_w		integer;
vl_cotacao_moeda_w		double precision	:= null;
nr_seq_tit_pagar_imposto_w	bigint	:= 0;

nr_seq_imposto_w		bigint	:= 0;
ie_gerar_titulo_pagar_w		varchar(50);
cd_conta_contabil_w		varchar(20);
/* Projeto Multimoeda - Variáveis*/

vl_baixa_estrang_w		double precision;
vl_complemento_w		double precision;
vl_cotacao_w			double precision;
cd_moeda_banco_w		integer;
cd_moeda_estrang_w		integer;
vl_cotacao_tit_w		cotacao_moeda.vl_cotacao%type;
cd_moeda_tit_w			integer;
vl_var_cambial_w		double precision;
vl_cambial_ativo_w		double precision := 0;
vl_cambial_passivo_w		double precision := 0;
ie_var_cambial_w		varchar(1) := 'N';
vl_baixa_tit_estrang_w		double precision;

c01 CURSOR FOR
SELECT	a.nr_sequencia,
	a.vl_imposto,
	b.ie_gerar_titulo_pagar
from	tributo b,
	w_titulo_pagar_imposto a
where	a.nr_seq_baixa	= nr_seq_baixa_w
and	a.cd_tributo	= b.cd_tributo
and	a.nr_titulo	= nr_titulo_p
and	'S'		= coalesce(ie_deduzir_tributo_p,'N');


BEGIN

select	a.cd_cgc,
	a.cd_estabelecimento
into STRICT	cd_cgc_estabelecimento_w,
	cd_estabelecimento_w
from	estabelecimento a,
	titulo_pagar b
where	a.cd_estabelecimento	= b.cd_estabelecimento
and	b.nr_titulo		= nr_titulo_p;

ie_cheque_repetido_w := Obter_Param_Usuario(127, 8, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_cheque_repetido_w);
qt_dias_vencimento_w := Obter_Param_Usuario(127, 17, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, qt_dias_vencimento_w);

select	coalesce(vl_saldo_titulo, 0),
	cd_cgc,
	cd_pessoa_fisica,
	coalesce(VL_SALDO_JUROS, 0),
	coalesce(VL_SALDO_MULTA, 0),
	cd_moeda
into STRICT	vl_saldo_titulo_w,
	cd_cgc_w,
	cd_pessoa_fisica_w,
	vl_saldo_juros_w,
	vl_saldo_multa_w,
	cd_moeda_titulo_w
from	titulo_pagar
where	nr_titulo	= nr_titulo_p;

vl_baixa_w := vl_saldo_titulo_w;

select	cd_moeda_padrao,
	coalesce(ie_baixa_contab,'S'),
	coalesce(ie_conta_contabil_baixa,'N')
into STRICT	cd_moeda_padrao_w,
	ie_baixa_contab_w,
	ie_conta_contabil_baixa_w
from	parametros_contas_pagar
where	cd_estabelecimento	= cd_estabelecimento_w;

/* Projeto Multimoeda - Busca a moeda da conta bancária selecionada. */

if (cd_conta_p IS NOT NULL AND cd_conta_p::text <> '') then
	select obter_moeda_padrao_empresa(cd_conta_p,'B')
	into STRICT cd_moeda_banco_w
	;
	/* Verifica se a noeda da baixa é a mesma da conta bancária, se não for deve impedir gerar
	      uma transação em moeda diferente para a conta. Se a conta não possuir moeda permite inserir.*/
	if (cd_moeda_banco_w IS NOT NULL AND cd_moeda_banco_w::text <> '') then
		if (cd_moeda_banco_w <> coalesce(cd_moeda_estrang_p,cd_moeda_titulo_w)) then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(341360);
		end if;
	end if;
end if;

if (ie_cheque_repetido_w = 'N') then

	select	count(*)
	into STRICT	qt_cheque_w
	from	cheque a
	where	a.nr_cheque		= to_char(nr_cheque_p)
	and	a.cd_banco		= cd_banco_p
	and	a.cd_agencia_bancaria	= cd_agencia_p
	and	a.nr_seq_conta_banco	= cd_conta_p
	and	coalesce(a.dt_cancelamento::text, '') = '';
	if (qt_cheque_w > 0) then
		/* Já existem cheques com este número, banco, agência e conta.
		   Cheque: nr_cheque_w. Parâmetro [28]. */
		CALL wheb_mensagem_pck.exibir_mensagem_abort(181528,'NR_CHEQUE_W='||nr_cheque_p,-20012);
	end if;
end if;

/*
if	(nvl(ie_deduzir_tributo_p,'N')	= 'S') then

	delete from w_titulo_pagar_imposto -- essa linha deleta os tributos gerados  quando o titulo foi criado, por causa do checkbox 'Gerar simulçao de tributos' marcado.
	where 	nr_seq_escrit is null
	and 	nr_bordero is null
        and 	nr_titulo = nr_titulo_p;

	gerar_w_tit_pag_imposto(nr_titulo_p,nm_usuario_p); --gerar tributos conforme dados atuais do titulo, tributos atualizados.

	select	nvl(sum(a.vl_imposto),0) -- deduzir o valor dos tributos gerados no valor do cheque.
	into	vl_imposto_w
	from	w_titulo_pagar_imposto a
	where	a.nr_titulo	= nr_titulo_p;

	vl_saldo_titulo_w := vl_saldo_titulo_w - vl_imposto_w;

end if;
*/
if (coalesce(ie_juros_multa_p,'N')= 'S') then
	vl_saldo_titulo_w := vl_saldo_titulo_w + vl_saldo_juros_w + vl_saldo_multa_w;
end if;

if (coalesce(ie_deduzir_tributo_p,'N')	= 'S') then

	select	coalesce(sum(vl_imposto),0)
	into STRICT	vl_imposto_w
	from	w_titulo_pagar_imposto
	where	nr_titulo	= nr_titulo_p;

	vl_saldo_titulo_w := vl_saldo_titulo_w - coalesce(vl_imposto_w,0);

end if;

/* Projeto Multimoeda - Verifica se a baixa é em moeda estrangeira, caso positivo calcula o valor em moeda estrangeira.*/

if ((cd_moeda_estrang_p IS NOT NULL AND cd_moeda_estrang_p::text <> '') and coalesce(vl_cotacao_p,0) <> 0) then
	vl_cotacao_w		:= vl_cotacao_p;
	cd_moeda_estrang_w	:= cd_moeda_estrang_p;
	vl_baixa_estrang_w	:= vl_saldo_titulo_w / vl_cotacao_w;
	vl_complemento_w	:= vl_saldo_titulo_w - vl_baixa_estrang_w;
else
	vl_baixa_estrang_w	:= null;
	vl_complemento_w	:= null;
	vl_cotacao_w		:= null;
	cd_moeda_estrang_w	:= null;
end if;

select	nextval('cheque_seq')
into STRICT	nr_seq_cheque_w
;

insert into cheque(CD_BANCO,
	CD_AGENCIA_BANCARIA,
	NR_CHEQUE,
	DT_EMISSAO,
	VL_CHEQUE,
	DT_ATUALIZACAO,
	NM_USUARIO,
	CD_CGC_EMITENTE,
	CD_CGC_DESTINATARIO,
	CD_PESSOA_DESTINATARIO,
	DS_DESTINATARIO,
	DT_IMPRESSAO,
	IE_SITUACAO,
	CD_ESTABELECIMENTO,
	nr_sequencia,
	nr_seq_conta_banco,
	ds_observacao,
	ds_utilizacao,
	dt_vencimento,
	nr_seq_trans_fin_emissao,
	vl_cheque_estrang,
	vl_complemento,
	vl_cotacao,
	cd_moeda)
values	(cd_banco_p,
	cd_agencia_p,
	to_char(nr_cheque_p),
	coalesce(dt_emissao_p, clock_timestamp()),
	vl_saldo_titulo_w,
	clock_timestamp(),
	nm_usuario_p,
	cd_cgc_estabelecimento_w,
	cd_cgc_w,
	cd_pessoa_fisica_w,
	substr(ds_beneficiario_p,1,40),
	null,
	null,
	CD_ESTABELECIMENTO_W,
	nr_seq_cheque_w,
	cd_conta_p,
	wheb_mensagem_pck.get_texto(303949),	--'Cheque gerado à partir da função Títulos a Pagar',
	wheb_mensagem_pck.get_texto(303951,'NR_TITULO=' || nr_titulo_p), --'Utilizado para pagamento do título ' || nr_titulo_p,
	coalesce(dt_emissao_p,clock_timestamp()) + coalesce(qt_dias_vencimento_w,0),
	nr_seq_trans_fin_emissao_p,
	vl_baixa_estrang_w,
	vl_complemento_w,
	vl_cotacao_w,
	cd_moeda_estrang_w);

-- buscar tipo de baixa com consistencia Cheque
select  coalesce(max(a.cd_tipo_baixa),0)
into STRICT 	cd_tipo_baixa_w
from 	tipo_baixa_cpa a
where	ie_tipo_consistencia = 2;

if ( coalesce(cd_tipo_baixa_w,0) = 0) then
	--R.aise_application_error(-20011,'Tipo de baixa de cheque não cadastrada! Verifique o cadastro de tipos de baixa.');
	CALL wheb_mensagem_pck.exibir_mensagem_abort(242913);
end if;

-- buscar transação de baixa, primeiro do título, se não encontrar busca do tipo de baixa.
select	coalesce(max(nr_seq_trans_fin_baixa),0)
into STRICT	nr_seq_trans_financ_w
from	titulo_pagar
where	nr_titulo	= nr_titulo_p;

if (nr_seq_trans_financ_w = 0) then
	select	nr_seq_trans_fin
	into STRICT	nr_seq_trans_financ_w
	from	tipo_baixa_cpa
	where	cd_tipo_baixa = cd_tipo_baixa_w;

end if;

if (coalesce(nr_seq_trans_financ_w::text, '') = '') then
	--R.aise_application_error(-20011,'Não encontrada tf de baixa');
	CALL wheb_mensagem_pck.exibir_mensagem_abort(242914);
end if;


if (ie_conta_contabil_baixa_w = 'S') then

	select	coalesce(max(cd_conta_contabil),'')
	into STRICT	cd_conta_contabil_w
	from	titulo_pagar_classif
	where	nr_titulo	= nr_titulo_p;

end if;

if (cd_moeda_titulo_w <> cd_moeda_padrao_w) and (coalesce(vl_baixa_estrang_w,0) = 0 and coalesce(vl_cotacao_w,0) = 0) then
	vl_cotacao_moeda_w	:= obter_conversao_moeda(1,cd_moeda_titulo_w,clock_timestamp(),'EN');
end if;

/* Projeto Multimoeda - Verifica se a baixa é em moeda estrangeira, caso positivo calcula o valor em moeda estrangeira.*/

if ((cd_moeda_estrang_p IS NOT NULL AND cd_moeda_estrang_p::text <> '') and coalesce(vl_cotacao_p,0) <> 0) then
	vl_cotacao_w		:= vl_cotacao_p;
	cd_moeda_estrang_w	:= cd_moeda_estrang_p;
	vl_baixa_estrang_w	:= vl_baixa_w / vl_cotacao_w;
	vl_complemento_w	:= vl_baixa_w - vl_baixa_estrang_w;
else
	vl_baixa_estrang_w	:= null;
	vl_complemento_w	:= null;
	vl_cotacao_w		:= null;
	cd_moeda_estrang_w	:= null;
end if;

/* Projeto Multimoeda - Busca os dados do título para verificar a existência de variação cambial para títulos em moeda estrangeira quando a baixa for realizada na mesma moeda do título.
	Caso seja a mesma moeda e exista cotação no título e na baixa, calcula a variação entre a emissão do título e a baixa a ser realizada para gravar a variação passiva caso o
	valor seja negativo ou a variação passiva caso seja positivo. */
select	max(cd_moeda),
	max(vl_cotacao)
into STRICT	cd_moeda_tit_w,
	vl_cotacao_tit_w
from 	titulo_pagar
where	nr_titulo = nr_titulo_p;
if (coalesce(cd_moeda_tit_w,0) <> 0 and coalesce(vl_cotacao_tit_w,0) <> 0
	and coalesce(cd_moeda_estrang_w,0) <> 0 and coalesce(vl_cotacao_w,0) <> 0) then
	if (cd_moeda_tit_w = cd_moeda_estrang_w) then
		vl_var_cambial_w := (coalesce(vl_baixa_estrang_w,0) * vl_cotacao_tit_w) - (coalesce(vl_baixa_estrang_w,0) * vl_cotacao_w);
		ie_var_cambial_w := 'S';
		if (vl_var_cambial_w < 0) then
			vl_cambial_passivo_w := vl_var_cambial_w * -1;
			vl_cambial_ativo_w := 0;
		else
			vl_cambial_passivo_w := 0;
			vl_cambial_ativo_w := vl_var_cambial_w;
		end if;
	end if;
end if;

select	coalesce(max(nr_sequencia),0) + 1
into STRICT	nr_seq_baixa_w
from	titulo_pagar_baixa
where	nr_titulo	= nr_titulo_p;

insert	into titulo_pagar_baixa(nr_titulo,
	nr_sequencia,
	dt_baixa,
	cd_moeda,
	dt_atualizacao,
	nm_usuario,
	cd_tipo_baixa,
	ie_acao,
	vl_baixa,
	vl_descontos,
	vl_outras_deducoes,
	vl_juros,
	vl_multa,
	vl_outros_acrescimos,
	vl_pago,
	cd_banco,
	nr_lote_contabil,
	vl_devolucao,
	nr_seq_devolucao,
	nr_bordero,
	nr_seq_trans_fin,
	vl_ir,
	nr_seq_conta_banco,
	nr_seq_escrit,
	cd_centro_custo,
	cd_conta_contabil,
	vl_cotacao_moeda,
	vl_outras_despesas,
	nr_seq_cheque_cp,
	vl_baixa_estrang,
	vl_complemento,
	vl_cotacao,
	vl_cambial_passivo,
	vl_cambial_ativo)
values (nr_titulo_p,
	nr_seq_baixa_w,
	clock_timestamp(),
	coalesce(cd_moeda_estrang_w,cd_moeda_padrao_w),
	clock_timestamp(),
	nm_usuario_p,
	cd_tipo_baixa_w,
	'I',
	vl_baixa_w,
	0,
	0,
	vl_saldo_juros_w,
	vl_saldo_multa_w,
	0,
	vl_baixa_w + vl_saldo_juros_w + vl_saldo_multa_w,
	null,
	0,
	0,
	null,
	null,
	nr_seq_trans_financ_w,
	null,
	coalesce(cd_conta_p,null),
	null,
	null,
	cd_conta_contabil_w,
	vl_cotacao_moeda_w,
	0,
	nr_seq_cheque_w,
	vl_baixa_estrang_w,
	vl_complemento_w,
	vl_cotacao_w,
	vl_cambial_passivo_w,
	vl_cambial_ativo_w);

CALL GERAR_TITULO_PAGAR_BAIXA_CC(	nr_titulo_p,
				nr_seq_baixa_w,
				'N',
				nm_usuario_p);

update	w_titulo_pagar_imposto
set	nr_seq_baixa = nr_seq_baixa_w
where	nr_titulo = nr_titulo_p;

open c01;
loop
fetch c01 into
	nr_seq_imposto_w,
	vl_imposto_w,
	ie_gerar_titulo_pagar_w;
EXIT WHEN NOT FOUND; /* apply on c01 */

	select	nextval('titulo_pagar_imposto_seq')
	into STRICT	nr_seq_tit_pagar_imposto_w
	;

	insert into titulo_pagar_imposto(nr_sequencia,
		nr_titulo,
		cd_tributo,
		ie_pago_prev,
		dt_atualizacao,
		nm_usuario,
		dt_imposto,
		vl_base_calculo,
		vl_imposto,
		ds_emp_retencao,
		pr_imposto,
		cd_beneficiario,
		cd_conta_financ,
		nr_seq_trans_reg,
		nr_seq_trans_baixa,
		vl_nao_retido,
		ie_vencimento,
		VL_BASE_NAO_RETIDO,
		VL_TRIB_ADIC,
		VL_BASE_ADIC,
		vl_reducao,
		vl_desc_base,
		cd_darf,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		cd_variacao,
		ie_periodicidade,
		nr_seq_baixa)
	SELECT	nr_seq_tit_pagar_imposto_w,
		nr_titulo,
		cd_tributo,
		'V',
		clock_timestamp(),
		nm_usuario_p,
		dt_imposto,
		vl_base_calculo,
		vl_imposto,
		null,
		pr_imposto,
		cd_beneficiario,
		cd_conta_financ,
		nr_seq_trans_reg,
		nr_seq_trans_baixa,
		vl_nao_retido,
		ie_vencimento,
		VL_BASE_NAO_RETIDO,
		VL_TRIB_ADIC,
		VL_BASE_ADIC,
		vl_reducao,
		vl_desc_base,
		cd_darf,
		clock_timestamp(),
		nm_usuario_p,
		cd_variacao,
		ie_periodicidade,
		nr_seq_baixa
	from	w_titulo_pagar_imposto
	where	nr_sequencia		= nr_seq_imposto_w;


	update	titulo_pagar_baixa
	set	vl_baixa	= vl_baixa - vl_imposto_w,
		vl_pago		= vl_pago - vl_imposto_w,
		vl_imposto	= coalesce(vl_imposto,0) + vl_imposto_w
	where	nr_titulo		= nr_titulo_p
	and	nr_sequencia	= nr_seq_baixa_w;

	/* Projeto Multimoeda - Se a baixa for em moeda estrangeira, atualiza o valor em moeda estrangeira deduzindo o imposto.*/

	if (coalesce(vl_baixa_estrang_w,0) <> 0 and coalesce(vl_cotacao_w,0) <> 0) then
		update	titulo_pagar_baixa
		set	vl_baixa_estrang = vl_baixa_estrang - (vl_imposto_w / vl_cotacao),
			vl_complemento	= vl_baixa - (vl_baixa_estrang - (vl_imposto_w / vl_cotacao))
		where nr_titulo = nr_titulo_p
		  and nr_sequencia = nr_seq_baixa_w;
		/* Projeto Multimoeda - Recalcula a variação cambial da baixa do título. */

		if (coalesce(ie_var_cambial_w,'N') = 'S' and coalesce(vl_cotacao_tit_w,0) <> 0) then
			select	max(vl_baixa_estrang)
			into STRICT	vl_baixa_tit_estrang_w
			from	titulo_pagar_baixa
			where	nr_titulo = nr_titulo_p
			and	nr_sequencia = nr_seq_baixa_w;

			vl_var_cambial_w := (coalesce(vl_baixa_tit_estrang_w,0) * vl_cotacao_tit_w) - (coalesce(vl_baixa_tit_estrang_w,0) * vl_cotacao_w);
			if (vl_var_cambial_w < 0) then
				vl_cambial_passivo_w := vl_var_cambial_w * -1;
				vl_cambial_ativo_w := 0;
			else
				vl_cambial_passivo_w := 0;
				vl_cambial_ativo_w := vl_var_cambial_w;
			end if;

			update	titulo_pagar_baixa
			set	vl_cambial_passivo = vl_cambial_passivo_w,
				vl_cambial_ativo = vl_cambial_ativo_w
			where	nr_titulo = nr_titulo_p
			and	nr_sequencia = nr_seq_baixa_w;
		end if;
	end if;

	if (ie_gerar_titulo_pagar_w = 'S') then
		CALL Gerar_titulo_tributo(nr_seq_tit_pagar_imposto_w, nm_usuario_p);
	end if;

end loop;
close c01;

--vincular o cheque no título
CALL VINCULAR_CHEQUE_TITULO_PAGAR(nr_seq_cheque_w,to_char(nr_cheque_p),cd_banco_p,cd_agencia_p,nr_titulo_p,'N',nm_usuario_p,null,'S','V');

CALL Atualizar_Saldo_Tit_Pagar(nr_titulo_p, nm_usuario_p);

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_cheque_titulo ( cd_banco_p bigint, cd_agencia_p text, cd_conta_p bigint, nr_titulo_p bigint, ie_deduzir_tributo_p text, nr_cheque_p bigint, ds_beneficiario_p text, dt_emissao_p timestamp, ie_juros_multa_p text, nm_usuario_p text, nr_seq_trans_fin_emissao_p integer, cd_moeda_estrang_p bigint default null, vl_cotacao_p bigint default null) FROM PUBLIC;

