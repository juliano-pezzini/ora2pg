-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_tiss_consistir_prestador ( nr_sequencia_p bigint, ie_tipo_glosa_p text, ie_evento_p text, nr_seq_prestador_p bigint, nr_seq_ocorrencia_p bigint, ds_parametro_um_p text, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Realiza a consistencia  do prestador.
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[  x]  Objetos do dicionario [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao:Performance.
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
dt_exclusao_w			timestamp;
dt_emissao_w			timestamp;
ie_exclusao_w			varchar(1) := 'N';
dt_cadastro_w			timestamp;
cd_cpf_prestador_exec_w		varchar(20);
cd_pj_prestador_exec_w		varchar(20);
cd_cpf_prestador_atend_w	varchar(20);
cd_pj_prestador_atend_w		varchar(20);
nr_seq_protocolo_w		bigint;
ie_consistencia_w		varchar(1) := 'S';
ie_area_coberta_w		varchar(1) := 'S';
nr_seq_plano_w			bigint;
nr_seq_uni_exec_w		bigint;
vl_cobrado_w			double precision;
vl_cobrado_conta_w		double precision;
dt_solicitacao_w		timestamp;
nr_seq_prestador_protocolo_w	bigint;
ie_prestador_exluido_w		varchar(1) := 'N';
ds_obs_w			varchar(4000);
dt_exclusao_prest_protocolo_w	timestamp;
ie_exgie_especialidade_w	varchar(1) := 'N';
ds_observacao_med_w		varchar(255);
vl_conta_mat_w			double precision;
vl_conta_proc_w			double precision;
ie_tipo_processo_w		varchar(2);
qt_registro_w			bigint;
nr_seq_segurado_w		bigint;
cd_cgc_w			varchar(20);
ie_operadora_exec_w		varchar(2)	:= 'N';
nr_seq_operadora_w		bigint;
nr_seq_congenere_w		bigint;
ie_tipo_guia_w			bigint;
nr_seq_cooperativa_w		bigint;
ie_tipo_operacao_w		varchar(4);
qt_carater_valido_w		bigint;
qt_repasse_w			bigint;
qt_regra_repasse_w		bigint;
nr_seq_contrato_w		pls_contrato.nr_sequencia%type;
nr_seq_congenere_seg_w		bigint;	
cd_guia_referencia_w		varchar(20);
ie_Carater_internacao_w		varchar(2);
ie_prestador_ativo_w		varchar(1);
ie_tipo_segurado_w		varchar(1);
dt_cadastro_prest_protocolo_w	timestamp;
ie_tipo_intercambio_w		varchar(2);
ie_carater_atendimento_w	pls_requisicao.ie_carater_atendimento%type;
qt_extensao_area_w		smallint;
dt_atual_w			timestamp;
vl_cobrado_manual_w		pls_protocolo_conta.vl_cobrado_manual%type;
dt_atendimento_referencia_w	pls_conta.dt_atendimento_referencia%type;
ie_consiste_abrang_urg_w	pls_param_intercambio_scs.ie_consiste_abrang_urg%type;
ie_origem_conta_w		pls_conta.ie_origem_conta%type;
cd_municipio_exec_w		ptu_pedido_autorizacao.cd_municipio_ibge%type;
ds_uf_exec_w			sus_municipio.ds_unidade_federacao%type;
cd_cgc_exec_w			pessoa_juridica.cd_cgc%type;
qt_extensao_area_contr_w	bigint;
qt_extensao_area_seg_w		bigint;


BEGIN

/* Obter dados do prestador */

begin
	select	coalesce(dt_exclusao,null),
		coalesce(dt_cadastro,clock_timestamp())
	into STRICT	dt_exclusao_w,
		dt_cadastro_w
	from	pls_prestador
	where	nr_sequencia = nr_seq_prestador_p;
exception
when others then
	dt_exclusao_w	:= null;
	dt_cadastro_w	:= clock_timestamp();

end;

begin
	select	coalesce(max(ie_consiste_abrang_urg),'N')
	into STRICT	ie_consiste_abrang_urg_w
	from	pls_param_intercambio_scs;
exception
when others then
	ie_consiste_abrang_urg_w	:= 'N';
end;

/*SE FOR IMPORTACAO - askono */

if (ie_evento_p = 'IA') then
	select	max(cd_cpf_executor_imp),
		max(cd_cgc_executor_imp),
		max(cd_cgc_prestador_imp),
		max(cd_cpf_prestador_imp)
	into STRICT	cd_cpf_prestador_exec_w,
		cd_pj_prestador_exec_w,
		cd_pj_prestador_atend_w,
		cd_cpf_prestador_atend_w
	from	pls_conta
	where	nr_sequencia = nr_sequencia_p;

end if;

if (ie_tipo_glosa_p	= 'C') then
	ie_area_coberta_w	:= 'N';
	/* Obter dados da conta */

	begin
	select	coalesce(dt_atendimento,coalesce(dt_atendimento_referencia,dt_emissao_imp)),
		dt_atendimento_referencia,
		nr_seq_protocolo,
		nr_seq_plano,
		coalesce(vl_cobrado,vl_total_imp),
		nr_seq_segurado,
		ie_tipo_guia,
		coalesce(cd_guia_referencia,cd_guia),
		ie_carater_internacao,
		ie_origem_conta
	into STRICT	dt_emissao_w,
		dt_atendimento_referencia_w,
		nr_seq_protocolo_w,
		nr_seq_plano_w,
		vl_cobrado_w,
		nr_seq_segurado_w,
		ie_tipo_guia_w,
		cd_guia_referencia_w,
		ie_carater_internacao_w,
		ie_origem_conta_w
	from	pls_conta
	where	nr_sequencia	= nr_sequencia_p;
	exception
	when others then
		dt_emissao_w	:= null;
		nr_seq_segurado_w	:= 0;
	end;
	if (coalesce(ie_tipo_guia_w,0) = 6)	then
		if (coalesce(ie_carater_internacao_w,'X') <> 'U')	then
			
			select	count(1)
			into STRICT	qt_carater_valido_w
			from	pls_conta
			where	((cd_guia 		= cd_guia_referencia_w)
			or (cd_guia_referencia 	= cd_guia_referencia_w))
			and	ie_carater_internacao_w = 'U';
		end if;

		if (qt_carater_valido_w > 0)	then
			ie_carater_internacao_w	:= 'U';
		end if;
	end if;
	
	select 	max(nr_seq_contrato)
	into STRICT	nr_seq_contrato_w
	from 	pls_segurado
	where 	nr_sequencia = nr_seq_segurado_w;

	/*Tratamento realizado pois se for a primeira consistencia ainda nao vai ter registro do plano do segurado na tabela PLS_CONTA*/

	nr_seq_plano_w := pls_obter_produto_benef(nr_seq_segurado_w, dt_atendimento_referencia_w);
	
	if (coalesce(nr_seq_plano_w::text, '') = '') then
		nr_seq_plano_w	:= pls_obter_dados_segurado(nr_seq_segurado_w,'NRP');
	end if;
	
	/* obter dados do protocolo */

	begin
		select	coalesce(nr_seq_prestador,nr_seq_prestador_imp),
			nr_seq_congenere
		into STRICT	nr_seq_prestador_protocolo_w,
			nr_seq_congenere_w
		from	pls_protocolo_conta
		where	nr_sequencia	= nr_seq_protocolo_w;
	exception
	when others then
		nr_seq_prestador_protocolo_w	:= null;
		nr_seq_congenere_w		:= null;
	end;

	/* Obter dados so prestador do protocolo */

	select	max(dt_exclusao),
		max(dt_cadastro)
	into STRICT	dt_exclusao_prest_protocolo_w,
		dt_cadastro_prest_protocolo_w
	from	pls_prestador
	where	nr_sequencia = nr_seq_prestador_protocolo_w;

	select	count(1)
	into STRICT	qt_registro_w
	from	pls_conta_proc
	where	nr_seq_conta	= nr_sequencia_p
	and	coalesce(dt_procedimento, dt_emissao_w) >= dt_exclusao_w;

	if (qt_registro_w > 0) then
		ie_prestador_exluido_w	:= 'S';
		ds_obs_w		:= wheb_mensagem_pck.get_texto(1113903, 'DT_EXCLUSAO=' || dt_exclusao_w);
	else
		select	count(1)
		into STRICT	qt_registro_w
		from	pls_conta_proc
		where	nr_seq_conta	= nr_sequencia_p
		and	coalesce(dt_procedimento, dt_emissao_w) < dt_cadastro_w;

		if (qt_registro_w > 0) then
			ie_prestador_exluido_w	:= 'S';
			ds_obs_w		:= wheb_mensagem_pck.get_texto(1113904, 'DT_INCLUSAO=' || dt_cadastro_w);
		end if;
	end if;

	/* Felipe - 14/11/2011 - OS 350128 */

	if (ie_prestador_exluido_w  = 'N') then
		select	count(1)
		into STRICT	qt_registro_w
		from	pls_conta_mat
		where	nr_seq_conta	= nr_sequencia_p
		and	coalesce(dt_atendimento, dt_emissao_w) >= dt_exclusao_w;

		if (qt_registro_w > 0) then
			ie_prestador_exluido_w	:= 'S';
			ds_obs_w		:= wheb_mensagem_pck.get_texto(1113903, 'DT_EXCLUSAO=' || dt_exclusao_w);
		else
			select	count(1)
			into STRICT	qt_registro_w
			from	pls_conta_mat
			where	nr_seq_conta	= nr_sequencia_p
			and	coalesce(dt_atendimento, dt_emissao_w) < dt_cadastro_w;
			if (qt_registro_w > 0) then
				ie_prestador_exluido_w	:= 'S';
				ds_obs_w		:= wheb_mensagem_pck.get_texto(1113904, 'DT_INCLUSAO=' || dt_cadastro_w);
			end if;
		end if;

	end if;

	
	-- Vai somar o valor cobrado de todos os itens de TODAS as contas do protocolo
	select	coalesce(sum(t.vl_procedimento),0),
		coalesce(sum(t.vl_material),0)
	into STRICT	vl_conta_proc_w,
		vl_conta_mat_w
	from (	SELECT	b.vl_procedimento_imp	vl_procedimento,
			null			vl_material
		from	pls_conta		a,
			pls_conta_proc		b,
			pls_protocolo_conta	c
		where	b.nr_seq_conta		= a.nr_sequencia
		and	c.nr_sequencia		= a.nr_seq_protocolo
		and	b.ie_status		!= 'D' -- exceto os cancelados
		and	c.nr_sequencia		= nr_seq_protocolo_w
		
union all

		SELECT	null			vl_procedimento,
			b.vl_material_imp	vl_material
		from	pls_conta		a,
			pls_conta_mat		b,
			pls_protocolo_conta	c
		where	b.nr_seq_conta		= a.nr_sequencia
		and	c.nr_sequencia		= a.nr_seq_protocolo
		and	b.ie_status		!= 'D' -- exceto os cancelados
		and	c.nr_sequencia		= nr_seq_protocolo_w) t;
			
	vl_cobrado_conta_w := vl_conta_mat_w + vl_conta_proc_w;
	
	-- agora deve ser somado o valor cobrado de TODAS as contas do protocolo
	select	coalesce(sum(coalesce(b.vl_cobrado, b.vl_total_imp)),0)
	into STRICT	vl_cobrado_w
	from	pls_protocolo_conta a,
		pls_conta b
	where	a.nr_sequencia = b.nr_seq_protocolo
	and	a.nr_sequencia = nr_seq_protocolo_w;
	
	SELECT * FROM pls_obter_se_espec_medico(nr_sequencia_p, ie_exgie_especialidade_w, ds_observacao_med_w) INTO STRICT ie_exgie_especialidade_w, ds_observacao_med_w;
	
	
	/*Realizar a consistencia da abrangencia geografica*/

	if (ie_area_coberta_w	= 'N')	then
		ie_area_coberta_w	:= pls_obter_se_abrangencia(	nr_sequencia_p, nr_seq_segurado_w,nr_seq_plano_w,
									nr_seq_prestador_p, nr_seq_congenere_w,dt_emissao_w,
									nm_usuario_p);
	end if;

	/*Consistir area do prestador*/

	ie_consistencia_w := pls_consistir_area_prestador(null, nr_sequencia_p, null, ie_consistencia_w);
	
	--Verificar se possui area de extensao de atendimento
	if	(( ie_consistencia_w	= 'N') or (ie_area_coberta_w 	= 'N')) and (ie_origem_conta_w =  'A') then --verifica se intercambio e externo
		dt_atual_w := trunc(clock_timestamp());
		
		select  count(1)
		into STRICT 	qt_extensao_area_w
		from 	pls_extensao_area
		where 	nr_seq_segurado = nr_seq_segurado_w
		and 	nr_seq_congenere = nr_seq_congenere_w
		and 	dt_atual_w between coalesce(trunc(dt_inicio_vigencia), dt_atual_w) and coalesce(dt_fim_vigencia,dt_atual_w);
		
		if (qt_extensao_area_w = 0) then
			select  count(1)
			into STRICT 	qt_extensao_area_w
			from 	pls_extensao_area
			where 	((nr_seq_contrato		= nr_seq_contrato_w) or (nr_seq_plano		= nr_seq_plano_w))	
			and 	nr_seq_congenere 	= nr_seq_congenere_w
			and 	dt_atual_w between coalesce(trunc(dt_inicio_vigencia), dt_atual_w) and coalesce(trunc(dt_fim_vigencia),dt_atual_w);		
		end if;
		
		if (qt_extensao_area_w > 0) then
			ie_consistencia_w	:= 'S';
			ie_area_coberta_w 	:= 'S';
		end if;
	end if;

elsif (ie_tipo_glosa_p	= 'A') then
	/*Obter dados da guia*/

	begin
	select	nr_seq_uni_exec,
		nr_seq_plano,
		dt_solicitacao,
		ie_tipo_processo,
		nr_seq_segurado,
		ie_tipo_intercambio,
		ie_carater_internacao,
		pls_obter_dados_segurado(nr_seq_segurado, 'NC')
	into STRICT	nr_seq_uni_exec_w,
		nr_seq_plano_w,
		dt_solicitacao_w,
		ie_tipo_processo_w,
		nr_seq_segurado_w,
		ie_tipo_intercambio_w,
		ie_carater_atendimento_w,
		nr_seq_contrato_w
	from	pls_guia_plano
	where	nr_sequencia = nr_sequencia_p;	
	exception
	when others then
		nr_seq_uni_exec_w := null;
	end;
	
	
	begin
		select	cd_cgc
		into STRICT	cd_cgc_exec_w
		from	pls_congenere
		where	nr_sequencia = nr_seq_uni_exec_w;
	exception
	when others then
		cd_cgc_exec_w	:= null;
	end;
	
	if (cd_cgc_exec_w IS NOT NULL AND cd_cgc_exec_w::text <> '') then
		begin
			select	cd_municipio_ibge
			into STRICT	cd_municipio_exec_w
			from	pessoa_juridica
			where	cd_cgc = cd_cgc_exec_w;
			
			select	ds_unidade_federacao
			into STRICT	ds_uf_exec_w
			from	sus_municipio
			where	cd_municipio_ibge = substr(cd_municipio_exec_w,1,6);
		exception
		when others then
			cd_municipio_exec_w	:= null;
			ds_uf_exec_w		:= null;
		end;
	end if;
	
	if (dt_solicitacao_w >= dt_exclusao_w) then
		ie_prestador_exluido_w	:= 'S';
		ds_obs_w		:= wheb_mensagem_pck.get_texto(1113907, 'DT_EXCLUSAO=' || dt_exclusao_w);
	end if;

	begin
		select	nr_seq_congenere
		into STRICT	nr_seq_congenere_w
		from	pls_segurado
		where	nr_sequencia	= nr_seq_segurado_w;
	exception
	when others then
		nr_seq_congenere_w	:= 0;
	end;

	begin
		select	cd_cgc_outorgante
		into STRICT	cd_cgc_w
		from	pls_outorgante
		where	cd_estabelecimento	= cd_estabelecimento_p;
	exception
	when others then
		cd_cgc_w	:= 'X';
	end;

	/*aaschlote 15/08/2013 - OS 632380*/

	if (cd_cgc_w = 'X') then
		select	max(cd_cgc_outorgante)
		into STRICT	cd_cgc_w
		from	pls_outorgante;
	end if;

	if (cd_cgc_w	<> 'X') then
		begin
			select	max(nr_sequencia)
			into STRICT	nr_seq_operadora_w
			from	pls_congenere
			where	cd_cgc	= cd_cgc_w
			and	ie_tipo_congenere	= 'CO';
		exception
		when others then
			nr_seq_operadora_w	:= 0;
		end;
	end if;

	-- Caso a guia seja de urgencia, nao sera verificada a abrangencia do beneficiario
		if (ie_tipo_processo_w	= 'I') then
			if	((coalesce(ie_carater_atendimento_w,'X')	<> 'U') or (ie_consiste_abrang_urg_w = 'S')) then
				if (coalesce(nr_seq_uni_exec_w,0) <> 0) and (coalesce(nr_seq_uni_exec_w,0) <> coalesce(nr_seq_operadora_w,0)) then
					ie_operadora_exec_w	:= 'S';
					nr_seq_cooperativa_w	:= nr_seq_uni_exec_w;
				elsif (coalesce(nr_seq_congenere_w,0)	<> 0) and (coalesce(nr_seq_congenere_w,0) <> coalesce(nr_seq_operadora_w,0))  then
					ie_operadora_exec_w	:= 'S';
					nr_seq_cooperativa_w	:= nr_seq_congenere_w;
				end if;
			else
				-- Passado 'X' para variavel IE_OPERADORA_EXEC_W para nao entrar nos 'IF' abaixo
				ie_operadora_exec_w	:= 'X';
			end if;	
			
					
		elsif (ie_tipo_processo_w	<> 'I') and (coalesce(nr_seq_uni_exec_w,0)	<> 0) then
			ie_operadora_exec_w	:= 'S';
			nr_seq_cooperativa_w	:= nr_seq_uni_exec_w;
		end if;
	
	ie_consistencia_w := pls_consistir_area_prestador(nr_sequencia_p, null, null, ie_consistencia_w);

	if (ie_operadora_exec_w	= 'N') then
		select	count(1)
		into STRICT	qt_repasse_w
		from	pls_segurado_repasse
		where	nr_seq_segurado	= nr_seq_segurado_w
		and	clock_timestamp()	between dt_repasse and fim_dia(dt_fim_repasse)
		and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
		and (coalesce(ie_tipo_compartilhamento::text, '') = '' or ie_tipo_compartilhamento = 1);

		select	count(1)
		into STRICT	qt_regra_repasse_w
		from	pls_regra_intercambio_aut;

		if (qt_repasse_w	> 0) and (qt_regra_repasse_w	> 0) then
			ie_operadora_exec_w	:= 'S';
			-- Se o beneficiario e repassado so o que deve valer e a abrangencia do repasse e nao mais a extensao do atendimento: Djavan e Leonardo 23/09/2014
			ie_consistencia_w	:= 'S';
			-- Fim
			ie_area_coberta_w := pls_consist_abrang_benef_repas(nr_seq_segurado_w, coalesce(nr_seq_cooperativa_w, nr_seq_operadora_w), nm_usuario_p, ie_area_coberta_w);
		else
			ie_area_coberta_w := pls_consistir_area_atuacao(nr_seq_plano_w, null, nr_seq_prestador_p, nr_seq_cooperativa_w, ie_area_coberta_w, nr_seq_segurado_w, ds_uf_exec_w, cd_estabelecimento_p);
		end if;
	elsif (ie_operadora_exec_w	= 'S') then
		select	ie_tipo_operacao
		into STRICT	ie_tipo_operacao_w
		from	pls_plano
		where	nr_sequencia	= nr_seq_plano_w;

		if (ie_tipo_operacao_w in ('T', 'C'))   then
			ie_area_coberta_w := pls_consistir_area_atuacao(nr_seq_plano_w, nr_seq_operadora_w, null, nr_seq_cooperativa_w, ie_area_coberta_w, nr_seq_segurado_w, ds_uf_exec_w, cd_estabelecimento_p);
		else
			select	count(1)
			into STRICT	qt_repasse_w
			from	pls_segurado_repasse
			where	nr_seq_segurado	= nr_seq_segurado_w
			and	clock_timestamp()	between dt_repasse and fim_dia(dt_fim_repasse)
			and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
			and (coalesce(ie_tipo_compartilhamento::text, '') = '' or ie_tipo_compartilhamento = 1);

			select	count(1)
			into STRICT	qt_regra_repasse_w
			from	pls_regra_intercambio_aut;

			if (qt_repasse_w	> 0) and (qt_regra_repasse_w	> 0) then
				-- Se o beneficiario e repassado so o que deve valer e a abrangencia do repasse e nao mais a extensao do atendimento: Djavan e Leonardo 23/09/2014
				ie_consistencia_w	:= 'S';
				-- Fim
				ie_area_coberta_w := pls_consist_abrang_benef_repas(nr_seq_segurado_w, coalesce(nr_seq_cooperativa_w, nr_seq_operadora_w), nm_usuario_p, ie_area_coberta_w);
			else
				ie_area_coberta_w := pls_consistir_area_atuacao(nr_seq_plano_w, null, null, nr_seq_cooperativa_w, ie_area_coberta_w, nr_seq_segurado_w, ds_uf_exec_w, cd_estabelecimento_p);
			end if;
		end if;
	end if;
	
	
	if (ie_tipo_processo_w	= 'I') and
		((coalesce(ie_carater_atendimento_w,'X')	<> 'U') or (ie_consiste_abrang_urg_w = 'S')) then
	--Verificar se possui area de extensao de atendimento
		if	((ie_consistencia_w	= 'N') or (ie_area_coberta_w 	= 'N')) and (ie_tipo_processo_w 	=  'I') and --verifica se e intercambio
			(ie_tipo_intercambio_w 	= 'E')then --verifica se intercambio e externo
			
			dt_atual_w := trunc(clock_timestamp());
			
			select  count(1)
			into STRICT 	qt_extensao_area_w
			from 	pls_extensao_area
			where 	nr_seq_segurado 	= nr_seq_segurado_w
			and 	nr_seq_congenere 	= nr_seq_uni_exec_w
			and 	dt_atual_w between coalesce(trunc(dt_inicio_vigencia), dt_atual_w) and coalesce(trunc(dt_fim_vigencia),dt_atual_w);

			if (qt_extensao_area_w = 0)then
				select  count(1)
				into STRICT 	qt_extensao_area_w
				from 	pls_extensao_area
				where 	((nr_seq_contrato		= nr_seq_contrato_w) or (nr_seq_plano		= nr_seq_plano_w))
				and 	nr_seq_congenere 	= nr_seq_uni_exec_w
				and 	dt_atual_w between coalesce(trunc(dt_inicio_vigencia), dt_atual_w) and coalesce(trunc(dt_fim_vigencia),dt_atual_w);
			end if;
			
			if (qt_extensao_area_w > 0)then
				ie_consistencia_w	:= 'S';
				ie_area_coberta_w 	:= 'S';
			end if;
		end if;
	end if;	
elsif (ie_tipo_glosa_p	= 'R') then
	/*Obter dados da requisicao*/

	begin
		select	nr_seq_uni_exec,
			nr_seq_plano,
			dt_requisicao,
			ie_tipo_processo,
			nr_seq_segurado,
			ie_tipo_intercambio,
			ie_carater_atendimento,
			pls_obter_dados_segurado(nr_seq_segurado, 'NC')
		into STRICT	nr_seq_uni_exec_w,
			nr_seq_plano_w,
			dt_solicitacao_w,
			ie_tipo_processo_w,
			nr_seq_segurado_w,
			ie_tipo_intercambio_w,
			ie_carater_atendimento_w,
			nr_seq_contrato_w
		from	pls_requisicao
		where	nr_sequencia = nr_sequencia_p;	
	exception
	when others then
		nr_seq_uni_exec_w := null;
	end;

	begin
		select	cd_cgc
		into STRICT	cd_cgc_exec_w
		from	pls_congenere
		where	nr_sequencia = nr_seq_uni_exec_w;
	exception
	when others then
		cd_cgc_exec_w	:= null;
	end;
	
	if (cd_cgc_exec_w IS NOT NULL AND cd_cgc_exec_w::text <> '') then
		begin
			select	cd_municipio_ibge
			into STRICT	cd_municipio_exec_w
			from	pessoa_juridica
			where	cd_cgc = cd_cgc_exec_w;
			
			select	ds_unidade_federacao
			into STRICT	ds_uf_exec_w
			from	sus_municipio
			where	cd_municipio_ibge = substr(cd_municipio_exec_w,1,6);
		exception
		when others then
			cd_municipio_exec_w	:= null;
			ds_uf_exec_w		:= null;
		end;
	end if;
	
	if (dt_solicitacao_w >= dt_exclusao_w) then
		ie_prestador_exluido_w	:= 'S';
		ds_obs_w		:= wheb_mensagem_pck.get_texto(1113907, 'DT_EXCLUSAO=' || dt_exclusao_w);
	end if;
	
	begin
		select	cd_cgc_outorgante
		into STRICT	cd_cgc_w
		from	pls_outorgante
		where	cd_estabelecimento	= cd_estabelecimento_p;
	exception
	when others then
		cd_cgc_w	:= 'X';
	end;

	/*aaschlote 15/08/2013 - OS 632380*/

	if (cd_cgc_w = 'X') then
		select	max(cd_cgc_outorgante)
		into STRICT	cd_cgc_w
		from	pls_outorgante;
	end if;

	if (cd_cgc_w	<> 'X') then
		begin
			select	nr_sequencia
			into STRICT	nr_seq_operadora_w
			from	pls_congenere
			where	cd_cgc	= cd_cgc_w
			and	ie_tipo_congenere	= 'CO';
		exception
		when others then
			nr_seq_operadora_w	:= 0;
		end;
	end if;

	begin
		select	nr_seq_congenere
		into STRICT	nr_seq_congenere_w
		from	pls_segurado
		where	nr_sequencia	= nr_seq_segurado_w;
	exception
	when others then
		nr_seq_congenere_w	:= 0;
	end;

	if (ie_tipo_processo_w	= 'I') then
		-- Caso a requisicao seja de urgencia, nao sera verificada a abrangencia do beneficiario
		if	((coalesce(ie_carater_atendimento_w,'X')	<> 'U') or (ie_consiste_abrang_urg_w = 'S')) then
			if (coalesce(nr_seq_uni_exec_w,0)	<> 0) and (coalesce(nr_seq_uni_exec_w,0)	<> coalesce(nr_seq_operadora_w,0)) then
				ie_operadora_exec_w	:= 'S';
				nr_seq_cooperativa_w	:= nr_seq_uni_exec_w;
			elsif (coalesce(nr_seq_congenere_w,0)	<> 0) and (coalesce(nr_seq_congenere_w,0) <> coalesce(nr_seq_operadora_w,0))  then
				ie_operadora_exec_w	:= 'S';
				nr_seq_cooperativa_w	:= nr_seq_congenere_w;
			end if;
		else
			-- Passado 'X' para variavel IE_OPERADORA_EXEC_W para nao entrar nos 'IF' abaixo
			ie_operadora_exec_w	:= 'X';
		end if;
	elsif (ie_tipo_processo_w	<> 'I') and (coalesce(nr_seq_uni_exec_w,0)	<> 0) then
			ie_operadora_exec_w	:= 'N';
			nr_seq_cooperativa_w	:= nr_seq_uni_exec_w;
	end if;

	if	((coalesce(ie_carater_atendimento_w,'X')	<> 'U') or (ie_consiste_abrang_urg_w = 'S')) then
		ie_consistencia_w := pls_consistir_area_prestador(null, null, nr_sequencia_p, ie_consistencia_w);
		
		if (ie_operadora_exec_w	= 'N') then
			select	count(1)
			into STRICT	qt_repasse_w
			from	pls_segurado_repasse
			where	nr_seq_segurado	= nr_seq_segurado_w
			and	clock_timestamp()	between dt_repasse and fim_dia(dt_fim_repasse)
			and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
			and (coalesce(ie_tipo_compartilhamento::text, '') = '' or ie_tipo_compartilhamento = 1);

			select	count(1)
			into STRICT	qt_regra_repasse_w
			from	pls_regra_intercambio_aut
			where	ie_atend_operadora_repasse	= 'S';

			if (qt_repasse_w	> 0) and (qt_regra_repasse_w	> 0) then
				ie_operadora_exec_w	:= 'S';
				-- Se o beneficiario e repassado so o que deve valer e a abrangencia do repasse e nao mais a extensao do atendimento: Djavan e Leonardo 23/09/2014
				ie_consistencia_w	:= 'S';
				-- Fim
				ie_area_coberta_w := pls_consist_abrang_benef_repas(nr_seq_segurado_w, coalesce(nr_seq_cooperativa_w, nr_seq_operadora_w), nm_usuario_p, ie_area_coberta_w);
			else
				ie_area_coberta_w := pls_consistir_area_atuacao(nr_seq_plano_w, null, nr_seq_prestador_p, nr_seq_cooperativa_w, ie_area_coberta_w, nr_seq_segurado_w, ds_uf_exec_w, cd_estabelecimento_p);
			end if;
		elsif (ie_operadora_exec_w	= 'S') then
			select	ie_tipo_operacao
			into STRICT	ie_tipo_operacao_w
			from	pls_plano
			where	nr_sequencia	= nr_seq_plano_w;

			if (ie_tipo_operacao_w in ('T', 'C')) then
				ie_area_coberta_w := pls_consistir_area_atuacao(nr_seq_plano_w, nr_seq_operadora_w, null, nr_seq_cooperativa_w, ie_area_coberta_w, nr_seq_segurado_w, ds_uf_exec_w, cd_estabelecimento_p);
			else
				select	count(1)
				into STRICT	qt_repasse_w
				from	pls_segurado_repasse
				where	nr_seq_segurado	= nr_seq_segurado_w
				and	clock_timestamp()	between dt_repasse and fim_dia(dt_fim_repasse)
				and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
				and (coalesce(ie_tipo_compartilhamento::text, '') = '' or ie_tipo_compartilhamento = 1);

				select	count(1)
				into STRICT	qt_regra_repasse_w
				from	pls_regra_intercambio_aut
				where	ie_atend_operadora_repasse	= 'S';

				if (qt_repasse_w	> 0) and (qt_regra_repasse_w	> 0) then
					-- Se o beneficiario e repassado so o que deve valer e a abrangencia do repasse e nao mais a extensao do atendimento: Djavan e Leonardo 23/09/2014
					ie_consistencia_w	:= 'S';
					-- Fim
					ie_area_coberta_w := pls_consist_abrang_benef_repas(nr_seq_segurado_w, coalesce(nr_seq_cooperativa_w, nr_seq_operadora_w), nm_usuario_p, ie_area_coberta_w);
				else
					ie_area_coberta_w := pls_consistir_area_atuacao(nr_seq_plano_w, null, null, nr_seq_cooperativa_w, ie_area_coberta_w, nr_seq_segurado_w, ds_uf_exec_w, cd_estabelecimento_p);
					
					if (ie_area_coberta_w	= 'N') and (ie_tipo_processo_w = 'I') then
						ie_area_coberta_w	:= pls_obter_se_benef_sca(nr_seq_segurado_w, nr_seq_cooperativa_w);
					end if;
				end if;
			end if;
		end if;
				
		--Verificar se possui area de extensao de atendimento
		if	(( ie_consistencia_w	= 'N') or (ie_area_coberta_w 	= 'N')) and (ie_tipo_processo_w =  'I') and --verifica se e intercambio
			(ie_tipo_intercambio_w = 'E')then --verifica se intercambio e externo
			dt_atual_w := trunc(clock_timestamp());
			
			select  count(1)
			into STRICT 	qt_extensao_area_w
			from 	pls_extensao_area
			where 	nr_seq_segurado = nr_seq_segurado_w
			and 	nr_seq_congenere = nr_seq_uni_exec_w
			and 	dt_atual_w between coalesce(trunc(dt_inicio_vigencia), dt_atual_w) and coalesce(trunc(dt_fim_vigencia),dt_atual_w);
			
			if (qt_extensao_area_w = 0) then
				select  count(1)
				into STRICT 	qt_extensao_area_w
				from 	pls_extensao_area
				where 	((nr_seq_contrato		= nr_seq_contrato_w) or (nr_seq_plano		= nr_seq_plano_w))	
				and 	nr_seq_congenere 	= nr_seq_uni_exec_w
				and 	dt_atual_w between coalesce(trunc(dt_inicio_vigencia), dt_atual_w) and coalesce(trunc(dt_fim_vigencia),dt_atual_w);
			end if;
			
			if (qt_extensao_area_w > 0) then
				ie_consistencia_w	:= 'S';
				ie_area_coberta_w 	:= 'S';
			end if;
		end if;
			
	end if;
end if;

/*  1212 - Atendimento / Referencia fora da vigencia do contrato do prestador */

if (ie_prestador_exluido_w = 'S') then
	CALL pls_gravar_glosa_tiss('1212',
		ds_obs_w, ie_evento_p,
		nr_sequencia_p, ie_tipo_glosa_p, nr_seq_prestador_p,
		nr_seq_ocorrencia_p, '', nm_usuario_p,
		cd_estabelecimento_p, null);
end if;

/* 1201 - Atendimento fora da vigencia do contrato com o credenciado*/

if	(dt_exclusao_w IS NOT NULL AND dt_exclusao_w::text <> '' AND dt_atendimento_referencia_w > dt_exclusao_w) or
	(dt_atendimento_referencia_w IS NOT NULL AND dt_atendimento_referencia_w::text <> '' AND dt_atendimento_referencia_w < dt_cadastro_w) then
	if (dt_exclusao_w IS NOT NULL AND dt_exclusao_w::text <> '' AND dt_atendimento_referencia_w > dt_exclusao_w) then
		CALL pls_gravar_glosa_tiss('1201',
		wheb_mensagem_pck.get_texto(1113908, 'NR_SEQUENCIA=' || nr_sequencia_p || ';' || 'DT_ATENDIMENTO_REFERENCIA=' || dt_atendimento_referencia_w || ';' || 'DT_EXCLUSAO=' || dt_exclusao_w),
		ie_evento_p,nr_sequencia_p, ie_tipo_glosa_p, nr_seq_prestador_p,
		nr_seq_ocorrencia_p, '', nm_usuario_p,
		cd_estabelecimento_p, null);
	else
		CALL pls_gravar_glosa_tiss('1201',
		wheb_mensagem_pck.get_texto(1113909, 'NR_SEQUENCIA=' || nr_sequencia_p || ';' || 'DT_ATENDIMENTO_REFERENCIA=' || dt_atendimento_referencia_w || ';' || 'DT_INCLUSAO=' || dt_cadastro_w),
		ie_evento_p,nr_sequencia_p, ie_tipo_glosa_p, nr_seq_prestador_p,
		nr_seq_ocorrencia_p, '', nm_usuario_p,
		cd_estabelecimento_p, null);
	end if;
end if;

if	(((coalesce(cd_cpf_prestador_exec_w,'X') <> 'X') and (length(cd_cpf_prestador_exec_w) <> 11)) or
	((coalesce(cd_pj_prestador_exec_w,'X') <> 'X') and (length(cd_pj_prestador_exec_w) <> 14)) or
	((coalesce(cd_cpf_prestador_atend_w,'X') <> 'X') and (length(cd_cpf_prestador_atend_w) <> 11)) or
	((coalesce(cd_pj_prestador_atend_w,'X') <> 'X') and (length(cd_pj_prestador_atend_w) <> 14))) then
	CALL pls_gravar_glosa_tiss('1206',
		'Conta: ' || nr_sequencia_p, ie_evento_p,
		nr_sequencia_p, ie_tipo_glosa_p, nr_seq_prestador_p,
		nr_seq_ocorrencia_p, '', nm_usuario_p,
		cd_estabelecimento_p, null);
end if;

/* 1215   Credenciado fora da abrangencia geografica do plano - Intercambio*/

if	(( ie_consistencia_w	= 'N') or (ie_area_coberta_w 	= 'N')) and
	((ie_tipo_processo_w	= 'I') or (ie_operadora_exec_w	= 'S')) then

	if	((pls_obter_se_scs_ativo	= 'I') or (coalesce(ie_tipo_intercambio_w,'X')	= 'E')) or (ie_tipo_processo_w	<> 'I') then
		CALL pls_gravar_glosa_tiss('1499',
			expressao_pck.obter_desc_expressao(966957), ie_evento_p,
			nr_sequencia_p, ie_tipo_glosa_p, nr_seq_prestador_p,
			nr_seq_ocorrencia_p, '', nm_usuario_p,
			cd_estabelecimento_p, null);
	end if;
elsif (ie_consistencia_w	= 'N') or (ie_area_coberta_w	= 'N')then

	if (ie_consistencia_w = 'S') then

		select	count(1)
		into STRICT	qt_extensao_area_seg_w
		from	pls_extensao_area
		where	nr_seq_segurado		= nr_seq_segurado_w
		and	trunc(clock_timestamp()) between dt_inicio_vigencia and coalesce(dt_fim_vigencia,trunc(clock_timestamp()));

		select	count(1)
		into STRICT	qt_extensao_area_contr_w
		from	pls_extensao_area
		where	((nr_seq_contrato		= nr_seq_contrato_w) or (nr_seq_plano		= nr_seq_plano_w))
		and	trunc(clock_timestamp()) between dt_inicio_vigencia and coalesce(dt_fim_vigencia,trunc(clock_timestamp()));

		if (qt_extensao_area_seg_w = 0) and (qt_extensao_area_contr_w = 0) then
			ie_consistencia_w	:= 'N';
		end if;
	end if;
	
	if (ie_area_coberta_w = 'N') then
	 ie_area_coberta_w := pls_obter_se_extensao( nr_seq_segurado_w,nr_seq_plano_w,nr_seq_prestador_p,nr_seq_contrato_w,nr_seq_congenere_w,clock_timestamp());
    end if;
	
	if (ie_consistencia_w = 'N') and (ie_area_coberta_w = 'N') and (coalesce(ie_carater_internacao_w,'X') <> 'U')	then  --Se for urgencia e emergencia nao deve consisitr a glosa 1215
		CALL pls_gravar_glosa_tiss(	'1215',
					expressao_pck.obter_desc_expressao(961198), ie_evento_p,
					nr_sequencia_p, ie_tipo_glosa_p, nr_seq_prestador_p,
					nr_seq_ocorrencia_p, '', nm_usuario_p,
					cd_estabelecimento_p, null);
	end if;
end if;

select	max(a.vl_cobrado_manual)
into STRICT	vl_cobrado_manual_w
from	pls_protocolo_conta a,
	pls_conta b
where	a.nr_sequencia = b.nr_seq_protocolo
and	b.nr_sequencia = nr_sequencia_p;

/* 1104 - Valor total do protocolo diferente do valor total das guias*/

if	((coalesce(vl_cobrado_w,0) <> coalesce(vl_cobrado_conta_w,0)) or (coalesce(vl_cobrado_w,0) <> coalesce(vl_cobrado_manual_w,0))) and (vl_cobrado_w > 0) then	
	CALL pls_gravar_glosa_tiss('1104',
		null , ie_evento_p,
		nr_sequencia_p, ie_tipo_glosa_p, nr_seq_prestador_p,
		nr_seq_ocorrencia_p, '', nm_usuario_p,
		cd_estabelecimento_p, null);
end if;

/*  1208  Solicitacao anterior a inclusao do Credenciado*/

if (dt_cadastro_w > dt_solicitacao_w) then
	CALL pls_gravar_glosa_tiss('1208',
		null , ie_evento_p,
		nr_sequencia_p, ie_tipo_glosa_p, nr_seq_prestador_p,
		nr_seq_ocorrencia_p, '', nm_usuario_p,
		cd_estabelecimento_p, null);
end if;

/*  1209   Solicitacao apos o desligamento do Credenciado*/

if (dt_exclusao_w < dt_solicitacao_w) then
	CALL pls_gravar_glosa_tiss('1209',
		null , ie_evento_p,
		nr_sequencia_p, ie_tipo_glosa_p, nr_seq_prestador_p,
		nr_seq_ocorrencia_p, '', nm_usuario_p,
		cd_estabelecimento_p, null);
end if;	

/*  1216  Especialidade nao cadastrada */
if (ie_exgie_especialidade_w = 'S') then
	CALL pls_gravar_glosa_tiss('1216', 
		ds_observacao_med_w, ie_evento_p,
		nr_sequencia_p, ie_tipo_glosa_p, nr_seq_prestador_p,
		nr_seq_ocorrencia_p, '', nm_usuario_p,
		cd_estabelecimento_p, null);
end if;
/*
commit; Nao pode haver commit em procedure intermediaria
*/
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_tiss_consistir_prestador ( nr_sequencia_p bigint, ie_tipo_glosa_p text, ie_evento_p text, nr_seq_prestador_p bigint, nr_seq_ocorrencia_p bigint, ds_parametro_um_p text, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

